source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_f648.16 = constant i32 -382906384
@global_var_1a29c.19 = constant [4 x i8] c"GET\00"
@global_var_1a2a0.21 = constant i32 47
@global_var_1663c.24 = constant i32 -449978364
@global_var_1a294.26 = constant i32 32
@global_var_1a26c.28 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1a284.30 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1a290.32 = constant [3 x i8] c"\0D\0A\00"
@global_var_1a2a4.34 = constant [9 x i8] c"Cookie: \00"
@global_var_1a2b0.36 = constant [3 x i8] c"; \00"
@global_var_1a2bc.38 = constant i32 59
@global_var_1a2b4.40 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1a2c0.42 = constant [5 x i8] c"http\00"
@global_var_1a2c8.44 = constant [5 x i8] c"url=\00"
@global_var_1a2d0.46 = constant [5 x i8] c"POST\00"
@global_var_1a2d8.48 = constant i32 39
@global_var_12e68.49 = constant i32 -439279616
@global_var_1a2dc.51 = constant i32 61
@global_var_23078.55 = global i32 0
@global_var_a050.56 = constant i32 -352321547
@global_var_1429c.57 = constant i32 -382906384
@global_var_2307c.59 = global i32 0
@global_var_23080.60 = local_unnamed_addr global i32 0
@global_var_23084.61 = local_unnamed_addr global i32 0
@global_var_23088.62 = local_unnamed_addr global i32 0
@global_var_2308c.63 = local_unnamed_addr global i32 0
@global_var_23090.64 = local_unnamed_addr global i32 0
@global_var_23094.65 = local_unnamed_addr global i32 0
@global_var_23098.66 = local_unnamed_addr global i32 0
@global_var_daec.72 = constant i32 -382906384
@global_var_def8.74 = constant i32 -382906384
@global_var_d124.76 = constant i32 -382906384
@global_var_caa8.79 = constant i32 -382906384
@global_var_c3f0.81 = constant i32 -382906384
@global_var_b4c0.83 = constant i32 -382906384
@global_var_bc58.85 = constant i32 -382906384
@global_var_aee0.87 = constant i32 -382906384
@global_var_a884.89 = constant i32 -382906384
@global_var_81cc.91 = constant i32 -382906384
@global_var_2365c.93 = global i32 0
@global_var_23664.105 = global i32 0
@global_var_1a2e0.107 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_2309c.111 = global i32 0
@global_var_23660.113 = global i32 0
@global_var_158f4.115 = constant i32 -382910336
@global_var_f120.116 = constant i32 -509607932
@global_var_f5c4.118 = constant i32 -382910352
@global_var_23040.120 = global i32 78076
@global_var_23038.122 = global i32 -1
@global_var_2366c.128 = local_unnamed_addr global i32 0
@global_var_2366a.129 = local_unnamed_addr global i32 0
@global_var_1a2f0.132 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_1a344.138 = constant [3 x i8] c"/.\00"
@global_var_1a320.140 = constant i32 62532
@global_var_f444.141 = constant i32 -382910224
@global_var_125b0.143 = constant i32 -442552176
@global_var_12650.146 = constant i32 -382906384
@global_var_12510.148 = constant i32 -442552176
@global_var_1a340.153 = constant i32 62508
@global_var_1a314.156 = constant i32 10
@global_var_1a300.159 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_230a4.172 = global i32 0
@global_var_230b0.174 = global i32 0
@global_var_230a8.176 = global i32 0
@global_var_230ac.178 = global i32 0
@global_var_1a358.184 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_107dc.194 = constant i32 -509607925
@global_var_23680.196 = global i32 0
@global_var_230e8.198 = global i32 0
@global_var_230b4.200 = global i32 0
@global_var_230e0.202 = global i32 0
@global_var_23678.209 = global i32 0
@global_var_2367c.211 = global i32 0
@global_var_230ba.214 = local_unnamed_addr global i32 0
@global_var_230bc.215 = local_unnamed_addr global i32 0
@global_var_230c0.216 = local_unnamed_addr global i32 0
@global_var_230c1.217 = local_unnamed_addr global i32 0
@global_var_230cc.219 = global i32 0
@global_var_230da.223 = local_unnamed_addr global i32 0
@global_var_1a37c.225 = constant [5 x i8] c"PMMV\00"
@global_var_1a384.227 = constant i32 387006810
@global_var_1a38c.229 = constant [6 x i8] c"TKXZT\00"
@global_var_1a394.231 = constant [6 x i8] c"CFOKL\00"
@global_var_1a39c.233 = constant i32 437918234
@global_var_1a3a4.235 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1a3ac.237 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1a3b4.239 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1a3c0.241 = constant i32 370216979
@global_var_1a3c8.243 = constant i32 269555223
@global_var_1a3d0.245 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1a2b8.247 = constant i32 0
@global_var_1a3d8.249 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1a3e4.251 = constant i32 370216979
@global_var_1a3ec.253 = constant [5 x i8] c"WQGP\00"
@global_var_1a3f4.255 = constant [5 x i8] c"RCQQ\00"
@global_var_1a3fc.257 = constant i32 1263486531
@global_var_1a408.259 = constant i32 320017171
@global_var_1a410.261 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1a41c.263 = constant i32 336860180
@global_var_1a424.265 = constant i32 370216979
@global_var_1a42c.267 = constant i32 324292169
@global_var_1a434.269 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1a444.271 = constant [7 x i8] c"OGKLQO\00"
@global_var_1a44c.273 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1a454.275 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1a460.277 = constant [6 x i8] c"EWGQV\00"
@global_var_1a468.279 = constant i32 1263486531
@global_var_1a470.281 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1a480.283 = constant [5 x i8] c"W@LV\00"
@global_var_1a488.285 = constant i32 324292169
@global_var_1a490.287 = constant i32 390551160
@global_var_1a498.289 = constant i32 387009354
@global_var_1a4a0.291 = constant [6 x i8] c"HT@XF\00"
@global_var_1a4a8.293 = constant [5 x i8] c"CLIM\00"
@global_var_1a4b0.295 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1a4b8.297 = constant i32 1867011861
@global_var_1a4c8.299 = constant i32 1867011861
@global_var_1a4d8.301 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1a4e0.303 = constant [5 x i8] c"KIU@\00"
@global_var_1a4e8.305 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1a4f4.307 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1a4fc.309 = constant i32 303174162
@global_var_1a508.311 = constant i32 320017171
@global_var_1a510.313 = constant i32 319820054
@global_var_1a3b8.315 = constant [5 x i8] c"VGAJ\00"
@global_var_1a518.317 = constant [7 x i8] c"OMVJGP\00"
@global_var_1a520.319 = constant [7 x i8] c"DWAIGP\00"
@global_var_230c4.320 = local_unnamed_addr global i32 0
@global_var_230c8.321 = local_unnamed_addr global i32 0
@global_var_230c2.322 = local_unnamed_addr global i32 0
@global_var_230d0.324 = local_unnamed_addr global i32 0
@global_var_230dc.325 = local_unnamed_addr global i32 0
@global_var_108dc.327 = constant i32 -382910352
@global_var_1a530.330 = constant [5 x i8] c"ogin\00"
@global_var_1a538.332 = constant [8 x i8] c"assword\00"
@global_var_1a549.334 = constant i32 1377827839
@global_var_1a540.336 = constant i32 2095871
@global_var_1a528.341 = constant [6 x i8] c"enter\00"
@global_var_23688.343 = global i32 0
@global_var_23048.346 = global i32 -559038737
@global_var_1a54c.350 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_236a0.352 = local_unnamed_addr global i32 0
@global_var_236a4.353 = local_unnamed_addr global i32 0
@global_var_1a55c.355 = constant i32 42786
@global_var_236a8.356 = local_unnamed_addr global i32 0
@global_var_236ac.357 = local_unnamed_addr global i32 0
@global_var_23718.358 = local_unnamed_addr global i32 0
@global_var_2371c.359 = local_unnamed_addr global i32 0
@global_var_1a560.361 = constant i32 36254
@global_var_23720.362 = local_unnamed_addr global i32 0
@global_var_23724.363 = local_unnamed_addr global i32 0
@global_var_1a564.365 = constant i32 1448168270
@global_var_23698.366 = local_unnamed_addr global i32 0
@global_var_2369c.367 = local_unnamed_addr global i32 0
@global_var_1a574.369 = constant i32 1381389898
@global_var_236b4.370 = local_unnamed_addr global i32 0
@global_var_236b0.371 = local_unnamed_addr global i32 0
@global_var_1a594.373 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_236b8.374 = local_unnamed_addr global i32 0
@global_var_236bc.375 = local_unnamed_addr global i32 0
@global_var_1a59c.377 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_236c0.378 = local_unnamed_addr global i32 0
@global_var_236c4.379 = local_unnamed_addr global i32 0
@global_var_1a5a4.381 = constant i32 1195772418
@global_var_236c8.382 = local_unnamed_addr global i32 0
@global_var_236cc.383 = local_unnamed_addr global i32 0
@global_var_1a5b0.385 = constant [5 x i8] c"\0DDF\22\00"
@global_var_236d4.386 = local_unnamed_addr global i32 0
@global_var_236d0.387 = local_unnamed_addr global i32 0
@global_var_1a5b8.389 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_236d8.390 = local_unnamed_addr global i32 0
@global_var_236dc.391 = local_unnamed_addr global i32 0
@global_var_1a5c0.393 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_236e0.394 = local_unnamed_addr global i32 0
@global_var_236e4.395 = local_unnamed_addr global i32 0
@global_var_1a5cc.397 = constant i32 1836214128
@global_var_236e8.398 = local_unnamed_addr global i32 0
@global_var_236ec.399 = local_unnamed_addr global i32 0
@global_var_1a5dc.401 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_236f0.402 = local_unnamed_addr global i32 0
@global_var_236f4.403 = local_unnamed_addr global i32 0
@global_var_1a5e8.405 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_236f8.406 = local_unnamed_addr global i32 0
@global_var_236fc.407 = local_unnamed_addr global i32 0
@global_var_1a5f4.409 = constant i32 437738110
@global_var_23704.410 = local_unnamed_addr global i32 0
@global_var_23700.411 = local_unnamed_addr global i32 0
@global_var_1a618.413 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_23708.414 = local_unnamed_addr global i32 0
@global_var_2370c.415 = local_unnamed_addr global i32 0
@global_var_1a624.417 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_23710.418 = local_unnamed_addr global i32 0
@global_var_23714.419 = local_unnamed_addr global i32 0
@global_var_1a630.421 = constant [7 x i8] c"QJGNN\22\00"
@global_var_23728.422 = local_unnamed_addr global i32 0
@global_var_2372c.423 = local_unnamed_addr global i32 0
@global_var_1a638.425 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_23730.426 = local_unnamed_addr global i32 0
@global_var_23734.427 = local_unnamed_addr global i32 0
@global_var_1a640.429 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_23738.430 = local_unnamed_addr global i32 0
@global_var_2373c.431 = local_unnamed_addr global i32 0
@global_var_1a648.433 = constant [4 x i8] c"QJ\22\00"
@global_var_23744.434 = local_unnamed_addr global i32 0
@global_var_23740.435 = local_unnamed_addr global i32 0
@global_var_1a64c.437 = constant i32 1280000013
@global_var_23748.438 = local_unnamed_addr global i32 0
@global_var_2374c.439 = local_unnamed_addr global i32 0
@global_var_1a660.441 = constant i32 1668311919
@global_var_23754.442 = local_unnamed_addr global i32 0
@global_var_23750.443 = local_unnamed_addr global i32 0
@global_var_1a67c.445 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_23758.446 = local_unnamed_addr global i32 0
@global_var_2375c.447 = local_unnamed_addr global i32 0
@global_var_1a688.449 = constant i32 1280000013
@global_var_23760.450 = local_unnamed_addr global i32 0
@global_var_23764.451 = local_unnamed_addr global i32 0
@global_var_1a69c.453 = constant i32 1280000013
@global_var_23768.454 = local_unnamed_addr global i32 0
@global_var_2376c.455 = local_unnamed_addr global i32 0
@global_var_1a6b4.457 = constant i32 1464693110
@global_var_23774.458 = local_unnamed_addr global i32 0
@global_var_23770.459 = local_unnamed_addr global i32 0
@global_var_1a6cc.461 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_23778.462 = local_unnamed_addr global i32 0
@global_var_2377c.463 = local_unnamed_addr global i32 0
@global_var_1a6e0.465 = constant i32 1196376908
@global_var_23780.466 = local_unnamed_addr global i32 0
@global_var_23784.467 = local_unnamed_addr global i32 0
@global_var_1a6f0.469 = constant i32 1280068961
@global_var_23788.470 = local_unnamed_addr global i32 0
@global_var_1a708.472 = constant i32 1195458915
@global_var_23790.473 = local_unnamed_addr global i32 0
@global_var_1a75c.475 = constant i32 1195458915
@global_var_23798.476 = local_unnamed_addr global i32 0
@global_var_1a780.478 = constant i32 1447841121
@global_var_237a0.479 = local_unnamed_addr global i32 0
@global_var_1a7b4.481 = constant i32 1633044305
@global_var_237a8.482 = local_unnamed_addr global i32 0
@global_var_1a7c4.484 = constant i32 1346651984
@global_var_237b0.485 = local_unnamed_addr global i32 0
@global_var_1a7d0.487 = constant i32 1128353102
@global_var_237b8.488 = local_unnamed_addr global i32 0
@global_var_1a7dc.490 = constant i32 257312593
@global_var_237c0.491 = local_unnamed_addr global i32 0
@global_var_1a7ec.493 = constant i32 1447841089
@global_var_237c8.494 = local_unnamed_addr global i32 0
@global_var_1a800.496 = constant i32 1279479894
@global_var_237d0.497 = local_unnamed_addr global i32 0
@global_var_1a814.499 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_237d8.500 = local_unnamed_addr global i32 0
@global_var_1a6fc.502 = constant i32 1380403017
@global_var_237e0.503 = local_unnamed_addr global i32 0
@global_var_1a820.505 = constant i32 1280068929
@global_var_237e8.506 = local_unnamed_addr global i32 0
@global_var_1a830.508 = constant i32 1414547281
@global_var_237f0.509 = local_unnamed_addr global i32 0
@global_var_1a844.511 = constant i32 1414547281
@global_var_237f8.512 = local_unnamed_addr global i32 0
@global_var_1a860.514 = constant i32 1264078191
@global_var_23800.515 = local_unnamed_addr global i32 0
@global_var_1a8d0.517 = constant i32 1264078191
@global_var_23808.518 = local_unnamed_addr global i32 0
@global_var_1a940.520 = constant i32 1264078191
@global_var_23810.521 = local_unnamed_addr global i32 0
@global_var_1a9b0.523 = constant i32 1264078191
@global_var_23818.524 = local_unnamed_addr global i32 0
@global_var_1aa20.526 = constant i32 1264078191
@global_var_23820.527 = local_unnamed_addr global i32 0
@global_var_2351c.529 = global i32 0
@global_var_2383c.532 = local_unnamed_addr global i32 0
@global_var_23828.534 = local_unnamed_addr global i32 0
@global_var_23860.536 = local_unnamed_addr global i32 0
@global_var_23844.537 = local_unnamed_addr global i32 0
@global_var_230ec.539 = global i32 0
@global_var_230f0.541 = global i32 0
@global_var_1aa98.544 = constant [10 x i8] c"/dev/null\00"
@global_var_23834.546 = local_unnamed_addr global i32 0
@global_var_23004.549 = global i32 33036
@global_var_23008.551 = global i32 32968
@global_var_139b4.552 = constant i32 -352321519
@global_var_13a64.559 = constant i32 -450007036
@global_var_23838.562 = local_unnamed_addr global i32 0
@global_var_23108.564 = global i32 0
@global_var_2310c.566 = global i32 0
@global_var_23510.572 = global i32 0
@global_var_23514.576 = global i32 0
@global_var_1aaa2.580 = constant i32 35062016
@global_var_230fc.582 = global i32 0
@global_var_230f8.584 = global i32 0
@global_var_23100.585 = global i32 0
@global_var_15110.590 = constant i32 -516948194
@global_var_15624.601 = constant i32 -450007036
@global_var_15780.603 = constant i32 -509607923
@global_var_1aacc.606 = constant i32 -1
@global_var_1aac4.608 = constant i32 2147483647
@global_var_162ac.611 = constant i32 -449978364
@global_var_23518.615 = global i32 0
@global_var_1aad4.617 = constant [10 x i8] c"LINUX_2.6\00"
@global_var_1aae0.619 = constant [21 x i8] c"__vdso_clock_gettime\00"
@global_var_16574.621 = constant i32 -382910336
@global_var_2304c.625 = global i32 0
@global_var_167c4.626 = constant i32 -484573183
@global_var_23050.629 = global i32 0
@global_var_16818.630 = constant i32 -509595648
@global_var_23054.632 = global i32 0
@global_var_1688c.633 = constant i32 -300085392
@global_var_23864.635 = global i32 0
@global_var_23870.636 = local_unnamed_addr global i32 0
@global_var_23868.637 = local_unnamed_addr global i32 0
@global_var_2386c.639 = local_unnamed_addr global i32 0
@global_var_23840.641 = local_unnamed_addr global i32 0
@global_var_23520.643 = global i32 0
@global_var_23848.645 = global i32 0
@global_var_1ab02.647 = constant i32 -1
@global_var_1ab01.649 = constant i32 -1
@global_var_1aaf8.651 = constant i32 67240192
@global_var_2363c.656 = global i32 0
@global_var_23638.659 = global i32 0
@global_var_23644.661 = global i32 0
@global_var_23830.664 = local_unnamed_addr global i32 0
@global_var_23640.666 = global i32 0
@global_var_17e50.686 = constant i32 -382910352
@global_var_2364c.688 = global i32 0
@global_var_23654.691 = global i32 0
@global_var_23650.694 = global i32 0
@global_var_23010.696 = global i32 0
@global_var_23058.3 = external global i8*
@global_var_23074.53 = external global i8*
@global_var_23075.70 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_23044.124 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_23668.127 = global i16* null
@global_var_230e4.204 = global i16* null
@global_var_230b8.213 = external global i8*
@global_var_230d8.220 = local_unnamed_addr global i8 0
@global_var_230ce.221 = local_unnamed_addr global i16 0
@global_var_230d9.222 = local_unnamed_addr global i8 0
@global_var_2382c.531 = external global i8*

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b4 = load i32, i32* @r0, align 4
  ret i32 %v3_80b4
}

define i32 @function_80c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80c8 = load i32, i32* @r4, align 4
  store i32 %v3_80c8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_23058.3 to i32), i32* %r4.global-to-local, align 4
  %v2_80d0 = load i8, i8* bitcast (i8** @global_var_23058.3 to i8*), align 4
  %v2_80d4 = icmp eq i8 %v2_80d0, 0
  br i1 %v2_80d4, label %dec_label_pc_80dc, label %dec_label_pc_80f8

dec_label_pc_80dc:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80ec = call i32 @function_8104()
  store i32 %v3_80ec, i32* @r0, align 4
  %v2_80f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_80f4 = inttoptr i32 %v2_80f4 to i8*
  store i8 1, i8* %v3_80f4, align 1
  %v2_80f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80f8

dec_label_pc_80f8:                                ; preds = %entry, %dec_label_pc_80dc
  %v2_80f8 = phi i32 [ %v3_80c8, %entry ], [ %v2_80f8.pre, %dec_label_pc_80dc ]
  store i32 %v2_80f8, i32* %r4.global-to-local, align 4
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc

; uselistorder directives
  uselistorder i8** @global_var_23058.3, { 1, 0 }
  uselistorder label %dec_label_pc_80f8, { 1, 0 }
}

define i32 @function_8104() local_unnamed_addr {
dec_label_pc_8104:
  %v0_8108 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8108, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_8104
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_8104
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8130 = load i32, i32* inttoptr (i32 143372 to i32*), align 4
  %v2_8134 = icmp eq i32 %v2_8130, 0
  br i1 %v2_8134, label %dec_label_pc_814c, label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_814c

dec_label_pc_814c:                                ; preds = %bb3, %dec_label_pc_813c
  ret i32 143372

; uselistorder directives
  uselistorder label %dec_label_pc_814c, { 1, 0 }
}

define i32 @entry_point() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v3_8188 = call i32 @function_8190(i32* nonnull %stack_var_0, i32 0)
  ret i32 %v3_8188
}

define i32 @function_8190(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8190:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_8190 = load i32, i32* @lr, align 4
  %v2_81a0 = load i32, i32* %arg1, align 4
  %v1_81a4 = add i32 %tmp, 4
  %v7_81bc = inttoptr i32 %v1_81a4 to i32*
  %v8_81bc = call i32 @function_137d0(i32 ptrtoint (i32* @global_var_f648.16 to i32), i32 %v2_81a0, i32* %v7_81bc, i32 32948, i32 107080, i32 0, i32 %v0_8190)
  ret i32 %v8_81bc
}

define i32 @function_81cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81cc = load i32, i32* @r4, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81f8 = inttoptr i32 %arg4 to i32*
  %v6_81f8 = call i32 @function_9f04(i32 %arg3, i32* %v5_81f8, i32 21, i32 0, i32 %arg2)
  %v0_81fc = load i32, i32* @r5, align 4
  store i32 %v0_81fc, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_8208 = load i32, i32* @r4, align 4
  store i32 %v0_8208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32), i32* %r3.global-to-local, align 4
  %v6_8210 = inttoptr i32 %v0_81fc to i32*
  %v7_8210 = call i32 @function_9f04(i32 %v0_8208, i32* %v6_8210, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32), i32 %v6_81f8)
  %v0_8214 = load i32, i32* @r5, align 4
  store i32 %v0_8214, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8210, i32* @sl, align 4
  %v0_8224 = load i32, i32* @r4, align 4
  store i32 %v0_8224, i32* %r0.global-to-local, align 4
  %v5_8228 = inttoptr i32 %v0_8214 to i32*
  %v6_8228 = call i32 @function_9f04(i32 %v0_8224, i32* %v5_8228, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_822c = load i32, i32* @r5, align 4
  store i32 %v0_822c, i32* %r1.global-to-local, align 4
  store i32 %v6_8228, i32* @r8, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_8238 = load i32, i32* @r4, align 4
  store i32 %v0_8238, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2a0.21 to i32), i32* %r3.global-to-local, align 4
  %v5_8240 = inttoptr i32 %v0_822c to i32*
  %v6_8240 = call i32 @function_9f04(i32 %v0_8238, i32* %v5_8240, i32 22, i32 ptrtoint (i32* @global_var_1a2a0.21 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8244 = load i32, i32* @r5, align 4
  store i32 %v0_8244, i32* %r1.global-to-local, align 4
  store i32 %v6_8240, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8250 = load i32, i32* @r4, align 4
  store i32 %v0_8250, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8258 = inttoptr i32 %v0_8244 to i32*
  %v5_8258 = call i32 @function_a430(i32 %v0_8250, i32* %v4_8258, i32 24, i32 1)
  %v0_825c = load i32, i32* @r5, align 4
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8258, i32* @r6, align 4
  %v0_826c = load i32, i32* @r4, align 4
  store i32 %v0_826c, i32* %r0.global-to-local, align 4
  %v4_8270 = inttoptr i32 %v0_825c to i32*
  %v5_8270 = call i32 @function_a430(i32 %v0_826c, i32* %v4_8270, i32 7, i32 80)
  %v2_8278 = ptrtoint i32* %stack_var_-20813 to i32
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_828c = urem i32 %v5_8270, 65536
  store i32 %v3_828c, i32* %r3.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_829c = bitcast i32* %stack_var_-20813 to i8*
  %v4_829c = call i32 @function_16064(i8* %v3_829c, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread13, label %bb

bb:                                               ; preds = %dec_label_pc_81cc
  %v1_82a4 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb157, label %dec_label_pc_82c4

.thread13:                                        ; preds = %dec_label_pc_81cc
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb157:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb157, %dec_label_pc_82e4, %.thread13, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread13 ], [ %v4_829c, %bb157 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81cc, i32* %r4.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @function_12e40(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @r8, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @function_12e40(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sl, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @function_12e40(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb158

bb158:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 356
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb158, %bb162
  %v0_82fc = load i32, i32* @sl, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @function_12e40(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sl, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb159, label %bb160

bb159:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb160

bb160:                                            ; preds = %dec_label_pc_8314, %bb159
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb159 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb159 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %bb160
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb162

bb161:                                            ; preds = %bb160
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb162

bb162:                                            ; preds = %._crit_edge, %bb161
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb161 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @function_125b0(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @function_125b0(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @function_125b0(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @function_125b0(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @function_125b0(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @function_125b0(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @function_125b0(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @function_125b0(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @function_125b0(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @function_125b0(i32 45)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 255
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 256
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 256
  br i1 %v5_8394, label %thread-pre-split, label %bb163

bb163:                                            ; preds = %dec_label_pc_8340
  store i32 256, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb163
  %v0_839c = phi i32 [ 256, %bb163 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @function_125b0(i32 46)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @function_13d28(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp164 = icmp slt i32 %v0_839c, 1
  br i1 %tmp164, label %dec_label_pc_84d4, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* @sb, align 4
  %v2_83f0 = and i32 %arg1, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  %v5_83f0 = mul i32 %arg1, 24
  %v2_83f4 = add i32 %v5_83f0, %arg2
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9df8, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e14, %dec_label_pc_9df8 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* @sb, align 4
  store i32 %v0_83e0, i32* %r0.global-to-local, align 4
  %v2_83e4 = call i32 @function_1367c(i32 %v0_83e0, i32 %arg1)
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  store i32 %v2_83f4, i32* @r6, align 4
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @fp, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r7, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v2_840c = inttoptr i32 %v1_83fc to i8*
  %v3_840c = call i32 @function_12e68(i8* %v2_840c, i32 %v0_8404)
  store i32 %v3_840c, i32* %r0.global-to-local, align 4
  %v0_8410 = load i32, i32* @r5, align 4
  %v1_8410 = add i32 %v0_8410, 532
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v4_8410 = zext i8 %v3_8410 to i32
  store i32 %v4_8410, i32* %r3.global-to-local, align 4
  %v2_8414 = icmp ugt i8 %v3_8410, 46
  store i1 %v2_8414, i1* %cpsr_c.global-to-local, align 1
  %v7_8414 = icmp eq i8 %v3_8410, 47
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8414, label %dec_label_pc_8440, label %dec_label_pc_841c

dec_label_pc_841c:                                ; preds = %dec_label_pc_83cc
  %v0_841c = load i32, i32* @fp, align 4
  store i32 %v0_841c, i32* %r0.global-to-local, align 4
  %v1_8420 = inttoptr i32 %v0_841c to i8*
  %v2_8420 = call i32 @function_12e40(i8* %v1_8420)
  store i32 %v2_8420, i32* %r2.global-to-local, align 4
  %v0_8428 = load i32, i32* @r5, align 4
  %v1_842c = add i32 %v0_8428, 533
  store i32 %v1_842c, i32* %r0.global-to-local, align 4
  %v0_8430 = load i32, i32* @fp, align 4
  store i32 %v0_8430, i32* %r1.global-to-local, align 4
  %v3_8434 = inttoptr i32 %v1_842c to i8*
  %v4_8434 = call i32 @function_15f18(i8* %v3_8434, i32 %v0_8430, i32 %v2_8420)
  store i32 %v4_8434, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_843c = load i32, i32* @r5, align 4
  %v3_843c = add i32 %v2_843c, 532
  %v4_843c = inttoptr i32 %v3_843c to i8*
  store i8 47, i8* %v4_843c, align 1
  %v0_8444.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_841c
  %v0_8444 = phi i32 [ %v0_8410, %dec_label_pc_83cc ], [ %v0_8444.pre, %dec_label_pc_841c ]
  %v0_8440 = load i32, i32* @sl, align 4
  store i32 %v0_8440, i32* %r1.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, 1440
  store i32 %v1_8444, i32* @r0, align 4
  %v2_8448 = inttoptr i32 %v1_8444 to i8*
  %v3_8448 = call i32 @function_12e68(i8* %v2_8448, i32 %v0_8440)
  %v0_844c = load i32, i32* @r5, align 4
  %v0_8450 = load i32, i32* @sl, align 4
  store i32 %v0_8450, i32* %r1.global-to-local, align 4
  %v1_8454 = add i32 %v0_844c, 1431
  store i32 %v1_8454, i32* @r0, align 4
  %v2_8458 = inttoptr i32 %v1_8454 to i8*
  %v3_8458 = call i32 @function_12e68(i8* %v2_8458, i32 %v0_8450)
  %v0_845c = load i32, i32* @r5, align 4
  %v1_8460 = add i32 %v0_845c, 789
  store i32 %v1_8460, i32* @r0, align 4
  %v0_8464 = load i32, i32* @r8, align 4
  store i32 %v0_8464, i32* %r1.global-to-local, align 4
  %v2_8468 = inttoptr i32 %v1_8460 to i8*
  %v3_8468 = call i32 @function_12e68(i8* %v2_8468, i32 %v0_8464)
  store i32 %v3_8468, i32* %r0.global-to-local, align 4
  %v0_846c = load i32, i32* @r6, align 4
  %v1_846c = add i32 %v0_846c, 20
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* %r3.global-to-local, align 4
  %v2_8470 = icmp ugt i8 %v3_846c, 30
  store i1 %v2_8470, i1* %cpsr_c.global-to-local, align 1
  %v7_8470 = icmp eq i8 %v3_846c, 31
  store i1 %v7_8470, i1* %cpsr_z.global-to-local, align 1
  %v2_8474 = xor i1 %v7_8470, true
  %v3_8474 = and i1 %v2_8470, %v2_8474
  br i1 %v3_8474, label %dec_label_pc_8498, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8440
  %v1_8478 = add i32 %v0_846c, 16
  %v2_8478 = inttoptr i32 %v1_8478 to i32*
  %v3_8478 = load i32, i32* %v2_8478, align 4
  store i32 %v3_8478, i32* %r0.global-to-local, align 4
  %v1_847c = call i32 @function_154ec(i32 %v3_8478)
  store i32 %v1_847c, i32* %r0.global-to-local, align 4
  store i32 %v1_847c, i32* @r4, align 4
  %v0_8484 = call i32 @function_1008c()
  store i32 %v0_8484, i32* %r0.global-to-local, align 4
  %v0_8488 = load i32, i32* @r6, align 4
  %v1_8488 = add i32 %v0_8488, 20
  %v2_8488 = inttoptr i32 %v1_8488 to i8*
  %v3_8488 = load i8, i8* %v2_8488, align 1
  %v4_8488 = zext i8 %v3_8488 to i32
  store i32 %v4_8488, i32* %r3.global-to-local, align 4
  %v0_848c = load i32, i32* @r4, align 4
  %v3_848c = add nsw i32 %v4_8488, -1
  %v4_848c = shl i32 1, %v3_848c
  %v5_848c = and i32 %v4_848c, %v0_8484
  %v6_848c = icmp ne i32 %v5_848c, 0
  store i1 %v6_848c, i1* %cpsr_c.global-to-local, align 1
  %v7_848c = lshr i32 %v0_8484, %v4_8488
  %v8_848c = add i32 %v7_848c, %v0_848c
  store i32 %v8_848c, i32* %r0.global-to-local, align 4
  %v1_8490 = call i32 @function_15344(i32 %v8_848c)
  store i32 %v1_8490, i32* %r0.global-to-local, align 4
  %v1_8494 = load i32, i32* @r5, align 4
  %v2_8494 = add i32 %v1_8494, 16
  %v3_8494 = inttoptr i32 %v2_8494 to i32*
  store i32 %v1_8490, i32* %v3_8494, align 4
  br label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8440, %dec_label_pc_8478
  %v0_8498 = call i32 @function_1008c()
  %v3_84a4 = udiv i32 %v0_8498, 5
  store i32 %v3_84a4, i32* %r2.global-to-local, align 4
  store i32 %v3_84a4, i32* %r3.global-to-local, align 4
  %v2_84b0 = sub i32 %v0_8498, %v3_84a4
  store i32 %v2_84b0, i32* %r0.global-to-local, align 4
  %v7_84b4 = icmp eq i32 %v2_84b0, 4
  store i1 %v7_84b4, i1* %cpsr_z.global-to-local, align 1
  %v5_84b8 = and i32 %v2_84b0, 1073741824
  %v6_84b8 = icmp ne i32 %v5_84b8, 0
  store i1 %v6_84b8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84b0, label %dec_label_pc_9df8 [
    i32 0, label %dec_label_pc_9eac
    i32 1, label %dec_label_pc_9e80
    i32 2, label %dec_label_pc_9ed8
    i32 3, label %dec_label_pc_9dd0
    i32 4, label %dec_label_pc_9e40
  ]

dec_label_pc_84d4:                                ; preds = %thread-pre-split
  %v1_84e4 = add i32 %v2_83b0, 1452
  store i32 %v1_84e4, i32* %ip.global-to-local, align 4
  %v2_84e8 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_84e8, i32* @lr, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_84f4.preheader:                      ; preds = %dec_label_pc_84d4, %dec_label_pc_9e1c
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e30, %dec_label_pc_9e1c ], [ %v2_84e8, %dec_label_pc_84d4 ]
  %stack_var_-20868.0.ph = phi i32 [ %v1_9e2c, %dec_label_pc_9e1c ], [ %v1_84e4, %dec_label_pc_84d4 ]
  %v2_865c = ptrtoint i32* %stack_var_-144 to i32
  %v2_8674 = ptrtoint i32* %stack_var_-44 to i32
  %v2_86bc = ptrtoint i32* %stack_var_-76 to i32
  %v2_86d8 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88b8 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c14 = icmp eq i32 %v6_81f8, 0
  %v1_8b10 = inttoptr i32 %v6_81f8 to i8*
  %v2_8740 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8744 = ptrtoint i32* %stack_var_-204 to i32
  %v2_8748 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8828 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8834 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_84f4

dec_label_pc_84f4:                                ; preds = %dec_label_pc_8720, %dec_label_pc_8554, %dec_label_pc_8718, %dec_label_pc_87b4, %dec_label_pc_84f4.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_84f8 = call i32 @function_165ec(i32* null)
  store i32 %v2_84f8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 20680, i32* %ip.global-to-local, align 4
  %v2_8524213 = load i32, i32* @sp, align 4
  %v3_8524214 = add i32 %v2_8524213, 20680
  %v4_8524215 = inttoptr i32 %v3_8524214 to i32*
  store i32 0, i32* %v4_8524215, align 4
  br label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_8510.dec_label_pc_8510_crit_edge:    ; preds = %dec_label_pc_84f4, %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  %v0_8510.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8514 = add i32 %v0_8510.pre, 4
  store i32 %v1_8514, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_851c = add i32 %v0_8510.pre, 20676
  store i32 %v1_851c, i32* %ip.global-to-local, align 4
  %v7_8520 = icmp eq i32 %v1_8514, 128
  %v2_8524 = load i32, i32* @sp, align 4
  %v3_8524 = add i32 %v2_8524, %v1_851c
  %v4_8524 = inttoptr i32 %v3_8524 to i32*
  store i32 0, i32* %v4_8524, align 4
  br i1 %v7_8520, label %dec_label_pc_852c, label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_852c:                                ; preds = %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_8530 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8530, i32* %stack_var_-332, align 4
  %v0_8534 = load i32, i32* %r3.global-to-local, align 4
  %v1_853c216 = add i32 %v0_8534, -120
  store i32 %v1_853c216, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544217 = add i32 %v0_8534, 20424
  store i32 %v1_8544217, i32* %r1.global-to-local, align 4
  %v7_8548218 = icmp eq i32 %v1_853c216, 128
  %v2_854c219 = load i32, i32* @sp, align 4
  %v3_854c220 = add i32 %v2_854c219, %v1_8544217
  %v4_854c221 = inttoptr i32 %v3_854c220 to i32*
  store i32 0, i32* %v4_854c221, align 4
  br i1 %v7_8548218, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8538.dec_label_pc_8538_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8538.dec_label_pc_8538_crit_edge
  %v0_8538.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_853c = add i32 %v0_8538.pre, 4
  store i32 %v1_853c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544 = add i32 %v0_8538.pre, 20548
  store i32 %v1_8544, i32* %r1.global-to-local, align 4
  %v7_8548 = icmp eq i32 %v1_853c, 128
  %v2_854c = load i32, i32* @sp, align 4
  %v3_854c = add i32 %v2_854c, %v1_8544
  %v4_854c = inttoptr i32 %v3_854c to i32*
  store i32 0, i32* %v4_854c, align 4
  br i1 %v7_8548, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8554:                                ; preds = %dec_label_pc_8538.dec_label_pc_8538_crit_edge, %dec_label_pc_852c
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v1_8558 = load i32, i32* %r0.global-to-local, align 4
  %v3_8558 = icmp uge i32 %v0_839c, %v1_8558
  store i1 %v3_8558, i1* %cpsr_c.global-to-local, align 1
  %v9_8558 = icmp eq i32 %v0_839c, %v1_8558
  store i1 %v9_8558, i1* %cpsr_z.global-to-local, align 1
  %v7_855c = icmp sgt i32 %v0_839c, %v1_8558
  br i1 %v7_855c, label %dec_label_pc_8560, label %dec_label_pc_84f4

dec_label_pc_8560:                                ; preds = %dec_label_pc_8554
  store i32 %stack_var_-20868.0.ph, i32* @sl, align 4
  store i32 %v1_8558, i32* @r8, align 4
  store i32 %stack_var_-20868.0.ph, i32* @r6, align 4
  store i32 %v1_8558, i32* @r7, align 4
  br label %dec_label_pc_85d4

dec_label_pc_8574:                                ; preds = %dec_label_pc_85e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_8574 = icmp eq i8 %v3_85d4, 2
  store i1 %v7_8574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8574, label %dec_label_pc_8cb4, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_8574
  %v2_857c = icmp ugt i8 %v3_85d4, 3
  store i1 %v2_857c, i1* %cpsr_c.global-to-local, align 1
  %v7_857c = icmp eq i8 %v3_85d4, 4
  store i1 %v7_857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_857c, label %dec_label_pc_8884, label %dec_label_pc_8584

dec_label_pc_8584:                                ; preds = %dec_label_pc_857c
  %v1_8584 = add nsw i32 %v4_85d4, -6
  %v2_8584 = icmp ugt i8 %v3_85d4, 5
  store i1 %v2_8584, i1* %cpsr_c.global-to-local, align 1
  %v7_8584 = icmp eq i8 %v3_85d4, 6
  store i1 %v7_8584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8584, label %dec_label_pc_8d4c, label %dec_label_pc_858c

dec_label_pc_858c:                                ; preds = %dec_label_pc_8584
  %v2_858c = icmp ugt i8 %v3_85d4, 6
  store i1 %v2_858c, i1* %cpsr_c.global-to-local, align 1
  %v7_858c = icmp eq i8 %v3_85d4, 7
  store i1 %v7_858c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_858c, label %dec_label_pc_8f84, label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_858c
  %v2_8594 = icmp ugt i8 %v3_85d4, 9
  store i1 %v2_8594, i1* %cpsr_c.global-to-local, align 1
  %v7_8594 = icmp eq i8 %v3_85d4, 10
  store i1 %v7_8594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8594, label %dec_label_pc_8fd8, label %dec_label_pc_859c

dec_label_pc_859c:                                ; preds = %dec_label_pc_8594
  %v1_859c = add nsw i32 %v4_85d4, -11
  %v2_859c = icmp ugt i8 %v3_85d4, 10
  store i1 %v2_859c, i1* %cpsr_c.global-to-local, align 1
  %v7_859c = icmp eq i8 %v3_85d4, 11
  store i1 %v7_859c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_859c, label %dec_label_pc_9574, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8cb4, %dec_label_pc_859c
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_85d4, align 1
  %v0_85ac = load i32, i32* @r6, align 4
  %v1_85ac = add i32 %v0_85ac, -1452
  %v2_85ac = inttoptr i32 %v1_85ac to i32*
  %v3_85ac = load i32, i32* %v2_85ac, align 4
  store i32 %v3_85ac, i32* @r0, align 4
  %v1_85b0 = call i32 @function_1663c(i32 %v3_85ac)
  store i32 %v1_85b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85b8 = load i32, i32* @r6, align 4
  %v2_85b8 = add i32 %v1_85b8, -1452
  %v3_85b8 = inttoptr i32 %v2_85b8 to i32*
  store i32 -1, i32* %v3_85b8, align 4
  br label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_8d4c, %dec_label_pc_86e0, %dec_label_pc_85f0, %dec_label_pc_8fd8, %dec_label_pc_8f84, %dec_label_pc_9574, %bb168, %dec_label_pc_85a4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85c0 = load i32, i32* @r7, align 4
  %v1_85c0 = add i32 %v0_85c0, 1
  store i32 %v1_85c0, i32* @r7, align 4
  %v0_85c4 = load i32, i32* @r6, align 4
  %v3_85c8 = icmp uge i32 %v1_85c0, %v0_839c
  store i1 %v3_85c8, i1* %cpsr_c.global-to-local, align 1
  %v9_85c8 = icmp eq i32 %v1_85c0, %v0_839c
  store i1 %v9_85c8, i1* %cpsr_z.global-to-local, align 1
  %v1_85cc = add i32 %v0_85c4, 3140
  store i32 %v1_85cc, i32* @r6, align 4
  br i1 %v9_85c8, label %dec_label_pc_85bc.dec_label_pc_8718_crit_edge, label %dec_label_pc_85d4

dec_label_pc_85bc.dec_label_pc_8718_crit_edge:    ; preds = %dec_label_pc_85bc
  %v0_8718.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8718

dec_label_pc_85d4:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc, %dec_label_pc_8560
  %v3_8878 = phi i32 [ %stack_var_-20868.0.ph, %dec_label_pc_8560 ], [ %v1_85cc, %dec_label_pc_85bc ], [ %v1_8710, %dec_label_pc_8700 ]
  %v1_85d4 = add i32 %v3_8878, -1448
  %v2_85d4 = inttoptr i32 %v1_85d4 to i8*
  %v3_85d4 = load i8, i8* %v2_85d4, align 1
  %v4_85d4 = zext i8 %v3_85d4 to i32
  store i32 %v4_85d4, i32* %r3.global-to-local, align 4
  %v2_85dc = icmp ne i8 %v3_85d4, 0
  store i1 %v2_85dc, i1* %cpsr_c.global-to-local, align 1
  %v6_85dc = icmp eq i8 %v3_85d4, 0
  %v7_85dc = icmp eq i8 %v3_85d4, 1
  store i1 %v7_85dc, i1* %cpsr_z.global-to-local, align 1
  %v1_85e0 = add i32 %v3_8878, -1452
  store i32 %v1_85e0, i32* @r5, align 4
  br i1 %v7_85dc, label %dec_label_pc_886c, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_85dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_85dc, label %dec_label_pc_85f0, label %dec_label_pc_8574

dec_label_pc_85f0:                                ; preds = %.thread18.dec_label_pc_85f0_crit_edge, %dec_label_pc_85e8
  %v0_85f0 = phi i32 [ %v0_85f0.pre, %.thread18.dec_label_pc_85f0_crit_edge ], [ %v3_8878, %dec_label_pc_85e8 ]
  %v1_85f0 = add i32 %v0_85f0, -1452
  %v2_85f0 = inttoptr i32 %v1_85f0 to i32*
  %v3_85f0 = load i32, i32* %v2_85f0, align 4
  store i32 %v3_85f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v2_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v2_85fc, i1* %cpsr_c.global-to-local, align 1
  %v7_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v7_85fc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34324, i32* @lr, align 4
  %v1_8610 = xor i1 %v7_85fc, true
  call void @__pseudo_cond_branch(i1 %v1_8610, i32 ptrtoint (i32* @global_var_1663c.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_861c = load i32, i32* @r5, align 4
  store i32 %v0_861c, i32* %r2.global-to-local, align 4
  %v3_8620 = call i32 @function_15670(i32 2, i32 1, i32 %v0_861c)
  store i32 %v3_8620, i32* %r0.global-to-local, align 4
  %v2_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v2_8624, i1* %cpsr_c.global-to-local, align 1
  %v7_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v7_8624, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8620, i32* @r4, align 4
  %v1_862c = load i32, i32* @r6, align 4
  %v2_862c = add i32 %v1_862c, -1452
  %v3_862c = inttoptr i32 %v2_862c to i32*
  store i32 %v3_8620, i32* %v3_862c, align 4
  br i1 %v7_8624, label %dec_label_pc_85bc, label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f0
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8638 = load i32, i32* @r5, align 4
  store i32 %v0_8638, i32* %r2.global-to-local, align 4
  %v3_863c = call i32 @function_13a84(i32 %v3_8620, i32 3, i32 %v0_8638)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_8644 = or i32 %v3_863c, 2048
  store i32 %v1_8644, i32* %r2.global-to-local, align 4
  %v0_8648 = load i32, i32* @r4, align 4
  store i32 %v0_8648, i32* %r0.global-to-local, align 4
  %v3_864c = call i32 @function_13a84(i32 %v0_8648, i32 4, i32 %v1_8644)
  store i32 %v3_864c, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_8660 = load i32, i32* @r6, align 4
  %v1_8660 = add i32 %v0_8660, -1452
  %v2_8660 = inttoptr i32 %v1_8660 to i32*
  %v3_8660 = load i32, i32* %v2_8660, align 4
  store i32 %v3_8660, i32* @r0, align 4
  %v0_8664 = load i32, i32* @r5, align 4
  store i32 %v0_8664, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* @r2, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_8674, i32* %r3.global-to-local, align 4
  %v5_867c = call i32 @function_15600(i32 %v3_8660, i32 %v0_8664, i32 8, i32 %v2_8674, i32 4)
  store i32 %v5_867c, i32* %r0.global-to-local, align 4
  %v0_8680 = load i32, i32* @r6, align 4
  %v1_8680 = add i32 %v0_8680, -1436
  %v2_8680 = inttoptr i32 %v1_8680 to i32*
  %v3_8680 = load i32, i32* %v2_8680, align 4
  store i32 %v3_8680, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %v3_828c, i32* %r0.global-to-local, align 4
  %v1_869c = call i32 @function_15368(i32 %v3_828c)
  store i32 %v1_869c, i32* %r0.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_86a8 = load i32, i32* @r4, align 4
  %v1_86a8 = trunc i32 %v0_86a8 to i8
  %v2_86a8 = load i32, i32* @r6, align 4
  %v3_86a8 = add i32 %v2_86a8, -1448
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 %v1_86a8, i8* %v4_86a8, align 1
  store i32 %v2_84f8, i32* %ip.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r6, align 4
  %v2_86b8 = add i32 %v1_86b8, -1444
  %v3_86b8 = inttoptr i32 %v2_86b8 to i32*
  store i32 %v2_84f8, i32* %v3_86b8, align 4
  store i32 %v2_86bc, i32* %r1.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1452
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* %r0.global-to-local, align 4
  %v3_86c4 = call i32 @function_152b4(i32 %v3_86c0, i32 %v2_86bc, i32 16)
  store i32 %v3_86c4, i32* %r0.global-to-local, align 4
  %v0_86c8 = load i32, i32* @r6, align 4
  %v1_86c8 = add i32 %v0_86c8, -1452
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  %v3_86c8 = load i32, i32* %v2_86c8, align 4
  store i32 %v3_86c8, i32* %ip.global-to-local, align 4
  %v3_86d0 = udiv i32 %v3_86c8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_86d4 = mul nuw nsw i32 %v3_86d0, 4
  store i32 %v3_86d4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  br label %dec_label_pc_86e0

dec_label_pc_86e0:                                ; preds = %dec_label_pc_8cc8, %dec_label_pc_8634
  %v0_86f0 = phi i32 [ %v3_86c8, %dec_label_pc_8634 ], [ %v3_8cc8, %dec_label_pc_8cc8 ]
  %v3_86d4.pn = phi i32 [ %v3_86d4, %dec_label_pc_8634 ], [ %v3_8cd4, %dec_label_pc_8cc8 ]
  %storemerge = add i32 %v3_86d4.pn, %v2_86d8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_86e0 = add i32 %storemerge, -292
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  %v3_86e0 = load i32, i32* %v2_86e0, align 4
  %v1_86e4 = urem i32 %v0_86f0, 32
  store i32 %v1_86e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_86ec = shl i32 1, %v1_86e4
  %v8_86ec = or i32 %v3_86e0, %v7_86ec
  store i32 %v8_86ec, i32* %r1.global-to-local, align 4
  %v1_86f0 = load i32, i32* @r8, align 4
  %v2_86f0 = sub i32 %v0_86f0, %v1_86f0
  %v3_86f0 = icmp uge i32 %v0_86f0, %v1_86f0
  store i1 %v3_86f0, i1* %cpsr_c.global-to-local, align 1
  %v4_86f0 = xor i32 %v1_86f0, %v0_86f0
  %v5_86f0 = xor i32 %v2_86f0, %v0_86f0
  %v6_86f0 = and i32 %v5_86f0, %v4_86f0
  %v7_86f0 = icmp slt i32 %v6_86f0, 0
  %v8_86f0 = icmp slt i32 %v2_86f0, 0
  %v9_86f0 = icmp eq i32 %v0_86f0, %v1_86f0
  store i1 %v9_86f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_86ec, i32* %v2_86e0, align 4
  %v3_86f8 = xor i1 %v8_86f0, %v7_86f0
  %v4_86f8 = or i1 %v9_86f0, %v3_86f8
  br i1 %v4_86f8, label %dec_label_pc_85bc, label %dec_label_pc_86fc

dec_label_pc_86fc:                                ; preds = %dec_label_pc_86e0
  %v0_86fc = load i32, i32* %ip.global-to-local, align 4
  %v1_86fc = load i32, i32* %r3.global-to-local, align 4
  %v2_86fc = add i32 %v1_86fc, %v0_86fc
  store i32 %v2_86fc, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8700:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_900c, %dec_label_pc_8fb8, %dec_label_pc_86fc
  %v0_871860 = phi i32 [ %v2_8d80, %dec_label_pc_8d80 ], [ %v2_900c, %dec_label_pc_900c ], [ %v2_8fb8, %dec_label_pc_8fb8 ], [ %v2_86fc, %dec_label_pc_86fc ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_8704 = load i32, i32* @r7, align 4
  %v1_8704 = add i32 %v0_8704, 1
  store i32 %v1_8704, i32* @r7, align 4
  %v0_8708 = load i32, i32* @r6, align 4
  %v3_870c = icmp uge i32 %v1_8704, %v0_839c
  store i1 %v3_870c, i1* %cpsr_c.global-to-local, align 1
  %v9_870c = icmp eq i32 %v1_8704, %v0_839c
  store i1 %v9_870c, i1* %cpsr_z.global-to-local, align 1
  %v1_8710 = add i32 %v0_8708, 3140
  store i32 %v1_8710, i32* @r6, align 4
  br i1 %v9_870c, label %dec_label_pc_8718, label %dec_label_pc_85d4

dec_label_pc_8718:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge
  %v0_8750 = phi i32 [ %v0_8718.pre, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge ], [ %v0_871860, %dec_label_pc_8700 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8718 = icmp eq i32 %v0_8750, 0
  store i1 %v2_8718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8718, label %dec_label_pc_84f4, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_8718
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8740, i32* %ip.global-to-local, align 4
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  store i32 %v2_8748, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8750, i32* %r0.global-to-local, align 4
  %v5_8758 = call i32 @function_157f4(i32 %v0_8750, i32 %v2_8744, i32 %v2_8748, i32 0, i32 %v2_8740)
  store i32 %v5_8758, i32* @r4, align 4
  %v0_8760 = load i32, i32* @r5, align 4
  store i32 %v0_8760, i32* %r0.global-to-local, align 4
  %v1_8764 = inttoptr i32 %v0_8760 to i32*
  %v2_8764 = call i32 @function_165ec(i32* %v1_8764)
  store i32 %v2_8764, i32* %r0.global-to-local, align 4
  %v0_8768 = load i32, i32* @r4, align 4
  %v1_8768 = load i32, i32* @r5, align 4
  %v3_8768 = icmp uge i32 %v0_8768, %v1_8768
  store i1 %v3_8768, i1* %cpsr_c.global-to-local, align 1
  %v9_8768 = icmp eq i32 %v0_8768, %v1_8768
  store i1 %v9_8768, i1* %cpsr_z.global-to-local, align 1
  %v7_8770 = icmp sgt i32 %v0_8768, %v1_8768
  br i1 %v7_8770, label %dec_label_pc_8774, label %dec_label_pc_84f4

dec_label_pc_8774:                                ; preds = %dec_label_pc_8720
  %v0_87d4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_87d4

dec_label_pc_877c:                                ; preds = %dec_label_pc_87e8, %dec_label_pc_8854
  %v1_878c = phi i32 [ %v1_8800, %dec_label_pc_87e8 ], [ %v1_878c.pre, %dec_label_pc_8854 ]
  %v0_8784 = phi i32 [ %v3_87f0, %dec_label_pc_87e8 ], [ %v0_8784.pre, %dec_label_pc_8854 ]
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v2_8784 = add i32 %v0_8784, %v2_86d8
  store i32 %v2_8784, i32* %r2.global-to-local, align 4
  %v1_8788 = add i32 %v2_8784, -164
  %v2_8788 = inttoptr i32 %v1_8788 to i32*
  %v3_8788 = load i32, i32* %v2_8788, align 4
  %v2_878c = add i32 %v1_878c, -1
  %v3_878c = shl i32 1, %v2_878c
  %v4_878c = and i32 %v3_8788, %v3_878c
  %v5_878c = icmp ne i32 %v4_878c, 0
  store i1 %v5_878c, i1* %cpsr_c.global-to-local, align 1
  %v6_878c = lshr i32 %v3_8788, %v1_878c
  store i32 %v6_878c, i32* %r3.global-to-local, align 4
  %v1_8790 = urem i32 %v6_878c, 2
  %v2_8790 = icmp eq i32 %v1_8790, 0
  store i1 %v2_8790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8790, label %dec_label_pc_87b4, label %dec_label_pc_8798

dec_label_pc_8798:                                ; preds = %dec_label_pc_877c
  %v0_8798 = load i32, i32* @sl, align 4
  %v1_8798 = add i32 %v0_8798, -1448
  %v2_8798 = inttoptr i32 %v1_8798 to i8*
  %v3_8798 = load i8, i8* %v2_8798, align 1
  %v4_8798 = zext i8 %v3_8798 to i32
  store i32 %v4_8798, i32* %r3.global-to-local, align 4
  %v2_879c = icmp ugt i8 %v3_8798, 5
  store i1 %v2_879c, i1* %cpsr_c.global-to-local, align 1
  %v7_879c = icmp eq i8 %v3_8798, 6
  store i1 %v7_879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_879c, label %dec_label_pc_9054, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_8798
  %v2_87a4 = icmp ugt i8 %v3_8798, 6
  store i1 %v2_87a4, i1* %cpsr_c.global-to-local, align 1
  %v7_87a4 = icmp eq i8 %v3_8798, 7
  store i1 %v7_87a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87a4, label %dec_label_pc_8d88, label %dec_label_pc_87ac

dec_label_pc_87ac:                                ; preds = %dec_label_pc_87a4
  %v2_87ac = icmp ugt i8 %v3_8798, 9
  store i1 %v2_87ac, i1* %cpsr_c.global-to-local, align 1
  %v7_87ac = icmp eq i8 %v3_8798, 10
  store i1 %v7_87ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87ac, label %dec_label_pc_8ce4, label %dec_label_pc_87b4

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_95ac, %dec_label_pc_959c, %dec_label_pc_8d34, %dec_label_pc_87ac, %dec_label_pc_877c, %dec_label_pc_87d4, %dec_label_pc_90a4, %dec_label_pc_9b54, %dec_label_pc_9a00, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_9704, %dec_label_pc_95bc, %dec_label_pc_8d40, %dec_label_pc_8fc0
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87bc = add i32 %stack_var_-20824.0, 1
  store i32 %v1_87bc, i32* %r2.global-to-local, align 4
  %v0_87c0 = load i32, i32* @sl, align 4
  %v3_87c4 = icmp uge i32 %v1_87bc, %v0_839c
  store i1 %v3_87c4, i1* %cpsr_c.global-to-local, align 1
  %v9_87c4 = icmp eq i32 %v1_87bc, %v0_839c
  store i1 %v9_87c4, i1* %cpsr_z.global-to-local, align 1
  %v1_87cc = add i32 %v0_87c0, 3140
  store i32 %v1_87cc, i32* @sl, align 4
  br i1 %v9_87c4, label %dec_label_pc_84f4, label %dec_label_pc_87d4

dec_label_pc_87d4:                                ; preds = %dec_label_pc_87b4, %dec_label_pc_8774
  %stack_var_-20824.0 = phi i32 [ %v1_8768, %dec_label_pc_8774 ], [ %v1_87bc, %dec_label_pc_87b4 ]
  %v0_87d4 = phi i32 [ %v0_87d4.pre, %dec_label_pc_8774 ], [ %v1_87cc, %dec_label_pc_87b4 ]
  %v1_87d4 = add i32 %v0_87d4, -1452
  %v2_87d4 = inttoptr i32 %v1_87d4 to i32*
  %v3_87d4 = load i32, i32* %v2_87d4, align 4
  store i32 %v3_87d4, i32* %r0.global-to-local, align 4
  %v2_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_87d4, i32* @sb, align 4
  br i1 %v7_87dc, label %dec_label_pc_87b4, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87d4
  %v3_87e8 = udiv i32 %v3_87d4, 32
  %v3_87f0 = mul nuw nsw i32 %v3_87e8, 4
  store i32 %v3_87f0, i32* %ip.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_87f8 = add i32 %v3_87f0, %v2_86d8
  store i32 %v2_87f8, i32* %r2.global-to-local, align 4
  %v1_87fc = add i32 %v2_87f8, -292
  %v2_87fc = inttoptr i32 %v1_87fc to i32*
  %v3_87fc = load i32, i32* %v2_87fc, align 4
  %v1_8800 = urem i32 %v3_87d4, 32
  store i32 %v1_8800, i32* %r1.global-to-local, align 4
  %v2_8804 = add nsw i32 %v1_8800, -1
  %v3_8804 = shl i32 1, %v2_8804
  %v4_8804 = and i32 %v3_87fc, %v3_8804
  %v5_8804 = icmp ne i32 %v4_8804, 0
  store i1 %v5_8804, i1* %cpsr_c.global-to-local, align 1
  %v6_8804 = lshr i32 %v3_87fc, %v1_8800
  store i32 %v6_8804, i32* %r3.global-to-local, align 4
  %v1_8808 = urem i32 %v6_8804, 2
  %v2_8808 = icmp eq i32 %v1_8808, 0
  store i1 %v2_8808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8808, label %dec_label_pc_877c, label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_87e8
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8828, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_8834, i32* @lr, align 4
  store i32 4, i32* @r2, align 4
  %v5_8840 = call i32 @function_15320(i32 %v3_87d4, i32 1, i32 4, i32 %v2_8828, i32 %v2_8834)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8848 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8848, i32* %r3.global-to-local, align 4
  %v2_884c = or i32 %v3_8848, %v5_8840
  store i32 %v2_884c, i32* %r0.global-to-local, align 4
  %v4_884c = icmp eq i32 %v2_884c, 0
  store i1 %v4_884c, i1* %cpsr_z.global-to-local, align 1
  %v0_8854 = load i32, i32* @sl, align 4
  %v1_8854 = add i32 %v0_8854, -1452
  %v2_8854 = inttoptr i32 %v1_8854 to i32*
  %v3_8854 = load i32, i32* %v2_8854, align 4
  br i1 %v4_884c, label %dec_label_pc_8854, label %dec_label_pc_8fc0

dec_label_pc_8854:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* %r3.global-to-local, align 4
  %v3_8858 = udiv i32 %v3_8854, 32
  store i32 %v3_8858, i32* %r2.global-to-local, align 4
  %v1_885c = urem i32 %v3_8854, 32
  store i32 %v1_885c, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8860 = mul nuw nsw i32 %v3_8858, 4
  store i32 %v3_8860, i32* %ip.global-to-local, align 4
  %v0_8864 = load i32, i32* @r4, align 4
  %v1_8864 = trunc i32 %v0_8864 to i8
  %v3_8864 = add i32 %v0_8854, -1448
  %v4_8864 = inttoptr i32 %v3_8864 to i8*
  store i8 %v1_8864, i8* %v4_8864, align 1
  %v0_8784.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_878c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_877c

dec_label_pc_886c:                                ; preds = %dec_label_pc_85d4
  %v1_886c = add i32 %v3_8878, 4
  %v2_886c = inttoptr i32 %v1_886c to i32*
  %v3_886c = load i32, i32* %v2_886c, align 4
  store i32 %v3_886c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8870 = icmp eq i32 %v3_886c, 0
  store i1 %v2_8870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8870, label %.thread18, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_886c
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v2_85d4, align 1
  %v0_887c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_887c.pr.pr, label %.thread16..thread18_crit_edge, label %dec_label_pc_8884

.thread16..thread18_crit_edge:                    ; preds = %.thread16
  %v1_887c.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_887c.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_887c.pre to i8
  br label %.thread18

.thread18:                                        ; preds = %.thread16..thread18_crit_edge, %dec_label_pc_886c
  %v3_887c = phi i32 [ %v3_887c.pre, %.thread16..thread18_crit_edge ], [ %v3_8878, %dec_label_pc_886c ]
  %v1_887c.off0 = phi i8 [ %extract.t, %.thread16..thread18_crit_edge ], [ 0, %dec_label_pc_886c ]
  %v4_887c = add i32 %v3_887c, -1448
  %v5_887c = inttoptr i32 %v4_887c to i8*
  store i8 %v1_887c.off0, i8* %v5_887c, align 1
  %v0_8880.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8880.pr, label %.thread18.dec_label_pc_85f0_crit_edge, label %dec_label_pc_8884

.thread18.dec_label_pc_85f0_crit_edge:            ; preds = %.thread18
  %v0_85f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_85f0

dec_label_pc_8884:                                ; preds = %.thread16, %.thread18, %dec_label_pc_857c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_888c = load i32, i32* @r5, align 4
  %v1_888c = add i32 %v0_888c, 2112
  store i32 %v1_888c, i32* %r0.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = add i32 %v1_8890, 12
  %v3_8890 = inttoptr i32 %v2_8890 to i32*
  store i32 -1, i32* %v3_8890, align 4
  %v0_8894 = load i32, i32* %r0.global-to-local, align 4
  %v1_8894 = add i32 %v0_8894, 4
  store i32 %v1_8894, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_889c = load i32, i32* @sb, align 4
  %v1_889c = load i32, i32* @r6, align 4
  %v2_889c = inttoptr i32 %v1_889c to i32*
  store i32 %v0_889c, i32* %v2_889c, align 4
  %v2_88a0 = call i32 @function_12ed4(i32 %v1_8894, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88ac = load i32, i32* @sb, align 4
  %v1_88ac = load i32, i32* @r6, align 4
  %v2_88ac = add i32 %v1_88ac, 660
  %v3_88ac = inttoptr i32 %v2_88ac to i32*
  store i32 %v0_88ac, i32* %v3_88ac, align 4
  %v2_88b0 = call i32 @function_12ed4(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88b8 = call i32 @function_12e40(i8* %v1_88b8)
  %v0_88bc = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88c4 = add i32 %v0_88bc, 1431
  store i32 %v1_88c4, i32* @fp, align 4
  %v2_88c8 = add i32 %v2_88b8, %stack_var_-20860.0.ph
  store i32 %v2_88c8, i32* @r0, align 4
  store i32 %v1_88c4, i32* %r1.global-to-local, align 4
  %v2_88d0 = inttoptr i32 %v2_88c8 to i8*
  %v3_88d0 = call i32 @function_12e68(i8* %v2_88d0, i32 %v1_88c4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88d8 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1a294.26 to i32), i32* %r1.global-to-local, align 4
  %v2_88e4 = add i32 %v2_88d8, %stack_var_-20860.0.ph
  store i32 %v2_88e4, i32* @r0, align 4
  %v2_88e8 = inttoptr i32 %v2_88e4 to i8*
  %v3_88e8 = call i32 @function_12e68(i8* %v2_88e8, i32 ptrtoint (i32* @global_var_1a294.26 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @function_12e40(i8* %v1_88b8)
  %v2_88f8 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_88f8, i32* @r0, align 4
  %v0_88fc = load i32, i32* @r5, align 4
  %v1_88fc = add i32 %v0_88fc, 532
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8900 = inttoptr i32 %v2_88f8 to i8*
  %v3_8900 = call i32 @function_12e68(i8* %v2_8900, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8908 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1a26c.28 to i32), i32* %r1.global-to-local, align 4
  %v2_8914 = add i32 %v2_8908, %stack_var_-20860.0.ph
  store i32 %v2_8914, i32* @r0, align 4
  %v3_8918 = inttoptr i32 %v2_8914 to i8*
  %v4_8918 = call i32 @function_12e68(i8* %v3_8918, i32 ptrtoint ([24 x i8]* @global_var_1a26c.28 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8920 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8928 = load i32, i32* @r5, align 4
  %v1_8928 = add i32 %v0_8928, 20
  store i32 %v1_8928, i32* %r1.global-to-local, align 4
  %v2_892c = add i32 %v2_8920, %stack_var_-20860.0.ph
  store i32 %v2_892c, i32* @r0, align 4
  %v2_8930 = inttoptr i32 %v2_892c to i8*
  %v3_8930 = call i32 @function_12e68(i8* %v2_8930, i32 %v1_8928)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8938 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a284.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8944 = add i32 %v2_8938, %stack_var_-20860.0.ph
  store i32 %v2_8944, i32* @r0, align 4
  %v3_8948 = inttoptr i32 %v2_8944 to i8*
  %v4_8948 = call i32 @function_12e68(i8* %v3_8948, i32 ptrtoint ([9 x i8]* @global_var_1a284.30 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8950 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8958 = load i32, i32* @r5, align 4
  %v2_895c = add i32 %v2_8950, %stack_var_-20860.0.ph
  store i32 %v2_895c, i32* @r0, align 4
  %v1_8960 = add i32 %v0_8958, 789
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = inttoptr i32 %v2_895c to i8*
  %v3_8964 = call i32 @function_12e68(i8* %v2_8964, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_896c = call i32 @function_12e40(i8* %v1_88b8)
  %v2_8974 = add i32 %v2_896c, %stack_var_-20860.0.ph
  store i32 %v2_8974, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v3_897c = inttoptr i32 %v2_8974 to i8*
  %v4_897c = call i32 @function_12e68(i8* %v3_897c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_8984 = call i32 @function_125b0(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_898c = call i32 @function_12e40(i8* %v1_88b8)
  %v0_8990 = load i32, i32* @sb, align 4
  store i32 %v0_8990, i32* %r1.global-to-local, align 4
  store i32 %v2_898c, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_899c = inttoptr i32 %v0_8990 to i32*
  %v3_899c = call i32 @function_124ec(i32 32, i32* %v2_899c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_899c, i32* %r1.global-to-local, align 4
  %v1_89a8 = load i32, i32* @r4, align 4
  %v2_89a8 = add i32 %v1_89a8, %stack_var_-20860.0.ph
  store i32 %v2_89a8, i32* @r0, align 4
  %v2_89ac = inttoptr i32 %v2_89a8 to i8*
  %v3_89ac = call i32 @function_12e68(i8* %v2_89ac, i32 %v3_899c)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89b4 = call i32 @function_12510(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89bc = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v2_89c8 = add i32 %v2_89bc, %stack_var_-20860.0.ph
  store i32 %v2_89c8, i32* @r0, align 4
  %v3_89cc = inttoptr i32 %v2_89c8 to i8*
  %v4_89cc = call i32 @function_12e68(i8* %v3_89cc, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_89d4 = call i32 @function_125b0(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89dc = call i32 @function_12e40(i8* %v1_88b8)
  %v0_89e0 = load i32, i32* @sb, align 4
  store i32 %v0_89e0, i32* %r1.global-to-local, align 4
  store i32 %v2_89dc, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_89ec = inttoptr i32 %v0_89e0 to i32*
  %v3_89ec = call i32 @function_124ec(i32 33, i32* %v2_89ec)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_89ec, i32* %r1.global-to-local, align 4
  %v1_89f8 = load i32, i32* @r4, align 4
  %v2_89f8 = add i32 %v1_89f8, %stack_var_-20860.0.ph
  store i32 %v2_89f8, i32* @r0, align 4
  %v2_89fc = inttoptr i32 %v2_89f8 to i8*
  %v3_89fc = call i32 @function_12e68(i8* %v2_89fc, i32 %v3_89ec)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_8a04 = call i32 @function_12510(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a0c = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8a18 = add i32 %v2_8a0c, %stack_var_-20860.0.ph
  store i32 %v2_8a18, i32* @r0, align 4
  %v3_8a1c = inttoptr i32 %v2_8a18 to i8*
  %v4_8a1c = call i32 @function_12e68(i8* %v3_8a1c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a24 = call i32 @function_125b0(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a2c = call i32 @function_12e40(i8* %v1_88b8)
  %v0_8a30 = load i32, i32* @sb, align 4
  store i32 %v0_8a30, i32* %r1.global-to-local, align 4
  store i32 %v2_8a2c, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_8a3c = inttoptr i32 %v0_8a30 to i32*
  %v3_8a3c = call i32 @function_124ec(i32 34, i32* %v2_8a3c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v1_8a48 = load i32, i32* @r4, align 4
  %v2_8a48 = add i32 %v1_8a48, %stack_var_-20860.0.ph
  store i32 %v2_8a48, i32* @r0, align 4
  %v2_8a4c = inttoptr i32 %v2_8a48 to i8*
  %v3_8a4c = call i32 @function_12e68(i8* %v2_8a4c, i32 %v3_8a3c)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a54 = call i32 @function_12510(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a5c = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8a68 = add i32 %v2_8a5c, %stack_var_-20860.0.ph
  store i32 %v2_8a68, i32* @r0, align 4
  %v3_8a6c = inttoptr i32 %v2_8a68 to i8*
  %v4_8a6c = call i32 @function_12e68(i8* %v3_8a6c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 %v4_8a6c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  %v1_8a74 = load i32, i32* @sb, align 4
  %v3_8a74 = icmp uge i32 %v6_81f8, %v1_8a74
  store i1 %v3_8a74, i1* %cpsr_c.global-to-local, align 1
  %v9_8a74 = icmp eq i32 %v6_81f8, %v1_8a74
  store i1 %v9_8a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8a74, label %dec_label_pc_8b4c, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8884
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8a80 = call i32 @function_125b0(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a88 = call i32 @function_12e40(i8* %v1_88b8)
  %v0_8a8c = load i32, i32* @sb, align 4
  store i32 %v0_8a8c, i32* %r1.global-to-local, align 4
  store i32 %v2_8a88, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8a98 = inttoptr i32 %v0_8a8c to i32*
  %v3_8a98 = call i32 @function_124ec(i32 35, i32* %v2_8a98)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8a98, i32* %r1.global-to-local, align 4
  %v1_8aa4 = load i32, i32* @r4, align 4
  %v2_8aa4 = add i32 %v1_8aa4, %stack_var_-20860.0.ph
  store i32 %v2_8aa4, i32* @r0, align 4
  %v2_8aa8 = inttoptr i32 %v2_8aa4 to i8*
  %v3_8aa8 = call i32 @function_12e68(i8* %v2_8aa8, i32 %v3_8a98)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8ab0 = call i32 @function_12510(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ab8 = call i32 @function_12e40(i8* %v1_88b8)
  %v2_8ac0 = add i32 %v2_8ab8, %stack_var_-20860.0.ph
  store i32 %v2_8ac0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v3_8ac8 = inttoptr i32 %v2_8ac0 to i8*
  %v4_8ac8 = call i32 @function_12e68(i8* %v3_8ac8, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ad0 = call i32 @function_12e40(i8* %v1_88b8)
  %v0_8ad4 = load i32, i32* @sb, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ad0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8ae0 = inttoptr i32 %v0_8ad4 to i32*
  %v3_8ae0 = call i32 @function_124ec(i32 40, i32* %v2_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8ae0, i32* %r1.global-to-local, align 4
  %v2_8aec = add i32 %v2_8ad0, %stack_var_-20860.0.ph
  store i32 %v2_8aec, i32* @r0, align 4
  %v2_8af0 = inttoptr i32 %v2_8aec to i8*
  %v3_8af0 = call i32 @function_12e68(i8* %v2_8af0, i32 %v3_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af8 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a294.26 to i32), i32* %r1.global-to-local, align 4
  %v2_8b04 = add i32 %v2_8af8, %stack_var_-20860.0.ph
  store i32 %v2_8b04, i32* @r0, align 4
  %v2_8b08 = inttoptr i32 %v2_8b04 to i8*
  %v3_8b08 = call i32 @function_12e68(i8* %v2_8b08, i32 ptrtoint (i32* @global_var_1a294.26 to i32))
  store i32 %v6_81f8, i32* %r0.global-to-local, align 4
  %v2_8b10 = call i32 @function_12e40(i8* %v1_8b10)
  store i32 %v2_8b10, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b1c = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b28 = add i32 %v2_8b1c, %stack_var_-20860.0.ph
  store i32 %v2_8b28, i32* %r2.global-to-local, align 4
  %v0_8b2c = load i32, i32* @r4, align 4
  store i32 %v0_8b2c, i32* %r0.global-to-local, align 4
  %v3_8b30 = trunc i32 %v0_8b2c to i8
  %v4_8b30 = call i32 @function_13340(i8 %v3_8b30, i32 10, i32 %v2_8b28)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b38 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8b44 = add i32 %v2_8b38, %stack_var_-20860.0.ph
  store i32 %v2_8b44, i32* @r0, align 4
  %v3_8b48 = inttoptr i32 %v2_8b44 to i8*
  %v4_8b48 = call i32 @function_12e68(i8* %v3_8b48, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 %v4_8b48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8884, %dec_label_pc_8a7c
  %v0_8b4c = load i32, i32* @r6, align 4
  %v1_8b4c = add i32 %v0_8b4c, 16
  %v2_8b4c = inttoptr i32 %v1_8b4c to i32*
  %v3_8b4c = load i32, i32* %v2_8b4c, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b50 = icmp eq i32 %v3_8b4c, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  %tmp165 = icmp slt i32 %v3_8b4c, 1
  br i1 %tmp165, label %dec_label_pc_8bf8, label %dec_label_pc_8b58

dec_label_pc_8b58:                                ; preds = %dec_label_pc_8b4c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b5c = call i32 @function_12e40(i8* %v1_88b8)
  %v2_8b64 = add i32 %v2_8b5c, %stack_var_-20860.0.ph
  store i32 %v2_8b64, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a2a4.34 to i32), i32* %r1.global-to-local, align 4
  %v3_8b6c = inttoptr i32 %v2_8b64 to i8*
  %v4_8b6c = call i32 @function_12e68(i8* %v3_8b6c, i32 ptrtoint ([9 x i8]* @global_var_1a2a4.34 to i32))
  store i32 %v4_8b6c, i32* %r0.global-to-local, align 4
  %v0_8b70 = load i32, i32* @r6, align 4
  %v1_8b70 = add i32 %v0_8b70, 16
  %v2_8b70 = inttoptr i32 %v1_8b70 to i32*
  %v3_8b70 = load i32, i32* %v2_8b70, align 4
  store i32 %v3_8b70, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b78 = icmp eq i32 %v3_8b70, 0
  store i1 %v2_8b78, i1* %cpsr_z.global-to-local, align 1
  %v0_8b7c = load i32, i32* @sb, align 4
  store i32 %v0_8b7c, i32* %stack_var_-44, align 4
  %tmp166 = icmp slt i32 %v3_8b70, 1
  br i1 %tmp166, label %dec_label_pc_8be0, label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b58, %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b88 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8b90 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8b98 = and i32 %v3_8b90, 33554432
  %v2_8b98 = icmp ne i32 %v1_8b98, 0
  store i1 %v2_8b98, i1* %cpsr_c.global-to-local, align 1
  %v3_8b98 = mul i32 %v3_8b90, 128
  %v1_8b9c = add i32 %v3_8b98, 1472
  %v2_8ba0 = add i32 %v2_8b88, %stack_var_-20860.0.ph
  store i32 %v2_8ba0, i32* @r0, align 4
  %v0_8ba4 = load i32, i32* @r5, align 4
  %v2_8ba4 = add i32 %v1_8b9c, %v0_8ba4
  store i32 %v2_8ba4, i32* %r1.global-to-local, align 4
  %v2_8ba8 = inttoptr i32 %v2_8ba0 to i8*
  %v3_8ba8 = call i32 @function_12e68(i8* %v2_8ba8, i32 %v2_8ba4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bb0 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a2b0.36 to i32), i32* %r1.global-to-local, align 4
  %v2_8bbc = add i32 %v2_8bb0, %stack_var_-20860.0.ph
  store i32 %v2_8bbc, i32* @r0, align 4
  %v3_8bc0 = inttoptr i32 %v2_8bbc to i8*
  %v4_8bc0 = call i32 @function_12e68(i8* %v3_8bc0, i32 ptrtoint ([3 x i8]* @global_var_1a2b0.36 to i32))
  store i32 %v4_8bc0, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8bc8, i32* %r3.global-to-local, align 4
  %v0_8bcc = load i32, i32* @r6, align 4
  %v1_8bcc = add i32 %v0_8bcc, 16
  %v2_8bcc = inttoptr i32 %v1_8bcc to i32*
  %v3_8bcc = load i32, i32* %v2_8bcc, align 4
  store i32 %v3_8bcc, i32* %r2.global-to-local, align 4
  %v1_8bd0 = add i32 %v3_8bc8, 1
  store i32 %v1_8bd0, i32* %ip.global-to-local, align 4
  %v3_8bd4 = icmp uge i32 %v3_8bcc, %v1_8bd0
  store i1 %v3_8bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_8bd4 = icmp eq i32 %v3_8bcc, %v1_8bd0
  store i1 %v9_8bd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8bd0, i32* %stack_var_-44, align 4
  %v8_8bdc = icmp sgt i32 %v3_8bcc, %v1_8bd0
  br i1 %v8_8bdc, label %dec_label_pc_8b84, label %dec_label_pc_8be0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8b58
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be4 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf0 = add i32 %v2_8be4, %stack_var_-20860.0.ph
  store i32 %v2_8bf0, i32* @r0, align 4
  %v3_8bf4 = inttoptr i32 %v2_8bf0 to i8*
  %v4_8bf4 = call i32 @function_12e68(i8* %v3_8bf4, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 %v4_8bf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8be0
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bfc = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8c08 = add i32 %v2_8bfc, %stack_var_-20860.0.ph
  store i32 %v2_8c08, i32* @r0, align 4
  %v3_8c0c = inttoptr i32 %v2_8c08 to i8*
  %v4_8c0c = call i32 @function_12e68(i8* %v3_8c0c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32))
  store i32 %v4_8c0c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c14, label %dec_label_pc_8c34, label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8bf8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81f8, i32* %r1.global-to-local, align 4
  %v2_8c2c = add i32 %v2_8c20, %stack_var_-20860.0.ph
  store i32 %v2_8c2c, i32* @r0, align 4
  %v2_8c30 = inttoptr i32 %v2_8c2c to i8*
  %v3_8c30 = call i32 @function_12e68(i8* %v2_8c30, i32 %v6_81f8)
  store i32 %v3_8c30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c34

dec_label_pc_8c34:                                ; preds = %dec_label_pc_8bf8, %dec_label_pc_8c1c
  %v0_8c34 = load i32, i32* @r5, align 4
  %v1_8c34 = add i32 %v0_8c34, 1440
  store i32 %v1_8c34, i32* %r4.global-to-local, align 4
  %v0_8c38 = load i32, i32* @fp, align 4
  store i32 %v0_8c38, i32* %r0.global-to-local, align 4
  store i32 %v1_8c34, i32* %r1.global-to-local, align 4
  %v2_8c40 = inttoptr i32 %v0_8c38 to i8*
  %v3_8c40 = call i32 @function_1322c(i8* %v2_8c40, i32 %v1_8c34)
  store i32 %v3_8c40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c44 = icmp eq i32 %v3_8c40, 0
  store i1 %v2_8c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c44, label %dec_label_pc_9710, label %dec_label_pc_8c4c

dec_label_pc_8c4c:                                ; preds = %dec_label_pc_8c34, %dec_label_pc_9710
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c50 = load i32, i32* @r6, align 4
  %v1_8c50 = add i32 %v0_8c50, -1452
  %v2_8c50 = inttoptr i32 %v1_8c50 to i32*
  %v3_8c50 = load i32, i32* %v2_8c50, align 4
  store i32 %v3_8c50, i32* @r4, align 4
  %v2_8c54 = call i32 @function_12e40(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @r1, align 4
  store i32 %v2_8c54, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c64 = load i32, i32* @r4, align 4
  store i32 %v0_8c64, i32* @r0, align 4
  %v4_8c68 = call i32 @function_15590(i32 %v0_8c64, i32 %stack_var_-20860.0.ph, i32 %v2_8c54, i32 16384)
  store i32 %v4_8c68, i32* %r0.global-to-local, align 4
  %v0_8c6c = load i32, i32* @r6, align 4
  %v1_8c6c = add i32 %v0_8c6c, -1452
  %v2_8c6c = inttoptr i32 %v1_8c6c to i32*
  %v3_8c6c = load i32, i32* %v2_8c6c, align 4
  store i32 %v3_8c6c, i32* %ip.global-to-local, align 4
  %v3_8c74 = udiv i32 %v3_8c6c, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8c7c = mul nuw nsw i32 %v3_8c74, 4
  %v2_8c80 = add i32 %v3_8c7c, %v2_86d8
  store i32 %v2_8c80, i32* %r2.global-to-local, align 4
  %v1_8c84 = add i32 %v2_8c80, -164
  %v2_8c84 = inttoptr i32 %v1_8c84 to i32*
  %v3_8c84 = load i32, i32* %v2_8c84, align 4
  %v1_8c8c = urem i32 %v3_8c6c, 32
  store i32 %v1_8c8c, i32* %r0.global-to-local, align 4
  %v7_8c90 = shl i32 1, %v1_8c8c
  %v8_8c90 = or i32 %v3_8c84, %v7_8c90
  store i32 %v8_8c90, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8c90, i32* %v2_8c84, align 4
  %v0_8c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_8c9c = trunc i32 %v0_8c9c to i8
  %v2_8c9c = load i32, i32* @r6, align 4
  %v3_8c9c = add i32 %v2_8c9c, -1448
  %v4_8c9c = inttoptr i32 %v3_8c9c to i8*
  store i8 %v1_8c9c, i8* %v4_8c9c, align 1
  %v0_8ca0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8ca0 = load i32, i32* @r8, align 4
  %v2_8ca0 = sub i32 %v0_8ca0, %v1_8ca0
  %v3_8ca0 = icmp uge i32 %v0_8ca0, %v1_8ca0
  store i1 %v3_8ca0, i1* %cpsr_c.global-to-local, align 1
  %v4_8ca0 = xor i32 %v1_8ca0, %v0_8ca0
  %v5_8ca0 = xor i32 %v2_8ca0, %v0_8ca0
  %v6_8ca0 = and i32 %v5_8ca0, %v4_8ca0
  %v7_8ca0 = icmp slt i32 %v6_8ca0, 0
  %v8_8ca0 = icmp slt i32 %v2_8ca0, 0
  %v9_8ca0 = icmp eq i32 %v0_8ca0, %v1_8ca0
  store i1 %v9_8ca0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_84f8, i32* %r2.global-to-local, align 4
  %v3_8ca8 = xor i1 %v8_8ca0, %v7_8ca0
  %v4_8ca8 = or i1 %v9_8ca0, %v3_8ca8
  br i1 %v4_8ca8, label %bb168, label %bb167

bb167:                                            ; preds = %dec_label_pc_8c4c
  %v6_8ca8 = add i32 %v0_8ca0, 1
  store i32 %v6_8ca8, i32* @r8, align 4
  br label %bb168

bb168:                                            ; preds = %dec_label_pc_8c4c, %bb167
  %v1_8cac = load i32, i32* @r6, align 4
  %v2_8cac = add i32 %v1_8cac, -1440
  %v3_8cac = inttoptr i32 %v2_8cac to i32*
  store i32 %v2_84f8, i32* %v3_8cac, align 4
  br label %dec_label_pc_85bc

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8574
  %v1_8cb4 = add i32 %v3_8878, -1444
  %v2_8cb4 = inttoptr i32 %v1_8cb4 to i32*
  %v3_8cb4 = load i32, i32* %v2_8cb4, align 4
  store i32 %v2_84f8, i32* %r1.global-to-local, align 4
  %v2_8cbc = sub i32 %v2_84f8, %v3_8cb4
  store i32 %v2_8cbc, i32* %r3.global-to-local, align 4
  %v2_8cc0 = icmp ugt i32 %v2_8cbc, 29
  store i1 %v2_8cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_8cc0 = icmp eq i32 %v2_8cbc, 30
  store i1 %v7_8cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_8cc4 = xor i1 %v7_8cc0, true
  %v3_8cc4 = and i1 %v2_8cc0, %v2_8cc4
  br i1 %v3_8cc4, label %dec_label_pc_85a4, label %dec_label_pc_8cc8

dec_label_pc_8cc8:                                ; preds = %dec_label_pc_8cb4
  %v2_8cc8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8cc8 = load i32, i32* %v2_8cc8, align 4
  store i32 %v3_8cc8, i32* %ip.global-to-local, align 4
  %v3_8cd0 = udiv i32 %v3_8cc8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8cd4 = mul nuw nsw i32 %v3_8cd0, 4
  store i32 %v3_8cd4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_86e0

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_87ac, %dec_label_pc_8d0c
  %v0_8ce4 = call i32 @function_139e8()
  store i32 %v0_8ce4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8cec = inttoptr i32 %v0_8ce4 to i32*
  store i32 0, i32* %v2_8cec, align 4
  store i32 %v2_8278, i32* @r1, align 4
  %v0_8cf4 = load i32, i32* @sl, align 4
  %v1_8cf4 = add i32 %v0_8cf4, -1452
  %v2_8cf4 = inttoptr i32 %v1_8cf4 to i32*
  %v3_8cf4 = load i32, i32* %v2_8cf4, align 4
  store i32 %v3_8cf4, i32* @r0, align 4
  store i32 10240, i32* @r2, align 4
  %v0_8cfc = load i32, i32* %r3.global-to-local, align 4
  %v1_8cfc = add i32 %v0_8cfc, 16384
  store i32 %v1_8cfc, i32* %r3.global-to-local, align 4
  %v4_8d00 = call i32 @function_15524(i32 %v3_8cf4, i32 %v2_8278, i32 10240, i32 %v1_8cfc)
  store i32 %v4_8d00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d04 = icmp eq i32 %v4_8d00, 0
  store i1 %v2_8d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d04, label %dec_label_pc_9990, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8ce4
  %v3_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v3_8d0c, i1* %cpsr_c.global-to-local, align 1
  %v8_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v8_8d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8d0c, label %dec_label_pc_8d14, label %dec_label_pc_8ce4

dec_label_pc_8d14:                                ; preds = %dec_label_pc_8d0c, %dec_label_pc_9990
  %v0_8d14 = call i32 @function_139e8()
  store i32 %v0_8d14, i32* %r0.global-to-local, align 4
  %v1_8d18 = inttoptr i32 %v0_8d14 to i32*
  %v2_8d18 = load i32, i32* %v1_8d18, align 4
  store i32 %v2_8d18, i32* %r3.global-to-local, align 4
  %v2_8d1c = icmp ugt i32 %v2_8d18, 10
  store i1 %v2_8d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d1c = icmp eq i32 %v2_8d18, 11
  store i1 %v7_8d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d1c, label %dec_label_pc_8d34, label %dec_label_pc_8d24

dec_label_pc_8d24:                                ; preds = %dec_label_pc_8d14
  %v0_8d24 = call i32 @function_139e8()
  store i32 %v0_8d24, i32* %r0.global-to-local, align 4
  %v1_8d28 = inttoptr i32 %v0_8d24 to i32*
  %v2_8d28 = load i32, i32* %v1_8d28, align 4
  store i32 %v2_8d28, i32* %r3.global-to-local, align 4
  %v2_8d2c = icmp ugt i32 %v2_8d28, 10
  store i1 %v2_8d2c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d2c = icmp eq i32 %v2_8d28, 11
  store i1 %v7_8d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d2c, label %dec_label_pc_8d34, label %dec_label_pc_95bc

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_8d14
  %v0_8d34 = load i32, i32* @sl, align 4
  %v1_8d34 = add i32 %v0_8d34, -1448
  %v2_8d34 = inttoptr i32 %v1_8d34 to i8*
  %v3_8d34 = load i8, i8* %v2_8d34, align 1
  %v4_8d34 = zext i8 %v3_8d34 to i32
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d38 = icmp eq i8 %v3_8d34, 0
  store i1 %v2_8d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d38, label %dec_label_pc_87b4, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9ae4, %dec_label_pc_9ac8, %dec_label_pc_96d4, %dec_label_pc_96a4, %dec_label_pc_8d34, %dec_label_pc_9b10, %dec_label_pc_96ec
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_8d44 = load i32, i32* @sl, align 4
  %v3_8d44 = add i32 %v2_8d44, -1448
  %v4_8d44 = inttoptr i32 %v3_8d44 to i8*
  store i8 1, i8* %v4_8d44, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8d4c:                                ; preds = %dec_label_pc_8584
  %v2_8d4c = inttoptr i32 %v1_85e0 to i32*
  %v3_8d4c = load i32, i32* %v2_8d4c, align 4
  store i32 %v3_8d4c, i32* %ip.global-to-local, align 4
  %v3_8d54 = udiv i32 %v3_8d4c, 32
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v3_8d5c = mul nuw nsw i32 %v3_8d54, 4
  %v2_8d60 = add i32 %v3_8d5c, %v2_86d8
  store i32 %v2_8d60, i32* %r2.global-to-local, align 4
  %v1_8d64 = add i32 %v2_8d60, -164
  %v2_8d64 = inttoptr i32 %v1_8d64 to i32*
  %v3_8d64 = load i32, i32* %v2_8d64, align 4
  %v1_8d68 = urem i32 %v3_8d4c, 32
  store i32 %v1_8d68, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d70 = shl i32 1, %v1_8d68
  %v8_8d70 = or i32 %v3_8d64, %v7_8d70
  store i32 %v8_8d70, i32* %r1.global-to-local, align 4
  %v1_8d74 = load i32, i32* @r8, align 4
  %v2_8d74 = sub i32 %v3_8d4c, %v1_8d74
  %v3_8d74 = icmp uge i32 %v3_8d4c, %v1_8d74
  store i1 %v3_8d74, i1* %cpsr_c.global-to-local, align 1
  %v4_8d74 = xor i32 %v1_8d74, %v3_8d4c
  %v5_8d74 = xor i32 %v2_8d74, %v3_8d4c
  %v6_8d74 = and i32 %v5_8d74, %v4_8d74
  %v7_8d74 = icmp slt i32 %v6_8d74, 0
  %v8_8d74 = icmp slt i32 %v2_8d74, 0
  %v9_8d74 = icmp eq i32 %v3_8d4c, %v1_8d74
  store i1 %v9_8d74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d70, i32* %v2_8d64, align 4
  %v3_8d7c = xor i1 %v8_8d74, %v7_8d74
  %v4_8d7c = or i1 %v9_8d74, %v3_8d7c
  br i1 %v4_8d7c, label %dec_label_pc_85bc, label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d4c
  %v0_8d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d80 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d80 = add i32 %v1_8d80, %v0_8d80
  store i32 %v2_8d80, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8d88:                                ; preds = %dec_label_pc_87a4
  %v1_8d88 = add i32 %v0_8798, 660
  %v2_8d88 = inttoptr i32 %v1_8d88 to i32*
  %v3_8d88 = load i32, i32* %v2_8d88, align 4
  store i32 %v3_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @sb, align 4
  %v2_8d90 = icmp ugt i32 %v3_8d88, 1023
  store i1 %v2_8d90, i1* %cpsr_c.global-to-local, align 1
  %v7_8d90 = icmp eq i32 %v3_8d88, 1024
  store i1 %v7_8d90, i1* %cpsr_z.global-to-local, align 1
  %v1_8d94 = add i32 %v0_8d8c, 2116
  store i32 %v1_8d94, i32* @r7, align 4
  br i1 %v7_8d90, label %dec_label_pc_8e9c, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e9c, %dec_label_pc_8e90
  %v0_8d9c = call i32 @function_139e8()
  store i32 %v0_8d9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8da4 = inttoptr i32 %v0_8d9c to i32*
  store i32 0, i32* %v2_8da4, align 4
  %v0_8da8 = load i32, i32* @sl, align 4
  %v1_8da8 = add i32 %v0_8da8, 660
  %v2_8da8 = inttoptr i32 %v1_8da8 to i32*
  %v3_8da8 = load i32, i32* %v2_8da8, align 4
  store i32 %v3_8da8, i32* %r1.global-to-local, align 4
  %v1_8dac = add i32 %v0_8da8, -1452
  %v2_8dac = inttoptr i32 %v1_8dac to i32*
  %v3_8dac = load i32, i32* %v2_8dac, align 4
  store i32 %v3_8dac, i32* @r0, align 4
  %v1_8db0 = sub i32 1024, %v3_8da8
  store i32 %v1_8db0, i32* @r2, align 4
  %v0_8db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8db4 = add i32 %v0_8db4, 16384
  store i32 %v1_8db4, i32* %r3.global-to-local, align 4
  %v0_8db8 = load i32, i32* @r7, align 4
  %v2_8db8 = add i32 %v0_8db8, %v3_8da8
  store i32 %v2_8db8, i32* @r1, align 4
  %v4_8dbc = call i32 @function_15524(i32 %v3_8dac, i32 %v2_8db8, i32 %v1_8db0, i32 %v1_8db4)
  store i32 %v4_8dbc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dc0 = icmp eq i32 %v4_8dbc, 0
  store i1 %v2_8dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8dc0, label %dec_label_pc_9590, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  %v2_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v2_8dc8, i1* %cpsr_c.global-to-local, align 1
  %v7_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v7_8dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dc8, label %dec_label_pc_959c, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc8
  %v0_8dd0 = load i32, i32* @sl, align 4
  %v1_8dd0 = add i32 %v0_8dd0, 660
  %v2_8dd0 = inttoptr i32 %v1_8dd0 to i32*
  %v3_8dd0 = load i32, i32* %v2_8dd0, align 4
  store i32 %v2_8764, i32* %r1.global-to-local, align 4
  %v2_8dd8 = add i32 %v3_8dd0, %v4_8dbc
  store i32 %v2_8dd8, i32* @r4, align 4
  store i32 %v2_8dd8, i32* %v2_8dd0, align 4
  %v0_8de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8de0 = load i32, i32* @sl, align 4
  %v2_8de0 = add i32 %v1_8de0, -1444
  %v3_8de0 = inttoptr i32 %v2_8de0 to i32*
  store i32 %v0_8de0, i32* %v3_8de0, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8e70
  %v1_8de8 = inttoptr i32 %v0_8e70 to i32*
  %v2_8de8 = load i32, i32* %v1_8de8, align 4
  store i32 %v2_8de8, i32* @r8, align 4
  %v1_8dec = load i32, i32* @r4, align 4
  %v5_8df0 = icmp slt i32 %v3_8e70, %v1_8dec
  %storemerge46 = select i1 %v5_8df0, i32 %v3_8e70, i32 %v1_8dec
  store i32 %storemerge46, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8e70, %storemerge46
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  %v2_8dfc = icmp ne i32 %v2_8de8, 0
  store i1 %v2_8dfc, i1* %cpsr_c.global-to-local, align 1
  %v7_8dfc = icmp eq i32 %v2_8de8, 1
  store i1 %v7_8dfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8df8, i32* %v2_8e70, align 4
  br i1 %v7_8dfc, label %dec_label_pc_8ec0, label %.dec_label_pc_8e0cthread-pre-split_crit_edge

.dec_label_pc_8e0cthread-pre-split_crit_edge:     ; preds = %dec_label_pc_8de8
  %v1_8e04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8e04, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e0c:                                ; preds = %dec_label_pc_8e7c, %.dec_label_pc_8e0cthread-pre-split_crit_edge, %dec_label_pc_8ee8
  %v0_8e0c = phi i32 [ %v3_8ee8, %dec_label_pc_8ee8 ], [ %v1_8e04, %.dec_label_pc_8e0cthread-pre-split_crit_edge ], [ %v3_8e70, %dec_label_pc_8e7c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e0c = icmp eq i32 %v0_8e0c, 0
  store i1 %v2_8e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e0c, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e14:                                ; preds = %dec_label_pc_8e0c
  %v0_8e14 = load i32, i32* @sl, align 4
  %v1_8e14 = add i32 %v0_8e14, 8
  %v2_8e14 = inttoptr i32 %v1_8e14 to i32*
  %v3_8e14 = load i32, i32* %v2_8e14, align 4
  store i32 %v3_8e14, i32* @r4, align 4
  %v2_8e18 = icmp ne i32 %v3_8e14, 0
  store i1 %v2_8e18, i1* %cpsr_c.global-to-local, align 1
  %v7_8e18 = icmp eq i32 %v3_8e14, 1
  store i1 %v7_8e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e18, label %dec_label_pc_8ef0, label %dec_label_pc_8e20

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8e14
  %v1_8e20 = add i32 %v0_8e14, 660
  %v2_8e20 = inttoptr i32 %v1_8e20 to i32*
  %v3_8e20 = load i32, i32* %v2_8e20, align 4
  %v0_8e24 = load i32, i32* @r6, align 4
  %v2_8e24 = sub i32 %v3_8e20, %v0_8e24
  store i32 %v2_8e24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e28 = icmp eq i32 %v2_8e24, 0
  store i1 %v2_8e28, i1* %cpsr_z.global-to-local, align 1
  %v2_8e2c = add i32 %v0_8e14, 12
  %v3_8e2c = inttoptr i32 %v2_8e2c to i32*
  store i32 %v2_8e24, i32* %v3_8e2c, align 4
  br i1 %v2_8e28, label %dec_label_pc_9704, label %dec_label_pc_8e34

dec_label_pc_8e34:                                ; preds = %dec_label_pc_8e0c, %dec_label_pc_8ef0, %dec_label_pc_8e20, %dec_label_pc_8f78
  %v0_8e34 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e34 = icmp eq i32 %v0_8e34, 0
  store i1 %v2_8e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e34, label %dec_label_pc_8e84, label %dec_label_pc_8e3c

dec_label_pc_8e3c:                                ; preds = %dec_label_pc_8e34
  %v0_8e3c = load i32, i32* @sl, align 4
  %v1_8e3c = add i32 %v0_8e3c, 660
  %v2_8e3c = inttoptr i32 %v1_8e3c to i32*
  %v3_8e3c = load i32, i32* %v2_8e3c, align 4
  store i32 %v3_8e3c, i32* %r3.global-to-local, align 4
  %v2_8e40 = sub i32 %v3_8e3c, %v0_8e34
  store i32 %v2_8e40, i32* @r4, align 4
  store i32 %v2_8e40, i32* %r2.global-to-local, align 4
  store i32 %v2_8e40, i32* %v2_8e3c, align 4
  %v0_8e4c = load i32, i32* @r7, align 4
  %v1_8e4c = load i32, i32* @r6, align 4
  %v2_8e4c = add i32 %v1_8e4c, %v0_8e4c
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 %v0_8e4c, i32* %r0.global-to-local, align 4
  %v3_8e54 = inttoptr i32 %v0_8e4c to i8*
  %v4_8e54 = call i32 @function_15f18(i8* %v3_8e54, i32 %v2_8e4c, i32 %v2_8e40)
  store i32 %v4_8e54, i32* %r0.global-to-local, align 4
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, 660
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e60 = load i32, i32* @sb, align 4
  %v2_8e60 = add i32 %v0_8e60, %v3_8e58
  store i32 %v2_8e60, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e64 = icmp eq i32 %v3_8e58, 0
  store i1 %v2_8e64, i1* %cpsr_z.global-to-local, align 1
  %v3_8e68 = add i32 %v2_8e60, 2116
  %v4_8e68 = inttoptr i32 %v3_8e68 to i8*
  store i8 0, i8* %v4_8e68, align 1
  %v0_8e6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e6c, label %dec_label_pc_8e84, label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8dd0
  %v0_8e70 = load i32, i32* @sl, align 4
  %v1_8e70 = add i32 %v0_8e70, 12
  %v2_8e70 = inttoptr i32 %v1_8e70 to i32*
  %v3_8e70 = load i32, i32* %v2_8e70, align 4
  store i32 %v3_8e70, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e74 = icmp eq i32 %v3_8e70, 0
  store i1 %v2_8e74, i1* %cpsr_z.global-to-local, align 1
  %v5_8e78 = icmp sgt i32 %v3_8e70, 0
  br i1 %v5_8e78, label %dec_label_pc_8de8, label %dec_label_pc_8e7c

dec_label_pc_8e7c:                                ; preds = %dec_label_pc_8e70
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8e34
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, -1448
  %v2_8e84 = inttoptr i32 %v1_8e84 to i8*
  %v3_8e84 = load i8, i8* %v2_8e84, align 1
  %v4_8e84 = zext i8 %v3_8e84 to i32
  store i32 %v4_8e84, i32* %r3.global-to-local, align 4
  %v2_8e88 = icmp ugt i8 %v3_8e84, 6
  store i1 %v2_8e88, i1* %cpsr_c.global-to-local, align 1
  %v7_8e88 = icmp eq i8 %v3_8e84, 7
  store i1 %v7_8e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e88, label %dec_label_pc_8e90, label %dec_label_pc_87b4

dec_label_pc_8e90:                                ; preds = %dec_label_pc_8e84
  %v1_8e90 = add i32 %v0_8e84, 660
  %v2_8e90 = inttoptr i32 %v1_8e90 to i32*
  %v3_8e90 = load i32, i32* %v2_8e90, align 4
  store i32 %v3_8e90, i32* %r3.global-to-local, align 4
  %v2_8e94 = icmp ugt i32 %v3_8e90, 1023
  store i1 %v2_8e94, i1* %cpsr_c.global-to-local, align 1
  %v7_8e94 = icmp eq i32 %v3_8e90, 1024
  store i1 %v7_8e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e94, label %dec_label_pc_8e9c.loopexit, label %dec_label_pc_8d9c

dec_label_pc_8e9c.loopexit:                       ; preds = %dec_label_pc_8e90
  %v0_8e9c.pre = load i32, i32* @sb, align 4
  %v0_8ea4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e9c

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e9c.loopexit, %dec_label_pc_8d88
  %v0_8ea4 = phi i32 [ %v0_8ea4.pre, %dec_label_pc_8e9c.loopexit ], [ %v1_8d94, %dec_label_pc_8d88 ]
  %v0_8e9c = phi i32 [ %v0_8e9c.pre, %dec_label_pc_8e9c.loopexit ], [ %v0_8d8c, %dec_label_pc_8d88 ]
  %v1_8ea0 = add i32 %v0_8e9c, 2180
  store i32 %v1_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v0_8ea4, i32* %r0.global-to-local, align 4
  store i32 960, i32* %r2.global-to-local, align 4
  %v3_8eac = inttoptr i32 %v0_8ea4 to i8*
  %v4_8eac = call i32 @function_15f18(i8* %v3_8eac, i32 %v1_8ea0, i32 960)
  store i32 %v4_8eac, i32* %r0.global-to-local, align 4
  %v0_8eb0 = load i32, i32* @sl, align 4
  %v1_8eb0 = add i32 %v0_8eb0, 660
  %v2_8eb0 = inttoptr i32 %v1_8eb0 to i32*
  %v3_8eb0 = load i32, i32* %v2_8eb0, align 4
  store i32 %v3_8eb0, i32* %r3.global-to-local, align 4
  %v1_8eb4 = add i32 %v3_8eb0, -64
  store i32 %v1_8eb4, i32* @r4, align 4
  store i32 %v1_8eb4, i32* %v2_8eb0, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8de8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_8ec8 = call i32 @function_124ec(i32 36, i32* null)
  %v0_8ecc = load i32, i32* @r4, align 4
  store i32 %v0_8ecc, i32* %r1.global-to-local, align 4
  store i32 %v3_8ec8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8ed8 = load i32, i32* @r7, align 4
  store i32 %v0_8ed8, i32* %r0.global-to-local, align 4
  %v4_8edc = call i32 @function_12ef8(i32 %v0_8ed8, i32 %v0_8ecc, i32 %v3_8ec8, i32 11)
  store i32 %v4_8edc, i32* %r0.global-to-local, align 4
  %v3_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v3_8ee0, i1* %cpsr_c.global-to-local, align 1
  %v8_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v8_8ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8ee0, label %dec_label_pc_8ee8, label %dec_label_pc_99a0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec0
  %v0_8ee8 = load i32, i32* @sl, align 4
  %v1_8ee8 = add i32 %v0_8ee8, 12
  %v2_8ee8 = inttoptr i32 %v1_8ee8 to i32*
  %v3_8ee8 = load i32, i32* %v2_8ee8, align 4
  store i32 %v3_8ee8, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8ef0:                                ; preds = %dec_label_pc_8e14
  %v0_8ef0 = load i32, i32* @r7, align 4
  store i32 %v0_8ef0, i32* %r0.global-to-local, align 4
  %v1_8ef4 = add i32 %v0_8e14, 660
  %v2_8ef4 = inttoptr i32 %v1_8ef4 to i32*
  %v3_8ef4 = load i32, i32* %v2_8ef4, align 4
  store i32 %v3_8ef4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8f00 = call i32 @function_12ef8(i32 %v0_8ef0, i32 %v3_8ef4, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_8f00, i32* %r0.global-to-local, align 4
  %v2_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v2_8f04, i1* %cpsr_c.global-to-local, align 1
  %v7_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v7_8f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f04, label %dec_label_pc_8e34, label %dec_label_pc_8f0c

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8ef0
  %v0_8f0c = load i32, i32* @sl, align 4
  %v1_8f0c = add i32 %v0_8f0c, 660
  %v2_8f0c = inttoptr i32 %v1_8f0c to i32*
  %v3_8f0c = load i32, i32* %v2_8f0c, align 4
  store i32 %v3_8f0c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8f18 = load i32, i32* @r7, align 4
  store i32 %v0_8f18, i32* %r0.global-to-local, align 4
  %v5_8f1c = call i32 @function_12ef8(i32 %v0_8f18, i32 %v3_8f0c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  %v1_8f20 = load i32, i32* @sb, align 4
  %v2_8f20 = add i32 %v1_8f20, %v5_8f1c
  store i32 %v2_8f20, i32* %ip.global-to-local, align 4
  store i32 %v5_8f1c, i32* @r6, align 4
  store i32 %v5_8f1c, i32* %r1.global-to-local, align 4
  %v0_8f2c = load i32, i32* @r7, align 4
  store i32 %v0_8f2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32* %r2.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r4, align 4
  store i32 %v0_8f34, i32* %r3.global-to-local, align 4
  %v0_8f38 = load i32, i32* @r5, align 4
  %v1_8f38 = trunc i32 %v0_8f38 to i8
  %v3_8f38 = add i32 %v2_8f20, 2114
  %v4_8f38 = inttoptr i32 %v3_8f38 to i8*
  store i8 %v1_8f38, i8* %v4_8f38, align 1
  %v4_8f3c = call i32 @function_12ef8(i32 %v0_8f2c, i32 %v5_8f1c, i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32 %v0_8f34)
  store i32 %v4_8f3c, i32* %r0.global-to-local, align 4
  %v2_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v2_8f40, i1* %cpsr_c.global-to-local, align 1
  %v7_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v7_8f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f40, label %dec_label_pc_8f64, label %dec_label_pc_8f48

dec_label_pc_8f48:                                ; preds = %dec_label_pc_8f0c
  %v0_8f48 = load i32, i32* @r7, align 4
  store i32 %v0_8f48, i32* %r0.global-to-local, align 4
  %v0_8f4c = load i32, i32* @r6, align 4
  store i32 %v0_8f4c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32* %r2.global-to-local, align 4
  %v0_8f54 = load i32, i32* @r4, align 4
  store i32 %v0_8f54, i32* %r3.global-to-local, align 4
  %v4_8f58 = call i32 @function_12ef8(i32 %v0_8f48, i32 %v0_8f4c, i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32 %v0_8f54)
  %v0_8f5c = load i32, i32* @sb, align 4
  %v2_8f5c = add i32 %v0_8f5c, %v4_8f58
  store i32 %v2_8f5c, i32* %r0.global-to-local, align 4
  %v0_8f60 = load i32, i32* @r5, align 4
  %v1_8f60 = trunc i32 %v0_8f60 to i8
  %v3_8f60 = add i32 %v2_8f5c, 2116
  %v4_8f60 = inttoptr i32 %v3_8f60 to i8*
  store i8 %v1_8f60, i8* %v4_8f60, align 1
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f0c, %dec_label_pc_8f48
  %v0_8f64 = load i32, i32* @r7, align 4
  store i32 %v0_8f64, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f6c = inttoptr i32 %v0_8f64 to i8*
  %v3_8f6c = call i32 @function_12f64(i8* %v2_8f6c, i32 16)
  store i32 %v3_8f6c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f70 = icmp eq i32 %v3_8f6c, 0
  store i1 %v2_8f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f70, label %dec_label_pc_9b54, label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f64
  %v1_8f78 = add i32 %v3_8f6c, 2
  store i32 %v1_8f78, i32* %r3.global-to-local, align 4
  %v1_8f7c = load i32, i32* @sl, align 4
  %v2_8f7c = add i32 %v1_8f7c, 12
  %v3_8f7c = inttoptr i32 %v2_8f7c to i32*
  store i32 %v1_8f78, i32* %v3_8f7c, align 4
  br label %dec_label_pc_8e34

dec_label_pc_8f84:                                ; preds = %dec_label_pc_858c
  %v2_8f84 = inttoptr i32 %v1_85e0 to i32*
  %v3_8f84 = load i32, i32* %v2_8f84, align 4
  store i32 %v3_8f84, i32* %ip.global-to-local, align 4
  %v3_8f8c = udiv i32 %v3_8f84, 32
  %v3_8f90 = mul nuw nsw i32 %v3_8f8c, 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_8f98 = add i32 %v3_8f90, %v2_86d8
  store i32 %v2_8f98, i32* %r2.global-to-local, align 4
  %v1_8f9c = add i32 %v2_8f98, -164
  %v2_8f9c = inttoptr i32 %v1_8f9c to i32*
  %v3_8f9c = load i32, i32* %v2_8f9c, align 4
  %v1_8fa0 = urem i32 %v3_8f84, 32
  store i32 %v1_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v1_8584, i32* %r3.global-to-local, align 4
  %v7_8fa8 = shl i32 %v1_8584, %v1_8fa0
  %v8_8fa8 = or i32 %v3_8f9c, %v7_8fa8
  store i32 %v8_8fa8, i32* %r1.global-to-local, align 4
  %v1_8fac = load i32, i32* @r8, align 4
  %v2_8fac = sub i32 %v3_8f84, %v1_8fac
  %v3_8fac = icmp uge i32 %v3_8f84, %v1_8fac
  store i1 %v3_8fac, i1* %cpsr_c.global-to-local, align 1
  %v4_8fac = xor i32 %v1_8fac, %v3_8f84
  %v5_8fac = xor i32 %v2_8fac, %v3_8f84
  %v6_8fac = and i32 %v5_8fac, %v4_8fac
  %v7_8fac = icmp slt i32 %v6_8fac, 0
  %v8_8fac = icmp slt i32 %v2_8fac, 0
  %v9_8fac = icmp eq i32 %v3_8f84, %v1_8fac
  store i1 %v9_8fac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fa8, i32* %v2_8f9c, align 4
  %v3_8fb4 = xor i1 %v8_8fac, %v7_8fac
  %v4_8fb4 = or i1 %v9_8fac, %v3_8fb4
  br i1 %v4_8fb4, label %dec_label_pc_85bc, label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f84
  %v0_8fb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fb8 = add i32 %v1_8fb8, %v0_8fb8
  store i32 %v2_8fb8, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* @r0, align 4
  %v1_8fc4 = call i32 @function_1663c(i32 %v3_8854)
  store i32 %v1_8fc4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fcc = load i32, i32* @sl, align 4
  %v2_8fcc = add i32 %v1_8fcc, -1452
  %v3_8fcc = inttoptr i32 %v2_8fcc to i32*
  store i32 -1, i32* %v3_8fcc, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v1_8fd0 = trunc i32 %v0_8fd0 to i8
  %v2_8fd0 = load i32, i32* @sl, align 4
  %v3_8fd0 = add i32 %v2_8fd0, -1448
  %v4_8fd0 = inttoptr i32 %v3_8fd0 to i8*
  store i8 %v1_8fd0, i8* %v4_8fd0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8594
  %v2_8fd8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8fd8 = load i32, i32* %v2_8fd8, align 4
  store i32 %v3_8fd8, i32* %ip.global-to-local, align 4
  %v3_8fe0 = udiv i32 %v3_8fd8, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8fe8 = mul nuw nsw i32 %v3_8fe0, 4
  %v2_8fec = add i32 %v3_8fe8, %v2_86d8
  store i32 %v2_8fec, i32* %r2.global-to-local, align 4
  %v1_8ff0 = add i32 %v2_8fec, -164
  %v2_8ff0 = inttoptr i32 %v1_8ff0 to i32*
  %v3_8ff0 = load i32, i32* %v2_8ff0, align 4
  %v1_8ff4 = urem i32 %v3_8fd8, 32
  store i32 %v1_8ff4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8ffc = shl i32 1, %v1_8ff4
  %v8_8ffc = or i32 %v3_8ff0, %v7_8ffc
  store i32 %v8_8ffc, i32* %r1.global-to-local, align 4
  %v1_9000 = load i32, i32* @r8, align 4
  %v2_9000 = sub i32 %v3_8fd8, %v1_9000
  %v3_9000 = icmp uge i32 %v3_8fd8, %v1_9000
  store i1 %v3_9000, i1* %cpsr_c.global-to-local, align 1
  %v4_9000 = xor i32 %v1_9000, %v3_8fd8
  %v5_9000 = xor i32 %v2_9000, %v3_8fd8
  %v6_9000 = and i32 %v5_9000, %v4_9000
  %v7_9000 = icmp slt i32 %v6_9000, 0
  %v8_9000 = icmp slt i32 %v2_9000, 0
  %v9_9000 = icmp eq i32 %v3_8fd8, %v1_9000
  store i1 %v9_9000, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8ffc, i32* %v2_8ff0, align 4
  %v3_9008 = xor i1 %v8_9000, %v7_9000
  %v4_9008 = or i1 %v9_9000, %v3_9008
  br i1 %v4_9008, label %dec_label_pc_85bc, label %dec_label_pc_900c

dec_label_pc_900c:                                ; preds = %dec_label_pc_8fd8
  %v0_900c = load i32, i32* %ip.global-to-local, align 4
  %v1_900c = load i32, i32* %r3.global-to-local, align 4
  %v2_900c = add i32 %v1_900c, %v0_900c
  store i32 %v2_900c, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_9054:                                ; preds = %dec_label_pc_8798
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_905c = call i32 @function_12ed4(i32 %v2_8278, i32 10240)
  store i32 %v2_905c, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9068 = load i32, i32* @sl, align 4
  %v1_9068 = add i32 %v0_9068, -1452
  %v2_9068 = inttoptr i32 %v1_9068 to i32*
  %v3_9068 = load i32, i32* %v2_9068, align 4
  store i32 %v3_9068, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 10240, i32* @r2, align 4
  %v4_9074 = call i32 @function_15524(i32 %v3_9068, i32 %v2_8278, i32 10240, i32 16386)
  store i32 %v4_9074, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* @fp, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_907c = icmp eq i32 %v4_9074, 0
  store i1 %v2_907c, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp169 = icmp slt i32 %v4_9074, 1
  br i1 %tmp169, label %dec_label_pc_95bc, label %dec_label_pc_9088

dec_label_pc_9088:                                ; preds = %dec_label_pc_9054
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9098 = call i32 @function_12ef8(i32 %v2_8278, i32 %v4_9074, i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), i32 4)
  store i32 %v5_9098, i32* %r0.global-to-local, align 4
  %v3_909c = icmp eq i32 %v5_9098, -1
  store i1 %v3_909c, i1* %cpsr_c.global-to-local, align 1
  %v8_909c = icmp eq i32 %v5_9098, -1
  store i1 %v8_909c, i1* %cpsr_z.global-to-local, align 1
  %v0_90a4 = load i32, i32* @fp, align 4
  br i1 %v3_909c, label %dec_label_pc_90a4, label %dec_label_pc_90ac

dec_label_pc_90a4:                                ; preds = %dec_label_pc_9088
  %v3_90a4 = icmp ugt i32 %v0_90a4, 10239
  store i1 %v3_90a4, i1* %cpsr_c.global-to-local, align 1
  %v8_90a4 = icmp eq i32 %v0_90a4, 10240
  store i1 %v8_90a4, i1* %cpsr_z.global-to-local, align 1
  %v5_90a8 = icmp slt i32 %v0_90a4, 10240
  br i1 %v5_90a8, label %dec_label_pc_87b4, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_9088, %dec_label_pc_90a4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_90a4, i32* %r1.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_90bc = call i32 @function_12ef8(i32 %v2_8278, i32 %v0_90a4, i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), i32 4)
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_90c8 = add i32 %v5_90bc, %v2_8278
  %v5_90c8 = inttoptr i32 %v4_90c8 to i8*
  store i8 0, i8* %v5_90c8, align 1
  %v0_90cc = load i32, i32* @r5, align 4
  store i32 %v0_90cc, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_90d4 = inttoptr i32 %v0_90cc to i32*
  %v3_90d4 = call i32 @function_124ec(i32 46, i32* %v2_90d4)
  %v0_90d8 = load i32, i32* @fp, align 4
  store i32 %v0_90d8, i32* @r1, align 4
  store i32 %v3_90d4, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_90e4 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_90d8, i32 %v3_90d4)
  store i32 %v4_90e4, i32* %r0.global-to-local, align 4
  %v2_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v2_90e8, i1* %cpsr_c.global-to-local, align 1
  %v7_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v7_90e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e8, label %.thread22, label %bb170

bb170:                                            ; preds = %dec_label_pc_90ac
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90f0 = load i32, i32* @sl, align 4
  %v3_90f0 = inttoptr i32 %v2_90f0 to i32*
  store i32 2, i32* %v3_90f0, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_90ac, %bb170
  %v0_90f4 = load i32, i32* @r5, align 4
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_90fc = inttoptr i32 %v0_90f4 to i32*
  %v3_90fc = call i32 @function_124ec(i32 45, i32* %v2_90fc)
  %v0_9100 = load i32, i32* @fp, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @function_1319c(i8* %v3_829c, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread23, label %bb171

bb171:                                            ; preds = %.thread22
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9118 = load i32, i32* @sl, align 4
  %v3_9118 = inttoptr i32 %v2_9118 to i32*
  store i32 1, i32* %v3_9118, align 4
  br label %.thread23

.thread23:                                        ; preds = %.thread22, %bb171
  %v0_911c = load i32, i32* @r5, align 4
  store i32 %v0_911c, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9124 = load i32, i32* @sl, align 4
  %v2_9124 = add i32 %v1_9124, 4
  %v3_9124 = inttoptr i32 %v2_9124 to i32*
  store i32 %v0_911c, i32* %v3_9124, align 4
  %v2_9128 = inttoptr i32 %v0_911c to i32*
  %v3_9128 = call i32 @function_124ec(i32 44, i32* %v2_9128)
  %v0_912c = load i32, i32* @fp, align 4
  store i32 %v0_912c, i32* @r1, align 4
  store i32 %v3_9128, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9138 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_912c, i32 %v3_9128)
  store i32 %v4_9138, i32* %r0.global-to-local, align 4
  %v2_913c = icmp eq i32 %v4_9138, -1
  store i1 %v2_913c, i1* %cpsr_c.global-to-local, align 1
  %v7_913c = icmp eq i32 %v4_9138, -1
  store i1 %v7_913c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_913c, label %.thread24, label %dec_label_pc_9144

dec_label_pc_9144:                                ; preds = %.thread23
  %v0_9144 = load i32, i32* @r5, align 4
  store i32 %v0_9144, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_914c = inttoptr i32 %v0_9144 to i32*
  %v3_914c = call i32 @function_124ec(i32 44, i32* %v2_914c)
  %v0_9150 = load i32, i32* @fp, align 4
  store i32 %v0_9150, i32* @r1, align 4
  store i32 %v3_914c, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_915c = call i32 @function_1319c(i8* %v3_829c, i32 %v0_9150, i32 %v3_914c)
  store i32 %v4_915c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9164 = add i32 %v4_915c, %v2_8278
  %v3_9164 = inttoptr i32 %v2_9164 to i8*
  %v4_9164 = load i8, i8* %v3_9164, align 1
  %v2_916c = icmp ugt i8 %v4_9164, 31
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i8 %v4_9164, 32
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  %v2_9174 = zext i1 %v7_916c to i32
  %v2_9174.v4_915c = add i32 %v2_9174, %v4_915c
  store i32 %v2_9174.v4_915c, i32* @r4, align 4
  %v2_9178 = add i32 %v2_9174.v4_915c, %v2_8278
  store i32 %v2_9178, i32* @r6, align 4
  store i32 %v2_9178, i32* %r0.global-to-local, align 4
  %v1_9180 = load i32, i32* @fp, align 4
  %v2_9180 = sub i32 %v1_9180, %v2_9174.v4_915c
  store i32 %v2_9180, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_918c = call i32 @function_12ef8(i32 %v2_9178, i32 %v2_9180, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_918c, i32* %r0.global-to-local, align 4
  %v2_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v2_9190, i1* %cpsr_c.global-to-local, align 1
  %v7_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v7_9190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9190, label %.thread24, label %dec_label_pc_9198

dec_label_pc_9198:                                ; preds = %dec_label_pc_9144
  %v2_9198 = icmp ne i32 %v5_918c, 0
  store i1 %v2_9198, i1* %cpsr_c.global-to-local, align 1
  %v7_9198 = icmp eq i32 %v5_918c, 1
  store i1 %v7_9198, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_91a0 = icmp slt i32 %v5_918c, 2
  br i1 %v7_91a0, label %bb173, label %bb172

bb172:                                            ; preds = %dec_label_pc_9198
  %v9_91a0 = add i32 %v5_918c, -2
  store i32 %v9_91a0, i32* %r0.global-to-local, align 4
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_9198, %bb172
  %v1_91a8 = phi i32 [ %v5_918c, %dec_label_pc_9198 ], [ %v9_91a0, %bb172 ]
  store i32 %v2_86d8, i32* %r2.global-to-local, align 4
  %v2_91a8 = add i32 %v1_91a8, %v2_86d8
  %v1_91ac = load i32, i32* @r4, align 4
  %v2_91ac = add i32 %v2_91a8, %v1_91ac
  store i32 %v2_91ac, i32* %r3.global-to-local, align 4
  %v0_91b0 = load i32, i32* @r5, align 4
  %v1_91b0 = trunc i32 %v0_91b0 to i8
  %v3_91b0 = load i32, i32* @r7, align 4
  %v4_91b0 = add i32 %v3_91b0, %v2_91ac
  %v5_91b0 = inttoptr i32 %v4_91b0 to i8*
  store i8 %v1_91b0, i8* %v5_91b0, align 1
  %v0_91b4 = load i32, i32* @r6, align 4
  store i32 %v0_91b4, i32* %r0.global-to-local, align 4
  %v1_91b8 = inttoptr i32 %v0_91b4 to i8*
  %v2_91b8 = call i32 @function_12e40(i8* %v1_91b8)
  %v0_91bc = load i32, i32* @r5, align 4
  store i32 %v0_91bc, i32* %r1.global-to-local, align 4
  store i32 %v2_91b8, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_91c8 = inttoptr i32 %v0_91bc to i32*
  %v3_91c8 = call i32 @function_124ec(i32 43, i32* %v2_91c8)
  %v0_91cc = load i32, i32* @r4, align 4
  store i32 %v0_91cc, i32* @r1, align 4
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  store i32 %v0_91d4, i32* %r0.global-to-local, align 4
  %v3_91d8 = inttoptr i32 %v0_91d4 to i8*
  %v4_91d8 = call i32 @function_1319c(i8* %v3_91d8, i32 %v0_91cc, i32 %v3_91c8)
  store i32 %v4_91d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91dc = icmp eq i32 %v4_91d8, 0
  store i1 %v2_91dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91dc, label %.thread24, label %bb174

bb174:                                            ; preds = %bb173
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91e4 = load i32, i32* @sl, align 4
  %v3_91e4 = add i32 %v2_91e4, 4
  %v4_91e4 = inttoptr i32 %v3_91e4 to i32*
  store i32 1, i32* %v4_91e4, align 4
  br label %.thread24

.thread24:                                        ; preds = %bb173, %dec_label_pc_9144, %.thread23, %bb174
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_91f4 = load i32, i32* @sl, align 4
  %v2_91f4 = add i32 %v1_91f4, 8
  %v3_91f4 = inttoptr i32 %v2_91f4 to i32*
  store i32 0, i32* %v3_91f4, align 4
  %v3_91f8 = call i32 @function_124ec(i32 41, i32* null)
  %v0_91fc = load i32, i32* @fp, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  %v2_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v2_9210, i1* %cpsr_c.global-to-local, align 1
  %v7_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v7_9210, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9210, label %.thread25, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %.thread24
  %v0_921c = load i32, i32* @r7, align 4
  store i32 %v0_921c, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9224 = inttoptr i32 %v0_921c to i32*
  %v3_9224 = call i32 @function_124ec(i32 41, i32* %v2_9224)
  %v0_9228 = load i32, i32* @fp, align 4
  store i32 %v0_9228, i32* @r1, align 4
  store i32 %v3_9224, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9234 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_9228, i32 %v3_9224)
  store i32 %v4_9234, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_923c = add i32 %v4_9234, %v2_8278
  %v3_923c = inttoptr i32 %v2_923c to i8*
  %v4_923c = load i8, i8* %v3_923c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9244 = icmp ugt i8 %v4_923c, 31
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i8 %v4_923c, 32
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  %v2_924c = zext i1 %v7_9244 to i32
  %v2_924c.v4_9234 = add i32 %v2_924c, %v4_9234
  store i32 %v2_924c.v4_9234, i32* @r4, align 4
  %v2_9250 = add i32 %v2_924c.v4_9234, %v2_8278
  store i32 %v2_9250, i32* @r5, align 4
  store i32 %v2_9250, i32* %r0.global-to-local, align 4
  %v1_9258 = load i32, i32* @fp, align 4
  %v2_9258 = sub i32 %v1_9258, %v2_924c.v4_9234
  store i32 %v2_9258, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9264 = call i32 @function_12ef8(i32 %v2_9250, i32 %v2_9258, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_9264, i32* %r0.global-to-local, align 4
  %v2_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v2_9268, i1* %cpsr_c.global-to-local, align 1
  %v7_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v7_9268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9268, label %.thread25, label %dec_label_pc_9270

dec_label_pc_9270:                                ; preds = %dec_label_pc_921c
  %v2_9270 = icmp ne i32 %v5_9264, 0
  store i1 %v2_9270, i1* %cpsr_c.global-to-local, align 1
  %v7_9270 = icmp eq i32 %v5_9264, 1
  store i1 %v7_9270, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_9278 = icmp slt i32 %v5_9264, 2
  br i1 %v7_9278, label %bb176, label %bb175

bb175:                                            ; preds = %dec_label_pc_9270
  %v9_9278 = add i32 %v5_9264, -2
  store i32 %v9_9278, i32* %r0.global-to-local, align 4
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_9270, %bb175
  %v1_9280 = phi i32 [ %v5_9264, %dec_label_pc_9270 ], [ %v9_9278, %bb175 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_9280 = add i32 %v1_9280, %v2_86d8
  %v1_9284 = load i32, i32* @r4, align 4
  %v2_9284 = add i32 %v2_9280, %v1_9284
  store i32 %v2_9284, i32* %r3.global-to-local, align 4
  %v0_9288 = load i32, i32* @r7, align 4
  %v1_9288 = trunc i32 %v0_9288 to i8
  %v3_9288 = load i32, i32* @r6, align 4
  %v4_9288 = add i32 %v3_9288, %v2_9284
  %v5_9288 = inttoptr i32 %v4_9288 to i8*
  store i8 %v1_9288, i8* %v5_9288, align 1
  %v0_928c = load i32, i32* @r5, align 4
  store i32 %v0_928c, i32* %r0.global-to-local, align 4
  %v1_9290 = inttoptr i32 %v0_928c to i8*
  %v2_9290 = call i32 @function_12e40(i8* %v1_9290)
  %v0_9294 = load i32, i32* @r7, align 4
  store i32 %v0_9294, i32* %r1.global-to-local, align 4
  store i32 %v2_9290, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_92a0 = inttoptr i32 %v0_9294 to i32*
  %v3_92a0 = call i32 @function_124ec(i32 42, i32* %v2_92a0)
  %v0_92a4 = load i32, i32* @r4, align 4
  store i32 %v0_92a4, i32* @r1, align 4
  store i32 %v3_92a0, i32* %r2.global-to-local, align 4
  %v0_92ac = load i32, i32* @r5, align 4
  store i32 %v0_92ac, i32* %r0.global-to-local, align 4
  %v3_92b0 = inttoptr i32 %v0_92ac to i8*
  %v4_92b0 = call i32 @function_1319c(i8* %v3_92b0, i32 %v0_92a4, i32 %v3_92a0)
  store i32 %v4_92b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_92b4 = icmp eq i32 %v4_92b0, 0
  store i1 %v2_92b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_92b4, label %.thread25, label %bb177

bb177:                                            ; preds = %bb176
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_92bc = load i32, i32* @sl, align 4
  %v3_92bc = add i32 %v2_92bc, 8
  %v4_92bc = inttoptr i32 %v3_92bc to i32*
  store i32 1, i32* %v4_92bc, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb176, %dec_label_pc_921c, %.thread24, %bb177
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92c8 = call i32 @function_124ec(i32 40, i32* null)
  %v0_92cc = load i32, i32* @fp, align 4
  store i32 %v0_92cc, i32* @r1, align 4
  store i32 %v3_92c8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_92d8 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_92cc, i32 %v3_92c8)
  store i32 %v4_92d8, i32* %r0.global-to-local, align 4
  %v2_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v7_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v7_92dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92dc, label %.thread, label %dec_label_pc_92f4

.thread:                                          ; preds = %.thread25
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92ec = load i32, i32* @sl, align 4
  %v3_92ec = add i32 %v2_92ec, 12
  %v4_92ec = inttoptr i32 %v3_92ec to i32*
  store i32 0, i32* %v4_92ec, align 4
  br label %dec_label_pc_9378

dec_label_pc_92f4:                                ; preds = %.thread25
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92fc = call i32 @function_124ec(i32 40, i32* null)
  %v0_9300 = load i32, i32* @fp, align 4
  store i32 %v0_9300, i32* @r1, align 4
  store i32 %v3_92fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_930c = call i32 @function_1319c(i8* %v3_829c, i32 %v0_9300, i32 %v3_92fc)
  store i32 %v4_930c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %r2.global-to-local, align 4
  %v2_9314 = add i32 %v4_930c, %v2_8278
  %v3_9314 = inttoptr i32 %v2_9314 to i8*
  %v4_9314 = load i8, i8* %v3_9314, align 1
  %v2_9318 = icmp ugt i8 %v4_9314, 31
  store i1 %v2_9318, i1* %cpsr_c.global-to-local, align 1
  %v7_9318 = icmp eq i8 %v4_9314, 32
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  %v2_9324 = zext i1 %v7_9318 to i32
  %v2_9324.v4_930c = add i32 %v2_9324, %v4_930c
  store i32 %v2_9324.v4_930c, i32* @r4, align 4
  %v2_9328 = add i32 %v2_9324.v4_930c, %v2_8278
  store i32 %v2_9328, i32* @r5, align 4
  store i32 %v2_9328, i32* %r0.global-to-local, align 4
  %v1_9330 = load i32, i32* @fp, align 4
  %v2_9330 = sub i32 %v1_9330, %v2_9324.v4_930c
  store i32 %v2_9330, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_933c = call i32 @function_12ef8(i32 %v2_9328, i32 %v2_9330, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_933c, i32* %r0.global-to-local, align 4
  %v2_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v2_9340, i1* %cpsr_c.global-to-local, align 1
  %v7_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %dec_label_pc_9378, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_92f4
  %v2_9348 = icmp ne i32 %v5_933c, 0
  store i1 %v2_9348, i1* %cpsr_c.global-to-local, align 1
  %v7_9348 = icmp eq i32 %v5_933c, 1
  store i1 %v7_9348, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %ip.global-to-local, align 4
  %v7_9350 = icmp slt i32 %v5_933c, 2
  br i1 %v7_9350, label %bb179, label %bb178

bb178:                                            ; preds = %dec_label_pc_9348
  %v9_9350 = add i32 %v5_933c, -2
  store i32 %v9_9350, i32* %r0.global-to-local, align 4
  br label %bb179

bb179:                                            ; preds = %dec_label_pc_9348, %bb178
  %v1_9358 = phi i32 [ %v5_933c, %dec_label_pc_9348 ], [ %v9_9350, %bb178 ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v2_9358 = add i32 %v1_9358, %v2_86d8
  %v1_935c = load i32, i32* @r4, align 4
  %v2_935c = add i32 %v2_9358, %v1_935c
  store i32 %v2_935c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9364 = load i32, i32* @r5, align 4
  store i32 %v0_9364, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_936c = load i32, i32* @r6, align 4
  %v4_936c = add i32 %v3_936c, %v2_935c
  %v5_936c = inttoptr i32 %v4_936c to i8*
  store i8 0, i8* %v5_936c, align 1
  %v2_9370 = inttoptr i32 %v0_9364 to i8*
  %v3_9370 = call i32 @function_12f64(i8* %v2_9370, i32 10)
  store i32 %v3_9370, i32* %r0.global-to-local, align 4
  %v1_9374 = load i32, i32* @sl, align 4
  %v2_9374 = add i32 %v1_9374, 12
  %v3_9374 = inttoptr i32 %v2_9374 to i32*
  store i32 %v3_9370, i32* %v3_9374, align 4
  br label %dec_label_pc_9378

dec_label_pc_9378:                                ; preds = %.thread, %dec_label_pc_92f4, %bb179
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_937c:                                ; preds = %dec_label_pc_9548, %dec_label_pc_94c8, %dec_label_pc_9378
  %v1_9388 = phi i32 [ 0, %dec_label_pc_9378 ], [ %v0_94c8, %dec_label_pc_94c8 ], [ %v1_9388.pre.pre, %dec_label_pc_9548 ]
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_9388 = add i32 %v1_9388, %v2_8278
  store i32 %v2_9388, i32* @r4, align 4
  %v3_938c = call i32 @function_124ec(i32 39, i32* null)
  %v0_9390 = load i32, i32* @fp, align 4
  store i32 %v0_9390, i32* @r1, align 4
  store i32 %v3_938c, i32* %r2.global-to-local, align 4
  %v0_9398 = load i32, i32* @r4, align 4
  store i32 %v0_9398, i32* %r0.global-to-local, align 4
  %v3_939c = inttoptr i32 %v0_9398 to i8*
  %v4_939c = call i32 @function_1319c(i8* %v3_939c, i32 %v0_9390, i32 %v3_938c)
  store i32 %v4_939c, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v2_93a8, i1* %cpsr_c.global-to-local, align 1
  %v7_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v7_93a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93a8, label %dec_label_pc_95d8, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_937c
  %v0_93b4 = load i32, i32* @sl, align 4
  %v1_93b4 = add i32 %v0_93b4, 16
  %v2_93b4 = inttoptr i32 %v1_93b4 to i32*
  %v3_93b4 = load i32, i32* %v2_93b4, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v2_93b8 = icmp ugt i32 %v3_93b4, 3
  store i1 %v2_93b8, i1* %cpsr_c.global-to-local, align 1
  %v7_93b8 = icmp eq i32 %v3_93b4, 4
  store i1 %v7_93b8, i1* %cpsr_z.global-to-local, align 1
  %v8_93bc = icmp sgt i32 %v3_93b4, 4
  br i1 %v8_93bc, label %dec_label_pc_95d8, label %dec_label_pc_93c0

dec_label_pc_93c0:                                ; preds = %dec_label_pc_93b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_93c8 = call i32 @function_124ec(i32 39, i32* null)
  %v0_93cc = load i32, i32* @fp, align 4
  store i32 %v0_93cc, i32* @r1, align 4
  store i32 %v3_93c8, i32* %r2.global-to-local, align 4
  %v0_93d4 = load i32, i32* @r4, align 4
  store i32 %v0_93d4, i32* %r0.global-to-local, align 4
  %v3_93d8 = inttoptr i32 %v0_93d4 to i8*
  %v4_93d8 = call i32 @function_1319c(i8* %v3_93d8, i32 %v0_93cc, i32 %v3_93c8)
  store i32 %v4_93d8, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v1_93e0 = load i32, i32* @r5, align 4
  %v2_93e0 = add i32 %v1_93e0, %v4_93d8
  store i32 %v2_93e0, i32* @r8, align 4
  %v2_93e4 = add i32 %v2_93e0, %v2_8278
  %v3_93e4 = inttoptr i32 %v2_93e4 to i8*
  %v4_93e4 = load i8, i8* %v3_93e4, align 1
  %v6_93e4 = zext i8 %v4_93e4 to i32
  store i32 %v6_93e4, i32* %r3.global-to-local, align 4
  %v2_93e8 = icmp ugt i8 %v4_93e4, 31
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i8 %v4_93e4, 32
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93e8, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_93c0
  %v2_93ec = add i32 %v4_93d8, 1
  store i32 %v2_93ec, i32* %r0.global-to-local, align 4
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_93c0, %bb180
  %v1_93fc = phi i32 [ %v4_93d8, %dec_label_pc_93c0 ], [ %v2_93ec, %bb180 ]
  %v1_93f0 = load i32, i32* @fp, align 4
  %v2_93f0 = sub i32 %v1_93f0, %v1_93e0
  store i32 %v2_93f0, i32* %r3.global-to-local, align 4
  %v2_93f4 = sub i32 %v2_93f0, %v1_93fc
  store i32 %v2_93f4, i32* @r7, align 4
  %v0_93f8 = load i32, i32* @r4, align 4
  %v2_93f8 = add i32 %v0_93f8, %v1_93fc
  store i32 %v2_93f8, i32* @r6, align 4
  br i1 %v7_93e8, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  %v3_93fc = add i32 %v1_93fc, %v1_93e0
  store i32 %v3_93fc, i32* @r8, align 4
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  store i32 %v2_93f4, i32* %r1.global-to-local, align 4
  store i32 %v2_93f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9410 = call i32 @function_12ef8(i32 %v2_93f8, i32 %v2_93f4, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_9410, i32* %r0.global-to-local, align 4
  %v2_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v2_9414, i1* %cpsr_c.global-to-local, align 1
  %v7_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v7_9414, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9410, i32* @r4, align 4
  br i1 %v7_9414, label %dec_label_pc_94c8, label %dec_label_pc_9420

dec_label_pc_9420:                                ; preds = %bb183
  store i32 %v2_8278, i32* %r1.global-to-local, align 4
  %v2_9424 = icmp ne i32 %v5_9410, 0
  store i1 %v2_9424, i1* %cpsr_c.global-to-local, align 1
  %v7_9424 = icmp eq i32 %v5_9410, 1
  store i1 %v7_9424, i1* %cpsr_z.global-to-local, align 1
  %v7_9428 = icmp slt i32 %v5_9410, 2
  br i1 %v7_9428, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_9420
  %v9_9428 = add i32 %v5_9410, -2
  store i32 %v9_9428, i32* @r4, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_9420, %bb184
  %v1_942c = load i32, i32* @r8, align 4
  %v2_942c = add i32 %v1_942c, %v2_8278
  store i32 %v2_942c, i32* @r5, align 4
  %v0_9430 = load i32, i32* @r6, align 4
  store i32 %v0_9430, i32* %r0.global-to-local, align 4
  %v0_9434 = load i32, i32* @r7, align 4
  store i32 %v0_9434, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9440 = call i32 @function_12ef8(i32 %v0_9430, i32 %v0_9434, i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32 1)
  store i32 %v4_9440, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9444 = icmp eq i32 %v4_9440, 0
  store i1 %v2_9444, i1* %cpsr_z.global-to-local, align 1
  %tmp186 = icmp slt i32 %v4_9440, 1
  br i1 %tmp186, label %.dec_label_pc_9464_crit_edge, label %dec_label_pc_944c

.dec_label_pc_9464_crit_edge:                     ; preds = %bb185
  %v1_9478.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9464

dec_label_pc_944c:                                ; preds = %bb185
  %v0_944c = load i32, i32* @r6, align 4
  store i32 %v0_944c, i32* %r0.global-to-local, align 4
  %v0_9450 = load i32, i32* @r7, align 4
  store i32 %v0_9450, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_945c = call i32 @function_12ef8(i32 %v0_944c, i32 %v0_9450, i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), i32 1)
  store i32 %v4_945c, i32* %r0.global-to-local, align 4
  %v1_9460 = add i32 %v4_945c, -1
  store i32 %v1_9460, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9464

dec_label_pc_9464:                                ; preds = %.dec_label_pc_9464_crit_edge, %dec_label_pc_944c
  %v1_9478 = phi i32 [ %v1_9478.pre, %.dec_label_pc_9464_crit_edge ], [ %v1_9460, %dec_label_pc_944c ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v1_946c = load i32, i32* @r8, align 4
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_946c = add i32 %v1_9478, %v2_86d8
  %v2_9478 = add i32 %v2_946c, %v1_946c
  store i32 %v2_9478, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9480 = add i32 %v2_9478, -20773
  %v5_9480 = inttoptr i32 %v4_9480 to i8*
  store i8 0, i8* %v5_9480, align 1
  %storemerge5.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_94a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_94a0

dec_label_pc_948c:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_9498

dec_label_pc_9498:                                ; preds = %dec_label_pc_948c
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_94a0

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9464, %dec_label_pc_9498
  %v0_94a0 = phi i32 [ %v0_948c, %dec_label_pc_9498 ], [ %v0_94a0.pre, %dec_label_pc_9464 ]
  %storemerge5 = phi i32 [ %v1_94b4, %dec_label_pc_9498 ], [ %storemerge5.pre, %dec_label_pc_9464 ]
  store i32 %storemerge5, i32* %stack_var_-44, align 4
  store i32 %v0_94a0, i32* %r0.global-to-local, align 4
  %v1_94a4 = inttoptr i32 %v0_94a0 to i8*
  %v2_94a4 = call i32 @function_12e40(i8* %v1_94a4)
  store i32 %v2_94a4, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_94ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94ac, i32* %r4.global-to-local, align 4
  %v3_94b0 = icmp uge i32 %v2_94a4, %v3_94ac
  store i1 %v3_94b0, i1* %cpsr_c.global-to-local, align 1
  %v9_94b0 = icmp eq i32 %v2_94a4, %v3_94ac
  store i1 %v9_94b0, i1* %cpsr_z.global-to-local, align 1
  %v1_94b4 = add i32 %v3_94ac, 1
  store i32 %v1_94b4, i32* %ip.global-to-local, align 4
  %v8_94b8 = icmp sgt i32 %v2_94a4, %v3_94ac
  %v0_948c = load i32, i32* @r5, align 4
  %v2_948c = add i32 %v0_948c, %v3_94ac
  %v3_948c = inttoptr i32 %v2_948c to i8*
  %v4_948c = load i8, i8* %v3_948c, align 1
  %v6_948c = zext i8 %v4_948c to i32
  store i32 %v6_948c, i32* %r3.global-to-local, align 4
  %v2_9490 = icmp ugt i8 %v4_948c, 60
  store i1 %v2_9490, i1* %cpsr_c.global-to-local, align 1
  %v7_9490 = icmp eq i8 %v4_948c, 61
  store i1 %v7_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_94b8, label %dec_label_pc_948c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_94c8

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9514, %dec_label_pc_9538, %dec_label_pc_94bc, %bb183
  %v0_94c8 = load i32, i32* @r8, align 4
  store i32 %v0_94c8, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_94d0:                                ; preds = %dec_label_pc_948c, %dec_label_pc_94bc
  %v0_94d0 = load i32, i32* @sl, align 4
  %v1_94d0 = add i32 %v0_94d0, 16
  %v2_94d0 = inttoptr i32 %v1_94d0 to i32*
  %v3_94d0 = load i32, i32* %v2_94d0, align 4
  store i32 %v3_94d0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94dc = icmp eq i32 %v3_94d0, 0
  store i1 %v2_94dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp187 = icmp slt i32 %v3_94d0, 1
  br i1 %tmp187, label %dec_label_pc_9538, label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94d0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9514
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94f4, i32* %r3.global-to-local, align 4
  %v0_94f8 = load i32, i32* @sl, align 4
  %v1_94f8 = add i32 %v0_94f8, 16
  %v2_94f8 = inttoptr i32 %v1_94f8 to i32*
  %v3_94f8 = load i32, i32* %v2_94f8, align 4
  %v1_94fc = add i32 %v3_94f4, 1
  store i32 %v1_94fc, i32* %ip.global-to-local, align 4
  %v3_9500 = icmp uge i32 %v3_94f8, %v1_94fc
  store i1 %v3_9500, i1* %cpsr_c.global-to-local, align 1
  %v9_9500 = icmp eq i32 %v3_94f8, %v1_94fc
  store i1 %v9_9500, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94fc, i32* %r1.global-to-local, align 4
  store i32 %v1_94fc, i32* %stack_var_-44, align 4
  %v7_9510 = icmp sgt i32 %v3_94f8, %v1_94fc
  %v0_9520.pre = load i32, i32* @r5, align 4
  br i1 %v7_9510, label %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, label %dec_label_pc_9538

dec_label_pc_94f0.dec_label_pc_9514_crit_edge:    ; preds = %dec_label_pc_94f0
  %v0_9524.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_9514:                                ; preds = %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, %dec_label_pc_94e8
  %v0_9524 = phi i32 [ %v0_9524.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v3_94ac, %dec_label_pc_94e8 ]
  %v0_9520 = phi i32 [ %v0_9520.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v0_948c, %dec_label_pc_94e8 ]
  %v0_9514 = phi i32 [ %v1_94fc, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ 0, %dec_label_pc_94e8 ]
  %v1_9514 = and i32 %v0_9514, 33554432
  %v2_9514 = icmp ne i32 %v1_9514, 0
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v3_9514 = mul i32 %v0_9514, 128
  %v1_9518 = add i32 %v3_9514, 1472
  %v0_951c = load i32, i32* @sb, align 4
  %v2_951c = add i32 %v1_9518, %v0_951c
  store i32 %v2_951c, i32* %r1.global-to-local, align 4
  store i32 %v0_9520, i32* %r0.global-to-local, align 4
  store i32 %v0_9524, i32* %r2.global-to-local, align 4
  %v3_9528 = inttoptr i32 %v0_9520 to i8*
  %v4_9528 = call i32 @function_132ac(i8* %v3_9528, i32 %v2_951c, i32 %v0_9524)
  store i32 %v4_9528, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_952c = icmp eq i32 %v4_9528, 0
  store i1 %v2_952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_952c, label %dec_label_pc_94f0, label %dec_label_pc_94c8

dec_label_pc_9538:                                ; preds = %dec_label_pc_94f0, %dec_label_pc_94d0
  %v0_9538 = phi i32 [ %v0_948c, %dec_label_pc_94d0 ], [ %v0_9520.pre, %dec_label_pc_94f0 ]
  store i32 %v0_9538, i32* %r0.global-to-local, align 4
  %v1_953c = inttoptr i32 %v0_9538 to i8*
  %v2_953c = call i32 @function_12e40(i8* %v1_953c)
  store i32 %v2_953c, i32* %r0.global-to-local, align 4
  %v2_9540 = icmp ugt i32 %v2_953c, 126
  store i1 %v2_9540, i1* %cpsr_c.global-to-local, align 1
  %v7_9540 = icmp eq i32 %v2_953c, 127
  store i1 %v7_9540, i1* %cpsr_z.global-to-local, align 1
  %v8_9544 = icmp sgt i32 %v2_953c, 127
  br i1 %v8_9544, label %dec_label_pc_94c8, label %dec_label_pc_9548

dec_label_pc_9548:                                ; preds = %dec_label_pc_9538
  %v0_9548 = load i32, i32* @sl, align 4
  %v1_9548 = add i32 %v0_9548, 16
  %v2_9548 = inttoptr i32 %v1_9548 to i32*
  %v3_9548 = load i32, i32* %v2_9548, align 4
  %v1_954c = and i32 %v3_9548, 33554432
  %v2_954c = icmp ne i32 %v1_954c, 0
  store i1 %v2_954c, i1* %cpsr_c.global-to-local, align 1
  %v3_954c = mul i32 %v3_9548, 128
  %v1_9550 = add i32 %v3_954c, 1472
  %v0_9554 = load i32, i32* @r5, align 4
  store i32 %v0_9554, i32* %r1.global-to-local, align 4
  %v0_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9550, %v0_9558
  store i32 %v2_9558, i32* @r0, align 4
  %v2_955c = inttoptr i32 %v2_9558 to i8*
  %v3_955c = call i32 @function_12e68(i8* %v2_955c, i32 %v0_9554)
  store i32 %v3_955c, i32* %r0.global-to-local, align 4
  %v0_9560 = load i32, i32* @sl, align 4
  %v1_9560 = add i32 %v0_9560, 16
  %v2_9560 = inttoptr i32 %v1_9560 to i32*
  %v3_9560 = load i32, i32* %v2_9560, align 4
  %v0_9564 = load i32, i32* @r8, align 4
  store i32 %v0_9564, i32* @r5, align 4
  %v1_9568 = add i32 %v3_9560, 1
  store i32 %v1_9568, i32* %r3.global-to-local, align 4
  store i32 %v1_9568, i32* %v2_9560, align 4
  %v1_9388.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_9574:                                ; preds = %dec_label_pc_859c
  store i32 %v1_859c, i32* %r3.global-to-local, align 4
  %v1_9578 = trunc i32 %v1_859c to i8
  store i8 %v1_9578, i8* %v2_85d4, align 1
  %v0_957c = load i32, i32* @r6, align 4
  %v1_957c = add i32 %v0_957c, -1452
  %v2_957c = inttoptr i32 %v1_957c to i32*
  %v3_957c = load i32, i32* %v2_957c, align 4
  store i32 %v3_957c, i32* @r0, align 4
  %v1_9580 = call i32 @function_1663c(i32 %v3_957c)
  store i32 %v1_9580, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9588 = load i32, i32* @r6, align 4
  %v2_9588 = add i32 %v1_9588, -1452
  %v3_9588 = inttoptr i32 %v2_9588 to i32*
  store i32 -1, i32* %v3_9588, align 4
  br label %dec_label_pc_85bc

dec_label_pc_9590:                                ; preds = %dec_label_pc_8d9c
  %v0_9590 = call i32 @function_139e8()
  store i32 %v0_9590, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9598 = inttoptr i32 %v0_9590 to i32*
  store i32 104, i32* %v2_9598, align 4
  br label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %dec_label_pc_8dc8, %dec_label_pc_9590
  %v0_959c = call i32 @function_139e8()
  store i32 %v0_959c, i32* %r0.global-to-local, align 4
  %v1_95a0 = inttoptr i32 %v0_959c to i32*
  %v2_95a0 = load i32, i32* %v1_95a0, align 4
  store i32 %v2_95a0, i32* %r3.global-to-local, align 4
  %v2_95a4 = icmp ugt i32 %v2_95a0, 10
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v2_95a0, 11
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_87b4, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_959c
  %v0_95ac = call i32 @function_139e8()
  store i32 %v0_95ac, i32* %r0.global-to-local, align 4
  %v1_95b0 = inttoptr i32 %v0_95ac to i32*
  %v2_95b0 = load i32, i32* %v1_95b0, align 4
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v2_95b4 = icmp ugt i32 %v2_95b0, 10
  store i1 %v2_95b4, i1* %cpsr_c.global-to-local, align 1
  %v7_95b4 = icmp eq i32 %v2_95b0, 11
  store i1 %v7_95b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95b4, label %dec_label_pc_87b4, label %dec_label_pc_95bc

dec_label_pc_95bc:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_95ac, %dec_label_pc_9054
  %v0_95bc = load i32, i32* @sl, align 4
  %v1_95bc = add i32 %v0_95bc, -1452
  %v2_95bc = inttoptr i32 %v1_95bc to i32*
  %v3_95bc = load i32, i32* %v2_95bc, align 4
  store i32 %v3_95bc, i32* @r0, align 4
  %v1_95c0 = call i32 @function_1663c(i32 %v3_95bc)
  store i32 %v1_95c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_95cc = load i32, i32* @sl, align 4
  %v2_95cc = add i32 %v1_95cc, -1452
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 -1, i32* %v3_95cc, align 4
  %v0_95d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i8
  %v2_95d0 = load i32, i32* @sl, align 4
  %v3_95d0 = add i32 %v2_95d0, -1448
  %v4_95d0 = inttoptr i32 %v3_95d0 to i8*
  store i8 %v1_95d0, i8* %v4_95d0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_95d8:                                ; preds = %dec_label_pc_93b4, %dec_label_pc_937c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_95e0 = call i32 @function_124ec(i32 38, i32* null)
  %v0_95e4 = load i32, i32* @fp, align 4
  store i32 %v0_95e4, i32* @r1, align 4
  store i32 %v3_95e0, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_95f0 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_95e4, i32 %v3_95e0)
  store i32 %v4_95f0, i32* %r0.global-to-local, align 4
  %v2_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v2_95f4, i1* %cpsr_c.global-to-local, align 1
  %v7_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v7_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f4, label %dec_label_pc_9720, label %dec_label_pc_95fc

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9604 = call i32 @function_124ec(i32 38, i32* null)
  %v0_9608 = load i32, i32* @fp, align 4
  store i32 %v0_9608, i32* @r1, align 4
  store i32 %v3_9604, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9614 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_9608, i32 %v3_9604)
  store i32 %v4_9614, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_961c = add i32 %v4_9614, %v2_8278
  %v3_961c = inttoptr i32 %v2_961c to i8*
  %v4_961c = load i8, i8* %v3_961c, align 1
  %v2_9624 = icmp ugt i8 %v4_961c, 31
  store i1 %v2_9624, i1* %cpsr_c.global-to-local, align 1
  %v7_9624 = icmp eq i8 %v4_961c, 32
  store i1 %v7_9624, i1* %cpsr_z.global-to-local, align 1
  %v2_962c = zext i1 %v7_9624 to i32
  %v2_962c.v4_9614 = add i32 %v2_962c, %v4_9614
  store i32 %v2_962c.v4_9614, i32* @r4, align 4
  %v2_9630 = add i32 %v2_962c.v4_9614, %v2_8278
  store i32 %v2_9630, i32* @r5, align 4
  store i32 %v2_9630, i32* %r0.global-to-local, align 4
  %v1_9638 = load i32, i32* @fp, align 4
  %v2_9638 = sub i32 %v1_9638, %v2_962c.v4_9614
  store i32 %v2_9638, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9644 = call i32 @function_12ef8(i32 %v2_9630, i32 %v2_9638, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_9644, i32* %r0.global-to-local, align 4
  %v2_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v2_9648, i1* %cpsr_c.global-to-local, align 1
  %v7_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v7_9648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9648, label %dec_label_pc_9720, label %dec_label_pc_9650

dec_label_pc_9650:                                ; preds = %dec_label_pc_95fc
  %v2_9650 = icmp ne i32 %v5_9644, 0
  store i1 %v2_9650, i1* %cpsr_c.global-to-local, align 1
  %v7_9650 = icmp eq i32 %v5_9644, 1
  store i1 %v7_9650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_9658 = icmp slt i32 %v5_9644, 2
  br i1 %v7_9658, label %bb189, label %bb188

bb188:                                            ; preds = %dec_label_pc_9650
  %v9_9658 = add i32 %v5_9644, -2
  store i32 %v9_9658, i32* %r0.global-to-local, align 4
  br label %bb189

bb189:                                            ; preds = %dec_label_pc_9650, %bb188
  %v1_9660 = phi i32 [ %v5_9644, %dec_label_pc_9650 ], [ %v9_9658, %bb188 ]
  %v2_9660 = add i32 %v1_9660, %v2_86d8
  store i32 -20773, i32* @lr, align 4
  %v1_9668 = add i32 %v1_9660, 1
  store i32 %v1_9668, i32* @r6, align 4
  %v1_966c = load i32, i32* @r4, align 4
  %v2_966c = add i32 %v2_9660, %v1_966c
  store i32 %v2_966c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9674 = load i32, i32* @r5, align 4
  store i32 %v0_9674, i32* %r0.global-to-local, align 4
  store i32 %v1_9668, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a2c0.42 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9684 = add i32 %v2_966c, -20773
  %v5_9684 = inttoptr i32 %v4_9684 to i8*
  store i8 0, i8* %v5_9684, align 1
  %v5_9688 = call i32 @function_12ef8(i32 %v0_9674, i32 %v1_9668, i32 ptrtoint ([5 x i8]* @global_var_1a2c0.42 to i32), i32 4)
  store i32 %v5_9688, i32* %r0.global-to-local, align 4
  %v2_968c = icmp ugt i32 %v5_9688, 3
  store i1 %v2_968c, i1* %cpsr_c.global-to-local, align 1
  %v7_968c = icmp eq i32 %v5_9688, 4
  store i1 %v7_968c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_968c, label %dec_label_pc_9a14, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %bb189
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9698 = load i32, i32* @r4, align 4
  %v2_9698 = add i32 %v1_9698, %v2_8278
  %v3_9698 = inttoptr i32 %v2_9698 to i8*
  %v4_9698 = load i8, i8* %v3_9698, align 1
  %v6_9698 = zext i8 %v4_9698 to i32
  store i32 %v6_9698, i32* %r3.global-to-local, align 4
  %v2_969c = icmp ugt i8 %v4_9698, 46
  store i1 %v2_969c, i1* %cpsr_c.global-to-local, align 1
  %v7_969c = icmp eq i8 %v4_9698, 47
  store i1 %v7_969c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_969c, label %dec_label_pc_96a4, label %dec_label_pc_8d40

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v0_96a4 = load i32, i32* @sb, align 4
  %v1_96a8 = add i32 %v0_96a4, 533
  store i32 %v1_96a8, i32* @r4, align 4
  store i32 %v1_96a8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_96b4 = call i32 @function_12ed4(i32 %v1_96a8, i32 255)
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_96bc = load i32, i32* %stack_var_-44, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v1_96c0 = add i32 %v0_96c0, 1
  store i32 %v1_96c0, i32* @r5, align 4
  %v2_96c4 = add i32 %v1_96c0, %v3_96bc
  store i32 %v2_96c4, i32* %r0.global-to-local, align 4
  %v1_96c8 = inttoptr i32 %v2_96c4 to i8*
  %v2_96c8 = call i32 @function_12e40(i8* %v1_96c8)
  store i32 %v2_96c8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96cc = icmp eq i32 %v2_96c8, 0
  store i1 %v2_96cc, i1* %cpsr_z.global-to-local, align 1
  %tmp190 = icmp slt i32 %v2_96c8, 1
  br i1 %tmp190, label %dec_label_pc_8d40, label %dec_label_pc_96d4

dec_label_pc_96d4:                                ; preds = %dec_label_pc_96a4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_96d8 = load i32, i32* %stack_var_-44, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v2_96dc = add i32 %v0_96dc, %v3_96d8
  store i32 %v2_96dc, i32* %r0.global-to-local, align 4
  %v1_96e0 = inttoptr i32 %v2_96dc to i8*
  %v2_96e0 = call i32 @function_12e40(i8* %v1_96e0)
  store i32 %v2_96e0, i32* %r0.global-to-local, align 4
  %v2_96e4 = icmp ugt i32 %v2_96e0, 254
  store i1 %v2_96e4, i1* %cpsr_c.global-to-local, align 1
  %v7_96e4 = icmp eq i32 %v2_96e0, 255
  store i1 %v7_96e4, i1* %cpsr_z.global-to-local, align 1
  %v8_96e8 = icmp sgt i32 %v2_96e0, 255
  br i1 %v8_96e8, label %dec_label_pc_8d40, label %dec_label_pc_96ec

dec_label_pc_96ec:                                ; preds = %dec_label_pc_96d4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_96f0 = load i32, i32* %stack_var_-44, align 4
  %v0_96f4 = load i32, i32* @r4, align 4
  store i32 %v0_96f4, i32* @r0, align 4
  %v0_96f8 = load i32, i32* @r5, align 4
  %v2_96f8 = add i32 %v0_96f8, %v3_96f0
  store i32 %v2_96f8, i32* %r1.global-to-local, align 4
  %v2_96fc = inttoptr i32 %v0_96f4 to i8*
  %v3_96fc = call i32 @function_12e68(i8* %v2_96fc, i32 %v2_96f8)
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9704:                                ; preds = %dec_label_pc_8e20
  %v0_9704 = load i32, i32* %r3.global-to-local, align 4
  %v1_9704 = add i32 %v0_9704, 1
  store i32 %v1_9704, i32* %r3.global-to-local, align 4
  %v1_9708 = trunc i32 %v1_9704 to i8
  %v2_9708 = load i32, i32* @sl, align 4
  %v3_9708 = add i32 %v2_9708, -1448
  %v4_9708 = inttoptr i32 %v3_9708 to i8*
  store i8 %v1_9708, i8* %v4_9708, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9710:                                ; preds = %dec_label_pc_8c34
  %v0_9710 = load i32, i32* @fp, align 4
  store i32 %v0_9710, i32* @r0, align 4
  %v0_9714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9714, i32* %r1.global-to-local, align 4
  %v2_9718 = inttoptr i32 %v0_9710 to i8*
  %v3_9718 = call i32 @function_12e68(i8* %v2_9718, i32 %v0_9714)
  store i32 %v3_9718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c4c

dec_label_pc_9720:                                ; preds = %dec_label_pc_95fc, %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9728 = call i32 @function_124ec(i32 37, i32* null)
  %v0_972c = load i32, i32* @fp, align 4
  store i32 %v0_972c, i32* @r1, align 4
  store i32 %v3_9728, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9738 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_972c, i32 %v3_9728)
  store i32 %v4_9738, i32* %r0.global-to-local, align 4
  %v2_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v2_9740, i1* %cpsr_c.global-to-local, align 1
  %v7_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v7_9740, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9740, label %dec_label_pc_993c, label %dec_label_pc_974c

dec_label_pc_974c:                                ; preds = %dec_label_pc_9720
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9754 = call i32 @function_124ec(i32 37, i32* null)
  %v0_9758 = load i32, i32* @fp, align 4
  store i32 %v0_9758, i32* @r1, align 4
  store i32 %v3_9754, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9764 = call i32 @function_1319c(i8* %v3_829c, i32 %v0_9758, i32 %v3_9754)
  store i32 %v4_9764, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_976c = add i32 %v4_9764, %v2_8278
  %v3_976c = inttoptr i32 %v2_976c to i8*
  %v4_976c = load i8, i8* %v3_976c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9774 = icmp ugt i8 %v4_976c, 31
  store i1 %v2_9774, i1* %cpsr_c.global-to-local, align 1
  %v7_9774 = icmp eq i8 %v4_976c, 32
  store i1 %v7_9774, i1* %cpsr_z.global-to-local, align 1
  %v2_977c = zext i1 %v7_9774 to i32
  %v2_977c.v4_9764 = add i32 %v2_977c, %v4_9764
  store i32 %v2_977c.v4_9764, i32* @r4, align 4
  %v2_9780 = add i32 %v2_977c.v4_9764, %v2_8278
  store i32 %v2_9780, i32* @r5, align 4
  store i32 %v2_9780, i32* %r0.global-to-local, align 4
  %v1_9788 = load i32, i32* @fp, align 4
  %v2_9788 = sub i32 %v1_9788, %v2_977c.v4_9764
  store i32 %v2_9788, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9794 = call i32 @function_12ef8(i32 %v2_9780, i32 %v2_9788, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2)
  store i32 %v5_9794, i32* %r0.global-to-local, align 4
  %v2_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v2_9798, i1* %cpsr_c.global-to-local, align 1
  %v7_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v7_9798, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9794, i32* @r7, align 4
  br i1 %v7_9798, label %dec_label_pc_993c, label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_974c
  %v2_97a4 = icmp ne i32 %v5_9794, 0
  store i1 %v2_97a4, i1* %cpsr_c.global-to-local, align 1
  %v7_97a4 = icmp eq i32 %v5_9794, 1
  store i1 %v7_97a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_97ac = icmp slt i32 %v5_9794, 2
  br i1 %v7_97ac, label %bb192, label %bb191

bb191:                                            ; preds = %dec_label_pc_97a4
  %v9_97ac = add i32 %v5_9794, -2
  store i32 %v9_97ac, i32* @r7, align 4
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_97a4, %bb191
  %v1_97b4 = phi i32 [ %v5_9794, %dec_label_pc_97a4 ], [ %v9_97ac, %bb191 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_97b4 = add i32 %v1_97b4, %v2_86d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97bc = load i32, i32* @r4, align 4
  %v2_97bc = add i32 %v2_97b4, %v1_97bc
  %v3_97c0 = load i32, i32* @r6, align 4
  %v4_97c0 = add i32 %v2_97bc, %v3_97c0
  %v5_97c0 = inttoptr i32 %v4_97c0 to i8*
  store i8 0, i8* %v5_97c0, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v0_97c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c8, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  %v1_97d0 = load i32, i32* @r4, align 4
  %v2_97d0 = add i32 %v1_97d0, %v2_8278
  %v3_97d0 = inttoptr i32 %v2_97d0 to i8*
  %v4_97d0 = load i8, i8* %v3_97d0, align 1
  %v6_97d0 = zext i8 %v4_97d0 to i32
  store i32 %v6_97d0, i32* %r0.global-to-local, align 4
  %v1_97d4 = add nsw i32 %v6_97d0, -48
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  %v2_97d8 = icmp ugt i32 %v1_97d4, 8
  store i1 %v2_97d8, i1* %cpsr_c.global-to-local, align 1
  %v7_97d8 = icmp eq i32 %v1_97d4, 9
  store i1 %v7_97d8, i1* %cpsr_z.global-to-local, align 1
  %v2_97dc = xor i1 %v7_97d8, true
  %v3_97dc = and i1 %v2_97d8, %v2_97dc
  br i1 %v3_97dc, label %.thread105, label %dec_label_pc_97e4

.thread105:                                       ; preds = %bb192
  %v4_97dc = load i32, i32* @r5, align 4
  store i32 %v4_97dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_980c

dec_label_pc_97e4:                                ; preds = %bb192
  %v1_97f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97e8, %dec_label_pc_97e4
  %v0_97e8 = phi i32 [ %v1_9800, %dec_label_pc_97e8 ], [ 1, %dec_label_pc_97e4 ]
  store i32 %v0_97e8, i32* %ip.global-to-local, align 4
  store i32 %v0_97e8, i32* %stack_var_-44, align 4
  %v2_97f4 = add i32 %v0_97e8, %v1_97f4.pre
  %v3_97f4 = inttoptr i32 %v2_97f4 to i8*
  %v4_97f4 = load i8, i8* %v3_97f4, align 1
  %v6_97f4 = zext i8 %v4_97f4 to i32
  store i32 %v6_97f4, i32* %r0.global-to-local, align 4
  %v1_97f8 = add nsw i32 %v6_97f4, -48
  store i32 %v1_97f8, i32* %r3.global-to-local, align 4
  %v2_97fc = icmp ugt i32 %v1_97f8, 8
  store i1 %v2_97fc, i1* %cpsr_c.global-to-local, align 1
  %v7_97fc = icmp eq i32 %v1_97f8, 9
  store i1 %v7_97fc, i1* %cpsr_z.global-to-local, align 1
  %v1_9800 = add i32 %v0_97e8, 1
  store i32 %v1_9800, i32* @lr, align 4
  store i32 %v2_97f4, i32* %r1.global-to-local, align 4
  %v2_9808 = xor i1 %v2_97fc, true
  %v3_9808 = or i1 %v7_97fc, %v2_9808
  br i1 %v3_9808, label %dec_label_pc_97e8, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_97e8, %.thread105
  %v2_9818 = phi i32 [ %v4_97dc, %.thread105 ], [ %v2_97f4, %dec_label_pc_97e8 ]
  %v0_980c = phi i32 [ %v6_97d0, %.thread105 ], [ %v6_97f4, %dec_label_pc_97e8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_980c = icmp eq i32 %v0_980c, 0
  store i1 %v2_980c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_980c, label %dec_label_pc_993c, label %dec_label_pc_9814

dec_label_pc_9814:                                ; preds = %dec_label_pc_980c
  store i32 0, i32* @r6, align 4
  %v3_9818 = inttoptr i32 %v2_9818 to i8*
  store i8 0, i8* %v3_9818, align 1
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9820 = load i32, i32* %stack_var_-44, align 4
  %v1_9824 = add i32 %v3_9820, 1
  store i32 %v1_9824, i32* %ip.global-to-local, align 4
  store i32 %v1_9824, i32* %stack_var_-44, align 4
  %v0_982c = load i32, i32* @r5, align 4
  %v2_982c = add i32 %v0_982c, %v1_9824
  %v3_982c = inttoptr i32 %v2_982c to i8*
  %v4_982c = load i8, i8* %v3_982c, align 1
  %v6_982c = zext i8 %v4_982c to i32
  store i32 %v6_982c, i32* %r3.global-to-local, align 4
  %v2_9830 = icmp ugt i8 %v4_982c, 31
  store i1 %v2_9830, i1* %cpsr_c.global-to-local, align 1
  %v7_9830 = icmp eq i8 %v4_982c, 32
  store i1 %v7_9830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9830, label %bb193, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_9814
  store i32 %v2_982c, i32* @r4, align 4
  br label %bb194

bb193:                                            ; preds = %dec_label_pc_9814
  %v2_9834 = add i32 %v3_9820, 2
  store i32 %v2_9834, i32* %ip.global-to-local, align 4
  %v2_9838 = add i32 %v0_982c, %v2_9834
  store i32 %v2_9838, i32* @r4, align 4
  store i32 %v2_9834, i32* %stack_var_-44, align 4
  br label %bb194

bb194:                                            ; preds = %.thread31, %bb193
  %v0_9840 = phi i32 [ %v2_982c, %.thread31 ], [ %v2_9838, %bb193 ]
  store i32 %v0_9840, i32* %r0.global-to-local, align 4
  %v1_9844 = inttoptr i32 %v0_9840 to i8*
  %v2_9844 = call i32 @function_12e40(i8* %v1_9844)
  store i32 ptrtoint ([5 x i8]* @global_var_1a2c8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9844, i32* @r1, align 4
  %v0_9850 = load i32, i32* @r4, align 4
  store i32 %v0_9850, i32* %r0.global-to-local, align 4
  %v4_9854 = inttoptr i32 %v0_9850 to i8*
  %v5_9854 = call i32 @function_1319c(i8* %v4_9854, i32 %v2_9844, i32 ptrtoint ([5 x i8]* @global_var_1a2c8.44 to i32))
  store i32 %v5_9854, i32* %r0.global-to-local, align 4
  %v2_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v2_9858, i1* %cpsr_c.global-to-local, align 1
  %v7_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v7_9858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9858, label %.thread35, label %dec_label_pc_9868

.thread35:                                        ; preds = %bb194
  store i32 %v10_82f0, i32* @lr, align 4
  %v4_9860 = load i32, i32* %v11_82f4, align 4
  store i32 %v4_9860, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_989c

dec_label_pc_9868:                                ; preds = %bb194
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_986c = load i32, i32* %stack_var_-44, align 4
  %v0_9870 = load i32, i32* @r5, align 4
  %v2_9870 = add i32 %v0_9870, %v3_986c
  store i32 %v2_9870, i32* @r4, align 4
  store i32 %v2_9870, i32* %r0.global-to-local, align 4
  %v1_9878 = inttoptr i32 %v2_9870 to i8*
  %v2_9878 = call i32 @function_12e40(i8* %v1_9878)
  store i32 ptrtoint ([5 x i8]* @global_var_1a2c8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9878, i32* @r1, align 4
  %v0_9884 = load i32, i32* @r4, align 4
  store i32 %v0_9884, i32* %r0.global-to-local, align 4
  %v4_9888 = inttoptr i32 %v0_9884 to i8*
  %v5_9888 = call i32 @function_1319c(i8* %v4_9888, i32 %v2_9878, i32 ptrtoint ([5 x i8]* @global_var_1a2c8.44 to i32))
  store i32 %v5_9888, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9890 = load i32, i32* %stack_var_-44, align 4
  %v2_9894 = add i32 %v3_9890, %v5_9888
  store i32 %v2_9894, i32* %ip.global-to-local, align 4
  store i32 %v2_9894, i32* %stack_var_-44, align 4
  br label %dec_label_pc_989c

dec_label_pc_989c:                                ; preds = %.thread35, %dec_label_pc_9868
  %v0_9d28 = phi i32 [ %v4_9860, %.thread35 ], [ %v2_9894, %dec_label_pc_9868 ]
  %v0_989c = load i32, i32* @r5, align 4
  %v2_989c = add i32 %v0_989c, %v0_9d28
  %v3_989c = inttoptr i32 %v2_989c to i8*
  %v4_989c = load i8, i8* %v3_989c, align 1
  %v6_989c = zext i8 %v4_989c to i32
  store i32 %v6_989c, i32* %r3.global-to-local, align 4
  %v2_98a0 = icmp ugt i8 %v4_989c, 33
  store i1 %v2_98a0, i1* %cpsr_c.global-to-local, align 1
  %v7_98a0 = icmp eq i8 %v4_989c, 34
  store i1 %v7_98a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98a0, label %dec_label_pc_9d28, label %dec_label_pc_98a8

dec_label_pc_98a8:                                ; preds = %dec_label_pc_9d28, %dec_label_pc_989c, %dec_label_pc_9d50
  %v0_98a8 = load i32, i32* @r5, align 4
  store i32 %v0_98a8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98b0 = inttoptr i32 %v0_98a8 to i8*
  %v3_98b0 = call i32 @function_12f64(i8* %v2_98b0, i32 10)
  store i32 %v3_98b0, i32* %r0.global-to-local, align 4
  %v1_98b4 = add i32 %v3_98b0, -1
  store i32 %v1_98b4, i32* %r3.global-to-local, align 4
  %v2_98b8 = icmp ugt i32 %v1_98b4, 7
  store i1 %v2_98b8, i1* %cpsr_c.global-to-local, align 1
  %v7_98b8 = icmp eq i32 %v1_98b4, 8
  store i1 %v7_98b8, i1* %cpsr_z.global-to-local, align 1
  %v2_98bc = xor i1 %v2_98b8, true
  %v3_98bc = or i1 %v7_98b8, %v2_98bc
  br i1 %v3_98bc, label %dec_label_pc_98d0.preheader, label %dec_label_pc_98e4

dec_label_pc_98d0.preheader:                      ; preds = %dec_label_pc_98a8
  store i32 %v2_8764, i32* %r3.global-to-local, align 4
  %v6_98c0 = add i32 %v3_98b0, %v2_8764
  store i32 %v6_98c0, i32* @r4, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98d0
  %v1_98cc = call i32 @function_16728(i32 1)
  store i32 %v1_98cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98d0:                                ; preds = %dec_label_pc_98d0.preheader, %dec_label_pc_98cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d4 = call i32 @function_165ec(i32* null)
  %v0_98d8 = load i32, i32* @r4, align 4
  %v3_98d8 = icmp uge i32 %v0_98d8, %v2_98d4
  store i1 %v3_98d8, i1* %cpsr_c.global-to-local, align 1
  %v9_98d8 = icmp eq i32 %v0_98d8, %v2_98d4
  store i1 %v9_98d8, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98e0 = xor i1 %v9_98d8, true
  %v3_98e0 = and i1 %v3_98d8, %v2_98e0
  br i1 %v3_98e0, label %dec_label_pc_98cc, label %dec_label_pc_98e4

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98d0, %dec_label_pc_98a8
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_98e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e8, i32* @r4, align 4
  %v0_98ec = load i32, i32* @r5, align 4
  %v2_98ec = add i32 %v0_98ec, %v3_98e8
  store i32 %v2_98ec, i32* @r6, align 4
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  %v1_98f4 = inttoptr i32 %v2_98ec to i8*
  %v2_98f4 = call i32 @function_12e40(i8* %v1_98f4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a2c0.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f4, i32* @r1, align 4
  %v0_9900 = load i32, i32* @r6, align 4
  store i32 %v0_9900, i32* %r0.global-to-local, align 4
  %v4_9904 = inttoptr i32 %v0_9900 to i8*
  %v5_9904 = call i32 @function_1319c(i8* %v4_9904, i32 %v2_98f4, i32 ptrtoint ([5 x i8]* @global_var_1a2c0.42 to i32))
  store i32 %v5_9904, i32* %r0.global-to-local, align 4
  %v2_9908 = icmp ugt i32 %v5_9904, 3
  store i1 %v2_9908, i1* %cpsr_c.global-to-local, align 1
  %v7_9908 = icmp eq i32 %v5_9904, 4
  store i1 %v7_9908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9908, label %dec_label_pc_9c14, label %dec_label_pc_9910

dec_label_pc_9910:                                ; preds = %dec_label_pc_98e4
  %v0_9910 = load i32, i32* @r5, align 4
  %v1_9910 = load i32, i32* @r4, align 4
  %v2_9910 = add i32 %v1_9910, %v0_9910
  %v3_9910 = inttoptr i32 %v2_9910 to i8*
  %v4_9910 = load i8, i8* %v3_9910, align 1
  %v6_9910 = zext i8 %v4_9910 to i32
  store i32 %v6_9910, i32* @r3, align 4
  %v2_9914 = icmp ugt i8 %v4_9910, 46
  store i1 %v2_9914, i1* %cpsr_c.global-to-local, align 1
  %v7_9914 = icmp eq i8 %v4_9910, 47
  store i1 %v7_9914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9914, label %dec_label_pc_9d70, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_9d8c, %dec_label_pc_9d70, %dec_label_pc_9cd8, %dec_label_pc_9cbc, %dec_label_pc_9910, %dec_label_pc_9db8, %dec_label_pc_9d04
  %v0_991c = load i32, i32* @sb, align 4
  %v1_9920 = add i32 %v0_991c, 1431
  store i32 %v1_9920, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_992c = inttoptr i32 %v1_9920 to i16*
  %v5_992c = call i32 @function_15c0c(i16* %v4_992c, i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32), i32 4)
  store i32 %v5_992c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9934 = load i32, i32* @sl, align 4
  %v3_9934 = add i32 %v2_9934, -1448
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 10, i8* %v4_9934, align 1
  br label %dec_label_pc_87b4

dec_label_pc_993c:                                ; preds = %dec_label_pc_980c, %dec_label_pc_974c, %dec_label_pc_9720
  %v0_993c = load i32, i32* @fp, align 4
  store i32 %v0_993c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_994c = call i32 @function_12ef8(i32 %v2_8278, i32 %v0_993c, i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), i32 4)
  %v0_9950 = load i32, i32* @sb, align 4
  %v1_9954 = add i32 %v0_9950, 1431
  store i32 %v1_9954, i32* @r4, align 4
  store i32 %v5_994c, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a2d0.46 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9954, i32* %r0.global-to-local, align 4
  %v3_9964 = inttoptr i32 %v1_9954 to i8*
  %v4_9964 = call i32 @function_1322c(i8* %v3_9964, i32 ptrtoint ([5 x i8]* @global_var_1a2d0.46 to i32))
  store i32 %v4_9964, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9968 = icmp eq i32 %v4_9964, 0
  store i1 %v2_9968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9968, label %dec_label_pc_9b28, label %dec_label_pc_9970

dec_label_pc_9970:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_993c
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9974 = load i32, i32* @sl, align 4
  %v3_9974 = add i32 %v2_9974, -1448
  %v4_9974 = inttoptr i32 %v3_9974 to i8*
  store i8 7, i8* %v4_9974, align 1
  br label %dec_label_pc_9978

dec_label_pc_9978:                                ; preds = %bb200, %dec_label_pc_9970
  %v0_9978 = load i32, i32* @r5, align 4
  store i32 %v0_9978, i32* @r2, align 4
  %v0_997c = load i32, i32* @sl, align 4
  %v1_997c = add i32 %v0_997c, -1452
  %v2_997c = inttoptr i32 %v1_997c to i32*
  %v3_997c = load i32, i32* %v2_997c, align 4
  store i32 %v3_997c, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9988 = call i32 @function_15524(i32 %v3_997c, i32 %v2_8278, i32 %v0_9978, i32 16384)
  store i32 %v4_9988, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_9990:                                ; preds = %dec_label_pc_8ce4
  %v0_9990 = call i32 @function_139e8()
  store i32 %v0_9990, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9998 = inttoptr i32 %v0_9990 to i32*
  store i32 104, i32* %v2_9998, align 4
  br label %dec_label_pc_8d14

dec_label_pc_99a0:                                ; preds = %dec_label_pc_8ec0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_99a8 = load i32, i32* @sl, align 4
  %v1_99a8 = add i32 %v0_99a8, 660
  %v2_99a8 = inttoptr i32 %v1_99a8 to i32*
  %v3_99a8 = load i32, i32* %v2_99a8, align 4
  store i32 %v3_99a8, i32* @r4, align 4
  %v3_99ac = call i32 @function_124ec(i32 36, i32* null)
  %v0_99b0 = load i32, i32* @r4, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 %v3_99ac, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99bc = load i32, i32* @r7, align 4
  store i32 %v0_99bc, i32* %r0.global-to-local, align 4
  %v4_99c0 = call i32 @function_12ef8(i32 %v0_99bc, i32 %v0_99b0, i32 %v3_99ac, i32 11)
  store i32 %v4_99c0, i32* %r0.global-to-local, align 4
  %v0_99c4 = load i32, i32* @sl, align 4
  %v1_99c4 = add i32 %v0_99c4, 660
  %v2_99c4 = inttoptr i32 %v1_99c4 to i32*
  %v3_99c4 = load i32, i32* %v2_99c4, align 4
  %v0_99c8 = load i32, i32* @r7, align 4
  %v2_99c8 = add i32 %v0_99c8, %v4_99c0
  store i32 %v2_99c8, i32* @r6, align 4
  store i32 %v4_99c0, i32* @r4, align 4
  %v2_99d0 = sub i32 %v3_99c4, %v4_99c0
  store i32 %v2_99d0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d8.48 to i32), i32* %r2.global-to-local, align 4
  %v0_99d8 = load i32, i32* @r8, align 4
  store i32 %v0_99d8, i32* %r3.global-to-local, align 4
  store i32 %v2_99c8, i32* %r0.global-to-local, align 4
  %v4_99e0 = call i32 @function_12ef8(i32 %v2_99c8, i32 %v2_99d0, i32 ptrtoint (i32* @global_var_1a2d8.48 to i32), i32 %v0_99d8)
  store i32 %v4_99e0, i32* %r0.global-to-local, align 4
  %v0_99e4 = load i32, i32* @sl, align 4
  %v1_99e4 = add i32 %v0_99e4, 16
  %v2_99e4 = inttoptr i32 %v1_99e4 to i32*
  %v3_99e4 = load i32, i32* %v2_99e4, align 4
  store i32 %v3_99e4, i32* %r3.global-to-local, align 4
  %v1_99e8 = load i32, i32* @r4, align 4
  %v2_99e8 = add i32 %v1_99e8, %v4_99e0
  store i32 %v2_99e8, i32* @r5, align 4
  %v0_99ec = load i32, i32* @sb, align 4
  %v2_99ec = add i32 %v0_99ec, %v2_99e8
  store i32 %v2_99ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v2_99f4 = icmp ugt i32 %v3_99e4, 3
  store i1 %v2_99f4, i1* %cpsr_c.global-to-local, align 1
  %v7_99f4 = icmp eq i32 %v3_99e4, 4
  store i1 %v7_99f4, i1* %cpsr_z.global-to-local, align 1
  %v3_99f8 = add i32 %v2_99ec, 2115
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 0, i8* %v4_99f8, align 1
  %v7_99fc = icmp sgt i32 %v3_99e4, 4
  br i1 %v7_99fc, label %dec_label_pc_9a00, label %dec_label_pc_9b5c

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99a0, %dec_label_pc_9b5c, %dec_label_pc_9b6c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_9a08 = load i32, i32* @sl, align 4
  %v2_9a08 = add i32 %v1_9a08, 12
  %v3_9a08 = inttoptr i32 %v2_9a08 to i32*
  store i32 -1, i32* %v3_9a08, align 4
  %v0_9a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_9a0c = trunc i32 %v0_9a0c to i8
  %v2_9a0c = load i32, i32* @sl, align 4
  %v3_9a0c = add i32 %v2_9a0c, -1448
  %v4_9a0c = inttoptr i32 %v3_9a0c to i8*
  store i8 %v1_9a0c, i8* %v4_9a0c, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9a14:                                ; preds = %bb189
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a20 = load i32, i32* @r5, align 4
  %v1_9a20 = add i32 %v0_9a20, 4
  %v2_9a20 = inttoptr i32 %v1_9a20 to i8*
  %v3_9a20 = load i8, i8* %v2_9a20, align 1
  %v4_9a20 = zext i8 %v3_9a20 to i32
  store i32 %v4_9a20, i32* %r3.global-to-local, align 4
  %v2_9a24 = icmp ugt i8 %v3_9a20, 114
  store i1 %v2_9a24, i1* %cpsr_c.global-to-local, align 1
  %v7_9a24 = icmp eq i8 %v3_9a20, 115
  store i1 %v7_9a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a24, label %bb195, label %.thread38

bb195:                                            ; preds = %dec_label_pc_9a14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_9a14, %bb195
  %v3_9a34 = phi i32 [ 7, %dec_label_pc_9a14 ], [ 8, %bb195 ]
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  %v1_9a3c = load i32, i32* @r6, align 4
  %v2_9a3c = sub i32 %v1_9a3c, %v3_9a34
  store i32 %v2_9a3c, i32* %r2.global-to-local, align 4
  %v2_9a40 = add i32 %v3_9a34, %v0_9a20
  store i32 %v2_9a40, i32* %r1.global-to-local, align 4
  %v3_9a44 = inttoptr i32 %v0_9a20 to i8*
  %v4_9a44 = call i32 @function_15f18(i8* %v3_9a44, i32 %v2_9a40, i32 %v2_9a3c)
  store i32 %v4_9a44, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a4c = load i32, i32* @r7, align 4
  store i32 %v0_9a4c, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9a54 = load i32, i32* @r4, align 4
  %v2_9a54 = add i32 %v1_9a54, %v2_8278
  %v3_9a54 = inttoptr i32 %v2_9a54 to i8*
  %v4_9a54 = load i8, i8* %v3_9a54, align 1
  %v6_9a54 = zext i8 %v4_9a54 to i32
  store i32 %v6_9a54, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a58 = icmp eq i8 %v4_9a54, 0
  store i1 %v2_9a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a58, label %dec_label_pc_9a9c, label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %.thread38
  %v2_9a60 = icmp ugt i8 %v4_9a54, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a54, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  %v1_9a64 = load i32, i32* @r5, align 4
  br i1 %v7_9a60, label %bb196, label %dec_label_pc_9a6c

bb196:                                            ; preds = %dec_label_pc_9a60
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c08

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a60
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a7c

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a7c
  %v2_9a74 = icmp ugt i8 %v4_9a88, 46
  store i1 %v2_9a74, i1* %cpsr_c.global-to-local, align 1
  %v7_9a74 = icmp eq i8 %v4_9a88, 47
  store i1 %v7_9a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a74, label %dec_label_pc_9c08, label %dec_label_pc_9a7c

dec_label_pc_9a7c:                                ; preds = %dec_label_pc_9a74, %dec_label_pc_9a6c
  %v0_9a90 = phi i32 [ %v1_9a90, %dec_label_pc_9a74 ], [ 1, %dec_label_pc_9a6c ]
  store i32 %v0_9a90, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v0_9a90, i32* %stack_var_-44, align 4
  %v2_9a88 = add i32 %v0_9a90, %v1_9a64
  %v3_9a88 = inttoptr i32 %v2_9a88 to i8*
  %v4_9a88 = load i8, i8* %v3_9a88, align 1
  %v6_9a88 = zext i8 %v4_9a88 to i32
  store i32 %v6_9a88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a8c = icmp eq i8 %v4_9a88, 0
  store i1 %v2_9a8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a90 = add i32 %v0_9a90, 1
  store i32 %v1_9a90, i32* %r2.global-to-local, align 4
  store i32 %v2_9a88, i32* %r1.global-to-local, align 4
  br i1 %v2_9a8c, label %dec_label_pc_9a9c, label %dec_label_pc_9a74

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a7c, %.thread38, %dec_label_pc_9c08
  %v0_9a9c = load i32, i32* @r5, align 4
  store i32 %v0_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = inttoptr i32 %v0_9a9c to i8*
  %v2_9aa0 = call i32 @function_12e40(i8* %v1_9aa0)
  store i32 %v2_9aa0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9aa4 = icmp eq i32 %v2_9aa0, 0
  store i1 %v2_9aa4, i1* %cpsr_z.global-to-local, align 1
  %tmp197 = icmp slt i32 %v2_9aa0, 1
  br i1 %tmp197, label %dec_label_pc_9ac8, label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9a9c
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r0.global-to-local, align 4
  %v1_9ab0 = inttoptr i32 %v0_9aac to i8*
  %v2_9ab0 = call i32 @function_12e40(i8* %v1_9ab0)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  %v1_9ab4 = add i32 %v2_9ab0, -127
  %v2_9ab4 = icmp ugt i32 %v2_9ab0, 126
  store i1 %v2_9ab4, i1* %cpsr_c.global-to-local, align 1
  %v3_9ab4 = sub i32 126, %v2_9ab0
  %v4_9ab4 = and i32 %v3_9ab4, %v2_9ab0
  %v5_9ab4 = icmp slt i32 %v4_9ab4, 0
  %v6_9ab4 = icmp slt i32 %v1_9ab4, 0
  %v7_9ab4 = icmp eq i32 %v2_9ab0, 127
  store i1 %v7_9ab4, i1* %cpsr_z.global-to-local, align 1
  %v7_9ab8 = icmp sgt i32 %v2_9ab0, 127
  br i1 %v7_9ab8, label %.thread41, label %bb198

bb198:                                            ; preds = %dec_label_pc_9aac
  %v8_9ab8 = load i32, i32* @sb, align 4
  %v9_9abc = add i32 %v8_9ab8, 789
  store i32 %v9_9abc, i32* %r0.global-to-local, align 4
  %v8_9ac0 = load i32, i32* @r5, align 4
  store i32 %v8_9ac0, i32* %r1.global-to-local, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9aac, %bb198
  store i32 39624, i32* @lr, align 4
  %v3_9ac4 = xor i1 %v6_9ab4, %v5_9ab4
  %v4_9ac4 = or i1 %v7_9ab4, %v3_9ac4
  call void @__pseudo_cond_branch(i1 %v4_9ac4, i32 ptrtoint (i32* @global_var_12e68.49 to i32))
  br label %dec_label_pc_9ac8

dec_label_pc_9ac8:                                ; preds = %dec_label_pc_9a9c, %.thread41
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9acc = load i32, i32* %stack_var_-44, align 4
  %v0_9ad0 = load i32, i32* @r5, align 4
  %v1_9ad0 = add i32 %v0_9ad0, 1
  store i32 %v1_9ad0, i32* @r5, align 4
  %v2_9ad4 = add i32 %v1_9ad0, %v3_9acc
  store i32 %v2_9ad4, i32* %r0.global-to-local, align 4
  %v1_9ad8 = inttoptr i32 %v2_9ad4 to i8*
  %v2_9ad8 = call i32 @function_12e40(i8* %v1_9ad8)
  store i32 %v2_9ad8, i32* %r0.global-to-local, align 4
  %v2_9adc = icmp ugt i32 %v2_9ad8, 254
  store i1 %v2_9adc, i1* %cpsr_c.global-to-local, align 1
  %v7_9adc = icmp eq i32 %v2_9ad8, 255
  store i1 %v7_9adc, i1* %cpsr_z.global-to-local, align 1
  %v8_9ae0 = icmp sgt i32 %v2_9ad8, 255
  br i1 %v8_9ae0, label %dec_label_pc_8d40, label %dec_label_pc_9ae4

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_9ac8
  %v0_9ae4 = load i32, i32* @sb, align 4
  %v1_9ae8 = add i32 %v0_9ae4, 533
  store i32 %v1_9ae8, i32* @r4, align 4
  store i32 %v1_9ae8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9af4 = call i32 @function_12ed4(i32 %v1_9ae8, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9afc = load i32, i32* %stack_var_-44, align 4
  %v0_9b00 = load i32, i32* @r5, align 4
  %v2_9b00 = add i32 %v0_9b00, %v3_9afc
  store i32 %v2_9b00, i32* %r0.global-to-local, align 4
  %v1_9b04 = inttoptr i32 %v2_9b00 to i8*
  %v2_9b04 = call i32 @function_12e40(i8* %v1_9b04)
  store i32 %v2_9b04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b08 = icmp eq i32 %v2_9b04, 0
  store i1 %v2_9b08, i1* %cpsr_z.global-to-local, align 1
  %tmp199 = icmp slt i32 %v2_9b04, 1
  br i1 %tmp199, label %dec_label_pc_8d40, label %dec_label_pc_9b10

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9ae4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9b14 = load i32, i32* %stack_var_-44, align 4
  %v0_9b18 = load i32, i32* @r4, align 4
  store i32 %v0_9b18, i32* @r0, align 4
  %v0_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v0_9b1c, %v3_9b14
  store i32 %v2_9b1c, i32* %r1.global-to-local, align 4
  %v2_9b20 = inttoptr i32 %v0_9b18 to i8*
  %v3_9b20 = call i32 @function_12e68(i8* %v2_9b20, i32 %v2_9b1c)
  store i32 %v3_9b20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9b28:                                ; preds = %dec_label_pc_993c
  %v0_9b28 = load i32, i32* @r4, align 4
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32), i32* %r1.global-to-local, align 4
  %v3_9b30 = inttoptr i32 %v0_9b28 to i8*
  %v4_9b30 = call i32 @function_1322c(i8* %v3_9b30, i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32))
  store i32 %v4_9b30, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b34 = icmp eq i32 %v4_9b30, 0
  store i1 %v2_9b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b34, label %bb200, label %dec_label_pc_9970

bb200:                                            ; preds = %dec_label_pc_9b28
  %v0_9b3c = load i32, i32* @fp, align 4
  %v1_9b3c = load i32, i32* @r5, align 4
  %v3_9b3c = icmp uge i32 %v0_9b3c, %v1_9b3c
  store i1 %v3_9b3c, i1* %cpsr_c.global-to-local, align 1
  %v9_9b3c = icmp eq i32 %v0_9b3c, %v1_9b3c
  store i1 %v9_9b3c, i1* %cpsr_z.global-to-local, align 1
  %v7_9b40 = icmp sgt i32 %v0_9b3c, %v1_9b3c
  %. = select i1 %v7_9b40, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b48 = trunc i32 %. to i8
  %v10_9b48 = load i32, i32* @sl, align 4
  %v11_9b48 = add i32 %v10_9b48, -1448
  %v12_9b48 = inttoptr i32 %v11_9b48 to i8*
  store i8 %v9_9b48, i8* %v12_9b48, align 1
  br label %dec_label_pc_9978

dec_label_pc_9b54:                                ; preds = %dec_label_pc_8f64
  %v0_9b54 = load i32, i32* @r4, align 4
  %v1_9b54 = trunc i32 %v0_9b54 to i8
  %v2_9b54 = load i32, i32* @sl, align 4
  %v3_9b54 = add i32 %v2_9b54, -1448
  %v4_9b54 = inttoptr i32 %v3_9b54 to i8*
  store i8 %v1_9b54, i8* %v4_9b54, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_99a0
  %v0_9b5c = load i32, i32* @r6, align 4
  store i32 %v0_9b5c, i32* %r0.global-to-local, align 4
  %v1_9b60 = inttoptr i32 %v0_9b5c to i8*
  %v2_9b60 = call i32 @function_12e40(i8* %v1_9b60)
  store i32 %v2_9b60, i32* %r0.global-to-local, align 4
  %v2_9b64 = icmp ugt i32 %v2_9b60, 126
  store i1 %v2_9b64, i1* %cpsr_c.global-to-local, align 1
  %v7_9b64 = icmp eq i32 %v2_9b60, 127
  store i1 %v7_9b64, i1* %cpsr_z.global-to-local, align 1
  %v8_9b68 = icmp sgt i32 %v2_9b60, 127
  br i1 %v8_9b68, label %dec_label_pc_9a00, label %dec_label_pc_9b6c

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_9b5c
  %v0_9b6c = load i32, i32* @sl, align 4
  %v1_9b6c = add i32 %v0_9b6c, 16
  %v2_9b6c = inttoptr i32 %v1_9b6c to i32*
  %v3_9b6c = load i32, i32* %v2_9b6c, align 4
  %v1_9b70 = and i32 %v3_9b6c, 33554432
  %v2_9b70 = icmp ne i32 %v1_9b70, 0
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v3_9b70 = mul i32 %v3_9b6c, 128
  %v1_9b74 = add i32 %v3_9b70, 1472
  %v0_9b78 = load i32, i32* @r6, align 4
  store i32 %v0_9b78, i32* %r1.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sb, align 4
  %v2_9b7c = add i32 %v1_9b74, %v0_9b7c
  store i32 %v2_9b7c, i32* @r0, align 4
  %v2_9b80 = inttoptr i32 %v2_9b7c to i8*
  %v3_9b80 = call i32 @function_12e68(i8* %v2_9b80, i32 %v0_9b78)
  store i32 %v3_9b80, i32* %r0.global-to-local, align 4
  %v0_9b84 = load i32, i32* @sl, align 4
  %v1_9b84 = add i32 %v0_9b84, 16
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v1_9b88 = and i32 %v3_9b84, 33554432
  %v2_9b88 = icmp ne i32 %v1_9b88, 0
  store i1 %v2_9b88, i1* %cpsr_c.global-to-local, align 1
  %v3_9b88 = mul i32 %v3_9b84, 128
  %v1_9b8c = add i32 %v3_9b88, 1472
  %v0_9b90 = load i32, i32* @sb, align 4
  %v2_9b90 = add i32 %v1_9b8c, %v0_9b90
  store i32 %v2_9b90, i32* @r4, align 4
  store i32 %v2_9b90, i32* %r0.global-to-local, align 4
  %v1_9b98 = inttoptr i32 %v2_9b90 to i8*
  %v2_9b98 = call i32 @function_12e40(i8* %v1_9b98)
  store i32 ptrtoint (i32* @global_var_1a2dc.51 to i32), i32* %r1.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r4, align 4
  %v2_9ba0 = add i32 %v0_9ba0, %v2_9b98
  store i32 %v2_9ba0, i32* @r0, align 4
  %v2_9ba4 = inttoptr i32 %v2_9ba0 to i8*
  %v3_9ba4 = call i32 @function_12e68(i8* %v2_9ba4, i32 ptrtoint (i32* @global_var_1a2dc.51 to i32))
  store i32 %v3_9ba4, i32* %r0.global-to-local, align 4
  %v0_9ba8 = load i32, i32* @r5, align 4
  %v1_9ba8 = add i32 %v0_9ba8, 3
  store i32 %v1_9ba8, i32* @r5, align 4
  %v0_9bac = load i32, i32* @sl, align 4
  %v1_9bac = add i32 %v0_9bac, 660
  %v2_9bac = inttoptr i32 %v1_9bac to i32*
  %v3_9bac = load i32, i32* %v2_9bac, align 4
  %v0_9bb0 = load i32, i32* @r7, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v1_9ba8
  store i32 %v2_9bb0, i32* @r6, align 4
  %v2_9bb4 = sub i32 %v3_9bac, %v1_9ba8
  store i32 %v2_9bb4, i32* %r1.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r8, align 4
  store i32 %v0_9bb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d8.48 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9bb0, i32* %r0.global-to-local, align 4
  %v4_9bc4 = call i32 @function_12ef8(i32 %v2_9bb0, i32 %v2_9bb4, i32 ptrtoint (i32* @global_var_1a2d8.48 to i32), i32 %v0_9bb8)
  store i32 %v4_9bc4, i32* %r0.global-to-local, align 4
  %v0_9bc8 = load i32, i32* @sl, align 4
  %v1_9bc8 = add i32 %v0_9bc8, 16
  %v2_9bc8 = inttoptr i32 %v1_9bc8 to i32*
  %v3_9bc8 = load i32, i32* %v2_9bc8, align 4
  %v1_9bcc = and i32 %v3_9bc8, 33554432
  %v2_9bcc = icmp ne i32 %v1_9bcc, 0
  store i1 %v2_9bcc, i1* %cpsr_c.global-to-local, align 1
  %v3_9bcc = mul i32 %v3_9bc8, 128
  %v0_9bd0 = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v0_9bd0, %v4_9bc4
  %v1_9bd4 = add i32 %v3_9bcc, 1472
  %v0_9bd8 = load i32, i32* @sb, align 4
  %v2_9bd8 = add i32 %v1_9bd4, %v0_9bd8
  store i32 %v2_9bd8, i32* @r4, align 4
  %v2_9bdc = add i32 %v2_9bd0, %v0_9bd8
  store i32 %v2_9bdc, i32* @r5, align 4
  store i32 %v2_9bd8, i32* %r0.global-to-local, align 4
  %v0_9be4 = load i32, i32* @fp, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v3_9be4 = add i32 %v2_9bdc, 2115
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v1_9be8 = inttoptr i32 %v2_9bd8 to i8*
  %v2_9be8 = call i32 @function_12e40(i8* %v1_9be8)
  %v0_9bec = load i32, i32* @r6, align 4
  store i32 %v0_9bec, i32* %r1.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @r4, align 4
  %v2_9bf0 = add i32 %v0_9bf0, %v2_9be8
  store i32 %v2_9bf0, i32* @r0, align 4
  %v2_9bf4 = inttoptr i32 %v2_9bf0 to i8*
  %v3_9bf4 = call i32 @function_12e68(i8* %v2_9bf4, i32 %v0_9bec)
  store i32 %v3_9bf4, i32* %r0.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @sl, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  %v1_9bfc = add i32 %v3_9bf8, 1
  store i32 %v1_9bfc, i32* %r3.global-to-local, align 4
  store i32 %v1_9bfc, i32* %v2_9bf8, align 4
  br label %dec_label_pc_9a00

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9a74, %bb196
  %v2_9c0c = phi i32 [ %v1_9a64, %bb196 ], [ %v2_9a88, %dec_label_pc_9a74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9c0c = inttoptr i32 %v2_9c0c to i8*
  store i8 0, i8* %v3_9c0c, align 1
  br label %dec_label_pc_9a9c

dec_label_pc_9c14:                                ; preds = %dec_label_pc_98e4
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c20 = load i32, i32* @r6, align 4
  %v1_9c20 = add i32 %v0_9c20, 4
  %v2_9c20 = inttoptr i32 %v1_9c20 to i8*
  %v3_9c20 = load i8, i8* %v2_9c20, align 1
  %v4_9c20 = zext i8 %v3_9c20 to i32
  store i32 %v4_9c20, i32* %r3.global-to-local, align 4
  %v2_9c24 = icmp ugt i8 %v3_9c20, 114
  store i1 %v2_9c24, i1* %cpsr_c.global-to-local, align 1
  %v7_9c24 = icmp eq i8 %v3_9c20, 115
  store i1 %v7_9c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c24, label %bb201, label %.thread44

bb201:                                            ; preds = %dec_label_pc_9c14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9c14, %bb201
  %v3_9c34 = phi i32 [ 7, %dec_label_pc_9c14 ], [ 8, %bb201 ]
  %v1_9c38 = sub nsw i32 1, %v3_9c34
  %v1_9c3c = load i32, i32* @r7, align 4
  %v2_9c3c = add i32 %v1_9c3c, %v1_9c38
  store i32 %v2_9c3c, i32* %r2.global-to-local, align 4
  %v2_9c40 = add i32 %v3_9c34, %v0_9c20
  store i32 %v2_9c40, i32* %r1.global-to-local, align 4
  store i32 %v0_9c20, i32* %r0.global-to-local, align 4
  %v3_9c48 = inttoptr i32 %v0_9c20 to i8*
  %v4_9c48 = call i32 @function_15f18(i8* %v3_9c48, i32 %v2_9c40, i32 %v2_9c3c)
  store i32 %v4_9c48, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9c58 = load i32, i32* @r5, align 4
  %v1_9c58 = load i32, i32* @r4, align 4
  %v2_9c58 = add i32 %v1_9c58, %v0_9c58
  %v3_9c58 = inttoptr i32 %v2_9c58 to i8*
  %v4_9c58 = load i8, i8* %v3_9c58, align 1
  %v6_9c58 = zext i8 %v4_9c58 to i32
  store i32 %v6_9c58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9c5c = icmp eq i8 %v4_9c58, 0
  store i1 %v9_9c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c5c, label %dec_label_pc_9c9c, label %dec_label_pc_9c64

dec_label_pc_9c64:                                ; preds = %.thread44
  %v2_9c64 = icmp ugt i8 %v4_9c58, 46
  store i1 %v2_9c64, i1* %cpsr_c.global-to-local, align 1
  %v7_9c64 = icmp eq i8 %v4_9c58, 47
  store i1 %v7_9c64, i1* %cpsr_z.global-to-local, align 1
  %v1_9c68 = load i32, i32* @r6, align 4
  br i1 %v7_9c64, label %bb202, label %dec_label_pc_9c70

bb202:                                            ; preds = %dec_label_pc_9c64
  store i32 %v1_9c68, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d1c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c64
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c80

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c80
  %v2_9c78 = icmp ugt i8 %v4_9c8c, 46
  store i1 %v2_9c78, i1* %cpsr_c.global-to-local, align 1
  %v7_9c78 = icmp eq i8 %v4_9c8c, 47
  store i1 %v7_9c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c78, label %dec_label_pc_9d1c, label %dec_label_pc_9c80

dec_label_pc_9c80:                                ; preds = %dec_label_pc_9c78, %dec_label_pc_9c70
  %v0_9c80 = phi i32 [ %v1_9c80, %dec_label_pc_9c78 ], [ 0, %dec_label_pc_9c70 ]
  %v1_9c80 = add i32 %v0_9c80, 1
  store i32 %v1_9c80, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9c80, i32* %stack_var_-44, align 4
  %v2_9c8c = add i32 %v1_9c80, %v1_9c68
  %v3_9c8c = inttoptr i32 %v2_9c8c to i8*
  %v4_9c8c = load i8, i8* %v3_9c8c, align 1
  %v6_9c8c = zext i8 %v4_9c8c to i32
  store i32 %v6_9c8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c90 = icmp eq i8 %v4_9c8c, 0
  store i1 %v2_9c90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9c8c, i32* %r2.global-to-local, align 4
  br i1 %v2_9c90, label %dec_label_pc_9c9c, label %dec_label_pc_9c78

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c80, %.thread44, %dec_label_pc_9d1c
  %v0_9c9c = load i32, i32* @r6, align 4
  store i32 %v0_9c9c, i32* %r0.global-to-local, align 4
  %v1_9ca0 = inttoptr i32 %v0_9c9c to i8*
  %v2_9ca0 = call i32 @function_12e40(i8* %v1_9ca0)
  store i32 %v2_9ca0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ca4 = icmp eq i32 %v2_9ca0, 0
  store i1 %v2_9ca4, i1* %cpsr_z.global-to-local, align 1
  %tmp203 = icmp slt i32 %v2_9ca0, 1
  br i1 %tmp203, label %dec_label_pc_9cbc, label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c9c
  %v0_9cac = load i32, i32* @r6, align 4
  store i32 %v0_9cac, i32* %r0.global-to-local, align 4
  %v1_9cb0 = inttoptr i32 %v0_9cac to i8*
  %v2_9cb0 = call i32 @function_12e40(i8* %v1_9cb0)
  store i32 %v2_9cb0, i32* %r0.global-to-local, align 4
  %v2_9cb4 = icmp ugt i32 %v2_9cb0, 126
  store i1 %v2_9cb4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb4 = icmp eq i32 %v2_9cb0, 127
  store i1 %v7_9cb4, i1* %cpsr_z.global-to-local, align 1
  %v7_9cb8 = icmp slt i32 %v2_9cb0, 128
  br i1 %v7_9cb8, label %dec_label_pc_9e6c, label %dec_label_pc_9cbc

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cac, %dec_label_pc_9c9c, %dec_label_pc_9e6c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9cc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cc4 = load i32, i32* @r6, align 4
  %v1_9cc4 = add i32 %v0_9cc4, 1
  store i32 %v1_9cc4, i32* @r5, align 4
  %v2_9cc8 = add i32 %v1_9cc4, %v3_9cc0
  store i32 %v2_9cc8, i32* %r0.global-to-local, align 4
  %v1_9ccc = inttoptr i32 %v2_9cc8 to i8*
  %v2_9ccc = call i32 @function_12e40(i8* %v1_9ccc)
  store i32 %v2_9ccc, i32* %r0.global-to-local, align 4
  %v2_9cd0 = icmp ugt i32 %v2_9ccc, 254
  store i1 %v2_9cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cd0 = icmp eq i32 %v2_9ccc, 255
  store i1 %v7_9cd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9cd4 = icmp sgt i32 %v2_9ccc, 255
  br i1 %v8_9cd4, label %dec_label_pc_991c, label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9cbc
  %v0_9cd8 = load i32, i32* @sb, align 4
  %v1_9cdc = add i32 %v0_9cd8, 533
  store i32 %v1_9cdc, i32* @r4, align 4
  store i32 %v1_9cdc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ce8 = call i32 @function_12ed4(i32 %v1_9cdc, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9cf0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cf4 = load i32, i32* @r5, align 4
  %v2_9cf4 = add i32 %v0_9cf4, %v3_9cf0
  store i32 %v2_9cf4, i32* %r0.global-to-local, align 4
  %v1_9cf8 = inttoptr i32 %v2_9cf4 to i8*
  %v2_9cf8 = call i32 @function_12e40(i8* %v1_9cf8)
  store i32 %v2_9cf8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cfc = icmp eq i32 %v2_9cf8, 0
  store i1 %v2_9cfc, i1* %cpsr_z.global-to-local, align 1
  %tmp204 = icmp slt i32 %v2_9cf8, 1
  br i1 %tmp204, label %dec_label_pc_991c, label %dec_label_pc_9d04

dec_label_pc_9d04:                                ; preds = %dec_label_pc_9cd8
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d08 = load i32, i32* %stack_var_-44, align 4
  %v0_9d0c = load i32, i32* @r4, align 4
  store i32 %v0_9d0c, i32* @r0, align 4
  %v0_9d10 = load i32, i32* @r5, align 4
  %v2_9d10 = add i32 %v0_9d10, %v3_9d08
  store i32 %v2_9d10, i32* %r1.global-to-local, align 4
  %v2_9d14 = inttoptr i32 %v0_9d0c to i8*
  %v3_9d14 = call i32 @function_12e68(i8* %v2_9d14, i32 %v2_9d10)
  store i32 %v3_9d14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9d1c:                                ; preds = %dec_label_pc_9c78, %bb202
  %v2_9d20 = phi i32 [ %v1_9c68, %bb202 ], [ %v2_9c8c, %dec_label_pc_9c78 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d20 = inttoptr i32 %v2_9d20 to i8*
  store i8 0, i8* %v3_9d20, align 1
  br label %dec_label_pc_9c9c

dec_label_pc_9d28:                                ; preds = %dec_label_pc_989c
  %v1_9d28 = add i32 %v0_9d28, 1
  store i32 %v1_9d28, i32* %ip.global-to-local, align 4
  %v2_9d2c = add i32 %v0_989c, %v1_9d28
  store i32 %v2_9d2c, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v1_9d28, i32* %stack_var_-44, align 4
  %v1_9d3c = inttoptr i32 %v2_9d2c to i8*
  %v2_9d3c = call i32 @function_12e40(i8* %v1_9d3c)
  store i32 %v2_9d3c, i32* %r0.global-to-local, align 4
  %v0_9d40 = load i32, i32* %r4.global-to-local, align 4
  %v2_9d40 = add i32 %v0_9d40, %v2_9d3c
  store i32 %v2_9d40, i32* @r4, align 4
  %v1_9d44 = add i32 %v2_9d40, -1
  %v2_9d44 = inttoptr i32 %v1_9d44 to i8*
  %v3_9d44 = load i8, i8* %v2_9d44, align 1
  %v4_9d44 = zext i8 %v3_9d44 to i32
  store i32 %v4_9d44, i32* %r3.global-to-local, align 4
  %v2_9d48 = icmp ugt i8 %v3_9d44, 33
  store i1 %v2_9d48, i1* %cpsr_c.global-to-local, align 1
  %v7_9d48 = icmp eq i8 %v3_9d44, 34
  store i1 %v7_9d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d48, label %dec_label_pc_9d50, label %dec_label_pc_98a8

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d28
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r5, align 4
  %v2_9d58 = add i32 %v0_9d58, %v3_9d54
  store i32 %v2_9d58, i32* %r4.global-to-local, align 4
  store i32 %v2_9d58, i32* %r0.global-to-local, align 4
  %v1_9d60 = inttoptr i32 %v2_9d58 to i8*
  %v2_9d60 = call i32 @function_12e40(i8* %v1_9d60)
  store i32 %v2_9d60, i32* %r0.global-to-local, align 4
  %v2_9d64 = add i32 %v2_9d58, %v2_9d60
  store i32 %v2_9d64, i32* @r4, align 4
  %v0_9d68 = load i32, i32* @r6, align 4
  %v1_9d68 = trunc i32 %v0_9d68 to i8
  %v3_9d68 = add i32 %v2_9d64, -1
  %v4_9d68 = inttoptr i32 %v3_9d68 to i8*
  store i8 %v1_9d68, i8* %v4_9d68, align 1
  br label %dec_label_pc_98a8

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9910
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9d74 = load i32, i32* %stack_var_-44, align 4
  %v0_9d78 = load i32, i32* @r6, align 4
  %v1_9d78 = add i32 %v0_9d78, 1
  store i32 %v1_9d78, i32* @r5, align 4
  %v2_9d7c = add i32 %v1_9d78, %v3_9d74
  store i32 %v2_9d7c, i32* %r0.global-to-local, align 4
  %v1_9d80 = inttoptr i32 %v2_9d7c to i8*
  %v2_9d80 = call i32 @function_12e40(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  %v2_9d84 = icmp ugt i32 %v2_9d80, 254
  store i1 %v2_9d84, i1* %cpsr_c.global-to-local, align 1
  %v7_9d84 = icmp eq i32 %v2_9d80, 255
  store i1 %v7_9d84, i1* %cpsr_z.global-to-local, align 1
  %v8_9d88 = icmp sgt i32 %v2_9d80, 255
  br i1 %v8_9d88, label %dec_label_pc_991c, label %dec_label_pc_9d8c

dec_label_pc_9d8c:                                ; preds = %dec_label_pc_9d70
  %v0_9d8c = load i32, i32* @sb, align 4
  %v1_9d90 = add i32 %v0_9d8c, 533
  store i32 %v1_9d90, i32* @r4, align 4
  store i32 %v1_9d90, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d9c = call i32 @function_12ed4(i32 %v1_9d90, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9da4 = load i32, i32* %stack_var_-44, align 4
  %v0_9da8 = load i32, i32* @r5, align 4
  %v2_9da8 = add i32 %v0_9da8, %v3_9da4
  store i32 %v2_9da8, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da8 to i8*
  %v2_9dac = call i32 @function_12e40(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9db0 = icmp eq i32 %v2_9dac, 0
  store i1 %v2_9db0, i1* %cpsr_z.global-to-local, align 1
  %tmp205 = icmp slt i32 %v2_9dac, 1
  br i1 %tmp205, label %dec_label_pc_991c, label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d8c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  %v0_9dc0 = load i32, i32* @r4, align 4
  store i32 %v0_9dc0, i32* @r0, align 4
  %v0_9dc4 = load i32, i32* @r5, align 4
  %v2_9dc4 = add i32 %v0_9dc4, %v3_9dbc
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dc8 = inttoptr i32 %v0_9dc0 to i8*
  %v3_9dc8 = call i32 @function_12e68(i8* %v2_9dc8, i32 %v2_9dc4)
  store i32 %v3_9dc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9dd0:                                ; preds = %dec_label_pc_8498
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9dd4 = call i32 @function_125b0(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9de0 = call i32 @function_124ec(i32 50, i32* null)
  store i32 %v3_9de0, i32* %r1.global-to-local, align 4
  %v0_9de8 = load i32, i32* @r5, align 4
  %v1_9de8 = add i32 %v0_9de8, 20
  store i32 %v1_9de8, i32* @r0, align 4
  %v2_9dec = inttoptr i32 %v1_9de8 to i8*
  %v3_9dec = call i32 @function_12e68(i8* %v2_9dec, i32 %v3_9de0)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9df4 = call i32 @function_12510(i32 50)
  store i32 %v1_9df4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %dec_label_pc_8498, %dec_label_pc_9ed8, %dec_label_pc_9eac, %dec_label_pc_9e80, %dec_label_pc_9e40, %dec_label_pc_9dd0
  %v0_9df8 = load i32, i32* @r7, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @fp, align 4
  store i32 %v0_9dfc, i32* @r0, align 4
  %v2_9e00 = inttoptr i32 %v0_9dfc to i8*
  %v3_9e00 = call i32 @function_12e68(i8* %v2_9e00, i32 %v0_9df8)
  store i32 %v3_9e00, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r1.global-to-local, align 4
  %v0_9e08 = load i32, i32* @sb, align 4
  %v1_9e08 = add i32 %v0_9e08, 1
  store i32 %v1_9e08, i32* @sb, align 4
  %v0_9e0c = load i32, i32* @r5, align 4
  %v3_9e10 = icmp uge i32 %v1_9e08, %v0_839c
  store i1 %v3_9e10, i1* %cpsr_c.global-to-local, align 1
  %v9_9e10 = icmp eq i32 %v1_9e08, %v0_839c
  store i1 %v9_9e10, i1* %cpsr_z.global-to-local, align 1
  %v1_9e14 = add i32 %v0_9e0c, 3140
  store i32 %v1_9e14, i32* @r5, align 4
  br i1 %v9_9e10, label %dec_label_pc_9e1c, label %dec_label_pc_83cc

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_9df8
  %v1_9e2c = add i32 %v2_83b0, 1452
  store i32 %v1_9e2c, i32* %r2.global-to-local, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_9e40:                                ; preds = %dec_label_pc_8498
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e44 = call i32 @function_125b0(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9e50 = call i32 @function_124ec(i32 51, i32* null)
  store i32 %v3_9e50, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v1_9e58 = add i32 %v0_9e58, 20
  store i32 %v1_9e58, i32* @r0, align 4
  %v2_9e5c = inttoptr i32 %v1_9e58 to i8*
  %v3_9e5c = call i32 @function_12e68(i8* %v2_9e5c, i32 %v3_9e50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e64 = call i32 @function_12510(i32 51)
  store i32 %v1_9e64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9cac
  %v0_9e6c = load i32, i32* @sb, align 4
  %v0_9e70 = load i32, i32* @r6, align 4
  store i32 %v0_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e6c, 789
  store i32 %v1_9e74, i32* @r0, align 4
  %v2_9e78 = inttoptr i32 %v1_9e74 to i8*
  %v3_9e78 = call i32 @function_12e68(i8* %v2_9e78, i32 %v0_9e70)
  store i32 %v3_9e78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cbc

dec_label_pc_9e80:                                ; preds = %dec_label_pc_8498
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9e84 = call i32 @function_125b0(i32 48)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v3_9e90 = call i32 @function_124ec(i32 48, i32* null)
  store i32 %v3_9e90, i32* %r1.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r5, align 4
  %v1_9e98 = add i32 %v0_9e98, 20
  store i32 %v1_9e98, i32* @r0, align 4
  %v2_9e9c = inttoptr i32 %v1_9e98 to i8*
  %v3_9e9c = call i32 @function_12e68(i8* %v2_9e9c, i32 %v3_9e90)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ea4 = call i32 @function_12510(i32 48)
  store i32 %v1_9ea4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9eac:                                ; preds = %dec_label_pc_8498
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9eb0 = call i32 @function_125b0(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_9ebc = call i32 @function_124ec(i32 47, i32* null)
  store i32 %v3_9ebc, i32* %r1.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r5, align 4
  %v1_9ec4 = add i32 %v0_9ec4, 20
  store i32 %v1_9ec4, i32* @r0, align 4
  %v2_9ec8 = inttoptr i32 %v1_9ec4 to i8*
  %v3_9ec8 = call i32 @function_12e68(i8* %v2_9ec8, i32 %v3_9ebc)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9ed0 = call i32 @function_12510(i32 47)
  store i32 %v1_9ed0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9ed8:                                ; preds = %dec_label_pc_8498
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9edc = call i32 @function_125b0(i32 49)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v3_9ee8 = call i32 @function_124ec(i32 49, i32* null)
  store i32 %v3_9ee8, i32* %r1.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r5, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 20
  store i32 %v1_9ef0, i32* @r0, align 4
  %v2_9ef4 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef4 = call i32 @function_12e68(i8* %v2_9ef4, i32 %v3_9ee8)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9efc = call i32 @function_12510(i32 49)
  store i32 %v1_9efc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

; uselistorder directives
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32 %v1_9e2c, { 1, 0 }
  uselistorder i32 %v1_9e14, { 1, 0 }
  uselistorder i32 %v1_9d28, { 1, 0, 2 }
  uselistorder i8 %v4_9c8c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9c80, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9c78, { 1, 0 }
  uselistorder i32 %v1_9c68, { 1, 0, 2 }
  uselistorder i1 %v7_9c64, { 1, 0 }
  uselistorder i1 %v9_9c5c, { 1, 0 }
  uselistorder i32 %v0_9c20, { 2, 1, 0, 3 }
  uselistorder i32 %v2_9bb0, { 1, 0, 2 }
  uselistorder i32 %v1_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9b3c, { 0, 2, 1 }
  uselistorder i32 %v0_9b3c, { 0, 2, 1 }
  uselistorder i32 %v2_9ab0, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_9a90, { 1, 0 }
  uselistorder i8 %v4_9a88, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9a90, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9a74, { 1, 0 }
  uselistorder i32 %v1_9a64, { 1, 0, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v0_9a20, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99e4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99c8, { 1, 0, 2 }
  uselistorder i32 %v4_99c0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d8, { 1, 0 }
  uselistorder i32 %v0_989c, { 1, 0 }
  uselistorder i32 %v0_9d28, { 1, 0 }
  uselistorder i1 %v7_9858, { 1, 0 }
  uselistorder i32 %v0_9840, { 1, 0 }
  uselistorder i32 %v2_9834, { 1, 0, 2 }
  uselistorder i32 %v1_9800, { 1, 0 }
  uselistorder i32 %v0_97e8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9798, { 1, 0 }
  uselistorder i32 %v5_9794, { 1, 5, 4, 2, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_977c.v4_9764, { 1, 0, 2 }
  uselistorder i1 %v7_9740, { 1, 0 }
  uselistorder i32 %v1_9668, { 1, 0, 2 }
  uselistorder i32 %v1_9660, { 1, 0 }
  uselistorder i1 %v7_9648, { 1, 0 }
  uselistorder i32 %v5_9644, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_962c.v4_9614, { 1, 0, 2 }
  uselistorder i1 %v7_95f4, { 1, 0 }
  uselistorder i32 %v0_9538, { 1, 0 }
  uselistorder i32 %v0_9520, { 1, 0 }
  uselistorder i32 %v0_9524, { 1, 0 }
  uselistorder i32 %v1_94fc, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_94c8, { 1, 0 }
  uselistorder i1 %v7_9490, { 0, 2, 1 }
  uselistorder i32 %v1_94b4, { 1, 0 }
  uselistorder i32 %v3_94ac, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_94a0, { 1, 0 }
  uselistorder i1 %v7_9414, { 1, 0 }
  uselistorder i32 %v5_9410, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_93f8, { 1, 0, 2 }
  uselistorder i32 %v2_93f4, { 1, 0, 2 }
  uselistorder i32 %v1_93e0, { 0, 2, 1 }
  uselistorder i32 %v4_93d8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_93a8, { 1, 0 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v5_933c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9324.v4_930c, { 1, 0, 2 }
  uselistorder i1 %v7_92dc, { 1, 0 }
  uselistorder i1 %v7_9268, { 1, 0 }
  uselistorder i32 %v5_9264, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_924c.v4_9234, { 1, 0, 2 }
  uselistorder i1 %v7_9210, { 1, 0 }
  uselistorder i1 %v7_9190, { 1, 0 }
  uselistorder i32 %v5_918c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9174.v4_915c, { 1, 0, 2 }
  uselistorder i1 %v7_913c, { 1, 0 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e8, { 1, 0 }
  uselistorder i32 %v0_90a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9074, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_900c, { 1, 0 }
  uselistorder i32 %v2_9000, { 1, 0 }
  uselistorder i32 %v1_9000, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8ff4, { 1, 0 }
  uselistorder i32 %v3_8fd8, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8fb8, { 1, 0 }
  uselistorder i32 %v2_8fac, { 1, 0 }
  uselistorder i32 %v1_8fac, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fa0, { 1, 0 }
  uselistorder i32 %v3_8f84, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f40, { 1, 0 }
  uselistorder i32 %v5_8f1c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8f04, { 1, 0 }
  uselistorder i32 %v3_8ee8, { 1, 0 }
  uselistorder i32 %v0_8ea4, { 1, 0 }
  uselistorder i32 %v3_8e70, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e70, { 1, 0 }
  uselistorder i32 %v0_8e70, { 1, 0 }
  uselistorder i32 %v3_8e58, { 1, 0, 2 }
  uselistorder i32 %v0_8e4c, { 1, 2, 0 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i1 %v7_8dc8, { 1, 0 }
  uselistorder i32 %v4_8dbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d8c, { 1, 0 }
  uselistorder i32 %v2_8d80, { 1, 0 }
  uselistorder i32 %v2_8d74, { 1, 0 }
  uselistorder i32 %v1_8d74, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d68, { 1, 0 }
  uselistorder i32 %v3_8d4c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8cc8, { 0, 2, 1 }
  uselistorder i32 %v2_8ca0, { 1, 0 }
  uselistorder i32 %v1_8ca0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8ca0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8c8c, { 1, 0 }
  uselistorder i32 %v3_8c6c, { 1, 0, 2 }
  uselistorder i32 %v1_8bd0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8a74, { 1, 0 }
  uselistorder i32 %v3_8854, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8800, { 2, 1, 0, 3 }
  uselistorder i32 %v3_87fc, { 1, 0 }
  uselistorder i32 %v3_87f0, { 2, 0, 1 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87d4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87ac, { 1, 0 }
  uselistorder i1 %v7_87a4, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8768, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8768, { 0, 2, 1 }
  uselistorder i32 %v2_8764, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8750, { 1, 0, 2 }
  uselistorder i32 %v1_8710, { 1, 0 }
  uselistorder i32 %v2_86f0, { 1, 0 }
  uselistorder i32 %v1_86f0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_86e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_86f0, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_86d4, { 1, 0 }
  uselistorder i32 %v3_86c8, { 1, 0, 2 }
  uselistorder i1 %v7_8624, { 1, 0 }
  uselistorder i32 %v3_8620, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_85fc, { 1, 0 }
  uselistorder i32 %v4_85d4, { 2, 1, 0 }
  uselistorder i8 %v3_85d4, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_85d4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8878, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_859c, { 1, 0 }
  uselistorder i32 %v1_859c, { 1, 0 }
  uselistorder i1 %v7_8594, { 1, 0 }
  uselistorder i1 %v7_858c, { 1, 0 }
  uselistorder i1 %v7_8584, { 1, 0 }
  uselistorder i32 %v1_8584, { 1, 0 }
  uselistorder i1 %v7_857c, { 1, 0 }
  uselistorder i1 %v7_8574, { 1, 0 }
  uselistorder i32 %v1_8558, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_84f8, { 2, 1, 0, 3, 5, 4, 6 }
  uselistorder i8* %v1_88b8, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_86d8, { 0, 15, 1, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 23, 9, 24, 10, 13, 11, 14, 12, 25 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %v2_84b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84a4, { 1, 0, 2 }
  uselistorder i32 %v0_8498, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 0, 2 }
  uselistorder i32 %v2_83f4, { 1, 0 }
  uselistorder i32 %v5_83f0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 1, 0, 2 }
  uselistorder i32 %v10_82f0, { 23, 22, 21, 13, 12, 19, 18, 17, 20, 16, 15, 30, 29, 28, 31, 27, 26, 14, 25, 24, 11, 10, 9, 34, 33, 32, 40, 39, 38, 36, 37, 35, 45, 44, 43, 42, 41, 8, 7, 6, 5, 4, 3, 2, 1, 0, 46, 47 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %v3_829c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9, 10, 11, 12 }
  uselistorder i32 %v3_828c, { 1, 0, 2 }
  uselistorder i32 %v2_8278, { 0, 29, 37, 36, 39, 38, 1, 32, 2, 33, 3, 34, 35, 40, 4, 28, 5, 6, 30, 31, 41, 7, 26, 8, 27, 9, 42, 10, 11, 24, 25, 43, 12, 21, 13, 22, 23, 44, 14, 15, 19, 20, 45, 46, 47, 16, 48, 50, 49, 52, 51, 54, 53, 56, 55, 18, 17, 57 }
  uselistorder i32 %v6_81f8, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 43, 41, 42 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 11, 10, 12, 3, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 74, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 159, 160, 161, 162, 163, 164, 165, 166, 139, 140, 141, 142, 143, 144, 145, 146, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 106, 107, 108, 110, 111, 112, 116, 117, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 126, 127, 130, 129, 2, 132, 133, 131, 1, 134, 135, 136, 137, 138, 156, 157, 158, 147, 148, 149, 150, 151, 152, 153, 154, 155, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 91, 92, 93, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 1, 89, 90, 103, 104, 105, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 64, 26, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 165, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 147, 148, 149, 150, 151, 152, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 1, 141, 142, 143, 144, 145, 146, 161, 162, 153, 154, 155, 156, 157, 158, 160, 159, 0 }
  uselistorder i32* %r0.global-to-local, { 21, 20, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 41, 33, 32, 34, 104, 42, 259, 35, 77, 52, 43, 45, 44, 46, 48, 47, 50, 49, 53, 51, 54, 56, 55, 57, 59, 58, 61, 60, 65, 62, 63, 64, 67, 66, 68, 69, 71, 70, 72, 73, 74, 76, 75, 79, 78, 80, 82, 81, 83, 86, 84, 85, 88, 87, 91, 89, 90, 93, 92, 95, 94, 97, 96, 98, 99, 100, 102, 101, 103, 106, 105, 108, 107, 109, 110, 111, 317, 113, 112, 115, 114, 116, 118, 117, 119, 120, 121, 123, 122, 125, 124, 126, 128, 127, 129, 130, 131, 133, 132, 135, 134, 136, 139, 137, 138, 141, 140, 143, 142, 144, 146, 145, 147, 148, 149, 150, 151, 152, 153, 155, 154, 36, 156, 158, 157, 160, 159, 162, 161, 165, 163, 164, 167, 166, 168, 170, 169, 171, 174, 172, 173, 176, 175, 178, 177, 179, 181, 180, 182, 319, 318, 320, 321, 322, 324, 323, 326, 325, 327, 329, 328, 330, 332, 331, 333, 334, 335, 18, 336, 338, 337, 339, 341, 340, 342, 344, 343, 345, 17, 346, 347, 282, 284, 283, 10, 9, 285, 286, 19, 287, 6, 183, 184, 185, 187, 186, 188, 190, 189, 192, 191, 193, 195, 194, 197, 196, 198, 200, 199, 201, 202, 203, 4, 204, 5, 205, 3, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 262, 264, 265, 2, 266, 1, 267, 8, 269, 268, 7, 271, 270, 274, 272, 273, 14, 40, 275, 276, 16, 277, 15, 13, 278, 279, 12, 280, 281, 11, 39, 314, 38, 315, 316, 37, 288, 290, 289, 291, 292, 293, 295, 294, 296, 297, 299, 298, 301, 300, 303, 302, 305, 304, 307, 306, 308, 309, 310, 311, 312, 313, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 59, 51, 52, 53, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 58, 54, 55, 56, 57 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 129, 130, 131, 132, 133, 68, 69, 70, 71, 72, 73, 81, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 102, 107, 109, 108, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 142, 143, 134, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 135, 136, 137, 138, 139, 73, 74, 75, 76, 77, 78, 85, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 128, 129, 121, 122, 123, 124, 125, 126, 127, 130, 0, 131, 132, 133, 134, 149, 150, 151, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32 49, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2d8.48 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a2c8.44 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a2c0.42 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a2b4.40 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2bc.38 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a294.26 to i32), { 0, 2, 1, 3 }
  uselistorder i32 10240, { 2, 5, 3, 6, 4, 7, 0, 8, 1, 9 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 2, 3, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 10241, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1a29c.19 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_9df8, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9cbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c9c, { 2, 0, 1 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9ac8, { 1, 0 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_9a9c, { 2, 0, 1 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_9a00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_991c, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98d0, { 1, 0 }
  uselistorder label %dec_label_pc_98a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_989c, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %bb189, { 1, 0 }
  uselistorder label %dec_label_pc_95bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
  uselistorder label %dec_label_pc_94d0, { 1, 0 }
  uselistorder label %dec_label_pc_94c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_94a0, { 1, 0 }
  uselistorder label %dec_label_pc_9464, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_9378, { 2, 1, 0 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %.thread24, { 3, 0, 1, 2 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_90ac, { 1, 0 }
  uselistorder label %dec_label_pc_8f64, { 1, 0 }
  uselistorder label %dec_label_pc_8e34, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d9c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8d40, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8d14, { 1, 0 }
  uselistorder label %dec_label_pc_8ce4, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %dec_label_pc_8c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8c34, { 1, 0 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_87b4, { 8, 9, 10, 11, 12, 13, 1, 2, 7, 15, 0, 14, 3, 6, 4, 5 }
  uselistorder label %dec_label_pc_877c, { 1, 0 }
  uselistorder label %dec_label_pc_8700, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_85bc, { 5, 3, 4, 0, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_8538.dec_label_pc_8538_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8510.dec_label_pc_8510_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_84f4, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_84f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8498, { 1, 0 }
  uselistorder label %dec_label_pc_8440, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @function_9f04(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f04:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f04 = icmp eq i32 %arg1, 0
  br i1 %v2_9f04, label %dec_label_pc_9f4c, label %dec_label_pc_9f14

dec_label_pc_9f14:                                ; preds = %dec_label_pc_9f04
  %v0_9f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f14 = add i32 %v0_9f14, 4
  %v2_9f14 = inttoptr i32 %v1_9f14 to i8*
  %v3_9f14 = load i8, i8* %v2_9f14, align 1
  %v4_9f14 = zext i8 %v3_9f14 to i32
  %v9_9f18 = icmp eq i32 %v4_9f14, %arg3
  br i1 %v9_9f18, label %dec_label_pc_9f58, label %dec_label_pc_9f3c.preheader

dec_label_pc_9f3c.preheader:                      ; preds = %dec_label_pc_9f14
  br label %dec_label_pc_9f3c

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9f3c
  %v1_9f2c = add i32 %v0_9f34.in, 12
  %v2_9f2c = inttoptr i32 %v1_9f2c to i8*
  %v3_9f2c = load i8, i8* %v2_9f2c, align 1
  %v4_9f2c = zext i8 %v3_9f2c to i32
  %v9_9f30 = icmp eq i32 %v4_9f2c, %arg3
  br i1 %v9_9f30, label %dec_label_pc_9f58, label %dec_label_pc_9f3c

dec_label_pc_9f3c:                                ; preds = %dec_label_pc_9f3c.preheader, %dec_label_pc_9f2c
  %v0_9f34.in = phi i32 [ %v0_9f14, %dec_label_pc_9f3c.preheader ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v0_9f3c = phi i32 [ 0, %dec_label_pc_9f3c.preheader ], [ %v1_9f3c, %dec_label_pc_9f2c ]
  %v0_9f34 = add i32 %v0_9f34.in, 8
  %v1_9f3c = add i32 %v0_9f3c, 1
  %v9_9f40 = icmp eq i32 %v1_9f3c, %arg1
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  br i1 %v9_9f40, label %dec_label_pc_9f4c, label %dec_label_pc_9f2c

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f3c, %dec_label_pc_9f04, %dec_label_pc_9f58
  %v0_9f4c = phi i32 [ %arg4, %dec_label_pc_9f04 ], [ %v2_9f58, %dec_label_pc_9f58 ], [ %arg4, %dec_label_pc_9f3c ]
  ret i32 %v0_9f4c

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f2c, %dec_label_pc_9f14
  %v0_9f58 = phi i32 [ %v0_9f14, %dec_label_pc_9f14 ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v1_9f58 = inttoptr i32 %v0_9f58 to i32*
  %v2_9f58 = load i32, i32* %v1_9f58, align 4
  br label %dec_label_pc_9f4c

; uselistorder directives
  uselistorder i32 %v1_9f3c, { 1, 0 }
  uselistorder i32 %v0_9f34, { 1, 0, 2 }
  uselistorder i32 %v0_9f34.in, { 1, 0 }
  uselistorder i32 %v0_9f14, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f3c, { 1, 0 }
}

define i32 @function_9f60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9f60:
  %stack_var_-32 = alloca i32, align 4
  %v3_9f60 = load i32, i32* @r4, align 4
  store i32 %v3_9f60, i32* %stack_var_-32, align 4
  %v6_9f60 = load i32, i32* @r5, align 4
  %v9_9f60 = load i32, i32* @r6, align 4
  %v12_9f60 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_9f78 = call i32 @function_15768()
  %v7_9f7c = icmp eq i32 %v0_9f78, -1
  %tmp23 = icmp slt i32 %v0_9f78, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_9f60
  br label %dec_label_pc_9f9c

bb24:                                             ; preds = %dec_label_pc_9f60
  %. = zext i1 %v7_9f7c to i32
  store i32 %., i32* @r5, align 4
  %v2_9f94 = icmp eq i1 %v7_9f7c, false
  br i1 %v2_9f94, label %dec_label_pc_9fa4, label %dec_label_pc_9f9c

dec_label_pc_9f9c:                                ; preds = %.thread2, %bb24
  %v2_9f9c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_9f9c, i32* @r4, align 4
  store i32 %v6_9f60, i32* @r5, align 4
  store i32 %v9_9f60, i32* @r6, align 4
  store i32 %v12_9f60, i32* @r7, align 4
  ret i32 %v0_9f78

dec_label_pc_9fa4:                                ; preds = %bb24
  %v0_9fa4 = call i32 @function_15768()
  %v7_9fa8 = icmp eq i32 %v0_9fa4, -1
  store i32 %v0_9fa4, i32* @r4, align 4
  br i1 %v7_9fa8, label %dec_label_pc_9fd8, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9fa4
  %v2_9fb4 = icmp eq i32 %v0_9fa4, 0
  br i1 %v2_9fb4, label %dec_label_pc_9fbc, label %dec_label_pc_9fe0

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9fb4
  %v0_9fbc = load i32, i32* @r6, align 4
  %v1_9fc0 = call i32 @function_16728(i32 %v0_9fbc)
  store i32 %v1_9fc0, i32* @r0, align 4
  %v0_9fc4 = call i32 @function_166a4()
  store i32 %v0_9fc4, i32* @r0, align 4
  %v2_9fcc = call i32 @function_158f4(i32 %v0_9fc4, i32 9)
  %v0_9fd0 = load i32, i32* @r4, align 4
  %v1_9fd4 = call i32 @function_13a00(i32 %v0_9fd0)
  br label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9fbc
  %v0_9fd8 = load i32, i32* @r5, align 4
  %v1_9fdc = call i32 @function_13a00(i32 %v0_9fd8)
  br label %dec_label_pc_9fe0

dec_label_pc_9fe0:                                ; preds = %dec_label_pc_9fb4, %dec_label_pc_9fd8
  %v2_9fe4 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_9fe4 = zext i8 %v2_9fe4 to i32
  %v2_9fe8 = icmp eq i8 %v2_9fe4, 0
  br i1 %v2_9fe8, label %dec_label_pc_a02c, label %dec_label_pc_9ff0

dec_label_pc_9ff0:                                ; preds = %dec_label_pc_9fe0
  %v2_9ff4 = load i32, i32* @global_var_23078.55, align 4
  %v1_9ff8 = inttoptr i32 %v2_9ff4 to i32*
  %v2_9ff8 = load i32, i32* %v1_9ff8, align 4
  %v1_9ffc = add i32 %v2_9ff8, 4
  %v2_9ffc = inttoptr i32 %v1_9ffc to i8*
  %v3_9ffc = load i8, i8* %v2_9ffc, align 1
  %v4_9ffc = zext i8 %v3_9ffc to i32
  %v1_a000 = load i32, i32* @r7, align 4
  %v9_a000 = icmp eq i32 %v4_9ffc, %v1_a000
  br i1 %v9_a000, label %dec_label_pc_a034, label %dec_label_pc_a020.preheader

dec_label_pc_a020.preheader:                      ; preds = %dec_label_pc_9ff0
  %v1_a004 = load i32, i32* @r5, align 4
  br label %dec_label_pc_a020

dec_label_pc_a010:                                ; preds = %dec_label_pc_a020
  %v4_a010 = mul i32 %v1_a020, 4
  %v5_a010 = add i32 %v4_a010, %v2_9ff4
  %v6_a010 = inttoptr i32 %v5_a010 to i32*
  %v7_a010 = load i32, i32* %v6_a010, align 4
  %v1_a014 = add i32 %v7_a010, 4
  %v2_a014 = inttoptr i32 %v1_a014 to i8*
  %v3_a014 = load i8, i8* %v2_a014, align 1
  %v4_a014 = zext i8 %v3_a014 to i32
  %v9_a018 = icmp eq i32 %v4_a014, %v1_a000
  br i1 %v9_a018, label %dec_label_pc_a034, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_a020.preheader, %dec_label_pc_a010
  %v0_a020 = phi i32 [ %v1_a004, %dec_label_pc_a020.preheader ], [ %v1_a020, %dec_label_pc_a010 ]
  %v1_a020 = add i32 %v0_a020, 1
  %v9_a024 = icmp eq i32 %v1_a020, %v3_9fe4
  br i1 %v9_a024, label %dec_label_pc_a02c, label %dec_label_pc_a010

dec_label_pc_a02c:                                ; preds = %dec_label_pc_a020, %dec_label_pc_9fe0, %dec_label_pc_a034
  %v1_a030 = call i32 @function_13a00(i32 0)
  %v0_a044.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a010, %dec_label_pc_9ff0, %dec_label_pc_a02c
  %v0_a044 = phi i32 [ %v2_9ff8, %dec_label_pc_9ff0 ], [ %v0_a044.pre, %dec_label_pc_a02c ], [ %v7_a010, %dec_label_pc_a010 ]
  %v1_a044 = inttoptr i32 %v0_a044 to i32*
  %v2_a044 = load i32, i32* %v1_a044, align 4
  call void @__pseudo_branch(i32 %v2_a044)
  br label %dec_label_pc_a02c

; uselistorder directives
  uselistorder i32 %v1_a020, { 2, 0, 1 }
  uselistorder i32 %v0_9fa4, { 1, 2, 0 }
  uselistorder i1 %v7_9f7c, { 1, 0 }
  uselistorder i32 %v0_9f78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a034, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_9fe0, { 1, 0 }
  uselistorder label %dec_label_pc_9fd8, { 1, 0 }
  uselistorder label %dec_label_pc_9f9c, { 1, 0 }
}

define i32 @function_a05c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a05c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_a060 = icmp ugt i32 %arg2, 2
  %v7_a060 = icmp eq i32 %arg2, 3
  store i1 %v7_a060, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a06c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a06c, i32* @r5, align 4
  %v2_a070 = xor i1 %v7_a060, true
  %v3_a070 = and i1 %v2_a060, %v2_a070
  br i1 %v3_a070, label %dec_label_pc_a080, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_a0b0, %.dec_label_pc_a074_crit_edge, %dec_label_pc_a0a4, %dec_label_pc_a094, %dec_label_pc_a080, %dec_label_pc_a05c, %dec_label_pc_a25c
  %v1_a07c = phi i32 [ %v1_a07c.pre, %.dec_label_pc_a074_crit_edge ], [ %v1_a084, %dec_label_pc_a0b0 ], [ %v1_a084, %dec_label_pc_a0a4 ], [ %v1_a084, %dec_label_pc_a094 ], [ %v1_a084, %dec_label_pc_a080 ], [ %v0_a06c, %dec_label_pc_a05c ], [ %v1_a260, %dec_label_pc_a25c ]
  ret i32 %v1_a07c

dec_label_pc_a080:                                ; preds = %dec_label_pc_a05c
  %v1_a080 = inttoptr i32 %v0_a06c to i32*
  %v2_a080 = load i32, i32* %v1_a080, align 4
  store i32 %v2_a080, i32* %r0.global-to-local, align 4
  %v1_a084 = call i32 @function_154ec(i32 %v2_a080)
  store i32 %v1_a084, i32* %r0.global-to-local, align 4
  %v0_a088 = load i32, i32* @r4, align 4
  %v7_a088 = icmp eq i32 %v0_a088, 4
  store i1 %v7_a088, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a084, i32* @fp, align 4
  br i1 %v7_a088, label %dec_label_pc_a074, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_a080
  %v0_a094 = load i32, i32* @r5, align 4
  %v1_a094 = add i32 %v0_a094, 4
  %v2_a094 = inttoptr i32 %v1_a094 to i8*
  %v3_a094 = load i8, i8* %v2_a094, align 1
  %v4_a094 = zext i8 %v3_a094 to i32
  %v7_a098 = icmp eq i32 %v0_a088, 5
  store i1 %v7_a098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a098, label %dec_label_pc_a074, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a094
  %v1_a0a4 = add i32 %v0_a094, 5
  %v2_a0a4 = inttoptr i32 %v1_a0a4 to i8*
  %v3_a0a4 = load i8, i8* %v2_a0a4, align 1
  %v4_a0a4 = zext i8 %v3_a0a4 to i32
  store i32 %v4_a0a4, i32* @sb, align 4
  %v2_a0a8 = icmp eq i8 %v3_a0a4, 0
  store i1 %v2_a0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0a8, label %dec_label_pc_a074, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a0a4
  %v2_a0b4 = mul nuw nsw i32 %v4_a0a4, 5
  store i32 %v2_a0b4, i32* @r7, align 4
  %v1_a0b8 = add i32 %v0_a088, -6
  store i32 %v1_a0b8, i32* %r3.global-to-local, align 4
  %v3_a0bc = icmp ult i32 %v1_a0b8, %v2_a0b4
  %v9_a0bc = icmp eq i32 %v1_a0b8, %v2_a0b4
  store i1 %v9_a0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a0bc, label %dec_label_pc_a074, label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a0b0
  store i32 %v4_a0a4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a0b8, i32* @r6, align 4
  %v2_a0d0 = call i32 @function_13d28(i32 %v4_a0a4, i32 24)
  store i32 %v2_a0d0, i32* %ip.global-to-local, align 4
  %v0_a0dc = load i32, i32* @r7, align 4
  %v1_a0dc = load i32, i32* @r4, align 4
  %v2_a0dc = sub i32 %v1_a0dc, %v0_a0dc
  store i32 %v2_a0dc, i32* @r7, align 4
  %v0_a0e0 = load i32, i32* @r5, align 4
  %v1_a0e0 = add i32 %v0_a0e0, 11
  store i32 %v1_a0e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0e4, %dec_label_pc_a0c4
  %v1_a0e8 = phi i32 [ %v1_a114, %dec_label_pc_a0e4 ], [ %v2_a0d0, %dec_label_pc_a0c4 ]
  %v0_a0e4 = phi i32 [ %v1_a110, %dec_label_pc_a0e4 ], [ %v1_a0e0, %dec_label_pc_a0c4 ]
  %v1_a0e4 = add i32 %v0_a0e4, -5
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i32*
  %v3_a0e4 = load i32, i32* %v2_a0e4, align 4
  store i32 %v3_a0e4, i32* %r1.global-to-local, align 4
  %v2_a0e8 = add i32 %v1_a0e8, 16
  %v3_a0e8 = inttoptr i32 %v2_a0e8 to i32*
  store i32 %v3_a0e4, i32* %v3_a0e8, align 4
  %v0_a0ec = load i32, i32* @r7, align 4
  %v1_a0ec = add i32 %v0_a0ec, -6
  store i32 %v1_a0ec, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a0f0 = add i32 %v0_a0f0, -1
  %v2_a0f0 = inttoptr i32 %v1_a0f0 to i8*
  %v3_a0f0 = load i8, i8* %v2_a0f0, align 1
  %v4_a0f0 = zext i8 %v3_a0f0 to i32
  store i32 %v4_a0f0, i32* @r2, align 4
  %v0_a0f4 = load i32, i32* @r6, align 4
  %v1_a0f4 = add i32 %v0_a0f4, -5
  store i32 %v1_a0f4, i32* @r6, align 4
  %v9_a0f8 = icmp eq i32 %v1_a0f4, %v1_a0ec
  store i1 %v9_a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_a0f0, i32* @r4, align 4
  %v2_a104 = load i32, i32* %ip.global-to-local, align 4
  %v3_a104 = add i32 %v2_a104, 20
  %v4_a104 = inttoptr i32 %v3_a104 to i8*
  store i8 %v3_a0f0, i8* %v4_a104, align 1
  %v0_a108 = load i32, i32* %r1.global-to-local, align 4
  %v1_a108 = load i32, i32* %ip.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 4
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v0_a108, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = trunc i32 %v0_a10c to i16
  %v2_a10c = load i32, i32* %ip.global-to-local, align 4
  %v3_a10c = inttoptr i32 %v2_a10c to i16*
  store i16 %v1_a10c, i16* %v3_a10c, align 2
  %v0_a110 = load i32, i32* %r0.global-to-local, align 4
  %v1_a110 = add i32 %v0_a110, 5
  store i32 %v1_a110, i32* %r0.global-to-local, align 4
  %v0_a114 = load i32, i32* %ip.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 24
  store i32 %v1_a114, i32* %ip.global-to-local, align 4
  %v0_a118 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a118, label %dec_label_pc_a11c, label %dec_label_pc_a0e4

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a0e4
  %v0_a11c = load i32, i32* @r6, align 4
  %v2_a11c = icmp eq i32 %v0_a11c, 0
  store i1 %v2_a11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a11c, label %dec_label_pc_a220, label %dec_label_pc_a124

dec_label_pc_a124:                                ; preds = %dec_label_pc_a11c
  %v0_a124 = load i32, i32* @r4, align 4
  %v1_a124 = inttoptr i32 %v0_a124 to i8*
  %v2_a124 = load i8, i8* %v1_a124, align 1
  %v3_a124 = zext i8 %v2_a124 to i32
  store i32 %v3_a124, i32* @r5, align 4
  %v2_a128 = icmp eq i8 %v2_a124, 0
  store i1 %v2_a128, i1* %cpsr_z.global-to-local, align 1
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = add i32 %v0_a12c, -7
  store i32 %v1_a12c, i32* @r8, align 4
  br i1 %v2_a128, label %bb, label %dec_label_pc_a138

bb:                                               ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* @r6, align 4
  br label %dec_label_pc_a1fc

dec_label_pc_a138:                                ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a140 = call i32 @function_13d28(i32 %v3_a124, i32 8)
  store i32 %v2_a140, i32* %r0.global-to-local, align 4
  %v0_a144 = load i32, i32* @r8, align 4
  %v2_a144 = icmp eq i32 %v0_a144, 0
  store i1 %v2_a144, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a140, i32* @r6, align 4
  br i1 %v2_a144, label %dec_label_pc_a220, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a138
  %v0_a150 = load i32, i32* @r4, align 4
  %v1_a150 = add i32 %v0_a150, 1
  %v2_a150 = inttoptr i32 %v1_a150 to i8*
  %v3_a150 = load i8, i8* %v2_a150, align 1
  %v0_a154 = load i32, i32* @r7, align 4
  %v7_a154 = icmp eq i32 %v0_a154, 8
  store i1 %v7_a154, i1* %cpsr_z.global-to-local, align 1
  %v3_a158 = add i32 %v2_a140, 4
  %v4_a158 = inttoptr i32 %v3_a158 to i8*
  store i8 %v3_a150, i8* %v4_a158, align 1
  %v0_a15c = load i32, i32* @r4, align 4
  %v1_a15c = add i32 %v0_a15c, 1
  store i32 %v1_a15c, i32* %r3.global-to-local, align 4
  %v0_a160 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a160, label %dec_label_pc_a220, label %dec_label_pc_a164

dec_label_pc_a164:                                ; preds = %dec_label_pc_a150
  %v1_a164 = add i32 %v0_a15c, 2
  %v2_a164 = inttoptr i32 %v1_a164 to i8*
  %v3_a164 = load i8, i8* %v2_a164, align 1
  %v4_a164 = zext i8 %v3_a164 to i32
  store i32 %v4_a164, i32* @r4, align 4
  %v0_a168 = load i32, i32* @r7, align 4
  %v1_a168 = add i32 %v0_a168, -9
  store i32 %v1_a168, i32* @r8, align 4
  %v9_a16c = icmp eq i32 %v1_a168, %v4_a164
  store i1 %v9_a16c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a164, i32* %r1.global-to-local, align 4
  %v5_a174 = icmp slt i32 %v1_a168, %v4_a164
  br i1 %v5_a174, label %dec_label_pc_a220, label %bb35

bb35:                                             ; preds = %dec_label_pc_a164
  %v7_a1787 = add i32 %v0_a15c, 3
  store i32 %v7_a1787, i32* @r7, align 4
  %v6_a17c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a17c, i32* @sl, align 4
  br label %dec_label_pc_a1c0

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a1c0
  %v0_a18c = load i32, i32* @r8, align 4
  %v1_a18c = load i32, i32* @r4, align 4
  %v2_a18c = sub i32 %v0_a18c, %v1_a18c
  store i32 %v2_a18c, i32* @r2, align 4
  %v9_a18c = icmp eq i32 %v0_a18c, %v1_a18c
  store i1 %v9_a18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a18c, label %dec_label_pc_a220, label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %dec_label_pc_a18c
  %v1_a194 = load i32, i32* @r7, align 4
  %v2_a194 = add i32 %v1_a194, %v1_a18c
  %v3_a194 = inttoptr i32 %v2_a194 to i8*
  %v4_a194 = load i8, i8* %v3_a194, align 1
  store i32 %v2_a194, i32* %r0.global-to-local, align 4
  %v1_a19c = add i32 %v2_a18c, -1
  store i32 %v1_a19c, i32* @r2, align 4
  %v7_a19c = icmp eq i32 %v2_a18c, 1
  store i1 %v7_a19c, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a0 = add i32 %v2_a1f4, 4
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i8*
  store i8 %v4_a194, i8* %v4_a1a0, align 1
  %v0_a1a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1a4 = add i32 %v0_a1a4, 1
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r2, align 4
  %v1_a1a8 = add i32 %v0_a1a8, -1
  store i32 %v1_a1a8, i32* @r8, align 4
  %v1_a1ac = add i32 %v0_a1a4, 2
  store i32 %v1_a1ac, i32* @r7, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a220, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a194
  %v2_a1b4 = inttoptr i32 %v1_a1a4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v2_a1b8 = sub i32 %v1_a1a8, %v4_a1b4
  %tmp36 = sub i32 0, %v2_a1b8
  %v6_a1b8 = and i32 %v1_a1a8, %tmp36
  %v7_a1b8 = icmp slt i32 %v6_a1b8, 0
  %v8_a1b8 = icmp slt i32 %v2_a1b8, 0
  %v9_a1b8 = icmp eq i32 %v1_a1a8, %v4_a1b4
  store i1 %v9_a1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_a1bc = xor i1 %v8_a1b8, %v7_a1b8
  br i1 %v2_a1bc, label %dec_label_pc_a220, label %dec_label_pc_a1c0

dec_label_pc_a1c0:                                ; preds = %bb35, %dec_label_pc_a1b4
  %v0_a1c4 = phi i32 [ %v4_a164, %bb35 ], [ %v4_a1b4, %dec_label_pc_a1b4 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_a1d4, %dec_label_pc_a1b4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_a1c4 = add nuw nsw i32 %v0_a1c4, 1
  store i32 %v1_a1c4, i32* %r0.global-to-local, align 4
  %v2_a1c8 = call i32 @function_13d28(i32 %v1_a1c4, i32 1)
  store i32 %v2_a1c8, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_a1d0 = load i32, i32* @sl, align 4
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i32*
  store i32 %v2_a1c8, i32* %v2_a1d0, align 4
  %v0_a1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d4 = add i32 %v0_a1d4, 1
  store i32 %v1_a1d4, i32* %r3.global-to-local, align 4
  %v0_a1d8 = load i32, i32* @r4, align 4
  %v0_a1dc = load i32, i32* @r7, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  %v3_a1e4 = call i32 @function_12eb0(i32 %v2_a1c8, i32 %v0_a1dc, i32 %v0_a1d8)
  store i32 %v3_a1e4, i32* %r0.global-to-local, align 4
  %v3_a1ec = mul i32 %v1_a1d4, 8
  store i32 %v3_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = load i32, i32* @r5, align 4
  %v9_a1f0 = icmp eq i32 %v1_a1d4, %v1_a1f0
  store i1 %v9_a1f0, i1* %cpsr_z.global-to-local, align 1
  %v0_a1f4 = load i32, i32* @r6, align 4
  %v2_a1f4 = add i32 %v0_a1f4, %v3_a1ec
  store i32 %v2_a1f4, i32* @sl, align 4
  br i1 %v9_a1f0, label %dec_label_pc_a1fc, label %dec_label_pc_a18c

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1c0, %bb
  %v0_a1fc = call i32 @function_139e8()
  %v2_a204 = inttoptr i32 %v0_a1fc to i32*
  store i32 0, i32* %v2_a204, align 4
  store i32 %v4_a094, i32* %r1.global-to-local, align 4
  %v0_a20c = load i32, i32* @fp, align 4
  store i32 %v0_a20c, i32* %r0.global-to-local, align 4
  %v0_a210 = load i32, i32* @sb, align 4
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a218 = load i32, i32* @r5, align 4
  %v5_a218 = load i32, i32* @r6, align 4
  %v6_a21c = trunc i32 %v2_a218 to i8
  %v7_a21c = call i32 @function_9f60(i32 %v0_a20c, i32 %v4_a094, i32 %v0_a210, i32 %v2_a0d0, i8 %v6_a21c, i32 %v5_a218)
  store i32 %v7_a21c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a1b4, %dec_label_pc_a194, %dec_label_pc_a18c, %dec_label_pc_a164, %dec_label_pc_a150, %dec_label_pc_a138, %dec_label_pc_a11c, %dec_label_pc_a1fc
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a224 = icmp eq i32 %v2_a0d0, 0
  store i1 %v2_a224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a224, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_a220
  store i32 %v2_a0d0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_a220, %bb37
  store i32 41520, i32* @lr, align 4
  %v1_a22c = xor i1 %v2_a224, true
  call void @__pseudo_cond_branch(i1 %v1_a22c, i32 ptrtoint (i32* @global_var_1429c.57 to i32))
  %v0_a230 = load i32, i32* @r6, align 4
  %v2_a230 = icmp eq i32 %v0_a230, 0
  store i1 %v2_a230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a230, label %.dec_label_pc_a074_crit_edge, label %dec_label_pc_a238

.dec_label_pc_a074_crit_edge:                     ; preds = %bb38
  %v1_a07c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

dec_label_pc_a238:                                ; preds = %bb38
  %v0_a238 = load i32, i32* @r5, align 4
  %v2_a238 = icmp eq i32 %v0_a238, 0
  store i1 %v2_a238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a238, label %dec_label_pc_a25c, label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a244

dec_label_pc_a244:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a240
  %v0_a24c = phi i32 [ 0, %dec_label_pc_a240 ], [ %v1_a254, %dec_label_pc_a244 ]
  %v0_a244 = phi i32 [ %v0_a230, %dec_label_pc_a240 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  %v4_a244 = mul i32 %v0_a24c, 8
  %v5_a244 = add i32 %v4_a244, %v0_a244
  %v6_a244 = inttoptr i32 %v5_a244 to i32*
  %v7_a244 = load i32, i32* %v6_a244, align 4
  store i32 %v7_a244, i32* %r0.global-to-local, align 4
  %v2_a248 = icmp eq i32 %v7_a244, 0
  store i1 %v2_a248, i1* %cpsr_z.global-to-local, align 1
  %v1_a24c = add i32 %v0_a24c, 1
  store i32 %v1_a24c, i32* @r4, align 4
  store i32 41556, i32* @lr, align 4
  %v1_a250 = xor i1 %v2_a248, true
  call void @__pseudo_cond_branch(i1 %v1_a250, i32 ptrtoint (i32* @global_var_1429c.57 to i32))
  %v0_a254 = load i32, i32* @r5, align 4
  %v1_a254 = load i32, i32* @r4, align 4
  %v9_a254 = icmp eq i32 %v0_a254, %v1_a254
  store i1 %v9_a254, i1* %cpsr_z.global-to-local, align 1
  %v0_a25c.pre = load i32, i32* @r6, align 4
  br i1 %v9_a254, label %dec_label_pc_a25c, label %dec_label_pc_a244

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a238
  %v0_a25c = phi i32 [ %v0_a230, %dec_label_pc_a238 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  store i32 %v0_a25c, i32* %r0.global-to-local, align 4
  %v1_a260 = call i32 @function_1429c(i32 %v0_a25c)
  store i32 %v1_a260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

; uselistorder directives
  uselistorder i32 %v1_a260, { 1, 0 }
  uselistorder i32 %v0_a25c, { 1, 0 }
  uselistorder i32 %v1_a254, { 1, 0 }
  uselistorder i1 %v2_a224, { 0, 2, 1 }
  uselistorder i32 %v2_a1f4, { 1, 0 }
  uselistorder i32 %v3_a1ec, { 1, 0 }
  uselistorder i32 %v1_a1d4, { 2, 0, 3, 1 }
  uselistorder i32 %v2_a1b8, { 1, 0 }
  uselistorder i32 %v4_a1b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a1a8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a124, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a114, { 1, 0 }
  uselistorder i32 %v1_a110, { 1, 0 }
  uselistorder i32 %v2_a0d0, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_a0a4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a084, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_a06c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 22, 4, 23, 6, 21, 10, 9, 7, 8, 16, 17, 11, 12, 13, 14, 15, 18, 20, 19, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_a220, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_a074, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_a268(i32 %arg1) local_unnamed_addr {
dec_label_pc_a268:
  store i32 ptrtoint (i32* @global_var_2307c.59 to i32), i32* @r4, align 4
  %v2_a270 = load i32, i32* @global_var_2307c.59, align 4
  store i32 %v2_a270, i32* @r0, align 4
  %v2_a274 = icmp eq i32 %v2_a270, 0
  br i1 %v2_a274, label %dec_label_pc_a280, label %dec_label_pc_a308

dec_label_pc_a280:                                ; preds = %dec_label_pc_a268
  %v3_a280 = load i32, i32* @global_var_23080.60, align 4
  store i32 %v3_a280, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a288 = icmp eq i32 %v3_a280, 0
  store i32 0, i32* @global_var_2307c.59, align 4
  br i1 %v2_a288, label %dec_label_pc_a294, label %dec_label_pc_a324

dec_label_pc_a294:                                ; preds = %dec_label_pc_a308.dec_label_pc_a294_crit_edge, %dec_label_pc_a280
  %v0_a29c = phi i32 [ %v0_a29c.pre, %dec_label_pc_a308.dec_label_pc_a294_crit_edge ], [ 0, %dec_label_pc_a280 ]
  %v3_a294 = load i32, i32* @global_var_23084.61, align 4
  store i32 %v3_a294, i32* @r0, align 4
  %v2_a298 = icmp eq i32 %v3_a294, 0
  store i32 %v0_a29c, i32* @global_var_23080.60, align 4
  br i1 %v2_a298, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a2ac = phi i32 [ %v0_a29c, %dec_label_pc_a294 ], [ %v0_a334, %dec_label_pc_a324 ]
  %v3_a2a4 = load i32, i32* @global_var_23088.62, align 4
  store i32 %v3_a2a4, i32* @r0, align 4
  %v2_a2a8 = icmp eq i32 %v3_a2a4, 0
  store i32 %v0_a2ac, i32* @global_var_23084.61, align 4
  br i1 %v2_a2a8, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a2bc = phi i32 [ %v0_a2ac, %dec_label_pc_a2a4 ], [ %v0_a34c, %dec_label_pc_a33c ]
  %v3_a2b4 = load i32, i32* @global_var_2308c.63, align 4
  store i32 %v3_a2b4, i32* @r0, align 4
  %v2_a2b8 = icmp eq i32 %v3_a2b4, 0
  store i32 %v0_a2bc, i32* @global_var_23088.62, align 4
  br i1 %v2_a2b8, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a2cc = phi i32 [ %v0_a2bc, %dec_label_pc_a2b4 ], [ %v0_a364, %dec_label_pc_a354 ]
  %v3_a2c4 = load i32, i32* @global_var_23090.64, align 4
  store i32 %v3_a2c4, i32* @r0, align 4
  %v2_a2c8 = icmp eq i32 %v3_a2c4, 0
  store i32 %v0_a2cc, i32* @global_var_2308c.63, align 4
  br i1 %v2_a2c8, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a2dc = phi i32 [ %v0_a2cc, %dec_label_pc_a2c4 ], [ %v0_a37c, %dec_label_pc_a36c ]
  %v3_a2d4 = load i32, i32* @global_var_23094.65, align 4
  store i32 %v3_a2d4, i32* @r0, align 4
  %v2_a2d8 = icmp eq i32 %v3_a2d4, 0
  store i32 %v0_a2dc, i32* @global_var_23090.64, align 4
  br i1 %v2_a2d8, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a2ec = phi i32 [ %v0_a2dc, %dec_label_pc_a2d4 ], [ %v0_a394, %dec_label_pc_a384 ]
  %v3_a2e4 = load i32, i32* @global_var_23098.66, align 4
  store i32 %v3_a2e4, i32* @r0, align 4
  %v2_a2e8 = icmp eq i32 %v3_a2e4, 0
  store i32 %v0_a2ec, i32* @global_var_23094.65, align 4
  br i1 %v2_a2e8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a2f4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c, %dec_label_pc_a3b4
  %v0_a2f4 = phi i32 [ %v0_a2ec, %dec_label_pc_a2e4 ], [ %v0_a3ac, %dec_label_pc_a39c ], [ %v0_a2f4.pre, %dec_label_pc_a3b4 ]
  store i32 %v0_a2f4, i32* @global_var_23098.66, align 4
  %v0_a2f8 = call i32 @function_10b04()
  ret i32 %v0_a2f8

dec_label_pc_a308:                                ; preds = %dec_label_pc_a268
  %v2_a30c = call i32 @function_158f4(i32 %v2_a270, i32 9)
  %v3_a310 = load i32, i32* @global_var_23080.60, align 4
  store i32 %v3_a310, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a318 = icmp eq i32 %v3_a310, 0
  %v1_a31c = load i32, i32* @r4, align 4
  %v2_a31c = inttoptr i32 %v1_a31c to i32*
  store i32 0, i32* %v2_a31c, align 4
  br i1 %v2_a318, label %dec_label_pc_a308.dec_label_pc_a294_crit_edge, label %dec_label_pc_a308.dec_label_pc_a324_crit_edge

dec_label_pc_a308.dec_label_pc_a294_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a29c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a294

dec_label_pc_a308.dec_label_pc_a324_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a328.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a308.dec_label_pc_a324_crit_edge, %dec_label_pc_a280
  %v0_a328 = phi i32 [ %v0_a328.pre, %dec_label_pc_a308.dec_label_pc_a324_crit_edge ], [ %v3_a280, %dec_label_pc_a280 ]
  %v2_a328 = call i32 @function_158f4(i32 %v0_a328, i32 9)
  %v3_a32c = load i32, i32* @global_var_23084.61, align 4
  store i32 %v3_a32c, i32* @r0, align 4
  %v2_a330 = icmp eq i32 %v3_a32c, 0
  %v0_a334 = load i32, i32* @r5, align 4
  store i32 %v0_a334, i32* @global_var_23080.60, align 4
  br i1 %v2_a330, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a340 = phi i32 [ %v3_a294, %dec_label_pc_a294 ], [ %v3_a32c, %dec_label_pc_a324 ]
  %v2_a340 = call i32 @function_158f4(i32 %v0_a340, i32 9)
  %v3_a344 = load i32, i32* @global_var_23088.62, align 4
  store i32 %v3_a344, i32* @r0, align 4
  %v2_a348 = icmp eq i32 %v3_a344, 0
  %v0_a34c = load i32, i32* @r5, align 4
  store i32 %v0_a34c, i32* @global_var_23084.61, align 4
  br i1 %v2_a348, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a358 = phi i32 [ %v3_a2a4, %dec_label_pc_a2a4 ], [ %v3_a344, %dec_label_pc_a33c ]
  %v2_a358 = call i32 @function_158f4(i32 %v0_a358, i32 9)
  %v3_a35c = load i32, i32* @global_var_2308c.63, align 4
  store i32 %v3_a35c, i32* @r0, align 4
  %v2_a360 = icmp eq i32 %v3_a35c, 0
  %v0_a364 = load i32, i32* @r5, align 4
  store i32 %v0_a364, i32* @global_var_23088.62, align 4
  br i1 %v2_a360, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a370 = phi i32 [ %v3_a2b4, %dec_label_pc_a2b4 ], [ %v3_a35c, %dec_label_pc_a354 ]
  %v2_a370 = call i32 @function_158f4(i32 %v0_a370, i32 9)
  %v3_a374 = load i32, i32* @global_var_23090.64, align 4
  store i32 %v3_a374, i32* @r0, align 4
  %v2_a378 = icmp eq i32 %v3_a374, 0
  %v0_a37c = load i32, i32* @r5, align 4
  store i32 %v0_a37c, i32* @global_var_2308c.63, align 4
  br i1 %v2_a378, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a388 = phi i32 [ %v3_a2c4, %dec_label_pc_a2c4 ], [ %v3_a374, %dec_label_pc_a36c ]
  %v2_a388 = call i32 @function_158f4(i32 %v0_a388, i32 9)
  %v3_a38c = load i32, i32* @global_var_23094.65, align 4
  store i32 %v3_a38c, i32* @r0, align 4
  %v2_a390 = icmp eq i32 %v3_a38c, 0
  %v0_a394 = load i32, i32* @r5, align 4
  store i32 %v0_a394, i32* @global_var_23090.64, align 4
  br i1 %v2_a390, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a39c:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a3a0 = phi i32 [ %v3_a2d4, %dec_label_pc_a2d4 ], [ %v3_a38c, %dec_label_pc_a384 ]
  %v2_a3a0 = call i32 @function_158f4(i32 %v0_a3a0, i32 9)
  %v3_a3a4 = load i32, i32* @global_var_23098.66, align 4
  store i32 %v3_a3a4, i32* @r0, align 4
  %v2_a3a8 = icmp eq i32 %v3_a3a4, 0
  %v0_a3ac = load i32, i32* @r5, align 4
  store i32 %v0_a3ac, i32* @global_var_23094.65, align 4
  br i1 %v2_a3a8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c
  %v0_a3b8 = phi i32 [ %v3_a2e4, %dec_label_pc_a2e4 ], [ %v3_a3a4, %dec_label_pc_a39c ]
  %v2_a3b8 = call i32 @function_158f4(i32 %v0_a3b8, i32 9)
  %v0_a2f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a2f4

; uselistorder directives
  uselistorder i32 %v0_a3ac, { 1, 0 }
  uselistorder i32 %v0_a394, { 1, 0 }
  uselistorder i32 %v0_a37c, { 1, 0 }
  uselistorder i32 %v0_a364, { 1, 0 }
  uselistorder i32 %v0_a34c, { 1, 0 }
  uselistorder i32 %v0_a334, { 1, 0 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a39c, { 1, 0 }
  uselistorder label %dec_label_pc_a384, { 1, 0 }
  uselistorder label %dec_label_pc_a36c, { 1, 0 }
  uselistorder label %dec_label_pc_a354, { 1, 0 }
  uselistorder label %dec_label_pc_a33c, { 1, 0 }
  uselistorder label %dec_label_pc_a2f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a2e4, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
  uselistorder label %dec_label_pc_a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 1, 0 }
}

define i32 @function_a3c4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a3c4:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a3c4 = icmp eq i32 %arg1, 0
  %v3_a3c8 = load i32, i32* @r4, align 4
  store i32 %v3_a3c8, i32* %stack_var_-8, align 4
  %v6_a3c8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a3c4, label %dec_label_pc_a40c, label %dec_label_pc_a3d4

dec_label_pc_a3d4:                                ; preds = %dec_label_pc_a3c4
  %v0_a3d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a3d4 = add i32 %v0_a3d4, 4
  %v2_a3d4 = inttoptr i32 %v1_a3d4 to i8*
  %v3_a3d4 = load i8, i8* %v2_a3d4, align 1
  %v4_a3d4 = zext i8 %v3_a3d4 to i32
  %v9_a3d8 = icmp eq i32 %v4_a3d4, %arg3
  br i1 %v9_a3d8, label %dec_label_pc_a418, label %dec_label_pc_a3fc.preheader

dec_label_pc_a3fc.preheader:                      ; preds = %dec_label_pc_a3d4
  br label %dec_label_pc_a3fc

dec_label_pc_a3ec:                                ; preds = %dec_label_pc_a3fc
  %v1_a3ec = add i32 %v0_a3f4.in, 12
  %v2_a3ec = inttoptr i32 %v1_a3ec to i8*
  %v3_a3ec = load i8, i8* %v2_a3ec, align 1
  %v4_a3ec = zext i8 %v3_a3ec to i32
  %v9_a3f0 = icmp eq i32 %v4_a3ec, %arg3
  br i1 %v9_a3f0, label %dec_label_pc_a418, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3fc.preheader, %dec_label_pc_a3ec
  %v0_a3f4.in = phi i32 [ %v0_a3d4, %dec_label_pc_a3fc.preheader ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v0_a3fc = phi i32 [ 0, %dec_label_pc_a3fc.preheader ], [ %v1_a3fc, %dec_label_pc_a3ec ]
  %v0_a3f4 = add i32 %v0_a3f4.in, 8
  %v1_a3fc = add i32 %v0_a3fc, 1
  store i32 %v1_a3fc, i32* @lr, align 4
  %v9_a400 = icmp eq i32 %v1_a3fc, %arg1
  store i32 %v0_a3f4, i32* %r1.global-to-local, align 4
  br i1 %v9_a400, label %dec_label_pc_a40c, label %dec_label_pc_a3ec

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3fc, %dec_label_pc_a418, %dec_label_pc_a3c4, %dec_label_pc_a424
  %v2_a410 = phi i32 [ %v3_a3c8, %dec_label_pc_a418 ], [ %v3_a3c8, %dec_label_pc_a3c4 ], [ %v2_a410.pre, %dec_label_pc_a424 ], [ %v3_a3c8, %dec_label_pc_a3fc ]
  %v0_a40c = phi i32 [ %arg4, %dec_label_pc_a418 ], [ %arg4, %dec_label_pc_a3c4 ], [ %v1_a424, %dec_label_pc_a424 ], [ %arg4, %dec_label_pc_a3fc ]
  store i32 %v2_a410, i32* @r4, align 4
  store i32 %v6_a3c8, i32* @lr, align 4
  ret i32 %v0_a40c

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3ec, %dec_label_pc_a3d4
  %v0_a418 = phi i32 [ %v0_a3d4, %dec_label_pc_a3d4 ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v1_a418 = inttoptr i32 %v0_a418 to i32*
  %v2_a418 = load i32, i32* %v1_a418, align 4
  store i32 %v2_a418, i32* @r0, align 4
  %v2_a41c = icmp eq i32 %v2_a418, 0
  br i1 %v2_a41c, label %dec_label_pc_a40c, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a418
  %v1_a424 = call i32 @function_1537c(i32 %v2_a418)
  %v2_a410.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a40c

; uselistorder directives
  uselistorder i32 %v1_a3fc, { 1, 2, 0 }
  uselistorder i32 %v0_a3f4, { 1, 0, 2 }
  uselistorder i32 %v0_a3f4.in, { 1, 0 }
  uselistorder i32 %v0_a3d4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a40c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a3fc, { 1, 0 }
}

define i32 @function_a430(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a430:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a430 = icmp eq i32 %arg1, 0
  %v3_a434 = load i32, i32* @r4, align 4
  store i32 %v3_a434, i32* %stack_var_-8, align 4
  %v6_a434 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a430, label %dec_label_pc_a478, label %dec_label_pc_a440

dec_label_pc_a440:                                ; preds = %dec_label_pc_a430
  %v0_a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_a440 = add i32 %v0_a440, 4
  %v2_a440 = inttoptr i32 %v1_a440 to i8*
  %v3_a440 = load i8, i8* %v2_a440, align 1
  %v4_a440 = zext i8 %v3_a440 to i32
  %v9_a444 = icmp eq i32 %v4_a440, %arg3
  br i1 %v9_a444, label %dec_label_pc_a484, label %dec_label_pc_a468.preheader

dec_label_pc_a468.preheader:                      ; preds = %dec_label_pc_a440
  br label %dec_label_pc_a468

dec_label_pc_a458:                                ; preds = %dec_label_pc_a468
  %v1_a458 = add i32 %v0_a460.in, 12
  %v2_a458 = inttoptr i32 %v1_a458 to i8*
  %v3_a458 = load i8, i8* %v2_a458, align 1
  %v4_a458 = zext i8 %v3_a458 to i32
  %v9_a45c = icmp eq i32 %v4_a458, %arg3
  br i1 %v9_a45c, label %dec_label_pc_a484, label %dec_label_pc_a468

dec_label_pc_a468:                                ; preds = %dec_label_pc_a468.preheader, %dec_label_pc_a458
  %v0_a460.in = phi i32 [ %v0_a440, %dec_label_pc_a468.preheader ], [ %v0_a460, %dec_label_pc_a458 ]
  %v0_a468 = phi i32 [ 0, %dec_label_pc_a468.preheader ], [ %v1_a468, %dec_label_pc_a458 ]
  %v0_a460 = add i32 %v0_a460.in, 8
  %v1_a468 = add i32 %v0_a468, 1
  store i32 %v1_a468, i32* @lr, align 4
  %v9_a46c = icmp eq i32 %v1_a468, %arg1
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  br i1 %v9_a46c, label %dec_label_pc_a478, label %dec_label_pc_a458

dec_label_pc_a478:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a484, %dec_label_pc_a430, %dec_label_pc_a490
  %v2_a47c = phi i32 [ %v3_a434, %dec_label_pc_a484 ], [ %v3_a434, %dec_label_pc_a430 ], [ %v2_a47c.pre, %dec_label_pc_a490 ], [ %v3_a434, %dec_label_pc_a468 ]
  %v0_a478 = phi i32 [ %arg4, %dec_label_pc_a484 ], [ %arg4, %dec_label_pc_a430 ], [ %v3_a494, %dec_label_pc_a490 ], [ %arg4, %dec_label_pc_a468 ]
  store i32 %v2_a47c, i32* @r4, align 4
  store i32 %v6_a434, i32* @lr, align 4
  ret i32 %v0_a478

dec_label_pc_a484:                                ; preds = %dec_label_pc_a458, %dec_label_pc_a440
  %v0_a484 = phi i32 [ %v0_a440, %dec_label_pc_a440 ], [ %v0_a460, %dec_label_pc_a458 ]
  %v1_a484 = inttoptr i32 %v0_a484 to i32*
  %v2_a484 = load i32, i32* %v1_a484, align 4
  %v2_a488 = icmp eq i32 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a478, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a484
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a494 = inttoptr i32 %v2_a484 to i8*
  %v3_a494 = call i32 @function_12f64(i8* %v2_a494, i32 10)
  %v2_a47c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a478

; uselistorder directives
  uselistorder i32 %v1_a468, { 1, 2, 0 }
  uselistorder i32 %v0_a460, { 1, 0, 2 }
  uselistorder i32 %v0_a460.in, { 1, 0 }
  uselistorder i32 %v0_a440, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a478, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a468, { 1, 0 }
}

define i32 @function_a4a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a4a0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a4b0 = call i32 @function_13d28(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_23074.53 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23078.55 to i32), i32* @r6, align 4
  store i32 54852, i32* %r2.global-to-local, align 4
  store i32 %v2_a4b0, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23075.70 to i32), i32* %r1.global-to-local, align 4
  %v2_a4d0 = load i32, i32* @global_var_23078.55, align 4
  %v2_a4d4 = inttoptr i32 %v2_a4b0 to i32*
  store i32 54852, i32* %v2_a4d4, align 4
  %v3_a4d8 = load i32, i32* @r5, align 4
  %v4_a4d8 = add i32 %v3_a4d8, 4
  %v5_a4d8 = inttoptr i32 %v4_a4d8 to i8*
  store i8 0, i8* %v5_a4d8, align 1
  %v0_a4dc = load i32, i32* %r1.global-to-local, align 4
  %v3_a4dc = mul i32 %v0_a4dc, 4
  store i32 %v3_a4dc, i32* %r1.global-to-local, align 4
  %v5_a4e0 = call i32 @function_14ee4(i32 %v2_a4d0, i32 %v3_a4dc, i32 54852, i32 0)
  %v2_a4e4 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a4e4 = zext i8 %v2_a4e4 to i32
  store i32 %v5_a4e0, i32* %r2.global-to-local, align 4
  %v0_a4ec = load i32, i32* @r5, align 4
  %v5_a4ec = mul nuw nsw i32 %v3_a4e4, 4
  %v6_a4ec = add i32 %v5_a4ec, %v5_a4e0
  %v7_a4ec = inttoptr i32 %v6_a4ec to i32*
  store i32 %v0_a4ec, i32* %v7_a4ec, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23075.70 to i32), i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r6, align 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  store i32 %v5_a4e0, i32* %v2_a4fc, align 4
  %v0_a500 = load i32, i32* %r3.global-to-local, align 4
  %v1_a500 = trunc i32 %v0_a500 to i8
  %v2_a500 = load i32, i32* @r4, align 4
  %v3_a500 = inttoptr i32 %v2_a500 to i8*
  store i8 %v1_a500, i8* %v3_a500, align 1
  %v2_a504 = call i32 @function_13d28(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_daec.72 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_a504, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_23075.70 to i32), i32* %r1.global-to-local, align 4
  %v2_a51c = load i32, i32* @global_var_23078.55, align 4
  %v2_a520 = inttoptr i32 %v2_a504 to i32*
  store i32 ptrtoint (i32* @global_var_daec.72 to i32), i32* %v2_a520, align 4
  %v0_a524 = load i32, i32* @r7, align 4
  %v1_a524 = trunc i32 %v0_a524 to i8
  %v2_a524 = load i32, i32* @r5, align 4
  %v3_a524 = add i32 %v2_a524, 4
  %v4_a524 = inttoptr i32 %v3_a524 to i8*
  store i8 %v1_a524, i8* %v4_a524, align 1
  %v0_a528 = load i32, i32* %r1.global-to-local, align 4
  %v3_a528 = mul i32 %v0_a528, 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v4_a52c = call i32 @function_14ee4(i32 %v2_a51c, i32 %v3_a528, i32 %v5_a4e0, i32 ptrtoint (i32* @global_var_daec.72 to i32))
  %v2_a530 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a530 = zext i8 %v2_a530 to i32
  store i32 %v3_a530, i32* %r3.global-to-local, align 4
  store i32 %v4_a52c, i32* %r2.global-to-local, align 4
  %v0_a538 = load i32, i32* @r5, align 4
  %v5_a538 = mul nuw nsw i32 %v3_a530, 4
  %v6_a538 = add i32 %v5_a538, %v4_a52c
  %v7_a538 = inttoptr i32 %v6_a538 to i32*
  store i32 %v0_a538, i32* %v7_a538, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a540 = load i32, i32* %r3.global-to-local, align 4
  %v1_a540 = load i32, i32* @r7, align 4
  %v2_a540 = add i32 %v1_a540, %v0_a540
  store i32 %v2_a540, i32* %r3.global-to-local, align 4
  %v1_a548 = trunc i32 %v2_a540 to i8
  %v2_a548 = load i32, i32* @r4, align 4
  %v3_a548 = inttoptr i32 %v2_a548 to i8*
  store i8 %v1_a548, i8* %v3_a548, align 1
  %v0_a54c = load i32, i32* %r2.global-to-local, align 4
  %v1_a54c = load i32, i32* @r6, align 4
  %v2_a54c = inttoptr i32 %v1_a54c to i32*
  store i32 %v0_a54c, i32* %v2_a54c, align 4
  %v2_a550 = call i32 @function_13d28(i32 %v1_a540, i32 8)
  %v2_a554 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a554 = zext i8 %v2_a554 to i32
  store i32 ptrtoint (i32* @global_var_def8.74 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a550, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a564 = load i32, i32* @r7, align 4
  %v2_a564 = add i32 %v1_a564, %v3_a554
  store i32 %v2_a564, i32* %r1.global-to-local, align 4
  %v2_a568 = load i32, i32* @global_var_23078.55, align 4
  %v2_a56c = inttoptr i32 %v2_a550 to i32*
  store i32 ptrtoint (i32* @global_var_def8.74 to i32), i32* %v2_a56c, align 4
  %v3_a570 = load i32, i32* @r5, align 4
  %v4_a570 = add i32 %v3_a570, 4
  %v5_a570 = inttoptr i32 %v4_a570 to i8*
  store i8 2, i8* %v5_a570, align 1
  %v0_a574 = load i32, i32* %r1.global-to-local, align 4
  %v3_a574 = mul i32 %v0_a574, 4
  store i32 %v3_a574, i32* %r1.global-to-local, align 4
  %v5_a578 = call i32 @function_14ee4(i32 %v2_a568, i32 %v3_a574, i32 ptrtoint (i32* @global_var_def8.74 to i32), i32 2)
  %v2_a57c = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a57c = zext i8 %v2_a57c to i32
  store i32 %v3_a57c, i32* %r3.global-to-local, align 4
  store i32 %v5_a578, i32* %r2.global-to-local, align 4
  %v0_a584 = load i32, i32* @r5, align 4
  %v5_a584 = mul nuw nsw i32 %v3_a57c, 4
  %v6_a584 = add i32 %v5_a584, %v5_a578
  %v7_a584 = inttoptr i32 %v6_a584 to i32*
  store i32 %v0_a584, i32* %v7_a584, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a58c = load i32, i32* %r3.global-to-local, align 4
  %v1_a58c = load i32, i32* @r7, align 4
  %v2_a58c = add i32 %v1_a58c, %v0_a58c
  store i32 %v2_a58c, i32* %r3.global-to-local, align 4
  %v1_a594 = trunc i32 %v2_a58c to i8
  %v2_a594 = load i32, i32* @r4, align 4
  %v3_a594 = inttoptr i32 %v2_a594 to i8*
  store i8 %v1_a594, i8* %v3_a594, align 1
  %v0_a598 = load i32, i32* %r2.global-to-local, align 4
  %v1_a598 = load i32, i32* @r6, align 4
  %v2_a598 = inttoptr i32 %v1_a598 to i32*
  store i32 %v0_a598, i32* %v2_a598, align 4
  %v2_a59c = call i32 @function_13d28(i32 %v1_a58c, i32 8)
  %v2_a5a0 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a5a0 = zext i8 %v2_a5a0 to i32
  store i32 ptrtoint (i32* @global_var_d124.76 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a59c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a5b0 = load i32, i32* @r7, align 4
  %v2_a5b0 = add i32 %v1_a5b0, %v3_a5a0
  store i32 %v2_a5b0, i32* %r1.global-to-local, align 4
  %v2_a5b4 = load i32, i32* @global_var_23078.55, align 4
  %v2_a5b8 = inttoptr i32 %v2_a59c to i32*
  store i32 ptrtoint (i32* @global_var_d124.76 to i32), i32* %v2_a5b8, align 4
  %v3_a5bc = load i32, i32* @r5, align 4
  %v4_a5bc = add i32 %v3_a5bc, 4
  %v5_a5bc = inttoptr i32 %v4_a5bc to i8*
  store i8 9, i8* %v5_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c0 = mul i32 %v0_a5c0, 4
  store i32 %v3_a5c0, i32* %r1.global-to-local, align 4
  %v5_a5c4 = call i32 @function_14ee4(i32 %v2_a5b4, i32 %v3_a5c0, i32 ptrtoint (i32* @global_var_d124.76 to i32), i32 9)
  %v2_a5c8 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a5c8 = zext i8 %v2_a5c8 to i32
  store i32 %v3_a5c8, i32* %r3.global-to-local, align 4
  store i32 %v5_a5c4, i32* %r2.global-to-local, align 4
  %v0_a5d0 = load i32, i32* @r5, align 4
  %v5_a5d0 = mul nuw nsw i32 %v3_a5c8, 4
  %v6_a5d0 = add i32 %v5_a5d0, %v5_a5c4
  %v7_a5d0 = inttoptr i32 %v6_a5d0 to i32*
  store i32 %v0_a5d0, i32* %v7_a5d0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5d8 = load i32, i32* @r7, align 4
  %v2_a5d8 = add i32 %v1_a5d8, %v0_a5d8
  store i32 %v2_a5d8, i32* %r3.global-to-local, align 4
  %v1_a5e0 = trunc i32 %v2_a5d8 to i8
  %v2_a5e0 = load i32, i32* @r4, align 4
  %v3_a5e0 = inttoptr i32 %v2_a5e0 to i8*
  store i8 %v1_a5e0, i8* %v3_a5e0, align 1
  %v0_a5e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5e4 = load i32, i32* @r6, align 4
  %v2_a5e4 = inttoptr i32 %v1_a5e4 to i32*
  store i32 %v0_a5e4, i32* %v2_a5e4, align 4
  %v2_a5e8 = call i32 @function_13d28(i32 %v1_a5d8, i32 8)
  %v2_a5ec = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a5ec = zext i8 %v2_a5ec to i32
  store i32 54196, i32* %r2.global-to-local, align 4
  store i32 %v2_a5e8, i32* @r5, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v1_a5fc = load i32, i32* @r7, align 4
  %v2_a5fc = add i32 %v1_a5fc, %v3_a5ec
  store i32 %v2_a5fc, i32* %r1.global-to-local, align 4
  %v2_a600 = load i32, i32* @global_var_23078.55, align 4
  %v2_a604 = inttoptr i32 %v2_a5e8 to i32*
  store i32 54196, i32* %v2_a604, align 4
  %v3_a608 = load i32, i32* @r5, align 4
  %v4_a608 = add i32 %v3_a608, 4
  %v5_a608 = inttoptr i32 %v4_a608 to i8*
  store i8 12, i8* %v5_a608, align 1
  %v0_a60c = load i32, i32* %r1.global-to-local, align 4
  %v3_a60c = mul i32 %v0_a60c, 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v5_a610 = call i32 @function_14ee4(i32 %v2_a600, i32 %v3_a60c, i32 54196, i32 12)
  %v2_a614 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a614 = zext i8 %v2_a614 to i32
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  store i32 %v5_a610, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* @r5, align 4
  %v5_a61c = mul nuw nsw i32 %v3_a614, 4
  %v6_a61c = add i32 %v5_a61c, %v5_a610
  %v7_a61c = inttoptr i32 %v6_a61c to i32*
  store i32 %v0_a61c, i32* %v7_a61c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = load i32, i32* @r7, align 4
  %v2_a624 = add i32 %v1_a624, %v0_a624
  store i32 %v2_a624, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v2_a624 to i8
  %v2_a62c = load i32, i32* @r4, align 4
  %v3_a62c = inttoptr i32 %v2_a62c to i8*
  store i8 %v1_a62c, i8* %v3_a62c, align 1
  %v0_a630 = load i32, i32* %r2.global-to-local, align 4
  %v1_a630 = load i32, i32* @r6, align 4
  %v2_a630 = inttoptr i32 %v1_a630 to i32*
  store i32 %v0_a630, i32* %v2_a630, align 4
  %v2_a634 = call i32 @function_13d28(i32 %v1_a624, i32 8)
  %v2_a638 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a638 = zext i8 %v2_a638 to i32
  store i32 ptrtoint (i32* @global_var_caa8.79 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a634, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a648 = load i32, i32* @r7, align 4
  %v2_a648 = add i32 %v1_a648, %v3_a638
  store i32 %v2_a648, i32* %r1.global-to-local, align 4
  %v2_a64c = load i32, i32* @global_var_23078.55, align 4
  %v2_a650 = inttoptr i32 %v2_a634 to i32*
  store i32 ptrtoint (i32* @global_var_caa8.79 to i32), i32* %v2_a650, align 4
  %v3_a654 = load i32, i32* @r5, align 4
  %v4_a654 = add i32 %v3_a654, 4
  %v5_a654 = inttoptr i32 %v4_a654 to i8*
  store i8 3, i8* %v5_a654, align 1
  %v0_a658 = load i32, i32* %r1.global-to-local, align 4
  %v3_a658 = mul i32 %v0_a658, 4
  store i32 %v3_a658, i32* %r1.global-to-local, align 4
  %v5_a65c = call i32 @function_14ee4(i32 %v2_a64c, i32 %v3_a658, i32 ptrtoint (i32* @global_var_caa8.79 to i32), i32 3)
  %v2_a660 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a660 = zext i8 %v2_a660 to i32
  store i32 %v3_a660, i32* %r3.global-to-local, align 4
  store i32 %v5_a65c, i32* %r2.global-to-local, align 4
  %v0_a668 = load i32, i32* @r5, align 4
  %v5_a668 = mul nuw nsw i32 %v3_a660, 4
  %v6_a668 = add i32 %v5_a668, %v5_a65c
  %v7_a668 = inttoptr i32 %v6_a668 to i32*
  store i32 %v0_a668, i32* %v7_a668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a670 = load i32, i32* %r3.global-to-local, align 4
  %v1_a670 = load i32, i32* @r7, align 4
  %v2_a670 = add i32 %v1_a670, %v0_a670
  store i32 %v2_a670, i32* %r3.global-to-local, align 4
  %v1_a678 = trunc i32 %v2_a670 to i8
  %v2_a678 = load i32, i32* @r4, align 4
  %v3_a678 = inttoptr i32 %v2_a678 to i8*
  store i8 %v1_a678, i8* %v3_a678, align 1
  %v0_a67c = load i32, i32* %r2.global-to-local, align 4
  %v1_a67c = load i32, i32* @r6, align 4
  %v2_a67c = inttoptr i32 %v1_a67c to i32*
  store i32 %v0_a67c, i32* %v2_a67c, align 4
  %v2_a680 = call i32 @function_13d28(i32 %v1_a670, i32 8)
  %v2_a684 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a684 = zext i8 %v2_a684 to i32
  store i32 ptrtoint (i32* @global_var_c3f0.81 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a680, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a694 = load i32, i32* @r7, align 4
  %v2_a694 = add i32 %v1_a694, %v3_a684
  store i32 %v2_a694, i32* %r1.global-to-local, align 4
  %v2_a698 = load i32, i32* @global_var_23078.55, align 4
  %v2_a69c = inttoptr i32 %v2_a680 to i32*
  store i32 ptrtoint (i32* @global_var_c3f0.81 to i32), i32* %v2_a69c, align 4
  %v3_a6a0 = load i32, i32* @r5, align 4
  %v4_a6a0 = add i32 %v3_a6a0, 4
  %v5_a6a0 = inttoptr i32 %v4_a6a0 to i8*
  store i8 4, i8* %v5_a6a0, align 1
  %v0_a6a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6a4 = mul i32 %v0_a6a4, 4
  store i32 %v3_a6a4, i32* %r1.global-to-local, align 4
  %v5_a6a8 = call i32 @function_14ee4(i32 %v2_a698, i32 %v3_a6a4, i32 ptrtoint (i32* @global_var_c3f0.81 to i32), i32 4)
  %v2_a6ac = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a6ac = zext i8 %v2_a6ac to i32
  store i32 %v3_a6ac, i32* %r3.global-to-local, align 4
  store i32 %v5_a6a8, i32* %r2.global-to-local, align 4
  %v0_a6b4 = load i32, i32* @r5, align 4
  %v5_a6b4 = mul nuw nsw i32 %v3_a6ac, 4
  %v6_a6b4 = add i32 %v5_a6b4, %v5_a6a8
  %v7_a6b4 = inttoptr i32 %v6_a6b4 to i32*
  store i32 %v0_a6b4, i32* %v7_a6b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_a6bc = load i32, i32* @r7, align 4
  %v2_a6bc = add i32 %v1_a6bc, %v0_a6bc
  store i32 %v2_a6bc, i32* %r3.global-to-local, align 4
  %v1_a6c4 = trunc i32 %v2_a6bc to i8
  %v2_a6c4 = load i32, i32* @r4, align 4
  %v3_a6c4 = inttoptr i32 %v2_a6c4 to i8*
  store i8 %v1_a6c4, i8* %v3_a6c4, align 1
  %v0_a6c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6c8 = load i32, i32* @r6, align 4
  %v2_a6c8 = inttoptr i32 %v1_a6c8 to i32*
  store i32 %v0_a6c8, i32* %v2_a6c8, align 4
  %v2_a6cc = call i32 @function_13d28(i32 %v1_a6bc, i32 8)
  %v2_a6d0 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a6d0 = zext i8 %v2_a6d0 to i32
  store i32 ptrtoint (i32* @global_var_b4c0.83 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6cc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a6e0 = load i32, i32* @r7, align 4
  %v2_a6e0 = add i32 %v1_a6e0, %v3_a6d0
  store i32 %v2_a6e0, i32* %r1.global-to-local, align 4
  %v2_a6e4 = load i32, i32* @global_var_23078.55, align 4
  %v2_a6e8 = inttoptr i32 %v2_a6cc to i32*
  store i32 ptrtoint (i32* @global_var_b4c0.83 to i32), i32* %v2_a6e8, align 4
  %v3_a6ec = load i32, i32* @r5, align 4
  %v4_a6ec = add i32 %v3_a6ec, 4
  %v5_a6ec = inttoptr i32 %v4_a6ec to i8*
  store i8 5, i8* %v5_a6ec, align 1
  %v0_a6f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6f0 = mul i32 %v0_a6f0, 4
  store i32 %v3_a6f0, i32* %r1.global-to-local, align 4
  %v5_a6f4 = call i32 @function_14ee4(i32 %v2_a6e4, i32 %v3_a6f0, i32 ptrtoint (i32* @global_var_b4c0.83 to i32), i32 5)
  %v2_a6f8 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a6f8 = zext i8 %v2_a6f8 to i32
  store i32 %v3_a6f8, i32* %r3.global-to-local, align 4
  store i32 %v5_a6f4, i32* %r2.global-to-local, align 4
  %v0_a700 = load i32, i32* @r5, align 4
  %v5_a700 = mul nuw nsw i32 %v3_a6f8, 4
  %v6_a700 = add i32 %v5_a700, %v5_a6f4
  %v7_a700 = inttoptr i32 %v6_a700 to i32*
  store i32 %v0_a700, i32* %v7_a700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a708 = load i32, i32* %r3.global-to-local, align 4
  %v1_a708 = load i32, i32* @r7, align 4
  %v2_a708 = add i32 %v1_a708, %v0_a708
  store i32 %v2_a708, i32* %r3.global-to-local, align 4
  %v1_a710 = trunc i32 %v2_a708 to i8
  %v2_a710 = load i32, i32* @r4, align 4
  %v3_a710 = inttoptr i32 %v2_a710 to i8*
  store i8 %v1_a710, i8* %v3_a710, align 1
  %v0_a714 = load i32, i32* %r2.global-to-local, align 4
  %v1_a714 = load i32, i32* @r6, align 4
  %v2_a714 = inttoptr i32 %v1_a714 to i32*
  store i32 %v0_a714, i32* %v2_a714, align 4
  %v2_a718 = call i32 @function_13d28(i32 %v1_a708, i32 8)
  %v2_a71c = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a71c = zext i8 %v2_a71c to i32
  store i32 ptrtoint (i32* @global_var_bc58.85 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a718, i32* @r5, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v1_a72c = load i32, i32* @r7, align 4
  %v2_a72c = add i32 %v1_a72c, %v3_a71c
  store i32 %v2_a72c, i32* %r1.global-to-local, align 4
  %v2_a730 = load i32, i32* @global_var_23078.55, align 4
  %v2_a734 = inttoptr i32 %v2_a718 to i32*
  store i32 ptrtoint (i32* @global_var_bc58.85 to i32), i32* %v2_a734, align 4
  %v3_a738 = load i32, i32* @r5, align 4
  %v4_a738 = add i32 %v3_a738, 4
  %v5_a738 = inttoptr i32 %v4_a738 to i8*
  store i8 11, i8* %v5_a738, align 1
  %v0_a73c = load i32, i32* %r1.global-to-local, align 4
  %v3_a73c = mul i32 %v0_a73c, 4
  store i32 %v3_a73c, i32* %r1.global-to-local, align 4
  %v5_a740 = call i32 @function_14ee4(i32 %v2_a730, i32 %v3_a73c, i32 ptrtoint (i32* @global_var_bc58.85 to i32), i32 11)
  %v2_a744 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a744 = zext i8 %v2_a744 to i32
  store i32 %v3_a744, i32* %r3.global-to-local, align 4
  store i32 %v5_a740, i32* %r2.global-to-local, align 4
  %v0_a74c = load i32, i32* @r5, align 4
  %v5_a74c = mul nuw nsw i32 %v3_a744, 4
  %v6_a74c = add i32 %v5_a74c, %v5_a740
  %v7_a74c = inttoptr i32 %v6_a74c to i32*
  store i32 %v0_a74c, i32* %v7_a74c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* %r3.global-to-local, align 4
  %v1_a754 = load i32, i32* @r7, align 4
  %v2_a754 = add i32 %v1_a754, %v0_a754
  store i32 %v2_a754, i32* %r3.global-to-local, align 4
  %v1_a75c = trunc i32 %v2_a754 to i8
  %v2_a75c = load i32, i32* @r4, align 4
  %v3_a75c = inttoptr i32 %v2_a75c to i8*
  store i8 %v1_a75c, i8* %v3_a75c, align 1
  %v0_a760 = load i32, i32* %r2.global-to-local, align 4
  %v1_a760 = load i32, i32* @r6, align 4
  %v2_a760 = inttoptr i32 %v1_a760 to i32*
  store i32 %v0_a760, i32* %v2_a760, align 4
  %v2_a764 = call i32 @function_13d28(i32 %v1_a754, i32 8)
  %v2_a768 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a768 = zext i8 %v2_a768 to i32
  store i32 ptrtoint (i32* @global_var_aee0.87 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a764, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a778 = load i32, i32* @r7, align 4
  %v2_a778 = add i32 %v1_a778, %v3_a768
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v2_a77c = load i32, i32* @global_var_23078.55, align 4
  %v2_a780 = inttoptr i32 %v2_a764 to i32*
  store i32 ptrtoint (i32* @global_var_aee0.87 to i32), i32* %v2_a780, align 4
  %v3_a784 = load i32, i32* @r5, align 4
  %v4_a784 = add i32 %v3_a784, 4
  %v5_a784 = inttoptr i32 %v4_a784 to i8*
  store i8 6, i8* %v5_a784, align 1
  %v0_a788 = load i32, i32* %r1.global-to-local, align 4
  %v3_a788 = mul i32 %v0_a788, 4
  store i32 %v3_a788, i32* %r1.global-to-local, align 4
  %v5_a78c = call i32 @function_14ee4(i32 %v2_a77c, i32 %v3_a788, i32 ptrtoint (i32* @global_var_aee0.87 to i32), i32 6)
  %v2_a790 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a790 = zext i8 %v2_a790 to i32
  store i32 %v3_a790, i32* %r3.global-to-local, align 4
  store i32 %v5_a78c, i32* %r2.global-to-local, align 4
  %v0_a798 = load i32, i32* @r5, align 4
  %v5_a798 = mul nuw nsw i32 %v3_a790, 4
  %v6_a798 = add i32 %v5_a798, %v5_a78c
  %v7_a798 = inttoptr i32 %v6_a798 to i32*
  store i32 %v0_a798, i32* %v7_a798, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a7a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7a0 = load i32, i32* @r7, align 4
  %v2_a7a0 = add i32 %v1_a7a0, %v0_a7a0
  store i32 %v2_a7a0, i32* %r3.global-to-local, align 4
  %v1_a7a8 = trunc i32 %v2_a7a0 to i8
  %v2_a7a8 = load i32, i32* @r4, align 4
  %v3_a7a8 = inttoptr i32 %v2_a7a8 to i8*
  store i8 %v1_a7a8, i8* %v3_a7a8, align 1
  %v0_a7ac = load i32, i32* %r2.global-to-local, align 4
  %v1_a7ac = load i32, i32* @r6, align 4
  %v2_a7ac = inttoptr i32 %v1_a7ac to i32*
  store i32 %v0_a7ac, i32* %v2_a7ac, align 4
  %v2_a7b0 = call i32 @function_13d28(i32 %v1_a7a0, i32 8)
  %v2_a7b4 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a7b4 = zext i8 %v2_a7b4 to i32
  store i32 ptrtoint (i32* @global_var_a884.89 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a7b0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a7c4 = load i32, i32* @r7, align 4
  %v2_a7c4 = add i32 %v1_a7c4, %v3_a7b4
  store i32 %v2_a7c4, i32* %r1.global-to-local, align 4
  %v2_a7c8 = load i32, i32* @global_var_23078.55, align 4
  %v2_a7cc = inttoptr i32 %v2_a7b0 to i32*
  store i32 ptrtoint (i32* @global_var_a884.89 to i32), i32* %v2_a7cc, align 4
  %v3_a7d0 = load i32, i32* @r5, align 4
  %v4_a7d0 = add i32 %v3_a7d0, 4
  %v5_a7d0 = inttoptr i32 %v4_a7d0 to i8*
  store i8 7, i8* %v5_a7d0, align 1
  %v0_a7d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a7d4 = mul i32 %v0_a7d4, 4
  store i32 %v3_a7d4, i32* %r1.global-to-local, align 4
  %v5_a7d8 = call i32 @function_14ee4(i32 %v2_a7c8, i32 %v3_a7d4, i32 ptrtoint (i32* @global_var_a884.89 to i32), i32 7)
  %v2_a7dc = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a7dc = zext i8 %v2_a7dc to i32
  store i32 %v3_a7dc, i32* %r3.global-to-local, align 4
  store i32 %v5_a7d8, i32* %r2.global-to-local, align 4
  %v0_a7e4 = load i32, i32* @r5, align 4
  %v5_a7e4 = mul nuw nsw i32 %v3_a7dc, 4
  %v6_a7e4 = add i32 %v5_a7e4, %v5_a7d8
  %v7_a7e4 = inttoptr i32 %v6_a7e4 to i32*
  store i32 %v0_a7e4, i32* %v7_a7e4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a7ec = load i32, i32* %r3.global-to-local, align 4
  %v1_a7ec = load i32, i32* @r7, align 4
  %v2_a7ec = add i32 %v1_a7ec, %v0_a7ec
  store i32 %v2_a7ec, i32* %r3.global-to-local, align 4
  %v1_a7f4 = trunc i32 %v2_a7ec to i8
  %v2_a7f4 = load i32, i32* @r4, align 4
  %v3_a7f4 = inttoptr i32 %v2_a7f4 to i8*
  store i8 %v1_a7f4, i8* %v3_a7f4, align 1
  %v0_a7f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a7f8 = load i32, i32* @r6, align 4
  %v2_a7f8 = inttoptr i32 %v1_a7f8 to i32*
  store i32 %v0_a7f8, i32* %v2_a7f8, align 4
  %v2_a7fc = call i32 @function_13d28(i32 %v1_a7ec, i32 8)
  %v2_a800 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a800 = zext i8 %v2_a800 to i32
  store i32 ptrtoint (i32* @global_var_81cc.91 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a7fc, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a810 = load i32, i32* @r7, align 4
  %v2_a810 = add i32 %v1_a810, %v3_a800
  store i32 %v2_a810, i32* %r1.global-to-local, align 4
  %v2_a814 = load i32, i32* @global_var_23078.55, align 4
  %v2_a818 = inttoptr i32 %v2_a7fc to i32*
  store i32 ptrtoint (i32* @global_var_81cc.91 to i32), i32* %v2_a818, align 4
  %v3_a81c = load i32, i32* @r5, align 4
  %v4_a81c = add i32 %v3_a81c, 4
  %v5_a81c = inttoptr i32 %v4_a81c to i8*
  store i8 10, i8* %v5_a81c, align 1
  %v0_a820 = load i32, i32* %r1.global-to-local, align 4
  %v3_a820 = mul i32 %v0_a820, 4
  store i32 %v3_a820, i32* %r1.global-to-local, align 4
  %v5_a824 = call i32 @function_14ee4(i32 %v2_a814, i32 %v3_a820, i32 ptrtoint (i32* @global_var_81cc.91 to i32), i32 10)
  %v2_a828 = load i8, i8* bitcast (i8** @global_var_23074.53 to i8*), align 4
  %v3_a828 = zext i8 %v2_a828 to i32
  store i32 %v3_a828, i32* %r3.global-to-local, align 4
  %v1_a82c = load i32, i32* @r6, align 4
  %v2_a82c = inttoptr i32 %v1_a82c to i32*
  store i32 %v5_a824, i32* %v2_a82c, align 4
  %v0_a830 = load i32, i32* @r5, align 4
  %v2_a830 = load i32, i32* %r3.global-to-local, align 4
  %v5_a830 = mul i32 %v2_a830, 4
  %v6_a830 = add i32 %v5_a830, %v5_a824
  %v7_a830 = inttoptr i32 %v6_a830 to i32*
  store i32 %v0_a830, i32* %v7_a830, align 4
  %v0_a834 = load i32, i32* %r3.global-to-local, align 4
  %v1_a834 = load i32, i32* @r7, align 4
  %v2_a834 = add i32 %v1_a834, %v0_a834
  store i32 %v2_a834, i32* %r2.global-to-local, align 4
  %v1_a83c = trunc i32 %v2_a834 to i8
  %v2_a83c = load i32, i32* @r4, align 4
  %v3_a83c = inttoptr i32 %v2_a83c to i8*
  store i8 %v1_a83c, i8* %v3_a83c, align 1
  ret i32 %v1_a834

; uselistorder directives
  uselistorder i32 %v1_a834, { 1, 0 }
  uselistorder i32 %v3_a820, { 1, 0 }
  uselistorder i32 %v1_a7ec, { 1, 0 }
  uselistorder i32 %v3_a7d4, { 1, 0 }
  uselistorder i32 %v1_a7a0, { 1, 0 }
  uselistorder i32 %v3_a788, { 1, 0 }
  uselistorder i32 %v1_a754, { 1, 0 }
  uselistorder i32 %v3_a73c, { 1, 0 }
  uselistorder i32 %v1_a708, { 1, 0 }
  uselistorder i32 %v3_a6f0, { 1, 0 }
  uselistorder i32 %v1_a6bc, { 1, 0 }
  uselistorder i32 %v3_a6a4, { 1, 0 }
  uselistorder i32 %v1_a670, { 1, 0 }
  uselistorder i32 %v3_a658, { 1, 0 }
  uselistorder i32 %v1_a624, { 1, 0 }
  uselistorder i32 %v3_a60c, { 1, 0 }
  uselistorder i32 %v1_a5d8, { 1, 0 }
  uselistorder i32 %v3_a5c0, { 1, 0 }
  uselistorder i32 %v1_a58c, { 1, 0 }
  uselistorder i32 %v3_a574, { 1, 0 }
  uselistorder i32 %v1_a540, { 1, 0 }
  uselistorder i32 %v3_a528, { 1, 0 }
  uselistorder i32 %v2_a504, { 1, 0 }
  uselistorder i32 %v5_a4e0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a4dc, { 1, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 11, { 1, 0 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23074.53 to i8*), { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_23075.70 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_23078.55, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
}

define i32 @function_a884(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a884:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a884 = load i32, i32* @r4, align 4
  %v24_a884 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_a8a0 = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_a8a4 = load i32, i32* @r5, align 4
  store i32 %v0_a8a4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8b4 = load i32, i32* @r4, align 4
  store i32 %v0_a8b4, i32* %r0.global-to-local, align 4
  %v5_a8b8 = inttoptr i32 %v0_a8a4 to i32*
  %v6_a8b8 = call i32 @function_a430(i32 %v0_a8b4, i32* %v5_a8b8, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a8d0 = load i32, i32* @r5, align 4
  store i32 %v0_a8d0, i32* %r1.global-to-local, align 4
  %v0_a8d4 = load i32, i32* @r4, align 4
  store i32 %v0_a8d4, i32* %r0.global-to-local, align 4
  %v5_a8d8 = trunc i32 %v6_a8b8 to i8
  %v6_a8dc = inttoptr i32 %v0_a8d0 to i32*
  %v7_a8dc = call i32 @function_a430(i32 %v0_a8d4, i32* %v6_a8dc, i32 3, i32 65535)
  %v0_a8e0 = load i32, i32* @r5, align 4
  store i32 %v0_a8e0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a8dc, i32* %fp.global-to-local, align 4
  %v0_a8f0 = load i32, i32* @r4, align 4
  store i32 %v0_a8f0, i32* %r0.global-to-local, align 4
  %v4_a8f4 = inttoptr i32 %v0_a8e0 to i32*
  %v5_a8f4 = call i32 @function_a430(i32 %v0_a8f0, i32* %v4_a8f4, i32 4, i32 64)
  %v0_a900 = load i32, i32* @r5, align 4
  store i32 %v0_a900, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a90c = load i32, i32* @r4, align 4
  store i32 %v0_a90c, i32* %r0.global-to-local, align 4
  %v6_a914 = inttoptr i32 %v0_a900 to i32*
  %v7_a914 = call i32 @function_a430(i32 %v0_a90c, i32* %v6_a914, i32 5, i32 1)
  %v1_a920 = urem i32 %v7_a914, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a92c = load i32, i32* @r5, align 4
  store i32 %v0_a92c, i32* %r1.global-to-local, align 4
  %v0_a930 = load i32, i32* @r4, align 4
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v5_a938 = inttoptr i32 %v0_a92c to i32*
  %v6_a938 = call i32 @function_a430(i32 %v0_a930, i32* %v5_a938, i32 6, i32 65535)
  %v0_a940 = load i32, i32* @r5, align 4
  store i32 %v0_a940, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a938, i32* @r8, align 4
  %v0_a950 = load i32, i32* @r4, align 4
  store i32 %v0_a950, i32* %r0.global-to-local, align 4
  %v4_a954 = inttoptr i32 %v0_a940 to i32*
  %v5_a954 = call i32 @function_a430(i32 %v0_a950, i32* %v4_a954, i32 7, i32 65535)
  %v0_a958 = load i32, i32* @r5, align 4
  store i32 %v0_a958, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a954, i32* @r7, align 4
  %v0_a968 = load i32, i32* @r4, align 4
  store i32 %v0_a968, i32* %r0.global-to-local, align 4
  %v4_a96c = inttoptr i32 %v0_a958 to i32*
  %v5_a96c = call i32 @function_a430(i32 %v0_a968, i32* %v4_a96c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a97c = load i32, i32* @r5, align 4
  store i32 %v0_a97c, i32* %r1.global-to-local, align 4
  %v0_a980 = load i32, i32* @r4, align 4
  store i32 %v0_a980, i32* %r0.global-to-local, align 4
  %v4_a984 = inttoptr i32 %v0_a97c to i32*
  %v5_a984 = call i32 @function_a430(i32 %v0_a980, i32* %v4_a984, i32 1, i32 1)
  %v1_a98c = urem i32 %v5_a984, 256
  %v0_a990 = load i32, i32* @r5, align 4
  store i32 %v0_a990, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a99c = load i32, i32* @r4, align 4
  store i32 %v0_a99c, i32* %r0.global-to-local, align 4
  %v5_a9a4 = inttoptr i32 %v0_a990 to i32*
  %v6_a9a4 = call i32 @function_a430(i32 %v0_a99c, i32* %v5_a9a4, i32 19, i32 0)
  %v0_a9ac = load i32, i32* @r5, align 4
  store i32 %v0_a9ac, i32* %r1.global-to-local, align 4
  %v2_a9b0 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_a9b0, i32* %r3.global-to-local, align 4
  store i32 %v6_a9a4, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a9bc = load i32, i32* @r4, align 4
  store i32 %v0_a9bc, i32* %r0.global-to-local, align 4
  %v4_a9c0 = inttoptr i32 %v0_a9ac to i32*
  %v5_a9c0 = call i32 @function_a430(i32 %v0_a9bc, i32* %v4_a9c0, i32 25, i32 %v2_a9b0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a9d4 = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_a9d4, i32* @r0, align 4
  %v7_a9d8 = icmp eq i32 %v3_a9d4, -1
  store i1 %v7_a9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9d8, label %dec_label_pc_ac38, label %dec_label_pc_a9e4

dec_label_pc_a9e4:                                ; preds = %dec_label_pc_a884
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a9ec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a9ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_aa00 = call i32 @function_15600(i32 %v3_a9d4, i32 0, i32 3, i32 %v6_a9ec, i32 4)
  store i32 %v5_aa00, i32* %r0.global-to-local, align 4
  %v7_aa04 = icmp eq i32 %v5_aa00, -1
  store i1 %v7_aa04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa04, label %dec_label_pc_ac30, label %dec_label_pc_aa0c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_a9e4
  %v0_aa0c = load i32, i32* @r8, align 4
  %v0_aa10 = load i32, i32* @r7, align 4
  %v0_aa14 = load i32, i32* %fp.global-to-local, align 4
  %v3_aa14 = mul i32 %v0_aa14, 65536
  store i32 %v3_aa14, i32* %r3.global-to-local, align 4
  %v3_aa1c = urem i32 %v0_aa0c, 65536
  store i32 %v3_aa1c, i32* %r2.global-to-local, align 4
  %v3_aa20 = urem i32 %v0_aa10, 65536
  store i32 %v3_aa20, i32* %r1.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r6, align 4
  %v1_aa24 = urem i32 %v0_aa24, 256
  store i32 %v1_aa24, i32* @r6, align 4
  %v0_aa28 = load i32, i32* @sl, align 4
  %v2_aa28 = icmp eq i32 %v0_aa28, 0
  store i1 %v2_aa28, i1* %cpsr_z.global-to-local, align 1
  %v3_aa2c = urem i32 %v0_aa14, 65536
  store i32 %v3_aa2c, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aa28, label %dec_label_pc_aec0, label %dec_label_pc_aa44

dec_label_pc_aa44:                                ; preds = %dec_label_pc_aa0c
  %v3_aa4c = mul i32 %v5_a96c, 65536
  %v1_aa50 = add i32 %v3_aa4c, 524288
  %v1_aa54 = add i32 %v3_aa4c, 4325376
  %v1_aa5c = add i32 %v3_aa4c, 1835008
  %v3_aa60 = udiv i32 %v1_aa54, 65536
  store i32 %v3_aa60, i32* %r1.global-to-local, align 4
  %v3_aa64 = udiv i32 %v1_aa5c, 65536
  store i32 %v3_aa64, i32* %r3.global-to-local, align 4
  %v3_aa68 = xor i32 %v3_aa2c, 65535
  store i32 %v3_aa68, i32* %r2.global-to-local, align 4
  %v3_aa6c = udiv i32 %v1_aa50, 65536
  store i32 %v3_aa6c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_abcc = sext i8 %v5_a8d8 to i32
  %v2_abf0 = icmp eq i32 %v1_a920, 0
  %v2_ab3c = icmp eq i32 %v1_aa24, 0
  %sext = mul i32 %v5_a8f4, 16777216
  %v4_abec = sdiv i32 %sext, 16777216
  br label %dec_label_pc_ab8c

dec_label_pc_aa88:                                ; preds = %dec_label_pc_ab8c, %dec_label_pc_ac10
  %v2_aa8c = phi i32 [ %v0_abfc, %dec_label_pc_ab8c ], [ %v2_aa8c.pre, %dec_label_pc_ac10 ]
  %v3_aa8c = add i32 %v2_aa8c, 9
  %v4_aa8c = inttoptr i32 %v3_aa8c to i8*
  store i8 47, i8* %v4_aa8c, align 1
  %v3_aa90 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa90, i32* %r2.global-to-local, align 4
  store i32 %v5_a9c0, i32* %r1.global-to-local, align 4
  %v3_aa98 = mul i32 %v3_aa90, 32
  store i32 %v3_aa98, i32* %r3.global-to-local, align 4
  %v1_aa9c = load i32, i32* %r4.global-to-local, align 4
  %v2_aa9c = add i32 %v1_aa9c, 12
  %v3_aa9c = inttoptr i32 %v2_aa9c to i32*
  store i32 %v5_a9c0, i32* %v3_aa9c, align 4
  %v0_aaa0 = load i32, i32* %r3.global-to-local, align 4
  %v1_aaa0 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_aaa0, -8
  %v5_aaa0 = add i32 %v0_aaa0, %tmp
  %v1_aaa4 = load i32, i32* @sb, align 4
  %v2_aaa4 = add i32 %v1_aaa4, %v5_aaa0
  store i32 %v2_aaa4, i32* %r3.global-to-local, align 4
  %v1_aaa8 = add i32 %v2_aaa4, 16
  %v2_aaa8 = inttoptr i32 %v1_aaa8 to i32*
  %v3_aaa8 = load i32, i32* %v2_aaa8, align 4
  store i32 %v3_aaa8, i32* %r2.global-to-local, align 4
  store i32 25856, i32* %r0.global-to-local, align 4
  %v1_aab0 = load i32, i32* %r4.global-to-local, align 4
  %v2_aab0 = add i32 %v1_aab0, 16
  %v3_aab0 = inttoptr i32 %v2_aab0 to i32*
  store i32 %v3_aaa8, i32* %v3_aab0, align 4
  %v0_aab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_aab4 = add i32 %v0_aab4, 88
  store i32 %v1_aab4, i32* %r0.global-to-local, align 4
  %v1_aab8 = call i32 @function_15368(i32 %v1_aab4)
  %v2_aab8 = trunc i32 %v1_aab8 to i16
  %v3_aabc = load i32, i32* @r8, align 4
  %v4_aabc = add i32 %v3_aabc, 2
  %v5_aabc = inttoptr i32 %v4_aabc to i16*
  store i16 %v2_aab8, i16* %v5_aabc, align 2
  store i32 2048, i32* %r0.global-to-local, align 4
  %v1_aac4 = call i32 @function_15368(i32 2048)
  %v2_aac4 = trunc i32 %v1_aac4 to i8
  store i32 %v1_aac4, i32* %r0.global-to-local, align 4
  %v4_aac8 = udiv i32 %v1_aac4, 256
  store i32 %v4_aac8, i32* %r3.global-to-local, align 4
  %v1_aacc = trunc i32 %v4_aac8 to i8
  %v2_aacc = load i32, i32* @r7, align 4
  %v3_aacc = add i32 %v2_aacc, 13
  %v4_aacc = inttoptr i32 %v3_aacc to i8*
  store i8 %v1_aacc, i8* %v4_aacc, align 1
  %v3_aad0 = load i32, i32* @r7, align 4
  %v4_aad0 = add i32 %v3_aad0, 12
  %v5_aad0 = inttoptr i32 %v4_aad0 to i8*
  store i8 %v2_aac4, i8* %v5_aad0, align 1
  %v0_aad4 = load i32, i32* %r4.global-to-local, align 4
  %v1_aad4 = add i32 %v0_aad4, 38
  %v2_aad4 = inttoptr i32 %v1_aad4 to i8*
  %v3_aad4 = load i8, i8* %v2_aad4, align 1
  %tmp59 = urem i8 %v3_aad4, 16
  %v1_aad8 = zext i8 %tmp59 to i32
  %v1_aadc = or i32 %v1_aad8, 64
  store i32 %v1_aadc, i32* %r3.global-to-local, align 4
  %v1_aae0 = trunc i32 %v1_aadc to i8
  store i8 %v1_aae0, i8* %v2_aad4, align 1
  %v0_aae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_aae4 = add i32 %v0_aae4, 38
  %v2_aae4 = inttoptr i32 %v1_aae4 to i8*
  %v3_aae4 = load i8, i8* %v2_aae4, align 1
  %v1_aae8 = and i8 %v3_aae4, -16
  %v1_aaec = or i8 %v1_aae8, 5
  store i8 %v1_aaec, i8* %v2_aae4, align 1
  store i32 %v4_abcc, i32* %r2.global-to-local, align 4
  %v2_aaf8 = load i32, i32* @r5, align 4
  %v3_aaf8 = add i32 %v2_aaf8, 1
  %v4_aaf8 = inttoptr i32 %v3_aaf8 to i8*
  store i8 %v5_a8d8, i8* %v4_aaf8, align 1
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v1_ab00 = call i32 @function_15368(i32 %v3_aa64)
  %v2_ab00 = trunc i32 %v1_ab00 to i16
  %v3_ab04 = load i32, i32* @r5, align 4
  %v4_ab04 = add i32 %v3_ab04, 2
  %v5_ab04 = inttoptr i32 %v4_ab04 to i16*
  store i16 %v2_ab00, i16* %v5_ab04, align 2
  store i32 %v3_aa68, i32* %r0.global-to-local, align 4
  %v1_ab0c = call i32 @function_15368(i32 %v3_aa68)
  %v2_ab0c = trunc i32 %v1_ab0c to i16
  store i32 %v1_ab0c, i32* %r0.global-to-local, align 4
  store i32 %v4_abec, i32* %r1.global-to-local, align 4
  store i32 %v1_a920, i32* %r3.global-to-local, align 4
  store i1 %v2_abf0, i1* %cpsr_z.global-to-local, align 1
  %v3_ab1c = load i32, i32* @r5, align 4
  %v4_ab1c = add i32 %v3_ab1c, 4
  %v5_ab1c = inttoptr i32 %v4_ab1c to i16*
  store i16 %v2_ab0c, i16* %v5_ab1c, align 2
  %v0_ab20 = load i32, i32* %r1.global-to-local, align 4
  %v1_ab20 = trunc i32 %v0_ab20 to i8
  %v2_ab20 = load i32, i32* @r5, align 4
  %v3_ab20 = add i32 %v2_ab20, 8
  %v4_ab20 = inttoptr i32 %v3_ab20 to i8*
  store i8 %v1_ab20, i8* %v4_ab20, align 1
  %v0_ab24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ab24, label %dec_label_pc_ab28, label %dec_label_pc_ac20

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aa88, %dec_label_pc_ac20
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_ab2c = load i32, i32* @r5, align 4
  %v3_ab2c = add i32 %v2_ab2c, 9
  %v4_ab2c = inttoptr i32 %v3_ab2c to i8*
  store i8 17, i8* %v4_ab2c, align 1
  %v0_ab30 = call i32 @function_1008c()
  store i32 %v0_ab30, i32* %r0.global-to-local, align 4
  store i32 %v1_aa24, i32* %r2.global-to-local, align 4
  store i1 %v2_ab3c, i1* %cpsr_z.global-to-local, align 1
  %v1_ab40 = sub i32 1023, %v0_ab30
  store i32 %v1_ab40, i32* %r3.global-to-local, align 4
  br i1 %v2_ab3c, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_ab28
  %v2_ab48 = load i32, i32* @r5, align 4
  %v3_ab48 = add i32 %v2_ab48, 16
  %v4_ab48 = inttoptr i32 %v3_ab48 to i32*
  store i32 %v1_ab40, i32* %v4_ab48, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_ab28
  %v1_ab44 = load i32, i32* %r4.global-to-local, align 4
  %v2_ab44 = add i32 %v1_ab44, 16
  %v3_ab44 = inttoptr i32 %v2_ab44 to i32*
  %v4_ab44 = load i32, i32* %v3_ab44, align 4
  store i32 %v4_ab44, i32* %r3.global-to-local, align 4
  %v2_ab4c = load i32, i32* @r5, align 4
  %v3_ab4c = add i32 %v2_ab4c, 16
  %v4_ab4c = inttoptr i32 %v3_ab4c to i32*
  store i32 %v4_ab44, i32* %v4_ab4c, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_ab50 = load i32, i32* @r5, align 4
  %v2_ab50 = add i32 %v1_ab50, 12
  %v3_ab50 = inttoptr i32 %v2_ab50 to i32*
  store i32 %v0_ab30, i32* %v3_ab50, align 4
  store i32 %v3_aa1c, i32* %r0.global-to-local, align 4
  %v1_ab58 = call i32 @function_15368(i32 %v3_aa1c)
  %v2_ab58 = trunc i32 %v1_ab58 to i16
  %v3_ab5c = load i32, i32* @r6, align 4
  %v4_ab5c = inttoptr i32 %v3_ab5c to i16*
  store i16 %v2_ab58, i16* %v4_ab5c, align 2
  store i32 %v3_aa20, i32* %r0.global-to-local, align 4
  %v1_ab64 = call i32 @function_15368(i32 %v3_aa20)
  %v2_ab64 = trunc i32 %v1_ab64 to i16
  %v3_ab68 = load i32, i32* @r6, align 4
  %v4_ab68 = add i32 %v3_ab68, 2
  %v5_ab68 = inttoptr i32 %v4_ab68 to i16*
  store i16 %v2_ab64, i16* %v5_ab68, align 2
  store i32 %v3_aa6c, i32* %r0.global-to-local, align 4
  %v1_ab70 = call i32 @function_15368(i32 %v3_aa6c)
  %v2_ab70 = trunc i32 %v1_ab70 to i16
  store i32 %v1_ab70, i32* %r0.global-to-local, align 4
  %v3_ab74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab74, i32* %r3.global-to-local, align 4
  %v1_ab78 = add i32 %v3_ab74, 1
  store i32 %v1_ab78, i32* @r4, align 4
  %v1_ab7c = load i32, i32* @sl, align 4
  %v9_ab7c = icmp eq i32 %v1_ab78, %v1_ab7c
  store i1 %v9_ab7c, i1* %cpsr_z.global-to-local, align 1
  %v3_ab80 = load i32, i32* @r6, align 4
  %v4_ab80 = add i32 %v3_ab80, 4
  %v5_ab80 = inttoptr i32 %v4_ab80 to i16*
  store i16 %v2_ab70, i16* %v5_ab80, align 2
  %v0_ab84 = load i32, i32* @r4, align 4
  store i32 %v0_ab84, i32* %stack_var_-44, align 4
  %v6_ab88 = icmp slt i32 %v1_ab78, %v1_ab7c
  br i1 %v6_ab88, label %dec_label_pc_ab8c, label %dec_label_pc_ac44

dec_label_pc_ab8c:                                ; preds = %bb, %dec_label_pc_aa44
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ab98 = call i32 @function_13d28(i32 1510, i32 4)
  store i32 %v2_ab98, i32* %r0.global-to-local, align 4
  store i32 %v2_a8a0, i32* %r2.global-to-local, align 4
  %v3_aba0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aba0, i32* %r3.global-to-local, align 4
  %v2_aba4 = load i32, i32* @r4, align 4
  %v5_aba4 = mul i32 %v2_aba4, 4
  %v6_aba4 = add i32 %v5_aba4, %v2_a8a0
  %v7_aba4 = inttoptr i32 %v6_aba4 to i32*
  store i32 %v2_ab98, i32* %v7_aba4, align 4
  %v0_aba8 = load i32, i32* %r2.global-to-local, align 4
  %v1_aba8 = load i32, i32* %r3.global-to-local, align 4
  %v4_aba8 = mul i32 %v1_aba8, 4
  %v5_aba8 = add i32 %v4_aba8, %v0_aba8
  %v6_aba8 = inttoptr i32 %v5_aba8 to i32*
  %v7_aba8 = load i32, i32* %v6_aba8, align 4
  store i32 %v7_aba8, i32* %r4.global-to-local, align 4
  %v1_abac = inttoptr i32 %v7_aba8 to i8*
  %v2_abac = load i8, i8* %v1_abac, align 1
  %tmp60 = urem i8 %v2_abac, 16
  %v1_abb0 = zext i8 %tmp60 to i32
  %v1_abb4 = or i32 %v1_abb0, 64
  store i32 %v1_abb4, i32* %r2.global-to-local, align 4
  %v1_abb8 = trunc i32 %v1_abb4 to i8
  store i8 %v1_abb8, i8* %v1_abac, align 1
  %v0_abbc = load i32, i32* %r4.global-to-local, align 4
  %v1_abbc = inttoptr i32 %v0_abbc to i8*
  %v2_abbc = load i8, i8* %v1_abbc, align 1
  %v1_abc0 = and i8 %v2_abbc, -16
  %v1_abc4 = or i8 %v1_abc0, 5
  store i8 %v1_abc4, i8* %v1_abbc, align 1
  store i32 %v4_abcc, i32* %r3.global-to-local, align 4
  %v2_abd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_abd0 = add i32 %v2_abd0, 1
  %v4_abd0 = inttoptr i32 %v3_abd0 to i8*
  store i8 %v5_a8d8, i8* %v4_abd0, align 1
  store i32 %v3_aa60, i32* %r0.global-to-local, align 4
  %v1_abd8 = call i32 @function_15368(i32 %v3_aa60)
  %v2_abd8 = trunc i32 %v1_abd8 to i16
  %v3_abdc = load i32, i32* %r4.global-to-local, align 4
  %v4_abdc = add i32 %v3_abdc, 2
  %v5_abdc = inttoptr i32 %v4_abdc to i16*
  store i16 %v2_abd8, i16* %v5_abdc, align 2
  %v0_abe0 = load i32, i32* @fp, align 4
  store i32 %v0_abe0, i32* %r0.global-to-local, align 4
  %v1_abe4 = call i32 @function_15368(i32 %v0_abe0)
  %v2_abe4 = trunc i32 %v1_abe4 to i16
  store i32 %v1_abe4, i32* %r0.global-to-local, align 4
  store i32 %v1_a920, i32* %r1.global-to-local, align 4
  store i32 %v4_abec, i32* %r2.global-to-local, align 4
  store i1 %v2_abf0, i1* %cpsr_z.global-to-local, align 1
  %v3_abf4 = load i32, i32* %r4.global-to-local, align 4
  %v4_abf4 = add i32 %v3_abf4, 4
  %v5_abf4 = inttoptr i32 %v4_abf4 to i16*
  store i16 %v2_abe4, i16* %v5_abf4, align 2
  %v0_abf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_abf8 = trunc i32 %v0_abf8 to i8
  %v2_abf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_abf8 = add i32 %v2_abf8, 8
  %v4_abf8 = inttoptr i32 %v3_abf8 to i8*
  store i8 %v1_abf8, i8* %v4_abf8, align 1
  %v0_abfc = load i32, i32* %r4.global-to-local, align 4
  %v1_abfc = add i32 %v0_abfc, 38
  store i32 %v1_abfc, i32* @r5, align 4
  %v1_ac00 = add i32 %v0_abfc, 58
  store i32 %v1_ac00, i32* @r6, align 4
  %v1_ac04 = add i32 %v0_abfc, 24
  store i32 %v1_ac04, i32* @r7, align 4
  %v1_ac08 = add i32 %v0_abfc, 20
  store i32 %v1_ac08, i32* @r8, align 4
  %v0_ac0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ac0c, label %dec_label_pc_aa88, label %dec_label_pc_ac10

dec_label_pc_ac10:                                ; preds = %dec_label_pc_ab8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ac14 = call i32 @function_15368(i32 16384)
  %v2_ac14 = trunc i32 %v1_ac14 to i16
  store i32 %v1_ac14, i32* %r0.global-to-local, align 4
  %v3_ac18 = load i32, i32* %r4.global-to-local, align 4
  %v4_ac18 = add i32 %v3_ac18, 6
  %v5_ac18 = inttoptr i32 %v4_ac18 to i16*
  store i16 %v2_ac14, i16* %v5_ac18, align 2
  %v2_aa8c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_aa88

dec_label_pc_ac20:                                ; preds = %dec_label_pc_aa88
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ac24 = call i32 @function_15368(i32 16384)
  %v2_ac24 = trunc i32 %v1_ac24 to i16
  store i32 %v1_ac24, i32* %r0.global-to-local, align 4
  %v3_ac28 = load i32, i32* @r5, align 4
  %v4_ac28 = add i32 %v3_ac28, 6
  %v5_ac28 = inttoptr i32 %v4_ac28 to i16*
  store i16 %v2_ac24, i16* %v5_ac28, align 2
  br label %dec_label_pc_ab28

dec_label_pc_ac30:                                ; preds = %dec_label_pc_a9e4
  store i32 %v3_a9d4, i32* @r0, align 4
  %v1_ac34 = call i32 @function_1663c(i32 %v3_a9d4)
  store i32 %v1_ac34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_a884, %dec_label_pc_ac30
  %v1_ac40 = phi i32 [ %v3_a9d4, %dec_label_pc_a884 ], [ %v1_ac34, %dec_label_pc_ac30 ]
  store i32 %v3_a884, i32* %r4.global-to-local, align 4
  store i32 %v24_a884, i32* %fp.global-to-local, align 4
  ret i32 %v1_ac40

dec_label_pc_ac44:                                ; preds = %bb
  %v1_ac4c = add i32 %v5_a96c, 8
  store i32 %v1_ac4c, i32* %r3.global-to-local, align 4
  %v1_ac50 = add i32 %v5_a96c, 66
  store i32 %v1_ac50, i32* %r1.global-to-local, align 4
  %v0_ac60.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ac5c.preheader

dec_label_pc_ac5c.preheader:                      ; preds = %dec_label_pc_ac44, %dec_label_pc_aec0
  %v0_ac60.pre = phi i32 [ %v0_ac60.pre.pre, %dec_label_pc_ac44 ], [ 0, %dec_label_pc_aec0 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_ac50, %dec_label_pc_ac44 ], [ %v1_aecc, %dec_label_pc_aec0 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_ac4c, %dec_label_pc_ac44 ], [ %v1_aec8, %dec_label_pc_aec0 ]
  %v3_ae28 = icmp eq i32 %v5_a9c0, -1
  %v8_ae28 = icmp eq i32 %v5_a9c0, -1
  %v2_ae90 = icmp eq i32 %v1_aa24, 0
  %v2_acf8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_ad10 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ad20 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ad30 = ptrtoint i32* %stack_var_-54 to i32
  %v2_ad40 = icmp eq i32 %v1_a98c, 0
  br label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_ac5c, %dec_label_pc_ad48, %dec_label_pc_ac5c.preheader
  %v0_ac60 = phi i32 [ %v0_ac60.pre, %dec_label_pc_ac5c.preheader ], [ 0, %dec_label_pc_ac5c ], [ %v1_ade8, %dec_label_pc_ad48 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ac60 = icmp eq i32 %v0_ac60, 0
  store i1 %v2_ac60, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ac60, label %dec_label_pc_ac5c, label %dec_label_pc_ac6c

dec_label_pc_ac6c:                                ; preds = %dec_label_pc_ac5c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ac70

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ad48, %dec_label_pc_ac6c
  %v1_ac84 = phi i32 [ %v1_ade4, %dec_label_pc_ad48 ], [ 0, %dec_label_pc_ac6c ]
  %v5_ac74 = mul i32 %v1_ac84, 24
  %v1_ac78 = load i32, i32* @sb, align 4
  %v2_ac78 = add i32 %v1_ac78, %v5_ac74
  store i32 %v2_ac78, i32* %r3.global-to-local, align 4
  store i32 %v2_a8a0, i32* %r1.global-to-local, align 4
  %v1_ac80 = add i32 %v2_ac78, 20
  %v2_ac80 = inttoptr i32 %v1_ac80 to i8*
  %v3_ac80 = load i8, i8* %v2_ac80, align 1
  %v4_ac80 = zext i8 %v3_ac80 to i32
  store i32 %v4_ac80, i32* %r2.global-to-local, align 4
  %v4_ac84 = mul i32 %v1_ac84, 4
  %v5_ac84 = add i32 %v4_ac84, %v2_a8a0
  %v6_ac84 = inttoptr i32 %v5_ac84 to i32*
  %v7_ac84 = load i32, i32* %v6_ac84, align 4
  store i32 %v7_ac84, i32* @r5, align 4
  %v7_ac88 = icmp eq i8 %v3_ac80, 31
  store i1 %v7_ac88, i1* %cpsr_z.global-to-local, align 1
  %v1_ac8c = add i32 %v7_ac84, 24
  store i32 %v1_ac8c, i32* @r7, align 4
  %v1_ac90 = add i32 %v7_ac84, 38
  store i32 %v1_ac90, i32* @r6, align 4
  %v1_ac94 = add i32 %v7_ac84, 58
  store i32 %v1_ac94, i32* @r8, align 4
  %tmp61 = icmp ult i8 %v3_ac80, 32
  br i1 %tmp61, label %dec_label_pc_adf8, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac70
  store i32 %v5_a9c0, i32* %r2.global-to-local, align 4
  store i1 %v8_ae28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ae28, label %dec_label_pc_ae34, label %dec_label_pc_aca8

dec_label_pc_aca8:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_ac9c
  store i32 65535, i32* @r4, align 4
  %v0_acb0 = load i32, i32* @fp, align 4
  %v9_acb0 = icmp eq i32 %v0_acb0, 65535
  store i1 %v9_acb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_acb0, label %dec_label_pc_ae4c, label %dec_label_pc_acb8

dec_label_pc_acb8:                                ; preds = %dec_label_pc_ae34.dec_label_pc_acb8_crit_edge, %dec_label_pc_aca8
  %v1_acbc = phi i32 [ %v1_acbc.pre, %dec_label_pc_ae34.dec_label_pc_acb8_crit_edge ], [ 65535, %dec_label_pc_aca8 ]
  store i32 %v3_aa1c, i32* %r3.global-to-local, align 4
  %v9_acbc = icmp eq i32 %v3_aa1c, %v1_acbc
  store i1 %v9_acbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_acbc, label %dec_label_pc_ae74, label %dec_label_pc_acc4

dec_label_pc_acc4:                                ; preds = %dec_label_pc_ae4c, %dec_label_pc_acb8
  %v1_acc8 = phi i32 [ %v1_ae6c, %dec_label_pc_ae4c ], [ %v1_acbc, %dec_label_pc_acb8 ]
  store i32 %v3_aa20, i32* %r1.global-to-local, align 4
  %v9_acc8 = icmp eq i32 %v3_aa20, %v1_acc8
  store i1 %v9_acc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_acc8, label %dec_label_pc_ae88, label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_ae74, %dec_label_pc_acc4
  store i32 %v1_aa24, i32* %r2.global-to-local, align 4
  store i1 %v2_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae90, label %dec_label_pc_aea4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_acd0
  %v1_acd8 = load i32, i32* @r5, align 4
  %v2_acd8 = add i32 %v1_acd8, 16
  %v3_acd8 = inttoptr i32 %v2_acd8 to i32*
  %v4_acd8 = load i32, i32* %v3_acd8, align 4
  store i32 %v4_acd8, i32* %r3.global-to-local, align 4
  %v2_acdc = load i32, i32* @r6, align 4
  %v3_acdc = add i32 %v2_acdc, 16
  %v4_acdc = inttoptr i32 %v3_acdc to i32*
  store i32 %v4_acd8, i32* %v4_acdc, align 4
  br label %dec_label_pc_ace4

dec_label_pc_ace4:                                ; preds = %bb58, %.thread4, %dec_label_pc_aea4
  %v0_ace4 = call i32 @function_1008c()
  store i32 %v0_ace4, i32* %r0.global-to-local, align 4
  store i32 %v0_ace4, i32* %stack_var_-48, align 4
  %v0_acec = call i32 @function_1008c()
  store i32 %v0_acec, i32* %r0.global-to-local, align 4
  store i32 %v0_acec, i32* %stack_var_-52, align 4
  %v0_acf4 = call i32 @function_1008c()
  store i32 %v2_acf8, i32* %r1.global-to-local, align 4
  store i32 %v0_acf4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ad04 = load i32, i32* @r7, align 4
  store i32 %v0_ad04, i32* %r0.global-to-local, align 4
  %v3_ad08 = call i32 @function_12eb0(i32 %v0_ad04, i32 %v2_acf8, i32 4)
  %v0_ad0c = load i32, i32* @r7, align 4
  %v1_ad0c = add i32 %v0_ad0c, 6
  store i32 %v1_ad0c, i32* %r0.global-to-local, align 4
  store i32 %v2_ad10, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ad18 = call i32 @function_12eb0(i32 %v1_ad0c, i32 %v2_ad10, i32 4)
  %v0_ad1c = load i32, i32* @r7, align 4
  %v1_ad1c = add i32 %v0_ad1c, 4
  store i32 %v1_ad1c, i32* %r0.global-to-local, align 4
  store i32 %v2_ad20, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ad28 = call i32 @function_12eb0(i32 %v1_ad1c, i32 %v2_ad20, i32 2)
  %v0_ad2c = load i32, i32* @r7, align 4
  %v1_ad2c = add i32 %v0_ad2c, 10
  store i32 %v1_ad2c, i32* %r0.global-to-local, align 4
  store i32 %v2_ad30, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ad38 = call i32 @function_12eb0(i32 %v1_ad2c, i32 %v2_ad30, i32 2)
  store i32 %v3_ad38, i32* %r0.global-to-local, align 4
  store i32 %v1_a98c, i32* %r3.global-to-local, align 4
  store i1 %v2_ad40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ad40, label %dec_label_pc_ad48, label %dec_label_pc_aeb0

dec_label_pc_ad48:                                ; preds = %dec_label_pc_ace4, %dec_label_pc_aeb0
  %v2_ad4c = load i32, i32* @r5, align 4
  %v3_ad4c = add i32 %v2_ad4c, 10
  %v4_ad4c = inttoptr i32 %v3_ad4c to i16*
  store i16 0, i16* %v4_ad4c, align 2
  %v0_ad50 = load i32, i32* @r5, align 4
  store i32 %v0_ad50, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_ad58 = call i32 @function_e5a4(i32 %v0_ad50, i32 20)
  %v3_ad58 = trunc i32 %v2_ad58 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_ad60 = load i32, i32* @r5, align 4
  %v4_ad60 = add i32 %v3_ad60, 10
  %v5_ad60 = inttoptr i32 %v4_ad60 to i16*
  store i16 %v3_ad58, i16* %v5_ad60, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ad68 = load i32, i32* %r2.global-to-local, align 4
  %v1_ad68 = trunc i32 %v0_ad68 to i16
  %v2_ad68 = load i32, i32* @r6, align 4
  %v3_ad68 = add i32 %v2_ad68, 10
  %v4_ad68 = inttoptr i32 %v3_ad68 to i16*
  store i16 %v1_ad68, i16* %v4_ad68, align 2
  %v0_ad6c = load i32, i32* @r6, align 4
  store i32 %v0_ad6c, i32* @r0, align 4
  %v2_ad70 = call i32 @function_e5a4(i32 %v0_ad6c, i32 20)
  %v3_ad70 = trunc i32 %v2_ad70 to i16
  store i32 %v2_ad70, i32* %r0.global-to-local, align 4
  %v3_ad74 = load i32, i32* @r6, align 4
  %v4_ad74 = add i32 %v3_ad74, 10
  %v5_ad74 = inttoptr i32 %v4_ad74 to i16*
  store i16 %v3_ad70, i16* %v5_ad74, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ad7c = load i32, i32* @r8, align 4
  %v3_ad7c = add i32 %v2_ad7c, 6
  %v4_ad7c = inttoptr i32 %v3_ad7c to i16*
  store i16 0, i16* %v4_ad7c, align 2
  %v0_ad80 = load i32, i32* @r8, align 4
  store i32 %v0_ad80, i32* @r1, align 4
  %v1_ad84 = add i32 %v0_ad80, 4
  %v2_ad84 = inttoptr i32 %v1_ad84 to i16*
  %v3_ad84 = load i16, i16* %v2_ad84, align 2
  %v4_ad84 = zext i16 %v3_ad84 to i32
  store i32 %v4_ad84, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v0_ad8c = load i32, i32* @r6, align 4
  store i32 %v0_ad8c, i32* %r0.global-to-local, align 4
  %v4_ad90 = call i32 @function_e5f4(i32 %v0_ad8c, i32 %v0_ad80, i32 %v4_ad84, i32 %stack_var_-124.0.ph)
  %v5_ad90 = trunc i32 %v4_ad90 to i16
  store i32 %v4_ad90, i32* %r0.global-to-local, align 4
  %v3_ad94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad94, i32* %r2.global-to-local, align 4
  %v3_ad98 = mul i32 %v3_ad94, 32
  store i32 %v3_ad98, i32* %r3.global-to-local, align 4
  %v0_ad9c = load i32, i32* @r5, align 4
  %v1_ad9c = add i32 %v0_ad9c, 16
  %v2_ad9c = inttoptr i32 %v1_ad9c to i32*
  %v3_ad9c = load i32, i32* %v2_ad9c, align 4
  %v5_ada0 = mul i32 %v3_ad94, 24
  store i32 %v5_ada0, i32* %r3.global-to-local, align 4
  %v1_ada4 = load i32, i32* @sb, align 4
  %v2_ada4 = add i32 %v1_ada4, %v5_ada0
  store i32 %v2_ada4, i32* @lr, align 4
  %v2_ada8 = add i32 %v2_ada4, 4
  %v3_ada8 = inttoptr i32 %v2_ada8 to i32*
  store i32 %v3_ad9c, i32* %v3_ada8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_adb4 = load i32, i32* @r8, align 4
  %v4_adb4 = add i32 %v3_adb4, 6
  %v5_adb4 = inttoptr i32 %v4_adb4 to i16*
  store i16 %v5_ad90, i16* %v5_adb4, align 2
  %v0_adbc = load i32, i32* %r1.global-to-local, align 4
  %v1_adbc = trunc i32 %v0_adbc to i16
  %v2_adbc = load i32, i32* %r3.global-to-local, align 4
  %v3_adbc = load i32, i32* @sb, align 4
  %v4_adbc = add i32 %v3_adbc, %v2_adbc
  %v5_adbc = inttoptr i32 %v4_adbc to i16*
  store i16 %v1_adbc, i16* %v5_adbc, align 2
  %v0_adc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adc0 to i16
  %v2_adc0 = load i32, i32* @lr, align 4
  %v3_adc0 = add i32 %v2_adc0, 2
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_adc8 = load i32, i32* @r5, align 4
  store i32 %v0_adc8, i32* @r1, align 4
  store i32 %v3_a9d4, i32* @r0, align 4
  store i32 %stack_var_-120.0.ph, i32* @r2, align 4
  %v0_addc = call i32 @function_155b4()
  %v3_ade0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ade0, i32* %r3.global-to-local, align 4
  %v1_ade4 = add i32 %v3_ade0, 1
  store i32 %v1_ade4, i32* %r0.global-to-local, align 4
  %v1_ade8 = load i32, i32* @sl, align 4
  %v9_ade8 = icmp eq i32 %v1_ade4, %v1_ade8
  store i1 %v9_ade8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ade4, i32* %stack_var_-44, align 4
  %v6_adf0 = icmp slt i32 %v1_ade4, %v1_ade8
  br i1 %v6_adf0, label %dec_label_pc_ac70, label %dec_label_pc_ac5c

dec_label_pc_adf8:                                ; preds = %dec_label_pc_ac70
  %v1_adf8 = add i32 %v2_ac78, 16
  %v2_adf8 = inttoptr i32 %v1_adf8 to i32*
  %v3_adf8 = load i32, i32* %v2_adf8, align 4
  store i32 %v3_adf8, i32* %r0.global-to-local, align 4
  %v1_adfc = call i32 @function_154ec(i32 %v3_adf8)
  store i32 %v1_adfc, i32* %r0.global-to-local, align 4
  store i32 %v1_adfc, i32* %r4.global-to-local, align 4
  %v0_ae04 = call i32 @function_1008c()
  store i32 %v0_ae04, i32* %r0.global-to-local, align 4
  %v3_ae08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ae08, i32* %r2.global-to-local, align 4
  %v5_ae10 = mul i32 %v3_ae08, 24
  %v1_ae14 = load i32, i32* @sb, align 4
  %v2_ae14 = add i32 %v1_ae14, %v5_ae10
  store i32 %v2_ae14, i32* %r3.global-to-local, align 4
  %v1_ae18 = add i32 %v2_ae14, 20
  %v2_ae18 = inttoptr i32 %v1_ae18 to i8*
  %v3_ae18 = load i8, i8* %v2_ae18, align 1
  %v4_ae18 = zext i8 %v3_ae18 to i32
  store i32 %v4_ae18, i32* %r2.global-to-local, align 4
  %v0_ae1c = load i32, i32* %r4.global-to-local, align 4
  %v7_ae1c = lshr i32 %v0_ae04, %v4_ae18
  %v8_ae1c = add i32 %v7_ae1c, %v0_ae1c
  store i32 %v8_ae1c, i32* %r0.global-to-local, align 4
  %v1_ae20 = call i32 @function_15344(i32 %v8_ae1c)
  store i32 %v1_ae20, i32* %r0.global-to-local, align 4
  store i32 %v5_a9c0, i32* %r2.global-to-local, align 4
  store i1 %v8_ae28, i1* %cpsr_z.global-to-local, align 1
  %v1_ae2c = load i32, i32* @r5, align 4
  %v2_ae2c = add i32 %v1_ae2c, 16
  %v3_ae2c = inttoptr i32 %v2_ae2c to i32*
  store i32 %v1_ae20, i32* %v3_ae2c, align 4
  br i1 %v3_ae28, label %dec_label_pc_ae34, label %dec_label_pc_aca8

dec_label_pc_ae34:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_ac9c
  %v0_ae34 = call i32 @function_1008c()
  store i32 %v0_ae34, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_ae40 = load i32, i32* @fp, align 4
  %v9_ae40 = icmp eq i32 %v0_ae40, 65535
  store i1 %v9_ae40, i1* %cpsr_z.global-to-local, align 1
  %v1_ae44 = load i32, i32* @r5, align 4
  %v2_ae44 = add i32 %v1_ae44, 12
  %v3_ae44 = inttoptr i32 %v2_ae44 to i32*
  store i32 %v0_ae34, i32* %v3_ae44, align 4
  br i1 %v9_ae40, label %dec_label_pc_ae4c, label %dec_label_pc_ae34.dec_label_pc_acb8_crit_edge

dec_label_pc_ae34.dec_label_pc_acb8_crit_edge:    ; preds = %dec_label_pc_ae34
  %v1_acbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_acb8

dec_label_pc_ae4c:                                ; preds = %dec_label_pc_ae34, %dec_label_pc_aca8
  %v0_ae4c = call i32 @function_1008c()
  %v3_ae54 = urem i32 %v0_ae4c, 65536
  store i32 %v3_ae54, i32* %r0.global-to-local, align 4
  %v1_ae5c = sub nsw i32 999, %v3_ae54
  store i32 %v1_ae5c, i32* %r3.global-to-local, align 4
  %v1_ae60 = trunc i32 %v0_ae4c to i16
  %v2_ae60 = load i32, i32* @r5, align 4
  %v3_ae60 = add i32 %v2_ae60, 4
  %v4_ae60 = inttoptr i32 %v3_ae60 to i16*
  store i16 %v1_ae60, i16* %v4_ae60, align 2
  %v0_ae64 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae64 = trunc i32 %v0_ae64 to i16
  %v2_ae64 = load i32, i32* @r6, align 4
  %v3_ae64 = add i32 %v2_ae64, 4
  %v4_ae64 = inttoptr i32 %v3_ae64 to i16*
  store i16 %v1_ae64, i16* %v4_ae64, align 2
  store i32 %v3_aa1c, i32* %r3.global-to-local, align 4
  %v1_ae6c = load i32, i32* @r4, align 4
  %v9_ae6c = icmp eq i32 %v3_aa1c, %v1_ae6c
  store i1 %v9_ae6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ae6c, label %dec_label_pc_ae74, label %dec_label_pc_acc4

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae4c, %dec_label_pc_acb8
  %v0_ae74 = call i32 @function_1008c()
  %v1_ae74 = trunc i32 %v0_ae74 to i16
  store i32 %v0_ae74, i32* %r0.global-to-local, align 4
  store i32 %v3_aa20, i32* %r1.global-to-local, align 4
  %v1_ae7c = load i32, i32* @r4, align 4
  %v9_ae7c = icmp eq i32 %v3_aa20, %v1_ae7c
  store i1 %v9_ae7c, i1* %cpsr_z.global-to-local, align 1
  %v3_ae80 = load i32, i32* @r5, align 4
  %v4_ae80 = add i32 %v3_ae80, 58
  %v5_ae80 = inttoptr i32 %v4_ae80 to i16*
  store i16 %v1_ae74, i16* %v5_ae80, align 2
  br i1 %v9_ae7c, label %dec_label_pc_ae88, label %dec_label_pc_acd0

dec_label_pc_ae88:                                ; preds = %dec_label_pc_ae74, %dec_label_pc_acc4
  %v0_ae88 = call i32 @function_1008c()
  %v1_ae88 = trunc i32 %v0_ae88 to i16
  store i32 %v0_ae88, i32* %r0.global-to-local, align 4
  store i32 %v1_aa24, i32* %r2.global-to-local, align 4
  store i1 %v2_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae90, label %.thread18, label %bb58

.thread18:                                        ; preds = %dec_label_pc_ae88
  %v3_ae9819 = load i32, i32* @r8, align 4
  %v4_ae9820 = add i32 %v3_ae9819, 2
  %v5_ae9821 = inttoptr i32 %v4_ae9820 to i16*
  store i16 %v1_ae88, i16* %v5_ae9821, align 2
  br label %dec_label_pc_aea4

bb58:                                             ; preds = %dec_label_pc_ae88
  %v1_ae94 = load i32, i32* @r5, align 4
  %v2_ae94 = add i32 %v1_ae94, 16
  %v3_ae94 = inttoptr i32 %v2_ae94 to i32*
  %v4_ae94 = load i32, i32* %v3_ae94, align 4
  store i32 %v4_ae94, i32* %r3.global-to-local, align 4
  %v3_ae98 = load i32, i32* @r8, align 4
  %v4_ae98 = add i32 %v3_ae98, 2
  %v5_ae98 = inttoptr i32 %v4_ae98 to i16*
  store i16 %v1_ae88, i16* %v5_ae98, align 2
  %v1_ae9c = load i32, i32* %r3.global-to-local, align 4
  %v2_ae9c = load i32, i32* @r6, align 4
  %v3_ae9c = add i32 %v2_ae9c, 16
  %v4_ae9c = inttoptr i32 %v3_ae9c to i32*
  store i32 %v1_ae9c, i32* %v4_ae9c, align 4
  br label %dec_label_pc_ace4

dec_label_pc_aea4:                                ; preds = %.thread18, %dec_label_pc_acd0
  %v0_aea4 = call i32 @function_1008c()
  store i32 %v0_aea4, i32* %r0.global-to-local, align 4
  %v1_aea8 = load i32, i32* @r6, align 4
  %v2_aea8 = add i32 %v1_aea8, 16
  %v3_aea8 = inttoptr i32 %v2_aea8 to i32*
  store i32 %v0_aea4, i32* %v3_aea8, align 4
  br label %dec_label_pc_ace4

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_ace4
  %v0_aeb0 = load i32, i32* @r8, align 4
  %v1_aeb0 = add i32 %v0_aeb0, 8
  store i32 %v1_aeb0, i32* %r0.global-to-local, align 4
  store i32 %v5_a96c, i32* %r1.global-to-local, align 4
  %v2_aeb8 = inttoptr i32 %v1_aeb0 to i16*
  %v3_aeb8 = call i32 @function_1028c(i16* %v2_aeb8, i32 %v5_a96c)
  store i32 %v3_aeb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad48

dec_label_pc_aec0:                                ; preds = %dec_label_pc_aa0c
  %v1_aec8 = add i32 %v5_a96c, 8
  store i32 %v1_aec8, i32* %r2.global-to-local, align 4
  %v1_aecc = add i32 %v5_a96c, 66
  store i32 %v1_aecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ac5c.preheader

; uselistorder directives
  uselistorder i32 %v1_aecc, { 1, 0 }
  uselistorder i32 %v1_aec8, { 1, 0 }
  uselistorder i16 %v1_ae88, { 1, 0 }
  uselistorder i32 %v0_ae88, { 1, 0 }
  uselistorder i32 %v0_ae74, { 1, 0 }
  uselistorder i32 %v1_ae6c, { 1, 0 }
  uselistorder i32 %v3_ae54, { 1, 0 }
  uselistorder i32 %v0_ae4c, { 1, 0 }
  uselistorder i32 %v1_ade8, { 1, 2, 0 }
  uselistorder i32 %v1_ade4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_ad94, { 1, 0, 2 }
  uselistorder i32 %v4_ad90, { 1, 0 }
  uselistorder i32 %v2_ad70, { 1, 0 }
  uselistorder i32 %v7_ac84, { 2, 1, 0, 3 }
  uselistorder i1 %v2_ae90, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ac24, { 1, 0 }
  uselistorder i32 %v1_ac14, { 1, 0 }
  uselistorder i32 %v0_abfc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_abe4, { 1, 0 }
  uselistorder i32 %v1_ab70, { 1, 0 }
  uselistorder i32 %v0_ab30, { 1, 0, 2 }
  uselistorder i32 %v1_ab0c, { 1, 0 }
  uselistorder i32 %v4_aac8, { 1, 0 }
  uselistorder i32 %v1_aac4, { 0, 2, 1 }
  uselistorder i32 %v4_abec, { 1, 0 }
  uselistorder i1 %v2_abf0, { 1, 0 }
  uselistorder i32 %v4_abcc, { 1, 0 }
  uselistorder i32 %v3_aa6c, { 2, 1, 0 }
  uselistorder i32 %v3_aa64, { 2, 1, 0 }
  uselistorder i32 %v3_aa60, { 2, 1, 0 }
  uselistorder i32 %v3_aa4c, { 2, 1, 0 }
  uselistorder i32 %v3_aa2c, { 1, 0 }
  uselistorder i32 %v1_aa24, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_aa14, { 1, 0 }
  uselistorder i1 %v7_aa04, { 1, 0 }
  uselistorder i1 %v7_a9d8, { 1, 0 }
  uselistorder i32 %v3_a9d4, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_a9c0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v5_a96c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a920, { 1, 0, 2 }
  uselistorder i8 %v5_a8d8, { 2, 0, 1 }
  uselistorder i32 %v2_a8a0, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 14, 15, 16, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 6, 4, 7, 9, 8, 10, 13, 11, 12, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 25, 27, 26, 29, 28, 44, 43, 45, 48, 46, 31, 30, 32, 33, 34, 36, 35, 37, 39, 38, 40, 41, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 14, 15, 16, 17, 20, 21, 22 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ad48, { 1, 0 }
  uselistorder label %dec_label_pc_ace4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ac5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ac5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ac38, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aa88, { 1, 0 }
}

define i32 @function_aee0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aee0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_aee0 = load i32, i32* @r4, align 4
  %v18_aee0 = load i32, i32* @sb, align 4
  %v24_aee0 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_aefc = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_af00 = load i32, i32* @r5, align 4
  store i32 %v0_af00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_af10 = load i32, i32* @r4, align 4
  %v5_af14 = inttoptr i32 %v0_af00 to i32*
  %v6_af14 = call i32 @function_a430(i32 %v0_af10, i32* %v5_af14, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_af2c = load i32, i32* @r5, align 4
  store i32 %v0_af2c, i32* %r1.global-to-local, align 4
  %v0_af30 = load i32, i32* @r4, align 4
  %v5_af34 = trunc i32 %v6_af14 to i8
  %v6_af38 = inttoptr i32 %v0_af2c to i32*
  %v7_af38 = call i32 @function_a430(i32 %v0_af30, i32* %v6_af38, i32 3, i32 65535)
  %v0_af3c = load i32, i32* @r5, align 4
  store i32 %v0_af3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_af38, i32* %fp.global-to-local, align 4
  %v0_af4c = load i32, i32* @r4, align 4
  %v4_af50 = inttoptr i32 %v0_af3c to i32*
  %v5_af50 = call i32 @function_a430(i32 %v0_af4c, i32* %v4_af50, i32 4, i32 64)
  %v0_af5c = load i32, i32* @r5, align 4
  store i32 %v0_af5c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af68 = load i32, i32* @r4, align 4
  %v6_af70 = inttoptr i32 %v0_af5c to i32*
  %v7_af70 = call i32 @function_a430(i32 %v0_af68, i32* %v6_af70, i32 5, i32 1)
  %v1_af7c = urem i32 %v7_af70, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af88 = load i32, i32* @r5, align 4
  store i32 %v0_af88, i32* %r1.global-to-local, align 4
  %v0_af8c = load i32, i32* @r4, align 4
  %v5_af94 = inttoptr i32 %v0_af88 to i32*
  %v6_af94 = call i32 @function_a430(i32 %v0_af8c, i32* %v5_af94, i32 6, i32 65535)
  %v0_af9c = load i32, i32* @r5, align 4
  store i32 %v0_af9c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_af94, i32* %sb.global-to-local, align 4
  %v0_afac = load i32, i32* @r4, align 4
  %v4_afb0 = inttoptr i32 %v0_af9c to i32*
  %v5_afb0 = call i32 @function_a430(i32 %v0_afac, i32* %v4_afb0, i32 7, i32 65535)
  %v0_afb4 = load i32, i32* @r5, align 4
  store i32 %v0_afb4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_afb0, i32* @r7, align 4
  %v0_afc4 = load i32, i32* @r4, align 4
  %v4_afc8 = inttoptr i32 %v0_afb4 to i32*
  %v5_afc8 = call i32 @function_a430(i32 %v0_afc4, i32* %v4_afc8, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afd8 = load i32, i32* @r5, align 4
  store i32 %v0_afd8, i32* %r1.global-to-local, align 4
  %v0_afdc = load i32, i32* @r4, align 4
  %v4_afe0 = inttoptr i32 %v0_afd8 to i32*
  %v5_afe0 = call i32 @function_a430(i32 %v0_afdc, i32* %v4_afe0, i32 1, i32 1)
  %v1_afe8 = urem i32 %v5_afe0, 256
  %v0_afec = load i32, i32* @r5, align 4
  store i32 %v0_afec, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aff8 = load i32, i32* @r4, align 4
  %v5_b000 = inttoptr i32 %v0_afec to i32*
  %v6_b000 = call i32 @function_a430(i32 %v0_aff8, i32* %v5_b000, i32 19, i32 0)
  %v0_b008 = load i32, i32* @r5, align 4
  store i32 %v0_b008, i32* %r1.global-to-local, align 4
  %v2_b00c = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_b00c, i32* %r3.global-to-local, align 4
  store i32 %v6_b000, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b018 = load i32, i32* @r4, align 4
  %v4_b01c = inttoptr i32 %v0_b008 to i32*
  %v5_b01c = call i32 @function_a430(i32 %v0_b018, i32* %v4_b01c, i32 25, i32 %v2_b00c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b030 = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_b030, i32* @r0, align 4
  %v7_b034 = icmp eq i32 %v3_b030, -1
  store i1 %v7_b034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b034, label %dec_label_pc_b274, label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_aee0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b048 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_b05c = call i32 @function_15600(i32 %v3_b030, i32 0, i32 3, i32 %v6_b048, i32 4)
  %v7_b060 = icmp eq i32 %v5_b05c, -1
  store i1 %v7_b060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b060, label %dec_label_pc_b26c, label %dec_label_pc_b068

dec_label_pc_b068:                                ; preds = %dec_label_pc_b040
  %v0_b068 = load i32, i32* %sb.global-to-local, align 4
  %v0_b06c = load i32, i32* @r7, align 4
  %v0_b070 = load i32, i32* %fp.global-to-local, align 4
  %v3_b070 = mul i32 %v0_b070, 65536
  store i32 %v3_b070, i32* %r3.global-to-local, align 4
  %v3_b078 = urem i32 %v0_b068, 65536
  store i32 %v3_b078, i32* %r2.global-to-local, align 4
  %v3_b07c = urem i32 %v0_b06c, 65536
  store i32 %v3_b07c, i32* %r1.global-to-local, align 4
  %v0_b080 = load i32, i32* @r6, align 4
  %v1_b080 = urem i32 %v0_b080, 256
  store i32 %v1_b080, i32* @r6, align 4
  %v0_b084 = load i32, i32* @r8, align 4
  %v2_b084 = icmp eq i32 %v0_b084, 0
  store i1 %v2_b084, i1* %cpsr_z.global-to-local, align 1
  %v3_b088 = urem i32 %v0_b070, 65536
  store i32 %v3_b088, i32* @sb, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b084, label %dec_label_pc_b4a4, label %dec_label_pc_b0a0

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b068
  %v3_b0a8 = mul i32 %v5_afc8, 65536
  %v1_b0ac = add i32 %v3_b0a8, 524288
  %v1_b0b0 = add i32 %v3_b0a8, 3407872
  %v1_b0b8 = add i32 %v3_b0a8, 1835008
  %v3_b0bc = udiv i32 %v1_b0b0, 65536
  store i32 %v3_b0bc, i32* %r1.global-to-local, align 4
  %v3_b0c0 = udiv i32 %v1_b0b8, 65536
  store i32 %v3_b0c0, i32* %r3.global-to-local, align 4
  %v3_b0c4 = xor i32 %v3_b088, 65535
  store i32 %v3_b0c4, i32* %r2.global-to-local, align 4
  %v3_b0c8 = udiv i32 %v1_b0ac, 65536
  store i32 %v3_b0c8, i32* @fp, align 4
  store i32 0, i32* @r4, align 4
  %v4_b20c = sext i8 %v5_af34 to i32
  %v2_b230 = icmp eq i32 %v1_af7c, 0
  %v2_b17c = icmp eq i32 %v1_b080, 0
  %sext = mul i32 %v5_af50, 16777216
  %v4_b22c = sdiv i32 %sext, 16777216
  br label %dec_label_pc_b1cc

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b24c
  %v2_b0e4 = phi i32 [ %v0_b23c, %dec_label_pc_b1cc ], [ %v2_b0e4.pre, %dec_label_pc_b24c ]
  %v3_b0e4 = add i32 %v2_b0e4, 9
  %v4_b0e4 = inttoptr i32 %v3_b0e4 to i8*
  store i8 47, i8* %v4_b0e4, align 1
  %v3_b0e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b0e8, i32* %r2.global-to-local, align 4
  store i32 %v5_b01c, i32* %r1.global-to-local, align 4
  %v3_b0f0 = mul i32 %v3_b0e8, 32
  store i32 %v3_b0f0, i32* %r3.global-to-local, align 4
  %v1_b0f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b0f4 = add i32 %v1_b0f4, 12
  %v3_b0f4 = inttoptr i32 %v2_b0f4 to i32*
  store i32 %v5_b01c, i32* %v3_b0f4, align 4
  %v0_b0f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0f8 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_b0f8, -8
  %v5_b0f8 = add i32 %v0_b0f8, %tmp
  %v1_b0fc = load i32, i32* @sl, align 4
  %v2_b0fc = add i32 %v1_b0fc, %v5_b0f8
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v1_b100 = add i32 %v2_b0fc, 16
  %v2_b100 = inttoptr i32 %v1_b100 to i32*
  %v3_b100 = load i32, i32* %v2_b100, align 4
  store i32 %v3_b100, i32* %r2.global-to-local, align 4
  %v1_b108 = load i32, i32* %r4.global-to-local, align 4
  %v2_b108 = add i32 %v1_b108, 16
  %v3_b108 = inttoptr i32 %v2_b108 to i32*
  store i32 %v3_b100, i32* %v3_b108, align 4
  %v1_b10c = call i32 @function_15368(i32 2048)
  %v2_b10c = trunc i32 %v1_b10c to i16
  %v3_b110 = load i32, i32* @r7, align 4
  %v4_b110 = add i32 %v3_b110, 2
  %v5_b110 = inttoptr i32 %v4_b110 to i16*
  store i16 %v2_b10c, i16* %v5_b110, align 2
  %v0_b114 = load i32, i32* %r4.global-to-local, align 4
  %v1_b114 = add i32 %v0_b114, 24
  %v2_b114 = inttoptr i32 %v1_b114 to i8*
  %v3_b114 = load i8, i8* %v2_b114, align 1
  %tmp53 = urem i8 %v3_b114, 16
  %v1_b118 = zext i8 %tmp53 to i32
  %v1_b11c = or i32 %v1_b118, 64
  store i32 %v1_b11c, i32* %r3.global-to-local, align 4
  %v1_b120 = trunc i32 %v1_b11c to i8
  store i8 %v1_b120, i8* %v2_b114, align 1
  %v0_b124 = load i32, i32* %r4.global-to-local, align 4
  %v1_b124 = add i32 %v0_b124, 24
  %v2_b124 = inttoptr i32 %v1_b124 to i8*
  %v3_b124 = load i8, i8* %v2_b124, align 1
  %v1_b128 = and i8 %v3_b124, -16
  %v1_b12c = or i8 %v1_b128, 5
  store i8 %v1_b12c, i8* %v2_b124, align 1
  store i32 %v4_b20c, i32* %r2.global-to-local, align 4
  %v2_b138 = load i32, i32* @r5, align 4
  %v3_b138 = add i32 %v2_b138, 1
  %v4_b138 = inttoptr i32 %v3_b138 to i8*
  store i8 %v5_af34, i8* %v4_b138, align 1
  %v1_b140 = call i32 @function_15368(i32 %v3_b0c0)
  %v2_b140 = trunc i32 %v1_b140 to i16
  %v3_b144 = load i32, i32* @r5, align 4
  %v4_b144 = add i32 %v3_b144, 2
  %v5_b144 = inttoptr i32 %v4_b144 to i16*
  store i16 %v2_b140, i16* %v5_b144, align 2
  %v1_b14c = call i32 @function_15368(i32 %v3_b0c4)
  %v2_b14c = trunc i32 %v1_b14c to i16
  store i32 %v4_b22c, i32* %r1.global-to-local, align 4
  store i32 %v1_af7c, i32* %r3.global-to-local, align 4
  store i1 %v2_b230, i1* %cpsr_z.global-to-local, align 1
  %v3_b15c = load i32, i32* @r5, align 4
  %v4_b15c = add i32 %v3_b15c, 4
  %v5_b15c = inttoptr i32 %v4_b15c to i16*
  store i16 %v2_b14c, i16* %v5_b15c, align 2
  %v0_b160 = load i32, i32* %r1.global-to-local, align 4
  %v1_b160 = trunc i32 %v0_b160 to i8
  %v2_b160 = load i32, i32* @r5, align 4
  %v3_b160 = add i32 %v2_b160, 8
  %v4_b160 = inttoptr i32 %v3_b160 to i8*
  store i8 %v1_b160, i8* %v4_b160, align 1
  %v0_b164 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b164, label %dec_label_pc_b168, label %dec_label_pc_b25c

dec_label_pc_b168:                                ; preds = %dec_label_pc_b0e0, %dec_label_pc_b25c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_b16c = load i32, i32* @r5, align 4
  %v3_b16c = add i32 %v2_b16c, 9
  %v4_b16c = inttoptr i32 %v3_b16c to i8*
  store i8 17, i8* %v4_b16c, align 1
  %v0_b170 = call i32 @function_1008c()
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  store i1 %v2_b17c, i1* %cpsr_z.global-to-local, align 1
  %v1_b180 = sub i32 1023, %v0_b170
  store i32 %v1_b180, i32* %r3.global-to-local, align 4
  br i1 %v2_b17c, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_b168
  %v2_b188 = load i32, i32* @r5, align 4
  %v3_b188 = add i32 %v2_b188, 16
  %v4_b188 = inttoptr i32 %v3_b188 to i32*
  store i32 %v1_b180, i32* %v4_b188, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_b168
  %v1_b184 = load i32, i32* %r4.global-to-local, align 4
  %v2_b184 = add i32 %v1_b184, 16
  %v3_b184 = inttoptr i32 %v2_b184 to i32*
  %v4_b184 = load i32, i32* %v3_b184, align 4
  store i32 %v4_b184, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r5, align 4
  %v3_b18c = add i32 %v2_b18c, 16
  %v4_b18c = inttoptr i32 %v3_b18c to i32*
  store i32 %v4_b184, i32* %v4_b18c, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_b190 = load i32, i32* @r5, align 4
  %v2_b190 = add i32 %v1_b190, 12
  %v3_b190 = inttoptr i32 %v2_b190 to i32*
  store i32 %v0_b170, i32* %v3_b190, align 4
  %v1_b198 = call i32 @function_15368(i32 %v3_b078)
  %v2_b198 = trunc i32 %v1_b198 to i16
  %v3_b19c = load i32, i32* @r6, align 4
  %v4_b19c = inttoptr i32 %v3_b19c to i16*
  store i16 %v2_b198, i16* %v4_b19c, align 2
  %v1_b1a4 = call i32 @function_15368(i32 %v3_b07c)
  %v2_b1a4 = trunc i32 %v1_b1a4 to i16
  %v3_b1a8 = load i32, i32* @r6, align 4
  %v4_b1a8 = add i32 %v3_b1a8, 2
  %v5_b1a8 = inttoptr i32 %v4_b1a8 to i16*
  store i16 %v2_b1a4, i16* %v5_b1a8, align 2
  %v0_b1ac = load i32, i32* @fp, align 4
  %v1_b1b0 = call i32 @function_15368(i32 %v0_b1ac)
  %v2_b1b0 = trunc i32 %v1_b1b0 to i16
  %v3_b1b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1b4, i32* %r3.global-to-local, align 4
  %v1_b1b8 = add i32 %v3_b1b4, 1
  store i32 %v1_b1b8, i32* @r4, align 4
  %v1_b1bc = load i32, i32* @r8, align 4
  %v9_b1bc = icmp eq i32 %v1_b1b8, %v1_b1bc
  store i1 %v9_b1bc, i1* %cpsr_z.global-to-local, align 1
  %v3_b1c0 = load i32, i32* @r6, align 4
  %v4_b1c0 = add i32 %v3_b1c0, 4
  %v5_b1c0 = inttoptr i32 %v4_b1c0 to i16*
  store i16 %v2_b1b0, i16* %v5_b1c0, align 2
  %v0_b1c4 = load i32, i32* @r4, align 4
  store i32 %v0_b1c4, i32* %stack_var_-44, align 4
  %v6_b1c8 = icmp slt i32 %v1_b1b8, %v1_b1bc
  br i1 %v6_b1c8, label %dec_label_pc_b1cc, label %dec_label_pc_b280

dec_label_pc_b1cc:                                ; preds = %bb, %dec_label_pc_b0a0
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_b1d8 = call i32 @function_13d28(i32 1510, i32 4)
  store i32 %v2_aefc, i32* %r2.global-to-local, align 4
  %v3_b1e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1e0, i32* %r3.global-to-local, align 4
  %v2_b1e4 = load i32, i32* @r4, align 4
  %v5_b1e4 = mul i32 %v2_b1e4, 4
  %v6_b1e4 = add i32 %v5_b1e4, %v2_aefc
  %v7_b1e4 = inttoptr i32 %v6_b1e4 to i32*
  store i32 %v2_b1d8, i32* %v7_b1e4, align 4
  %v0_b1e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b1e8 = load i32, i32* %r3.global-to-local, align 4
  %v4_b1e8 = mul i32 %v1_b1e8, 4
  %v5_b1e8 = add i32 %v4_b1e8, %v0_b1e8
  %v6_b1e8 = inttoptr i32 %v5_b1e8 to i32*
  %v7_b1e8 = load i32, i32* %v6_b1e8, align 4
  store i32 %v7_b1e8, i32* %r4.global-to-local, align 4
  %v1_b1ec = inttoptr i32 %v7_b1e8 to i8*
  %v2_b1ec = load i8, i8* %v1_b1ec, align 1
  %tmp54 = urem i8 %v2_b1ec, 16
  %v1_b1f0 = zext i8 %tmp54 to i32
  %v1_b1f4 = or i32 %v1_b1f0, 64
  store i32 %v1_b1f4, i32* %r2.global-to-local, align 4
  %v1_b1f8 = trunc i32 %v1_b1f4 to i8
  store i8 %v1_b1f8, i8* %v1_b1ec, align 1
  %v0_b1fc = load i32, i32* %r4.global-to-local, align 4
  %v1_b1fc = inttoptr i32 %v0_b1fc to i8*
  %v2_b1fc = load i8, i8* %v1_b1fc, align 1
  %v1_b200 = and i8 %v2_b1fc, -16
  %v1_b204 = or i8 %v1_b200, 5
  store i8 %v1_b204, i8* %v1_b1fc, align 1
  store i32 %v4_b20c, i32* %r3.global-to-local, align 4
  %v2_b210 = load i32, i32* %r4.global-to-local, align 4
  %v3_b210 = add i32 %v2_b210, 1
  %v4_b210 = inttoptr i32 %v3_b210 to i8*
  store i8 %v5_af34, i8* %v4_b210, align 1
  %v1_b218 = call i32 @function_15368(i32 %v3_b0bc)
  %v2_b218 = trunc i32 %v1_b218 to i16
  %v3_b21c = load i32, i32* %r4.global-to-local, align 4
  %v4_b21c = add i32 %v3_b21c, 2
  %v5_b21c = inttoptr i32 %v4_b21c to i16*
  store i16 %v2_b218, i16* %v5_b21c, align 2
  %v0_b220 = load i32, i32* @sb, align 4
  %v1_b224 = call i32 @function_15368(i32 %v0_b220)
  %v2_b224 = trunc i32 %v1_b224 to i16
  store i32 %v1_af7c, i32* %r1.global-to-local, align 4
  store i32 %v4_b22c, i32* %r2.global-to-local, align 4
  store i1 %v2_b230, i1* %cpsr_z.global-to-local, align 1
  %v3_b234 = load i32, i32* %r4.global-to-local, align 4
  %v4_b234 = add i32 %v3_b234, 4
  %v5_b234 = inttoptr i32 %v4_b234 to i16*
  store i16 %v2_b224, i16* %v5_b234, align 2
  %v0_b238 = load i32, i32* %r2.global-to-local, align 4
  %v1_b238 = trunc i32 %v0_b238 to i8
  %v2_b238 = load i32, i32* %r4.global-to-local, align 4
  %v3_b238 = add i32 %v2_b238, 8
  %v4_b238 = inttoptr i32 %v3_b238 to i8*
  store i8 %v1_b238, i8* %v4_b238, align 1
  %v0_b23c = load i32, i32* %r4.global-to-local, align 4
  %v1_b23c = add i32 %v0_b23c, 24
  store i32 %v1_b23c, i32* @r5, align 4
  %v1_b240 = add i32 %v0_b23c, 44
  store i32 %v1_b240, i32* @r6, align 4
  %v1_b244 = add i32 %v0_b23c, 20
  store i32 %v1_b244, i32* @r7, align 4
  %v0_b248 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b248, label %dec_label_pc_b0e0, label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b1cc
  %v1_b250 = call i32 @function_15368(i32 16384)
  %v2_b250 = trunc i32 %v1_b250 to i16
  %v3_b254 = load i32, i32* %r4.global-to-local, align 4
  %v4_b254 = add i32 %v3_b254, 6
  %v5_b254 = inttoptr i32 %v4_b254 to i16*
  store i16 %v2_b250, i16* %v5_b254, align 2
  %v2_b0e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b25c:                                ; preds = %dec_label_pc_b0e0
  %v1_b260 = call i32 @function_15368(i32 16384)
  %v2_b260 = trunc i32 %v1_b260 to i16
  %v3_b264 = load i32, i32* @r5, align 4
  %v4_b264 = add i32 %v3_b264, 6
  %v5_b264 = inttoptr i32 %v4_b264 to i16*
  store i16 %v2_b260, i16* %v5_b264, align 2
  br label %dec_label_pc_b168

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b040
  store i32 %v3_b030, i32* @r0, align 4
  %v1_b270 = call i32 @function_1663c(i32 %v3_b030)
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_aee0, %dec_label_pc_b26c
  %v1_b27c = phi i32 [ %v3_b030, %dec_label_pc_aee0 ], [ %v1_b270, %dec_label_pc_b26c ]
  store i32 %v3_aee0, i32* %r4.global-to-local, align 4
  store i32 %v18_aee0, i32* %sb.global-to-local, align 4
  store i32 %v24_aee0, i32* %fp.global-to-local, align 4
  ret i32 %v1_b27c

dec_label_pc_b280:                                ; preds = %bb
  store i32 %v5_afc8, i32* %r1.global-to-local, align 4
  %v1_b288 = add i32 %v5_afc8, 8
  store i32 %v1_b288, i32* %r3.global-to-local, align 4
  %v0_b298.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b294.preheader

dec_label_pc_b294.preheader:                      ; preds = %dec_label_pc_b280, %dec_label_pc_b4a4
  %v0_b298.pre = phi i32 [ %v0_b298.pre.pre, %dec_label_pc_b280 ], [ 0, %dec_label_pc_b4a4 ]
  %stack_var_-108.0.ph = phi i32 [ %v1_b288, %dec_label_pc_b280 ], [ %v1_b4ac, %dec_label_pc_b4a4 ]
  %storemerge = add i32 %v5_afc8, 52
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  %v3_b404 = icmp eq i32 %v5_b01c, -1
  %v8_b404 = icmp eq i32 %v5_b01c, -1
  %v2_b46c = icmp eq i32 %v1_b080, 0
  %v2_b488 = icmp eq i32 %v1_afe8, 0
  br label %dec_label_pc_b294

dec_label_pc_b294:                                ; preds = %dec_label_pc_b294, %dec_label_pc_b324, %dec_label_pc_b294.preheader
  %v0_b298 = phi i32 [ %v0_b298.pre, %dec_label_pc_b294.preheader ], [ 0, %dec_label_pc_b294 ], [ %v1_b3c4, %dec_label_pc_b324 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b298 = icmp eq i32 %v0_b298, 0
  store i1 %v2_b298, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b298, label %dec_label_pc_b294, label %dec_label_pc_b2a4

dec_label_pc_b2a4:                                ; preds = %dec_label_pc_b294
  br label %dec_label_pc_b2a8

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b324, %dec_label_pc_b2a4
  %v1_b2bc = phi i32 [ %v1_b3c0, %dec_label_pc_b324 ], [ 0, %dec_label_pc_b2a4 ]
  %v5_b2ac = mul i32 %v1_b2bc, 24
  %v1_b2b0 = load i32, i32* @sl, align 4
  %v2_b2b0 = add i32 %v1_b2b0, %v5_b2ac
  store i32 %v2_b2b0, i32* %r3.global-to-local, align 4
  store i32 %v2_aefc, i32* %r1.global-to-local, align 4
  %v1_b2b8 = add i32 %v2_b2b0, 20
  %v2_b2b8 = inttoptr i32 %v1_b2b8 to i8*
  %v3_b2b8 = load i8, i8* %v2_b2b8, align 1
  %v4_b2b8 = zext i8 %v3_b2b8 to i32
  store i32 %v4_b2b8, i32* %r2.global-to-local, align 4
  %v4_b2bc = mul i32 %v1_b2bc, 4
  %v5_b2bc = add i32 %v4_b2bc, %v2_aefc
  %v6_b2bc = inttoptr i32 %v5_b2bc to i32*
  %v7_b2bc = load i32, i32* %v6_b2bc, align 4
  store i32 %v7_b2bc, i32* @r5, align 4
  %v7_b2c0 = icmp eq i8 %v3_b2b8, 31
  store i1 %v7_b2c0, i1* %cpsr_z.global-to-local, align 1
  %v1_b2c4 = add i32 %v7_b2bc, 24
  store i32 %v1_b2c4, i32* @r6, align 4
  %v1_b2c8 = add i32 %v7_b2bc, 44
  store i32 %v1_b2c8, i32* @r7, align 4
  %tmp55 = icmp ult i8 %v3_b2b8, 32
  br i1 %tmp55, label %dec_label_pc_b3d4, label %dec_label_pc_b2d0

dec_label_pc_b2d0:                                ; preds = %dec_label_pc_b2a8
  store i32 %v5_b01c, i32* %r2.global-to-local, align 4
  store i1 %v8_b404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b404, label %dec_label_pc_b410, label %dec_label_pc_b2dc

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b2d0
  store i32 65535, i32* @r4, align 4
  %v0_b2e4 = load i32, i32* @sb, align 4
  %v9_b2e4 = icmp eq i32 %v0_b2e4, 65535
  store i1 %v9_b2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2e4, label %dec_label_pc_b428, label %dec_label_pc_b2ec

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b410.dec_label_pc_b2ec_crit_edge, %dec_label_pc_b2dc
  %v1_b2f0 = phi i32 [ %v1_b2f0.pre, %dec_label_pc_b410.dec_label_pc_b2ec_crit_edge ], [ 65535, %dec_label_pc_b2dc ]
  store i32 %v3_b078, i32* %r3.global-to-local, align 4
  %v9_b2f0 = icmp eq i32 %v3_b078, %v1_b2f0
  store i1 %v9_b2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f0, label %dec_label_pc_b450, label %dec_label_pc_b2f8

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b428, %dec_label_pc_b2ec
  %v1_b2fc = phi i32 [ %v1_b448, %dec_label_pc_b428 ], [ %v1_b2f0, %dec_label_pc_b2ec ]
  store i32 %v3_b07c, i32* %r1.global-to-local, align 4
  %v9_b2fc = icmp eq i32 %v3_b07c, %v1_b2fc
  store i1 %v9_b2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2fc, label %dec_label_pc_b464, label %dec_label_pc_b304

dec_label_pc_b304:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b2f8
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  store i1 %v2_b46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b46c, label %dec_label_pc_b480, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_b304
  %v1_b30c = load i32, i32* @r5, align 4
  %v2_b30c = add i32 %v1_b30c, 16
  %v3_b30c = inttoptr i32 %v2_b30c to i32*
  %v4_b30c = load i32, i32* %v3_b30c, align 4
  store i32 %v4_b30c, i32* %r3.global-to-local, align 4
  %v2_b310 = load i32, i32* @r6, align 4
  %v3_b310 = add i32 %v2_b310, 16
  %v4_b310 = inttoptr i32 %v3_b310 to i32*
  store i32 %v4_b30c, i32* %v4_b310, align 4
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %bb52, %.thread4
  store i32 %v1_afe8, i32* %r3.global-to-local, align 4
  store i1 %v2_b488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b488, label %dec_label_pc_b324, label %dec_label_pc_b494

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b480, %dec_label_pc_b494
  %v2_b328 = load i32, i32* @r5, align 4
  %v3_b328 = add i32 %v2_b328, 10
  %v4_b328 = inttoptr i32 %v3_b328 to i16*
  store i16 0, i16* %v4_b328, align 2
  %v0_b32c = load i32, i32* @r5, align 4
  store i32 %v0_b32c, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b334 = call i32 @function_e5a4(i32 %v0_b32c, i32 20)
  %v3_b334 = trunc i32 %v2_b334 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b33c = load i32, i32* @r5, align 4
  %v4_b33c = add i32 %v3_b33c, 10
  %v5_b33c = inttoptr i32 %v4_b33c to i16*
  store i16 %v3_b334, i16* %v5_b33c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b344 = load i32, i32* %r2.global-to-local, align 4
  %v1_b344 = trunc i32 %v0_b344 to i16
  %v2_b344 = load i32, i32* @r6, align 4
  %v3_b344 = add i32 %v2_b344, 10
  %v4_b344 = inttoptr i32 %v3_b344 to i16*
  store i16 %v1_b344, i16* %v4_b344, align 2
  %v0_b348 = load i32, i32* @r6, align 4
  store i32 %v0_b348, i32* @r0, align 4
  %v2_b34c = call i32 @function_e5a4(i32 %v0_b348, i32 20)
  %v3_b34c = trunc i32 %v2_b34c to i16
  %v3_b350 = load i32, i32* @r6, align 4
  %v4_b350 = add i32 %v3_b350, 10
  %v5_b350 = inttoptr i32 %v4_b350 to i16*
  store i16 %v3_b34c, i16* %v5_b350, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b358 = load i32, i32* @r7, align 4
  %v3_b358 = add i32 %v2_b358, 6
  %v4_b358 = inttoptr i32 %v3_b358 to i16*
  store i16 0, i16* %v4_b358, align 2
  %v0_b35c = load i32, i32* @r7, align 4
  store i32 %v0_b35c, i32* @r1, align 4
  %v1_b360 = add i32 %v0_b35c, 4
  %v2_b360 = inttoptr i32 %v1_b360 to i16*
  %v3_b360 = load i16, i16* %v2_b360, align 2
  %v4_b360 = zext i16 %v3_b360 to i32
  store i32 %v4_b360, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r3.global-to-local, align 4
  %v0_b368 = load i32, i32* @r6, align 4
  %v4_b36c = call i32 @function_e5f4(i32 %v0_b368, i32 %v0_b35c, i32 %v4_b360, i32 %stack_var_-108.0.ph)
  %v5_b36c = trunc i32 %v4_b36c to i16
  %v3_b370 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b370, i32* %r2.global-to-local, align 4
  %v3_b374 = mul i32 %v3_b370, 32
  store i32 %v3_b374, i32* %r3.global-to-local, align 4
  %v0_b378 = load i32, i32* @r5, align 4
  %v1_b378 = add i32 %v0_b378, 16
  %v2_b378 = inttoptr i32 %v1_b378 to i32*
  %v3_b378 = load i32, i32* %v2_b378, align 4
  %v5_b37c = mul i32 %v3_b370, 24
  store i32 %v5_b37c, i32* %r3.global-to-local, align 4
  %v1_b380 = load i32, i32* @sl, align 4
  %v2_b380 = add i32 %v1_b380, %v5_b37c
  store i32 %v2_b380, i32* @lr, align 4
  %v2_b384 = add i32 %v2_b380, 4
  %v3_b384 = inttoptr i32 %v2_b384 to i32*
  store i32 %v3_b378, i32* %v3_b384, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b390 = load i32, i32* @r7, align 4
  %v4_b390 = add i32 %v3_b390, 6
  %v5_b390 = inttoptr i32 %v4_b390 to i16*
  store i16 %v5_b36c, i16* %v5_b390, align 2
  %v0_b398 = load i32, i32* %r1.global-to-local, align 4
  %v1_b398 = trunc i32 %v0_b398 to i16
  %v2_b398 = load i32, i32* %r3.global-to-local, align 4
  %v3_b398 = load i32, i32* @sl, align 4
  %v4_b398 = add i32 %v3_b398, %v2_b398
  %v5_b398 = inttoptr i32 %v4_b398 to i16*
  store i16 %v1_b398, i16* %v5_b398, align 2
  %v0_b39c = load i32, i32* %r2.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b39c to i16
  %v2_b39c = load i32, i32* @lr, align 4
  %v3_b39c = add i32 %v2_b39c, 2
  %v4_b39c = inttoptr i32 %v3_b39c to i16*
  store i16 %v1_b39c, i16* %v4_b39c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b3a4 = load i32, i32* @r5, align 4
  store i32 %v0_b3a4, i32* @r1, align 4
  store i32 %v3_b030, i32* @r0, align 4
  %v0_b3ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b3ac, i32* @r2, align 4
  %v0_b3b8 = call i32 @function_155b4()
  %v3_b3bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3bc, i32* %r3.global-to-local, align 4
  %v1_b3c0 = add i32 %v3_b3bc, 1
  %v1_b3c4 = load i32, i32* @r8, align 4
  %v9_b3c4 = icmp eq i32 %v1_b3c0, %v1_b3c4
  store i1 %v9_b3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b3c0, i32* %stack_var_-44, align 4
  %v6_b3cc = icmp slt i32 %v1_b3c0, %v1_b3c4
  br i1 %v6_b3cc, label %dec_label_pc_b2a8, label %dec_label_pc_b294

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b2a8
  %v1_b3d4 = add i32 %v2_b2b0, 16
  %v2_b3d4 = inttoptr i32 %v1_b3d4 to i32*
  %v3_b3d4 = load i32, i32* %v2_b3d4, align 4
  %v1_b3d8 = call i32 @function_154ec(i32 %v3_b3d4)
  store i32 %v1_b3d8, i32* %r4.global-to-local, align 4
  %v0_b3e0 = call i32 @function_1008c()
  %v3_b3e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3e4, i32* %r2.global-to-local, align 4
  %v5_b3ec = mul i32 %v3_b3e4, 24
  %v1_b3f0 = load i32, i32* @sl, align 4
  %v2_b3f0 = add i32 %v1_b3f0, %v5_b3ec
  store i32 %v2_b3f0, i32* %r3.global-to-local, align 4
  %v1_b3f4 = add i32 %v2_b3f0, 20
  %v2_b3f4 = inttoptr i32 %v1_b3f4 to i8*
  %v3_b3f4 = load i8, i8* %v2_b3f4, align 1
  %v4_b3f4 = zext i8 %v3_b3f4 to i32
  store i32 %v4_b3f4, i32* %r2.global-to-local, align 4
  %v0_b3f8 = load i32, i32* %r4.global-to-local, align 4
  %v7_b3f8 = lshr i32 %v0_b3e0, %v4_b3f4
  %v8_b3f8 = add i32 %v7_b3f8, %v0_b3f8
  %v1_b3fc = call i32 @function_15344(i32 %v8_b3f8)
  store i32 %v5_b01c, i32* %r2.global-to-local, align 4
  store i1 %v8_b404, i1* %cpsr_z.global-to-local, align 1
  %v1_b408 = load i32, i32* @r5, align 4
  %v2_b408 = add i32 %v1_b408, 16
  %v3_b408 = inttoptr i32 %v2_b408 to i32*
  store i32 %v1_b3fc, i32* %v3_b408, align 4
  br i1 %v3_b404, label %dec_label_pc_b410, label %dec_label_pc_b2dc

dec_label_pc_b410:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b2d0
  %v0_b410 = call i32 @function_1008c()
  store i32 65535, i32* @r4, align 4
  %v0_b41c = load i32, i32* @sb, align 4
  %v9_b41c = icmp eq i32 %v0_b41c, 65535
  store i1 %v9_b41c, i1* %cpsr_z.global-to-local, align 1
  %v1_b420 = load i32, i32* @r5, align 4
  %v2_b420 = add i32 %v1_b420, 12
  %v3_b420 = inttoptr i32 %v2_b420 to i32*
  store i32 %v0_b410, i32* %v3_b420, align 4
  br i1 %v9_b41c, label %dec_label_pc_b428, label %dec_label_pc_b410.dec_label_pc_b2ec_crit_edge

dec_label_pc_b410.dec_label_pc_b2ec_crit_edge:    ; preds = %dec_label_pc_b410
  %v1_b2f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b2ec

dec_label_pc_b428:                                ; preds = %dec_label_pc_b410, %dec_label_pc_b2dc
  %v0_b428 = call i32 @function_1008c()
  %v3_b430 = urem i32 %v0_b428, 65536
  %v1_b438 = sub nsw i32 999, %v3_b430
  store i32 %v1_b438, i32* %r3.global-to-local, align 4
  %v1_b43c = trunc i32 %v0_b428 to i16
  %v2_b43c = load i32, i32* @r5, align 4
  %v3_b43c = add i32 %v2_b43c, 4
  %v4_b43c = inttoptr i32 %v3_b43c to i16*
  store i16 %v1_b43c, i16* %v4_b43c, align 2
  %v0_b440 = load i32, i32* %r3.global-to-local, align 4
  %v1_b440 = trunc i32 %v0_b440 to i16
  %v2_b440 = load i32, i32* @r6, align 4
  %v3_b440 = add i32 %v2_b440, 4
  %v4_b440 = inttoptr i32 %v3_b440 to i16*
  store i16 %v1_b440, i16* %v4_b440, align 2
  store i32 %v3_b078, i32* %r3.global-to-local, align 4
  %v1_b448 = load i32, i32* @r4, align 4
  %v9_b448 = icmp eq i32 %v3_b078, %v1_b448
  store i1 %v9_b448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b448, label %dec_label_pc_b450, label %dec_label_pc_b2f8

dec_label_pc_b450:                                ; preds = %dec_label_pc_b428, %dec_label_pc_b2ec
  %v0_b450 = call i32 @function_1008c()
  %v1_b450 = trunc i32 %v0_b450 to i16
  store i32 %v3_b07c, i32* %r1.global-to-local, align 4
  %v1_b458 = load i32, i32* @r4, align 4
  %v9_b458 = icmp eq i32 %v3_b07c, %v1_b458
  store i1 %v9_b458, i1* %cpsr_z.global-to-local, align 1
  %v3_b45c = load i32, i32* @r5, align 4
  %v4_b45c = add i32 %v3_b45c, 44
  %v5_b45c = inttoptr i32 %v4_b45c to i16*
  store i16 %v1_b450, i16* %v5_b45c, align 2
  br i1 %v9_b458, label %dec_label_pc_b464, label %dec_label_pc_b304

dec_label_pc_b464:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b2f8
  %v0_b464 = call i32 @function_1008c()
  %v1_b464 = trunc i32 %v0_b464 to i16
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  store i1 %v2_b46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b46c, label %.thread18, label %bb52

.thread18:                                        ; preds = %dec_label_pc_b464
  %v3_b47419 = load i32, i32* @r7, align 4
  %v4_b47420 = add i32 %v3_b47419, 2
  %v5_b47421 = inttoptr i32 %v4_b47420 to i16*
  store i16 %v1_b464, i16* %v5_b47421, align 2
  br label %dec_label_pc_b480

bb52:                                             ; preds = %dec_label_pc_b464
  %v1_b470 = load i32, i32* @r5, align 4
  %v2_b470 = add i32 %v1_b470, 16
  %v3_b470 = inttoptr i32 %v2_b470 to i32*
  %v4_b470 = load i32, i32* %v3_b470, align 4
  store i32 %v4_b470, i32* %r3.global-to-local, align 4
  %v3_b474 = load i32, i32* @r7, align 4
  %v4_b474 = add i32 %v3_b474, 2
  %v5_b474 = inttoptr i32 %v4_b474 to i16*
  store i16 %v1_b464, i16* %v5_b474, align 2
  %v1_b478 = load i32, i32* %r3.global-to-local, align 4
  %v2_b478 = load i32, i32* @r6, align 4
  %v3_b478 = add i32 %v2_b478, 16
  %v4_b478 = inttoptr i32 %v3_b478 to i32*
  store i32 %v1_b478, i32* %v4_b478, align 4
  br label %dec_label_pc_b318

dec_label_pc_b480:                                ; preds = %.thread18, %dec_label_pc_b304
  %v0_b480 = call i32 @function_1008c()
  store i32 %v1_afe8, i32* %r3.global-to-local, align 4
  store i1 %v2_b488, i1* %cpsr_z.global-to-local, align 1
  %v1_b48c = load i32, i32* @r6, align 4
  %v2_b48c = add i32 %v1_b48c, 16
  %v3_b48c = inttoptr i32 %v2_b48c to i32*
  store i32 %v0_b480, i32* %v3_b48c, align 4
  br i1 %v2_b488, label %dec_label_pc_b324, label %dec_label_pc_b494

dec_label_pc_b494:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b480
  %v0_b494 = load i32, i32* @r7, align 4
  %v1_b494 = add i32 %v0_b494, 8
  store i32 %v5_afc8, i32* %r1.global-to-local, align 4
  %v2_b49c = inttoptr i32 %v1_b494 to i16*
  %v3_b49c = call i32 @function_1028c(i16* %v2_b49c, i32 %v5_afc8)
  br label %dec_label_pc_b324

dec_label_pc_b4a4:                                ; preds = %dec_label_pc_b068
  store i32 %v5_afc8, i32* %r3.global-to-local, align 4
  %v1_b4ac = add i32 %v5_afc8, 8
  store i32 %v1_b4ac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b294.preheader

; uselistorder directives
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i16 %v1_b464, { 1, 0 }
  uselistorder i32 %v1_b448, { 1, 0 }
  uselistorder i32 %v0_b428, { 1, 0 }
  uselistorder i32 %v1_b3c4, { 1, 2, 0 }
  uselistorder i32 %v1_b3c0, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b370, { 1, 0, 2 }
  uselistorder i32 %v7_b2bc, { 1, 0, 2 }
  uselistorder i1 %v2_b488, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b46c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b23c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_b170, { 1, 0 }
  uselistorder i32 %v4_b22c, { 1, 0 }
  uselistorder i1 %v2_b230, { 1, 0 }
  uselistorder i32 %v4_b20c, { 1, 0 }
  uselistorder i32 %v3_b0c0, { 1, 0 }
  uselistorder i32 %v3_b0bc, { 1, 0 }
  uselistorder i32 %v3_b0a8, { 2, 1, 0 }
  uselistorder i32 %v3_b088, { 1, 0 }
  uselistorder i32 %v1_b080, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_b070, { 1, 0 }
  uselistorder i1 %v7_b060, { 1, 0 }
  uselistorder i1 %v7_b034, { 1, 0 }
  uselistorder i32 %v3_b030, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_b01c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_afe8, { 1, 0, 2 }
  uselistorder i32 %v5_afc8, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_af7c, { 1, 0, 2 }
  uselistorder i8 %v5_af34, { 2, 0, 1 }
  uselistorder i32 %v2_aefc, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 15, 3, 9, 10, 11, 12, 13, 14, 16, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 22, 23, 24, 26, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 10, 11, 12, 15, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 29, 28, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b494, { 1, 0 }
  uselistorder label %dec_label_pc_b324, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b294, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b294.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_b168, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 1, 0 }
}

define i32 @function_b4c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b4c0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b4c0 = load i32, i32* @r4, align 4
  %v6_b4c0 = load i32, i32* @r5, align 4
  %v18_b4c0 = load i32, i32* @sb, align 4
  %v27_b4c0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b4dc = call i32 @function_13d28(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_b4dc, i32* @r8, align 4
  %v0_b4e8 = load i32, i32* @r6, align 4
  store i32 %v0_b4e8, i32* %r0.global-to-local, align 4
  %v2_b4ec = call i32 @function_13d28(i32 %v0_b4e8, i32 4)
  %v0_b4f0 = load i32, i32* @r5, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b500 = load i32, i32* @r4, align 4
  store i32 %v0_b500, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @function_a430(i32 %v0_b500, i32* %v5_b504, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r1.global-to-local, align 4
  %v0_b520 = load i32, i32* @r4, align 4
  store i32 %v0_b520, i32* %r0.global-to-local, align 4
  %v6_b528 = inttoptr i32 %v0_b51c to i32*
  %v7_b528 = call i32 @function_a430(i32 %v0_b520, i32* %v6_b528, i32 3, i32 65535)
  %v0_b52c = load i32, i32* @r5, align 4
  store i32 %v0_b52c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b528, i32* @r7, align 4
  %v0_b53c = load i32, i32* @r4, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v4_b540 = inttoptr i32 %v0_b52c to i32*
  %v5_b540 = call i32 @function_a430(i32 %v0_b53c, i32* %v4_b540, i32 4, i32 64)
  %v0_b54c = load i32, i32* @r5, align 4
  store i32 %v0_b54c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b558 = load i32, i32* @r4, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v6_b560 = inttoptr i32 %v0_b54c to i32*
  %v7_b560 = call i32 @function_a430(i32 %v0_b558, i32* %v6_b560, i32 5, i32 1)
  %v1_b56c = urem i32 %v7_b560, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b574 = load i32, i32* @r5, align 4
  store i32 %v0_b574, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v5_b584 = inttoptr i32 %v0_b574 to i32*
  %v6_b584 = call i32 @function_a430(i32 %v0_b57c, i32* %v5_b584, i32 7, i32 65535)
  %v3_b58c = urem i32 %v6_b584, 65536
  %v0_b590 = load i32, i32* @r5, align 4
  store i32 %v0_b590, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b59c = load i32, i32* @r4, align 4
  store i32 %v0_b59c, i32* %r0.global-to-local, align 4
  %v5_b5a4 = inttoptr i32 %v0_b590 to i32*
  %v6_b5a4 = call i32 @function_a430(i32 %v0_b59c, i32* %v5_b5a4, i32 11, i32 0)
  %v1_b5ac = urem i32 %v6_b5a4, 256
  %v0_b5b0 = load i32, i32* @r5, align 4
  store i32 %v0_b5b0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5bc = load i32, i32* @r4, align 4
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  %v5_b5c4 = inttoptr i32 %v0_b5b0 to i32*
  %v6_b5c4 = call i32 @function_a430(i32 %v0_b5bc, i32* %v5_b5c4, i32 12, i32 1)
  %v0_b5d0 = load i32, i32* @r5, align 4
  store i32 %v0_b5d0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5dc = load i32, i32* @r4, align 4
  store i32 %v0_b5dc, i32* %r0.global-to-local, align 4
  %v5_b5e4 = inttoptr i32 %v0_b5d0 to i32*
  %v6_b5e4 = call i32 @function_a430(i32 %v0_b5dc, i32* %v5_b5e4, i32 13, i32 1)
  %v1_b5ec = urem i32 %v6_b5e4, 256
  %v0_b5f0 = load i32, i32* @r5, align 4
  store i32 %v0_b5f0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b5fc = load i32, i32* @r4, align 4
  store i32 %v0_b5fc, i32* %r0.global-to-local, align 4
  %v5_b604 = inttoptr i32 %v0_b5f0 to i32*
  %v6_b604 = call i32 @function_a430(i32 %v0_b5fc, i32* %v5_b604, i32 14, i32 0)
  %v0_b610 = load i32, i32* @r5, align 4
  store i32 %v0_b610, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b61c = load i32, i32* @r4, align 4
  store i32 %v0_b61c, i32* %r0.global-to-local, align 4
  %v5_b624 = inttoptr i32 %v0_b610 to i32*
  %v6_b624 = call i32 @function_a430(i32 %v0_b61c, i32* %v5_b624, i32 15, i32 0)
  %v1_b62c = urem i32 %v6_b624, 256
  %v0_b630 = load i32, i32* @r5, align 4
  store i32 %v0_b630, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b63c = load i32, i32* @r4, align 4
  store i32 %v0_b63c, i32* %r0.global-to-local, align 4
  %v5_b644 = inttoptr i32 %v0_b630 to i32*
  %v6_b644 = call i32 @function_a430(i32 %v0_b63c, i32* %v5_b644, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b658 = load i32, i32* @r5, align 4
  store i32 %v0_b658, i32* %r1.global-to-local, align 4
  %v0_b65c = load i32, i32* @r4, align 4
  store i32 %v0_b65c, i32* %r0.global-to-local, align 4
  %v5_b664 = inttoptr i32 %v0_b658 to i32*
  %v6_b664 = call i32 @function_a430(i32 %v0_b65c, i32* %v5_b664, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b674 = load i32, i32* @r5, align 4
  store i32 %v0_b674, i32* %r1.global-to-local, align 4
  %v0_b678 = load i32, i32* @r4, align 4
  store i32 %v0_b678, i32* %r0.global-to-local, align 4
  %v4_b67c = inttoptr i32 %v0_b674 to i32*
  %v5_b67c = call i32 @function_a430(i32 %v0_b678, i32* %v4_b67c, i32 1, i32 1)
  %v1_b684 = urem i32 %v5_b67c, 256
  store i32 %v1_b684, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b698 = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_b698, i32* @r0, align 4
  %v7_b69c = icmp eq i32 %v3_b698, -1
  store i1 %v7_b69c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b698, i32* @fp, align 4
  br i1 %v7_b69c, label %dec_label_pc_b894, label %dec_label_pc_b6a8

dec_label_pc_b6a8:                                ; preds = %dec_label_pc_b4c0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b6b0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b6b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_b6c4 = call i32 @function_15600(i32 %v3_b698, i32 0, i32 3, i32 %v6_b6b0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b6c4, i32* %r0.global-to-local, align 4
  %v7_b6c8 = icmp eq i32 %v5_b6c4, -1
  store i1 %v7_b6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b6c8, label %dec_label_pc_b88c, label %dec_label_pc_b6d0

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b6a8
  %v0_b6d0 = load i32, i32* @r7, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b6d8 = urem i32 %v0_b6d0, 65536
  store i32 %v3_b6d8, i32* %r2.global-to-local, align 4
  %v0_b6dc = load i32, i32* @r6, align 4
  %v2_b6dc = icmp eq i32 %v0_b6dc, 0
  store i1 %v2_b6dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b6dc, label %dec_label_pc_baec, label %dec_label_pc_b6ec

dec_label_pc_b6ec:                                ; preds = %dec_label_pc_b6d0
  %v2_b6ec = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_b6ec, i32* @sb, align 4
  %v2_b734 = ptrtoint i32* %stack_var_-152 to i32
  %v3_b8dc = icmp eq i32 %v3_b58c, 65535
  %v2_b780 = ptrtoint i32* %stack_var_-64 to i32
  %v4_b828 = zext i8 %tmp to i32
  %v1_b82c = and i32 %v4_b828, 18
  %v2_b830 = icmp eq i32 %v1_b82c, 18
  %sext = mul i32 %v6_b504, 16777216
  %v4_b98c = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_b540, 16777216
  %v4_b9b0 = sdiv i32 %sext8, 16777216
  %v2_b9b4 = icmp eq i32 %v1_b56c, 0
  %v3_b814 = sext i16 %tmp60 to i32
  %v1_b838 = and i32 %v4_b828, 5
  %v2_b838 = icmp eq i32 %v1_b838, 0
  %v1_b944 = add i32 %v6_b664, 40
  %v1_b994 = trunc i32 %v4_b98c to i8
  %v1_ba50 = urem i32 %v6_b5a4, 2
  %tmp87 = sub nsw i32 0, %v1_ba50
  %v4_ba58 = and i32 %tmp87, 32
  %v1_ba68 = urem i32 %v6_b5c4, 2
  %tmp88 = sub nsw i32 0, %v1_ba68
  %v4_ba70 = and i32 %tmp88, 16
  %v1_ba80 = urem i32 %v6_b5e4, 2
  %tmp89 = sub nsw i32 0, %v1_ba80
  %v4_ba88 = and i32 %tmp89, 8
  %v1_ba98 = urem i32 %v6_b604, 2
  %tmp90 = sub nsw i32 0, %v1_ba98
  %v4_baa0 = and i32 %tmp90, 4
  %v1_bab0 = urem i32 %v6_b624, 2
  %tmp91 = sub nsw i32 0, %v1_bab0
  %v3_bab8 = and i32 %tmp91, 2
  %v1_bac8 = urem i32 %v6_b644, 2
  br label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b864, %dec_label_pc_b6ec
  %stack_var_-60.0 = phi i32 [ %tmp35, %dec_label_pc_b6ec ], [ %stack_var_-60.5, %dec_label_pc_b864 ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b6fc = call i32 @function_15670(i32 2, i32 1, i32 0)
  store i32 %v3_b6fc, i32* %r0.global-to-local, align 4
  %v7_b700 = icmp eq i32 %v3_b6fc, -1
  store i1 %v7_b700, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b6fc, i32* @r5, align 4
  br i1 %v7_b700, label %dec_label_pc_b864, label %dec_label_pc_b70c

dec_label_pc_b70c:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b840
  %v0_b714 = phi i32 [ %v3_b854, %dec_label_pc_b840 ], [ %v3_b6fc, %dec_label_pc_b6f0 ]
  %stack_var_-60.1 = phi i32 [ %v0_b8fc, %dec_label_pc_b840 ], [ %stack_var_-60.0, %dec_label_pc_b6f0 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b714 = call i32 @function_13a84(i32 %v0_b714, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b71c = or i32 %v3_b714, 2048
  store i32 %v1_b71c, i32* %r2.global-to-local, align 4
  %v0_b720 = load i32, i32* @r5, align 4
  store i32 %v0_b720, i32* %r0.global-to-local, align 4
  %v3_b724 = call i32 @function_13a84(i32 %v0_b720, i32 4, i32 %v1_b71c)
  store i32 %v3_b724, i32* %r0.global-to-local, align 4
  %v3_b728 = load i32, i32* %stack_var_-44, align 4
  %v5_b730 = mul i32 %v3_b728, 24
  store i32 %v2_b734, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b744 = add i32 %v5_b730, %arg2
  store i32 %v2_b744, i32* %r3.global-to-local, align 4
  %v1_b748 = add i32 %v2_b744, 20
  %v2_b748 = inttoptr i32 %v1_b748 to i8*
  %v3_b748 = load i8, i8* %v2_b748, align 1
  %v4_b748 = zext i8 %v3_b748 to i32
  store i32 %v4_b748, i32* %r2.global-to-local, align 4
  %v2_b74c = icmp ugt i8 %v3_b748, 30
  %v7_b74c = icmp eq i8 %v3_b748, 31
  store i1 %v7_b74c, i1* %cpsr_z.global-to-local, align 1
  %v2_b750 = xor i1 %v7_b74c, true
  %v3_b750 = and i1 %v2_b74c, %v2_b750
  br i1 %v3_b750, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_b70c
  %v5_b750 = add i32 %v2_b744, 16
  %v6_b750 = inttoptr i32 %v5_b750 to i32*
  %v7_b750 = load i32, i32* %v6_b750, align 4
  store i32 %v7_b750, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_b70c, %bb
  %v4_b754 = phi i32 [ %v2_b744, %dec_label_pc_b70c ], [ %v7_b750, %bb ]
  %v4_b754.stack_var_-60.1 = select i1 %v3_b750, i32 %v4_b754, i32 %stack_var_-60.1
  %v2_b758 = xor i1 %v2_b74c, true
  %v3_b758 = or i1 %v7_b74c, %v2_b758
  br i1 %v3_b758, label %dec_label_pc_b8a0, label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %bb70
  store i32 %v3_b58c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b8dc, label %dec_label_pc_b8e8, label %dec_label_pc_b770

dec_label_pc_b770:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b75c
  %stack_var_-60.3 = phi i32 [ %v1_b8cc, %dec_label_pc_b8a0 ], [ %v4_b754.stack_var_-60.1, %dec_label_pc_b75c ]
  store i32 %v3_b58c, i32* %r0.global-to-local, align 4
  %v1_b774 = call i32 @function_15368(i32 %v3_b58c)
  %v2_b774 = trunc i32 %v1_b774 to i16
  store i32 %v1_b774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b780

dec_label_pc_b780:                                ; preds = %dec_label_pc_b8e8, %dec_label_pc_b770
  %v0_b8fc = phi i32 [ %stack_var_-60.6, %dec_label_pc_b8e8 ], [ %stack_var_-60.3, %dec_label_pc_b770 ]
  %storemerge4 = phi i16 [ %v1_b8e8, %dec_label_pc_b8e8 ], [ %v2_b774, %dec_label_pc_b770 ]
  store i32 %v2_b780, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b788 = load i32, i32* @r5, align 4
  store i32 %v0_b788, i32* %r0.global-to-local, align 4
  %v3_b78c = call i32 @function_152b4(i32 %v0_b788, i32 %v2_b780, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b794 = call i32 @function_165ec(i32* null)
  store i32 %v2_b794, i32* %r0.global-to-local, align 4
  store i32 %v2_b794, i32* @r4, align 4
  %v9_b7f4 = icmp eq i32 %tmp32, %v0_b8fc
  %v4_b81c = zext i16 %storemerge4 to i32
  %. = zext i1 %v9_b7f4 to i32
  %v9_b808 = icmp eq i1 %v9_b7f4, false
  %v9_b820 = icmp eq i32 %v3_b814, %v4_b81c
  br label %dec_label_pc_b7b0

dec_label_pc_b7a0:                                ; preds = %.thread29, %dec_label_pc_b810, %dec_label_pc_b838, %bb73
  %v2_b7a0 = call i32 @function_165ec(i32* null)
  %v0_b7a4 = load i32, i32* @r4, align 4
  %v2_b7a4 = sub i32 %v2_b7a0, %v0_b7a4
  store i32 %v2_b7a4, i32* %r0.global-to-local, align 4
  %v7_b7a8 = icmp eq i32 %v2_b7a4, 10
  store i1 %v7_b7a8, i1* %cpsr_z.global-to-local, align 1
  %v8_b7ac = icmp sgt i32 %v2_b7a4, 10
  br i1 %v8_b7ac, label %dec_label_pc_b840, label %dec_label_pc_b7b0

dec_label_pc_b7b0:                                ; preds = %dec_label_pc_b7a0, %dec_label_pc_b780
  store i32 256, i32* @r2, align 4
  store i32 %v2_b6ec, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b7d0 = load i32, i32* @fp, align 4
  store i32 %v0_b7d0, i32* @r0, align 4
  %v0_b7d8 = call i32 @function_15548()
  store i32 %v0_b7d8, i32* %r2.global-to-local, align 4
  %v7_b7e0 = icmp eq i32 %v0_b7d8, -1
  store i1 %v7_b7e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b7e0, label %dec_label_pc_b894, label %dec_label_pc_b7ec

dec_label_pc_b7ec:                                ; preds = %dec_label_pc_b7b0
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b800 = icmp eq i32 %v0_b7d8, 40
  store i1 %v7_b800, i1* %cpsr_z.global-to-local, align 1
  %tmp92 = icmp ult i32 %v0_b7d8, 41
  br i1 %tmp92, label %.thread29, label %bb73

.thread29:                                        ; preds = %dec_label_pc_b7ec
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b7a0

bb73:                                             ; preds = %dec_label_pc_b7ec
  store i1 %v9_b808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b808, label %dec_label_pc_b7a0, label %dec_label_pc_b810

dec_label_pc_b810:                                ; preds = %bb73
  store i32 %v3_b814, i32* %r1.global-to-local, align 4
  store i32 %v2_b734, i32* %r3.global-to-local, align 4
  store i32 %v4_b81c, i32* %r2.global-to-local, align 4
  store i1 %v9_b820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b820, label %dec_label_pc_b828, label %dec_label_pc_b7a0

dec_label_pc_b828:                                ; preds = %dec_label_pc_b810
  store i32 %v4_b828, i32* %r2.global-to-local, align 4
  store i32 %v1_b82c, i32* %r3.global-to-local, align 4
  store i1 %v2_b830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b830, label %dec_label_pc_b8f8, label %dec_label_pc_b838

dec_label_pc_b838:                                ; preds = %dec_label_pc_b828
  store i1 %v2_b838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b838, label %dec_label_pc_b7a0, label %dec_label_pc_b840

dec_label_pc_b840:                                ; preds = %dec_label_pc_b838, %dec_label_pc_b7a0
  %v0_b840 = load i32, i32* @r5, align 4
  store i32 %v0_b840, i32* @r0, align 4
  %v1_b844 = call i32 @function_1663c(i32 %v0_b840)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b854 = call i32 @function_15670(i32 2, i32 1, i32 0)
  store i32 %v3_b854, i32* %r0.global-to-local, align 4
  %v3_b858 = icmp eq i32 %v3_b854, -1
  %v8_b858 = icmp eq i32 %v3_b854, -1
  store i1 %v8_b858, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b854, i32* @r5, align 4
  br i1 %v3_b858, label %dec_label_pc_b864, label %dec_label_pc_b70c

dec_label_pc_b864:                                ; preds = %dec_label_pc_b840, %dec_label_pc_b6f0, %dec_label_pc_b9d4
  %stack_var_-60.5 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b6f0 ], [ %v0_b8fc, %dec_label_pc_b9d4 ], [ %v0_b8fc, %dec_label_pc_b840 ]
  %v3_b864 = load i32, i32* %stack_var_-44, align 4
  %v1_b868 = add i32 %v3_b864, 1
  store i32 %v1_b868, i32* %r3.global-to-local, align 4
  %v0_b86c = load i32, i32* @r6, align 4
  %v9_b86c = icmp eq i32 %v0_b86c, %v1_b868
  store i1 %v9_b86c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b868, i32* %stack_var_-44, align 4
  %v8_b874 = icmp sgt i32 %v0_b86c, %v1_b868
  br i1 %v8_b874, label %dec_label_pc_b6f0, label %dec_label_pc_b878

dec_label_pc_b878:                                ; preds = %dec_label_pc_b864
  store i32 %v6_b664, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bafc

dec_label_pc_b88c:                                ; preds = %dec_label_pc_b6a8
  %v0_b88c = load i32, i32* @fp, align 4
  store i32 %v0_b88c, i32* @r0, align 4
  %v1_b890 = call i32 @function_1663c(i32 %v0_b88c)
  store i32 %v1_b890, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b7b0, %dec_label_pc_b4c0, %dec_label_pc_b88c
  %v1_b89c = phi i32 [ %v3_b698, %dec_label_pc_b4c0 ], [ %v1_b890, %dec_label_pc_b88c ], [ 0, %dec_label_pc_b7b0 ]
  store i32 %v3_b4c0, i32* %r4.global-to-local, align 4
  store i32 %v6_b4c0, i32* %r5.global-to-local, align 4
  store i32 %v18_b4c0, i32* %sb.global-to-local, align 4
  store i32 %v27_b4c0, i32* %lr.global-to-local, align 4
  ret i32 %v1_b89c

dec_label_pc_b8a0:                                ; preds = %bb70
  %v1_b8a0 = add i32 %v4_b754, 16
  %v2_b8a0 = inttoptr i32 %v1_b8a0 to i32*
  %v3_b8a0 = load i32, i32* %v2_b8a0, align 4
  store i32 %v3_b8a0, i32* %r0.global-to-local, align 4
  %v1_b8a4 = call i32 @function_154ec(i32 %v3_b8a0)
  store i32 %v1_b8a4, i32* %r0.global-to-local, align 4
  store i32 %v1_b8a4, i32* @r4, align 4
  %v0_b8ac = call i32 @function_1008c()
  store i32 %v0_b8ac, i32* %r0.global-to-local, align 4
  %v3_b8b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b8b0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v5_b8bc = mul i32 %v3_b8b0, 24
  %v2_b8c0 = add i32 %v5_b8bc, %arg2
  store i32 %v2_b8c0, i32* %r3.global-to-local, align 4
  %v1_b8c4 = add i32 %v2_b8c0, 20
  %v2_b8c4 = inttoptr i32 %v1_b8c4 to i8*
  %v3_b8c4 = load i8, i8* %v2_b8c4, align 1
  %v4_b8c4 = zext i8 %v3_b8c4 to i32
  store i32 %v4_b8c4, i32* %r2.global-to-local, align 4
  %v0_b8c8 = load i32, i32* @r4, align 4
  %v7_b8c8 = lshr i32 %v0_b8ac, %v4_b8c4
  %v8_b8c8 = add i32 %v7_b8c8, %v0_b8c8
  store i32 %v8_b8c8, i32* %r0.global-to-local, align 4
  %v1_b8cc = call i32 @function_15344(i32 %v8_b8c8)
  store i32 %v1_b8cc, i32* %r0.global-to-local, align 4
  store i32 %v3_b58c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b8dc, label %dec_label_pc_b8e8, label %dec_label_pc_b770

dec_label_pc_b8e8:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b75c
  %stack_var_-60.6 = phi i32 [ %v1_b8cc, %dec_label_pc_b8a0 ], [ %v4_b754.stack_var_-60.1, %dec_label_pc_b75c ]
  %v0_b8e8 = call i32 @function_1008c()
  %v1_b8e8 = trunc i32 %v0_b8e8 to i16
  store i32 %v0_b8e8, i32* %r0.global-to-local, align 4
  store i32 %v2_b734, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b780

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b828
  %v3_b8f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b8f8, i32* %r4.global-to-local, align 4
  %v1_b8fc = load i32, i32* @r8, align 4
  %v5_b8fc = mul i32 %v3_b8f8, 16
  %v6_b8fc = add i32 %v1_b8fc, %v5_b8fc
  %v7_b8fc = inttoptr i32 %v6_b8fc to i32*
  store i32 %v0_b8fc, i32* %v7_b8fc, align 4
  %v0_b900 = load i32, i32* @sl, align 4
  %v1_b900 = add i32 %v0_b900, 4
  %v2_b900 = inttoptr i32 %v1_b900 to i32*
  %v3_b900 = load i32, i32* %v2_b900, align 4
  store i32 %v3_b900, i32* %r0.global-to-local, align 4
  %v1_b904 = call i32 @function_154ec(i32 %v3_b900)
  store i32 %v1_b904, i32* %r0.global-to-local, align 4
  %v0_b908 = load i32, i32* %r4.global-to-local, align 4
  %v3_b908 = mul i32 %v0_b908, 16
  %v1_b90c = load i32, i32* @r8, align 4
  %v2_b90c = add i32 %v1_b90c, %v3_b908
  store i32 %v2_b90c, i32* %r4.global-to-local, align 4
  %v2_b910 = add i32 %v2_b90c, 4
  %v3_b910 = inttoptr i32 %v2_b910 to i32*
  store i32 %v1_b904, i32* %v3_b910, align 4
  %v0_b914 = load i32, i32* @sl, align 4
  %v1_b914 = add i32 %v0_b914, 8
  %v2_b914 = inttoptr i32 %v1_b914 to i32*
  %v3_b914 = load i32, i32* %v2_b914, align 4
  store i32 %v3_b914, i32* %r0.global-to-local, align 4
  %v3_b918 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b918, i32* %r5.global-to-local, align 4
  %v1_b91c = call i32 @function_154ec(i32 %v3_b914)
  store i32 %v1_b91c, i32* %r0.global-to-local, align 4
  %v3_b920 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b920, i32* @r4, align 4
  %v0_b924 = load i32, i32* @sl, align 4
  %v1_b924 = add i32 %v0_b924, 2
  %v2_b924 = inttoptr i32 %v1_b924 to i16*
  %v3_b924 = load i16, i16* %v2_b924, align 2
  %v4_b924 = zext i16 %v3_b924 to i32
  store i32 %v4_b924, i32* %r1.global-to-local, align 4
  %v3_b928 = mul i32 %v3_b920, 16
  %v1_b92c = load i32, i32* @r8, align 4
  %v2_b92c = add i32 %v1_b92c, %v3_b928
  store i32 %v2_b92c, i32* %r3.global-to-local, align 4
  %v3_b930 = add i32 %v2_b92c, 12
  %v4_b930 = inttoptr i32 %v3_b930 to i16*
  store i16 %v3_b924, i16* %v4_b930, align 2
  store i32 %v3_b814, i32* %r2.global-to-local, align 4
  %v0_b940 = load i32, i32* %r5.global-to-local, align 4
  %v3_b940 = mul i32 %v0_b940, 16
  store i32 %v1_b944, i32* @r7, align 4
  %v1_b948 = load i32, i32* @r8, align 4
  %v2_b948 = add i32 %v1_b948, %v3_b940
  store i32 %v2_b948, i32* @r5, align 4
  %v2_b94c = load i32, i32* %r3.global-to-local, align 4
  %v3_b94c = add i32 %v2_b94c, 14
  %v4_b94c = inttoptr i32 %v3_b94c to i16*
  store i16 %storemerge4, i16* %v4_b94c, align 2
  %v1_b950 = load i32, i32* @r5, align 4
  %v2_b950 = add i32 %v1_b950, 8
  %v3_b950 = inttoptr i32 %v2_b950 to i32*
  store i32 %v1_b91c, i32* %v3_b950, align 4
  %v0_b954 = load i32, i32* @r7, align 4
  store i32 %v0_b954, i32* @r0, align 4
  %v0_b958 = call i32 @function_14798()
  store i32 %v0_b958, i32* %r0.global-to-local, align 4
  store i32 %v2_b4ec, i32* %r3.global-to-local, align 4
  %v3_b960 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b960, i32* %r2.global-to-local, align 4
  %v2_b964 = load i32, i32* @r4, align 4
  %v5_b964 = mul i32 %v2_b964, 4
  %v6_b964 = add i32 %v5_b964, %v2_b4ec
  %v7_b964 = inttoptr i32 %v6_b964 to i32*
  store i32 %v0_b958, i32* %v7_b964, align 4
  %v0_b968 = load i32, i32* %r3.global-to-local, align 4
  %v1_b968 = load i32, i32* %r2.global-to-local, align 4
  %v4_b968 = mul i32 %v1_b968, 4
  %v5_b968 = add i32 %v4_b968, %v0_b968
  %v6_b968 = inttoptr i32 %v5_b968 to i32*
  %v7_b968 = load i32, i32* %v6_b968, align 4
  store i32 %v7_b968, i32* @r4, align 4
  %v1_b96c = inttoptr i32 %v7_b968 to i8*
  %v2_b96c = load i8, i8* %v1_b96c, align 1
  %tmp93 = urem i8 %v2_b96c, 16
  %v1_b970 = zext i8 %tmp93 to i32
  %v1_b974 = or i32 %v1_b970, 64
  store i32 %v1_b974, i32* %r3.global-to-local, align 4
  %v1_b978 = trunc i32 %v1_b974 to i8
  store i8 %v1_b978, i8* %v1_b96c, align 1
  %v0_b97c = load i32, i32* @r4, align 4
  %v1_b97c = inttoptr i32 %v0_b97c to i8*
  %v2_b97c = load i8, i8* %v1_b97c, align 1
  %v3_b97c = zext i8 %v2_b97c to i32
  %v1_b980 = and i32 %v3_b97c, 240
  %v1_b984 = or i32 %v1_b980, 5
  store i32 %v1_b984, i32* %r2.global-to-local, align 4
  %v1_b988 = trunc i32 %v1_b984 to i8
  store i8 %v1_b988, i8* %v1_b97c, align 1
  %v0_b990 = load i32, i32* @r7, align 4
  %v3_b990 = mul i32 %v0_b990, 65536
  store i32 %v3_b990, i32* %r0.global-to-local, align 4
  %v2_b994 = load i32, i32* @r4, align 4
  %v3_b994 = add i32 %v2_b994, 1
  %v4_b994 = inttoptr i32 %v3_b994 to i8*
  store i8 %v1_b994, i8* %v4_b994, align 1
  %v0_b998 = load i32, i32* %r0.global-to-local, align 4
  %v3_b998 = udiv i32 %v0_b998, 65536
  store i32 %v3_b998, i32* %r0.global-to-local, align 4
  %v1_b99c = call i32 @function_15368(i32 %v3_b998)
  %v2_b99c = trunc i32 %v1_b99c to i16
  %v3_b9a0 = load i32, i32* @r4, align 4
  %v4_b9a0 = add i32 %v3_b9a0, 2
  %v5_b9a0 = inttoptr i32 %v4_b9a0 to i16*
  store i16 %v2_b99c, i16* %v5_b9a0, align 2
  store i32 %v3_b6d8, i32* %r0.global-to-local, align 4
  %v1_b9a8 = call i32 @function_15368(i32 %v3_b6d8)
  %v2_b9a8 = trunc i32 %v1_b9a8 to i16
  store i32 %v1_b9a8, i32* %r0.global-to-local, align 4
  store i32 %v1_b56c, i32* %r1.global-to-local, align 4
  store i32 %v4_b9b0, i32* %r2.global-to-local, align 4
  store i1 %v2_b9b4, i1* %cpsr_z.global-to-local, align 1
  %v3_b9b8 = load i32, i32* @r4, align 4
  %v4_b9b8 = add i32 %v3_b9b8, 4
  %v5_b9b8 = inttoptr i32 %v4_b9b8 to i16*
  store i16 %v2_b9a8, i16* %v5_b9b8, align 2
  %v0_b9bc = load i32, i32* %r2.global-to-local, align 4
  %v1_b9bc = trunc i32 %v0_b9bc to i8
  %v2_b9bc = load i32, i32* @r4, align 4
  %v3_b9bc = add i32 %v2_b9bc, 8
  %v4_b9bc = inttoptr i32 %v3_b9bc to i8*
  store i8 %v1_b9bc, i8* %v4_b9bc, align 1
  %v0_b9c0 = load i32, i32* @r4, align 4
  %v1_b9c0 = add i32 %v0_b9c0, 20
  store i32 %v1_b9c0, i32* @sl, align 4
  %v0_b9c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9c4, label %dec_label_pc_b9d4, label %dec_label_pc_b9c8

dec_label_pc_b9c8:                                ; preds = %dec_label_pc_b8f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_b9cc = call i32 @function_15368(i32 16384)
  %v2_b9cc = trunc i32 %v1_b9cc to i16
  store i32 %v1_b9cc, i32* %r0.global-to-local, align 4
  %v3_b9d0 = load i32, i32* @r4, align 4
  %v4_b9d0 = add i32 %v3_b9d0, 6
  %v5_b9d0 = inttoptr i32 %v4_b9d0 to i16*
  store i16 %v2_b9cc, i16* %v5_b9d0, align 2
  %v2_b9d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b9d4

dec_label_pc_b9d4:                                ; preds = %dec_label_pc_b8f8, %dec_label_pc_b9c8
  %v2_b9d8 = phi i32 [ %v0_b9c0, %dec_label_pc_b8f8 ], [ %v2_b9d8.pre, %dec_label_pc_b9c8 ]
  %v3_b9d8 = add i32 %v2_b9d8, 9
  %v4_b9d8 = inttoptr i32 %v3_b9d8 to i8*
  store i8 6, i8* %v4_b9d8, align 1
  store i32 ptrtoint (i32* @global_var_2365c.93 to i32), i32* %r2.global-to-local, align 4
  %v2_b9e0 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_b9e0, i32* %r1.global-to-local, align 4
  %v1_b9e4 = load i32, i32* @r4, align 4
  %v2_b9e4 = add i32 %v1_b9e4, 12
  %v3_b9e4 = inttoptr i32 %v2_b9e4 to i32*
  store i32 %v2_b9e0, i32* %v3_b9e4, align 4
  %v3_b9e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9e8, i32* %r3.global-to-local, align 4
  %v0_b9ec = load i32, i32* @r8, align 4
  %v4_b9ec = mul i32 %v3_b9e8, 16
  %v5_b9ec = add i32 %v0_b9ec, %v4_b9ec
  %v6_b9ec = inttoptr i32 %v5_b9ec to i32*
  %v7_b9ec = load i32, i32* %v6_b9ec, align 4
  store i32 %v7_b9ec, i32* %r2.global-to-local, align 4
  store i32 %v5_b9ec, i32* %r3.global-to-local, align 4
  %v1_b9f8 = load i32, i32* @r4, align 4
  %v2_b9f8 = add i32 %v1_b9f8, 16
  %v3_b9f8 = inttoptr i32 %v2_b9f8 to i32*
  store i32 %v7_b9ec, i32* %v3_b9f8, align 4
  %v0_b9fc = load i32, i32* %r3.global-to-local, align 4
  %v1_b9fc = add i32 %v0_b9fc, 12
  %v2_b9fc = inttoptr i32 %v1_b9fc to i16*
  %v3_b9fc = load i16, i16* %v2_b9fc, align 2
  %v1_ba00 = add i32 %v0_b9fc, 8
  %v2_ba00 = inttoptr i32 %v1_ba00 to i32*
  %v3_ba00 = load i32, i32* %v2_ba00, align 4
  store i32 %v3_ba00, i32* %r1.global-to-local, align 4
  %v2_ba04 = load i32, i32* @r4, align 4
  %v3_ba04 = add i32 %v2_ba04, 20
  %v4_ba04 = inttoptr i32 %v3_ba04 to i16*
  store i16 %v3_b9fc, i16* %v4_ba04, align 2
  %v0_ba08 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba08 = load i32, i32* @sl, align 4
  %v2_ba08 = add i32 %v1_ba08, 4
  %v3_ba08 = inttoptr i32 %v2_ba08 to i32*
  store i32 %v0_ba08, i32* %v3_ba08, align 4
  %v0_ba0c = load i32, i32* @sl, align 4
  %v1_ba0c = add i32 %v0_ba0c, 13
  %v2_ba0c = inttoptr i32 %v1_ba0c to i8*
  %v3_ba0c = load i8, i8* %v2_ba0c, align 1
  %v4_ba0c = zext i8 %v3_ba0c to i32
  store i32 %v4_ba0c, i32* %r2.global-to-local, align 4
  %v0_ba10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba10 = add i32 %v0_ba10, 4
  %v2_ba10 = inttoptr i32 %v1_ba10 to i32*
  %v3_ba10 = load i32, i32* %v2_ba10, align 4
  store i32 %v3_ba10, i32* %r1.global-to-local, align 4
  %v1_ba14 = or i32 %v4_ba0c, 1
  store i32 %v1_ba14, i32* %r2.global-to-local, align 4
  %v1_ba18 = add i32 %v0_ba10, 14
  %v2_ba18 = inttoptr i32 %v1_ba18 to i16*
  %v3_ba18 = load i16, i16* %v2_ba18, align 2
  %v4_ba18 = zext i16 %v3_ba18 to i32
  store i32 %v4_ba18, i32* %r3.global-to-local, align 4
  %v1_ba1c = trunc i32 %v1_ba14 to i8
  store i8 %v1_ba1c, i8* %v2_ba0c, align 1
  %v0_ba20 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba20 = trunc i32 %v0_ba20 to i16
  %v2_ba20 = load i32, i32* @sl, align 4
  %v3_ba20 = add i32 %v2_ba20, 2
  %v4_ba20 = inttoptr i32 %v3_ba20 to i16*
  store i16 %v1_ba20, i16* %v4_ba20, align 2
  %v0_ba24 = load i32, i32* @sl, align 4
  %v1_ba24 = add i32 %v0_ba24, 12
  %v2_ba24 = inttoptr i32 %v1_ba24 to i8*
  %v3_ba24 = load i8, i8* %v2_ba24, align 1
  %v4_ba24 = zext i8 %v3_ba24 to i32
  store i32 %v4_ba24, i32* %r3.global-to-local, align 4
  %v1_ba28 = add i32 %v0_ba24, 13
  %v2_ba28 = inttoptr i32 %v1_ba28 to i8*
  %v3_ba28 = load i8, i8* %v2_ba28, align 1
  %v4_ba28 = zext i8 %v3_ba28 to i32
  %tmp94 = urem i8 %v3_ba24, 16
  %v1_ba2c = zext i8 %tmp94 to i32
  %v1_ba30 = or i32 %v1_ba2c, 128
  store i32 %v1_ba30, i32* %r3.global-to-local, align 4
  %v1_ba34 = or i32 %v4_ba28, 16
  store i32 %v1_ba34, i32* %r2.global-to-local, align 4
  %v0_ba38 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba38 = add i32 %v0_ba24, 8
  %v3_ba38 = inttoptr i32 %v2_ba38 to i32*
  store i32 %v0_ba38, i32* %v3_ba38, align 4
  %v0_ba3c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba3c = trunc i32 %v0_ba3c to i8
  %v2_ba3c = load i32, i32* @sl, align 4
  %v3_ba3c = add i32 %v2_ba3c, 12
  %v4_ba3c = inttoptr i32 %v3_ba3c to i8*
  store i8 %v1_ba3c, i8* %v4_ba3c, align 1
  %v0_ba40 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba40 = trunc i32 %v0_ba40 to i8
  %v2_ba40 = load i32, i32* @sl, align 4
  %v3_ba40 = add i32 %v2_ba40, 13
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v1_ba40, i8* %v4_ba40, align 1
  %v0_ba44 = call i32 @function_1008c()
  %v1_ba44 = trunc i32 %v0_ba44 to i16
  store i32 %v0_ba44, i32* %r0.global-to-local, align 4
  store i32 %v1_b5ac, i32* %r1.global-to-local, align 4
  %v0_ba4c = load i32, i32* @sl, align 4
  %v1_ba4c = add i32 %v0_ba4c, 13
  %v2_ba4c = inttoptr i32 %v1_ba4c to i8*
  %v3_ba4c = load i8, i8* %v2_ba4c, align 1
  %v4_ba4c = zext i8 %v3_ba4c to i32
  store i32 %v1_ba50, i32* %r2.global-to-local, align 4
  %v1_ba54 = and i32 %v4_ba4c, 223
  %v5_ba58 = or i32 %v1_ba54, %v4_ba58
  store i32 %v5_ba58, i32* %r3.global-to-local, align 4
  %v1_ba5c = trunc i32 %v5_ba58 to i8
  store i8 %v1_ba5c, i8* %v2_ba4c, align 1
  %v0_ba64 = load i32, i32* @sl, align 4
  %v1_ba64 = add i32 %v0_ba64, 13
  %v2_ba64 = inttoptr i32 %v1_ba64 to i8*
  %v3_ba64 = load i8, i8* %v2_ba64, align 1
  %v4_ba64 = zext i8 %v3_ba64 to i32
  store i32 %v1_ba68, i32* %r3.global-to-local, align 4
  %v1_ba6c = and i32 %v4_ba64, 239
  %v5_ba70 = or i32 %v1_ba6c, %v4_ba70
  store i32 %v5_ba70, i32* %r2.global-to-local, align 4
  %v1_ba74 = trunc i32 %v5_ba70 to i8
  store i8 %v1_ba74, i8* %v2_ba64, align 1
  store i32 %v1_b5ec, i32* %r1.global-to-local, align 4
  %v0_ba7c = load i32, i32* @sl, align 4
  %v1_ba7c = add i32 %v0_ba7c, 13
  %v2_ba7c = inttoptr i32 %v1_ba7c to i8*
  %v3_ba7c = load i8, i8* %v2_ba7c, align 1
  %v4_ba7c = zext i8 %v3_ba7c to i32
  store i32 %v1_ba80, i32* %r2.global-to-local, align 4
  %v1_ba84 = and i32 %v4_ba7c, 247
  %v5_ba88 = or i32 %v1_ba84, %v4_ba88
  store i32 %v5_ba88, i32* %r3.global-to-local, align 4
  %v1_ba8c = trunc i32 %v5_ba88 to i8
  store i8 %v1_ba8c, i8* %v2_ba7c, align 1
  %v0_ba94 = load i32, i32* @sl, align 4
  %v1_ba94 = add i32 %v0_ba94, 13
  %v2_ba94 = inttoptr i32 %v1_ba94 to i8*
  %v3_ba94 = load i8, i8* %v2_ba94, align 1
  %v4_ba94 = zext i8 %v3_ba94 to i32
  store i32 %v1_ba98, i32* %r3.global-to-local, align 4
  %v1_ba9c = and i32 %v4_ba94, 251
  %v5_baa0 = or i32 %v1_ba9c, %v4_baa0
  store i32 %v5_baa0, i32* %r2.global-to-local, align 4
  %v1_baa4 = trunc i32 %v5_baa0 to i8
  store i8 %v1_baa4, i8* %v2_ba94, align 1
  store i32 %v1_b62c, i32* %r1.global-to-local, align 4
  %v0_baac = load i32, i32* @sl, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v1_bab0, i32* %r2.global-to-local, align 4
  %v1_bab4 = and i32 %v4_baac, 253
  %v4_bab8 = or i32 %v1_bab4, %v3_bab8
  store i32 %v4_bab8, i32* %r3.global-to-local, align 4
  %v1_babc = trunc i32 %v4_bab8 to i8
  store i8 %v1_babc, i8* %v2_baac, align 1
  %v0_bac4 = load i32, i32* @sl, align 4
  %v1_bac4 = add i32 %v0_bac4, 13
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  %v1_bacc = and i32 %v4_bac4, 254
  store i32 %v1_bacc, i32* %r2.global-to-local, align 4
  %v2_bad0 = or i32 %v1_bacc, %v1_bac8
  store i32 %v2_bad0, i32* %r3.global-to-local, align 4
  %v1_bad4 = trunc i32 %v2_bad0 to i8
  store i8 %v1_bad4, i8* %v2_bac4, align 1
  %v3_bad8 = load i32, i32* @sl, align 4
  %v4_bad8 = add i32 %v3_bad8, 14
  %v5_bad8 = inttoptr i32 %v4_bad8 to i16*
  store i16 %v1_ba44, i16* %v5_bad8, align 2
  store i32 %v6_b664, i32* %r1.global-to-local, align 4
  %v0_bae0 = load i32, i32* @r4, align 4
  %v1_bae0 = add i32 %v0_bae0, 40
  store i32 %v1_bae0, i32* %r0.global-to-local, align 4
  %v2_bae4 = inttoptr i32 %v1_bae0 to i16*
  %v3_bae4 = call i32 @function_1028c(i16* %v2_bae4, i32 %v6_b664)
  store i32 %v3_bae4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b864

dec_label_pc_baec:                                ; preds = %dec_label_pc_b6d0
  store i32 %v6_b664, i32* %r2.global-to-local, align 4
  %.pre = add i32 %v6_b664, 40
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_b878, %dec_label_pc_baec
  %storemerge7.pre-phi = phi i32 [ %v1_b944, %dec_label_pc_b878 ], [ %.pre, %dec_label_pc_baec ]
  %v0_bb0823 = phi i32 [ %v0_b86c, %dec_label_pc_b878 ], [ 0, %dec_label_pc_baec ]
  store i32 %storemerge7.pre-phi, i32* @r7, align 4
  %storemerge5 = mul i32 %v6_b664, 65536
  %storemerge = add i32 %v6_b664, 20
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v1_bafc = add i32 %storemerge5, 1310720
  store i32 %v1_bafc, i32* %r3.global-to-local, align 4
  %v3_bb00 = udiv i32 %v1_bafc, 65536
  store i32 %v3_bb00, i32* @sl, align 4
  %v2_bc38 = icmp eq i32 %v1_b684, 0
  %v3_bb2c = icmp eq i32 %v3_b6d8, 65535
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bb04, %dec_label_pc_bc1c, %dec_label_pc_bafc
  %v0_bb08 = phi i32 [ %v0_bb0823, %dec_label_pc_bafc ], [ 0, %dec_label_pc_bc1c ], [ 0, %dec_label_pc_bb04 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb08 = icmp eq i32 %v0_bb08, 0
  store i1 %v2_bb08, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb08, label %dec_label_pc_bb04, label %dec_label_pc_bb14

dec_label_pc_bb14:                                ; preds = %dec_label_pc_bb04, %dec_label_pc_bc1c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb18

dec_label_pc_bb18:                                ; preds = %dec_label_pc_bb44, %dec_label_pc_bb14
  %v1_bb24 = phi i32 [ %v1_bc0c, %dec_label_pc_bb44 ], [ 0, %dec_label_pc_bb14 ]
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b6d8, i32* %r1.global-to-local, align 4
  %v4_bb24 = mul i32 %v1_bb24, 4
  %v5_bb24 = add i32 %v4_bb24, %v2_b4ec
  %v6_bb24 = inttoptr i32 %v5_bb24 to i32*
  %v7_bb24 = load i32, i32* %v6_bb24, align 4
  store i32 %v7_bb24, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_bb2c, i1* %cpsr_z.global-to-local, align 1
  %v1_bb30 = add i32 %v7_bb24, 20
  store i32 %v1_bb30, i32* @r5, align 4
  br i1 %v3_bb2c, label %dec_label_pc_bc30, label %dec_label_pc_bb38

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb18
  store i32 %v1_b684, i32* %r2.global-to-local, align 4
  store i1 %v2_bc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bc38, label %dec_label_pc_bb44, label %dec_label_pc_bc44

dec_label_pc_bb44:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bc30, %dec_label_pc_bc44
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb48 = load i32, i32* @r4, align 4
  %v3_bb48 = add i32 %v2_bb48, 10
  %v4_bb48 = inttoptr i32 %v3_bb48 to i16*
  store i16 0, i16* %v4_bb48, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* @r0, align 4
  %v2_bb54 = call i32 @function_e5a4(i32 %v0_bb50, i32 20)
  %v3_bb54 = trunc i32 %v2_bb54 to i16
  store i32 %v2_bb54, i32* %r0.global-to-local, align 4
  %v3_bb58 = load i32, i32* %stack_var_-44, align 4
  %v3_bb5c = mul i32 %v3_bb58, 16
  %v1_bb60 = load i32, i32* @r8, align 4
  %v2_bb60 = add i32 %v1_bb60, %v3_bb5c
  store i32 %v2_bb60, i32* %r2.global-to-local, align 4
  %v1_bb64 = add i32 %v2_bb60, 4
  %v2_bb64 = inttoptr i32 %v1_bb64 to i32*
  %v3_bb64 = load i32, i32* %v2_bb64, align 4
  %v3_bb68 = mul i32 %v3_bb64, 65536
  store i32 %v3_bb68, i32* %r1.global-to-local, align 4
  %v1_bb6c = add i32 %v3_bb64, 1
  store i32 %v1_bb6c, i32* %r3.global-to-local, align 4
  store i32 %v1_bb6c, i32* %v2_bb64, align 4
  %v3_bb74 = load i32, i32* @r4, align 4
  %v4_bb74 = add i32 %v3_bb74, 10
  %v5_bb74 = inttoptr i32 %v4_bb74 to i16*
  store i16 %v3_bb54, i16* %v5_bb74, align 2
  %v0_bb78 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb78 = udiv i32 %v0_bb78, 65536
  store i32 %v3_bb78, i32* %r0.global-to-local, align 4
  %v1_bb7c = call i32 @function_15368(i32 %v3_bb78)
  store i32 %v1_bb7c, i32* %r0.global-to-local, align 4
  %v1_bb80 = load i32, i32* @r5, align 4
  %v2_bb80 = add i32 %v1_bb80, 4
  %v3_bb80 = inttoptr i32 %v2_bb80 to i32*
  store i32 %v1_bb7c, i32* %v3_bb80, align 4
  %v3_bb84 = load i32, i32* %stack_var_-44, align 4
  %v3_bb88 = mul i32 %v3_bb84, 16
  %v1_bb8c = load i32, i32* @r8, align 4
  %v2_bb8c = add i32 %v1_bb8c, %v3_bb88
  store i32 %v2_bb8c, i32* %r3.global-to-local, align 4
  %v1_bb90 = add i32 %v2_bb8c, 8
  %v2_bb90 = inttoptr i32 %v1_bb90 to i32*
  %v3_bb90 = load i32, i32* %v2_bb90, align 4
  %v3_bb98 = urem i32 %v3_bb90, 65536
  store i32 %v3_bb98, i32* %r0.global-to-local, align 4
  %v1_bb9c = call i32 @function_15368(i32 %v3_bb98)
  %v2_bba4 = load i32, i32* @r5, align 4
  %v3_bba4 = add i32 %v2_bba4, 16
  %v4_bba4 = inttoptr i32 %v3_bba4 to i16*
  store i16 0, i16* %v4_bba4, align 2
  %v1_bba8 = load i32, i32* @r5, align 4
  %v2_bba8 = add i32 %v1_bba8, 8
  %v3_bba8 = inttoptr i32 %v2_bba8 to i32*
  store i32 %v1_bb9c, i32* %v3_bba8, align 4
  %v0_bbac = load i32, i32* @sl, align 4
  store i32 %v0_bbac, i32* %r0.global-to-local, align 4
  %v1_bbb0 = call i32 @function_15368(i32 %v0_bbac)
  %v0_bbb4 = load i32, i32* @r5, align 4
  store i32 %v0_bbb4, i32* @r1, align 4
  store i32 %v1_bbb0, i32* %r2.global-to-local, align 4
  %v0_bbbc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_bbbc, i32* %r3.global-to-local, align 4
  %v0_bbc0 = load i32, i32* @r4, align 4
  store i32 %v0_bbc0, i32* %r0.global-to-local, align 4
  %v4_bbc4 = call i32 @function_e5f4(i32 %v0_bbc0, i32 %v0_bbb4, i32 %v1_bbb0, i32 %v0_bbbc)
  %v5_bbc4 = trunc i32 %v4_bbc4 to i16
  store i32 %v4_bbc4, i32* %r0.global-to-local, align 4
  %v3_bbc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bbc8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_bbd0 = mul i32 %v3_bbc8, 32
  store i32 %v3_bbd0, i32* %lr.global-to-local, align 4
  %v3_bbd4 = load i32, i32* @r5, align 4
  %v4_bbd4 = add i32 %v3_bbd4, 16
  %v5_bbd4 = inttoptr i32 %v4_bbd4 to i16*
  store i16 %v5_bbc4, i16* %v5_bbd4, align 2
  %v0_bbd8 = load i32, i32* %lr.global-to-local, align 4
  %v1_bbd8 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_bbd8, -8
  %v5_bbd8 = add i32 %v0_bbd8, %tmp95
  store i32 %v5_bbd8, i32* %lr.global-to-local, align 4
  %v0_bbdc = load i32, i32* @r5, align 4
  %v1_bbdc = add i32 %v0_bbdc, 2
  %v2_bbdc = inttoptr i32 %v1_bbdc to i16*
  %v3_bbdc = load i16, i16* %v2_bbdc, align 2
  %v4_bbdc = zext i16 %v3_bbdc to i32
  store i32 %v4_bbdc, i32* %r5.global-to-local, align 4
  %v1_bbe0 = load i32, i32* %r1.global-to-local, align 4
  %v2_bbe0 = add i32 %v1_bbe0, %v5_bbd8
  store i32 %v2_bbe0, i32* @lr, align 4
  %v3_bbe4 = add i32 %v2_bbe0, 2
  %v4_bbe4 = inttoptr i32 %v3_bbe4 to i16*
  store i16 %v3_bbdc, i16* %v4_bbe4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* @r1, align 4
  %v0_bbf4 = load i32, i32* @fp, align 4
  store i32 %v0_bbf4, i32* @r0, align 4
  %v0_bbf8 = load i32, i32* @r7, align 4
  store i32 %v0_bbf8, i32* @r2, align 4
  %v0_bc04 = call i32 @function_155b4()
  %v3_bc08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc08, i32* %r3.global-to-local, align 4
  %v1_bc0c = add i32 %v3_bc08, 1
  store i32 %v1_bc0c, i32* %r0.global-to-local, align 4
  %v0_bc10 = load i32, i32* @r6, align 4
  %v9_bc10 = icmp eq i32 %v0_bc10, %v1_bc0c
  store i1 %v9_bc10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc0c, i32* %stack_var_-44, align 4
  %v8_bc18 = icmp sgt i32 %v0_bc10, %v1_bc0c
  br i1 %v8_bc18, label %dec_label_pc_bb18, label %dec_label_pc_bc1c

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_bb44
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bc20 = icmp eq i32 %v0_bc10, 0
  store i1 %v2_bc20, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bc20, label %dec_label_pc_bb04, label %dec_label_pc_bb14

dec_label_pc_bc30:                                ; preds = %dec_label_pc_bb18
  %v0_bc30 = call i32 @function_1008c()
  %v1_bc30 = trunc i32 %v0_bc30 to i16
  store i32 %v0_bc30, i32* %r0.global-to-local, align 4
  store i32 %v1_b684, i32* %r2.global-to-local, align 4
  store i1 %v2_bc38, i1* %cpsr_z.global-to-local, align 1
  %v3_bc3c = load i32, i32* @r4, align 4
  %v4_bc3c = add i32 %v3_bc3c, 4
  %v5_bc3c = inttoptr i32 %v4_bc3c to i16*
  store i16 %v1_bc30, i16* %v5_bc3c, align 2
  br i1 %v2_bc38, label %dec_label_pc_bb44, label %dec_label_pc_bc30.dec_label_pc_bc44_crit_edge

dec_label_pc_bc30.dec_label_pc_bc44_crit_edge:    ; preds = %dec_label_pc_bc30
  %v0_bc44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bc44

dec_label_pc_bc44:                                ; preds = %dec_label_pc_bc30.dec_label_pc_bc44_crit_edge, %dec_label_pc_bb38
  %v0_bc44 = phi i32 [ %v0_bc44.pre, %dec_label_pc_bc30.dec_label_pc_bc44_crit_edge ], [ %v7_bb24, %dec_label_pc_bb38 ]
  %v1_bc44 = add i32 %v0_bc44, 40
  store i32 %v1_bc44, i32* %r0.global-to-local, align 4
  store i32 %v6_b664, i32* %r1.global-to-local, align 4
  %v2_bc4c = inttoptr i32 %v1_bc44 to i16*
  %v3_bc4c = call i32 @function_1028c(i16* %v2_bc4c, i32 %v6_b664)
  store i32 %v3_bc4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb44

; uselistorder directives
  uselistorder i32 %v0_bc30, { 1, 0 }
  uselistorder i32 %v1_bc0c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bbd8, { 1, 0 }
  uselistorder i32 %v4_bbc4, { 1, 0 }
  uselistorder i32 %v3_bb98, { 1, 0 }
  uselistorder i32 %v3_bb78, { 1, 0 }
  uselistorder i32 %v3_bb64, { 1, 0 }
  uselistorder i32 %v2_bb54, { 1, 0 }
  uselistorder i1 %v3_bb2c, { 1, 0 }
  uselistorder i1 %v2_bc38, { 2, 3, 1, 0 }
  uselistorder i32 %v0_ba44, { 1, 0 }
  uselistorder i32 %v1_b9cc, { 1, 0 }
  uselistorder i32 %v1_b9a8, { 1, 0 }
  uselistorder i32 %v3_b998, { 1, 0 }
  uselistorder i32 %v0_b8e8, { 1, 0 }
  uselistorder i32 %v1_b8cc, { 1, 2, 0 }
  uselistorder i32 %v1_b868, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b854, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b7e0, { 1, 0 }
  uselistorder i32 %v0_b7d8, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b808, { 1, 0 }
  uselistorder i32 %v4_b81c, { 1, 0 }
  uselistorder i32 %v0_b8fc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_b774, { 1, 0 }
  uselistorder i32 %v4_b754, { 1, 0 }
  uselistorder i1 %v7_b74c, { 1, 0, 2 }
  uselistorder i1 %v7_b700, { 1, 0 }
  uselistorder i32 %v3_b6fc, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i32 %v1_bab0, { 1, 0 }
  uselistorder i32 %v1_ba98, { 1, 0 }
  uselistorder i32 %v1_ba80, { 1, 0 }
  uselistorder i32 %v1_ba68, { 1, 0 }
  uselistorder i32 %v1_ba50, { 1, 0 }
  uselistorder i32 %v3_b814, { 0, 2, 1 }
  uselistorder i1 %v2_b830, { 1, 0 }
  uselistorder i32 %v1_b82c, { 1, 0 }
  uselistorder i32 %v4_b828, { 2, 0, 1 }
  uselistorder i1 %v3_b8dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b734, { 1, 0, 2 }
  uselistorder i32 %v3_b6d8, { 3, 4, 2, 1, 0 }
  uselistorder i1 %v7_b6c8, { 1, 0 }
  uselistorder i1 %v7_b69c, { 1, 0 }
  uselistorder i32 %v3_b698, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b684, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b664, { 8, 7, 2, 0, 1, 9, 5, 4, 6, 3 }
  uselistorder i32 %v3_b58c, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 33, 32, 34, 35, 36, 38, 37, 39, 41, 40, 43, 42, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bb44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bb14, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bafc, { 1, 0 }
  uselistorder label %dec_label_pc_b9d4, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b864, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b7a0, { 2, 1, 3, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_b70c, { 1, 0 }
}

define i32 @function_bc58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bc58:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_bc58 = load i32, i32* @r4, align 4
  %v6_bc58 = load i32, i32* @r5, align 4
  %v18_bc58 = load i32, i32* @sb, align 4
  %v27_bc58 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_bc74 = call i32 @function_13d28(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_bc74, i32* @r8, align 4
  %v0_bc80 = load i32, i32* @r6, align 4
  store i32 %v0_bc80, i32* %r0.global-to-local, align 4
  %v2_bc84 = call i32 @function_13d28(i32 %v0_bc80, i32 4)
  %v0_bc88 = load i32, i32* @r5, align 4
  store i32 %v0_bc88, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc98 = load i32, i32* @r4, align 4
  store i32 %v0_bc98, i32* %r0.global-to-local, align 4
  %v5_bc9c = inttoptr i32 %v0_bc88 to i32*
  %v6_bc9c = call i32 @function_a430(i32 %v0_bc98, i32* %v5_bc9c, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bcb4 = load i32, i32* @r5, align 4
  store i32 %v0_bcb4, i32* %r1.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r4, align 4
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v6_bcc0 = inttoptr i32 %v0_bcb4 to i32*
  %v7_bcc0 = call i32 @function_a430(i32 %v0_bcb8, i32* %v6_bcc0, i32 3, i32 65535)
  %v0_bcc4 = load i32, i32* @r5, align 4
  store i32 %v0_bcc4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bcc0, i32* @r7, align 4
  %v0_bcd4 = load i32, i32* @r4, align 4
  store i32 %v0_bcd4, i32* %r0.global-to-local, align 4
  %v4_bcd8 = inttoptr i32 %v0_bcc4 to i32*
  %v5_bcd8 = call i32 @function_a430(i32 %v0_bcd4, i32* %v4_bcd8, i32 4, i32 64)
  %v0_bce4 = load i32, i32* @r5, align 4
  store i32 %v0_bce4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bcf0 = load i32, i32* @r4, align 4
  store i32 %v0_bcf0, i32* %r0.global-to-local, align 4
  %v6_bcf8 = inttoptr i32 %v0_bce4 to i32*
  %v7_bcf8 = call i32 @function_a430(i32 %v0_bcf0, i32* %v6_bcf8, i32 5, i32 1)
  %v1_bd04 = urem i32 %v7_bcf8, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_bd0c = load i32, i32* @r5, align 4
  store i32 %v0_bd0c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_bd14 = load i32, i32* @r4, align 4
  store i32 %v0_bd14, i32* %r0.global-to-local, align 4
  %v5_bd1c = inttoptr i32 %v0_bd0c to i32*
  %v6_bd1c = call i32 @function_a430(i32 %v0_bd14, i32* %v5_bd1c, i32 7, i32 65535)
  %v3_bd24 = urem i32 %v6_bd1c, 65536
  %v0_bd28 = load i32, i32* @r5, align 4
  store i32 %v0_bd28, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd34 = load i32, i32* @r4, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v5_bd3c = inttoptr i32 %v0_bd28 to i32*
  %v6_bd3c = call i32 @function_a430(i32 %v0_bd34, i32* %v5_bd3c, i32 11, i32 1)
  %v1_bd44 = urem i32 %v6_bd3c, 256
  %v0_bd48 = load i32, i32* @r5, align 4
  store i32 %v0_bd48, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd54 = load i32, i32* @r4, align 4
  store i32 %v0_bd54, i32* %r0.global-to-local, align 4
  %v5_bd5c = inttoptr i32 %v0_bd48 to i32*
  %v6_bd5c = call i32 @function_a430(i32 %v0_bd54, i32* %v5_bd5c, i32 12, i32 1)
  %v0_bd68 = load i32, i32* @r5, align 4
  store i32 %v0_bd68, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd74 = load i32, i32* @r4, align 4
  store i32 %v0_bd74, i32* %r0.global-to-local, align 4
  %v5_bd7c = inttoptr i32 %v0_bd68 to i32*
  %v6_bd7c = call i32 @function_a430(i32 %v0_bd74, i32* %v5_bd7c, i32 13, i32 1)
  %v1_bd84 = urem i32 %v6_bd7c, 256
  %v0_bd88 = load i32, i32* @r5, align 4
  store i32 %v0_bd88, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd94 = load i32, i32* @r4, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v5_bd9c = inttoptr i32 %v0_bd88 to i32*
  %v6_bd9c = call i32 @function_a430(i32 %v0_bd94, i32* %v5_bd9c, i32 14, i32 1)
  %v0_bda8 = load i32, i32* @r5, align 4
  store i32 %v0_bda8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r4, align 4
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bda8 to i32*
  %v6_bdbc = call i32 @function_a430(i32 %v0_bdb4, i32* %v5_bdbc, i32 15, i32 1)
  %v1_bdc4 = urem i32 %v6_bdbc, 256
  %v0_bdc8 = load i32, i32* @r5, align 4
  store i32 %v0_bdc8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bdd4 = load i32, i32* @r4, align 4
  store i32 %v0_bdd4, i32* %r0.global-to-local, align 4
  %v5_bddc = inttoptr i32 %v0_bdc8 to i32*
  %v6_bddc = call i32 @function_a430(i32 %v0_bdd4, i32* %v5_bddc, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_bdf0 = load i32, i32* @r5, align 4
  store i32 %v0_bdf0, i32* %r1.global-to-local, align 4
  %v0_bdf4 = load i32, i32* @r4, align 4
  store i32 %v0_bdf4, i32* %r0.global-to-local, align 4
  %v5_bdfc = inttoptr i32 %v0_bdf0 to i32*
  %v6_bdfc = call i32 @function_a430(i32 %v0_bdf4, i32* %v5_bdfc, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_be0c = load i32, i32* @r5, align 4
  store i32 %v0_be0c, i32* %r1.global-to-local, align 4
  %v0_be10 = load i32, i32* @r4, align 4
  store i32 %v0_be10, i32* %r0.global-to-local, align 4
  %v4_be14 = inttoptr i32 %v0_be0c to i32*
  %v5_be14 = call i32 @function_a430(i32 %v0_be10, i32* %v4_be14, i32 1, i32 1)
  %v1_be1c = urem i32 %v5_be14, 256
  store i32 %v1_be1c, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_be30 = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_be30, i32* @r0, align 4
  %v7_be34 = icmp eq i32 %v3_be30, -1
  store i1 %v7_be34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be30, i32* @fp, align 4
  br i1 %v7_be34, label %dec_label_pc_c02c, label %dec_label_pc_be40

dec_label_pc_be40:                                ; preds = %dec_label_pc_bc58
  store i32 1, i32* %stack_var_-44, align 4
  %v6_be48 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_be48, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_be5c = call i32 @function_15600(i32 %v3_be30, i32 0, i32 3, i32 %v6_be48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_be5c, i32* %r0.global-to-local, align 4
  %v7_be60 = icmp eq i32 %v5_be5c, -1
  store i1 %v7_be60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be60, label %dec_label_pc_c024, label %dec_label_pc_be68

dec_label_pc_be68:                                ; preds = %dec_label_pc_be40
  %v0_be68 = load i32, i32* @r7, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_be70 = urem i32 %v0_be68, 65536
  store i32 %v3_be70, i32* %r2.global-to-local, align 4
  %v0_be74 = load i32, i32* @r6, align 4
  %v2_be74 = icmp eq i32 %v0_be74, 0
  store i1 %v2_be74, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be74, label %dec_label_pc_c284, label %dec_label_pc_be84

dec_label_pc_be84:                                ; preds = %dec_label_pc_be68
  %v2_be84 = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_be84, i32* @sb, align 4
  %v2_becc = ptrtoint i32* %stack_var_-152 to i32
  %v3_c074 = icmp eq i32 %v3_bd24, 65535
  %v2_bf18 = ptrtoint i32* %stack_var_-64 to i32
  %v4_bfc0 = zext i8 %tmp to i32
  %v1_bfc4 = and i32 %v4_bfc0, 18
  %v2_bfc8 = icmp eq i32 %v1_bfc4, 18
  %sext = mul i32 %v6_bc9c, 16777216
  %v4_c124 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_bcd8, 16777216
  %v4_c148 = sdiv i32 %sext8, 16777216
  %v2_c14c = icmp eq i32 %v1_bd04, 0
  %v3_bfac = sext i16 %tmp60 to i32
  %v1_bfd0 = and i32 %v4_bfc0, 5
  %v2_bfd0 = icmp eq i32 %v1_bfd0, 0
  %v1_c0dc = add i32 %v6_bdfc, 40
  %v1_c12c = trunc i32 %v4_c124 to i8
  %v1_c1e8 = urem i32 %v6_bd3c, 2
  %tmp87 = sub nsw i32 0, %v1_c1e8
  %v4_c1f0 = and i32 %tmp87, 32
  %v1_c200 = urem i32 %v6_bd5c, 2
  %tmp88 = sub nsw i32 0, %v1_c200
  %v4_c208 = and i32 %tmp88, 16
  %v1_c218 = urem i32 %v6_bd7c, 2
  %tmp89 = sub nsw i32 0, %v1_c218
  %v4_c220 = and i32 %tmp89, 8
  %v1_c230 = urem i32 %v6_bd9c, 2
  %tmp90 = sub nsw i32 0, %v1_c230
  %v4_c238 = and i32 %tmp90, 4
  %v1_c248 = urem i32 %v6_bdbc, 2
  %tmp91 = sub nsw i32 0, %v1_c248
  %v3_c250 = and i32 %tmp91, 2
  %v1_c260 = urem i32 %v6_bddc, 2
  br label %dec_label_pc_be88

dec_label_pc_be88:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_be84
  %stack_var_-60.0 = phi i32 [ %tmp35, %dec_label_pc_be84 ], [ %stack_var_-60.5, %dec_label_pc_bffc ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_be94 = call i32 @function_15670(i32 2, i32 1, i32 0)
  store i32 %v3_be94, i32* %r0.global-to-local, align 4
  %v7_be98 = icmp eq i32 %v3_be94, -1
  store i1 %v7_be98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be94, i32* @r5, align 4
  br i1 %v7_be98, label %dec_label_pc_bffc, label %dec_label_pc_bea4

dec_label_pc_bea4:                                ; preds = %dec_label_pc_be88, %dec_label_pc_bfd8
  %v0_beac = phi i32 [ %v3_bfec, %dec_label_pc_bfd8 ], [ %v3_be94, %dec_label_pc_be88 ]
  %stack_var_-60.1 = phi i32 [ %v0_c094, %dec_label_pc_bfd8 ], [ %stack_var_-60.0, %dec_label_pc_be88 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_beac = call i32 @function_13a84(i32 %v0_beac, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_beb4 = or i32 %v3_beac, 2048
  store i32 %v1_beb4, i32* %r2.global-to-local, align 4
  %v0_beb8 = load i32, i32* @r5, align 4
  store i32 %v0_beb8, i32* %r0.global-to-local, align 4
  %v3_bebc = call i32 @function_13a84(i32 %v0_beb8, i32 4, i32 %v1_beb4)
  store i32 %v3_bebc, i32* %r0.global-to-local, align 4
  %v3_bec0 = load i32, i32* %stack_var_-44, align 4
  %v5_bec8 = mul i32 %v3_bec0, 24
  store i32 %v2_becc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_bedc = add i32 %v5_bec8, %arg2
  store i32 %v2_bedc, i32* %r3.global-to-local, align 4
  %v1_bee0 = add i32 %v2_bedc, 20
  %v2_bee0 = inttoptr i32 %v1_bee0 to i8*
  %v3_bee0 = load i8, i8* %v2_bee0, align 1
  %v4_bee0 = zext i8 %v3_bee0 to i32
  store i32 %v4_bee0, i32* %r2.global-to-local, align 4
  %v2_bee4 = icmp ugt i8 %v3_bee0, 30
  %v7_bee4 = icmp eq i8 %v3_bee0, 31
  store i1 %v7_bee4, i1* %cpsr_z.global-to-local, align 1
  %v2_bee8 = xor i1 %v7_bee4, true
  %v3_bee8 = and i1 %v2_bee4, %v2_bee8
  br i1 %v3_bee8, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_bea4
  %v5_bee8 = add i32 %v2_bedc, 16
  %v6_bee8 = inttoptr i32 %v5_bee8 to i32*
  %v7_bee8 = load i32, i32* %v6_bee8, align 4
  store i32 %v7_bee8, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_bea4, %bb
  %v4_beec = phi i32 [ %v2_bedc, %dec_label_pc_bea4 ], [ %v7_bee8, %bb ]
  %v4_beec.stack_var_-60.1 = select i1 %v3_bee8, i32 %v4_beec, i32 %stack_var_-60.1
  %v2_bef0 = xor i1 %v2_bee4, true
  %v3_bef0 = or i1 %v7_bee4, %v2_bef0
  br i1 %v3_bef0, label %dec_label_pc_c038, label %dec_label_pc_bef4

dec_label_pc_bef4:                                ; preds = %bb70
  store i32 %v3_bd24, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c074, label %dec_label_pc_c080, label %dec_label_pc_bf08

dec_label_pc_bf08:                                ; preds = %dec_label_pc_c038, %dec_label_pc_bef4
  %stack_var_-60.3 = phi i32 [ %v1_c064, %dec_label_pc_c038 ], [ %v4_beec.stack_var_-60.1, %dec_label_pc_bef4 ]
  store i32 %v3_bd24, i32* %r0.global-to-local, align 4
  %v1_bf0c = call i32 @function_15368(i32 %v3_bd24)
  %v2_bf0c = trunc i32 %v1_bf0c to i16
  store i32 %v1_bf0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bf18

dec_label_pc_bf18:                                ; preds = %dec_label_pc_c080, %dec_label_pc_bf08
  %v0_c094 = phi i32 [ %stack_var_-60.6, %dec_label_pc_c080 ], [ %stack_var_-60.3, %dec_label_pc_bf08 ]
  %storemerge4 = phi i16 [ %v1_c080, %dec_label_pc_c080 ], [ %v2_bf0c, %dec_label_pc_bf08 ]
  store i32 %v2_bf18, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_bf20 = load i32, i32* @r5, align 4
  store i32 %v0_bf20, i32* %r0.global-to-local, align 4
  %v3_bf24 = call i32 @function_152b4(i32 %v0_bf20, i32 %v2_bf18, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bf2c = call i32 @function_165ec(i32* null)
  store i32 %v2_bf2c, i32* %r0.global-to-local, align 4
  store i32 %v2_bf2c, i32* @r4, align 4
  %v9_bf8c = icmp eq i32 %tmp32, %v0_c094
  %v4_bfb4 = zext i16 %storemerge4 to i32
  %. = zext i1 %v9_bf8c to i32
  %v9_bfa0 = icmp eq i1 %v9_bf8c, false
  %v9_bfb8 = icmp eq i32 %v3_bfac, %v4_bfb4
  br label %dec_label_pc_bf48

dec_label_pc_bf38:                                ; preds = %.thread29, %dec_label_pc_bfa8, %dec_label_pc_bfd0, %bb73
  %v2_bf38 = call i32 @function_165ec(i32* null)
  %v0_bf3c = load i32, i32* @r4, align 4
  %v2_bf3c = sub i32 %v2_bf38, %v0_bf3c
  store i32 %v2_bf3c, i32* %r0.global-to-local, align 4
  %v7_bf40 = icmp eq i32 %v2_bf3c, 10
  store i1 %v7_bf40, i1* %cpsr_z.global-to-local, align 1
  %v8_bf44 = icmp sgt i32 %v2_bf3c, 10
  br i1 %v8_bf44, label %dec_label_pc_bfd8, label %dec_label_pc_bf48

dec_label_pc_bf48:                                ; preds = %dec_label_pc_bf38, %dec_label_pc_bf18
  store i32 256, i32* @r2, align 4
  store i32 %v2_be84, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bf68 = load i32, i32* @fp, align 4
  store i32 %v0_bf68, i32* @r0, align 4
  %v0_bf70 = call i32 @function_15548()
  store i32 %v0_bf70, i32* %r2.global-to-local, align 4
  %v7_bf78 = icmp eq i32 %v0_bf70, -1
  store i1 %v7_bf78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_bf78, label %dec_label_pc_c02c, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf48
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_bf98 = icmp eq i32 %v0_bf70, 40
  store i1 %v7_bf98, i1* %cpsr_z.global-to-local, align 1
  %tmp92 = icmp ult i32 %v0_bf70, 41
  br i1 %tmp92, label %.thread29, label %bb73

.thread29:                                        ; preds = %dec_label_pc_bf84
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bf38

bb73:                                             ; preds = %dec_label_pc_bf84
  store i1 %v9_bfa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfa0, label %dec_label_pc_bf38, label %dec_label_pc_bfa8

dec_label_pc_bfa8:                                ; preds = %bb73
  store i32 %v3_bfac, i32* %r1.global-to-local, align 4
  store i32 %v2_becc, i32* %r3.global-to-local, align 4
  store i32 %v4_bfb4, i32* %r2.global-to-local, align 4
  store i1 %v9_bfb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfb8, label %dec_label_pc_bfc0, label %dec_label_pc_bf38

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bfa8
  store i32 %v4_bfc0, i32* %r2.global-to-local, align 4
  store i32 %v1_bfc4, i32* %r3.global-to-local, align 4
  store i1 %v2_bfc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bfc8, label %dec_label_pc_c090, label %dec_label_pc_bfd0

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bfc0
  store i1 %v2_bfd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bfd0, label %dec_label_pc_bf38, label %dec_label_pc_bfd8

dec_label_pc_bfd8:                                ; preds = %dec_label_pc_bfd0, %dec_label_pc_bf38
  %v0_bfd8 = load i32, i32* @r5, align 4
  store i32 %v0_bfd8, i32* @r0, align 4
  %v1_bfdc = call i32 @function_1663c(i32 %v0_bfd8)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_bfec = call i32 @function_15670(i32 2, i32 1, i32 0)
  store i32 %v3_bfec, i32* %r0.global-to-local, align 4
  %v3_bff0 = icmp eq i32 %v3_bfec, -1
  %v8_bff0 = icmp eq i32 %v3_bfec, -1
  store i1 %v8_bff0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_bfec, i32* @r5, align 4
  br i1 %v3_bff0, label %dec_label_pc_bffc, label %dec_label_pc_bea4

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfd8, %dec_label_pc_be88, %dec_label_pc_c16c
  %stack_var_-60.5 = phi i32 [ %stack_var_-60.0, %dec_label_pc_be88 ], [ %v0_c094, %dec_label_pc_c16c ], [ %v0_c094, %dec_label_pc_bfd8 ]
  %v3_bffc = load i32, i32* %stack_var_-44, align 4
  %v1_c000 = add i32 %v3_bffc, 1
  store i32 %v1_c000, i32* %r3.global-to-local, align 4
  %v0_c004 = load i32, i32* @r6, align 4
  %v9_c004 = icmp eq i32 %v0_c004, %v1_c000
  store i1 %v9_c004, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c000, i32* %stack_var_-44, align 4
  %v8_c00c = icmp sgt i32 %v0_c004, %v1_c000
  br i1 %v8_c00c, label %dec_label_pc_be88, label %dec_label_pc_c010

dec_label_pc_c010:                                ; preds = %dec_label_pc_bffc
  store i32 %v6_bdfc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c294

dec_label_pc_c024:                                ; preds = %dec_label_pc_be40
  %v0_c024 = load i32, i32* @fp, align 4
  store i32 %v0_c024, i32* @r0, align 4
  %v1_c028 = call i32 @function_1663c(i32 %v0_c024)
  store i32 %v1_c028, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bf48, %dec_label_pc_bc58, %dec_label_pc_c024
  %v1_c034 = phi i32 [ %v3_be30, %dec_label_pc_bc58 ], [ %v1_c028, %dec_label_pc_c024 ], [ 0, %dec_label_pc_bf48 ]
  store i32 %v3_bc58, i32* %r4.global-to-local, align 4
  store i32 %v6_bc58, i32* %r5.global-to-local, align 4
  store i32 %v18_bc58, i32* %sb.global-to-local, align 4
  store i32 %v27_bc58, i32* %lr.global-to-local, align 4
  ret i32 %v1_c034

dec_label_pc_c038:                                ; preds = %bb70
  %v1_c038 = add i32 %v4_beec, 16
  %v2_c038 = inttoptr i32 %v1_c038 to i32*
  %v3_c038 = load i32, i32* %v2_c038, align 4
  store i32 %v3_c038, i32* %r0.global-to-local, align 4
  %v1_c03c = call i32 @function_154ec(i32 %v3_c038)
  store i32 %v1_c03c, i32* %r0.global-to-local, align 4
  store i32 %v1_c03c, i32* @r4, align 4
  %v0_c044 = call i32 @function_1008c()
  store i32 %v0_c044, i32* %r0.global-to-local, align 4
  %v3_c048 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c048, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v5_c054 = mul i32 %v3_c048, 24
  %v2_c058 = add i32 %v5_c054, %arg2
  store i32 %v2_c058, i32* %r3.global-to-local, align 4
  %v1_c05c = add i32 %v2_c058, 20
  %v2_c05c = inttoptr i32 %v1_c05c to i8*
  %v3_c05c = load i8, i8* %v2_c05c, align 1
  %v4_c05c = zext i8 %v3_c05c to i32
  store i32 %v4_c05c, i32* %r2.global-to-local, align 4
  %v0_c060 = load i32, i32* @r4, align 4
  %v7_c060 = lshr i32 %v0_c044, %v4_c05c
  %v8_c060 = add i32 %v7_c060, %v0_c060
  store i32 %v8_c060, i32* %r0.global-to-local, align 4
  %v1_c064 = call i32 @function_15344(i32 %v8_c060)
  store i32 %v1_c064, i32* %r0.global-to-local, align 4
  store i32 %v3_bd24, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c074, label %dec_label_pc_c080, label %dec_label_pc_bf08

dec_label_pc_c080:                                ; preds = %dec_label_pc_c038, %dec_label_pc_bef4
  %stack_var_-60.6 = phi i32 [ %v1_c064, %dec_label_pc_c038 ], [ %v4_beec.stack_var_-60.1, %dec_label_pc_bef4 ]
  %v0_c080 = call i32 @function_1008c()
  %v1_c080 = trunc i32 %v0_c080 to i16
  store i32 %v0_c080, i32* %r0.global-to-local, align 4
  store i32 %v2_becc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bf18

dec_label_pc_c090:                                ; preds = %dec_label_pc_bfc0
  %v3_c090 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c090, i32* %r4.global-to-local, align 4
  %v1_c094 = load i32, i32* @r8, align 4
  %v5_c094 = mul i32 %v3_c090, 16
  %v6_c094 = add i32 %v1_c094, %v5_c094
  %v7_c094 = inttoptr i32 %v6_c094 to i32*
  store i32 %v0_c094, i32* %v7_c094, align 4
  %v0_c098 = load i32, i32* @sl, align 4
  %v1_c098 = add i32 %v0_c098, 4
  %v2_c098 = inttoptr i32 %v1_c098 to i32*
  %v3_c098 = load i32, i32* %v2_c098, align 4
  store i32 %v3_c098, i32* %r0.global-to-local, align 4
  %v1_c09c = call i32 @function_154ec(i32 %v3_c098)
  store i32 %v1_c09c, i32* %r0.global-to-local, align 4
  %v0_c0a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c0a0 = mul i32 %v0_c0a0, 16
  %v1_c0a4 = load i32, i32* @r8, align 4
  %v2_c0a4 = add i32 %v1_c0a4, %v3_c0a0
  store i32 %v2_c0a4, i32* %r4.global-to-local, align 4
  %v2_c0a8 = add i32 %v2_c0a4, 4
  %v3_c0a8 = inttoptr i32 %v2_c0a8 to i32*
  store i32 %v1_c09c, i32* %v3_c0a8, align 4
  %v0_c0ac = load i32, i32* @sl, align 4
  %v1_c0ac = add i32 %v0_c0ac, 8
  %v2_c0ac = inttoptr i32 %v1_c0ac to i32*
  %v3_c0ac = load i32, i32* %v2_c0ac, align 4
  store i32 %v3_c0ac, i32* %r0.global-to-local, align 4
  %v3_c0b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b0, i32* %r5.global-to-local, align 4
  %v1_c0b4 = call i32 @function_154ec(i32 %v3_c0ac)
  store i32 %v1_c0b4, i32* %r0.global-to-local, align 4
  %v3_c0b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b8, i32* @r4, align 4
  %v0_c0bc = load i32, i32* @sl, align 4
  %v1_c0bc = add i32 %v0_c0bc, 2
  %v2_c0bc = inttoptr i32 %v1_c0bc to i16*
  %v3_c0bc = load i16, i16* %v2_c0bc, align 2
  %v4_c0bc = zext i16 %v3_c0bc to i32
  store i32 %v4_c0bc, i32* %r1.global-to-local, align 4
  %v3_c0c0 = mul i32 %v3_c0b8, 16
  %v1_c0c4 = load i32, i32* @r8, align 4
  %v2_c0c4 = add i32 %v1_c0c4, %v3_c0c0
  store i32 %v2_c0c4, i32* %r3.global-to-local, align 4
  %v3_c0c8 = add i32 %v2_c0c4, 12
  %v4_c0c8 = inttoptr i32 %v3_c0c8 to i16*
  store i16 %v3_c0bc, i16* %v4_c0c8, align 2
  store i32 %v3_bfac, i32* %r2.global-to-local, align 4
  %v0_c0d8 = load i32, i32* %r5.global-to-local, align 4
  %v3_c0d8 = mul i32 %v0_c0d8, 16
  store i32 %v1_c0dc, i32* @r7, align 4
  %v1_c0e0 = load i32, i32* @r8, align 4
  %v2_c0e0 = add i32 %v1_c0e0, %v3_c0d8
  store i32 %v2_c0e0, i32* @r5, align 4
  %v2_c0e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_c0e4 = add i32 %v2_c0e4, 14
  %v4_c0e4 = inttoptr i32 %v3_c0e4 to i16*
  store i16 %storemerge4, i16* %v4_c0e4, align 2
  %v1_c0e8 = load i32, i32* @r5, align 4
  %v2_c0e8 = add i32 %v1_c0e8, 8
  %v3_c0e8 = inttoptr i32 %v2_c0e8 to i32*
  store i32 %v1_c0b4, i32* %v3_c0e8, align 4
  %v0_c0ec = load i32, i32* @r7, align 4
  store i32 %v0_c0ec, i32* @r0, align 4
  %v0_c0f0 = call i32 @function_14798()
  store i32 %v0_c0f0, i32* %r0.global-to-local, align 4
  store i32 %v2_bc84, i32* %r3.global-to-local, align 4
  %v3_c0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0f8, i32* %r2.global-to-local, align 4
  %v2_c0fc = load i32, i32* @r4, align 4
  %v5_c0fc = mul i32 %v2_c0fc, 4
  %v6_c0fc = add i32 %v5_c0fc, %v2_bc84
  %v7_c0fc = inttoptr i32 %v6_c0fc to i32*
  store i32 %v0_c0f0, i32* %v7_c0fc, align 4
  %v0_c100 = load i32, i32* %r3.global-to-local, align 4
  %v1_c100 = load i32, i32* %r2.global-to-local, align 4
  %v4_c100 = mul i32 %v1_c100, 4
  %v5_c100 = add i32 %v4_c100, %v0_c100
  %v6_c100 = inttoptr i32 %v5_c100 to i32*
  %v7_c100 = load i32, i32* %v6_c100, align 4
  store i32 %v7_c100, i32* @r4, align 4
  %v1_c104 = inttoptr i32 %v7_c100 to i8*
  %v2_c104 = load i8, i8* %v1_c104, align 1
  %tmp93 = urem i8 %v2_c104, 16
  %v1_c108 = zext i8 %tmp93 to i32
  %v1_c10c = or i32 %v1_c108, 64
  store i32 %v1_c10c, i32* %r3.global-to-local, align 4
  %v1_c110 = trunc i32 %v1_c10c to i8
  store i8 %v1_c110, i8* %v1_c104, align 1
  %v0_c114 = load i32, i32* @r4, align 4
  %v1_c114 = inttoptr i32 %v0_c114 to i8*
  %v2_c114 = load i8, i8* %v1_c114, align 1
  %v3_c114 = zext i8 %v2_c114 to i32
  %v1_c118 = and i32 %v3_c114, 240
  %v1_c11c = or i32 %v1_c118, 5
  store i32 %v1_c11c, i32* %r2.global-to-local, align 4
  %v1_c120 = trunc i32 %v1_c11c to i8
  store i8 %v1_c120, i8* %v1_c114, align 1
  %v0_c128 = load i32, i32* @r7, align 4
  %v3_c128 = mul i32 %v0_c128, 65536
  store i32 %v3_c128, i32* %r0.global-to-local, align 4
  %v2_c12c = load i32, i32* @r4, align 4
  %v3_c12c = add i32 %v2_c12c, 1
  %v4_c12c = inttoptr i32 %v3_c12c to i8*
  store i8 %v1_c12c, i8* %v4_c12c, align 1
  %v0_c130 = load i32, i32* %r0.global-to-local, align 4
  %v3_c130 = udiv i32 %v0_c130, 65536
  store i32 %v3_c130, i32* %r0.global-to-local, align 4
  %v1_c134 = call i32 @function_15368(i32 %v3_c130)
  %v2_c134 = trunc i32 %v1_c134 to i16
  %v3_c138 = load i32, i32* @r4, align 4
  %v4_c138 = add i32 %v3_c138, 2
  %v5_c138 = inttoptr i32 %v4_c138 to i16*
  store i16 %v2_c134, i16* %v5_c138, align 2
  store i32 %v3_be70, i32* %r0.global-to-local, align 4
  %v1_c140 = call i32 @function_15368(i32 %v3_be70)
  %v2_c140 = trunc i32 %v1_c140 to i16
  store i32 %v1_c140, i32* %r0.global-to-local, align 4
  store i32 %v1_bd04, i32* %r1.global-to-local, align 4
  store i32 %v4_c148, i32* %r2.global-to-local, align 4
  store i1 %v2_c14c, i1* %cpsr_z.global-to-local, align 1
  %v3_c150 = load i32, i32* @r4, align 4
  %v4_c150 = add i32 %v3_c150, 4
  %v5_c150 = inttoptr i32 %v4_c150 to i16*
  store i16 %v2_c140, i16* %v5_c150, align 2
  %v0_c154 = load i32, i32* %r2.global-to-local, align 4
  %v1_c154 = trunc i32 %v0_c154 to i8
  %v2_c154 = load i32, i32* @r4, align 4
  %v3_c154 = add i32 %v2_c154, 8
  %v4_c154 = inttoptr i32 %v3_c154 to i8*
  store i8 %v1_c154, i8* %v4_c154, align 1
  %v0_c158 = load i32, i32* @r4, align 4
  %v1_c158 = add i32 %v0_c158, 20
  store i32 %v1_c158, i32* @sl, align 4
  %v0_c15c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c15c, label %dec_label_pc_c16c, label %dec_label_pc_c160

dec_label_pc_c160:                                ; preds = %dec_label_pc_c090
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_c164 = call i32 @function_15368(i32 16384)
  %v2_c164 = trunc i32 %v1_c164 to i16
  store i32 %v1_c164, i32* %r0.global-to-local, align 4
  %v3_c168 = load i32, i32* @r4, align 4
  %v4_c168 = add i32 %v3_c168, 6
  %v5_c168 = inttoptr i32 %v4_c168 to i16*
  store i16 %v2_c164, i16* %v5_c168, align 2
  %v2_c170.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c16c

dec_label_pc_c16c:                                ; preds = %dec_label_pc_c090, %dec_label_pc_c160
  %v2_c170 = phi i32 [ %v0_c158, %dec_label_pc_c090 ], [ %v2_c170.pre, %dec_label_pc_c160 ]
  %v3_c170 = add i32 %v2_c170, 9
  %v4_c170 = inttoptr i32 %v3_c170 to i8*
  store i8 6, i8* %v4_c170, align 1
  store i32 ptrtoint (i32* @global_var_2365c.93 to i32), i32* %r2.global-to-local, align 4
  %v2_c178 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_c178, i32* %r1.global-to-local, align 4
  %v1_c17c = load i32, i32* @r4, align 4
  %v2_c17c = add i32 %v1_c17c, 12
  %v3_c17c = inttoptr i32 %v2_c17c to i32*
  store i32 %v2_c178, i32* %v3_c17c, align 4
  %v3_c180 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c180, i32* %r3.global-to-local, align 4
  %v0_c184 = load i32, i32* @r8, align 4
  %v4_c184 = mul i32 %v3_c180, 16
  %v5_c184 = add i32 %v0_c184, %v4_c184
  %v6_c184 = inttoptr i32 %v5_c184 to i32*
  %v7_c184 = load i32, i32* %v6_c184, align 4
  store i32 %v7_c184, i32* %r2.global-to-local, align 4
  store i32 %v5_c184, i32* %r3.global-to-local, align 4
  %v1_c190 = load i32, i32* @r4, align 4
  %v2_c190 = add i32 %v1_c190, 16
  %v3_c190 = inttoptr i32 %v2_c190 to i32*
  store i32 %v7_c184, i32* %v3_c190, align 4
  %v0_c194 = load i32, i32* %r3.global-to-local, align 4
  %v1_c194 = add i32 %v0_c194, 12
  %v2_c194 = inttoptr i32 %v1_c194 to i16*
  %v3_c194 = load i16, i16* %v2_c194, align 2
  %v1_c198 = add i32 %v0_c194, 8
  %v2_c198 = inttoptr i32 %v1_c198 to i32*
  %v3_c198 = load i32, i32* %v2_c198, align 4
  store i32 %v3_c198, i32* %r1.global-to-local, align 4
  %v2_c19c = load i32, i32* @r4, align 4
  %v3_c19c = add i32 %v2_c19c, 20
  %v4_c19c = inttoptr i32 %v3_c19c to i16*
  store i16 %v3_c194, i16* %v4_c19c, align 2
  %v0_c1a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c1a0 = load i32, i32* @sl, align 4
  %v2_c1a0 = add i32 %v1_c1a0, 4
  %v3_c1a0 = inttoptr i32 %v2_c1a0 to i32*
  store i32 %v0_c1a0, i32* %v3_c1a0, align 4
  %v0_c1a4 = load i32, i32* @sl, align 4
  %v1_c1a4 = add i32 %v0_c1a4, 13
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v0_c1a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1a8 = add i32 %v0_c1a8, 4
  %v2_c1a8 = inttoptr i32 %v1_c1a8 to i32*
  %v3_c1a8 = load i32, i32* %v2_c1a8, align 4
  store i32 %v3_c1a8, i32* %r1.global-to-local, align 4
  %v1_c1ac = or i32 %v4_c1a4, 1
  store i32 %v1_c1ac, i32* %r2.global-to-local, align 4
  %v1_c1b0 = add i32 %v0_c1a8, 14
  %v2_c1b0 = inttoptr i32 %v1_c1b0 to i16*
  %v3_c1b0 = load i16, i16* %v2_c1b0, align 2
  %v4_c1b0 = zext i16 %v3_c1b0 to i32
  store i32 %v4_c1b0, i32* %r3.global-to-local, align 4
  %v1_c1b4 = trunc i32 %v1_c1ac to i8
  store i8 %v1_c1b4, i8* %v2_c1a4, align 1
  %v0_c1b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1b8 = trunc i32 %v0_c1b8 to i16
  %v2_c1b8 = load i32, i32* @sl, align 4
  %v3_c1b8 = add i32 %v2_c1b8, 2
  %v4_c1b8 = inttoptr i32 %v3_c1b8 to i16*
  store i16 %v1_c1b8, i16* %v4_c1b8, align 2
  %v0_c1bc = load i32, i32* @sl, align 4
  %v1_c1bc = add i32 %v0_c1bc, 12
  %v2_c1bc = inttoptr i32 %v1_c1bc to i8*
  %v3_c1bc = load i8, i8* %v2_c1bc, align 1
  %v4_c1bc = zext i8 %v3_c1bc to i32
  store i32 %v4_c1bc, i32* %r3.global-to-local, align 4
  %v1_c1c0 = add i32 %v0_c1bc, 13
  %v2_c1c0 = inttoptr i32 %v1_c1c0 to i8*
  %v3_c1c0 = load i8, i8* %v2_c1c0, align 1
  %v4_c1c0 = zext i8 %v3_c1c0 to i32
  %tmp94 = urem i8 %v3_c1bc, 16
  %v1_c1c4 = zext i8 %tmp94 to i32
  %v1_c1c8 = or i32 %v1_c1c4, 128
  store i32 %v1_c1c8, i32* %r3.global-to-local, align 4
  %v1_c1cc = or i32 %v4_c1c0, 16
  store i32 %v1_c1cc, i32* %r2.global-to-local, align 4
  %v0_c1d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c1d0 = add i32 %v0_c1bc, 8
  %v3_c1d0 = inttoptr i32 %v2_c1d0 to i32*
  store i32 %v0_c1d0, i32* %v3_c1d0, align 4
  %v0_c1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1d4 = trunc i32 %v0_c1d4 to i8
  %v2_c1d4 = load i32, i32* @sl, align 4
  %v3_c1d4 = add i32 %v2_c1d4, 12
  %v4_c1d4 = inttoptr i32 %v3_c1d4 to i8*
  store i8 %v1_c1d4, i8* %v4_c1d4, align 1
  %v0_c1d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c1d8 = trunc i32 %v0_c1d8 to i8
  %v2_c1d8 = load i32, i32* @sl, align 4
  %v3_c1d8 = add i32 %v2_c1d8, 13
  %v4_c1d8 = inttoptr i32 %v3_c1d8 to i8*
  store i8 %v1_c1d8, i8* %v4_c1d8, align 1
  %v0_c1dc = call i32 @function_1008c()
  %v1_c1dc = trunc i32 %v0_c1dc to i16
  store i32 %v0_c1dc, i32* %r0.global-to-local, align 4
  store i32 %v1_bd44, i32* %r1.global-to-local, align 4
  %v0_c1e4 = load i32, i32* @sl, align 4
  %v1_c1e4 = add i32 %v0_c1e4, 13
  %v2_c1e4 = inttoptr i32 %v1_c1e4 to i8*
  %v3_c1e4 = load i8, i8* %v2_c1e4, align 1
  %v4_c1e4 = zext i8 %v3_c1e4 to i32
  store i32 %v1_c1e8, i32* %r2.global-to-local, align 4
  %v1_c1ec = and i32 %v4_c1e4, 223
  %v5_c1f0 = or i32 %v1_c1ec, %v4_c1f0
  store i32 %v5_c1f0, i32* %r3.global-to-local, align 4
  %v1_c1f4 = trunc i32 %v5_c1f0 to i8
  store i8 %v1_c1f4, i8* %v2_c1e4, align 1
  %v0_c1fc = load i32, i32* @sl, align 4
  %v1_c1fc = add i32 %v0_c1fc, 13
  %v2_c1fc = inttoptr i32 %v1_c1fc to i8*
  %v3_c1fc = load i8, i8* %v2_c1fc, align 1
  %v4_c1fc = zext i8 %v3_c1fc to i32
  store i32 %v1_c200, i32* %r3.global-to-local, align 4
  %v1_c204 = and i32 %v4_c1fc, 239
  %v5_c208 = or i32 %v1_c204, %v4_c208
  store i32 %v5_c208, i32* %r2.global-to-local, align 4
  %v1_c20c = trunc i32 %v5_c208 to i8
  store i8 %v1_c20c, i8* %v2_c1fc, align 1
  store i32 %v1_bd84, i32* %r1.global-to-local, align 4
  %v0_c214 = load i32, i32* @sl, align 4
  %v1_c214 = add i32 %v0_c214, 13
  %v2_c214 = inttoptr i32 %v1_c214 to i8*
  %v3_c214 = load i8, i8* %v2_c214, align 1
  %v4_c214 = zext i8 %v3_c214 to i32
  store i32 %v1_c218, i32* %r2.global-to-local, align 4
  %v1_c21c = and i32 %v4_c214, 247
  %v5_c220 = or i32 %v1_c21c, %v4_c220
  store i32 %v5_c220, i32* %r3.global-to-local, align 4
  %v1_c224 = trunc i32 %v5_c220 to i8
  store i8 %v1_c224, i8* %v2_c214, align 1
  %v0_c22c = load i32, i32* @sl, align 4
  %v1_c22c = add i32 %v0_c22c, 13
  %v2_c22c = inttoptr i32 %v1_c22c to i8*
  %v3_c22c = load i8, i8* %v2_c22c, align 1
  %v4_c22c = zext i8 %v3_c22c to i32
  store i32 %v1_c230, i32* %r3.global-to-local, align 4
  %v1_c234 = and i32 %v4_c22c, 251
  %v5_c238 = or i32 %v1_c234, %v4_c238
  store i32 %v5_c238, i32* %r2.global-to-local, align 4
  %v1_c23c = trunc i32 %v5_c238 to i8
  store i8 %v1_c23c, i8* %v2_c22c, align 1
  store i32 %v1_bdc4, i32* %r1.global-to-local, align 4
  %v0_c244 = load i32, i32* @sl, align 4
  %v1_c244 = add i32 %v0_c244, 13
  %v2_c244 = inttoptr i32 %v1_c244 to i8*
  %v3_c244 = load i8, i8* %v2_c244, align 1
  %v4_c244 = zext i8 %v3_c244 to i32
  store i32 %v1_c248, i32* %r2.global-to-local, align 4
  %v1_c24c = and i32 %v4_c244, 253
  %v4_c250 = or i32 %v1_c24c, %v3_c250
  store i32 %v4_c250, i32* %r3.global-to-local, align 4
  %v1_c254 = trunc i32 %v4_c250 to i8
  store i8 %v1_c254, i8* %v2_c244, align 1
  %v0_c25c = load i32, i32* @sl, align 4
  %v1_c25c = add i32 %v0_c25c, 13
  %v2_c25c = inttoptr i32 %v1_c25c to i8*
  %v3_c25c = load i8, i8* %v2_c25c, align 1
  %v4_c25c = zext i8 %v3_c25c to i32
  %v1_c264 = and i32 %v4_c25c, 254
  store i32 %v1_c264, i32* %r2.global-to-local, align 4
  %v2_c268 = or i32 %v1_c264, %v1_c260
  store i32 %v2_c268, i32* %r3.global-to-local, align 4
  %v1_c26c = trunc i32 %v2_c268 to i8
  store i8 %v1_c26c, i8* %v2_c25c, align 1
  %v3_c270 = load i32, i32* @sl, align 4
  %v4_c270 = add i32 %v3_c270, 14
  %v5_c270 = inttoptr i32 %v4_c270 to i16*
  store i16 %v1_c1dc, i16* %v5_c270, align 2
  store i32 %v6_bdfc, i32* %r1.global-to-local, align 4
  %v0_c278 = load i32, i32* @r4, align 4
  %v1_c278 = add i32 %v0_c278, 40
  store i32 %v1_c278, i32* %r0.global-to-local, align 4
  %v2_c27c = inttoptr i32 %v1_c278 to i16*
  %v3_c27c = call i32 @function_1028c(i16* %v2_c27c, i32 %v6_bdfc)
  store i32 %v3_c27c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bffc

dec_label_pc_c284:                                ; preds = %dec_label_pc_be68
  store i32 %v6_bdfc, i32* %r2.global-to-local, align 4
  %.pre = add i32 %v6_bdfc, 40
  br label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %dec_label_pc_c010, %dec_label_pc_c284
  %storemerge7.pre-phi = phi i32 [ %v1_c0dc, %dec_label_pc_c010 ], [ %.pre, %dec_label_pc_c284 ]
  %v0_c2a023 = phi i32 [ %v0_c004, %dec_label_pc_c010 ], [ 0, %dec_label_pc_c284 ]
  store i32 %storemerge7.pre-phi, i32* @r7, align 4
  %storemerge5 = mul i32 %v6_bdfc, 65536
  %storemerge = add i32 %v6_bdfc, 20
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v1_c294 = add i32 %storemerge5, 1310720
  store i32 %v1_c294, i32* %r3.global-to-local, align 4
  %v3_c298 = udiv i32 %v1_c294, 65536
  store i32 %v3_c298, i32* @sl, align 4
  %v2_c3d0 = icmp eq i32 %v1_be1c, 0
  %v3_c2c4 = icmp eq i32 %v3_be70, 65535
  br label %dec_label_pc_c29c

dec_label_pc_c29c:                                ; preds = %dec_label_pc_c29c, %dec_label_pc_c3b4, %dec_label_pc_c294
  %v0_c2a0 = phi i32 [ %v0_c2a023, %dec_label_pc_c294 ], [ 0, %dec_label_pc_c3b4 ], [ 0, %dec_label_pc_c29c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2a0 = icmp eq i32 %v0_c2a0, 0
  store i1 %v2_c2a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c2a0, label %dec_label_pc_c29c, label %dec_label_pc_c2ac

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c29c, %dec_label_pc_c3b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2b0

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_c2dc, %dec_label_pc_c2ac
  %v1_c2bc = phi i32 [ %v1_c3a4, %dec_label_pc_c2dc ], [ 0, %dec_label_pc_c2ac ]
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_be70, i32* %r1.global-to-local, align 4
  %v4_c2bc = mul i32 %v1_c2bc, 4
  %v5_c2bc = add i32 %v4_c2bc, %v2_bc84
  %v6_c2bc = inttoptr i32 %v5_c2bc to i32*
  %v7_c2bc = load i32, i32* %v6_c2bc, align 4
  store i32 %v7_c2bc, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c2c4, i1* %cpsr_z.global-to-local, align 1
  %v1_c2c8 = add i32 %v7_c2bc, 20
  store i32 %v1_c2c8, i32* @r5, align 4
  br i1 %v3_c2c4, label %dec_label_pc_c3c8, label %dec_label_pc_c2d0

dec_label_pc_c2d0:                                ; preds = %dec_label_pc_c2b0
  store i32 %v1_be1c, i32* %r2.global-to-local, align 4
  store i1 %v2_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3d0, label %dec_label_pc_c2dc, label %dec_label_pc_c3dc

dec_label_pc_c2dc:                                ; preds = %dec_label_pc_c2d0, %dec_label_pc_c3c8, %dec_label_pc_c3dc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2e0 = load i32, i32* @r4, align 4
  %v3_c2e0 = add i32 %v2_c2e0, 10
  %v4_c2e0 = inttoptr i32 %v3_c2e0 to i16*
  store i16 0, i16* %v4_c2e0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c2e8 = load i32, i32* @r4, align 4
  store i32 %v0_c2e8, i32* @r0, align 4
  %v2_c2ec = call i32 @function_e5a4(i32 %v0_c2e8, i32 20)
  %v3_c2ec = trunc i32 %v2_c2ec to i16
  store i32 %v2_c2ec, i32* %r0.global-to-local, align 4
  %v3_c2f0 = load i32, i32* %stack_var_-44, align 4
  %v3_c2f4 = mul i32 %v3_c2f0, 16
  %v1_c2f8 = load i32, i32* @r8, align 4
  %v2_c2f8 = add i32 %v1_c2f8, %v3_c2f4
  store i32 %v2_c2f8, i32* %r2.global-to-local, align 4
  %v1_c2fc = add i32 %v2_c2f8, 4
  %v2_c2fc = inttoptr i32 %v1_c2fc to i32*
  %v3_c2fc = load i32, i32* %v2_c2fc, align 4
  %v3_c300 = mul i32 %v3_c2fc, 65536
  store i32 %v3_c300, i32* %r1.global-to-local, align 4
  %v1_c304 = add i32 %v3_c2fc, 1
  store i32 %v1_c304, i32* %r3.global-to-local, align 4
  store i32 %v1_c304, i32* %v2_c2fc, align 4
  %v3_c30c = load i32, i32* @r4, align 4
  %v4_c30c = add i32 %v3_c30c, 10
  %v5_c30c = inttoptr i32 %v4_c30c to i16*
  store i16 %v3_c2ec, i16* %v5_c30c, align 2
  %v0_c310 = load i32, i32* %r1.global-to-local, align 4
  %v3_c310 = udiv i32 %v0_c310, 65536
  store i32 %v3_c310, i32* %r0.global-to-local, align 4
  %v1_c314 = call i32 @function_15368(i32 %v3_c310)
  store i32 %v1_c314, i32* %r0.global-to-local, align 4
  %v1_c318 = load i32, i32* @r5, align 4
  %v2_c318 = add i32 %v1_c318, 4
  %v3_c318 = inttoptr i32 %v2_c318 to i32*
  store i32 %v1_c314, i32* %v3_c318, align 4
  %v3_c31c = load i32, i32* %stack_var_-44, align 4
  %v3_c320 = mul i32 %v3_c31c, 16
  %v1_c324 = load i32, i32* @r8, align 4
  %v2_c324 = add i32 %v1_c324, %v3_c320
  store i32 %v2_c324, i32* %r3.global-to-local, align 4
  %v1_c328 = add i32 %v2_c324, 8
  %v2_c328 = inttoptr i32 %v1_c328 to i32*
  %v3_c328 = load i32, i32* %v2_c328, align 4
  %v3_c330 = urem i32 %v3_c328, 65536
  store i32 %v3_c330, i32* %r0.global-to-local, align 4
  %v1_c334 = call i32 @function_15368(i32 %v3_c330)
  %v2_c33c = load i32, i32* @r5, align 4
  %v3_c33c = add i32 %v2_c33c, 16
  %v4_c33c = inttoptr i32 %v3_c33c to i16*
  store i16 0, i16* %v4_c33c, align 2
  %v1_c340 = load i32, i32* @r5, align 4
  %v2_c340 = add i32 %v1_c340, 8
  %v3_c340 = inttoptr i32 %v2_c340 to i32*
  store i32 %v1_c334, i32* %v3_c340, align 4
  %v0_c344 = load i32, i32* @sl, align 4
  store i32 %v0_c344, i32* %r0.global-to-local, align 4
  %v1_c348 = call i32 @function_15368(i32 %v0_c344)
  %v0_c34c = load i32, i32* @r5, align 4
  store i32 %v0_c34c, i32* @r1, align 4
  store i32 %v1_c348, i32* %r2.global-to-local, align 4
  %v0_c354 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c354, i32* %r3.global-to-local, align 4
  %v0_c358 = load i32, i32* @r4, align 4
  store i32 %v0_c358, i32* %r0.global-to-local, align 4
  %v4_c35c = call i32 @function_e5f4(i32 %v0_c358, i32 %v0_c34c, i32 %v1_c348, i32 %v0_c354)
  %v5_c35c = trunc i32 %v4_c35c to i16
  store i32 %v4_c35c, i32* %r0.global-to-local, align 4
  %v3_c360 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c360, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_c368 = mul i32 %v3_c360, 32
  store i32 %v3_c368, i32* %lr.global-to-local, align 4
  %v3_c36c = load i32, i32* @r5, align 4
  %v4_c36c = add i32 %v3_c36c, 16
  %v5_c36c = inttoptr i32 %v4_c36c to i16*
  store i16 %v5_c35c, i16* %v5_c36c, align 2
  %v0_c370 = load i32, i32* %lr.global-to-local, align 4
  %v1_c370 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_c370, -8
  %v5_c370 = add i32 %v0_c370, %tmp95
  store i32 %v5_c370, i32* %lr.global-to-local, align 4
  %v0_c374 = load i32, i32* @r5, align 4
  %v1_c374 = add i32 %v0_c374, 2
  %v2_c374 = inttoptr i32 %v1_c374 to i16*
  %v3_c374 = load i16, i16* %v2_c374, align 2
  %v4_c374 = zext i16 %v3_c374 to i32
  store i32 %v4_c374, i32* %r5.global-to-local, align 4
  %v1_c378 = load i32, i32* %r1.global-to-local, align 4
  %v2_c378 = add i32 %v1_c378, %v5_c370
  store i32 %v2_c378, i32* @lr, align 4
  %v3_c37c = add i32 %v2_c378, 2
  %v4_c37c = inttoptr i32 %v3_c37c to i16*
  store i16 %v3_c374, i16* %v4_c37c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c388 = load i32, i32* @r4, align 4
  store i32 %v0_c388, i32* @r1, align 4
  %v0_c38c = load i32, i32* @fp, align 4
  store i32 %v0_c38c, i32* @r0, align 4
  %v0_c390 = load i32, i32* @r7, align 4
  store i32 %v0_c390, i32* @r2, align 4
  %v0_c39c = call i32 @function_155b4()
  %v3_c3a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c3a0, i32* %r3.global-to-local, align 4
  %v1_c3a4 = add i32 %v3_c3a0, 1
  store i32 %v1_c3a4, i32* %r0.global-to-local, align 4
  %v0_c3a8 = load i32, i32* @r6, align 4
  %v9_c3a8 = icmp eq i32 %v0_c3a8, %v1_c3a4
  store i1 %v9_c3a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c3a4, i32* %stack_var_-44, align 4
  %v8_c3b0 = icmp sgt i32 %v0_c3a8, %v1_c3a4
  br i1 %v8_c3b0, label %dec_label_pc_c2b0, label %dec_label_pc_c3b4

dec_label_pc_c3b4:                                ; preds = %dec_label_pc_c2dc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c3b8 = icmp eq i32 %v0_c3a8, 0
  store i1 %v2_c3b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c3b8, label %dec_label_pc_c29c, label %dec_label_pc_c2ac

dec_label_pc_c3c8:                                ; preds = %dec_label_pc_c2b0
  %v0_c3c8 = call i32 @function_1008c()
  %v1_c3c8 = trunc i32 %v0_c3c8 to i16
  store i32 %v0_c3c8, i32* %r0.global-to-local, align 4
  store i32 %v1_be1c, i32* %r2.global-to-local, align 4
  store i1 %v2_c3d0, i1* %cpsr_z.global-to-local, align 1
  %v3_c3d4 = load i32, i32* @r4, align 4
  %v4_c3d4 = add i32 %v3_c3d4, 4
  %v5_c3d4 = inttoptr i32 %v4_c3d4 to i16*
  store i16 %v1_c3c8, i16* %v5_c3d4, align 2
  br i1 %v2_c3d0, label %dec_label_pc_c2dc, label %dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge

dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge:    ; preds = %dec_label_pc_c3c8
  %v0_c3dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge, %dec_label_pc_c2d0
  %v0_c3dc = phi i32 [ %v0_c3dc.pre, %dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge ], [ %v7_c2bc, %dec_label_pc_c2d0 ]
  %v1_c3dc = add i32 %v0_c3dc, 40
  store i32 %v1_c3dc, i32* %r0.global-to-local, align 4
  store i32 %v6_bdfc, i32* %r1.global-to-local, align 4
  %v2_c3e4 = inttoptr i32 %v1_c3dc to i16*
  %v3_c3e4 = call i32 @function_1028c(i16* %v2_c3e4, i32 %v6_bdfc)
  store i32 %v3_c3e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2dc

; uselistorder directives
  uselistorder i32 %v0_c3c8, { 1, 0 }
  uselistorder i32 %v1_c3a4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c370, { 1, 0 }
  uselistorder i32 %v4_c35c, { 1, 0 }
  uselistorder i32 %v3_c330, { 1, 0 }
  uselistorder i32 %v3_c310, { 1, 0 }
  uselistorder i32 %v3_c2fc, { 1, 0 }
  uselistorder i32 %v2_c2ec, { 1, 0 }
  uselistorder i1 %v3_c2c4, { 1, 0 }
  uselistorder i1 %v2_c3d0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_c1dc, { 1, 0 }
  uselistorder i32 %v1_c164, { 1, 0 }
  uselistorder i32 %v1_c140, { 1, 0 }
  uselistorder i32 %v3_c130, { 1, 0 }
  uselistorder i32 %v0_c080, { 1, 0 }
  uselistorder i32 %v1_c064, { 1, 2, 0 }
  uselistorder i32 %v1_c000, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bfec, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_bf78, { 1, 0 }
  uselistorder i32 %v0_bf70, { 0, 2, 1, 3 }
  uselistorder i1 %v9_bfa0, { 1, 0 }
  uselistorder i32 %v4_bfb4, { 1, 0 }
  uselistorder i32 %v0_c094, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_bf0c, { 1, 0 }
  uselistorder i32 %v4_beec, { 1, 0 }
  uselistorder i1 %v7_bee4, { 1, 0, 2 }
  uselistorder i1 %v7_be98, { 1, 0 }
  uselistorder i32 %v3_be94, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i32 %v1_c248, { 1, 0 }
  uselistorder i32 %v1_c230, { 1, 0 }
  uselistorder i32 %v1_c218, { 1, 0 }
  uselistorder i32 %v1_c200, { 1, 0 }
  uselistorder i32 %v1_c1e8, { 1, 0 }
  uselistorder i32 %v3_bfac, { 0, 2, 1 }
  uselistorder i1 %v2_bfc8, { 1, 0 }
  uselistorder i32 %v1_bfc4, { 1, 0 }
  uselistorder i32 %v4_bfc0, { 2, 0, 1 }
  uselistorder i1 %v3_c074, { 1, 0, 2, 3 }
  uselistorder i32 %v2_becc, { 1, 0, 2 }
  uselistorder i32 %v3_be70, { 3, 4, 2, 1, 0 }
  uselistorder i1 %v7_be60, { 1, 0 }
  uselistorder i1 %v7_be34, { 1, 0 }
  uselistorder i32 %v3_be30, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_be1c, { 2, 3, 1, 0 }
  uselistorder i32 %v6_bdfc, { 8, 7, 2, 0, 1, 9, 5, 4, 6, 3 }
  uselistorder i32 %v3_bd24, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 33, 32, 34, 35, 36, 38, 37, 39, 41, 40, 43, 42, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c2dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c2ac, { 1, 0 }
  uselistorder label %dec_label_pc_c29c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c294, { 1, 0 }
  uselistorder label %dec_label_pc_c16c, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bffc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bf38, { 2, 1, 3, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_bea4, { 1, 0 }
}

define i32 @function_c3f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c3f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c3f0 = load i32, i32* @r4, align 4
  %v18_c3f0 = load i32, i32* @sb, align 4
  %v24_c3f0 = load i32, i32* @fp, align 4
  %v27_c3f0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c40c = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_c410 = load i32, i32* @r5, align 4
  store i32 %v0_c410, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c420 = load i32, i32* @r4, align 4
  %v5_c424 = inttoptr i32 %v0_c410 to i32*
  %v6_c424 = call i32 @function_a430(i32 %v0_c420, i32* %v5_c424, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c43c = load i32, i32* @r5, align 4
  store i32 %v0_c43c, i32* %r1.global-to-local, align 4
  %v0_c440 = load i32, i32* @r4, align 4
  %v5_c444 = trunc i32 %v6_c424 to i8
  %v6_c448 = inttoptr i32 %v0_c43c to i32*
  %v7_c448 = call i32 @function_a430(i32 %v0_c440, i32* %v6_c448, i32 3, i32 65535)
  %v0_c44c = load i32, i32* @r5, align 4
  store i32 %v0_c44c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c45c = load i32, i32* @r4, align 4
  %v5_c460 = inttoptr i32 %v0_c44c to i32*
  %v6_c460 = call i32 @function_a430(i32 %v0_c45c, i32* %v5_c460, i32 4, i32 64)
  %v0_c46c = load i32, i32* @r5, align 4
  store i32 %v0_c46c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c478 = load i32, i32* @r4, align 4
  %v6_c480 = inttoptr i32 %v0_c46c to i32*
  %v7_c480 = call i32 @function_a430(i32 %v0_c478, i32* %v6_c480, i32 5, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c494 = load i32, i32* @r5, align 4
  store i32 %v0_c494, i32* %r1.global-to-local, align 4
  %v0_c498 = load i32, i32* @r4, align 4
  %v1_c49c = urem i32 %v7_c480, 256
  store i32 %v1_c49c, i32* @fp, align 4
  %v4_c4a0 = inttoptr i32 %v0_c494 to i32*
  %v5_c4a0 = call i32 @function_a430(i32 %v0_c498, i32* %v4_c4a0, i32 6, i32 65535)
  %v0_c4a8 = load i32, i32* @r5, align 4
  store i32 %v0_c4a8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v5_c4a0, i32* @sl, align 4
  %v0_c4b8 = load i32, i32* @r4, align 4
  %v4_c4bc = inttoptr i32 %v0_c4a8 to i32*
  %v5_c4bc = call i32 @function_a430(i32 %v0_c4b8, i32* %v4_c4bc, i32 7, i32 65535)
  %v0_c4c4 = load i32, i32* @r5, align 4
  store i32 %v0_c4c4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c4bc, i32* @r6, align 4
  %v0_c4d4 = load i32, i32* @r4, align 4
  %v4_c4d8 = inttoptr i32 %v0_c4c4 to i32*
  %v5_c4d8 = call i32 @function_a430(i32 %v0_c4d4, i32* %v4_c4d8, i32 17, i32 65535)
  %v0_c4e4 = load i32, i32* @r5, align 4
  store i32 %v0_c4e4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_c4f0 = load i32, i32* @r4, align 4
  %v5_c4f4 = inttoptr i32 %v0_c4e4 to i32*
  %v6_c4f4 = call i32 @function_a430(i32 %v0_c4f0, i32* %v5_c4f4, i32 18, i32 65535)
  %v0_c4f8 = load i32, i32* @r5, align 4
  store i32 %v0_c4f8, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c508 = load i32, i32* @r4, align 4
  %v5_c50c = inttoptr i32 %v0_c4f8 to i32*
  %v6_c50c = call i32 @function_a430(i32 %v0_c508, i32* %v5_c50c, i32 11, i32 0)
  %v0_c510 = load i32, i32* @r5, align 4
  store i32 %v0_c510, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c520 = load i32, i32* @r4, align 4
  %v5_c524 = inttoptr i32 %v0_c510 to i32*
  %v6_c524 = call i32 @function_a430(i32 %v0_c520, i32* %v5_c524, i32 12, i32 1)
  %v0_c528 = load i32, i32* @r5, align 4
  store i32 %v0_c528, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c538 = load i32, i32* @r4, align 4
  %v5_c53c = inttoptr i32 %v0_c528 to i32*
  %v6_c53c = call i32 @function_a430(i32 %v0_c538, i32* %v5_c53c, i32 13, i32 0)
  %v0_c540 = load i32, i32* @r5, align 4
  store i32 %v0_c540, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c550 = load i32, i32* @r4, align 4
  %v5_c554 = inttoptr i32 %v0_c540 to i32*
  %v6_c554 = call i32 @function_a430(i32 %v0_c550, i32* %v5_c554, i32 14, i32 0)
  %v0_c558 = load i32, i32* @r5, align 4
  store i32 %v0_c558, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c568 = load i32, i32* @r4, align 4
  %v5_c56c = inttoptr i32 %v0_c558 to i32*
  %v6_c56c = call i32 @function_a430(i32 %v0_c568, i32* %v5_c56c, i32 15, i32 0)
  %v0_c570 = load i32, i32* @r5, align 4
  store i32 %v0_c570, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c580 = load i32, i32* @r4, align 4
  %v5_c584 = inttoptr i32 %v0_c570 to i32*
  %v6_c584 = call i32 @function_a430(i32 %v0_c580, i32* %v5_c584, i32 16, i32 0)
  %v0_c588 = load i32, i32* @r5, align 4
  store i32 %v0_c588, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_c584, i32* @sb, align 4
  %v0_c598 = load i32, i32* @r4, align 4
  %v4_c59c = inttoptr i32 %v0_c588 to i32*
  %v5_c59c = call i32 @function_a430(i32 %v0_c598, i32* %v4_c59c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c5ac = load i32, i32* @r5, align 4
  store i32 %v0_c5ac, i32* %r1.global-to-local, align 4
  %v0_c5b0 = load i32, i32* @r4, align 4
  %v4_c5b4 = inttoptr i32 %v0_c5ac to i32*
  %v5_c5b4 = call i32 @function_a430(i32 %v0_c5b0, i32* %v4_c5b4, i32 1, i32 1)
  %v2_c5c0 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_c5c0, i32* %r3.global-to-local, align 4
  %v1_c5c4 = urem i32 %v5_c5b4, 256
  %v0_c5c8 = load i32, i32* @r5, align 4
  store i32 %v0_c5c8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c5d0 = load i32, i32* @r4, align 4
  %v5_c5d8 = inttoptr i32 %v0_c5c8 to i32*
  %v6_c5d8 = call i32 @function_a3c4(i32 %v0_c5d0, i32* %v5_c5d8, i32 25, i32 %v2_c5c0, i32 %v1_c5c4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c5ec = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_c5ec, i32* @r0, align 4
  %v7_c5f0 = icmp eq i32 %v3_c5ec, -1
  store i1 %v7_c5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c5f0, label %dec_label_pc_c864, label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c3f0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c604 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c604, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_c618 = call i32 @function_15600(i32 %v3_c5ec, i32 0, i32 3, i32 %v6_c604, i32 4)
  %v7_c61c = icmp eq i32 %v5_c618, -1
  store i1 %v7_c61c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c61c, label %dec_label_pc_c85c, label %dec_label_pc_c624

dec_label_pc_c624:                                ; preds = %dec_label_pc_c5fc
  %v0_c628 = load i32, i32* @sl, align 4
  %v0_c630 = load i32, i32* @r6, align 4
  %v3_c638 = urem i32 %v7_c448, 65536
  store i32 %v3_c638, i32* %r3.global-to-local, align 4
  %v3_c63c = urem i32 %v0_c628, 65536
  store i32 %v3_c63c, i32* %r2.global-to-local, align 4
  %v3_c640 = urem i32 %v0_c630, 65536
  store i32 %v3_c640, i32* %r1.global-to-local, align 4
  %v0_c644 = load i32, i32* @r7, align 4
  %v2_c644 = icmp eq i32 %v0_c644, 0
  store i1 %v2_c644, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c644, label %dec_label_pc_ca88, label %dec_label_pc_c65c

dec_label_pc_c65c:                                ; preds = %dec_label_pc_c624
  %v3_c664 = mul i32 %v5_c59c, 65536
  %v1_c668 = add i32 %v3_c664, 2621440
  %v3_c674 = udiv i32 %v1_c668, 65536
  store i32 %v3_c674, i32* @sl, align 4
  %v3_c678 = urem i32 %v5_c4d8, 65536
  store i32 %v3_c678, i32* @r6, align 4
  %v1_c688 = urem i32 %v6_c50c, 2
  %v1_c68c = urem i32 %v6_c524, 2
  %v1_c690 = urem i32 %v6_c53c, 2
  store i32 %v6_c53c, i32* %r1.global-to-local, align 4
  %v0_c6a8 = load i32, i32* @sb, align 4
  %v1_c6a8 = urem i32 %v0_c6a8, 2
  %v1_c6ac = urem i32 %v6_c554, 2
  store i32 %v1_c6ac, i32* %r2.global-to-local, align 4
  %v1_c6b0 = urem i32 %v6_c56c, 2
  store i32 %v1_c6b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c6bc = urem i32 %v6_c53c, 256
  store i32 %v1_c6bc, i32* @sb, align 4
  %v4_c818 = sext i8 %v5_c444 to i32
  %sext = mul i32 %v6_c460, 16777216
  %v4_c834 = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_c688
  %v4_c720 = and i32 %tmp, 32
  %tmp55 = sub nsw i32 0, %v1_c68c
  %v4_c734 = and i32 %tmp55, 16
  %tmp56 = sub nsw i32 0, %v1_c690
  %v4_c748 = and i32 %tmp56, 8
  %tmp57 = sub nsw i32 0, %v1_c6ac
  %v4_c75c = and i32 %tmp57, 4
  %tmp58 = sub nsw i32 0, %v1_c6b0
  %v3_c770 = and i32 %tmp58, 2
  br label %dec_label_pc_c7d8

dec_label_pc_c6cc:                                ; preds = %dec_label_pc_c7d8, %dec_label_pc_c84c
  %v2_c6d0 = phi i32 [ %v0_c844, %dec_label_pc_c7d8 ], [ %v2_c6d0.pre, %dec_label_pc_c84c ]
  %v3_c6d0 = add i32 %v2_c6d0, 9
  %v4_c6d0 = inttoptr i32 %v3_c6d0 to i8*
  store i8 6, i8* %v4_c6d0, align 1
  %v3_c6d4 = load i32, i32* %stack_var_-44, align 4
  %v5_c6dc = mul i32 %v3_c6d4, 24
  store i32 %v5_c6dc, i32* %r3.global-to-local, align 4
  store i32 %v6_c5d8, i32* %r2.global-to-local, align 4
  %v1_c6e4 = load i32, i32* @r5, align 4
  %v2_c6e4 = add i32 %v1_c6e4, 12
  %v3_c6e4 = inttoptr i32 %v2_c6e4 to i32*
  store i32 %v6_c5d8, i32* %v3_c6e4, align 4
  %v0_c6e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6e8 = load i32, i32* @r8, align 4
  %v2_c6e8 = add i32 %v1_c6e8, %v0_c6e8
  store i32 %v2_c6e8, i32* %r3.global-to-local, align 4
  %v1_c6ec = add i32 %v2_c6e8, 16
  %v2_c6ec = inttoptr i32 %v1_c6ec to i32*
  %v3_c6ec = load i32, i32* %v2_c6ec, align 4
  store i32 %v3_c6ec, i32* %r2.global-to-local, align 4
  %v1_c6f4 = load i32, i32* @r5, align 4
  %v2_c6f4 = add i32 %v1_c6f4, 16
  %v3_c6f4 = inttoptr i32 %v2_c6f4 to i32*
  store i32 %v3_c6ec, i32* %v3_c6f4, align 4
  %v1_c6f8 = call i32 @function_15368(i32 %v3_c63c)
  %v2_c6f8 = trunc i32 %v1_c6f8 to i16
  %v3_c6fc = load i32, i32* @r5, align 4
  %v4_c6fc = add i32 %v3_c6fc, 20
  %v5_c6fc = inttoptr i32 %v4_c6fc to i16*
  store i16 %v2_c6f8, i16* %v5_c6fc, align 2
  %v1_c704 = call i32 @function_15368(i32 %v3_c640)
  %v2_c704 = trunc i32 %v1_c704 to i16
  %v3_c708 = load i32, i32* @r4, align 4
  %v4_c708 = add i32 %v3_c708, 2
  %v5_c708 = inttoptr i32 %v4_c708 to i16*
  store i16 %v2_c704, i16* %v5_c708, align 2
  %v0_c70c = load i32, i32* @r6, align 4
  %v1_c710 = call i32 @function_15368(i32 %v0_c70c)
  %v0_c714 = load i32, i32* @r4, align 4
  %v1_c714 = add i32 %v0_c714, 13
  %v2_c714 = inttoptr i32 %v1_c714 to i8*
  %v3_c714 = load i8, i8* %v2_c714, align 1
  %v4_c714 = zext i8 %v3_c714 to i32
  store i32 %v1_c688, i32* %r1.global-to-local, align 4
  %v1_c71c = and i32 %v4_c714, 223
  %v5_c720 = or i32 %v1_c71c, %v4_c720
  store i32 %v5_c720, i32* %r3.global-to-local, align 4
  %v1_c724 = trunc i32 %v5_c720 to i8
  store i8 %v1_c724, i8* %v2_c714, align 1
  %v0_c728 = load i32, i32* @r4, align 4
  %v1_c728 = add i32 %v0_c728, 13
  %v2_c728 = inttoptr i32 %v1_c728 to i8*
  %v3_c728 = load i8, i8* %v2_c728, align 1
  %v4_c728 = zext i8 %v3_c728 to i32
  store i32 %v1_c68c, i32* %r3.global-to-local, align 4
  %v1_c730 = and i32 %v4_c728, 239
  %v5_c734 = or i32 %v1_c730, %v4_c734
  store i32 %v5_c734, i32* %r2.global-to-local, align 4
  %v1_c738 = trunc i32 %v5_c734 to i8
  store i8 %v1_c738, i8* %v2_c728, align 1
  %v0_c73c = load i32, i32* @r4, align 4
  %v1_c73c = add i32 %v0_c73c, 13
  %v2_c73c = inttoptr i32 %v1_c73c to i8*
  %v3_c73c = load i8, i8* %v2_c73c, align 1
  %v4_c73c = zext i8 %v3_c73c to i32
  store i32 %v1_c690, i32* %r1.global-to-local, align 4
  %v1_c744 = and i32 %v4_c73c, 247
  %v5_c748 = or i32 %v1_c744, %v4_c748
  store i32 %v5_c748, i32* %r3.global-to-local, align 4
  %v1_c74c = trunc i32 %v5_c748 to i8
  store i8 %v1_c74c, i8* %v2_c73c, align 1
  %v0_c750 = load i32, i32* @r4, align 4
  %v1_c750 = add i32 %v0_c750, 13
  %v2_c750 = inttoptr i32 %v1_c750 to i8*
  %v3_c750 = load i8, i8* %v2_c750, align 1
  %v4_c750 = zext i8 %v3_c750 to i32
  store i32 %v1_c6ac, i32* %r3.global-to-local, align 4
  %v1_c758 = and i32 %v4_c750, 251
  %v5_c75c = or i32 %v1_c758, %v4_c75c
  store i32 %v5_c75c, i32* %r2.global-to-local, align 4
  %v1_c760 = trunc i32 %v5_c75c to i8
  store i8 %v1_c760, i8* %v2_c750, align 1
  %v0_c764 = load i32, i32* @r4, align 4
  %v1_c764 = add i32 %v0_c764, 13
  %v2_c764 = inttoptr i32 %v1_c764 to i8*
  %v3_c764 = load i8, i8* %v2_c764, align 1
  %v4_c764 = zext i8 %v3_c764 to i32
  store i32 %v1_c6b0, i32* %r1.global-to-local, align 4
  %v1_c76c = and i32 %v4_c764, 253
  %v4_c770 = or i32 %v1_c76c, %v3_c770
  store i32 %v4_c770, i32* %r3.global-to-local, align 4
  %v1_c774 = trunc i32 %v4_c770 to i8
  store i8 %v1_c774, i8* %v2_c764, align 1
  %v0_c778 = load i32, i32* @r4, align 4
  %v1_c778 = add i32 %v0_c778, 12
  %v2_c778 = inttoptr i32 %v1_c778 to i8*
  %v3_c778 = load i8, i8* %v2_c778, align 1
  %v4_c778 = zext i8 %v3_c778 to i32
  store i32 %v4_c778, i32* %r2.global-to-local, align 4
  %v1_c77c = add i32 %v0_c778, 13
  %v2_c77c = inttoptr i32 %v1_c77c to i8*
  %v3_c77c = load i8, i8* %v2_c77c, align 1
  %v4_c77c = zext i8 %v3_c77c to i32
  store i32 %v1_c6a8, i32* %r1.global-to-local, align 4
  %tmp59 = urem i8 %v3_c778, 16
  %v1_c784 = zext i8 %tmp59 to i32
  %v1_c788 = and i32 %v4_c77c, 254
  %v2_c78c = or i32 %v1_c788, %v1_c6a8
  store i32 %v2_c78c, i32* %r3.global-to-local, align 4
  %v1_c790 = or i32 %v1_c784, 80
  store i32 %v1_c790, i32* %r2.global-to-local, align 4
  %v1_c794 = trunc i32 %v2_c78c to i8
  store i8 %v1_c794, i8* %v2_c77c, align 1
  %v0_c798 = load i32, i32* %r2.global-to-local, align 4
  %v1_c798 = trunc i32 %v0_c798 to i8
  %v2_c798 = load i32, i32* @r4, align 4
  %v3_c798 = add i32 %v2_c798, 12
  %v4_c798 = inttoptr i32 %v3_c798 to i8*
  store i8 %v1_c798, i8* %v4_c798, align 1
  %v1_c79c = load i32, i32* @r4, align 4
  %v2_c79c = add i32 %v1_c79c, 4
  %v3_c79c = inttoptr i32 %v2_c79c to i32*
  store i32 %v1_c710, i32* %v3_c79c, align 4
  %v0_c7a0 = call i32 @function_1008c()
  %v1_c7a0 = trunc i32 %v0_c7a0 to i16
  %v0_c7a4 = load i32, i32* @sb, align 4
  %v2_c7a4 = icmp eq i32 %v0_c7a4, 0
  store i1 %v2_c7a4, i1* %cpsr_z.global-to-local, align 1
  %v3_c7b0.pre = load i32, i32* @r4, align 4
  br i1 %v2_c7a4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c6cc
  %v2_c7a8 = add i32 %v3_c7b0.pre, 13
  %v3_c7a8 = inttoptr i32 %v2_c7a8 to i8*
  %v4_c7a8 = load i8, i8* %v3_c7a8, align 1
  %v5_c7a8 = zext i8 %v4_c7a8 to i32
  %v2_c7ac = or i32 %v5_c7a8, 8
  store i32 %v2_c7ac, i32* @r3, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c6cc, %bb
  %v4_c7b0 = add i32 %v3_c7b0.pre, 14
  %v5_c7b0 = inttoptr i32 %v4_c7b0 to i16*
  store i16 %v1_c7a0, i16* %v5_c7b0, align 2
  store i32 %v5_c59c, i32* %r1.global-to-local, align 4
  %v0_c7b8 = load i32, i32* @r5, align 4
  %v1_c7b8 = add i32 %v0_c7b8, 40
  br i1 %v2_c7a4, label %bb54, label %bb53

bb53:                                             ; preds = %.thread
  %v1_c7bc = load i32, i32* @r3, align 4
  %v2_c7bc = trunc i32 %v1_c7bc to i8
  %v3_c7bc = load i32, i32* @r4, align 4
  %v4_c7bc = add i32 %v3_c7bc, 13
  %v5_c7bc = inttoptr i32 %v4_c7bc to i8*
  store i8 %v2_c7bc, i8* %v5_c7bc, align 1
  br label %bb54

bb54:                                             ; preds = %.thread, %bb53
  %v2_c7c0 = inttoptr i32 %v1_c7b8 to i16*
  %v3_c7c0 = call i32 @function_1028c(i16* %v2_c7c0, i32 %v5_c59c)
  %v3_c7c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7c4, i32* %r3.global-to-local, align 4
  %v1_c7c8 = add i32 %v3_c7c4, 1
  store i32 %v1_c7c8, i32* @r4, align 4
  %v1_c7cc = load i32, i32* @r7, align 4
  %v9_c7cc = icmp eq i32 %v1_c7c8, %v1_c7cc
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7c8, i32* %stack_var_-44, align 4
  %v6_c7d4 = icmp slt i32 %v1_c7c8, %v1_c7cc
  br i1 %v6_c7d4, label %dec_label_pc_c7d8, label %dec_label_pc_c870

dec_label_pc_c7d8:                                ; preds = %bb54, %dec_label_pc_c65c
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c7e4 = call i32 @function_13d28(i32 1510, i32 1)
  store i32 %v2_c40c, i32* %r2.global-to-local, align 4
  %v3_c7ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7ec, i32* %r3.global-to-local, align 4
  %v2_c7f0 = load i32, i32* @r4, align 4
  %v5_c7f0 = mul i32 %v2_c7f0, 4
  %v6_c7f0 = add i32 %v5_c7f0, %v2_c40c
  %v7_c7f0 = inttoptr i32 %v6_c7f0 to i32*
  store i32 %v2_c7e4, i32* %v7_c7f0, align 4
  %v0_c7f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_c7f4 = mul i32 %v1_c7f4, 4
  %v5_c7f4 = add i32 %v4_c7f4, %v0_c7f4
  %v6_c7f4 = inttoptr i32 %v5_c7f4 to i32*
  %v7_c7f4 = load i32, i32* %v6_c7f4, align 4
  store i32 %v7_c7f4, i32* @r5, align 4
  %v1_c7f8 = inttoptr i32 %v7_c7f4 to i8*
  %v2_c7f8 = load i8, i8* %v1_c7f8, align 1
  %tmp60 = urem i8 %v2_c7f8, 16
  %v1_c7fc = zext i8 %tmp60 to i32
  %v1_c800 = or i32 %v1_c7fc, 64
  store i32 %v1_c800, i32* %r2.global-to-local, align 4
  %v1_c804 = trunc i32 %v1_c800 to i8
  store i8 %v1_c804, i8* %v1_c7f8, align 1
  %v0_c808 = load i32, i32* @r5, align 4
  %v1_c808 = inttoptr i32 %v0_c808 to i8*
  %v2_c808 = load i8, i8* %v1_c808, align 1
  %v1_c80c = and i8 %v2_c808, -16
  %v1_c810 = or i8 %v1_c80c, 5
  store i8 %v1_c810, i8* %v1_c808, align 1
  store i32 %v4_c818, i32* %r3.global-to-local, align 4
  %v0_c81c = load i32, i32* @sl, align 4
  %v2_c820 = load i32, i32* @r5, align 4
  %v3_c820 = add i32 %v2_c820, 1
  %v4_c820 = inttoptr i32 %v3_c820 to i8*
  store i8 %v5_c444, i8* %v4_c820, align 1
  %v1_c824 = call i32 @function_15368(i32 %v0_c81c)
  %v2_c824 = trunc i32 %v1_c824 to i16
  %v3_c828 = load i32, i32* @r5, align 4
  %v4_c828 = add i32 %v3_c828, 2
  %v5_c828 = inttoptr i32 %v4_c828 to i16*
  store i16 %v2_c824, i16* %v5_c828, align 2
  %v1_c830 = call i32 @function_15368(i32 %v3_c638)
  %v2_c830 = trunc i32 %v1_c830 to i16
  store i32 %v4_c834, i32* %r1.global-to-local, align 4
  %v0_c838 = load i32, i32* @fp, align 4
  %v2_c838 = icmp eq i32 %v0_c838, 0
  store i1 %v2_c838, i1* %cpsr_z.global-to-local, align 1
  %v3_c83c = load i32, i32* @r5, align 4
  %v4_c83c = add i32 %v3_c83c, 4
  %v5_c83c = inttoptr i32 %v4_c83c to i16*
  store i16 %v2_c830, i16* %v5_c83c, align 2
  %v0_c840 = load i32, i32* %r1.global-to-local, align 4
  %v1_c840 = trunc i32 %v0_c840 to i8
  %v2_c840 = load i32, i32* @r5, align 4
  %v3_c840 = add i32 %v2_c840, 8
  %v4_c840 = inttoptr i32 %v3_c840 to i8*
  store i8 %v1_c840, i8* %v4_c840, align 1
  %v0_c844 = load i32, i32* @r5, align 4
  %v1_c844 = add i32 %v0_c844, 20
  store i32 %v1_c844, i32* @r4, align 4
  %v0_c848 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c848, label %dec_label_pc_c6cc, label %dec_label_pc_c84c

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c7d8
  %v1_c850 = call i32 @function_15368(i32 16384)
  %v2_c850 = trunc i32 %v1_c850 to i16
  %v3_c854 = load i32, i32* @r5, align 4
  %v4_c854 = add i32 %v3_c854, 6
  %v5_c854 = inttoptr i32 %v4_c854 to i16*
  store i16 %v2_c850, i16* %v5_c854, align 2
  %v2_c6d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c6cc

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c5fc
  store i32 %v3_c5ec, i32* @r0, align 4
  %v1_c860 = call i32 @function_1663c(i32 %v3_c5ec)
  br label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c3f0, %dec_label_pc_c85c
  %v1_c86c = phi i32 [ %v3_c5ec, %dec_label_pc_c3f0 ], [ %v1_c860, %dec_label_pc_c85c ]
  store i32 %v3_c3f0, i32* %r4.global-to-local, align 4
  store i32 %v18_c3f0, i32* %sb.global-to-local, align 4
  store i32 %v24_c3f0, i32* %fp.global-to-local, align 4
  store i32 %v27_c3f0, i32* %lr.global-to-local, align 4
  ret i32 %v1_c86c

dec_label_pc_c870:                                ; preds = %bb54
  store i32 %v5_c59c, i32* %r2.global-to-local, align 4
  %v1_c874 = add i32 %v5_c59c, 20
  store i32 %v1_c874, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c87c

dec_label_pc_c87c:                                ; preds = %dec_label_pc_ca88, %dec_label_pc_c870
  %v0_c88c6 = phi i32 [ %v1_c7cc, %dec_label_pc_c870 ], [ 0, %dec_label_pc_ca88 ]
  %stack_var_-148.0 = phi i32 [ %v3_c664, %dec_label_pc_c870 ], [ %v3_ca94, %dec_label_pc_ca88 ]
  %storemerge = add i32 %v5_c59c, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-148.0, i32* %r2.global-to-local, align 4
  %v1_c880 = add i32 %stack_var_-148.0, 1310720
  store i32 %v1_c880, i32* %r3.global-to-local, align 4
  %v3_c884 = udiv i32 %v1_c880, 65536
  store i32 %v3_c884, i32* @sl, align 4
  %v3_c9ec = icmp eq i32 %v6_c5d8, -1
  %v8_c9ec = icmp eq i32 %v6_c5d8, -1
  %v3_ca08 = icmp eq i32 %v3_c638, 65535
  %v2_ca6c = icmp eq i32 %v1_c5c4, 0
  br label %dec_label_pc_c888

dec_label_pc_c888:                                ; preds = %dec_label_pc_c888, %dec_label_pc_c9a8, %dec_label_pc_c87c
  %v0_c88c = phi i32 [ %v0_c88c6, %dec_label_pc_c87c ], [ 0, %dec_label_pc_c9a8 ], [ 0, %dec_label_pc_c888 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c88c = icmp eq i32 %v0_c88c, 0
  store i1 %v2_c88c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c88c, label %dec_label_pc_c888, label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %dec_label_pc_c888, %dec_label_pc_c9a8
  br label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c91c, %dec_label_pc_c898
  %v1_c8b0 = phi i32 [ %v1_c998, %dec_label_pc_c91c ], [ 0, %dec_label_pc_c898 ]
  %v5_c8a0 = mul i32 %v1_c8b0, 24
  %v1_c8a4 = load i32, i32* @r8, align 4
  %v2_c8a4 = add i32 %v1_c8a4, %v5_c8a0
  store i32 %v2_c8a4, i32* %r3.global-to-local, align 4
  store i32 %v2_c40c, i32* %r1.global-to-local, align 4
  %v1_c8ac = add i32 %v2_c8a4, 20
  %v2_c8ac = inttoptr i32 %v1_c8ac to i8*
  %v3_c8ac = load i8, i8* %v2_c8ac, align 1
  %v4_c8ac = zext i8 %v3_c8ac to i32
  store i32 %v4_c8ac, i32* %r2.global-to-local, align 4
  %v4_c8b0 = mul i32 %v1_c8b0, 4
  %v5_c8b0 = add i32 %v4_c8b0, %v2_c40c
  %v6_c8b0 = inttoptr i32 %v5_c8b0 to i32*
  %v7_c8b0 = load i32, i32* %v6_c8b0, align 4
  store i32 %v7_c8b0, i32* @r5, align 4
  %v7_c8b4 = icmp eq i8 %v3_c8ac, 31
  store i1 %v7_c8b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c8b8 = add i32 %v7_c8b0, 20
  store i32 %v1_c8b8, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_c8ac, 32
  br i1 %tmp61, label %dec_label_pc_c9bc, label %dec_label_pc_c8c0

dec_label_pc_c8c0:                                ; preds = %dec_label_pc_c89c
  store i32 %v6_c5d8, i32* %r2.global-to-local, align 4
  store i1 %v8_c9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c9ec, label %dec_label_pc_c9f8, label %dec_label_pc_c8cc

dec_label_pc_c8cc:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c8c0
  store i32 %v3_c638, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ca08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ca08, label %dec_label_pc_ca14, label %dec_label_pc_c8e0

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge, %dec_label_pc_c8cc
  %v1_c8e4 = phi i32 [ %v1_c8e4.pre, %dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge ], [ 65535, %dec_label_pc_c8cc ]
  store i32 %v3_c63c, i32* %r1.global-to-local, align 4
  %v9_c8e4 = icmp eq i32 %v3_c63c, %v1_c8e4
  store i1 %v9_c8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8e4, label %dec_label_pc_ca28, label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge, %dec_label_pc_c8e0
  %v1_c8f0 = phi i32 [ %v1_c8f0.pre, %dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge ], [ %v1_c8e4, %dec_label_pc_c8e0 ]
  store i32 %v3_c640, i32* %r2.global-to-local, align 4
  %v9_c8f0 = icmp eq i32 %v3_c640, %v1_c8f0
  store i1 %v9_c8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8f0, label %dec_label_pc_ca3c, label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge, %dec_label_pc_c8ec
  %v1_c8fc = phi i32 [ %v1_c8fc.pre, %dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge ], [ %v1_c8f0, %dec_label_pc_c8ec ]
  store i32 %v5_c4d8, i32* %r3.global-to-local, align 4
  %v9_c8fc = icmp eq i32 %v5_c4d8, %v1_c8fc
  store i1 %v9_c8fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8fc, label %dec_label_pc_ca50, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_ca3c.dec_label_pc_c904_crit_edge, %dec_label_pc_c8f8
  %v1_c908 = phi i32 [ %v1_c908.pre, %dec_label_pc_ca3c.dec_label_pc_c904_crit_edge ], [ %v1_c8fc, %dec_label_pc_c8f8 ]
  store i32 %v6_c4f4, i32* %r1.global-to-local, align 4
  %v9_c908 = icmp eq i32 %v6_c4f4, %v1_c908
  store i1 %v9_c908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c908, label %dec_label_pc_ca64, label %dec_label_pc_c910

dec_label_pc_c910:                                ; preds = %dec_label_pc_ca50, %dec_label_pc_c904
  store i32 %v1_c5c4, i32* %r2.global-to-local, align 4
  store i1 %v2_ca6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ca6c, label %dec_label_pc_c91c, label %dec_label_pc_ca78

dec_label_pc_c91c:                                ; preds = %dec_label_pc_c910, %dec_label_pc_ca64, %dec_label_pc_ca78
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c920 = load i32, i32* @r5, align 4
  %v3_c920 = add i32 %v2_c920, 10
  %v4_c920 = inttoptr i32 %v3_c920 to i16*
  store i16 0, i16* %v4_c920, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c928 = load i32, i32* @r5, align 4
  store i32 %v0_c928, i32* @r0, align 4
  %v2_c92c = call i32 @function_e5a4(i32 %v0_c928, i32 20)
  %v3_c92c = trunc i32 %v2_c92c to i16
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c934 = load i32, i32* @r5, align 4
  %v4_c934 = add i32 %v3_c934, 10
  %v5_c934 = inttoptr i32 %v4_c934 to i16*
  store i16 %v3_c92c, i16* %v5_c934, align 2
  %v0_c938 = load i32, i32* %r1.global-to-local, align 4
  %v1_c938 = trunc i32 %v0_c938 to i16
  %v2_c938 = load i32, i32* @r6, align 4
  %v3_c938 = add i32 %v2_c938, 16
  %v4_c938 = inttoptr i32 %v3_c938 to i16*
  store i16 %v1_c938, i16* %v4_c938, align 2
  %v0_c93c = load i32, i32* @sl, align 4
  %v1_c940 = call i32 @function_15368(i32 %v0_c93c)
  %v0_c944 = load i32, i32* @r6, align 4
  store i32 %v0_c944, i32* @r1, align 4
  store i32 %v1_c940, i32* %r2.global-to-local, align 4
  %v0_c94c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c94c, i32* %r3.global-to-local, align 4
  %v0_c950 = load i32, i32* @r5, align 4
  %v4_c954 = call i32 @function_e5f4(i32 %v0_c950, i32 %v0_c944, i32 %v1_c940, i32 %v0_c94c)
  %v5_c954 = trunc i32 %v4_c954 to i16
  %v3_c958 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c958, i32* %r3.global-to-local, align 4
  %v3_c95c = mul i32 %v3_c958, 32
  store i32 %v3_c95c, i32* %lr.global-to-local, align 4
  %v3_c960 = load i32, i32* @r6, align 4
  %v4_c960 = add i32 %v3_c960, 16
  %v5_c960 = inttoptr i32 %v4_c960 to i16*
  store i16 %v5_c954, i16* %v5_c960, align 2
  %v0_c964 = load i32, i32* %lr.global-to-local, align 4
  %v1_c964 = load i32, i32* %r3.global-to-local, align 4
  %tmp62 = mul i32 %v1_c964, -8
  %v5_c964 = add i32 %v0_c964, %tmp62
  store i32 %v5_c964, i32* %lr.global-to-local, align 4
  %v0_c968 = load i32, i32* @r6, align 4
  %v1_c968 = add i32 %v0_c968, 2
  %v2_c968 = inttoptr i32 %v1_c968 to i16*
  %v3_c968 = load i16, i16* %v2_c968, align 2
  %v1_c96c = load i32, i32* @r8, align 4
  %v2_c96c = add i32 %v1_c96c, %v5_c964
  store i32 %v2_c96c, i32* @lr, align 4
  %v3_c970 = add i32 %v2_c96c, 2
  %v4_c970 = inttoptr i32 %v3_c970 to i16*
  store i16 %v3_c968, i16* %v4_c970, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c97c = load i32, i32* @r5, align 4
  store i32 %v0_c97c, i32* @r1, align 4
  store i32 %v3_c5ec, i32* @r0, align 4
  %v0_c984 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c984, i32* @r2, align 4
  %v0_c990 = call i32 @function_155b4()
  %v3_c994 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c994, i32* %r3.global-to-local, align 4
  %v1_c998 = add i32 %v3_c994, 1
  %v1_c99c = load i32, i32* @r7, align 4
  %v9_c99c = icmp eq i32 %v1_c998, %v1_c99c
  store i1 %v9_c99c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c998, i32* %stack_var_-44, align 4
  %v5_c9a4 = icmp slt i32 %v1_c998, %v1_c99c
  br i1 %v5_c9a4, label %dec_label_pc_c89c, label %dec_label_pc_c9a8

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c91c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c9ac = icmp eq i32 %v1_c99c, 0
  store i1 %v2_c9ac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c9ac, label %dec_label_pc_c888, label %dec_label_pc_c898

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c89c
  %v1_c9bc = add i32 %v2_c8a4, 16
  %v2_c9bc = inttoptr i32 %v1_c9bc to i32*
  %v3_c9bc = load i32, i32* %v2_c9bc, align 4
  %v1_c9c0 = call i32 @function_154ec(i32 %v3_c9bc)
  store i32 %v1_c9c0, i32* %r4.global-to-local, align 4
  %v0_c9c8 = call i32 @function_1008c()
  %v3_c9cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c9cc, i32* %r2.global-to-local, align 4
  %v5_c9d4 = mul i32 %v3_c9cc, 24
  %v1_c9d8 = load i32, i32* @r8, align 4
  %v2_c9d8 = add i32 %v1_c9d8, %v5_c9d4
  store i32 %v2_c9d8, i32* %r3.global-to-local, align 4
  %v1_c9dc = add i32 %v2_c9d8, 20
  %v2_c9dc = inttoptr i32 %v1_c9dc to i8*
  %v3_c9dc = load i8, i8* %v2_c9dc, align 1
  %v4_c9dc = zext i8 %v3_c9dc to i32
  store i32 %v4_c9dc, i32* %r2.global-to-local, align 4
  %v0_c9e0 = load i32, i32* %r4.global-to-local, align 4
  %v7_c9e0 = lshr i32 %v0_c9c8, %v4_c9dc
  %v8_c9e0 = add i32 %v7_c9e0, %v0_c9e0
  %v1_c9e4 = call i32 @function_15344(i32 %v8_c9e0)
  store i32 %v6_c5d8, i32* %r2.global-to-local, align 4
  store i1 %v8_c9ec, i1* %cpsr_z.global-to-local, align 1
  %v1_c9f0 = load i32, i32* @r5, align 4
  %v2_c9f0 = add i32 %v1_c9f0, 16
  %v3_c9f0 = inttoptr i32 %v2_c9f0 to i32*
  store i32 %v1_c9e4, i32* %v3_c9f0, align 4
  br i1 %v3_c9ec, label %dec_label_pc_c9f8, label %dec_label_pc_c8cc

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c8c0
  %v0_c9f8 = call i32 @function_1008c()
  store i32 %v3_c638, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ca08, i1* %cpsr_z.global-to-local, align 1
  %v1_ca0c = load i32, i32* @r5, align 4
  %v2_ca0c = add i32 %v1_ca0c, 12
  %v3_ca0c = inttoptr i32 %v2_ca0c to i32*
  store i32 %v0_c9f8, i32* %v3_ca0c, align 4
  br i1 %v3_ca08, label %dec_label_pc_ca14, label %dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge

dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge:    ; preds = %dec_label_pc_c9f8
  %v1_c8e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8e0

dec_label_pc_ca14:                                ; preds = %dec_label_pc_c9f8, %dec_label_pc_c8cc
  %v0_ca14 = call i32 @function_1008c()
  %v1_ca14 = trunc i32 %v0_ca14 to i16
  store i32 %v3_c63c, i32* %r1.global-to-local, align 4
  %v1_ca1c = load i32, i32* @r4, align 4
  %v9_ca1c = icmp eq i32 %v3_c63c, %v1_ca1c
  store i1 %v9_ca1c, i1* %cpsr_z.global-to-local, align 1
  %v3_ca20 = load i32, i32* @r5, align 4
  %v4_ca20 = add i32 %v3_ca20, 4
  %v5_ca20 = inttoptr i32 %v4_ca20 to i16*
  store i16 %v1_ca14, i16* %v5_ca20, align 2
  br i1 %v9_ca1c, label %dec_label_pc_ca28, label %dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge

dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge:    ; preds = %dec_label_pc_ca14
  %v1_c8f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8ec

dec_label_pc_ca28:                                ; preds = %dec_label_pc_ca14, %dec_label_pc_c8e0
  %v0_ca28 = call i32 @function_1008c()
  %v1_ca28 = trunc i32 %v0_ca28 to i16
  store i32 %v3_c640, i32* %r2.global-to-local, align 4
  %v1_ca30 = load i32, i32* @r4, align 4
  %v9_ca30 = icmp eq i32 %v3_c640, %v1_ca30
  store i1 %v9_ca30, i1* %cpsr_z.global-to-local, align 1
  %v3_ca34 = load i32, i32* @r5, align 4
  %v4_ca34 = add i32 %v3_ca34, 20
  %v5_ca34 = inttoptr i32 %v4_ca34 to i16*
  store i16 %v1_ca28, i16* %v5_ca34, align 2
  br i1 %v9_ca30, label %dec_label_pc_ca3c, label %dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge

dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge:    ; preds = %dec_label_pc_ca28
  %v1_c8fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8f8

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_ca28, %dec_label_pc_c8ec
  %v0_ca3c = call i32 @function_1008c()
  %v1_ca3c = trunc i32 %v0_ca3c to i16
  store i32 %v5_c4d8, i32* %r3.global-to-local, align 4
  %v1_ca44 = load i32, i32* @r4, align 4
  %v9_ca44 = icmp eq i32 %v5_c4d8, %v1_ca44
  store i1 %v9_ca44, i1* %cpsr_z.global-to-local, align 1
  %v3_ca48 = load i32, i32* @r6, align 4
  %v4_ca48 = add i32 %v3_ca48, 2
  %v5_ca48 = inttoptr i32 %v4_ca48 to i16*
  store i16 %v1_ca3c, i16* %v5_ca48, align 2
  br i1 %v9_ca44, label %dec_label_pc_ca50, label %dec_label_pc_ca3c.dec_label_pc_c904_crit_edge

dec_label_pc_ca3c.dec_label_pc_c904_crit_edge:    ; preds = %dec_label_pc_ca3c
  %v1_c908.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c904

dec_label_pc_ca50:                                ; preds = %dec_label_pc_ca3c, %dec_label_pc_c8f8
  %v0_ca50 = call i32 @function_1008c()
  store i32 %v6_c4f4, i32* %r1.global-to-local, align 4
  %v1_ca58 = load i32, i32* @r4, align 4
  %v9_ca58 = icmp eq i32 %v6_c4f4, %v1_ca58
  store i1 %v9_ca58, i1* %cpsr_z.global-to-local, align 1
  %v1_ca5c = load i32, i32* @r6, align 4
  %v2_ca5c = add i32 %v1_ca5c, 4
  %v3_ca5c = inttoptr i32 %v2_ca5c to i32*
  store i32 %v0_ca50, i32* %v3_ca5c, align 4
  br i1 %v9_ca58, label %dec_label_pc_ca64, label %dec_label_pc_c910

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca50, %dec_label_pc_c904
  %v0_ca64 = call i32 @function_1008c()
  store i32 %v1_c5c4, i32* %r2.global-to-local, align 4
  store i1 %v2_ca6c, i1* %cpsr_z.global-to-local, align 1
  %v1_ca70 = load i32, i32* @r6, align 4
  %v2_ca70 = add i32 %v1_ca70, 8
  %v3_ca70 = inttoptr i32 %v2_ca70 to i32*
  store i32 %v0_ca64, i32* %v3_ca70, align 4
  br i1 %v2_ca6c, label %dec_label_pc_c91c, label %dec_label_pc_ca78

dec_label_pc_ca78:                                ; preds = %dec_label_pc_c910, %dec_label_pc_ca64
  %v0_ca78 = load i32, i32* @r5, align 4
  %v1_ca78 = add i32 %v0_ca78, 40
  store i32 %v5_c59c, i32* %r1.global-to-local, align 4
  %v2_ca80 = inttoptr i32 %v1_ca78 to i16*
  %v3_ca80 = call i32 @function_1028c(i16* %v2_ca80, i32 %v5_c59c)
  br label %dec_label_pc_c91c

dec_label_pc_ca88:                                ; preds = %dec_label_pc_c624
  store i32 %v5_c59c, i32* %r1.global-to-local, align 4
  %v1_ca90 = add i32 %v5_c59c, 20
  store i32 %v1_ca90, i32* %sb.global-to-local, align 4
  %v3_ca94 = mul i32 %v5_c59c, 65536
  store i32 %v3_ca94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c87c

; uselistorder directives
  uselistorder i32 %v1_c998, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c964, { 1, 0 }
  uselistorder i1 %v2_ca6c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_ca08, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-148.0, { 1, 0 }
  uselistorder i32 %v0_c844, { 1, 0 }
  uselistorder i32 %v1_c7c8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c6b0, { 2, 0, 1 }
  uselistorder i32 %v1_c6ac, { 2, 0, 1 }
  uselistorder i32 %v1_c6a8, { 1, 0 }
  uselistorder i32 %v1_c690, { 1, 0 }
  uselistorder i32 %v1_c68c, { 1, 0 }
  uselistorder i32 %v1_c688, { 1, 0 }
  uselistorder i32 %v3_c664, { 1, 0 }
  uselistorder i32 %v3_c638, { 0, 1, 4, 2, 3 }
  uselistorder i1 %v7_c61c, { 1, 0 }
  uselistorder i1 %v7_c5f0, { 1, 0 }
  uselistorder i32 %v3_c5ec, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v6_c5d8, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_c5c4, { 1, 0, 2, 3 }
  uselistorder i32 %v5_c59c, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_c53c, { 0, 2, 1 }
  uselistorder i32 %v6_c4f4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c4d8, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_c444, { 1, 0 }
  uselistorder i32 %v2_c40c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 16, 17, 18, 11, 12, 13, 14, 15, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 24 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ca78, { 1, 0 }
  uselistorder label %dec_label_pc_c91c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c898, { 1, 0 }
  uselistorder label %dec_label_pc_c888, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c864, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c6cc, { 1, 0 }
}

define i32 @function_caa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_caa8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_caa8 = load i32, i32* @r4, align 4
  %v27_caa8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_cac4 = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_cac8 = load i32, i32* @r5, align 4
  store i32 %v0_cac8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cad8 = load i32, i32* @r4, align 4
  %v5_cadc = inttoptr i32 %v0_cac8 to i32*
  %v6_cadc = call i32 @function_a430(i32 %v0_cad8, i32* %v5_cadc, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_caf4 = load i32, i32* @r5, align 4
  store i32 %v0_caf4, i32* %r1.global-to-local, align 4
  %v0_caf8 = load i32, i32* @r4, align 4
  %v5_cafc = trunc i32 %v6_cadc to i8
  %v6_cb00 = inttoptr i32 %v0_caf4 to i32*
  %v7_cb00 = call i32 @function_a430(i32 %v0_caf8, i32* %v6_cb00, i32 3, i32 65535)
  %v0_cb04 = load i32, i32* @r5, align 4
  store i32 %v0_cb04, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r4, align 4
  %v5_cb18 = inttoptr i32 %v0_cb04 to i32*
  %v6_cb18 = call i32 @function_a430(i32 %v0_cb14, i32* %v5_cb18, i32 4, i32 64)
  %v0_cb24 = load i32, i32* @r5, align 4
  store i32 %v0_cb24, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cb30 = load i32, i32* @r4, align 4
  %v6_cb38 = inttoptr i32 %v0_cb24 to i32*
  %v7_cb38 = call i32 @function_a430(i32 %v0_cb30, i32* %v6_cb38, i32 5, i32 1)
  %v1_cb44 = urem i32 %v7_cb38, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cb50 = load i32, i32* @r5, align 4
  store i32 %v0_cb50, i32* %r1.global-to-local, align 4
  %v0_cb54 = load i32, i32* @r4, align 4
  %v5_cb5c = inttoptr i32 %v0_cb50 to i32*
  %v6_cb5c = call i32 @function_a430(i32 %v0_cb54, i32* %v5_cb5c, i32 6, i32 65535)
  %v0_cb68 = load i32, i32* @r5, align 4
  store i32 %v0_cb68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cb74 = load i32, i32* @r4, align 4
  %v5_cb78 = inttoptr i32 %v0_cb68 to i32*
  %v6_cb78 = call i32 @function_a430(i32 %v0_cb74, i32* %v5_cb78, i32 7, i32 65535)
  %v0_cb84 = load i32, i32* @r5, align 4
  store i32 %v0_cb84, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_cb90 = load i32, i32* @r4, align 4
  %v5_cb94 = inttoptr i32 %v0_cb84 to i32*
  %v6_cb94 = call i32 @function_a430(i32 %v0_cb90, i32* %v5_cb94, i32 17, i32 65535)
  %v0_cb98 = load i32, i32* @r5, align 4
  store i32 %v0_cb98, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cba8 = load i32, i32* @r4, align 4
  %v5_cbac = inttoptr i32 %v0_cb98 to i32*
  %v6_cbac = call i32 @function_a430(i32 %v0_cba8, i32* %v5_cbac, i32 18, i32 0)
  %v0_cbb0 = load i32, i32* @r5, align 4
  store i32 %v0_cbb0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbc0 = load i32, i32* @r4, align 4
  %v5_cbc4 = inttoptr i32 %v0_cbb0 to i32*
  %v6_cbc4 = call i32 @function_a430(i32 %v0_cbc0, i32* %v5_cbc4, i32 11, i32 0)
  %v0_cbc8 = load i32, i32* @r5, align 4
  store i32 %v0_cbc8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbd8 = load i32, i32* @r4, align 4
  %v5_cbdc = inttoptr i32 %v0_cbc8 to i32*
  %v6_cbdc = call i32 @function_a430(i32 %v0_cbd8, i32* %v5_cbdc, i32 12, i32 0)
  %v0_cbe0 = load i32, i32* @r5, align 4
  store i32 %v0_cbe0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbf0 = load i32, i32* @r4, align 4
  %v5_cbf4 = inttoptr i32 %v0_cbe0 to i32*
  %v6_cbf4 = call i32 @function_a430(i32 %v0_cbf0, i32* %v5_cbf4, i32 13, i32 0)
  %v0_cbf8 = load i32, i32* @r5, align 4
  store i32 %v0_cbf8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cc08 = load i32, i32* @r4, align 4
  %v5_cc0c = inttoptr i32 %v0_cbf8 to i32*
  %v6_cc0c = call i32 @function_a430(i32 %v0_cc08, i32* %v5_cc0c, i32 14, i32 0)
  %v0_cc10 = load i32, i32* @r5, align 4
  store i32 %v0_cc10, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v6_cc0c, i32* @sb, align 4
  %v0_cc20 = load i32, i32* @r4, align 4
  %v4_cc24 = inttoptr i32 %v0_cc10 to i32*
  %v5_cc24 = call i32 @function_a430(i32 %v0_cc20, i32* %v4_cc24, i32 15, i32 1)
  %v0_cc28 = load i32, i32* @r5, align 4
  store i32 %v0_cc28, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v5_cc24, i32* @sl, align 4
  %v0_cc38 = load i32, i32* @r4, align 4
  %v4_cc3c = inttoptr i32 %v0_cc28 to i32*
  %v5_cc3c = call i32 @function_a430(i32 %v0_cc38, i32* %v4_cc3c, i32 16, i32 0)
  %v0_cc44 = load i32, i32* @r5, align 4
  store i32 %v0_cc44, i32* %r1.global-to-local, align 4
  %v2_cc48 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_cc48, i32* %r3.global-to-local, align 4
  store i32 %v5_cc3c, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cc54 = load i32, i32* @r4, align 4
  %v5_cc58 = inttoptr i32 %v0_cc44 to i32*
  %v6_cc58 = call i32 @function_a3c4(i32 %v0_cc54, i32* %v5_cc58, i32 25, i32 %v2_cc48, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_cc6c = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_cc6c, i32* @r0, align 4
  %v7_cc70 = icmp eq i32 %v3_cc6c, -1
  store i1 %v7_cc70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_cc6c, i32* @fp, align 4
  br i1 %v7_cc70, label %dec_label_pc_d114, label %dec_label_pc_cc7c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_caa8
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cc84 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cc84, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_cc98 = call i32 @function_15600(i32 %v3_cc6c, i32 0, i32 3, i32 %v6_cc84, i32 ptrtoint (i32* @0 to i32))
  %v7_cc9c = icmp eq i32 %v5_cc98, -1
  store i1 %v7_cc9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cc9c, label %dec_label_pc_d10c, label %dec_label_pc_cca4

dec_label_pc_cca4:                                ; preds = %dec_label_pc_cc7c
  %v3_ccbc = urem i32 %v6_cb78, 65536
  %v3_cccc = urem i32 %v7_cb00, 65536
  store i32 %v3_cccc, i32* %r3.global-to-local, align 4
  %v3_ccd0 = urem i32 %v6_cb5c, 65536
  store i32 %v3_ccd0, i32* %r2.global-to-local, align 4
  %v1_ccd4 = urem i32 %v6_cbc4, 256
  store i32 %v1_ccd4, i32* %r1.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r7, align 4
  %v2_ccd8 = icmp eq i32 %v0_ccd8, 0
  store i1 %v2_ccd8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ccd8, label %dec_label_pc_d028.preheader, label %dec_label_pc_ccf0

dec_label_pc_ccf0:                                ; preds = %dec_label_pc_cca4
  store i32 %v6_cb94, i32* %r2.global-to-local, align 4
  %v3_ccf8 = urem i32 %v6_cb94, 65536
  store i32 0, i32* @r4, align 4
  %v1_cd10 = urem i32 %v6_cbc4, 2
  store i32 %v1_cd10, i32* %r3.global-to-local, align 4
  %v1_cd14 = urem i32 %v6_cbdc, 2
  %v1_cd18 = urem i32 %v6_cbf4, 2
  store i32 %v1_cd18, i32* %r1.global-to-local, align 4
  %v0_cd1c = load i32, i32* @sb, align 4
  %v1_cd1c = urem i32 %v0_cd1c, 2
  store i32 %v1_cd1c, i32* @sb, align 4
  %v0_cd20 = load i32, i32* @sl, align 4
  %v1_cd20 = urem i32 %v0_cd20, 2
  store i32 %v1_cd20, i32* @sl, align 4
  %v0_cd24 = load i32, i32* @r6, align 4
  %v1_cd24 = urem i32 %v0_cd24, 2
  store i32 %v1_cd24, i32* @r6, align 4
  %v4_ced0 = sext i8 %v5_cafc to i32
  %sext = mul i32 %v6_cb18, 16777216
  %v4_cef0 = sdiv i32 %sext, 16777216
  %v2_cef4 = icmp eq i32 %v1_cb44, 0
  %tmp = sub nsw i32 0, %v1_cd10
  %v4_cd98 = and i32 %tmp, 32
  %tmp51 = sub nsw i32 0, %v1_cd14
  %v4_cdac = and i32 %tmp51, 16
  %tmp52 = sub nsw i32 0, %v1_cd18
  %v4_cdc0 = and i32 %tmp52, 8
  %tmp53 = sub nsw i32 0, %v1_cd1c
  %v4_cdd4 = and i32 %tmp53, 4
  %tmp54 = sub nsw i32 0, %v1_cd20
  %v3_cde8 = and i32 %tmp54, 2
  br label %dec_label_pc_ce94

dec_label_pc_cd44:                                ; preds = %dec_label_pc_ce94, %dec_label_pc_cf08
  %v2_cd48 = phi i32 [ %v0_cf00, %dec_label_pc_ce94 ], [ %v2_cd48.pre, %dec_label_pc_cf08 ]
  store i32 6, i32* @r6, align 4
  %v3_cd48 = add i32 %v2_cd48, 9
  %v4_cd48 = inttoptr i32 %v3_cd48 to i8*
  store i8 6, i8* %v4_cd48, align 1
  %v3_cd4c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cd4c, i32* %r2.global-to-local, align 4
  %v3_cd54 = mul i32 %v3_cd4c, 32
  store i32 %v3_cd54, i32* %r3.global-to-local, align 4
  %v1_cd58 = load i32, i32* @sb, align 4
  %v2_cd58 = add i32 %v1_cd58, 12
  %v3_cd58 = inttoptr i32 %v2_cd58 to i32*
  store i32 %v6_cc58, i32* %v3_cd58, align 4
  %v0_cd5c = load i32, i32* %r3.global-to-local, align 4
  %v1_cd5c = load i32, i32* %r2.global-to-local, align 4
  %tmp55 = mul i32 %v1_cd5c, -8
  %v5_cd5c = add i32 %v0_cd5c, %tmp55
  %v1_cd60 = load i32, i32* @r8, align 4
  %v2_cd60 = add i32 %v1_cd60, %v5_cd5c
  store i32 %v2_cd60, i32* %r3.global-to-local, align 4
  %v1_cd64 = add i32 %v2_cd60, 16
  %v2_cd64 = inttoptr i32 %v1_cd64 to i32*
  %v3_cd64 = load i32, i32* %v2_cd64, align 4
  store i32 %v3_cd64, i32* %r2.global-to-local, align 4
  %v1_cd6c = load i32, i32* @sb, align 4
  %v2_cd6c = add i32 %v1_cd6c, 16
  %v3_cd6c = inttoptr i32 %v2_cd6c to i32*
  store i32 %v3_cd64, i32* %v3_cd6c, align 4
  %v1_cd70 = call i32 @function_15368(i32 %v3_ccd0)
  %v2_cd70 = trunc i32 %v1_cd70 to i16
  %v3_cd74 = load i32, i32* @sb, align 4
  %v4_cd74 = add i32 %v3_cd74, 20
  %v5_cd74 = inttoptr i32 %v4_cd74 to i16*
  store i16 %v2_cd70, i16* %v5_cd74, align 2
  %v1_cd7c = call i32 @function_15368(i32 %v3_ccbc)
  %v2_cd7c = trunc i32 %v1_cd7c to i16
  %v3_cd80 = load i32, i32* @sl, align 4
  %v4_cd80 = add i32 %v3_cd80, 2
  %v5_cd80 = inttoptr i32 %v4_cd80 to i16*
  store i16 %v2_cd7c, i16* %v5_cd80, align 2
  %v1_cd88 = call i32 @function_15368(i32 %v3_ccf8)
  %v0_cd8c = load i32, i32* @sl, align 4
  %v1_cd8c = add i32 %v0_cd8c, 13
  %v2_cd8c = inttoptr i32 %v1_cd8c to i8*
  %v3_cd8c = load i8, i8* %v2_cd8c, align 1
  %v4_cd8c = zext i8 %v3_cd8c to i32
  store i32 %v1_cd10, i32* %r1.global-to-local, align 4
  %v1_cd94 = and i32 %v4_cd8c, 223
  %v5_cd98 = or i32 %v1_cd94, %v4_cd98
  store i32 %v5_cd98, i32* %r3.global-to-local, align 4
  %v1_cd9c = trunc i32 %v5_cd98 to i8
  store i8 %v1_cd9c, i8* %v2_cd8c, align 1
  %v0_cda0 = load i32, i32* @sl, align 4
  %v1_cda0 = add i32 %v0_cda0, 13
  %v2_cda0 = inttoptr i32 %v1_cda0 to i8*
  %v3_cda0 = load i8, i8* %v2_cda0, align 1
  %v4_cda0 = zext i8 %v3_cda0 to i32
  store i32 %v1_cd14, i32* %r3.global-to-local, align 4
  %v1_cda8 = and i32 %v4_cda0, 239
  %v5_cdac = or i32 %v1_cda8, %v4_cdac
  store i32 %v5_cdac, i32* %r2.global-to-local, align 4
  %v1_cdb0 = trunc i32 %v5_cdac to i8
  store i8 %v1_cdb0, i8* %v2_cda0, align 1
  %v0_cdb4 = load i32, i32* @sl, align 4
  %v1_cdb4 = add i32 %v0_cdb4, 13
  %v2_cdb4 = inttoptr i32 %v1_cdb4 to i8*
  %v3_cdb4 = load i8, i8* %v2_cdb4, align 1
  %v4_cdb4 = zext i8 %v3_cdb4 to i32
  store i32 %v1_cd18, i32* %r1.global-to-local, align 4
  %v1_cdbc = and i32 %v4_cdb4, 247
  %v5_cdc0 = or i32 %v1_cdbc, %v4_cdc0
  store i32 %v5_cdc0, i32* %r3.global-to-local, align 4
  %v1_cdc4 = trunc i32 %v5_cdc0 to i8
  store i8 %v1_cdc4, i8* %v2_cdb4, align 1
  %v0_cdc8 = load i32, i32* @sl, align 4
  %v1_cdc8 = add i32 %v0_cdc8, 13
  %v2_cdc8 = inttoptr i32 %v1_cdc8 to i8*
  %v3_cdc8 = load i8, i8* %v2_cdc8, align 1
  %v4_cdc8 = zext i8 %v3_cdc8 to i32
  store i32 %v1_cd1c, i32* %r3.global-to-local, align 4
  %v1_cdd0 = and i32 %v4_cdc8, 251
  %v5_cdd4 = or i32 %v1_cdd0, %v4_cdd4
  store i32 %v5_cdd4, i32* %r2.global-to-local, align 4
  %v1_cdd8 = trunc i32 %v5_cdd4 to i8
  store i8 %v1_cdd8, i8* %v2_cdc8, align 1
  %v0_cddc = load i32, i32* @sl, align 4
  %v1_cddc = add i32 %v0_cddc, 13
  %v2_cddc = inttoptr i32 %v1_cddc to i8*
  %v3_cddc = load i8, i8* %v2_cddc, align 1
  %v4_cddc = zext i8 %v3_cddc to i32
  store i32 %v1_cd20, i32* %r1.global-to-local, align 4
  %v1_cde4 = and i32 %v4_cddc, 253
  %v4_cde8 = or i32 %v1_cde4, %v3_cde8
  store i32 %v4_cde8, i32* %r3.global-to-local, align 4
  %v1_cdec = trunc i32 %v4_cde8 to i8
  store i8 %v1_cdec, i8* %v2_cddc, align 1
  %v0_cdf0 = load i32, i32* @sl, align 4
  %v1_cdf0 = add i32 %v0_cdf0, 12
  %v2_cdf0 = inttoptr i32 %v1_cdf0 to i8*
  %v3_cdf0 = load i8, i8* %v2_cdf0, align 1
  %v4_cdf0 = zext i8 %v3_cdf0 to i32
  store i32 %v4_cdf0, i32* %r2.global-to-local, align 4
  %v1_cdf4 = add i32 %v0_cdf0, 13
  %v2_cdf4 = inttoptr i32 %v1_cdf4 to i8*
  %v3_cdf4 = load i8, i8* %v2_cdf4, align 1
  %v4_cdf4 = zext i8 %v3_cdf4 to i32
  store i32 %v1_cd24, i32* %r1.global-to-local, align 4
  %tmp56 = urem i8 %v3_cdf0, 16
  %v1_cdfc = zext i8 %tmp56 to i32
  %v1_ce00 = and i32 %v4_cdf4, 254
  %v2_ce04 = or i32 %v1_ce00, %v1_cd24
  store i32 %v2_ce04, i32* %r3.global-to-local, align 4
  %v1_ce08 = or i32 %v1_cdfc, 160
  store i32 %v1_ce08, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r4.global-to-local, align 4
  store i32 4, i32* @r5, align 4
  %v1_ce14 = trunc i32 %v2_ce04 to i8
  store i8 %v1_ce14, i8* %v2_cdf4, align 1
  %v0_ce18 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce18 = trunc i32 %v0_ce18 to i8
  %v2_ce18 = load i32, i32* @sl, align 4
  %v3_ce18 = add i32 %v2_ce18, 12
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 %v1_ce18, i8* %v4_ce18, align 1
  %v1_ce1c = load i32, i32* @sl, align 4
  %v2_ce1c = add i32 %v1_ce1c, 4
  %v3_ce1c = inttoptr i32 %v2_ce1c to i32*
  store i32 %v1_cd88, i32* %v3_ce1c, align 4
  %v0_ce20 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce20 = trunc i32 %v0_ce20 to i8
  %v2_ce20 = load i32, i32* @sb, align 4
  %v3_ce20 = add i32 %v2_ce20, 40
  %v4_ce20 = inttoptr i32 %v3_ce20 to i8*
  store i8 %v1_ce20, i8* %v4_ce20, align 1
  %v0_ce24 = load i32, i32* @r5, align 4
  %v1_ce24 = trunc i32 %v0_ce24 to i8
  %v2_ce24 = load i32, i32* @sb, align 4
  %v3_ce24 = add i32 %v2_ce24, 41
  %v4_ce24 = inttoptr i32 %v3_ce24 to i8*
  store i8 %v1_ce24, i8* %v4_ce24, align 1
  %v0_ce28 = call i32 @function_1008c()
  %v1_ce2c = urem i32 %v0_ce28, 16
  %v1_ce30 = or i32 %v1_ce2c, 1392
  %v1_ce34 = add nuw nsw i32 %v1_ce30, 8
  %v1_ce38 = call i32 @function_15368(i32 %v1_ce34)
  %v2_ce38 = trunc i32 %v1_ce38 to i16
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_ce44 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce44 = trunc i32 %v0_ce44 to i8
  %v2_ce44 = load i32, i32* @sb, align 4
  %v3_ce44 = add i32 %v2_ce44, 45
  %v4_ce44 = inttoptr i32 %v3_ce44 to i8*
  store i8 %v1_ce44, i8* %v4_ce44, align 1
  %v0_ce48 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce48 = trunc i32 %v0_ce48 to i8
  %v2_ce48 = load i32, i32* @sb, align 4
  %v3_ce48 = add i32 %v2_ce48, 46
  %v4_ce48 = inttoptr i32 %v3_ce48 to i8*
  store i8 %v1_ce48, i8* %v4_ce48, align 1
  %v0_ce4c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce4c = trunc i32 %v0_ce4c to i8
  %v2_ce4c = load i32, i32* @sb, align 4
  %v3_ce4c = add i32 %v2_ce4c, 47
  %v4_ce4c = inttoptr i32 %v3_ce4c to i8*
  store i8 %v1_ce4c, i8* %v4_ce4c, align 1
  %v3_ce50 = load i32, i32* @sb, align 4
  %v4_ce50 = add i32 %v3_ce50, 42
  %v5_ce50 = inttoptr i32 %v4_ce50 to i16*
  store i16 %v2_ce38, i16* %v5_ce50, align 2
  %v0_ce54 = load i32, i32* @r5, align 4
  %v1_ce54 = trunc i32 %v0_ce54 to i8
  %v2_ce54 = load i32, i32* @sb, align 4
  %v3_ce54 = add i32 %v2_ce54, 44
  %v4_ce54 = inttoptr i32 %v3_ce54 to i8*
  store i8 %v1_ce54, i8* %v4_ce54, align 1
  %v0_ce58 = call i32 @function_1008c()
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_ce68 = load i32, i32* @r6, align 4
  %v1_ce68 = trunc i32 %v0_ce68 to i8
  %v2_ce68 = load i32, i32* @sb, align 4
  %v3_ce68 = add i32 %v2_ce68, 59
  %v4_ce68 = inttoptr i32 %v3_ce68 to i8*
  store i8 %v1_ce68, i8* %v4_ce68, align 1
  %v1_ce6c = load i32, i32* @sb, align 4
  %v2_ce6c = add i32 %v1_ce6c, 48
  %v3_ce6c = inttoptr i32 %v2_ce6c to i32*
  store i32 %v0_ce58, i32* %v3_ce6c, align 4
  %v0_ce70 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce70 = load i32, i32* @sb, align 4
  %v2_ce70 = add i32 %v1_ce70, 52
  %v3_ce70 = inttoptr i32 %v2_ce70 to i32*
  store i32 %v0_ce70, i32* %v3_ce70, align 4
  %v0_ce74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce74 = trunc i32 %v0_ce74 to i8
  %v2_ce74 = load i32, i32* @sb, align 4
  %v3_ce74 = add i32 %v2_ce74, 56
  %v4_ce74 = inttoptr i32 %v3_ce74 to i8*
  store i8 %v1_ce74, i8* %v4_ce74, align 1
  %v0_ce78 = load i32, i32* %r1.global-to-local, align 4
  %v1_ce78 = trunc i32 %v0_ce78 to i8
  %v2_ce78 = load i32, i32* @sb, align 4
  %v3_ce78 = add i32 %v2_ce78, 58
  %v4_ce78 = inttoptr i32 %v3_ce78 to i8*
  store i8 %v1_ce78, i8* %v4_ce78, align 1
  %v0_ce7c = load i32, i32* %r1.global-to-local, align 4
  %v1_ce7c = trunc i32 %v0_ce7c to i8
  %v2_ce7c = load i32, i32* @sb, align 4
  %v3_ce7c = add i32 %v2_ce7c, 57
  %v4_ce7c = inttoptr i32 %v3_ce7c to i8*
  store i8 %v1_ce7c, i8* %v4_ce7c, align 1
  %v3_ce80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ce80, i32* %r3.global-to-local, align 4
  %v1_ce84 = load i32, i32* %r2.global-to-local, align 4
  %v2_ce84 = add i32 %v1_ce84, %v3_ce80
  store i32 %v2_ce84, i32* @r4, align 4
  %v1_ce88 = load i32, i32* @r7, align 4
  %v9_ce88 = icmp eq i32 %v2_ce84, %v1_ce88
  store i1 %v9_ce88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_ce84, i32* %stack_var_-44, align 4
  %v6_ce90 = icmp slt i32 %v2_ce84, %v1_ce88
  br i1 %v6_ce90, label %dec_label_pc_ce94, label %dec_label_pc_d028.preheader

dec_label_pc_d028.preheader:                      ; preds = %dec_label_pc_cd44, %dec_label_pc_cca4
  %v0_d02c5 = phi i32 [ 0, %dec_label_pc_cca4 ], [ %v1_ce88, %dec_label_pc_cd44 ]
  %v3_d088 = icmp eq i32 %v6_cc58, -1
  %v8_d088 = icmp eq i32 %v6_cc58, -1
  %v3_d0a4 = icmp eq i32 %v3_cccc, 65535
  %v2_cf94 = icmp eq i32 %v1_ccd4, 0
  br label %dec_label_pc_d028

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cd44, %dec_label_pc_ccf0
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_ce9c = call i32 @function_13d28(i32 128, i32 1)
  store i32 %v2_cac4, i32* %r2.global-to-local, align 4
  %v3_cea4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cea4, i32* %r3.global-to-local, align 4
  %v2_cea8 = load i32, i32* @r4, align 4
  %v5_cea8 = mul i32 %v2_cea8, 4
  %v6_cea8 = add i32 %v5_cea8, %v2_cac4
  %v7_cea8 = inttoptr i32 %v6_cea8 to i32*
  store i32 %v2_ce9c, i32* %v7_cea8, align 4
  %v0_ceac = load i32, i32* %r2.global-to-local, align 4
  %v1_ceac = load i32, i32* %r3.global-to-local, align 4
  %v4_ceac = mul i32 %v1_ceac, 4
  %v5_ceac = add i32 %v4_ceac, %v0_ceac
  %v6_ceac = inttoptr i32 %v5_ceac to i32*
  %v7_ceac = load i32, i32* %v6_ceac, align 4
  store i32 %v7_ceac, i32* @sb, align 4
  %v1_ceb0 = inttoptr i32 %v7_ceac to i8*
  %v2_ceb0 = load i8, i8* %v1_ceb0, align 1
  %tmp57 = urem i8 %v2_ceb0, 16
  %v1_ceb4 = zext i8 %tmp57 to i32
  %v1_ceb8 = or i32 %v1_ceb4, 64
  store i32 %v1_ceb8, i32* %r2.global-to-local, align 4
  %v1_cebc = trunc i32 %v1_ceb8 to i8
  store i8 %v1_cebc, i8* %v1_ceb0, align 1
  %v0_cec0 = load i32, i32* @sb, align 4
  %v1_cec0 = inttoptr i32 %v0_cec0 to i8*
  %v2_cec0 = load i8, i8* %v1_cec0, align 1
  %v1_cec4 = and i8 %v2_cec0, -16
  %v1_cec8 = or i8 %v1_cec4, 5
  store i8 %v1_cec8, i8* %v1_cec0, align 1
  store i32 %v4_ced0, i32* %r3.global-to-local, align 4
  %v2_ced8 = load i32, i32* @sb, align 4
  %v3_ced8 = add i32 %v2_ced8, 1
  %v4_ced8 = inttoptr i32 %v3_ced8 to i8*
  store i8 %v5_cafc, i8* %v4_ced8, align 1
  %v1_cedc = call i32 @function_15368(i32 60)
  %v2_cedc = trunc i32 %v1_cedc to i16
  %v3_cee0 = load i32, i32* @sb, align 4
  %v4_cee0 = add i32 %v3_cee0, 2
  %v5_cee0 = inttoptr i32 %v4_cee0 to i16*
  store i16 %v2_cedc, i16* %v5_cee0, align 2
  %v1_cee8 = call i32 @function_15368(i32 %v3_cccc)
  %v2_cee8 = trunc i32 %v1_cee8 to i16
  store i32 %v1_cb44, i32* %r1.global-to-local, align 4
  store i32 %v4_cef0, i32* %r2.global-to-local, align 4
  store i1 %v2_cef4, i1* %cpsr_z.global-to-local, align 1
  %v3_cef8 = load i32, i32* @sb, align 4
  %v4_cef8 = add i32 %v3_cef8, 4
  %v5_cef8 = inttoptr i32 %v4_cef8 to i16*
  store i16 %v2_cee8, i16* %v5_cef8, align 2
  %v0_cefc = load i32, i32* %r2.global-to-local, align 4
  %v1_cefc = trunc i32 %v0_cefc to i8
  %v2_cefc = load i32, i32* @sb, align 4
  %v3_cefc = add i32 %v2_cefc, 8
  %v4_cefc = inttoptr i32 %v3_cefc to i8*
  store i8 %v1_cefc, i8* %v4_cefc, align 1
  %v0_cf00 = load i32, i32* @sb, align 4
  %v1_cf00 = add i32 %v0_cf00, 20
  store i32 %v1_cf00, i32* @sl, align 4
  %v0_cf04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cf04, label %dec_label_pc_cd44, label %dec_label_pc_cf08

dec_label_pc_cf08:                                ; preds = %dec_label_pc_ce94
  %v1_cf0c = call i32 @function_15368(i32 16384)
  %v2_cf0c = trunc i32 %v1_cf0c to i16
  %v3_cf10 = load i32, i32* @sb, align 4
  %v4_cf10 = add i32 %v3_cf10, 6
  %v5_cf10 = inttoptr i32 %v4_cf10 to i16*
  store i16 %v2_cf0c, i16* %v5_cf10, align 2
  %v2_cd48.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_cd44

dec_label_pc_cf18:                                ; preds = %dec_label_pc_d028
  br label %dec_label_pc_cf1c

dec_label_pc_cf1c:                                ; preds = %dec_label_pc_cf9c, %dec_label_pc_cf18
  %v1_cf30 = phi i32 [ %v1_d018, %dec_label_pc_cf9c ], [ 0, %dec_label_pc_cf18 ]
  %v5_cf20 = mul i32 %v1_cf30, 24
  %v1_cf24 = load i32, i32* @r8, align 4
  %v2_cf24 = add i32 %v1_cf24, %v5_cf20
  store i32 %v2_cf24, i32* %r3.global-to-local, align 4
  store i32 %v2_cac4, i32* %r1.global-to-local, align 4
  %v1_cf2c = add i32 %v2_cf24, 20
  %v2_cf2c = inttoptr i32 %v1_cf2c to i8*
  %v3_cf2c = load i8, i8* %v2_cf2c, align 1
  %v4_cf2c = zext i8 %v3_cf2c to i32
  store i32 %v4_cf2c, i32* %r2.global-to-local, align 4
  %v4_cf30 = mul i32 %v1_cf30, 4
  %v5_cf30 = add i32 %v4_cf30, %v2_cac4
  %v6_cf30 = inttoptr i32 %v5_cf30 to i32*
  %v7_cf30 = load i32, i32* %v6_cf30, align 4
  store i32 %v7_cf30, i32* @r5, align 4
  %v7_cf34 = icmp eq i8 %v3_cf2c, 31
  store i1 %v7_cf34, i1* %cpsr_z.global-to-local, align 1
  %v1_cf38 = add i32 %v7_cf30, 20
  store i32 %v1_cf38, i32* @r6, align 4
  %tmp58 = icmp ult i8 %v3_cf2c, 32
  br i1 %tmp58, label %dec_label_pc_d058, label %dec_label_pc_cf40

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf1c
  store i32 %v6_cc58, i32* %r2.global-to-local, align 4
  store i1 %v8_d088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d088, label %dec_label_pc_d094, label %dec_label_pc_cf4c

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_d058, %dec_label_pc_cf40
  store i32 %v3_cccc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d0a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d0a4, label %dec_label_pc_d0b0, label %dec_label_pc_cf60

dec_label_pc_cf60:                                ; preds = %dec_label_pc_d094.dec_label_pc_cf60_crit_edge, %dec_label_pc_cf4c
  %v1_cf64 = phi i32 [ %v1_cf64.pre, %dec_label_pc_d094.dec_label_pc_cf60_crit_edge ], [ 65535, %dec_label_pc_cf4c ]
  %v9_cf64 = icmp eq i32 %v3_ccd0, %v1_cf64
  store i1 %v9_cf64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf64, label %dec_label_pc_d0c4, label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_d0b0, %dec_label_pc_cf60
  %v1_cf70 = phi i32 [ %v1_d0bc, %dec_label_pc_d0b0 ], [ %v1_cf64, %dec_label_pc_cf60 ]
  store i32 %v3_ccbc, i32* %r1.global-to-local, align 4
  %v9_cf70 = icmp eq i32 %v3_ccbc, %v1_cf70
  store i1 %v9_cf70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf70, label %dec_label_pc_d0d8, label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge, %dec_label_pc_cf6c
  %v1_cf7c = phi i32 [ %v1_cf7c.pre, %dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge ], [ %v1_cf70, %dec_label_pc_cf6c ]
  store i32 %v6_cb94, i32* %r2.global-to-local, align 4
  %v9_cf7c = icmp eq i32 %v6_cb94, %v1_cf7c
  store i1 %v9_cf7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf7c, label %dec_label_pc_d0ec, label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge, %dec_label_pc_cf78
  %v1_cf88 = phi i32 [ %v1_cf88.pre, %dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge ], [ %v1_cf7c, %dec_label_pc_cf78 ]
  store i32 %v6_cbac, i32* %r3.global-to-local, align 4
  %v9_cf88 = icmp eq i32 %v6_cbac, %v1_cf88
  store i1 %v9_cf88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf88, label %dec_label_pc_d100, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_d0ec, %dec_label_pc_cf84, %dec_label_pc_d100
  store i1 %v2_cf94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cf94, label %dec_label_pc_cf9c, label %dec_label_pc_d04c

dec_label_pc_cf9c:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_d04c
  %v2_cfa0 = load i32, i32* @r5, align 4
  %v3_cfa0 = add i32 %v2_cfa0, 10
  %v4_cfa0 = inttoptr i32 %v3_cfa0 to i16*
  store i16 0, i16* %v4_cfa0, align 2
  %v0_cfa4 = load i32, i32* @r5, align 4
  store i32 %v0_cfa4, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_cfac = call i32 @function_e5a4(i32 %v0_cfa4, i32 20)
  %v3_cfac = trunc i32 %v2_cfac to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_cfb4 = load i32, i32* @r5, align 4
  %v4_cfb4 = add i32 %v3_cfb4, 10
  %v5_cfb4 = inttoptr i32 %v4_cfb4 to i16*
  store i16 %v3_cfac, i16* %v5_cfb4, align 2
  %v0_cfb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_cfb8 = trunc i32 %v0_cfb8 to i16
  %v2_cfb8 = load i32, i32* @r6, align 4
  %v3_cfb8 = add i32 %v2_cfb8, 16
  %v4_cfb8 = inttoptr i32 %v3_cfb8 to i16*
  store i16 %v1_cfb8, i16* %v4_cfb8, align 2
  %v1_cfc0 = call i32 @function_15368(i32 40)
  %v0_cfc4 = load i32, i32* @r6, align 4
  store i32 %v0_cfc4, i32* @r1, align 4
  store i32 %v1_cfc0, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_cfd0 = load i32, i32* @r5, align 4
  %v4_cfd4 = call i32 @function_e5f4(i32 %v0_cfd0, i32 %v0_cfc4, i32 %v1_cfc0, i32 40)
  %v5_cfd4 = trunc i32 %v4_cfd4 to i16
  %v3_cfd8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cfd8, i32* %r3.global-to-local, align 4
  %v3_cfdc = mul i32 %v3_cfd8, 32
  store i32 %v3_cfdc, i32* %lr.global-to-local, align 4
  %v3_cfe0 = load i32, i32* @r6, align 4
  %v4_cfe0 = add i32 %v3_cfe0, 16
  %v5_cfe0 = inttoptr i32 %v4_cfe0 to i16*
  store i16 %v5_cfd4, i16* %v5_cfe0, align 2
  %v0_cfe4 = load i32, i32* %lr.global-to-local, align 4
  %v1_cfe4 = load i32, i32* %r3.global-to-local, align 4
  %tmp59 = mul i32 %v1_cfe4, -8
  %v5_cfe4 = add i32 %v0_cfe4, %tmp59
  store i32 %v5_cfe4, i32* %lr.global-to-local, align 4
  %v0_cfe8 = load i32, i32* @r6, align 4
  %v1_cfe8 = add i32 %v0_cfe8, 2
  %v2_cfe8 = inttoptr i32 %v1_cfe8 to i16*
  %v3_cfe8 = load i16, i16* %v2_cfe8, align 2
  %v1_cfec = load i32, i32* @r8, align 4
  %v2_cfec = add i32 %v1_cfec, %v5_cfe4
  store i32 %v2_cfec, i32* @lr, align 4
  %v3_cff0 = add i32 %v2_cfec, 2
  %v4_cff0 = inttoptr i32 %v3_cff0 to i16*
  store i16 %v3_cfe8, i16* %v4_cff0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cffc = load i32, i32* @r5, align 4
  store i32 %v0_cffc, i32* @r1, align 4
  %v0_d000 = load i32, i32* @fp, align 4
  store i32 %v0_d000, i32* @r0, align 4
  store i32 60, i32* @r2, align 4
  %v0_d010 = call i32 @function_155b4()
  %v3_d014 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d014, i32* %r3.global-to-local, align 4
  %v1_d018 = add i32 %v3_d014, 1
  %v1_d01c = load i32, i32* @r7, align 4
  %v9_d01c = icmp eq i32 %v1_d018, %v1_d01c
  store i1 %v9_d01c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d018, i32* %stack_var_-44, align 4
  %v5_d024 = icmp slt i32 %v1_d018, %v1_d01c
  br i1 %v5_d024, label %dec_label_pc_cf1c, label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_d038, %dec_label_pc_cf9c, %dec_label_pc_d028.preheader
  %v0_d03c = phi i32 [ %v0_d02c5, %dec_label_pc_d028.preheader ], [ 0, %dec_label_pc_d038 ], [ %v1_d01c, %dec_label_pc_cf9c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d02c = icmp eq i32 %v0_d03c, 0
  store i1 %v2_d02c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d02c, label %dec_label_pc_d038, label %dec_label_pc_cf18

dec_label_pc_d038:                                ; preds = %dec_label_pc_d028
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_d028

dec_label_pc_d04c:                                ; preds = %dec_label_pc_cf90
  %v0_d04c = call i32 @function_1008c()
  %v1_d04c = trunc i32 %v0_d04c to i16
  %v3_d050 = load i32, i32* @r6, align 4
  %v4_d050 = add i32 %v3_d050, 18
  %v5_d050 = inttoptr i32 %v4_d050 to i16*
  store i16 %v1_d04c, i16* %v5_d050, align 2
  br label %dec_label_pc_cf9c

dec_label_pc_d058:                                ; preds = %dec_label_pc_cf1c
  %v1_d058 = add i32 %v2_cf24, 16
  %v2_d058 = inttoptr i32 %v1_d058 to i32*
  %v3_d058 = load i32, i32* %v2_d058, align 4
  %v1_d05c = call i32 @function_154ec(i32 %v3_d058)
  store i32 %v1_d05c, i32* %r4.global-to-local, align 4
  %v0_d064 = call i32 @function_1008c()
  %v3_d068 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d068, i32* %r2.global-to-local, align 4
  %v5_d070 = mul i32 %v3_d068, 24
  %v1_d074 = load i32, i32* @r8, align 4
  %v2_d074 = add i32 %v1_d074, %v5_d070
  store i32 %v2_d074, i32* %r3.global-to-local, align 4
  %v1_d078 = add i32 %v2_d074, 20
  %v2_d078 = inttoptr i32 %v1_d078 to i8*
  %v3_d078 = load i8, i8* %v2_d078, align 1
  %v4_d078 = zext i8 %v3_d078 to i32
  store i32 %v4_d078, i32* %r2.global-to-local, align 4
  %v0_d07c = load i32, i32* %r4.global-to-local, align 4
  %v7_d07c = lshr i32 %v0_d064, %v4_d078
  %v8_d07c = add i32 %v7_d07c, %v0_d07c
  %v1_d080 = call i32 @function_15344(i32 %v8_d07c)
  store i32 %v6_cc58, i32* %r2.global-to-local, align 4
  store i1 %v8_d088, i1* %cpsr_z.global-to-local, align 1
  %v1_d08c = load i32, i32* @r5, align 4
  %v2_d08c = add i32 %v1_d08c, 16
  %v3_d08c = inttoptr i32 %v2_d08c to i32*
  store i32 %v1_d080, i32* %v3_d08c, align 4
  br i1 %v3_d088, label %dec_label_pc_d094, label %dec_label_pc_cf4c

dec_label_pc_d094:                                ; preds = %dec_label_pc_d058, %dec_label_pc_cf40
  %v0_d094 = call i32 @function_1008c()
  store i32 %v3_cccc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d0a4, i1* %cpsr_z.global-to-local, align 1
  %v1_d0a8 = load i32, i32* @r5, align 4
  %v2_d0a8 = add i32 %v1_d0a8, 12
  %v3_d0a8 = inttoptr i32 %v2_d0a8 to i32*
  store i32 %v0_d094, i32* %v3_d0a8, align 4
  br i1 %v3_d0a4, label %dec_label_pc_d0b0, label %dec_label_pc_d094.dec_label_pc_cf60_crit_edge

dec_label_pc_d094.dec_label_pc_cf60_crit_edge:    ; preds = %dec_label_pc_d094
  %v1_cf64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf60

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d094, %dec_label_pc_cf4c
  %v0_d0b0 = call i32 @function_1008c()
  %v1_d0b0 = trunc i32 %v0_d0b0 to i16
  %v3_d0b4 = load i32, i32* @r5, align 4
  %v4_d0b4 = add i32 %v3_d0b4, 4
  %v5_d0b4 = inttoptr i32 %v4_d0b4 to i16*
  store i16 %v1_d0b0, i16* %v5_d0b4, align 2
  %v1_d0bc = load i32, i32* @r4, align 4
  %v9_d0bc = icmp eq i32 %v3_ccd0, %v1_d0bc
  store i1 %v9_d0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d0bc, label %dec_label_pc_d0c4, label %dec_label_pc_cf6c

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0b0, %dec_label_pc_cf60
  %v0_d0c4 = call i32 @function_1008c()
  %v1_d0c4 = trunc i32 %v0_d0c4 to i16
  store i32 %v3_ccbc, i32* %r1.global-to-local, align 4
  %v1_d0cc = load i32, i32* @r4, align 4
  %v9_d0cc = icmp eq i32 %v3_ccbc, %v1_d0cc
  store i1 %v9_d0cc, i1* %cpsr_z.global-to-local, align 1
  %v3_d0d0 = load i32, i32* @r5, align 4
  %v4_d0d0 = add i32 %v3_d0d0, 20
  %v5_d0d0 = inttoptr i32 %v4_d0d0 to i16*
  store i16 %v1_d0c4, i16* %v5_d0d0, align 2
  br i1 %v9_d0cc, label %dec_label_pc_d0d8, label %dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge

dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge:    ; preds = %dec_label_pc_d0c4
  %v1_cf7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf78

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0c4, %dec_label_pc_cf6c
  %v0_d0d8 = call i32 @function_1008c()
  %v1_d0d8 = trunc i32 %v0_d0d8 to i16
  store i32 %v6_cb94, i32* %r2.global-to-local, align 4
  %v1_d0e0 = load i32, i32* @r4, align 4
  %v9_d0e0 = icmp eq i32 %v6_cb94, %v1_d0e0
  store i1 %v9_d0e0, i1* %cpsr_z.global-to-local, align 1
  %v3_d0e4 = load i32, i32* @r6, align 4
  %v4_d0e4 = add i32 %v3_d0e4, 2
  %v5_d0e4 = inttoptr i32 %v4_d0e4 to i16*
  store i16 %v1_d0d8, i16* %v5_d0e4, align 2
  br i1 %v9_d0e0, label %dec_label_pc_d0ec, label %dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge

dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge:    ; preds = %dec_label_pc_d0d8
  %v1_cf88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf84

dec_label_pc_d0ec:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_cf78
  %v0_d0ec = call i32 @function_1008c()
  store i32 %v6_cbac, i32* %r3.global-to-local, align 4
  %v1_d0f4 = load i32, i32* @r4, align 4
  %v9_d0f4 = icmp eq i32 %v6_cbac, %v1_d0f4
  store i1 %v9_d0f4, i1* %cpsr_z.global-to-local, align 1
  %v1_d0f8 = load i32, i32* @r6, align 4
  %v2_d0f8 = add i32 %v1_d0f8, 4
  %v3_d0f8 = inttoptr i32 %v2_d0f8 to i32*
  store i32 %v0_d0ec, i32* %v3_d0f8, align 4
  br i1 %v9_d0f4, label %dec_label_pc_d100, label %dec_label_pc_cf90

dec_label_pc_d100:                                ; preds = %dec_label_pc_d0ec, %dec_label_pc_cf84
  %v0_d100 = call i32 @function_1008c()
  %v1_d104 = load i32, i32* @r6, align 4
  %v2_d104 = add i32 %v1_d104, 8
  %v3_d104 = inttoptr i32 %v2_d104 to i32*
  store i32 %v0_d100, i32* %v3_d104, align 4
  br label %dec_label_pc_cf90

dec_label_pc_d10c:                                ; preds = %dec_label_pc_cc7c
  %v0_d10c = load i32, i32* @fp, align 4
  store i32 %v0_d10c, i32* @r0, align 4
  %v1_d110 = call i32 @function_1663c(i32 %v0_d10c)
  br label %dec_label_pc_d114

dec_label_pc_d114:                                ; preds = %dec_label_pc_caa8, %dec_label_pc_d10c
  %v1_d11c = phi i32 [ %v3_cc6c, %dec_label_pc_caa8 ], [ %v1_d110, %dec_label_pc_d10c ]
  store i32 %v3_caa8, i32* %r4.global-to-local, align 4
  store i32 %v27_caa8, i32* %lr.global-to-local, align 4
  ret i32 %v1_d11c

; uselistorder directives
  uselistorder i32 %v1_d0bc, { 1, 0 }
  uselistorder i32 %v1_d018, { 2, 0, 3, 1 }
  uselistorder i32 %v5_cfe4, { 1, 0 }
  uselistorder i32 %v0_cf00, { 1, 0 }
  uselistorder i1 %v3_d0a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ce84, { 1, 0, 2, 3 }
  uselistorder i32 %v1_cd24, { 2, 1, 0 }
  uselistorder i32 %v1_cd20, { 2, 0, 1 }
  uselistorder i32 %v1_cd1c, { 2, 0, 1 }
  uselistorder i32 %v1_cd18, { 2, 0, 1 }
  uselistorder i32 %v1_cd14, { 1, 0 }
  uselistorder i32 %v1_cd10, { 2, 0, 1 }
  uselistorder i32 %v1_ccd4, { 1, 0 }
  uselistorder i32 %v3_cccc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_cc9c, { 1, 0 }
  uselistorder i1 %v7_cc70, { 1, 0 }
  uselistorder i32 %v3_cc6c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cc58, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v6_cbac, { 3, 2, 1, 0 }
  uselistorder i32 %v6_cb94, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 %v5_cafc, { 1, 0 }
  uselistorder i32 %v2_cac4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 28, 29, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 25, 26, 27, 28, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 17, 20, 21, 22 }
  uselistorder i32 60, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d114, { 1, 0 }
  uselistorder label %dec_label_pc_cf9c, { 1, 0 }
  uselistorder label %dec_label_pc_cf90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cd44, { 1, 0 }
}

define i32 @function_d124(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d124:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_d124 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_d140 = call i32 @function_13d28(i32 %arg1, i32 4)
  store i32 %v2_d140, i32* @sl, align 4
  %v0_d14c = load i32, i32* @r7, align 4
  %v2_d150 = call i32 @function_13d28(i32 %v0_d14c, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_d15c = load i32, i32* @r6, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_d150, i32* @r8, align 4
  %v0_d16c = load i32, i32* @r5, align 4
  %v4_d170 = inttoptr i32 %v0_d15c to i32*
  %v5_d170 = call i32 @function_a430(i32 %v0_d16c, i32* %v4_d170, i32 7, i32 65535)
  %v3_d178 = urem i32 %v5_d170, 65536
  %v0_d17c = load i32, i32* @r6, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d184 = load i32, i32* @r4, align 4
  store i32 %v0_d184, i32* %r3.global-to-local, align 4
  %v0_d188 = load i32, i32* @r5, align 4
  %v5_d190 = inttoptr i32 %v0_d17c to i32*
  %v6_d190 = call i32 @function_a430(i32 %v0_d188, i32* %v5_d190, i32 6, i32 %v0_d184)
  %v0_d194 = load i32, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_d1a4 = load i32, i32* @r5, align 4
  %v3_d1a8 = urem i32 %v6_d190, 65536
  store i32 %v3_d1a8, i32* %sb.global-to-local, align 4
  %v4_d1ac = inttoptr i32 %v0_d194 to i32*
  %v5_d1ac = call i32 @function_a430(i32 %v0_d1a4, i32* %v4_d1ac, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d1bc = load i32, i32* @r5, align 4
  %v0_d1c0 = load i32, i32* @r6, align 4
  %v3_d1c4 = urem i32 %v5_d1ac, 65536
  store i32 %v3_d1c4, i32* @r5, align 4
  %v4_d1c8 = inttoptr i32 %v0_d1c0 to i32*
  %v5_d1c8 = call i32 @function_a430(i32 %v0_d1bc, i32* %v4_d1c8, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_d1d0 = urem i32 %v5_d1c8, 256
  %v0_d1d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_d1d4 = load i32, i32* @r4, align 4
  %v9_d1d4 = icmp eq i32 %v0_d1d4, %v1_d1d4
  store i32 0, i32* %stack_var_-56, align 4
  br i1 %v9_d1d4, label %dec_label_pc_d35c, label %dec_label_pc_d1f0

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_d124
  %v1_d1f4 = call i32 @function_15368(i32 %v0_d1d4)
  %v2_d1f4 = trunc i32 %v1_d1f4 to i16
  br label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %dec_label_pc_d35c, %dec_label_pc_d1f0
  %storemerge2 = phi i16 [ %v5_d368, %dec_label_pc_d35c ], [ %v2_d1f4, %dec_label_pc_d1f0 ]
  %v0_d1fc = load i32, i32* @r7, align 4
  %v2_d1fc = icmp eq i32 %v0_d1fc, 0
  br i1 %v2_d1fc, label %dec_label_pc_d320, label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1fc
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v2_d240 = ptrtoint i32* %stack_var_-56 to i32
  %v4_d260 = sext i16 %storemerge2 to i32
  br label %dec_label_pc_d294

dec_label_pc_d214:                                ; preds = %dec_label_pc_d294
  %v1_d214 = call i32 @function_15368(i32 %v3_d178)
  %v2_d214 = trunc i32 %v1_d214 to i16
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v3_d21c = load i32, i32* @r6, align 4
  %v4_d21c = add i32 %v3_d21c, 2
  %v5_d21c = inttoptr i32 %v4_d21c to i16*
  store i16 %v2_d214, i16* %v5_d21c, align 2
  br label %dec_label_pc_d220

dec_label_pc_d220:                                ; preds = %dec_label_pc_d2c8, %dec_label_pc_d214
  %v0_d224 = load i32, i32* %r3.global-to-local, align 4
  %v1_d224 = add i32 %v0_d224, 24
  store i32 %v1_d224, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d234 = call i32 @function_15670(i32 2, i32 2, i32 17)
  %v7_d238 = icmp eq i32 %v3_d234, -1
  %v0_d23c = load i32, i32* @sb, align 4
  %v1_d23c = add i32 %v0_d23c, 1
  store i32 %v1_d23c, i32* @sb, align 4
  store i32 16, i32* @r2, align 4
  %v1_d248 = load i32, i32* @fp, align 4
  %v2_d248 = load i32, i32* @r8, align 4
  %v3_d248 = add i32 %v2_d248, %v1_d248
  %v4_d248 = inttoptr i32 %v3_d248 to i32*
  store i32 %v3_d234, i32* %v4_d248, align 4
  br i1 %v7_d238, label %dec_label_pc_d370, label %dec_label_pc_d250

dec_label_pc_d250:                                ; preds = %dec_label_pc_d220
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_d260, i32* %r3.global-to-local, align 4
  %v3_d268 = call i32 @function_1528c(i32 %v3_d234, i32 %v2_d240, i32 16)
  %v0_d26c = load i32, i32* @r6, align 4
  %v1_d26c = add i32 %v0_d26c, 20
  %v2_d26c = inttoptr i32 %v1_d26c to i8*
  %v3_d26c = load i8, i8* %v2_d26c, align 1
  %v4_d26c = zext i8 %v3_d26c to i32
  store i32 %v4_d26c, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_d26c, 32
  br i1 %tmp, label %dec_label_pc_d2e4, label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d250
  %v0_d278 = load i32, i32* @fp, align 4
  %v1_d278 = load i32, i32* @r8, align 4
  %v2_d278 = add i32 %v1_d278, %v0_d278
  %v3_d278 = inttoptr i32 %v2_d278 to i32*
  %v4_d278 = load i32, i32* %v3_d278, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d284 = call i32 @function_152b4(i32 %v4_d278, i32 %v0_d26c, i32 16)
  %v0_d288 = load i32, i32* @sb, align 4
  %v1_d288 = load i32, i32* @r7, align 4
  %v9_d288 = icmp eq i32 %v0_d288, %v1_d288
  %v0_d28c = load i32, i32* @fp, align 4
  %v1_d28c = add i32 %v0_d28c, 4
  store i32 %v1_d28c, i32* @fp, align 4
  br i1 %v9_d288, label %dec_label_pc_d320, label %dec_label_pc_d294

dec_label_pc_d294:                                ; preds = %dec_label_pc_d2e4, %dec_label_pc_d278, %dec_label_pc_d204
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_d204 ], [ %v1_d224, %dec_label_pc_d278 ], [ %v1_d224, %dec_label_pc_d2e4 ]
  store i32 65535, i32* @r4, align 4
  %v2_d2a4 = call i32 @function_13d28(i32 65535, i32 1)
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_d2b0 = load i32, i32* @r4, align 4
  %v9_d2b0 = icmp eq i32 %v3_d178, %v1_d2b0
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v1_d2b8 = load i32, i32* @fp, align 4
  %v2_d2b8 = load i32, i32* @sl, align 4
  %v3_d2b8 = add i32 %v2_d2b8, %v1_d2b8
  %v4_d2b8 = inttoptr i32 %v3_d2b8 to i32*
  store i32 %v2_d2a4, i32* %v4_d2b8, align 4
  %v0_d2bc = load i32, i32* %r3.global-to-local, align 4
  %v1_d2bc = load i32, i32* %r2.global-to-local, align 4
  %v2_d2bc = add i32 %v1_d2bc, %v0_d2bc
  store i32 %v2_d2bc, i32* @r6, align 4
  br i1 %v9_d2b0, label %dec_label_pc_d2c8, label %dec_label_pc_d214

dec_label_pc_d2c8:                                ; preds = %dec_label_pc_d294
  %v0_d2c8 = call i32 @function_1008c()
  %v1_d2c8 = trunc i32 %v0_d2c8 to i16
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v2_d2d4 = add i32 %stack_var_-60.0, %arg2
  store i32 %v2_d2d4, i32* @r6, align 4
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v4_d2dc = add i32 %v2_d2d4, 2
  %v5_d2dc = inttoptr i32 %v4_d2dc to i16*
  store i16 %v1_d2c8, i16* %v5_d2dc, align 2
  br label %dec_label_pc_d220

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d250
  %v1_d2e4 = add i32 %v0_d26c, 16
  %v2_d2e4 = inttoptr i32 %v1_d2e4 to i32*
  %v3_d2e4 = load i32, i32* %v2_d2e4, align 4
  %v1_d2e8 = call i32 @function_154ec(i32 %v3_d2e4)
  store i32 %v1_d2e8, i32* @r4, align 4
  %v0_d2f0 = call i32 @function_1008c()
  %v0_d2f4 = load i32, i32* @r6, align 4
  %v1_d2f4 = add i32 %v0_d2f4, 20
  %v2_d2f4 = inttoptr i32 %v1_d2f4 to i8*
  %v3_d2f4 = load i8, i8* %v2_d2f4, align 1
  %v4_d2f4 = zext i8 %v3_d2f4 to i32
  store i32 %v4_d2f4, i32* %r3.global-to-local, align 4
  %v0_d2f8 = load i32, i32* @r4, align 4
  %v7_d2f8 = lshr i32 %v0_d2f0, %v4_d2f4
  %v8_d2f8 = add i32 %v7_d2f8, %v0_d2f8
  %v1_d2fc = call i32 @function_15344(i32 %v8_d2f8)
  %v1_d300 = load i32, i32* @r6, align 4
  %v2_d300 = add i32 %v1_d300, 4
  %v3_d300 = inttoptr i32 %v2_d300 to i32*
  store i32 %v1_d2fc, i32* %v3_d300, align 4
  %v0_d304 = load i32, i32* @fp, align 4
  %v1_d304 = load i32, i32* @r8, align 4
  %v2_d304 = add i32 %v1_d304, %v0_d304
  %v3_d304 = inttoptr i32 %v2_d304 to i32*
  %v4_d304 = load i32, i32* %v3_d304, align 4
  %v0_d308 = load i32, i32* @r6, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d310 = call i32 @function_152b4(i32 %v4_d304, i32 %v0_d308, i32 16)
  %v0_d314 = load i32, i32* @sb, align 4
  %v1_d314 = load i32, i32* @r7, align 4
  %v9_d314 = icmp eq i32 %v0_d314, %v1_d314
  %v0_d318 = load i32, i32* @fp, align 4
  %v1_d318 = add i32 %v0_d318, 4
  store i32 %v1_d318, i32* @fp, align 4
  br i1 %v9_d314, label %dec_label_pc_d320, label %dec_label_pc_d294

dec_label_pc_d320:                                ; preds = %dec_label_pc_d2e4, %dec_label_pc_d278, %dec_label_pc_d1fc
  %v1_d3808 = phi i32 [ 0, %dec_label_pc_d1fc ], [ %v0_d314, %dec_label_pc_d2e4 ], [ %v0_d288, %dec_label_pc_d278 ]
  store i32 %v1_d1d0, i32* %r2.global-to-local, align 4
  %v2_d324 = icmp eq i32 %v1_d1d0, 0
  br i1 %v2_d324, label %dec_label_pc_d344.outer, label %dec_label_pc_d37c

dec_label_pc_d334:                                ; preds = %dec_label_pc_d344
  store i32 %v1_d338, i32* @r4, align 4
  store i32 %v0_d348, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d334 = load i32, i32* @r8, align 4
  %v4_d334 = mul i32 %v1_d338, 4
  %v5_d334 = add i32 %v0_d334, %v4_d334
  %v6_d334 = inttoptr i32 %v5_d334 to i32*
  %v7_d334 = load i32, i32* %v6_d334, align 4
  store i32 %v7_d334, i32* @r0, align 4
  %v0_d338 = load i32, i32* @sl, align 4
  %v5_d338 = add i32 %v0_d338, %v4_d334
  %v6_d338 = inttoptr i32 %v5_d338 to i32*
  %v7_d338 = load i32, i32* %v6_d338, align 4
  store i32 %v7_d338, i32* @r1, align 4
  %v4_d33c = call i32 @function_15590(i32 %v7_d334, i32 %v7_d338, i32 %v0_d348, i32 16384)
  %v0_d340 = load i32, i32* @r4, align 4
  %v1_d340 = add i32 %v0_d340, 1
  %v0_d344.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d344.outer

dec_label_pc_d344.outer:                          ; preds = %dec_label_pc_d320, %dec_label_pc_d334
  %v0_d344.ph = phi i32 [ %v0_d344.pre.pre, %dec_label_pc_d334 ], [ %v1_d3808, %dec_label_pc_d320 ]
  %v1_d338.ph = phi i32 [ %v1_d340, %dec_label_pc_d334 ], [ 0, %dec_label_pc_d320 ]
  %v0_d348 = load i32, i32* @r5, align 4
  br label %dec_label_pc_d344

dec_label_pc_d344:                                ; preds = %dec_label_pc_d344.outer, %dec_label_pc_d344
  %v1_d338 = phi i32 [ 0, %dec_label_pc_d344 ], [ %v1_d338.ph, %dec_label_pc_d344.outer ]
  %v8_d350 = icmp sgt i32 %v0_d344.ph, %v1_d338
  br i1 %v8_d350, label %dec_label_pc_d334, label %dec_label_pc_d344

dec_label_pc_d35c:                                ; preds = %dec_label_pc_d124
  %v0_d35c = call i32 @function_1008c()
  %v5_d368 = trunc i32 %v0_d35c to i16
  br label %dec_label_pc_d1fc

dec_label_pc_d370:                                ; preds = %dec_label_pc_d220
  store i32 %v18_d124, i32* %sb.global-to-local, align 4
  ret i32 %v3_d234

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d380, %dec_label_pc_d320
  %v1_d3807 = phi i32 [ %v1_d3808, %dec_label_pc_d320 ], [ %v1_d380, %dec_label_pc_d380 ]
  br label %dec_label_pc_d380

dec_label_pc_d380:                                ; preds = %dec_label_pc_d38c, %dec_label_pc_d37c
  %v1_d380 = phi i32 [ %v1_d3807, %dec_label_pc_d37c ], [ %v1_d380.pre, %dec_label_pc_d38c ]
  %v1_d38c = phi i32 [ 0, %dec_label_pc_d37c ], [ %v1_d3ac, %dec_label_pc_d38c ]
  store i32 %v1_d38c, i32* @r6, align 4
  %v6_d388 = icmp slt i32 %v1_d38c, %v1_d380
  br i1 %v6_d388, label %dec_label_pc_d38c, label %dec_label_pc_d37c

dec_label_pc_d38c:                                ; preds = %dec_label_pc_d380
  %v0_d384 = load i32, i32* @r5, align 4
  %v0_d38c = load i32, i32* @sl, align 4
  %v4_d38c = mul i32 %v1_d38c, 4
  %v5_d38c = add i32 %v0_d38c, %v4_d38c
  %v6_d38c = inttoptr i32 %v5_d38c to i32*
  %v7_d38c = load i32, i32* %v6_d38c, align 4
  store i32 %v7_d38c, i32* @r4, align 4
  %v2_d394 = inttoptr i32 %v7_d38c to i16*
  %v3_d394 = call i32 @function_1028c(i16* %v2_d394, i32 %v0_d384)
  %v0_d398 = load i32, i32* @r8, align 4
  %v1_d398 = load i32, i32* @r6, align 4
  %v4_d398 = mul i32 %v1_d398, 4
  %v5_d398 = add i32 %v4_d398, %v0_d398
  %v6_d398 = inttoptr i32 %v5_d398 to i32*
  %v7_d398 = load i32, i32* %v6_d398, align 4
  store i32 %v7_d398, i32* @r0, align 4
  %v0_d39c = load i32, i32* @r4, align 4
  store i32 %v0_d39c, i32* @r1, align 4
  %v0_d3a0 = load i32, i32* @r5, align 4
  store i32 %v0_d3a0, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d3a8 = call i32 @function_15590(i32 %v7_d398, i32 %v0_d39c, i32 %v0_d3a0, i32 16384)
  %v0_d3ac = load i32, i32* @r6, align 4
  %v1_d3ac = add i32 %v0_d3ac, 1
  %v1_d380.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d380

; uselistorder directives
  uselistorder i32 %v1_d380, { 1, 0 }
  uselistorder i32 %v1_d338, { 2, 1, 0 }
  uselistorder i32 %v0_d348, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v3_d234, { 1, 3, 2, 0 }
  uselistorder i32 %v1_d1d0, { 1, 0 }
  uselistorder i32 %v3_d178, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 16, 2, 3, 9, 10, 4, 5, 6, 7, 8, 12, 11, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d344, { 1, 0 }
  uselistorder label %dec_label_pc_d344.outer, { 1, 0 }
}

define i32 @function_d3b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d3b4:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_d3b4 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_d3d0 = call i32 @function_13d28(i32 %arg1, i32 4)
  store i32 %v2_d3d0, i32* @sl, align 4
  %v0_d3dc = load i32, i32* @r7, align 4
  %v2_d3e0 = call i32 @function_13d28(i32 %v0_d3dc, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_d3ec = load i32, i32* @r6, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_d3e0, i32* @r8, align 4
  %v0_d3fc = load i32, i32* @r5, align 4
  %v4_d400 = inttoptr i32 %v0_d3ec to i32*
  %v5_d400 = call i32 @function_a430(i32 %v0_d3fc, i32* %v4_d400, i32 7, i32 65535)
  %v3_d408 = urem i32 %v5_d400, 65536
  %v0_d40c = load i32, i32* @r6, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d414 = load i32, i32* @r4, align 4
  store i32 %v0_d414, i32* %r3.global-to-local, align 4
  %v0_d418 = load i32, i32* @r5, align 4
  %v5_d420 = inttoptr i32 %v0_d40c to i32*
  %v6_d420 = call i32 @function_a430(i32 %v0_d418, i32* %v5_d420, i32 6, i32 %v0_d414)
  %v0_d424 = load i32, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_d434 = load i32, i32* @r5, align 4
  %v3_d438 = urem i32 %v6_d420, 65536
  store i32 %v3_d438, i32* %sb.global-to-local, align 4
  %v4_d43c = inttoptr i32 %v0_d424 to i32*
  %v5_d43c = call i32 @function_a430(i32 %v0_d434, i32* %v4_d43c, i32 0, i32 1024)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d44c = load i32, i32* @r5, align 4
  %v0_d450 = load i32, i32* @r6, align 4
  %v3_d454 = urem i32 %v5_d43c, 65536
  store i32 %v3_d454, i32* @r5, align 4
  %v4_d458 = inttoptr i32 %v0_d450 to i32*
  %v5_d458 = call i32 @function_a430(i32 %v0_d44c, i32* %v4_d458, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_d460 = urem i32 %v5_d458, 256
  %v0_d464 = load i32, i32* %sb.global-to-local, align 4
  %v1_d464 = load i32, i32* @r4, align 4
  %v9_d464 = icmp eq i32 %v0_d464, %v1_d464
  store i32 0, i32* %stack_var_-56, align 4
  br i1 %v9_d464, label %dec_label_pc_d5ec, label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d3b4
  %v1_d484 = call i32 @function_15368(i32 %v0_d464)
  %v2_d484 = trunc i32 %v1_d484 to i16
  br label %dec_label_pc_d48c

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d5ec, %dec_label_pc_d480
  %storemerge2 = phi i16 [ %v5_d5f8, %dec_label_pc_d5ec ], [ %v2_d484, %dec_label_pc_d480 ]
  %v0_d48c = load i32, i32* @r7, align 4
  %v2_d48c = icmp eq i32 %v0_d48c, 0
  br i1 %v2_d48c, label %dec_label_pc_d5b0, label %dec_label_pc_d494

dec_label_pc_d494:                                ; preds = %dec_label_pc_d48c
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v2_d4d0 = ptrtoint i32* %stack_var_-56 to i32
  %v4_d4f0 = sext i16 %storemerge2 to i32
  br label %dec_label_pc_d524

dec_label_pc_d4a4:                                ; preds = %dec_label_pc_d524
  %v1_d4a4 = call i32 @function_15368(i32 %v3_d408)
  %v2_d4a4 = trunc i32 %v1_d4a4 to i16
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v3_d4ac = load i32, i32* @r6, align 4
  %v4_d4ac = add i32 %v3_d4ac, 2
  %v5_d4ac = inttoptr i32 %v4_d4ac to i16*
  store i16 %v2_d4a4, i16* %v5_d4ac, align 2
  br label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d558, %dec_label_pc_d4a4
  %v0_d4b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d4b4 = add i32 %v0_d4b4, 24
  store i32 %v1_d4b4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d4c4 = call i32 @function_15670(i32 2, i32 2, i32 0)
  %v7_d4c8 = icmp eq i32 %v3_d4c4, -1
  %v0_d4cc = load i32, i32* @sb, align 4
  %v1_d4cc = add i32 %v0_d4cc, 1
  store i32 %v1_d4cc, i32* @sb, align 4
  store i32 16, i32* @r2, align 4
  %v1_d4d8 = load i32, i32* @fp, align 4
  %v2_d4d8 = load i32, i32* @r8, align 4
  %v3_d4d8 = add i32 %v2_d4d8, %v1_d4d8
  %v4_d4d8 = inttoptr i32 %v3_d4d8 to i32*
  store i32 %v3_d4c4, i32* %v4_d4d8, align 4
  br i1 %v7_d4c8, label %dec_label_pc_d600, label %dec_label_pc_d4e0

dec_label_pc_d4e0:                                ; preds = %dec_label_pc_d4b0
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_d4f0, i32* %r3.global-to-local, align 4
  %v3_d4f8 = call i32 @function_1528c(i32 %v3_d4c4, i32 %v2_d4d0, i32 16)
  %v0_d4fc = load i32, i32* @r6, align 4
  %v1_d4fc = add i32 %v0_d4fc, 20
  %v2_d4fc = inttoptr i32 %v1_d4fc to i8*
  %v3_d4fc = load i8, i8* %v2_d4fc, align 1
  %v4_d4fc = zext i8 %v3_d4fc to i32
  store i32 %v4_d4fc, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_d4fc, 32
  br i1 %tmp, label %dec_label_pc_d574, label %dec_label_pc_d508

dec_label_pc_d508:                                ; preds = %dec_label_pc_d4e0
  %v0_d508 = load i32, i32* @fp, align 4
  %v1_d508 = load i32, i32* @r8, align 4
  %v2_d508 = add i32 %v1_d508, %v0_d508
  %v3_d508 = inttoptr i32 %v2_d508 to i32*
  %v4_d508 = load i32, i32* %v3_d508, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d514 = call i32 @function_152b4(i32 %v4_d508, i32 %v0_d4fc, i32 16)
  %v0_d518 = load i32, i32* @sb, align 4
  %v1_d518 = load i32, i32* @r7, align 4
  %v9_d518 = icmp eq i32 %v0_d518, %v1_d518
  %v0_d51c = load i32, i32* @fp, align 4
  %v1_d51c = add i32 %v0_d51c, 4
  store i32 %v1_d51c, i32* @fp, align 4
  br i1 %v9_d518, label %dec_label_pc_d5b0, label %dec_label_pc_d524

dec_label_pc_d524:                                ; preds = %dec_label_pc_d574, %dec_label_pc_d508, %dec_label_pc_d494
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_d494 ], [ %v1_d4b4, %dec_label_pc_d508 ], [ %v1_d4b4, %dec_label_pc_d574 ]
  store i32 65535, i32* @r4, align 4
  %v2_d534 = call i32 @function_13d28(i32 65535, i32 1)
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_d540 = load i32, i32* @r4, align 4
  %v9_d540 = icmp eq i32 %v3_d408, %v1_d540
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v1_d548 = load i32, i32* @fp, align 4
  %v2_d548 = load i32, i32* @sl, align 4
  %v3_d548 = add i32 %v2_d548, %v1_d548
  %v4_d548 = inttoptr i32 %v3_d548 to i32*
  store i32 %v2_d534, i32* %v4_d548, align 4
  %v0_d54c = load i32, i32* %r3.global-to-local, align 4
  %v1_d54c = load i32, i32* %r2.global-to-local, align 4
  %v2_d54c = add i32 %v1_d54c, %v0_d54c
  store i32 %v2_d54c, i32* @r6, align 4
  br i1 %v9_d540, label %dec_label_pc_d558, label %dec_label_pc_d4a4

dec_label_pc_d558:                                ; preds = %dec_label_pc_d524
  %v0_d558 = call i32 @function_1008c()
  %v1_d558 = trunc i32 %v0_d558 to i16
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v2_d564 = add i32 %stack_var_-60.0, %arg2
  store i32 %v2_d564, i32* @r6, align 4
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v4_d56c = add i32 %v2_d564, 2
  %v5_d56c = inttoptr i32 %v4_d56c to i16*
  store i16 %v1_d558, i16* %v5_d56c, align 2
  br label %dec_label_pc_d4b0

dec_label_pc_d574:                                ; preds = %dec_label_pc_d4e0
  %v1_d574 = add i32 %v0_d4fc, 16
  %v2_d574 = inttoptr i32 %v1_d574 to i32*
  %v3_d574 = load i32, i32* %v2_d574, align 4
  %v1_d578 = call i32 @function_154ec(i32 %v3_d574)
  store i32 %v1_d578, i32* @r4, align 4
  %v0_d580 = call i32 @function_1008c()
  %v0_d584 = load i32, i32* @r6, align 4
  %v1_d584 = add i32 %v0_d584, 20
  %v2_d584 = inttoptr i32 %v1_d584 to i8*
  %v3_d584 = load i8, i8* %v2_d584, align 1
  %v4_d584 = zext i8 %v3_d584 to i32
  store i32 %v4_d584, i32* %r3.global-to-local, align 4
  %v0_d588 = load i32, i32* @r4, align 4
  %v7_d588 = lshr i32 %v0_d580, %v4_d584
  %v8_d588 = add i32 %v7_d588, %v0_d588
  %v1_d58c = call i32 @function_15344(i32 %v8_d588)
  %v1_d590 = load i32, i32* @r6, align 4
  %v2_d590 = add i32 %v1_d590, 4
  %v3_d590 = inttoptr i32 %v2_d590 to i32*
  store i32 %v1_d58c, i32* %v3_d590, align 4
  %v0_d594 = load i32, i32* @fp, align 4
  %v1_d594 = load i32, i32* @r8, align 4
  %v2_d594 = add i32 %v1_d594, %v0_d594
  %v3_d594 = inttoptr i32 %v2_d594 to i32*
  %v4_d594 = load i32, i32* %v3_d594, align 4
  %v0_d598 = load i32, i32* @r6, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d5a0 = call i32 @function_152b4(i32 %v4_d594, i32 %v0_d598, i32 16)
  %v0_d5a4 = load i32, i32* @sb, align 4
  %v1_d5a4 = load i32, i32* @r7, align 4
  %v9_d5a4 = icmp eq i32 %v0_d5a4, %v1_d5a4
  %v0_d5a8 = load i32, i32* @fp, align 4
  %v1_d5a8 = add i32 %v0_d5a8, 4
  store i32 %v1_d5a8, i32* @fp, align 4
  br i1 %v9_d5a4, label %dec_label_pc_d5b0, label %dec_label_pc_d524

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d574, %dec_label_pc_d508, %dec_label_pc_d48c
  %v1_d6108 = phi i32 [ 0, %dec_label_pc_d48c ], [ %v0_d5a4, %dec_label_pc_d574 ], [ %v0_d518, %dec_label_pc_d508 ]
  store i32 %v1_d460, i32* %r2.global-to-local, align 4
  %v2_d5b4 = icmp eq i32 %v1_d460, 0
  br i1 %v2_d5b4, label %dec_label_pc_d5d4.outer, label %dec_label_pc_d60c

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d5d4
  store i32 %v1_d5c8, i32* @r4, align 4
  store i32 %v0_d5d8, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d5c4 = load i32, i32* @r8, align 4
  %v4_d5c4 = mul i32 %v1_d5c8, 4
  %v5_d5c4 = add i32 %v0_d5c4, %v4_d5c4
  %v6_d5c4 = inttoptr i32 %v5_d5c4 to i32*
  %v7_d5c4 = load i32, i32* %v6_d5c4, align 4
  store i32 %v7_d5c4, i32* @r0, align 4
  %v0_d5c8 = load i32, i32* @sl, align 4
  %v5_d5c8 = add i32 %v0_d5c8, %v4_d5c4
  %v6_d5c8 = inttoptr i32 %v5_d5c8 to i32*
  %v7_d5c8 = load i32, i32* %v6_d5c8, align 4
  store i32 %v7_d5c8, i32* @r1, align 4
  %v4_d5cc = call i32 @function_15590(i32 %v7_d5c4, i32 %v7_d5c8, i32 %v0_d5d8, i32 16384)
  %v0_d5d0 = load i32, i32* @r4, align 4
  %v1_d5d0 = add i32 %v0_d5d0, 1
  %v0_d5d4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d5d4.outer

dec_label_pc_d5d4.outer:                          ; preds = %dec_label_pc_d5b0, %dec_label_pc_d5c4
  %v0_d5d4.ph = phi i32 [ %v0_d5d4.pre.pre, %dec_label_pc_d5c4 ], [ %v1_d6108, %dec_label_pc_d5b0 ]
  %v1_d5c8.ph = phi i32 [ %v1_d5d0, %dec_label_pc_d5c4 ], [ 0, %dec_label_pc_d5b0 ]
  %v0_d5d8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_d5d4

dec_label_pc_d5d4:                                ; preds = %dec_label_pc_d5d4.outer, %dec_label_pc_d5d4
  %v1_d5c8 = phi i32 [ 0, %dec_label_pc_d5d4 ], [ %v1_d5c8.ph, %dec_label_pc_d5d4.outer ]
  %v8_d5e0 = icmp sgt i32 %v0_d5d4.ph, %v1_d5c8
  br i1 %v8_d5e0, label %dec_label_pc_d5c4, label %dec_label_pc_d5d4

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d3b4
  %v0_d5ec = call i32 @function_1008c()
  %v5_d5f8 = trunc i32 %v0_d5ec to i16
  br label %dec_label_pc_d48c

dec_label_pc_d600:                                ; preds = %dec_label_pc_d4b0
  store i32 %v18_d3b4, i32* %sb.global-to-local, align 4
  ret i32 %v3_d4c4

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d610, %dec_label_pc_d5b0
  %v1_d6107 = phi i32 [ %v1_d6108, %dec_label_pc_d5b0 ], [ %v1_d610, %dec_label_pc_d610 ]
  br label %dec_label_pc_d610

dec_label_pc_d610:                                ; preds = %dec_label_pc_d61c, %dec_label_pc_d60c
  %v1_d610 = phi i32 [ %v1_d6107, %dec_label_pc_d60c ], [ %v1_d610.pre, %dec_label_pc_d61c ]
  %v1_d61c = phi i32 [ 0, %dec_label_pc_d60c ], [ %v1_d63c, %dec_label_pc_d61c ]
  store i32 %v1_d61c, i32* @r6, align 4
  %v6_d618 = icmp slt i32 %v1_d61c, %v1_d610
  br i1 %v6_d618, label %dec_label_pc_d61c, label %dec_label_pc_d60c

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d610
  %v0_d614 = load i32, i32* @r5, align 4
  %v0_d61c = load i32, i32* @sl, align 4
  %v4_d61c = mul i32 %v1_d61c, 4
  %v5_d61c = add i32 %v0_d61c, %v4_d61c
  %v6_d61c = inttoptr i32 %v5_d61c to i32*
  %v7_d61c = load i32, i32* %v6_d61c, align 4
  store i32 %v7_d61c, i32* @r4, align 4
  %v2_d624 = inttoptr i32 %v7_d61c to i16*
  %v3_d624 = call i32 @function_1028c(i16* %v2_d624, i32 %v0_d614)
  %v0_d628 = load i32, i32* @r8, align 4
  %v1_d628 = load i32, i32* @r6, align 4
  %v4_d628 = mul i32 %v1_d628, 4
  %v5_d628 = add i32 %v4_d628, %v0_d628
  %v6_d628 = inttoptr i32 %v5_d628 to i32*
  %v7_d628 = load i32, i32* %v6_d628, align 4
  store i32 %v7_d628, i32* @r0, align 4
  %v0_d62c = load i32, i32* @r4, align 4
  store i32 %v0_d62c, i32* @r1, align 4
  %v0_d630 = load i32, i32* @r5, align 4
  store i32 %v0_d630, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d638 = call i32 @function_15590(i32 %v7_d628, i32 %v0_d62c, i32 %v0_d630, i32 16384)
  %v0_d63c = load i32, i32* @r6, align 4
  %v1_d63c = add i32 %v0_d63c, 1
  %v1_d610.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d610

; uselistorder directives
  uselistorder i32 %v1_d610, { 1, 0 }
  uselistorder i32 %v1_d5c8, { 2, 1, 0 }
  uselistorder i32 %v0_d5d8, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v3_d4c4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_d460, { 1, 0 }
  uselistorder i32 %v3_d408, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 16, 2, 3, 9, 10, 4, 5, 6, 7, 8, 12, 11, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d5d4, { 1, 0 }
  uselistorder label %dec_label_pc_d5d4.outer, { 1, 0 }
}

define i32 @function_d644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d644:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_d644 = load i32, i32* @r4, align 4
  %v18_d644 = load i32, i32* @sb, align 4
  %v27_d644 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_d660 = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_d664 = load i32, i32* @r5, align 4
  store i32 %v0_d664, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d674 = load i32, i32* @r4, align 4
  %v5_d678 = inttoptr i32 %v0_d664 to i32*
  %v6_d678 = call i32 @function_a430(i32 %v0_d674, i32* %v5_d678, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_d690 = load i32, i32* @r5, align 4
  store i32 %v0_d690, i32* %r1.global-to-local, align 4
  %v0_d694 = load i32, i32* @r4, align 4
  %v5_d698 = trunc i32 %v6_d678 to i8
  %v6_d69c = inttoptr i32 %v0_d690 to i32*
  %v7_d69c = call i32 @function_a430(i32 %v0_d694, i32* %v6_d69c, i32 3, i32 65535)
  %v0_d6a0 = load i32, i32* @r5, align 4
  store i32 %v0_d6a0, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d6b0 = load i32, i32* @r4, align 4
  %v5_d6b4 = inttoptr i32 %v0_d6a0 to i32*
  %v6_d6b4 = call i32 @function_a430(i32 %v0_d6b0, i32* %v5_d6b4, i32 4, i32 64)
  %v0_d6c0 = load i32, i32* @r5, align 4
  store i32 %v0_d6c0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d6cc = load i32, i32* @r4, align 4
  %v6_d6d4 = inttoptr i32 %v0_d6c0 to i32*
  %v7_d6d4 = call i32 @function_a430(i32 %v0_d6cc, i32* %v6_d6d4, i32 5, i32 0)
  %v1_d6e0 = urem i32 %v7_d6d4, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_d6ec = load i32, i32* @r5, align 4
  store i32 %v0_d6ec, i32* %r1.global-to-local, align 4
  %v0_d6f0 = load i32, i32* @r4, align 4
  %v5_d6f8 = inttoptr i32 %v0_d6ec to i32*
  %v6_d6f8 = call i32 @function_a430(i32 %v0_d6f0, i32* %v5_d6f8, i32 6, i32 65535)
  %v0_d700 = load i32, i32* @r5, align 4
  store i32 %v0_d700, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v6_d6f8, i32* %sb.global-to-local, align 4
  %v0_d710 = load i32, i32* @r4, align 4
  %v4_d714 = inttoptr i32 %v0_d700 to i32*
  %v5_d714 = call i32 @function_a430(i32 %v0_d710, i32* %v4_d714, i32 7, i32 65535)
  %v0_d718 = load i32, i32* @r5, align 4
  store i32 %v0_d718, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_d714, i32* @sl, align 4
  %v0_d728 = load i32, i32* @r4, align 4
  %v4_d72c = inttoptr i32 %v0_d718 to i32*
  %v5_d72c = call i32 @function_a430(i32 %v0_d728, i32* %v4_d72c, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d738 = load i32, i32* @r5, align 4
  store i32 %v0_d738, i32* %r1.global-to-local, align 4
  store i32 %v5_d72c, i32* @r6, align 4
  %v0_d740 = load i32, i32* @r4, align 4
  %v4_d744 = inttoptr i32 %v0_d738 to i32*
  %v5_d744 = call i32 @function_a430(i32 %v0_d740, i32* %v4_d744, i32 1, i32 1)
  %v2_d750 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_d750, i32* %r3.global-to-local, align 4
  %v1_d754 = urem i32 %v5_d744, 256
  %v0_d758 = load i32, i32* @r5, align 4
  store i32 %v0_d758, i32* %r1.global-to-local, align 4
  %v0_d760 = load i32, i32* @r4, align 4
  %v5_d768 = inttoptr i32 %v0_d758 to i32*
  %v6_d768 = call i32 @function_a430(i32 %v0_d760, i32* %v5_d768, i32 25, i32 %v2_d750)
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_d77c = call i32 @function_15670(i32 2, i32 3, i32 17)
  store i32 %v3_d77c, i32* @r0, align 4
  %v7_d780 = icmp eq i32 %v3_d77c, -1
  store i1 %v7_d780, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d77c, i32* @fp, align 4
  br i1 %v7_d780, label %dec_label_pc_dadc, label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d644
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d794 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d794, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_d7a8 = call i32 @function_15600(i32 %v3_d77c, i32 0, i32 3, i32 %v6_d794, i32 ptrtoint (i32* @0 to i32))
  %v7_d7ac = icmp eq i32 %v5_d7a8, -1
  store i1 %v7_d7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7ac, label %dec_label_pc_dad4, label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d78c
  %v0_d7b4 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_d7c0 = urem i32 %v0_d7b4, 65536
  %v3_d7c4 = icmp ugt i32 %v3_d7c0, 1459
  %v9_d7c4 = icmp eq i32 %v3_d7c0, 1460
  store i1 %v9_d7c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d7c4, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_d7b4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_d7b4, %bb
  %v0_d7cc = phi i32 [ %v3_d7c0, %dec_label_pc_d7b4 ], [ 1460, %bb ]
  %v0_d7d0 = load i32, i32* %sb.global-to-local, align 4
  %v3_d7d8 = urem i32 %v0_d7d0, 65536
  store i32 %v3_d7d8, i32* %r3.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r7, align 4
  %v2_d7dc = icmp eq i32 %v0_d7dc, 0
  store i1 %v2_d7dc, i1* %cpsr_z.global-to-local, align 1
  %v3_d7e0 = mul i32 %v7_d69c, 65536
  store i32 %v3_d7e0, i32* %r1.global-to-local, align 4
  %v0_d7e8 = load i32, i32* @sl, align 4
  br i1 %v2_d7dc, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  store i32 %v0_d7cc, i32* %r3.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %bb40, %bb41
  %v1_d80c = phi i32 [ %v3_d7d8, %bb40 ], [ %v0_d7cc, %bb41 ]
  %v3_d7f4 = urem i32 %v7_d69c, 65536
  store i32 %v3_d7f4, i32* %r1.global-to-local, align 4
  %v3_d7f8 = urem i32 %v0_d7e8, 65536
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d7dc, label %.thread, label %dec_label_pc_d814

.thread:                                          ; preds = %bb42
  %v2_d808 = add nsw i32 %v1_d80c, 28
  store i32 %v2_d808, i32* @sb, align 4
  %v2_d80c = add nsw i32 %v1_d80c, 8
  store i32 %v2_d80c, i32* @sl, align 4
  br label %dec_label_pc_da14.preheader

dec_label_pc_d814:                                ; preds = %bb42
  %v1_d818 = add nuw nsw i32 %v0_d7cc, 8
  store i32 %v1_d818, i32* @sl, align 4
  %v1_d81c = add nuw nsw i32 %v0_d7cc, 28
  store i32 %v1_d81c, i32* @sb, align 4
  %v3_d828 = urem i32 %v1_d81c, 65536
  store i32 %v3_d828, i32* %r3.global-to-local, align 4
  %v3_d82c = urem i32 %v1_d818, 65536
  store i32 %v3_d82c, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v2_d900 = icmp eq i32 %v1_d6e0, 0
  %sext = mul i32 %v6_d6b4, 16777216
  %v3_d8fc = sdiv i32 %sext, 16777216
  br label %dec_label_pc_d89c

dec_label_pc_d83c:                                ; preds = %dec_label_pc_d89c, %dec_label_pc_d914
  %v2_d840 = phi i32 [ %v0_d90c, %dec_label_pc_d89c ], [ %v2_d840.pre, %dec_label_pc_d914 ]
  %v3_d840 = add i32 %v2_d840, 9
  %v4_d840 = inttoptr i32 %v3_d840 to i8*
  store i8 17, i8* %v4_d840, align 1
  %v3_d844 = load i32, i32* %stack_var_-44, align 4
  %v5_d84c = mul i32 %v3_d844, 24
  store i32 %v5_d84c, i32* %r3.global-to-local, align 4
  %v1_d854 = load i32, i32* %r4.global-to-local, align 4
  %v2_d854 = add i32 %v1_d854, 12
  %v3_d854 = inttoptr i32 %v2_d854 to i32*
  store i32 %v6_d768, i32* %v3_d854, align 4
  %v0_d858 = load i32, i32* %r3.global-to-local, align 4
  %v1_d858 = load i32, i32* @r8, align 4
  %v2_d858 = add i32 %v1_d858, %v0_d858
  store i32 %v2_d858, i32* %r3.global-to-local, align 4
  %v1_d85c = add i32 %v2_d858, 16
  %v2_d85c = inttoptr i32 %v1_d85c to i32*
  %v3_d85c = load i32, i32* %v2_d85c, align 4
  %v1_d864 = load i32, i32* %r4.global-to-local, align 4
  %v2_d864 = add i32 %v1_d864, 16
  %v3_d864 = inttoptr i32 %v2_d864 to i32*
  store i32 %v3_d85c, i32* %v3_d864, align 4
  %v1_d868 = call i32 @function_15368(i32 %v3_d7d8)
  %v2_d868 = trunc i32 %v1_d868 to i16
  %v3_d86c = load i32, i32* %r4.global-to-local, align 4
  %v4_d86c = add i32 %v3_d86c, 20
  %v5_d86c = inttoptr i32 %v4_d86c to i16*
  store i16 %v2_d868, i16* %v5_d86c, align 2
  %v1_d874 = call i32 @function_15368(i32 %v3_d7f8)
  %v2_d874 = trunc i32 %v1_d874 to i16
  %v3_d878 = load i32, i32* @r5, align 4
  %v4_d878 = add i32 %v3_d878, 2
  %v5_d878 = inttoptr i32 %v4_d878 to i16*
  store i16 %v2_d874, i16* %v5_d878, align 2
  %v0_d87c = load i32, i32* @r6, align 4
  %v1_d880 = call i32 @function_15368(i32 %v0_d87c)
  %v2_d880 = trunc i32 %v1_d880 to i16
  %v3_d884 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d884, i32* %r3.global-to-local, align 4
  %v1_d888 = add i32 %v3_d884, 1
  store i32 %v1_d888, i32* @r4, align 4
  %v1_d88c = load i32, i32* @r7, align 4
  %v9_d88c = icmp eq i32 %v1_d888, %v1_d88c
  store i1 %v9_d88c, i1* %cpsr_z.global-to-local, align 1
  %v3_d890 = load i32, i32* @r5, align 4
  %v4_d890 = add i32 %v3_d890, 4
  %v5_d890 = inttoptr i32 %v4_d890 to i16*
  store i16 %v2_d880, i16* %v5_d890, align 2
  %v0_d894 = load i32, i32* @r4, align 4
  store i32 %v0_d894, i32* %stack_var_-44, align 4
  %v6_d898 = icmp slt i32 %v1_d888, %v1_d88c
  br i1 %v6_d898, label %dec_label_pc_d89c, label %dec_label_pc_da14.preheader.loopexit

dec_label_pc_da14.preheader.loopexit:             ; preds = %dec_label_pc_d83c
  %v0_da18.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_da14.preheader

dec_label_pc_da14.preheader:                      ; preds = %.thread, %dec_label_pc_da14.preheader.loopexit
  %v0_da18.pre = phi i32 [ %v0_da18.pre.pre, %dec_label_pc_da14.preheader.loopexit ], [ 0, %.thread ]
  %v3_da78 = icmp eq i32 %v6_d768, -1
  %v8_da78 = icmp eq i32 %v6_d768, -1
  %v3_da94 = icmp eq i32 %v3_d7f4, 65535
  %v2_d988 = icmp eq i32 %v1_d754, 0
  br label %dec_label_pc_da14

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d83c, %dec_label_pc_d814
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d8a8 = call i32 @function_13d28(i32 1510, i32 1)
  store i32 %v2_d660, i32* %r1.global-to-local, align 4
  %v3_d8b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d8b0, i32* %r3.global-to-local, align 4
  %v2_d8b4 = load i32, i32* @r4, align 4
  %v5_d8b4 = mul i32 %v2_d8b4, 4
  %v6_d8b4 = add i32 %v5_d8b4, %v2_d660
  %v7_d8b4 = inttoptr i32 %v6_d8b4 to i32*
  store i32 %v2_d8a8, i32* %v7_d8b4, align 4
  %v0_d8b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d8b8 = load i32, i32* %r3.global-to-local, align 4
  %v4_d8b8 = mul i32 %v1_d8b8, 4
  %v5_d8b8 = add i32 %v4_d8b8, %v0_d8b8
  %v6_d8b8 = inttoptr i32 %v5_d8b8 to i32*
  %v7_d8b8 = load i32, i32* %v6_d8b8, align 4
  store i32 %v7_d8b8, i32* %r4.global-to-local, align 4
  %v1_d8bc = inttoptr i32 %v7_d8b8 to i8*
  %v2_d8bc = load i8, i8* %v1_d8bc, align 1
  %tmp = urem i8 %v2_d8bc, 16
  %v1_d8c4 = or i8 %tmp, 64
  store i8 %v1_d8c4, i8* %v1_d8bc, align 1
  %v0_d8cc = load i32, i32* %r4.global-to-local, align 4
  %v1_d8cc = inttoptr i32 %v0_d8cc to i8*
  %v2_d8cc = load i8, i8* %v1_d8cc, align 1
  %v3_d8cc = zext i8 %v2_d8cc to i32
  %v1_d8d0 = and i32 %v3_d8cc, 240
  %v1_d8d4 = or i32 %v1_d8d0, 5
  store i32 %v1_d8d4, i32* %r3.global-to-local, align 4
  %v1_d8d8 = trunc i32 %v1_d8d4 to i8
  store i8 %v1_d8d8, i8* %v1_d8cc, align 1
  %v2_d8e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8e0 = add i32 %v2_d8e0, 1
  %v4_d8e0 = inttoptr i32 %v3_d8e0 to i8*
  store i8 %v5_d698, i8* %v4_d8e0, align 1
  %v1_d8e8 = call i32 @function_15368(i32 %v3_d828)
  %v2_d8e8 = trunc i32 %v1_d8e8 to i16
  %v3_d8ec = load i32, i32* %r4.global-to-local, align 4
  %v4_d8ec = add i32 %v3_d8ec, 2
  %v5_d8ec = inttoptr i32 %v4_d8ec to i16*
  store i16 %v2_d8e8, i16* %v5_d8ec, align 2
  %v1_d8f4 = call i32 @function_15368(i32 %v3_d7f4)
  %v2_d8f4 = trunc i32 %v1_d8f4 to i16
  store i32 %v3_d8fc, i32* %r1.global-to-local, align 4
  store i32 %v1_d6e0, i32* %r3.global-to-local, align 4
  store i1 %v2_d900, i1* %cpsr_z.global-to-local, align 1
  %v3_d904 = load i32, i32* %r4.global-to-local, align 4
  %v4_d904 = add i32 %v3_d904, 4
  %v5_d904 = inttoptr i32 %v4_d904 to i16*
  store i16 %v2_d8f4, i16* %v5_d904, align 2
  %v0_d908 = load i32, i32* %r1.global-to-local, align 4
  %v1_d908 = trunc i32 %v0_d908 to i8
  %v2_d908 = load i32, i32* %r4.global-to-local, align 4
  %v3_d908 = add i32 %v2_d908, 8
  %v4_d908 = inttoptr i32 %v3_d908 to i8*
  store i8 %v1_d908, i8* %v4_d908, align 1
  %v0_d90c = load i32, i32* %r4.global-to-local, align 4
  %v1_d90c = add i32 %v0_d90c, 20
  store i32 %v1_d90c, i32* @r5, align 4
  %v0_d910 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d910, label %dec_label_pc_d83c, label %dec_label_pc_d914

dec_label_pc_d914:                                ; preds = %dec_label_pc_d89c
  %v1_d918 = call i32 @function_15368(i32 16384)
  %v2_d918 = trunc i32 %v1_d918 to i16
  %v3_d91c = load i32, i32* %r4.global-to-local, align 4
  %v4_d91c = add i32 %v3_d91c, 6
  %v5_d91c = inttoptr i32 %v4_d91c to i16*
  store i16 %v2_d918, i16* %v5_d91c, align 2
  %v2_d840.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d83c

dec_label_pc_d924:                                ; preds = %dec_label_pc_da14
  br label %dec_label_pc_d928

dec_label_pc_d928:                                ; preds = %dec_label_pc_d990, %dec_label_pc_d924
  %v1_d93c = phi i32 [ %v1_da04, %dec_label_pc_d990 ], [ 0, %dec_label_pc_d924 ]
  %v5_d92c = mul i32 %v1_d93c, 24
  %v1_d930 = load i32, i32* @r8, align 4
  %v2_d930 = add i32 %v1_d930, %v5_d92c
  store i32 %v2_d930, i32* %r3.global-to-local, align 4
  store i32 %v2_d660, i32* %r1.global-to-local, align 4
  %v1_d938 = add i32 %v2_d930, 20
  %v2_d938 = inttoptr i32 %v1_d938 to i8*
  %v3_d938 = load i8, i8* %v2_d938, align 1
  %v4_d93c = mul i32 %v1_d93c, 4
  %v5_d93c = add i32 %v4_d93c, %v2_d660
  %v6_d93c = inttoptr i32 %v5_d93c to i32*
  %v7_d93c = load i32, i32* %v6_d93c, align 4
  store i32 %v7_d93c, i32* @r5, align 4
  %v7_d940 = icmp eq i8 %v3_d938, 31
  store i1 %v7_d940, i1* %cpsr_z.global-to-local, align 1
  %v1_d944 = add i32 %v7_d93c, 20
  store i32 %v1_d944, i32* @r6, align 4
  %tmp43 = icmp ult i8 %v3_d938, 32
  br i1 %tmp43, label %dec_label_pc_da48, label %dec_label_pc_d94c

dec_label_pc_d94c:                                ; preds = %dec_label_pc_d928
  store i1 %v8_da78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_da78, label %dec_label_pc_da84, label %dec_label_pc_d958

dec_label_pc_d958:                                ; preds = %dec_label_pc_da48, %dec_label_pc_d94c
  store i32 %v3_d7f4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_da94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_da94, label %dec_label_pc_daa0, label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_da84.dec_label_pc_d96c_crit_edge, %dec_label_pc_d958
  %v1_d970 = phi i32 [ %v1_d970.pre, %dec_label_pc_da84.dec_label_pc_d96c_crit_edge ], [ 65535, %dec_label_pc_d958 ]
  store i32 %v3_d7d8, i32* %r1.global-to-local, align 4
  %v9_d970 = icmp eq i32 %v3_d7d8, %v1_d970
  store i1 %v9_d970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d970, label %dec_label_pc_dab4, label %dec_label_pc_d978

dec_label_pc_d978:                                ; preds = %dec_label_pc_daa0.dec_label_pc_d978_crit_edge, %dec_label_pc_d96c
  %v1_d97c = phi i32 [ %v1_d97c.pre, %dec_label_pc_daa0.dec_label_pc_d978_crit_edge ], [ %v1_d970, %dec_label_pc_d96c ]
  %v9_d97c = icmp eq i32 %v3_d7f8, %v1_d97c
  store i1 %v9_d97c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d97c, label %dec_label_pc_dac8, label %dec_label_pc_d984

dec_label_pc_d984:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_d978, %dec_label_pc_dac8
  store i32 %v1_d754, i32* %r3.global-to-local, align 4
  store i1 %v2_d988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d988, label %dec_label_pc_d990, label %dec_label_pc_da38

dec_label_pc_d990:                                ; preds = %dec_label_pc_d984, %dec_label_pc_da38
  %v2_d994 = load i32, i32* @r5, align 4
  %v3_d994 = add i32 %v2_d994, 10
  %v4_d994 = inttoptr i32 %v3_d994 to i16*
  store i16 0, i16* %v4_d994, align 2
  %v0_d998 = load i32, i32* @r5, align 4
  store i32 %v0_d998, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_d9a0 = call i32 @function_e5a4(i32 %v0_d998, i32 20)
  %v3_d9a0 = trunc i32 %v2_d9a0 to i16
  %v3_d9a4 = load i32, i32* @r5, align 4
  %v4_d9a4 = add i32 %v3_d9a4, 10
  %v5_d9a4 = inttoptr i32 %v4_d9a4 to i16*
  store i16 %v3_d9a0, i16* %v5_d9a4, align 2
  %v2_d9ac = load i32, i32* @r6, align 4
  %v3_d9ac = add i32 %v2_d9ac, 6
  %v4_d9ac = inttoptr i32 %v3_d9ac to i16*
  store i16 0, i16* %v4_d9ac, align 2
  %v0_d9b0 = load i32, i32* @r6, align 4
  store i32 %v0_d9b0, i32* @r1, align 4
  %v1_d9b4 = add i32 %v0_d9b0, 4
  %v2_d9b4 = inttoptr i32 %v1_d9b4 to i16*
  %v3_d9b4 = load i16, i16* %v2_d9b4, align 2
  %v4_d9b4 = zext i16 %v3_d9b4 to i32
  %v0_d9b8 = load i32, i32* @sl, align 4
  store i32 %v0_d9b8, i32* %r3.global-to-local, align 4
  %v0_d9bc = load i32, i32* @r5, align 4
  %v4_d9c0 = call i32 @function_e5f4(i32 %v0_d9bc, i32 %v0_d9b0, i32 %v4_d9b4, i32 %v0_d9b8)
  %v5_d9c0 = trunc i32 %v4_d9c0 to i16
  %v3_d9c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d9c4, i32* %r3.global-to-local, align 4
  %v3_d9c8 = mul i32 %v3_d9c4, 32
  store i32 %v3_d9c8, i32* %lr.global-to-local, align 4
  %v3_d9cc = load i32, i32* @r6, align 4
  %v4_d9cc = add i32 %v3_d9cc, 6
  %v5_d9cc = inttoptr i32 %v4_d9cc to i16*
  store i16 %v5_d9c0, i16* %v5_d9cc, align 2
  %v0_d9d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_d9d0 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_d9d0, -8
  %v5_d9d0 = add i32 %v0_d9d0, %tmp44
  store i32 %v5_d9d0, i32* %lr.global-to-local, align 4
  %v0_d9d4 = load i32, i32* @r6, align 4
  %v1_d9d4 = add i32 %v0_d9d4, 2
  %v2_d9d4 = inttoptr i32 %v1_d9d4 to i16*
  %v3_d9d4 = load i16, i16* %v2_d9d4, align 2
  %v1_d9d8 = load i32, i32* @r8, align 4
  %v2_d9d8 = add i32 %v1_d9d8, %v5_d9d0
  store i32 %v2_d9d8, i32* @lr, align 4
  %v3_d9dc = add i32 %v2_d9d8, 2
  %v4_d9dc = inttoptr i32 %v3_d9dc to i16*
  store i16 %v3_d9d4, i16* %v4_d9dc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d9e8 = load i32, i32* @r5, align 4
  store i32 %v0_d9e8, i32* @r1, align 4
  %v0_d9ec = load i32, i32* @fp, align 4
  store i32 %v0_d9ec, i32* @r0, align 4
  %v0_d9f0 = load i32, i32* @sb, align 4
  store i32 %v0_d9f0, i32* @r2, align 4
  %v0_d9fc = call i32 @function_155b4()
  %v3_da00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da00, i32* %r3.global-to-local, align 4
  %v1_da04 = add i32 %v3_da00, 1
  %v1_da08 = load i32, i32* @r7, align 4
  %v9_da08 = icmp eq i32 %v1_da04, %v1_da08
  store i1 %v9_da08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_da04, i32* %stack_var_-44, align 4
  %v5_da10 = icmp slt i32 %v1_da04, %v1_da08
  br i1 %v5_da10, label %dec_label_pc_d928, label %dec_label_pc_da14

dec_label_pc_da14:                                ; preds = %dec_label_pc_da24, %dec_label_pc_d990, %dec_label_pc_da14.preheader
  %v0_da28 = phi i32 [ %v0_da18.pre, %dec_label_pc_da14.preheader ], [ 0, %dec_label_pc_da24 ], [ %v1_da08, %dec_label_pc_d990 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_da18 = icmp eq i32 %v0_da28, 0
  store i1 %v2_da18, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_da18, label %dec_label_pc_da24, label %dec_label_pc_d924

dec_label_pc_da24:                                ; preds = %dec_label_pc_da14
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_da14

dec_label_pc_da38:                                ; preds = %dec_label_pc_d984
  %v0_da38 = load i32, i32* @r5, align 4
  %v1_da38 = add i32 %v0_da38, 28
  store i32 %v0_d7cc, i32* %r1.global-to-local, align 4
  %v2_da40 = inttoptr i32 %v1_da38 to i16*
  %v3_da40 = call i32 @function_1028c(i16* %v2_da40, i32 %v0_d7cc)
  br label %dec_label_pc_d990

dec_label_pc_da48:                                ; preds = %dec_label_pc_d928
  %v1_da48 = add i32 %v2_d930, 16
  %v2_da48 = inttoptr i32 %v1_da48 to i32*
  %v3_da48 = load i32, i32* %v2_da48, align 4
  %v1_da4c = call i32 @function_154ec(i32 %v3_da48)
  store i32 %v1_da4c, i32* %r4.global-to-local, align 4
  %v0_da54 = call i32 @function_1008c()
  %v3_da58 = load i32, i32* %stack_var_-44, align 4
  %v5_da60 = mul i32 %v3_da58, 24
  %v1_da64 = load i32, i32* @r8, align 4
  %v2_da64 = add i32 %v1_da64, %v5_da60
  store i32 %v2_da64, i32* %r3.global-to-local, align 4
  %v1_da68 = add i32 %v2_da64, 20
  %v2_da68 = inttoptr i32 %v1_da68 to i8*
  %v3_da68 = load i8, i8* %v2_da68, align 1
  %v4_da68 = zext i8 %v3_da68 to i32
  %v0_da6c = load i32, i32* %r4.global-to-local, align 4
  %v7_da6c = lshr i32 %v0_da54, %v4_da68
  %v8_da6c = add i32 %v7_da6c, %v0_da6c
  %v1_da70 = call i32 @function_15344(i32 %v8_da6c)
  store i1 %v8_da78, i1* %cpsr_z.global-to-local, align 1
  %v1_da7c = load i32, i32* @r5, align 4
  %v2_da7c = add i32 %v1_da7c, 16
  %v3_da7c = inttoptr i32 %v2_da7c to i32*
  store i32 %v1_da70, i32* %v3_da7c, align 4
  br i1 %v3_da78, label %dec_label_pc_da84, label %dec_label_pc_d958

dec_label_pc_da84:                                ; preds = %dec_label_pc_da48, %dec_label_pc_d94c
  %v0_da84 = call i32 @function_1008c()
  store i32 %v3_d7f4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_da94, i1* %cpsr_z.global-to-local, align 1
  %v1_da98 = load i32, i32* @r5, align 4
  %v2_da98 = add i32 %v1_da98, 12
  %v3_da98 = inttoptr i32 %v2_da98 to i32*
  store i32 %v0_da84, i32* %v3_da98, align 4
  br i1 %v3_da94, label %dec_label_pc_daa0, label %dec_label_pc_da84.dec_label_pc_d96c_crit_edge

dec_label_pc_da84.dec_label_pc_d96c_crit_edge:    ; preds = %dec_label_pc_da84
  %v1_d970.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d96c

dec_label_pc_daa0:                                ; preds = %dec_label_pc_da84, %dec_label_pc_d958
  %v0_daa0 = call i32 @function_1008c()
  %v1_daa0 = trunc i32 %v0_daa0 to i16
  store i32 %v3_d7d8, i32* %r1.global-to-local, align 4
  %v1_daa8 = load i32, i32* @r4, align 4
  %v9_daa8 = icmp eq i32 %v3_d7d8, %v1_daa8
  store i1 %v9_daa8, i1* %cpsr_z.global-to-local, align 1
  %v3_daac = load i32, i32* @r5, align 4
  %v4_daac = add i32 %v3_daac, 4
  %v5_daac = inttoptr i32 %v4_daac to i16*
  store i16 %v1_daa0, i16* %v5_daac, align 2
  br i1 %v9_daa8, label %dec_label_pc_dab4, label %dec_label_pc_daa0.dec_label_pc_d978_crit_edge

dec_label_pc_daa0.dec_label_pc_d978_crit_edge:    ; preds = %dec_label_pc_daa0
  %v1_d97c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d978

dec_label_pc_dab4:                                ; preds = %dec_label_pc_daa0, %dec_label_pc_d96c
  %v0_dab4 = call i32 @function_1008c()
  %v1_dab4 = trunc i32 %v0_dab4 to i16
  %v1_dabc = load i32, i32* @r4, align 4
  %v9_dabc = icmp eq i32 %v3_d7f8, %v1_dabc
  store i1 %v9_dabc, i1* %cpsr_z.global-to-local, align 1
  %v3_dac0 = load i32, i32* @r5, align 4
  %v4_dac0 = add i32 %v3_dac0, 20
  %v5_dac0 = inttoptr i32 %v4_dac0 to i16*
  store i16 %v1_dab4, i16* %v5_dac0, align 2
  br i1 %v9_dabc, label %dec_label_pc_dac8, label %dec_label_pc_d984

dec_label_pc_dac8:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_d978
  %v0_dac8 = call i32 @function_1008c()
  %v1_dac8 = trunc i32 %v0_dac8 to i16
  %v3_dacc = load i32, i32* @r6, align 4
  %v4_dacc = add i32 %v3_dacc, 2
  %v5_dacc = inttoptr i32 %v4_dacc to i16*
  store i16 %v1_dac8, i16* %v5_dacc, align 2
  br label %dec_label_pc_d984

dec_label_pc_dad4:                                ; preds = %dec_label_pc_d78c
  %v0_dad4 = load i32, i32* @fp, align 4
  store i32 %v0_dad4, i32* @r0, align 4
  %v1_dad8 = call i32 @function_1663c(i32 %v0_dad4)
  br label %dec_label_pc_dadc

dec_label_pc_dadc:                                ; preds = %dec_label_pc_d644, %dec_label_pc_dad4
  %v1_dae4 = phi i32 [ %v3_d77c, %dec_label_pc_d644 ], [ %v1_dad8, %dec_label_pc_dad4 ]
  store i32 %v3_d644, i32* %r4.global-to-local, align 4
  store i32 %v18_d644, i32* %sb.global-to-local, align 4
  store i32 %v27_d644, i32* %lr.global-to-local, align 4
  ret i32 %v1_dae4

; uselistorder directives
  uselistorder i32 %v1_da04, { 2, 0, 3, 1 }
  uselistorder i32 %v5_d9d0, { 1, 0 }
  uselistorder i32 %v0_d90c, { 1, 0 }
  uselistorder i1 %v3_da94, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d7f8, { 2, 1, 0 }
  uselistorder i32 %v3_d7f4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_d7d8, { 5, 4, 3, 2, 1, 6, 0 }
  uselistorder i32 %v0_d7cc, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_d7c0, { 2, 0, 1 }
  uselistorder i1 %v7_d7ac, { 1, 0 }
  uselistorder i1 %v7_d780, { 1, 0 }
  uselistorder i32 %v3_d77c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_d768, { 0, 2, 1 }
  uselistorder i32 %v2_d660, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 24, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 14, 15, 13, 16, 17, 18, 19 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dadc, { 1, 0 }
  uselistorder label %dec_label_pc_d990, { 1, 0 }
  uselistorder label %dec_label_pc_d984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_da14.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d83c, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @function_daec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_daec:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_daec = load i32, i32* @r4, align 4
  %v27_daec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_db08 = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_db0c = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_db08, i32* @fp, align 4
  %v0_db1c = load i32, i32* @r4, align 4
  %v4_db20 = inttoptr i32 %v0_db0c to i32*
  %v5_db20 = call i32 @function_a430(i32 %v0_db1c, i32* %v4_db20, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_db38 = load i32, i32* @r4, align 4
  %v0_db3c = load i32, i32* @r5, align 4
  %v5_db40 = trunc i32 %v5_db20 to i8
  %v6_db44 = inttoptr i32 %v0_db3c to i32*
  %v7_db44 = call i32 @function_a430(i32 %v0_db38, i32* %v6_db44, i32 3, i32 65535)
  %v0_db48 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_db54 = load i32, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_db5c = inttoptr i32 %v0_db48 to i32*
  %v6_db5c = call i32 @function_a430(i32 %v0_db54, i32* %v5_db5c, i32 4, i32 64)
  %v0_db68 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_db74 = load i32, i32* @r4, align 4
  %v6_db7c = inttoptr i32 %v0_db68 to i32*
  %v7_db7c = call i32 @function_a430(i32 %v0_db74, i32* %v6_db7c, i32 5, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_db90 = load i32, i32* @r4, align 4
  %v0_db94 = load i32, i32* @r5, align 4
  %v1_db98 = urem i32 %v7_db7c, 256
  store i32 %v1_db98, i32* @r7, align 4
  %v4_db9c = inttoptr i32 %v0_db94 to i32*
  %v5_db9c = call i32 @function_a430(i32 %v0_db90, i32* %v4_db9c, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_dbac = load i32, i32* @r5, align 4
  %v0_dbb4 = load i32, i32* @r4, align 4
  %v5_dbb8 = inttoptr i32 %v0_dbac to i32*
  %v6_dbb8 = call i32 @function_a430(i32 %v0_dbb4, i32* %v5_dbb8, i32 7, i32 27015)
  store i32 %v6_dbb8, i32* @r4, align 4
  %v1_dbc4 = call i32 @function_125b0(i32 29)
  %v3_dbd0 = call i32 @function_124ec(i32 29, i32* nonnull %stack_var_-48)
  store i32 %v3_dbd0, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_dbe4 = call i32 @function_15670(i32 2, i32 3, i32 17)
  store i32 %v3_dbe4, i32* @r0, align 4
  %v7_dbe8 = icmp eq i32 %v3_dbe4, -1
  store i1 %v7_dbe8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_dbe4, i32* @sb, align 4
  br i1 %v7_dbe8, label %dec_label_pc_dee8, label %dec_label_pc_dbf4

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_daec
  store i32 1, i32* %stack_var_-44, align 4
  %v6_dbfc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_dbfc, i32* %r3.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_dc10 = call i32 @function_15600(i32 %v3_dbe4, i32 0, i32 3, i32 %v6_dbfc, i32 ptrtoint (i32* @0 to i32))
  %v7_dc14 = icmp eq i32 %v5_dc10, -1
  store i1 %v7_dc14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dc14, label %dec_label_pc_dee0, label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dbf4
  %v0_dc2c = load i32, i32* @r4, align 4
  %v3_dc34 = urem i32 %v7_db44, 65536
  store i32 %v3_dc34, i32* %r3.global-to-local, align 4
  %v3_dc38 = urem i32 %v5_db9c, 65536
  store i32 %v3_dc38, i32* %r2.global-to-local, align 4
  %v3_dc3c = urem i32 %v0_dc2c, 65536
  %v0_dc40 = load i32, i32* @r8, align 4
  %v2_dc40 = icmp eq i32 %v0_dc40, 0
  store i1 %v2_dc40, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_dc40, label %dec_label_pc_de4c.preheader, label %dec_label_pc_dc58

dec_label_pc_de4c.preheader:                      ; preds = %dec_label_pc_dc60, %dec_label_pc_dc1c
  %v0_de60.ph = phi i32 [ 0, %dec_label_pc_dc1c ], [ %v1_dcdc, %dec_label_pc_dc60 ]
  %v3_dda0 = icmp eq i32 %v3_dc34, 65535
  br label %dec_label_pc_de4c

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc1c
  store i32 0, i32* @r4, align 4
  %v4_dd20 = sext i8 %v5_db40 to i32
  %sext = mul i32 %v6_db5c, 16777216
  %v4_dd48 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_dce8

dec_label_pc_dc60:                                ; preds = %dec_label_pc_dce8, %dec_label_pc_dd60
  %v2_dc64 = phi i32 [ %v0_dd58, %dec_label_pc_dce8 ], [ %v2_dc64.pre, %dec_label_pc_dd60 ]
  %v3_dc64 = add i32 %v2_dc64, 9
  %v4_dc64 = inttoptr i32 %v3_dc64 to i8*
  store i8 17, i8* %v4_dc64, align 1
  %v3_dc6c = load i32, i32* %stack_var_-44, align 4
  %v2_dc70 = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_dc70, i32* %r2.global-to-local, align 4
  %v5_dc78 = mul i32 %v3_dc6c, 24
  store i32 %v5_dc78, i32* %r3.global-to-local, align 4
  %v1_dc7c = load i32, i32* %r4.global-to-local, align 4
  %v2_dc7c = add i32 %v1_dc7c, 12
  %v3_dc7c = inttoptr i32 %v2_dc7c to i32*
  store i32 %v2_dc70, i32* %v3_dc7c, align 4
  %v0_dc80 = load i32, i32* %r3.global-to-local, align 4
  %v1_dc80 = load i32, i32* @sl, align 4
  %v2_dc80 = add i32 %v1_dc80, %v0_dc80
  store i32 %v2_dc80, i32* %r3.global-to-local, align 4
  %v1_dc84 = add i32 %v2_dc80, 16
  %v2_dc84 = inttoptr i32 %v1_dc84 to i32*
  %v3_dc84 = load i32, i32* %v2_dc84, align 4
  store i32 %v3_dc84, i32* %r2.global-to-local, align 4
  %v1_dc8c = load i32, i32* %r4.global-to-local, align 4
  %v2_dc8c = add i32 %v1_dc8c, 16
  %v3_dc8c = inttoptr i32 %v2_dc8c to i32*
  store i32 %v3_dc84, i32* %v3_dc8c, align 4
  %v1_dc90 = call i32 @function_15368(i32 %v3_dc38)
  %v2_dc90 = trunc i32 %v1_dc90 to i16
  %v3_dc94 = load i32, i32* %r4.global-to-local, align 4
  %v4_dc94 = add i32 %v3_dc94, 20
  %v5_dc94 = inttoptr i32 %v4_dc94 to i16*
  store i16 %v2_dc90, i16* %v5_dc94, align 2
  %v1_dc9c = call i32 @function_15368(i32 %v3_dc3c)
  %v2_dc9c = trunc i32 %v1_dc9c to i16
  %v3_dca0 = load i32, i32* %stack_var_-48, align 4
  %v1_dca4 = mul i32 %v3_dca0, 65536
  %v3_dca8 = add i32 %v1_dca4, 786432
  store i32 %v3_dca8, i32* %r3.global-to-local, align 4
  %v3_dcac = load i32, i32* @r5, align 4
  %v4_dcac = add i32 %v3_dcac, 2
  %v5_dcac = inttoptr i32 %v4_dcac to i16*
  store i16 %v2_dc9c, i16* %v5_dcac, align 2
  %v0_dcb0 = load i32, i32* %r3.global-to-local, align 4
  %v3_dcb0 = udiv i32 %v0_dcb0, 65536
  %v1_dcb4 = call i32 @function_15368(i32 %v3_dcb0)
  %v2_dcb4 = trunc i32 %v1_dcb4 to i16
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dcbc = load i32, i32* %r4.global-to-local, align 4
  %v2_dcbc = add i32 %v1_dcbc, 28
  %v3_dcbc = inttoptr i32 %v2_dcbc to i32*
  store i32 -1, i32* %v3_dcbc, align 4
  %v3_dcc0 = load i32, i32* @r5, align 4
  %v4_dcc0 = add i32 %v3_dcc0, 4
  %v5_dcc0 = inttoptr i32 %v4_dcc0 to i16*
  store i16 %v2_dcb4, i16* %v5_dcc0, align 2
  %v0_dcc4 = load i32, i32* @r6, align 4
  %v0_dcc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_dcc8 = add i32 %v0_dcc8, 32
  %v3_dccc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_dccc, i32* %r2.global-to-local, align 4
  %v3_dcd0 = call i32 @function_12eb0(i32 %v1_dcc8, i32 %v0_dcc4, i32 %v3_dccc)
  %v3_dcd4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dcd4, i32* %r3.global-to-local, align 4
  %v1_dcd8 = add i32 %v3_dcd4, 1
  store i32 %v1_dcd8, i32* @r4, align 4
  %v1_dcdc = load i32, i32* @r8, align 4
  %v9_dcdc = icmp eq i32 %v1_dcd8, %v1_dcdc
  store i1 %v9_dcdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dcd8, i32* %stack_var_-44, align 4
  %v6_dce4 = icmp slt i32 %v1_dcd8, %v1_dcdc
  br i1 %v6_dce4, label %dec_label_pc_dce8, label %dec_label_pc_de4c.preheader

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dc60, %dec_label_pc_dc58
  %v2_dcf0 = call i32 @function_13d28(i32 128, i32 1)
  %v3_dcf4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dcf4, i32* %r2.global-to-local, align 4
  %v1_dcf8 = load i32, i32* @fp, align 4
  %v2_dcf8 = load i32, i32* @r4, align 4
  %v5_dcf8 = mul i32 %v2_dcf8, 4
  %v6_dcf8 = add i32 %v5_dcf8, %v1_dcf8
  %v7_dcf8 = inttoptr i32 %v6_dcf8 to i32*
  store i32 %v2_dcf0, i32* %v7_dcf8, align 4
  %v0_dcfc = load i32, i32* @fp, align 4
  %v1_dcfc = load i32, i32* %r2.global-to-local, align 4
  %v4_dcfc = mul i32 %v1_dcfc, 4
  %v5_dcfc = add i32 %v4_dcfc, %v0_dcfc
  %v6_dcfc = inttoptr i32 %v5_dcfc to i32*
  %v7_dcfc = load i32, i32* %v6_dcfc, align 4
  store i32 %v7_dcfc, i32* %r4.global-to-local, align 4
  %v1_dd00 = inttoptr i32 %v7_dcfc to i8*
  %v2_dd00 = load i8, i8* %v1_dd00, align 1
  %tmp = urem i8 %v2_dd00, 16
  %v1_dd04 = zext i8 %tmp to i32
  %v1_dd08 = or i32 %v1_dd04, 64
  store i32 %v1_dd08, i32* %r3.global-to-local, align 4
  %v1_dd0c = trunc i32 %v1_dd08 to i8
  store i8 %v1_dd0c, i8* %v1_dd00, align 1
  %v0_dd10 = load i32, i32* %r4.global-to-local, align 4
  %v1_dd10 = inttoptr i32 %v0_dd10 to i8*
  %v2_dd10 = load i8, i8* %v1_dd10, align 1
  %v1_dd14 = and i8 %v2_dd10, -16
  %v1_dd18 = or i8 %v1_dd14, 5
  store i8 %v1_dd18, i8* %v1_dd10, align 1
  store i32 %v4_dd20, i32* %r2.global-to-local, align 4
  %v2_dd24 = load i32, i32* %r4.global-to-local, align 4
  %v3_dd24 = add i32 %v2_dd24, 1
  %v4_dd24 = inttoptr i32 %v3_dd24 to i8*
  store i8 %v5_db40, i8* %v4_dd24, align 1
  %v3_dd28 = load i32, i32* %stack_var_-48, align 4
  %v1_dd2c = add i32 %v3_dd28, 32
  %v3_dd34 = urem i32 %v1_dd2c, 65536
  %v1_dd38 = call i32 @function_15368(i32 %v3_dd34)
  %v2_dd38 = trunc i32 %v1_dd38 to i16
  %v3_dd3c = load i32, i32* %r4.global-to-local, align 4
  %v4_dd3c = add i32 %v3_dd3c, 2
  %v5_dd3c = inttoptr i32 %v4_dd3c to i16*
  store i16 %v2_dd38, i16* %v5_dd3c, align 2
  %v1_dd44 = call i32 @function_15368(i32 %v3_dc34)
  %v2_dd44 = trunc i32 %v1_dd44 to i16
  store i32 %v4_dd48, i32* %r3.global-to-local, align 4
  %v0_dd4c = load i32, i32* @r7, align 4
  %v2_dd4c = icmp eq i32 %v0_dd4c, 0
  store i1 %v2_dd4c, i1* %cpsr_z.global-to-local, align 1
  %v3_dd50 = load i32, i32* %r4.global-to-local, align 4
  %v4_dd50 = add i32 %v3_dd50, 4
  %v5_dd50 = inttoptr i32 %v4_dd50 to i16*
  store i16 %v2_dd44, i16* %v5_dd50, align 2
  %v0_dd54 = load i32, i32* %r3.global-to-local, align 4
  %v1_dd54 = trunc i32 %v0_dd54 to i8
  %v2_dd54 = load i32, i32* %r4.global-to-local, align 4
  %v3_dd54 = add i32 %v2_dd54, 8
  %v4_dd54 = inttoptr i32 %v3_dd54 to i8*
  store i8 %v1_dd54, i8* %v4_dd54, align 1
  %v0_dd58 = load i32, i32* %r4.global-to-local, align 4
  %v1_dd58 = add i32 %v0_dd58, 20
  store i32 %v1_dd58, i32* @r5, align 4
  %v0_dd5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd5c, label %dec_label_pc_dc60, label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dce8
  %v1_dd64 = call i32 @function_15368(i32 16384)
  %v2_dd64 = trunc i32 %v1_dd64 to i16
  %v3_dd68 = load i32, i32* %r4.global-to-local, align 4
  %v4_dd68 = add i32 %v3_dd68, 6
  %v5_dd68 = inttoptr i32 %v4_dd68 to i16*
  store i16 %v2_dd64, i16* %v5_dd68, align 2
  %v2_dc64.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_dc60

dec_label_pc_dd70:                                ; preds = %dec_label_pc_de4c
  br label %dec_label_pc_dd74

dec_label_pc_dd74:                                ; preds = %dec_label_pc_ddc0, %dec_label_pc_dd70
  %v1_dd84 = phi i32 [ %v1_de3c, %dec_label_pc_ddc0 ], [ 0, %dec_label_pc_dd70 ]
  %v5_dd78 = mul i32 %v1_dd84, 24
  %v1_dd7c = load i32, i32* @sl, align 4
  %v2_dd7c = add i32 %v1_dd7c, %v5_dd78
  store i32 %v2_dd7c, i32* %r3.global-to-local, align 4
  %v1_dd80 = add i32 %v2_dd7c, 20
  %v2_dd80 = inttoptr i32 %v1_dd80 to i8*
  %v3_dd80 = load i8, i8* %v2_dd80, align 1
  %v4_dd80 = zext i8 %v3_dd80 to i32
  store i32 %v4_dd80, i32* %r2.global-to-local, align 4
  %v0_dd84 = load i32, i32* @fp, align 4
  %v4_dd84 = mul i32 %v1_dd84, 4
  %v5_dd84 = add i32 %v0_dd84, %v4_dd84
  %v6_dd84 = inttoptr i32 %v5_dd84 to i32*
  %v7_dd84 = load i32, i32* %v6_dd84, align 4
  store i32 %v7_dd84, i32* @r5, align 4
  %v7_dd8c = icmp eq i8 %v3_dd80, 31
  store i1 %v7_dd8c, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_dd94 = add i32 %v7_dd84, 20
  store i32 %v1_dd94, i32* @r6, align 4
  %tmp33 = icmp ult i8 %v3_dd80, 32
  br i1 %tmp33, label %dec_label_pc_de70, label %dec_label_pc_dd9c

dec_label_pc_dd9c:                                ; preds = %dec_label_pc_dd74
  store i1 %v3_dda0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_dda0, label %dec_label_pc_deac, label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_de70.dec_label_pc_dda8_crit_edge, %dec_label_pc_dd9c
  %v1_ddac = phi i32 [ %v1_ddac.pre, %dec_label_pc_de70.dec_label_pc_dda8_crit_edge ], [ 65535, %dec_label_pc_dd9c ]
  store i32 %v3_dc38, i32* %r2.global-to-local, align 4
  %v9_ddac = icmp eq i32 %v3_dc38, %v1_ddac
  store i1 %v9_ddac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ddac, label %dec_label_pc_dec0, label %dec_label_pc_ddb4

dec_label_pc_ddb4:                                ; preds = %dec_label_pc_deac.dec_label_pc_ddb4_crit_edge, %dec_label_pc_dda8
  %v1_ddb8 = phi i32 [ %v1_ddb8.pre, %dec_label_pc_deac.dec_label_pc_ddb4_crit_edge ], [ %v1_ddac, %dec_label_pc_dda8 ]
  store i32 %v3_dc3c, i32* %r3.global-to-local, align 4
  %v9_ddb8 = icmp eq i32 %v3_dc3c, %v1_ddb8
  store i1 %v9_ddb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ddb8, label %dec_label_pc_ded4, label %dec_label_pc_ddc0

dec_label_pc_ddc0:                                ; preds = %dec_label_pc_dec0, %dec_label_pc_ddb4, %dec_label_pc_ded4
  %v2_ddc4 = load i32, i32* @r5, align 4
  %v3_ddc4 = add i32 %v2_ddc4, 10
  %v4_ddc4 = inttoptr i32 %v3_ddc4 to i16*
  store i16 0, i16* %v4_ddc4, align 2
  %v0_ddc8 = load i32, i32* @r5, align 4
  store i32 %v0_ddc8, i32* @r0, align 4
  %v2_ddd0 = call i32 @function_e5a4(i32 %v0_ddc8, i32 20)
  %v3_ddd0 = trunc i32 %v2_ddd0 to i16
  %v3_ddd4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_ddd4, i32* %r3.global-to-local, align 4
  %v3_ddd8 = load i32, i32* @r5, align 4
  %v4_ddd8 = add i32 %v3_ddd8, 10
  %v5_ddd8 = inttoptr i32 %v4_ddd8 to i16*
  store i16 %v3_ddd0, i16* %v5_ddd8, align 2
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_dde0 = load i32, i32* @r6, align 4
  %v3_dde0 = add i32 %v2_dde0, 6
  %v4_dde0 = inttoptr i32 %v3_dde0 to i16*
  store i16 0, i16* %v4_dde0, align 2
  %v0_dde4 = load i32, i32* @r6, align 4
  store i32 %v0_dde4, i32* @r1, align 4
  %v1_dde8 = add i32 %v0_dde4, 4
  %v2_dde8 = inttoptr i32 %v1_dde8 to i16*
  %v3_dde8 = load i16, i16* %v2_dde8, align 2
  %v4_dde8 = zext i16 %v3_dde8 to i32
  store i32 %v4_dde8, i32* %r2.global-to-local, align 4
  %v0_ddec = load i32, i32* %r3.global-to-local, align 4
  %v1_ddec = add i32 %v0_ddec, 12
  store i32 %v1_ddec, i32* %r3.global-to-local, align 4
  %v0_ddf0 = load i32, i32* @r5, align 4
  %v4_ddf4 = call i32 @function_e5f4(i32 %v0_ddf0, i32 %v0_dde4, i32 %v4_dde8, i32 %v1_ddec)
  %v5_ddf4 = trunc i32 %v4_ddf4 to i16
  %v3_ddf8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ddf8, i32* %r3.global-to-local, align 4
  %v3_ddfc = mul i32 %v3_ddf8, 32
  store i32 %v3_ddfc, i32* %lr.global-to-local, align 4
  %v3_de00 = load i32, i32* @r6, align 4
  %v4_de00 = add i32 %v3_de00, 6
  %v5_de00 = inttoptr i32 %v4_de00 to i16*
  store i16 %v5_ddf4, i16* %v5_de00, align 2
  %v0_de04 = load i32, i32* %lr.global-to-local, align 4
  %v1_de04 = load i32, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v1_de04, -8
  %v5_de04 = add i32 %v0_de04, %tmp34
  store i32 %v5_de04, i32* %lr.global-to-local, align 4
  %v0_de08 = load i32, i32* @r6, align 4
  %v1_de08 = add i32 %v0_de08, 2
  %v2_de08 = inttoptr i32 %v1_de08 to i16*
  %v3_de08 = load i16, i16* %v2_de08, align 2
  %v3_de0c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_de0c, i32* %r2.global-to-local, align 4
  %v1_de10 = load i32, i32* @sl, align 4
  %v2_de10 = add i32 %v1_de10, %v5_de04
  store i32 %v2_de10, i32* @lr, align 4
  %v3_de14 = add i32 %v2_de10, 2
  %v4_de14 = inttoptr i32 %v3_de14 to i16*
  store i16 %v3_de08, i16* %v4_de14, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_de20 = load i32, i32* @r5, align 4
  store i32 %v0_de20, i32* @r1, align 4
  %v0_de24 = load i32, i32* %r2.global-to-local, align 4
  %v1_de24 = add i32 %v0_de24, 32
  store i32 %v1_de24, i32* @r2, align 4
  %v0_de28 = load i32, i32* @sb, align 4
  store i32 %v0_de28, i32* @r0, align 4
  %v0_de34 = call i32 @function_155b4()
  %v3_de38 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_de38, i32* %r3.global-to-local, align 4
  %v1_de3c = add i32 %v3_de38, 1
  %v1_de40 = load i32, i32* @r8, align 4
  %v9_de40 = icmp eq i32 %v1_de3c, %v1_de40
  store i1 %v9_de40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_de3c, i32* %stack_var_-44, align 4
  %v5_de48 = icmp slt i32 %v1_de3c, %v1_de40
  br i1 %v5_de48, label %dec_label_pc_dd74, label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de5c, %dec_label_pc_ddc0, %dec_label_pc_de4c.preheader
  %v0_de60 = phi i32 [ %v0_de60.ph, %dec_label_pc_de4c.preheader ], [ 0, %dec_label_pc_de5c ], [ %v1_de40, %dec_label_pc_ddc0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_de50 = icmp eq i32 %v0_de60, 0
  store i1 %v2_de50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_de50, label %dec_label_pc_de5c, label %dec_label_pc_dd70

dec_label_pc_de5c:                                ; preds = %dec_label_pc_de4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_de4c

dec_label_pc_de70:                                ; preds = %dec_label_pc_dd74
  %v1_de70 = add i32 %v2_dd7c, 16
  %v2_de70 = inttoptr i32 %v1_de70 to i32*
  %v3_de70 = load i32, i32* %v2_de70, align 4
  %v1_de74 = call i32 @function_154ec(i32 %v3_de70)
  store i32 %v1_de74, i32* @r4, align 4
  %v0_de7c = call i32 @function_1008c()
  %v3_de80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_de80, i32* %r2.global-to-local, align 4
  %v5_de88 = mul i32 %v3_de80, 24
  %v1_de8c = load i32, i32* @sl, align 4
  %v2_de8c = add i32 %v1_de8c, %v5_de88
  store i32 %v2_de8c, i32* %r3.global-to-local, align 4
  %v1_de90 = add i32 %v2_de8c, 20
  %v2_de90 = inttoptr i32 %v1_de90 to i8*
  %v3_de90 = load i8, i8* %v2_de90, align 1
  %v4_de90 = zext i8 %v3_de90 to i32
  store i32 %v4_de90, i32* %r2.global-to-local, align 4
  %v0_de94 = load i32, i32* @r4, align 4
  %v7_de94 = lshr i32 %v0_de7c, %v4_de90
  %v8_de94 = add i32 %v7_de94, %v0_de94
  %v1_de98 = call i32 @function_15344(i32 %v8_de94)
  %v1_dea0 = load i32, i32* @r7, align 4
  %v9_dea0 = icmp eq i32 %v3_dc34, %v1_dea0
  store i1 %v9_dea0, i1* %cpsr_z.global-to-local, align 1
  %v1_dea4 = load i32, i32* @r5, align 4
  %v2_dea4 = add i32 %v1_dea4, 16
  %v3_dea4 = inttoptr i32 %v2_dea4 to i32*
  store i32 %v1_de98, i32* %v3_dea4, align 4
  br i1 %v9_dea0, label %dec_label_pc_deac, label %dec_label_pc_de70.dec_label_pc_dda8_crit_edge

dec_label_pc_de70.dec_label_pc_dda8_crit_edge:    ; preds = %dec_label_pc_de70
  %v1_ddac.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dda8

dec_label_pc_deac:                                ; preds = %dec_label_pc_de70, %dec_label_pc_dd9c
  %v0_deac = call i32 @function_1008c()
  %v1_deac = trunc i32 %v0_deac to i16
  store i32 %v3_dc38, i32* %r2.global-to-local, align 4
  %v1_deb4 = load i32, i32* @r7, align 4
  %v9_deb4 = icmp eq i32 %v3_dc38, %v1_deb4
  store i1 %v9_deb4, i1* %cpsr_z.global-to-local, align 1
  %v3_deb8 = load i32, i32* @r5, align 4
  %v4_deb8 = add i32 %v3_deb8, 4
  %v5_deb8 = inttoptr i32 %v4_deb8 to i16*
  store i16 %v1_deac, i16* %v5_deb8, align 2
  br i1 %v9_deb4, label %dec_label_pc_dec0, label %dec_label_pc_deac.dec_label_pc_ddb4_crit_edge

dec_label_pc_deac.dec_label_pc_ddb4_crit_edge:    ; preds = %dec_label_pc_deac
  %v1_ddb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ddb4

dec_label_pc_dec0:                                ; preds = %dec_label_pc_deac, %dec_label_pc_dda8
  %v0_dec0 = call i32 @function_1008c()
  %v1_dec0 = trunc i32 %v0_dec0 to i16
  store i32 %v3_dc3c, i32* %r3.global-to-local, align 4
  %v1_dec8 = load i32, i32* @r7, align 4
  %v9_dec8 = icmp eq i32 %v3_dc3c, %v1_dec8
  store i1 %v9_dec8, i1* %cpsr_z.global-to-local, align 1
  %v3_decc = load i32, i32* @r5, align 4
  %v4_decc = add i32 %v3_decc, 20
  %v5_decc = inttoptr i32 %v4_decc to i16*
  store i16 %v1_dec0, i16* %v5_decc, align 2
  br i1 %v9_dec8, label %dec_label_pc_ded4, label %dec_label_pc_ddc0

dec_label_pc_ded4:                                ; preds = %dec_label_pc_dec0, %dec_label_pc_ddb4
  %v0_ded4 = call i32 @function_1008c()
  %v1_ded4 = trunc i32 %v0_ded4 to i16
  %v3_ded8 = load i32, i32* @r6, align 4
  %v4_ded8 = add i32 %v3_ded8, 2
  %v5_ded8 = inttoptr i32 %v4_ded8 to i16*
  store i16 %v1_ded4, i16* %v5_ded8, align 2
  br label %dec_label_pc_ddc0

dec_label_pc_dee0:                                ; preds = %dec_label_pc_dbf4
  %v0_dee0 = load i32, i32* @sb, align 4
  store i32 %v0_dee0, i32* @r0, align 4
  %v1_dee4 = call i32 @function_1663c(i32 %v0_dee0)
  br label %dec_label_pc_dee8

dec_label_pc_dee8:                                ; preds = %dec_label_pc_daec, %dec_label_pc_dee0
  %v1_def0 = phi i32 [ %v3_dbe4, %dec_label_pc_daec ], [ %v1_dee4, %dec_label_pc_dee0 ]
  store i32 %v3_daec, i32* %r4.global-to-local, align 4
  store i32 %v27_daec, i32* %lr.global-to-local, align 4
  ret i32 %v1_def0

; uselistorder directives
  uselistorder i32 %v1_de3c, { 2, 0, 3, 1 }
  uselistorder i32 %v5_de04, { 1, 0 }
  uselistorder i32 %v0_dd58, { 1, 0 }
  uselistorder i32 %v1_dcdc, { 1, 2, 0 }
  uselistorder i32 %v1_dcd8, { 1, 0, 2, 3 }
  uselistorder i1 %v3_dda0, { 1, 0 }
  uselistorder i32 %v3_dc34, { 0, 1, 3, 2 }
  uselistorder i1 %v7_dc14, { 1, 0 }
  uselistorder i1 %v7_dbe8, { 1, 0 }
  uselistorder i32 %v3_dbe4, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v5_db40, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 11, 12, 10, 13, 14, 15 }
  uselistorder i8 -16, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dee8, { 1, 0 }
  uselistorder label %dec_label_pc_ddc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dc60, { 1, 0 }
}

define i32 @function_def8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_def8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v3_def8 = load i32, i32* @r4, align 4
  %v6_def8 = load i32, i32* @r5, align 4
  %v9_def8 = load i32, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_df18 = call i32 @function_13d28(i32 %arg1, i32 4)
  %v0_df1c = load i32, i32* @r5, align 4
  store i32 %v0_df1c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_df28 = load i32, i32* @r4, align 4
  store i32 %v0_df28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_df30 = inttoptr i32 %v0_df1c to i32*
  %v6_df30 = call i32 @function_a430(i32 %v0_df28, i32* %v5_df30, i32 2, i32 0)
  %v1_df3c = urem i32 %v6_df30, 256
  store i32 %v1_df3c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_df48 = load i32, i32* @r4, align 4
  store i32 %v0_df48, i32* %r0.global-to-local, align 4
  %v0_df4c = load i32, i32* @r5, align 4
  store i32 %v0_df4c, i32* %r1.global-to-local, align 4
  %v5_df50 = trunc i32 %v6_df30 to i8
  %v6_df54 = inttoptr i32 %v0_df4c to i32*
  %v7_df54 = call i32 @function_a430(i32 %v0_df48, i32* %v6_df54, i32 3, i32 65535)
  %v0_df58 = load i32, i32* @r5, align 4
  store i32 %v0_df58, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_df64 = load i32, i32* @r4, align 4
  store i32 %v0_df64, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_df6c = inttoptr i32 %v0_df58 to i32*
  %v6_df6c = call i32 @function_a430(i32 %v0_df64, i32* %v5_df6c, i32 4, i32 64)
  %v1_df74 = urem i32 %v6_df6c, 256
  store i32 %v1_df74, i32* %ip.global-to-local, align 4
  %v0_df78 = load i32, i32* @r5, align 4
  store i32 %v0_df78, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_df84 = load i32, i32* @r4, align 4
  store i32 %v0_df84, i32* %r0.global-to-local, align 4
  %v6_df8c = inttoptr i32 %v0_df78 to i32*
  %v7_df8c = call i32 @function_a430(i32 %v0_df84, i32* %v6_df8c, i32 5, i32 0)
  %v1_df98 = urem i32 %v7_df8c, 256
  store i32 %v1_df98, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_dfa4 = load i32, i32* @r4, align 4
  store i32 %v0_dfa4, i32* %r0.global-to-local, align 4
  %v0_dfa8 = load i32, i32* @r5, align 4
  store i32 %v0_dfa8, i32* %r1.global-to-local, align 4
  %v5_dfb0 = inttoptr i32 %v0_dfa8 to i32*
  %v6_dfb0 = call i32 @function_a430(i32 %v0_dfa4, i32* %v5_dfb0, i32 6, i32 65535)
  %v0_dfb4 = load i32, i32* @r5, align 4
  store i32 %v0_dfb4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_dfc0 = load i32, i32* @r4, align 4
  store i32 %v0_dfc0, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_dfc8 = inttoptr i32 %v0_dfb4 to i32*
  %v6_dfc8 = call i32 @function_a430(i32 %v0_dfc0, i32* %v5_dfc8, i32 7, i32 53)
  %v0_dfd0 = load i32, i32* @r5, align 4
  store i32 %v0_dfd0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v6_dfc8, i32* @fp, align 4
  %v0_dfe0 = load i32, i32* @r4, align 4
  store i32 %v0_dfe0, i32* %r0.global-to-local, align 4
  %v4_dfe4 = inttoptr i32 %v0_dfd0 to i32*
  %v5_dfe4 = call i32 @function_a430(i32 %v0_dfe0, i32* %v4_dfe4, i32 9, i32 65535)
  %v0_dfe8 = load i32, i32* @r5, align 4
  store i32 %v0_dfe8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_dfe4, i32* @sb, align 4
  %v0_dff8 = load i32, i32* @r4, align 4
  store i32 %v0_dff8, i32* %r0.global-to-local, align 4
  %v4_dffc = inttoptr i32 %v0_dfe8 to i32*
  %v5_dffc = call i32 @function_a430(i32 %v0_dff8, i32* %v4_dffc, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e008 = load i32, i32* @r5, align 4
  store i32 %v0_e008, i32* %r1.global-to-local, align 4
  store i32 %v5_dffc, i32* @sl, align 4
  %v0_e010 = load i32, i32* @r4, align 4
  store i32 %v0_e010, i32* %r0.global-to-local, align 4
  %v5_e014 = inttoptr i32 %v0_e008 to i32*
  %v6_e014 = call i32 @function_9f04(i32 %v0_e010, i32* %v5_e014, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_e020 = call i32 @function_125b0(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_e02c = call i32 @function_124ec(i32 30, i32* null)
  store i32 %v3_e02c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e034 = call i32 @function_13bfc(i32 %v3_e02c, i32 0)
  store i32 %v2_e034, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_e040 = call i32 @function_12510(i32 30)
  store i32 %v1_e040, i32* %r0.global-to-local, align 4
  %v0_e044 = load i32, i32* @r4, align 4
  %v1_e044 = icmp slt i32 %v0_e044, 0
  %v2_e044 = icmp eq i32 %v0_e044, 0
  store i1 %v2_e044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_e044, label %dec_label_pc_e4f8, label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_def8
  %v2_e050 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_e050, i32* @r7, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_e050, i32* %r1.global-to-local, align 4
  store i32 %v0_e044, i32* %r0.global-to-local, align 4
  %v3_e060 = call i32 @function_166b8(i32 %v0_e044, i32 %v2_e050, i32 2048)
  store i32 %v3_e060, i32* @r5, align 4
  %v0_e068 = load i32, i32* @r4, align 4
  store i32 %v0_e068, i32* @r0, align 4
  %v1_e06c = call i32 @function_1663c(i32 %v0_e068)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_e074 = call i32 @function_125b0(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_e080 = call i32 @function_124ec(i32 31, i32* null)
  %v0_e084 = load i32, i32* @r5, align 4
  store i32 %v0_e084, i32* @r1, align 4
  store i32 %v3_e080, i32* %r2.global-to-local, align 4
  store i32 %v2_e050, i32* %r0.global-to-local, align 4
  %v3_e090 = bitcast i32* %stack_var_-2124 to i8*
  %v4_e090 = call i32 @function_1319c(i8* %v3_e090, i32 %v0_e084, i32 %v3_e080)
  store i32 %v4_e090, i32* @r6, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_e09c = call i32 @function_12510(i32 31)
  store i32 %v1_e09c, i32* %r0.global-to-local, align 4
  %v0_e0a0 = load i32, i32* @r6, align 4
  %v7_e0a0 = icmp eq i32 %v0_e0a0, -1
  store i1 %v7_e0a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0a0, label %dec_label_pc_e4f8, label %dec_label_pc_e0a8

dec_label_pc_e0a8:                                ; preds = %dec_label_pc_e04c
  %v0_e0a8 = load i32, i32* @r5, align 4
  %v9_e0a8 = icmp eq i32 %v0_e0a8, %v0_e0a0
  store i1 %v9_e0a8, i1* %cpsr_z.global-to-local, align 1
  %v7_e0ac = icmp sgt i32 %v0_e0a8, %v0_e0a0
  br i1 %v7_e0ac, label %dec_label_pc_e0b0, label %dec_label_pc_e4f8

dec_label_pc_e0b0:                                ; preds = %dec_label_pc_e0a8
  %v0_e0b0 = load i32, i32* @r7, align 4
  %v2_e0b0 = add i32 %v0_e0b0, %v0_e0a0
  store i32 %v2_e0b0, i32* %r1.global-to-local, align 4
  store i32 %v0_e0a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_e0dc = add i32 %v0_e0a8, -1
  br label %dec_label_pc_e0d4

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e0fc, %bb79
  %v9_e0c0 = icmp eq i32 %v1_e0dc, %v0_e0c8
  store i1 %v9_e0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0c0, label %dec_label_pc_e10c, label %dec_label_pc_e0c8

dec_label_pc_e0c8:                                ; preds = %dec_label_pc_e0ec, %dec_label_pc_e0c0, %bb
  %v0_e0f819 = phi i32 [ %v0_e0f8, %dec_label_pc_e0ec ], [ %v0_e0f820, %dec_label_pc_e0c0 ], [ %v0_e0f8, %bb ]
  %v0_e0d815 = phi i32 [ 0, %dec_label_pc_e0ec ], [ %v0_e0d816, %dec_label_pc_e0c0 ], [ 0, %bb ]
  %v1_e0c8 = add i32 %v0_e0c8, 1
  store i32 %v1_e0c8, i32* %r2.global-to-local, align 4
  %v9_e0cc = icmp eq i32 %v1_e0c8, %v0_e0a8
  store i1 %v9_e0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0cc, label %dec_label_pc_e4f8, label %dec_label_pc_e0d4

dec_label_pc_e0d4:                                ; preds = %dec_label_pc_e0c8, %dec_label_pc_e0b0
  %v0_e0c8 = phi i32 [ %v1_e0c8, %dec_label_pc_e0c8 ], [ %v0_e0a0, %dec_label_pc_e0b0 ]
  %v0_e0f8 = phi i32 [ %v0_e0f819, %dec_label_pc_e0c8 ], [ 0, %dec_label_pc_e0b0 ]
  %v0_e0d8 = phi i32 [ %v0_e0d815, %dec_label_pc_e0c8 ], [ 0, %dec_label_pc_e0b0 ]
  %v0_e0e0 = phi i32 [ %v1_e0e0, %dec_label_pc_e0c8 ], [ %v2_e0b0, %dec_label_pc_e0b0 ]
  %v1_e0d4 = inttoptr i32 %v0_e0e0 to i8*
  %v2_e0d4 = load i8, i8* %v1_e0d4, align 1
  %v3_e0d4 = zext i8 %v2_e0d4 to i32
  store i32 %v3_e0d4, i32* %r3.global-to-local, align 4
  %v2_e0d8 = icmp eq i32 %v0_e0d8, 0
  store i1 %v2_e0d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e0dc, i32* @r4, align 4
  %v1_e0e0 = add i32 %v0_e0e0, 1
  store i32 %v1_e0e0, i32* %r1.global-to-local, align 4
  %v1_e0e4 = add nsw i32 %v3_e0d4, -48
  store i32 %v1_e0e4, i32* %r0.global-to-local, align 4
  br i1 %v2_e0d8, label %dec_label_pc_e0ec, label %dec_label_pc_e0fc

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0d4
  %v7_e0ec = icmp eq i8 %v2_e0d4, 9
  store i1 %v7_e0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0ec, label %dec_label_pc_e0c8, label %bb

bb:                                               ; preds = %dec_label_pc_e0ec
  %v8_e0f0 = icmp eq i8 %v2_e0d4, 32
  store i1 %v8_e0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e0f0, label %dec_label_pc_e0c8, label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %bb
  %v1_e0f8 = add i32 %v0_e0f8, 1
  store i32 %v1_e0f8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e0fc

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0d4, %dec_label_pc_e0f8
  %v0_e0f820 = phi i32 [ %v0_e0f8, %dec_label_pc_e0d4 ], [ %v1_e0f8, %dec_label_pc_e0f8 ]
  %v0_e0d816 = phi i32 [ %v0_e0d8, %dec_label_pc_e0d4 ], [ %v1_e0f8, %dec_label_pc_e0f8 ]
  %v7_e0fc = icmp eq i8 %v2_e0d4, 46
  store i1 %v7_e0fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0fc, label %dec_label_pc_e0c0, label %bb79

bb79:                                             ; preds = %dec_label_pc_e0fc
  %v8_e100 = icmp eq i32 %v1_e0e4, 9
  store i1 %v8_e100, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_e0e4, 10
  br i1 %tmp, label %dec_label_pc_e0c0, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %bb79
  store i32 %v0_e0c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %dec_label_pc_e0c0, %dec_label_pc_e108
  %v0_e0c890 = phi i32 [ %v0_e0c8, %dec_label_pc_e108 ], [ %v1_e0dc, %dec_label_pc_e0c0 ]
  %v2_e110 = sub i32 %v0_e0c890, %v0_e0a0
  store i32 %v2_e110, i32* @r4, align 4
  %v2_e114 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_e114, i32* @r5, align 4
  store i32 %v2_e0b0, i32* %r1.global-to-local, align 4
  store i32 %v2_e114, i32* %r0.global-to-local, align 4
  store i32 %v2_e110, i32* %r2.global-to-local, align 4
  %v3_e124 = call i32 @function_12eb0(i32 %v2_e114, i32 %v2_e0b0, i32 %v2_e110)
  %v2_e128 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_e128, i32* %r1.global-to-local, align 4
  %v1_e12c = load i32, i32* @r4, align 4
  %v2_e12c = add i32 %v1_e12c, %v2_e128
  store i32 %v2_e12c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_e114, i32* @r0, align 4
  %v3_e138 = add i32 %v2_e12c, -36
  %v4_e138 = inttoptr i32 %v3_e138 to i8*
  store i8 0, i8* %v4_e138, align 1
  %v1_e13c = call i32 @function_1537c(i32 %v2_e114)
  store i32 %v1_e13c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e1443:                               ; preds = %dec_label_pc_e4f8
  unreachable

dec_label_pc_e144:                                ; preds = %dec_label_pc_e584, %dec_label_pc_e574, %dec_label_pc_e55c, %dec_label_pc_e544, %dec_label_pc_e10c
  %stack_var_-2172.0 = phi i32 [ %v1_e550, %dec_label_pc_e544 ], [ %v1_e568, %dec_label_pc_e55c ], [ %v1_e578, %dec_label_pc_e574 ], [ %v1_e590, %dec_label_pc_e584 ], [ %v1_e13c, %dec_label_pc_e10c ]
  store i32 %v6_e014, i32* %r2.global-to-local, align 4
  %v2_e148 = icmp eq i32 %v6_e014, 0
  store i1 %v2_e148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e148, label %dec_label_pc_e534, label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e144
  store i32 %v6_e014, i32* %r0.global-to-local, align 4
  %v1_e154 = inttoptr i32 %v6_e014 to i8*
  %v2_e154 = call i32 @function_12e40(i8* %v1_e154)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_e154, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_e168 = call i32 @function_15670(i32 2, i32 3, i32 17)
  store i32 %v3_e168, i32* @r0, align 4
  %v7_e16c = icmp eq i32 %v3_e168, -1
  store i1 %v7_e16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e16c, label %dec_label_pc_e534, label %dec_label_pc_e178

dec_label_pc_e178:                                ; preds = %dec_label_pc_e150
  store i32 1, i32* %stack_var_-44, align 4
  %v6_e180 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_e180, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_e194 = call i32 @function_15600(i32 %v3_e168, i32 0, i32 3, i32 %v6_e180, i32 4)
  store i32 %v5_e194, i32* %r0.global-to-local, align 4
  %v7_e198 = icmp eq i32 %v5_e194, -1
  store i1 %v7_e198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e198, label %dec_label_pc_e52c, label %dec_label_pc_e1a0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_e178
  %v0_e1ac = load i32, i32* @sb, align 4
  %v0_e1b4 = load i32, i32* @fp, align 4
  store i32 0, i32* @ip, align 4
  %v3_e1bc = urem i32 %v7_df54, 65536
  store i32 %v3_e1bc, i32* %r3.global-to-local, align 4
  %v3_e1c0 = urem i32 %v6_dfb0, 65536
  store i32 %v3_e1c0, i32* %r2.global-to-local, align 4
  %v3_e1c4 = urem i32 %v0_e1b4, 65536
  store i32 %v3_e1c4, i32* %r1.global-to-local, align 4
  %v3_e1c8 = urem i32 %v0_e1ac, 65536
  store i32 %v3_e1c8, i32* %r0.global-to-local, align 4
  %v0_e1cc = load i32, i32* @r8, align 4
  %v2_e1cc = icmp eq i32 %v0_e1cc, 0
  store i1 %v2_e1cc, i1* %cpsr_z.global-to-local, align 1
  %v0_e1e0 = load i32, i32* @sl, align 4
  %v1_e1e0 = urem i32 %v0_e1e0, 256
  store i32 %v1_e1e0, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_e1cc, label %dec_label_pc_e390, label %dec_label_pc_e1ec

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_e1a0
  %v0_e1ec = load i32, i32* @r6, align 4
  %v2_e1ec = add i32 %v0_e1ec, %v1_e1e0
  %v3_e1f0 = mul i32 %v2_e1ec, 65536
  %v1_e1f4 = add i32 %v3_e1f0, 1769472
  %v3_e1f8 = udiv i32 %v1_e1f4, 65536
  store i32 %v3_e1f8, i32* @sl, align 4
  %v1_e1fc = add i32 %v0_e1ec, 1
  store i32 %v1_e1fc, i32* %r2.global-to-local, align 4
  %v1_e200 = add i32 %v3_e1f0, 3080192
  store i32 %v1_e200, i32* %r3.global-to-local, align 4
  %v3_e208 = udiv i32 %v1_e200, 65536
  store i32 %v3_e208, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v4_e250 = sext i8 %v5_df50 to i32
  %v2_e274 = icmp eq i32 %v1_df98, 0
  %sext = mul i32 %v6_df6c, 16777216
  %v3_e270 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e358, %dec_label_pc_e1ec
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_e218 = call i32 @function_13d28(i32 600, i32 1)
  store i32 %v2_e218, i32* %r0.global-to-local, align 4
  store i32 %v2_df18, i32* %r1.global-to-local, align 4
  %v2_e224 = load i32, i32* @r5, align 4
  %v5_e224 = mul i32 %v2_e224, 4
  %v6_e224 = add i32 %v5_e224, %v2_df18
  %v7_e224 = inttoptr i32 %v6_e224 to i32*
  store i32 %v2_e218, i32* %v7_e224, align 4
  %v3_e228 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e228, i32* %r3.global-to-local, align 4
  %v0_e22c = load i32, i32* %r1.global-to-local, align 4
  %v4_e22c = mul i32 %v3_e228, 4
  %v5_e22c = add i32 %v0_e22c, %v4_e22c
  %v6_e22c = inttoptr i32 %v5_e22c to i32*
  %v7_e22c = load i32, i32* %v6_e22c, align 4
  store i32 %v7_e22c, i32* %r5.global-to-local, align 4
  %v1_e230 = inttoptr i32 %v7_e22c to i8*
  %v2_e230 = load i8, i8* %v1_e230, align 1
  %tmp94 = urem i8 %v2_e230, 16
  %v1_e234 = zext i8 %tmp94 to i32
  %v1_e238 = or i32 %v1_e234, 64
  store i32 %v1_e238, i32* %r2.global-to-local, align 4
  %v1_e23c = trunc i32 %v1_e238 to i8
  store i8 %v1_e23c, i8* %v1_e230, align 1
  %v0_e240 = load i32, i32* %r5.global-to-local, align 4
  %v1_e240 = inttoptr i32 %v0_e240 to i8*
  %v2_e240 = load i8, i8* %v1_e240, align 1
  %v3_e240 = zext i8 %v2_e240 to i32
  %v1_e244 = and i32 %v3_e240, 240
  %v1_e248 = or i32 %v1_e244, 5
  store i32 %v1_e248, i32* %r3.global-to-local, align 4
  %v1_e24c = trunc i32 %v1_e248 to i8
  store i8 %v1_e24c, i8* %v1_e240, align 1
  store i32 %v4_e250, i32* %r2.global-to-local, align 4
  %v0_e254 = load i32, i32* @sb, align 4
  store i32 %v0_e254, i32* %r0.global-to-local, align 4
  %v2_e258 = load i32, i32* %r5.global-to-local, align 4
  %v3_e258 = add i32 %v2_e258, 1
  %v4_e258 = inttoptr i32 %v3_e258 to i8*
  store i8 %v5_df50, i8* %v4_e258, align 1
  %v1_e25c = call i32 @function_15368(i32 %v0_e254)
  %v2_e25c = trunc i32 %v1_e25c to i16
  %v3_e260 = load i32, i32* %r5.global-to-local, align 4
  %v4_e260 = add i32 %v3_e260, 2
  %v5_e260 = inttoptr i32 %v4_e260 to i16*
  store i16 %v2_e25c, i16* %v5_e260, align 2
  store i32 %v3_e1bc, i32* %r0.global-to-local, align 4
  %v1_e268 = call i32 @function_15368(i32 %v3_e1bc)
  %v2_e268 = trunc i32 %v1_e268 to i16
  store i32 %v1_e268, i32* %r0.global-to-local, align 4
  store i32 %v3_e270, i32* %r1.global-to-local, align 4
  store i32 %v1_df98, i32* %r3.global-to-local, align 4
  store i1 %v2_e274, i1* %cpsr_z.global-to-local, align 1
  %v3_e278 = load i32, i32* %r5.global-to-local, align 4
  %v4_e278 = add i32 %v3_e278, 4
  %v5_e278 = inttoptr i32 %v4_e278 to i16*
  store i16 %v2_e268, i16* %v5_e278, align 2
  %v0_e27c = load i32, i32* %r1.global-to-local, align 4
  %v1_e27c = trunc i32 %v0_e27c to i8
  %v2_e27c = load i32, i32* %r5.global-to-local, align 4
  %v3_e27c = add i32 %v2_e27c, 8
  %v4_e27c = inttoptr i32 %v3_e27c to i8*
  store i8 %v1_e27c, i8* %v4_e27c, align 1
  %v0_e280 = load i32, i32* %r5.global-to-local, align 4
  %v1_e280 = add i32 %v0_e280, 20
  store i32 %v1_e280, i32* %r4.global-to-local, align 4
  %v1_e284 = add i32 %v0_e280, 28
  store i32 %v1_e284, i32* @r7, align 4
  %v0_e288 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e288, label %dec_label_pc_e28c, label %dec_label_pc_e51c

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e210, %dec_label_pc_e51c
  %v2_e290 = phi i32 [ %v0_e280, %dec_label_pc_e210 ], [ %v2_e290.pre, %dec_label_pc_e51c ]
  %v3_e290 = add i32 %v2_e290, 9
  %v4_e290 = inttoptr i32 %v3_e290 to i8*
  store i8 17, i8* %v4_e290, align 1
  store i32 ptrtoint (i32* @global_var_2365c.93 to i32), i32* %r3.global-to-local, align 4
  store i32 %stack_var_-2172.0, i32* %r1.global-to-local, align 4
  %v2_e29c = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_e29c, i32* %r2.global-to-local, align 4
  store i32 %v3_e1c0, i32* %r0.global-to-local, align 4
  %v1_e2a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e2a4 = add i32 %v1_e2a4, 12
  %v3_e2a4 = inttoptr i32 %v2_e2a4 to i32*
  store i32 %v2_e29c, i32* %v3_e2a4, align 4
  %v0_e2a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e2a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_e2a8 = add i32 %v1_e2a8, 16
  %v3_e2a8 = inttoptr i32 %v2_e2a8 to i32*
  store i32 %v0_e2a8, i32* %v3_e2a8, align 4
  %v1_e2ac = call i32 @function_15368(i32 %v3_e1c0)
  %v2_e2ac = trunc i32 %v1_e2ac to i16
  %v3_e2b0 = load i32, i32* %r5.global-to-local, align 4
  %v4_e2b0 = add i32 %v3_e2b0, 20
  %v5_e2b0 = inttoptr i32 %v4_e2b0 to i16*
  store i16 %v2_e2ac, i16* %v5_e2b0, align 2
  store i32 %v3_e1c4, i32* %r0.global-to-local, align 4
  %v1_e2b8 = call i32 @function_15368(i32 %v3_e1c4)
  %v2_e2b8 = trunc i32 %v1_e2b8 to i16
  %v3_e2bc = load i32, i32* %r4.global-to-local, align 4
  %v4_e2bc = add i32 %v3_e2bc, 2
  %v5_e2bc = inttoptr i32 %v4_e2bc to i16*
  store i16 %v2_e2b8, i16* %v5_e2bc, align 2
  %v0_e2c0 = load i32, i32* @sl, align 4
  store i32 %v0_e2c0, i32* %r0.global-to-local, align 4
  %v1_e2c4 = call i32 @function_15368(i32 %v0_e2c0)
  %v2_e2c4 = trunc i32 %v1_e2c4 to i16
  %v3_e2c8 = load i32, i32* %r4.global-to-local, align 4
  %v4_e2c8 = add i32 %v3_e2c8, 4
  %v5_e2c8 = inttoptr i32 %v4_e2c8 to i16*
  store i16 %v2_e2c4, i16* %v5_e2c8, align 2
  store i32 %v3_e1c8, i32* %r0.global-to-local, align 4
  %v1_e2d0 = call i32 @function_15368(i32 %v3_e1c8)
  %v2_e2d0 = trunc i32 %v1_e2d0 to i16
  %v3_e2d4 = load i32, i32* %r5.global-to-local, align 4
  %v4_e2d4 = add i32 %v3_e2d4, 28
  %v5_e2d4 = inttoptr i32 %v4_e2d4 to i16*
  store i16 %v2_e2d0, i16* %v5_e2d4, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_e2dc = call i32 @function_15368(i32 256)
  %v2_e2dc = trunc i32 %v1_e2dc to i16
  %v3_e2e0 = load i32, i32* @r7, align 4
  %v4_e2e0 = add i32 %v3_e2e0, 2
  %v5_e2e0 = inttoptr i32 %v4_e2e0 to i16*
  store i16 %v2_e2dc, i16* %v5_e2e0, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e2e8 = call i32 @function_15368(i32 1)
  %v2_e2e8 = trunc i32 %v1_e2e8 to i16
  %v0_e2ec = load i32, i32* %r5.global-to-local, align 4
  %v1_e2ec = add i32 %v0_e2ec, 41
  store i32 %v1_e2ec, i32* %r3.global-to-local, align 4
  %v1_e2f0 = load i32, i32* @fp, align 4
  %v2_e2f0 = add i32 %v1_e2f0, %v1_e2ec
  store i32 %v2_e2f0, i32* %r4.global-to-local, align 4
  %v3_e2f4 = load i32, i32* @r7, align 4
  %v4_e2f4 = add i32 %v3_e2f4, 4
  %v5_e2f4 = inttoptr i32 %v4_e2f4 to i16*
  store i16 %v2_e2e8, i16* %v5_e2f4, align 2
  %v0_e2f8 = load i32, i32* @fp, align 4
  %v1_e2f8 = trunc i32 %v0_e2f8 to i8
  %v2_e2f8 = load i32, i32* %r5.global-to-local, align 4
  %v3_e2f8 = add i32 %v2_e2f8, 40
  %v4_e2f8 = inttoptr i32 %v3_e2f8 to i8*
  store i8 %v1_e2f8, i8* %v4_e2f8, align 1
  %v0_e2fc = load i32, i32* %r4.global-to-local, align 4
  %v1_e2fc = add i32 %v0_e2fc, 1
  store i32 %v1_e2fc, i32* %r0.global-to-local, align 4
  store i32 %v6_e014, i32* %r1.global-to-local, align 4
  store i32 %v1_e1fc, i32* %r2.global-to-local, align 4
  %v3_e308 = call i32 @function_12eb0(i32 %v1_e2fc, i32 %v6_e014, i32 %v1_e1fc)
  store i32 %v3_e308, i32* %r0.global-to-local, align 4
  %v0_e30c = load i32, i32* @r6, align 4
  %v2_e30c = icmp eq i32 %v0_e30c, 0
  store i1 %v2_e30c, i1* %cpsr_z.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_e30c, 1
  br i1 %tmp80, label %bb81, label %dec_label_pc_e31c

bb81:                                             ; preds = %dec_label_pc_e28c
  %v5_e310 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_e310, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_e358

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e28c
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_e320 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e320, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %.thread10, %dec_label_pc_e31c
  %v0_e338 = phi i32 [ %storemerge, %.thread10 ], [ 0, %dec_label_pc_e31c ]
  %v0_e33c = phi i32 [ %v0_e350, %.thread10 ], [ 0, %dec_label_pc_e31c ]
  store i32 %v6_e014, i32* %r2.global-to-local, align 4
  %v2_e32c = add i32 %v0_e33c, %v6_e014
  %v3_e32c = inttoptr i32 %v2_e32c to i8*
  %v4_e32c = load i8, i8* %v3_e32c, align 1
  %v6_e32c = zext i8 %v4_e32c to i32
  store i32 %v6_e32c, i32* %r3.global-to-local, align 4
  %v7_e330 = icmp eq i8 %v4_e32c, 46
  store i1 %v7_e330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e330, label %bb82, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_e328
  %v1_e3386 = add nsw i32 %v0_e338, 1
  store i32 %v1_e3386, i32* %r2.global-to-local, align 4
  %v1_e33c8 = add i32 %v0_e33c, 1
  store i32 %v1_e33c8, i32* %r1.global-to-local, align 4
  br label %bb83

bb82:                                             ; preds = %dec_label_pc_e328
  %v1_e334 = load i32, i32* %r4.global-to-local, align 4
  %v3_e334 = add i32 %v1_e334, %v0_e33c
  store i32 %v3_e334, i32* %r3.global-to-local, align 4
  %v1_e338 = add nsw i32 %v0_e338, 1
  store i32 %v1_e338, i32* %r2.global-to-local, align 4
  %v1_e33c = add i32 %v0_e33c, 1
  store i32 %v1_e33c, i32* %r1.global-to-local, align 4
  %v2_e340 = trunc i32 %v0_e338 to i8
  %v3_e340 = load i32, i32* %r0.global-to-local, align 4
  %v4_e340 = inttoptr i32 %v3_e340 to i8*
  store i8 %v2_e340, i8* %v4_e340, align 1
  %v0_e344.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e344.pre, label %bb84, label %bb82.bb83_crit_edge

bb82.bb83_crit_edge:                              ; preds = %bb82
  %v1_e344.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %bb82.bb83_crit_edge, %.thread45
  %v1_e344 = phi i32 [ %v1_e344.pre, %bb82.bb83_crit_edge ], [ %v1_e3386, %.thread45 ]
  %v2_e344 = urem i32 %v1_e344, 256
  br label %.thread10

bb84:                                             ; preds = %bb82
  %v1_e348 = load i32, i32* %r3.global-to-local, align 4
  %v2_e348 = add i32 %v1_e348, 1
  store i32 %v2_e348, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %bb83, %bb84
  %storemerge = phi i32 [ %v2_e344, %bb83 ], [ 0, %bb84 ]
  store i32 %storemerge, i32* @ip, align 4
  %v0_e350 = load i32, i32* %r1.global-to-local, align 4
  %v1_e350 = load i32, i32* @r6, align 4
  %v9_e350 = icmp eq i32 %v0_e350, %v1_e350
  store i1 %v9_e350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e350, label %dec_label_pc_e358.loopexit, label %dec_label_pc_e328

dec_label_pc_e358.loopexit:                       ; preds = %.thread10
  %v2_e358.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_e358

dec_label_pc_e358:                                ; preds = %bb81, %dec_label_pc_e358.loopexit
  %v0_e358.off0 = phi i8 [ %extract.t, %dec_label_pc_e358.loopexit ], [ 0, %bb81 ]
  %v2_e358 = phi i32 [ %v2_e358.pre, %dec_label_pc_e358.loopexit ], [ %v5_e310, %bb81 ]
  %v3_e358 = inttoptr i32 %v2_e358 to i8*
  store i8 %v0_e358.off0, i8* %v3_e358, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e360 = call i32 @function_15368(i32 1)
  %v2_e360 = trunc i32 %v1_e360 to i16
  %v0_e364 = load i32, i32* %r4.global-to-local, align 4
  %v1_e364 = load i32, i32* @r6, align 4
  %v2_e364 = add i32 %v1_e364, %v0_e364
  store i32 %v2_e364, i32* %r4.global-to-local, align 4
  %v4_e368 = add i32 %v2_e364, 2
  %v5_e368 = inttoptr i32 %v4_e368 to i16*
  store i16 %v2_e360, i16* %v5_e368, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e370 = call i32 @function_15368(i32 1)
  %v2_e370 = trunc i32 %v1_e370 to i16
  store i32 %v1_e370, i32* %r0.global-to-local, align 4
  %v3_e374 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e374, i32* %r3.global-to-local, align 4
  %v1_e378 = add i32 %v3_e374, 1
  store i32 %v1_e378, i32* @r5, align 4
  %v0_e37c = load i32, i32* %r4.global-to-local, align 4
  %v1_e37c = add i32 %v0_e37c, 2
  store i32 %v1_e37c, i32* @r4, align 4
  %v1_e380 = load i32, i32* @r8, align 4
  %v9_e380 = icmp eq i32 %v1_e378, %v1_e380
  store i1 %v9_e380, i1* %cpsr_z.global-to-local, align 1
  %v4_e384 = add i32 %v0_e37c, 4
  %v5_e384 = inttoptr i32 %v4_e384 to i16*
  store i16 %v2_e370, i16* %v5_e384, align 2
  %v0_e388 = load i32, i32* @r5, align 4
  store i32 %v0_e388, i32* %stack_var_-44, align 4
  %v5_e38c = icmp slt i32 %v1_e378, %v1_e380
  br i1 %v5_e38c, label %dec_label_pc_e210, label %dec_label_pc_e390.loopexit

dec_label_pc_e390.loopexit:                       ; preds = %dec_label_pc_e358
  %v1_e390.pre = load i32, i32* @fp, align 4
  %v0_e398.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %dec_label_pc_e390.loopexit, %dec_label_pc_e1a0
  %v0_e398.pre = phi i32 [ %v0_e398.pre.pre, %dec_label_pc_e390.loopexit ], [ 0, %dec_label_pc_e1a0 ]
  %v1_e390 = phi i32 [ %v1_e390.pre, %dec_label_pc_e390.loopexit ], [ %v1_e1e0, %dec_label_pc_e1a0 ]
  %v0_e390 = load i32, i32* @r6, align 4
  %v2_e390 = add i32 %v0_e390, %v1_e390
  store i32 %v2_e390, i32* @r7, align 4
  %v6_e3b4 = inttoptr i32 %v2_df18 to i32*
  %v3_e3bc = icmp eq i32 %v3_e1bc, 65535
  %v3_e3d4 = icmp eq i32 %v3_e1c0, 65535
  br label %dec_label_pc_e394

dec_label_pc_e394:                                ; preds = %dec_label_pc_e3f4, %dec_label_pc_e394, %dec_label_pc_e390
  %v0_e398 = phi i32 [ %v0_e398.pre, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e394 ], [ %v1_e484, %dec_label_pc_e3f4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e398 = icmp eq i32 %v0_e398, 0
  store i1 %v2_e398, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_e398, label %dec_label_pc_e394, label %dec_label_pc_e3a4

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e394
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_df18, i32* %r3.global-to-local, align 4
  store i32 65536, i32* %r5.global-to-local, align 4
  store i32 %v3_e1bc, i32* %r1.global-to-local, align 4
  %v7_e3b4 = load i32, i32* %v6_e3b4, align 4
  store i32 %v7_e3b4, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_e3bc, i1* %cpsr_z.global-to-local, align 1
  %v0_e3c0 = load i32, i32* @r7, align 4
  %v1_e3c0 = add i32 %v0_e3c0, 27
  store i32 %v1_e3c0, i32* @sb, align 4
  %v1_e3c4 = add i32 %v0_e3c0, 47
  store i32 %v1_e3c4, i32* @sl, align 4
  %v1_e3c8 = add i32 %v7_e3b4, 20
  store i32 %v1_e3c8, i32* @r6, align 4
  br i1 %v3_e3bc, label %dec_label_pc_e4b0, label %dec_label_pc_e3d0

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e490, %dec_label_pc_e3a4
  store i32 %v3_e1c0, i32* %r2.global-to-local, align 4
  store i1 %v3_e3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e3d4, label %dec_label_pc_e4c4, label %dec_label_pc_e3dc

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge, %dec_label_pc_e3d0
  %v1_e3e0 = phi i32 [ %v1_e3e0.pre, %dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge ], [ 65535, %dec_label_pc_e3d0 ]
  store i32 %v3_e1c4, i32* @r3, align 4
  %v9_e3e0 = icmp eq i32 %v3_e1c4, %v1_e3e0
  store i1 %v9_e3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e3e0, label %dec_label_pc_e4d8, label %dec_label_pc_e3e8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge, %dec_label_pc_e3dc
  %v1_e3ec = phi i32 [ %v1_e3ec.pre, %dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge ], [ %v1_e3e0, %dec_label_pc_e3dc ]
  store i32 %v3_e1c8, i32* %r1.global-to-local, align 4
  %v9_e3ec = icmp eq i32 %v3_e1c8, %v1_e3ec
  store i1 %v9_e3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e3ec, label %dec_label_pc_e4ec, label %dec_label_pc_e3f4

dec_label_pc_e3f4:                                ; preds = %dec_label_pc_e4d8, %dec_label_pc_e3e8, %dec_label_pc_e4ec
  %v0_e3f4 = load i32, i32* @r4, align 4
  %v1_e3f4 = add i32 %v0_e3f4, 41
  store i32 %v1_e3f4, i32* %r0.global-to-local, align 4
  %v0_e3f8 = load i32, i32* @fp, align 4
  store i32 %v0_e3f8, i32* %r1.global-to-local, align 4
  %v2_e3fc = inttoptr i32 %v1_e3f4 to i8*
  %v3_e3fc = call i32 @function_10150(i8* %v2_e3fc, i32 %v0_e3f8)
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e404 = load i32, i32* @r4, align 4
  %v3_e404 = add i32 %v2_e404, 10
  %v4_e404 = inttoptr i32 %v3_e404 to i16*
  store i16 0, i16* %v4_e404, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_e40c = load i32, i32* @r4, align 4
  store i32 %v0_e40c, i32* @r0, align 4
  %v2_e410 = call i32 @function_e5a4(i32 %v0_e40c, i32 20)
  %v3_e410 = trunc i32 %v2_e410 to i16
  store i32 %v2_e410, i32* %r0.global-to-local, align 4
  %v3_e414 = load i32, i32* @r4, align 4
  %v4_e414 = add i32 %v3_e414, 10
  %v5_e414 = inttoptr i32 %v4_e414 to i16*
  store i16 %v3_e410, i16* %v5_e414, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e41c = load i32, i32* @r6, align 4
  %v3_e41c = add i32 %v2_e41c, 6
  %v4_e41c = inttoptr i32 %v3_e41c to i16*
  store i16 0, i16* %v4_e41c, align 2
  %v0_e420 = load i32, i32* @r6, align 4
  store i32 %v0_e420, i32* @r1, align 4
  %v1_e424 = add i32 %v0_e420, 4
  %v2_e424 = inttoptr i32 %v1_e424 to i16*
  %v3_e424 = load i16, i16* %v2_e424, align 2
  %v4_e424 = zext i16 %v3_e424 to i32
  store i32 %v4_e424, i32* %r2.global-to-local, align 4
  %v0_e428 = load i32, i32* @sb, align 4
  store i32 %v0_e428, i32* %r3.global-to-local, align 4
  %v0_e42c = load i32, i32* @r4, align 4
  store i32 %v0_e42c, i32* %r0.global-to-local, align 4
  %v4_e430 = call i32 @function_e5f4(i32 %v0_e42c, i32 %v0_e420, i32 %v4_e424, i32 %v0_e428)
  %v5_e430 = trunc i32 %v4_e430 to i16
  store i32 %v4_e430, i32* %r0.global-to-local, align 4
  %v3_e434 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e434, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_e43c = mul i32 %v3_e434, 32
  store i32 %v3_e43c, i32* %ip.global-to-local, align 4
  %v3_e440 = load i32, i32* @r6, align 4
  %v4_e440 = add i32 %v3_e440, 6
  %v5_e440 = inttoptr i32 %v4_e440 to i16*
  store i16 %v5_e430, i16* %v5_e440, align 2
  store i32 %stack_var_-2172.0, i32* %r2.global-to-local, align 4
  %v0_e448 = load i32, i32* @r6, align 4
  %v1_e448 = add i32 %v0_e448, 2
  %v2_e448 = inttoptr i32 %v1_e448 to i16*
  %v3_e448 = load i16, i16* %v2_e448, align 2
  %v4_e448 = zext i16 %v3_e448 to i32
  store i32 %v4_e448, i32* %r6.global-to-local, align 4
  %v0_e44c = load i32, i32* %ip.global-to-local, align 4
  %v1_e44c = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_e44c, -8
  %v5_e44c = add i32 %v0_e44c, %tmp95
  %v1_e450 = load i32, i32* %r1.global-to-local, align 4
  %v2_e450 = add i32 %v1_e450, %v5_e44c
  store i32 %v2_e450, i32* %ip.global-to-local, align 4
  %v2_e454 = add i32 %v2_e450, 4
  %v3_e454 = inttoptr i32 %v2_e454 to i32*
  store i32 %stack_var_-2172.0, i32* %v3_e454, align 4
  %v0_e458 = load i32, i32* %r6.global-to-local, align 4
  %v1_e458 = trunc i32 %v0_e458 to i16
  %v2_e458 = load i32, i32* %ip.global-to-local, align 4
  %v3_e458 = add i32 %v2_e458, 2
  %v4_e458 = inttoptr i32 %v3_e458 to i16*
  store i16 %v1_e458, i16* %v4_e458, align 2
  %v0_e45c = load i32, i32* @r4, align 4
  store i32 %v0_e45c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_e168, i32* @r0, align 4
  %v0_e468 = load i32, i32* @sl, align 4
  store i32 %v0_e468, i32* @r2, align 4
  store i32 16, i32* @r4, align 4
  %v0_e478 = call i32 @function_155b4()
  %v3_e47c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e47c, i32* %r3.global-to-local, align 4
  %v1_e480 = add i32 %v3_e47c, 1
  store i32 %v1_e480, i32* %r0.global-to-local, align 4
  %v1_e484 = load i32, i32* @r8, align 4
  %v9_e484 = icmp eq i32 %v1_e480, %v1_e484
  store i1 %v9_e484, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e480, i32* %stack_var_-44, align 4
  %v6_e48c = icmp slt i32 %v1_e480, %v1_e484
  br i1 %v6_e48c, label %dec_label_pc_e490, label %dec_label_pc_e394

dec_label_pc_e490:                                ; preds = %dec_label_pc_e3f4
  store i32 %v2_df18, i32* %r3.global-to-local, align 4
  store i32 65536, i32* %r5.global-to-local, align 4
  store i32 %v3_e1bc, i32* %r1.global-to-local, align 4
  %v4_e49c = mul i32 %v1_e480, 4
  %v5_e49c = add i32 %v4_e49c, %v2_df18
  %v6_e49c = inttoptr i32 %v5_e49c to i32*
  %v7_e49c = load i32, i32* %v6_e49c, align 4
  store i32 %v7_e49c, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_e3bc, i1* %cpsr_z.global-to-local, align 1
  %v1_e4a8 = add i32 %v7_e49c, 20
  store i32 %v1_e4a8, i32* @r6, align 4
  br i1 %v3_e3bc, label %dec_label_pc_e4b0, label %dec_label_pc_e3d0

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e490, %dec_label_pc_e3a4
  %v0_e4b0 = call i32 @function_1008c()
  %v1_e4b0 = trunc i32 %v0_e4b0 to i16
  store i32 %v0_e4b0, i32* %r0.global-to-local, align 4
  store i32 %v3_e1c0, i32* %r2.global-to-local, align 4
  %v1_e4b8 = load i32, i32* @r5, align 4
  %v9_e4b8 = icmp eq i32 %v3_e1c0, %v1_e4b8
  store i1 %v9_e4b8, i1* %cpsr_z.global-to-local, align 1
  %v3_e4bc = load i32, i32* @r4, align 4
  %v4_e4bc = add i32 %v3_e4bc, 4
  %v5_e4bc = inttoptr i32 %v4_e4bc to i16*
  store i16 %v1_e4b0, i16* %v5_e4bc, align 2
  br i1 %v9_e4b8, label %dec_label_pc_e4c4, label %dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge

dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge:    ; preds = %dec_label_pc_e4b0
  %v1_e3e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e3dc

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e4b0, %dec_label_pc_e3d0
  %v0_e4c4 = call i32 @function_1008c()
  %v1_e4c4 = trunc i32 %v0_e4c4 to i16
  store i32 %v0_e4c4, i32* %r0.global-to-local, align 4
  store i32 %v3_e1c4, i32* @r3, align 4
  %v1_e4cc = load i32, i32* @r5, align 4
  %v9_e4cc = icmp eq i32 %v3_e1c4, %v1_e4cc
  store i1 %v9_e4cc, i1* %cpsr_z.global-to-local, align 1
  %v3_e4d0 = load i32, i32* @r4, align 4
  %v4_e4d0 = add i32 %v3_e4d0, 20
  %v5_e4d0 = inttoptr i32 %v4_e4d0 to i16*
  store i16 %v1_e4c4, i16* %v5_e4d0, align 2
  br i1 %v9_e4cc, label %dec_label_pc_e4d8, label %dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge

dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge:    ; preds = %dec_label_pc_e4c4
  %v1_e3ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e3e8

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e4c4, %dec_label_pc_e3dc
  %v0_e4d8 = call i32 @function_1008c()
  %v1_e4d8 = trunc i32 %v0_e4d8 to i16
  store i32 %v0_e4d8, i32* %r0.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r1.global-to-local, align 4
  %v1_e4e0 = load i32, i32* @r5, align 4
  %v9_e4e0 = icmp eq i32 %v3_e1c8, %v1_e4e0
  store i1 %v9_e4e0, i1* %cpsr_z.global-to-local, align 1
  %v3_e4e4 = load i32, i32* @r6, align 4
  %v4_e4e4 = add i32 %v3_e4e4, 2
  %v5_e4e4 = inttoptr i32 %v4_e4e4 to i16*
  store i16 %v1_e4d8, i16* %v5_e4e4, align 2
  br i1 %v9_e4e0, label %dec_label_pc_e4ec, label %dec_label_pc_e3f4

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4d8, %dec_label_pc_e3e8
  %v0_e4ec = call i32 @function_1008c()
  %v1_e4ec = trunc i32 %v0_e4ec to i16
  store i32 %v0_e4ec, i32* %r0.global-to-local, align 4
  %v3_e4f0 = load i32, i32* @r4, align 4
  %v4_e4f0 = add i32 %v3_e4f0, 28
  %v5_e4f0 = inttoptr i32 %v4_e4f0 to i16*
  store i16 %v1_e4ec, i16* %v5_e4f0, align 2
  br label %dec_label_pc_e3f4

dec_label_pc_e4f8:                                ; preds = %dec_label_pc_e0c8, %dec_label_pc_e0a8, %dec_label_pc_e04c, %dec_label_pc_def8
  %v0_e4f8 = call i32 @function_1008c()
  %v1_e4fc = urem i32 %v0_e4f8, 4
  store i32 %v1_e4fc, i32* %r0.global-to-local, align 4
  %v2_e500 = icmp eq i32 %v1_e4fc, 3
  store i1 %v2_e500, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_e4f8 to i2
  switch i2 %trunc, label %dec_label_pc_e1443 [
    i2 0, label %dec_label_pc_e584
    i2 1, label %dec_label_pc_e574
    i2 -2, label %dec_label_pc_e55c
    i2 -1, label %dec_label_pc_e544
  ]

dec_label_pc_e51c:                                ; preds = %dec_label_pc_e210
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_e520 = call i32 @function_15368(i32 16384)
  %v2_e520 = trunc i32 %v1_e520 to i16
  store i32 %v1_e520, i32* %r0.global-to-local, align 4
  %v3_e524 = load i32, i32* %r5.global-to-local, align 4
  %v4_e524 = add i32 %v3_e524, 6
  %v5_e524 = inttoptr i32 %v4_e524 to i16*
  store i16 %v2_e520, i16* %v5_e524, align 2
  %v2_e290.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e28c

dec_label_pc_e52c:                                ; preds = %dec_label_pc_e178
  store i32 %v3_e168, i32* @r0, align 4
  %v1_e530 = call i32 @function_1663c(i32 %v3_e168)
  store i32 %v1_e530, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e150, %dec_label_pc_e144, %dec_label_pc_e52c
  %v1_e540 = phi i32 [ %v3_e168, %dec_label_pc_e150 ], [ %stack_var_-2172.0, %dec_label_pc_e144 ], [ %v1_e530, %dec_label_pc_e52c ]
  store i32 %v3_def8, i32* %r4.global-to-local, align 4
  store i32 %v6_def8, i32* %r5.global-to-local, align 4
  store i32 %v9_def8, i32* %r6.global-to-local, align 4
  ret i32 %v1_e540

dec_label_pc_e544:                                ; preds = %dec_label_pc_e4f8
  store i32 67240450, i32* %r0.global-to-local, align 4
  %v1_e550 = call i32 @function_15344(i32 67240450)
  store i32 %v1_e550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e55c:                                ; preds = %dec_label_pc_e4f8
  store i32 1074151430, i32* %r0.global-to-local, align 4
  %v1_e568 = call i32 @function_15344(i32 1074151430)
  store i32 %v1_e568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e574:                                ; preds = %dec_label_pc_e4f8
  store i32 1246898730, i32* %r0.global-to-local, align 4
  %v1_e578 = call i32 @function_15344(i32 1246898730)
  store i32 %v1_e578, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e584:                                ; preds = %dec_label_pc_e4f8
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_e590 = call i32 @function_15344(i32 134744072)
  store i32 %v1_e590, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

; uselistorder directives
  uselistorder i32 %v1_e590, { 1, 0 }
  uselistorder i32 %v1_e578, { 1, 0 }
  uselistorder i32 %v1_e568, { 1, 0 }
  uselistorder i32 %v1_e550, { 1, 0 }
  uselistorder i32 %v1_e520, { 1, 0 }
  uselistorder i32 %v1_e4fc, { 1, 0 }
  uselistorder i32 %v0_e4f8, { 1, 0 }
  uselistorder i32 %v0_e4ec, { 1, 0 }
  uselistorder i32 %v0_e4d8, { 1, 0 }
  uselistorder i32 %v0_e4c4, { 1, 0 }
  uselistorder i32 %v0_e4b0, { 1, 0 }
  uselistorder i32 %v1_e484, { 1, 2, 0 }
  uselistorder i32 %v1_e480, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_e430, { 1, 0 }
  uselistorder i32 %v2_e410, { 1, 0 }
  uselistorder i1 %v3_e3d4, { 1, 0 }
  uselistorder i1 %v3_e3bc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_e370, { 1, 0 }
  uselistorder i32 %v0_e350, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_e33c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_e338, { 1, 0, 2 }
  uselistorder i32 %v1_e268, { 1, 0 }
  uselistorder i32 %v1_e1fc, { 1, 0, 2 }
  uselistorder i32 %v3_e1f0, { 1, 0 }
  uselistorder i32 %v0_e1ec, { 1, 0 }
  uselistorder i32 %v1_e1e0, { 1, 2, 0 }
  uselistorder i32 %v3_e1c0, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 %v3_e1bc, { 1, 0, 5, 2, 3, 4 }
  uselistorder i1 %v7_e198, { 1, 0 }
  uselistorder i1 %v7_e16c, { 1, 0 }
  uselistorder i32 %v3_e168, { 1, 3, 4, 5, 2, 0, 6 }
  uselistorder i32 %stack_var_-2172.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_e114, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_e110, { 1, 0, 2 }
  uselistorder i1 %v7_e0fc, { 1, 0 }
  uselistorder i32 %v1_e0f8, { 1, 0, 2 }
  uselistorder i1 %v8_e0f0, { 1, 0 }
  uselistorder i1 %v7_e0ec, { 1, 0 }
  uselistorder i32 %v1_e0e0, { 1, 0 }
  uselistorder i8 %v2_e0d4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_e0d8, { 1, 0 }
  uselistorder i32 %v0_e0f8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_e0c8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e0dc, { 0, 2, 1 }
  uselistorder i32 %v2_e0b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e0a8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_e0a0, { 1, 0 }
  uselistorder i32 %v0_e0a0, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v2_e050, { 0, 2, 1, 3 }
  uselistorder i32 %v0_e044, { 1, 0, 3, 2 }
  uselistorder i32 %v6_e014, { 0, 1, 3, 2, 6, 7, 5, 4 }
  uselistorder i32 %v1_df98, { 1, 2, 0 }
  uselistorder i8 %v5_df50, { 1, 0 }
  uselistorder i32 %v6_df30, { 1, 0 }
  uselistorder i32 %v2_df18, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 17, 15, 14, 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16 }
  uselistorder i32* %r4.global-to-local, { 12, 0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r1.global-to-local, { 41, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 35, 34, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 58, 57, 60, 59, 62, 61, 64, 63, 65, 68, 66, 67, 69, 1, 70, 3, 2, 5, 4, 6, 7, 8, 10, 9, 11, 14, 12, 13, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 30, 28, 29, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 22, 19, 26, 27, 28 }
  uselistorder i32 41, { 5, 6, 7, 0, 1, 3, 8, 2, 9, 4, 10 }
  uselistorder i32 (i32)* @function_1537c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e534, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e358, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_e28c, { 1, 0 }
  uselistorder label %dec_label_pc_e10c, { 1, 0 }
  uselistorder label %dec_label_pc_e0fc, { 1, 0 }
  uselistorder label %dec_label_pc_e0c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e0c0, { 1, 0 }
}

define i32 @function_e5a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5a4:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_e5c8, label %dec_label_pc_e5b0

dec_label_pc_e5b0:                                ; preds = %dec_label_pc_e5a4
  %v0_e5b8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5b4, %dec_label_pc_e5b0
  %v0_e5c0 = phi i32 [ %v2_e5c0, %dec_label_pc_e5b4 ], [ 0, %dec_label_pc_e5b0 ]
  %v0_e5b8 = phi i32 [ %v5_e5b8, %dec_label_pc_e5b4 ], [ %v0_e5b8.pre, %dec_label_pc_e5b0 ]
  %v0_e5b4 = phi i32 [ %v1_e5b4, %dec_label_pc_e5b4 ], [ %arg1, %dec_label_pc_e5b0 ]
  %v1_e5b4 = add i32 %v0_e5b4, -2
  %v1_e5b8 = inttoptr i32 %v0_e5b8 to i16*
  %v2_e5b8 = load i16, i16* %v1_e5b8, align 2
  %v3_e5b8 = zext i16 %v2_e5b8 to i32
  %v5_e5b8 = add i32 %v0_e5b8, -2
  store i32 %v5_e5b8, i32* @r0, align 4
  %v2_e5c0 = add i32 %v3_e5b8, %v0_e5c0
  %v1_e5b4.cmp = icmp ugt i32 %v1_e5b4, 1
  br i1 %v1_e5b4.cmp, label %dec_label_pc_e5b4, label %dec_label_pc_e5c8.loopexit

dec_label_pc_e5c8.loopexit:                       ; preds = %dec_label_pc_e5b4
  br label %dec_label_pc_e5c8

dec_label_pc_e5c8:                                ; preds = %dec_label_pc_e5a4, %dec_label_pc_e5c8.loopexit
  %v1_e5d0 = phi i32 [ %v2_e5c0, %dec_label_pc_e5c8.loopexit ], [ 0, %dec_label_pc_e5a4 ]
  %v0_e5c8 = phi i32 [ %v1_e5b4, %dec_label_pc_e5c8.loopexit ], [ %arg1, %dec_label_pc_e5a4 ]
  %v7_e5c8 = icmp eq i32 %v0_e5c8, 1
  br i1 %v7_e5c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e5c8
  %v1_e5cc = load i32, i32* @r0, align 4
  %v2_e5cc = inttoptr i32 %v1_e5cc to i8*
  %v3_e5cc = load i8, i8* %v2_e5cc, align 1
  %v4_e5cc = zext i8 %v3_e5cc to i32
  %v3_e5d0 = add i32 %v1_e5d0, %v4_e5cc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e5c8, %bb
  %v0_e5d4 = phi i32 [ %v1_e5d0, %dec_label_pc_e5c8 ], [ %v3_e5d0, %bb ]
  %v3_e5d8 = urem i32 %v0_e5d4, 65536
  %v4_e5dc = udiv i32 %v0_e5d4, 65536
  %v5_e5dc = add nuw nsw i32 %v4_e5dc, %v3_e5d8
  %v4_e5e0 = udiv i32 %v5_e5dc, 65536
  %v5_e5e0 = add nuw nsw i32 %v4_e5e0, %v5_e5dc
  %v1_e5e4 = urem i32 %v5_e5e0, 65536
  %v3_e5ec = xor i32 %v1_e5e4, 65535
  ret i32 %v3_e5ec

; uselistorder directives
  uselistorder i32 %v5_e5dc, { 1, 0 }
  uselistorder i32 %v5_e5b8, { 1, 0 }
  uselistorder i32 %v1_e5b4, { 1, 0, 2 }
  uselistorder i32 %v0_e5b8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e5c8, { 1, 0 }
}

define i32 @function_e5f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e5f4:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v0_e5f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_e608 = add i32 %arg1, 12
  %v2_e608 = inttoptr i32 %v1_e608 to i32*
  %v3_e608 = load i32, i32* %v2_e608, align 4
  store i32 %v3_e608, i32* %r6.global-to-local, align 4
  %v1_e60c = add i32 %arg1, 16
  %v2_e60c = inttoptr i32 %v1_e60c to i32*
  %v3_e60c = load i32, i32* %v2_e60c, align 4
  store i32 %v3_e60c, i32* %r5.global-to-local, align 4
  %v7_e610 = icmp sgt i32 %v0_e5f8, 1
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v7_e610, label %dec_label_pc_e61c.preheader, label %dec_label_pc_e630

dec_label_pc_e61c.preheader:                      ; preds = %dec_label_pc_e5f4
  %v0_e620.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_e61c

dec_label_pc_e61c:                                ; preds = %dec_label_pc_e61c.preheader, %dec_label_pc_e61c
  %v0_e628 = phi i32 [ 0, %dec_label_pc_e61c.preheader ], [ %v2_e628, %dec_label_pc_e61c ]
  %v0_e620 = phi i32 [ %v0_e620.pre, %dec_label_pc_e61c.preheader ], [ %v5_e620, %dec_label_pc_e61c ]
  %v0_e61c = phi i32 [ %v0_e5f8, %dec_label_pc_e61c.preheader ], [ %v1_e61c, %dec_label_pc_e61c ]
  %v1_e61c = add nsw i32 %v0_e61c, -2
  %v1_e620 = inttoptr i32 %v0_e620 to i16*
  %v2_e620 = load i16, i16* %v1_e620, align 2
  %v3_e620 = zext i16 %v2_e620 to i32
  store i32 %v3_e620, i32* %r3.global-to-local, align 4
  %v5_e620 = add i32 %v0_e620, -2
  store i32 %v5_e620, i32* @r1, align 4
  %v2_e628 = add i32 %v3_e620, %v0_e628
  store i32 %v2_e628, i32* %r4.global-to-local, align 4
  %v8_e62c = icmp sgt i32 %v1_e61c, 1
  br i1 %v8_e62c, label %dec_label_pc_e61c, label %dec_label_pc_e630.loopexit

dec_label_pc_e630.loopexit:                       ; preds = %dec_label_pc_e61c
  br label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %dec_label_pc_e630.loopexit, %dec_label_pc_e5f4
  %v1_e63c = phi i32 [ %v2_e628, %dec_label_pc_e630.loopexit ], [ 0, %dec_label_pc_e5f4 ]
  %v0_e630 = phi i32 [ %v1_e61c, %dec_label_pc_e630.loopexit ], [ %v0_e5f8, %dec_label_pc_e5f4 ]
  %v7_e630 = icmp eq i32 %v0_e630, 1
  br i1 %v7_e630, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_e630
  %v1_e6381 = add i32 %arg1, 9
  %v2_e6382 = inttoptr i32 %v1_e6381 to i8*
  %v3_e6383 = load i8, i8* %v2_e6382, align 1
  br label %bb20

bb:                                               ; preds = %dec_label_pc_e630
  %v1_e634 = load i32, i32* @r1, align 4
  %v2_e634 = inttoptr i32 %v1_e634 to i8*
  %v3_e634 = load i8, i8* %v2_e634, align 1
  %v4_e634 = zext i8 %v3_e634 to i32
  store i32 %v4_e634, i32* %r3.global-to-local, align 4
  %v1_e638 = add i32 %arg1, 9
  %v2_e638 = inttoptr i32 %v1_e638 to i8*
  %v3_e638 = load i8, i8* %v2_e638, align 1
  %v3_e63c = add i32 %v4_e634, %v1_e63c
  store i32 %v3_e63c, i32* %r4.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb
  %v4_e6385.in = phi i8 [ %v3_e6383, %.thread ], [ %v3_e638, %bb ]
  %v4_e6385 = zext i8 %v4_e6385.in to i32
  %v1_e640 = call i32 @function_15368(i32 %v4_e6385)
  %v0_e644 = load i32, i32* %r5.global-to-local, align 4
  %v0_e648 = load i32, i32* %r6.global-to-local, align 4
  %v3_e64c = urem i32 %v0_e648, 65536
  %v3_e650 = urem i32 %v0_e644, 65536
  %v4_e658 = udiv i32 %v0_e648, 65536
  %v4_e65c = udiv i32 %v0_e644, 65536
  %v1_e660 = load i32, i32* %r7.global-to-local, align 4
  %v1_e664 = load i32, i32* %r4.global-to-local, align 4
  %v2_e654 = add nuw nsw i32 %v4_e65c, %v3_e650
  %v5_e658 = add nuw nsw i32 %v2_e654, %v3_e64c
  %v5_e65c = add nuw nsw i32 %v5_e658, %v4_e658
  %v2_e660 = add i32 %v5_e65c, %v1_e660
  %v2_e664 = add i32 %v2_e660, %v1_e664
  store i32 %v2_e664, i32* %r3.global-to-local, align 4
  %v2_e668 = add i32 %v2_e664, %v1_e640
  %tmp = icmp ult i32 %v2_e668, 65536
  br i1 %tmp, label %dec_label_pc_e688, label %dec_label_pc_e674

dec_label_pc_e674:                                ; preds = %bb20, %dec_label_pc_e674
  %v2_e67c6 = phi i32 [ %v2_e67c, %dec_label_pc_e674 ], [ %v2_e668, %bb20 ]
  %v3_e6807.in = phi i32 [ %v2_e67c, %dec_label_pc_e674 ], [ %v2_e668, %bb20 ]
  %v3_e6807 = udiv i32 %v3_e6807.in, 65536
  %v3_e678 = urem i32 %v2_e67c6, 65536
  %v2_e67c = add nuw nsw i32 %v3_e678, %v3_e6807
  %tmp21 = icmp ult i32 %v2_e67c, 65536
  br i1 %tmp21, label %dec_label_pc_e688.loopexit, label %dec_label_pc_e674

dec_label_pc_e688.loopexit:                       ; preds = %dec_label_pc_e674
  store i32 %v3_e678, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e688

dec_label_pc_e688:                                ; preds = %dec_label_pc_e688.loopexit, %bb20
  %v0_e688 = phi i32 [ %v2_e67c, %dec_label_pc_e688.loopexit ], [ %v2_e668, %bb20 ]
  %v1_e688 = urem i32 %v0_e688, 65536
  %v3_e690 = xor i32 %v1_e688, 65535
  ret i32 %v3_e690

; uselistorder directives
  uselistorder i32 %v2_e67c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_e678, { 1, 0 }
  uselistorder i32 %v2_e668, { 3, 0, 2, 1 }
  uselistorder i32 %v2_e628, { 0, 2, 1 }
  uselistorder i32 %v5_e620, { 1, 0 }
  uselistorder i32 %v0_e620, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_e674, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_e61c, { 1, 0 }
}

define i32 @function_e6a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6a0:
  store i32 %arg1, i32* @r2, align 4
  %v2_e6ac = load i32, i32* @global_var_23664.105, align 4
  store i32 %v2_e6ac, i32* @r0, align 4
  %v2_e6b4 = call i32 @function_158f4(i32 %v2_e6ac, i32 9)
  ret i32 %v2_e6b4
}

define i32 @function_e6c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6c8:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-585 = alloca i8, align 1
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-4681 = alloca i32, align 4
  %v3_e6c8 = load i32, i32* @r4, align 4
  %v6_e6c8 = load i32, i32* @r5, align 4
  %v9_e6c8 = load i32, i32* @r6, align 4
  %v12_e6c8 = load i32, i32* @r7, align 4
  %v15_e6c8 = load i32, i32* @r8, align 4
  %v18_e6c8 = load i32, i32* @sb, align 4
  %v21_e6c8 = load i32, i32* @sl, align 4
  %v24_e6c8 = load i32, i32* @fp, align 4
  %v27_e6c8 = load i32, i32* @lr, align 4
  %v2_e6dc = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_e6dc, i32* @sl, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_e6f0 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_e6f0, i32* @fp, align 4
  %v3_e6fc = bitcast i32* %stack_var_-4681 to i8*
  %v4_e6fc = call i32 @function_16064(i8* %v3_e6fc, i32 0, i32 4096)
  %v3_e710 = bitcast i32* %stack_var_-8777 to i8*
  %v4_e710 = call i32 @function_16064(i8* %v3_e710, i32 0, i32 4096)
  %v2_e714 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_e714, i32* @r6, align 4
  %v4_e728 = call i32 @function_16064(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v0_e734 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v2_e73c = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_e73c, i32* @sb, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v1_e750 = call i32 @function_15510(i32 %v0_e734)
  %v3_e75c = trunc i32 %v1_e750 to i8
  %v4_e75c = call i32 @function_13340(i8 %v3_e75c, i32 16, i32 %v2_e73c)
  %v2_e764 = call i32 @function_12e40(i8* nonnull %stack_var_-72)
  %v7_e768 = icmp eq i32 %v2_e764, 2
  br i1 %v7_e768, label %dec_label_pc_ebf8, label %dec_label_pc_e770

dec_label_pc_e770:                                ; preds = %dec_label_pc_e6c8, %dec_label_pc_ebf8
  %v1_e774 = call i32 @function_125b0(i32 6)
  %v1_e77c = call i32 @function_125b0(i32 7)
  %v1_e784 = call i32 @function_125b0(i32 9)
  %v0_e78c = load i32, i32* @r4, align 4
  %v3_e790 = call i32 @function_13bfc(i32 ptrtoint ([14 x i8]* @global_var_1a2e0.107 to i32), i32 %v0_e78c)
  %v7_e794 = icmp eq i32 %v3_e790, -1
  store i32 %v3_e790, i32* @r8, align 4
  br i1 %v7_e794, label %dec_label_pc_ebb8, label %dec_label_pc_e7a0.preheader

dec_label_pc_e7a0.preheader:                      ; preds = %dec_label_pc_e770
  %v4_e7ac54 = call i32 @function_130a0(i8* nonnull %stack_var_-585, i32 512, i32 %v3_e790)
  %v2_e7b056 = icmp eq i32 %v4_e7ac54, 0
  br i1 %v2_e7b056, label %dec_label_pc_e938.loopexit, label %dec_label_pc_e7b8.lr.ph

dec_label_pc_e7b8.lr.ph:                          ; preds = %dec_label_pc_e7a0.preheader
  %v2_e800 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e7b8

dec_label_pc_e7b8:                                ; preds = %dec_label_pc_e7b8.lr.ph, %dec_label_pc_e7a0.backedge
  %v3_e7bc = load i8, i8* %stack_var_-585, align 1
  %v4_e7bc = sext i8 %v3_e7bc to i32
  %v2_e7c0 = icmp eq i8 %v3_e7bc, 0
  br i1 %v2_e7c0, label %bb128, label %bb

bb:                                               ; preds = %dec_label_pc_e7b8
  %v8_e7c4 = icmp eq i8 %v3_e7bc, 58
  br i1 %v8_e7c4, label %.thread6, label %dec_label_pc_e7d8

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_e7f0

bb128:                                            ; preds = %dec_label_pc_e7b8
  br label %dec_label_pc_e7f0

dec_label_pc_e7d8:                                ; preds = %bb
  %v1_e7e0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e7dc

dec_label_pc_e7dc:                                ; preds = %bb129, %dec_label_pc_e7d8
  %v0_e7dc = phi i32 [ %v1_e7dc, %bb129 ], [ 0, %dec_label_pc_e7d8 ]
  %v1_e7dc = add i32 %v0_e7dc, 1
  %v2_e7e0 = add i32 %v1_e7dc, %v1_e7e0.pre
  %v3_e7e0 = inttoptr i32 %v2_e7e0 to i8*
  %v4_e7e0 = load i8, i8* %v3_e7e0, align 1
  %v6_e7e0 = zext i8 %v4_e7e0 to i32
  %v2_e7e4 = icmp eq i8 %v4_e7e0, 0
  br i1 %v2_e7e4, label %dec_label_pc_e7f0, label %bb129

bb129:                                            ; preds = %dec_label_pc_e7dc
  %v8_e7e8 = icmp eq i8 %v4_e7e0, 58
  br i1 %v8_e7e8, label %dec_label_pc_e7f0, label %dec_label_pc_e7dc

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e7dc, %bb129, %bb128, %.thread6
  %v1_e81c = phi i32 [ 0, %.thread6 ], [ 0, %bb128 ], [ %v1_e7dc, %bb129 ], [ %v1_e7dc, %dec_label_pc_e7dc ]
  %v0_e7f0 = phi i32 [ %v4_e7bc, %.thread6 ], [ %v4_e7bc, %bb128 ], [ %v6_e7e0, %bb129 ], [ %v6_e7e0, %dec_label_pc_e7dc ]
  %v2_e7f0 = icmp eq i32 %v0_e7f0, 0
  br i1 %v2_e7f0, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e7f8

dec_label_pc_e7a0.backedge:                       ; preds = %dec_label_pc_e7f0, %dec_label_pc_e8c0, %dec_label_pc_e900, %dec_label_pc_e83c
  %v0_e7a8 = load i32, i32* @r8, align 4
  %v4_e7ac = call i32 @function_130a0(i8* nonnull %stack_var_-585, i32 512, i32 %v0_e7a8)
  %v2_e7b0 = icmp eq i32 %v4_e7ac, 0
  br i1 %v2_e7b0, label %dec_label_pc_e938.loopexit, label %dec_label_pc_e7b8

dec_label_pc_e7f8:                                ; preds = %dec_label_pc_e7f0
  %v1_e7fc = add i32 %v1_e81c, 2
  %v2_e804 = add i32 %v1_e7fc, %v2_e800
  %v1_e808 = add i32 %v2_e804, -545
  %v2_e808 = inttoptr i32 %v1_e808 to i8*
  %v3_e808 = load i8, i8* %v2_e808, align 1
  %v2_e80c = icmp eq i8 %v3_e808, 0
  br i1 %v2_e80c, label %bb131, label %bb130

bb130:                                            ; preds = %dec_label_pc_e7f8
  %v8_e810 = icmp eq i8 %v3_e808, 32
  br i1 %v8_e810, label %.thread10, label %dec_label_pc_e81c

.thread10:                                        ; preds = %bb130
  store i32 %v1_e7fc, i32* @r5, align 4
  br label %dec_label_pc_e83c

bb131:                                            ; preds = %dec_label_pc_e7f8
  store i32 %v1_e7fc, i32* @r5, align 4
  br label %dec_label_pc_e83c

dec_label_pc_e81c:                                ; preds = %bb130
  %v0_e81c = load i32, i32* @r6, align 4
  %v2_e81c = add i32 %v0_e81c, %v1_e81c
  br label %dec_label_pc_e824

dec_label_pc_e824:                                ; preds = %bb132, %dec_label_pc_e81c
  %v0_e83013 = phi i32 [ %v1_e830, %bb132 ], [ %v1_e7fc, %dec_label_pc_e81c ]
  %v0_e83415 = phi i32 [ %v1_e834, %bb132 ], [ %v2_e81c, %dec_label_pc_e81c ]
  %v1_e824 = add i32 %v0_e83415, 3
  %v2_e824 = inttoptr i32 %v1_e824 to i8*
  %v3_e824 = load i8, i8* %v2_e824, align 1
  %v2_e828 = icmp eq i8 %v3_e824, 0
  br i1 %v2_e828, label %.thread12, label %bb132

.thread12:                                        ; preds = %dec_label_pc_e824
  %v1_e83014 = add i32 %v0_e83013, 1
  store i32 %v1_e83014, i32* @r5, align 4
  br label %dec_label_pc_e83c

bb132:                                            ; preds = %dec_label_pc_e824
  %v8_e82c = icmp eq i8 %v3_e824, 32
  %v1_e830 = add i32 %v0_e83013, 1
  store i32 %v1_e830, i32* @r5, align 4
  %v1_e834 = add i32 %v0_e83415, 1
  br i1 %v8_e82c, label %dec_label_pc_e83c, label %dec_label_pc_e824

dec_label_pc_e83c:                                ; preds = %bb132, %bb131, %.thread12, %.thread10
  %v1_e848 = phi i32 [ %v1_e83014, %.thread12 ], [ %v1_e7fc, %.thread10 ], [ %v1_e7fc, %bb131 ], [ %v1_e830, %bb132 ]
  %v0_e83c = load i32, i32* @r6, align 4
  %v2_e83c = add i32 %v0_e83c, %v1_e7fc
  store i32 %v2_e83c, i32* @r4, align 4
  %v2_e848 = add i32 %v1_e848, %v2_e800
  store i32 0, i32* @r7, align 4
  %v3_e850 = add i32 %v2_e848, -545
  %v4_e850 = inttoptr i32 %v3_e850 to i8*
  store i8 0, i8* %v4_e850, align 1
  %v0_e854 = load i32, i32* @r4, align 4
  %v1_e858 = inttoptr i32 %v0_e854 to i8*
  %v2_e858 = call i32 @function_12e40(i8* %v1_e858)
  store i32 %v2_e858, i32* @r1, align 4
  %v0_e864 = load i32, i32* @r4, align 4
  %v3_e868 = inttoptr i32 %v0_e864 to i8*
  %v4_e868 = call i32 @function_1319c(i8* %v3_e868, i32 %v2_e858, i32 %v2_e73c)
  %v7_e86c = icmp eq i32 %v4_e868, -1
  br i1 %v7_e86c, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e888.preheader

dec_label_pc_e888.preheader:                      ; preds = %dec_label_pc_e83c
  %v1_e870 = load i32, i32* @r7, align 4
  %v1_e874 = load i32, i32* @r6, align 4
  %v2_e874 = load i32, i32* @r5, align 4
  %v3_e874 = add i32 %v2_e874, %v1_e874
  store i32 %v1_e870, i32* @lr, align 4
  %v1_e88846 = add i32 %v3_e874, 2
  %v2_e88847 = inttoptr i32 %v1_e88846 to i8*
  %v3_e88848 = load i8, i8* %v2_e88847, align 1
  %v2_e88c50 = icmp eq i8 %v3_e88848, 0
  %v1_e89052 = add i32 %v2_e874, 2
  br i1 %v2_e88c50, label %dec_label_pc_e8c0, label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e888.preheader, %dec_label_pc_e888.backedge
  %v0_e8c081 = phi i32 [ %v0_e8c079, %dec_label_pc_e888.backedge ], [ %v1_e870, %dec_label_pc_e888.preheader ]
  %v0_e8a8.pr = phi i32 [ %v0_e8a8.pr68, %dec_label_pc_e888.backedge ], [ %v1_e870, %dec_label_pc_e888.preheader ]
  %v0_ebcc = phi i32 [ %v0_ebcc71, %dec_label_pc_e888.backedge ], [ %v1_e870, %dec_label_pc_e888.preheader ]
  %v0_e89076 = phi i32 [ %v1_e890, %dec_label_pc_e888.backedge ], [ %v1_e89052, %dec_label_pc_e888.preheader ]
  %v0_e8b8 = phi i32 [ %v0_e888, %dec_label_pc_e888.backedge ], [ %v3_e874, %dec_label_pc_e888.preheader ]
  %v1_e89c.in = phi i8 [ %v3_e888, %dec_label_pc_e888.backedge ], [ %v3_e88848, %dec_label_pc_e888.preheader ]
  %v7_e898 = icmp eq i8 %v1_e89c.in, 9
  br i1 %v7_e898, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_e898
  %v8_e89c = icmp eq i8 %v1_e89c.in, 32
  br i1 %v8_e89c, label %.thread24, label %dec_label_pc_e8a8

.thread24:                                        ; preds = %bb133
  br label %dec_label_pc_e8b4

bb134:                                            ; preds = %dec_label_pc_e898
  br label %dec_label_pc_e8b4

dec_label_pc_e8a8:                                ; preds = %bb133
  %v7_e8a8 = icmp eq i32 %v0_e8a8.pr, 1
  br i1 %v7_e8a8, label %dec_label_pc_ebcc, label %dec_label_pc_e8b0

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_ebcc, %dec_label_pc_e8a8
  %v0_e8b473 = phi i32 [ %v1_ebcc, %dec_label_pc_ebcc ], [ %v0_ebcc, %dec_label_pc_e8a8 ]
  br label %dec_label_pc_e8b4

dec_label_pc_e8b4:                                ; preds = %bb134, %.thread24, %dec_label_pc_e8b0
  %v0_e8b4 = phi i32 [ %v0_ebcc, %.thread24 ], [ %v0_ebcc, %bb134 ], [ %v0_e8b473, %dec_label_pc_e8b0 ]
  %v0_e8a8.pr69 = phi i32 [ 1, %.thread24 ], [ 1, %bb134 ], [ 0, %dec_label_pc_e8b0 ]
  %v7_e8bc = icmp sgt i32 %v0_e8b4, 6
  br i1 %v7_e8bc, label %dec_label_pc_e8c0, label %dec_label_pc_e888.backedge

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e888.backedge, %dec_label_pc_e8b4, %dec_label_pc_e888.preheader
  %v1_e90c = phi i32 [ %v1_e89052, %dec_label_pc_e888.preheader ], [ %v1_e890, %dec_label_pc_e888.backedge ], [ %v0_e89076, %dec_label_pc_e8b4 ]
  %v0_e8c0 = phi i32 [ %v1_e870, %dec_label_pc_e888.preheader ], [ %v0_e8c079, %dec_label_pc_e888.backedge ], [ %v0_e8c081, %dec_label_pc_e8b4 ]
  %v2_e8c0 = icmp eq i32 %v0_e8c0, 0
  br i1 %v2_e8c0, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e8c0
  %v2_e8d4 = add i32 %v1_e90c, %v2_e800
  %v1_e8d8 = add i32 %v2_e8d4, -545
  %v2_e8d8 = inttoptr i32 %v1_e8d8 to i8*
  %v3_e8d8 = load i8, i8* %v2_e8d8, align 1
  %v2_e8dc = icmp eq i8 %v3_e8d8, 0
  br i1 %v2_e8dc, label %dec_label_pc_e900, label %bb135

bb135:                                            ; preds = %dec_label_pc_e8cc
  %v8_e8e0 = icmp eq i8 %v3_e8d8, 32
  br i1 %v8_e8e0, label %dec_label_pc_e900, label %dec_label_pc_e8e8

dec_label_pc_e8e8:                                ; preds = %bb135
  %v2_e8e8 = add i32 %v1_e90c, %v1_e874
  br label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %bb136, %dec_label_pc_e8e8
  %v0_e8f827 = phi i32 [ %v1_e8f8, %bb136 ], [ %v1_e90c, %dec_label_pc_e8e8 ]
  %v0_e8ec = phi i32 [ %v1_e8ec, %bb136 ], [ %v2_e8e8, %dec_label_pc_e8e8 ]
  %v1_e8ec = add i32 %v0_e8ec, 1
  %v2_e8ec = inttoptr i32 %v1_e8ec to i8*
  %v3_e8ec = load i8, i8* %v2_e8ec, align 1
  %v2_e8f0 = icmp eq i8 %v3_e8ec, 0
  br i1 %v2_e8f0, label %.thread26, label %bb136

.thread26:                                        ; preds = %dec_label_pc_e8ec
  %v1_e8f828 = add i32 %v0_e8f827, 1
  br label %dec_label_pc_e900

bb136:                                            ; preds = %dec_label_pc_e8ec
  %v8_e8f4 = icmp eq i8 %v3_e8ec, 32
  %v1_e8f8 = add i32 %v0_e8f827, 1
  br i1 %v8_e8f4, label %dec_label_pc_e900, label %dec_label_pc_e8ec

dec_label_pc_e900:                                ; preds = %bb136, %dec_label_pc_e8cc, %.thread26, %bb135
  %v1_e908 = phi i32 [ %v1_e90c, %dec_label_pc_e8cc ], [ %v1_e8f828, %.thread26 ], [ %v1_e90c, %bb135 ], [ %v1_e8f8, %bb136 ]
  %v2_e908 = add i32 %v1_e908, %v2_e800
  %v2_e90c = add i32 %v1_e90c, %v1_e874
  store i32 %v2_e90c, i32* @r4, align 4
  %v3_e918 = add i32 %v2_e908, -545
  %v4_e918 = inttoptr i32 %v3_e918 to i8*
  store i8 0, i8* %v4_e918, align 1
  %v1_e91c = inttoptr i32 %v2_e90c to i8*
  %v2_e91c = call i32 @function_12e40(i8* %v1_e91c)
  %v8_e924 = icmp sgt i32 %v2_e91c, 15
  br i1 %v8_e924, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %dec_label_pc_e900
  %v0_e92c = load i32, i32* @r4, align 4
  %v2_e930 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e930, i32* @r0, align 4
  %v2_e934 = bitcast i32* %stack_var_-56 to i8*
  %v3_e934 = call i32 @function_12e68(i8* %v2_e934, i32 %v0_e92c)
  br label %dec_label_pc_e938

dec_label_pc_e938.loopexit:                       ; preds = %dec_label_pc_e7a0.backedge, %dec_label_pc_e7a0.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre95 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e938

dec_label_pc_e938:                                ; preds = %dec_label_pc_e938.loopexit, %dec_label_pc_e928
  %v1_e948.pre-phi = phi i8* [ %.pre95, %dec_label_pc_e938.loopexit ], [ %v2_e934, %dec_label_pc_e928 ]
  %v2_e944.pre-phi = phi i32 [ %.pre, %dec_label_pc_e938.loopexit ], [ %v2_e930, %dec_label_pc_e928 ]
  %v0_e938 = load i32, i32* @r8, align 4
  store i32 %v0_e938, i32* @r0, align 4
  %v1_e93c = call i32 @function_1663c(i32 %v0_e938)
  %v2_e948 = call i32 @function_12e40(i8* %v1_e948.pre-phi)
  store i32 %v2_e948, i32* @r4, align 4
  %v2_e94c = icmp eq i32 %v2_e948, 0
  br i1 %v2_e94c, label %dec_label_pc_eba4, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e938
  %v3_e960 = call i32 @function_124ec(i32 6, i32* null)
  store i32 %v3_e960, i32* @r0, align 4
  %v1_e964 = call i32 @function_136d8(i32 %v3_e960)
  store i32 %v1_e964, i32* @sb, align 4
  %v2_e968 = icmp eq i32 %v1_e964, 0
  br i1 %v2_e968, label %dec_label_pc_eb98, label %dec_label_pc_e978.preheader

dec_label_pc_e978.preheader:                      ; preds = %dec_label_pc_e958
  store i32 0, i32* @r5, align 4
  %v1_e97c41 = inttoptr i32 %v1_e964 to i32*
  %v2_e97c42 = call i32 @function_13724(i32* %v1_e97c41)
  %v2_e98044 = icmp eq i32 %v2_e97c42, 0
  br i1 %v2_e98044, label %dec_label_pc_eb8c, label %dec_label_pc_e988.preheader

dec_label_pc_e978.loopexit:                       ; preds = %dec_label_pc_e990, %dec_label_pc_e9a0, %dec_label_pc_ea0c
  %v0_e978 = load i32, i32* @sb, align 4
  %v1_e97c = inttoptr i32 %v0_e978 to i32*
  %v2_e97c = call i32 @function_13724(i32* %v1_e97c)
  %v2_e980 = icmp eq i32 %v2_e97c, 0
  br i1 %v2_e980, label %dec_label_pc_eb8c, label %dec_label_pc_e988.preheader

dec_label_pc_e988.preheader:                      ; preds = %dec_label_pc_e978.preheader, %dec_label_pc_e978.loopexit
  %v0_e99088 = phi i32 [ %v2_e97c, %dec_label_pc_e978.loopexit ], [ %v2_e97c42, %dec_label_pc_e978.preheader ]
  br label %dec_label_pc_e988

dec_label_pc_e988:                                ; preds = %dec_label_pc_e988.preheader, %dec_label_pc_eb74
  %v0_e9a8 = phi i32 [ %v0_e99088, %dec_label_pc_e988.preheader ], [ %v2_eb80, %dec_label_pc_eb74 ]
  %v0_e988 = load i32, i32* @r5, align 4
  %v2_e988 = icmp eq i32 %v0_e988, 0
  br i1 %v2_e988, label %dec_label_pc_e990, label %dec_label_pc_eb8c

dec_label_pc_e990:                                ; preds = %dec_label_pc_e988
  %v1_e990 = add i32 %v0_e9a8, 19
  %v2_e990 = inttoptr i32 %v1_e990 to i8*
  %v3_e990 = load i8, i8* %v2_e990, align 1
  %v4_e990 = zext i8 %v3_e990 to i32
  %v1_e994 = add nsw i32 %v4_e990, -48
  %tmp = icmp ugt i32 %v1_e994, 9
  br i1 %tmp, label %dec_label_pc_e978.loopexit, label %dec_label_pc_e9a0

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e990
  store i32 %v1_e990, i32* @r7, align 4
  %v3_e9ac = call i32 @function_124ec(i32 6, i32* null)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v3_e9b8 = call i32 @function_12e68(i8* %v3_e6fc, i32 %v3_e9ac)
  %v2_e9c0 = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_e9c4 = load i32, i32* @r7, align 4
  %v1_e9c8 = load i32, i32* @sl, align 4
  %v2_e9c8 = add i32 %v1_e9c8, %v2_e9c0
  store i32 %v2_e9c8, i32* @r0, align 4
  %v2_e9cc = inttoptr i32 %v2_e9c8 to i8*
  %v3_e9cc = call i32 @function_12e68(i8* %v2_e9cc, i32 %v0_e9c4)
  %v2_e9d4 = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_e9d8 = load i32, i32* @r5, align 4
  store i32 %v2_e9d4, i32* @r4, align 4
  %v2_e9e4 = inttoptr i32 %v0_e9d8 to i32*
  %v3_e9e4 = call i32 @function_124ec(i32 7, i32* %v2_e9e4)
  %v0_e9ec = load i32, i32* @r4, align 4
  %v1_e9ec = load i32, i32* @sl, align 4
  %v2_e9ec = add i32 %v1_e9ec, %v0_e9ec
  store i32 %v2_e9ec, i32* @r0, align 4
  %v2_e9f0 = inttoptr i32 %v2_e9ec to i8*
  %v3_e9f0 = call i32 @function_12e68(i8* %v2_e9f0, i32 %v3_e9e4)
  store i32 %v2_e6dc, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_ea00 = call i32 @function_166f8(i32 %v2_e6dc, i32 %v2_e6f0, i32 4096)
  %v7_ea04 = icmp eq i32 %v3_ea00, -1
  br i1 %v7_ea04, label %dec_label_pc_e978.loopexit, label %dec_label_pc_ea0c

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e9a0
  %v0_ea0c = load i32, i32* @r5, align 4
  %v2_ea14 = inttoptr i32 %v0_ea0c to i32*
  %v3_ea14 = call i32 @function_124ec(i32 6, i32* %v2_ea14)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v3_ea20 = call i32 @function_12e68(i8* %v3_e6fc, i32 %v3_ea14)
  %v2_ea28 = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_ea2c = load i32, i32* @r7, align 4
  %v1_ea30 = load i32, i32* @sl, align 4
  %v2_ea30 = add i32 %v1_ea30, %v2_ea28
  store i32 %v2_ea30, i32* @r0, align 4
  %v2_ea34 = inttoptr i32 %v2_ea30 to i8*
  %v3_ea34 = call i32 @function_12e68(i8* %v2_ea34, i32 %v0_ea2c)
  %v2_ea3c = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_ea40 = load i32, i32* @r5, align 4
  store i32 %v2_ea3c, i32* @r4, align 4
  %v2_ea4c = inttoptr i32 %v0_ea40 to i32*
  %v3_ea4c = call i32 @function_124ec(i32 9, i32* %v2_ea4c)
  %v0_ea54 = load i32, i32* @r4, align 4
  %v1_ea54 = load i32, i32* @sl, align 4
  %v2_ea54 = add i32 %v1_ea54, %v0_ea54
  store i32 %v2_ea54, i32* @r0, align 4
  %v2_ea58 = inttoptr i32 %v2_ea54 to i8*
  %v3_ea58 = call i32 @function_12e68(i8* %v2_ea58, i32 %v3_ea4c)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v1_ea60 = call i32 @function_136d8(i32 %v2_e6dc)
  store i32 %v1_ea60, i32* @r8, align 4
  %v2_ea64 = icmp eq i32 %v1_ea60, 0
  br i1 %v2_ea64, label %dec_label_pc_e978.loopexit, label %dec_label_pc_ea6c.preheader

dec_label_pc_ea6c.preheader:                      ; preds = %dec_label_pc_ea0c
  %v1_ea7036 = inttoptr i32 %v1_ea60 to i32*
  %v2_ea7037 = call i32 @function_13724(i32* %v1_ea7036)
  store i32 %v2_ea7037, i32* @r6, align 4
  %v2_ea7439 = icmp eq i32 %v2_ea7037, 0
  br i1 %v2_ea7439, label %dec_label_pc_eb74, label %dec_label_pc_ea84thread-pre-split

dec_label_pc_ea6c.loopexit:                       ; preds = %dec_label_pc_ea8c, %dec_label_pc_eb24
  %v0_ea6c = load i32, i32* @r8, align 4
  %v1_ea70 = inttoptr i32 %v0_ea6c to i32*
  %v2_ea70 = call i32 @function_13724(i32* %v1_ea70)
  store i32 %v2_ea70, i32* @r6, align 4
  %v2_ea74 = icmp eq i32 %v2_ea70, 0
  br i1 %v2_ea74, label %dec_label_pc_eb74, label %dec_label_pc_ea84thread-pre-split

dec_label_pc_ea84thread-pre-split:                ; preds = %dec_label_pc_ea6c.preheader, %dec_label_pc_ea6c.loopexit
  %v0_ea84.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_ea84

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea84thread-pre-split, %dec_label_pc_eb4c
  %v0_ea84 = phi i32 [ %v0_ea84.pr, %dec_label_pc_ea84thread-pre-split ], [ 1, %dec_label_pc_eb4c ]
  %v2_ea84 = icmp eq i32 %v0_ea84, 0
  br i1 %v2_ea84, label %dec_label_pc_ea8c, label %dec_label_pc_eb74

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea84
  %v2_ea8c = call i32 @function_12ed4(i32 %v2_e6f0, i32 4096)
  %v0_ea90 = load i32, i32* @r5, align 4
  %v2_ea98 = inttoptr i32 %v0_ea90 to i32*
  %v3_ea98 = call i32 @function_124ec(i32 6, i32* %v2_ea98)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v3_eaa4 = call i32 @function_12e68(i8* %v3_e6fc, i32 %v3_ea98)
  %v2_eaac = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_eab0 = load i32, i32* @r7, align 4
  %v1_eab4 = load i32, i32* @sl, align 4
  %v2_eab4 = add i32 %v1_eab4, %v2_eaac
  store i32 %v2_eab4, i32* @r0, align 4
  %v2_eab8 = inttoptr i32 %v2_eab4 to i8*
  %v3_eab8 = call i32 @function_12e68(i8* %v2_eab8, i32 %v0_eab0)
  %v2_eac0 = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_eac4 = load i32, i32* @r5, align 4
  store i32 %v2_eac0, i32* @r4, align 4
  %v2_ead0 = inttoptr i32 %v0_eac4 to i32*
  %v3_ead0 = call i32 @function_124ec(i32 9, i32* %v2_ead0)
  %v0_ead8 = load i32, i32* @r4, align 4
  %v1_ead8 = load i32, i32* @sl, align 4
  %v2_ead8 = add i32 %v1_ead8, %v0_ead8
  store i32 %v2_ead8, i32* @r0, align 4
  %v2_eadc = inttoptr i32 %v2_ead8 to i8*
  %v3_eadc = call i32 @function_12e68(i8* %v2_eadc, i32 %v3_ead0)
  %v2_eae4 = call i32 @function_12e40(i8* %v3_e6fc)
  %v1_eaec = load i32, i32* @sl, align 4
  %v2_eaec = add i32 %v1_eaec, %v2_eae4
  store i32 %v2_eaec, i32* @r0, align 4
  %v2_eaf0 = inttoptr i32 %v2_eaec to i8*
  %v3_eaf0 = call i32 @function_12e68(i8* %v2_eaf0, i32 ptrtoint (i32* @global_var_1a2a0.21 to i32))
  %v2_eaf8 = call i32 @function_12e40(i8* %v3_e6fc)
  %v0_eafc = load i32, i32* @r6, align 4
  %v1_eafc = add i32 %v0_eafc, 19
  %v1_eb00 = load i32, i32* @sl, align 4
  %v2_eb00 = add i32 %v1_eb00, %v2_eaf8
  store i32 %v2_eb00, i32* @r0, align 4
  %v2_eb04 = inttoptr i32 %v2_eb00 to i8*
  %v3_eb04 = call i32 @function_12e68(i8* %v2_eb04, i32 %v1_eafc)
  store i32 %v2_e6dc, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_eb14 = call i32 @function_166f8(i32 %v2_e6dc, i32 %v2_e6f0, i32 4096)
  %v7_eb18 = icmp eq i32 %v3_eb14, -1
  br i1 %v7_eb18, label %dec_label_pc_ea6c.loopexit, label %dec_label_pc_eb24

dec_label_pc_eb24:                                ; preds = %dec_label_pc_ea8c
  %v2_eb24 = call i32 @function_12e40(i8* %v3_e710)
  store i32 %v2_eb24, i32* @r1, align 4
  %v4_eb38 = call i32 @function_1319c(i8* %v3_e710, i32 %v2_eb24, i32 %v2_e944.pre-phi)
  %v7_eb3c = icmp eq i32 %v4_eb38, -1
  br i1 %v7_eb3c, label %dec_label_pc_ea6c.loopexit, label %dec_label_pc_eb4c

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_eb24
  %v0_eb44 = load i32, i32* @r7, align 4
  %v2_eb4c = inttoptr i32 %v0_eb44 to i8*
  %v3_eb4c = call i32 @function_12f64(i8* %v2_eb4c, i32 10)
  store i32 %v3_eb4c, i32* @r0, align 4
  %v2_eb54 = call i32 @function_158f4(i32 %v3_eb4c, i32 9)
  %v0_eb58 = load i32, i32* @r8, align 4
  %v1_eb5c = inttoptr i32 %v0_eb58 to i32*
  %v2_eb5c = call i32 @function_13724(i32* %v1_eb5c)
  store i32 %v2_eb5c, i32* @r6, align 4
  %v2_eb60 = icmp eq i32 %v2_eb5c, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_eb60, label %dec_label_pc_eb74, label %dec_label_pc_ea84

dec_label_pc_eb74:                                ; preds = %dec_label_pc_ea6c.loopexit, %dec_label_pc_eb4c, %dec_label_pc_ea84, %dec_label_pc_ea6c.preheader
  %v0_eb74 = load i32, i32* @r8, align 4
  %v1_eb78 = inttoptr i32 %v0_eb74 to i32*
  %v2_eb78 = call i32 @function_136a8(i32* %v1_eb78)
  %v0_eb7c = load i32, i32* @sb, align 4
  %v1_eb80 = inttoptr i32 %v0_eb7c to i32*
  %v2_eb80 = call i32 @function_13724(i32* %v1_eb80)
  %v2_eb84 = icmp eq i32 %v2_eb80, 0
  br i1 %v2_eb84, label %dec_label_pc_eb8c, label %dec_label_pc_e988

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_e978.loopexit, %dec_label_pc_eb74, %dec_label_pc_e988, %dec_label_pc_e978.preheader
  %v0_eb8c = load i32, i32* @sb, align 4
  %v1_eb90 = inttoptr i32 %v0_eb8c to i32*
  %v2_eb90 = call i32 @function_136a8(i32* %v1_eb90)
  %v0_eb94 = load i32, i32* @r5, align 4
  %v1_eb94 = urem i32 %v0_eb94, 256
  br label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_e958, %dec_label_pc_eb8c
  %storemerge = phi i32 [ %v1_eb94, %dec_label_pc_eb8c ], [ 0, %dec_label_pc_e958 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_eb9c = call i32 @function_16728(i32 1)
  br label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_e938, %dec_label_pc_eb98
  %v1_eba4 = call i32 @function_12510(i32 6)
  %v1_ebac = call i32 @function_12510(i32 7)
  %v1_ebb4 = call i32 @function_12510(i32 9)
  br label %dec_label_pc_ebb8

dec_label_pc_ebb8:                                ; preds = %dec_label_pc_e770, %dec_label_pc_eba4
  %v0_ebb8 = load i32, i32* @r4, align 4
  store i32 %v3_e6c8, i32* @r4, align 4
  store i32 %v6_e6c8, i32* @r5, align 4
  store i32 %v9_e6c8, i32* @r6, align 4
  store i32 %v12_e6c8, i32* @r7, align 4
  store i32 %v15_e6c8, i32* @r8, align 4
  store i32 %v18_e6c8, i32* @sb, align 4
  store i32 %v21_e6c8, i32* @sl, align 4
  store i32 %v24_e6c8, i32* @fp, align 4
  store i32 %v27_e6c8, i32* @lr, align 4
  ret i32 %v0_ebb8

dec_label_pc_ebcc:                                ; preds = %dec_label_pc_e8a8
  %v1_ebcc = add i32 %v0_ebcc, 1
  %v7_ebd0 = icmp eq i32 %v0_ebcc, 0
  br i1 %v7_ebd0, label %dec_label_pc_ebd8, label %dec_label_pc_e8b0

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebcc
  %v1_ebd8 = add i32 %v0_e8b8, 3
  %v2_ebd8 = inttoptr i32 %v1_ebd8 to i8*
  %v3_ebd8 = load i8, i8* %v2_ebd8, align 1
  %v7_ebdc = icmp eq i8 %v3_ebd8, 65
  br i1 %v7_ebdc, label %dec_label_pc_ebf0, label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebd8, %dec_label_pc_ebf0
  %v0_e8c080 = phi i32 [ %v0_e8c081, %dec_label_pc_ebd8 ], [ 1, %dec_label_pc_ebf0 ]
  br label %dec_label_pc_e888.backedge

dec_label_pc_e888.backedge:                       ; preds = %dec_label_pc_ebe4, %dec_label_pc_e8b4
  %v0_e8c079 = phi i32 [ %v0_e8c080, %dec_label_pc_ebe4 ], [ %v0_e8c081, %dec_label_pc_e8b4 ]
  %v0_ebcc71 = phi i32 [ %v1_ebcc, %dec_label_pc_ebe4 ], [ %v0_e8b4, %dec_label_pc_e8b4 ]
  %v0_e8a8.pr68 = phi i32 [ 0, %dec_label_pc_ebe4 ], [ %v0_e8a8.pr69, %dec_label_pc_e8b4 ]
  %v0_e888 = add i32 %v0_e8b8, 1
  %v1_e888 = add i32 %v0_e8b8, 3
  %v2_e888 = inttoptr i32 %v1_e888 to i8*
  %v3_e888 = load i8, i8* %v2_e888, align 1
  %v2_e88c = icmp eq i8 %v3_e888, 0
  %v1_e890 = add i32 %v0_e89076, 1
  br i1 %v2_e88c, label %dec_label_pc_e8c0, label %dec_label_pc_e898

dec_label_pc_ebf0:                                ; preds = %dec_label_pc_ebd8
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ebe4

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_e6c8
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_e770

; uselistorder directives
  uselistorder i32 %v1_e890, { 1, 0 }
  uselistorder i8 %v3_e888, { 1, 0 }
  uselistorder i32 %v0_e8c079, { 1, 0 }
  uselistorder i32 %v1_ebcc, { 1, 0 }
  uselistorder i32 %v2_eb80, { 1, 0 }
  uselistorder i32 %v1_e8ec, { 1, 0 }
  uselistorder i32 %v0_e8f827, { 1, 0 }
  uselistorder i32 %v1_e90c, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 %v0_e8b4, { 1, 0 }
  uselistorder i32 %v0_e89076, { 1, 0 }
  uselistorder i32 %v0_ebcc, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e8c081, { 1, 2, 0 }
  uselistorder i32 %v1_e89052, { 1, 0 }
  uselistorder i32 %v2_e874, { 1, 0 }
  uselistorder i32 %v1_e870, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_e830, { 0, 2, 1 }
  uselistorder i32 %v0_e83013, { 1, 0 }
  uselistorder i32 %v1_e7fc, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_e790, { 1, 2, 0 }
  uselistorder i8* %v3_e710, { 1, 0, 2 }
  uselistorder i32 %v2_e6f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e6dc, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_130a0, { 1, 0 }
  uselistorder label %dec_label_pc_ebe4, { 1, 0 }
  uselistorder label %dec_label_pc_ebb8, { 1, 0 }
  uselistorder label %dec_label_pc_eba4, { 1, 0 }
  uselistorder label %dec_label_pc_eb98, { 1, 0 }
  uselistorder label %dec_label_pc_eb8c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_eb74, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ea84, { 1, 0 }
  uselistorder label %dec_label_pc_ea84thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_ea6c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e988, { 1, 0 }
  uselistorder label %dec_label_pc_e988.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e978.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e900, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_e8b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e898, { 1, 0 }
  uselistorder label %dec_label_pc_e83c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_e7a0.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_e7f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_e7b8, { 1, 0 }
  uselistorder label %dec_label_pc_e770, { 1, 0 }
}

define i32 @function_ec2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec2c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %v2_ec3c = call i32 @function_165ec(i32* null)
  store i32 %v2_ec3c, i32* @r7, align 4
  %v0_ec44 = call i32 @function_15768()
  %v7_ec48 = icmp eq i32 %v0_ec44, -1
  %. = zext i1 %v7_ec48 to i32
  %tmp220 = icmp slt i32 %v0_ec44, 1
  %storemerge184 = select i1 %tmp220, i32 %., i32 1
  store i32 %storemerge184, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23664.105 to i32), i32* %r3.global-to-local, align 4
  %v2_ec64 = icmp eq i32 %storemerge184, 0
  store i32 %v0_ec44, i32* @global_var_23664.105, align 4
  br i1 %v2_ec64, label %dec_label_pc_ec80, label %dec_label_pc_ec70

dec_label_pc_ec70:                                ; preds = %dec_label_pc_eeac, %dec_label_pc_ed8c, %dec_label_pc_ec2c
  %v1_ec7c = phi i32 [ %v2_ee44, %dec_label_pc_ed8c ], [ %v0_ec44, %dec_label_pc_ec2c ], [ 0, %dec_label_pc_eeac ]
  ret i32 %v1_ec7c

dec_label_pc_ec80:                                ; preds = %dec_label_pc_ec2c
  %v2_ec80 = ptrtoint i32* %stack_var_-248 to i32
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v1_ec94 = call i32 @function_15368(i32 23)
  %v1_ec98 = call i32 @function_e6c8(i32 %v1_ec94)
  %v1_eca0 = call i32 @function_15368(i32 23)
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v0_ecb4 = load i32, i32* @r5, align 4
  store i32 %v0_ecb4, i32* %r2.global-to-local, align 4
  %v3_ecb8 = call i32 @function_15670(i32 2, i32 1, i32 %v0_ecb4)
  %v7_ecbc = icmp eq i32 %v3_ecb8, -1
  store i32 %v3_ecb8, i32* @r4, align 4
  br i1 %v7_ecbc, label %dec_label_pc_ece4, label %dec_label_pc_ecc8

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_ec80
  %v2_eccc = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_ecd4 = call i32 @function_1528c(i32 %v3_ecb8, i32 %v2_eccc, i32 16)
  %v0_ecd8 = load i32, i32* @r4, align 4
  store i32 %v0_ecd8, i32* @r0, align 4
  %v2_ece0 = call i32 @function_154c4(i32 %v0_ecd8, i32 1)
  br label %dec_label_pc_ece4

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ec80, %dec_label_pc_ecc8
  %v1_ece8 = call i32 @function_15368(i32 22)
  %v1_ecec = call i32 @function_e6c8(i32 %v1_ece8)
  %v1_ecf4 = call i32 @function_15368(i32 22)
  %v0_ed00 = load i32, i32* @r5, align 4
  store i32 %v0_ed00, i32* %r2.global-to-local, align 4
  %v3_ed0c = call i32 @function_15670(i32 2, i32 1, i32 %v0_ed00)
  %v7_ed10 = icmp eq i32 %v3_ed0c, -1
  store i32 %v3_ed0c, i32* @r4, align 4
  br i1 %v7_ed10, label %dec_label_pc_ed38, label %dec_label_pc_ed1c

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ece4
  %v2_ed20 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_ed28 = call i32 @function_1528c(i32 %v3_ed0c, i32 %v2_ed20, i32 16)
  %v0_ed2c = load i32, i32* @r4, align 4
  store i32 %v0_ed2c, i32* @r0, align 4
  %v2_ed34 = call i32 @function_154c4(i32 %v0_ed2c, i32 1)
  br label %dec_label_pc_ed38

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ece4, %dec_label_pc_ed1c
  %v1_ed3c = call i32 @function_15368(i32 80)
  %v1_ed40 = call i32 @function_e6c8(i32 %v1_ed3c)
  %v1_ed48 = call i32 @function_15368(i32 80)
  %v0_ed5c = load i32, i32* @r5, align 4
  store i32 %v0_ed5c, i32* %r2.global-to-local, align 4
  %v3_ed60 = call i32 @function_15670(i32 2, i32 1, i32 %v0_ed5c)
  %v7_ed64 = icmp eq i32 %v3_ed60, -1
  store i32 %v3_ed60, i32* @r4, align 4
  br i1 %v7_ed64, label %dec_label_pc_ed8c, label %dec_label_pc_ed70

dec_label_pc_ed70:                                ; preds = %dec_label_pc_ed38
  %v2_ed74 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_ed7c = call i32 @function_1528c(i32 %v3_ed60, i32 %v2_ed74, i32 16)
  %v0_ed80 = load i32, i32* @r4, align 4
  store i32 %v0_ed80, i32* @r0, align 4
  %v2_ed88 = call i32 @function_154c4(i32 %v0_ed80, i32 1)
  br label %dec_label_pc_ed8c

dec_label_pc_ed8c:                                ; preds = %dec_label_pc_ed38, %dec_label_pc_ed70
  %v1_ed90 = call i32 @function_16728(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_ed98 = call i32 @function_14798()
  store i32 ptrtoint (i32* @global_var_2309c.111 to i32), i32* %r3.global-to-local, align 4
  store i32 %v0_ed98, i32* %r2.global-to-local, align 4
  %v0_eda4 = load i32, i32* @r5, align 4
  %v1_eda4 = trunc i32 %v0_eda4 to i8
  %v3_eda4 = inttoptr i32 %v0_ed98 to i8*
  store i8 %v1_eda4, i8* %v3_eda4, align 1
  %v0_eda8 = load i32, i32* @r5, align 4
  %v1_eda8 = load i32, i32* %r3.global-to-local, align 4
  %v2_eda8 = inttoptr i32 %v1_eda8 to i32*
  store i32 %v0_eda8, i32* %v2_eda8, align 4
  store i32 ptrtoint (i32* @global_var_23660.113 to i32), i32* %r3.global-to-local, align 4
  %v0_edb4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_edb4, i32* @global_var_23660.113, align 4
  %v1_edb8 = call i32 @function_125b0(i32 6)
  %v1_edc0 = call i32 @function_125b0(i32 7)
  %v2_edc8 = ptrtoint i32* %stack_var_-4264 to i32
  %v0_edd0 = load i32, i32* @r5, align 4
  %v2_edd8 = inttoptr i32 %v0_edd0 to i32*
  %v3_edd8 = call i32 @function_124ec(i32 6, i32* %v2_edd8)
  %v1_ede0 = add i32 %v2_edc8, -52
  store i32 %v1_ede0, i32* %r2.global-to-local, align 4
  store i32 %v1_ede0, i32* @r0, align 4
  %v2_edf0 = inttoptr i32 %v1_ede0 to i8*
  %v3_edf0 = call i32 @function_12e68(i8* %v2_edf0, i32 %v3_edd8)
  store i32 %v3_edf0, i32* @r0, align 4
  store i32 %v1_ede0, i32* %r3.global-to-local, align 4
  %v2_edf8 = add i32 %v3_edf0, %v1_ede0
  store i32 %v2_edf8, i32* @r4, align 4
  %v1_edfc = call i32 @function_16690(i32 %v3_edf0)
  %v2_ee04 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_ee04, i32* %r2.global-to-local, align 4
  %v3_ee0c = trunc i32 %v1_edfc to i8
  %v4_ee0c = call i32 @function_13340(i8 %v3_ee0c, i32 10, i32 %v2_ee04)
  %v0_ee14 = load i32, i32* @r4, align 4
  store i32 %v0_ee14, i32* @r0, align 4
  %v2_ee18 = inttoptr i32 %v0_ee14 to i8*
  %v3_ee18 = call i32 @function_12e68(i8* %v2_ee18, i32 %v4_ee0c)
  %v0_ee1c = load i32, i32* @r5, align 4
  %v1_ee20 = load i32, i32* @r4, align 4
  %v2_ee20 = add i32 %v1_ee20, %v3_ee18
  store i32 %v2_ee20, i32* @r4, align 4
  %v2_ee28 = inttoptr i32 %v0_ee1c to i32*
  %v3_ee28 = call i32 @function_124ec(i32 7, i32* %v2_ee28)
  %v0_ee30 = load i32, i32* @r4, align 4
  store i32 %v0_ee30, i32* @r0, align 4
  %v2_ee34 = inttoptr i32 %v0_ee30 to i8*
  %v3_ee34 = call i32 @function_12e68(i8* %v2_ee34, i32 %v3_ee28)
  %v0_ee38 = load i32, i32* @r5, align 4
  store i32 %v3_ee34, i32* @r6, align 4
  %v2_ee44 = call i32 @function_13bfc(i32 %v1_ede0, i32 %v0_ee38)
  store i32 %v2_ee44, i32* @r0, align 4
  %v7_ee48 = icmp eq i32 %v2_ee44, -1
  br i1 %v7_ee48, label %dec_label_pc_ec70, label %dec_label_pc_ee50

dec_label_pc_ee50:                                ; preds = %dec_label_pc_ed8c
  %v1_ee50 = call i32 @function_1663c(i32 %v2_ee44)
  %v1_ee58 = call i32 @function_12510(i32 6)
  %v1_ee60 = call i32 @function_12510(i32 7)
  store i32 ptrtoint (i32* @global_var_23660.113 to i32), i32* %r3.global-to-local, align 4
  %v2_ee6c = load i32, i32* @global_var_23660.113, align 4
  store i32 4095, i32* @r2, align 4
  store i32 %v1_ede0, i32* @r0, align 4
  %v3_ee78 = call i32 @function_166f8(i32 %v1_ede0, i32 %v2_ee6c, i32 4095)
  %v7_ee7c = icmp eq i32 %v3_ee78, -1
  br i1 %v7_ee7c, label %.thread9, label %bb223

bb223:                                            ; preds = %dec_label_pc_ee50
  %v3_ee84 = load i32, i32* @global_var_23660.113, align 4
  store i32 %v3_ee84, i32* %r3.global-to-local, align 4
  %v1_ee88 = load i32, i32* @r5, align 4
  %v2_ee88 = trunc i32 %v1_ee88 to i8
  %v5_ee88 = add i32 %v3_ee84, %v3_ee78
  %v6_ee88 = inttoptr i32 %v5_ee88 to i8*
  store i8 %v2_ee88, i8* %v6_ee88, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_ee50, %bb223
  store i32 %v1_ede0, i32* %r2.global-to-local, align 4
  %v0_ee90 = load i32, i32* @r6, align 4
  %v1_ee90 = load i32, i32* @r4, align 4
  %v1_ede0.neg = sub i32 52, %v2_edc8
  %v2_ee90 = add i32 %v1_ede0.neg, %v0_ee90
  %v2_ee94 = add i32 %v2_ee90, %v1_ee90
  %v2_ee9c = call i32 @function_12ed4(i32 %v1_ede0, i32 %v2_ee94)
  %v0_eea0 = load i32, i32* @r7, align 4
  store i32 %v0_eea0, i32* @r4, align 4
  %v0_eea4 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_efb0 = ptrtoint i32* %stack_var_-156 to i32
  %v2_efb4 = bitcast i32* %stack_var_-156 to i8*
  %v2_f000 = ptrtoint i32* %stack_var_-220 to i32
  %v2_f004 = bitcast i32* %stack_var_-220 to i8*
  %v2_f1d0 = ptrtoint i32* %stack_var_-8412 to i32
  br label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_ef74, %.thread9
  %stack_var_-8428.0 = phi i32 [ %v0_eea4, %.thread9 ], [ %stack_var_-8428.3, %dec_label_pc_ef74 ]
  %v1_eeb0 = call i32 @function_125b0(i32 6)
  %v3_eebc = call i32 @function_124ec(i32 6, i32* null)
  store i32 %v3_eebc, i32* @r0, align 4
  %v1_eec0 = call i32 @function_136d8(i32 %v3_eebc)
  store i32 %v1_eec0, i32* @r8, align 4
  %v2_eec4 = icmp eq i32 %v1_eec0, 0
  br i1 %v2_eec4, label %dec_label_pc_ec70, label %dec_label_pc_eecc

dec_label_pc_eecc:                                ; preds = %dec_label_pc_eeac
  %v1_eed0 = call i32 @function_12510(i32 6)
  %v0_eed4119 = load i32, i32* @r8, align 4
  %v1_eed8120 = inttoptr i32 %v0_eed4119 to i32*
  %v2_eed8121 = call i32 @function_13724(i32* %v1_eed8120)
  %v2_eedc123 = icmp eq i32 %v2_eed8121, 0
  br i1 %v2_eedc123, label %dec_label_pc_ef74, label %dec_label_pc_eee4.preheader

dec_label_pc_eee4.preheader:                      ; preds = %dec_label_pc_eecc, %dec_label_pc_eed4.backedge
  %v0_eee4134 = phi i32 [ %v2_eed8, %dec_label_pc_eed4.backedge ], [ %v2_eed8121, %dec_label_pc_eecc ]
  %stack_var_-8428.1124 = phi i32 [ %stack_var_-8428.1.be, %dec_label_pc_eed4.backedge ], [ %stack_var_-8428.0, %dec_label_pc_eecc ]
  br label %dec_label_pc_eee4

dec_label_pc_eee4:                                ; preds = %dec_label_pc_eee4.preheader, %dec_label_pc_ef5c
  %v0_eef4 = phi i32 [ %v2_ef68, %dec_label_pc_ef5c ], [ %v0_eee4134, %dec_label_pc_eee4.preheader ]
  %stack_var_-8428.2 = phi i32 [ %v1_ef08, %dec_label_pc_ef5c ], [ %stack_var_-8428.1124, %dec_label_pc_eee4.preheader ]
  %v1_eee4 = add i32 %v0_eef4, 19
  %v2_eee4 = inttoptr i32 %v1_eee4 to i8*
  %v3_eee4 = load i8, i8* %v2_eee4, align 1
  %v4_eee4 = zext i8 %v3_eee4 to i32
  %v1_eee8 = add nsw i32 %v4_eee4, -48
  store i32 %v1_eee8, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_eee8, 9
  br i1 %tmp, label %dec_label_pc_eed4.backedge, label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eee4
  store i32 %v1_eee4, i32* @r6, align 4
  store i32 %v1_eee4, i32* @r0, align 4
  %v1_eefc = call i32 @function_15a54(i32 %v1_eee4)
  %v0_ef04 = load i32, i32* @r5, align 4
  %v1_ef08 = add i32 %stack_var_-8428.2, 1
  store i32 %v1_ef08, i32* %r3.global-to-local, align 4
  store i32 %v1_eefc, i32* @r7, align 4
  %v5_ef14 = icmp slt i32 %v0_ef04, %v1_eefc
  %v2_ef84 = call i32 @function_165ec(i32* null)
  br i1 %v5_ef14, label %dec_label_pc_ef80, label %dec_label_pc_ef18

dec_label_pc_ef18:                                ; preds = %dec_label_pc_eef4
  %v0_ef20 = load i32, i32* @r4, align 4
  %v2_ef20 = sub i32 %v2_ef84, %v0_ef20
  %v7_ef28 = icmp slt i32 %v2_ef20, 601
  br i1 %v7_ef28, label %dec_label_pc_ef30, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_ef18
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_eed4.backedge

dec_label_pc_ef30:                                ; preds = %dec_label_pc_ef18
  %v0_ef30 = load i32, i32* @r7, align 4
  %v7_ef34 = icmp slt i32 %v0_ef30, 401
  br i1 %v7_ef34, label %dec_label_pc_eed4.backedge, label %dec_label_pc_ef38

dec_label_pc_ef38:                                ; preds = %dec_label_pc_ef30
  %v3_ef40 = zext i32 %v1_ef08 to i64
  %v4_ef40 = mul nuw i64 %v3_ef40, 3435973837
  %v3_ef441 = udiv i64 %v4_ef40, 34359738368
  %v3_ef483 = mul nuw nsw i64 %v3_ef441, 8
  %v3_ef48 = trunc i64 %v3_ef483 to i32
  store i32 %v3_ef48, i32* %r3.global-to-local, align 4
  %v2_ef4c5 = mul nuw nsw i64 %v3_ef441, 2
  %v2_ef4c = trunc i64 %v2_ef4c5 to i32
  %v2_ef50 = add i32 %v3_ef48, %v2_ef4c
  store i32 %v2_ef50, i32* %r2.global-to-local, align 4
  %v9_ef54 = icmp eq i32 %v1_ef08, %v2_ef50
  br i1 %v9_ef54, label %dec_label_pc_ef5c, label %dec_label_pc_eed4.backedge

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ef38
  %v1_ef60 = call i32 @function_16728(i32 1)
  %v0_ef64 = load i32, i32* @r8, align 4
  %v1_ef68 = inttoptr i32 %v0_ef64 to i32*
  %v2_ef68 = call i32 @function_13724(i32* %v1_ef68)
  %v2_ef6c = icmp eq i32 %v2_ef68, 0
  br i1 %v2_ef6c, label %dec_label_pc_ef74, label %dec_label_pc_eee4

dec_label_pc_ef74:                                ; preds = %dec_label_pc_eed4.backedge, %dec_label_pc_ef5c, %dec_label_pc_eecc
  %stack_var_-8428.3 = phi i32 [ %stack_var_-8428.0, %dec_label_pc_eecc ], [ %v1_ef08, %dec_label_pc_ef5c ], [ %stack_var_-8428.1.be, %dec_label_pc_eed4.backedge ]
  %v0_ef74 = load i32, i32* @r8, align 4
  %v1_ef78 = inttoptr i32 %v0_ef74 to i32*
  %v2_ef78 = call i32 @function_136a8(i32* %v1_ef78)
  br label %dec_label_pc_eeac

dec_label_pc_ef80:                                ; preds = %dec_label_pc_eef4
  %v1_ef90 = call i32 @function_125b0(i32 6)
  %v1_ef98 = call i32 @function_125b0(i32 7)
  %v3_efa4 = call i32 @function_124ec(i32 6, i32* null)
  store i32 %v2_efb0, i32* @r0, align 4
  %v3_efb4 = call i32 @function_12e68(i8* %v2_efb4, i32 %v3_efa4)
  store i32 %v2_efb0, i32* %r2.global-to-local, align 4
  %v2_efc0 = add i32 %v3_efb4, %v2_efb0
  %v0_efc4 = load i32, i32* @r6, align 4
  store i32 %v2_efc0, i32* @r0, align 4
  %v2_efcc = inttoptr i32 %v2_efc0 to i8*
  %v3_efcc = call i32 @function_12e68(i8* %v2_efcc, i32 %v0_efc4)
  %v3_efdc = call i32 @function_124ec(i32 7, i32* null)
  %v2_efe4 = add i32 %v2_efc0, %v3_efcc
  store i32 %v2_efe4, i32* @r0, align 4
  %v2_efe8 = inttoptr i32 %v2_efe4 to i8*
  %v3_efe8 = call i32 @function_12e68(i8* %v2_efe8, i32 %v3_efdc)
  %v3_eff4 = call i32 @function_124ec(i32 6, i32* null)
  store i32 %v2_f000, i32* @r0, align 4
  %v3_f004 = call i32 @function_12e68(i8* %v2_f004, i32 %v3_eff4)
  store i32 %v2_f000, i32* %r3.global-to-local, align 4
  %v2_f010 = add i32 %v3_f004, %v2_f000
  store i32 %v2_f010, i32* @r5, align 4
  %v0_f014 = load i32, i32* @r6, align 4
  store i32 %v2_f010, i32* @r0, align 4
  %v2_f01c = inttoptr i32 %v2_f010 to i8*
  %v3_f01c = call i32 @function_12e68(i8* %v2_f01c, i32 %v0_f014)
  store i32 %v3_f01c, i32* @r4, align 4
  %v3_f02c = call i32 @function_124ec(i32 11, i32* null)
  %v0_f034 = load i32, i32* @r4, align 4
  %v1_f034 = load i32, i32* @r5, align 4
  %v2_f034 = add i32 %v1_f034, %v0_f034
  store i32 %v2_f034, i32* @r0, align 4
  %v2_f038 = inttoptr i32 %v2_f034 to i8*
  %v3_f038 = call i32 @function_12e68(i8* %v2_f038, i32 %v3_f02c)
  %v1_f040 = call i32 @function_12510(i32 6)
  %v1_f048 = call i32 @function_12510(i32 7)
  store i32 %v2_efb0, i32* @r0, align 4
  store i32 4095, i32* @r2, align 4
  %v3_f060 = call i32 @function_166f8(i32 %v2_efb0, i32 %v1_ede0, i32 4095)
  %v7_f064 = icmp eq i32 %v3_f060, -1
  store i32 %v3_f060, i32* @r5, align 4
  br i1 %v7_f064, label %dec_label_pc_f128, label %dec_label_pc_f070

dec_label_pc_f070:                                ; preds = %dec_label_pc_ef80
  store i32 0, i32* @r4, align 4
  %v4_f07c = add i32 %v3_f060, %v1_ede0
  %v5_f07c = inttoptr i32 %v4_f07c to i8*
  store i8 0, i8* %v5_f07c, align 1
  %v1_f080 = call i32 @function_125b0(i32 10)
  %v0_f084 = load i32, i32* @r4, align 4
  %v2_f08c = inttoptr i32 %v0_f084 to i32*
  %v3_f08c = call i32 @function_124ec(i32 10, i32* %v2_f08c)
  %v0_f090 = load i32, i32* @r5, align 4
  %v1_f090 = add i32 %v0_f090, -1
  store i32 %v1_f090, i32* @r1, align 4
  store i32 %v3_f08c, i32* %r2.global-to-local, align 4
  %v4_f09c = call i32 @function_1319c(i8* %v2_edf0, i32 %v1_f090, i32 %v3_f08c)
  %v7_f0a0 = icmp eq i32 %v4_f09c, -1
  br i1 %v7_f0a0, label %dec_label_pc_f0bc, label %dec_label_pc_f0a8

dec_label_pc_f0a8:                                ; preds = %dec_label_pc_f070
  store i32 %v1_ede0, i32* @r0, align 4
  %v1_f0ac = call i32 @function_1675c(i32 %v1_ede0)
  %v0_f0b0 = load i32, i32* @r7, align 4
  store i32 %v0_f0b0, i32* @r0, align 4
  %v2_f0b8 = call i32 @function_158f4(i32 %v0_f0b0, i32 9)
  br label %dec_label_pc_f0bc

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_f070, %dec_label_pc_f0a8
  %v1_f0c0 = call i32 @function_12510(i32 10)
  store i32 %v1_f0c0, i32* @r0, align 4
  %v1_f0c4 = call i32 @function_16690(i32 %v1_f0c0)
  store i32 %v1_f0c4, i32* @r0, align 4
  %v0_f0c8 = load i32, i32* @r7, align 4
  %v9_f0c8 = icmp eq i32 %v0_f0c8, %v1_f0c4
  br i1 %v9_f0c8, label %dec_label_pc_f0f4, label %dec_label_pc_f0d0

dec_label_pc_f0d0:                                ; preds = %dec_label_pc_f0bc
  %v0_f0d0 = call i32 @function_166a4()
  %v0_f0d4 = load i32, i32* @r7, align 4
  %v9_f0d4 = icmp eq i32 %v0_f0d4, %v0_f0d0
  br i1 %v9_f0d4, label %dec_label_pc_f0f4, label %dec_label_pc_f0dc

dec_label_pc_f0dc:                                ; preds = %dec_label_pc_f0d0
  store i32 ptrtoint (i32* @global_var_23660.113 to i32), i32* %r2.global-to-local, align 4
  %v2_f0e4 = load i32, i32* @global_var_23660.113, align 4
  %v3_f0e8 = call i32 @function_1322c(i8* %v2_edf0, i32 %v2_f0e4)
  %v2_f0ec = icmp eq i32 %v3_f0e8, 0
  br i1 %v2_f0ec, label %dec_label_pc_f100, label %dec_label_pc_f0dc.dec_label_pc_f0f4_crit_edge

dec_label_pc_f0dc.dec_label_pc_f0f4_crit_edge:    ; preds = %dec_label_pc_f0dc
  %v0_f0f8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f0f4

dec_label_pc_f0f4:                                ; preds = %dec_label_pc_f0dc.dec_label_pc_f0f4_crit_edge, %dec_label_pc_f0d0, %dec_label_pc_f0bc
  %v0_f0f8 = phi i32 [ %v0_f0f8.pre, %dec_label_pc_f0dc.dec_label_pc_f0f4_crit_edge ], [ %v0_f0d0, %dec_label_pc_f0d0 ], [ %v1_f0c4, %dec_label_pc_f0bc ]
  store i32 %v2_ef84, i32* @r4, align 4
  store i32 %v0_f0f8, i32* @r5, align 4
  br label %dec_label_pc_eed4.backedge

dec_label_pc_eed4.backedge:                       ; preds = %dec_label_pc_ef38, %dec_label_pc_ef30, %dec_label_pc_eee4, %dec_label_pc_f0f4, %dec_label_pc_f3b4, %.thread10
  %stack_var_-8428.1.be = phi i32 [ %v1_ef08, %dec_label_pc_f3b4 ], [ %v1_ef08, %dec_label_pc_f0f4 ], [ %v1_ef08, %.thread10 ], [ %stack_var_-8428.2, %dec_label_pc_eee4 ], [ %v1_ef08, %dec_label_pc_ef30 ], [ %v1_ef08, %dec_label_pc_ef38 ]
  %v0_eed4 = load i32, i32* @r8, align 4
  %v1_eed8 = inttoptr i32 %v0_eed4 to i32*
  %v2_eed8 = call i32 @function_13724(i32* %v1_eed8)
  %v2_eedc = icmp eq i32 %v2_eed8, 0
  br i1 %v2_eedc, label %dec_label_pc_ef74, label %dec_label_pc_eee4.preheader

dec_label_pc_f100:                                ; preds = %dec_label_pc_f0dc
  %v2_f108 = call i32 @function_13bfc(i32 %v1_ede0, i32 0)
  %v7_f10c = icmp eq i32 %v2_f108, -1
  store i32 %v2_f108, i32* @r4, align 4
  br i1 %v7_f10c, label %bb224, label %.thread12

bb224:                                            ; preds = %dec_label_pc_f100
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_f100, %bb224
  store i32 ptrtoint (i32* @global_var_f120.116 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_f10c, i32 ptrtoint (i32* @global_var_158f4.115 to i32))
  %v0_f120 = load i32, i32* @r4, align 4
  store i32 %v0_f120, i32* @r0, align 4
  %v1_f124 = call i32 @function_1663c(i32 %v0_f120)
  br label %dec_label_pc_f128

dec_label_pc_f128:                                ; preds = %dec_label_pc_ef80, %.thread12
  %v2_f134 = call i32 @function_13bfc(i32 %v2_efb0, i32 0)
  %v7_f138 = icmp eq i32 %v2_f134, -1
  br i1 %v7_f138, label %dec_label_pc_f3b4, label %dec_label_pc_f144

dec_label_pc_f144:                                ; preds = %dec_label_pc_f128
  %v1_f148 = call i32 @function_125b0(i32 12)
  %v1_f150 = call i32 @function_125b0(i32 13)
  %v1_f158 = call i32 @function_125b0(i32 14)
  %v1_f160 = call i32 @function_125b0(i32 15)
  %v1_f168 = call i32 @function_125b0(i32 16)
  %v3_f178 = call i32 @function_124ec(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v3_f178, i32* @r6, align 4
  %v3_f18c = call i32 @function_124ec(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v3_f18c, i32* @sl, align 4
  %v3_f1a0 = call i32 @function_124ec(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v3_f1a0, i32* @sb, align 4
  %v3_f1b0 = call i32 @function_124ec(i32 15, i32* nonnull %stack_var_-56)
  store i32 %v3_f1b0, i32* @fp, align 4
  %v3_f1c4 = call i32 @function_124ec(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v2_f1d0, i32* @r4, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_f1e0116 = call i32 @function_166b8(i32 %v2_f134, i32 %v2_f1d0, i32 4096)
  %tmp225 = icmp slt i32 %v3_f1e0116, 1
  br i1 %tmp225, label %dec_label_pc_f3e8, label %dec_label_pc_f1ec

dec_label_pc_f1ec:                                ; preds = %dec_label_pc_f144, %dec_label_pc_f1d4.backedge
  %v0_f274107 = phi i32 [ %v3_f1e0, %dec_label_pc_f1d4.backedge ], [ %v3_f1e0116, %dec_label_pc_f144 ]
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v3_f1f0 = load i32, i32* %stack_var_-44, align 4
  %v5_f1f8 = icmp slt i32 %v0_f274107, %v3_f1f0
  br i1 %v5_f1f8, label %dec_label_pc_f208, label %dec_label_pc_f2b4.lr.ph

dec_label_pc_f2b4.lr.ph:                          ; preds = %dec_label_pc_f1ec
  %v0_f2b4.pre = load i32, i32* @r6, align 4
  %v1_f2b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f2b4

dec_label_pc_f208:                                ; preds = %dec_label_pc_f2ac.backedge, %dec_label_pc_f1ec
  %v3_f20c = load i32, i32* %stack_var_-48, align 4
  %v5_f214 = icmp slt i32 %v0_f274107, %v3_f20c
  br i1 %v5_f214, label %dec_label_pc_f224, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_f208
  %v2_f2e082 = icmp eq i32 %v0_f274107, 0
  br i1 %v2_f2e082, label %dec_label_pc_f224, label %dec_label_pc_f2e8.lr.ph

dec_label_pc_f2e8.lr.ph:                          ; preds = %.thread28
  %v0_f2e8.pre = load i32, i32* @sl, align 4
  %v1_f2ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f2e8

dec_label_pc_f224:                                ; preds = %dec_label_pc_f2e0.backedge, %.thread28, %dec_label_pc_f208
  store i32 %v2_ec80, i32* %r2.global-to-local, align 4
  %v3_f228 = load i32, i32* %stack_var_-52, align 4
  %v5_f230 = icmp slt i32 %v0_f274107, %v3_f228
  br i1 %v5_f230, label %dec_label_pc_f240, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_f224
  %v2_f31491 = icmp eq i32 %v0_f274107, 0
  br i1 %v2_f31491, label %dec_label_pc_f240, label %dec_label_pc_f31c.lr.ph

dec_label_pc_f31c.lr.ph:                          ; preds = %.thread37
  %v0_f31c.pre = load i32, i32* @sb, align 4
  %v1_f320.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f31c

dec_label_pc_f240:                                ; preds = %dec_label_pc_f314.backedge, %.thread37, %dec_label_pc_f224
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v3_f244 = load i32, i32* %stack_var_-56, align 4
  %v5_f24c = icmp slt i32 %v0_f274107, %v3_f244
  br i1 %v5_f24c, label %dec_label_pc_f25c, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_f240
  %v2_f348100 = icmp eq i32 %v0_f274107, 0
  br i1 %v2_f348100, label %dec_label_pc_f25c, label %dec_label_pc_f350.lr.ph

dec_label_pc_f350.lr.ph:                          ; preds = %.thread46
  %v0_f350.pre = load i32, i32* @fp, align 4
  %v1_f354.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f350

dec_label_pc_f25c:                                ; preds = %dec_label_pc_f348.backedge, %.thread46, %dec_label_pc_f240
  %v3_f260 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f260, i32* @lr, align 4
  %v5_f268 = icmp slt i32 %v0_f274107, %v3_f260
  br i1 %v5_f268, label %dec_label_pc_f1d4.backedge, label %.thread52

dec_label_pc_f1d4.backedge:                       ; preds = %dec_label_pc_f294, %.thread52, %dec_label_pc_f25c
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_f1e0 = call i32 @function_166b8(i32 %v2_f134, i32 %v2_f1d0, i32 4096)
  %tmp226 = icmp slt i32 %v3_f1e0, 1
  br i1 %tmp226, label %dec_label_pc_f3e8, label %dec_label_pc_f1ec

.thread52:                                        ; preds = %dec_label_pc_f25c
  %v2_f274109 = icmp eq i32 %v0_f274107, 0
  br i1 %v2_f274109, label %dec_label_pc_f1d4.backedge, label %dec_label_pc_f27c.lr.ph

dec_label_pc_f27c.lr.ph:                          ; preds = %.thread52
  %v1_f284.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f27c

dec_label_pc_f27c:                                ; preds = %dec_label_pc_f294, %dec_label_pc_f27c.lr.ph
  %v0_f274.in = phi i32 [ %v0_f274107, %dec_label_pc_f27c.lr.ph ], [ %v0_f274, %dec_label_pc_f294 ]
  %v0_f294 = phi i32 [ 0, %dec_label_pc_f27c.lr.ph ], [ %v1_f294, %dec_label_pc_f294 ]
  %v1_f280 = phi i32 [ 0, %dec_label_pc_f27c.lr.ph ], [ %v1_f280174, %dec_label_pc_f294 ]
  %v0_f274 = add i32 %v0_f274.in, -1
  store i32 %v3_f1c4, i32* %r3.global-to-local, align 4
  %v2_f280 = add i32 %v1_f280, %v3_f1c4
  %v3_f280 = inttoptr i32 %v2_f280 to i8*
  %v4_f280 = load i8, i8* %v3_f280, align 1
  %v6_f280 = zext i8 %v4_f280 to i32
  store i32 %v6_f280, i32* %r2.global-to-local, align 4
  %v2_f284 = add i32 %v0_f294, %v1_f284.pre
  %v3_f284 = inttoptr i32 %v2_f284 to i8*
  %v4_f284 = load i8, i8* %v3_f284, align 1
  %v6_f284 = zext i8 %v4_f284 to i32
  store i32 %v6_f284, i32* %r3.global-to-local, align 4
  %v9_f288 = icmp eq i8 %v4_f284, %v4_f280
  br i1 %v9_f288, label %dec_label_pc_f36c, label %bb227

bb227:                                            ; preds = %dec_label_pc_f27c
  br label %dec_label_pc_f294

dec_label_pc_f294:                                ; preds = %bb227, %dec_label_pc_f36c
  %v1_f280174 = phi i32 [ %v1_f36c, %dec_label_pc_f36c ], [ 0, %bb227 ]
  %v1_f294 = add i32 %v0_f294, 1
  %v2_f274 = icmp eq i32 %v0_f274, 0
  br i1 %v2_f274, label %dec_label_pc_f1d4.backedge, label %dec_label_pc_f27c

dec_label_pc_f29c:                                ; preds = %dec_label_pc_f2b4
  %v1_f29c = add i32 %v1_f2b4, 1
  store i32 %v1_f29c, i32* @lr, align 4
  %v9_f2a0 = icmp eq i32 %v3_f1f0, %v1_f29c
  br i1 %v9_f2a0, label %dec_label_pc_f378, label %dec_label_pc_f2ac.backedge

dec_label_pc_f2ac.backedge:                       ; preds = %dec_label_pc_f29c, %dec_label_pc_f2c8
  %v1_f2b4139 = phi i32 [ 0, %dec_label_pc_f2c8 ], [ %v1_f29c, %dec_label_pc_f29c ]
  %storemerge127 = add i32 %storemerge127.in, 1
  %v2_f2ac = icmp eq i32 %v0_f2ac, 0
  br i1 %v2_f2ac, label %dec_label_pc_f208, label %dec_label_pc_f2b4

dec_label_pc_f2b4:                                ; preds = %dec_label_pc_f2ac.backedge, %dec_label_pc_f2b4.lr.ph
  %v0_f2ac.in = phi i32 [ %v0_f274107, %dec_label_pc_f2b4.lr.ph ], [ %v0_f2ac, %dec_label_pc_f2ac.backedge ]
  %storemerge127.in = phi i32 [ 0, %dec_label_pc_f2b4.lr.ph ], [ %storemerge127, %dec_label_pc_f2ac.backedge ]
  %v1_f2b4 = phi i32 [ 0, %dec_label_pc_f2b4.lr.ph ], [ %v1_f2b4139, %dec_label_pc_f2ac.backedge ]
  %v0_f2ac = add i32 %v0_f2ac.in, -1
  %v2_f2b4 = add i32 %v1_f2b4, %v0_f2b4.pre
  %v3_f2b4 = inttoptr i32 %v2_f2b4 to i8*
  %v4_f2b4 = load i8, i8* %v3_f2b4, align 1
  %v6_f2b4 = zext i8 %v4_f2b4 to i32
  store i32 %v6_f2b4, i32* %r2.global-to-local, align 4
  %v2_f2b8 = add i32 %storemerge127.in, %v1_f2b8.pre
  %v3_f2b8 = inttoptr i32 %v2_f2b8 to i8*
  %v4_f2b8 = load i8, i8* %v3_f2b8, align 1
  %v6_f2b8 = zext i8 %v4_f2b8 to i32
  store i32 %v6_f2b8, i32* %r3.global-to-local, align 4
  %v9_f2bc = icmp eq i8 %v4_f2b8, %v4_f2b4
  br i1 %v9_f2bc, label %dec_label_pc_f29c, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %dec_label_pc_f2b4
  br label %dec_label_pc_f2ac.backedge

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f2e8
  %v1_f2d0 = add i32 %v1_f2e8, 1
  store i32 %v1_f2d0, i32* @lr, align 4
  %v9_f2d4 = icmp eq i32 %v3_f20c, %v1_f2d0
  br i1 %v9_f2d4, label %dec_label_pc_f378, label %dec_label_pc_f2e0.backedge

dec_label_pc_f2e0.backedge:                       ; preds = %dec_label_pc_f2d0, %dec_label_pc_f2fc
  %v1_f2e8148 = phi i32 [ 0, %dec_label_pc_f2fc ], [ %v1_f2d0, %dec_label_pc_f2d0 ]
  %storemerge126 = add i32 %storemerge126.in, 1
  %v2_f2e0 = icmp eq i32 %v0_f2e0, 0
  br i1 %v2_f2e0, label %dec_label_pc_f224, label %dec_label_pc_f2e8

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2e0.backedge, %dec_label_pc_f2e8.lr.ph
  %v0_f2e0.in = phi i32 [ %v0_f274107, %dec_label_pc_f2e8.lr.ph ], [ %v0_f2e0, %dec_label_pc_f2e0.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_f2e8.lr.ph ], [ %storemerge126, %dec_label_pc_f2e0.backedge ]
  %v1_f2e8 = phi i32 [ 0, %dec_label_pc_f2e8.lr.ph ], [ %v1_f2e8148, %dec_label_pc_f2e0.backedge ]
  %v0_f2e0 = add i32 %v0_f2e0.in, -1
  %v2_f2e8 = add i32 %v1_f2e8, %v0_f2e8.pre
  %v3_f2e8 = inttoptr i32 %v2_f2e8 to i8*
  %v4_f2e8 = load i8, i8* %v3_f2e8, align 1
  %v6_f2e8 = zext i8 %v4_f2e8 to i32
  store i32 %v6_f2e8, i32* %r2.global-to-local, align 4
  %v2_f2ec = add i32 %storemerge126.in, %v1_f2ec.pre
  %v3_f2ec = inttoptr i32 %v2_f2ec to i8*
  %v4_f2ec = load i8, i8* %v3_f2ec, align 1
  %v6_f2ec = zext i8 %v4_f2ec to i32
  store i32 %v6_f2ec, i32* %r3.global-to-local, align 4
  %v9_f2f0 = icmp eq i8 %v4_f2ec, %v4_f2e8
  br i1 %v9_f2f0, label %dec_label_pc_f2d0, label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %dec_label_pc_f2e8
  br label %dec_label_pc_f2e0.backedge

dec_label_pc_f304:                                ; preds = %dec_label_pc_f31c
  %v1_f304 = add i32 %v1_f31c, 1
  store i32 %v1_f304, i32* @lr, align 4
  %v9_f308 = icmp eq i32 %v3_f228, %v1_f304
  br i1 %v9_f308, label %dec_label_pc_f378, label %dec_label_pc_f314.backedge

dec_label_pc_f314.backedge:                       ; preds = %dec_label_pc_f304, %dec_label_pc_f330
  %v1_f31c157 = phi i32 [ 0, %dec_label_pc_f330 ], [ %v1_f304, %dec_label_pc_f304 ]
  %storemerge125 = add i32 %storemerge125.in, 1
  %v2_f314 = icmp eq i32 %v0_f314, 0
  br i1 %v2_f314, label %dec_label_pc_f240, label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %dec_label_pc_f314.backedge, %dec_label_pc_f31c.lr.ph
  %v0_f314.in = phi i32 [ %v0_f274107, %dec_label_pc_f31c.lr.ph ], [ %v0_f314, %dec_label_pc_f314.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_f31c.lr.ph ], [ %storemerge125, %dec_label_pc_f314.backedge ]
  %v1_f31c = phi i32 [ 0, %dec_label_pc_f31c.lr.ph ], [ %v1_f31c157, %dec_label_pc_f314.backedge ]
  %v0_f314 = add i32 %v0_f314.in, -1
  %v2_f31c = add i32 %v1_f31c, %v0_f31c.pre
  %v3_f31c = inttoptr i32 %v2_f31c to i8*
  %v4_f31c = load i8, i8* %v3_f31c, align 1
  %v6_f31c = zext i8 %v4_f31c to i32
  store i32 %v6_f31c, i32* %r2.global-to-local, align 4
  %v2_f320 = add i32 %storemerge125.in, %v1_f320.pre
  %v3_f320 = inttoptr i32 %v2_f320 to i8*
  %v4_f320 = load i8, i8* %v3_f320, align 1
  %v6_f320 = zext i8 %v4_f320 to i32
  store i32 %v6_f320, i32* %r3.global-to-local, align 4
  %v9_f324 = icmp eq i8 %v4_f320, %v4_f31c
  br i1 %v9_f324, label %dec_label_pc_f304, label %dec_label_pc_f330

dec_label_pc_f330:                                ; preds = %dec_label_pc_f31c
  br label %dec_label_pc_f314.backedge

dec_label_pc_f338:                                ; preds = %dec_label_pc_f350
  %v1_f338 = add i32 %v1_f350, 1
  store i32 %v1_f338, i32* @lr, align 4
  %v9_f33c = icmp eq i32 %v3_f244, %v1_f338
  br i1 %v9_f33c, label %dec_label_pc_f378, label %dec_label_pc_f348.backedge

dec_label_pc_f348.backedge:                       ; preds = %dec_label_pc_f338, %dec_label_pc_f364
  %v1_f350166 = phi i32 [ 0, %dec_label_pc_f364 ], [ %v1_f338, %dec_label_pc_f338 ]
  %storemerge = add i32 %storemerge.in, 1
  %v2_f348 = icmp eq i32 %v0_f348, 0
  br i1 %v2_f348, label %dec_label_pc_f25c, label %dec_label_pc_f350

dec_label_pc_f350:                                ; preds = %dec_label_pc_f348.backedge, %dec_label_pc_f350.lr.ph
  %v0_f348.in = phi i32 [ %v0_f274107, %dec_label_pc_f350.lr.ph ], [ %v0_f348, %dec_label_pc_f348.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_f350.lr.ph ], [ %storemerge, %dec_label_pc_f348.backedge ]
  %v1_f350 = phi i32 [ 0, %dec_label_pc_f350.lr.ph ], [ %v1_f350166, %dec_label_pc_f348.backedge ]
  %v0_f348 = add i32 %v0_f348.in, -1
  %v2_f350 = add i32 %v1_f350, %v0_f350.pre
  %v3_f350 = inttoptr i32 %v2_f350 to i8*
  %v4_f350 = load i8, i8* %v3_f350, align 1
  %v6_f350 = zext i8 %v4_f350 to i32
  store i32 %v6_f350, i32* %r2.global-to-local, align 4
  %v2_f354 = add i32 %storemerge.in, %v1_f354.pre
  %v3_f354 = inttoptr i32 %v2_f354 to i8*
  %v4_f354 = load i8, i8* %v3_f354, align 1
  %v6_f354 = zext i8 %v4_f354 to i32
  store i32 %v6_f354, i32* %r3.global-to-local, align 4
  %v9_f358 = icmp eq i8 %v4_f354, %v4_f350
  br i1 %v9_f358, label %dec_label_pc_f338, label %dec_label_pc_f364

dec_label_pc_f364:                                ; preds = %dec_label_pc_f350
  br label %dec_label_pc_f348.backedge

dec_label_pc_f36c:                                ; preds = %dec_label_pc_f27c
  %v1_f36c = add i32 %v1_f280, 1
  %v9_f370 = icmp eq i32 %v3_f260, %v1_f36c
  br i1 %v9_f370, label %dec_label_pc_f378, label %dec_label_pc_f294

dec_label_pc_f378:                                ; preds = %dec_label_pc_f29c, %dec_label_pc_f2d0, %dec_label_pc_f304, %dec_label_pc_f338, %dec_label_pc_f36c
  %v1_f37c = call i32 @function_12510(i32 12)
  %v1_f384 = call i32 @function_12510(i32 13)
  %v1_f38c = call i32 @function_12510(i32 14)
  %v1_f394 = call i32 @function_12510(i32 15)
  %v1_f39c = call i32 @function_12510(i32 16)
  store i32 %v2_f134, i32* @r0, align 4
  %v1_f3a4 = call i32 @function_1663c(i32 %v2_f134)
  %v0_f3a8 = load i32, i32* @r7, align 4
  store i32 %v0_f3a8, i32* @r0, align 4
  %v2_f3b0 = call i32 @function_158f4(i32 %v0_f3a8, i32 9)
  br label %dec_label_pc_f3b4

dec_label_pc_f3b4:                                ; preds = %dec_label_pc_f128, %dec_label_pc_f3e8, %dec_label_pc_f378
  %v2_f3c0 = call i32 @function_12ed4(i32 %v2_efb0, i32 64)
  %v2_f3d0 = call i32 @function_12ed4(i32 %v2_f000, i32 64)
  %v1_f3d8 = call i32 @function_16728(i32 1)
  store i32 %v2_ef84, i32* @r4, align 4
  %v0_f3e0 = load i32, i32* @r7, align 4
  store i32 %v0_f3e0, i32* @r5, align 4
  br label %dec_label_pc_eed4.backedge

dec_label_pc_f3e8:                                ; preds = %dec_label_pc_f1d4.backedge, %dec_label_pc_f144
  %v1_f3ec = call i32 @function_12510(i32 12)
  %v1_f3f4 = call i32 @function_12510(i32 13)
  %v1_f3fc = call i32 @function_12510(i32 14)
  %v1_f404 = call i32 @function_12510(i32 15)
  %v1_f40c = call i32 @function_12510(i32 16)
  store i32 %v2_f134, i32* @r0, align 4
  %v1_f414 = call i32 @function_1663c(i32 %v2_f134)
  br label %dec_label_pc_f3b4

; uselistorder directives
  uselistorder i32 %v1_f36c, { 1, 0 }
  uselistorder i32 %v1_f280, { 1, 0 }
  uselistorder i32 %v0_f294, { 1, 0 }
  uselistorder i32 %v3_f1e0, { 1, 0 }
  uselistorder i32 %v0_f274107, { 2, 1, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_f134, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i1 %v7_f10c, { 1, 0 }
  uselistorder i32 %v2_f108, { 1, 0 }
  uselistorder i32 %v2_eed8, { 1, 0 }
  uselistorder i32 %stack_var_-8428.1.be, { 1, 0 }
  uselistorder i32 %v3_f060, { 1, 2, 0 }
  uselistorder i32 %v2_ef68, { 1, 0 }
  uselistorder i32 %v1_ef08, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_eee4, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8428.0, { 1, 0 }
  uselistorder i32 %v2_f1d0, { 1, 0, 2 }
  uselistorder i32 %v2_f000, { 1, 0, 2, 3 }
  uselistorder i32 %v2_efb0, { 1, 2, 4, 3, 0, 5, 6 }
  uselistorder i32 %v3_ee78, { 1, 0 }
  uselistorder i32 %v2_ee44, { 2, 0, 3, 1 }
  uselistorder i32 %v3_edf0, { 1, 0, 2 }
  uselistorder i32 %v1_ede0, { 4, 3, 2, 0, 5, 7, 6, 9, 8, 10, 1, 11, 12, 13, 14 }
  uselistorder i32 %v3_ed60, { 1, 2, 0 }
  uselistorder i32 %v3_ed0c, { 1, 2, 0 }
  uselistorder i32 %v3_ecb8, { 1, 2, 0 }
  uselistorder i32 %storemerge184, { 1, 0 }
  uselistorder i32 %v0_ec44, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i8*, i32, i32)* @function_1319c, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32*)* @function_13724, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_136d8, { 2, 1, 0 }
  uselistorder i32 52, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_166f8, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_23660.113, { 2, 0, 3, 1, 4 }
  uselistorder i32* @global_var_23664.105, { 0, 2, 1 }
  uselistorder label %dec_label_pc_f3b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f378, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f348.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f314.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f2e0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f2ac.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f294, { 1, 0 }
  uselistorder label %dec_label_pc_f1ec, { 1, 0 }
  uselistorder label %dec_label_pc_f128, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_eed4.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_f0bc, { 1, 0 }
  uselistorder label %dec_label_pc_eee4, { 1, 0 }
  uselistorder label %dec_label_pc_eee4.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_ed8c, { 1, 0 }
  uselistorder label %dec_label_pc_ed38, { 1, 0 }
  uselistorder label %dec_label_pc_ece4, { 1, 0 }
}

define i32 @function_f42c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f42c:
  store i32 ptrtoint (i32* @global_var_f5c4.118 to i32), i32* @global_var_23040.120, align 4
  ret i32 %arg1
}

define i32 @function_f444() local_unnamed_addr {
dec_label_pc_f444:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_f444 = load i32, i32* @r4, align 4
  %v6_f444 = load i32, i32* @r5, align 4
  %v9_f444 = load i32, i32* @r6, align 4
  %v12_f444 = load i32, i32* @r7, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_f460 = call i32 @function_15670(i32 2, i32 1, i32 0)
  store i32 %v3_f460, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23038.122 to i32), i32* @r6, align 4
  %v7_f468 = icmp eq i32 %v3_f460, -1
  store i32 %v3_f460, i32* @global_var_23038.122, align 4
  br i1 %v7_f468, label %dec_label_pc_f51c, label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %dec_label_pc_f444
  %v2_f474 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_f474, i32* @r3, align 4
  %v0_f478 = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  store i32 2, i32* @r2, align 4
  %v5_f488 = call i32 @function_15600(i32 %v3_f460, i32 %v0_f478, i32 2, i32 %v2_f474, i32 4)
  %v2_f48c = load i32, i32* @global_var_23038.122, align 4
  store i32 %v2_f48c, i32* @r4, align 4
  %v3_f49c = call i32 @function_13a84(i32 %v2_f48c, i32 3, i32 0)
  store i32 ptrtoint (i8** @global_var_23044.124 to i32), i32* @r7, align 4
  %v1_f4a4 = or i32 %v3_f49c, 2048
  %v0_f4a8 = load i32, i32* @r5, align 4
  %v0_f4ac = load i32, i32* @r4, align 4
  %v3_f4b0 = call i32 @function_13a84(i32 %v0_f4ac, i32 %v0_f4a8, i32 %v1_f4a4)
  %v2_f4b4 = load i8, i8* bitcast (i8** @global_var_23044.124 to i8*), align 4
  %v2_f4b8 = icmp eq i8 %v2_f4b4, 0
  store i32 2, i32* %stack_var_-44, align 4
  br i1 %v2_f4b8, label %dec_label_pc_f4c8, label %dec_label_pc_f528

dec_label_pc_f4c8:                                ; preds = %dec_label_pc_f474
  br label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f528, %dec_label_pc_f4c8
  %v1_f4dc = call i32 @function_15368(i32 48101)
  %v0_f4e4 = call i32 @function_139e8()
  store i32 0, i32* @r4, align 4
  %v2_f4ec = inttoptr i32 %v0_f4e4 to i32*
  store i32 0, i32* %v2_f4ec, align 4
  %v2_f4f0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_f4f0, i32* @r5, align 4
  %v2_f4f4 = load i32, i32* @global_var_23038.122, align 4
  store i32 16, i32* @r2, align 4
  %v3_f500 = call i32 @function_1528c(i32 %v2_f4f4, i32 %v2_f4f0, i32 16)
  %v7_f504 = icmp eq i32 %v3_f500, -1
  br i1 %v7_f504, label %dec_label_pc_f53c, label %dec_label_pc_f50c

dec_label_pc_f50c:                                ; preds = %dec_label_pc_f4d0
  %v2_f514 = load i32, i32* @global_var_23038.122, align 4
  store i32 %v2_f514, i32* @r0, align 4
  %v2_f518 = call i32 @function_154c4(i32 %v2_f514, i32 1)
  br label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f444, %dec_label_pc_f54c, %dec_label_pc_f50c
  %v1_f524 = phi i32 [ %v3_f460, %dec_label_pc_f444 ], [ %v0_f59c, %dec_label_pc_f54c ], [ %v2_f518, %dec_label_pc_f50c ]
  store i32 %v3_f444, i32* @r4, align 4
  store i32 %v6_f444, i32* @r5, align 4
  store i32 %v9_f444, i32* @r6, align 4
  store i32 %v12_f444, i32* @r7, align 4
  ret i32 %v1_f524

dec_label_pc_f528:                                ; preds = %dec_label_pc_f474
  %v1_f530 = call i32 @function_15344(i32 2130706433)
  br label %dec_label_pc_f4d0

dec_label_pc_f53c:                                ; preds = %dec_label_pc_f4d0
  %v0_f53c = call i32 @function_139e8()
  %v1_f540 = inttoptr i32 %v0_f53c to i32*
  %v2_f540 = load i32, i32* %v1_f540, align 4
  %v7_f544 = icmp eq i32 %v2_f540, 99
  br i1 %v7_f544, label %dec_label_pc_f5a4, label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f5a4, %bb, %dec_label_pc_f53c
  store i32 2, i32* %stack_var_-44, align 4
  %v1_f564 = call i32 @function_15368(i32 48101)
  %v2_f574 = load i32, i32* @global_var_23038.122, align 4
  %v3_f578 = call i32 @function_152b4(i32 %v2_f574, i32 %v2_f4f0, i32 16)
  %v1_f580 = call i32 @function_16728(i32 5)
  %v2_f584 = load i32, i32* @global_var_23038.122, align 4
  store i32 %v2_f584, i32* @r0, align 4
  %v1_f588 = call i32 @function_1663c(i32 %v2_f584)
  %v1_f594 = call i32 @function_15368(i32 48101)
  %v1_f598 = call i32 @function_e6c8(i32 %v1_f594)
  %v0_f59c = call i32 @function_f444()
  br label %dec_label_pc_f51c

dec_label_pc_f5a4:                                ; preds = %dec_label_pc_f53c
  %v2_f5a4 = load i8, i8* bitcast (i8** @global_var_23044.124 to i8*), align 4
  %v3_f5a4 = zext i8 %v2_f5a4 to i32
  %v1_f5a8 = load i32, i32* @r4, align 4
  %v9_f5a8 = icmp eq i32 %v3_f5a4, %v1_f5a8
  br i1 %v9_f5a8, label %dec_label_pc_f54c, label %bb

bb:                                               ; preds = %dec_label_pc_f5a4
  %v2_f5b0 = trunc i32 %v1_f5a8 to i8
  store i8 %v2_f5b0, i8* bitcast (i8** @global_var_23044.124 to i8*), align 4
  br label %dec_label_pc_f54c

; uselistorder directives
  uselistorder i32 %v3_f460, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_e6c8, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_154c4, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1528c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23044.124 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_23044.124, { 1, 0 }
  uselistorder i32* @global_var_23038.122, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_f54c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f51c, { 1, 2, 0 }
}

define i32 @function_f5c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5c4:
  %v1_f5cc = call i32 @function_125b0(i32 3)
  %v3_f5d8 = call i32 @function_124ec(i32 3, i32* null)
  %v1_f5dc = call i32 @function_10390(i32 %v3_f5d8)
  store i32 %v1_f5dc, i32* @r6, align 4
  %v1_f5e8 = call i32 @function_12510(i32 3)
  %v0_f5ec = load i32, i32* @r6, align 4
  %v2_f5ec = icmp eq i32 %v0_f5ec, 0
  br i1 %v2_f5ec, label %dec_label_pc_f63c, label %dec_label_pc_f5f4

dec_label_pc_f5f4:                                ; preds = %dec_label_pc_f5c4
  %v1_f5f4 = add i32 %v0_f5ec, 4
  %v2_f5f4 = inttoptr i32 %v1_f5f4 to i32*
  %v3_f5f4 = load i32, i32* %v2_f5f4, align 4
  store i32 %v3_f5f4, i32* @r4, align 4
  %v0_f5f8 = call i32 @function_1008c()
  %v0_f5fc = load i32, i32* @r6, align 4
  %v1_f5fc = inttoptr i32 %v0_f5fc to i8*
  %v2_f5fc = load i8, i8* %v1_f5fc, align 1
  %v3_f5fc = zext i8 %v2_f5fc to i32
  %v2_f600 = call i32 @function_13538(i32 %v0_f5f8, i32 %v3_f5fc)
  store i32 ptrtoint (i16** @global_var_23668.127 to i32), i32* @r5, align 4
  %v0_f608 = load i32, i32* @r4, align 4
  %v4_f608 = mul nuw nsw i32 %v3_f5fc, 4
  %v5_f608 = add i32 %v0_f608, %v4_f608
  %v6_f608 = inttoptr i32 %v5_f608 to i32*
  %v7_f608 = load i32, i32* %v6_f608, align 4
  %v0_f60c = load i32, i32* @r6, align 4
  store i32 %v7_f608, i32* @global_var_2366c.128, align 4
  %v1_f614 = call i32 @function_10368(i32 %v0_f60c)
  %v1_f61c = call i32 @function_125b0(i32 4)
  %v3_f628 = call i32 @function_124ec(i32 4, i32* null)
  %v4_f628 = inttoptr i32 %v3_f628 to i16*
  %v3_f62c = load i16, i16* %v4_f628, align 2
  store i16 %v3_f62c, i16* bitcast (i32* @global_var_2366a.129 to i16*), align 4
  %v1_f638 = call i32 @function_12510(i32 4)
  br label %dec_label_pc_f63c

dec_label_pc_f63c:                                ; preds = %dec_label_pc_f5c4, %dec_label_pc_f5f4
  %v1_f640 = phi i32 [ %v1_f5e8, %dec_label_pc_f5c4 ], [ %v1_f638, %dec_label_pc_f5f4 ]
  ret i32 %v1_f640

; uselistorder directives
  uselistorder label %dec_label_pc_f63c, { 1, 0 }
}

define i32 @function_f648(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_f648:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-76 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-142 = alloca i32, align 4
  %stack_var_-174 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-110 = alloca i8, align 1
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %v9_f648 = load i32, i32* @r6, align 4
  %v2_f658 = ptrtoint i32* %stack_var_-340 to i32
  store i32 %v2_f658, i32* @r4, align 4
  store i32 %arg1, i32* @sb, align 4
  %v2_f660 = load i32, i32* %arg2, align 4
  store i32 %v2_f660, i32* @r0, align 4
  store i32 %tmp, i32* @sl, align 4
  %v1_f668 = call i32 @function_1675c(i32 %v2_f660)
  %v2_f670 = call i32 @function_159c0(i32* nonnull %stack_var_-340)
  %v2_f67c = call i32 @function_15958(i32 %v2_f658, i32 2)
  store i32 0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v0_f68c = call i32 @function_15a2c()
  %v2_f698 = call i32 @function_159d4(i32 17, i32 1)
  %v2_f6a4 = call i32 @function_159d4(i32 5, i32 62508)
  %v3_f6b0 = call i32 @function_13bfc(i32 ptrtoint ([14 x i8]* @global_var_1a2f0.132 to i32), i32 2)
  %v7_f6b4 = icmp eq i32 %v3_f6b0, -1
  store i32 %v3_f6b0, i32* @r4, align 4
  br i1 %v7_f6b4, label %dec_label_pc_fa64, label %dec_label_pc_f6c0

dec_label_pc_f6c0:                                ; preds = %dec_label_pc_fa64, %dec_label_pc_f648
  %v0_f6d4 = phi i32 [ %v3_fa6c, %dec_label_pc_fa64 ], [ %v3_f6b0, %dec_label_pc_f648 ]
  store i32 %v0_f6d4, i32* @r0, align 4
  %v2_f6d8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 1, i32* %stack_var_-52, align 4
  %v5_f6e0 = call i32 @function_150c0(i32 %v0_f6d4, i32 -2147199228, i32 %v2_f6d8, i32 1, i32 1)
  %v0_f6e4 = load i32, i32* @r4, align 4
  store i32 %v0_f6e4, i32* @r0, align 4
  %v1_f6e8 = call i32 @function_1663c(i32 %v0_f6e4)
  br label %dec_label_pc_f6ec

dec_label_pc_f6ec:                                ; preds = %dec_label_pc_fa64, %dec_label_pc_f6c0
  store i32 ptrtoint (i32* @global_var_1a2a0.21 to i32), i32* @r0, align 4
  %v1_f6f0 = call i32 @function_16620(i32 ptrtoint (i32* @global_var_1a2a0.21 to i32))
  %v0_f6f4 = call i32 @function_130fc()
  store i32 ptrtoint (i16** @global_var_23668.127 to i32), i32* @r4, align 4
  store i32 %v0_f6f4, i32* @global_var_2365c.93, align 4
  store i16 2, i16* bitcast (i16** @global_var_23668.127 to i16*), align 4
  %v1_f710 = call i32 @function_15344(i32 1105119797)
  store i32 %v1_f710, i32* @global_var_2366c.128, align 4
  %v1_f71c = call i32 @function_15368(i32 80)
  %v2_f71c = trunc i32 %v1_f71c to i16
  %v2_f724 = ptrtoint i8* %stack_var_-110 to i32
  store i32 %v2_f724, i32* @fp, align 4
  store i16 %v2_f71c, i16* bitcast (i32* @global_var_2366a.129 to i16*), align 4
  %v0_f738 = load i32, i32* @sl, align 4
  %v1_f738 = inttoptr i32 %v0_f738 to i32*
  %v2_f738 = load i32, i32* %v1_f738, align 4
  store i32 %v2_f738, i32* @r8, align 4
  %v4_f73c = bitcast i8* %stack_var_-110 to i16*
  %v5_f73c = call i32 @function_15c0c(i16* %v4_f73c, i32 ptrtoint ([3 x i8]* @global_var_1a344.138 to i32), i32 18)
  store i32 ptrtoint (i32* @global_var_1a340.153 to i32), i32* @r4, align 4
  %v13_f75c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v13_f75c, i32* @lr, align 4
  store i32 62508, i32* %stack_var_-180, align 4
  br i1 icmp eq (i32 add (i32 add (i32 ptrtoint (i32* @global_var_12510.148 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_f444.141 to i32), i32 ptrtoint (i32* @global_var_125b0.143 to i32)), i32 74988), i32 ptrtoint (i32* @global_var_12650.146 to i32))), i32 155868), i32 0), label %dec_label_pc_f7a4, label %dec_label_pc_f8b0

dec_label_pc_f7a4:                                ; preds = %dec_label_pc_f6ec, %dec_label_pc_f8b0, %dec_label_pc_fa58
  %v2_f7a8 = ptrtoint i32* %stack_var_-174 to i32
  store i32 %v2_f7a8, i32* @fp, align 4
  %v0_f7ac = call i32 @function_f444()
  %v1_f7b0 = call i32 @function_100e8(i32 %v0_f7ac)
  %v2_f7bc = call i32 @function_12ed4(i32 %v2_f7a8, i32 32)
  %v0_f7c0 = load i32, i32* @sb, align 4
  %v7_f7c0 = icmp eq i32 %v0_f7c0, 2
  br i1 %v7_f7c0, label %dec_label_pc_fa80, label %dec_label_pc_f7c8

dec_label_pc_f7c8:                                ; preds = %dec_label_pc_fa80, %dec_label_pc_f7a4, %dec_label_pc_fa90
  %v0_f7c8 = call i32 @function_1008c()
  %v1_f7cc = mul i32 %v0_f7c8, 4
  %v3_f7d0 = and i32 %v1_f7cc, 12
  %v2_f7d8 = ptrtoint i32* %stack_var_-142 to i32
  store i32 %v2_f7d8, i32* @r5, align 4
  %v1_f7dc = add nuw nsw i32 %v3_f7d0, 12
  store i32 %v1_f7dc, i32* @r4, align 4
  %v2_f7e8 = bitcast i32* %stack_var_-142 to i8*
  %v3_f7e8 = call i32 @function_10150(i8* %v2_f7e8, i32 %v1_f7dc)
  %v2_f7ec = ptrtoint i32* %stack_var_-40 to i32
  %v1_f7f0 = load i32, i32* @r4, align 4
  %v2_f7f0 = add i32 %v1_f7f0, %v2_f7ec
  store i32 0, i32* @r6, align 4
  %v0_f7fc = load i32, i32* @sl, align 4
  %v1_f7fc = inttoptr i32 %v0_f7fc to i32*
  %v2_f7fc = load i32, i32* %v1_f7fc, align 4
  store i32 %v2_f7fc, i32* @r0, align 4
  %v3_f800 = add i32 %v2_f7f0, -102
  %v4_f800 = inttoptr i32 %v3_f800 to i8*
  store i8 0, i8* %v4_f800, align 1
  %v2_f804 = inttoptr i32 %v2_f7fc to i8*
  %v3_f804 = call i32 @function_12e68(i8* %v2_f804, i32 %v2_f7d8)
  %v0_f808 = call i32 @function_1008c()
  store i32 0, i32* @r3, align 4
  %v3_f824 = mul i32 %v0_f808, 4
  %v1_f828 = add i32 %v3_f824, 12
  store i32 %v1_f828, i32* @r4, align 4
  %v3_f834 = call i32 @function_10150(i8* %v2_f7e8, i32 %v1_f828)
  store i32 %v2_f7ec, i32* @lr, align 4
  %v1_f83c = load i32, i32* @r4, align 4
  %v2_f83c = add i32 %v1_f83c, %v2_f7ec
  %v0_f840 = load i32, i32* @r6, align 4
  %v1_f840 = trunc i32 %v0_f840 to i8
  %v3_f840 = add i32 %v2_f83c, -102
  %v4_f840 = inttoptr i32 %v3_f840 to i8*
  store i8 %v1_f840, i8* %v4_f840, align 1
  %v2_f84c = call i32 @function_13cc8(i32 15, i32 %v2_f7d8)
  %v1_f854 = call i32 @function_125b0(i32 2)
  %v3_f864 = call i32 @function_124ec(i32 2, i32* nonnull %stack_var_-48)
  %v3_f868 = load i32, i32* %stack_var_-48, align 4
  %v3_f874 = call i32 @function_16774(i32 1, i32 %v3_f864, i32 %v3_f868)
  %v3_f884 = call i32 @function_16774(i32 1, i32 ptrtoint (i32* @global_var_1a314.156 to i32), i32 1)
  %v1_f88c = call i32 @function_12510(i32 2)
  %v0_f890 = call i32 @function_15768()
  %v1_f894 = load i32, i32* @r6, align 4
  store i32 %v9_f648, i32* %r6.global-to-local, align 4
  ret i32 %v1_f894

dec_label_pc_f8b0:                                ; preds = %dec_label_pc_f6ec
  %v0_f8b8 = load i32, i32* @r8, align 4
  %v1_f8c4 = inttoptr i32 %v0_f8b8 to i8*
  %v2_f8c4 = call i32 @function_12e40(i8* %v1_f8c4)
  %v2_f8d0 = call i32 @function_1367c(i32 2, i32 %v2_f8c4)
  %v0_f8dc = load i32, i32* @r8, align 4
  %v2_f8e0 = add i32 %v0_f8dc, %v2_f8c4
  %v3_f8e0 = inttoptr i32 %v2_f8e0 to i8*
  %v4_f8e0 = load i8, i8* %v3_f8e0, align 1
  %v6_f8e0 = zext i8 %v4_f8e0 to i32
  store i32 %v6_f8e0, i32* @r4, align 4
  %v1_f8ec = inttoptr i32 %v0_f8dc to i8*
  %v2_f8ec = call i32 @function_12e40(i8* %v1_f8ec)
  %v2_f8f8 = call i32 @function_1367c(i32 4, i32 %v2_f8ec)
  %v0_f904 = load i32, i32* @r8, align 4
  %v2_f908 = add i32 %v0_f904, %v2_f8ec
  %v3_f908 = inttoptr i32 %v2_f908 to i8*
  %v4_f908 = load i8, i8* %v3_f908, align 1
  %v6_f908 = zext i8 %v4_f908 to i32
  store i32 %v6_f908, i32* @r7, align 4
  %v1_f914 = inttoptr i32 %v0_f904 to i8*
  %v2_f914 = call i32 @function_12e40(i8* %v1_f914)
  %v2_f920 = call i32 @function_1367c(i32 6, i32 %v2_f914)
  %v0_f92c = load i32, i32* @r8, align 4
  %v2_f930 = add i32 %v0_f92c, %v2_f914
  %v3_f930 = inttoptr i32 %v2_f930 to i8*
  %v4_f930 = load i8, i8* %v3_f930, align 1
  %v6_f930 = zext i8 %v4_f930 to i32
  store i32 %v6_f930, i32* %r6.global-to-local, align 4
  %v1_f93c = inttoptr i32 %v0_f92c to i8*
  %v2_f93c = call i32 @function_12e40(i8* %v1_f93c)
  %v2_f948 = call i32 @function_1367c(i32 8, i32 %v2_f93c)
  %v0_f954 = load i32, i32* @r8, align 4
  %v2_f958 = add i32 %v0_f954, %v2_f93c
  %v3_f958 = inttoptr i32 %v2_f958 to i8*
  %v4_f958 = load i8, i8* %v3_f958, align 1
  %v6_f958 = zext i8 %v4_f958 to i32
  store i32 %v6_f958, i32* @r5, align 4
  %v1_f964 = inttoptr i32 %v0_f954 to i8*
  %v2_f964 = call i32 @function_12e40(i8* %v1_f964)
  %v2_f970 = call i32 @function_1367c(i32 10, i32 %v2_f964)
  %v0_f974 = load i32, i32* @r4, align 4
  %v1_f974 = urem i32 %v0_f974, 256
  %v0_f97c = load i32, i32* @r7, align 4
  %v1_f97c = urem i32 %v0_f97c, 256
  %v1_f980 = xor i32 %v1_f97c, 255
  store i32 %v1_f980, i32* @r7, align 4
  %v0_f984 = load i32, i32* %r6.global-to-local, align 4
  %v1_f988 = sub nsw i32 174, %v1_f974
  %v1_f984 = urem i32 %v0_f984, 256
  %v1_f98c = xor i32 %v1_f984, 255
  store i32 %v1_f98c, i32* @r6, align 4
  %v0_f990 = load i32, i32* @r5, align 4
  %v1_f990 = sub i32 -1, %v0_f990
  %v2_f994 = add nsw i32 %v1_f980, %v1_f988
  %v0_f998 = load i32, i32* @r8, align 4
  %v2_f998 = add i32 %v0_f998, %v2_f964
  %v3_f998 = inttoptr i32 %v2_f998 to i8*
  %v4_f998 = load i8, i8* %v3_f998, align 1
  %v6_f998 = zext i8 %v4_f998 to i32
  %v2_f9a0 = add nsw i32 %v1_f98c, %v2_f994
  %v1_f9b0 = sub nuw nsw i32 -1, %v6_f998
  %fold15 = add i32 %v2_f9a0, %v1_f990
  %v1_f9b4 = urem i32 %fold15, 256
  %v2_f9bc = add nsw i32 %v1_f9b4, %v1_f9b0
  store i32 %v2_f9bc, i32* @r4, align 4
  %v1_f9c8 = inttoptr i32 %v0_f998 to i8*
  %v2_f9c8 = call i32 @function_12e40(i8* %v1_f9c8)
  %v2_f9d4 = call i32 @function_1367c(i32 12, i32 %v2_f9c8)
  %v0_f9d8 = load i32, i32* @r8, align 4
  %v2_f9d8 = add i32 %v0_f9d8, %v2_f9c8
  %v3_f9d8 = inttoptr i32 %v2_f9d8 to i8*
  %v4_f9d8 = load i8, i8* %v3_f9d8, align 1
  %v6_f9d8 = zext i8 %v4_f9d8 to i32
  %v0_f9dc = load i32, i32* @r4, align 4
  %v1_f9e0 = sub nuw nsw i32 -1, %v6_f9d8
  %fold = add i32 %v0_f9dc, %v1_f9e0
  %v1_f9ec = urem i32 %fold, 256
  %v3_f9f4 = udiv i32 %v1_f9ec, 9
  %v2_fa00 = sub i32 %fold, %v3_f9f4
  %v2_fa08 = ptrtoint i32* %stack_var_-40 to i32
  %v1_fa04 = mul i32 %v2_fa00, 4
  %v3_fa0c = and i32 %v1_fa04, 1020
  %v2_fa14 = add i32 %v3_fa0c, %v2_fa08
  %v2_fa18 = ptrtoint i8* %stack_var_-76 to i32
  store i32 %v2_fa18, i32* @r5, align 4
  %v1_fa1c = add i32 %v2_fa14, -172
  %v2_fa1c = inttoptr i32 %v1_fa1c to i32*
  %v3_fa1c = load i32, i32* %v2_fa1c, align 4
  store i32 64040, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_fa1c)
  %v0_fa2c = load i32, i32* @r8, align 4
  %v2_fa30 = inttoptr i32 %v0_fa2c to i8*
  %v3_fa30 = call i32 @function_1322c(i8* %v2_fa30, i32 %v2_fa18)
  store i32 %v3_fa30, i32* @r4, align 4
  %v2_fa40 = call i32 @function_12ed4(i32 %v2_f724, i32 18)
  %v2_fa4c = call i32 @function_12ed4(i32 %v2_fa18, i32 12)
  %v0_fa50 = load i32, i32* @r4, align 4
  %v2_fa50 = icmp eq i32 %v0_fa50, 0
  br i1 %v2_fa50, label %dec_label_pc_f7a4, label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %dec_label_pc_f8b0
  %v1_fa5c = call i32 @function_1590c(i32 5)
  br label %dec_label_pc_f7a4

dec_label_pc_fa64:                                ; preds = %dec_label_pc_f648
  %v3_fa6c = call i32 @function_13bfc(i32 ptrtoint ([19 x i8]* @global_var_1a300.159 to i32), i32 2)
  %v3_fa70 = icmp eq i32 %v3_fa6c, -1
  store i32 %v3_fa6c, i32* @r4, align 4
  br i1 %v3_fa70, label %dec_label_pc_f6ec, label %dec_label_pc_f6c0

dec_label_pc_fa80:                                ; preds = %dec_label_pc_f7a4
  %v0_fa80 = load i32, i32* @sl, align 4
  %v1_fa80 = add i32 %v0_fa80, 4
  %v2_fa80 = inttoptr i32 %v1_fa80 to i32*
  %v3_fa80 = load i32, i32* %v2_fa80, align 4
  %v1_fa84 = inttoptr i32 %v3_fa80 to i8*
  %v2_fa84 = call i32 @function_12e40(i8* %v1_fa84)
  %v8_fa8c = icmp sgt i32 %v2_fa84, 31
  br i1 %v8_fa8c, label %dec_label_pc_f7c8, label %dec_label_pc_fa90

dec_label_pc_fa90:                                ; preds = %dec_label_pc_fa80
  %v0_fa90 = load i32, i32* @sl, align 4
  %v1_fa90 = add i32 %v0_fa90, 4
  %v2_fa90 = inttoptr i32 %v1_fa90 to i32*
  %v3_fa90 = load i32, i32* %v2_fa90, align 4
  store i32 %v2_f7a8, i32* @r0, align 4
  %v2_fa98 = bitcast i32* %stack_var_-174 to i8*
  %v3_fa98 = call i32 @function_12e68(i8* %v2_fa98, i32 %v3_fa90)
  %v0_fa9c = load i32, i32* @sl, align 4
  %v1_fa9c = add i32 %v0_fa9c, 4
  %v2_fa9c = inttoptr i32 %v1_fa9c to i32*
  %v3_fa9c = load i32, i32* %v2_fa9c, align 4
  %v1_faa4 = inttoptr i32 %v3_fa9c to i8*
  %v2_faa4 = call i32 @function_12e40(i8* %v1_faa4)
  %v2_fab0 = call i32 @function_12ed4(i32 %v3_fa9c, i32 %v2_faa4)
  br label %dec_label_pc_f7c8

; uselistorder directives
  uselistorder i32 %v3_fa6c, { 1, 2, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v0_f998, { 1, 0 }
  uselistorder i32 %v0_f954, { 1, 0 }
  uselistorder i32 %v0_f92c, { 1, 0 }
  uselistorder i32 %v0_f904, { 1, 0 }
  uselistorder i32 %v0_f8dc, { 1, 0 }
  uselistorder i32 %v2_f7ec, { 0, 2, 1 }
  uselistorder i32 %v2_f7d8, { 1, 0, 2 }
  uselistorder i32 %v0_f6d4, { 1, 0 }
  uselistorder i32 %v3_f6b0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1367c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_16774, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_12e68, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 26, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ()* @function_f444, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_23668.127 to i32), { 1, 0 }
  uselistorder i32 47, { 4, 5, 0, 6, 1, 7, 2, 8, 9, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2a0.21 to i32), { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32)* @function_159d4, { 1, 0 }
  uselistorder i32 (i32)* @function_1675c, { 1, 0 }
  uselistorder label %dec_label_pc_f7c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f7a4, { 2, 1, 0 }
}

define i32 @function_1008c() local_unnamed_addr {
dec_label_pc_1008c:
  %v2_10098 = load i32, i32* @global_var_230a4.172, align 4
  %v2_1009c = load i32, i32* @global_var_230b0.174, align 4
  %v4_100a8 = mul i32 %v2_10098, 2048
  %v5_100a8 = xor i32 %v4_100a8, %v2_10098
  store i32 %v5_100a8, i32* @r3, align 4
  %v4_100ac = udiv i32 %v2_1009c, 524288
  %v5_100ac = xor i32 %v4_100ac, %v2_1009c
  %v2_100b0 = load i32, i32* @global_var_230a8.176, align 4
  %v2_100b4 = load i32, i32* @global_var_230ac.178, align 4
  store i32 %v2_100b4, i32* @ip, align 4
  %v2_100b8 = xor i32 %v5_100ac, %v5_100a8
  %v4_100bc = udiv i32 %v5_100a8, 256
  %v5_100bc = xor i32 %v2_100b8, %v4_100bc
  store i32 %v2_100b0, i32* @global_var_230a4.172, align 4
  store i32 %v2_100b4, i32* @global_var_230a8.176, align 4
  store i32 %v2_1009c, i32* @global_var_230ac.178, align 4
  store i32 %v5_100bc, i32* @global_var_230b0.174, align 4
  ret i32 %v5_100bc

; uselistorder directives
  uselistorder i32 %v2_1009c, { 2, 1, 0 }
  uselistorder i32 %v2_10098, { 1, 0 }
}

define i32 @function_100e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100e8:
  %v3_100e8 = load i32, i32* @r4, align 4
  %v6_100e8 = load i32, i32* @r5, align 4
  %v2_100f4 = call i32 @function_165ec(i32* null)
  store i32 %v2_100f4, i32* @r0, align 4
  store i32 %v2_100f4, i32* @global_var_230a4.172, align 4
  %v1_10100 = call i32 @function_16690(i32 %v2_100f4)
  store i32 %v1_10100, i32* @r0, align 4
  store i32 %v1_10100, i32* @r4, align 4
  %v0_10108 = call i32 @function_166a4()
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* @r5, align 4
  %v1_10110 = load i32, i32* @r4, align 4
  %v2_10110 = xor i32 %v1_10110, %v0_10108
  store i32 %v2_10110, i32* @global_var_230a8.176, align 4
  %v1_10118 = call i32 @function_16470(i32 %v2_10110)
  %v2_1011c = load i32, i32* @global_var_230a8.176, align 4
  %v2_10128 = xor i32 %v2_1011c, %v1_10118
  store i32 %v2_10128, i32* @global_var_230b0.174, align 4
  store i32 %v1_10118, i32* @global_var_230ac.178, align 4
  store i32 %v3_100e8, i32* @r4, align 4
  store i32 %v6_100e8, i32* @r5, align 4
  ret i32 %v1_10118

; uselistorder directives
  uselistorder i32 %v1_10118, { 1, 2, 0 }
  uselistorder i32 ()* @function_166a4, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_16690, { 0, 2, 1 }
}

define i32 @function_10150(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10150:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %v12_10150 = load i32, i32* @r7, align 4
  %v15_10150 = load i32, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1a358.184 to i32), i32* %r1.global-to-local, align 4
  %v2_10164 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_10164, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r2.global-to-local, align 4
  %v4_1016c = bitcast i32* %stack_var_-73 to i16*
  %v5_1016c = call i32 @function_15c0c(i16* %v4_1016c, i32 ptrtoint ([33 x i8]* @global_var_1a358.184 to i32), i32 33)
  store i32 %v5_1016c, i32* %r0.global-to-local, align 4
  %v0_10170 = load i32, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_10170 = icmp slt i32 %v0_10170, 0
  store i1 %v1_10170, i1* %cpsr_n.global-to-local, align 1
  %v2_10170 = icmp eq i32 %v0_10170, 0
  store i1 %v2_10170, i1* %cpsr_z.global-to-local, align 1
  %tmp24 = icmp slt i32 %v0_10170, 1
  br i1 %tmp24, label %dec_label_pc_10268, label %dec_label_pc_10178

dec_label_pc_10178:                               ; preds = %dec_label_pc_10150
  store i32 ptrtoint (i32* @global_var_230b0.174 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230ac.178 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a4.172 to i32), i32* %r3.global-to-local, align 4
  %v2_10188 = load i32, i32* @global_var_230b0.174, align 4
  store i32 %v2_10188, i32* %r5.global-to-local, align 4
  %v2_1018c = load i32, i32* @global_var_230ac.178, align 4
  store i32 %v2_1018c, i32* %sb.global-to-local, align 4
  %v2_10190 = load i32, i32* @global_var_230a8.176, align 4
  store i32 %v2_10190, i32* %sl.global-to-local, align 4
  %v2_10194 = load i32, i32* @global_var_230a4.172, align 4
  store i32 %v2_10194, i32* %r0.global-to-local, align 4
  %v2_101a0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10204

dec_label_pc_1019c:                               ; preds = %dec_label_pc_10204
  %v1_1019c = urem i32 %v5_10214, 256
  store i32 %v1_1019c, i32* %r3.global-to-local, align 4
  store i32 %v2_101a0, i32* %r1.global-to-local, align 4
  %v4_101a4 = udiv i32 %v1_1019c, 8
  %v5_101a4 = add i32 %v4_101a4, %v2_101a0
  store i32 %v5_101a4, i32* %r2.global-to-local, align 4
  %v1_101a8 = add i32 %v5_101a4, -33
  %v2_101a8 = inttoptr i32 %v1_101a8 to i8*
  %v3_101a8 = load i8, i8* %v2_101a8, align 1
  %v4_101a8 = zext i8 %v3_101a8 to i32
  store i32 %v4_101a8, i32* %r0.global-to-local, align 4
  %v3_101ac = mul i32 %v5_10214, 65536
  store i32 %v3_101ac, i32* %r1.global-to-local, align 4
  store i32 %v2_101a0, i32* %r2.global-to-local, align 4
  %tmp25 = udiv i32 %v5_10214, 2048
  %v4_101b4 = urem i32 %tmp25, 32
  %v5_101b4 = add i32 %v4_101b4, %v2_101a0
  store i32 %v5_101b4, i32* %r3.global-to-local, align 4
  %v1_101b8 = add i32 %v5_101b4, -33
  %v2_101b8 = inttoptr i32 %v1_101b8 to i8*
  %v3_101b8 = load i8, i8* %v2_101b8, align 1
  %v4_101b8 = zext i8 %v3_101b8 to i32
  store i32 %v4_101b8, i32* %ip.global-to-local, align 4
  %v3_101bc = mul i32 %v5_10214, 256
  store i32 %v3_101bc, i32* %r2.global-to-local, align 4
  %v3_101c0 = inttoptr i32 %v0_10218 to i8*
  store i8 %v3_101a8, i8* %v3_101c0, align 1
  %v4_101c0 = load i32, i32* %r6.global-to-local, align 4
  %v5_101c0 = add i32 %v4_101c0, 1
  store i32 %v5_101c0, i32* %r6.global-to-local, align 4
  %v1_101c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_101c8 = udiv i32 %v1_101c8, 134217728
  %v5_101c8 = add i32 %v4_101c8, %v2_101a0
  store i32 %v5_101c8, i32* %r1.global-to-local, align 4
  %v1_101cc = load i32, i32* %r4.global-to-local, align 4
  %v4_101cc = udiv i32 %v1_101cc, 134217728
  %v5_101cc = add i32 %v4_101cc, %v2_101a0
  store i32 %v5_101cc, i32* %r3.global-to-local, align 4
  %v1_101d0 = add i32 %v5_101c8, -33
  %v2_101d0 = inttoptr i32 %v1_101d0 to i8*
  %v3_101d0 = load i8, i8* %v2_101d0, align 1
  %v4_101d0 = zext i8 %v3_101d0 to i32
  store i32 %v4_101d0, i32* %lr.global-to-local, align 4
  %v1_101d4 = add i32 %v5_101cc, -33
  %v2_101d4 = inttoptr i32 %v1_101d4 to i8*
  %v3_101d4 = load i8, i8* %v2_101d4, align 1
  %v4_101d4 = zext i8 %v3_101d4 to i32
  store i32 %v4_101d4, i32* %r2.global-to-local, align 4
  %v0_101d8 = load i32, i32* @r7, align 4
  %v1_101d8 = add i32 %v0_101d8, -4
  store i32 %v1_101d8, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_101dc = icmp slt i32 %v1_101d8, 0
  store i1 %v1_101dc, i1* %cpsr_n.global-to-local, align 1
  %v2_101dc = icmp eq i32 %v1_101d8, 0
  store i1 %v2_101dc, i1* %cpsr_z.global-to-local, align 1
  %v0_101e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_101e0 = trunc i32 %v0_101e0 to i8
  %v2_101e0 = load i32, i32* @r8, align 4
  %v3_101e0 = add i32 %v2_101e0, 1
  %v4_101e0 = inttoptr i32 %v3_101e0 to i8*
  store i8 %v1_101e0, i8* %v4_101e0, align 1
  %v0_101e4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_101e4, i32* %r0.global-to-local, align 4
  %v0_101e8 = load i32, i32* @r8, align 4
  %v1_101e8 = add i32 %v0_101e8, 4
  store i32 %v1_101e8, i32* @r8, align 4
  %v0_101ec = load i32, i32* %r2.global-to-local, align 4
  %v1_101ec = trunc i32 %v0_101ec to i8
  %v2_101ec = load i32, i32* %r6.global-to-local, align 4
  %v3_101ec = add i32 %v2_101ec, 2
  %v4_101ec = inttoptr i32 %v3_101ec to i8*
  store i8 %v1_101ec, i8* %v4_101ec, align 1
  %v0_101f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_101f0 = trunc i32 %v0_101f0 to i8
  %v2_101f0 = load i32, i32* %r6.global-to-local, align 4
  %v3_101f0 = add i32 %v2_101f0, 1
  %v4_101f0 = inttoptr i32 %v3_101f0 to i8*
  store i8 %v1_101f0, i8* %v4_101f0, align 1
  %v0_101f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_101f4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_101f4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_101f4 = xor i1 %v1_101f4, %v2_101f4
  %v4_101f4 = or i1 %v0_101f4, %v3_101f4
  br i1 %v4_101f4, label %dec_label_pc_1024c, label %dec_label_pc_1019c.dec_label_pc_101f8_crit_edge

dec_label_pc_1019c.dec_label_pc_101f8_crit_edge:  ; preds = %dec_label_pc_1019c
  %v0_10204.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_101f8

dec_label_pc_101f8:                               ; preds = %dec_label_pc_1019c.dec_label_pc_101f8_crit_edge, %dec_label_pc_10220
  %v0_10204.pre = phi i32 [ %v0_10204.pre.pre, %dec_label_pc_1019c.dec_label_pc_101f8_crit_edge ], [ %v0_10244, %dec_label_pc_10220 ]
  %v0_101f8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_101f8, i32* %sl.global-to-local, align 4
  %v0_101fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_101fc, i32* %sb.global-to-local, align 4
  %v0_10200 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10200, i32* %r5.global-to-local, align 4
  %v0_10210.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10204

dec_label_pc_10204:                               ; preds = %dec_label_pc_10178, %dec_label_pc_101f8
  %v0_10234 = phi i32 [ %v0_10170, %dec_label_pc_10178 ], [ %v0_10210.pre, %dec_label_pc_101f8 ]
  %v0_10208 = phi i32 [ %v2_10188, %dec_label_pc_10178 ], [ %v0_10200, %dec_label_pc_101f8 ]
  %v0_10204 = phi i32 [ %v2_10194, %dec_label_pc_10178 ], [ %v0_10204.pre, %dec_label_pc_101f8 ]
  %v4_10204 = mul i32 %v0_10204, 2048
  %v5_10204 = xor i32 %v4_10204, %v0_10204
  store i32 %v5_10204, i32* %r3.global-to-local, align 4
  %v4_10208 = udiv i32 %v0_10208, 524288
  %v5_10208 = xor i32 %v4_10208, %v0_10208
  %v2_1020c = xor i32 %v5_10208, %v5_10204
  store i32 %v2_1020c, i32* %r2.global-to-local, align 4
  %v1_10210 = add i32 %v0_10234, -3
  %v3_10210 = sub i32 2, %v0_10234
  %v4_10210 = and i32 %v3_10210, %v0_10234
  %v5_10210 = icmp slt i32 %v4_10210, 0
  store i1 %v5_10210, i1* %cpsr_v.global-to-local, align 1
  %v6_10210 = icmp slt i32 %v1_10210, 0
  store i1 %v6_10210, i1* %cpsr_n.global-to-local, align 1
  %v7_10210 = icmp eq i32 %v0_10234, 3
  store i1 %v7_10210, i1* %cpsr_z.global-to-local, align 1
  %v2_10214 = and i32 %v0_10204, 128
  %v3_10214 = icmp ne i32 %v2_10214, 0
  %v4_10214 = udiv i32 %v5_10204, 256
  %v5_10214 = xor i32 %v4_10214, %v2_1020c
  store i32 %v5_10214, i32* %r4.global-to-local, align 4
  %v0_10218 = load i32, i32* @r8, align 4
  store i32 %v0_10218, i32* %r6.global-to-local, align 4
  %v2_1021c = xor i1 %v7_10210, true
  %v3_1021c = and i1 %v3_10214, %v2_1021c
  br i1 %v3_1021c, label %dec_label_pc_1019c, label %dec_label_pc_10220

dec_label_pc_10220:                               ; preds = %dec_label_pc_10204
  %v1_10234 = add i32 %v0_10234, -1
  store i32 %v1_10234, i32* @r7, align 4
  %v2_10230.neg = urem i32 %v5_10214, 33
  store i32 %v2_10230.neg, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1023c = icmp slt i32 %v1_10234, 0
  store i1 %v1_1023c, i1* %cpsr_n.global-to-local, align 1
  %v2_1023c = icmp eq i32 %v1_10234, 0
  store i1 %v2_1023c, i1* %cpsr_z.global-to-local, align 1
  %v1_10240 = trunc i32 %v2_10230.neg to i8
  %v3_10240 = inttoptr i32 %v0_10218 to i8*
  store i8 %v1_10240, i8* %v3_10240, align 1
  %v4_10240 = load i32, i32* @r8, align 4
  %v5_10240 = add i32 %v4_10240, 1
  store i32 %v5_10240, i32* @r8, align 4
  %v0_10244 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10244, i32* %r0.global-to-local, align 4
  %v0_10248 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10248 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_10248 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_10248 = xor i1 %v1_10248, %v2_10248
  %v4_10248 = or i1 %v0_10248, %v3_10248
  br i1 %v4_10248, label %dec_label_pc_1024c, label %dec_label_pc_101f8

dec_label_pc_1024c:                               ; preds = %dec_label_pc_10220, %dec_label_pc_1019c
  store i32 ptrtoint (i32* @global_var_230ac.178 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a4.172 to i32), i32* %r1.global-to-local, align 4
  %v0_10258 = load i32, i32* %r4.global-to-local, align 4
  %v1_10258 = load i32, i32* %fp.global-to-local, align 4
  %v2_10258 = inttoptr i32 %v1_10258 to i32*
  store i32 %v0_10258, i32* %v2_10258, align 4
  %v0_1025c = load i32, i32* %r5.global-to-local, align 4
  %v1_1025c = load i32, i32* %r2.global-to-local, align 4
  %v2_1025c = inttoptr i32 %v1_1025c to i32*
  store i32 %v0_1025c, i32* %v2_1025c, align 4
  %v0_10260 = load i32, i32* %sb.global-to-local, align 4
  %v1_10260 = load i32, i32* %r3.global-to-local, align 4
  %v2_10260 = inttoptr i32 %v1_10260 to i32*
  store i32 %v0_10260, i32* %v2_10260, align 4
  %v0_10264 = load i32, i32* %sl.global-to-local, align 4
  %v1_10264 = load i32, i32* %r1.global-to-local, align 4
  %v2_10264 = inttoptr i32 %v1_10264 to i32*
  store i32 %v0_10264, i32* %v2_10264, align 4
  %v1_10270.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10268

dec_label_pc_10268:                               ; preds = %dec_label_pc_10150, %dec_label_pc_1024c
  %v1_10270 = phi i32 [ %v5_1016c, %dec_label_pc_10150 ], [ %v1_10270.pre, %dec_label_pc_1024c ]
  store i32 %v12_10150, i32* @r7, align 4
  store i32 %v15_10150, i32* @r8, align 4
  ret i32 %v1_10270

; uselistorder directives
  uselistorder i32 %v0_10244, { 1, 0 }
  uselistorder i32 %v2_10230.neg, { 1, 0 }
  uselistorder i32 %v0_10218, { 1, 2, 0 }
  uselistorder i32 %v5_10214, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %v0_10204, { 2, 1, 0 }
  uselistorder i32 %v0_10208, { 1, 0 }
  uselistorder i32 %v0_10234, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_101a0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10170, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_10268, { 1, 0 }
  uselistorder label %dec_label_pc_10204, { 1, 0 }
  uselistorder label %dec_label_pc_101f8, { 1, 0 }
}

define i32 @function_1028c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1028c:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_1028c = load i32, i32* %r1.global-to-local, align 4
  %v3_10290 = load i32, i32* @r4, align 4
  store i32 %v3_10290, i32* %stack_var_-28, align 4
  %v0_10294 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10294, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_1028c, 1
  br i1 %tmp16, label %dec_label_pc_1033c, label %dec_label_pc_1029c

dec_label_pc_1029c:                               ; preds = %dec_label_pc_1028c
  store i32 ptrtoint (i32* @global_var_230b0.174 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230ac.178 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a4.172 to i32), i32* %r6.global-to-local, align 4
  %v2_102ac = load i32, i32* @global_var_230b0.174, align 4
  store i32 %v2_102ac, i32* %lr.global-to-local, align 4
  %v2_102b0 = load i32, i32* @global_var_230ac.178, align 4
  store i32 %v2_102b0, i32* %r4.global-to-local, align 4
  %v2_102b4 = load i32, i32* @global_var_230a8.176, align 4
  store i32 %v2_102b4, i32* %r0.global-to-local, align 4
  %v2_102b8 = load i32, i32* @global_var_230a4.172, align 4
  br label %dec_label_pc_102dc

dec_label_pc_102c0:                               ; preds = %dec_label_pc_102fc
  %v1_102c0 = trunc i32 %v5_102ec to i16
  %v3_102c0 = inttoptr i32 %v9_102f0 to i16*
  store i16 %v1_102c0, i16* %v3_102c0, align 2
  %v4_102c0 = load i32, i32* %r5.global-to-local, align 4
  %v5_102c0 = add i32 %v4_102c0, -2
  store i32 %v5_102c0, i32* %r5.global-to-local, align 4
  %v0_102c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_102c4

dec_label_pc_102c4:                               ; preds = %.thread, %dec_label_pc_102c0
  %v0_102c4 = phi i32 [ %v9_102f4, %.thread ], [ %v0_102c4.pre, %dec_label_pc_102c0 ]
  %v2_102c05 = phi i32 [ %v12_102f0, %.thread ], [ %v5_102c0, %dec_label_pc_102c0 ]
  %tmp17 = icmp slt i32 %v0_102c4, 1
  br i1 %tmp17, label %dec_label_pc_10344, label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102c4
  %v0_102c8 = load i32, i32* %r0.global-to-local, align 4
  %v0_102d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_102d0, i32* %r0.global-to-local, align 4
  %v0_102d4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_102d4, i32* %r4.global-to-local, align 4
  %v0_102d8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_102d8, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_102dc

dec_label_pc_102dc:                               ; preds = %dec_label_pc_1029c, %dec_label_pc_102d0
  %v0_10328 = phi i32 [ %v2_102b4, %dec_label_pc_1029c ], [ %v0_102d0, %dec_label_pc_102d0 ]
  %v9_102f0 = phi i32 [ %v0_10294, %dec_label_pc_1029c ], [ %v2_102c05, %dec_label_pc_102d0 ]
  %v0_10308 = phi i32 [ %v0_1028c, %dec_label_pc_1029c ], [ %v0_102c4, %dec_label_pc_102d0 ]
  %v0_1031c = phi i32 [ %v2_102ac, %dec_label_pc_1029c ], [ %v0_102d8, %dec_label_pc_102d0 ]
  %v0_10318 = phi i32 [ %v2_102b8, %dec_label_pc_1029c ], [ %v0_102c8, %dec_label_pc_102d0 ]
  %v4_102dc = mul i32 %v0_10318, 2048
  %v5_102dc = xor i32 %v4_102dc, %v0_10318
  %v4_102e0 = udiv i32 %v0_1031c, 524288
  %v5_102e0 = xor i32 %v4_102e0, %v0_1031c
  %v2_102e4 = xor i32 %v5_102e0, %v5_102dc
  %v4_102ec = udiv i32 %v5_102dc, 256
  %v5_102ec = xor i32 %v2_102e4, %v4_102ec
  store i32 %v5_102ec, i32* %r3.global-to-local, align 4
  %v7_102f0 = icmp sgt i32 %v0_10308, 3
  br i1 %v7_102f0, label %.thread, label %dec_label_pc_102fc

.thread:                                          ; preds = %dec_label_pc_102dc
  %v10_102f0 = inttoptr i32 %v9_102f0 to i32*
  store i32 %v5_102ec, i32* %v10_102f0, align 4
  %v11_102f0 = load i32, i32* %r5.global-to-local, align 4
  %v12_102f0 = add i32 %v11_102f0, 4
  store i32 %v12_102f0, i32* %r5.global-to-local, align 4
  %v8_102f4 = load i32, i32* %r1.global-to-local, align 4
  %v9_102f4 = add i32 %v8_102f4, -4
  store i32 %v9_102f4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_102c4

dec_label_pc_102fc:                               ; preds = %dec_label_pc_102dc
  %v7_10308 = icmp eq i32 %v0_10308, 1
  store i32 %v5_102ec, i32* %r3.global-to-local, align 4
  %v1_10310 = add i32 %v0_10308, -2
  store i32 %v1_10310, i32* %r1.global-to-local, align 4
  br i1 %v7_10308, label %dec_label_pc_10318, label %dec_label_pc_102c0

dec_label_pc_10318:                               ; preds = %dec_label_pc_102fc
  store i32 %v5_102ec, i32* %r3.global-to-local, align 4
  %v1_10328 = load i32, i32* %r6.global-to-local, align 4
  %v2_10328 = inttoptr i32 %v1_10328 to i32*
  store i32 %v0_10328, i32* %v2_10328, align 4
  %v0_1032c = load i32, i32* %r4.global-to-local, align 4
  %v1_1032c = load i32, i32* %r7.global-to-local, align 4
  %v2_1032c = inttoptr i32 %v1_1032c to i32*
  store i32 %v0_1032c, i32* %v2_1032c, align 4
  %v0_10330 = load i32, i32* %lr.global-to-local, align 4
  %v1_10330 = load i32, i32* %r8.global-to-local, align 4
  %v2_10330 = inttoptr i32 %v1_10330 to i32*
  store i32 %v0_10330, i32* %v2_10330, align 4
  %v0_10334 = load i32, i32* %r3.global-to-local, align 4
  %v1_10334 = load i32, i32* %sl.global-to-local, align 4
  %v2_10334 = inttoptr i32 %v1_10334 to i32*
  store i32 %v0_10334, i32* %v2_10334, align 4
  %v0_10338 = load i32, i32* %r3.global-to-local, align 4
  %v1_10338 = trunc i32 %v0_10338 to i8
  %v2_10338 = load i32, i32* %r5.global-to-local, align 4
  %v3_10338 = inttoptr i32 %v2_10338 to i8*
  store i8 %v1_10338, i8* %v3_10338, align 1
  br label %dec_label_pc_1033c

dec_label_pc_1033c:                               ; preds = %dec_label_pc_1028c, %dec_label_pc_10344, %dec_label_pc_10318
  %v2_1033c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1033c, i32* @r4, align 4
  %v1_10340 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10340

dec_label_pc_10344:                               ; preds = %dec_label_pc_102c4
  %v0_10344 = load i32, i32* %r3.global-to-local, align 4
  %v1_10344 = load i32, i32* %sl.global-to-local, align 4
  %v2_10344 = inttoptr i32 %v1_10344 to i32*
  store i32 %v0_10344, i32* %v2_10344, align 4
  %v0_10348 = load i32, i32* %lr.global-to-local, align 4
  %v1_10348 = load i32, i32* %r8.global-to-local, align 4
  %v2_10348 = inttoptr i32 %v1_10348 to i32*
  store i32 %v0_10348, i32* %v2_10348, align 4
  %v0_1034c = load i32, i32* %r4.global-to-local, align 4
  %v1_1034c = load i32, i32* %r7.global-to-local, align 4
  %v2_1034c = inttoptr i32 %v1_1034c to i32*
  store i32 %v0_1034c, i32* %v2_1034c, align 4
  %v0_10350 = load i32, i32* %r0.global-to-local, align 4
  %v1_10350 = load i32, i32* %r6.global-to-local, align 4
  %v2_10350 = inttoptr i32 %v1_10350 to i32*
  store i32 %v0_10350, i32* %v2_10350, align 4
  br label %dec_label_pc_1033c

; uselistorder directives
  uselistorder i32 %v9_102f4, { 1, 0 }
  uselistorder i32 %v12_102f0, { 1, 0 }
  uselistorder i32 %v5_102ec, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_10318, { 1, 0 }
  uselistorder i32 %v0_1031c, { 1, 0 }
  uselistorder i32 %v0_10308, { 1, 0, 2 }
  uselistorder i32 %v0_102c4, { 1, 0 }
  uselistorder i32 %v0_1028c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_230a4.172, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_230a8.176, { 2, 3, 4, 1, 6, 0, 5 }
  uselistorder i32* @global_var_230ac.178, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_230b0.174, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_1033c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_102dc, { 1, 0 }
}

define i32 @function_10368(i32 %arg1) local_unnamed_addr {
dec_label_pc_10368:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10368 = load i32, i32* @r4, align 4
  store i32 %v3_10368, i32* %stack_var_-8, align 4
  %v6_10368 = load i32, i32* @lr, align 4
  %v0_1036c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1036c, i32* @r4, align 4
  %v2_1036c = icmp eq i32 %v0_1036c, 0
  br i1 %v2_1036c, label %dec_label_pc_10388, label %dec_label_pc_10374

dec_label_pc_10374:                               ; preds = %dec_label_pc_10368
  %v1_10374 = add i32 %v0_1036c, 4
  %v2_10374 = inttoptr i32 %v1_10374 to i32*
  %v3_10374 = load i32, i32* %v2_10374, align 4
  store i32 %v3_10374, i32* %r0.global-to-local, align 4
  store i32 66432, i32* @lr, align 4
  %v1_1037c = icmp ne i32 %v3_10374, 0
  call void @__pseudo_cond_branch(i1 %v1_1037c, i32 ptrtoint (i32* @global_var_1429c.57 to i32))
  %v0_10380 = load i32, i32* @r4, align 4
  store i32 %v0_10380, i32* %r0.global-to-local, align 4
  %v1_10384 = call i32 @function_1429c(i32 %v0_10380)
  store i32 %v1_10384, i32* %r0.global-to-local, align 4
  %v2_10388.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10388

dec_label_pc_10388:                               ; preds = %dec_label_pc_10368, %dec_label_pc_10374
  %v1_1038c = phi i32 [ 0, %dec_label_pc_10368 ], [ %v1_10384, %dec_label_pc_10374 ]
  %v2_10388 = phi i32 [ %v3_10368, %dec_label_pc_10368 ], [ %v2_10388.pre, %dec_label_pc_10374 ]
  store i32 %v2_10388, i32* @r4, align 4
  store i32 %v6_10368, i32* @lr, align 4
  ret i32 %v1_1038c

; uselistorder directives
  uselistorder i32 %v0_1036c, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10388, { 1, 0 }
}

define i32 @function_10390(i32 %arg1) local_unnamed_addr {
dec_label_pc_10390:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp78 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_10390 = load i32, i32* @r4, align 4
  %v9_10390 = load i32, i32* @r6, align 4
  %v12_10390 = load i32, i32* @r7, align 4
  %v15_10390 = load i32, i32* @r8, align 4
  %v18_10390 = load i32, i32* @sb, align 4
  %v21_10390 = load i32, i32* @sl, align 4
  %v24_10390 = load i32, i32* @fp, align 4
  %v27_10390 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_103a8 = call i32 @function_13d28(i32 1, i32 8)
  store i32 %v2_103a8, i32* @fp, align 4
  %v0_103b0 = load i32, i32* @r5, align 4
  store i32 %v0_103b0, i32* %r0.global-to-local, align 4
  %v1_103b4 = inttoptr i32 %v0_103b0 to i8*
  %v2_103b4 = call i32 @function_12e40(i8* %v1_103b4)
  %v2_103bc = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_103bc, i32* @sl, align 4
  %v2_103c0 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_103c0, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_103c8 = add i32 %v2_103b4, 1
  store i32 %v1_103c8, i32* %r0.global-to-local, align 4
  %v2_103cc = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_103cc, i32* %r2.global-to-local, align 4
  store i32 %v2_103c0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_103c8, i32* %r3.global-to-local, align 4
  %v2_10408143 = icmp eq i32 %v1_103c8, 0
  store i1 %v2_10408143, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_10410144 = add i32 %v2_103cc, -1
  store i32 %v1_10410144, i32* %r1.global-to-local, align 4
  %tmp115145 = icmp slt i32 %v1_103c8, 1
  br i1 %tmp115145, label %dec_label_pc_10418, label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_10390, %bb114
  %v0_103dc148 = phi i32 [ %v1_103fc, %bb114 ], [ 0, %dec_label_pc_10390 ]
  %v1_103e8147.off0 = phi i8 [ %extract.t149, %bb114 ], [ 0, %dec_label_pc_10390 ]
  %v2_1041c146 = phi i32 [ %v1_10400, %bb114 ], [ %v2_103cc, %dec_label_pc_10390 ]
  %v1_103dc = load i32, i32* @r5, align 4
  %v2_103dc = add i32 %v1_103dc, %v0_103dc148
  %v3_103dc = inttoptr i32 %v2_103dc to i8*
  %v4_103dc = load i8, i8* %v3_103dc, align 1
  %v6_103dc = zext i8 %v4_103dc to i32
  store i32 %v6_103dc, i32* %r3.global-to-local, align 4
  %v2_103e0 = icmp eq i8 %v4_103dc, 0
  store i1 %v2_103e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103e0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_103dc
  %v8_103e4 = icmp eq i8 %v4_103dc, 46
  store i1 %v8_103e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_103e4, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_103dc, %bb
  %v3_103e8 = load i32, i32* %r6.global-to-local, align 4
  %v4_103e8 = inttoptr i32 %v3_103e8 to i8*
  store i8 %v1_103e8147.off0, i8* %v4_103e8, align 1
  %v0_103ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_103ec.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_103ec.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_103ec.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_103ec.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_103ec = phi i32 [ %v3_103ec.pre, %.thread..thread7_crit_edge ], [ %v2_1041c146, %bb ]
  %v1_103ec.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_103dc, %bb ]
  %v4_103ec = add i32 %v3_103ec, -1
  %v5_103ec = inttoptr i32 %v4_103ec to i8*
  store i8 %v1_103ec.off0, i8* %v5_103ec, align 1
  %v0_103f0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_103f0.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_103f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_103f0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread9:                                         ; preds = %.thread7
  %v1_103f011 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_103f011, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread12:                                        ; preds = %.thread7
  %v1_103f8 = load i32, i32* @lr, align 4
  %v2_103f8 = urem i32 %v1_103f8, 256
  store i32 %v2_103f8, i32* %r4.global-to-local, align 4
  br label %bb114

bb114:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_1040c33 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_103f8, %.thread12 ]
  %v0_103fc = load i32, i32* %ip.global-to-local, align 4
  %v1_103fc = add i32 %v0_103fc, 1
  store i32 %v1_103fc, i32* %ip.global-to-local, align 4
  %v0_10400 = load i32, i32* %r2.global-to-local, align 4
  %v1_10400 = add i32 %v0_10400, 1
  store i32 %v1_10400, i32* %r2.global-to-local, align 4
  %v1_10404.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10404 = sub i32 %v1_10404.pre, %v1_103fc
  store i32 %v2_10404, i32* %r3.global-to-local, align 4
  %v2_10408 = icmp eq i32 %v2_10404, 0
  store i1 %v2_10408, i1* %cpsr_z.global-to-local, align 1
  %v1_1040c = add nuw nsw i32 %v0_1040c33, 1
  store i32 %v1_1040c, i32* @lr, align 4
  store i32 %v0_10400, i32* %r1.global-to-local, align 4
  %tmp115 = icmp slt i32 %v2_10404, 1
  %extract.t149 = trunc i32 %v0_1040c33 to i8
  br i1 %tmp115, label %dec_label_pc_10418, label %dec_label_pc_103dc

dec_label_pc_10418:                               ; preds = %bb114, %dec_label_pc_10390
  %v1_10410.lcssa = phi i32 [ %v1_10410144, %dec_label_pc_10390 ], [ %v0_10400, %bb114 ]
  store i32 0, i32* @r4, align 4
  %v4_1041c = inttoptr i32 %v1_10410.lcssa to i8*
  store i8 0, i8* %v4_1041c, align 1
  store i32 %v2_103c0, i32* %r0.global-to-local, align 4
  %v1_10424 = bitcast i32* %stack_var_-2232 to i8*
  %v2_10424 = call i32 @function_12e40(i8* %v1_10424)
  %v2_10428 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_10428, i32* %r1.global-to-local, align 4
  %v1_1042c = load i32, i32* @sb, align 4
  %v2_1042c = add i32 %v1_1042c, %v2_10424
  store i32 %v2_1042c, i32* %r5.global-to-local, align 4
  %v0_10434 = load i32, i32* @r4, align 4
  store i32 %v0_10434, i32* %stack_var_-68, align 4
  store i32 %v2_103c0, i32* %r0.global-to-local, align 4
  %v2_10444 = call i32 @function_12e40(i8* %v1_10424)
  %v1_10448 = add i32 %v2_10444, 17
  store i32 %v1_10448, i32* %r0.global-to-local, align 4
  %v0_10450 = call i32 @function_1008c()
  %v1_10450 = sext i32 %v0_10450 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_1045c = mul nuw nsw i64 %v1_10450, 2147516417
  %v6_1045c = udiv i64 %v5_1045c, 4294967296
  %v7_1045c = trunc i64 %v6_1045c to i32
  %v8_1045c = trunc i64 %v5_1045c to i32
  store i32 %v8_1045c, i32* @lr, align 4
  store i32 %v7_1045c, i32* %r2.global-to-local, align 4
  %v5_104604 = udiv i64 %v5_1045c, 140737488355328
  %v5_10460 = trunc i64 %v5_104604 to i32
  %v6_10460 = add i32 %v5_10460, %v0_10450
  store i32 16, i32* %r1.global-to-local, align 4
  %v6_1046c = urem i32 %v6_10460, 65536
  store i32 %v6_1046c, i32* %ip.global-to-local, align 4
  %v2_10474 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10474, i32* %r0.global-to-local, align 4
  %v5_10478 = trunc i32 %v6_10460 to i16
  %v2_1047c = call i32 @function_12ed4(i32 %v2_10474, i32 16)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 %v2_10428, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_10498 = call i32 @function_15344(i32 134744072)
  store i32 %v2_10428, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_104a8 = call i32 @function_15368(i32 53)
  store i32 %v2_10428, i32* %ip.global-to-local, align 4
  store i16 %v5_10478, i16* %stack_var_-2244, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_104c0 = call i32 @function_15368(i32 256)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_104cc = call i32 @function_15368(i32 1)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_104d8 = call i32 @function_15368(i32 1)
  %v2_104d8 = trunc i32 %v1_104d8 to i16
  %v3_104dc = load i32, i32* %r5.global-to-local, align 4
  %v4_104dc = add i32 %v3_104dc, 1
  %v5_104dc = inttoptr i32 %v4_104dc to i16*
  store i16 %v2_104d8, i16* %v5_104dc, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_104e4 = call i32 @function_15368(i32 1)
  %v2_104e4 = trunc i32 %v1_104e4 to i16
  store i32 %v1_104e4, i32* %r0.global-to-local, align 4
  %v0_104e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_104e8 = add i32 %v0_104e8, 1
  store i32 %v1_104e8, i32* @r5, align 4
  %v4_104ec = add i32 %v0_104e8, 3
  %v5_104ec = inttoptr i32 %v4_104ec to i16*
  store i16 %v2_104e4, i16* %v5_104ec, align 2
  %v2_10588 = ptrtoint i32* %stack_var_-196 to i32
  %v2_105ac = ptrtoint i32* %stack_var_-40 to i32
  %v2_105d8 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1061c = ptrtoint i16* %stack_var_-4292 to i32
  %v2_106b0 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_106b8 = bitcast i32* %stack_var_-4280 to i8*
  %v4_106dc = zext i16 %tmp78 to i32
  %v2_106e0 = icmp eq i16 %tmp78, 0
  br label %dec_label_pc_104f8

dec_label_pc_104f8:                               ; preds = %dec_label_pc_10664, %dec_label_pc_10418
  %v1_104fc = phi i32 [ -1, %dec_label_pc_10418 ], [ %v0_104f8.pre, %dec_label_pc_10664 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10418 ], [ %v1_10664, %dec_label_pc_10664 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_104f8 = icmp eq i32 %v1_104fc, -1
  store i1 %v7_104f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104f8, label %bb117, label %bb116

bb116:                                            ; preds = %dec_label_pc_104f8
  store i32 %v1_104fc, i32* %r0.global-to-local, align 4
  br label %bb117

bb117:                                            ; preds = %dec_label_pc_104f8, %bb116
  store i32 66820, i32* @lr, align 4
  %v1_10500 = xor i1 %v7_104f8, true
  call void @__pseudo_cond_branch(i1 %v1_10500, i32 ptrtoint (i32* @global_var_1663c.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_10510 = call i32 @function_15670(i32 2, i32 2, i32 0)
  store i32 %v3_10510, i32* %r0.global-to-local, align 4
  %v7_10514 = icmp eq i32 %v3_10510, -1
  store i1 %v7_10514, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10510, i32* @r6, align 4
  br i1 %v7_10514, label %dec_label_pc_106a4, label %dec_label_pc_10520

dec_label_pc_10520:                               ; preds = %bb117
  store i32 %v2_10474, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1052c = call i32 @function_152b4(i32 %v3_10510, i32 %v2_10474, i32 16)
  store i32 %v3_1052c, i32* %r0.global-to-local, align 4
  %v7_10530 = icmp eq i32 %v3_1052c, -1
  store i1 %v7_10530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10530, label %dec_label_pc_1066c, label %dec_label_pc_10538

dec_label_pc_10538:                               ; preds = %dec_label_pc_10520
  %v0_10538 = load i32, i32* @r6, align 4
  store i32 %v0_10538, i32* @r0, align 4
  store i32 %v2_103bc, i32* @r1, align 4
  store i32 %v1_10448, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10548 = call i32 @function_15590(i32 %v0_10538, i32 %v2_103bc, i32 %v1_10448, i32 16384)
  store i32 %v4_10548, i32* %r0.global-to-local, align 4
  %v7_1054c = icmp eq i32 %v4_10548, -1
  store i1 %v7_1054c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1054c, label %dec_label_pc_1066c, label %dec_label_pc_10554

dec_label_pc_10554:                               ; preds = %dec_label_pc_10538
  %v0_10554 = load i32, i32* @r6, align 4
  store i32 %v0_10554, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_10560 = call i32 @function_13a84(i32 3, i32 %v0_10554, i32 0)
  %v0_10564 = load i32, i32* @r6, align 4
  store i32 %v0_10564, i32* %r1.global-to-local, align 4
  %v1_10568 = or i32 %v3_10560, 2048
  store i32 %v1_10568, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10570 = call i32 @function_13a84(i32 4, i32 %v0_10564, i32 %v1_10568)
  store i32 %v3_10570, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_10588, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1058c

dec_label_pc_1058c:                               ; preds = %dec_label_pc_1058c, %dec_label_pc_10554
  %v1_10590 = phi i32 [ %v1_10594, %dec_label_pc_1058c ], [ 4, %dec_label_pc_10554 ]
  store i32 0, i32* @r4, align 4
  %v3_10590 = add i32 %v1_10590, %v2_10588
  %v4_10590 = inttoptr i32 %v3_10590 to i32*
  store i32 0, i32* %v4_10590, align 4
  %v0_10594 = load i32, i32* %r3.global-to-local, align 4
  %v1_10594 = add i32 %v0_10594, 4
  store i32 %v1_10594, i32* %r3.global-to-local, align 4
  %v7_10598 = icmp eq i32 %v1_10594, 128
  br i1 %v7_10598, label %dec_label_pc_105a0, label %dec_label_pc_1058c

dec_label_pc_105a0:                               ; preds = %dec_label_pc_1058c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_105a0 = load i32, i32* @r6, align 4
  %v3_105a0 = udiv i32 %v0_105a0, 32
  %v3_105a8 = mul nuw nsw i32 %v3_105a0, 4
  store i32 %v3_105a8, i32* %r3.global-to-local, align 4
  store i32 %v2_105ac, i32* %r2.global-to-local, align 4
  %v2_105b0 = add i32 %v3_105a8, %v2_105ac
  store i32 %v2_105b0, i32* @r5, align 4
  %v1_105b4 = add i32 %v2_105b0, -156
  %v2_105b4 = inttoptr i32 %v1_105b4 to i32*
  %v3_105b4 = load i32, i32* %v2_105b4, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_105bc = urem i32 %v0_105a0, 32
  store i32 %v1_105bc, i32* @r7, align 4
  %v7_105c0 = shl i32 1, %v1_105bc
  %v8_105c0 = or i32 %v3_105b4, %v7_105c0
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_105c0, i32* %v2_105b4, align 4
  %v0_105d0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_105d0, i32* %stack_var_-52, align 4
  store i32 %v2_105d8, i32* @lr, align 4
  store i32 %v2_10428, i32* %ip.global-to-local, align 4
  %v0_105e0 = load i32, i32* @r6, align 4
  %v1_105e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_105e0 = add i32 %v1_105e0, %v0_105e0
  store i32 %v2_105e0, i32* %r0.global-to-local, align 4
  %v0_105e8 = load i32, i32* @r4, align 4
  store i32 %v0_105e8, i32* %r2.global-to-local, align 4
  store i32 %v0_105e8, i32* %r3.global-to-local, align 4
  %v5_105f4 = call i32 @function_157f4(i32 %v2_105e0, i32 %v2_10588, i32 %v0_105e8, i32 %v0_105e8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_105f4, i32* %r0.global-to-local, align 4
  %v7_105f8 = icmp eq i32 %v5_105f4, -1
  store i1 %v7_105f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105f8, label %dec_label_pc_1067c, label %dec_label_pc_10600

dec_label_pc_10600:                               ; preds = %dec_label_pc_105a0
  %v1_10600 = load i32, i32* @r4, align 4
  %v9_10600 = icmp eq i32 %v5_105f4, %v1_10600
  store i1 %v9_10600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10600, label %dec_label_pc_1065c, label %dec_label_pc_10608

dec_label_pc_10608:                               ; preds = %dec_label_pc_10600
  %v0_10608 = load i32, i32* @r5, align 4
  %v1_10608 = add i32 %v0_10608, -156
  %v2_10608 = inttoptr i32 %v1_10608 to i32*
  %v3_10608 = load i32, i32* %v2_10608, align 4
  %v1_1060c = load i32, i32* @r7, align 4
  %v6_1060c = lshr i32 %v3_10608, %v1_1060c
  store i32 %v6_1060c, i32* %r3.global-to-local, align 4
  %v1_10610 = urem i32 %v6_1060c, 2
  %v2_10610 = icmp eq i32 %v1_10610, 0
  store i1 %v2_10610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10610, label %dec_label_pc_1067c, label %dec_label_pc_10618

dec_label_pc_10618:                               ; preds = %dec_label_pc_10608
  store i32 %v2_1061c, i32* @r5, align 4
  store i32 %v2_1061c, i32* @r1, align 4
  store i32 2048, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1062c = load i32, i32* @r6, align 4
  store i32 %v0_1062c, i32* @r0, align 4
  %v0_10638 = call i32 @function_15548()
  store i32 %v0_10638, i32* %r4.global-to-local, align 4
  %v0_10640 = load i32, i32* @sb, align 4
  store i32 %v0_10640, i32* %r0.global-to-local, align 4
  %v1_10644 = inttoptr i32 %v0_10640 to i8*
  %v2_10644 = call i32 @function_12e40(i8* %v1_10644)
  %v1_10648 = add i32 %v2_10644, 17
  store i32 %v1_10648, i32* %r0.global-to-local, align 4
  %v0_1064c = load i32, i32* %r4.global-to-local, align 4
  %v3_1064c = icmp ult i32 %v0_1064c, %v1_10648
  %v9_1064c = icmp eq i32 %v0_1064c, %v1_10648
  store i1 %v9_1064c, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_1064c, label %dec_label_pc_1065c, label %dec_label_pc_106b0

dec_label_pc_1065c:                               ; preds = %dec_label_pc_10618, %dec_label_pc_106b0, %dec_label_pc_106dc, %dec_label_pc_10600, %dec_label_pc_106a4
  %v0_1065c = load i32, i32* @r8, align 4
  %v7_1065c = icmp eq i32 %v0_1065c, 5
  store i1 %v7_1065c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1065c, label %dec_label_pc_1067c, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_1066c, %dec_label_pc_1065c
  %v0_10664 = phi i32 [ %v0_10674, %dec_label_pc_1066c ], [ %v0_1065c, %dec_label_pc_1065c ]
  %v1_10664 = add i32 %v0_10664, 1
  %v0_104f8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_104f8

dec_label_pc_1066c:                               ; preds = %dec_label_pc_10538, %dec_label_pc_10520
  %v0_1066c = phi i32 [ %v4_10548, %dec_label_pc_10538 ], [ %v3_1052c, %dec_label_pc_10520 ]
  %v1_1066c = add i32 %v0_1066c, 2
  store i32 %v1_1066c, i32* %r0.global-to-local, align 4
  %v1_10670 = call i32 @function_16728(i32 %v1_1066c)
  store i32 %v1_10670, i32* %r0.global-to-local, align 4
  %v0_10674 = load i32, i32* @r8, align 4
  %v7_10674 = icmp eq i32 %v0_10674, 5
  store i1 %v7_10674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10674, label %dec_label_pc_1067c, label %dec_label_pc_10664

dec_label_pc_1067c:                               ; preds = %dec_label_pc_1066c, %dec_label_pc_1065c, %dec_label_pc_10608, %dec_label_pc_105a0, %dec_label_pc_106e8, %dec_label_pc_106f0.backedge
  %v0_1067c = load i32, i32* @r6, align 4
  store i32 %v0_1067c, i32* @r0, align 4
  %v1_10680 = call i32 @function_1663c(i32 %v0_1067c)
  store i32 %v1_10680, i32* %r0.global-to-local, align 4
  %v0_10684 = load i32, i32* @fp, align 4
  %v1_10684 = inttoptr i32 %v0_10684 to i8*
  %v2_10684 = load i8, i8* %v1_10684, align 1
  %v3_10684 = zext i8 %v2_10684 to i32
  store i32 %v3_10684, i32* @r4, align 4
  %v2_10688 = icmp eq i8 %v2_10684, 0
  store i1 %v2_10688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10688, label %dec_label_pc_107d0, label %dec_label_pc_10690

dec_label_pc_10690:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_107d0
  %v0_10690 = phi i32 [ %v0_10684, %dec_label_pc_1067c ], [ %v0_107e4, %dec_label_pc_107d0 ]
  store i32 %v0_10690, i32* %r0.global-to-local, align 4
  store i32 %v3_10390, i32* @r4, align 4
  store i32 %v9_10390, i32* @r6, align 4
  store i32 %v12_10390, i32* @r7, align 4
  store i32 %v15_10390, i32* @r8, align 4
  store i32 %v18_10390, i32* @sb, align 4
  store i32 %v21_10390, i32* @sl, align 4
  store i32 %v24_10390, i32* @fp, align 4
  store i32 %v27_10390, i32* @lr, align 4
  ret i32 %v0_10690

dec_label_pc_106a4:                               ; preds = %bb117
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_106a8 = call i32 @function_16728(i32 1)
  store i32 %v1_106a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1065c

dec_label_pc_106b0:                               ; preds = %dec_label_pc_10618
  store i32 %v2_106b0, i32* @sb, align 4
  store i32 %v2_106b0, i32* %r0.global-to-local, align 4
  %v2_106b8 = call i32 @function_12e40(i8* %v1_106b8)
  store i32 %v2_105ac, i32* @lr, align 4
  %v4_106c4 = load i16, i16* %stack_var_-4292, align 2
  %v5_106c4 = sext i16 %v4_106c4 to i32
  store i32 %v5_106c4, i32* %r3.global-to-local, align 4
  store i32 %v6_10460, i32* %r1.global-to-local, align 4
  %v1_106cc = load i32, i32* @sb, align 4
  %v2_106cc = add i32 %v1_106cc, %v2_106b8
  store i32 %v2_106cc, i32* %r0.global-to-local, align 4
  %v9_106d0 = icmp eq i16 %v4_106c4, %v5_10478
  store i1 %v9_106d0, i1* %cpsr_z.global-to-local, align 1
  %v1_106d4 = add i32 %v2_106cc, 5
  store i32 %v1_106d4, i32* @r4, align 4
  br i1 %v9_106d0, label %dec_label_pc_106dc, label %dec_label_pc_1065c

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106b0
  store i32 %v4_106dc, i32* %r0.global-to-local, align 4
  store i1 %v2_106e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106e0, label %dec_label_pc_1065c, label %dec_label_pc_106e8

dec_label_pc_106e8:                               ; preds = %dec_label_pc_106dc
  %v1_106e8 = call i32 @function_15510(i32 %v4_106dc)
  store i32 %v1_106e8, i32* %r0.global-to-local, align 4
  %v1_106f0133 = add i32 %v1_106e8, -1
  %v3_106f4134 = mul i32 %v1_106f0133, 65536
  store i32 %v3_106f4134, i32* %r3.global-to-local, align 4
  %v7_106f8140 = icmp eq i32 %v3_106f4134, -65536
  store i1 %v7_106f8140, i1* %cpsr_z.global-to-local, align 1
  %v3_106fc141 = urem i32 %v1_106f0133, 65536
  store i32 %v3_106fc141, i32* @sl, align 4
  br i1 %v7_106f8140, label %dec_label_pc_1067c, label %dec_label_pc_10704.lr.ph

dec_label_pc_10704.lr.ph:                         ; preds = %dec_label_pc_106e8
  %v0_10704.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %dec_label_pc_10704.lr.ph, %dec_label_pc_106f0.backedge
  %v0_10704 = phi i32 [ %v0_10704.pre, %dec_label_pc_10704.lr.ph ], [ %storemerge29, %dec_label_pc_106f0.backedge ]
  store i32 %v0_10704, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1071018 = inttoptr i32 %v0_10704 to i8*
  %v2_1071019 = load i8, i8* %v1_1071018, align 1
  %v3_1071020 = zext i8 %v2_1071019 to i32
  store i32 %v3_1071020, i32* %r2.global-to-local, align 4
  %v2_1071421 = icmp eq i8 %v2_1071019, 0
  store i1 %v2_1071421, i1* %cpsr_z.global-to-local, align 1
  %v3_1071822 = mul nuw nsw i32 %v3_1071020, 256
  store i32 %v3_1071822, i32* %r1.global-to-local, align 4
  br i1 %v2_1071421, label %dec_label_pc_1074c, label %dec_label_pc_10720.preheader

dec_label_pc_10720.preheader:                     ; preds = %dec_label_pc_10704, %dec_label_pc_10710.backedge
  %v1_107f4 = phi i32 [ %v1_107f449, %dec_label_pc_10710.backedge ], [ 1, %dec_label_pc_10704 ]
  %v0_107ec47 = phi i32 [ %v0_107ec, %dec_label_pc_10710.backedge ], [ 0, %dec_label_pc_10704 ]
  %v0_1072c45 = phi i32 [ %v3_10718, %dec_label_pc_10710.backedge ], [ %v3_1071822, %dec_label_pc_10704 ]
  %v0_1072843 = phi i32 [ %v1_107f0, %dec_label_pc_10710.backedge ], [ %v0_10704, %dec_label_pc_10704 ]
  %v0_1072041 = phi i32 [ %v3_10710, %dec_label_pc_10710.backedge ], [ %v3_1071020, %dec_label_pc_10704 ]
  br label %dec_label_pc_10720

dec_label_pc_10720:                               ; preds = %dec_label_pc_10720.preheader, %dec_label_pc_10728
  %v0_107ec = phi i32 [ %v0_107ec47, %dec_label_pc_10720.preheader ], [ 1, %dec_label_pc_10728 ]
  %v0_1072c = phi i32 [ %v0_1072c45, %dec_label_pc_10720.preheader ], [ %v3_10744, %dec_label_pc_10728 ]
  %v0_107f0 = phi i32 [ %v0_1072843, %dec_label_pc_10720.preheader ], [ %v2_10734, %dec_label_pc_10728 ]
  %v0_10720 = phi i32 [ %v0_1072041, %dec_label_pc_10720.preheader ], [ %v3_10738, %dec_label_pc_10728 ]
  %v7_10720 = icmp eq i32 %v0_10720, 191
  store i1 %v7_10720, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_10720, 192
  br i1 %tmp, label %dec_label_pc_107ec, label %dec_label_pc_10728

dec_label_pc_10728:                               ; preds = %dec_label_pc_10720
  %v1_10728 = add i32 %v0_107f0, 1
  %v2_10728 = inttoptr i32 %v1_10728 to i8*
  %v3_10728 = load i8, i8* %v2_10728, align 1
  %v4_10728 = zext i8 %v3_10728 to i32
  %v2_1072c = or i32 %v4_10728, -49152
  %v0_10734 = load i32, i32* @r5, align 4
  %v1_10730 = add i32 %v0_10734, %v0_1072c
  %v2_10734 = add i32 %v1_10730, %v2_1072c
  store i32 %v2_10734, i32* %r3.global-to-local, align 4
  %v1_10738 = inttoptr i32 %v2_10734 to i8*
  %v2_10738 = load i8, i8* %v1_10738, align 1
  %v3_10738 = zext i8 %v2_10738 to i32
  store i32 %v3_10738, i32* %r2.global-to-local, align 4
  %v2_1073c = icmp eq i8 %v2_10738, 0
  store i1 %v2_1073c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_10744 = mul nuw nsw i32 %v3_10738, 256
  store i32 %v3_10744, i32* %r1.global-to-local, align 4
  br i1 %v2_1073c, label %dec_label_pc_1074c, label %dec_label_pc_10720

dec_label_pc_1074c:                               ; preds = %dec_label_pc_10710.backedge, %dec_label_pc_10728, %dec_label_pc_10704
  %v1_10750 = phi i32 [ 1, %dec_label_pc_10704 ], [ %v1_107f4, %dec_label_pc_10728 ], [ %v1_107f449, %dec_label_pc_10710.backedge ]
  %v0_1074c = phi i32 [ 0, %dec_label_pc_10704 ], [ 1, %dec_label_pc_10728 ], [ %v0_107ec, %dec_label_pc_10710.backedge ]
  %v7_1074c = icmp eq i32 %v0_1074c, 1
  store i1 %v7_1074c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1074c, label %bb118, label %bb119

bb118:                                            ; preds = %dec_label_pc_1074c
  %v2_10750 = add i32 %v1_10750, 1
  store i32 %v2_10750, i32* %r0.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %dec_label_pc_1074c, %bb118
  %v1_1075c = phi i32 [ %v1_10750, %dec_label_pc_1074c ], [ %v2_10750, %bb118 ]
  %v2_10754 = add i32 %v1_1075c, %v0_10704
  store i32 %v2_10754, i32* @r7, align 4
  %v1_10758 = add i32 %v2_10754, 1
  %v2_10758 = inttoptr i32 %v1_10758 to i8*
  %v3_10758 = load i8, i8* %v2_10758, align 1
  %v4_10758 = zext i8 %v3_10758 to i32
  store i32 %v4_10758, i32* %r3.global-to-local, align 4
  %v3_1075c = inttoptr i32 %v2_10754 to i8*
  %v4_1075c = load i8, i8* %v3_1075c, align 1
  %v6_1075c = zext i8 %v4_1075c to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_10764 = mul nuw nsw i32 %v4_10758, 256
  %v5_10764 = or i32 %v6_1075c, %v4_10764
  store i32 %v5_10764, i32* %r4.global-to-local, align 4
  %v1_10768 = call i32 @function_15368(i32 1)
  store i32 %v1_10768, i32* %r0.global-to-local, align 4
  %v9_1076c = icmp eq i32 %v5_10764, %v1_10768
  store i1 %v9_1076c, i1* %cpsr_z.global-to-local, align 1
  %v0_10770 = load i32, i32* @r7, align 4
  %v1_10770 = add i32 %v0_10770, 10
  store i32 %v1_10770, i32* @r8, align 4
  br i1 %v9_1076c, label %dec_label_pc_1080c, label %dec_label_pc_10778

dec_label_pc_10778:                               ; preds = %dec_label_pc_1080c.dec_label_pc_10778_crit_edge, %bb119
  %v0_107c8 = phi i32 [ %v0_10778.pre, %dec_label_pc_1080c.dec_label_pc_10778_crit_edge ], [ %v1_10770, %bb119 ]
  store i32 %v0_107c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1078424 = inttoptr i32 %v0_107c8 to i8*
  %v2_1078425 = load i8, i8* %v1_1078424, align 1
  %v3_1078426 = zext i8 %v2_1078425 to i32
  store i32 %v3_1078426, i32* %r2.global-to-local, align 4
  %v2_1078827 = icmp eq i8 %v2_1078425, 0
  store i1 %v2_1078827, i1* %cpsr_z.global-to-local, align 1
  %v3_1078c28 = mul nuw nsw i32 %v3_1078426, 256
  store i32 %v3_1078c28, i32* %r1.global-to-local, align 4
  br i1 %v2_1078827, label %dec_label_pc_107c0, label %dec_label_pc_10794.preheader

dec_label_pc_10794.preheader:                     ; preds = %dec_label_pc_10778, %dec_label_pc_10784.backedge
  %v1_10804 = phi i32 [ %v1_1080465, %dec_label_pc_10784.backedge ], [ 1, %dec_label_pc_10778 ]
  %v0_107fc63 = phi i32 [ %v0_107fc, %dec_label_pc_10784.backedge ], [ 0, %dec_label_pc_10778 ]
  %v0_107a061 = phi i32 [ %v3_1078c, %dec_label_pc_10784.backedge ], [ %v3_1078c28, %dec_label_pc_10778 ]
  %v0_1079c59 = phi i32 [ %v1_10800, %dec_label_pc_10784.backedge ], [ %v0_107c8, %dec_label_pc_10778 ]
  %v0_1079457 = phi i32 [ %v3_10784, %dec_label_pc_10784.backedge ], [ %v3_1078426, %dec_label_pc_10778 ]
  br label %dec_label_pc_10794

dec_label_pc_10794:                               ; preds = %dec_label_pc_10794.preheader, %dec_label_pc_1079c
  %v0_107fc = phi i32 [ %v0_107fc63, %dec_label_pc_10794.preheader ], [ 1, %dec_label_pc_1079c ]
  %v0_107a0 = phi i32 [ %v0_107a061, %dec_label_pc_10794.preheader ], [ %v3_107b8, %dec_label_pc_1079c ]
  %v0_10800 = phi i32 [ %v0_1079c59, %dec_label_pc_10794.preheader ], [ %v2_107a8, %dec_label_pc_1079c ]
  %v0_10794 = phi i32 [ %v0_1079457, %dec_label_pc_10794.preheader ], [ %v3_107ac, %dec_label_pc_1079c ]
  %v7_10794 = icmp eq i32 %v0_10794, 191
  store i1 %v7_10794, i1* %cpsr_z.global-to-local, align 1
  %tmp157 = icmp ult i32 %v0_10794, 192
  br i1 %tmp157, label %dec_label_pc_107fc, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_10794
  %v1_1079c = add i32 %v0_10800, 1
  %v2_1079c = inttoptr i32 %v1_1079c to i8*
  %v3_1079c = load i8, i8* %v2_1079c, align 1
  %v4_1079c = zext i8 %v3_1079c to i32
  %v2_107a0 = or i32 %v4_1079c, -49152
  %v0_107a8 = load i32, i32* @r5, align 4
  %v1_107a4 = add i32 %v0_107a8, %v0_107a0
  %v2_107a8 = add i32 %v1_107a4, %v2_107a0
  store i32 %v2_107a8, i32* %r3.global-to-local, align 4
  %v1_107ac = inttoptr i32 %v2_107a8 to i8*
  %v2_107ac = load i8, i8* %v1_107ac, align 1
  %v3_107ac = zext i8 %v2_107ac to i32
  store i32 %v3_107ac, i32* %r2.global-to-local, align 4
  %v2_107b0 = icmp eq i8 %v2_107ac, 0
  store i1 %v2_107b0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_107b8 = mul nuw nsw i32 %v3_107ac, 256
  store i32 %v3_107b8, i32* %r1.global-to-local, align 4
  br i1 %v2_107b0, label %dec_label_pc_107c0, label %dec_label_pc_10794

dec_label_pc_107c0:                               ; preds = %dec_label_pc_10784.backedge, %dec_label_pc_1079c, %dec_label_pc_10778
  %v1_107c4 = phi i32 [ 1, %dec_label_pc_10778 ], [ %v1_10804, %dec_label_pc_1079c ], [ %v1_1080465, %dec_label_pc_10784.backedge ]
  %v0_107c0 = phi i32 [ 0, %dec_label_pc_10778 ], [ 1, %dec_label_pc_1079c ], [ %v0_107fc, %dec_label_pc_10784.backedge ]
  %v7_107c0 = icmp eq i32 %v0_107c0, 1
  store i1 %v7_107c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c0, label %bb120, label %bb121

bb120:                                            ; preds = %dec_label_pc_107c0
  %v2_107c4 = add i32 %v1_107c4, 1
  store i32 %v2_107c4, i32* %r0.global-to-local, align 4
  br label %bb121

bb121:                                            ; preds = %dec_label_pc_107c0, %bb120
  %v1_107c8 = phi i32 [ %v1_107c4, %dec_label_pc_107c0 ], [ %v2_107c4, %bb120 ]
  %v2_107c8 = add i32 %v1_107c8, %v0_107c8
  br label %dec_label_pc_106f0.backedge

dec_label_pc_106f0.backedge:                      ; preds = %bb121, %dec_label_pc_1089c
  %storemerge29 = phi i32 [ %v2_107c8, %bb121 ], [ %v2_108ac, %dec_label_pc_1089c ]
  store i32 %storemerge29, i32* @r4, align 4
  %v0_106f0.pre = load i32, i32* @sl, align 4
  %v1_106f0 = add i32 %v0_106f0.pre, -1
  %v3_106f4 = mul i32 %v1_106f0, 65536
  store i32 %v3_106f4, i32* %r3.global-to-local, align 4
  %v7_106f8 = icmp eq i32 %v3_106f4, -65536
  store i1 %v7_106f8, i1* %cpsr_z.global-to-local, align 1
  %v3_106fc = urem i32 %v1_106f0, 65536
  store i32 %v3_106fc, i32* @sl, align 4
  br i1 %v7_106f8, label %dec_label_pc_1067c, label %dec_label_pc_10704

dec_label_pc_107d0:                               ; preds = %dec_label_pc_1067c
  %v1_107d0 = add i32 %v0_10684, 4
  %v2_107d0 = inttoptr i32 %v1_107d0 to i32*
  %v3_107d0 = load i32, i32* %v2_107d0, align 4
  store i32 %v3_107d0, i32* %r0.global-to-local, align 4
  %v2_107d4 = icmp eq i32 %v3_107d0, 0
  store i1 %v2_107d4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_107dc.194 to i32), i32* @lr, align 4
  %v1_107d8 = xor i1 %v2_107d4, true
  call void @__pseudo_cond_branch(i1 %v1_107d8, i32 ptrtoint (i32* @global_var_1429c.57 to i32))
  %v0_107dc = load i32, i32* @fp, align 4
  store i32 %v0_107dc, i32* %r0.global-to-local, align 4
  %v1_107e0 = call i32 @function_1429c(i32 %v0_107dc)
  store i32 %v1_107e0, i32* %r0.global-to-local, align 4
  %v0_107e4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10690

dec_label_pc_107ec:                               ; preds = %dec_label_pc_10720
  %v2_107ec = icmp eq i32 %v0_107ec, 0
  store i1 %v2_107ec, i1* %cpsr_z.global-to-local, align 1
  %v1_107f0 = add i32 %v0_107f0, 1
  store i32 %v1_107f0, i32* %r3.global-to-local, align 4
  br i1 %v2_107ec, label %bb122, label %dec_label_pc_10710.backedge

dec_label_pc_10710.backedge:                      ; preds = %dec_label_pc_107ec, %bb122
  %v1_107f449 = phi i32 [ %v1_107f4, %dec_label_pc_107ec ], [ %v2_107f4, %bb122 ]
  %v1_10710 = inttoptr i32 %v1_107f0 to i8*
  %v2_10710 = load i8, i8* %v1_10710, align 1
  %v3_10710 = zext i8 %v2_10710 to i32
  store i32 %v3_10710, i32* %r2.global-to-local, align 4
  %v2_10714 = icmp eq i8 %v2_10710, 0
  store i1 %v2_10714, i1* %cpsr_z.global-to-local, align 1
  %v3_10718 = mul nuw nsw i32 %v3_10710, 256
  store i32 %v3_10718, i32* %r1.global-to-local, align 4
  br i1 %v2_10714, label %dec_label_pc_1074c, label %dec_label_pc_10720.preheader

bb122:                                            ; preds = %dec_label_pc_107ec
  %v2_107f4 = add i32 %v1_107f4, 1
  store i32 %v2_107f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10710.backedge

dec_label_pc_107fc:                               ; preds = %dec_label_pc_10794
  %v2_107fc = icmp eq i32 %v0_107fc, 0
  store i1 %v2_107fc, i1* %cpsr_z.global-to-local, align 1
  %v1_10800 = add i32 %v0_10800, 1
  store i32 %v1_10800, i32* %r3.global-to-local, align 4
  br i1 %v2_107fc, label %bb123, label %dec_label_pc_10784.backedge

dec_label_pc_10784.backedge:                      ; preds = %dec_label_pc_107fc, %bb123
  %v1_1080465 = phi i32 [ %v1_10804, %dec_label_pc_107fc ], [ %v2_10804, %bb123 ]
  %v1_10784 = inttoptr i32 %v1_10800 to i8*
  %v2_10784 = load i8, i8* %v1_10784, align 1
  %v3_10784 = zext i8 %v2_10784 to i32
  store i32 %v3_10784, i32* %r2.global-to-local, align 4
  %v2_10788 = icmp eq i8 %v2_10784, 0
  store i1 %v2_10788, i1* %cpsr_z.global-to-local, align 1
  %v3_1078c = mul nuw nsw i32 %v3_10784, 256
  store i32 %v3_1078c, i32* %r1.global-to-local, align 4
  br i1 %v2_10788, label %dec_label_pc_107c0, label %dec_label_pc_10794.preheader

bb123:                                            ; preds = %dec_label_pc_107fc
  %v2_10804 = add i32 %v1_10804, 1
  store i32 %v2_10804, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10784.backedge

dec_label_pc_1080c:                               ; preds = %bb119
  %v1_1080c = add i32 %v0_10770, 2
  %v2_1080c = inttoptr i32 %v1_1080c to i8*
  %v3_1080c = load i8, i8* %v2_1080c, align 1
  %v4_1080c = zext i8 %v3_1080c to i32
  store i32 %v4_1080c, i32* %r4.global-to-local, align 4
  %v1_10810 = add i32 %v0_10770, 3
  %v2_10810 = inttoptr i32 %v1_10810 to i8*
  %v3_10810 = load i8, i8* %v2_10810, align 1
  %v4_10810 = zext i8 %v3_10810 to i32
  store i32 %v4_10810, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_10818 = mul nuw nsw i32 %v4_10810, 256
  %v5_10818 = or i32 %v4_10818, %v4_1080c
  store i32 %v5_10818, i32* @r4, align 4
  %v1_1081c = call i32 @function_15368(i32 1)
  store i32 %v1_1081c, i32* %r0.global-to-local, align 4
  %v0_10820 = load i32, i32* @r4, align 4
  %v9_10820 = icmp eq i32 %v0_10820, %v1_1081c
  store i1 %v9_10820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10820, label %dec_label_pc_10828, label %dec_label_pc_1080c.dec_label_pc_10778_crit_edge

dec_label_pc_1080c.dec_label_pc_10778_crit_edge:  ; preds = %dec_label_pc_1080c
  %v0_10778.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10778

dec_label_pc_10828:                               ; preds = %dec_label_pc_1080c
  %v0_10828 = load i32, i32* @r7, align 4
  %v1_10828 = add i32 %v0_10828, 8
  %v2_10828 = inttoptr i32 %v1_10828 to i8*
  %v3_10828 = load i8, i8* %v2_10828, align 1
  %v4_10828 = zext i8 %v3_10828 to i32
  store i32 %v4_10828, i32* %r3.global-to-local, align 4
  %v1_1082c = add i32 %v0_10828, 9
  %v2_1082c = inttoptr i32 %v1_1082c to i8*
  %v3_1082c = load i8, i8* %v2_1082c, align 1
  %v4_1082c = zext i8 %v3_1082c to i32
  %v4_10830 = mul nuw nsw i32 %v4_1082c, 256
  %v5_10830 = or i32 %v4_10830, %v4_10828
  store i32 %v5_10830, i32* %r0.global-to-local, align 4
  %v1_10834 = call i32 @function_15510(i32 %v5_10830)
  store i32 %v1_10834, i32* %r0.global-to-local, align 4
  %v7_10838 = icmp eq i32 %v1_10834, 4
  store i1 %v7_10838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10838, label %dec_label_pc_10840, label %dec_label_pc_1089c

dec_label_pc_10840:                               ; preds = %dec_label_pc_10828
  %v0_10840 = load i32, i32* @r7, align 4
  %v1_10840 = add i32 %v0_10840, 10
  %v2_10840 = inttoptr i32 %v1_10840 to i8*
  %v3_10840 = load i8, i8* %v2_10840, align 1
  %v4_10840 = zext i8 %v3_10840 to i32
  store i32 %v4_10840, i32* %r3.global-to-local, align 4
  store i32 %v2_10428, i32* %r2.global-to-local, align 4
  %v0_1084c = load i32, i32* @r8, align 4
  %v1_1084c = add i32 %v0_1084c, 1
  %v2_1084c = inttoptr i32 %v1_1084c to i8*
  %v3_1084c = load i8, i8* %v2_1084c, align 1
  %v4_1084c = zext i8 %v3_1084c to i32
  store i32 %v4_1084c, i32* %r2.global-to-local, align 4
  store i32 %v2_10428, i32* %r3.global-to-local, align 4
  %v1_10858 = add i32 %v0_1084c, 2
  %v2_10858 = inttoptr i32 %v1_10858 to i8*
  %v3_10858 = load i8, i8* %v2_10858, align 1
  %v4_10858 = zext i8 %v3_10858 to i32
  store i32 %v4_10858, i32* %r3.global-to-local, align 4
  store i32 %v2_10428, i32* %ip.global-to-local, align 4
  %v1_10864 = add i32 %v0_1084c, 3
  %v2_10864 = inttoptr i32 %v1_10864 to i8*
  %v3_10864 = load i8, i8* %v2_10864, align 1
  %v4_10864 = zext i8 %v3_10864 to i32
  store i32 %v4_10864, i32* %r2.global-to-local, align 4
  %v0_1086c = load i32, i32* @fp, align 4
  %v1_1086c = inttoptr i32 %v0_1086c to i8*
  %v2_1086c = load i8, i8* %v1_1086c, align 1
  %v3_1086c = zext i8 %v2_1086c to i32
  %v1_10870 = mul nuw nsw i32 %v3_1086c, 4
  %v3_10874 = add nuw nsw i32 %v1_10870, 4
  store i32 %v3_10874, i32* %r1.global-to-local, align 4
  %v1_10878 = add i32 %v0_1086c, 4
  %v2_10878 = inttoptr i32 %v1_10878 to i32*
  %v3_10878 = load i32, i32* %v2_10878, align 4
  store i32 %v3_10878, i32* %r0.global-to-local, align 4
  %v3_1087c = sext i8 %v3_10864 to i32
  %v5_1087c = sext i8 %v3_10858 to i32
  %v10_1087c = call i32 @function_14ee4(i32 %v3_10878, i32 %v3_10874, i32 %v3_1087c, i32 %v5_1087c)
  store i32 %v10_1087c, i32* %r0.global-to-local, align 4
  %v0_10880 = load i32, i32* @fp, align 4
  %v1_10880 = inttoptr i32 %v0_10880 to i8*
  %v2_10880 = load i8, i8* %v1_10880, align 1
  %v3_10880 = zext i8 %v2_10880 to i32
  store i32 %v3_10880, i32* %r2.global-to-local, align 4
  store i32 %v2_10428, i32* @lr, align 4
  %v4_10888 = sext i8 %v3_10840 to i32
  store i32 %v4_10888, i32* %r3.global-to-local, align 4
  %v1_1088c = add nuw nsw i32 %v3_10880, 1
  store i32 %v1_1088c, i32* %r1.global-to-local, align 4
  %v5_10890 = mul nuw nsw i32 %v3_10880, 4
  %v6_10890 = add i32 %v5_10890, %v10_1087c
  %v7_10890 = inttoptr i32 %v6_10890 to i32*
  store i32 %v4_10888, i32* %v7_10890, align 4
  %v1_10894 = load i32, i32* @fp, align 4
  %v2_10894 = add i32 %v1_10894, 4
  %v3_10894 = inttoptr i32 %v2_10894 to i32*
  store i32 %v10_1087c, i32* %v3_10894, align 4
  %v0_10898 = load i32, i32* %r1.global-to-local, align 4
  %v1_10898 = trunc i32 %v0_10898 to i8
  %v2_10898 = load i32, i32* @fp, align 4
  %v3_10898 = inttoptr i32 %v2_10898 to i8*
  store i8 %v1_10898, i8* %v3_10898, align 1
  br label %dec_label_pc_1089c

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10828, %dec_label_pc_10840
  %v0_1089c = load i32, i32* @r7, align 4
  %v1_1089c = add i32 %v0_1089c, 9
  %v2_1089c = inttoptr i32 %v1_1089c to i8*
  %v3_1089c = load i8, i8* %v2_1089c, align 1
  %v4_1089c = zext i8 %v3_1089c to i32
  store i32 %v4_1089c, i32* %r3.global-to-local, align 4
  %v1_108a0 = add i32 %v0_1089c, 8
  %v2_108a0 = inttoptr i32 %v1_108a0 to i8*
  %v3_108a0 = load i8, i8* %v2_108a0, align 1
  %v4_108a0 = zext i8 %v3_108a0 to i32
  %v4_108a4 = mul nuw nsw i32 %v4_1089c, 256
  %v5_108a4 = or i32 %v4_108a0, %v4_108a4
  store i32 %v5_108a4, i32* %r0.global-to-local, align 4
  %v1_108a8 = call i32 @function_15510(i32 %v5_108a4)
  store i32 %v1_108a8, i32* %r0.global-to-local, align 4
  %v1_108ac = load i32, i32* @r8, align 4
  %v2_108ac = add i32 %v1_108ac, %v1_108a8
  br label %dec_label_pc_106f0.backedge

; uselistorder directives
  uselistorder i32 %v10_1087c, { 1, 0, 2 }
  uselistorder i32 %v3_10874, { 1, 0 }
  uselistorder i32 %v2_10804, { 1, 0 }
  uselistorder i32 %v3_10784, { 0, 2, 1 }
  uselistorder i32 %v1_1080465, { 1, 0 }
  uselistorder i32 %v1_10800, { 1, 2, 0 }
  uselistorder i32 %v2_107f4, { 1, 0 }
  uselistorder i32 %v3_10710, { 0, 2, 1 }
  uselistorder i32 %v1_107f449, { 1, 0 }
  uselistorder i32 %v1_107f0, { 1, 2, 0 }
  uselistorder i1 %v7_106f8, { 1, 0 }
  uselistorder i32 %v1_106f0, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_107ac, { 0, 2, 1 }
  uselistorder i32 %v2_107a8, { 1, 2, 0 }
  uselistorder i32 %v0_107fc, { 2, 0, 1 }
  uselistorder i32 %v1_10804, { 1, 2, 0 }
  uselistorder i32 %v3_1078c28, { 1, 0 }
  uselistorder i32 %v3_1078426, { 1, 0, 2 }
  uselistorder i32 %v0_107c8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10770, { 1, 0, 2 }
  uselistorder i32 %v3_10738, { 0, 2, 1 }
  uselistorder i32 %v2_10734, { 1, 2, 0 }
  uselistorder i32 %v0_107ec, { 2, 0, 1 }
  uselistorder i32 %v1_107f4, { 1, 2, 0 }
  uselistorder i32 %v3_1071822, { 1, 0 }
  uselistorder i32 %v3_1071020, { 1, 0, 2 }
  uselistorder i32 %v0_10704, { 3, 0, 2, 1 }
  uselistorder i1 %v7_106f8140, { 1, 0 }
  uselistorder i32 %v1_106f0133, { 1, 0 }
  uselistorder i1 %v9_106d0, { 1, 0 }
  uselistorder i32 %v0_10690, { 1, 0 }
  uselistorder i32 %v0_10684, { 1, 0, 2 }
  uselistorder i32 %v0_10674, { 1, 0 }
  uselistorder i32 %v0_1064c, { 1, 0 }
  uselistorder i1 %v7_105f8, { 1, 0 }
  uselistorder i32 %v5_105f4, { 1, 0, 2 }
  uselistorder i32 %v1_105bc, { 1, 0 }
  uselistorder i32 %v3_105a8, { 1, 0 }
  uselistorder i32 %v0_105a0, { 1, 0 }
  uselistorder i32 %v1_10594, { 1, 2, 0 }
  uselistorder i1 %v7_1054c, { 1, 0 }
  uselistorder i32 %v4_10548, { 1, 0, 2 }
  uselistorder i1 %v7_10530, { 1, 0 }
  uselistorder i32 %v3_1052c, { 1, 0, 2 }
  uselistorder i1 %v7_10514, { 1, 0 }
  uselistorder i32 %v3_10510, { 2, 1, 0, 3 }
  uselistorder i1 %v7_104f8, { 2, 1, 0 }
  uselistorder i32 %v1_104fc, { 1, 0 }
  uselistorder i32 %v2_105ac, { 1, 0, 2 }
  uselistorder i32 %v2_10588, { 1, 0, 2 }
  uselistorder i32 %v1_104e4, { 1, 0 }
  uselistorder i32 %v2_10474, { 1, 0, 2, 3 }
  uselistorder i32 %v6_10460, { 1, 2, 0 }
  uselistorder i64 %v5_1045c, { 0, 2, 1 }
  uselistorder i32 %v1_10448, { 1, 0, 2 }
  uselistorder i32 %v1_10400, { 1, 0 }
  uselistorder i32 %v1_103fc, { 1, 2, 0 }
  uselistorder i32 %v2_103f8, { 1, 0 }
  uselistorder i1 %v8_103e4, { 1, 0 }
  uselistorder i32 %v2_103bc, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp78, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 31, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 32 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 9, 6, 1, 8, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 8, 5, 1, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 20, 22, 19 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 10, 7, 8, 9, 15, 12, 11, 13, 14, 19, 16, 17, 18, 22, 20, 21, 23, 26, 24, 25, 27, 30, 28, 29, 31, 33, 32, 35, 34, 36, 37, 38, 41, 40, 39, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 11, 5, 16, 6, 7, 17, 8, 9, 10, 2, 12, 13, 14, 15, 1, 37, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 35, 32, 33, 31, 34, 36 }
  uselistorder i32 (i32)* @function_16728, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1089c, { 1, 0 }
  uselistorder label %dec_label_pc_10784.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10710.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_106f0.backedge, { 1, 0 }
  uselistorder label %bb121, { 1, 0 }
  uselistorder label %dec_label_pc_10794, { 1, 0 }
  uselistorder label %dec_label_pc_10794.preheader, { 1, 0 }
  uselistorder label %bb119, { 1, 0 }
  uselistorder label %dec_label_pc_10720, { 1, 0 }
  uselistorder label %dec_label_pc_10720.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10704, { 1, 0 }
  uselistorder label %dec_label_pc_10690, { 1, 0 }
  uselistorder label %dec_label_pc_1067c, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1065c, { 2, 1, 4, 0, 3 }
  uselistorder label %bb117, { 1, 0 }
  uselistorder label %bb114, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_103dc, { 1, 0 }
}

define i32 @function_108b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_108b4:
  %v2_108c0 = load i32, i32* @global_var_23680.196, align 4
  store i32 %v2_108c0, i32* @r0, align 4
  %v2_108c8 = call i32 @function_158f4(i32 %v2_108c0, i32 9)
  ret i32 %v2_108c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_158f4, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_108dc() local_unnamed_addr {
dec_label_pc_108dc:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_108dc = load i32, i32* @r4, align 4
  store i32 %v3_108dc, i32* %stack_var_-16, align 4
  %v6_108dc = load i32, i32* @r5, align 4
  %v9_108dc = load i32, i32* @r6, align 4
  %v12_108dc = load i32, i32* @lr, align 4
  %v0_108e0 = load i32, i32* @r0, align 4
  store i32 %v0_108e0, i32* @r5, align 4
  %v1_108e4 = add i32 %v0_108e0, 4
  %v2_108e4 = inttoptr i32 %v1_108e4 to i32*
  %v3_108e4 = load i32, i32* %v2_108e4, align 4
  store i32 %v3_108e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 67848, i32* @lr, align 4
  %v1_10904 = icmp ne i32 %v3_108e4, -1
  call void @__pseudo_cond_branch(i1 %v1_10904, i32 ptrtoint (i32* @global_var_1663c.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10910 = load i32, i32* @r6, align 4
  store i32 %v0_10910, i32* %r2.global-to-local, align 4
  %v3_10914 = call i32 @function_15670(i32 2, i32 1, i32 %v0_10910)
  store i32 %v3_10914, i32* %r0.global-to-local, align 4
  %v7_10918 = icmp eq i32 %v3_10914, -1
  %v1_1091c = load i32, i32* @r5, align 4
  %v2_1091c = add i32 %v1_1091c, 4
  %v3_1091c = inttoptr i32 %v2_1091c to i32*
  store i32 %v3_10914, i32* %v3_1091c, align 4
  br i1 %v7_10918, label %dec_label_pc_108dc.dec_label_pc_10994_crit_edge, label %dec_label_pc_10924

dec_label_pc_108dc.dec_label_pc_10994_crit_edge:  ; preds = %dec_label_pc_108dc
  %v1_1099c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10994

dec_label_pc_10924:                               ; preds = %dec_label_pc_108dc
  %v2_108e8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10924 = load i32, i32* @r5, align 4
  %v1_10924 = add i32 %v0_10924, 28
  store i32 %v1_10924, i32* %r0.global-to-local, align 4
  %v0_10928 = load i32, i32* @r6, align 4
  %v2_10928 = add i32 %v0_10924, 24
  %v3_10928 = inttoptr i32 %v2_10928 to i32*
  store i32 %v0_10928, i32* %v3_10928, align 4
  %v2_10930 = call i32 @function_12ed4(i32 %v1_10924, i32 256)
  store i32 %v2_10930, i32* %r0.global-to-local, align 4
  %v0_10934 = load i32, i32* @r5, align 4
  %v1_10934 = add i32 %v0_10934, 4
  %v2_10934 = inttoptr i32 %v1_10934 to i32*
  %v3_10934 = load i32, i32* %v2_10934, align 4
  store i32 %v3_10934, i32* @r4, align 4
  %v0_10938 = load i32, i32* @r6, align 4
  store i32 %v0_10938, i32* %r2.global-to-local, align 4
  store i32 %v3_10934, i32* %r0.global-to-local, align 4
  %v3_10944 = call i32 @function_13a84(i32 %v3_10934, i32 3, i32 %v0_10938)
  %v1_1094c = or i32 %v3_10944, 2048
  store i32 %v1_1094c, i32* %r2.global-to-local, align 4
  %v0_10950 = load i32, i32* @r4, align 4
  store i32 %v0_10950, i32* %r0.global-to-local, align 4
  %v3_10954 = call i32 @function_13a84(i32 %v0_10950, i32 4, i32 %v1_1094c)
  store i32 %v3_10954, i32* %r0.global-to-local, align 4
  %v2_1095c = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_1095c, i32* %r2.global-to-local, align 4
  %v1_10964 = load i32, i32* @r5, align 4
  %v2_10964 = add i32 %v1_10964, 12
  %v3_10964 = inttoptr i32 %v2_10964 to i32*
  store i32 1, i32* %v3_10964, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_10970 = load i32, i32* %r2.global-to-local, align 4
  %v1_10970 = load i32, i32* @r5, align 4
  %v2_10970 = add i32 %v1_10970, 8
  %v3_10970 = inttoptr i32 %v2_10970 to i32*
  store i32 %v0_10970, i32* %v3_10970, align 4
  %v0_10974 = load i32, i32* @r5, align 4
  %v1_10978 = add i32 %v0_10974, 4
  %v2_10978 = inttoptr i32 %v1_10978 to i32*
  %v3_10978 = load i32, i32* %v2_10978, align 4
  store i32 %v3_10978, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_10990 = call i32 @function_152b4(i32 %v3_10978, i32 %v2_108e8, i32 16)
  store i32 %v3_10990, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10994

dec_label_pc_10994:                               ; preds = %dec_label_pc_108dc.dec_label_pc_10994_crit_edge, %dec_label_pc_10924
  %v1_1099c = phi i32 [ %v1_1099c.pre, %dec_label_pc_108dc.dec_label_pc_10994_crit_edge ], [ %v3_10990, %dec_label_pc_10924 ]
  %v2_10998 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10998, i32* @r4, align 4
  store i32 %v6_108dc, i32* @r5, align 4
  store i32 %v9_108dc, i32* @r6, align 4
  store i32 %v12_108dc, i32* @lr, align 4
  ret i32 %v1_1099c

; uselistorder directives
  uselistorder i32 %v3_10914, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @function_12ed4, { 8, 12, 16, 15, 14, 13, 11, 10, 9, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10994, { 1, 0 }
}

define i32 @function_109a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_109a4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_109a4 = load i32, i32* @r4, align 4
  %v6_109a4 = load i32, i32* @r5, align 4
  %v9_109a4 = load i32, i32* @r6, align 4
  %v12_109a4 = load i32, i32* @r7, align 4
  %v15_109a4 = load i32, i32* @r8, align 4
  %v18_109a4 = load i32, i32* @sb, align 4
  %v21_109a4 = load i32, i32* @sl, align 4
  %v24_109a4 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_230b4.200 to i32), i32* @fp, align 4
  %v2_109ac = load i32, i32* @global_var_230b4.200, align 4
  store i32 ptrtoint (i32* @global_var_230e0.202 to i32), i32* @sl, align 4
  %v1_109b8 = add i32 %v2_109ac, 1
  store i32 %v1_109b8, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_109c4 = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_109c4, i32* %r0.global-to-local, align 4
  %v3_109c8 = mul i32 %v1_109b8, 16
  store i32 %v3_109c8, i32* %r1.global-to-local, align 4
  %v4_109d0 = call i32 @function_14ee4(i32 %v2_109c4, i32 %v3_109c8, i32 %arg3, i32 %v1_109b8)
  %v2_109d4 = load i32, i32* @global_var_230b4.200, align 4
  store i32 %v2_109d4, i32* %r2.global-to-local, align 4
  store i32 %v4_109d0, i32* @r8, align 4
  %v0_109dc = load i32, i32* @r5, align 4
  store i32 %v0_109dc, i32* %r0.global-to-local, align 4
  %v1_109e4 = load i32, i32* @sl, align 4
  %v2_109e4 = inttoptr i32 %v1_109e4 to i32*
  store i32 %v4_109d0, i32* %v2_109e4, align 4
  %v1_109e8 = inttoptr i32 %v0_109dc to i8*
  %v2_109e8 = call i32 @function_12e40(i8* %v1_109e8)
  %sext = mul i32 %v2_109e8, 16777216
  %v1_109ec = sdiv i32 %sext, 16777216
  %v2_109ec = add nsw i32 %v1_109ec, 1
  store i32 %v2_109ec, i32* @r4, align 4
  store i32 %v1_109ec, i32* @r7, align 4
  store i32 %v2_109ec, i32* @r0, align 4
  %v0_109f8 = call i32 @function_14798()
  store i32 %v0_109f8, i32* %r0.global-to-local, align 4
  %v0_109fc = load i32, i32* @r5, align 4
  store i32 %v0_109fc, i32* %r1.global-to-local, align 4
  %v0_10a00 = load i32, i32* @r4, align 4
  store i32 %v0_10a00, i32* %r2.global-to-local, align 4
  store i32 %v0_109f8, i32* %r6.global-to-local, align 4
  %v3_10a08 = call i32 @function_12eb0(i32 %v0_109f8, i32 %v0_109fc, i32 %v0_10a00)
  store i32 %v3_10a08, i32* %r0.global-to-local, align 4
  %v0_10a0c = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_10a0c, 1
  %extract.t6 = trunc i32 %v0_10a0c to i8
  br i1 %tmp22, label %dec_label_pc_10a30, label %dec_label_pc_10a14

dec_label_pc_10a14:                               ; preds = %dec_label_pc_109a4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %dec_label_pc_10a18, %dec_label_pc_10a14
  %v2_10a20 = phi i32 [ %v1_10a24, %dec_label_pc_10a18 ], [ 0, %dec_label_pc_10a14 ]
  %v1_10a18 = load i32, i32* %r6.global-to-local, align 4
  %v2_10a18 = add i32 %v1_10a18, %v2_10a20
  %v3_10a18 = inttoptr i32 %v2_10a18 to i8*
  %v4_10a18 = load i8, i8* %v3_10a18, align 1
  %v6_10a18 = zext i8 %v4_10a18 to i32
  %v1_10a1c = xor i32 %v6_10a18, 34
  store i32 %v1_10a1c, i32* %r3.global-to-local, align 4
  %v1_10a20 = trunc i32 %v1_10a1c to i8
  store i8 %v1_10a20, i8* %v3_10a18, align 1
  %v0_10a24 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a24 = add i32 %v0_10a24, 1
  store i32 %v1_10a24, i32* %r2.global-to-local, align 4
  %v1_10a28 = load i32, i32* @r7, align 4
  %v9_10a28 = icmp eq i32 %v1_10a24, %v1_10a28
  br i1 %v9_10a28, label %dec_label_pc_10a30.loopexit, label %dec_label_pc_10a18

dec_label_pc_10a30.loopexit:                      ; preds = %dec_label_pc_10a18
  %extract.t = trunc i32 %v1_10a24 to i8
  br label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a30.loopexit, %dec_label_pc_109a4
  %v0_10a40.off0 = phi i8 [ %extract.t, %dec_label_pc_10a30.loopexit ], [ %extract.t6, %dec_label_pc_109a4 ]
  %v2_10a30 = load i32, i32* @global_var_230b4.200, align 4
  %v2_10a34 = load i32, i32* @global_var_230e0.202, align 4
  %v3_10a38 = mul i32 %v2_10a30, 16
  store i32 %v3_10a38, i32* @sb, align 4
  %v2_10a3c = add i32 %v2_10a34, %v3_10a38
  store i32 %v2_10a3c, i32* %r2.global-to-local, align 4
  %v3_10a40 = add i32 %v2_10a3c, 12
  %v4_10a40 = inttoptr i32 %v3_10a40 to i8*
  store i8 %v0_10a40.off0, i8* %v4_10a40, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_109d4, i32* %r3.global-to-local, align 4
  %v0_10a4c = load i32, i32* %r6.global-to-local, align 4
  %v1_10a4c = load i32, i32* @r8, align 4
  %v5_10a4c = mul i32 %v2_109d4, 16
  %v6_10a4c = add i32 %v1_10a4c, %v5_10a4c
  %v7_10a4c = inttoptr i32 %v6_10a4c to i32*
  store i32 %v0_10a4c, i32* %v7_10a4c, align 4
  %v2_10a50 = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_10a50, i32* @r7, align 4
  %v1_10a54 = inttoptr i32 %arg2 to i8*
  %v2_10a54 = call i32 @function_12e40(i8* %v1_10a54)
  %sext1 = mul i32 %v2_10a54, 16777216
  %v1_10a58 = sdiv i32 %sext1, 16777216
  %v2_10a58 = add nsw i32 %v1_10a58, 1
  store i32 %v2_10a58, i32* @r4, align 4
  store i32 %v1_10a58, i32* @r6, align 4
  store i32 %v2_10a58, i32* @r0, align 4
  %v0_10a64 = call i32 @function_14798()
  store i32 %v0_10a64, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_10a6c = load i32, i32* @r4, align 4
  store i32 %v0_10a6c, i32* %r2.global-to-local, align 4
  store i32 %v0_10a64, i32* %r5.global-to-local, align 4
  %v3_10a74 = call i32 @function_12eb0(i32 %v0_10a64, i32 %arg2, i32 %v0_10a6c)
  store i32 %v3_10a74, i32* %r0.global-to-local, align 4
  %v0_10a78 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_10a78, 1
  %extract.t8 = trunc i32 %v0_10a78 to i8
  br i1 %tmp23, label %dec_label_pc_10a9c, label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a30
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a84

dec_label_pc_10a84:                               ; preds = %dec_label_pc_10a84, %dec_label_pc_10a80
  %v2_10a8c = phi i32 [ %v1_10a90, %dec_label_pc_10a84 ], [ 0, %dec_label_pc_10a80 ]
  %v1_10a84 = load i32, i32* %r5.global-to-local, align 4
  %v2_10a84 = add i32 %v1_10a84, %v2_10a8c
  %v3_10a84 = inttoptr i32 %v2_10a84 to i8*
  %v4_10a84 = load i8, i8* %v3_10a84, align 1
  %v6_10a84 = zext i8 %v4_10a84 to i32
  %v1_10a88 = xor i32 %v6_10a84, 34
  store i32 %v1_10a88, i32* %r3.global-to-local, align 4
  %v1_10a8c = trunc i32 %v1_10a88 to i8
  store i8 %v1_10a8c, i8* %v3_10a84, align 1
  %v0_10a90 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a90 = add i32 %v0_10a90, 1
  store i32 %v1_10a90, i32* %r2.global-to-local, align 4
  %v1_10a94 = load i32, i32* @r6, align 4
  %v9_10a94 = icmp eq i32 %v1_10a90, %v1_10a94
  br i1 %v9_10a94, label %dec_label_pc_10a9c.loopexit, label %dec_label_pc_10a84

dec_label_pc_10a9c.loopexit:                      ; preds = %dec_label_pc_10a84
  %extract.t7 = trunc i32 %v1_10a90 to i8
  br label %dec_label_pc_10a9c

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a9c.loopexit, %dec_label_pc_10a30
  %v0_10aac.off0 = phi i8 [ %extract.t7, %dec_label_pc_10a9c.loopexit ], [ %extract.t8, %dec_label_pc_10a30 ]
  %v2_10a9c = load i32, i32* @global_var_230b4.200, align 4
  store i32 %v2_10a9c, i32* %r0.global-to-local, align 4
  %v2_10aa0 = load i32, i32* @global_var_230e0.202, align 4
  %v3_10aa4 = mul i32 %v2_10a9c, 16
  store i32 %v3_10aa4, i32* %r1.global-to-local, align 4
  %v2_10aa8 = or i32 %v3_10aa4, 13
  %v3_10aac = add i32 %v2_10aa8, %v2_10aa0
  %v4_10aac = inttoptr i32 %v3_10aac to i8*
  store i8 %v0_10aac.off0, i8* %v4_10aac, align 1
  store i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32* %r4.global-to-local, align 4
  %v2_10ab8 = load i16, i16* bitcast (i16** @global_var_230e4.204 to i16*), align 4
  %v3_10ab8 = zext i16 %v2_10ab8 to i32
  store i32 %v3_10ab8, i32* %lr.global-to-local, align 4
  %v2_10ac0 = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_10ac0, i32* %r2.global-to-local, align 4
  %v0_10ac8 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ac8 = add i32 %v0_10ac8, %v2_10ac0
  store i32 %v2_10ac8, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_10ad0 = load i32, i32* @sb, align 4
  %v1_10ad0 = load i32, i32* @r7, align 4
  %v2_10ad0 = add i32 %v1_10ad0, %v0_10ad0
  store i32 %v2_10ad0, i32* %ip.global-to-local, align 4
  %v0_10ad4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ad4 = add i32 %v0_10ad4, 1
  store i32 %v1_10ad4, i32* %r0.global-to-local, align 4
  %v3_10ad8 = add i32 %v2_10ac8, 10
  %v4_10ad8 = inttoptr i32 %v3_10ad8 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32 16), i32 16) to i16), i16* %v4_10ad8, align 2
  %v0_10adc = load i32, i32* %lr.global-to-local, align 4
  %v1_10adc = trunc i32 %v0_10adc to i16
  %v2_10adc = load i32, i32* %r1.global-to-local, align 4
  %v3_10adc = add i32 %v2_10adc, 8
  %v4_10adc = inttoptr i32 %v3_10adc to i16*
  store i16 %v1_10adc, i16* %v4_10adc, align 2
  %v0_10ae0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10ae0 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ae0 = add i32 %v1_10ae0, 4
  %v3_10ae0 = inttoptr i32 %v2_10ae0 to i32*
  store i32 %v0_10ae0, i32* %v3_10ae0, align 4
  %v1_10ae4 = load i32, i32* @fp, align 4
  %v2_10ae4 = inttoptr i32 %v1_10ae4 to i32*
  store i32 %v1_10ad4, i32* %v2_10ae4, align 4
  %v0_10ae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ae8 = trunc i32 %v0_10ae8 to i16
  %v2_10ae8 = load i32, i32* %r4.global-to-local, align 4
  %v3_10ae8 = inttoptr i32 %v2_10ae8 to i16*
  store i16 %v1_10ae8, i16* %v3_10ae8, align 2
  store i32 %v3_109a4, i32* @r4, align 4
  store i32 %v6_109a4, i32* @r5, align 4
  store i32 %v9_109a4, i32* @r6, align 4
  store i32 %v12_109a4, i32* @r7, align 4
  store i32 %v15_109a4, i32* @r8, align 4
  store i32 %v18_109a4, i32* @sb, align 4
  store i32 %v21_109a4, i32* @sl, align 4
  store i32 %v24_109a4, i32* @fp, align 4
  ret i32 %v1_10ad4

; uselistorder directives
  uselistorder i32 %v3_10aa4, { 1, 0 }
  uselistorder i32 %v1_10a90, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10a64, { 1, 0, 2 }
  uselistorder i32 %v3_10a38, { 1, 0 }
  uselistorder i32 %v1_10a24, { 0, 2, 3, 1 }
  uselistorder i32 %v0_109f8, { 1, 0, 2 }
  uselistorder i32 %v2_109d4, { 1, 0, 2 }
  uselistorder i32 %v3_109c8, { 1, 0 }
  uselistorder i32 %v1_109b8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_12e40, { 27, 28, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 84, 85, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14ee4, { 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_10b04() local_unnamed_addr {
dec_label_pc_10b04:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp273 = call i32 @__decompiler_undefined_function_0()
  %tmp274 = call i32 @__decompiler_undefined_function_0()
  %tmp275 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10b10 = call i32 @function_15768()
  store i32 %v0_10b10, i32* %r0.global-to-local, align 4
  %v7_10b14 = icmp eq i32 %v0_10b10, -1
  %. = zext i1 %v7_10b14 to i32
  %tmp308 = icmp slt i32 %v0_10b10, 1
  %storemerge268 = select i1 %tmp308, i32 %., i32 1
  store i32 %storemerge268, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23680.196 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b30 = icmp eq i32 %storemerge268, 0
  store i1 %v2_10b30, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_10b10, i32* @global_var_23680.196, align 4
  br i1 %v2_10b30, label %dec_label_pc_10b4c, label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b04
  ret i32 %v0_10b10

dec_label_pc_10b4c:                               ; preds = %dec_label_pc_10b04
  %v0_10b4c = call i32 @function_130fc()
  store i32 %v0_10b4c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2365c.93 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_10b4c, i32* @global_var_2365c.93, align 4
  %v1_10b58 = call i32 @function_100e8(i32 %v0_10b4c)
  %v0_10b5c = load i32, i32* @r4, align 4
  store i32 %v0_10b5c, i32* %r0.global-to-local, align 4
  %v1_10b60 = inttoptr i32 %v0_10b5c to i32*
  %v2_10b60 = call i32 @function_165ec(i32* %v1_10b60)
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_10b60, i32* @global_var_230e8.198, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_10b74 = call i32 @function_13d28(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_23678.209 to i32), i32* %r3.global-to-local, align 4
  %v0_10b7c = load i32, i32* @r4, align 4
  store i32 %v0_10b7c, i32* %stack_var_-52, align 4
  store i32 %v2_10b74, i32* @global_var_23678.209, align 4
  store i32 %v0_10b7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b88

dec_label_pc_10b88:                               ; preds = %dec_label_pc_10b88.dec_label_pc_10b88_crit_edge, %dec_label_pc_10b4c
  %v2_10b94 = phi i32 [ %v2_10b94.pre, %dec_label_pc_10b88.dec_label_pc_10b88_crit_edge ], [ %v2_10b74, %dec_label_pc_10b4c ]
  %v0_10b9c = phi i32 [ %v0_10bcc, %dec_label_pc_10b88.dec_label_pc_10b88_crit_edge ], [ %v0_10b7c, %dec_label_pc_10b4c ]
  %v3_10b90 = mul i32 %v0_10b9c, 256
  store i32 %v3_10b90, i32* %ip.global-to-local, align 4
  store i32 %v2_10b94, i32* @lr, align 4
  %v2_10ba4 = mul i32 %v0_10b9c, 288
  %v1_10bac = add i32 %v0_10b9c, 1
  store i32 %v1_10bac, i32* %r0.global-to-local, align 4
  %v2_10bb0 = add i32 %v2_10ba4, %v2_10b94
  store i32 %v2_10bb0, i32* %r2.global-to-local, align 4
  store i32 %v2_10bb0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10bc4 = add i32 %v2_10bb0, 4
  %v3_10bc4 = inttoptr i32 %v2_10bc4 to i32*
  store i32 -1, i32* %v3_10bc4, align 4
  %v0_10bc8 = load i32, i32* @r5, align 4
  %v1_10bc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_10bc8 = add i32 %v1_10bc8, 12
  %v3_10bc8 = inttoptr i32 %v2_10bc8 to i32*
  store i32 %v0_10bc8, i32* %v3_10bc8, align 4
  %v0_10bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10bcc, i32* %stack_var_-52, align 4
  %v7_10bd0 = icmp sgt i32 %v1_10bac, 255
  br i1 %v7_10bd0, label %dec_label_pc_10bd4, label %dec_label_pc_10b88.dec_label_pc_10b88_crit_edge

dec_label_pc_10b88.dec_label_pc_10b88_crit_edge:  ; preds = %dec_label_pc_10b88
  %v2_10b94.pre = load i32, i32* @global_var_23678.209, align 4
  br label %dec_label_pc_10b88

dec_label_pc_10bd4:                               ; preds = %dec_label_pc_10b88
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_10be0 = call i32 @function_15670(i32 2, i32 3, i32 6)
  store i32 %v3_10be0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2367c.211 to i32), i32* %r2.global-to-local, align 4
  %v2_10be8 = icmp eq i32 %v3_10be0, -1
  store i1 %v2_10be8, i1* %cpsr_c.global-to-local, align 1
  %v7_10be8 = icmp eq i32 %v3_10be0, -1
  store i1 %v7_10be8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10be0, i32* @r4, align 4
  store i32 %v3_10be0, i32* @global_var_2367c.211, align 4
  br i1 %v7_10be8, label %dec_label_pc_11518, label %dec_label_pc_10bf8

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10bd4
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_10bfc = load i32, i32* @r5, align 4
  store i32 %v0_10bfc, i32* %r2.global-to-local, align 4
  %v3_10c00 = call i32 @function_13a84(i32 %v3_10be0, i32 3, i32 %v0_10bfc)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_10c08 = or i32 %v3_10c00, 2048
  store i32 %v1_10c08, i32* %r2.global-to-local, align 4
  %v0_10c0c = load i32, i32* @r4, align 4
  store i32 %v0_10c0c, i32* %r0.global-to-local, align 4
  %v3_10c10 = call i32 @function_13a84(i32 %v0_10c0c, i32 4, i32 %v1_10c08)
  %v2_10c18 = load i32, i32* @global_var_2367c.211, align 4
  store i32 %v2_10c18, i32* @r0, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_10c24 = load i32, i32* @r5, align 4
  store i32 %v0_10c24, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v2_10c2c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10c2c, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_10c3c = call i32 @function_15600(i32 %v2_10c18, i32 %v0_10c24, i32 3, i32 %v2_10c2c, i32 4)
  store i32 %v5_10c3c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c40 = icmp eq i32 %v5_10c3c, 0
  store i1 %v2_10c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c40, label %dec_label_pc_10c48, label %dec_label_pc_1150c

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10bf8, %dec_label_pc_10c48
  %v0_10c48 = call i32 @function_1008c()
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10c50 = urem i32 %v0_10c48, 65536
  %v4_10c50 = trunc i32 %v0_10c48 to i16
  store i32 %v3_10c50, i32* %r0.global-to-local, align 4
  %v2_10c58 = call i32 @function_15510(i32 %v0_10c48)
  store i32 %v2_10c58, i32* %r0.global-to-local, align 4
  %v2_10c5c = icmp ugt i32 %v2_10c58, 1023
  store i1 %v2_10c5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c5c = icmp eq i32 %v2_10c58, 1024
  store i1 %v7_10c5c, i1* %cpsr_z.global-to-local, align 1
  %v3_10c60 = icmp ult i32 %v2_10c58, 1022
  br i1 %v3_10c60, label %dec_label_pc_10c48, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c48
  %v2_10c68 = load i8, i8* bitcast (i8** @global_var_230b8.213 to i8*), align 4
  %v3_10c68 = zext i8 %v2_10c68 to i32
  %v1_10c6c = and i32 %v3_10c68, 240
  %v1_10c70 = or i32 %v1_10c6c, 5
  store i32 %v1_10c70, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_230b8.213 to i8*), align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_10c8c = call i32 @function_15368(i32 40)
  %v2_10c8c = trunc i32 %v1_10c8c to i16
  store i32 %v1_10c8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r1.global-to-local, align 4
  store i16 %v2_10c8c, i16* bitcast (i32* @global_var_230ba.214 to i16*), align 4
  %v0_10c98 = call i32 @function_1008c()
  %v1_10c98 = trunc i32 %v0_10c98 to i16
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i16 %v1_10c98, i16* bitcast (i32* @global_var_230bc.215 to i16*), align 4
  store i8 64, i8* bitcast (i32* @global_var_230c0.216 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_230c1.217 to i8*), align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10cb8 = call i32 @function_15368(i32 23)
  %v2_10cb8 = trunc i32 %v1_10cb8 to i16
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %ip.global-to-local, align 4
  %v3_10cc0 = load i8, i8* @global_var_230d8.220, align 1
  %tmp = urem i8 %v3_10cc0, 16
  %v1_10cc4 = zext i8 %tmp to i32
  %v1_10cc8 = or i32 %v1_10cc4, 80
  store i32 %v1_10cc8, i32* %r3.global-to-local, align 4
  %v1_10ccc = trunc i32 %v1_10cc8 to i8
  store i8 %v1_10ccc, i8* @global_var_230d8.220, align 1
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* @lr, align 4
  store i16 %v2_10cb8, i16* @global_var_230ce.221, align 2
  store i32 %v0_10c48, i32* %r0.global-to-local, align 4
  store i16 %v4_10c50, i16* bitcast (i32* @global_var_230cc.219 to i16*), align 4
  %v0_10ce0 = call i32 @function_1008c()
  %v1_10ce0 = trunc i32 %v0_10ce0 to i16
  %v3_10ce8 = load i8, i8* @global_var_230d9.222, align 1
  %v4_10ce8 = zext i8 %v3_10ce8 to i32
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %ip.global-to-local, align 4
  %v1_10cf0 = or i32 %v4_10ce8, 2
  store i32 %v1_10cf0, i32* %r3.global-to-local, align 4
  store i16 %v1_10ce0, i16* bitcast (i32* @global_var_230da.223 to i16*), align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_10cfc = trunc i32 %v1_10cf0 to i8
  store i8 %v1_10cfc, i8* @global_var_230d9.222, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a384.227 to i32), i32* %r1.global-to-local, align 4
  %v4_10d08 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a384.227 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a38c.229 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_10d18 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a38c.229 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10d28 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r1.global-to-local, align 4
  %v5_10d38 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 7)
  %v0_10d3c = load i32, i32* @r4, align 4
  store i32 %v0_10d3c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a39c.233 to i32), i32* %r1.global-to-local, align 4
  %v4_10d48 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a39c.233 to i32), i32 %v0_10d3c)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a3a4.235 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10d58 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a3a4.235 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a3ac.237 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10d68 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a3ac.237 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a3b4.239 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10d78 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a3b4.239 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3c0.241 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10d88 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a3c0.241 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3c8.243 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10d98 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a3c8.243 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1a3d0.245 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a3d0.245 to i32), i32* %r1.global-to-local, align 4
  %v5_10da8 = call i32 @function_109a4(i32 ptrtoint ([8 x i8]* @global_var_1a3d0.245 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a3d0.245 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2b8.247 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_10db8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a2b8.247 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10dc8 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r1.global-to-local, align 4
  %v5_10dd8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_10de8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), i32* %r1.global-to-local, align 4
  %v5_10df8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2b8.247 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10e08 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a2b8.247 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3f4.255 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10e18 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3f4.255 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3fc.257 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10e28 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a3fc.257 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a408.259 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10e38 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a408.259 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a410.261 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10e48 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a410.261 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a408.259 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10e58 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a408.259 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a41c.263 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10e68 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a41c.263 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_10e78 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a424.265 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10e88 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a424.265 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a42c.267 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10e98 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a42c.267 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1a434.269 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a444.271 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10ea8 = call i32 @function_109a4(i32 ptrtoint ([14 x i8]* @global_var_1a434.269 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a444.271 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1a44c.273 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a44c.273 to i32), i32* %r1.global-to-local, align 4
  %v5_10eb8 = call i32 @function_109a4(i32 ptrtoint ([8 x i8]* @global_var_1a44c.273 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a44c.273 to i32), i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_1a454.275 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a454.275 to i32), i32* %r1.global-to-local, align 4
  %v5_10ec8 = call i32 @function_109a4(i32 ptrtoint ([11 x i8]* @global_var_1a454.275 to i32), i32 ptrtoint ([11 x i8]* @global_var_1a454.275 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32* %r1.global-to-local, align 4
  %v5_10ed8 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10ee8 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10ef8 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1a468.279 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f08 = call i32 @function_109a4(i32 ptrtoint (i32* @global_var_1a468.279 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1a470.281 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a424.265 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f18 = call i32 @function_109a4(i32 ptrtoint ([14 x i8]* @global_var_1a470.281 to i32), i32 ptrtoint (i32* @global_var_1a424.265 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1a41c.263 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a41c.263 to i32), i32* %r1.global-to-local, align 4
  %v3_10f28 = call i32 @function_109a4(i32 ptrtoint (i32* @global_var_1a41c.263 to i32), i32 ptrtoint (i32* @global_var_1a41c.263 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1a39c.233 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a39c.233 to i32), i32* %r1.global-to-local, align 4
  %v3_10f38 = call i32 @function_109a4(i32 ptrtoint (i32* @global_var_1a39c.233 to i32), i32 ptrtoint (i32* @global_var_1a39c.233 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a480.283 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a480.283 to i32), i32* %r1.global-to-local, align 4
  %v5_10f48 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a480.283 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a480.283 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a488.285 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f58 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a488.285 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a490.287 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f68 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a490.287 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a498.289 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f78 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a498.289 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a4a0.291 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10f88 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a4a0.291 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a4a8.293 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10f98 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a4a8.293 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a4b0.295 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10fa8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a4b0.295 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4b8.297 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10fb8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a4b8.297 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4c8.299 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10fc8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a4c8.299 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a4d8.301 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10fd8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a4d8.301 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a4e0.303 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10fe8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a4e0.303 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a4e8.305 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10ff8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a4e8.305 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11008 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a4f4.307 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11018 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a4f4.307 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4fc.309 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11028 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), i32 ptrtoint (i32* @global_var_1a4fc.309 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a508.311 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11038 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a508.311 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a424.265 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11048 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a424.265 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11058 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3c8.243 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11068 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a3c8.243 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3c0.241 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11078 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a3c0.241 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4c8.299 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11088 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a4c8.299 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a510.313 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11098 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint (i32* @global_var_1a510.313 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3f4.255 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_110a8 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3f4.255 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a444.271 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_110b8 = call i32 @function_109a4(i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a444.271 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a3b8.315 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3b8.315 to i32), i32* %r1.global-to-local, align 4
  %v5_110c8 = call i32 @function_109a4(i32 ptrtoint ([5 x i8]* @global_var_1a3b8.315 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3b8.315 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1a518.317 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a520.319 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_110d8 = call i32 @function_109a4(i32 ptrtoint ([7 x i8]* @global_var_1a518.317 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a520.319 to i32), i32 1)
  store i32 %v5_110d8, i32* %r0.global-to-local, align 4
  %v2_110e0 = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_110e8

dec_label_pc_110e8:                               ; preds = %dec_label_pc_11858, %dec_label_pc_10c64
  %stack_var_-1876.0 = phi i32 [ %tmp273, %dec_label_pc_10c64 ], [ %stack_var_-1876.2, %dec_label_pc_11858 ]
  %stack_var_-1884.0 = phi i32 [ %v2_110e0, %dec_label_pc_10c64 ], [ %stack_var_-1884.1, %dec_label_pc_11858 ]
  %stack_var_-1880.0 = phi i16 [ %v4_10c50, %dec_label_pc_10c64 ], [ %stack_var_-1880.1, %dec_label_pc_11858 ]
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  %v2_110f0 = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_110f0, i32* @r5, align 4
  %v3_110f4 = icmp uge i32 %stack_var_-1876.0, %v2_110f0
  store i1 %v3_110f4, i1* %cpsr_c.global-to-local, align 1
  %v9_110f4 = icmp eq i32 %stack_var_-1876.0, %v2_110f0
  store i1 %v9_110f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_110f4, label %dec_label_pc_11374, label %dec_label_pc_110fc

dec_label_pc_110fc:                               ; preds = %dec_label_pc_110e8
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11100 = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_1110c

dec_label_pc_1110c:                               ; preds = %dec_label_pc_112d0, %dec_label_pc_110fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_11120 = call i32 @function_1008c()
  %v1_11120 = trunc i32 %v0_11120 to i16
  store i32 %v0_11120, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2365c.93 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %ip.global-to-local, align 4
  %v2_1112c = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_1112c, i32* %r3.global-to-local, align 4
  store i16 %v1_11120, i16* bitcast (i32* @global_var_230bc.215 to i16*), align 4
  store i32 %v2_1112c, i32* @global_var_230c4.320, align 4
  br label %dec_label_pc_11138

dec_label_pc_11138:                               ; preds = %dec_label_pc_1120c, %dec_label_pc_11168, %dec_label_pc_11240, %dec_label_pc_11234, %dec_label_pc_11228, %dec_label_pc_1121c, %.thread29, %bb314, %dec_label_pc_11178, %bb313, %dec_label_pc_11160, %bb312, %bb329, %bb328, %bb327, %bb326, %bb325, %dec_label_pc_11204, %dec_label_pc_111fc, %bb321, %dec_label_pc_111cc, %dec_label_pc_111a8, %bb331, %dec_label_pc_1110c
  %v0_11138 = call i32 @function_1008c()
  store i32 %v0_11138, i32* %r0.global-to-local, align 4
  %v1_1113c = urem i32 %v0_11138, 256
  store i32 %v1_1113c, i32* %r1.global-to-local, align 4
  %v3_11140 = udiv i32 %v0_11138, 256
  store i32 %v3_11140, i32* %r3.global-to-local, align 4
  %v3_11144 = udiv i32 %v0_11138, 65536
  store i32 %v3_11144, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11148 = icmp eq i32 %v1_1113c, 0
  store i1 %v2_11148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11148, label %bb312, label %bb311

bb311:                                            ; preds = %dec_label_pc_11138
  %v3_1114c = icmp ugt i32 %v1_1113c, 126
  store i1 %v3_1114c, i1* %cpsr_c.global-to-local, align 1
  %v8_1114c = icmp eq i32 %v1_1113c, 127
  store i1 %v8_1114c, i1* %cpsr_z.global-to-local, align 1
  br label %bb312

bb312:                                            ; preds = %dec_label_pc_11138, %bb311
  %v0_1115c = phi i1 [ true, %dec_label_pc_11138 ], [ %v8_1114c, %bb311 ]
  %v1_11150 = urem i32 %v3_11140, 256
  store i32 %v1_11150, i32* %ip.global-to-local, align 4
  %v1_11154 = urem i32 %v3_11144, 256
  store i32 %v1_11154, i32* %r2.global-to-local, align 4
  %v1_11158 = and i32 %v0_11138, 8388608
  %v2_11158 = icmp ne i32 %v1_11158, 0
  store i1 %v2_11158, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1115c, label %dec_label_pc_11138, label %dec_label_pc_11160

dec_label_pc_11160:                               ; preds = %bb312
  %v2_11160 = icmp ugt i32 %v1_1113c, 2
  store i1 %v2_11160, i1* %cpsr_c.global-to-local, align 1
  %v7_11160 = icmp eq i32 %v1_1113c, 3
  store i1 %v7_11160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11160, label %dec_label_pc_11138, label %dec_label_pc_11168

dec_label_pc_11168:                               ; preds = %dec_label_pc_11160
  %v1_11168 = add nsw i32 %v1_1113c, -15
  store i32 %v1_11168, i32* %r3.global-to-local, align 4
  %v2_1116c = icmp ugt i32 %v1_1113c, 55
  store i1 %v2_1116c, i1* %cpsr_c.global-to-local, align 1
  %v7_1116c = icmp eq i32 %v1_1113c, 56
  store i1 %v7_1116c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1116c, label %dec_label_pc_11138, label %bb313

bb313:                                            ; preds = %dec_label_pc_11168
  %v3_11170 = icmp ne i32 %v1_11168, 0
  store i1 %v3_11170, i1* %cpsr_c.global-to-local, align 1
  %v8_11170 = icmp eq i32 %v1_11168, 1
  store i1 %v8_11170, i1* %cpsr_z.global-to-local, align 1
  %v2_11174 = xor i1 %v3_11170, true
  %v3_11174 = or i1 %v8_11170, %v2_11174
  br i1 %v3_11174, label %dec_label_pc_11138, label %dec_label_pc_11178

dec_label_pc_11178:                               ; preds = %bb313
  %v2_11178 = icmp ugt i32 %v1_1113c, 9
  store i1 %v2_11178, i1* %cpsr_c.global-to-local, align 1
  %v7_11178 = icmp eq i32 %v1_1113c, 10
  store i1 %v7_11178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11178, label %dec_label_pc_11138, label %dec_label_pc_11180

dec_label_pc_11180:                               ; preds = %dec_label_pc_11178
  %v2_11180 = icmp ugt i32 %v1_1113c, 191
  store i1 %v2_11180, i1* %cpsr_c.global-to-local, align 1
  %v7_11180 = icmp eq i32 %v1_1113c, 192
  store i1 %v7_11180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11180, label %bb314, label %dec_label_pc_1118c

bb314:                                            ; preds = %dec_label_pc_11180
  %v3_11184 = icmp ugt i32 %v1_11150, 167
  store i1 %v3_11184, i1* %cpsr_c.global-to-local, align 1
  %v8_11184 = icmp eq i32 %v1_11150, 168
  store i1 %v8_11184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11184, label %dec_label_pc_11138, label %dec_label_pc_1118c

dec_label_pc_1118c:                               ; preds = %dec_label_pc_11180, %bb314
  %v7_1118c = icmp eq i32 %v1_1113c, 172
  %.384 = zext i1 %v7_1118c to i32
  store i32 %.384, i32* %r3.global-to-local, align 4
  %v2_11198 = icmp ugt i32 %v1_11150, 14
  store i1 %v2_11198, i1* %cpsr_c.global-to-local, align 1
  %v7_11198 = icmp eq i32 %v1_11150, 15
  store i1 %v7_11198, i1* %cpsr_z.global-to-local, align 1
  %v2_1119c = xor i1 %v2_11198, true
  %v3_1119c = or i1 %v7_11198, %v2_1119c
  br i1 %v3_1119c, label %.thread7, label %bb317

.thread7:                                         ; preds = %dec_label_pc_1118c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111b0

bb317:                                            ; preds = %dec_label_pc_1118c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111a0 = icmp eq i1 %v7_1118c, false
  store i1 %v2_111a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111a0, label %dec_label_pc_111b0, label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %bb317
  %v2_111a8 = icmp ugt i32 %v1_11150, 30
  store i1 %v2_111a8, i1* %cpsr_c.global-to-local, align 1
  %v7_111a8 = icmp eq i32 %v1_11150, 31
  store i1 %v7_111a8, i1* %cpsr_z.global-to-local, align 1
  %v2_111ac = xor i1 %v2_111a8, true
  %v3_111ac = or i1 %v7_111a8, %v2_111ac
  br i1 %v3_111ac, label %dec_label_pc_11138, label %dec_label_pc_111b0

dec_label_pc_111b0:                               ; preds = %.thread7, %dec_label_pc_111a8, %bb317
  %v7_111b0 = icmp eq i32 %v1_1113c, 100
  %.385 = zext i1 %v7_111b0 to i32
  store i32 %.385, i32* %r3.global-to-local, align 4
  %v2_111bc = icmp ugt i32 %v1_11150, 62
  store i1 %v2_111bc, i1* %cpsr_c.global-to-local, align 1
  %v7_111bc = icmp eq i32 %v1_11150, 63
  store i1 %v7_111bc, i1* %cpsr_z.global-to-local, align 1
  %v2_111c0 = xor i1 %v2_111bc, true
  %v3_111c0 = or i1 %v7_111bc, %v2_111c0
  br i1 %v3_111c0, label %.thread12, label %bb320

.thread12:                                        ; preds = %dec_label_pc_111b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111d4

bb320:                                            ; preds = %dec_label_pc_111b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111c4 = icmp eq i1 %v7_111b0, false
  store i1 %v2_111c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111c4, label %dec_label_pc_111d4, label %dec_label_pc_111cc

dec_label_pc_111cc:                               ; preds = %bb320
  %v2_111cc = icmp ugt i32 %v1_11150, 125
  store i1 %v2_111cc, i1* %cpsr_c.global-to-local, align 1
  %v7_111cc = icmp eq i32 %v1_11150, 126
  store i1 %v7_111cc, i1* %cpsr_z.global-to-local, align 1
  %v2_111d0 = xor i1 %v2_111cc, true
  %v3_111d0 = or i1 %v7_111cc, %v2_111d0
  br i1 %v3_111d0, label %dec_label_pc_11138, label %dec_label_pc_111d4

dec_label_pc_111d4:                               ; preds = %.thread12, %dec_label_pc_111cc, %bb320
  %v2_111d4 = icmp ugt i32 %v1_1113c, 168
  store i1 %v2_111d4, i1* %cpsr_c.global-to-local, align 1
  %v7_111d4 = icmp eq i32 %v1_1113c, 169
  store i1 %v7_111d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d4, label %bb321, label %dec_label_pc_111e0

bb321:                                            ; preds = %dec_label_pc_111d4
  %v3_111d8 = icmp eq i32 %v1_11150, 255
  store i1 %v3_111d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_111d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_111d8, label %dec_label_pc_11138, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_111d4, %bb321
  %v7_111e0 = icmp eq i32 %v1_1113c, 198
  %.386 = zext i1 %v7_111e0 to i32
  store i32 %.386, i32* %r3.global-to-local, align 4
  %v2_111ec = icmp ugt i32 %v1_11150, 16
  store i1 %v2_111ec, i1* %cpsr_c.global-to-local, align 1
  %v7_111ec = icmp eq i32 %v1_11150, 17
  store i1 %v7_111ec, i1* %cpsr_z.global-to-local, align 1
  %v2_111f0 = xor i1 %v2_111ec, true
  %v3_111f0 = or i1 %v7_111ec, %v2_111f0
  br i1 %v3_111f0, label %.thread18, label %bb324

.thread18:                                        ; preds = %dec_label_pc_111e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11204

bb324:                                            ; preds = %dec_label_pc_111e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111f4 = icmp eq i1 %v7_111e0, false
  store i1 %v2_111f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111f4, label %dec_label_pc_11204, label %dec_label_pc_111fc

dec_label_pc_111fc:                               ; preds = %bb324
  %v2_111fc = icmp ugt i32 %v1_11150, 18
  store i1 %v2_111fc, i1* %cpsr_c.global-to-local, align 1
  %v7_111fc = icmp eq i32 %v1_11150, 19
  store i1 %v7_111fc, i1* %cpsr_z.global-to-local, align 1
  %v2_11200 = xor i1 %v2_111fc, true
  %v3_11200 = or i1 %v7_111fc, %v2_11200
  br i1 %v3_11200, label %dec_label_pc_11138, label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %.thread18, %dec_label_pc_111fc, %bb324
  %v2_11204 = icmp ugt i32 %v1_1113c, 222
  store i1 %v2_11204, i1* %cpsr_c.global-to-local, align 1
  %v7_11204 = icmp eq i32 %v1_1113c, 223
  store i1 %v7_11204, i1* %cpsr_z.global-to-local, align 1
  %v2_11208 = xor i1 %v7_11204, true
  %v3_11208 = and i1 %v2_11204, %v2_11208
  br i1 %v3_11208, label %dec_label_pc_11138, label %dec_label_pc_1120c

dec_label_pc_1120c:                               ; preds = %dec_label_pc_11204
  %v1_1120c = add nsw i32 %v1_1113c, -6
  store i32 %v1_1120c, i32* %r3.global-to-local, align 4
  %v2_11210 = icmp ugt i32 %v1_1113c, 10
  store i1 %v2_11210, i1* %cpsr_c.global-to-local, align 1
  %v7_11210 = icmp eq i32 %v1_1113c, 11
  store i1 %v7_11210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11210, label %dec_label_pc_11138, label %bb325

bb325:                                            ; preds = %dec_label_pc_1120c
  %v3_11214 = icmp ne i32 %v1_1120c, 0
  store i1 %v3_11214, i1* %cpsr_c.global-to-local, align 1
  %v8_11214 = icmp eq i32 %v1_1120c, 1
  store i1 %v8_11214, i1* %cpsr_z.global-to-local, align 1
  %v2_11218 = xor i1 %v3_11214, true
  %v3_11218 = or i1 %v8_11214, %v2_11218
  br i1 %v3_11218, label %dec_label_pc_11138, label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %bb325
  %v2_1121c = icmp ugt i32 %v1_1113c, 21
  store i1 %v2_1121c, i1* %cpsr_c.global-to-local, align 1
  %v7_1121c = icmp eq i32 %v1_1113c, 22
  store i1 %v7_1121c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1121c, label %dec_label_pc_11138, label %bb326

bb326:                                            ; preds = %dec_label_pc_1121c
  %v3_11220 = icmp ugt i32 %v1_1113c, 20
  store i1 %v3_11220, i1* %cpsr_c.global-to-local, align 1
  %v8_11220 = icmp eq i32 %v1_1113c, 21
  store i1 %v8_11220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11220, label %dec_label_pc_11138, label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %bb326
  %v2_11228 = icmp ugt i32 %v1_1113c, 27
  store i1 %v2_11228, i1* %cpsr_c.global-to-local, align 1
  %v7_11228 = icmp eq i32 %v1_1113c, 28
  store i1 %v7_11228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11228, label %dec_label_pc_11138, label %bb327

bb327:                                            ; preds = %dec_label_pc_11228
  %v3_1122c = icmp ugt i32 %v1_1113c, 25
  store i1 %v3_1122c, i1* %cpsr_c.global-to-local, align 1
  %v8_1122c = icmp eq i32 %v1_1113c, 26
  store i1 %v8_1122c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1122c, label %dec_label_pc_11138, label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %bb327
  %v2_11234 = icmp ugt i32 %v1_1113c, 29
  store i1 %v2_11234, i1* %cpsr_c.global-to-local, align 1
  %v7_11234 = icmp eq i32 %v1_1113c, 30
  store i1 %v7_11234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11234, label %dec_label_pc_11138, label %bb328

bb328:                                            ; preds = %dec_label_pc_11234
  %v3_11238 = icmp ugt i32 %v1_1113c, 28
  store i1 %v3_11238, i1* %cpsr_c.global-to-local, align 1
  %v8_11238 = icmp eq i32 %v1_1113c, 29
  store i1 %v8_11238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11238, label %dec_label_pc_11138, label %dec_label_pc_11240

dec_label_pc_11240:                               ; preds = %bb328
  %v2_11240 = icmp ugt i32 %v1_1113c, 54
  store i1 %v2_11240, i1* %cpsr_c.global-to-local, align 1
  %v7_11240 = icmp eq i32 %v1_1113c, 55
  store i1 %v7_11240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11240, label %dec_label_pc_11138, label %bb329

bb329:                                            ; preds = %dec_label_pc_11240
  %v3_11244 = icmp ugt i32 %v1_1113c, 32
  store i1 %v3_11244, i1* %cpsr_c.global-to-local, align 1
  %v8_11244 = icmp eq i32 %v1_1113c, 33
  store i1 %v8_11244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11244, label %dec_label_pc_11138, label %dec_label_pc_1124c

dec_label_pc_1124c:                               ; preds = %bb329
  %v2_1124c = icmp ugt i32 %v1_1113c, 214
  store i1 %v2_1124c, i1* %cpsr_c.global-to-local, align 1
  %v7_1124c = icmp eq i32 %v1_1113c, 215
  store i1 %v7_1124c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1124c, label %.thread29, label %bb330

bb330:                                            ; preds = %dec_label_pc_1124c
  %v3_11250 = icmp ugt i32 %v1_1113c, 213
  store i1 %v3_11250, i1* %cpsr_c.global-to-local, align 1
  %v8_11250 = icmp eq i32 %v1_1113c, 214
  store i1 %v8_11250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11250, label %bb331, label %dec_label_pc_11260

.thread29:                                        ; preds = %dec_label_pc_1124c
  br label %dec_label_pc_11138

bb331:                                            ; preds = %bb330
  br label %dec_label_pc_11138

dec_label_pc_11260:                               ; preds = %bb330
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v5_1126c = call i32 @llvm.bswap.i32(i32 %v0_11138)
  store i32 %v5_1126c, i32* %r0.global-to-local, align 4
  %v1_11270 = call i32 @function_15344(i32 %v5_1126c)
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v1_11270, i32* @global_var_230c8.321, align 4
  %v0_11280 = load i32, i32* @r4, align 4
  %v1_11280 = trunc i32 %v0_11280 to i16
  store i16 %v1_11280, i16* bitcast (i32* @global_var_230c2.322 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* @r0, align 4
  %v3_11288 = call i32 @function_e5a4(i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32 20)
  %v4_11288 = trunc i32 %v3_11288 to i16
  store i32 %v3_11288, i32* %r0.global-to-local, align 4
  %v3_1128c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1128c, i32* %r1.global-to-local, align 4
  %v5_1129c = sdiv i32 %v3_1128c, 10
  %v3_112a0 = mul i32 %v5_1129c, 8
  store i32 %v3_112a0, i32* %r2.global-to-local, align 4
  %v2_112a8 = mul i32 %v5_1129c, 10
  store i32 %v2_112a8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %ip.global-to-local, align 4
  %v3_112b0 = icmp uge i32 %v3_1128c, %v2_112a8
  store i1 %v3_112b0, i1* %cpsr_c.global-to-local, align 1
  %v9_112b0 = icmp eq i32 %v3_1128c, %v2_112a8
  store i1 %v9_112b0, i1* %cpsr_z.global-to-local, align 1
  store i16 %v4_11288, i16* bitcast (i32* @global_var_230c2.322 to i16*), align 4
  br i1 %v9_112b0, label %dec_label_pc_112bc, label %dec_label_pc_11668

dec_label_pc_112bc:                               ; preds = %dec_label_pc_11260
  store i32 2323, i32* %r0.global-to-local, align 4
  %v1_112c4 = call i32 @function_15368(i32 2323)
  %v2_112c4 = trunc i32 %v1_112c4 to i16
  store i32 %v1_112c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_112d0

dec_label_pc_112d0:                               ; preds = %dec_label_pc_11668, %dec_label_pc_112bc
  %storemerge = phi i16 [ %v2_112c4, %dec_label_pc_112bc ], [ %v2_1166c, %dec_label_pc_11668 ]
  store i16 %storemerge, i16* @global_var_230ce.221, align 2
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %ip.global-to-local, align 4
  %v3_112d8 = load i32, i32* @global_var_230c8.321, align 4
  store i32 %v3_112d8, i32* %r3.global-to-local, align 4
  store i32 %v3_112d8, i32* @global_var_230d0.324, align 4
  store i16 0, i16* bitcast (i32* @global_var_230dc.325 to i16*), align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_112ec = call i32 @function_15368(i32 20)
  store i32 %v1_112ec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* @r1, align 4
  %v5_11300 = call i32 @function_e5f4(i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32 %v1_112ec, i32 20)
  %v6_11300 = trunc i32 %v5_11300 to i16
  store i16 %v6_11300, i16* bitcast (i32* @global_var_230dc.325 to i16*), align 4
  %v2_1131c = load i32, i32* @global_var_2367c.211, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_11338 = load i16, i16* @global_var_230ce.221, align 2
  %v4_11338 = zext i16 %v3_11338 to i32
  store i32 %v4_11338, i32* %ip.global-to-local, align 4
  store i32 %v2_11100, i32* @lr, align 4
  store i32 %v2_1131c, i32* @r0, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v0_11358 = call i32 @function_155b4()
  store i32 %v0_11358, i32* %r0.global-to-local, align 4
  %v3_1135c = load i32, i32* %stack_var_-52, align 4
  %v1_11360 = add i32 %v3_1135c, 1
  store i32 %v1_11360, i32* %r3.global-to-local, align 4
  %v3_11364 = icmp ugt i32 %v1_11360, 383
  store i1 %v3_11364, i1* %cpsr_c.global-to-local, align 1
  %v8_11364 = icmp eq i32 %v1_11360, 384
  store i1 %v8_11364, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11360, i32* %stack_var_-52, align 4
  %v5_1136c = icmp slt i32 %v1_11360, 384
  br i1 %v5_1136c, label %dec_label_pc_1110c, label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_112d0
  %v0_11370 = load i32, i32* @r5, align 4
  br label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_110e8, %dec_label_pc_11370
  %stack_var_-1876.1 = phi i32 [ %stack_var_-1876.0, %dec_label_pc_110e8 ], [ %v0_11370, %dec_label_pc_11370 ]
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  store i32 0, i32* @r6, align 4
  %v1_1137c = add i32 %stack_var_-1884.0, 20
  store i32 %v1_1137c, i32* @r5, align 4
  %v1_113e8 = add i32 %stack_var_-1884.0, 16
  %v2_113e8 = inttoptr i32 %v1_113e8 to i32*
  %v1_113fc = add i32 %stack_var_-1884.0, 9
  %v2_113fc = inttoptr i32 %v1_113fc to i8*
  %v4_11438 = sext i16 %stack_var_-1880.0 to i32
  %v1_1147c = add i32 %stack_var_-1884.0, 12
  %v2_1147c = inttoptr i32 %v1_1147c to i32*
  br label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %dec_label_pc_11468, %dec_label_pc_11460, %dec_label_pc_11458, %dec_label_pc_11434, %dec_label_pc_1141c, %dec_label_pc_113f8, %dec_label_pc_113e0, %dec_label_pc_11450, %dec_label_pc_11444, %dec_label_pc_113d8, %dec_label_pc_114f8, %dec_label_pc_11374
  %v0_11380 = call i32 @function_139e8()
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_11388 = inttoptr i32 %v0_11380 to i32*
  store i32 0, i32* %v2_11388, align 4
  %v2_11394 = load i32, i32* @global_var_2367c.211, align 4
  store i32 %v2_11394, i32* @r0, align 4
  store i32 1514, i32* @r2, align 4
  store i32 %stack_var_-1884.0, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_113ac = call i32 @function_15548()
  store i32 %v0_113ac, i32* %r0.global-to-local, align 4
  store i32 %v0_113ac, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113b0 = icmp eq i32 %v0_113ac, 0
  store i1 %v2_113b0, i1* %cpsr_z.global-to-local, align 1
  %tmp332 = icmp slt i32 %v0_113ac, 1
  br i1 %tmp332, label %dec_label_pc_11520, label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %dec_label_pc_11380
  %v0_113b8 = call i32 @function_139e8()
  store i32 %v0_113b8, i32* %r0.global-to-local, align 4
  %v1_113bc = inttoptr i32 %v0_113b8 to i32*
  %v2_113bc = load i32, i32* %v1_113bc, align 4
  store i32 %v2_113bc, i32* %r3.global-to-local, align 4
  %v2_113c0 = icmp ugt i32 %v2_113bc, 10
  store i1 %v2_113c0, i1* %cpsr_c.global-to-local, align 1
  %v7_113c0 = icmp eq i32 %v2_113bc, 11
  store i1 %v7_113c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c0, label %dec_label_pc_11520, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113b8
  %v0_113c8 = call i32 @function_139e8()
  store i32 %v0_113c8, i32* %r0.global-to-local, align 4
  %v1_113cc = inttoptr i32 %v0_113c8 to i32*
  %v2_113cc = load i32, i32* %v1_113cc, align 4
  store i32 %v2_113cc, i32* %r3.global-to-local, align 4
  %v2_113d0 = icmp ugt i32 %v2_113cc, 10
  store i1 %v2_113d0, i1* %cpsr_c.global-to-local, align 1
  %v7_113d0 = icmp eq i32 %v2_113cc, 11
  store i1 %v7_113d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d0, label %dec_label_pc_11520, label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113c8
  %v0_113d8 = load i32, i32* @r4, align 4
  %v2_113d8 = icmp ugt i32 %v0_113d8, 38
  store i1 %v2_113d8, i1* %cpsr_c.global-to-local, align 1
  %v7_113d8 = icmp eq i32 %v0_113d8, 39
  store i1 %v7_113d8, i1* %cpsr_z.global-to-local, align 1
  %v2_113dc = xor i1 %v2_113d8, true
  %v3_113dc = or i1 %v7_113d8, %v2_113dc
  br i1 %v3_113dc, label %dec_label_pc_11380, label %dec_label_pc_113e0

dec_label_pc_113e0:                               ; preds = %dec_label_pc_113d8
  store i32 %stack_var_-1884.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2365c.93 to i32), i32* %ip.global-to-local, align 4
  %v3_113e8 = load i32, i32* %v2_113e8, align 4
  store i32 %v3_113e8, i32* %r2.global-to-local, align 4
  %v2_113ec = load i32, i32* @global_var_2365c.93, align 4
  store i32 %v2_113ec, i32* %r3.global-to-local, align 4
  %v3_113f0 = icmp uge i32 %v3_113e8, %v2_113ec
  store i1 %v3_113f0, i1* %cpsr_c.global-to-local, align 1
  %v9_113f0 = icmp eq i32 %v3_113e8, %v2_113ec
  store i1 %v9_113f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_113f0, label %dec_label_pc_113f8, label %dec_label_pc_11380

dec_label_pc_113f8:                               ; preds = %dec_label_pc_113e0
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  %v3_113fc = load i8, i8* %v2_113fc, align 1
  %v4_113fc = zext i8 %v3_113fc to i32
  store i32 %v4_113fc, i32* %r3.global-to-local, align 4
  %v2_11400 = icmp ugt i8 %v3_113fc, 5
  store i1 %v2_11400, i1* %cpsr_c.global-to-local, align 1
  %v7_11400 = icmp eq i8 %v3_113fc, 6
  store i1 %v7_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11400, label %dec_label_pc_11408, label %dec_label_pc_11380

dec_label_pc_11408:                               ; preds = %dec_label_pc_113f8
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_1140c = load i32, i32* @r5, align 4
  %v1_1140c = inttoptr i32 %v0_1140c to i16*
  %v2_1140c = load i16, i16* %v1_1140c, align 2
  %v3_1140c = zext i16 %v2_1140c to i32
  store i32 %v3_1140c, i32* @r4, align 4
  %v1_11410 = call i32 @function_15368(i32 23)
  store i32 %v1_11410, i32* %r0.global-to-local, align 4
  %v0_11414 = load i32, i32* @r4, align 4
  %v3_11414 = icmp uge i32 %v0_11414, %v1_11410
  store i1 %v3_11414, i1* %cpsr_c.global-to-local, align 1
  %v9_11414 = icmp eq i32 %v0_11414, %v1_11410
  store i1 %v9_11414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11414, label %dec_label_pc_11434, label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11408
  store i32 2323, i32* %r0.global-to-local, align 4
  %v0_11424 = load i32, i32* @r5, align 4
  %v1_11424 = inttoptr i32 %v0_11424 to i16*
  %v2_11424 = load i16, i16* %v1_11424, align 2
  %v3_11424 = zext i16 %v2_11424 to i32
  store i32 %v3_11424, i32* @r4, align 4
  %v1_11428 = call i32 @function_15368(i32 2323)
  store i32 %v1_11428, i32* %r0.global-to-local, align 4
  %v0_1142c = load i32, i32* @r4, align 4
  %v3_1142c = icmp uge i32 %v0_1142c, %v1_11428
  store i1 %v3_1142c, i1* %cpsr_c.global-to-local, align 1
  %v9_1142c = icmp eq i32 %v0_1142c, %v1_11428
  store i1 %v9_1142c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1142c, label %dec_label_pc_11434, label %dec_label_pc_11380

dec_label_pc_11434:                               ; preds = %dec_label_pc_1141c, %dec_label_pc_11408
  %v0_11434 = load i32, i32* @r5, align 4
  %v1_11434 = add i32 %v0_11434, 2
  %v2_11434 = inttoptr i32 %v1_11434 to i16*
  %v3_11434 = load i16, i16* %v2_11434, align 2
  %v4_11434 = zext i16 %v3_11434 to i32
  store i32 %v4_11434, i32* %r3.global-to-local, align 4
  store i32 %v4_11438, i32* %r0.global-to-local, align 4
  %v3_1143c = icmp uge i32 %v4_11434, %v4_11438
  store i1 %v3_1143c, i1* %cpsr_c.global-to-local, align 1
  %v9_1143c = icmp eq i32 %v4_11434, %v4_11438
  store i1 %v9_1143c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1143c, label %dec_label_pc_11444, label %dec_label_pc_11380

dec_label_pc_11444:                               ; preds = %dec_label_pc_11434
  %v1_11444 = add i32 %v0_11434, 13
  %v2_11444 = inttoptr i32 %v1_11444 to i8*
  %v3_11444 = load i8, i8* %v2_11444, align 1
  %v4_11444 = zext i8 %v3_11444 to i32
  store i32 %v4_11444, i32* %r3.global-to-local, align 4
  %v1_11448 = and i32 %v4_11444, 2
  %v2_11448 = icmp eq i32 %v1_11448, 0
  store i1 %v2_11448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11448, label %dec_label_pc_11380, label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_11444
  %v1_11450 = and i32 %v4_11444, 16
  %v2_11450 = icmp eq i32 %v1_11450, 0
  store i1 %v2_11450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11450, label %dec_label_pc_11380, label %dec_label_pc_11458

dec_label_pc_11458:                               ; preds = %dec_label_pc_11450
  %v1_11458 = and i32 %v4_11444, 4
  %v2_11458 = icmp eq i32 %v1_11458, 0
  store i1 %v2_11458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11458, label %dec_label_pc_11460, label %dec_label_pc_11380

dec_label_pc_11460:                               ; preds = %dec_label_pc_11458
  %tmp480 = urem i8 %v3_11444, 2
  %v2_11460 = icmp eq i8 %tmp480, 0
  store i1 %v2_11460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11460, label %dec_label_pc_11468, label %dec_label_pc_11380

dec_label_pc_11468:                               ; preds = %dec_label_pc_11460
  %v1_11468 = add i32 %v0_11434, 8
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r0.global-to-local, align 4
  %v1_1146c = call i32 @function_154ec(i32 %v3_11468)
  %v1_11470 = add i32 %v1_1146c, -1
  store i32 %v1_11470, i32* %r0.global-to-local, align 4
  %v1_11474 = call i32 @function_15344(i32 %v1_11470)
  store i32 %v1_11474, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1884.0, i32* %r1.global-to-local, align 4
  %v3_1147c = load i32, i32* %v2_1147c, align 4
  store i32 %v3_1147c, i32* %ip.global-to-local, align 4
  %v3_11480 = icmp uge i32 %v1_11474, %v3_1147c
  store i1 %v3_11480, i1* %cpsr_c.global-to-local, align 1
  %v9_11480 = icmp eq i32 %v1_11474, %v3_1147c
  store i1 %v9_11480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11480, label %dec_label_pc_11488, label %dec_label_pc_11380

dec_label_pc_11488:                               ; preds = %dec_label_pc_11468
  %v0_11488 = load i32, i32* @r6, align 4
  %v2_11488 = icmp ugt i32 %v0_11488, 254
  store i1 %v2_11488, i1* %cpsr_c.global-to-local, align 1
  %v7_11488 = icmp eq i32 %v0_11488, 255
  store i1 %v7_11488, i1* %cpsr_z.global-to-local, align 1
  %v8_1148c = icmp sgt i32 %v0_11488, 255
  br i1 %v8_1148c, label %dec_label_pc_11520, label %dec_label_pc_11490

dec_label_pc_11490:                               ; preds = %dec_label_pc_11488
  %v2_11498 = load i32, i32* @global_var_23678.209, align 4
  store i32 %v2_11498, i32* %r1.global-to-local, align 4
  %v3_1149c = mul i32 %v0_11488, 256
  store i32 %v3_1149c, i32* %r2.global-to-local, align 4
  %v2_114a0 = mul i32 %v0_11488, 288
  store i32 %v2_114a0, i32* %r3.global-to-local, align 4
  %v2_114a4 = add i32 %v2_11498, %v2_114a0
  store i32 %v2_114a4, i32* @r0, align 4
  %v1_114a8 = add i32 %v2_114a4, 12
  %v2_114a8 = inttoptr i32 %v1_114a8 to i32*
  %v3_114a8 = load i32, i32* %v2_114a8, align 4
  store i32 %v3_114a8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114ac = icmp eq i32 %v3_114a8, 0
  store i1 %v2_114ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114ac, label %dec_label_pc_114f0, label %dec_label_pc_114cc.preheader

dec_label_pc_114cc.preheader:                     ; preds = %dec_label_pc_11490
  %v2_114b0 = add i32 %v0_11488, 1
  %v2_114b8 = and i32 %v2_114b0, 134217728
  %v3_114b8 = icmp ne i32 %v2_114b8, 0
  store i1 %v3_114b8, i1* %cpsr_c.global-to-local, align 1
  %v3_114bc = mul i32 %v2_114b0, 288
  %v3_114c0 = add i32 %v2_11498, %v3_114bc
  store i32 %v3_114c0, i32* %r3.global-to-local, align 4
  store i32 %v0_11488, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_114cc.preheader, %dec_label_pc_114d8
  %v0_114d8 = phi i32 [ %v3_114c0, %dec_label_pc_114cc.preheader ], [ %v1_114e4, %dec_label_pc_114d8 ]
  %v0_114cc = phi i32 [ %v0_11488, %dec_label_pc_114cc.preheader ], [ %v1_114cc, %dec_label_pc_114d8 ]
  %v1_114cc = add i32 %v0_114cc, 1
  store i32 %v1_114cc, i32* %r2.global-to-local, align 4
  %v7_114d0 = icmp eq i32 %v1_114cc, 256
  br i1 %v7_114d0, label %dec_label_pc_11520.loopexit, label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %dec_label_pc_114cc
  store i32 %v0_114d8, i32* @r0, align 4
  %v1_114dc = add i32 %v0_114d8, 12
  %v2_114dc = inttoptr i32 %v1_114dc to i32*
  %v3_114dc = load i32, i32* %v2_114dc, align 4
  %v2_114e0 = icmp eq i32 %v3_114dc, 0
  %v1_114e4 = add i32 %v0_114d8, 288
  store i32 %v1_114e4, i32* %r3.global-to-local, align 4
  br i1 %v2_114e0, label %dec_label_pc_114ec, label %dec_label_pc_114cc

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_114cc, i32* @r6, align 4
  br label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %dec_label_pc_11490, %dec_label_pc_114ec
  %v1_114fc = phi i32 [ %v2_114a4, %dec_label_pc_11490 ], [ %v0_114d8, %dec_label_pc_114ec ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114f0 = icmp eq i32 %v1_114fc, 0
  store i1 %v2_114f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114f0, label %dec_label_pc_11520, label %dec_label_pc_114f8

dec_label_pc_114f8:                               ; preds = %dec_label_pc_114f0
  %v0_114f8 = load i32, i32* @r5, align 4
  %v1_114f8 = inttoptr i32 %v0_114f8 to i16*
  %v2_114f8 = load i16, i16* %v1_114f8, align 2
  %v3_114f8 = zext i16 %v2_114f8 to i32
  store i32 %v3_114f8, i32* %r3.global-to-local, align 4
  %v2_114fc = add i32 %v1_114fc, 16
  %v3_114fc = inttoptr i32 %v2_114fc to i32*
  store i32 %v1_11474, i32* %v3_114fc, align 4
  %v0_11500 = load i32, i32* %r3.global-to-local, align 4
  %v1_11500 = trunc i32 %v0_11500 to i16
  %v2_11500 = load i32, i32* @r0, align 4
  %v3_11500 = add i32 %v2_11500, 20
  %v4_11500 = inttoptr i32 %v3_11500 to i16*
  store i16 %v1_11500, i16* %v4_11500, align 2
  %v0_11504 = call i32 @function_108dc()
  store i32 %v0_11504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11380

dec_label_pc_1150c:                               ; preds = %dec_label_pc_10bf8
  store i32 ptrtoint (i32* @global_var_2367c.211 to i32), i32* %ip.global-to-local, align 4
  %v2_11510 = load i32, i32* @global_var_2367c.211, align 4
  store i32 %v2_11510, i32* @r0, align 4
  %v1_11514 = call i32 @function_1663c(i32 %v2_11510)
  store i32 %v1_11514, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11518

dec_label_pc_11518:                               ; preds = %dec_label_pc_10bd4, %dec_label_pc_1150c
  %v0_11518 = load i32, i32* @r5, align 4
  store i32 %v0_11518, i32* %r0.global-to-local, align 4
  %v1_1151c = call i32 @function_13a00(i32 %v0_11518)
  store i32 %v1_1151c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11520

dec_label_pc_11520.loopexit:                      ; preds = %dec_label_pc_114cc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11520

dec_label_pc_11520:                               ; preds = %dec_label_pc_114f0, %dec_label_pc_11488, %dec_label_pc_113c8, %dec_label_pc_113b8, %dec_label_pc_11380, %dec_label_pc_11520.loopexit, %dec_label_pc_11518
  %stack_var_-1876.2 = phi i32 [ %tmp273, %dec_label_pc_11518 ], [ %stack_var_-1876.1, %dec_label_pc_11520.loopexit ], [ %stack_var_-1876.1, %dec_label_pc_11380 ], [ %stack_var_-1876.1, %dec_label_pc_113b8 ], [ %stack_var_-1876.1, %dec_label_pc_113c8 ], [ %stack_var_-1876.1, %dec_label_pc_11488 ], [ %stack_var_-1876.1, %dec_label_pc_114f0 ]
  %stack_var_-1884.1 = phi i32 [ %tmp274, %dec_label_pc_11518 ], [ %stack_var_-1884.0, %dec_label_pc_11520.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_11380 ], [ %stack_var_-1884.0, %dec_label_pc_113b8 ], [ %stack_var_-1884.0, %dec_label_pc_113c8 ], [ %stack_var_-1884.0, %dec_label_pc_11488 ], [ %stack_var_-1884.0, %dec_label_pc_114f0 ]
  %stack_var_-1880.1 = phi i16 [ %tmp275, %dec_label_pc_11518 ], [ %stack_var_-1880.0, %dec_label_pc_11520.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_11380 ], [ %stack_var_-1880.0, %dec_label_pc_113b8 ], [ %stack_var_-1880.0, %dec_label_pc_113c8 ], [ %stack_var_-1880.0, %dec_label_pc_11488 ], [ %stack_var_-1880.0, %dec_label_pc_114f0 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_11540438 = load i32, i32* @sp, align 4
  %v3_11540439 = add i32 %v2_11540438, 1676
  %v4_11540440 = inttoptr i32 %v3_11540439 to i32*
  store i32 0, i32* %v4_11540440, align 4
  br label %dec_label_pc_1152c.dec_label_pc_1152c_crit_edge

dec_label_pc_1152c.dec_label_pc_1152c_crit_edge:  ; preds = %dec_label_pc_11520, %dec_label_pc_1152c.dec_label_pc_1152c_crit_edge
  %v0_1152c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11530 = add i32 %v0_1152c.pre, 4
  store i32 %v1_11530, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11538 = add i32 %v0_1152c.pre, 1672
  store i32 %v1_11538, i32* %ip.global-to-local, align 4
  %v7_1153c = icmp eq i32 %v1_11530, 128
  %v2_11540 = load i32, i32* @sp, align 4
  %v3_11540 = add i32 %v2_11540, %v1_11538
  %v4_11540 = inttoptr i32 %v3_11540 to i32*
  store i32 0, i32* %v4_11540, align 4
  br i1 %v7_1153c, label %dec_label_pc_11548, label %dec_label_pc_1152c.dec_label_pc_1152c_crit_edge

dec_label_pc_11548:                               ; preds = %dec_label_pc_1152c.dec_label_pc_1152c_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_11548 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11548, i32* %stack_var_-352, align 4
  %v1_11554432 = add i32 %v0_11548, 8
  store i32 %v1_11554432, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1155c433 = add i32 %v0_11548, 1548
  store i32 %v1_1155c433, i32* @lr, align 4
  %v7_11560434 = icmp eq i32 %v1_11554432, 128
  %v2_11564435 = load i32, i32* @sp, align 4
  %v3_11564436 = add i32 %v2_11564435, %v1_1155c433
  %v4_11564437 = inttoptr i32 %v3_11564436 to i32*
  store i32 0, i32* %v4_11564437, align 4
  br i1 %v7_11560434, label %dec_label_pc_1156c, label %dec_label_pc_11550.dec_label_pc_11550_crit_edge

dec_label_pc_11550.dec_label_pc_11550_crit_edge:  ; preds = %dec_label_pc_11548, %dec_label_pc_11550.dec_label_pc_11550_crit_edge
  %v0_11550.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_11554 = add i32 %v0_11550.pre, 4
  store i32 %v1_11554, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1155c = add i32 %v0_11550.pre, 1544
  store i32 %v1_1155c, i32* @lr, align 4
  %v7_11560 = icmp eq i32 %v1_11554, 128
  %v2_11564 = load i32, i32* @sp, align 4
  %v3_11564 = add i32 %v2_11564, %v1_1155c
  %v4_11564 = inttoptr i32 %v3_11564 to i32*
  store i32 0, i32* %v4_11564, align 4
  br i1 %v7_11560, label %dec_label_pc_1156c, label %dec_label_pc_11550.dec_label_pc_11550_crit_edge

dec_label_pc_1156c:                               ; preds = %dec_label_pc_11550.dec_label_pc_11550_crit_edge, %dec_label_pc_11548
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_1156c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1156c, i32* @r6, align 4
  store i32 %v0_1156c, i32* @r5, align 4
  store i32 %v0_1156c, i32* %stack_var_-52, align 4
  %v2_124c8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_115c8

dec_label_pc_1157c:                               ; preds = %dec_label_pc_115f8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_115e4, i1* %cpsr_z.global-to-local, align 1
  %v1_124bc = add i32 %v2_115dc, 4
  %v2_124bc = inttoptr i32 %v1_124bc to i32*
  %v3_124bc = load i32, i32* %v2_124bc, align 4
  br i1 %v7_115e4, label %dec_label_pc_124bc, label %dec_label_pc_11584

dec_label_pc_11584:                               ; preds = %dec_label_pc_1157c
  store i32 %v3_124bc, i32* %ip.global-to-local, align 4
  %v3_11588 = udiv i32 %v3_124bc, 32
  store i32 %v2_124c8, i32* %r0.global-to-local, align 4
  %v3_11590 = mul nuw nsw i32 %v3_11588, 4
  %v2_11594 = add i32 %v3_11590, %v2_124c8
  store i32 %v2_11594, i32* %r3.global-to-local, align 4
  %v1_11598 = add i32 %v2_11594, -184
  %v2_11598 = inttoptr i32 %v1_11598 to i32*
  %v3_11598 = load i32, i32* %v2_11598, align 4
  %v1_1159c = urem i32 %v3_124bc, 32
  store i32 %v1_1159c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_115a4 = shl i32 1, %v1_1159c
  %v8_115a4 = or i32 %v3_11598, %v7_115a4
  store i32 %v8_115a4, i32* %r2.global-to-local, align 4
  store i32 %v8_115a4, i32* %v2_11598, align 4
  %v0_115ac = load i32, i32* @r6, align 4
  %v1_115ac = load i32, i32* %ip.global-to-local, align 4
  %v3_115ac = icmp uge i32 %v0_115ac, %v1_115ac
  store i1 %v3_115ac, i1* %cpsr_c.global-to-local, align 1
  %v9_115ac = icmp eq i32 %v0_115ac, %v1_115ac
  store i1 %v9_115ac, i1* %cpsr_z.global-to-local, align 1
  %v5_115b0 = icmp slt i32 %v0_115ac, %v1_115ac
  br i1 %v5_115b0, label %bb333, label %bb334

bb333:                                            ; preds = %dec_label_pc_11584
  store i32 %v1_115ac, i32* @r6, align 4
  br label %bb334

bb334:                                            ; preds = %.thread43, %bb340, %bb338, %bb383, %dec_label_pc_1165c, %dec_label_pc_11584, %bb333
  %v3_115b4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_115b4, i32* %r3.global-to-local, align 4
  %v1_115b8 = add i32 %v3_115b4, 1
  store i32 %v1_115b8, i32* %r2.global-to-local, align 4
  %v2_115bc = icmp ugt i32 %v1_115b8, 254
  store i1 %v2_115bc, i1* %cpsr_c.global-to-local, align 1
  %v7_115bc = icmp eq i32 %v1_115b8, 255
  store i1 %v7_115bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_115b8, i32* %stack_var_-52, align 4
  %v8_115c4 = icmp sgt i32 %v1_115b8, 255
  br i1 %v8_115c4, label %dec_label_pc_1167c, label %dec_label_pc_115c8

dec_label_pc_115c8:                               ; preds = %bb334, %dec_label_pc_1156c
  %v0_115d4 = phi i32 [ %v1_115b8, %bb334 ], [ %v0_1156c, %dec_label_pc_1156c ]
  store i32 ptrtoint (i32* @global_var_23678.209 to i32), i32* %r0.global-to-local, align 4
  %v3_115cc = mul i32 %v0_115d4, 256
  store i32 %v3_115cc, i32* %r3.global-to-local, align 4
  %v2_115d0 = load i32, i32* @global_var_23678.209, align 4
  store i32 %v2_115d0, i32* %r1.global-to-local, align 4
  %v2_115d8 = mul i32 %v0_115d4, 288
  store i32 %v2_115d8, i32* %r2.global-to-local, align 4
  %v2_115dc = add i32 %v2_115d0, %v2_115d8
  store i32 %v2_115dc, i32* @r4, align 4
  %v1_115e0 = add i32 %v2_115dc, 12
  %v2_115e0 = inttoptr i32 %v1_115e0 to i32*
  %v3_115e0 = load i32, i32* %v2_115e0, align 4
  store i32 %v3_115e0, i32* %ip.global-to-local, align 4
  %v2_115e4 = icmp ne i32 %v3_115e0, 0
  store i1 %v2_115e4, i1* %cpsr_c.global-to-local, align 1
  %v7_115e4 = icmp eq i32 %v3_115e0, 1
  store i1 %v7_115e4, i1* %cpsr_z.global-to-local, align 1
  %v2_115e8 = xor i1 %v2_115e4, true
  %v3_115e8 = or i1 %v7_115e4, %v2_115e8
  br i1 %v3_115e8, label %bb335, label %bb336

bb335:                                            ; preds = %dec_label_pc_115c8
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb336

bb336:                                            ; preds = %dec_label_pc_115c8, %bb335
  %v1_11608143 = phi i32 [ %v2_115d0, %dec_label_pc_115c8 ], [ 5, %bb335 ]
  %v2_115ec = xor i1 %v7_115e4, true
  %v3_115ec = and i1 %v2_115e4, %v2_115ec
  br i1 %v3_115ec, label %bb337, label %bb338

bb337:                                            ; preds = %bb336
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb338

bb338:                                            ; preds = %bb336, %bb337
  %v1_11608 = phi i32 [ %v1_11608143, %bb336 ], [ 30, %bb337 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115f0 = icmp eq i32 %v3_115e0, 0
  store i1 %v2_115f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115f0, label %bb334, label %dec_label_pc_115f8

dec_label_pc_115f8:                               ; preds = %bb338
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r2.global-to-local, align 4
  %v2_115fc = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_115fc, i32* %r3.global-to-local, align 4
  %v1_11600 = add i32 %v2_115dc, 8
  %v2_11600 = inttoptr i32 %v1_11600 to i32*
  %v3_11600 = load i32, i32* %v2_11600, align 4
  store i32 %v3_11600, i32* %r2.global-to-local, align 4
  %v2_11604 = sub i32 %v2_115fc, %v3_11600
  store i32 %v2_11604, i32* %r3.global-to-local, align 4
  %v3_11608 = icmp uge i32 %v2_11604, %v1_11608
  store i1 %v3_11608, i1* %cpsr_c.global-to-local, align 1
  %v9_11608 = icmp eq i32 %v2_11604, %v1_11608
  store i1 %v9_11608, i1* %cpsr_z.global-to-local, align 1
  %v2_1160c = xor i1 %v3_11608, true
  %v3_1160c = or i1 %v9_11608, %v2_1160c
  br i1 %v3_1160c, label %dec_label_pc_1157c, label %dec_label_pc_11610

dec_label_pc_11610:                               ; preds = %dec_label_pc_115f8
  %v1_11610 = add i32 %v2_115dc, 4
  %v2_11610 = inttoptr i32 %v1_11610 to i32*
  %v3_11610 = load i32, i32* %v2_11610, align 4
  store i32 %v3_11610, i32* @r0, align 4
  %v1_11614 = call i32 @function_1663c(i32 %v3_11610)
  store i32 %v1_11614, i32* %r0.global-to-local, align 4
  %v0_11618 = load i32, i32* @r4, align 4
  %v1_11618 = add i32 %v0_11618, 12
  %v2_11618 = inttoptr i32 %v1_11618 to i32*
  %v3_11618 = load i32, i32* %v2_11618, align 4
  store i32 %v3_11618, i32* %r3.global-to-local, align 4
  %v2_1161c = icmp ugt i32 %v3_11618, 1
  store i1 %v2_1161c, i1* %cpsr_c.global-to-local, align 1
  %v7_1161c = icmp eq i32 %v3_11618, 2
  store i1 %v7_1161c, i1* %cpsr_z.global-to-local, align 1
  %v2_11620 = xor i1 %v2_1161c, true
  %v3_11620 = or i1 %v7_1161c, %v2_11620
  br i1 %v3_11620, label %bb339, label %.thread239

.thread239:                                       ; preds = %dec_label_pc_11610
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11628236240 = add i32 %v0_11618, 4
  %v3_11628237241 = inttoptr i32 %v2_11628236240 to i32*
  store i32 -1, i32* %v3_11628237241, align 4
  br label %bb340

bb339:                                            ; preds = %dec_label_pc_11610
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11628233 = add i32 %v0_11618, 4
  %v3_11628234 = inttoptr i32 %v2_11628233 to i32*
  store i32 -1, i32* %v3_11628234, align 4
  %v4_1162c = load i32, i32* %r3.global-to-local, align 4
  %v5_1162c = load i32, i32* @r4, align 4
  %v6_1162c = add i32 %v5_1162c, 12
  %v7_1162c = inttoptr i32 %v6_1162c to i32*
  store i32 %v4_1162c, i32* %v7_1162c, align 4
  %v4_11630 = load i32, i32* %r3.global-to-local, align 4
  %v5_11630 = trunc i32 %v4_11630 to i8
  %v6_11630 = load i32, i32* @r4, align 4
  %v7_11630 = add i32 %v6_11630, 284
  %v8_11630 = inttoptr i32 %v7_11630 to i8*
  store i8 %v5_11630, i8* %v8_11630, align 1
  %v0_11634.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11634.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb340

bb340:                                            ; preds = %.thread239, %bb339
  %v1_11634 = phi i1 [ %v1_11634.pre, %bb339 ], [ %v2_1161c, %.thread239 ]
  %v0_11634 = phi i1 [ %v0_11634.pre, %bb339 ], [ false, %.thread239 ]
  %v2_11634 = xor i1 %v1_11634, true
  %v3_11634 = or i1 %v0_11634, %v2_11634
  br i1 %v3_11634, label %bb334, label %dec_label_pc_11638

dec_label_pc_11638:                               ; preds = %bb340
  %v0_11638 = load i32, i32* @r4, align 4
  %v1_11638 = add i32 %v0_11638, 284
  %v2_11638 = inttoptr i32 %v1_11638 to i8*
  %v3_11638 = load i8, i8* %v2_11638, align 1
  %v4_11638 = zext i8 %v3_11638 to i32
  %v1_1163c = add nuw nsw i32 %v4_11638, 1
  %v1_11640 = urem i32 %v1_1163c, 256
  store i32 %v1_11640, i32* %r3.global-to-local, align 4
  %v2_11644 = icmp ugt i32 %v1_11640, 9
  store i1 %v2_11644, i1* %cpsr_c.global-to-local, align 1
  %v7_11644 = icmp eq i32 %v1_11640, 10
  store i1 %v7_11644, i1* %cpsr_z.global-to-local, align 1
  %v1_11648 = trunc i32 %v1_1163c to i8
  store i8 %v1_11648, i8* %v2_11638, align 1
  %v0_1164c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1164c, label %.thread43, label %dec_label_pc_1165c

.thread43:                                        ; preds = %dec_label_pc_11638
  %v1_1164c = load i32, i32* %r3.global-to-local, align 4
  %v2_1164c = add i32 %v1_1164c, -10
  store i32 %v2_1164c, i32* %r3.global-to-local, align 4
  %v2_11650 = load i32, i32* @r4, align 4
  %v3_11650 = add i32 %v2_11650, 12
  %v4_11650 = inttoptr i32 %v3_11650 to i32*
  store i32 %v2_1164c, i32* %v4_11650, align 4
  %v1_11654 = load i32, i32* %r3.global-to-local, align 4
  %v2_11654 = trunc i32 %v1_11654 to i8
  %v3_11654 = load i32, i32* @r4, align 4
  %v4_11654 = add i32 %v3_11654, 284
  %v5_11654 = inttoptr i32 %v4_11654 to i8*
  store i8 %v2_11654, i8* %v5_11654, align 1
  %v0_11658.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11658.pr.pr, label %bb334, label %dec_label_pc_1165c

dec_label_pc_1165c:                               ; preds = %dec_label_pc_11638, %.thread43
  %v0_1165c = load i32, i32* @r4, align 4
  store i32 %v0_1165c, i32* @r0, align 4
  %v0_11660 = call i32 @function_108dc()
  store i32 %v0_11660, i32* %r0.global-to-local, align 4
  br label %bb334

dec_label_pc_11668:                               ; preds = %dec_label_pc_11260
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1166c = call i32 @function_15368(i32 23)
  %v2_1166c = trunc i32 %v1_1166c to i16
  store i32 %v1_1166c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %r1.global-to-local, align 4
  br label %dec_label_pc_112d0

dec_label_pc_1167c:                               ; preds = %bb334
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_11688 = load i32, i32* @r6, align 4
  %v1_11688 = load i32, i32* @r5, align 4
  %v3_11688 = icmp uge i32 %v0_11688, %v1_11688
  store i1 %v3_11688, i1* %cpsr_c.global-to-local, align 1
  %v9_11688 = icmp eq i32 %v0_11688, %v1_11688
  store i1 %v9_11688, i1* %cpsr_z.global-to-local, align 1
  %v5_1168c = icmp slt i32 %v0_11688, %v1_11688
  %storemerge106 = select i1 %v5_1168c, i32 %v1_11688, i32 %v0_11688
  %v2_116a0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_116a0, i32* %ip.global-to-local, align 4
  %v2_116a4 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_116a4, i32* %r1.global-to-local, align 4
  %v2_116a8 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_116a8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_116b0 = add i32 %storemerge106, 1
  store i32 %v1_116b0, i32* %r0.global-to-local, align 4
  %v5_116bc = call i32 @function_157f4(i32 %v1_116b0, i32 %v2_116a4, i32 %v2_116a8, i32 0, i32 %v2_116a0)
  %v0_116c0 = load i32, i32* @r4, align 4
  store i32 %v0_116c0, i32* %r0.global-to-local, align 4
  %v1_116c4 = inttoptr i32 %v0_116c0 to i32*
  %v2_116c4 = call i32 @function_165ec(i32* %v1_116c4)
  store i32 %v2_116c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* @lr, align 4
  %v0_116cc = load i32, i32* @r4, align 4
  store i32 %v0_116cc, i32* %stack_var_-52, align 4
  store i32 %v2_116c4, i32* @global_var_230e8.198, align 4
  %v2_1204c = ptrtoint i32* %stack_var_-45 to i32
  %v2_12060 = ptrtoint i32* %stack_var_-77 to i32
  %v3_12064 = bitcast i32* %stack_var_-45 to i16*
  %v3_12074 = bitcast i32* %stack_var_-77 to i16*
  %v2_11df0 = ptrtoint i32* %stack_var_-60 to i32
  %v2_12190 = ptrtoint i32* %stack_var_-104 to i32
  %v2_123cc = ptrtoint i32* %stack_var_-96 to i32
  %v2_123f8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_12424 = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_116d4

dec_label_pc_116d4:                               ; preds = %dec_label_pc_11858, %dec_label_pc_1167c
  %v0_116e0 = phi i32 [ %v1_1185c, %dec_label_pc_11858 ], [ %v0_116cc, %dec_label_pc_1167c ]
  store i32 ptrtoint (i32* @global_var_23678.209 to i32), i32* %r0.global-to-local, align 4
  %v3_116d8 = mul i32 %v0_116e0, 256
  store i32 %v3_116d8, i32* %r3.global-to-local, align 4
  %v2_116dc = load i32, i32* @global_var_23678.209, align 4
  store i32 %v2_116dc, i32* %r1.global-to-local, align 4
  %v2_116e4 = mul i32 %v0_116e0, 288
  store i32 %v2_116e4, i32* %r2.global-to-local, align 4
  %v2_116e8 = add i32 %v2_116dc, %v2_116e4
  store i32 %v2_116e8, i32* @r6, align 4
  %v1_116ec = add i32 %v2_116e8, 4
  %v2_116ec = inttoptr i32 %v1_116ec to i32*
  %v3_116ec = load i32, i32* %v2_116ec, align 4
  store i32 %v3_116ec, i32* %r0.global-to-local, align 4
  %v2_116f0 = icmp eq i32 %v3_116ec, -1
  store i1 %v2_116f0, i1* %cpsr_c.global-to-local, align 1
  %v7_116f0 = icmp eq i32 %v3_116ec, -1
  store i1 %v7_116f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116f0, label %dec_label_pc_11858, label %dec_label_pc_116f8

dec_label_pc_116f8:                               ; preds = %dec_label_pc_116d4
  %v3_116f8 = udiv i32 %v3_116ec, 32
  store i32 %v2_124c8, i32* %r1.global-to-local, align 4
  %v3_11700 = mul nuw nsw i32 %v3_116f8, 4
  store i32 %v3_11700, i32* %ip.global-to-local, align 4
  %v2_11704 = add i32 %v3_11700, %v2_124c8
  store i32 %v2_11704, i32* %r2.global-to-local, align 4
  %v1_11708 = add i32 %v2_11704, -312
  %v2_11708 = inttoptr i32 %v1_11708 to i32*
  %v3_11708 = load i32, i32* %v2_11708, align 4
  %v1_1170c = urem i32 %v3_116ec, 32
  store i32 %v1_1170c, i32* %r1.global-to-local, align 4
  %v2_11710 = add nsw i32 %v1_1170c, -1
  %v3_11710 = shl i32 1, %v2_11710
  %v4_11710 = and i32 %v3_11708, %v3_11710
  %v5_11710 = icmp ne i32 %v4_11710, 0
  store i1 %v5_11710, i1* %cpsr_c.global-to-local, align 1
  %v6_11710 = lshr i32 %v3_11708, %v1_1170c
  store i32 %v6_11710, i32* %r3.global-to-local, align 4
  %v1_11714 = urem i32 %v6_11710, 2
  %v2_11714 = icmp eq i32 %v1_11714, 0
  store i1 %v2_11714, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11714, label %dec_label_pc_1171c, label %dec_label_pc_12288

dec_label_pc_1171c:                               ; preds = %dec_label_pc_116f8, %dec_label_pc_12334
  %v1_11728 = phi i32 [ %v1_1170c, %dec_label_pc_116f8 ], [ %v1_11728.pre, %dec_label_pc_12334 ]
  %v0_11720 = phi i32 [ %v3_11700, %dec_label_pc_116f8 ], [ %v0_11720.pre, %dec_label_pc_12334 ]
  store i32 %v2_124c8, i32* @lr, align 4
  %v2_11720 = add i32 %v0_11720, %v2_124c8
  store i32 %v2_11720, i32* %r2.global-to-local, align 4
  %v1_11724 = add i32 %v2_11720, -184
  %v2_11724 = inttoptr i32 %v1_11724 to i32*
  %v3_11724 = load i32, i32* %v2_11724, align 4
  %v2_11728 = add i32 %v1_11728, -1
  %v3_11728 = shl i32 1, %v2_11728
  %v4_11728 = and i32 %v3_11724, %v3_11728
  %v5_11728 = icmp ne i32 %v4_11728, 0
  store i1 %v5_11728, i1* %cpsr_c.global-to-local, align 1
  %v6_11728 = lshr i32 %v3_11724, %v1_11728
  store i32 %v6_11728, i32* %r3.global-to-local, align 4
  %v1_1172c = urem i32 %v6_11728, 2
  %v2_1172c = icmp eq i32 %v1_1172c, 0
  store i1 %v2_1172c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1172c, label %dec_label_pc_11858, label %dec_label_pc_11734.preheader

dec_label_pc_11734.preheader:                     ; preds = %dec_label_pc_1171c
  %v0_11734127 = load i32, i32* @r6, align 4
  %v1_11734128 = add i32 %v0_11734127, 12
  %v2_11734129 = inttoptr i32 %v1_11734128 to i32*
  %v3_11734130 = load i32, i32* %v2_11734129, align 4
  store i32 %v3_11734130, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11738126132 = icmp eq i32 %v3_11734130, 0
  store i1 %v2_11738126132, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11738126132, label %dec_label_pc_11858, label %dec_label_pc_11740.lr.ph

dec_label_pc_11734.loopexit:                      ; preds = %dec_label_pc_12134, %dec_label_pc_11f50, %dec_label_pc_11ed8, %dec_label_pc_12498
  %v0_11734 = load i32, i32* @r6, align 4
  %v1_11734 = add i32 %v0_11734, 12
  %v2_11734 = inttoptr i32 %v1_11734 to i32*
  %v3_11734 = load i32, i32* %v2_11734, align 4
  store i32 %v3_11734, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11738126 = icmp eq i32 %v3_11734, 0
  store i1 %v2_11738126, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11738126, label %dec_label_pc_11858, label %dec_label_pc_11740.lr.ph

dec_label_pc_11740.lr.ph:                         ; preds = %dec_label_pc_11734.preheader, %dec_label_pc_11734.loopexit
  %v0_11740158 = phi i32 [ %v0_11734, %dec_label_pc_11734.loopexit ], [ %v0_11734127, %dec_label_pc_11734.preheader ]
  br label %dec_label_pc_11740

dec_label_pc_11738thread-pre-split.thread:        ; preds = %dec_label_pc_11910, %dec_label_pc_119e4, %dec_label_pc_11ab8, %dec_label_pc_11c90, %dec_label_pc_11d64
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11740

dec_label_pc_11738thread-pre-split.thread477:     ; preds = %dec_label_pc_11dc8, %dec_label_pc_11c20, %dec_label_pc_11a48, %dec_label_pc_11cf4, %dec_label_pc_11974
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11740

dec_label_pc_11738thread-pre-split:               ; preds = %dec_label_pc_117b8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11738 = icmp eq i32 %v3_117b8, 0
  store i1 %v2_11738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11738, label %dec_label_pc_11858, label %dec_label_pc_11740

dec_label_pc_11740:                               ; preds = %dec_label_pc_11738thread-pre-split.thread, %dec_label_pc_11738thread-pre-split, %dec_label_pc_11738thread-pre-split.thread477, %dec_label_pc_11740.lr.ph
  %v0_12234 = phi i32 [ %v0_11740158, %dec_label_pc_11740.lr.ph ], [ %v0_117b8, %dec_label_pc_11738thread-pre-split.thread477 ], [ %v0_117b8, %dec_label_pc_11738thread-pre-split ], [ %v0_117b8, %dec_label_pc_11738thread-pre-split.thread ]
  %v1_11740 = add i32 %v0_12234, 24
  %v2_11740 = inttoptr i32 %v1_11740 to i32*
  %v3_11740 = load i32, i32* %v2_11740, align 4
  store i32 %v3_11740, i32* %r3.global-to-local, align 4
  %v2_11744 = icmp ugt i32 %v3_11740, 255
  store i1 %v2_11744, i1* %cpsr_c.global-to-local, align 1
  %v7_11744 = icmp eq i32 %v3_11740, 256
  store i1 %v7_11744, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_12234, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_11744, label %dec_label_pc_12234, label %dec_label_pc_11750

dec_label_pc_11750:                               ; preds = %dec_label_pc_11740, %dec_label_pc_12234
  %v0_11750 = call i32 @function_139e8()
  store i32 %v0_11750, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_11758 = inttoptr i32 %v0_11750 to i32*
  store i32 0, i32* %v2_11758, align 4
  %v0_1175c = load i32, i32* @r6, align 4
  %v1_1175c = add i32 %v0_1175c, 24
  %v2_1175c = inttoptr i32 %v1_1175c to i32*
  %v3_1175c = load i32, i32* %v2_1175c, align 4
  store i32 %v3_1175c, i32* %r2.global-to-local, align 4
  %v0_11760 = load i32, i32* @fp, align 4
  %v2_11760 = add i32 %v0_11760, %v3_1175c
  store i32 %v2_11760, i32* @r4, align 4
  %v1_11764 = add i32 %v0_1175c, 4
  %v2_11764 = inttoptr i32 %v1_11764 to i32*
  %v3_11764 = load i32, i32* %v2_11764, align 4
  store i32 %v3_11764, i32* @r0, align 4
  %v1_11768 = sub i32 256, %v3_1175c
  store i32 %v1_11768, i32* @r2, align 4
  store i32 %v2_11760, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11774 = call i32 @function_15524(i32 %v3_11764, i32 %v2_11760, i32 %v1_11768, i32 16384)
  store i32 %v4_11774, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11778 = icmp eq i32 %v4_11774, 0
  store i1 %v2_11778, i1* %cpsr_z.global-to-local, align 1
  %tmp341 = icmp slt i32 %v4_11774, 1
  br i1 %tmp341, label %dec_label_pc_12224, label %dec_label_pc_11780

dec_label_pc_11780:                               ; preds = %dec_label_pc_11750
  %v0_11780 = load i32, i32* @r5, align 4
  store i32 %v0_11780, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11784

dec_label_pc_11784:                               ; preds = %.thread50, %dec_label_pc_11780
  %v3_11790 = phi i32 [ %v1_11794, %.thread50 ], [ %v0_11780, %dec_label_pc_11780 ]
  %v1_11784 = load i32, i32* @r4, align 4
  %v2_11784 = add i32 %v1_11784, %v3_11790
  %v3_11784 = inttoptr i32 %v2_11784 to i8*
  %v4_11784 = load i8, i8* %v3_11784, align 1
  %v6_11784 = zext i8 %v4_11784 to i32
  store i32 %v6_11784, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11788 = icmp eq i8 %v4_11784, 0
  store i1 %v2_11788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11788, label %bb342, label %.thread50

bb342:                                            ; preds = %dec_label_pc_11784
  %v2_1178c = add nuw nsw i32 %v6_11784, 65
  store i32 %v2_1178c, i32* %r3.global-to-local, align 4
  %v2_11790 = trunc i32 %v2_1178c to i8
  store i8 %v2_11790, i8* %v3_11784, align 1
  %v0_11794.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread50

.thread50:                                        ; preds = %dec_label_pc_11784, %bb342
  %v0_11794 = phi i32 [ %v3_11790, %dec_label_pc_11784 ], [ %v0_11794.pre, %bb342 ]
  %v1_11794 = add i32 %v0_11794, 1
  store i32 %v1_11794, i32* %r2.global-to-local, align 4
  %v3_11798 = icmp uge i32 %v1_11794, %v4_11774
  store i1 %v3_11798, i1* %cpsr_c.global-to-local, align 1
  %v9_11798 = icmp eq i32 %v1_11794, %v4_11774
  store i1 %v9_11798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11798, label %dec_label_pc_117a0, label %dec_label_pc_11784

dec_label_pc_117a0:                               ; preds = %.thread50, %dec_label_pc_12228
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r1.global-to-local, align 4
  %v0_117a4 = load i32, i32* @r6, align 4
  %v1_117a4 = add i32 %v0_117a4, 24
  %v2_117a4 = inttoptr i32 %v1_117a4 to i32*
  %v3_117a4 = load i32, i32* %v2_117a4, align 4
  %v2_117a8 = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_117a8, i32* %r2.global-to-local, align 4
  %v2_117ac = add i32 %v3_117a4, %v4_11774
  store i32 %v2_117ac, i32* %r3.global-to-local, align 4
  store i32 %v2_117ac, i32* %v2_117a4, align 4
  %v0_117b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_117b4 = load i32, i32* @r6, align 4
  %v2_117b4 = add i32 %v1_117b4, 8
  %v3_117b4 = inttoptr i32 %v2_117b4 to i32*
  store i32 %v0_117b4, i32* %v3_117b4, align 4
  br label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_118e8, %dec_label_pc_117a0
  %v0_117b8 = load i32, i32* @r6, align 4
  %v1_117b8 = add i32 %v0_117b8, 12
  %v2_117b8 = inttoptr i32 %v1_117b8 to i32*
  %v3_117b8 = load i32, i32* %v2_117b8, align 4
  store i32 %v3_117b8, i32* %r0.global-to-local, align 4
  %v1_117bc = add i32 %v3_117b8, -2
  store i32 %v1_117bc, i32* %r3.global-to-local, align 4
  %v7_117c0 = icmp eq i32 %v1_117bc, 8
  store i1 %v7_117c0, i1* %cpsr_z.global-to-local, align 1
  %v5_117c4 = and i32 %v1_117bc, 1073741824
  %v6_117c4 = icmp ne i32 %v5_117c4, 0
  store i1 %v6_117c4, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_117b8, label %dec_label_pc_11738thread-pre-split [
    i32 2, label %dec_label_pc_11f78
    i32 3, label %dec_label_pc_11e38
    i32 4, label %dec_label_pc_11ee4
    i32 5, label %dec_label_pc_11d64
    i32 6, label %dec_label_pc_11ab8
    i32 7, label %dec_label_pc_119e4
    i32 8, label %dec_label_pc_11c90
    i32 9, label %dec_label_pc_11910
    i32 10, label %dec_label_pc_11870
  ]

dec_label_pc_117f0:                               ; preds = %dec_label_pc_12224
  %v0_117f0 = call i32 @function_139e8()
  store i32 %v0_117f0, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_117f8 = inttoptr i32 %v0_117f0 to i32*
  store i32 104, i32* %v2_117f8, align 4
  br label %dec_label_pc_117fc

dec_label_pc_117fc:                               ; preds = %dec_label_pc_12228, %dec_label_pc_117f0
  %v0_117fc = call i32 @function_139e8()
  store i32 %v0_117fc, i32* %r0.global-to-local, align 4
  %v1_11800 = inttoptr i32 %v0_117fc to i32*
  %v2_11800 = load i32, i32* %v1_11800, align 4
  store i32 %v2_11800, i32* %r3.global-to-local, align 4
  %v2_11804 = icmp ugt i32 %v2_11800, 10
  store i1 %v2_11804, i1* %cpsr_c.global-to-local, align 1
  %v7_11804 = icmp eq i32 %v2_11800, 11
  store i1 %v7_11804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11804, label %dec_label_pc_11858, label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %dec_label_pc_117fc
  %v0_1180c = call i32 @function_139e8()
  store i32 %v0_1180c, i32* %r0.global-to-local, align 4
  %v1_11810 = inttoptr i32 %v0_1180c to i32*
  %v2_11810 = load i32, i32* %v1_11810, align 4
  store i32 %v2_11810, i32* %r3.global-to-local, align 4
  %v2_11814 = icmp ugt i32 %v2_11810, 10
  store i1 %v2_11814, i1* %cpsr_c.global-to-local, align 1
  %v7_11814 = icmp eq i32 %v2_11810, 11
  store i1 %v7_11814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11814, label %dec_label_pc_11858, label %dec_label_pc_1181c

dec_label_pc_1181c:                               ; preds = %dec_label_pc_1180c
  %v0_1181c = load i32, i32* @r6, align 4
  %v1_1181c = add i32 %v0_1181c, 4
  %v2_1181c = inttoptr i32 %v1_1181c to i32*
  %v3_1181c = load i32, i32* %v2_1181c, align 4
  store i32 %v3_1181c, i32* @r0, align 4
  %v1_11820 = call i32 @function_1663c(i32 %v3_1181c)
  store i32 %v1_11820, i32* %r0.global-to-local, align 4
  %v0_11824 = load i32, i32* @r6, align 4
  %v1_11824 = add i32 %v0_11824, 284
  %v2_11824 = inttoptr i32 %v1_11824 to i8*
  %v3_11824 = load i8, i8* %v2_11824, align 1
  %v4_11824 = zext i8 %v3_11824 to i32
  %v1_11828 = add nuw nsw i32 %v4_11824, 1
  %v1_1182c = urem i32 %v1_11828, 256
  store i32 %v1_1182c, i32* %r3.global-to-local, align 4
  %v2_11830 = icmp ugt i32 %v1_1182c, 8
  store i1 %v2_11830, i1* %cpsr_c.global-to-local, align 1
  %v7_11830 = icmp eq i32 %v1_1182c, 9
  store i1 %v7_11830, i1* %cpsr_z.global-to-local, align 1
  %v1_11834 = trunc i32 %v1_11828 to i8
  store i8 %v1_11834, i8* %v2_11824, align 1
  %v0_11838 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11838 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_11838 = xor i1 %v1_11838, true
  %v3_11838 = and i1 %v0_11838, %v2_11838
  br i1 %v3_11838, label %bb343, label %.thread255

.thread255:                                       ; preds = %dec_label_pc_1181c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_11844251256 = load i32, i32* @r6, align 4
  %v2_11844252257 = add i32 %v1_11844251256, 4
  %v3_11844253258 = inttoptr i32 %v2_11844252257 to i32*
  store i32 -1, i32* %v3_11844253258, align 4
  br label %bb344

bb343:                                            ; preds = %dec_label_pc_1181c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_11844247 = load i32, i32* @r6, align 4
  %v2_11844248 = add i32 %v1_11844247, 4
  %v3_11844249 = inttoptr i32 %v2_11844248 to i32*
  store i32 -1, i32* %v3_11844249, align 4
  %v4_11848 = load i32, i32* %r0.global-to-local, align 4
  %v5_11848 = load i32, i32* @r6, align 4
  %v6_11848 = add i32 %v5_11848, 12
  %v7_11848 = inttoptr i32 %v6_11848 to i32*
  store i32 %v4_11848, i32* %v7_11848, align 4
  %v4_1184c = load i32, i32* %r3.global-to-local, align 4
  %v5_1184c = trunc i32 %v4_1184c to i8
  %v6_1184c = load i32, i32* @r6, align 4
  %v7_1184c = add i32 %v6_1184c, 284
  %v8_1184c = inttoptr i32 %v7_1184c to i8*
  store i8 %v5_1184c, i8* %v8_1184c, align 1
  %v0_11850.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11850.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb344

bb344:                                            ; preds = %.thread255, %bb343
  %v1_11854 = phi i1 [ %v1_11850.pre, %bb343 ], [ %v0_11838, %.thread255 ]
  %v0_11854 = phi i1 [ %v0_11850.pre, %bb343 ], [ %v1_11838, %.thread255 ]
  %v2_11850 = xor i1 %v1_11854, true
  %v3_11850 = or i1 %v0_11854, %v2_11850
  br i1 %v3_11850, label %bb345, label %bb346

bb345:                                            ; preds = %bb344
  %v4_11850 = load i32, i32* @r6, align 4
  store i32 %v4_11850, i32* %r0.global-to-local, align 4
  br label %bb346

bb346:                                            ; preds = %bb344, %bb345
  store i32 71768, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_11850, i32 ptrtoint (i32* @global_var_108dc.327 to i32))
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_11734.loopexit, %dec_label_pc_11738thread-pre-split, %dec_label_pc_11734.preheader, %dec_label_pc_1180c, %dec_label_pc_117fc, %dec_label_pc_1171c, %dec_label_pc_116d4, %dec_label_pc_12354, %bb346
  %v3_11858 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11858, i32* %r3.global-to-local, align 4
  %v1_1185c = add i32 %v3_11858, 1
  store i32 %v1_1185c, i32* @r4, align 4
  %v2_11860 = icmp ugt i32 %v1_1185c, 254
  store i1 %v2_11860, i1* %cpsr_c.global-to-local, align 1
  %v7_11860 = icmp eq i32 %v1_1185c, 255
  store i1 %v7_11860, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1185c, i32* %stack_var_-52, align 4
  %v7_11868 = icmp slt i32 %v1_1185c, 256
  br i1 %v7_11868, label %dec_label_pc_116d4, label %dec_label_pc_110e8

dec_label_pc_11870:                               ; preds = %dec_label_pc_117b8
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11874 = call i32 @function_125b0(i32 26)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_11884 = call i32 @function_124ec(i32 26, i32* nonnull %stack_var_-60)
  %v3_11888 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11884, i32* %r2.global-to-local, align 4
  %v1_11890 = add i32 %v3_11888, -1
  store i32 %v1_11890, i32* %r3.global-to-local, align 4
  %v0_11894 = load i32, i32* @fp, align 4
  store i32 %v0_11894, i32* %r0.global-to-local, align 4
  %v0_11898 = load i32, i32* @r6, align 4
  %v1_11898 = add i32 %v0_11898, 24
  %v2_11898 = inttoptr i32 %v1_11898 to i32*
  %v3_11898 = load i32, i32* %v2_11898, align 4
  store i32 %v3_11898, i32* %r1.global-to-local, align 4
  %v4_1189c = call i32 @function_12ef8(i32 %v0_11894, i32 %v3_11898, i32 %v3_11884, i32 %v1_11890)
  %v2_118a0 = icmp eq i32 %v4_1189c, -1
  store i1 %v2_118a0, i1* %cpsr_c.global-to-local, align 1
  %v7_118a0 = icmp eq i32 %v4_1189c, -1
  store i1 %v7_118a0, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_12138 = call i32 @function_12510(i32 26)
  br i1 %v7_118a0, label %dec_label_pc_12134, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_11870
  store i32 %v1_12138, i32* %r0.global-to-local, align 4
  %v0_118b0 = load i32, i32* @r6, align 4
  %v1_118b0 = add i32 %v0_118b0, 4
  %v2_118b0 = inttoptr i32 %v1_118b0 to i32*
  %v3_118b0 = load i32, i32* %v2_118b0, align 4
  store i32 %v3_118b0, i32* @r0, align 4
  %v1_118b4 = call i32 @function_1663c(i32 %v3_118b0)
  store i32 %v1_118b4, i32* %r0.global-to-local, align 4
  %v0_118b8 = load i32, i32* @r6, align 4
  %v1_118b8 = add i32 %v0_118b8, 284
  %v2_118b8 = inttoptr i32 %v1_118b8 to i8*
  %v3_118b8 = load i8, i8* %v2_118b8, align 1
  %v4_118b8 = zext i8 %v3_118b8 to i32
  %v1_118bc = add nuw nsw i32 %v4_118b8, 1
  %v1_118c0 = urem i32 %v1_118bc, 256
  store i32 %v1_118c0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_118c8 = icmp ugt i32 %v1_118c0, 9
  store i1 %v2_118c8, i1* %cpsr_c.global-to-local, align 1
  %v7_118c8 = icmp eq i32 %v1_118c0, 10
  store i1 %v7_118c8, i1* %cpsr_z.global-to-local, align 1
  %v2_118cc = add i32 %v0_118b8, 4
  %v3_118cc = inttoptr i32 %v2_118cc to i32*
  store i32 -1, i32* %v3_118cc, align 4
  %v0_118d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_118d0 = trunc i32 %v0_118d0 to i8
  %v2_118d0 = load i32, i32* @r6, align 4
  %v3_118d0 = add i32 %v2_118d0, 284
  %v4_118d0 = inttoptr i32 %v3_118d0 to i8*
  store i8 %v1_118d0, i8* %v4_118d0, align 1
  %v0_118d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118d4, label %dec_label_pc_118d8, label %dec_label_pc_1227c

dec_label_pc_118d8:                               ; preds = %dec_label_pc_118a8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_118dc = load i32, i32* @r6, align 4
  %v2_118dc = add i32 %v1_118dc, 12
  %v3_118dc = inttoptr i32 %v2_118dc to i32*
  store i32 0, i32* %v3_118dc, align 4
  %v0_118e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_118e0 = trunc i32 %v0_118e0 to i8
  %v2_118e0 = load i32, i32* @r6, align 4
  %v3_118e0 = add i32 %v2_118e0, 284
  %v4_118e0 = inttoptr i32 %v3_118e0 to i8*
  store i8 %v1_118e0, i8* %v4_118e0, align 1
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_1227c, %dec_label_pc_118d8
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_118e8

dec_label_pc_118e8:                               ; preds = %dec_label_pc_11ed8, %dec_label_pc_11de0, %dec_label_pc_11d0c, %dec_label_pc_11c38, %dec_label_pc_11a60, %dec_label_pc_1198c, %dec_label_pc_118e4
  %v0_118e8 = load i32, i32* @r6, align 4
  %v1_118e8 = add i32 %v0_118e8, 24
  %v2_118e8 = inttoptr i32 %v1_118e8 to i32*
  %v3_118e8 = load i32, i32* %v2_118e8, align 4
  %v0_118ec = load i32, i32* @r7, align 4
  %v2_118ec = sub i32 %v0_118ec, %v3_118e8
  %v3_118ec = icmp uge i32 %v0_118ec, %v3_118e8
  store i1 %v3_118ec, i1* %cpsr_c.global-to-local, align 1
  %v4_118ec = xor i32 %v0_118ec, %v3_118e8
  %v5_118ec = xor i32 %v2_118ec, %v0_118ec
  %v6_118ec = and i32 %v5_118ec, %v4_118ec
  %v7_118ec = icmp slt i32 %v6_118ec, 0
  %v8_118ec = icmp slt i32 %v2_118ec, 0
  %v9_118ec = icmp eq i32 %v0_118ec, %v3_118e8
  store i1 %v9_118ec, i1* %cpsr_z.global-to-local, align 1
  %v2_118f0 = xor i1 %v8_118ec, %v7_118ec
  %v0_118ec.v3_118e8 = select i1 %v2_118f0, i32 %v0_118ec, i32 %v3_118e8
  store i32 %v0_118ec.v3_118e8, i32* %r1.global-to-local, align 4
  %v2_118f8 = sub i32 %v3_118e8, %v0_118ec.v3_118e8
  store i32 %v2_118f8, i32* %r2.global-to-local, align 4
  store i32 %v2_118f8, i32* %v2_118e8, align 4
  %v0_11900 = load i32, i32* @fp, align 4
  %v1_11900 = load i32, i32* %r1.global-to-local, align 4
  %v2_11900 = add i32 %v1_11900, %v0_11900
  store i32 %v2_11900, i32* %r1.global-to-local, align 4
  store i32 %v0_11900, i32* %r0.global-to-local, align 4
  %v3_11908 = inttoptr i32 %v0_11900 to i8*
  %v4_11908 = call i32 @function_15f18(i8* %v3_11908, i32 %v2_11900, i32 %v2_118f8)
  store i32 %v4_11908, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_117b8

dec_label_pc_11910:                               ; preds = %dec_label_pc_117b8
  %v1_11910 = add i32 %v0_117b8, 24
  %v2_11910 = inttoptr i32 %v1_11910 to i32*
  %v3_11910 = load i32, i32* %v2_11910, align 4
  store i32 %v3_11910, i32* %r2.global-to-local, align 4
  %v1_11914 = add i32 %v3_11910, -1
  store i32 %v1_11914, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11918 = icmp eq i32 %v1_11914, 0
  store i1 %v2_11918, i1* %cpsr_z.global-to-local, align 1
  %tmp349 = icmp slt i32 %v1_11914, 1
  br i1 %tmp349, label %dec_label_pc_11738thread-pre-split.thread, label %dec_label_pc_11920

dec_label_pc_11920:                               ; preds = %dec_label_pc_11910
  %v2_11920 = add i32 %v1_11914, %v0_117b8
  store i32 %v2_11920, i32* %r3.global-to-local, align 4
  %v1_11924 = add i32 %v2_11920, 28
  %v2_11924 = inttoptr i32 %v1_11924 to i8*
  %v3_11924 = load i8, i8* %v2_11924, align 1
  %v4_11924 = zext i8 %v3_11924 to i32
  store i32 %v4_11924, i32* %r3.global-to-local, align 4
  %v2_11928 = icmp ugt i8 %v3_11924, 61
  store i1 %v2_11928, i1* %cpsr_c.global-to-local, align 1
  %v7_11928 = icmp eq i8 %v3_11924, 62
  store i1 %v7_11928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11928, label %dec_label_pc_1198c, label %bb350

bb350:                                            ; preds = %dec_label_pc_11920
  %v3_1192c = icmp ugt i8 %v3_11924, 57
  store i1 %v3_1192c, i1* %cpsr_c.global-to-local, align 1
  %v8_1192c = icmp eq i8 %v3_11924, 58
  store i1 %v8_1192c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1192c, label %dec_label_pc_1198c, label %dec_label_pc_11934

dec_label_pc_11934:                               ; preds = %bb350
  %v2_11934 = icmp ugt i8 %v3_11924, 35
  store i1 %v2_11934, i1* %cpsr_c.global-to-local, align 1
  %v7_11934 = icmp eq i8 %v3_11924, 36
  store i1 %v7_11934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11934, label %dec_label_pc_1198c, label %dec_label_pc_1193c

dec_label_pc_1193c:                               ; preds = %dec_label_pc_11934
  %v2_1193c = icmp ugt i8 %v3_11924, 34
  store i1 %v2_1193c, i1* %cpsr_c.global-to-local, align 1
  %v7_1193c = icmp eq i8 %v3_11924, 35
  store i1 %v7_1193c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1193c, label %dec_label_pc_1198c, label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_1193c
  %v2_11944 = icmp ugt i8 %v3_11924, 36
  store i1 %v2_11944, i1* %cpsr_c.global-to-local, align 1
  %v7_11944 = icmp eq i8 %v3_11924, 37
  store i1 %v7_11944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11944, label %dec_label_pc_1198c, label %dec_label_pc_11974.preheader

dec_label_pc_11974.preheader:                     ; preds = %dec_label_pc_11944
  %v3_11948 = add i32 %v0_117b8, 28
  %v2_1194c = add i32 %v3_11948, %v3_11910
  store i32 %v2_1194c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11974

dec_label_pc_11958:                               ; preds = %bb351
  %v2_11958 = icmp ugt i8 %v3_1197c, 35
  store i1 %v2_11958, i1* %cpsr_c.global-to-local, align 1
  %v7_11958 = icmp eq i8 %v3_1197c, 36
  store i1 %v7_11958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11958, label %dec_label_pc_1198c, label %dec_label_pc_11960

dec_label_pc_11960:                               ; preds = %dec_label_pc_11958
  %v2_11960 = icmp ugt i8 %v3_1197c, 34
  store i1 %v2_11960, i1* %cpsr_c.global-to-local, align 1
  %v7_11960 = icmp eq i8 %v3_1197c, 35
  store i1 %v7_11960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11960, label %dec_label_pc_1198c, label %dec_label_pc_11968

dec_label_pc_11968:                               ; preds = %dec_label_pc_11960
  %v2_11968 = icmp ugt i8 %v3_1197c, 36
  store i1 %v2_11968, i1* %cpsr_c.global-to-local, align 1
  %v7_11968 = icmp eq i8 %v3_1197c, 37
  store i1 %v7_11968, i1* %cpsr_z.global-to-local, align 1
  %v1_1196c = add i32 %v0_1196c, -1
  store i32 %v1_1196c, i32* %r3.global-to-local, align 4
  br i1 %v7_11968, label %dec_label_pc_1198c, label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_11974.preheader, %dec_label_pc_11968
  %v0_1196c = phi i32 [ %v2_1194c, %dec_label_pc_11974.preheader ], [ %v1_1196c, %dec_label_pc_11968 ]
  %v0_11974 = phi i32 [ %v1_11914, %dec_label_pc_11974.preheader ], [ %v1_11974, %dec_label_pc_11968 ]
  %v1_11974 = add i32 %v0_11974, -1
  store i32 %v1_11974, i32* %r1.global-to-local, align 4
  %v2_11974 = icmp ne i32 %v0_11974, 0
  store i1 %v2_11974, i1* %cpsr_c.global-to-local, align 1
  %v7_11974 = icmp eq i32 %v0_11974, 1
  store i1 %v7_11974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11974, label %dec_label_pc_11738thread-pre-split.thread477, label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11974
  %v1_1197c = add i32 %v0_1196c, -2
  %v2_1197c = inttoptr i32 %v1_1197c to i8*
  %v3_1197c = load i8, i8* %v2_1197c, align 1
  %v4_1197c = zext i8 %v3_1197c to i32
  store i32 %v4_1197c, i32* %r2.global-to-local, align 4
  %v2_11980 = icmp ugt i8 %v3_1197c, 61
  store i1 %v2_11980, i1* %cpsr_c.global-to-local, align 1
  %v7_11980 = icmp eq i8 %v3_1197c, 62
  store i1 %v7_11980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11980, label %dec_label_pc_1198c, label %bb351

bb351:                                            ; preds = %dec_label_pc_1197c
  %v3_11984 = icmp ugt i8 %v3_1197c, 57
  store i1 %v3_11984, i1* %cpsr_c.global-to-local, align 1
  %v8_11984 = icmp eq i8 %v3_1197c, 58
  store i1 %v8_11984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11984, label %dec_label_pc_1198c, label %dec_label_pc_11958

dec_label_pc_1198c:                               ; preds = %dec_label_pc_1197c, %bb351, %dec_label_pc_11968, %dec_label_pc_11960, %dec_label_pc_11958, %dec_label_pc_11944, %dec_label_pc_11920, %dec_label_pc_1193c, %dec_label_pc_11934, %bb350
  %v0_11990 = phi i32 [ %v1_11914, %dec_label_pc_11944 ], [ %v1_11914, %dec_label_pc_11920 ], [ %v1_11914, %dec_label_pc_1193c ], [ %v1_11914, %dec_label_pc_11934 ], [ %v1_11914, %bb350 ], [ %v1_11974, %dec_label_pc_11958 ], [ %v1_11974, %dec_label_pc_11960 ], [ %v1_11974, %dec_label_pc_11968 ], [ %v1_11974, %bb351 ], [ %v1_11974, %dec_label_pc_1197c ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_11990 = add i32 %v0_11990, 1
  store i32 %v1_11990, i32* @r7, align 4
  %v1_11994 = call i32 @function_125b0(i32 24)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_119a4 = call i32 @function_124ec(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_119a4, i32* %r0.global-to-local, align 4
  %v3_119a8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_119a8, i32* @r2, align 4
  store i32 %v3_119a4, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119b4 = load i32, i32* @r6, align 4
  %v1_119b4 = add i32 %v0_119b4, 4
  %v2_119b4 = inttoptr i32 %v1_119b4 to i32*
  %v3_119b4 = load i32, i32* %v2_119b4, align 4
  store i32 %v3_119b4, i32* @r0, align 4
  %v4_119b8 = call i32 @function_15590(i32 %v3_119b4, i32 %v3_119a4, i32 %v3_119a8, i32 16384)
  store i32 %v4_119b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119c8 = load i32, i32* @r6, align 4
  %v1_119c8 = add i32 %v0_119c8, 4
  %v2_119c8 = inttoptr i32 %v1_119c8 to i32*
  %v3_119c8 = load i32, i32* %v2_119c8, align 4
  store i32 %v3_119c8, i32* @r0, align 4
  %v4_119cc = call i32 @function_15590(i32 %v3_119c8, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_119d4 = call i32 @function_12510(i32 24)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_119dc = load i32, i32* @r6, align 4
  %v2_119dc = add i32 %v1_119dc, 12
  %v3_119dc = inttoptr i32 %v2_119dc to i32*
  store i32 10, i32* %v3_119dc, align 4
  br label %dec_label_pc_118e8

dec_label_pc_119e4:                               ; preds = %dec_label_pc_117b8
  %v1_119e4 = add i32 %v0_117b8, 24
  %v2_119e4 = inttoptr i32 %v1_119e4 to i32*
  %v3_119e4 = load i32, i32* %v2_119e4, align 4
  store i32 %v3_119e4, i32* %r2.global-to-local, align 4
  %v1_119e8 = add i32 %v3_119e4, -1
  store i32 %v1_119e8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_119ec = icmp eq i32 %v1_119e8, 0
  store i1 %v2_119ec, i1* %cpsr_z.global-to-local, align 1
  %tmp352 = icmp slt i32 %v1_119e8, 1
  br i1 %tmp352, label %dec_label_pc_11738thread-pre-split.thread, label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119e4
  %v2_119f4 = add i32 %v1_119e8, %v0_117b8
  store i32 %v2_119f4, i32* %r3.global-to-local, align 4
  %v1_119f8 = add i32 %v2_119f4, 28
  %v2_119f8 = inttoptr i32 %v1_119f8 to i8*
  %v3_119f8 = load i8, i8* %v2_119f8, align 1
  %v4_119f8 = zext i8 %v3_119f8 to i32
  store i32 %v4_119f8, i32* %r3.global-to-local, align 4
  %v2_119fc = icmp ugt i8 %v3_119f8, 61
  store i1 %v2_119fc, i1* %cpsr_c.global-to-local, align 1
  %v7_119fc = icmp eq i8 %v3_119f8, 62
  store i1 %v7_119fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119fc, label %dec_label_pc_11a60, label %bb353

bb353:                                            ; preds = %dec_label_pc_119f4
  %v3_11a00 = icmp ugt i8 %v3_119f8, 57
  store i1 %v3_11a00, i1* %cpsr_c.global-to-local, align 1
  %v8_11a00 = icmp eq i8 %v3_119f8, 58
  store i1 %v8_11a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11a00, label %dec_label_pc_11a60, label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %bb353
  %v2_11a08 = icmp ugt i8 %v3_119f8, 35
  store i1 %v2_11a08, i1* %cpsr_c.global-to-local, align 1
  %v7_11a08 = icmp eq i8 %v3_119f8, 36
  store i1 %v7_11a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a08, label %dec_label_pc_11a60, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_11a08
  %v2_11a10 = icmp ugt i8 %v3_119f8, 34
  store i1 %v2_11a10, i1* %cpsr_c.global-to-local, align 1
  %v7_11a10 = icmp eq i8 %v3_119f8, 35
  store i1 %v7_11a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a10, label %dec_label_pc_11a60, label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_11a10
  %v2_11a18 = icmp ugt i8 %v3_119f8, 36
  store i1 %v2_11a18, i1* %cpsr_c.global-to-local, align 1
  %v7_11a18 = icmp eq i8 %v3_119f8, 37
  store i1 %v7_11a18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a18, label %dec_label_pc_11a60, label %dec_label_pc_11a48.preheader

dec_label_pc_11a48.preheader:                     ; preds = %dec_label_pc_11a18
  %v3_11a1c = add i32 %v0_117b8, 28
  %v2_11a20 = add i32 %v3_11a1c, %v3_119e4
  store i32 %v2_11a20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11a48

dec_label_pc_11a2c:                               ; preds = %bb354
  %v2_11a2c = icmp ugt i8 %v3_11a50, 35
  store i1 %v2_11a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_11a2c = icmp eq i8 %v3_11a50, 36
  store i1 %v7_11a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a2c, label %dec_label_pc_11a60, label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a2c
  %v2_11a34 = icmp ugt i8 %v3_11a50, 34
  store i1 %v2_11a34, i1* %cpsr_c.global-to-local, align 1
  %v7_11a34 = icmp eq i8 %v3_11a50, 35
  store i1 %v7_11a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a34, label %dec_label_pc_11a60, label %dec_label_pc_11a3c

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a34
  %v2_11a3c = icmp ugt i8 %v3_11a50, 36
  store i1 %v2_11a3c, i1* %cpsr_c.global-to-local, align 1
  %v7_11a3c = icmp eq i8 %v3_11a50, 37
  store i1 %v7_11a3c, i1* %cpsr_z.global-to-local, align 1
  %v1_11a40 = add i32 %v0_11a40, -1
  store i32 %v1_11a40, i32* %r3.global-to-local, align 4
  br i1 %v7_11a3c, label %dec_label_pc_11a60, label %dec_label_pc_11a48

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a48.preheader, %dec_label_pc_11a3c
  %v0_11a40 = phi i32 [ %v2_11a20, %dec_label_pc_11a48.preheader ], [ %v1_11a40, %dec_label_pc_11a3c ]
  %v0_11a48 = phi i32 [ %v1_119e8, %dec_label_pc_11a48.preheader ], [ %v1_11a48, %dec_label_pc_11a3c ]
  %v1_11a48 = add i32 %v0_11a48, -1
  store i32 %v1_11a48, i32* %r1.global-to-local, align 4
  %v2_11a48 = icmp ne i32 %v0_11a48, 0
  store i1 %v2_11a48, i1* %cpsr_c.global-to-local, align 1
  %v7_11a48 = icmp eq i32 %v0_11a48, 1
  store i1 %v7_11a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a48, label %dec_label_pc_11738thread-pre-split.thread477, label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a48
  %v1_11a50 = add i32 %v0_11a40, -2
  %v2_11a50 = inttoptr i32 %v1_11a50 to i8*
  %v3_11a50 = load i8, i8* %v2_11a50, align 1
  %v4_11a50 = zext i8 %v3_11a50 to i32
  store i32 %v4_11a50, i32* %r2.global-to-local, align 4
  %v2_11a54 = icmp ugt i8 %v3_11a50, 61
  store i1 %v2_11a54, i1* %cpsr_c.global-to-local, align 1
  %v7_11a54 = icmp eq i8 %v3_11a50, 62
  store i1 %v7_11a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a54, label %dec_label_pc_11a60, label %bb354

bb354:                                            ; preds = %dec_label_pc_11a50
  %v3_11a58 = icmp ugt i8 %v3_11a50, 57
  store i1 %v3_11a58, i1* %cpsr_c.global-to-local, align 1
  %v8_11a58 = icmp eq i8 %v3_11a50, 58
  store i1 %v8_11a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11a58, label %dec_label_pc_11a60, label %dec_label_pc_11a2c

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a50, %bb354, %dec_label_pc_11a3c, %dec_label_pc_11a34, %dec_label_pc_11a2c, %dec_label_pc_11a18, %dec_label_pc_119f4, %dec_label_pc_11a10, %dec_label_pc_11a08, %bb353
  %v0_11a64 = phi i32 [ %v1_119e8, %dec_label_pc_11a18 ], [ %v1_119e8, %dec_label_pc_119f4 ], [ %v1_119e8, %dec_label_pc_11a10 ], [ %v1_119e8, %dec_label_pc_11a08 ], [ %v1_119e8, %bb353 ], [ %v1_11a48, %dec_label_pc_11a2c ], [ %v1_11a48, %dec_label_pc_11a34 ], [ %v1_11a48, %dec_label_pc_11a3c ], [ %v1_11a48, %bb354 ], [ %v1_11a48, %dec_label_pc_11a50 ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_11a64 = add i32 %v0_11a64, 1
  store i32 %v1_11a64, i32* @r7, align 4
  %v1_11a68 = call i32 @function_125b0(i32 20)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_11a78 = call i32 @function_124ec(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_11a78, i32* %r0.global-to-local, align 4
  %v3_11a7c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11a7c, i32* @r2, align 4
  store i32 %v3_11a78, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a88 = load i32, i32* @r6, align 4
  %v1_11a88 = add i32 %v0_11a88, 4
  %v2_11a88 = inttoptr i32 %v1_11a88 to i32*
  %v3_11a88 = load i32, i32* %v2_11a88, align 4
  store i32 %v3_11a88, i32* @r0, align 4
  %v4_11a8c = call i32 @function_15590(i32 %v3_11a88, i32 %v3_11a78, i32 %v3_11a7c, i32 16384)
  store i32 %v4_11a8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a9c = load i32, i32* @r6, align 4
  %v1_11a9c = add i32 %v0_11a9c, 4
  %v2_11a9c = inttoptr i32 %v1_11a9c to i32*
  %v3_11a9c = load i32, i32* %v2_11a9c, align 4
  store i32 %v3_11a9c, i32* @r0, align 4
  %v4_11aa0 = call i32 @function_15590(i32 %v3_11a9c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_11aa8 = call i32 @function_12510(i32 20)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_11ab0 = load i32, i32* @r6, align 4
  %v2_11ab0 = add i32 %v1_11ab0, 12
  %v3_11ab0 = inttoptr i32 %v2_11ab0 to i32*
  store i32 8, i32* %v3_11ab0, align 4
  br label %dec_label_pc_118e8

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_117b8
  %v1_11ab8 = add i32 %v0_117b8, 24
  %v2_11ab8 = inttoptr i32 %v1_11ab8 to i32*
  %v3_11ab8 = load i32, i32* %v2_11ab8, align 4
  store i32 %v3_11ab8, i32* %r2.global-to-local, align 4
  %v1_11abc = add i32 %v3_11ab8, -1
  store i32 %v1_11abc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11ac0 = icmp eq i32 %v1_11abc, 0
  store i1 %v2_11ac0, i1* %cpsr_z.global-to-local, align 1
  %tmp355 = icmp slt i32 %v1_11abc, 1
  br i1 %tmp355, label %dec_label_pc_11738thread-pre-split.thread, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11ab8
  %v2_11ac8 = add i32 %v1_11abc, %v0_117b8
  store i32 %v2_11ac8, i32* %r3.global-to-local, align 4
  %v1_11acc = add i32 %v2_11ac8, 28
  %v2_11acc = inttoptr i32 %v1_11acc to i8*
  %v3_11acc = load i8, i8* %v2_11acc, align 1
  %v4_11acc = zext i8 %v3_11acc to i32
  store i32 %v4_11acc, i32* %r3.global-to-local, align 4
  %v2_11ad0 = icmp ugt i8 %v3_11acc, 61
  store i1 %v2_11ad0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ad0 = icmp eq i8 %v3_11acc, 62
  store i1 %v7_11ad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ad0, label %dec_label_pc_11c38, label %bb356

bb356:                                            ; preds = %dec_label_pc_11ac8
  %v3_11ad4 = icmp ugt i8 %v3_11acc, 57
  store i1 %v3_11ad4, i1* %cpsr_c.global-to-local, align 1
  %v8_11ad4 = icmp eq i8 %v3_11acc, 58
  store i1 %v8_11ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11ad4, label %dec_label_pc_11c38, label %dec_label_pc_11adc

dec_label_pc_11adc:                               ; preds = %bb356
  %v2_11adc = icmp ugt i8 %v3_11acc, 35
  store i1 %v2_11adc, i1* %cpsr_c.global-to-local, align 1
  %v7_11adc = icmp eq i8 %v3_11acc, 36
  store i1 %v7_11adc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11adc, label %dec_label_pc_11c38, label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11adc
  %v2_11ae4 = icmp ugt i8 %v3_11acc, 34
  store i1 %v2_11ae4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ae4 = icmp eq i8 %v3_11acc, 35
  store i1 %v7_11ae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ae4, label %dec_label_pc_11c38, label %dec_label_pc_11aec

dec_label_pc_11aec:                               ; preds = %dec_label_pc_11ae4
  %v2_11aec = icmp ugt i8 %v3_11acc, 36
  store i1 %v2_11aec, i1* %cpsr_c.global-to-local, align 1
  %v7_11aec = icmp eq i8 %v3_11acc, 37
  store i1 %v7_11aec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11aec, label %dec_label_pc_11c38, label %dec_label_pc_11c20.preheader

dec_label_pc_11c20.preheader:                     ; preds = %dec_label_pc_11aec
  %v3_11af0 = add i32 %v0_117b8, 28
  %v2_11af4 = add i32 %v3_11af0, %v3_11ab8
  store i32 %v2_11af4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11c20

dec_label_pc_11c04:                               ; preds = %bb357
  %v2_11c04 = icmp ugt i8 %v3_11c28, 35
  store i1 %v2_11c04, i1* %cpsr_c.global-to-local, align 1
  %v7_11c04 = icmp eq i8 %v3_11c28, 36
  store i1 %v7_11c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c04, label %dec_label_pc_11c38, label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11c04
  %v2_11c0c = icmp ugt i8 %v3_11c28, 34
  store i1 %v2_11c0c, i1* %cpsr_c.global-to-local, align 1
  %v7_11c0c = icmp eq i8 %v3_11c28, 35
  store i1 %v7_11c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c0c, label %dec_label_pc_11c38, label %dec_label_pc_11c14

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11c0c
  %v2_11c14 = icmp ugt i8 %v3_11c28, 36
  store i1 %v2_11c14, i1* %cpsr_c.global-to-local, align 1
  %v7_11c14 = icmp eq i8 %v3_11c28, 37
  store i1 %v7_11c14, i1* %cpsr_z.global-to-local, align 1
  %v1_11c18 = add i32 %v0_11c18, -1
  store i32 %v1_11c18, i32* %r3.global-to-local, align 4
  br i1 %v7_11c14, label %dec_label_pc_11c38, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c20.preheader, %dec_label_pc_11c14
  %v0_11c18 = phi i32 [ %v2_11af4, %dec_label_pc_11c20.preheader ], [ %v1_11c18, %dec_label_pc_11c14 ]
  %v0_11c20 = phi i32 [ %v1_11abc, %dec_label_pc_11c20.preheader ], [ %v1_11c20, %dec_label_pc_11c14 ]
  %v1_11c20 = add i32 %v0_11c20, -1
  store i32 %v1_11c20, i32* %r1.global-to-local, align 4
  %v2_11c20 = icmp ne i32 %v0_11c20, 0
  store i1 %v2_11c20, i1* %cpsr_c.global-to-local, align 1
  %v7_11c20 = icmp eq i32 %v0_11c20, 1
  store i1 %v7_11c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c20, label %dec_label_pc_11738thread-pre-split.thread477, label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c20
  %v1_11c28 = add i32 %v0_11c18, -2
  %v2_11c28 = inttoptr i32 %v1_11c28 to i8*
  %v3_11c28 = load i8, i8* %v2_11c28, align 1
  %v4_11c28 = zext i8 %v3_11c28 to i32
  store i32 %v4_11c28, i32* %r2.global-to-local, align 4
  %v2_11c2c = icmp ugt i8 %v3_11c28, 61
  store i1 %v2_11c2c, i1* %cpsr_c.global-to-local, align 1
  %v7_11c2c = icmp eq i8 %v3_11c28, 62
  store i1 %v7_11c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c2c, label %dec_label_pc_11c38, label %bb357

bb357:                                            ; preds = %dec_label_pc_11c28
  %v3_11c30 = icmp ugt i8 %v3_11c28, 57
  store i1 %v3_11c30, i1* %cpsr_c.global-to-local, align 1
  %v8_11c30 = icmp eq i8 %v3_11c28, 58
  store i1 %v8_11c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11c30, label %dec_label_pc_11c38, label %dec_label_pc_11c04

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c28, %bb357, %dec_label_pc_11c14, %dec_label_pc_11c0c, %dec_label_pc_11c04, %dec_label_pc_11aec, %dec_label_pc_11ac8, %dec_label_pc_11ae4, %dec_label_pc_11adc, %bb356
  %v0_11c3c = phi i32 [ %v1_11abc, %dec_label_pc_11aec ], [ %v1_11abc, %dec_label_pc_11ac8 ], [ %v1_11abc, %dec_label_pc_11ae4 ], [ %v1_11abc, %dec_label_pc_11adc ], [ %v1_11abc, %bb356 ], [ %v1_11c20, %dec_label_pc_11c04 ], [ %v1_11c20, %dec_label_pc_11c0c ], [ %v1_11c20, %dec_label_pc_11c14 ], [ %v1_11c20, %bb357 ], [ %v1_11c20, %dec_label_pc_11c28 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11c3c = add i32 %v0_11c3c, 1
  store i32 %v1_11c3c, i32* @r7, align 4
  %v1_11c40 = call i32 @function_125b0(i32 22)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_11c50 = call i32 @function_124ec(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_11c50, i32* %r0.global-to-local, align 4
  %v3_11c54 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11c54, i32* @r2, align 4
  store i32 %v3_11c50, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11c60 = load i32, i32* @r6, align 4
  %v1_11c60 = add i32 %v0_11c60, 4
  %v2_11c60 = inttoptr i32 %v1_11c60 to i32*
  %v3_11c60 = load i32, i32* %v2_11c60, align 4
  store i32 %v3_11c60, i32* @r0, align 4
  %v4_11c64 = call i32 @function_15590(i32 %v3_11c60, i32 %v3_11c50, i32 %v3_11c54, i32 16384)
  store i32 %v4_11c64, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11c74 = load i32, i32* @r6, align 4
  %v1_11c74 = add i32 %v0_11c74, 4
  %v2_11c74 = inttoptr i32 %v1_11c74 to i32*
  %v3_11c74 = load i32, i32* %v2_11c74, align 4
  store i32 %v3_11c74, i32* @r0, align 4
  %v4_11c78 = call i32 @function_15590(i32 %v3_11c74, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11c80 = call i32 @function_12510(i32 22)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_11c88 = load i32, i32* @r6, align 4
  %v2_11c88 = add i32 %v1_11c88, 12
  %v3_11c88 = inttoptr i32 %v2_11c88 to i32*
  store i32 7, i32* %v3_11c88, align 4
  br label %dec_label_pc_118e8

dec_label_pc_11c90:                               ; preds = %dec_label_pc_117b8
  %v1_11c90 = add i32 %v0_117b8, 24
  %v2_11c90 = inttoptr i32 %v1_11c90 to i32*
  %v3_11c90 = load i32, i32* %v2_11c90, align 4
  store i32 %v3_11c90, i32* %r2.global-to-local, align 4
  %v1_11c94 = add i32 %v3_11c90, -1
  store i32 %v1_11c94, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11c98 = icmp eq i32 %v1_11c94, 0
  store i1 %v2_11c98, i1* %cpsr_z.global-to-local, align 1
  %tmp358 = icmp slt i32 %v1_11c94, 1
  br i1 %tmp358, label %dec_label_pc_11738thread-pre-split.thread, label %dec_label_pc_11ca0

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11c90
  %v2_11ca0 = add i32 %v1_11c94, %v0_117b8
  store i32 %v2_11ca0, i32* %r3.global-to-local, align 4
  %v1_11ca4 = add i32 %v2_11ca0, 28
  %v2_11ca4 = inttoptr i32 %v1_11ca4 to i8*
  %v3_11ca4 = load i8, i8* %v2_11ca4, align 1
  %v4_11ca4 = zext i8 %v3_11ca4 to i32
  store i32 %v4_11ca4, i32* %r3.global-to-local, align 4
  %v2_11ca8 = icmp ugt i8 %v3_11ca4, 61
  store i1 %v2_11ca8, i1* %cpsr_c.global-to-local, align 1
  %v7_11ca8 = icmp eq i8 %v3_11ca4, 62
  store i1 %v7_11ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ca8, label %dec_label_pc_11d0c, label %bb359

bb359:                                            ; preds = %dec_label_pc_11ca0
  %v3_11cac = icmp ugt i8 %v3_11ca4, 57
  store i1 %v3_11cac, i1* %cpsr_c.global-to-local, align 1
  %v8_11cac = icmp eq i8 %v3_11ca4, 58
  store i1 %v8_11cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11cac, label %dec_label_pc_11d0c, label %dec_label_pc_11cb4

dec_label_pc_11cb4:                               ; preds = %bb359
  %v2_11cb4 = icmp ugt i8 %v3_11ca4, 35
  store i1 %v2_11cb4, i1* %cpsr_c.global-to-local, align 1
  %v7_11cb4 = icmp eq i8 %v3_11ca4, 36
  store i1 %v7_11cb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cb4, label %dec_label_pc_11d0c, label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cb4
  %v2_11cbc = icmp ugt i8 %v3_11ca4, 34
  store i1 %v2_11cbc, i1* %cpsr_c.global-to-local, align 1
  %v7_11cbc = icmp eq i8 %v3_11ca4, 35
  store i1 %v7_11cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cbc, label %dec_label_pc_11d0c, label %dec_label_pc_11cc4

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_11cbc
  %v2_11cc4 = icmp ugt i8 %v3_11ca4, 36
  store i1 %v2_11cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_11cc4 = icmp eq i8 %v3_11ca4, 37
  store i1 %v7_11cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cc4, label %dec_label_pc_11d0c, label %dec_label_pc_11cf4.preheader

dec_label_pc_11cf4.preheader:                     ; preds = %dec_label_pc_11cc4
  %v3_11cc8 = add i32 %v0_117b8, 28
  %v2_11ccc = add i32 %v3_11cc8, %v3_11c90
  store i32 %v2_11ccc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11cf4

dec_label_pc_11cd8:                               ; preds = %bb360
  %v2_11cd8 = icmp ugt i8 %v3_11cfc, 35
  store i1 %v2_11cd8, i1* %cpsr_c.global-to-local, align 1
  %v7_11cd8 = icmp eq i8 %v3_11cfc, 36
  store i1 %v7_11cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cd8, label %dec_label_pc_11d0c, label %dec_label_pc_11ce0

dec_label_pc_11ce0:                               ; preds = %dec_label_pc_11cd8
  %v2_11ce0 = icmp ugt i8 %v3_11cfc, 34
  store i1 %v2_11ce0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ce0 = icmp eq i8 %v3_11cfc, 35
  store i1 %v7_11ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ce0, label %dec_label_pc_11d0c, label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11ce0
  %v2_11ce8 = icmp ugt i8 %v3_11cfc, 36
  store i1 %v2_11ce8, i1* %cpsr_c.global-to-local, align 1
  %v7_11ce8 = icmp eq i8 %v3_11cfc, 37
  store i1 %v7_11ce8, i1* %cpsr_z.global-to-local, align 1
  %v1_11cec = add i32 %v0_11cec, -1
  store i32 %v1_11cec, i32* %r3.global-to-local, align 4
  br i1 %v7_11ce8, label %dec_label_pc_11d0c, label %dec_label_pc_11cf4

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11cf4.preheader, %dec_label_pc_11ce8
  %v0_11cec = phi i32 [ %v2_11ccc, %dec_label_pc_11cf4.preheader ], [ %v1_11cec, %dec_label_pc_11ce8 ]
  %v0_11cf4 = phi i32 [ %v1_11c94, %dec_label_pc_11cf4.preheader ], [ %v1_11cf4, %dec_label_pc_11ce8 ]
  %v1_11cf4 = add i32 %v0_11cf4, -1
  store i32 %v1_11cf4, i32* %r1.global-to-local, align 4
  %v2_11cf4 = icmp ne i32 %v0_11cf4, 0
  store i1 %v2_11cf4, i1* %cpsr_c.global-to-local, align 1
  %v7_11cf4 = icmp eq i32 %v0_11cf4, 1
  store i1 %v7_11cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cf4, label %dec_label_pc_11738thread-pre-split.thread477, label %dec_label_pc_11cfc

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cf4
  %v1_11cfc = add i32 %v0_11cec, -2
  %v2_11cfc = inttoptr i32 %v1_11cfc to i8*
  %v3_11cfc = load i8, i8* %v2_11cfc, align 1
  %v4_11cfc = zext i8 %v3_11cfc to i32
  store i32 %v4_11cfc, i32* %r2.global-to-local, align 4
  %v2_11d00 = icmp ugt i8 %v3_11cfc, 61
  store i1 %v2_11d00, i1* %cpsr_c.global-to-local, align 1
  %v7_11d00 = icmp eq i8 %v3_11cfc, 62
  store i1 %v7_11d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d00, label %dec_label_pc_11d0c, label %bb360

bb360:                                            ; preds = %dec_label_pc_11cfc
  %v3_11d04 = icmp ugt i8 %v3_11cfc, 57
  store i1 %v3_11d04, i1* %cpsr_c.global-to-local, align 1
  %v8_11d04 = icmp eq i8 %v3_11cfc, 58
  store i1 %v8_11d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d04, label %dec_label_pc_11d0c, label %dec_label_pc_11cd8

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11cfc, %bb360, %dec_label_pc_11ce8, %dec_label_pc_11ce0, %dec_label_pc_11cd8, %dec_label_pc_11cc4, %dec_label_pc_11ca0, %dec_label_pc_11cbc, %dec_label_pc_11cb4, %bb359
  %v0_11d10 = phi i32 [ %v1_11c94, %dec_label_pc_11cc4 ], [ %v1_11c94, %dec_label_pc_11ca0 ], [ %v1_11c94, %dec_label_pc_11cbc ], [ %v1_11c94, %dec_label_pc_11cb4 ], [ %v1_11c94, %bb359 ], [ %v1_11cf4, %dec_label_pc_11cd8 ], [ %v1_11cf4, %dec_label_pc_11ce0 ], [ %v1_11cf4, %dec_label_pc_11ce8 ], [ %v1_11cf4, %bb360 ], [ %v1_11cf4, %dec_label_pc_11cfc ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11d10 = add i32 %v0_11d10, 1
  store i32 %v1_11d10, i32* @r7, align 4
  %v1_11d14 = call i32 @function_125b0(i32 23)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_11d24 = call i32 @function_124ec(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_11d24, i32* %r0.global-to-local, align 4
  %v3_11d28 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11d28, i32* @r2, align 4
  store i32 %v3_11d24, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11d34 = load i32, i32* @r6, align 4
  %v1_11d34 = add i32 %v0_11d34, 4
  %v2_11d34 = inttoptr i32 %v1_11d34 to i32*
  %v3_11d34 = load i32, i32* %v2_11d34, align 4
  store i32 %v3_11d34, i32* @r0, align 4
  %v4_11d38 = call i32 @function_15590(i32 %v3_11d34, i32 %v3_11d24, i32 %v3_11d28, i32 16384)
  store i32 %v4_11d38, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11d48 = load i32, i32* @r6, align 4
  %v1_11d48 = add i32 %v0_11d48, 4
  %v2_11d48 = inttoptr i32 %v1_11d48 to i32*
  %v3_11d48 = load i32, i32* %v2_11d48, align 4
  store i32 %v3_11d48, i32* @r0, align 4
  %v4_11d4c = call i32 @function_15590(i32 %v3_11d48, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11d54 = call i32 @function_12510(i32 23)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11d5c = load i32, i32* @r6, align 4
  %v2_11d5c = add i32 %v1_11d5c, 12
  %v3_11d5c = inttoptr i32 %v2_11d5c to i32*
  store i32 9, i32* %v3_11d5c, align 4
  br label %dec_label_pc_118e8

dec_label_pc_11d64:                               ; preds = %dec_label_pc_117b8
  %v1_11d64 = add i32 %v0_117b8, 24
  %v2_11d64 = inttoptr i32 %v1_11d64 to i32*
  %v3_11d64 = load i32, i32* %v2_11d64, align 4
  store i32 %v3_11d64, i32* %r2.global-to-local, align 4
  %v1_11d68 = add i32 %v3_11d64, -1
  store i32 %v1_11d68, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11d6c = icmp eq i32 %v1_11d68, 0
  store i1 %v2_11d6c, i1* %cpsr_z.global-to-local, align 1
  %tmp361 = icmp slt i32 %v1_11d68, 1
  br i1 %tmp361, label %dec_label_pc_11738thread-pre-split.thread, label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d64
  %v2_11d74 = add i32 %v1_11d68, %v0_117b8
  store i32 %v2_11d74, i32* %r3.global-to-local, align 4
  %v1_11d78 = add i32 %v2_11d74, 28
  %v2_11d78 = inttoptr i32 %v1_11d78 to i8*
  %v3_11d78 = load i8, i8* %v2_11d78, align 1
  %v4_11d78 = zext i8 %v3_11d78 to i32
  store i32 %v4_11d78, i32* %r3.global-to-local, align 4
  %v2_11d7c = icmp ugt i8 %v3_11d78, 61
  store i1 %v2_11d7c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d7c = icmp eq i8 %v3_11d78, 62
  store i1 %v7_11d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d7c, label %dec_label_pc_11de0, label %bb362

bb362:                                            ; preds = %dec_label_pc_11d74
  %v3_11d80 = icmp ugt i8 %v3_11d78, 57
  store i1 %v3_11d80, i1* %cpsr_c.global-to-local, align 1
  %v8_11d80 = icmp eq i8 %v3_11d78, 58
  store i1 %v8_11d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d80, label %dec_label_pc_11de0, label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %bb362
  %v2_11d88 = icmp ugt i8 %v3_11d78, 35
  store i1 %v2_11d88, i1* %cpsr_c.global-to-local, align 1
  %v7_11d88 = icmp eq i8 %v3_11d78, 36
  store i1 %v7_11d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d88, label %dec_label_pc_11de0, label %dec_label_pc_11d90

dec_label_pc_11d90:                               ; preds = %dec_label_pc_11d88
  %v2_11d90 = icmp ugt i8 %v3_11d78, 34
  store i1 %v2_11d90, i1* %cpsr_c.global-to-local, align 1
  %v7_11d90 = icmp eq i8 %v3_11d78, 35
  store i1 %v7_11d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d90, label %dec_label_pc_11de0, label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d90
  %v2_11d98 = icmp ugt i8 %v3_11d78, 36
  store i1 %v2_11d98, i1* %cpsr_c.global-to-local, align 1
  %v7_11d98 = icmp eq i8 %v3_11d78, 37
  store i1 %v7_11d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d98, label %dec_label_pc_11de0, label %dec_label_pc_11dc8.preheader

dec_label_pc_11dc8.preheader:                     ; preds = %dec_label_pc_11d98
  %v3_11d9c = add i32 %v0_117b8, 28
  %v2_11da0 = add i32 %v3_11d9c, %v3_11d64
  store i32 %v2_11da0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11dc8

dec_label_pc_11dac:                               ; preds = %bb363
  %v2_11dac = icmp ugt i8 %v3_11dd0, 35
  store i1 %v2_11dac, i1* %cpsr_c.global-to-local, align 1
  %v7_11dac = icmp eq i8 %v3_11dd0, 36
  store i1 %v7_11dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11dac, label %dec_label_pc_11de0, label %dec_label_pc_11db4

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11dac
  %v2_11db4 = icmp ugt i8 %v3_11dd0, 34
  store i1 %v2_11db4, i1* %cpsr_c.global-to-local, align 1
  %v7_11db4 = icmp eq i8 %v3_11dd0, 35
  store i1 %v7_11db4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11db4, label %dec_label_pc_11de0, label %dec_label_pc_11dbc

dec_label_pc_11dbc:                               ; preds = %dec_label_pc_11db4
  %v2_11dbc = icmp ugt i8 %v3_11dd0, 36
  store i1 %v2_11dbc, i1* %cpsr_c.global-to-local, align 1
  %v7_11dbc = icmp eq i8 %v3_11dd0, 37
  store i1 %v7_11dbc, i1* %cpsr_z.global-to-local, align 1
  %v1_11dc0 = add i32 %v0_11dc0, -1
  store i32 %v1_11dc0, i32* %r3.global-to-local, align 4
  br i1 %v7_11dbc, label %dec_label_pc_11de0, label %dec_label_pc_11dc8

dec_label_pc_11dc8:                               ; preds = %dec_label_pc_11dc8.preheader, %dec_label_pc_11dbc
  %v0_11dc0 = phi i32 [ %v2_11da0, %dec_label_pc_11dc8.preheader ], [ %v1_11dc0, %dec_label_pc_11dbc ]
  %v0_11dc8 = phi i32 [ %v1_11d68, %dec_label_pc_11dc8.preheader ], [ %v1_11dc8, %dec_label_pc_11dbc ]
  %v1_11dc8 = add i32 %v0_11dc8, -1
  store i32 %v1_11dc8, i32* %r1.global-to-local, align 4
  %v2_11dc8 = icmp ne i32 %v0_11dc8, 0
  store i1 %v2_11dc8, i1* %cpsr_c.global-to-local, align 1
  %v7_11dc8 = icmp eq i32 %v0_11dc8, 1
  store i1 %v7_11dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11dc8, label %dec_label_pc_11738thread-pre-split.thread477, label %dec_label_pc_11dd0

dec_label_pc_11dd0:                               ; preds = %dec_label_pc_11dc8
  %v1_11dd0 = add i32 %v0_11dc0, -2
  %v2_11dd0 = inttoptr i32 %v1_11dd0 to i8*
  %v3_11dd0 = load i8, i8* %v2_11dd0, align 1
  %v4_11dd0 = zext i8 %v3_11dd0 to i32
  store i32 %v4_11dd0, i32* %r2.global-to-local, align 4
  %v2_11dd4 = icmp ugt i8 %v3_11dd0, 61
  store i1 %v2_11dd4, i1* %cpsr_c.global-to-local, align 1
  %v7_11dd4 = icmp eq i8 %v3_11dd0, 62
  store i1 %v7_11dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11dd4, label %dec_label_pc_11de0, label %bb363

bb363:                                            ; preds = %dec_label_pc_11dd0
  %v3_11dd8 = icmp ugt i8 %v3_11dd0, 57
  store i1 %v3_11dd8, i1* %cpsr_c.global-to-local, align 1
  %v8_11dd8 = icmp eq i8 %v3_11dd0, 58
  store i1 %v8_11dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11dd8, label %dec_label_pc_11de0, label %dec_label_pc_11dac

dec_label_pc_11de0:                               ; preds = %dec_label_pc_11dd0, %bb363, %dec_label_pc_11dbc, %dec_label_pc_11db4, %dec_label_pc_11dac, %dec_label_pc_11d98, %dec_label_pc_11d74, %dec_label_pc_11d90, %dec_label_pc_11d88, %bb362
  %v0_11de4 = phi i32 [ %v1_11d68, %dec_label_pc_11d98 ], [ %v1_11d68, %dec_label_pc_11d74 ], [ %v1_11d68, %dec_label_pc_11d90 ], [ %v1_11d68, %dec_label_pc_11d88 ], [ %v1_11d68, %bb362 ], [ %v1_11dc8, %dec_label_pc_11dac ], [ %v1_11dc8, %dec_label_pc_11db4 ], [ %v1_11dc8, %dec_label_pc_11dbc ], [ %v1_11dc8, %bb363 ], [ %v1_11dc8, %dec_label_pc_11dd0 ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11de4 = add i32 %v0_11de4, 1
  store i32 %v1_11de4, i32* @r7, align 4
  %v1_11de8 = call i32 @function_125b0(i32 21)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_11df8 = call i32 @function_124ec(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_11df8, i32* %r0.global-to-local, align 4
  %v3_11dfc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11dfc, i32* @r2, align 4
  store i32 %v3_11df8, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11e08 = load i32, i32* @r6, align 4
  %v1_11e08 = add i32 %v0_11e08, 4
  %v2_11e08 = inttoptr i32 %v1_11e08 to i32*
  %v3_11e08 = load i32, i32* %v2_11e08, align 4
  store i32 %v3_11e08, i32* @r0, align 4
  %v4_11e0c = call i32 @function_15590(i32 %v3_11e08, i32 %v3_11df8, i32 %v3_11dfc, i32 16384)
  store i32 %v4_11e0c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11e1c = load i32, i32* @r6, align 4
  %v1_11e1c = add i32 %v0_11e1c, 4
  %v2_11e1c = inttoptr i32 %v1_11e1c to i32*
  %v3_11e1c = load i32, i32* %v2_11e1c, align 4
  store i32 %v3_11e1c, i32* @r0, align 4
  %v4_11e20 = call i32 @function_15590(i32 %v3_11e1c, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11e28 = call i32 @function_12510(i32 21)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11e30 = load i32, i32* @r6, align 4
  %v2_11e30 = add i32 %v1_11e30, 12
  %v3_11e30 = inttoptr i32 %v2_11e30 to i32*
  store i32 6, i32* %v3_11e30, align 4
  br label %dec_label_pc_118e8

dec_label_pc_11e38:                               ; preds = %dec_label_pc_117b8
  %v1_11e38 = add i32 %v0_117b8, 24
  %v2_11e38 = inttoptr i32 %v1_11e38 to i32*
  %v3_11e38 = load i32, i32* %v2_11e38, align 4
  store i32 %v3_11e38, i32* %r1.global-to-local, align 4
  %v1_11e3c = add i32 %v3_11e38, -1
  store i32 %v1_11e3c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11e40 = icmp eq i32 %v1_11e3c, 0
  store i1 %v2_11e40, i1* %cpsr_z.global-to-local, align 1
  %tmp364 = icmp slt i32 %v1_11e3c, 1
  br i1 %tmp364, label %dec_label_pc_11eb4, label %dec_label_pc_11e48

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e38
  %v2_11e48 = add i32 %v1_11e3c, %v0_117b8
  store i32 %v2_11e48, i32* %r3.global-to-local, align 4
  %v1_11e4c = add i32 %v2_11e48, 28
  %v2_11e4c = inttoptr i32 %v1_11e4c to i8*
  %v3_11e4c = load i8, i8* %v2_11e4c, align 1
  %v4_11e4c = zext i8 %v3_11e4c to i32
  store i32 %v4_11e4c, i32* %r3.global-to-local, align 4
  %v2_11e50 = icmp ugt i8 %v3_11e4c, 61
  store i1 %v2_11e50, i1* %cpsr_c.global-to-local, align 1
  %v7_11e50 = icmp eq i8 %v3_11e4c, 62
  store i1 %v7_11e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e50, label %dec_label_pc_120bc, label %bb365

bb365:                                            ; preds = %dec_label_pc_11e48
  %v3_11e54 = icmp ugt i8 %v3_11e4c, 57
  store i1 %v3_11e54, i1* %cpsr_c.global-to-local, align 1
  %v8_11e54 = icmp eq i8 %v3_11e4c, 58
  store i1 %v8_11e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11e54, label %dec_label_pc_120bc, label %dec_label_pc_11e5c

dec_label_pc_11e5c:                               ; preds = %bb365
  %v2_11e5c = icmp ugt i8 %v3_11e4c, 35
  store i1 %v2_11e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_11e5c = icmp eq i8 %v3_11e4c, 36
  store i1 %v7_11e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e5c, label %dec_label_pc_120bc, label %dec_label_pc_11e64

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e5c
  %v2_11e64 = icmp ugt i8 %v3_11e4c, 34
  store i1 %v2_11e64, i1* %cpsr_c.global-to-local, align 1
  %v7_11e64 = icmp eq i8 %v3_11e4c, 35
  store i1 %v7_11e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e64, label %dec_label_pc_120bc, label %dec_label_pc_11e6c

dec_label_pc_11e6c:                               ; preds = %dec_label_pc_11e64
  %v2_11e6c = icmp ugt i8 %v3_11e4c, 36
  store i1 %v2_11e6c, i1* %cpsr_c.global-to-local, align 1
  %v7_11e6c = icmp eq i8 %v3_11e4c, 37
  store i1 %v7_11e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e6c, label %dec_label_pc_120bc, label %dec_label_pc_11eac.preheader

dec_label_pc_11eac.preheader:                     ; preds = %dec_label_pc_11e6c
  %v3_11e70 = add i32 %v0_117b8, 28
  %v2_11e74 = add i32 %v3_11e70, %v3_11e38
  store i32 %v2_11e74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11eac

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11eac
  %v1_11e80 = add i32 %v0_11ea4, -2
  %v2_11e80 = inttoptr i32 %v1_11e80 to i8*
  %v3_11e80 = load i8, i8* %v2_11e80, align 1
  %v4_11e80 = zext i8 %v3_11e80 to i32
  store i32 %v4_11e80, i32* %r2.global-to-local, align 4
  %v2_11e84 = icmp ugt i8 %v3_11e80, 61
  store i1 %v2_11e84, i1* %cpsr_c.global-to-local, align 1
  %v7_11e84 = icmp eq i8 %v3_11e80, 62
  store i1 %v7_11e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e84, label %dec_label_pc_120bc, label %bb366

bb366:                                            ; preds = %dec_label_pc_11e80
  %v3_11e88 = icmp ugt i8 %v3_11e80, 57
  store i1 %v3_11e88, i1* %cpsr_c.global-to-local, align 1
  %v8_11e88 = icmp eq i8 %v3_11e80, 58
  store i1 %v8_11e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11e88, label %dec_label_pc_120bc, label %dec_label_pc_11e90

dec_label_pc_11e90:                               ; preds = %bb366
  %v2_11e90 = icmp ugt i8 %v3_11e80, 35
  store i1 %v2_11e90, i1* %cpsr_c.global-to-local, align 1
  %v7_11e90 = icmp eq i8 %v3_11e80, 36
  store i1 %v7_11e90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e90, label %dec_label_pc_120bc, label %dec_label_pc_11e98

dec_label_pc_11e98:                               ; preds = %dec_label_pc_11e90
  %v2_11e98 = icmp ugt i8 %v3_11e80, 34
  store i1 %v2_11e98, i1* %cpsr_c.global-to-local, align 1
  %v7_11e98 = icmp eq i8 %v3_11e80, 35
  store i1 %v7_11e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e98, label %dec_label_pc_120bc, label %dec_label_pc_11ea0

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11e98
  %v2_11ea0 = icmp ugt i8 %v3_11e80, 36
  store i1 %v2_11ea0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ea0 = icmp eq i8 %v3_11e80, 37
  store i1 %v7_11ea0, i1* %cpsr_z.global-to-local, align 1
  %v1_11ea4 = add i32 %v0_11ea4, -1
  store i32 %v1_11ea4, i32* %r3.global-to-local, align 4
  br i1 %v7_11ea0, label %dec_label_pc_120bc, label %dec_label_pc_11eac

dec_label_pc_11eac:                               ; preds = %dec_label_pc_11eac.preheader, %dec_label_pc_11ea0
  %v0_11ea4 = phi i32 [ %v2_11e74, %dec_label_pc_11eac.preheader ], [ %v1_11ea4, %dec_label_pc_11ea0 ]
  %v0_11eac = phi i32 [ %v1_11e3c, %dec_label_pc_11eac.preheader ], [ %v1_11eac, %dec_label_pc_11ea0 ]
  %v1_11eac = add i32 %v0_11eac, -1
  store i32 %v1_11eac, i32* %r0.global-to-local, align 4
  %v2_11eac = icmp ne i32 %v0_11eac, 0
  store i1 %v2_11eac, i1* %cpsr_c.global-to-local, align 1
  %v7_11eac = icmp eq i32 %v0_11eac, 1
  store i1 %v7_11eac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11eac, label %dec_label_pc_11eb4, label %dec_label_pc_11e80

dec_label_pc_11eb4:                               ; preds = %dec_label_pc_11eac, %dec_label_pc_11e38
  %v0_11eb4 = load i32, i32* @fp, align 4
  store i32 %v0_11eb4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a530.330 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_11ec0 = call i32 @function_12ef8(i32 %v0_11eb4, i32 %v3_11e38, i32 ptrtoint ([5 x i8]* @global_var_1a530.330 to i32), i32 4)
  store i32 %v5_11ec0, i32* %r0.global-to-local, align 4
  %v2_11ec4 = icmp eq i32 %v5_11ec0, -1
  store i1 %v2_11ec4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ec4 = icmp eq i32 %v5_11ec0, -1
  store i1 %v7_11ec4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11ec0, i32* @r7, align 4
  br i1 %v7_11ec4, label %dec_label_pc_12498, label %dec_label_pc_11ed0

dec_label_pc_11ed0:                               ; preds = %dec_label_pc_12498, %dec_label_pc_11eb4
  %v0_11ed0 = phi i32 [ %v5_124a8, %dec_label_pc_12498 ], [ %v5_11ec0, %dec_label_pc_11eb4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11ed0 = icmp eq i32 %v0_11ed0, 0
  store i1 %v2_11ed0, i1* %cpsr_z.global-to-local, align 1
  %v5_11ed4 = icmp sgt i32 %v0_11ed0, 0
  br i1 %v5_11ed4, label %dec_label_pc_11ed0.dec_label_pc_120c0_crit_edge, label %dec_label_pc_11ed8

dec_label_pc_11ed0.dec_label_pc_120c0_crit_edge:  ; preds = %dec_label_pc_11ed0
  %v0_120c0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_120c0

dec_label_pc_11ed8:                               ; preds = %dec_label_pc_12038, %bb374, %dec_label_pc_11f6c, %dec_label_pc_11ed0, %dec_label_pc_12180, %dec_label_pc_120fc, %dec_label_pc_120c0, %dec_label_pc_12208
  %v0_11ed8 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11ed8 = icmp eq i32 %v0_11ed8, 0
  store i1 %v2_11ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ed8, label %dec_label_pc_11734.loopexit, label %dec_label_pc_118e8

dec_label_pc_11ee4:                               ; preds = %dec_label_pc_117b8
  %v1_11ee4 = add i32 %v0_117b8, 24
  %v2_11ee4 = inttoptr i32 %v1_11ee4 to i32*
  %v3_11ee4 = load i32, i32* %v2_11ee4, align 4
  store i32 %v3_11ee4, i32* %r1.global-to-local, align 4
  %v1_11ee8 = add i32 %v3_11ee4, -1
  store i32 %v1_11ee8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11eec = icmp eq i32 %v1_11ee8, 0
  store i1 %v2_11eec, i1* %cpsr_z.global-to-local, align 1
  %tmp367 = icmp slt i32 %v1_11ee8, 1
  br i1 %tmp367, label %dec_label_pc_11f50, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11ee4
  %v2_11ef4 = add i32 %v1_11ee8, %v0_117b8
  store i32 %v2_11ef4, i32* %r3.global-to-local, align 4
  %v1_11ef8 = add i32 %v2_11ef4, 28
  %v2_11ef8 = inttoptr i32 %v1_11ef8 to i8*
  %v3_11ef8 = load i8, i8* %v2_11ef8, align 1
  %v4_11ef8 = zext i8 %v3_11ef8 to i32
  store i32 %v4_11ef8, i32* %r3.global-to-local, align 4
  %v2_11efc = icmp ugt i8 %v3_11ef8, 61
  store i1 %v2_11efc, i1* %cpsr_c.global-to-local, align 1
  %v7_11efc = icmp eq i8 %v3_11ef8, 62
  store i1 %v7_11efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11efc, label %dec_label_pc_120f8, label %bb368

bb368:                                            ; preds = %dec_label_pc_11ef4
  %v3_11f00 = icmp ugt i8 %v3_11ef8, 57
  store i1 %v3_11f00, i1* %cpsr_c.global-to-local, align 1
  %v8_11f00 = icmp eq i8 %v3_11ef8, 58
  store i1 %v8_11f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11f00, label %dec_label_pc_120f8, label %dec_label_pc_11f08

dec_label_pc_11f08:                               ; preds = %bb368
  %v2_11f08 = icmp ugt i8 %v3_11ef8, 35
  store i1 %v2_11f08, i1* %cpsr_c.global-to-local, align 1
  %v7_11f08 = icmp eq i8 %v3_11ef8, 36
  store i1 %v7_11f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f08, label %dec_label_pc_120f8, label %dec_label_pc_11f10

dec_label_pc_11f10:                               ; preds = %dec_label_pc_11f08
  %v2_11f10 = icmp ugt i8 %v3_11ef8, 34
  store i1 %v2_11f10, i1* %cpsr_c.global-to-local, align 1
  %v7_11f10 = icmp eq i8 %v3_11ef8, 35
  store i1 %v7_11f10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f10, label %dec_label_pc_120f8, label %dec_label_pc_11f48.preheader

dec_label_pc_11f48.preheader:                     ; preds = %dec_label_pc_11f10
  %v3_11f14 = add i32 %v0_117b8, 28
  %v2_11f18 = add i32 %v3_11f14, %v3_11ee4
  store i32 %v2_11f18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11f48

dec_label_pc_11f24:                               ; preds = %dec_label_pc_11f48
  %v1_11f24 = add i32 %v0_11f40, -2
  %v2_11f24 = inttoptr i32 %v1_11f24 to i8*
  %v3_11f24 = load i8, i8* %v2_11f24, align 1
  %v4_11f24 = zext i8 %v3_11f24 to i32
  store i32 %v4_11f24, i32* %r2.global-to-local, align 4
  %v2_11f28 = icmp ugt i8 %v3_11f24, 61
  store i1 %v2_11f28, i1* %cpsr_c.global-to-local, align 1
  %v7_11f28 = icmp eq i8 %v3_11f24, 62
  store i1 %v7_11f28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f28, label %dec_label_pc_120f8, label %bb369

bb369:                                            ; preds = %dec_label_pc_11f24
  %v3_11f2c = icmp ugt i8 %v3_11f24, 57
  store i1 %v3_11f2c, i1* %cpsr_c.global-to-local, align 1
  %v8_11f2c = icmp eq i8 %v3_11f24, 58
  store i1 %v8_11f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11f2c, label %dec_label_pc_120f8, label %dec_label_pc_11f34

dec_label_pc_11f34:                               ; preds = %bb369
  %v2_11f34 = icmp ugt i8 %v3_11f24, 35
  store i1 %v2_11f34, i1* %cpsr_c.global-to-local, align 1
  %v7_11f34 = icmp eq i8 %v3_11f24, 36
  store i1 %v7_11f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f34, label %dec_label_pc_120f8, label %dec_label_pc_11f3c

dec_label_pc_11f3c:                               ; preds = %dec_label_pc_11f34
  %v2_11f3c = icmp ugt i8 %v3_11f24, 34
  store i1 %v2_11f3c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f3c = icmp eq i8 %v3_11f24, 35
  store i1 %v7_11f3c, i1* %cpsr_z.global-to-local, align 1
  %v1_11f40 = add i32 %v0_11f40, -1
  store i32 %v1_11f40, i32* %r3.global-to-local, align 4
  br i1 %v7_11f3c, label %dec_label_pc_120f8, label %dec_label_pc_11f48

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f48.preheader, %dec_label_pc_11f3c
  %v0_11f40 = phi i32 [ %v2_11f18, %dec_label_pc_11f48.preheader ], [ %v1_11f40, %dec_label_pc_11f3c ]
  %v0_11f48 = phi i32 [ %v1_11ee8, %dec_label_pc_11f48.preheader ], [ %v1_11f48, %dec_label_pc_11f3c ]
  %v1_11f48 = add i32 %v0_11f48, -1
  store i32 %v1_11f48, i32* %r0.global-to-local, align 4
  %v2_11f48 = icmp ne i32 %v0_11f48, 0
  store i1 %v2_11f48, i1* %cpsr_c.global-to-local, align 1
  %v7_11f48 = icmp eq i32 %v0_11f48, 1
  store i1 %v7_11f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f48, label %dec_label_pc_11f50, label %dec_label_pc_11f24

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f48, %dec_label_pc_11ee4
  %v0_11f50 = load i32, i32* @fp, align 4
  store i32 %v0_11f50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a538.332 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_11f5c = call i32 @function_12ef8(i32 %v0_11f50, i32 %v3_11ee4, i32 ptrtoint ([8 x i8]* @global_var_1a538.332 to i32), i32 7)
  store i32 %v5_11f5c, i32* %r0.global-to-local, align 4
  %v2_11f60 = icmp eq i32 %v5_11f5c, -1
  store i1 %v2_11f60, i1* %cpsr_c.global-to-local, align 1
  %v7_11f60 = icmp eq i32 %v5_11f5c, -1
  store i1 %v7_11f60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11f5c, i32* @r7, align 4
  br i1 %v7_11f60, label %dec_label_pc_11734.loopexit, label %dec_label_pc_11f6c

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f50
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11f6c = icmp eq i32 %v5_11f5c, 0
  store i1 %v2_11f6c, i1* %cpsr_z.global-to-local, align 1
  %tmp370 = icmp slt i32 %v5_11f5c, 1
  br i1 %tmp370, label %dec_label_pc_11ed8, label %dec_label_pc_11f6c.dec_label_pc_120fc_crit_edge

dec_label_pc_11f6c.dec_label_pc_120fc_crit_edge:  ; preds = %dec_label_pc_11f6c
  %v0_120fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_120fc

dec_label_pc_11f78:                               ; preds = %dec_label_pc_117b8
  %v1_11f78 = add i32 %v0_117b8, 24
  %v2_11f78 = inttoptr i32 %v1_11f78 to i32*
  %v3_11f78 = load i32, i32* %v2_11f78, align 4
  store i32 %v3_11f78, i32* %r2.global-to-local, align 4
  %v0_11f7c = load i32, i32* @fp, align 4
  store i32 %v0_11f7c, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_11f84123 = icmp eq i32 %v3_11f78, 0
  store i1 %v9_11f84123, i1* %cpsr_z.global-to-local, align 1
  %v7_11f88124 = icmp sgt i32 %v3_11f78, 0
  br i1 %v7_11f88124, label %dec_label_pc_11f8c.preheader, label %dec_label_pc_12038

dec_label_pc_11f84.loopexit:                      ; preds = %dec_label_pc_11fa8
  %v2_11fb0 = add i32 %v1_11fb0, 2
  store i32 %v2_11fb0, i32* @r4, align 4
  %v2_11fb4 = add i32 %v1_11fb4, 2
  store i32 %v2_11fb4, i32* @r7, align 4
  %v3_11f84 = icmp uge i32 %v0_11f84, %v2_11fb4
  store i1 %v3_11f84, i1* %cpsr_c.global-to-local, align 1
  %v9_11f84 = icmp eq i32 %v0_11f84, %v2_11fb4
  store i1 %v9_11f84, i1* %cpsr_z.global-to-local, align 1
  %v7_11f88 = icmp sgt i32 %v0_11f84, %v2_11fb4
  br i1 %v7_11f88, label %dec_label_pc_11f8c.preheader, label %dec_label_pc_12038

dec_label_pc_11f8c.preheader:                     ; preds = %dec_label_pc_11f78, %dec_label_pc_11f84.loopexit
  %v6_12040207 = phi i32 [ %v6_12040208, %dec_label_pc_11f84.loopexit ], [ %v0_117b8, %dec_label_pc_11f78 ]
  %v1_11fb4190 = phi i32 [ %v2_11fb4, %dec_label_pc_11f84.loopexit ], [ 0, %dec_label_pc_11f78 ]
  %v1_11f98188 = phi i32 [ %v0_11f84, %dec_label_pc_11f84.loopexit ], [ %v3_11f78, %dec_label_pc_11f78 ]
  %v0_11f8c186 = phi i32 [ %v2_11fb0, %dec_label_pc_11f84.loopexit ], [ %v0_11f7c, %dec_label_pc_11f78 ]
  br label %dec_label_pc_11f8c

dec_label_pc_11f8c:                               ; preds = %dec_label_pc_11f8c.preheader, %dec_label_pc_1201c
  %v6_12040208 = phi i32 [ %v6_12040207, %dec_label_pc_11f8c.preheader ], [ %v0_12024, %dec_label_pc_1201c ]
  %v1_11fb4 = phi i32 [ %v1_11fb4190, %dec_label_pc_11f8c.preheader ], [ %v1_12028, %dec_label_pc_1201c ]
  %v0_11f84 = phi i32 [ %v1_11f98188, %dec_label_pc_11f8c.preheader ], [ %v3_12024, %dec_label_pc_1201c ]
  %v1_11fb0 = phi i32 [ %v0_11f8c186, %dec_label_pc_11f8c.preheader ], [ %v1_12030, %dec_label_pc_1201c ]
  %v1_11f8c = inttoptr i32 %v1_11fb0 to i8*
  %v2_11f8c = load i8, i8* %v1_11f8c, align 1
  %v3_11f8c = zext i8 %v2_11f8c to i32
  store i32 %v3_11f8c, i32* %r3.global-to-local, align 4
  %v2_11f90 = icmp eq i8 %v2_11f8c, -1
  store i1 %v2_11f90, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f90, label %dec_label_pc_11f98, label %dec_label_pc_12038

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f8c
  %v0_11f98 = load i32, i32* @fp, align 4
  %v2_11f98 = add i32 %v0_11f98, %v0_11f84
  store i32 %v2_11f98, i32* %r1.global-to-local, align 4
  %v1_11f9c = add i32 %v1_11fb0, 1
  store i32 %v1_11f9c, i32* @r5, align 4
  %v3_11fa0 = icmp uge i32 %v2_11f98, %v1_11f9c
  store i1 %v3_11fa0, i1* %cpsr_c.global-to-local, align 1
  %v9_11fa0 = icmp eq i32 %v2_11f98, %v1_11f9c
  store i1 %v9_11fa0, i1* %cpsr_z.global-to-local, align 1
  %v2_11fa4 = xor i1 %v3_11fa0, true
  %v3_11fa4 = or i1 %v9_11fa0, %v2_11fa4
  br i1 %v3_11fa4, label %dec_label_pc_12038, label %dec_label_pc_11fa8

dec_label_pc_11fa8:                               ; preds = %dec_label_pc_11f98
  %v2_11fa8 = inttoptr i32 %v1_11f9c to i8*
  %v3_11fa8 = load i8, i8* %v2_11fa8, align 1
  %v4_11fa8 = zext i8 %v3_11fa8 to i32
  store i32 %v4_11fa8, i32* @r3, align 4
  %v2_11fac = icmp eq i8 %v3_11fa8, -1
  store i1 %v2_11fac, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11fac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fac, label %dec_label_pc_11f84.loopexit, label %dec_label_pc_11fbc

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11fa8
  %v2_11fbc = icmp ugt i8 %v3_11fa8, -4
  store i1 %v2_11fbc, i1* %cpsr_c.global-to-local, align 1
  %v7_11fbc = icmp eq i8 %v3_11fa8, -3
  store i1 %v7_11fbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fbc, label %dec_label_pc_12048, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fbc
  %v1_11fc4 = add i32 %v1_11fb0, 2
  store i32 %v1_11fc4, i32* %r3.global-to-local, align 4
  %v3_11fc8 = icmp uge i32 %v2_11f98, %v1_11fc4
  store i1 %v3_11fc8, i1* %cpsr_c.global-to-local, align 1
  %v9_11fc8 = icmp eq i32 %v2_11f98, %v1_11fc4
  store i1 %v9_11fc8, i1* %cpsr_z.global-to-local, align 1
  %v2_11fcc = xor i1 %v3_11fc8, true
  %v3_11fcc = or i1 %v9_11fc8, %v2_11fcc
  br i1 %v3_11fcc, label %dec_label_pc_12038, label %dec_label_pc_11fd0

dec_label_pc_11fd0:                               ; preds = %dec_label_pc_120ac, %bb375, %.thread97, %dec_label_pc_11fc4
  %v0_11fd0 = load i32, i32* @r5, align 4
  %v1_11fd0 = inttoptr i32 %v0_11fd0 to i8*
  %v2_11fd0 = load i8, i8* %v1_11fd0, align 1
  %v3_11fd0 = zext i8 %v2_11fd0 to i32
  store i32 %v3_11fd0, i32* %r3.global-to-local, align 4
  %v2_11fd4 = icmp ugt i8 %v2_11fd0, -4
  store i1 %v2_11fd4, i1* %cpsr_c.global-to-local, align 1
  %v7_11fd4 = icmp eq i8 %v2_11fd0, -3
  store i1 %v7_11fd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fd4, label %.thread89, label %dec_label_pc_11fe4

.thread89:                                        ; preds = %dec_label_pc_11fd0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_11fd0, align 1
  %v0_11fe0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11fe0.pr.pr, label %.thread92, label %.thread89.dec_label_pc_11fe4thread-pre-split_crit_edge

.thread89.dec_label_pc_11fe4thread-pre-split_crit_edge: ; preds = %.thread89
  %v0_11fe4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11fd0, %.thread89.dec_label_pc_11fe4thread-pre-split_crit_edge
  %v0_11fe4.pr = phi i32 [ %v0_11fe4.pr.pre, %.thread89.dec_label_pc_11fe4thread-pre-split_crit_edge ], [ %v3_11fd0, %dec_label_pc_11fd0 ]
  %v2_11fe4 = icmp ugt i32 %v0_11fe4.pr, 250
  store i1 %v2_11fe4, i1* %cpsr_c.global-to-local, align 1
  %v7_11fe4 = icmp eq i32 %v0_11fe4.pr, 251
  store i1 %v7_11fe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fe4, label %bb371, label %.thread92

bb371:                                            ; preds = %dec_label_pc_11fe4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11fec = load i32, i32* @r5, align 4
  %v4_11fec = inttoptr i32 %v3_11fec to i8*
  store i8 -3, i8* %v4_11fec, align 1
  br label %.thread92

.thread92:                                        ; preds = %dec_label_pc_11fe4, %.thread89, %bb371
  %v0_11ff0 = load i32, i32* @r4, align 4
  %v1_11ff0 = add i32 %v0_11ff0, 2
  %v2_11ff0 = inttoptr i32 %v1_11ff0 to i8*
  %v3_11ff0 = load i8, i8* %v2_11ff0, align 1
  %v4_11ff0 = zext i8 %v3_11ff0 to i32
  store i32 %v4_11ff0, i32* %r3.global-to-local, align 4
  %v2_11ff4 = icmp ugt i8 %v3_11ff0, -4
  store i1 %v2_11ff4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ff4 = icmp eq i8 %v3_11ff0, -3
  store i1 %v7_11ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ff4, label %.thread93, label %dec_label_pc_12004

.thread93:                                        ; preds = %.thread92
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_11ff0, align 1
  %v0_12000.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12000.pr.pr, label %.thread96, label %.thread93.dec_label_pc_12004thread-pre-split_crit_edge

.thread93.dec_label_pc_12004thread-pre-split_crit_edge: ; preds = %.thread93
  %v0_12004.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12004

dec_label_pc_12004:                               ; preds = %.thread92, %.thread93.dec_label_pc_12004thread-pre-split_crit_edge
  %v0_12004.pr = phi i32 [ %v0_12004.pr.pre, %.thread93.dec_label_pc_12004thread-pre-split_crit_edge ], [ %v4_11ff0, %.thread92 ]
  %v2_12004 = icmp ugt i32 %v0_12004.pr, 250
  store i1 %v2_12004, i1* %cpsr_c.global-to-local, align 1
  %v7_12004 = icmp eq i32 %v0_12004.pr, 251
  store i1 %v7_12004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12004, label %bb372, label %.thread96

bb372:                                            ; preds = %dec_label_pc_12004
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_1200c = load i32, i32* @r4, align 4
  %v4_1200c = add i32 %v3_1200c, 2
  %v5_1200c = inttoptr i32 %v4_1200c to i8*
  store i8 -3, i8* %v5_1200c, align 1
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_12004, %.thread93, %bb372
  %v0_12010 = load i32, i32* @r6, align 4
  %v1_12010 = add i32 %v0_12010, 4
  %v2_12010 = inttoptr i32 %v1_12010 to i32*
  %v3_12010 = load i32, i32* %v2_12010, align 4
  store i32 %v3_12010, i32* @r0, align 4
  %v0_12014 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1201c

dec_label_pc_1201c:                               ; preds = %dec_label_pc_12258, %.thread96
  %v0_12020 = phi i32 [ %v3_1226c, %dec_label_pc_12258 ], [ %v3_12010, %.thread96 ]
  %storemerge3 = phi i32 [ %v2_12060, %dec_label_pc_12258 ], [ %v0_12014, %.thread96 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_12258 ], [ 3, %.thread96 ]
  store i32 %storemerge3, i32* @r1, align 4
  store i32 %storemerge2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12020 = call i32 @function_15590(i32 %v0_12020, i32 %storemerge3, i32 %storemerge2, i32 16384)
  store i32 %v4_12020, i32* %r0.global-to-local, align 4
  %v0_12024 = load i32, i32* @r6, align 4
  %v1_12024 = add i32 %v0_12024, 24
  %v2_12024 = inttoptr i32 %v1_12024 to i32*
  %v3_12024 = load i32, i32* %v2_12024, align 4
  store i32 %v3_12024, i32* %r2.global-to-local, align 4
  %v0_12028 = load i32, i32* @r7, align 4
  %v1_12028 = add i32 %v0_12028, 3
  store i32 %v1_12028, i32* @r7, align 4
  %v3_1202c = icmp uge i32 %v3_12024, %v1_12028
  store i1 %v3_1202c, i1* %cpsr_c.global-to-local, align 1
  %v9_1202c = icmp eq i32 %v3_12024, %v1_12028
  store i1 %v9_1202c, i1* %cpsr_z.global-to-local, align 1
  %v0_12030 = load i32, i32* @r4, align 4
  %v1_12030 = add i32 %v0_12030, 3
  store i32 %v1_12030, i32* @r4, align 4
  %v8_12034 = icmp sgt i32 %v3_12024, %v1_12028
  br i1 %v8_12034, label %dec_label_pc_11f8c, label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_11f84.loopexit, %dec_label_pc_11f8c, %dec_label_pc_1201c, %dec_label_pc_11fc4, %dec_label_pc_11f98, %dec_label_pc_11f78, %dec_label_pc_12048.dec_label_pc_12038.loopexit_crit_edge
  %v6_12040 = phi i32 [ %v0_12078, %dec_label_pc_12048.dec_label_pc_12038.loopexit_crit_edge ], [ %v0_117b8, %dec_label_pc_11f78 ], [ %v6_12040208, %dec_label_pc_11f8c ], [ %v0_12024, %dec_label_pc_1201c ], [ %v6_12040208, %dec_label_pc_11fc4 ], [ %v6_12040208, %dec_label_pc_11f98 ], [ %v6_12040208, %dec_label_pc_11f84.loopexit ]
  %v0_12038 = phi i32 [ %v0_12038.pre.pre, %dec_label_pc_12048.dec_label_pc_12038.loopexit_crit_edge ], [ 0, %dec_label_pc_11f78 ], [ %v1_11fb4, %dec_label_pc_11f8c ], [ %v1_12028, %dec_label_pc_1201c ], [ %v1_11fb4, %dec_label_pc_11fc4 ], [ %v1_11fb4, %dec_label_pc_11f98 ], [ %v2_11fb4, %dec_label_pc_11f84.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12038 = icmp eq i32 %v0_12038, 0
  store i1 %v2_12038, i1* %cpsr_z.global-to-local, align 1
  %tmp373 = icmp slt i32 %v0_12038, 1
  br i1 %tmp373, label %dec_label_pc_11ed8, label %bb374

bb374:                                            ; preds = %dec_label_pc_12038
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_12040 = add i32 %v6_12040, 12
  %v8_12040 = inttoptr i32 %v7_12040 to i32*
  store i32 3, i32* %v8_12040, align 4
  br label %dec_label_pc_11ed8

dec_label_pc_12048:                               ; preds = %dec_label_pc_11fbc
  store i32 %v2_1204c, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1a549.334 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_1204c, i32* %r0.global-to-local, align 4
  store i32 %v2_12060, i32* @sl, align 4
  %v4_12064 = call i32 @function_15c0c(i16* %v3_12064, i32 ptrtoint (i32* @global_var_1a549.334 to i32), i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_12060, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a540.336 to i32), i32* %r1.global-to-local, align 4
  %v4_12074 = call i32 @function_15c0c(i16* %v3_12074, i32 ptrtoint (i32* @global_var_1a540.336 to i32), i32 9)
  store i32 %v4_12074, i32* %r0.global-to-local, align 4
  %v0_12078 = load i32, i32* @r6, align 4
  %v1_12078 = add i32 %v0_12078, 24
  %v2_12078 = inttoptr i32 %v1_12078 to i32*
  %v3_12078 = load i32, i32* %v2_12078, align 4
  %v0_1207c = load i32, i32* @r4, align 4
  %v1_1207c = add i32 %v0_1207c, 2
  store i32 %v1_1207c, i32* %r2.global-to-local, align 4
  %v0_12080 = load i32, i32* @fp, align 4
  %v2_12080 = add i32 %v0_12080, %v3_12078
  store i32 %v2_12080, i32* %r3.global-to-local, align 4
  %v3_12084 = icmp uge i32 %v2_12080, %v1_1207c
  store i1 %v3_12084, i1* %cpsr_c.global-to-local, align 1
  %v9_12084 = icmp eq i32 %v2_12080, %v1_1207c
  store i1 %v9_12084, i1* %cpsr_z.global-to-local, align 1
  %v2_12088 = xor i1 %v3_12084, true
  %v3_12088 = or i1 %v9_12084, %v2_12088
  br i1 %v3_12088, label %dec_label_pc_12048.dec_label_pc_12038.loopexit_crit_edge, label %dec_label_pc_1208c

dec_label_pc_12048.dec_label_pc_12038.loopexit_crit_edge: ; preds = %dec_label_pc_12048
  %v0_12038.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12038

dec_label_pc_1208c:                               ; preds = %dec_label_pc_12048
  %v2_1208c = inttoptr i32 %v1_1207c to i8*
  %v3_1208c = load i8, i8* %v2_1208c, align 1
  %v4_1208c = zext i8 %v3_1208c to i32
  store i32 %v4_1208c, i32* %r3.global-to-local, align 4
  %v2_12090 = icmp ugt i8 %v3_1208c, 30
  store i1 %v2_12090, i1* %cpsr_c.global-to-local, align 1
  %v7_12090 = icmp eq i8 %v3_1208c, 31
  store i1 %v7_12090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12090, label %dec_label_pc_12258, label %dec_label_pc_12098

dec_label_pc_12098:                               ; preds = %dec_label_pc_1208c
  %v1_12098 = inttoptr i32 %v0_1207c to i8*
  %v2_12098 = load i8, i8* %v1_12098, align 1
  %v3_12098 = zext i8 %v2_12098 to i32
  store i32 %v3_12098, i32* %r3.global-to-local, align 4
  %v2_1209c = icmp ugt i8 %v2_12098, -4
  store i1 %v2_1209c, i1* %cpsr_c.global-to-local, align 1
  %v7_1209c = icmp eq i8 %v2_12098, -3
  store i1 %v7_1209c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1209c, label %.thread97, label %dec_label_pc_120ac

.thread97:                                        ; preds = %dec_label_pc_12098
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_12098, align 1
  %v0_120a8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120a8.pr.pr, label %dec_label_pc_11fd0, label %.thread97.dec_label_pc_120acthread-pre-split_crit_edge

.thread97.dec_label_pc_120acthread-pre-split_crit_edge: ; preds = %.thread97
  %v0_120ac.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %dec_label_pc_12098, %.thread97.dec_label_pc_120acthread-pre-split_crit_edge
  %v0_120ac.pr = phi i32 [ %v0_120ac.pr.pre, %.thread97.dec_label_pc_120acthread-pre-split_crit_edge ], [ %v3_12098, %dec_label_pc_12098 ]
  %v2_120ac = icmp ugt i32 %v0_120ac.pr, 250
  store i1 %v2_120ac, i1* %cpsr_c.global-to-local, align 1
  %v7_120ac = icmp eq i32 %v0_120ac.pr, 251
  store i1 %v7_120ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_120ac, label %bb375, label %dec_label_pc_11fd0

bb375:                                            ; preds = %dec_label_pc_120ac
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_120b4 = load i32, i32* @r4, align 4
  %v4_120b4 = inttoptr i32 %v3_120b4 to i8*
  store i8 -3, i8* %v4_120b4, align 1
  br label %dec_label_pc_11fd0

dec_label_pc_120bc:                               ; preds = %dec_label_pc_11e80, %dec_label_pc_11ea0, %dec_label_pc_11e98, %dec_label_pc_11e90, %bb366, %dec_label_pc_11e6c, %dec_label_pc_11e48, %dec_label_pc_11e64, %dec_label_pc_11e5c, %bb365
  %v0_120bc = phi i32 [ %v1_11e3c, %dec_label_pc_11e6c ], [ %v1_11e3c, %dec_label_pc_11e48 ], [ %v1_11e3c, %dec_label_pc_11e64 ], [ %v1_11e3c, %dec_label_pc_11e5c ], [ %v1_11e3c, %bb365 ], [ %v1_11eac, %bb366 ], [ %v1_11eac, %dec_label_pc_11e90 ], [ %v1_11eac, %dec_label_pc_11e98 ], [ %v1_11eac, %dec_label_pc_11ea0 ], [ %v1_11eac, %dec_label_pc_11e80 ]
  %v1_120bc = add i32 %v0_120bc, 1
  store i32 %v1_120bc, i32* @r7, align 4
  br label %dec_label_pc_120c0

dec_label_pc_120c0:                               ; preds = %dec_label_pc_11ed0.dec_label_pc_120c0_crit_edge, %dec_label_pc_120bc
  %v0_120c0 = phi i32 [ %v0_120c0.pre, %dec_label_pc_11ed0.dec_label_pc_120c0_crit_edge ], [ %v0_117b8, %dec_label_pc_120bc ]
  %v1_120c0 = inttoptr i32 %v0_120c0 to i32*
  %v2_120c0 = load i32, i32* %v1_120c0, align 4
  store i32 %v2_120c0, i32* %r3.global-to-local, align 4
  %v1_120c4 = add i32 %v0_120c0, 4
  %v2_120c4 = inttoptr i32 %v1_120c4 to i32*
  %v3_120c4 = load i32, i32* %v2_120c4, align 4
  store i32 %v3_120c4, i32* @r0, align 4
  %v1_120c8 = add i32 %v2_120c0, 12
  %v2_120c8 = inttoptr i32 %v1_120c8 to i8*
  %v3_120c8 = load i8, i8* %v2_120c8, align 1
  %v4_120c8 = zext i8 %v3_120c8 to i32
  store i32 %v4_120c8, i32* @r2, align 4
  %v1_120cc = inttoptr i32 %v2_120c0 to i32*
  %v2_120cc = load i32, i32* %v1_120cc, align 4
  store i32 %v2_120cc, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_120d4 = call i32 @function_15590(i32 %v3_120c4, i32 %v2_120cc, i32 %v4_120c8, i32 16384)
  store i32 %v4_120d4, i32* %r0.global-to-local, align 4
  %v0_120d8 = load i32, i32* @r6, align 4
  %v1_120d8 = add i32 %v0_120d8, 4
  %v2_120d8 = inttoptr i32 %v1_120d8 to i32*
  %v3_120d8 = load i32, i32* %v2_120d8, align 4
  store i32 %v3_120d8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_120e8 = call i32 @function_15590(i32 %v3_120d8, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_120f0 = load i32, i32* @r6, align 4
  %v2_120f0 = add i32 %v1_120f0, 12
  %v3_120f0 = inttoptr i32 %v2_120f0 to i32*
  store i32 4, i32* %v3_120f0, align 4
  br label %dec_label_pc_11ed8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_11f24, %dec_label_pc_11f3c, %dec_label_pc_11f34, %bb369, %dec_label_pc_11f10, %dec_label_pc_11ef4, %dec_label_pc_11f08, %bb368
  %v0_120f8 = phi i32 [ %v1_11ee8, %dec_label_pc_11f10 ], [ %v1_11ee8, %dec_label_pc_11ef4 ], [ %v1_11ee8, %dec_label_pc_11f08 ], [ %v1_11ee8, %bb368 ], [ %v1_11f48, %bb369 ], [ %v1_11f48, %dec_label_pc_11f34 ], [ %v1_11f48, %dec_label_pc_11f3c ], [ %v1_11f48, %dec_label_pc_11f24 ]
  %v1_120f8 = add i32 %v0_120f8, 1
  store i32 %v1_120f8, i32* @r7, align 4
  br label %dec_label_pc_120fc

dec_label_pc_120fc:                               ; preds = %dec_label_pc_11f6c.dec_label_pc_120fc_crit_edge, %dec_label_pc_120f8
  %v0_120fc = phi i32 [ %v0_120fc.pre, %dec_label_pc_11f6c.dec_label_pc_120fc_crit_edge ], [ %v0_117b8, %dec_label_pc_120f8 ]
  %v1_120fc = inttoptr i32 %v0_120fc to i32*
  %v2_120fc = load i32, i32* %v1_120fc, align 4
  store i32 %v2_120fc, i32* %r3.global-to-local, align 4
  %v1_12100 = add i32 %v0_120fc, 4
  %v2_12100 = inttoptr i32 %v1_12100 to i32*
  %v3_12100 = load i32, i32* %v2_12100, align 4
  store i32 %v3_12100, i32* @r0, align 4
  %v1_12104 = add i32 %v2_120fc, 13
  %v2_12104 = inttoptr i32 %v1_12104 to i8*
  %v3_12104 = load i8, i8* %v2_12104, align 1
  %v4_12104 = zext i8 %v3_12104 to i32
  store i32 %v4_12104, i32* @r2, align 4
  %v1_12108 = add i32 %v2_120fc, 4
  %v2_12108 = inttoptr i32 %v1_12108 to i32*
  %v3_12108 = load i32, i32* %v2_12108, align 4
  store i32 %v3_12108, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12110 = call i32 @function_15590(i32 %v3_12100, i32 %v3_12108, i32 %v4_12104, i32 16384)
  store i32 %v4_12110, i32* %r0.global-to-local, align 4
  %v0_12114 = load i32, i32* @r6, align 4
  %v1_12114 = add i32 %v0_12114, 4
  %v2_12114 = inttoptr i32 %v1_12114 to i32*
  %v3_12114 = load i32, i32* %v2_12114, align 4
  store i32 %v3_12114, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12124 = call i32 @function_15590(i32 %v3_12114, i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1212c = load i32, i32* @r6, align 4
  %v2_1212c = add i32 %v1_1212c, 12
  %v3_1212c = inttoptr i32 %v2_1212c to i32*
  store i32 5, i32* %v3_1212c, align 4
  br label %dec_label_pc_11ed8

dec_label_pc_12134:                               ; preds = %dec_label_pc_11870
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12140 = call i32 @function_125b0(i32 25)
  store i32 %v2_11df0, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_12150 = call i32 @function_124ec(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_12150, i32* %r0.global-to-local, align 4
  %v3_12154 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_12150, i32* %r2.global-to-local, align 4
  %v1_1215c = add i32 %v3_12154, -1
  store i32 %v1_1215c, i32* %r3.global-to-local, align 4
  %v0_12160 = load i32, i32* @r6, align 4
  %v1_12160 = add i32 %v0_12160, 24
  %v2_12160 = inttoptr i32 %v1_12160 to i32*
  %v3_12160 = load i32, i32* %v2_12160, align 4
  store i32 %v3_12160, i32* %r1.global-to-local, align 4
  %v0_12164 = load i32, i32* @fp, align 4
  store i32 %v0_12164, i32* %r0.global-to-local, align 4
  %v4_12168 = call i32 @function_12ef8(i32 %v0_12164, i32 %v3_12160, i32 %v3_12150, i32 %v1_1215c)
  store i32 %v4_12168, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12174 = call i32 @function_12510(i32 25)
  store i32 %v1_12174, i32* %r0.global-to-local, align 4
  %v0_12178 = load i32, i32* @r7, align 4
  %v2_12178 = icmp eq i32 %v0_12178, -1
  store i1 %v2_12178, i1* %cpsr_c.global-to-local, align 1
  %v7_12178 = icmp eq i32 %v0_12178, -1
  store i1 %v7_12178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12178, label %dec_label_pc_11734.loopexit, label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_12134
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12180 = icmp eq i32 %v0_12178, 0
  store i1 %v2_12180, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v0_12178, 1
  br i1 %tmp376, label %dec_label_pc_11ed8, label %dec_label_pc_12188

dec_label_pc_12188:                               ; preds = %dec_label_pc_12180
  %v0_12188 = load i32, i32* @r6, align 4
  %v1_12188 = add i32 %v0_12188, 20
  %v2_12188 = inttoptr i32 %v1_12188 to i16*
  %v3_12188 = load i16, i16* %v2_12188, align 2
  %v4_12188 = zext i16 %v3_12188 to i32
  store i32 %v4_12188, i32* %r3.global-to-local, align 4
  %v1_1218c = add i32 %v0_12188, 16
  %v2_1218c = inttoptr i32 %v1_1218c to i32*
  %v3_1218c = load i32, i32* %v2_1218c, align 4
  store i32 %v3_1218c, i32* %r2.global-to-local, align 4
  store i32 %v2_12190, i32* %ip.global-to-local, align 4
  store i32 %v4_12188, i32* %stack_var_-42, align 4
  store i32 %v3_1218c, i32* %stack_var_-60, align 4
  %v1_1219c = inttoptr i32 %v0_12188 to i32*
  %v2_1219c = load i32, i32* %v1_1219c, align 4
  store i32 %v2_1219c, i32* @sb, align 4
  %v0_121a0 = call i32 @function_15768()
  store i32 %v0_121a0, i32* %r0.global-to-local, align 4
  %v7_121a4 = icmp eq i32 %v0_121a0, -1
  %.387 = zext i1 %v7_121a4 to i32
  store i32 %.387, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_121b0 = icmp eq i32 %v0_121a0, 0
  store i1 %v2_121b0, i1* %cpsr_z.global-to-local, align 1
  %tmp379 = icmp slt i32 %v0_121a0, 1
  br i1 %tmp379, label %bb380, label %.thread103

.thread103:                                       ; preds = %dec_label_pc_12188
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12208

bb380:                                            ; preds = %dec_label_pc_12188
  store i32 %.387, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_121bc = icmp eq i1 %v7_121a4, false
  store i1 %v2_121bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_121bc, label %dec_label_pc_121c4, label %dec_label_pc_12208

dec_label_pc_121c4:                               ; preds = %bb380
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_121d0 = call i32 @function_15670(i32 2, i32 1, i32 0)
  store i32 %v3_121d0, i32* %r0.global-to-local, align 4
  %v2_121d4 = icmp eq i32 %v3_121d0, -1
  store i1 %v2_121d4, i1* %cpsr_c.global-to-local, align 1
  %v7_121d4 = icmp eq i32 %v3_121d0, -1
  store i1 %v7_121d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_121d0, i32* @r8, align 4
  br i1 %v7_121d4, label %dec_label_pc_12490, label %dec_label_pc_121e0

dec_label_pc_121e0:                               ; preds = %dec_label_pc_121c4
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_121e4 = call i32 @function_125b0(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_121ec = call i32 @function_125b0(i32 19)
  %v0_121f0 = load i32, i32* @sl, align 4
  store i32 %v0_121f0, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_121f8 = inttoptr i32 %v0_121f0 to i32*
  %v3_121f8 = call i32 @function_124ec(i32 18, i32* %v2_121f8)
  store i32 %v3_121f8, i32* %r0.global-to-local, align 4
  %v1_121fc = call i32 @function_10390(i32 %v3_121f8)
  store i32 %v1_121fc, i32* %r0.global-to-local, align 4
  store i32 %v1_121fc, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_12200 = icmp eq i32 %v1_121fc, 0
  store i1 %v3_12200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12200, label %dec_label_pc_12208, label %dec_label_pc_12370

dec_label_pc_12208:                               ; preds = %.thread103, %dec_label_pc_121e0, %bb380
  %v0_12208 = load i32, i32* @r6, align 4
  %v1_12208 = add i32 %v0_12208, 4
  %v2_12208 = inttoptr i32 %v1_12208 to i32*
  %v3_12208 = load i32, i32* %v2_12208, align 4
  store i32 %v3_12208, i32* @r0, align 4
  %v1_1220c = call i32 @function_1663c(i32 %v3_12208)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_12218 = load i32, i32* @r6, align 4
  %v2_12218 = add i32 %v1_12218, 4
  %v3_12218 = inttoptr i32 %v2_12218 to i32*
  store i32 -1, i32* %v3_12218, align 4
  %v0_1221c = load i32, i32* %r0.global-to-local, align 4
  %v1_1221c = load i32, i32* @r6, align 4
  %v2_1221c = add i32 %v1_1221c, 12
  %v3_1221c = inttoptr i32 %v2_1221c to i32*
  store i32 %v0_1221c, i32* %v3_1221c, align 4
  br label %dec_label_pc_11ed8

dec_label_pc_12224:                               ; preds = %dec_label_pc_11750
  br i1 %v2_11778, label %dec_label_pc_117f0, label %dec_label_pc_12228

dec_label_pc_12228:                               ; preds = %dec_label_pc_12224
  %v3_12228 = icmp eq i32 %v4_11774, -1
  store i1 %v3_12228, i1* %cpsr_c.global-to-local, align 1
  %v8_12228 = icmp eq i32 %v4_11774, -1
  store i1 %v8_12228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12228, label %dec_label_pc_117fc, label %dec_label_pc_117a0

dec_label_pc_12234:                               ; preds = %dec_label_pc_11740
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_1223c = add i32 %v0_12234, 92
  store i32 %v1_1223c, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_12244 = inttoptr i32 %.pre to i8*
  %v4_12244 = call i32 @function_15f18(i8* %v3_12244, i32 %v1_1223c, i32 192)
  store i32 %v4_12244, i32* %r0.global-to-local, align 4
  %v0_12248 = load i32, i32* @r6, align 4
  %v1_12248 = add i32 %v0_12248, 24
  %v2_12248 = inttoptr i32 %v1_12248 to i32*
  %v3_12248 = load i32, i32* %v2_12248, align 4
  %v1_1224c = add i32 %v3_12248, -64
  store i32 %v1_1224c, i32* %r3.global-to-local, align 4
  store i32 %v1_1224c, i32* %v2_12248, align 4
  br label %dec_label_pc_11750

dec_label_pc_12258:                               ; preds = %dec_label_pc_1208c
  store i32 %v2_1204c, i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_12264 = add i32 %v0_12078, 4
  %v2_12264 = inttoptr i32 %v1_12264 to i32*
  %v3_12264 = load i32, i32* %v2_12264, align 4
  store i32 %v3_12264, i32* @r0, align 4
  %v4_12268 = call i32 @function_15590(i32 %v3_12264, i32 %v2_1204c, i32 3, i32 16384)
  store i32 %v4_12268, i32* %r0.global-to-local, align 4
  %v0_1226c = load i32, i32* @r6, align 4
  %v1_1226c = add i32 %v0_1226c, 4
  %v2_1226c = inttoptr i32 %v1_1226c to i32*
  %v3_1226c = load i32, i32* %v2_1226c, align 4
  store i32 %v3_1226c, i32* @r0, align 4
  br label %dec_label_pc_1201c

dec_label_pc_1227c:                               ; preds = %dec_label_pc_118a8
  %v0_1227c = load i32, i32* @r6, align 4
  store i32 %v0_1227c, i32* @r0, align 4
  %v0_12280 = call i32 @function_108dc()
  store i32 %v0_12280, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118e4

dec_label_pc_12288:                               ; preds = %dec_label_pc_116f8
  store i32 4, i32* @r2, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_123f8, i32* %r3.global-to-local, align 4
  store i32 %v2_11df0, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_122b0 = call i32 @function_15320(i32 %v3_116ec, i32 1, i32 4, i32 %v2_123f8, i32 %v2_11df0)
  %v3_122b4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_122b4, i32* %r3.global-to-local, align 4
  %v2_122b8 = or i32 %v3_122b4, %v5_122b0
  store i32 %v2_122b8, i32* %r0.global-to-local, align 4
  %v4_122b8 = icmp eq i32 %v2_122b8, 0
  store i1 %v4_122b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_122b8, label %dec_label_pc_122c0, label %dec_label_pc_12354

dec_label_pc_122c0:                               ; preds = %dec_label_pc_12288
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_122c4 = load i32, i32* @r6, align 4
  %v2_122c4 = add i32 %v1_122c4, 12
  %v3_122c4 = inttoptr i32 %v2_122c4 to i32*
  store i32 2, i32* %v3_122c4, align 4
  %v0_122c8 = call i32 @function_1008c()
  store i32 %v0_122c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32* %r3.global-to-local, align 4
  %v2_122d0 = load i16, i16* bitcast (i16** @global_var_230e4.204 to i16*), align 4
  %v3_122d0 = zext i16 %v2_122d0 to i32
  store i32 %v3_122d0, i32* %r1.global-to-local, align 4
  %v3_122d4 = call i32 @function_13538(i32 %v0_122c8, i32 %v3_122d0)
  store i32 %v3_122d4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230b4.200 to i32), i32* %r3.global-to-local, align 4
  %v2_122dc = load i32, i32* @global_var_230b4.200, align 4
  store i32 %v2_122dc, i32* %ip.global-to-local, align 4
  %v1_122e4 = load i32, i32* @r4, align 4
  %v9_122e4 = icmp eq i32 %v2_122dc, %v1_122e4
  store i1 %v9_122e4, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_122d0, i32* %r1.global-to-local, align 4
  %v7_122ec = icmp sgt i32 %v2_122dc, %v1_122e4
  br i1 %v7_122ec, label %dec_label_pc_122f0, label %dec_label_pc_12330

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122c0
  %v2_122f4 = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_122f4, i32* %r3.global-to-local, align 4
  store i32 %v1_122e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12310

dec_label_pc_12300:                               ; preds = %dec_label_pc_12320, %dec_label_pc_12310
  %v1_12300 = add i32 %v0_12300, 1
  store i32 %v1_12300, i32* %r2.global-to-local, align 4
  %v9_12304 = icmp eq i32 %v1_12300, %v2_122dc
  %v1_12308 = add i32 %v0_12308, 16
  store i32 %v1_12308, i32* %r3.global-to-local, align 4
  br i1 %v9_12304, label %dec_label_pc_12330.loopexit, label %dec_label_pc_12310

dec_label_pc_12310:                               ; preds = %dec_label_pc_12300, %dec_label_pc_122f0
  %v0_12300 = phi i32 [ %v1_12300, %dec_label_pc_12300 ], [ %v1_122e4, %dec_label_pc_122f0 ]
  %v0_12308 = phi i32 [ %v1_12308, %dec_label_pc_12300 ], [ %v2_122f4, %dec_label_pc_122f0 ]
  store i32 %v0_12308, i32* %r0.global-to-local, align 4
  %v1_12314 = add i32 %v0_12308, 8
  %v2_12314 = inttoptr i32 %v1_12314 to i16*
  %v3_12314 = load i16, i16* %v2_12314, align 2
  %v4_12314 = zext i16 %v3_12314 to i32
  store i32 %v4_12314, i32* %r3.global-to-local, align 4
  %tmp381 = icmp ugt i16 %v3_12314, %v2_122d0
  br i1 %tmp381, label %dec_label_pc_12300, label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_12310
  %v1_12320 = add i32 %v0_12308, 10
  %v2_12320 = inttoptr i32 %v1_12320 to i16*
  %v3_12320 = load i16, i16* %v2_12320, align 2
  %v4_12320 = zext i16 %v3_12320 to i32
  store i32 %v4_12320, i32* %r3.global-to-local, align 4
  %v3_12324 = icmp uge i16 %v3_12320, %v2_122d0
  %v9_12324 = icmp eq i16 %v3_12320, %v2_122d0
  %v2_12328 = xor i1 %v3_12324, true
  %v3_12328 = or i1 %v9_12324, %v2_12328
  br i1 %v3_12328, label %dec_label_pc_12300, label %dec_label_pc_12334.loopexit

dec_label_pc_12330.loopexit:                      ; preds = %dec_label_pc_12300
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %dec_label_pc_12330.loopexit, %dec_label_pc_122c0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12334

dec_label_pc_12334.loopexit:                      ; preds = %dec_label_pc_12320
  store i1 %v3_12324, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12334

dec_label_pc_12334:                               ; preds = %dec_label_pc_12334.loopexit, %dec_label_pc_12330
  %v0_12348 = phi i32 [ %v0_12308, %dec_label_pc_12334.loopexit ], [ 0, %dec_label_pc_12330 ]
  %v0_12334 = load i32, i32* @r6, align 4
  %v1_12334 = add i32 %v0_12334, 4
  %v2_12334 = inttoptr i32 %v1_12334 to i32*
  %v3_12334 = load i32, i32* %v2_12334, align 4
  %v3_12338 = udiv i32 %v3_12334, 32
  store i32 %v3_12338, i32* %r2.global-to-local, align 4
  %v1_1233c = urem i32 %v3_12334, 32
  store i32 %v1_1233c, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_12340 = mul nuw nsw i32 %v3_12338, 4
  store i32 %v3_12340, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_12348 = inttoptr i32 %v0_12334 to i32*
  store i32 %v0_12348, i32* %v2_12348, align 4
  %v0_1234c = load i32, i32* %r3.global-to-local, align 4
  %v1_1234c = load i32, i32* @r6, align 4
  %v2_1234c = add i32 %v1_1234c, 24
  %v3_1234c = inttoptr i32 %v2_1234c to i32*
  store i32 %v0_1234c, i32* %v3_1234c, align 4
  %v0_11720.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_11728.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1171c

dec_label_pc_12354:                               ; preds = %dec_label_pc_12288
  %v0_12354 = load i32, i32* @r6, align 4
  %v1_12354 = add i32 %v0_12354, 4
  %v2_12354 = inttoptr i32 %v1_12354 to i32*
  %v3_12354 = load i32, i32* %v2_12354, align 4
  store i32 %v3_12354, i32* @r0, align 4
  %v1_12358 = call i32 @function_1663c(i32 %v3_12354)
  store i32 %v1_12358, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_12360 = load i32, i32* @r4, align 4
  %v1_12360 = load i32, i32* @r6, align 4
  %v2_12360 = add i32 %v1_12360, 12
  %v3_12360 = inttoptr i32 %v2_12360 to i32*
  store i32 %v0_12360, i32* %v3_12360, align 4
  %v0_12364 = load i32, i32* %r3.global-to-local, align 4
  %v1_12364 = load i32, i32* @r6, align 4
  %v2_12364 = add i32 %v1_12364, 4
  %v3_12364 = inttoptr i32 %v2_12364 to i32*
  store i32 %v0_12364, i32* %v3_12364, align 4
  %v0_12368 = load i32, i32* @r4, align 4
  %v1_12368 = trunc i32 %v0_12368 to i8
  %v2_12368 = load i32, i32* @r6, align 4
  %v3_12368 = add i32 %v2_12368, 284
  %v4_12368 = inttoptr i32 %v3_12368 to i8*
  store i8 %v1_12368, i8* %v4_12368, align 1
  br label %dec_label_pc_11858

dec_label_pc_12370:                               ; preds = %dec_label_pc_121e0
  store i32 %v2_12190, i32* @lr, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_1237c = add i32 %v1_121fc, 4
  %v2_1237c = inttoptr i32 %v1_1237c to i32*
  %v3_1237c = load i32, i32* %v2_1237c, align 4
  store i32 %v3_1237c, i32* @r4, align 4
  %v0_12380 = call i32 @function_1008c()
  store i32 %v0_12380, i32* %r0.global-to-local, align 4
  %v0_12384 = load i32, i32* @r5, align 4
  %v1_12384 = inttoptr i32 %v0_12384 to i8*
  %v2_12384 = load i8, i8* %v1_12384, align 1
  %v3_12384 = zext i8 %v2_12384 to i32
  store i32 %v3_12384, i32* %r1.global-to-local, align 4
  %v2_12388 = call i32 @function_13538(i32 %v0_12380, i32 %v3_12384)
  store i32 %v2_12388, i32* %r0.global-to-local, align 4
  %v0_1238c = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_1238c = mul nuw nsw i32 %v3_12384, 4
  %v5_1238c = add i32 %v0_1238c, %v4_1238c
  %v6_1238c = inttoptr i32 %v5_1238c to i32*
  %v7_1238c = load i32, i32* %v6_1238c, align 4
  store i32 %v7_1238c, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_12394 = load i32, i32* @sl, align 4
  store i32 %v0_12394, i32* %r1.global-to-local, align 4
  %v2_1239c = inttoptr i32 %v0_12394 to i32*
  %v3_1239c = call i32 @function_124ec(i32 19, i32* %v2_1239c)
  store i32 %v2_12190, i32* %r1.global-to-local, align 4
  %v0_123ac = load i32, i32* @r5, align 4
  store i32 %v0_123ac, i32* %r0.global-to-local, align 4
  %v1_123b0 = call i32 @function_10368(i32 %v0_123ac)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_123b8 = call i32 @function_12510(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_123c0 = call i32 @function_12510(i32 19)
  %v0_123c8 = load i32, i32* @r8, align 4
  store i32 %v0_123c8, i32* %r0.global-to-local, align 4
  store i32 %v2_123cc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_123d4 = call i32 @function_152b4(i32 %v0_123c8, i32 %v2_123cc, i32 16)
  store i32 %v3_123d4, i32* %r0.global-to-local, align 4
  %v3_123d8 = icmp eq i32 %v3_123d4, -1
  store i1 %v3_123d8, i1* %cpsr_c.global-to-local, align 1
  %v8_123d8 = icmp eq i32 %v3_123d4, -1
  store i1 %v8_123d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_123d8, label %dec_label_pc_123e0, label %dec_label_pc_123f0

dec_label_pc_123e0:                               ; preds = %dec_label_pc_12370
  %v0_123e0 = load i32, i32* @r8, align 4
  store i32 %v0_123e0, i32* @r0, align 4
  %v1_123e4 = call i32 @function_1663c(i32 %v0_123e0)
  %v0_123e8 = load i32, i32* @sl, align 4
  store i32 %v0_123e8, i32* %r0.global-to-local, align 4
  %v1_123ec = call i32 @function_13a00(i32 %v0_123e8)
  store i32 %v1_123ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_123f0

dec_label_pc_123f0:                               ; preds = %dec_label_pc_12370, %dec_label_pc_123e0
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_123f8, i32* @r1, align 4
  %v0_123fc = load i32, i32* @r8, align 4
  store i32 %v0_123fc, i32* @r0, align 4
  %v0_12400 = load i32, i32* @sl, align 4
  store i32 %v0_12400, i32* %stack_var_-56, align 4
  %v5_12404 = call i32 @function_15590(i32 %v0_123fc, i32 %v2_123f8, i32 1, i32 16384)
  store i32 %v2_11df0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12418 = load i32, i32* @r8, align 4
  store i32 %v0_12418, i32* @r0, align 4
  %v4_1241c = call i32 @function_15590(i32 %v0_12418, i32 %v2_11df0, i32 4, i32 16384)
  store i32 %v2_12424, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12430 = load i32, i32* @r8, align 4
  store i32 %v0_12430, i32* @r0, align 4
  %v4_12434 = call i32 @function_15590(i32 %v0_12430, i32 %v2_12424, i32 2, i32 16384)
  %v0_12438 = load i32, i32* @sb, align 4
  %v1_12438 = add i32 %v0_12438, 12
  store i32 %v1_12438, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12444 = load i32, i32* @r8, align 4
  store i32 %v0_12444, i32* @r0, align 4
  %v4_12448 = call i32 @function_15590(i32 %v0_12444, i32 %v1_12438, i32 1, i32 16384)
  store i32 %v4_12448, i32* %r0.global-to-local, align 4
  %v0_1244c = load i32, i32* @sb, align 4
  %v1_1244c = inttoptr i32 %v0_1244c to i32*
  %v2_1244c = load i32, i32* %v1_1244c, align 4
  store i32 %v2_1244c, i32* @r1, align 4
  %v1_12450 = add i32 %v0_1244c, 12
  %v2_12450 = inttoptr i32 %v1_12450 to i8*
  %v3_12450 = load i8, i8* %v2_12450, align 1
  %v4_12450 = zext i8 %v3_12450 to i32
  store i32 %v4_12450, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12458 = load i32, i32* @r8, align 4
  store i32 %v0_12458, i32* @r0, align 4
  %v4_1245c = call i32 @function_15590(i32 %v0_12458, i32 %v2_1244c, i32 %v4_12450, i32 16384)
  %v0_12460 = load i32, i32* @sb, align 4
  %v1_12460 = add i32 %v0_12460, 13
  store i32 %v1_12460, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1246c = load i32, i32* @r8, align 4
  store i32 %v0_1246c, i32* @r0, align 4
  %v4_12470 = call i32 @function_15590(i32 %v0_1246c, i32 %v1_12460, i32 1, i32 16384)
  %v0_12474 = load i32, i32* @r8, align 4
  store i32 %v0_12474, i32* @r0, align 4
  %v0_12478 = load i32, i32* @sb, align 4
  %v1_12478 = add i32 %v0_12478, 13
  %v2_12478 = inttoptr i32 %v1_12478 to i8*
  %v3_12478 = load i8, i8* %v2_12478, align 1
  %v4_12478 = zext i8 %v3_12478 to i32
  store i32 %v4_12478, i32* @r2, align 4
  %v1_1247c = add i32 %v0_12478, 4
  %v2_1247c = inttoptr i32 %v1_1247c to i32*
  %v3_1247c = load i32, i32* %v2_1247c, align 4
  store i32 %v3_1247c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12484 = call i32 @function_15590(i32 %v0_12474, i32 %v3_1247c, i32 %v4_12478, i32 16384)
  %v0_12488 = load i32, i32* @r8, align 4
  store i32 %v0_12488, i32* @r0, align 4
  %v1_1248c = call i32 @function_1663c(i32 %v0_12488)
  store i32 %v1_1248c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12490

dec_label_pc_12490:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_123f0
  %v0_12490 = load i32, i32* @sl, align 4
  store i32 %v0_12490, i32* %r0.global-to-local, align 4
  %v1_12494 = call i32 @function_13a00(i32 %v0_12490)
  store i32 %v1_12494, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12498

dec_label_pc_12498:                               ; preds = %dec_label_pc_11eb4, %dec_label_pc_12490
  %v0_12498 = load i32, i32* @fp, align 4
  store i32 %v0_12498, i32* %r0.global-to-local, align 4
  %v0_1249c = load i32, i32* @r6, align 4
  %v1_1249c = add i32 %v0_1249c, 24
  %v2_1249c = inttoptr i32 %v1_1249c to i32*
  %v3_1249c = load i32, i32* %v2_1249c, align 4
  store i32 %v3_1249c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a528.341 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_124a8 = call i32 @function_12ef8(i32 %v0_12498, i32 %v3_1249c, i32 ptrtoint ([6 x i8]* @global_var_1a528.341 to i32), i32 5)
  store i32 %v5_124a8, i32* %r0.global-to-local, align 4
  %v3_124ac = icmp eq i32 %v5_124a8, -1
  store i1 %v3_124ac, i1* %cpsr_c.global-to-local, align 1
  %v8_124ac = icmp eq i32 %v5_124a8, -1
  store i1 %v8_124ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_124a8, i32* @r7, align 4
  br i1 %v3_124ac, label %dec_label_pc_11734.loopexit, label %dec_label_pc_11ed0

dec_label_pc_124bc:                               ; preds = %dec_label_pc_1157c
  store i32 %v3_124bc, i32* %r0.global-to-local, align 4
  %v3_124c0 = udiv i32 %v3_124bc, 32
  %v3_124c4 = mul nuw nsw i32 %v3_124c0, 4
  store i32 %v2_124c8, i32* @lr, align 4
  %v2_124cc = add i32 %v3_124c4, %v2_124c8
  store i32 %v2_124cc, i32* %r3.global-to-local, align 4
  %v1_124d0 = add i32 %v2_124cc, -312
  %v2_124d0 = inttoptr i32 %v1_124d0 to i32*
  %v3_124d0 = load i32, i32* %v2_124d0, align 4
  %v1_124d4 = urem i32 %v3_124bc, 32
  store i32 %v1_124d4, i32* %r1.global-to-local, align 4
  %v7_124d8 = shl i32 1, %v1_124d4
  %v8_124d8 = or i32 %v3_124d0, %v7_124d8
  store i32 %v8_124d8, i32* %r2.global-to-local, align 4
  %v1_124dc = load i32, i32* @r5, align 4
  %v3_124dc = icmp uge i32 %v3_124bc, %v1_124dc
  store i1 %v3_124dc, i1* %cpsr_c.global-to-local, align 1
  %v9_124dc = icmp eq i32 %v3_124bc, %v1_124dc
  store i1 %v9_124dc, i1* %cpsr_z.global-to-local, align 1
  %v7_124e0 = icmp sgt i32 %v3_124bc, %v1_124dc
  br i1 %v7_124e0, label %bb382, label %bb383

bb382:                                            ; preds = %dec_label_pc_124bc
  store i32 %v3_124bc, i32* @r5, align 4
  br label %bb383

bb383:                                            ; preds = %dec_label_pc_124bc, %bb382
  store i32 %v8_124d8, i32* %v2_124d0, align 4
  br label %bb334

; uselistorder directives
  uselistorder i32 %v1_124dc, { 0, 2, 1 }
  uselistorder i32 %v1_124d4, { 1, 0 }
  uselistorder i32 %v5_124a8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_12334, { 1, 0 }
  uselistorder i1 %v3_12324, { 1, 0 }
  uselistorder i32 %v0_12308, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_122dc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1226c, { 1, 0 }
  uselistorder i1 %v7_121d4, { 1, 0 }
  uselistorder i32 %v3_121d0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_121bc, { 1, 0 }
  uselistorder i32 %.387, { 1, 0 }
  uselistorder i1 %v7_121a4, { 1, 0 }
  uselistorder i32 %v0_121a0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_12178, { 1, 0 }
  uselistorder i32 %v0_12178, { 2, 1, 0, 3 }
  uselistorder i32 %v0_120fc, { 1, 0 }
  uselistorder i32 %v0_120c0, { 1, 0 }
  uselistorder i32 %v0_120ac.pr, { 1, 0 }
  uselistorder i32 %v0_12078, { 1, 2, 0 }
  uselistorder i32 %v0_12038, { 1, 0 }
  uselistorder i32 %v1_12030, { 1, 0 }
  uselistorder i32 %v1_12028, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_12024, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_12024, { 0, 2, 1 }
  uselistorder i32 %v0_12004.pr, { 1, 0 }
  uselistorder i32 %v0_11fe4.pr, { 1, 0 }
  uselistorder i1 %v7_11fbc, { 1, 0 }
  uselistorder i1 %v2_11fac, { 1, 0, 2 }
  uselistorder i1 %v2_11f90, { 1, 0, 2 }
  uselistorder i32 %v1_11fb0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11f84, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_11fb4, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_11f78, { 0, 2, 1, 3 }
  uselistorder i1 %v7_11f60, { 1, 0 }
  uselistorder i32 %v5_11f5c, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_11f48, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11f48, { 0, 2, 1 }
  uselistorder i32 %v0_11f40, { 1, 0 }
  uselistorder i1 %v7_11f3c, { 1, 0 }
  uselistorder i1 %v7_11f34, { 1, 0 }
  uselistorder i1 %v8_11f2c, { 1, 0 }
  uselistorder i1 %v7_11f10, { 1, 0 }
  uselistorder i1 %v7_11f08, { 1, 0 }
  uselistorder i1 %v8_11f00, { 1, 0 }
  uselistorder i32 %v1_11ee8, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_11ee4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11ed0, { 1, 0 }
  uselistorder i1 %v7_11ec4, { 1, 0 }
  uselistorder i32 %v5_11ec0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11eac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11eac, { 0, 2, 1 }
  uselistorder i32 %v0_11ea4, { 1, 0 }
  uselistorder i1 %v7_11ea0, { 1, 0 }
  uselistorder i1 %v7_11e98, { 1, 0 }
  uselistorder i1 %v7_11e90, { 1, 0 }
  uselistorder i1 %v8_11e88, { 1, 0 }
  uselistorder i1 %v7_11e6c, { 1, 0 }
  uselistorder i1 %v7_11e64, { 1, 0 }
  uselistorder i1 %v7_11e5c, { 1, 0 }
  uselistorder i1 %v8_11e54, { 1, 0 }
  uselistorder i32 %v1_11e3c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_11e38, { 1, 0, 2, 3 }
  uselistorder i1 %v8_11dd8, { 1, 0 }
  uselistorder i8 %v3_11dd0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11dc8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11dc8, { 0, 2, 1 }
  uselistorder i32 %v0_11dc0, { 1, 0 }
  uselistorder i1 %v7_11dbc, { 1, 0 }
  uselistorder i1 %v7_11db4, { 1, 0 }
  uselistorder i1 %v7_11dac, { 1, 0 }
  uselistorder i1 %v7_11d98, { 1, 0 }
  uselistorder i1 %v7_11d90, { 1, 0 }
  uselistorder i1 %v7_11d88, { 1, 0 }
  uselistorder i1 %v8_11d80, { 1, 0 }
  uselistorder i32 %v1_11d68, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11d04, { 1, 0 }
  uselistorder i8 %v3_11cfc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11cf4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11cf4, { 0, 2, 1 }
  uselistorder i32 %v0_11cec, { 1, 0 }
  uselistorder i1 %v7_11ce8, { 1, 0 }
  uselistorder i1 %v7_11ce0, { 1, 0 }
  uselistorder i1 %v7_11cd8, { 1, 0 }
  uselistorder i1 %v7_11cc4, { 1, 0 }
  uselistorder i1 %v7_11cbc, { 1, 0 }
  uselistorder i1 %v7_11cb4, { 1, 0 }
  uselistorder i1 %v8_11cac, { 1, 0 }
  uselistorder i32 %v1_11c94, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11c30, { 1, 0 }
  uselistorder i8 %v3_11c28, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11c20, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11c20, { 0, 2, 1 }
  uselistorder i32 %v0_11c18, { 1, 0 }
  uselistorder i1 %v7_11c14, { 1, 0 }
  uselistorder i1 %v7_11c0c, { 1, 0 }
  uselistorder i1 %v7_11c04, { 1, 0 }
  uselistorder i1 %v7_11aec, { 1, 0 }
  uselistorder i1 %v7_11ae4, { 1, 0 }
  uselistorder i1 %v7_11adc, { 1, 0 }
  uselistorder i1 %v8_11ad4, { 1, 0 }
  uselistorder i32 %v1_11abc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11a58, { 1, 0 }
  uselistorder i8 %v3_11a50, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11a48, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11a48, { 0, 2, 1 }
  uselistorder i32 %v0_11a40, { 1, 0 }
  uselistorder i1 %v7_11a3c, { 1, 0 }
  uselistorder i1 %v7_11a34, { 1, 0 }
  uselistorder i1 %v7_11a2c, { 1, 0 }
  uselistorder i1 %v7_11a18, { 1, 0 }
  uselistorder i1 %v7_11a10, { 1, 0 }
  uselistorder i1 %v7_11a08, { 1, 0 }
  uselistorder i1 %v8_11a00, { 1, 0 }
  uselistorder i32 %v1_119e8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11984, { 1, 0 }
  uselistorder i8 %v3_1197c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11974, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11974, { 0, 2, 1 }
  uselistorder i32 %v0_1196c, { 1, 0 }
  uselistorder i1 %v7_11968, { 1, 0 }
  uselistorder i1 %v7_11960, { 1, 0 }
  uselistorder i1 %v7_11958, { 1, 0 }
  uselistorder i1 %v7_11944, { 1, 0 }
  uselistorder i1 %v7_1193c, { 1, 0 }
  uselistorder i1 %v7_11934, { 1, 0 }
  uselistorder i1 %v8_1192c, { 1, 0 }
  uselistorder i32 %v1_11914, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_11900, { 1, 2, 0 }
  uselistorder i32 %v2_118ec, { 1, 0 }
  uselistorder i32 %v0_118ec, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_118e8, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_118c0, { 2, 1, 0 }
  uselistorder i1 %v7_118a0, { 1, 0 }
  uselistorder i32 %v1_1185c, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_11838, { 1, 0 }
  uselistorder i32 %v1_1182c, { 2, 1, 0 }
  uselistorder i32 %v1_11828, { 1, 0 }
  uselistorder i32 %v3_117b8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_117b8, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_11794, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11790, { 1, 0 }
  uselistorder i32 %v4_11774, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_11760, { 1, 0, 2 }
  uselistorder i32 %v3_1175c, { 1, 0, 2 }
  uselistorder i32 %v0_12234, { 1, 0, 2 }
  uselistorder i32 %v3_11724, { 1, 0 }
  uselistorder i32 %v1_1170c, { 3, 2, 1, 0 }
  uselistorder i32 %v3_11708, { 1, 0 }
  uselistorder i32 %v3_11700, { 1, 2, 0 }
  uselistorder i1 %v7_116f0, { 1, 0 }
  uselistorder i32 %v3_116ec, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_116e0, { 1, 0 }
  uselistorder i32 %v2_123f8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_11df0, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_12060, { 1, 2, 0 }
  uselistorder i32 %v1_11688, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11688, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1166c, { 1, 0 }
  uselistorder i32 %v1_11640, { 2, 1, 0 }
  uselistorder i32 %v1_1163c, { 1, 0 }
  uselistorder i1 %v2_1161c, { 1, 0, 2 }
  uselistorder i32 %v0_11618, { 1, 0, 2 }
  uselistorder i1 %v7_115e4, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_115e4, { 1, 0, 2 }
  uselistorder i32 %v2_115dc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_115d0, { 1, 0, 2 }
  uselistorder i32 %v0_115d4, { 1, 0 }
  uselistorder i32 %v1_115b8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_115ac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_115ac, { 0, 2, 1 }
  uselistorder i32 %v1_1159c, { 1, 0 }
  uselistorder i32 %v3_124bc, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_124c8, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_114e4, { 1, 0 }
  uselistorder i32 %v1_114cc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_114d8, { 0, 3, 2, 1 }
  uselistorder i32 %v0_11488, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i1 %v2_11460, { 1, 0 }
  uselistorder i32 %v0_1142c, { 1, 0 }
  uselistorder i32 %v0_11414, { 1, 0 }
  uselistorder i32 %v0_113d8, { 1, 0 }
  uselistorder i32 %v1_11360, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_112c4, { 1, 0 }
  uselistorder i32 %v5_1129c, { 1, 0 }
  uselistorder i32 %v3_1128c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11288, { 1, 0 }
  uselistorder i32 %v5_1126c, { 1, 0 }
  uselistorder i1 %v2_111f4, { 1, 0 }
  uselistorder i1 %v3_111d8, { 1, 0, 2 }
  uselistorder i1 %v2_111c4, { 1, 0 }
  uselistorder i1 %v2_111a0, { 1, 0 }
  uselistorder i32 %v1_11150, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1113c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11138, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_11120, { 1, 0 }
  uselistorder i32 %stack_var_-1884.0, { 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 7, 9, 11, 14, 13 }
  uselistorder i32 %stack_var_-1876.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10c8c, { 1, 0 }
  uselistorder i32 %v0_10c48, { 2, 1, 3, 0 }
  uselistorder i1 %v7_10be8, { 1, 0 }
  uselistorder i32 %v3_10be0, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_10bcc, { 1, 0 }
  uselistorder i32 %v2_10bb0, { 1, 0, 2 }
  uselistorder i32 %v0_10b9c, { 1, 2, 0 }
  uselistorder i32 %storemerge268, { 1, 0 }
  uselistorder i32 %v0_10b10, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp273, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 83, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 0, 96, 73, 165, 74, 75, 18, 19, 20, 61, 62, 63, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 79, 76, 77, 80, 103, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 125, 122, 128, 127, 81, 129, 130, 82, 131, 132, 133, 134, 135, 136, 137, 138, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 166, 169, 168, 152, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i32* %r2.global-to-local, { 29, 19, 20, 30, 31, 32, 33, 21, 22, 23, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 55, 56, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 54, 45, 46, 48, 47, 44, 49, 50, 27, 52, 51, 28, 57, 58, 59, 60, 134, 136, 135, 137, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133 }
  uselistorder i32* %r1.global-to-local, { 32, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 124, 125, 30, 31, 39, 40, 41, 42, 43, 44, 46, 47, 48, 45, 49, 50, 126, 127, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32* %r0.global-to-local, { 93, 51, 50, 53, 52, 54, 55, 56, 57, 59, 58, 60, 62, 61, 63, 64, 66, 65, 96, 94, 95, 97, 100, 99, 98, 69, 2, 105, 101, 67, 68, 70, 72, 71, 73, 74, 76, 75, 77, 79, 78, 80, 82, 81, 83, 7, 9, 48, 49, 4, 3, 5, 6, 8, 13, 10, 11, 12, 17, 14, 15, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 46, 45, 47, 87, 86, 88, 89, 85, 90, 91, 119, 102, 103, 104, 106, 107, 108, 110, 109, 111, 115, 112, 84, 113, 114, 116, 118, 117, 121, 120, 123, 127, 126, 124, 125, 128, 129, 130, 122, 132, 131, 133, 134, 136, 135, 138, 137, 221, 222, 1, 0, 223, 224, 226, 225, 92, 227, 139, 141, 140, 143, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 207, 228, 209, 210, 211, 216, 212, 213, 214, 215, 217, 218, 220, 219 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 10, 8, 9, 11, 1, 12, 13, 20, 21, 22, 23, 24, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 133, 117, 118, 63, 68, 134, 135, 136, 119, 120, 121, 3, 122, 124, 125, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 126, 24, 25, 30, 26, 27, 28, 29, 31, 32, 33, 34, 35, 123, 116, 36, 42, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 52, 53, 54, 49, 50, 51, 55, 56, 57, 58, 59, 60, 69, 70, 72, 65, 66, 67, 74, 75, 76, 77, 78, 79, 83, 84, 85, 80, 81, 82, 86, 87, 88, 89, 90, 91, 95, 96, 97, 92, 93, 94, 98, 99, 100, 101, 102, 103, 107, 108, 109, 104, 105, 106, 110, 111, 112, 113, 114, 115, 128, 129, 130, 131, 142, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 132, 164, 127, 23, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 161, 158, 159, 64, 71, 61, 165, 62, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 2, 212, 213, 214, 215, 216, 1, 217, 218, 219, 0, 220, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 73, 190 }
  uselistorder i1* %cpsr_c.global-to-local, { 130, 114, 115, 116, 131, 60, 61, 132, 133, 117, 118, 119, 3, 120, 123, 124, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 121, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 31, 32, 122, 113, 33, 39, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51, 46, 47, 48, 52, 53, 54, 55, 56, 58, 66, 68, 70, 63, 64, 65, 71, 72, 73, 74, 75, 76, 80, 81, 82, 77, 78, 79, 83, 84, 85, 86, 87, 88, 92, 93, 94, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 101, 102, 103, 107, 108, 109, 110, 111, 112, 126, 127, 128, 139, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 129, 159, 125, 20, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 156, 153, 154, 67, 62, 57, 160, 59, 161, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 2, 207, 208, 209, 210, 211, 1, 212, 213, 214, 0, 215, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 69, 183 }
  uselistorder i32 (i32)* @function_10368, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_230e4.204 to i16*), { 1, 0 }
  uselistorder i16** @global_var_230e4.204, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_230e4.204 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_15320, { 1, 0 }
  uselistorder i32 (i32)* @function_10390, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 251, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1a290.32 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15590, { 12, 11, 10, 9, 8, 7, 6, 28, 26, 25, 14, 13, 27, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i8*, i32, i32)* @function_15f18, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_12510, { 36, 35, 34, 41, 40, 39, 38, 37, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12ef8, { 22, 21, 24, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 0, 3, 2, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_124ec, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32)* @function_125b0, { 43, 42, 41, 48, 47, 46, 45, 44, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 22, 21, 20, 25, 24, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15524, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_157f4, { 1, 2, 0 }
  uselistorder i32* @sp, { 4, 1, 5, 0, 6, 2, 7, 3 }
  uselistorder i32 ()* @function_108dc, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_154ec, { 2, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 9, 0, 1, 2, 4, 3, 6, 5, 8, 10, 7 }
  uselistorder i32 16384, { 21, 60, 22, 61, 23, 62, 24, 63, 25, 64, 26, 65, 13, 66, 2, 44, 17, 46, 18, 47, 19, 58, 20, 59, 16, 45, 3, 48, 4, 49, 5, 50, 6, 51, 7, 52, 8, 53, 9, 54, 10, 55, 11, 56, 12, 57, 27, 87, 88, 89, 67, 28, 68, 29, 69, 70, 71, 30, 72, 31, 32, 73, 14, 0, 33, 74, 15, 1, 75, 34, 76, 35, 77, 36, 78, 79, 80, 37, 81, 82, 83, 38, 39, 84, 40, 85, 41, 86, 43, 90, 91, 92, 42, 93 }
  uselistorder i32 (i32, i32, i32, i32)* @function_e5f4, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_e5a4, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 126, { 7, 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1a4c8.299 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a460.277 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1a444.271 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a424.265 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a41c.263 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a408.259 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a3f4.255 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a3ec.253 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a3e4.251 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a3d8.249 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2b8.247 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a3c8.243 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a3c0.241 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a39c.233 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a394.231 to i32), { 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 26, 9, 27, 10, 28, 11, 29, 12, 30, 13, 31, 14, 15, 16, 32, 17, 33 }
  uselistorder i32 (i32, i32, i32)* @function_109a4, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a37c.225 to i32), { 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 6, 40, 7, 41, 8, 42, 9, 43, 10, 44, 11, 45, 12, 46, 13, 47, 14, 48, 15, 49, 16, 50, 17, 51, 18, 52, 19, 53, 20, 54, 21, 22, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63, 32, 64, 33, 65 }
  uselistorder i8* @global_var_230d9.222, { 1, 0 }
  uselistorder i16* @global_var_230ce.221, { 2, 0, 1 }
  uselistorder i8* @global_var_230d8.220, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_230cc.219 to i32), { 1, 0, 2, 3, 4, 5 }
  uselistorder i8 6, { 4, 5, 6, 7, 8, 9, 3, 10, 0, 11, 1, 2 }
  uselistorder i8 64, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_230b8.213 to i32), { 0, 3, 10, 9, 8, 2, 1, 7, 6, 5, 4 }
  uselistorder i32 1024, { 3, 0, 2, 4, 5, 6, 1, 7 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @function_15510, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_1008c, { 75, 11, 6, 5, 4, 3, 2, 72, 74, 73, 71, 10, 9, 8, 7, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_15600, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13a84, { 3, 2, 5, 4, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0 }
  uselistorder i32* @global_var_2367c.211, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_23678.209, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_230e8.198, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_165ec, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11 }
  uselistorder i32* @global_var_2365c.93, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* @global_var_23680.196, { 0, 2, 1 }
  uselistorder i32 ()* @function_15768, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %bb383, { 1, 0 }
  uselistorder label %dec_label_pc_12498, { 1, 0 }
  uselistorder label %dec_label_pc_12490, { 1, 0 }
  uselistorder label %dec_label_pc_123f0, { 1, 0 }
  uselistorder label %dec_label_pc_12208, { 1, 2, 0 }
  uselistorder label %dec_label_pc_120fc, { 1, 0 }
  uselistorder label %dec_label_pc_120f8, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_120c0, { 1, 0 }
  uselistorder label %dec_label_pc_120bc, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_120ac, { 1, 0 }
  uselistorder label %dec_label_pc_12038, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12004, { 1, 0 }
  uselistorder label %.thread92, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11fe4, { 1, 0 }
  uselistorder label %dec_label_pc_11fd0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11f8c, { 1, 0 }
  uselistorder label %dec_label_pc_11f8c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11f48, { 1, 0 }
  uselistorder label %dec_label_pc_11ed8, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11eac, { 1, 0 }
  uselistorder label %dec_label_pc_11de0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11dc8, { 1, 0 }
  uselistorder label %dec_label_pc_11d0c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11cf4, { 1, 0 }
  uselistorder label %dec_label_pc_11c38, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11c20, { 1, 0 }
  uselistorder label %dec_label_pc_11a60, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11a48, { 1, 0 }
  uselistorder label %dec_label_pc_1198c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11974, { 1, 0 }
  uselistorder label %dec_label_pc_11858, { 7, 8, 3, 4, 1, 0, 2, 5, 6 }
  uselistorder label %bb346, { 1, 0 }
  uselistorder label %bb344, { 1, 0 }
  uselistorder label %dec_label_pc_117a0, { 1, 0 }
  uselistorder label %.thread50, { 1, 0 }
  uselistorder label %dec_label_pc_11750, { 1, 0 }
  uselistorder label %dec_label_pc_11740, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11738thread-pre-split.thread477, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_11738thread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11740.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_11734.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1171c, { 1, 0 }
  uselistorder label %dec_label_pc_1165c, { 1, 0 }
  uselistorder label %bb340, { 1, 0 }
  uselistorder label %bb338, { 1, 0 }
  uselistorder label %bb336, { 1, 0 }
  uselistorder label %bb334, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_11550.dec_label_pc_11550_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1152c.dec_label_pc_1152c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11520, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_11518, { 1, 0 }
  uselistorder label %dec_label_pc_114f0, { 1, 0 }
  uselistorder label %dec_label_pc_114cc, { 1, 0 }
  uselistorder label %dec_label_pc_11380, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_11374, { 1, 0 }
  uselistorder label %dec_label_pc_11204, { 1, 2, 0 }
  uselistorder label %dec_label_pc_111e0, { 1, 0 }
  uselistorder label %dec_label_pc_111d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_111b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1118c, { 1, 0 }
  uselistorder label %bb312, { 1, 0 }
  uselistorder label %dec_label_pc_11138, { 22, 6, 12, 2, 13, 3, 14, 4, 15, 5, 16, 0, 17, 18, 19, 20, 21, 7, 8, 9, 1, 10, 11, 23 }
  uselistorder label %dec_label_pc_10c48, { 1, 0 }
}

define i32 @function_124ec(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_124ec:
  store i32 ptrtoint (i32* @global_var_23688.343 to i32), i32* @r2, align 4
  %v3_124f0 = mul i32 %arg1, 8
  %v2_124f4 = add i32 %v3_124f0, ptrtoint (i32* @global_var_23688.343 to i32)
  %v2_124f8 = icmp eq i32* %arg2, null
  br i1 %v2_124f8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_124ec
  %v3_125004 = inttoptr i32 %v2_124f4 to i32*
  %v4_125005 = load i32, i32* %v3_125004, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_124ec
  %v2_124fc = add i32 %v3_124f0, add (i32 ptrtoint (i32* @global_var_23688.343 to i32), i32 4)
  %v3_124fc = inttoptr i32 %v2_124fc to i16*
  %v4_124fc = load i16, i16* %v3_124fc, align 4
  %v5_124fc = zext i16 %v4_124fc to i32
  %v3_12500 = inttoptr i32 %v2_124f4 to i32*
  %v4_12500 = load i32, i32* %v3_12500, align 4
  store i32 %v5_124fc, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_125006 = phi i32 [ %v4_125005, %.thread ], [ %v4_12500, %bb ]
  ret i32 %v4_125006

; uselistorder directives
  uselistorder i32 %v2_124f4, { 1, 0 }
  uselistorder i32 %v3_124f0, { 1, 0 }
  uselistorder i32* null, { 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 1, 19, 2, 20, 23, 21, 22, 36, 24, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 4, 34, 35 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_12510(i32 %arg1) local_unnamed_addr {
dec_label_pc_12510:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12518 = mul i32 %arg1, 8
  %v2_1251c = add i32 %v3_12518, ptrtoint (i32* @global_var_23688.343 to i32)
  %v2_12520 = load i32, i32* @global_var_23048.346, align 4
  %v1_12524 = add i32 %v3_12518, add (i32 ptrtoint (i32* @global_var_23688.343 to i32), i32 4)
  %v2_12524 = inttoptr i32 %v1_12524 to i16*
  %v3_12524 = load i16, i16* %v2_12524, align 4
  %v3_12528 = udiv i32 %v2_12520, 256
  %v2_1252c = icmp eq i16 %v3_12524, 0
  %v3_12530 = udiv i32 %v2_12520, 65536
  %v3_12534 = load i32, i32* @r4, align 4
  store i32 %v3_12534, i32* %stack_var_-16, align 4
  %v1_12538 = urem i32 %v3_12528, 256
  store i32 %v1_12538, i32* %r6.global-to-local, align 4
  %v1_1253c = urem i32 %v3_12530, 256
  store i32 %v1_1253c, i32* %r5.global-to-local, align 4
  %v3_12540 = udiv i32 %v2_12520, 16777216
  store i32 %v3_12540, i32* %r4.global-to-local, align 4
  %v1_12544 = urem i32 %v2_12520, 256
  store i32 %v1_12544, i32* %lr.global-to-local, align 4
  br i1 %v2_1252c, label %dec_label_pc_125a0, label %dec_label_pc_1254c

dec_label_pc_1254c:                               ; preds = %dec_label_pc_12510
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_12550 = inttoptr i32 %v2_1251c to i32*
  br label %dec_label_pc_12550

dec_label_pc_12550:                               ; preds = %dec_label_pc_12550.dec_label_pc_12550_crit_edge, %dec_label_pc_1254c
  %v0_12558 = phi i32 [ %v0_12558.pre, %dec_label_pc_12550.dec_label_pc_12550_crit_edge ], [ %v1_12544, %dec_label_pc_1254c ]
  %v2_1255c = phi i32 [ %v1_12594, %dec_label_pc_12550.dec_label_pc_12550_crit_edge ], [ 0, %dec_label_pc_1254c ]
  %v2_12550 = load i32, i32* %v1_12550, align 4
  %v2_12554 = add i32 %v2_12550, %v2_1255c
  %v3_12554 = inttoptr i32 %v2_12554 to i8*
  %v4_12554 = load i8, i8* %v3_12554, align 1
  %v6_12554 = zext i8 %v4_12554 to i32
  %v2_12558 = xor i32 %v6_12554, %v0_12558
  %v1_1255c = trunc i32 %v2_12558 to i8
  store i8 %v1_1255c, i8* %v3_12554, align 1
  %v2_12560 = load i32, i32* %v1_12550, align 4
  %v0_12564 = load i32, i32* %ip.global-to-local, align 4
  %v2_12564 = add i32 %v0_12564, %v2_12560
  %v3_12564 = inttoptr i32 %v2_12564 to i8*
  %v4_12564 = load i8, i8* %v3_12564, align 1
  %v6_12564 = zext i8 %v4_12564 to i32
  %v0_12568 = load i32, i32* %r6.global-to-local, align 4
  %v2_12568 = xor i32 %v0_12568, %v6_12564
  %v1_1256c = trunc i32 %v2_12568 to i8
  store i8 %v1_1256c, i8* %v3_12564, align 1
  %v2_12570 = load i32, i32* %v1_12550, align 4
  %v0_12574 = load i32, i32* %ip.global-to-local, align 4
  %v2_12574 = add i32 %v0_12574, %v2_12570
  %v3_12574 = inttoptr i32 %v2_12574 to i8*
  %v4_12574 = load i8, i8* %v3_12574, align 1
  %v6_12574 = zext i8 %v4_12574 to i32
  %v0_12578 = load i32, i32* %r5.global-to-local, align 4
  %v2_12578 = xor i32 %v0_12578, %v6_12574
  %v1_1257c = trunc i32 %v2_12578 to i8
  store i8 %v1_1257c, i8* %v3_12574, align 1
  %v2_12580 = load i32, i32* %v1_12550, align 4
  %v0_12584 = load i32, i32* %ip.global-to-local, align 4
  %v2_12584 = add i32 %v0_12584, %v2_12580
  %v3_12584 = inttoptr i32 %v2_12584 to i8*
  %v4_12584 = load i8, i8* %v3_12584, align 1
  %v6_12584 = zext i8 %v4_12584 to i32
  %v0_12588 = load i32, i32* %r4.global-to-local, align 4
  %v2_12588 = xor i32 %v0_12588, %v6_12584
  %v1_1258c = trunc i32 %v2_12588 to i8
  store i8 %v1_1258c, i8* %v3_12584, align 1
  %v3_12590 = load i16, i16* %v2_12524, align 4
  %v4_12590 = zext i16 %v3_12590 to i32
  %v0_12594 = load i32, i32* %ip.global-to-local, align 4
  %v1_12594 = add i32 %v0_12594, 1
  store i32 %v1_12594, i32* %ip.global-to-local, align 4
  %v8_1259c = icmp sgt i32 %v4_12590, %v1_12594
  br i1 %v8_1259c, label %dec_label_pc_12550.dec_label_pc_12550_crit_edge, label %dec_label_pc_125a0.loopexit

dec_label_pc_12550.dec_label_pc_12550_crit_edge:  ; preds = %dec_label_pc_12550
  %v0_12558.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_12550

dec_label_pc_125a0.loopexit:                      ; preds = %dec_label_pc_12550
  %v2_125a0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_125a0

dec_label_pc_125a0:                               ; preds = %dec_label_pc_125a0.loopexit, %dec_label_pc_12510
  %v2_125a0 = phi i32 [ %v2_125a0.pre, %dec_label_pc_125a0.loopexit ], [ %v3_12534, %dec_label_pc_12510 ]
  store i32 %v2_125a0, i32* @r4, align 4
  ret i32 %v2_1251c

; uselistorder directives
  uselistorder i32 %v1_12594, { 1, 2, 0 }
  uselistorder i32 %v1_12544, { 1, 0 }
  uselistorder i32 %v2_12520, { 3, 0, 1, 2 }
  uselistorder i32 %v2_1251c, { 1, 0 }
  uselistorder i32 %v3_12518, { 1, 0 }
}

define i32 @function_125b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_125b0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_125b8 = mul i32 %arg1, 8
  %v2_125bc = add i32 %v3_125b8, ptrtoint (i32* @global_var_23688.343 to i32)
  %v2_125c0 = load i32, i32* @global_var_23048.346, align 4
  %v1_125c4 = add i32 %v3_125b8, add (i32 ptrtoint (i32* @global_var_23688.343 to i32), i32 4)
  %v2_125c4 = inttoptr i32 %v1_125c4 to i16*
  %v3_125c4 = load i16, i16* %v2_125c4, align 4
  %v3_125c8 = udiv i32 %v2_125c0, 256
  store i32 %v3_125c8, i32* @r2, align 4
  %v2_125cc = icmp eq i16 %v3_125c4, 0
  %v3_125d0 = udiv i32 %v2_125c0, 65536
  %v3_125d4 = load i32, i32* @r4, align 4
  store i32 %v3_125d4, i32* %stack_var_-16, align 4
  %v1_125d8 = urem i32 %v3_125c8, 256
  store i32 %v1_125d8, i32* %r6.global-to-local, align 4
  %v1_125dc = urem i32 %v3_125d0, 256
  store i32 %v1_125dc, i32* %r5.global-to-local, align 4
  %v3_125e0 = udiv i32 %v2_125c0, 16777216
  store i32 %v3_125e0, i32* %r4.global-to-local, align 4
  %v1_125e4 = urem i32 %v2_125c0, 256
  store i32 %v1_125e4, i32* %lr.global-to-local, align 4
  br i1 %v2_125cc, label %dec_label_pc_12640, label %dec_label_pc_125ec

dec_label_pc_125ec:                               ; preds = %dec_label_pc_125b0
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_125f0 = inttoptr i32 %v2_125bc to i32*
  br label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125f0.dec_label_pc_125f0_crit_edge, %dec_label_pc_125ec
  %v0_125f8 = phi i32 [ %v0_125f8.pre, %dec_label_pc_125f0.dec_label_pc_125f0_crit_edge ], [ %v1_125e4, %dec_label_pc_125ec ]
  %v2_125fc = phi i32 [ %v1_12634, %dec_label_pc_125f0.dec_label_pc_125f0_crit_edge ], [ 0, %dec_label_pc_125ec ]
  %v2_125f0 = load i32, i32* %v1_125f0, align 4
  %v2_125f4 = add i32 %v2_125f0, %v2_125fc
  %v3_125f4 = inttoptr i32 %v2_125f4 to i8*
  %v4_125f4 = load i8, i8* %v3_125f4, align 1
  %v6_125f4 = zext i8 %v4_125f4 to i32
  %v2_125f8 = xor i32 %v6_125f4, %v0_125f8
  %v1_125fc = trunc i32 %v2_125f8 to i8
  store i8 %v1_125fc, i8* %v3_125f4, align 1
  %v2_12600 = load i32, i32* %v1_125f0, align 4
  %v0_12604 = load i32, i32* %ip.global-to-local, align 4
  %v2_12604 = add i32 %v0_12604, %v2_12600
  %v3_12604 = inttoptr i32 %v2_12604 to i8*
  %v4_12604 = load i8, i8* %v3_12604, align 1
  %v6_12604 = zext i8 %v4_12604 to i32
  %v0_12608 = load i32, i32* %r6.global-to-local, align 4
  %v2_12608 = xor i32 %v0_12608, %v6_12604
  %v1_1260c = trunc i32 %v2_12608 to i8
  store i8 %v1_1260c, i8* %v3_12604, align 1
  %v2_12610 = load i32, i32* %v1_125f0, align 4
  %v0_12614 = load i32, i32* %ip.global-to-local, align 4
  %v2_12614 = add i32 %v0_12614, %v2_12610
  %v3_12614 = inttoptr i32 %v2_12614 to i8*
  %v4_12614 = load i8, i8* %v3_12614, align 1
  %v6_12614 = zext i8 %v4_12614 to i32
  %v0_12618 = load i32, i32* %r5.global-to-local, align 4
  %v2_12618 = xor i32 %v0_12618, %v6_12614
  %v1_1261c = trunc i32 %v2_12618 to i8
  store i8 %v1_1261c, i8* %v3_12614, align 1
  %v2_12620 = load i32, i32* %v1_125f0, align 4
  %v0_12624 = load i32, i32* %ip.global-to-local, align 4
  %v2_12624 = add i32 %v0_12624, %v2_12620
  %v3_12624 = inttoptr i32 %v2_12624 to i8*
  %v4_12624 = load i8, i8* %v3_12624, align 1
  %v6_12624 = zext i8 %v4_12624 to i32
  %v0_12628 = load i32, i32* %r4.global-to-local, align 4
  %v2_12628 = xor i32 %v0_12628, %v6_12624
  %v1_1262c = trunc i32 %v2_12628 to i8
  store i8 %v1_1262c, i8* %v3_12624, align 1
  %v3_12630 = load i16, i16* %v2_125c4, align 4
  %v4_12630 = zext i16 %v3_12630 to i32
  store i32 %v4_12630, i32* @r2, align 4
  %v0_12634 = load i32, i32* %ip.global-to-local, align 4
  %v1_12634 = add i32 %v0_12634, 1
  store i32 %v1_12634, i32* %ip.global-to-local, align 4
  %v8_1263c = icmp sgt i32 %v4_12630, %v1_12634
  br i1 %v8_1263c, label %dec_label_pc_125f0.dec_label_pc_125f0_crit_edge, label %dec_label_pc_12640.loopexit

dec_label_pc_125f0.dec_label_pc_125f0_crit_edge:  ; preds = %dec_label_pc_125f0
  %v0_125f8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_125f0

dec_label_pc_12640.loopexit:                      ; preds = %dec_label_pc_125f0
  %v2_12640.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12640

dec_label_pc_12640:                               ; preds = %dec_label_pc_12640.loopexit, %dec_label_pc_125b0
  %v2_12640 = phi i32 [ %v2_12640.pre, %dec_label_pc_12640.loopexit ], [ %v3_125d4, %dec_label_pc_125b0 ]
  store i32 %v2_12640, i32* @r4, align 4
  ret i32 %v2_125bc

; uselistorder directives
  uselistorder i32 %v1_12634, { 1, 2, 0 }
  uselistorder i32 %v1_125e4, { 1, 0 }
  uselistorder i32 %v3_125c8, { 1, 0 }
  uselistorder i32 %v2_125c0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_125bc, { 1, 0 }
  uselistorder i32 %v3_125b8, { 1, 0 }
}

define i32 @function_12650() local_unnamed_addr {
dec_label_pc_12650:
  %r5.global-to-local = alloca i32, align 4
  %v6_12650 = load i32, i32* @r5, align 4
  store i32 12, i32* @r0, align 4
  %v0_1265c = call i32 @function_14798()
  store i32 ptrtoint ([13 x i8]* @global_var_1a54c.350 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_23688.343 to i32), i32* @r4, align 4
  store i32 12, i32* @r7, align 4
  store i32 %v0_1265c, i32* @r5, align 4
  %v4_12678 = call i32 @function_12eb0(i32 %v0_1265c, i32 ptrtoint ([13 x i8]* @global_var_1a54c.350 to i32), i32 12)
  store i32 2, i32* @r0, align 4
  %v0_12680 = load i32, i32* @r5, align 4
  store i32 %v0_12680, i32* @global_var_236a0.352, align 4
  %v0_12684 = load i32, i32* @r7, align 4
  %v1_12684 = trunc i32 %v0_12684 to i16
  store i16 %v1_12684, i16* bitcast (i32* @global_var_236a4.353 to i16*), align 4
  %v0_12688 = call i32 @function_14798()
  store i32 2, i32* @r5, align 4
  store i32 %v0_12688, i32* @r6, align 4
  %v3_1269c = call i32 @function_12eb0(i32 %v0_12688, i32 ptrtoint (i32* @global_var_1a55c.355 to i32), i32 2)
  %v0_126a0 = load i32, i32* @r7, align 4
  store i32 %v0_126a0, i32* @r0, align 4
  %v0_126a4 = load i32, i32* @r6, align 4
  store i32 %v0_126a4, i32* @global_var_236a8.356, align 4
  %v0_126a8 = load i32, i32* @r5, align 4
  %v1_126a8 = trunc i32 %v0_126a8 to i16
  store i16 %v1_126a8, i16* bitcast (i32* @global_var_236ac.357 to i16*), align 4
  %v0_126ac = call i32 @function_14798()
  %v0_126b0 = load i32, i32* @r8, align 4
  %v0_126b4 = load i32, i32* @r7, align 4
  store i32 %v0_126ac, i32* @r6, align 4
  %v4_126bc = call i32 @function_12eb0(i32 %v0_126ac, i32 %v0_126b0, i32 %v0_126b4)
  %v0_126c0 = load i32, i32* @r5, align 4
  store i32 %v0_126c0, i32* @r0, align 4
  %v0_126c4 = load i32, i32* @r6, align 4
  store i32 %v0_126c4, i32* @global_var_23718.358, align 4
  %v0_126c8 = load i32, i32* @r7, align 4
  %v1_126c8 = trunc i32 %v0_126c8 to i16
  store i16 %v1_126c8, i16* bitcast (i32* @global_var_2371c.359 to i16*), align 4
  %v0_126cc = call i32 @function_14798()
  %v0_126d0 = load i32, i32* @r5, align 4
  store i32 %v0_126cc, i32* @r6, align 4
  %v3_126dc = call i32 @function_12eb0(i32 %v0_126cc, i32 ptrtoint (i32* @global_var_1a560.361 to i32), i32 %v0_126d0)
  store i32 15, i32* @r0, align 4
  %v0_126e4 = load i32, i32* @r6, align 4
  store i32 %v0_126e4, i32* @global_var_23720.362, align 4
  %v0_126e8 = load i32, i32* @r5, align 4
  %v1_126e8 = trunc i32 %v0_126e8 to i16
  store i16 %v1_126e8, i16* bitcast (i32* @global_var_23724.363 to i16*), align 4
  %v0_126ec = call i32 @function_14798()
  store i32 %v0_126ec, i32* @r5, align 4
  %v3_126fc = call i32 @function_12eb0(i32 %v0_126ec, i32 ptrtoint (i32* @global_var_1a564.365 to i32), i32 15)
  store i32 29, i32* @r0, align 4
  %v0_12708 = load i32, i32* @r5, align 4
  store i32 %v0_12708, i32* @global_var_23698.366, align 4
  store i16 15, i16* bitcast (i32* @global_var_2369c.367 to i16*), align 4
  %v0_12710 = call i32 @function_14798()
  store i32 %v0_12710, i32* @r5, align 4
  %v3_12720 = call i32 @function_12eb0(i32 %v0_12710, i32 ptrtoint (i32* @global_var_1a574.369 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_236b4.370 to i16*), align 4
  %v0_12730 = load i32, i32* @r5, align 4
  store i32 %v0_12730, i32* @global_var_236b0.371, align 4
  %v0_12734 = call i32 @function_14798()
  store i32 7, i32* @r6, align 4
  store i32 %v0_12734, i32* @r5, align 4
  %v4_12748 = call i32 @function_12eb0(i32 %v0_12734, i32 ptrtoint ([8 x i8]* @global_var_1a594.373 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_12750 = load i32, i32* @r5, align 4
  store i32 %v0_12750, i32* @global_var_236b8.374, align 4
  %v0_12754 = load i32, i32* @r6, align 4
  %v1_12754 = trunc i32 %v0_12754 to i16
  store i16 %v1_12754, i16* bitcast (i32* @global_var_236bc.375 to i16*), align 4
  %v0_12758 = call i32 @function_14798()
  store i32 %v0_12758, i32* @r5, align 4
  %v4_12768 = call i32 @function_12eb0(i32 %v0_12758, i32 ptrtoint ([6 x i8]* @global_var_1a59c.377 to i32), i32 5)
  store i32 11, i32* @r0, align 4
  %v0_12774 = load i32, i32* @r5, align 4
  store i32 %v0_12774, i32* @global_var_236c0.378, align 4
  store i16 5, i16* bitcast (i32* @global_var_236c4.379 to i16*), align 4
  %v0_1277c = call i32 @function_14798()
  store i32 11, i32* @fp, align 4
  store i32 %v0_1277c, i32* @r5, align 4
  %v3_12790 = call i32 @function_12eb0(i32 %v0_1277c, i32 ptrtoint (i32* @global_var_1a5a4.381 to i32), i32 11)
  store i32 4, i32* @r0, align 4
  %v0_12798 = load i32, i32* @r5, align 4
  store i32 %v0_12798, i32* @global_var_236c8.382, align 4
  %v0_1279c = load i32, i32* @fp, align 4
  %v1_1279c = trunc i32 %v0_1279c to i16
  store i16 %v1_1279c, i16* bitcast (i32* @global_var_236cc.383 to i16*), align 4
  %v0_127a0 = call i32 @function_14798()
  store i32 %v0_127a0, i32* @r5, align 4
  %v4_127b0 = call i32 @function_12eb0(i32 %v0_127a0, i32 ptrtoint ([5 x i8]* @global_var_1a5b0.385 to i32), i32 4)
  %v0_127b8 = load i32, i32* @r6, align 4
  store i32 %v0_127b8, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_236d4.386 to i16*), align 4
  %v0_127c0 = load i32, i32* @r5, align 4
  store i32 %v0_127c0, i32* @global_var_236d0.387, align 4
  %v0_127c4 = call i32 @function_14798()
  %v0_127c8 = load i32, i32* @r6, align 4
  store i32 %v0_127c4, i32* @r5, align 4
  %v4_127d4 = call i32 @function_12eb0(i32 %v0_127c4, i32 ptrtoint ([8 x i8]* @global_var_1a5b8.389 to i32), i32 %v0_127c8)
  store i32 8, i32* @r0, align 4
  %v0_127dc = load i32, i32* @r5, align 4
  store i32 %v0_127dc, i32* @global_var_236d8.390, align 4
  %v0_127e0 = load i32, i32* @r6, align 4
  %v1_127e0 = trunc i32 %v0_127e0 to i16
  store i16 %v1_127e0, i16* bitcast (i32* @global_var_236dc.391 to i16*), align 4
  %v0_127e4 = call i32 @function_14798()
  store i32 8, i32* @sl, align 4
  store i32 %v0_127e4, i32* @r5, align 4
  %v4_127f8 = call i32 @function_12eb0(i32 %v0_127e4, i32 ptrtoint ([9 x i8]* @global_var_1a5c0.393 to i32), i32 8)
  store i32 13, i32* @r0, align 4
  %v0_12800 = load i32, i32* @r5, align 4
  store i32 %v0_12800, i32* @global_var_236e0.394, align 4
  %v0_12804 = load i32, i32* @sl, align 4
  %v1_12804 = trunc i32 %v0_12804 to i16
  store i16 %v1_12804, i16* bitcast (i32* @global_var_236e4.395 to i16*), align 4
  %v0_12808 = call i32 @function_14798()
  store i32 %v0_12808, i32* @r5, align 4
  %v3_12818 = call i32 @function_12eb0(i32 %v0_12808, i32 ptrtoint (i32* @global_var_1a5cc.397 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i32 10, i32* @r8, align 4
  %v0_12828 = load i32, i32* @r5, align 4
  store i32 %v0_12828, i32* @global_var_236e8.398, align 4
  store i16 13, i16* bitcast (i32* @global_var_236ec.399 to i16*), align 4
  %v0_12830 = call i32 @function_14798()
  %v0_12838 = load i32, i32* @r8, align 4
  store i32 %v0_12830, i32* @r5, align 4
  %v4_12840 = call i32 @function_12eb0(i32 %v0_12830, i32 ptrtoint ([11 x i8]* @global_var_1a5dc.401 to i32), i32 %v0_12838)
  %v0_12844 = load i32, i32* @r8, align 4
  store i32 %v0_12844, i32* @r0, align 4
  %v0_12848 = load i32, i32* @r5, align 4
  store i32 %v0_12848, i32* @global_var_236f0.402, align 4
  %v1_1284c = trunc i32 %v0_12844 to i16
  store i16 %v1_1284c, i16* bitcast (i32* @global_var_236f4.403 to i16*), align 4
  %v0_12850 = call i32 @function_14798()
  %v0_12858 = load i32, i32* @r8, align 4
  store i32 %v0_12850, i32* @r5, align 4
  %v4_12860 = call i32 @function_12eb0(i32 %v0_12850, i32 ptrtoint ([11 x i8]* @global_var_1a5e8.405 to i32), i32 %v0_12858)
  store i32 33, i32* @r0, align 4
  %v0_12868 = load i32, i32* @r5, align 4
  store i32 %v0_12868, i32* @global_var_236f8.406, align 4
  %v0_1286c = load i32, i32* @r8, align 4
  %v1_1286c = trunc i32 %v0_1286c to i16
  store i16 %v1_1286c, i16* bitcast (i32* @global_var_236fc.407 to i16*), align 4
  %v0_12870 = call i32 @function_14798()
  store i32 %v0_12870, i32* @r5, align 4
  %v3_12880 = call i32 @function_12eb0(i32 %v0_12870, i32 ptrtoint (i32* @global_var_1a5f4.409 to i32), i32 33)
  %v0_12888 = load i32, i32* @sl, align 4
  store i32 %v0_12888, i32* @r0, align 4
  store i16 33, i16* bitcast (i32* @global_var_23704.410 to i16*), align 4
  %v0_12890 = load i32, i32* @r5, align 4
  store i32 %v0_12890, i32* @global_var_23700.411, align 4
  %v0_12894 = call i32 @function_14798()
  %v0_1289c = load i32, i32* @sl, align 4
  store i32 %v0_12894, i32* @r5, align 4
  %v4_128a4 = call i32 @function_12eb0(i32 %v0_12894, i32 ptrtoint ([9 x i8]* @global_var_1a618.413 to i32), i32 %v0_1289c)
  %v0_128a8 = load i32, i32* @fp, align 4
  store i32 %v0_128a8, i32* @r0, align 4
  %v0_128ac = load i32, i32* @r5, align 4
  store i32 %v0_128ac, i32* @global_var_23708.414, align 4
  %v0_128b0 = load i32, i32* @sl, align 4
  %v1_128b0 = trunc i32 %v0_128b0 to i16
  store i16 %v1_128b0, i16* bitcast (i32* @global_var_2370c.415 to i16*), align 4
  %v0_128b4 = call i32 @function_14798()
  %v0_128bc = load i32, i32* @fp, align 4
  store i32 %v0_128b4, i32* @r5, align 4
  %v4_128c4 = call i32 @function_12eb0(i32 %v0_128b4, i32 ptrtoint ([12 x i8]* @global_var_1a624.417 to i32), i32 %v0_128bc)
  store i32 6, i32* @r0, align 4
  %v0_128cc = load i32, i32* @r5, align 4
  store i32 %v0_128cc, i32* @global_var_23710.418, align 4
  %v0_128d0 = load i32, i32* @fp, align 4
  %v1_128d0 = trunc i32 %v0_128d0 to i16
  store i16 %v1_128d0, i16* bitcast (i32* @global_var_23714.419 to i16*), align 4
  %v0_128d4 = call i32 @function_14798()
  store i32 %v0_128d4, i32* @r5, align 4
  %v4_128e4 = call i32 @function_12eb0(i32 %v0_128d4, i32 ptrtoint ([7 x i8]* @global_var_1a630.421 to i32), i32 6)
  %v0_128ec = load i32, i32* @r6, align 4
  store i32 %v0_128ec, i32* @r0, align 4
  %v0_128f0 = load i32, i32* @r5, align 4
  store i32 %v0_128f0, i32* @global_var_23728.422, align 4
  store i16 6, i16* bitcast (i32* @global_var_2372c.423 to i16*), align 4
  %v0_128f8 = call i32 @function_14798()
  %v0_128fc = load i32, i32* @r6, align 4
  store i32 %v0_128f8, i32* @r5, align 4
  %v4_12908 = call i32 @function_12eb0(i32 %v0_128f8, i32 ptrtoint ([8 x i8]* @global_var_1a638.425 to i32), i32 %v0_128fc)
  %v0_1290c = load i32, i32* @r6, align 4
  store i32 %v0_1290c, i32* @r0, align 4
  %v0_12910 = load i32, i32* @r5, align 4
  store i32 %v0_12910, i32* @global_var_23730.426, align 4
  %v1_12914 = trunc i32 %v0_1290c to i16
  store i16 %v1_12914, i16* bitcast (i32* @global_var_23734.427 to i16*), align 4
  %v0_12918 = call i32 @function_14798()
  %v0_1291c = load i32, i32* @r6, align 4
  store i32 %v0_12918, i32* @r5, align 4
  %v4_12928 = call i32 @function_12eb0(i32 %v0_12918, i32 ptrtoint ([8 x i8]* @global_var_1a640.429 to i32), i32 %v0_1291c)
  store i32 3, i32* @r0, align 4
  %v0_12930 = load i32, i32* @r5, align 4
  store i32 %v0_12930, i32* @global_var_23738.430, align 4
  %v0_12934 = load i32, i32* @r6, align 4
  %v1_12934 = trunc i32 %v0_12934 to i16
  store i16 %v1_12934, i16* bitcast (i32* @global_var_2373c.431 to i16*), align 4
  %v0_12938 = call i32 @function_14798()
  store i32 %v0_12938, i32* @r5, align 4
  %v4_12948 = call i32 @function_12eb0(i32 %v0_12938, i32 ptrtoint ([4 x i8]* @global_var_1a648.433 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_23744.434 to i16*), align 4
  %v0_12958 = load i32, i32* @r5, align 4
  store i32 %v0_12958, i32* @global_var_23740.435, align 4
  %v0_1295c = call i32 @function_14798()
  store i32 %v0_1295c, i32* @r5, align 4
  %v3_1296c = call i32 @function_12eb0(i32 %v0_1295c, i32 ptrtoint (i32* @global_var_1a64c.437 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_12978 = load i32, i32* @r5, align 4
  store i32 %v0_12978, i32* @global_var_23748.438, align 4
  store i16 19, i16* bitcast (i32* @global_var_2374c.439 to i16*), align 4
  %v0_12980 = call i32 @function_14798()
  store i32 %v0_12980, i32* @r5, align 4
  %v3_12990 = call i32 @function_12eb0(i32 %v0_12980, i32 ptrtoint (i32* @global_var_1a660.441 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_23754.442 to i16*), align 4
  %v0_129a0 = load i32, i32* @r5, align 4
  store i32 %v0_129a0, i32* @global_var_23750.443, align 4
  %v0_129a4 = call i32 @function_14798()
  %v0_129b0 = load i32, i32* @r6, align 4
  %v1_129b0 = add i32 %v0_129b0, 2
  store i32 %v1_129b0, i32* @r6, align 4
  store i32 %v0_129a4, i32* @r5, align 4
  %v4_129b8 = call i32 @function_12eb0(i32 %v0_129a4, i32 ptrtoint ([10 x i8]* @global_var_1a67c.445 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_129c0 = load i32, i32* @r5, align 4
  store i32 %v0_129c0, i32* @global_var_23758.446, align 4
  %v0_129c4 = load i32, i32* @r6, align 4
  %v1_129c4 = trunc i32 %v0_129c4 to i16
  store i16 %v1_129c4, i16* bitcast (i32* @global_var_2375c.447 to i16*), align 4
  %v0_129c8 = call i32 @function_14798()
  store i32 %v0_129c8, i32* @r5, align 4
  store i32 16, i32* @sb, align 4
  %v3_129dc = call i32 @function_12eb0(i32 %v0_129c8, i32 ptrtoint (i32* @global_var_1a688.449 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_129e4 = load i32, i32* @r5, align 4
  store i32 %v0_129e4, i32* @global_var_23760.450, align 4
  %v0_129e8 = load i32, i32* @sb, align 4
  %v1_129e8 = trunc i32 %v0_129e8 to i16
  store i16 %v1_129e8, i16* bitcast (i32* @global_var_23764.451 to i16*), align 4
  %v0_129ec = call i32 @function_14798()
  store i32 %v0_129ec, i32* @r5, align 4
  %v3_129fc = call i32 @function_12eb0(i32 %v0_129ec, i32 ptrtoint (i32* @global_var_1a69c.453 to i32), i32 22)
  store i32 21, i32* @r0, align 4
  %v0_12a08 = load i32, i32* @r5, align 4
  store i32 %v0_12a08, i32* @global_var_23768.454, align 4
  store i16 22, i16* bitcast (i32* @global_var_2376c.455 to i16*), align 4
  %v0_12a10 = call i32 @function_14798()
  store i32 %v0_12a10, i32* @r5, align 4
  %v3_12a20 = call i32 @function_12eb0(i32 %v0_12a10, i32 ptrtoint (i32* @global_var_1a6b4.457 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_23774.458 to i16*), align 4
  %v0_12a30 = load i32, i32* @r5, align 4
  store i32 %v0_12a30, i32* @global_var_23770.459, align 4
  %v0_12a34 = call i32 @function_14798()
  store i32 %v0_12a34, i32* @r5, align 4
  %v4_12a44 = call i32 @function_12eb0(i32 %v0_12a34, i32 ptrtoint ([18 x i8]* @global_var_1a6cc.461 to i32), i32 17)
  %v0_12a4c = load i32, i32* @r7, align 4
  store i32 %v0_12a4c, i32* @r0, align 4
  %v0_12a50 = load i32, i32* @r5, align 4
  store i32 %v0_12a50, i32* @global_var_23778.462, align 4
  store i16 17, i16* bitcast (i32* @global_var_2377c.463 to i16*), align 4
  %v0_12a58 = call i32 @function_14798()
  %v0_12a60 = load i32, i32* @r7, align 4
  store i32 %v0_12a58, i32* @r5, align 4
  %v3_12a68 = call i32 @function_12eb0(i32 %v0_12a58, i32 ptrtoint (i32* @global_var_1a6e0.465 to i32), i32 %v0_12a60)
  store i32 23, i32* @r0, align 4
  %v0_12a70 = load i32, i32* @r5, align 4
  store i32 %v0_12a70, i32* @global_var_23780.466, align 4
  %v0_12a74 = load i32, i32* @r7, align 4
  %v1_12a74 = trunc i32 %v0_12a74 to i16
  store i16 %v1_12a74, i16* bitcast (i32* @global_var_23784.467 to i16*), align 4
  %v0_12a78 = call i32 @function_14798()
  store i32 %v0_12a78, i32* @r5, align 4
  %v3_12a88 = call i32 @function_12eb0(i32 %v0_12a78, i32 ptrtoint (i32* @global_var_1a6f0.469 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_12a98 = load i32, i32* @r4, align 4
  %v4_12a98 = add i32 %v2_12a98, 260
  %v5_12a98 = inttoptr i32 %v4_12a98 to i16*
  store i16 23, i16* %v5_12a98, align 2
  %v0_12a9c = load i32, i32* @r5, align 4
  store i32 %v0_12a9c, i32* @global_var_23788.470, align 4
  %v0_12aa0 = call i32 @function_14798()
  store i32 %v0_12aa0, i32* @r5, align 4
  %v3_12ab0 = call i32 @function_12eb0(i32 %v0_12aa0, i32 ptrtoint (i32* @global_var_1a708.472 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_12ac0 = load i32, i32* @r4, align 4
  %v4_12ac0 = add i32 %v2_12ac0, 268
  %v5_12ac0 = inttoptr i32 %v4_12ac0 to i16*
  store i16 83, i16* %v5_12ac0, align 2
  %v0_12ac4 = load i32, i32* @r5, align 4
  store i32 %v0_12ac4, i32* @global_var_23790.473, align 4
  %v0_12ac8 = call i32 @function_14798()
  store i32 %v0_12ac8, i32* @r5, align 4
  %v3_12ad8 = call i32 @function_12eb0(i32 %v0_12ac8, i32 ptrtoint (i32* @global_var_1a75c.475 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_12ae8 = load i32, i32* @r4, align 4
  %v4_12ae8 = add i32 %v2_12ae8, 276
  %v5_12ae8 = inttoptr i32 %v4_12ae8 to i16*
  store i16 32, i16* %v5_12ae8, align 2
  %v0_12aec = load i32, i32* @r5, align 4
  store i32 %v0_12aec, i32* @global_var_23798.476, align 4
  %v0_12af0 = call i32 @function_14798()
  store i32 %v0_12af0, i32* @r5, align 4
  %v3_12b00 = call i32 @function_12eb0(i32 %v0_12af0, i32 ptrtoint (i32* @global_var_1a780.478 to i32), i32 48)
  %v0_12b0c = load i32, i32* @r7, align 4
  store i32 %v0_12b0c, i32* @r0, align 4
  %v2_12b10 = load i32, i32* @r4, align 4
  %v4_12b10 = add i32 %v2_12b10, 284
  %v5_12b10 = inttoptr i32 %v4_12b10 to i16*
  store i16 48, i16* %v5_12b10, align 2
  %v0_12b14 = load i32, i32* @r5, align 4
  store i32 %v0_12b14, i32* @global_var_237a0.479, align 4
  %v0_12b18 = call i32 @function_14798()
  %v0_12b20 = load i32, i32* @r7, align 4
  store i32 %v0_12b18, i32* @r5, align 4
  %v3_12b28 = call i32 @function_12eb0(i32 %v0_12b18, i32 ptrtoint (i32* @global_var_1a7b4.481 to i32), i32 %v0_12b20)
  %v0_12b30 = load i32, i32* @r6, align 4
  store i32 %v0_12b30, i32* @r0, align 4
  %v0_12b34 = load i32, i32* @r7, align 4
  %v1_12b34 = trunc i32 %v0_12b34 to i16
  %v2_12b34 = load i32, i32* @r4, align 4
  %v4_12b34 = add i32 %v2_12b34, 292
  %v5_12b34 = inttoptr i32 %v4_12b34 to i16*
  store i16 %v1_12b34, i16* %v5_12b34, align 2
  %v0_12b38 = load i32, i32* @r5, align 4
  store i32 %v0_12b38, i32* @global_var_237a8.482, align 4
  %v0_12b3c = call i32 @function_14798()
  %v0_12b40 = load i32, i32* @r6, align 4
  store i32 %v0_12b3c, i32* @r5, align 4
  %v3_12b4c = call i32 @function_12eb0(i32 %v0_12b3c, i32 ptrtoint (i32* @global_var_1a7c4.484 to i32), i32 %v0_12b40)
  %v0_12b54 = load i32, i32* @r8, align 4
  store i32 %v0_12b54, i32* @r0, align 4
  %v0_12b58 = load i32, i32* @r6, align 4
  %v1_12b58 = trunc i32 %v0_12b58 to i16
  %v2_12b58 = load i32, i32* @r4, align 4
  %v4_12b58 = add i32 %v2_12b58, 300
  %v5_12b58 = inttoptr i32 %v4_12b58 to i16*
  store i16 %v1_12b58, i16* %v5_12b58, align 2
  %v0_12b5c = load i32, i32* @r5, align 4
  store i32 %v0_12b5c, i32* @global_var_237b0.485, align 4
  %v0_12b60 = call i32 @function_14798()
  %v0_12b68 = load i32, i32* @r8, align 4
  store i32 %v0_12b60, i32* @r5, align 4
  %v3_12b70 = call i32 @function_12eb0(i32 %v0_12b60, i32 ptrtoint (i32* @global_var_1a7d0.487 to i32), i32 %v0_12b68)
  %v0_12b78 = load i32, i32* @r7, align 4
  store i32 %v0_12b78, i32* @r0, align 4
  %v0_12b7c = load i32, i32* @r8, align 4
  %v1_12b7c = trunc i32 %v0_12b7c to i16
  %v2_12b7c = load i32, i32* @r4, align 4
  %v4_12b7c = add i32 %v2_12b7c, 308
  %v5_12b7c = inttoptr i32 %v4_12b7c to i16*
  store i16 %v1_12b7c, i16* %v5_12b7c, align 2
  %v0_12b80 = load i32, i32* @r5, align 4
  store i32 %v0_12b80, i32* @global_var_237b8.488, align 4
  %v0_12b84 = call i32 @function_14798()
  %v0_12b8c = load i32, i32* @r7, align 4
  store i32 %v0_12b84, i32* @r5, align 4
  %v3_12b94 = call i32 @function_12eb0(i32 %v0_12b84, i32 ptrtoint (i32* @global_var_1a7dc.490 to i32), i32 %v0_12b8c)
  %v0_12b9c = load i32, i32* @sb, align 4
  store i32 %v0_12b9c, i32* @r0, align 4
  %v0_12ba0 = load i32, i32* @r7, align 4
  %v1_12ba0 = trunc i32 %v0_12ba0 to i16
  %v2_12ba0 = load i32, i32* @r4, align 4
  %v4_12ba0 = add i32 %v2_12ba0, 316
  %v5_12ba0 = inttoptr i32 %v4_12ba0 to i16*
  store i16 %v1_12ba0, i16* %v5_12ba0, align 2
  %v0_12ba4 = load i32, i32* @r5, align 4
  store i32 %v0_12ba4, i32* @global_var_237c0.491, align 4
  %v0_12ba8 = call i32 @function_14798()
  %v0_12bb0 = load i32, i32* @sb, align 4
  store i32 %v0_12ba8, i32* @r5, align 4
  %v3_12bb8 = call i32 @function_12eb0(i32 %v0_12ba8, i32 ptrtoint (i32* @global_var_1a7ec.493 to i32), i32 %v0_12bb0)
  store i32 19, i32* @r0, align 4
  %v0_12bc4 = load i32, i32* @sb, align 4
  %v1_12bc4 = trunc i32 %v0_12bc4 to i16
  %v2_12bc4 = load i32, i32* @r4, align 4
  %v4_12bc4 = add i32 %v2_12bc4, 324
  %v5_12bc4 = inttoptr i32 %v4_12bc4 to i16*
  store i16 %v1_12bc4, i16* %v5_12bc4, align 2
  %v0_12bc8 = load i32, i32* @r5, align 4
  store i32 %v0_12bc8, i32* @global_var_237c8.494, align 4
  %v0_12bcc = call i32 @function_14798()
  store i32 %v0_12bcc, i32* @r5, align 4
  %v3_12bdc = call i32 @function_12eb0(i32 %v0_12bcc, i32 ptrtoint (i32* @global_var_1a800.496 to i32), i32 19)
  %v0_12be8 = load i32, i32* @sl, align 4
  store i32 %v0_12be8, i32* @r0, align 4
  %v2_12bec = load i32, i32* @r4, align 4
  %v4_12bec = add i32 %v2_12bec, 332
  %v5_12bec = inttoptr i32 %v4_12bec to i16*
  store i16 19, i16* %v5_12bec, align 2
  %v0_12bf0 = load i32, i32* @r5, align 4
  store i32 %v0_12bf0, i32* @global_var_237d0.497, align 4
  %v0_12bf4 = call i32 @function_14798()
  %v0_12bfc = load i32, i32* @sl, align 4
  store i32 %v0_12bf4, i32* @r5, align 4
  %v4_12c04 = call i32 @function_12eb0(i32 %v0_12bf4, i32 ptrtoint ([9 x i8]* @global_var_1a814.499 to i32), i32 %v0_12bfc)
  %v0_12c0c = load i32, i32* @fp, align 4
  store i32 %v0_12c0c, i32* @r0, align 4
  %v0_12c10 = load i32, i32* @sl, align 4
  %v1_12c10 = trunc i32 %v0_12c10 to i16
  %v2_12c10 = load i32, i32* @r4, align 4
  %v4_12c10 = add i32 %v2_12c10, 340
  %v5_12c10 = inttoptr i32 %v4_12c10 to i16*
  store i16 %v1_12c10, i16* %v5_12c10, align 2
  %v0_12c14 = load i32, i32* @r5, align 4
  store i32 %v0_12c14, i32* @global_var_237d8.500, align 4
  %v0_12c18 = call i32 @function_14798()
  %v0_12c20 = load i32, i32* @fp, align 4
  store i32 %v0_12c18, i32* @r5, align 4
  %v3_12c28 = call i32 @function_12eb0(i32 %v0_12c18, i32 ptrtoint (i32* @global_var_1a6fc.502 to i32), i32 %v0_12c20)
  %v0_12c30 = load i32, i32* @r7, align 4
  store i32 %v0_12c30, i32* @r0, align 4
  %v0_12c34 = load i32, i32* @fp, align 4
  %v1_12c34 = trunc i32 %v0_12c34 to i16
  %v2_12c34 = load i32, i32* @r4, align 4
  %v4_12c34 = add i32 %v2_12c34, 348
  %v5_12c34 = inttoptr i32 %v4_12c34 to i16*
  store i16 %v1_12c34, i16* %v5_12c34, align 2
  %v0_12c38 = load i32, i32* @r5, align 4
  store i32 %v0_12c38, i32* @global_var_237e0.503, align 4
  %v0_12c3c = call i32 @function_14798()
  %v0_12c44 = load i32, i32* @r7, align 4
  store i32 %v0_12c3c, i32* @r5, align 4
  %v3_12c4c = call i32 @function_12eb0(i32 %v0_12c3c, i32 ptrtoint (i32* @global_var_1a820.505 to i32), i32 %v0_12c44)
  store i32 18, i32* @r0, align 4
  %v0_12c58 = load i32, i32* @r7, align 4
  %v1_12c58 = trunc i32 %v0_12c58 to i16
  %v2_12c58 = load i32, i32* @r4, align 4
  %v4_12c58 = add i32 %v2_12c58, 356
  %v5_12c58 = inttoptr i32 %v4_12c58 to i16*
  store i16 %v1_12c58, i16* %v5_12c58, align 2
  %v0_12c5c = load i32, i32* @r5, align 4
  store i32 %v0_12c5c, i32* @global_var_237e8.506, align 4
  %v0_12c60 = call i32 @function_14798()
  store i32 %v0_12c60, i32* @r5, align 4
  %v3_12c70 = call i32 @function_12eb0(i32 %v0_12c60, i32 ptrtoint (i32* @global_var_1a830.508 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_12c80 = load i32, i32* @r4, align 4
  %v4_12c80 = add i32 %v2_12c80, 364
  %v5_12c80 = inttoptr i32 %v4_12c80 to i16*
  store i16 18, i16* %v5_12c80, align 2
  %v0_12c84 = load i32, i32* @r5, align 4
  store i32 %v0_12c84, i32* @global_var_237f0.509, align 4
  %v0_12c88 = call i32 @function_14798()
  store i32 %v0_12c88, i32* %r5.global-to-local, align 4
  %v3_12c98 = call i32 @function_12eb0(i32 %v0_12c88, i32 ptrtoint (i32* @global_var_1a844.511 to i32), i32 25)
  store i32 111, i32* @r0, align 4
  %v2_12ca8 = load i32, i32* @r4, align 4
  %v4_12ca8 = add i32 %v2_12ca8, 372
  %v5_12ca8 = inttoptr i32 %v4_12ca8 to i16*
  store i16 25, i16* %v5_12ca8, align 2
  %v0_12cac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12cac, i32* @global_var_237f8.512, align 4
  %v0_12cb0 = load i32, i32* @r0, align 4
  store i32 %v0_12cb0, i32* @r5, align 4
  %v0_12cb4 = call i32 @function_14798()
  %v0_12cb8 = load i32, i32* @r5, align 4
  store i32 %v0_12cb4, i32* @r6, align 4
  %v3_12cc4 = call i32 @function_12eb0(i32 %v0_12cb4, i32 ptrtoint (i32* @global_var_1a860.514 to i32), i32 %v0_12cb8)
  %v0_12ccc = load i32, i32* @r5, align 4
  store i32 %v0_12ccc, i32* @r0, align 4
  %v1_12cd0 = trunc i32 %v0_12ccc to i16
  %v2_12cd0 = load i32, i32* @r4, align 4
  %v4_12cd0 = add i32 %v2_12cd0, 380
  %v5_12cd0 = inttoptr i32 %v4_12cd0 to i16*
  store i16 %v1_12cd0, i16* %v5_12cd0, align 2
  %v0_12cd4 = load i32, i32* @r6, align 4
  store i32 %v0_12cd4, i32* @global_var_23800.515, align 4
  %v0_12cd8 = call i32 @function_14798()
  %v0_12cdc = load i32, i32* @r5, align 4
  store i32 %v0_12cd8, i32* @r6, align 4
  %v3_12ce8 = call i32 @function_12eb0(i32 %v0_12cd8, i32 ptrtoint (i32* @global_var_1a8d0.517 to i32), i32 %v0_12cdc)
  store i32 110, i32* @r0, align 4
  %v0_12cf4 = load i32, i32* @r5, align 4
  %v1_12cf4 = trunc i32 %v0_12cf4 to i16
  %v2_12cf4 = load i32, i32* @r4, align 4
  %v4_12cf4 = add i32 %v2_12cf4, 388
  %v5_12cf4 = inttoptr i32 %v4_12cf4 to i16*
  store i16 %v1_12cf4, i16* %v5_12cf4, align 2
  %v0_12cf8 = load i32, i32* @r6, align 4
  store i32 %v0_12cf8, i32* @global_var_23808.518, align 4
  %v0_12cfc = load i32, i32* @r0, align 4
  store i32 %v0_12cfc, i32* @r5, align 4
  %v0_12d00 = call i32 @function_14798()
  %v0_12d04 = load i32, i32* @r5, align 4
  store i32 %v0_12d00, i32* @r6, align 4
  %v3_12d10 = call i32 @function_12eb0(i32 %v0_12d00, i32 ptrtoint (i32* @global_var_1a940.520 to i32), i32 %v0_12d04)
  %v0_12d18 = load i32, i32* @r5, align 4
  store i32 %v0_12d18, i32* @r0, align 4
  %v1_12d1c = trunc i32 %v0_12d18 to i16
  %v2_12d1c = load i32, i32* @r4, align 4
  %v4_12d1c = add i32 %v2_12d1c, 396
  %v5_12d1c = inttoptr i32 %v4_12d1c to i16*
  store i16 %v1_12d1c, i16* %v5_12d1c, align 2
  %v0_12d20 = load i32, i32* @r6, align 4
  store i32 %v0_12d20, i32* @global_var_23810.521, align 4
  %v0_12d24 = call i32 @function_14798()
  %v0_12d28 = load i32, i32* @r5, align 4
  store i32 %v0_12d24, i32* @r6, align 4
  %v3_12d34 = call i32 @function_12eb0(i32 %v0_12d24, i32 ptrtoint (i32* @global_var_1a9b0.523 to i32), i32 %v0_12d28)
  store i32 117, i32* @r0, align 4
  %v0_12d40 = load i32, i32* @r5, align 4
  %v1_12d40 = trunc i32 %v0_12d40 to i16
  %v2_12d40 = load i32, i32* @r4, align 4
  %v4_12d40 = add i32 %v2_12d40, 404
  %v5_12d40 = inttoptr i32 %v4_12d40 to i16*
  store i16 %v1_12d40, i16* %v5_12d40, align 2
  %v0_12d44 = load i32, i32* @r6, align 4
  store i32 %v0_12d44, i32* @global_var_23818.524, align 4
  %v0_12d48 = call i32 @function_14798()
  store i32 %v0_12d48, i32* %r5.global-to-local, align 4
  %v3_12d58 = call i32 @function_12eb0(i32 %v0_12d48, i32 ptrtoint (i32* @global_var_1aa20.526 to i32), i32 117)
  store i32 %v0_12d48, i32* @global_var_23820.527, align 4
  %v2_12d68 = load i32, i32* @r4, align 4
  %v4_12d68 = add i32 %v2_12d68, 412
  %v5_12d68 = inttoptr i32 %v4_12d68 to i16*
  store i16 117, i16* %v5_12d68, align 2
  store i32 %v6_12650, i32* %r5.global-to-local, align 4
  ret i32 %v3_12d58

; uselistorder directives
  uselistorder i32 %v0_12d24, { 1, 0 }
  uselistorder i32 %v0_12d00, { 1, 0 }
  uselistorder i32 %v0_12cd8, { 1, 0 }
  uselistorder i32 %v0_12cb4, { 1, 0 }
  uselistorder i32 %v0_12c3c, { 1, 0 }
  uselistorder i32 %v0_12c18, { 1, 0 }
  uselistorder i32 %v0_12bf4, { 1, 0 }
  uselistorder i32 %v0_12ba8, { 1, 0 }
  uselistorder i32 %v0_12b84, { 1, 0 }
  uselistorder i32 %v0_12b60, { 1, 0 }
  uselistorder i32 %v0_12b3c, { 1, 0 }
  uselistorder i32 %v0_12b18, { 1, 0 }
  uselistorder i32 %v0_12a58, { 1, 0 }
  uselistorder i32 %v0_129a4, { 1, 0 }
  uselistorder i32 %v0_12918, { 1, 0 }
  uselistorder i32 %v0_128f8, { 1, 0 }
  uselistorder i32 %v0_128b4, { 1, 0 }
  uselistorder i32 %v0_12894, { 1, 0 }
  uselistorder i32 %v0_12850, { 1, 0 }
  uselistorder i32 %v0_12830, { 1, 0 }
  uselistorder i32 %v0_127e4, { 1, 0 }
  uselistorder i32 %v0_127c4, { 1, 0 }
  uselistorder i32 %v0_1277c, { 1, 0 }
  uselistorder i32 %v0_12734, { 1, 0 }
  uselistorder i32 %v0_126cc, { 1, 0 }
  uselistorder i32 %v0_126ac, { 1, 0 }
  uselistorder i32 %v0_12688, { 1, 0 }
  uselistorder i32 %v0_1265c, { 1, 0 }
  uselistorder i32 18, { 1, 11, 2, 12, 3, 13, 4, 14, 10, 5, 0, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 17, { 1, 8, 18, 9, 10, 2, 3, 11, 4, 12, 5, 6, 13, 7, 14, 0, 15, 16, 17 }
  uselistorder i32 21, { 1, 6, 2, 7, 3, 8, 4, 9, 10, 5, 0, 11 }
  uselistorder i32 19, { 2, 7, 3, 8, 4, 9, 5, 10, 6, 11, 17, 12, 13, 14, 0, 15, 1, 16 }
  uselistorder i32 13, { 3, 10, 12, 13, 11, 51, 0, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 9, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 2, 49, 50 }
  uselistorder i32 11, { 3, 9, 10, 16, 17, 18, 19, 20, 4, 5, 11, 6, 12, 1, 13, 2, 14, 0, 15, 21, 7, 22, 23, 24, 8, 25, 26, 27 }
  uselistorder i32 29, { 0, 5, 6, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @function_12eb0, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23688.343 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_12e40(i8* %arg1) local_unnamed_addr {
dec_label_pc_12e40:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12e44 = load i8, i8* %arg1, align 1
  %v2_12e48 = icmp eq i8 %v3_12e44, 0
  %v0_12e4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12e48, i32 %v0_12e4c)
  br label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e54, %dec_label_pc_12e40
  %v0_12e54 = phi i32 [ %v1_12e54, %dec_label_pc_12e54 ], [ 0, %dec_label_pc_12e40 ]
  %v1_12e54 = add i32 %v0_12e54, 1
  %v2_12e58 = add i32 %v1_12e54, %tmp
  %v3_12e58 = inttoptr i32 %v2_12e58 to i8*
  %v4_12e58 = load i8, i8* %v3_12e58, align 1
  %v6_12e58 = zext i8 %v4_12e58 to i32
  store i32 %v6_12e58, i32* @r3, align 4
  %v2_12e5c = icmp eq i8 %v4_12e58, 0
  br i1 %v2_12e5c, label %dec_label_pc_12e64, label %dec_label_pc_12e54

dec_label_pc_12e64:                               ; preds = %dec_label_pc_12e54
  ret i32 %v1_12e54
}

define i32 @function_12e68(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e68:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12e68 = load i8, i8* %arg1, align 1
  %v3_12e68 = zext i8 %v2_12e68 to i32
  store i32 %v3_12e68, i32* @r2, align 4
  %v2_12e6c = icmp eq i8 %v2_12e68, 0
  br i1 %v2_12e6c, label %bb, label %dec_label_pc_12e78

bb:                                               ; preds = %dec_label_pc_12e68
  store i32 %v3_12e68, i32* @ip, align 4
  br label %dec_label_pc_12e8c

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e68
  br label %dec_label_pc_12e7c

dec_label_pc_12e7c:                               ; preds = %dec_label_pc_12e7c, %dec_label_pc_12e78
  %v0_12e7c = phi i32 [ %v1_12e7c, %dec_label_pc_12e7c ], [ 0, %dec_label_pc_12e78 ]
  %v1_12e7c = add i32 %v0_12e7c, 1
  store i32 %v1_12e7c, i32* @ip, align 4
  %v2_12e80 = add i32 %v1_12e7c, %tmp
  %v3_12e80 = inttoptr i32 %v2_12e80 to i8*
  %v4_12e80 = load i8, i8* %v3_12e80, align 1
  %v2_12e84 = icmp eq i8 %v4_12e80, 0
  br i1 %v2_12e84, label %dec_label_pc_12e8c, label %dec_label_pc_12e7c

dec_label_pc_12e8c:                               ; preds = %dec_label_pc_12e7c, %bb
  %v0_12e8c = phi i32 [ %v3_12e68, %bb ], [ %v1_12e7c, %dec_label_pc_12e7c ]
  br label %dec_label_pc_12e98

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12e98
  %v0_12e94 = load i32, i32* %r1.global-to-local, align 4
  %v1_12e94 = add i32 %v0_12e94, 1
  %v2_12e94 = inttoptr i32 %v1_12e94 to i8*
  %v3_12e94 = load i8, i8* %v2_12e94, align 1
  %v4_12e94 = zext i8 %v3_12e94 to i32
  store i32 %v4_12e94, i32* @r2, align 4
  store i32 %v1_12e94, i32* %r1.global-to-local, align 4
  %v0_12e98.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_12e98

dec_label_pc_12e98:                               ; preds = %dec_label_pc_12e8c, %dec_label_pc_12e94
  %v0_12ea0.off0 = phi i8 [ %v2_12e68, %dec_label_pc_12e8c ], [ %v3_12e94, %dec_label_pc_12e94 ]
  %v0_12e98 = phi i32 [ %v0_12e8c, %dec_label_pc_12e8c ], [ %v0_12e98.pr, %dec_label_pc_12e94 ]
  %v1_12e98 = add i32 %v0_12e98, -1
  store i32 %v1_12e98, i32* @r3, align 4
  %v3_12e9c = icmp eq i32 %v0_12e98, 0
  %v2_12ea0 = load i32, i32* @r0, align 4
  %v3_12ea0 = inttoptr i32 %v2_12ea0 to i8*
  store i8 %v0_12ea0.off0, i8* %v3_12ea0, align 1
  %v4_12ea0 = load i32, i32* @r0, align 4
  %v5_12ea0 = add i32 %v4_12ea0, 1
  store i32 %v5_12ea0, i32* @r0, align 4
  br i1 %v3_12e9c, label %dec_label_pc_12ea8, label %dec_label_pc_12e94

dec_label_pc_12ea8:                               ; preds = %dec_label_pc_12e98
  %v0_12ea8 = load i32, i32* @ip, align 4
  ret i32 %v0_12ea8

; uselistorder directives
  uselistorder i32 %v0_12e98, { 1, 0 }
  uselistorder i32 %v1_12e7c, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e98, { 1, 0 }
}

define i32 @function_12eb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12eb0:
  %ip.global-to-local = alloca i32, align 4
  %v2_12eb0 = icmp eq i32 %arg3, 0
  %v0_12eb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12eb0, i32 %v0_12eb4)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12ebc

dec_label_pc_12ebc:                               ; preds = %dec_label_pc_12ebc, %dec_label_pc_12eb0
  %v0_12ebc = phi i32 [ %v1_12ec4, %dec_label_pc_12ebc ], [ 0, %dec_label_pc_12eb0 ]
  %v2_12ebc = add i32 %v0_12ebc, %arg2
  %v3_12ebc = inttoptr i32 %v2_12ebc to i8*
  %v4_12ebc = load i8, i8* %v3_12ebc, align 1
  %v4_12ec0 = add i32 %v0_12ebc, %arg1
  %v5_12ec0 = inttoptr i32 %v4_12ec0 to i8*
  store i8 %v4_12ebc, i8* %v5_12ec0, align 1
  %v0_12ec4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ec4 = add i32 %v0_12ec4, 1
  store i32 %v1_12ec4, i32* %ip.global-to-local, align 4
  %v9_12ec8 = icmp eq i32 %v1_12ec4, %arg3
  br i1 %v9_12ec8, label %dec_label_pc_12ed0, label %dec_label_pc_12ebc

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ebc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12ec4, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12ed4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ed4:
  %r2.global-to-local = alloca i32, align 4
  %v2_12ed4 = icmp eq i32 %arg2, 0
  %v0_12ed8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12ed4, i32 %v0_12ed8)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ee0

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ee0, %dec_label_pc_12ed4
  %v2_12ee4 = phi i32 [ %v1_12ee8, %dec_label_pc_12ee0 ], [ 0, %dec_label_pc_12ed4 ]
  store i32 0, i32* @r3, align 4
  %v4_12ee4 = add i32 %v2_12ee4, %arg1
  %v5_12ee4 = inttoptr i32 %v4_12ee4 to i8*
  store i8 0, i8* %v5_12ee4, align 1
  %v0_12ee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ee8 = add i32 %v0_12ee8, 1
  store i32 %v1_12ee8, i32* %r2.global-to-local, align 4
  %v9_12eec = icmp eq i32 %v1_12ee8, %arg2
  br i1 %v9_12eec, label %dec_label_pc_12ef4, label %dec_label_pc_12ee0

dec_label_pc_12ef4:                               ; preds = %dec_label_pc_12ee0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12ee8, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12ef8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12ef8:
  %v7_12f0c = icmp sgt i32 %arg4, %arg2
  br i1 %v7_12f0c, label %dec_label_pc_12f14, label %dec_label_pc_12f1c

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12f30, %dec_label_pc_12f1c, %dec_label_pc_12ef8, %dec_label_pc_12f5c
  %storemerge = phi i32 [ %v1_12f5c, %dec_label_pc_12f5c ], [ -1, %dec_label_pc_12ef8 ], [ -1, %dec_label_pc_12f1c ], [ -1, %dec_label_pc_12f30 ]
  ret i32 %storemerge

dec_label_pc_12f1c:                               ; preds = %dec_label_pc_12ef8
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12f14, label %dec_label_pc_12f24

dec_label_pc_12f24:                               ; preds = %dec_label_pc_12f1c
  br label %dec_label_pc_12f3c

dec_label_pc_12f30:                               ; preds = %bb, %dec_label_pc_12f50
  %v1_12f3c3 = phi i32 [ %v1_12f50, %dec_label_pc_12f50 ], [ 0, %bb ]
  %v1_12f30 = add i32 %v0_12f5c, 1
  %v9_12f34 = icmp eq i32 %v1_12f30, %arg2
  br i1 %v9_12f34, label %dec_label_pc_12f14, label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f30, %dec_label_pc_12f24
  %v0_12f5c = phi i32 [ %v1_12f30, %dec_label_pc_12f30 ], [ 0, %dec_label_pc_12f24 ]
  %v1_12f3c = phi i32 [ %v1_12f3c3, %dec_label_pc_12f30 ], [ 0, %dec_label_pc_12f24 ]
  %v2_12f3c = add i32 %v1_12f3c, %arg3
  %v3_12f3c = inttoptr i32 %v2_12f3c to i8*
  %v4_12f3c = load i8, i8* %v3_12f3c, align 1
  %v2_12f40 = add i32 %v0_12f5c, %arg1
  %v3_12f40 = inttoptr i32 %v2_12f40 to i8*
  %v4_12f40 = load i8, i8* %v3_12f40, align 1
  %v9_12f44 = icmp eq i8 %v4_12f40, %v4_12f3c
  br i1 %v9_12f44, label %dec_label_pc_12f50, label %bb

bb:                                               ; preds = %dec_label_pc_12f3c
  br label %dec_label_pc_12f30

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12f3c
  %v1_12f50 = add i32 %v1_12f3c, 1
  %v9_12f54 = icmp eq i32 %v1_12f50, %arg4
  br i1 %v9_12f54, label %dec_label_pc_12f5c, label %dec_label_pc_12f30

dec_label_pc_12f5c:                               ; preds = %dec_label_pc_12f50
  %v1_12f5c = add i32 %v0_12f5c, 1
  br label %dec_label_pc_12f14

; uselistorder directives
  uselistorder i32 %v1_12f50, { 1, 0 }
  uselistorder i32 %v1_12f3c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12f30, { 1, 0 }
  uselistorder label %dec_label_pc_12f14, { 3, 0, 1, 2 }
}

define i32 @function_12f64(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f64:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12f64 = load i32, i32* @r4, align 4
  %v6_12f64 = load i32, i32* @r5, align 4
  %v12_12f64 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12f74

dec_label_pc_12f74:                               ; preds = %.thread, %dec_label_pc_12f88, %bb, %dec_label_pc_12f64
  %v0_12f74 = phi i32 [ %tmp, %dec_label_pc_12f64 ], [ %v5_12f74, %bb ], [ %v5_12f74, %dec_label_pc_12f88 ], [ %v5_12f74, %.thread ]
  %v1_12f74 = inttoptr i32 %v0_12f74 to i8*
  %v2_12f74 = load i8, i8* %v1_12f74, align 1
  %v5_12f74 = add i32 %v0_12f74, 1
  store i32 %v5_12f74, i32* @r5, align 4
  %v7_12f78 = icmp eq i8 %v2_12f74, 9
  br i1 %v7_12f78, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12f74
  br label %dec_label_pc_12f74

bb:                                               ; preds = %dec_label_pc_12f74
  %v3_12f74 = zext i8 %v2_12f74 to i32
  %v8_12f7c = icmp eq i8 %v2_12f74, 32
  store i32 %v3_12f74, i32* @r4, align 4
  br i1 %v8_12f7c, label %dec_label_pc_12f74, label %dec_label_pc_12f88

dec_label_pc_12f88:                               ; preds = %bb
  %v7_12f88 = icmp eq i8 %v2_12f74, 10
  br i1 %v7_12f88, label %dec_label_pc_12f74, label %dec_label_pc_12f90

dec_label_pc_12f90:                               ; preds = %dec_label_pc_12f88
  %v7_12f90 = icmp eq i8 %v2_12f74, 45
  br i1 %v7_12f90, label %dec_label_pc_13080, label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f90
  %v7_12f98 = icmp eq i8 %v2_12f74, 43
  br i1 %v7_12f98, label %bb44, label %dec_label_pc_12fa8

bb44:                                             ; preds = %dec_label_pc_12f98
  %v2_12f9c = inttoptr i32 %v5_12f74 to i8*
  %v3_12f9c = load i8, i8* %v2_12f9c, align 1
  %v4_12f9c = zext i8 %v3_12f9c to i32
  store i32 %v4_12f9c, i32* @r4, align 4
  %v6_12f9c = add i32 %v0_12f74, 2
  store i32 %v6_12f9c, i32* @r5, align 4
  br label %dec_label_pc_12fa8

dec_label_pc_12fa8:                               ; preds = %bb44, %dec_label_pc_12f98, %dec_label_pc_13080
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_13080 ], [ 2147483647, %dec_label_pc_12f98 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_13080 ], [ 0, %dec_label_pc_12f98 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_12fb0 = call i32 @function_13538(i32 %storemerge1, i32 %arg2)
  %v0_12fb4 = load i32, i32* @r7, align 4
  store i32 %v0_12fb4, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_12fbc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12fbc, i32* @r1, align 4
  %v0_12fc0 = call i32 @function_1343c()
  %v0_12fd0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12fd0.outer

dec_label_pc_12fd0.outer:                         ; preds = %.thread5, %dec_label_pc_12fa8
  %v2_1304c.ph = phi i32 [ %v5_1304c, %.thread5 ], [ 0, %dec_label_pc_12fa8 ]
  %v1_13010.ph = phi i32 [ %v4_13050, %.thread5 ], [ %v0_12fd0.pre, %dec_label_pc_12fa8 ]
  %v1_13028.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_12fa8 ]
  %v3_1301c = icmp uge i32 %v2_1304c.ph, %v0_12fc0
  %v9_1301c = icmp eq i32 %v2_1304c.ph, %v0_12fc0
  %v2_13020 = xor i1 %v3_1301c, true
  %v3_13020 = or i1 %v9_1301c, %v2_13020
  %v2_13024 = xor i1 %v9_1301c, true
  %v3_13024 = and i1 %v3_1301c, %v2_13024
  %v2_13044 = icmp eq i1 %v9_1301c, false
  br label %dec_label_pc_12fd0

dec_label_pc_12fd0:                               ; preds = %dec_label_pc_12fd0.outer, %dec_label_pc_13058
  %v1_13028 = phi i32 [ -1, %dec_label_pc_13058 ], [ %v1_13028.ph, %dec_label_pc_12fd0.outer ]
  %v1_13010 = phi i32 [ %v3_13058, %dec_label_pc_13058 ], [ %v1_13010.ph, %dec_label_pc_12fd0.outer ]
  %v1_12fd0 = urem i32 %v1_13010, 256
  %v1_12fd4 = add nsw i32 %v1_12fd0, -48
  %v1_12fdc = add nsw i32 %v1_12fd0, -97
  %v1_12fe0 = add i32 %v1_13010, -48
  store i32 %v1_12fe0, i32* @r2, align 4
  %v1_12fe4 = add nsw i32 %v1_12fd0, -65
  %tmp75 = icmp ult i32 %v1_12fd4, 10
  br i1 %tmp75, label %dec_label_pc_13014, label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fd0
  %v2_12fec = icmp ugt i32 %v1_12fe4, 24
  %v7_12fec = icmp eq i32 %v1_12fe4, 25
  %v2_12ff0 = xor i1 %v7_12fec, true
  %v3_12ff0 = and i1 %v2_12fec, %v2_12ff0
  br i1 %v3_12ff0, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_12fec
  store i32 0, i32* @r2, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_12fec, %bb45
  %v0_1300414 = phi i32 [ %v1_12fe0, %dec_label_pc_12fec ], [ 0, %bb45 ]
  %v2_12ff4 = xor i1 %v2_12fec, true
  %v3_12ff4 = or i1 %v7_12fec, %v2_12ff4
  br i1 %v3_12ff4, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  store i32 1, i32* @r2, align 4
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_13004 = phi i32 [ %v0_1300414, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_12ff0, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_12ffc = icmp ugt i32 %v1_12fdc, 24
  %v11_12ffc = icmp eq i32 %v1_12fdc, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_13000 = phi i1 [ %v7_12fec, %bb48 ], [ %v11_12ffc, %bb49 ]
  %v0_13000 = phi i1 [ %v2_12fec, %bb48 ], [ %v6_12ffc, %bb49 ]
  %v2_13000 = xor i1 %v1_13000, true
  %v3_13000 = and i1 %v0_13000, %v2_13000
  br i1 %v3_13000, label %dec_label_pc_13064, label %dec_label_pc_13004

dec_label_pc_13004:                               ; preds = %bb50
  %v2_13004 = icmp eq i32 %v0_13004, 0
  %. = select i1 %v2_13004, i32 87, i32 55
  %v2_13010 = sub i32 %v1_13010, %.
  store i32 %v2_13010, i32* @r2, align 4
  br label %dec_label_pc_13014

dec_label_pc_13014:                               ; preds = %dec_label_pc_12fd0, %dec_label_pc_13004
  %v0_1302829 = phi i32 [ %v1_12fe4, %dec_label_pc_12fd0 ], [ %., %dec_label_pc_13004 ]
  %v3_1304c = phi i32 [ %v1_12fe0, %dec_label_pc_12fd0 ], [ %v2_13010, %dec_label_pc_13004 ]
  %v1_13014 = load i32, i32* %r6.global-to-local, align 4
  %v2_13014 = sub i32 %v3_1304c, %v1_13014
  %v4_13014 = xor i32 %v1_13014, %v3_1304c
  %v5_13014 = xor i32 %v2_13014, %v3_1304c
  %v6_13014 = and i32 %v5_13014, %v4_13014
  %v7_13014 = icmp slt i32 %v6_13014, 0
  %v8_13014 = icmp slt i32 %v2_13014, 0
  %v2_13018 = xor i1 %v8_13014, %v7_13014
  br i1 %v2_13018, label %dec_label_pc_1301c, label %dec_label_pc_13064

dec_label_pc_1301c:                               ; preds = %dec_label_pc_13014
  br i1 %v3_13020, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_1301c
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_1301c, %bb53
  %v0_1302828 = phi i32 [ %v0_1302829, %dec_label_pc_1301c ], [ 0, %bb53 ]
  br i1 %v3_13024, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_13028 = phi i32 [ %v0_1302828, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_13028, 0
  %v4_13028 = zext i1 %tmp76 to i32
  %v5_13028 = or i32 %v0_13028, %v4_13028
  %v7_13028 = icmp eq i32 %v5_13028, 0
  br i1 %v7_13028, label %dec_label_pc_13030, label %dec_label_pc_13058

dec_label_pc_13030:                               ; preds = %bb56
  %v1_1303c = load i32, i32* %r8.global-to-local, align 4
  %v2_1303c = sub i32 %v3_1304c, %v1_1303c
  %v4_1303c = xor i32 %v1_1303c, %v3_1304c
  %v5_1303c = xor i32 %v2_1303c, %v3_1304c
  %v6_1303c = and i32 %v5_1303c, %v4_1303c
  %v7_1303c = icmp slt i32 %v6_1303c, 0
  %v8_1303c = icmp slt i32 %v2_1303c, 0
  %v9_1303c = icmp eq i32 %v3_1304c, %v1_1303c
  %v3_13040 = xor i1 %v8_1303c, %v7_1303c
  %v4_13040 = or i1 %v9_1303c, %v3_13040
  br i1 %v4_13040, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_13030
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_13030
  br i1 %v2_13044, label %.thread5, label %dec_label_pc_13058

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_1304c = mul i32 %v1_13014, %v2_1304c.ph
  %v5_1304c = add i32 %v4_1304c, %v3_1304c
  %v1_13050 = load i32, i32* @r5, align 4
  %v2_13050 = inttoptr i32 %v1_13050 to i8*
  %v3_13050 = load i8, i8* %v2_13050, align 1
  %v4_13050 = zext i8 %v3_13050 to i32
  %v6_13050 = add i32 %v1_13050, 1
  store i32 %v6_13050, i32* @r5, align 4
  br label %dec_label_pc_12fd0.outer

dec_label_pc_13058:                               ; preds = %thread-pre-split, %bb56
  %v0_13058 = load i32, i32* @r5, align 4
  %v1_13058 = inttoptr i32 %v0_13058 to i8*
  %v2_13058 = load i8, i8* %v1_13058, align 1
  %v3_13058 = zext i8 %v2_13058 to i32
  %v5_13058 = add i32 %v0_13058, 1
  store i32 %v5_13058, i32* @r5, align 4
  br label %dec_label_pc_12fd0

dec_label_pc_13064:                               ; preds = %dec_label_pc_13014, %bb50
  %v1_13064 = icmp slt i32 %v1_13028, 0
  %v0_13090 = load i32, i32* %sl.global-to-local, align 4
  %v2_13090 = icmp eq i32 %v0_13090, 0
  br i1 %v1_13064, label %dec_label_pc_13090, label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13064
  br i1 %v2_13090, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_1306c
  %v2_13070 = sub i32 0, %v2_1304c.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_1306c, %bb59
  %v1_1307c = phi i32 [ -2147483648, %bb61 ], [ %v2_1304c.ph, %dec_label_pc_1306c ], [ %v2_13070, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_12f64, i32* @r4, align 4
  store i32 %v6_12f64, i32* @r5, align 4
  store i32 %v12_12f64, i32* @r7, align 4
  ret i32 %v1_1307c

dec_label_pc_13080:                               ; preds = %dec_label_pc_12f90
  %v1_13080 = inttoptr i32 %v5_12f74 to i8*
  %v2_13080 = load i8, i8* %v1_13080, align 1
  %v3_13080 = zext i8 %v2_13080 to i32
  store i32 %v3_13080, i32* @r4, align 4
  %v5_13080 = add i32 %v0_12f74, 2
  store i32 %v5_13080, i32* @r5, align 4
  br label %dec_label_pc_12fa8

dec_label_pc_13090:                               ; preds = %dec_label_pc_13064
  br i1 %v2_13090, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_13090
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_13090
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_13090, { 1, 0 }
  uselistorder i32 %v2_1303c, { 1, 0 }
  uselistorder i32 %v1_1303c, { 1, 0, 2 }
  uselistorder i32 %v2_13014, { 1, 0 }
  uselistorder i32 %v3_1304c, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_12fec, { 1, 2, 0 }
  uselistorder i1 %v2_12fec, { 1, 0, 2 }
  uselistorder i32 %v1_12fd0, { 1, 2, 0 }
  uselistorder i32 %v1_13010, { 1, 2, 0 }
  uselistorder i32 %v1_13028, { 1, 0 }
  uselistorder i1 %v9_1301c, { 1, 0, 2 }
  uselistorder i1 %v3_1301c, { 1, 0 }
  uselistorder i32 %v2_1304c.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_12fc0, { 1, 0 }
  uselistorder i32 %v5_12f74, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_12f74, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_12f74, { 0, 1, 3, 2 }
  uselistorder i8 9, { 5, 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_13014, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_12fd0, { 1, 0 }
  uselistorder label %dec_label_pc_12fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f74, { 1, 2, 0, 3 }
}

define i32 @function_130a0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130a0:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_130a0 = load i32, i32* @r4, align 4
  store i32 %v3_130a0, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_130dc.dec_label_pc_130b8_crit_edge, %dec_label_pc_130a0
  %v0_130bc = phi i32 [ %v0_130bc.pre, %dec_label_pc_130dc.dec_label_pc_130b8_crit_edge ], [ %arg3, %dec_label_pc_130a0 ]
  %v0_130b8 = phi i32 [ %v5_130dc, %dec_label_pc_130dc.dec_label_pc_130b8_crit_edge ], [ %tmp, %dec_label_pc_130a0 ]
  %v4_130c4 = call i32 @function_166b8(i32 %v0_130bc, i32 %v0_130b8, i32 1)
  %v7_130c8 = icmp eq i32 %v4_130c4, 1
  %v0_130d0 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_130c8, label %dec_label_pc_130d0, label %dec_label_pc_130e8

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130b8
  %v1_130d0 = add i32 %v0_130d0, 1
  store i32 %v1_130d0, i32* %r5.global-to-local, align 4
  %v1_130d4 = load i32, i32* %r8.global-to-local, align 4
  %v6_130d8 = icmp slt i32 %v1_130d0, %v1_130d4
  br i1 %v6_130d8, label %dec_label_pc_130dc, label %.loopexit

dec_label_pc_130dc:                               ; preds = %dec_label_pc_130d0
  %v0_130dc = load i32, i32* @r4, align 4
  %v1_130dc = inttoptr i32 %v0_130dc to i8*
  %v2_130dc = load i8, i8* %v1_130dc, align 1
  %v5_130dc = add i32 %v0_130dc, 1
  store i32 %v5_130dc, i32* @r4, align 4
  %v7_130e0 = icmp eq i8 %v2_130dc, 10
  br i1 %v7_130e0, label %dec_label_pc_130e8, label %dec_label_pc_130dc.dec_label_pc_130b8_crit_edge

dec_label_pc_130dc.dec_label_pc_130b8_crit_edge:  ; preds = %dec_label_pc_130dc
  %v0_130bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_130b8

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130b8, %dec_label_pc_130dc
  %v0_130e8 = phi i32 [ %v1_130d0, %dec_label_pc_130dc ], [ %v0_130d0, %dec_label_pc_130b8 ]
  %v2_130e8 = icmp eq i32 %v0_130e8, 0
  br i1 %v2_130e8, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_130e8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_130d0, %dec_label_pc_130e8, %bb
  %v0_130f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_130f4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_130f4, i32* @r4, align 4
  ret i32 %v0_130f0

; uselistorder directives
  uselistorder i32 %v5_130dc, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_166b8, { 2, 3, 0, 1 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_130e8, { 1, 0 }
}

define i32 @function_130fc() local_unnamed_addr {
dec_label_pc_130fc:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_130fc = load i32, i32* @r4, align 4
  %v6_130fc = load i32, i32* @r5, align 4
  %v9_130fc = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_1310c = call i32 @function_139e8()
  store i32 0, i32* @r4, align 4
  %v2_13114 = inttoptr i32 %v0_1310c to i32*
  store i32 0, i32* %v2_13114, align 4
  %v0_13120 = load i32, i32* @r4, align 4
  %v3_13124 = call i32 @function_15670(i32 2, i32 2, i32 %v0_13120)
  %v7_13128 = icmp eq i32 %v3_13124, -1
  store i32 %v3_13124, i32* @r5, align 4
  br i1 %v7_13128, label %bb, label %dec_label_pc_13138

bb:                                               ; preds = %dec_label_pc_130fc
  %v1_13130 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13190

dec_label_pc_13138:                               ; preds = %dec_label_pc_130fc
  store i32 2, i32* %stack_var_-36, align 4
  %v1_1314c = call i32 @function_15344(i32 134744072)
  %v1_13158 = call i32 @function_15368(i32 53)
  %v2_1315c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1315c, i32* @r4, align 4
  %v0_13164 = load i32, i32* @r6, align 4
  %v0_1316c = load i32, i32* @r5, align 4
  %v3_13170 = call i32 @function_152b4(i32 %v0_1316c, i32 %v2_1315c, i32 %v0_13164)
  %v2_13178 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_13178, i32* @r2, align 4
  %v0_1317c = load i32, i32* @r5, align 4
  %v3_13180 = call i32 @function_152f8(i32 %v0_1317c, i32 %v2_1315c, i32 %v2_13178)
  %v0_13184 = load i32, i32* @r5, align 4
  store i32 %v0_13184, i32* @r0, align 4
  %v1_13188 = call i32 @function_1663c(i32 %v0_13184)
  br label %dec_label_pc_13190

dec_label_pc_13190:                               ; preds = %bb, %dec_label_pc_13138
  %storemerge = phi i32 [ %v1_1314c, %dec_label_pc_13138 ], [ %v1_13130, %bb ]
  store i32 %v3_130fc, i32* @r4, align 4
  store i32 %v6_130fc, i32* @r5, align 4
  store i32 %v9_130fc, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_13124, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_152b4, { 2, 11, 1, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @function_15368, { 10, 9, 8, 7, 2, 1, 5, 4, 102, 101, 100, 99, 98, 97, 96, 103, 95, 94, 93, 92, 91, 90, 89, 88, 87, 3, 6, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 72, 71, 75, 74, 73, 70, 66, 65, 69, 68, 67, 64, 63, 62, 61, 60, 59, 54, 53, 58, 57, 56, 55, 52, 51, 47, 46, 50, 49, 48, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 23, 22, 29, 28, 27, 26, 25, 24, 21, 20, 12, 11, 19, 18, 17, 16, 15, 14, 13, 0 }
  uselistorder i32 53, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32)* @function_15344, { 7, 6, 1, 19, 20, 18, 5, 4, 3, 2, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15670, { 3, 24, 1, 2, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder label %dec_label_pc_13190, { 1, 0 }
}

define i32 @function_1319c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1319c:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_131a0 = load i8, i8* %tmp, align 1
  %v2_131a4 = icmp eq i8 %v3_131a0, 0
  br i1 %v2_131a4, label %bb, label %dec_label_pc_131b8

bb:                                               ; preds = %dec_label_pc_1319c
  %v4_131a0 = zext i8 %v3_131a0 to i32
  br label %dec_label_pc_131cc

dec_label_pc_131b8:                               ; preds = %dec_label_pc_1319c
  br label %dec_label_pc_131bc

dec_label_pc_131bc:                               ; preds = %dec_label_pc_131bc, %dec_label_pc_131b8
  %v0_131bc = phi i32 [ %v1_131bc, %dec_label_pc_131bc ], [ 0, %dec_label_pc_131b8 ]
  %v1_131bc = add i32 %v0_131bc, 1
  %v2_131c0 = add i32 %v1_131bc, %arg2
  %v3_131c0 = inttoptr i32 %v2_131c0 to i8*
  %v4_131c0 = load i8, i8* %v3_131c0, align 1
  %v2_131c4 = icmp eq i8 %v4_131c0, 0
  br i1 %v2_131c4, label %dec_label_pc_131cc, label %dec_label_pc_131bc

dec_label_pc_131cc:                               ; preds = %dec_label_pc_131bc, %bb
  %v0_1321021 = phi i32 [ %v4_131a0, %bb ], [ %v1_131bc, %dec_label_pc_131bc ]
  store i32 0, i32* @r2, align 4
  %v0_131d42 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_131d42, 1
  br i1 %tmp29, label %dec_label_pc_13224, label %dec_label_pc_131e0

dec_label_pc_131e0:                               ; preds = %dec_label_pc_131cc, %dec_label_pc_131d4.backedge
  %v0_131d8.in = phi i32 [ %v0_131d8, %dec_label_pc_131d4.backedge ], [ %v0_131d42, %dec_label_pc_131cc ]
  %v1_131ec = phi i32 [ %v1_131ec15, %dec_label_pc_131d4.backedge ], [ 0, %dec_label_pc_131cc ]
  %v0_131e0 = phi i32 [ %v5_131e0, %dec_label_pc_131d4.backedge ], [ %tmp23, %dec_label_pc_131cc ]
  %v0_131d8 = add i32 %v0_131d8.in, -1
  %v1_131e0 = inttoptr i32 %v0_131e0 to i8*
  %v2_131e0 = load i8, i8* %v1_131e0, align 1
  %v3_131e0 = zext i8 %v2_131e0 to i32
  store i32 %v3_131e0, i32* @ip, align 4
  %v5_131e0 = add i32 %v0_131e0, 1
  %v1_131e4 = add nsw i32 %v3_131e0, -65
  %v2_131ec = add i32 %v1_131ec, %arg2
  %v3_131ec = inttoptr i32 %v2_131ec to i8*
  %v4_131ec = load i8, i8* %v3_131ec, align 1
  %v6_131ec = zext i8 %v4_131ec to i32
  %v1_131f0 = add nsw i32 %v6_131ec, -65
  %tmp38 = icmp ult i32 %v1_131e4, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_131e0
  %v5_131f4 = or i32 %v3_131e0, 96
  store i32 %v5_131f4, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_131e0, %bb30
  %v0_13200 = phi i32 [ %v3_131e0, %dec_label_pc_131e0 ], [ %v5_131f4, %bb30 ]
  %tmp39 = icmp ult i32 %v1_131f0, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_131fc = or i32 %v6_131ec, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_13200 = phi i32 [ %v6_131ec, %bb31 ], [ %v5_131fc, %bb32 ]
  %v9_13200 = icmp eq i32 %v0_13200, %v1_13200
  br i1 %v9_13200, label %dec_label_pc_1320c, label %bb34

bb34:                                             ; preds = %bb33
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_131d4.backedge

dec_label_pc_131d4.backedge:                      ; preds = %bb34, %dec_label_pc_1320c
  %v1_131ec15 = phi i32 [ 0, %bb34 ], [ %v1_1320c, %dec_label_pc_1320c ]
  %tmp35 = icmp slt i32 %v0_131d8, 1
  br i1 %tmp35, label %dec_label_pc_13224, label %dec_label_pc_131e0

dec_label_pc_1320c:                               ; preds = %bb33
  %v1_1320c = add i32 %v1_131ec, 1
  store i32 %v1_1320c, i32* @r2, align 4
  %v9_13210 = icmp eq i32 %v0_1321021, %v1_1320c
  br i1 %v9_13210, label %dec_label_pc_13218, label %dec_label_pc_131d4.backedge

dec_label_pc_13218:                               ; preds = %dec_label_pc_1320c
  %v2_13218 = sub i32 %v5_131e0, %tmp23
  br label %dec_label_pc_13224

dec_label_pc_13224:                               ; preds = %dec_label_pc_131d4.backedge, %dec_label_pc_131cc, %dec_label_pc_13218
  %storemerge = phi i32 [ %v2_13218, %dec_label_pc_13218 ], [ -1, %dec_label_pc_131cc ], [ -1, %dec_label_pc_131d4.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1320c, { 1, 2, 0 }
  uselistorder i32 %v0_131e0, { 1, 0 }
  uselistorder i32 %v1_131ec, { 1, 0 }
  uselistorder i8 %v3_131a0, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_13224, { 2, 0, 1 }
  uselistorder label %dec_label_pc_131d4.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_131e0, { 1, 0 }
}

define i32 @function_1322c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1322c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1322c = load i8, i8* %arg1, align 1
  %v2_13230 = icmp eq i8 %v2_1322c, 0
  br i1 %v2_13230, label %bb, label %dec_label_pc_1323c

bb:                                               ; preds = %dec_label_pc_1322c
  %v3_1322c = zext i8 %v2_1322c to i32
  br label %dec_label_pc_13250

dec_label_pc_1323c:                               ; preds = %dec_label_pc_1322c
  br label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %dec_label_pc_13240, %dec_label_pc_1323c
  %v0_13240 = phi i32 [ %v1_13240, %dec_label_pc_13240 ], [ 0, %dec_label_pc_1323c ]
  %v1_13240 = add i32 %v0_13240, 1
  %v2_13244 = add i32 %v1_13240, %tmp
  %v3_13244 = inttoptr i32 %v2_13244 to i8*
  %v4_13244 = load i8, i8* %v3_13244, align 1
  %v2_13248 = icmp eq i8 %v4_13244, 0
  br i1 %v2_13248, label %dec_label_pc_13250, label %dec_label_pc_13240

dec_label_pc_13250:                               ; preds = %dec_label_pc_13240, %bb
  %v0_1329c3 = phi i32 [ %v3_1322c, %bb ], [ %v1_13240, %dec_label_pc_13240 ]
  %v1_13250 = inttoptr i32 %arg2 to i8*
  %v2_13250 = load i8, i8* %v1_13250, align 1
  %v3_13250 = zext i8 %v2_13250 to i32
  %v2_13254 = icmp eq i8 %v2_13250, 0
  br i1 %v2_13254, label %bb21, label %dec_label_pc_13260

bb21:                                             ; preds = %dec_label_pc_13250
  store i32 %v3_13250, i32* @r2, align 4
  br label %dec_label_pc_13274

dec_label_pc_13260:                               ; preds = %dec_label_pc_13250
  br label %dec_label_pc_13264

dec_label_pc_13264:                               ; preds = %dec_label_pc_13264, %dec_label_pc_13260
  %v0_13264 = phi i32 [ %v1_13264, %dec_label_pc_13264 ], [ 0, %dec_label_pc_13260 ]
  %v1_13264 = add i32 %v0_13264, 1
  store i32 %v1_13264, i32* @r2, align 4
  %v2_13268 = add i32 %v1_13264, %arg2
  %v3_13268 = inttoptr i32 %v2_13268 to i8*
  %v4_13268 = load i8, i8* %v3_13268, align 1
  %v2_1326c = icmp eq i8 %v4_13268, 0
  br i1 %v2_1326c, label %dec_label_pc_13274, label %dec_label_pc_13264

dec_label_pc_13274:                               ; preds = %dec_label_pc_13264, %bb21
  %v1_13274 = phi i32 [ %v3_13250, %bb21 ], [ %v1_13264, %dec_label_pc_13264 ]
  %v9_13274 = icmp eq i32 %v0_1329c3, %v1_13274
  br i1 %v9_13274, label %dec_label_pc_1329c.preheader, label %dec_label_pc_1327c

dec_label_pc_1329c.preheader:                     ; preds = %dec_label_pc_13274
  %v2_1329c5 = icmp eq i32 %v0_1329c3, 0
  br i1 %v2_1329c5, label %dec_label_pc_132a4, label %dec_label_pc_13284

dec_label_pc_1327c:                               ; preds = %dec_label_pc_13284, %dec_label_pc_13274
  ret i32 0

dec_label_pc_13284:                               ; preds = %dec_label_pc_13294, %dec_label_pc_1329c.preheader
  %v0_1329c.in = phi i32 [ %v0_1329c, %dec_label_pc_13294 ], [ %v0_1329c3, %dec_label_pc_1329c.preheader ]
  %v0_13298 = phi i32 [ %v1_13298, %dec_label_pc_13294 ], [ %arg2, %dec_label_pc_1329c.preheader ]
  %v0_13294 = phi i32 [ %v1_13294, %dec_label_pc_13294 ], [ %tmp, %dec_label_pc_1329c.preheader ]
  %v0_1329c = add i32 %v0_1329c.in, -1
  %v1_13284 = inttoptr i32 %v0_13294 to i8*
  %v2_13284 = load i8, i8* %v1_13284, align 1
  %v3_13284 = zext i8 %v2_13284 to i32
  store i32 %v3_13284, i32* @r2, align 4
  %v1_13288 = inttoptr i32 %v0_13298 to i8*
  %v2_13288 = load i8, i8* %v1_13288, align 1
  %v9_1328c = icmp eq i8 %v2_13284, %v2_13288
  br i1 %v9_1328c, label %dec_label_pc_13294, label %dec_label_pc_1327c

dec_label_pc_13294:                               ; preds = %dec_label_pc_13284
  %v1_13294 = add i32 %v0_13294, 1
  %v1_13298 = add i32 %v0_13298, 1
  %v2_1329c = icmp eq i32 %v0_1329c, 0
  br i1 %v2_1329c, label %dec_label_pc_132a4, label %dec_label_pc_13284

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13294, %dec_label_pc_1329c.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_13264, { 0, 1, 3, 2 }
  uselistorder i8 %v2_1322c, { 1, 0 }
}

define i32 @function_132ac(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_132ac:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_132b0 = load i8, i8* %arg1, align 1
  %v2_132b4 = icmp eq i8 %v2_132b0, 0
  %v0_132b8 = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_132b4, label %bb, label %dec_label_pc_132c4

bb:                                               ; preds = %dec_label_pc_132ac
  %v3_132b0 = zext i8 %v2_132b0 to i32
  br label %dec_label_pc_132d8

dec_label_pc_132c4:                               ; preds = %dec_label_pc_132ac
  br label %dec_label_pc_132c8

dec_label_pc_132c8:                               ; preds = %dec_label_pc_132c8, %dec_label_pc_132c4
  %v0_132c8 = phi i32 [ %v1_132c8, %dec_label_pc_132c8 ], [ 0, %dec_label_pc_132c4 ]
  %v1_132c8 = add i32 %v0_132c8, 1
  %v2_132cc = add i32 %v1_132c8, %tmp
  %v3_132cc = inttoptr i32 %v2_132cc to i8*
  %v4_132cc = load i8, i8* %v3_132cc, align 1
  %v2_132d0 = icmp eq i8 %v4_132cc, 0
  br i1 %v2_132d0, label %dec_label_pc_132d8, label %dec_label_pc_132c8

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132c8, %bb
  %v6_13300 = phi i32 [ %v3_132b0, %bb ], [ %v1_132c8, %dec_label_pc_132c8 ]
  %v0_132d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_132d8 = inttoptr i32 %v0_132d8 to i8*
  %v2_132d8 = load i8, i8* %v1_132d8, align 1
  %v3_132d8 = zext i8 %v2_132d8 to i32
  %v2_132dc = icmp eq i8 %v2_132d8, 0
  br i1 %v2_132dc, label %bb26, label %dec_label_pc_132e8

bb26:                                             ; preds = %dec_label_pc_132d8
  store i32 %v3_132d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_132fc

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132d8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132ec, %dec_label_pc_132e8
  %v0_132ec = phi i32 [ %v1_132ec, %dec_label_pc_132ec ], [ 0, %dec_label_pc_132e8 ]
  %v1_132ec = add i32 %v0_132ec, 1
  store i32 %v1_132ec, i32* %r2.global-to-local, align 4
  %v2_132f0 = add i32 %v1_132ec, %v0_132d8
  %v3_132f0 = inttoptr i32 %v2_132f0 to i8*
  %v4_132f0 = load i8, i8* %v3_132f0, align 1
  %v2_132f4 = icmp eq i8 %v4_132f0, 0
  br i1 %v2_132f4, label %dec_label_pc_132fc, label %dec_label_pc_132ec

dec_label_pc_132fc:                               ; preds = %dec_label_pc_132ec, %bb26
  %v0_132fc = phi i32 [ %v3_132d8, %bb26 ], [ %v1_132ec, %dec_label_pc_132ec ]
  %v2_132fc = sub i32 %v0_132fc, %v0_132b8
  %v4_132fc = xor i32 %v0_132fc, %v0_132b8
  %v5_132fc = xor i32 %v2_132fc, %v0_132fc
  %v6_132fc = and i32 %v5_132fc, %v4_132fc
  %v5_13300 = icmp slt i32 %v0_132fc, %v0_132b8
  br i1 %v5_13300, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_132fc
  %v8_13300 = sub i32 %v6_13300, %v0_132b8
  %v10_13300 = xor i32 %v6_13300, %v0_132b8
  %v11_13300 = xor i32 %v8_13300, %v6_13300
  %v12_13300 = and i32 %v11_13300, %v10_13300
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_132fc, %bb27
  %v1_13304.in = phi i32 [ %v6_132fc, %dec_label_pc_132fc ], [ %v12_13300, %bb27 ]
  %v0_13304.in = phi i32 [ %v2_132fc, %dec_label_pc_132fc ], [ %v8_13300, %bb27 ]
  %v0_13304 = icmp slt i32 %v0_13304.in, 0
  %v1_13304 = icmp slt i32 %v1_13304.in, 0
  %v2_13304 = xor i1 %v1_13304, %v0_13304
  br i1 %v2_13304, label %dec_label_pc_13330, label %dec_label_pc_13314.preheader

dec_label_pc_13314.preheader:                     ; preds = %bb28
  %v2_133145 = icmp eq i32 %v0_132b8, 0
  br i1 %v2_133145, label %dec_label_pc_13330, label %dec_label_pc_1331c

dec_label_pc_1330c:                               ; preds = %dec_label_pc_1331c
  %v1_1330c = add i32 %v0_1330c, 1
  %v1_13310 = add i32 %v0_13310, 1
  store i32 %v1_13310, i32* %r1.global-to-local, align 4
  %v2_13314 = icmp eq i32 %v0_13314, 0
  br i1 %v2_13314, label %dec_label_pc_13330, label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %dec_label_pc_1330c, %dec_label_pc_13314.preheader
  %v0_13314.in = phi i32 [ %v0_13314, %dec_label_pc_1330c ], [ %v0_132b8, %dec_label_pc_13314.preheader ]
  %v0_13310 = phi i32 [ %v1_13310, %dec_label_pc_1330c ], [ %v0_132d8, %dec_label_pc_13314.preheader ]
  %v0_1330c = phi i32 [ %v1_1330c, %dec_label_pc_1330c ], [ %tmp, %dec_label_pc_13314.preheader ]
  %v0_13314 = add i32 %v0_13314.in, -1
  %v1_1331c = inttoptr i32 %v0_1330c to i8*
  %v2_1331c = load i8, i8* %v1_1331c, align 1
  %v3_1331c = zext i8 %v2_1331c to i32
  store i32 %v3_1331c, i32* %r2.global-to-local, align 4
  %v1_13320 = inttoptr i32 %v0_13310 to i8*
  %v2_13320 = load i8, i8* %v1_13320, align 1
  %v9_13324 = icmp eq i8 %v2_1331c, %v2_13320
  br i1 %v9_13324, label %dec_label_pc_1330c, label %dec_label_pc_13330

dec_label_pc_13330:                               ; preds = %dec_label_pc_1330c, %dec_label_pc_13314.preheader, %dec_label_pc_1331c, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_13314.preheader ], [ 1, %dec_label_pc_1330c ], [ 0, %dec_label_pc_1331c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1330c, { 1, 0 }
  uselistorder i32 %v0_13310, { 1, 0 }
  uselistorder i32 %v0_132fc, { 3, 0, 1, 2 }
  uselistorder i32 %v1_132ec, { 0, 1, 3, 2 }
  uselistorder i32 %v0_132b8, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_132b0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13330, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_13340(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13340:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_13340 = load i32, i32* @r4, align 4
  %v6_13340 = load i32, i32* @r5, align 4
  %v12_13340 = load i32, i32* @r7, align 4
  %v0_13344 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13344, i32* %r8.global-to-local, align 4
  %v2_13344 = icmp eq i32 %v0_13344, 0
  store i1 %v2_13344, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_13344, label %dec_label_pc_13424, label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13340
  %v3_13354 = icmp eq i8 %arg1, 0
  store i1 %v3_13354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13354, label %.thread, label %dec_label_pc_13368

.thread:                                          ; preds = %dec_label_pc_13354
  %v4_1335c = inttoptr i32 %v0_13344 to i8*
  store i8 48, i8* %v4_1335c, align 1
  %v0_13360.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13360.pr.pr, label %.thread1, label %dec_label_pc_13368

.thread1:                                         ; preds = %.thread
  %v4_13360 = load i32, i32* %r8.global-to-local, align 4
  %v5_13360 = add i32 %v4_13360, 1
  %v6_13360 = inttoptr i32 %v5_13360 to i8*
  store i8 0, i8* %v6_13360, align 1
  %v0_13364.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13364.pr.pr, label %dec_label_pc_13424, label %dec_label_pc_13368

dec_label_pc_13368:                               ; preds = %dec_label_pc_13354, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_1336c = icmp eq i32 %arg2, 10
  store i1 %v7_1336c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1336c, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_13368
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_13368
  %v4_13368 = zext i1 %tmp47 to i32
  store i32 %v4_13368, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_1338c8 = sub nsw i32 0, %tmp
  %tmp.v3_1338c8 = select i1 %phitmp, i32 %tmp, i32 %v3_1338c8
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_1338c8, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* @r5, align 4
  %v2_13398 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_13398, i32* @r7, align 4
  br label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %bb45, %.thread6
  %v0_1339c = phi i32 [ %v0_133c0, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_1339c, i32* %r0.global-to-local, align 4
  %v0_133a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_133a0, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_1339c, 16777216
  %v1_133a4 = sdiv i32 %sext, 16777216
  %v3_133a4 = call i32 @function_13538(i32 %v1_133a4, i32 %v0_133a0)
  %v7_133a8 = icmp eq i32 %v0_133a0, 9
  store i1 %v7_133a8, i1* %cpsr_z.global-to-local, align 1
  %v1_133ac = add i32 %v0_133a0, 48
  %v0_133b0 = load i32, i32* @r4, align 4
  store i32 %v0_133b0, i32* @r0, align 4
  %v7_133b4 = icmp sgt i32 %v0_133a0, 9
  %extract.t = trunc i32 %v1_133ac to i8
  br i1 %v7_133b4, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_1339c
  %v9_133b4 = add i32 %v0_133a0, 55
  %extract.t27 = trunc i32 %v9_133b4 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1339c, %bb44
  %v0_133bc.off0 = phi i8 [ %extract.t, %dec_label_pc_1339c ], [ %extract.t27, %bb44 ]
  %v0_133b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_133b8, i32* @r1, align 4
  %v2_133bc = load i32, i32* @r5, align 4
  %v3_133bc = load i32, i32* @r7, align 4
  %v4_133bc = add i32 %v3_133bc, %v2_133bc
  %v5_133bc = inttoptr i32 %v4_133bc to i8*
  store i8 %v0_133bc.off0, i8* %v5_133bc, align 1
  %v0_133c0 = call i32 @function_1343c()
  store i32 %v0_133c0, i32* %r0.global-to-local, align 4
  store i32 %v0_133c0, i32* @r4, align 4
  %v2_133c4 = icmp eq i32 %v0_133c0, 0
  store i1 %v2_133c4, i1* %cpsr_z.global-to-local, align 1
  %v0_133c8 = load i32, i32* @r5, align 4
  %v1_133c8 = add i32 %v0_133c8, -1
  store i32 %v1_133c8, i32* @r5, align 4
  br i1 %v2_133c4, label %dec_label_pc_133d0, label %dec_label_pc_1339c

dec_label_pc_133d0:                               ; preds = %bb45
  %v0_133d0 = load i32, i32* %sl.global-to-local, align 4
  %v2_133d0 = icmp eq i32 %v0_133d0, 0
  store i1 %v2_133d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133d0, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_133d0
  %v3_133d4 = ptrtoint i32* %stack_var_-32 to i32
  %v3_133d8 = add i32 %v1_133c8, %v3_133d4
  store i32 %v3_133d8, i32* %r2.global-to-local, align 4
  %v4_133e0 = add i32 %v3_133d8, -34
  %v5_133e0 = inttoptr i32 %v4_133e0 to i8*
  store i8 45, i8* %v5_133e0, align 1
  %v0_133e4.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_133e4.pre = load i32, i32* @r5, align 4
  br i1 %v0_133e4.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_133d0
  %v1_133e4 = phi i32 [ %v1_133c8, %dec_label_pc_133d0 ], [ %v1_133e4.pre, %.thread11 ]
  %v2_133e4 = add i32 %v1_133e4, 1
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_133f0 = phi i32 [ %v2_133e4, %.thread12 ], [ %v1_133e4.pre, %.thread11 ]
  %v0_133e8 = load i32, i32* @r7, align 4
  %v2_133e8 = add i32 %v0_133e8, %v1_133f0
  %v3_133e8 = inttoptr i32 %v2_133e8 to i8*
  %v4_133e8 = load i8, i8* %v3_133e8, align 1
  %v6_133e8 = zext i8 %v4_133e8 to i32
  %v2_133ec = icmp eq i8 %v4_133e8, 0
  store i1 %v2_133ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_133e8, i32* %r2.global-to-local, align 4
  br i1 %v2_133ec, label %dec_label_pc_13434, label %dec_label_pc_133fc.preheader

dec_label_pc_133fc.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133fc

dec_label_pc_133fc:                               ; preds = %dec_label_pc_133fc.preheader, %dec_label_pc_133fc
  %v0_133fc = phi i32 [ 0, %dec_label_pc_133fc.preheader ], [ %v1_133fc, %dec_label_pc_133fc ]
  %v1_133fc = add i32 %v0_133fc, 1
  store i32 %v1_133fc, i32* %r1.global-to-local, align 4
  %v2_13400 = add i32 %v1_133fc, %v2_133e8
  %v3_13400 = inttoptr i32 %v2_13400 to i8*
  %v4_13400 = load i8, i8* %v3_13400, align 1
  %v2_13404 = icmp eq i8 %v4_13400, 0
  store i1 %v2_13404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13404, label %dec_label_pc_1340c, label %dec_label_pc_133fc

dec_label_pc_1340c:                               ; preds = %dec_label_pc_133fc, %dec_label_pc_13434
  %v0_1341024 = phi i32 [ %v6_133e8, %dec_label_pc_13434 ], [ %v1_133fc, %dec_label_pc_133fc ]
  %v0_1340c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1340c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13410

dec_label_pc_13410:                               ; preds = %dec_label_pc_13410.dec_label_pc_13410_crit_edge, %dec_label_pc_1340c
  %v2_1341c = phi i32 [ %v5_1341c, %dec_label_pc_13410.dec_label_pc_13410_crit_edge ], [ %v0_1340c, %dec_label_pc_1340c ]
  %v0_13414 = phi i32 [ %v0_13414.pre, %dec_label_pc_13410.dec_label_pc_13410_crit_edge ], [ %v2_133e8, %dec_label_pc_1340c ]
  %v0_13410 = phi i32 [ %v0_13410.pre, %dec_label_pc_13410.dec_label_pc_13410_crit_edge ], [ %v0_1341024, %dec_label_pc_1340c ]
  %v1_13410 = add i32 %v0_13410, -1
  store i32 %v1_13410, i32* %r1.global-to-local, align 4
  %v1_13414 = inttoptr i32 %v0_13414 to i8*
  %v2_13414 = load i8, i8* %v1_13414, align 1
  %v5_13414 = add i32 %v0_13414, 1
  store i32 %v5_13414, i32* %r2.global-to-local, align 4
  %v3_13418 = icmp eq i32 %v0_13410, 0
  store i1 %v3_13418, i1* %cpsr_z.global-to-local, align 1
  %v3_1341c = inttoptr i32 %v2_1341c to i8*
  store i8 %v2_13414, i8* %v3_1341c, align 1
  %v4_1341c = load i32, i32* %r0.global-to-local, align 4
  %v5_1341c = add i32 %v4_1341c, 1
  store i32 %v5_1341c, i32* %r0.global-to-local, align 4
  br i1 %v3_13418, label %dec_label_pc_13424, label %dec_label_pc_13410.dec_label_pc_13410_crit_edge

dec_label_pc_13410.dec_label_pc_13410_crit_edge:  ; preds = %dec_label_pc_13410
  %v0_13410.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_13414.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13410

dec_label_pc_13424:                               ; preds = %dec_label_pc_13410, %.thread1, %dec_label_pc_13340
  %v0_13424 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13424, i32* %r0.global-to-local, align 4
  store i32 %v3_13340, i32* @r4, align 4
  store i32 %v6_13340, i32* @r5, align 4
  store i32 %v12_13340, i32* @r7, align 4
  ret i32 %v0_13424

dec_label_pc_13434:                               ; preds = %.thread11._crit_edge
  store i32 %v6_133e8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1340c

; uselistorder directives
  uselistorder i32 %v5_1341c, { 1, 0 }
  uselistorder i1 %v3_13418, { 1, 0 }
  uselistorder i32 %v0_13414, { 1, 0 }
  uselistorder i32 %v1_133fc, { 0, 1, 3, 2 }
  uselistorder i32 %v6_133e8, { 1, 0 }
  uselistorder i32 %v2_133e8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_133e4.pre, { 1, 0 }
  uselistorder i32 %v1_133c8, { 1, 0, 2 }
  uselistorder i32 %v0_133c0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_133a0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_13344, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1340c, { 1, 0 }
  uselistorder label %dec_label_pc_133fc, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_13368, { 2, 1, 0 }
}

define i32 @function_1343c() local_unnamed_addr {
dec_label_pc_1343c:
  %r2.global-to-local = alloca i32, align 4
  %v0_1343c = load i32, i32* @r1, align 4
  %v1_1343c = add i32 %v0_1343c, -1
  store i32 %v1_1343c, i32* %r2.global-to-local, align 4
  %v2_1343c = icmp eq i32 %v0_1343c, 0
  %v7_1343c = icmp eq i32 %v0_1343c, 1
  %v0_13440 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_1343c, i32 %v0_13440)
  br i1 %v2_1343c, label %dec_label_pc_13524, label %dec_label_pc_13448

dec_label_pc_13448:                               ; preds = %dec_label_pc_1343c
  %v0_13448 = load i32, i32* @r0, align 4
  %v1_13448 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_13448, %v1_13448
  br i1 %tmp, label %dec_label_pc_13450, label %dec_label_pc_134dc

dec_label_pc_13450:                               ; preds = %dec_label_pc_13448
  %v1_13450 = load i32, i32* %r2.global-to-local, align 4
  %v2_13450 = and i32 %v1_13450, %v1_13448
  %v4_13450 = icmp eq i32 %v2_13450, 0
  br i1 %v4_13450, label %dec_label_pc_134e8, label %dec_label_pc_13458

dec_label_pc_13458:                               ; preds = %dec_label_pc_13450
  %v3_13458 = icmp ult i32 %v1_13448, 536870912
  br i1 %v3_13458, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13458
  %v4_1345c = mul i32 %v1_13448, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13458, %.thread
  %v0_1347c.pr36.ph = phi i32 [ %v4_1345c, %.thread ], [ %v1_13448, %dec_label_pc_13458 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13458 ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_1347c.pr36 = phi i32 [ %v4_13470, %bb81 ], [ %v0_1347c.pr36.ph, %.preheader.preheader ]
  %v1_13474 = phi i32 [ %v4_13474, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_13468 = icmp ugt i32 %v0_1347c.pr36, 268435455
  br i1 %v2_13468, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_1347cthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_1346c = icmp ult i32 %v0_1347c.pr36, %v0_13448
  br i1 %v4_1346c, label %bb80, label %dec_label_pc_1347cthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_13470 = and i32 %v0_1347c.pr36, 268435456
  %v3_13470 = icmp eq i32 %v2_13470, 0
  %v4_13470 = mul i32 %v0_1347c.pr36, 16
  br i1 %v3_13470, label %bb81, label %dec_label_pc_1347c.loopexit

bb81:                                             ; preds = %bb80
  %v2_13474 = and i32 %v1_13474, 268435456
  %v3_13474 = icmp eq i32 %v2_13474, 0
  %v4_13474 = mul i32 %v1_13474, 16
  store i32 %v4_13474, i32* @r3, align 4
  br i1 %v3_13474, label %.preheader, label %dec_label_pc_1347cthread-pre-split.loopexit.loopexit

dec_label_pc_1347cthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1348848.ph = phi i32 [ %v1_13474, %bb ], [ %v4_13474, %bb81 ]
  %v0_1347c.pr38.ph = phi i32 [ %v0_1347c.pr36, %bb ], [ %v4_13470, %bb81 ]
  br label %dec_label_pc_1347cthread-pre-split.loopexit

dec_label_pc_1347cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1347cthread-pre-split.loopexit.loopexit, %.thread2
  %v1_1348848 = phi i32 [ %v1_13474, %.thread2 ], [ %v1_1348848.ph, %dec_label_pc_1347cthread-pre-split.loopexit.loopexit ]
  %v0_1347c.pr38 = phi i32 [ %v0_1347c.pr36, %.thread2 ], [ %v0_1347c.pr38.ph, %dec_label_pc_1347cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1347cthread-pre-split

dec_label_pc_1347cthread-pre-split:               ; preds = %dec_label_pc_1347cthread-pre-split.loopexit, %bb83
  %v1_1348846 = phi i32 [ %v1_1348848, %dec_label_pc_1347cthread-pre-split.loopexit ], [ %v3_13488, %bb83 ]
  %v0_1347c.pr = phi i32 [ %v0_1347c.pr38, %dec_label_pc_1347cthread-pre-split.loopexit ], [ %v3_13484, %bb83 ]
  br label %dec_label_pc_1347c

dec_label_pc_1347c.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_1347c

dec_label_pc_1347c:                               ; preds = %dec_label_pc_1347c.loopexit, %dec_label_pc_1347cthread-pre-split
  %v1_13488 = phi i32 [ %v1_1348846, %dec_label_pc_1347cthread-pre-split ], [ %v1_13474, %dec_label_pc_1347c.loopexit ]
  %v1_13484 = phi i32 [ %v0_1347c.pr, %dec_label_pc_1347cthread-pre-split ], [ %v4_13470, %dec_label_pc_1347c.loopexit ]
  %v2_1347c = icmp slt i32 %v1_13484, 0
  br i1 %v2_1347c, label %dec_label_pc_13490, label %bb82

bb82:                                             ; preds = %dec_label_pc_1347c
  %v4_13480 = icmp ult i32 %v1_13484, %v0_13448
  br i1 %v4_13480, label %bb83, label %dec_label_pc_13490

bb83:                                             ; preds = %bb82
  %v3_13484 = mul i32 %v1_13484, 2
  %v2_13488 = icmp slt i32 %v1_13488, 0
  %v3_13488 = mul i32 %v1_13488, 2
  store i32 %v3_13488, i32* @r3, align 4
  br i1 %v2_13488, label %dec_label_pc_13490, label %dec_label_pc_1347cthread-pre-split

dec_label_pc_13490:                               ; preds = %bb82, %dec_label_pc_1347c, %bb83
  %v2_1349c59 = phi i32 [ %v3_13488, %bb83 ], [ %v1_13488, %bb82 ], [ %v1_13488, %dec_label_pc_1347c ]
  %v1_1349451 = phi i32 [ %v3_13484, %bb83 ], [ %v1_13484, %bb82 ], [ %v1_13484, %dec_label_pc_1347c ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13494

dec_label_pc_13494:                               ; preds = %.thread11, %dec_label_pc_13490
  %v1_134c8 = phi i32 [ %v4_134c8, %.thread11 ], [ %v2_1349c59, %dec_label_pc_13490 ]
  %v1_1349c = phi i32 [ %v0_134d4, %.thread11 ], [ 0, %dec_label_pc_13490 ]
  %v1_134cc = phi i32 [ %v4_134cc, %.thread11 ], [ %v1_1349451, %dec_label_pc_13490 ]
  %v1_13498 = phi i32 [ %v0_134c4, %.thread11 ], [ %v0_13448, %dec_label_pc_13490 ]
  %v3_13494 = icmp ult i32 %v1_13498, %v1_134cc
  br i1 %v3_13494, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_13494
  %v3_13498 = sub i32 %v1_13498, %v1_134cc
  %v3_1349c = or i32 %v1_1349c, %v1_134c8
  store i32 %v3_1349c, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13494, %bb84
  %v1_134a4 = phi i32 [ %v1_13498, %dec_label_pc_13494 ], [ %v3_13498, %bb84 ]
  %v1_134a8 = phi i32 [ %v1_1349c, %dec_label_pc_13494 ], [ %v3_1349c, %bb84 ]
  %v4_134a0 = udiv i32 %v1_134cc, 2
  %v6_134a0 = icmp ult i32 %v1_134a4, %v4_134a0
  br i1 %v6_134a0, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_134a4 = urem i32 %v1_134cc, 2
  %v4_134a4 = icmp eq i32 %v3_134a4, 0
  %v6_134a4 = sub i32 %v1_134a4, %v4_134a0
  br i1 %v4_134a4, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_134a8 = udiv i32 %v1_134c8, 2
  %v6_134a8 = or i32 %v1_134a8, %v5_134a8
  store i32 %v6_134a8, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_134b0 = phi i32 [ %v6_134a4, %bb85 ], [ %v1_134a4, %.thread7 ], [ %v6_134a4, %bb86 ]
  %v1_134b4 = phi i32 [ %v1_134a8, %bb85 ], [ %v1_134a8, %.thread7 ], [ %v6_134a8, %bb86 ]
  %v4_134ac = udiv i32 %v1_134cc, 4
  %v6_134ac = icmp ult i32 %v1_134b0, %v4_134ac
  br i1 %v6_134ac, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_134b0 = and i32 %v1_134cc, 2
  %v4_134b0 = icmp eq i32 %v3_134b0, 0
  %v6_134b0 = sub i32 %v1_134b0, %v4_134ac
  br i1 %v4_134b0, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_134b4 = udiv i32 %v1_134c8, 4
  %v6_134b4 = or i32 %v1_134b4, %v5_134b4
  store i32 %v6_134b4, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_134bc = phi i32 [ %v6_134b0, %bb87 ], [ %v1_134b0, %.thread8 ], [ %v6_134b0, %bb88 ]
  %v1_134c0 = phi i32 [ %v1_134b4, %bb87 ], [ %v1_134b4, %.thread8 ], [ %v6_134b4, %bb88 ]
  %v4_134b8 = udiv i32 %v1_134cc, 8
  %v6_134b8 = icmp ult i32 %v1_134bc, %v4_134b8
  br i1 %v6_134b8, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_134bc = and i32 %v1_134cc, 4
  %v4_134bc = icmp eq i32 %v3_134bc, 0
  %v6_134bc = sub i32 %v1_134bc, %v4_134b8
  br i1 %v4_134bc, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_134c0 = udiv i32 %v1_134c8, 8
  %v6_134c0 = or i32 %v1_134c0, %v5_134c0
  store i32 %v6_134c0, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_134d4 = phi i32 [ %v1_134c0, %bb89 ], [ %v1_134c0, %.thread9 ], [ %v6_134c0, %bb90 ]
  %v0_134c4 = phi i32 [ %v6_134bc, %bb89 ], [ %v1_134bc, %.thread9 ], [ %v6_134bc, %bb90 ]
  %v2_134c4 = icmp eq i32 %v0_134c4, 0
  br i1 %v2_134c4, label %dec_label_pc_134d4, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_134c8 = udiv i32 %v1_134c8, 16
  store i32 %v4_134c8, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_134c8, 16
  br i1 %tmp138, label %dec_label_pc_134d4, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_134cc = udiv i32 %v1_134cc, 16
  br label %dec_label_pc_13494

dec_label_pc_134d4:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_134d4

dec_label_pc_134dc:                               ; preds = %dec_label_pc_13448
  %v9_13448 = icmp eq i32 %v0_13448, %v1_13448
  %. = zext i1 %v9_13448 to i32
  ret i32 %.

dec_label_pc_134e8:                               ; preds = %dec_label_pc_13450
  %v2_134e8 = icmp ugt i32 %v1_13448, 65535
  br i1 %v2_134e8, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_134e8
  %v2_134ec = and i32 %v1_13448, 32768
  %v3_134ec = icmp eq i32 %v2_134ec, 0
  %v4_134ec = udiv i32 %v1_13448, 65536
  br i1 %v3_134ec, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_134e8
  %v0_134f865 = phi i32 [ %v1_13448, %dec_label_pc_134e8 ], [ %v4_134ec, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_134fc = phi i32 [ %v0_134f865, %.thread16 ], [ %v4_134ec, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_134f8 = icmp ugt i32 %v1_134fc, 255
  br i1 %v2_134f8, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_134fc = and i32 %v1_134fc, 128
  %v3_134fc = icmp eq i32 %v2_134fc, 0
  %v4_134fc = udiv i32 %v1_134fc, 256
  br i1 %v3_134fc, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_13500 = or i32 %storemerge, 8
  store i32 %v2_13500, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_1350c = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_13500, %bb98 ]
  %v1_13508 = phi i32 [ %v1_134fc, %bb96 ], [ %v4_134fc, %bb97 ], [ %v4_134fc, %bb98 ]
  %v2_13504 = icmp ugt i32 %v1_13508, 15
  br i1 %v2_13504, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_13508 = and i32 %v1_13508, 8
  %v3_13508 = icmp eq i32 %v2_13508, 0
  %v4_13508 = udiv i32 %v1_13508, 16
  br i1 %v3_13508, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1350c = add nsw i32 %v1_1350c, 4
  store i32 %v2_1350c, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_13514 = phi i32 [ %v1_1350c, %.thread17 ], [ %v1_1350c, %bb99 ], [ %v2_1350c, %bb100 ]
  %v5_13518 = phi i32 [ %v1_13508, %.thread17 ], [ %v4_13508, %bb99 ], [ %v4_13508, %bb100 ]
  %v2_13510 = icmp ugt i32 %v5_13518, 3
  %v7_13510 = icmp eq i32 %v5_13518, 4
  %v2_13514 = xor i1 %v7_13510, true
  %v3_13514 = and i1 %v2_13510, %v2_13514
  br i1 %v3_13514, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_13514 = add nsw i32 %v4_13514, 3
  store i32 %v5_13514, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_13518 = phi i32 [ %v4_13514, %.thread18 ], [ %v5_13514, %bb101 ]
  %v2_13518 = xor i1 %v2_13510, true
  %v3_13518 = or i1 %v7_13510, %v2_13518
  br i1 %v3_13518, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_13518 = udiv i32 %v5_13518, 2
  %v9_13518 = add i32 %v4_13518, %v8_13518
  store i32 %v9_13518, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_1351c = phi i32 [ %v4_13518, %bb102 ], [ %v9_13518, %bb103 ]
  %v6_1351c = lshr i32 %v0_13448, %v1_1351c
  ret i32 %v6_1351c

dec_label_pc_13524:                               ; preds = %dec_label_pc_1343c
  %v0_13524 = load i32, i32* @lr, align 4
  %v0_13528 = call i32 @function_13694()
  store i32 %v0_13524, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13518, { 1, 0 }
  uselistorder i1 %v7_13510, { 1, 0 }
  uselistorder i32 %v4_13508, { 1, 0 }
  uselistorder i32 %v1_13508, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13500, { 1, 0 }
  uselistorder i32 %v4_134fc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_134fc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_134ec, { 1, 0 }
  uselistorder i32 %v0_134c4, { 1, 0 }
  uselistorder i32 %v4_134b8, { 1, 0 }
  uselistorder i32 %v1_134c0, { 1, 2, 0 }
  uselistorder i32 %v4_134ac, { 1, 0 }
  uselistorder i32 %v1_134b4, { 1, 2, 0 }
  uselistorder i32 %v4_134a0, { 1, 0 }
  uselistorder i32 %v1_134a8, { 1, 2, 0 }
  uselistorder i32 %v1_134cc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1349c, { 1, 0 }
  uselistorder i32 %v3_13488, { 2, 0, 1 }
  uselistorder i32 %v3_13484, { 1, 0 }
  uselistorder i32 %v1_13484, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13488, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13474, { 2, 0, 1 }
  uselistorder i32 %v4_13470, { 2, 1, 0 }
  uselistorder i32 %v1_13474, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1347c.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_13448, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_13448, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_1343c, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_134d4, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13490, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1347cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_13538(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13538:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1353c = call i32 @function_1343c()
  store i32 %arg2, i32* @r2, align 4
  ret i32 %v0_1353c
}

define i32 @function_13550() local_unnamed_addr {
dec_label_pc_13550:
  %v0_13550 = load i32, i32* @r1, align 4
  %v1_13550 = icmp slt i32 %v0_13550, 0
  %v2_13550 = icmp eq i32 %v0_13550, 0
  %v0_13554 = load i32, i32* @r0, align 4
  %v2_13554 = xor i32 %v0_13554, %v0_13550
  br i1 %v2_13550, label %dec_label_pc_13668, label %dec_label_pc_1355c

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13550
  br i1 %v1_13550, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1355c
  %v2_1355c = sub i32 0, %v0_13550
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1355c, %bb
  %v1_13628 = phi i32 [ %v2_1355c, %bb ], [ %v0_13550, %dec_label_pc_1355c ]
  %v1_13560 = add i32 %v1_13628, -1
  %v7_13560 = icmp eq i32 %v1_13628, 1
  br i1 %v7_13560, label %dec_label_pc_13608, label %dec_label_pc_13568

dec_label_pc_13568:                               ; preds = %thread-pre-split
  %v1_13568 = icmp slt i32 %v0_13554, 0
  br i1 %v1_13568, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_13568
  %v2_1356c = sub i32 0, %v0_13554
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_13568, %bb84
  %v0_1365c = phi i32 [ %v0_13554, %dec_label_pc_13568 ], [ %v2_1356c, %bb84 ]
  %v3_13570 = icmp uge i32 %v0_1365c, %v1_13628
  %v9_13570 = icmp eq i32 %v0_1365c, %v1_13628
  %v2_13574 = xor i1 %v3_13570, true
  %v3_13574 = or i1 %v9_13570, %v2_13574
  br i1 %v3_13574, label %dec_label_pc_13614, label %dec_label_pc_13578

dec_label_pc_13578:                               ; preds = %bb85
  %v2_13578 = and i32 %v1_13560, %v1_13628
  %v4_13578 = icmp eq i32 %v2_13578, 0
  br i1 %v4_13578, label %dec_label_pc_13624, label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_13578
  %v3_13580 = icmp ult i32 %v1_13628, 536870912
  br i1 %v3_13580, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13580
  %v4_13584 = mul i32 %v1_13628, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13580, %.thread
  %v0_135a4.pr40.ph = phi i32 [ %v4_13584, %.thread ], [ %v1_13628, %dec_label_pc_13580 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13580 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_135a4.pr40 = phi i32 [ %v4_13598, %bb88 ], [ %v0_135a4.pr40.ph, %.preheader.preheader ]
  %v1_1359c = phi i32 [ %v4_1359c, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_13590 = icmp ugt i32 %v0_135a4.pr40, 268435455
  br i1 %v2_13590, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_135a4thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_13594 = icmp ult i32 %v0_135a4.pr40, %v0_1365c
  br i1 %v4_13594, label %bb87, label %dec_label_pc_135a4thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_13598 = and i32 %v0_135a4.pr40, 268435456
  %v3_13598 = icmp eq i32 %v2_13598, 0
  %v4_13598 = mul i32 %v0_135a4.pr40, 16
  br i1 %v3_13598, label %bb88, label %dec_label_pc_135a4.loopexit

bb88:                                             ; preds = %bb87
  %v2_1359c = and i32 %v1_1359c, 268435456
  %v3_1359c = icmp eq i32 %v2_1359c, 0
  %v4_1359c = mul i32 %v1_1359c, 16
  br i1 %v3_1359c, label %.preheader, label %dec_label_pc_135a4thread-pre-split.loopexit.loopexit

dec_label_pc_135a4thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_135b052.ph = phi i32 [ %v1_1359c, %bb86 ], [ %v4_1359c, %bb88 ]
  %v0_135a4.pr42.ph = phi i32 [ %v0_135a4.pr40, %bb86 ], [ %v4_13598, %bb88 ]
  br label %dec_label_pc_135a4thread-pre-split.loopexit

dec_label_pc_135a4thread-pre-split.loopexit:      ; preds = %dec_label_pc_135a4thread-pre-split.loopexit.loopexit, %.thread3
  %v1_135b052 = phi i32 [ %v1_1359c, %.thread3 ], [ %v1_135b052.ph, %dec_label_pc_135a4thread-pre-split.loopexit.loopexit ]
  %v0_135a4.pr42 = phi i32 [ %v0_135a4.pr40, %.thread3 ], [ %v0_135a4.pr42.ph, %dec_label_pc_135a4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_135a4thread-pre-split

dec_label_pc_135a4thread-pre-split:               ; preds = %dec_label_pc_135a4thread-pre-split.loopexit, %bb90
  %v1_135b050 = phi i32 [ %v1_135b052, %dec_label_pc_135a4thread-pre-split.loopexit ], [ %v3_135b0, %bb90 ]
  %v2_135a848 = phi i32 [ %v0_1365c, %dec_label_pc_135a4thread-pre-split.loopexit ], [ %v2_135a8, %bb90 ]
  %v0_135a4.pr = phi i32 [ %v0_135a4.pr42, %dec_label_pc_135a4thread-pre-split.loopexit ], [ %v3_135ac, %bb90 ]
  br label %dec_label_pc_135a4

dec_label_pc_135a4.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %dec_label_pc_135a4.loopexit, %dec_label_pc_135a4thread-pre-split
  %v1_135b0 = phi i32 [ %v1_135b050, %dec_label_pc_135a4thread-pre-split ], [ %v1_1359c, %dec_label_pc_135a4.loopexit ]
  %v2_135a8 = phi i32 [ %v2_135a848, %dec_label_pc_135a4thread-pre-split ], [ %v0_1365c, %dec_label_pc_135a4.loopexit ]
  %v1_135ac = phi i32 [ %v0_135a4.pr, %dec_label_pc_135a4thread-pre-split ], [ %v4_13598, %dec_label_pc_135a4.loopexit ]
  %v2_135a4 = icmp slt i32 %v1_135ac, 0
  br i1 %v2_135a4, label %dec_label_pc_135b8, label %bb89

bb89:                                             ; preds = %dec_label_pc_135a4
  %v4_135a8 = icmp ult i32 %v1_135ac, %v2_135a8
  br i1 %v4_135a8, label %bb90, label %dec_label_pc_135b8

bb90:                                             ; preds = %bb89
  %v3_135ac = mul i32 %v1_135ac, 2
  %v2_135b0 = icmp slt i32 %v1_135b0, 0
  %v3_135b0 = mul i32 %v1_135b0, 2
  br i1 %v2_135b0, label %dec_label_pc_135b8, label %dec_label_pc_135a4thread-pre-split

dec_label_pc_135b8:                               ; preds = %bb89, %dec_label_pc_135a4, %bb90
  %v2_135c463 = phi i32 [ %v3_135b0, %bb90 ], [ %v1_135b0, %bb89 ], [ %v1_135b0, %dec_label_pc_135a4 ]
  %v1_135bc55 = phi i32 [ %v3_135ac, %bb90 ], [ %v1_135ac, %bb89 ], [ %v1_135ac, %dec_label_pc_135a4 ]
  br label %dec_label_pc_135bc

dec_label_pc_135bc:                               ; preds = %.thread13, %dec_label_pc_135b8
  %v1_135f0 = phi i32 [ %v4_135f0, %.thread13 ], [ %v2_135c463, %dec_label_pc_135b8 ]
  %v1_135c4 = phi i32 [ %v1_13600, %.thread13 ], [ 0, %dec_label_pc_135b8 ]
  %v1_135f4 = phi i32 [ %v4_135f4, %.thread13 ], [ %v1_135bc55, %dec_label_pc_135b8 ]
  %v1_135c0 = phi i32 [ %v0_135ec, %.thread13 ], [ %v0_1365c, %dec_label_pc_135b8 ]
  %v3_135bc = icmp ult i32 %v1_135c0, %v1_135f4
  br i1 %v3_135bc, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_135bc
  %v3_135c0 = sub i32 %v1_135c0, %v1_135f4
  %v3_135c4 = or i32 %v1_135c4, %v1_135f0
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_135bc, %bb91
  %v1_135cc = phi i32 [ %v1_135c0, %dec_label_pc_135bc ], [ %v3_135c0, %bb91 ]
  %v1_135d0 = phi i32 [ %v1_135c4, %dec_label_pc_135bc ], [ %v3_135c4, %bb91 ]
  %v4_135c8 = udiv i32 %v1_135f4, 2
  %v6_135c8 = icmp ult i32 %v1_135cc, %v4_135c8
  br i1 %v6_135c8, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_135cc = urem i32 %v1_135f4, 2
  %v4_135cc = icmp eq i32 %v3_135cc, 0
  %v6_135cc = sub i32 %v1_135cc, %v4_135c8
  br i1 %v4_135cc, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_135d0 = udiv i32 %v1_135f0, 2
  %v6_135d0 = or i32 %v1_135d0, %v5_135d0
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_135d8 = phi i32 [ %v6_135cc, %bb92 ], [ %v1_135cc, %.thread8 ], [ %v6_135cc, %bb93 ]
  %v1_135dc = phi i32 [ %v1_135d0, %bb92 ], [ %v1_135d0, %.thread8 ], [ %v6_135d0, %bb93 ]
  %v4_135d4 = udiv i32 %v1_135f4, 4
  %v6_135d4 = icmp ult i32 %v1_135d8, %v4_135d4
  br i1 %v6_135d4, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_135d8 = and i32 %v1_135f4, 2
  %v4_135d8 = icmp eq i32 %v3_135d8, 0
  %v6_135d8 = sub i32 %v1_135d8, %v4_135d4
  br i1 %v4_135d8, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_135dc = udiv i32 %v1_135f0, 4
  %v6_135dc = or i32 %v1_135dc, %v5_135dc
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_135e4 = phi i32 [ %v6_135d8, %bb94 ], [ %v1_135d8, %.thread9 ], [ %v6_135d8, %bb95 ]
  %v1_135e8 = phi i32 [ %v1_135dc, %bb94 ], [ %v1_135dc, %.thread9 ], [ %v6_135dc, %bb95 ]
  %v4_135e0 = udiv i32 %v1_135f4, 8
  %v6_135e0 = icmp ult i32 %v1_135e4, %v4_135e0
  br i1 %v6_135e0, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_135e4 = and i32 %v1_135f4, 4
  %v4_135e4 = icmp eq i32 %v3_135e4, 0
  %v6_135e4 = sub i32 %v1_135e4, %v4_135e0
  br i1 %v4_135e4, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_135e8 = udiv i32 %v1_135f0, 8
  %v6_135e8 = or i32 %v1_135e8, %v5_135e8
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_13600 = phi i32 [ %v1_135e8, %bb96 ], [ %v1_135e8, %.thread10 ], [ %v6_135e8, %bb97 ]
  %v0_135ec = phi i32 [ %v6_135e4, %bb96 ], [ %v1_135e4, %.thread10 ], [ %v6_135e4, %bb97 ]
  %v2_135ec = icmp eq i32 %v0_135ec, 0
  br i1 %v2_135ec, label %dec_label_pc_135fc, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_135f0, 16
  br i1 %tmp, label %dec_label_pc_135fc, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_135f0 = udiv i32 %v1_135f0, 16
  %v4_135f4 = udiv i32 %v1_135f4, 16
  br label %dec_label_pc_135bc

dec_label_pc_135fc:                               ; preds = %thread-pre-split12, %bb98
  %v1_135fc = icmp slt i32 %v2_13554, 0
  br i1 %v1_135fc, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_135fc
  %v2_13600 = sub i32 0, %v1_13600
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_13608, %dec_label_pc_135fc, %bb99
  %v1_13604 = phi i32 [ %v1_13600, %dec_label_pc_135fc ], [ %v2_13600, %bb99 ], [ %v2_1360c, %bb100 ], [ undef, %dec_label_pc_13608 ], [ %v1_1362080, %bb102 ], [ %v2_1361c, %bb103 ]
  ret i32 %v1_13604

dec_label_pc_13608:                               ; preds = %thread-pre-split
  br i1 %v1_13550, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_13608
  %v2_1360c = sub i32 0, %v0_13554
  br label %.thread16

dec_label_pc_13614:                               ; preds = %bb85
  br i1 %v3_13570, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_13614
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_13614, %bb101
  %v1_1362080 = phi i32 [ %v0_13554, %dec_label_pc_13614 ], [ 0, %bb101 ]
  br i1 %v9_13570, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_13618 = ashr i32 %v2_13554, 31
  %v2_1361c = or i32 %v4_13618, 1
  br label %.thread16

dec_label_pc_13624:                               ; preds = %dec_label_pc_13578
  %v2_13624 = icmp ugt i32 %v1_13628, 65535
  br i1 %v2_13624, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_13624
  %v2_13628 = and i32 %v1_13628, 32768
  %v3_13628 = icmp eq i32 %v2_13628, 0
  %v4_13628 = udiv i32 %v1_13628, 65536
  br i1 %v3_13628, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_13624
  %v0_1363470 = phi i32 [ %v1_13628, %dec_label_pc_13624 ], [ %v4_13628, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_13638 = phi i32 [ %v0_1363470, %.thread19 ], [ %v4_13628, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_13634 = icmp ugt i32 %v1_13638, 255
  br i1 %v2_13634, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_13638 = and i32 %v1_13638, 128
  %v3_13638 = icmp eq i32 %v2_13638, 0
  %v4_13638 = udiv i32 %v1_13638, 256
  br i1 %v3_13638, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_1363c = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_13648 = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_1363c, %bb107 ]
  %v1_13644 = phi i32 [ %v1_13638, %bb105 ], [ %v4_13638, %bb106 ], [ %v4_13638, %bb107 ]
  %v2_13640 = icmp ugt i32 %v1_13644, 15
  br i1 %v2_13640, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_13644 = and i32 %v1_13644, 8
  %v3_13644 = icmp eq i32 %v2_13644, 0
  %v4_13644 = udiv i32 %v1_13644, 16
  br i1 %v3_13644, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_13648 = add nsw i32 %v1_13648, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_13650 = phi i32 [ %v1_13648, %.thread20 ], [ %v1_13648, %bb108 ], [ %v2_13648, %bb109 ]
  %v5_13654 = phi i32 [ %v1_13644, %.thread20 ], [ %v4_13644, %bb108 ], [ %v4_13644, %bb109 ]
  %v2_1364c = icmp ugt i32 %v5_13654, 3
  %v7_1364c = icmp eq i32 %v5_13654, 4
  %v2_13650 = xor i1 %v7_1364c, true
  %v3_13650 = and i1 %v2_1364c, %v2_13650
  br i1 %v3_13650, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_13650 = add nsw i32 %v4_13650, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_13654 = phi i32 [ %v4_13650, %.thread21 ], [ %v5_13650, %bb110 ]
  %v2_13654 = xor i1 %v2_1364c, true
  %v3_13654 = or i1 %v7_1364c, %v2_13654
  br i1 %v3_13654, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_13654 = udiv i32 %v5_13654, 2
  %v9_13654 = add i32 %v4_13654, %v8_13654
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_1365c = phi i32 [ %v4_13654, %bb111 ], [ %v9_13654, %bb112 ]
  %v1_13658 = icmp slt i32 %v2_13554, 0
  %v6_1365c = lshr i32 %v0_1365c, %v1_1365c
  %v2_13660 = sub i32 0, %v6_1365c
  %v2_13660.v6_1365c = select i1 %v1_13658, i32 %v2_13660, i32 %v6_1365c
  ret i32 %v2_13660.v6_1365c

dec_label_pc_13668:                               ; preds = %dec_label_pc_13550
  %v0_1366c = call i32 @function_13694()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13654, { 1, 0 }
  uselistorder i1 %v7_1364c, { 1, 0 }
  uselistorder i32 %v4_13644, { 1, 0 }
  uselistorder i32 %v1_13644, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13638, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_13638, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13628, { 1, 0 }
  uselistorder i32 %v0_135ec, { 1, 0 }
  uselistorder i32 %v4_135e0, { 1, 0 }
  uselistorder i32 %v1_135e8, { 1, 2, 0 }
  uselistorder i32 %v4_135d4, { 1, 0 }
  uselistorder i32 %v1_135dc, { 1, 2, 0 }
  uselistorder i32 %v4_135c8, { 1, 0 }
  uselistorder i32 %v1_135d0, { 1, 2, 0 }
  uselistorder i32 %v1_135f4, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_135c4, { 1, 0 }
  uselistorder i32 %v1_135f0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_135b0, { 1, 0 }
  uselistorder i32 %v3_135ac, { 1, 0 }
  uselistorder i32 %v1_135ac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_135a8, { 1, 0 }
  uselistorder i32 %v1_135b0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1359c, { 1, 0 }
  uselistorder i32 %v4_13598, { 2, 1, 0 }
  uselistorder i32 %v1_1359c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_135a4.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_13570, { 1, 0 }
  uselistorder i32 %v1_13628, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_13554, { 1, 0, 2 }
  uselistorder i32 %v0_13554, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_13550, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_13694, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_135fc, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_135b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_135a4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1367c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1367c:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_13680 = call i32 @function_13550()
  ret i32 %v0_13680
}

define i32 @function_13694() local_unnamed_addr {
dec_label_pc_13694:
  %v1_1369c = call i32 @function_1590c(i32 8)
  ret i32 %v1_1369c
}

define i32 @function_136a8(i32* %arg1) local_unnamed_addr {
dec_label_pc_136a8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_136a8 = load i32, i32* @r4, align 4
  %v6_136a8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_136b4 = load i32, i32* %arg1, align 4
  store i32 %v2_136b4, i32* @r0, align 4
  %v1_136b8 = call i32 @function_1663c(i32 %v2_136b4)
  store i32 %v1_136b8, i32* @r5, align 4
  %v0_136c0 = load i32, i32* @r4, align 4
  %v1_136c4 = call i32 @function_1429c(i32 %v0_136c0)
  %v0_136c8 = load i32, i32* @r5, align 4
  store i32 %v3_136a8, i32* @r4, align 4
  store i32 %v6_136a8, i32* @r5, align 4
  ret i32 %v0_136c8

; uselistorder directives
  uselistorder i32 (i32)* @function_1663c, { 22, 10, 33, 32, 9, 31, 30, 8, 7, 6, 28, 29, 27, 26, 25, 24, 23, 5, 4, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 3, 2, 0, 1 }
}

define i32 @function_136d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_136d8:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136d8 = load i32, i32* @r7, align 4
  store i32 %v3_136d8, i32* %stack_var_-8, align 4
  %v0_136e0 = load i32, i32* @r0, align 4
  %v2_136e0 = call i32 @function_13bfc(i32 %v0_136e0, i32 540672)
  store i32 %v2_136e0, i32* %r0.global-to-local, align 4
  store i32 %v2_136e0, i32* @r7, align 4
  %v1_136e4 = icmp slt i32 %v2_136e0, 0
  br i1 %v1_136e4, label %.thread5, label %dec_label_pc_136f0

.thread5:                                         ; preds = %dec_label_pc_136d8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1371c

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136d8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_136f8 = call i32 @function_13d28(i32 1, i32 2080)
  store i32 %v2_136f8, i32* %r0.global-to-local, align 4
  %v2_136fc = icmp eq i32 %v2_136f8, 0
  br i1 %v2_136fc, label %dec_label_pc_1370c, label %.thread.dec_label_pc_1371c_crit_edge

.thread.dec_label_pc_1371c_crit_edge:             ; preds = %dec_label_pc_136f0
  store i32 %v2_136f8, i32* %r0.global-to-local, align 4
  %v1_13704 = load i32, i32* @r7, align 4
  %v3_13704 = inttoptr i32 %v2_136f8 to i32*
  store i32 %v1_13704, i32* %v3_13704, align 4
  %v1_13720.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1371c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_136f0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %.thread5, %.thread.dec_label_pc_1371c_crit_edge, %dec_label_pc_1370c
  %v1_13720 = phi i32 [ %v1_13720.pre, %.thread.dec_label_pc_1371c_crit_edge ], [ 0, %dec_label_pc_1370c ], [ 0, %.thread5 ]
  %v2_1371c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1371c, i32* @r7, align 4
  ret i32 %v1_13720

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 (i32, i32)* @function_13d28, { 41, 4, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_13bfc, { 2, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_1371c, { 2, 1, 0 }
}

define i32 @function_13724(i32* %arg1) local_unnamed_addr {
dec_label_pc_13724:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_13724 = load i32, i32* @r4, align 4
  store i32 %v3_13724, i32* %stack_var_-12, align 4
  %v1_13728 = add i32 %tmp, 16
  store i32 %v1_13728, i32* %r2.global-to-local, align 4
  %v1_1372c = inttoptr i32 %v1_13728 to i32*
  %v2_1372c = load i32, i32* %v1_1372c, align 4
  store i32 %v2_1372c, i32* %r2.global-to-local, align 4
  %v3_1372c = add i32 %tmp, 20
  %v4_1372c = inttoptr i32 %v3_1372c to i32*
  %v5_1372c = load i32, i32* %v4_1372c, align 4
  store i32 %v5_1372c, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v5_1373c = icmp slt i32 %v2_1372c, %v5_1372c
  br i1 %v5_1373c, label %dec_label_pc_13790, label %dec_label_pc_13740

dec_label_pc_13740:                               ; preds = %dec_label_pc_13724
  store i32 217, i32* %r7.global-to-local, align 4
  %v2_13744 = load i32, i32* %arg1, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_13744, i32* %r7.global-to-local, align 4
  %tmp9 = icmp slt i32 %v2_13744, 1
  br i1 %tmp9, label %dec_label_pc_13768, label %.dec_label_pc_13790_crit_edge

.dec_label_pc_13790_crit_edge:                    ; preds = %dec_label_pc_13740
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_13744, i32* %v4_1372c, align 4
  %v5_13760 = load i32, i32* %r3.global-to-local, align 4
  %v6_13760 = load i32, i32* %ip.global-to-local, align 4
  %v7_13760 = add i32 %v6_13760, 16
  %v8_13760 = inttoptr i32 %v7_13760 to i32*
  store i32 %v5_13760, i32* %v8_13760, align 4
  %v0_13790.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13790

dec_label_pc_13768:                               ; preds = %dec_label_pc_13740
  %v1_13768 = add i32 %v2_13744, 2
  %v7_13768 = icmp eq i32 %v1_13768, 0
  br i1 %v7_13768, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_13768
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_13768, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %v1_13768, %dec_label_pc_13768 ]
  %v0_13770 = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_13768 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %tmp12 = icmp slt i32 %v2_13744, 0
  %v4_13770 = zext i1 %tmp12 to i32
  %v5_13770 = and i32 %v0_13770, %v4_13770
  %v6_13770 = icmp eq i32 %v5_13770, 0
  br i1 %v6_13770, label %bb11, label %dec_label_pc_1377c

bb11:                                             ; preds = %bb10
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_137b8

dec_label_pc_1377c:                               ; preds = %bb10
  %v0_1377c = call i32 @function_139e8()
  %v0_13780 = load i32, i32* %r7.global-to-local, align 4
  %v1_13780 = sub i32 0, %v0_13780
  store i32 %v1_13780, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_13788 = inttoptr i32 %v0_1377c to i32*
  store i32 %v1_13780, i32* %v2_13788, align 4
  br label %dec_label_pc_137b8

dec_label_pc_13790:                               ; preds = %.dec_label_pc_13790_crit_edge, %dec_label_pc_13724
  %v1_137ac = phi i32 [ %v0_13790.pre, %.dec_label_pc_13790_crit_edge ], [ %tmp, %dec_label_pc_13724 ]
  %v1_13790 = add i32 %v1_137ac, 16
  %v2_13790 = inttoptr i32 %v1_13790 to i32*
  %v3_13790 = load i32, i32* %v2_13790, align 4
  %v1_13794 = add i32 %v1_137ac, 32
  store i32 %v1_13794, i32* %r3.global-to-local, align 4
  %v2_13798 = add i32 %v3_13790, %v1_13794
  store i32 %v2_13798, i32* %lr.global-to-local, align 4
  %v1_1379c = add i32 %v2_13798, 16
  %v2_1379c = inttoptr i32 %v1_1379c to i16*
  %v3_1379c = load i16, i16* %v2_1379c, align 2
  %v4_1379c = zext i16 %v3_1379c to i32
  store i32 %v4_1379c, i32* %r2.global-to-local, align 4
  %v1_137a0 = add i32 %v2_13798, 8
  store i32 %v1_137a0, i32* %r3.global-to-local, align 4
  %v1_137a4 = inttoptr i32 %v1_137a0 to i32*
  %v2_137a4 = load i32, i32* %v1_137a4, align 4
  store i32 %v2_137a4, i32* %r3.global-to-local, align 4
  %v3_137a4 = add i32 %v2_13798, 12
  %v4_137a4 = inttoptr i32 %v3_137a4 to i32*
  %v5_137a4 = load i32, i32* %v4_137a4, align 4
  store i32 %v5_137a4, i32* %r4.global-to-local, align 4
  %v2_137a8 = add i32 %v4_1379c, %v3_13790
  store i32 %v2_137a8, i32* %r2.global-to-local, align 4
  %v2_137ac = add i32 %v1_137ac, 8
  %v3_137ac = inttoptr i32 %v2_137ac to i32*
  store i32 %v2_137a4, i32* %v3_137ac, align 4
  %v0_137b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_137b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_137b0 = add i32 %v1_137b0, 12
  %v3_137b0 = inttoptr i32 %v2_137b0 to i32*
  store i32 %v0_137b0, i32* %v3_137b0, align 4
  %v0_137b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_137b4 = load i32, i32* %ip.global-to-local, align 4
  %v2_137b4 = add i32 %v1_137b4, 16
  %v3_137b4 = inttoptr i32 %v2_137b4 to i32*
  store i32 %v0_137b4, i32* %v3_137b4, align 4
  br label %dec_label_pc_137b8

dec_label_pc_137b8:                               ; preds = %bb11, %dec_label_pc_1377c, %dec_label_pc_13790
  %v0_137b8 = load i32, i32* %lr.global-to-local, align 4
  %v2_137c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_137c0, i32* @r4, align 4
  ret i32 %v0_137b8

; uselistorder directives
  uselistorder i32 %v1_137ac, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_137b8, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_137cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_137cc:
  %v1_137cc = load i32, i32* @r0, align 4
  ret i32 %v1_137cc
}

define i32 @function_137d0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_137d0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = call i32 @__decompiler_undefined_function_0()
  %tmp45 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v4_137d4 = mul i32 %arg2, 4
  %v5_137d4 = add i32 %v4_137d4, 4
  %v1_137d8 = add i32 %v5_137d4, %tmp
  store i32 %v1_137d8, i32* @r5, align 4
  %v2_137e0 = load i32, i32* %arg3, align 4
  store i32 %v2_137e0, i32* @r7, align 4
  store i32 %v1_137d8, i32* @global_var_2351c.529, align 4
  %v2_137e8 = ptrtoint i32* %stack_var_-208 to i32
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg1, i32* @sl, align 4
  br label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %dec_label_pc_137fc, %dec_label_pc_137d0
  %v0_137fc = phi i32 [ %v4_13800, %dec_label_pc_137fc ], [ %v1_137d8, %dec_label_pc_137d0 ]
  store i32 %v0_137fc, i32* @r4, align 4
  %v1_13800 = inttoptr i32 %v0_137fc to i32*
  %v2_13800 = load i32, i32* %v1_13800, align 4
  store i32 %v2_13800, i32* %r1.global-to-local, align 4
  %v4_13800 = add i32 %v0_137fc, 4
  %v2_13804 = icmp eq i32 %v2_13800, 0
  br i1 %v2_13804, label %dec_label_pc_1380c, label %dec_label_pc_137fc

dec_label_pc_1380c:                               ; preds = %dec_label_pc_137fc
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %v2_137e8, i32* %r0.global-to-local, align 4
  %v3_13814 = bitcast i32* %stack_var_-208 to i8*
  %v4_13814 = call i32 @function_16064(i8* %v3_13814, i32 0, i32 152)
  store i32 %v4_13814, i32* %r0.global-to-local, align 4
  %v0_1381c = load i32, i32* @r4, align 4
  %v1_1381c = add i32 %v0_1381c, 4
  store i32 %v1_1381c, i32* %r2.global-to-local, align 4
  store i32 %v0_1381c, i32* %r1.global-to-local, align 4
  store i32 %v1_1381c, i32* @global_var_2383c.532, align 4
  %v2_1384419 = inttoptr i32 %v1_1381c to i32*
  %v3_1384420 = load i32, i32* %v2_1384419, align 4
  %v2_1384822 = icmp eq i32 %v3_1384420, 0
  br i1 %v2_1384822, label %dec_label_pc_13850, label %dec_label_pc_1382c.lr.ph

dec_label_pc_1382c.lr.ph:                         ; preds = %dec_label_pc_1380c
  %v6_13834 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1382c

dec_label_pc_1382c:                               ; preds = %dec_label_pc_1382c.lr.ph, %dec_label_pc_13844
  %v4_13830 = phi i32 [ %v0_1381c, %dec_label_pc_1382c.lr.ph ], [ %v1_13840, %dec_label_pc_13844 ]
  %v5_13838 = phi i32 [ %v3_1384420, %dec_label_pc_1382c.lr.ph ], [ %v3_13844, %dec_label_pc_13844 ]
  %v2_1382c = icmp ugt i32 %v5_13838, 36
  %v7_1382c = icmp eq i32 %v5_13838, 37
  %v2_13830 = xor i1 %v2_1382c, true
  %v3_13830 = or i1 %v7_1382c, %v2_13830
  br i1 %v3_13830, label %bb, label %.thread38

bb:                                               ; preds = %dec_label_pc_1382c
  %v5_13830 = add i32 %v4_13830, 8
  %v6_13830 = inttoptr i32 %v5_13830 to i32*
  %v7_13830 = load i32, i32* %v6_13830, align 4
  store i32 %v7_13830, i32* %r2.global-to-local, align 4
  store i32 %v6_13834, i32* %r0.global-to-local, align 4
  %v6_13838 = and i32 %v5_13838, 1073741824
  %v7_13838 = icmp ne i32 %v6_13838, 0
  %v8_13838 = mul i32 %v5_13838, 4
  %v9_13838 = add i32 %v8_13838, %v6_13834
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1382c, %bb
  %v5_1383c = phi i32 [ %v9_13838, %bb ], [ %v5_13838, %dec_label_pc_1382c ]
  %v1_1383c23 = phi i1 [ %v7_13838, %bb ], [ %v2_1382c, %dec_label_pc_1382c ]
  %v2_1383c = xor i1 %v1_1383c23, true
  %v3_1383c = or i1 %v7_1382c, %v2_1383c
  br i1 %v3_1383c, label %bb60, label %dec_label_pc_13844

bb60:                                             ; preds = %.thread38
  %v4_1383c = load i32, i32* %r2.global-to-local, align 4
  %v6_1383c = add i32 %v5_1383c, -176
  %v7_1383c = inttoptr i32 %v6_1383c to i32*
  store i32 %v4_1383c, i32* %v7_1383c, align 4
  %v0_13840.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13844

dec_label_pc_13844:                               ; preds = %.thread38, %bb60
  %v0_13840 = phi i32 [ %v4_13830, %.thread38 ], [ %v0_13840.pre, %bb60 ]
  %v1_13840 = add i32 %v0_13840, 8
  store i32 %v1_13840, i32* %r1.global-to-local, align 4
  %v1_13844 = add i32 %v0_13840, 12
  %v2_13844 = inttoptr i32 %v1_13844 to i32*
  %v3_13844 = load i32, i32* %v2_13844, align 4
  %v2_13848 = icmp eq i32 %v3_13844, 0
  br i1 %v2_13848, label %dec_label_pc_13844.dec_label_pc_13850_crit_edge, label %dec_label_pc_1382c

dec_label_pc_13844.dec_label_pc_13850_crit_edge:  ; preds = %dec_label_pc_13844
  br label %dec_label_pc_13850

dec_label_pc_13850:                               ; preds = %dec_label_pc_13844.dec_label_pc_13850_crit_edge, %dec_label_pc_1380c
  store i32 %tmp45, i32* %r2.global-to-local, align 4
  %v0_13870 = load i32, i32* @r7, align 4
  %v2_13870 = icmp eq i32 %v0_13870, 0
  store i32 %tmp45, i32* @global_var_23844.537, align 4
  br i1 %v2_13870, label %dec_label_pc_138b4, label %dec_label_pc_1387c

dec_label_pc_1387c:                               ; preds = %dec_label_pc_13850
  store i32 ptrtoint (i32* @global_var_230ec.539 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_13870, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230ec.539 to i32), i32* %r0.global-to-local, align 4
  store i32 %v0_13870, i32* @global_var_230f0.541, align 4
  store i32 %v0_13870, i32* @global_var_230ec.539, align 4
  %v1_138a813 = inttoptr i32 %v0_13870 to i8*
  %v2_138a814 = load i8, i8* %v1_138a813, align 1
  %v2_138ac16 = icmp eq i8 %v2_138a814, 0
  br i1 %v2_138ac16, label %dec_label_pc_138b4, label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_1387c, %.thread
  %v1_1389c = phi i32 [ %v1_138a4, %.thread ], [ %v0_13870, %dec_label_pc_1387c ]
  %v0_13898.in = phi i8 [ %v2_138a8, %.thread ], [ %v2_138a814, %dec_label_pc_1387c ]
  %v7_13898 = icmp eq i8 %v0_13898.in, 47
  br i1 %v7_13898, label %bb61, label %.thread

bb61:                                             ; preds = %dec_label_pc_13898
  %v2_1389c = add i32 %v1_1389c, 1
  %v2_138a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_138a0 = inttoptr i32 %v2_138a0 to i32*
  store i32 %v2_1389c, i32* %v3_138a0, align 4
  %v0_138a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13898, %bb61
  %v0_138a4 = phi i32 [ %v1_1389c, %dec_label_pc_13898 ], [ %v0_138a4.pre, %bb61 ]
  %v1_138a4 = add i32 %v0_138a4, 1
  store i32 %v1_138a4, i32* %r1.global-to-local, align 4
  %v1_138a8 = inttoptr i32 %v1_138a4 to i8*
  %v2_138a8 = load i8, i8* %v1_138a8, align 1
  %v2_138ac = icmp eq i8 %v2_138a8, 0
  br i1 %v2_138ac, label %dec_label_pc_138b4, label %dec_label_pc_13898

dec_label_pc_138b4:                               ; preds = %.thread, %dec_label_pc_1387c, %dec_label_pc_13850
  store i32 %v2_137e8, i32* %r0.global-to-local, align 4
  %v1_138b8 = call i32 @function_16904(i32 %v2_137e8)
  store i32 %tmp44, i32* @r0, align 4
  %v2_138c8 = call i32 @function_137cc(i32 %tmp44)
  store i32 %v2_138c8, i32* @r0, align 4
  store i32 %tmp56, i32* %r2.global-to-local, align 4
  %v9_138d4 = icmp eq i32 %tmp56, %tmp43
  br i1 %v9_138d4, label %dec_label_pc_138dc, label %dec_label_pc_138f8

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138b4
  store i32 %tmp55, i32* %r2.global-to-local, align 4
  %v9_138e4 = icmp eq i32 %tmp55, %tmp42
  br i1 %v9_138e4, label %dec_label_pc_138ec, label %dec_label_pc_138f8

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138dc
  %v2_138f0 = icmp eq i32 %tmp41, 0
  br i1 %v2_138f0, label %dec_label_pc_13974, label %dec_label_pc_138f8

dec_label_pc_138f8:                               ; preds = %dec_label_pc_138dc, %dec_label_pc_138b4, %dec_label_pc_138ec
  %v2_138f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_138f8, i32* @r4, align 4
  store i32 %v2_138f8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v3_13908 = bitcast i32* %stack_var_-56 to i8*
  %v4_13908 = call i32 @function_16064(i8* %v3_13908, i32 0, i32 24)
  store i32 168, i32* %r7.global-to-local, align 4
  store i32 %v2_138f8, i32* @r0, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13934

dec_label_pc_13934:                               ; preds = %bb63, %dec_label_pc_138f8
  %v1_13934 = phi i32 [ %v1_1395c, %bb63 ], [ 0, %dec_label_pc_138f8 ]
  %v0_13934 = load i32, i32* @r4, align 4
  %v2_13934 = add i32 %v0_13934, %v1_13934
  %v1_13938 = add i32 %v2_13934, 6
  %v2_13938 = inttoptr i32 %v1_13938 to i16*
  %v3_13938 = load i16, i16* %v2_13938, align 2
  %v1_1393c = and i16 %v3_13938, 32
  %v2_1393c = icmp eq i16 %v1_1393c, 0
  br i1 %v2_1393c, label %bb63, label %dec_label_pc_13944

dec_label_pc_13944:                               ; preds = %dec_label_pc_13934
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1aa98.544 to i32), i32* @r0, align 4
  store i32 131074, i32* %r1.global-to-local, align 4
  br i1 icmp slt ([10 x i8]* @global_var_1aa98.544, [10 x i8]* null), label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_13944
  %v3_13958 = load i32, i32* %ip.global-to-local, align 4
  %v4_13958 = trunc i32 %v3_13958 to i8
  %v6_13958 = inttoptr i32 %v3_13958 to i8*
  store i8 %v4_13958, i8* %v6_13958, align 1
  %v0_1395c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_13934, %dec_label_pc_13944, %bb62
  %v0_1395c = phi i32 [ %v1_13934, %dec_label_pc_13934 ], [ %v1_13934, %dec_label_pc_13944 ], [ %v0_1395c.pre, %bb62 ]
  %v1_1395c = add i32 %v0_1395c, 8
  store i32 %v1_1395c, i32* %r2.global-to-local, align 4
  %v7_13960 = icmp eq i32 %v1_1395c, 24
  br i1 %v7_13960, label %dec_label_pc_13968, label %dec_label_pc_13934

dec_label_pc_13968:                               ; preds = %bb63
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_23834.546, align 4
  br label %dec_label_pc_13974

dec_label_pc_13974:                               ; preds = %dec_label_pc_138ec, %dec_label_pc_13968
  store i32 80256, i32* @lr, align 4
  %v1_1397c = call i32 @function_80b4()
  store i32 %v1_1397c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23008.551 to i32), i32* %r7.global-to-local, align 4
  br i1 icmp uge (i32* @global_var_23004.549, i32* @global_var_23008.551), label %dec_label_pc_139a0, label %dec_label_pc_1398c

dec_label_pc_1398c:                               ; preds = %dec_label_pc_1398c, %dec_label_pc_13974
  %v0_1398c = phi i32 [ %v4_1398c, %dec_label_pc_1398c ], [ ptrtoint (i32* @global_var_23004.549 to i32), %dec_label_pc_13974 ]
  %v1_1398c = inttoptr i32 %v0_1398c to i32*
  %v2_1398c = load i32, i32* %v1_1398c, align 4
  %v4_1398c = add i32 %v0_1398c, 4
  call void @__pseudo_branch(i32 %v2_1398c)
  %v1_13998 = load i32, i32* %r7.global-to-local, align 4
  %v3_13998 = icmp ult i32 %v4_1398c, %v1_13998
  br i1 %v3_13998, label %dec_label_pc_1398c, label %dec_label_pc_139a0

dec_label_pc_139a0:                               ; preds = %dec_label_pc_1398c, %dec_label_pc_13974
  %v0_139a0 = load i32, i32* @r6, align 4
  store i32 %v0_139a0, i32* %r1.global-to-local, align 4
  %v0_139a4 = load i32, i32* @r5, align 4
  store i32 %v0_139a4, i32* %r2.global-to-local, align 4
  %v0_139a8 = load i32, i32* @r8, align 4
  store i32 %v0_139a8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_139b4 = call i32 @function_13a00(i32 %v0_139a8)
  store i32 %v1_139b4, i32* %r0.global-to-local, align 4
  ret i32 %v1_139b4

; uselistorder directives
  uselistorder i32 %v0_1398c, { 1, 0 }
  uselistorder i32 %v1_1395c, { 1, 2, 0 }
  uselistorder i32 %v1_13934, { 1, 2, 0 }
  uselistorder i8 %v2_138a8, { 1, 0 }
  uselistorder i32 %v1_138a4, { 1, 2, 0 }
  uselistorder i32 %v0_13870, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %v3_13844, { 1, 0 }
  uselistorder i32 %v1_13840, { 1, 0 }
  uselistorder i32 %v0_13840, { 1, 0 }
  uselistorder i1 %v2_1382c, { 1, 0 }
  uselistorder i32 %v5_13838, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_137fc, { 2, 1, 0 }
  uselistorder i32 %v2_137e8, { 1, 0, 2 }
  uselistorder i32 %tmp56, { 1, 0 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp44, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 10, 6, 7, 8, 9, 13, 14, 11, 12, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 1, 9, 5, 6, 7, 8, 2, 10, 0 }
  uselistorder i32 (i32)* @function_13a00, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* @global_var_23004.549, { 1, 0 }
  uselistorder i32 168, { 2, 0, 1 }
  uselistorder i8 47, { 0, 5, 6, 1, 2, 3, 4, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13974, { 1, 0 }
  uselistorder label %bb63, { 2, 1, 0 }
  uselistorder label %dec_label_pc_138f8, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_13898, { 1, 0 }
  uselistorder label %dec_label_pc_13844, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_1382c, { 1, 0 }
}

define i32 @function_139e8() local_unnamed_addr {
dec_label_pc_139e8:
  %v0_139ec = call i32 @function_1687c()
  %v1_139f0 = add i32 %v0_139ec, -164
  ret i32 %v1_139f0
}

define i32 @function_139fc() local_unnamed_addr {
dec_label_pc_139fc:
  %v1_139fc = load i32, i32* @r0, align 4
  ret i32 %v1_139fc
}

define i32 @function_13a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a00:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_13a0c = call i32 @function_139fc()
  store i32 %v1_13a0c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23008.551 to i32), i32* %r5.global-to-local, align 4
  br i1 and (i1 icmp ule (i32 ptrtoint (i32* @global_var_23008.551 to i32), i32 143372), i1 icmp ne (i32 ptrtoint (i32* @global_var_23008.551 to i32), i32 143372)), label %dec_label_pc_13a1c, label %dec_label_pc_13a30

dec_label_pc_13a1c:                               ; preds = %dec_label_pc_13a00, %dec_label_pc_13a1c
  %v0_13a1c3 = phi i32 [ %v1_13a1c, %dec_label_pc_13a1c ], [ 143372, %dec_label_pc_13a00 ]
  %v1_13a1c = add i32 %v0_13a1c3, -4
  %v2_13a1c = inttoptr i32 %v1_13a1c to i32*
  %v3_13a1c = load i32, i32* %v2_13a1c, align 4
  call void @__pseudo_branch(i32 %v3_13a1c)
  %v1_13a28.pre = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13a1c, %v1_13a28.pre
  br i1 %tmp, label %dec_label_pc_13a1c, label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a1c, %dec_label_pc_13a00
  store i32 80444, i32* @lr, align 4
  %v1_13a38 = call i32 @function_1a248()
  store i32 %v1_13a38, i32* @r0, align 4
  %v1_13a44 = call i32 @function_17d44()
  %v0_13a48 = load i32, i32* %r6.global-to-local, align 4
  %v1_13a4c = call i32 @function_16a5c(i32 %v0_13a48)
  ret i32 %v1_13a4c

; uselistorder directives
  uselistorder i32 %v1_13a1c, { 0, 2, 1 }
  uselistorder i32 143372, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13a1c, { 1, 0 }
}

define i32 @function_13a64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13a64:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_13a84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a84:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %v3_13a88 = load i32, i32* @r4, align 4
  %v15_13a88 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v7_13a98 = icmp eq i32 %arg2, 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  br i1 %v7_13a98, label %bb, label %dec_label_pc_13ab0

bb:                                               ; preds = %dec_label_pc_13a84
  %v2_13aa8 = or i32 %arg3, 131072
  store i32 %v2_13aa8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13bd0

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a84
  %v7_13ab0 = icmp eq i32 %arg2, 14
  br i1 %v7_13ab0, label %dec_label_pc_13ab8, label %dec_label_pc_13ae0

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13ab0
  store i32 14, i32* @r2, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_13ad8 = call i32 @function_16270(i32 221, i32 %arg1, i32 14)
  store i32 %v3_13ad8, i32* @r0, align 4
  br label %dec_label_pc_13be4

dec_label_pc_13ae0:                               ; preds = %dec_label_pc_13ab0
  %v7_13ae0 = icmp eq i32 %arg2, 9
  br i1 %v7_13ae0, label %dec_label_pc_13ae8, label %dec_label_pc_13b38

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ae0
  %v2_13af4 = ptrtoint i32* %stack_var_-44 to i32
  %v4_13af8 = call i32 @function_13a64(i32 221, i32 %arg1, i32 16, i32 %v2_13af4)
  store i32 %v4_13af8, i32* @r0, align 4
  %v4_13b00 = icmp eq i32 %v4_13af8, -22
  br i1 %v4_13b00, label %dec_label_pc_13b04, label %dec_label_pc_13b1c

dec_label_pc_13b04:                               ; preds = %dec_label_pc_13ae8
  %v0_13b04 = load i32, i32* %r7.global-to-local, align 4
  %v0_13b08 = load i32, i32* %r6.global-to-local, align 4
  %v0_13b0c = load i32, i32* %r5.global-to-local, align 4
  %v4_13b14 = call i32 @function_13a64(i32 221, i32 %v0_13b04, i32 %v0_13b08, i32 %v0_13b0c)
  br label %dec_label_pc_13be8

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13ae8
  %v2_13b1c = icmp eq i32 %v4_13af8, 0
  br i1 %v2_13b1c, label %dec_label_pc_13b24, label %dec_label_pc_13be4

dec_label_pc_13b24:                               ; preds = %dec_label_pc_13b1c
  %v3_13b24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13b24, i32* @r3, align 4
  %v7_13b2c = icmp eq i32 %v3_13b24, 2
  br i1 %v7_13b2c, label %bb21, label %dec_label_pc_13be8

bb21:                                             ; preds = %dec_label_pc_13b24
  %v2_13b30 = sub i32 0, %tmp
  br label %dec_label_pc_13be8

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13ae0
  %v9_13b3c = icmp eq i32 %arg2, 1030
  br i1 %v9_13b3c, label %dec_label_pc_13b44, label %dec_label_pc_13bd0

dec_label_pc_13b44:                               ; preds = %dec_label_pc_13b38
  %v4_13b54 = call i32 @function_13a64(i32 221, i32 %arg1, i32 1030, i32 %arg3)
  %v7_13b58 = icmp eq i32 %v4_13b54, -22
  store i32 %v4_13b54, i32* @r4, align 4
  br i1 %v7_13b58, label %dec_label_pc_13b6c, label %dec_label_pc_13bb4

dec_label_pc_13b6c:                               ; preds = %dec_label_pc_13b44
  %v0_13b6c = load i32, i32* %r6.global-to-local, align 4
  %v0_13b74 = load i32, i32* %r7.global-to-local, align 4
  %v4_13b7c = call i32 @function_13a64(i32 221, i32 %v0_13b74, i32 %v0_13b6c, i32 0)
  %v7_13b80 = icmp eq i32 %v4_13b7c, -22
  br i1 %v7_13b80, label %dec_label_pc_13b9c, label %dec_label_pc_13b88

dec_label_pc_13b88:                               ; preds = %dec_label_pc_13b6c
  %v1_13b88 = icmp slt i32 %v4_13b7c, 0
  br i1 %v1_13b88, label %dec_label_pc_13bc8, label %dec_label_pc_13b90

dec_label_pc_13b90:                               ; preds = %dec_label_pc_13b88
  store i32 6, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13bc8

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b6c
  %v0_13b9c = load i32, i32* %r7.global-to-local, align 4
  %v0_13ba0 = load i32, i32* %r5.global-to-local, align 4
  %v4_13bac = call i32 @function_13a64(i32 221, i32 %v0_13b9c, i32 0, i32 %v0_13ba0)
  store i32 %v4_13bac, i32* @r4, align 4
  br label %dec_label_pc_13bb4

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13b44, %dec_label_pc_13b9c
  %v3_13bb8 = phi i32 [ %v4_13bac, %dec_label_pc_13b9c ], [ %v4_13b54, %dec_label_pc_13b44 ]
  %storemerge1 = icmp slt i32 %v3_13bb8, 0
  br i1 %storemerge1, label %.thread6, label %bb23

bb23:                                             ; preds = %dec_label_pc_13bb4
  store i32 2, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13bb4, %bb23
  %v3_13bc4 = xor i1 %storemerge1, true
  call void @__pseudo_cond_branch(i1 %v3_13bc4, i32 ptrtoint (i32* @global_var_13a64.559 to i32))
  br label %dec_label_pc_13bc8

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13b88, %dec_label_pc_13b90, %.thread6
  %v0_13bc8 = load i32, i32* @r4, align 4
  store i32 %v0_13bc8, i32* @r0, align 4
  br label %dec_label_pc_13be4

dec_label_pc_13bd0:                               ; preds = %bb, %dec_label_pc_13b38
  %v0_13bd8 = phi i32 [ %arg3, %dec_label_pc_13b38 ], [ %v2_13aa8, %bb ]
  %v4_13be0 = call i32 @function_13a64(i32 221, i32 %arg1, i32 %arg2, i32 %v0_13bd8)
  store i32 %v4_13be0, i32* @r0, align 4
  br label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13b1c, %dec_label_pc_13bc8, %dec_label_pc_13ab8, %dec_label_pc_13bd0
  %v0_13be4 = call i32 @function_13c94()
  br label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %bb21, %dec_label_pc_13b24, %dec_label_pc_13b04, %dec_label_pc_13be4
  %v1_13bf4 = phi i32 [ %v2_13b30, %bb21 ], [ %tmp, %dec_label_pc_13b24 ], [ %v4_13b14, %dec_label_pc_13b04 ], [ %v0_13be4, %dec_label_pc_13be4 ]
  store i32 %v3_13a88, i32* @r4, align 4
  store i32 %v15_13a88, i32* @lr, align 4
  ret i32 %v1_13bf4

; uselistorder directives
  uselistorder i32 %v4_13b7c, { 1, 0 }
  uselistorder i32 %v4_13b54, { 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13a64, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_13be8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13be4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13bd0, { 1, 0 }
  uselistorder label %dec_label_pc_13bc8, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_13bb4, { 1, 0 }
}

define i32 @function_13bfc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bfc:
  %r7.global-to-local = alloca i32, align 4
  %v6_13bfc = load i32, i32* @r2, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_13c0c = and i32 %arg2, 64
  %v2_13c0c = icmp eq i32 %v1_13c0c, 0
  br i1 %v2_13c0c, label %dec_label_pc_13c14, label %dec_label_pc_13c2c

dec_label_pc_13c14:                               ; preds = %dec_label_pc_13bfc
  %v2_13c1c = and i32 %arg2, 4210688
  %v3_13c20 = icmp eq i32 %v2_13c1c, 4210688
  br i1 %v3_13c20, label %dec_label_pc_13c2c, label %dec_label_pc_13c38

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13c14, %dec_label_pc_13bfc
  br label %dec_label_pc_13c38

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c14, %dec_label_pc_13c2c
  %storemerge = phi i32 [ %v6_13bfc, %dec_label_pc_13c2c ], [ 0, %dec_label_pc_13c14 ]
  store i32 %storemerge, i32* @r3, align 4
  %v1_13c40 = or i32 %arg2, 131072
  store i32 %v1_13c40, i32* @r2, align 4
  %v3_13c54 = call i32 @function_16270(i32 5, i32 %arg1, i32 %v1_13c40)
  %v1_13c58 = icmp slt i32 %v3_13c54, 0
  br i1 %v1_13c58, label %dec_label_pc_13c78, label %dec_label_pc_13c60

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c38
  %v0_13c60 = load i32, i32* %r7.global-to-local, align 4
  %v1_13c60 = and i32 %v0_13c60, 524288
  %v2_13c60 = icmp eq i32 %v1_13c60, 0
  br i1 %v2_13c60, label %dec_label_pc_13c78, label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13c60
  store i32 221, i32* %r7.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13c78:                               ; preds = %dec_label_pc_13c68, %dec_label_pc_13c60, %dec_label_pc_13c38
  store i32 %v3_13c54, i32* @r0, align 4
  %v0_13c7c = call i32 @function_13c94()
  ret i32 %v0_13c7c

; uselistorder directives
  uselistorder i32 221, { 7, 3, 4, 2, 1, 5, 0, 6 }
  uselistorder i32 64, { 11, 31, 4, 5, 12, 6, 13, 14, 7, 15, 8, 16, 17, 9, 18, 19, 10, 20, 21, 0, 22, 23, 1, 24, 26, 25, 2, 27, 29, 28, 3, 30 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_13c38, { 1, 0 }
}

define i32 @function_13c94() local_unnamed_addr {
dec_label_pc_13c94:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13c94 = load i32, i32* @r0, align 4
  %v2_13c94 = icmp ugt i32 %v0_13c94, -4097
  %v7_13c94 = icmp eq i32 %v0_13c94, -4096
  %v3_13c98 = load i32, i32* @r4, align 4
  store i32 %v3_13c98, i32* %stack_var_-8, align 4
  %v2_13c9c = xor i1 %v2_13c94, true
  %v3_13c9c = or i1 %v7_13c94, %v2_13c9c
  br i1 %v3_13c9c, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_13c94
  store i32 %v0_13c94, i32* @r2, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13c94, %bb
  store i32 %v0_13c94, i32* %r4.global-to-local, align 4
  %v2_13ca4 = xor i1 %v7_13c94, true
  %v3_13ca4 = and i1 %v2_13c94, %v2_13ca4
  br i1 %v3_13ca4, label %dec_label_pc_13cb4, label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %bb4, %dec_label_pc_13cb4
  %v2_13cac = phi i32 [ %v3_13c98, %bb4 ], [ %v2_13cac.pre, %dec_label_pc_13cb4 ]
  %v0_13ca8 = load i32, i32* @r2, align 4
  store i32 %v2_13cac, i32* @r4, align 4
  ret i32 %v0_13ca8

dec_label_pc_13cb4:                               ; preds = %bb4
  %v0_13cb4 = call i32 @function_139e8()
  %v0_13cb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13cb8 = sub i32 0, %v0_13cb8
  store i32 %v1_13cb8, i32* @r3, align 4
  store i32 -1, i32* @r2, align 4
  %v2_13cc0 = inttoptr i32 %v0_13cb4 to i32*
  store i32 %v1_13cb8, i32* %v2_13cc0, align 4
  %v2_13cac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13ca8

; uselistorder directives
  uselistorder i1 %v7_13c94, { 1, 0 }
  uselistorder i1 %v2_13c94, { 1, 0 }
  uselistorder i32 %v0_13c94, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13ca8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13cc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  %v3_13ccc = load i32, i32* @r4, align 4
  %v2_13cd4 = ptrtoint i32* %stack_var_-12 to i32
  %v2_13ce4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13ce4, i32* %ip.global-to-local, align 4
  %v4_13ce820 = add i32 %v2_13cd4, 4
  store i32 %v4_13ce820, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge

dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge:  ; preds = %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge_crit_edge, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.lr.ph
  %v2_13cec.pre = phi i32 [ %v2_13ce4, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.lr.ph ], [ %v2_13cec.pre.pre, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge_crit_edge ]
  %v0_13ce8.pre = phi i32 [ %v4_13ce820, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.lr.ph ], [ %v0_13ce8.pre.pre, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge_crit_edge ]
  %v1_13cf025 = phi i32 [ 4, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.lr.ph ], [ %v1_13cf0, %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge_crit_edge ]
  %v1_13ce8 = inttoptr i32 %v0_13ce8.pre to i32*
  %v2_13ce8 = load i32, i32* %v1_13ce8, align 4
  %v4_13ce8 = add i32 %v0_13ce8.pre, 4
  store i32 %v4_13ce8, i32* %r0.global-to-local, align 4
  %v3_13cec = add i32 %v1_13cf025, %v2_13cec.pre
  %v4_13cec = inttoptr i32 %v3_13cec to i32*
  store i32 %v2_13ce8, i32* %v4_13cec, align 4
  %v0_13cf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13cf0 = add i32 %v0_13cf0, 4
  store i32 %v1_13cf0, i32* %r2.global-to-local, align 4
  %v7_13cf4 = icmp eq i32 %v1_13cf0, 16
  br i1 %v7_13cf4, label %dec_label_pc_13cfc, label %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge_crit_edge

dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge.dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge_crit_edge: ; preds = %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge
  %v0_13ce8.pre.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_13cec.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge

dec_label_pc_13cfc:                               ; preds = %dec_label_pc_13ce8.dec_label_pc_13ce8_crit_edge
  store i32 %arg1, i32* @r0, align 4
  %v0_13d14 = call i32 @function_13c94()
  store i32 %v0_13d14, i32* %r0.global-to-local, align 4
  store i32 %v3_13ccc, i32* @r4, align 4
  ret i32 %v0_13d14

; uselistorder directives
  uselistorder i32 %v1_13cf0, { 1, 2, 0 }
  uselistorder i32 %v0_13ce8.pre, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0 }
}

define i32 @function_13d28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d28:
  store i32 %arg2, i32* @r1, align 4
  %v3_13d28 = load i32, i32* @r4, align 4
  %v6_13d28 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_13d2c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  br i1 %v2_13d2c, label %dec_label_pc_13d4c, label %dec_label_pc_13d3c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d28
  store i32 -1, i32* @r0, align 4
  %v0_13d40 = call i32 @function_1343c()
  %v1_13d44 = load i32, i32* @r4, align 4
  %v3_13d44 = icmp ult i32 %v0_13d40, %v1_13d44
  br i1 %v3_13d44, label %dec_label_pc_13d68, label %dec_label_pc_13d3c.dec_label_pc_13d4c_crit_edge

dec_label_pc_13d3c.dec_label_pc_13d4c_crit_edge:  ; preds = %dec_label_pc_13d3c
  %v1_13d4c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13d4c

dec_label_pc_13d4c:                               ; preds = %dec_label_pc_13d3c.dec_label_pc_13d4c_crit_edge, %dec_label_pc_13d28
  %v1_13d4c = phi i32 [ %v1_13d4c.pre, %dec_label_pc_13d3c.dec_label_pc_13d4c_crit_edge ], [ 0, %dec_label_pc_13d28 ]
  %v0_13d4c = phi i32 [ %v1_13d44, %dec_label_pc_13d3c.dec_label_pc_13d4c_crit_edge ], [ %arg1, %dec_label_pc_13d28 ]
  %v2_13d4c = mul i32 %v0_13d4c, %v1_13d4c
  %v1_13d50 = call i32 @function_14e90(i32 %v2_13d4c)
  store i32 %v1_13d50, i32* @r2, align 4
  br label %dec_label_pc_13d58

dec_label_pc_13d58:                               ; preds = %dec_label_pc_13d68, %dec_label_pc_13d4c
  %v0_13d58 = phi i32 [ %v0_13d58.pre, %dec_label_pc_13d68 ], [ %v1_13d50, %dec_label_pc_13d4c ]
  store i32 %v3_13d28, i32* @r4, align 4
  store i32 %v6_13d28, i32* @r5, align 4
  ret i32 %v0_13d58

dec_label_pc_13d68:                               ; preds = %dec_label_pc_13d3c
  %v0_13d68 = call i32 @function_139e8()
  store i32 0, i32* @r2, align 4
  %v2_13d74 = inttoptr i32 %v0_13d68 to i32*
  store i32 12, i32* %v2_13d74, align 4
  %v0_13d58.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13d58
}

define i32 @function_13d7c(i32* %arg1) local_unnamed_addr {
dec_label_pc_13d7c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13d7c = load i32, i32* @r4, align 4
  store i32 %v3_13d7c, i32* %stack_var_-36, align 4
  %v6_13d7c = load i32, i32* @r5, align 4
  %v9_13d7c = load i32, i32* @r6, align 4
  %v12_13d7c = load i32, i32* @r7, align 4
  %v15_13d7c = load i32, i32* @r8, align 4
  %v21_13d7c = load i32, i32* @sl, align 4
  %v2_13d80 = load i32, i32* %arg1, align 4
  store i32 %v2_13d80, i32* @sl, align 4
  %v1_13d84 = urem i32 %v2_13d80, 2
  %v2_13d84 = icmp eq i32 %v1_13d84, 0
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v2_13d84, label %dec_label_pc_13d94, label %dec_label_pc_13e70

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13d7c, %dec_label_pc_13e64
  %v0_13d94 = phi i32 [ %v0_13e64, %dec_label_pc_13e64 ], [ %v2_13d80, %dec_label_pc_13d7c ]
  %v3_13d94 = udiv i32 %v0_13d94, 16
  store i32 %v3_13d94, i32* %r3.global-to-local, align 4
  %v1_13d98 = add nsw i32 %v3_13d94, -1
  store i32 %v1_13d98, i32* @r0, align 4
  %tmp39 = icmp ult i32 %v1_13d98, 33
  br i1 %tmp39, label %.thread, label %dec_label_pc_13da8

.thread:                                          ; preds = %dec_label_pc_13d94
  store i32 %v1_13d98, i32* @r8, align 4
  br label %dec_label_pc_13dc0

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13d94
  %tmp40 = icmp ugt i32 %v1_13d98, 7168
  br i1 %tmp40, label %.thread18, label %dec_label_pc_13db4

.thread18:                                        ; preds = %dec_label_pc_13da8
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_13dc0

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13da8
  %v0_13db4 = call i32 @function_1808c()
  %v3_13db8 = udiv i32 %v0_13db4, 2097152
  %v1_13dbc = add nsw i32 %v3_13db8, -496
  store i32 %v1_13dbc, i32* @r8, align 4
  br label %dec_label_pc_13dc0

dec_label_pc_13dc0:                               ; preds = %.thread18, %.thread, %dec_label_pc_13db4
  %v0_13dc8 = phi i32 [ 63, %.thread18 ], [ %v1_13d98, %.thread ], [ %v1_13dbc, %dec_label_pc_13db4 ]
  %v3_13dc4 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_13dc4, i32* %r2.global-to-local, align 4
  %v3_13dc8 = mul i32 %v0_13dc8, 16
  store i32 %v3_13dc8, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %sb.global-to-local, align 4
  %v2_13dd0 = icmp eq i32 %v3_13dc4, 0
  store i1 %v2_13dd0, i1* @cpsr_z, align 1
  %v1_13dd4 = or i32 %v3_13dc8, 8
  store i32 %v1_13dd4, i32* %r3.global-to-local, align 4
  %v2_13dd8 = add i32 %v1_13dd4, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_13dd8, i32* @r6, align 4
  br i1 %v2_13dd0, label %bb, label %dec_label_pc_13ea0

bb:                                               ; preds = %dec_label_pc_13dc0
  %v1_13ddc = load i32, i32* @sl, align 4
  store i32 %v1_13ddc, i32* @r0, align 4
  br label %dec_label_pc_13de4

dec_label_pc_13de4:                               ; preds = %bb, %dec_label_pc_13edc
  %v0_13e0838 = phi i32 [ %v1_13ddc, %bb ], [ %v2_13edc, %dec_label_pc_13edc ]
  %v0_13de8 = phi i32 [ ptrtoint (i32* @global_var_23108.564 to i32), %bb ], [ %v0_13de8.pre, %dec_label_pc_13edc ]
  %v0_13de4 = phi i32 [ %v0_13dc8, %bb ], [ %v0_13de4.pre, %dec_label_pc_13edc ]
  %v1_13de4 = add i32 %v0_13de4, 1
  store i32 %v1_13de4, i32* %r1.global-to-local, align 4
  %v4_13de8 = mul i32 %v1_13de4, 16
  %v5_13de8 = add i32 %v4_13de8, %v0_13de8
  %v6_13de8 = inttoptr i32 %v5_13de8 to i32*
  %v7_13de8 = load i32, i32* %v6_13de8, align 4
  store i32 %v7_13de8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r6.global-to-local, align 4
  %v2_13df0 = icmp eq i32 %v7_13de8, 0
  br i1 %v2_13df0, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_13de4
  %v4_13df4 = mul i32 %v1_13de4, 16
  %v3_13df8 = add i32 %v4_13df4, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v3_13df8, i32* %r3.global-to-local, align 4
  %v2_13dfc = add i32 %v4_13df4, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v2_13dfc, i32* %r2.global-to-local, align 4
  %v7_13e00 = add i32 %v4_13de8, ptrtoint (i32* @global_var_23108.564 to i32)
  %v8_13e00 = inttoptr i32 %v7_13e00 to i32*
  store i32 %v2_13dfc, i32* %v8_13e00, align 4
  %v1_13e04 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e04 = load i32, i32* %r3.global-to-local, align 4
  %v3_13e04 = add i32 %v2_13e04, 4
  %v4_13e04 = inttoptr i32 %v3_13e04 to i32*
  store i32 %v1_13e04, i32* %v4_13e04, align 4
  %v0_13e08.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13de4, %bb31
  %v0_13e08 = phi i32 [ %v0_13e0838, %dec_label_pc_13de4 ], [ %v0_13e08.pre, %bb31 ]
  %v1_13e08 = load i32, i32* @sl, align 4
  %v9_13e08 = icmp eq i32 %v0_13e08, %v1_13e08
  br i1 %v9_13e08, label %dec_label_pc_13ee4, label %dec_label_pc_13e10

dec_label_pc_13e10:                               ; preds = %.thread4
  %v0_13e10 = load i32, i32* @r5, align 4
  %v1_13e10 = add i32 %v0_13e10, 8
  store i32 %v1_13e10, i32* %r2.global-to-local, align 4
  %v1_13e14 = load i32, i32* %r6.global-to-local, align 4
  %v2_13e14 = add i32 %v1_13e14, %v1_13e10
  %v3_13e14 = inttoptr i32 %v2_13e14 to i32*
  %v4_13e14 = load i32, i32* %v3_13e14, align 4
  store i32 %v4_13e14, i32* %r3.global-to-local, align 4
  %v2_13e18 = icmp eq i32 %v4_13e14, 0
  store i1 %v2_13e18, i1* @cpsr_z, align 1
  store i32 %v2_13e14, i32* %r4.global-to-local, align 4
  br i1 %v2_13e18, label %dec_label_pc_13e64, label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13e10
  %v0_13e24 = call i32 @function_167b4()
  store i32 %v0_13e24, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13e2c = load i32, i32* %r2.global-to-local, align 4
  %v2_13e2c = load i32, i32* %r6.global-to-local, align 4
  %v3_13e2c = add i32 %v2_13e2c, %v1_13e2c
  %v4_13e2c = inttoptr i32 %v3_13e2c to i32*
  store i32 0, i32* %v4_13e2c, align 4
  %v0_13e30 = call i32 @function_167b4()
  %v0_13e34 = load i32, i32* @r5, align 4
  %v1_13e34 = add i32 %v0_13e34, 12
  store i32 %v1_13e34, i32* %r3.global-to-local, align 4
  %v1_13e38 = load i32, i32* %r6.global-to-local, align 4
  %v2_13e38 = add i32 %v1_13e38, %v1_13e34
  %v3_13e38 = inttoptr i32 %v2_13e38 to i32*
  %v4_13e38 = load i32, i32* %v3_13e38, align 4
  store i32 %v4_13e38, i32* %r2.global-to-local, align 4
  %v2_13e3c = icmp eq i32 %v4_13e38, 0
  br i1 %v2_13e3c, label %dec_label_pc_13e60, label %dec_label_pc_13e44

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e24
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13e48 = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13e58 = icmp eq i32 %v0_13e48, -38
  br i1 %v7_13e58, label %dec_label_pc_13ec8, label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e44, %dec_label_pc_13e24
  %v0_13e60 = load i32, i32* %fp.global-to-local, align 4
  %v1_13e60 = inttoptr i32 %v0_13e60 to i32*
  %v2_13e60 = load i32, i32* %v1_13e60, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e10, %dec_label_pc_13ec8, %dec_label_pc_13e60
  %v0_13e64 = phi i32 [ %v0_13e08, %dec_label_pc_13e10 ], [ %v2_13ed4, %dec_label_pc_13ec8 ], [ %v2_13e60, %dec_label_pc_13e60 ]
  store i32 %v0_13e64, i32* @sl, align 4
  %v1_13e68 = urem i32 %v0_13e64, 2
  %v2_13e68 = icmp eq i32 %v1_13e68, 0
  br i1 %v2_13e68, label %dec_label_pc_13d94, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e64, %dec_label_pc_13d7c
  br label %dec_label_pc_13e74

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13f80, %dec_label_pc_13f78, %dec_label_pc_13e70
  %v1_13e7c = phi i32 [ 1, %dec_label_pc_13f80 ], [ 1, %dec_label_pc_13f78 ], [ 0, %dec_label_pc_13e70 ]
  %v2_13e78 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13e78, i32* @r4, align 4
  store i32 %v6_13d7c, i32* @r5, align 4
  store i32 %v9_13d7c, i32* @r6, align 4
  store i32 %v12_13d7c, i32* @r7, align 4
  store i32 %v15_13d7c, i32* @r8, align 4
  store i32 %v21_13d7c, i32* @sl, align 4
  ret i32 %v1_13e7c

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13ec4
  %v0_13e88 = load i32, i32* @r5, align 4
  %v1_13e88 = add i32 %v0_13e88, 12
  store i32 1, i32* @r2, align 4
  %v1_13e90 = load i32, i32* %sb.global-to-local, align 4
  %v2_13e90 = add i32 %v1_13e88, %v1_13e90
  store i32 %v2_13e90, i32* %r1.global-to-local, align 4
  %v0_13e94 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_13e9c = inttoptr i32 %v0_13e94 to i32*
  %v3_13e9c = call i32 @function_16334(i32* %v2_13e9c, i32 %v2_13e90)
  %v0_13ea0.pre = load i32, i32* @r5, align 4
  %v1_13ea4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13ea0:                               ; preds = %dec_label_pc_13dc0, %dec_label_pc_13e88
  %v1_13ea4 = phi i32 [ %v1_13ea4.pre, %dec_label_pc_13e88 ], [ ptrtoint (i32* @global_var_23108.564 to i32), %dec_label_pc_13dc0 ]
  %v0_13ea0 = phi i32 [ %v0_13ea0.pre, %dec_label_pc_13e88 ], [ %v3_13dc8, %dec_label_pc_13dc0 ]
  %v1_13ea0 = add i32 %v0_13ea0, 8
  store i32 %v1_13ea0, i32* %r3.global-to-local, align 4
  %v2_13ea4 = add i32 %v1_13ea0, %v1_13ea4
  store i32 %v2_13ea4, i32* @r7, align 4
  br label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13ea8.dec_label_pc_13ea8_crit_edge, %dec_label_pc_13ea0
  %v0_13ea8 = phi i32 [ %v0_13ea8.pre, %dec_label_pc_13ea8.dec_label_pc_13ea8_crit_edge ], [ %v2_13ea4, %dec_label_pc_13ea0 ]
  %v1_13ea8 = inttoptr i32 %v0_13ea8 to i32*
  %v2_13ea8 = load i32, i32* %v1_13ea8, align 4
  store i32 %v2_13ea8, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_13ea8, i32* %r2.global-to-local, align 4
  %v4_13eb8 = call i32 @function_16808(i32 %v2_13ea8, i32 1, i32* %v1_13ea8)
  %v2_13ebc = icmp eq i32 %v4_13eb8, 0
  store i1 %v2_13ebc, i1* @cpsr_z, align 1
  br i1 %v2_13ebc, label %dec_label_pc_13ec4, label %dec_label_pc_13ea8.dec_label_pc_13ea8_crit_edge

dec_label_pc_13ea8.dec_label_pc_13ea8_crit_edge:  ; preds = %dec_label_pc_13ea8
  %v0_13ea8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13ea8

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13ea8
  %v0_13e80 = load i32, i32* @r4, align 4
  %v2_13e80 = icmp eq i32 %v0_13e80, 0
  br i1 %v2_13e80, label %dec_label_pc_13edc, label %dec_label_pc_13e88

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13e44
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13ed4 = load i32, i32* %fp.global-to-local, align 4
  %v1_13ed4 = inttoptr i32 %v0_13ed4 to i32*
  %v2_13ed4 = load i32, i32* %v1_13ed4, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13ec4
  %v0_13edc = load i32, i32* %fp.global-to-local, align 4
  %v1_13edc = inttoptr i32 %v0_13edc to i32*
  %v2_13edc = load i32, i32* %v1_13edc, align 4
  store i32 %v2_13edc, i32* @r0, align 4
  %v0_13de4.pre = load i32, i32* @r8, align 4
  %v0_13de8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13de4

dec_label_pc_13ee4:                               ; preds = %.thread4
  %v1_13ee4 = and i32 %v0_13e08, -2
  store i32 %v1_13ee4, i32* %r3.global-to-local, align 4
  %v1_13ee8 = load i32, i32* %fp.global-to-local, align 4
  %v2_13ee8 = sub i32 %v1_13ee8, %v1_13ee4
  store i32 %v2_13ee8, i32* %r7.global-to-local, align 4
  %v1_13eec = add i32 %v2_13ee8, 8
  %v1_13ef0 = inttoptr i32 %v1_13eec to i32*
  %v2_13ef0 = load i32, i32* %v1_13ef0, align 4
  store i32 %v2_13ef0, i32* @r0, align 4
  %v3_13ef0 = add i32 %v2_13ee8, 12
  %v4_13ef0 = inttoptr i32 %v3_13ef0 to i32*
  %v5_13ef0 = load i32, i32* %v4_13ef0, align 4
  store i32 %v5_13ef0, i32* %ip.global-to-local, align 4
  %v9_13ef4 = icmp eq i32 %v5_13ef0, %v2_13ef0
  br i1 %v9_13ef4, label %dec_label_pc_13f94, label %dec_label_pc_13efc

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13ee4, %dec_label_pc_13ff4
  %v0_13f08 = phi i32 [ %v2_13ee8, %dec_label_pc_13ee4 ], [ %v0_13ff4, %dec_label_pc_13ff4 ]
  %v1_13efc = add i32 %v0_13f08, 4
  %v2_13efc = inttoptr i32 %v1_13efc to i32*
  %v3_13efc = load i32, i32* %v2_13efc, align 4
  %v1_13f00 = or i32 %v3_13efc, 1
  store i32 %v1_13f00, i32* %r2.global-to-local, align 4
  %v1_13f04 = and i32 %v3_13efc, -2
  store i32 %v1_13f04, i32* %r1.global-to-local, align 4
  %v2_13f08 = add i32 %v1_13f04, %v0_13f08
  %v3_13f08 = inttoptr i32 %v2_13f08 to i32*
  %v4_13f08 = load i32, i32* %v3_13f08, align 4
  %v1_13f0c = or i32 %v4_13f08, 1
  store i32 %v1_13f0c, i32* %r3.global-to-local, align 4
  store i32 %v1_13f0c, i32* %v3_13f08, align 4
  %v0_13f14 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f14 = load i32, i32* %r7.global-to-local, align 4
  %v2_13f14 = add i32 %v1_13f14, 4
  %v3_13f14 = inttoptr i32 %v2_13f14 to i32*
  store i32 %v0_13f14, i32* %v3_13f14, align 4
  %v0_13f18 = load i32, i32* @r5, align 4
  %v1_13f18 = add i32 %v0_13f18, 8
  store i32 %v1_13f18, i32* %r4.global-to-local, align 4
  %v0_13f1c = load i32, i32* @r0, align 4
  %v1_13f1c = load i32, i32* %ip.global-to-local, align 4
  %v2_13f1c = add i32 %v1_13f1c, 8
  %v3_13f1c = inttoptr i32 %v2_13f1c to i32*
  store i32 %v0_13f1c, i32* %v3_13f1c, align 4
  %v0_13f20 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f20 = load i32, i32* %sb.global-to-local, align 4
  %v2_13f20 = add i32 %v1_13f20, %v0_13f20
  %v3_13f20 = inttoptr i32 %v2_13f20 to i32*
  %v4_13f20 = load i32, i32* %v3_13f20, align 4
  store i32 %v4_13f20, i32* %r3.global-to-local, align 4
  %v0_13f24 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f24 = add i32 %v0_13f24, 8
  %v2_13f24 = inttoptr i32 %v1_13f24 to i32*
  %v3_13f24 = load i32, i32* %v2_13f24, align 4
  store i32 %v3_13f24, i32* %r2.global-to-local, align 4
  %v2_13f28 = icmp eq i32 %v4_13f20, 0
  store i1 %v2_13f28, i1* @cpsr_z, align 1
  %v0_13f2c = load i32, i32* %ip.global-to-local, align 4
  %v2_13f2c = add i32 %v3_13f24, 12
  %v3_13f2c = inttoptr i32 %v2_13f2c to i32*
  store i32 %v0_13f2c, i32* %v3_13f2c, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  %v0_13f34 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f34 = load i32, i32* %sb.global-to-local, align 4
  %v2_13f34 = add i32 %v1_13f34, %v0_13f34
  store i32 %v2_13f34, i32* %r6.global-to-local, align 4
  br i1 %v2_13f28, label %dec_label_pc_13f78, label %dec_label_pc_13f3c

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13efc
  %v0_13f3c = call i32 @function_167b4()
  store i32 %v0_13f3c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13f44 = load i32, i32* %r4.global-to-local, align 4
  %v2_13f44 = load i32, i32* %r1.global-to-local, align 4
  %v3_13f44 = add i32 %v2_13f44, %v1_13f44
  %v4_13f44 = inttoptr i32 %v3_13f44 to i32*
  store i32 0, i32* %v4_13f44, align 4
  %v0_13f48 = call i32 @function_167b4()
  %v0_13f4c = load i32, i32* @r5, align 4
  %v1_13f4c = add i32 %v0_13f4c, 12
  store i32 %v1_13f4c, i32* %r3.global-to-local, align 4
  %v1_13f50 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f50 = add i32 %v1_13f50, %v1_13f4c
  %v3_13f50 = inttoptr i32 %v2_13f50 to i32*
  %v4_13f50 = load i32, i32* %v3_13f50, align 4
  store i32 %v4_13f50, i32* %r2.global-to-local, align 4
  %v2_13f54 = icmp eq i32 %v4_13f50, 0
  br i1 %v2_13f54, label %dec_label_pc_13f78, label %dec_label_pc_13f5c

dec_label_pc_13f5c:                               ; preds = %dec_label_pc_13f3c
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13f60 = load i32, i32* %r6.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13f70 = icmp eq i32 %v0_13f60, -38
  br i1 %v7_13f70, label %dec_label_pc_13f80, label %dec_label_pc_13f78

dec_label_pc_13f78:                               ; preds = %dec_label_pc_13f5c, %dec_label_pc_13f3c, %dec_label_pc_13efc
  br label %dec_label_pc_13e74

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f5c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e74

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13ee4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13f98 = load i32, i32* @r8, align 4
  %v1_13f98 = sub i32 32, %v0_13f98
  store i32 %v1_13f98, i32* %r1.global-to-local, align 4
  %v7_13fa0 = lshr i32 1, %v1_13f98
  store i32 %v7_13fa0, i32* %r4.global-to-local, align 4
  %v1_13fa4 = add i32 %v0_13f98, -32
  %v6_13fa4 = icmp slt i32 %v1_13fa4, 0
  %v7_13fa4 = icmp eq i32 %v0_13f98, 32
  store i1 %v7_13fa4, i1* @cpsr_z, align 1
  %v6_13fa8 = shl i32 1, %v0_13f98
  store i32 %v6_13fa8, i32* %r3.global-to-local, align 4
  br i1 %v6_13fa4, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_13f94
  %v7_13fac = shl i32 1, %v1_13fa4
  store i32 %v7_13fac, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_13f94, %bb32
  %v0_13fb4 = phi i32 [ %v7_13fa0, %dec_label_pc_13f94 ], [ %v7_13fac, %bb32 ]
  %v1_13fb0 = sub i32 -1, %v6_13fa8
  %v1_13fb4 = sub i32 -1, %v0_13fb4
  store i32 %v1_13fb4, i32* %fp.global-to-local, align 4
  store i32 %v1_13fb0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13fbc

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge, %bb33
  %v1_13fc4 = phi i32 [ %v1_13fc4.pre, %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge ], [ %v1_13fb0, %bb33 ]
  %v2_13fbc = load i32, i32* @global_var_23108.564, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_13fc4 = and i32 %v2_13fbc, %v1_13fc4
  store i32 %v2_13fc4, i32* %r1.global-to-local, align 4
  %v4_13fc8 = call i32 @function_16808(i32 %v2_13fbc, i32 %v2_13fc4, i32* nonnull @global_var_23108.564)
  %v2_13fcc = icmp eq i32 %v4_13fc8, 0
  store i1 %v2_13fcc, i1* @cpsr_z, align 1
  br i1 %v2_13fcc, label %dec_label_pc_13fd4, label %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge

dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge:  ; preds = %dec_label_pc_13fbc
  %v1_13fc4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13fbc

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fbc
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r6.global-to-local, align 4
  %v0_13fd8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13fd8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13fdc.dec_label_pc_13fdc_crit_edge, %dec_label_pc_13fd4
  %v1_13fe4 = phi i32 [ %v1_13fe4.pre, %dec_label_pc_13fdc.dec_label_pc_13fdc_crit_edge ], [ %v0_13fd8, %dec_label_pc_13fd4 ]
  %v2_13fdc = load i32, i32* @global_var_2310c.566, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_13fe4 = and i32 %v2_13fdc, %v1_13fe4
  store i32 %v2_13fe4, i32* %r1.global-to-local, align 4
  %v4_13fe8 = call i32 @function_16808(i32 %v2_13fdc, i32 %v2_13fe4, i32* nonnull @global_var_2310c.566)
  %v2_13fec = icmp eq i32 %v4_13fe8, 0
  store i1 %v2_13fec, i1* @cpsr_z, align 1
  br i1 %v2_13fec, label %dec_label_pc_13ff4, label %dec_label_pc_13fdc.dec_label_pc_13fdc_crit_edge

dec_label_pc_13fdc.dec_label_pc_13fdc_crit_edge:  ; preds = %dec_label_pc_13fdc
  %v1_13fe4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13fdc

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fdc
  %v0_13ff4 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ff4 = add i32 %v0_13ff4, 8
  %v1_13ff8 = inttoptr i32 %v1_13ff4 to i32*
  %v2_13ff8 = load i32, i32* %v1_13ff8, align 4
  store i32 %v2_13ff8, i32* @r0, align 4
  %v3_13ff8 = add i32 %v0_13ff4, 12
  %v4_13ff8 = inttoptr i32 %v3_13ff8 to i32*
  %v5_13ff8 = load i32, i32* %v4_13ff8, align 4
  store i32 %v5_13ff8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13efc

; uselistorder directives
  uselistorder i32 %v0_13ff4, { 1, 2, 0 }
  uselistorder i32 %v2_13fdc, { 1, 0 }
  uselistorder i32 %v2_13fbc, { 1, 0 }
  uselistorder i32 %v1_13fb0, { 1, 0 }
  uselistorder i32 %v2_13edc, { 1, 0 }
  uselistorder i32 %v0_13ea8, { 1, 0 }
  uselistorder i32 %v0_13e64, { 0, 2, 1 }
  uselistorder i32 %v0_13e08, { 0, 2, 1 }
  uselistorder i32 %v4_13df4, { 1, 0 }
  uselistorder i32 %v4_13de8, { 1, 0 }
  uselistorder i32 %v3_13dc8, { 2, 1, 0 }
  uselistorder i32 %v0_13dc8, { 1, 0 }
  uselistorder i32 %v1_13d98, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_13d94, { 1, 0 }
  uselistorder i32 %v2_13d80, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_13efc, { 1, 0 }
  uselistorder label %dec_label_pc_13ea0, { 1, 0 }
  uselistorder label %dec_label_pc_13e64, { 1, 2, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_13de4, { 1, 0 }
  uselistorder label %dec_label_pc_13dc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d94, { 1, 0 }
}

define i32 @function_1400c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1400c:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1400c = load i32, i32* @r4, align 4
  store i32 %v3_1400c, i32* %stack_var_-36, align 4
  %v6_1400c = load i32, i32* @r5, align 4
  %v9_1400c = load i32, i32* @r6, align 4
  %v12_1400c = load i32, i32* @r7, align 4
  %v15_1400c = load i32, i32* @r8, align 4
  %v21_1400c = load i32, i32* @sl, align 4
  %v1_14010 = add i32 %arg1, 4
  %v2_14010 = inttoptr i32 %v1_14010 to i32*
  %v3_14010 = load i32, i32* %v2_14010, align 4
  store i32 %v3_14010, i32* @sl, align 4
  %v1_14014 = urem i32 %v3_14010, 2
  %v2_14014 = icmp eq i32 %v1_14014, 0
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v3_14010, i32* %r7.global-to-local, align 4
  br i1 %v2_14014, label %dec_label_pc_14028, label %dec_label_pc_14108

dec_label_pc_14028:                               ; preds = %dec_label_pc_1400c, %dec_label_pc_140fc
  %v0_14028 = phi i32 [ %v0_140fc, %dec_label_pc_140fc ], [ %v3_14010, %dec_label_pc_1400c ]
  %v3_14028 = udiv i32 %v0_14028, 16
  store i32 %v3_14028, i32* %r3.global-to-local, align 4
  %v1_1402c = add nsw i32 %v3_14028, -1
  store i32 %v1_1402c, i32* @r0, align 4
  %tmp = icmp ult i32 %v1_1402c, 33
  br i1 %tmp, label %.thread, label %dec_label_pc_1403c

.thread:                                          ; preds = %dec_label_pc_14028
  store i32 %v1_1402c, i32* @r8, align 4
  br label %dec_label_pc_14054

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14028
  %tmp37 = icmp ugt i32 %v1_1402c, 7168
  br i1 %tmp37, label %.thread19, label %dec_label_pc_14048

.thread19:                                        ; preds = %dec_label_pc_1403c
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_14054

dec_label_pc_14048:                               ; preds = %dec_label_pc_1403c
  %v0_14048 = call i32 @function_1808c()
  %v3_1404c = udiv i32 %v0_14048, 2097152
  %v1_14050 = add nsw i32 %v3_1404c, -496
  store i32 %v1_14050, i32* @r8, align 4
  br label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %.thread19, %.thread, %dec_label_pc_14048
  %v0_1405c = phi i32 [ 63, %.thread19 ], [ %v1_1402c, %.thread ], [ %v1_14050, %dec_label_pc_14048 ]
  %v3_14058 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14058, i32* %r2.global-to-local, align 4
  %v3_1405c = mul i32 %v0_1405c, 16
  store i32 %v3_1405c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %sb.global-to-local, align 4
  %v2_14064 = icmp eq i32 %v3_14058, 0
  store i1 %v2_14064, i1* @cpsr_z, align 1
  %v1_14068 = or i32 %v3_1405c, 8
  store i32 %v1_14068, i32* %r3.global-to-local, align 4
  %v2_1406c = add i32 %v1_14068, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_1406c, i32* @r6, align 4
  br i1 %v2_14064, label %bb, label %dec_label_pc_14138

bb:                                               ; preds = %dec_label_pc_14054
  %v1_14070 = load i32, i32* @sl, align 4
  store i32 %v1_14070, i32* @r0, align 4
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %bb, %dec_label_pc_14160
  %v0_1409c36 = phi i32 [ %v1_14070, %bb ], [ %v3_14160, %dec_label_pc_14160 ]
  %v0_1407c = phi i32 [ ptrtoint (i32* @global_var_23108.564 to i32), %bb ], [ %v0_1407c.pre, %dec_label_pc_14160 ]
  %v0_14078 = phi i32 [ %v0_1405c, %bb ], [ %v0_14078.pre, %dec_label_pc_14160 ]
  %v1_14078 = add i32 %v0_14078, 1
  store i32 %v1_14078, i32* %r1.global-to-local, align 4
  %v4_1407c = mul i32 %v1_14078, 16
  %v5_1407c = add i32 %v4_1407c, %v0_1407c
  %v6_1407c = inttoptr i32 %v5_1407c to i32*
  %v7_1407c = load i32, i32* %v6_1407c, align 4
  store i32 %v7_1407c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r6.global-to-local, align 4
  %v2_14084 = icmp eq i32 %v7_1407c, 0
  br i1 %v2_14084, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_14078
  %v4_14088 = mul i32 %v1_14078, 16
  %v3_1408c = add i32 %v4_14088, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v3_1408c, i32* %r3.global-to-local, align 4
  %v2_14090 = add i32 %v4_14088, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v2_14090, i32* %r2.global-to-local, align 4
  %v7_14094 = add i32 %v4_1407c, ptrtoint (i32* @global_var_23108.564 to i32)
  %v8_14094 = inttoptr i32 %v7_14094 to i32*
  store i32 %v2_14090, i32* %v8_14094, align 4
  %v1_14098 = load i32, i32* %r2.global-to-local, align 4
  %v2_14098 = load i32, i32* %r3.global-to-local, align 4
  %v3_14098 = add i32 %v2_14098, 4
  %v4_14098 = inttoptr i32 %v3_14098 to i32*
  store i32 %v1_14098, i32* %v4_14098, align 4
  %v0_1409c.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14078, %bb31
  %v0_1409c = phi i32 [ %v0_1409c36, %dec_label_pc_14078 ], [ %v0_1409c.pre, %bb31 ]
  %v1_1409c = load i32, i32* @sl, align 4
  %v9_1409c = icmp eq i32 %v0_1409c, %v1_1409c
  br i1 %v9_1409c, label %dec_label_pc_1417c, label %dec_label_pc_140a4

dec_label_pc_140a4:                               ; preds = %.thread4
  %v0_140a4 = load i32, i32* @r5, align 4
  %v1_140a4 = add i32 %v0_140a4, 8
  store i32 %v1_140a4, i32* %r2.global-to-local, align 4
  %v1_140a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_140a8 = add i32 %v1_140a8, %v1_140a4
  %v3_140a8 = inttoptr i32 %v2_140a8 to i32*
  %v4_140a8 = load i32, i32* %v3_140a8, align 4
  store i32 %v4_140a8, i32* %r3.global-to-local, align 4
  %v2_140ac = icmp eq i32 %v4_140a8, 0
  store i1 %v2_140ac, i1* @cpsr_z, align 1
  store i32 %v2_140a8, i32* %r4.global-to-local, align 4
  br i1 %v2_140ac, label %dec_label_pc_140fc, label %dec_label_pc_140b8

dec_label_pc_140b8:                               ; preds = %dec_label_pc_140a4
  %v0_140b8 = call i32 @function_167b4()
  store i32 %v0_140b8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_140c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_140c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_140c0 = add i32 %v2_140c0, %v1_140c0
  %v4_140c0 = inttoptr i32 %v3_140c0 to i32*
  store i32 0, i32* %v4_140c0, align 4
  %v0_140c4 = call i32 @function_167b4()
  %v0_140c8 = load i32, i32* @r5, align 4
  %v1_140c8 = add i32 %v0_140c8, 12
  store i32 %v1_140c8, i32* %r3.global-to-local, align 4
  %v1_140cc = load i32, i32* %r6.global-to-local, align 4
  %v2_140cc = add i32 %v1_140cc, %v1_140c8
  %v3_140cc = inttoptr i32 %v2_140cc to i32*
  %v4_140cc = load i32, i32* %v3_140cc, align 4
  store i32 %v4_140cc, i32* %r2.global-to-local, align 4
  %v2_140d0 = icmp eq i32 %v4_140cc, 0
  br i1 %v2_140d0, label %dec_label_pc_140f4, label %dec_label_pc_140d8

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140b8
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_140dc = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_140ec = icmp eq i32 %v0_140dc, -38
  br i1 %v7_140ec, label %dec_label_pc_1416c, label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140d8, %dec_label_pc_140b8, %dec_label_pc_1416c
  %v0_140f4 = load i32, i32* %fp.global-to-local, align 4
  %v1_140f4 = add i32 %v0_140f4, 4
  %v2_140f4 = inttoptr i32 %v1_140f4 to i32*
  %v3_140f4 = load i32, i32* %v2_140f4, align 4
  store i32 %v3_140f4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140a4, %dec_label_pc_140f4
  %v0_140fc = phi i32 [ %v0_1409c, %dec_label_pc_140a4 ], [ %v3_140f4, %dec_label_pc_140f4 ]
  store i32 %v0_140fc, i32* @sl, align 4
  %v1_14100 = urem i32 %v0_140fc, 2
  %v2_14100 = icmp eq i32 %v1_14100, 0
  br i1 %v2_14100, label %dec_label_pc_14028, label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %dec_label_pc_140fc, %dec_label_pc_1400c
  br label %dec_label_pc_1410c

dec_label_pc_1410c:                               ; preds = %dec_label_pc_1420c, %dec_label_pc_14204, %dec_label_pc_14108
  %v1_14114 = phi i32 [ 1, %dec_label_pc_1420c ], [ 1, %dec_label_pc_14204 ], [ 0, %dec_label_pc_14108 ]
  %v2_14110 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14110, i32* @r4, align 4
  store i32 %v6_1400c, i32* @r5, align 4
  store i32 %v9_1400c, i32* @r6, align 4
  store i32 %v12_1400c, i32* @r7, align 4
  store i32 %v15_1400c, i32* @r8, align 4
  store i32 %v21_1400c, i32* @sl, align 4
  ret i32 %v1_14114

dec_label_pc_14120:                               ; preds = %dec_label_pc_1415c
  %v0_14120 = load i32, i32* @r5, align 4
  %v1_14120 = add i32 %v0_14120, 12
  store i32 1, i32* @r2, align 4
  %v1_14128 = load i32, i32* %sb.global-to-local, align 4
  %v2_14128 = add i32 %v1_14120, %v1_14128
  store i32 %v2_14128, i32* %r1.global-to-local, align 4
  %v0_1412c = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_14134 = inttoptr i32 %v0_1412c to i32*
  %v3_14134 = call i32 @function_16334(i32* %v2_14134, i32 %v2_14128)
  %v0_14138.pre = load i32, i32* @r5, align 4
  %v1_1413c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14138

dec_label_pc_14138:                               ; preds = %dec_label_pc_14054, %dec_label_pc_14120
  %v1_1413c = phi i32 [ %v1_1413c.pre, %dec_label_pc_14120 ], [ ptrtoint (i32* @global_var_23108.564 to i32), %dec_label_pc_14054 ]
  %v0_14138 = phi i32 [ %v0_14138.pre, %dec_label_pc_14120 ], [ %v3_1405c, %dec_label_pc_14054 ]
  %v1_14138 = add i32 %v0_14138, 8
  store i32 %v1_14138, i32* %r3.global-to-local, align 4
  %v2_1413c = add i32 %v1_14138, %v1_1413c
  store i32 %v2_1413c, i32* @r7, align 4
  br label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %dec_label_pc_14140.dec_label_pc_14140_crit_edge, %dec_label_pc_14138
  %v0_14140 = phi i32 [ %v0_14140.pre, %dec_label_pc_14140.dec_label_pc_14140_crit_edge ], [ %v2_1413c, %dec_label_pc_14138 ]
  %v1_14140 = inttoptr i32 %v0_14140 to i32*
  %v2_14140 = load i32, i32* %v1_14140, align 4
  store i32 %v2_14140, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_14140, i32* %r2.global-to-local, align 4
  %v4_14150 = call i32 @function_16808(i32 %v2_14140, i32 1, i32* %v1_14140)
  %v2_14154 = icmp eq i32 %v4_14150, 0
  store i1 %v2_14154, i1* @cpsr_z, align 1
  br i1 %v2_14154, label %dec_label_pc_1415c, label %dec_label_pc_14140.dec_label_pc_14140_crit_edge

dec_label_pc_14140.dec_label_pc_14140_crit_edge:  ; preds = %dec_label_pc_14140
  %v0_14140.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14140

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14140
  %v0_14118 = load i32, i32* @r4, align 4
  %v2_14118 = icmp eq i32 %v0_14118, 0
  br i1 %v2_14118, label %dec_label_pc_14160, label %dec_label_pc_14120

dec_label_pc_14160:                               ; preds = %dec_label_pc_1415c
  %v0_14160 = load i32, i32* %fp.global-to-local, align 4
  %v1_14160 = add i32 %v0_14160, 4
  %v2_14160 = inttoptr i32 %v1_14160 to i32*
  %v3_14160 = load i32, i32* %v2_14160, align 4
  store i32 %v3_14160, i32* @r0, align 4
  store i32 %v3_14160, i32* %r7.global-to-local, align 4
  %v0_14078.pre = load i32, i32* @r8, align 4
  %v0_1407c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_1416c:                               ; preds = %dec_label_pc_140d8
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140f4

dec_label_pc_1417c:                               ; preds = %.thread4
  %v0_1417c = load i32, i32* %fp.global-to-local, align 4
  %v1_1417c = add i32 %v0_1417c, 12
  %v2_1417c = inttoptr i32 %v1_1417c to i32*
  %v3_1417c = load i32, i32* %v2_1417c, align 4
  store i32 %v3_1417c, i32* @r0, align 4
  %v1_14180 = add i32 %v0_1417c, 8
  %v2_14180 = inttoptr i32 %v1_14180 to i32*
  %v3_14180 = load i32, i32* %v2_14180, align 4
  store i32 %v3_14180, i32* %r1.global-to-local, align 4
  %v9_14184 = icmp eq i32 %v3_1417c, %v3_14180
  br i1 %v9_14184, label %dec_label_pc_14220, label %dec_label_pc_1417c.dec_label_pc_1418c_crit_edge

dec_label_pc_1417c.dec_label_pc_1418c_crit_edge:  ; preds = %dec_label_pc_1417c
  %v0_1418c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %dec_label_pc_1417c.dec_label_pc_1418c_crit_edge, %dec_label_pc_14280
  %v2_1419c = phi i32 [ %v0_1417c, %dec_label_pc_1417c.dec_label_pc_1418c_crit_edge ], [ %v0_14280, %dec_label_pc_14280 ]
  %v0_1418c = phi i32 [ %v0_1418c.pre, %dec_label_pc_1417c.dec_label_pc_1418c_crit_edge ], [ %v3_14280, %dec_label_pc_14280 ]
  %v1_1418c = or i32 %v0_1418c, 1
  store i32 %v1_1418c, i32* %r7.global-to-local, align 4
  %v1_14190 = and i32 %v0_1418c, -2
  store i32 %v1_14190, i32* %r2.global-to-local, align 4
  %v2_14194 = add i32 %v1_14190, %v2_1419c
  %v3_14194 = inttoptr i32 %v2_14194 to i32*
  %v4_14194 = load i32, i32* %v3_14194, align 4
  %v1_14198 = or i32 %v4_14194, 1
  store i32 %v1_14198, i32* %r3.global-to-local, align 4
  store i32 %v1_14198, i32* %v3_14194, align 4
  %v0_141a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_141a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_141a0 = add i32 %v1_141a0, 4
  %v3_141a0 = inttoptr i32 %v2_141a0 to i32*
  store i32 %v0_141a0, i32* %v3_141a0, align 4
  %v0_141a4 = load i32, i32* @r5, align 4
  %v1_141a4 = add i32 %v0_141a4, 8
  store i32 %v1_141a4, i32* %r4.global-to-local, align 4
  %v0_141a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_141a8 = load i32, i32* @r0, align 4
  %v2_141a8 = add i32 %v1_141a8, 8
  %v3_141a8 = inttoptr i32 %v2_141a8 to i32*
  store i32 %v0_141a8, i32* %v3_141a8, align 4
  %v0_141ac = load i32, i32* %r4.global-to-local, align 4
  %v1_141ac = load i32, i32* %sb.global-to-local, align 4
  %v2_141ac = add i32 %v1_141ac, %v0_141ac
  %v3_141ac = inttoptr i32 %v2_141ac to i32*
  %v4_141ac = load i32, i32* %v3_141ac, align 4
  store i32 %v4_141ac, i32* %r3.global-to-local, align 4
  %v0_141b0 = load i32, i32* %fp.global-to-local, align 4
  %v1_141b0 = add i32 %v0_141b0, 8
  %v2_141b0 = inttoptr i32 %v1_141b0 to i32*
  %v3_141b0 = load i32, i32* %v2_141b0, align 4
  store i32 %v3_141b0, i32* %r2.global-to-local, align 4
  %v2_141b4 = icmp eq i32 %v4_141ac, 0
  store i1 %v2_141b4, i1* @cpsr_z, align 1
  %v0_141b8 = load i32, i32* @r0, align 4
  %v2_141b8 = add i32 %v3_141b0, 12
  %v3_141b8 = inttoptr i32 %v2_141b8 to i32*
  store i32 %v0_141b8, i32* %v3_141b8, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  %v0_141c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_141c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_141c0 = add i32 %v1_141c0, %v0_141c0
  store i32 %v2_141c0, i32* %r6.global-to-local, align 4
  br i1 %v2_141b4, label %dec_label_pc_14204, label %dec_label_pc_141c8

dec_label_pc_141c8:                               ; preds = %dec_label_pc_1418c
  %v0_141c8 = call i32 @function_167b4()
  store i32 %v0_141c8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_141d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_141d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_141d0 = add i32 %v2_141d0, %v1_141d0
  %v4_141d0 = inttoptr i32 %v3_141d0 to i32*
  store i32 0, i32* %v4_141d0, align 4
  %v0_141d4 = call i32 @function_167b4()
  %v0_141d8 = load i32, i32* @r5, align 4
  %v1_141d8 = add i32 %v0_141d8, 12
  store i32 %v1_141d8, i32* %r3.global-to-local, align 4
  %v1_141dc = load i32, i32* %r1.global-to-local, align 4
  %v2_141dc = add i32 %v1_141dc, %v1_141d8
  %v3_141dc = inttoptr i32 %v2_141dc to i32*
  %v4_141dc = load i32, i32* %v3_141dc, align 4
  store i32 %v4_141dc, i32* %r2.global-to-local, align 4
  %v2_141e0 = icmp eq i32 %v4_141dc, 0
  br i1 %v2_141e0, label %dec_label_pc_14204, label %dec_label_pc_141e8

dec_label_pc_141e8:                               ; preds = %dec_label_pc_141c8
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_141ec = load i32, i32* %r6.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_141fc = icmp eq i32 %v0_141ec, -38
  br i1 %v7_141fc, label %dec_label_pc_1420c, label %dec_label_pc_14204

dec_label_pc_14204:                               ; preds = %dec_label_pc_141e8, %dec_label_pc_141c8, %dec_label_pc_1418c
  br label %dec_label_pc_1410c

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141e8
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1410c

dec_label_pc_14220:                               ; preds = %dec_label_pc_1417c
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_14224 = load i32, i32* @r8, align 4
  %v1_14224 = sub i32 32, %v0_14224
  store i32 %v1_14224, i32* %r1.global-to-local, align 4
  %v7_1422c = lshr i32 1, %v1_14224
  store i32 %v7_1422c, i32* %r4.global-to-local, align 4
  %v1_14230 = add i32 %v0_14224, -32
  %v6_14230 = icmp slt i32 %v1_14230, 0
  %v7_14230 = icmp eq i32 %v0_14224, 32
  store i1 %v7_14230, i1* @cpsr_z, align 1
  %v6_14234 = shl i32 1, %v0_14224
  store i32 %v6_14234, i32* %r3.global-to-local, align 4
  br i1 %v6_14230, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_14220
  %v7_14238 = shl i32 1, %v1_14230
  store i32 %v7_14238, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_14220, %bb32
  %v0_14240 = phi i32 [ %v7_1422c, %dec_label_pc_14220 ], [ %v7_14238, %bb32 ]
  %v1_1423c = sub i32 -1, %v6_14234
  store i32 %v1_1423c, i32* %r7.global-to-local, align 4
  %v1_14240 = sub i32 -1, %v0_14240
  store i32 %v1_14240, i32* @r8, align 4
  store i32 %v1_1423c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %dec_label_pc_14248.dec_label_pc_14248_crit_edge, %bb33
  %v1_14250 = phi i32 [ %v1_14250.pre, %dec_label_pc_14248.dec_label_pc_14248_crit_edge ], [ %v1_1423c, %bb33 ]
  %v2_14248 = load i32, i32* @global_var_23108.564, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14250 = and i32 %v2_14248, %v1_14250
  store i32 %v2_14250, i32* %r1.global-to-local, align 4
  %v4_14254 = call i32 @function_16808(i32 %v2_14248, i32 %v2_14250, i32* nonnull @global_var_23108.564)
  %v2_14258 = icmp eq i32 %v4_14254, 0
  store i1 %v2_14258, i1* @cpsr_z, align 1
  br i1 %v2_14258, label %dec_label_pc_14260, label %dec_label_pc_14248.dec_label_pc_14248_crit_edge

dec_label_pc_14248.dec_label_pc_14248_crit_edge:  ; preds = %dec_label_pc_14248
  %v1_14250.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14248

dec_label_pc_14260:                               ; preds = %dec_label_pc_14248
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r6.global-to-local, align 4
  %v0_14264 = load i32, i32* @r8, align 4
  store i32 %v0_14264, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14268.dec_label_pc_14268_crit_edge, %dec_label_pc_14260
  %v1_14270 = phi i32 [ %v1_14270.pre, %dec_label_pc_14268.dec_label_pc_14268_crit_edge ], [ %v0_14264, %dec_label_pc_14260 ]
  %v2_14268 = load i32, i32* @global_var_2310c.566, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_14270 = and i32 %v2_14268, %v1_14270
  store i32 %v2_14270, i32* %r1.global-to-local, align 4
  %v4_14274 = call i32 @function_16808(i32 %v2_14268, i32 %v2_14270, i32* nonnull @global_var_2310c.566)
  %v2_14278 = icmp eq i32 %v4_14274, 0
  store i1 %v2_14278, i1* @cpsr_z, align 1
  br i1 %v2_14278, label %dec_label_pc_14280, label %dec_label_pc_14268.dec_label_pc_14268_crit_edge

dec_label_pc_14268.dec_label_pc_14268_crit_edge:  ; preds = %dec_label_pc_14268
  %v1_14270.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14268

dec_label_pc_14280:                               ; preds = %dec_label_pc_14268
  %v0_14280 = load i32, i32* %fp.global-to-local, align 4
  %v1_14280 = add i32 %v0_14280, 4
  %v2_14280 = inttoptr i32 %v1_14280 to i32*
  %v3_14280 = load i32, i32* %v2_14280, align 4
  store i32 %v3_14280, i32* %r7.global-to-local, align 4
  %v1_14284 = add i32 %v0_14280, 12
  %v2_14284 = inttoptr i32 %v1_14284 to i32*
  %v3_14284 = load i32, i32* %v2_14284, align 4
  store i32 %v3_14284, i32* @r0, align 4
  %v1_14288 = add i32 %v0_14280, 8
  %v2_14288 = inttoptr i32 %v1_14288 to i32*
  %v3_14288 = load i32, i32* %v2_14288, align 4
  store i32 %v3_14288, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1418c

; uselistorder directives
  uselistorder i32 %v3_14280, { 1, 0 }
  uselistorder i32 %v0_14280, { 1, 2, 3, 0 }
  uselistorder i32 %v2_14268, { 1, 0 }
  uselistorder i32 %v2_14248, { 1, 0 }
  uselistorder i32 %v1_1423c, { 2, 1, 0 }
  uselistorder i32 %v0_1418c, { 1, 0 }
  uselistorder i32 %v3_14160, { 1, 2, 0 }
  uselistorder i32 %v0_14140, { 1, 0 }
  uselistorder i32 %v0_140fc, { 0, 2, 1 }
  uselistorder i32 %v0_1409c, { 1, 0 }
  uselistorder i32 %v4_14088, { 1, 0 }
  uselistorder i32 %v4_1407c, { 1, 0 }
  uselistorder i32 %v3_1405c, { 2, 1, 0 }
  uselistorder i32 %v0_1405c, { 1, 0 }
  uselistorder i32 %v1_1402c, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_14028, { 1, 0 }
  uselistorder i32 %v3_14010, { 1, 2, 0, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_1418c, { 1, 0 }
  uselistorder label %dec_label_pc_14138, { 1, 0 }
  uselistorder label %dec_label_pc_140fc, { 1, 0 }
  uselistorder label %dec_label_pc_140f4, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_14078, { 1, 0 }
  uselistorder label %dec_label_pc_14054, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14028, { 1, 0 }
}

define i32 @function_1429c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1429c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1429c = load i32, i32* @r4, align 4
  %v6_1429c = load i32, i32* @r5, align 4
  %v9_1429c = load i32, i32* @r6, align 4
  %v12_1429c = load i32, i32* @r7, align 4
  %v15_1429c = load i32, i32* @r8, align 4
  %v18_1429c = load i32, i32* @sb, align 4
  %v21_1429c = load i32, i32* @sl, align 4
  %v24_1429c = load i32, i32* @fp, align 4
  %v0_142a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_142a0 = icmp eq i32 %v0_142a0, 0
  br i1 %v2_142a0, label %dec_label_pc_14660, label %dec_label_pc_142ac

dec_label_pc_142ac:                               ; preds = %dec_label_pc_1429c
  %v1_142ac = add i32 %v0_142a0, -8
  store i32 %v1_142ac, i32* @r8, align 4
  %v1_142b0 = add i32 %v0_142a0, -4
  %v2_142b0 = inttoptr i32 %v1_142b0 to i32*
  %v3_142b0 = load i32, i32* %v2_142b0, align 4
  store i32 %v3_142b0, i32* %r1.global-to-local, align 4
  %v1_142b4 = urem i32 %v3_142b0, 2
  store i32 %v1_142b4, i32* @r3, align 4
  %v2_142b4 = icmp eq i32 %v1_142b4, 0
  br i1 %v2_142b4, label %dec_label_pc_146fc, label %dec_label_pc_142bc

dec_label_pc_142bc:                               ; preds = %dec_label_pc_142ac
  %v1_142bc = and i32 %v3_142b0, -2
  store i32 %v1_142bc, i32* %r0.global-to-local, align 4
  %v2_142c0 = add i32 %v1_142bc, %v1_142ac
  %v3_142c0 = inttoptr i32 %v2_142c0 to i32*
  %v4_142c0 = load i32, i32* %v3_142c0, align 4
  store i32 %v4_142c0, i32* %r3.global-to-local, align 4
  %v9_142c4 = icmp eq i32 %v3_142b0, %v4_142c0
  br i1 %v9_142c4, label %.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_142bc
  store i32 0, i32* @r3, align 4
  call void @llvm.trap()
  unreachable

.preheader:                                       ; preds = %dec_label_pc_142bc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_142c0, i32* @sb, align 4
  store i32 %v1_142bc, i32* @fp, align 4
  br label %bb62

.loopexit:                                        ; preds = %dec_label_pc_14484
  %v0_142f0.pre = load i32, i32* @r8, align 4
  br label %bb62

bb62:                                             ; preds = %.preheader, %.loopexit
  %v0_142f0 = phi i32 [ %v0_142f0.pre, %.loopexit ], [ %v1_142ac, %.preheader ]
  %v0_142ec = phi i32 [ %v0_142ec.pre, %.loopexit ], [ %v2_142c0, %.preheader ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.5, %.loopexit ], [ 0, %.preheader ]
  %v1_142ec = add i32 %v0_142ec, 4
  %v2_142ec = inttoptr i32 %v1_142ec to i32*
  %v3_142ec = load i32, i32* %v2_142ec, align 4
  store i32 %v3_142ec, i32* %r3.global-to-local, align 4
  %v1_142f0 = inttoptr i32 %v0_142f0 to i32*
  %v2_142f0 = load i32, i32* %v1_142f0, align 4
  store i32 %v2_142f0, i32* %r2.global-to-local, align 4
  %v2_142f4 = and i32 %v2_142f0, %v3_142ec
  store i32 %v2_142f4, i32* %r3.global-to-local, align 4
  %v1_142f8 = urem i32 %v2_142f4, 2
  %v2_142f8 = icmp eq i32 %v1_142f8, 0
  br i1 %v2_142f8, label %dec_label_pc_14438.preheader, label %.dec_label_pc_14300_crit_edge

.dec_label_pc_14300_crit_edge:                    ; preds = %bb62
  %v0_14300.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_14300

dec_label_pc_14300:                               ; preds = %dec_label_pc_144c0, %.dec_label_pc_14300_crit_edge
  %v1_14310 = phi i32 [ %v0_142ec, %.dec_label_pc_14300_crit_edge ], [ %v2_144c0, %dec_label_pc_144c0 ]
  %v0_1430c = phi i32 [ %v0_14300.pre, %.dec_label_pc_14300_crit_edge ], [ %v2_144c4, %dec_label_pc_144c0 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %.dec_label_pc_14300_crit_edge ], [ %stack_var_-44.6, %dec_label_pc_144c0 ]
  %v3_14300 = udiv i32 %v0_1430c, 16
  %v1_14304 = add nsw i32 %v3_14300, -1
  store i32 %v1_14304, i32* @r0, align 4
  %v1_1430c = or i32 %v0_1430c, 1
  store i32 %v1_1430c, i32* %r3.global-to-local, align 4
  %v2_14310 = inttoptr i32 %v1_14310 to i32*
  store i32 %v1_1430c, i32* %v2_14310, align 4
  %v0_14314 = load i32, i32* %r3.global-to-local, align 4
  %v1_14314 = load i32, i32* @r8, align 4
  %v2_14314 = add i32 %v1_14314, 4
  %v3_14314 = inttoptr i32 %v2_14314 to i32*
  store i32 %v0_14314, i32* %v3_14314, align 4
  %tmp = icmp ult i32 %v1_14304, 33
  %v4_14318 = load i32, i32* @r0, align 4
  br i1 %tmp, label %.thread, label %dec_label_pc_14320

.thread:                                          ; preds = %dec_label_pc_14300
  store i32 %v4_14318, i32* @sl, align 4
  br label %dec_label_pc_14338

dec_label_pc_14320:                               ; preds = %dec_label_pc_14300
  %tmp80 = icmp ugt i32 %v4_14318, 7168
  br i1 %tmp80, label %.thread45, label %dec_label_pc_1432c

.thread45:                                        ; preds = %dec_label_pc_14320
  store i32 63, i32* @sl, align 4
  br label %dec_label_pc_14338

dec_label_pc_1432c:                               ; preds = %dec_label_pc_14320
  %v0_1432c = call i32 @function_1808c()
  %v3_14330 = udiv i32 %v0_1432c, 2097152
  store i32 %v3_14330, i32* %r0.global-to-local, align 4
  %v1_14334 = add nsw i32 %v3_14330, -496
  store i32 %v1_14334, i32* @sl, align 4
  br label %dec_label_pc_14338

dec_label_pc_14338:                               ; preds = %.thread45, %.thread, %dec_label_pc_1432c
  %v0_14340 = phi i32 [ 63, %.thread45 ], [ %v4_14318, %.thread ], [ %v1_14334, %dec_label_pc_1432c ]
  %v3_1433c = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_1433c, i32* %r2.global-to-local, align 4
  %v3_14340 = mul i32 %v0_14340, 16
  store i32 %v3_14340, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r0.global-to-local, align 4
  %v1_14348 = or i32 %v3_14340, 8
  store i32 %v1_14348, i32* %r3.global-to-local, align 4
  %v2_1434c = icmp eq i32 %v3_1433c, 0
  store i1 %v2_1434c, i1* @cpsr_z, align 1
  %v2_14350 = add i32 %v1_14348, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_14350, i32* @r5, align 4
  br i1 %v2_1434c, label %dec_label_pc_14358, label %dec_label_pc_14690

dec_label_pc_14358.loopexit:                      ; preds = %dec_label_pc_146b8
  %v0_1435c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14358

dec_label_pc_14358:                               ; preds = %dec_label_pc_14358.loopexit, %dec_label_pc_14338
  %v0_1435c = phi i32 [ %v0_1435c.pre, %dec_label_pc_14358.loopexit ], [ %v0_14340, %dec_label_pc_14338 ]
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v1_1435c = add i32 %v0_1435c, 1
  store i32 %v1_1435c, i32* %r1.global-to-local, align 4
  %v4_14360 = mul i32 %v1_1435c, 16
  %v5_14360 = add i32 %v4_14360, ptrtoint (i32* @global_var_23108.564 to i32)
  %v6_14360 = inttoptr i32 %v5_14360 to i32*
  %v7_14360 = load i32, i32* %v6_14360, align 4
  store i32 %v7_14360, i32* %r3.global-to-local, align 4
  %v2_14364 = icmp eq i32 %v7_14360, 0
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_14364, label %dec_label_pc_1471c, label %dec_label_pc_14374

dec_label_pc_14374:                               ; preds = %dec_label_pc_14358, %dec_label_pc_1471c
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* %r1.global-to-local, align 4
  %v3_14378 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14378, i32* %r3.global-to-local, align 4
  %v2_1437c = icmp eq i32 %v3_14378, 0
  store i1 %v2_1437c, i1* @cpsr_z, align 1
  br i1 %v2_1437c, label %dec_label_pc_14384, label %dec_label_pc_146bc

dec_label_pc_14384:                               ; preds = %dec_label_pc_146ec, %dec_label_pc_14374
  %v0_14384 = load i32, i32* @r8, align 4
  %v1_14384 = inttoptr i32 %v0_14384 to i32*
  %v2_14384 = load i32, i32* %v1_14384, align 4
  store i32 %v2_14384, i32* %r2.global-to-local, align 4
  %v0_14388 = load i32, i32* @sb, align 4
  %v1_14388 = add i32 %v0_14388, 4
  %v2_14388 = inttoptr i32 %v1_14388 to i32*
  %v3_14388 = load i32, i32* %v2_14388, align 4
  %v2_1438c = and i32 %v3_14388, %v2_14384
  store i32 %v2_1438c, i32* %r3.global-to-local, align 4
  %v1_14390 = urem i32 %v2_1438c, 2
  store i32 %v1_14390, i32* %r2.global-to-local, align 4
  %v2_14390 = icmp eq i32 %v1_14390, 0
  br i1 %v2_14390, label %dec_label_pc_14398, label %dec_label_pc_144e0

dec_label_pc_14398:                               ; preds = %dec_label_pc_14384
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r0, align 4
  %v3_1439c = load i32, i32* @global_var_23510.572, align 4
  store i32 %v3_1439c, i32* %r3.global-to-local, align 4
  %v2_143a0 = icmp eq i32 %v3_1439c, 0
  store i1 %v2_143a0, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r4.global-to-local, align 4
  br i1 %v2_143a0, label %dec_label_pc_143e4, label %dec_label_pc_143ac

dec_label_pc_143ac:                               ; preds = %dec_label_pc_14398
  %v0_143ac = call i32 @function_167b4()
  store i32 %v0_143ac, i32* @r0, align 4
  %v0_143b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_143b0 = add i32 %v0_143ac, 1032
  %v3_143b0 = inttoptr i32 %v2_143b0 to i32*
  store i32 %v0_143b0, i32* %v3_143b0, align 4
  %v0_143b4 = call i32 @function_167b4()
  store i32 %v0_143b4, i32* @r0, align 4
  %v1_143b8 = add i32 %v0_143b4, 1036
  %v2_143b8 = inttoptr i32 %v1_143b8 to i32*
  %v3_143b8 = load i32, i32* %v2_143b8, align 4
  store i32 %v3_143b8, i32* %r3.global-to-local, align 4
  %v2_143bc = icmp eq i32 %v3_143b8, 0
  br i1 %v2_143bc, label %dec_label_pc_143e4, label %dec_label_pc_143c4

dec_label_pc_143c4:                               ; preds = %dec_label_pc_143ac
  %v1_143c8 = add i32 %v0_143b4, 1032
  store i32 %v1_143c8, i32* @r0, align 4
  store i32 240, i32* @r7, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_143dc = icmp eq i32 %v0_143b4, -1070
  br i1 %v7_143dc, label %dec_label_pc_14738, label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143c4, %dec_label_pc_143ac, %dec_label_pc_14398, %dec_label_pc_14738
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  %v0_143e8 = load i32, i32* @r6, align 4
  %v1_143e8 = add i32 %v0_143e8, 8
  store i32 %v1_143e8, i32* %r2.global-to-local, align 4
  %v2_143ec = add i32 %v0_143e8, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 8)
  %v3_143ec = inttoptr i32 %v2_143ec to i32*
  %v4_143ec = load i32, i32* %v3_143ec, align 4
  store i32 %v4_143ec, i32* %r3.global-to-local, align 4
  %v2_143f0 = icmp eq i32 %v4_143ec, 0
  store i1 %v2_143f0, i1* @cpsr_z, align 1
  store i32 %v2_143ec, i32* @r4, align 4
  br i1 %v2_143f0, label %dec_label_pc_14438.preheader, label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143e4
  %v0_143fc = call i32 @function_167b4()
  store i32 %v0_143fc, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14404 = load i32, i32* %r2.global-to-local, align 4
  %v2_14404 = load i32, i32* %r1.global-to-local, align 4
  %v3_14404 = add i32 %v2_14404, %v1_14404
  %v4_14404 = inttoptr i32 %v3_14404 to i32*
  store i32 0, i32* %v4_14404, align 4
  %v0_14408 = call i32 @function_167b4()
  store i32 %v0_14408, i32* %r0.global-to-local, align 4
  %v0_1440c = load i32, i32* @r6, align 4
  %v1_1440c = add i32 %v0_1440c, 12
  store i32 %v1_1440c, i32* %r3.global-to-local, align 4
  %v1_14410 = load i32, i32* %r1.global-to-local, align 4
  %v2_14410 = add i32 %v1_14410, %v1_1440c
  %v3_14410 = inttoptr i32 %v2_14410 to i32*
  %v4_14410 = load i32, i32* %v3_14410, align 4
  store i32 %v4_14410, i32* %r2.global-to-local, align 4
  %v2_14414 = icmp eq i32 %v4_14410, 0
  br i1 %v2_14414, label %dec_label_pc_14438.preheader, label %dec_label_pc_1441c

dec_label_pc_1441c:                               ; preds = %dec_label_pc_143fc
  store i32 240, i32* @r7, align 4
  %v0_14420 = load i32, i32* @r4, align 4
  store i32 %v0_14420, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_14430 = icmp eq i32 %v0_14420, -38
  br i1 %v7_14430, label %dec_label_pc_1474c, label %dec_label_pc_14438.preheader

dec_label_pc_14438.preheader:                     ; preds = %dec_label_pc_1474c, %bb62, %dec_label_pc_143e4, %dec_label_pc_143fc, %dec_label_pc_1441c
  %stack_var_-44.4.ph = phi i32 [ %stack_var_-44.3, %dec_label_pc_1441c ], [ %stack_var_-44.3, %dec_label_pc_1474c ], [ %stack_var_-44.3, %dec_label_pc_143fc ], [ %stack_var_-44.3, %dec_label_pc_143e4 ], [ %stack_var_-44.2, %bb62 ]
  %v0_14438.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_14438

dec_label_pc_14438:                               ; preds = %dec_label_pc_14438.preheader, %dec_label_pc_144c0
  %v0_14438 = phi i32 [ %v0_144cc, %dec_label_pc_144c0 ], [ %v0_14438.pre, %dec_label_pc_14438.preheader ]
  %stack_var_-44.4 = phi i32 [ %stack_var_-44.6, %dec_label_pc_144c0 ], [ %stack_var_-44.4.ph, %dec_label_pc_14438.preheader ]
  store i32 %v0_14438, i32* %r0.global-to-local, align 4
  %v1_1443c = inttoptr i32 %v0_14438 to i32*
  %v2_1443c = call i32 @function_13d7c(i32* %v1_1443c)
  store i32 %v2_1443c, i32* %r0.global-to-local, align 4
  %v2_14440 = icmp eq i32 %v2_1443c, 0
  br i1 %v2_14440, label %dec_label_pc_14484, label %dec_label_pc_14448

dec_label_pc_14448:                               ; preds = %dec_label_pc_14438
  %v0_14448 = load i32, i32* @r8, align 4
  %v1_14448 = inttoptr i32 %v0_14448 to i32*
  %v2_14448 = load i32, i32* %v1_14448, align 4
  %v1_1444c = and i32 %v2_14448, -2
  store i32 %v1_1444c, i32* %r3.global-to-local, align 4
  %v2_14450 = sub i32 %v0_14448, %v1_1444c
  store i32 %v2_14450, i32* @r8, align 4
  %v1_14454 = add i32 %v2_14450, 4
  %v2_14454 = inttoptr i32 %v1_14454 to i32*
  %v3_14454 = load i32, i32* %v2_14454, align 4
  store i32 %v1_142bc, i32* %r0.global-to-local, align 4
  %v1_1445c = and i32 %v3_14454, -2
  store i32 %v1_1445c, i32* %r2.global-to-local, align 4
  %v2_14460 = add i32 %v1_1445c, %v1_142bc
  store i32 %v2_14460, i32* %r3.global-to-local, align 4
  %v0_14468 = load i32, i32* @fp, align 4
  %v2_14468 = add i32 %v0_14468, %v1_1445c
  store i32 %v2_14468, i32* @fp, align 4
  %tmp81 = icmp ult i32 %v2_14460, 163841
  br i1 %tmp81, label %dec_label_pc_14484, label %dec_label_pc_14470

dec_label_pc_14470:                               ; preds = %dec_label_pc_14448
  %v2_14470 = xor i32 %v2_14460, %v1_1445c
  store i32 %v2_14470, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.4, i32* %r1.global-to-local, align 4
  %v3_14478 = icmp ult i32 %v1_1445c, %v2_14470
  br i1 %v3_14478, label %bb63, label %dec_label_pc_14484

bb63:                                             ; preds = %dec_label_pc_14470
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14484

dec_label_pc_14484:                               ; preds = %dec_label_pc_14470, %bb63, %dec_label_pc_14448, %dec_label_pc_14438
  %stack_var_-44.5 = phi i32 [ %stack_var_-44.4, %dec_label_pc_14438 ], [ %stack_var_-44.4, %dec_label_pc_14448 ], [ %stack_var_-44.4, %dec_label_pc_14470 ], [ 1, %bb63 ]
  %v0_14484 = load i32, i32* @sb, align 4
  store i32 %v0_14484, i32* %r0.global-to-local, align 4
  %v1_14488 = call i32 @function_1400c(i32 %v0_14484)
  store i32 %v1_14488, i32* %r0.global-to-local, align 4
  %v2_1448c = icmp eq i32 %v1_14488, 0
  %v0_142ec.pre = load i32, i32* @sb, align 4
  br i1 %v2_1448c, label %.loopexit, label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %dec_label_pc_14484
  %v1_14494 = add i32 %v0_142ec.pre, 4
  %v2_14494 = inttoptr i32 %v1_14494 to i32*
  %v3_14494 = load i32, i32* %v2_14494, align 4
  store i32 %v1_142bc, i32* %r0.global-to-local, align 4
  %v1_1449c = and i32 %v3_14494, -2
  store i32 %v1_1449c, i32* %r2.global-to-local, align 4
  %v2_144a0 = add i32 %v1_1449c, %v1_142bc
  store i32 %v2_144a0, i32* %r3.global-to-local, align 4
  %tmp82 = icmp ult i32 %v2_144a0, 163841
  br i1 %tmp82, label %dec_label_pc_144c0, label %dec_label_pc_144ac

dec_label_pc_144ac:                               ; preds = %dec_label_pc_14494
  %v2_144ac = xor i32 %v2_144a0, %v1_1449c
  store i32 %v2_144ac, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.5, i32* %r1.global-to-local, align 4
  %v3_144b4 = icmp ult i32 %v1_1449c, %v2_144ac
  br i1 %v3_144b4, label %bb64, label %dec_label_pc_144c0

bb64:                                             ; preds = %dec_label_pc_144ac
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_144c0

dec_label_pc_144c0:                               ; preds = %dec_label_pc_144ac, %bb64, %dec_label_pc_14494
  %stack_var_-44.6 = phi i32 [ %stack_var_-44.5, %dec_label_pc_14494 ], [ %stack_var_-44.5, %dec_label_pc_144ac ], [ 1, %bb64 ]
  %v2_144c0 = add i32 %v1_1449c, %v0_142ec.pre
  store i32 %v2_144c0, i32* @sb, align 4
  %v0_144c4 = load i32, i32* @fp, align 4
  %v2_144c4 = add i32 %v0_144c4, %v1_1449c
  store i32 %v2_144c4, i32* @fp, align 4
  %v1_144c8 = add i32 %v2_144c0, 4
  %v2_144c8 = inttoptr i32 %v1_144c8 to i32*
  %v3_144c8 = load i32, i32* %v2_144c8, align 4
  store i32 %v3_144c8, i32* %r3.global-to-local, align 4
  %v0_144cc = load i32, i32* @r8, align 4
  %v1_144cc = inttoptr i32 %v0_144cc to i32*
  %v2_144cc = load i32, i32* %v1_144cc, align 4
  store i32 %v2_144cc, i32* %r2.global-to-local, align 4
  %v2_144d0 = and i32 %v2_144cc, %v3_144c8
  store i32 %v2_144d0, i32* %r3.global-to-local, align 4
  %v1_144d4 = urem i32 %v2_144d0, 2
  %v2_144d4 = icmp eq i32 %v1_144d4, 0
  br i1 %v2_144d4, label %dec_label_pc_14438, label %dec_label_pc_14300

dec_label_pc_144e0:                               ; preds = %dec_label_pc_14384
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_144e4 = load i32, i32* @global_var_23108.564, align 4
  %v5_144e4 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_144e4, i32* %r4.global-to-local, align 4
  %v1_144e8 = load i32, i32* @sl, align 4
  %v6_144e8 = lshr i32 %v2_144e4, %v1_144e8
  %v1_144ec = sub i32 32, %v1_144e8
  %v7_144f0 = shl i32 %v5_144e4, %v1_144ec
  %v8_144f0 = or i32 %v7_144f0, %v6_144e8
  store i32 %v8_144f0, i32* %r3.global-to-local, align 4
  %v1_144f4 = add i32 %v1_144e8, -32
  store i32 %v1_144f4, i32* %r1.global-to-local, align 4
  %v6_144f4 = icmp slt i32 %v1_144f4, 0
  br i1 %v6_144f4, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_144e0
  %v7_144f8 = lshr i32 %v5_144e4, %v1_144f4
  store i32 %v7_144f8, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_144e0, %bb65
  %v0_144fc = phi i32 [ %v8_144f0, %dec_label_pc_144e0 ], [ %v7_144f8, %bb65 ]
  %v1_144fc = urem i32 %v0_144fc, 2
  store i32 %v1_144fc, i32* %r0.global-to-local, align 4
  %v2_144fc = icmp eq i32 %v1_144fc, 0
  br i1 %v2_144fc, label %dec_label_pc_14504, label %dec_label_pc_14560

dec_label_pc_14504:                               ; preds = %bb66
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_14508 = icmp eq i32 %v1_144f4, 0
  store i1 %v2_14508, i1* @cpsr_z, align 1
  %v7_1450c = lshr i32 1, %v1_144ec
  store i32 %v7_1450c, i32* %r4.global-to-local, align 4
  %v6_14510 = shl i32 1, %v1_144e8
  store i32 %v6_14510, i32* %r3.global-to-local, align 4
  br i1 %v6_144f4, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_14504
  %v9_14514 = shl i32 1, %v1_144f4
  store i32 %v9_14514, i32* %r4.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_14504, %bb67
  %v0_1451c = phi i32 [ %v7_1450c, %dec_label_pc_14504 ], [ %v9_14514, %bb67 ]
  store i32 %v6_14510, i32* %r5.global-to-local, align 4
  store i32 %v2_144e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_1453073 = or i32 %v2_144e4, %v6_14510
  store i32 %v2_1453073, i32* %r1.global-to-local, align 4
  %v4_1453474 = call i32 @function_16808(i32 %v2_144e4, i32 %v2_1453073, i32* nonnull @global_var_23108.564)
  store i32 %v4_1453474, i32* %r0.global-to-local, align 4
  %v2_1453876 = icmp eq i32 %v4_1453474, 0
  store i1 %v2_1453876, i1* @cpsr_z, align 1
  br i1 %v2_1453876, label %dec_label_pc_14540, label %dec_label_pc_14528.dec_label_pc_14528_crit_edge

dec_label_pc_14528.dec_label_pc_14528_crit_edge:  ; preds = %bb68, %dec_label_pc_14528.dec_label_pc_14528_crit_edge
  %v2_14528.pre = load i32, i32* @global_var_23108.564, align 4
  %v1_14530.pre = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_14528.pre, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14530 = or i32 %v2_14528.pre, %v1_14530.pre
  store i32 %v2_14530, i32* %r1.global-to-local, align 4
  %v4_14534 = call i32 @function_16808(i32 %v2_14528.pre, i32 %v2_14530, i32* nonnull @global_var_23108.564)
  store i32 %v4_14534, i32* %r0.global-to-local, align 4
  %v2_14538 = icmp eq i32 %v4_14534, 0
  store i1 %v2_14538, i1* @cpsr_z, align 1
  br i1 %v2_14538, label %dec_label_pc_14540, label %dec_label_pc_14528.dec_label_pc_14528_crit_edge

dec_label_pc_14540:                               ; preds = %dec_label_pc_14528.dec_label_pc_14528_crit_edge, %bb68
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r5.global-to-local, align 4
  store i32 %v0_1451c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14548

dec_label_pc_14548:                               ; preds = %dec_label_pc_14548.dec_label_pc_14548_crit_edge, %dec_label_pc_14540
  %v1_14550 = phi i32 [ %v1_14550.pre, %dec_label_pc_14548.dec_label_pc_14548_crit_edge ], [ %v0_1451c, %dec_label_pc_14540 ]
  %v2_14548 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v2_14548, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_14550 = or i32 %v2_14548, %v1_14550
  store i32 %v2_14550, i32* %r1.global-to-local, align 4
  %v4_14554 = call i32 @function_16808(i32 %v2_14548, i32 %v2_14550, i32* nonnull @global_var_2310c.566)
  store i32 %v4_14554, i32* %r0.global-to-local, align 4
  %v2_14558 = icmp eq i32 %v4_14554, 0
  store i1 %v2_14558, i1* @cpsr_z, align 1
  br i1 %v2_14558, label %dec_label_pc_14560.loopexit, label %dec_label_pc_14548.dec_label_pc_14548_crit_edge

dec_label_pc_14548.dec_label_pc_14548_crit_edge:  ; preds = %dec_label_pc_14548
  %v1_14550.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14548

dec_label_pc_14560.loopexit:                      ; preds = %dec_label_pc_14548
  %v1_14564.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_14560

dec_label_pc_14560:                               ; preds = %dec_label_pc_14560.loopexit, %bb66
  %v1_14564 = phi i32 [ %v1_14564.pre, %dec_label_pc_14560.loopexit ], [ %v0_14388, %bb66 ]
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r0, align 4
  %v0_14564 = load i32, i32* @fp, align 4
  %v2_14564 = inttoptr i32 %v1_14564 to i32*
  store i32 %v0_14564, i32* %v2_14564, align 4
  %v0_14568 = load i32, i32* @fp, align 4
  %v1_14568 = load i32, i32* @r8, align 4
  %v2_14568 = add i32 %v1_14568, 4
  %v3_14568 = inttoptr i32 %v2_14568 to i32*
  store i32 %v0_14568, i32* %v3_14568, align 4
  %v3_1456c = load i32, i32* @global_var_23510.572, align 4
  store i32 %v3_1456c, i32* %r3.global-to-local, align 4
  %v2_14570 = icmp eq i32 %v3_1456c, 0
  store i1 %v2_14570, i1* @cpsr_z, align 1
  %v0_14574 = load i32, i32* @r0, align 4
  store i32 %v0_14574, i32* %r4.global-to-local, align 4
  br i1 %v2_14570, label %dec_label_pc_145c8, label %dec_label_pc_1457c

dec_label_pc_1457c:                               ; preds = %dec_label_pc_14560
  %v0_1457c = call i32 @function_167b4()
  store i32 %v0_1457c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_14584 = add i32 %v0_1457c, 1032
  %v3_14584 = inttoptr i32 %v2_14584 to i32*
  store i32 0, i32* %v3_14584, align 4
  %v0_14588 = call i32 @function_167b4()
  store i32 %v0_14588, i32* %r0.global-to-local, align 4
  %v1_1458c = add i32 %v0_14588, 1036
  %v2_1458c = inttoptr i32 %v1_1458c to i32*
  %v3_1458c = load i32, i32* %v2_1458c, align 4
  store i32 %v3_1458c, i32* %r3.global-to-local, align 4
  %v2_14590 = icmp eq i32 %v3_1458c, 0
  br i1 %v2_14590, label %dec_label_pc_145c8, label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %dec_label_pc_1457c
  %v1_1459c = add i32 %v0_14588, 1032
  store i32 %v1_1459c, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_145b4 = icmp eq i32 %v1_1459c, -38
  br i1 %v4_145b4, label %dec_label_pc_145b8, label %dec_label_pc_145c8

dec_label_pc_145b8:                               ; preds = %dec_label_pc_14598
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_145c8

dec_label_pc_145c8:                               ; preds = %dec_label_pc_14598, %dec_label_pc_145b8, %dec_label_pc_1457c, %dec_label_pc_14560
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v3_145d0 = mul i32 %v1_1435c, 16
  %v2_145d4 = add i32 %v3_145d0, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_145d4, i32* %r3.global-to-local, align 4
  %v1_145d8 = add i32 %v3_145d0, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v1_145d8, i32* %r1.global-to-local, align 4
  %v1_145dc = load i32, i32* @r8, align 4
  %v2_145dc = add i32 %v1_145dc, 8
  %v3_145dc = inttoptr i32 %v2_145dc to i32*
  store i32 %v1_145d8, i32* %v3_145dc, align 4
  %v0_145e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_145e0 = add i32 %v0_145e0, 4
  %v2_145e0 = inttoptr i32 %v1_145e0 to i32*
  %v3_145e0 = load i32, i32* %v2_145e0, align 4
  store i32 %v3_145e0, i32* %r2.global-to-local, align 4
  %v1_145e4 = load i32, i32* @r8, align 4
  %v2_145e4 = add i32 %v1_145e4, 12
  %v3_145e4 = inttoptr i32 %v2_145e4 to i32*
  store i32 %v3_145e0, i32* %v3_145e4, align 4
  %v0_145e8 = load i32, i32* @r8, align 4
  %v1_145e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_145e8 = add i32 %v1_145e8, 12
  %v3_145e8 = inttoptr i32 %v2_145e8 to i32*
  store i32 %v0_145e8, i32* %v3_145e8, align 4
  store i32 %stack_var_-44.3, i32* @r0, align 4
  %v0_145f0 = load i32, i32* @r8, align 4
  %v1_145f0 = add i32 %v0_145f0, 12
  %v2_145f0 = inttoptr i32 %v1_145f0 to i32*
  %v3_145f0 = load i32, i32* %v2_145f0, align 4
  store i32 %v3_145f0, i32* %r3.global-to-local, align 4
  %v2_145f4 = icmp eq i32 %stack_var_-44.3, 0
  %v2_145f8 = add i32 %v3_145f0, 8
  %v3_145f8 = inttoptr i32 %v2_145f8 to i32*
  store i32 %v0_145f0, i32* %v3_145f8, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r4, align 4
  br i1 %v2_145f4, label %dec_label_pc_14604, label %dec_label_pc_1475c

dec_label_pc_14604:                               ; preds = %dec_label_pc_145c8, %dec_label_pc_1475c
  %v1_14610 = phi i32 [ ptrtoint (i32* @global_var_23108.564 to i32), %dec_label_pc_145c8 ], [ %v1_14608.pre, %dec_label_pc_1475c ]
  %v0_14604 = load i32, i32* @r6, align 4
  %v1_14604 = add i32 %v0_14604, 8
  store i32 %v1_14604, i32* %r2.global-to-local, align 4
  %v2_14608 = add i32 %v1_14604, %v1_14610
  %v3_14608 = inttoptr i32 %v2_14608 to i32*
  %v4_14608 = load i32, i32* %v3_14608, align 4
  store i32 %v4_14608, i32* @r3, align 4
  %v2_1460c = icmp eq i32 %v4_14608, 0
  store i1 %v2_1460c, i1* @cpsr_z, align 1
  store i32 %v2_14608, i32* %r5.global-to-local, align 4
  br i1 %v2_1460c, label %dec_label_pc_14604.dec_label_pc_14660_crit_edge, label %dec_label_pc_14618

dec_label_pc_14604.dec_label_pc_14660_crit_edge:  ; preds = %dec_label_pc_14604
  %v1_14668.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14660

dec_label_pc_14618:                               ; preds = %dec_label_pc_14604
  %v0_14618 = call i32 @function_167b4()
  store i32 %v0_14618, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14620 = load i32, i32* %r2.global-to-local, align 4
  %v2_14620 = load i32, i32* @r4, align 4
  %v3_14620 = add i32 %v2_14620, %v1_14620
  %v4_14620 = inttoptr i32 %v3_14620 to i32*
  store i32 0, i32* %v4_14620, align 4
  %v0_14624 = call i32 @function_167b4()
  store i32 %v0_14624, i32* %r0.global-to-local, align 4
  %v0_14628 = load i32, i32* @r6, align 4
  %v1_14628 = add i32 %v0_14628, 12
  store i32 %v1_14628, i32* @r3, align 4
  %v1_1462c = load i32, i32* @r4, align 4
  %v2_1462c = add i32 %v1_1462c, %v1_14628
  %v3_1462c = inttoptr i32 %v2_1462c to i32*
  %v4_1462c = load i32, i32* %v3_1462c, align 4
  store i32 %v4_1462c, i32* %r2.global-to-local, align 4
  %v2_14630 = icmp eq i32 %v4_1462c, 0
  br i1 %v2_14630, label %dec_label_pc_14660, label %dec_label_pc_14638

dec_label_pc_14638:                               ; preds = %dec_label_pc_14618
  %v0_1463c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1463c, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_14650 = icmp eq i32 %v0_1463c, -38
  br i1 %v4_14650, label %dec_label_pc_14654, label %dec_label_pc_14660

dec_label_pc_14654:                               ; preds = %dec_label_pc_14638
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14660

dec_label_pc_14660:                               ; preds = %dec_label_pc_14604.dec_label_pc_14660_crit_edge, %dec_label_pc_14638, %dec_label_pc_14654, %dec_label_pc_14618, %dec_label_pc_1429c, %bb70
  %v1_14668 = phi i32 [ %v1_14668.pre, %dec_label_pc_14604.dec_label_pc_14660_crit_edge ], [ %v0_1463c, %dec_label_pc_14638 ], [ -38, %dec_label_pc_14654 ], [ %v0_14624, %dec_label_pc_14618 ], [ 0, %dec_label_pc_1429c ], [ %v1_14714, %bb70 ]
  store i32 %v3_1429c, i32* @r4, align 4
  store i32 %v6_1429c, i32* @r5, align 4
  store i32 %v9_1429c, i32* @r6, align 4
  store i32 %v12_1429c, i32* @r7, align 4
  store i32 %v15_1429c, i32* @r8, align 4
  store i32 %v18_1429c, i32* @sb, align 4
  store i32 %v21_1429c, i32* @sl, align 4
  store i32 %v24_1429c, i32* @fp, align 4
  ret i32 %v1_14668

dec_label_pc_14674:                               ; preds = %dec_label_pc_146b8
  %v0_14678 = load i32, i32* @r6, align 4
  store i32 1, i32* @r2, align 4
  %v2_14680 = add i32 %v0_14678, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 12)
  store i32 %v2_14680, i32* %r1.global-to-local, align 4
  %v0_14684 = load i32, i32* @r5, align 4
  store i32 %v0_14684, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_1468c = inttoptr i32 %v0_14684 to i32*
  %v3_1468c = call i32 @function_16334(i32* %v2_1468c, i32 %v2_14680)
  store i32 %v3_1468c, i32* %r0.global-to-local, align 4
  %v0_14694.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14690

dec_label_pc_14690:                               ; preds = %dec_label_pc_14338, %dec_label_pc_14674
  %v0_14694 = phi i32 [ %v0_14694.pre, %dec_label_pc_14674 ], [ %v3_14340, %dec_label_pc_14338 ]
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r0.global-to-local, align 4
  %v1_14694 = add i32 %v0_14694, 8
  store i32 %v1_14694, i32* %r3.global-to-local, align 4
  %v2_14698 = add i32 %v0_14694, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 8)
  store i32 %v2_14698, i32* @r7, align 4
  br label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %dec_label_pc_1469c.dec_label_pc_1469c_crit_edge, %dec_label_pc_14690
  %v0_1469c = phi i32 [ %v0_1469c.pre, %dec_label_pc_1469c.dec_label_pc_1469c_crit_edge ], [ %v2_14698, %dec_label_pc_14690 ]
  %v1_1469c = inttoptr i32 %v0_1469c to i32*
  %v2_1469c = load i32, i32* %v1_1469c, align 4
  store i32 %v2_1469c, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_1469c, i32* %r0.global-to-local, align 4
  store i32 %v0_1469c, i32* %r2.global-to-local, align 4
  %v4_146ac = call i32 @function_16808(i32 %v2_1469c, i32 1, i32* %v1_1469c)
  store i32 %v4_146ac, i32* %r0.global-to-local, align 4
  %v2_146b0 = icmp eq i32 %v4_146ac, 0
  store i1 %v2_146b0, i1* @cpsr_z, align 1
  br i1 %v2_146b0, label %dec_label_pc_146b8, label %dec_label_pc_1469c.dec_label_pc_1469c_crit_edge

dec_label_pc_1469c.dec_label_pc_1469c_crit_edge:  ; preds = %dec_label_pc_1469c
  %v0_1469c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1469c

dec_label_pc_146b8:                               ; preds = %dec_label_pc_1469c
  %v0_1466c = load i32, i32* @r4, align 4
  %v2_1466c = icmp eq i32 %v0_1466c, 0
  br i1 %v2_1466c, label %dec_label_pc_14358.loopexit, label %dec_label_pc_14674

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146bc, %dec_label_pc_146f4, %dec_label_pc_14374
  %v3_146c0 = load i32, i32* @global_var_23510.572, align 4
  store i32 %v3_146c0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* %r2.global-to-local, align 4
  store i32 %v3_146c0, i32* %r0.global-to-local, align 4
  %v4_146d0 = call i32 @function_16808(i32 %v3_146c0, i32 1, i32* nonnull @global_var_23510.572)
  %v2_146d4 = icmp eq i32 %v4_146d0, 0
  store i1 %v2_146d4, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23514.576 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_146d4, label %dec_label_pc_146ec, label %dec_label_pc_146bc

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146bc
  %v0_146ec = load i32, i32* @r4, align 4
  %v2_146ec = icmp eq i32 %v0_146ec, 0
  br i1 %v2_146ec, label %dec_label_pc_14384, label %dec_label_pc_146f4

dec_label_pc_146f4:                               ; preds = %dec_label_pc_146ec
  %v3_146f4 = call i32 @function_16334(i32* nonnull @global_var_23510.572, i32 ptrtoint (i32* @global_var_23514.576 to i32))
  store i32 %v3_146f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146bc

dec_label_pc_146fc:                               ; preds = %dec_label_pc_142ac
  %v2_146fc = inttoptr i32 %v1_142ac to i32*
  %v3_146fc = load i32, i32* %v2_146fc, align 4
  store i32 %v3_146fc, i32* %r0.global-to-local, align 4
  %v1_14700 = and i32 %v3_142b0, -2
  %v1_14704 = urem i32 %v3_146fc, 2
  %v2_14704 = icmp eq i32 %v1_14704, 0
  %v2_14708 = add i32 %v3_146fc, %v1_14700
  store i32 %v2_14708, i32* @r1, align 4
  br i1 %v2_14704, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_146fc
  call void @llvm.trap()
  unreachable

bb70:                                             ; preds = %dec_label_pc_146fc
  %v2_14710 = sub i32 %v1_142ac, %v3_146fc
  store i32 %v2_14710, i32* %r0.global-to-local, align 4
  %v1_14714 = call i32 @function_15210(i32 %v2_14710)
  store i32 %v1_14714, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14660

dec_label_pc_1471c:                               ; preds = %dec_label_pc_14358
  store i32 %v1_1435c, i32* %r0.global-to-local, align 4
  %v3_14720 = mul i32 %v1_1435c, 16
  %v2_14724 = add i32 %v3_14720, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_14724, i32* %r3.global-to-local, align 4
  %v1_14728 = add i32 %v3_14720, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v1_14728, i32* %r2.global-to-local, align 4
  store i32 %v1_14728, i32* %v6_14360, align 4
  %v0_14730 = load i32, i32* %r2.global-to-local, align 4
  %v1_14730 = load i32, i32* %r3.global-to-local, align 4
  %v2_14730 = add i32 %v1_14730, 4
  %v3_14730 = inttoptr i32 %v2_14730 to i32*
  store i32 %v0_14730, i32* %v3_14730, align 4
  br label %dec_label_pc_14374

dec_label_pc_14738:                               ; preds = %dec_label_pc_143c4
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_143e4

dec_label_pc_1474c:                               ; preds = %dec_label_pc_1441c
  store i32 %v0_14420, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14438.preheader

dec_label_pc_1475c:                               ; preds = %dec_label_pc_145c8
  %v0_1475c = load i32, i32* @r8, align 4
  %v0_14760 = load i32, i32* @sb, align 4
  %v1_14760 = add i32 %v0_14760, -16
  %v1_14764 = add i32 %v0_1475c, 4111
  %v1_14770 = and i32 %v1_14764, -4096
  store i32 %v1_14770, i32* @r0, align 4
  %v1_14774 = and i32 %v1_14760, -4096
  %v2_14778 = sub i32 %v1_14774, %v1_14770
  store i32 %v2_14778, i32* %r1.global-to-local, align 4
  store i32 4, i32* @r2, align 4
  %v4_14780 = call i32 @function_150f8(i32 %v1_14770, i32 %v2_14778, i32 4, i32 %v3_145f0)
  store i32 %v4_14780, i32* @r0, align 4
  %v1_14608.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14604

; uselistorder directives
  uselistorder i32 %v3_14720, { 1, 0 }
  uselistorder i32 %v1_14714, { 1, 0 }
  uselistorder i32 %v3_146fc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1469c, { 1, 0 }
  uselistorder i32 %v0_14694, { 1, 0 }
  uselistorder i32 %v3_145d0, { 1, 0 }
  uselistorder i32 %v2_14548, { 1, 0, 2 }
  uselistorder i32 %v2_14528.pre, { 0, 2, 1 }
  uselistorder i32 %v7_1450c, { 1, 0 }
  uselistorder i32 %v1_144fc, { 1, 0 }
  uselistorder i32 %v1_144f4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_144cc, { 1, 0 }
  uselistorder i32 %v2_144c4, { 1, 0 }
  uselistorder i32 %v2_144c0, { 1, 2, 0 }
  uselistorder i32 %v2_144a0, { 1, 0, 2 }
  uselistorder i32 %v1_1449c, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_142ec.pre, { 1, 2, 0 }
  uselistorder i32 %stack_var_-44.5, { 1, 2, 3, 0 }
  uselistorder i32 %v2_14460, { 1, 0, 2 }
  uselistorder i32 %v1_1445c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_14438, { 1, 0 }
  uselistorder i32 %v0_14420, { 1, 0, 2 }
  uselistorder i32 %v1_14390, { 1, 0 }
  uselistorder i32 %v1_1435c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_14340, { 2, 1, 0 }
  uselistorder i32 %v0_14340, { 1, 0 }
  uselistorder i32 %v3_14330, { 1, 0 }
  uselistorder i32 %v4_14318, { 1, 0, 2 }
  uselistorder i32 %v0_1430c, { 1, 0 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_142c0, { 1, 0, 2 }
  uselistorder i32 %v1_142bc, { 0, 4, 1, 5, 3, 2, 6 }
  uselistorder i32 %v1_142b4, { 1, 0 }
  uselistorder i32 %v3_142b0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_142ac, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_142a0, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 23, 24, 25, 22, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 3, 8, 9, 11, 10, 12, 19, 15, 16, 14, 13, 18, 17, 20, 21, 22, 23, 25, 24, 29, 26, 5, 4, 27, 28, 2, 30, 31, 34, 33, 32, 35, 36, 37, 38, 0, 1 }
  uselistorder i32 1032, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_146bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14690, { 1, 0 }
  uselistorder label %dec_label_pc_14660, { 5, 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_14604, { 1, 0 }
  uselistorder label %dec_label_pc_145c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14528.dec_label_pc_14528_crit_edge, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_144c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14484, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14438, { 1, 0 }
  uselistorder label %dec_label_pc_14438.preheader, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_143e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14374, { 1, 0 }
  uselistorder label %dec_label_pc_14338, { 2, 0, 1 }
  uselistorder label %bb62, { 1, 0 }
}

define i32 @function_14798() local_unnamed_addr {
dec_label_pc_14798:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_14798 = load i32, i32* @r4, align 4
  %v6_14798 = load i32, i32* @r5, align 4
  %v9_14798 = load i32, i32* @r6, align 4
  %v12_14798 = load i32, i32* @r7, align 4
  %v15_14798 = load i32, i32* @r8, align 4
  %v18_14798 = load i32, i32* @sb, align 4
  %v21_14798 = load i32, i32* @sl, align 4
  %v24_14798 = load i32, i32* @fp, align 4
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v0_147a4 = load i32, i32* @r0, align 4
  %v1_147a4 = add i32 %v0_147a4, -1
  store i32 %v1_147a4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_147a4, 2147479536
  br i1 %tmp, label %dec_label_pc_14b44, label %dec_label_pc_147b4

dec_label_pc_147b4:                               ; preds = %dec_label_pc_14798
  %v2_147b4 = icmp eq i32 %v0_147a4, 0
  br i1 %v2_147b4, label %.thread, label %dec_label_pc_14e1c

.thread:                                          ; preds = %dec_label_pc_147b4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_147c8

dec_label_pc_147c8:                               ; preds = %.thread43, %.thread, %dec_label_pc_14b6c
  %v1_147e0 = phi i32 [ %v1_14b7c, %dec_label_pc_14b6c ], [ 0, %.thread ], [ %v1_14b5c, %.thread43 ]
  %v0_14b88 = phi i32 [ %v1_14b48, %dec_label_pc_14b6c ], [ 16, %.thread ], [ %v1_14b48, %.thread43 ]
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_147cc = sub nsw i32 32, %v1_147e0
  store i32 %v1_147cc, i32* %r1.global-to-local, align 4
  %v7_147d4 = lshr i32 1, %v1_147cc
  store i32 %v7_147d4, i32* %r4.global-to-local, align 4
  %v1_147d8 = add nsw i32 %v1_147e0, -32
  store i32 %v1_147d8, i32* %r0.global-to-local, align 4
  %v6_147d8 = icmp slt i32 %v1_147e0, 32
  br i1 %v6_147d8, label %bb64, label %bb

bb:                                               ; preds = %dec_label_pc_147c8
  %v7_147dc = shl i32 1, %v1_147d8
  store i32 %v7_147dc, i32* %r4.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_147c8, %bb
  %v0_147e8 = phi i32 [ %v7_147d4, %dec_label_pc_147c8 ], [ %v7_147dc, %bb ]
  %v1_147e4 = shl i32 -1, %v1_147e0
  %v6_147e8 = sub i32 -1, %v0_147e8
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* @fp, align 4
  %v2_147fc70 = load i32, i32* @global_var_23108.564, align 4
  %v5_147fc71 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_147fc71, i32* @r4, align 4
  %v2_1480872 = and i32 %v2_147fc70, %v1_147e4
  store i32 %v2_1480872, i32* %r1.global-to-local, align 4
  %v2_1480c73 = and i32 %v5_147fc71, %v6_147e8
  store i32 %v2_1480c73, i32* %r2.global-to-local, align 4
  %v2_1481074 = or i32 %v2_1480c73, %v2_1480872
  store i32 %v2_1481074, i32* %r3.global-to-local, align 4
  %v4_1481076 = icmp eq i32 %v2_1481074, 0
  br i1 %v4_1481076, label %dec_label_pc_14944, label %dec_label_pc_14818.preheader

dec_label_pc_147fc.loopexit:                      ; preds = %dec_label_pc_148c8, %dec_label_pc_148e0, %dec_label_pc_14900
  %v2_147fc = load i32, i32* @global_var_23108.564, align 4
  %v5_147fc = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_147fc, i32* @r4, align 4
  %v2_14808 = and i32 %v2_147fc, %v1_147e4
  store i32 %v2_14808, i32* %r1.global-to-local, align 4
  %v2_1480c = and i32 %v5_147fc, %v6_147e8
  store i32 %v2_1480c, i32* %r2.global-to-local, align 4
  %v2_14810 = or i32 %v2_1480c, %v2_14808
  store i32 %v2_14810, i32* %r3.global-to-local, align 4
  %v4_14810 = icmp eq i32 %v2_14810, 0
  br i1 %v4_14810, label %dec_label_pc_14944, label %dec_label_pc_14818.preheader

dec_label_pc_14818.preheader:                     ; preds = %bb64, %dec_label_pc_147fc.loopexit
  %v2_1480c78 = phi i32 [ %v2_1480c, %dec_label_pc_147fc.loopexit ], [ %v2_1480c73, %bb64 ]
  %v2_1480877 = phi i32 [ %v2_14808, %dec_label_pc_147fc.loopexit ], [ %v2_1480872, %bb64 ]
  br label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %dec_label_pc_14818.preheader, %dec_label_pc_1491c
  %v0_14820 = phi i32 [ %v2_14938, %dec_label_pc_1491c ], [ %v2_1480c78, %dec_label_pc_14818.preheader ]
  %v0_14a98 = phi i32 [ %v2_14934, %dec_label_pc_1491c ], [ %v2_1480877, %dec_label_pc_14818.preheader ]
  store i32 %v0_14a98, i32* %r3.global-to-local, align 4
  %v2_14818 = icmp eq i32 %v0_14a98, 0
  br i1 %v2_14818, label %dec_label_pc_14820, label %dec_label_pc_14a98

dec_label_pc_14820:                               ; preds = %dec_label_pc_14818
  %v1_14820 = sub i32 0, %v0_14820
  %v2_14824 = and i32 %v0_14820, %v1_14820
  store i32 %v2_14824, i32* %r0.global-to-local, align 4
  %v3_14834 = mul i32 %v2_14824, 1088
  store i32 %v3_14834, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aaa2.580 to i32), i32* %r2.global-to-local, align 4
  %v2_14868 = mul i32 %v2_14824, 124511785
  store i32 %v2_14868, i32* %r3.global-to-local, align 4
  %v4_1486c = udiv i32 %v2_14868, 134217728
  %v5_1486c = add i32 %v4_1486c, ptrtoint (i32* @global_var_1aaa2.580 to i32)
  %v6_1486c = inttoptr i32 %v5_1486c to i8*
  %v7_1486c = load i8, i8* %v6_1486c, align 1
  %v9_1486c = zext i8 %v7_1486c to i32
  store i32 %v9_1486c, i32* %r1.global-to-local, align 4
  %v1_14870 = add nuw nsw i32 %v9_1486c, 32
  br label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %dec_label_pc_14a98, %dec_label_pc_14820
  %storemerge = phi i32 [ %v1_14870, %dec_label_pc_14820 ], [ %v9_14ae4, %dec_label_pc_14a98 ]
  store i32 %storemerge, i32* @r8, align 4
  %v3_14874 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14874, i32* %r2.global-to-local, align 4
  %v3_14878 = mul nsw i32 %storemerge, 16
  store i32 %v3_14878, i32* @r6, align 4
  %v1_1487c = or i32 %v3_14878, 8
  store i32 %v1_1487c, i32* %r3.global-to-local, align 4
  %v2_14880 = icmp eq i32 %v3_14874, 0
  store i1 %v2_14880, i1* @cpsr_z, align 1
  %v1_14884 = load i32, i32* @sl, align 4
  %v2_14884 = add i32 %v1_14884, %v1_1487c
  store i32 %v2_14884, i32* @r5, align 4
  br i1 %v2_14880, label %dec_label_pc_1488c, label %dec_label_pc_14a70

dec_label_pc_1488c.loopexit:                      ; preds = %dec_label_pc_14a94
  %v0_1488c.pre = load i32, i32* @r8, align 4
  %v0_14890.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1488c

dec_label_pc_1488c:                               ; preds = %dec_label_pc_1488c.loopexit, %dec_label_pc_14874
  %v0_14890 = phi i32 [ %v0_14890.pre, %dec_label_pc_1488c.loopexit ], [ %v1_14884, %dec_label_pc_14874 ]
  %v0_14bb4 = phi i32 [ %v0_1488c.pre, %dec_label_pc_1488c.loopexit ], [ %storemerge, %dec_label_pc_14874 ]
  %v1_1488c = add i32 %v0_14bb4, 1
  store i32 %v1_1488c, i32* %r1.global-to-local, align 4
  %v4_14890 = mul i32 %v1_1488c, 16
  %v5_14890 = add i32 %v4_14890, %v0_14890
  %v6_14890 = inttoptr i32 %v5_14890 to i32*
  %v7_14890 = load i32, i32* %v6_14890, align 4
  store i32 %v7_14890, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r0, align 4
  %v2_14898 = icmp eq i32 %v7_14890, 0
  br i1 %v2_14898, label %.thread7, label %dec_label_pc_148b4

.thread7:                                         ; preds = %dec_label_pc_1488c
  %v4_1489c = mul i32 %v1_1488c, 16
  %v3_148a0 = add i32 %v4_1489c, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v3_148a0, i32* %r3.global-to-local, align 4
  %v2_148a4 = add i32 %v4_1489c, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v2_148a4, i32* %r2.global-to-local, align 4
  %v7_148a8 = add i32 %v4_14890, ptrtoint (i32* @global_var_23108.564 to i32)
  %v8_148a8 = inttoptr i32 %v7_148a8 to i32*
  store i32 %v2_148a4, i32* %v8_148a8, align 4
  %v1_148ac = load i32, i32* %r2.global-to-local, align 4
  %v2_148ac = load i32, i32* %r3.global-to-local, align 4
  %v3_148ac = add i32 %v2_148ac, 4
  %v4_148ac = inttoptr i32 %v3_148ac to i32*
  store i32 %v1_148ac, i32* %v4_148ac, align 4
  %v1_148cc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_148c8

dec_label_pc_148b4:                               ; preds = %dec_label_pc_1488c
  %v1_148bc = add i32 %v4_14890, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v1_148bc, i32* %r3.global-to-local, align 4
  %v9_148c0 = icmp eq i32 %v7_14890, %v1_148bc
  br i1 %v9_148c0, label %dec_label_pc_148c8, label %dec_label_pc_14bb4

dec_label_pc_148c8:                               ; preds = %.thread7, %dec_label_pc_148b4
  %v1_148cc = phi i32 [ %v1_148cc.pre, %.thread7 ], [ %v0_14890, %dec_label_pc_148b4 ]
  %v0_148c8 = load i32, i32* @r6, align 4
  %v1_148c8 = add i32 %v0_148c8, 8
  store i32 %v1_148c8, i32* %r2.global-to-local, align 4
  %v2_148cc = add i32 %v1_148cc, %v1_148c8
  %v3_148cc = inttoptr i32 %v2_148cc to i32*
  %v4_148cc = load i32, i32* %v3_148cc, align 4
  store i32 %v4_148cc, i32* %r3.global-to-local, align 4
  %v2_148d0 = icmp eq i32 %v4_148cc, 0
  store i1 %v2_148d0, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_148cc, i32* %r4.global-to-local, align 4
  br i1 %v2_148d0, label %dec_label_pc_147fc.loopexit, label %dec_label_pc_148e0

dec_label_pc_148e0:                               ; preds = %dec_label_pc_148c8
  %v0_148e0 = call i32 @function_167b4()
  store i32 %v0_148e0, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_148e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_148e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_148e8 = add i32 %v2_148e8, %v1_148e8
  %v4_148e8 = inttoptr i32 %v3_148e8 to i32*
  store i32 0, i32* %v4_148e8, align 4
  %v0_148ec = call i32 @function_167b4()
  store i32 %v0_148ec, i32* %r0.global-to-local, align 4
  %v0_148f0 = load i32, i32* @r6, align 4
  %v1_148f0 = add i32 %v0_148f0, 12
  store i32 %v1_148f0, i32* %r3.global-to-local, align 4
  %v1_148f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_148f4 = add i32 %v1_148f4, %v1_148f0
  %v3_148f4 = inttoptr i32 %v2_148f4 to i32*
  %v4_148f4 = load i32, i32* %v3_148f4, align 4
  store i32 %v4_148f4, i32* %r2.global-to-local, align 4
  %v2_148f8 = icmp eq i32 %v4_148f4, 0
  br i1 %v2_148f8, label %dec_label_pc_147fc.loopexit, label %dec_label_pc_14900

dec_label_pc_14900:                               ; preds = %dec_label_pc_148e0
  store i32 240, i32* @r7, align 4
  %v0_14904 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14904, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_14918 = icmp eq i32 %v0_14904, -38
  br i1 %v4_14918, label %dec_label_pc_1491c, label %dec_label_pc_147fc.loopexit

dec_label_pc_1491c:                               ; preds = %dec_label_pc_14900
  store i32 -38, i32* %r0.global-to-local, align 4
  %v2_14928 = load i32, i32* @global_var_23108.564, align 4
  %v5_14928 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_14928, i32* @r4, align 4
  %v2_14934 = and i32 %v2_14928, %v1_147e4
  store i32 %v2_14934, i32* %r1.global-to-local, align 4
  %v2_14938 = and i32 %v5_14928, %v6_147e8
  store i32 %v2_14938, i32* %r2.global-to-local, align 4
  %v2_1493c = or i32 %v2_14938, %v2_14934
  store i32 %v2_1493c, i32* %r3.global-to-local, align 4
  %v4_1493c = icmp eq i32 %v2_1493c, 0
  br i1 %v4_1493c, label %dec_label_pc_14944, label %dec_label_pc_14818

dec_label_pc_14944:                               ; preds = %bb64, %dec_label_pc_147fc.loopexit, %dec_label_pc_1491c
  %v3_14944 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14944, i32* %r3.global-to-local, align 4
  store i32 %v0_14b88, i32* %ip.global-to-local, align 4
  %v2_1494c = icmp eq i32 %v3_14944, 0
  store i1 %v2_1494c, i1* @cpsr_z, align 1
  %v1_14950 = add i32 %v0_14b88, 16
  store i32 %v1_14950, i32* %r2.global-to-local, align 4
  store i32 %v1_14950, i32* %stack_var_-44, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* @r6, align 4
  br i1 %v2_1494c, label %dec_label_pc_14960, label %dec_label_pc_14b08

dec_label_pc_14960:                               ; preds = %dec_label_pc_14aec, %dec_label_pc_14944
  %v2_14960 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14960, i32* %r0.global-to-local, align 4
  %v2_14964 = call i32 @function_17660(i32* nonnull %stack_var_-44)
  store i32 %v2_14964, i32* @r0, align 4
  store i32 %v2_14964, i32* %r4.global-to-local, align 4
  %v2_14968 = icmp eq i32 %v2_14964, 0
  br i1 %v2_14968, label %dec_label_pc_14cf8, label %dec_label_pc_14970

dec_label_pc_14970:                               ; preds = %dec_label_pc_14960
  store i32 ptrtoint (i32* @global_var_230f8.584 to i32), i32* @r0, align 4
  %v2_14974 = load i32, i32* @global_var_230f8.584, align 4
  store i32 %v2_14974, i32* %r3.global-to-local, align 4
  %v9_14978 = icmp eq i32 %v2_14964, %v2_14974
  br i1 %v9_14978, label %dec_label_pc_14998, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14970
  %v3_14980 = load i32, i32* %stack_var_-44, align 4
  %v1_14984 = add i32 %v2_14964, 16
  store i32 %v1_14984, i32* %r4.global-to-local, align 4
  %v1_14988 = add i32 %v3_14980, -16
  store i32 %v1_14988, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 %v1_14988, i32* %stack_var_-44, align 4
  %v2_14994 = add i32 %v2_14964, 8
  %v3_14994 = inttoptr i32 %v2_14994 to i32*
  store i32 1, i32* %v3_14994, align 4
  %v0_1499c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14998

dec_label_pc_14998:                               ; preds = %dec_label_pc_14970, %dec_label_pc_14980
  %v0_1499c = phi i32 [ %v2_14964, %dec_label_pc_14970 ], [ %v0_1499c.pre, %dec_label_pc_14980 ]
  %v3_14998 = load i32, i32* %stack_var_-44, align 4
  %v1_1499c = add i32 %v0_1499c, -8
  store i32 %v1_1499c, i32* @r5, align 4
  %v1_149a0 = or i32 %v3_14998, 1
  store i32 %v1_149a0, i32* %r1.global-to-local, align 4
  %v2_149a4 = add i32 %v3_14998, %v0_1499c
  store i32 %v2_149a4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v1_149ac = add i32 %v2_149a4, -8
  %v2_149ac = inttoptr i32 %v1_149ac to i32*
  store i32 %v1_149a0, i32* %v2_149ac, align 4
  %v4_149ac = add i32 %v2_149a4, -4
  %v5_149ac = inttoptr i32 %v4_149ac to i32*
  %v6_149ac = load i32, i32* @r4, align 4
  store i32 %v6_149ac, i32* %v5_149ac, align 4
  %v0_149b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_149b0 = load i32, i32* @r5, align 4
  %v2_149b0 = add i32 %v1_149b0, 4
  %v3_149b0 = inttoptr i32 %v2_149b0 to i32*
  store i32 %v0_149b0, i32* %v3_149b0, align 4
  %v2_149b4 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_149b4, i32* %r2.global-to-local, align 4
  %v2_149b8 = icmp eq i32 %v2_149b4, 0
  store i1 %v2_149b8, i1* @cpsr_z, align 1
  %v0_149bc = load i32, i32* %r3.global-to-local, align 4
  %v1_149bc = load i32, i32* @r0, align 4
  %v2_149bc = inttoptr i32 %v1_149bc to i32*
  store i32 %v0_149bc, i32* %v2_149bc, align 4
  br i1 %v2_149b8, label %dec_label_pc_149e0, label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %dec_label_pc_14998
  %v0_149c4 = call i32 @function_167b4()
  store i32 %v0_149c4, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_149cc = load i32, i32* @r6, align 4
  %v2_149cc = inttoptr i32 %v1_149cc to i32*
  store i32 0, i32* %v2_149cc, align 4
  %v0_149d0 = call i32 @function_167b4()
  store i32 %v0_149d0, i32* %r0.global-to-local, align 4
  %v3_149d4 = load i32, i32* @global_var_23100.585, align 4
  store i32 %v3_149d4, i32* %r3.global-to-local, align 4
  %v2_149d8 = icmp eq i32 %v3_149d4, 0
  br i1 %v2_149d8, label %dec_label_pc_149e0, label %dec_label_pc_14ca8

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149c4, %dec_label_pc_14ca8, %dec_label_pc_14998, %dec_label_pc_14cc4
  %v0_149e0 = load i32, i32* @r5, align 4
  store i32 %v0_149e0, i32* %r0.global-to-local, align 4
  %v1_149e4 = inttoptr i32 %v0_149e0 to i32*
  %v2_149e4 = call i32 @function_13d7c(i32* %v1_149e4)
  store i32 %v2_149e4, i32* %r0.global-to-local, align 4
  %v2_149e8 = icmp eq i32 %v2_149e4, 0
  %v1_149ec = load i32, i32* @r5, align 4
  br i1 %v2_149e8, label %bb65, label %dec_label_pc_149f4

bb65:                                             ; preds = %dec_label_pc_149e0
  store i32 %v1_149ec, i32* @r8, align 4
  br label %dec_label_pc_14a24

dec_label_pc_149f4:                               ; preds = %dec_label_pc_149e0
  %v1_149f4 = inttoptr i32 %v1_149ec to i32*
  %v2_149f4 = load i32, i32* %v1_149f4, align 4
  %v1_149f8 = and i32 %v2_149f4, -2
  %v2_149fc = sub i32 %v1_149ec, %v1_149f8
  store i32 %v2_149fc, i32* %r3.global-to-local, align 4
  %v1_14a00 = add i32 %v2_149fc, 4
  %v2_14a00 = inttoptr i32 %v1_14a00 to i32*
  %v3_14a00 = load i32, i32* %v2_14a00, align 4
  store i32 %v3_14a00, i32* %r1.global-to-local, align 4
  %v1_14a04 = add i32 %v1_149ec, 4
  %v2_14a04 = inttoptr i32 %v1_14a04 to i32*
  %v3_14a04 = load i32, i32* %v2_14a04, align 4
  store i32 %v3_14a04, i32* %r2.global-to-local, align 4
  %v1_14a08 = and i32 %v3_14a00, -2
  %v2_14a0c = add i32 %v3_14a04, %v1_14a08
  store i32 %v2_14a0c, i32* %r1.global-to-local, align 4
  store i32 %v2_14a0c, i32* %v2_14a00, align 4
  %v0_14a14 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a14 = and i32 %v0_14a14, -2
  store i32 %v1_14a14, i32* %r2.global-to-local, align 4
  %v0_14a18 = load i32, i32* %r1.global-to-local, align 4
  %v1_14a18 = load i32, i32* @r5, align 4
  %v3_14a18 = add i32 %v1_14a18, %v1_14a14
  %v4_14a18 = inttoptr i32 %v3_14a18 to i32*
  store i32 %v0_14a18, i32* %v4_14a18, align 4
  %v0_14a1c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14a1c, i32* @r8, align 4
  store i32 %v0_14a1c, i32* @r5, align 4
  br label %dec_label_pc_14a24

dec_label_pc_14a24:                               ; preds = %bb65, %dec_label_pc_14c7c, %dec_label_pc_14c5c, %dec_label_pc_14c44, %dec_label_pc_14c98, %dec_label_pc_149f4
  %v0_14a24 = load i32, i32* @r5, align 4
  %v1_14a24 = add i32 %v0_14a24, 4
  %v2_14a24 = inttoptr i32 %v1_14a24 to i32*
  %v3_14a24 = load i32, i32* %v2_14a24, align 4
  %v1_14a28 = and i32 %v3_14a24, -2
  store i32 %v1_14a28, i32* %r1.global-to-local, align 4
  store i32 %v0_14b88, i32* @r3, align 4
  %v1_14a30 = add i32 %v1_14a28, -16
  store i32 %v1_14a30, i32* %r2.global-to-local, align 4
  %v3_14a34 = icmp ult i32 %v0_14b88, %v1_14a30
  br i1 %v3_14a34, label %dec_label_pc_14b84, label %dec_label_pc_14a3c

dec_label_pc_14a3c:                               ; preds = %dec_label_pc_14a24, %dec_label_pc_14b84
  %v0_14a3c = load i32, i32* @r8, align 4
  %v1_14a3c = add i32 %v0_14a3c, 8
  store i32 %v1_14a3c, i32* @ip, align 4
  br label %dec_label_pc_14a40

dec_label_pc_14a40:                               ; preds = %.thread14, %dec_label_pc_14e64, %dec_label_pc_14e1c, %dec_label_pc_14d04, %dec_label_pc_14a3c
  %v0_14a40 = load i32, i32* @ip, align 4
  store i32 %v0_14a40, i32* %r0.global-to-local, align 4
  store i32 %v3_14798, i32* @r4, align 4
  store i32 %v6_14798, i32* @r5, align 4
  store i32 %v9_14798, i32* @r6, align 4
  store i32 %v12_14798, i32* @r7, align 4
  store i32 %v15_14798, i32* @r8, align 4
  store i32 %v18_14798, i32* @sb, align 4
  store i32 %v21_14798, i32* @sl, align 4
  store i32 %v24_14798, i32* @fp, align 4
  ret i32 %v0_14a40

dec_label_pc_14a58:                               ; preds = %dec_label_pc_14a94
  %v0_14a58 = load i32, i32* @r6, align 4
  %v1_14a58 = add i32 %v0_14a58, 12
  store i32 1, i32* @r2, align 4
  %v1_14a60 = load i32, i32* @sl, align 4
  %v2_14a60 = add i32 %v1_14a58, %v1_14a60
  store i32 %v2_14a60, i32* %r1.global-to-local, align 4
  %v0_14a64 = load i32, i32* @r5, align 4
  store i32 %v0_14a64, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_14a6c = inttoptr i32 %v0_14a64 to i32*
  %v3_14a6c = call i32 @function_16334(i32* %v2_14a6c, i32 %v2_14a60)
  store i32 %v3_14a6c, i32* %r0.global-to-local, align 4
  %v0_14a70.pre = load i32, i32* @r6, align 4
  %v1_14a74.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14a70

dec_label_pc_14a70:                               ; preds = %dec_label_pc_14874, %dec_label_pc_14a58
  %v1_14a74 = phi i32 [ %v1_14a74.pre, %dec_label_pc_14a58 ], [ %v1_14884, %dec_label_pc_14874 ]
  %v0_14a70 = phi i32 [ %v0_14a70.pre, %dec_label_pc_14a58 ], [ %v3_14878, %dec_label_pc_14874 ]
  %v1_14a70 = add i32 %v0_14a70, 8
  store i32 %v1_14a70, i32* %r3.global-to-local, align 4
  %v2_14a74 = add i32 %v1_14a70, %v1_14a74
  store i32 %v2_14a74, i32* @r4, align 4
  br label %dec_label_pc_14a78

dec_label_pc_14a78:                               ; preds = %dec_label_pc_14a78.dec_label_pc_14a78_crit_edge, %dec_label_pc_14a70
  %v0_14a78 = phi i32 [ %v0_14a78.pre, %dec_label_pc_14a78.dec_label_pc_14a78_crit_edge ], [ %v2_14a74, %dec_label_pc_14a70 ]
  %v1_14a78 = inttoptr i32 %v0_14a78 to i32*
  %v2_14a78 = load i32, i32* %v1_14a78, align 4
  store i32 %v2_14a78, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_14a78, i32* %r0.global-to-local, align 4
  store i32 %v0_14a78, i32* %r2.global-to-local, align 4
  %v4_14a88 = call i32 @function_16808(i32 %v2_14a78, i32 1, i32* %v1_14a78)
  store i32 %v4_14a88, i32* %r0.global-to-local, align 4
  %v2_14a8c = icmp eq i32 %v4_14a88, 0
  store i1 %v2_14a8c, i1* @cpsr_z, align 1
  br i1 %v2_14a8c, label %dec_label_pc_14a94, label %dec_label_pc_14a78.dec_label_pc_14a78_crit_edge

dec_label_pc_14a78.dec_label_pc_14a78_crit_edge:  ; preds = %dec_label_pc_14a78
  %v0_14a78.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14a78

dec_label_pc_14a94:                               ; preds = %dec_label_pc_14a78
  %v0_14a50 = load i32, i32* @r7, align 4
  %v2_14a50 = icmp eq i32 %v0_14a50, 0
  br i1 %v2_14a50, label %dec_label_pc_1488c.loopexit, label %dec_label_pc_14a58

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14818
  %v1_14a98 = sub i32 0, %v0_14a98
  %v2_14a9c = and i32 %v0_14a98, %v1_14a98
  store i32 %v2_14a9c, i32* %r0.global-to-local, align 4
  %v3_14aac = mul i32 %v2_14a9c, 1088
  store i32 %v3_14aac, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aaa2.580 to i32), i32* %r3.global-to-local, align 4
  %v2_14ae0 = mul i32 %v2_14a9c, 124511785
  store i32 %v2_14ae0, i32* %r2.global-to-local, align 4
  %v4_14ae4 = udiv i32 %v2_14ae0, 134217728
  %v5_14ae4 = add i32 %v4_14ae4, ptrtoint (i32* @global_var_1aaa2.580 to i32)
  %v6_14ae4 = inttoptr i32 %v5_14ae4 to i8*
  %v7_14ae4 = load i8, i8* %v6_14ae4, align 1
  %v9_14ae4 = zext i8 %v7_14ae4 to i32
  br label %dec_label_pc_14874

dec_label_pc_14aec:                               ; preds = %dec_label_pc_14b24, %dec_label_pc_14b08
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v0_14af4 = load i32, i32* @r4, align 4
  %v2_14af4 = icmp eq i32 %v0_14af4, 0
  store i32 ptrtoint (i32* @global_var_23100.585 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_14af4, label %dec_label_pc_14960, label %dec_label_pc_14b04

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14aec
  %v3_14b04 = call i32 @function_16334(i32* nonnull @global_var_230fc.582, i32 ptrtoint (i32* @global_var_23100.585 to i32))
  store i32 %v3_14b04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b08

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14b24, %dec_label_pc_14b04, %dec_label_pc_14944
  %v2_14b08 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14b08, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14b08, i32* %r0.global-to-local, align 4
  %v4_14b18 = call i32 @function_16808(i32 %v2_14b08, i32 1, i32* nonnull @global_var_230fc.582)
  store i32 %v4_14b18, i32* %r0.global-to-local, align 4
  %v2_14b1c = icmp eq i32 %v4_14b18, 0
  store i1 %v2_14b1c, i1* @cpsr_z, align 1
  br i1 %v2_14b1c, label %dec_label_pc_14aec, label %dec_label_pc_14b24

dec_label_pc_14b24:                               ; preds = %dec_label_pc_14b08
  %v2_14b24 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14b24, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14b24, i32* %r0.global-to-local, align 4
  %v4_14b34 = call i32 @function_16808(i32 %v2_14b24, i32 1, i32* nonnull @global_var_230fc.582)
  store i32 %v4_14b34, i32* %r0.global-to-local, align 4
  %v2_14b38 = icmp eq i32 %v4_14b34, 0
  store i1 %v2_14b38, i1* @cpsr_z, align 1
  br i1 %v2_14b38, label %dec_label_pc_14aec, label %dec_label_pc_14b08

dec_label_pc_14b44:                               ; preds = %dec_label_pc_14798
  %v1_14b44 = add i32 %v0_147a4, 23
  %v1_14b48 = and i32 %v1_14b44, -16
  store i32 %v1_14b48, i32* %r3.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_14b48, 114688
  br i1 %tmp80, label %dec_label_pc_14dbc, label %dec_label_pc_14b58

dec_label_pc_14b58:                               ; preds = %dec_label_pc_14b44
  %v3_14b58 = udiv i32 %v1_14b44, 16
  store i32 %v3_14b58, i32* %r3.global-to-local, align 4
  %v1_14b5c = add nsw i32 %v3_14b58, -1
  store i32 %v1_14b5c, i32* @r0, align 4
  %tmp81 = icmp ult i32 %v1_14b5c, 33
  br i1 %tmp81, label %.thread43, label %dec_label_pc_14b6c

.thread43:                                        ; preds = %dec_label_pc_14b58
  store i32 %v1_14b5c, i32* @sb, align 4
  br label %dec_label_pc_147c8

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14b58
  %v0_14b6c = call i32 @function_1808c()
  %v1_14b74 = add i32 %v0_14b6c, 2097151
  %v3_14b78 = udiv i32 %v1_14b74, 2097152
  store i32 %v3_14b78, i32* %r0.global-to-local, align 4
  %v1_14b7c = add nsw i32 %v3_14b78, -496
  store i32 %v1_14b7c, i32* @sb, align 4
  br label %dec_label_pc_147c8

dec_label_pc_14b84:                               ; preds = %dec_label_pc_14a24
  store i32 %v0_14b88, i32* %ip.global-to-local, align 4
  %v2_14b88 = sub i32 %v1_14a28, %v0_14b88
  %v1_14b8c = or i32 %v2_14b88, 1
  store i32 %v1_14b8c, i32* @r3, align 4
  %v1_14b90 = load i32, i32* @r8, align 4
  %v2_14b90 = add i32 %v1_14b90, %v0_14b88
  store i32 %v2_14b90, i32* %r0.global-to-local, align 4
  %v1_14b94 = or i32 %v0_14b88, 1
  store i32 %v1_14b94, i32* @r2, align 4
  %v2_14b98 = add i32 %v2_14b90, 4
  %v3_14b98 = inttoptr i32 %v2_14b98 to i32*
  store i32 %v1_14b8c, i32* %v3_14b98, align 4
  %v0_14b9c = load i32, i32* @r2, align 4
  %v1_14b9c = load i32, i32* %ip.global-to-local, align 4
  %v2_14b9c = load i32, i32* @r8, align 4
  %v3_14b9c = add i32 %v2_14b9c, %v1_14b9c
  %v4_14b9c = inttoptr i32 %v3_14b9c to i32*
  store i32 %v0_14b9c, i32* %v4_14b9c, align 4
  %v0_14ba0 = load i32, i32* @r2, align 4
  %v1_14ba0 = load i32, i32* @r5, align 4
  %v2_14ba0 = add i32 %v1_14ba0, 4
  %v3_14ba0 = inttoptr i32 %v2_14ba0 to i32*
  store i32 %v0_14ba0, i32* %v3_14ba0, align 4
  %v0_14ba4 = load i32, i32* @r3, align 4
  %v1_14ba4 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ba4 = load i32, i32* @r8, align 4
  %v3_14ba4 = add i32 %v2_14ba4, %v1_14ba4
  %v4_14ba4 = inttoptr i32 %v3_14ba4 to i32*
  store i32 %v0_14ba4, i32* %v4_14ba4, align 4
  %v0_14ba8 = load i32, i32* %r0.global-to-local, align 4
  %v1_14ba8 = add i32 %v0_14ba8, 8
  store i32 %v1_14ba8, i32* %r0.global-to-local, align 4
  %v1_14bac = call i32 @function_1429c(i32 %v1_14ba8)
  store i32 %v1_14bac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a3c

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_148b4
  %v1_14bb4 = add i32 %v0_14bb4, -39
  %v3_14bb4 = sub i32 38, %v0_14bb4
  %v4_14bb4 = and i32 %v3_14bb4, %v0_14bb4
  %v5_14bb4 = icmp slt i32 %v4_14bb4, 0
  %v6_14bb4 = icmp slt i32 %v1_14bb4, 0
  %v7_14bb4 = icmp eq i32 %v0_14bb4, 39
  %v3_14bb8 = xor i1 %v6_14bb4, %v5_14bb4
  %v4_14bb8 = or i1 %v7_14bb4, %v3_14bb8
  br i1 %v4_14bb8, label %dec_label_pc_14c08, label %dec_label_pc_14bbc

dec_label_pc_14bbc:                               ; preds = %dec_label_pc_14bb4
  %v0_14bbc = load i32, i32* @sb, align 4
  %v1_14bbc = add i32 %v0_14bbc, 3
  store i32 %v1_14bbc, i32* %r3.global-to-local, align 4
  %v2_14bc0 = sub i32 %v1_14bbc, %v0_14bb4
  %v4_14bc0 = xor i32 %v1_14bbc, %v0_14bb4
  %v5_14bc0 = xor i32 %v2_14bc0, %v1_14bbc
  %v6_14bc0 = and i32 %v5_14bc0, %v4_14bc0
  %v7_14bc0 = icmp slt i32 %v6_14bc0, 0
  %v8_14bc0 = icmp slt i32 %v2_14bc0, 0
  %v9_14bc0 = icmp eq i32 %v1_14bbc, %v0_14bb4
  %v3_14bc4 = xor i1 %v8_14bc0, %v7_14bc0
  %v4_14bc4 = or i1 %v9_14bc0, %v3_14bc4
  br i1 %v4_14bc4, label %dec_label_pc_14bc8, label %dec_label_pc_14cd4

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14bbc
  %v1_14bc8 = add i32 %v7_14890, 4
  %v2_14bc8 = inttoptr i32 %v1_14bc8 to i32*
  %v3_14bc8 = load i32, i32* %v2_14bc8, align 4
  store i32 %v3_14bc8, i32* %r3.global-to-local, align 4
  store i32 %v0_14b88, i32* %r2.global-to-local, align 4
  %v1_14bd0 = and i32 %v3_14bc8, -2
  store i32 %v1_14bd0, i32* @r7, align 4
  %v2_14bd4 = sub i32 %v1_14bd0, %v0_14b88
  store i32 %v2_14bd4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bd8

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14cdc, %dec_label_pc_14bc8
  %v0_14bd8 = phi i32 [ %v2_14ce8, %dec_label_pc_14cdc ], [ %v2_14bd4, %dec_label_pc_14bc8 ]
  %v3_14bd8 = udiv i32 %v0_14bd8, 16
  store i32 %v3_14bd8, i32* %r3.global-to-local, align 4
  %v1_14bdc = add nsw i32 %v3_14bd8, -1
  store i32 %v1_14bdc, i32* @r0, align 4
  %tmp82 = icmp ult i32 %v1_14bdc, 33
  br i1 %tmp82, label %dec_label_pc_14c08, label %dec_label_pc_14be8

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14bd8
  %tmp83 = icmp ugt i32 %v1_14bdc, 7168
  br i1 %tmp83, label %.thread45, label %dec_label_pc_14bf4

.thread45:                                        ; preds = %dec_label_pc_14be8
  store i32 63, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c00

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14be8
  %v0_14bf4 = call i32 @function_1808c()
  %v3_14bf8 = udiv i32 %v0_14bf4, 2097152
  %v1_14bfc = add nsw i32 %v3_14bf8, -496
  store i32 %v1_14bfc, i32* %r0.global-to-local, align 4
  %v0_14c00.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_14c00

dec_label_pc_14c00:                               ; preds = %.thread45, %dec_label_pc_14bf4
  %v1_14c00 = phi i32 [ %v1_14bfc, %dec_label_pc_14bf4 ], [ 63, %.thread45 ]
  %v0_14c00 = phi i32 [ %v0_14c00.pre, %dec_label_pc_14bf4 ], [ %v0_14bb4, %.thread45 ]
  %v9_14c00 = icmp eq i32 %v0_14c00, %v1_14c00
  br i1 %v9_14c00, label %dec_label_pc_14d7c, label %dec_label_pc_14c00.dec_label_pc_14c08_crit_edge

dec_label_pc_14c00.dec_label_pc_14c08_crit_edge:  ; preds = %dec_label_pc_14c00
  %v0_14c08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %dec_label_pc_14c00.dec_label_pc_14c08_crit_edge, %dec_label_pc_14cd4, %dec_label_pc_14cdc, %dec_label_pc_14bd8, %dec_label_pc_14bb4
  %v1_14d20 = phi i32 [ %v0_14c00, %dec_label_pc_14c00.dec_label_pc_14c08_crit_edge ], [ %v0_14bb4, %dec_label_pc_14cd4 ], [ 63, %dec_label_pc_14cdc ], [ %v0_14bb4, %dec_label_pc_14bd8 ], [ %v0_14bb4, %dec_label_pc_14bb4 ]
  %v0_14c08 = phi i32 [ %v0_14c08.pre, %dec_label_pc_14c00.dec_label_pc_14c08_crit_edge ], [ %v7_14890, %dec_label_pc_14cd4 ], [ %v7_14890, %dec_label_pc_14cdc ], [ %v7_14890, %dec_label_pc_14bd8 ], [ %v7_14890, %dec_label_pc_14bb4 ]
  %v1_14c08 = add i32 %v0_14c08, 8
  store i32 %v1_14c08, i32* %r3.global-to-local, align 4
  %v1_14c0c = inttoptr i32 %v1_14c08 to i32*
  %v2_14c0c = load i32, i32* %v1_14c0c, align 4
  store i32 %v2_14c0c, i32* %r3.global-to-local, align 4
  %v3_14c0c = add i32 %v0_14c08, 12
  %v4_14c0c = inttoptr i32 %v3_14c0c to i32*
  %v5_14c0c = load i32, i32* %v4_14c0c, align 4
  store i32 %v5_14c0c, i32* %ip.global-to-local, align 4
  %v9_14c10 = icmp eq i32 %v5_14c0c, %v2_14c0c
  br i1 %v9_14c10, label %dec_label_pc_14d0c, label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14c08, %dec_label_pc_14d70
  %v1_14c20 = phi i32 [ %v5_14c0c, %dec_label_pc_14c08 ], [ %v5_14d74, %dec_label_pc_14d70 ]
  %v0_14c20 = phi i32 [ %v2_14c0c, %dec_label_pc_14c08 ], [ %v2_14d74, %dec_label_pc_14d70 ]
  %v0_14c18 = phi i32 [ %v0_14c08, %dec_label_pc_14c08 ], [ %v0_14d70, %dec_label_pc_14d70 ]
  %v1_14c18 = add i32 %v0_14c18, 4
  %v2_14c18 = inttoptr i32 %v1_14c18 to i32*
  %v3_14c18 = load i32, i32* %v2_14c18, align 4
  %v1_14c1c = or i32 %v3_14c18, 1
  store i32 %v1_14c1c, i32* %r2.global-to-local, align 4
  %v2_14c20 = add i32 %v1_14c20, 8
  %v3_14c20 = inttoptr i32 %v2_14c20 to i32*
  store i32 %v0_14c20, i32* %v3_14c20, align 4
  %v0_14c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c24 = and i32 %v0_14c24, -2
  store i32 %v1_14c24, i32* @r0, align 4
  %v1_14c28 = load i32, i32* @r5, align 4
  %v2_14c28 = add i32 %v1_14c28, %v1_14c24
  %v3_14c28 = inttoptr i32 %v2_14c28 to i32*
  %v4_14c28 = load i32, i32* %v3_14c28, align 4
  store i32 %v4_14c28, i32* %r3.global-to-local, align 4
  %v1_14c2c = add i32 %v1_14c28, 8
  %v2_14c2c = inttoptr i32 %v1_14c2c to i32*
  %v3_14c2c = load i32, i32* %v2_14c2c, align 4
  store i32 %v3_14c2c, i32* %r1.global-to-local, align 4
  %v1_14c30 = or i32 %v4_14c28, 1
  store i32 %v1_14c30, i32* %r3.global-to-local, align 4
  %v0_14c34 = load i32, i32* %ip.global-to-local, align 4
  %v2_14c34 = add i32 %v3_14c2c, 12
  %v3_14c34 = inttoptr i32 %v2_14c34 to i32*
  store i32 %v0_14c34, i32* %v3_14c34, align 4
  %v0_14c38 = load i32, i32* %r3.global-to-local, align 4
  %v1_14c38 = load i32, i32* @r0, align 4
  %v2_14c38 = load i32, i32* @r5, align 4
  %v3_14c38 = add i32 %v2_14c38, %v1_14c38
  %v4_14c38 = inttoptr i32 %v3_14c38 to i32*
  store i32 %v0_14c38, i32* %v4_14c38, align 4
  %v0_14c3c = load i32, i32* %r2.global-to-local, align 4
  %v1_14c3c = load i32, i32* @r5, align 4
  %v2_14c3c = add i32 %v1_14c3c, 4
  %v3_14c3c = inttoptr i32 %v2_14c3c to i32*
  store i32 %v0_14c3c, i32* %v3_14c3c, align 4
  %v0_14c40 = load i32, i32* @r5, align 4
  store i32 %v0_14c40, i32* @r8, align 4
  br label %dec_label_pc_14c44

dec_label_pc_14c44:                               ; preds = %dec_label_pc_14d7c, %dec_label_pc_14c18
  %v0_14c44 = load i32, i32* @r6, align 4
  %v1_14c44 = add i32 %v0_14c44, 8
  store i32 %v1_14c44, i32* %r2.global-to-local, align 4
  %v1_14c48 = load i32, i32* @sl, align 4
  %v2_14c48 = add i32 %v1_14c48, %v1_14c44
  %v3_14c48 = inttoptr i32 %v2_14c48 to i32*
  %v4_14c48 = load i32, i32* %v3_14c48, align 4
  store i32 %v4_14c48, i32* %r3.global-to-local, align 4
  %v2_14c4c = icmp eq i32 %v4_14c48, 0
  store i1 %v2_14c4c, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_14c48, i32* @r4, align 4
  br i1 %v2_14c4c, label %dec_label_pc_14a24, label %dec_label_pc_14c5c

dec_label_pc_14c5c:                               ; preds = %dec_label_pc_14c44
  %v0_14c5c = call i32 @function_167b4()
  store i32 %v0_14c5c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14c64 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c64 = load i32, i32* %r1.global-to-local, align 4
  %v3_14c64 = add i32 %v2_14c64, %v1_14c64
  %v4_14c64 = inttoptr i32 %v3_14c64 to i32*
  store i32 0, i32* %v4_14c64, align 4
  %v0_14c68 = call i32 @function_167b4()
  store i32 %v0_14c68, i32* %r0.global-to-local, align 4
  %v0_14c6c = load i32, i32* @r6, align 4
  %v1_14c6c = add i32 %v0_14c6c, 12
  store i32 %v1_14c6c, i32* %r3.global-to-local, align 4
  %v1_14c70 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c70 = add i32 %v1_14c70, %v1_14c6c
  %v3_14c70 = inttoptr i32 %v2_14c70 to i32*
  %v4_14c70 = load i32, i32* %v3_14c70, align 4
  store i32 %v4_14c70, i32* %r2.global-to-local, align 4
  %v2_14c74 = icmp eq i32 %v4_14c70, 0
  br i1 %v2_14c74, label %dec_label_pc_14a24, label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c5c
  store i32 240, i32* @r7, align 4
  %v0_14c80 = load i32, i32* @r4, align 4
  store i32 %v0_14c80, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_14c94 = icmp eq i32 %v0_14c80, -38
  br i1 %v4_14c94, label %dec_label_pc_14c98, label %dec_label_pc_14a24

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14c7c
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14a24

dec_label_pc_14ca8:                               ; preds = %dec_label_pc_149c4
  store i32 240, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  %v0_14cb4 = load i32, i32* @r4, align 4
  store i32 %v0_14cb4, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32 -38), label %dec_label_pc_149e0, label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14ca8
  store i32 %v0_14cb4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149e0

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14bbc
  %v7_14cd4 = icmp eq i32 %v0_14bb4, 63
  br i1 %v7_14cd4, label %dec_label_pc_14cdc, label %dec_label_pc_14c08

dec_label_pc_14cdc:                               ; preds = %dec_label_pc_14cd4
  %v1_14cdc = add i32 %v7_14890, 4
  %v2_14cdc = inttoptr i32 %v1_14cdc to i32*
  %v3_14cdc = load i32, i32* %v2_14cdc, align 4
  store i32 %v3_14cdc, i32* %r3.global-to-local, align 4
  store i32 %v0_14b88, i32* %r1.global-to-local, align 4
  %v1_14ce4 = and i32 %v3_14cdc, -2
  store i32 %v1_14ce4, i32* @r7, align 4
  %v2_14ce8 = sub i32 %v1_14ce4, %v0_14b88
  store i32 %v2_14ce8, i32* %r4.global-to-local, align 4
  %tmp84 = icmp ult i32 %v2_14ce8, 114689
  br i1 %tmp84, label %dec_label_pc_14c08, label %dec_label_pc_14bd8

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14960
  %v2_14cf8 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14cf8, i32* @r3, align 4
  %v2_14cfc = icmp eq i32 %v2_14cf8, 0
  store i1 %v2_14cfc, i1* @cpsr_z, align 1
  br i1 %v2_14cfc, label %dec_label_pc_14d04, label %dec_label_pc_14e30

dec_label_pc_14d04:                               ; preds = %.thread14, %dec_label_pc_14cf8, %dec_label_pc_14e48, %dec_label_pc_14e30
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_14a40

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14c08
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_14d10 = sub i32 32, %v1_14d20
  store i32 %v1_14d10, i32* %r1.global-to-local, align 4
  %v7_14d18 = lshr i32 1, %v1_14d10
  store i32 %v7_14d18, i32* %r4.global-to-local, align 4
  %v1_14d1c = add i32 %v1_14d20, -32
  store i32 %v1_14d1c, i32* %r0.global-to-local, align 4
  %v6_14d1c = icmp slt i32 %v1_14d1c, 0
  %v7_14d1c = icmp eq i32 %v1_14d20, 32
  store i1 %v7_14d1c, i1* @cpsr_z, align 1
  %v6_14d20 = shl i32 1, %v1_14d20
  store i32 %v6_14d20, i32* %r3.global-to-local, align 4
  br i1 %v6_14d1c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_14d0c
  %v7_14d24 = shl i32 1, %v1_14d1c
  store i32 %v7_14d24, i32* %r4.global-to-local, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_14d0c, %bb66
  %v0_14d30 = phi i32 [ %v7_14d18, %dec_label_pc_14d0c ], [ %v7_14d24, %bb66 ]
  %v1_14d28 = sub i32 -1, %v6_14d20
  store i32 %v1_14d28, i32* @r7, align 4
  %v1_14d30 = sub i32 -1, %v0_14d30
  store i32 %v1_14d30, i32* @r8, align 4
  store i32 %v1_14d28, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d38.dec_label_pc_14d38_crit_edge, %bb67
  %v1_14d40 = phi i32 [ %v1_14d40.pre, %dec_label_pc_14d38.dec_label_pc_14d38_crit_edge ], [ %v1_14d28, %bb67 ]
  %v2_14d38 = load i32, i32* @global_var_23108.564, align 4
  store i32 %v2_14d38, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14d40 = and i32 %v2_14d38, %v1_14d40
  store i32 %v2_14d40, i32* %r1.global-to-local, align 4
  %v4_14d44 = call i32 @function_16808(i32 %v2_14d38, i32 %v2_14d40, i32* nonnull @global_var_23108.564)
  store i32 %v4_14d44, i32* %r0.global-to-local, align 4
  %v2_14d48 = icmp eq i32 %v4_14d44, 0
  store i1 %v2_14d48, i1* @cpsr_z, align 1
  br i1 %v2_14d48, label %dec_label_pc_14d50, label %dec_label_pc_14d38.dec_label_pc_14d38_crit_edge

dec_label_pc_14d38.dec_label_pc_14d38_crit_edge:  ; preds = %dec_label_pc_14d38
  %v1_14d40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d38

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14d38
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* @sb, align 4
  %v0_14d54 = load i32, i32* @r8, align 4
  store i32 %v0_14d54, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d58

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d58.dec_label_pc_14d58_crit_edge, %dec_label_pc_14d50
  %v1_14d60 = phi i32 [ %v1_14d60.pre, %dec_label_pc_14d58.dec_label_pc_14d58_crit_edge ], [ %v0_14d54, %dec_label_pc_14d50 ]
  %v2_14d58 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v2_14d58, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_14d60 = and i32 %v2_14d58, %v1_14d60
  store i32 %v2_14d60, i32* %r1.global-to-local, align 4
  %v4_14d64 = call i32 @function_16808(i32 %v2_14d58, i32 %v2_14d60, i32* nonnull @global_var_2310c.566)
  store i32 %v4_14d64, i32* %r0.global-to-local, align 4
  %v2_14d68 = icmp eq i32 %v4_14d64, 0
  store i1 %v2_14d68, i1* @cpsr_z, align 1
  br i1 %v2_14d68, label %dec_label_pc_14d70, label %dec_label_pc_14d58.dec_label_pc_14d58_crit_edge

dec_label_pc_14d58.dec_label_pc_14d58_crit_edge:  ; preds = %dec_label_pc_14d58
  %v1_14d60.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d58

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d58
  %v0_14d70 = load i32, i32* @r5, align 4
  %v1_14d70 = add i32 %v0_14d70, 8
  store i32 %v1_14d70, i32* %r3.global-to-local, align 4
  %v1_14d74 = inttoptr i32 %v1_14d70 to i32*
  %v2_14d74 = load i32, i32* %v1_14d74, align 4
  store i32 %v2_14d74, i32* %r3.global-to-local, align 4
  %v3_14d74 = add i32 %v0_14d70, 12
  %v4_14d74 = inttoptr i32 %v3_14d74 to i32*
  %v5_14d74 = load i32, i32* %v4_14d74, align 4
  store i32 %v5_14d74, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14c18

dec_label_pc_14d7c:                               ; preds = %dec_label_pc_14c00
  store i32 %v0_14b88, i32* %ip.global-to-local, align 4
  %v0_14d80 = load i32, i32* @r5, align 4
  %v1_14d80 = add i32 %v0_14d80, 12
  %v2_14d80 = inttoptr i32 %v1_14d80 to i32*
  %v3_14d80 = load i32, i32* %v2_14d80, align 4
  store i32 %v3_14d80, i32* @r0, align 4
  %v1_14d84 = add i32 %v0_14d80, 8
  %v2_14d84 = inttoptr i32 %v1_14d84 to i32*
  %v3_14d84 = load i32, i32* %v2_14d84, align 4
  store i32 %v3_14d84, i32* %r2.global-to-local, align 4
  %v2_14d88 = add i32 %v0_14d80, %v0_14b88
  store i32 %v2_14d88, i32* %r3.global-to-local, align 4
  %v2_14d8c = add i32 %v2_14d88, 8
  %v3_14d8c = inttoptr i32 %v2_14d8c to i32*
  store i32 %v3_14d84, i32* %v3_14d8c, align 4
  %v0_14d90 = load i32, i32* %r3.global-to-local, align 4
  %v1_14d90 = load i32, i32* @r0, align 4
  %v2_14d90 = add i32 %v1_14d90, 8
  %v3_14d90 = inttoptr i32 %v2_14d90 to i32*
  store i32 %v0_14d90, i32* %v3_14d90, align 4
  %v0_14d94 = load i32, i32* %r3.global-to-local, align 4
  %v1_14d94 = add i32 %v0_14d94, 8
  %v2_14d94 = inttoptr i32 %v1_14d94 to i32*
  %v3_14d94 = load i32, i32* %v2_14d94, align 4
  store i32 %v3_14d94, i32* %r1.global-to-local, align 4
  %v0_14d98 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d98 = or i32 %v0_14d98, 1
  store i32 %v1_14d98, i32* %r2.global-to-local, align 4
  %v0_14d9c = load i32, i32* @r5, align 4
  store i32 %v0_14d9c, i32* @r8, align 4
  %v0_14da0 = load i32, i32* %r4.global-to-local, align 4
  %v2_14da0 = add i32 %v0_14d94, 4
  %v3_14da0 = inttoptr i32 %v2_14da0 to i32*
  store i32 %v0_14da0, i32* %v3_14da0, align 4
  %v0_14da4 = load i32, i32* @r0, align 4
  %v1_14da4 = load i32, i32* %r3.global-to-local, align 4
  %v2_14da4 = add i32 %v1_14da4, 12
  %v3_14da4 = inttoptr i32 %v2_14da4 to i32*
  store i32 %v0_14da4, i32* %v3_14da4, align 4
  %v0_14da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14da8 = load i32, i32* @r5, align 4
  %v2_14da8 = load i32, i32* %ip.global-to-local, align 4
  %v3_14da8 = add i32 %v2_14da8, %v1_14da8
  %v4_14da8 = inttoptr i32 %v3_14da8 to i32*
  store i32 %v0_14da8, i32* %v4_14da8, align 4
  %v0_14dac = load i32, i32* %r2.global-to-local, align 4
  %v1_14dac = load i32, i32* @r5, align 4
  %v2_14dac = add i32 %v1_14dac, 4
  %v3_14dac = inttoptr i32 %v2_14dac to i32*
  store i32 %v0_14dac, i32* %v3_14dac, align 4
  %v0_14db0 = load i32, i32* %r3.global-to-local, align 4
  %v1_14db0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14db0 = add i32 %v1_14db0, 12
  %v3_14db0 = inttoptr i32 %v2_14db0 to i32*
  store i32 %v0_14db0, i32* %v3_14db0, align 4
  %v0_14db4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14db4 = load i32, i32* @r7, align 4
  %v2_14db4 = load i32, i32* @r5, align 4
  %v3_14db4 = add i32 %v2_14db4, %v1_14db4
  %v4_14db4 = inttoptr i32 %v3_14db4 to i32*
  store i32 %v0_14db4, i32* %v4_14db4, align 4
  br label %dec_label_pc_14c44

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14b44
  %v1_14dc0 = add i32 %v1_14b48, 4103
  %v1_14dc8 = and i32 %v1_14dc0, -4096
  store i32 %v1_14dc8, i32* @r6, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 %v1_14dc8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_14df4 = call i32 @function_15114(i32 0, i32 %v1_14dc8, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_14df4, i32* %r0.global-to-local, align 4
  %v3_14df8 = icmp eq i32 %v7_14df4, -1
  %v8_14df8 = icmp eq i32 %v7_14df4, -1
  br i1 %v8_14df8, label %.thread14, label %bb68

bb68:                                             ; preds = %dec_label_pc_14dbc
  %v2_14dfc = add i32 %v7_14df4, 8
  store i32 %v2_14dfc, i32* @r3, align 4
  %v1_14e00 = load i32, i32* @r6, align 4
  %v2_14e00 = add i32 %v1_14e00, -8
  store i32 %v2_14e00, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_14e08 = add i32 %v7_14df4, 16
  store i32 %v2_14e08, i32* @ip, align 4
  %v4_14e0c = inttoptr i32 %v2_14dfc to i32*
  store i32 8, i32* %v4_14e0c, align 4
  %v1_14e10 = load i32, i32* %r1.global-to-local, align 4
  %v2_14e10 = load i32, i32* @r3, align 4
  %v3_14e10 = add i32 %v2_14e10, 4
  %v4_14e10 = inttoptr i32 %v3_14e10 to i32*
  store i32 %v1_14e10, i32* %v4_14e10, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14dbc, %bb68
  br i1 %v3_14df8, label %dec_label_pc_14d04, label %dec_label_pc_14a40

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_147b4
  %v0_14e1c = call i32 @function_139e8()
  store i32 %v0_14e1c, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* @ip, align 4
  %v2_14e28 = inttoptr i32 %v0_14e1c to i32*
  store i32 12, i32* %v2_14e28, align 4
  br label %dec_label_pc_14a40

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14cf8
  %v0_14e30 = call i32 @function_167b4()
  store i32 %v0_14e30, i32* @r0, align 4
  %v0_14e34 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e34 = load i32, i32* @r6, align 4
  %v2_14e34 = inttoptr i32 %v1_14e34 to i32*
  store i32 %v0_14e34, i32* %v2_14e34, align 4
  %v0_14e38 = call i32 @function_167b4()
  store i32 %v0_14e38, i32* %r0.global-to-local, align 4
  %v3_14e3c = load i32, i32* @global_var_23100.585, align 4
  store i32 %v3_14e3c, i32* @r3, align 4
  %v2_14e40 = icmp eq i32 %v3_14e3c, 0
  br i1 %v2_14e40, label %dec_label_pc_14d04, label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e30
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32 -38), label %dec_label_pc_14d04, label %dec_label_pc_14e64

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e48
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_14e70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14e70, i32* @ip, align 4
  br label %dec_label_pc_14a40

; uselistorder directives
  uselistorder i32 %v7_14df4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14d74, { 1, 0 }
  uselistorder i32 %v2_14d74, { 1, 0 }
  uselistorder i32 %v0_14d70, { 1, 2, 0 }
  uselistorder i32 %v2_14d58, { 1, 0, 2 }
  uselistorder i32 %v2_14d38, { 1, 0, 2 }
  uselistorder i32 %v1_14d28, { 2, 1, 0 }
  uselistorder i32 %v1_14d1c, { 0, 2, 1 }
  uselistorder i32 %v2_14ce8, { 0, 2, 1 }
  uselistorder i32 %v1_14c28, { 1, 0 }
  uselistorder i32 %v0_14c08, { 0, 2, 1 }
  uselistorder i32 %v3_14bd8, { 1, 0 }
  uselistorder i32 %v2_14bc0, { 1, 0 }
  uselistorder i32 %v1_14bbc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_14b7c, { 1, 0 }
  uselistorder i32 %v3_14b78, { 1, 0 }
  uselistorder i32 %v1_14b5c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_14b58, { 1, 0 }
  uselistorder i32 %v1_14b48, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_14a78, { 1, 0 }
  uselistorder i32 %v1_149ec, { 0, 2, 1, 3 }
  uselistorder i32 %v2_149a4, { 1, 0, 2 }
  uselistorder i32 %v2_14964, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 %v2_14938, { 0, 2, 1 }
  uselistorder i32 %v2_14934, { 0, 2, 1 }
  uselistorder i32 %v4_1489c, { 1, 0 }
  uselistorder i32 %v7_14890, { 5, 0, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i32 %v4_14890, { 0, 2, 1 }
  uselistorder i32 %v0_14bb4, { 5, 8, 7, 6, 9, 3, 11, 4, 0, 10, 2, 1, 12 }
  uselistorder i32 %v1_14884, { 0, 2, 1 }
  uselistorder i32 %v3_14878, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_14a98, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14820, { 1, 0 }
  uselistorder i32 %v6_147e8, { 1, 2, 0 }
  uselistorder i32 %v1_147e4, { 1, 2, 0 }
  uselistorder i32 %v0_14b88, { 0, 7, 6, 5, 9, 8, 2, 1, 3, 10, 12, 11, 4, 13 }
  uselistorder i32 %v1_147e0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 12, 13, 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 18 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 46 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 26, 20, 22, 21, 23, 25, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 6, 8, 7, 15, 9, 10, 11, 12, 14, 13, 16, 17, 18, 23, 19, 20, 21, 22, 25, 24, 30, 28, 27, 26, 29, 35, 33, 32, 31, 34, 1, 36, 37, 38, 40, 39, 41, 42, 43 }
  uselistorder i32 38, { 3, 4, 5, 8, 6, 7, 0, 9, 1, 10, 2, 11 }
  uselistorder i32 ()* @function_1808c, { 4, 1, 2, 3, 0 }
  uselistorder i32 (i32*)* @function_13d7c, { 1, 0 }
  uselistorder i32* @global_var_230fc.582, { 3, 1, 4, 2, 5, 0, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_230fc.582 to i32), { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8), { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 134217728, { 0, 1, 4, 2, 3 }
  uselistorder i32 124511785, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1aaa2.580 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2310c.566, { 1, 5, 6, 7, 0, 2, 8, 9, 3, 10, 4, 11, 12 }
  uselistorder i32* @global_var_23108.564, { 3, 7, 8, 9, 0, 4, 2, 1, 10, 5, 11, 6, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_23108.564 to i32), { 23, 24, 25, 10, 3, 26, 27, 4, 28, 18, 12, 29, 20, 30, 31, 32, 2, 33, 21, 34, 11, 35, 13, 22, 36, 5, 37, 38, 39, 0, 14, 6, 40, 15, 7, 41, 42, 43, 1, 16, 19, 8, 44, 17, 9, 45 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_14d04, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14c18, { 1, 0 }
  uselistorder label %dec_label_pc_14c08, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_14c00, { 1, 0 }
  uselistorder label %dec_label_pc_14a70, { 1, 0 }
  uselistorder label %dec_label_pc_14a40, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_14a3c, { 1, 0 }
  uselistorder label %dec_label_pc_14a24, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_149e0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14998, { 1, 0 }
  uselistorder label %dec_label_pc_14944, { 2, 1, 0 }
  uselistorder label %dec_label_pc_148c8, { 1, 0 }
  uselistorder label %dec_label_pc_14818, { 1, 0 }
  uselistorder label %dec_label_pc_14818.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_147fc.loopexit, { 2, 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_147c8, { 2, 0, 1 }
}

define i32 @function_14e90(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e90:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14e98 = call i32 @function_14798()
  %v2_14e9c = icmp eq i32 %v0_14e98, 0
  br i1 %v2_14e9c, label %dec_label_pc_14edc, label %dec_label_pc_14ea4

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14e90
  %v1_14ea4 = add i32 %v0_14e98, -4
  %v2_14ea4 = inttoptr i32 %v1_14ea4 to i32*
  %v3_14ea4 = load i32, i32* %v2_14ea4, align 4
  %v1_14ea8 = urem i32 %v3_14ea4, 2
  %v2_14ea8 = icmp eq i32 %v1_14ea8, 0
  br i1 %v2_14ea8, label %dec_label_pc_14edc, label %dec_label_pc_14eb0

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14ea4
  %v0_14eb0 = load i32, i32* @r4, align 4
  %v1_14eb0 = add i32 %v0_14eb0, 3
  %v3_14eb4 = udiv i32 %v1_14eb0, 4
  store i32 %v3_14eb4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_14eb0, 4
  br i1 %tmp, label %dec_label_pc_14edc, label %dec_label_pc_14ebc

dec_label_pc_14ebc:                               ; preds = %dec_label_pc_14eb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ec0

dec_label_pc_14ec0:                               ; preds = %.thread, %dec_label_pc_14ebc
  %v0_14ed02 = phi i32 [ %v1_14ed0, %.thread ], [ %v3_14eb4, %dec_label_pc_14ebc ]
  %v2_14ecc = phi i32 [ %v1_14ed4, %.thread ], [ 0, %dec_label_pc_14ebc ]
  %v2_14ec0 = add i32 %v2_14ecc, %v0_14e98
  %v3_14ec0 = inttoptr i32 %v2_14ec0 to i32*
  %v4_14ec0 = load i32, i32* %v3_14ec0, align 4
  %v2_14ec4 = icmp eq i32 %v4_14ec0, 0
  br i1 %v2_14ec4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14ec0
  store i32 0, i32* %v3_14ec0, align 4
  %v0_14ed0.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_14ed4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14ec0, %bb
  %v0_14ed4 = phi i32 [ %v2_14ecc, %dec_label_pc_14ec0 ], [ %v0_14ed4.pre, %bb ]
  %v0_14ed0 = phi i32 [ %v0_14ed02, %dec_label_pc_14ec0 ], [ %v0_14ed0.pre, %bb ]
  %v1_14ed0 = add i32 %v0_14ed0, -1
  store i32 %v1_14ed0, i32* %r2.global-to-local, align 4
  %v7_14ed0 = icmp eq i32 %v0_14ed0, 1
  %v1_14ed4 = add i32 %v0_14ed4, 4
  store i32 %v1_14ed4, i32* %r1.global-to-local, align 4
  br i1 %v7_14ed0, label %dec_label_pc_14edc.loopexit, label %dec_label_pc_14ec0

dec_label_pc_14edc.loopexit:                      ; preds = %.thread
  br label %dec_label_pc_14edc

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14edc.loopexit, %dec_label_pc_14eb0, %dec_label_pc_14ea4, %dec_label_pc_14e90
  ret i32 %v0_14e98

; uselistorder directives
  uselistorder i32 %v1_14ed4, { 1, 0 }
  uselistorder i32 %v1_14ed0, { 1, 0 }
  uselistorder i32 %v2_14ecc, { 1, 0 }
  uselistorder i32 %v3_14eb4, { 1, 0 }
  uselistorder i32 %v0_14e98, { 2, 0, 1, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14ee4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14ee4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_14ee4 = load i32, i32* @r4, align 4
  store i32 %v3_14ee4, i32* %stack_var_-32, align 4
  %v6_14ee4 = load i32, i32* @r5, align 4
  %v9_14ee4 = load i32, i32* @r6, align 4
  %v12_14ee4 = load i32, i32* @r7, align 4
  %v15_14ee4 = load i32, i32* @r8, align 4
  %v18_14ee4 = load i32, i32* @sb, align 4
  %v21_14ee4 = load i32, i32* @sl, align 4
  %v24_14ee4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_14ee8 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @r0, align 4
  br i1 %v2_14ee8, label %dec_label_pc_15080, label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ee4
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v1_14efc = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_14efc, 2147479536
  br i1 %tmp, label %.thread, label %dec_label_pc_14f10

.thread:                                          ; preds = %dec_label_pc_14ef4
  %v5_14f04 = add i32 %arg2, 23
  store i32 %v5_14f04, i32* %r3.global-to-local, align 4
  %v5_14f08 = and i32 %v5_14f04, -16
  br label %dec_label_pc_14f1c

dec_label_pc_14f10:                               ; preds = %dec_label_pc_14ef4
  %v2_14f10 = icmp eq i32 %arg2, 0
  br i1 %v2_14f10, label %dec_label_pc_14f1c, label %dec_label_pc_150ac

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f10, %.thread
  %v0_15014 = phi i32 [ %v5_14f08, %.thread ], [ 16, %dec_label_pc_14f10 ]
  store i32 %v0_15014, i32* @r5, align 4
  %v1_14f1c = add i32 %arg1, -8
  store i32 %v1_14f1c, i32* @r4, align 4
  %v1_14f20 = add i32 %arg1, -4
  %v2_14f20 = inttoptr i32 %v1_14f20 to i32*
  %v3_14f20 = load i32, i32* %v2_14f20, align 4
  %v1_14f24 = urem i32 %v3_14f20, 2
  store i32 %v1_14f24, i32* %r3.global-to-local, align 4
  %v2_14f24 = icmp eq i32 %v1_14f24, 0
  %v1_14f28 = and i32 %v3_14f20, -2
  store i32 %v1_14f28, i32* @r6, align 4
  br i1 %v2_14f24, label %dec_label_pc_14f30, label %dec_label_pc_14fa0

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f1c
  %v2_14f30 = inttoptr i32 %v1_14f1c to i32*
  %v3_14f30 = load i32, i32* %v2_14f30, align 4
  store i32 %v3_14f30, i32* @r7, align 4
  %v1_14f34 = urem i32 %v3_14f30, 2
  %v2_14f34 = icmp eq i32 %v1_14f34, 0
  %v2_14f38 = add i32 %v3_14f30, %v0_15014
  store i32 %v2_14f38, i32* @r8, align 4
  br i1 %v2_14f34, label %bb34, label %bb33

bb33:                                             ; preds = %dec_label_pc_14f30
  call void @llvm.trap()
  unreachable

bb34:                                             ; preds = %dec_label_pc_14f30
  %v3_14f44 = icmp ult i32 %v2_14f38, 4094
  br i1 %v3_14f44, label %dec_label_pc_15014, label %dec_label_pc_14f48

dec_label_pc_14f48:                               ; preds = %dec_label_pc_15014.dec_label_pc_14f48_crit_edge, %bb34
  %v1_14f54 = phi i32 [ %v1_14f54.pre, %dec_label_pc_15014.dec_label_pc_14f48_crit_edge ], [ %v3_14f30, %bb34 ]
  %v0_14f54 = phi i32 [ %v0_14f54.pre, %dec_label_pc_15014.dec_label_pc_14f48_crit_edge ], [ %v1_14f28, %bb34 ]
  %v0_14f48 = phi i32 [ %v0_14f48.pre, %dec_label_pc_15014.dec_label_pc_14f48_crit_edge ], [ %v2_14f38, %bb34 ]
  %v1_14f4c = add i32 %v0_14f48, 4095
  store i32 %v1_14f4c, i32* %r3.global-to-local, align 4
  %v2_14f54 = add i32 %v1_14f54, %v0_14f54
  store i32 %v2_14f54, i32* %r6.global-to-local, align 4
  %v1_14f58 = and i32 %v1_14f4c, -4096
  store i32 %v1_14f58, i32* %r5.global-to-local, align 4
  %v9_14f5c = icmp eq i32 %v2_14f54, %v1_14f58
  br i1 %v9_14f5c, label %bb37, label %dec_label_pc_14f64

dec_label_pc_14f64:                               ; preds = %dec_label_pc_14f48
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v1_14f58, i32* @r2, align 4
  %v1_14f6c = load i32, i32* @r4, align 4
  %v2_14f6c = sub i32 %v1_14f6c, %v1_14f54
  store i32 %v2_14f6c, i32* @r0, align 4
  store i32 %v2_14f54, i32* %r1.global-to-local, align 4
  %v4_14f74 = call i32 @function_151d4(i32 %v2_14f6c, i32 %v2_14f54, i32 %v1_14f58, i32 1)
  store i32 %v4_14f74, i32* %r0.global-to-local, align 4
  %v3_14f78 = icmp eq i32 %v4_14f74, -1
  %v8_14f78 = icmp eq i32 %v4_14f74, -1
  br i1 %v8_14f78, label %.thread3, label %bb35

bb35:                                             ; preds = %dec_label_pc_14f64
  %v1_14f7c = load i32, i32* @r7, align 4
  %v3_14f7c = add i32 %v1_14f7c, %v4_14f74
  store i32 %v3_14f7c, i32* %r3.global-to-local, align 4
  %v2_14f80 = load i32, i32* %r5.global-to-local, align 4
  %v3_14f80 = sub i32 %v2_14f80, %v1_14f7c
  %v2_14f84 = add i32 %v3_14f7c, 8
  store i32 %v2_14f84, i32* @sb, align 4
  %v3_14f88 = add i32 %v3_14f7c, 4
  %v4_14f88 = inttoptr i32 %v3_14f88 to i32*
  store i32 %v3_14f80, i32* %v4_14f88, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14f64, %bb35
  br i1 %v3_14f78, label %dec_label_pc_14f90, label %dec_label_pc_14fdc

dec_label_pc_14f90:                               ; preds = %.thread3
  %v0_14f90 = load i32, i32* %r6.global-to-local, align 4
  %v1_14f90 = load i32, i32* %r5.global-to-local, align 4
  %tmp41 = icmp ugt i32 %v0_14f90, %v1_14f90
  br i1 %tmp41, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_14f90
  store i32 0, i32* @sl, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_14f90, %dec_label_pc_14f48, %bb36
  %v0_14f98 = load i32, i32* @sl, align 4
  store i32 %v0_14f98, i32* @sb, align 4
  br label %dec_label_pc_14fdc

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f1c
  %v2_14fa0 = add i32 %v1_14f28, %v1_14f1c
  %v3_14fa0 = inttoptr i32 %v2_14fa0 to i32*
  %v4_14fa0 = load i32, i32* %v3_14fa0, align 4
  store i32 %v4_14fa0, i32* %r3.global-to-local, align 4
  %v9_14fa4 = icmp eq i32 %v3_14f20, %v4_14fa0
  br i1 %v9_14fa4, label %.thread4, label %bb38

bb38:                                             ; preds = %dec_label_pc_14fa0
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_14fa0
  %v3_14fb0 = icmp ult i32 %v1_14f28, %v0_15014
  br i1 %v3_14fb0, label %dec_label_pc_1503c, label %.thread9

.thread9:                                         ; preds = %.thread4
  %v2_14fb4 = or i32 %v3_14f20, 1
  store i32 %v2_14fb4, i32* %r3.global-to-local, align 4
  store i32 %v2_14fa0, i32* @r7, align 4
  store i32 %v2_14fb4, i32* %v3_14fa0, align 4
  %v1_14fc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_14fc0 = load i32, i32* @r4, align 4
  %v3_14fc0 = add i32 %v2_14fc0, 4
  %v4_14fc0 = inttoptr i32 %v3_14fc0 to i32*
  store i32 %v1_14fc0, i32* %v4_14fc0, align 4
  br label %dec_label_pc_14fc8

dec_label_pc_14fc8:                               ; preds = %dec_label_pc_15088, %.thread9
  %v0_14fc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_14fc8 = and i32 %v0_14fc8, -2
  store i32 %v1_14fc8, i32* %r1.global-to-local, align 4
  %v1_14fcc = add i32 %v1_14fc8, -16
  %v1_14fd0 = load i32, i32* @r5, align 4
  %tmp42 = icmp ugt i32 %v1_14fcc, %v1_14fd0
  br i1 %tmp42, label %dec_label_pc_14fe8, label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fc8, %dec_label_pc_14fe8
  %v0_14fd8 = load i32, i32* @r4, align 4
  %v1_14fd8 = add i32 %v0_14fd8, 8
  store i32 %v1_14fd8, i32* @sb, align 4
  br label %dec_label_pc_14fdc

dec_label_pc_14fdc:                               ; preds = %.thread3, %dec_label_pc_15058, %dec_label_pc_15024, %bb37, %dec_label_pc_150ac, %dec_label_pc_15068, %dec_label_pc_14fd8
  %v0_14fdc = load i32, i32* @sb, align 4
  store i32 %v0_14fdc, i32* %r0.global-to-local, align 4
  %v2_14fe0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14fe0, i32* @r4, align 4
  store i32 %v6_14ee4, i32* @r5, align 4
  store i32 %v9_14ee4, i32* @r6, align 4
  store i32 %v12_14ee4, i32* @r7, align 4
  store i32 %v15_14ee4, i32* @r8, align 4
  store i32 %v18_14ee4, i32* @sb, align 4
  store i32 %v21_14ee4, i32* @sl, align 4
  store i32 %v24_14ee4, i32* @lr, align 4
  ret i32 %v0_14fdc

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fc8
  %v2_14fe8 = sub i32 %v1_14fc8, %v1_14fd0
  %v1_14fec = or i32 %v2_14fe8, 1
  store i32 %v1_14fec, i32* %r3.global-to-local, align 4
  %v0_14ff0 = load i32, i32* @r4, align 4
  %v2_14ff0 = add i32 %v0_14ff0, %v1_14fd0
  store i32 %v2_14ff0, i32* %r0.global-to-local, align 4
  %v1_14ff4 = or i32 %v1_14fd0, 1
  store i32 %v1_14ff4, i32* @r2, align 4
  %v2_14ff8 = add i32 %v2_14ff0, 4
  %v3_14ff8 = inttoptr i32 %v2_14ff8 to i32*
  store i32 %v1_14fec, i32* %v3_14ff8, align 4
  %v0_14ffc = load i32, i32* @r2, align 4
  %v1_14ffc = load i32, i32* @r4, align 4
  %v2_14ffc = load i32, i32* @r5, align 4
  %v3_14ffc = add i32 %v2_14ffc, %v1_14ffc
  %v4_14ffc = inttoptr i32 %v3_14ffc to i32*
  store i32 %v0_14ffc, i32* %v4_14ffc, align 4
  %v0_15000 = load i32, i32* @r2, align 4
  %v1_15000 = load i32, i32* @r4, align 4
  %v2_15000 = add i32 %v1_15000, 4
  %v3_15000 = inttoptr i32 %v2_15000 to i32*
  store i32 %v0_15000, i32* %v3_15000, align 4
  %v0_15004 = load i32, i32* %r3.global-to-local, align 4
  %v1_15004 = load i32, i32* @r4, align 4
  %v2_15004 = load i32, i32* %r1.global-to-local, align 4
  %v3_15004 = add i32 %v2_15004, %v1_15004
  %v4_15004 = inttoptr i32 %v3_15004 to i32*
  store i32 %v0_15004, i32* %v4_15004, align 4
  %v0_15008 = load i32, i32* %r0.global-to-local, align 4
  %v1_15008 = add i32 %v0_15008, 8
  store i32 %v1_15008, i32* %r0.global-to-local, align 4
  %v1_1500c = call i32 @function_1429c(i32 %v1_15008)
  store i32 %v1_1500c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14fd8

dec_label_pc_15014:                               ; preds = %bb34
  store i32 %v0_15014, i32* @r0, align 4
  %v0_15018 = call i32 @function_14798()
  store i32 %v0_15018, i32* %r0.global-to-local, align 4
  store i32 %v0_15018, i32* @sb, align 4
  %v2_1501c = icmp eq i32 %v0_15018, 0
  br i1 %v2_1501c, label %dec_label_pc_15014.dec_label_pc_14f48_crit_edge, label %dec_label_pc_15024

dec_label_pc_15014.dec_label_pc_14f48_crit_edge:  ; preds = %dec_label_pc_15014
  %v0_14f48.pre = load i32, i32* @r8, align 4
  %v0_14f54.pre = load i32, i32* @r6, align 4
  %v1_14f54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14f48

dec_label_pc_15024:                               ; preds = %dec_label_pc_15014
  %v0_15024 = load i32, i32* @r5, align 4
  %v1_15024 = add i32 %v0_15024, -8
  %v0_15028 = load i32, i32* @sl, align 4
  store i32 %v0_15028, i32* %r1.global-to-local, align 4
  %v3_1502c = inttoptr i32 %v0_15018 to i16*
  %v4_1502c = call i32 @function_15c0c(i16* %v3_1502c, i32 %v0_15028, i32 %v1_15024)
  %v0_15030 = load i32, i32* @sl, align 4
  store i32 %v0_15030, i32* %r0.global-to-local, align 4
  %v1_15034 = call i32 @function_1429c(i32 %v0_15030)
  store i32 %v1_15034, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14fdc

dec_label_pc_1503c:                               ; preds = %.thread4
  store i32 %v2_14fa0, i32* @r7, align 4
  store i32 %v2_14fa0, i32* %r0.global-to-local, align 4
  %v1_15040 = call i32 @function_1400c(i32 %v2_14fa0)
  store i32 %v1_15040, i32* %r0.global-to-local, align 4
  %v2_15044 = icmp eq i32 %v1_15040, 0
  br i1 %v2_15044, label %.thread12, label %dec_label_pc_15088

.thread12:                                        ; preds = %dec_label_pc_1503c
  %v1_15048 = load i32, i32* @r6, align 4
  %v2_15048 = or i32 %v1_15048, 1
  store i32 %v2_15048, i32* %r3.global-to-local, align 4
  %v2_1504c = load i32, i32* @r4, align 4
  %v4_1504c = add i32 %v2_1504c, %v1_15048
  %v5_1504c = inttoptr i32 %v4_1504c to i32*
  store i32 %v2_15048, i32* %v5_1504c, align 4
  %v1_15050 = load i32, i32* %r3.global-to-local, align 4
  %v2_15050 = load i32, i32* @r4, align 4
  %v3_15050 = add i32 %v2_15050, 4
  %v4_15050 = inttoptr i32 %v3_15050 to i32*
  store i32 %v1_15050, i32* %v4_15050, align 4
  br label %dec_label_pc_15058

dec_label_pc_15058:                               ; preds = %dec_label_pc_15088, %.thread12
  %v0_15058 = load i32, i32* @r5, align 4
  %v1_15058 = add i32 %v0_15058, -8
  store i32 %v1_15058, i32* @r0, align 4
  %v0_1505c = call i32 @function_14798()
  store i32 %v0_1505c, i32* %r0.global-to-local, align 4
  store i32 %v0_1505c, i32* @sb, align 4
  %v2_15060 = icmp eq i32 %v0_1505c, 0
  br i1 %v2_15060, label %dec_label_pc_14fdc, label %dec_label_pc_15068

dec_label_pc_15068:                               ; preds = %dec_label_pc_15058
  %v0_15068 = load i32, i32* @sl, align 4
  store i32 %v0_15068, i32* %r1.global-to-local, align 4
  %v0_1506c = load i32, i32* @r6, align 4
  %v1_1506c = add i32 %v0_1506c, -8
  %v3_15070 = inttoptr i32 %v0_1505c to i16*
  %v4_15070 = call i32 @function_15c0c(i16* %v3_15070, i32 %v0_15068, i32 %v1_1506c)
  %v0_15074 = load i32, i32* @r4, align 4
  %v1_15074 = add i32 %v0_15074, 8
  store i32 %v1_15074, i32* %r0.global-to-local, align 4
  %v1_15078 = call i32 @function_1429c(i32 %v1_15074)
  store i32 %v1_15078, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14fdc

dec_label_pc_15080:                               ; preds = %dec_label_pc_14ee4
  store i32 %v21_14ee4, i32* @sl, align 4
  %v0_15084 = call i32 @function_14798()
  store i32 %v0_15084, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %dec_label_pc_1503c, %dec_label_pc_15080
  %v0_15088 = load i32, i32* @r7, align 4
  %v1_15088 = add i32 %v0_15088, 4
  %v2_15088 = inttoptr i32 %v1_15088 to i32*
  %v3_15088 = load i32, i32* %v2_15088, align 4
  %v1_1508c = and i32 %v3_15088, -2
  %v1_15090 = load i32, i32* @r6, align 4
  %v2_15090 = add i32 %v1_15090, %v1_1508c
  %v1_15094 = load i32, i32* @r5, align 4
  %v3_15094 = icmp ult i32 %v2_15090, %v1_15094
  %v1_15098 = or i32 %v2_15090, 1
  store i32 %v1_15098, i32* %r3.global-to-local, align 4
  %v3_1509c = add i32 %v1_1508c, %v0_15088
  %v4_1509c = inttoptr i32 %v3_1509c to i32*
  store i32 %v1_15098, i32* %v4_1509c, align 4
  %v0_150a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_150a0 = load i32, i32* @r4, align 4
  %v2_150a0 = add i32 %v1_150a0, 4
  %v3_150a0 = inttoptr i32 %v2_150a0 to i32*
  store i32 %v0_150a0, i32* %v3_150a0, align 4
  br i1 %v3_15094, label %dec_label_pc_15058, label %dec_label_pc_14fc8

dec_label_pc_150ac:                               ; preds = %dec_label_pc_14f10
  %v0_150ac = call i32 @function_139e8()
  store i32 %v0_150ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_150b8 = inttoptr i32 %v0_150ac to i32*
  store i32 12, i32* %v2_150b8, align 4
  br label %dec_label_pc_14fdc

; uselistorder directives
  uselistorder i32 %v1_14fd0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_14fa0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_14f7c, { 1, 0 }
  uselistorder i32 %v4_14f74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14f54, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14f38, { 1, 0, 2 }
  uselistorder i32 %v3_14f30, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14f28, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14f24, { 1, 0 }
  uselistorder i32 %v3_14f20, { 1, 2, 3, 0 }
  uselistorder i32 %v0_15014, { 0, 2, 1, 3 }
  uselistorder i32 %v21_14ee4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 14, 16, 17, 0, 1, 2, 3, 15, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 15, 12, 14, 16, 13, 3, 2, 4, 5, 6, 11, 7, 8, 9, 10, 1, 0 }
  uselistorder i32 (i32)* @function_1400c, { 1, 0 }
  uselistorder i32 ()* @function_14798, { 58, 0, 4, 1, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 3, 2, 7, 6, 5 }
  uselistorder i32 (i32)* @function_1429c, { 0, 4, 3, 1, 5, 7, 6, 2 }
  uselistorder i32 4095, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_15088, { 1, 0 }
  uselistorder label %dec_label_pc_14fdc, { 4, 5, 1, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_14fd8, { 1, 0 }
  uselistorder label %bb37, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_150c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_150c0:
  store i32 %arg2, i32* @r2, align 4
  %v0_150e4 = call i32 @function_13c94()
  ret i32 %v0_150e4
}

define i32 @function_150f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_150f8:
  %v0_15104 = call i32 @function_13c94()
  ret i32 %v0_15104
}

define i32 @function_15110() local_unnamed_addr {
dec_label_pc_15110:
  %v1_15110 = load i32, i32* @r0, align 4
  ret i32 %v1_15110
}

define i32 @function_15114(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_15114:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v2_1512c = urem i32 %arg6, 4096
  %v2_15130 = and i32 %arg7, -4096
  %v2_15134 = or i32 %v2_15130, %v2_1512c
  %v4_15134 = icmp eq i32 %v2_15134, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg3, i32* %fp.global-to-local, align 4
  %v0_15144 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15144, i32* %sl.global-to-local, align 4
  br i1 %v4_15134, label %dec_label_pc_1515c, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %dec_label_pc_15114
  %v0_1514c = call i32 @function_139e8()
  br label %dec_label_pc_15170

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15114
  %tmp = icmp ult i32 %arg2, 2147483647
  br i1 %tmp, label %dec_label_pc_15178, label %dec_label_pc_15164

dec_label_pc_15164:                               ; preds = %dec_label_pc_1515c
  %v0_15164 = call i32 @function_139e8()
  br label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_1514c, %dec_label_pc_15164
  %storemerge1 = phi i32 [ %v0_1514c, %dec_label_pc_1514c ], [ %v0_15164, %dec_label_pc_15164 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_1514c ], [ 12, %dec_label_pc_15164 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %storemerge, i32* @r3, align 4
  %v2_15170 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_15170, align 4
  %v0_151b8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_151b8

dec_label_pc_15178:                               ; preds = %dec_label_pc_1515c
  %v1_15178 = and i32 %v0_15144, 16
  %v2_15178 = icmp eq i32 %v1_15178, 0
  br i1 %v2_15178, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15178
  store i32 86288, i32* %r3.global-to-local, align 4
  store i32 86408, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15178, %bb
  %v2_15184 = xor i1 %v2_15178, true
  call void @__pseudo_cond_branch(i1 %v2_15184, i32 ptrtoint (i32* @global_var_15110.590 to i32))
  %v0_15198 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15198, i32* @r0, align 4
  %v0_1519c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1519c, i32* @r2, align 4
  %v0_151a0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_151a0, i32* @r3, align 4
  %v3_151a4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_151a4, i32* @r4, align 4
  %v0_151b0 = call i32 @function_13c94()
  store i32 %v0_151b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_151b8

dec_label_pc_151b8:                               ; preds = %dec_label_pc_15170, %.thread
  %v0_151b8 = phi i32 [ %v0_151b8.pre, %dec_label_pc_15170 ], [ %v0_151b0, %.thread ]
  ret i32 %v0_151b8

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 -4096, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_151b8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15170, { 1, 0 }
}

define i32 @function_151d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_151d4:
  store i32 %arg2, i32* @r4, align 4
  %v0_151f8 = call i32 @function_13c94()
  ret i32 %v0_151f8
}

define i32 @function_15210(i32 %arg1) local_unnamed_addr {
dec_label_pc_15210:
  store i32 %arg1, i32* @r0, align 4
  store i32 86288, i32* @r3, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 86572, i32* @lr, align 4
  %v1_15228 = call i32 @function_15110()
  %v0_1522c = load i32, i32* @r4, align 4
  store i32 %v0_1522c, i32* @r0, align 4
  %v0_15238 = call i32 @function_13c94()
  ret i32 %v0_15238
}

define i32 @function_15248(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15248:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_15274 = call i32 @function_16270(i32 285, i32 %arg1, i32 %arg2)
  store i32 %v3_15274, i32* @r0, align 4
  %v0_15278 = call i32 @function_13c94()
  ret i32 %v0_15278

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1528c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1528c:
  store i32 %arg1, i32* @r0, align 4
  %v3_15290 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_152a4 = call i32 @function_13c94()
  store i32 %v3_15290, i32* @r4, align 4
  ret i32 %v0_152a4
}

define i32 @function_152b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_152b4:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_152e0 = call i32 @function_16270(i32 283, i32 %arg1, i32 %arg2)
  store i32 %v3_152e0, i32* @r0, align 4
  %v0_152e4 = call i32 @function_13c94()
  ret i32 %v0_152e4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_152f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_152f8:
  store i32 %arg1, i32* @r0, align 4
  %v3_152fc = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_15310 = call i32 @function_13c94()
  store i32 %v3_152fc, i32* @r4, align 4
  ret i32 %v0_15310
}

define i32 @function_15320(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15320:
  store i32 %arg1, i32* @r0, align 4
  %v3_15320 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_15334 = call i32 @function_13c94()
  store i32 %v3_15320, i32* @r4, align 4
  ret i32 %v0_15334
}

define i32 @function_15344(i32 %arg1) local_unnamed_addr {
dec_label_pc_15344:
  %v2_15360 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15360
}

define i32 @function_15368(i32 %arg1) local_unnamed_addr {
dec_label_pc_15368:
  %v3_15368 = udiv i32 %arg1, 256
  %v4_1536c = mul i32 %arg1, 256
  %v5_1536c = or i32 %v4_1536c, %v3_15368
  %v3_15370 = mul i32 %v5_1536c, 65536
  store i32 %v3_15370, i32* @r3, align 4
  %v3_15374 = urem i32 %v5_1536c, 65536
  ret i32 %v3_15374

; uselistorder directives
  uselistorder i32 %v5_1536c, { 1, 0 }
}

define i32 @function_1537c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1537c:
  %stack_var_-12 = alloca i32, align 4
  %v2_15384 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15384, i32* @r1, align 4
  %v0_15388 = call i32 @function_153a4()
  %v2_1538c = icmp eq i32 %v0_15388, 0
  %v4_15390 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_1538c, i32 -1, i32 %v4_15390
  ret i32 %storemerge
}

define i32 @function_153a4() local_unnamed_addr {
dec_label_pc_153a4:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_153a4 = load i32, i32* @r4, align 4
  %v6_153a4 = load i32, i32* @r5, align 4
  %v9_153a4 = load i32, i32* @r6, align 4
  %v12_153a4 = load i32, i32* @r7, align 4
  %v15_153a4 = load i32, i32* @r8, align 4
  %v2_153ac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_153ac, i32* @r4, align 4
  %v0_153b0 = load i32, i32* @r0, align 4
  store i32 %v0_153b0, i32* @r5, align 4
  %v0_153b4 = load i32, i32* @r1, align 4
  store i32 %v0_153b4, i32* @r8, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_153c4 = bitcast i32* %stack_var_-44 to i8*
  %v4_153c4 = call i32 @function_16064(i8* %v3_153c4, i32 0, i32 16)
  store i32 %v2_153ac, i32* @r7, align 4
  %v2_153cc = ptrtoint i8** %stack_var_-28 to i32
  store i32 %v2_153cc, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_1543c, %dec_label_pc_153a4
  store i32 %v2_153cc, i32* @r1, align 4
  %v0_153d8 = load i32, i32* @r5, align 4
  store i32 %v0_153d8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_153e0 = call i32 @function_15b98(i32 %v0_153d8, i32 %v2_153cc, i32 0)
  %v3_153e4 = load i8*, i8** %stack_var_-28, align 4
  %v4_153e4 = ptrtoint i8* %v3_153e4 to i32
  store i32 %v4_153e4, i32* %r1.global-to-local, align 4
  %v1_153e8 = load i32, i32* @r5, align 4
  %v9_153e8 = icmp eq i32 %v4_153e4, %v1_153e8
  br i1 %v9_153e8, label %dec_label_pc_154b8, label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153d4
  %v2_153f0 = load i8, i8* %v3_153e4, align 1
  %v3_153f0 = zext i8 %v2_153f0 to i32
  store i32 %v3_153f0, i32* %r2.global-to-local, align 4
  %v2_153f4 = icmp eq i8 %v2_153f0, 0
  br i1 %v2_153f4, label %dec_label_pc_15400, label %bb

bb:                                               ; preds = %dec_label_pc_153f0
  %v8_153f8 = icmp eq i8 %v2_153f0, 46
  br i1 %v8_153f8, label %dec_label_pc_15400, label %dec_label_pc_154b8

dec_label_pc_15400:                               ; preds = %dec_label_pc_153f0, %bb
  %v1_15400 = inttoptr i32 %v1_153e8 to i8*
  %v2_15400 = load i8, i8* %v1_15400, align 1
  %v3_15400 = zext i8 %v2_15400 to i32
  %v1_15404 = add nsw i32 %v3_15400, -48
  %v1_1540c = add i32 %v4_153e4, 1
  store i32 %v1_1540c, i32* @r5, align 4
  %tmp = icmp ugt i32 %v1_15404, 9
  br i1 %tmp, label %dec_label_pc_154b8, label %dec_label_pc_15414

dec_label_pc_15414:                               ; preds = %dec_label_pc_15400
  %v1_15418 = load i32, i32* @r7, align 4
  %v2_15418 = load i32, i32* @r4, align 4
  %v5_15418 = mul i32 %v2_15418, 4
  %v6_15418 = add i32 %v5_15418, %v1_15418
  %v7_15418 = inttoptr i32 %v6_15418 to i32*
  store i32 %v3_153e0, i32* %v7_15418, align 4
  %v0_15420 = load i32, i32* @r4, align 4
  br i1 %v2_153f4, label %dec_label_pc_15420, label %dec_label_pc_1543c

dec_label_pc_15420:                               ; preds = %dec_label_pc_15414
  %v7_15420 = icmp eq i32 %v0_15420, 1
  br i1 %v7_15420, label %dec_label_pc_1545c, label %dec_label_pc_15428

dec_label_pc_15428:                               ; preds = %dec_label_pc_15420
  %v7_15428 = icmp eq i32 %v0_15420, 2
  br i1 %v7_15428, label %dec_label_pc_15474, label %dec_label_pc_15430

dec_label_pc_15430:                               ; preds = %dec_label_pc_15428
  %v2_15430 = icmp eq i32 %v0_15420, 0
  br i1 %v2_15430, label %dec_label_pc_1544c, label %dec_label_pc_15488

dec_label_pc_1543c:                               ; preds = %dec_label_pc_15414
  %v1_1543c = add i32 %v0_15420, 1
  store i32 %v1_1543c, i32* @r4, align 4
  %v7_15440 = icmp eq i32 %v1_1543c, 4
  br i1 %v7_15440, label %dec_label_pc_154b8, label %dec_label_pc_153d4

dec_label_pc_1544c:                               ; preds = %dec_label_pc_15430
  %v3_1544c = load i32, i32* %stack_var_-44, align 4
  %v3_15450 = udiv i32 %v3_1544c, 16777216
  store i32 %v3_15450, i32* %r2.global-to-local, align 4
  %v1_15454 = urem i32 %v3_1544c, 16777216
  store i32 %v3_15450, i32* %stack_var_-44, align 4
  br label %dec_label_pc_1545c

dec_label_pc_1545c:                               ; preds = %dec_label_pc_15420, %dec_label_pc_1544c
  %stack_var_-40.0 = phi i32 [ %tmp6, %dec_label_pc_15420 ], [ %v1_15454, %dec_label_pc_1544c ]
  %v3_15464 = urem i32 %stack_var_-40.0, 65536
  %v3_15468 = udiv i32 %stack_var_-40.0, 65536
  store i32 %v3_15468, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15474

dec_label_pc_15474:                               ; preds = %dec_label_pc_15428, %dec_label_pc_1545c
  %stack_var_-36.0 = phi i32 [ %v3_15464, %dec_label_pc_1545c ], [ %tmp5, %dec_label_pc_15428 ]
  %v3_15478 = udiv i32 %stack_var_-36.0, 256
  store i32 %v3_15478, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15488

dec_label_pc_15488:                               ; preds = %dec_label_pc_15430, %dec_label_pc_15474
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_153ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15490

dec_label_pc_15490:                               ; preds = %dec_label_pc_1549c.dec_label_pc_15490_crit_edge, %dec_label_pc_15488
  %v2_1549c = phi i32 [ %v1_154a0, %dec_label_pc_1549c.dec_label_pc_15490_crit_edge ], [ 0, %dec_label_pc_15488 ]
  %v0_15490 = phi i32 [ %v0_15490.pre, %dec_label_pc_1549c.dec_label_pc_15490_crit_edge ], [ %v2_153ac, %dec_label_pc_15488 ]
  %v4_15490 = mul i32 %v2_1549c, 4
  %v5_15490 = add i32 %v4_15490, %v0_15490
  %v6_15490 = inttoptr i32 %v5_15490 to i32*
  %v7_15490 = load i32, i32* %v6_15490, align 4
  %tmp18 = icmp ugt i32 %v7_15490, 255
  br i1 %tmp18, label %dec_label_pc_154b8, label %dec_label_pc_1549c

dec_label_pc_1549c:                               ; preds = %dec_label_pc_15490
  %v1_1549c = trunc i32 %v7_15490 to i8
  %v3_1549c = load i32, i32* @r8, align 4
  %v4_1549c = add i32 %v3_1549c, %v2_1549c
  %v5_1549c = inttoptr i32 %v4_1549c to i8*
  store i8 %v1_1549c, i8* %v5_1549c, align 1
  %v0_154a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_154a0 = add i32 %v0_154a0, 1
  store i32 %v1_154a0, i32* %r2.global-to-local, align 4
  %v7_154a4 = icmp eq i32 %v1_154a0, 4
  br i1 %v7_154a4, label %dec_label_pc_154b8, label %dec_label_pc_1549c.dec_label_pc_15490_crit_edge

dec_label_pc_1549c.dec_label_pc_15490_crit_edge:  ; preds = %dec_label_pc_1549c
  %v0_15490.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15490

dec_label_pc_154b8:                               ; preds = %dec_label_pc_153d4, %dec_label_pc_15400, %dec_label_pc_1543c, %bb, %dec_label_pc_15490, %dec_label_pc_1549c
  %storemerge = phi i32 [ 1, %dec_label_pc_1549c ], [ 0, %dec_label_pc_15490 ], [ 0, %bb ], [ 0, %dec_label_pc_1543c ], [ 0, %dec_label_pc_15400 ], [ 0, %dec_label_pc_153d4 ]
  store i32 %v3_153a4, i32* @r4, align 4
  store i32 %v6_153a4, i32* @r5, align 4
  store i32 %v9_153a4, i32* @r6, align 4
  store i32 %v12_153a4, i32* @r7, align 4
  store i32 %v15_153a4, i32* @r8, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_154a0, { 1, 2, 0 }
  uselistorder i32 %v7_15490, { 1, 0 }
  uselistorder i32 %v3_15450, { 1, 0 }
  uselistorder i32 %v3_1544c, { 1, 0 }
  uselistorder i32 %v0_15420, { 3, 0, 1, 2 }
  uselistorder i32 %v2_153cc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i8 46, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_154b8, { 5, 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_15488, { 1, 0 }
  uselistorder label %dec_label_pc_15474, { 1, 0 }
  uselistorder label %dec_label_pc_1545c, { 1, 0 }
  uselistorder label %dec_label_pc_15400, { 1, 0 }
}

define i32 @function_154c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_154c4:
  store i32 0, i32* @r2, align 4
  %v3_154c8 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_154e0 = call i32 @function_13c94()
  store i32 %v3_154c8, i32* @r4, align 4
  ret i32 %v0_154e0
}

define i32 @function_154ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_154ec:
  %v2_15508 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15508
}

define i32 @function_15510(i32 %arg1) local_unnamed_addr {
dec_label_pc_15510:
  %v3_15510 = udiv i32 %arg1, 256
  %v4_15514 = mul i32 %arg1, 256
  %v5_15514 = or i32 %v4_15514, %v3_15510
  %v3_1551c = urem i32 %v5_15514, 65536
  ret i32 %v3_1551c
}

define i32 @function_15524(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15524:
  %v0_15538 = call i32 @function_15548()
  ret i32 %v0_15538

; uselistorder directives
  uselistorder i32 ()* @function_15548, { 1, 0, 4, 3, 2 }
}

define i32 @function_15548() local_unnamed_addr {
dec_label_pc_15548:
  %v0_15548 = load i32, i32* @lr, align 4
  %v0_1554c = load i32, i32* @r1, align 4
  %v0_15554 = load i32, i32* @r2, align 4
  store i32 %v0_15554, i32* @lr, align 4
  store i32 %v0_1554c, i32* @r2, align 4
  %v0_15568 = load i32, i32* @r0, align 4
  store i32 %v0_15554, i32* @r3, align 4
  %v3_1557c = call i32 @function_16270(i32 292, i32 %v0_15568, i32 %v0_1554c)
  store i32 %v3_1557c, i32* @r0, align 4
  %v0_15580 = call i32 @function_13c94()
  store i32 %v0_15548, i32* @lr, align 4
  ret i32 %v0_15580
}

define i32 @function_15590(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15590:
  %v0_155a4 = call i32 @function_155b4()
  ret i32 %v0_155a4

; uselistorder directives
  uselistorder i32 ()* @function_155b4, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
}

define i32 @function_155b4() local_unnamed_addr {
dec_label_pc_155b4:
  %v0_155b4 = load i32, i32* @lr, align 4
  %v0_155b8 = load i32, i32* @r1, align 4
  %v0_155c0 = load i32, i32* @r2, align 4
  store i32 %v0_155c0, i32* @lr, align 4
  store i32 %v0_155b8, i32* @r2, align 4
  %v0_155d4 = load i32, i32* @r0, align 4
  store i32 %v0_155c0, i32* @r3, align 4
  %v3_155e8 = call i32 @function_16270(i32 290, i32 %v0_155d4, i32 %v0_155b8)
  store i32 %v3_155e8, i32* @r0, align 4
  %v0_155ec = call i32 @function_13c94()
  store i32 %v0_155b4, i32* @lr, align 4
  ret i32 %v0_155ec
}

define i32 @function_15600(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15600:
  %v3_15600 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15614 = call i32 @function_13c94()
  store i32 %v3_15600, i32* @r4, align 4
  ret i32 %v0_15614
}

define i32 @function_15620(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15620:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_15620 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15620, label %bb, label %dec_label_pc_15620._crit_edge

bb:                                               ; preds = %dec_label_pc_15620
  %v1_15620 = load i32, i32* %r0.global-to-local, align 4
  %v2_15620 = load i32, i32* @r6, align 4
  %v5_15620 = udiv i32 %v2_15620, 4
  %v6_15620 = and i32 %v5_15620, %v1_15620
  store i32 %v6_15620, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15620._crit_edge

dec_label_pc_15620._crit_edge:                    ; preds = %dec_label_pc_15620, %bb
  store i32 %arg2, i32* %r0.global-to-local, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15620._crit_edge, { 1, 0 }
}

define i32 @function_15644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_15644:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_15670(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15670:
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_15670 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v7_156a4 = call i32 @function_15644(i32 281, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_156a4, i32* @r0, align 4
  %v0_156a8 = call i32 @function_13c94()
  %v1_156ac = icmp slt i32 %v0_156a8, 0
  br i1 %v1_156ac, label %dec_label_pc_156b4, label %dec_label_pc_15750

dec_label_pc_156b4:                               ; preds = %dec_label_pc_15670
  %v0_156b4 = call i32 @function_139e8()
  %v1_156b8 = inttoptr i32 %v0_156b4 to i32*
  %v2_156b8 = load i32, i32* %v1_156b8, align 4
  %v7_156bc = icmp eq i32 %v2_156b8, 22
  br i1 %v7_156bc, label %dec_label_pc_156d4, label %dec_label_pc_156c4

dec_label_pc_156c4:                               ; preds = %dec_label_pc_156b4
  %v0_156c4 = call i32 @function_139e8()
  %v1_156c8 = inttoptr i32 %v0_156c4 to i32*
  %v2_156c8 = load i32, i32* %v1_156c8, align 4
  store i32 %v2_156c8, i32* @r3, align 4
  %v7_156cc = icmp eq i32 %v2_156c8, 93
  br i1 %v7_156cc, label %dec_label_pc_156d4, label %dec_label_pc_15750

dec_label_pc_156d4:                               ; preds = %dec_label_pc_156c4, %dec_label_pc_156b4
  %v0_156d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_156d8 = and i32 %v0_156d8, 526336
  store i32 %v2_156d8, i32* @r3, align 4
  %v2_156dc = icmp eq i32 %v2_156d8, 0
  br i1 %v2_156dc, label %dec_label_pc_15750, label %dec_label_pc_156e4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156d4
  %v0_156e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_156ec = and i32 %v0_156d8, -526337
  %v0_156f0 = load i32, i32* %r8.global-to-local, align 4
  %v0_156f8 = load i32, i32* @r4, align 4
  %v7_15704 = call i32 @function_15644(i32 281, i32 %v0_156e8, i32 %v1_156ec, i32 %v0_156f0, i32 %v0_156f8, i32 %v0_156f8, i32 %v0_156f8)
  store i32 %v7_15704, i32* @r0, align 4
  %v0_15708 = call i32 @function_13c94()
  %v1_1570c = icmp slt i32 %v0_15708, 0
  br i1 %v1_1570c, label %dec_label_pc_15750, label %dec_label_pc_15714

dec_label_pc_15714:                               ; preds = %dec_label_pc_156e4
  %v0_15714 = load i32, i32* %r5.global-to-local, align 4
  %v1_15714 = and i32 %v0_15714, 524288
  %v2_15714 = icmp eq i32 %v1_15714, 0
  br i1 %v2_15714, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_15714
  store i32 1, i32* @r3, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15714, %bb
  %v1_15728 = xor i1 %v2_15714, true
  call void @__pseudo_cond_branch(i1 %v1_15728, i32 ptrtoint (i32* @global_var_15624.601 to i32))
  %v0_1572c = load i32, i32* %r5.global-to-local, align 4
  %v1_1572c = and i32 %v0_1572c, 2048
  %v2_1572c = icmp eq i32 %v1_1572c, 0
  br i1 %v2_1572c, label %.thread5, label %bb15

bb15:                                             ; preds = %.thread2
  store i32 2048, i32* @r3, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread2, %bb15
  %v1_15740 = xor i1 %v2_1572c, true
  call void @__pseudo_cond_branch(i1 %v1_15740, i32 ptrtoint (i32* @global_var_15624.601 to i32))
  br label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_156d4, %dec_label_pc_15670, %dec_label_pc_156c4, %.thread5, %dec_label_pc_156e4
  %storemerge.in = phi i32* [ @r4, %dec_label_pc_156e4 ], [ @r4, %.thread5 ], [ @r6, %dec_label_pc_156c4 ], [ @r6, %dec_label_pc_15670 ], [ @r6, %dec_label_pc_156d4 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_15670, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 524288, { 6, 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_15644, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15750, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1575c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1575c:
  %v0_1575c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1575c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1575c
  %v2_1575c = load i32, i32* @sb, align 4
  %v8_1575c = shl i32 %v2_1575c, %arg2
  %v9_1575c = and i32 %v8_1575c, %arg1
  %v1_15760 = load i32, i32* @r8, align 4
  %v5_15760 = mul i32 %v9_1575c, 65536
  %v6_15760 = and i32 %v5_15760, %v1_15760
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1575c, %bb
  %v7_15760 = phi i32 [ %arg1, %dec_label_pc_1575c ], [ %v6_15760, %bb ]
  ret i32 %v7_15760

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15764() local_unnamed_addr {
dec_label_pc_15764:
  %v1_15764 = load i32, i32* @r0, align 4
  ret i32 %v1_15764
}

define i32 @function_15768() local_unnamed_addr {
dec_label_pc_15768:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v15_15768 = load i32, i32* @lr, align 4
  store i32 -1, i32* @r0, align 4
  %v2_15770 = ptrtoint i32* %stack_var_-152 to i32
  %v1_1577c = call i32 @function_15764()
  %v1_15788 = call i32 @function_1585c(i32 %v2_15770)
  store i32 %v1_15788, i32* @r0, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v0_15794 = call i32 @function_13c94()
  store i32 %v0_15794, i32* %r4.global-to-local, align 4
  %v2_15798 = icmp eq i32 %v0_15794, 0
  br i1 %v2_15798, label %dec_label_pc_157a0, label %dec_label_pc_157c4

dec_label_pc_157a0:                               ; preds = %dec_label_pc_15768
  %v0_157a0 = call i32 @function_1687c()
  store i32 %v0_157a0, i32* %r2.global-to-local, align 4
  %v0_157a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_157a8 = add i32 %v0_157a8, 222
  store i32 %v1_157a8, i32* %r7.global-to-local, align 4
  %v2_157b4 = add i32 %v0_157a0, -176
  %v3_157b4 = inttoptr i32 %v2_157b4 to i32*
  store i32 %v0_157a0, i32* %v3_157b4, align 4
  %v0_157b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_157b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_157b8 = add i32 %v1_157b8, -60
  %v3_157b8 = inttoptr i32 %v2_157b8 to i32*
  store i32 %v0_157b8, i32* %v3_157b8, align 4
  %v0_157bc = load i32, i32* %r4.global-to-local, align 4
  %v1_157bc = load i32, i32* %r2.global-to-local, align 4
  %v2_157bc = add i32 %v1_157bc, -64
  %v3_157bc = inttoptr i32 %v2_157bc to i32*
  store i32 %v0_157bc, i32* %v3_157bc, align 4
  %v0_157c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_157c0, i32* @global_var_23838.562, align 4
  br label %dec_label_pc_157c4

dec_label_pc_157c4:                               ; preds = %dec_label_pc_15768, %dec_label_pc_157a0
  %v1_157c8 = call i32 @function_158c4(i32 %v2_15770)
  %v0_157cc = load i32, i32* %r4.global-to-local, align 4
  %v1_157cc = sub i32 1, %v0_157cc
  %v2_157cc = icmp ult i32 %v0_157cc, 2
  br i1 %v2_157cc, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_157c4
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_157c4, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_157cc, %dec_label_pc_157c4 ]
  store i32 %storemerge, i32* @r0, align 4
  %v1_157d8 = call i32 @function_15764()
  %v0_157dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v15_15768, i32* @lr, align 4
  ret i32 %v0_157dc

; uselistorder directives
  uselistorder i32 -64, { 2, 0, 1 }
  uselistorder i32 222, { 1, 0 }
  uselistorder i32 ()* @function_15764, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_157c4, { 1, 0 }
}

define i32 @function_157f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_157f4:
  %v0_157f4 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_15824 = call i32 @function_16270(i32 142, i32 %arg1, i32 %arg2)
  store i32 %v3_15824, i32* @r0, align 4
  %v0_15828 = call i32 @function_13c94()
  store i32 %v0_157f4, i32* @lr, align 4
  ret i32 %v0_15828
}

define i32 @function_15838(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15838:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_1585c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1585c:
  %v5_1587c = call i32 @function_15838(i32 175, i32 0, i32 ptrtoint (i32* @global_var_1aacc.606 to i32), i32 %arg1, i32 8)
  ret i32 %v5_1587c
}

define i32 @function_15890(i32 %arg1) local_unnamed_addr {
dec_label_pc_15890:
  %v5_158b0 = call i32 @function_15838(i32 175, i32 0, i32 ptrtoint (i32* @global_var_1aac4.608 to i32), i32 %arg1, i32 8)
  ret i32 %v5_158b0
}

define i32 @function_158c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_158c4:
  store i32 8, i32* @ip, align 4
  %v5_158e4 = call i32 @function_15838(i32 175, i32 2, i32 %arg1, i32 0, i32 8)
  ret i32 %v5_158e4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_15838, { 1, 0, 2 }
}

define i32 @function_158f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_158f4:
  %v0_15900 = call i32 @function_13c94()
  ret i32 %v0_15900
}

define i32 @function_1590c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1590c:
  %stack_var_-144 = alloca i32, align 4
  %v3_1590c = load i32, i32* @r4, align 4
  %v2_15910 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r4, align 4
  %v1_15920 = call i32 @function_15890(i32 %v2_15910)
  store i32 %v1_15920, i32* @r0, align 4
  %v0_15938 = call i32 @function_13c94()
  %v1_15944 = call i32 @function_158c4(i32 %v2_15910)
  store i32 %v3_1590c, i32* @r4, align 4
  ret i32 %v0_15938
}

define i32 @function_15958(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15958:
  %r2.global-to-local = alloca i32, align 4
  %v1_15960 = add i32 %arg2, -1
  %tmp = icmp ugt i32 %v1_15960, 63
  br i1 %tmp, label %dec_label_pc_15980, label %dec_label_pc_15974

dec_label_pc_15974:                               ; preds = %dec_label_pc_15958
  %v1_15974 = add i32 %arg2, -32
  %tmp4 = icmp ugt i32 %v1_15974, 2
  br i1 %tmp4, label %dec_label_pc_15994, label %dec_label_pc_15980

dec_label_pc_15980:                               ; preds = %dec_label_pc_15974, %dec_label_pc_15958
  %v0_15980 = call i32 @function_139e8()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1598c = inttoptr i32 %v0_15980 to i32*
  store i32 22, i32* %v2_1598c, align 4
  %v0_159b0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_159b0

dec_label_pc_15994:                               ; preds = %dec_label_pc_15974
  %v3_15994 = udiv i32 %v1_15960, 32
  %v4_15998 = mul nuw nsw i32 %v3_15994, 4
  %v5_15998 = add i32 %v4_15998, %arg1
  %v6_15998 = inttoptr i32 %v5_15998 to i32*
  %v7_15998 = load i32, i32* %v6_15998, align 4
  %v1_159a0 = urem i32 %v1_15960, 32
  %v7_159a4 = shl i32 1, %v1_159a0
  %v8_159a4 = or i32 %v7_15998, %v7_159a4
  store i32 %v8_159a4, i32* %v6_15998, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_15980, %dec_label_pc_15994
  %v0_159b0 = phi i32 [ %v0_159b0.pre, %dec_label_pc_15980 ], [ 0, %dec_label_pc_15994 ]
  ret i32 %v0_159b0

; uselistorder directives
  uselistorder i32 %v1_15960, { 2, 1, 0 }
  uselistorder i32 63, { 0, 7, 5, 4, 8, 1, 10, 2, 9, 3, 11, 6 }
  uselistorder label %dec_label_pc_159b0, { 1, 0 }
}

define i32 @function_159c0(i32* %arg1) local_unnamed_addr {
dec_label_pc_159c0:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_159c8 = add i32 %tmp, 4
  %v3_159c8 = inttoptr i32 %v2_159c8 to i32*
  store i32 0, i32* %v3_159c8, align 4
  %v1_159cc = load i32, i32* %r3.global-to-local, align 4
  %v2_159cc = inttoptr i32 %v1_159cc to i32*
  store i32 0, i32* %v2_159cc, align 4
  ret i32 0
}

define i32 @function_159d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_159d4:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v6_159d4 = load i32, i32* @r5, align 4
  %v9_159d4 = load i32, i32* @r6, align 4
  %v2_159d8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  %v3_159f0 = bitcast i32* %stack_var_-296 to i8*
  %v4_159f0 = call i32 @function_16064(i8* %v3_159f0, i32 0, i32 140)
  %v0_159f8 = load i32, i32* @r5, align 4
  store i32 %v2_159d8, i32* @r1, align 4
  %v2_15a00 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_15a00, i32* @r2, align 4
  %v0_15a04 = load i32, i32* @r6, align 4
  store i32 %v0_15a04, i32* %stack_var_-296, align 4
  %v5_15a0c = call i32 @function_179bc(i32 %v0_159f8, i32 %v2_159d8, i32 %v2_15a00, i32 268435456, i32 %v0_15a04)
  %v1_15a10 = icmp slt i32 %v5_15a0c, 0
  br i1 %v1_15a10, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_159d4
  %v6_15a14 = load i32, i32* %stack_var_-156, align 4
  br label %bb11

bb10:                                             ; preds = %dec_label_pc_159d4
  br label %bb11

bb11:                                             ; preds = %bb, %bb10
  %v1_15a28 = phi i32 [ %v6_15a14, %bb ], [ -1, %bb10 ]
  store i32 %v6_159d4, i32* @r5, align 4
  store i32 %v9_159d4, i32* @r6, align 4
  ret i32 %v1_15a28

; uselistorder directives
  uselistorder i32* %stack_var_-296, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_16064, { 0, 4, 6, 7, 1, 2, 3, 5 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_15a2c() local_unnamed_addr {
dec_label_pc_15a2c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15a2c = load i32, i32* @r4, align 4
  store i32 %v3_15a2c, i32* %stack_var_-8, align 4
  %v0_15a30 = call i32 @function_16418()
  store i32 %v0_15a30, i32* %r4.global-to-local, align 4
  %v2_15a34 = icmp eq i32 %v0_15a30, 0
  br i1 %v2_15a34, label %dec_label_pc_15a48, label %dec_label_pc_15a3c

dec_label_pc_15a3c:                               ; preds = %dec_label_pc_15a2c
  %v0_15a3c = call i32 @function_139e8()
  %v0_15a40 = load i32, i32* %r4.global-to-local, align 4
  %v2_15a40 = inttoptr i32 %v0_15a3c to i32*
  store i32 %v0_15a40, i32* %v2_15a40, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a48

dec_label_pc_15a48:                               ; preds = %dec_label_pc_15a2c, %dec_label_pc_15a3c
  %v0_15a48 = phi i32 [ 0, %dec_label_pc_15a2c ], [ -1, %dec_label_pc_15a3c ]
  %v2_15a4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15a4c, i32* @r4, align 4
  ret i32 %v0_15a48

; uselistorder directives
  uselistorder label %dec_label_pc_15a48, { 1, 0 }
}

define i32 @function_15a54(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a54:
  %v0_15a60.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15a60

dec_label_pc_15a5c:                               ; preds = %dec_label_pc_15a60, %bb29
  %v1_15a5c = add i32 %v0_15a5c, 1
  br label %dec_label_pc_15a60

dec_label_pc_15a60:                               ; preds = %dec_label_pc_15a54, %dec_label_pc_15a5c
  %v0_15a5c = phi i32 [ %v0_15a60.pre, %dec_label_pc_15a54 ], [ %v1_15a5c, %dec_label_pc_15a5c ]
  %v1_15a60 = inttoptr i32 %v0_15a5c to i8*
  %v2_15a60 = load i8, i8* %v1_15a60, align 1
  %v3_15a60 = zext i8 %v2_15a60 to i32
  %v1_15a64 = add nsw i32 %v3_15a60, -9
  %v7_15a68 = icmp eq i8 %v2_15a60, 32
  br i1 %v7_15a68, label %dec_label_pc_15a5c, label %bb

bb:                                               ; preds = %dec_label_pc_15a60
  %v3_15a6c = icmp ugt i32 %v1_15a64, 3
  %v8_15a6c = icmp eq i32 %v1_15a64, 4
  %v2_15a70 = xor i1 %v8_15a6c, true
  %v3_15a70 = and i1 %v3_15a6c, %v2_15a70
  br i1 %v3_15a70, label %bb28, label %bb29

bb28:                                             ; preds = %bb
  br label %bb29

bb29:                                             ; preds = %bb, %bb28
  %v1_15a887 = phi i32 [ %v1_15a64, %bb ], [ 0, %bb28 ]
  %v2_15a74 = xor i1 %v3_15a6c, true
  %v3_15a74 = or i1 %v8_15a6c, %v2_15a74
  br i1 %v3_15a74, label %dec_label_pc_15a5c, label %dec_label_pc_15a7c

dec_label_pc_15a7c:                               ; preds = %bb29
  %v7_15a7c = icmp eq i8 %v2_15a60, 43
  br i1 %v7_15a7c, label %dec_label_pc_15a9c, label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a7c
  %v7_15a84 = icmp eq i8 %v2_15a60, 45
  br i1 %v7_15a84, label %dec_label_pc_15a9c, label %bb30

bb30:                                             ; preds = %dec_label_pc_15a84
  br label %dec_label_pc_15aa0

dec_label_pc_15a9c:                               ; preds = %dec_label_pc_15a7c, %dec_label_pc_15a84
  %storemerge = phi i32 [ 1, %dec_label_pc_15a84 ], [ %v1_15a887, %dec_label_pc_15a7c ]
  %v1_15a9c = add i32 %v0_15a5c, 1
  br label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %bb30, %dec_label_pc_15a9c
  %v0_15ac8 = phi i32 [ %v1_15a887, %bb30 ], [ %storemerge, %dec_label_pc_15a9c ]
  %v0_15ab89 = phi i32 [ %v0_15a5c, %bb30 ], [ %v1_15a9c, %dec_label_pc_15a9c ]
  br label %dec_label_pc_15ab8

dec_label_pc_15aac:                               ; preds = %dec_label_pc_15ab8
  %v2_15aac = mul i32 %v0_15aac, 10
  %v1_15ab0 = add i32 %v0_15ab0, 1
  %v2_15ab4 = sub i32 %v2_15aac, %v1_15abc
  br label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15aa0, %dec_label_pc_15aac
  %v0_15aac = phi i32 [ 0, %dec_label_pc_15aa0 ], [ %v2_15ab4, %dec_label_pc_15aac ]
  %v0_15ab0 = phi i32 [ %v0_15ab89, %dec_label_pc_15aa0 ], [ %v1_15ab0, %dec_label_pc_15aac ]
  %v1_15ab8 = inttoptr i32 %v0_15ab0 to i8*
  %v2_15ab8 = load i8, i8* %v1_15ab8, align 1
  %v3_15ab8 = zext i8 %v2_15ab8 to i32
  %v1_15abc = add nsw i32 %v3_15ab8, -48
  %tmp = icmp ult i32 %v1_15abc, 10
  br i1 %tmp, label %dec_label_pc_15aac, label %dec_label_pc_15ac8

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15ab8
  %v2_15ac8 = icmp eq i32 %v0_15ac8, 0
  br i1 %v2_15ac8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15ac8
  %v2_15acc = sub i32 0, %v0_15aac
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_15ac8, %bb32
  %v0_15ad0 = phi i32 [ %v0_15aac, %dec_label_pc_15ac8 ], [ %v2_15acc, %bb32 ]
  ret i32 %v0_15ad0

; uselistorder directives
  uselistorder i32 %v0_15ab0, { 1, 0 }
  uselistorder i32 %v1_15a887, { 1, 0 }
  uselistorder i1 %v8_15a6c, { 1, 0 }
  uselistorder i32 %v0_15a5c, { 0, 1, 3, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 15, 9, 10, 11, 0, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_15ab8, { 1, 0 }
  uselistorder label %dec_label_pc_15aa0, { 1, 0 }
  uselistorder label %dec_label_pc_15a9c, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_15a60, { 1, 0 }
  uselistorder label %dec_label_pc_15a5c, { 1, 0 }
}

define i32 @function_15adc() local_unnamed_addr {
dec_label_pc_15adc:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v6_15adc = load i32, i32* @r5, align 4
  %v9_15adc = load i32, i32* @r6, align 4
  %v12_15adc = load i32, i32* @r7, align 4
  %v0_15ae0 = load i32, i32* @r0, align 4
  store i32 %v0_15ae0, i32* @r5, align 4
  %v1_15ae0 = icmp slt i32 %v0_15ae0, 0
  %v4_15aec = add i32 %v0_15ae0, 2147483647
  %storemerge = select i1 %v1_15ae0, i32 -1, i32 %v4_15aec
  %v2_15af0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_15af0, i32* @r4, align 4
  %v0_15af4 = load i32, i32* @r1, align 4
  store i32 %v0_15af4, i32* @r7, align 4
  %v0_15b00 = load i32, i32* @r2, align 4
  store i32 %v0_15b00, i32* @r6, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v7_15b24 = call i32 @function_17234(i32 %v2_15af0, i32 0, i32 0, i32 0, i32 0, i32 %v0_15ae0, i32 %storemerge)
  store i32 %tmp3, i32* @r4, align 4
  %v0_15b34 = load i32, i32* @r6, align 4
  %v6_15b40 = sext i32 %v0_15b34 to i64
  %v7_15b40 = call i32 @function_16a74(i32 %v2_15af0, i64 %v6_15b40, i32 1, i32 %tmp12, i32 %tmp12, i32 %tmp3)
  %v0_15b44 = load i32, i32* @r7, align 4
  %v2_15b44 = icmp eq i32 %v0_15b44, 0
  br i1 %v2_15b44, label %dec_label_pc_15b68, label %dec_label_pc_15b4c

dec_label_pc_15b4c:                               ; preds = %dec_label_pc_15adc
  %v0_15b60 = load i32, i32* @r5, align 4
  %v2_15b54 = add i32 %v0_15ae0, %tmp
  %v2_15b5c = sub i32 %v2_15b54, %storemerge
  %v2_15b60 = add i32 %v2_15b5c, %v0_15b60
  %v2_15b64 = inttoptr i32 %v0_15b44 to i32*
  store i32 %v2_15b60, i32* %v2_15b64, align 4
  br label %dec_label_pc_15b68

dec_label_pc_15b68:                               ; preds = %dec_label_pc_15adc, %dec_label_pc_15b4c
  store i32 %v6_15adc, i32* @r5, align 4
  store i32 %v9_15adc, i32* @r6, align 4
  store i32 %v12_15adc, i32* @r7, align 4
  ret i32 %v7_15b40

; uselistorder directives
  uselistorder i32 %v2_15af0, { 1, 0, 2 }
  uselistorder i32 %v0_15ae0, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15b68, { 1, 0 }
}

define i32 @function_15b74() local_unnamed_addr {
dec_label_pc_15b74:
  store i32 0, i32* @r4, align 4
  %v0_15b88 = call i32 @function_15adc()
  ret i32 %v0_15b88
}

define i32 @function_15b98(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15b98:
  %v3_15b98 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_15bac = call i32 @function_15adc()
  store i32 %v3_15b98, i32* @r4, align 4
  ret i32 %v0_15bac
}

define i32 @function_15bbc() local_unnamed_addr {
dec_label_pc_15bbc:
  store i32 -2147483648, i32* @r4, align 4
  %v0_15bd0 = call i32 @function_15adc()
  ret i32 %v0_15bd0
}

define i32 @function_15be4() local_unnamed_addr {
dec_label_pc_15be4:
  store i32 -1, i32* @r4, align 4
  %v0_15bf8 = call i32 @function_15adc()
  ret i32 %v0_15bf8

; uselistorder directives
  uselistorder i32 ()* @function_15adc, { 3, 2, 0, 1 }
}

define i32 @function_15c0c(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c0c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_15c0c = load i32, i32* %r0.global-to-local, align 4
  %v8_15c0c = load i32, i32* @r4, align 4
  %v11_15c0c = load i32, i32* @lr, align 4
  %v0_15c14 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c14 = add i32 %v0_15c14, -4
  %v2_15c14 = icmp ugt i32 %v0_15c14, 3
  store i1 %v2_15c14, i1* %cpsr_c.global-to-local, align 1
  %v6_15c14 = icmp slt i32 %v1_15c14, 0
  store i1 %v6_15c14, i1* %cpsr_n.global-to-local, align 1
  %v3_15c18 = icmp ult i32 %v0_15c14, 2
  br i1 %v3_15c18, label %dec_label_pc_15ee8, label %dec_label_pc_15c1c

dec_label_pc_15c1c:                               ; preds = %dec_label_pc_15c0c
  %v0_15c1c = load i32, i32* %r1.global-to-local, align 4
  %v1_15c1c = sub i32 0, %v0_15c1c
  %v1_15c20 = urem i32 %v1_15c1c, 4
  store i32 %v1_15c20, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c20 = icmp eq i32 %v1_15c20, 0
  br i1 %v2_15c20, label %.thread2, label %dec_label_pc_15c28

dec_label_pc_15c28:                               ; preds = %dec_label_pc_15c1c
  %v1_15c28 = and i32 %v1_15c1c, 2
  %v2_15c28 = icmp ne i32 %v1_15c28, 0
  store i1 %v2_15c28, i1* %cpsr_c.global-to-local, align 1
  %v3_15c28 = shl i32 %v1_15c1c, 31
  store i32 %v3_15c28, i32* %ip.global-to-local, align 4
  %v4_15c28 = icmp ne i32 %v3_15c28, 0
  store i1 %v4_15c28, i1* %cpsr_n.global-to-local, align 1
  %v2_15c2c = sub i32 %v0_15c14, %v1_15c20
  store i32 %v2_15c2c, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_15c20 to i8
  br i1 %v4_15c28, label %bb, label %bb128

bb:                                               ; preds = %dec_label_pc_15c28
  %v2_15c30 = inttoptr i32 %v0_15c1c to i8*
  %v3_15c30 = load i8, i8* %v2_15c30, align 1
  %v4_15c30 = zext i8 %v3_15c30 to i32
  store i32 %v4_15c30, i32* @r3, align 4
  %v6_15c30 = add i32 %v0_15c1c, 1
  store i32 %v6_15c30, i32* %r1.global-to-local, align 4
  br label %bb128

bb128:                                            ; preds = %dec_label_pc_15c28, %bb
  %v1_15c3c.off0 = phi i8 [ %extract.t, %dec_label_pc_15c28 ], [ %v3_15c30, %bb ]
  %v1_15c34 = phi i32 [ %v0_15c1c, %dec_label_pc_15c28 ], [ %v6_15c30, %bb ]
  %extract.t191 = trunc i32 %v8_15c0c to i8
  br i1 %v2_15c28, label %bb129, label %.thread

bb129:                                            ; preds = %bb128
  %v2_15c34 = inttoptr i32 %v1_15c34 to i8*
  %v3_15c34 = load i8, i8* %v2_15c34, align 1
  %v4_15c34 = zext i8 %v3_15c34 to i32
  store i32 %v4_15c34, i32* @r4, align 4
  %v6_15c34 = add i32 %v1_15c34, 1
  store i32 %v6_15c34, i32* %r1.global-to-local, align 4
  %v2_15c38 = inttoptr i32 %v6_15c34 to i8*
  %v3_15c38 = load i8, i8* %v2_15c38, align 1
  %v4_15c38 = zext i8 %v3_15c38 to i32
  store i32 %v4_15c38, i32* %ip.global-to-local, align 4
  %v6_15c38 = add i32 %v1_15c34, 2
  store i32 %v6_15c38, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb128, %bb129
  %v1_15c40182.off0 = phi i8 [ %extract.t191, %bb128 ], [ %v3_15c34, %bb129 ]
  br i1 %v4_15c28, label %bb130, label %bb131

bb130:                                            ; preds = %.thread
  %v4_15c3c = inttoptr i32 %v3_15c0c to i8*
  store i8 %v1_15c3c.off0, i8* %v4_15c3c, align 1
  %v5_15c3c = load i32, i32* %r0.global-to-local, align 4
  %v6_15c3c = add i32 %v5_15c3c, 1
  store i32 %v6_15c3c, i32* %r0.global-to-local, align 4
  %v0_15c40.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15c40.pre, label %bb130.bb132_crit_edge, label %.thread2

bb130.bb132_crit_edge:                            ; preds = %bb130
  %v1_15c40.pre = load i32, i32* @r4, align 4
  %extract.t189 = trunc i32 %v1_15c40.pre to i8
  br label %bb132

bb131:                                            ; preds = %.thread
  br i1 %v2_15c28, label %bb132, label %.thread2

bb132:                                            ; preds = %bb130.bb132_crit_edge, %bb131
  %v1_15c40.off0 = phi i8 [ %extract.t189, %bb130.bb132_crit_edge ], [ %v1_15c40182.off0, %bb131 ]
  %v3_15c4088 = phi i32 [ %v6_15c3c, %bb130.bb132_crit_edge ], [ %v3_15c0c, %bb131 ]
  %v4_15c40 = inttoptr i32 %v3_15c4088 to i8*
  store i8 %v1_15c40.off0, i8* %v4_15c40, align 1
  %v5_15c40 = load i32, i32* %r0.global-to-local, align 4
  %v6_15c40 = add i32 %v5_15c40, 1
  store i32 %v6_15c40, i32* %r0.global-to-local, align 4
  %v0_15c44.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15c44.pr, label %bb133, label %.thread2

bb133:                                            ; preds = %bb132
  %v1_15c44 = load i32, i32* %ip.global-to-local, align 4
  %v2_15c44 = trunc i32 %v1_15c44 to i8
  %v4_15c44 = inttoptr i32 %v6_15c40 to i8*
  store i8 %v2_15c44, i8* %v4_15c44, align 1
  %v5_15c44 = load i32, i32* %r0.global-to-local, align 4
  %v6_15c44 = add i32 %v5_15c44, 1
  store i32 %v6_15c44, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb130, %bb131, %dec_label_pc_15c1c, %bb132, %bb133
  %v1_15c78 = phi i32 [ %v3_15c0c, %bb131 ], [ %v3_15c0c, %dec_label_pc_15c1c ], [ %v6_15c40, %bb132 ], [ %v6_15c44, %bb133 ], [ %v6_15c3c, %bb130 ]
  %v1_15c48 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c48 = xor i32 %v1_15c48, %v1_15c78
  store i32 %v2_15c48, i32* @ip, align 4
  %v1_15c4c = urem i32 %v2_15c48, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c4c = icmp eq i32 %v1_15c4c, 0
  br i1 %v2_15c4c, label %dec_label_pc_15c54, label %dec_label_pc_15cfc

dec_label_pc_15c54:                               ; preds = %.thread2
  %v2_15c54 = load i32, i32* @r5, align 4
  store i32 %v2_15c54, i32* %stack_var_-40, align 4
  %v5_15c54 = load i32, i32* @r6, align 4
  %v8_15c54 = load i32, i32* @r7, align 4
  %v11_15c54 = load i32, i32* @r8, align 4
  %v14_15c54 = load i32, i32* @sb, align 4
  %v17_15c54 = load i32, i32* @sl, align 4
  %v20_15c54 = load i32, i32* @fp, align 4
  %v1_15c58 = sub i32 0, %v1_15c78
  %v1_15c5c = and i32 %v1_15c58, 28
  store i32 %v1_15c5c, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c5c = icmp eq i32 %v1_15c5c, 0
  %v0_15c90.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_15c5c, label %dec_label_pc_15c90, label %dec_label_pc_15c64

dec_label_pc_15c64:                               ; preds = %dec_label_pc_15c54
  %v2_15c64 = sub i32 %v1_15c5c, %v0_15c90.pre
  %v3_15c64 = icmp uge i32 %v1_15c5c, %v0_15c90.pre
  store i1 %v3_15c64, i1* %cpsr_c.global-to-local, align 1
  %v8_15c64 = icmp slt i32 %v2_15c64, 0
  store i1 %v8_15c64, i1* %cpsr_n.global-to-local, align 1
  %tmp197 = icmp ugt i32 %v1_15c5c, %v0_15c90.pre
  br i1 %tmp197, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_15c64
  %v5_15c68 = and i32 %v0_15c90.pre, 28
  store i32 %v5_15c68, i32* @r3, align 4
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_15c64, %bb134
  %v0_15c6c = phi i32 [ %v1_15c5c, %dec_label_pc_15c64 ], [ %v5_15c68, %bb134 ]
  %v1_15c6c = and i32 %v0_15c6c, 16
  %v2_15c6c = icmp ne i32 %v1_15c6c, 0
  store i1 %v2_15c6c, i1* %cpsr_c.global-to-local, align 1
  %v3_15c6c = mul i32 %v0_15c6c, 268435456
  store i32 %v3_15c6c, i32* @ip, align 4
  %v4_15c6c = icmp slt i32 %v3_15c6c, 0
  store i1 %v4_15c6c, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15c6c, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  %v2_15c70 = inttoptr i32 %v1_15c48 to i32*
  %v3_15c70 = load i32, i32* %v2_15c70, align 4
  store i32 %v3_15c70, i32* @r4, align 4
  %v4_15c70 = add i32 %v1_15c48, 4
  %v5_15c70 = inttoptr i32 %v4_15c70 to i32*
  %v6_15c70 = load i32, i32* %v5_15c70, align 4
  store i32 %v6_15c70, i32* @r5, align 4
  %v7_15c70 = add i32 %v1_15c48, 8
  %v8_15c70 = inttoptr i32 %v7_15c70 to i32*
  %v9_15c70 = load i32, i32* %v8_15c70, align 4
  store i32 %v9_15c70, i32* @r6, align 4
  %v10_15c70 = add i32 %v1_15c48, 12
  %v11_15c70 = inttoptr i32 %v10_15c70 to i32*
  %v12_15c70 = load i32, i32* %v11_15c70, align 4
  store i32 %v12_15c70, i32* @r7, align 4
  %v13_15c70 = add i32 %v1_15c48, 16
  store i32 %v13_15c70, i32* %r1.global-to-local, align 4
  br i1 %v4_15c6c, label %bb138, label %.thread89

bb137:                                            ; preds = %bb135
  br i1 %v4_15c6c, label %bb138, label %.thread93

bb138:                                            ; preds = %bb137, %bb136
  %v1_15c74 = phi i32 [ %v13_15c70, %bb136 ], [ %v1_15c48, %bb137 ]
  %v2_15c74 = inttoptr i32 %v1_15c74 to i32*
  %v3_15c74 = load i32, i32* %v2_15c74, align 4
  store i32 %v3_15c74, i32* @r8, align 4
  %v4_15c74 = add i32 %v1_15c74, 4
  %v5_15c74 = inttoptr i32 %v4_15c74 to i32*
  %v6_15c74 = load i32, i32* %v5_15c74, align 4
  store i32 %v6_15c74, i32* @sb, align 4
  %v7_15c74 = add i32 %v1_15c74, 8
  store i32 %v7_15c74, i32* %r1.global-to-local, align 4
  br i1 %v2_15c6c, label %bb138..thread89_crit_edge, label %.thread91

bb138..thread89_crit_edge:                        ; preds = %bb138
  %v3_15c78.pre = load i32, i32* @r4, align 4
  br label %.thread89

.thread89:                                        ; preds = %bb138..thread89_crit_edge, %bb136
  %v3_15c78 = phi i32 [ %v3_15c78.pre, %bb138..thread89_crit_edge ], [ %v3_15c70, %bb136 ]
  %v2_15c78 = inttoptr i32 %v1_15c78 to i32*
  store i32 %v3_15c78, i32* %v2_15c78, align 4
  %v4_15c78 = add i32 %v1_15c78, 4
  %v5_15c78 = inttoptr i32 %v4_15c78 to i32*
  %v6_15c78 = load i32, i32* @r5, align 4
  store i32 %v6_15c78, i32* %v5_15c78, align 4
  %v7_15c78 = add i32 %v1_15c78, 8
  %v8_15c78 = inttoptr i32 %v7_15c78 to i32*
  %v9_15c78 = load i32, i32* @r6, align 4
  store i32 %v9_15c78, i32* %v8_15c78, align 4
  %v10_15c78 = add i32 %v1_15c78, 12
  %v11_15c78 = inttoptr i32 %v10_15c78 to i32*
  %v12_15c78 = load i32, i32* @r7, align 4
  store i32 %v12_15c78, i32* %v11_15c78, align 4
  %v13_15c78 = add i32 %v1_15c78, 16
  store i32 %v13_15c78, i32* %r0.global-to-local, align 4
  br i1 %v4_15c6c, label %.thread89..thread91_crit_edge, label %.thread93

.thread89..thread91_crit_edge:                    ; preds = %.thread89
  %v3_15c7c.pre = load i32, i32* @r8, align 4
  br label %.thread91

.thread91:                                        ; preds = %.thread89..thread91_crit_edge, %bb138
  %v3_15c7c = phi i32 [ %v3_15c7c.pre, %.thread89..thread91_crit_edge ], [ %v3_15c74, %bb138 ]
  %v1_15c7c92 = phi i32 [ %v13_15c78, %.thread89..thread91_crit_edge ], [ %v1_15c78, %bb138 ]
  %v2_15c7c = inttoptr i32 %v1_15c7c92 to i32*
  store i32 %v3_15c7c, i32* %v2_15c7c, align 4
  %v4_15c7c = add i32 %v1_15c7c92, 4
  %v5_15c7c = inttoptr i32 %v4_15c7c to i32*
  %v6_15c7c = load i32, i32* @sb, align 4
  store i32 %v6_15c7c, i32* %v5_15c7c, align 4
  %v7_15c7c = add i32 %v1_15c7c92, 8
  store i32 %v7_15c7c, i32* %r0.global-to-local, align 4
  br label %.thread93

.thread93:                                        ; preds = %bb137, %.thread89, %.thread91
  %v2_15c88 = phi i32 [ %v13_15c78, %.thread89 ], [ %v7_15c7c, %.thread91 ], [ %v1_15c78, %bb137 ]
  %v0_15c80 = load i32, i32* @r3, align 4
  %v1_15c80 = and i32 %v0_15c80, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c80 = icmp eq i32 %v1_15c80, 0
  br i1 %v2_15c80, label %.thread3, label %bb139

bb139:                                            ; preds = %.thread93
  %v1_15c84 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c84 = inttoptr i32 %v1_15c84 to i32*
  %v3_15c84 = load i32, i32* %v2_15c84, align 4
  store i32 %v3_15c84, i32* %sl.global-to-local, align 4
  %v5_15c84 = add i32 %v1_15c84, 4
  store i32 %v5_15c84, i32* %r1.global-to-local, align 4
  %v3_15c88 = inttoptr i32 %v2_15c88 to i32*
  store i32 %v3_15c84, i32* %v3_15c88, align 4
  %v4_15c88 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c88 = add i32 %v4_15c88, 4
  store i32 %v5_15c88, i32* %r0.global-to-local, align 4
  %v1_15c8c.pre = load i32, i32* @r3, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread93, %bb139
  %v0_15ca065 = phi i32 [ %v2_15c88, %.thread93 ], [ %v5_15c88, %bb139 ]
  %v1_15c8c = phi i32 [ %v0_15c80, %.thread93 ], [ %v1_15c8c.pre, %bb139 ]
  %v0_15c8c = load i32, i32* %r2.global-to-local, align 4
  %v2_15c8c = sub i32 %v0_15c8c, %v1_15c8c
  store i32 %v2_15c8c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c90

dec_label_pc_15c90:                               ; preds = %dec_label_pc_15c54, %.thread3
  %v0_15ca064 = phi i32 [ %v0_15ca065, %.thread3 ], [ %v1_15c78, %dec_label_pc_15c54 ]
  %v0_15c90 = phi i32 [ %v2_15c8c, %.thread3 ], [ %v0_15c90.pre, %dec_label_pc_15c54 ]
  %v1_15c90 = add i32 %v0_15c90, -32
  store i32 %v1_15c90, i32* @r2, align 4
  %v2_15c90 = icmp ugt i32 %v0_15c90, 31
  store i1 %v2_15c90, i1* %cpsr_c.global-to-local, align 1
  %v6_15c90 = icmp slt i32 %v1_15c90, 0
  store i1 %v6_15c90, i1* %cpsr_n.global-to-local, align 1
  %v3_15c94 = icmp ult i32 %v1_15c90, 30
  br i1 %v3_15c94, label %dec_label_pc_15cac, label %dec_label_pc_15c98

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c90, %dec_label_pc_15c98.dec_label_pc_15c98_crit_edge
  %v0_15ca0 = phi i32 [ %v24_15ca0, %dec_label_pc_15c98.dec_label_pc_15c98_crit_edge ], [ %v0_15ca064, %dec_label_pc_15c90 ]
  %v0_15c9c = phi i32 [ %v0_15c9c.pre, %dec_label_pc_15c98.dec_label_pc_15c98_crit_edge ], [ %v1_15c90, %dec_label_pc_15c90 ]
  %v0_15c98 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c98 = inttoptr i32 %v0_15c98 to i32*
  %v2_15c98 = load i32, i32* %v1_15c98, align 4
  store i32 %v2_15c98, i32* @r4, align 4
  %v3_15c98 = add i32 %v0_15c98, 4
  %v4_15c98 = inttoptr i32 %v3_15c98 to i32*
  %v5_15c98 = load i32, i32* %v4_15c98, align 4
  store i32 %v5_15c98, i32* @r5, align 4
  %v6_15c98 = add i32 %v0_15c98, 8
  %v7_15c98 = inttoptr i32 %v6_15c98 to i32*
  %v8_15c98 = load i32, i32* %v7_15c98, align 4
  store i32 %v8_15c98, i32* @r6, align 4
  %v9_15c98 = add i32 %v0_15c98, 12
  %v10_15c98 = inttoptr i32 %v9_15c98 to i32*
  %v11_15c98 = load i32, i32* %v10_15c98, align 4
  store i32 %v11_15c98, i32* @r7, align 4
  %v12_15c98 = add i32 %v0_15c98, 16
  %v13_15c98 = inttoptr i32 %v12_15c98 to i32*
  %v14_15c98 = load i32, i32* %v13_15c98, align 4
  store i32 %v14_15c98, i32* @r8, align 4
  %v15_15c98 = add i32 %v0_15c98, 20
  %v16_15c98 = inttoptr i32 %v15_15c98 to i32*
  %v17_15c98 = load i32, i32* %v16_15c98, align 4
  store i32 %v17_15c98, i32* @sb, align 4
  %v18_15c98 = add i32 %v0_15c98, 24
  %v19_15c98 = inttoptr i32 %v18_15c98 to i32*
  %v20_15c98 = load i32, i32* %v19_15c98, align 4
  store i32 %v20_15c98, i32* %sl.global-to-local, align 4
  %v21_15c98 = add i32 %v0_15c98, 28
  %v22_15c98 = inttoptr i32 %v21_15c98 to i32*
  %v23_15c98 = load i32, i32* %v22_15c98, align 4
  store i32 %v23_15c98, i32* %fp.global-to-local, align 4
  %v24_15c98 = add i32 %v0_15c98, 32
  store i32 %v24_15c98, i32* %r1.global-to-local, align 4
  %v1_15c9c = add i32 %v0_15c9c, -32
  store i32 %v1_15c9c, i32* %r2.global-to-local, align 4
  %v2_15c9c = icmp ugt i32 %v0_15c9c, 31
  %v1_15ca0 = inttoptr i32 %v0_15ca0 to i32*
  store i32 %v2_15c98, i32* %v1_15ca0, align 4
  %v3_15ca0 = add i32 %v0_15ca0, 4
  %v4_15ca0 = inttoptr i32 %v3_15ca0 to i32*
  %v5_15ca0 = load i32, i32* @r5, align 4
  store i32 %v5_15ca0, i32* %v4_15ca0, align 4
  %v6_15ca0 = add i32 %v0_15ca0, 8
  %v7_15ca0 = inttoptr i32 %v6_15ca0 to i32*
  %v8_15ca0 = load i32, i32* @r6, align 4
  store i32 %v8_15ca0, i32* %v7_15ca0, align 4
  %v9_15ca0 = add i32 %v0_15ca0, 12
  %v10_15ca0 = inttoptr i32 %v9_15ca0 to i32*
  %v11_15ca0 = load i32, i32* @r7, align 4
  store i32 %v11_15ca0, i32* %v10_15ca0, align 4
  %v12_15ca0 = add i32 %v0_15ca0, 16
  %v13_15ca0 = inttoptr i32 %v12_15ca0 to i32*
  %v14_15ca0 = load i32, i32* @r8, align 4
  store i32 %v14_15ca0, i32* %v13_15ca0, align 4
  %v15_15ca0 = add i32 %v0_15ca0, 20
  %v16_15ca0 = inttoptr i32 %v15_15ca0 to i32*
  %v17_15ca0 = load i32, i32* @sb, align 4
  store i32 %v17_15ca0, i32* %v16_15ca0, align 4
  %v18_15ca0 = add i32 %v0_15ca0, 24
  %v19_15ca0 = inttoptr i32 %v18_15ca0 to i32*
  %v20_15ca0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v20_15ca0, i32* %v19_15ca0, align 4
  %v21_15ca0 = add i32 %v0_15ca0, 28
  %v22_15ca0 = inttoptr i32 %v21_15ca0 to i32*
  %v23_15ca0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v23_15ca0, i32* %v22_15ca0, align 4
  %v24_15ca0 = add i32 %v0_15ca0, 32
  store i32 %v24_15ca0, i32* %r0.global-to-local, align 4
  br i1 %v2_15c9c, label %dec_label_pc_15c98.dec_label_pc_15c98_crit_edge, label %dec_label_pc_15ca8

dec_label_pc_15c98.dec_label_pc_15c98_crit_edge:  ; preds = %dec_label_pc_15c98
  %v0_15c9c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c98

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c98
  %v6_15c9c = icmp slt i32 %v1_15c9c, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15c9c, i1* %cpsr_n.global-to-local, align 1
  %v0_15ca8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ca8 = add i32 %v0_15ca8, 32
  store i32 %v1_15ca8, i32* @r2, align 4
  br label %dec_label_pc_15cac

dec_label_pc_15cac:                               ; preds = %dec_label_pc_15c90, %dec_label_pc_15ca8
  %v1_15cc0 = phi i32 [ %v0_15ca064, %dec_label_pc_15c90 ], [ %v24_15ca0, %dec_label_pc_15ca8 ]
  %v0_15cb4 = phi i32 [ %v1_15c90, %dec_label_pc_15c90 ], [ %v1_15ca8, %dec_label_pc_15ca8 ]
  %v1_15cac = urem i32 %v0_15cb4, 32
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15cac = icmp eq i32 %v1_15cac, 0
  br i1 %v2_15cac, label %.thread4, label %dec_label_pc_15cb4

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15cac
  %v1_15cb4 = and i32 %v0_15cb4, 16
  %v2_15cb4 = icmp ne i32 %v1_15cb4, 0
  store i1 %v2_15cb4, i1* %cpsr_c.global-to-local, align 1
  %v3_15cb4 = mul i32 %v0_15cb4, 268435456
  store i32 %v3_15cb4, i32* %ip.global-to-local, align 4
  %v4_15cb4 = icmp slt i32 %v3_15cb4, 0
  store i1 %v4_15cb4, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15cb4, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_15cb4
  %v1_15cb8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15cb8 = inttoptr i32 %v1_15cb8 to i32*
  %v3_15cb8 = load i32, i32* %v2_15cb8, align 4
  store i32 %v3_15cb8, i32* @r4, align 4
  %v4_15cb8 = add i32 %v1_15cb8, 4
  %v5_15cb8 = inttoptr i32 %v4_15cb8 to i32*
  %v6_15cb8 = load i32, i32* %v5_15cb8, align 4
  store i32 %v6_15cb8, i32* @r5, align 4
  %v7_15cb8 = add i32 %v1_15cb8, 8
  %v8_15cb8 = inttoptr i32 %v7_15cb8 to i32*
  %v9_15cb8 = load i32, i32* %v8_15cb8, align 4
  store i32 %v9_15cb8, i32* @r6, align 4
  %v10_15cb8 = add i32 %v1_15cb8, 12
  %v11_15cb8 = inttoptr i32 %v10_15cb8 to i32*
  %v12_15cb8 = load i32, i32* %v11_15cb8, align 4
  store i32 %v12_15cb8, i32* @r7, align 4
  %v13_15cb8 = add i32 %v1_15cb8, 16
  store i32 %v13_15cb8, i32* %r1.global-to-local, align 4
  br i1 %v4_15cb4, label %bb142, label %.thread94

bb141:                                            ; preds = %dec_label_pc_15cb4
  br i1 %v4_15cb4, label %._crit_edge, label %.thread98

._crit_edge:                                      ; preds = %bb141
  %v1_15cbc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140, %._crit_edge
  %v1_15cbc = phi i32 [ %v1_15cbc.pre, %._crit_edge ], [ %v13_15cb8, %bb140 ]
  %v2_15cbc = inttoptr i32 %v1_15cbc to i32*
  %v3_15cbc = load i32, i32* %v2_15cbc, align 4
  store i32 %v3_15cbc, i32* @r8, align 4
  %v4_15cbc = add i32 %v1_15cbc, 4
  %v5_15cbc = inttoptr i32 %v4_15cbc to i32*
  %v6_15cbc = load i32, i32* %v5_15cbc, align 4
  store i32 %v6_15cbc, i32* @sb, align 4
  %v7_15cbc = add i32 %v1_15cbc, 8
  store i32 %v7_15cbc, i32* %r1.global-to-local, align 4
  br i1 %v2_15cb4, label %bb142..thread94_crit_edge, label %.thread96

bb142..thread94_crit_edge:                        ; preds = %bb142
  %v3_15cc0.pre = load i32, i32* @r4, align 4
  br label %.thread94

.thread94:                                        ; preds = %bb142..thread94_crit_edge, %bb140
  %v3_15cc0 = phi i32 [ %v3_15cc0.pre, %bb142..thread94_crit_edge ], [ %v3_15cb8, %bb140 ]
  %v2_15cc0 = inttoptr i32 %v1_15cc0 to i32*
  store i32 %v3_15cc0, i32* %v2_15cc0, align 4
  %v4_15cc0 = add i32 %v1_15cc0, 4
  %v5_15cc0 = inttoptr i32 %v4_15cc0 to i32*
  %v6_15cc0 = load i32, i32* @r5, align 4
  store i32 %v6_15cc0, i32* %v5_15cc0, align 4
  %v7_15cc0 = add i32 %v1_15cc0, 8
  %v8_15cc0 = inttoptr i32 %v7_15cc0 to i32*
  %v9_15cc0 = load i32, i32* @r6, align 4
  store i32 %v9_15cc0, i32* %v8_15cc0, align 4
  %v10_15cc0 = add i32 %v1_15cc0, 12
  %v11_15cc0 = inttoptr i32 %v10_15cc0 to i32*
  %v12_15cc0 = load i32, i32* @r7, align 4
  store i32 %v12_15cc0, i32* %v11_15cc0, align 4
  %v13_15cc0 = add i32 %v1_15cc0, 16
  store i32 %v13_15cc0, i32* %r0.global-to-local, align 4
  br i1 %v4_15cb4, label %.thread94..thread96_crit_edge, label %.thread98

.thread94..thread96_crit_edge:                    ; preds = %.thread94
  %v3_15cc4.pre = load i32, i32* @r8, align 4
  br label %.thread96

.thread96:                                        ; preds = %.thread94..thread96_crit_edge, %bb142
  %v3_15cc4 = phi i32 [ %v3_15cc4.pre, %.thread94..thread96_crit_edge ], [ %v3_15cbc, %bb142 ]
  %v1_15cc497 = phi i32 [ %v13_15cc0, %.thread94..thread96_crit_edge ], [ %v1_15cc0, %bb142 ]
  %v2_15cc4 = inttoptr i32 %v1_15cc497 to i32*
  store i32 %v3_15cc4, i32* %v2_15cc4, align 4
  %v4_15cc4 = add i32 %v1_15cc497, 4
  %v5_15cc4 = inttoptr i32 %v4_15cc4 to i32*
  %v6_15cc4 = load i32, i32* @sb, align 4
  store i32 %v6_15cc4, i32* %v5_15cc4, align 4
  %v7_15cc4 = add i32 %v1_15cc497, 8
  store i32 %v7_15cc4, i32* %r0.global-to-local, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb141, %.thread94, %.thread96
  %v2_15cd4 = phi i32 [ %v13_15cc0, %.thread94 ], [ %v7_15cc4, %.thread96 ], [ %v1_15cc0, %bb141 ]
  %v0_15cc8 = load i32, i32* @r2, align 4
  %v1_15cc8 = and i32 %v0_15cc8, 4
  %v2_15cc8 = icmp ne i32 %v1_15cc8, 0
  store i1 %v2_15cc8, i1* %cpsr_c.global-to-local, align 1
  %v3_15cc8 = mul i32 %v0_15cc8, 1073741824
  store i32 %v3_15cc8, i32* @ip, align 4
  %v4_15cc8 = icmp slt i32 %v3_15cc8, 0
  store i1 %v4_15cc8, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15cc8, label %bb143, label %bb144

bb143:                                            ; preds = %.thread98
  %v1_15ccc = load i32, i32* %r1.global-to-local, align 4
  %v2_15ccc = inttoptr i32 %v1_15ccc to i32*
  %v3_15ccc = load i32, i32* %v2_15ccc, align 4
  store i32 %v3_15ccc, i32* @r3, align 4
  %v5_15ccc = add i32 %v1_15ccc, 4
  store i32 %v5_15ccc, i32* %r1.global-to-local, align 4
  br i1 %v4_15cc8, label %.thread109, label %bb145

.thread109:                                       ; preds = %bb143
  %v2_15cd0102 = inttoptr i32 %v5_15ccc to i16*
  %v3_15cd0103 = load i16, i16* %v2_15cd0102, align 2
  %v4_15cd0104 = zext i16 %v3_15cd0103 to i32
  store i32 %v4_15cd0104, i32* %r4.global-to-local, align 4
  %v6_15cd0105 = add i32 %v1_15ccc, 2
  store i32 %v6_15cd0105, i32* %r1.global-to-local, align 4
  %v3_15cd4111 = inttoptr i32 %v2_15cd4 to i32*
  store i32 %v3_15ccc, i32* %v3_15cd4111, align 4
  %v4_15cd4112 = load i32, i32* %r0.global-to-local, align 4
  %v5_15cd4113 = add i32 %v4_15cd4112, 4
  store i32 %v5_15cd4113, i32* %r0.global-to-local, align 4
  %v1_15cd8.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t196 = trunc i32 %v1_15cd8.pre to i16
  br label %bb146

bb144:                                            ; preds = %.thread98
  br i1 %v4_15cc8, label %.thread106, label %.thread108

.thread106:                                       ; preds = %bb144
  %v1_15cd0.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_15cd0 = inttoptr i32 %v1_15cd0.pre to i16*
  %v3_15cd0 = load i16, i16* %v2_15cd0, align 2
  %v4_15cd0 = zext i16 %v3_15cd0 to i32
  store i32 %v4_15cd0, i32* %r4.global-to-local, align 4
  %v6_15cd0 = add i32 %v1_15cd0.pre, -2
  store i32 %v6_15cd0, i32* %r1.global-to-local, align 4
  br label %bb146

bb145:                                            ; preds = %bb143
  %v3_15cd4 = inttoptr i32 %v2_15cd4 to i32*
  store i32 %v3_15ccc, i32* %v3_15cd4, align 4
  %v4_15cd4 = load i32, i32* %r0.global-to-local, align 4
  %v5_15cd4 = add i32 %v4_15cd4, 4
  store i32 %v5_15cd4, i32* %r0.global-to-local, align 4
  br label %.thread108

bb146:                                            ; preds = %.thread109, %.thread106
  %v1_15cd8.off0 = phi i16 [ %v3_15cd0, %.thread106 ], [ %extract.t196, %.thread109 ]
  %v3_15cd8107 = phi i32 [ %v2_15cd4, %.thread106 ], [ %v5_15cd4113, %.thread109 ]
  %v4_15cd8 = inttoptr i32 %v3_15cd8107 to i16*
  store i16 %v1_15cd8.off0, i16* %v4_15cd8, align 2
  %v5_15cd8 = load i32, i32* %r0.global-to-local, align 4
  %v6_15cd8 = add i32 %v5_15cd8, -2
  store i32 %v6_15cd8, i32* %r0.global-to-local, align 4
  br label %.thread108

.thread108:                                       ; preds = %bb144, %bb145, %bb146
  %v3_15ce4 = phi i32 [ %v5_15cd4, %bb145 ], [ %v6_15cd8, %bb146 ], [ %v2_15cd4, %bb144 ]
  %v0_15cdc = load i32, i32* @r2, align 4
  %v1_15cdc = urem i32 %v0_15cdc, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15cdc = icmp eq i32 %v1_15cdc, 0
  br i1 %v2_15cdc, label %.thread4, label %bb147

bb147:                                            ; preds = %.thread108
  %v1_15ce0 = load i32, i32* %r1.global-to-local, align 4
  %v2_15ce0 = inttoptr i32 %v1_15ce0 to i8*
  %v3_15ce0 = load i8, i8* %v2_15ce0, align 1
  %v4_15ce0 = zext i8 %v3_15ce0 to i32
  store i32 %v4_15ce0, i32* @r3, align 4
  %v4_15ce4 = inttoptr i32 %v3_15ce4 to i8*
  store i8 %v3_15ce0, i8* %v4_15ce4, align 1
  br label %.thread4

.thread4:                                         ; preds = %.thread108, %dec_label_pc_15cac, %bb147
  %v2_15ce8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_15ce8, i32* @r5, align 4
  store i32 %v5_15c54, i32* @r6, align 4
  store i32 %v8_15c54, i32* @r7, align 4
  store i32 %v11_15c54, i32* @r8, align 4
  store i32 %v14_15c54, i32* @sb, align 4
  store i32 %v17_15c54, i32* @sl, align 4
  store i32 %v20_15c54, i32* @fp, align 4
  store i32 %v3_15c0c, i32* %r0.global-to-local, align 4
  store i32 %v8_15c0c, i32* @r4, align 4
  store i32 %v11_15c0c, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_15c0c

dec_label_pc_15cfc:                               ; preds = %.thread2
  %v0_15cfc = load i32, i32* %r2.global-to-local, align 4
  %v1_15cfc = add i32 %v0_15cfc, -4
  %v2_15cfc = icmp ugt i32 %v0_15cfc, 3
  store i1 %v2_15cfc, i1* %cpsr_c.global-to-local, align 1
  %v6_15cfc = icmp slt i32 %v1_15cfc, 0
  store i1 %v6_15cfc, i1* %cpsr_n.global-to-local, align 1
  %v3_15d00 = icmp ult i32 %v0_15cfc, 2
  br i1 %v3_15d00, label %dec_label_pc_15ee8, label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15cfc
  %v2_15d04 = load i32, i32* @r5, align 4
  store i32 %v2_15d04, i32* %stack_var_-40, align 4
  %v5_15d04 = load i32, i32* @r6, align 4
  %v8_15d04 = load i32, i32* @r7, align 4
  %v11_15d04 = load i32, i32* @r8, align 4
  %v14_15d04 = load i32, i32* @sb, align 4
  %v17_15d04 = load i32, i32* @sl, align 4
  %v20_15d04 = load i32, i32* @fp, align 4
  %v1_15d08 = sub i32 0, %v1_15c78
  %v1_15d0c = urem i32 %v1_15d08, 4
  store i32 %v1_15d0c, i32* %r5.global-to-local, align 4
  %v3_15d10 = mul nuw nsw i32 %v1_15d0c, 8
  store i32 %v3_15d10, i32* @ip, align 4
  %v1_15d14 = sub nsw i32 32, %v3_15d10
  store i32 %v1_15d14, i32* %lr.global-to-local, align 4
  %v1_15d18 = inttoptr i32 %v1_15c48 to i32*
  %v2_15d18 = load i32, i32* %v1_15d18, align 4
  store i32 %v2_15d18, i32* @r3, align 4
  %v4_15d18 = add i32 %v1_15c48, 4
  store i32 %v4_15d18, i32* %r1.global-to-local, align 4
  store i32 %v1_15cfc, i32* %r2.global-to-local, align 4
  %v1_15d20 = and i32 %v1_15d08, 2
  %v2_15d20 = icmp ne i32 %v1_15d20, 0
  store i1 %v2_15d20, i1* %cpsr_c.global-to-local, align 1
  %v3_15d20 = shl i32 %v1_15d08, 31
  store i32 %v3_15d20, i32* %r5.global-to-local, align 4
  %v4_15d20 = icmp ne i32 %v3_15d20, 0
  store i1 %v4_15d20, i1* %cpsr_n.global-to-local, align 1
  %v2_15d24 = trunc i32 %v2_15d18 to i8
  br i1 %v4_15d20, label %bb148, label %thread-pre-split

bb148:                                            ; preds = %dec_label_pc_15d04
  %v4_15d24 = inttoptr i32 %v1_15c78 to i8*
  store i8 %v2_15d24, i8* %v4_15d24, align 1
  %v5_15d24 = load i32, i32* %r0.global-to-local, align 4
  %v6_15d24 = add i32 %v5_15d24, 1
  store i32 %v6_15d24, i32* %r0.global-to-local, align 4
  %v0_15d28.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_15d28.pr, label %bb149, label %.thread-pre-split_crit_edge

.thread-pre-split_crit_edge:                      ; preds = %bb148
  %v0_15d2c.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d2c.pr.pre, label %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, label %.thread10

.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge: ; preds = %.thread-pre-split_crit_edge
  %v1_15d2c.pre.pre = load i32, i32* @r3, align 4
  %extract.t193 = trunc i32 %v1_15d2c.pre.pre to i8
  br label %bb150

thread-pre-split:                                 ; preds = %dec_label_pc_15d04
  br i1 %v2_15d20, label %bb150, label %.thread10

bb149:                                            ; preds = %bb148
  %v1_15d28 = load i32, i32* @r3, align 4
  %v2_15d28 = and i32 %v1_15d28, 128
  %v3_15d28 = icmp ne i32 %v2_15d28, 0
  store i1 %v3_15d28, i1* %cpsr_c.global-to-local, align 1
  %v4_15d28 = udiv i32 %v1_15d28, 256
  store i32 %v4_15d28, i32* @r3, align 4
  %extract.t87 = trunc i32 %v4_15d28 to i8
  br i1 %v3_15d28, label %bb150, label %.thread10

bb150:                                            ; preds = %thread-pre-split, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, %bb149
  %v3_15d2c = phi i32 [ %v6_15d24, %bb149 ], [ %v6_15d24, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v1_15c78, %thread-pre-split ]
  %v1_15d2c.off0 = phi i8 [ %extract.t87, %bb149 ], [ %extract.t193, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v2_15d24, %thread-pre-split ]
  %v4_15d2c = inttoptr i32 %v3_15d2c to i8*
  store i8 %v1_15d2c.off0, i8* %v4_15d2c, align 1
  %v5_15d2c = load i32, i32* %r0.global-to-local, align 4
  %v6_15d2c = add i32 %v5_15d2c, 1
  store i32 %v6_15d2c, i32* %r0.global-to-local, align 4
  %v0_15d30.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d30.pr, label %bb151, label %.thread10

bb151:                                            ; preds = %bb150
  %v1_15d30 = load i32, i32* @r3, align 4
  %v2_15d30 = and i32 %v1_15d30, 128
  %v3_15d30 = icmp ne i32 %v2_15d30, 0
  store i1 %v3_15d30, i1* %cpsr_c.global-to-local, align 1
  %v4_15d30 = udiv i32 %v1_15d30, 256
  store i32 %v4_15d30, i32* @r3, align 4
  br i1 %v3_15d30, label %.thread7, label %.thread10

.thread7:                                         ; preds = %bb151
  %v2_15d34 = trunc i32 %v4_15d30 to i8
  %v4_15d34 = inttoptr i32 %v6_15d2c to i8*
  store i8 %v2_15d34, i8* %v4_15d34, align 1
  %v5_15d34 = load i32, i32* %r0.global-to-local, align 4
  %v6_15d34 = add i32 %v5_15d34, 1
  store i32 %v6_15d34, i32* %r0.global-to-local, align 4
  %v0_15d38.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d38.pr.pr, label %bb152, label %.thread10

bb152:                                            ; preds = %.thread7
  %v1_15d38 = load i32, i32* @r3, align 4
  %v2_15d38 = and i32 %v1_15d38, 128
  %v3_15d38 = icmp ne i32 %v2_15d38, 0
  store i1 %v3_15d38, i1* %cpsr_c.global-to-local, align 1
  %v4_15d38 = udiv i32 %v1_15d38, 256
  store i32 %v4_15d38, i32* @r3, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread-pre-split_crit_edge, %bb150, %bb149, %thread-pre-split, %bb151, %.thread7, %bb152
  %v0_15d4431 = phi i32 [ %v6_15d2c, %bb150 ], [ %v6_15d24, %bb149 ], [ %v1_15c78, %thread-pre-split ], [ %v6_15d2c, %bb151 ], [ %v6_15d34, %.thread7 ], [ %v6_15d34, %bb152 ], [ %v6_15d24, %.thread-pre-split_crit_edge ]
  %v0_15d3c = load i32, i32* %r2.global-to-local, align 4
  %v1_15d3c = add i32 %v0_15d3c, -4
  %v2_15d3c = icmp ugt i32 %v0_15d3c, 3
  store i1 %v2_15d3c, i1* %cpsr_c.global-to-local, align 1
  %v6_15d3c = icmp slt i32 %v1_15d3c, 0
  store i1 %v6_15d3c, i1* %cpsr_n.global-to-local, align 1
  %v3_15d40 = icmp ult i32 %v0_15d3c, 2
  br i1 %v3_15d40, label %dec_label_pc_15ecc, label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %.thread10, %dec_label_pc_15d4c
  %v0_15d50 = phi i32 [ %v0_15d60, %dec_label_pc_15d4c ], [ %v0_15d3c, %.thread10 ]
  %v1_15d5c = phi i32 [ %v4_15d5c, %dec_label_pc_15d4c ], [ %v0_15d4431, %.thread10 ]
  %v1_15d44 = and i32 %v1_15d5c, 28
  %v2_15d44 = icmp eq i32 %v1_15d44, 0
  br i1 %v2_15d44, label %dec_label_pc_15d6c.loopexit, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d44
  %v0_15d4c = load i32, i32* %r1.global-to-local, align 4
  %v1_15d4c = inttoptr i32 %v0_15d4c to i32*
  %v2_15d4c = load i32, i32* %v1_15d4c, align 4
  store i32 %v2_15d4c, i32* %r5.global-to-local, align 4
  %v4_15d4c = add i32 %v0_15d4c, 4
  store i32 %v4_15d4c, i32* %r1.global-to-local, align 4
  %v1_15d50 = add i32 %v0_15d50, -4
  store i32 %v1_15d50, i32* %r2.global-to-local, align 4
  %v0_15d54 = load i32, i32* @r3, align 4
  %v2_15d54 = load i32, i32* %lr.global-to-local, align 4
  %v7_15d54 = shl i32 %v2_15d4c, %v2_15d54
  %v8_15d54 = or i32 %v7_15d54, %v0_15d54
  store i32 %v8_15d54, i32* %r4.global-to-local, align 4
  %v1_15d58 = load i32, i32* @ip, align 4
  %v6_15d58 = lshr i32 %v2_15d4c, %v1_15d58
  store i32 %v6_15d58, i32* @r3, align 4
  %v2_15d5c = inttoptr i32 %v1_15d5c to i32*
  store i32 %v8_15d54, i32* %v2_15d5c, align 4
  %v3_15d5c = load i32, i32* %r0.global-to-local, align 4
  %v4_15d5c = add i32 %v3_15d5c, 4
  store i32 %v4_15d5c, i32* %r0.global-to-local, align 4
  %v0_15d60 = load i32, i32* %r2.global-to-local, align 4
  %v2_15d60 = icmp ugt i32 %v0_15d60, 3
  store i1 %v2_15d60, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15d60, label %dec_label_pc_15d44, label %dec_label_pc_15d68

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15d4c
  %v1_15d60 = add i32 %v0_15d60, -4
  %v6_15d60 = icmp slt i32 %v1_15d60, 0
  store i1 %v6_15d60, i1* %cpsr_n.global-to-local, align 1
  %v3_15d68 = icmp ult i32 %v0_15d60, 2
  br i1 %v3_15d68, label %dec_label_pc_15ecc, label %dec_label_pc_15d6c

dec_label_pc_15d6c.loopexit:                      ; preds = %dec_label_pc_15d44
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d6c.loopexit, %dec_label_pc_15d68
  %v0_15dd438 = phi i32 [ %v1_15d5c, %dec_label_pc_15d6c.loopexit ], [ %v4_15d5c, %dec_label_pc_15d68 ]
  %v0_15d6c = phi i32 [ %v0_15d50, %dec_label_pc_15d6c.loopexit ], [ %v0_15d60, %dec_label_pc_15d68 ]
  %v1_15d6c = add i32 %v0_15d6c, -32
  store i32 %v1_15d6c, i32* %r2.global-to-local, align 4
  %v2_15d6c = icmp ugt i32 %v0_15d6c, 31
  store i1 %v2_15d6c, i1* %cpsr_c.global-to-local, align 1
  %v6_15d6c = icmp slt i32 %v1_15d6c, 0
  store i1 %v6_15d6c, i1* %cpsr_n.global-to-local, align 1
  %v3_15d70 = icmp ult i32 %v1_15d6c, 30
  br i1 %v3_15d70, label %dec_label_pc_15ea0, label %dec_label_pc_15d74

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d6c
  %v0_15d74 = load i32, i32* @ip, align 4
  %v1_15d74 = add i32 %v0_15d74, -24
  %v2_15d74 = icmp ugt i32 %v0_15d74, 23
  store i1 %v2_15d74, i1* %cpsr_c.global-to-local, align 1
  %v6_15d74 = icmp slt i32 %v1_15d74, 0
  store i1 %v6_15d74, i1* %cpsr_n.global-to-local, align 1
  %v7_15d74 = icmp eq i32 %v0_15d74, 24
  br i1 %v7_15d74, label %dec_label_pc_15e44, label %dec_label_pc_15d7c

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d74
  %v1_15d7c = add i32 %v0_15d74, -8
  %v2_15d7c = icmp ugt i32 %v0_15d74, 7
  store i1 %v2_15d7c, i1* %cpsr_c.global-to-local, align 1
  %v6_15d7c = icmp slt i32 %v1_15d7c, 0
  store i1 %v6_15d7c, i1* %cpsr_n.global-to-local, align 1
  %v7_15d7c = icmp eq i32 %v0_15d74, 8
  %v0_15de4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15de4 = inttoptr i32 %v0_15de4 to i32*
  %v2_15de4 = load i32, i32* %v1_15de4, align 4
  store i32 %v2_15de4, i32* %ip.global-to-local, align 4
  %v4_15de4 = add i32 %v0_15de4, 4
  store i32 %v4_15de4, i32* %r1.global-to-local, align 4
  br i1 %v7_15d7c, label %dec_label_pc_15de8, label %dec_label_pc_15d88

dec_label_pc_15d88:                               ; preds = %dec_label_pc_15d7c, %.dec_label_pc_15d88_crit_edge
  %v0_15dd4 = phi i32 [ %v24_15dd4, %.dec_label_pc_15d88_crit_edge ], [ %v0_15dd438, %dec_label_pc_15d7c ]
  %v0_15d90 = phi i32 [ %v0_15d90.pre, %.dec_label_pc_15d88_crit_edge ], [ %v1_15d6c, %dec_label_pc_15d7c ]
  %v0_15d8c = phi i32 [ %v0_15d8c.pre, %.dec_label_pc_15d88_crit_edge ], [ %v4_15de4, %dec_label_pc_15d7c ]
  %v1_15d98 = phi i32 [ %v0_15d88.pre, %.dec_label_pc_15d88_crit_edge ], [ %v2_15de4, %dec_label_pc_15d7c ]
  store i32 %v1_15d98, i32* %r4.global-to-local, align 4
  %v1_15d8c = inttoptr i32 %v0_15d8c to i32*
  %v2_15d8c = load i32, i32* %v1_15d8c, align 4
  store i32 %v2_15d8c, i32* %r5.global-to-local, align 4
  %v3_15d8c = add i32 %v0_15d8c, 4
  %v4_15d8c = inttoptr i32 %v3_15d8c to i32*
  %v5_15d8c = load i32, i32* %v4_15d8c, align 4
  store i32 %v5_15d8c, i32* %r6.global-to-local, align 4
  %v6_15d8c = add i32 %v0_15d8c, 8
  %v7_15d8c = inttoptr i32 %v6_15d8c to i32*
  %v8_15d8c = load i32, i32* %v7_15d8c, align 4
  store i32 %v8_15d8c, i32* %r7.global-to-local, align 4
  %v9_15d8c = add i32 %v0_15d8c, 12
  %v10_15d8c = inttoptr i32 %v9_15d8c to i32*
  %v11_15d8c = load i32, i32* %v10_15d8c, align 4
  store i32 %v11_15d8c, i32* %r8.global-to-local, align 4
  %v12_15d8c = add i32 %v0_15d8c, 16
  %v13_15d8c = inttoptr i32 %v12_15d8c to i32*
  %v14_15d8c = load i32, i32* %v13_15d8c, align 4
  store i32 %v14_15d8c, i32* %sb.global-to-local, align 4
  %v15_15d8c = add i32 %v0_15d8c, 20
  %v16_15d8c = inttoptr i32 %v15_15d8c to i32*
  %v17_15d8c = load i32, i32* %v16_15d8c, align 4
  store i32 %v17_15d8c, i32* %sl.global-to-local, align 4
  %v18_15d8c = add i32 %v0_15d8c, 24
  %v19_15d8c = inttoptr i32 %v18_15d8c to i32*
  %v20_15d8c = load i32, i32* %v19_15d8c, align 4
  store i32 %v20_15d8c, i32* %fp.global-to-local, align 4
  %v21_15d8c = add i32 %v0_15d8c, 28
  store i32 %v21_15d8c, i32* %r1.global-to-local, align 4
  %v1_15d90 = add i32 %v0_15d90, -32
  store i32 %v1_15d90, i32* %r2.global-to-local, align 4
  %v2_15d90 = icmp ugt i32 %v0_15d90, 31
  br i1 %v2_15d90, label %bb153, label %bb154

bb153:                                            ; preds = %dec_label_pc_15d88
  %v2_15d94 = inttoptr i32 %v21_15d8c to i32*
  %v3_15d94 = load i32, i32* %v2_15d94, align 4
  store i32 %v3_15d94, i32* %ip.global-to-local, align 4
  %v5_15d94 = add i32 %v0_15d8c, 32
  store i32 %v5_15d94, i32* %r1.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %dec_label_pc_15d88, %bb153
  %v0_15d98 = load i32, i32* @r3, align 4
  %v4_15d98 = mul i32 %v1_15d98, 65536
  %v5_15d98 = or i32 %v0_15d98, %v4_15d98
  %v3_15d9c = udiv i32 %v1_15d98, 65536
  %v4_15da0 = mul i32 %v2_15d8c, 65536
  %v5_15da0 = or i32 %v4_15da0, %v3_15d9c
  store i32 %v5_15da0, i32* %r4.global-to-local, align 4
  %v3_15da4 = udiv i32 %v2_15d8c, 65536
  %v4_15da8 = mul i32 %v5_15d8c, 65536
  %v5_15da8 = or i32 %v4_15da8, %v3_15da4
  store i32 %v5_15da8, i32* %r5.global-to-local, align 4
  %v3_15dac = udiv i32 %v5_15d8c, 65536
  %v4_15db0 = mul i32 %v8_15d8c, 65536
  %v5_15db0 = or i32 %v4_15db0, %v3_15dac
  store i32 %v5_15db0, i32* %r6.global-to-local, align 4
  %v3_15db4 = udiv i32 %v8_15d8c, 65536
  %v4_15db8 = mul i32 %v11_15d8c, 65536
  %v5_15db8 = or i32 %v4_15db8, %v3_15db4
  store i32 %v5_15db8, i32* %r7.global-to-local, align 4
  %v3_15dbc = udiv i32 %v11_15d8c, 65536
  %v4_15dc0 = mul i32 %v14_15d8c, 65536
  %v5_15dc0 = or i32 %v4_15dc0, %v3_15dbc
  store i32 %v5_15dc0, i32* %r8.global-to-local, align 4
  %v3_15dc4 = udiv i32 %v14_15d8c, 65536
  %v4_15dc8 = mul i32 %v17_15d8c, 65536
  %v5_15dc8 = or i32 %v4_15dc8, %v3_15dc4
  store i32 %v5_15dc8, i32* %sb.global-to-local, align 4
  %v3_15dcc = udiv i32 %v17_15d8c, 65536
  %v4_15dd0 = mul i32 %v20_15d8c, 65536
  %v5_15dd0 = or i32 %v4_15dd0, %v3_15dcc
  store i32 %v5_15dd0, i32* %sl.global-to-local, align 4
  %v1_15dd4 = inttoptr i32 %v0_15dd4 to i32*
  store i32 %v5_15d98, i32* %v1_15dd4, align 4
  %v3_15dd4 = add i32 %v0_15dd4, 4
  %v4_15dd4 = inttoptr i32 %v3_15dd4 to i32*
  %v5_15dd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15dd4, i32* %v4_15dd4, align 4
  %v6_15dd4 = add i32 %v0_15dd4, 8
  %v7_15dd4 = inttoptr i32 %v6_15dd4 to i32*
  %v8_15dd4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15dd4, i32* %v7_15dd4, align 4
  %v9_15dd4 = add i32 %v0_15dd4, 12
  %v10_15dd4 = inttoptr i32 %v9_15dd4 to i32*
  %v11_15dd4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15dd4, i32* %v10_15dd4, align 4
  %v12_15dd4 = add i32 %v0_15dd4, 16
  %v13_15dd4 = inttoptr i32 %v12_15dd4 to i32*
  %v14_15dd4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15dd4, i32* %v13_15dd4, align 4
  %v15_15dd4 = add i32 %v0_15dd4, 20
  %v16_15dd4 = inttoptr i32 %v15_15dd4 to i32*
  %v17_15dd4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15dd4, i32* %v16_15dd4, align 4
  %v18_15dd4 = add i32 %v0_15dd4, 24
  %v19_15dd4 = inttoptr i32 %v18_15dd4 to i32*
  %v20_15dd4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15dd4, i32* %v19_15dd4, align 4
  %v21_15dd4 = add i32 %v0_15dd4, 28
  %v22_15dd4 = inttoptr i32 %v21_15dd4 to i32*
  %v23_15dd4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15dd4, i32* %v22_15dd4, align 4
  %v24_15dd4 = add i32 %v0_15dd4, 32
  store i32 %v24_15dd4, i32* %r0.global-to-local, align 4
  %v0_15dd8 = load i32, i32* %fp.global-to-local, align 4
  %v1_15dd8 = and i32 %v0_15dd8, 32768
  %v2_15dd8 = icmp eq i32 %v1_15dd8, 0
  %v3_15dd8 = udiv i32 %v0_15dd8, 65536
  store i32 %v3_15dd8, i32* @r3, align 4
  br i1 %v2_15dd8, label %dec_label_pc_15ea0.loopexit19, label %.dec_label_pc_15d88_crit_edge

.dec_label_pc_15d88_crit_edge:                    ; preds = %bb154
  %v0_15d88.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15d8c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15d90.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d88

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15d7c, %.dec_label_pc_15de8_crit_edge
  %v0_15e34 = phi i32 [ %v24_15e34, %.dec_label_pc_15de8_crit_edge ], [ %v0_15dd438, %dec_label_pc_15d7c ]
  %v0_15df0 = phi i32 [ %v0_15df0.pre, %.dec_label_pc_15de8_crit_edge ], [ %v1_15d6c, %dec_label_pc_15d7c ]
  %v0_15dec = phi i32 [ %v0_15dec.pre, %.dec_label_pc_15de8_crit_edge ], [ %v4_15de4, %dec_label_pc_15d7c ]
  %v1_15df8 = phi i32 [ %v0_15de8.pre, %.dec_label_pc_15de8_crit_edge ], [ %v2_15de4, %dec_label_pc_15d7c ]
  store i32 %v1_15df8, i32* %r4.global-to-local, align 4
  %v1_15dec = inttoptr i32 %v0_15dec to i32*
  %v2_15dec = load i32, i32* %v1_15dec, align 4
  store i32 %v2_15dec, i32* %r5.global-to-local, align 4
  %v3_15dec = add i32 %v0_15dec, 4
  %v4_15dec = inttoptr i32 %v3_15dec to i32*
  %v5_15dec = load i32, i32* %v4_15dec, align 4
  store i32 %v5_15dec, i32* %r6.global-to-local, align 4
  %v6_15dec = add i32 %v0_15dec, 8
  %v7_15dec = inttoptr i32 %v6_15dec to i32*
  %v8_15dec = load i32, i32* %v7_15dec, align 4
  store i32 %v8_15dec, i32* %r7.global-to-local, align 4
  %v9_15dec = add i32 %v0_15dec, 12
  %v10_15dec = inttoptr i32 %v9_15dec to i32*
  %v11_15dec = load i32, i32* %v10_15dec, align 4
  store i32 %v11_15dec, i32* %r8.global-to-local, align 4
  %v12_15dec = add i32 %v0_15dec, 16
  %v13_15dec = inttoptr i32 %v12_15dec to i32*
  %v14_15dec = load i32, i32* %v13_15dec, align 4
  store i32 %v14_15dec, i32* %sb.global-to-local, align 4
  %v15_15dec = add i32 %v0_15dec, 20
  %v16_15dec = inttoptr i32 %v15_15dec to i32*
  %v17_15dec = load i32, i32* %v16_15dec, align 4
  store i32 %v17_15dec, i32* %sl.global-to-local, align 4
  %v18_15dec = add i32 %v0_15dec, 24
  %v19_15dec = inttoptr i32 %v18_15dec to i32*
  %v20_15dec = load i32, i32* %v19_15dec, align 4
  store i32 %v20_15dec, i32* %fp.global-to-local, align 4
  %v21_15dec = add i32 %v0_15dec, 28
  store i32 %v21_15dec, i32* %r1.global-to-local, align 4
  %v1_15df0 = add i32 %v0_15df0, -32
  store i32 %v1_15df0, i32* %r2.global-to-local, align 4
  %v2_15df0 = icmp ugt i32 %v0_15df0, 31
  br i1 %v2_15df0, label %bb155, label %bb156

bb155:                                            ; preds = %dec_label_pc_15de8
  %v2_15df4 = inttoptr i32 %v21_15dec to i32*
  %v3_15df4 = load i32, i32* %v2_15df4, align 4
  store i32 %v3_15df4, i32* %ip.global-to-local, align 4
  %v5_15df4 = add i32 %v0_15dec, 32
  store i32 %v5_15df4, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_15de8, %bb155
  %v0_15df8 = load i32, i32* @r3, align 4
  %v4_15df8 = mul i32 %v1_15df8, 16777216
  %v5_15df8 = or i32 %v0_15df8, %v4_15df8
  %v3_15dfc = udiv i32 %v1_15df8, 256
  %v4_15e00 = mul i32 %v2_15dec, 16777216
  %v5_15e00 = or i32 %v4_15e00, %v3_15dfc
  store i32 %v5_15e00, i32* %r4.global-to-local, align 4
  %v3_15e04 = udiv i32 %v2_15dec, 256
  %v4_15e08 = mul i32 %v5_15dec, 16777216
  %v5_15e08 = or i32 %v4_15e08, %v3_15e04
  store i32 %v5_15e08, i32* %r5.global-to-local, align 4
  %v3_15e0c = udiv i32 %v5_15dec, 256
  %v4_15e10 = mul i32 %v8_15dec, 16777216
  %v5_15e10 = or i32 %v4_15e10, %v3_15e0c
  store i32 %v5_15e10, i32* %r6.global-to-local, align 4
  %v3_15e14 = udiv i32 %v8_15dec, 256
  %v4_15e18 = mul i32 %v11_15dec, 16777216
  %v5_15e18 = or i32 %v4_15e18, %v3_15e14
  store i32 %v5_15e18, i32* %r7.global-to-local, align 4
  %v3_15e1c = udiv i32 %v11_15dec, 256
  %v4_15e20 = mul i32 %v14_15dec, 16777216
  %v5_15e20 = or i32 %v4_15e20, %v3_15e1c
  store i32 %v5_15e20, i32* %r8.global-to-local, align 4
  %v3_15e24 = udiv i32 %v14_15dec, 256
  %v4_15e28 = mul i32 %v17_15dec, 16777216
  %v5_15e28 = or i32 %v4_15e28, %v3_15e24
  store i32 %v5_15e28, i32* %sb.global-to-local, align 4
  %v3_15e2c = udiv i32 %v17_15dec, 256
  %v4_15e30 = mul i32 %v20_15dec, 16777216
  %v5_15e30 = or i32 %v4_15e30, %v3_15e2c
  store i32 %v5_15e30, i32* %sl.global-to-local, align 4
  %v1_15e34 = inttoptr i32 %v0_15e34 to i32*
  store i32 %v5_15df8, i32* %v1_15e34, align 4
  %v3_15e34 = add i32 %v0_15e34, 4
  %v4_15e34 = inttoptr i32 %v3_15e34 to i32*
  %v5_15e34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15e34, i32* %v4_15e34, align 4
  %v6_15e34 = add i32 %v0_15e34, 8
  %v7_15e34 = inttoptr i32 %v6_15e34 to i32*
  %v8_15e34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15e34, i32* %v7_15e34, align 4
  %v9_15e34 = add i32 %v0_15e34, 12
  %v10_15e34 = inttoptr i32 %v9_15e34 to i32*
  %v11_15e34 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15e34, i32* %v10_15e34, align 4
  %v12_15e34 = add i32 %v0_15e34, 16
  %v13_15e34 = inttoptr i32 %v12_15e34 to i32*
  %v14_15e34 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15e34, i32* %v13_15e34, align 4
  %v15_15e34 = add i32 %v0_15e34, 20
  %v16_15e34 = inttoptr i32 %v15_15e34 to i32*
  %v17_15e34 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15e34, i32* %v16_15e34, align 4
  %v18_15e34 = add i32 %v0_15e34, 24
  %v19_15e34 = inttoptr i32 %v18_15e34 to i32*
  %v20_15e34 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15e34, i32* %v19_15e34, align 4
  %v21_15e34 = add i32 %v0_15e34, 28
  %v22_15e34 = inttoptr i32 %v21_15e34 to i32*
  %v23_15e34 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15e34, i32* %v22_15e34, align 4
  %v24_15e34 = add i32 %v0_15e34, 32
  store i32 %v24_15e34, i32* %r0.global-to-local, align 4
  %v0_15e38 = load i32, i32* %fp.global-to-local, align 4
  %v1_15e38 = and i32 %v0_15e38, 128
  %v2_15e38 = icmp eq i32 %v1_15e38, 0
  %v3_15e38 = udiv i32 %v0_15e38, 256
  store i32 %v3_15e38, i32* @r3, align 4
  br i1 %v2_15e38, label %dec_label_pc_15ea0.loopexit18, label %.dec_label_pc_15de8_crit_edge

.dec_label_pc_15de8_crit_edge:                    ; preds = %bb156
  %v0_15de8.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15dec.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15df0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15de8

dec_label_pc_15e44:                               ; preds = %dec_label_pc_15d74
  %v0_15e44 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e44 = inttoptr i32 %v0_15e44 to i32*
  %v2_15e44 = load i32, i32* %v1_15e44, align 4
  store i32 %v2_15e44, i32* %ip.global-to-local, align 4
  %v4_15e44 = add i32 %v0_15e44, 4
  store i32 %v4_15e44, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15e48:                               ; preds = %.dec_label_pc_15e48_crit_edge, %dec_label_pc_15e44
  %v0_15e94 = phi i32 [ %v24_15e94, %.dec_label_pc_15e48_crit_edge ], [ %v0_15dd438, %dec_label_pc_15e44 ]
  %v0_15e50 = phi i32 [ %v0_15e50.pre, %.dec_label_pc_15e48_crit_edge ], [ %v1_15d6c, %dec_label_pc_15e44 ]
  %v0_15e4c = phi i32 [ %v0_15e4c.pre, %.dec_label_pc_15e48_crit_edge ], [ %v4_15e44, %dec_label_pc_15e44 ]
  %v1_15e58 = phi i32 [ %v0_15e48.pre, %.dec_label_pc_15e48_crit_edge ], [ %v2_15e44, %dec_label_pc_15e44 ]
  store i32 %v1_15e58, i32* %r4.global-to-local, align 4
  %v1_15e4c = inttoptr i32 %v0_15e4c to i32*
  %v2_15e4c = load i32, i32* %v1_15e4c, align 4
  store i32 %v2_15e4c, i32* %r5.global-to-local, align 4
  %v3_15e4c = add i32 %v0_15e4c, 4
  %v4_15e4c = inttoptr i32 %v3_15e4c to i32*
  %v5_15e4c = load i32, i32* %v4_15e4c, align 4
  store i32 %v5_15e4c, i32* %r6.global-to-local, align 4
  %v6_15e4c = add i32 %v0_15e4c, 8
  %v7_15e4c = inttoptr i32 %v6_15e4c to i32*
  %v8_15e4c = load i32, i32* %v7_15e4c, align 4
  store i32 %v8_15e4c, i32* %r7.global-to-local, align 4
  %v9_15e4c = add i32 %v0_15e4c, 12
  %v10_15e4c = inttoptr i32 %v9_15e4c to i32*
  %v11_15e4c = load i32, i32* %v10_15e4c, align 4
  store i32 %v11_15e4c, i32* %r8.global-to-local, align 4
  %v12_15e4c = add i32 %v0_15e4c, 16
  %v13_15e4c = inttoptr i32 %v12_15e4c to i32*
  %v14_15e4c = load i32, i32* %v13_15e4c, align 4
  store i32 %v14_15e4c, i32* %sb.global-to-local, align 4
  %v15_15e4c = add i32 %v0_15e4c, 20
  %v16_15e4c = inttoptr i32 %v15_15e4c to i32*
  %v17_15e4c = load i32, i32* %v16_15e4c, align 4
  store i32 %v17_15e4c, i32* %sl.global-to-local, align 4
  %v18_15e4c = add i32 %v0_15e4c, 24
  %v19_15e4c = inttoptr i32 %v18_15e4c to i32*
  %v20_15e4c = load i32, i32* %v19_15e4c, align 4
  store i32 %v20_15e4c, i32* %fp.global-to-local, align 4
  %v21_15e4c = add i32 %v0_15e4c, 28
  store i32 %v21_15e4c, i32* %r1.global-to-local, align 4
  %v1_15e50 = add i32 %v0_15e50, -32
  store i32 %v1_15e50, i32* %r2.global-to-local, align 4
  %v2_15e50 = icmp ugt i32 %v0_15e50, 31
  br i1 %v2_15e50, label %bb157, label %bb158

bb157:                                            ; preds = %dec_label_pc_15e48
  %v2_15e54 = inttoptr i32 %v21_15e4c to i32*
  %v3_15e54 = load i32, i32* %v2_15e54, align 4
  store i32 %v3_15e54, i32* %ip.global-to-local, align 4
  %v5_15e54 = add i32 %v0_15e4c, 32
  store i32 %v5_15e54, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %dec_label_pc_15e48, %bb157
  %v0_15e58 = load i32, i32* @r3, align 4
  %v4_15e58 = mul i32 %v1_15e58, 256
  %v5_15e58 = or i32 %v0_15e58, %v4_15e58
  %v3_15e5c = udiv i32 %v1_15e58, 16777216
  %v4_15e60 = mul i32 %v2_15e4c, 256
  %v5_15e60 = or i32 %v4_15e60, %v3_15e5c
  store i32 %v5_15e60, i32* %r4.global-to-local, align 4
  %v3_15e64 = udiv i32 %v2_15e4c, 16777216
  %v4_15e68 = mul i32 %v5_15e4c, 256
  %v5_15e68 = or i32 %v4_15e68, %v3_15e64
  store i32 %v5_15e68, i32* %r5.global-to-local, align 4
  %v3_15e6c = udiv i32 %v5_15e4c, 16777216
  %v4_15e70 = mul i32 %v8_15e4c, 256
  %v5_15e70 = or i32 %v4_15e70, %v3_15e6c
  store i32 %v5_15e70, i32* %r6.global-to-local, align 4
  %v3_15e74 = udiv i32 %v8_15e4c, 16777216
  %v4_15e78 = mul i32 %v11_15e4c, 256
  %v5_15e78 = or i32 %v4_15e78, %v3_15e74
  store i32 %v5_15e78, i32* %r7.global-to-local, align 4
  %v3_15e7c = udiv i32 %v11_15e4c, 16777216
  %v4_15e80 = mul i32 %v14_15e4c, 256
  %v5_15e80 = or i32 %v4_15e80, %v3_15e7c
  store i32 %v5_15e80, i32* %r8.global-to-local, align 4
  %v3_15e84 = udiv i32 %v14_15e4c, 16777216
  %v4_15e88 = mul i32 %v17_15e4c, 256
  %v5_15e88 = or i32 %v4_15e88, %v3_15e84
  store i32 %v5_15e88, i32* %sb.global-to-local, align 4
  %v3_15e8c = udiv i32 %v17_15e4c, 16777216
  %v4_15e90 = mul i32 %v20_15e4c, 256
  %v5_15e90 = or i32 %v4_15e90, %v3_15e8c
  store i32 %v5_15e90, i32* %sl.global-to-local, align 4
  %v1_15e94 = inttoptr i32 %v0_15e94 to i32*
  store i32 %v5_15e58, i32* %v1_15e94, align 4
  %v3_15e94 = add i32 %v0_15e94, 4
  %v4_15e94 = inttoptr i32 %v3_15e94 to i32*
  %v5_15e94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15e94, i32* %v4_15e94, align 4
  %v6_15e94 = add i32 %v0_15e94, 8
  %v7_15e94 = inttoptr i32 %v6_15e94 to i32*
  %v8_15e94 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15e94, i32* %v7_15e94, align 4
  %v9_15e94 = add i32 %v0_15e94, 12
  %v10_15e94 = inttoptr i32 %v9_15e94 to i32*
  %v11_15e94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15e94, i32* %v10_15e94, align 4
  %v12_15e94 = add i32 %v0_15e94, 16
  %v13_15e94 = inttoptr i32 %v12_15e94 to i32*
  %v14_15e94 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15e94, i32* %v13_15e94, align 4
  %v15_15e94 = add i32 %v0_15e94, 20
  %v16_15e94 = inttoptr i32 %v15_15e94 to i32*
  %v17_15e94 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15e94, i32* %v16_15e94, align 4
  %v18_15e94 = add i32 %v0_15e94, 24
  %v19_15e94 = inttoptr i32 %v18_15e94 to i32*
  %v20_15e94 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15e94, i32* %v19_15e94, align 4
  %v21_15e94 = add i32 %v0_15e94, 28
  %v22_15e94 = inttoptr i32 %v21_15e94 to i32*
  %v23_15e94 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15e94, i32* %v22_15e94, align 4
  %v24_15e94 = add i32 %v0_15e94, 32
  store i32 %v24_15e94, i32* %r0.global-to-local, align 4
  %v0_15e98 = load i32, i32* %fp.global-to-local, align 4
  %v1_15e98 = and i32 %v0_15e98, 8388608
  %v2_15e98 = icmp eq i32 %v1_15e98, 0
  %v3_15e98 = udiv i32 %v0_15e98, 16777216
  store i32 %v3_15e98, i32* @r3, align 4
  br i1 %v2_15e98, label %dec_label_pc_15ea0.loopexit, label %.dec_label_pc_15e48_crit_edge

.dec_label_pc_15e48_crit_edge:                    ; preds = %bb158
  %v0_15e48.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15e4c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15e50.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15ea0.loopexit:                      ; preds = %bb158
  %v6_15e50.le = icmp slt i32 %v1_15e50, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15e50.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15ea0

dec_label_pc_15ea0.loopexit18:                    ; preds = %bb156
  %v6_15df0.le = icmp slt i32 %v1_15df0, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15df0.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15ea0

dec_label_pc_15ea0.loopexit19:                    ; preds = %bb154
  %v6_15d90.le = icmp slt i32 %v1_15d90, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15d90.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %dec_label_pc_15ea0.loopexit19, %dec_label_pc_15ea0.loopexit18, %dec_label_pc_15ea0.loopexit, %dec_label_pc_15d6c
  %v1_15ec050 = phi i32 [ %v24_15dd4, %dec_label_pc_15ea0.loopexit19 ], [ %v24_15e34, %dec_label_pc_15ea0.loopexit18 ], [ %v24_15e94, %dec_label_pc_15ea0.loopexit ], [ %v0_15dd438, %dec_label_pc_15d6c ]
  %v0_15ea0 = load i32, i32* %lr.global-to-local, align 4
  %v1_15ea0 = sub i32 32, %v0_15ea0
  store i32 %v1_15ea0, i32* @ip, align 4
  %v0_15ea4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ea4 = add i32 %v0_15ea4, 32
  store i32 %v1_15ea4, i32* %r2.global-to-local, align 4
  %v1_15ea8 = add i32 %v0_15ea4, 28
  %v2_15ea8 = icmp ugt i32 %v1_15ea4, 3
  store i1 %v2_15ea8, i1* %cpsr_c.global-to-local, align 1
  %v6_15ea8 = icmp slt i32 %v1_15ea8, 0
  store i1 %v6_15ea8, i1* %cpsr_n.global-to-local, align 1
  %v3_15eac = icmp ult i32 %v1_15ea4, 2
  br i1 %v3_15eac, label %dec_label_pc_15ecc, label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15ea0, %dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge
  %v1_15ec0 = phi i32 [ %v4_15ec0, %dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge ], [ %v1_15ec050, %dec_label_pc_15ea0 ]
  %v1_15ebc = phi i32 [ %v1_15ebc.pre, %dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge ], [ %v1_15ea0, %dec_label_pc_15ea0 ]
  %v2_15eb8 = phi i32 [ %v2_15eb8.pre, %dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge ], [ %v0_15ea0, %dec_label_pc_15ea0 ]
  %v0_15eb4 = phi i32 [ %v0_15ec4, %dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge ], [ %v1_15ea4, %dec_label_pc_15ea0 ]
  %v0_15eb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15eb0 = inttoptr i32 %v0_15eb0 to i32*
  %v2_15eb0 = load i32, i32* %v1_15eb0, align 4
  store i32 %v2_15eb0, i32* %r5.global-to-local, align 4
  %v4_15eb0 = add i32 %v0_15eb0, 4
  store i32 %v4_15eb0, i32* %r1.global-to-local, align 4
  %v1_15eb4 = add i32 %v0_15eb4, -4
  store i32 %v1_15eb4, i32* %r2.global-to-local, align 4
  %v0_15eb8 = load i32, i32* @r3, align 4
  %v7_15eb8 = shl i32 %v2_15eb0, %v2_15eb8
  %v8_15eb8 = or i32 %v0_15eb8, %v7_15eb8
  store i32 %v8_15eb8, i32* %r4.global-to-local, align 4
  %v6_15ebc = lshr i32 %v2_15eb0, %v1_15ebc
  store i32 %v6_15ebc, i32* @r3, align 4
  %v2_15ec0 = inttoptr i32 %v1_15ec0 to i32*
  store i32 %v8_15eb8, i32* %v2_15ec0, align 4
  %v3_15ec0 = load i32, i32* %r0.global-to-local, align 4
  %v4_15ec0 = add i32 %v3_15ec0, 4
  store i32 %v4_15ec0, i32* %r0.global-to-local, align 4
  %v0_15ec4 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ec4 = icmp ugt i32 %v0_15ec4, 3
  br i1 %v2_15ec4, label %dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge, label %dec_label_pc_15ecc.loopexit

dec_label_pc_15eb0.dec_label_pc_15eb0_crit_edge:  ; preds = %dec_label_pc_15eb0
  %v2_15eb8.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_15ebc.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15eb0

dec_label_pc_15ecc.loopexit:                      ; preds = %dec_label_pc_15eb0
  %v1_15ec4 = add i32 %v0_15ec4, -4
  %v6_15ec4 = icmp slt i32 %v1_15ec4, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15ec4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15ecc.loopexit, %dec_label_pc_15ea0, %dec_label_pc_15d68, %.thread10
  %v3_15ed0 = phi i32 [ %v4_15ec0, %dec_label_pc_15ecc.loopexit ], [ %v1_15ec050, %dec_label_pc_15ea0 ], [ %v4_15d5c, %dec_label_pc_15d68 ], [ %v0_15d4431, %.thread10 ]
  %v0_15ecc = load i32, i32* %lr.global-to-local, align 4
  %v1_15ecc = and i32 %v0_15ecc, 16
  %v2_15ecc = icmp ne i32 %v1_15ecc, 0
  store i1 %v2_15ecc, i1* %cpsr_c.global-to-local, align 1
  %v3_15ecc = mul i32 %v0_15ecc, 268435456
  store i32 %v3_15ecc, i32* %r5.global-to-local, align 4
  %v4_15ecc = icmp slt i32 %v3_15ecc, 0
  store i1 %v4_15ecc, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_15ecc, label %bb159, label %thread-pre-split12

bb159:                                            ; preds = %dec_label_pc_15ecc
  %v1_15ed0 = load i32, i32* @r3, align 4
  %v2_15ed0 = trunc i32 %v1_15ed0 to i8
  %v4_15ed0 = inttoptr i32 %v3_15ed0 to i8*
  store i8 %v2_15ed0, i8* %v4_15ed0, align 1
  %v5_15ed0 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ed0 = add i32 %v5_15ed0, 1
  store i32 %v6_15ed0, i32* %r0.global-to-local, align 4
  %v0_15ed4.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_15ed4.pr, label %bb160, label %.thread-pre-split12_crit_edge

.thread-pre-split12_crit_edge:                    ; preds = %bb159
  %v0_15ed8.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15ed8.pr.pre, label %thread-pre-split12._crit_edge, label %.thread15

thread-pre-split12:                               ; preds = %dec_label_pc_15ecc
  br i1 %v2_15ecc, label %thread-pre-split12._crit_edge, label %.thread15

thread-pre-split12._crit_edge:                    ; preds = %.thread-pre-split12_crit_edge, %thread-pre-split12
  %v3_15ed856115 = phi i32 [ %v6_15ed0, %.thread-pre-split12_crit_edge ], [ %v3_15ed0, %thread-pre-split12 ]
  %v1_15ed8.pre = load i32, i32* @r3, align 4
  %extract.t84 = trunc i32 %v1_15ed8.pre to i8
  br label %bb161

bb160:                                            ; preds = %bb159
  %v1_15ed4 = load i32, i32* @r3, align 4
  %v2_15ed4 = and i32 %v1_15ed4, 128
  %v3_15ed4 = icmp ne i32 %v2_15ed4, 0
  store i1 %v3_15ed4, i1* %cpsr_c.global-to-local, align 1
  %v4_15ed4 = udiv i32 %v1_15ed4, 256
  store i32 %v4_15ed4, i32* @r3, align 4
  %extract.t85 = trunc i32 %v4_15ed4 to i8
  br i1 %v3_15ed4, label %bb161, label %.thread15

bb161:                                            ; preds = %thread-pre-split12._crit_edge, %bb160
  %v3_15ed8 = phi i32 [ %v3_15ed856115, %thread-pre-split12._crit_edge ], [ %v6_15ed0, %bb160 ]
  %v1_15ed8.off0 = phi i8 [ %extract.t84, %thread-pre-split12._crit_edge ], [ %extract.t85, %bb160 ]
  %v4_15ed8 = inttoptr i32 %v3_15ed8 to i8*
  store i8 %v1_15ed8.off0, i8* %v4_15ed8, align 1
  %v5_15ed8 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ed8 = add i32 %v5_15ed8, 1
  store i32 %v6_15ed8, i32* %r0.global-to-local, align 4
  %v0_15edc.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15edc.pr, label %bb162, label %.thread15

bb162:                                            ; preds = %bb161
  %v1_15edc = load i32, i32* @r3, align 4
  %v2_15edc = and i32 %v1_15edc, 128
  %v3_15edc = icmp ne i32 %v2_15edc, 0
  store i1 %v3_15edc, i1* %cpsr_c.global-to-local, align 1
  %v4_15edc = udiv i32 %v1_15edc, 256
  store i32 %v4_15edc, i32* @r3, align 4
  br i1 %v3_15edc, label %bb163, label %.thread15

bb163:                                            ; preds = %bb162
  %v2_15ee0 = trunc i32 %v4_15edc to i8
  %v4_15ee0 = inttoptr i32 %v6_15ed8 to i8*
  store i8 %v2_15ee0, i8* %v4_15ee0, align 1
  %v5_15ee0 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ee0 = add i32 %v5_15ee0, 1
  store i32 %v6_15ee0, i32* %r0.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread-pre-split12_crit_edge, %bb160, %thread-pre-split12, %bb161, %bb162, %bb163
  %v3_15ef878 = phi i32 [ %v6_15ed0, %bb160 ], [ %v3_15ed0, %thread-pre-split12 ], [ %v6_15ed8, %bb161 ], [ %v6_15ed8, %bb162 ], [ %v6_15ee0, %bb163 ], [ %v6_15ed0, %.thread-pre-split12_crit_edge ]
  %v2_15ee4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_15ee4, i32* @r5, align 4
  store i32 %v5_15d04, i32* @r6, align 4
  store i32 %v8_15d04, i32* @r7, align 4
  store i32 %v11_15d04, i32* @r8, align 4
  store i32 %v14_15d04, i32* @sb, align 4
  store i32 %v17_15d04, i32* @sl, align 4
  store i32 %v20_15d04, i32* @fp, align 4
  %v0_15ee8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %dec_label_pc_15cfc, %dec_label_pc_15c0c, %.thread15
  %v3_15ef8 = phi i32 [ %v1_15c78, %dec_label_pc_15cfc ], [ %v3_15c0c, %dec_label_pc_15c0c ], [ %v3_15ef878, %.thread15 ]
  %v0_15ee8 = phi i32 [ %v0_15cfc, %dec_label_pc_15cfc ], [ %v0_15c14, %dec_label_pc_15c0c ], [ %v0_15ee8.pre, %.thread15 ]
  %v1_15ee8 = and i32 %v0_15ee8, 2
  %v2_15ee8 = icmp ne i32 %v1_15ee8, 0
  store i1 %v2_15ee8, i1* %cpsr_c.global-to-local, align 1
  %v3_15ee8 = shl i32 %v0_15ee8, 31
  store i32 %v3_15ee8, i32* @r2, align 4
  %v4_15ee8 = icmp ne i32 %v3_15ee8, 0
  store i1 %v4_15ee8, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_15ee8, label %bb164, label %bb165

bb164:                                            ; preds = %dec_label_pc_15ee8
  %v1_15eec = load i32, i32* %r1.global-to-local, align 4
  %v2_15eec = inttoptr i32 %v1_15eec to i8*
  %v3_15eec = load i8, i8* %v2_15eec, align 1
  %v4_15eec = zext i8 %v3_15eec to i32
  store i32 %v4_15eec, i32* @r2, align 4
  %v6_15eec = add i32 %v1_15eec, 1
  store i32 %v6_15eec, i32* %r1.global-to-local, align 4
  br label %bb165

bb165:                                            ; preds = %dec_label_pc_15ee8, %bb164
  %v1_15ef8.off0 = phi i8 [ 0, %dec_label_pc_15ee8 ], [ %v3_15eec, %bb164 ]
  br i1 %v2_15ee8, label %bb166, label %.thread16

bb166:                                            ; preds = %bb165
  %v1_15ef0 = load i32, i32* %r1.global-to-local, align 4
  %v2_15ef0 = inttoptr i32 %v1_15ef0 to i8*
  %v3_15ef0 = load i8, i8* %v2_15ef0, align 1
  %v4_15ef0 = zext i8 %v3_15ef0 to i32
  store i32 %v4_15ef0, i32* @r3, align 4
  %v6_15ef0 = add i32 %v1_15ef0, 1
  store i32 %v6_15ef0, i32* %r1.global-to-local, align 4
  %v2_15ef4 = inttoptr i32 %v6_15ef0 to i8*
  %v3_15ef4 = load i8, i8* %v2_15ef4, align 1
  %v4_15ef4 = zext i8 %v3_15ef4 to i32
  store i32 %v4_15ef4, i32* @ip, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb165, %bb166
  br i1 %v4_15ee8, label %bb167, label %bb168

bb167:                                            ; preds = %.thread16
  %v4_15ef8 = inttoptr i32 %v3_15ef8 to i8*
  store i8 %v1_15ef8.off0, i8* %v4_15ef8, align 1
  %v5_15ef8 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ef8 = add i32 %v5_15ef8, 1
  store i32 %v6_15ef8, i32* %r0.global-to-local, align 4
  %v0_15efc.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15efc.pre, label %bb169, label %.thread17

bb168:                                            ; preds = %.thread16
  br i1 %v2_15ee8, label %bb169, label %.thread17

bb169:                                            ; preds = %bb167, %bb168
  %v3_15efc116 = phi i32 [ %v6_15ef8, %bb167 ], [ %v3_15ef8, %bb168 ]
  %v1_15efc = load i32, i32* @r3, align 4
  %v2_15efc = trunc i32 %v1_15efc to i8
  %v4_15efc = inttoptr i32 %v3_15efc116 to i8*
  store i8 %v2_15efc, i8* %v4_15efc, align 1
  %v5_15efc = load i32, i32* %r0.global-to-local, align 4
  %v6_15efc = add i32 %v5_15efc, 1
  store i32 %v6_15efc, i32* %r0.global-to-local, align 4
  %v0_15f00.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f00.pr, label %bb170, label %.thread17

bb170:                                            ; preds = %bb169
  %v1_15f00 = load i32, i32* @ip, align 4
  %v2_15f00 = trunc i32 %v1_15f00 to i8
  %v4_15f00 = inttoptr i32 %v6_15efc to i8*
  store i8 %v2_15f00, i8* %v4_15f00, align 1
  br label %.thread17

.thread17:                                        ; preds = %bb167, %bb168, %bb169, %bb170
  store i32 %v3_15c0c, i32* %r0.global-to-local, align 4
  store i32 %v8_15c0c, i32* @r4, align 4
  store i32 %v11_15c0c, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_15c0c

; uselistorder directives
  uselistorder i32 %v4_15edc, { 1, 0 }
  uselistorder i32 %v4_15ed4, { 1, 0 }
  uselistorder i32 %v6_15ed0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_15ecc, { 1, 0 }
  uselistorder i32 %v0_15ec4, { 0, 2, 1 }
  uselistorder i32 %v4_15ec0, { 0, 2, 1 }
  uselistorder i32 %v2_15eb0, { 1, 0, 2 }
  uselistorder i32 %v1_15ec050, { 1, 0 }
  uselistorder i32 %v24_15e94, { 0, 2, 1 }
  uselistorder i32 %v17_15e4c, { 1, 0, 2 }
  uselistorder i32 %v14_15e4c, { 1, 0, 2 }
  uselistorder i32 %v11_15e4c, { 1, 0, 2 }
  uselistorder i32 %v8_15e4c, { 1, 0, 2 }
  uselistorder i32 %v5_15e4c, { 1, 0, 2 }
  uselistorder i32 %v2_15e4c, { 1, 0, 2 }
  uselistorder i32 %v1_15e58, { 1, 0, 2 }
  uselistorder i32 %v0_15e4c, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15e50, { 1, 0 }
  uselistorder i32 %v0_15e94, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15e34, { 0, 2, 1 }
  uselistorder i32 %v17_15dec, { 1, 0, 2 }
  uselistorder i32 %v14_15dec, { 1, 0, 2 }
  uselistorder i32 %v11_15dec, { 1, 0, 2 }
  uselistorder i32 %v8_15dec, { 1, 0, 2 }
  uselistorder i32 %v5_15dec, { 1, 0, 2 }
  uselistorder i32 %v2_15dec, { 1, 0, 2 }
  uselistorder i32 %v1_15df8, { 1, 0, 2 }
  uselistorder i32 %v0_15dec, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15df0, { 1, 0 }
  uselistorder i32 %v0_15e34, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15dd4, { 0, 2, 1 }
  uselistorder i32 %v17_15d8c, { 1, 0, 2 }
  uselistorder i32 %v14_15d8c, { 1, 0, 2 }
  uselistorder i32 %v11_15d8c, { 1, 0, 2 }
  uselistorder i32 %v8_15d8c, { 1, 0, 2 }
  uselistorder i32 %v5_15d8c, { 1, 0, 2 }
  uselistorder i32 %v2_15d8c, { 1, 0, 2 }
  uselistorder i32 %v1_15d98, { 1, 0, 2 }
  uselistorder i32 %v0_15d8c, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15d90, { 1, 0 }
  uselistorder i32 %v0_15dd4, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15d74, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 %v1_15d6c, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 %v0_15d6c, { 1, 0 }
  uselistorder i32 %v0_15dd438, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15d60, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_15d5c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15d4431, { 1, 0 }
  uselistorder i32 %v4_15d30, { 1, 0 }
  uselistorder i32 %v4_15d28, { 1, 0 }
  uselistorder i32 %v6_15d24, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_15d10, { 1, 0 }
  uselistorder i32 %v1_15d08, { 1, 2, 0 }
  uselistorder i32 %v3_15ccc, { 1, 0, 2 }
  uselistorder i1 %v4_15cc8, { 1, 0, 2 }
  uselistorder i32 %v3_15cc8, { 1, 0 }
  uselistorder i32 %v2_15cd4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_15cc497, { 2, 1, 0 }
  uselistorder i32 %v13_15cc0, { 1, 0, 2 }
  uselistorder i32 %v1_15cbc, { 2, 1, 0 }
  uselistorder i1 %v4_15cb4, { 0, 2, 1, 3 }
  uselistorder i32 %v3_15cb4, { 1, 0 }
  uselistorder i32 %v0_15cb4, { 0, 2, 1 }
  uselistorder i32 %v1_15cc0, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 %v24_15ca0, { 0, 2, 1 }
  uselistorder i32 %v0_15c9c, { 1, 0 }
  uselistorder i32 %v0_15ca0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15c90, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_15c90, { 1, 0 }
  uselistorder i32 %v0_15ca064, { 1, 0 }
  uselistorder i32 %v1_15c7c92, { 2, 1, 0 }
  uselistorder i32 %v13_15c78, { 1, 0, 2 }
  uselistorder i32 %v1_15c74, { 2, 1, 0 }
  uselistorder i1 %v4_15c6c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_15c6c, { 1, 0 }
  uselistorder i32 %v0_15c90.pre, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v1_15c5c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_15c48, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 %v1_15c78, { 6, 3, 0, 13, 14, 2, 5, 4, 11, 10, 9, 8, 7, 12, 1 }
  uselistorder i32 %v6_15c3c, { 1, 0, 2 }
  uselistorder i32 %v1_15c34, { 0, 2, 1 }
  uselistorder i32 %v1_15c20, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15c1c, { 1, 2, 0 }
  uselistorder i32 %v0_15c1c, { 0, 2, 1, 3 }
  uselistorder i32 %v11_15c0c, { 1, 0 }
  uselistorder i32 %v8_15c0c, { 2, 1, 0 }
  uselistorder i32 %v3_15c0c, { 2, 3, 7, 0, 1, 6, 4, 5, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 23, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 24, 25, 21, 16, 15, 17, 18, 20, 19, 22, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 3, 37, 4, 38, 5, 39, 7, 6, 8, 9, 41, 11, 10, 12, 15, 14, 16, 13, 40, 17, 42, 43, 30, 18, 29, 2, 19, 31, 20, 28, 21, 32, 22, 34, 23, 33, 24, 25, 35, 26, 27, 36, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 38, 6, 39, 7, 8, 9, 40, 10, 41, 11, 42, 12, 13, 14, 15, 43, 35, 36, 37, 44, 45, 33, 16, 17, 29, 18, 30, 3, 28, 19, 20, 21, 22, 31, 23, 24, 25, 26, 27, 32, 34, 0, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 4, 3, 6, 7, 5, 8, 10, 9, 11 }
  uselistorder i1* %cpsr_n.global-to-local, { 7, 8, 9, 10, 2, 11, 4, 3, 1, 12, 13, 14, 5, 6, 30, 31, 32, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 5, 7, 8, 11, 9, 10, 12, 1, 13, 4, 2, 3, 14, 15, 16, 17, 28, 29, 30, 31, 34, 32, 33, 35, 18, 19, 20, 0, 21, 22, 23, 25, 24, 26, 27 }
  uselistorder i8 0, { 4, 17, 18, 11, 19, 20, 0, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 40, 42, 39, 12, 41, 13, 43, 44, 38, 2, 15, 45, 46, 50, 47, 48, 49, 14, 51, 52, 53, 54, 55, 3, 56, 16, 57, 58, 59, 61, 62, 6, 65, 66, 67, 10, 63, 64, 8, 68, 69, 70, 9, 71, 5, 72, 73, 60, 74, 75, 76, 77 }
  uselistorder label %.thread17, { 3, 2, 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %dec_label_pc_15ee8, { 2, 0, 1 }
  uselistorder label %.thread15, { 5, 4, 3, 1, 2, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %thread-pre-split12._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15eb0, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_15de8, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %dec_label_pc_15d88, { 1, 0 }
  uselistorder label %dec_label_pc_15d44, { 1, 0 }
  uselistorder label %.thread10, { 6, 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb150, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread108, { 2, 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %.thread98, { 2, 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_15cac, { 1, 0 }
  uselistorder label %dec_label_pc_15c98, { 1, 0 }
  uselistorder label %dec_label_pc_15c90, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread93, { 2, 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %.thread2, { 4, 3, 1, 0, 2 }
  uselistorder label %bb132, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
}

define i32 @function_15f18(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15f18:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp21 = ptrtoint i8* %arg1 to i32
  %v3_15f18 = load i32, i32* @r4, align 4
  %v6_15f18 = load i32, i32* @r5, align 4
  %v9_15f18 = load i32, i32* @r6, align 4
  %v12_15f18 = load i32, i32* @r7, align 4
  %v15_15f18 = load i32, i32* @lr, align 4
  %v5_15f1c = icmp ugt i8* %tmp, %arg1
  %v11_15f1c = icmp eq i8* %tmp, %arg1
  store i1 %v11_15f1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp21, i32* @r5, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg3, i32* @ip, align 4
  store i32 %tmp21, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v11_15f1c, label %dec_label_pc_15f5c, label %dec_label_pc_15f3c

dec_label_pc_15f3c:                               ; preds = %dec_label_pc_15f18
  %v3_15f3c = add i32 %arg3, %arg2
  store i32 %v3_15f3c, i32* @r3, align 4
  %v4_15f40 = icmp ult i32 %tmp21, %v3_15f3c
  %v10_15f40 = icmp eq i32 %tmp21, %v3_15f3c
  store i1 %v10_15f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15f40, label %dec_label_pc_15f48, label %dec_label_pc_15f54

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f3c
  %v3_15f48 = add i32 %tmp21, %arg3
  store i32 %v3_15f48, i32* @r7, align 4
  %v4_15f4c = icmp ugt i32 %v3_15f48, %arg2
  %v10_15f4c = icmp eq i32 %v3_15f48, %arg2
  store i1 %v10_15f4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15f4c, label %dec_label_pc_15f6c, label %dec_label_pc_15f54

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f3c
  %tmp29 = bitcast i8* %arg1 to i16*
  %v6_15f54 = call i32 @function_15c0c(i16* %tmp29, i32 %arg2, i32 %arg3)
  store i32 %v6_15f54, i32* @r5, align 4
  br label %dec_label_pc_15f5c

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15fe8, %dec_label_pc_15fd8, %dec_label_pc_1602c, %dec_label_pc_15f8c, %dec_label_pc_15fb8, %dec_label_pc_15fb0, %dec_label_pc_15f84, %dec_label_pc_15f18, %dec_label_pc_15f54
  %v0_15f5c = load i32, i32* @r5, align 4
  store i32 %v3_15f18, i32* @r4, align 4
  store i32 %v6_15f18, i32* @r5, align 4
  store i32 %v9_15f18, i32* @r6, align 4
  store i32 %v12_15f18, i32* @r7, align 4
  store i32 %v15_15f18, i32* @lr, align 4
  ret i32 %v0_15f5c

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15f48
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v2_15fa0 = urem i32 %arg2, 4
  br i1 %v5_15f1c, label %dec_label_pc_15f74, label %dec_label_pc_15fa0

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f6c
  %v2_15f78 = urem i32 %tmp21, 4
  %v9_15f7c = icmp eq i32 %v2_15fa0, %v2_15f78
  store i1 %v9_15f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f7c, label %dec_label_pc_16024, label %dec_label_pc_15f84

dec_label_pc_15f84.loopexit:                      ; preds = %dec_label_pc_1604c
  store i1 %v7_16054, i1* %cpsr_z.global-to-local, align 1
  %v0_15f84.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f84.loopexit, %dec_label_pc_16044, %dec_label_pc_15f74
  %v2_15f9412 = phi i32 [ %v4_16058, %dec_label_pc_15f84.loopexit ], [ %v1_160588, %dec_label_pc_16044 ], [ %tmp21, %dec_label_pc_15f74 ]
  %v0_15f84 = phi i32 [ %v0_15f84.pre, %dec_label_pc_15f84.loopexit ], [ %v0_16044, %dec_label_pc_16044 ], [ %arg3, %dec_label_pc_15f74 ]
  %v2_15f84 = icmp eq i32 %v0_15f84, 0
  store i1 %v2_15f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f84, label %dec_label_pc_15f5c, label %dec_label_pc_15f8c

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f84, %dec_label_pc_15f8c.dec_label_pc_15f8c_crit_edge
  %v2_15f94 = phi i32 [ %v5_15f94, %dec_label_pc_15f8c.dec_label_pc_15f8c_crit_edge ], [ %v2_15f9412, %dec_label_pc_15f84 ]
  %v0_15f90 = phi i32 [ %v0_15f90.pre, %dec_label_pc_15f8c.dec_label_pc_15f8c_crit_edge ], [ %v0_15f84, %dec_label_pc_15f84 ]
  %v0_15f8c = load i32, i32* @r6, align 4
  %v1_15f8c = inttoptr i32 %v0_15f8c to i8*
  %v2_15f8c = load i8, i8* %v1_15f8c, align 1
  %v5_15f8c = add i32 %v0_15f8c, 1
  store i32 %v5_15f8c, i32* @r6, align 4
  %v1_15f90 = add i32 %v0_15f90, -1
  store i32 %v1_15f90, i32* @ip, align 4
  %v7_15f90 = icmp eq i32 %v0_15f90, 1
  store i1 %v7_15f90, i1* %cpsr_z.global-to-local, align 1
  %v3_15f94 = inttoptr i32 %v2_15f94 to i8*
  store i8 %v2_15f8c, i8* %v3_15f94, align 1
  %v4_15f94 = load i32, i32* @r4, align 4
  %v5_15f94 = add i32 %v4_15f94, 1
  store i32 %v5_15f94, i32* @r4, align 4
  %v0_15f98 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15f98, label %dec_label_pc_15f5c, label %dec_label_pc_15f8c.dec_label_pc_15f8c_crit_edge

dec_label_pc_15f8c.dec_label_pc_15f8c_crit_edge:  ; preds = %dec_label_pc_15f8c
  %v0_15f90.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f8c

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f6c
  store i32 %v2_15fa0, i32* %r2.global-to-local, align 4
  %v2_15fa4 = urem i32 %tmp21, 4
  %v9_15fa8 = icmp eq i32 %v2_15fa0, %v2_15fa4
  store i1 %v9_15fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15fa8, label %dec_label_pc_15fd0, label %dec_label_pc_15fb0

dec_label_pc_15fb0.loopexit:                      ; preds = %dec_label_pc_1600c.dec_label_pc_1600c_crit_edge, %dec_label_pc_1600c.preheader
  %v7_16014.lcssa = phi i1 [ %v7_1601440, %dec_label_pc_1600c.preheader ], [ %v7_16014, %dec_label_pc_1600c.dec_label_pc_1600c_crit_edge ]
  store i1 %v7_16014.lcssa, i1* %cpsr_z.global-to-local, align 1
  %v0_15fb0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15fb0

dec_label_pc_15fb0:                               ; preds = %dec_label_pc_15fb0.loopexit, %dec_label_pc_16004, %dec_label_pc_15fa0
  %v0_15fb0 = phi i32 [ %v0_15fb0.pre, %dec_label_pc_15fb0.loopexit ], [ %v0_16004, %dec_label_pc_16004 ], [ %arg3, %dec_label_pc_15fa0 ]
  %v2_15fb0 = icmp eq i32 %v0_15fb0, 0
  store i1 %v2_15fb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fb0, label %dec_label_pc_15f5c, label %dec_label_pc_15fb8

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fb0, %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge
  %v0_15fb8 = phi i32 [ %v0_15fb8.pre, %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge ], [ %v0_15fb0, %dec_label_pc_15fb0 ]
  %v1_15fb8 = add i32 %v0_15fb8, -1
  store i32 %v1_15fb8, i32* @ip, align 4
  %v1_15fbc = load i32, i32* @lr, align 4
  %v2_15fbc = add i32 %v1_15fbc, %v1_15fb8
  %v3_15fbc = inttoptr i32 %v2_15fbc to i8*
  %v4_15fbc = load i8, i8* %v3_15fbc, align 1
  %v2_15fc0 = icmp eq i32 %v1_15fb8, 0
  store i1 %v2_15fc0, i1* %cpsr_z.global-to-local, align 1
  %v3_15fc4 = load i32, i32* @r5, align 4
  %v4_15fc4 = add i32 %v3_15fc4, %v1_15fb8
  %v5_15fc4 = inttoptr i32 %v4_15fc4 to i8*
  store i8 %v4_15fbc, i8* %v5_15fc4, align 1
  %v0_15fc8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fc8, label %dec_label_pc_15f5c, label %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge

dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge:  ; preds = %dec_label_pc_15fb8
  %v0_15fb8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15fb8

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15fa0
  %v1_15fd0 = urem i32 %v3_15f48, 4
  %v2_15fd0 = icmp eq i32 %v1_15fd0, 0
  store i1 %v2_15fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fd0, label %dec_label_pc_16004, label %dec_label_pc_15fd8

dec_label_pc_15fd8:                               ; preds = %dec_label_pc_15fd0
  %v1_15fd8 = add i32 %arg3, -1
  store i32 %v1_15fd8, i32* @ip, align 4
  %v2_15fd8 = icmp eq i32 %arg3, 0
  %v7_15fd8 = icmp eq i32 %arg3, 1
  store i1 %v7_15fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fd8, label %dec_label_pc_15f5c, label %dec_label_pc_15ff0.preheader

dec_label_pc_15ff0.preheader:                     ; preds = %dec_label_pc_15fd8
  %v4_15fdc = add i32 %v1_15fd8, %tmp21
  store i32 %v4_15fdc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ff0

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15ff0
  %v1_15fe8 = add i32 %v0_16004.pre, -1
  store i32 %v1_15fe8, i32* @ip, align 4
  %v2_15fe8 = icmp eq i32 %v0_16004.pre, 0
  %v7_15fe8 = icmp eq i32 %v0_16004.pre, 1
  store i1 %v7_15fe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fe8, label %dec_label_pc_15f5c, label %dec_label_pc_15fe8.dec_label_pc_15ff0_crit_edge

dec_label_pc_15fe8.dec_label_pc_15ff0_crit_edge:  ; preds = %dec_label_pc_15fe8
  %v1_15ff0.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_15ff0

dec_label_pc_15ff0:                               ; preds = %dec_label_pc_15fe8.dec_label_pc_15ff0_crit_edge, %dec_label_pc_15ff0.preheader
  %v0_15ff4 = phi i32 [ %v4_15fdc, %dec_label_pc_15ff0.preheader ], [ %v1_15ffc, %dec_label_pc_15fe8.dec_label_pc_15ff0_crit_edge ]
  %v1_15ff0 = phi i32 [ %arg2, %dec_label_pc_15ff0.preheader ], [ %v1_15ff0.pre, %dec_label_pc_15fe8.dec_label_pc_15ff0_crit_edge ]
  %v0_15ff0 = phi i32 [ %v1_15fd8, %dec_label_pc_15ff0.preheader ], [ %v1_15fe8, %dec_label_pc_15fe8.dec_label_pc_15ff0_crit_edge ]
  %v2_15ff0 = add i32 %v0_15ff0, %v1_15ff0
  %v3_15ff0 = inttoptr i32 %v2_15ff0 to i8*
  %v4_15ff0 = load i8, i8* %v3_15ff0, align 1
  %v1_15ff4 = urem i32 %v0_15ff4, 4
  %v2_15ff4 = icmp eq i32 %v1_15ff4, 0
  store i1 %v2_15ff4, i1* %cpsr_z.global-to-local, align 1
  %v3_15ff8 = inttoptr i32 %v0_15ff4 to i8*
  store i8 %v4_15ff0, i8* %v3_15ff8, align 1
  %v0_15ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_15ffc = add i32 %v0_15ffc, -1
  store i32 %v1_15ffc, i32* %r2.global-to-local, align 4
  %v0_16000 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_16004.pre = load i32, i32* @ip, align 4
  br i1 %v0_16000, label %dec_label_pc_16004, label %dec_label_pc_15fe8

dec_label_pc_16004:                               ; preds = %dec_label_pc_15ff0, %dec_label_pc_15fd0
  %v0_16004 = phi i32 [ %arg3, %dec_label_pc_15fd0 ], [ %v0_16004.pre, %dec_label_pc_15ff0 ]
  %v7_16004 = icmp eq i32 %v0_16004, 3
  store i1 %v7_16004, i1* %cpsr_z.global-to-local, align 1
  %tmp53 = icmp ult i32 %v0_16004, 4
  br i1 %tmp53, label %dec_label_pc_15fb0, label %dec_label_pc_1600c.preheader

dec_label_pc_1600c.preheader:                     ; preds = %dec_label_pc_16004
  %v1_1600c34 = add i32 %v0_16004, -4
  store i32 %v1_1600c34, i32* @ip, align 4
  %v1_1601035 = load i32, i32* @lr, align 4
  %v2_1601036 = add i32 %v1_1601035, %v1_1600c34
  %v3_1601037 = inttoptr i32 %v2_1601036 to i32*
  %v4_1601038 = load i32, i32* %v3_1601037, align 4
  %v2_1601439 = icmp ugt i32 %v1_1600c34, 2
  %v7_1601440 = icmp eq i32 %v1_1600c34, 3
  %v2_1601841 = load i32, i32* @r5, align 4
  %v3_1601842 = add i32 %v2_1601841, %v1_1600c34
  %v4_1601843 = inttoptr i32 %v3_1601842 to i32*
  store i32 %v4_1601038, i32* %v4_1601843, align 4
  %v2_1601c44 = xor i1 %v7_1601440, true
  %v3_1601c45 = and i1 %v2_1601439, %v2_1601c44
  br i1 %v3_1601c45, label %dec_label_pc_1600c.dec_label_pc_1600c_crit_edge, label %dec_label_pc_15fb0.loopexit

dec_label_pc_1600c.dec_label_pc_1600c_crit_edge:  ; preds = %dec_label_pc_1600c.preheader, %dec_label_pc_1600c.dec_label_pc_1600c_crit_edge
  %v0_1600c.pre = load i32, i32* @ip, align 4
  %v1_1600c = add i32 %v0_1600c.pre, -4
  store i32 %v1_1600c, i32* @ip, align 4
  %v1_16010 = load i32, i32* @lr, align 4
  %v2_16010 = add i32 %v1_16010, %v1_1600c
  %v3_16010 = inttoptr i32 %v2_16010 to i32*
  %v4_16010 = load i32, i32* %v3_16010, align 4
  %v2_16014 = icmp ugt i32 %v1_1600c, 2
  %v7_16014 = icmp eq i32 %v1_1600c, 3
  %v2_16018 = load i32, i32* @r5, align 4
  %v3_16018 = add i32 %v2_16018, %v1_1600c
  %v4_16018 = inttoptr i32 %v3_16018 to i32*
  store i32 %v4_16010, i32* %v4_16018, align 4
  %v2_1601c = xor i1 %v7_16014, true
  %v3_1601c = and i1 %v2_16014, %v2_1601c
  br i1 %v3_1601c, label %dec_label_pc_1600c.dec_label_pc_1600c_crit_edge, label %dec_label_pc_15fb0.loopexit

dec_label_pc_16024:                               ; preds = %dec_label_pc_15f74
  %v2_16024 = icmp eq i32 %v2_15fa0, 0
  store i1 %v2_16024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16024, label %dec_label_pc_16044, label %dec_label_pc_1602c

dec_label_pc_1602c:                               ; preds = %dec_label_pc_16024, %dec_label_pc_16034
  %v2_16038 = phi i32 [ %v5_16038, %dec_label_pc_16034 ], [ %tmp21, %dec_label_pc_16024 ]
  %v0_1602c = phi i32 [ %v0_16044.pre, %dec_label_pc_16034 ], [ %arg3, %dec_label_pc_16024 ]
  %v1_1602c = add i32 %v0_1602c, -1
  store i32 %v1_1602c, i32* @ip, align 4
  %v2_1602c = icmp eq i32 %v0_1602c, 0
  %v7_1602c = icmp eq i32 %v0_1602c, 1
  store i1 %v7_1602c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1602c, label %dec_label_pc_15f5c, label %dec_label_pc_16034

dec_label_pc_16034:                               ; preds = %dec_label_pc_1602c
  %v0_16034 = load i32, i32* @r6, align 4
  %v1_16034 = inttoptr i32 %v0_16034 to i8*
  %v2_16034 = load i8, i8* %v1_16034, align 1
  %v5_16034 = add i32 %v0_16034, 1
  store i32 %v5_16034, i32* @r6, align 4
  %v3_16038 = inttoptr i32 %v2_16038 to i8*
  store i8 %v2_16034, i8* %v3_16038, align 1
  %v4_16038 = load i32, i32* @r4, align 4
  %v5_16038 = add i32 %v4_16038, 1
  store i32 %v5_16038, i32* @r4, align 4
  %v1_1603c = urem i32 %v5_16038, 4
  %v2_1603c = icmp eq i32 %v1_1603c, 0
  store i1 %v2_1603c, i1* %cpsr_z.global-to-local, align 1
  %v0_16044.pre = load i32, i32* @ip, align 4
  br i1 %v2_1603c, label %dec_label_pc_16044, label %dec_label_pc_1602c

dec_label_pc_16044:                               ; preds = %dec_label_pc_16034, %dec_label_pc_16024
  %v1_160588 = phi i32 [ %tmp21, %dec_label_pc_16024 ], [ %v5_16038, %dec_label_pc_16034 ]
  %v0_16044 = phi i32 [ %arg3, %dec_label_pc_16024 ], [ %v0_16044.pre, %dec_label_pc_16034 ]
  %v7_16044 = icmp eq i32 %v0_16044, 3
  store i1 %v7_16044, i1* %cpsr_z.global-to-local, align 1
  %tmp54 = icmp ult i32 %v0_16044, 4
  br i1 %tmp54, label %dec_label_pc_15f84, label %dec_label_pc_1604c

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16044, %dec_label_pc_1604c.dec_label_pc_1604c_crit_edge
  %v1_16058 = phi i32 [ %v4_16058, %dec_label_pc_1604c.dec_label_pc_1604c_crit_edge ], [ %v1_160588, %dec_label_pc_16044 ]
  %v0_1604c = phi i32 [ %v0_1604c.pre, %dec_label_pc_1604c.dec_label_pc_1604c_crit_edge ], [ %v0_16044, %dec_label_pc_16044 ]
  %v1_1604c = add i32 %v0_1604c, -4
  store i32 %v1_1604c, i32* @ip, align 4
  %v0_16050 = load i32, i32* @r6, align 4
  %v1_16050 = inttoptr i32 %v0_16050 to i32*
  %v2_16050 = load i32, i32* %v1_16050, align 4
  %v4_16050 = add i32 %v0_16050, 4
  store i32 %v4_16050, i32* @r6, align 4
  %v2_16054 = icmp ugt i32 %v1_1604c, 2
  %v7_16054 = icmp eq i32 %v1_1604c, 3
  %v2_16058 = inttoptr i32 %v1_16058 to i32*
  store i32 %v2_16050, i32* %v2_16058, align 4
  %v3_16058 = load i32, i32* @r4, align 4
  %v4_16058 = add i32 %v3_16058, 4
  store i32 %v4_16058, i32* @r4, align 4
  %v2_1605c = xor i1 %v7_16054, true
  %v3_1605c = and i1 %v2_16054, %v2_1605c
  br i1 %v3_1605c, label %dec_label_pc_1604c.dec_label_pc_1604c_crit_edge, label %dec_label_pc_15f84.loopexit

dec_label_pc_1604c.dec_label_pc_1604c_crit_edge:  ; preds = %dec_label_pc_1604c
  %v0_1604c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1604c

; uselistorder directives
  uselistorder i32 %v4_16058, { 2, 0, 1 }
  uselistorder i32 %v0_16044, { 1, 0, 3, 2 }
  uselistorder i32 %v5_16038, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1602c, { 0, 2, 1 }
  uselistorder i32 %v1_1600c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_16004, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16004.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15ffc, { 1, 0 }
  uselistorder i32 %v0_15ff4, { 1, 0 }
  uselistorder i32 %v1_15fd8, { 1, 0, 2 }
  uselistorder i32 %v1_15fb8, { 0, 2, 1, 3 }
  uselistorder i32 %v5_15f94, { 1, 0 }
  uselistorder i32 %v2_15fa0, { 3, 1, 0, 2 }
  uselistorder i32 %tmp21, { 5, 2, 4, 0, 6, 1, 3, 8, 7, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg3, { 3, 0, 4, 6, 8, 7, 5, 9, 10, 1, 2, 11, 12 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1604c, { 1, 0 }
  uselistorder label %dec_label_pc_1602c, { 1, 0 }
  uselistorder label %dec_label_pc_1600c.dec_label_pc_1600c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15fb8, { 1, 0 }
  uselistorder label %dec_label_pc_15fb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f8c, { 1, 0 }
  uselistorder label %dec_label_pc_15f84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f5c, { 2, 0, 1, 4, 5, 3, 6, 8, 7 }
}

define i32 @function_16064(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16064:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16064 = icmp eq i32 %arg3, 0
  store i1 %v2_16064, i1* %cpsr_z.global-to-local, align 1
  %v3_16068 = load i32, i32* @r4, align 4
  store i32 %v3_16068, i32* %stack_var_-20, align 4
  br i1 %v2_16064, label %dec_label_pc_16178, label %dec_label_pc_16070

dec_label_pc_16070:                               ; preds = %dec_label_pc_16064
  %v1_16070 = urem i32 %arg2, 256
  store i32 %v1_16070, i32* @ip, align 4
  %v3_16074 = add i32 %tmp, %arg3
  store i32 %v3_16074, i32* %r2.global-to-local, align 4
  %v2_16078 = icmp ne i32 %arg3, 1
  store i1 %v2_16078, i1* %cpsr_c.global-to-local, align 1
  %v7_16078 = icmp eq i32 %arg3, 2
  store i1 %v7_16078, i1* %cpsr_z.global-to-local, align 1
  %v1_1607c = trunc i32 %arg2 to i8
  %v3_1607c = add i32 %v3_16074, -1
  %v4_1607c = inttoptr i32 %v3_1607c to i8*
  store i8 %v1_1607c, i8* %v4_1607c, align 1
  %v0_16080 = load i32, i32* @ip, align 4
  %v1_16080 = trunc i32 %v0_16080 to i8
  store i8 %v1_16080, i8* %arg1, align 1
  %v0_16084 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16084 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_16084 = xor i1 %v1_16084, true
  %v3_16084 = or i1 %v0_16084, %v2_16084
  br i1 %v3_16084, label %dec_label_pc_16178, label %dec_label_pc_16088

dec_label_pc_16088:                               ; preds = %dec_label_pc_16070
  %v0_16088 = load i32, i32* %r3.global-to-local, align 4
  %v2_16088 = icmp ugt i32 %v0_16088, 5
  store i1 %v2_16088, i1* %cpsr_c.global-to-local, align 1
  %v7_16088 = icmp eq i32 %v0_16088, 6
  store i1 %v7_16088, i1* %cpsr_z.global-to-local, align 1
  %v0_1608c = load i32, i32* @ip, align 4
  %v1_1608c = trunc i32 %v0_1608c to i8
  %v2_1608c = load i32, i32* %r2.global-to-local, align 4
  %v3_1608c = add i32 %v2_1608c, -2
  %v4_1608c = inttoptr i32 %v3_1608c to i8*
  store i8 %v1_1608c, i8* %v4_1608c, align 1
  %v0_16090 = load i32, i32* @ip, align 4
  %v1_16090 = trunc i32 %v0_16090 to i8
  %v4_16090 = add i32 %tmp, 1
  %v5_16090 = inttoptr i32 %v4_16090 to i8*
  store i8 %v1_16090, i8* %v5_16090, align 1
  %v0_16094 = load i32, i32* @ip, align 4
  %v1_16094 = trunc i32 %v0_16094 to i8
  %v2_16094 = load i32, i32* %r2.global-to-local, align 4
  %v3_16094 = add i32 %v2_16094, -3
  %v4_16094 = inttoptr i32 %v3_16094 to i8*
  store i8 %v1_16094, i8* %v4_16094, align 1
  %v0_16098 = load i32, i32* @ip, align 4
  %v1_16098 = trunc i32 %v0_16098 to i8
  %v4_16098 = add i32 %tmp, 2
  %v5_16098 = inttoptr i32 %v4_16098 to i8*
  store i8 %v1_16098, i8* %v5_16098, align 1
  %v0_1609c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1609c = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_1609c = xor i1 %v1_1609c, true
  %v3_1609c = or i1 %v0_1609c, %v2_1609c
  br i1 %v3_1609c, label %dec_label_pc_16178, label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16088
  %v0_160a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_160a0 = icmp ugt i32 %v0_160a0, 7
  store i1 %v2_160a0, i1* %cpsr_c.global-to-local, align 1
  %v7_160a0 = icmp eq i32 %v0_160a0, 8
  store i1 %v7_160a0, i1* %cpsr_z.global-to-local, align 1
  %v0_160a4 = load i32, i32* @ip, align 4
  %v1_160a4 = trunc i32 %v0_160a4 to i8
  %v2_160a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_160a4 = add i32 %v2_160a4, -4
  %v4_160a4 = inttoptr i32 %v3_160a4 to i8*
  store i8 %v1_160a4, i8* %v4_160a4, align 1
  %v0_160a8 = load i32, i32* @ip, align 4
  %v1_160a8 = trunc i32 %v0_160a8 to i8
  %v4_160a8 = add i32 %tmp, 3
  %v5_160a8 = inttoptr i32 %v4_160a8 to i8*
  store i8 %v1_160a8, i8* %v5_160a8, align 1
  %v0_160ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_160ac = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_160ac = xor i1 %v1_160ac, true
  %v3_160ac = or i1 %v0_160ac, %v2_160ac
  br i1 %v3_160ac, label %dec_label_pc_16178, label %dec_label_pc_160b0

dec_label_pc_160b0:                               ; preds = %dec_label_pc_160a0
  %v2_160b0 = sub i32 0, %tmp
  %v1_160b4 = urem i32 %v2_160b0, 4
  store i32 %v1_160b4, i32* %r1.global-to-local, align 4
  %v0_160b8 = load i32, i32* @ip, align 4
  %v2_160bc = mul i32 %v0_160b8, 257
  store i32 %v2_160bc, i32* %r2.global-to-local, align 4
  %v1_160c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_160c0 = sub i32 %v1_160c0, %v1_160b4
  %v1_160c4 = and i32 %v2_160c0, -4
  store i32 %v1_160c4, i32* %lr.global-to-local, align 4
  %v3_160c8 = add i32 %v1_160b4, %tmp
  store i32 %v3_160c8, i32* %r6.global-to-local, align 4
  %v3_160cc = mul i32 %v0_160b8, 16842752
  store i32 %v3_160cc, i32* %r3.global-to-local, align 4
  %v2_160d0 = mul i32 %v0_160b8, 16843009
  store i32 %v2_160d0, i32* @ip, align 4
  %v2_160d4 = add i32 %v1_160c4, %v3_160c8
  store i32 %v2_160d4, i32* %r5.global-to-local, align 4
  %v2_160d8 = icmp ugt i32 %v1_160c4, 7
  store i1 %v2_160d8, i1* %cpsr_c.global-to-local, align 1
  %v7_160d8 = icmp eq i32 %v1_160c4, 8
  store i1 %v7_160d8, i1* %cpsr_z.global-to-local, align 1
  %v5_160dc = inttoptr i32 %v3_160c8 to i32*
  store i32 %v2_160d0, i32* %v5_160dc, align 4
  %v0_160e0 = load i32, i32* @ip, align 4
  %v1_160e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_160e0 = add i32 %v1_160e0, -4
  %v3_160e0 = inttoptr i32 %v2_160e0 to i32*
  store i32 %v0_160e0, i32* %v3_160e0, align 4
  %v2_160e4 = xor i1 %v2_160d8, true
  %v3_160e4 = or i1 %v7_160d8, %v2_160e4
  br i1 %v3_160e4, label %dec_label_pc_16178, label %dec_label_pc_160e8

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160b0
  %v0_160e8 = load i32, i32* %lr.global-to-local, align 4
  %v2_160e8 = icmp ugt i32 %v0_160e8, 23
  store i1 %v2_160e8, i1* %cpsr_c.global-to-local, align 1
  %v7_160e8 = icmp eq i32 %v0_160e8, 24
  store i1 %v7_160e8, i1* %cpsr_z.global-to-local, align 1
  %v0_160ec = load i32, i32* @ip, align 4
  %v1_160ec = load i32, i32* %r6.global-to-local, align 4
  %v2_160ec = add i32 %v1_160ec, 4
  %v3_160ec = inttoptr i32 %v2_160ec to i32*
  store i32 %v0_160ec, i32* %v3_160ec, align 4
  %v0_160f0 = load i32, i32* @ip, align 4
  %v1_160f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_160f0 = add i32 %v1_160f0, 8
  %v3_160f0 = inttoptr i32 %v2_160f0 to i32*
  store i32 %v0_160f0, i32* %v3_160f0, align 4
  %v0_160f4 = load i32, i32* @ip, align 4
  %v1_160f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_160f4 = add i32 %v1_160f4, -12
  %v3_160f4 = inttoptr i32 %v2_160f4 to i32*
  store i32 %v0_160f4, i32* %v3_160f4, align 4
  %v0_160f8 = load i32, i32* @ip, align 4
  %v1_160f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_160f8 = add i32 %v1_160f8, -8
  %v3_160f8 = inttoptr i32 %v2_160f8 to i32*
  store i32 %v0_160f8, i32* %v3_160f8, align 4
  %v2_160fc = xor i1 %v2_160e8, true
  %v3_160fc = or i1 %v7_160e8, %v2_160fc
  br i1 %v3_160fc, label %dec_label_pc_16178, label %dec_label_pc_16100

dec_label_pc_16100:                               ; preds = %dec_label_pc_160e8
  %v0_16100 = load i32, i32* %r6.global-to-local, align 4
  %v1_16100 = and i32 %v0_16100, 4
  %v1_16104 = or i32 %v1_16100, 24
  store i32 %v1_16104, i32* %r7.global-to-local, align 4
  %v1_16108 = load i32, i32* %lr.global-to-local, align 4
  %v2_16108 = sub i32 %v1_16108, %v1_16104
  store i32 %v2_16108, i32* %lr.global-to-local, align 4
  %v0_1610c = load i32, i32* @ip, align 4
  store i32 %v0_1610c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16118 = icmp ugt i32 %v2_16108, 30
  store i1 %v2_16118, i1* %cpsr_c.global-to-local, align 1
  %v7_16118 = icmp eq i32 %v2_16108, 31
  store i1 %v7_16118, i1* %cpsr_z.global-to-local, align 1
  %v2_1611c = add i32 %v0_16100, 12
  %v3_1611c = inttoptr i32 %v2_1611c to i32*
  store i32 %v0_1610c, i32* %v3_1611c, align 4
  %v0_16120 = load i32, i32* @ip, align 4
  %v1_16120 = load i32, i32* %r6.global-to-local, align 4
  %v2_16120 = add i32 %v1_16120, 16
  %v3_16120 = inttoptr i32 %v2_16120 to i32*
  store i32 %v0_16120, i32* %v3_16120, align 4
  %v0_16124 = load i32, i32* @ip, align 4
  %v1_16124 = load i32, i32* %r6.global-to-local, align 4
  %v2_16124 = add i32 %v1_16124, 20
  %v3_16124 = inttoptr i32 %v2_16124 to i32*
  store i32 %v0_16124, i32* %v3_16124, align 4
  %v0_16128 = load i32, i32* @ip, align 4
  %v1_16128 = load i32, i32* %r6.global-to-local, align 4
  %v2_16128 = add i32 %v1_16128, 24
  %v3_16128 = inttoptr i32 %v2_16128 to i32*
  store i32 %v0_16128, i32* %v3_16128, align 4
  %v0_1612c = load i32, i32* %r3.global-to-local, align 4
  %v1_1612c = load i32, i32* %r1.global-to-local, align 4
  %v2_1612c = or i32 %v1_1612c, %v0_1612c
  store i32 %v2_1612c, i32* %r3.global-to-local, align 4
  %v1_16130 = load i32, i32* %r2.global-to-local, align 4
  %v2_16130 = or i32 %v1_16130, %v1_1612c
  store i32 %v2_16130, i32* %r4.global-to-local, align 4
  %v0_16134 = load i32, i32* @ip, align 4
  %v1_16134 = load i32, i32* %r5.global-to-local, align 4
  %v2_16134 = add i32 %v1_16134, -16
  %v3_16134 = inttoptr i32 %v2_16134 to i32*
  store i32 %v0_16134, i32* %v3_16134, align 4
  %v0_16138 = load i32, i32* @ip, align 4
  %v1_16138 = load i32, i32* %r5.global-to-local, align 4
  %v2_16138 = add i32 %v1_16138, -28
  %v3_16138 = inttoptr i32 %v2_16138 to i32*
  store i32 %v0_16138, i32* %v3_16138, align 4
  %v0_1613c = load i32, i32* @ip, align 4
  %v1_1613c = load i32, i32* %r5.global-to-local, align 4
  %v2_1613c = add i32 %v1_1613c, -24
  %v3_1613c = inttoptr i32 %v2_1613c to i32*
  store i32 %v0_1613c, i32* %v3_1613c, align 4
  %v0_16140 = load i32, i32* @ip, align 4
  %v1_16140 = load i32, i32* %r5.global-to-local, align 4
  %v2_16140 = add i32 %v1_16140, -20
  %v3_16140 = inttoptr i32 %v2_16140 to i32*
  store i32 %v0_16140, i32* %v3_16140, align 4
  %v2_16144 = xor i1 %v2_16118, true
  %v3_16144 = or i1 %v7_16118, %v2_16144
  br i1 %v3_16144, label %dec_label_pc_16178, label %dec_label_pc_16148

dec_label_pc_16148:                               ; preds = %dec_label_pc_16100
  %v0_16148 = load i32, i32* %r6.global-to-local, align 4
  %v1_16148 = load i32, i32* %r7.global-to-local, align 4
  %v2_16148 = add i32 %v1_16148, %v0_16148
  store i32 %v2_16148, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1614c

dec_label_pc_1614c:                               ; preds = %dec_label_pc_1614c, %dec_label_pc_16148
  %v0_16154 = phi i32 [ %v1_16170, %dec_label_pc_1614c ], [ %v2_16148, %dec_label_pc_16148 ]
  %v0_1614c = load i32, i32* %lr.global-to-local, align 4
  %v1_1614c = add i32 %v0_1614c, -32
  store i32 %v1_1614c, i32* %lr.global-to-local, align 4
  %v2_16150 = icmp ugt i32 %v1_1614c, 30
  %v7_16150 = icmp eq i32 %v1_1614c, 31
  %v1_16154 = inttoptr i32 %v0_16154 to i32*
  %v2_16154 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_16154, i32* %v1_16154, align 4
  %v3_16154 = add i32 %v0_16154, 4
  %v4_16154 = inttoptr i32 %v3_16154 to i32*
  %v5_16154 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16154, i32* %v4_16154, align 4
  %v0_16158 = load i32, i32* %r3.global-to-local, align 4
  %v1_16158 = load i32, i32* %r2.global-to-local, align 4
  %v2_16158 = add i32 %v1_16158, 8
  %v3_16158 = inttoptr i32 %v2_16158 to i32*
  store i32 %v0_16158, i32* %v3_16158, align 4
  %v0_1615c = load i32, i32* %r4.global-to-local, align 4
  %v1_1615c = load i32, i32* %r2.global-to-local, align 4
  %v2_1615c = add i32 %v1_1615c, 12
  %v3_1615c = inttoptr i32 %v2_1615c to i32*
  store i32 %v0_1615c, i32* %v3_1615c, align 4
  %v0_16160 = load i32, i32* %r3.global-to-local, align 4
  %v1_16160 = load i32, i32* %r2.global-to-local, align 4
  %v2_16160 = add i32 %v1_16160, 16
  %v3_16160 = inttoptr i32 %v2_16160 to i32*
  store i32 %v0_16160, i32* %v3_16160, align 4
  %v0_16164 = load i32, i32* %r4.global-to-local, align 4
  %v1_16164 = load i32, i32* %r2.global-to-local, align 4
  %v2_16164 = add i32 %v1_16164, 20
  %v3_16164 = inttoptr i32 %v2_16164 to i32*
  store i32 %v0_16164, i32* %v3_16164, align 4
  %v0_16168 = load i32, i32* %r3.global-to-local, align 4
  %v1_16168 = load i32, i32* %r2.global-to-local, align 4
  %v2_16168 = add i32 %v1_16168, 24
  %v3_16168 = inttoptr i32 %v2_16168 to i32*
  store i32 %v0_16168, i32* %v3_16168, align 4
  %v0_1616c = load i32, i32* %r4.global-to-local, align 4
  %v1_1616c = load i32, i32* %r2.global-to-local, align 4
  %v2_1616c = add i32 %v1_1616c, 28
  %v3_1616c = inttoptr i32 %v2_1616c to i32*
  store i32 %v0_1616c, i32* %v3_1616c, align 4
  %v0_16170 = load i32, i32* %r2.global-to-local, align 4
  %v1_16170 = add i32 %v0_16170, 32
  store i32 %v1_16170, i32* %r2.global-to-local, align 4
  %v2_16174 = xor i1 %v7_16150, true
  %v3_16174 = and i1 %v2_16150, %v2_16174
  br i1 %v3_16174, label %dec_label_pc_1614c, label %dec_label_pc_16178.loopexit

dec_label_pc_16178.loopexit:                      ; preds = %dec_label_pc_1614c
  store i1 %v2_16150, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_16150, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16178

dec_label_pc_16178:                               ; preds = %dec_label_pc_16178.loopexit, %dec_label_pc_16100, %dec_label_pc_160e8, %dec_label_pc_160a0, %dec_label_pc_16088, %dec_label_pc_16070, %dec_label_pc_16064, %dec_label_pc_160b0
  %v2_16178 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16178, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_16170, { 1, 0 }
  uselistorder i1 %v7_16150, { 1, 0 }
  uselistorder i32 %v0_16154, { 1, 0 }
  uselistorder i32 %v0_160e8, { 1, 0 }
  uselistorder i32 %v3_160c8, { 1, 0, 2 }
  uselistorder i32 %v1_160c4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_160b4, { 2, 1, 0 }
  uselistorder i32 %v0_160a0, { 1, 0 }
  uselistorder i32 %v0_16088, { 1, 0 }
  uselistorder i32 %tmp, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 4, 3, 5, 7 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 -16, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 30, { 6, 7, 4, 5, 0, 12, 13, 8, 1, 9, 2, 10, 3, 11, 14 }
  uselistorder i32 -3, { 4, 2, 0, 1, 3 }
  uselistorder i32 %arg3, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16178, { 0, 1, 2, 7, 3, 4, 5, 6 }
}

define i32 @function_16180(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16180:
  ret i32 %arg2
}

define i32 @function_161a0(i32* %arg1) local_unnamed_addr {
dec_label_pc_161a0:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_161a0 = load i32, i32* @r0, align 4
  %v1_161a0 = inttoptr i32 %v0_161a0 to i32*
  %v2_161a0 = load i32, i32* %v1_161a0, align 4
  %v2_161a4 = icmp eq i32 %v2_161a0, 0
  store i1 %v2_161a4, i1* @cpsr_z, align 1
  %v3_161a8 = load i32, i32* @r4, align 4
  store i32 %v3_161a8, i32* %stack_var_-8, align 4
  store i32 %v0_161a0, i32* %r4.global-to-local, align 4
  br i1 %v2_161a4, label %dec_label_pc_16204, label %dec_label_pc_161b4

dec_label_pc_161b4:                               ; preds = %dec_label_pc_161a0
  %v0_161b4 = call i32 @function_167b4()
  store i32 %v0_161b4, i32* @r0, align 4
  %v2_161bc = inttoptr i32 %v0_161b4 to i32*
  store i32 0, i32* %v2_161bc, align 4
  %v0_161c0 = call i32 @function_167b4()
  %v1_161c4 = add i32 %v0_161c0, 4
  %v2_161c4 = inttoptr i32 %v1_161c4 to i32*
  %v3_161c4 = load i32, i32* %v2_161c4, align 4
  %v2_161c8 = icmp eq i32 %v3_161c4, 0
  br i1 %v2_161c8, label %dec_label_pc_16204, label %dec_label_pc_161d0

dec_label_pc_161d0:                               ; preds = %dec_label_pc_161b4
  %v0_161d4 = load i32, i32* %r4.global-to-local, align 4
  %v4_161e0 = call i32 @function_16180(i32 240, i32 %v0_161d4, i32 129, i32 1)
  %v4_161e8 = icmp eq i32 %v4_161e0, -38
  br i1 %v4_161e8, label %dec_label_pc_161ec, label %dec_label_pc_16204

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161d0
  %v0_161f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_161fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161fc, i32* %r4.global-to-local, align 4
  %v4_16200 = call i32 @function_16180(i32 240, i32 %v0_161f0, i32 1, i32 1)
  br label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %dec_label_pc_161d0, %dec_label_pc_161b4, %dec_label_pc_161a0, %dec_label_pc_161ec
  %v1_16208 = phi i32 [ %v4_161e0, %dec_label_pc_161d0 ], [ %v0_161c0, %dec_label_pc_161b4 ], [ %v0_161a0, %dec_label_pc_161a0 ], [ %v4_16200, %dec_label_pc_161ec ]
  %v2_16204 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16204, i32* %r4.global-to-local, align 4
  ret i32 %v1_16208

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_16180, { 1, 0 }
  uselistorder label %dec_label_pc_16204, { 3, 0, 1, 2 }
}

define i32 @function_1620c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1620c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_16210 = load i32, i32* @global_var_23838.562, align 4
  %v2_16214 = icmp eq i32 %v3_16210, 0
  store i1 %v2_16214, i1* @cpsr_z, align 1
  %v0_1621c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1621c, i32* @r4, align 4
  br i1 %v2_16214, label %dec_label_pc_16264, label %dec_label_pc_16230.preheader

dec_label_pc_16230.preheader:                     ; preds = %dec_label_pc_1620c
  %v2_16220 = add i32 %v0_1621c, 4
  store i32 %v2_16220, i32* @r6, align 4
  br label %dec_label_pc_16230

dec_label_pc_1622c:                               ; preds = %dec_label_pc_1624c
  %v2_1622c = inttoptr i32 %v0_16254 to i32*
  %v3_1622c = call i32 @function_16334(i32* %v2_1622c, i32 %v0_16258)
  store i32 %v3_1622c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16230.backedge

dec_label_pc_16230.backedge:                      ; preds = %dec_label_pc_1622c, %dec_label_pc_16230
  %v0_16230.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16230

dec_label_pc_16230:                               ; preds = %dec_label_pc_16230.backedge, %dec_label_pc_16230.preheader
  %v0_16230 = phi i32 [ %v0_16230.pre, %dec_label_pc_16230.backedge ], [ %v0_1621c, %dec_label_pc_16230.preheader ]
  %v1_16230 = inttoptr i32 %v0_16230 to i32*
  %v2_16230 = load i32, i32* %v1_16230, align 4
  store i32 %v2_16230, i32* @r5, align 4
  store i32 %v2_16230, i32* %r0.global-to-local, align 4
  %v4_16240 = call i32 @function_16808(i32 %v2_16230, i32 1, i32* %v1_16230)
  store i32 %v4_16240, i32* %r0.global-to-local, align 4
  %v2_16244 = icmp eq i32 %v4_16240, 0
  store i1 %v2_16244, i1* @cpsr_z, align 1
  br i1 %v2_16244, label %dec_label_pc_1624c, label %dec_label_pc_16230.backedge

dec_label_pc_1624c:                               ; preds = %dec_label_pc_16230
  store i32 1, i32* @r2, align 4
  %v0_16250 = load i32, i32* @r5, align 4
  %v2_16250 = icmp eq i32 %v0_16250, 0
  %v0_16254 = load i32, i32* @r4, align 4
  store i32 %v0_16254, i32* %r0.global-to-local, align 4
  %v0_16258 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_16250, label %dec_label_pc_16264.loopexit, label %dec_label_pc_1622c

dec_label_pc_16264.loopexit:                      ; preds = %dec_label_pc_1624c
  br label %dec_label_pc_16264

dec_label_pc_16264:                               ; preds = %dec_label_pc_16264.loopexit, %dec_label_pc_1620c
  %v1_16268 = phi i32 [ %v0_16254, %dec_label_pc_16264.loopexit ], [ %v0_1621c, %dec_label_pc_1620c ]
  ret i32 %v1_16268

; uselistorder directives
  uselistorder i32 %v0_16254, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_16230.backedge, { 1, 0 }
}

define i32 @function_16270(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16270:
  store i32 %arg1, i32* @r1, align 4
  %v0_16270 = load i32, i32* @lr, align 4
  store i32 90780, i32* @lr, align 4
  %v1_16298 = call i32 @function_162ac()
  store i32 %v0_16270, i32* @lr, align 4
  ret i32 %v1_16298
}

define i32 @function_162ac() local_unnamed_addr {
dec_label_pc_162ac:
  %v0_162cc = call i32 @function_173a4()
  ret i32 %v0_162cc
}

define i32 @function_162dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_162dc:
  ret i32 %arg2
}

define i32 @function_16300(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16300:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16300 = load i32, i32* @r4, align 4
  store i32 %v3_16300, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1630c

dec_label_pc_1630c:                               ; preds = %dec_label_pc_1630c.dec_label_pc_1630c_crit_edge, %dec_label_pc_16300
  %v0_16318 = phi i32 [ %v0_16318.pre, %dec_label_pc_1630c.dec_label_pc_1630c_crit_edge ], [ %arg2, %dec_label_pc_16300 ]
  %v0_1630c = phi i32 [ %v0_1630c.pre, %dec_label_pc_1630c.dec_label_pc_1630c_crit_edge ], [ %tmp, %dec_label_pc_16300 ]
  %v1_1630c = inttoptr i32 %v0_1630c to i32*
  %v2_1630c = load i32, i32* %v1_1630c, align 4
  store i32 %v2_1630c, i32* %r4.global-to-local, align 4
  %v2_16318 = add i32 %v2_1630c, %v0_16318
  %v4_1631c = call i32 @function_16808(i32 %v2_1630c, i32 %v2_16318, i32* %v1_1630c)
  %v2_16320 = icmp eq i32 %v4_1631c, 0
  store i1 %v2_16320, i1* @cpsr_z, align 1
  br i1 %v2_16320, label %dec_label_pc_16328, label %dec_label_pc_1630c.dec_label_pc_1630c_crit_edge

dec_label_pc_1630c.dec_label_pc_1630c_crit_edge:  ; preds = %dec_label_pc_1630c
  %v0_1630c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_16318.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1630c

dec_label_pc_16328:                               ; preds = %dec_label_pc_1630c
  %v0_16328 = load i32, i32* %r4.global-to-local, align 4
  %v2_1632c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1632c, i32* %r4.global-to-local, align 4
  ret i32 %v0_16328

; uselistorder directives
  uselistorder i32 %v2_1630c, { 1, 0, 2 }
}

define i32 @function_16334(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16334:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_16334 = load i32, i32* @r4, align 4
  %v6_16334 = load i32, i32* @r5, align 4
  %v9_16334 = load i32, i32* @r6, align 4
  %v12_16334 = load i32, i32* @r7, align 4
  %v15_16334 = load i32, i32* @r8, align 4
  %v18_16334 = load i32, i32* @sl, align 4
  %v21_16334 = load i32, i32* @lr, align 4
  %v0_16338 = load i32, i32* @r3, align 4
  %v2_16338 = icmp eq i32 %v0_16338, 0
  %v0_1633c = load i32, i32* @r2, align 4
  store i32 %v0_1633c, i32* @r8, align 4
  %. = select i1 %v2_16338, i32 0, i32 128
  store i32 %., i32* %sl.global-to-local, align 4
  %v0_1634c = load i32, i32* @r0, align 4
  store i32 %v0_1634c, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 99, i32* %r2.global-to-local, align 4
  %v2_1637427 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_16374

dec_label_pc_1635c:                               ; preds = %dec_label_pc_1637c, %dec_label_pc_16374
  %v0_1635c = load i32, i32* @r6, align 4
  %v1_1635c = inttoptr i32 %v0_1635c to i32*
  %v2_1635c = load i32, i32* %v1_1635c, align 4
  %v1_16360 = load i32, i32* @r8, align 4
  %v9_16360 = icmp eq i32 %v2_1635c, %v1_16360
  store i1 %v9_16360, i1* @cpsr_z, align 1
  br i1 %v9_16360, label %dec_label_pc_16368, label %dec_label_pc_1640c

dec_label_pc_16368:                               ; preds = %dec_label_pc_1635c
  %v0_16368 = call i32 @function_167b4()
  store i32 %v0_16368, i32* @r0, align 4
  %v0_1636c.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_16374.pre = load i32, i32* @r5, align 4
  %v1_1636c = add i32 %v0_1636c.pre, -1
  store i32 %v1_1636c, i32* %r2.global-to-local, align 4
  %v2_1636c = icmp eq i32 %v0_1636c.pre, 0
  %v2_16374 = icmp eq i32 %v0_16374.pre, 0
  store i1 %v2_16374, i1* @cpsr_z, align 1
  br i1 %v2_1636c, label %dec_label_pc_1638c, label %dec_label_pc_16374

dec_label_pc_16374:                               ; preds = %dec_label_pc_16334, %dec_label_pc_16368
  %v2_1637430 = phi i1 [ %v2_1637427, %dec_label_pc_16334 ], [ %v2_16374, %dec_label_pc_16368 ]
  %v0_1639429 = phi i32 [ %arg2, %dec_label_pc_16334 ], [ %v0_16374.pre, %dec_label_pc_16368 ]
  %v1_16414828 = phi i32 [ %v0_1634c, %dec_label_pc_16334 ], [ %v0_16368, %dec_label_pc_16368 ]
  br i1 %v2_1637430, label %dec_label_pc_1635c, label %dec_label_pc_1637c

dec_label_pc_1637c:                               ; preds = %dec_label_pc_16374
  %v1_1637c = inttoptr i32 %v0_1639429 to i32*
  %v2_1637c = load i32, i32* %v1_1637c, align 4
  %v2_16380 = icmp eq i32 %v2_1637c, 0
  store i1 %v2_16380, i1* @cpsr_z, align 1
  br i1 %v2_16380, label %dec_label_pc_1635c, label %dec_label_pc_16394

dec_label_pc_1638c:                               ; preds = %dec_label_pc_16368
  br i1 %v2_16374, label %dec_label_pc_163d0, label %dec_label_pc_1638c.dec_label_pc_16394_crit_edge

dec_label_pc_1638c.dec_label_pc_16394_crit_edge:  ; preds = %dec_label_pc_1638c
  %.pre = inttoptr i32 %v0_16374.pre to i32*
  br label %dec_label_pc_16394

dec_label_pc_16394:                               ; preds = %dec_label_pc_1637c, %dec_label_pc_1638c.dec_label_pc_16394_crit_edge
  %v2_1639c.pre-phi = phi i32* [ %.pre, %dec_label_pc_1638c.dec_label_pc_16394_crit_edge ], [ %v1_1637c, %dec_label_pc_1637c ]
  %v3_1639c = call i32 @function_16300(i32* %v2_1639c.pre-phi, i32 1)
  br label %dec_label_pc_163d0

dec_label_pc_163a4:                               ; preds = %dec_label_pc_163d4
  %v0_163a4 = load i32, i32* %r7.global-to-local, align 4
  %v5_163a8 = call i32 @function_162dc(i32 240, i32 %v0_163d4, i32 %v0_163e0, i32 %v2_163d4, i32 %v0_163a4)
  %v4_163b0 = icmp eq i32 %v5_163a8, -38
  br i1 %v4_163b0, label %dec_label_pc_163b4, label %dec_label_pc_163d4

dec_label_pc_163b4:                               ; preds = %dec_label_pc_163a4
  %v0_163b4 = load i32, i32* %r4.global-to-local, align 4
  %v0_163b8 = load i32, i32* @r6, align 4
  %v0_163bc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_163bc, i32* %r2.global-to-local, align 4
  %v5_163c8 = call i32 @function_162dc(i32 240, i32 %v0_163b8, i32 %v0_163bc, i32 %v0_163b4, i32 %v0_163bc)
  br label %dec_label_pc_163d4

dec_label_pc_163d0:                               ; preds = %dec_label_pc_1638c, %dec_label_pc_16394
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163a4, %dec_label_pc_163b4, %dec_label_pc_163d0
  %v0_163d4 = load i32, i32* @r6, align 4
  %v1_163d4 = inttoptr i32 %v0_163d4 to i32*
  %v2_163d4 = load i32, i32* %v1_163d4, align 4
  store i32 %v2_163d4, i32* %r4.global-to-local, align 4
  %v1_163d8 = load i32, i32* @r8, align 4
  %v9_163d8 = icmp eq i32 %v2_163d4, %v1_163d8
  %v0_163e0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_163e0, i32* %r2.global-to-local, align 4
  br i1 %v9_163d8, label %dec_label_pc_163a4, label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %dec_label_pc_163d4
  %v0_163f0 = load i32, i32* @r5, align 4
  %v2_163f0 = icmp eq i32 %v0_163f0, 0
  store i1 %v2_163f0, i1* @cpsr_z, align 1
  br i1 %v2_163f0, label %dec_label_pc_1640c, label %dec_label_pc_163f8

dec_label_pc_163f8:                               ; preds = %dec_label_pc_163f0
  store i32 %v3_16334, i32* @r4, align 4
  store i32 %v12_16334, i32* %r7.global-to-local, align 4
  store i32 %v15_16334, i32* @r8, align 4
  store i32 %v18_16334, i32* %sl.global-to-local, align 4
  store i32 %v21_16334, i32* @lr, align 4
  %v2_16408 = inttoptr i32 %v0_163f0 to i32*
  %v3_16408 = call i32 @function_16300(i32* %v2_16408, i32 -1)
  br label %dec_label_pc_1640c

dec_label_pc_1640c:                               ; preds = %dec_label_pc_1635c, %dec_label_pc_163f0, %dec_label_pc_163f8
  %v1_16414 = phi i32 [ 240, %dec_label_pc_163f0 ], [ %v3_16408, %dec_label_pc_163f8 ], [ %v1_16414828, %dec_label_pc_1635c ]
  store i32 %v3_16334, i32* @r4, align 4
  store i32 %v6_16334, i32* @r5, align 4
  store i32 %v9_16334, i32* @r6, align 4
  store i32 %v12_16334, i32* @r7, align 4
  store i32 %v15_16334, i32* @r8, align 4
  store i32 %v18_16334, i32* @sl, align 4
  store i32 %v21_16334, i32* @lr, align 4
  ret i32 %v1_16414

; uselistorder directives
  uselistorder i32 %v0_163e0, { 1, 0 }
  uselistorder i32 %v2_163d4, { 1, 2, 0 }
  uselistorder i32 %v0_163d4, { 1, 0 }
  uselistorder i32 %v0_16374.pre, { 0, 2, 1 }
  uselistorder i32 %v21_16334, { 1, 0 }
  uselistorder i32 %v18_16334, { 1, 0 }
  uselistorder i32 %v15_16334, { 1, 0 }
  uselistorder i32 %v12_16334, { 1, 0 }
  uselistorder i32 %v3_16334, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_162dc, { 1, 0 }
  uselistorder label %dec_label_pc_1640c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_163d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_163d0, { 1, 0 }
  uselistorder label %dec_label_pc_16394, { 1, 0 }
  uselistorder label %dec_label_pc_16374, { 1, 0 }
}

define i32 @function_16418() local_unnamed_addr {
dec_label_pc_16418:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_16418 = load i32, i32* @r0, align 4
  %v0_1641c = load i32, i32* @r7, align 4
  store i32 %v0_1641c, i32* %stack_var_-4, align 4
  %v0_16420 = load i32, i32* @r2, align 4
  store i32 %v0_16420, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_16418, 2
  br i1 %tmp, label %.thread7, label %dec_label_pc_1642c

.thread7:                                         ; preds = %dec_label_pc_16418
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16468

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16418
  %v1_16438 = sub i32 0, %v0_16418
  store i32 %v1_16438, i32* %r0.global-to-local, align 4
  %v1_1643c = add i32 %v0_16418, 1
  %v2_1643c = icmp ult i32 %v1_16438, 2
  br i1 %v2_1643c, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_1642c
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_1642c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_1643c, %dec_label_pc_1642c ]
  %v0_1644c.pr = phi i32 [ 0, %bb ], [ %v1_1643c, %dec_label_pc_1642c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_16444 = icmp eq i32 %v0_16420, 0
  br i1 %v2_16444, label %.thread, label %bb12

.thread:                                          ; preds = %bb11
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16468

bb12:                                             ; preds = %bb11
  %v2_1644c = icmp eq i32 %v0_1644c.pr, 0
  br i1 %v2_1644c, label %dec_label_pc_16468, label %dec_label_pc_16454

dec_label_pc_16454:                               ; preds = %bb12
  %v1_16454 = inttoptr i32 %v0_16420 to i32*
  %v2_16454 = load i32, i32* %v1_16454, align 4
  %v1_16458 = add i32 %v0_16420, 4
  %v2_16458 = inttoptr i32 %v1_16458 to i32*
  %v3_16458 = load i32, i32* %v2_16458, align 4
  %tmp13 = bitcast i32 %v2_16454 to float
  %tmp14 = call float @fabsf(float %tmp13)
  %v1_1645c = bitcast float %tmp14 to i32
  %v1_16460 = and i32 %v3_16458, -4
  store i32 %v1_16460, i32* %r3.global-to-local, align 4
  store i32 %v1_1645c, i32* %v1_16454, align 4
  %v5_16464 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_16464, i32* %v2_16458, align 4
  %v2_16468.pre = load i32, i32* %stack_var_-4, align 4
  %v1_1646c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16468

dec_label_pc_16468:                               ; preds = %.thread7, %.thread, %bb12, %dec_label_pc_16454
  %v1_1646c = phi i32 [ %v1_16438, %.thread ], [ %v1_16438, %bb12 ], [ %v1_1646c.pre, %dec_label_pc_16454 ], [ 22, %.thread7 ]
  %v2_16468 = phi i32 [ %v0_1641c, %.thread ], [ %v0_1641c, %bb12 ], [ %v2_16468.pre, %dec_label_pc_16454 ], [ %v0_1641c, %.thread7 ]
  store i32 %v2_16468, i32* @r7, align 4
  ret i32 %v1_1646c

; uselistorder directives
  uselistorder i32 %v0_16418, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16468, { 3, 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_16470(i32 %arg1) local_unnamed_addr {
dec_label_pc_16470:
  %stack_var_-16 = alloca i32, align 4
  %v2_16474 = ptrtoint i32* %stack_var_-16 to i32
  %v2_16480 = call i32 @function_164e0(i32 2, i32 %v2_16474)
  %v2_16484 = icmp eq i32 %v2_16480, 0
  br i1 %v2_16484, label %dec_label_pc_1648c, label %dec_label_pc_164cc

dec_label_pc_1648c:                               ; preds = %dec_label_pc_16470
  %v2_1648c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1648c, i32* @r4, align 4
  %v10_16498 = icmp sgt i32 %v2_1648c, 2147
  br i1 %v10_16498, label %dec_label_pc_164cc, label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %dec_label_pc_1648c
  store i32 1000, i32* @r1, align 4
  %v0_164a4 = call i32 @function_13550()
  %v0_164b0 = load i32, i32* @r4, align 4
  %v2_164b0 = mul i32 %v0_164b0, 1000000
  %v2_164b8 = sub i32 2147483647, %v2_164b0
  %v7_164c0 = icmp sgt i32 %v0_164a4, %v2_164b8
  %v10_164c04 = add i32 %v2_164b0, %v0_164a4
  %.v10_164c04 = select i1 %v7_164c0, i32 -1, i32 %v10_164c04
  br label %dec_label_pc_164cc

dec_label_pc_164cc:                               ; preds = %dec_label_pc_1649c, %dec_label_pc_1648c, %dec_label_pc_16470
  %storemerge = phi i32 [ -1, %dec_label_pc_16470 ], [ -1, %dec_label_pc_1648c ], [ %.v10_164c04, %dec_label_pc_1649c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 2147483647, { 4, 6, 0, 1, 2, 3, 5 }
}

define i32 @function_164d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164d8:
  %v0_164d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_164d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_164d8
  %v3_164d8 = udiv i32 %arg2, 65536
  %v4_164d8 = mul i32 %arg2, 65536
  %v5_164d8 = or i32 %v3_164d8, %v4_164d8
  %v8_164d8 = and i32 %v5_164d8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_164d8, %bb
  %v6_164dc = phi i32 [ %arg1, %dec_label_pc_164d8 ], [ %v8_164d8, %bb ]
  ret i32 %v6_164dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_164e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164e0:
  %r4.global-to-local = alloca i32, align 4
  %v6_164e0 = load i32, i32* @r5, align 4
  %v9_164e0 = load i32, i32* @r6, align 4
  %v12_164e0 = load i32, i32* @r7, align 4
  %v2_164e8 = load i32, i32* @global_var_23518.615, align 4
  %v2_164ec = icmp eq i32 %v2_164e8, 0
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_164ec, label %dec_label_pc_16500, label %dec_label_pc_16540

dec_label_pc_16500:                               ; preds = %dec_label_pc_164e0
  %v4_16508 = call i32 @function_173d4(i32 ptrtoint ([10 x i8]* @global_var_1aad4.617 to i32), i32 ptrtoint ([21 x i8]* @global_var_1aae0.619 to i32))
  %v2_16510 = icmp eq i32 %v4_16508, 0
  store i1 %v2_16510, i1* @cpsr_z, align 1
  %storemerge = select i1 %v2_16510, i32 ptrtoint (i32* @global_var_16574.621 to i32), i32 %v4_16508
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v4_1652813 = call i32 @function_16808(i32 0, i32 %storemerge, i32* nonnull @global_var_23518.615)
  %v2_1652c15 = icmp eq i32 %v4_1652813, 0
  %v2_16548.pre.pre16 = load i32, i32* @global_var_23518.615, align 4
  br i1 %v2_1652c15, label %dec_label_pc_16540.loopexit, label %dec_label_pc_16534

dec_label_pc_16534:                               ; preds = %dec_label_pc_16500, %dec_label_pc_16534._crit_edge
  %v2_16548.pre.pre17 = phi i32 [ %v2_16548.pre.pre, %dec_label_pc_16534._crit_edge ], [ %v2_16548.pre.pre16, %dec_label_pc_16500 ]
  %v2_16538 = icmp eq i32 %v2_16548.pre.pre17, 0
  store i1 %v2_16538, i1* @cpsr_z, align 1
  br i1 %v2_16538, label %dec_label_pc_16534._crit_edge, label %dec_label_pc_16540.loopexit

dec_label_pc_16534._crit_edge:                    ; preds = %dec_label_pc_16534
  %v0_16520.pre = load i32, i32* %r4.global-to-local, align 4
  %v4_16528 = call i32 @function_16808(i32 0, i32 %v0_16520.pre, i32* nonnull @global_var_23518.615)
  %v2_1652c = icmp eq i32 %v4_16528, 0
  %v2_16548.pre.pre = load i32, i32* @global_var_23518.615, align 4
  br i1 %v2_1652c, label %dec_label_pc_16540.loopexit, label %dec_label_pc_16534

dec_label_pc_16540.loopexit:                      ; preds = %dec_label_pc_16534, %dec_label_pc_16534._crit_edge, %dec_label_pc_16500
  %v2_16548.pre.pre.lcssa = phi i32 [ %v2_16548.pre.pre16, %dec_label_pc_16500 ], [ %v2_16548.pre.pre, %dec_label_pc_16534._crit_edge ], [ %v2_16548.pre.pre17, %dec_label_pc_16534 ]
  %v0_16544.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16540

dec_label_pc_16540:                               ; preds = %dec_label_pc_16540.loopexit, %dec_label_pc_164e0
  %v2_16548 = phi i32 [ %v2_16548.pre.pre.lcssa, %dec_label_pc_16540.loopexit ], [ %v2_164e8, %dec_label_pc_164e0 ]
  %v0_16544 = phi i32 [ %v0_16544.pre, %dec_label_pc_16540.loopexit ], [ %arg1, %dec_label_pc_164e0 ]
  call void @__pseudo_branch(i32 %v2_16548)
  store i32 %v6_164e0, i32* @r5, align 4
  store i32 %v9_164e0, i32* @r6, align 4
  store i32 %v12_164e0, i32* @r7, align 4
  ret i32 %v0_16544

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* @global_var_23518.615, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_16540.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16534, { 1, 0 }
}

define i32 @function_16574(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16574:
  %v2_16588 = icmp eq i32 %arg1, 0
  br i1 %v2_16588, label %dec_label_pc_165e0, label %dec_label_pc_16590

dec_label_pc_16590:                               ; preds = %dec_label_pc_16574
  %v4_16594 = icmp eq i32 %arg1, -38
  br i1 %v4_16594, label %bb, label %dec_label_pc_165d0

bb:                                               ; preds = %dec_label_pc_16590
  br label %dec_label_pc_165d0

dec_label_pc_165d0:                               ; preds = %dec_label_pc_16590, %bb
  %storemerge = phi i32 [ -22, %bb ], [ %arg1, %dec_label_pc_16590 ]
  %v0_165d0 = call i32 @function_139e8()
  %v1_165d4 = sub i32 0, %storemerge
  %v2_165d8 = inttoptr i32 %v0_165d0 to i32*
  store i32 %v1_165d4, i32* %v2_165d8, align 4
  br label %dec_label_pc_165e0

dec_label_pc_165e0:                               ; preds = %dec_label_pc_16574, %dec_label_pc_165d0
  %v1_165e4 = phi i32 [ 0, %dec_label_pc_16574 ], [ -1, %dec_label_pc_165d0 ]
  ret i32 %v1_165e4

; uselistorder directives
  uselistorder i32 -22, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165e0, { 1, 0 }
  uselistorder label %dec_label_pc_165d0, { 1, 0 }
}

define i32 @function_165ec(i32* %arg1) local_unnamed_addr {
dec_label_pc_165ec:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_165ec = load i32, i32* @r4, align 4
  %v2_165f0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_16600 = call i32 @function_164e0(i32 0, i32 %v2_165f0)
  %v0_16604 = load i32, i32* @r4, align 4
  %v2_16604 = icmp eq i32 %v0_16604, 0
  br i1 %v2_16604, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_165ec
  %v3_16608 = load i32, i32* %stack_var_-16, align 4
  %v3_1660c = inttoptr i32 %v0_16604 to i32*
  store i32 %v3_16608, i32* %v3_1660c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_165ec, %bb
  %v2_16610 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_165ec, i32* @r4, align 4
  ret i32 %v2_16610

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_164e0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16620(i32 %arg1) local_unnamed_addr {
dec_label_pc_16620:
  %v0_1662c = call i32 @function_13c94()
  ret i32 %v0_1662c
}

define i32 @function_16638() local_unnamed_addr {
dec_label_pc_16638:
  %v1_16638 = load i32, i32* @r0, align 4
  ret i32 %v1_16638
}

define i32 @function_1663c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1663c:
  %v0_1663c = load i32, i32* @lr, align 4
  store i32 91728, i32* @lr, align 4
  %v1_1664c = call i32 @function_16638()
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_16670 = call i32 @function_16270(i32 6, i32 %v1_1664c, i32 0)
  %v7_16674 = icmp eq i32 %v3_16670, -4
  br i1 %v7_16674, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_1663c
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_1663c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v3_16670, %dec_label_pc_1663c ]
  store i32 %storemerge, i32* @r0, align 4
  %v0_1667c = call i32 @function_13c94()
  store i32 %v0_1663c, i32* @lr, align 4
  ret i32 %v0_1667c

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_16690(i32 %arg1) local_unnamed_addr {
dec_label_pc_16690:
  %v1_166a0 = load i32, i32* @r0, align 4
  ret i32 %v1_166a0
}

define i32 @function_166a4() local_unnamed_addr {
dec_label_pc_166a4:
  %v1_166b4 = load i32, i32* @r0, align 4
  ret i32 %v1_166b4
}

define i32 @function_166b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_166b8:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_166e4 = call i32 @function_16270(i32 3, i32 %arg1, i32 %arg2)
  store i32 %v3_166e4, i32* @r0, align 4
  %v0_166e8 = call i32 @function_13c94()
  ret i32 %v0_166e8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_166f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_166f8:
  %v0_16704 = call i32 @function_13c94()
  ret i32 %v0_16704
}

define i32 @function_16710(i32 %arg1) local_unnamed_addr {
dec_label_pc_16710:
  %v0_1671c = call i32 @function_13c94()
  ret i32 %v0_1671c
}

define i32 @function_16728(i32 %arg1) local_unnamed_addr {
dec_label_pc_16728:
  %stack_var_-16 = alloca i32, align 4
  %v2_1672c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_16744 = call i32 @function_17a7c(i32 %v2_1672c, i32 %v2_1672c)
  %v2_16748 = icmp eq i32 %v2_16744, 0
  br i1 %v2_16748, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_16728
  %v3_1674c = load i32, i32* %stack_var_-16, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_16728, %bb
  %v1_16758 = phi i32 [ 0, %dec_label_pc_16728 ], [ %v3_1674c, %bb ]
  ret i32 %v1_16758

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_1675c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1675c:
  %v0_16768 = call i32 @function_13c94()
  ret i32 %v0_16768
}

define i32 @function_16774(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16774:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_167a0 = call i32 @function_16270(i32 4, i32 %arg1, i32 %arg2)
  store i32 %v3_167a0, i32* @r0, align 4
  %v0_167a4 = call i32 @function_13c94()
  ret i32 %v0_167a4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_167b4() local_unnamed_addr {
dec_label_pc_167b4:
  %ip.global-to-local = alloca i32, align 4
  %v3_167b8 = load i32, i32* @global_var_2304c.625, align 4
  store i32 %v3_167b8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_167c4.626 to i32))
  %v0_167c0 = load i1, i1* @cpsr_z, align 1
  %v1_167c0 = load i32, i32* @r0, align 4
  br i1 %v0_167c0, label %bb, label %dec_label_pc_167b4._crit_edge

bb:                                               ; preds = %dec_label_pc_167b4
  %v2_167c0 = load i32, i32* %ip.global-to-local, align 4
  %v5_167c0 = mul i32 %v2_167c0, 131072
  %v6_167c0 = and i32 %v5_167c0, %v1_167c0
  store i32 %v6_167c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_167b4._crit_edge

dec_label_pc_167b4._crit_edge:                    ; preds = %dec_label_pc_167b4, %bb
  %v0_167c4 = load i32, i32* @lr, align 4
  %v1_167c4 = urem i32 %v0_167c4, 2
  %v2_167c4 = icmp eq i32 %v1_167c4, 0
  store i1 %v2_167c4, i1* @cpsr_z, align 1
  ret i32 %v1_167c0

; uselistorder directives
  uselistorder i32 %v1_167c0, { 1, 0 }
  uselistorder label %dec_label_pc_167b4._crit_edge, { 1, 0 }
}

define i32 @function_167d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_167d0:
  %v1_167e4 = call i32 @unknown_ffff0fc0()
  ret i32 %arg1
}

define i32 @function_16808(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_16808:
  %v3_1680c = load i32, i32* @global_var_23050.629, align 4
  store i32 %v3_1680c, i32* @ip, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_16818.630 to i32))
  %v0_16814 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16814, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_16808
  %v2_16814 = load i32, i32* @ip, align 4
  %v3_16814 = load i32, i32* @r8, align 4
  %v8_16814 = lshr i32 %v2_16814, %v3_16814
  %v9_16814 = and i32 %v8_16814, %arg1
  store i32 %v9_16814, i32* @ip, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_16808, %bb
  %v2_1681c = load i32, i32* %arg3, align 4
  %v2_16820 = sub i32 %arg1, %v2_1681c
  %v9_16820 = icmp eq i32 %v2_1681c, %arg1
  br i1 %v9_16820, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 %arg2, i32* %arg3, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret i32 %v2_16820

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_16834(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_16834:
  br label %dec_label_pc_1683c

dec_label_pc_1683c:                               ; preds = %bb, %dec_label_pc_16834
  %v2_1683c = load i32, i32* %arg2, align 4
  %v2_16840 = sub i32 %arg1, %v2_1683c
  %v9_16840 = icmp eq i32 %v2_1683c, %arg1
  br i1 %v9_16840, label %bb, label %dec_label_pc_16850

bb:                                               ; preds = %dec_label_pc_1683c
  %v4_16848 = icmp eq i32 %v2_16840, 1
  br i1 %v4_16848, label %dec_label_pc_1683c, label %dec_label_pc_16850

dec_label_pc_16850:                               ; preds = %dec_label_pc_1683c, %bb
  ret i32 %v2_16840

; uselistorder directives
  uselistorder i32 %v2_16840, { 1, 0 }
  uselistorder label %dec_label_pc_16850, { 1, 0 }
}

define i32 @function_16858(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_16858:
  br label %dec_label_pc_16860

dec_label_pc_16860:                               ; preds = %bb, %dec_label_pc_16858
  %v2_16860 = load i32, i32* %arg2, align 4
  %v2_16864 = sub i32 %arg1, %v2_16860
  %v9_16864 = icmp eq i32 %v2_16860, %arg1
  br i1 %v9_16864, label %bb, label %dec_label_pc_16874

bb:                                               ; preds = %dec_label_pc_16860
  %v4_1686c = icmp eq i32 %v2_16864, 1
  br i1 %v4_1686c, label %dec_label_pc_16860, label %dec_label_pc_16874

dec_label_pc_16874:                               ; preds = %dec_label_pc_16860, %bb
  ret i32 %v2_16864

; uselistorder directives
  uselistorder i32 %v2_16864, { 1, 0 }
  uselistorder label %dec_label_pc_16874, { 1, 0 }
}

define i32 @function_1687c() local_unnamed_addr {
dec_label_pc_1687c:
  %v3_16880 = load i32, i32* @global_var_23054.632, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_1688c.633 to i32))
  ret i32 %v3_16880
}

define i32 @function_16898() local_unnamed_addr {
dec_label_pc_16898:
  %v2_1689c = load i32, i32* @global_var_23864.635, align 4
  %v2_168a0 = icmp eq i32 %v2_1689c, 0
  %v0_168a4 = load i32, i32* @r0, align 4
  store i32 %v0_168a4, i32* @ip, align 4
  br i1 %v2_168a0, label %dec_label_pc_168f8, label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_16898
  %v3_168b4 = load i32, i32* @global_var_23870.636, align 4
  %v1_168b8 = add i32 %v0_168a4, 8
  %v2_168c0 = sub i32 -220, %v0_168a4
  %v1_168c4 = add i32 %v3_168b4, -1
  %v2_168c8 = and i32 %v1_168c4, %v2_168c0
  %v2_168cc = add i32 %v1_168b8, %v2_168c8
  store i32 %v2_168cc, i32* @r4, align 4
  %v1_168d0 = add i32 %v2_168cc, 212
  store i32 1, i32* @r3, align 4
  %v2_168d8 = inttoptr i32 %v0_168a4 to i32*
  store i32 1, i32* %v2_168d8, align 4
  %v1_168dc = load i32, i32* @ip, align 4
  %v2_168dc = add i32 %v1_168dc, 4
  %v3_168dc = inttoptr i32 %v2_168dc to i32*
  store i32 %v1_168d0, i32* %v3_168dc, align 4
  %v3_168e0 = load i32, i32* @global_var_23868.637, align 4
  %v0_168e4 = load i32, i32* @ip, align 4
  %v1_168e4 = load i32, i32* @r4, align 4
  %v2_168e4 = add i32 %v1_168e4, 208
  %v3_168e4 = inttoptr i32 %v2_168e4 to i32*
  store i32 %v0_168e4, i32* %v3_168e4, align 4
  %v0_168e8 = load i32, i32* @ip, align 4
  %v1_168e8 = load i32, i32* @r4, align 4
  %v2_168e8 = add i32 %v1_168e8, 4
  %v3_168e8 = inttoptr i32 %v2_168e8 to i32*
  store i32 %v0_168e8, i32* %v3_168e8, align 4
  %v2_168ec = load i32, i32* @global_var_23864.635, align 4
  %v3_168f0 = inttoptr i32 %v1_168d0 to i16*
  %v4_168f0 = call i32 @function_15c0c(i16* %v3_168f0, i32 %v2_168ec, i32 %v3_168e0)
  %v0_168f4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_16898, %dec_label_pc_168b4
  %v1_168fc = phi i32 [ %v0_168a4, %dec_label_pc_16898 ], [ %v0_168f4, %dec_label_pc_168b4 ]
  ret i32 %v1_168fc

; uselistorder directives
  uselistorder i32 %v0_168a4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_168f8, { 1, 0 }
}

define i32 @function_16904(i32 %arg1) local_unnamed_addr {
dec_label_pc_16904:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v6_16904 = load i32, i32* @r5, align 4
  %v1_16908 = add i32 %arg1, 12
  %v2_16908 = inttoptr i32 %v1_16908 to i32*
  %v3_16908 = load i32, i32* %v2_16908, align 4
  %v1_16910 = add i32 %arg1, 20
  %v2_16910 = inttoptr i32 %v1_16910 to i32*
  %v3_16910 = load i32, i32* %v2_16910, align 4
  store i32 %v3_16910, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  %v2_169485 = icmp eq i32 %v3_16910, 0
  br i1 %v2_169485, label %dec_label_pc_16950.thread, label %dec_label_pc_16920.lr.ph

dec_label_pc_16950.thread:                        ; preds = %dec_label_pc_16904
  br label %dec_label_pc_16950.dec_label_pc_16980_crit_edge

dec_label_pc_16920.lr.ph:                         ; preds = %dec_label_pc_16904
  %v1_1693c = add i32 %arg1, 16
  %v2_1693c = inttoptr i32 %v1_1693c to i32*
  br label %dec_label_pc_16920

dec_label_pc_16920:                               ; preds = %dec_label_pc_16920.lr.ph, %dec_label_pc_16948
  %v0_1697416 = phi i32 [ 0, %dec_label_pc_16920.lr.ph ], [ %v0_1697414, %dec_label_pc_16948 ]
  %v0_1695012 = phi i32 [ 0, %dec_label_pc_16920.lr.ph ], [ %v0_1695011, %dec_label_pc_16948 ]
  %v0_16940 = phi i32 [ %v3_16910, %dec_label_pc_16920.lr.ph ], [ %v1_16940, %dec_label_pc_16948 ]
  %v0_16944 = phi i32 [ %v3_16908, %dec_label_pc_16920.lr.ph ], [ %v2_16944, %dec_label_pc_16948 ]
  %v1_16920 = inttoptr i32 %v0_16944 to i32*
  %v2_16920 = load i32, i32* %v1_16920, align 4
  store i32 %v2_16920, i32* %r3.global-to-local, align 4
  switch i32 %v2_16920, label %dec_label_pc_16948 [
    i32 6, label %.thread
    i32 7, label %bb
  ]

.thread:                                          ; preds = %dec_label_pc_16920
  %v2_16928 = add i32 %v0_16944, 8
  %v3_16928 = inttoptr i32 %v2_16928 to i32*
  %v4_16928 = load i32, i32* %v3_16928, align 4
  store i32 %v4_16928, i32* %r3.global-to-local, align 4
  %v3_1692c = sub i32 %v3_16908, %v4_16928
  store i32 %v3_1692c, i32* @r4, align 4
  br label %dec_label_pc_16948

bb:                                               ; preds = %dec_label_pc_16920
  br label %dec_label_pc_16948

dec_label_pc_16948:                               ; preds = %dec_label_pc_16920, %.thread, %bb
  %v0_1697414 = phi i32 [ %v3_1692c, %.thread ], [ %v0_1697416, %bb ], [ %v0_1697416, %dec_label_pc_16920 ]
  %v0_1695011 = phi i32 [ %v0_1695012, %.thread ], [ %v0_16944, %bb ], [ %v0_1695012, %dec_label_pc_16920 ]
  %v3_1693c = load i32, i32* %v2_1693c, align 4
  store i32 %v3_1693c, i32* %r3.global-to-local, align 4
  %v1_16940 = add i32 %v0_16940, -1
  store i32 %v1_16940, i32* @lr, align 4
  %v2_16944 = add i32 %v3_1693c, %v0_16944
  %v2_16948 = icmp eq i32 %v1_16940, 0
  br i1 %v2_16948, label %dec_label_pc_16950, label %dec_label_pc_16920

dec_label_pc_16950:                               ; preds = %dec_label_pc_16948
  %v2_16950 = icmp eq i32 %v0_1695011, 0
  br i1 %v2_16950, label %dec_label_pc_16950.dec_label_pc_16980_crit_edge, label %dec_label_pc_16958

dec_label_pc_16950.dec_label_pc_16980_crit_edge:  ; preds = %dec_label_pc_16950.thread, %dec_label_pc_16950
  %v3_16984.pre = load i32, i32* @global_var_2386c.639, align 4
  %v3_16988.pre = load i32, i32* @global_var_23870.636, align 4
  %v2_1698c.pre = load i32, i32* @global_var_23864.635, align 4
  br label %dec_label_pc_16980

dec_label_pc_16958:                               ; preds = %dec_label_pc_16950
  %v1_1695c = add i32 %v0_1695011, 16
  %v2_1695c = inttoptr i32 %v1_1695c to i32*
  %v3_1695c = load i32, i32* %v2_1695c, align 4
  store i32 %v3_1695c, i32* %r3.global-to-local, align 4
  %v1_16960 = add i32 %v0_1695011, 8
  %v2_16960 = inttoptr i32 %v1_16960 to i32*
  %v3_16960 = load i32, i32* %v2_16960, align 4
  store i32 %v3_1695c, i32* @global_var_23868.637, align 4
  %v1_16968 = add i32 %v0_1695011, 20
  %v2_16968 = inttoptr i32 %v1_16968 to i32*
  %v3_16968 = load i32, i32* %v2_16968, align 4
  store i32 %v3_16968, i32* %r3.global-to-local, align 4
  store i32 %v3_16968, i32* @global_var_2386c.639, align 4
  %v1_16970 = add i32 %v0_1695011, 28
  %v2_16970 = inttoptr i32 %v1_16970 to i32*
  %v3_16970 = load i32, i32* %v2_16970, align 4
  store i32 %v3_16970, i32* %r3.global-to-local, align 4
  %v2_16974 = add i32 %v3_16960, %v0_1697414
  store i32 %v3_16970, i32* @global_var_23870.636, align 4
  store i32 %v2_16974, i32* @global_var_23864.635, align 4
  br label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %dec_label_pc_16950.dec_label_pc_16980_crit_edge, %dec_label_pc_16958
  %v2_1698c = phi i32 [ %v2_1698c.pre, %dec_label_pc_16950.dec_label_pc_16980_crit_edge ], [ %v2_16974, %dec_label_pc_16958 ]
  %v3_16988 = phi i32 [ %v3_16988.pre, %dec_label_pc_16950.dec_label_pc_16980_crit_edge ], [ %v3_16970, %dec_label_pc_16958 ]
  %v3_16984 = phi i32 [ %v3_16984.pre, %dec_label_pc_16950.dec_label_pc_16980_crit_edge ], [ %v3_16968, %dec_label_pc_16958 ]
  store i32 %v3_16988, i32* %r0.global-to-local, align 4
  %sum = add i32 %v2_1698c, %v3_16984
  %v2_16994 = sub i32 0, %sum
  %v1_16998 = add i32 %v3_16988, -1
  %v2_1699c = and i32 %v1_16998, %v2_16994
  store i32 %v2_1699c, i32* %r3.global-to-local, align 4
  %v2_169a4 = add i32 %v2_1699c, %v3_16984
  %tmp = icmp ult i32 %v3_16988, 4
  br i1 %tmp, label %bb38, label %.thread30

bb38:                                             ; preds = %dec_label_pc_16980
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* @global_var_23870.636, align 4
  br label %.thread30

.thread30:                                        ; preds = %dec_label_pc_16980, %bb38
  %v3_169b0 = phi i32 [ 4, %bb38 ], [ %v3_16988, %dec_label_pc_16980 ]
  %v1_169b4 = add i32 %v2_169a4, 223
  %v2_169b8 = add i32 %v1_169b4, %v3_169b0
  %v1_169bc = and i32 %v2_169b8, -4
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_169a4, i32* @global_var_2386c.639, align 4
  store i32 %v1_169bc, i32* @global_var_23840.641, align 4
  %tmp41 = icmp ult i32 %v1_169bc, 281
  br i1 %tmp41, label %.thread31, label %dec_label_pc_169d8

.thread31:                                        ; preds = %.thread30
  store i32 ptrtoint (i32* @global_var_23520.643 to i32), i32* @r0, align 4
  br label %dec_label_pc_169f4

dec_label_pc_169d8:                               ; preds = %.thread30
  store i32 0, i32* @r0, align 4
  store i32 192, i32* @r7, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %.thread31, %dec_label_pc_169d8
  %v0_169f4 = call i32 @function_16898()
  store i32 %v0_169f4, i32* @r4, align 4
  %v2_169fc = inttoptr i32 %v0_169f4 to i32*
  store i32 %v0_169f4, i32* %v2_169fc, align 4
  %v1_16a00 = add i32 %v0_169f4, 204
  store i32 %v1_16a00, i32* %r0.global-to-local, align 4
  %v1_16a04 = call i32 @function_17ab8(i32 %v1_16a00)
  store i32 %v1_16a04, i32* %r0.global-to-local, align 4
  %v1_16a08 = icmp slt i32 %v1_16a04, 0
  br i1 %v1_16a08, label %bb39, label %dec_label_pc_16a18

bb39:                                             ; preds = %dec_label_pc_169f4
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

dec_label_pc_16a18:                               ; preds = %dec_label_pc_169f4
  %v2_16a08 = icmp eq i32 %v1_16a04, 0
  br i1 %v2_16a08, label %bb40, label %.thread3

bb40:                                             ; preds = %dec_label_pc_16a18
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* bitcast (i8** @global_var_2382c.531 to i32*), align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16a18, %bb40
  %v0_16a28 = load i32, i32* @r4, align 4
  %v1_16a28 = add i32 %v0_16a28, 28
  store i32 %v1_16a28, i32* %r0.global-to-local, align 4
  %v1_16a30 = add i32 %v0_16a28, 136
  %v3_16a34 = inttoptr i32 %v1_16a30 to i32*
  store i32 %v1_16a30, i32* %v3_16a34, align 4
  store i32 ptrtoint (i32* @global_var_23848.645 to i32), i32* %r3.global-to-local, align 4
  %v0_16a3c = load i32, i32* %r0.global-to-local, align 4
  %v1_16a3c = load i32, i32* @r4, align 4
  %v2_16a3c = add i32 %v1_16a3c, 28
  %v3_16a3c = inttoptr i32 %v2_16a3c to i32*
  store i32 %v0_16a3c, i32* %v3_16a3c, align 4
  %v0_16a40 = load i32, i32* %r3.global-to-local, align 4
  %v1_16a40 = load i32, i32* @r4, align 4
  %v2_16a40 = add i32 %v1_16a40, 156
  %v3_16a40 = inttoptr i32 %v2_16a40 to i32*
  store i32 %v0_16a40, i32* %v3_16a40, align 4
  store i32 %v6_16904, i32* @r5, align 4
  %v1_16a48 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16a48

; uselistorder directives
  uselistorder i32 %v1_16a30, { 1, 0 }
  uselistorder i32 %v0_169f4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_169a4, { 1, 0 }
  uselistorder i32 %v3_16988, { 1, 0, 3, 2 }
  uselistorder i32 %v1_16940, { 1, 2, 0 }
  uselistorder i32 %v0_1695011, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 5, 6, 0 }
  uselistorder i32 192, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_2382c.531 to i32), { 3, 2, 1, 0 }
  uselistorder i32 223, { 5, 4, 0, 1, 2, 3 }
  uselistorder i32* @global_var_23864.635, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_23870.636, { 1, 2, 0, 3 }
  uselistorder i32* @global_var_2386c.639, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_169f4, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_16980, { 1, 0 }
  uselistorder label %dec_label_pc_16950.dec_label_pc_16980_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16948, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16920, { 1, 0 }
}

define i32 @function_16a5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_16a5c:
  br label %dec_label_pc_16a64

dec_label_pc_16a64:                               ; preds = %dec_label_pc_16a64, %dec_label_pc_16a5c
  br label %dec_label_pc_16a64
}

define i32 @function_16a74(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_16a74:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_16a74 = load i32, i32* @r5, align 4
  %v12_16a74 = load i32, i32* @r7, align 4
  %v15_16a74 = load i32, i32* @r8, align 4
  %v18_16a74 = load i32, i32* @sb, align 4
  %v21_16a74 = load i32, i32* @sl, align 4
  %v24_16a74 = load i32, i32* @fp, align 4
  %v0_16a84 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16a84, i32* @sl, align 4
  store i32 %arg3, i32* @r6, align 4
  %tmp235 = icmp ult i32 %tmp, 37
  br i1 %tmp235, label %dec_label_pc_16aa4, label %dec_label_pc_16d40

dec_label_pc_16a94:                               ; preds = %dec_label_pc_16aa4
  %v2_16ab0 = inttoptr i32 %v3_16aa4 to i8*
  %v3_16ab0 = load i8, i8* %v2_16ab0, align 1
  %v4_16ab0 = zext i8 %v3_16ab0 to i32
  store i32 %v4_16ab0, i32* @r5, align 4
  %v6_16ab0 = add i32 %v3_16aa4, 1
  store i32 %v6_16ab0, i32* %r2.global-to-local, align 4
  store i32 %v6_16ab0, i32* %v2_16aa4, align 4
  %v0_16a94 = load i32, i32* @r5, align 4
  %v7_16a98 = icmp eq i32 %v0_16a94, 32
  br i1 %v7_16a98, label %dec_label_pc_16aa4.backedge, label %bb

bb:                                               ; preds = %dec_label_pc_16a94
  %v1_16a94 = add i32 %v0_16a94, -9
  %tmp236 = icmp ugt i32 %v1_16a94, 4
  br i1 %tmp236, label %dec_label_pc_16ad8, label %dec_label_pc_16aa4.backedge

dec_label_pc_16aa4.backedge:                      ; preds = %dec_label_pc_16abc, %dec_label_pc_16a94, %bb, %bb177
  %v0_16aa4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16aa4

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a74, %dec_label_pc_16aa4.backedge
  %v2_16ab4 = phi i32 [ %v0_16aa4.pre, %dec_label_pc_16aa4.backedge ], [ %v0_16a84, %dec_label_pc_16a74 ]
  %v1_16aa4 = add i32 %v2_16ab4, 4
  %v2_16aa4 = inttoptr i32 %v1_16aa4 to i32*
  %v3_16aa4 = load i32, i32* %v2_16aa4, align 4
  store i32 %v3_16aa4, i32* %r2.global-to-local, align 4
  %v1_16aa8 = add i32 %v2_16ab4, 104
  %v2_16aa8 = inttoptr i32 %v1_16aa8 to i32*
  %v3_16aa8 = load i32, i32* %v2_16aa8, align 4
  %v3_16aac = icmp ult i32 %v3_16aa4, %v3_16aa8
  br i1 %v3_16aac, label %dec_label_pc_16a94, label %dec_label_pc_16abc

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16aa4
  store i32 %v2_16ab4, i32* %r0.global-to-local, align 4
  %v1_16ac0 = call i32 @function_17298(i32 %v2_16ab4)
  store i32 %v1_16ac0, i32* %r0.global-to-local, align 4
  store i32 %v1_16ac0, i32* @r5, align 4
  %v7_16acc = icmp eq i32 %v1_16ac0, 32
  br i1 %v7_16acc, label %dec_label_pc_16aa4.backedge, label %bb177

bb177:                                            ; preds = %dec_label_pc_16abc
  %v1_16ac8 = add i32 %v1_16ac0, -9
  %tmp237 = icmp ult i32 %v1_16ac8, 5
  br i1 %tmp237, label %dec_label_pc_16aa4.backedge, label %dec_label_pc_16ad8

dec_label_pc_16ad8:                               ; preds = %bb177, %bb
  %v0_16ae824 = phi i32 [ %v1_16ac0, %bb177 ], [ %v0_16a94, %bb ]
  %v7_16ad8 = icmp eq i32 %v0_16ae824, 45
  br i1 %v7_16ad8, label %dec_label_pc_16af4, label %bb178

bb178:                                            ; preds = %dec_label_pc_16ad8
  %v8_16adc = icmp eq i32 %v0_16ae824, 43
  br i1 %v8_16adc, label %dec_label_pc_16af4, label %.thread19

.thread19:                                        ; preds = %bb178
  br label %dec_label_pc_16b1c

dec_label_pc_16af4:                               ; preds = %bb178, %dec_label_pc_16ad8
  %storemerge160 = phi i32 [ 45, %dec_label_pc_16ad8 ], [ 43, %bb178 ]
  store i32 %storemerge160, i32* @r4, align 4
  %v0_16af4 = load i32, i32* @sl, align 4
  %v1_16af4 = add i32 %v0_16af4, 4
  %v2_16af4 = inttoptr i32 %v1_16af4 to i32*
  %v3_16af4 = load i32, i32* %v2_16af4, align 4
  store i32 %v3_16af4, i32* %r2.global-to-local, align 4
  %v1_16af8 = add i32 %v0_16af4, 104
  %v2_16af8 = inttoptr i32 %v1_16af8 to i32*
  %v3_16af8 = load i32, i32* %v2_16af8, align 4
  %v3_16afc = icmp ult i32 %v3_16af4, %v3_16af8
  br i1 %v3_16afc, label %.thread27, label %dec_label_pc_16fc4

.thread27:                                        ; preds = %dec_label_pc_16af4
  %v2_16b00 = inttoptr i32 %v3_16af4 to i8*
  %v3_16b00 = load i8, i8* %v2_16b00, align 1
  %v4_16b00 = zext i8 %v3_16b00 to i32
  store i32 %v4_16b00, i32* @r5, align 4
  %v6_16b00 = add i32 %v3_16af4, 1
  store i32 %v6_16b00, i32* %r2.global-to-local, align 4
  store i32 %v6_16b00, i32* %v2_16af4, align 4
  br label %dec_label_pc_16b0c

dec_label_pc_16b0c:                               ; preds = %.thread27, %dec_label_pc_16fc4
  %v0_16b0c = load i32, i32* @r4, align 4
  %v7_16b0c = icmp eq i32 %v0_16b0c, 45
  br i1 %v7_16b0c, label %.thread29, label %bb180

bb180:                                            ; preds = %dec_label_pc_16b0c
  br label %dec_label_pc_16b1c

.thread29:                                        ; preds = %dec_label_pc_16b0c
  br label %dec_label_pc_16b1c

dec_label_pc_16b1c:                               ; preds = %bb180, %.thread29, %.thread19
  %stack_var_-44.1 = phi i32 [ 0, %.thread19 ], [ 0, %bb180 ], [ -1, %.thread29 ]
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v1_16b20 = sub i32 1, %tmp
  store i32 %v1_16b20, i32* @r4, align 4
  %v2_16b20 = icmp ult i32 %tmp, 2
  br i1 %v2_16b20, label %bb181, label %.thread139

.thread139:                                       ; preds = %dec_label_pc_16b1c
  store i32 0, i32* @r4, align 4
  br label %bb182

bb181:                                            ; preds = %dec_label_pc_16b1c
  %v2_16b28 = icmp eq i32 %tmp, 0
  br i1 %v2_16b28, label %dec_label_pc_16bf4, label %bb182

bb182:                                            ; preds = %.thread139, %bb181
  %v0_16b40143 = phi i32 [ 0, %.thread139 ], [ %v1_16b20, %bb181 ]
  %v8_16b2c = icmp eq i32 %tmp, 16
  br i1 %v8_16b2c, label %dec_label_pc_16bf4, label %.dec_label_pc_16b34_crit_edge

.dec_label_pc_16b34_crit_edge:                    ; preds = %bb182
  %v0_16b3c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16b34

dec_label_pc_16b34:                               ; preds = %.dec_label_pc_16b34_crit_edge, %dec_label_pc_16bf4
  %v0_16b40142 = phi i32 [ %v0_16b40143, %.dec_label_pc_16b34_crit_edge ], [ %v0_16b40144, %dec_label_pc_16bf4 ]
  %v0_16b3c = phi i32 [ %v0_16b3c.pre, %.dec_label_pc_16b34_crit_edge ], [ %v0_16bf4, %dec_label_pc_16bf4 ]
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_16b3c = add i32 %v0_16b3c, ptrtoint (i32* @global_var_1ab02.647 to i32)
  %v3_16b3c = inttoptr i32 %v2_16b3c to i8*
  %v4_16b3c = load i8, i8* %v3_16b3c, align 1
  %v6_16b3c = zext i8 %v4_16b3c to i32
  store i32 %v6_16b3c, i32* @r2, align 4
  %v2_16b40 = icmp eq i32 %v0_16b40142, 0
  br i1 %v2_16b40, label %bb184, label %bb183

bb183:                                            ; preds = %dec_label_pc_16b34
  store i32 10, i32* %r1.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %dec_label_pc_16b34, %bb183
  %v0_16b4c = phi i32 [ %tmp, %dec_label_pc_16b34 ], [ 10, %bb183 ]
  %tmp238 = icmp ugt i32 %v0_16b4c, %v6_16b3c
  br i1 %tmp238, label %dec_label_pc_16b54, label %dec_label_pc_16cec

dec_label_pc_16b54:                               ; preds = %bb184, %dec_label_pc_16c20
  %v0_16b6c = phi i32 [ %v0_16c2c, %dec_label_pc_16c20 ], [ %v0_16b3c, %bb184 ]
  %v0_16b64 = phi i32 [ %tmp, %dec_label_pc_16c20 ], [ %v0_16b4c, %bb184 ]
  %v7_16b58 = icmp eq i32 %v0_16b64, 10
  br i1 %v7_16b58, label %dec_label_pc_16cbc.preheader, label %dec_label_pc_16b64

dec_label_pc_16cbc.preheader:                     ; preds = %dec_label_pc_16b54
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16cbc

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16b54
  %v1_16b70 = add i32 %v0_16b6c, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16b70 = inttoptr i32 %v1_16b70 to i8*
  %v3_16b70 = load i8, i8* %v2_16b70, align 1
  %v4_16b70 = zext i8 %v3_16b70 to i32
  store i32 %v4_16b70, i32* @fp, align 4
  store i32 %v0_16b64, i32* %r2.global-to-local, align 4
  %v1_16b78 = add i32 %v0_16b64, -1
  br label %dec_label_pc_16b7c

dec_label_pc_16b7c:                               ; preds = %.thread156, %dec_label_pc_16c28, %dec_label_pc_16b64
  %v4_16c78107 = phi i32 [ %v4_16b70, %dec_label_pc_16b64 ], [ %v4_16c30, %dec_label_pc_16c28 ], [ %v6_17168, %.thread156 ]
  %v1_16b7c = phi i32 [ %v0_16b64, %dec_label_pc_16b64 ], [ 8, %dec_label_pc_16c28 ], [ 16, %.thread156 ]
  %v0_16b7c = phi i32 [ %v1_16b78, %dec_label_pc_16b64 ], [ 7, %dec_label_pc_16c28 ], [ 15, %.thread156 ]
  %v2_16b7c = and i32 %v0_16b7c, %v1_16b7c
  store i32 %v2_16b7c, i32* %r1.global-to-local, align 4
  %v4_16b7c = icmp eq i32 %v2_16b7c, 0
  br i1 %v4_16b7c, label %dec_label_pc_16b8c, label %dec_label_pc_16c68.preheader

dec_label_pc_16c68.preheader:                     ; preds = %dec_label_pc_16b7c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16c68

dec_label_pc_16b8c:                               ; preds = %dec_label_pc_16b7c
  %v2_16b94 = mul i32 %v1_16b7c, 23
  %v3_16b98 = udiv i32 %v2_16b94, 32
  store i32 ptrtoint (i32* @global_var_1aaf8.651 to i32), i32* %r2.global-to-local, align 4
  %v1_16ba0 = urem i32 %v3_16b98, 8
  %v2_16ba4 = add i32 %v1_16ba0, ptrtoint (i32* @global_var_1aaf8.651 to i32)
  %v3_16ba4 = inttoptr i32 %v2_16ba4 to i8*
  %v4_16ba4 = load i8, i8* %v3_16ba4, align 1
  %v6_16ba4 = zext i8 %v4_16ba4 to i32
  store i32 %v6_16ba4, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16bc0

dec_label_pc_16bb0:                               ; preds = %.thread34.dec_label_pc_16bb0_crit_edge, %dec_label_pc_16be8
  %v0_16bb4 = phi i32 [ %v0_16bb4.pre, %.thread34.dec_label_pc_16bb0_crit_edge ], [ %v1_16bec, %dec_label_pc_16be8 ]
  %v0_16bb8 = load i32, i32* @fp, align 4
  %v1_16bb8 = load i32, i32* @r4, align 4
  %v2_16bb8 = load i32, i32* @r5, align 4
  %v7_16bb8 = shl i32 %v1_16bb8, %v2_16bb8
  %v8_16bb8 = or i32 %v7_16bb8, %v0_16bb8
  store i32 %v8_16bb8, i32* @r4, align 4
  %v1_16bbc = add i32 %v0_16bb4, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16bbc = inttoptr i32 %v1_16bbc to i8*
  %v3_16bbc = load i8, i8* %v2_16bbc, align 1
  %v4_16bbc = zext i8 %v3_16bbc to i32
  store i32 %v4_16bbc, i32* @fp, align 4
  br label %dec_label_pc_16bc0

dec_label_pc_16bc0:                               ; preds = %dec_label_pc_16b8c, %dec_label_pc_16bb0
  %v0_16dc8122 = phi i32 [ %v6_16ba4, %dec_label_pc_16b8c ], [ %v2_16bb8, %dec_label_pc_16bb0 ]
  %v4_16bc8 = phi i32 [ %v4_16c78107, %dec_label_pc_16b8c ], [ %v4_16bbc, %dec_label_pc_16bb0 ]
  %v0_16d68 = phi i32 [ 0, %dec_label_pc_16b8c ], [ %v8_16bb8, %dec_label_pc_16bb0 ]
  store i32 %v1_16b7c, i32* %r1.global-to-local, align 4
  %v2_16bc4 = icmp ugt i32 %v0_16d68, 134217726
  %v8_16bc4 = icmp eq i32 %v0_16d68, 134217727
  %v2_16bc8 = xor i1 %v2_16bc4, true
  %v3_16bc8 = or i1 %v8_16bc4, %v2_16bc8
  br i1 %v3_16bc8, label %bb186, label %bb187

bb186:                                            ; preds = %dec_label_pc_16bc0
  %v7_16bc8 = icmp ult i32 %v4_16bc8, %v1_16b7c
  br i1 %v7_16bc8, label %dec_label_pc_16bd0, label %dec_label_pc_16dc0

bb187:                                            ; preds = %dec_label_pc_16bc0
  br i1 %v2_16bc4, label %dec_label_pc_16dc0, label %dec_label_pc_16bd0

dec_label_pc_16bd0:                               ; preds = %bb186, %bb187
  %v0_16bd0 = load i32, i32* @sl, align 4
  %v1_16bd0 = add i32 %v0_16bd0, 4
  %v2_16bd0 = inttoptr i32 %v1_16bd0 to i32*
  %v3_16bd0 = load i32, i32* %v2_16bd0, align 4
  store i32 %v3_16bd0, i32* %r2.global-to-local, align 4
  %v1_16bd4 = add i32 %v0_16bd0, 104
  %v2_16bd4 = inttoptr i32 %v1_16bd4 to i32*
  %v3_16bd4 = load i32, i32* %v2_16bd4, align 4
  %v3_16bd8 = icmp ult i32 %v3_16bd0, %v3_16bd4
  br i1 %v3_16bd8, label %.thread34.dec_label_pc_16bb0_crit_edge, label %dec_label_pc_16be8

.thread34.dec_label_pc_16bb0_crit_edge:           ; preds = %dec_label_pc_16bd0
  %v2_16bdc = inttoptr i32 %v3_16bd0 to i8*
  %v3_16bdc = load i8, i8* %v2_16bdc, align 1
  %v4_16bdc = zext i8 %v3_16bdc to i32
  store i32 %v4_16bdc, i32* %r0.global-to-local, align 4
  %v6_16bdc = add i32 %v3_16bd0, 1
  store i32 %v6_16bdc, i32* %r2.global-to-local, align 4
  store i32 %v6_16bdc, i32* %v2_16bd0, align 4
  %v0_16bb4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bb0

dec_label_pc_16be8:                               ; preds = %dec_label_pc_16bd0
  store i32 %v0_16bd0, i32* %r0.global-to-local, align 4
  %v1_16bec = call i32 @function_17298(i32 %v0_16bd0)
  store i32 %v1_16bec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bb0

dec_label_pc_16bf4:                               ; preds = %bb181, %bb182
  %v0_16b40144 = phi i32 [ %v1_16b20, %bb181 ], [ %v0_16b40143, %bb182 ]
  %v0_16bf4 = load i32, i32* @r5, align 4
  %v7_16bf4 = icmp eq i32 %v0_16bf4, 48
  br i1 %v7_16bf4, label %dec_label_pc_16bfc, label %dec_label_pc_16b34

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16bf4
  %v0_16bfc = load i32, i32* @sl, align 4
  %v1_16bfc = add i32 %v0_16bfc, 4
  %v2_16bfc = inttoptr i32 %v1_16bfc to i32*
  %v3_16bfc = load i32, i32* %v2_16bfc, align 4
  store i32 %v3_16bfc, i32* %r2.global-to-local, align 4
  %v1_16c00 = add i32 %v0_16bfc, 104
  %v2_16c00 = inttoptr i32 %v1_16c00 to i32*
  %v3_16c00 = load i32, i32* %v2_16c00, align 4
  %v3_16c04 = icmp ult i32 %v3_16bfc, %v3_16c00
  br i1 %v3_16c04, label %.thread36.dec_label_pc_16c14_crit_edge, label %dec_label_pc_1713c

.thread36.dec_label_pc_16c14_crit_edge:           ; preds = %dec_label_pc_16bfc
  %v2_16c08 = inttoptr i32 %v3_16bfc to i8*
  %v3_16c08 = load i8, i8* %v2_16c08, align 1
  %v4_16c08 = zext i8 %v3_16c08 to i32
  store i32 %v4_16c08, i32* @r5, align 4
  %v6_16c08 = add i32 %v3_16bfc, 1
  store i32 %v6_16c08, i32* @r2, align 4
  store i32 %v6_16c08, i32* %v2_16bfc, align 4
  %v0_16c14.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c14

dec_label_pc_16c14:                               ; preds = %.thread36.dec_label_pc_16c14_crit_edge, %dec_label_pc_1713c
  %v0_16c2c = phi i32 [ %v0_16c14.pre, %.thread36.dec_label_pc_16c14_crit_edge ], [ %v1_17140, %dec_label_pc_1713c ]
  %v1_16c14 = or i32 %v0_16c2c, 32
  %v7_16c18 = icmp eq i32 %v1_16c14, 120
  br i1 %v7_16c18, label %dec_label_pc_1714c, label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c14
  %v0_16c20 = load i32, i32* @r4, align 4
  %v2_16c20 = icmp eq i32 %v0_16c20, 0
  br i1 %v2_16c20, label %dec_label_pc_16b54, label %dec_label_pc_16c28

dec_label_pc_16c28:                               ; preds = %dec_label_pc_16c20
  %v1_16c30 = add i32 %v0_16c2c, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16c30 = inttoptr i32 %v1_16c30 to i8*
  %v3_16c30 = load i8, i8* %v2_16c30, align 1
  %v4_16c30 = zext i8 %v3_16c30 to i32
  store i32 %v4_16c30, i32* @fp, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b7c

dec_label_pc_16c50:                               ; preds = %.thread38.dec_label_pc_16c50_crit_edge, %dec_label_pc_16c98
  %v0_16c58 = phi i32 [ %v0_16c58.pre, %.thread38.dec_label_pc_16c50_crit_edge ], [ %v1_16c4c, %dec_label_pc_16c98 ]
  store i32 %v1_16b7c, i32* %r1.global-to-local, align 4
  %v1_16c5c = load i32, i32* @r4, align 4
  %v2_16c5c = load i32, i32* @fp, align 4
  %v3_16c5c = mul i32 %v1_16c5c, %v1_16b7c
  %v4_16c5c = add i32 %v2_16c5c, %v3_16c5c
  store i32 %v4_16c5c, i32* @r4, align 4
  %v1_16c60 = add i32 %v0_16c58, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16c60 = inttoptr i32 %v1_16c60 to i8*
  %v3_16c60 = load i8, i8* %v2_16c60, align 1
  %v4_16c60 = zext i8 %v3_16c60 to i32
  store i32 %v4_16c60, i32* @fp, align 4
  br label %dec_label_pc_16c68

dec_label_pc_16c68:                               ; preds = %dec_label_pc_16c68.preheader, %dec_label_pc_16c50
  %v0_16f3460 = phi i32 [ %v4_16c78107, %dec_label_pc_16c68.preheader ], [ %v4_16c60, %dec_label_pc_16c50 ]
  %v0_16f10 = phi i32 [ 0, %dec_label_pc_16c68.preheader ], [ %v4_16c5c, %dec_label_pc_16c50 ]
  store i32 %v1_16b7c, i32* %r2.global-to-local, align 4
  %v3_16c74 = icmp ugt i32 %v0_16f10, 119304645
  %v9_16c74 = icmp eq i32 %v0_16f10, 119304646
  %v2_16c78 = xor i1 %v3_16c74, true
  %v3_16c78 = or i1 %v9_16c74, %v2_16c78
  br i1 %v3_16c78, label %bb189, label %bb190

bb189:                                            ; preds = %dec_label_pc_16c68
  %v7_16c78 = icmp ult i32 %v0_16f3460, %v1_16b7c
  br i1 %v7_16c78, label %dec_label_pc_16c80, label %dec_label_pc_16f10

bb190:                                            ; preds = %dec_label_pc_16c68
  br i1 %v3_16c74, label %.dec_label_pc_16f10_crit_edge, label %dec_label_pc_16c80

.dec_label_pc_16f10_crit_edge:                    ; preds = %bb190
  br label %dec_label_pc_16f10

dec_label_pc_16c80:                               ; preds = %bb189, %bb190
  %v0_16c80 = load i32, i32* @sl, align 4
  %v1_16c80 = add i32 %v0_16c80, 4
  %v2_16c80 = inttoptr i32 %v1_16c80 to i32*
  %v3_16c80 = load i32, i32* %v2_16c80, align 4
  store i32 %v3_16c80, i32* %r2.global-to-local, align 4
  %v1_16c84 = add i32 %v0_16c80, 104
  %v2_16c84 = inttoptr i32 %v1_16c84 to i32*
  %v3_16c84 = load i32, i32* %v2_16c84, align 4
  %v3_16c88 = icmp ult i32 %v3_16c80, %v3_16c84
  br i1 %v3_16c88, label %.thread38.dec_label_pc_16c50_crit_edge, label %dec_label_pc_16c98

.thread38.dec_label_pc_16c50_crit_edge:           ; preds = %dec_label_pc_16c80
  %v2_16c8c = inttoptr i32 %v3_16c80 to i8*
  %v3_16c8c = load i8, i8* %v2_16c8c, align 1
  %v4_16c8c = zext i8 %v3_16c8c to i32
  store i32 %v4_16c8c, i32* %r0.global-to-local, align 4
  %v6_16c8c = add i32 %v3_16c80, 1
  store i32 %v6_16c8c, i32* %r2.global-to-local, align 4
  store i32 %v6_16c8c, i32* %v2_16c80, align 4
  %v0_16c58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c50

dec_label_pc_16c98:                               ; preds = %dec_label_pc_16c80
  store i32 %v0_16c80, i32* %r0.global-to-local, align 4
  %v1_16c4c = call i32 @function_17298(i32 %v0_16c80)
  store i32 %v1_16c4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c50

dec_label_pc_16ca4:                               ; preds = %.thread40.dec_label_pc_16ca4_crit_edge, %dec_label_pc_16ce8
  %v0_16cb8 = phi i32 [ %v0_16cb8.pre, %.thread40.dec_label_pc_16ca4_crit_edge ], [ %v1_16ca0, %dec_label_pc_16ce8 ]
  %v0_16ca4 = load i32, i32* @r4, align 4
  %v3_16ca4 = mul i32 %v0_16ca4, 8
  store i32 %v3_16ca4, i32* @r2, align 4
  %v2_16cac = mul i32 %v0_16ca4, 10
  %v1_16cb0 = load i32, i32* @r5, align 4
  %v2_16cb0 = add i32 %v1_16cb0, %v2_16cac
  %v1_16cb4 = add i32 %v2_16cb0, -48
  store i32 %v1_16cb4, i32* @r4, align 4
  store i32 %v0_16cb8, i32* @r5, align 4
  br label %dec_label_pc_16cbc

dec_label_pc_16cbc:                               ; preds = %dec_label_pc_16cbc.preheader, %dec_label_pc_16ca4
  %v0_16fd4 = phi i32 [ 0, %dec_label_pc_16cbc.preheader ], [ %v1_16cb4, %dec_label_pc_16ca4 ]
  %v0_16cc0 = phi i32 [ %v0_16b6c, %dec_label_pc_16cbc.preheader ], [ %v0_16cb8, %dec_label_pc_16ca4 ]
  %v1_16cc0 = add i32 %v0_16cc0, -48
  store i32 %v1_16cc0, i32* %r0.global-to-local, align 4
  %v2_16cc4 = icmp ugt i32 %v1_16cc0, 8
  %v7_16cc4 = icmp eq i32 %v1_16cc0, 9
  %v2_16cc8 = xor i1 %v2_16cc4, true
  %v3_16cc8 = or i1 %v7_16cc4, %v2_16cc8
  br i1 %v3_16cc8, label %bb191, label %bb193

bb191:                                            ; preds = %dec_label_pc_16cbc
  %v7_16cc8 = icmp ugt i32 %v0_16fd4, 429496727
  %v13_16cc8 = icmp eq i32 %v0_16fd4, 429496728
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_16cbc, %bb191
  %v1_16ccc = phi i1 [ false, %dec_label_pc_16cbc ], [ %v13_16cc8, %bb191 ]
  %v0_16ccc = phi i1 [ %v2_16cc4, %dec_label_pc_16cbc ], [ %v7_16cc8, %bb191 ]
  %v2_16ccc = xor i1 %v1_16ccc, true
  %v3_16ccc = and i1 %v0_16ccc, %v2_16ccc
  br i1 %v3_16ccc, label %dec_label_pc_16fd4, label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %bb193
  %v0_16cd0 = load i32, i32* @sl, align 4
  %v1_16cd0 = add i32 %v0_16cd0, 4
  %v2_16cd0 = inttoptr i32 %v1_16cd0 to i32*
  %v3_16cd0 = load i32, i32* %v2_16cd0, align 4
  store i32 %v3_16cd0, i32* %r2.global-to-local, align 4
  %v1_16cd4 = add i32 %v0_16cd0, 104
  %v2_16cd4 = inttoptr i32 %v1_16cd4 to i32*
  %v3_16cd4 = load i32, i32* %v2_16cd4, align 4
  %v3_16cd8 = icmp ult i32 %v3_16cd0, %v3_16cd4
  br i1 %v3_16cd8, label %.thread40.dec_label_pc_16ca4_crit_edge, label %dec_label_pc_16ce8

.thread40.dec_label_pc_16ca4_crit_edge:           ; preds = %dec_label_pc_16cd0
  %v2_16cdc = inttoptr i32 %v3_16cd0 to i8*
  %v3_16cdc = load i8, i8* %v2_16cdc, align 1
  %v4_16cdc = zext i8 %v3_16cdc to i32
  store i32 %v4_16cdc, i32* %r0.global-to-local, align 4
  %v6_16cdc = add i32 %v3_16cd0, 1
  store i32 %v6_16cdc, i32* %r2.global-to-local, align 4
  store i32 %v6_16cdc, i32* %v2_16cd0, align 4
  %v0_16cb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ca4

dec_label_pc_16ce8:                               ; preds = %dec_label_pc_16cd0
  store i32 %v0_16cd0, i32* %r0.global-to-local, align 4
  %v1_16ca0 = call i32 @function_17298(i32 %v0_16cd0)
  store i32 %v1_16ca0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ca4

dec_label_pc_16cec:                               ; preds = %bb184
  %v0_16cec = load i32, i32* @sl, align 4
  %v1_16cec = add i32 %v0_16cec, 104
  %v2_16cec = inttoptr i32 %v1_16cec to i32*
  %v3_16cec = load i32, i32* %v2_16cec, align 4
  %v2_16cf0 = icmp eq i32 %v3_16cec, 0
  br i1 %v2_16cf0, label %.thread43, label %bb194

bb194:                                            ; preds = %dec_label_pc_16cec
  %v2_16cf4 = add i32 %v0_16cec, 4
  %v3_16cf4 = inttoptr i32 %v2_16cf4 to i32*
  %v4_16cf4 = load i32, i32* %v3_16cf4, align 4
  %v2_16cf8 = add i32 %v4_16cf4, -1
  store i32 %v2_16cf8, i32* %v3_16cf4, align 4
  %v0_16d08.pre = load i32, i32* @sl, align 4
  %v1_16d0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_16cec, %bb194
  %v1_16d0c = phi i32 [ %v0_16b4c, %dec_label_pc_16cec ], [ %v1_16d0c.pre, %bb194 ]
  %v0_16d08 = phi i32 [ %v0_16cec, %dec_label_pc_16cec ], [ %v0_16d08.pre, %bb194 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_16d08, i32* %r0.global-to-local, align 4
  %v7_16d0c = call i32 @function_17234(i32 %v0_16d08, i32 %v1_16d0c, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_16d0c, i32* %r0.global-to-local, align 4
  %v0_16d10 = call i32 @function_139e8()
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_16d28 = inttoptr i32 %v0_16d10 to i32*
  store i32 22, i32* %v2_16d28, align 4
  %v2_16d30 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16d30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d34

dec_label_pc_16d34:                               ; preds = %dec_label_pc_17204, %dec_label_pc_171d8, %dec_label_pc_171a4, %dec_label_pc_170e4, %dec_label_pc_16ed4, %dec_label_pc_16e70, %dec_label_pc_16d40, %.thread43
  %v1_16d3c = phi i32 [ 0, %dec_label_pc_17204 ], [ 0, %dec_label_pc_171d8 ], [ %v1_16d3c.pre, %dec_label_pc_171a4 ], [ %v2_17114, %dec_label_pc_170e4 ], [ %v2_16ee8, %dec_label_pc_16ed4 ], [ %v2_16e80, %dec_label_pc_16e70 ], [ %v0_16d5c, %dec_label_pc_16d40 ], [ %v2_16d30, %.thread43 ]
  store i32 %v6_16a74, i32* @r5, align 4
  store i32 %v12_16a74, i32* @r7, align 4
  store i32 %v15_16a74, i32* @r8, align 4
  store i32 %v18_16a74, i32* @sb, align 4
  store i32 %v21_16a74, i32* @sl, align 4
  store i32 %v24_16a74, i32* @fp, align 4
  ret i32 %v1_16d3c

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16a74
  %v0_16d40 = call i32 @function_139e8()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_16d58 = inttoptr i32 %v0_16d40 to i32*
  store i32 22, i32* %v2_16d58, align 4
  %v0_16d5c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16d5c, i32* %r0.global-to-local, align 4
  %v0_16d60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16d60, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d34

dec_label_pc_16d74:                               ; preds = %bb198
  %v9_16dec = icmp eq i32 %v0_16dec, %v6_16dd8
  br i1 %v9_16dec, label %dec_label_pc_16f04, label %dec_label_pc_16d78

dec_label_pc_16d78:                               ; preds = %dec_label_pc_16f04, %dec_label_pc_16d74
  %v0_16d78 = load i32, i32* @sl, align 4
  %v1_16d78 = add i32 %v0_16d78, 4
  %v2_16d78 = inttoptr i32 %v1_16d78 to i32*
  %v3_16d78 = load i32, i32* %v2_16d78, align 4
  store i32 %v3_16d78, i32* %r2.global-to-local, align 4
  %v1_16d7c = add i32 %v0_16d78, 104
  %v2_16d7c = inttoptr i32 %v1_16d7c to i32*
  %v3_16d7c = load i32, i32* %v2_16d7c, align 4
  %v3_16d80 = icmp ult i32 %v3_16d78, %v3_16d7c
  br i1 %v3_16d80, label %.thread44, label %dec_label_pc_16ec4

.thread44:                                        ; preds = %dec_label_pc_16d78
  %v2_16d84 = inttoptr i32 %v3_16d78 to i8*
  %v3_16d84 = load i8, i8* %v2_16d84, align 1
  %v4_16d84 = zext i8 %v3_16d84 to i32
  store i32 %v4_16d84, i32* %r0.global-to-local, align 4
  %v6_16d84 = add i32 %v3_16d78, 1
  store i32 %v6_16d84, i32* %r2.global-to-local, align 4
  store i32 %v6_16d84, i32* %v2_16d78, align 4
  br label %dec_label_pc_16d90

dec_label_pc_16d90:                               ; preds = %.thread44, %dec_label_pc_16ec4
  %v0_16d90 = load i32, i32* @r7, align 4
  %v1_16d90 = load i32, i32* @r5, align 4
  %v6_16d90 = shl i32 %v0_16d90, %v1_16d90
  %v0_16d94 = load i32, i32* @r8, align 4
  %v1_16d94 = icmp slt i32 %v0_16d94, 0
  %v1_16d98 = load i32, i32* @r6, align 4
  %v2_16d98 = load i32, i32* @sb, align 4
  %v7_16d98 = lshr i32 %v1_16d98, %v2_16d98
  %v8_16d98 = or i32 %v7_16d98, %v6_16d90
  %v6_16d9c = shl i32 %v1_16d98, %v1_16d90
  br i1 %v1_16d94, label %bb196, label %bb195

bb195:                                            ; preds = %dec_label_pc_16d90
  %v9_16da0 = shl i32 %v1_16d98, %v0_16d94
  br label %bb196

bb196:                                            ; preds = %dec_label_pc_16d90, %bb195
  %storemerge234 = phi i32 [ %v9_16da0, %bb195 ], [ %v8_16d98, %dec_label_pc_16d90 ]
  %v1_16dbc = phi i32 [ %v9_16da0, %bb195 ], [ %v8_16d98, %dec_label_pc_16d90 ]
  store i32 %storemerge234, i32* @r4, align 4
  %v0_16da8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16da8 = add i32 %v0_16da8, ptrtoint (i32* @global_var_1ab01.649 to i32)
  store i32 %v2_16da8, i32* %r2.global-to-local, align 4
  %v0_16dac = load i32, i32* @fp, align 4
  %v1_16dac = urem i32 %v0_16dac, 256
  store i32 %v1_16dac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_16db4 = add i32 %v0_16da8, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16db4 = inttoptr i32 %v1_16db4 to i8*
  %v3_16db4 = load i8, i8* %v2_16db4, align 1
  %v4_16db4 = zext i8 %v3_16db4 to i32
  store i32 %v4_16db4, i32* @fp, align 4
  %v2_16db8 = or i32 %v1_16dac, %v6_16d9c
  br label %dec_label_pc_16dc0

dec_label_pc_16dc0:                               ; preds = %bb186, %bb187, %bb196
  %storemerge = phi i32 [ %v2_16db8, %bb196 ], [ %v0_16d68, %bb186 ], [ %v0_16d68, %bb187 ]
  %v0_16de4 = phi i32 [ %v1_16d90, %bb196 ], [ %v0_16dc8122, %bb186 ], [ %v0_16dc8122, %bb187 ]
  %v0_16df8 = phi i32 [ %v4_16db4, %bb196 ], [ %v4_16bc8, %bb186 ], [ %v4_16bc8, %bb187 ]
  %v0_16dec = phi i32 [ %v1_16dbc, %bb196 ], [ 0, %bb186 ], [ 0, %bb187 ]
  store i32 %storemerge, i32* @r6, align 4
  store i32 %v0_16dec, i32* @r7, align 4
  store i32 %v1_16b7c, i32* %r2.global-to-local, align 4
  %v3_16dc4 = icmp ult i32 %v0_16df8, %v1_16b7c
  %v1_16dc8 = sub i32 32, %v0_16de4
  store i32 %v1_16dc8, i32* @sb, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  br i1 %v3_16dc4, label %dec_label_pc_16dd8, label %dec_label_pc_16e2c

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16dc0
  %v6_16dd8 = lshr i32 -1, %v0_16de4
  %v7_16de0 = shl i32 -1, %v1_16dc8
  %v8_16de0 = or i32 %v7_16de0, %v6_16dd8
  store i32 %v8_16de0, i32* %r2.global-to-local, align 4
  %v1_16de4 = add i32 %v0_16de4, -32
  store i32 %v1_16de4, i32* @r8, align 4
  %v6_16de4 = icmp slt i32 %v1_16de4, 0
  br i1 %v6_16de4, label %bb198, label %bb197

bb197:                                            ; preds = %dec_label_pc_16dd8
  %v7_16de8 = lshr i32 -1, %v1_16de4
  store i32 %v7_16de8, i32* %r2.global-to-local, align 4
  br label %bb198

bb198:                                            ; preds = %dec_label_pc_16dd8, %bb197
  %v1_16f04 = phi i32 [ %v8_16de0, %dec_label_pc_16dd8 ], [ %v7_16de8, %bb197 ]
  %tmp239 = icmp ugt i32 %v0_16dec, %v6_16dd8
  br i1 %tmp239, label %dec_label_pc_16df4, label %dec_label_pc_16d74

dec_label_pc_16df4:                               ; preds = %bb198
  store i32 %v1_16b7c, i32* @r4, align 4
  br label %dec_label_pc_16ea8

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16e9c
  %v0_16e00 = call i32 @function_139e8()
  store i32 %v0_16e00, i32* %r0.global-to-local, align 4
  %v3_16e04 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16e04, i32* %r1.global-to-local, align 4
  %v1_16e08 = urem i32 %v3_16e04, 2
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_16e10 = icmp eq i32 %v1_16e08, 0
  %v2_16e14 = inttoptr i32 %v0_16e00 to i32*
  store i32 34, i32* %v2_16e14, align 4
  br i1 %v2_16e10, label %dec_label_pc_170d8, label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16e00
  %v0_16e1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16e1c = add i32 %v0_16e1c, -34
  store i32 %v1_16e1c, i32* %r2.global-to-local, align 4
  %v2_16e24 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16e24, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_16e2c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16dc0, %dec_label_pc_16f1c, %dec_label_pc_16f10, %dec_label_pc_17014, %dec_label_pc_1700c, %dec_label_pc_170d8, %dec_label_pc_16e1c
  %v1_16e44232 = phi i32 [ %arg5, %dec_label_pc_170d8 ], [ %arg5, %dec_label_pc_16e1c ], [ %v0_17048, %dec_label_pc_1700c ], [ 0, %dec_label_pc_16f10 ], [ %v0_17048, %dec_label_pc_17014 ], [ %v0_16dec, %dec_label_pc_16dc0 ], [ %v5_16f2c, %dec_label_pc_16f1c ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_170d8 ], [ %v1_16e1c, %dec_label_pc_16e1c ], [ %stack_var_-44.1, %dec_label_pc_1700c ], [ %stack_var_-44.1, %dec_label_pc_16f10 ], [ %stack_var_-44.1, %dec_label_pc_17014 ], [ %stack_var_-44.1, %dec_label_pc_16dc0 ], [ %stack_var_-44.1, %dec_label_pc_16f1c ]
  %v0_16e2c = load i32, i32* @sl, align 4
  %v1_16e2c = add i32 %v0_16e2c, 104
  %v2_16e2c = inttoptr i32 %v1_16e2c to i32*
  %v3_16e2c = load i32, i32* %v2_16e2c, align 4
  %v2_16e30 = icmp eq i32 %v3_16e2c, 0
  br i1 %v2_16e30, label %.thread47, label %bb199

bb199:                                            ; preds = %dec_label_pc_16e2c
  %v2_16e34 = add i32 %v0_16e2c, 4
  %v3_16e34 = inttoptr i32 %v2_16e34 to i32*
  %v4_16e34 = load i32, i32* %v3_16e34, align 4
  %v2_16e38 = add i32 %v4_16e34, -1
  store i32 %v2_16e38, i32* %v3_16e34, align 4
  %v1_16e44.pre = load i32, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_16e2c, %bb199
  %v1_16e44 = phi i32 [ %v1_16e44232, %dec_label_pc_16e2c ], [ %v1_16e44.pre, %bb199 ]
  %v3_16e44 = icmp ule i32 %v1_16e44, %arg5
  %v9_16e44 = icmp eq i32 %v1_16e44, %arg5
  %v2_16e48 = xor i1 %v9_16e44, true
  %v3_16e48 = and i1 %v3_16e44, %v2_16e48
  br i1 %v3_16e48, label %dec_label_pc_16ed4, label %dec_label_pc_16e4c

dec_label_pc_16e4c:                               ; preds = %.thread47
  %v3_1711c = load i32, i32* %stack_var_0, align 4
  br i1 %v9_16e44, label %dec_label_pc_1711c, label %dec_label_pc_16e50

dec_label_pc_16e50:                               ; preds = %dec_label_pc_16e4c, %dec_label_pc_1711c
  store i32 %v3_1711c, i32* %r1.global-to-local, align 4
  %v1_16e58 = urem i32 %v3_1711c, 2
  %v2_16e5c = or i32 %v1_16e58, %stack_var_-44.2
  store i32 %v2_16e5c, i32* %r2.global-to-local, align 4
  %v4_16e5c = icmp eq i32 %v2_16e5c, 0
  br i1 %v4_16e5c, label %dec_label_pc_170e4, label %dec_label_pc_16e64

dec_label_pc_16e64:                               ; preds = %dec_label_pc_16e50
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %tmp240 = icmp ugt i32 %v1_16e44, %arg5
  br i1 %tmp240, label %dec_label_pc_16e70, label %dec_label_pc_16ed0

dec_label_pc_16e70:                               ; preds = %dec_label_pc_1712c, %dec_label_pc_16e64
  %v0_16e70 = call i32 @function_139e8()
  %v2_16e78 = inttoptr i32 %v0_16e70 to i32*
  store i32 34, i32* %v2_16e78, align 4
  %v2_16e80 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16e80, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d34

dec_label_pc_16e90:                               ; preds = %.thread48.dec_label_pc_16e90_crit_edge, %dec_label_pc_16ec0
  %v0_16e94 = phi i32 [ %v0_16e94.pre, %.thread48.dec_label_pc_16e90_crit_edge ], [ %v1_16e8c, %dec_label_pc_16ec0 ]
  %v1_16e98 = add i32 %v0_16e94, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16e98 = inttoptr i32 %v1_16e98 to i8*
  %v3_16e98 = load i8, i8* %v2_16e98, align 1
  %v4_16e98 = zext i8 %v3_16e98 to i32
  br label %dec_label_pc_16e9c

dec_label_pc_16e9c:                               ; preds = %dec_label_pc_16fb8, %dec_label_pc_16fac.dec_label_pc_16e9c.loopexit207_crit_edge, %dec_label_pc_16f04, %.thread145, %dec_label_pc_16e90
  %v0_16ea0 = phi i32 [ %v4_16e98, %dec_label_pc_16e90 ], [ %v6_17018, %.thread145 ], [ %v0_16df8, %dec_label_pc_16f04 ], [ %v0_16ea0.pre.pre, %dec_label_pc_16fac.dec_label_pc_16e9c.loopexit207_crit_edge ], [ %v0_16f6c, %dec_label_pc_16fb8 ]
  %stack_var_-60.2.off0 = phi i32 [ %stack_var_-60.3.off0, %dec_label_pc_16e90 ], [ 10, %.thread145 ], [ %v1_16b7c, %dec_label_pc_16f04 ], [ %v1_16b7c, %dec_label_pc_16fac.dec_label_pc_16e9c.loopexit207_crit_edge ], [ %v1_16b7c, %dec_label_pc_16fb8 ]
  store i32 %stack_var_-60.2.off0, i32* @r4, align 4
  %v3_16ea0 = icmp ult i32 %v0_16ea0, %stack_var_-60.2.off0
  br i1 %v3_16ea0, label %dec_label_pc_16ea8, label %dec_label_pc_16e00

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16e9c, %dec_label_pc_16df4
  %stack_var_-60.3.off0 = phi i32 [ %stack_var_-60.2.off0, %dec_label_pc_16e9c ], [ %v1_16b7c, %dec_label_pc_16df4 ]
  %v0_16ea8 = load i32, i32* @sl, align 4
  %v1_16ea8 = add i32 %v0_16ea8, 4
  %v2_16ea8 = inttoptr i32 %v1_16ea8 to i32*
  %v3_16ea8 = load i32, i32* %v2_16ea8, align 4
  store i32 %v3_16ea8, i32* %r2.global-to-local, align 4
  %v1_16eac = add i32 %v0_16ea8, 104
  %v2_16eac = inttoptr i32 %v1_16eac to i32*
  %v3_16eac = load i32, i32* %v2_16eac, align 4
  %v3_16eb0 = icmp ult i32 %v3_16ea8, %v3_16eac
  br i1 %v3_16eb0, label %.thread48.dec_label_pc_16e90_crit_edge, label %dec_label_pc_16ec0

.thread48.dec_label_pc_16e90_crit_edge:           ; preds = %dec_label_pc_16ea8
  %v2_16eb4 = inttoptr i32 %v3_16ea8 to i8*
  %v3_16eb4 = load i8, i8* %v2_16eb4, align 1
  %v4_16eb4 = zext i8 %v3_16eb4 to i32
  store i32 %v4_16eb4, i32* %r0.global-to-local, align 4
  %v6_16eb4 = add i32 %v3_16ea8, 1
  store i32 %v6_16eb4, i32* %r2.global-to-local, align 4
  store i32 %v6_16eb4, i32* %v2_16ea8, align 4
  %v0_16e94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e90

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16ea8
  store i32 %v0_16ea8, i32* %r0.global-to-local, align 4
  %v1_16e8c = call i32 @function_17298(i32 %v0_16ea8)
  store i32 %v1_16e8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e90

dec_label_pc_16ec4:                               ; preds = %dec_label_pc_16d78
  store i32 %v0_16d78, i32* %r0.global-to-local, align 4
  %v1_16ec8 = call i32 @function_17298(i32 %v0_16d78)
  store i32 %v1_16ec8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16d90

dec_label_pc_16ed0:                               ; preds = %dec_label_pc_16e64
  br i1 %v9_16e44, label %dec_label_pc_1712c, label %dec_label_pc_16ed4

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_1712c, %dec_label_pc_1711c, %dec_label_pc_16ed0, %.thread47
  %v3_16edc = ashr i32 %stack_var_-44.2, 31
  %v1_16ee0 = load i32, i32* @r6, align 4
  %v2_16ee0 = xor i32 %v1_16ee0, %stack_var_-44.2
  %v2_16ee4 = xor i32 %v1_16e44, %v3_16edc
  %v2_16ee8 = sub i32 %v2_16ee0, %stack_var_-44.2
  %v3_16ee8 = icmp uge i32 %v2_16ee0, %stack_var_-44.2
  %v3_16eec = icmp eq i1 %v3_16ee8, false
  %v4_16eec = sub i32 %v2_16ee4, %v3_16edc
  %v6_16eec = sext i1 %v3_16eec to i32
  %v7_16eec = add i32 %v6_16eec, %v4_16eec
  store i32 %v7_16eec, i32* %r2.global-to-local, align 4
  store i32 %v2_16ee8, i32* %stack_var_0, align 4
  store i32 %v2_16ee8, i32* %r0.global-to-local, align 4
  store i32 %v7_16eec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d34

dec_label_pc_16f04:                               ; preds = %dec_label_pc_16d74
  %tmp241 = icmp ugt i32 %storemerge, %v1_16f04
  br i1 %tmp241, label %dec_label_pc_16e9c, label %dec_label_pc_16d78

dec_label_pc_16f10:                               ; preds = %bb189, %.dec_label_pc_16f10_crit_edge
  store i32 %v0_16f10, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v3_16f3462 = icmp ult i32 %v0_16f3460, %v1_16b7c
  br i1 %v3_16f3462, label %dec_label_pc_16f60, label %dec_label_pc_16e2c

dec_label_pc_16f1c:                               ; preds = %.thread50.dec_label_pc_16f1c_crit_edge, %dec_label_pc_16fa0
  %v0_16f20 = phi i32 [ %v0_16f20.pre, %.thread50.dec_label_pc_16f1c_crit_edge ], [ %v1_16fa4, %dec_label_pc_16fa0 ]
  %v0_16f24 = load i32, i32* @r4, align 4
  %v1_16f24 = load i32, i32* @r8, align 4
  %v2_16f24 = add i32 %v1_16f24, %v0_16f24
  store i32 %v2_16f24, i32* @r6, align 4
  %v3_16f24 = icmp ult i32 %v2_16f24, %v0_16f24
  %v1_16f28 = add i32 %v0_16f20, add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1)
  %v2_16f28 = inttoptr i32 %v1_16f28 to i8*
  %v3_16f28 = load i8, i8* %v2_16f28, align 1
  %v4_16f28 = zext i8 %v3_16f28 to i32
  store i32 %v4_16f28, i32* @fp, align 4
  %v0_16f2c = load i32, i32* @r5, align 4
  %v1_16f2c = load i32, i32* @sb, align 4
  %v4_16f2c = zext i1 %v3_16f24 to i32
  %v3_16f2c = add i32 %v0_16f2c, %v4_16f2c
  %v5_16f2c = add i32 %v3_16f2c, %v1_16f2c
  store i32 %v5_16f2c, i32* @r7, align 4
  %v3_16f34 = icmp ult i32 %v4_16f28, %v1_16b7c
  br i1 %v3_16f34, label %dec_label_pc_16f60, label %dec_label_pc_16e2c

dec_label_pc_16f60:                               ; preds = %dec_label_pc_16f1c, %dec_label_pc_16f10
  store i32 %v1_16b7c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r0, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %v1_16b7c, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v5_16f54 = call i32 @function_18168(i32 -1, i32 -1, i32 %v1_16b7c, i32 0)
  store i32 %v5_16f54, i32* %r0.global-to-local, align 4
  %v0_16f58 = load i32, i32* @r7, align 4
  %v3_16f58 = icmp eq i32 %v0_16f58, -1
  %v0_16fac = load i32, i32* @r6, align 4
  br i1 %v3_16f58, label %dec_label_pc_16fac, label %dec_label_pc_16f84

dec_label_pc_16f84:                               ; preds = %dec_label_pc_16f60, %dec_label_pc_16fac
  %v1_16f64 = zext i32 %v0_16fac to i64
  %v2_16f64 = load i32, i32* @r4, align 4
  %v3_16f64 = zext i32 %v2_16f64 to i64
  %v4_16f64 = mul nuw i64 %v3_16f64, %v1_16f64
  %v5_16f64 = udiv i64 %v4_16f64, 4294967296
  %v6_16f64 = trunc i64 %v5_16f64 to i32
  %v7_16f64 = trunc i64 %v4_16f64 to i32
  store i32 %v7_16f64, i32* @r8, align 4
  %v3_16f68 = mul i32 %v2_16f64, %v0_16f58
  %v4_16f68 = add i32 %v6_16f64, %v3_16f68
  store i32 %v4_16f68, i32* @sb, align 4
  %v0_16f6c = load i32, i32* @fp, align 4
  %v1_16f6c = urem i32 %v0_16f6c, 256
  store i32 %v1_16f6c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v3_16f78 = icmp eq i32 %v4_16f68, -1
  %v0_16f6c.not = or i32 %v0_16f6c, -256
  %v1_16f7c = xor i32 %v0_16f6c.not, 255
  store i32 %v1_16f7c, i32* %r2.global-to-local, align 4
  br i1 %v3_16f78, label %dec_label_pc_16fb8, label %dec_label_pc_16f88

dec_label_pc_16f88:                               ; preds = %dec_label_pc_16fb8, %dec_label_pc_16f84
  %v0_16f88 = load i32, i32* @sl, align 4
  %v1_16f88 = add i32 %v0_16f88, 4
  %v2_16f88 = inttoptr i32 %v1_16f88 to i32*
  %v3_16f88 = load i32, i32* %v2_16f88, align 4
  store i32 %v3_16f88, i32* %r2.global-to-local, align 4
  %v1_16f8c = add i32 %v0_16f88, 104
  %v2_16f8c = inttoptr i32 %v1_16f8c to i32*
  %v3_16f8c = load i32, i32* %v2_16f8c, align 4
  %v3_16f90 = icmp ult i32 %v3_16f88, %v3_16f8c
  br i1 %v3_16f90, label %.thread50.dec_label_pc_16f1c_crit_edge, label %dec_label_pc_16fa0

.thread50.dec_label_pc_16f1c_crit_edge:           ; preds = %dec_label_pc_16f88
  %v2_16f94 = inttoptr i32 %v3_16f88 to i8*
  %v3_16f94 = load i8, i8* %v2_16f94, align 1
  %v4_16f94 = zext i8 %v3_16f94 to i32
  store i32 %v4_16f94, i32* %r0.global-to-local, align 4
  %v6_16f94 = add i32 %v3_16f88, 1
  store i32 %v6_16f94, i32* %r2.global-to-local, align 4
  store i32 %v6_16f94, i32* %v2_16f88, align 4
  %v0_16f20.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f1c

dec_label_pc_16fa0:                               ; preds = %dec_label_pc_16f88
  store i32 %v0_16f88, i32* %r0.global-to-local, align 4
  %v1_16fa4 = call i32 @function_17298(i32 %v0_16f88)
  store i32 %v1_16fa4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f1c

dec_label_pc_16fac:                               ; preds = %dec_label_pc_16f60
  %tmp242 = icmp ugt i32 %v0_16fac, %v5_16f54
  br i1 %tmp242, label %dec_label_pc_16fac.dec_label_pc_16e9c.loopexit207_crit_edge, label %dec_label_pc_16f84

dec_label_pc_16fac.dec_label_pc_16e9c.loopexit207_crit_edge: ; preds = %dec_label_pc_16fac
  %v0_16ea0.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_16e9c

dec_label_pc_16fb8:                               ; preds = %dec_label_pc_16f84
  %tmp243 = icmp ugt i32 %v7_16f64, %v1_16f7c
  br i1 %tmp243, label %dec_label_pc_16e9c, label %dec_label_pc_16f88

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16af4
  store i32 %v0_16af4, i32* %r0.global-to-local, align 4
  %v1_16fc8 = call i32 @function_17298(i32 %v0_16af4)
  store i32 %v1_16fc8, i32* %r0.global-to-local, align 4
  store i32 %v1_16fc8, i32* @r5, align 4
  br label %dec_label_pc_16b0c

dec_label_pc_16fd4:                               ; preds = %bb193
  store i32 %v0_16fd4, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_170a4, %dec_label_pc_16fd4
  %v0_17018 = phi i32 [ %v0_170b4, %dec_label_pc_170a4 ], [ %v0_16cc0, %dec_label_pc_16fd4 ]
  %v0_17044 = phi i32 [ %v2_170ac, %dec_label_pc_170a4 ], [ %v0_16fd4, %dec_label_pc_16fd4 ]
  %v0_17048 = phi i32 [ %v5_170b0, %dec_label_pc_170a4 ], [ 0, %dec_label_pc_16fd4 ]
  %v0_1700c = phi i32 [ %v1_170b4, %dec_label_pc_170a4 ], [ %v1_16cc0, %dec_label_pc_16fd4 ]
  %v2_16fe0 = icmp ugt i32 %v0_1700c, 8
  %v7_16fe0 = icmp eq i32 %v0_1700c, 9
  %v2_16fe4 = xor i1 %v7_16fe0, true
  %v3_16fe4 = and i1 %v2_16fe0, %v2_16fe4
  br i1 %v3_16fe4, label %bb200, label %bb201

bb200:                                            ; preds = %dec_label_pc_16fdc
  store i32 0, i32* @r2, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_16fdc, %bb200
  %v2_16fe8 = xor i1 %v2_16fe0, true
  %v3_16fe8 = or i1 %v7_16fe0, %v2_16fe8
  br i1 %v3_16fe8, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  store i32 1, i32* @r2, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v3_16fec = icmp ugt i32 %v0_17048, 429496728
  %v9_16fec = icmp eq i32 %v0_17048, 429496729
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_16ff4 = xor i1 %v9_16fec, true
  %v3_16ff4 = and i1 %v3_16fec, %v2_16ff4
  br i1 %v3_16ff4, label %dec_label_pc_17000, label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %bb203
  br i1 %v9_16fec, label %dec_label_pc_1702c, label %dec_label_pc_16ffc

dec_label_pc_16ffc:                               ; preds = %dec_label_pc_1702c, %dec_label_pc_16ff8
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17000

dec_label_pc_17000:                               ; preds = %dec_label_pc_1702c, %bb203, %dec_label_pc_16ffc
  %v1_17000 = phi i32 [ 0, %dec_label_pc_1702c ], [ 0, %bb203 ], [ 1, %dec_label_pc_16ffc ]
  %v0_17000 = load i32, i32* @r2, align 4
  %v2_17000 = and i32 %v0_17000, %v1_17000
  %v2_17004 = icmp eq i32 %v2_17000, 0
  br i1 %v2_17004, label %dec_label_pc_1700c, label %dec_label_pc_17044

dec_label_pc_1700c:                               ; preds = %dec_label_pc_170cc, %dec_label_pc_17000, %dec_label_pc_17044
  br i1 %v3_16fe4, label %dec_label_pc_16e2c, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_1700c
  store i32 ptrtoint (i32* @global_var_1ab02.647 to i32), i32* %r0.global-to-local, align 4
  %v2_17018 = add i32 %v0_17018, ptrtoint (i32* @global_var_1ab02.647 to i32)
  %v3_17018 = inttoptr i32 %v2_17018 to i8*
  %v4_17018 = load i8, i8* %v3_17018, align 1
  %tmp244 = icmp ult i8 %v4_17018, 10
  br i1 %tmp244, label %.thread145, label %dec_label_pc_16e2c

.thread145:                                       ; preds = %dec_label_pc_17014
  %v6_17018 = zext i8 %v4_17018 to i32
  br label %dec_label_pc_16e9c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_16ff8
  %tmp245 = icmp ugt i32 %v0_17044, -1717986919
  br i1 %tmp245, label %dec_label_pc_17000, label %dec_label_pc_16ffc

dec_label_pc_17044:                               ; preds = %dec_label_pc_17000
  %v2_17044 = mul i32 %v0_17044, 2
  store i32 %v2_17044, i32* %r1.global-to-local, align 4
  %v3_17044 = icmp ult i32 %v2_17044, %v0_17044
  %v3_17048 = mul i32 %v0_17048, 2
  %v4_17048 = zext i1 %v3_17044 to i32
  %v5_17048 = or i32 %v4_17048, %v3_17048
  store i32 %v5_17048, i32* %r2.global-to-local, align 4
  %v3_17050 = mul i32 %v5_17048, 4
  %tmp205 = udiv i32 %v0_17044, 536870912
  %v4_17054 = urem i32 %tmp205, 4
  %v5_17054 = or i32 %v3_17050, %v4_17054
  %v2_17060 = mul i32 %v0_17044, 10
  store i32 %v2_17060, i32* @r8, align 4
  %v1_17068 = and i32 %v0_1700c, 1073741824
  %v2_17068 = icmp ne i32 %v1_17068, 0
  %v3_17068 = ashr i32 %v0_1700c, 31
  %v4_17074 = zext i1 %v2_17068 to i32
  %v3_17074 = add i32 %v4_17074, %v5_17048
  %v5_17074 = add i32 %v3_17074, %v5_17054
  store i32 %v5_17074, i32* @sb, align 4
  %tmp246 = lshr i32 %v0_1700c, 31
  %v1_17078 = add nsw i32 %tmp246, -1
  store i32 %v1_17078, i32* @r4, align 4
  %v3_1707c = icmp uge i32 %v5_17074, %v1_17078
  %v9_1707c = icmp eq i32 %v5_17074, %v1_17078
  %v1_17080 = sub i32 -1, %v0_1700c
  %v2_17084 = xor i1 %v9_1707c, true
  %v3_17084 = and i1 %v3_1707c, %v2_17084
  br i1 %v3_17084, label %dec_label_pc_1700c, label %dec_label_pc_17088

dec_label_pc_17088:                               ; preds = %dec_label_pc_17044
  br i1 %v9_1707c, label %dec_label_pc_170cc, label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %dec_label_pc_170cc, %dec_label_pc_17088
  %v0_1708c = load i32, i32* @sl, align 4
  %v1_1708c = add i32 %v0_1708c, 4
  %v2_1708c = inttoptr i32 %v1_1708c to i32*
  %v3_1708c = load i32, i32* %v2_1708c, align 4
  store i32 %v3_1708c, i32* %r2.global-to-local, align 4
  %v1_17090 = add i32 %v0_1708c, 104
  %v2_17090 = inttoptr i32 %v1_17090 to i32*
  %v3_17090 = load i32, i32* %v2_17090, align 4
  %v3_17094 = icmp ult i32 %v3_1708c, %v3_17090
  br i1 %v3_17094, label %.thread52.dec_label_pc_170a4_crit_edge, label %dec_label_pc_170bc

.thread52.dec_label_pc_170a4_crit_edge:           ; preds = %dec_label_pc_1708c
  %v2_17098 = inttoptr i32 %v3_1708c to i8*
  %v3_17098 = load i8, i8* %v2_17098, align 1
  %v4_17098 = zext i8 %v3_17098 to i32
  store i32 %v4_17098, i32* @r5, align 4
  %v6_17098 = add i32 %v3_1708c, 1
  store i32 %v6_17098, i32* %r2.global-to-local, align 4
  store i32 %v6_17098, i32* %v2_1708c, align 4
  %v0_170b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170a4:                               ; preds = %.thread52.dec_label_pc_170a4_crit_edge, %dec_label_pc_170bc
  %v0_170b4 = phi i32 [ %v0_170b4.pre, %.thread52.dec_label_pc_170a4_crit_edge ], [ %v1_170c0, %dec_label_pc_170bc ]
  store i32 %v0_1700c, i32* %r1.global-to-local, align 4
  store i32 %v3_17068, i32* @r2, align 4
  %v0_170ac = load i32, i32* @r8, align 4
  %v2_170ac = add i32 %v0_170ac, %v0_1700c
  store i32 %v2_170ac, i32* @r6, align 4
  %v3_170ac = icmp ult i32 %v2_170ac, %v0_170ac
  %v0_170b0 = load i32, i32* @sb, align 4
  %v3_170b0 = add i32 %v0_170b0, %v3_17068
  %v4_170b0 = zext i1 %v3_170ac to i32
  %v5_170b0 = add i32 %v4_170b0, %v3_170b0
  store i32 %v5_170b0, i32* @r7, align 4
  %v1_170b4 = add i32 %v0_170b4, -48
  store i32 %v1_170b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_170bc:                               ; preds = %dec_label_pc_1708c
  store i32 %v0_1708c, i32* %r0.global-to-local, align 4
  %v1_170c0 = call i32 @function_17298(i32 %v0_1708c)
  store i32 %v1_170c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170cc:                               ; preds = %dec_label_pc_17088
  %tmp247 = icmp ugt i32 %v2_17060, %v1_17080
  br i1 %tmp247, label %dec_label_pc_1700c, label %dec_label_pc_1708c

dec_label_pc_170d8:                               ; preds = %dec_label_pc_16e00
  %v2_170dc = load i32, i32* %stack_var_0, align 4
  store i32 %v2_170dc, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_16e2c

dec_label_pc_170e4:                               ; preds = %dec_label_pc_16e50
  %v0_170e4 = call i32 @function_139e8()
  %v2_170ec = load i32, i32* %stack_var_0, align 4
  %v2_170f4 = add i32 %v2_170ec, -1
  %v3_170f4 = icmp ne i32 %v2_170ec, 0
  %v3_170fc = add i32 %arg5, -1
  %v4_170fc = zext i1 %v3_170f4 to i32
  %v5_170fc = add i32 %v3_170fc, %v4_170fc
  store i32 %v2_170f4, i32* %stack_var_0, align 4
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_1710c = inttoptr i32 %v0_170e4 to i32*
  store i32 34, i32* %v2_1710c, align 4
  %v2_17114 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_17114, i32* %r0.global-to-local, align 4
  store i32 %v5_170fc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d34

dec_label_pc_1711c:                               ; preds = %dec_label_pc_16e4c
  %v1_17120 = load i32, i32* @r6, align 4
  %tmp248 = icmp ugt i32 %v3_1711c, %v1_17120
  br i1 %tmp248, label %dec_label_pc_16ed4, label %dec_label_pc_16e50

dec_label_pc_1712c:                               ; preds = %dec_label_pc_16ed0
  %v0_17130 = load i32, i32* @r6, align 4
  %tmp249 = icmp ugt i32 %v0_17130, %v3_1711c
  br i1 %tmp249, label %dec_label_pc_16e70, label %dec_label_pc_16ed4

dec_label_pc_1713c:                               ; preds = %dec_label_pc_16bfc
  store i32 %v0_16bfc, i32* %r0.global-to-local, align 4
  %v1_17140 = call i32 @function_17298(i32 %v0_16bfc)
  store i32 %v1_17140, i32* %r0.global-to-local, align 4
  store i32 %v1_17140, i32* @r5, align 4
  br label %dec_label_pc_16c14

dec_label_pc_1714c:                               ; preds = %dec_label_pc_16c14
  %v0_1714c = load i32, i32* @sl, align 4
  %v1_1714c = add i32 %v0_1714c, 4
  %v2_1714c = inttoptr i32 %v1_1714c to i32*
  %v3_1714c = load i32, i32* %v2_1714c, align 4
  store i32 %v3_1714c, i32* %r2.global-to-local, align 4
  %v1_17150 = add i32 %v0_1714c, 104
  %v2_17150 = inttoptr i32 %v1_17150 to i32*
  %v3_17150 = load i32, i32* %v2_17150, align 4
  %v3_17154 = icmp ult i32 %v3_1714c, %v3_17150
  br i1 %v3_17154, label %.thread54.dec_label_pc_17164_crit_edge, label %dec_label_pc_171cc

.thread54.dec_label_pc_17164_crit_edge:           ; preds = %dec_label_pc_1714c
  %v2_17158 = inttoptr i32 %v3_1714c to i8*
  %v3_17158 = load i8, i8* %v2_17158, align 1
  %v4_17158 = zext i8 %v3_17158 to i32
  store i32 %v4_17158, i32* %r0.global-to-local, align 4
  %v6_17158 = add i32 %v3_1714c, 1
  store i32 %v6_17158, i32* %r2.global-to-local, align 4
  store i32 %v6_17158, i32* %v2_1714c, align 4
  %v0_17168.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17164

dec_label_pc_17164:                               ; preds = %.thread54.dec_label_pc_17164_crit_edge, %dec_label_pc_171cc
  %v0_17168 = phi i32 [ %v0_17168.pre, %.thread54.dec_label_pc_17164_crit_edge ], [ %v1_171d0, %dec_label_pc_171cc ]
  %v2_17168 = add i32 %v0_17168, ptrtoint (i32* @global_var_1ab02.647 to i32)
  %v3_17168 = inttoptr i32 %v2_17168 to i8*
  %v4_17168 = load i8, i8* %v3_17168, align 1
  %v6_17168 = zext i8 %v4_17168 to i32
  store i32 %v6_17168, i32* @fp, align 4
  %tmp250 = icmp ult i8 %v4_17168, 16
  br i1 %tmp250, label %.thread156, label %dec_label_pc_17180

.thread156:                                       ; preds = %dec_label_pc_17164
  store i32 16, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b7c

dec_label_pc_17180:                               ; preds = %dec_label_pc_17164
  %v0_17180 = load i32, i32* @sl, align 4
  %v1_17180 = add i32 %v0_17180, 104
  %v2_17180 = inttoptr i32 %v1_17180 to i32*
  %v3_17180 = load i32, i32* %v2_17180, align 4
  store i32 %v3_17180, i32* %r2.global-to-local, align 4
  %v2_17184 = icmp eq i32 %v3_17180, 0
  br i1 %v2_17184, label %.thread57, label %bb206

bb206:                                            ; preds = %dec_label_pc_17180
  %v2_17188 = add i32 %v0_17180, 4
  %v3_17188 = inttoptr i32 %v2_17188 to i32*
  %v4_17188 = load i32, i32* %v3_17188, align 4
  %v2_1718c = add i32 %v4_17188, -1
  store i32 %v2_1718c, i32* %v3_17188, align 4
  br label %.thread57

.thread57:                                        ; preds = %dec_label_pc_17180, %bb206
  %v0_17194 = load i32, i32* @r6, align 4
  %v2_17194 = icmp eq i32 %v0_17194, 0
  br i1 %v2_17194, label %dec_label_pc_171d8, label %dec_label_pc_1719c

dec_label_pc_1719c:                               ; preds = %.thread57
  %v0_1719c = load i32, i32* %r2.global-to-local, align 4
  %v2_1719c = icmp eq i32 %v0_1719c, 0
  br i1 %v2_1719c, label %dec_label_pc_17204, label %dec_label_pc_171a4

dec_label_pc_171a4:                               ; preds = %dec_label_pc_1719c
  %v0_171a4 = load i32, i32* @sl, align 4
  %v1_171a4 = add i32 %v0_171a4, 4
  %v2_171a4 = inttoptr i32 %v1_171a4 to i32*
  %v3_171a4 = load i32, i32* %v2_171a4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_171b0 = add i32 %v3_171a4, -1
  store i32 0, i32* %stack_var_0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_171b0, i32* %v2_171a4, align 4
  %v1_16d3c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16d34

dec_label_pc_171cc:                               ; preds = %dec_label_pc_1714c
  store i32 %v0_1714c, i32* %r0.global-to-local, align 4
  %v1_171d0 = call i32 @function_17298(i32 %v0_1714c)
  store i32 %v1_171d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17164

dec_label_pc_171d8:                               ; preds = %.thread57
  %v0_171d8 = load i32, i32* @sl, align 4
  store i32 %v0_171d8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v8_171e4 = call i32 @function_17234(i32 %v0_171d8, i32 %tmp, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16d34

dec_label_pc_17204:                               ; preds = %dec_label_pc_1719c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16d34

; uselistorder directives
  uselistorder i32 %v1_171d0, { 1, 0 }
  uselistorder i32 %v6_17168, { 1, 0 }
  uselistorder i32 %v3_1714c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17140, { 1, 2, 0 }
  uselistorder i32 %v2_17114, { 1, 0 }
  uselistorder i32 %v1_170c0, { 1, 0 }
  uselistorder i32 %v1_170b4, { 1, 0 }
  uselistorder i32 %v5_170b0, { 1, 0 }
  uselistorder i32 %v2_170ac, { 1, 2, 0 }
  uselistorder i32 %v0_170ac, { 1, 0 }
  uselistorder i32 %v0_170b4, { 1, 0 }
  uselistorder i32 %v3_1708c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1707c, { 1, 0 }
  uselistorder i32 %v5_17048, { 1, 0, 2 }
  uselistorder i8 %v4_17018, { 1, 0 }
  uselistorder i1 %v9_16fec, { 1, 0 }
  uselistorder i1 %v7_16fe0, { 1, 0 }
  uselistorder i32 %v0_1700c, { 2, 3, 0, 1, 5, 4, 6, 7 }
  uselistorder i32 %v0_17048, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_17044, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_16fa4, { 1, 0 }
  uselistorder i32 %v3_16f88, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16f6c, { 2, 0, 1 }
  uselistorder i64 %v4_16f64, { 1, 0 }
  uselistorder i32 %v5_16f2c, { 1, 0 }
  uselistorder i32 %v0_16f24, { 1, 0 }
  uselistorder i32 %v2_16ee8, { 2, 1, 0 }
  uselistorder i32 %v2_16ee0, { 1, 0 }
  uselistorder i32 %v3_16edc, { 1, 0 }
  uselistorder i32 %v1_16e8c, { 1, 0 }
  uselistorder i32 %v3_16ea8, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-60.2.off0, { 0, 2, 1 }
  uselistorder i32 %v2_16e80, { 1, 0 }
  uselistorder i32 %v3_1711c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_16e44, { 1, 2, 0 }
  uselistorder i32 %v1_16e44, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-44.2, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v1_16de4, { 0, 2, 1 }
  uselistorder i32 %v0_16dec, { 1, 0, 3, 2 }
  uselistorder i32 %v1_16dac, { 1, 0 }
  uselistorder i32 %v3_16d78, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16d5c, { 1, 0 }
  uselistorder i32 %v0_16d08, { 1, 0 }
  uselistorder i32 %v1_16ca0, { 1, 0 }
  uselistorder i32 %v3_16cd0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_16cc4, { 1, 0 }
  uselistorder i32 %v0_16fd4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16ca4, { 1, 0 }
  uselistorder i32 %v0_16cb8, { 1, 0 }
  uselistorder i32 %v1_16c4c, { 1, 0 }
  uselistorder i32 %v3_16c80, { 1, 0, 2, 3 }
  uselistorder i1 %v3_16c74, { 1, 0 }
  uselistorder i32 %v4_16c30, { 1, 0 }
  uselistorder i32 %v0_16c2c, { 1, 2, 0 }
  uselistorder i32 %v3_16bfc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16bf4, { 1, 0 }
  uselistorder i32 %v1_16bec, { 1, 0 }
  uselistorder i32 %v3_16bd0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_16bc4, { 1, 0 }
  uselistorder i32 %v0_16d68, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16b7c, { 18, 17, 16, 7, 13, 12, 0, 1, 2, 8, 9, 10, 15, 5, 3, 6, 14, 11, 19, 4 }
  uselistorder i32 %v4_16c78107, { 1, 0 }
  uselistorder i32 %v0_16b64, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16b4c, { 1, 2, 0 }
  uselistorder i32 %v0_16b40143, { 1, 0 }
  uselistorder i32 %v3_16af4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16ac0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_16aa4, { 2, 3, 0, 1 }
  uselistorder i32* %v2_16aa4, { 1, 0 }
  uselistorder i32 %v2_16ab4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16a94, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %tmp, { 6, 5, 1, 4, 2, 3, 8, 9, 7, 0, 10 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 10, 7, 5, 6, 8, 9, 13, 11, 12, 17, 15, 14, 16, 19, 18, 23, 20, 21, 22, 55, 24, 26, 25, 31, 27, 28, 29, 30, 38, 35, 32, 33, 34, 36, 37, 40, 39, 45, 41, 42, 43, 44, 49, 46, 47, 48, 53, 50, 51, 52, 56, 54, 0, 1 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i8 10, { 0, 6, 1, 5, 7, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_17234, { 2, 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1ab01.649 to i32), i32 1), { 1, 5, 4, 3, 2, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1ab02.647 to i32), { 0, 1, 3, 2 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 4, 0, 5, 3, 1, 6, 2, 7 }
  uselistorder i32 (i32)* @function_17298, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 37, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* @fp, { 89, 0, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 155, 156, 157, 158, 119, 120, 121, 110, 111, 112, 113, 114, 115, 116, 1, 117, 118, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 12, 13, 14, 15, 16, 19, 20, 103, 102, 104, 105, 106, 107, 23, 24, 25, 26, 27, 28, 29, 30, 31, 21, 22, 2, 32, 33, 34, 35, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 52, 53, 54, 55, 57, 58, 59, 60, 65, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154 }
  uselistorder i32 %arg5, { 3, 7, 8, 0, 9, 4, 5, 1, 2, 6 }
  uselistorder label %.thread57, { 1, 0 }
  uselistorder label %dec_label_pc_17164, { 1, 0 }
  uselistorder label %dec_label_pc_170a4, { 1, 0 }
  uselistorder label %dec_label_pc_1700c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17000, { 0, 2, 1 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_16f84, { 1, 0 }
  uselistorder label %dec_label_pc_16f1c, { 1, 0 }
  uselistorder label %dec_label_pc_16f10, { 1, 0 }
  uselistorder label %dec_label_pc_16e9c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_16e90, { 1, 0 }
  uselistorder label %dec_label_pc_16e50, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_16e2c, { 5, 3, 4, 1, 2, 6, 0 }
  uselistorder label %bb198, { 1, 0 }
  uselistorder label %dec_label_pc_16dc0, { 2, 1, 0 }
  uselistorder label %bb196, { 1, 0 }
  uselistorder label %dec_label_pc_16d90, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_16cbc, { 1, 0 }
  uselistorder label %dec_label_pc_16ca4, { 1, 0 }
  uselistorder label %dec_label_pc_16c80, { 1, 0 }
  uselistorder label %dec_label_pc_16c68, { 1, 0 }
  uselistorder label %dec_label_pc_16c50, { 1, 0 }
  uselistorder label %dec_label_pc_16c14, { 1, 0 }
  uselistorder label %dec_label_pc_16bf4, { 1, 0 }
  uselistorder label %dec_label_pc_16bd0, { 1, 0 }
  uselistorder label %dec_label_pc_16bc0, { 1, 0 }
  uselistorder label %dec_label_pc_16bb0, { 1, 0 }
  uselistorder label %dec_label_pc_16b54, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %dec_label_pc_16b34, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %dec_label_pc_16b1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16b0c, { 1, 0 }
  uselistorder label %dec_label_pc_16aa4, { 1, 0 }
  uselistorder label %dec_label_pc_16aa4.backedge, { 3, 0, 2, 1 }
}

define i32 @function_1722c() local_unnamed_addr {
dec_label_pc_1722c:
  %v0_1722c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1722c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1722c
  %v1_1722c = load i32, i32* @sb, align 4
  %v20_1722c = add i32 %v1_1722c, 28
  %v21_1722c = inttoptr i32 %v20_1722c to i32*
  %v22_1722c = load i32, i32* %v21_1722c, align 4
  call void @__pseudo_branch(i32 %v22_1722c)
  %v0_17230.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17230.pr, label %.thread, label %bb1

bb1:                                              ; preds = %bb
  %v1_17230 = load i32, i32* @sb, align 4
  %v2_17230 = add i32 %v1_17230, 4
  %v3_17230 = inttoptr i32 %v2_17230 to i32*
  %v4_17230 = load i32, i32* %v3_17230, align 4
  %v23_17230 = add i32 %v1_17230, 32
  %v24_17230 = inttoptr i32 %v23_17230 to i32*
  %v25_17230 = load i32, i32* %v24_17230, align 4
  call void @__pseudo_branch(i32 %v25_17230)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1722c, %bb, %bb1
  %.0 = phi i32 [ undef, %bb ], [ %v4_17230, %bb1 ], [ undef, %dec_label_pc_1722c ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @function_17234(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_17234:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17234 = load i32, i32* @r4, align 4
  store i32 %v3_17234, i32* %stack_var_-8, align 4
  %v1_17238 = add i32 %arg1, 8
  %v2_17238 = inttoptr i32 %v1_17238 to i32*
  %v3_17238 = load i32, i32* %v2_17238, align 4
  store i32 %v3_17238, i32* @ip, align 4
  %v1_1723c = add i32 %arg1, 4
  %v2_1723c = inttoptr i32 %v1_1723c to i32*
  %v3_1723c = load i32, i32* %v2_1723c, align 4
  store i32 %v3_1723c, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v2_17248 = sub i32 %v3_17238, %v3_1723c
  store i32 %v2_17248, i32* %r3.global-to-local, align 4
  %v2_1724c = or i32 %arg3, %arg2
  %v4_1724c = icmp eq i32 %v2_1724c, 0
  %v3_17250 = ashr i32 %v2_17248, 31
  store i32 %v3_17250, i32* %r4.global-to-local, align 4
  %v2_17254 = add i32 %arg1, 112
  %v3_17254 = inttoptr i32 %v2_17254 to i32*
  store i32 %arg2, i32* %v3_17254, align 4
  %v0_17258 = load i32, i32* %r2.global-to-local, align 4
  %v2_17258 = add i32 %arg1, 116
  %v3_17258 = inttoptr i32 %v2_17258 to i32*
  store i32 %v0_17258, i32* %v3_17258, align 4
  %v0_1725c = load i32, i32* %r3.global-to-local, align 4
  %v2_1725c = add i32 %arg1, 120
  %v3_1725c = inttoptr i32 %v2_1725c to i32*
  store i32 %v0_1725c, i32* %v3_1725c, align 4
  %v0_17260 = load i32, i32* %r4.global-to-local, align 4
  %v2_17260 = add i32 %arg1, 124
  %v3_17260 = inttoptr i32 %v2_17260 to i32*
  store i32 %v0_17260, i32* %v3_17260, align 4
  br i1 %v4_1724c, label %dec_label_pc_17280, label %dec_label_pc_17268

dec_label_pc_17268:                               ; preds = %dec_label_pc_17234
  %v0_17268 = load i32, i32* %r4.global-to-local, align 4
  %v1_17268 = load i32, i32* %r2.global-to-local, align 4
  %v7_1726c = icmp sgt i32 %v0_17268, %v1_17268
  br i1 %v7_1726c, label %dec_label_pc_17268.dec_label_pc_17270_crit_edge, label %dec_label_pc_1727c

dec_label_pc_17268.dec_label_pc_17270_crit_edge:  ; preds = %dec_label_pc_17268
  %v1_17270.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17270

dec_label_pc_17270:                               ; preds = %dec_label_pc_1728c, %dec_label_pc_17268.dec_label_pc_17270_crit_edge
  %v1_17270 = phi i32 [ %v1_17270.pre, %dec_label_pc_17268.dec_label_pc_17270_crit_edge ], [ %v1_1728c, %dec_label_pc_1728c ]
  %v0_17270 = load i32, i32* %lr.global-to-local, align 4
  %v2_17270 = add i32 %v0_17270, %v1_17270
  store i32 %v2_17270, i32* %r3.global-to-local, align 4
  %v2_17274 = add i32 %arg1, 104
  %v3_17274 = inttoptr i32 %v2_17274 to i32*
  store i32 %v2_17270, i32* %v3_17274, align 4
  br label %dec_label_pc_17284

dec_label_pc_1727c:                               ; preds = %dec_label_pc_17268
  %v9_17268 = icmp eq i32 %v0_17268, %v1_17268
  br i1 %v9_17268, label %dec_label_pc_1728c, label %dec_label_pc_17280

dec_label_pc_17280:                               ; preds = %dec_label_pc_1728c, %dec_label_pc_1727c, %dec_label_pc_17234
  %v0_17280 = load i32, i32* @ip, align 4
  %v2_17280 = add i32 %arg1, 104
  %v3_17280 = inttoptr i32 %v2_17280 to i32*
  store i32 %v0_17280, i32* %v3_17280, align 4
  br label %dec_label_pc_17284

dec_label_pc_17284:                               ; preds = %dec_label_pc_17270, %dec_label_pc_17280
  %v2_17284 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17284, i32* %r4.global-to-local, align 4
  ret i32 %arg1

dec_label_pc_1728c:                               ; preds = %dec_label_pc_1727c
  %v0_1728c = load i32, i32* %r3.global-to-local, align 4
  %v1_1728c = load i32, i32* %r1.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_1728c, %v1_1728c
  br i1 %tmp, label %dec_label_pc_17270, label %dec_label_pc_17280

; uselistorder directives
  uselistorder i32 %v1_17268, { 1, 0 }
  uselistorder i32 %v0_17268, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 8, 5, 7, 6, 4, 3 }
  uselistorder label %dec_label_pc_17284, { 1, 0 }
}

define i32 @function_17298(i32 %arg1) local_unnamed_addr {
dec_label_pc_17298:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17298 = load i32, i32* @r4, align 4
  store i32 %v3_17298, i32* %stack_var_-28, align 4
  %v1_1729c = add i32 %arg1, 112
  %v1_172a0 = inttoptr i32 %v1_1729c to i32*
  %v2_172a0 = load i32, i32* %v1_172a0, align 4
  %v3_172a0 = add i32 %arg1, 116
  %v4_172a0 = inttoptr i32 %v3_172a0 to i32*
  %v5_172a0 = load i32, i32* %v4_172a0, align 4
  store i32 %v5_172a0, i32* @r2, align 4
  %v2_172a4 = or i32 %v5_172a0, %v2_172a0
  %v4_172a4 = icmp eq i32 %v2_172a4, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v4_172a4, label %dec_label_pc_172e8, label %dec_label_pc_172b4

dec_label_pc_172b4:                               ; preds = %dec_label_pc_17298
  %v1_172b4 = add i32 %arg1, 124
  %v2_172b4 = inttoptr i32 %v1_172b4 to i32*
  %v3_172b4 = load i32, i32* %v2_172b4, align 4
  %v5_172bc = icmp slt i32 %v3_172b4, %v5_172a0
  br i1 %v5_172bc, label %dec_label_pc_172e8, label %dec_label_pc_172c0

dec_label_pc_172c0:                               ; preds = %dec_label_pc_172b4
  %v9_172b8 = icmp eq i32 %v3_172b4, %v5_172a0
  br i1 %v9_172b8, label %dec_label_pc_172dc, label %dec_label_pc_172c4

dec_label_pc_172c4:                               ; preds = %dec_label_pc_172dc, %dec_label_pc_172e8, %dec_label_pc_172c0
  %v1_172c8 = phi i32 [ %arg1, %dec_label_pc_172dc ], [ %arg1, %dec_label_pc_172c0 ], [ %v1_172c8.pre, %dec_label_pc_172e8 ]
  %v2_172c8 = add i32 %v1_172c8, 104
  %v3_172c8 = inttoptr i32 %v2_172c8 to i32*
  store i32 0, i32* %v3_172c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172d0

dec_label_pc_172d0:                               ; preds = %bb, %dec_label_pc_17340, %dec_label_pc_172c4
  %v1_172d8 = phi i32 [ %v1_172d8.pre, %bb ], [ %v4_17340, %dec_label_pc_17340 ], [ -1, %dec_label_pc_172c4 ]
  %v2_172d4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_172d4, i32* @r4, align 4
  ret i32 %v1_172d8

dec_label_pc_172dc:                               ; preds = %dec_label_pc_172c0
  %v1_172dc = add i32 %arg1, 120
  %v2_172dc = inttoptr i32 %v1_172dc to i32*
  %v3_172dc = load i32, i32* %v2_172dc, align 4
  %v3_172e0 = icmp ult i32 %v3_172dc, %v2_172a0
  br i1 %v3_172e0, label %dec_label_pc_172e8, label %dec_label_pc_172c4

dec_label_pc_172e8:                               ; preds = %dec_label_pc_172dc, %dec_label_pc_172b4, %dec_label_pc_17298
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_172ec = call i32 @function_179f8(i32 %arg1)
  store i32 %v1_172ec, i32* %r0.global-to-local, align 4
  %v1_172f0 = icmp slt i32 %v1_172ec, 0
  %v1_172c8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v1_172f0, label %dec_label_pc_172c4, label %dec_label_pc_172f8

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172e8
  %v1_172f8 = add i32 %v1_172c8.pre, 112
  %v1_172fc = inttoptr i32 %v1_172f8 to i32*
  %v2_172fc = load i32, i32* %v1_172fc, align 4
  %v3_172fc = add i32 %v1_172c8.pre, 116
  %v4_172fc = inttoptr i32 %v3_172fc to i32*
  %v5_172fc = load i32, i32* %v4_172fc, align 4
  store i32 %v5_172fc, i32* @r2, align 4
  %v2_17300 = or i32 %v5_172fc, %v2_172fc
  %v4_17300 = icmp eq i32 %v2_17300, 0
  br i1 %v4_17300, label %dec_label_pc_17308, label %dec_label_pc_17350

dec_label_pc_17308:                               ; preds = %dec_label_pc_172f8
  %v1_17308 = add i32 %v1_172c8.pre, 4
  %v2_17308 = inttoptr i32 %v1_17308 to i32*
  %v3_17308 = load i32, i32* %v2_17308, align 4
  store i32 %v3_17308, i32* %lr.global-to-local, align 4
  %v1_1730c = add i32 %v1_172c8.pre, 8
  %v2_1730c = inttoptr i32 %v1_1730c to i32*
  %v3_1730c = load i32, i32* %v2_1730c, align 4
  store i32 %v3_1730c, i32* @ip, align 4
  br label %dec_label_pc_17310

dec_label_pc_17310:                               ; preds = %dec_label_pc_17398, %dec_label_pc_17394, %dec_label_pc_17308
  %v0_17310 = phi i32 [ %v3_1735c, %dec_label_pc_17394 ], [ %v3_1735c, %dec_label_pc_17398 ], [ %v3_1730c, %dec_label_pc_17308 ]
  %v2_17310 = add i32 %v1_172c8.pre, 104
  %v3_17310 = inttoptr i32 %v2_17310 to i32*
  store i32 %v0_17310, i32* %v3_17310, align 4
  br label %dec_label_pc_17314

dec_label_pc_17314:                               ; preds = %dec_label_pc_17380, %dec_label_pc_17310
  %v0_17314 = load i32, i32* @ip, align 4
  %v2_17314 = icmp eq i32 %v0_17314, 0
  br i1 %v2_17314, label %dec_label_pc_17340, label %dec_label_pc_1731c

dec_label_pc_1731c:                               ; preds = %dec_label_pc_17314
  %v1_1731c = add i32 %v0_17314, 1
  %v0_17320 = load i32, i32* %r5.global-to-local, align 4
  %v1_17320 = add i32 %v0_17320, 120
  %v1_17324 = inttoptr i32 %v1_17320 to i32*
  %v2_17324 = load i32, i32* %v1_17324, align 4
  %v3_17324 = add i32 %v0_17320, 124
  %v4_17324 = inttoptr i32 %v3_17324 to i32*
  %v5_17324 = load i32, i32* %v4_17324, align 4
  %v0_17328 = load i32, i32* %lr.global-to-local, align 4
  %v2_17328 = sub i32 %v1_1731c, %v0_17328
  %v3_1732c = ashr i32 %v2_17328, 31
  %v2_17330 = add i32 %v2_17328, %v2_17324
  %v3_17330 = icmp ult i32 %v2_17330, %v2_17324
  %v3_17334 = add i32 %v3_1732c, %v5_17324
  %v4_17334 = zext i1 %v3_17330 to i32
  %v5_17334 = add i32 %v4_17334, %v3_17334
  store i32 %v5_17334, i32* @r2, align 4
  store i32 %v2_17330, i32* %v1_17324, align 4
  %v0_1733c = load i32, i32* @r2, align 4
  %v1_1733c = load i32, i32* %r5.global-to-local, align 4
  %v2_1733c = add i32 %v1_1733c, 124
  %v3_1733c = inttoptr i32 %v2_1733c to i32*
  store i32 %v0_1733c, i32* %v3_1733c, align 4
  br label %dec_label_pc_17340

dec_label_pc_17340:                               ; preds = %dec_label_pc_17314, %dec_label_pc_1731c
  %v0_17340 = load i32, i32* %lr.global-to-local, align 4
  %v1_17340 = add i32 %v0_17340, -1
  %v2_17340 = inttoptr i32 %v1_17340 to i8*
  %v3_17340 = load i8, i8* %v2_17340, align 1
  %v4_17340 = zext i8 %v3_17340 to i32
  %v0_17344 = load i32, i32* %r0.global-to-local, align 4
  %v9_17344 = icmp eq i32 %v0_17344, %v4_17340
  br i1 %v9_17344, label %dec_label_pc_172d0, label %bb

bb:                                               ; preds = %dec_label_pc_17340
  %v2_17348 = trunc i32 %v0_17344 to i8
  store i8 %v2_17348, i8* %v2_17340, align 1
  %v1_172d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172d0

dec_label_pc_17350:                               ; preds = %dec_label_pc_172f8
  %v1_17350 = add i32 %v1_172c8.pre, 120
  %v1_17354 = inttoptr i32 %v1_17350 to i32*
  %v2_17354 = load i32, i32* %v1_17354, align 4
  %v3_17354 = add i32 %v1_172c8.pre, 124
  %v4_17354 = inttoptr i32 %v3_17354 to i32*
  %v5_17354 = load i32, i32* %v4_17354, align 4
  %v1_17358 = add i32 %v1_172c8.pre, 4
  %v2_17358 = inttoptr i32 %v1_17358 to i32*
  %v3_17358 = load i32, i32* %v2_17358, align 4
  store i32 %v3_17358, i32* %lr.global-to-local, align 4
  %v1_1735c = add i32 %v1_172c8.pre, 8
  %v2_1735c = inttoptr i32 %v1_1735c to i32*
  %v3_1735c = load i32, i32* %v2_1735c, align 4
  store i32 %v3_1735c, i32* @ip, align 4
  %v1_17360 = sub i32 -1, %v2_17354
  %v2_17364 = add i32 %v2_172fc, %v1_17360
  %v3_17364 = icmp ult i32 %v2_17364, %v1_17360
  %v1_17368 = sub i32 -1, %v5_17354
  %v2_1736c = sub i32 %v3_1735c, %v3_17358
  %v3_17370 = add i32 %v5_172fc, %v1_17368
  %v4_17370 = zext i1 %v3_17364 to i32
  %v5_17370 = add i32 %v3_17370, %v4_17370
  %v3_17374 = ashr i32 %v2_1736c, 31
  %v7_1737c = icmp sgt i32 %v3_17374, %v5_17370
  br i1 %v7_1737c, label %dec_label_pc_17380, label %dec_label_pc_17394

dec_label_pc_17380:                               ; preds = %dec_label_pc_17398, %dec_label_pc_17350
  %v2_17380 = sub i32 %v2_172fc, %v2_17354
  store i32 %v2_17380, i32* @r2, align 4
  %v1_17384 = add i32 %v2_17380, -1
  %v2_17388 = add i32 %v1_17384, %v3_17358
  %v2_1738c = add i32 %v1_172c8.pre, 104
  %v3_1738c = inttoptr i32 %v2_1738c to i32*
  store i32 %v2_17388, i32* %v3_1738c, align 4
  br label %dec_label_pc_17314

dec_label_pc_17394:                               ; preds = %dec_label_pc_17350
  %v9_17378 = icmp eq i32 %v3_17374, %v5_17370
  br i1 %v9_17378, label %dec_label_pc_17398, label %dec_label_pc_17310

dec_label_pc_17398:                               ; preds = %dec_label_pc_17394
  %tmp = icmp ugt i32 %v2_1736c, %v2_17364
  br i1 %tmp, label %dec_label_pc_17380, label %dec_label_pc_17310

; uselistorder directives
  uselistorder i32 %v3_17374, { 1, 0 }
  uselistorder i32 %v3_1735c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17354, { 1, 0 }
  uselistorder i32 %v4_17340, { 1, 0 }
  uselistorder i32 %v2_17324, { 1, 0 }
  uselistorder i32 %v2_172fc, { 2, 0, 1 }
  uselistorder i32 %v1_172c8.pre, { 9, 7, 8, 4, 3, 10, 5, 6, 2, 1, 0 }
  uselistorder i32 %v3_172b4, { 1, 0 }
  uselistorder i32 %v5_172a0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_172a0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 31, { 14, 15, 16, 0, 17, 18, 24, 25, 21, 5, 6, 7, 8, 22, 9, 10, 23, 20, 19, 1, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 104, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 2, 23, 1, 24 }
  uselistorder i32 124, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1, 5, 8, 7, 6, 9 }
  uselistorder label %dec_label_pc_17340, { 1, 0 }
  uselistorder label %dec_label_pc_172c4, { 1, 0, 2 }
}

define i32 @function_173a4() local_unnamed_addr {
dec_label_pc_173a4:
  %stack_var_0 = alloca i32, align 4
  %v1_173a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_173a4, i32* @ip, align 4
  %v0_173b0 = load i32, i32* @r1, align 4
  %v0_173b8 = load i32, i32* @r3, align 4
  store i32 %v0_173b8, i32* @r2, align 4
  ret i32 %v0_173b0
}

define i32 @function_173d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_173d4:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_173d8 = load i32, i32* @r4, align 4
  store i32 %v3_173d8, i32* %stack_var_-36, align 4
  %v3_173dc = load i32, i32* @global_var_2383c.532, align 4
  %v1_173e0 = inttoptr i32 %v3_173dc to i32*
  %v2_173e0 = load i32, i32* %v1_173e0, align 4
  %v7_173e4 = icmp eq i32 %v2_173e0, 33
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v0_173f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_173f0, i32* %r8.global-to-local, align 4
  br i1 %v7_173e4, label %.thread, label %dec_label_pc_173fc

.thread:                                          ; preds = %dec_label_pc_173d4
  %v1_173e4 = add i32 %v2_173e0, -33
  br label %dec_label_pc_17428

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173d4
  %v2_173fc = icmp eq i32 %v2_173e0, 0
  br i1 %v2_173fc, label %dec_label_pc_174a0, label %dec_label_pc_17414.preheader

dec_label_pc_17414.preheader:                     ; preds = %dec_label_pc_173fc
  store i32 8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17414

dec_label_pc_17414:                               ; preds = %dec_label_pc_17414, %dec_label_pc_17414.preheader
  %v0_17420 = phi i32 [ 8, %dec_label_pc_17414.preheader ], [ %v1_17420, %dec_label_pc_17414 ]
  %v2_17418 = add i32 %v0_17420, %v3_173dc
  %v3_17418 = inttoptr i32 %v2_17418 to i32*
  %v4_17418 = load i32, i32* %v3_17418, align 4
  %v1_17420 = add i32 %v0_17420, 8
  store i32 %v1_17420, i32* %r1.global-to-local, align 4
  switch i32 %v4_17418, label %dec_label_pc_17414 [
    i32 33, label %dec_label_pc_17428.loopexit
    i32 0, label %dec_label_pc_174a0.loopexit17
  ]

dec_label_pc_17428.loopexit:                      ; preds = %dec_label_pc_17414
  br label %dec_label_pc_17428

dec_label_pc_17428:                               ; preds = %.thread, %dec_label_pc_17428.loopexit
  %v0_17428 = phi i32 [ %v0_17420, %dec_label_pc_17428.loopexit ], [ %v1_173e4, %.thread ]
  %v2_17428 = add i32 %v0_17428, %v3_173dc
  %v1_1742c = add i32 %v2_17428, 4
  %v2_1742c = inttoptr i32 %v1_1742c to i32*
  %v3_1742c = load i32, i32* %v2_1742c, align 4
  %v1_17430 = add i32 %v3_1742c, 44
  %v2_17430 = inttoptr i32 %v1_17430 to i16*
  %v3_17430 = load i16, i16* %v2_17430, align 2
  %v4_17430 = zext i16 %v3_17430 to i32
  %v2_17434 = icmp eq i16 %v3_17430, 0
  br i1 %v2_17434, label %dec_label_pc_174a0, label %dec_label_pc_17440

dec_label_pc_17440:                               ; preds = %dec_label_pc_17428
  %v1_17438 = add i32 %v3_1742c, 28
  %v2_17438 = inttoptr i32 %v1_17438 to i32*
  %v3_17438 = load i32, i32* %v2_17438, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_17444 = add i32 %v3_1742c, 42
  %v2_17444 = inttoptr i32 %v1_17444 to i16*
  %v3_17444 = load i16, i16* %v2_17444, align 2
  %v4_17444 = zext i16 %v3_17444 to i32
  %v2_17448 = add i32 %v3_17438, %v3_1742c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %.thread4, %dec_label_pc_17440
  %v1_1748c38 = phi i32 [ %v0_174bc, %.thread4 ], [ 0, %dec_label_pc_17440 ]
  %v0_1748836 = phi i32 [ %v0_17488, %.thread4 ], [ -1, %dec_label_pc_17440 ]
  %v0_17478 = phi i32 [ %v1_17478, %.thread4 ], [ 0, %dec_label_pc_17440 ]
  %v0_17480 = phi i32 [ %v2_17480, %.thread4 ], [ %v2_17448, %dec_label_pc_17440 ]
  %v1_17454 = inttoptr i32 %v0_17480 to i32*
  %v2_17454 = load i32, i32* %v1_17454, align 4
  switch i32 %v2_17454, label %.thread4 [
    i32 1, label %.thread2
    i32 2, label %bb
  ]

.thread2:                                         ; preds = %dec_label_pc_17454
  %v2_1745c = add i32 %v0_17480, 4
  %v3_1745c = inttoptr i32 %v2_1745c to i32*
  %v4_1745c = load i32, i32* %v3_1745c, align 4
  %v5_1745c = add i32 %v0_17480, 8
  %v6_1745c = inttoptr i32 %v5_1745c to i32*
  %v7_1745c = load i32, i32* %v6_1745c, align 4
  %v3_17460 = sub i32 %v4_1745c, %v7_1745c
  %v3_17464 = add i32 %v3_17460, %v3_1742c
  store i32 %v3_17464, i32* %r5.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_17454
  %v2_17470 = add i32 %v0_17480, 4
  %v3_17470 = inttoptr i32 %v2_17470 to i32*
  %v4_17470 = load i32, i32* %v3_17470, align 4
  %v3_17474 = add i32 %v4_17470, %v3_1742c
  store i32 %v3_17474, i32* %r4.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17454, %.thread2, %bb
  %v0_174bc = phi i32 [ %v1_1748c38, %.thread2 ], [ %v3_17474, %bb ], [ %v1_1748c38, %dec_label_pc_17454 ]
  %v0_17488 = phi i32 [ %v3_17464, %.thread2 ], [ %v0_1748836, %bb ], [ %v0_1748836, %dec_label_pc_17454 ]
  %v1_17478 = add i32 %v0_17478, 1
  store i32 %v1_17478, i32* %r1.global-to-local, align 4
  %v9_1747c = icmp eq i32 %v1_17478, %v4_17430
  %v2_17480 = add i32 %v0_17480, %v4_17444
  br i1 %v9_1747c, label %dec_label_pc_17488, label %dec_label_pc_17454

dec_label_pc_17488:                               ; preds = %.thread4
  %v7_17488 = icmp eq i32 %v0_17488, -1
  br i1 %v7_17488, label %.thread8, label %bb71

bb71:                                             ; preds = %dec_label_pc_17488
  %v3_1748c = icmp eq i32 %v0_174bc, 0
  br i1 %v3_1748c, label %bb72, label %dec_label_pc_174ac

.thread8:                                         ; preds = %dec_label_pc_17488
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_174a0

bb72:                                             ; preds = %bb71
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_174a0

dec_label_pc_174a0.loopexit17:                    ; preds = %dec_label_pc_17414
  br label %dec_label_pc_174a0

dec_label_pc_174a0:                               ; preds = %dec_label_pc_17578, %bb72, %bb80, %dec_label_pc_174a0.loopexit17, %dec_label_pc_173fc, %.thread16, %.thread8, %dec_label_pc_17428, %dec_label_pc_174ac, %dec_label_pc_17548, %bb82, %dec_label_pc_17650
  %storemerge = phi i32 [ %v2_17654, %dec_label_pc_17650 ], [ 0, %bb72 ], [ 0, %bb82 ], [ 0, %dec_label_pc_17548 ], [ 0, %bb80 ], [ 0, %dec_label_pc_174ac ], [ 0, %dec_label_pc_17428 ], [ 0, %.thread8 ], [ 0, %.thread16 ], [ 0, %dec_label_pc_173fc ], [ 0, %dec_label_pc_174a0.loopexit17 ], [ 0, %dec_label_pc_17578 ]
  %v2_174a4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_174a4, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

dec_label_pc_174ac:                               ; preds = %bb71
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_174ac = inttoptr i32 %v0_174bc to i32*
  %v2_174ac = load i32, i32* %v1_174ac, align 4
  %v2_174b0 = icmp eq i32 %v2_174ac, 0
  br i1 %v2_174b0, label %dec_label_pc_174a0, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %dec_label_pc_174ac
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_174bc = add i32 %v0_174bc, 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17500

dec_label_pc_174d8:                               ; preds = %dec_label_pc_17514
  switch i32 %v0_17528, label %bb75 [
    i32 4, label %bb73
    i32 5, label %bb74
  ]

bb73:                                             ; preds = %dec_label_pc_174d8
  store i32 %v2_17508, i32* %sl.global-to-local, align 4
  br label %bb75

bb74:                                             ; preds = %dec_label_pc_174d8
  store i32 %v2_17508, i32* %r6.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %dec_label_pc_17518, %dec_label_pc_174d8, %bb76, %bb77, %bb73, %bb78, %bb74
  %v0_17554 = phi i32 [ %v2_17508, %bb78 ], [ %v0_1755455, %bb77 ], [ %v0_1755455, %bb73 ], [ %v0_1755455, %bb76 ], [ %v0_1755455, %bb74 ], [ %v0_1755455, %dec_label_pc_174d8 ], [ %v0_1755455, %dec_label_pc_17518 ]
  %v0_1755c = phi i32 [ %v0_1754853, %bb78 ], [ %v0_1754853, %bb77 ], [ %v2_17508, %bb73 ], [ %v0_1754853, %bb76 ], [ %v0_1754853, %bb74 ], [ %v0_1754853, %dec_label_pc_174d8 ], [ %v0_1754853, %dec_label_pc_17518 ]
  %v0_1756c = phi i32 [ %v0_1753448, %bb78 ], [ %v0_1753448, %bb77 ], [ %v0_1753448, %bb73 ], [ %v2_17508, %bb76 ], [ %v0_1753448, %bb74 ], [ %v0_1753448, %dec_label_pc_174d8 ], [ %v0_1753448, %dec_label_pc_17518 ]
  %v1_17538 = phi i32 [ %v1_1753850, %bb78 ], [ %v1_1753850, %bb77 ], [ %v1_1753850, %bb73 ], [ %v1_1753850, %bb76 ], [ %v2_17508, %bb74 ], [ %v1_1753850, %dec_label_pc_174d8 ], [ %v1_1753850, %dec_label_pc_17518 ]
  %v2_174ec = add i32 %v0_174f4, %v0_174bc
  %v3_174ec = inttoptr i32 %v2_174ec to i32*
  %v4_174ec = load i32, i32* %v3_174ec, align 4
  %v2_174f0 = icmp eq i32 %v4_174ec, 0
  %v1_174f8 = add i32 %v0_174f4, 8
  br i1 %v2_174f0, label %dec_label_pc_17534, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %bb75, %dec_label_pc_174b8
  %v0_1755455 = phi i32 [ %v0_17554, %bb75 ], [ 0, %dec_label_pc_174b8 ]
  %v0_1754853 = phi i32 [ %v0_1755c, %bb75 ], [ 0, %dec_label_pc_174b8 ]
  %v1_1753850 = phi i32 [ %v1_17538, %bb75 ], [ 0, %dec_label_pc_174b8 ]
  %v0_1753448 = phi i32 [ %v0_1756c, %bb75 ], [ 0, %dec_label_pc_174b8 ]
  %v0_17500 = phi i32 [ %v0_174f4, %bb75 ], [ 0, %dec_label_pc_174b8 ]
  %v0_174f4 = phi i32 [ %v1_174f8, %bb75 ], [ 8, %dec_label_pc_174b8 ]
  %v0_17528 = phi i32 [ %v4_174ec, %bb75 ], [ %v2_174ac, %dec_label_pc_174b8 ]
  %v2_17500 = add i32 %v0_17500, %v1_174bc
  %v3_17500 = inttoptr i32 %v2_17500 to i32*
  %v4_17500 = load i32, i32* %v3_17500, align 4
  %v7_17504 = icmp eq i32 %v0_17528, 6
  %v2_17508 = add i32 %v4_17500, %v0_17488
  br i1 %v7_17504, label %bb76, label %dec_label_pc_17514

bb76:                                             ; preds = %dec_label_pc_17500
  store i32 %v2_17508, i32* %r1.global-to-local, align 4
  br label %bb75

dec_label_pc_17514:                               ; preds = %dec_label_pc_17500
  %v2_17504 = icmp ugt i32 %v0_17528, 5
  br i1 %v2_17504, label %dec_label_pc_17518, label %dec_label_pc_174d8

dec_label_pc_17518:                               ; preds = %dec_label_pc_17514
  switch i32 %v0_17528, label %bb75 [
    i32 1879048176, label %bb77
    i32 1879048188, label %bb78
  ]

bb77:                                             ; preds = %dec_label_pc_17518
  store i32 %v2_17508, i32* %fp.global-to-local, align 4
  br label %bb75

bb78:                                             ; preds = %dec_label_pc_17518
  store i32 %v2_17508, i32* %sb.global-to-local, align 4
  br label %bb75

dec_label_pc_17534:                               ; preds = %bb75
  %v2_17534 = icmp eq i32 %v0_1756c, 0
  br i1 %v2_17534, label %.thread16, label %bb79

bb79:                                             ; preds = %dec_label_pc_17534
  %v3_17538 = icmp eq i32 %v1_17538, 0
  br i1 %v3_17538, label %bb80, label %dec_label_pc_17548

.thread16:                                        ; preds = %dec_label_pc_17534
  br label %dec_label_pc_174a0

bb80:                                             ; preds = %bb79
  br label %dec_label_pc_174a0

dec_label_pc_17548:                               ; preds = %bb79
  %v2_17548 = icmp eq i32 %v0_1755c, 0
  br i1 %v2_17548, label %dec_label_pc_174a0, label %dec_label_pc_17550

dec_label_pc_17550:                               ; preds = %dec_label_pc_17548
  %v1_17550 = add i32 %v0_1755c, 4
  %v2_17550 = inttoptr i32 %v1_17550 to i32*
  %v3_17550 = load i32, i32* %v2_17550, align 4
  %v2_17554 = icmp eq i32 %v0_17554, 0
  br i1 %v2_17554, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_17550
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_17550, %bb81
  store i32 %v1_17550, i32* %sl.global-to-local, align 4
  %v2_17560 = icmp eq i32 %v3_17550, 0
  br i1 %v2_17560, label %dec_label_pc_174a0, label %dec_label_pc_1756c

dec_label_pc_1756c:                               ; preds = %bb82
  store i32 %v0_1756c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17590

dec_label_pc_17578.loopexit:                      ; preds = %dec_label_pc_17604
  br label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %dec_label_pc_17578.loopexit, %dec_label_pc_17634, %dec_label_pc_175cc, %dec_label_pc_175c0, %dec_label_pc_175a8, %dec_label_pc_17590
  %v2_1757c = load i32, i32* %v2_17550, align 4
  %v0_17580 = load i32, i32* %sl.global-to-local, align 4
  %v1_17580 = add i32 %v0_17580, 1
  store i32 %v1_17580, i32* %sl.global-to-local, align 4
  %v0_17588 = load i32, i32* %r4.global-to-local, align 4
  %v1_17588 = add i32 %v0_17588, 16
  store i32 %v1_17588, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_1757c, %v1_17580
  br i1 %tmp, label %dec_label_pc_17590, label %dec_label_pc_174a0

dec_label_pc_17590:                               ; preds = %dec_label_pc_17578, %dec_label_pc_1756c
  %v0_175cc = phi i32 [ %v1_17588, %dec_label_pc_17578 ], [ %v0_1756c, %dec_label_pc_1756c ]
  %v1_17590 = add i32 %v0_175cc, 12
  %v2_17590 = inttoptr i32 %v1_17590 to i8*
  %v3_17590 = load i8, i8* %v2_17590, align 1
  %v4_17590 = zext i8 %v3_17590 to i32
  store i32 %v4_17590, i32* %r1.global-to-local, align 4
  %tmp87 = urem i8 %v3_17590, 16
  %v1_17598 = zext i8 %tmp87 to i32
  %v6_1759c = lshr i32 39, %v1_17598
  %v1_175a0 = urem i32 %v6_1759c, 2
  %v2_175a0 = icmp eq i32 %v1_175a0, 0
  br i1 %v2_175a0, label %dec_label_pc_17578, label %dec_label_pc_175a8

dec_label_pc_175a8:                               ; preds = %dec_label_pc_17590
  %div = udiv i8 %v3_17590, 16
  %v3_175ac = zext i8 %div to i32
  %v6_175b4 = lshr i32 1030, %v3_175ac
  %v1_175b8 = urem i32 %v6_175b4, 2
  %v2_175b8 = icmp eq i32 %v1_175b8, 0
  br i1 %v2_175b8, label %dec_label_pc_17578, label %dec_label_pc_175c0

dec_label_pc_175c0:                               ; preds = %dec_label_pc_175a8
  %v1_175c0 = add i32 %v0_175cc, 14
  %v2_175c0 = inttoptr i32 %v1_175c0 to i16*
  %v3_175c0 = load i16, i16* %v2_175c0, align 2
  %v2_175c4 = icmp eq i16 %v3_175c0, 0
  br i1 %v2_175c4, label %dec_label_pc_17578, label %dec_label_pc_175cc

dec_label_pc_175cc:                               ; preds = %dec_label_pc_175c0
  %v4_175c0 = zext i16 %v3_175c0 to i32
  %v1_175cc = inttoptr i32 %v0_175cc to i32*
  %v2_175cc = load i32, i32* %v1_175cc, align 4
  %v0_175d0 = load i32, i32* %r8.global-to-local, align 4
  %v0_175d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_175d4 = add i32 %v0_175d4, %v2_175cc
  store i32 %v2_175d4, i32* %r1.global-to-local, align 4
  %v4_175d8 = inttoptr i32 %v0_175d0 to i8*
  %v5_175d8 = call i32 @function_17a44(i8* %v4_175d8, i32 %v2_175d4, i32 %v3_175ac, i32 %v4_175c0)
  %v2_175dc = icmp eq i32 %v5_175d8, 0
  br i1 %v2_175dc, label %dec_label_pc_175e4, label %dec_label_pc_17578

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175cc
  %v0_175e4 = load i32, i32* %fp.global-to-local, align 4
  %v2_175e4 = icmp eq i32 %v0_175e4, 0
  br i1 %v2_175e4, label %dec_label_pc_17650, label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_175e4
  %v0_175ec = load i32, i32* %sl.global-to-local, align 4
  %v2_175ec = mul i32 %v0_175ec, 2
  %v2_175f0 = add i32 %v2_175ec, %v0_175e4
  %v3_175f0 = inttoptr i32 %v2_175f0 to i16*
  %v4_175f0 = load i16, i16* %v3_175f0, align 2
  %tmp88 = urem i16 %v4_175f0, -32768
  %v3_175f8 = zext i16 %tmp88 to i32
  %v0_175fc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_175fc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17614

dec_label_pc_17604:                               ; preds = %dec_label_pc_17620, %dec_label_pc_17614
  %v1_17604 = add i32 %v0_17634, 16
  %v2_17604 = inttoptr i32 %v1_17604 to i32*
  %v3_17604 = load i32, i32* %v2_17604, align 4
  %v2_17608 = icmp eq i32 %v3_17604, 0
  %v2_1760c = add i32 %v3_17604, %v0_17634
  store i32 %v2_1760c, i32* %r1.global-to-local, align 4
  br i1 %v2_17608, label %dec_label_pc_17578.loopexit, label %dec_label_pc_17614

dec_label_pc_17614:                               ; preds = %dec_label_pc_17604, %dec_label_pc_175ec
  %v0_17634 = phi i32 [ %v2_1760c, %dec_label_pc_17604 ], [ %v0_175fc, %dec_label_pc_175ec ]
  %v1_17614 = add i32 %v0_17634, 2
  %v2_17614 = inttoptr i32 %v1_17614 to i16*
  %v3_17614 = load i16, i16* %v2_17614, align 2
  %tmp89 = urem i16 %v3_17614, 2
  %v2_17618 = icmp eq i16 %tmp89, 0
  br i1 %v2_17618, label %dec_label_pc_17620, label %dec_label_pc_17604

dec_label_pc_17620:                               ; preds = %dec_label_pc_17614
  %v1_17620 = add i32 %v0_17634, 4
  %v2_17620 = inttoptr i32 %v1_17620 to i16*
  %v3_17620 = load i16, i16* %v2_17620, align 2
  %tmp90 = urem i16 %v3_17620, -32768
  %v9_1762c = icmp eq i16 %tmp90, %tmp88
  br i1 %v9_1762c, label %dec_label_pc_17634, label %dec_label_pc_17604

dec_label_pc_17634:                               ; preds = %dec_label_pc_17620
  %v1_17634 = add i32 %v0_17634, 12
  %v2_17634 = inttoptr i32 %v1_17634 to i32*
  %v3_17634 = load i32, i32* %v2_17634, align 4
  %v2_17638 = add i32 %v3_17634, %v0_17634
  %v3_17638 = inttoptr i32 %v2_17638 to i32*
  %v4_17638 = load i32, i32* %v3_17638, align 4
  %v0_1763c = load i32, i32* %r7.global-to-local, align 4
  %v0_17640 = load i32, i32* %r6.global-to-local, align 4
  %v2_17640 = add i32 %v0_17640, %v4_17638
  store i32 %v2_17640, i32* %r1.global-to-local, align 4
  %v4_17644 = inttoptr i32 %v0_1763c to i8*
  %v5_17644 = call i32 @function_17a44(i8* %v4_17644, i32 %v2_17640, i32 %v3_175f8, i32 %v3_17634)
  %v2_17648 = icmp eq i32 %v5_17644, 0
  br i1 %v2_17648, label %dec_label_pc_17650, label %dec_label_pc_17578

dec_label_pc_17650:                               ; preds = %dec_label_pc_17634, %dec_label_pc_175e4
  %v0_17650 = load i32, i32* %r4.global-to-local, align 4
  %v1_17650 = add i32 %v0_17650, 4
  %v2_17650 = inttoptr i32 %v1_17650 to i32*
  %v3_17650 = load i32, i32* %v2_17650, align 4
  %v0_17654 = load i32, i32* %r5.global-to-local, align 4
  %v2_17654 = add i32 %v0_17654, %v3_17650
  br label %dec_label_pc_174a0

; uselistorder directives
  uselistorder i32 %v3_17634, { 1, 0 }
  uselistorder i32 %v0_17634, { 0, 1, 4, 5, 3, 2 }
  uselistorder i16 %v3_175c0, { 1, 0 }
  uselistorder i32 %v3_175ac, { 1, 0 }
  uselistorder i32 %v2_17508, { 4, 5, 8, 7, 6, 3, 2, 0, 1 }
  uselistorder i32 %v0_17528, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1753448, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1753850, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1754853, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1755455, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17478, { 1, 2, 0 }
  uselistorder i32 %v0_17488, { 1, 0, 2 }
  uselistorder i32 %v0_17480, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_17420, { 1, 0 }
  uselistorder i32 %v0_17420, { 0, 2, 1 }
  uselistorder i32 %v2_173e0, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 10, 9, 2, 11, 12, 13, 14, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 14, { 22, 0, 1, 23, 10, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 16, 2, 17, 18, 19, 20, 3, 21 }
  uselistorder i32 39, { 0, 6, 5, 1, 7, 2, 8, 3, 9, 4 }
  uselistorder i8 16, { 1, 2, 0, 3, 4, 5, 6, 8, 7, 10, 9, 11, 12, 13, 14, 16, 15, 18, 17 }
  uselistorder i32 42, { 3, 2, 0, 4, 1, 5 }
  uselistorder i16 0, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder label %dec_label_pc_17578, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb75, { 5, 3, 0, 2, 6, 4, 1 }
  uselistorder label %dec_label_pc_174a0, { 11, 0, 10, 9, 2, 5, 8, 3, 1, 6, 7, 4 }
  uselistorder label %.thread4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17428, { 1, 0 }
}

define i32 @function_17660(i32* %arg1) local_unnamed_addr {
dec_label_pc_17660:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8388636 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_17660 = load i32, i32* @r6, align 4
  %v12_17660 = load i32, i32* @r7, align 4
  %v15_17660 = load i32, i32* @r8, align 4
  %v18_17660 = load i32, i32* @lr, align 4
  %v2_17664 = load i32, i32* %arg1, align 4
  store i32 %v2_17664, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %tmp42 = icmp ugt i32 %v2_17664, 2147479551
  br i1 %tmp42, label %dec_label_pc_177c4, label %dec_label_pc_17680

dec_label_pc_17680:                               ; preds = %dec_label_pc_17660
  store i32 ptrtoint (i32* @global_var_2363c.656 to i32), i32* @lr, align 4
  %v1_17684 = sub i32 0, %v2_17664
  %v2_17688 = load i32, i32* @global_var_2363c.656, align 4
  store i32 %v2_17688, i32* %r0.global-to-local, align 4
  %v3_17690 = urem i32 %v1_17684, 4096
  %v2_17694 = icmp eq i32 %v2_17688, 0
  %v2_17698 = add i32 %v3_17690, %v2_17664
  br i1 %v2_17694, label %dec_label_pc_17758, label %dec_label_pc_176a0

dec_label_pc_176a0:                               ; preds = %dec_label_pc_17680, %dec_label_pc_17758
  %v2_177a0 = phi i32 [ %v2_17688, %dec_label_pc_17680 ], [ 0, %dec_label_pc_17758 ]
  %v1_176a4 = sub i32 -1, %v2_177a0
  %v3_176a8 = icmp ult i32 %v2_17698, %v1_176a4
  br i1 %v3_176a8, label %dec_label_pc_176b0, label %dec_label_pc_176e0

dec_label_pc_176b0:                               ; preds = %dec_label_pc_176a0
  %v3_176b4 = load i32, i32* @global_var_2383c.532, align 4
  %v1_176b8 = add i32 %v3_176b4, -8388608
  %v2_176b8 = icmp ugt i32 %v3_176b4, 8388607
  %v7_176b8 = icmp eq i32 %v3_176b4, 8388608
  %v2_176bc = xor i1 %v2_176b8, true
  %v3_176bc = or i1 %v7_176b8, %v2_176bc
  br i1 %v3_176bc, label %bb, label %bb31

bb:                                               ; preds = %dec_label_pc_176b0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_176b0, %bb
  %v0_176c812 = phi i32 [ %v2_17664, %dec_label_pc_176b0 ], [ 0, %bb ]
  %v2_176c0 = xor i1 %v7_176b8, true
  %v3_176c0 = and i1 %v2_176b8, %v2_176c0
  br i1 %v3_176c0, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  store i32 %v1_176b8, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v0_176c8 = phi i32 [ %v0_176c812, %bb31 ], [ %v1_176b8, %bb32 ]
  %v2_176c4 = add i32 %v2_177a0, %v2_17698
  store i32 %v2_176c4, i32* %r0.global-to-local, align 4
  %v3_176c8 = icmp ult i32 %v0_176c8, %v2_176c4
  br i1 %v3_176c8, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %v4_176cc = icmp ult i32 %v2_177a0, %v3_176b4
  store i32 %v3_176b4, i32* %stack_var_-28, align 4
  br i1 %v4_176cc, label %.thread3, label %dec_label_pc_17778

bb35:                                             ; preds = %bb33
  store i32 %v3_176b4, i32* %stack_var_-28, align 4
  br label %dec_label_pc_17778

.thread3:                                         ; preds = %bb34
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176e0

dec_label_pc_176e0:                               ; preds = %dec_label_pc_17790, %dec_label_pc_176a0, %.thread3
  store i32 ptrtoint (i32* @global_var_23638.659 to i32), i32* @r6, align 4
  %v2_176e4 = load i32, i32* @global_var_23638.659, align 4
  %v3_176ec = udiv i32 %v2_176e4, 2
  %v6_176f0 = shl i32 4096, %v3_176ec
  %v3_176f4 = icmp uge i32 %v2_17698, %v6_176f0
  %v2_17698.v6_176f0 = select i1 %v3_176f4, i32 %v2_17698, i32 %v6_176f0
  store i32 %v2_17698.v6_176f0, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_17728 = call i32 @function_15114(i32 0, i32 %v2_17698.v6_176f0, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_17728, i32* %r0.global-to-local, align 4
  %v7_1772c = icmp eq i32 %v7_17728, -1
  br i1 %v7_1772c, label %bb38, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_176e0
  %v1_17730 = load i32, i32* @r7, align 4
  %v2_17730 = load i32, i32* @r8, align 4
  %v3_17730 = inttoptr i32 %v2_17730 to i32*
  store i32 %v1_17730, i32* %v3_17730, align 4
  %v3_17734 = load i32, i32* @global_var_23638.659, align 4
  %v2_17738 = add i32 %v3_17734, 1
  %v2_1773c = load i32, i32* @r6, align 4
  %v3_1773c = inttoptr i32 %v2_1773c to i32*
  store i32 %v2_17738, i32* %v3_1773c, align 4
  store i32 %v7_17728, i32* %r2.global-to-local, align 4
  br label %bb39

bb38:                                             ; preds = %dec_label_pc_176e0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb39

bb39:                                             ; preds = %.thread7, %dec_label_pc_177c4, %dec_label_pc_177b0, %bb38
  %v0_17748 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17748, i32* %r0.global-to-local, align 4
  store i32 %v9_17660, i32* @r6, align 4
  store i32 %v12_17660, i32* @r7, align 4
  store i32 %v15_17660, i32* @r8, align 4
  store i32 %v18_17660, i32* @lr, align 4
  ret i32 %v0_17748

dec_label_pc_17758:                               ; preds = %dec_label_pc_17680
  store i32 0, i32* @global_var_2363c.656, align 4
  br label %dec_label_pc_176a0

dec_label_pc_17778:                               ; preds = %bb34, %bb35
  %v2_17778 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1777c = icmp ugt i32* %stack_var_-28, inttoptr (i32 8388607 to i32*)
  %v2_17780 = icmp ne i32* %stack_var_-28, inttoptr (i32 8388608 to i32*)
  %v3_17780 = and i1 %v2_1777c, %v2_17780
  br i1 %v3_17780, label %bb40, label %bb41

bb40:                                             ; preds = %dec_label_pc_17778
  %v6_17780 = ptrtoint i32* %stack_var_-8388636 to i32
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_17778, %bb40
  %storemerge = phi i32 [ %v6_17780, %bb40 ], [ 0, %dec_label_pc_17778 ]
  %v0_17784 = phi i32 [ %v6_17780, %bb40 ], [ 0, %dec_label_pc_17778 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_17784 = icmp ult i32 %v0_17784, %v2_176c4
  store i32 %v2_17778, i32* %stack_var_-28, align 4
  br i1 %v3_17784, label %dec_label_pc_17790, label %dec_label_pc_177b0

dec_label_pc_17790:                               ; preds = %bb41
  %v3_17790 = icmp ult i32 %v2_177a0, %v2_17778
  br i1 %v3_17790, label %dec_label_pc_176e0, label %dec_label_pc_177b0

dec_label_pc_177b0:                               ; preds = %dec_label_pc_17790, %bb41
  store i32 %v2_177a0, i32* %r2.global-to-local, align 4
  store i32 %v2_17698, i32* %arg1, align 4
  %v0_177bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_177bc, i32* @global_var_2363c.656, align 4
  br label %bb39

dec_label_pc_177c4:                               ; preds = %dec_label_pc_17660
  %v0_177c4 = call i32 @function_139e8()
  store i32 %v0_177c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_177d0 = inttoptr i32 %v0_177c4 to i32*
  store i32 12, i32* %v2_177d0, align 4
  br label %bb39

; uselistorder directives
  uselistorder i32 %v7_17728, { 1, 0, 2 }
  uselistorder i1 %v2_176b8, { 1, 0 }
  uselistorder i32 %v3_176b4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_177a0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_17698, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v2_17664, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 3, 0, 2, 5, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 5, 4, 6, 7, 1, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 1, 7, 3, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_15114, { 1, 0 }
  uselistorder i32 34, { 0, 2, 8, 3, 4, 9, 16, 1, 12, 10, 11, 5, 13, 6, 14, 7, 15 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_17778, { 1, 0 }
  uselistorder label %bb39, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_176e0, { 0, 2, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_176a0, { 1, 0 }
}

define i32 @function_177e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_177e4:
  %v0_177f4 = load i32, i32* @r3, align 4
  store i32 %v0_177f4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_17808(i32 %arg1) local_unnamed_addr {
dec_label_pc_17808:
  %v0_17818 = load i32, i32* @r0, align 4
  %v3_17818 = inttoptr i32 %v0_17818 to i16*
  %v4_17818 = call i32 @function_15c0c(i16* %v3_17818, i32 ptrtoint (i32* @global_var_23644.661 to i32), i32 8)
  ret i32 %v4_17818
}

define i32 @function_1782c() local_unnamed_addr {
dec_label_pc_1782c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1782c = load i32, i32* @r4, align 4
  %v6_1782c = load i32, i32* @r5, align 4
  %v12_1782c = load i32, i32* @r7, align 4
  %v15_1782c = load i32, i32* @r8, align 4
  %v18_1782c = load i32, i32* @lr, align 4
  %v0_17830 = load i32, i32* @r0, align 4
  store i32 %v0_17830, i32* @r8, align 4
  %v0_1783c = load i32, i32* @r1, align 4
  store i32 %v0_1783c, i32* @r7, align 4
  %v0_17840 = load i32, i32* @r2, align 4
  store i32 %v0_17840, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_17830, 65
  br i1 %tmp, label %dec_label_pc_1785c, label %dec_label_pc_17848

dec_label_pc_17848:                               ; preds = %dec_label_pc_1782c
  %v0_17848 = call i32 @function_139e8()
  store i32 -1, i32* @r2, align 4
  %v2_17854 = inttoptr i32 %v0_17848 to i32*
  store i32 22, i32* %v2_17854, align 4
  %v0_17998.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_17998

dec_label_pc_1785c:                               ; preds = %dec_label_pc_1782c
  %v2_1785c = icmp eq i32 %v0_1783c, 0
  br i1 %v2_1785c, label %bb, label %dec_label_pc_17868

bb:                                               ; preds = %dec_label_pc_1785c
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_17938

dec_label_pc_17868:                               ; preds = %dec_label_pc_1785c
  %v1_17868 = inttoptr i32 %v0_1783c to i32*
  %v2_17868 = load i32, i32* %v1_17868, align 4
  %v7_1786c = icmp eq i32 %v2_17868, 1
  store i1 %v7_1786c, i1* @cpsr_z, align 1
  %tmp31 = or i32 %v2_17868, 1
  %tmp32 = icmp eq i32 %tmp31, 1
  br i1 %tmp32, label %dec_label_pc_178f8, label %dec_label_pc_17874

dec_label_pc_17874:                               ; preds = %dec_label_pc_17868
  %v1_17874 = add i32 %v0_17830, -1
  %v1_17878 = urem i32 %v1_17874, 32
  %v6_17880 = shl i32 1, %v1_17878
  store i32 %v6_17880, i32* %r5.global-to-local, align 4
  %v3_17888 = udiv i32 %v1_17874, 32
  %v4_1788c = mul nuw nsw i32 %v3_17888, 4
  %v5_1788c = add i32 %v4_1788c, ptrtoint (i32* @global_var_23644.661 to i32)
  store i32 %v5_1788c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17890

dec_label_pc_17890:                               ; preds = %dec_label_pc_17890.dec_label_pc_17890_crit_edge, %dec_label_pc_17874
  %v1_17898 = phi i32 [ %v1_17898.pre, %dec_label_pc_17890.dec_label_pc_17890_crit_edge ], [ %v6_17880, %dec_label_pc_17874 ]
  %v0_17890 = phi i32 [ %v0_17890.pre, %dec_label_pc_17890.dec_label_pc_17890_crit_edge ], [ %v5_1788c, %dec_label_pc_17874 ]
  %v1_17890 = inttoptr i32 %v0_17890 to i32*
  %v2_17890 = load i32, i32* %v1_17890, align 4
  %v2_17898 = or i32 %v2_17890, %v1_17898
  %v4_1789c = call i32 @function_16808(i32 %v2_17890, i32 %v2_17898, i32* %v1_17890)
  %v2_178a0 = icmp eq i32 %v4_1789c, 0
  store i1 %v2_178a0, i1* @cpsr_z, align 1
  br i1 %v2_178a0, label %dec_label_pc_178a8, label %dec_label_pc_17890.dec_label_pc_17890_crit_edge

dec_label_pc_17890.dec_label_pc_17890_crit_edge:  ; preds = %dec_label_pc_17890
  %v0_17890.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17898.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17890

dec_label_pc_178a8:                               ; preds = %dec_label_pc_17890
  %v3_178ac = load i32, i32* @global_var_23830.664, align 4
  %v2_178b0 = icmp eq i32 %v3_178ac, 0
  br i1 %v2_178b0, label %dec_label_pc_178b8, label %dec_label_pc_178f8

dec_label_pc_178b8:                               ; preds = %dec_label_pc_178a8
  store i32 ptrtoint (i32* @global_var_23640.666 to i32), i32* %r4.global-to-local, align 4
  %v2_178bc = load i32, i32* @global_var_23640.666, align 4
  %v2_178c0 = icmp eq i32 %v2_178bc, 0
  br i1 %v2_178c0, label %dec_label_pc_178c8, label %dec_label_pc_178f8

dec_label_pc_178c8:                               ; preds = %dec_label_pc_178b8
  store i32 0, i32* @r3, align 4
  %v2_178e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_178e0, i32* @r2, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v2_178ec = call i32 @function_177e4(i32 175, i32 1)
  %v1_178f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_178f4 = inttoptr i32 %v1_178f4 to i32*
  store i32 1, i32* %v2_178f4, align 4
  br label %dec_label_pc_178f8

dec_label_pc_178f8:                               ; preds = %dec_label_pc_178b8, %dec_label_pc_178a8, %dec_label_pc_17868, %dec_label_pc_178c8
  %v0_178f8 = load i32, i32* @r7, align 4
  %v1_178f8 = add i32 %v0_178f8, 132
  %v2_178f8 = inttoptr i32 %v1_178f8 to i32*
  %v3_178f8 = load i32, i32* %v2_178f8, align 4
  store i32 97316, i32* @r3, align 4
  store i32 97308, i32* @ip, align 4
  %v1_17904 = inttoptr i32 %v0_178f8 to i32*
  %v2_17904 = load i32, i32* %v1_17904, align 4
  store i32 %v2_17904, i32* @r5, align 4
  %v1_17908 = and i32 %v3_178f8, 4
  %v2_17908 = icmp eq i32 %v1_17908, 0
  %v2_1790c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1790c, i32* @r4, align 4
  br i1 %v2_17908, label %bb25, label %bb24

bb24:                                             ; preds = %dec_label_pc_178f8
  store i32 97316, i32* @ip, align 4
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_178f8, %bb24
  %v1_17914 = or i32 %v3_178f8, 67108864
  store i32 %v1_17914, i32* @lr, align 4
  %v1_1791c = add i32 %v0_178f8, 4
  store i32 %v2_17904, i32* %stack_var_-52, align 4
  %v3_17930 = bitcast i32* %stack_var_-40 to i16*
  %v4_17930 = call i32 @function_15c0c(i16* %v3_17930, i32 %v1_1791c, i32 8)
  store i32 %v2_1790c, i32* @r2, align 4
  %v0_17938.pre = load i32, i32* @r6, align 4
  %v0_17944.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_17938

dec_label_pc_17938:                               ; preds = %bb, %bb25
  %v0_17944 = phi i32 [ %v0_17830, %bb ], [ %v0_17944.pre, %bb25 ]
  %v1_1793c = phi i32 [ %v0_17840, %bb ], [ %v0_17938.pre, %bb25 ]
  %v2_17938 = icmp eq i32 %v1_1793c, 0
  %v3_17940 = ptrtoint i32* %stack_var_-72 to i32
  %storemerge = select i1 %v2_17938, i32 0, i32 %v3_17940
  store i32 %storemerge, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  %v2_17954 = call i32 @function_177e4(i32 174, i32 %v0_17944)
  store i32 %v2_17954, i32* @r0, align 4
  %v0_17958 = call i32 @function_13c94()
  store i32 %v0_17958, i32* @r4, align 4
  %v2_1795c = icmp eq i32 %v0_17958, 0
  br i1 %v2_1795c, label %dec_label_pc_17968, label %bb28

bb28:                                             ; preds = %dec_label_pc_17938
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_17998

dec_label_pc_17968:                               ; preds = %dec_label_pc_17938
  %v0_17968 = load i32, i32* @r6, align 4
  %v2_17968 = icmp eq i32 %v0_17968, 0
  br i1 %v2_17968, label %bb29, label %dec_label_pc_17974

bb29:                                             ; preds = %dec_label_pc_17968
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_17998

dec_label_pc_17974:                               ; preds = %dec_label_pc_17968
  %v3_17978 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_17978, i32* @r3, align 4
  %v1_1797c = add i32 %v0_17968, 4
  %v2_17980 = add i32 %v0_17968, 132
  %v3_17980 = inttoptr i32 %v2_17980 to i32*
  %v0_17984 = load i32, i32* @r3, align 4
  %v1_17984 = load i32, i32* @r6, align 4
  %v2_17984 = inttoptr i32 %v1_17984 to i32*
  store i32 %v0_17984, i32* %v2_17984, align 4
  %v0_17988 = load i32, i32* @r5, align 4
  %v2_1798c = ptrtoint i32* %stack_var_-60 to i32
  %v3_17990 = inttoptr i32 %v1_1797c to i16*
  %v4_17990 = call i32 @function_15c0c(i16* %v3_17990, i32 %v2_1798c, i32 %v0_17988)
  %v0_17994 = load i32, i32* @r4, align 4
  store i32 %v0_17994, i32* @r2, align 4
  br label %dec_label_pc_17998

dec_label_pc_17998:                               ; preds = %bb29, %bb28, %dec_label_pc_17848, %dec_label_pc_17974
  %v0_17998 = phi i32 [ -1, %bb28 ], [ 0, %bb29 ], [ %v0_17998.pre, %dec_label_pc_17848 ], [ %v0_17994, %dec_label_pc_17974 ]
  store i32 %v3_1782c, i32* %r4.global-to-local, align 4
  store i32 %v6_1782c, i32* %r5.global-to-local, align 4
  store i32 %v12_1782c, i32* @r7, align 4
  store i32 %v15_1782c, i32* @r8, align 4
  store i32 %v18_1782c, i32* @lr, align 4
  ret i32 %v0_17998

; uselistorder directives
  uselistorder i32 %v0_17968, { 1, 0, 2 }
  uselistorder i32 %v2_17890, { 1, 0 }
  uselistorder i32 %v0_17830, { 1, 2, 0, 3 }
  uselistorder i32 174, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @function_15c0c, { 3, 4, 0, 11, 8, 10, 6, 1, 2, 7, 5, 9 }
  uselistorder i32 (i32, i32)* @function_177e4, { 1, 0 }
  uselistorder label %dec_label_pc_17998, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17938, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_178f8, { 3, 0, 1, 2 }
}

define i32 @function_179bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_179bc:
  store i32 %arg1, i32* @r0, align 4
  %v1_179c0 = add i32 %arg1, -32
  %tmp = icmp ult i32 %v1_179c0, 3
  br i1 %tmp, label %dec_label_pc_179dc, label %dec_label_pc_179d0

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179bc
  %v0_179d8 = call i32 @function_1782c()
  br label %dec_label_pc_179dc

dec_label_pc_179dc:                               ; preds = %dec_label_pc_179bc, %dec_label_pc_179d0
  %v0_179dc = call i32 @function_139e8()
  %v2_179e4 = inttoptr i32 %v0_179dc to i32*
  store i32 22, i32* %v2_179e4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 22, { 1, 2, 4, 3, 0, 18, 5, 20, 6, 7, 14, 8, 15, 9, 16, 10, 17, 19, 11, 12, 13, 21 }
  uselistorder i32 ()* @function_139e8, { 37, 36, 19, 30, 29, 28, 27, 26, 38, 35, 34, 18, 17, 16, 15, 5, 14, 13, 4, 31, 25, 24, 23, 22, 21, 12, 11, 10, 33, 32, 20, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_179dc, { 1, 0 }
}

define i32 @function_179f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_179f8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  store i32 %arg1, i32* @r4, align 4
  %v0_17a04 = call i32 @function_17c2c()
  store i32 %v0_17a04, i32* %r0.global-to-local, align 4
  %v2_17a08 = icmp eq i32 %v0_17a04, 0
  br i1 %v2_17a08, label %dec_label_pc_17a10, label %dec_label_pc_17a38

dec_label_pc_17a10:                               ; preds = %dec_label_pc_179f8
  %v0_17a10 = load i32, i32* @r4, align 4
  store i32 %v0_17a10, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v1_17a1c = add i32 %v0_17a10, 32
  %v2_17a1c = inttoptr i32 %v1_17a1c to i32*
  %v3_17a1c = load i32, i32* %v2_17a1c, align 4
  store i32 %v3_17a1c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_17a1c)
  %v0_17a28 = load i32, i32* %r0.global-to-local, align 4
  %v7_17a28 = icmp eq i32 %v0_17a28, 1
  br i1 %v7_17a28, label %bb, label %dec_label_pc_17a38

bb:                                               ; preds = %dec_label_pc_17a10
  %v4_17a2c = load i8, i8* %stack_var_-9, align 1
  %v5_17a2c = sext i8 %v4_17a2c to i32
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_179f8, %dec_label_pc_17a10, %bb
  %storemerge = phi i32 [ %v5_17a2c, %bb ], [ -1, %dec_label_pc_17a10 ], [ -1, %dec_label_pc_179f8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_17a38, { 2, 1, 0 }
}

define i32 @function_17a44(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17a44:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_17a48 = inttoptr i32 %arg2 to i8*
  %v2_17a48 = load i8, i8* %v1_17a48, align 1
  %v3_17a48 = zext i8 %v2_17a48 to i32
  %v3_17a4c = load i8, i8* %arg1, align 1
  %v4_17a4c = zext i8 %v3_17a4c to i32
  %v9_17a50 = icmp eq i8 %v2_17a48, %v3_17a4c
  br i1 %v9_17a50, label %dec_label_pc_17a6c, label %dec_label_pc_17a74

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a6c
  %v1_17a5c = add i32 %v0_17a5c, 1
  %v2_17a5c = inttoptr i32 %v1_17a5c to i8*
  %v3_17a5c = load i8, i8* %v2_17a5c, align 1
  %v4_17a5c = zext i8 %v3_17a5c to i32
  %v1_17a60 = add i32 %v0_17a60, 1
  %v2_17a60 = inttoptr i32 %v1_17a60 to i8*
  %v3_17a60 = load i8, i8* %v2_17a60, align 1
  %v4_17a60 = zext i8 %v3_17a60 to i32
  %v9_17a64 = icmp eq i8 %v3_17a5c, %v3_17a60
  br i1 %v9_17a64, label %dec_label_pc_17a6c, label %dec_label_pc_17a74

dec_label_pc_17a6c:                               ; preds = %dec_label_pc_17a44, %dec_label_pc_17a5c
  %v0_17a6c = phi i32 [ %v4_17a5c, %dec_label_pc_17a5c ], [ %v3_17a48, %dec_label_pc_17a44 ]
  %v1_17a749 = phi i32 [ %v4_17a5c, %dec_label_pc_17a5c ], [ %v4_17a4c, %dec_label_pc_17a44 ]
  %v0_17a60 = phi i32 [ %v1_17a60, %dec_label_pc_17a5c ], [ %tmp, %dec_label_pc_17a44 ]
  %v0_17a5c = phi i32 [ %v1_17a5c, %dec_label_pc_17a5c ], [ %arg2, %dec_label_pc_17a44 ]
  %v2_17a6c = icmp eq i32 %v0_17a6c, 0
  br i1 %v2_17a6c, label %dec_label_pc_17a74, label %dec_label_pc_17a5c

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a5c, %dec_label_pc_17a6c, %dec_label_pc_17a44
  %v1_17a74 = phi i32 [ %v4_17a4c, %dec_label_pc_17a44 ], [ %v4_17a60, %dec_label_pc_17a5c ], [ %v1_17a749, %dec_label_pc_17a6c ]
  %v0_17a74 = phi i32 [ %v3_17a48, %dec_label_pc_17a44 ], [ %v4_17a5c, %dec_label_pc_17a5c ], [ 0, %dec_label_pc_17a6c ]
  %v2_17a74 = sub nsw i32 %v1_17a74, %v0_17a74
  ret i32 %v2_17a74

; uselistorder directives
  uselistorder i32 %v4_17a5c, { 0, 2, 1 }
  uselistorder i32 %v4_17a4c, { 1, 0 }
  uselistorder i32 %v3_17a48, { 1, 0 }
  uselistorder label %dec_label_pc_17a74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17a6c, { 1, 0 }
}

define i32 @function_17a7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a7c:
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_17aa4 = call i32 @function_16270(i32 162, i32 %arg1, i32 %arg2)
  store i32 %v3_17aa4, i32* @r0, align 4
  %v0_17aa8 = call i32 @function_13c94()
  ret i32 %v0_17aa8

; uselistorder directives
  uselistorder i32 ()* @function_13c94, { 16, 31, 30, 24, 29, 22, 20, 15, 28, 14, 18, 13, 17, 12, 11, 10, 9, 8, 23, 7, 2, 6, 21, 27, 5, 1, 4, 3, 26, 25, 19, 0 }
  uselistorder i32 (i32, i32, i32)* @function_16270, { 6, 10, 8, 5, 4, 3, 2, 1, 9, 7, 0 }
}

define i32 @function_17ab8(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ab8:
  %v2_17abc = load i32, i32* @global_var_23828.534, align 4
  %v3_17ac0 = load i32, i32* @r4, align 4
  %v6_17ac0 = load i32, i32* @r5, align 4
  %v9_17ac0 = load i32, i32* @r6, align 4
  %v15_17ac0 = load i32, i32* @r8, align 4
  %v1_17ac4 = and i32 %v2_17abc, 32768
  %v2_17ac4 = icmp eq i32 %v1_17ac4, 0
  store i32 %arg1, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_16818.630 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23050.629 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2304c.625 to i32), i32* @r4, align 4
  br i1 %v2_17ac4, label %dec_label_pc_17b78, label %dec_label_pc_17ae0

dec_label_pc_17ae0:                               ; preds = %dec_label_pc_17ab8
  %v3_17ae8 = load i32, i32* @global_var_2383c.532, align 4
  store i32 sub (i32 92248, i32 ptrtoint (i32* @global_var_16818.630 to i32)), i32* @global_var_23050.629, align 4
  store i32 sub (i32 92160, i32 ptrtoint (i32* @global_var_167c4.626 to i32)), i32* @global_var_2304c.625, align 4
  %v1_17b683 = inttoptr i32 %v3_17ae8 to i32*
  %v2_17b684 = load i32, i32* %v1_17b683, align 4
  %v2_17b6c6 = icmp eq i32 %v2_17b684, 0
  br i1 %v2_17b6c6, label %dec_label_pc_17b74, label %dec_label_pc_17b0c

dec_label_pc_17b0c:                               ; preds = %dec_label_pc_17ae0, %dec_label_pc_17b64
  %v0_17b14 = phi i32 [ %v1_17b64, %dec_label_pc_17b64 ], [ %v3_17ae8, %dec_label_pc_17ae0 ]
  %v0_17b0c = phi i32 [ %v2_17b68, %dec_label_pc_17b64 ], [ %v2_17b684, %dec_label_pc_17ae0 ]
  %v7_17b0c = icmp eq i32 %v0_17b0c, 15
  br i1 %v7_17b0c, label %dec_label_pc_17b14, label %dec_label_pc_17b64

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17b0c
  %v1_17b14 = add i32 %v0_17b14, 4
  %v2_17b14 = inttoptr i32 %v1_17b14 to i32*
  %v3_17b14 = load i32, i32* %v2_17b14, align 4
  %v1_17b18 = inttoptr i32 %v3_17b14 to i8*
  %v2_17b18 = load i8, i8* %v1_17b18, align 1
  %v7_17b1c = icmp eq i8 %v2_17b18, 118
  br i1 %v7_17b1c, label %dec_label_pc_17b24, label %dec_label_pc_17b74

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17b14
  %v1_17b24 = add i32 %v3_17b14, 1
  %v2_17b24 = inttoptr i32 %v1_17b24 to i8*
  %v3_17b24 = load i8, i8* %v2_17b24, align 1
  %v7_17b28 = icmp eq i8 %v3_17b24, 54
  br i1 %v7_17b28, label %dec_label_pc_17b30, label %dec_label_pc_17b74

dec_label_pc_17b30:                               ; preds = %dec_label_pc_17b24
  %v1_17b30 = add i32 %v3_17b14, 2
  %v2_17b30 = inttoptr i32 %v1_17b30 to i8*
  %v3_17b30 = load i8, i8* %v2_17b30, align 1
  %v4_17b30 = zext i8 %v3_17b30 to i32
  %v1_17b34 = add nsw i32 %v4_17b30, -48
  %tmp = icmp ult i32 %v1_17b34, 10
  br i1 %tmp, label %dec_label_pc_17b74, label %dec_label_pc_17b40

dec_label_pc_17b40:                               ; preds = %dec_label_pc_17b30
  store i32 sub (i32 92212, i32 ptrtoint (i32* @global_var_16818.630 to i32)), i32* @global_var_23050.629, align 4
  store i32 sub (i32 92152, i32 ptrtoint (i32* @global_var_167c4.626 to i32)), i32* @global_var_2304c.625, align 4
  br label %dec_label_pc_17b74

dec_label_pc_17b64:                               ; preds = %dec_label_pc_17b0c
  %v1_17b64 = add i32 %v0_17b14, 8
  %v1_17b68 = inttoptr i32 %v1_17b64 to i32*
  %v2_17b68 = load i32, i32* %v1_17b68, align 4
  %v2_17b6c = icmp eq i32 %v2_17b68, 0
  br i1 %v2_17b6c, label %dec_label_pc_17b68.dec_label_pc_17b74.loopexit_crit_edge, label %dec_label_pc_17b0c

dec_label_pc_17b78:                               ; preds = %dec_label_pc_17ab8
  %v3_17b7c = load i32, i32* inttoptr (i32 -61444 to i32*), align 4
  store i32 sub (i32 -61472, i32 ptrtoint (i32* @global_var_1688c.633 to i32)), i32* @global_var_23054.632, align 4
  store i32 sub (i32 -61536, i32 ptrtoint (i32* @global_var_167c4.626 to i32)), i32* @global_var_2304c.625, align 4
  store i32 sub (i32 -61504, i32 ptrtoint (i32* @global_var_16818.630 to i32)), i32* @global_var_23050.629, align 4
  %v7_17bb0 = icmp sgt i32 %v3_17b7c, 1
  br i1 %v7_17bb0, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_17b78
  call void @llvm.trap()
  unreachable

bb19:                                             ; preds = %dec_label_pc_17b78
  %v7_17bb4 = icmp eq i32 %v3_17b7c, 2
  br i1 %v7_17bb4, label %bb20, label %dec_label_pc_17b74

bb20:                                             ; preds = %bb19
  store i32 sub (i32 92112, i32 ptrtoint (i32* @global_var_167c4.626 to i32)), i32* @global_var_2304c.625, align 4
  br label %dec_label_pc_17b74

dec_label_pc_17b68.dec_label_pc_17b74.loopexit_crit_edge: ; preds = %dec_label_pc_17b64
  br label %dec_label_pc_17b74

dec_label_pc_17b74:                               ; preds = %bb19, %dec_label_pc_17ae0, %dec_label_pc_17b68.dec_label_pc_17b74.loopexit_crit_edge, %dec_label_pc_17b24, %dec_label_pc_17b14, %dec_label_pc_17b30, %dec_label_pc_17b40, %bb20
  store i32 %v3_17ac0, i32* @r4, align 4
  store i32 %v6_17ac0, i32* @r5, align 4
  store i32 %v9_17ac0, i32* @r6, align 4
  store i32 %v15_17ac0, i32* @r8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_17b68, { 1, 0 }
  uselistorder i32 %v1_17b64, { 1, 0 }
  uselistorder i32 %v0_17b14, { 1, 0 }
  uselistorder void ()* @llvm.trap, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 10, { 0, 6, 5, 15, 71, 8, 72, 1, 7, 78, 2, 16, 39, 73, 17, 40, 41, 30, 31, 10, 74, 32, 33, 18, 4, 34, 75, 19, 77, 76, 42, 43, 20, 21, 22, 12, 23, 13, 44, 45, 3, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 24, 57, 58, 59, 25, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 11, 70, 26, 79, 9, 80, 81, 28, 82, 35, 36, 14, 83, 37, 38, 27, 84, 29 }
  uselistorder i32* @global_var_2304c.625, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* @global_var_23050.629, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_17b74, { 2, 7, 0, 6, 5, 3, 4, 1 }
  uselistorder label %dec_label_pc_17b0c, { 1, 0 }
}

define i32 @function_17c1c() local_unnamed_addr {
dec_label_pc_17c1c:
  %v0_17c28 = load i32, i32* @r0, align 4
  ret i32 %v0_17c28
}

define i32 @function_17c2c() local_unnamed_addr {
dec_label_pc_17c2c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17c2c = load i32, i32* @r4, align 4
  store i32 %v3_17c2c, i32* %stack_var_-8, align 4
  %v0_17c30 = load i32, i32* @r0, align 4
  %v1_17c30 = add i32 %v0_17c30, 74
  %v2_17c30 = inttoptr i32 %v1_17c30 to i8*
  %v3_17c30 = load i8, i8* %v2_17c30, align 1
  %v4_17c30 = zext i8 %v3_17c30 to i32
  store i32 %v4_17c30, i32* @ip, align 4
  %v1_17c34 = add i32 %v0_17c30, 20
  %v2_17c34 = inttoptr i32 %v1_17c34 to i32*
  %v3_17c34 = load i32, i32* %v2_17c34, align 4
  %v1_17c38 = add i32 %v0_17c30, 44
  %v2_17c38 = inttoptr i32 %v1_17c38 to i32*
  %v3_17c38 = load i32, i32* %v2_17c38, align 4
  %v1_17c3c = add nsw i32 %v4_17c30, -1
  %v2_17c40 = or i32 %v1_17c3c, %v4_17c30
  store i32 %v2_17c40, i32* %r3.global-to-local, align 4
  %v3_17c44 = icmp uge i32 %v3_17c34, %v3_17c38
  store i1 %v3_17c44, i1* %cpsr_c.global-to-local, align 1
  %v9_17c44 = icmp eq i32 %v3_17c34, %v3_17c38
  store i1 %v9_17c44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17c30, i32* %r4.global-to-local, align 4
  %v1_17c4c = trunc i32 %v2_17c40 to i8
  store i8 %v1_17c4c, i8* %v2_17c30, align 1
  %v0_17c50 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17c50 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_17c50 = xor i1 %v1_17c50, true
  %v3_17c50 = and i1 %v0_17c50, %v2_17c50
  br i1 %v3_17c50, label %bb, label %dec_label_pc_17c2c..thread8_crit_edge

dec_label_pc_17c2c..thread8_crit_edge:            ; preds = %dec_label_pc_17c2c
  %v0_17c60.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_17c2c
  %v4_17c58 = load i32, i32* @r0, align 4
  %v5_17c58 = add i32 %v4_17c58, 36
  %v6_17c58 = inttoptr i32 %v5_17c58 to i32*
  %v7_17c58 = load i32, i32* %v6_17c58, align 4
  store i32 %v7_17c58, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17c2c..thread8_crit_edge, %bb
  %v0_17c60 = phi i32 [ %v0_17c60.pre, %dec_label_pc_17c2c..thread8_crit_edge ], [ %v7_17c58, %bb ]
  call void @__pseudo_cond_branch(i1 %v3_17c50, i32 %v0_17c60)
  %v0_17c64 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c64 = inttoptr i32 %v0_17c64 to i32*
  %v2_17c64 = load i32, i32* %v1_17c64, align 4
  store i32 %v2_17c64, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_17c6c = and i32 %v2_17c64, 4
  %v2_17c6c = icmp eq i32 %v1_17c6c, 0
  store i1 %v2_17c6c, i1* %cpsr_z.global-to-local, align 1
  %v2_17c70 = add i32 %v0_17c64, 20
  %v3_17c70 = inttoptr i32 %v2_17c70 to i32*
  store i32 0, i32* %v3_17c70, align 4
  %v0_17c74 = load i32, i32* %r3.global-to-local, align 4
  %v1_17c74 = load i32, i32* %r4.global-to-local, align 4
  %v2_17c74 = add i32 %v1_17c74, 16
  %v3_17c74 = inttoptr i32 %v2_17c74 to i32*
  store i32 %v0_17c74, i32* %v3_17c74, align 4
  %v0_17c78 = load i32, i32* %r3.global-to-local, align 4
  %v1_17c78 = load i32, i32* %r4.global-to-local, align 4
  %v2_17c78 = add i32 %v1_17c78, 28
  %v3_17c78 = inttoptr i32 %v2_17c78 to i32*
  store i32 %v0_17c78, i32* %v3_17c78, align 4
  br i1 %v2_17c6c, label %dec_label_pc_17c8c, label %.thread1

.thread1:                                         ; preds = %.thread8
  %v1_17c7c = load i32, i32* @r2, align 4
  %v2_17c7c = or i32 %v1_17c7c, 32
  store i32 %v2_17c7c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17c84 = load i32, i32* %r4.global-to-local, align 4
  %v3_17c84 = inttoptr i32 %v2_17c84 to i32*
  store i32 %v2_17c7c, i32* %v3_17c84, align 4
  br label %bb12

dec_label_pc_17c8c:                               ; preds = %.thread8
  %v0_17c8c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c8c = add i32 %v0_17c8c, 44
  %v1_17c90 = inttoptr i32 %v1_17c8c to i32*
  %v2_17c90 = load i32, i32* %v1_17c90, align 4
  %v3_17c90 = add i32 %v0_17c8c, 48
  %v4_17c90 = inttoptr i32 %v3_17c90 to i32*
  %v5_17c90 = load i32, i32* %v4_17c90, align 4
  %v2_17c94 = add i32 %v5_17c90, %v2_17c90
  store i32 %v2_17c94, i32* %r3.global-to-local, align 4
  %v0_17c98 = load i32, i32* @r2, align 4
  %v1_17c98 = and i32 %v0_17c98, 16
  store i32 %v1_17c98, i32* %r0.global-to-local, align 4
  %v2_17c98 = icmp eq i32 %v1_17c98, 0
  store i1 %v2_17c98, i1* %cpsr_z.global-to-local, align 1
  %v2_17c9c = add i32 %v0_17c8c, 4
  %v3_17c9c = inttoptr i32 %v2_17c9c to i32*
  store i32 %v2_17c94, i32* %v3_17c9c, align 4
  %v0_17ca0 = load i32, i32* %r3.global-to-local, align 4
  %v1_17ca0 = load i32, i32* %r4.global-to-local, align 4
  %v2_17ca0 = add i32 %v1_17ca0, 8
  %v3_17ca0 = inttoptr i32 %v2_17ca0 to i32*
  store i32 %v0_17ca0, i32* %v3_17ca0, align 4
  br i1 %v2_17c98, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_17c8c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %.thread1, %dec_label_pc_17c8c, %bb11
  %v2_17ca8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17ca8, i32* @r4, align 4
  %v1_17cac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17cac

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 48, { 0, 7, 11, 1, 5, 6, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 44, { 7, 8, 9, 3, 4, 5, 6, 1, 10, 0, 11, 2, 12 }
  uselistorder label %bb12, { 2, 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_17cb0() local_unnamed_addr {
dec_label_pc_17cb0:
  %v0_17cb8 = call i32 @function_17d44()
  ret i32 %v0_17cb8
}

define i32 @function_17cc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_17cc8:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_17ccc = icmp eq i32 %arg1, 0
  store i1 %v2_17ccc, i1* @cpsr_z, align 1
  br i1 %v2_17ccc, label %dec_label_pc_17d38, label %dec_label_pc_17cd8

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17cc8
  %v1_17cd8 = add i32 %arg1, 76
  %v2_17cd8 = inttoptr i32 %v1_17cd8 to i32*
  %v3_17cd8 = load i32, i32* %v2_17cd8, align 4
  %v3_17ce0 = icmp sgt i32 %v3_17cd8, -1
  call void @__pseudo_cond_branch(i1 %v3_17ce0, i32 ptrtoint (i32* @global_var_17e50.686 to i32))
  %v0_17ce4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17ce4 = add i32 %v0_17ce4, 20
  %v2_17ce4 = inttoptr i32 %v1_17ce4 to i32*
  %v3_17ce4 = load i32, i32* %v2_17ce4, align 4
  %v1_17ce8 = add i32 %v0_17ce4, 28
  %v2_17ce8 = inttoptr i32 %v1_17ce8 to i32*
  %v3_17ce8 = load i32, i32* %v2_17ce8, align 4
  %tmp = icmp ugt i32 %v3_17ce4, %v3_17ce8
  br i1 %tmp, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_17cd8
  store i32 %v0_17ce4, i32* %r0.global-to-local, align 4
  %v5_17cfc = add i32 %v0_17ce4, 36
  %v6_17cfc = inttoptr i32 %v5_17cfc to i32*
  %v7_17cfc = load i32, i32* %v6_17cfc, align 4
  store i32 %v7_17cfc, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17cd8, %bb
  %.04 = phi i32 [ %v7_17cfc, %bb ], [ undef, %dec_label_pc_17cd8 ]
  call void @__pseudo_cond_branch(i1 %tmp, i32 %.04)
  %v0_17d08 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d08 = add i32 %v0_17d08, 4
  %v2_17d08 = inttoptr i32 %v1_17d08 to i32*
  %v3_17d08 = load i32, i32* %v2_17d08, align 4
  %v1_17d0c = add i32 %v0_17d08, 8
  %v2_17d0c = inttoptr i32 %v1_17d0c to i32*
  %v3_17d0c = load i32, i32* %v2_17d0c, align 4
  %v3_17d10 = icmp ult i32 %v3_17d08, %v3_17d0c
  %v9_17d10 = icmp eq i32 %v3_17d08, %v3_17d0c
  store i1 %v9_17d10, i1* @cpsr_z, align 1
  br i1 %v3_17d10, label %dec_label_pc_17d18, label %dec_label_pc_17d38

dec_label_pc_17d18:                               ; preds = %.thread6
  store i32 %v0_17d08, i32* %r0.global-to-local, align 4
  %v1_17d2c = add i32 %v0_17d08, 40
  %v2_17d2c = inttoptr i32 %v1_17d2c to i32*
  %v3_17d2c = load i32, i32* %v2_17d2c, align 4
  store i32 %v3_17d2c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_17d2c)
  br label %dec_label_pc_17d38

dec_label_pc_17d38:                               ; preds = %.thread6, %dec_label_pc_17cc8, %dec_label_pc_17d18
  %v1_17d40 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17d40

; uselistorder directives
  uselistorder i1 %tmp, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 40, { 10, 24, 3, 25, 11, 4, 12, 5, 13, 14, 2, 15, 16, 0, 17, 19, 18, 20, 1, 21, 23, 22, 7, 26, 8, 27, 6, 28, 9, 29 }
  uselistorder i32 28, { 10, 26, 29, 11, 30, 31, 43, 44, 8, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 9, 28, 27, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 20, { 22, 88, 89, 113, 114, 115, 116, 105, 106, 107, 108, 109, 110, 111, 112, 3, 26, 4, 23, 5, 24, 6, 25, 90, 91, 7, 92, 8, 93, 0, 94, 21, 27, 28, 9, 29, 30, 31, 32, 33, 34, 10, 35, 36, 38, 37, 39, 40, 11, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 12, 52, 53, 54, 56, 55, 57, 58, 59, 13, 60, 61, 62, 63, 65, 64, 14, 66, 67, 15, 68, 69, 70, 71, 16, 72, 73, 17, 74, 75, 76, 77, 78, 1, 79, 18, 80, 81, 82, 83, 2, 84, 19, 85, 86, 87, 95, 96, 97, 98, 99, 100, 101, 102, 103, 20, 104 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17d38, { 2, 0, 1 }
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_17d44() local_unnamed_addr {
dec_label_pc_17d44:
  %tmp = load i32, i32* @r0, align 4
  ret i32 %tmp
}

define i32 @function_17d44.1(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d44:
  %stack_var_-8 = alloca i32, align 4
  %v3_17d44 = load i32, i32* @r4, align 4
  store i32 %v3_17d44, i32* %stack_var_-8, align 4
  %v6_17d44 = load i32, i32* @lr, align 4
  %v0_17d48 = call i32 @function_17da8()
  %storemerge.in1 = inttoptr i32 %v0_17d48 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* @r4, align 4
  %v2_17d5c4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_17d5c4, label %dec_label_pc_17d64, label %dec_label_pc_17d54

dec_label_pc_17d54:                               ; preds = %dec_label_pc_17d44, %dec_label_pc_17d54
  %storemerge5 = phi i32 [ %storemerge, %dec_label_pc_17d54 ], [ %storemerge2, %dec_label_pc_17d44 ]
  %v1_17d54 = call i32 @function_17cc8(i32 %storemerge5)
  %v0_17d58 = load i32, i32* @r4, align 4
  %v1_17d58 = add i32 %v0_17d58, 56
  %storemerge.in = inttoptr i32 %v1_17d58 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_17d5c = icmp eq i32 %storemerge, 0
  br i1 %v2_17d5c, label %dec_label_pc_17d64, label %dec_label_pc_17d54

dec_label_pc_17d64:                               ; preds = %dec_label_pc_17d54, %dec_label_pc_17d44
  %v2_17d68 = load i32, i32* @global_var_2364c.688, align 4
  %v1_17d6c = call i32 @function_17cc8(i32 %v2_17d68)
  %v2_17d74 = load i32, i32* @global_var_2364c.688, align 4
  %v2_17d78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17d78, i32* @r4, align 4
  store i32 %v6_17d44, i32* @lr, align 4
  %v1_17d7c = call i32 @function_17cc8(i32 %v2_17d74)
  %v0_17d80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d80, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17d64
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17d64, %bb
  %v2_17d94 = call i32 @function_161a0(i32* nonnull @global_var_23654.691)
  ret i32 %v2_17d94

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 56, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_17cc8, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17d54, { 1, 0 }
}

define i32 @function_17da8() local_unnamed_addr {
dec_label_pc_17da8:
  %v2_17db4 = call i32 @function_1620c(i32* nonnull @global_var_23654.691)
  ret i32 ptrtoint (i32* @global_var_23650.694 to i32)
}

define i32 @function_17dd0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17dd0:
  ret i32 %arg2
}

define i32 @function_17df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_17df0:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17df0 = load i32, i32* @r4, align 4
  store i32 %v3_17df0, i32* %stack_var_-8, align 4
  %v1_17df4 = add i32 %arg1, 76
  store i32 %v1_17df4, i32* %r4.global-to-local, align 4
  %v0_17df8 = call i32 @function_167b4()
  store i32 %v0_17df8, i32* @r0, align 4
  %v2_17e00 = add i32 %v0_17df8, 76
  %v3_17e00 = inttoptr i32 %v2_17e00 to i32*
  store i32 0, i32* %v3_17e00, align 4
  %v0_17e04 = call i32 @function_167b4()
  %v1_17e08 = add i32 %v0_17e04, 80
  %v2_17e08 = inttoptr i32 %v1_17e08 to i32*
  %v3_17e08 = load i32, i32* %v2_17e08, align 4
  %v2_17e0c = icmp eq i32 %v3_17e08, 0
  br i1 %v2_17e0c, label %dec_label_pc_17e48, label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17df0
  %v0_17e18 = load i32, i32* %r4.global-to-local, align 4
  %v4_17e24 = call i32 @function_17dd0(i32 240, i32 %v0_17e18, i32 129, i32 1)
  %v4_17e2c = icmp eq i32 %v4_17e24, -38
  br i1 %v4_17e2c, label %dec_label_pc_17e30, label %dec_label_pc_17e48

dec_label_pc_17e30:                               ; preds = %dec_label_pc_17e14
  %v0_17e34 = load i32, i32* %r4.global-to-local, align 4
  %v2_17e40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17e40, i32* %r4.global-to-local, align 4
  %v4_17e44 = call i32 @function_17dd0(i32 240, i32 %v0_17e34, i32 1, i32 1)
  br label %dec_label_pc_17e48

dec_label_pc_17e48:                               ; preds = %dec_label_pc_17e14, %dec_label_pc_17df0, %dec_label_pc_17e30
  %v1_17e4c = phi i32 [ %v4_17e24, %dec_label_pc_17e14 ], [ %v0_17e04, %dec_label_pc_17df0 ], [ %v4_17e44, %dec_label_pc_17e30 ]
  %v2_17e48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17e48, i32* %r4.global-to-local, align 4
  ret i32 %v1_17e4c

; uselistorder directives
  uselistorder i32 -38, { 9, 10, 11, 12, 17, 6, 14, 5, 13, 8, 7, 16, 15, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_17dd0, { 1, 0 }
  uselistorder i32 129, { 0, 1, 2, 3, 4, 13, 5, 6, 9, 10, 7, 8, 11, 12 }
  uselistorder i32 240, { 2, 4, 0, 5, 1, 3, 6, 12, 13, 20, 16, 17, 14, 15, 18, 19, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_167b4, { 28, 27, 24, 26, 25, 23, 22, 21, 20, 3, 2, 1, 0, 19, 18, 17, 16, 11, 10, 9, 8, 15, 14, 13, 12, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_17e48, { 2, 0, 1 }
}

define i32 @function_17e50(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e50:
  %v0_17e58 = call i32 @function_1687c()
  %v1_17e5c = add i32 %v0_17e58, -176
  %v2_17e5c = inttoptr i32 %v1_17e5c to i32*
  %v3_17e5c = load i32, i32* %v2_17e5c, align 4
  store i32 %v3_17e5c, i32* @r5, align 4
  %v1_17e60 = add i32 %arg1, 76
  %v2_17e60 = inttoptr i32 %v1_17e60 to i32*
  %v3_17e60 = load i32, i32* %v2_17e60, align 4
  %v9_17e64 = icmp eq i32 %v3_17e60, %v3_17e5c
  store i1 %v9_17e64, i1* @cpsr_z, align 1
  br i1 %v9_17e64, label %dec_label_pc_17eb4, label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e50
  %v1_17e70 = add i32 %arg1, 80
  store i32 %v1_17e70, i32* @r6, align 4
  store i32 %v1_17e60, i32* @r4, align 4
  %v4_17e8411 = call i32 @function_16808(i32 0, i32 %v3_17e5c, i32* %v2_17e60)
  %v2_17e8813 = icmp eq i32 %v4_17e8411, 0
  br i1 %v2_17e8813, label %dec_label_pc_17eb4, label %dec_label_pc_17e94

dec_label_pc_17e94:                               ; preds = %dec_label_pc_17e70, %dec_label_pc_17e78.backedge
  %v0_17e94 = load i32, i32* @r4, align 4
  %v1_17e94 = inttoptr i32 %v0_17e94 to i32*
  %v2_17e94 = load i32, i32* %v1_17e94, align 4
  store i32 %v2_17e94, i32* @r2, align 4
  %v2_17e98 = icmp eq i32 %v2_17e94, 0
  store i1 %v2_17e98, i1* @cpsr_z, align 1
  br i1 %v2_17e98, label %dec_label_pc_17e78.backedge, label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e94
  %v0_17ea4 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v5_17eac = call i32 @function_16334(i32* %v1_17e94, i32 %v0_17ea4)
  %v0_17e7c.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e78.backedge

dec_label_pc_17e78.backedge:                      ; preds = %dec_label_pc_17ea0, %dec_label_pc_17e94
  %v0_17e7c.pre = phi i32 [ %v0_17e7c.pre.pre, %dec_label_pc_17ea0 ], [ %v0_17e94, %dec_label_pc_17e94 ]
  %v0_17e78.pre = load i32, i32* @r5, align 4
  %v3_17e84 = inttoptr i32 %v0_17e7c.pre to i32*
  %v4_17e84 = call i32 @function_16808(i32 0, i32 %v0_17e78.pre, i32* %v3_17e84)
  %v2_17e88 = icmp eq i32 %v4_17e84, 0
  br i1 %v2_17e88, label %dec_label_pc_17eb4, label %dec_label_pc_17e94

dec_label_pc_17eb4:                               ; preds = %dec_label_pc_17e70, %dec_label_pc_17e78.backedge, %dec_label_pc_17e50
  %storemerge = phi i32 [ 0, %dec_label_pc_17e50 ], [ 1, %dec_label_pc_17e78.backedge ], [ 1, %dec_label_pc_17e70 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32)* @function_16334, { 0, 1, 5, 6, 2, 3, 4, 7 }
  uselistorder i32 (i32, i32, i32*)* @function_16808, { 3, 0, 5, 6, 1, 7, 4, 8, 9, 17, 18, 19, 10, 11, 12, 13, 2, 14, 15, 16, 20, 21, 22 }
  uselistorder i32 ()* @function_1687c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17eb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e94, { 1, 0 }
}

define i32 @function_17ebc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17ebc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_17ebc = sub i32 0, %arg1
  store i32 %v1_17ebc, i32* %r0.global-to-local, align 4
  %v2_17ec8 = mul i32 %arg1, 2
  store i32 %v2_17ec8, i32* %r2.global-to-local, align 4
  %v4_17ec8 = icmp eq i32 %v2_17ec8, 0
  br i1 %v4_17ec8, label %dec_label_pc_17ebc.dec_label_pc_18000_crit_edge, label %bb

dec_label_pc_17ebc.dec_label_pc_18000_crit_edge:  ; preds = %dec_label_pc_17ebc
  %.pre = mul i32 %arg2, 2
  br label %dec_label_pc_18000

bb:                                               ; preds = %dec_label_pc_17ebc
  %v3_17ecc = mul i32 %arg2, 2
  store i32 %v3_17ecc, i32* %r3.global-to-local, align 4
  %v5_17ecc = icmp eq i32 %v3_17ecc, 0
  br i1 %v5_17ecc, label %dec_label_pc_18000, label %bb78

bb78:                                             ; preds = %bb
  %v5_17ed0 = icmp eq i32 %v3_17ecc, %v2_17ec8
  br i1 %v5_17ed0, label %dec_label_pc_18000, label %bb79

bb79:                                             ; preds = %bb78
  %v2_17ec8.off = add i32 %v2_17ec8, 33554431
  %tmp110 = icmp ult i32 %v2_17ec8.off, 16777216
  br i1 %tmp110, label %dec_label_pc_18000, label %bb80

bb80:                                             ; preds = %bb79
  %v3_17ecc.off = add i32 %v3_17ecc, 33554431
  %tmp111 = icmp ult i32 %v3_17ecc.off, 16777216
  br i1 %tmp111, label %dec_label_pc_18000, label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %bb80
  %tmp = udiv i32 %arg1, 8388608
  %v3_17ee0 = urem i32 %tmp, 256
  store i32 %v3_17ee0, i32* %r2.global-to-local, align 4
  %tmp106 = udiv i32 %arg2, 8388608
  %v4_17ee4 = urem i32 %tmp106, 256
  %v5_17ee4 = sub nsw i32 %v4_17ee4, %v3_17ee0
  store i32 %v5_17ee4, i32* %r3.global-to-local, align 4
  %v7_17ee8 = icmp ugt i32 %v4_17ee4, %v3_17ee0
  br i1 %v7_17ee8, label %bb81, label %.thread11

bb81:                                             ; preds = %dec_label_pc_17ee0
  store i32 %v4_17ee4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v1_17ebc, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_17ee0, %bb81
  %v5_17ef8 = icmp ult i32 %v4_17ee4, %v3_17ee0
  br i1 %v5_17ef8, label %bb82, label %bb83

bb82:                                             ; preds = %.thread11
  %v7_17ef8 = sub nsw i32 0, %v5_17ee4
  store i32 %v7_17ef8, i32* %r3.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %.thread11, %bb82
  %v0_17efc = phi i32 [ %v5_17ee4, %.thread11 ], [ %v7_17ef8, %bb82 ]
  %v0_17f00 = load i32, i32* @lr, align 4
  %tmp112 = icmp ugt i32 %v0_17efc, 25
  call void @__pseudo_cond_branch(i1 %tmp112, i32 %v0_17f00)
  %v0_17f04 = load i32, i32* %r0.global-to-local, align 4
  %v3_17f04 = icmp sgt i32 %v0_17f04, -1
  %v1_17f08 = urem i32 %v0_17f04, 8388608
  %v1_17f0c = or i32 %v1_17f08, 8388608
  %v2_17f10 = sub nsw i32 0, %v1_17f0c
  %v1_17f0c.v2_17f10 = select i1 %v3_17f04, i32 %v1_17f0c, i32 %v2_17f10
  store i32 %v1_17f0c.v2_17f10, i32* %r0.global-to-local, align 4
  %v0_17f14 = load i32, i32* %r1.global-to-local, align 4
  %v3_17f14 = icmp sgt i32 %v0_17f14, -1
  %v1_17f18 = urem i32 %v0_17f14, 8388608
  %v1_17f1c = or i32 %v1_17f18, 8388608
  %v2_17f20 = sub nsw i32 0, %v1_17f1c
  %storemerge1 = select i1 %v3_17f14, i32 %v1_17f1c, i32 %v2_17f20
  store i32 %storemerge1, i32* %r1.global-to-local, align 4
  %v0_17f24 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f24 = load i32, i32* %r3.global-to-local, align 4
  %v4_17f24 = icmp eq i32 %v1_17f24, %v0_17f24
  br i1 %v4_17f24, label %dec_label_pc_17fe8, label %dec_label_pc_17f2c

dec_label_pc_17f2c:                               ; preds = %.thread16, %.thread17, %bb83
  %v0_17f34 = phi i32 [ %v2_17ff8, %.thread17 ], [ %v1_17f24, %.thread16 ], [ %v1_17f24, %bb83 ]
  %v0_17f38 = phi i32 [ %v1_17fec, %.thread17 ], [ %v1_17fec, %.thread16 ], [ %storemerge1, %bb83 ]
  %v0_17f30 = phi i32 [ %v1_17f0c.v2_17f10, %.thread17 ], [ %v2_17ff0, %.thread16 ], [ %v1_17f0c.v2_17f10, %bb83 ]
  %v0_17f2c = phi i32 [ %v0_17f24, %.thread17 ], [ 1, %.thread16 ], [ %v0_17f24, %bb83 ]
  %v1_17f2c = add i32 %v0_17f2c, -1
  store i32 %v1_17f2c, i32* %r2.global-to-local, align 4
  %v7_17f30 = ashr i32 %v0_17f38, %v0_17f34
  %v8_17f30 = add i32 %v7_17f30, %v0_17f30
  store i32 %v8_17f30, i32* %r0.global-to-local, align 4
  %v14_17f30 = icmp slt i32 %v8_17f30, 0
  %v1_17f34 = sub i32 32, %v0_17f34
  %v6_17f38 = shl i32 %v0_17f38, %v1_17f34
  store i32 %v6_17f38, i32* %r1.global-to-local, align 4
  %v1_17f3c = and i32 %v8_17f30, -2147483648
  store i32 %v1_17f3c, i32* %r3.global-to-local, align 4
  br i1 %v14_17f30, label %dec_label_pc_17f44, label %dec_label_pc_17f4c

dec_label_pc_17f44:                               ; preds = %dec_label_pc_17f2c
  %v1_17f44 = sub i32 0, %v6_17f38
  store i32 %v1_17f44, i32* %r1.global-to-local, align 4
  %v2_17f44 = icmp eq i32 %v6_17f38, 0
  %v2_17f48 = icmp eq i1 %v2_17f44, false
  %v5_17f48 = sext i1 %v2_17f48 to i32
  %v6_17f48 = sub i32 %v5_17f48, %v8_17f30
  store i32 %v6_17f48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f4c

dec_label_pc_17f4c:                               ; preds = %dec_label_pc_17f2c, %dec_label_pc_17f44
  %v0_17f84 = phi i32 [ %v6_17f38, %dec_label_pc_17f2c ], [ %v1_17f44, %dec_label_pc_17f44 ]
  %v0_17f88 = phi i32 [ %v8_17f30, %dec_label_pc_17f2c ], [ %v6_17f48, %dec_label_pc_17f44 ]
  %v3_17f50 = icmp ult i32 %v0_17f88, 8388606
  br i1 %v3_17f50, label %dec_label_pc_17f84, label %dec_label_pc_17f54

dec_label_pc_17f54:                               ; preds = %dec_label_pc_17f4c
  %v3_17f58 = icmp ult i32 %v0_17f88, 16777214
  br i1 %v3_17f58, label %dec_label_pc_17f70, label %dec_label_pc_17f5c

dec_label_pc_17f5c:                               ; preds = %dec_label_pc_17f54
  %v1_17f5c = urem i32 %v0_17f88, 2
  %v2_17f5c = icmp ne i32 %v1_17f5c, 0
  %v3_17f5c = udiv i32 %v0_17f88, 2
  store i32 %v3_17f5c, i32* %r0.global-to-local, align 4
  %v3_17f60 = zext i1 %v2_17f5c to i32
  %v6_17f60 = zext i32 %v0_17f84 to i64
  %v7_17f60 = sub i32 33, %v0_17f84
  %v8_17f60 = zext i32 %v7_17f60 to i64
  %v9_17f60 = shl i64 %v6_17f60, %v8_17f60
  %v10_17f60 = sub i32 32, %v0_17f84
  %v11_17f60 = shl i32 %v3_17f60, %v10_17f60
  %v12_17f60 = zext i32 %v11_17f60 to i64
  %v14_17f60 = or i64 %v12_17f60, %v9_17f60
  %v15_17f60 = trunc i64 %v14_17f60 to i32
  store i32 %v15_17f60, i32* %r1.global-to-local, align 4
  store i32 %v0_17f2c, i32* %r2.global-to-local, align 4
  %v2_17f68 = icmp ugt i32 %v0_17f2c, 253
  br i1 %v2_17f68, label %dec_label_pc_18054, label %dec_label_pc_17f70

dec_label_pc_17f70:                               ; preds = %dec_label_pc_17f84, %dec_label_pc_17f5c, %dec_label_pc_17f54
  %v1_17f74 = phi i32 [ %v1_17f90, %dec_label_pc_17f84 ], [ %v0_17f2c, %dec_label_pc_17f5c ], [ %v1_17f2c, %dec_label_pc_17f54 ]
  %v0_17f74 = phi i32 [ %v5_17f88, %dec_label_pc_17f84 ], [ %v3_17f5c, %dec_label_pc_17f5c ], [ %v0_17f88, %dec_label_pc_17f54 ]
  %v2_17f74 = and i32 %v1_17f74, 512
  %v3_17f74 = icmp ne i32 %v2_17f74, 0
  %v4_17f74 = mul i32 %v1_17f74, 8388608
  %v6_17f74 = add i32 %v4_17f74, %v0_17f74
  %v7_17f74 = zext i1 %v3_17f74 to i32
  %v8_17f74 = add i32 %v7_17f74, %v6_17f74
  %v22_17f74 = icmp eq i32 %v8_17f74, 0
  br i1 %v22_17f74, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_17f70
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_17f70, %bb84
  %v0_17f7c = phi i32 [ 0, %bb84 ], [ %v8_17f74, %dec_label_pc_17f70 ]
  %v2_17f7c = or i32 %v0_17f7c, %v1_17f3c
  store i32 %v2_17f7c, i32* %r0.global-to-local, align 4
  ret i32 %v2_17f7c

dec_label_pc_17f84:                               ; preds = %dec_label_pc_17f4c
  %v1_17f84 = icmp slt i32 %v0_17f84, 0
  %v2_17f84 = mul i32 %v0_17f84, 2
  store i32 %v2_17f84, i32* %r1.global-to-local, align 4
  %v3_17f88 = mul i32 %v0_17f88, 2
  %v4_17f88 = zext i1 %v1_17f84 to i32
  %v5_17f88 = or i32 %v4_17f88, %v3_17f88
  store i32 %v5_17f88, i32* %r0.global-to-local, align 4
  %v1_17f8c = and i32 %v3_17f88, 8388608
  %v2_17f8c = icmp eq i32 %v1_17f8c, 0
  %v1_17f90 = add i32 %v0_17f2c, -2
  store i32 %v1_17f90, i32* %r2.global-to-local, align 4
  br i1 %v2_17f8c, label %dec_label_pc_17f98, label %dec_label_pc_17f70

dec_label_pc_17f98:                               ; preds = %dec_label_pc_17f84
  %tmp86 = udiv i32 %v0_17f88, 2048
  %v3_17f98 = urem i32 %tmp86, 1048576
  %v4_17f98 = icmp eq i32 %v3_17f98, 0
  br i1 %v4_17f98, label %bb87, label %.thread12

bb87:                                             ; preds = %dec_label_pc_17f98
  %v4_17f9c = mul i32 %v5_17f88, 4096
  store i32 %v4_17f9c, i32* %r0.global-to-local, align 4
  %v2_17fa0 = add i32 %v0_17f2c, -14
  store i32 %v2_17fa0, i32* %r2.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_17f98, %bb87
  %v1_17fac = phi i32 [ %v1_17f90, %dec_label_pc_17f98 ], [ %v2_17fa0, %bb87 ]
  %v1_17fa8 = phi i32 [ %v5_17f88, %dec_label_pc_17f98 ], [ %v4_17f9c, %bb87 ]
  %v1_17fa4 = and i32 %v1_17fa8, 16711680
  %v2_17fa4 = icmp eq i32 %v1_17fa4, 0
  br i1 %v2_17fa4, label %bb88, label %.thread13

bb88:                                             ; preds = %.thread12
  %v4_17fa8 = mul i32 %v1_17fa8, 256
  store i32 %v4_17fa8, i32* %r0.global-to-local, align 4
  %v2_17fac = add i32 %v1_17fac, -8
  store i32 %v2_17fac, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread12, %bb88
  %v1_17fb8 = phi i32 [ %v1_17fac, %.thread12 ], [ %v2_17fac, %bb88 ]
  %v1_17fb4 = phi i32 [ %v1_17fa8, %.thread12 ], [ %v4_17fa8, %bb88 ]
  %v1_17fb0 = and i32 %v1_17fb4, 15728640
  %v2_17fb0 = icmp eq i32 %v1_17fb0, 0
  br i1 %v2_17fb0, label %bb89, label %.thread14

bb89:                                             ; preds = %.thread13
  %v4_17fb4 = mul i32 %v1_17fb4, 16
  store i32 %v4_17fb4, i32* %r0.global-to-local, align 4
  %v2_17fb8 = add i32 %v1_17fb8, -4
  store i32 %v2_17fb8, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread13, %bb89
  %v1_17fc4 = phi i32 [ %v1_17fb8, %.thread13 ], [ %v2_17fb8, %bb89 ]
  %v1_17fc0 = phi i32 [ %v1_17fb4, %.thread13 ], [ %v4_17fb4, %bb89 ]
  %v1_17fbc = and i32 %v1_17fc0, 12582912
  %v2_17fbc = icmp eq i32 %v1_17fbc, 0
  br i1 %v2_17fbc, label %bb90, label %.thread15

bb90:                                             ; preds = %.thread14
  %v4_17fc0 = mul i32 %v1_17fc0, 4
  store i32 %v4_17fc0, i32* %r0.global-to-local, align 4
  %v2_17fc4 = add i32 %v1_17fc4, -2
  store i32 %v2_17fc4, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread14, %bb90
  %v0_17fd0 = phi i32 [ %v1_17fc4, %.thread14 ], [ %v2_17fc4, %bb90 ]
  %v1_17fcc = phi i32 [ %v1_17fc0, %.thread14 ], [ %v4_17fc0, %bb90 ]
  %v2_17fc8 = icmp ugt i32 %v1_17fcc, 8388607
  br i1 %v2_17fc8, label %bb92, label %bb91

bb91:                                             ; preds = %.thread15
  %v3_17fcc = mul i32 %v1_17fcc, 2
  store i32 %v3_17fcc, i32* %r0.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread15, %bb91
  %v3_17fd4 = phi i32 [ %v1_17fcc, %.thread15 ], [ %v3_17fcc, %bb91 ]
  %v1_17fd0 = phi i32 [ 0, %.thread15 ], [ 1, %bb91 ]
  %v4_17fd0 = sub i32 %v0_17fd0, %v1_17fd0
  store i32 %v4_17fd0, i32* %r2.global-to-local, align 4
  %v7_17fd0107 = sub i32 %v1_17fd0, %v4_17fd0
  %v9_17fd0 = and i32 %v7_17fd0107, %v0_17fd0
  %v10_17fd0 = icmp slt i32 %v9_17fd0, 0
  %v11_17fd0 = icmp slt i32 %v4_17fd0, 0
  %v2_17fd4 = xor i1 %v11_17fd0, %v10_17fd0
  br i1 %v2_17fd4, label %.thread75, label %bb93

.thread75:                                        ; preds = %bb92
  %v4_17fd8 = sub i32 0, %v4_17fd0
  store i32 %v4_17fd8, i32* %r2.global-to-local, align 4
  %v10_17fe0 = lshr i32 %v3_17fd4, %v4_17fd8
  %v11_17fe0 = or i32 %v10_17fe0, %v1_17f3c
  store i32 %v11_17fe0, i32* %r0.global-to-local, align 4
  br label %bb94

bb93:                                             ; preds = %bb92
  %v7_17fd46672 = mul i32 %v4_17fd0, 8388608
  %v8_17fd46773 = add i32 %v7_17fd46672, %v3_17fd4
  %v5_17fdc = or i32 %v8_17fd46773, %v1_17f3c
  store i32 %v5_17fdc, i32* %r0.global-to-local, align 4
  br label %bb94

bb94:                                             ; preds = %.thread24, %bb105, %bb99, %dec_label_pc_18038, %bb96, %dec_label_pc_18018, %bb93, %.thread75
  %v1_17fe4 = phi i32 [ %v5_17fdc, %bb93 ], [ %v11_17fe0, %.thread75 ], [ %v1_17ebc, %dec_label_pc_18018 ], [ %arg2, %bb96 ], [ %v2_18038, %dec_label_pc_18038 ], [ %v2_1803c, %bb99 ], [ %v1_1807c, %bb105 ], [ %v2_1807c, %.thread24 ]
  ret i32 %v1_17fe4

dec_label_pc_17fe8:                               ; preds = %bb83
  %v2_17fe8 = icmp eq i32 %v0_17f24, 0
  %v1_17fec = xor i32 %storemerge1, 8388608
  store i32 %v1_17fec, i32* %r1.global-to-local, align 4
  br i1 %v2_17fe8, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_17fe8
  %v2_17ff0 = xor i32 %v1_17f0c.v2_17f10, 8388608
  store i32 %v2_17ff0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17f2c

.thread17:                                        ; preds = %dec_label_pc_17fe8
  %v2_17ff8 = add i32 %v1_17f24, -1
  store i32 %v2_17ff8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17f2c

dec_label_pc_18000:                               ; preds = %dec_label_pc_17ebc.dec_label_pc_18000_crit_edge, %bb, %bb78, %bb79, %bb80
  %v2_18000.pre-phi = phi i32 [ %.pre, %dec_label_pc_17ebc.dec_label_pc_18000_crit_edge ], [ 0, %bb ], [ %v3_17ecc, %bb78 ], [ %v3_17ecc, %bb79 ], [ %v3_17ecc, %bb80 ]
  store i32 %v2_18000.pre-phi, i32* %r3.global-to-local, align 4
  %v3_18004 = sdiv i32 %v2_17ec8, 16777216
  %v4_18004 = sub nsw i32 -1, %v3_18004
  %v2_17ec8.off108 = add i32 %v2_17ec8, 33554431
  %tmp113 = icmp ult i32 %v2_17ec8.off108, 16777216
  br i1 %tmp113, label %.thread21, label %bb95

bb95:                                             ; preds = %dec_label_pc_18000
  %v2_18000.pre-phi.off = add i32 %v2_18000.pre-phi, 33554431
  %tmp114 = icmp ult i32 %v2_18000.pre-phi.off, 16777216
  br i1 %tmp114, label %bb102, label %dec_label_pc_18010

dec_label_pc_18010:                               ; preds = %bb95
  %v4_18010 = icmp eq i32 %v2_18000.pre-phi, %v2_17ec8
  br i1 %v4_18010, label %dec_label_pc_18024, label %dec_label_pc_18018

dec_label_pc_18018:                               ; preds = %dec_label_pc_18010
  br i1 %v4_17ec8, label %bb96, label %bb94

bb96:                                             ; preds = %dec_label_pc_18018
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_18024:                               ; preds = %dec_label_pc_18010
  %v4_18024 = icmp eq i32 %v1_17ebc, %arg2
  br i1 %v4_18024, label %bb98, label %bb97

bb97:                                             ; preds = %dec_label_pc_18024
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb98

bb98:                                             ; preds = %dec_label_pc_18024, %bb97
  %v0_1802c = load i32, i32* @lr, align 4
  %v2_1802c = xor i1 %v4_18024, true
  call void @__pseudo_cond_branch(i1 %v2_1802c, i32 %v0_1802c)
  %v0_18030 = load i32, i32* %r2.global-to-local, align 4
  %v3_18030 = icmp ult i32 %v0_18030, 16777216
  br i1 %v3_18030, label %dec_label_pc_18038, label %dec_label_pc_18044

dec_label_pc_18038:                               ; preds = %bb98
  %v0_18038 = load i32, i32* %r0.global-to-local, align 4
  %v1_18038 = icmp slt i32 %v0_18038, 0
  %v2_18038 = mul i32 %v0_18038, 2
  store i32 %v2_18038, i32* %r0.global-to-local, align 4
  br i1 %v1_18038, label %bb99, label %bb94

bb99:                                             ; preds = %dec_label_pc_18038
  %v2_1803c = or i32 %v2_18038, -2147483648
  store i32 %v2_1803c, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_18044:                               ; preds = %bb98
  %v1_18044 = add i32 %v0_18030, 33554432
  store i32 %v1_18044, i32* %r2.global-to-local, align 4
  %v2_18044 = icmp ugt i32 %v0_18030, -33554433
  br i1 %v2_18044, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_18044
  %v1_18048 = load i32, i32* %r0.global-to-local, align 4
  %v2_18048 = add i32 %v1_18048, 8388608
  store i32 %v2_18048, i32* %r0.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_18044, %bb100
  %v0_1804c = load i32, i32* @lr, align 4
  %v2_1804c = xor i1 %v2_18044, true
  call void @__pseudo_cond_branch(i1 %v2_1804c, i32 %v0_1804c)
  %v0_18050 = load i32, i32* %r0.global-to-local, align 4
  %v1_18050 = and i32 %v0_18050, -2147483648
  store i32 %v1_18050, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18054

dec_label_pc_18054:                               ; preds = %dec_label_pc_17f5c, %bb101
  %v0_18054 = phi i32 [ %v1_17f3c, %dec_label_pc_17f5c ], [ %v1_18050, %bb101 ]
  %v1_18058 = or i32 %v0_18054, 2139095040
  store i32 %v1_18058, i32* %r0.global-to-local, align 4
  ret i32 %v1_18058

bb102:                                            ; preds = %bb95
  store i32 %v4_18004, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread21:                                        ; preds = %dec_label_pc_18000
  store i32 %v4_18004, i32* %r2.global-to-local, align 4
  %v4_18068 = sdiv i32 %v2_18000.pre-phi, 16777216
  %v5_18068 = sub nsw i32 -1, %v4_18068
  store i32 %v5_18068, i32* %r3.global-to-local, align 4
  %v2_18000.pre-phi.off109 = add i32 %v2_18000.pre-phi, 33554431
  %tmp115 = icmp ult i32 %v2_18000.pre-phi.off109, 16777216
  br i1 %tmp115, label %bb103, label %.thread22

.thread22:                                        ; preds = %bb102, %.thread21
  %v1_1806c = phi i32 [ %arg2, %bb102 ], [ %v1_17ebc, %.thread21 ]
  store i32 %v1_1806c, i32* %r1.global-to-local, align 4
  br label %bb103

bb103:                                            ; preds = %.thread21, %.thread22
  %v2_18078 = phi i32 [ %arg2, %.thread21 ], [ %v1_1806c, %.thread22 ]
  %v1_1807c = phi i32 [ %v1_17ebc, %.thread21 ], [ %v1_1806c, %.thread22 ]
  %v3_18070 = mul i32 %v1_1807c, 512
  store i32 %v3_18070, i32* %r2.global-to-local, align 4
  %v5_18070 = icmp eq i32 %v3_18070, 0
  br i1 %v5_18070, label %bb104, label %.thread24

bb104:                                            ; preds = %bb103
  %v4_18074 = mul i32 %v2_18078, 512
  store i32 %v4_18074, i32* %r3.global-to-local, align 4
  %v6_18074 = icmp eq i32 %v4_18074, 0
  br i1 %v6_18074, label %bb105, label %.thread24

bb105:                                            ; preds = %bb104
  %v5_18078 = icmp eq i32 %v1_1807c, %v2_18078
  br i1 %v5_18078, label %bb94, label %.thread24

.thread24:                                        ; preds = %bb103, %bb104, %bb105
  %v2_1807c = or i32 %v1_1807c, 4194304
  store i32 %v2_1807c, i32* %r0.global-to-local, align 4
  br label %bb94

; uselistorder directives
  uselistorder i32 %v2_1807c, { 1, 0 }
  uselistorder i32 %v4_18074, { 1, 0 }
  uselistorder i32 %v3_18070, { 1, 0 }
  uselistorder i32 %v1_1807c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1806c, { 1, 0, 2 }
  uselistorder i32 %v2_1803c, { 1, 0 }
  uselistorder i32 %v2_18038, { 1, 0, 2 }
  uselistorder i32 %v0_18030, { 2, 1, 0 }
  uselistorder i1 %v4_18024, { 1, 0 }
  uselistorder i32 %v4_18004, { 1, 0 }
  uselistorder i32 %v2_18000.pre-phi, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v2_17ff8, { 1, 0 }
  uselistorder i32 %v2_17ff0, { 1, 0 }
  uselistorder i32 %v1_17fec, { 2, 1, 0 }
  uselistorder i32 %v4_17fd0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_17fd0, { 1, 0 }
  uselistorder i32 %v3_17fcc, { 1, 0 }
  uselistorder i32 %v1_17fcc, { 1, 0, 2 }
  uselistorder i32 %v4_17fc0, { 1, 0 }
  uselistorder i32 %v1_17fc0, { 1, 0, 2 }
  uselistorder i32 %v4_17fb4, { 1, 0 }
  uselistorder i32 %v1_17fb4, { 1, 0, 2 }
  uselistorder i32 %v4_17fa8, { 1, 0 }
  uselistorder i32 %v1_17fa8, { 1, 0, 2 }
  uselistorder i32 %v4_17f9c, { 1, 0 }
  uselistorder i32 %v1_17f90, { 0, 2, 1 }
  uselistorder i32 %v5_17f88, { 1, 0, 3, 2 }
  uselistorder i32 %v3_17f88, { 1, 0 }
  uselistorder i32 %v3_17f5c, { 1, 0 }
  uselistorder i32 %v0_17f88, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v0_17f84, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_17f3c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_17f38, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17f2c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17f24, { 3, 1, 2, 0 }
  uselistorder i32 %v0_17f24, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v1_17f0c.v2_17f10, { 2, 1, 0, 3 }
  uselistorder i32 %v4_17ee4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17ecc, { 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_17ec8, { 0, 2, 4, 3, 1, 6, 5 }
  uselistorder i32 %v1_17ebc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 0, 18, 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 23, 4, 24, 5, 6, 25, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 26, 22, 27 }
  uselistorder i32 33554432, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 8388607, { 1, 0, 2 }
  uselistorder i32 4096, { 0, 7, 1, 2, 8, 12, 4, 5, 13, 9, 14, 3, 10, 15, 11, 6 }
  uselistorder i32 2048, { 0, 18, 19, 11, 17, 16, 8, 9, 1, 2, 3, 4, 10, 6, 12, 13, 14, 5, 7, 15, 20 }
  uselistorder i32 512, { 0, 1, 9, 8, 2, 3, 10, 4, 11, 5, 12, 6, 13, 7, 14 }
  uselistorder i32 253, { 4, 0, 1, 2, 3 }
  uselistorder i32 33, { 12, 6, 16, 1, 0, 2, 3, 4, 7, 13, 15, 5, 8, 14, 9, 17, 10, 18, 11, 19 }
  uselistorder i32 25, { 0, 19, 20, 3, 11, 4, 12, 5, 13, 6, 14, 10, 1, 7, 15, 2, 16, 8, 17, 9, 18, 21 }
  uselistorder i32 8388608, { 11, 12, 13, 5, 14, 0, 6, 1, 7, 2, 3, 4, 8, 15, 9, 10 }
  uselistorder i32 %arg2, { 5, 6, 7, 0, 8, 4, 9, 1, 2, 3, 10 }
  uselistorder label %.thread24, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_18054, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_18000, { 4, 3, 2, 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %dec_label_pc_17f4c, { 1, 0 }
  uselistorder label %dec_label_pc_17f2c, { 1, 0, 2 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @function_18084() local_unnamed_addr {
dec_label_pc_18084:
  store i32 0, i32* @r3, align 4
  %v0_18088 = call i32 @function_18094()
  ret i32 %v0_18088
}

define i32 @function_1808c() local_unnamed_addr {
dec_label_pc_1808c:
  %v0_1808c = load i32, i32* @r0, align 4
  %v2_1808c = icmp slt i32 %v0_1808c, 0
  br i1 %v2_1808c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_1808c
  %v2_18090 = sub i32 0, %v0_1808c
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_1808c, %bb
  %.0 = phi i32 [ %v2_18090, %bb ], [ undef, %dec_label_pc_1808c ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1808c, { 1, 0 }
  uselistorder i32 undef, { 4, 1, 2, 3, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_18094() local_unnamed_addr {
dec_label_pc_18094:
  %ip.global-to-local = alloca i32, align 4
  %v0_18094 = load i32, i32* @r0, align 4
  store i32 %v0_18094, i32* %ip.global-to-local, align 4
  %v2_18094 = icmp eq i32 %v0_18094, 0
  %v0_18098 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_18094, i32 %v0_18098)
  %v0_1809c = load i32, i32* @r3, align 4
  %v1_1809c = or i32 %v0_1809c, 1258291200
  %v0_180a0 = load i32, i32* @r0, align 4
  %v1_180ec = add i32 %v1_1809c, -8388608
  %v0_180f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_180f4 = icmp ugt i32 %v0_180f4, 65535
  br i1 %v2_180f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18094
  %v2_180f8 = and i32 %v0_180f4, 32768
  %v3_180f8 = icmp eq i32 %v2_180f8, 0
  %v4_180f8 = udiv i32 %v0_180f4, 65536
  store i32 %v4_180f8, i32* %ip.global-to-local, align 4
  br i1 %v3_180f8, label %.thread, label %bb14

bb14:                                             ; preds = %bb
  br label %.thread

.thread:                                          ; preds = %bb, %dec_label_pc_18094, %bb14
  %v1_18104 = phi i32 [ %v0_180f4, %dec_label_pc_18094 ], [ %v4_180f8, %bb ], [ %v4_180f8, %bb14 ]
  %v1_18108 = phi i32 [ 23, %dec_label_pc_18094 ], [ 23, %bb ], [ 7, %bb14 ]
  %v2_18100 = icmp ugt i32 %v1_18104, 255
  br i1 %v2_18100, label %bb15, label %.thread1

bb15:                                             ; preds = %.thread
  %v2_18104 = and i32 %v1_18104, 128
  %v3_18104 = icmp eq i32 %v2_18104, 0
  %v4_18104 = udiv i32 %v1_18104, 256
  store i32 %v4_18104, i32* %ip.global-to-local, align 4
  br i1 %v3_18104, label %.thread1, label %bb16

bb16:                                             ; preds = %bb15
  %v2_18108 = add nsw i32 %v1_18108, -8
  br label %.thread1

.thread1:                                         ; preds = %bb15, %.thread, %bb16
  %v1_18114 = phi i32 [ %v1_18108, %.thread ], [ %v1_18108, %bb15 ], [ %v2_18108, %bb16 ]
  %v1_18110 = phi i32 [ %v1_18104, %.thread ], [ %v4_18104, %bb15 ], [ %v4_18104, %bb16 ]
  %v2_1810c = icmp ugt i32 %v1_18110, 15
  br i1 %v2_1810c, label %bb17, label %.thread2

bb17:                                             ; preds = %.thread1
  %v2_18110 = and i32 %v1_18110, 8
  %v3_18110 = icmp eq i32 %v2_18110, 0
  %v4_18110 = udiv i32 %v1_18110, 16
  store i32 %v4_18110, i32* %ip.global-to-local, align 4
  br i1 %v3_18110, label %.thread2, label %bb18

bb18:                                             ; preds = %bb17
  %v2_18114 = add nsw i32 %v1_18114, -4
  br label %.thread2

.thread2:                                         ; preds = %bb17, %.thread1, %bb18
  %v1_1811c = phi i32 [ %v1_18114, %.thread1 ], [ %v1_18114, %bb17 ], [ %v2_18114, %bb18 ]
  %v1_18124 = phi i32 [ %v1_18110, %.thread1 ], [ %v4_18110, %bb17 ], [ %v4_18110, %bb18 ]
  %v2_18118 = icmp ugt i32 %v1_18124, 3
  br i1 %v2_18118, label %bb19, label %.thread3

bb19:                                             ; preds = %.thread2
  %v2_1811c = add nsw i32 %v1_1811c, -2
  br label %bb20

.thread3:                                         ; preds = %.thread2
  %v5_18120 = udiv i32 %v1_18124, 2
  %v6_18120 = sub i32 %v1_1811c, %v5_18120
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread3
  %v0_18124 = phi i32 [ %v6_18120, %.thread3 ], [ %v2_1811c, %bb19 ]
  %v4_18124 = udiv i32 %v1_18124, 8
  %v5_18124 = sub i32 %v0_18124, %v4_18124
  %tmp = mul i32 %v5_18124, -8388608
  %v5_18128 = add i32 %v1_180ec, %tmp
  %v5_1812c = icmp slt i32 %v0_18124, %v4_18124
  br i1 %v5_1812c, label %dec_label_pc_1814c, label %dec_label_pc_18130

dec_label_pc_18130:                               ; preds = %bb20
  %v7_18130 = shl i32 %v0_180a0, %v5_18124
  %v8_18130 = add i32 %v5_18128, %v7_18130
  store i32 0, i32* %ip.global-to-local, align 4
  %v25_18140 = icmp eq i32 %v8_18130, 0
  br i1 %v25_18140, label %bb21, label %bb22

bb21:                                             ; preds = %dec_label_pc_18130
  br label %bb22

bb22:                                             ; preds = %bb23, %dec_label_pc_1814c, %dec_label_pc_18130, %bb21
  %v1_18148 = phi i32 [ %v8_18130, %dec_label_pc_18130 ], [ 0, %bb21 ], [ %v11_1815c, %dec_label_pc_1814c ], [ 0, %bb23 ]
  ret i32 %v1_18148

dec_label_pc_1814c:                               ; preds = %bb20
  %v1_1814c = add i32 %v5_18124, 32
  %v6_18150 = shl i32 %v0_180a0, %v1_1814c
  store i32 %v6_18150, i32* %ip.global-to-local, align 4
  %v1_18154 = sub i32 0, %v5_18124
  %v3_1815c = sub i32 -1, %v5_18124
  %v4_1815c = shl i32 1, %v3_1815c
  %v5_1815c = and i32 %v4_1815c, %v0_180a0
  %v6_1815c = icmp ne i32 %v5_1815c, 0
  %v7_1815c = lshr i32 %v0_180a0, %v1_18154
  %v9_1815c = add i32 %v5_18128, %v7_1815c
  %v10_1815c = zext i1 %v6_1815c to i32
  %v11_1815c = add i32 %v10_1815c, %v9_1815c
  %v25_1815c = icmp eq i32 %v11_1815c, 0
  br i1 %v25_1815c, label %bb23, label %bb22

bb23:                                             ; preds = %dec_label_pc_1814c
  br label %bb22

; uselistorder directives
  uselistorder i32 %v11_1815c, { 1, 0 }
  uselistorder i32 %v5_18128, { 1, 0 }
  uselistorder i32 %v5_18124, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_18124, { 1, 0 }
  uselistorder i32 %v0_18124, { 1, 0 }
  uselistorder i32 %v4_18110, { 2, 1, 0 }
  uselistorder i32 %v1_18110, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18104, { 2, 1, 0 }
  uselistorder i32 %v1_18104, { 1, 0, 2, 3 }
  uselistorder i32 %v4_180f8, { 2, 1, 0 }
  uselistorder i32 %v0_180f4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_180a0, { 1, 0, 2, 3 }
  uselistorder i32 3, { 73, 0, 26, 129, 40, 141, 130, 131, 132, 2, 133, 74, 75, 76, 77, 78, 79, 72, 134, 5, 135, 136, 142, 137, 80, 138, 81, 41, 86, 27, 87, 28, 88, 3, 89, 90, 91, 42, 6, 118, 43, 119, 44, 120, 45, 121, 46, 122, 47, 123, 48, 124, 29, 125, 49, 126, 50, 127, 51, 92, 93, 52, 94, 53, 30, 97, 54, 55, 56, 57, 1, 95, 96, 58, 8, 7, 59, 98, 31, 99, 10, 9, 60, 32, 100, 12, 11, 61, 101, 33, 102, 14, 13, 62, 103, 34, 104, 16, 15, 63, 105, 35, 106, 65, 107, 18, 17, 64, 108, 36, 109, 67, 110, 20, 19, 66, 111, 37, 112, 22, 21, 68, 113, 38, 114, 24, 23, 69, 115, 39, 116, 25, 117, 4, 128, 139, 82, 83, 84, 85, 70, 140, 71 }
  uselistorder i32 -4, { 6, 5, 23, 0, 21, 24, 25, 26, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 2, 22, 16, 3, 27, 18, 19, 20, 4, 17 }
  uselistorder i32 15, { 12, 21, 0, 13, 14, 4, 15, 20, 5, 6, 7, 8, 9, 10, 1, 16, 11, 17, 2, 18, 3, 19 }
  uselistorder i32 -8, { 13, 12, 22, 14, 15, 16, 17, 18, 11, 19, 20, 21, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 36, 41, 42, 43, 40, 44, 111, 45, 120, 121, 46, 47, 48, 122, 49, 50, 51, 52, 53, 54, 112, 123, 113, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 114, 116, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 115, 117, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 118, 92, 93, 94, 95, 96, 119, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 124, 110, 125 }
  uselistorder i32 128, { 19, 8, 18, 17, 20, 16, 15, 14, 13, 12, 25, 0, 26, 22, 21, 9, 10, 23, 24, 11, 2, 3, 4, 5, 6, 7, 27, 1, 28 }
  uselistorder i32 7, { 2, 1, 0, 34, 35, 36, 7, 38, 39, 18, 40, 19, 41, 5, 20, 53, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 8, 43, 9, 10, 44, 11, 45, 31, 46, 12, 47, 13, 48, 14, 49, 15, 50, 16, 51, 6, 52, 3, 32, 54, 4, 33, 55, 56, 37, 17, 57 }
  uselistorder i32 23, { 1, 2, 0, 12, 13, 18, 22, 4, 14, 6, 15, 7, 16, 8, 17, 5, 19, 3, 20, 9, 21, 10, 11 }
  uselistorder label %bb22, { 0, 1, 3, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %.thread1, { 2, 0, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_18168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18168:
  %v0_18170 = call i32 @function_18184()
  ret i32 %v0_18170
}

define i32 @function_18184() local_unnamed_addr {
dec_label_pc_18184:
  %sl.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_18184 = load i32, i32* @r4, align 4
  store i32 %v3_18184, i32* %stack_var_-32, align 4
  %v12_18184 = load i32, i32* @r7, align 4
  %v21_18184 = load i32, i32* @sl, align 4
  %v0_18188 = load i32, i32* @r2, align 4
  store i32 %v0_18188, i32* @r7, align 4
  %v0_1818c = load i32, i32* @r3, align 4
  store i32 %v0_1818c, i32* @r8, align 4
  %v0_18190 = load i32, i32* @r0, align 4
  store i32 %v0_18190, i32* @sb, align 4
  %v0_18194 = load i32, i32* @r1, align 4
  store i32 %v0_18194, i32* @sl, align 4
  %v0_18198 = call i32 @function_187b4()
  %v1_18198 = sext i32 %v0_18198 to i64
  %v2_1819c = load i32, i32* @r8, align 4
  %v3_1819c = mul i32 %v2_1819c, %v0_18198
  store i32 %v3_1819c, i32* @ip, align 4
  %v3_181a0 = load i32, i32* @r7, align 4
  %v4_181a0 = zext i32 %v3_181a0 to i64
  %v5_181a0 = mul nuw nsw i64 %v4_181a0, %v1_18198
  %v6_181a0 = udiv i64 %v5_181a0, 4294967296
  %v7_181a0 = trunc i64 %v6_181a0 to i32
  %v8_181a0 = trunc i64 %v5_181a0 to i32
  %v1_181a4 = load i32, i32* @r1, align 4
  %v3_181a4 = mul i32 %v1_181a4, %v3_181a0
  %v4_181a4 = add i32 %v3_181a4, %v3_1819c
  %v2_181a8 = add i32 %v4_181a4, %v7_181a0
  %v0_181b0 = load i32, i32* @sb, align 4
  %v2_181b0 = sub i32 %v0_181b0, %v8_181a0
  %v3_181b0 = icmp uge i32 %v0_181b0, %v8_181a0
  %v0_181b4 = load i32, i32* @sl, align 4
  %v3_181b4 = icmp eq i1 %v3_181b0, false
  %v4_181b4 = sub i32 %v0_181b4, %v2_181a8
  %v6_181b4 = sext i1 %v3_181b4 to i32
  %v7_181b4 = add i32 %v6_181b4, %v4_181b4
  store i32 %v7_181b4, i32* %sl.global-to-local, align 4
  %v1_181c0 = inttoptr i32 %tmp7 to i32*
  store i32 %v2_181b0, i32* %v1_181c0, align 4
  %v3_181c0 = add i32 %tmp7, 4
  %v4_181c0 = inttoptr i32 %v3_181c0 to i32*
  %v5_181c0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_181c0, i32* %v4_181c0, align 4
  %v2_181c4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_181c4, i32* @r4, align 4
  store i32 %v12_18184, i32* @r7, align 4
  store i32 %v21_18184, i32* @sl, align 4
  ret i32 %v0_18198

; uselistorder directives
  uselistorder i32 %v8_181a0, { 1, 0 }
  uselistorder i64 %v5_181a0, { 1, 0 }
  uselistorder i32 %v0_18198, { 1, 0, 2 }
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_181cc(i32 %arg1, i32 %arg2, i64 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_181cc:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  %tmp = trunc i64 %arg3 to i32
  store i32 %tmp, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v21_181cc = load i32, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg2, i32* @sl, align 4
  %v0_181e0 = call i32 @function_18214()
  %v1_181e4 = load i32, i32* @r8, align 4
  %v2_181e4 = mul i32 %v1_181e4, %v0_181e0
  %v1_181e8 = zext i32 %v0_181e0 to i64
  %v2_181e8 = load i32, i32* @r7, align 4
  %v3_181e8 = zext i32 %v2_181e8 to i64
  %v4_181e8 = mul nuw i64 %v3_181e8, %v1_181e8
  %v5_181e8 = udiv i64 %v4_181e8, 4294967296
  %v6_181e8 = trunc i64 %v5_181e8 to i32
  %v7_181e8 = trunc i64 %v4_181e8 to i32
  %v3_181ec = mul i32 %v2_181e8, %arg2
  %v4_181ec = add i32 %v3_181ec, %v2_181e4
  %v2_181f0 = add i32 %v4_181ec, %v6_181e8
  %v0_181f8 = load i32, i32* @sb, align 4
  %v2_181f8 = sub i32 %v0_181f8, %v7_181e8
  %v3_181f8 = icmp uge i32 %v0_181f8, %v7_181e8
  %v0_181fc = load i32, i32* @sl, align 4
  %v3_181fc = icmp eq i1 %v3_181f8, false
  %v4_181fc = sub i32 %v0_181fc, %v2_181f0
  %v6_181fc = sext i1 %v3_181fc to i32
  %v7_181fc = add i32 %v6_181fc, %v4_181fc
  store i32 %v7_181fc, i32* %sl.global-to-local, align 4
  %v1_18208 = inttoptr i32 %arg5 to i32*
  store i32 %v2_181f8, i32* %v1_18208, align 4
  %v3_18208 = add i32 %arg5, 4
  %v4_18208 = inttoptr i32 %v3_18208 to i32*
  %v5_18208 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_18208, i32* %v4_18208, align 4
  store i32 %v21_181cc, i32* %sl.global-to-local, align 4
  ret i32 %v0_181e0

; uselistorder directives
  uselistorder i32 %v7_181e8, { 1, 0 }
  uselistorder i64 %v4_181e8, { 1, 0 }
  uselistorder i32 %v0_181e0, { 1, 2, 0 }
  uselistorder i32* @sb, { 6, 7, 110, 111, 8, 9, 112, 113, 115, 114, 117, 116, 118, 119, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 10, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 143, 144, 145, 146, 147, 137, 138, 1, 139, 2, 140, 141, 0, 142, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 129, 130, 131, 132, 23, 24, 25, 26, 27, 28, 29, 21, 22, 3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 4, 63, 80, 81, 82, 83, 84, 85, 86, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 133, 134, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 5, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180 }
  uselistorder i32* @r8, { 18, 19, 150, 151, 250, 251, 252, 44, 0, 45, 46, 176, 177, 178, 179, 152, 153, 155, 154, 157, 156, 158, 159, 20, 180, 181, 182, 183, 184, 185, 253, 254, 255, 1, 256, 257, 258, 2, 259, 260, 21, 160, 161, 162, 163, 4, 164, 165, 166, 186, 187, 188, 189, 5, 212, 213, 214, 215, 216, 217, 218, 6, 16, 225, 190, 191, 192, 193, 194, 195, 196, 197, 206, 207, 7, 208, 209, 8, 210, 211, 198, 199, 200, 9, 201, 202, 203, 204, 205, 219, 10, 220, 221, 222, 223, 224, 261, 262, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 32, 167, 168, 169, 170, 56, 57, 11, 58, 59, 60, 61, 17, 62, 76, 77, 78, 82, 79, 80, 81, 83, 84, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 63, 64, 15, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 12, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 13, 137, 138, 139, 140, 141, 3, 142, 143, 144, 145, 147, 146, 148, 149, 171, 172, 173, 174, 175, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 14, 245, 246, 247, 248, 249 }
  uselistorder i32* @sl, { 11, 12, 13, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 2, 157, 158, 159, 160, 161, 162, 3, 163, 164, 181, 182, 268, 269, 270, 271, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 5, 196, 197, 0, 4, 204, 205, 206, 184, 185, 6, 192, 193, 194, 195, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 203, 272, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 28, 22, 174, 175, 176, 177, 36, 7, 1, 37, 38, 39, 30, 31, 32, 33, 34, 35, 8, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 9, 140, 141, 142, 178, 179, 180, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 258, 10, 261, 262, 263, 264, 265, 266, 267 }
  uselistorder i32 %arg5, { 1, 0 }
}

define i32 @function_18214() local_unnamed_addr {
dec_label_pc_18214:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_18214 = load i32, i32* @r7, align 4
  %v27_18214 = load i32, i32* @lr, align 4
  store i32 44500, i32* %r8.global-to-local, align 4
  %v0_18220 = load i32, i32* @r1, align 4
  %v1_18220 = icmp slt i32 %v0_18220, 0
  br i1 %v1_18220, label %dec_label_pc_185a8, label %dec_label_pc_18248

dec_label_pc_18248:                               ; preds = %dec_label_pc_18214
  store i32 0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* %r8.global-to-local, align 4
  %v0_18238 = load i32, i32* @r2, align 4
  store i32 %v0_18238, i32* @r4, align 4
  %v0_1823c = load i32, i32* @r3, align 4
  %v1_18248 = icmp slt i32 %v0_1823c, 0
  br i1 %v1_18248, label %dec_label_pc_185c0, label %dec_label_pc_18250

dec_label_pc_18250:                               ; preds = %dec_label_pc_185a8, %dec_label_pc_18248, %dec_label_pc_185c0
  %v0_1823c90 = phi i32 [ %v0_1823c89, %dec_label_pc_185c0 ], [ %v0_1823c85, %dec_label_pc_185a8 ], [ %v0_1823c, %dec_label_pc_18248 ]
  %v1_18590 = phi i32 [ %v6_185c4, %dec_label_pc_185c0 ], [ %v0_1823c85, %dec_label_pc_185a8 ], [ %v0_1823c, %dec_label_pc_18248 ]
  %v0_1829860 = phi i32 [ %stack_var_-56.2, %dec_label_pc_185c0 ], [ -1, %dec_label_pc_185a8 ], [ 0, %dec_label_pc_18248 ]
  %v0_183a4 = phi i32 [ %v1_185c0, %dec_label_pc_185c0 ], [ %v0_1823884, %dec_label_pc_185a8 ], [ %v0_18238, %dec_label_pc_18248 ]
  %v1_1829c = phi i32 [ %v0_1825428, %dec_label_pc_185c0 ], [ %v6_185ac, %dec_label_pc_185a8 ], [ %v0_18220, %dec_label_pc_18248 ]
  %stack_var_-56.1 = phi i32 [ %v1_185cc, %dec_label_pc_185c0 ], [ -1, %dec_label_pc_185a8 ], [ 0, %dec_label_pc_18248 ]
  %v2_18250 = icmp eq i32 %v1_18590, 0
  store i32 %v1_1829c, i32* @r7, align 4
  store i32 %v0_183a4, i32* %r6.global-to-local, align 4
  %v0_1825c = load i32, i32* @r0, align 4
  store i32 %v0_1825c, i32* %sb.global-to-local, align 4
  br i1 %v2_18250, label %dec_label_pc_18264, label %dec_label_pc_1835c

dec_label_pc_18264:                               ; preds = %dec_label_pc_18250
  %tmp = icmp ugt i32 %v0_183a4, %v1_1829c
  br i1 %tmp, label %dec_label_pc_1826c, label %dec_label_pc_1839c

dec_label_pc_1826c:                               ; preds = %dec_label_pc_18264
  %v2_1826c = icmp ugt i32 %v0_183a4, 65535
  br i1 %v2_1826c, label %dec_label_pc_1874c, label %dec_label_pc_18274

dec_label_pc_18274:                               ; preds = %dec_label_pc_1826c
  %v2_18274 = icmp ugt i32 %v0_183a4, 254
  %v7_18274 = icmp eq i32 %v0_183a4, 255
  %v2_18278 = xor i1 %v7_18274, true
  %v3_18278 = and i1 %v2_18274, %v2_18278
  br i1 %v3_18278, label %bb, label %bb123

bb:                                               ; preds = %dec_label_pc_18274
  br label %bb123

bb123:                                            ; preds = %dec_label_pc_18274, %bb
  %v0_1829858 = phi i32 [ %v0_1829860, %dec_label_pc_18274 ], [ 24, %bb ]
  %v2_1827c = xor i1 %v2_18274, true
  %v3_1827c = or i1 %v7_18274, %v2_1827c
  br i1 %v3_1827c, label %bb124, label %.thread94

bb124:                                            ; preds = %bb123
  br label %.thread94

.thread94:                                        ; preds = %bb123, %bb124
  %v0_182985792 = phi i32 [ 32, %bb124 ], [ %v0_1829858, %bb123 ]
  %v1_1828853 = phi i32 [ 0, %bb124 ], [ %v0_1823c90, %bb123 ]
  br i1 %v3_18278, label %bb125, label %bb126

bb125:                                            ; preds = %.thread94
  br label %bb126

bb126:                                            ; preds = %bb186, %bb185, %.thread94, %bb125
  %v0_18298 = phi i32 [ 16, %bb186 ], [ %v0_1829859, %bb185 ], [ %v0_182985792, %.thread94 ], [ %v0_182985792, %bb125 ]
  %v1_18288 = phi i32 [ %v1_1828854, %bb186 ], [ %v1_1828854, %bb185 ], [ %v1_1828853, %.thread94 ], [ 8, %bb125 ]
  %v6_18288 = lshr i32 %v0_183a4, %v1_18288
  %v4_18290 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18294 = add i32 %v4_18290, %v6_18288
  %v3_18294 = inttoptr i32 %v2_18294 to i8*
  %v4_18294 = load i8, i8* %v3_18294, align 1
  %v6_18294 = zext i8 %v4_18294 to i32
  %v2_18298 = sub nsw i32 %v0_18298, %v6_18294
  %v9_18298 = icmp eq i32 %v0_18298, %v6_18294
  br i1 %v9_18298, label %.thread2.thread20, label %bb128

.thread2.thread20:                                ; preds = %bb126
  %v3_182ac24 = udiv i32 %v0_183a4, 65536
  store i32 %v3_182ac24, i32* %r8.global-to-local, align 4
  br label %bb129

bb128:                                            ; preds = %bb126
  %v7_1829c = shl i32 %v1_1829c, %v2_18298
  %v2_182a0 = sub i32 32, %v2_18298
  %v7_182a4 = shl i32 %v0_183a4, %v2_18298
  store i32 %v7_182a4, i32* %r6.global-to-local, align 4
  %v8_182a8 = lshr i32 %v0_1825c, %v2_182a0
  %v9_182a8 = or i32 %v8_182a8, %v7_1829c
  store i32 %v9_182a8, i32* @r7, align 4
  %v3_182ac = udiv i32 %v7_182a4, 65536
  store i32 %v3_182ac, i32* %r8.global-to-local, align 4
  %v7_182b0 = shl i32 %v0_1825c, %v2_18298
  store i32 %v7_182b0, i32* %sb.global-to-local, align 4
  br label %bb129

bb129:                                            ; preds = %.thread2.thread20, %bb128
  %v0_182b8 = phi i32 [ %v3_182ac24, %.thread2.thread20 ], [ %v3_182ac, %bb128 ]
  %v0_182b4 = phi i32 [ %v1_1829c, %.thread2.thread20 ], [ %v9_182a8, %bb128 ]
  store i32 %v0_182b4, i32* @r0, align 4
  store i32 %v0_182b8, i32* @r1, align 4
  %v0_182bc = call i32 @function_1343c()
  %v0_182c0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_182bc, i32* %sl.global-to-local, align 4
  %v0_182c8 = load i32, i32* @r7, align 4
  %v2_182cc = call i32 @function_13538(i32 %v0_182c8, i32 %v0_182c0)
  %v0_182d0 = load i32, i32* %r6.global-to-local, align 4
  %v3_182d4 = urem i32 %v0_182d0, 65536
  store i32 %v3_182d4, i32* @r7, align 4
  %v2_182d8 = mul i32 %v0_182bc, %v3_182d4
  %v0_182dc = load i32, i32* %sb.global-to-local, align 4
  %v3_182dc = udiv i32 %v0_182dc, 65536
  %v4_182e0 = mul i32 %v0_182c0, 65536
  %v5_182e0 = or i32 %v3_182dc, %v4_182e0
  %tmp191 = icmp ugt i32 %v2_182d8, %v5_182e0
  br i1 %tmp191, label %dec_label_pc_182ec, label %.thread95

dec_label_pc_182ec:                               ; preds = %bb129
  %v2_182ec = add i32 %v5_182e0, %v0_182d0
  %v3_182ec = icmp ult i32 %v2_182ec, %v5_182e0
  %v1_182f0 = add i32 %v0_182bc, -1
  store i32 %v1_182f0, i32* %sl.global-to-local, align 4
  br i1 %v3_182ec, label %.thread95, label %dec_label_pc_182f8

dec_label_pc_182f8:                               ; preds = %dec_label_pc_182ec
  %tmp192 = icmp ugt i32 %v2_182d8, %v2_182ec
  br i1 %tmp192, label %bb130, label %.thread95

bb130:                                            ; preds = %dec_label_pc_182f8
  %v5_182fc = add i32 %v0_182bc, -2
  store i32 %v5_182fc, i32* %sl.global-to-local, align 4
  %v6_18300 = add i32 %v2_182ec, %v0_182d0
  br label %.thread95

.thread95:                                        ; preds = %bb129, %dec_label_pc_182f8, %dec_label_pc_182ec, %bb130
  %v1_18304 = phi i32 [ %v2_182ec, %dec_label_pc_182ec ], [ %v5_182e0, %bb129 ], [ %v6_18300, %bb130 ], [ %v2_182ec, %dec_label_pc_182f8 ]
  %v2_18304 = sub i32 %v1_18304, %v2_182d8
  store i32 %v2_18304, i32* @r4, align 4
  %v0_18308 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18308, i32* @r1, align 4
  store i32 %v2_18304, i32* @r0, align 4
  %v0_18310 = call i32 @function_1343c()
  store i32 %v0_18310, i32* @r5, align 4
  %v0_1831c = load i32, i32* @r4, align 4
  %v2_18320 = call i32 @function_13538(i32 %v0_1831c, i32 %v0_18308)
  %v0_18324 = load i32, i32* @r7, align 4
  %v1_18324 = load i32, i32* @r5, align 4
  %v2_18324 = mul i32 %v1_18324, %v0_18324
  %v0_18328 = load i32, i32* %sb.global-to-local, align 4
  %v3_1832c = urem i32 %v0_18328, 65536
  %v4_18330 = mul i32 %v0_18308, 65536
  %v5_18330 = or i32 %v3_1832c, %v4_18330
  %tmp193 = icmp ugt i32 %v2_18324, %v5_18330
  br i1 %tmp193, label %dec_label_pc_1833c, label %bb132

dec_label_pc_1833c:                               ; preds = %.thread95
  %v1_1833c = load i32, i32* %r6.global-to-local, align 4
  %v2_1833c = add i32 %v1_1833c, %v5_18330
  %v3_1833c = icmp ult i32 %v2_1833c, %v5_18330
  %v1_18340 = add i32 %v1_18324, -1
  br i1 %v3_1833c, label %bb132, label %dec_label_pc_18348

dec_label_pc_18348:                               ; preds = %dec_label_pc_1833c
  %tmp194 = icmp ugt i32 %v2_18324, %v2_1833c
  br i1 %tmp194, label %bb131, label %bb132

bb131:                                            ; preds = %dec_label_pc_18348
  %v5_1834c = add i32 %v1_18324, -2
  br label %bb132

bb132:                                            ; preds = %.thread95, %dec_label_pc_1833c, %dec_label_pc_18348, %bb131
  %v0_18350 = phi i32 [ %v1_18340, %dec_label_pc_1833c ], [ %v1_18324, %.thread95 ], [ %v1_18340, %dec_label_pc_18348 ], [ %v5_1834c, %bb131 ]
  %v1_18350 = load i32, i32* %sl.global-to-local, align 4
  %v4_18350 = mul i32 %v1_18350, 65536
  %v5_18350 = or i32 %v4_18350, %v0_18350
  br label %dec_label_pc_18370

dec_label_pc_1835c:                               ; preds = %dec_label_pc_18250
  %v9_1835c = icmp eq i32 %v1_1829c, %v1_18590
  %tmp195 = icmp ult i32 %v1_1829c, %v1_18590
  br i1 %tmp195, label %dec_label_pc_18368, label %dec_label_pc_18558

dec_label_pc_18368:                               ; preds = %bb156, %dec_label_pc_1835c, %bb157
  br label %dec_label_pc_18370

dec_label_pc_18370:                               ; preds = %.thread13, %bb178, %dec_label_pc_18740, %bb145, %bb132, %dec_label_pc_18368
  %v0_18388 = phi i32 [ %v5_186e4, %bb178 ], [ 1, %.thread13 ], [ %v1_18740, %dec_label_pc_18740 ], [ %v5_1854c, %bb145 ], [ %v5_18350, %bb132 ], [ 0, %dec_label_pc_18368 ]
  %v2_1837c = icmp eq i32 %stack_var_-56.1, 0
  br i1 %v2_1837c, label %dec_label_pc_18390, label %dec_label_pc_18388

dec_label_pc_18388:                               ; preds = %dec_label_pc_18370
  %v1_18388 = sub i32 0, %v0_18388
  br label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %dec_label_pc_18370, %dec_label_pc_18388
  %v1_18398 = phi i32 [ %v0_18388, %dec_label_pc_18370 ], [ %v1_18388, %dec_label_pc_18388 ]
  store i32 %v12_18214, i32* @r7, align 4
  ret i32 %v1_18398

dec_label_pc_1839c:                               ; preds = %dec_label_pc_18264
  %v2_1839c = icmp eq i32 %v0_183a4, 0
  br i1 %v2_1839c, label %dec_label_pc_183a4, label %dec_label_pc_183b4

dec_label_pc_183a4:                               ; preds = %dec_label_pc_1839c
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_183ac = call i32 @function_1343c()
  store i32 %v0_183ac, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %dec_label_pc_1839c, %dec_label_pc_183a4
  %v0_18404 = phi i32 [ %v0_183a4, %dec_label_pc_1839c ], [ %v0_183ac, %dec_label_pc_183a4 ]
  %v3_183b8 = icmp ult i32 %v0_18404, 65534
  br i1 %v3_183b8, label %dec_label_pc_185d8, label %dec_label_pc_183bc

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183b4
  %v3_183c0 = icmp ugt i32 %v0_18404, 16777214
  %v9_183c0 = icmp eq i32 %v0_18404, 16777215
  %v2_183c4 = xor i1 %v9_183c0, true
  %v3_183c4 = and i1 %v3_183c0, %v2_183c4
  br i1 %v3_183c4, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_183bc
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_183bc, %bb134
  %v1_183d469 = phi i32 [ 16777215, %dec_label_pc_183bc ], [ 24, %bb134 ]
  %v2_183c8 = xor i1 %v3_183c0, true
  %v3_183c8 = or i1 %v9_183c0, %v2_183c8
  br i1 %v3_183c8, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  br label %bb137

bb137:                                            ; preds = %bb135, %bb136
  %v1_183d468 = phi i32 [ %v1_183d469, %bb135 ], [ 16, %bb136 ]
  br i1 %v3_183c4, label %bb138, label %bb139

bb138:                                            ; preds = %bb137
  store i32 8, i32* @ip, align 4
  br label %bb139

bb139:                                            ; preds = %bb137, %bb138
  br i1 %v3_183c8, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  store i32 16, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %._crit_edge, %bb161, %bb139, %bb140
  %v1_183d4 = phi i32 [ %v1_183d4.pre, %._crit_edge ], [ 8, %bb161 ], [ %v1_183d468, %bb139 ], [ %v1_183d468, %bb140 ]
  %v6_183d4 = lshr i32 %v0_18404, %v1_183d4
  %v0_183dc = load i32, i32* %r8.global-to-local, align 4
  %v2_183dc = add i32 %v0_183dc, 36
  %v3_183dc = inttoptr i32 %v2_183dc to i32*
  %v4_183dc = load i32, i32* %v3_183dc, align 4
  %v2_183e0 = add i32 %v4_183dc, %v6_183d4
  %v3_183e0 = inttoptr i32 %v2_183e0 to i8*
  %v4_183e0 = load i8, i8* %v3_183e0, align 1
  %v6_183e0 = zext i8 %v4_183e0 to i32
  %v0_183e4 = load i32, i32* @ip, align 4
  %v2_183e4 = sub i32 %v0_183e4, %v6_183e0
  store i32 %v2_183e4, i32* %sl.global-to-local, align 4
  %v9_183e4 = icmp eq i32 %v0_183e4, %v6_183e0
  %v2_183ec = load i32, i32* @r7, align 4
  br i1 %v9_183e4, label %.thread11, label %dec_label_pc_18400

.thread11:                                        ; preds = %bb141
  %v3_183ec = sub i32 %v2_183ec, %v0_18404
  store i32 %v3_183ec, i32* @r4, align 4
  %v4_183f0 = urem i32 %v0_18404, 65536
  store i32 %v4_183f0, i32* %r8.global-to-local, align 4
  %v4_183f4 = udiv i32 %v0_18404, 65536
  store i32 %v4_183f4, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_184b8

dec_label_pc_18400:                               ; preds = %bb141
  %v6_18400 = shl i32 %v2_183ec, %v2_183e4
  %v6_18404 = shl i32 %v0_18404, %v2_183e4
  store i32 %v6_18404, i32* %r6.global-to-local, align 4
  %v1_18408 = sub i32 32, %v2_183e4
  %v6_1840c = lshr i32 %v2_183ec, %v1_18408
  store i32 %v6_1840c, i32* @r4, align 4
  %v1_18410 = load i32, i32* %sb.global-to-local, align 4
  %v7_18410 = lshr i32 %v1_18410, %v1_18408
  %v8_18410 = or i32 %v7_18410, %v6_18400
  %v3_18414 = udiv i32 %v6_18404, 65536
  store i32 %v3_18414, i32* @r7, align 4
  store i32 %v3_18414, i32* @r1, align 4
  store i32 %v6_1840c, i32* @r0, align 4
  %v0_18424 = call i32 @function_1343c()
  %v0_18428 = load i32, i32* @r7, align 4
  store i32 %v0_18424, i32* %fp.global-to-local, align 4
  %v0_18430 = load i32, i32* @r4, align 4
  %v2_18434 = call i32 @function_13538(i32 %v0_18430, i32 %v0_18428)
  %v0_18438 = load i32, i32* %r6.global-to-local, align 4
  %v3_1843c = urem i32 %v0_18438, 65536
  store i32 %v3_1843c, i32* %r8.global-to-local, align 4
  %v2_18440 = mul i32 %v0_18424, %v3_1843c
  %v3_18448 = udiv i32 %v8_18410, 65536
  %v4_1844c = mul i32 %v0_18428, 65536
  %v5_1844c = or i32 %v4_1844c, %v3_18448
  %tmp196 = icmp ugt i32 %v2_18440, %v5_1844c
  br i1 %tmp196, label %dec_label_pc_18458, label %dec_label_pc_18464

dec_label_pc_18458:                               ; preds = %dec_label_pc_18400
  %v2_18458 = add i32 %v0_18438, %v5_1844c
  %v3_18458 = icmp ult i32 %v2_18458, %v5_1844c
  %v1_1845c = add i32 %v0_18424, -1
  store i32 %v1_1845c, i32* %fp.global-to-local, align 4
  br i1 %v3_18458, label %dec_label_pc_18464, label %dec_label_pc_1879c

dec_label_pc_18464:                               ; preds = %dec_label_pc_18400, %dec_label_pc_1879c, %bb190, %dec_label_pc_18458
  %v1_18464 = phi i32 [ %v6_187a4, %bb190 ], [ %v2_18458, %dec_label_pc_18458 ], [ %v5_1844c, %dec_label_pc_18400 ], [ %v2_18458, %dec_label_pc_1879c ]
  %v2_18464 = sub i32 %v1_18464, %v2_18440
  store i32 %v2_18464, i32* @r4, align 4
  %v0_18468 = load i32, i32* @r7, align 4
  store i32 %v0_18468, i32* @r1, align 4
  store i32 %v2_18464, i32* @r0, align 4
  %v0_18470 = call i32 @function_1343c()
  %v0_18474 = load i32, i32* @r7, align 4
  store i32 %v0_18470, i32* @r5, align 4
  %v0_1847c = load i32, i32* @r4, align 4
  %v2_18480 = call i32 @function_13538(i32 %v0_1847c, i32 %v0_18474)
  %v0_18484 = load i32, i32* %r8.global-to-local, align 4
  %v1_18484 = load i32, i32* @r5, align 4
  %v2_18484 = mul i32 %v1_18484, %v0_18484
  %v3_18490 = urem i32 %v8_18410, 65536
  %v4_18494 = mul i32 %v0_18474, 65536
  %v5_18494 = or i32 %v4_18494, %v3_18490
  %tmp197 = icmp ugt i32 %v2_18484, %v5_18494
  br i1 %tmp197, label %dec_label_pc_184a0, label %dec_label_pc_184ac

dec_label_pc_184a0:                               ; preds = %dec_label_pc_18464
  %v1_184a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_184a0 = add i32 %v1_184a0, %v5_18494
  %v3_184a0 = icmp ult i32 %v2_184a0, %v5_18494
  %v1_184a4 = add i32 %v1_18484, -1
  br i1 %v3_184a0, label %dec_label_pc_184ac, label %dec_label_pc_1878c

dec_label_pc_184ac:                               ; preds = %dec_label_pc_18464, %dec_label_pc_1878c, %bb189, %dec_label_pc_184a0
  %v0_184b4 = phi i32 [ %v5_18790, %bb189 ], [ %v1_184a4, %dec_label_pc_184a0 ], [ %v1_18484, %dec_label_pc_18464 ], [ %v1_184a4, %dec_label_pc_1878c ]
  %v1_184b0 = phi i32 [ %v6_18794, %bb189 ], [ %v2_184a0, %dec_label_pc_184a0 ], [ %v5_18494, %dec_label_pc_18464 ], [ %v2_184a0, %dec_label_pc_1878c ]
  %v0_184ac = load i32, i32* %sb.global-to-local, align 4
  %v1_184ac = load i32, i32* %sl.global-to-local, align 4
  %v6_184ac = shl i32 %v0_184ac, %v1_184ac
  store i32 %v6_184ac, i32* %sb.global-to-local, align 4
  %v2_184b0 = sub i32 %v1_184b0, %v2_18484
  store i32 %v2_184b0, i32* @r4, align 4
  %v1_184b4 = load i32, i32* %fp.global-to-local, align 4
  %v4_184b4 = mul i32 %v1_184b4, 65536
  %v5_184b4 = or i32 %v4_184b4, %v0_184b4
  store i32 %v5_184b4, i32* %fp.global-to-local, align 4
  %v0_184b8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_184b8

dec_label_pc_184b8:                               ; preds = %.thread11, %dec_label_pc_184ac
  %v0_184bc = phi i32 [ %v3_183ec, %.thread11 ], [ %v2_184b0, %dec_label_pc_184ac ]
  %v0_184b8 = phi i32 [ %v4_183f4, %.thread11 ], [ %v0_184b8.pre, %dec_label_pc_184ac ]
  store i32 %v0_184b8, i32* @r1, align 4
  store i32 %v0_184bc, i32* @r0, align 4
  %v0_184c0 = call i32 @function_1343c()
  %v0_184c4 = load i32, i32* @r7, align 4
  store i32 %v0_184c0, i32* %sl.global-to-local, align 4
  %v0_184cc = load i32, i32* @r4, align 4
  %v2_184d0 = call i32 @function_13538(i32 %v0_184cc, i32 %v0_184c4)
  %v0_184d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_184d4 = mul i32 %v0_184c0, %v0_184d4
  %v0_184d8 = load i32, i32* %sb.global-to-local, align 4
  %v3_184d8 = udiv i32 %v0_184d8, 65536
  %v4_184dc = mul i32 %v0_184c4, 65536
  %v5_184dc = or i32 %v3_184d8, %v4_184dc
  %tmp198 = icmp ugt i32 %v2_184d4, %v5_184dc
  br i1 %tmp198, label %dec_label_pc_184e8, label %.thread96

dec_label_pc_184e8:                               ; preds = %dec_label_pc_184b8
  %v1_184e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_184e8 = add i32 %v1_184e8, %v5_184dc
  %v3_184e8 = icmp ult i32 %v2_184e8, %v5_184dc
  %v1_184ec = add i32 %v0_184c0, -1
  store i32 %v1_184ec, i32* %sl.global-to-local, align 4
  br i1 %v3_184e8, label %.thread96, label %dec_label_pc_184f4

dec_label_pc_184f4:                               ; preds = %dec_label_pc_184e8
  %tmp199 = icmp ugt i32 %v2_184d4, %v2_184e8
  br i1 %tmp199, label %bb143, label %.thread96

bb143:                                            ; preds = %dec_label_pc_184f4
  %v5_184f8 = add i32 %v0_184c0, -2
  store i32 %v5_184f8, i32* %sl.global-to-local, align 4
  %v6_184fc = add i32 %v2_184e8, %v1_184e8
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_184b8, %dec_label_pc_184f4, %dec_label_pc_184e8, %bb143
  %v1_18500 = phi i32 [ %v2_184e8, %dec_label_pc_184e8 ], [ %v5_184dc, %dec_label_pc_184b8 ], [ %v6_184fc, %bb143 ], [ %v2_184e8, %dec_label_pc_184f4 ]
  %v2_18500 = sub i32 %v1_18500, %v2_184d4
  store i32 %v2_18500, i32* @r4, align 4
  %v0_18504 = load i32, i32* @r7, align 4
  store i32 %v0_18504, i32* @r1, align 4
  store i32 %v2_18500, i32* @r0, align 4
  %v0_1850c = call i32 @function_1343c()
  %v0_18510 = load i32, i32* @r7, align 4
  store i32 %v0_1850c, i32* @r5, align 4
  %v0_18518 = load i32, i32* @r4, align 4
  %v2_1851c = call i32 @function_13538(i32 %v0_18518, i32 %v0_18510)
  %v0_18520 = load i32, i32* %r8.global-to-local, align 4
  %v1_18520 = load i32, i32* @r5, align 4
  %v2_18520 = mul i32 %v1_18520, %v0_18520
  %v0_18524 = load i32, i32* %sb.global-to-local, align 4
  %v3_18528 = urem i32 %v0_18524, 65536
  %v4_1852c = mul i32 %v0_18510, 65536
  %v5_1852c = or i32 %v3_18528, %v4_1852c
  %tmp200 = icmp ugt i32 %v2_18520, %v5_1852c
  br i1 %tmp200, label %dec_label_pc_18538, label %bb145

dec_label_pc_18538:                               ; preds = %.thread96
  %v1_18538 = load i32, i32* %r6.global-to-local, align 4
  %v2_18538 = add i32 %v1_18538, %v5_1852c
  %v3_18538 = icmp ult i32 %v2_18538, %v5_1852c
  %v1_1853c = add i32 %v1_18520, -1
  br i1 %v3_18538, label %bb145, label %dec_label_pc_18544

dec_label_pc_18544:                               ; preds = %dec_label_pc_18538
  %tmp201 = icmp ugt i32 %v2_18520, %v2_18538
  br i1 %tmp201, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_18544
  %v5_18548 = add i32 %v1_18520, -2
  br label %bb145

bb145:                                            ; preds = %.thread96, %dec_label_pc_18538, %dec_label_pc_18544, %bb144
  %v0_1854c = phi i32 [ %v1_1853c, %dec_label_pc_18538 ], [ %v1_18520, %.thread96 ], [ %v1_1853c, %dec_label_pc_18544 ], [ %v5_18548, %bb144 ]
  %v1_1854c = load i32, i32* %sl.global-to-local, align 4
  %v4_1854c = mul i32 %v1_1854c, 65536
  %v5_1854c = or i32 %v4_1854c, %v0_1854c
  br label %dec_label_pc_18370

dec_label_pc_18558:                               ; preds = %dec_label_pc_1835c
  %v3_1855c = icmp ult i32 %v1_18590, 65534
  br i1 %v3_1855c, label %dec_label_pc_185f0, label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %dec_label_pc_18558
  %v3_18564 = icmp ugt i32 %v1_18590, 16777214
  %v9_18564 = icmp eq i32 %v1_18590, 16777215
  %v2_18568 = xor i1 %v9_18564, true
  %v3_18568 = and i1 %v3_18564, %v2_18568
  br i1 %v3_18568, label %bb147, label %bb148

bb147:                                            ; preds = %dec_label_pc_18560
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18560, %bb147
  %v1_1857031 = phi i32 [ 16777215, %dec_label_pc_18560 ], [ 24, %bb147 ]
  %v2_1856c = xor i1 %v3_18564, true
  %v3_1856c = or i1 %v9_18564, %v2_1856c
  br i1 %v3_1856c, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_18570 = phi i32 [ %v1_1857031, %bb148 ], [ 16, %bb149 ]
  %v2_18570 = add nsw i32 %v1_18570, -1
  %v3_18570 = shl i32 1, %v2_18570
  %v4_18570 = and i32 %v3_18570, %v1_18590
  %v5_18570 = icmp ne i32 %v4_18570, 0
  %v6_18570 = lshr i32 %v1_18590, %v1_18570
  %v4_18578 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_1857c = add i32 %v4_18578, %v6_18570
  %v3_1857c = inttoptr i32 %v2_1857c to i8*
  %v4_1857c = load i8, i8* %v3_1857c, align 1
  %v6_1857c = zext i8 %v4_1857c to i32
  %v3_18580 = and i1 %v5_18570, %v2_18568
  br i1 %v3_18580, label %bb151, label %bb152

bb151:                                            ; preds = %bb150
  store i32 8, i32* @lr, align 4
  br label %bb152

bb152:                                            ; preds = %bb150, %bb151
  %v0_1858833 = phi i32 [ %v27_18214, %bb150 ], [ 8, %bb151 ]
  %v2_18584 = xor i1 %v5_18570, true
  %v3_18584 = or i1 %v9_18564, %v2_18584
  br i1 %v3_18584, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 16, i32* @lr, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %v0_18588 = phi i32 [ %v0_1858833, %bb152 ], [ 16, %bb153 ]
  %v2_18588 = sub i32 %v0_18588, %v6_1857c
  store i32 %v2_18588, i32* %fp.global-to-local, align 4
  %v9_18588 = icmp eq i32 %v0_18588, %v6_1857c
  br i1 %v9_18588, label %dec_label_pc_18590, label %dec_label_pc_1861c

dec_label_pc_18590:                               ; preds = %bb154, %bb169
  %v3_18590 = icmp uge i32 %v1_1829c, %v1_18590
  %v2_18594 = xor i1 %v3_18590, true
  %v3_18594 = or i1 %v9_1835c, %v2_18594
  br i1 %v3_18594, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_18590
  %v7_18594 = icmp ult i32 %v0_1825c, %v0_183a4
  br i1 %v7_18594, label %dec_label_pc_18368, label %.thread13

bb157:                                            ; preds = %dec_label_pc_18590
  br i1 %v3_18590, label %.thread13, label %dec_label_pc_18368

.thread13:                                        ; preds = %bb156, %bb157
  br label %dec_label_pc_18370

dec_label_pc_185a8:                               ; preds = %dec_label_pc_18214
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* %r8.global-to-local, align 4
  %v0_1823884 = load i32, i32* @r2, align 4
  store i32 %v0_1823884, i32* @r4, align 4
  %v0_1823c85 = load i32, i32* @r3, align 4
  %v0_185a8 = load i32, i32* @r0, align 4
  %v1_185a8 = sub i32 0, %v0_185a8
  store i32 %v1_185a8, i32* @r0, align 4
  %v2_185a8 = icmp eq i32 %v0_185a8, 0
  %v2_185ac = icmp eq i1 %v2_185a8, false
  %v5_185ac = sext i1 %v2_185ac to i32
  %v6_185ac = sub i32 %v5_185ac, %v0_18220
  store i32 -1, i32* @ip, align 4
  %v1_185b4 = icmp slt i32 %v0_1823c85, 0
  br i1 %v1_185b4, label %dec_label_pc_185c0, label %dec_label_pc_18250

dec_label_pc_185c0:                               ; preds = %dec_label_pc_185a8, %dec_label_pc_18248
  %v0_1823c89 = phi i32 [ %v0_1823c85, %dec_label_pc_185a8 ], [ %v0_1823c, %dec_label_pc_18248 ]
  %v0_1823886 = phi i32 [ %v0_1823884, %dec_label_pc_185a8 ], [ %v0_18238, %dec_label_pc_18248 ]
  %v0_1825428 = phi i32 [ %v6_185ac, %dec_label_pc_185a8 ], [ %v0_18220, %dec_label_pc_18248 ]
  %stack_var_-56.2 = phi i32 [ -1, %dec_label_pc_185a8 ], [ 0, %dec_label_pc_18248 ]
  %v1_185c0 = sub i32 0, %v0_1823886
  store i32 %v1_185c0, i32* @r4, align 4
  %v2_185c0 = icmp eq i32 %v0_1823886, 0
  %v2_185c4 = icmp eq i1 %v2_185c0, false
  %v5_185c4 = sext i1 %v2_185c4 to i32
  %v6_185c4 = sub i32 %v5_185c4, %v0_1823c89
  %v1_185cc = sub nsw i32 -1, %stack_var_-56.2
  br label %dec_label_pc_18250

dec_label_pc_185d8:                               ; preds = %dec_label_pc_183b4
  %v2_185d8 = icmp ugt i32 %v0_18404, 254
  %v7_185d8 = icmp eq i32 %v0_18404, 255
  %v2_185dc = xor i1 %v7_185d8, true
  %v3_185dc = and i1 %v2_185d8, %v2_185dc
  br i1 %v3_185dc, label %bb158, label %bb159

bb158:                                            ; preds = %dec_label_pc_185d8
  store i32 24, i32* @ip, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_185d8, %bb158
  %v2_185e0 = xor i1 %v2_185d8, true
  %v3_185e0 = or i1 %v7_185d8, %v2_185e0
  br i1 %v3_185e0, label %bb160, label %.thread98

bb160:                                            ; preds = %bb159
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb159, %bb160
  br i1 %v3_185dc, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %.thread98
  %v1_183d4.pre = load i32, i32* @r3, align 4
  br label %bb141

bb161:                                            ; preds = %.thread98
  br label %bb141

dec_label_pc_185f0:                               ; preds = %dec_label_pc_18558
  %v2_185f0 = icmp ugt i32 %v1_18590, 254
  %v7_185f0 = icmp eq i32 %v1_18590, 255
  %v2_185f4 = xor i1 %v7_185f0, true
  %v3_185f4 = and i1 %v2_185f0, %v2_185f4
  br i1 %v3_185f4, label %bb162, label %bb163

bb162:                                            ; preds = %dec_label_pc_185f0
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_185f0, %bb162
  %v1_185fc35 = phi i32 [ %v0_1823c90, %dec_label_pc_185f0 ], [ 8, %bb162 ]
  %v2_185f8 = xor i1 %v2_185f0, true
  %v3_185f8 = or i1 %v7_185f0, %v2_185f8
  br i1 %v3_185f8, label %bb164, label %bb165

bb164:                                            ; preds = %bb163
  br label %bb165

bb165:                                            ; preds = %bb163, %bb164
  %v1_185fc = phi i32 [ %v1_185fc35, %bb163 ], [ 0, %bb164 ]
  %v2_185fc = add i32 %v1_185fc, -1
  %v3_185fc = shl i32 1, %v2_185fc
  %v4_185fc = and i32 %v3_185fc, %v1_18590
  %v5_185fc = icmp ne i32 %v4_185fc, 0
  %v6_185fc = lshr i32 %v1_18590, %v1_185fc
  %v4_18604 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18608 = add i32 %v4_18604, %v6_185fc
  %v3_18608 = inttoptr i32 %v2_18608 to i8*
  %v4_18608 = load i8, i8* %v3_18608, align 1
  %v6_18608 = zext i8 %v4_18608 to i32
  %v3_1860c = and i1 %v5_185fc, %v2_185f4
  br i1 %v3_1860c, label %bb166, label %bb167

bb166:                                            ; preds = %bb165
  store i32 24, i32* @lr, align 4
  br label %bb167

bb167:                                            ; preds = %bb165, %bb166
  %v0_1861437 = phi i32 [ %v27_18214, %bb165 ], [ 24, %bb166 ]
  %v2_18610 = xor i1 %v5_185fc, true
  %v3_18610 = or i1 %v7_185f0, %v2_18610
  br i1 %v3_18610, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  store i32 32, i32* @lr, align 4
  br label %bb169

bb169:                                            ; preds = %bb167, %bb168
  %v0_18614 = phi i32 [ %v0_1861437, %bb167 ], [ 32, %bb168 ]
  %v2_18614 = sub i32 %v0_18614, %v6_18608
  store i32 %v2_18614, i32* %fp.global-to-local, align 4
  %v9_18614 = icmp eq i32 %v0_18614, %v6_18608
  br i1 %v9_18614, label %dec_label_pc_18590, label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %bb154, %bb169
  %v1_18628 = phi i32 [ %v2_18588, %bb154 ], [ %v2_18614, %bb169 ]
  %v6_1861c = shl i32 %v1_18590, %v1_18628
  %v1_18620 = sub i32 32, %v1_18628
  %v7_18624 = lshr i32 %v0_183a4, %v1_18620
  %v8_18624 = or i32 %v7_18624, %v6_1861c
  store i32 %v8_18624, i32* %r8.global-to-local, align 4
  %v6_18628 = shl i32 %v1_1829c, %v1_18628
  %v6_1862c = lshr i32 %v1_1829c, %v1_18620
  store i32 %v6_1862c, i32* @r4, align 4
  %v7_18630 = lshr i32 %v0_1825c, %v1_18620
  %v8_18630 = or i32 %v7_18630, %v6_18628
  %v3_18634 = udiv i32 %v8_18624, 65536
  store i32 %v3_18634, i32* %sl.global-to-local, align 4
  store i32 %v3_18634, i32* @r1, align 4
  store i32 %v6_1862c, i32* @r0, align 4
  %v0_18644 = call i32 @function_1343c()
  %v0_18650 = load i32, i32* @r4, align 4
  %v2_18654 = call i32 @function_13538(i32 %v0_18650, i32 %v3_18634)
  %v0_18658 = load i32, i32* %r8.global-to-local, align 4
  %v3_18660 = urem i32 %v0_18658, 65536
  store i32 %v3_18660, i32* @r7, align 4
  %v2_18664 = mul i32 %v3_18660, %v0_18644
  %v3_1866c = udiv i32 %v8_18630, 65536
  %v4_18670 = mul nuw i32 %v3_18634, 65536
  %v5_18670 = or i32 %v4_18670, %v3_1866c
  %v9_18674 = icmp eq i32 %v2_18664, %v5_18670
  %v0_18678 = load i32, i32* %r6.global-to-local, align 4
  %v1_18678 = load i32, i32* %fp.global-to-local, align 4
  %v2_18678 = add i32 %v1_18678, -1
  %v3_18678 = lshr i32 -2147483648, %v2_18678
  %v4_18678 = and i32 %v3_18678, %v0_18678
  %v6_18678 = shl i32 %v0_18678, %v1_18678
  store i32 %v6_18678, i32* @r5, align 4
  %v2_1867c = icmp eq i32 %v4_18678, 0
  %v3_1867c = or i1 %v9_18674, %v2_1867c
  br i1 %v3_1867c, label %dec_label_pc_18694, label %dec_label_pc_18680

dec_label_pc_18680:                               ; preds = %dec_label_pc_1861c
  %v2_18684 = add i32 %v0_18658, %v5_18670
  %v3_18684 = icmp ult i32 %v2_18684, %v5_18670
  %v1_18688 = add i32 %v0_18644, -1
  br i1 %v3_18684, label %dec_label_pc_18694, label %dec_label_pc_18778

dec_label_pc_18694:                               ; preds = %.thread104, %dec_label_pc_18680, %dec_label_pc_1861c
  %v1_18694 = phi i32 [ %v5_18670, %dec_label_pc_1861c ], [ %v2_18684, %dec_label_pc_18680 ], [ %v1_1869441, %.thread104 ]
  %stack_var_-52.0 = phi i32 [ %v0_18644, %dec_label_pc_1861c ], [ %v1_18688, %dec_label_pc_18680 ], [ %v4_18784.v1_18688, %.thread104 ]
  %v2_18694 = sub i32 %v1_18694, %v2_18664
  store i32 %v2_18694, i32* @r4, align 4
  %v0_18698 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18698, i32* @r1, align 4
  store i32 %v2_18694, i32* @r0, align 4
  %v0_186a0 = call i32 @function_1343c()
  store i32 %v0_186a0, i32* %r6.global-to-local, align 4
  %v0_186ac = load i32, i32* @r4, align 4
  %v2_186b0 = call i32 @function_13538(i32 %v0_186ac, i32 %v0_18698)
  %v0_186b4 = load i32, i32* @r7, align 4
  %v2_186b4 = mul i32 %v0_186a0, %v0_186b4
  %v3_186c0 = urem i32 %v8_18630, 65536
  %v4_186c4 = mul i32 %v0_18698, 65536
  %v5_186c4 = or i32 %v4_186c4, %v3_186c0
  %tmp202 = icmp ugt i32 %v2_186b4, %v5_186c4
  br i1 %tmp202, label %dec_label_pc_186d0, label %dec_label_pc_186dc

dec_label_pc_186d0:                               ; preds = %dec_label_pc_18694
  %v1_186d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_186d0 = add i32 %v1_186d0, %v5_186c4
  %v3_186d0 = icmp ult i32 %v2_186d0, %v5_186c4
  %v1_186d4 = add i32 %v0_186a0, -1
  store i32 %v1_186d4, i32* %r6.global-to-local, align 4
  br i1 %v3_186d0, label %dec_label_pc_186dc, label %dec_label_pc_18768

dec_label_pc_186dc:                               ; preds = %dec_label_pc_18694, %dec_label_pc_18768, %bb187, %dec_label_pc_186d0
  %v0_186e4 = phi i32 [ %v5_18770, %bb187 ], [ %v1_186d4, %dec_label_pc_186d0 ], [ %v0_186a0, %dec_label_pc_18694 ], [ %v1_186d4, %dec_label_pc_18768 ]
  %v1_186e0 = phi i32 [ %v6_1876c, %bb187 ], [ %v2_186d0, %dec_label_pc_186d0 ], [ %v5_186c4, %dec_label_pc_18694 ], [ %v2_186d0, %dec_label_pc_18768 ]
  %v2_186e0 = sub i32 %v1_186e0, %v2_186b4
  %v4_186e4 = mul i32 %stack_var_-52.0, 65536
  %v5_186e4 = or i32 %v0_186e4, %v4_186e4
  %v3_186e8 = udiv i32 %v5_186e4, 65536
  %v0_186ec = load i32, i32* @r5, align 4
  %v3_186ec = udiv i32 %v0_186ec, 65536
  %tmp203 = mul i32 %v3_186e8, -65536
  %v5_186f0 = add i32 %tmp203, -1
  %v6_186f0 = and i32 %v5_186e4, %v5_186f0
  %tmp204 = mul i32 %v3_186ec, -65536
  %v5_186f4 = add i32 %tmp204, -1
  %v6_186f4 = and i32 %v0_186ec, %v5_186f4
  %v2_186f8 = mul i32 %v6_186f4, %v6_186f0
  %v2_186fc = mul i32 %v6_186f4, %v3_186e8
  %v2_18700 = mul i32 %v3_186ec, %v6_186f0
  %v2_18704 = mul nuw i32 %v3_186ec, %v3_186e8
  %v2_18708 = add i32 %v2_186fc, %v2_18700
  %v3_18708 = icmp ult i32 %v2_18708, %v2_186fc
  br i1 %v3_18708, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_186dc
  %v2_1870c = add i32 %v2_18704, 65536
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_186dc, %bb171
  %v0_18714 = phi i32 [ %v2_18704, %dec_label_pc_186dc ], [ %v2_1870c, %bb171 ]
  %v4_18710 = mul i32 %v2_18708, 65536
  %v5_18710 = add i32 %v4_18710, %v2_186f8
  %v2_18714 = and i32 %v2_18708, 32768
  %v3_18714 = icmp ne i32 %v2_18714, 0
  %v4_18714 = udiv i32 %v2_18708, 65536
  %v7_18714 = zext i1 %v3_18714 to i32
  %v6_18714 = add nuw nsw i32 %v7_18714, %v4_18714
  %v8_18714 = add i32 %v6_18714, %v0_18714
  %v3_18718 = icmp ult i32 %v2_186e0, %v8_18714
  br i1 %v3_18718, label %dec_label_pc_18740, label %dec_label_pc_18720

dec_label_pc_18720:                               ; preds = %bb172
  %v9_18718 = icmp eq i32 %v2_186e0, %v8_18714
  %. = zext i1 %v9_18718 to i32
  %v1_18728 = load i32, i32* %sb.global-to-local, align 4
  %v2_18728 = load i32, i32* %fp.global-to-local, align 4
  %v7_18728 = shl i32 %v1_18728, %v2_18728
  %v9_18728 = icmp uge i32 %v5_18710, %v7_18728
  %v15_18728 = icmp eq i32 %v5_18710, %v7_18728
  %v2_1872c = xor i1 %v9_18728, true
  %v3_1872c = or i1 %v15_18728, %v2_1872c
  br i1 %v3_1872c, label %bb175, label %bb176

bb175:                                            ; preds = %dec_label_pc_18720
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_18720, %bb175
  %v4_18730 = phi i32 [ %., %dec_label_pc_18720 ], [ 0, %bb175 ]
  %v2_18730 = xor i1 %v15_18728, true
  %v3_18730 = and i1 %v9_18728, %v2_18730
  br i1 %v3_18730, label %bb177, label %thread-pre-split

bb177:                                            ; preds = %bb176
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb176, %bb177
  %v2_18734 = icmp eq i32 %v4_18730, 0
  br i1 %v2_18734, label %bb178, label %dec_label_pc_18740

bb178:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_18370

dec_label_pc_18740:                               ; preds = %bb172, %thread-pre-split
  %v1_18740 = add i32 %v5_186e4, -1
  br label %dec_label_pc_18370

dec_label_pc_1874c:                               ; preds = %dec_label_pc_1826c
  %v3_18750 = icmp ugt i32 %v0_183a4, 16777214
  %v9_18750 = icmp eq i32 %v0_183a4, 16777215
  %v2_18754 = xor i1 %v9_18750, true
  %v3_18754 = and i1 %v3_18750, %v2_18754
  br i1 %v3_18754, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_1874c
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_1874c, %bb180
  %v1_1828855 = phi i32 [ 16777215, %dec_label_pc_1874c ], [ 24, %bb180 ]
  %v2_18758 = xor i1 %v3_18750, true
  %v3_18758 = or i1 %v9_18750, %v2_18758
  br i1 %v3_18758, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  %v1_1828854 = phi i32 [ %v1_1828855, %bb181 ], [ 16, %bb182 ]
  br i1 %v3_18754, label %bb184, label %bb185

bb184:                                            ; preds = %bb183
  br label %bb185

bb185:                                            ; preds = %bb183, %bb184
  %v0_1829859 = phi i32 [ %v0_1829860, %bb183 ], [ 8, %bb184 ]
  br i1 %v3_18758, label %bb186, label %bb126

bb186:                                            ; preds = %bb185
  br label %bb126

dec_label_pc_18768:                               ; preds = %dec_label_pc_186d0
  %tmp205 = icmp ugt i32 %v2_186b4, %v2_186d0
  br i1 %tmp205, label %bb187, label %dec_label_pc_186dc

bb187:                                            ; preds = %dec_label_pc_18768
  %v6_1876c = add i32 %v2_186d0, %v1_186d0
  %v5_18770 = add i32 %v0_186a0, -2
  store i32 %v5_18770, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_186dc

dec_label_pc_18778:                               ; preds = %dec_label_pc_18680
  %tmp206 = icmp ugt i32 %v2_18664, %v2_18684
  br i1 %tmp206, label %bb188, label %.thread104

bb188:                                            ; preds = %dec_label_pc_18778
  %v5_1877c = add i32 %v0_18644, -2
  %v6_18780 = add i32 %v2_18684, %v0_18658
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_18778, %bb188
  %v4_18784102 = phi i32 [ %v5_1877c, %bb188 ], [ %v1_18688, %dec_label_pc_18778 ]
  %v1_1869441 = phi i32 [ %v6_18780, %bb188 ], [ %v2_18684, %dec_label_pc_18778 ]
  %v4_18784.v1_18688 = select i1 %tmp206, i32 %v4_18784102, i32 %v1_18688
  br label %dec_label_pc_18694

dec_label_pc_1878c:                               ; preds = %dec_label_pc_184a0
  %tmp207 = icmp ugt i32 %v2_18484, %v2_184a0
  br i1 %tmp207, label %bb189, label %dec_label_pc_184ac

bb189:                                            ; preds = %dec_label_pc_1878c
  %v5_18790 = add i32 %v1_18484, -2
  %v6_18794 = add i32 %v2_184a0, %v1_184a0
  br label %dec_label_pc_184ac

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18458
  %tmp208 = icmp ugt i32 %v2_18440, %v2_18458
  br i1 %tmp208, label %bb190, label %dec_label_pc_18464

bb190:                                            ; preds = %dec_label_pc_1879c
  %v5_187a0 = add i32 %v0_18424, -2
  store i32 %v5_187a0, i32* %fp.global-to-local, align 4
  %v6_187a4 = add i32 %v2_18458, %v0_18438
  br label %dec_label_pc_18464

; uselistorder directives
  uselistorder i1 %tmp206, { 1, 0 }
  uselistorder i32 %v5_18770, { 1, 0 }
  uselistorder i32 %v1_1828854, { 1, 0 }
  uselistorder i1 %v9_18750, { 1, 0 }
  uselistorder i1 %v9_18728, { 1, 0 }
  uselistorder i32 %v7_18728, { 1, 0 }
  uselistorder i32 %v2_18708, { 1, 2, 0, 3 }
  uselistorder i32 %v2_186fc, { 1, 0 }
  uselistorder i32 %v3_186ec, { 2, 1, 0 }
  uselistorder i32 %v0_186ec, { 1, 0 }
  uselistorder i32 %v3_186e8, { 2, 1, 0 }
  uselistorder i32 %v5_186e4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_186d0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_186c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_186b4, { 0, 2, 1 }
  uselistorder i32 %v0_186a0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_18698, { 1, 0, 2 }
  uselistorder i32 %v1_18688, { 1, 0, 2 }
  uselistorder i32 %v2_18684, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_18678, { 1, 0 }
  uselistorder i32 %v0_18678, { 1, 0 }
  uselistorder i32 %v5_18670, { 1, 2, 0, 3 }
  uselistorder i32 %v3_18660, { 1, 0 }
  uselistorder i32 %v0_18658, { 1, 2, 0 }
  uselistorder i32 %v0_18644, { 1, 3, 2, 0 }
  uselistorder i32 %v3_18634, { 1, 0, 3, 2 }
  uselistorder i32 %v0_18614, { 1, 0 }
  uselistorder i32 %v6_18608, { 1, 0 }
  uselistorder i1 %v2_185f4, { 1, 0 }
  uselistorder i1 %v7_185f0, { 1, 2, 0 }
  uselistorder i1 %v7_185d8, { 1, 0 }
  uselistorder i32 %v1_185c0, { 1, 0 }
  uselistorder i32 %v0_1823886, { 1, 0 }
  uselistorder i32 %v0_1823c89, { 1, 0 }
  uselistorder i32 %v6_185ac, { 1, 0 }
  uselistorder i32 %v0_1823c85, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1823884, { 0, 2, 1 }
  uselistorder i1 %v3_18590, { 1, 0 }
  uselistorder i32 %v0_18588, { 1, 0 }
  uselistorder i32 %v6_1857c, { 1, 0 }
  uselistorder i1 %v2_18568, { 1, 0 }
  uselistorder i1 %v9_18564, { 1, 2, 0 }
  uselistorder i32 %v5_1852c, { 2, 1, 0 }
  uselistorder i32 %v1_18520, { 2, 1, 3, 0 }
  uselistorder i32 %v2_184e8, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_184dc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_184d4, { 2, 0, 1 }
  uselistorder i32 %v0_184c0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_184a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18494, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18484, { 0, 2, 1 }
  uselistorder i32 %v1_18484, { 2, 1, 3, 0 }
  uselistorder i32 %v2_18458, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_1844c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18440, { 0, 2, 1 }
  uselistorder i32 %v3_1843c, { 1, 0 }
  uselistorder i32 %v0_18438, { 1, 2, 0 }
  uselistorder i32 %v0_18424, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18414, { 1, 0 }
  uselistorder i32 %v4_183f4, { 1, 0 }
  uselistorder i32 %v2_183ec, { 1, 0, 2 }
  uselistorder i32 %v6_183e0, { 1, 0 }
  uselistorder i1 %v9_183c0, { 1, 0 }
  uselistorder i32 %v0_18404, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v5_18330, { 2, 1, 0 }
  uselistorder i32 %v1_18324, { 2, 1, 3, 0 }
  uselistorder i32 %v0_18308, { 1, 0, 2 }
  uselistorder i32 %v2_182ec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_182e0, { 2, 3, 1, 0 }
  uselistorder i32 %v2_182d8, { 2, 0, 1 }
  uselistorder i32 %v3_182d4, { 1, 0 }
  uselistorder i32 %v0_182d0, { 1, 2, 0 }
  uselistorder i32 %v0_182bc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_182ac, { 1, 0 }
  uselistorder i32 %v3_182ac24, { 1, 0 }
  uselistorder i32 %v6_18294, { 1, 0 }
  uselistorder i32 %v0_18298, { 1, 0 }
  uselistorder i1 %v7_18274, { 1, 0 }
  uselistorder i32 %v0_1825c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_1829c, { 6, 7, 5, 1, 2, 3, 4, 0, 8 }
  uselistorder i32 %v0_183a4, { 5, 6, 12, 11, 2, 9, 3, 1, 4, 7, 8, 10, 0, 13 }
  uselistorder i32 %v0_1829860, { 1, 0 }
  uselistorder i32 %v1_18590, { 5, 6, 2, 12, 11, 4, 7, 3, 8, 9, 10, 0, 1, 13 }
  uselistorder i32 %v0_1823c90, { 1, 0 }
  uselistorder i32 %v0_1823c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_18238, { 1, 0, 2 }
  uselistorder i32 %v0_18220, { 1, 2, 0, 3 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 15, 5, 6, 3, 4, 7, 14, 11, 12, 8, 13, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 9, 10, 3, 4, 5, 6, 11, 12, 7, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 2, 3, 1, 4, 5, 7, 6, 8, 9 }
  uselistorder i32 65535, { 110, 111, 112, 113, 0, 1, 15, 14, 16, 4, 5, 27, 53, 28, 54, 29, 55, 17, 18, 6, 30, 56, 31, 57, 58, 19, 59, 7, 32, 60, 33, 61, 34, 62, 63, 64, 35, 65, 66, 67, 68, 36, 69, 70, 71, 20, 72, 8, 73, 74, 75, 76, 37, 77, 38, 78, 79, 21, 80, 9, 81, 82, 39, 83, 40, 84, 41, 85, 42, 86, 22, 10, 87, 88, 11, 43, 89, 44, 90, 23, 12, 91, 92, 13, 45, 93, 46, 94, 95, 96, 24, 97, 98, 2, 47, 99, 48, 100, 49, 101, 102, 103, 25, 104, 105, 3, 50, 106, 51, 107, 52, 108, 26, 109 }
  uselistorder label %.thread104, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_18740, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_186dc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1861c, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %.thread98, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_18590, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 3, 2, 1, 0 }
  uselistorder label %.thread96, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_184b8, { 1, 0 }
  uselistorder label %dec_label_pc_184ac, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18464, { 2, 1, 3, 0 }
  uselistorder label %bb141, { 1, 0, 3, 2 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %dec_label_pc_183b4, { 1, 0 }
  uselistorder label %dec_label_pc_18390, { 1, 0 }
  uselistorder label %dec_label_pc_18370, { 2, 1, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_18368, { 2, 0, 1 }
  uselistorder label %bb132, { 3, 2, 1, 0 }
  uselistorder label %.thread95, { 3, 1, 2, 0 }
  uselistorder label %bb129, { 1, 0 }
  uselistorder label %bb126, { 0, 1, 3, 2 }
  uselistorder label %.thread94, { 1, 0 }
  uselistorder label %bb123, { 1, 0 }
  uselistorder label %dec_label_pc_18250, { 2, 0, 1 }
}

define i32 @function_187b4() local_unnamed_addr {
dec_label_pc_187b4:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_187b4 = load i32, i32* @r7, align 4
  %v27_187b4 = load i32, i32* @lr, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_187c8 = load i32, i32* @r3, align 4
  %v2_187c8 = icmp eq i32 %v0_187c8, 0
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* @r4, align 4
  %v0_187d0 = load i32, i32* @r1, align 4
  store i32 %v0_187d0, i32* %r6.global-to-local, align 4
  %v0_187d8 = load i32, i32* @r2, align 4
  store i32 %v0_187d8, i32* @r5, align 4
  %v0_187dc = load i32, i32* @r0, align 4
  store i32 %v0_187dc, i32* %sb.global-to-local, align 4
  br i1 %v2_187c8, label %dec_label_pc_187e4, label %dec_label_pc_188e0

dec_label_pc_187e4:                               ; preds = %dec_label_pc_187b4
  %tmp = icmp ugt i32 %v0_187d8, %v0_187d0
  br i1 %tmp, label %dec_label_pc_187ec, label %dec_label_pc_18954

dec_label_pc_187ec:                               ; preds = %dec_label_pc_187e4
  %v3_187f0 = icmp ult i32 %v0_187d8, 65534
  br i1 %v3_187f0, label %dec_label_pc_18c84, label %dec_label_pc_187f4

dec_label_pc_187f4:                               ; preds = %dec_label_pc_187ec
  %v3_187f8 = icmp ugt i32 %v0_187d8, 16777214
  %v9_187f8 = icmp eq i32 %v0_187d8, 16777215
  %v2_187fc = xor i1 %v9_187f8, true
  %v3_187fc = and i1 %v3_187f8, %v2_187fc
  br i1 %v3_187fc, label %bb, label %bb86

bb:                                               ; preds = %dec_label_pc_187f4
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_187f4, %bb
  %v1_1880c35 = phi i32 [ 16777215, %dec_label_pc_187f4 ], [ 24, %bb ]
  %v2_18800 = xor i1 %v3_187f8, true
  %v3_18800 = or i1 %v9_187f8, %v2_18800
  br i1 %v3_18800, label %bb87, label %bb88

bb87:                                             ; preds = %bb86
  br label %bb88

bb88:                                             ; preds = %bb86, %bb87
  %v1_1880c34 = phi i32 [ %v1_1880c35, %bb86 ], [ 16, %bb87 ]
  br i1 %v3_187fc, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  store i32 8, i32* @ip, align 4
  br label %bb90

bb90:                                             ; preds = %bb88, %bb89
  br i1 %v3_18800, label %bb91, label %bb92

bb91:                                             ; preds = %bb90
  store i32 16, i32* @ip, align 4
  br label %bb92

bb92:                                             ; preds = %bb147, %.thread62, %bb90, %bb91
  %v1_1880c = phi i32 [ 8, %bb147 ], [ 0, %.thread62 ], [ %v1_1880c34, %bb90 ], [ %v1_1880c34, %bb91 ]
  %v6_1880c = lshr i32 %v0_187d8, %v1_1880c
  %v4_18814 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18818 = add i32 %v4_18814, %v6_1880c
  %v3_18818 = inttoptr i32 %v2_18818 to i8*
  %v4_18818 = load i8, i8* %v3_18818, align 1
  %v6_18818 = zext i8 %v4_18818 to i32
  %v0_1881c = load i32, i32* @ip, align 4
  %v2_1881c = sub i32 %v0_1881c, %v6_18818
  %v9_1881c = icmp eq i32 %v0_1881c, %v6_18818
  br i1 %v9_1881c, label %.critedge, label %.thread2

.thread2:                                         ; preds = %bb92
  %v7_18820 = shl i32 %v0_187d0, %v2_1881c
  %v2_18824 = sub i32 32, %v2_1881c
  %v7_18828 = shl i32 %v0_187d8, %v2_1881c
  store i32 %v7_18828, i32* @r5, align 4
  %v8_1882c = lshr i32 %v0_187dc, %v2_18824
  %v9_1882c = or i32 %v8_1882c, %v7_18820
  store i32 %v9_1882c, i32* %r6.global-to-local, align 4
  %v3_18830 = udiv i32 %v7_18828, 65536
  store i32 %v3_18830, i32* %r8.global-to-local, align 4
  store i32 %v3_18830, i32* @r1, align 4
  store i32 %v9_1882c, i32* @r0, align 4
  %v7_1883c = shl i32 %v0_187dc, %v2_1881c
  store i32 %v7_1883c, i32* %sb.global-to-local, align 4
  br label %bb94

.critedge:                                        ; preds = %bb92
  %v3_18830.c = udiv i32 %v0_187d8, 65536
  store i32 %v3_18830.c, i32* %r8.global-to-local, align 4
  store i32 %v3_18830.c, i32* @r1, align 4
  store i32 %v0_187d0, i32* @r0, align 4
  br label %bb94

bb94:                                             ; preds = %.critedge, %.thread2
  %v0_18840 = call i32 @function_1343c()
  %v0_18844 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18840, i32* %sl.global-to-local, align 4
  %v0_1884c = load i32, i32* %r6.global-to-local, align 4
  %v2_18850 = call i32 @function_13538(i32 %v0_1884c, i32 %v0_18844)
  %v0_18854 = load i32, i32* @r5, align 4
  %v3_18858 = urem i32 %v0_18854, 65536
  store i32 %v3_18858, i32* @r7, align 4
  %v2_1885c = mul i32 %v0_18840, %v3_18858
  %v0_18860 = load i32, i32* %sb.global-to-local, align 4
  %v3_18860 = udiv i32 %v0_18860, 65536
  %v4_18864 = mul i32 %v0_18844, 65536
  %v5_18864 = or i32 %v3_18860, %v4_18864
  %tmp152 = icmp ugt i32 %v2_1885c, %v5_18864
  br i1 %tmp152, label %dec_label_pc_18870, label %.thread57

dec_label_pc_18870:                               ; preds = %bb94
  %v2_18870 = add i32 %v5_18864, %v0_18854
  %v3_18870 = icmp ult i32 %v2_18870, %v5_18864
  %v1_18874 = add i32 %v0_18840, -1
  store i32 %v1_18874, i32* %sl.global-to-local, align 4
  br i1 %v3_18870, label %.thread57, label %dec_label_pc_1887c

dec_label_pc_1887c:                               ; preds = %dec_label_pc_18870
  %tmp153 = icmp ugt i32 %v2_1885c, %v2_18870
  br i1 %tmp153, label %bb95, label %.thread57

bb95:                                             ; preds = %dec_label_pc_1887c
  %v5_18880 = add i32 %v0_18840, -2
  store i32 %v5_18880, i32* %sl.global-to-local, align 4
  %v6_18884 = add i32 %v2_18870, %v0_18854
  br label %.thread57

.thread57:                                        ; preds = %bb94, %dec_label_pc_1887c, %dec_label_pc_18870, %bb95
  %v1_18888 = phi i32 [ %v2_18870, %dec_label_pc_18870 ], [ %v5_18864, %bb94 ], [ %v6_18884, %bb95 ], [ %v2_18870, %dec_label_pc_1887c ]
  %v2_18888 = sub i32 %v1_18888, %v2_1885c
  store i32 %v2_18888, i32* @r4, align 4
  %v0_1888c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1888c, i32* @r1, align 4
  store i32 %v2_18888, i32* @r0, align 4
  %v0_18894 = call i32 @function_1343c()
  store i32 %v0_18894, i32* %r6.global-to-local, align 4
  %v0_188a0 = load i32, i32* @r4, align 4
  %v2_188a4 = call i32 @function_13538(i32 %v0_188a0, i32 %v0_1888c)
  %v0_188a8 = load i32, i32* @r7, align 4
  %v2_188a8 = mul i32 %v0_18894, %v0_188a8
  %v0_188ac = load i32, i32* %sb.global-to-local, align 4
  %v3_188b0 = urem i32 %v0_188ac, 65536
  %v4_188b4 = mul i32 %v0_1888c, 65536
  %v5_188b4 = or i32 %v3_188b0, %v4_188b4
  %tmp154 = icmp ugt i32 %v2_188a8, %v5_188b4
  br i1 %tmp154, label %dec_label_pc_188c0, label %bb97

dec_label_pc_188c0:                               ; preds = %.thread57
  %v1_188c0 = load i32, i32* @r5, align 4
  %v2_188c0 = add i32 %v1_188c0, %v5_188b4
  %v3_188c0 = icmp ult i32 %v2_188c0, %v5_188b4
  %v1_188c4 = add i32 %v0_18894, -1
  store i32 %v1_188c4, i32* %r6.global-to-local, align 4
  br i1 %v3_188c0, label %bb97, label %dec_label_pc_188cc

dec_label_pc_188cc:                               ; preds = %dec_label_pc_188c0
  %tmp155 = icmp ugt i32 %v2_188a8, %v2_188c0
  br i1 %tmp155, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_188cc
  %v5_188d0 = add i32 %v0_18894, -2
  store i32 %v5_188d0, i32* %r6.global-to-local, align 4
  br label %bb97

bb97:                                             ; preds = %.thread57, %dec_label_pc_188c0, %dec_label_pc_188cc, %bb96
  %v0_188d4 = phi i32 [ %v1_188c4, %dec_label_pc_188c0 ], [ %v0_18894, %.thread57 ], [ %v1_188c4, %dec_label_pc_188cc ], [ %v5_188d0, %bb96 ]
  %v1_188d4 = load i32, i32* %sl.global-to-local, align 4
  %v4_188d4 = mul i32 %v1_188d4, 65536
  %v5_188d4 = or i32 %v4_188d4, %v0_188d4
  br label %dec_label_pc_18940

dec_label_pc_188e0:                               ; preds = %dec_label_pc_187b4
  %v3_188e0 = icmp uge i32 %v0_187c8, %v0_187d0
  %v9_188e0 = icmp eq i32 %v0_187d0, %v0_187c8
  %v2_188e8 = xor i1 %v9_188e0, true
  %v3_188e8 = and i1 %v3_188e0, %v2_188e8
  br i1 %v3_188e8, label %dec_label_pc_18938, label %dec_label_pc_188ec

dec_label_pc_188ec:                               ; preds = %dec_label_pc_188e0
  %v3_188f0 = icmp ult i32 %v0_187c8, 65534
  br i1 %v3_188f0, label %dec_label_pc_18b10, label %dec_label_pc_188f4

dec_label_pc_188f4:                               ; preds = %dec_label_pc_188ec
  %v3_188f8 = icmp ugt i32 %v0_187c8, 16777214
  %v9_188f8 = icmp eq i32 %v0_187c8, 16777215
  %v2_188fc = xor i1 %v9_188f8, true
  %v3_188fc = and i1 %v3_188f8, %v2_188fc
  br i1 %v3_188fc, label %bb99, label %bb100

bb99:                                             ; preds = %dec_label_pc_188f4
  br label %bb100

bb100:                                            ; preds = %dec_label_pc_188f4, %bb99
  %v1_1890412 = phi i32 [ 16777215, %dec_label_pc_188f4 ], [ 24, %bb99 ]
  %v2_18900 = xor i1 %v3_188f8, true
  %v3_18900 = or i1 %v9_188f8, %v2_18900
  br i1 %v3_18900, label %bb101, label %bb102

bb101:                                            ; preds = %bb100
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  %v1_18904 = phi i32 [ %v1_1890412, %bb100 ], [ 16, %bb101 ]
  %v2_18904 = add nsw i32 %v1_18904, -1
  %v3_18904 = shl i32 1, %v2_18904
  %v4_18904 = and i32 %v3_18904, %v0_187c8
  %v5_18904 = icmp ne i32 %v4_18904, 0
  %v6_18904 = lshr i32 %v0_187c8, %v1_18904
  %v4_1890c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18910 = add i32 %v4_1890c, %v6_18904
  %v3_18910 = inttoptr i32 %v2_18910 to i8*
  %v4_18910 = load i8, i8* %v3_18910, align 1
  %v6_18910 = zext i8 %v4_18910 to i32
  %v3_18914 = and i1 %v5_18904, %v2_188fc
  br i1 %v3_18914, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  store i32 8, i32* @lr, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_1891c14 = phi i32 [ %v27_187b4, %bb102 ], [ 8, %bb103 ]
  %v2_18918 = xor i1 %v5_18904, true
  %v3_18918 = or i1 %v9_188f8, %v2_18918
  br i1 %v3_18918, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  store i32 16, i32* @lr, align 4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v0_1891c = phi i32 [ %v0_1891c14, %bb104 ], [ 16, %bb105 ]
  %v2_1891c = sub i32 %v0_1891c, %v6_18910
  store i32 %v2_1891c, i32* %fp.global-to-local, align 4
  %v9_1891c = icmp eq i32 %v0_1891c, %v6_18910
  br i1 %v9_1891c, label %dec_label_pc_18924, label %dec_label_pc_18b3c

dec_label_pc_18924:                               ; preds = %bb106, %bb130
  %v1_1892c = phi i32 [ %v2_1891c, %bb106 ], [ %v2_18b34, %bb130 ]
  %v3_18924 = icmp uge i32 %v0_187d0, %v0_187c8
  %v2_18928 = xor i1 %v3_18924, true
  %v3_18928 = or i1 %v9_188e0, %v2_18928
  br i1 %v3_18928, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_18924
  %v7_18928 = icmp ult i32 %v0_187dc, %v0_187d8
  br i1 %v7_18928, label %dec_label_pc_18938, label %.thread3

bb109:                                            ; preds = %dec_label_pc_18924
  br i1 %v3_18924, label %.thread3, label %dec_label_pc_18938

.thread3:                                         ; preds = %bb108, %bb109
  br label %dec_label_pc_18940

dec_label_pc_18938:                               ; preds = %bb108, %bb109, %dec_label_pc_188e0
  br label %dec_label_pc_18940

dec_label_pc_18940:                               ; preds = %.thread3, %bb139, %dec_label_pc_18c60, %bb122, %bb97, %dec_label_pc_18938
  %v5_18940 = phi i32 [ 0, %bb139 ], [ %v1_1892c, %.thread3 ], [ 0, %dec_label_pc_18c60 ], [ %v0_18b08, %bb122 ], [ 0, %bb97 ], [ 0, %dec_label_pc_18938 ]
  %v2_18940 = phi i32 [ %v5_18c04, %bb139 ], [ 1, %.thread3 ], [ %v1_18c60, %dec_label_pc_18c60 ], [ %v5_18b04, %bb122 ], [ %v5_188d4, %bb97 ], [ 0, %dec_label_pc_18938 ]
  store i32 %v5_18940, i32* @r1, align 4
  store i32 %v12_187b4, i32* @r7, align 4
  ret i32 %v2_18940

dec_label_pc_18954:                               ; preds = %dec_label_pc_187e4
  %v2_18954 = icmp eq i32 %v0_187d8, 0
  br i1 %v2_18954, label %dec_label_pc_1895c, label %dec_label_pc_1896c

dec_label_pc_1895c:                               ; preds = %dec_label_pc_18954
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_18964 = call i32 @function_1343c()
  store i32 %v0_18964, i32* @r5, align 4
  br label %dec_label_pc_1896c

dec_label_pc_1896c:                               ; preds = %dec_label_pc_18954, %dec_label_pc_1895c
  %v0_189bc = phi i32 [ %v0_187d8, %dec_label_pc_18954 ], [ %v0_18964, %dec_label_pc_1895c ]
  %v3_18970 = icmp ult i32 %v0_189bc, 65534
  br i1 %v3_18970, label %dec_label_pc_18c6c, label %dec_label_pc_18974

dec_label_pc_18974:                               ; preds = %dec_label_pc_1896c
  %v3_18978 = icmp ugt i32 %v0_189bc, 16777214
  %v9_18978 = icmp eq i32 %v0_189bc, 16777215
  %v2_1897c = xor i1 %v9_18978, true
  %v3_1897c = and i1 %v3_18978, %v2_1897c
  br i1 %v3_1897c, label %bb111, label %bb112

bb111:                                            ; preds = %dec_label_pc_18974
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_18974, %bb111
  %v1_1898c44 = phi i32 [ 16777215, %dec_label_pc_18974 ], [ 24, %bb111 ]
  %v2_18980 = xor i1 %v3_18978, true
  %v3_18980 = or i1 %v9_18978, %v2_18980
  br i1 %v3_18980, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1898c43 = phi i32 [ %v1_1898c44, %bb112 ], [ 16, %bb113 ]
  br i1 %v3_1897c, label %bb115, label %bb116

bb115:                                            ; preds = %bb114
  store i32 8, i32* @ip, align 4
  br label %bb116

bb116:                                            ; preds = %bb114, %bb115
  br i1 %v3_18980, label %bb117, label %bb118

bb117:                                            ; preds = %bb116
  store i32 16, i32* @ip, align 4
  br label %bb118

bb118:                                            ; preds = %._crit_edge, %bb143, %bb116, %bb117
  %v1_1898c = phi i32 [ %v1_1898c.pre, %._crit_edge ], [ 8, %bb143 ], [ %v1_1898c43, %bb116 ], [ %v1_1898c43, %bb117 ]
  %v6_1898c = lshr i32 %v0_189bc, %v1_1898c
  %v0_18994 = load i32, i32* @r4, align 4
  %v2_18994 = add i32 %v0_18994, 36
  %v3_18994 = inttoptr i32 %v2_18994 to i32*
  %v4_18994 = load i32, i32* %v3_18994, align 4
  %v2_18998 = add i32 %v4_18994, %v6_1898c
  %v3_18998 = inttoptr i32 %v2_18998 to i8*
  %v4_18998 = load i8, i8* %v3_18998, align 1
  %v6_18998 = zext i8 %v4_18998 to i32
  %v0_1899c = load i32, i32* @ip, align 4
  %v2_1899c = sub i32 %v0_1899c, %v6_18998
  store i32 %v2_1899c, i32* %sl.global-to-local, align 4
  %v9_1899c = icmp eq i32 %v0_1899c, %v6_18998
  %v2_189a4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v9_1899c, label %.thread8, label %dec_label_pc_189b8

.thread8:                                         ; preds = %bb118
  %v3_189a4 = sub i32 %v2_189a4, %v0_189bc
  store i32 %v3_189a4, i32* @r4, align 4
  %v4_189a8 = urem i32 %v0_189bc, 65536
  store i32 %v4_189a8, i32* %r8.global-to-local, align 4
  %v4_189ac = udiv i32 %v0_189bc, 65536
  store i32 %v4_189ac, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18a70

dec_label_pc_189b8:                               ; preds = %bb118
  %v6_189b8 = shl i32 %v2_189a4, %v2_1899c
  %v6_189bc = shl i32 %v0_189bc, %v2_1899c
  store i32 %v6_189bc, i32* @r5, align 4
  %v1_189c0 = sub i32 32, %v2_1899c
  %v6_189c4 = lshr i32 %v2_189a4, %v1_189c0
  store i32 %v6_189c4, i32* @r4, align 4
  %v1_189c8 = load i32, i32* %sb.global-to-local, align 4
  %v7_189c8 = lshr i32 %v1_189c8, %v1_189c0
  %v8_189c8 = or i32 %v7_189c8, %v6_189b8
  %v3_189cc = udiv i32 %v6_189bc, 65536
  store i32 %v3_189cc, i32* @r7, align 4
  store i32 %v3_189cc, i32* @r1, align 4
  store i32 %v6_189c4, i32* @r0, align 4
  %v0_189dc = call i32 @function_1343c()
  %v0_189e0 = load i32, i32* @r7, align 4
  store i32 %v0_189dc, i32* %fp.global-to-local, align 4
  %v0_189e8 = load i32, i32* @r4, align 4
  %v2_189ec = call i32 @function_13538(i32 %v0_189e8, i32 %v0_189e0)
  %v0_189f0 = load i32, i32* @r5, align 4
  %v3_189f4 = urem i32 %v0_189f0, 65536
  store i32 %v3_189f4, i32* %r8.global-to-local, align 4
  %v2_189f8 = mul i32 %v0_189dc, %v3_189f4
  %v3_18a00 = udiv i32 %v8_189c8, 65536
  %v4_18a04 = mul i32 %v0_189e0, 65536
  %v5_18a04 = or i32 %v4_18a04, %v3_18a00
  %tmp156 = icmp ugt i32 %v2_189f8, %v5_18a04
  br i1 %tmp156, label %dec_label_pc_18a10, label %dec_label_pc_18a1c

dec_label_pc_18a10:                               ; preds = %dec_label_pc_189b8
  %v2_18a10 = add i32 %v0_189f0, %v5_18a04
  %v3_18a10 = icmp ult i32 %v2_18a10, %v5_18a04
  %v1_18a14 = add i32 %v0_189dc, -1
  store i32 %v1_18a14, i32* %fp.global-to-local, align 4
  br i1 %v3_18a10, label %dec_label_pc_18a1c, label %dec_label_pc_18cd0

dec_label_pc_18a1c:                               ; preds = %dec_label_pc_189b8, %dec_label_pc_18cd0, %bb151, %dec_label_pc_18a10
  %v1_18a1c = phi i32 [ %v6_18cd8, %bb151 ], [ %v2_18a10, %dec_label_pc_18a10 ], [ %v5_18a04, %dec_label_pc_189b8 ], [ %v2_18a10, %dec_label_pc_18cd0 ]
  %v2_18a1c = sub i32 %v1_18a1c, %v2_189f8
  store i32 %v2_18a1c, i32* @r4, align 4
  %v0_18a20 = load i32, i32* @r7, align 4
  store i32 %v0_18a20, i32* @r1, align 4
  store i32 %v2_18a1c, i32* @r0, align 4
  %v0_18a28 = call i32 @function_1343c()
  %v0_18a2c = load i32, i32* @r7, align 4
  store i32 %v0_18a28, i32* %r6.global-to-local, align 4
  %v0_18a34 = load i32, i32* @r4, align 4
  %v2_18a38 = call i32 @function_13538(i32 %v0_18a34, i32 %v0_18a2c)
  %v0_18a3c = load i32, i32* %r8.global-to-local, align 4
  %v2_18a3c = mul i32 %v0_18a28, %v0_18a3c
  %v3_18a48 = urem i32 %v8_189c8, 65536
  %v4_18a4c = mul i32 %v0_18a2c, 65536
  %v5_18a4c = or i32 %v4_18a4c, %v3_18a48
  %tmp157 = icmp ugt i32 %v2_18a3c, %v5_18a4c
  br i1 %tmp157, label %dec_label_pc_18a58, label %dec_label_pc_18a64

dec_label_pc_18a58:                               ; preds = %dec_label_pc_18a1c
  %v1_18a58 = load i32, i32* @r5, align 4
  %v2_18a58 = add i32 %v1_18a58, %v5_18a4c
  %v3_18a58 = icmp ult i32 %v2_18a58, %v5_18a4c
  %v1_18a5c = add i32 %v0_18a28, -1
  store i32 %v1_18a5c, i32* %r6.global-to-local, align 4
  br i1 %v3_18a58, label %dec_label_pc_18a64, label %dec_label_pc_18cc0

dec_label_pc_18a64:                               ; preds = %dec_label_pc_18a1c, %dec_label_pc_18cc0, %bb150, %dec_label_pc_18a58
  %v0_18a6c = phi i32 [ %v5_18cc4, %bb150 ], [ %v1_18a5c, %dec_label_pc_18a58 ], [ %v0_18a28, %dec_label_pc_18a1c ], [ %v1_18a5c, %dec_label_pc_18cc0 ]
  %v1_18a68 = phi i32 [ %v6_18cc8, %bb150 ], [ %v2_18a58, %dec_label_pc_18a58 ], [ %v5_18a4c, %dec_label_pc_18a1c ], [ %v2_18a58, %dec_label_pc_18cc0 ]
  %v0_18a64 = load i32, i32* %sb.global-to-local, align 4
  %v1_18a64 = load i32, i32* %sl.global-to-local, align 4
  %v6_18a64 = shl i32 %v0_18a64, %v1_18a64
  store i32 %v6_18a64, i32* %sb.global-to-local, align 4
  %v2_18a68 = sub i32 %v1_18a68, %v2_18a3c
  store i32 %v2_18a68, i32* @r4, align 4
  %v1_18a6c = load i32, i32* %fp.global-to-local, align 4
  %v4_18a6c = mul i32 %v1_18a6c, 65536
  %v5_18a6c = or i32 %v4_18a6c, %v0_18a6c
  store i32 %v5_18a6c, i32* %fp.global-to-local, align 4
  %v0_18a70.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18a70

dec_label_pc_18a70:                               ; preds = %.thread8, %dec_label_pc_18a64
  %v0_18a74 = phi i32 [ %v3_189a4, %.thread8 ], [ %v2_18a68, %dec_label_pc_18a64 ]
  %v0_18a70 = phi i32 [ %v4_189ac, %.thread8 ], [ %v0_18a70.pre, %dec_label_pc_18a64 ]
  store i32 %v0_18a70, i32* @r1, align 4
  store i32 %v0_18a74, i32* @r0, align 4
  %v0_18a78 = call i32 @function_1343c()
  %v0_18a7c = load i32, i32* @r7, align 4
  store i32 %v0_18a78, i32* %sl.global-to-local, align 4
  %v0_18a84 = load i32, i32* @r4, align 4
  %v2_18a88 = call i32 @function_13538(i32 %v0_18a84, i32 %v0_18a7c)
  %v0_18a8c = load i32, i32* %r8.global-to-local, align 4
  %v2_18a8c = mul i32 %v0_18a78, %v0_18a8c
  %v0_18a90 = load i32, i32* %sb.global-to-local, align 4
  %v3_18a90 = udiv i32 %v0_18a90, 65536
  %v4_18a94 = mul i32 %v0_18a7c, 65536
  %v5_18a94 = or i32 %v3_18a90, %v4_18a94
  %tmp158 = icmp ugt i32 %v2_18a8c, %v5_18a94
  br i1 %tmp158, label %dec_label_pc_18aa0, label %.thread59

dec_label_pc_18aa0:                               ; preds = %dec_label_pc_18a70
  %v1_18aa0 = load i32, i32* @r5, align 4
  %v2_18aa0 = add i32 %v1_18aa0, %v5_18a94
  %v3_18aa0 = icmp ult i32 %v2_18aa0, %v5_18a94
  %v1_18aa4 = add i32 %v0_18a78, -1
  store i32 %v1_18aa4, i32* %sl.global-to-local, align 4
  br i1 %v3_18aa0, label %.thread59, label %dec_label_pc_18aac

dec_label_pc_18aac:                               ; preds = %dec_label_pc_18aa0
  %tmp159 = icmp ugt i32 %v2_18a8c, %v2_18aa0
  br i1 %tmp159, label %bb120, label %.thread59

bb120:                                            ; preds = %dec_label_pc_18aac
  %v5_18ab0 = add i32 %v0_18a78, -2
  store i32 %v5_18ab0, i32* %sl.global-to-local, align 4
  %v6_18ab4 = add i32 %v2_18aa0, %v1_18aa0
  br label %.thread59

.thread59:                                        ; preds = %dec_label_pc_18a70, %dec_label_pc_18aac, %dec_label_pc_18aa0, %bb120
  %v1_18ab8 = phi i32 [ %v2_18aa0, %dec_label_pc_18aa0 ], [ %v5_18a94, %dec_label_pc_18a70 ], [ %v6_18ab4, %bb120 ], [ %v2_18aa0, %dec_label_pc_18aac ]
  %v2_18ab8 = sub i32 %v1_18ab8, %v2_18a8c
  store i32 %v2_18ab8, i32* @r4, align 4
  %v0_18abc = load i32, i32* @r7, align 4
  store i32 %v0_18abc, i32* @r1, align 4
  store i32 %v2_18ab8, i32* @r0, align 4
  %v0_18ac4 = call i32 @function_1343c()
  %v0_18ac8 = load i32, i32* @r7, align 4
  store i32 %v0_18ac4, i32* %r6.global-to-local, align 4
  %v0_18ad0 = load i32, i32* @r4, align 4
  %v2_18ad4 = call i32 @function_13538(i32 %v0_18ad0, i32 %v0_18ac8)
  %v0_18ad8 = load i32, i32* %r8.global-to-local, align 4
  %v2_18ad8 = mul i32 %v0_18ac4, %v0_18ad8
  %v0_18adc = load i32, i32* %sb.global-to-local, align 4
  %v3_18ae0 = urem i32 %v0_18adc, 65536
  %v4_18ae4 = mul i32 %v0_18ac8, 65536
  %v5_18ae4 = or i32 %v3_18ae0, %v4_18ae4
  %tmp160 = icmp ugt i32 %v2_18ad8, %v5_18ae4
  br i1 %tmp160, label %dec_label_pc_18af0, label %bb122

dec_label_pc_18af0:                               ; preds = %.thread59
  %v1_18af0 = load i32, i32* @r5, align 4
  %v2_18af0 = add i32 %v1_18af0, %v5_18ae4
  %v3_18af0 = icmp ult i32 %v2_18af0, %v5_18ae4
  %v1_18af4 = add i32 %v0_18ac4, -1
  store i32 %v1_18af4, i32* %r6.global-to-local, align 4
  br i1 %v3_18af0, label %bb122, label %dec_label_pc_18afc

dec_label_pc_18afc:                               ; preds = %dec_label_pc_18af0
  %tmp161 = icmp ugt i32 %v2_18ad8, %v2_18af0
  br i1 %tmp161, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_18afc
  %v5_18b00 = add i32 %v0_18ac4, -2
  store i32 %v5_18b00, i32* %r6.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %.thread59, %dec_label_pc_18af0, %dec_label_pc_18afc, %bb121
  %v0_18b04 = phi i32 [ %v1_18af4, %dec_label_pc_18af0 ], [ %v0_18ac4, %.thread59 ], [ %v1_18af4, %dec_label_pc_18afc ], [ %v5_18b00, %bb121 ]
  %v1_18b04 = load i32, i32* %sl.global-to-local, align 4
  %v4_18b04 = mul i32 %v1_18b04, 65536
  %v5_18b04 = or i32 %v4_18b04, %v0_18b04
  %v0_18b08 = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18940

dec_label_pc_18b10:                               ; preds = %dec_label_pc_188ec
  %v2_18b10 = icmp ugt i32 %v0_187c8, 254
  %v7_18b10 = icmp eq i32 %v0_187c8, 255
  %v2_18b14 = xor i1 %v7_18b10, true
  %v3_18b14 = and i1 %v2_18b10, %v2_18b14
  br i1 %v3_18b14, label %bb123, label %bb124

bb123:                                            ; preds = %dec_label_pc_18b10
  br label %bb124

bb124:                                            ; preds = %dec_label_pc_18b10, %bb123
  %v1_18b1c16 = phi i32 [ %v0_187c8, %dec_label_pc_18b10 ], [ 8, %bb123 ]
  %v2_18b18 = xor i1 %v2_18b10, true
  %v3_18b18 = or i1 %v7_18b10, %v2_18b18
  br i1 %v3_18b18, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  br label %bb126

bb126:                                            ; preds = %bb124, %bb125
  %v1_18b1c = phi i32 [ %v1_18b1c16, %bb124 ], [ 0, %bb125 ]
  %v2_18b1c = add i32 %v1_18b1c, -1
  %v3_18b1c = shl i32 1, %v2_18b1c
  %v4_18b1c = and i32 %v3_18b1c, %v0_187c8
  %v5_18b1c = icmp ne i32 %v4_18b1c, 0
  %v6_18b1c = lshr i32 %v0_187c8, %v1_18b1c
  %v4_18b24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18b28 = add i32 %v4_18b24, %v6_18b1c
  %v3_18b28 = inttoptr i32 %v2_18b28 to i8*
  %v4_18b28 = load i8, i8* %v3_18b28, align 1
  %v6_18b28 = zext i8 %v4_18b28 to i32
  %v3_18b2c = and i1 %v5_18b1c, %v2_18b14
  br i1 %v3_18b2c, label %bb127, label %bb128

bb127:                                            ; preds = %bb126
  store i32 24, i32* @lr, align 4
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  %v0_18b3418 = phi i32 [ %v27_187b4, %bb126 ], [ 24, %bb127 ]
  %v2_18b30 = xor i1 %v5_18b1c, true
  %v3_18b30 = or i1 %v7_18b10, %v2_18b30
  br i1 %v3_18b30, label %bb129, label %bb130

bb129:                                            ; preds = %bb128
  store i32 32, i32* @lr, align 4
  br label %bb130

bb130:                                            ; preds = %bb128, %bb129
  %v0_18b34 = phi i32 [ %v0_18b3418, %bb128 ], [ 32, %bb129 ]
  %v2_18b34 = sub i32 %v0_18b34, %v6_18b28
  store i32 %v2_18b34, i32* %fp.global-to-local, align 4
  %v9_18b34 = icmp eq i32 %v0_18b34, %v6_18b28
  br i1 %v9_18b34, label %dec_label_pc_18924, label %dec_label_pc_18b3c

dec_label_pc_18b3c:                               ; preds = %bb106, %bb130
  %v1_18b48 = phi i32 [ %v2_1891c, %bb106 ], [ %v2_18b34, %bb130 ]
  %v6_18b3c = shl i32 %v0_187c8, %v1_18b48
  %v1_18b40 = sub i32 32, %v1_18b48
  %v7_18b44 = lshr i32 %v0_187d8, %v1_18b40
  %v8_18b44 = or i32 %v7_18b44, %v6_18b3c
  store i32 %v8_18b44, i32* %r8.global-to-local, align 4
  %v6_18b48 = shl i32 %v0_187d0, %v1_18b48
  %v6_18b4c = lshr i32 %v0_187d0, %v1_18b40
  store i32 %v6_18b4c, i32* @r4, align 4
  %v7_18b50 = lshr i32 %v0_187dc, %v1_18b40
  %v8_18b50 = or i32 %v7_18b50, %v6_18b48
  %v3_18b54 = udiv i32 %v8_18b44, 65536
  store i32 %v3_18b54, i32* %sl.global-to-local, align 4
  store i32 %v3_18b54, i32* @r1, align 4
  store i32 %v6_18b4c, i32* @r0, align 4
  %v0_18b64 = call i32 @function_1343c()
  %v0_18b70 = load i32, i32* @r4, align 4
  %v2_18b74 = call i32 @function_13538(i32 %v0_18b70, i32 %v3_18b54)
  %v0_18b78 = load i32, i32* %r8.global-to-local, align 4
  %v3_18b80 = urem i32 %v0_18b78, 65536
  store i32 %v3_18b80, i32* @r7, align 4
  %v2_18b84 = mul i32 %v3_18b80, %v0_18b64
  %v3_18b8c = udiv i32 %v8_18b50, 65536
  %v4_18b90 = mul nuw i32 %v3_18b54, 65536
  %v5_18b90 = or i32 %v4_18b90, %v3_18b8c
  %v9_18b94 = icmp eq i32 %v2_18b84, %v5_18b90
  %v0_18b98 = load i32, i32* @r5, align 4
  %v1_18b98 = load i32, i32* %fp.global-to-local, align 4
  %v2_18b98 = add i32 %v1_18b98, -1
  %v3_18b98 = lshr i32 -2147483648, %v2_18b98
  %v4_18b98 = and i32 %v3_18b98, %v0_18b98
  %v6_18b98 = shl i32 %v0_18b98, %v1_18b98
  store i32 %v6_18b98, i32* @r5, align 4
  %v2_18b9c = icmp eq i32 %v4_18b98, 0
  %v3_18b9c = or i1 %v9_18b94, %v2_18b9c
  br i1 %v3_18b9c, label %dec_label_pc_18bb4, label %dec_label_pc_18ba0

dec_label_pc_18ba0:                               ; preds = %dec_label_pc_18b3c
  %v2_18ba4 = add i32 %v0_18b78, %v5_18b90
  %v3_18ba4 = icmp ult i32 %v2_18ba4, %v5_18b90
  %v1_18ba8 = add i32 %v0_18b64, -1
  br i1 %v3_18ba4, label %dec_label_pc_18bb4, label %dec_label_pc_18cac

dec_label_pc_18bb4:                               ; preds = %.thread67, %dec_label_pc_18ba0, %dec_label_pc_18b3c
  %v1_18bb4 = phi i32 [ %v5_18b90, %dec_label_pc_18b3c ], [ %v2_18ba4, %dec_label_pc_18ba0 ], [ %v1_18bb422, %.thread67 ]
  %stack_var_-52.0 = phi i32 [ %v0_18b64, %dec_label_pc_18b3c ], [ %v1_18ba8, %dec_label_pc_18ba0 ], [ %v4_18cb8.v1_18ba8, %.thread67 ]
  %v2_18bb4 = sub i32 %v1_18bb4, %v2_18b84
  store i32 %v2_18bb4, i32* @r4, align 4
  %v0_18bb8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18bb8, i32* @r1, align 4
  store i32 %v2_18bb4, i32* @r0, align 4
  %v0_18bc0 = call i32 @function_1343c()
  store i32 %v0_18bc0, i32* %r6.global-to-local, align 4
  %v0_18bcc = load i32, i32* @r4, align 4
  %v2_18bd0 = call i32 @function_13538(i32 %v0_18bcc, i32 %v0_18bb8)
  %v0_18bd4 = load i32, i32* @r7, align 4
  %v2_18bd4 = mul i32 %v0_18bc0, %v0_18bd4
  %v3_18be0 = urem i32 %v8_18b50, 65536
  %v4_18be4 = mul i32 %v0_18bb8, 65536
  %v5_18be4 = or i32 %v4_18be4, %v3_18be0
  %tmp162 = icmp ugt i32 %v2_18bd4, %v5_18be4
  br i1 %tmp162, label %dec_label_pc_18bf0, label %dec_label_pc_18bfc

dec_label_pc_18bf0:                               ; preds = %dec_label_pc_18bb4
  %v1_18bf0 = load i32, i32* %r8.global-to-local, align 4
  %v2_18bf0 = add i32 %v1_18bf0, %v5_18be4
  %v3_18bf0 = icmp ult i32 %v2_18bf0, %v5_18be4
  %v1_18bf4 = add i32 %v0_18bc0, -1
  store i32 %v1_18bf4, i32* %r6.global-to-local, align 4
  br i1 %v3_18bf0, label %dec_label_pc_18bfc, label %dec_label_pc_18c9c

dec_label_pc_18bfc:                               ; preds = %dec_label_pc_18bb4, %dec_label_pc_18c9c, %bb148, %dec_label_pc_18bf0
  %v0_18c04 = phi i32 [ %v5_18ca4, %bb148 ], [ %v1_18bf4, %dec_label_pc_18bf0 ], [ %v0_18bc0, %dec_label_pc_18bb4 ], [ %v1_18bf4, %dec_label_pc_18c9c ]
  %v1_18c00 = phi i32 [ %v6_18ca0, %bb148 ], [ %v2_18bf0, %dec_label_pc_18bf0 ], [ %v5_18be4, %dec_label_pc_18bb4 ], [ %v2_18bf0, %dec_label_pc_18c9c ]
  store i32 %stack_var_-52.0, i32* %r8.global-to-local, align 4
  %v2_18c00 = sub i32 %v1_18c00, %v2_18bd4
  %v4_18c04 = mul i32 %stack_var_-52.0, 65536
  %v5_18c04 = or i32 %v0_18c04, %v4_18c04
  %v3_18c08 = udiv i32 %v5_18c04, 65536
  %v0_18c0c = load i32, i32* @r5, align 4
  %v3_18c0c = udiv i32 %v0_18c0c, 65536
  %tmp163 = mul i32 %v3_18c08, -65536
  %v5_18c10 = add i32 %tmp163, -1
  %v6_18c10 = and i32 %v5_18c04, %v5_18c10
  %tmp164 = mul i32 %v3_18c0c, -65536
  %v5_18c14 = add i32 %tmp164, -1
  %v6_18c14 = and i32 %v0_18c0c, %v5_18c14
  %v2_18c18 = mul i32 %v6_18c14, %v6_18c10
  %v2_18c1c = mul i32 %v6_18c14, %v3_18c08
  %v2_18c20 = mul i32 %v3_18c0c, %v6_18c10
  %v2_18c24 = mul nuw i32 %v3_18c0c, %v3_18c08
  %v2_18c28 = add i32 %v2_18c1c, %v2_18c20
  %v3_18c28 = icmp ult i32 %v2_18c28, %v2_18c1c
  br i1 %v3_18c28, label %bb132, label %bb133

bb132:                                            ; preds = %dec_label_pc_18bfc
  %v2_18c2c = add i32 %v2_18c24, 65536
  br label %bb133

bb133:                                            ; preds = %dec_label_pc_18bfc, %bb132
  %v0_18c34 = phi i32 [ %v2_18c24, %dec_label_pc_18bfc ], [ %v2_18c2c, %bb132 ]
  %v4_18c30 = mul i32 %v2_18c28, 65536
  %v5_18c30 = add i32 %v4_18c30, %v2_18c18
  %v2_18c34 = and i32 %v2_18c28, 32768
  %v3_18c34 = icmp ne i32 %v2_18c34, 0
  %v4_18c34 = udiv i32 %v2_18c28, 65536
  %v7_18c34 = zext i1 %v3_18c34 to i32
  %v6_18c34 = add nuw nsw i32 %v7_18c34, %v4_18c34
  %v8_18c34 = add i32 %v6_18c34, %v0_18c34
  %v3_18c38 = icmp ult i32 %v2_18c00, %v8_18c34
  br i1 %v3_18c38, label %dec_label_pc_18c60, label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %bb133
  %v9_18c38 = icmp eq i32 %v2_18c00, %v8_18c34
  %. = zext i1 %v9_18c38 to i32
  %v1_18c48 = load i32, i32* %sb.global-to-local, align 4
  %v2_18c48 = load i32, i32* %fp.global-to-local, align 4
  %v7_18c48 = shl i32 %v1_18c48, %v2_18c48
  %v9_18c48 = icmp uge i32 %v5_18c30, %v7_18c48
  %v15_18c48 = icmp eq i32 %v5_18c30, %v7_18c48
  %v2_18c4c = xor i1 %v9_18c48, true
  %v3_18c4c = or i1 %v15_18c48, %v2_18c4c
  br i1 %v3_18c4c, label %bb136, label %bb137

bb136:                                            ; preds = %dec_label_pc_18c40
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18c40, %bb136
  %v4_18c50 = phi i32 [ %., %dec_label_pc_18c40 ], [ 0, %bb136 ]
  %v2_18c50 = xor i1 %v15_18c48, true
  %v3_18c50 = and i1 %v9_18c48, %v2_18c50
  br i1 %v3_18c50, label %bb138, label %thread-pre-split

bb138:                                            ; preds = %bb137
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb137, %bb138
  %v2_18c54 = icmp eq i32 %v4_18c50, 0
  br i1 %v2_18c54, label %bb139, label %dec_label_pc_18c60

bb139:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_18940

dec_label_pc_18c60:                               ; preds = %bb133, %thread-pre-split
  %v1_18c60 = add i32 %v5_18c04, -1
  br label %dec_label_pc_18940

dec_label_pc_18c6c:                               ; preds = %dec_label_pc_1896c
  %v2_18c6c = icmp ugt i32 %v0_189bc, 254
  %v7_18c6c = icmp eq i32 %v0_189bc, 255
  %v2_18c70 = xor i1 %v7_18c6c, true
  %v3_18c70 = and i1 %v2_18c6c, %v2_18c70
  br i1 %v3_18c70, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_18c6c
  store i32 24, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_18c6c, %bb140
  %v2_18c74 = xor i1 %v2_18c6c, true
  %v3_18c74 = or i1 %v7_18c6c, %v2_18c74
  br i1 %v3_18c74, label %bb142, label %.thread61

bb142:                                            ; preds = %bb141
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread61

.thread61:                                        ; preds = %bb141, %bb142
  br i1 %v3_18c70, label %bb143, label %._crit_edge

._crit_edge:                                      ; preds = %.thread61
  %v1_1898c.pre = load i32, i32* @r3, align 4
  br label %bb118

bb143:                                            ; preds = %.thread61
  br label %bb118

dec_label_pc_18c84:                               ; preds = %dec_label_pc_187ec
  %v2_18c84 = icmp ugt i32 %v0_187d8, 254
  %v7_18c84 = icmp eq i32 %v0_187d8, 255
  %v2_18c88 = xor i1 %v7_18c84, true
  %v3_18c88 = and i1 %v2_18c84, %v2_18c88
  br i1 %v3_18c88, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_18c84
  store i32 24, i32* @ip, align 4
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_18c84, %bb144
  %v2_18c8c = xor i1 %v2_18c84, true
  %v3_18c8c = or i1 %v7_18c84, %v2_18c8c
  br i1 %v3_18c8c, label %bb146, label %.thread62

bb146:                                            ; preds = %bb145
  store i32 32, i32* @ip, align 4
  br label %.thread62

.thread62:                                        ; preds = %bb145, %bb146
  br i1 %v3_18c88, label %bb147, label %bb92

bb147:                                            ; preds = %.thread62
  br label %bb92

dec_label_pc_18c9c:                               ; preds = %dec_label_pc_18bf0
  %tmp165 = icmp ugt i32 %v2_18bd4, %v2_18bf0
  br i1 %tmp165, label %bb148, label %dec_label_pc_18bfc

bb148:                                            ; preds = %dec_label_pc_18c9c
  %v6_18ca0 = add i32 %v2_18bf0, %v1_18bf0
  %v5_18ca4 = add i32 %v0_18bc0, -2
  store i32 %v5_18ca4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18bfc

dec_label_pc_18cac:                               ; preds = %dec_label_pc_18ba0
  %tmp166 = icmp ugt i32 %v2_18b84, %v2_18ba4
  br i1 %tmp166, label %bb149, label %.thread67

bb149:                                            ; preds = %dec_label_pc_18cac
  %v5_18cb0 = add i32 %v0_18b64, -2
  %v6_18cb4 = add i32 %v2_18ba4, %v0_18b78
  br label %.thread67

.thread67:                                        ; preds = %dec_label_pc_18cac, %bb149
  %v4_18cb865 = phi i32 [ %v5_18cb0, %bb149 ], [ %v1_18ba8, %dec_label_pc_18cac ]
  %v1_18bb422 = phi i32 [ %v6_18cb4, %bb149 ], [ %v2_18ba4, %dec_label_pc_18cac ]
  %v4_18cb8.v1_18ba8 = select i1 %tmp166, i32 %v4_18cb865, i32 %v1_18ba8
  br label %dec_label_pc_18bb4

dec_label_pc_18cc0:                               ; preds = %dec_label_pc_18a58
  %tmp167 = icmp ugt i32 %v2_18a3c, %v2_18a58
  br i1 %tmp167, label %bb150, label %dec_label_pc_18a64

bb150:                                            ; preds = %dec_label_pc_18cc0
  %v5_18cc4 = add i32 %v0_18a28, -2
  store i32 %v5_18cc4, i32* %r6.global-to-local, align 4
  %v6_18cc8 = add i32 %v2_18a58, %v1_18a58
  br label %dec_label_pc_18a64

dec_label_pc_18cd0:                               ; preds = %dec_label_pc_18a10
  %tmp168 = icmp ugt i32 %v2_189f8, %v2_18a10
  br i1 %tmp168, label %bb151, label %dec_label_pc_18a1c

bb151:                                            ; preds = %dec_label_pc_18cd0
  %v5_18cd4 = add i32 %v0_189dc, -2
  store i32 %v5_18cd4, i32* %fp.global-to-local, align 4
  %v6_18cd8 = add i32 %v2_18a10, %v0_189f0
  br label %dec_label_pc_18a1c

; uselistorder directives
  uselistorder i32 %v5_18cc4, { 1, 0 }
  uselistorder i1 %tmp166, { 1, 0 }
  uselistorder i32 %v5_18ca4, { 1, 0 }
  uselistorder i1 %v7_18c84, { 1, 0 }
  uselistorder i1 %v7_18c6c, { 1, 0 }
  uselistorder i1 %v9_18c48, { 1, 0 }
  uselistorder i32 %v7_18c48, { 1, 0 }
  uselistorder i32 %v2_18c28, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18c1c, { 1, 0 }
  uselistorder i32 %v3_18c0c, { 2, 1, 0 }
  uselistorder i32 %v0_18c0c, { 1, 0 }
  uselistorder i32 %v3_18c08, { 2, 1, 0 }
  uselistorder i32 %v5_18c04, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18bf0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18be4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18bd4, { 0, 2, 1 }
  uselistorder i32 %v0_18bc0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_18bb8, { 1, 0, 2 }
  uselistorder i32 %v1_18ba8, { 1, 0, 2 }
  uselistorder i32 %v2_18ba4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_18b98, { 1, 0 }
  uselistorder i32 %v0_18b98, { 1, 0 }
  uselistorder i32 %v5_18b90, { 1, 2, 0, 3 }
  uselistorder i32 %v3_18b80, { 1, 0 }
  uselistorder i32 %v0_18b78, { 1, 2, 0 }
  uselistorder i32 %v0_18b64, { 1, 3, 2, 0 }
  uselistorder i32 %v3_18b54, { 1, 0, 3, 2 }
  uselistorder i32 %v2_18b34, { 1, 2, 0 }
  uselistorder i32 %v0_18b34, { 1, 0 }
  uselistorder i32 %v6_18b28, { 1, 0 }
  uselistorder i1 %v2_18b14, { 1, 0 }
  uselistorder i1 %v7_18b10, { 1, 2, 0 }
  uselistorder i32 %v5_18ae4, { 2, 1, 0 }
  uselistorder i32 %v0_18ac4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_18aa0, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_18a94, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18a8c, { 2, 0, 1 }
  uselistorder i32 %v0_18a78, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18a58, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18a4c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18a3c, { 0, 2, 1 }
  uselistorder i32 %v0_18a28, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_18a10, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18a04, { 2, 3, 1, 0 }
  uselistorder i32 %v2_189f8, { 0, 2, 1 }
  uselistorder i32 %v3_189f4, { 1, 0 }
  uselistorder i32 %v0_189f0, { 1, 2, 0 }
  uselistorder i32 %v0_189dc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_189cc, { 1, 0 }
  uselistorder i32 %v4_189ac, { 1, 0 }
  uselistorder i32 %v2_189a4, { 1, 0, 2 }
  uselistorder i32 %v6_18998, { 1, 0 }
  uselistorder i1 %v9_18978, { 1, 0 }
  uselistorder i32 %v0_189bc, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i1 %v3_18924, { 1, 0 }
  uselistorder i32 %v2_1891c, { 1, 0, 2 }
  uselistorder i32 %v0_1891c, { 1, 0 }
  uselistorder i32 %v6_18910, { 1, 0 }
  uselistorder i1 %v2_188fc, { 1, 0 }
  uselistorder i1 %v9_188f8, { 1, 2, 0 }
  uselistorder i1 %v9_188e0, { 1, 0 }
  uselistorder i32 %v5_188b4, { 2, 1, 0 }
  uselistorder i32 %v0_18894, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1888c, { 1, 0, 2 }
  uselistorder i32 %v2_18870, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_18864, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1885c, { 2, 0, 1 }
  uselistorder i32 %v3_18858, { 1, 0 }
  uselistorder i32 %v0_18854, { 1, 2, 0 }
  uselistorder i32 %v0_18840, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18830.c, { 1, 0 }
  uselistorder i32 %v3_18830, { 1, 0 }
  uselistorder i32 %v6_18818, { 1, 0 }
  uselistorder i1 %v9_187f8, { 1, 0 }
  uselistorder i32 %v0_187dc, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_187d8, { 9, 8, 12, 2, 10, 11, 1, 3, 4, 5, 6, 7, 0, 13 }
  uselistorder i32 %v0_187d0, { 5, 6, 4, 1, 7, 2, 3, 0, 8 }
  uselistorder i32 %v0_187c8, { 4, 6, 1, 5, 12, 11, 3, 7, 2, 8, 9, 10, 0, 13, 14 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 4, 7, 8, 5, 6, 9, 10, 11, 0, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 14, 12, 15 }
  uselistorder i32* %fp.global-to-local, { 0, 8, 9, 1, 6, 2, 4, 3, 5, 7, 10 }
  uselistorder i32 32768, { 3, 4, 2, 6, 5, 1, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 255, { 25, 26, 27, 22, 23, 24, 17, 2, 0, 18, 19, 28, 20, 5, 29, 6, 30, 3, 4, 1, 7, 10, 31, 11, 32, 8, 33, 9, 34, 12, 35, 13, 36, 14, 37, 15, 38, 21, 16, 39 }
  uselistorder i32 254, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32)* @function_13538, { 10, 9, 8, 7, 6, 5, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 12, 2, 11 }
  uselistorder i32 ()* @function_1343c, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i32 65536, { 4, 3, 196, 6, 7, 5, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 191, 39, 40, 38, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 80, 72, 81, 73, 82, 74, 83, 75, 84, 76, 85, 77, 86, 78, 87, 79, 88, 89, 90, 91, 93, 92, 94, 95, 96, 97, 98, 99, 101, 100, 103, 102, 104, 105, 106, 1, 107, 0, 2, 108, 109, 110, 111, 114, 112, 113, 115, 192, 193, 117, 118, 116, 119, 120, 121, 122, 123, 124, 190, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 148, 147, 150, 151, 152, 155, 154, 153, 194, 157, 156, 159, 158, 160, 161, 164, 163, 162, 195, 166, 165, 168, 167, 169, 170, 171, 173, 174, 175, 172, 177, 178, 179, 176, 180, 182, 183, 184, 181, 186, 187, 188, 185, 189 }
  uselistorder i32 36, { 2, 3, 0, 7, 8, 6, 1, 9, 4, 10, 5, 11 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), { 1, 2, 0, 4, 5, 3 }
  uselistorder i32* @ip, { 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 13, 14, 15, 16, 17, 18, 19, 40, 20, 21, 41, 0, 42, 43, 25, 26, 24, 44, 45, 46, 47, 48, 85, 86, 87, 88, 22, 23, 49, 27, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 9, 50, 10, 51, 52, 5, 1, 6, 53, 54, 3, 55, 4, 7, 56, 8, 57, 76, 77, 11, 78, 79, 80, 81, 82, 83, 84, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 2, 28, 29, 12, 72, 73, 74, 75 }
  uselistorder i32 16777215, { 0, 7, 2, 6, 1, 8, 4, 11, 5, 9, 3, 10 }
  uselistorder i32 16777214, { 1, 0, 2, 5, 3, 4, 6 }
  uselistorder i32* @r2, { 90, 2, 9, 6, 91, 10, 92, 93, 94, 125, 95, 35, 36, 37, 38, 40, 41, 3, 42, 43, 39, 11, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 44, 62, 126, 45, 127, 12, 178, 179, 180, 181, 182, 183, 109, 46, 128, 129, 130, 131, 132, 133, 134, 54, 110, 135, 47, 136, 48, 111, 112, 113, 114, 141, 142, 143, 144, 145, 137, 138, 139, 140, 146, 4, 147, 148, 149, 150, 151, 63, 64, 65, 152, 154, 153, 155, 156, 157, 158, 159, 160, 161, 115, 162, 163, 164, 165, 166, 167, 168, 169, 170, 28, 29, 30, 31, 32, 33, 34, 116, 13, 14, 15, 26, 27, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 117, 118, 119, 120, 50, 51, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 7, 66, 67, 68, 69, 70, 71, 72, 0, 73, 74, 1, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 121, 122, 123, 124, 171, 172, 173, 174, 175, 176, 177, 8 }
  uselistorder i32* @r1, { 74, 75, 76, 77, 78, 79, 80, 81, 82, 0, 83, 84, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4, 85, 86, 42, 19, 87, 92, 8, 88, 43, 99, 100, 89, 90, 91, 101, 6, 7, 102, 5, 103, 104, 105, 2, 106, 35, 36, 37, 38, 39, 40, 41, 20, 21, 22, 33, 34, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 93, 94, 95, 98, 44, 45, 46, 47, 48, 96, 97, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130 }
  uselistorder i32* @r3, { 5, 34, 35, 6, 13, 4, 14, 11, 36, 38, 15, 16, 39, 20, 21, 2, 22, 24, 23, 17, 37, 117, 25, 29, 40, 41, 18, 42, 86, 87, 88, 89, 90, 91, 8, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 0, 109, 110, 111, 7, 112, 113, 114, 115, 116, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 26, 54, 55, 10, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 61, 62, 63, 64, 66, 67, 65, 73, 74, 3, 75, 76, 77, 12, 78, 79, 80, 1, 81, 82, 9, 83, 19, 84, 27, 28, 30, 31, 32, 33, 85 }
  uselistorder label %.thread67, { 1, 0 }
  uselistorder label %.thread62, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread61, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %dec_label_pc_18c60, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb133, { 1, 0 }
  uselistorder label %dec_label_pc_18bfc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18b3c, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %bb124, { 1, 0 }
  uselistorder label %bb122, { 3, 2, 1, 0 }
  uselistorder label %.thread59, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18a70, { 1, 0 }
  uselistorder label %dec_label_pc_18a64, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18a1c, { 2, 1, 3, 0 }
  uselistorder label %bb118, { 1, 0, 3, 2 }
  uselistorder label %bb116, { 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1896c, { 1, 0 }
  uselistorder label %dec_label_pc_18940, { 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_18938, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_18924, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb97, { 3, 2, 1, 0 }
  uselistorder label %.thread57, { 3, 1, 2, 0 }
  uselistorder label %bb92, { 0, 1, 3, 2 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
}

define i32 @function_18ce4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18ce4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_18ce4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18ce4, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_18ce4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_18ce4, %bb
  %v0_18ce8 = load i32, i32* %r1.global-to-local, align 4
  %v2_18ce8 = icmp eq i32 %v0_18ce8, 0
  br i1 %v2_18ce8, label %dec_label_pc_18cf0, label %dec_label_pc_18d20

dec_label_pc_18cf0:                               ; preds = %bb8
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb9, label %.thread2

bb9:                                              ; preds = %dec_label_pc_18cf0
  %v6_18cf4 = icmp eq i32 %arg4, 0
  br i1 %v6_18cf4, label %dec_label_pc_18d04, label %bb10

.thread2:                                         ; preds = %dec_label_pc_18cf0
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d2c

bb10:                                             ; preds = %bb9
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d2c

dec_label_pc_18d04:                               ; preds = %bb9
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18d04 = mul i32 %arg3, 4
  %v1_18d08 = load i32, i32* %r0.global-to-local, align 4
  %v2_18d08 = add i32 %v1_18d08, %v3_18d04
  %v1_18d0c = add i32 %v2_18d08, 4
  %v2_18d0c = inttoptr i32 %v1_18d0c to i32*
  %v3_18d0c = load i32, i32* %v2_18d0c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_18d0c, i32* %arg5, align 4
  ret i32 0

dec_label_pc_18d20:                               ; preds = %bb8
  %tmp13 = icmp ult i32 %v0_18ce8, 5
  br i1 %tmp13, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18d20
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18d20, %bb11
  %v0_18d28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp13, i32 %v0_18d28)
  br label %dec_label_pc_18d2c

dec_label_pc_18d2c:                               ; preds = %bb10, %.thread2, %bb12
  store i32 2, i32* %r0.global-to-local, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_18d2c, { 2, 0, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_18d34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18d34:
  %v2_18d34 = icmp eq i32 %arg2, 0
  br i1 %v2_18d34, label %dec_label_pc_18d3c, label %dec_label_pc_18d6c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d34
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18d3c
  %v6_18d40 = icmp eq i32 %arg4, 0
  br i1 %v6_18d40, label %dec_label_pc_18d50, label %bb8

.thread2:                                         ; preds = %dec_label_pc_18d3c
  br label %dec_label_pc_18d78

bb8:                                              ; preds = %bb
  br label %dec_label_pc_18d78

dec_label_pc_18d50:                               ; preds = %bb
  %v3_18d54 = mul i32 %arg3, 4
  %v2_18d58 = load i32, i32* %arg5, align 4
  %v2_18d5c = add i32 %v3_18d54, %arg1
  %v2_18d64 = add i32 %v2_18d5c, 4
  %v3_18d64 = inttoptr i32 %v2_18d64 to i32*
  store i32 %v2_18d58, i32* %v3_18d64, align 4
  ret i32 0

dec_label_pc_18d6c:                               ; preds = %dec_label_pc_18d34
  %tmp11 = icmp ult i32 %arg2, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_18d6c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18d6c, %bb9
  %v0_18d74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_18d74)
  br label %dec_label_pc_18d78

dec_label_pc_18d78:                               ; preds = %bb8, %.thread2, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32* @lr, { 4, 5, 63, 64, 65, 66, 67, 6, 7, 8, 9, 10, 91, 11, 12, 13, 14, 15, 18, 19, 20, 92, 93, 94, 166, 167, 16, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 0, 3, 105, 106, 107, 108, 163, 164, 165, 109, 110, 111, 89, 90, 112, 113, 114, 115, 116, 117, 118, 119, 71, 72, 120, 121, 168, 169, 122, 123, 124, 125, 86, 126, 73, 17, 74, 75, 76, 77, 1, 81, 82, 83, 84, 85, 78, 79, 80, 24, 25, 26, 27, 28, 29, 30, 32, 31, 2, 33, 34, 35, 36, 21, 22, 23, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 127, 128, 129, 68, 69, 70, 87, 88, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_18d78, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_18d80(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d80:
  %v1_18d80 = add i32 %arg1, 68
  %v2_18d80 = inttoptr i32 %v1_18d80 to i32*
  %v3_18d80 = load i32, i32* %v2_18d80, align 4
  ret i32 %v3_18d80
}

define i32 @function_18d8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d8c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_18d90 = add i32 %arg1, 8
  %v2_18d90 = inttoptr i32 %v1_18d90 to i32*
  %v3_18d90 = load i32, i32* %v2_18d90, align 4
  %v2_18d94 = icmp eq i32 %v3_18d90, 0
  br i1 %v2_18d94, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_18d8c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18d8c, %bb
  %v2_18da8 = xor i1 %v2_18d94, true
  call void @__pseudo_cond_branch(i1 %v2_18da8, i32 %v3_18d90)
  %v1_18db4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18db4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 1, 2, 18, 3, 4, 5, 6, 7, 12, 19, 20, 21, 22, 23, 24, 15, 25, 13, 14, 8, 9, 10, 11, 16, 17, 26, 27, 28, 29 }
  uselistorder i1 true, { 0, 5, 6, 1, 2, 13, 14, 9, 10, 11, 3, 4, 12, 15, 16, 17, 18, 7, 8, 23, 24, 31, 32, 27, 28, 29, 19, 20, 30, 33, 34, 35, 21, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 45, 46, 49, 47, 50, 51, 52, 53, 54, 55, 56, 158, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 122, 75, 76, 77, 78, 79, 130, 129, 80, 159, 160, 149, 161, 162, 83, 163, 84, 85, 140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 81, 82, 174, 175, 176, 120, 123, 148, 147, 96, 97, 98, 177, 99, 100, 131, 132, 142, 133, 143, 127, 141, 178, 128, 146, 179, 86, 180, 87, 88, 89, 181, 150, 151, 90, 91, 182, 152, 153, 92, 93, 183, 154, 155, 94, 95, 126, 184, 185, 144, 186, 101, 134, 102, 103, 135, 136, 137, 124, 104, 105, 125, 106, 107, 108, 109, 110, 187, 188, 189, 190, 138, 191, 192, 193, 194, 195, 196, 115, 116, 197, 117, 118, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 114, 214, 215, 216, 217, 218, 219, 113, 220, 121, 139, 145, 119, 221, 111, 112, 157, 222, 156 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_18db8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18db8:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_18dc0 = call i32 @function_1a234()
  %v0_18dcc = call i32 @function_1a234()
  %v3_18dd0 = load i32, i32* @r4, align 4
  store i32 %v3_18dd0, i32* %stack_var_-48, align 4
  %v6_18dd0 = load i32, i32* @r5, align 4
  %v9_18dd0 = load i32, i32* @r6, align 4
  %v12_18dd0 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* %r5.global-to-local, align 4
  %v4_18de0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 32) to i32*), align 4
  %v2_18de4 = icmp eq i32 %v4_18de0, 0
  store i32 %v0_18dcc, i32* %r6.global-to-local, align 4
  %v1_18df0 = add i32 %arg2, -2
  store i32 %v1_18df0, i32* %r4.global-to-local, align 4
  br i1 %v2_18de4, label %dec_label_pc_18e28, label %dec_label_pc_18df8

dec_label_pc_18df8:                               ; preds = %dec_label_pc_18db8
  call void @__pseudo_branch(i32 %v4_18de0)
  %v2_18e08 = icmp eq i32 %v1_18df0, 0
  br i1 %v2_18e08, label %.thread, label %dec_label_pc_18e48thread-pre-split

.thread:                                          ; preds = %dec_label_pc_18df8
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18e10 = load i32, i32* %r6.global-to-local, align 4
  %v3_18e10 = add i32 %v2_18e10, 16
  %v4_18e10 = inttoptr i32 %v3_18e10 to i32*
  store i32 0, i32* %v4_18e10, align 4
  br label %dec_label_pc_18e18

dec_label_pc_18e18:                               ; preds = %.thread, %.thread10, %dec_label_pc_18fc0, %dec_label_pc_18fac, %dec_label_pc_18f88, %dec_label_pc_18f60, %dec_label_pc_18e60
  %v0_18e18 = load i32, i32* %r2.global-to-local, align 4
  %v2_18e20 = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_18e20, i32* %r4.global-to-local, align 4
  store i32 %v6_18dd0, i32* %r5.global-to-local, align 4
  store i32 %v9_18dd0, i32* %r6.global-to-local, align 4
  store i32 %v12_18dd0, i32* %r7.global-to-local, align 4
  ret i32 %v0_18e18

dec_label_pc_18e28:                               ; preds = %dec_label_pc_18db8
  store i32 12, i32* %r2.global-to-local, align 4
  %v4_18e30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 12) to i32*), align 4
  %v4_18e34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 24) to i32*), align 4
  store i32 %v4_18e34, i32* %r2.global-to-local, align 4
  %v2_18e38 = sub i32 %v4_18e30, %v4_18e34
  %v3_18e3c = sdiv i32 %v2_18e38, 8
  store i32 %v3_18e3c, i32* %stack_var_-52, align 4
  br label %dec_label_pc_18e48

dec_label_pc_18e48thread-pre-split:               ; preds = %dec_label_pc_18df8
  %v3_18e48.pr = load i32, i32* %stack_var_-52, align 4
  br label %dec_label_pc_18e48

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18e48thread-pre-split, %dec_label_pc_18e28
  %v0_18e8c.pre = phi i32 [ %v1_18df0, %dec_label_pc_18e48thread-pre-split ], [ %v4_18e34, %dec_label_pc_18e28 ]
  %v1_18e50 = phi i32 [ %v3_18e48.pr, %dec_label_pc_18e48thread-pre-split ], [ %v3_18e3c, %dec_label_pc_18e28 ]
  %v2_18e4c = icmp eq i32 %v1_18e50, 0
  br i1 %v2_18e4c, label %dec_label_pc_18e60, label %dec_label_pc_18e7c.preheader

dec_label_pc_18e7c.preheader:                     ; preds = %dec_label_pc_18e48
  %v2_18e50 = add i32 %v1_18e50, -1
  %v1_18eac = add i32 %v0_18e8c.pre, 8
  br label %dec_label_pc_18e7c.outer

dec_label_pc_18e60.loopexit:                      ; preds = %dec_label_pc_18ed8
  br label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e60.loopexit, %dec_label_pc_18e48, %dec_label_pc_18fa4
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_18e68 = load i32, i32* %r6.global-to-local, align 4
  %v2_18e68 = add i32 %v1_18e68, 16
  %v3_18e68 = inttoptr i32 %v2_18e68 to i32*
  store i32 0, i32* %v3_18e68, align 4
  br label %dec_label_pc_18e18

dec_label_pc_18e70:                               ; preds = %dec_label_pc_18ecc
  %v3_18e70 = icmp ult i32 %storemerge40, %v0_18ed0
  br i1 %v3_18e70, label %dec_label_pc_18e78, label %dec_label_pc_18ee8

dec_label_pc_18e78:                               ; preds = %dec_label_pc_18e70
  %v1_18e78 = add nsw i32 %v3_18e84, 1
  br label %dec_label_pc_18e7c.outer

dec_label_pc_18e7c.outer:                         ; preds = %dec_label_pc_18e78, %dec_label_pc_18e7c.preheader
  %v1_18ed8.ph = phi i32 [ %v1_18e78, %dec_label_pc_18e78 ], [ 0, %dec_label_pc_18e7c.preheader ]
  %v0_18e7c.ph = phi i32 [ %v0_18e7c, %dec_label_pc_18e78 ], [ %v2_18e50, %dec_label_pc_18e7c.preheader ]
  br label %dec_label_pc_18e7c

dec_label_pc_18e7c:                               ; preds = %dec_label_pc_18e7c.outer, %dec_label_pc_18ee0
  %v0_18e7c = phi i32 [ %v1_18ee0, %dec_label_pc_18ee0 ], [ %v0_18e7c.ph, %dec_label_pc_18e7c.outer ]
  %v2_18e7c = add i32 %v0_18e7c, %v1_18ed8.ph
  %tmp = icmp slt i32 %v2_18e7c, 0
  %v4_18e80 = zext i1 %tmp to i32
  %v5_18e80 = add i32 %v4_18e80, %v2_18e7c
  %v3_18e84 = sdiv i32 %v5_18e80, 2
  %v3_18e88 = mul i32 %v3_18e84, 8
  %v2_18e8c = add i32 %v3_18e88, %v0_18e8c.pre
  %v3_18e8c = inttoptr i32 %v2_18e8c to i32*
  %v4_18e8c = load i32, i32* %v3_18e8c, align 4
  %v1_18e90 = and i32 %v4_18e8c, 1073741824
  %v2_18e90 = icmp eq i32 %v1_18e90, 0
  %v2_18e94 = or i32 %v4_18e8c, -2147483648
  %tmp82 = bitcast i32 %v4_18e8c to float
  %tmp83 = call float @fabsf(float %tmp82)
  %v2_18e98 = bitcast float %tmp83 to i32
  %storemerge = select i1 %v2_18e90, i32 %v2_18e98, i32 %v2_18e94
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_18e9c = icmp eq i32 %v2_18e50, %v3_18e84
  store i32 %v2_18e8c, i32* %r7.global-to-local, align 4
  br i1 %v9_18e9c, label %dec_label_pc_18ecc, label %dec_label_pc_18eac

dec_label_pc_18eac:                               ; preds = %dec_label_pc_18e7c
  %v2_18eb0 = add i32 %v3_18e88, %v1_18eac
  %v3_18eb0 = inttoptr i32 %v2_18eb0 to i32*
  %v4_18eb0 = load i32, i32* %v3_18eb0, align 4
  %v1_18eb8 = and i32 %v4_18eb0, 1073741824
  %v2_18eb8 = icmp eq i32 %v1_18eb8, 0
  %v2_18ebc = or i32 %v4_18eb0, -2147483648
  %tmp84 = bitcast i32 %v4_18eb0 to float
  %tmp85 = call float @fabsf(float %tmp84)
  %v2_18ec0 = bitcast float %tmp85 to i32
  %storemerge39 = select i1 %v2_18eb8, i32 %v2_18ec0, i32 %v2_18ebc
  %v1_18ec4 = add i32 %v2_18eb0, -1
  %v2_18ec8 = add i32 %storemerge39, %v1_18ec4
  br label %dec_label_pc_18ecc

dec_label_pc_18ecc:                               ; preds = %dec_label_pc_18e7c, %dec_label_pc_18eac
  %storemerge40 = phi i32 [ %v2_18ec8, %dec_label_pc_18eac ], [ -1, %dec_label_pc_18e7c ]
  %v2_18ecc = add i32 %storemerge, %v2_18e8c
  %v0_18ed0 = load i32, i32* %r4.global-to-local, align 4
  %v3_18ed0 = icmp ult i32 %v0_18ed0, %v2_18ecc
  br i1 %v3_18ed0, label %dec_label_pc_18ed8, label %dec_label_pc_18e70

dec_label_pc_18ed8:                               ; preds = %dec_label_pc_18ecc
  %v9_18ed8 = icmp eq i32 %v3_18e84, %v1_18ed8.ph
  br i1 %v9_18ed8, label %dec_label_pc_18e60.loopexit, label %dec_label_pc_18ee0

dec_label_pc_18ee0:                               ; preds = %dec_label_pc_18ed8
  %v1_18ee0 = add nsw i32 %v3_18e84, -1
  br label %dec_label_pc_18e7c

dec_label_pc_18ee8:                               ; preds = %dec_label_pc_18e70
  %v2_18ee8 = load i32, i32* %v3_18e8c, align 4
  %v1_18eec = and i32 %v2_18ee8, 1073741824
  %v2_18eec = icmp eq i32 %v1_18eec, 0
  %v2_18ef0 = or i32 %v2_18ee8, -2147483648
  %tmp86 = bitcast i32 %v2_18ee8 to float
  %tmp87 = call float @fabsf(float %tmp86)
  %v2_18ef4 = bitcast float %tmp87 to i32
  %v0_18ef8 = select i1 %v2_18eec, i32 %v2_18ef4, i32 %v2_18ef0
  %v2_18ef8 = add i32 %v0_18ef8, %v2_18e8c
  %v1_18efc = load i32, i32* %r6.global-to-local, align 4
  %v2_18efc = add i32 %v1_18efc, 72
  %v3_18efc = inttoptr i32 %v2_18efc to i32*
  store i32 %v2_18ef8, i32* %v3_18efc, align 4
  %v0_18f00 = load i32, i32* %r7.global-to-local, align 4
  %v1_18f00 = add i32 %v0_18f00, 4
  %v2_18f00 = inttoptr i32 %v1_18f00 to i32*
  %v3_18f00 = load i32, i32* %v2_18f00, align 4
  %v7_18f04 = icmp eq i32 %v3_18f00, 1
  br i1 %v7_18f04, label %.thread10, label %dec_label_pc_18f18

.thread10:                                        ; preds = %dec_label_pc_18ee8
  %v1_18f04 = add i32 %v3_18f00, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18f10 = load i32, i32* %r6.global-to-local, align 4
  %v3_18f10 = add i32 %v2_18f10, 16
  %v4_18f10 = inttoptr i32 %v3_18f10 to i32*
  store i32 %v1_18f04, i32* %v4_18f10, align 4
  br label %dec_label_pc_18e18

dec_label_pc_18f18:                               ; preds = %dec_label_pc_18ee8
  %v1_18f18 = icmp slt i32 %v3_18f00, 0
  br i1 %v1_18f18, label %.thread38, label %dec_label_pc_18f30

.thread38:                                        ; preds = %dec_label_pc_18f18
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18f24 = load i32, i32* %r6.global-to-local, align 4
  %v5_18f24 = add i32 %v4_18f24, 76
  %v6_18f24 = inttoptr i32 %v5_18f24 to i32*
  store i32 %v1_18f00, i32* %v6_18f24, align 4
  %v3_18f28 = load i32, i32* %r2.global-to-local, align 4
  %v4_18f28 = load i32, i32* %r6.global-to-local, align 4
  %v5_18f28 = add i32 %v4_18f28, 80
  %v6_18f28 = inttoptr i32 %v5_18f28 to i32*
  store i32 %v3_18f28, i32* %v6_18f28, align 4
  br label %dec_label_pc_18f50

dec_label_pc_18f30:                               ; preds = %dec_label_pc_18f18
  %v1_18f30 = and i32 %v3_18f00, 1073741824
  %v2_18f30 = icmp eq i32 %v1_18f30, 0
  %v2_18f34 = or i32 %v3_18f00, -2147483648
  %tmp88 = bitcast i32 %v3_18f00 to float
  %tmp89 = call float @fabsf(float %tmp88)
  %v2_18f38 = bitcast float %tmp89 to i32
  %storemerge42 = select i1 %v2_18f30, i32 %v2_18f38, i32 %v2_18f34
  %v1_18f3c = add i32 %storemerge42, 4
  %v2_18f40 = add i32 %v1_18f3c, %v0_18f00
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_18f48 = load i32, i32* %r6.global-to-local, align 4
  %v2_18f48 = add i32 %v1_18f48, 76
  %v3_18f48 = inttoptr i32 %v2_18f48 to i32*
  store i32 %v2_18f40, i32* %v3_18f48, align 4
  %v0_18f4c = load i32, i32* %r2.global-to-local, align 4
  %v1_18f4c = load i32, i32* %r6.global-to-local, align 4
  %v2_18f4c = add i32 %v1_18f4c, 80
  %v3_18f4c = inttoptr i32 %v2_18f4c to i32*
  store i32 %v0_18f4c, i32* %v3_18f4c, align 4
  br label %dec_label_pc_18f50

dec_label_pc_18f50:                               ; preds = %.thread38, %dec_label_pc_18f30
  %v0_18f50 = load i32, i32* %r6.global-to-local, align 4
  %v1_18f50 = add i32 %v0_18f50, 76
  %v2_18f50 = inttoptr i32 %v1_18f50 to i32*
  %v3_18f50 = load i32, i32* %v2_18f50, align 4
  store i32 %v3_18f50, i32* %r2.global-to-local, align 4
  %v1_18f54 = inttoptr i32 %v3_18f50 to i32*
  %v2_18f54 = load i32, i32* %v1_18f54, align 4
  %v1_18f58 = icmp slt i32 %v2_18f54, 0
  br i1 %v1_18f58, label %dec_label_pc_18f7c, label %dec_label_pc_18f60

dec_label_pc_18f60:                               ; preds = %dec_label_pc_18f50
  %v1_18f60 = and i32 %v2_18f54, 1073741824
  %v2_18f60 = icmp eq i32 %v1_18f60, 0
  %v2_18f64 = or i32 %v2_18f54, -2147483648
  %tmp90 = bitcast i32 %v2_18f54 to float
  %tmp91 = call float @fabsf(float %tmp90)
  %v2_18f68 = bitcast float %tmp91 to i32
  %v0_18f6c = select i1 %v2_18f60, i32 %v2_18f68, i32 %v2_18f64
  %v2_18f6c = add i32 %v0_18f6c, %v3_18f50
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_18f74 = add i32 %v0_18f50, 16
  %v3_18f74 = inttoptr i32 %v2_18f74 to i32*
  store i32 %v2_18f6c, i32* %v3_18f74, align 4
  br label %dec_label_pc_18e18

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18f50
  %v3_18f7c = udiv i32 %v2_18f54, 16777216
  %v1_18f80 = urem i32 %v3_18f7c, 16
  %v2_18f80 = icmp eq i32 %v1_18f80, 0
  br i1 %v2_18f80, label %dec_label_pc_18f88, label %dec_label_pc_18f9c

dec_label_pc_18f88:                               ; preds = %dec_label_pc_18f7c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18f90 = load i32, i32* %r5.global-to-local, align 4
  %v2_18f90 = add i32 %v0_18f90, -38516
  %v2_18f94 = add i32 %v0_18f50, 16
  %v3_18f94 = inttoptr i32 %v2_18f94 to i32*
  store i32 %v2_18f90, i32* %v3_18f94, align 4
  br label %dec_label_pc_18e18

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18f7c
  %v7_18f9c = icmp eq i32 %v1_18f80, 1
  br i1 %v7_18f9c, label %dec_label_pc_18fc0, label %dec_label_pc_18fa4

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18f9c
  %v7_18fa4 = icmp eq i32 %v1_18f80, 2
  br i1 %v7_18fa4, label %dec_label_pc_18fac, label %dec_label_pc_18e60

dec_label_pc_18fac:                               ; preds = %dec_label_pc_18fa4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18fb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_18fb4 = add i32 %v0_18fb4, -38532
  %v2_18fb8 = add i32 %v0_18f50, 16
  %v3_18fb8 = inttoptr i32 %v2_18fb8 to i32*
  store i32 %v2_18fb4, i32* %v3_18fb8, align 4
  br label %dec_label_pc_18e18

dec_label_pc_18fc0:                               ; preds = %dec_label_pc_18f9c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18fc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_18fc8 = add i32 %v0_18fc8, -38524
  %v2_18fcc = add i32 %v0_18f50, 16
  %v3_18fcc = inttoptr i32 %v2_18fcc to i32*
  store i32 %v2_18fc8, i32* %v3_18fcc, align 4
  br label %dec_label_pc_18e18

; uselistorder directives
  uselistorder i32 %v1_18f80, { 2, 1, 0 }
  uselistorder i32 %v0_18f50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18f00, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18ed0, { 1, 0 }
  uselistorder i32 %v3_18e88, { 1, 0 }
  uselistorder i32 %v3_18e84, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_18e7c, { 1, 0 }
  uselistorder i32 %v0_18e7c, { 1, 0 }
  uselistorder i32 %v2_18e50, { 1, 0 }
  uselistorder i32 %v0_18e8c.pre, { 1, 0 }
  uselistorder i32 %v3_18e3c, { 1, 0 }
  uselistorder i32 %v1_18df0, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 11, 12, 13, 14 }
  uselistorder i32 16777216, { 6, 1, 7, 0, 2, 3, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 47, 45, 48, 46, 51, 49, 52, 50, 54, 53, 56, 55 }
  uselistorder i32 80, { 4, 5, 7, 6, 9, 1, 2, 3, 8, 0, 10 }
  uselistorder i32 76, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 5, { 34, 0, 1, 32, 4, 2, 33, 17, 68, 18, 35, 20, 37, 19, 36, 6, 5, 57, 21, 58, 22, 59, 23, 60, 24, 61, 25, 62, 26, 63, 64, 38, 39, 40, 41, 27, 28, 29, 30, 42, 8, 43, 9, 44, 45, 10, 11, 46, 12, 47, 48, 49, 13, 50, 51, 52, 14, 53, 15, 54, 16, 55, 7, 56, 65, 31, 66, 67, 3 }
  uselistorder i32 4, { 205, 206, 207, 9, 208, 10, 209, 360, 11, 210, 361, 362, 495, 242, 243, 244, 147, 422, 423, 424, 65, 425, 426, 427, 428, 363, 364, 365, 211, 366, 367, 368, 369, 13, 12, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 0, 66, 67, 526, 1, 524, 525, 97, 245, 212, 213, 527, 528, 529, 14, 429, 430, 3, 15, 2, 16, 17, 18, 19, 20, 496, 497, 498, 499, 500, 501, 502, 504, 505, 503, 506, 507, 508, 21, 509, 68, 510, 202, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 22, 23, 261, 246, 148, 24, 381, 149, 382, 150, 384, 385, 386, 387, 388, 389, 390, 431, 4, 25, 432, 433, 434, 435, 436, 437, 438, 455, 456, 457, 458, 459, 463, 464, 98, 439, 440, 441, 442, 443, 444, 451, 452, 453, 454, 445, 446, 447, 448, 449, 450, 460, 461, 462, 247, 248, 61, 60, 62, 465, 530, 151, 531, 532, 63, 152, 466, 467, 204, 26, 27, 468, 469, 203, 28, 29, 99, 214, 74, 30, 235, 100, 236, 153, 237, 392, 393, 31, 394, 81, 102, 103, 215, 216, 238, 239, 218, 219, 220, 105, 232, 233, 234, 217, 104, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240, 241, 70, 69, 395, 79, 396, 32, 397, 72, 71, 398, 33, 391, 399, 400, 405, 106, 406, 107, 407, 108, 408, 109, 409, 110, 410, 111, 412, 101, 413, 414, 411, 401, 112, 402, 403, 404, 252, 154, 253, 64, 34, 254, 255, 35, 256, 75, 113, 114, 257, 258, 333, 262, 249, 250, 251, 36, 115, 37, 38, 116, 117, 118, 155, 259, 119, 260, 39, 263, 156, 264, 265, 73, 266, 267, 268, 157, 158, 120, 269, 121, 270, 82, 271, 272, 273, 159, 275, 160, 161, 274, 122, 276, 83, 277, 278, 162, 280, 163, 164, 279, 123, 84, 281, 165, 166, 167, 282, 283, 284, 124, 85, 168, 169, 170, 285, 286, 287, 125, 86, 288, 289, 171, 292, 172, 173, 290, 291, 5, 126, 293, 87, 294, 295, 296, 174, 298, 175, 176, 297, 6, 127, 128, 299, 88, 300, 301, 302, 303, 177, 304, 305, 306, 178, 179, 307, 308, 129, 309, 7, 89, 310, 130, 311, 312, 313, 314, 180, 315, 316, 317, 181, 182, 318, 319, 131, 320, 8, 90, 321, 132, 322, 323, 324, 325, 326, 183, 329, 184, 185, 134, 330, 327, 328, 133, 91, 331, 92, 332, 334, 335, 336, 337, 338, 136, 339, 137, 340, 186, 343, 187, 188, 138, 344, 341, 342, 135, 93, 345, 94, 346, 189, 40, 347, 190, 41, 348, 191, 42, 349, 192, 43, 350, 193, 44, 351, 194, 80, 45, 352, 353, 195, 46, 354, 196, 47, 355, 197, 48, 356, 198, 49, 357, 199, 50, 358, 200, 51, 359, 470, 383, 415, 416, 417, 418, 419, 420, 201, 421, 471, 472, 473, 95, 474, 140, 475, 141, 476, 477, 478, 96, 479, 142, 480, 481, 482, 143, 483, 144, 484, 52, 53, 54, 55, 56, 485, 486, 487, 57, 78, 77, 76, 488, 58, 59, 145, 489, 139, 490, 491, 492, 146, 493, 494, 533 }
  uselistorder i32 -2147483648, { 4, 5, 6, 7, 8, 2, 3, 9, 10, 11, 12, 0, 1 }
  uselistorder i32 1073741824, { 5, 6, 7, 8, 9, 4, 0, 3, 2, 1 }
  uselistorder i32 2, { 210, 8, 0, 1, 211, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 350, 351, 19, 335, 20, 21, 22, 85, 23, 24, 25, 26, 203, 27, 109, 204, 2, 352, 353, 205, 206, 83, 199, 193, 194, 195, 89, 196, 28, 84, 88, 90, 197, 3, 110, 207, 334, 321, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 336, 337, 239, 42, 202, 43, 44, 45, 46, 47, 48, 201, 49, 50, 51, 52, 53, 112, 113, 111, 91, 92, 212, 114, 213, 214, 115, 228, 120, 229, 117, 322, 116, 230, 118, 221, 119, 227, 215, 216, 217, 218, 219, 220, 100, 222, 101, 223, 102, 224, 103, 225, 104, 226, 97, 54, 55, 323, 325, 326, 121, 208, 122, 327, 123, 328, 124, 329, 125, 330, 331, 126, 332, 128, 127, 324, 232, 233, 234, 56, 129, 130, 131, 235, 132, 236, 200, 242, 133, 134, 135, 136, 137, 231, 138, 139, 141, 142, 143, 237, 140, 144, 145, 146, 147, 238, 93, 96, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 149, 251, 148, 252, 253, 254, 255, 257, 256, 150, 105, 258, 259, 260, 261, 263, 262, 152, 151, 264, 153, 154, 106, 265, 266, 155, 156, 107, 267, 268, 269, 270, 273, 271, 272, 4, 57, 58, 59, 60, 61, 62, 158, 157, 274, 275, 276, 277, 279, 278, 5, 63, 64, 65, 66, 67, 68, 160, 159, 280, 281, 282, 283, 284, 285, 162, 286, 163, 287, 164, 288, 69, 6, 70, 71, 72, 73, 74, 165, 289, 161, 290, 291, 292, 293, 294, 295, 167, 296, 168, 297, 169, 298, 75, 7, 76, 77, 78, 79, 80, 170, 299, 166, 300, 301, 86, 302, 303, 307, 304, 305, 306, 172, 171, 308, 309, 87, 310, 311, 174, 312, 175, 313, 317, 314, 315, 316, 176, 318, 173, 319, 98, 320, 177, 99, 333, 209, 94, 179, 180, 338, 181, 182, 339, 183, 184, 340, 185, 186, 341, 187, 188, 342, 189, 190, 343, 95, 344, 345, 108, 346, 191, 347, 81, 82, 192, 348, 178, 349, 198 }
  uselistorder i32 -1, { 204, 205, 138, 206, 203, 207, 107, 108, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 110, 111, 220, 221, 222, 223, 109, 161, 342, 224, 225, 226, 227, 228, 229, 230, 0, 160, 158, 112, 113, 202, 231, 143, 144, 1, 353, 354, 232, 139, 140, 2, 162, 347, 233, 348, 3, 175, 114, 4, 163, 365, 234, 115, 116, 355, 164, 356, 235, 201, 183, 184, 117, 118, 182, 179, 180, 181, 357, 358, 200, 165, 166, 167, 359, 360, 199, 236, 148, 378, 237, 238, 239, 149, 145, 146, 147, 177, 240, 379, 241, 242, 243, 244, 245, 246, 343, 141, 168, 349, 169, 350, 247, 364, 142, 185, 5, 248, 249, 250, 6, 251, 176, 366, 119, 120, 252, 253, 170, 159, 254, 255, 121, 122, 256, 123, 124, 257, 367, 368, 258, 259, 260, 261, 7, 8, 132, 136, 9, 10, 137, 133, 174, 178, 262, 14, 263, 15, 264, 361, 11, 265, 186, 344, 16, 266, 128, 17, 267, 268, 13, 269, 270, 271, 272, 12, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 345, 171, 346, 18, 292, 293, 152, 153, 150, 151, 294, 295, 19, 296, 156, 157, 154, 155, 297, 20, 298, 173, 362, 129, 21, 22, 299, 135, 23, 24, 25, 26, 27, 172, 351, 134, 300, 301, 125, 126, 127, 28, 29, 30, 33, 32, 31, 35, 34, 36, 37, 38, 302, 39, 40, 41, 42, 43, 44, 130, 45, 46, 47, 48, 49, 50, 51, 303, 52, 187, 352, 53, 54, 55, 304, 56, 57, 58, 59, 60, 305, 61, 62, 63, 306, 64, 65, 66, 307, 67, 68, 69, 70, 71, 308, 72, 73, 74, 75, 76, 309, 77, 78, 79, 310, 80, 81, 311, 312, 363, 82, 131, 369, 370, 192, 371, 313, 85, 314, 86, 315, 87, 316, 88, 317, 89, 318, 193, 372, 189, 373, 319, 90, 320, 91, 321, 92, 322, 93, 323, 94, 324, 95, 325, 96, 326, 97, 327, 98, 328, 99, 329, 100, 330, 191, 374, 102, 331, 103, 332, 101, 333, 104, 334, 105, 335, 188, 375, 336, 106, 337, 338, 83, 339, 84, 340, 190, 376, 341, 194, 377, 195, 196, 197, 198 }
  uselistorder i32 8, { 7, 96, 8, 97, 40, 38, 159, 41, 160, 39, 161, 43, 45, 46, 98, 42, 99, 44, 9, 89, 100, 162, 225, 104, 54, 70, 47, 180, 181, 182, 30, 183, 163, 164, 165, 90, 91, 10, 71, 11, 31, 244, 245, 243, 246, 247, 248, 249, 226, 227, 228, 229, 230, 231, 232, 12, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 72, 184, 73, 74, 166, 167, 168, 169, 48, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 75, 218, 76, 196, 197, 198, 199, 77, 207, 78, 200, 201, 202, 203, 204, 205, 206, 34, 211, 212, 213, 214, 215, 216, 217, 35, 250, 251, 252, 108, 109, 79, 88, 36, 13, 14, 25, 15, 87, 37, 16, 17, 26, 18, 55, 101, 102, 19, 20, 21, 170, 80, 103, 92, 53, 171, 172, 173, 27, 28, 175, 22, 81, 176, 177, 174, 105, 106, 82, 107, 23, 83, 110, 56, 111, 112, 113, 114, 115, 116, 119, 117, 118, 3, 120, 122, 121, 4, 123, 124, 125, 126, 127, 128, 129, 5, 130, 131, 132, 133, 134, 135, 136, 6, 137, 138, 139, 141, 140, 142, 143, 144, 146, 145, 57, 147, 58, 148, 59, 149, 60, 150, 61, 151, 62, 152, 63, 153, 64, 154, 65, 155, 66, 156, 67, 157, 84, 158, 0, 1, 86, 24, 178, 85, 179, 2, 32, 49, 50, 33, 51, 52, 219, 93, 94, 220, 221, 222, 68, 223, 29, 95, 69, 224 }
  uselistorder i32 24, { 5, 71, 72, 8, 73, 6, 9, 7, 12, 13, 43, 44, 14, 10, 11, 92, 93, 16, 94, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 17, 96, 40, 41, 18, 45, 59, 74, 75, 60, 46, 47, 48, 49, 50, 51, 52, 53, 54, 19, 55, 20, 56, 21, 57, 58, 61, 62, 76, 77, 78, 79, 22, 23, 0, 24, 25, 26, 63, 64, 27, 28, 29, 30, 31, 1, 32, 2, 33, 34, 3, 65, 35, 68, 66, 67, 36, 4, 69, 37, 70, 80, 38, 81, 15, 42, 39, 82 }
  uselistorder i32 12, { 4, 12, 13, 103, 104, 148, 149, 150, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 14, 15, 86, 16, 105, 106, 107, 108, 17, 109, 110, 18, 122, 127, 19, 111, 112, 113, 114, 121, 115, 116, 117, 118, 119, 120, 20, 123, 124, 21, 125, 126, 22, 5, 49, 23, 8, 32, 33, 43, 44, 87, 88, 45, 35, 41, 42, 34, 36, 37, 38, 39, 40, 46, 89, 90, 91, 6, 92, 93, 94, 95, 97, 98, 99, 102, 101, 96, 24, 25, 47, 48, 3, 26, 27, 28, 29, 100, 50, 9, 51, 52, 53, 54, 55, 56, 57, 58, 59, 30, 60, 61, 62, 63, 64, 31, 65, 66, 67, 68, 69, 70, 10, 71, 72, 73, 74, 75, 76, 11, 77, 78, 79, 80, 81, 82, 83, 84, 7, 85, 0, 1, 2, 128, 129, 130, 131, 132, 134, 133, 135 }
  uselistorder i32 16, { 113, 114, 115, 8, 116, 117, 118, 119, 0, 1, 214, 55, 57, 215, 58, 216, 56, 61, 62, 120, 63, 121, 59, 60, 9, 10, 217, 218, 230, 231, 219, 52, 220, 267, 268, 269, 270, 109, 255, 256, 257, 258, 259, 260, 261, 262, 110, 263, 264, 265, 266, 111, 73, 221, 232, 49, 54, 11, 12, 233, 234, 13, 100, 14, 53, 235, 15, 16, 101, 17, 18, 19, 102, 20, 21, 22, 103, 23, 24, 126, 74, 133, 134, 135, 136, 137, 25, 50, 26, 27, 2, 28, 29, 30, 51, 31, 3, 32, 33, 34, 75, 222, 76, 122, 123, 77, 124, 223, 125, 225, 226, 227, 112, 78, 79, 35, 104, 36, 37, 80, 224, 81, 127, 64, 128, 82, 83, 129, 84, 85, 86, 87, 88, 130, 89, 131, 90, 132, 91, 228, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 92, 148, 149, 93, 150, 65, 151, 94, 152, 153, 95, 154, 66, 155, 156, 157, 158, 159, 38, 160, 161, 4, 67, 162, 163, 164, 165, 166, 167, 168, 5, 96, 169, 170, 171, 39, 40, 172, 173, 105, 47, 41, 42, 106, 174, 97, 175, 176, 6, 69, 177, 68, 178, 179, 180, 43, 44, 181, 182, 107, 48, 45, 46, 108, 183, 98, 184, 185, 7, 71, 186, 70, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 210, 212, 213, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 99, 246, 247, 248, 249, 72, 250, 251, 252, 253, 254 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 1, 5, 2, 3, 7, 8, 9, 10, 11, 12, 13, 4, 6 }
  uselistorder i32 -2, { 27, 0, 1, 6, 7, 3, 2, 5, 4, 8, 9, 14, 15, 11, 10, 13, 12, 26, 25, 16, 60, 24, 23, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 48, 49, 51, 52, 53, 50, 58, 59, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 22, 21, 20, 19, 18, 17 }
  uselistorder i32 32, { 55, 76, 77, 78, 53, 79, 80, 81, 63, 54, 64, 65, 66, 67, 49, 88, 68, 69, 82, 83, 4, 5, 70, 84, 85, 6, 86, 87, 111, 102, 103, 104, 50, 105, 51, 106, 52, 107, 7, 108, 109, 110, 9, 8, 89, 90, 96, 48, 97, 91, 92, 93, 94, 95, 72, 98, 56, 71, 11, 10, 13, 12, 15, 14, 17, 16, 62, 19, 18, 20, 57, 21, 73, 22, 75, 74, 23, 24, 25, 0, 26, 1, 27, 2, 28, 3, 29, 30, 31, 32, 34, 33, 36, 35, 38, 37, 39, 41, 40, 58, 99, 59, 100, 60, 101, 43, 42, 45, 44, 46, 47, 61 }
  uselistorder i32 ptrtoint (i32* @global_var_23010.696 to i32), { 1, 2, 4, 5, 6, 0, 3, 7 }
  uselistorder i32* @r7, { 26, 223, 224, 225, 226, 227, 5, 228, 229, 230, 231, 232, 233, 234, 235, 236, 27, 28, 29, 30, 31, 6, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 237, 238, 239, 240, 83, 84, 85, 86, 286, 287, 2, 288, 241, 242, 243, 245, 244, 246, 0, 247, 22, 248, 249, 250, 372, 289, 290, 291, 87, 88, 292, 293, 294, 295, 296, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 251, 252, 253, 254, 255, 256, 257, 258, 259, 3, 1, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 311, 312, 313, 317, 318, 7, 303, 304, 308, 309, 310, 8, 305, 306, 307, 9, 314, 315, 316, 373, 374, 113, 114, 115, 116, 319, 320, 321, 322, 323, 324, 325, 23, 326, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 79, 80, 68, 70, 10, 64, 65, 66, 67, 69, 78, 71, 72, 73, 74, 75, 76, 81, 82, 265, 266, 267, 268, 269, 270, 271, 92, 93, 94, 95, 96, 97, 98, 99, 100, 126, 127, 11, 128, 129, 130, 131, 132, 89, 90, 91, 101, 102, 103, 104, 105, 12, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 13, 141, 14, 142, 143, 144, 145, 146, 15, 147, 148, 149, 17, 16, 150, 151, 152, 153, 154, 19, 18, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 24, 169, 170, 171, 172, 173, 174, 25, 175, 176, 177, 178, 179, 180, 181, 4, 182, 183, 184, 185, 187, 186, 188, 189, 190, 191, 192, 193, 194, 197, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 274, 272, 273, 21, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 20, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361 }
  uselistorder i32* @r6, { 25, 26, 27, 483, 484, 485, 98, 99, 4, 100, 365, 366, 367, 368, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 3, 296, 297, 369, 5, 370, 371, 372, 374, 373, 375, 376, 377, 28, 29, 378, 379, 380, 381, 382, 383, 384, 385, 386, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 298, 299, 300, 301, 101, 102, 103, 104, 20, 21, 22, 30, 302, 303, 304, 305, 306, 307, 0, 308, 309, 310, 387, 388, 389, 390, 391, 6, 404, 405, 410, 411, 412, 413, 414, 415, 7, 392, 393, 394, 395, 400, 401, 402, 403, 396, 397, 398, 399, 406, 407, 408, 409, 496, 497, 311, 312, 313, 314, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 84, 315, 316, 317, 318, 319, 320, 321, 85, 61, 322, 86, 87, 88, 89, 90, 65, 66, 82, 83, 62, 63, 64, 9, 8, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 97, 323, 324, 325, 2, 1, 326, 327, 328, 329, 330, 331, 332, 16, 333, 334, 335, 336, 337, 344, 345, 346, 347, 348, 349, 350, 351, 338, 339, 340, 341, 342, 343, 110, 111, 10, 112, 113, 114, 115, 116, 117, 118, 119, 105, 106, 107, 108, 109, 120, 121, 122, 123, 124, 125, 126, 11, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 17, 137, 138, 139, 12, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 23, 178, 179, 180, 181, 184, 182, 183, 185, 186, 187, 188, 189, 190, 191, 24, 192, 193, 194, 195, 198, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 13, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 19, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 18, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 14, 15, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482 }
  uselistorder i32* @r5, { 26, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 27, 28, 29, 30, 31, 32, 33, 34, 3, 35, 808, 809, 810, 142, 143, 144, 145, 534, 4, 535, 536, 538, 539, 537, 540, 541, 542, 543, 5, 544, 545, 546, 547, 6, 548, 549, 550, 551, 552, 811, 822, 823, 637, 638, 639, 640, 7, 641, 642, 36, 37, 643, 0, 644, 645, 646, 647, 648, 649, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 553, 554, 555, 556, 146, 147, 148, 149, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 1, 569, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 8, 672, 673, 674, 675, 676, 677, 678, 687, 688, 689, 690, 691, 692, 660, 661, 670, 671, 662, 663, 9, 664, 665, 666, 667, 668, 669, 679, 680, 10, 681, 682, 683, 684, 685, 686, 693, 11, 694, 695, 824, 825, 188, 189, 190, 191, 696, 12, 697, 698, 699, 700, 701, 570, 571, 572, 573, 574, 575, 702, 703, 704, 705, 706, 707, 708, 709, 710, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 576, 577, 139, 140, 141, 136, 137, 138, 578, 579, 580, 581, 582, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 599, 600, 601, 602, 603, 583, 584, 585, 586, 587, 588, 589, 590, 591, 154, 155, 156, 157, 158, 159, 160, 161, 162, 608, 609, 610, 150, 151, 152, 153, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 2, 192, 193, 194, 195, 196, 23, 197, 198, 199, 200, 201, 202, 203, 24, 204, 25, 205, 206, 13, 207, 14, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 15, 331, 336, 337, 338, 339, 340, 341, 342, 332, 333, 334, 335, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 440, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 16, 611, 612, 613, 614, 615, 616, 17, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 711, 712, 636, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 18, 744, 745, 746, 747, 748, 749, 750, 751, 19, 752, 753, 20, 754, 755, 21, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 22, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807 }
  uselistorder i32* @r4, { 51, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 52, 53, 54, 55, 56, 12, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 524, 525, 13, 70, 71, 69, 72, 50, 73, 41, 74, 526, 527, 846, 847, 848, 528, 529, 113, 114, 115, 116, 660, 661, 530, 531, 532, 533, 535, 536, 537, 534, 538, 539, 0, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 8, 849, 850, 851, 852, 864, 865, 866, 853, 861, 862, 863, 662, 663, 664, 665, 568, 569, 666, 667, 669, 668, 75, 14, 76, 77, 867, 868, 670, 671, 672, 673, 674, 675, 676, 677, 678, 854, 855, 1, 856, 857, 2, 858, 3, 859, 860, 78, 79, 553, 556, 557, 80, 554, 555, 117, 118, 679, 680, 681, 682, 48, 49, 683, 684, 685, 686, 687, 688, 164, 165, 166, 558, 559, 560, 561, 562, 563, 564, 689, 690, 691, 570, 571, 572, 294, 295, 296, 692, 693, 573, 694, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 695, 729, 696, 697, 698, 699, 715, 717, 716, 15, 718, 719, 724, 725, 726, 727, 7, 728, 16, 700, 701, 702, 703, 704, 705, 706, 707, 712, 713, 714, 708, 709, 710, 711, 720, 721, 722, 723, 730, 731, 732, 733, 119, 120, 734, 735, 736, 737, 738, 739, 740, 869, 870, 871, 872, 190, 191, 192, 193, 194, 195, 741, 742, 743, 9, 744, 588, 589, 590, 591, 592, 593, 196, 197, 198, 199, 200, 745, 746, 17, 747, 748, 749, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 750, 751, 752, 753, 111, 112, 594, 595, 596, 597, 102, 103, 104, 105, 106, 107, 108, 109, 110, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 616, 617, 618, 619, 620, 621, 622, 623, 624, 631, 632, 633, 634, 635, 636, 10, 625, 626, 627, 628, 629, 630, 612, 613, 614, 615, 137, 138, 139, 40, 4, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 472, 473, 637, 638, 639, 640, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 18, 19, 20, 21, 22, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 201, 202, 11, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 23, 266, 24, 267, 268, 271, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 5, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 6, 300, 301, 302, 303, 304, 305, 306, 307, 25, 308, 26, 309, 310, 27, 311, 312, 314, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 28, 334, 29, 335, 30, 336, 31, 337, 338, 350, 351, 339, 340, 32, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 33, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 34, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 35, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 36, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 37, 454, 455, 458, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 38, 476, 477, 480, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 754, 755, 756, 565, 566, 567, 641, 642, 643, 644, 647, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 42, 786, 787, 47, 788, 789, 790, 791, 46, 39, 792, 793, 794, 795, 796, 797, 798, 45, 799, 800, 801, 44, 802, 803, 804, 43, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845 }
  uselistorder i32 ()* @function_1a234, { 1, 0 }
  uselistorder i32 1, { 847, 848, 849, 850, 697, 696, 285, 287, 288, 286, 289, 851, 208, 852, 853, 460, 41, 40, 1025, 1026, 1027, 405, 1028, 349, 350, 352, 351, 348, 854, 855, 856, 857, 406, 329, 330, 332, 331, 328, 24, 698, 347, 1131, 333, 407, 0, 408, 240, 242, 239, 241, 373, 374, 858, 470, 469, 520, 699, 230, 700, 259, 258, 701, 343, 346, 342, 344, 345, 471, 1281, 1132, 1133, 1029, 1030, 688, 260, 521, 472, 522, 1, 2, 880, 706, 705, 704, 703, 702, 327, 326, 1134, 393, 708, 707, 18, 19, 1135, 1136, 461, 1137, 392, 709, 278, 276, 283, 284, 279, 280, 281, 282, 277, 710, 1031, 711, 300, 299, 298, 712, 216, 217, 218, 219, 220, 1032, 1033, 409, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 523, 1043, 1044, 1045, 713, 22, 21, 23, 410, 137, 136, 524, 1297, 3, 4, 355, 714, 715, 184, 716, 525, 717, 353, 354, 526, 14, 16, 15, 17, 718, 164, 165, 163, 411, 859, 527, 166, 474, 473, 528, 719, 185, 1298, 397, 720, 144, 145, 152, 143, 149, 148, 147, 146, 150, 151, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 42, 43, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 721, 70, 64, 65, 66, 67, 74, 68, 76, 77, 72, 78, 71, 69, 73, 75, 475, 722, 914, 915, 389, 916, 723, 363, 725, 724, 63, 529, 114, 726, 1129, 727, 362, 361, 360, 1146, 95, 94, 96, 275, 375, 1046, 1047, 1048, 1049, 728, 689, 358, 359, 729, 730, 168, 170, 171, 167, 169, 1051, 1052, 1053, 1054, 1055, 412, 1056, 731, 196, 195, 197, 199, 198, 1147, 231, 232, 413, 1148, 1149, 416, 417, 532, 1150, 415, 1151, 1152, 1153, 1175, 1176, 533, 1177, 534, 1179, 414, 1178, 531, 1181, 530, 1180, 1190, 1191, 535, 1192, 1193, 1194, 418, 536, 1195, 732, 367, 370, 369, 368, 366, 365, 419, 420, 539, 1154, 540, 1155, 538, 1157, 537, 1156, 421, 1158, 422, 1159, 423, 424, 425, 1160, 394, 1161, 395, 1170, 1171, 1172, 1173, 1174, 189, 190, 192, 191, 194, 193, 429, 430, 543, 1162, 428, 1163, 1164, 1165, 431, 542, 1167, 541, 1166, 426, 427, 1168, 1169, 733, 158, 161, 156, 155, 160, 159, 157, 162, 435, 436, 546, 1182, 434, 1183, 1184, 1185, 437, 545, 1187, 544, 1186, 432, 433, 1188, 1189, 734, 123, 119, 121, 120, 125, 124, 122, 118, 126, 736, 735, 117, 116, 115, 737, 364, 938, 301, 1196, 738, 172, 174, 173, 154, 153, 547, 1299, 1300, 1301, 741, 740, 739, 59, 62, 61, 60, 58, 5, 6, 548, 742, 54, 52, 56, 57, 53, 55, 549, 924, 743, 311, 1197, 376, 1198, 377, 1199, 341, 1200, 1201, 1202, 1203, 388, 1204, 745, 744, 45, 51, 49, 48, 46, 47, 50, 378, 396, 1205, 1206, 1207, 1208, 372, 371, 7, 1209, 1210, 1211, 1212, 1213, 398, 1214, 399, 1215, 747, 746, 925, 926, 927, 550, 748, 33, 34, 32, 31, 1216, 1217, 438, 8, 1218, 385, 519, 1219, 36, 35, 37, 1220, 1221, 1222, 551, 1223, 243, 1120, 312, 1225, 1224, 1226, 20, 1227, 274, 1228, 749, 212, 211, 210, 209, 213, 1229, 750, 203, 202, 201, 200, 204, 439, 552, 875, 553, 876, 476, 877, 1057, 555, 1058, 565, 878, 440, 566, 567, 861, 863, 556, 860, 558, 862, 559, 864, 557, 865, 866, 560, 867, 868, 563, 869, 870, 561, 871, 872, 562, 873, 874, 564, 879, 1060, 1059, 1061, 568, 1062, 1063, 1064, 569, 1065, 846, 1068, 1067, 554, 1066, 1069, 1070, 570, 1071, 1074, 1075, 571, 1076, 572, 1077, 573, 1078, 574, 1079, 575, 1080, 576, 1081, 577, 1082, 578, 1083, 579, 1084, 580, 1085, 581, 1086, 582, 1087, 583, 1088, 584, 1089, 585, 1090, 586, 1091, 587, 1092, 588, 1093, 589, 1094, 590, 1095, 591, 1096, 592, 1097, 593, 1098, 594, 1099, 595, 1100, 596, 1101, 597, 1102, 598, 1103, 599, 1104, 600, 1105, 601, 1106, 602, 1107, 603, 1108, 604, 1109, 605, 1110, 606, 1111, 441, 1118, 1119, 390, 607, 763, 762, 761, 760, 759, 758, 757, 756, 755, 754, 753, 752, 751, 339, 335, 336, 340, 334, 337, 338, 1112, 1113, 608, 1114, 1115, 609, 1116, 1117, 225, 224, 223, 229, 226, 227, 228, 222, 221, 610, 611, 765, 764, 356, 357, 881, 882, 478, 883, 884, 885, 886, 887, 888, 889, 379, 387, 890, 891, 442, 380, 892, 477, 893, 894, 895, 896, 381, 386, 897, 898, 443, 382, 899, 612, 900, 901, 613, 902, 614, 903, 615, 904, 905, 616, 906, 617, 907, 400, 910, 908, 909, 383, 384, 911, 618, 912, 773, 691, 772, 771, 770, 769, 768, 767, 690, 766, 263, 261, 262, 269, 264, 267, 266, 265, 268, 774, 270, 1017, 454, 401, 775, 105, 104, 103, 102, 106, 100, 98, 97, 99, 101, 939, 940, 941, 942, 619, 777, 776, 83, 84, 81, 85, 82, 86, 91, 92, 93, 79, 80, 87, 88, 90, 89, 620, 621, 622, 481, 480, 479, 623, 784, 783, 692, 782, 781, 780, 779, 778, 693, 44, 626, 625, 624, 913, 786, 785, 627, 917, 458, 918, 457, 919, 456, 920, 455, 921, 922, 628, 459, 629, 923, 630, 631, 632, 633, 634, 635, 391, 636, 798, 797, 796, 795, 794, 793, 792, 791, 790, 789, 788, 787, 215, 214, 928, 934, 10, 444, 929, 637, 930, 9, 931, 462, 932, 445, 446, 933, 935, 936, 463, 937, 802, 801, 694, 695, 800, 799, 1072, 482, 483, 237, 236, 235, 238, 234, 1073, 11, 12, 13, 943, 944, 638, 945, 639, 946, 947, 948, 949, 464, 465, 640, 950, 641, 951, 952, 642, 953, 954, 643, 955, 957, 956, 806, 805, 804, 803, 130, 131, 132, 128, 129, 133, 135, 127, 134, 958, 960, 644, 959, 645, 808, 807, 139, 141, 142, 138, 140, 961, 963, 646, 964, 962, 647, 485, 484, 648, 809, 247, 245, 248, 249, 244, 246, 965, 966, 649, 967, 488, 486, 487, 968, 810, 271, 273, 272, 969, 970, 650, 971, 491, 489, 490, 972, 811, 205, 207, 206, 973, 975, 651, 976, 974, 652, 493, 977, 492, 978, 812, 321, 323, 324, 325, 320, 322, 979, 981, 653, 982, 980, 654, 495, 494, 655, 983, 656, 984, 813, 251, 252, 255, 256, 257, 250, 253, 254, 985, 986, 987, 988, 989, 657, 990, 658, 991, 659, 504, 503, 660, 992, 502, 993, 501, 994, 500, 995, 496, 996, 497, 997, 498, 998, 499, 999, 817, 816, 815, 814, 305, 303, 304, 306, 307, 309, 308, 302, 310, 1000, 1001, 1002, 1003, 1004, 661, 1005, 662, 1006, 663, 509, 508, 664, 1007, 505, 1008, 506, 1009, 507, 1010, 821, 820, 819, 818, 178, 176, 177, 179, 180, 182, 181, 175, 183, 1011, 1014, 1012, 1013, 665, 510, 511, 666, 1015, 512, 1016, 822, 315, 313, 317, 318, 319, 316, 314, 1018, 1021, 1019, 1020, 667, 515, 514, 668, 1022, 513, 1023, 827, 826, 825, 824, 823, 107, 111, 112, 113, 110, 109, 108, 1024, 516, 669, 186, 187, 188, 1230, 828, 38, 1050, 829, 39, 1121, 1124, 670, 1125, 1126, 1122, 1123, 1127, 1128, 28, 27, 30, 26, 29, 1130, 671, 830, 1231, 25, 1232, 677, 1233, 1234, 675, 1235, 676, 1236, 1237, 1238, 467, 678, 1239, 679, 1240, 450, 1241, 1242, 518, 1243, 1244, 449, 1245, 1246, 680, 1247, 1248, 1249, 1250, 1251, 403, 1252, 681, 1253, 682, 683, 1254, 1255, 1256, 1257, 451, 1258, 1259, 452, 1260, 1261, 453, 1262, 404, 448, 447, 1263, 1264, 674, 1265, 1266, 1267, 672, 1268, 402, 673, 517, 1269, 1271, 1272, 1270, 684, 1273, 685, 1274, 686, 1275, 1276, 845, 1277, 468, 1278, 1279, 466, 687, 1280, 842, 841, 840, 839, 838, 837, 836, 835, 834, 833, 832, 831, 290, 292, 295, 297, 296, 291, 293, 294, 843, 844, 233 }
  uselistorder label %dec_label_pc_18f50, { 1, 0 }
  uselistorder label %dec_label_pc_18ecc, { 1, 0 }
  uselistorder label %dec_label_pc_18e7c, { 1, 0 }
  uselistorder label %dec_label_pc_18e60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e18, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_18fd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_18fd8:
  %v0_18fd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18fd8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18fd8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18fd8, %bb
  %v10_18fe0 = phi i32 [ %arg1, %dec_label_pc_18fd8 ], [ 0, %bb ]
  ret i32 %v10_18fe0

; uselistorder directives
  uselistorder i1 false, { 46, 47, 48, 50, 49, 51, 12, 13, 35, 15, 18, 17, 16, 24, 36, 37, 38, 14, 39, 40, 41, 42, 0, 2, 30, 29, 20, 21, 3, 26, 1, 10, 11, 19, 4, 5, 6, 31, 23, 43, 44, 45, 7, 8, 9, 32, 33, 34, 22, 27, 28, 25, 52 }
  uselistorder i1* @cpsr_z, { 2, 3, 5, 6, 4, 7, 8, 19, 20, 1, 9, 10, 11, 12, 21, 22, 13, 23, 25, 27, 26, 24, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 51, 52, 53, 61, 62, 63, 64, 33, 34, 35, 36, 37, 38, 0, 39, 47, 48, 49, 50, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 65, 66 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1a234() local_unnamed_addr {
dec_label_pc_1a234:
  %v1_1a238 = call i32 @function_1590c(i32 6)
  %v1_1a240 = call i32 @function_1590c(i32 9)
  br label %dec_label_pc_1a244

dec_label_pc_1a244:                               ; preds = %dec_label_pc_1a244, %dec_label_pc_1a234
  br label %dec_label_pc_1a244

; uselistorder directives
  uselistorder i32 9, { 11, 37, 38, 58, 59, 0, 64, 7, 65, 8, 39, 13, 40, 12, 14, 41, 34, 60, 5, 35, 61, 36, 15, 63, 16, 42, 43, 3, 17, 18, 1, 19, 20, 21, 22, 2, 23, 24, 62, 4, 44, 45, 9, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 6, 57, 32, 31, 30, 29, 28, 27, 26, 25, 33, 66, 67, 10, 68 }
  uselistorder i32 (i32)* @function_1590c, { 3, 2, 0, 1 }
  uselistorder i32 6, { 15, 84, 0, 16, 86, 85, 87, 17, 42, 18, 43, 3, 82, 19, 83, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 5, 35, 44, 45, 46, 6, 47, 48, 49, 50, 7, 51, 52, 53, 54, 8, 9, 55, 10, 56, 57, 58, 36, 59, 11, 60, 61, 37, 62, 12, 63, 64, 38, 65, 66, 39, 67, 68, 69, 70, 71, 40, 72, 13, 73, 74, 75, 76, 77, 78, 41, 79, 14, 80, 4, 81, 2 }
}

define i32 @function_1a248() local_unnamed_addr {
entry:
  %v3_1a248 = load i32, i32* @r0, align 4
  ret i32 %v3_1a248

; uselistorder directives
  uselistorder i32 0, { 128, 785, 786, 165, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 42, 105, 445, 797, 166, 798, 799, 800, 0, 801, 802, 1, 167, 803, 804, 805, 748, 1115, 1116, 175, 1117, 2, 1118, 176, 168, 1119, 174, 171, 172, 173, 170, 1120, 169, 1121, 1122, 806, 179, 807, 3, 808, 180, 809, 749, 810, 130, 811, 750, 812, 813, 177, 814, 815, 816, 178, 129, 817, 131, 132, 818, 819, 820, 1261, 1262, 163, 123, 124, 1263, 181, 1264, 1265, 1266, 1267, 1268, 4, 821, 822, 823, 722, 824, 47, 825, 826, 827, 828, 5, 829, 830, 831, 832, 833, 723, 6, 834, 724, 835, 751, 836, 837, 838, 839, 840, 841, 842, 43, 48, 845, 446, 844, 89, 90, 843, 447, 847, 367, 846, 1123, 448, 1124, 1125, 1580, 368, 1581, 449, 49, 1269, 1126, 183, 182, 876, 877, 114, 878, 879, 185, 184, 880, 881, 882, 186, 883, 1270, 7, 8, 187, 81, 441, 393, 394, 1271, 1272, 189, 1273, 188, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 190, 1282, 1283, 1284, 1285, 1286, 1287, 195, 196, 197, 198, 199, 1288, 194, 191, 192, 193, 1289, 1290, 50, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 1291, 201, 200, 202, 1292, 125, 1293, 1127, 1128, 1129, 450, 1130, 1131, 459, 460, 461, 454, 455, 456, 1132, 457, 458, 1133, 462, 463, 464, 1134, 1135, 1136, 1137, 467, 1138, 1139, 206, 207, 1140, 1141, 208, 1142, 1143, 452, 451, 1144, 1145, 1146, 1147, 82, 1148, 1151, 51, 52, 1149, 1150, 468, 1152, 1153, 203, 204, 395, 465, 1154, 466, 453, 1155, 1156, 209, 205, 1157, 127, 83, 1158, 1159, 1160, 1161, 143, 1162, 1163, 144, 145, 1583, 1582, 1584, 210, 211, 360, 1620, 1621, 213, 212, 369, 469, 1619, 848, 214, 1294, 9, 396, 470, 471, 1295, 472, 215, 849, 850, 1297, 473, 1296, 91, 92, 1298, 1299, 1175, 884, 885, 886, 10, 11, 887, 1300, 1301, 1303, 1304, 752, 93, 115, 1305, 1302, 851, 852, 853, 854, 474, 855, 1622, 1623, 1624, 1625, 1306, 753, 1307, 1308, 754, 755, 1309, 1310, 1311, 1312, 756, 725, 1585, 1586, 1587, 726, 1588, 1589, 86, 87, 88, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 757, 727, 1602, 1603, 1604, 1605, 728, 1606, 729, 1607, 1608, 1609, 1610, 1611, 730, 1612, 1613, 1614, 1615, 758, 731, 1616, 1617, 1618, 1166, 856, 1164, 218, 398, 397, 217, 216, 1165, 910, 911, 219, 146, 220, 888, 889, 475, 12, 399, 476, 221, 890, 477, 478, 479, 13, 1254, 1313, 1314, 1315, 1316, 1317, 388, 387, 386, 1318, 222, 912, 53, 54, 55, 56, 57, 223, 1167, 1168, 480, 1169, 1170, 481, 1171, 1172, 224, 225, 1319, 1320, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 226, 1321, 227, 1322, 1323, 1324, 1325, 1326, 442, 400, 401, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 482, 1335, 1336, 1337, 1338, 1339, 1340, 1389, 1391, 1390, 1392, 1393, 1394, 1395, 1411, 483, 1412, 1413, 1414, 1415, 1416, 1417, 484, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 94, 147, 228, 1425, 1341, 1342, 1343, 1344, 1345, 229, 1346, 485, 1347, 1348, 1349, 1350, 486, 1351, 1352, 1353, 1354, 95, 1355, 1356, 1357, 1358, 1359, 1375, 1376, 487, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 149, 148, 1386, 1387, 1388, 1360, 1361, 1362, 1363, 488, 1364, 1365, 1366, 1367, 230, 1368, 1369, 489, 1370, 1371, 1372, 1373, 1374, 1396, 1397, 1398, 1399, 490, 1400, 1401, 1402, 1403, 231, 1404, 1405, 491, 1406, 1407, 1408, 1409, 1410, 1426, 232, 1427, 1428, 945, 946, 116, 947, 492, 493, 1429, 494, 1430, 1431, 233, 495, 1626, 496, 1627, 1628, 1629, 1630, 721, 370, 234, 1631, 919, 920, 235, 921, 44, 14, 922, 923, 150, 151, 236, 924, 925, 926, 15, 1432, 1433, 1434, 1435, 119, 1436, 237, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 238, 732, 759, 733, 734, 1444, 1445, 1446, 1447, 1448, 1449, 16, 1450, 1451, 120, 1452, 1453, 1454, 1455, 1456, 239, 1457, 735, 760, 736, 737, 1458, 761, 164, 240, 1459, 1460, 1461, 117, 384, 1462, 1463, 58, 152, 762, 371, 18, 17, 241, 1464, 242, 763, 19, 372, 243, 244, 245, 1465, 59, 1466, 246, 497, 1186, 927, 928, 929, 1468, 1467, 1469, 1470, 1471, 1472, 45, 247, 1473, 1474, 1475, 248, 1476, 106, 107, 443, 444, 250, 249, 251, 1477, 252, 1478, 1479, 253, 1245, 1246, 498, 254, 255, 256, 1480, 257, 1481, 1187, 260, 1188, 1189, 499, 1190, 868, 869, 258, 259, 870, 872, 857, 108, 60, 364, 363, 858, 859, 764, 860, 871, 500, 867, 765, 861, 766, 862, 767, 863, 768, 864, 769, 865, 770, 866, 873, 874, 501, 875, 121, 1191, 720, 1192, 502, 1193, 1194, 374, 373, 1195, 1196, 1197, 1198, 262, 261, 1199, 1200, 1201, 771, 361, 1202, 98, 99, 362, 1203, 96, 97, 503, 1205, 1206, 738, 1207, 1208, 1209, 1210, 1211, 504, 1212, 1213, 1215, 747, 1216, 1217, 1218, 746, 1219, 1220, 505, 1221, 506, 1222, 1225, 1226, 1227, 263, 1223, 264, 1224, 265, 1204, 894, 895, 896, 110, 61, 897, 109, 62, 898, 899, 507, 900, 508, 509, 901, 510, 902, 903, 905, 266, 267, 904, 385, 63, 100, 389, 906, 268, 20, 907, 948, 949, 952, 953, 954, 950, 951, 955, 956, 891, 21, 892, 269, 511, 893, 908, 512, 909, 513, 514, 274, 273, 772, 153, 276, 275, 773, 154, 278, 277, 774, 155, 280, 279, 775, 156, 776, 272, 271, 270, 376, 377, 378, 379, 515, 281, 916, 913, 914, 915, 375, 917, 64, 918, 282, 516, 118, 930, 931, 932, 933, 382, 934, 935, 936, 381, 937, 938, 939, 940, 283, 941, 943, 942, 157, 158, 284, 380, 517, 944, 518, 519, 402, 285, 286, 1214, 84, 287, 957, 958, 289, 290, 959, 960, 65, 288, 122, 291, 85, 520, 961, 962, 963, 964, 292, 293, 965, 966, 406, 967, 968, 969, 970, 297, 294, 295, 296, 971, 972, 973, 974, 521, 975, 976, 405, 977, 404, 978, 403, 979, 522, 980, 299, 981, 300, 983, 984, 66, 982, 298, 985, 301, 111, 302, 986, 409, 407, 987, 408, 988, 305, 989, 306, 991, 992, 67, 304, 990, 303, 993, 307, 308, 994, 412, 995, 410, 411, 996, 523, 997, 524, 112, 68, 998, 159, 413, 525, 999, 526, 1000, 1001, 309, 1002, 414, 1003, 527, 113, 69, 1004, 160, 415, 528, 1005, 1006, 310, 1007, 416, 1008, 312, 1009, 313, 1012, 1013, 70, 1010, 311, 1011, 161, 1014, 22, 23, 24, 25, 26, 1015, 314, 315, 1016, 418, 1017, 417, 1018, 529, 1019, 530, 1020, 531, 1021, 532, 1022, 533, 1023, 534, 1024, 318, 1026, 1027, 1028, 1029, 316, 319, 1030, 1031, 71, 72, 1025, 317, 1033, 1032, 27, 28, 29, 30, 31, 320, 321, 1034, 421, 1035, 420, 1036, 535, 1037, 536, 1038, 537, 1039, 538, 1040, 539, 1041, 419, 1042, 540, 1043, 325, 1045, 1046, 1047, 323, 322, 326, 1048, 1049, 73, 74, 1044, 324, 75, 541, 1051, 1053, 1054, 1055, 542, 1056, 543, 1057, 32, 33, 34, 35, 36, 1052, 1050, 327, 1058, 1059, 423, 1060, 422, 1061, 544, 1062, 331, 1064, 1065, 1066, 329, 328, 332, 1067, 1068, 76, 77, 1063, 330, 78, 545, 1070, 1072, 1073, 1074, 546, 1075, 547, 1076, 37, 38, 39, 40, 41, 1071, 1069, 333, 1077, 1078, 429, 1079, 428, 1080, 427, 1081, 426, 1082, 425, 1083, 424, 1084, 548, 1085, 1088, 1089, 1090, 335, 336, 1091, 1092, 79, 1086, 1087, 334, 1093, 1094, 337, 338, 1095, 432, 1096, 431, 1097, 430, 1098, 549, 1099, 1101, 1102, 1103, 340, 341, 342, 1105, 1106, 80, 1104, 1100, 339, 1107, 1108, 343, 344, 1109, 435, 1110, 434, 1111, 433, 1112, 550, 1113, 390, 1114, 1482, 345, 1483, 1173, 346, 1174, 1228, 1229, 1230, 1231, 1232, 1233, 349, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 347, 348, 1242, 1243, 1244, 1247, 126, 1248, 1249, 391, 551, 383, 1250, 1251, 46, 1252, 1253, 552, 1255, 350, 1484, 1256, 1257, 1258, 1259, 1260, 1485, 1486, 1487, 1488, 351, 352, 553, 1489, 1490, 739, 740, 741, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 777, 1503, 1504, 1505, 1506, 778, 1507, 1508, 1509, 742, 1510, 743, 353, 354, 355, 1511, 1512, 1513, 1514, 779, 1515, 1516, 162, 1517, 1518, 780, 1519, 356, 1520, 1521, 1522, 781, 554, 555, 1523, 1524, 782, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 556, 1539, 1534, 1535, 1536, 1537, 783, 1538, 784, 1540, 557, 1541, 1542, 1543, 1544, 558, 1545, 1546, 1547, 1548, 744, 1550, 1551, 1552, 1553, 1554, 392, 1555, 1558, 1559, 1556, 1557, 358, 357, 1560, 1561, 1562, 1563, 359, 1564, 1565, 365, 1566, 101, 102, 366, 1567, 103, 104, 559, 1568, 1549, 718, 719, 1569, 1570, 745, 1571, 1572, 1573, 1574, 1575, 560, 1576, 436, 1577, 437, 1578, 561, 438, 439, 1579, 440, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646 }
  uselistorder i32* @r0, { 95, 289, 290, 291, 292, 293, 294, 295, 296, 4, 297, 298, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 9, 299, 351, 352, 353, 40, 20, 17, 300, 301, 15, 68, 21, 22, 42, 191, 33, 302, 454, 455, 453, 108, 43, 62, 32, 27, 0, 13, 192, 69, 354, 16, 41, 109, 29, 303, 5, 70, 71, 1, 65, 345, 14, 72, 73, 74, 355, 75, 356, 304, 305, 28, 31, 76, 24, 44, 357, 18, 358, 12, 307, 308, 309, 310, 23, 77, 359, 360, 361, 78, 362, 363, 364, 381, 89, 388, 389, 90, 91, 390, 391, 79, 365, 366, 80, 6, 367, 81, 368, 369, 84, 377, 85, 86, 378, 379, 380, 370, 82, 371, 372, 373, 374, 83, 2, 375, 376, 382, 87, 383, 384, 385, 88, 3, 386, 387, 392, 193, 393, 247, 92, 394, 93, 94, 37, 38, 25, 11, 456, 457, 39, 458, 10, 30, 229, 26, 395, 19, 396, 397, 311, 398, 399, 400, 401, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 179, 180, 181, 182, 183, 184, 185, 186, 187, 312, 188, 162, 163, 189, 165, 166, 177, 178, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 190, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 326, 329, 327, 328, 318, 194, 202, 203, 204, 63, 64, 195, 196, 197, 198, 199, 200, 201, 205, 206, 45, 207, 208, 209, 210, 46, 47, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 48, 221, 49, 222, 223, 50, 224, 225, 226, 227, 228, 51, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 61, 244, 245, 246, 324, 325, 7, 248, 249, 250, 52, 251, 252, 253, 254, 255, 53, 256, 257, 258, 54, 259, 260, 261, 262, 263, 264, 265, 55, 266, 267, 268, 56, 269, 270, 271, 272, 273, 274, 57, 275, 276, 277, 278, 279, 280, 58, 281, 282, 283, 284, 59, 285, 286, 287, 288, 60, 306, 330, 331, 332, 333, 334, 335, 8, 336, 337, 338, 339, 340, 341, 342, 343, 344, 66, 67, 346, 347, 348, 402, 349, 403, 350, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 35, 36, 34, 452 }
}

declare i32 @unknown_ffff0fc0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
